void *NAAP()
{
  Class v0;
  Class v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  void *v15;
  void *v16;
  size_t v17;
  size_t v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  Class v34;
  uint64_t v35;
  void *v36;

  v0 = NSClassFromString(&cfstr_Nfsecureelemen.isa);
  if (v0)
  {
    v1 = v0;
    if (off_26B8E7660())
    {
      v2 = (void *)[(objc_class *)off_26B8E7660() sharedHardwareManager];
      v3 = [v2 getHwSupport];
      if (v3 == 2)
      {
LABEL_15:
        v15 = [[-[objc_class embeddedSecureElement](v1, "embeddedSecureElement") serialNumber];
        if (v15)
        {
          v16 = (void *)[v15 UTF8String];
          if (v16) {
            goto LABEL_17;
          }
          goto LABEL_45;
        }
        NSLog(&cfstr_ErrorFailedToR_0.isa);
        return 0;
      }
      if (v3 != 4)
      {
        NSLog(&cfstr_InfoAttemptDSt.isa, 1, v3);
        usleep(0xF4240u);
        v4 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v4);
        if (v4 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 2, v4);
        usleep(0xF4240u);
        v5 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v5);
        if (v5 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 3, v5);
        usleep(0xF4240u);
        v6 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v6);
        if (v6 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 4, v6);
        usleep(0xF4240u);
        v7 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v7);
        if (v7 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 5, v7);
        usleep(0xF4240u);
        v8 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v8);
        if (v8 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 6, v8);
        usleep(0xF4240u);
        v9 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v9);
        if (v9 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 7, v9);
        usleep(0xF4240u);
        v10 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v10);
        if (v10 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 8, v10);
        usleep(0xF4240u);
        v11 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v11);
        if (v11 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 9, v11);
        usleep(0xF4240u);
        v12 = [v2 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v12);
        if (v12 == 2) {
          goto LABEL_15;
        }
        NSLog(&cfstr_InfoAttemptDSt.isa, 10, v12);
        usleep(0xF4240u);
        v13 = [v2 queryHardwareSupport:0];
        v14 = v13;
        NSLog(&cfstr_InfoNewStateD.isa, v13);
        if (v14 == 2) {
          goto LABEL_15;
        }
LABEL_51:
        NSLog(&cfstr_ErrorHardwareS.isa);
        return 0;
      }
LABEL_26:
      NSLog(&cfstr_ErrorHwstateRe.isa);
      return 0;
    }
LABEL_27:
    NSLog(&cfstr_ErrorCanTGetSo.isa);
    return 0;
  }
  v16 = dlopen("/System/Library/PrivateFrameworks/NearField.framework/NearField", 1);
  if (!v16)
  {
    NSLog(&cfstr_ErrorFailedToO.isa);
    return v16;
  }
  if (!off_26B8E7660()) {
    goto LABEL_27;
  }
  v20 = (void *)[(objc_class *)off_26B8E7660() sharedHardwareManager];
  v21 = [v20 getHwSupport];
  if (v21 != 2)
  {
    if (v21 == 4) {
      goto LABEL_26;
    }
    NSLog(&cfstr_InfoAttemptDSt.isa, 1, v21);
    usleep(0xF4240u);
    v23 = [v20 queryHardwareSupport:0];
    NSLog(&cfstr_InfoNewStateD.isa, v23);
    if (v23 != 2)
    {
      NSLog(&cfstr_InfoAttemptDSt.isa, 2, v23);
      usleep(0xF4240u);
      v24 = [v20 queryHardwareSupport:0];
      NSLog(&cfstr_InfoNewStateD.isa, v24);
      if (v24 != 2)
      {
        NSLog(&cfstr_InfoAttemptDSt.isa, 3, v24);
        usleep(0xF4240u);
        v25 = [v20 queryHardwareSupport:0];
        NSLog(&cfstr_InfoNewStateD.isa, v25);
        if (v25 != 2)
        {
          NSLog(&cfstr_InfoAttemptDSt.isa, 4, v25);
          usleep(0xF4240u);
          v26 = [v20 queryHardwareSupport:0];
          NSLog(&cfstr_InfoNewStateD.isa, v26);
          if (v26 != 2)
          {
            NSLog(&cfstr_InfoAttemptDSt.isa, 5, v26);
            usleep(0xF4240u);
            v27 = [v20 queryHardwareSupport:0];
            NSLog(&cfstr_InfoNewStateD.isa, v27);
            if (v27 != 2)
            {
              NSLog(&cfstr_InfoAttemptDSt.isa, 6, v27);
              usleep(0xF4240u);
              v28 = [v20 queryHardwareSupport:0];
              NSLog(&cfstr_InfoNewStateD.isa, v28);
              if (v28 != 2)
              {
                NSLog(&cfstr_InfoAttemptDSt.isa, 7, v28);
                usleep(0xF4240u);
                v29 = [v20 queryHardwareSupport:0];
                NSLog(&cfstr_InfoNewStateD.isa, v29);
                if (v29 != 2)
                {
                  NSLog(&cfstr_InfoAttemptDSt.isa, 8, v29);
                  usleep(0xF4240u);
                  v30 = [v20 queryHardwareSupport:0];
                  NSLog(&cfstr_InfoNewStateD.isa, v30);
                  if (v30 != 2)
                  {
                    NSLog(&cfstr_InfoAttemptDSt.isa, 9, v30);
                    usleep(0xF4240u);
                    v31 = [v20 queryHardwareSupport:0];
                    NSLog(&cfstr_InfoNewStateD.isa, v31);
                    if (v31 != 2)
                    {
                      NSLog(&cfstr_InfoAttemptDSt.isa, 10, v31);
                      usleep(0xF4240u);
                      v32 = [v20 queryHardwareSupport:0];
                      v33 = v32;
                      NSLog(&cfstr_InfoNewStateD.isa, v32);
                      if (v33 != 2) {
                        goto LABEL_51;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  v34 = NSClassFromString(&cfstr_Nfsecureelemen.isa);
  if (v34)
  {
    v35 = [(-[objc_class embeddedSecureElement](v34, "embeddedSecureElement")) serialNumber];
    if (v35)
    {
      v36 = (void *)v35;
      dlclose(v16);
      v16 = (void *)[v36 UTF8String];
      if (v16)
      {
LABEL_17:
        v17 = strlen((const char *)v16);
        if (v17)
        {
          v18 = 0;
          v19 = 1;
          while (*((unsigned char *)v16 + v18) == 48)
          {
            v18 = v19++;
            if (v17 <= v18) {
              goto LABEL_46;
            }
          }
          return v16;
        }
        goto LABEL_46;
      }
LABEL_45:
      NSLog(&cfstr_ErrorSeidUtf8s.isa);
LABEL_46:
      NSLog(&cfstr_ErrorSeidRetri.isa);
      return v16;
    }
    NSLog(&cfstr_ErrorFailedToR.isa);
  }
  else
  {
    NSLog(&cfstr_ErrorFailedToF.isa);
  }
  dlclose(v16);
  return 0;
}

Class sub_23C1A9DBC()
{
  if (qword_268B99300 != -1) {
    dispatch_once(&qword_268B99300, &unk_26EFDBE00);
  }
  Class result = objc_getClass("NFHardwareManager");
  qword_268B992F8 = (uint64_t)result;
  off_26B8E7660 = sub_23C1A9E20;
  return result;
}

uint64_t sub_23C1A9E20()
{
  return qword_268B992F8;
}

void *sub_23C1A9E2C()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/NearField.framework/NearField", 2);
  qword_268B992F0 = (uint64_t)result;
  return result;
}

void vsPHbdGf()
{
  MEMORY[0x270FA5388]();
  uint64_t v2 = *MEMORY[0x263EF8340];
  unint64_t v0 = (qword_268B98A18 - qword_268B98A28) ^ (unint64_t)&v1;
  qword_268B98A28 = 1435369301 * v0 + 0xF280E155BE86816;
  qword_268B98A18 = 1435369301 * (v0 ^ 0x9BAD281A81DB4BBELL);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_23C1A9F88(int a1, uint64_t a2, int a3)
{
  int v5 = (a1 - 1771231355) | 0x305;
  int v6 = a1 - 1771231272;
  uint64_t v7 = *(void *)(a2 + 8 * (a1 - 1771231272));
  unint64_t v8 = 591644117
     * ((((v4 - 200) | 0xB2C8AEF4238A5EE6) - (v4 - 200) + ((v4 - 200) & 0x4D37510BDC75A118)) ^ 0x56D38E3DB88F14A1);
  *(_DWORD *)(v4 - 176) = 1601233193 - v8;
  *(void *)(v3 + 464) = &unk_268B98000;
  *(void *)(v3 + 448) = v7 - v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (int)((a3 - 493) ^ 0x966D2D4B)))(v4 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + (v6 ^ 0x3AC ^ (122 * (*(_DWORD *)(v4 - 192) == v5 - 845)))))(v9);
}

uint64_t sub_23C1A9F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * ((1986 * ((a3 ^ 1) & 1)) ^ 0x3E1)))(a1, a2, a3, 1516397565, 3140820494, 1379692050, 202777128, 202777640, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_23C1AA0EC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v8 + 368) = 0xB666584A2F6EE895;
  LODWORD(STACK[0x298]) = *(_DWORD *)(v6 + 2520) - 452853308;
  uint64_t v10 = *(unsigned int *)(v7 + 2544);
  v5[12] = *(void *)(a2 + 8 * (v4 + 1771230073));
  v5[14] = a4;
  LODWORD(STACK[0x460]) = v4 - 428481362;
  LODWORD(STACK[0x470]) = v4 - 428481464;
  v5[17] = v10;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = v4 - 428481446;
  *(void *)(v8 + 448) = &STACK[0x458];
  *(_DWORD *)(v9 - 192) = 1431737413 * ((((2 * (v9 - 200)) | 0xE8EB0088) - (v9 - 200) - 1953857604) ^ 0xCA2B1F56)
                        + 40706419
                        + v4;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v4 + a1)))(v9 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v9 - 188)))(v11);
}

uint64_t sub_23C1AA1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v44 = a6 ^ (a6 + 288);
  (*(void (**)(uint64_t, uint64_t))(a5 + 8 * (a6 ^ (a6 - 478))))(a43, 3312658705);
  int v45 = unk_26EFDEF90();
  unsigned int v46 = v45 - 2087771140 - ((v44 ^ 0x71E44D8) & (2 * v45));
  LODWORD(xmmword_268B98018) = v46;
  unsigned int v47 = (61 * (v44 ^ 0x32D)) ^ 0xB554FEDD;
  unsigned int v48 = v46 ^ 0x838F23FE ^ (v46 >> 30);
  uint64_t v49 = (-670100790 * v48) & v47;
  uint64_t v50 = 2
      * ((((1812433253 * v48) ^ 0xDAAA7EE2) + ((-670100790 * v48) & v47) + 22380831) & 0x38F23FE ^ (((101 * v48) ^ 0xE2)
                                                                                                  + ((-54 * v48) & v47)
                                                                                                  - 1) & 2);
  *(_DWORD *)(v43 + 4) = ((1812433253 * v48) ^ 0xDAAA7EE2) + v49 - v50 - 1461410533;
  v51 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (v44 | 7));
  return v51(v49, v50, v51, 2833556763, v43, &off_26EFDBE20, 3624866506, 1812433253, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

void sub_23C1AA350()
{
}

uint64_t sub_23C1AA36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = 0x8000000080000000;
  v9.i64[1] = 0x8000000080000000;
  v10.i64[0] = 0x200000002;
  v10.i64[1] = 0x200000002;
  v6.i64[0] = *(void *)(v5 + 4);
  v6.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v11 = vextq_s8(v7, v6, 0xCuLL);
  int8x16_t v12 = v6;
  v12.i32[3] = *(_DWORD *)(v5 + 16);
  int8x16_t v13 = vandq_s8(v11, v8);
  int8x16_t v14 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x7455D8A9u)), v9);
  int32x4_t v15 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)(*(_OWORD *)&v14 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), v13), (int8x16_t)vdupq_n_s32(0xF7DAFB54));
  int32x4_t v16 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v15, (int8x16_t)vdupq_n_s32(0x6253E5AAu)), vandq_s8(v14, v10));
  v17.i32[0] = *((_DWORD *)&STACK[0x2278] + (*(_DWORD *)(v5 + 4) & 1));
  v17.i32[1] = *((_DWORD *)&STACK[0x2278] + (*(_DWORD *)(v5 + 8) & 1));
  v17.i32[2] = *((_DWORD *)&STACK[0x2278] + (*(_DWORD *)(v5 + 12) & 1));
  v17.i32[3] = *((_DWORD *)&STACK[0x2278] + (v12.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v17), (int8x16_t)vdupq_n_s32(0x1E471A41u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v15, vaddq_s32(v16, v16)), vdupq_n_s32(0x6253E5A8u)), 1uLL));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 3704))(806673783, 2147480510, 1951781123, 1771231427);
}

uint64_t sub_23C1AAEF4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, unsigned int a5@<W8>)
{
  int8x16_t v10 = (unsigned int *)(v9 + 4 * (v5 + v8));
  unsigned int v11 = (a2 + ((a5 + 292392119) & 0xEE9275EE) + 2018) & v6;
  uint64_t v12 = v5 + 1;
  int v13 = *(_DWORD *)(v9 + 4 * (v12 + v8));
  *int8x16_t v10 = v10[397] ^ *((_DWORD *)&STACK[0x2278] + (v13 & 1)) ^ ((((((v13 & 0x7FFFFFFE ^ (a3 + 1958)) + 0x7FFFFFFF) & 0x7FFFFFFE | v11) ^ 0xF7DAFB54)
                                                              + v7
                                                              - 2
                                                              * (((((v13 & 0x7FFFFFFE ^ (a3 + 1958)) + 0x7FFFFFFF) & 0x7FFFFFFE | v11) ^ 0xF7DAFB54) & (v7 + 2) ^ ((v13 & 0x7FFFFFFE ^ (a3 + 1958)) + 0x7FFFFFFF) & 2)) >> 1) ^ 0x1E471A41;
  return (*(uint64_t (**)(void))(a4 + 8 * ((1256 * (v12 == a1 + 3)) ^ a5)))();
}

uint64_t sub_23C1AAFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (v6 - 724);
  uint64_t v9 = (const float *)&dword_268B983A4;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(v9);
  v11.i64[0] = 0x8000000080000000;
  v11.i64[1] = 0x8000000080000000;
  int8x16_t v12 = (int8x16_t)vdupq_n_s32(0x425C4EFCu);
  v7.i64[0] = *(void *)&dword_268B983A8;
  v7.i32[2] = dword_268B983B0;
  int8x16_t v13 = vextq_s8(v10, v7, 0xCuLL);
  int8x16_t v14 = v7;
  v14.i32[3] = dword_268B983B4;
  int32x4_t v15 = (int32x4_t)veorq_s8(vandq_s8(v14, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x10B21F4u));
  int32x4_t v16 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v15, (int32x4_t)veorq_s8(vandq_s8(v14, v12), (int8x16_t)vdupq_n_s32(0xC2544E08))), (int32x4_t)vandq_s8((int8x16_t)v15, v12)), (int8x16_t)vdupq_n_s32(0xC0D84CF4));
  v17.i32[0] = *(_DWORD *)(v5 + 4 * (dword_268B983A8 & ((101 * (v8 ^ 0x18E)) ^ 0xCB)));
  v17.i32[1] = *(_DWORD *)(v5 + 4 * (unk_268B983AC & 1));
  v17.i32[2] = *(_DWORD *)(v5 + 4 * (dword_268B983B0 & 1));
  v17.i32[3] = *(_DWORD *)(v5 + 4 * (dword_268B983B4 & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v17), (int8x16_t)vdupq_n_s32(0x1EBA4417u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v16, vbicq_s8(v11, v13)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v16, v16), (int8x16_t)vdupq_n_s32(0xC752B208))), vdupq_n_s32(0x63A95905u)), 1uLL));
  return (*(uint64_t (**)(void))(a5
                              + 8
                              * (((((4 - v8) | (v8 - 4)) >= 0) | (4 * (((4 - v8) | (v8 - 4)) >= 0))) ^ ((int)v8 + 724))))();
}

void sub_23C1AB11C()
{
}

uint64_t sub_23C1AB12C@<X0>(uint64_t a1@<X4>, int a2@<W5>, int a3@<W8>)
{
  unsigned int v4 = ((a2 + a3 + 680690010) & 0xD76D7DDB ^ *v3 & 0x28BCCD4C ^ 0x9655E90F)
     + (*v3 & 0x7FFFFFFE ^ 0x2C851BA8)
     - ((*v3 & 0x7FFFFFFE ^ 0x2C851BA8) & 0x28BCCD4C);
  int v5 = (v4 & 0x10D5E094 ^ 0x10412090) + (v4 ^ 0x8B6D50C) - ((v4 ^ 0x8B6D50C) & 0x10D5E094);
  unsigned int v6 = (v5 | ((((v3[623] & 0x80000000) - 1362236967) ^ 0xC9FDDC) - 259797202) & 0x80000000) ^ 0x1FD5C080;
  v3[623] = v3[396] ^ *((_DWORD *)&STACK[0x2278] + (*v3 & 1)) ^ ((v6 - 2 * (v6 & 0x1D8FD4AF ^ v5 & 0xD) - 1651518302) >> 1) ^ 0x61A902C4;
  return (*(uint64_t (**)(void))(a1 + 8 * ((534 * (LODWORD(STACK[0x298]) > 0x26F)) ^ a3)))();
}

uint64_t sub_23C1AB26C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  LODWORD(STACK[0x298]) = 0;
  int v12 = LODWORD(STACK[0x298])++;
  *(_DWORD *)(v7 + 2520) = v12 + 452853309;
  uint64_t v13 = (*(_DWORD *)(v8 + 2544) - 1284966624);
  v6[12] = *(void *)(a5 + 8 * ((v5 + 1497843314) & 0x10490CE8));
  v6[14] = v13;
  v6[17] = 231430941;
  LODWORD(STACK[0x460]) = v5 + 1497843314;
  LODWORD(STACK[0x470]) = v5 + 1497843295;
  LODWORD(STACK[0x474]) = v5 + 1497843309;
  LODWORD(STACK[0x478]) = 0;
  *(void *)(v10 + 448) = &STACK[0x458];
  *(_DWORD *)(v11 - 192) = 1431737413 * ((v11 - 200 + v9 - 2 * ((v11 - 200) & v9)) ^ 0xE251B91D) + 40706419 + v5;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(a5 + 8 * (v5 + a4)))(v11 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v11 - 188)))(v14);
}

uint64_t sub_23C1AB35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  if (v46 >= v47) {
    int v49 = *(_DWORD *)(v48 + 2544) + 1;
  }
  else {
    int v49 = 1516397565;
  }
  *(_DWORD *)(v48 + 2544) = v49;
  unsigned int v50 = ((((((v45 ^ (v45 >> 11)) << 7) ^ 0xCFA90C00)
         - ((2 * (((v45 ^ (v45 >> 11)) << 7) ^ 0xCFA90C00)) & 0xC126AB00)
         - 527215127) & 0x9D2C5680 ^ 0xD05B9CDD)
       - 1) ^ v45 ^ (v45 >> 11);
  unsigned int v51 = (((((((v50 << 15) ^ 0x4D220000) - ((2 * ((v50 << 15) ^ 0x4D220000)) & 0x65CC0000) + 853957793) & 0xEFC60000 ^ 0xCFC28E0F)
         - 1) ^ 0x3FE1B01D)
       - 1) ^ v50;
  byte_268B9931C[a45 - 202777129] = ((v51 ^ (v51 >> 18) ^ 0x1E) - ((2 * (v51 ^ (v51 >> 18) ^ 0x1E)) & 0x6A) + 53) ^ 0xD9;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((773
                                * (a45
                                 - (((v51 ^ (v51 >> 18) ^ 0x1E)
                                                    - ((2 * (v51 ^ (v51 >> 18) ^ 0x1E)) & 0x6A)
                                                    + 53) != 0xD9) == 202777128)) ^ 0x1C9)))();
}

uint64_t sub_23C1AB48C@<X0>(int a1@<W1>, char a2@<W3>, char a3@<W4>, char a4@<W5>, char a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q1>, int8x16_t a10@<Q2>, int8x16_t a11@<Q3>, int32x4_t a12@<Q4>, int8x16_t a13@<Q5>, int8x16_t a14@<Q6>, int32x4_t a15@<Q7>, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  char v78 = a4 + v54 - ((a5 + a7) & v58);
  int v79 = ((a6 + v54 - (((v62 + (_BYTE)v54) << (v64 - 44)) & v58)) ^ v60) ^ v59;
  int v80 = ((a2 + v54 - ((a3 + a7) & v58)) ^ v60) ^ v59;
  int v81 = ((v61 + v54 - ((a1 + a7) & v58)) ^ v60) ^ v59;
  v82.i32[0] = *(_DWORD *)(v65 + 4 * ((v57 - (v79 | v57) + (v79 | v55)) ^ v56));
  v82.i32[1] = *(_DWORD *)(v65
                         + 4
                         * ((v57
                           - ((v78 ^ v60) ^ v59 | v57)
                           + ((v78 ^ v60) ^ v59 | v55)) ^ v56));
  v82.i32[2] = *(_DWORD *)(v65 + 4 * ((v57 - (v80 | v57) + (v80 | v55)) ^ v56));
  v82.i32[3] = *(_DWORD *)(v65 + 4 * ((v57 - (v81 | v57) + (v81 | v55)) ^ v56));
  int32x4_t v83 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)vshrq_n_u32(v82, 1uLL), a9), a10);
  int32x4_t v84 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v83, v83), a11), v83), a12), a13);
  int8x16_t v85 = veorq_s8(veorq_s8((int8x16_t)v82, a8), (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v84, v84), a14), v84), a15));
  int32x4_t v86 = (int32x4_t)veorq_s8(vandq_s8(v85, v67), v68);
  unint64_t v87 = STACK[0x1310];
  int32x4_t v88 = (int32x4_t)veorq_s8(vandq_s8(v85, v72), v73);
  int32x4_t v89 = (int32x4_t)vandq_s8(veorq_s8((int8x16_t)vaddq_s32(vaddq_s32(v86, v71), (int32x4_t)veorq_s8(vandq_s8((int8x16_t)vaddq_s32(v86, v86), v69), v70)), (int8x16_t)v76), veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v88, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v88, v88), v74)), v75), (int8x16_t)v75));
  int32x4_t v90 = vaddq_s32(vsubq_s32(v89, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v89, v89), v77)), v76);
  *(_DWORD *)(v87 + 4 * ((a6 + v54 - (((v62 + (_BYTE)v54) << (v64 - 44)) & v58)) ^ v66)) = v90.i32[0];
  *(_DWORD *)(v87 + 4 * (v78 & 0xFC ^ v66)) = v90.i32[1];
  *(_DWORD *)(v87 + 4 * ((a2 + v54 - ((a3 + a7) & v58)) ^ v66)) = v90.i32[2];
  *(_DWORD *)(v87 + 4 * ((v61 + v54 - ((a1 + a7) & v58)) & 0xFE ^ v66)) = v90.i32[3];
  return (*(&off_26EFDBE20 + ((929 * (v63 == 0)) ^ a54)))();
}

uint64_t sub_23C1AB668@<X0>(int a1@<W1>, char a2@<W3>, char a3@<W4>, char a4@<W5>, char a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q1>, int8x16_t a10@<Q2>, int8x16_t a11@<Q3>, int32x4_t a12@<Q4>, int8x16_t a13@<Q5>, int8x16_t a14@<Q6>, int32x4_t a15@<Q7>, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  return sub_23C1AB48C(a1, a2, a3, a4, a5, a6, a7 + (int)a53, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_23C1AB680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v40 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + (v39 ^ 0xDB)))(1028);
  STACK[0x14A8] = v40;
  STACK[0x438] = v40;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)(((v40 != 0) * ((v39 + 2060605138) & 0x852DA675 ^ 0x966D2F40 ^ (v39 - 546329922) & 0xB6FD7D5F)) ^ v39)))(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_23C1AB71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16, int a17, uint64_t a18, unsigned int a19, int a20,uint64_t a21,uint64_t a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,int a55)
{
  int v55 = ((2 * a52) ^ 0x2E9CAF62) - ((2 * ((2 * a52) ^ 0x2E9CAF62)) & 0x65A2A70) + 187503913;
  unsigned int v56 = ((2 * ((a52 ^ 0x174E57B1) + 37379851)) & 0xFBFFFEFE)
      + (((a52 ^ 0x174E57B1) + 37379851) ^ 0x7DFFFF7F)
      + (v55 & 0x474BE16 ^ 0x96250135)
      + ((2 * v55) & 0xE95404 ^ 0xFFB7FFFF);
  int v57 = v56 - ((2 * v56 + 633643784) & 0x28C3C6C4) + 1195652326;
  int v58 = ((2 * v57) ^ 0x28C3C6C4) - ((2 * ((2 * v57) ^ 0x28C3C6C4)) & 0x65A2A70) + 187503913;
  unsigned int v59 = ((2 * ((v57 ^ 0x9461E362) + 37379851)) & 0xFBFFFEFE)
      + (((v57 ^ 0x9461E362) + 37379851) ^ 0x7DFFFF7F)
      + (v58 & 0x474BE16 ^ 0x96250135)
      + ((2 * v58) & 0xE95404 ^ 0xFFB7FFFF);
  unsigned int v60 = LODWORD(STACK[0x133C]) + ((v59 - ((2 * v59 + 633643784) & 0x28C3C6C4) + 1195652326) ^ 0x9461E362);
  LOBYTE(v60) = (v60 ^ 0xBF) + 65 + ((2 * v60) & 0x7E);
  HIDWORD(v61) = a11 ^ 0xBDD2;
  LODWORD(v61) = a11 ^ 0xA2B40000;
  LOBYTE(v60) = ((v60 & 0xFE) - 48 + (~(2 * v60) | 0x63)) ^ 0x6A;
  v62.i64[0] = 0x100000001;
  v62.i64[1] = 0x100000001;
  int v63 = ((117 * (a55 ^ 0x77) - 77) * v60 - ((2 * (117 * (a55 ^ 0x77) - 77) * v60) & 0x24) + 18);
  int v64 = (-98 * (_BYTE)v60 + 18 - ((60 * (_BYTE)v60) & 0x24)) & 0xFE;
  int v65 = (-97 * v60 + 18 - ((62 * v60) & 0x24));
  int v66 = (-96 * v60) | 0x12;
  unsigned int v67 = a15 ^ a16 ^ 0xBBA5F82A ^ a17;
  v68.i32[0] = dword_23C215880[v67 ^ ((v63 ^ 0x23586022) + 1181636710 - ((2 * (v63 ^ 0x23586022)) & 0x49080CC))];
  v68.i32[1] = dword_23C215880[v67 ^ ((v64 ^ 0x23586022) + 1181636710 - ((2 * (v64 ^ 0x23586022)) & 0x49080CC))];
  v68.i32[2] = dword_23C215880[v67 ^ ((v65 ^ 0x23586022) + 1181636710 - ((2 * (v65 ^ 0x23586022)) & 0x49080CC))];
  v68.i32[3] = dword_23C215880[v67 ^ ((v66 ^ 0x23586022) + 1181636710 - ((2 * (v66 ^ 0x23586022)) & 0x49080CC))];
  int32x4_t v69 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)vaddq_s32(v68, vdupq_n_s32(0x32ED4DEEu)), (int8x16_t)vdupq_n_s32(0x3AEA5C11u)), vandq_s8((int8x16_t)v68, v62));
  int32x4_t v70 = vaddq_s32(vsubq_s32(v68, vaddq_s32(v69, v69)), vdupq_n_s32(0xEDD7A9FE));
  int32x4_t v71 = (int32x4_t)veorq_s8((int8x16_t)vshlq_n_s32(v70, 3uLL), (int8x16_t)vdupq_n_s32(0xD752E080));
  int8x16_t v72 = veorq_s8(veorq_s8((int8x16_t)v70, (int8x16_t)vdupq_n_s32(a29 ^ a20 ^ a25 ^ a23 ^ a28 ^ a19)), (int8x16_t)vaddq_s32(vsubq_s32(v71, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v71, v71), (int8x16_t)vdupq_n_s32(0x3A1B3C00u))), vdupq_n_s32(0x1D0D9E07u)));
  int32x4_t v73 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)veorq_s8(v72, (int8x16_t)vdupq_n_s32(0x2347Cu)), 0xEuLL), (int8x16_t)vshrq_n_u32((uint32x4_t)veorq_s8(v72, (int8x16_t)vdupq_n_s32(0xB7E80000)), 0x12uLL));
  int8x16_t v74 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v73, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v73, v73), (int8x16_t)vdupq_n_s32(0xA6035980))), vdupq_n_s32(0x5301ACC0u)), (int8x16_t)vdupq_n_s32((v61 >> 18) - ((2 * (v61 >> 18)) & 0x96B5E9C0) - 883231520));
  int32x4_t v75 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)veorq_s8(v74, (int8x16_t)vdupq_n_s32(0x1A76u)), 0x12uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)veorq_s8(v74, (int8x16_t)vdupq_n_s32(0x73174000u)), 0xEuLL));
  int8x16_t v76 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v75, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v75, v75), (int8x16_t)vdupq_n_s32(0x872AC042))), vdupq_n_s32(0x43956021u)), (int8x16_t)vdupq_n_s32(0xD85A9096));
  unint64_t v77 = STACK[0x14A8];
  *(_DWORD *)(v77 + 4 * (v63 ^ 0x12u)) = v76.i32[0];
  *(_DWORD *)(v77 + 4 * (v64 ^ 0x12u)) = v76.i32[1];
  *(_DWORD *)(v77 + 4 * (v65 ^ 0x12u)) = v76.i32[2];
  *(_DWORD *)(v77 + 4 * (v66 ^ 0x12u)) = v76.i32[3];
  return (*(&off_26EFDBE20 + a55))();
}

void sub_23C1ABC04()
{
}

uint64_t sub_23C1ABC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v40 + 780)))(1032);
  STACK[0x1280] = v41;
  STACK[0x450] = v41;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)(((v41 == 0) * ((v40 - 1771230623) ^ 0x966D2CAB)) ^ v40)))(v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_23C1ABC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, int a13, int a14, unsigned int a15, int a16, int a17, int a18, int a19, uint64_t a20,int a21,unsigned int a22,int a23,uint64_t a24,uint64_t a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  unsigned int v53 = ((a13 ^ 0x2F31BCC6 ^ LODWORD(STACK[0x1338]))
       - ((2 * (a13 ^ 0x2F31BCC6 ^ LODWORD(STACK[0x1338])) + 1317795494) & 0xB8CB757A)
       + 61584912) ^ 0x8917108;
  unsigned int v54 = ((v53 - ((2 * v53 + 1317795494) & 0xB8CB757A) + 61584912) ^ 0x5C65BABD) + (LODWORD(STACK[0x1330]) ^ 0xDEC16E5D);
  LOBYTE(v54) = (v54 ^ 0x33) - 51 + ((2 * v54) & 0x66);
  char v55 = ((v54 & 0xFE) - ((2 * v54) & 0xFC) + 127) ^ 0x5C;
  int8x16_t v56 = (int8x16_t)vdupq_n_s32(0xC28E9u);
  int8x16_t v57 = (int8x16_t)vdupq_n_s32(0x46A5B92Au);
  int32x4_t v58 = vdupq_n_s32(0x2352DC95u);
  v59.i64[0] = 0x1000000010;
  v59.i64[1] = 0x1000000010;
  int v60 = (-79 * v55 - 109 - ((98 * v55) & 0x26));
  int v61 = ((((a53 + 26) | 0x24) ^ 0x9C) * v55 - ((2 * (((a53 + 26) | 0x24) ^ 0x9C) * v55) & 0x24) - 109);
  int v62 = (-77 * v55 - 109 - ((102 * v55) & 0x26));
  int v63 = (-109 - 76 * v55 - ((104 * v55) & 0x20));
  int v64 = a16 ^ a17 ^ a18;
  v65.i32[0] = v64 ^ v60;
  v65.i32[1] = v64 ^ v61;
  v65.i32[2] = v64 ^ v62;
  v65.i32[3] = v64 ^ v63;
  v66.i32[0] = v64 ^ v60 ^ 1;
  v66.i32[1] = v64 ^ v61 ^ 1;
  v66.i32[2] = v64 ^ v62 ^ 1;
  v66.i32[3] = v64 ^ v63 ^ 1;
  v67.i32[0] = v64 ^ v60 ^ 0xDE93C0E0;
  v67.i32[1] = v64 ^ v61 ^ 0xDE93C0E0;
  v67.i32[2] = v64 ^ v62 ^ 0xDE93C0E0;
  v67.i32[3] = v64 ^ v63 ^ 0xDE93C0E0;
  int32x4_t v68 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32(v66, 0x1BuLL), (int8x16_t)vshrq_n_u32(v67, 5uLL));
  unsigned __int32 v69 = v68.i32[0] - 684424342 - ((2 * v68.i32[0]) & 0xAE6906AA);
  unsigned int v70 = v68.i32[1] - 684424342 - ((2 * v68.i32[1]) & 0xAE6906AA);
  unsigned int v71 = v68.i32[2] - 684424342 - ((2 * v68.i32[2]) & 0xAE6906AA);
  v68.i32[0] = (v69 + 134217707) ^ 0x623EECF;
  v68.i32[1] = (v70 + 134217707) ^ 0x623EECF;
  v68.i32[2] = (v71 + 134217707) ^ 0x623EECF;
  unsigned int v72 = v68.i32[3] - 684424342 - ((2 * v68.i32[3]) & 0xAE6906AA);
  v68.i32[3] = (v72 + 134217707) ^ 0x623EECF;
  v67.i32[0] = 20 - v69;
  v67.i32[1] = 20 - v70;
  v67.i32[2] = 20 - v71;
  v67.i32[3] = 20 - v72;
  int8x16_t v73 = vorrq_s8((int8x16_t)vshlq_n_s32(v68, 5uLL), (int8x16_t)vshrq_n_u32(v67, 0x1BuLL));
  v67.i32[0] = dword_23C215480[(v73.i32[0] + 402613626 - ((2 * v73.i32[0]) & 0x2FFECAF4)) ^ 0x3512D63E];
  v67.i32[1] = dword_23C215480[(v73.i32[1] + 402613626 - ((2 * v73.i32[1]) & 0x2FFECAF4)) ^ 0x3512D63E];
  v67.i32[2] = dword_23C215480[(v73.i32[2] + 402613626 - ((2 * v73.i32[2]) & 0x2FFECAF4)) ^ 0x3512D63E];
  v67.i32[3] = dword_23C215480[(v73.i32[3] + 402613626 - ((2 * v73.i32[3]) & 0x2FFECAF4)) ^ 0x3512D63E];
  int8x16_t v74 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)vdupq_n_s32(a26 ^ a10 ^ a14 ^ a13 ^ a15 ^ LODWORD(STACK[0x12A0])), v65), (int8x16_t)vdupq_n_s32(0x363BF6FFu)), (int8x16_t)v67);
  int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v74, (int8x16_t)vdupq_n_s32(0x860D3FFB)), (int8x16_t)vdupq_n_s32(0x860D1979));
  int32x4_t v76 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v75, (int32x4_t)veorq_s8(vandq_s8(v74, v56), (int8x16_t)vdupq_n_s32(0x69F2E084u))), (int32x4_t)vandq_s8((int8x16_t)v75, v56)), (int8x16_t)vdupq_n_s32(0xFDDD08E5));
  int8x16_t v77 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v76, v76), (int8x16_t)vdupq_n_s32(0x659CC1EEu)), v76), vdupq_n_s32(0xD319F08u));
  int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v74, (int8x16_t)vdupq_n_s32(0x79F2C004u)), (int8x16_t)vdupq_n_s32(0x39200004u));
  int32x4_t v79 = (int32x4_t)vorrq_s8(veorq_s8(v77, (int8x16_t)vdupq_n_s32(0x1D1F4F4Au)), veorq_s8(vandq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v78, v78), (int8x16_t)vdupq_n_s32(0x70818000u)), v78), vdupq_n_s32(0x43B62D37u)), (int8x16_t)vdupq_n_s32(0xFFF7C004)), (int8x16_t)vdupq_n_s32(0x53344000u)));
  int32x4_t v80 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v79, (int8x16_t)vdupq_n_s32(0x4CC7BCB9u)), vandq_s8(v77, v59));
  int8x16_t v81 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v79, vaddq_s32(v80, v80)), vdupq_n_s32(0xCCC7BCA9)), (int8x16_t)vdupq_n_s32(a19 ^ a23 ^ a22));
  int32x4_t v82 = (int32x4_t)veorq_s8(vandq_s8(v81, (int8x16_t)vdupq_n_s32(0x4D3D1E75u)), (int8x16_t)vdupq_n_s32(0xF2DBE5CF));
  unint64_t v83 = STACK[0x1280];
  int32x4_t v84 = (int32x4_t)veorq_s8(vandq_s8(v81, (int8x16_t)vdupq_n_s32(0xB2C2E18A)), (int8x16_t)vdupq_n_s32(0x7F7FBFFDu));
  int32x4_t v85 = (int32x4_t)vandq_s8(veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v84, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v84, v84), (int8x16_t)vdupq_n_s32(0x65848014u))), vdupq_n_s32(0xB2B63BAA)), (int8x16_t)vdupq_n_s32(0xB2CE446A)), veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v82, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v82, v82), v57)), v58), (int8x16_t)v58));
  int32x4_t v86 = vaddq_s32(vsubq_s32(v85, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v85, v85), v57)), v58);
  *(_DWORD *)(v83 + 4 * (v60 ^ 0x93u)) = v86.i32[0];
  *(_DWORD *)(v83 + 4 * (v61 ^ 0x93u)) = v86.i32[1];
  *(_DWORD *)(v83 + 4 * (v62 ^ 0x93u)) = v86.i32[2];
  *(_DWORD *)(v83 + 4 * (v63 ^ 0x93u)) = v86.i32[3];
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_26EFDBE20 + a53))(103018191, 147);
}

void sub_23C1AC2CC()
{
}

uint64_t sub_23C1AC2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v43 = STACK[0x440];
  STACK[0x11C0] = STACK[0x448];
  LODWORD(STACK[0x11C8]) = LODWORD(STACK[0x1294]) - 1019625470;
  HIDWORD(v44) = (a43 - 1) ^ a25;
  LODWORD(v44) = a25 ^ 0x9DF8FEBC;
  LODWORD(STACK[0x11CC]) = (v44 >> 1) - ((2 * (v44 >> 1)) & 0xFF40BFC4) - 6266910;
  STACK[0x11D0] = v43;
  HIDWORD(v44) = LODWORD(STACK[0x128C]) ^ 0x396C3B90;
  LODWORD(v44) = 1 - a16;
  LODWORD(STACK[0x11D8]) = (v44 >> 30) - ((2 * (v44 >> 30)) & 0x7A23A5A0) - 1122905392;
  LODWORD(STACK[0x11DC]) = LODWORD(STACK[0x17BC]) + 289423107;
  int v45 = STACK[0x134C];
  LODWORD(v43) = STACK[0x15EC];
  LODWORD(STACK[0xE54]) = STACK[0x1348];
  LODWORD(STACK[0xE58]) = 1948251477;
  LODWORD(STACK[0xE5C]) = a10;
  LODWORD(STACK[0xE60]) = v43;
  LODWORD(STACK[0xE64]) = v45;
  LODWORD(STACK[0xE68]) = a43 - 1961183076;
  LODWORD(STACK[0xE6C]) = a43 + 938028018;
  LODWORD(STACK[0xE70]) = a43 + 562553885;
  LODWORD(v43) = ((a43 + 938028018) ^ 0x53318ADE) & 0x741FF555 ^ 0x741FF555;
  LODWORD(STACK[0xE74]) = v43;
  LODWORD(v43) = v43 - ((2 * v43) & 0x5E7210B0) - 1355216808;
  LODWORD(STACK[0xE78]) = v43;
  STACK[0x5F8] = STACK[0x11C0] + ((a43 + 562553885) ^ 0x39542513 ^ v43);
  STACK[0x5E8] = (unint64_t)*(&off_26EFDBE20 + ((a43 - 1961183076) ^ 0x453));
  uint64_t v46 = (*(uint64_t (**)(void, unint64_t *, uint64_t))(qword_268B99540
                                                                       + 32
                                                                       * *(unsigned __int8 *)(((STACK[0x5F8]
                                                                                              - qword_268B99528) & 0xFFFFFFFFFFFFFFF0)
                                                                                            + qword_268B99520
                                                                                            + 8)
                                                                       + 8))(*(void *)(((STACK[0x5F8] - qword_268B99528) & 0xFFFFFFFFFFFFFFF0) + qword_268B99520), &STACK[0x637], 1);
  LOBYTE(STACK[0x5F7]) = STACK[0x637];
  return ((uint64_t (*)(uint64_t))STACK[0x5E8])(v46);
}

uint64_t sub_23C1B447C()
{
  uint64_t v2 = *(void *)(v1 + 3216) + 1;
  uint64_t v3 = *(void *)(v1 + 3208) + 1;
  uint64_t v4 = *(void *)(v1 + 3224);
  int v5 = *(unsigned __int8 *)(v1 + 3467);
  if (((v5 ^ ((unint64_t)(v4 - 0x1AFCB62E5D79A5C7) < 0x4C7FC26D)) & 1) == 0) {
    int v5 = (unint64_t)(v4 - 0x1AFCB62E5D79A5C7) < *(void *)(v1 + 3456);
  }
  unsigned int v6 = *(&off_26EFDBE20 + ((13 * (v0 & ~v5)) ^ LODWORD(STACK[0x109C])));
  LODWORD(STACK[0x1064]) = STACK[0x109C];
  *(void *)(v1 + 3184) = v4 + 1;
  *(void *)(v1 + 3192) = v2;
  *(void *)(v1 + 3200) = v3;
  return v6();
}

void sub_23C1B4518()
{
  uint64_t v1 = *(void *)(v0 + 3200);
  *(void *)(v0 + 3208) = v1;
  uint64_t v2 = *(void *)(v0 + 3192);
  *(void *)(v0 + 3216) = v2;
  *(void *)(v0 + 3224) = *(void *)(v0 + 3184);
  int v3 = STACK[0x1064];
  LODWORD(STACK[0x109C]) = STACK[0x1064];
  LOBYTE(v1) = *(unsigned char *)(v1 + *(void *)(v0 + 4088) - 0x695DF616C66EEB7BLL);
  unsigned int v4 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ (v2 + *(_DWORD *)(v0 + 3624) - 243096945)) & 0x7FFFFFFF);
  unint64_t v5 = (v4 ^ HIWORD(v4)) * ((v3 - 660) ^ 0x53216FDE);
  char v6 = byte_23C20FC90[v5 >> 24];
  LODWORD(STACK[0x10A0]) = v3 - 660;
  LOBYTE(STACK[0x4AB]) = v6 ^ v1 ^ byte_23C214C70[v5 >> 24] ^ byte_23C20EB30[v5 >> 24] ^ v5 ^ (31 * BYTE3(v5));
  JUMPOUT(0x23C1B0194);
}

uint64_t sub_23C1B4610()
{
  int v0 = STACK[0x10F0];
  uint64_t v1 = *(&off_26EFDBE20 + ((502 * (LODWORD(STACK[0x10F0]) == 1806704498)) ^ LODWORD(STACK[0x10FC])));
  LODWORD(STACK[0x10E8]) = STACK[0x10F4];
  LODWORD(STACK[0x10EC]) = v0 + 1;
  return v1();
}

uint64_t sub_23C1B4674()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((30
                                * (LODWORD(STACK[0x15CC]) == ((v0 + LODWORD(STACK[0x10F8]) + 685405463) & 0x40B85BB4)
                                                           - 772)) ^ LODWORD(STACK[0x10F8]))))();
}

uint64_t sub_23C1B46BC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((*(void *)(v4 + 88) == 0) ^ (a1 ^ (v2 + 4))) & 1)
                                * ((a1 - v1 + 778) ^ (v2 - 7))) ^ a1)))();
}

uint64_t sub_23C1B46FC()
{
  uint64_t v6 = (*(uint64_t (**)(void))(v4 + 8 * (v1 ^ (v0 - 496))))();
  *(void *)(v5 + 88) = *(void *)(v3 + 161);
  *(_DWORD *)STACK[0x15D0] = 172727096;
  LODWORD(STACK[0x2158]) = -2099564603;
  uint64_t v7 = off_268B989E0[0];
  *(unsigned char *)(v5 + 345) = *off_268B989E0[0] - 122;
  *(unsigned char *)(v5 + 346) = v7[1] - 122;
  *(unsigned char *)(v5 + 347) = v7[2] - 122;
  *(unsigned char *)(v5 + 348) = v7[3] - 122;
  *(unsigned char *)(v5 + 349) = ((v1 + 50) & 0x93) + v7[4] + 117;
  *(unsigned char *)(v5 + 350) = v7[5] - 122;
  *(unsigned char *)(v5 + 351) = v7[6] - 122;
  *(unsigned char *)(v5 + 352) = v7[7] - 122;
  *(unsigned char *)(v5 + 353) = v7[8] - 122;
  *(unsigned char *)(v5 + 354) = v7[9] - 122;
  *(unsigned char *)(v5 + 355) = v7[10] - 122;
  *(unsigned char *)(v5 + 356) = v7[11] - 122;
  *(unsigned char *)(v5 + 357) = v7[12] - 122;
  *(unsigned char *)(v5 + 358) = v7[13] - 122;
  *(unsigned char *)(v5 + 359) = v7[14] - 122;
  *(unsigned char *)(v5 + 360) = v7[15] - 122;
  *(unsigned char *)(v5 + 361) = v7[16] - 122;
  *(unsigned char *)(v5 + 362) = v7[17] - 122;
  *(unsigned char *)(v5 + 363) = v7[18] - 122;
  *(unsigned char *)(v5 + 364) = v7[19] - 122;
  *(unsigned char *)(v5 + 365) = v7[20] - 122;
  *(unsigned char *)(v5 + 366) = v7[21] - 122;
  *(unsigned char *)(v5 + 367) = off_268B989E0[0][22] - 122;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (int)(v1 ^ 0x966D2B6A)))(v6);
  uint64_t v9 = ((uint64_t (*)(void, unint64_t *, uint64_t))*(&off_26EFDBE20 + v1 + 1771231418))(0, &STACK[0x2261], v8);
  *(void *)(v2 + 4096) = v9;
  return (*(uint64_t (**)(void))(v4 + 8 * ((76 * (v9 != 0)) ^ (v1 + 1771230415))))();
}

uint64_t sub_23C1B4730()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(v1 + 3824) == 0) * (((v0 - 347) ^ 0xFFFFFC06) + v0 - 1055)) ^ v0)))();
}

void sub_23C1B47E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  int v96 = (v37 - 1129319876) & 0x43500D65;
  int v40 = *(unsigned __int8 **)(v38 + 4024);
  uint64_t v41 = v40[5];
  int v42 = byte_23C217820[v41 ^ 0x3E];
  int v43 = byte_23C2115D0[v40[2] ^ 0x1CLL];
  int v44 = v40[9] ^ 0xE1 ^ byte_23C217820[v40[9] ^ 0xFLL];
  *(void *)(v38 + 88) = 0;
  *(void *)(v38 + 32) = 0;
  *(void *)(v38 + 40) = 0;
  *(void *)(v38 + 56) = 0;
  *(void *)(v38 + 64) = 0;
  int v45 = (((v44 - ((2 * v44) & 0x15A) + 32191) << (((v37 + 60) & 0x65) - 53)) - 1179648) ^ 0x7DAD0000;
  *(void *)(v38 + 16) = 0;
  *(void *)(v38 + 24) = 0;
  LODWORD(STACK[0x42C]) = 1876086006;
  int v46 = v45 - ((2 * v45) & 0x50160000) + 1745567484;
  LODWORD(v41) = ((((v41 ^ 0x68 ^ v42) - ((2 * (v41 ^ 0x68 ^ v42)) & 0x17C)) << 16)
                + 1052639232) ^ 0x3EBE0000;
  int v47 = (25 * v43 - ((a37 + 50 * v43) & 0xA2) + 112) ^ 0x67;
  unsigned int v48 = (((v47 - ((2 * v47) & 0x15E)) << 8) - 1112822016) ^ 0xBDABAF00;
  int v49 = v40[4] ^ 0x99 ^ byte_23C20FA90[v40[4] ^ 0x58];
  int v50 = (((v49 - ((2 * v49) & 0x9A)) << 24) + 1291845632) ^ 0x4D000000;
  int v51 = (v50 - ((2 * v50) & 0x99999999) - 870642099) ^ 0xCC1B0E4D | (v41 - ((2 * v41) & 0x6C160000) - 166999073) ^ 0xF60BCBDF;
  int v52 = *v40 ^ byte_23C20FA90[*v40 ^ 0xF4] ^ 0xE;
  unsigned int v53 = (((v52 + (~(2 * v52) | 0x61)) << 24) - 805306368) ^ 0xCF000000;
  unsigned int v54 = (v53 - ((2 * v53) & 0xBFFFFFFF) + 1601054667) ^ 0x5F6E27CB | (v48 - ((2 * v48) & 0x21D9CC00) + 283960854) ^ 0x10ECE616;
  int v55 = byte_23C214A70[v40[7] ^ 0x5ALL] ^ 0xCD;
  unsigned int v56 = (v51 - ((2 * v51) & 0x67A5B6C6) - 1278026909) ^ 0xB3D2DB63 | (v55 - ((2 * v55) & 0x6C) + 998992182) ^ 0x3B8B6936;
  unsigned int v57 = v56 - ((2 * v56) & 0xABC86DD8) + 1441019628;
  uint64_t v58 = v40[13];
  int v59 = byte_23C2115D0[v40[6] ^ 0xC6];
  int v60 = v40[12] ^ byte_23C20FA90[v40[12] ^ 0xCBLL];
  int v61 = (((v60 ^ 0x9E) - ((2 * v60) & 0x42)) << 24) - 1593835520;
  int v62 = byte_23C214A70[v40[15] ^ 0xC7] ^ 0xA6;
  unsigned int v63 = ((v61 ^ 0xA1000000) - ((2 * v61) & 0xA4000000) + 1386306629) ^ 0x52A15C45 | (v62
                                                                                   - ((2 * v62) & 0x14A)
                                                                                   + 1844705957) ^ 0x6DF3FAA5;
  int v64 = (25 * v59 - ((a37 + 50 * v59) & 0xD8) - 117) ^ 0x77;
  unsigned int v65 = ((((~(2 * v64) | 0xFFFFBB) + v64) << 8) - 815062272) ^ 0xCF6B2200;
  int v66 = byte_23C2115D0[v40[10] ^ 0x45];
  int v67 = v40[8] ^ 0x45 ^ byte_23C20FA90[v40[8] ^ 0x60];
  unsigned int v68 = (((v67 - ((2 * v67) & 0xB2)) << 24) - 654311424) ^ 0xD9000000;
  int v69 = (25 * v66 - ((a33 + 18 * v66) & 0x16) - 86) ^ 0x37;
  int v70 = (((v69 - ((2 * v69) & 0x188)) << 8) + 1322107904) ^ 0x4ECDC400;
  unsigned int v71 = (v68 - ((2 * v68) & 0xE000000) - 2028677007) ^ 0x8714D871 | v46 ^ 0x680B3EFC;
  uint64_t v72 = v40[3];
  int v73 = (v65 - ((2 * v65) & 0x145200) + 1632250251) ^ 0x614A298B | v57 ^ 0x55E436EC;
  LODWORD(STACK[0x1328]) = (2 * v73) & 0x4A5A5EB8;
  LODWORD(STACK[0x132C]) = v73 + 623718236;
  LODWORD(v40) = (v70 - ((2 * v70) & 0xB75CE00) - 2051348513) ^ 0x85BAE7DF | (v71 - ((2 * v71) & 0xB65650EE) + 1529555063) ^ 0x5B2B2877;
  int v74 = v58 ^ byte_23C217820[v58 ^ 0xBF];
  unsigned int v75 = ((((v74 ^ 2) - ((2 * v74) & 0x3A)) << 16) - 1424162816) ^ 0xAB1D0000;
  int v76 = v75 - ((2 * v75) & 0x5C860000) + 776147340;
  int8x16_t v77 = *(unsigned __int8 **)(v38 + 4024);
  LODWORD(v58) = byte_23C214A70[v72 ^ 0x62];
  unsigned int v78 = v76 ^ 0x2E43118C | (v63 - ((2 * v63) & 0xDEE0C788) + 1869636548) ^ 0x6F7063C4;
  int v79 = v77[11];
  int v80 = 25 * byte_23C2115D0[v77[14] ^ 0xF8] - ((a37 + 50 * byte_23C2115D0[v77[14] ^ 0xF8]) & 0x22) + 48;
  unsigned int v81 = ((((v80 ^ 0x99) - ((2 * v80) & 0x44)) << 8) - 418504192) ^ 0xE70E2200;
  unsigned int v82 = (v81 - ((2 * v81) & 0x25EC2400) + 318116480) ^ 0x12F61280 | (v78 - ((2 * v78) & 0x95BC8784) + 1256080322) ^ 0x4ADE43C2;
  unsigned int v83 = v82 - 557748643 - ((2 * v82) & 0xBD82DCFA) + 32;
  LODWORD(STACK[0x1330]) = v83;
  unsigned int v84 = (v79 ^ 0xE7A6AF30) + 2 * (v79 ^ 0xCF);
  int v85 = 2 * v84 - ((4 * v84 + 4) & 0x64) + 117;
  uint64_t v86 = v77[1];
  int v87 = byte_23C214A70[v84 - 1740091420 + (v85 & 0x46 ^ 0x80110003) + ((2 * v85) & 0xC ^ 0xFFFFFFFB)] ^ 0xCD;
  unsigned int v88 = (v40 - ((2 * v40) & 0x819F0F90) + 1087342536) ^ 0x40CF87C8 | (v87
                                                                                    - ((2 * v87) & 0x146)
                                                                                    + 273748899) ^ 0x105113A3;
  unsigned int v89 = v88 - ((2 * v88) & 0xAF65D4B2) + 1471343193;
  LODWORD(STACK[0x1334]) = v89;
  LODWORD(v40) = v86 ^ 0x64 ^ byte_23C217820[v86 ^ 0xC];
  LODWORD(v40) = (((v40 - ((2 * v40) & 0x56)) << 16) - 1255473152) ^ 0xB52B0000;
  LODWORD(v40) = v40 - ((2 * v40) & 0x37440000) + 1537389329;
  LODWORD(STACK[0x1338]) = v40;
  LODWORD(v40) = v40 ^ 0x5BA2B311;
  LODWORD(STACK[0x133C]) = v40;
  int v90 = ((v58 ^ 0x3C) - ((2 * (v58 ^ 0x3C)) & 0x1E8) + 965620980) ^ 0x398E34F4 | (v54
                                                                                - ((2 * v54) & 0x8D059FB6)
                                                                                - 964505637) ^ 0xC682CFDB;
  unsigned int v91 = v40 | (v90 - ((2 * v90) & 0x7769ABBC) - 1145776674) ^ 0xBBB4D5DE;
  LODWORD(STACK[0x1340]) = (2 * v91) & 0x1DDB2CE2;
  LODWORD(STACK[0x1344]) = v91 - 1897032079;
  LODWORD(STACK[0x1348]) = v89 ^ 0x2836934B;
  LODWORD(STACK[0x134C]) = v83 ^ 0x2381D3A1;
  *(void *)(v38 + 3928) = *(void *)(v38 + 8);
  *(void *)(v38 + 3936) = *(void *)(v38 + 80);
  unsigned int v92 = LODWORD(STACK[0x17BC]) - 1007326985;
  LODWORD(STACK[0x1364]) = v92;
  *(unsigned char *)(v38 + 3955) = v92 < 0xB2B529F4;
  LODWORD(STACK[0xA5C]) = v96;
  LODWORD(STACK[0xA60]) = 568564794;
  LODWORD(STACK[0xA64]) = 924369207;
  LODWORD(STACK[0xA68]) = -1853625126;
  LODWORD(STACK[0xA6C]) = -733222661;
  LODWORD(STACK[0xA70]) = 1000023323;
  LODWORD(STACK[0xA74]) = STACK[0xA70];
  LODWORD(STACK[0xA78]) = STACK[0xA6C];
  LODWORD(STACK[0xA7C]) = STACK[0xA68];
  LODWORD(STACK[0xA80]) = STACK[0xA64];
  int v93 = STACK[0xA60];
  LODWORD(STACK[0xA84]) = STACK[0xA60];
  int v94 = STACK[0xA5C];
  LODWORD(STACK[0xA88]) = STACK[0xA5C];
  LODWORD(STACK[0xA8C]) = v94 + 727;
  uint64_t v95 = (v93 - 568564794);
  *(void *)(v38 + 1688) = v95;
  *(void *)(v38 + 512) = *(void *)(v38 + 3928) + v95;
  *(void *)(v38 + 496) = *(void *)(v39 + 8 * (v94 ^ 0x4C9));
  JUMPOUT(0x23C1D8748);
}

void sub_23C1B50A0()
{
  int v2 = STACK[0xD40];
  *(void *)(v0 + 96) = v1[298] - 0x4398FF68D0799FC3;
  int v3 = STACK[0xD5C];
  LODWORD(STACK[0xDC4]) = v2;
  LODWORD(STACK[0xDC8]) = v3;
  LODWORD(STACK[0xDCC]) = 2047124114;
  int v4 = STACK[0xDCC];
  LODWORD(STACK[0xDD0]) = STACK[0xDCC];
  LODWORD(STACK[0xDD4]) = STACK[0xDC8];
  int v5 = STACK[0xDC4];
  LODWORD(STACK[0xDD8]) = STACK[0xDC4];
  LODWORD(STACK[0xDDC]) = v5 + 1771230253;
  uint64_t v6 = **(void **)(v0 + 96) + (v4 - 2047124114);
  v1[317] = v6;
  v1[64] = v6;
  JUMPOUT(0x23C1D8744);
}

uint64_t sub_23C1B5244()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((446 * (v1 == 0)) ^ (v0 - 1771230161))))();
}

uint64_t sub_23C1B5274()
{
  int v1 = LODWORD(STACK[0x39C]) + 1;
  LODWORD(STACK[0x158C]) = LODWORD(STACK[0x24C]) - 566964915;
  LODWORD(STACK[0x39C]) = v1;
  return (*(uint64_t (**)(void))(v0 + 8 * ((30 * (v1 == 1424161306)) ^ 0x542)))();
}

uint64_t sub_23C1B52A0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 != 0) * ((v0 - 1771230632) ^ 0x37E)) ^ (v0 - 1771230608))))();
}

uint64_t sub_23C1B52FC@<X0>(int a1@<W8>)
{
  int v3 = (a1 - 147) | 0x100;
  uint64_t v4 = (*(uint64_t (**)(unint64_t))(v2 + 8 * (a1 ^ 0x50B)))(STACK[0x368] - 0x494B3BC83CF4FA61);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + (int)((((((v3 + 1110139639) & 0xBDD49DFC) - 109) ^ 0x40D) * (v1 == 0)) ^ v3)))(v4);
}

uint64_t sub_23C1B5388()
{
  int v1 = STACK[0xE70];
  LODWORD(STACK[0x42C]) = 0;
  int v2 = (v1 + 1771229883) | 0xA0;
  int v3 = *(void (**)(unint64_t))(v0 + 8 * (v1 + 1771231449));
  v3(STACK[0x440]);
  uint64_t v4 = (void (*)(unint64_t))*(&off_26EFDBE20 + (int)(v1 ^ 0x966D2B6F));
  v4(STACK[0x450]);
  v3(STACK[0x430]);
  v3(STACK[0x418]);
  v4(STACK[0x408]);
  v3(STACK[0x420]);
  v4(STACK[0x438]);
  uint64_t v5 = ((uint64_t (*)(unint64_t))v4)(STACK[0x410]);
  if (LODWORD(STACK[0x42C]) == (v2 ^ 0xA6)) {
    int v6 = 0;
  }
  else {
    int v6 = -42885;
  }
  unint64_t v7 = STACK[0x3F8];
  LODWORD(STACK[0x115C]) = (v6 ^ 0xB7BCEEA) - 142149632 + ((v6 << (((v1 - 69) | 0xA0) ^ 0xA7)) & 0x16F690D4);
  STACK[0x3F8] = v7 - 32;
  LODWORD(v7) = (LODWORD(STACK[0x17AC]) ^ 0xD5DCA708) + 1805637193 + (STACK[0x17B0] & 0x4FFCAFFE ^ 0x4444A1EE);
  LODWORD(STACK[0x1160]) = v7;
  LOBYTE(STACK[0x1167]) = v7 < 0x939E2E48;
  uint64_t v8 = (uint64_t (*)(uint64_t))*(&off_26EFDBE20 + ((420 * (v7 == -1818350008)) ^ v2));
  LODWORD(STACK[0xBD4]) = v2;
  LODWORD(STACK[0xBD8]) = 565714526;
  return v8(v5);
}

uint64_t sub_23C1B5394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60)
{
  int v62 = (v60 - 476121225) & 0x1C61068F;
  BOOL v63 = a60 - 174157560 < (((v62 + 119) | 0x1A) ^ 0x317u);
  return (*(uint64_t (**)(unint64_t *))(v61 + 8 * (((2 * v63) | (4 * v63)) ^ v62)))(&STACK[0x1540]);
}

uint64_t sub_23C1B53D4()
{
  (*(void (**)(void))(v1 + 8 * (v3 ^ (v0 - 462))))(*(void *)(v2 + 360));
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((**(void **)(v4 + 3992) != 0)
                                     * ((((v3 ^ 0x966D2DE0) + 430) ^ 0xFFFFFC54) + 3 * (v3 ^ 0x966D2DE0))) | (v3 + 1771230390))))();
}

uint64_t sub_23C1B540C(uint64_t a1, int a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((15 * ((*(char *)(STACK[0x1548] + (v4 ^ v3)) - 48) > 9)) ^ (a2 + v5 - 1024663588 - 1084))))();
}

void sub_23C1B5438()
{
}

uint64_t sub_23C1B54E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8 * ((49 * (((v4 ^ v5 ^ 0x47 ^ (15 * (v4 ^ 0x48))) + v3) < 6u)) ^ v4)))();
}

uint64_t sub_23C1B5530@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v6 = v4 + v3 + 32;
  int v7 = a1 + v5 - 1357;
  uint64_t v8 = *(uint64_t (**)(void))(a2 + 8 * ((99 * (((a3 + 538924245) & ((v7 ^ 0x23079AAB) + v6)) >= 0)) ^ (a1 + v5 - 871)));
  LODWORD(STACK[0x9B4]) = v7;
  return v8();
}

uint64_t sub_23C1B55D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  (*(void (**)(void))(a3 + 8 * (v4 ^ (a4 - 496))))(*(void *)(v5 + 49));
  unsigned int v6 = 7 * (v4 ^ 0x966D2D67);
  LODWORD(STACK[0x204]) = -45002;
  return ((uint64_t (*)(void, uint64_t))*(&off_26EFDBE20
                                                   + (int)((((unsigned __int16)(((v6 ^ 0x1ED) + 11378) ^ (LOWORD(STACK[0x1540]) - ((2 * LOWORD(STACK[0x1540]) - 11126) & (v6 ^ 0xBD4A)) - 14204) ^ 0x7375) > 1u)
                                                          * (5 * (v6 ^ 0x1ED) + 360)) ^ v6)))(0, 1771231427);
}

void sub_23C1B5610(int a1@<W1>, uint64_t a2@<X2>, char a3@<W3>, char a4@<W8>)
{
  int v7 = STACK[0x9B4];
  LODWORD(STACK[0x9B8]) = STACK[0x9B4];
  LODWORD(STACK[0x9BC]) = v7 ^ 0x341;
  LODWORD(STACK[0x9C0]) = (v7 ^ 0x341) - a1 + 654;
  char v8 = (v4 + 106) | (16 * a4 - ((32 * a4 - 96) & 0xE0) + 66) ^ 0xF2;
  uint64_t v9 = *(void *)(v6 + 49) + (LODWORD(STACK[0x12B4]) - 377722377);
  unsigned int v10 = 1394700225 * ((v9 ^ *(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28))) & 0x7FFFFFFF);
  unint64_t v11 = 1394700225 * (v10 ^ HIWORD(v10));
  LOBYTE(STACK[0x4AB]) = (v8 - ((2 * v8) & 0x92) + (((v7 ^ 0x41) - a1 - 114) ^ (a3 - 57)) - 16) ^ byte_23C214E80[v11 >> 24] ^ byte_23C2107A0[(v11 >> 24) + 2] ^ byte_23C212CF0[(v11 >> 24) + 1] ^ v11 ^ (-9 * BYTE3(v11)) ^ 0x49;
  uint64_t v12 = *(void *)(a2 + 8 * (v7 ^ 0x597));
  *(void *)(v5 + 168) = v9;
  *(void *)(v5 + 160) = v12;
  JUMPOUT(0x23C1AC3F0);
}

uint64_t sub_23C1B5754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v72 = (*(uint64_t (**)(uint64_t))(v71 + 12416))(a56 - 0x494B3BC83CF4FA61);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + ((22 * (a71 == 0x5A72C1CEA1245FC3)) ^ 0x44F)))(v72);
}

uint64_t sub_23C1B5764()
{
  int v5 = v0 - 1261;
  (*(void (**)(void))(v3 + 8 * ((v0 - 1261) ^ (v1 - 496))))(*(void *)(v2 + 161));
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(void *)(v4 + 64) != 0) * (((v5 + 1771230005) | 0x7F) - 53)) ^ (v5 + 1771231006))))();
}

uint64_t sub_23C1B5790()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v0 + 8 * (v1 + 616)))(*(void *)(v3 + 472));
  unint64_t v5 = ((v4 << (((v1 + 49) | 0xC5) ^ 0xC4)) & 0xFCBFFDFBFF067FB6) + (v4 ^ 0xFE5FFEFDFF833FDBLL);
  STACK[0x1110] = v5;
  uint64_t v6 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20 + (v1 ^ 0x5E9)))(v5 + 0x1A00102007CC026, 2663297126);
  STACK[0x1118] = v6;
  *(void *)(v2 + 112) = v6;
  return (*(&off_26EFDBE20 + ((54 * (v6 == 0)) ^ v1)))();
}

uint64_t sub_23C1B587C()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v0 + 8 * (v3 + 1372)))();
  char v5 = ((uint64_t (*)(void, unint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v3 + 1408))(*(void *)(v1 + 472), STACK[0x1118], v2, v4);
  return (*(&off_26EFDBE20 + ((44 * ((((2 * v5) & 0x5C) + (v5 ^ ((v3 ^ 0x8E) - 29))) == 46)) ^ v3)))();
}

uint64_t sub_23C1B5928(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v5 = (uint64_t)(STACK[0x1110] + 0x1A00102007CC025) / (((v4 + 1057) ^ (a4 - 993)) - 2523737417)
     - ((2 * ((uint64_t)(STACK[0x1110] + 0x1A00102007CC025) / (((v4 + 1057) ^ (a4 - 993)) - 2523737417))) & 0x54A59B8E)
     + ((v4 - 754932481) & 0x2CFF5F45)
     - 1437415038;
  LODWORD(STACK[0x304]) = v5 ^ 0xA01956E6;
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a3 + 8 * ((v4 + 1057) | 0x204)))(v5 ^ 0xAA52CDC7, 50, 2114404905);
  STACK[0x1378] = v6;
  return (*(&off_26EFDBE20 + (((v6 != 0) | (8 * (v6 != 0))) ^ (v4 + 1057))))();
}

uint64_t sub_23C1B5A24(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((v5 == (v4 ^ (a4 - 1085) ^ 0x9C26B66A)) * (v4 - 1072)) ^ v4)))();
}

void sub_23C1B5A60()
{
  unsigned int v3 = v0 ^ (v1 + 381) ^ (v2 - 450);
  if (v3 <= 1) {
    unsigned int v3 = 1;
  }
  LODWORD(STACK[0x125C]) = v3 + 1344109246;
  JUMPOUT(0x23C1B5A90);
}

uint64_t sub_23C1B5B04(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((509
                                * ((*(char *)(*(void *)(v6 + 3360)
                                                          + ((v5
                                                            + v4
                                                            - 321
                                                            - (((LODWORD(STACK[0x1760]) << (a2 + (v4 ^ (a4 + 89)) - 12))
                                                              - 1081469692) & 0xC3A7518C)
                                                            - 1046958181) ^ 0x61D3A8C7))
                                                - 48) < 0xA)) ^ v4)))();
}

uint64_t sub_23C1B5BAC(uint64_t a1, int a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((((*(char *)(*(void *)(v6 + 3360) + (v4 ^ v3)) - 48) < 0xA)
                                * ((a2 + v5 - 748) ^ 0x327)) | (a2 + v5 - 358))))();
}

uint64_t sub_23C1B5CC4@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W3>, int a4@<W8>)
{
  BOOL v8 = v4 < a4 + 1 || v5 + 75564053 >= 0;
  uint64_t v9 = *(uint64_t (**)(void))(a2 + 8 * ((50 * (((v6 ^ (a3 + 73)) ^ v8) & 1)) ^ (a1 + v6 - 769)));
  LODWORD(STACK[0x6DC]) = v6 ^ (a3 - 183);
  return v9();
}

void sub_23C1B5DB4()
{
  int v3 = STACK[0x6DC];
  LODWORD(STACK[0x6E0]) = STACK[0x6DC];
  unsigned int v4 = (v3 - 562217572) & 0xB7EFEDCF;
  LODWORD(STACK[0x6E4]) = v4;
  LODWORD(STACK[0x6E8]) = v3 + 164;
  char v5 = v1 + 104;
  char v6 = (~((((v3 - 92) ^ 0xE3) + 32 * v0) & (v4 + 21)) + 16 * v0 + 110) ^ 0xBD | v5;
  unsigned int v7 = 1394700225
     * (((*(_DWORD *)(v2 + 3968) + LODWORD(STACK[0x1760]) - 1344109247) ^ *(_DWORD *)(qword_268B99310
                                                                                    + (dword_268B99318 & 0x7D714E28))) & 0x7FFFFFFF);
  unint64_t v8 = 1394700225 * (v7 ^ HIWORD(v7));
  LOBYTE(STACK[0x4AB]) = byte_23C2111C0[v8 >> 24] ^ byte_23C217710[v8 >> 24] ^ byte_23C213330[(v8 >> 24) + 1] ^ v8 ^ (5 * BYTE3(v8)) ^ (v6 - 2 * (v6 & 0x1D ^ v5 & 0xD) + 16) ^ 0x10;
  JUMPOUT(0x23C1D1D8CLL);
}

uint64_t sub_23C1B5EFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  (*(void (**)(void))(a3 + 8 * (v4 ^ (a4 - 496))))(*(void *)(v5 + 3968));
  LODWORD(STACK[0x2BC]) = -45002;
  unsigned int v6 = (((unsigned __int16)((((v4 - 11756) & 0x2DEB) + 4641) ^ (LOWORD(STACK[0x1110])
                                                              - (((LOWORD(STACK[0x1110]) << (v4 - 74)) + 74) & 0x7EDA)
                                                              - 110))
       + (unsigned __int16)~(v4 - 11594)) >> 16) ^ 1;
  return ((uint64_t (*)(void))*(&off_26EFDBE20 + (int)(((4 * v6) | (v6 << 6)) ^ ((v4 + 1771229878) | 0x106))))(0);
}

uint64_t sub_23C1B5F70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v2 + ((v1 + 1482051518) & 0xA7A9AEBB) + ((v1 - 2074081733) | 0x120D2102) - 2216)
                                     * (a1 == 0)) ^ (v1 - 278))))();
}

uint64_t sub_23C1B5FD8@<X0>(int a1@<W8>)
{
  int v4 = (2 * a1) ^ 0x8E0;
  uint64_t v5 = *(uint64_t (**)(void))(v3
                           + 8
                           * ((((**(_DWORD **)(v2 + 97) - 1598675576) < 0xFFFFFFF3) * (v4 ^ (a1 - 709))) ^ a1));
  LODWORD(STACK[0x96C]) = v4;
  *(void *)(v1 + 1400) = 652531510;
  return v5();
}

void sub_23C1B602C()
{
  uint64_t v4 = v1[175];
  v1[176] = v4;
  int v5 = STACK[0x96C];
  LODWORD(STACK[0x984]) = 2 * (LODWORD(STACK[0x96C]) ^ 0x17A);
  LODWORD(STACK[0x988]) = v5 ^ 0x966D2CBB;
  v4 -= 652531510;
  char v6 = *(unsigned char *)(*(void *)(v0 + 496) + v4);
  LODWORD(STACK[0x980]) = v5;
  LOBYTE(STACK[0x98F]) = v6;
  uint64_t v7 = **(void **)(v2 + 89) + v4;
  v1[179] = v7;
  v1[64] = v7;
  v1[62] = *(void *)(v3 + 8 * (v5 ^ 0x4A7));
  JUMPOUT(0x23C1D8748);
}

uint64_t sub_23C1B6094@<X0>(int a1@<W8>)
{
  int v3 = a1 - 1771231037;
  (*(void (**)(void))(v1 + 8 * (a1 + 392)))();
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(void *)(v2 + 232) == 0) * (((v3 - 2025101518) & 0xE2476FEF) - 1075)) ^ (v3 + 1771231248))))();
}

uint64_t sub_23C1B6124(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3
                                                     + 8
                                                     * ((51
                                                       * ((*(char *)(*(void *)(v5 + 3512)
                                                                                 + ((2 * LODWORD(STACK[0x1120])
                                                                                   - (((v4 ^ (a4 - 1023) ^ 0xE4CD84B)
                                                                                     + 4 * LODWORD(STACK[0x1120])) & 0x3E6B8974)
                                                                                   + 726056762) ^ 0x9F35C4BA))
                                                                       - 48) > 9)) ^ v4)))(a1, 1771231427);
}

uint64_t sub_23C1B61CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((58
                                * (((((v3 - 1873277287) | 0x4484491D) ^ 0xBBBBBBBB) & 0xE6) > (((v3 + 23) ^ 0xA1) + v4))) ^ (v3 + 279))))();
}

uint64_t sub_23C1B6224(uint64_t a1, int a2, uint64_t a3)
{
  BOOL v7 = ((((a2 + ((v5 + 34) & 0x6B) - 122) | 0xB) + 107) & 0xFEu) <= (*(unsigned char *)(*(void *)(v6 + 3512) + (v4 ^ (v3 + 1))) - 48);
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((8 * v7) | (32 * v7) | (a2 + ((v5 + 589538338) & 0x9E6D2D6B) - 267))))();
}

uint64_t sub_23C1B62E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((53
                                * ((v3 - 65) >= (((v4 + 110) | 0x10) - 23))) ^ v4)))();
}

uint64_t sub_23C1B6324@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  unsigned int v6 = (v5 - 134370494) & 0x9E6F7FEB;
  int v7 = v3 + v6 + 230335077;
  if ((v4 - 97) >= 6) {
    int v8 = 301001733;
  }
  else {
    int v8 = v7;
  }
  int v9 = (a1 + v6 - 1404) | 0x240;
  BOOL v11 = a3 + 847189069 <= v9 - 723 && v8 + 1846481914 < 0;
  uint64_t v12 = *(uint64_t (**)(void))(a2 + 8 * (int)((22 * v11) ^ (a1 + v6 - 895)));
  LODWORD(STACK[0x6CC]) = v9;
  return v12();
}

void sub_23C1B63F8(char a1@<W8>)
{
  int v3 = STACK[0x6CC];
  LODWORD(STACK[0x6D0]) = STACK[0x6CC];
  int v4 = (v3 - 10879700) & 0xA6017F;
  LODWORD(STACK[0x6D4]) = v4;
  v4 -= 165;
  LODWORD(STACK[0x6D8]) = v4;
  char v5 = (v1 - 6) | (16 * a1 - ((32 * a1 - 96) & 0xC0) + 58) ^ 0x6A;
  char v6 = v5 - ((2 * v5) & 0x88) + v4 + 107;
  unsigned int v7 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ (*(_DWORD *)(v2 + 3368)
                                                                        + LODWORD(STACK[0x1568])
                                                                        - 972522176)) & 0x7FFFFFFF);
  unint64_t v8 = 1394700225 * (v7 ^ HIWORD(v7));
  LOBYTE(STACK[0x4AB]) = v6 ^ byte_23C2111C0[v8 >> 24] ^ byte_23C217710[v8 >> 24] ^ byte_23C213330[(v8 >> 24) + 1] ^ v8 ^ (5 * BYTE3(v8)) ^ 0x44;
  JUMPOUT(0x23C1D1D8CLL);
}

uint64_t sub_23C1B6534(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  (*(void (**)(unint64_t))(a3 + 8 * (v4 ^ (a4 - 496))))(STACK[0x1568]);
  unint64_t v7 = 591644117 * ((v6 - 200) ^ 0xE41B20C99B054A47);
  *(void *)(v5 + 448) = (char *)*(&off_26EFDBE20 + v4 + 1771230065) - v7;
  *(_DWORD *)(v6 - 176) = -922504226 - v7 + v4;
  *(void *)(v5 + 464) = &STACK[0x4398FF68D079C213];
  uint64_t v8 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + v4 + 1771231434))(v6 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + ((v4 + 1771230065) ^ 0x343 ^ ((*(_DWORD *)(v6 - 192) == ((v4 + 1771230022) ^ 0x91))
                                                                         * (v4 + 1771231622)))))(v8);
}

uint64_t sub_23C1B6578(int a1, uint64_t a2)
{
  uint64_t v10 = 4 * (v2 - 2001786013);
  unsigned int v11 = *((_DWORD *)&xmmword_268B98018 + (v2 - 2001786014)) ^ 0x838F23FE ^ (*((_DWORD *)&xmmword_268B98018
                                                                                          + (v2 - 2001786014)) >> 30);
  unsigned int v12 = (*(_DWORD *)((char *)&xmmword_268B98018 + v10) ^ 0x2174E55D ^ (1664525 * v11
                                                                     - ((3329050 * v11) & 0x45F78D42)
                                                                     - 1560557919))
      + (*(_DWORD *)(v3 + 4 * (v5 - 341954823)) ^ 0x838F23FC);
  unsigned int v13 = (v12 ^ 0x5761D8DD) + v5 + ((2 * v12) & 0xAEC3B1BA);
  *(_DWORD *)((char *)&xmmword_268B98018 + v10) = v13 - 2 * ((v13 + 3954204) & 0x38F23FE ^ v13 & 2) + 399211032;
  STACK[0x458] = *(void *)(a2 + 8 * (v7 + 1771230045));
  LODWORD(STACK[0x470]) = (v7 + 276215816) ^ 0x32;
  *(_DWORD *)(v9 - 192) = 1431737413 * (((v6 | 0xB57CAB35) + (~v6 | 0x4A8354CA)) ^ 0xB223426) + 40706419 + v7;
  LODWORD(STACK[0x460]) = v7 + 276215816;
  LODWORD(STACK[0x474]) = (v7 + 276215816) ^ 0x97;
  STACK[0x468] = (v2 + 1125678910);
  STACK[0x480] = 3127464922;
  LODWORD(STACK[0x478]) = 0;
  *(void *)(v4 + 448) = v8;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v7 ^ (a1 - 518))))(v9 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v9 - 188)))(v14);
}

uint64_t sub_23C1B6750()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((2 * (((v1 < 0xBA6953DA) ^ (v2 ^ (v2 + 75))) & 1)) & 0xEF | (16 * (((v1 < 0xBA6953DA) ^ (v2 ^ (v2 + 75))) & 1))) ^ (v2 + 1771230084))))();
}

uint64_t sub_23C1B67A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  return (*(uint64_t (**)(void))(v47
                              + 8
                              * (((2 * (v48 <= (a47 & 0xEA1254FF) - 1167501972)) | (16
                                                                                  * (v48 <= (a47 & 0xEA1254FF)
                                                                                          - 1167501972))) ^ (v49 + 1771230084))))();
}

uint64_t sub_23C1B6808()
{
  int v9 = v0 ^ (v1 + 75);
  LODWORD(xmmword_268B98018) = dword_268B989D4;
  STACK[0x458] = *(void *)(v3 + 8 * ((v9 - 2142544279) ^ 0x16B88B1CLL));
  STACK[0x468] = (v5 + 1892041372);
  STACK[0x480] = 2233996194;
  LODWORD(STACK[0x460]) = v9 - 2142544279;
  LODWORD(STACK[0x470]) = v9 - 2142544277;
  LODWORD(STACK[0x474]) = (v9 - 2142544279) ^ 0x8D;
  LODWORD(STACK[0x478]) = 0;
  *(void *)(v4 + 448) = v7;
  *(_DWORD *)(v8 - 192) = 1431737413 * ((v6 - 726768958 - 2 * (v6 & 0xD4AE62C2)) ^ 0x6AF0FDD0) + 40706419 + v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v9 + v2)))(v8 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v8 - 188)))(v10);
}

uint64_t sub_23C1B6904(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((54 * (((v2 < 0x852813A2) ^ 0x45) & 1)) ^ (v3 - 1771230847))))();
}

uint64_t sub_23C1B6980(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((54 * (v2 <= 0x852813A5)) ^ (v3 - 1771230847))))();
}

uint64_t sub_23C1B69EC@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v47 = (a3 - 452) | 0x400;
  *(_DWORD *)(v44 + 4 * (v46 - 341955974 + v47)) ^= 0x1F208C7 ^ *(_DWORD *)(a43
                                                                                          + 4
                                                                                          * (v46 - 341955974 + v47));
  BOOL v48 = ((a1 + v47 - 1152) ^ (v43 - 1551)) + v45 == 597822701;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((2 * (((a3 + 60 - v43 - 114) ^ v48) & 1)) & 0xFB | (4 * (((v47 - v43 + 398) ^ v48) & 1)) | v47)))();
}

uint64_t sub_23C1B6A88(int a1, uint64_t a2)
{
  return sub_23C1B6578(a1, a2);
}

uint64_t sub_23C1B6A90@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *int v3 = v3[623];
  return (*(uint64_t (**)(void))(a1 + 8 * ((2012 * (v4 - 1 == ((a2 + 237) ^ 0x346) - v2 - 2036155122)) ^ (a2 + 237))))();
}

uint64_t sub_23C1B6AE4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v5 = 4 * (v3 - 2001786013);
  unsigned int v6 = *((_DWORD *)&xmmword_268B98018 + (v3 - 2001786014));
  int v7 = (*(_DWORD *)((char *)&xmmword_268B98018 + v5) ^ 0xA7F0D380 ^ (1566083941
                                                                   * (v6 ^ 0x3E2365F2 ^ ((v6 >> 30) | 0xBDAC460C))
                                                                   - ((984684234
                                                                     * (v6 ^ 0x3E2365F2 ^ ((v6 >> 30) | 0xBDAC460C))) & 0x48FFE0F8)
                                                                   + 612364412))
     - v3;
  *(_DWORD *)((char *)&xmmword_268B98018 + v5) = v7 - ((2 * v7 + 111257914) & 0x71E47F8) - 85985127;
  STACK[0x458] = *(void *)(a1 + 8 * ((a2 - 660411775) ^ 0x6F101705));
  STACK[0x468] = 868881596;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = a2 - 660411773;
  LODWORD(STACK[0x474]) = a2 - 660411775;
  LODWORD(STACK[0x478]) = a2 - 660411734;
  STACK[0x480] = (v3 - 1132904416);
  STACK[0x22C8] = (unint64_t)&STACK[0x458];
  *(_DWORD *)(v4 - 192) = 1431737413 * ((((v4 - 200) | 0x7E8199B1) + (~(v4 - 200) | 0x817E664E)) ^ 0xC0DF06A2)
                        + 40706419
                        + a2;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 + v2)))(v4 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v4 - 188)))(v8);
}

uint64_t sub_23C1B6C8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8 * ((2 * (v2 >= 0x33CA14BC)) & 0xBF | ((v2 >= 0x33CA14BC) << 6) | (v3 - 1771230739))))();
}

uint64_t sub_23C1B6D00(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((66 * (v2 <= 0x33CA172B)) ^ (v3 - 1771230739))))();
}

uint64_t sub_23C1B6D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v49 = (v48 - 2140854103) | 0x16080409;
  LODWORD(xmmword_268B98018) = 59712508;
  (*(void (**)(uint64_t))(a2 + 8 * (v48 ^ 0x6BD)))(a48);
  signed int v50 = 13 * (v49 ^ 0x966D2D56);
  int8x16_t v51 = (int8x16_t)vld1q_dup_f32((const float *)&xmmword_268B98018);
  v52.i64[0] = 0x8000000080000000;
  v52.i64[1] = 0x8000000080000000;
  v53.i64[0] = *(void *)((char *)&xmmword_268B98018 + 4);
  v53.i32[2] = HIDWORD(xmmword_268B98018);
  int8x16_t v54 = vextq_s8(v51, v53, 0xCuLL);
  int8x16_t v55 = v53;
  v55.i32[3] = dword_268B98028[0];
  int8x16_t v56 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v54, v52), vdupq_n_s32(0xF0D47B2F)), (int8x16_t)vdupq_n_s32(0xCE2B8098)), vdupq_n_s32(0x961CFFCu));
  int32x4_t v57 = (int32x4_t)veorq_s8(vandq_s8(v55, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xBED8201D));
  int32x4_t v58 = (int32x4_t)vorrq_s8(veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v57, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v57, v57), (int8x16_t)vdupq_n_s32(0x31320E46u))), vdupq_n_s32(0x18990723u)), (int8x16_t)vdupq_n_s32(0xA5CE04C2)), veorq_s8(v56, (int8x16_t)vdupq_n_s32(0xC861CBB3)));
  v59.i32[0] = *((_DWORD *)&STACK[0x2138] + (BYTE4(xmmword_268B98018) & 1));
  v59.i32[1] = *((_DWORD *)&STACK[0x2138] + (DWORD2(xmmword_268B98018) & (((v50 - 1465490066) & 0x57599D7Cu) - 1123)));
  v59.i32[2] = *((_DWORD *)&STACK[0x2138] + (BYTE12(xmmword_268B98018) & 1));
  v59.i32[3] = *((_DWORD *)&STACK[0x2138] + (dword_268B98028[0] & 1));
  xmmword_268B98018 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B9864C, v59), (int8x16_t)vdupq_n_s32(0xC3AEC722)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v58, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v58, v58), (int8x16_t)vdupq_n_s32(0xD83AA1FA))), vdupq_n_s32(0x6C1D50FDu)), 1uLL));
  return (*(&off_26EFDBE20 + v50))();
}

uint64_t sub_23C1B6DD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v55 = 4 * (v49 - 1182391787);
  unsigned int v56 = *((_DWORD *)&xmmword_268B98018 + (v49 - 1182391788)) ^ 0x6C30F996 ^ ((*((_DWORD *)&xmmword_268B98018
                                                                                            + (v49 - 1182391788)) >> 30) | 0xEFBFDA68);
  unsigned int v57 = (*(_DWORD *)((char *)&xmmword_268B98018 + v55) ^ 0x16A28656 ^ (1664525 * v56
                                                                     - ((3329050 * v56) & 0x2A5B4B54)
                                                                     - 1792170582))
      + (*(_DWORD *)(a48 + 4 * (v50 - 1855939236)) ^ 0x838F23FC);
  unsigned int v58 = (v57 ^ 0xFF5BDFFD) + v50 + ((2 * v57) & 0xFEB7BFFA);
  *(_DWORD *)((char *)&xmmword_268B98018 + v55) = v58 - ((2 * v58 + 67730110) & 0x71E47F8) + 362013019;
  STACK[0x458] = *(void *)(a2 + 8 * ((v53 - 1296799437) ^ 0x492196B7));
  LODWORD(STACK[0x470]) = v53 - 1296799405;
  LODWORD(STACK[0x474]) = v53 - 1296799437;
  LODWORD(STACK[0x478]) = v53 - 1296799555;
  LODWORD(STACK[0x460]) = 1;
  STACK[0x468] = 2308966733;
  STACK[0x480] = (v49 + 1126574947);
  *(_DWORD *)(v54 - 192) = 1431737413 * ((~(v51 | 0xB75B010F) + (v51 & 0xB75B010F)) ^ 0xF6FA61E2) + 40706419 + v53;
  *(void *)(v48 + 448) = v52;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v53 ^ (a3 - 518))))(v54 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v54 - 188)))(v59);
}

uint64_t sub_23C1B6FB4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 + 1771230383) ^ 0x211) * (v1 < 0x89A0094D)) ^ (v2 + 1771230383))))();
}

uint64_t sub_23C1B6FF8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * ((1003 * (v1 > (v2 ^ (v2 - 154)) - 1986000446)) ^ (v2 + 1771230383))))();
}

uint64_t sub_23C1B7048()
{
  int v8 = v0 - v1 + 1044;
  LODWORD(xmmword_268B98018) = dword_268B989D4;
  int v9 = v0 - v1 - 1993435562;
  STACK[0x458] = *(void *)(v2 + 8 * (v9 ^ 0x1F9BBF25));
  STACK[0x468] = (v4 + 971892190);
  STACK[0x480] = 2827831425;
  LODWORD(STACK[0x460]) = v9;
  LODWORD(STACK[0x470]) = v9 ^ 0xA;
  LODWORD(STACK[0x474]) = v9 ^ 0x79;
  LODWORD(STACK[0x478]) = 0;
  *(void *)(v3 + 448) = v6;
  *(_DWORD *)(v7 - 192) = 1431737413 * ((((2 * v5) | 0x69046418) - v5 - 880947724) ^ 0x8ADCAD1E) + 40706419 + v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v8 + v1)))(v7 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v7 - 188)))(v10);
}

uint64_t sub_23C1B714C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((472 * (((v3 < ((v2 - 1771230936) ^ 0xA88D496A)) ^ 0xF9) & 1)) ^ (v2 - 1771231178))))();
}

uint64_t sub_23C1B71C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((472 * (((v46 + 54) ^ (v47 > (a46 & 0x67A45EB ^ 0xA88D496F))) & 1)) ^ (v46 - 1771231178))))();
}

uint64_t sub_23C1B723C@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  *(_DWORD *)(a42 + 4 * ((a2 ^ 0x91609DA4) + v43)) ^= 0x9079027D ^ *(_DWORD *)(a41 + 4 * ((a2 ^ 0x91609DA4) + v43));
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1023 * (v42 + v44 + (((a2 ^ 0x112) - v42 + 1216349751) & 0xB77FFDEB) != 672867773)) ^ a2 ^ 0x112)))();
}

uint64_t sub_23C1B72E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  return sub_23C1B6DD0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_23C1B72FC@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *unsigned int v3 = v3[623];
  return (*(uint64_t (**)(void))(a1 + 8 * ((((a2 ^ 0x8A ^ (v2 - 171)) - v2 + 553) * (v4 == 2063076134)) ^ a2 ^ 0x8A)))();
}

uint64_t sub_23C1B734C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v6 = 4 * (v3 - 1182391787);
  unsigned int v7 = *((_DWORD *)&xmmword_268B98018 + (v3 - 1182391788));
  int v8 = (*(_DWORD *)((char *)&xmmword_268B98018 + v6) ^ 0x9081EC30 ^ (1566083941
                                                                   * (v7 ^ 0xECBB8BCA ^ ((v7 >> 30) | 0x6F34A834))
                                                                   - ((984684234
                                                                     * (v7 ^ 0xECBB8BCA ^ ((v7 >> 30) | 0x6F34A834))) & 0x261D9F98)
                                                                   + 319737804))
     - v3;
  *(_DWORD *)((char *)&xmmword_268B98018 + v6) = v8 - ((2 * v8 + 83082198) & 0x71E47F8) - 905379353;
  STACK[0x458] = *(void *)(a1 + 8 * ((a2 - 1744544305) ^ 0x2E718BB2));
  STACK[0x468] = (v3 - 704395570);
  STACK[0x480] = 477996216;
  LODWORD(STACK[0x460]) = a2 - 1744544305;
  LODWORD(STACK[0x470]) = a2 - 1744544312;
  LODWORD(STACK[0x474]) = a2 - 1744544161;
  LODWORD(STACK[0x478]) = 0;
  *(void *)(v4 + 448) = &STACK[0x458];
  *(_DWORD *)(v5 - 192) = 1431737413
                        * ((((v5 - 200) | 0xCAE7C3E1) - (v5 - 200) + ((v5 - 200) & 0x35183C18)) ^ 0x74B95CF3)
                        + 40706419
                        + a2;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 ^ v2)))(v5 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v5 - 188)))(v9);
}

uint64_t sub_23C1B74E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((707 * (v2 < 0x1C7DA4B8)) ^ 0x161)))();
}

uint64_t sub_23C1B754C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((707 * (v2 > 0x1C7DA727)) ^ 0x161)))();
}

uint64_t sub_23C1B759C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v49 = (v47 + 67) ^ (v48 - 67);
  LODWORD(xmmword_268B98018) = 59712508;
  (*(void (**)(uint64_t))(a2 + 8 * (v47 + 1572)))(a47);
  int8x16_t v50 = (int8x16_t)vld1q_dup_f32((const float *)&xmmword_268B98018);
  v51.i64[0] = 0x8000000080000000;
  v51.i64[1] = 0x8000000080000000;
  v52.i64[0] = 0x8000000080000000;
  v52.i64[1] = 0x8000000080000000;
  v53.i64[0] = 0x600000006;
  v53.i64[1] = 0x600000006;
  uint64_t v54 = (2 * (v49 ^ 0x966D2EC9)) ^ 0x707;
  v55.i64[0] = *(void *)((char *)&xmmword_268B98018 + 4);
  v55.i32[2] = *((_DWORD *)&xmmword_268B98018 + v54);
  int8x16_t v56 = vextq_s8(v50, v55, 0xCuLL);
  int8x16_t v57 = v55;
  v57.i32[3] = dword_268B98028[0];
  int8x16_t v58 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v56, v51), vdupq_n_s32(0x8E0507D3)), (int8x16_t)vdupq_n_s32(0x71EA986Du)), vdupq_n_s32(0x4B2444DDu));
  int32x4_t v59 = (int32x4_t)veorq_s8(vandq_s8(v57, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x5B0E6E90u));
  int8x16_t v60 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v59, v59), (int8x16_t)vdupq_n_s32(0x1AE70D4u)), v59), vdupq_n_s32(0xFF28C794));
  int8x16_t v61 = veorq_s8(v60, (int8x16_t)vdupq_n_s32(0xA7A98AF8));
  int32x4_t v62 = (int32x4_t)veorq_s8(vandq_s8(v61, (int8x16_t)vdupq_n_s32(0x1B052596u)), vandq_s8(v60, v53));
  uint32x4_t v63 = (uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v61, vandq_s8(v58, v52)), vaddq_s32(v62, v62)), vdupq_n_s32(0x9B052590));
  v61.i32[0] = *((_DWORD *)&STACK[0x1880] + (BYTE4(xmmword_268B98018) & 1));
  v61.i32[1] = *((_DWORD *)&STACK[0x1880] + (BYTE8(xmmword_268B98018) & 1));
  v61.i32[2] = *((_DWORD *)&STACK[0x1880] + (*((_DWORD *)&xmmword_268B98018 + v54) & 1));
  v61.i32[3] = *((_DWORD *)&STACK[0x1880] + (dword_268B98028[0] & 1));
  xmmword_268B98018 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B9864C, v61), (int8x16_t)vdupq_n_s32(0x601F7B3Fu)), (int8x16_t)vshrq_n_u32(v63, 1uLL));
  return (*(&off_26EFDBE20 + (int)(v49 ^ 0x966D2EC9)))();
}

uint64_t sub_23C1B7604(int a1, uint64_t a2, int a3)
{
  uint64_t v11 = 4 * (v9 - 1685103946);
  unsigned int v12 = *((_DWORD *)&xmmword_268B98018 + (v9 - 1685103947)) ^ 0x838F23FE ^ (*((_DWORD *)&xmmword_268B98018
                                                                                          + (v9 - 1685103947)) >> 30);
  unsigned int v13 = (*(_DWORD *)((char *)&xmmword_268B98018 + v11) ^ 0x299D688D ^ (1664525 * v12
                                                                     - ((3329050 * v12) & 0x542496E2)
                                                                     - 1441641615))
      + (*(_DWORD *)(v5 + 4 * (v4 - 1088848744)) ^ 0x838F23FC);
  int v14 = (v13 ^ 0x3FFFF9DF) + v4 + (a3 & (2 * v13));
  *(_DWORD *)((char *)&xmmword_268B98018 + v11) = v14 - ((2 * v14 + 104007026) & 0x71E47F8) + 44607157;
  STACK[0x458] = *(void *)(a2 + 8 * ((v3 + 1267383449) ^ 0x1FFFFFFFE1F7E92DLL));
  LODWORD(STACK[0x470]) = v3 + 1267383450;
  LODWORD(STACK[0x474]) = v3 + 1267383449;
  LODWORD(STACK[0x478]) = v3 + 1267383439;
  *(_DWORD *)(v10 - 192) = 1431737413 * ((~(v6 | 0xA015FCAE) + (v6 & 0xA015FCAE)) ^ 0xE1B49C43) + 40706419 + v3;
  LODWORD(STACK[0x460]) = 1;
  STACK[0x468] = 2576180610;
  STACK[0x480] = (v9 + 891076665);
  *(void *)(v7 + 448) = v8;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v3 ^ (a1 - 518))))(v10 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v10 - 188)))(v15);
}

uint64_t sub_23C1B77D0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 + 1771230575) ^ 0x2DA) * (v1 < 0x998D6582)) ^ (v2 + 1771230575))))();
}

uint64_t sub_23C1B7818()
{
  int v3 = v1 > ((2 * (v2 ^ (v2 - 309))) ^ 0x998D654B);
  return (*(uint64_t (**)(void))(v0 + 8 * (((32 * v3) | (v3 << 6)) ^ (v2 + 1771230575))))();
}

uint64_t sub_23C1B7868()
{
  unsigned int v8 = (v0 - 1074959567) & 0xD67FBF5F;
  LODWORD(xmmword_268B98018) = dword_268B989D4;
  STACK[0x458] = *(void *)(v2 + 8 * (int)(v8 + 1771230045));
  STACK[0x468] = (v3 - 2079377726);
  STACK[0x480] = 3304438313;
  LODWORD(STACK[0x460]) = v8 + 1076178381;
  LODWORD(STACK[0x470]) = (v8 + 1076178381) ^ 0x7E;
  LODWORD(STACK[0x474]) = v8 + 1076178381;
  LODWORD(STACK[0x478]) = 0;
  *(_DWORD *)(v7 - 192) = 1431737413 * ((2 * (v4 & 0x454A6338) - v4 + 984980678) ^ 0x84EB03D4) + 40706419 + v8;
  *(void *)(v5 + 448) = v6;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (int)(v8 + v1)))(v7 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v7 - 188)))(v9);
}

uint64_t sub_23C1B796C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (v3 - 1771229877 + 8 * (v2 >= v3 + 1533206886) - 808)))();
}

uint64_t sub_23C1B79D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  return (*(uint64_t (**)(void))(a2
                              + 8 * (int)(((v46 <= 0xC4F5BA2C) * ((a46 & 0xAE9DC4FF) - 1206)) ^ (v47 - 1771230685))))();
}

uint64_t sub_23C1B7A60@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v47 = a3 + 842;
  uint64_t v48 = 4 * (v44 - 1088849957 + a3 + 842);
  *(_DWORD *)(v45 + v48) ^= 0x6D8C2798 ^ *(_DWORD *)(a43 + v48);
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((((v47 - v43 + 336) ^ (v43 - 1551)) + v46 == 957454943)
                                * ((a1 + v47 - 1214) ^ (a1 - 180))) ^ v47)))();
}

uint64_t sub_23C1B7AF4(int a1, uint64_t a2, int a3)
{
  return sub_23C1B7604(a1, a2, a3);
}

uint64_t sub_23C1B7AFC@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *int v3 = v3[623];
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((78
                                * (((((a2 + 93) | 0x20A) - 590830370) & 0x233758A7 ^ 0xFFFFFF5B) + v2 == ((((a2 + 93) | 0x20A) - 590830370) ^ 0x4AA58AB7) - 609747346)) ^ ((a2 + 93) | 0x20A))))();
}

uint64_t sub_23C1B7B74@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v5 = 4 * (v3 - 1685103946);
  unsigned int v6 = *((_DWORD *)&xmmword_268B98018 + (v3 - 1685103947));
  int v7 = (*(_DWORD *)((char *)&xmmword_268B98018 + v5) ^ 0xB9A17C75 ^ (1566083941
                                                                   * (v6 ^ 0x43DFCF72 ^ ((v6 >> 30) | 0xC050EC8C))
                                                                   - ((984684234
                                                                     * (v6 ^ 0x43DFCF72 ^ ((v6 >> 30) | 0xC050EC8C))) & 0x745CBF12)
                                                                   + 976117641))
     - v3;
  *(_DWORD *)((char *)&xmmword_268B98018 + v5) = v7 - ((2 * v7 + 14764692) & 0x71E47F8) - 402667194;
  STACK[0x458] = *(void *)(a1 + 8 * (a2 + 1771230045));
  STACK[0x468] = (v3 + 987002353);
  STACK[0x480] = 2672106298;
  LODWORD(STACK[0x460]) = a2 + 1520422217;
  LODWORD(STACK[0x470]) = a2 + 1520422236;
  STACK[0x474] = (a2 + 1520422086);
  STACK[0x22C8] = (unint64_t)&STACK[0x458];
  *(_DWORD *)(v4 - 192) = 1431737413 * ((~((v4 - 200) | 0xC8DC4CC) + ((v4 - 200) & 0xC8DC4CC)) ^ 0x4D2CA421)
                        + 40706419
                        + a2;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 + v2)))(v4 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v4 - 188)))(v8);
}

uint64_t sub_23C1B7D18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((15 * (v2 < 0x9F451B3A)) ^ (v3 - 1771231244))))();
}

uint64_t sub_23C1B7D74(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((15 * (v2 > 0x9F451DA9)) ^ (v3 - 1771231244))))();
}

uint64_t sub_23C1B7DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v50 = v48 ^ (v49 + 164);
  LODWORD(xmmword_268B98018) = 59712508;
  (*(void (**)(uint64_t))(a2 + 8 * (v48 + 1408)))(a48);
  int8x16_t v51 = (int8x16_t)vld1q_dup_f32((const float *)&xmmword_268B98018);
  v52.i64[0] = 0x8000000080000000;
  v52.i64[1] = 0x8000000080000000;
  int32x4_t v53 = vdupq_n_s32(0x7757BC95u);
  v54.i64[0] = 0x800000008;
  v54.i64[1] = 0x800000008;
  v55.i64[0] = *(void *)((char *)&xmmword_268B98018 + 4);
  v55.i32[2] = HIDWORD(xmmword_268B98018);
  int8x16_t v56 = vextq_s8(v51, v55, 0xCuLL);
  int8x16_t v57 = v55;
  v57.i32[3] = dword_268B98028[0];
  int8x16_t v58 = veorq_s8(vandq_s8(v57, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x27D0CF16u));
  int8x16_t v59 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v58, (int8x16_t)vdupq_n_s32(0x88A8436A)), (int32x4_t)vorrq_s8(v58, (int8x16_t)v53)), v53);
  int8x16_t v60 = veorq_s8(v59, (int8x16_t)vdupq_n_s32(0xACF7AF80));
  int32x4_t v61 = (int32x4_t)veorq_s8(vandq_s8(v60, (int8x16_t)vdupq_n_s32(0x640AF78Bu)), vandq_s8(v59, v54));
  uint32x4_t v62 = (uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v60, vbicq_s8(v52, v56)), vaddq_s32(v61, v61)), vdupq_n_s32(0xE40AF783));
  v60.i32[0] = *((_DWORD *)&STACK[0x2118] + (DWORD1(xmmword_268B98018) & ((v50 + 1771231038) ^ 0x488)));
  v60.i32[1] = *((_DWORD *)&STACK[0x2118] + (BYTE8(xmmword_268B98018) & 1));
  v60.i32[2] = *((_DWORD *)&STACK[0x2118] + (BYTE12(xmmword_268B98018) & 1));
  v60.i32[3] = *((_DWORD *)&STACK[0x2118] + (dword_268B98028[0] & 1));
  xmmword_268B98018 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B9864C, v60), (int8x16_t)vdupq_n_s32(0x410CD1ABu)), (int8x16_t)vshrq_n_u32(v62, 1uLL));
  return (*(&off_26EFDBE20 + v50 + 1771230995))();
}

uint64_t sub_23C1B7E34()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((16 * (*(void *)STACK[0x1238] != 0)) | (32 * (*(void *)STACK[0x1238] != 0))) ^ v0)))();
}

uint64_t sub_23C1B7E80()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((LODWORD(STACK[0xE3C]) - 1657484702) & 0xCC5E0BD7) - 891)
                                     * (**(void **)(v0 + 89) == 0)) ^ (LODWORD(STACK[0xE3C]) + 1771231047))))();
}

uint64_t sub_23C1B7E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  if (v46 >= v47) {
    int v50 = *(_DWORD *)(v49 + 2544) + 1;
  }
  else {
    int v50 = 1516397565;
  }
  *(_DWORD *)(v49 + 2544) = v50;
  int v51 = v45 ^ (v45 >> 11);
  unsigned int v52 = ((v51 << 7) ^ 0xCFA90C00) - ((2 * ((v51 << 7) ^ 0xCFA90C00)) & 0x9B0D6100) - 846810910;
  unsigned int v53 = ((v52 & 0x9D2C5680 ^ 0x19204280)
       + (v52 & 0x880C5400 ^ 0xC2DC3D7E)
       - ((v52 & 0x9D2C5680 ^ 0x19204280) & 0x880C5400)) ^ v51;
  unsigned int v54 = (((v53 << 15) ^ 0xBEB30000) - ((2 * ((v53 << 15) ^ 0xBEB30000)) & 0xD1D00000) + 1760041763) & 0xEFC60000 ^ 0x2E840000;
  unsigned int v55 = (((2 * v54) | 0x84770562) - v54 + 1036287311) ^ 0x82538232;
  unsigned int v56 = (v55 - ((2 * v55) & 0xA58BE94) - 2060689590) ^ v53;
  *(unsigned char *)(v48 + (a45 - 46334738)) = ((v56 ^ (v56 >> 18) ^ 0x36)
                                                    - ((2 * (v56 ^ (v56 >> 18) ^ 0x36)) & 0xCC)
                                                    - 26) ^ 0xB9;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3
                                                     + 8
                                                     * ((51
                                                       * (a45
                                                        - (((v56 ^ (v56 >> 18) ^ 0x36)
                                                                           - ((2 * (v56 ^ (v56 >> 18) ^ 0x36)) & 0xCC)
                                                                           - 26) != 0xB9) == 46334737)) ^ 0x29B)))(2005452103, 1771231427);
}

void sub_23C1B7FF8()
{
  uint64_t v3 = v1[40];
  uint64_t v2 = v1[41];
  uint64_t v4 = v1[39];
  v1[42] = v2;
  v1[43] = v3;
  v1[44] = v4;
  LODWORD(v4) = STACK[0x52C];
  LODWORD(STACK[0x564]) = STACK[0x52C];
  int v5 = 4 * (v4 ^ 0x3E3);
  LOBYTE(v2) = *(unsigned char *)(v2 + *(void *)(v0 + 128) - 0x43BBB1BAC6D99BE2);
  unsigned int v6 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ (v3 + *(_DWORD *)(v0 + 48) - 1174282095)) & 0x7FFFFFFF);
  unint64_t v7 = 1394700225 * (v6 ^ HIWORD(v6));
  unint64_t v8 = v7 >> (v5 - 12);
  char v9 = byte_23C20FC90[v8];
  LODWORD(STACK[0x568]) = v5;
  LOBYTE(STACK[0x4AB]) = v9 ^ v2 ^ byte_23C214C70[v8] ^ byte_23C20EB30[v8] ^ v7 ^ (31 * v8);
  JUMPOUT(0x23C1BA4CCLL);
}

uint64_t sub_23C1B80E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  unsigned int v23 = (((LODWORD(STACK[0x134C]) ^ a15 ^ 0xE560B6DA)
        - ((2 * (LODWORD(STACK[0x134C]) ^ a15 ^ 0xE560B6DA) + 1033803992) & 0x28C3C6C4)
        - 214880306) ^ 0x9461E362)
      + LODWORD(STACK[0x133C]);
  LOBYTE(v23) = (v23 ^ 0xBF) + 65 + ((2 * v23) & 0x7E);
  LOBYTE(v23) = ((v23 & 0xFE) - ((2 * v23) & 0xB8) + 93) ^ 0xC4;
  char v24 = -5 * v23 - 117;
  int v25 = ((v24 - ((-10 * v23) & (v21 + 75))) ^ v20);
  unsigned int v26 = (-800054983 - (v25 ^ 5 | 0xD0502139) + (v25 ^ 5 | 0x2FAFDEC6)) ^ 0x2FAFDEF5;
  unsigned int v27 = (((v25 ^ 0xFFFFFFC1) + 1) ^ 0xF9E07B39) + ((2 * ((v25 ^ 0xFFFFFFC1) + 1)) & 0xF3C0F672) + v26 + 102728903;
  *(_DWORD *)(STACK[0x1480] + 4 * ((v24 - ((-10 * v23) & (v21 + 75))) ^ 0x8Bu)) = a20 ^ a12 ^ a14 ^ 0x8BCAF24 ^ dword_23C217A40[((v27 - ((2 * v27) & 0xA66D6670) - 751389896) ^ 0x2CC94CC8) + v26];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))(v22 + 8 * v21))(4192238393, 4089509490, 102728903, 2792187504, 3543577400, 751389896, dword_23C217A40);
}

void sub_23C1B82D4()
{
}

uint64_t sub_23C1B82E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v39 + 8 * ((v38 + 979) ^ 0x168)))(1032);
  STACK[0x1310] = v40;
  STACK[0x410] = v40;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)(((v40 == 0) * (((v38 + 979) ^ 0x565) + 1771231427 + ((v38 + 979) ^ 0x966D29D5) - 1998)) ^ (v38 + 979))))(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1B8360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47 = LODWORD(STACK[0x1338]) ^ a13;
  unsigned int v48 = v47 ^ 0xF5F7D6C0;
  unsigned int v49 = ((v47 ^ 0xF5F7D6C0) + 424945564) & 0x3881E063;
  int v50 = v47 & 1;
  int v51 = (((v48 - 2 * (v49 ^ v50) + 299239422) ^ 0x7CDA6FFE)
       - 2 * ((((v48 - 2 * (v49 ^ v50) + 299239422) ^ 0x7CDA6FFE) + 424945564) & 0x3881E063 ^ v50)
       + 299239422) ^ 0x7CDA6FFE;
  int v52 = ((v51 - 2 * ((v51 + 424945564) & 0x3881E063 ^ v50) + 299239422) ^ 0x3881E062) + a46;
  unsigned int v53 = ((v52 - ((2 * v52) & 0x8502B218) - 1031710452) ^ 0xAB88E425) + (v52 & 1);
  unsigned int v54 = (2 * v53) & 0xEFD6B9D2;
  unsigned int v55 = (v53 ^ 0xF7EB5CE9) + v54;
  LODWORD(a46) = 8 * (v55 + 135570199);
  return sub_23C1AB48C(604865004 - (1539804940 * v54 + 1539804940 * (v53 ^ 0xF7EB5CE9)), 121 * v55 - 57, -66 - (14 * v54 + 14 * (v53 ^ 0xE9)), v55 - 80 + 119 * v55, -112 - (16 * v54 + 16 * (v53 ^ 0xE9)), 119 * v55 - 103, 0, (int8x16_t)vdupq_n_s32(a17 ^ HIDWORD(a17) ^ a12), (int8x16_t)vdupq_n_s32(0x3B051CEDu), (int8x16_t)vdupq_n_s32(0x2050C6Cu), (int8x16_t)vdupq_n_s32(0x340A08D0u), vdupq_n_s32(0x65C8BA97u), (int8x16_t)vdupq_n_s32(0x66C832B3u), (int8x16_t)vdupq_n_s32(0x965685CE), vdupq_n_s32(0xB4D4BD19), a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_23C1B8650()
{
  LODWORD(STACK[0x304]) = 172727081;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 710)))(8, 3533575369);
  *(void *)(v2 + 3376) = v3;
  return (*(&off_26EFDBE20 + (((v3 != 0) * ((((v1 - 848) | 0x220) + 427) ^ 0x3D5)) ^ v1)))();
}

uint64_t sub_23C1B86C0()
{
  uint64_t v2 = (unsigned char *)STACK[0x1128];
  *uint64_t v2 = ((STACK[0x348] >> (v1 + 8)) - ((2 * (STACK[0x348] >> (v1 + 8))) & 0x80) - 64) ^ 0xC0;
  v2[1] = (HIWORD(STACK[0x348]) - ((STACK[0x348] >> 47) & 0xD0) - 24) ^ 0xE8;
  v2[2] = (((unsigned __int16)WORD2(STACK[0x348]) >> 8) - ((STACK[0x348] >> 39) & 0xC4) + 98) ^ 0x62;
  v2[3] = (HIDWORD(STACK[0x348]) - ((STACK[0x348] >> 31) & 0x34) + 26) ^ 0x1A;
  v2[4] = (HIBYTE(LODWORD(STACK[0x348])) - ((LODWORD(STACK[0x348]) >> 23) & 0x3C) - 98) ^ 0x9E;
  v2[5] = (HIWORD(LODWORD(STACK[0x348])) - ((LODWORD(STACK[0x348]) >> 15) & 0xBC) - 34) ^ 0xDE;
  v2[6] = (BYTE1(LODWORD(STACK[0x348])) - ((LODWORD(STACK[0x348]) >> 7) & 0x5A) + 45) ^ 0x2D;
  v2[7] = (LOBYTE(STACK[0x348]) + (~(2 * LOBYTE(STACK[0x348])) | 0x17) - 11) ^ 0xF4;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8 * (v1 + 1013)))(8, 50, 3451258292);
  STACK[0x17C0] = v3;
  uint64_t v4 = *(&off_26EFDBE20 + ((v3 != 0) ^ v1));
  LODWORD(STACK[0xC3C]) = v1;
  STACK[0xC40] = 0x2A6C3B5F992DECD6;
  STACK[0xC48] = 0x6D69C3D614711B37;
  STACK[0xC50] = 0x1B6C50E2E0779EDDLL;
  return v4();
}

uint64_t sub_23C1B888C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(a3
                                                    + 8
                                                    * (((v3 + 257) | 0x80) ^ (2
                                                                            * (((((v3 + 257) | 0x80) - 1761788994) & 0xFF6FEFEF) != -1771229885)))))(*(void *)(v4 + 3376), 1771231427);
}

uint64_t sub_23C1B88D0()
{
  unint64_t v4 = STACK[0x250];
  v2[423] = STACK[0x250];
  v2[424] = (char *)&STACK[0x18A0] + v4;
  STACK[0x250] = v4 + (((v1 ^ 0x64Eu) - 256) ^ 0x3F7);
  v2[425] = (((32 * (((unint64_t)&STACK[0x18A0] + v4) & 1)) ^ 0x20) & 0xFFFFFFFFFFFFFFEFLL | (16 * (((unint64_t)&STACK[0x18A0] + v4) & 1)))
          + 0x4C4C246FD3AC3FEFLL;
  uint64_t v5 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x721)))(*(void *)(v3 + 169));
  uint64_t v6 = v5 ^ 0x7E77BFFF91DCCBB7;
  unint64_t v7 = (2 * v5) & 0xFCEF7FFF23B9976ELL;
  uint64_t v8 = (*(&off_26EFDBE20 + (v1 ^ 0x4EA)))();
  return (*(&off_26EFDBE20
          + ((495 * (v6 + (v8 ^ 0x1002320820032000) + v7 - ((2 * v8) & 0xDFFB9BEFBFF9BFFELL) == 0x8E79F207B1DFEBB7)) ^ v1)))();
}

uint64_t sub_23C1B89F8()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x280)))(*(void *)(v2 + 169));
  unint64_t v5 = ((2 * v4) & 0xFC8C7DFBBCF47B3CLL) + (v4 ^ 0x7E463EFDDE7A3D9ELL);
  STACK[0x16C0] = v5;
  uint64_t v6 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20 + (v1 ^ 0x291)))(v5 + ((v1 - 982) ^ 0x81B9C1022185C282), 2663297126);
  STACK[0x16C8] = v6;
  *(void *)(v3 + 96) = v6;
  return (*(&off_26EFDBE20 + ((100 * (v6 == 0)) ^ v1)))();
}

uint64_t sub_23C1B8AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v37 = (*(uint64_t (**)(void))(v33 + 8 * (v34 ^ 0x7EC)))();
  uint64_t v38 = ((uint64_t (*)(void, unint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (v34 ^ 0x788)))(*(void *)(v36 + 169), STACK[0x16C8], v35, v37);
  BOOL v39 = (((v38 << (((v34 + 55) ^ 0x1F) & 0xE5)) & 0x96) + (v38 ^ 0xCB)) == 203;
  return ((uint64_t (*)(uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (((8 * (((v34 + 18) ^ v39) & 1)) & 0xEF | (16 * (((v34 + 18) ^ v39) & 1))) ^ v34)))(v38, &off_26EFDBE20, v40, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_23C1B8BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v47 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 8 * ((v45 | 0x1A) + 519)))(((v45 | 0x1A)- 715+ LODWORD(STACK[0x16C0])- (((((v45 | 0x1A) - 1036) | 9) + 2 * LODWORD(STACK[0x16C0]) + 51086507) & 0x14973642)+ 735140913) ^ 0xA4B9B21u, 50, 4225407030);
  *(void *)(v46 + 4008) = v47;
  return ((uint64_t (*)(uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + ((49 * (v47 == 0)) ^ (v45 | 0x1A))))(v47, &off_26EFDBE20, v48, v49, v50, v51, v52, v53, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           0,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_23C1B8CA4()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x66F)))(*(void *)(v2 + 169));
  unint64_t v4 = v3 ^ 0xFF76F7AFB0DDAF27;
  unint64_t v5 = (2 * v3) & 0xFEEDEF5F61BB5E4ELL;
  uint64_t v6 = (*(&off_26EFDBE20 + v1 + 615))();
  return (*(&off_26EFDBE20
          + ((111
            * (v4 + (v6 ^ (((v1 - 724) | 0x18u) + 0x402200902C143A5)) + v5 - ((2 * v6) & 0xF7FBBFEDFA7D76BELL) + 1 == (v1 - 700) + 0x37917B8B39EF2CDLL)) ^ v1)))();
}

uint64_t sub_23C1B8D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v48 = (*(uint64_t (**)(void))(v45 + 8 * (v46 ^ 0x52F)))(*(void *)(v47 + 169));
  int v49 = v48 - ((2 * v48) & 0x6C5C0C68) - 1238497740;
  LODWORD(STACK[0x1764]) = v49 ^ 0xBC659D15;
  uint64_t v50 = ((uint64_t (*)(void, uint64_t))*(&off_26EFDBE20 + (v46 ^ 0x6DD)))(v49 ^ 0xB62E0634, 2381541563);
  STACK[0x1768] = v50;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (((v50 != 0) * ((v46 ^ 0x198) + 152)) ^ v46)))(v50, v51, v52, v53, v54, v55, v56, v57, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_23C1B8E44()
{
  unint64_t v4 = (void *)(STACK[0x1138] + STACK[0x1140] + (((v1 - 203) | 0x44u) ^ 0xB3B3DB902C53C0DDLL));
  *unint64_t v4 = 0;
  v4[1] = (v2 ^ 0x6AFDA45DFBADDFDELL) + ((2 * v2) & 0x1F75BBFBCLL) - 0x6AFDA45DFBADDFDELL;
  (*(void (**)(void, void))(v0 + 8 * (v1 + 1213)))(*(void *)(v3 + 169), 0);
  uint64_t v5 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (v1 ^ 0x746)))(v2, 50, 4136151726);
  STACK[0x1218] = v5;
  return (*(&off_26EFDBE20 + (((v5 == 0) * (v1 ^ 0x17A)) ^ v1)))();
}

uint64_t sub_23C1B8F58(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (v6 ^ 0xFD72BEF5F757F7EDLL) + (((v3 - 187) ^ 0x1EEAFEFFBLL) & v4) + 0x28D410AC6D9D1C6;
  *(void *)(v2 + 328) = v7;
  *(unsigned char *)(v2 + 343) = v7 < 0xBE31C9B3;
  uint64_t v8 = *(uint64_t (**)(void))(a2 + 8 * ((52 * (v7 == 3190933939)) ^ v3));
  LODWORD(STACK[0x804]) = (v3 - 187) ^ 0x15B;
  v5[130] = 0x28E97EC1B1777F71;
  v5[131] = 0x58C7D3FF90841FBDLL;
  v5[132] = 0x21FF6279FB7682DCLL;
  return v8();
}

void sub_23C1B901C(int a1@<W8>)
{
  LODWORD(STACK[0x344]) = a1;
  JUMPOUT(0x23C1B9058);
}

uint64_t sub_23C1B911C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * (int)((v42 + ((v40 - 1091720072) & 0xD77F7F4F) - 1270) ^ (v40 - 375390613) & 0x16600155 ^ (v40 - 77))))(531772516, a2, a3, a4, a5, a6, 393814106, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v41,
           a1,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_23C1B9278()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x523)))(*(void *)(v2 + 169));
  uint64_t v4 = v3 ^ 0x7FF7FFFFB1DE6F6ELL;
  unint64_t v5 = (2 * v3) & 0xFFEFFFFF63BCDEDCLL;
  uint64_t v6 = (*(&off_26EFDBE20 + v1 + 1302))();
  return (*(&off_26EFDBE20
          + ((698
            * ((((v1 ^ 0x1Au) + 264) ^ 0x1E8)
             + v4
             + v5
             + (v6 ^ 0xA6120B0602D26244)
             - ((2 * v6) & 0xB3DBE9F3FA5B3B76) == 0x260A0B05B4B0D1B3)) ^ v1)))();
}

uint64_t sub_23C1B9360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  int v60 = (*(uint64_t (**)(void, uint64_t, char *))(v57 + 8 * (v58 + 1103)))(*(void *)(v59 + 169), 4, &a57);
  BOOL v61 = (((v60 << ((25 * (v58 ^ 0xE0)) ^ 0xE0)) & 0xF6) + (v60 ^ 0xFB)) != (((v58 + 25) | 0x40) - 71);
  return (*(&off_26EFDBE20 + ((v61 | (4 * v61)) ^ v58)))();
}

uint64_t sub_23C1B93D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8 * (v46 + 1252)))(8, 3533575369);
  *(void *)(v47 + 128) = v48;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (((v48 != 0) * ((v46 ^ 0x2A8) - 992)) ^ v46)))(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_23C1B9440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57)
{
  int v60 = *(unsigned char **)(v59 + 128);
  *int v60 = (HIBYTE(a57) - ((HIBYTE(a57) << ((9 * (v58 ^ 0xEE)) ^ 0x25)) & 0x64) + 50) ^ 0x32;
  v60[1] = (BYTE6(a57) - ((a57 >> 47) & 0x44) + 34) ^ 0x22;
  v60[2] = (BYTE5(a57) - ((a57 >> 39) & 0xB8) + 92) ^ 0x5C;
  v60[3] = (BYTE4(a57) - ((a57 >> 31) & 0x40) - 96) ^ 0xA0;
  v60[4] = (BYTE3(a57) - ((a57 >> 23) & 0x42) - 95) ^ 0xA1;
  v60[5] = (BYTE2(a57) - ((a57 >> 15) & 0xEC) - 10) ^ 0xF6;
  v60[6] = (BYTE1(a57) - ((a57 >> 7) & 0x94) + 74) ^ 0x4A;
  v60[7] = (a57 - ((2 * a57) & 0x6C) - 74) ^ 0xB6;
  uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 8 * (v58 ^ 0x5CF)))(8, 50, 1835533518);
  *(void *)(v59 + 48) = v61;
  uint32x4_t v62 = *(&off_26EFDBE20 + ((26 * (v61 == 0)) ^ v58));
  LODWORD(STACK[0x52C]) = v58;
  STACK[0x530] = 0x40612DAD342E2A09;
  STACK[0x538] = 0x44DA309F45FE1F6FLL;
  STACK[0x540] = 0x43BBB1BAC6D99BE2;
  return v62();
}

uint64_t sub_23C1B9624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (v2 + 66) | 0x22u;
  unint64_t v5 = STACK[0x16C0] - 0x7E463EFCFC1D1328;
  *(void *)(v3 + 3440) = v5;
  *(unsigned char *)(v3 + 3455) = v5 < v4 + 3797756095;
  uint64_t v6 = *(uint64_t (**)(void))(a2 + 8 * ((216 * (v5 == 3797756534)) ^ v2));
  LODWORD(STACK[0xC7C]) = v2;
  *(void *)(v3 + 2184) = 0x4ED5C557D035605FLL;
  *(void *)(v3 + 2192) = 0x18A16391E3483275;
  *(void *)(v3 + 2200) = 0x47911D80012DFE83;
  LODWORD(STACK[0x10E0]) = v4;
  return v6();
}

void sub_23C1B96D4()
{
  uint64_t v2 = *(void *)(v1 + 2200);
  *(void *)(v1 + 2208) = v2;
  uint64_t v3 = *(void *)(v1 + 2192);
  *(void *)(v1 + 2216) = v3;
  *(void *)(v1 + 2224) = *(void *)(v1 + 2184);
  int v4 = STACK[0xC7C];
  LODWORD(STACK[0xCB4]) = LODWORD(STACK[0xC7C]) ^ 0xE4;
  LOBYTE(v2) = *(unsigned char *)(v2 + *(void *)(v0 + 392) - 0x47911D80012DFE83);
  unsigned int v5 = 1394700225
     * ((v4 ^ 0x7FFFFEAC) & (*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ (v3
                                                                                            + *(_DWORD *)(v1 + 4008)
                                                                                            + 481807755)));
  unint64_t v6 = 1394700225 * (v5 ^ HIWORD(v5));
  char v7 = byte_23C20FC90[v6 >> 24];
  char v8 = byte_23C214C70[v6 >> 24];
  char v9 = byte_23C20EB30[v6 >> 24];
  LODWORD(STACK[0xCB0]) = v4;
  LOBYTE(STACK[0x4AB]) = v7 ^ v2 ^ v8 ^ v9 ^ v6 ^ (31 * BYTE3(v6));
  JUMPOUT(0x23C1BA4CCLL);
}

uint64_t sub_23C1B97D4()
{
  int v4 = 11 * (v1 ^ 0x86);
  unsigned int v5 = *(void (**)(unint64_t))(v0 + 8 * (v1 + 1365));
  v5(*(void *)(v2 + 169));
  v5(STACK[0x12C8]);
  return (*(&off_26EFDBE20
          + (int)(((*(void *)(v3 + 208) == 0)
                 * (((v4 - 1636865154) & 0xF7FDBD5F) + 1771231427 + ((v4 + 75427614) & 0xFB810EF6) - 1982)) ^ v4)))();
}

uint64_t sub_23C1B9814(uint64_t a1, uint64_t a2)
{
  STACK[0x1880] = 0xB49559282D9DE9F7;
  LODWORD(STACK[0x3C4]) = *(_DWORD *)(v4 + 2520) - 452853308;
  uint64_t v9 = *(unsigned int *)(v6 + 2544);
  v5[12] = *(void *)(a2 + 8 * (v2 + 1771230073));
  v5[14] = v9;
  LODWORD(STACK[0x460]) = v2 + 501087335;
  LODWORD(STACK[0x470]) = v2 + 501087169;
  v5[17] = 1516397565;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = v2 + 501087398;
  *(void *)(v7 + 448) = &STACK[0x458];
  *(_DWORD *)(v8 - 192) = 1431737413 * ((v8 - 200) ^ 0xBE5E9F12) + 40706419 + v2;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v2 + v3)))(v8 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v8 - 188)))(v10);
}

uint64_t sub_23C1B9904(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  unsigned int v42 = (a4 - 2034698092) & 0xE2D9DEBD;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8 * (a4 ^ (a4 - 478))))(a41, 3312658705);
  int v43 = unk_26EFDEF90();
  unsigned int v44 = v43 - 2087771140 - ((v43 << (v42 + 100)) & 0x71E47F8);
  LODWORD(xmmword_268B98018) = v44;
  unsigned int v45 = v44 ^ 0x838F23FE ^ (v44 >> 30);
  uint64_t v46 = (v45 * (v42 ^ 0x6C078DF8)) ^ 0x7DFFD4FE;
  uint64_t v47 = (-670100790 * v45) & 0xFBFFA9FC;
  uint64_t v48 = (2 * (v46 + v47) + 738219526) & 0x71E47F8;
  *(_DWORD *)(v41 + 4) = v46 + v47 + 93277951 - v48;
  uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)(v42 ^ 0x5D));
  return v49(v46, v47, v48, v49, v41, &off_26EFDBE20, 3624866506, 1812433253, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

void sub_23C1B9A70()
{
}

uint64_t sub_23C1B9C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v11 = (unsigned int *)(v10 + 4 * (v8 + v9));
  int v12 = (((v6 ^ 0x71C ^ (a5 + 2279) | v7) - 1912272941) ^ 0x71EA986D) + 1260668125;
  uint64_t v13 = v8 + 1;
  int v14 = *(_DWORD *)(v10 + 4 * (v13 + v9));
  int v15 = ((2 * (v14 & 0x7FFFFFFE ^ 0x5B0E6E90)) & 0x1AE70D4) - (v14 & 0x7FFFFFFE ^ 0x5B0E6E90) - 14104684;
  *uint64_t v11 = v11[397] ^ *((_DWORD *)&STACK[0x1880] + (v14 & 1)) ^ (((v15 ^ 0xA7A98AF8 | v12 & 0x80000000)
                                                              - 2 * ((v15 ^ 0xA7A98AF8) & 0x1B052596 ^ v15 & 6)
                                                              - 1694161520) >> 1) ^ 0x601F7B3F;
  return (*(uint64_t (**)(void))(a3 + 8 * ((370 * (v13 == a6 + 3)) ^ v6)))();
}

uint64_t sub_23C1B9D58@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unsigned int v5 = (const float *)&dword_268B983A4;
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v5);
  uint64_t v7 = (7 * (a2 ^ 0x303u)) ^ 0x289;
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v4.i64[0] = *(void *)&dword_268B983A8;
  v4.i32[2] = *(_DWORD *)(v3 + 4 * v7);
  int8x16_t v9 = vextq_s8(v6, v4, 0xCuLL);
  int8x16_t v10 = v4;
  v10.i32[3] = dword_268B983B4;
  int8x16_t v11 = vandq_s8((int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v9, v8), vdupq_n_s32(0xBF533C79)), v8);
  int32x4_t v12 = (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xE2403ADD));
  int8x16_t v13 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x1D91D304u)), v12), vdupq_n_s32(0xF137167E)), (int8x16_t)vdupq_n_s32(0xAC860E5u));
  int32x4_t v14 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vsubq_s32((int32x4_t)vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x5C0A1418u)), (int32x4_t)vorrq_s8(v13, (int8x16_t)vdupq_n_s32(0x5C0A1419u))), v11), (int8x16_t)vdupq_n_s32(0x463A7BA1u));
  v15.i32[0] = *(_DWORD *)(v2 + 4 * (dword_268B983A8 & 1));
  v15.i32[1] = *(_DWORD *)(v2 + 4 * (unk_268B983AC & 1));
  v15.i32[2] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v3 + 4 * v7) & 1));
  v15.i32[3] = *(_DWORD *)(v2 + 4 * (dword_268B983B4 & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v15), (int8x16_t)vdupq_n_s32(0x79AE1721u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v14, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x50CFFB58u))), vdupq_n_s32(0xA867FDAC)), 1uLL));
  return (*(uint64_t (**)(void))(a1 + 8 * a2))();
}

void sub_23C1B9EE8()
{
}

uint64_t sub_23C1B9EF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v6 = ((v4 ^ (a4 + 473) ^ 0x22D6356)
      - (*v5 & 0x7FFFFFFE ^ 0x42753BAE)
      + ((2 * (*v5 & 0x7FFFFFFE ^ 0x42753BAE)) & 0xD77F63C4)) ^ 0x94385E4D;
  unsigned int v7 = (v6 - ((2 * v6) & 0x5899869C) - 1404255409) ^ 0xEDCECB4D;
  v5[623] = v5[396] ^ *((_DWORD *)&STACK[0x1880] + (*v5 & 1)) ^ (((v7 | ((v5[623] & 0x80000000) - 1936715865) & 0x80000000)
                                                                  - ((2 * v7) & 0xFA184A4E)
                                                                  + 2097947943) >> 1) ^ 0x131BFB64;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (int)((1199
                                     * (((((~v4 + LODWORD(STACK[0x3C4])) ^ (~v4
                                                                                        + LODWORD(STACK[0x3C4])))
                                        - 1) & ~(~v4 + (unint64_t)LODWORD(STACK[0x3C4]))) >> 63)) ^ (v4 - 141))))();
}

uint64_t sub_23C1BA008@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W8>)
{
  LODWORD(STACK[0x3C4]) = 0;
  int v8 = LODWORD(STACK[0x3C4])++;
  *(_DWORD *)(v3 + 2520) = v8 + 452853309;
  uint64_t v9 = (*(_DWORD *)(v5 + 2544) - 266496586);
  v4[12] = *(void *)(a1 + 8 * ((a3 + 764006297) ^ 0x1FFFFFFFC3F6FC4CLL));
  v4[14] = v9;
  v4[17] = 1249900979;
  LODWORD(STACK[0x460]) = a3 + 764006297;
  LODWORD(STACK[0x470]) = a3 + 764006303;
  STACK[0x474] = (a3 + 764006187);
  *(_DWORD *)(v7 - 192) = 1431737413 * ((v7 - 502115798 - 2 * ((v7 - 200) & 0xE21252F2)) ^ 0x5C4CCDE0) + 40706419 + a3;
  *(void *)(v6 + 448) = &STACK[0x458];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a3 ^ (a2 - 518))))(v7 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v7 - 188)))(v10);
}

uint64_t sub_23C1BA25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  if (v47 >= v48) {
    int v50 = *(_DWORD *)(v49 + 2544) + 1;
  }
  else {
    int v50 = 1516397565;
  }
  *(_DWORD *)(v49 + 2544) = v50;
  int v51 = v46 ^ (v46 >> 11);
  unsigned int v52 = (((v51 << 7) ^ 0xCFA90C00) - ((2 * ((v51 << 7) ^ 0xCFA90C00)) & 0x5D11B100) - 1366763315) & 0x9D2C5680 ^ 0x180C1680;
  unsigned int v53 = (((2 * v52) & 0x3A588000) - v52 + 38977234) ^ 0xD654F991;
  unsigned int v54 = (-192809885 - (v53 | 0xF481F463) + (v53 | 0xB7E0B9C)) ^ v51;
  unsigned int v55 = (((v54 << 15) ^ 0xAC638000) - ((2 * ((v54 << 15) ^ 0xAC638000)) & 0x79F60000) - 1124381501) & 0xEFC60000 ^ 0x9800000;
  unsigned int v56 = (316010405 - (v55 | 0x12D5EFA5) + (v55 | 0xED2A105A)) ^ v54;
  *(unsigned char *)(v45 + (a45 - 823705849)) = ((v56 ^ (v56 >> 18) ^ 0xBF)
                                                     - ((2 * (v56 ^ (v56 >> 18) ^ 0xBF)) & 0x80)
                                                     + 64) ^ 0x6A;
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * ((1352
                                              * (a45
                                               - (((v56 ^ (v56 >> 18) ^ 0xBF)
                                                                  - ((2 * (v56 ^ (v56 >> 18) ^ 0xBF)) & 0x80)
                                                                  + 64) != 0x6A) == 823705848)) ^ 0x187)))(1893602465);
}

void sub_23C1BA3E4()
{
  uint64_t v3 = v1[56];
  uint64_t v2 = v1[57];
  uint64_t v4 = v1[55];
  v1[58] = v2;
  v1[59] = v3;
  v1[60] = v4;
  LODWORD(v4) = STACK[0x5AC];
  LODWORD(STACK[0x5E0]) = STACK[0x5AC];
  LODWORD(STACK[0x5E4]) = v4 + 22;
  unsigned int v5 = 1394700225
     * (((*(_DWORD *)(v0 + 160) + v3 + ((v4 + 22) ^ 0xA2C8F6BB)) ^ *(_DWORD *)(qword_268B99310
                                                                             + (dword_268B99318 & 0x7D714E28))) & 0x7FFFFFFF);
  unint64_t v6 = 1394700225 * (v5 ^ HIWORD(v5));
  LOBYTE(STACK[0x4AB]) = byte_23C20FC90[v6 >> 24] ^ *(unsigned char *)(v2 + v1[440] - 0xEE9B58BCBDEEC15) ^ byte_23C214C70[v6 >> 24] ^ byte_23C20EB30[v6 >> 24] ^ v6 ^ (31 * BYTE3(v6));
  JUMPOUT(0x23C1BA4C8);
}

uint64_t sub_23C1BA4D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  *(_DWORD *)(v54 + 2520) = a53 + 452853309;
  uint64_t v59 = (*(_DWORD *)(v56 + 2544) + 1657317905);
  v55[12] = *(void *)(a3 + 8 * (v53 + 1771230078));
  v55[14] = 3173715470;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = v53 - 1262391881;
  LODWORD(STACK[0x474]) = v53 - 1262391814;
  LODWORD(STACK[0x478]) = v53 - 1262391828;
  v55[17] = v59;
  *(void *)(v57 + 448) = &STACK[0x458];
  *(_DWORD *)(v58 - 192) = 1431737413 * (((~(v58 - 200) & 0x74A1918) - (~(v58 - 200) | 0x74A1919)) ^ 0xB914860B)
                         + 40706419
                         + v53;
  uint64_t v60 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v53 ^ (a4 - 518))))(v58 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v58 - 188)))(v60);
}

uint64_t sub_23C1BA5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  if (v46 >= v47) {
    int v50 = *(_DWORD *)(v49 + 2544) + 1;
  }
  else {
    int v50 = 1516397565;
  }
  *(_DWORD *)(v49 + 2544) = v50;
  int v51 = v45 ^ (v45 >> 11);
  unsigned int v52 = (((v51 << 7) ^ 0xCFA90C00) - ((2 * ((v51 << 7) ^ 0xCFA90C00)) & 0x308DFA00) + 407305539) & 0x9D2C5680 ^ 0x8D7F9E41;
  unsigned int v53 = (((2 * v52) | 0xBAD8DFFC) - v52 + 580096002) ^ 0x4827F79F;
  unsigned int v54 = (((2 * v53) & 0xE6250D44) - v53 - 1930596260) ^ v51;
  unsigned int v55 = (((v54 << 15) ^ 0x38320000) - ((2 * ((v54 << 15) ^ 0x38320000)) & 0x74520000) - 1171716152) & 0xEFC60000 ^ 0x6B060000;
  unsigned int v56 = (((((2 * v55) & 0x8A080000) - v55 - 1427936349) ^ 0x89DB8868) - 1) ^ v54;
  *(unsigned char *)(v48 + (a45 - 2075953619)) = ((v56 ^ (v56 >> 18) ^ 0xF1)
                                                      - 2 * ((v56 ^ (v56 >> 18) ^ 0xF1) & 1)
                                                      - 127) ^ 0xB5;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3
                                                     + 8
                                                     * ((849
                                                       * (a45
                                                        - (((v56 ^ (v56 >> 18) ^ 0xF1)
                                                                           - 2 * ((v56 ^ (v56 >> 18) ^ 0xF1) & 1)
                                                                           - 127) != 0xB5) == 2075953618)) ^ 0x113u)))(3832772565, 1771231427);
}

void sub_23C1BA748()
{
  uint64_t v4 = v2[66];
  v2[67] = v4;
  int v5 = STACK[0x604];
  LODWORD(STACK[0x61C]) = LODWORD(STACK[0x604]) ^ 0x602;
  LODWORD(STACK[0x620]) = v0 + v5 - 1072;
  v4 -= 406823345;
  char v6 = *(unsigned char *)(v2[448] + v4);
  LODWORD(STACK[0x618]) = v5;
  LOBYTE(STACK[0x627]) = v6;
  uint64_t v7 = **(void **)(v1 + 312) + v4;
  v2[70] = v7;
  v2[64] = v7;
  v2[62] = *(void *)(v3 + 8 * (v5 ^ 0x14E));
  JUMPOUT(0x23C1D8748);
}

uint64_t sub_23C1BA7A4()
{
  unsigned int v0 = ((LODWORD(STACK[0x620]) ^ 0xE992D2B4) & (*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFFDC88A904)) ^ LODWORD(STACK[0x628])))
     * (LODWORD(STACK[0x61C]) ^ 0x53216DF3);
  unint64_t v1 = 1394700225 * (v0 ^ HIWORD(v0));
  return (*(&off_26EFDBE20
          + ((101
            * ((LOBYTE(STACK[0x627]) - 73) == (byte_23C216EB0[v1 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C216680[v1 >> 24] ^ byte_23C2173F0[v1 >> 24] ^ v1 ^ (-61 * BYTE3(v1))))) ^ LODWORD(STACK[0x618]))))();
}

uint64_t sub_23C1BA888()
{
  uint64_t v3 = (v0 + 462) | 0x30u;
  uint64_t v4 = (v3 ^ 0x431) + *(void *)(v1 + 536);
  int v5 = *(uint64_t (**)(void))(v2 + 8 * ((1576 * (v4 == ((v0 - 1082164275) & 0xD6EDAF4B) - 2116914061)) ^ v0));
  LODWORD(STACK[0x604]) = v3;
  *(void *)(v1 + 528) = v4;
  return v5();
}

uint64_t sub_23C1BA8FC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v0 - v1 + 767) ^ 0xEA ^ ((v0 - v1 + 517) | 0xFA)) * (**(void **)(v2 + 312) != 0)) ^ (v0 - v1 + 637))))();
}

uint64_t sub_23C1BA974@<X0>(int a1@<W8>)
{
  STACK[0x250] = STACK[0x11F0];
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 ^ 0x78) - 1771230524) ^ (v2 - 148)) * (v1 & 1)) ^ a1)))();
}

uint64_t sub_23C1BA9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v34 = (*(uint64_t (**)(void))(v31 + 8 * (v32 + 623)))();
  char v35 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v32 + 659))(a31, STACK[0x1300], v33, v34);
  return (*(&off_26EFDBE20
          + ((1923 * ((((2 * v35) & 0xB4) + ((v32 + 120) ^ v35 ^ 0x70)) == (v32 - 88))) ^ v32)))();
}

uint64_t sub_23C1BAA54(uint64_t a1, uint64_t a2)
{
  int v4 = LODWORD(STACK[0x12F8])
     - ((((v2 - 1034) | 0x280) + 2 * LODWORD(STACK[0x12F8]) + 36195692) & 0x14973642)
     + 727696167;
  LODWORD(STACK[0x3CC]) = v4;
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 8 * (v2 ^ 0x20F)))(v4 ^ (v2 + 172726007), 50, 3686047027);
  *(void *)(v3 + 3784) = v5;
  return (*(&off_26EFDBE20 + ((27 * (v5 == 0)) ^ v2)))();
}

uint64_t sub_23C1BAB5C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = v3[480] - 0x4FF1BD7D57F84F2CLL;
  STACK[0x16E8] = v4;
  LOBYTE(STACK[0x16F7]) = v4 < 0x86F388CF;
  uint64_t v5 = *(uint64_t (**)(void))(a2 + 8 * ((69 * (v4 != 2264107215)) | v2));
  LODWORD(STACK[0x734]) = (v2 + 333766975) & 0xEC1B1CF6;
  LODWORD(STACK[0x844]) = v2;
  v3[138] = 0x1A1CEF02E73953C0;
  v3[139] = 0x5F3BBEDDF3D9E7ALL;
  v3[140] = 0x452C4CBC4F9C6B64;
  return v5();
}

void sub_23C1BAC18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[140];
  v2[141] = v3;
  uint64_t v4 = v2[139];
  v2[142] = v4;
  v2[143] = v2[138];
  int v5 = STACK[0x844];
  LODWORD(STACK[0x878]) = STACK[0x844];
  LODWORD(STACK[0x87C]) = v5 - 458;
  uint64_t v6 = v4 + v2[473] - 0x5F3BBEDDF3D9E7ALL;
  unsigned int v7 = 1394700225 * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ v6) & 0x7FFFFFFF);
  unint64_t v8 = 1394700225 * ((v7 >> (v5 + 112)) ^ v7);
  LOBYTE(STACK[0x4AB]) = byte_23C20F760[v8 >> 24] ^ *(unsigned char *)(v3 + v2[481] - 0x452C4CBC4F9C6B64) ^ byte_23C20EC30[(v8 >> 24) + 2] ^ byte_23C20FD90[v8 >> 24] ^ v8 ^ (23 * BYTE3(v8));
  v2[20] = *(void *)(a2 + 8 * (v5 ^ 0x709));
  v2[21] = v6;
  JUMPOUT(0x23C1AC3F0);
}

uint64_t sub_23C1BAD10()
{
  (*(void (**)(void))(v0 + 8 * (int)(v1 ^ 0x966D2B7D)))(v2[474]);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * (int)(v1 ^ 0x966D2B6E)))(9, 50, 1083624239);
  v2[461] = v4;
  int v5 = *(uint64_t (**)(void))(v3 + 8 * (int)(((v4 != 0) * (v1 ^ 0x966D2CA4)) ^ (v1 + 1771230102)));
  LODWORD(STACK[0xBB4]) = (v1 + 299303540) & 0x57BBD14E;
  v2[248] = 1224203596;
  return v5();
}

uint64_t sub_23C1BAD34()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((LODWORD(STACK[0x15CC]) == v0 - 581) * ((5 * (v0 ^ 0x2AC)) ^ 0x55A)) ^ v0)))();
}

uint64_t sub_23C1BAD80()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(void *)(v3 + 88) == 0) ^ (v0 + 126)) & 1)
                                * (((v0 - 1811153995) | 0x2612D09) ^ (v1 + 7))) ^ v0)))();
}

void sub_23C1BADD4(int a1@<W8>)
{
  (*(void (**)(void))(v3 + 8 * ((a1 | 0x4052040) ^ (v1 - 496))))();
  *(void *)(v4 + 88) = *(void *)(v2 + 4136);
  JUMPOUT(0x23C1BAE20);
}

uint64_t sub_23C1BAFE8()
{
  uint64_t v3 = (*(uint64_t (**)(void, void))(v2 + 8 * (v0 + 267)))(*(void *)(v1 + 4096), 0);
  *(void *)(v1 + 3872) = v3;
  return (*(&off_26EFDBE20 + (int)(((v3 == 0) * (((v0 - 159418290) & 0x9FEDAFEB ^ 0x6992D33D) + 2 * (v0 ^ 0x5CB))) | v0)))();
}

uint64_t sub_23C1BB060()
{
  unint64_t v4 = STACK[0x250];
  *(void *)(v3 + 193) = STACK[0x250];
  int v5 = (char *)&STACK[0x18A0] + v4;
  *(void *)(v3 + 201) = (char *)&STACK[0x18A0] + v4;
  unint64_t v6 = v4 + ((v1 + 213) ^ 0x2C9);
  *(void *)(v3 + 209) = v6;
  STACK[0x250] = v6;
  *(void *)(v3 + 217) = 16 * (void)v5;
  *(void *)(v3 + 225) = ((2 * ((16 - 16 * (void)v5) & ((v1 + 676) - 1096))) | 0x6EEFAEBDDD4EF000)
                        + ((16 - 16 * (void)v5) & ((v1 + 676) - 1096) ^ 0x9FF67757AEFF7775);
  uint64_t v7 = (*(uint64_t (**)(void))(v0 + 8 * (v1 + 1060)))(*(void *)(v2 + 3872));
  uint64_t v8 = v7 ^ 0x761EB7FFDCDDDFAFLL;
  unint64_t v9 = (2 * v7) & 0xEC3D6FFFB9BBBF5ELL;
  uint64_t v10 = (*(&off_26EFDBE20 + v1 + 1119))();
  return (*(&off_26EFDBE20
          + (v1 ^ (8
                 * (v8 + (v10 ^ 0x981232480B812022) + v9 - ((2 * v10) & 0xCFDB9B6FE8FDBFBALL) == 0xE30EA47E85EFFD1)))))();
}

uint64_t sub_23C1BB198()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x26F)))(*(void *)(v2 + 3872));
  unint64_t v5 = ((2 * v4) & 0xBEA3FA3BFFB72B76) + (v4 ^ 0xDF51FD1DFFDB95BBLL);
  STACK[0x1540] = v5;
  uint64_t v6 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20 + (v1 ^ 0x27E)))(3 * (((v1 - 1102) | 0x210) ^ 0x36Bu) + 0x20AE02E2002465F3 + v5, 2663297126);
  STACK[0x1548] = v6;
  *(void *)(v3 + 256) = v6;
  return (*(&off_26EFDBE20 + ((223 * (v6 == 0)) ^ v1)))();
}

uint64_t sub_23C1BB274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v29 = (*(uint64_t (**)(void))(v26 + 8 * (v28 ^ 0x272)))();
  uint64_t v30 = ((uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (v28 ^ 0x216)))(STACK[0x1318], STACK[0x1548], v27, v29);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + ((214 * (((v28 - 46) ^ ((((2 * v30) & 0xEC) + (v30 ^ (((v28 - 104) & 0x5F) - 85))) == 246)) & 1)) ^ v28)))(v30, 1771231427, &off_26EFDBE20, 2523737419, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_23C1BB344(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v28 = (v27 - 1071) | 0x108;
  uint64_t v29 = (uint64_t)(v26 + STACK[0x1540] + 1106) / (((v28 - 236) | 0x128u) - 358);
  int v30 = ((v28 - a2 + 1250) ^ 0xFE4E9E4) + v29 - ((2 * v29) & 0x33138918) - 35;
  LODWORD(STACK[0x29C]) = v30 ^ 0x93C25FAD;
  uint64_t v31 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a3 + 8 * (v28 ^ 0x709)))(v30 ^ 0x9989C48C, 50, 2049918501);
  STACK[0x1468] = v31;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + ((25 * (v31 == 0)) ^ v28)))(v31, 1771231427, &off_26EFDBE20, 2523737419, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_23C1BB430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * (int)(((v27 != (v26 ^ 0x57018197) - 1286989278) * (((v26 - 2147410269) | 0x166C0D40) ^ (a4 + 83))) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_23C1BB498()
{
  unsigned int v4 = v3 ^ (v2 + 640) ^ v1 ^ (v0 + 488);
  if (v4 <= 1) {
    unsigned int v4 = 1;
  }
  LODWORD(STACK[0x1654]) = v4 + 377722376;
  JUMPOUT(0x23C1B33E4);
}

uint64_t sub_23C1BB528()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 + 847)))(*(void *)(v2 + 3872));
  uint64_t v4 = v3 ^ 0x7F7EFFFD96FDFFA7;
  uint64_t v5 = (((v1 - 133) | 0x161u) - 0x1020004D2040417) & (2 * v3);
  uint64_t v6 = (*(&off_26EFDBE20 + v1 + 917))();
  return (*(&off_26EFDBE20
          + ((56
            * (v4
             + ((v1 - 203) ^ 0x1BFLL)
             + v5
             + (v6 ^ 0x9022630000C044A1)
             - ((2 * v6) & 0xDFBB39FFFE7F76BCLL) != 0xFA162FD97BE4449)) ^ v1)))();
}

uint64_t sub_23C1BB608()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x6BD)))(*(void *)(v2 + 3872));
  unint64_t v4 = v3 ^ 0xF6F6FF3F94FC4B27;
  unint64_t v5 = (v3 << (v1 ^ 0x64u)) & 0xEDEDFE7F29F8964ELL;
  uint64_t v6 = (*(&off_26EFDBE20 + (v1 ^ 0x574)))();
  BOOL v7 = v4 + (v6 ^ 0x84000A04007A4042) + v5 - (((v1 - 331) ^ 0xF7FFEBF7FF0B7D60) & (2 * v6)) != 0x7AF7094395768B69;
  return (*(&off_26EFDBE20 + ((v7 | (2 * v7)) ^ v1)))();
}

uint64_t sub_23C1BB6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  int v54 = (*(uint64_t (**)(void, uint64_t, char *))(v51 + 8 * (v52 + 1359)))(*(void *)(v53 + 3872), 4, &a51);
  unsigned int v55 = ((v54 << (((v52 + 5) & 0x73) + ((v52 + 82) & 0xDE) - 123)) & 0xFFFFFFD2) + (v54 ^ 0xFFFFFFE9);
  return (*(&off_26EFDBE20 + (v52 ^ 0x3F5 ^ (54 * ((((v55 - v52) | (v52 - v55)) & 0x80) == 0)))))();
}

uint64_t sub_23C1BB798()
{
  LODWORD(STACK[0x29C]) = 172727081;
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 708)))(8, 3533575369);
  STACK[0x16F8] = v2;
  return (*(&off_26EFDBE20 + (((v2 == 0) * ((((v1 - 354) | 0x1A) - 238) ^ ((v1 - 834) | 0x108))) ^ v1)))();
}

uint64_t sub_23C1BB818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,unint64_t a51)
{
  uint64_t v53 = (unsigned char *)STACK[0x16F8];
  *uint64_t v53 = (HIBYTE(a51) - ((a51 >> 55) & 0x12) - 119) ^ 0x89;
  v53[1] = ((a51 >> (((2 * v52) ^ 0x72u) + 14)) - ((2 * (a51 >> (((2 * v52) ^ 0x72u) + 14))) & 0x66) - 77) ^ 0xB3;
  v53[2] = (BYTE5(a51) - ((a51 >> 39) & 0x40) - 96) ^ 0xA0;
  v53[3] = (BYTE4(a51) - ((a51 >> 31) & 0xD8) - 20) ^ 0xEC;
  v53[4] = (BYTE3(a51) - ((a51 >> 23) & 0x56) + 43) ^ 0x2B;
  v53[5] = BYTE2(a51);
  v53[6] = (BYTE1(a51) - ((a51 >> 7) & 0x84) + 66) ^ 0x42;
  v53[7] = (a51 - ((2 * a51) & 0xE8) - 12) ^ 0xF4;
  uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 8 * (v52 + 1277)))(8, 50, 3129288448);
  STACK[0x1320] = v54;
  unsigned int v55 = *(&off_26EFDBE20 + ((127 * (v54 == 0)) ^ v52));
  LODWORD(STACK[0xAB4]) = v52;
  STACK[0xAB8] = 0x67467CBAEDB830E8;
  STACK[0xAC0] = 0x6DB05C5C201FAF4;
  STACK[0xAC8] = 0x74FAAEF9F4362020;
  return v55();
}

void sub_23C1BB9E0()
{
  uint64_t v1 = *(void *)(v0 + 1744);
  *(void *)(v0 + 1752) = v1;
  uint64_t v2 = *(void *)(v0 + 1736);
  *(void *)(v0 + 1760) = v2;
  *(void *)(v0 + 1768) = *(void *)(v0 + 1728);
  int v3 = STACK[0xAB4];
  LODWORD(STACK[0xAEC]) = STACK[0xAB4];
  LOBYTE(v1) = *(unsigned char *)(v1 + STACK[0x16F8] - 0x74FAAEF9F4362020);
  unsigned int v4 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ (v2 + *(_DWORD *)(v0 + 3880) + 1040057612)) & 0x7FFFFFFF);
  unint64_t v5 = (v4 ^ HIWORD(v4)) * ((v3 - 262) ^ 0x53216FE3);
  char v6 = byte_23C20FC90[v5 >> 24];
  LODWORD(STACK[0xAF0]) = v3 - 262;
  LOBYTE(STACK[0x4AB]) = v6 ^ v1 ^ byte_23C214C70[v5 >> 24] ^ byte_23C20EB30[v5 >> 24] ^ v5 ^ (31 * BYTE3(v5));
  JUMPOUT(0x23C1BA4D0);
}

uint64_t sub_23C1BBAE0()
{
  int v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x46A)))(*(void *)(v2 + 3872));
  int v4 = v3 - ((2 * v3) & 0x6C5C0C68) - 1238497740;
  LODWORD(STACK[0x13EC]) = v4 ^ 0xBC659D15;
  LODWORD(STACK[0x29C]) = v4 ^ 0xBC659D15;
  uint64_t v5 = ((uint64_t (*)(void, uint64_t))*(&off_26EFDBE20 + v1 + 1128))(v4 ^ 0xB62E0634, 2381541563);
  STACK[0x13F0] = v5;
  return (*(&off_26EFDBE20 + (((v5 != 0) * ((((v1 - 444) | 0x304) - 236) ^ 0x263)) ^ v1)))();
}

uint64_t sub_23C1BBB98()
{
  int v3 = (void *)(STACK[0x1518] + STACK[0x1500] - 0xEE626158C4E6775);
  *int v3 = 0;
  v3[1] = (v2 ^ 0x7FCF66FF8FDCEBEBLL)
        + ((2 * v2) & 0x11FB9D7D6)
        + (v1 ^ 0x319u)
        + 660
        - 0x7FCF66FF8FDCEE9ELL;
  (*(void (**)(unint64_t, void))(v0 + 8 * (v1 ^ 0x526)))(STACK[0x1318], 0);
  uint64_t v4 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v1 + 799))(v2, 50, 2774763002);
  STACK[0x1220] = v4;
  return (*(&off_26EFDBE20 + ((141 * (v4 == 0)) ^ v1)))();
}

uint64_t sub_23C1BBC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (v6 ^ 0x5FFEE3BAFE7DDFBELL) + (v4 & 0x1FCFBBF7CLL) + (v3 - 660) - 0x5FFEE3BAB1FE1D70;
  *(void *)(v5 + 3456) = v7;
  *(unsigned char *)(v5 + 3467) = v7 < 0x4C7FC26D;
  uint64_t v8 = *(uint64_t (**)(void))(a3
                           + 8
                           * ((13
                             * ((v6 ^ 0x5FFEE3BAFE7DDFBELL) + (v4 & 0x1FCFBBF7CLL) + (v3 - 660) == 0x5FFEE3BAFE7DDFDDLL)) ^ v3));
  LODWORD(STACK[0x1064]) = v3;
  *(void *)(v5 + 3184) = 0x1AFCB62EA9F96835;
  *(void *)(v5 + 3192) = 0x6E5D50810E7D5D71;
  *(void *)(v5 + 3200) = 0x695DF616C66EEB7BLL;
  return v8();
}

void sub_23C1BBD50(int a1@<W8>)
{
  LODWORD(STACK[0x28C]) = a1;
  JUMPOUT(0x23C1BBDA8);
}

uint64_t sub_23C1BBE74(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t))(a3
                                            + 8
                                            * (((((a4 + v4 - 386 - 281) ^ 0xA463EB4B) == 839828992) * (v4 + 720)) ^ (v4 - 386))))(2005452103);
}

uint64_t sub_23C1BC028(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((v4 + 8 == ((a4 + v5 - 281) ^ 0xA463EB4B)) * (v5 + 1106)) ^ v5)))();
}

uint64_t sub_23C1BC064(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *unint64_t v7 = 0xEB58FA2E72504AF1;
  uint64_t v9 = *(unsigned int *)(v6 + 2544);
  v5[12] = *(void *)(a3 + 8 * (v4 + 1771230073));
  v5[14] = 1516397565;
  LODWORD(STACK[0x460]) = (v4 + 335377591) ^ 0x4A;
  LODWORD(STACK[0x470]) = v4 + 335377591;
  v5[17] = v9;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = v4 + 335377688;
  *(_DWORD *)(v8 - 192) = 1431737413
                        * ((1814896354 - ((v8 - 200) | 0x6C2D1EE2) + ((v8 - 200) | 0x93D2E11D)) ^ 0x2D8C7E0F)
                        + 40706419
                        + v4;
  v7[56] = &STACK[0x458];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v4 ^ (a4 - 518))))(v8 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v8 - 188)))(v10);
}

uint64_t sub_23C1BC17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  (*(void (**)(uint64_t, uint64_t))(a5 + 8 * (v43 + v42 + 24)))(a42, 3312658705);
  int v45 = (*(&off_26EFDBE20 + (v42 ^ (v42 - 486))))();
  unsigned int v46 = v45 - 2087771140 - ((2 * v45) & 0x71E47F8);
  LODWORD(xmmword_268B98018) = v46;
  *(_DWORD *)(v44 + 4) = ((1812433253 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) ^ 0xFDF8F2BB)
                       + ((-670100790 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) & 0xFBF1E576)
                       - 2053754558
                       - ((2
                         * (((1812433253 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) ^ 0xFDF8F2BB)
                          + ((-670100790 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) & 0xFBF1E576)
                          + 1178827335)
                         + 126297598) & 0x71E47F8);
  return unk_26EFDCB68(1178827335);
}

void sub_23C1BC2D0()
{
}

uint64_t sub_23C1BC2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  v10.i64[0] = 0x1200000012;
  v10.i64[1] = 0x1200000012;
  v6.i64[0] = *(void *)(v5 + 4);
  v6.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v11 = vextq_s8(v7, v6, 0xCuLL);
  int8x16_t v12 = v6;
  v12.i32[3] = *(_DWORD *)(v5 + 16);
  int8x16_t v13 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v11, v8), vdupq_n_s32(0xE5FC9439));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0xA2CD178u)), (int8x16_t)vdupq_n_s32(0x2004021u)), vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x75D32E86u))), v9), (int8x16_t)vdupq_n_s32(0x81D76C0B));
  int8x16_t v15 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x2B9C94EEu)), v14), vdupq_n_s32(0xEA31B589));
  int8x16_t v16 = veorq_s8(v15, (int8x16_t)vdupq_n_s32(0x959645A0));
  int32x4_t v17 = (int32x4_t)veorq_s8(vandq_s8(v16, (int8x16_t)vdupq_n_s32(0x115DCBBFu)), vandq_s8(v15, v10));
  int8x16_t v18 = (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v16, vandq_s8(v13, v8)), vaddq_s32(v17, v17)), vdupq_n_s32(0x115DCBADu)), 1uLL);
  v16.i32[0] = *((_DWORD *)&STACK[0x2108] + (*(_DWORD *)(v5 + 4) & 1));
  v16.i32[1] = *((_DWORD *)&STACK[0x2108] + (*(_DWORD *)(v5 + 8) & 1));
  v16.i32[2] = *((_DWORD *)&STACK[0x2108] + (*(_DWORD *)(v5 + 12) & 1));
  v16.i32[3] = *((_DWORD *)&STACK[0x2108] + (v12.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v16), (int8x16_t)vdupq_n_s32(0x7AFEAF27u)), v18);
  return (*(uint64_t (**)(void))(a5 + 1952))();
}

uint64_t sub_23C1BCE44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, int a4@<W5>, int a5@<W8>)
{
  int8x16_t v8 = (unsigned int *)(v7 + 4 * (v5 + a1));
  unsigned int v9 = (v6 & 0x80000000) - 436431815;
  unsigned int v10 = v8[1];
  unsigned int v11 = ((v10 & 0xA2CD178 ^ 0x2004021 | v10 & 0x75D32E86) - 1) ^ 0x81D76C0B;
  *int8x16_t v8 = v8[397] ^ *((_DWORD *)&STACK[0x2108] + (v10 & 1)) ^ ((((((2 * v11) | 0x2B9C94EE) - v11 - 365841015) ^ 0x959645A0 | v9 & 0x80000000)
                                                            + a4
                                                            - 2
                                                            * (((((2 * v11) | 0x2B9C94EE) - v11 - 365841015) ^ 0x959645A0) & (a4 + 18) ^ (((2 * v11) | 0x2B9C94EE) - v11 - 365841015) & 0x12)) >> 1) ^ 0x7AFEAF27;
  return (*(uint64_t (**)(void))(a3 + 8 * ((1980 * (((a5 - 898) & 0xFFFFFBE9) + v5 == a2 + 3)) ^ a5)))();
}

uint64_t sub_23C1BCF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v9 = (const float *)&dword_268B983A4;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(v9);
  int v11 = (v6 | 0x416) - 10;
  uint64_t v12 = (v11 - 288) ^ 0x208;
  v13.i64[0] = 0x8000000080000000;
  v13.i64[1] = 0x8000000080000000;
  int32x4_t v14 = vdupq_n_s32(0xBA654299);
  v15.i64[0] = -1;
  v15.i64[1] = -1;
  v8.i32[0] = dword_268B983A8;
  v8.i32[1] = *(_DWORD *)(v7 + 4 * v12);
  v8.i32[2] = dword_268B983B0;
  int8x16_t v16 = vextq_s8(v10, v8, 0xCuLL);
  int8x16_t v17 = v8;
  v17.i32[3] = dword_268B983B4;
  int8x16_t v18 = vbicq_s8(v13, v16);
  int8x16_t v19 = veorq_s8(vandq_s8(v17, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x73E4CCBAu));
  int32x4_t v20 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v19, (int8x16_t)vdupq_n_s32(0x459ABD66u)), (int32x4_t)vorrq_s8(v19, (int8x16_t)v14)), v14), (int8x16_t)vdupq_n_s32(0x89D660DB)), v15), (int8x16_t)vdupq_n_s32(0xBC2732FA));
  v21.i32[0] = *(_DWORD *)(v5 + 4 * (dword_268B983A8 & 1));
  v21.i32[1] = *(_DWORD *)(v5 + 4 * (*(_DWORD *)(v7 + 4 * v12) & 1));
  v21.i32[2] = *(_DWORD *)(v5 + 4 * (dword_268B983B0 & 1));
  v21.i32[3] = *(_DWORD *)(v5 + 4 * (dword_268B983B4 & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v21), (int8x16_t)vdupq_n_s32(0x77E03C10u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vaddq_s32((int32x4_t)vorrq_s8((int8x16_t)v20, v18), vdupq_n_s32(0xB60EDC3u)), (int32x4_t)vmvnq_s8(vandq_s8((int8x16_t)vaddq_s32(v20, v20), (int8x16_t)vdupq_n_s32(0x16C1DB84u)))), 1uLL));
  return (*(uint64_t (**)(void))(a5 + 8 * (v11 ^ 0x1A)))();
}

void sub_23C1BD0B4()
{
}

uint64_t sub_23C1BD0C0@<X0>(int a1@<W3>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned int v65 = (((((v64[623] & 0x80000000 ^ 0xF2F5630E) - 391040390) & ((a3 - a1 + 801) ^ 0x17EFADCB)) + 1890459309) & 0x80000000 | *v64 & 0x7FFFFFFE) ^ (a3 - a1 + 1830943186);
  v64[623] = v64[396] ^ *((_DWORD *)&STACK[0x2108] + (*v64 & 1)) ^ ((v65 - ((2 * v65) & 0x86077CF4) + 1124318843) >> 1) ^ 0x53D195CC;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1652 * (a64 > 0x26F)) ^ a3)))();
}

uint64_t sub_23C1BD190(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  *(_DWORD *)(v6 + 2520) = 452853309;
  uint64_t v11 = (*(_DWORD *)(v8 + 2544) - 1695203356);
  v7[12] = *(void *)(a5 + 8 * (v5 + 1771230045));
  v7[14] = v11;
  v7[17] = 4116161505;
  LODWORD(STACK[0x460]) = v5 - 815331884;
  LODWORD(STACK[0x470]) = (v5 - 815331884) & 0xEFD67BE1;
  LODWORD(STACK[0x474]) = (v5 - 815331884) ^ 0xAC;
  LODWORD(STACK[0x478]) = 0;
  *(_DWORD *)(v10 - 192) = 1431737413
                         * ((-173831754 - ((v10 - 200) | 0xF5A389B6) + ((v10 - 200) | 0xA5C7649)) ^ 0xB402E95B)
                         + 40706419
                         + v5;
  *(void *)(v9 + 448) = &STACK[0x458];
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a5 + 8 * (v5 + a4)))(v10 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v10 - 188)))(v12);
}

void sub_23C1BD2A4()
{
}

uint64_t sub_23C1BD2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  *(void *)(v47 + 71) = v46;
  *(void *)(v47 + 175) = a46;
  return a26(a33);
}

uint64_t sub_23C1BD2D4(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4 = a2 + a4 - 1104;
  uint64_t v6 = (*(uint64_t (**)(void))(a3 + 8 * (a2 + a4 + 22)))();
  return (*(uint64_t (**)(uint64_t))(a3
                                            + 8
                                            * ((1015
                                              * (LODWORD(STACK[0x2AC]) == ((v4 - 1917617696) & 0x724C867B ^ 0x21A))) ^ v4)))(v6);
}

uint64_t sub_23C1BD398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v37 = (v35 - 438) | 0x212;
  LODWORD(STACK[0x2180]) = STACK[0x29C];
  *(void *)(v36 + 112) = a34;
  uint64_t v38 = *(void (**)(unint64_t))(v34 + 8 * (v37 + 1052));
  v38(STACK[0x1318]);
  uint64_t v39 = ((uint64_t (*)(unint64_t))v38)(STACK[0x13F8]);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + ((((v37 - 1775426072) | 0x400549) + 1771231143) ^ (v37 + 809) ^ v37)))(v39);
}

uint64_t sub_23C1BD438()
{
  LODWORD(STACK[0x2170]) = -2099564602;
  int v2 = (*(uint64_t (**)(void, const char *))(v1 + 8 * (v0 + 197)))(*MEMORY[0x263F0EC88], "IODeviceTree:/product");
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((43
                                * ((((v0 ^ 0x56F) - 9046894 + 29 * (v0 ^ 0x56F)) & (2 * v2)) + (v2 ^ 0x7FBAFCDD) != 2142960861)) ^ v0)))();
}

uint64_t sub_23C1BD4DC@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x12A4]) = a1 - 2142960861;
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 327)))();
  *(void *)(v2 + 3760) = v4;
  return (*(&off_26EFDBE20 + ((485 * (v4 != 0)) ^ v1)))();
}

uint64_t sub_23C1BD54C()
{
  unsigned int v4 = (v1 - 1425662536) & 0xBE8CB28E;
  STACK[0x250] = *(void *)(v2 + 209);
  uint64_t v5 = *(void *)(v2 + 217) & ((v4 - 425) ^ 0xF5);
  STACK[0x1798] = (v5 | (2 * v5) | 0xBEA85B076FFB5F8FLL) ^ 0x20;
  uint64_t v6 = (*(uint64_t (**)(void))(v0 + 8 * (int)(v4 ^ 0x756)))(*(void *)(v3 + 3760));
  uint64_t v7 = v6 ^ 0x7657FFEDF3DDAFB7;
  unint64_t v8 = (2 * v6) & 0xECAFFFDBE7BB5F6ELL;
  uint64_t v9 = (*(&off_26EFDBE20 + (int)(v4 ^ 0x49D)))();
  return (*(&off_26EFDBE20
          + (int)((58
                 * (v7 + (v9 ^ 0x9012321803922822) + v8 - ((2 * v9) & 0xDFDB9BCFF8DBAFBALL) == 0x66A3205F76FD7D9)) ^ v4)))();
}

uint64_t sub_23C1BD67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v59 = (*(uint64_t (**)(void))(v55 + 8 * (v56 ^ 0x41A)))(*(void *)(v57 + 3760));
  unint64_t v60 = (((v56 - 256) ^ 0x9FD17FFBFDFFFAD9) & (2 * v59))
      + (v59 ^ ((v56 + 541) - 0x3017400201000650));
  *(void *)(v58 + 240) = v60;
  uint64_t v61 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20 + (v56 ^ 0x40B)))(v60 + 0x3017400201000207, 2663297126);
  *(void *)(v58 + 248) = v61;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (((2 * (v61 == 0)) | (16 * (v61 == 0))) ^ v56)))(v61, v62, v63, v64, v65, v66, v67, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_23C1BD750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v38 = (*(uint64_t (**)(void))(v34 + 8 * (v35 + 471)))();
  uint64_t v39 = ((uint64_t (*)(void, unint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v35 + 507))(*(void *)(v37 + 3760), STACK[0x1638], v36, v38);
  return ((uint64_t (*)(uint64_t, uint64_t (**)(), unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + ((252 * ((((2 * v39) & 0xCF) + (v39 ^ 0x67)) != (v35 + 29))) ^ v35)))(v39, &off_26EFDBE20, &STACK[0x1540], v40, v41, v42, v43, v44, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_23C1BD7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v55 = (*(void *)(a3 + 240) + v52) / (((v53 - 179209938) & 0xAAE8297) - 14);
  uint64_t v56 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 8 * ((v53 - 261) ^ 0x560)))((v55 - ((2 * v55) & 0x2A9FC59E) + ((v53 + 172721366) | 0x1201) + 184829870) ^ 0x154FE2CFu, 50, 352690792);
  *(void *)(v54 + 4016) = v56;
  return ((uint64_t (*)(uint64_t, uint64_t (**)(), unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + ((38 * (v56 != 0)) ^ (v53 - 261))))(v56, &off_26EFDBE20, &STACK[0x1540], v57, v58, v59, v60, v61, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           0,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_23C1BD8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * (((((v35 ^ 0xA4B99DA ^ (((v36 - v35) | (v35 - v36)) >> 31)) & 1) == 0) * (v35 ^ 0xA4B9B25)) ^ (v34 + v35 + 731))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

void sub_23C1BD92C()
{
  int v3 = v0 ^ 0xD8;
  int v4 = v2 ^ v1;
  if ((v2 ^ v1) <= 1) {
    int v4 = 1;
  }
  LODWORD(STACK[0x157C]) = v4 + v3 + 536472627;
  JUMPOUT(0x23C1BD958);
}

uint64_t sub_23C1BD9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((35
                                * ((*(char *)(*(void *)(a3 + 248)
                                                          + ((v4
                                                            - ((4 * LODWORD(STACK[0x159C]) + 1590948) & 0x533FADE4)
                                                            - 374605243) ^ 0x299FD6F3u))
                                                - 48) < 0xA)) ^ v3 & 0x78BD67D5u)))();
}

uint64_t sub_23C1BDA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * ((245
                                              * ((*(char *)(*(void *)(a3 + 248) + (v4 ^ v3)) - 48) < 0xA)) ^ (v5 + 27))))(2523737419);
}

uint64_t sub_23C1BE47C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v5 = (v2 + 1703969320) & 0xEEF2FDFE;
  int v6 = v4 + v2 - 1277;
  BOOL v8 = a2 + 570219765 > (int)(v5 + 353325709) || v3 - 2112591630 >= 0;
  uint64_t v9 = *(uint64_t (**)(void))(a1 + 8 * ((148 * v8) ^ v6));
  LODWORD(STACK[0x92C]) = v5 + 353326473;
  return v9();
}

void sub_23C1BE588(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8 * (v2 + 353327262)))(*(void *)(v3 + 4016));
  LODWORD(STACK[0x3C8]) = -45002;
  JUMPOUT(0x23C1BE60CLL);
}

uint64_t sub_23C1BE6D0@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(a1
                                            + 8
                                            * ((1517
                                              * (((a2 + 19 * ((a3 - 803) ^ 0x1F7) + 1110385004) & 0x2763B1FF ^ 0x2515B40E) == 622179817)) ^ (19 * ((a3 - 803) ^ 0x1F7)))))(4132849499);
}

void sub_23C1BE85C(uint64_t a1@<X1>, char a2@<W8>)
{
  int v4 = STACK[0x92C];
  LODWORD(STACK[0x930]) = STACK[0x92C];
  LODWORD(STACK[0x934]) = v4 - 216;
  LODWORD(STACK[0x938]) = (v4 + 1792913909) & 0x95224B1F;
  char v5 = (16 * a2 - ((((v4 - 11) & 0x1F ^ 0xB0) + 32 * a2) & 0xE0) - 56) ^ 0x78 | (v2 + 46);
  uint64_t v6 = v3[502] + (LODWORD(STACK[0x159C]) - 536473175);
  unsigned int v7 = 1394700225 * ((v6 ^ *(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28))) & 0x7FFFFFFF);
  unint64_t v8 = 1394700225 * (v7 ^ HIWORD(v7));
  LOBYTE(STACK[0x4AB]) = byte_23C20FC90[v8 >> 24] ^ byte_23C214C70[v8 >> 24] ^ byte_23C20EB30[v8 >> 24] ^ (v5 - ((2 * v5) & 0xC6) - 29) ^ v8 ^ (31 * BYTE3(v8)) ^ 0xE3;
  v3[20] = *(void *)(a1 + 8 * (v4 ^ 0x74B));
  v3[21] = v6;
  JUMPOUT(0x23C1AC3F0);
}

uint64_t sub_23C1BE990()
{
  (*(void (**)(void))(v0 + 8 * (int)(v1 ^ 0x966D2B7D)))(*(void *)(v2 + 4096));
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(void *)(v4 + 88) == 0) * (263 * (v1 ^ 0x966D2D49) - 482)) ^ (v1 + 1771230982))))();
}

uint64_t sub_23C1BE9C0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((char)(byte_23C20EC30[*(void *)(v2 + 2096)] ^ byte_23C20F760[*(void *)(v2 + 2088)] ^ byte_23C20FD90[*(void *)(v2 + 2088)] ^ (23 * LOBYTE(STACK[0xC36])) ^ LOBYTE(STACK[0xC1F]) ^ LOBYTE(STACK[0xC1E])) < 71)
                                * (((a2 - 1609565109) | 0x4440641) + 1537997202)) ^ a2)))();
}

void sub_23C1BEA58(uint64_t a1, int a2, uint64_t a3)
{
  int v6 = v3 - 233232678;
  int v7 = LODWORD(STACK[0xC38]) + 156886703;
  LODWORD(STACK[0x648]) = v6;
  LODWORD(STACK[0x64C]) = v7;
  LODWORD(STACK[0x650]) = STACK[0x64C];
  int v8 = STACK[0x648];
  int v9 = LODWORD(STACK[0x648]) ^ (a2 + 506);
  LODWORD(STACK[0x654]) = v9;
  int v10 = 173 * (v9 ^ 0x208);
  LODWORD(STACK[0x658]) = v10;
  LODWORD(STACK[0x65C]) = v4 + v8 - 969;
  uint64_t v11 = **(void **)(a3 + 152)
      + (int)(((LODWORD(STACK[0xC0C]) + 141602981) ^ 0xDFFF7F5F)
            + 536903841
            + ((v10 ^ 0xBFFEFAB0) & (2 * (LODWORD(STACK[0xC0C]) + 141602981))));
  *(void *)(v5 + 616) = v11;
  *(void *)(v5 + 512) = v11;
  JUMPOUT(0x23C1D8744);
}

uint64_t sub_23C1BEA7C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v3 = a2 - 509;
  int v4 = *(uint64_t (**)(void))(a1 + 8 * (((LOBYTE(STACK[0xC37]) > 0x60u) * (v3 + 781)) ^ v3));
  LODWORD(STACK[0x648]) = v3 - v2 + 1062;
  return v4();
}

void sub_23C1BEAB0(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v5 = a3 ^ (a1 - 168);
  if (LOBYTE(STACK[0xC37]) >= (v5 + 28)) {
    int v6 = 143773250;
  }
  else {
    int v6 = LODWORD(STACK[0xC38]) + 156886671;
  }
  LODWORD(STACK[0x648]) = v5;
  LODWORD(STACK[0x64C]) = v6;
  LODWORD(STACK[0x650]) = STACK[0x64C];
  int v7 = STACK[0x648];
  int v8 = LODWORD(STACK[0x648]) ^ (a1 + 506);
  LODWORD(STACK[0x654]) = v8;
  int v9 = 173 * (v8 ^ 0x208);
  LODWORD(STACK[0x658]) = v9;
  LODWORD(STACK[0x65C]) = v3 + v7 - 969;
  uint64_t v10 = **(void **)(a2 + 152)
      + (int)(((LODWORD(STACK[0xC0C]) + 141602981) ^ 0xDFFF7F5F)
            + 536903841
            + ((v9 ^ 0xBFFEFAB0) & (2 * (LODWORD(STACK[0xC0C]) + 141602981))));
  *(void *)(v4 + 616) = v10;
  *(void *)(v4 + 512) = v10;
  JUMPOUT(0x23C1D8744);
}

uint64_t sub_23C1BEAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = v5 - 20;
  int v9 = (const float *)&dword_268B983A4;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(v9);
  uint64_t v11 = 83 * (v8 ^ 0x11Eu);
  v12.i64[0] = 0x8000000080000000;
  v12.i64[1] = 0x8000000080000000;
  int8x16_t v13 = (int8x16_t)vdupq_n_s32(0x44FA2FD4u);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v7.i64[0] = *(void *)&dword_268B983A8;
  v7.i32[2] = *(_DWORD *)(v6 + 4 * (v11 - 766));
  int8x16_t v15 = vextq_s8(v10, v7, 0xCuLL);
  int8x16_t v16 = v7;
  v16.i32[3] = dword_268B983B4;
  int8x16_t v17 = vandq_s8((int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v15, v12), vdupq_n_s32(0xBF51B3FE)), v12);
  int32x4_t v18 = (int32x4_t)veorq_s8(vandq_s8(v16, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x400CC8E0u));
  int8x16_t v19 = (int8x16_t)vsubq_s32(vaddq_s32(v18, (int32x4_t)veorq_s8(vandq_s8(v16, v13), (int8x16_t)vdupq_n_s32(0x4F22714u))), (int32x4_t)vandq_s8((int8x16_t)v18, v13));
  int32x4_t v20 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v19, (int8x16_t)vdupq_n_s32(0x24ECC0E2u)), (int8x16_t)vdupq_n_s32(0x20844023u)), (int32x4_t)veorq_s8(vandq_s8(v19, (int8x16_t)vdupq_n_s32(0xDB133F1C)), (int8x16_t)vdupq_n_s32(0x43132D19u))), v14), v17), (int8x16_t)vdupq_n_s32(0x64EEA9F2u));
  v21.i32[0] = *(_DWORD *)(v4 + 4 * (dword_268B983A8 & 1));
  v21.i32[1] = *(_DWORD *)(v4 + 4 * (unk_268B983AC & 1));
  v21.i32[2] = *(_DWORD *)(v4 + 4 * (*(_DWORD *)(v6 + 4 * (v11 - 766)) & 1));
  v21.i32[3] = *(_DWORD *)(v4 + 4 * (dword_268B983B4 & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v21), (int8x16_t)vdupq_n_s32(0xB0C7B462)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), (int8x16_t)vdupq_n_s32(0x159F6CF8u))), vdupq_n_s32(0x8ACFB67C)), 1uLL));
  return (*(uint64_t (**)(void))(a4 + 8 * (v8 ^ 0x34)))();
}

void sub_23C1BEC94()
{
}

uint64_t sub_23C1BECA0@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v3 = ((((((a2 + 302261532) | 0x8469044B) - 375926091) & ((v2[623] | 0x7FFFFFFF) - 720034395) ^ 0xBB7AE800) - 536897536) & 0x80000000 | (((a2 - 17826969) & 0x977D2DFF) - 376253773) & *v2) ^ 0x38F23FC;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x2138] + (*v2 & 1)) ^ ((v3 - 2 * (v3 & 0x8ED41BE ^ *v2 & 2) - 1997717059) >> 1) ^ 0xB1D6CF82;
  return (*(uint64_t (**)(void))(a1 + 8 * ((1955 * (LODWORD(STACK[0x3E0]) > 0x26F)) ^ a2)))();
}

uint64_t sub_23C1BEDAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  LODWORD(STACK[0x3E0]) = 0;
  int v10 = LODWORD(STACK[0x3E0])++;
  *(_DWORD *)(v5 + 2520) = v10 + 452853309;
  uint64_t v11 = (*(_DWORD *)(v7 + 2544) + 757471118);
  v6[12] = *(void *)(a4 + 8 * ((v4 - 391577606) ^ 0x7F162DEDLL));
  v6[14] = v11;
  v6[17] = 2273868683;
  LODWORD(STACK[0x460]) = v4 - 391577606;
  LODWORD(STACK[0x470]) = v4 - 391577661;
  LODWORD(STACK[0x474]) = v4 - 391577675;
  LODWORD(STACK[0x478]) = 0;
  *(void *)(v8 + 448) = &STACK[0x458];
  *(_DWORD *)(v9 - 192) = 1431737413
                        * ((((v9 - 200) | 0x34987F39) - (v9 - 200) + ((v9 - 200) & 0xCB6780C0)) ^ 0x8AC6E02B)
                        + 40706419
                        + v4;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 + a3)))(v9 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v9 - 188)))(v12);
}

uint64_t sub_23C1BEEB4()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)(v2 + 2544) + 1;
  }
  else {
    int v3 = 1516397565;
  }
  *(_DWORD *)(v2 + 2544) = v3;
  return sub_23C1BF020(531772516);
}

uint64_t sub_23C1BF020@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  unsigned int v8 = (a6 + 905660402) & 0xCA04B7FF;
  *(unsigned char *)(a3 + (a5 - 1840936515)) = (((v6 ^ (v8 + a1)) >> (v7 - 58))
                                                    - (((v6 ^ (v8 + a1)) >> (v7 - 58) << (((a6 - 77) & 0xAE) + 91)) & 0x2C)
                                                    + 22) ^ 0x6E;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((199
                                * (a5
                                 - ((((v6 ^ (v8 + a1)) >> (v7 - 58))
                                                    - (((v6 ^ (v8 + a1)) >> (v7 - 58) << (((a6 - 77) & 0xAE) + 91)) & 0x2C)
                                                    + 22) != 0x6E) != a4)) ^ a6)))();
}

uint64_t sub_23C1BF0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((v7 + 8 == a7)
                                     * ((v9 + ((v8 - 1091719995) & 0xD77F7F4F) - 1270) ^ (v8 - 375390536) & 0x16600155)) ^ v8)))();
}

uint64_t sub_23C1BF120(uint64_t a1, uint64_t a2)
{
  *(void *)(v7 + 48) = 0x6CA8DF83F5A06F5CLL;
  LODWORD(STACK[0x3E0]) = *(_DWORD *)(v4 + 2520) - 452853308;
  uint64_t v9 = *(unsigned int *)(v6 + 2544);
  v5[12] = *(void *)(a2 + 8 * (v2 + 1771230073));
  v5[14] = v9;
  LODWORD(STACK[0x460]) = (v2 - 66666392) ^ 0x8A;
  LODWORD(STACK[0x470]) = v2 - 66666392;
  v5[17] = 1516397565;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = (v2 - 66666392) & 0xD77FEDAC;
  *(void *)(v7 + 448) = &STACK[0x458];
  *(_DWORD *)(v8 - 192) = 1431737413
                        * ((((v8 - 200) | 0xCCC43128) - (v8 - 200) + ((v8 - 200) & 0x333BCED0)) ^ 0x729AAE3A)
                        + 40706419
                        + v2;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v2 + v3)))(v8 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v8 - 188)))(v10);
}

uint64_t sub_23C1BF234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v46 = v43 + v44;
  (*(void (**)(uint64_t, uint64_t))(a4 + 8 * (v46 + 24)))(a43, 3312658705);
  int v47 = (*(&off_26EFDBE20 + v46 + 32))();
  LODWORD(xmmword_268B98018) = v47 - 2087771140 - ((2 * v47) & 0x71E47F8);
  int v48 = xmmword_268B98018 ^ 0xD6F9936A ^ ((xmmword_268B98018 >> 30) | 0x5576B094);
  *(_DWORD *)(v45 + 4) = ((1812433253 * v48) ^ 0xF9ED8FDF)
                       + ((-670100790 * v48) & 0xF3DB1FBE)
                       - 2
                       * ((((1812433253 * v48) ^ 0xF9ED8FDF) + ((-670100790 * v48) & 0xF3DB1FBE) + 303198242) & 0x38F23FE ^ (((101 * v48) ^ 0xDF) + ((-54 * (_BYTE)v48) & 0xBE) - 126) & 2)
                       - 1985899490;
  return unk_26EFDE128(280483458);
}

void sub_23C1BF398()
{
}

void sub_23C1BF3B4()
{
}

uint64_t sub_23C1BF5AC@<X0>(uint64_t a1@<X3>, int a2@<W4>, uint64_t a3@<X5>, uint64_t a4@<X6>, unsigned int a5@<W8>)
{
  uint64_t v8 = (unsigned int *)(v7 + 4 * (v5 + a3));
  unsigned int v9 = (((v6 & 0x80000000) - 254510289) ^ 0xCE2B8098) + 157405180;
  uint64_t v10 = v5 + 1;
  int v11 = *(_DWORD *)(v7 + 4 * (v10 + a3));
  unsigned int v12 = ((v11 & ((3 * (a5 ^ 0x406)) ^ (a2 + 2842)) ^ 0xBED8201D)
       - ((2 * (v11 & ((3 * (a5 ^ 0x406)) ^ (a2 + 2842)) ^ 0xBED8201D)) & 0x31320E46)
       + 412682019) ^ 0xA5CE04C2 | v9 ^ 0xC861CBB3;
  *uint64_t v8 = v8[397] ^ *((_DWORD *)&STACK[0x2138] + (v11 & 1)) ^ ((v12 - ((2 * v12) & 0xD83AA1FA) + 1813860605) >> 1) ^ 0xC3AEC722;
  return (*(uint64_t (**)(void))(a1 + 8 * ((174 * (v10 == a4 + 3)) ^ a5)))();
}

uint64_t sub_23C1BF6B0@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  LODWORD(STACK[0x3E0]) = a2 + 1;
  uint64_t v38 = (*(uint64_t (**)(uint64_t, void))(a1 + 8 * (v37 ^ 0x15Au)))(a36, 0);
  int v39 = ((v37 - 2145377149) | 0x164D0442) - 316541263 + v36[4] - ((2 * v36[4]) & 0x71E47F8);
  v36[1] = v36[6] - 2087771140 - ((2 * v36[6]) & 0x71E47F8);
  v36[2] = v39;
  uint64_t v40 = *(&off_26EFDBE20 + (v37 + 424));
  int v41 = ((uint64_t (*)(uint64_t))v40)(v38);
  v36[3] = v41 - 2087771140 - ((2 * v41) & 0x71E47F8);
  int v42 = v40();
  *int v36 = v42 - 2087771140 - ((2 * v42) & 0x71E47F8);
  return sub_23C1B6578(-1771229877, (uint64_t)&off_26EFDBE20);
}

uint64_t sub_23C1BF808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unint64_t a48)
{
  STACK[0x310] = v48;
  STACK[0x378] = a48;
  return a33(a34);
}

uint64_t sub_23C1BF824(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 8 * (a3 ^ (a3 - 476))))();
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * ((((LODWORD(STACK[0x354]) == 0) ^ 0x7F) & 1 | (2
                                                                                           * (((LODWORD(STACK[0x354]) == 0) ^ 0x7F) & 1))) ^ 0x4D8)))(v4);
}

uint64_t sub_23C1BF8D8()
{
  STACK[0x250] = *(void *)(v3 + 3384);
  uint64_t v5 = *(void (**)(void))(v1 + 8 * (v0 ^ 0x6D7));
  v5(*(void *)(v4 + 169));
  uint64_t v6 = ((uint64_t (*)(void))v5)(*(void *)(v3 + 3792));
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + (((v2 == ((v0 + 903) ^ 0xFFFF5450)) * (((v0 + 903) | 5) - 849)) ^ v0)))(v6);
}

void sub_23C1BF9F0()
{
  uint64_t v2 = v0[248];
  v0[249] = v2;
  int v3 = STACK[0xBB4];
  LODWORD(STACK[0xBCC]) = STACK[0xBB4];
  int v4 = (v3 - 148) | 0x204;
  v2 -= 1224203596;
  char v5 = byte_23C214D72[v2];
  LODWORD(STACK[0xBD0]) = v4;
  uint64_t v6 = v0[461] + v2;
  unsigned int v7 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + ((v4 + 2104576938) & dword_268B99318)) ^ v6) & 0x7FFFFFFF);
  unint64_t v8 = 1394700225 * (v7 ^ HIWORD(v7));
  LOBYTE(STACK[0x4AB]) = byte_23C2111C0[v8 >> 24] ^ (v5 - 50) ^ byte_23C217710[v8 >> 24] ^ byte_23C213330[(v8 >> 24) + 1] ^ v8 ^ (5 * BYTE3(v8));
  v0[20] = *(void *)(v1 + 8 * (v3 ^ 0x4C1));
  v0[21] = v6;
  JUMPOUT(0x23C1AC3F0);
}

void sub_23C1BFADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  LODWORD(STACK[0x21F8]) = a54;
  *(void *)(v58 + 232) = a41;
  STACK[0x250] = *(void *)(v56 + 3384);
  (*(void (**)(void))(v55 + 8 * (v54 + 952)))(*(void *)(v57 + 169));
  ((void (*)(void))*(&off_26EFDBE20 + (v54 ^ 0x448)))(*(void *)(v56 + 3792));
  JUMPOUT(0x23C1BFB3CLL);
}

uint64_t sub_23C1BFD34()
{
  uint64_t v3 = (*(uint64_t (**)(void, void))(v2 + 8 * (v1 ^ 0x32A)))(*(void *)(v0 + 672), 0);
  STACK[0x1718] = v3;
  return (*(&off_26EFDBE20 + (((v3 == 0) * ((v1 ^ 0x17E) + 1771231427 + v1 - 1771231211 - 2557)) ^ v1)))();
}

uint64_t sub_23C1BFDAC()
{
  unint64_t v3 = STACK[0x250];
  STACK[0x1450] = STACK[0x250];
  STACK[0x1458] = (unint64_t)&STACK[0x18A0] + v3;
  STACK[0x250] = v3 + 64;
  STACK[0x1460] = ((((void)&STACK[0x18A0] + v3) << (v2 - 68)) & 0x10 | (2
                                                                                         * ((((void)&STACK[0x18A0] + v3) << (v2 - 68)) & 0x10)) ^ 0x20)
                + 0x302BD82D54F86625;
  uint64_t v4 = (*(uint64_t (**)(void))(v0 + 8 * (v2 + 400)))(*(void *)(v1 + 472));
  unint64_t v5 = v4 ^ 0xF77FB76DF8DC7F7FLL;
  unint64_t v6 = (v4 << ((v2 - 121) & 0xF6 ^ 0xC7u)) & 0xEEFF6EDBF1B8FEFELL;
  uint64_t v7 = (*(&off_26EFDBE20 + v2 + 459))();
  return (*(&off_26EFDBE20
          + ((201 * (v5 + (v7 ^ 0x9820004008930820) + v6 - ((2 * v7) & 0xCFBFFF7FEED9EFBELL) != 0x8F9FB7AE016F879FLL)) ^ v2)))();
}

uint64_t sub_23C1BFF0C()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 + 1298)))(*(void *)(v2 + 472));
  uint64_t v4 = v3 ^ 0x773FB73FB9FEBBA6;
  uint64_t v5 = (((v1 - 1404003756) & 0x53AF66F7) - 0x118091808C028AC6) & (2 * v3);
  uint64_t v6 = (*(&off_26EFDBE20 + (v1 ^ 0x6D8)))();
  return (*(&off_26EFDBE20
          + ((28
            * (v4 + (v6 ^ 0x1060210100014020) + v5 - ((v6 << (v1 + 59)) & 0xDF3FBDFDFFFD7FBELL) != 0x879FD840B9FFFBC6)) ^ v1)))();
}

uint64_t sub_23C1C000C()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0x792)))(*(void *)(v0 + 472));
  unint64_t v4 = v3 ^ 0xF6FEF73DDFDCFBF6;
  unint64_t v5 = (2 * v3) & 0xEDFDEE7BBFB9F7ECLL;
  uint64_t v6 = (*(&off_26EFDBE20 + (v2 ^ 0x45B)))();
  return (*(&off_26EFDBE20
          + ((324
            * (v4
             + (v6 ^ 0x24182B0480226686)
             + v5
             - (((317 * (v2 ^ 0x248u) - 0x483056090044D151) ^ (141 * (v2 ^ 0x24Du))) & (2 * v6)) == 0x1B1722425FFF627CLL)) ^ v2)))();
}

uint64_t sub_23C1C0108()
{
  char v2 = (*(uint64_t (**)(unint64_t, uint64_t, unint64_t *))(v0 + 8 * (v1 + 958)))(STACK[0x1718], 4, &STACK[0x348]);
  return (*(&off_26EFDBE20
          + ((((((2 * v2) & 0xFB) + (((v1 - 113) | 0xD2) ^ 0xA6 ^ v2)) != 125)
            * (((v1 - 634) | 0x360) ^ 0x39A)) ^ v1)))();
}

uint64_t sub_23C1C018C()
{
  int v3 = (*(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0x7C6)))(*(void *)(v0 + 472));
  int v4 = v3 - ((((v2 ^ 0x211) + 748) ^ 0x6C5C0E87) & (2 * v3)) - 1238497740;
  int v5 = v4 ^ (329 * (v2 ^ 0x211) - 1134192326);
  LODWORD(STACK[0x1524]) = v5;
  LODWORD(STACK[0x304]) = v5;
  uint64_t v6 = ((uint64_t (*)(void, uint64_t))*(&off_26EFDBE20 + (int)(v2 + 1044)))(v4 ^ 0xB62E0634, 2381541563);
  STACK[0x1528] = v6;
  return (*(&off_26EFDBE20 + ((88 * (v6 == 0)) ^ v2)))();
}

uint64_t sub_23C1C025C()
{
  int v5 = (void *)(*(void *)(v4 + 41) + *(void *)(v4 + 33) - 0x302BD82D54F86635);
  *int v5 = 0;
  v5[1] = (v2 ^ 0x79BFD6BF7F272CDCLL)
        + ((2 * v2) & 0xFE4E59B8)
        + ((2 * v1) ^ 0x5C4u)
        - 0x79BFD6BF7F272CF6;
  (*(void (**)(void, void))(v0 + 8 * (v1 ^ 0x4CF)))(*(void *)(v3 + 472), 0);
  uint64_t v6 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v1 + 822))(v2, 50, 2025981945);
  STACK[0x12D0] = v6;
  return (*(&off_26EFDBE20 + (((v6 == 0) * ((v1 + 25) ^ 0x2EF)) ^ v1)))();
}

uint64_t sub_23C1C034C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = (v4 & 0x14D1F3FFCLL) + ((v3 + 1365370583) & 0xAE9E163A ^ 0xA04884C43FFC0E18) + (v5 ^ 0x5FB77B3CA68F9FFELL);
  *(void *)(v7 + 57) = v8;
  *(unsigned char *)(v7 + 72) = v8 < 0xE68BAE00;
  unsigned int v9 = *(uint64_t (**)(void))(a3 + 8 * ((51 * (v8 != 3867913728)) | v3));
  LODWORD(STACK[0x10A4]) = v3;
  v6[406] = 0x7D91CC599355CFD4;
  v6[407] = 0x3FCC44623627CCB8;
  v6[408] = 0x38CAB8F569F4D885;
  return v9();
}

void sub_23C1C041C()
{
  uint64_t v2 = v0[408];
  v0[409] = v2;
  uint64_t v3 = v0[407];
  v0[410] = v3;
  v0[411] = v0[406];
  int v4 = STACK[0x10A4];
  LODWORD(STACK[0x10D8]) = STACK[0x10A4];
  int v5 = (v4 - 752) | 2;
  LOBYTE(v2) = *(unsigned char *)(v2 + *(void *)(v1 + 241) - 0x38CAB8F569F4D885);
  uint64_t v6 = v3 + v0[475] - 0x3FCC44623627CCB8;
  unsigned int v7 = 1394700225 * ((v5 + 2147483621) & (*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ v6));
  unint64_t v8 = 1394700225 * (v7 ^ HIWORD(v7));
  char v9 = byte_23C2111C0[v8 >> 24];
  LODWORD(STACK[0x10DC]) = v5;
  LOBYTE(STACK[0x4AB]) = v9 ^ v2 ^ byte_23C217710[v8 >> 24] ^ byte_23C213330[(v8 >> 24) + 1] ^ v8 ^ (5 * BYTE3(v8));
  v0[21] = v6;
  JUMPOUT(0x23C1C0524);
}

uint64_t sub_23C1C0530()
{
  (*(void (**)(void))(v0 + 8 * (int)(v2 ^ 0x966D2B7D)))(*(void *)(v1 + 672));
  LODWORD(STACK[0x1724]) = -45000;
  unint64_t v6 = STACK[0x250];
  unsigned int v7 = (char *)&STACK[0x18A0] + STACK[0x250];
  STACK[0x1728] = STACK[0x250];
  STACK[0x1730] = (unint64_t)v7;
  STACK[0x250] = v6 + 32;
  LODWORD(STACK[0x25D]) = -774198575;
  LOWORD(STACK[0x261]) = -12340;
  LOBYTE(STACK[0x263]) = -51;
  unint64_t v8 = (char *)&STACK[0x18A0] + v6;
  *((void *)v8 + 1) = 0;
  STACK[0x1738] = (unint64_t)(v8 + 8);
  *((_DWORD *)v7 + 4) = 1598675563;
  uint64_t v9 = *(void *)(v3 + 8 * (v2 + 1771230058));
  unint64_t v10 = 591644117
      * ((((v5 - 200) | 0x807F0AF9DFC2FD84) - (v5 - 200) + ((v5 - 200) & 0x7F80F506203D0278)) ^ 0x64642A3044C7B7C3);
  *(void *)(v4 + 464) = v7 + 0x2E5A7CA98C249109;
  *(_DWORD *)(v5 - 176) = -922504226 - v10 + v2;
  *(void *)(v4 + 448) = v9 - v10;
  (*(void (**)(uint64_t))(v3 + 8 * (v2 + 1771231434)))(v5 - 200);
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((v2 + 1771230058) ^ 0x275 ^ (30
                                                                         * (*(_DWORD *)(v5 - 192) == 40 * ((v2 + 1330802839) & 0x1A40637D ^ 0x179) + 88049582)))))(*(void *)STACK[0x1738]);
}

void sub_23C1C0560(int a1@<W8>)
{
  LODWORD(STACK[0x32C]) = a1;
  JUMPOUT(0x23C1C0598);
}

uint64_t sub_23C1C0670(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v5 = (v4 + 1645315122) | 0x8E;
  BOOL v6 = ((v5 - 1626689071) & 0x60F54D73 ^ 0xB76CB458) + (v5 ^ (a4 - 198)) == 1306124950;
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * (v6 | (32 * v6) | v5)))(3832772565);
}

uint64_t sub_23C1C0878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  BOOL v45 = v43 + 8 == ((v44 - 1626689071) & 0x60F54D73 ^ 0xB76CB458) + (v44 ^ a43);
  return (*(uint64_t (**)(void))(a3 + 8 * (v45 | (32 * v45) | v44)))();
}

uint64_t sub_23C1C08C8(uint64_t a1, int a2, uint64_t a3)
{
  STACK[0x1878] = 0x9959AE9800511E47;
  uint64_t v8 = *(unsigned int *)(v5 + 2544);
  v4[12] = *(void *)(a3 + 8 * ((v3 - 2003215325) ^ 0x1F0689AALL));
  v4[14] = 1516397565;
  LODWORD(STACK[0x460]) = (v3 - 2003215325) ^ 0x71;
  LODWORD(STACK[0x470]) = v3 - 2003215325;
  v4[17] = v8;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = (v3 - 2003215325) ^ 0xD8;
  *(void *)(v6 + 448) = &STACK[0x458];
  *(_DWORD *)(v7 - 192) = 1431737413 * ((((2 * (v7 - 200)) | 0xF8DCFDD6) - (v7 - 200) + 59867413) ^ 0x4230E1F9)
                        + 40706419
                        + v3;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v3 + a2)))(v7 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v7 - 188)))(v9);
}

uint64_t sub_23C1C09E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v43 = v41 + a4;
  int v44 = v41 + a4 - 927;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8 * (v43 + 24)))(a41, 3312658705);
  int v45 = unk_26EFDEF90();
  unsigned int v46 = v45 - 2087771140 - ((v44 + 119424393) & (2 * v45));
  LODWORD(xmmword_268B98018) = v46;
  *(_DWORD *)(v42 + 4) = ((1812433253 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) ^ 0x57FEDBFD)
                       + ((-670100790 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) & (v44 - 1342327413))
                       + 730875904
                       - ((2
                         * (((1812433253 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) ^ 0x57FEDBFD)
                          + ((-670100790 * (v46 ^ 0x838F23FE ^ (v46 >> 30))) & (v44 - 1342327413)))
                         - 402503672) & 0x71E47F8);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + (int)((11 * ((((v44 | 1) - 1) | (v44 | 0xFFFFFFFE) & (1 - v44)) >> 31)) ^ (v44 - 77))))(1890670755);
}

void sub_23C1C0B54()
{
}

uint64_t sub_23C1C0B74(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v4);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  int8x16_t v8 = (int8x16_t)vdupq_n_s32(0x44E6BF0Au);
  v5.i64[0] = *(void *)(v4 + 4);
  v5.i32[2] = *(_DWORD *)(v4 + 12);
  int8x16_t v9 = vextq_s8(v6, v5, 0xCuLL);
  int8x16_t v10 = v5;
  v10.i32[3] = *(_DWORD *)(v4 + 4 * ((-1771229590 - a4) ^ 0x2Eu) - 1204);
  int8x16_t v11 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v9, v7), vdupq_n_s32(0x5E7FF3FCu)), (int8x16_t)vdupq_n_s32(0x80340051)), vdupq_n_s32(0xB44E30F2));
  int32x4_t v12 = (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x539B8CC8u));
  int32x4_t v13 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v12, (int32x4_t)veorq_s8(vandq_s8(v10, v8), (int8x16_t)vdupq_n_s32(0x84643302))), (int32x4_t)vandq_s8((int8x16_t)v12, v8)), (int8x16_t)vdupq_n_s32(0xC4E29A3E));
  int32x4_t v14 = (int32x4_t)vorrq_s8(veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0x1451B2F8u)), v13), vdupq_n_s32(0xF5D72682)), (int8x16_t)vdupq_n_s32(0xA5C7AC82)), veorq_s8(v11, (int8x16_t)vdupq_n_s32(0xB4823143)));
  v15.i32[0] = *((_DWORD *)&STACK[0x1878] + (*(_DWORD *)(v4 + 4) & 1));
  v15.i32[1] = *((_DWORD *)&STACK[0x1878] + (*(_DWORD *)(v4 + 8) & 1));
  v15.i32[2] = *((_DWORD *)&STACK[0x1878] + (*(_DWORD *)(v4 + 12) & 1));
  v15.i32[3] = *((_DWORD *)&STACK[0x1878] + (v10.i8[12] & 1));
  *(int8x16_t *)uint64_t v4 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v4 + 1588), v15), (int8x16_t)vdupq_n_s32(0x555F9AFCu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v14, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x543A12EEu))), vdupq_n_s32(0xAA1D0977)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * (-1771229590 - a4)))();
}

uint64_t sub_23C1C1700@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W8>)
{
  int8x16_t v8 = (unsigned int *)(v7 + 4 * (v4 + a2));
  unsigned int v9 = ((((a4 + 2051492237) & 0x85B8B7EB) + (v5 | 0x7FFFFFFF) + 1585443154) & 0x80340051) - 1269944078;
  uint64_t v10 = v4 + 1;
  int v11 = *(_DWORD *)(v7 + 4 * (v10 + a2));
  unsigned int v12 = ((v11 & 0x7FFFFFFE ^ 0x539B8CC8) + (v11 & v6 ^ 0x84643302) - ((v11 & 0x7FFFFFFE ^ 0x539B8CC8) & v6)) ^ 0xC4E29A3E;
  unsigned int v13 = (((2 * v12) & 0x1451B2F8) - v12 - 170449278) ^ 0xA5C7AC82 | v9 ^ 0xB4823143;
  *int8x16_t v8 = v8[397] ^ *((_DWORD *)&STACK[0x1878] + (v11 & 1)) ^ ((v13 - ((2 * v13) & 0x543A12EE) - 1440937609) >> 1) ^ 0x555F9AFC;
  return (*(uint64_t (**)(void))(a1 + 8 * ((851 * (v10 == a3 + 3)) ^ a4)))();
}

uint64_t sub_23C1C1834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = v4 - 31;
  int8x16_t v8 = (const float *)&dword_268B983A4;
  int8x16_t v9 = (int8x16_t)vld1q_dup_f32(v8);
  v10.i64[0] = 0x8000000080000000;
  v10.i64[1] = 0x8000000080000000;
  v6.i64[0] = *(void *)&dword_268B983A8;
  v6.i32[2] = dword_268B983B0;
  int8x16_t v11 = vextq_s8(v9, v6, 0xCuLL);
  int8x16_t v12 = v6;
  v12.i32[3] = *(_DWORD *)(v5 + 4 * ((v7 + 86) ^ 0x206));
  int32x4_t v13 = (int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x848B3BE4));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0xFA6DEE8E)), v13), vdupq_n_s32(0x2C908B9u)), (int8x16_t)vdupq_n_s32(0x7A32EF5Fu));
  v15.i32[0] = *(_DWORD *)(v3 + 4 * (dword_268B983A8 & 1));
  v15.i32[1] = *(_DWORD *)(v3 + 4 * (unk_268B983AC & 1));
  v15.i32[2] = *(_DWORD *)(v3 + 4 * (dword_268B983B0 & 1));
  v15.i32[3] = *(_DWORD *)(v3 + 4 * (v12.i8[12] & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v15), (int8x16_t)vdupq_n_s32(0x495E10F3u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v14, vbicq_s8(v10, v11)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x243C3AD0u))), vdupq_n_s32(0x921E1D68)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * (v7 ^ 0x21)))();
}

void sub_23C1C1974()
{
}

uint64_t sub_23C1C1980@<X0>(char a1@<W1>, uint64_t a2@<X2>, int a3@<W3>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49)
{
  unsigned int v50 = (((*v49 & 0x7FFFFFFE ^ 0xF5AAD5E0) << (a1 + ((a4 - 18) & 0x7B) - 13)) | 0xE5DB8C70)
      - (*v49 & 0x7FFFFFFE ^ 0xF5AAD5E0);
  v49[623] = v49[396] ^ *((_DWORD *)&STACK[0x1878] + (*v49 & 1)) ^ ((((v50 + 219298248) ^ 0x4C83024 | ((a3 + a4 - 737) ^ 0x166D2D4B) & v49[623] ^ 0x80000000)
                                                                     - 2
                                                                     * (((v50 + 219298248) ^ 0x4C83024) & 0x355AD76A ^ v50 & 2)
                                                                     - 1252337815) >> 1) ^ 0x5AFC75F3;
  return (*(uint64_t (**)(void))(a2 + 8 * (((2 * (a49 > 0x26F)) | (4 * (a49 > 0x26F))) ^ a4)))();
}

uint64_t sub_23C1C1A78(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  return sub_23C1BA4D8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           0);
}

uint64_t sub_23C1C1A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46)
{
  *(void *)(v47 + 143) = v46;
  STACK[0x270] = a46;
  return a25(a26);
}

uint64_t sub_23C1C1AA0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int v63 = a2 + a4 - 1550;
  uint64_t v65 = (*(uint64_t (**)(void))(a3 + 8 * (a4 ^ (a4 - 476))))();
  return (*(uint64_t (**)(uint64_t))(a3
                                            + 8
                                            * (v63 ^ 0x3F9 ^ ((((v63 - 37) ^ (((a63 - v63) | (v63 - a63)) < 0)) & 1)
                                                            * (317 * (v63 ^ 2) + 1188)))))(v65);
}

uint64_t sub_23C1C1B88@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v28 = a1 + 353;
  *(_DWORD *)STACK[0x17D0] = STACK[0x304];
  *(void *)STACK[0x17D8] = a26;
  STACK[0x250] = *(void *)(v27 + 25);
  uint64_t v29 = *(void (**)(unint64_t))(v26 + 8 * (a1 + 956));
  v29(STACK[0x1718]);
  uint64_t v30 = ((uint64_t (*)(unint64_t))v29)(STACK[0x17E0]);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + v28))(v30);
}

uint64_t sub_23C1C1DB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((29 * (((a1 == 0) ^ (v1 - 1)) & 1)) ^ v1)))();
}

uint64_t sub_23C1C1DE8()
{
  int v4 = (v1 - 680) | 0x20;
  int v5 = (v4 - 1664332133) & 0x6333B45F;
  int8x16_t v6 = *(uint64_t (**)(void))(v3
                           + 8 * (((*(_DWORD *)(v0 + 16) - 1598675570 < (v4 - 359)) * (v5 - 879)) ^ v4));
  LODWORD(STACK[0xCD4]) = v5;
  *(void *)(v2 + 2272) = 1784589247;
  return v6();
}

void sub_23C1C1E58()
{
  uint64_t v3 = v1[284];
  v1[285] = v3;
  int v4 = STACK[0xCD4];
  LODWORD(STACK[0xCE8]) = STACK[0xCD4];
  uint64_t v5 = (v4 - 1771230992);
  LODWORD(STACK[0xCEC]) = v5;
  LODWORD(STACK[0xCF0]) = v4 ^ 0x5D7;
  uint64_t v6 = v5 + v3 - 0x100CBD90ALL;
  LOBYTE(STACK[0xCF7]) = *((unsigned char *)&STACK[0x25D] + v6);
  uint64_t v7 = **(void **)(v0 + 504) + v6;
  v1[288] = v7;
  v1[64] = v7;
  v1[62] = *(void *)(v2 + 8 * (v4 ^ 0x1C0));
  JUMPOUT(0x23C1D8748);
}

uint64_t sub_23C1C1EC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 == 0) * ((v1 + 648) ^ (v1 - 148) ^ 0x3CD)) ^ v1)))();
}

uint64_t sub_23C1C1EFC@<X0>(int a1@<W8>)
{
  int v3 = a1 ^ 0x324;
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 552)))();
  STACK[0x250] = STACK[0x1728];
  if (LODWORD(STACK[0x1724]) == v3 + 195 + ((v3 + 1640763123) & 0x9E33F0F5) - 580) {
    int v5 = 1;
  }
  else {
    int v5 = v1;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((25 * v5) ^ v3)))(v4);
}

uint64_t sub_23C1C1F74()
{
  v2[455] = &STACK[0x2228];
  LODWORD(STACK[0x2200]) = -2099564595;
  LODWORD(STACK[0x2228]) = 172727073;
  v2[456] = &STACK[0x2220];
  *(void *)(v4 + 280) = 0;
  int v5 = off_268B98008;
  v0[729] = *off_268B98008 - 120;
  v0[730] = v5[1] - 120;
  v0[731] = v5[2] - 120;
  v0[732] = v5[3] - 120;
  v0[733] = v5[4] + ((v1 + 104) & 0xFE ^ 0x7E);
  v0[734] = v5[5] + (((v1 - 70) | 2) ^ 0xC3);
  v0[735] = v5[6] - 120;
  v0[736] = v5[7] - 120;
  v0[737] = v5[8] - 120;
  v0[738] = v5[9] - 120;
  v0[739] = v5[10] - 120;
  v0[740] = v5[11] - 120;
  v0[741] = v5[12] - 120;
  v0[742] = v5[13] - 120;
  v0[743] = v5[14] - 120;
  v0[744] = v5[15] - 120;
  v0[745] = v5[16] - 120;
  v0[746] = v5[17] - 120;
  v0[747] = v5[18] - 120;
  v0[748] = v5[19] - 120;
  v0[749] = v5[20] - 120;
  v0[750] = v5[21] - 120;
  v0[751] = off_268B98008[22] - 120;
  uint64_t v6 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 1170)))();
  uint64_t v7 = ((uint64_t (*)(void, unint64_t *, uint64_t))*(&off_26EFDBE20 + v1 + 1142))(0, &STACK[0x1819], v6);
  v2[457] = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * ((55 * (v7 != 0)) ^ v1)))();
}

uint64_t sub_23C1C216C()
{
  uint64_t v3 = (*(uint64_t (**)(void, void))(v2 + 8 * (v0 + 1062)))(*(void *)(v1 + 3656), 0);
  STACK[0x1640] = v3;
  return (*(&off_26EFDBE20 + (int)(((v3 != 0) * ((v0 - 1771230379) ^ 0x966D2EDD)) ^ v0)))();
}

uint64_t sub_23C1C21D4()
{
  unint64_t v3 = STACK[0x250];
  v1[64] = STACK[0x250];
  v1[65] = (char *)&STACK[0x18A0] + v3;
  STACK[0x250] = v3 + (((v2 + 561) | 0xF0u) ^ 0x3B3);
  v1[66] = (((v2 + 574) | 0xE8u) ^ (16 - 16 * (&STACK[0x18A0] + v3)) & 0x10 ^ 0xD77BFBB6EADEE7CDLL)
         + 2 * ((16 - 16 * (&STACK[0x18A0] + v3)) & 0x10)
         + 0x6DE65DFFFD75DFECLL;
  uint64_t v4 = (*(uint64_t (**)(void))(v0 + 8 * (v2 ^ 0x50A)))(v1[32]);
  unint64_t v5 = v4 ^ 0xFEFFFFAFB9DFCBEELL;
  unint64_t v6 = (2 * v4) & 0xFDFFFF5F73BF97DCLL;
  uint64_t v7 = (*(&off_26EFDBE20 + v2 + 1345))();
  return (*(&off_26EFDBE20
          + ((471 * (v5 + (v7 ^ 0x881A124808800822) + v6 - ((2 * v7) & 0xEFCBDB6FEEFFEFBALL) == 0x871A11F7C25FD410)) ^ v2)))();
}

uint64_t sub_23C1C2320()
{
  uint64_t v3 = (*(uint64_t (**)(unint64_t))(v0 + 8 * (v1 + 580)))(STACK[0x1640]);
  unint64_t v4 = ((2 * v3) & 0xFE84FBBFBD3C3FBELL) + (v3 ^ 0xFF427DDFDE9E1FDFLL);
  STACK[0x1400] = v4;
  uint64_t v5 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20 + (v1 ^ 0x5D5)))(v4 + 0xBD82202161E022, 2663297126);
  STACK[0x1408] = v5;
  *(void *)(v2 + 8) = v5;
  return (*(&off_26EFDBE20 + (int)(((v5 != 0) * ((21 * (v1 ^ 0x3E0) + 512224819) & 0xE17814FF ^ 0x371)) ^ v1)))();
}

uint64_t sub_23C1C2420()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v2 ^ 0x2E3)))();
  char v4 = ((uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (v2 ^ 0x287)))(STACK[0x1640], STACK[0x1408], v1, v3);
  return (*(&off_26EFDBE20
          + ((11 * (((((((v2 + 81) | 0x20) - 94) ^ v2 ^ 0x89) & (2 * v4)) + (v4 ^ 0xCF)) != 207)) ^ v2)))();
}

uint64_t sub_23C1C24DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (*(void *)(v5 + 4104) + v4) / 2
     - ((2 * ((*(void *)(v5 + 4104) + v4) / 2)) & 0x9F77FCEA)
     + 1337719367
     + ((v3 - 1876163560) ^ 0x902C0C65);
  LODWORD(STACK[0x3F4]) = v6 ^ (((v3 - 1876163560) | 0x6412500) - 1350354935);
  uint64_t v7 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a3 + 8 * (v3 + 498)))(v6 ^ 0x4FBBFE75u, 50, 921324422);
  STACK[0x15B0] = v7;
  return (*(&off_26EFDBE20 + ((127 * (v7 == 0)) ^ v3)))();
}

uint64_t sub_23C1C25BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((121 * (v5 == ((v4 - 562) ^ (a4 - 148) ^ 0x9C26B66A))) ^ v4)))();
}

void sub_23C1C2604()
{
  int v3 = (v0 + 20) | 0xC4;
  int v4 = v1 ^ v2;
  if ((v1 ^ v2) <= 1) {
    int v4 = 1;
  }
  LODWORD(STACK[0x1184]) = v4 + v3 + 1270294533;
  JUMPOUT(0x23C1C2634);
}

uint64_t sub_23C1C2694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((501
                                * ((*(char *)(*(void *)(v6 + 4112)
                                                          + ((v3
                                                            - 2 * (((v5 - 272) ^ 0x5D9357F8) & v4 ^ v3 & 2)
                                                            - 970654384) ^ 0x5D935304u))
                                                - 48) < 0xA)) ^ (v5 - 272))))();
}

uint64_t sub_23C1C2734(uint64_t a1, int a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((996
                                * ((((a2 + v5 - 874) ^ ((*(char *)(*(void *)(v6 + 4112)
                                                                               + (v4 ^ (v3 + 1)))
                                                                     - 48) < 0xA)) & 1) == 0)) ^ (a2 + v5 - 1039))))();
}

uint64_t sub_23C1C34CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((25
                                * (((v4 + 115) ^ ((((v4 - 1745933129) ^ 0x4D) & 0xEFu) > (v3 - 65))) & 1)) ^ v4)))();
}

uint64_t sub_23C1C352C@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  unsigned int v7 = (v6 + 1856478404) & 0xBFED3D6F;
  int v8 = v3 + v4;
  if ((((v6 - 60) & 0x6F ^ 0xD4) + v5) >= 6u) {
    int v9 = 1553978978;
  }
  else {
    int v9 = v8;
  }
  int v10 = (v7 + 412321827) & 0x50FF4BDB;
  BOOL v12 = a3 + 22133863 >= 0 || v9 + 593504669 > (int)(v10 ^ 0xFFFFFEB5);
  int32x4_t v13 = *(uint64_t (**)(void))(a2 + 8 * (int)((43 * v12) ^ (a1 + v7 - 764)));
  LODWORD(STACK[0x638]) = v10;
  return v13();
}

void sub_23C1C35FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  (*(void (**)(unint64_t))(a3 + 8 * (v4 ^ (a4 - 496))))(STACK[0x15B0]);
  JUMPOUT(0x23C1C368CLL);
}

uint64_t sub_23C1C3760(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t))(a3
                                            + 8
                                            * ((62 * ((((a2 + ((v4 + 385) ^ (a4 + 593)) - 1208) ^ 1) & 1) == 0)) ^ (v4 + 385))))(2402346163);
}

uint64_t sub_23C1C38B4(uint64_t a1, int a2, uint64_t a3)
{
  *(void *)(v7 + 16) = 0xAA011AB53309AA6ALL;
  LODWORD(STACK[0x374]) = *(_DWORD *)(v4 + 2520) - 452853308;
  uint64_t v9 = *(unsigned int *)(v6 + 2544);
  v5[12] = *(void *)(a3 + 8 * (v3 + 1771230073));
  v5[14] = v9;
  LODWORD(STACK[0x460]) = v3 + 235176829;
  LODWORD(STACK[0x470]) = v3 + 235176812;
  v5[17] = 1516397565;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = v3 + 235176737;
  *(_DWORD *)(v8 - 192) = 1431737413 * ((~((v8 - 200) | 0x2B3CC358) + ((v8 - 200) & 0x2B3CC358)) ^ 0x6A9DA3B5)
                        + 40706419
                        + v3;
  *(void *)(v7 + 448) = &STACK[0x458];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v3 + a2)))(v8 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v8 - 188)))(v10);
}

uint64_t sub_23C1C39BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v45 = v42 + v43;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8 * (v45 + 24)))(a42, 3312658705);
  int v46 = (*(&off_26EFDBE20 + v45 + 32))();
  unsigned int v47 = v46 - 2087771140 - ((v46 << (v45 - 13)) & 0x71E47F8);
  LODWORD(xmmword_268B98018) = v47;
  unsigned int v48 = v47 ^ 0xFB5D6FD2 ^ ((((v45 - 675) ^ 0xA2C1BD66) - 703558113) | (v47 >> 30));
  *(_DWORD *)(v44 + 4) = ((1812433253 * v48) ^ 0xE29EFFF5)
                       + ((-670100790 * v48) & 0xC53DFFEA)
                       - 1594874872
                       - ((2 * (((1812433253 * v48) ^ 0xE29EFFF5) + ((-670100790 * v48) & 0xC53DFFEA)) - 222167016) & 0x71E47F8);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + v45 - 675))(1982538254);
}

void sub_23C1C3B10()
{
}

void sub_23C1C3B30()
{
}

uint64_t sub_23C1C3CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v11 = v10 + 4 * (a5 + v8);
  unsigned int v12 = ~v7 & 0x80000000;
  int v13 = *(_DWORD *)(v11 + 592);
  int v14 = (v13 & 0x7FFFFFFE ^ 0x27D0CF16 | 0x88A8436A) - (v13 & 0x7FFFFFFE ^ 0x27D0CF16 | v9) + v9;
  *(_DWORD *)(v10 + 4 * ((v6 ^ 0x416u ^ a5) + v8)) = *(_DWORD *)(v11 + 2176) ^ *((_DWORD *)&STACK[0x2118] + (v13 & 1)) ^ (((v14 ^ 0xACF7AF80 | v12) - 2 * ((v14 ^ 0xACF7AF80) & 0x640AF78B ^ v14 & 8) - 469043325) >> 1) ^ 0x410CD1AB;
  return (*(uint64_t (**)(void))(a3 + 8 * ((7 * (v8 + 1 != a6 + 3)) ^ v6)))();
}

uint64_t sub_23C1C3D9C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  char v5 = (const float *)&dword_268B983A4;
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v5);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  int32x4_t v8 = vdupq_n_s32(0xB1AA59F8);
  v9.i64[0] = 0x900000009;
  v9.i64[1] = 0x900000009;
  v4.i64[0] = *(void *)&dword_268B983A8;
  v4.i32[2] = dword_268B983B0;
  int8x16_t v10 = vextq_s8(v6, v4, 0xCuLL);
  int8x16_t v11 = v4;
  v11.i32[3] = *(_DWORD *)(v3 + 4 * (((a2 + 737) | 0x6Cu) - 773));
  int8x16_t v12 = veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x68492302u));
  int32x4_t v13 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v12, (int8x16_t)vdupq_n_s32(0x4E55A607u)), (int32x4_t)vorrq_s8(v12, (int8x16_t)v8)), v8), (int8x16_t)vdupq_n_s32(0x6D1A658u));
  int8x16_t v14 = (int8x16_t)vaddq_s32(vsubq_s32(v13, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0xD73BC262))), vdupq_n_s32(0xEB9DE131));
  int8x16_t v15 = veorq_s8(v14, (int8x16_t)vdupq_n_s32(0xC8DFE190));
  int32x4_t v16 = (int32x4_t)veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x11344629u)), vandq_s8(v14, v9));
  int8x16_t v17 = (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v15, vbicq_s8(v7, v10)), vaddq_s32(v16, v16)), vdupq_n_s32(0x11344620u)), 1uLL);
  v15.i32[0] = *(_DWORD *)(v2 + 4 * (dword_268B983A8 & 1));
  v15.i32[1] = *(_DWORD *)(v2 + 4 * (unk_268B983AC & 1));
  v15.i32[2] = *(_DWORD *)(v2 + 4 * (dword_268B983B0 & 1));
  v15.i32[3] = *(_DWORD *)(v2 + 4 * (v11.i8[12] & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v15), (int8x16_t)vdupq_n_s32(0x3B93897Au)), v17);
  return (*(uint64_t (**)(void))(a1 + 8 * a2))();
}

void sub_23C1C3F20()
{
}

uint64_t sub_23C1C3F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = (((v3 - 1099060209) & 0xD7EF7D4F ^ 0x21BEF5B0)
      - (*v4 & 0x7FFFFFFE ^ 0xD8F2C7B1)
      + ((2 * (*v4 & 0x7FFFFFFE ^ 0xD8F2C7B1)) | 0x90584E0A)) ^ 0x819F4D0C;
  int v6 = (((2 * v5) & 0x1E735620) - v5 + 1892046063) ^ 0x6208DAAB;
  v4[623] = v4[396] ^ *((_DWORD *)&STACK[0x2118] + (*v4 & 1)) ^ (((v6 | ~v4[623] & 0x80000000)
                                                                  - ((2 * v6) & 0x5F17D3DA)
                                                                  + 797698541) >> 1) ^ 0x24CC5E9C;
  return (*(uint64_t (**)(void))(a3 + 8 * ((2025 * (LODWORD(STACK[0x374]) < 0x270)) ^ v3)))();
}

uint64_t sub_23C1C4028@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W8>)
{
  int v8 = LODWORD(STACK[0x374])++;
  *(_DWORD *)(v3 + 2520) = v8 + 452853309;
  uint64_t v9 = (*(_DWORD *)(v5 + 2544) - 1407070109);
  v4[12] = *(void *)(a1 + 8 * (a3 + 1771230078));
  v4[14] = 109327456;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = a3 - 909446383;
  LODWORD(STACK[0x474]) = a3 - 909446366;
  LODWORD(STACK[0x478]) = (a3 - 909446366) ^ 0x9A;
  v4[17] = v9;
  *(_DWORD *)(v7 - 192) = 1431737413 * ((((v7 - 200) | 0x7B478A72) - ((v7 - 200) & 0x7B478A72)) ^ 0xC5191560)
                        + 40706419
                        + a3;
  *(void *)(v6 + 448) = &STACK[0x458];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a3 ^ (a2 - 518))))(v7 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v7 - 188)))(v10);
}

uint64_t sub_23C1C42C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  if (v46 >= v47) {
    int v49 = *(_DWORD *)(v48 + 2544) + 1;
  }
  else {
    int v49 = 1516397565;
  }
  *(_DWORD *)(v48 + 2544) = v49;
  int v50 = v45 ^ (v45 >> 11);
  unsigned int v51 = (((v50 << 7) ^ 0xCFA90C00) - ((2 * ((v50 << 7) ^ 0xCFA90C00)) & 0x27BEBC00) - 1814077854) & 0x9D2C5680 ^ 0x4204200;
  unsigned int v52 = (v51 - ((2 * v51) & 0x8400900) - 2039348001) & 0xFFFFFF80 ^ v50;
  unsigned int v53 = (((v52 << 15) ^ 0xA14C0000) - ((2 * ((v52 << 15) ^ 0xA14C0000)) & 0x54980000) - 1437830809) & 0xEFC60000 ^ 0xE6440000;
  unsigned int v54 = (-133584652 - (v53 | 0xF809A8F4) + (v53 | 0x7F6570B)) ^ v52;
  *(unsigned char *)(a43 + (a45 - 1187380549)) = ((v54 ^ (v54 >> 18) ^ 0x5E)
                                                      - ((2 * (v54 ^ (v54 >> 18) ^ 0x5E)) & 0x42)
                                                      + 33) ^ 0xB2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3
                                                     + 8
                                                     * ((38
                                                       * (a45
                                                        - (((v54 ^ (v54 >> 18) ^ 0x5E)
                                                                           - ((2 * (v54 ^ (v54 >> 18) ^ 0x5E)) & 0x42)
                                                                           + 33) != 0xB2) == 1187380548)) ^ 0x156)))(2402346163, 1771231427);
}

void sub_23C1C4420(char a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v5 = STACK[0x638];
  LODWORD(STACK[0x63C]) = STACK[0x638];
  LODWORD(STACK[0x640]) = (v5 + 270860286) | 0x86482C03;
  LODWORD(STACK[0x644]) = v5 + 394;
  int v6 = (16 * a3 - (((a3 << (a1 + ((v5 - 2) | 3) - 9)) + 708283616) & 0x7FFE53A0) + 1427828804) ^ (v5 + 1073686666) | (v3 - 1553978979);
  unint64_t v7 = STACK[0x15B0] + (LODWORD(STACK[0x13BC]) - 1270295258);
  unsigned int v8 = 1394700225 * ((v7 ^ *(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28))) & 0x7FFFFFFF);
  unint64_t v9 = 1394700225 * (v8 ^ HIWORD(v8));
  LOBYTE(STACK[0x4AB]) = byte_23C2111C0[v9 >> 24] ^ byte_23C217710[v9 >> 24] ^ byte_23C213330[(v9 >> 24) + 1] ^ v9 ^ (5 * BYTE3(v9)) ^ 0xF5 ^ (v6 - ((2 * v6) & 0xEA) - 11);
  *(void *)(v4 + 160) = *(void *)(a2 + 8 * (v5 + 1115));
  *(void *)(v4 + 168) = v7;
  JUMPOUT(0x23C1AC3F0);
}

uint64_t sub_23C1C4570(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((((v1 + 173) ^ 0x24F ^ (a1 == 0)) & 1) == 0) * (v1 + 73)) ^ (v1 + 173))))();
}

uint64_t sub_23C1C45C0()
{
  int v4 = v0 + v2 - 738;
  uint64_t v5 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 814)))();
  STACK[0x250] = STACK[0x1728];
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((7 * (v2 ^ 0x2DB)) ^ (v4 + 1771230291)) * (v1 ^ 1)) | v2)))(v5);
}

uint64_t sub_23C1C462C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 - 1318) | 0x480) - 741) ^ 0x1A9) * (LODWORD(STACK[0x115C]) != 50513642)) ^ v0)))();
}

uint64_t sub_23C1C466C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (LODWORD(STACK[0x12E4]) == 2010615628) {
    int v65 = 1442125886;
  }
  else {
    int v65 = LODWORD(STACK[0x12E0]) - 703239051;
  }
  LODWORD(STACK[0x324]) = v65;
  uint64_t v66 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v64 + 8 * (v63 + 410)))(v65 + (((v63 ^ 0xC4) + 243) ^ 0xAA0AE280), 50, 4111930045);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((116 * (v66 == 0)) | v63)))(v66, v67, v68, v69, v70, v71, v72, v73, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           v66 + 0x494B3BC83CF4FA61,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_23C1C472C()
{
}

uint64_t sub_23C1C474C@<X0>(int a1@<W8>)
{
  int v2 = a1 - 1645918360;
  unsigned int v3 = (v2 + 1827663601) & 0xF52ACCEC;
  uint64_t v4 = (*(uint64_t (**)(unint64_t))(v1 + 8 * (int)(v2 ^ 0x9DE54F1E)))(STACK[0x210] - 0xE550F9B8A5EBC69);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((((v3 ^ 0xE3 ^ (STACK[0x280] == 0x494B3BC83CF4FA61)) & 1)
                                                   * ((v3 - 1794590018) & 0x6AF743DD ^ 0x39F)) ^ v3)))(v4);
}

uint64_t sub_23C1C477C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v3
                                                    + 8
                                                    * ((213
                                                      * (((((v2 + (a2 ^ v2) + 1) & 1) == 0) | 0xEF3F5E9A)
                                                       - (~(v2 + (a2 ^ v2) + 1) & 2 | 0x10C0A165) == -562119372)) ^ v4)))(a1, v2 + (a2 ^ v2) + 1 - (((((v4 + 275) | 0x14) ^ 0x39C) + 2 * (a2 ^ v2)) & 0x3D7AE0F0u));
}

uint64_t sub_23C1C4860(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v46 = v41 ^ 0x18C88750;
  unsigned int v47 = (((v45 ^ 0x966D2ED5) + 1376745589) ^ 0x5A26BB4F) * (v41 ^ 0x18C88750)
      - ((1689533726 * (v41 ^ 0x18C88750)) & 0x840572B6)
      + 1107474779;
  int v48 = a2 ^ v39;
  unsigned int v49 = -935931213 * v48 - ((275621222 * v48) & 0x26554BAE) + 321562071;
  unsigned int v50 = -631873536 * v48 - ((-1263747072 * v48) & 0xB5B54000) - 623205753;
  int v51 = 1137827840 * v46 - ((128172032 * v46) & 0x4B800000) - 1514141239;
  unsigned int v52 = ((v47 >> 18) & 0x25CC ^ 0x80) + ((v47 >> 19) & 0x17EE ^ 0xBE7CBAB6);
  int v53 = ((2 * (v51 & 0x29044000 ^ 0x21004000)) | 0x27E5372C) - (v51 & 0x29044000 ^ 0x21004000) - 334666646;
  unsigned int v54 = (v53 & 0xF259C010 ^ 0xF0016079 | v53 & 0x9A61B86) - 1;
  unsigned int v55 = ((-1781095162 * (v42 ^ 0xF712038) - ((732776972 * (v42 ^ 0xF712038)) & 0x73ABA668) + 970314549) ^ 0x39D5D335) & 0xFFFFFFFE | ((1256936067 * (v42 ^ 0xF712038) - ((366388486 * (v42 ^ 0xF712038)) & 0x58AAF60Au) + 743799557) >> 31);
  unsigned int v56 = ((2 * v55) & 0xE7BFFD7E) + (v55 ^ 0x73DFFEBF);
  unsigned int v57 = (v52 + 1099121930) | v54 ^ 0xE3F3BBEE;
  unsigned int v58 = v57 ^ 0xE2514040;
  int v59 = (2 * v57) & 0x3B5D7F7E;
  unsigned int v60 = ((-1036492576 * v44 - ((-2072985152 * v44 + 1248010688) & 0xA97AE0C0) + 2045706565) ^ 0xD4BD7065) & 0xFFFFFFE0 | ((-300825849 * v44 - ((472090126 * v44 + 441653518) & 0x1BD61282u) + 1796511176) >> 27);
  unsigned int v61 = ((2 * v60) & 0x8FFBDFBE ^ 0x22) + (v60 ^ 0xC7FDEFCE);
  unsigned int v62 = (v50 ^ 0xDADAA287) & 0xFFFFE000 | (v49 >> 19);
  int v63 = -639062627 * v56 - ((869358394 * v56 + 415458234) & 0x2A33EC00) - 511989795;
  unsigned int v64 = (v54 ^ ((v54 ^ 0x1C0C4411) - ((2 * (v54 ^ 0x1C0C4411) + 2) & 0x38A2D82) - 2117790014) ^ 0xBD6C55D1 ^ (v52 + v58 - v59 + 1 - ((2 * (v52 + v58 - v59 + 1) - 1100740206) & 0xBEB5F1FC) + 1049427399))
      + v52
      + 1099121930;
  unsigned int v65 = ((2005 - ((v47 >> 19) & 0x811 ^ 0x810)) & 0x877 | ((v51 & 0xD6FBA000 ^ 0xC940002)
                                                         + (v51 & 0x96D30000 ^ 0x92430568)
                                                         - ((v51 & 0xD6FBA000 ^ 0xC940002) & 0x96D30000)) ^ 0x1E87056A) ^ 0x45;
  unsigned int v66 = -1382219776 * v56 - ((1530527744 * v56 + 1673134080) & 0xCB860000) - 1751100080;
  unsigned int v67 = ((v64 ^ 0xF3BBFFF7) + 205783049 + ((2 * v64) & 0xE777FFEE)) | (v65 - ((2 * v65) & 0x5B6E2B62) + 766973361) ^ 0x2DB715B1;
  unsigned int v68 = v67 - ((2 * v67) & 0xC126200C) - 527233018;
  unsigned int v69 = (v62 ^ 0xFCFEBFBB) - (v61 + v56) - 2119370355 + ((2 * v62) & 0xF9FD7BBC ^ 0x88);
  unsigned int v70 = (v69 - ((2 * v69 + 2053402214) & 0x8E36BAFA) - 2075290448) ^ 0x27884D7B ^ v68;
  unsigned int v71 = ((848068608 * v70 - ((1696137216 * v70) & 0x478A0000) + 600138799) ^ 0x23C5642F) & 0xFFFF8000 | ((2027185433 * v70 - ((1906887218 * v70) & 0x7F5ED798) - 1079022644) >> 17);
  unsigned int v72 = ((2 * v71) & 0xFB3E76AE ^ 0x36AE) + (v71 ^ 0x7D9F6480);
  unsigned int v73 = ((2 * ((v66 ^ 0xE5C35550) & 0xFFFF0000 | HIWORD(v63))) & 0xFDE7FDF8 ^ 0x2830)
      + (((v66 ^ 0xE5C35550) & 0xFFFF0000 | HIWORD(v63)) ^ 0x7EF3EBE5);
  unsigned int v74 = ((-67108864 * (v67 & 1) - 637534208 * (v68 ^ 0xE0931006) - 2088503199) ^ 0x8383F861) & 0xFE000000 | ((334163693 * (v68 ^ 0xE0931006) - ((131456474 * (v68 ^ 0xE0931006)) & 0xB5E16A6) - 2052125869) >> 7);
  unsigned int v75 = ((2 * v74) & 0xF593FF9E ^ 0x12BC0C) + (v74 ^ 0xFBC2A1D9);
  unsigned int v76 = ((1169031168 * v61 - ((-1956904960 * v61 - 1227096064) & 0xC8280000) - 1081932993) ^ 0xE415033F) & 0xFFFE0000 | ((-1429003561 * v61 - ((1436960174 * v61 + 170253166) & 0x9FF42ED6) - 720567006) >> 15);
  unsigned int v77 = 1256955867 * v75 - ((-1781055562 * v75 - 1399377450) & 0xEE27B850) - 849382125;
  unsigned int v78 = v73 + (v76 ^ 0x1E7F615C) + ((2 * v76) & 0x3CFFFD50 ^ 0x13D40) + v75 + v72;
  HIDWORD(v79) = v78 - 1741753510;
  LODWORD(v79) = (1790310283 * (v78 - 1741753511)
                - ((1433136918 * (v78 - 1741753511) + 471762942) & 0x55969CDC)
                - 1193635219) ^ 0xAACB4E6E;
  int v80 = ((2 * (v79 >> 1)) & 0x77BBFFBA) + ((v79 >> 1) ^ 0xBBDDFFDD);
  unsigned int v81 = -671088640 * v75 - ((-1342177280 * v75 - 1342177280) & 0xE0000000) + 1208790956;
  char v82 = ((v80 + 3) & v40) - ((2 * (v80 + 3)) & 8) - 18;
  unsigned int v83 = ((1008180224 * v72 - ((2016360448 * v72 + 2114713600) & 0x952EA000) - 1986179486) ^ 0x4A975262) & 0xFFFFFC00 | (((~(-2120348722 * v72 - 1684045058) | 0x420FF2F5) + 1087309287 * v72 + 751290373) >> 22);
  unsigned int v84 = ((2 * v83) & 0x87DF77FC ^ 0x2F4) + (v83 ^ 0xC3EFBA85);
  int v85 = -1382721235 * v73 - ((1529524826 * v73 + 1301619560) & 0x61264742) - 681724587;
  unsigned int v86 = ((((v85 ^ 0xB09323A1) >> (v82 ^ 0xEE)) - ((2 * ((v85 ^ 0xB09323A1) >> (v82 ^ 0xEE))) & 0xD72CD7EE) - 342463497) ^ 0xEB966BF7) >> (v82 ^ 0xFA);
  unsigned int v87 = 1435684864 * v73 - v84 - v80 + (v86 ^ 0x6FDFDFFD) + ((2 * v86) & 0xDFBFBFFA) + 1637247300;
  unsigned int v88 = v87 - ((2 * v87 - 1360698060) & 0xAEA75866) + 784752333;
  unsigned int v89 = ((v81 ^ 0xF00CAFAC) & 0xF8000000 | (v77 >> 5)) ^ 0x3B89EE1;
  unsigned int v90 = v89 - ((2 * v89) & 0x8117F9AC) + 1082916054;
  unsigned int v91 = -2011374097 * v84 - ((272219102 * v84 + 1010462652) & 0xBE4A220E) + 2101496037;
  unsigned int v92 = 2126547813 * (v90 ^ 0x408BFCD6) - ((1031870154 * (v90 ^ 0x408BFCD6)) & 0x2489A63C) + 306500382;
  int v93 = ((((((~(-2120348722 * v72 - 1684045058) | 0x420FF2F5) + 1087309287 * v72 + 751290373) >> 22) ^ 0x85) & 1) << 29)
      + (v84 << 28);
  unsigned int v94 = -1421997755 * v80 - ((1450971786 * v80 - 246773538) & 0x85C3A80E) + 998709366;
  unsigned int v95 = 2 * (((v88 ^ 0xD753AC33) & (v90 ^ 0x408BFCD6)) - ((2 * ((v88 ^ 0xD753AC33) & (v90 ^ 0x408BFCD6))) & 0x358B58B6))
      - 1249158986;
  unsigned int v96 = (v90 ^ 0x97D850E5 ^ v88) + (v95 ^ 0x7A61B74D) + 806686725 + ((2 * v95) & 0x9FD5DFF4 ^ 0xB149164);
  unsigned int v97 = ((2 * v96) & 0xCFFBDCF4) + (v96 ^ 0xE7FDEE7A);
  char v98 = ((2 * (v94 & 0x19 ^ 1)) | 0x2C) - (v94 & 0x19 ^ 1) + 106;
  int v99 = -1627086208 * v80 - ((1040794880 * v80 + 625241856) & 0x5A1E3400) + 2142327197;
  unsigned int v100 = ((2 * ((v93 ^ 0xE0000000) & 0xF0000000 | (v91 >> 4))) & 0xCFDDEFDE ^ 0xBC4A200)
       + (((v93 ^ 0xE0000000) & 0xF0000000 | (v91 >> 4)) ^ 0xEA1CA6FF);
  int v101 = -669946720 * (v90 ^ 0x408BFCD6) - ((807590208 * (v90 ^ 0x408BFCD6)) & 0x55C02800) + 719328284;
  unsigned int v102 = ((((v94 ^ 0x42E1D407) >> (v98 ^ 0x96)) - ((2 * ((v94 ^ 0x42E1D407) >> (v98 ^ 0x96))) & 0xF52B1C02) - 90862079) ^ 0xFA958E01) >> (v98 ^ 0x8F);
  int v103 = (((v102 - 1393677664 - ((2 * v102) & 0x40)) & 0xD2 ^ 0x8393) + ((v102 - 1393677664) & 0x2D) - 1) ^ 0x8332 | v99 ^ 0x2D0F1A1D;
  unsigned int v104 = v103 - ((2 * v103) & 0xBCE95680) + 1584704320;
  unsigned int v105 = (((671088640 * v97 - 335512000) ^ 0xFC007E40) & 0xF8000000 | ((-872031717 * v97
                                                                      - ((-1744063434 * v97 - 712775100) & 0xA11CA6BE)
                                                                      - 1152366463) >> 5)) ^ 0x284729A;
  unsigned int v106 = v105
       - 2
       * (v105 & 0x135E74EC ^ ((-872031717 * v97 - ((-1744063434 * v97 - 712775100) & 0xA11CA6BE) - 1152366463) >> 5) & 4)
       + 324957416;
  unsigned int v107 = ((v100 + 335945709 + (v104 ^ 0x5E74AB40)) ^ 0x7BBE37A7)
       + ((2 * (v100 + 335945709 + (v104 ^ 0x5E74AB40))) & 0xF77C6F4E)
       - 2076063655
       + (v106 ^ 0x135E74E8);
  unsigned int v108 = (((v101 ^ 0x2AE0141C) & 0xFFFFFFE0 | (v92 >> 27)) ^ 0xDEDE36F9)
       + ((2 * ((v101 ^ 0x2AE0141C) & 0xFFFFFFE0 | (v92 >> 27))) & 0xBDBC6DF6 ^ 4)
       + v100
       + (((v106 ^ 0x135E74E8) + (v104 ^ 0x5E74AB40)) ^ 0x74412283)
       - ((2 * ((v106 ^ 0x135E74E8) + (v104 ^ 0x5E74AB40))) & 0x177DBAF8)
       + 1;
  int v109 = v108 - ((2 * v108 + 165895460) & 0x1B84D7D0) + 1387534970;
  unsigned int v110 = v109 ^ (v107 - ((2 * v107) & 0x8AF42A1C) + 1165628686);
  unsigned int v111 = v110 ^ 0xDD69583E;
  unsigned int v112 = v110 ^ 0x9DF8FEBD;
  unsigned int v113 = 2
       * (((v110 ^ 0x9DF8FEBD) & (v104 ^ 0x5E74AB40)) - ((2 * ((v110 ^ 0x9DF8FEBD) & (v104 ^ 0x5E74AB40))) & 0x69B0CC62))
       - 374289310;
  unsigned int v114 = (v104 ^ 0xC38C55FD ^ v110) + (v113 ^ 0xA65F778A) - 1341111272 + ((2 * v113) & 0x9FDF77D0 ^ 0x934110C0);
  LODWORD(a24) = v110;
  HIDWORD(v421) = v114 - ((2 * v114) & 0x97E991A) - 2067837811;
  LODWORD(a23) = (v109 ^ 0x8DC26BE8)
               + (v110 ^ 0x62070142)
               + 1
               - ((2 * ((v109 ^ 0x8DC26BE8) + (v110 ^ 0x62070142) + 1)) & 0x6AAB0B6E)
               + 894797239;
  unsigned int v422 = v106 ^ v110 ^ 0xDD69583E;
  unsigned int v115 = -879604157 * (v422 ^ 0x53CFD26B) - ((-1759208314 * (v422 ^ 0x53CFD26B)) & 0xB2805A96) + 1497378123;
  unsigned int v116 = -1220666851 * v112 - ((1853633594 * v112) & 0x810E1E02) - 1064890623;
  int v117 = 2083797504 * v112 - ((409498624 * v112) & 0x1CD16400) + 241742487;
  int v118 = 1313013760 * (v422 ^ 0x53CFD26B) - ((8781824 * (v422 ^ 0x53CFD26B)) & 0xC60000) - 2140979931;
  unsigned int v119 = ((1586364416 * (HIDWORD(v421) ^ 0x84BF4C8D)
         - ((-1122238464 * (HIDWORD(v421) ^ 0x84BF4C8D)) & 0x83380000)
         + 1100837057) ^ 0x419D70C1) & 0xFFFE0000 | ((-1620594873 * (HIDWORD(v421) ^ 0x84BF4C8D)
                                                    - ((1053777550 * (HIDWORD(v421) ^ 0x84BF4C8D)) & 0xF8DEBDB0)
                                                    - 59810088) >> 15);
  unsigned int v120 = ((2 * v119) & 0xF6BCCF74 ^ 0xC134) + (v119 ^ 0x7B5F9F64);
  int v121 = ((-1879048192 * (a23 ^ 0x355585B7) - ((a23 ^ 0x355585B7) >> 1 << 30) + 1803428335) ^ 0x6B7E21EF | ((161990985 * (a23 ^ 0x355585B7) - ((323981970 * (a23 ^ 0x355585B7)) & 0xF110C91E) - 125279089) >> 4)) ^ 0xF888648;
  int v122 = v121 - ((2 * v121) & 0x12ACA8A8) + 156652628;
  unsigned int v123 = (((v117 ^ 0xE68B297) & 0xFFFFFE00 | (v116 >> 23)) ^ 0xBFEEEE4C)
       + ((2 * ((v117 ^ 0xE68B297) & 0xFFFFFE00 | (v116 >> 23))) & 0x7FDDDF9A ^ 0x303)
       - v120
       + 1;
  unsigned int v124 = v123 - ((2 * v123 + 1994321878) & 0xF9C6EC9E) - 1202524614;
  int v125 = v122 ^ 0x9565454;
  unsigned int v126 = 2
       * (((v124 ^ 0xFCE3764F) & (v122 ^ 0x9565454)) - ((2 * ((v124 ^ 0xFCE3764F) & (v122 ^ 0x9565454))) & 0x20E68C8A))
       - 1595503478;
  unsigned int v127 = ((2 * ((v118 ^ 0x80633D25) & 0xFFFF0000 | HIWORD(v115))) & 0xDDFB7FDC ^ 0x3280)
       + (((v118 ^ 0x80633D25) & 0xFFFF0000 | HIWORD(v115)) ^ 0x6EFDE6AE);
  unsigned int v128 = 105412641 * (v122 ^ 0x9565454) - ((210825282 * (v122 ^ 0x9565454)) & 0x53EF1C8A) + 704089669;
  unsigned int v129 = (v122 ^ 0xF5B5221B ^ v124) + (v126 ^ 0x4D513B71) + 306726917 + ((2 * v126) & 0xDB6F6FF4 ^ 0x414D0914);
  unsigned int v130 = v127 + (v129 ^ 0x7FEBFCF3) + ((2 * v129) & 0xFFD7F9E6) - 1425739679;
  unsigned int v131 = (((-1452699648 * v120 - ((1389568000 * v120 + 549109760) & 0xF4D5E000) - 1966580438) ^ 0xFA6AFD2A) & 0xFFFFF000 | ((1148884633 * v120 - ((150285618 * v120 + 173149100) & 0xB1EEF34) - 1564967568) >> 20)) ^ 0x858;
  int v132 = v131 - ((2 * v131) & 0x30959DEC) - 1739927818;
  unsigned int v133 = (((-1843525568 * v125 - ((71045248 * v125) & 0xE899500) - 2025534840) ^ 0x8744CA88) & 0xFFFFFFC0 | (v128 >> 26)) ^ 0xA;
  int v134 = v133 - ((2 * v133) & 0x1B2DEC5E) - 1919486417;
  unsigned int v135 = ((1437219328 * v130 - ((726955008 * v130 + 1775638528) & 0x67C6F800) - 1462859738) ^ 0xB3E37C26) & 0xFFFFFE00 | ((-1851075299 * v130 - ((55945786 * v130 + 66382604) & 0xEA80F76) - 1857127103) >> 23);
  unsigned int v136 = ((2 * v135) & 0x21F75DFA ^ 0x18) + (v135 ^ 0x90FBAEF3);
  unsigned int v137 = ((1999542912 * v127 - ((-295881472 * v127 + 2043525632) & 0xF7EEF300) - 1193388388) ^ 0xFBF7799C) & 0xFFFFFF80 | ((-387031755 * v127 - ((-774063510 * v127 + 1861458804) & 0xBF28185C) - 1760699928) >> 25);
  unsigned int v138 = ((2 * v137) & 0xBBFEFFB8 ^ 0x98) + (v137 ^ 0xDDFF7FB3);
  unsigned int v139 = v134 ^ 0x8D96F62F;
  unsigned int v140 = 2
       * (((v132 ^ 0x984ACEF6) & (v134 ^ 0x8D96F62F)) - ((2 * ((v132 ^ 0x984ACEF6) & (v134 ^ 0x8D96F62F))) & 0xA835738))
       + 176379704;
  unsigned int v141 = (v134 ^ 0x15DC38D9 ^ v132) + (v140 ^ 0x7458AC9F) - 2128346023 + ((2 * v140) & 0xFDB7F74C ^ 0x1506A640);
  unsigned int v142 = (v141 ^ 0x6FF3FEF3) - v138 + ((2 * v141) & 0xDFE7FDE6) + v136;
  unsigned int v143 = (-1937194716 * v138
        - 2 * ((-1937194716 * v138 + 734865680) & 0x21CA734C ^ (-1937194716 * v138) & 8)
        - 1919443881) ^ 0xA1CA7347 | ((1663184969 * v138 - ((-968597358 * v138 + 1978045576) & 0xE7CEC5B0) + 786083100) >> 30) ^ 1;
  int v144 = v143 ^ 0x7CD8B6E9;
  unsigned int v145 = (2 * v143) & 0xF9B16DD2;
  unsigned int v146 = ((642589056 * v136 - ((1285178112 * v136 - 1056847616) & 0xB15A2400) + 959313541) ^ 0x58AD1205) & 0xFFFFFF80 | ((-296969661 * v136 - ((1553544326 * v136 + 2072118162) & 0x65D6F150) - 1330873743) >> 25);
  unsigned int v147 = ((2 * v146) & 0xEFB96B7E ^ 0x32) + (v146 ^ 0xF7DCB5A6);
  unsigned int v148 = -1086811273 * v147 - ((242296558 * v147 + 42315374) & 0xA0F050E) - 833988162;
  unsigned int v149 = ((-1023942422 * v139 - ((99598804 * v139) & 0x945DF34) - 2069696613) ^ 0x84A2EF9B) & 0xFFFFFFFE | ((-511971211 * v139 - ((-1023942422 * v139) & 0xB2017C8C) + 1493220934) >> 31);
  unsigned int v150 = ((2 * v149) & 0x7EFD376A) + (v149 ^ 0xBF7E9BB5);
  unsigned int v151 = ((1064435712 * v142 - ((2128871424 * v142 + 506462208) & 0x6D280000) + 1168933960) ^ 0xB6948448) & 0xFFFE0000 | ((401186745 * (v142 - 49775593) - ((802373490 * (v142 - 49775593) + 1794286554) & 0x7636E22C) + 1888797443) >> 15);
  unsigned int v152 = ((2 * v151) & 0xFFFFF7FC ^ 0x2E46C) + (v151 ^ 0x7FFE8DC8);
  int v153 = v144 + v145 + v150 - v147 - v152 - 2023998817;
  unsigned int v154 = (-240767569 * v152 - ((-481535138 * v152 - 133812548) & 0xCB793CF6) - 507529767) >> 25;
  unsigned int v155 = -574619648 * v147 - ((-1149239296 * v147 - 1686110208) & 0xF1000000) - 964908648;
  unsigned int v156 = (-753477760 * v152 - ((103657216 * v152 + 51863040) & 0x128D2600)) & 0xFFFFFF80 | v154;
  unsigned int v157 = (((2048228480 * v153 - ((875231488 * v153 + 25198592) & 0x27684200) - 1804312244) ^ 0x93B4214C) & 0xFFFFFF80 | ((-889967879 * v153 - 2 * ((-889967879 * v153 + 1174503552) & 0x4EB2E897 ^ (-889967879 * v153) & 6u) + 347367697) >> 25)) ^ 0x27;
  unsigned int v158 = v157 - ((2 * v157) & 0xD32029A6) + 1771050195;
  unsigned int v159 = v148 >> 10;
  unsigned int v160 = (((110055424 * v150 - ((220110848 * v150 + 1853415424) & 0xB9F08000) - 1808483409) ^ 0x5CF84BAF) & 0xFFFFF000 | ((934308085 * v150 - ((1868616170 * v150 - 1169758322) & 0xE32C972A) + 1320795996) >> 20)) ^ 0xF19;
  unsigned int v161 = ((v155 ^ 0xF8BCA998) & 0xFFC00000 | (v148 >> 10)) ^ 0x141E0;
  int v162 = v161 - 2 * (v161 & 0x28451F5B ^ v159 & 2) + 675618649;
  int v163 = ((v156 + 181551616) ^ 0x9469372) - 2 * (((v156 + 181551616) ^ 0x9469372) & 0x26293C1F ^ v154 & 9) - 1507247082;
  unsigned int v164 = v163 ^ 0xA6293C16;
  unsigned int v165 = ((2 * (v164 + (v162 ^ 0x28451F59))) & 0x7E2FFF7E) + ((v164 + (v162 ^ 0x28451F59)) ^ 0xBF17FFBF);
  int v166 = v165 - ((2 * v165 + 5423560) & 0xD726B62) + 249730709;
  unsigned int v167 = (((2 * (v166 & 0x97915143 ^ 0x1101041)) & 0x2C022286) - (v166 & 0x97915143 ^ 0x1101041) + 702049412) ^ 0x9714BD4;
  unsigned int v168 = ((2 * v158) & 0x80DD5D78 ^ 0x8D22ABA4)
       + (v158 & 0x686EAEBC ^ 0xB96EAA2D)
       + (((v158 ^ 0x1FEBA6F) + 1) ^ 0xDF76FBFB)
       + ((2 * ((v158 ^ 0x1FEBA6F) + 1)) & 0xBEEDF7F6);
  unsigned int v169 = ((v160 - ((2 * v160) & 0xB1568444) + 1487618594) ^ v162 ^ v163 ^ 0xD6C7616D) + (v158 ^ 0x966FEB2C) + 1;
  int v170 = v169 - ((2 * v169) & 0x6E30F2) + 3610745;
  unsigned int v171 = ((v166 ^ v158) & 0x686EAEBC ^ 0x475FDFD2)
       + ((2 * (v166 ^ v158)) & 0x50CD5D60 ^ 0x50404040)
       + 570089745
       + ((v168 - ((2 * v168 + 856819726) & 0x27C7C080) - 311630777) ^ 0xC30BFF77 ^ (((2 * v167) & 0x107F8DB0)
                                                                                   - v167
                                                                                   - 138397401));
  unsigned int v172 = v170 ^ 0x42EE80E7 ^ (v171 - ((2 * v171) & 0x85B3313C) + 1121556638);
  HIDWORD(v414) = v172 - ((2 * v172 - 149138106) & 0xF2D87720) - 184916427;
  unsigned int v173 = v172 - ((2 * v172 - 149138106) & 0xF2D87720) - 184916429;
  int v174 = (v173 ^ 0x693C46F) + v164 + 1 - ((2 * ((v173 ^ 0x693C46F) + v164 + 1)) & 0x423AEB1C) + 555578766;
  unsigned int v175 = 2
       * (((v158 ^ 0x699014D3) & (v173 ^ 0xF96C3B90)) - ((2 * ((v158 ^ 0x699014D3) & (v173 ^ 0xF96C3B90))) & 0x3B8F85A6))
       + 999261606;
  unsigned int v176 = (((v158 ^ 0x699014D3) + (v173 ^ 0xF96C3B90)) ^ 0xBFBFEBF7)
       + ((2 * ((v158 ^ 0x699014D3) + (v173 ^ 0xF96C3B90))) & 0x7F7FD7EE)
       + (v175 ^ 0x33C724A7)
       + ((2 * v175) & 0xEF6EBDFC ^ 0x98F1F6B3)
       + 1;
  LODWORD(v414) = v170;
  HIDWORD(v416) = v176 - ((2 * v176 + 1877927440) & 0x976E621E) - 2085706729;
  LODWORD(v417) = v174;
  int v177 = HIDWORD(v416) ^ 0x4BB7310F;
  unsigned int v178 = -1296439527 * v177 - ((1702088242 * v177) & 0x85D8D818) + 1122790412;
  int v179 = v174 ^ 0x211D758E;
  unsigned int v180 = 544690365 * (v174 ^ 0x211D758E) - ((15638906 * (v174 ^ 0x211D758E)) & 0x453F496) + 36305483;
  HIDWORD(v419) = v170 ^ v173;
  int v181 = -2116205836 * (v174 ^ 0x211D758E);
  unsigned int v182 = (v181 - ((62555624 * v179) & 0x909B0370)) & 0xFFFFFFFC | (v180 >> 30);
  int v183 = ((v182 + 1213039032) ^ 0x484D81B8)
       - 2 * (((v182 + 1213039032) ^ 0x484D81B8) & 0x655F6E4E ^ v181 & 4)
       - 446730678;
  unsigned int v184 = (((-1342177280 * (v173 ^ 0xF96C3B90) - ((1610612736 * v173) & 0x40000000) - 1482996486) ^ 0xA79B44FA) & 0xF0000000 | ((1360347771 * (v173 ^ 0xF96C3B90) - ((573211894 * (v173 ^ 0xF96C3B90)) & 0x702C0708) + 940966788) >> 4)) ^ 0x3816038;
  unsigned int v185 = (((-1367751104 * v177 - ((485723264 * v177) & 0x3FD07800) + 535313436) ^ 0x1FE83C1C) & 0xFFFFFFC0 | (v178 >> 26)) ^ 0x10;
  int v186 = v185 - 2 * (v185 & 0x4F853FBF ^ (v178 >> 26) & 1) - 813350978;
  unsigned int v187 = ((-1325400064 * (v170 ^ v173 ^ 0xF95B23E9)
         - ((570425344 * (v170 ^ v173 ^ 0xF95B23E9)) & 0x2E000000)
         - 1749027280) ^ 0x97BFF630) & 0xFF000000 | ((-1690437711 * (v170 ^ v173 ^ 0xF95B23E9)
                                                    - ((914091874 * (v170 ^ v173 ^ 0xF95B23E9)) & 0x94C28EF6)
                                                    - 899594373) >> 8);
  unsigned int v188 = ((2 * v187) & 0xA93DFDF6 ^ 0x114C086) + (v187 ^ 0x54549FBC);
  unsigned int v189 = (((v183 ^ (v184 - ((2 * v184) & 0x6A4C018) - 2091753460)) & 0x80510800 ^ 0x875B2581)
        + ((v183 ^ (v184 - ((2 * v184) & 0x6A4C018) - 2091753460)) & 0x50045265)
        - 1) ^ 0xC75E2FC4 | (v183 ^ (v184 - ((2 * v184) & 0x6A4C018) - 2091753460)) & 0x2FAAA59A ^ 0x26080402;
  unsigned int v190 = ((2 * (v188 - 1419706107 + ((v189 - ((2 * v189) & 0xC2541E50) + 1630146344) ^ v186 ^ 0xAEAF3096))) & 0xFFF7BFE2)
       + ((v188 - 1419706107 + ((v189 - ((2 * v189) & 0xC2541E50) + 1630146344) ^ v186 ^ 0xAEAF3096)) ^ 0x7FFBDFF1);
  unsigned int v191 = (((1815720012 * v190 - ((410214552 * v190 + 490055912) & 0x2B30E418)) & 0xFFFFFFFC | ((453930003 * v190
                                                                                              - ((907860006 * v190
                                                                                                + 659384890) & 0xFA044ADC)
                                                                                              + 279501451) >> 30))
        - 466401664) ^ 0x9598720D;
  unsigned int v192 = (((-1118111680 * (v183 ^ 0xE55F6E4A) - ((2058743936 * (v183 ^ 0xE55F6E4A)) & 0xE8EC4080) - 193585040) ^ 0xF4762070) & 0xFFFFFFC0 | ((-420123679 * (v183 ^ 0xE55F6E4A) - ((-840247358 * (v183 ^ 0xE55F6E4A)) & 0xE3E3655A) - 235818323) >> 26)) ^ 0x3C;
  unsigned int v193 = v192 - ((2 * v192) & 0xD3A58EFC) + 1775421310;
  int v194 = v191 - ((2 * v191) & 0x485BD1EE) - 1540495113;
  unsigned int v195 = 1042658093 * (v194 ^ 0xA42DE8F7) - ((2085316186 * (v194 ^ 0xA42DE8F7)) & 0x7013C014) - 1207312374;
  unsigned int v196 = -860618752 * (v194 ^ 0xA42DE8F7) - ((426246144 * (v194 ^ 0xA42DE8F7)) & 0x59100000);
  unsigned int v197 = ((166454526 * (v186 ^ 0xCF853FBE) - ((332909052 * (v186 ^ 0xCF853FBE)) & 0x90A70AF0) - 934050439) ^ 0xC8538579) & 0xFFFFFFFE | ((((166454526 * (v186 ^ 0xCF853FBE)) & 0x43F352C0) + 2064256385 * (v186 ^ 0xCF853FBE) + 1577473695) >> 31);
  unsigned int v198 = ((2 * v197) & 0xFABFFBD6) + (v197 ^ 0x7D5FFDEB);
  int v199 = -1038913808 * v188 - ((69656032 * v188 + 763376992) & 0x3D8F5D00) + 1434962228;
  unsigned int v200 = (((v199 ^ 0x1EC7AE84) & 0xFFFFFFF0 | ((2082551535 * v188
                                              - ((-129864226 * v188 + 114819926) & 0xCAB6D194)
                                              + 1757899381) >> 28)) ^ 6)
       - ((2 * (v199 ^ 0x1EC7AE84)) & 0xE9A39520)
       + 1959905936;
  unsigned int v201 = v198
       - 2103442923
       + (v193 ^ 0xCDFF2F89 ^ v194)
       - ((2 * (v198 - 2103442923 + (v193 ^ 0xCDFF2F89 ^ v194))) & 0xD0F2411A)
       + 1752768653;
  unsigned int v202 = -114210817 * (v200 ^ 0x74D1CA90) - ((845320190 * (v200 ^ 0x74D1CA90)) & 0x3FBB264C) - 1612868826;
  unsigned int v203 = (((v196 + 747146451) ^ 0x2C888CD3) & 0xFFFC0000 | (v195 >> 14)) ^ 0x2E027;
  unsigned int v204 = v203 - ((2 * v203) & 0xCB69364E) - 441148633;
  int v205 = -913686536 * (v200 ^ 0x74D1CA90) - ((320110576 * (v200 ^ 0x74D1CA90)) & 0x13254790);
  unsigned int v206 = ((1115684864 * v198 - ((-2063597568 * v198 - 385875968) & 0x81FFFFFF) + 894670212) ^ 0xC0D39584 | ((-2050956155 * v198 - ((193054986 * v198 - 1351118382) & 0xF55EC1C2) + 1382754762) >> 9)) ^ 0x3D57B0;
  int v207 = v206 + 1597803341 + (~(2 * v206) | 0x4186E967);
  unsigned int v208 = ((1834029632 * (v200 ^ 0x1CA8EA1D ^ v201) - ((1520575616 * (v200 ^ 0x1CA8EA1D ^ v201)) & 0x50C27700) + 677460914) ^ 0x28613BB2) & 0xFFFFFFC0 | ((1840596041 * (v200 ^ 0x1CA8EA1D ^ v201) - ((459966610 * (v200 ^ 0x1CA8EA1D ^ v201)) & 0x2490CE58) - 1840748756) >> 26);
  unsigned int v209 = ((2 * v208) & 0xFB3AD77C ^ 0x48) + (v208 ^ 0xFD9D6B9A);
  unsigned int v210 = v204 ^ 0xE5B49B27;
  unsigned int v211 = 49236329 * (v204 ^ 0xE5B49B27) - ((98472658 * (v204 ^ 0xE5B49B27)) & 0xB7D3C77A) + 1542054845;
  unsigned int v212 = (v207 ^ 0xBA88106B ^ v204) + 40014914 + v209;
  unsigned int v213 = v212 ^ 0xF7F3BFE5;
  unsigned int v214 = ((v205 - 1986878514) ^ 0x8992A3CE) & 0xFFFFFFF8 | (v202 >> 29);
  unsigned int v215 = ((2 * v214) & 0x7EE5FFE4) + (v214 ^ 0xBF72FFF6);
  unsigned int v216 = (((806940672 * v209 - ((1613881344 * v209 + 1650180096) & 0x42002000) - 768740057) ^ 0x21001527) & 0xFFFFF000 | ((1305674127 * v209 - 2 * ((1305674127 * v209 + 67834590) & 0x2A9314EF ^ (1305674127 * v209) & 1) - 291625012) >> 20)) ^ 0x2A9;
  unsigned int v217 = v216 - ((2 * v216) & 0xC0D497AC) - 529904682;
  unsigned int v218 = (((1657047320 * (v213 - v215 + ((2 * v212) & 0xEFE77FCA))
          - ((92869168 * (v213 - v215 + ((2 * v212) & 0xEFE77FCA)) + 575794288) & 0x3A132140)) & 0xFFFFFFF8 | ((207130915 * (v213 - v215 + ((2 * v212) & 0xEFE77FCA)) - ((414261830 * (v213 - v215 + ((2 * v212) & 0xEFE77FCA)) + 1951022478) & 0x6B855BD6) - 1343763278) >> 29))
        - 298678568) ^ 0x1D0990A5;
  unsigned int v219 = (-1543503872 * v210 - ((1207959552 * v210) & 0x8FFFFFFF) - 974889945) ^ 0xC5E45C27 | (v211 >> 6);
  unsigned int v220 = ((2 * v219) & 0xEA77BAEE ^ 0x2570A0C) + (v219 ^ 0x74547AF9);
  unsigned int v221 = v218 - ((2 * v218) & 0xB31DE46A) + 1502540341;
  int v222 = (v217 ^ 0x1F95B429) + v220 - ((2 * ((v217 ^ 0x1F95B429) + v220) + 361252116) & 0x53C9070A) - 1264015857;
  unsigned int v223 = (-922746880 * v215 - ((301989888 * v215 + 1006632960) & 0x22222222) - 1895608592) ^ 0x91034EF0 | ((-116661559 * v215 - ((-233323118 * v215 - 1900622340) & 0xAA360A24) - 1669960688) >> 8);
  unsigned int v224 = (v223 ^ 0x7C32E4AB) + ((2 * v223) & 0xF9CFFF5C ^ 0x18A3609) - v220 + 1;
  unsigned int v225 = v217 ^ (v224 - ((2 * v224 - 257442930) & 0xD81D82E0) - 463298761) ^ v221;
  unsigned int v226 = ((2 * v225) & 0x26CBFDD6 ^ 0x22C0F106) + (v225 ^ 0xC68F8678);
  unsigned int v227 = ((1003479026 * (v221 ^ 0x2F9C8439 ^ v222)) & 0xF3FF7ABA)
       - v226
       + ((501739513 * (v221 ^ 0x2F9C8439 ^ v222)) ^ 0x79FFBD5D);
  unsigned int v228 = v227 - ((2 * v227 - 1136651728) & 0xED5D355E) - 724655161;
  LODWORD(v421) = (v228 ^ 0x9516550)
                + (v221 ^ 0x598EF235)
                + 1
                - ((2 * ((v228 ^ 0x9516550) + (v221 ^ 0x598EF235) + 1)) & 0x5F0AC06)
                + 49829379;
  unsigned int v229 = 1201746347 * (v421 ^ 0x2F85603) - ((256009046 * (v421 ^ 0x2F85603)) & 0x58DA82C4) - 1402125982;
  LODWORD(v419) = v226 + (v228 ^ 0x9516550) - ((2 * (v226 + (v228 ^ 0x9516550)) + 422838828) & 0x253DAF86) - 13051687;
  HIDWORD(v415) = v217;
  HIDWORD(v417) = v217 ^ v228;
  int v230 = -1730838528 * (v421 ^ 0x2F85603) - ((833290240 * (v421 ^ 0x2F85603)) & 0xEDD70000) - 152311161;
  unsigned int v231 = (((669581312 * (v217 ^ v228 ^ 0x16C4D179)
          - ((1339162624 * (v217 ^ v228 ^ 0x16C4D179)) & 0x73900000)
          - 1178050775) ^ 0xB9C85F29) & 0xFFFF0000 | ((1654073321 * (v217 ^ v228 ^ 0x16C4D179)
                                                     - ((86921170 * (v217 ^ v228 ^ 0x16C4D179)) & 0x34A417E6)
                                                     - 1705899021) >> 16)) ^ 0x9A52;
  unsigned int v232 = (((24903680 * (v228 ^ 0xF6AE9AAF) - ((49807360 * (v228 ^ 0xF6AE9AAF)) & 0x97D00000) - 873959557) ^ 0xCBE86F7B) & 0xFFFC0000 | ((-1954414497 * (v228 ^ 0xF6AE9AAF) - ((386138302 * (v228 ^ 0xF6AE9AAF)) & 0x4C587C22) + 640433681) >> 14)) ^ 0x98B0;
  int v233 = ((83886080 * (v419 ^ 0x929ED7C3) - ((167772160 * (v419 ^ 0x929ED7C3)) & 0x2A000000) - 1789892268) ^ 0x95506954) & 0xFF000000 | ((1118063365 * (v419 ^ 0x929ED7C3) - ((-2058840566 * (v419 ^ 0x929ED7C3)) & 0xD8927472) - 330745287) >> 8);
  unsigned int v234 = ((2 * v233) & 0x3D9DEDF6 ^ 0x1988074) + (v233 ^ 0x9E22BFC1);
  unsigned int v235 = (v230 & 0x24030000 ^ 0x20E55209) + (v230 & 0xC3188000 ^ 0x80100001) - 2;
  int v236 = (v235 & 0x655B8208 ^ 0x391000E6) + (v235 ^ 0x446F8A18) - ((v235 ^ 0x446F8A18) & 0x651BC810);
  int v237 = v236 ^ 0x7FCA92EE | (v229 >> 17) & 0xD4D ^ 0x404;
  unsigned int v238 = (((v229 >> 17) & 0x72B2 ^ 0xFFFFFD6F) + (HIWORD(v229) & 0x8040) - 1972619364) ^ 0x927A6693;
  unsigned int v239 = (v230 & 0x18E40000 ^ 0x2E02000 | 0x6EC465FC) - (v230 & 0x18E40000 ^ 0x2E02000 | 0x913B9A03) - 1858364925;
  HIDWORD(v79) = (v237 - ((2 * v237) & 0xA01894) + 13634634) ^ 0xD00C4A;
  LODWORD(v79) = v236 ^ 0x7F000000;
  int v240 = (v79 >> 24) - ((2 * (v79 >> 24)) & 0x42FA1FB2);
  HIDWORD(v79) = v239 ^ 0xC445FC;
  LODWORD(v79) = v239 ^ 0x7C000000;
  int v241 = (v240 + 561844185) ^ 0x217D0FD9 | ((v79 >> 24) - ((2 * (v79 >> 24)) & 0xB7C2FC00) - 605979136) ^ 0xDBE17E00;
  unsigned int v242 = v241 - ((2 * v241) & 0xE88F206A) - 196636619;
  unsigned int v243 = -500708777 * v234 - ((-1001417554 * v234 + 85329254) & 0xA6ED0BC0) + 1442941075;
  HIDWORD(v79) = v242 ^ 0x49;
  LODWORD(v79) = v242 ^ 0x3171D800;
  unsigned int v244 = v231 - ((2 * v231) & 0xADECB3C0) + 1458985440;
  unsigned int v245 = ((v232 - ((2 * v232) & 0x2FBB5B36) + 400403867) ^ 0x412BF47B ^ v244) + 1630603525 + v234;
  int v246 = v245 ^ 0x4EBC7E9F;
  unsigned int v247 = (2 * v245) & 0x9D78FD3E;
  int v248 = ((v238 & 0x18DAF0) - (v238 | 0xC6B8DAF1)) ^ 0x39C3532D ^ ((v79 >> 8)
                                                                 + 1683440065
                                                                 + (~(2 * (v79 >> 8)) | 0x37517C7F));
  unsigned int v249 = ((2 * (v246 + v247 - 1320976031 + v248)) & 0xAFF7EFB4) + ((v246 + v247 - 1320976031 + v248) ^ 0xD7FBF7DA);
  v244 ^= 0x56F659E0u;
  int v250 = -1543503872 * v244 - ((v231 << 27) & 0x30000000);
  int v251 = 1045608448 * v234 - ((2091216896 * v234 + 808136704) & 0x53A85000) - 2115387351;
  unsigned int v252 = (((1396588544 * v249 - ((-1501790208 * v249 - 1703215104) & 0xEC630000) + 1131352055) ^ 0xF6318FF7) & 0xFFFFC000 | (((~(-1197827598 * v249 + 1938450924) | 0x3E62D607) - 598913799 * v249 + 445893107) >> 18)) ^ 0x3833;
  unsigned int v253 = (((v250 - 1731567738) ^ 0x98CA5F86) & 0xFC000000 | ((-2138815767 * v244
                                                            - ((17335762 * v244) & 0x6EAE680A)
                                                            + 928461829) >> 6)) ^ 0xDD5CD0;
  unsigned int v254 = ((v243 >> 20) & 0xEEEEEEEE ^ 0xC26) + ((v243 >> 21) ^ 0x7F4DF9EC);
  unsigned int v255 = v254 - 2135818103;
  unsigned int v256 = v254
       + (((v254 - 2135818103) | v251 ^ 0x29D42829) ^ 0x940081D)
       - ((2 * ((v254 - 2135818103) | v251 ^ 0x29D42829)) & 0xED7FEFC4)
       + 1;
  unsigned int v257 = v256 - ((2 * v256 - 287051562) & 0x829F8A1A) + 952221048;
  unsigned int v258 = ((809500672 * v248 - ((545259520 * v248) & 0x2B800000) + 367391061) ^ 0x15E5F155) & 0xFFC00000 | ((-321459007 * v248 - ((430823810 * v248) & 0x2F07DFB8u) + 394522588) >> 10);
  unsigned int v259 = ((2 * v258) & 0xEFEE7FF6 ^ 0xA41F6) + (v258 ^ 0xF7F2DF00);
  unsigned int v260 = (v251 ^ ((v251 ^ 0xD62BD7D6) - ((2 * (v251 ^ 0xD62BD7D6) + 2) & 0xAD55A000) + 1454036483) ^ 0xBE313B26 ^ v257)
       + v255;
  unsigned int v261 = (v253 - ((2 * v253) & 0x9328FB66) + 1234468275) ^ 0x9AD74AF0;
  unsigned int v262 = v252 - ((2 * v252) & 0xA6866E86) - 750569661;
  unsigned int v263 = (v261 ^ v262) - v259 - ((2 * ((v261 ^ v262) - v259) - 269582346) & 0xA44E1D40) + 1243500187;
  unsigned int v264 = v260 - ((2 * v260) & 0xEE046390) + 1996632520;
  unsigned int v265 = 790428617 * (v262 ^ 0xD3433743) - ((1580857234 * (v262 ^ 0xD3433743)) & 0x6E1D69B6) + 923710683;
  int v266 = 2
       * (((v263 ^ 0x52270EA0) & (v264 ^ 0x770231C8)) - ((2 * ((v263 ^ 0x52270EA0) & (v264 ^ 0x770231C8))) & 0x366BFE0))
       + 57065440;
  unsigned int v267 = (v264 ^ 0x25253F68 ^ v263) + (v266 ^ 0x96B940BF) + 1780482209 + ((2 * v266) & 0x2BBFFEBC ^ 0x28D7E80);
  unsigned int v268 = -404862976 * (v262 ^ 0xD3433743) - ((264015872 * (v262 ^ 0xD3433743)) & 0x11879000);
  unsigned int v269 = ((5843480 * (((2 * v267) & 0xFBA3EF5A) + (v267 ^ 0x7DD1F7AD))
         - ((11686960 * (((2 * v267) & 0xFBA3EF5A) + (v267 ^ 0x7DD1F7AD)) + 85117840) & 0x57F8560)
         + 692660346) ^ 0x82BFC2B2) & 0xFFFFFFF8 | ((1074472259 * (((2 * v267) & 0xFBA3EF5A) + (v267 ^ 0x7DD1F7AD))
                                                   - ((1460870 * (((2 * v267) & 0xFBA3EF5A) + (v267 ^ 0x7DD1F7AD))
                                                     + 27416946) & 0x3079F80)
                                                   + 1448410233) >> 29);
  unsigned int v270 = ((2 * v269) & 0xE8B3BCFE ^ 8) + (v269 ^ 0xF459DE7B);
  unsigned int v271 = ((423272448 * v259 - ((846544896 * v259 - 330678272) & 0xFF408000) - 171614199) ^ 0x7FA04009) & 0xFFFFE000 | ((-1340552747 * v259 - ((1613861802 * v259 - 49847726) & 0x9626E208) - 912842195) >> 19);
  unsigned int v272 = ((2 * v271) & 0x6BBE9BFE ^ 0x12C4) + (v271 ^ 0xB5DF549D);
  unsigned int v273 = ((v268 - 2000433982) ^ 0x88C3CCC2) & 0xFFFFF800 | (v265 >> 21);
  unsigned int v274 = ((2 * v273) & 0xE7CEDF7E ^ 0x370) + (v273 ^ 0x73E76E07);
  unsigned int v275 = (((-1582301184 * (v264 ^ 0x770231C8) - ((1130364928 * (v264 ^ 0x770231C8)) & 0xA7C00000) + 1407299231) ^ 0x53E1AE9F) & 0xFFF00000 | ((502667803 * (v264 ^ 0x770231C8) - ((1005335606 * (v264 ^ 0x770231C8)) & 0x630AEC6C) - 1316653514) >> 12)) ^ 0xB1857;
  unsigned int v276 = v275 - ((2 * v275) & 0xC93EB8A6);
  int v277 = v272 + v274 + v270 - ((2 * (v272 + v274 + v270) + 1136576390) & 0x5BAC1C30) + 263549403;
  unsigned int v278 = ((1620640691 * v274 - ((-1053685914 * v274 - 1418903322) & 0xECE381E8) + 1277714791) >> 2)
       - (v274 << 30)
       - 0x40000000;
  unsigned int v279 = ((2 * v278) & 0xF9EFF3EA ^ 0x3928E06A) + (v278 ^ 0xE16B89C8);
  unsigned int v280 = v276 + 1688165459;
  unsigned int v281 = ((((1879048192 * ((v276 + 1688165459) ^ 0x649F5C53)) & 0x80000000)
         - 1207959552 * ((v276 + 1688165459) ^ 0x649F5C53)
         - 1036798912) ^ 0xC233B440) & 0xF8000000 | ((-763743529 * ((v276 + 1688165459) ^ 0x649F5C53)
                                                    - ((-1527487058 * ((v276 + 1688165459) ^ 0x649F5C53)) & 0x98CA2D36)
                                                    + 1281693339) >> 5);
  unsigned int v282 = ((2 * v281) & 0xBF5DEB7A ^ 0x4444168) + (v281 ^ 0xDDCDDD09) + v279;
  unsigned int v283 = v282 - ((2 * v282 + 1186078876) & 0x896497F2) + 1745574983;
  unsigned int v284 = ((470482944 * (v280 ^ 0x4949524B ^ v277) - ((940965888 * (v280 ^ 0x4949524B ^ v277)) & 0xD3360000) - 375695894) ^ 0xE99B55EA) & 0xFFFF0000 | ((-642049013 * (v280 ^ 0x4949524B ^ v277) - ((58079254 * (v280 ^ 0x4949524B ^ v277)) & 0x902AE66) + 75585331) >> 16);
  unsigned int v285 = (((-312541184 * v270 - ((-625082368 * v270 - 1212284928) & 0xFD000000) + 1516225100) ^ 0x7E80C24C) & 0xFFFF0000 | ((-2010583713 * v270 - ((273799870 * v270 - 945440834) & 0xA52F8734) + 912957305) >> 16)) ^ 0x5297;
  unsigned int v286 = v285 - ((2 * v285) & 0xB0D16CEA) + 1483257461;
  unsigned int v287 = 475398709
       * (((2 * (v279 + 50857484 + (v286 ^ 0xA797498A))) & 0xE7DB7BEE)
        + ((v279 + 50857484 + (v286 ^ 0xA797498A)) ^ 0xF3EDBDF7));
  unsigned int v288 = (v284 ^ 0x481) - ((2 * v284) & 0xA42054C8) - 770692508;
  int v289 = (v288 ^ 0x2DEFD59B) - 1004257945 + v287 + 1;
  int v290 = v283 ^ 0x1CDAFD8C ^ v286;
  unsigned int v291 = v290 - 1004257945 + v287;
  unsigned int v292 = (((v288 ^ 0xD2102A64) + v290) ^ 0xFA5FEEFE) + 94376194 + ((2 * ((v288 ^ 0xD2102A64) + v290)) & 0xF4BFDDFC);
  unsigned int v293 = ((v289 ^ 0xA23F5FD4) + 1572905004 + ((2 * v289) & 0x447EBFA8)) & v292;
  int v294 = 2 * (v293 - ((2 * v293) & 0x55B69440)) + 1438028864;
  unsigned int v295 = (v291 ^ 0x7DEFFFC7)
       + ((2 * v291) & 0xFBDFFF8E)
       + (v294 ^ 0x55FE9049)
       + ((2 * v294) & 0xFF6FF7EC ^ 0x5492DF7F)
       + 1;
  int v296 = -260289343 * v295 - 2 * ((-260289343 * v295 + 98787376) & 0x50C005F ^ (-260289343 * v295) & 1) + 1659854990;
  int v297 = v286 ^ 0x5868B675;
  int v298 = v296 ^ 0x50C005E;
  unsigned int v299 = ((2 * (v297 + (v296 ^ 0x50C005E))) & 0xDBD5FFAC) + ((v297 + (v296 ^ 0x50C005E)) ^ 0xEDEAFFD6);
  LODWORD(STACK[0x1288]) = v111;
  LODWORD(STACK[0x128C]) = v173;
  LODWORD(STACK[0x1294]) = v228 ^ 0xF6AE9AAF;
  LODWORD(STACK[0x1298]) = v296;
  int v300 = v288 ^ v296;
  unsigned int v301 = v292 + v298 - ((2 * (v292 + v298)) & 0xDCBBE298);
  unsigned int v302 = -574539943 * v299 - ((-1149079886 * v299 + 1543514420) & 0x95D69A6C) + 2028691920;
  LODWORD(v416) = v300;
  int v303 = 652943360 * v299 - ((232144896 * v299 + 86409216) & 0x24680000) - 1798874586;
  LODWORD(v420) = v301 + 1851650380;
  int v304 = (v301 + 1851650380) ^ 0x6E5DF14C;
  unsigned int v305 = ((((-939524096 * v295) ^ 0x7FFFFFFF) - 469762048 * v295 + 1024199795) ^ 0x7D0C0C72) & 0xFC000000 | ((2118451577 * v295 - ((-58064142 * v295 + 1894040928) & 0xBF69FAD0) + 405233688) >> 6);
  unsigned int v306 = v305 ^ 0xBF8A239A;
  int v307 = (2 * v305) & 0x7DE9E0DE ^ 0xE9A0CA;
  unsigned int v308 = ((2 * ((v303 ^ 0x92341A26) & 0xFFFFE000 | (v302 >> 19))) & 0xFFBF8BD2 ^ 0x292)
       + (((v303 ^ 0x92341A26) & 0xFFFFE000 | (v302 >> 19)) ^ 0x7FDFCCB4);
  unsigned int v309 = ((485871272 * (v300 ^ 0xD71C2A3A) - ((971742544 * (v300 ^ 0xD71C2A3A)) & 0xC4A3D920) + 1649536147) ^ 0x6251EC93) & 0xFFFFFFF8 | ((-1013007915 * (v300 ^ 0xD71C2A3A) - ((-2026015830 * (v300 ^ 0xD71C2A3A)) & 0xBBFB7992) - 570573623) >> 29);
  unsigned int v310 = ((2 * v309) & 0xDFF33E64 ^ 4) + (v309 ^ 0xEFF99F34);
  unsigned int v311 = ((-1275068416 * v304 - ((1744830464 * v304) & 0x58000000) + 754226806) ^ 0x2CF49676) & 0xFC000000 | ((-1206758611 * v304 - ((1881450074 * v304) & 0x4E241B88u) - 1491989052) >> 6);
  unsigned int v312 = ((2 * v311) & 0xBF5D37BE ^ 0x518102E) + (v311 ^ 0x5D32D3E8);
  int v313 = v312 - (v308 + v310) + v306 + v307 - 212820120;
  unsigned int v314 = ((-200301568 * v310 - ((-400603136 * v310 + 875294720) & 0xECAED000) + 275604189) ^ 0xF6576ADD) & 0xFFFFFC00 | ((1497170921 * v310 - 2 * ((1497170921 * v310 + 1476822398) & 0x488FED8F ^ (1497170921 * v310) & 1) - 1600752884) >> 22);
  unsigned int v315 = ((2 * v314) & 0xCF7FFFB6 ^ 0x204) + (v314 ^ 0xE7BFFEF9);
  unsigned int v316 = (((-1590091136 * v308 - ((1114785024 * v308 + 2078683904) & 0x42489900) + 1595369075) ^ 0xA1244CF3) & 0xFFFFFF80 | ((-381521339 * v308 - ((-763042678 * v308 - 1762145178) & 0xEE743088) + 1119223415) >> 25)) ^ 0x3B;
  unsigned int v317 = (((-1342177280 * v313 - 130361002) ^ 0x883AD956) & 0xF0000000 | ((1518309211 * v313
                                                                         - ((889134774 * v313 + 223060942) & 0x3D78CDC2u)
                                                                         - 2057160504) >> 4)) ^ 0x1EBC66E;
  int v318 = v317 - ((2 * v317) & 0x5967275C) + 749966254;
  int v319 = 585138875 * (v318 ^ 0x2CB393AE) - ((1170277750 * (v318 ^ 0x2CB393AE)) & 0x69B97076) + 886880315;
  int v320 = -2101673984 * (v318 ^ 0x2CB393AE) - ((91619328 * (v318 ^ 0x2CB393AE)) & 0x32B60000);
  unsigned int v321 = ((-2067157760 * v312 - ((160651776 * v312 + 86415872) & 0x138D3400) - 1403394166) ^ 0x9C69A8A) & 0xFFFFFF00 | ((-1350252115 * v312 - ((1594463066 * v312 - 582670694) & 0xF93F656C) + 1799505411) >> 24);
  int v322 = ((2 * v321) & 0x5DEF9F9C ^ 0x198) + (v321 ^ 0x2EF7CF32);
  unsigned int v323 = ((v316 - ((2 * v316) & 0x186242F0) - 1942937224) ^ 0xA082B2D6 ^ v318) - v322 + 787992526;
  unsigned int v324 = v315 + (v323 ^ 0x7FEFF87F) + ((2 * v323) & 0xFFDFF0FE) + 170112751;
  unsigned int v325 = 1393874611 * v324 - ((640265574 * v324 + 797103082) & 0x7A5C036A) - 722506838;
  int v326 = -1248329728 * v324 - ((724566016 * v324 + 525336576) & 0x30A00000) + 1744342022;
  LOBYTE(v324) = (v102 & 0x18 ^ 0xF1) + 99 + ((2 * (v102 & 0x18)) ^ 0x18);
  unsigned int v327 = (((v320 + 425454148) ^ 0x195BEA44) & 0xFFFF0000 | HIWORD(v319)) ^ 0x34DC;
  unsigned int v328 = 44292883 * v322 - ((88585766 * v322 + 22590316) & 0x6BCD186) - 1677016455;
  int v329 = ((v328 ^ 0x35E68C3) << (v324 ^ 0x6C)) - ((2 * ((v328 ^ 0x35E68C3) << (v324 ^ 0x6C))) & 0x23ECA85C);
  unsigned int v330 = ((2 * ((v326 ^ 0x18508C06) & 0xFFF80000 | (v325 >> 13))) & 0xDBFE36F6 ^ 0xA12E0)
       + (((v326 ^ 0x18508C06) & 0xFFF80000 | (v325 >> 13)) ^ 0x6DFAF20B);
  unsigned int v331 = ((-2046820352 * v315 - ((201326592 * v315 - 1140850688) & 0xDFFFFFFF) + 1301034255) ^ 0xEF8C350F | ((-1084615357 * v315 - ((2125736582 * v315 - 2121652898) & 0xD907F8D4) - 1387720935) >> 7)) ^ 0xD907F8;
  int v332 = v331 - ((2 * v331) & 0x13C112D0) + 165710184;
  unsigned int v333 = v327 - ((2 * v327) & 0xC0F030EC) - 529000330;
  unsigned int v334 = v333 ^ 0xE0781876;
  unsigned int v335 = -1037212931 * v334 - ((73057786 * v334) & 0x68447A6) - 2092817453;
  unsigned int v336 = (v332 ^ 0xE998911E ^ v333)
       - v330
       + 1845435259
       - ((2 * ((v332 ^ 0xE998911E ^ v333) - v330 + 1845435259)) & 0x42F6C486)
       - 1585749437;
  unsigned int v337 = ((v328 >> 7) & 0x1D9FEDC ^ 0xBCD0)
       + ((v328 >> 8) ^ 0x7FEFA106)
       + ((((v329 + 301356078) ^ 0x11F6542E) << (v324 ^ 0x74)) ^ 0xFBEEFCD3)
       + ((2 * (((v329 + 301356078) ^ 0x11F6542E) << (v324 ^ 0x74))) & 0xF7DDF9A6);
  unsigned int v338 = v337 - ((2 * v337 + 138938238) & 0xCA0E8C16) - 383039030;
  unsigned int v339 = (((102760448 * v330 - ((205520896 * v330 + 1564475392) & 0xC5C00000) - 1852080474) ^ 0xE2FB7EA6) & 0xFFE00000 | ((-1155489743 * v330 - ((1983987810 * v330 + 1899870954) & 0x423D5142) + 1505592854) >> 11)) ^ 0x423D5;
  unsigned int v340 = 802160640 * v334 - ((1604321280 * v334) & 0xAFE00000);
  int v341 = v336 ^ v338;
  unsigned int v342 = ((-637534208 * (v341 ^ 0xC47C2448) - ((-1275068416 * (v341 ^ 0xC47C2448)) & 0xC8000000) + 1684598491) ^ 0x6468EEDB) & 0xFE000000 | ((1553902573 * (v341 ^ 0xC47C2448) - ((-1187162150 * (v341 ^ 0xC47C2448)) & 0x86B07498) - 1017628084) >> 7);
  unsigned int v343 = ((2 * v342) & 0xBFBBF6DE ^ 0x30960C8) + (v342 ^ 0x5E5B4B1B);
  unsigned int v344 = (((v340 + 1475855214) ^ 0x57F7C36E) & 0xFFF00000 | (v335 >> 12)) ^ 0x83422;
  int v345 = v344 - ((2 * v344) & 0x32EB4DE4) + 427140850;
  int v346 = (v345 ^ 0x1975A6F2) - v343 + 1608383343;
  unsigned int v347 = v346 ^ 0xDF7F7B7F;
  unsigned int v348 = (2 * v346) & 0xBEFEF6FE;
  unsigned int v349 = (((-1685487616 * (v338 ^ 0x6507460B) - ((923992064 * (v338 ^ 0x6507460B)) & 0x36050000)) & 0xFFFF8000 | ((-1013762285 * (v338 ^ 0x6507460B) - ((-2027524570 * (v338 ^ 0x6507460B)) & 0xBD574D06) + 1588307587) >> 17))
        - 1694334976) ^ 0x9B02AF55;
  int v350 = v349 - ((2 * v349) & 0x743192BC) - 1172780706;
  int v351 = v339 - ((2 * v339) & 0x733E438E) - 1180753465;
  unsigned int v352 = ((2 * ((v351 ^ 0xB99F21C7) + v347 + v348 + 841870652)) & 0xEFB55FFA)
       + (((v351 ^ 0xB99F21C7) + v347 + v348 + 841870652) ^ 0x77DAAFFD);
  unsigned int v353 = -174343781 * v352 - ((-348687562 * v352 + 1819621794) & 0x93DDCCBC) - 2144763089;
  unsigned int v354 = v343 - 1608383343;
  unsigned int v355 = v354
       + (v350 ^ v345 ^ v351 ^ 0x1AF24E6B)
       - ((2 * (v354 + (v350 ^ v345 ^ v351 ^ 0x1AF24E6B))) & 0xA64A611E)
       - 752537457;
  int v356 = v355 ^ 0x1ACBD6D1 ^ v353;
  int v357 = 698029099 * v356 - ((322316374 * v356) & 0x11B33D2C) - 1999004010;
  LODWORD(v418) = v351 ^ v357;
  int v358 = v351 ^ v357 ^ 0x3146BF51;
  HIDWORD(v420) = v354 + (v357 ^ 0x88D99E96) - ((2 * (v354 + (v357 ^ 0x88D99E96))) & 0x4AD2C3A8) + 627663316;
  unsigned int v359 = 1541872627 * v356 - ((936261606 * v356) & 0x7AFA314E) - 1115875161;
  int v360 = -1670394880 * v356 - ((954177536 * v356) & 0x5604D800);
  int v361 = -244398080 * (HIDWORD(v420) ^ 0x256961D4)
       - ((1658687488 * (HIDWORD(v420) ^ 0x256961D4)) & 0x793AD000)
       + 1016949403;
  unsigned int v362 = ((v361 & 0x6E12C000 ^ 0xBDFD7AA6) - ((2 * (v361 & 0x6E12C000 ^ 0xBDFD7AA6)) & 0x88040000) + 855693854) ^ 0x55032800;
  int v363 = v361 ^ 0x3C9D6A9B;
  if (v341 == -998497208) {
    int v364 = -2048;
  }
  else {
    int v364 = v362;
  }
  LODWORD(v415) = v355;
  HIDWORD(v418) = v355 ^ v357;
  unsigned int v365 = ((v360 + 721579416) ^ 0x2B026D98) & 0xFFFFFC00 | (v359 >> 22);
  unsigned int v366 = ((v364 & v363) - ((2 * (v364 & v363)) & 0x48B31000) + 609849235) ^ 0x24598F93 | ((-1656869415
                                                                                         * (HIDWORD(v420) ^ 0x256961D4)
                                                                                         - ((981228466
                                                                                           * (HIDWORD(v420) ^ 0x256961D4)) & 0x9937786E)
                                                                                         + 1285274679) >> 21) ^ 0x264;
  unsigned int v367 = ((2 * v366) & 0x3AFDEFC0) + (v366 ^ 0x9D7EF7E0);
  unsigned int v368 = (((1079279616 * (v355 ^ v357 ^ 0x5BFCAE19) - ((11075584 * (v355 ^ v357 ^ 0x5BFCAE19)) & 0x37BD0000) + 467574263) ^ 0x1BDE9DF7) & 0xFFFF8000 | ((-2139717463 * (v355 ^ v357 ^ 0x5BFCAE19) - ((15532370 * (v355 ^ v357 ^ 0x5BFCAE19)) & 0x4AFD3562) - 1518429519) >> 17)) ^ 0x52BF;
  unsigned int v369 = ((-1511489536 * v358 - ((1271988224 * v358) & 0x55380000) - 1432607628) ^ 0xAA9C2474) & 0xFFFF8000 | ((-1585755183 * v358 - ((49715106 * v358) & 0x1AD3D322u) + 225044881) >> 17);
  unsigned int v370 = ((2 * v369) & 0xCFF3B67E ^ 0x468) + (v369 ^ 0xE7F9DD8B);
  unsigned int v371 = (v365 ^ 0xEFF6554F) + ((2 * v365) & 0xDFECAF74 ^ 0x560) + v370 - v367;
  unsigned int v372 = v368 - ((2 * v368) & 0xE53ECBBE) - 224434721;
  unsigned int v373 = v372 ^ 0x1DF6DC9A ^ (v371 - ((2 * v371 - 1960998450) & 0xDED3728A) - 1258783188);
  unsigned int v374 = ((322961408 * v370 - ((645922816 * v370 + 109051904) & 0xCE000000) - 364538906) ^ 0x670593E6) & 0xFFC00000 | ((2045702221 * v370 - ((-203562854 * v370 - 1049101286) & 0x9233CC50) + 701883445) >> 10);
  unsigned int v375 = ((2 * v374) & 0xE56F8DF0 ^ 0x648CF0) + (v374 ^ 0xF2858081);
  unsigned int v376 = ((1952016048 * v373 - ((-390935200 * v373) & 0x93238580) + 1234289355) ^ 0x4991C2CB) & 0xFFFFFFF0 | ((1732613739 * v373 - ((244002006 * v373) & 0xED01720) - 2023224432) >> 28);
  unsigned int v377 = ((2 * v376) & 0xF9DF85EE) + (v376 ^ 0x7CEFC2FF);
  unsigned int v378 = ((805306368 * v367 - 116665891) ^ 0xF90BD1DD) & 0xF0000000 | ((-832121027 * v367
                                                                      - 2
                                                                      * ((-832121027 * v367 + 1167264) & 0x3F1C1F ^ (-832121027 * v367) & 2)
                                                                      + 1402006461) >> 4);
  int v379 = ((2 * v378) & 0x57EBEBDC ^ 0x1003E380) + (v378 ^ 0x23F6042F);
  unsigned int v380 = (((-(((v372 ^ 0xF29F65DF) << 25) & 0x70000000) - 2130706432 * (v372 ^ 0xF29F65DF) + 943757613) ^ 0x3840992D) & 0xFF000000 | ((-1470272127 * (v372 ^ 0xF29F65DF) - ((1354423042 * (v372 ^ 0xF29F65DF)) & 0x7DB6BA94) - 1092919990) >> 8)) ^ 0xBEDB5D;
  unsigned int v381 = v375 + v379 - v377 - ((2 * (v375 + v379 - v377) - 1132196830) & 0x97B5149E) + 706515040;
  unsigned int v382 = v380 - ((2 * v380) & 0xC114B08A) - 527804347;
  unsigned int v383 = v382 ^ 0xE08A5845;
  unsigned int v384 = -2131561189 * (v382 ^ 0xE08A5845) - ((31844918 * (v382 ^ 0xE08A5845)) & 0x5AEBC0EC) + 762699894;
  int v385 = v382 ^ 0x2B50D20A ^ v381;
  unsigned int v386 = ((496806528 * v377 - ((993613056 * v377 + 239402240) & 0xBC0E1D00) - 450261679) ^ 0x5E070ED1) & 0xFFFFFF80 | ((-1875166891 * v377 - ((544633514 * v377 - 2044950022) & 0xB84DD350) + 523579045) >> 25);
  unsigned int v387 = ((2 * v386) & 0xDDFAEDFE ^ 0xDC) + (v386 ^ 0xEEFD7691);
  unsigned int v388 = ((1433600000 * v385 - ((719716352 * v385) & 0x3DB60000) + 517670621) ^ 0x1EDB06DD) & 0xFFFF0000 | ((-940223117 * v385 - ((-1880446234 * v385) & 0xBFC3F22E) + 1608644887) >> 16);
  unsigned int v389 = ((2 * v388) & 0xFBBBCCDE ^ 0x8CC2) + (v388 ^ 0x7DDDB98E);
  unsigned int v390 = ((254803968 * v379 - ((509607936 * v379 - 490733568) & 0xA1800000) - 1037846962) ^ 0xD0C3B64E) & 0xFFF00000 | ((1690743027 * v379 - ((-913481242 * v379 - 54534612) & 0xB0B48350) - 692440898) >> 12);
  unsigned int v391 = ((793882624 * v383 - ((514023424 * v383) & 0x3DDAC000) + 518873881) ^ 0x1EED6319) & 0xFFFFF000 | (v384 >> 20);
  unsigned int v392 = ((2 * v391) & 0xFFD8997E ^ 0x12E) + (v391 ^ 0x7FEC4E68);
  unsigned int v393 = (v390 ^ 0x17F35E47) + v392 + ((2 * v390) & 0x2FFDB7C6 ^ 0x190340) - v387 + v389;
  unsigned int v394 = ((-1214853120 * v387 - ((1865261056 * v387 + 432906240) & 0xB3654000) - 426148472) ^ 0xD9B2AD88) & 0xFFFFF000 | ((-1417971347 * v387 - ((1459024602 * v387 - 559833894) & 0xC439C3D0) + 1366143061) >> 20);
  unsigned int v395 = ((-1296039936 * v389 - ((1702887424 * v389 - 41943040) & 0xF6800000) + 2049064846) ^ 0x7B623F8E) & 0xFFC00000 | ((335323851 * v389 - ((133776790 * v389 + 99094518) & 0x4B05552) + 894186148) >> 10);
  unsigned int v396 = ((2 * v394) & 0x57F5FC7E ^ 0xC42)
       + (v394 ^ 0x2BFAF81E)
       + ((2 * v395) & 0xFB7BFFFE ^ 0x412C14)
       + (v395 ^ 0xFD9D69F5);
  unsigned int v397 = v396 - ((2 * v396 - 1399979132) & 0xBBE8CB56) + 876308333;
  unsigned int v398 = (-150994944 * v392 - ((1845493760 - 301989888 * v392) & 0xFA000000) - 1272362395) ^ 0xFD294A65 | ((-1642794761 * v392 - ((1009377774 * v392 + 1413859182) & 0xAD8D4EC6) - 2132178150) >> 8);
  unsigned int v399 = ((2 * v398) & 0xEFE76E7A ^ 0xA50C4A) + (v398 ^ 0xF7A5719A) + v396;
  unsigned int v400 = (((-1941453952 * v393 - ((412059392 * v393 + 12616192) & 0x8ED8E400) + 1204597551) ^ 0xC76C722F) & 0xFFFFFF80 | ((18386823 * (v393 + 20676049) - ((36773646 * (v393 + 20676049) + 1032016022) & 0x2C74672C) + 352050145) >> 25)) ^ 0xB;
  unsigned int v401 = v400 - ((2 * v400) & 0x8BAFE1C6) - 975703837;
  unsigned int v402 = ((2 * ((v397 ^ 0x84267DE7) + (v401 ^ 0xC5D7F0E3))) & 0x9C7F77AE)
       + (((v397 ^ 0x84267DE7) + (v401 ^ 0xC5D7F0E3)) ^ 0x4E3FBBD7);
  unsigned int v403 = 1101043327 * v402 - ((-2092880642 * v402 - 1310479186) & 0x846EC45E) - 1691797370;
  int v404 = (v399 - ((2 * v399 + 1017550090) & 0x6F61556E) - 1778125508) ^ v401;
  LODWORD(STACK[0x1290]) = v228;
  LODWORD(STACK[0x129C]) = v357;
  uint64_t v405 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v45 + 600)))(1032);
  STACK[0x440] = v405;
  LODWORD(STACK[0x12A0]) = 641693137 * (v404 ^ 0xB050387B ^ v403)
                         - ((209644450 * (v404 ^ 0xB050387B ^ v403)) & 0x26E8A064)
                         - 1821093838;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((47 * (v405 != 0)) ^ v45)))(v405, v406, v407, v408, v409, v410, v411, v412, a9, a10, a11, a12, a13, a14, v414, v415, v416, v417, v418,
           v419,
           v420,
           v421,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_23C1C9A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,int a45,int a46,unsigned int a47,int a48,int a49)
{
  HIDWORD(v101) = a23 ^ a45 ^ HIDWORD(a22);
  unsigned int v110 = (v55 >> 8) ^ 0xF7B5500B;
  LODWORD(v105) = HIBYTE(v55) ^ 0x41FAD61E;
  HIDWORD(v105) = BYTE3(a24) ^ 0xA9FA3CEB;
  HIDWORD(a9) = (a43 ^ v51) - ((2 * (a43 ^ v51)) & 0x25C6A578) + 316887740;
  HIDWORD(v102) = v57 + v51 - ((2 * (v57 + v51)) & 0x4CB4B524) + 643455634;
  HIDWORD(v104) = HIBYTE(v56) ^ 0x36932AD5;
  int v58 = v50 ^ v49;
  LODWORD(v103) = v53 + v58 - ((2 * (v53 + v58)) & 0x40CF88C4) + 543671394;
  HIDWORD(v103) = (v58 ^ (v52 + 37879809)) - ((2 * (v58 ^ (v52 + 37879809))) & 0x49ECBA48) - 1527358172;
  LODWORD(v101) = HIDWORD(a23) ^ 0x33CE9574;
  LODWORD(v104) = (v54 ^ 0x72675A54) + v58 - ((2 * ((v54 ^ 0x72675A54) + v58)) & 0xD41DD49A) - 368121267;
  unsigned int v109 = 3 * (a49 ^ 0xE87CA572);
  int v59 = (HIDWORD(a23) ^ 0x33CE9574 ^ v104 ^ 0xC8D4CAEB)
      - ((v109 + 2 * (HIDWORD(a23) ^ 0x33CE9574 ^ v104 ^ 0xC8D4CAEB) - 1591120948) & 0xF9DAA09E);
  unsigned int v60 = (((v59 + 1300367168) ^ 0xC8D4CAEB)
       - ((2 * ((v59 + 1300367168) ^ 0xC8D4CAEB) - 1591120414) & 0xF9DAA09E)
       + 1300367168) ^ 0xC8D4CAEB;
  unsigned int v61 = ((v60 - ((2 * v60 - 1591120414) & 0xF9DAA09E) + 1300367168) ^ 0xFCED504F) + LODWORD(STACK[0x133C]);
  unsigned int v62 = (v61 ^ 0x5973EDDF) - 1500769759 + ((2 * v61) & 0xB2E7DBBE);
  unsigned int v63 = ((v62 & 0xFFFFFFFE) - 1443984457 + (~(2 * v62) | 0xAC22E893)) ^ 0xD0BD073B;
  int8x16_t v64 = (int8x16_t)vdupq_n_s32(a47);
  LODWORD(v102) = (LODWORD(STACK[0x129C]) ^ a24) >> 8;
  uint64_t v65 = v102 ^ 0x152160;
  int v108 = 110461393 * v63;
  int v107 = 220922786 * v63;
  LODWORD(a34) = 220922782 * v63;
  LODWORD(a33) = 110462326;
  v66.i64[0] = 0x100000001;
  v66.i64[1] = 0x100000001;
  v67.i64[0] = 0xFE000000FELL;
  v67.i64[1] = 0xFE000000FELL;
  int8x16_t v68 = veorq_s8(v64, (int8x16_t)vdupq_n_s32(0xA2ABC12A));
  int8x16_t v69 = veorq_s8(v64, (int8x16_t)vdupq_n_s32((a47 ^ 0xAC302D94) - 344508121 + (~(2 * (a47 ^ 0xAC302D94) + 2) | 0x29118DB5)));
  v64.i64[0] = 0x3B0000003BLL;
  v64.i64[1] = 0x3B0000003BLL;
  v70.i64[0] = 0xC4000000C4;
  v70.i64[1] = 0xC4000000C4;
  HIDWORD(a24) = 8 * v63;
  LODWORD(a25) = 4 * v63;
  v106[0] = -49 * v63;
  LODWORD(a26) = 110461392 * v63;
  int v71 = ((v109 + 654) ^ 0x6958576) * v63;
  int v72 = (2 * v71) & 0x552BEAC8;
  int v73 = v71 - 1433012891;
  uint64_t v74 = 110461391 * v63 - 1433012891 - ((220922782 * v63) & 0x552BEACA);
  int v75 = 110461392 * v63 - 1433012891 - ((220922784 * v63) & 0x552BEAC8);
  int v76 = v108 - 1433012891 - (v107 & 0x552BEACA);
  int v77 = v73 - v72;
  int v78 = ((v74 ^ 0x95F565) & v65) + 1303198117 - ((2 * ((v74 ^ 0x95F565) & v65)) & 0x15A734A);
  int v79 = ((v75 ^ 0x95F565) & v65) + 1303198117 - ((2 * ((v75 ^ 0x95F565) & v65)) & 0x15A734A);
  int v80 = ((v76 ^ 0x95F565) & v65) + 1303198117 - ((2 * ((v76 ^ 0x95F565) & v65)) & 0x15A734A);
  int v81 = ((v77 ^ 0x95F565) & v65) + 1303198117 - ((2 * ((v77 ^ 0x95F565) & v65)) & 0x15A734A);
  int v82 = ((2 * ((v74 ^ 0xAA95F565) + v65)) & 0xE8EFFEEC)
      + (((v74 ^ 0xAA95F565) + v65) ^ 0xF477FF76)
      + ((4 * v78) ^ 0x36B5568D)
      + ((2 * v78) ^ 0x50959CB5)
      + ((8 * v78) & 0xFFFC9FC8 ^ 0x929772F7)
      + ((4 * v78) & 0x979FDFFC ^ 0x1694C694);
  int v83 = ((2 * ((v75 ^ 0xAA95F565) + v65)) & 0xE8EFFEEC)
      + (((v75 ^ 0xAA95F565) + v65) ^ 0xF477FF76)
      + ((4 * v79) ^ 0x36B5568D)
      + ((2 * v79) ^ 0x50959CB5)
      + ((8 * v79) & 0xFFFC9FC8 ^ 0x929772F7)
      + ((4 * v79) & 0x979FDFFC ^ 0x1694C694);
  int v84 = ((2 * ((v76 ^ 0xAA95F565) + v65)) & 0xE8EFFEEC)
      + (((v76 ^ 0xAA95F565) + v65) ^ 0xF477FF76)
      + ((4 * v80) ^ 0x36B5568D)
      + ((2 * v80) ^ 0x50959CB5)
      + ((8 * v80) & 0xFFFC9FC8 ^ 0x929772F7)
      + ((4 * v80) & 0x979FDFFC ^ 0x1694C694);
  int v85 = ((2 * ((v77 ^ 0xAA95F565) + v65)) & 0xE8EFFEEC)
      + (((v77 ^ 0xAA95F565) + v65) ^ 0xF477FF76)
      + ((4 * v81) ^ 0x36B5568D)
      + ((2 * v81) ^ 0x50959CB5)
      + ((8 * v81) & 0xFFFC9FC8 ^ 0x929772F7)
      + ((4 * v81) & 0x979FDFFC ^ 0x1694C694);
  v86.i32[0] = (v82 - 213146237 - ((2 * v82 + 2137833702) & 0x672A8A20)) ^ v110;
  v86.i32[1] = (v83 - 213146237 - ((2 * v83 + 2137833702) & 0x672A8A20)) ^ v110;
  v86.i32[2] = (v84 - 213146237 - ((2 * v84 + 2137833702) & 0x672A8A20)) ^ v110;
  v86.i32[3] = (v85 - 213146237 - ((2 * v85 + 2137833702) & 0x672A8A20)) ^ v110;
  LOWORD(v82) = (v86.u8[0] ^ 0xF94E) + (v86.i8[0] & 0x60 ^ 0x20) - ((v86.u8[0] ^ 0xF94E) & 0x960);
  LOWORD(v79) = ((v83 - 125 - ((2 * v83 - 26) & 0x20)) ^ v110) ^ 0xF94E;
  LOWORD(v83) = v79 + (((v83 - 23165 - ((2 * v83 - 16154) & 0x8A20)) ^ v110) & 0x60 ^ 0x20) - (v79 & 0x960);
  LOWORD(v79) = ((v84 - 125 - ((2 * v84 - 26) & 0x20)) ^ v110) ^ 0xF94E;
  LOWORD(v84) = v79 + (((v84 - 23165 - ((2 * v84 - 16154) & 0x8A20)) ^ v110) & 0x60 ^ 0x20) - (v79 & 0x960);
  LOWORD(v79) = ((v85 - 125 - ((2 * v85 - 26) & 0x20)) ^ v110) ^ 0xF94E;
  LOWORD(v85) = v79 + (((v85 - 23165 - ((2 * v85 - 16154) & 0x8A20)) ^ v110) & 0x60 ^ 0x20) - (v79 & 0x960);
  uint64_t v87 = (v83 & 0x904 ^ 0x1050C105) + (v83 & 0x16FBu);
  uint64_t v88 = (v84 & 0x904 ^ 0x1050C105) + (v84 & 0x16FBu);
  uint64_t v89 = v85 & 0x904 ^ 0x1050C105u;
  uint64_t v90 = v89 + (v85 & 0x16FB);
  v91.i32[0] = dword_23C215C80[((v82 & 0x904 ^ 0x1050C105) + (v82 & 0x16FB) - 1) ^ 0x1050D189];
  v91.i32[1] = dword_23C215C80[(v87 - 1) ^ 0x1050D189];
  v91.i32[2] = dword_23C215C80[(v88 - 1) ^ 0x1050D189];
  v91.i32[3] = dword_23C215C80[(v90 - 1) ^ 0x1050D189];
  int8x16_t v92 = (int8x16_t)vsubq_s32((int32x4_t)veorq_s8(vandq_s8(v86, v67), (int8x16_t)vdupq_n_s32(0x199130B9u)), (int32x4_t)vandq_s8(v86, v66));
  int32x4_t v93 = vaddq_s32(vaddq_s32(v91, vdupq_n_s32(0xA1766649)), (int32x4_t)veorq_s8(vorrq_s8(vorrq_s8(vandq_s8(v92, v70), (int8x16_t)vdupq_n_s32(0x8460500u)), veorq_s8(vandq_s8(v92, v64), (int8x16_t)vdupq_n_s32(0x91208823))), (int8x16_t)vdupq_n_s32(0x9A20D7F6)));
  int32x4_t v94 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v93, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v93, v93), (int8x16_t)vdupq_n_s32(0x74117056u))), vdupq_n_s32(0x3A08B82Bu)), (int8x16_t)vdupq_n_s32(HIDWORD(a21) ^ a22));
  int32x4_t v95 = vaddq_s32((int32x4_t)veorq_s8(v68, (int8x16_t)v94), (int32x4_t)v66);
  int32x4_t v96 = vaddq_s32((int32x4_t)veorq_s8(vandq_s8((int8x16_t)vaddq_s32(v94, v94), (int8x16_t)vdupq_n_s32(0x3FDEE9FEu)), (int8x16_t)vdupq_n_s32(0x1D16C97Cu)), (int32x4_t)veorq_s8((int8x16_t)v94, (int8x16_t)vdupq_n_s32(0x11749841u)));
  int32x4_t v97 = vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v95, v95), (int8x16_t)vdupq_n_s32(0xFD3FFF76)), (int32x4_t)veorq_s8((int8x16_t)v95, (int8x16_t)vdupq_n_s32(0x7E9FFFBBu))), v96);
  int32x4_t v98 = vaddq_s32(vaddq_s32(v96, vdupq_n_s32(0xE0108B01)), (int32x4_t)veorq_s8(veorq_s8(v69, (int8x16_t)vdupq_n_s32(0xAECF470C)), (int8x16_t)vaddq_s32(vsubq_s32(v97, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(vaddq_s32(v97, v97), vdupq_n_s32(0x2E1168Cu)), (int8x16_t)vdupq_n_s32(0x2CEF5884u))), vdupq_n_s32(0x77E83788u))));
  int32x4_t v99 = vaddq_s32(vsubq_s32(v98, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v98, v98), (int8x16_t)vdupq_n_s32(0xE19845F2))), vdupq_n_s32(0x70CC22F9u));
  *(_DWORD *)(a1 + 4 * ((v106[0] + 101 - (a34 & 0xCA)) ^ 0x65u)) = v99.i32[0];
  *(_DWORD *)(a1 + 4 * (v75 & 0xFD ^ 0x65u)) = v99.i32[1];
  *(_DWORD *)(a1 + 4 * (v76 ^ 0x65u)) = v99.i32[2];
  *(_DWORD *)(a1 + 4 * (v77 ^ 0x65u)) = v99.i32[3];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)v109))(a1, v74, v87, v90, v65, v88, v89, v109, a9, v101, v102, v103, v104, v105, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

void sub_23C1CA2EC()
{
}

uint64_t sub_23C1CA304()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 | 0x152)))(1032);
  STACK[0x1590] = v2;
  STACK[0x408] = v2;
  return (*(&off_26EFDBE20 + (((((v1 - 89) ^ (v2 == 0)) & 1) * (((v1 - 1092) | 0x9E) ^ 0x176)) ^ v1)))();
}

uint64_t sub_23C1CA380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,uint64_t a23,int a24,int a25,unsigned int a26)
{
  unsigned int v28 = ((LODWORD(STACK[0x12A0]) ^ LODWORD(STACK[0x1338]) ^ 0xAC4D3F98)
       - ((2 * (LODWORD(STACK[0x12A0]) ^ LODWORD(STACK[0x1338]) ^ 0xAC4D3F98) + 665484882) & 0xD80255B2)
       + 2144758274) ^ 0x89AF662;
  unsigned int v29 = ((v28 - ((2 * v28 + 665484882) & 0xD80255B2) + 2144758274) ^ 0x6C012AD9) + (a25 ^ 0x252D2F76);
  unsigned int v30 = ((2 * v29) & 0x5B73F6D6) + (v29 ^ 0xADB9FB6B);
  int v31 = 2 * v30 - ((4 * v30 + 1226314324) & 0x45495EF8) - 953108313;
  unsigned int v32 = v30 + (v31 & 0x4E2B4962 ^ 0x4A203A61) + ((2 * v31) & 0xC5690C4 ^ 0xFBBFEF3F) - 1319406010;
  unsigned int v33 = ((LODWORD(STACK[0x129C]) ^ LODWORD(STACK[0x1290]) ^ a26) >> 16) ^ 0x35A67FF1;
  unsigned int v34 = ((v32 | 1) + 253748285 + ((2 * v32) & 0x1E3FC878 ^ 0xFFFFFFFD) + 1) ^ 0xF1FE43D;
  int v35 = 856959805 * v34 + 274198387;
  int v36 = 1713919610 * v34;
  unsigned int v37 = (((((v35 - (v36 & 0x20AFDEE6)) ^ v33) & 0xB2 ^ 0xB0484811) - 1) | ((v35 - (v36 & 0x20AFDEE6)) ^ v33) & (v26 - 177)) ^ 0xF0C84934;
  *(_DWORD *)(STACK[0x1590] + 4 * ((v35 - (v36 & 0xE6)) ^ 0x73u)) = a21 ^ a22 ^ a13 ^ 0xF14BAB2B ^ dword_23C213570[(-683950727 - (v37 | 0xD73BBD79) + (v37 | 0x28C44286)) ^ 0x68444392];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _DWORD *))(v27 + 8 * v26))(4039657780, 683950726, 1749304210, dword_23C213570);
}

void sub_23C1CA5DC()
{
}

uint64_t sub_23C1CA5EC()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v0 + 825) ^ 0x1C1)))(1028);
  STACK[0x15B8] = v3;
  *(void *)(v1 + 32) = v3;
  return (*(&off_26EFDBE20 + (int)(((v3 == 0) * ((((v0 + 825) ^ 0x60E) - 1771230446) ^ 0x966D2D2E)) ^ (v0 + 825))))();
}

uint64_t sub_23C1CA664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v48 = LODWORD(STACK[0x1338]) ^ HIDWORD(a12);
  char v49 = (((2 * v48) ^ 0x6A) - ((2 * ((2 * v48) ^ 0x6A)) & 0x24) - 110) & 0x3C ^ 0x20;
  LOBYTE(v48) = (((v49 | 0x67) - (v49 | 0x98) - 104) ^ 0x43) + (v48 ^ 0x60);
  LOBYTE(v48) = v48 - ((2 * v48) & 0x6A) + 53;
  char v50 = (((2 * v48) ^ 0x6A) - ((2 * ((2 * v48) ^ 0x6A)) & 0x24) - 110) & 0x3C ^ 0x20;
  LOBYTE(v48) = (((v50 | 0x67) - (v50 | 0x98) - 104) ^ 0x43) + (v48 ^ 0x60);
  LODWORD(a46) = LODWORD(STACK[0x15E8]) ^ 0x8EED967A;
  LOBYTE(v48) = ((v48 - ((2 * v48) & 0x6A) + 53) ^ 0x35) + a46;
  LOBYTE(v48) = (v48 ^ 0x79) - 121 + ((2 * v48) & 0xF2);
  LOBYTE(v48) = ((v48 & 0xFE) - ((2 * v48) & 0x74) - 70) ^ 0x7D;
  unsigned __int8 v51 = -51 * v48 + ((v46 - 54) ^ 0x25) - ((-102 * v48) & 0x4C);
  unsigned int v52 = ((v51 ^ v47) ^ 0xE8585058)
      - ((2 * ((v51 ^ v47) ^ 0xE8585058)) & 0xC030A192)
      - 425927735;
  int v53 = ((2 * v52) ^ 0x1D19997A) - ((2 * ((2 * v52) ^ 0x1D19997A)) & 0x70A450) + 20468264;
  int v54 = *((_DWORD *)&unk_23C20F360
        + (((v52 ^ 0xE8CCCBD) + 4736832) ^ 0x6DFFBD6B)
        + ((2 * ((v52 ^ 0xE8CCCBD) + 4736832)) & 0x5BFF7AD6)
        + (v53 & 0x908E80 ^ 0x88B7122B)
        + ((2 * v53) & 0x211D00 ^ 0xFFDFFBFF)
        + 156840555);
  unsigned int v55 = 519009017 * v54 - ((1038018034 * v54 - 1517559972) & 0x9A289C90) - 1613087242;
  unsigned int v56 = (16
       * ((125540296 * v54 - 2 * ((125540296 * v54 + 103775600) & 0x552B2D8 ^ (125540296 * v54) & 8) + 193081408) ^ v55)) ^ 0x846FC980;
  *(_DWORD *)(STACK[0x15B8] + 4 * (v51 ^ 0x26u)) = a23 ^ a20 ^ HIDWORD(a19) ^ v55 ^ 0x4CEE6A0C ^ (v56
                                                                                                  - ((2 * v56) & 0x37FD6280)
                                                                                                  - 1677807291);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v46))(125540296, 103775600, 89305816, 193081408, 2221918592, 939352704, 2617160005, 4292869119, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

void sub_23C1CA9EC()
{
}

uint64_t sub_23C1CA9FC()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x4F5)))(1032);
  STACK[0x11E0] = v2;
  STACK[0x430] = v2;
  return (*(&off_26EFDBE20
          + (int)(((((v0 + 92) ^ (v2 == 0)) & 1) * ((v0 + 876297980) & 0xCBC4C3AD ^ 0x38E)) ^ v0)))();
}

uint64_t sub_23C1CAA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  unsigned int v27 = ((a12 ^ 0x2CCA3836 ^ LODWORD(STACK[0x1334]))
       - ((((v25 - 44) ^ 0xEE21C5C5) + 2 * (a12 ^ 0x2CCA3836 ^ LODWORD(STACK[0x1334]))) & 0xD8E387F4)
       + 1669506844) ^ 0x376ED5E6;
  unsigned int v28 = ((v27 - ((2 * v27 - 299776444) & 0xD8E387F4) + 1669506844) ^ 0x6C71C3FA) + LODWORD(STACK[0x133C]);
  LOBYTE(v28) = (v28 ^ 0xAD) + 83 + ((2 * v28) & 0x5A);
  LOBYTE(v28) = ((v28 & 0xFE) - ((2 * v28) & 4) + 3) ^ 0xFE;
  char v29 = -17 * v28 - 53;
  char v30 = -34 * v28;
  unsigned int v31 = (((v29 - (v30 & 0x96)) ^ LOBYTE(STACK[0x1288]) ^ v24) ^ 0x10882077 | (((v25 - 44) ^ 0x7D3)
                                                                                             + 1214530236))
      - (((v29 - (v30 & 0x96)) ^ LOBYTE(STACK[0x1288]) ^ v24) ^ 0x10882077 | 0xB79BB8F1)
      - 1214531343;
  int v32 = (((v31 ^ 0x7575EEAF) + 1) ^ 0x7777DB7B)
      + ((2 * ((v31 ^ 0x7575EEAF) + 1)) & 0x6EEFB6F6)
      + dword_23C2116D0[v31 ^ 0x58EC67A8];
  *(_DWORD *)(STACK[0x11E0] + 4 * ((v29 - (v30 & 0x96)) ^ 0xCBu)) = a24 ^ a19 ^ a20 ^ 0xCC393EFD ^ (v32 + 1293665196 + (~(2 * v32 + 101023334) | 0xFBCDF70F));
  return (*(uint64_t (**)(void))(v26 + 8 * ((v25 - 44) | 0x2C)))();
}

void sub_23C1CACA4()
{
}

uint64_t sub_23C1CACB4()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 420)))(1032);
  STACK[0x1480] = v2;
  STACK[0x420] = v2;
  return (*(&off_26EFDBE20 + ((15 * ((((v0 ^ 0x19) + 0x80) ^ (v2 == 0)) & 1)) ^ v0)))();
}

uint64_t sub_23C1CAED8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W8>)
{
  unint64_t v7 = (unsigned int *)(v6 + 4 * (v4 + a1));
  uint64_t v8 = v4 + 1;
  unsigned int v9 = ~v3 & 0x80000000;
  int v10 = *(_DWORD *)(v6 + 4 * (v8 + a1));
  unsigned int v11 = ((a3 + 417355763) & (2 * (v10 & 0x7FFFFFFE ^ 0x8B4F0354))) - (v10 & 0x7FFFFFFE ^ 0x8B4F0354) + 1938805548;
  *unint64_t v7 = v7[397] ^ *((_DWORD *)&STACK[0x1870] + (v10 & 1)) ^ (((v11 ^ 0xFB4FF384 | v9)
                                                            - 2 * ((v11 ^ 0xFB4FF384) & 0x1DA518DE ^ v11 & 0x1A)
                                                            - 1650124603) >> 1) ^ 0x9122D73E;
  return (*(uint64_t (**)(void))(a2 + 8 * ((91 * (v8 == v5 + 3)) ^ a3)))();
}

uint64_t sub_23C1CAFAC@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v4 = (const float *)&dword_268B983A4;
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32(v4);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  v7.i64[0] = 0x100000001;
  v7.i64[1] = 0x100000001;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  v3.i64[0] = *(void *)&dword_268B983A8;
  v3.i32[2] = dword_268B983B0;
  int8x16_t v9 = vextq_s8(v5, v3, 0xCuLL);
  int8x16_t v10 = v3;
  v10.i32[3] = dword_268B983B4;
  int8x16_t v11 = vandq_s8((int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v9, v6), vdupq_n_s32(0xD397D3EC)), v6);
  int32x4_t v12 = (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xAA95B9Cu));
  int8x16_t v13 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x65AEA318u))), vdupq_n_s32(0xB2D7518C)), (int8x16_t)vdupq_n_s32(0xBBC36F91)), v8);
  int32x4_t v14 = (int32x4_t)veorq_s8(vorrq_s8(v13, v11), (int8x16_t)vdupq_n_s32(0x32467Cu));
  int32x4_t v15 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v14, (int8x16_t)vdupq_n_s32(0x62D99E53u)), vandq_s8(v13, v7));
  v16.i32[0] = *(_DWORD *)(v2 + 4 * (dword_268B983A8 & ((a2 + 190) ^ 0x26ELL)));
  v16.i32[1] = *(_DWORD *)(v2 + 4 * (unk_268B983AC & 1));
  v16.i32[2] = *(_DWORD *)(v2 + 4 * (dword_268B983B0 & 1));
  v16.i32[3] = *(_DWORD *)(v2 + 4 * (dword_268B983B4 & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v16), (int8x16_t)vdupq_n_s32(0xAE9C9475)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v14, vaddq_s32(v15, v15)), vdupq_n_s32(0xE2D99E52)), 1uLL));
  return (*(uint64_t (**)(void))(a1 + 8 * (a2 + 50)))();
}

void sub_23C1CB128()
{
}

uint64_t sub_23C1CB134@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  unsigned int v3 = ((*v2 & 0x7FFFFFFE ^ 0x2520C62) - ((2 * (*v2 & 0x7FFFFFFE ^ 0x2520C62)) & 0x48A93968) - 1537958732) ^ 0xA589B32A;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x1870] + (*v2 & 1)) ^ (((v3 | ((v2[623] & 0x80000000 ^ 0xDBEF79E0) - 2248800) & 0x80000000)
                                                                  - ((2 * v3) & 0x8AF83D0)
                                                                  + 72860137) >> 1) ^ 0xDDDBBBA8;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(a2 ^ 0x3B4 ^ (58
                                                  * ((((LODWORD(STACK[0x358]) ^ a2) & STACK[0x358]) >> (__clz(LODWORD(STACK[0x358]) ^ a2 | 1) ^ 0x1F)) & 1)))))();
}

uint64_t sub_23C1CB228(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  LODWORD(STACK[0x358]) = 0;
  int v11 = LODWORD(STACK[0x358])++;
  *(_DWORD *)(v6 + 2520) = v11 + 452853309;
  uint64_t v12 = (*(_DWORD *)(v8 + 2544) - 1592981669);
  v7[12] = *(void *)(a5 + 8 * (v5 + 1771230078));
  v7[14] = 4218383192;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = v5 - 1691219048;
  LODWORD(STACK[0x474]) = v5 - 1691219081;
  LODWORD(STACK[0x478]) = (v5 - 1691219081) ^ 0x23;
  v7[17] = v12;
  *(void *)(v9 + 448) = &STACK[0x458];
  *(_DWORD *)(v10 - 192) = 1431737413
                         * ((-741454645 - ((v10 - 200) | 0xD3CE4CCB) + ((v10 - 200) | 0x2C31B334)) ^ 0x926F2C26)
                         + 40706419
                         + v5;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(a5 + 8 * (v5 + a4)))(v10 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v10 - 188)))(v13);
}

void sub_23C1CB338()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)(v2 + 2544) + 1;
  }
  else {
    int v3 = 1516397565;
  }
  *(_DWORD *)(v2 + 2544) = v3;
  JUMPOUT(0x23C1CB49CLL);
}

uint64_t sub_23C1CB518(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((127 * (v3 + 8 == ((((v4 - 1871967862) | 0x6012003) - a3 + 783) ^ 0x5B2D8FF4))) ^ v4)))();
}

uint64_t sub_23C1CB56C(uint64_t a1, uint64_t a2)
{
  STACK[0x1870] = 0x46F8EB83DFF05B5CLL;
  LODWORD(STACK[0x358]) = *(_DWORD *)(v4 + 2520) - 452853308;
  uint64_t v9 = *(unsigned int *)(v6 + 2544);
  v5[12] = *(void *)(a2 + 8 * ((v2 - 870125051) ^ 0x62901F94));
  v5[14] = v9;
  LODWORD(STACK[0x460]) = v2 - 870125005;
  LODWORD(STACK[0x470]) = v2 - 870125051;
  v5[17] = 1516397565;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = v2 - 870125078;
  *(_DWORD *)(v8 - 192) = 1431737413 * (((~(v8 - 200) & 0x55E4C474) - (~(v8 - 200) | 0x55E4C475)) ^ 0xEBBA5B67)
                        + 40706419
                        + v2;
  *(void *)(v7 + 448) = &STACK[0x458];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v2 + v3)))(v8 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v8 - 188)))(v10);
}

uint64_t sub_23C1CB674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v45 = v43 - 1771229877;
  (*(void (**)(uint64_t, uint64_t))(a5 + 12592))(a43, 3312658705);
  int v46 = (*(&off_26EFDBE20 + v45 + 32))();
  unsigned int v47 = v46 - 2087771140 - ((v46 << (v45 - 13)) & 0x71E47F8);
  LODWORD(xmmword_268B98018) = v47;
  unsigned int v48 = v47 ^ 0x838F23FE ^ (v47 >> 30);
  uint64_t v49 = (1812433253 * v48) ^ 0xBFFFFFED;
  uint64_t v50 = (1477382858 * v48) & 0x7FFFFFDA;
  uint64_t v51 = (((14 * ((v45 - 614) ^ 0x3B5)) ^ 0x509EC90) + 2 * (v49 + v50) + 2062947106) & 0x71E47F8;
  *(_DWORD *)(v44 + 4) = v49 + v50 - 1014029296 - v51;
  unsigned int v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + ((v45 - 614) ^ 0x13));
  return v52(v49, v50, v51, v52, v44, &off_26EFDBE20, 2147480510, 1812433253, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

void sub_23C1CB7DC()
{
}

uint64_t sub_23C1CB7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = 0x1A0000001ALL;
  v9.i64[1] = 0x1A0000001ALL;
  v6.i64[0] = *(void *)(v5 + 4);
  v6.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v10 = vextq_s8(v7, v6, 0xCuLL);
  int8x16_t v11 = v6;
  v11.i32[3] = *(_DWORD *)(v5 + 16);
  int32x4_t v12 = (int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x8B4F0354));
  int8x16_t v13 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x18E059A4u)), v12), vdupq_n_s32(0x738FD32Cu));
  int8x16_t v14 = veorq_s8(v13, (int8x16_t)vdupq_n_s32(0xFB4FF384));
  int32x4_t v15 = (int32x4_t)veorq_s8(vandq_s8(v14, (int8x16_t)vdupq_n_s32(0x1DA518DEu)), vandq_s8(v13, v9));
  uint32x4_t v16 = (uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v14, vbicq_s8(v8, v10)), vaddq_s32(v15, v15)), vdupq_n_s32(0x9DA518C5));
  v14.i32[0] = *((_DWORD *)&STACK[0x1870] + (*(_DWORD *)(v5 + 4) & 1));
  v14.i32[1] = *((_DWORD *)&STACK[0x1870] + (*(_DWORD *)(v5 + 8) & 1));
  v14.i32[2] = *((_DWORD *)&STACK[0x1870] + (*(_DWORD *)(v5 + 12) & 1));
  v14.i32[3] = *((_DWORD *)&STACK[0x1870] + (v11.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v14), (int8x16_t)vdupq_n_s32(0x9122D73E)), (int8x16_t)vshrq_n_u32(v16, 1uLL));
  return (*(uint64_t (**)(void))(a5 + 2912))();
}

uint64_t sub_23C1CC30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unint64_t a47)
{
  STACK[0x318] = a47;
  return a33(a34);
}

uint64_t sub_23C1CC328(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = v3 + a3 - 1192;
  uint64_t v6 = (*(uint64_t (**)(void))(a2 + 8 * (a3 ^ (a3 - 476))))();
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * ((546 * (LODWORD(STACK[0x3E4]) == ((300 * (v4 ^ 0x165)) ^ 0x384))) ^ v4)))(v6);
}

uint64_t sub_23C1CC3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  LODWORD(STACK[0x21E0]) = STACK[0x264];
  *(void *)(v44 + 208) = a41;
  STACK[0x250] = *(void *)(v41 + 280);
  (*(void (**)(void))(v42 + 8 * ((v43 + 542) ^ 0x5B2)))(*(void *)(v41 + 344));
  uint64_t v45 = ((uint64_t (*)(unint64_t))*(&off_26EFDBE20 + v43 + 1232))(STACK[0x16A8]);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + ((((268 * ((v43 + 542) ^ 0x386)) ^ 0x6992D80E) + v43 - 1771230235) ^ (v43 + 542))))(v45);
}

uint64_t sub_23C1CC4A4()
{
  LODWORD(STACK[0x21D0]) = -2099564605;
  int v3 = off_268B989E8;
  LOBYTE(STACK[0x20F1]) = *off_268B989E8 - 57;
  LOBYTE(STACK[0x20F2]) = v3[1] + (v0 ^ 0xDF);
  LOBYTE(STACK[0x20F3]) = v3[2] - 57;
  LOBYTE(STACK[0x20F4]) = v3[3] - 57;
  LOBYTE(STACK[0x20F5]) = v3[4] - 57;
  LOBYTE(STACK[0x20F6]) = v3[5] + ((v0 + 87) & 0xFD ^ 0xAA);
  LOBYTE(STACK[0x20F7]) = v3[6] - 57;
  LOBYTE(STACK[0x20F8]) = v3[7] - 57;
  LOBYTE(STACK[0x20F9]) = v3[8] - 57;
  LOBYTE(STACK[0x20FA]) = v3[9] - 57;
  LOBYTE(STACK[0x20FB]) = v3[10] - 57;
  LOBYTE(STACK[0x20FC]) = v3[11] - 57;
  LOBYTE(STACK[0x20FD]) = v3[12] - 57;
  LOBYTE(STACK[0x20FE]) = v3[13] - 57;
  LOBYTE(STACK[0x20FF]) = v3[14] - 57;
  LOBYTE(STACK[0x2100]) = v3[15] - 57;
  LOBYTE(STACK[0x2101]) = v3[16] - 57;
  LOBYTE(STACK[0x2102]) = v3[17] - 57;
  LOBYTE(STACK[0x2103]) = v3[18] - 57;
  LOBYTE(STACK[0x2104]) = v3[19] - 57;
  LOBYTE(STACK[0x2105]) = v3[20] - 57;
  LOBYTE(STACK[0x2106]) = v3[21] - 57;
  LOBYTE(STACK[0x2107]) = off_268B989E8[22] - 57;
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0x439)))();
  uint64_t v5 = ((uint64_t (*)(void, unint64_t *, uint64_t))*(&off_26EFDBE20 + (v0 ^ 0x41D)))(0, &STACK[0x20F1], v4);
  *(void *)(v1 + 3792) = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (32 * (v5 == 0)))))();
}

uint64_t sub_23C1CC65C()
{
  uint64_t v4 = (*(uint64_t (**)(void, void))(v3 + 8 * (v0 ^ 0x404)))(*(void *)(v1 + 3792), 0);
  *(void *)(v2 + 169) = v4;
  return (*(&off_26EFDBE20
          + (int)(((v4 == 0) * (((((v0 ^ 0x38D) - 1770144698) & 0xFFEF6F6F) + 1771230592) ^ v0 ^ 0xE1)) ^ v0 ^ 0x38D)))();
}

uint64_t sub_23C1CC6DC()
{
  char v0 = STACK[0x5F7];
  int v1 = *(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28));
  unint64_t v2 = 1394700225
     * ((1394700225 * ((v1 ^ LODWORD(STACK[0x660])) & 0x7FFFFFFF)) ^ ((1394700225
                                                                     * ((v1 ^ LODWORD(STACK[0x660])) & 0x7FFFFFFFu)) >> 16));
  char v3 = byte_23C214E80[v2 >> 24];
  LODWORD(STACK[0x668]) = v1;
  char v4 = v3 ^ v0 ^ byte_23C2107A0[(v2 >> 24) + 2] ^ byte_23C212CF0[(v2 >> 24) + 1] ^ v2 ^ (-9 * BYTE3(v2));
  LOBYTE(STACK[0x66F]) = v4;
  LODWORD(STACK[0x670]) = ((2 * v4) & 0xB207DCFE) + (v4 ^ 0xD903EE7F);
  return (*(&off_26EFDBE20 + ((492 * (v4 > 47)) ^ LODWORD(STACK[0x65C]))))();
}

uint64_t sub_23C1CC7DC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LOBYTE(STACK[0x66F]) >= ((((LODWORD(STACK[0x658]) - 51) & 0x2D) + 49) & 0x7Fu))
                                * (((LODWORD(STACK[0x658]) - 1878261701) | 0x6612902) ^ (v0 + 30))) ^ LODWORD(STACK[0x658]))))();
}

uint64_t sub_23C1CC840()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LOBYTE(STACK[0x66F]) > (((v0 - 5) | 0xA) ^ 0x4Eu))
                                * (((v0 - 471) | 0xC4) ^ 0xD8)) ^ v0)))();
}

uint64_t sub_23C1CC88C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((506 * (LOBYTE(STACK[0x66F]) < (((v0 ^ 0xB3) - v1 - 55) ^ 0xCu))) ^ v0)))();
}

uint64_t sub_23C1CC8C8@<X0>(int a1@<W8>)
{
  char v3 = *(uint64_t (**)(void))(v2
                           + 8
                           * (int)((35
                                  * (((LODWORD(STACK[0x650]) + 2003710397) & (LODWORD(STACK[0x670])
                                                                            - 1493430468
                                                                            + ((v1 + a1 - 1036) | 0xCu))) >> 31)) ^ (v1 + a1 - 969)));
  LODWORD(STACK[0x6BC]) = v1 + a1 - 1236;
  return v3();
}

void sub_23C1CC9B4()
{
  int v4 = STACK[0x6BC];
  LODWORD(STACK[0x6C0]) = STACK[0x6BC];
  int v5 = v4 ^ (v1 - 218);
  LODWORD(STACK[0x6C4]) = v5;
  int v6 = 7 * (v5 ^ (v1 - 51));
  LODWORD(STACK[0x6C8]) = v6;
  int v7 = (16 * LODWORD(STACK[0x650]) - (((LODWORD(STACK[0x650]) << (v6 ^ 0x40)) + 767965088) & 0x2C5F97E0) - 1928140856) ^ 0x162FCBF8 | (v0 - 1181923102);
  uint64_t v8 = v2[517] + LODWORD(STACK[0xA38]) - 295922807;
  unint64_t v9 = 1394700225
     * ((1394700225 * ((v8 ^ LODWORD(STACK[0x668])) & 0x7FFFFFFF)) ^ ((1394700225
                                                                                   * ((v8 ^ LODWORD(STACK[0x668])) & 0x7FFFFFFF)) >> 16));
  LOBYTE(STACK[0x4AB]) = byte_23C214E80[v9 >> 24] ^ byte_23C2107A0[(v9 >> 24) + 2] ^ byte_23C212CF0[(v9 >> 24) + 1] ^ (v7 - ((2 * v7) & 0x72) - 71) ^ v9 ^ (-9 * ((1394700225 * ((1394700225 * ((v8 ^ LODWORD(STACK[0x668])) & 0x7FFFFFFF)) ^ ((1394700225 * ((v8 ^ LODWORD(STACK[0x668])) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ 0xB9;
  v2[20] = *(void *)(v3 + 8 * (v4 ^ 0x4B9));
  v2[21] = v8;
  JUMPOUT(0x23C1BFAD0);
}

uint64_t sub_23C1CCAE8@<X0>(int a1@<W8>)
{
  int v5 = a1 ^ (v1 + 506);
  (*(void (**)(void))(v3 + 8 * (a1 ^ 0x41E)))(*(void *)(v2 + 4136));
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(void *)(v4 + 64) != 0) * (((v5 + 1771230005) | 0x7F) - 53)) ^ (v5 + 1771231006))))();
}

uint64_t sub_23C1CCB14(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  char v45 = a1 + v43;
  int v46 = a1 + v43 - 530;
  (*(void (**)(uint64_t, uint64_t))(a2 + 8 * (v43 ^ (v43 - 478))))(a43, 3312658705);
  int v47 = (*(&off_26EFDBE20 + (v43 ^ (v43 - 486))))();
  unsigned int v48 = v47 - 2087771140 - ((v47 << (v45 - 13)) & 0x71E47F8);
  LODWORD(xmmword_268B98018) = v48;
  unsigned int v49 = v48 ^ 0x838F23FE ^ (v48 >> 30);
  *(_DWORD *)(v44 + 4) = ((1812433253 * v49) ^ 0xFDEB4F4C)
                       + ((-670100790 * v49) & 0xFBD69E98)
                       - 2
                       * ((((1812433253 * v49) ^ 0xFDEB4F4C) + ((-670100790 * v49) & 0xFBD69E98) + 840216757) & (((v46 + 2146429947) & 0x801010DB) + 59712300) ^ (((101 * v49) ^ 0x4C) + ((-54 * (_BYTE)v49) & 0x98) - 91) & 3)
                       - 2052860751;
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + v46))(798607269);
}

void sub_23C1CCC94()
{
}

uint64_t sub_23C1CCCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int *a41,_DWORD *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  uint64_t v51 = (*(uint64_t (**)(int *, void))(a8 + 8 * (v48 ^ 0x50F)))(a41, 0);
  int v52 = *a41;
  int v53 = (2 * *a41) & 0x71E47F8;
  a42[1] = a42[6] - 2087771140 - ((a42[6] << (v48 ^ 0xD2)) & 0x71E47F8);
  a42[2] = v52 - 2087771140 - v53;
  int v54 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + (v48 ^ 0x6FD)))(v51);
  a42[3] = v54 - 2087771140 - ((2 * v54) & 0x71E47F8);
  int v55 = (*(&off_26EFDBE20 + v48 + 1371))();
  **(_DWORD **)(v49 + 201) = v55 - 2087771140 - ((2 * v55) & 0x71E47F8);
  int v56 = (DWORD1(xmmword_268B98018) ^ 0xBE58698 ^ (1664525
                                                * (xmmword_268B98018 ^ 0x428EB41E ^ ((xmmword_268B98018 >> 30) | 0xC10197E0))
                                                - ((3329050
                                                  * (xmmword_268B98018 ^ 0x428EB41E ^ ((xmmword_268B98018 >> 30) | 0xC10197E0))) & 0x10D54AC8)
                                                - 2006276764))
      + (*(_DWORD *)STACK[0x1500] ^ 0x838F23FC);
  unsigned int v57 = (v56 ^ 0xBDDFFEED) + 1942663415 + ((2 * v56) & 0x7BBFFDDA);
  DWORD1(xmmword_268B98018) = v57 - 2 * ((v57 + 39145500) & 0x38F23FF ^ v57 & 3) + 1373926424;
  STACK[0x458] = (unint64_t)*(&off_26EFDBE20 + (int)((v48 ^ 0x966D2D98) + 1771230045));
  LODWORD(STACK[0x470]) = ((v48 ^ 0x966D2D98) + 1959225726) ^ 0xC6;
  *(_DWORD *)(v50 - 192) = 1431737413 * ((((v50 - 200) | 0xA339A29F) - ((v50 - 200) & 0xA339A29F)) ^ 0x1D673D8D)
                         + 40706419
                         + (v48 ^ 0x966D2D98);
  LODWORD(STACK[0x460]) = (v48 ^ 0x966D2D98) + 1959225726;
  LODWORD(STACK[0x474]) = ((v48 ^ 0x966D2D98) + 1959225726) ^ 0xB1;
  STACK[0x468] = 749489522;
  STACK[0x480] = 749489520;
  LODWORD(STACK[0x478]) = 0;
  STACK[0x22C8] = (unint64_t)&STACK[0x458];
  uint64_t v58 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + (int)(v48 ^ 0x966D2D98 ^ a48)))(v50 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v50 - 188)))(v58);
}

uint64_t sub_23C1CCFF0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((932 * (v2 >= 0x2CAC4D70)) ^ (v1 - 1771231024))))();
}

uint64_t sub_23C1CD04C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((932 * (v2 <= 0x2CAC4FDF)) ^ (v1 - 1771231024))))();
}

uint64_t sub_23C1CD0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  int v55 = v48 - 934651700;
  *int v53 = v53[623];
  int v56 = v48 + 183182726;
  STACK[0x458] = *(void *)(v49 + 8 * (v56 ^ 0x1FFFFFFFD90DFACCLL));
  STACK[0x468] = 3563447648;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = v56 ^ 0x35;
  LODWORD(STACK[0x474]) = v56;
  LODWORD(STACK[0x478]) = v56 + 86;
  STACK[0x480] = (v51 + 1620784234);
  *(_DWORD *)(v54 - 192) = 1431737413 * ((v50 - 1736483159 - 2 * (v50 & 0x987F5EA9)) ^ 0x2621C1BB) + 40706419 + v55;
  STACK[0x22C8] = v52;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v55 ^ a48)))(v54 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v54 - 188)))(v57);
}

uint64_t sub_23C1CD1B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((28 * (((v2 < 0xD465E560) ^ 0xA3) & 1)) ^ 0x2A3)))();
}

uint64_t sub_23C1CD224(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (28 * (v2 <= 0xD465E563) + 675)))();
}

uint64_t sub_23C1CD29C@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  unsigned int v44 = (a2 + 2047559996) & 0x85F4B4E7;
  *(_DWORD *)(*(void *)(v42 + 201) + 4 * (v43 - 1942663613 + v44)) ^= 0x4EA5DB78 ^ *(_DWORD *)(a40
                                                                                                 + 4
                                                                                                 * (v43
                                                                                                  - 1942663613
                                                                                                  + v44));
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v40 + ((v44 - v40 + 1209014263) & 0xB7EFED4F) - 1530) * (v41 != 993438529)) ^ v44)))();
}

void sub_23C1CD358()
{
}

uint64_t sub_23C1CD368@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *uint64_t v4 = v4[623];
  return (*(uint64_t (**)(void))(a1
                              + 8 * ((678 * (v3 - 1 == (((a2 ^ 0x2FB) - 183) | 0x21) - v2 - 976031999)) ^ a2 ^ 0x2FB)))();
}

uint64_t sub_23C1CD3C4@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  uint64_t v46 = 4 * (v42 - 510135244);
  unsigned int v47 = *(_DWORD *)(v44 + 4 * (v42 - 510135245));
  int v48 = (*(_DWORD *)(v44 + v46) ^ 0xA1AC81C5 ^ (1566083941 * (v47 ^ 0x838F23FE ^ (v47 >> 30))
                                              - ((984684234 * (v47 ^ 0x838F23FE ^ (v47 >> 30))) & 0x44474472)
                                              + 572760633))
      - v42;
  *(_DWORD *)(v44 + v46) = v48 - ((2 * v48 + 80746392) & 0x71E47F8) - 1577635896;
  STACK[0x458] = *(void *)(a1 + 8 * (a2 + 1771230078));
  STACK[0x468] = 3205397072;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = (a2 - 916918303) ^ 0xA1;
  LODWORD(STACK[0x474]) = a2 - 916918303;
  LODWORD(STACK[0x478]) = (a2 - 916918303) ^ 0x2D;
  STACK[0x480] = (v42 - 1599705467);
  *(_DWORD *)(v45 - 192) = 1431737413 * ((v45 - 200) ^ 0xBE5E9F12) + 40706419 + a2;
  *(void *)(v43 + 448) = &STACK[0x458];
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 ^ a42)))(v45 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v45 - 188)))(v49);
}

uint64_t sub_23C1CD538(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (2 * (v2 < 0xBF0E7A50) + 572)))();
}

uint64_t sub_23C1CD57C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (2 * (v2 > 0xBF0E7CBF) + 572)))();
}

uint64_t sub_23C1CD5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v49 = v47 + v46 - 49;
  LODWORD(xmmword_268B98018) = 59712508;
  (*(void (**)(uint64_t))(a2 + 8 * (v46 + 1523)))(a46);
  int8x16_t v50 = (int8x16_t)vld1q_dup_f32((const float *)v48);
  v51.i64[0] = 0x8000000080000000;
  v51.i64[1] = 0x8000000080000000;
  v52.i64[0] = 0x100000001;
  v52.i64[1] = 0x100000001;
  v53.i64[0] = -1;
  v53.i64[1] = -1;
  v54.i64[0] = 0x400000004;
  v54.i64[1] = 0x400000004;
  v55.i64[0] = *(void *)(v48 + 4);
  v55.i32[2] = *(_DWORD *)(v48 + 4 * ((v49 + 1771230394) - 514));
  int8x16_t v56 = vextq_s8(v50, v55, 0xCuLL);
  int8x16_t v57 = v55;
  v57.i32[3] = *(_DWORD *)(v48 + 16);
  int8x16_t v58 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v56, v51), (int8x16_t)vdupq_n_s32(0x8608C008)), vdupq_n_s32(0x2B212022u));
  int8x16_t v59 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v57, (int8x16_t)vdupq_n_s32(0x25044FB8u)), (int8x16_t)vdupq_n_s32(0x84040E99)), (int32x4_t)veorq_s8(vandq_s8(v57, (int8x16_t)vdupq_n_s32(0x5AFBB046u)), (int8x16_t)vdupq_n_s32(0x58E2B047u))), v52), (int8x16_t)vdupq_n_s32(0xC1CA1673)), v53);
  int32x4_t v60 = (int32x4_t)veorq_s8(vorrq_s8(v59, vandq_s8(v58, v51)), (int8x16_t)vdupq_n_s32(0x1EA38B50u));
  int32x4_t v61 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v60, (int8x16_t)vdupq_n_s32(0x58AB1ACFu)), vandq_s8(v59, v54));
  v62.i32[0] = *((_DWORD *)&STACK[0x2110] + (*(_DWORD *)(v48 + 4) & 1));
  v62.i32[1] = *((_DWORD *)&STACK[0x2110] + (*(_DWORD *)(v48 + 8) & 1));
  v62.i32[2] = *((_DWORD *)&STACK[0x2110] + (*(_DWORD *)(v48 + 4 * ((v49 + 1771230394) - 514)) & 1));
  v62.i32[3] = *((_DWORD *)&STACK[0x2110] + (v57.i8[12] & 1));
  *(int8x16_t *)uint64_t v48 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v48 + 1588), v62), (int8x16_t)vdupq_n_s32(0xFD3C4455)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v60, vaddq_s32(v61, v61)), vdupq_n_s32(0xD8AB1ACB)), 1uLL));
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + v49 + 1771230393))(1771231427);
}

uint64_t sub_23C1CD630(uint64_t a1, uint64_t a2)
{
  *uint64_t v4 = v4[623];
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((335 * (((74 * (v2 ^ 0x1C5) - 1073746587) & 0xD66D3DDF ^ (v3 - 1551)) + v5 == 706433408)) ^ (74 * (v2 ^ 0x1C5)))))();
}

uint64_t sub_23C1CD69C(int a1, uint64_t a2)
{
  uint64_t v5 = 4 * (v3 - 712437010);
  unsigned int v6 = *((_DWORD *)&xmmword_268B98018 + (v3 - 712437011));
  int v7 = (*(_DWORD *)((char *)&xmmword_268B98018 + v5) ^ 0x3AD3D364 ^ (1566083941 * (v6 ^ 0x838F23FE ^ (v6 >> 30))
                                                                   - ((984684234 * (v6 ^ 0x838F23FE ^ (v6 >> 30))) & 0x72B9E130)
                                                                   - 1185091432))
     - v3;
  *(_DWORD *)((char *)&xmmword_268B98018 + v5) = v7 - ((2 * v7 + 82696740) & 0x71E47F8) - 1375334130;
  STACK[0x458] = *(void *)(a2 + 8 * (v2 + 1771230045));
  STACK[0x468] = (v3 + 516941949);
  STACK[0x480] = 1229378958;
  LODWORD(STACK[0x460]) = v2 + 443479814;
  LODWORD(STACK[0x470]) = v2 + 443479907;
  LODWORD(STACK[0x474]) = (v2 + 443479814) ^ 0x6F;
  LODWORD(STACK[0x478]) = 0;
  *(_DWORD *)(v4 - 192) = 1431737413 * ((v4 - 200) ^ 0xBE5E9F12) + 40706419 + v2;
  STACK[0x22C8] = (unint64_t)&STACK[0x458];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v2 ^ (a1 - 518))))(v4 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v4 - 188)))(v8);
}

uint64_t sub_23C1CD820(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * (((2 * (v2 < 0x4946D58E)) | (32 * (v2 < 0x4946D58E))) ^ (v3 + 1771230327))))(2523737419);
}

uint64_t sub_23C1CD868(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * (int)(((v2 > ((225 * (v3 ^ (v3 - 2))) ^ 0x4946D63Fu))
                                                   * (((v3 - 1706140013) & 0xCF447627) - 484)) ^ (v3 + 1771230327))))(2523737419);
}

uint64_t sub_23C1CD8D8@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v43 = a2 - 384;
  int v44 = v43 - v42 + 1416;
  LODWORD(xmmword_268B98018) = 59712508;
  (*(void (**)(uint64_t))(a1 + 8 * (v43 ^ 0x6A2)))(a42);
  int8x16_t v45 = (int8x16_t)vld1q_dup_f32((const float *)&xmmword_268B98018);
  v46.i64[0] = 0x8000000080000000;
  v46.i64[1] = 0x8000000080000000;
  v47.i64[0] = *(void *)((char *)&xmmword_268B98018 + 4);
  v47.i32[2] = HIDWORD(xmmword_268B98018);
  int8x16_t v48 = vextq_s8(v45, v47, 0xCuLL);
  int8x16_t v49 = v47;
  v49.i32[3] = dword_268B98028[0];
  int8x16_t v50 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v48, v46), (int8x16_t)vdupq_n_s32(0x97CDC564)), vdupq_n_s32(0xB34E854u));
  int32x4_t v51 = (int32x4_t)veorq_s8(vandq_s8(v49, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x130B2351u));
  int32x4_t v52 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v51, (int32x4_t)veorq_s8(vandq_s8(v49, (int8x16_t)vdupq_n_s32(0x4A67B450u)), (int8x16_t)vdupq_n_s32(0xC8649400))), (int32x4_t)vandq_s8((int8x16_t)v51, (int8x16_t)vdupq_n_s32(0x4A67B451u))), (int8x16_t)vdupq_n_s32(0xDAE3B4FC));
  v53.i32[0] = *((_DWORD *)&STACK[0x1808] + (DWORD1(xmmword_268B98018) & ((((v44 ^ 0x966D2FBD) - 686) | 0xA3) - 234)));
  v53.i32[1] = *((_DWORD *)&STACK[0x1808] + (BYTE8(xmmword_268B98018) & 1));
  v53.i32[2] = *((_DWORD *)&STACK[0x1808] + (BYTE12(xmmword_268B98018) & 1));
  v53.i32[3] = *((_DWORD *)&STACK[0x1808] + (dword_268B98028[0] & 1));
  xmmword_268B98018 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B9864C, v53), (int8x16_t)vdupq_n_s32(0x9E66764u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v52, vandq_s8(v50, v46)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v52, v52), (int8x16_t)vdupq_n_s32(0x9E065C74))), vdupq_n_s32(0xCF032E3B)), 1uLL));
  return (*(&off_26EFDBE20 + (int)(v44 ^ 0x966D2FBD)))();
}

uint64_t sub_23C1CD954()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 + 269)))(*(void *)(v2 + 416));
  uint64_t v4 = v3 ^ 0x7676F7AF9DDD6F3FLL;
  unint64_t v5 = (2 * v3) & 0xECEDEF5F3BBADE7ELL;
  uint64_t v6 = (*(&off_26EFDBE20 + (v1 ^ 0x2DA)))();
  return (*(&off_26EFDBE20
          + ((484
            * (v4 + (v6 ^ 0x2E02220C009826D4) + v5 - ((2 * v6) & (26 * (v1 ^ 0x4D7u) - 0x5C04441801305082)) == 0xA47919BB9E759613)) ^ v1)))();
}

uint64_t sub_23C1CDA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  char v62 = (*(uint64_t (**)(void, uint64_t, char *))(v60 + 8 * (v61 | 0x238)))(*(void *)(v59 + 416), 4, &a59);
  return (*(&off_26EFDBE20
          + ((((((v62 << ((v61 ^ 0xD8) + 41)) & 0xF6) + (v62 ^ 0xFB)) == 251) * ((v61 + 138) ^ 0x48C)) ^ v61)))();
}

uint64_t sub_23C1CDAD0()
{
  LODWORD(STACK[0x360]) = 172727081;
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x2AC)))(8, 3533575369);
  STACK[0x17C8] = v2;
  return (*(&off_26EFDBE20 + (((v2 == 0) * ((v1 - 434) ^ (61 * (v1 ^ 0x481)) ^ 3)) ^ v1)))();
}

uint64_t sub_23C1CDB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unint64_t a59)
{
  int8x16_t v64 = *(unsigned char **)(v59 + 648);
  *int8x16_t v64 = (HIBYTE(a59) - ((a59 >> 55) & 0x56) - 85) ^ ((v61 ^ 0xB7) - 125);
  v64[1] = (BYTE6(a59) - ((a59 >> 47) & 0xC) - 122) ^ 0x86;
  v64[2] = (BYTE5(a59) - ((a59 >> 39) & 0x9C) + 78) ^ 0x4E;
  v64[3] = (BYTE4(a59) - ((a59 >> 31) & 0x8A) - 59) ^ 0xC5;
  v64[4] = (BYTE3(a59) - ((a59 >> 23) & 0xE4) - 14) ^ 0xF2;
  v64[5] = (BYTE2(a59) - ((a59 >> 15) & 0x66) - 77) ^ 0xB3;
  v64[6] = ((~(a59 >> 7) | 0xD1) + BYTE1(a59) + 24) ^ 0x17;
  v64[7] = (a59 - ((2 * a59) & 0x40) + 32) ^ 0x20;
  uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 8 * (v61 + 902)))(8, 50, 4144237431);
  *(void *)(v63 + 1) = v65;
  int8x16_t v66 = *(&off_26EFDBE20 + ((62 * (v65 == 0)) ^ v61));
  LODWORD(STACK[0x4AC]) = v61;
  v62[23] = 0x7287928EB92D5CA8;
  v62[24] = 0x41994617049C2194;
  v62[25] = 0x3E538CF68334DCD1;
  return v66();
}

uint64_t sub_23C1CDD0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(a2
                                                     + 8
                                                     * (((4
                                                        * ((((((v2 - 79) & 0x27) + 73) | 1) + 60) & 1)) & 0xDF | (32 * ((((((v2 - 1250785359) & 0x4A8D7D27) - 1809506231) | 0x2480801) + 1771230268) & 1))) ^ (v2 - 1250785359) & 0x4A8D7D27)))(STACK[0x17C8]);
}

uint64_t sub_23C1CDD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(a32) = v67;
  HIDWORD(a38) = v66;
  LODWORD(a40) = v64;
  int8x16_t v68 = off_268B98010;
  LOBYTE(STACK[0x183A]) = *off_268B98010 - 112;
  LOBYTE(STACK[0x183B]) = v68[1] - 112;
  LOBYTE(STACK[0x183C]) = v68[2] - 112;
  LOBYTE(STACK[0x183D]) = v68[3] + ((v65 - 21) ^ 0xD4);
  LOBYTE(STACK[0x183E]) = ((v65 - 81) | 0x43) + v68[4] + 69;
  LOBYTE(STACK[0x183F]) = v68[5] - 112;
  LOBYTE(STACK[0x1840]) = v68[6] - 112;
  LOBYTE(STACK[0x1841]) = v68[7] - 112;
  LOBYTE(STACK[0x1842]) = v68[8] - 112;
  LOBYTE(STACK[0x1843]) = v68[9] - 112;
  LOBYTE(STACK[0x1844]) = v68[10] - 112;
  LOBYTE(STACK[0x1845]) = v68[11] - 112;
  LOBYTE(STACK[0x1846]) = v68[12] - 112;
  LOBYTE(STACK[0x1847]) = v68[13] - 112;
  LOBYTE(STACK[0x1848]) = v68[14] - 112;
  LOBYTE(STACK[0x1849]) = v68[15] - 112;
  LOBYTE(STACK[0x184A]) = v68[16] - 112;
  LOBYTE(STACK[0x184B]) = v68[17] - 112;
  LOBYTE(STACK[0x184C]) = v68[18] - 112;
  LOBYTE(STACK[0x184D]) = v68[19] - 112;
  LOBYTE(STACK[0x184E]) = v68[20] - 112;
  LOBYTE(STACK[0x184F]) = v68[21] - 112;
  LOBYTE(STACK[0x1850]) = off_268B98010[22] - 112;
  uint64_t v69 = (*(uint64_t (**)(void))(v63 + 8 * (int)(v65 ^ 0x578)))();
  uint64_t v70 = ((uint64_t (*)(void, unint64_t *, uint64_t))*(&off_26EFDBE20 + (int)(v65 ^ 0x55C)))(0, &STACK[0x183A], v69);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)((200 * (v70 != 0)) ^ v65)))(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           v65,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_23C1CDF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v34 = (*(uint64_t (**)(uint64_t, void))(v33 + 8 * ((v32 | 0x100) ^ 0x358)))(a1, 0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)(((v34 != 0) * ((((v32 | 0x100) - 1771231225) ^ 0x966D2F18) - 584)) | v32 | 0x100)))(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_23C1CDFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v39 = STACK[0x250];
  uint64_t v40 = (char *)&STACK[0x18A0] + STACK[0x250];
  STACK[0x250] += 64;
  HIDWORD(a35) = 62;
  HIDWORD(a32) = 30;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (v38 ^ (32 * (&STACK[0x2140] == 0)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           ((void)v40 << (((v38 + 74) & 0x77) + ((v38 - 51) | 0xDFu) - 16)) & 0x10 ^ 0xB7DFBFC7EDBFFD97,
           (char *)&STACK[0x18A0] + v39,
           v37,
           v39,
           a1,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_23C1CE06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v32 ^ 0x4CD)))(a31);
  uint64_t v34 = v33 ^ ((v32 ^ 0x32E) + 268) ^ 0x7F37F72D97FD98B8;
  unint64_t v35 = (2 * v33) & 0xFE6FEE5B2FFB37FELL;
  uint64_t v36 = (*(&off_26EFDBE20 + v32 + 1278))();
  return (*(&off_26EFDBE20
          + ((44 * (v35 + v34 + (v36 ^ 0x828301003032000) - ((2 * v36) & 0xEFAF9FDFF9F9BFFELL) != 0x8760273D9B00BBFFLL)) ^ v32)))();
}

uint64_t sub_23C1CE144()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 925)))(v2);
  uint64_t v4 = v3 ^ 0x7E17BF6D9DFD2F6FLL;
  unint64_t v5 = (2 * v3) & 0xFC2F7EDB3BFA5EDELL;
  uint64_t v6 = (*(&off_26EFDBE20 + (v1 ^ 0x425)))();
  return (*(&off_26EFDBE20
          + ((81
            * (v4
             + v5
             - ((2 * v6) & 0xDFFA3BFDFFFF76BELL)
             + (v6 ^ (4 * ((v1 + 1622073282) & 0x9F511ED6 ^ 0xE2)) ^ 0x1002E20100004478) == 0x8E1AA16E9DFD740FLL)) ^ v1)))();
}

uint64_t sub_23C1CE228()
{
  int v4 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0x500)))(v2);
  int v5 = v4 - (((34 * (v1 ^ 0xC7)) ^ 0x6C5C0EEE) & (2 * v4)) - 1238497740;
  LODWORD(STACK[0x120C]) = v5 ^ 0xBC659D15;
  LODWORD(STACK[0x3CC]) = v5 ^ 0xBC659D15;
  uint64_t v6 = ((uint64_t (*)(void, uint64_t))*(&off_26EFDBE20 + v1 + 1362))(v5 ^ 0xB62E0634, 2381541563);
  *(void *)(v3 + 3608) = v6;
  return (*(&off_26EFDBE20 + (((4 * (v6 == 0)) | (8 * (v6 == 0))) ^ v1)))();
}

uint64_t sub_23C1CE2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v34 = (void *)(a28 + a27 + 0x4820403812400279);
  *uint64_t v34 = 0;
  v34[1] = ((2 * v33) & 0x17FD3EFFELL)
         - 0x24EBF9CEBFE9F7FFLL
         + (v33 ^ (50 * (v32 ^ 0x281)) ^ 0x24EBF9CEBFE9F6A1);
  (*(void (**)(uint64_t, void))(v31 + 8 * (v32 + 922)))(a31, 0);
  uint64_t v35 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (v32 ^ 0x4A3)))(v33, 50, 1449183640);
  STACK[0x14B0] = v35;
  return (*(&off_26EFDBE20 + (((4 * (v35 == 0)) | (16 * (v35 == 0))) ^ v32)))();
}

uint64_t sub_23C1CE3EC(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = (v3 & 0x1EB6E9C9ELL) + ((v2 - 342) ^ 0x112AA0070F3AC90) + (v5 ^ 0xFEED55FFF5B74E4FLL);
  *(void *)(v4 + 3976) = v6;
  *(unsigned char *)(v4 + 3991) = v6 < 0x66AAFAE7;
  int v7 = *(uint64_t (**)(void))(a2 + 8 * ((58 * (v6 != 1722481383)) ^ v2));
  LODWORD(STACK[0x8AC]) = v2;
  *(void *)(v4 + 1208) = 0xE6E3EB1FA8DEAEALL;
  *(void *)(v4 + 1216) = 0x3E6B89E4244FF096;
  *(void *)(v4 + 1224) = 0x7980F03ED23A917FLL;
  return v7();
}

void sub_23C1CE4A8()
{
  uint64_t v2 = v0[153];
  v0[154] = v2;
  uint64_t v3 = v0[152];
  v0[155] = v3;
  v0[156] = v0[151];
  int v4 = STACK[0x8AC];
  LODWORD(STACK[0x8E4]) = STACK[0x8AC];
  LODWORD(STACK[0x8E8]) = v4 - 342;
  unsigned int v5 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ (v3 + *(_DWORD *)(v1 + 121) - 609218710)) & 0x7FFFFFFF);
  unint64_t v6 = 1394700225 * ((v5 >> ((v4 - 86) ^ 0x18)) ^ v5);
  LOBYTE(STACK[0x4AB]) = byte_23C20F760[v6 >> 24] ^ *(unsigned char *)(v2 + v0[451] - 0x7980F03ED23A917FLL) ^ byte_23C20EC30[(v6 >> 24) + 2] ^ byte_23C20FD90[v6 >> 24] ^ v6 ^ (23 * ((1394700225 * ((v5 >> ((v4 - 86) ^ 0x18)) ^ v5)) >> 24));
  JUMPOUT(0x23C1B0190);
}

uint64_t sub_23C1CE5A4()
{
  (*(void (**)(uint64_t))(v0 + 8 * (v2 + v1 + 40)))(v3);
  *(void *)(v5 + 448) = *(void *)(v4 + 8 * (v1 + 1771230063))
                        - 591644117
                        * ((((2 * (v6 - 200)) | 0x8477F5200305A3F4) - (v6 - 200) + 0x3DC4056FFE7D2E06) ^ 0x2620DA599A879BBDLL);
  *(_DWORD *)(v6 - 176) = -922504226
                        - 591644117 * ((((2 * (v6 - 200)) | 0x305A3F4) - (v6 - 200) - 25350650) ^ 0x9A879BBD)
                        + v1;
  *(void *)(v5 + 464) = &unk_268B98000;
  (*(void (**)(uint64_t))(v4 + 8 * (v1 + 1771231434)))(v6 - 200);
  return 4294922296;
}

uint64_t sub_23C1CE5C4()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 752)))(v2);
  unint64_t v4 = ((v3 << ((v1 - 77) & 0xB7 ^ 0xB3)) & 0x9FE37AFBBDD7AFF6) + (v3 ^ 0x4FF1BD7DDEEBD7FBLL);
  STACK[0x12F8] = v4;
  uint64_t v5 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20 + v1 + 735))(v4 - 0x4FF1BD7DDEEBD7FALL, 2663297126);
  STACK[0x1300] = v5;
  STACK[0x240] = v5;
  return (*(&off_26EFDBE20
          + (((8 * (((v1 - 72) ^ (v5 == 0)) & 1)) & 0xEF | (16
                                                                           * (((v1 - 72) ^ (v5 == 0)) & 1))) ^ v1)))();
}

uint64_t sub_23C1CE6B4()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 | 0x500)))(v2);
  uint64_t v4 = v3 ^ 0x7636F72FB4FF0F77;
  unint64_t v5 = (2 * v3) & 0xEC6DEE5F69FE1EEELL;
  uint64_t v6 = (*(&off_26EFDBE20 + (v1 ^ 0x6C9)))();
  return (*(&off_26EFDBE20
          + ((812
            * (v4
             + (v1 ^ 0xD2)
             + 245
             + v5
             + ((119 * (v1 ^ 0xD2)) ^ (unint64_t)v6 ^ 0x8082B0000AA07A0)
             - ((2 * v6) & 0xEFEFA9FFFEABF9F2) == 0x7E3F222FB5A9137CLL)) ^ v1)))();
}

uint64_t sub_23C1CE7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  char v33 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *))(v31 + 8 * (v32 + 402)))(a31, 4, &STACK[0x3D0]);
  return (*(&off_26EFDBE20
          + ((30 * (((((v32 ^ 0x59) + ((v32 + 91) | 0x92) - 23) ^ v33) + ((2 * v33) & 0xF7)) != 123)) ^ v32)))();
}

uint64_t sub_23C1CE81C()
{
  LODWORD(STACK[0x3CC]) = 172727081;
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x2B5)))(8, 3533575369);
  STACK[0x1648] = v2;
  return (*(&off_26EFDBE20 + ((((((v1 - 755) ^ (v2 == 0)) & 1) == 0) * ((v1 - 1266080916) & 0x4B76D8FF ^ 0xC3)) ^ v1)))();
}

uint64_t sub_23C1CE8B4()
{
  uint64_t v2 = (unsigned char *)STACK[0x1648];
  *uint64_t v2 = (HIBYTE(STACK[0x3D0]) - ((STACK[0x3D0] >> 55) & 0xD8) + 108) ^ 0x6C;
  v2[1] = ((v1 | 0x14) + HIWORD(STACK[0x3D0]) - ((STACK[0x3D0] >> 47) & 0x7A) - 119) ^ 0x3D;
  v2[2] = (((unsigned __int16)WORD2(STACK[0x3D0]) >> 8) - ((STACK[0x3D0] >> 39) & 0xE8) - 12) ^ 0xF4;
  v2[3] = (HIDWORD(STACK[0x3D0]) - ((STACK[0x3D0] >> 31) & 0xF2) + 121) ^ 0x79;
  v2[4] = (HIBYTE(LODWORD(STACK[0x3D0])) - ((LODWORD(STACK[0x3D0]) >> 23) & 8) + 4) ^ 4;
  v2[5] = (HIWORD(LODWORD(STACK[0x3D0])) - ((LODWORD(STACK[0x3D0]) >> 15) & 0x32) - 103) ^ 0x99;
  v2[6] = (BYTE1(LODWORD(STACK[0x3D0])) - ((LODWORD(STACK[0x3D0]) >> 7) & 0xF6) - 5) ^ 0xFB;
  v2[7] = (LOBYTE(STACK[0x3D0]) - ((2 * LOBYTE(STACK[0x3D0])) & 0x72) - 71) ^ 0xB9;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8 * ((v1 | 0x214) ^ 0x591)))(8, 50, 2311911504);
  STACK[0x16A0] = v3;
  uint64_t v4 = *(&off_26EFDBE20 + ((121 * (v3 == 0)) ^ (v1 | 0x214)));
  LODWORD(STACK[0x73C]) = v1 | 0x214;
  STACK[0x740] = 0x2B038AAFBB7FC7B5;
  STACK[0x748] = 0xE17A6A651CC34B7;
  STACK[0x750] = 0x66FD549F74A83E99;
  return v4();
}

uint64_t sub_23C1CEA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(STACK[0x288]) = v3;
  return (*(uint64_t (**)(void))(a2
                                           + 8
                                           * ((99
                                             * (((8 << (((v4 + 16) | 0x21) - 60)) & ((((v4 + 528) | 0x21) - 135) ^ 0x192C8)) != 8)) ^ ((v4 + 528) | 0x21))))(*(void *)(a3 + 264));
}

void sub_23C1CEAE8()
{
}

uint64_t sub_23C1CEBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * ((((((8 * v39) ^ 0xC18) + 107748954) | 0x90010D49) == -1771229877) | (16 * (((((8 * v39) ^ 0xC18) + 107748954) | 0x90010D49) == -1771229877)) | (8 * v39) ^ 0xC18)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           v40,
           a1,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a28 + a27 + 0x4820403812400279 + 16,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_23C1CED24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 720) = 0x166497AF8F6C2770;
  LODWORD(STACK[0x364]) = *(_DWORD *)(v5 + 2520) - 452853308;
  uint64_t v10 = *(unsigned int *)(v7 + 2544);
  v6[12] = *(void *)(a2 + 8 * (v3 + 1771230073));
  v6[14] = 1516397565;
  LODWORD(STACK[0x460]) = v3 - 1272268328;
  LODWORD(STACK[0x470]) = v3 - 1272268200;
  v6[17] = v10;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = v3 - 1272268173;
  *(void *)(v8 + 448) = &STACK[0x458];
  *(_DWORD *)(v9 - 192) = 1431737413 * ((v9 - 200) ^ 0xBE5E9F12) + 40706419 + v3;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v3 ^ (v4 - 518))))(v9 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v9 - 188)))(v11);
}

uint64_t sub_23C1CEE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v44 = v41 + v42;
  int v45 = v41 + v42 - 1091;
  (*(void (**)(uint64_t, uint64_t))(a4 + 8 * (v42 ^ (v42 - 478))))(a41, 3312658705);
  int v46 = (*(&off_26EFDBE20 + v44 + 32))();
  unsigned int v47 = v46 + (v45 ^ 0x838F2237) - ((2 * v46) & 0x71E47F8);
  LODWORD(xmmword_268B98018) = v47;
  unsigned int v48 = v47 ^ 0x838F23FE ^ (v47 >> 30);
  uint64_t v49 = (1812433253 * v48) ^ 0xBEF7A9FF;
  uint64_t v50 = (1477382858 * v48) & 0x7DEF53FE;
  uint64_t v51 = 2
      * ((((1812433253 * v48) ^ 0xBEF7A9FF) + ((1477382858 * v48) & 0x7DEF53FE) + 621303298) & ((v45 + 379) ^ 0x38F20BB) ^ (~(101 * (_BYTE)v48) - 54 * (_BYTE)v48 - 58) & 1);
  *(_DWORD *)(v43 + 4) = v49 + v50 - v51 - 996705794;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v45))(37, 598405574, v49, v50, v51, *(&off_26EFDBE20 + v45), 3298261502, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

void sub_23C1CEF78()
{
}

uint64_t sub_23C1CEF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  v6.i64[0] = *(void *)(v5 + 4);
  v6.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v10 = vextq_s8(v7, v6, 0xCuLL);
  int8x16_t v11 = v6;
  v11.i32[3] = *(_DWORD *)(v5 + 16);
  int32x4_t v12 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xB7548E29)), v9), (int8x16_t)vdupq_n_s32(0xFCCBB8BE));
  int32x4_t v13 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0xC8199718)), v12), vdupq_n_s32(0x9BF33474)), (int8x16_t)vdupq_n_s32(0x2C1CDEE6u));
  v14.i32[0] = *((_DWORD *)&STACK[0x1810] + (*(_DWORD *)(v5 + 4) & 1));
  v14.i32[1] = *((_DWORD *)&STACK[0x1810] + (*(_DWORD *)(v5 + 8) & 1));
  v14.i32[2] = *((_DWORD *)&STACK[0x1810]
               + (*(_DWORD *)(v5 + 12) & (((((v4 + 623) ^ 0x966D2D4B) - 1512794243) & 0x5A2B67BF) - 557)));
  v14.i32[3] = *((_DWORD *)&STACK[0x1810] + (v11.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v14), (int8x16_t)vdupq_n_s32(0xA5EB5C3A)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v13, vbicq_s8(v8, v10)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0xAA1DED28))), vdupq_n_s32(0x550EF694u)), 1uLL));
  return (*(uint64_t (**)(void))(a4 + 8 * (int)((v4 + 623) ^ 0x966D2D4E)))();
}

uint64_t sub_23C1CFB3C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, int a4@<W5>, unsigned int a5@<W8>)
{
  int8x16_t v8 = (unsigned int *)(v7 + 4 * (v6 + a1));
  uint64_t v9 = v6 + 1;
  int v10 = *(_DWORD *)(v7 + 4 * (v9 + a1));
  unsigned int v11 = ((v10 & (a4 + ((a5 + 84) | 0x18) + 2470) ^ 0xB7548E29) - 1) ^ 0xFCCBB8BE;
  unsigned int v12 = (((2 * v11) | 0xC8199718) - v11 - 1678560140) ^ 0x2C1CDEE6;
  *int8x16_t v8 = v8[397] ^ *((_DWORD *)&STACK[0x1810] + (v10 & 1)) ^ (((v12 | ~v5 & 0x80000000)
                                                            - ((2 * v12) & 0xAA1DED28)
                                                            + 1427043988) >> 1) ^ 0xA5EB5C3A;
  return (*(uint64_t (**)(void))(a2 + 8 * ((184 * (v9 != a3 + 3)) ^ a5)))();
}

uint64_t sub_23C1CFC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int8x16_t v8 = (const float *)&dword_268B983A4;
  int8x16_t v9 = (int8x16_t)vld1q_dup_f32(v8);
  v10.i64[0] = 0x8000000080000000;
  v10.i64[1] = 0x8000000080000000;
  v11.i64[0] = -1;
  v11.i64[1] = -1;
  v12.i64[0] = 0x1000000010;
  v12.i64[1] = 0x1000000010;
  v7.i64[0] = *(void *)&dword_268B983A8;
  v7.i32[2] = dword_268B983B0;
  int8x16_t v13 = vextq_s8(v9, v7, 0xCuLL);
  int8x16_t v14 = v7;
  v14.i32[3] = *(_DWORD *)(v6 + 4 * (((v4 + 294) | 0x20u) ^ 0x307));
  int8x16_t v15 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v14, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x59AF61BFu)), v11);
  int8x16_t v16 = veorq_s8(v15, (int8x16_t)vdupq_n_s32(0x5A204242u));
  int32x4_t v17 = (int32x4_t)veorq_s8(vandq_s8(v16, (int8x16_t)vdupq_n_s32(0x2707BABDu)), vandq_s8(v15, v12));
  int8x16_t v18 = (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(vbicq_s8(v10, v13), v16), vaddq_s32(v17, v17)), vdupq_n_s32(0x2707BAADu)), 1uLL);
  v16.i32[0] = *(_DWORD *)(v5 + 4 * (dword_268B983A8 & 1));
  v16.i32[1] = *(_DWORD *)(v5 + 4 * (unk_268B983AC & 1));
  v16.i32[2] = *(_DWORD *)(v5 + 4 * (dword_268B983B0 & 1));
  v16.i32[3] = *(_DWORD *)(v5 + 4 * (v14.i8[12] & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v16), (int8x16_t)vdupq_n_s32(0x9CEFFA26)), v18);
  return (*(uint64_t (**)(void))(a4 + 8 * v4))();
}

void sub_23C1CFD54()
{
}

uint64_t sub_23C1CFD60@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v3 = (((((*v2 & 0x7FFFFFFE ^ 0xC288448) & 0x1D3C6F18) - (*v2 & 0x7FFFFFFE ^ 0xC288448 | 0x9D3C6F19)) ^ 0xD43C3270) - 1) ^ 0xB9580522;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x1810] + (*v2 & 1)) ^ (((((((((a2 + 67699042) | 0x92642809) ^ 0xB4C93E71)
                                                                      + ((a2 - 2044453791) | 0x10490D0A)) ^ v2[623] & 0x80000000)
                                                                    - 50856203) & 0x80000000 | v3)
                                                                  - ((2 * v3) & 0x393ADD9C)
                                                                  + 480079567) >> 1) ^ 0x81229017;
  return (*(uint64_t (**)(void))(a1 + 8 * ((29 * (LODWORD(STACK[0x364]) < 0x270)) ^ a2)))();
}

uint64_t sub_23C1CFE7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v10 = v4;
  int v11 = LODWORD(STACK[0x364])++;
  *(_DWORD *)(v5 + 2520) = v11 + 452853309;
  uint64_t v12 = (*(_DWORD *)(v7 + 2544) + 2010852194);
  v6[12] = *(void *)(a4 + 8 * (v10 + 1771230078));
  v6[14] = 3527249759;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = v10 - 1659514621;
  LODWORD(STACK[0x474]) = v10 - 1659514573;
  LODWORD(STACK[0x478]) = v10 - 1659514594;
  v6[17] = v12;
  *(_DWORD *)(v9 - 192) = 1431737413
                        * ((((v9 - 200) | 0x5AE23257) - (v9 - 200) + ((v9 - 200) & 0xA51DCDA8)) ^ 0xE4BCAD45)
                        + 40706419
                        + v10;
  *(void *)(v8 + 448) = &STACK[0x458];
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v10 + a3)))(v9 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v9 - 188)))(v13);
}

uint64_t sub_23C1CFF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,uint64_t a43)
{
  if (v44 >= v45) {
    int v48 = *(_DWORD *)(v47 + 2544) + 1;
  }
  else {
    int v48 = 1516397565;
  }
  *(_DWORD *)(v47 + 2544) = v48;
  int v49 = v43 ^ (v43 >> 11);
  unsigned int v50 = (((v49 << 7) ^ 0xCFA90C00) - ((2 * ((v49 << 7) ^ 0xCFA90C00)) & 0xE25A9B00) - 248689191) & 0x9D2C5680 ^ 0x1245600;
  unsigned int v51 = (497913527 - (v50 | 0x1DAD8EB7) + (v50 | 0xE2527148)) ^ 0xE2586BCD;
  unsigned int v52 = (v51 - ((2 * v51) & 0xE3E57CD2) - 235749783) ^ v49;
  unsigned int v53 = (((v52 << 15) ^ 0xF23A0000) - ((2 * ((v52 << 15) ^ 0xF23A0000)) & 0x74870000) + 977509069) & 0xEFC60000 ^ 0x39061801;
  unsigned int v54 = (v53 - ((2 * v53) & 0x760C0000) - 1156160484) ^ v52;
  unsigned int v55 = v54 ^ (v54 >> 18) ^ 0xB93701AD;
  *(unsigned char *)(a43 + (a42 - 1855556006)) = ((v55 ^ v46) - ((2 * (v55 ^ v46)) & 0xDC) + 110) ^ 0xCB;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((750
                                * (a42 - (((v55 ^ v46) - ((2 * (v55 ^ v46)) & 0xDC) + 110) != 0xCB) == 1855556005)) ^ 0x1B6)))();
}

uint64_t sub_23C1D00EC(uint64_t a1, uint64_t a2)
{
  STACK[0x1808] = 0xF76F40A66E67F079;
  LODWORD(STACK[0x2D0]) = *(_DWORD *)(v4 + 2520) - 452853308;
  uint64_t v8 = dword_268B989F0;
  v5[12] = *(void *)(a2 + 8 * (v2 + 1771230073));
  v5[14] = 1516397565;
  LODWORD(STACK[0x460]) = v2 + 565625447;
  LODWORD(STACK[0x470]) = v2 + 565625498;
  v5[17] = v8;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = (v2 + 565625498) ^ 0xD1;
  *(void *)(v6 + 448) = &STACK[0x458];
  *(_DWORD *)(v7 - 192) = 1431737413 * ((v7 - 1523856494 - 2 * ((v7 - 200) & 0xA52BCC5A)) ^ 0x1B755348) + 40706419 + v2;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v2 + v3)))(v7 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v7 - 188)))(v9);
}

uint64_t sub_23C1D0200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v47 = v45 + a5;
  (*(void (**)(uint64_t, uint64_t))(a4 + 8 * (v47 + 24)))(a45, 3312658705);
  int v48 = (*(&off_26EFDBE20 + v47 + 32))();
  LODWORD(xmmword_268B98018) = v48 - 2087771140 - ((2 * v48) & 0x71E47F8);
  int v49 = xmmword_268B98018 ^ 0x838F23FE ^ (xmmword_268B98018 >> 30);
  uint64_t v50 = (1812433253 * v49) ^ 0xAE073FFF;
  uint64_t v51 = (1477382858 * v49) & 0x5C0E7FFE;
  uint64_t v52 = (2 * (v50 + v51 + 1771355723) + 13108078) & 0x71E47F8;
  *(_DWORD *)(v46 + 4) = v50 + v51 - 712514562 - v52;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_26EFDD518[0])(105, 1771355723, v50, v51, v52, qword_26EFDD518[0], v46, &off_26EFDBE20, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

void sub_23C1D0350()
{
}

uint64_t sub_23C1D0524@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v8 = (unsigned int *)(v7 + 4 * (v3 + a1));
  unsigned int v9 = (v4 & 0x80000000 ^ 0x97CDC564) + 188016724;
  uint64_t v10 = v3 + 1;
  int v11 = *(_DWORD *)(v7 + 4 * (v10 + a1));
  unsigned int v12 = ((v11 & 0x7FFFFFFE ^ (((a3 + 69477436) | 0x78810210) - 1771701222))
       + (v11 & v6 ^ 0xC8649400)
       - ((v11 & 0x7FFFFFFE ^ (((a3 + 69477436) | 0x78810210) - 1771701222)) & (v6 + 1))) ^ 0xDAE3B4FC;
  *uint64_t v8 = v8[397] ^ *((_DWORD *)&STACK[0x1808] + (v11 & 1)) ^ (((v12 | v9 & 0x80000000)
                                                            - ((2 * v12) & 0x9E065C74)
                                                            - 821875141) >> 1) ^ 0x9E66764;
  return (*(uint64_t (**)(void))(a2 + 8 * ((497 * (v10 == v5 + 3)) ^ a3)))();
}

uint64_t sub_23C1D0620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  signed int v8 = (v5 - 806134557) & 0xB3677FE7;
  unsigned int v9 = (const float *)&dword_268B983A4;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(v9);
  uint64_t v11 = (v8 - 52) ^ 0x328;
  v12.i64[0] = 0x8000000080000000;
  v12.i64[1] = 0x8000000080000000;
  v7.i64[0] = *(void *)&dword_268B983A8;
  v7.i32[2] = *(_DWORD *)(v6 + 4 * v11);
  int8x16_t v13 = vextq_s8(v10, v7, 0xCuLL);
  int8x16_t v14 = v7;
  v14.i32[3] = dword_268B983B4;
  int8x16_t v15 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v13, v12), (int8x16_t)vdupq_n_s32(0x85212204)), vdupq_n_s32(0x972BEC6D));
  int32x4_t v16 = (int32x4_t)veorq_s8(vandq_s8(v14, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x10407BF2u));
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v16, v16), (int8x16_t)vdupq_n_s32(0x283579A4u)), v16), vdupq_n_s32(0xEBE5432D)), (int8x16_t)vdupq_n_s32(0xF82A1B23));
  v18.i32[0] = *(_DWORD *)(v4 + 4 * (dword_268B983A8 & 1));
  v18.i32[1] = *(_DWORD *)(v4 + 4 * (unk_268B983AC & 1));
  v18.i32[2] = *(_DWORD *)(v4 + 4 * (*(_DWORD *)(v6 + 4 * v11) & 1));
  v18.i32[3] = *(_DWORD *)(v4 + 4 * (dword_268B983B4 & 1));
  *(int8x16_t *)&dword_268B983A4 = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_268B98018, v18), (int8x16_t)vdupq_n_s32(0xEE1393Fu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v17, veorq_s8(v15, (int8x16_t)vdupq_n_s32(0x9C4D0E70))), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), (int8x16_t)vdupq_n_s32(0x821B2518))), vdupq_n_s32(0xC10D928C)), 1uLL));
  return (*(uint64_t (**)(void))(a4 + 8 * v8))();
}

void sub_23C1D07AC()
{
}

uint64_t sub_23C1D07B8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v3 = (((*v2 & 0x7FFFFFFE ^ 0x77D73B3B) + 0x7FFFFFFF) & (((a2 + 306456957) | 0x84290000)
                                                        + ((a2 - 1805648779) | 0x20D2D08)
                                                        + 1394976104) | v2[623] & 0x80000000) ^ 0xF45818C6;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x1808] + (*v2 & 1)) ^ ((v3 - ((2 * v3) & 0xB6B23D44) + 1532567203) >> 1) ^ 0x43CB7F28;
  return (*(uint64_t (**)(void))(a1 + 8 * ((25 * (LODWORD(STACK[0x2D0]) > 0x26F)) ^ a2)))();
}

uint64_t sub_23C1D089C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(STACK[0x2D0]) = 0;
  int v10 = LODWORD(STACK[0x2D0])++;
  *(_DWORD *)(v6 + 2520) = v10 + 452853309;
  uint64_t v11 = (dword_268B989F0 + 1755097085);
  v7[12] = *(void *)(a4 + 8 * (v5 + 1771230045));
  v7[14] = v11;
  v7[17] = 3271494650;
  LODWORD(STACK[0x460]) = v5 + 574098948;
  LODWORD(STACK[0x470]) = (v5 + 574098948) ^ 0x27;
  LODWORD(STACK[0x474]) = v5 + 574098993;
  LODWORD(STACK[0x478]) = 0;
  *(_DWORD *)(v9 - 192) = 1431737413
                        * ((644274477 - ((v9 - 200) | 0x2666D92D) + ((v9 - 200) | 0xD99926D2)) ^ 0x67C7B9C0)
                        + 40706419
                        + v5;
  *(void *)(v8 + 448) = &STACK[0x458];
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 ^ (a5 - 518))))(v9 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v9 - 188)))(v12);
}

uint64_t sub_23C1D0FC4()
{
  if (v0 >= v1) {
    int v2 = dword_268B989F0 + 1;
  }
  else {
    int v2 = 1516397565;
  }
  dword_268B989F0 = v2;
  return sub_23C1D1128(4132849499);
}

uint64_t sub_23C1D1128@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(v6 + (a3 - 469882479)) = (((v5 ^ a1) >> (v4 + 55))
                                                   - (((v5 ^ a1) >> (v4 + 55) << (((a4 ^ 0x42) - 116) ^ (a4 + 73))) & 0xEE)
                                                   - 9) ^ 0xCA;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((762
                                * (a3
                                 - ((((v5 ^ a1) >> (v4 + 55))
                                                    - (((v5 ^ a1) >> (v4 + 55) << (((a4 ^ 0x42) - 116) ^ (a4 + 73))) & 0xEE)
                                                    - 9) != 0xCA) == v7)) ^ a4)))();
}

uint64_t sub_23C1D11A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((1517 * (v5 + 8 == ((a3 + v6 + 1110385004) & 0x2763B1FF ^ a5))) ^ v6)))();
}

uint64_t sub_23C1D11F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(uint64_t),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unint64_t a48)
{
  STACK[0x3B0] = v48;
  STACK[0x2B0] = a48;
  return a34(a41);
}

uint64_t sub_23C1D1214(uint64_t a1, uint64_t a2, int a3)
{
  int v3 = (a3 + 586950900) & 0x4696ADED;
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 8 * (a3 ^ (a3 - 476))))();
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * (int)(((LODWORD(STACK[0x2EC]) == 0)
                                                   * (((v3 - 1247507118) & 0x4A5B6FAD) + ((v3 - 25556636) ^ 0xFE7A0DA9))) ^ v3)))(v5);
}

uint64_t sub_23C1D12E8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  int v56 = a1 + 25555868;
  LODWORD(STACK[0x2198]) = a54;
  *(void *)(v55 + 136) = a35;
  unsigned int v57 = (a1 + 374883438) & 0xEB2DAF9E;
  STACK[0x250] = STACK[0x14F8];
  (*(void (**)(unint64_t))(v54 + 8 * (a1 + 25557157)))(STACK[0x12A8]);
  uint64_t v58 = ((uint64_t (*)(void))*(&off_26EFDBE20 + v56 + 1258))(LODWORD(STACK[0x12A4]));
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + ((120 * (v57 == 414)) ^ v56)))(v58);
}

uint64_t sub_23C1D13AC()
{
  LODWORD(STACK[0x2188]) = -2099564601;
  STACK[0x1778] = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 1160)))(1024, 1684792360);
  STACK[0x1780] = ((uint64_t (*)(uint64_t, uint64_t))*(&off_26EFDBE20 + (v0 ^ 0x7B8)))(1025, 1147003021);
  int v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + (v0 ^ 0x7BB));
  STACK[0x1788] = v2(1024, 50, 138142778);
  uint64_t v3 = v2(1025, 50, 4102885001);
  STACK[0x1790] = v3;
  if (STACK[0x1778]) {
    BOOL v4 = STACK[0x1780] == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v7 = v4 || STACK[0x1788] == 0 || v3 == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((53 * (((((v0 ^ 0x5EA) - 122) ^ v7) & 1) == 0)) ^ v0)))();
}

uint64_t sub_23C1D14B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * ((((((v3 ^ 0x31A) + 100994082) | 0x90682049) == -1771229877)
                                                                                  * (((v3 ^ 0x31A) + 794) ^ 0xD3)) ^ v3 ^ 0x31A)))(2523737419, 1251116186, a3, 177710878, 1251117210);
}

uint64_t sub_23C1D1608@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 143836789) & 0x9EFFEF4B) + ((v1 - 1771231017) ^ 0xFFFFFE1F)) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_23C1D165C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v1 + a1 - 635) ^ (73 * (v2 == 0)))))();
}

uint64_t sub_23C1D1688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = v3 + v4;
  uint64_t v8 = (*(uint64_t (**)(void))(v6 + 8 * (v3 + v4 + 22)))(*(void *)(a3 + 576));
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((v7 - 350) ^ (118 * (v5 != 0)))))(v8);
}

uint64_t sub_23C1D16CC()
{
  int v4 = v0 + v1;
  uint64_t v5 = (*(uint64_t (**)(unint64_t))(v3 + 8 * (v0 + v1 + 2)))(STACK[0x1788]);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((v4 - 1238) ^ (97 * (v2 == 0)))))(v5);
}

uint64_t sub_23C1D171C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = v3 + v4;
  uint64_t v8 = (*(uint64_t (**)(void))(v6 + 8 * (v3 + v4 + 22)))(*(void *)(a3 + 568));
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((v7 - 635) ^ (73 * (v5 == 0)))))(v8);
}

uint64_t sub_23C1D1768()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v0 + v1 - 350) ^ (118 * (v2 != 0)))))();
}

uint64_t sub_23C1D1790()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v0 + v1 - 1238) ^ (97 * (v2 == 0)))))();
}

uint64_t sub_23C1D17BC()
{
  (*(void (**)(unint64_t))(v1 + 8 * (int)(v0 ^ 0x966D2B5B)))(STACK[0x1790]);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v2 + 136) == 0) * (((v0 + 1771230138) | 0x28) ^ 0x16D)) ^ (v0 + 1771230573))))();
}

uint64_t sub_23C1D18E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = &STACK[0x2140]
     + 3 * ((v5 - 772) | 0x310u)
     + 3 * ((a1 - 1523933950) ^ 0xDBFBF3FDF3FDAB37)
     + 3 * ((2 * (a1 - 1523933950)) & 0xB7F7E7FBE7FB566ELL)
     + 0xC0C24062406F450;
  *(_DWORD *)uint64_t v6 = v4;
  *(&STACK[0x2140] + 3 * a1 - 0x1108028F9) = 0;
  *((_DWORD *)v6 + 4) = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1661 * (a1 + 1 == v2 + 12)) ^ v5)))();
}

uint64_t sub_23C1D198C()
{
  int v3 = (void *)(STACK[0x13E0] + STACK[0x13D8] - 0x75998FEA2B80EF74 + (v1 + 890041804));
  *int v3 = 0;
  v3[1] = (v2 ^ 0xFF57F91FDDEABF3ELL)
        + ((((v1 - 1220) | 0x20u) + 0x1BBD57E4CLL) & (2 * v2))
        + 0xA806E0221540C2;
  (*(void (**)(unint64_t, void))(v0 + 8 * (v1 + 332)))(STACK[0x16E0], 0);
  uint64_t v4 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v1 + 337))(v2, 50, 2414120074);
  STACK[0x11A0] = v4;
  return (*(&off_26EFDBE20 + ((54 * (v4 != 0)) ^ v1)))();
}

uint64_t sub_23C1D1A90(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (v4 ^ 0x75E2FD7BEDDFF367) + (v5 & 0x1DBBFE6CELL) + (v2 + v3 - 406) - 0x75E2FD7BB8D2F8F7;
  STACK[0x1530] = v7;
  LOBYTE(STACK[0x153F]) = v7 < 0x350CFAA0;
  uint64_t v8 = *(uint64_t (**)(void))(a2
                           + 8 * ((22 * ((((v2 - v7) | (v7 - v2)) & 0x8000000000000000) == 0)) ^ ((int)v2 + v3)));
  LODWORD(STACK[0xD84]) = v2 + v3;
  v6[306] = 0x211F5C99363C4F9FLL;
  v6[307] = 0x3F9277A712BE31F5;
  v6[308] = 0x496E80EFBEC681E8;
  return v8();
}

void sub_23C1D1B68()
{
}

void sub_23C1D1BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[308];
  v2[309] = v3;
  uint64_t v4 = v2[307];
  v2[310] = v4;
  v2[311] = v2[306];
  int v5 = STACK[0xD84];
  LODWORD(STACK[0xDBC]) = STACK[0xD84];
  int v6 = (v5 - 316920842) & 0x12E3D273;
  LODWORD(STACK[0xDC0]) = v6;
  uint64_t v7 = v4 + v2[437] - 0x3F9277A712BE31F5;
  unsigned int v8 = 1394700225 * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ v7) & 0x7FFFFFFF);
  unint64_t v9 = (v8 ^ HIWORD(v8)) * (v6 ^ 0x53216FF1);
  LOBYTE(STACK[0x4AB]) = byte_23C20F760[v9 >> 24] ^ *(unsigned char *)(v3 + v2[495] - 0x496E80EFBEC681E8) ^ byte_23C20EC30[(v9 >> 24) + 2] ^ byte_23C20FD90[v9 >> 24] ^ v9 ^ (23 * BYTE3(v9));
  v2[20] = *(void *)(a2 + 8 * (v5 ^ 0x4BA));
  v2[21] = v7;
  JUMPOUT(0x23C1D1CBCLL);
}

uint64_t sub_23C1D1CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((2013 * (v4 == ((38 * (v3 ^ 0x3C6) - 340) ^ (v3 - 599)))) ^ v3)))();
}

uint64_t sub_23C1D1D10@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W8>)
{
  int v5 = (_DWORD *)STACK[0x1558];
  *(void *)STACK[0x1550] = STACK[0x1568];
  *int v5 = STACK[0x1564];
  int v6 = 6 * (a3 ^ 0x145) - 1771230231;
  LODWORD(STACK[0x2230]) = -2099564593;
  int v7 = 6 * (a3 ^ 0x145) - 209;
  int v8 = v6 - a2;
  int v9 = 6 * (a3 ^ 0x145) - 166;
  unint64_t v10 = 591644117 * ((v4 - 200) ^ 0xE41B20C99B054A47);
  *(void *)(v3 + 448) = *(void *)(a1 + 8 * v9) - v10;
  *(_DWORD *)(v4 - 176) = -922504226 - v10 + v6;
  *(void *)(v3 + 464) = &STACK[0x4398FF68D079C213];
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (6 * (a3 ^ 0x145) + 1203)))(v4 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + (v9 ^ 0x343 ^ ((*(_DWORD *)(v4 - 192) == (v7 ^ 0x91)) * (v8 + 1745)))))(v11);
}

uint64_t sub_23C1D1D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = 7 * (v4 ^ 0x2CD);
  STACK[0x1770] = (v7 ^ 0x39F78219u) + v5;
  *(void *)(v6 + 3368) = 972522176;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((58
                                * (*(unsigned char *)(*(void *)(v6 + 3512)
                                            + (((972522176 << (v7 - 91 + ((v7 - 18) & 0x3Fu) + 124))
                                              - 1945044352) & 0xFFFFFFFE)) == 0)) ^ v7)))();
}

uint64_t sub_23C1D1D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a3 + 8 * (v3 ^ 0x5E2)))();
  STACK[0x11B0] = v4;
  return (*(&off_26EFDBE20 + (((v4 == 0) * (((v3 - 792993861) & 0x2F441DE6 | 0x19) ^ (177 * (v3 ^ 0x3C2)))) | v3)))();
}

uint64_t sub_23C1D1E18(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v9 = v4 ^ (a4 - 290);
  LODWORD(STACK[0x2240]) = 172727073;
  v7[38] = 0;
  int v10 = v5 + v9;
  int v11 = v5 + v9 - 1405;
  int v12 = v9 - a4;
  int v13 = v10 - 1362;
  unint64_t v14 = 591644117 * ((v8 - 200) ^ 0xE41B20C99B054A47);
  v7[56] = *(void *)(a3 + 8 * (v10 - 1362)) - v14;
  *(_DWORD *)(v8 - 176) = v6 - v14 + v9;
  v7[58] = &STACK[0x4398FF68D079C213];
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v10 + 7)))(v8 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + (v13 ^ 0x343 ^ ((*(_DWORD *)(v8 - 192) == (v11 ^ 0x91)) * (v12 + 1745)))))(v15);
}

uint64_t sub_23C1D1E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((*(unsigned char *)(STACK[0x11B0] + v4) == 48) * (((v3 - 718385967) & 0x2AD1AFFA) - 264)) ^ v3)))();
}

uint64_t sub_23C1D1E84(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6 = (a4 + v4 - 354);
  uint64_t v7 = (*(uint64_t (**)(unint64_t))(a3 + 8 * (v4 ^ 0x729)))(STACK[0x11B0]);
  unint64_t v8 = (v6 ^ 0x1F757A7FA9D2D7D5 ^ v7) - 0x1F757A7E9958F7B0 + ((2 * v7) & 0x3EEAF4FE7F7FF53CLL);
  unint64_t v9 = ((v5 - 1846708178) ^ 0x3EBFDE67FBD6FFFCLL)
     - 0x3EBFDE67556FFD0ELL
     + (((v4 + 1467937884) & 0xA8810ED7 ^ 0x7D7FBCCFF7ADFB6ELL) & (2 * (v5 - 1846708178)));
  BOOL v10 = v8 < 0xA66702EE;
  BOOL v11 = v8 > v9;
  if (v9 < 0xA66702EE != v10) {
    BOOL v11 = v10;
  }
  return (*(&off_26EFDBE20 + ((1470 * v11) ^ v4)))();
}

uint64_t sub_23C1D1FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = (*(uint64_t (**)(void))(a3 + 8 * (v4 ^ 0x2DD)))(*(void *)(v3 + 3512));
  unsigned int v6 = ((3 * (v4 ^ 0x5D1) + 2122251297) & (2 * v5)) + (v5 ^ 0xBF3F7FFB);
  STACK[0x1550] = (unint64_t)&STACK[0x2238];
  STACK[0x1558] = (unint64_t)&STACK[0x2240];
  unsigned int v7 = (v6 + (((v4 ^ 0x611) - 1073889944) & 0xD66F6D5B ^ 0xBCA120DF) - ((2 * v6 - 2122252278) & 0xD4171B1E)) >> 1;
  LODWORD(STACK[0x1564]) = v7 ^ 0x7F4E5DE6;
  uint64_t v8 = ((uint64_t (*)(void, uint64_t, uint64_t))*(&off_26EFDBE20 + (v4 ^ 0x611) + 926))(v7 ^ 0x7505C6C7, 50, 4244180354);
  STACK[0x1568] = v8;
  return (*(&off_26EFDBE20 + (((2 * (v8 != 0)) | ((v8 != 0) << 6)) ^ v4 ^ 0x611)))();
}

uint64_t sub_23C1D20E0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v67 = a2 + a4 - 1314;
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (a4 ^ (a4 - 476))))(a67);
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * (((a50 == 0) * ((7 * (v67 ^ 0xD5)) ^ 0x85)) ^ v67)))(v69);
}

uint64_t sub_23C1D2110@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  *(_DWORD *)(v58 + 2520) = a57 + 452853309;
  uint64_t v61 = (*(_DWORD *)(a2 + 2544) - 1540141976);
  v57[12] = *(void *)(a1 + 8 * ((a3 - 1130316918) ^ 0x530DE81CLL));
  v57[14] = 4271222885;
  LODWORD(STACK[0x460]) = 1;
  LODWORD(STACK[0x470]) = (a3 - 1130316918) & 0x5FBFFF89;
  LODWORD(STACK[0x474]) = a3 - 1130316918;
  LODWORD(STACK[0x478]) = a3 - 1130316943;
  v57[17] = v61;
  *(_DWORD *)(v60 - 192) = 1431737413 * ((~((v60 - 200) | 0xEA7A88D3) + ((v60 - 200) & 0xEA7A88D3)) ^ 0xABDBE83E)
                         + 40706419
                         + a3;
  *(void *)(v59 + 448) = &STACK[0x458];
  uint64_t v62 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a3 ^ a43)))(v60 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v60 - 188)))(v62);
}

uint64_t sub_23C1D221C()
{
  if (v0 >= v1) {
    int v2 = dword_268B989F0 + 1;
  }
  else {
    int v2 = 1516397565;
  }
  dword_268B989F0 = v2;
  return sub_23C1D2380();
}

uint64_t sub_23C1D2380@<X0>(int a1@<W1>, uint64_t a2@<X2>, unsigned int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a2 + 568) + (a4 - 1251116187)) = a5 ^ 0x24 ^ (((v6 ^ a3) >> (v5 - 53))
                                                                                   - (((v6 ^ a3) >> (v5 - 53) << ((8 * a5) ^ 0xD1)) & 0xA4)
                                                                                   - 46);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((1832
                                * (a4
                                 - ((a5 ^ 0x24 ^ (((v6 ^ a3) >> (v5 - 53))
                                                                                  - (((v6 ^ a3) >> (v5 - 53) << ((8 * a5) ^ 0xD1)) & 0xA4)
                                                                                  - 46)) != 0) == a1)) ^ a5)))();
}

uint64_t sub_23C1D2408()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 + 8 == (((v1 ^ 0x1F30) + 100994082) | 0x90682049) + 2082937610)
                                * (((v1 ^ 0x1F30) + 794) ^ 0xD3)) ^ v1 ^ 0x1F30)))();
}

uint64_t sub_23C1D2460(int a1)
{
  *(void *)(v4 + 8) = 0x86179EF9169C930;
  uint64_t v6 = dword_268B989F0;
  v2[12] = *(void *)(v3 + 8 * (v1 + 1771230073));
  v2[14] = 1516397565;
  LODWORD(STACK[0x460]) = (v1 + 735706766) ^ 0x51;
  LODWORD(STACK[0x470]) = v1 + 735706766;
  v2[17] = v6;
  LODWORD(STACK[0x474]) = 0;
  LODWORD(STACK[0x478]) = v1 + 735706734;
  *(void *)(v4 + 448) = &STACK[0x458];
  *(_DWORD *)(v5 - 192) = 1431737413
                        * ((((2 * ((v5 - 200) ^ 0x1AE58C55)) | 0x11D256D4) - ((v5 - 200) ^ 0x1AE58C55) - 149498730) ^ 0xAC52382D)
                        + 40706419
                        + v1;
  (*(void (**)(uint64_t))(v3 + 8 * (v1 ^ (a1 - 518))))(v5 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v5 - 188)))(1771231427);
}

uint64_t sub_23C1D2744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = (unsigned int *)(v8 + 4 * (v5 + v7));
  unsigned int v10 = (v6 & 0x80000000 ^ 0x8608C008) + 723591202;
  uint64_t v11 = v5 + 1;
  int v12 = *(_DWORD *)(v8 + 4 * (v11 + v7));
  unsigned int v13 = (((v12 & ((v4 - 323) ^ 0x25044F7A) ^ 0x84040E99) + (v12 & 0x5AFBB046 ^ 0x58E2B047) - 2) ^ 0xC1CA1673) - 1;
  *unint64_t v9 = v9[397] ^ *((_DWORD *)&STACK[0x2110] + (v12 & 1)) ^ ((((v13 | v10 & 0x80000000) ^ 0x1EA38B50)
                                                            - 2
                                                            * (((v13 | v10 & 0x80000000) ^ 0x1EA38B50) & 0x58AB1ACF ^ v13 & 4)
                                                            - 659875125) >> 1) ^ 0xFD3C4455;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1682 * (v11 == a4 + 3)) ^ v4)))();
}

uint64_t sub_23C1D284C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v5 = (const float *)&v3[56].i32[3];
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v5);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v4.i64[0] = v3[57].i64[0];
  v4.i32[2] = v3[57].i32[2];
  int8x16_t v8 = vextq_s8(v6, v4, 0xCuLL);
  int8x16_t v9 = v4;
  v9.i32[3] = v3[57].i32[3];
  int8x16_t v10 = vorrq_s8(vandq_s8(v8, v7), (int8x16_t)vdupq_n_s32(0x56D1911u));
  int32x4_t v11 = (int32x4_t)veorq_s8(vandq_s8(v9, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xA3CF00BA));
  int32x4_t v12 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0xA8810F5E)), v11), vdupq_n_s32(0xABBF7851)), (int8x16_t)vdupq_n_s32(0xF400A4E9));
  v13.i32[0] = *(_DWORD *)(v2 + 4 * (v3[57].i32[0] & 1));
  v13.i32[1] = *(_DWORD *)(v2 + 4 * (v3[57].i32[1] & 1));
  v13.i32[2] = *(_DWORD *)(v2 + 4 * (v3[57].i32[2] & 1));
  v13.i32[3] = *(_DWORD *)(v2 + 4 * (v9.i8[12] & 1));
  *(int8x16_t *)((char *)v3 + 4 * ((a2 + 261452293) & 0xF06A8FFB) - 1920) = veorq_s8(veorq_s8(veorq_s8(*v3, v13), (int8x16_t)vdupq_n_s32(0xCFBCBFEE)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v12, vandq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)veorq_s8(v10, (int8x16_t)vdupq_n_s32(0x48641810u)), (int32x4_t)vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x84010000))), (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x80641810)), (int8x16_t)vdupq_n_s32(0xA292A4E4))), v7)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x7B55DB7Au))), vdupq_n_s32(0xBDAAEDBD)), 1uLL));
  return (*(uint64_t (**)(void))(a1 + 8 * a2))();
}

void sub_23C1D29F4()
{
}

uint64_t sub_23C1D2A00(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unsigned int a62)
{
  unsigned int v64 = ((((*v63 & 0x7FFFFFFE ^ 0x766528D0) << (((v62 + 52) & 0x88) - 127)) | 0xCBEF797C)
       - (*v63 & 0x7FFFFFFE ^ 0x766528D0)
       - 1710734526) ^ 0x659DBCB3;
  unsigned int v65 = ((-489082753 - (v64 | 0xE2D9307F) + (v64 | 0x1D26CF80)) | (((v62 - a1 + 843) ^ 0x319F6730 ^ (v63[623] & 0x80000000 | 0x488C11B2))
                                                                 + 1109047558) ^ 0xB19914CF) ^ 0x68A6C4A1;
  v63[623] = v63[396] ^ *((_DWORD *)&STACK[0x2110] + (*v63 & 1)) ^ ((v65 - ((2 * v65) & 0x9BF68EAC) - 839170218) >> 1) ^ 0xF7946A9B;
  return (*(uint64_t (**)(void))(a2 + 8 * (((2 * (a62 > 0x26F)) | (8 * (a62 > 0x26F))) ^ v62)))();
}

uint64_t sub_23C1D2B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  return sub_23C1D2110(a2, a3, v61 - 295665973, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           0);
}

uint64_t sub_23C1D2B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46)
{
  STACK[0x3A8] = v46;
  STACK[0x388] = a46;
  STACK[0x1308] = *(void *)(a3 + 576) + 1;
  return (*(uint64_t (**)(void))(v48
                              + 8
                              * (((dword_268B989F4 == ((v47 - 1576735668) & 0x5DFB12DF) + 1714822513)
                                * (((v47 - 789) | 0x340) ^ 0x46C)) ^ v47)))();
}

uint64_t sub_23C1D2BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = (*(uint64_t (**)(void, char *))(v71 + 8 * (v70 ^ 0x490)))(0, &a70);
  return (*(&off_26EFDBE20
          + ((1769 * (((v72 << ((v70 ^ 0x74) + 92)) & 0xFD5CBA66) + (v72 ^ 0x7EAE5D33) == (v70 ^ 0x7EAE5FE2))) ^ v70)))();
}

uint64_t sub_23C1D2C50()
{
  strcpy((char *)&STACK[0x1851], "com_apple_driver_FairPlayIOKit");
  BOOL v2 = (*(uint64_t (**)(unint64_t *))(v1 + 8 * (v0 ^ 0x31Fu)))(&STACK[0x1851]) == 0;
  return (*(uint64_t (**)(void))(v1
                              + 8 * (int)((v2 * (((v0 - 1366284883) & 0x516FD7FD) + ((v0 - 385) ^ 0xFFFFFE39))) ^ v0)))();
}

uint64_t sub_23C1D2D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(v71 + 8 * (v70 + 899)))(a70, a1, &STACK[0x3C0]);
  return (*(uint64_t (**)(void))(v71
                              + 8
                              * (((((2 * v72) & 0xFF2FF526) + (v72 ^ 0xFF97FA93) == -6817133)
                                * (((v70 ^ 0x174) - 148) ^ 0x214)) ^ v70)))();
}

uint64_t sub_23C1D2D70()
{
  int v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 832)))(LODWORD(STACK[0x3C0]));
  return (*(&off_26EFDBE20
          + ((60
            * ((v2 ^ (53 * (((v0 + 336431) | 0x9668080B) ^ 0x966D2D47)) ^ 0x1FDADD17) + ((2 * v2) & 0x3FB5BED6) != 534437739)) ^ v0)))();
}

uint64_t sub_23C1D2DFC@<X0>(int a1@<W8>)
{
  uint64_t v3 = v1;
  int v4 = (*(uint64_t (**)(void, void, void, unint64_t *))(v1 + 8 * (v2 ^ 0x45B)))((a1 - 534437739), *MEMORY[0x263EF8960], 0, &STACK[0x27C]);
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((2 * v4) & 0xFCD7FFDE) + (v4 ^ 0xFE6BFFEF) == -26476561) * (v2 ^ 0x44D)) ^ v2)))();
}

uint64_t sub_23C1D2E90()
{
  *(_DWORD *)(v2 + 2548) = (LODWORD(STACK[0x27C]) ^ 0xFE77ACC2)
                         + 1740534656
                         + ((v3 ^ 0x6A8274CF) & (2 * LODWORD(STACK[0x27C])));
  ((void (*)(uint64_t))*(&off_26EFDBE20 + (v3 ^ (v0 - 495))))(v4);
  uint64_t v6 = ((uint64_t (*)(void))*(&off_26EFDBE20 + (int)(v3 ^ 0x966D2B5C)))(LODWORD(STACK[0x3C0]));
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (int)((71
                                                   * (*(_DWORD *)(v2 + 2548) == v1
                                                                              + ((244
                                                                                * ((311 * (v3 ^ 0x966D2D48)) ^ 0x3A1)
                                                                                - 975) | 0x158)
                                                                              + 376)) ^ (311 * (v3 ^ 0x966D2D48)))))(v6);
}

uint64_t sub_23C1D2F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int8x16_t v7 = (_DWORD *)STACK[0x1500];
  *int8x16_t v7 = 130;
  *(void *)(v3 + 3632) = v7 + 1;
  (*(void (**)(void))(v6 + 8 * (v4 ^ 0x5E2)))(*(void *)(a3 + 568));
  STACK[0x220] = 2052;
  BOOL v8 = ((uint64_t (*)(void, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t *))*(&off_26EFDBE20 + v4 + 624))((v4 - 631 + v5 - 1714823579), 33, STACK[0x1500], 2052, STACK[0x1500], &STACK[0x220]) != 0;
  return (*(&off_26EFDBE20 + ((v8 * (((v4 - 973) | 0x128) ^ 0x119)) ^ v4)))();
}

void sub_23C1D304C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (v3 - 42) | 0x24;
  int8x16_t v7 = *(void (**)(unint64_t, void, uint64_t))(v5 + 8 * (v3 ^ 0x719));
  v7(v4[454], *(void *)(a3 + 568), 1024);
  v7(STACK[0x1500] + 1028, v4[482], 1024);
  STACK[0x250] = STACK[0x14F8];
  STACK[0x16B0] = (unint64_t)&STACK[0x21B0];
  LODWORD(STACK[0x21B0]) = 172728097;
  LODWORD(STACK[0x77C]) = v6;
  v4[113] = 0xECDED5C0F2C31DELL;
  v4[114] = 0x254AD8729A1F209BLL;
  v4[115] = 0x27A4B425C0B18C0;
  unint64_t v8 = STACK[0x790];
  STACK[0x798] = STACK[0x790];
  unint64_t v9 = STACK[0x788];
  STACK[0x7A0] = STACK[0x788];
  STACK[0x7A8] = STACK[0x780];
  int v10 = STACK[0x77C];
  LODWORD(STACK[0x7B4]) = STACK[0x77C];
  LODWORD(STACK[0x7B8]) = v10 + 179;
  unint64_t v11 = v9 + STACK[0x1788] - 0x254AD8729A1F209BLL;
  unsigned int v12 = 1394700225 * ((v10 + 2147483354) & (*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ v11));
  unint64_t v13 = 1394700225 * (v12 ^ HIWORD(v12));
  LOBYTE(STACK[0x4AB]) = byte_23C20FC90[v13 >> 24] ^ *(unsigned char *)(v8 + STACK[0x1778] - 0x27A4B425C0B18C0) ^ byte_23C214C70[v13 >> 24] ^ byte_23C20EB30[v13 >> 24] ^ v13 ^ (31 * BYTE3(v13));
  STACK[0x498] = (unint64_t)*(&off_26EFDBE20 + (v10 ^ 0x4E7));
  STACK[0x4A0] = v11;
  JUMPOUT(0x23C1AC3F0);
}

void sub_23C1D3224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(v4 + 8 * (v3 + 1227)))(*(void *)(a3 + 568));
  ((void (*)(unint64_t))*(&off_26EFDBE20 + (v3 ^ 0x77D)))(STACK[0x1780]);
  ((void (*)(unint64_t))*(&off_26EFDBE20 + (v3 ^ 0x749)))(STACK[0x1788]);
  JUMPOUT(0x23C1D32ACLL);
}

uint64_t sub_23C1D32C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1986
                                * (((a3 + v7 + 31) ^ (v6 + 8 == ((v7 - 629727714) & 0x2588DFC9) + a6)) & 1)) ^ v7)))();
}

uint64_t sub_23C1D33A8(int a1, uint64_t a2, int a3)
{
  STACK[0x250] = 0;
  STACK[0x2F8] = v9;
  unint64_t v14 = qword_268B99310;
  if (qword_268B99310) {
    JUMPOUT(0x23C1D41D8);
  }
  unsigned int v15 = (v11 + 809490658) & 0xBF7D3DDF;
  qword_268B99310 = v10;
  dword_268B99318 = 255;
  do
  {
    *(_DWORD *)(v10 + 4 * v14) |= ~*(_DWORD *)(v10 + 4 * (*(_DWORD *)(v10 + 4 * v14) & 0x3ELL)) << 16;
    BOOL v16 = v14 >= 0x3B;
    v14 += 4;
  }
  while (!v16);
  byte_268B99308 = 1;
  int v3 = (a1 + v15 - 1478) | 0x305;
  int v4 = a1 + v15 - 1395;
  uint64_t v5 = *(void *)(a2 + 8 * v4);
  unint64_t v6 = 591644117
     * ((((v13 - 200) | 0xB2C8AEF4238A5EE6) - (v13 - 200) + ((v13 - 200) & 0x4D37510BDC75A118)) ^ 0x56D38E3DB88F14A1);
  *(_DWORD *)(v13 - 176) = v15 - v6 - 922504226;
  *(void *)(v12 + 464) = &unk_268B98000;
  *(void *)(v12 + 448) = v5 - v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (int)(v15 ^ (a3 - 493))))(v13 - 200);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + (v4 ^ 0x3AC ^ (122 * (*(_DWORD *)(v13 - 192) == v3 - 845)))))(v7);
}

uint64_t sub_23C1D3430()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 + 86001572) & 0x64728BBD ^ 0x24F ^ (**(void **)(v1 + 89) == 0)) & 1) == 0)
                                * (((v0 + 86001572) & 0x64728BBD) - 100)) ^ (v0 + 86001572) & 0x64728BBD)))();
}

uint64_t sub_23C1D34A8@<X0>(int a1@<W8>)
{
  STACK[0x250] = *(void *)(v2 + 488);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 ^ (v1 + (a1 ^ 0x6D) + 113)) & 1 | (16
                                                                                        * ((v3 ^ (v1 + (a1 ^ 0x6D) + 113)) & 1))) ^ a1)))();
}

uint64_t sub_23C1D34E4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v3
                                      + ((2 * (v2 ^ 0x5AB) - 536925203) & 0xB66DFF4F)
                                      + ((2 * (v2 ^ 0x5AB) + 541) | 0x44)
                                      - 1105)
                                     * (a1 == v1)) ^ (2 * (v2 ^ 0x5AB)))))();
}

uint64_t sub_23C1D3540()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8 * (v0 ^ 0x24A)))(25, 50, 4001751677);
  *(void *)(v1 + 161) = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((244 * (v3 != 0)) ^ v0)))();
}

void sub_23C1D35AC()
{
  STACK[0x16B8] = (unint64_t)&STACK[0x2160];
  LODWORD(STACK[0x10E8]) = v1;
  LODWORD(STACK[0x10EC]) = 1806704474;
  int v3 = STACK[0x10EC];
  LODWORD(STACK[0x10F0]) = STACK[0x10EC];
  int v4 = STACK[0x10E8];
  LODWORD(STACK[0x10F4]) = STACK[0x10E8];
  LODWORD(STACK[0x10F8]) = v4 ^ 0x966D29A6;
  LODWORD(STACK[0x10FC]) = v0 + v4 - 288;
  uint64_t v5 = *(void *)STACK[0x16B8];
  uint64_t v6 = v3 - 1806704474;
  v2[417] = v6;
  uint64_t v7 = v5 + v6;
  v2[418] = v7;
  v2[64] = v7;
  JUMPOUT(0x23C1D36A8);
}

void sub_23C1D3638()
{
  uint64_t v1 = v0[97];
  v0[98] = v1;
  v0[99] = v0[96];
  v0[100] = v0[95];
  int v2 = STACK[0x6EC];
  LODWORD(STACK[0x720]) = STACK[0x6EC];
  LODWORD(STACK[0x724]) = v2 ^ 0x227BFD99;
  uint64_t v3 = v1 + v0[462];
  v0[102] = v3 - 0x32E473C73DA21689;
  v0[64] = v3 - 0x7C2FAF8F7A9710EALL;
  JUMPOUT(0x23C1D36A4);
}

uint64_t sub_23C1D36B8()
{
  uint64_t v2 = v1[99];
  unsigned int v3 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8)) ^ LODWORD(STACK[0x728])) & 0x7FFFFFFF);
  unint64_t v4 = 1394700225 * (v3 ^ HIWORD(v3));
  unint64_t v5 = v4 >> (LODWORD(STACK[0x724]) + 9);
  *(unsigned char *)(v2 + v1[464] - 0x4C01A65E056BDEB8) = byte_23C2172F0[v5] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C20F990[v5] ^ byte_23C2112C0[v5 + 1] ^ v4 ^ (121 * v5);
  uint64_t v6 = v1[98];
  uint64_t v7 = v1[100];
  int v8 = v7 - 0xA6954B8D8A93740 < STACK[0x16D0];
  if ((LOBYTE(STACK[0x16DF]) ^ ((unint64_t)(v7 - 0xA6954B8D8A93740) < 0xDF5C0F5C))) {
    int v8 = LOBYTE(STACK[0x16DF]);
  }
  unint64_t v9 = *(&off_26EFDBE20 + ((92 * (v0 & ~v8)) ^ LODWORD(STACK[0x720])));
  LODWORD(STACK[0x6EC]) = STACK[0x720];
  v1[95] = v7 + 1;
  v1[96] = v2 + 1;
  v1[97] = v6 + 1;
  return v9();
}

uint64_t sub_23C1D380C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(void *)(v57 + 3696) = a56;
  LODWORD(STACK[0x1274]) = LODWORD(STACK[0x324]) + ((v56 + 303) ^ 0xAA0AE36B);
  uint64_t v59 = (*(uint64_t (**)(void))(v58 + 8 * (v56 ^ 0x55C)))();
  *(void *)(v57 + 3712) = v59;
  *a37 = v59;
  return (*(&off_26EFDBE20 + (((v59 == 0) * ((v56 + 213) ^ 0x493)) ^ v56)))();
}

uint64_t sub_23C1D3890()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 3696) == 0x494B3BC83CF4FA61)
                                * ((v0 - 275) ^ 0x7C1 ^ ((v0 - 1129) | 0x40F))) ^ v0)))();
}

uint64_t sub_23C1D38E0@<X0>(int a1@<W8>)
{
  unint64_t v4 = (v1 | ((unint64_t)(v1 < (((a1 + 2741354) | 0x2252260F) ^ 0x778EE631u)) << 32)) + 2305226526u;
  STACK[0x16D0] = v4;
  LOBYTE(STACK[0x16DF]) = v4 < 0xDF5C0F5C;
  unint64_t v5 = *(uint64_t (**)(void))(v3
                           + 8
                           * ((92
                             * ((v1 | ((unint64_t)(v1 < (((a1 + 2741354) | 0x2252260F) ^ 0x778EE631u)) << 32)) == 1442125886)) ^ a1));
  LODWORD(STACK[0x6EC]) = a1;
  v2[95] = 0xA6954B9B805469DLL;
  v2[96] = 0x4C01A65E056BDEB8;
  v2[97] = 0x32E473C73DA21689;
  return v5();
}

void sub_23C1D3998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,_DWORD *a36)
{
  *a36 = STACK[0x1274];
  JUMPOUT(0x23C1D39C4);
}

void sub_23C1D3A54()
{
}

uint64_t sub_23C1D3B0C@<X0>(int a1@<W8>)
{
  int v4 = a1 + 135;
  (*(void (**)(uint64_t))(v2 + 8 * (a1 ^ 0x598u)))(v1 - 0x494B3BC83CF4FA61);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v3 + 328) == 0) * ((v4 - 16) ^ 0x346 ^ (v4 - 1882113142) & 0x702EC0F7)) ^ v4)))();
}

void sub_23C1D3B3C()
{
  LODWORD(STACK[0x2240]) = 172727073;
  *(void *)(v0 + 304) = 0;
  JUMPOUT(0x23C1D3B60);
}

uint64_t sub_23C1D3C04(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 8 * ((1795 * ((v3 ^ (a3 - 127)) == -1771229877)) ^ (v3 + 153))))(1893602465);
}

uint64_t sub_23C1D3D54()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x73B)))(*(void *)(v2 + 4040));
  LODWORD(STACK[0x15CC]) = -45000;
  STACK[0x15D0] = (unint64_t)&STACK[0x2168];
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + ((100 * (SLODWORD(STACK[0x2168]) >= 172727099)) ^ (10 * (v1 ^ 0x147) + 456))))(v3);
}

uint64_t sub_23C1D3D84()
{
  STACK[0x12D8] = *(void *)(v2 + 184);
  unsigned int v3 = ((LODWORD(STACK[0x208]) + ((v0 + 112) ^ 0xDF5F57F4 ^ (v0 - 663))) & 0xFFFFFFF0 ^ 0x7FDFABEE)
     + ((2 * (LODWORD(STACK[0x208]) + ((v0 + 112) ^ 0xDF5F57F4 ^ (v0 - 663)))) & 0xFFBF57C0);
  LODWORD(STACK[0x12E0]) = v3;
  LODWORD(STACK[0x12E4]) = v3 - 134749330;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x259)))(v3 - 2145364958, 50, 4231955057);
  STACK[0x12E8] = v4;
  STACK[0x12F0] = v4 + 0xE550F9B8A5EBC69;
  *(void *)(v2 + 72) = v4 + 0xE550F9B8A5EBC69;
  return (*(&off_26EFDBE20 + ((236 * (v4 != 0)) ^ v0)))();
}

uint64_t sub_23C1D3E70()
{
  LODWORD(STACK[0x1398]) = v3 - 1943010159;
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8 * (((v3 - 1943010159 == v1) * (v2 - 100 + v2 + 27 - 874)) ^ v2));
  *(unsigned char *)(v4 + 4007) = v3 - 1943010159 < v1;
  LODWORD(STACK[0x7E0]) = v2 + 27;
  LODWORD(STACK[0x7E4]) = v0;
  *(void *)(v4 + 1008) = 0;
  LODWORD(STACK[0xDEC]) = v2 - 100;
  LODWORD(STACK[0xDF0]) = v0;
  return v6();
}

void sub_23C1D3FCC()
{
  uint64_t v2 = LODWORD(STACK[0xDF0]);
  LODWORD(STACK[0xDF4]) = v2;
  int v3 = STACK[0xDEC];
  LODWORD(STACK[0xDF8]) = STACK[0xDEC];
  LODWORD(STACK[0xDFC]) = 2 * (v3 ^ 0x178);
  unint64_t v4 = v2 - 1270008507 + ((unint64_t)(v2 < v0) << 32);
  v1[321] = v4;
  unint64_t v5 = v1[476] + v4;
  v1[322] = v5;
  v1[64] = v5 - 0x494B3BC83CF4FA61;
  JUMPOUT(0x23C1D36ACLL);
}

void sub_23C1D4080(int a1@<W8>)
{
  (*(void (**)(void))(v1 + 8 * (a1 ^ 0x41E)))();
  *(void *)(v2 + 88) = 0;
  *(_DWORD *)STACK[0x15D0] = 172727073;
  JUMPOUT(0x23C1D40C8);
}

void sub_23C1D40FC(int a1@<W8>)
{
  (*(void (**)(void))(v1 + 8 * (a1 + 1297)))();
  *(void *)(v2 + 64) = 0;
  LODWORD(STACK[0x2150]) = 172727073;
  JUMPOUT(0x23C1D4138);
}

uint64_t sub_23C1D422C@<X0>(int a1@<W8>)
{
  int v3 = a1 | 0x14642D42;
  (*(void (**)(void))(v2 + 8 * ((a1 | 0x14642D42) ^ (v1 - 496))))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)STACK[0x17D8] == 0) * (((v3 + 1771230101) | 0x213) - 737)) ^ (v3 + 1771231100))))();
}

void sub_23C1D425C()
{
  unsigned int v1 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x2A17CE9C)) ^ LODWORD(STACK[0x7D8])) & 0x7FFFFFFF);
  int v2 = (v1 >> (LODWORD(STACK[0x7CC]) + 99)) ^ v1;
  LOBYTE(STACK[0x4AB]) = byte_23C20DB30[*(void *)(v0 + 984) & 0xF | (16 * ((1394700225 * v2) >> 24))] ^ LOBYTE(STACK[0x5F7]) ^ (-63 * v2);
  JUMPOUT(0x23C1BA4D0);
}

uint64_t sub_23C1D42F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = (*(uint64_t (**)(__CFString *))(a3 + 8 * (v3 + 964)))(@"0dnM19zBqLw5ZPhIo4GEkg");
  return (*(&off_26EFDBE20 + (((((v3 - 283) | 0x32) + ((v3 + 217) | 0x80) - 1091) * (v4 ^ 1)) ^ v3)))();
}

uint64_t sub_23C1D4348()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((**(void **)(v1 + 504) == 0) * ((v0 + 1771230877) ^ (v0 + 1771230081) ^ 0x3CD)) ^ (v0 + 1771230229))))();
}

uint64_t sub_23C1D43A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 ^ (v2 - 1276)) - v2 + 10) * (a1 == 0)) | v1)))();
}

uint64_t sub_23C1D43DC@<X0>(int a1@<W8>)
{
  int v3 = (a1 - 386711681) & 0x170CC4B0;
  int v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((a1 + 562) ^ (8
                                          * (((a1 + 9) ^ (*(_DWORD *)STACK[0x1680] - 1598675576 < (v3 - 1085))) & 1))));
  LODWORD(STACK[0x604]) = v3;
  *(void *)(v1 + 528) = 406823345;
  return v4();
}

void sub_23C1D4460(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
}

uint64_t sub_23C1D44C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v37 = 21 * (v36 ^ 0xFF);
  *(_DWORD *)STACK[0x1230] = STACK[0x3F4];
  *(void *)STACK[0x1238] = a34;
  STACK[0x250] = *(void *)(v34 + 512);
  (*(void (**)(void))(v35 + 8 * (v37 ^ 0x7B9)))(*(void *)(v34 + 256));
  uint64_t v38 = ((uint64_t (*)(unint64_t))*(&off_26EFDBE20 + v37 + 1191))(STACK[0x1240]);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + ((1461 * (((v37 - 398) | 0x286) == 647)) ^ v37)))(v38);
}

uint64_t sub_23C1D46E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((a1 == 0) ^ (v1 - 7)) & 1)
                                     * ((v1 - 5) & 0xFFFFFFFD ^ 0xFFFFFF8D)) ^ (v1 + 306))))();
}

uint64_t sub_23C1D4744()
{
  uint64_t v4 = (v0 + 1146537414) & 0xBBA93F7F;
  unint64_t v5 = *(uint64_t (**)(void))(v3
                           + 8
                           * (int)(v0 ^ 0xFFFFFE65 ^ (688
                                                    * ((((((~(unint64_t)(*(_DWORD *)(v1 + 16)
                                                                                            - 1598675570)
                                                          + v0) ^ (~(*(_DWORD *)(v1 + 16) - 1598675570) + v0))
                                                        * (v4 - 1344)) | (~(unint64_t)(*(_DWORD *)(v1 + 16) - 1598675570)
                                                                        + v0)) & 0x8000000000000000) == 0))));
  LODWORD(STACK[0x9C4]) = v4;
  *(void *)(v2 + 1488) = 1172434048;
  return v5();
}

void sub_23C1D47D0()
{
  uint64_t v1 = *(void *)(v0 + 1488);
  *(void *)(v0 + 1496) = v1;
  int v2 = STACK[0x9C4];
  LODWORD(STACK[0x9DC]) = LODWORD(STACK[0x9C4]) - 531;
  LODWORD(STACK[0x9E0]) = v2 - 1771231220;
  v1 -= 1172434048;
  char v3 = *((unsigned char *)&STACK[0x2F1] + v1);
  LODWORD(STACK[0x9D8]) = v2;
  LOBYTE(STACK[0x9E7]) = v3;
  uint64_t v4 = **(void **)(v0 + 3592) + v1;
  *(void *)(v0 + 1520) = v4;
  *(void *)(v0 + 512) = v4;
  JUMPOUT(0x23C1D4830);
}

uint64_t sub_23C1D4844(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((((v1 - 412) | 0x2A9) - 424) ^ ((v1 - 378) | 0x110)) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_23C1D488C@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0x39B;
  uint64_t v5 = (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ 0x722)))();
  STACK[0x250] = *(void *)(v2 + 3576);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((((LODWORD(STACK[0x11EC]) != 0) & ~v1) * (((v4 - 37) | 3) ^ 0x299)) ^ v4)))(v5);
}

uint64_t sub_23C1D48F0()
{
  int v5 = v0 - 500;
  STACK[0x1670] = *(void *)(v1 + 3584) + 0x2E5A7CA98C249119;
  (*(void (**)(void *))(v2 + 8 * (v5 ^ 0x687)))(&unk_23C212CE0);
  unint64_t v6 = *(void *)(v1 + 3584);
  *(void *)(v6 + 24) = 0;
  v6 += 24;
  STACK[0x1678] = v6;
  *(_DWORD *)(v6 + 8) = 1598675563;
  STACK[0x1680] = v6 + 8;
  uint64_t v7 = (uint64_t)*(&off_26EFDBE20 + v5);
  *(void *)(v3 + 464) = STACK[0x1670];
  *(void *)(v3 + 448) = v7
                        - 591644117
                        * ((2 * ((v4 - 200) & 0x227232F5C56AA7C0) - (v4 - 200) - 0x227232F5C56AA7C5) ^ 0x3996EDC3A190127CLL);
  *(_DWORD *)(v4 - 176) = v5
                        - 591644117 * ((2 * ((v4 - 200) & 0xC56AA7C0) - (v4 - 200) + 982865979) ^ 0xA190127C)
                        + 1601233012;
  ((void (*)(uint64_t))*(&off_26EFDBE20 + (v5 ^ 0x6A0)))(v4 - 200);
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((46
                                             * (((((v5 - 105) | 2) + 31) ^ (*(_DWORD *)(v4 - 192) == 88050582)) & 1)) ^ (v5 + 408))))(*(void *)STACK[0x1678]);
}

uint64_t sub_23C1D4A4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v1 + 1556609516) & 0xA33806F6) - 393) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_23C1D4A9C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 + a1 - 592) ^ (v1 + 641)) - 435) * v2) ^ a1)))();
}

uint64_t sub_23C1D4AC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 + 18 * (v1 ^ 0x250) - 1100) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_23C1D4B08@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0x2EF;
  int v5 = *(uint64_t (**)(void))(v3
                           + 8
                           * (int)((((a1 ^ 0xEF ^ ((*(_DWORD *)STACK[0x1680] - 1598675578) < 0xFFFFFFF1)) & 1)
                                  * ((a1 - v1 + 1010) ^ 0x966D2D7F)) ^ a1));
  LODWORD(STACK[0x93C]) = v4;
  *(void *)(v2 + 1352) = 82815511;
  return v5();
}

uint64_t sub_23C1D4B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  (*(void (**)(void))(v34 + 8 * (v32 + v33 + 2)))();
  (*(void (**)(void *, unint64_t, uint64_t))(v34 + 8 * (v33 + 1771231463)))(&unk_23C2172E0, STACK[0x11F8], 13);
  unint64_t v37 = STACK[0x1670];
  *(void *)STACK[0x1678] = 0;
  *(_DWORD *)STACK[0x1680] = 1598675563;
  uint64_t v38 = (uint64_t)*(&off_26EFDBE20 + v33 + 1771230058);
  unint64_t v39 = 591644117
      * ((-2 - ((~(v36 - 200) | 0xCC8E7951834DA055) + ((v36 - 200) | 0x337186AE7CB25FAALL))) ^ 0x289559981848EA12);
  *(void *)(v35 + 464) = v37;
  *(void *)(v35 + 448) = v38 - v39;
  *(_DWORD *)(v36 - 176) = -922504226 - v39 + v33;
  ((void (*)(uint64_t))*(&off_26EFDBE20 + (v33 ^ a32)))(v36 - 200);
  return (*(uint64_t (**)(void))(v34
                                           + 8
                                           * (int)(((*(_DWORD *)(v36 - 192) == ((214 * (v33 ^ 0x966D2D4D)) ^ 0x53F8E92))
                                                  * ((v33 - 1860338382) & 0xD87557FF ^ 0x4C2)) ^ (v33 + 1771230399))))(*(void *)STACK[0x1678]);
}

uint64_t sub_23C1D4BA0()
{
  int v4 = (*(uint64_t (**)(void))(v0 + 8 * (v1 + 265)))(*(void *)(v3 + 416));
  unsigned int v5 = ((v1 + 755229195) & 0xD2FC1DFD ^ 0xB62E0294) + v4 - ((2 * v4) & 0x6C5C0C68) - 12;
  LODWORD(STACK[0x136C]) = v5 ^ 0xBC659D15;
  LODWORD(STACK[0x360]) = v5 ^ 0xBC659D15;
  uint64_t v6 = ((uint64_t (*)(void, uint64_t))*(&off_26EFDBE20 + v1 + 347))(v5 ^ 0xB62E0634, 2381541563);
  *(void *)(v2 + 3960) = v6;
  return (*(&off_26EFDBE20 + (((v6 != 0) * (((v1 - 1025335539) & 0x3D1D5EFF) - 722)) ^ v1)))();
}

uint64_t sub_23C1D4C8C@<X0>(int a1@<W8>)
{
  unsigned int v3 = (a1 - 25187134) & 0x97ED7F5B;
  (*(void (**)(void))(v1 + 8 * (a1 + 1251)))();
  *(void *)(v2 + 136) = 0;
  LODWORD(STACK[0x2198]) = 172727073;
  return (*(&off_26EFDBE20
          + (int)(((*(void *)(v2 + 112) == 0) * (((v3 + 1771229895) | 0x208) ^ 0x20E)) ^ (v3 + 1771230657))))();
}

void sub_23C1D4CD8()
{
}

uint64_t sub_23C1D4CEC@<X0>(int a1@<W8>)
{
  int v4 = a1 - 1771230415;
  (*(void (**)(void))(v2 + 8 * (a1 ^ 0x40A)))();
  *(void *)(v3 + 112) = 0;
  LODWORD(STACK[0x2180]) = 172727073;
  return (*(&off_26EFDBE20 + (int)(((*(void *)(v3 + 88) == 0) * (263 * (v4 ^ 0x966D2D49) - 482)) ^ (v4 + 1771230982))))();
}

void sub_23C1D4D34()
{
}

uint64_t sub_23C1D4D84@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v7 = (v2 + 385 - v4 + 515);
  unint64_t v8 = (v3 | ((unint64_t)(v3 < 0xA616EF9) << 32)) + v7 + 0x79F39BF33B8A7B86;
  LODWORD(STACK[0x1704]) = a2;
  int v9 = v7 - v5 + 822;
  uint64_t v10 = &STACK[0x2140] + 3 * v8 - 0xDDAD3DB950B475ELL;
  int v11 = *((_DWORD *)v10 + 4);
  *(void *)(a1 + 456) = v10 + 2;
  uint64_t v12 = *(uint64_t (**)(void))(v6 + 8 * (((v11 == 172727073) * (v9 ^ 0x31F)) ^ (v4 + (int)v7 - 372)));
  LODWORD(STACK[0xD38]) = v9;
  return v12();
}

uint64_t sub_23C1D4DC8()
{
  STACK[0x280] = STACK[0x368];
  LODWORD(STACK[0x208]) = STACK[0x234];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((v0 - 795) | 0x388) + 1110139639) & 0xBDD49DFC) - 109) ^ 0x40D ^ ((v0 - 795) | 0x388))))();
}

uint64_t sub_23C1D4E38()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((((v0 + 835932724) & 0x37BF81ED) + 1556609516) & 0xA33806F6) - 393)
                                     * (*(void *)STACK[0x1678] == 0)) ^ (v0 + 835932724) & 0x37BF81ED)))();
}

uint64_t sub_23C1D4E50()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)STACK[0x1580] == 0) * (v1 + ((v0 - 554828526) & 0xB77F2DDF) - 1501)) ^ v0)))();
}

void sub_23C1D4EA0(int a1@<W8>)
{
  (*(void (**)(void))(v2 + 8 * (a1 ^ 0x478)))();
  *(void *)STACK[0x1580] = 0;
  **(_DWORD **)(v1 + 2248) = 172727073;
  JUMPOUT(0x23C1D4EF4);
}

void sub_23C1D4F6C()
{
  (*(void (**)(void))(v2 + 8 * (v0 + 310)))();
  **(void **)(v1 + 3648) = 0;
  **(_DWORD **)(v1 + 3640) = 172727073;
  JUMPOUT(0x23C1D4FB4);
}

void sub_23C1D4FF8(int a1@<W8>)
{
  (*(void (**)(void))(v1 + 8 * (a1 ^ 0x4E3)))();
  *(void *)STACK[0x17D8] = 0;
  *(_DWORD *)STACK[0x17D0] = 172727073;
  JUMPOUT(0x23C1D504CLL);
}

void sub_23C1D5098(int a1@<W8>)
{
  (*(void (**)(void))(v1 + 8 * ((a1 - 982) ^ 0x428)))();
  *(void *)(v2 + 232) = 0;
  LODWORD(STACK[0x21F8]) = 172727073;
  JUMPOUT(0x23C1D50D4);
}

void sub_23C1D5138(int a1@<W8>)
{
  (*(void (**)(void))(v1 + 8 * (a1 ^ 0x492)))();
  *(void *)(v2 + 208) = 0;
  LODWORD(STACK[0x21E0]) = 172727073;
  JUMPOUT(0x23C1D5174);
}

uint64_t sub_23C1D51CC@<X0>(int a1@<W8>)
{
  int v3 = a1 + 88;
  (*(void (**)(void))(v2 + 8 * (a1 ^ 0x411)))();
  **(void **)(v1 + 3992) = 0;
  *(_DWORD *)STACK[0x16B0] = 172727073;
  return (*(&off_26EFDBE20
          + (int)(((*(void *)STACK[0x1580] == 0) * (((v3 - 554828526) & 0xB77F2DDF) + 1771229926)) ^ v3)))();
}

uint64_t sub_23C1D525C()
{
  LODWORD(STACK[0x2140]) = -2099564604;
  int v4 = off_268B98A08[0];
  v3[25] = *off_268B98A08[0] - 29;
  v3[26] = ((7 * (v0 ^ 0x78) + 20) & 0xF7 ^ 7) + v4[1];
  v3[27] = v4[2] - 29;
  v3[28] = v4[3] - 29;
  v3[29] = v4[4] - 29;
  v3[30] = v4[5] - 29;
  v3[31] = v4[6] - 29;
  v3[32] = v4[7] - 29;
  v3[33] = v4[8] - 29;
  v3[34] = v4[9] - 29;
  v3[35] = v4[10] - 29;
  v3[36] = v4[11] - 29;
  v3[37] = v4[12] - 29;
  v3[38] = v4[13] - 29;
  v3[39] = v4[14] - 29;
  v3[40] = v4[15] - 29;
  v3[41] = v4[16] - 29;
  v3[42] = v4[17] - 29;
  v3[43] = v4[18] - 29;
  v3[44] = v4[19] - 29;
  v3[45] = v4[20] - 29;
  v3[46] = v4[21] - 29;
  v3[47] = off_268B98A08[0][22] - 29;
  uint64_t v5 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0x231)))();
  uint64_t v6 = ((uint64_t (*)(void, unint64_t *, uint64_t))*(&off_26EFDBE20 + (v0 ^ 0x215)))(0, &STACK[0x2121], v5);
  *(void *)(v1 + 4040) = v6;
  return (*(&off_26EFDBE20 + ((15 * (v6 == 0)) | v0)))();
}

uint64_t sub_23C1D5488@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a1 == (((v1 ^ 0x6A2) + 762) ^ (v2 + 735))) * ((v1 ^ 0x6A2) + 1014)) ^ v1 ^ 0x6A2)))();
}

uint64_t sub_23C1D54C8()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8 * (v0 ^ 0x32D)))(20, 50, 1510496678);
  *(void *)(v1 + 4136) = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2 * (((v0 + 119) ^ (v3 == 0)) & 1)) & 0xEF | (16
                                                                                               * (((v0 + 119) ^ (v3 == 0)) & 1)) | v0)))();
}

void sub_23C1D553C()
{
  STACK[0x15D8] = (unint64_t)&STACK[0x2160];
  LODWORD(STACK[0xA30]) = v0;
  LODWORD(STACK[0xA34]) = 295922807;
  int v3 = STACK[0xA34];
  LODWORD(STACK[0xA38]) = STACK[0xA34];
  int v4 = STACK[0xA30];
  LODWORD(STACK[0xA3C]) = LODWORD(STACK[0xA30]) + 1771229924;
  LODWORD(STACK[0xA40]) = v4 + 1771230458;
  LODWORD(STACK[0xA44]) = v4 + 1771230799;
  uint64_t v5 = *(void *)STACK[0x15D8];
  int v6 = 2 * v3 - 591845614;
  LODWORD(STACK[0xA48]) = v6;
  unsigned int v7 = v6 ^ 0xDF67EB35;
  int v8 = v6 << ((v4 - 6) ^ (v4 - 28) ^ 0x6B);
  LODWORD(STACK[0xA4C]) = v8;
  uint64_t v9 = v5 + (int)(v7 + 546837707 + (v8 & 0xBECFD668));
  v1[203] = v9;
  v1[64] = v9;
  v1[62] = *(void *)(v2 + 8 * (int)(v4 ^ 0x966D282E));
  JUMPOUT(0x23C1D8748);
}

uint64_t sub_23C1D560C()
{
  uint64_t v3 = (*(uint64_t (**)(void, void))(v0 + 8 * (v1 ^ 0x4C4)))(*(void *)(v2 + 4040), 0);
  STACK[0x16E0] = v3;
  return (*(&off_26EFDBE20 + (((v3 != 0) * ((v1 ^ 0x3D5) - 210)) ^ v1)))();
}

uint64_t sub_23C1D5668()
{
  int v4 = (v2 - 206) | 0x141;
  unint64_t v5 = STACK[0x250];
  v3[507] = STACK[0x250];
  v3[508] = (char *)&STACK[0x18A0] + v5;
  STACK[0x250] = v5 + 64;
  v3[509] = ((32 * (((unint64_t)&STACK[0x18A0] + v5) & 1)) | (16 * (((unint64_t)&STACK[0x18A0] + v5) & 1)) | 0x75998FE9F673F4C4) ^ 0x20;
  uint64_t v6 = (*(uint64_t (**)(void))(v0 + 8 * (v4 + 653)))(*(void *)(v1 + 416));
  uint64_t v7 = (v4 - 1440250205) & 0x55D877F5 ^ 0x7E9FF73F97FE3A1BLL ^ v6;
  unint64_t v8 = (2 * v6) & 0xFD3FEE7F2FFC77FELL;
  uint64_t v9 = (*(&off_26EFDBE20 + (v4 ^ 0x558)))();
  return (*(&off_26EFDBE20
          + ((7 * (v7 + (v9 ^ 0x902031100A002020) + v8 - ((2 * v9) & 0xDFBF9DDFEBFFBFBELL) == 0xEC0284FA1FE5C1FLL)) ^ v4)))();
}

uint64_t sub_23C1D57A8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (int)(v1 + 1107)))(v2[52]);
  unint64_t v4 = ((2 * v3) & 0xDDF8F97BBB543B76) + (v3 ^ 0x6EFC7CBDDDAA1DBBLL);
  v2[24] = v4;
  uint64_t v5 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20 + (v1 ^ 0x7C2)))(((v1 - 196) | 0x251) - 153 - 0x6EFC7CBDDDAA2092 + v4, 2663297126);
  v2[25] = v5;
  STACK[0x3E8] = v5;
  return (*(&off_26EFDBE20 + ((935 * (v5 == 0)) ^ v1)))();
}

uint64_t sub_23C1D5888()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 + 688)))();
  char v4 = ((uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + v1 + 724))(STACK[0x16E0], STACK[0x1608], v2, v3);
  return (*(&off_26EFDBE20
          + ((((((2 * v4) & 0xB4) + (v4 ^ 0xDA)) != (((v1 - 109) | 2) - 44))
            * (((v1 - 880) | 0xA6) + 80)) ^ v1)))();
}

uint64_t sub_23C1D5934(uint64_t a1, uint64_t a2)
{
  int v3 = LODWORD(STACK[0x1600])
     - (((LODWORD(STACK[0x1600]) << ((v2 + 95) ^ 0x7A ^ ((v2 + 106) | 0x6C))) + 78365836) & 0x14973642)
     + 748780903;
  LODWORD(STACK[0x360]) = v3;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 8 * (v2 ^ 0x682)))(v3 ^ 0xA4B9B21u, 50, 948295290);
  STACK[0x1758] = v4;
  return (*(&off_26EFDBE20 + ((112 * (v4 != 0)) ^ v2)))();
}

uint64_t sub_23C1D5A00(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = *(void *)(v2 + 192) - 0x6EFC7CBD12B25F3ELL;
  *(void *)(v2 + 208) = v6;
  *(unsigned char *)(v2 + 223) = v6 < 0xCAF7BE7D;
  uint64_t v7 = *(uint64_t (**)(void))(a2
                           + 8
                           * ((21 * (((((v3 - v6) | (v6 - v3)) >> (((v3 - v4 + 98) | 0x82) ^ 0x98)) & 1) == 0)) ^ ((int)v3 + 889734470)));
  LODWORD(STACK[0xB34]) = v3 - v4;
  v5[232] = 0x2B287431298A6BALL;
  v5[233] = 0x652A88F4EF147088;
  v5[234] = 0x4C5E3E801E57009ELL;
  LODWORD(STACK[0xD30]) = (v3 - v4 - 926) | 0x82;
  return v7();
}

void sub_23C1D5AC8(uint64_t a1, uint64_t a2)
{
  int v4 = STACK[0xD30];
  int v5 = (LODWORD(STACK[0xD30]) - 163) | 2;
  LODWORD(STACK[0xD34]) = v5;
  uint64_t v6 = *(void *)(v2 + 192) + *(void *)(v2 + 536) - 0x6EFC7CBDDDAA1DBBLL;
  unsigned int v7 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ (*(_DWORD *)(v2 + 192)
                                                                        + *(_DWORD *)(v2 + 536)
                                                                        + 576053829)) & 0x7FFFFFFF);
  unint64_t v8 = 1394700225 * (v7 ^ HIWORD(v7));
  LOBYTE(STACK[0x4AB]) = byte_23C20EC30[(v5 - 4) + (v8 >> 24)] ^ byte_23C20F760[v8 >> 24] ^ byte_23C20FD90[v8 >> 24] ^ v8 ^ (23 * BYTE3(v8));
  *(void *)(v3 + 160) = *(void *)(a2 + 8 * (v4 + 1331));
  *(void *)(v3 + 168) = v6;
  JUMPOUT(0x23C1AC3F0);
}

uint64_t sub_23C1D5B8C()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * ((v1 - 68) ^ 0x6DF)))(*(void *)(v2 + 416));
  unint64_t v4 = v3 ^ 0xFFDFBFEFB8FF9FB6;
  unint64_t v5 = (2 * v3) & 0xFFBF7FDF71FF3F6CLL;
  uint64_t v6 = (*(&off_26EFDBE20 + v1 + 723))();
  return (*(&off_26EFDBE20
          + ((v1 - 68) | (16
                        * (v4 + (v6 ^ 0x9002430909C04481) + v5 - ((2 * v6) & 0xDFFB79EDEC7F76FCLL) + 1 != ((v1 - 68) ^ 0x8FE202F8C2BFE73FLL))))))();
}

uint64_t sub_23C1D5CF0()
{
  int v3 = 62 * (v0 ^ 0x11C);
  uint64_t v4 = (((v0 - 2046490634) | 0x10682441u) ^ 0x966D2D4ALL) + *(void *)(v1 + 1408);
  unint64_t v5 = *(uint64_t (**)(void))(v2 + 8 * (((v4 != 652531523) * (v3 - 481)) ^ v0));
  LODWORD(STACK[0x96C]) = v3;
  *(void *)(v1 + 1400) = v4;
  return v5();
}

uint64_t sub_23C1D5D68(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6 = (*(uint64_t (**)(void))(a3 + 8 * (a4 ^ (a4 - 476))))();
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * ((266 * (LODWORD(STACK[0x398]) == 0)) ^ 0xEC)))(v6);
}

uint64_t sub_23C1D5D8C()
{
  int v0 = LOBYTE(STACK[0x5F7]);
  int v1 = STACK[0x894];
  int v2 = (v1 + (~(2 * v1 + 46) | 0x33) - 2) ^ 0x66;
  unsigned int v3 = (2 * LOBYTE(STACK[0x890]) - 1) & 2;
  unsigned int v4 = ((v3 & 0xFFFFFFFB | (4 * ((v3 >> 1) & 1))) ^ 0xBF97E773)
     + 1080563853
     + ((((LODWORD(STACK[0x890]) - 1715860835) ^ 1)
       - ((2 * ((LODWORD(STACK[0x890]) - 1715860835) ^ 1)) & 0x4267686E)
       - 1590447049) ^ 0xA133B437);
  unsigned int v5 = ((2 * v4) & 0xFCABFADE) + (v4 ^ 0x7E55FD6F);
  LODWORD(STACK[0x8A4]) = v5 - 403703820;
  int v6 = v0 + ((-54 * v2) & 0xDE) + ((101 * v2) ^ 0x6F) - 55;
  unsigned int v7 = LODWORD(STACK[0x898]) ^ 0xDECD0DC9 ^ (v6 - ((2 * v6) & 0x130) - 1820994152);
  int v8 = STACK[0x89C];
  uint64_t v9 = *(&off_26EFDBE20
       + ((53 * ((((v5 - 2119564655) % 3) ^ 0xCFFDF6EF) + 2 * ((v5 - 2119564655) % 3) == -805439761)) ^ LODWORD(STACK[0x89C])));
  unsigned int v10 = v7 - ((2 * v7 - 687666590) & 0x9B71B0A2) - 1187357310;
  LODWORD(STACK[0x8A8]) = v10;
  LODWORD(STACK[0x880]) = v8;
  LODWORD(STACK[0x884]) = v10;
  LODWORD(STACK[0x888]) = v1 + 1;
  LODWORD(STACK[0x88C]) = v5 - 403703820;
  return v9();
}

uint64_t sub_23C1D5F40()
{
  int v0 = STACK[0x8A4];
  int v1 = STACK[0x8A8];
  unsigned int v2 = (LODWORD(STACK[0xA9C]) ^ 0x1EBD7078)
     + (2 * *(unsigned __int8 *)STACK[0x13B0] + 972480728 + (*(unsigned __int8 *)STACK[0x13B0] ^ 0xBBBFF9FF))
     * (((LODWORD(STACK[0x8A0]) + 1771230456) | 0x34) - 1569646352)
     + 1934840386;
  unsigned int v3 = ((2 * v2) & 0xFFDFAEFC) + (v2 ^ 0x7FEFD77E);
  if (v3 - 2146424702 >= 0xA02FD949) {
    int v4 = 1283990943;
  }
  else {
    int v4 = -323485976;
  }
  unsigned int v5 = (v3 - 2146424702) ^ 0xD2522579 ^ ((v3 - 1822938726 + v4) % 0x101
                                       - 766368391
                                       - ((2 * ((v3 - 1822938726 + v4) % 0x101)) & 0x2F2));
  unsigned int v6 = ((v5 + 1646654584 - ((2 * v5) & 0xC44BE8F0)) ^ 0x6225F478) + (v1 ^ 0x4DB8D851);
  unsigned int v7 = (v6 ^ 0xFFDFBF7B) + v0 + ((2 * v6) & 0xFFBF7EF6);
  int v8 = v7 - ((2 * v7 + 867472964) & 0x290C1BE6) + 778066197;
  unsigned int v9 = v8 ^ 0x76B46B58 ^ LODWORD(STACK[0xAA8]);
  int v10 = v9 ^ v1;
  unsigned int v11 = ((2 * (v0 - 1715860835 + (v9 ^ 0x1BBDFDC))) & 0xFFC73DEE) + ((v0 - 1715860835 + (v9 ^ 0x1BBDFDC)) ^ 0xFFE39EF7);
  int v12 = (v9 >> 27) & 0x10 | (v9 >> 28);
  unsigned int v13 = ((16 * v9) ^ 0x64960337) + (v10 ^ 0x4C03078D) + ((32 * v9) & 0xFE57FDE0 ^ 0x3653F980) - 2133589751;
  unsigned int v14 = v11 + (v12 ^ 0x5FFFF4E8) + (v13 ^ 0x5E5FF3AF) + ((2 * v13) & 0xBCBFE75E);
  return ((uint64_t (*)(uint64_t, void))*(&off_26EFDBE20 + LODWORD(STACK[0x8A0]) + 1771230484))(4149736831, (v14 - ((2 * v14 - 2089226012) & 0x881EE3D2) - 2050233765) ^ v8 ^ 0x76B46B58 ^ 0x5DCF57CD);
}

void sub_23C1D62A4()
{
}

uint64_t sub_23C1D6310(uint64_t a1, uint64_t a2)
{
  int v3 = 27 * (v2 ^ (v2 - 8));
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 8 * (v2 ^ (v2 - 476))))();
  return (*(uint64_t (**)(uint64_t))(a2 + 8 * (((LODWORD(STACK[0x288]) == 0) * ((v3 ^ 0x27) + 632)) ^ v3)))(v5);
}

uint64_t sub_23C1D636C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  LODWORD(STACK[0x2150]) = STACK[0x3CC];
  *(void *)(v36 + 64) = a33;
  STACK[0x250] = v33;
  (*(void (**)(uint64_t))(v34 + 8 * ((v35 + 39) ^ 0x6C9)))(a31);
  uint64_t v37 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + v35 + 1374))(a29);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + (int)((((v35 + 39) ^ 0x966D2DB4) + 1771230917) ^ 0xBB ^ (v35 + 39))))(v37);
}

uint64_t sub_23C1D6418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v74 = v72 - 181;
  LODWORD(STACK[0x1444]) = a72;
  uint64_t v75 = *(uint64_t (**)(void))(v73
                            + 8
                            * ((59 * (((v72 + 75) ^ (a72 == (((v72 - 155) | 0x8A) ^ 0x77D78BC7))) & 1)) ^ v72));
  LODWORD(STACK[0xF00]) = v74;
  return v75();
}

void sub_23C1D646C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = STACK[0xF00];
  LODWORD(STACK[0xF04]) = STACK[0xF00];
  int v74 = (v73 - 322) | 0x110;
  LODWORD(STACK[0xF08]) = v74;
  int v75 = v73 ^ (v70 + 353);
  LODWORD(STACK[0xF0C]) = v75;
  LODWORD(STACK[0xF28]) = v73;
  LODWORD(STACK[0xF40]) = v73;
  v71[359] = a56;
  unint64_t v76 = LODWORD(STACK[0x158C]);
  LODWORD(STACK[0xF44]) = v76 + (v74 ^ 0x21209594);
  unsigned int v77 = 1394700225
      * (((v76 + a56 - 926210706) ^ *(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8))) & (v75 - 376253772));
  unint64_t v78 = 1394700225 * (v77 ^ HIWORD(v77));
  LOBYTE(STACK[0x4AB]) = a70 ^ byte_23C213440[v78 >> 24] ^ byte_23C216DA0[v78 >> 24] ^ byte_23C214970[v78 >> 24] ^ v78 ^ (21 * BYTE3(v78)) ^ 0xEA;
  v71[20] = *(void *)(v72 + 8 * (v73 ^ 0x65A));
  v71[21] = (v76 | ((unint64_t)(v76 < 0x3734DA92) << 32)) + a56 - 0x494B3BC87429D4F3;
  JUMPOUT(0x23C1AC3F0);
}

uint64_t sub_23C1D6610()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 - 994) | 0x206) + 418) ^ 0x454) * (v0 + 1 == v2 + 12)) ^ ((v1 - 994) | 0x206))))();
}

uint64_t sub_23C1D668C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(v1 + 24 * v0 - 0x1110AAD98) == v3) * (((v2 - 239) | 0xA0) ^ 0x546)) ^ v2)))();
}

uint64_t sub_23C1D66D4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 137) ^ 0x454) * (v0 + 1 == v1 + 12)) ^ (v2 - 555))))();
}

uint64_t sub_23C1D6710@<X0>(int a1@<W8>)
{
  *(void *)(v1 + 184) = &STACK[0x4398FF68D079C10B];
  LODWORD(STACK[0x234]) = a1;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v3 + 8 * (v2 + 445)))(((v2 - 1771231005) ^ 0x49327FB6u) + a1, 50, 2360259640);
  STACK[0x368] = v4 + 0x494B3BC83CF4FA61;
  return (*(&off_26EFDBE20 + ((22 * (v4 != 0)) ^ v2)))();
}

void sub_23C1D67BC()
{
}

void sub_23C1D6878(uint64_t a1)
{
  int v4 = STACK[0xD38];
  LODWORD(STACK[0xD3C]) = STACK[0xD38];
  int v5 = v4 ^ (v2 + 306);
  LODWORD(STACK[0xD40]) = v5;
  LODWORD(STACK[0xD44]) = v5;
  uint64_t v6 = *(void *)(a1 + 184) + 24 * v1;
  *(void *)(v3 + 2384) = v6;
  LOBYTE(v6) = *(unsigned char *)(v6 - 0x4398FF68D0799FCBLL);
  unint64_t v7 = STACK[0x368];
  *(void *)(v3 + 2392) = STACK[0x368];
  int v8 = STACK[0x1704];
  LODWORD(STACK[0xD58]) = LODWORD(STACK[0x1704]) - 1505897656;
  unsigned int v9 = 1394700225
     * (((v8 + v7 - 2073587113) ^ *(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8))) & (v5 - 376253772));
  unint64_t v10 = 1394700225 * (v9 ^ HIWORD(v9));
  LOBYTE(STACK[0x4AB]) = v6 ^ byte_23C214D80[v10 >> 24] ^ byte_23C2170D0[(v10 >> 24) + 1] ^ byte_23C216C90[(v10 >> 24) + 2] ^ v10 ^ (-55 * BYTE3(v10)) ^ 0x84;
  JUMPOUT(0x23C1D69B4);
}

uint64_t sub_23C1D69C0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_23C1D6A60@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0x36E;
  (*(void (**)(void))(v2 + 8 * (a1 ^ 0x5EF)))();
  *(void *)(v3 + 328) = 0;
  LODWORD(STACK[0x2258]) = v1;
  return (*(&off_26EFDBE20 + (((*(void *)(v3 + 304) != 0) * ((v4 + 1097) ^ 0x534)) ^ v4)))();
}

uint64_t sub_23C1D6B14@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  BOOL v3 = v2 + 8 == ((a2 + 107748940) | 0x90010D49) - 1345537130;
  return (*(uint64_t (**)(void))(a1 + 8 * (v3 | (16 * v3) | (a2 - 14))))();
}

uint64_t sub_23C1D6B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unint64_t a47)
{
  STACK[0x3B8] = v47;
  STACK[0x390] = a47;
  return a25(a26);
}

void sub_23C1D6B7C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8 * (v2 + v3 + 22)))();
  JUMPOUT(0x23C1D633CLL);
}

void sub_23C1D6BAC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(unint64_t))(a2 + 8 * (v2 + v3 + 22)))(STACK[0x240]);
  JUMPOUT(0x23C1D633CLL);
}

uint64_t sub_23C1D6BE0(uint64_t a1, int a2)
{
  int v3 = a2 + v2 - 488;
  int v4 = *(uint64_t (**)(void))(a1
                           + 8
                           * ((1446
                             * (LOBYTE(STACK[0xC37]) > ((((v2 - 36) | 0x21) ^ 0x10)
                                                                                     + a2
                                                                                     + v2
                                                                                     + 24))) ^ v2));
  LODWORD(STACK[0x648]) = v3;
  return v4();
}

uint64_t sub_23C1D6C24()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((4 * (v0 ^ 0x966D2D2C) - 412) | 0x2A9) - 424) ^ ((4 * (v0 ^ 0x966D2D2C) - 378) | 0x110))
                                     * (**(void **)(v1 + 3592) == 0)) ^ (4 * (v0 ^ 0x966D2D2C)))))();
}

void sub_23C1D6C8C()
{
}

void sub_23C1D6C9C()
{
  uint64_t v2 = v1[169];
  v1[170] = v2;
  int v3 = STACK[0x93C];
  LODWORD(STACK[0x950]) = STACK[0x93C];
  LODWORD(STACK[0x954]) = (v3 - 1273053064) & 0x4BE13FDF;
  LODWORD(STACK[0x958]) = (v3 + 339803992) | 0x822C2D00;
  v2 -= 82815511;
  LOBYTE(STACK[0x95F]) = *(unsigned char *)(v1[448] + v2);
  uint64_t v4 = **(void **)(v0 + 312) + v2;
  v1[173] = v4;
  v1[64] = v4;
  JUMPOUT(0x23C1D36A8);
}

uint64_t sub_23C1D6D18()
{
  unsigned int v0 = 1394700225
     * ((LODWORD(STACK[0x958]) ^ 0xE992D2B4) & (*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFFDC88A904)) ^ LODWORD(STACK[0x960])));
  unint64_t v1 = 1394700225 * (v0 ^ HIWORD(v0));
  return (*(&off_26EFDBE20
          + ((498
            * ((LOBYTE(STACK[0x95F]) + LODWORD(STACK[0x954]) + 0x80) != (byte_23C216EB0[v1 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C216680[v1 >> 24] ^ byte_23C2173F0[v1 >> 24] ^ v1 ^ (-61 * BYTE3(v1))))) ^ LODWORD(STACK[0x950]))))();
}

uint64_t sub_23C1D6DF8()
{
  unsigned int v3 = (v0 - 697451344) ^ 0xD66DBD08;
  uint64_t v4 = ((v0 - 697451344) & 0xBFFF6F4F ^ 0x966D2D4ALL) + *(void *)(v1 + 1360);
  int v5 = *(uint64_t (**)(void))(v2 + 8 * (int)(((v4 == 82815526) * (v3 - 238)) ^ v0));
  LODWORD(STACK[0x93C]) = v3;
  *(void *)(v1 + 1352) = v4;
  return v5();
}

uint64_t sub_23C1D6EEC()
{
  int v4 = v2 ^ (v0 + 464);
  uint64_t v5 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 960)))();
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(((v2 ^ 0x966D2FCF ^ v4) * v1) ^ v2)))(v5);
}

uint64_t sub_23C1D70A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + 130) ^ 0xEA ^ ((v1 - 120) | 0xFA)) * (a1 != 0)) ^ v1)))();
}

uint64_t sub_23C1D70E4()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 785)))();
  STACK[0x250] = STACK[0x11F0];
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                           + (int)((((v1 + 240086216) ^ 0x9822428C ^ (v2 + 229) ^ (v1 + 240086216) & 0xF1B092BF)
                                                  * (v0 & 1)) ^ v1)))(v4);
}

uint64_t sub_23C1D7164()
{
  int v3 = v1 - v0 + 903;
  LODWORD(STACK[0x2218]) = -2099564594;
  int v4 = (*(uint64_t (**)(__CFString *))(v2 + 8 * (v1 + 932)))(@"0dnM19zBqLw5ZPhIo4GEkg");
  return (*(&off_26EFDBE20 + (int)((v4 * ((v1 - 32) ^ 0x966D2E93 ^ v3)) ^ v1)))();
}

uint64_t sub_23C1D72EC()
{
  (*(void (**)(void))(v2 + 8 * (v0 ^ 0x681)))();
  *(void *)(v3 + 304) = 0;
  LODWORD(STACK[0x2240]) = v1;
  return (*(&off_26EFDBE20
          + (((16 * (*(void *)STACK[0x1238] != 0)) | (32 * (*(void *)STACK[0x1238] != 0))) ^ v0 ^ 0x44B)))();
}

uint64_t sub_23C1D7364()
{
  unsigned int v0 = ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFFDC88A904)) ^ LODWORD(STACK[0x990])) & 0x7FFFFFFF)
     * (LODWORD(STACK[0x988]) ^ 0xC54C428A);
  unint64_t v1 = 1394700225 * ((v0 >> (LODWORD(STACK[0x984]) ^ 4)) ^ v0);
  return (*(&off_26EFDBE20
          + ((999
            * ((LOBYTE(STACK[0x98F]) - 73) != (byte_23C216EB0[v1 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C216680[v1 >> 24] ^ byte_23C2173F0[v1 >> 24] ^ v1 ^ (-61 * BYTE3(v1))))) ^ LODWORD(STACK[0x980]))))();
}

uint64_t sub_23C1D744C()
{
  unsigned int v0 = ((LODWORD(STACK[0x9E0]) - 376253772) & (*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFFDC88A904)) ^ LODWORD(STACK[0x9E8])))
     * (LODWORD(STACK[0x9DC]) ^ 0x53216CED);
  unint64_t v1 = 1394700225 * (v0 ^ HIWORD(v0));
  return (*(&off_26EFDBE20
          + ((89
            * ((LOBYTE(STACK[0x9E7]) - 119) == (byte_23C216EB0[v1 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C216680[v1 >> 24] ^ byte_23C2173F0[v1 >> 24] ^ v1 ^ (-61 * BYTE3(v1))))) ^ LODWORD(STACK[0x9D8]))))();
}

uint64_t sub_23C1D7530()
{
  int v3 = (v0 - 1286675245) & 0x4CB11D3F;
  uint64_t v4 = *(void *)(v1 + 1496) - 2523737418 + (v3 - 1771231220);
  uint64_t v5 = *(uint64_t (**)(void))(v2 + 8 * ((1582 * (v4 == 1172434055)) ^ v0));
  LODWORD(STACK[0x9C4]) = v3;
  *(void *)(v1 + 1488) = v4;
  return v5();
}

void sub_23C1D75A8()
{
}

uint64_t sub_23C1D75B8()
{
  unsigned int v0 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ LODWORD(STACK[0xA50])) & 0x7FFFFFFF);
  unint64_t v1 = 1394700225 * (v0 ^ HIWORD(v0));
  uint64_t v2 = *(&off_26EFDBE20
       + ((35
         * (LOBYTE(STACK[0x5F7]) == (byte_23C20EC30[(v1 >> 24) + 2] ^ byte_23C20F760[v1 >> 24] ^ byte_23C20FD90[v1 >> 24] ^ v1 ^ (23 * BYTE3(v1))))) ^ LODWORD(STACK[0xA44])));
  LODWORD(STACK[0xBFC]) = STACK[0xA3C];
  return v2();
}

void sub_23C1D7680()
{
  int v2 = STACK[0xBFC];
  LODWORD(STACK[0xC00]) = STACK[0xBFC];
  LODWORD(STACK[0xC04]) = v2 ^ 0x397;
  LODWORD(STACK[0xC08]) = (v2 ^ 0x397) - 1771230829;
  uint64_t v3 = **(void **)(v0 + 152);
  unsigned int v4 = (STACK[0xA4C] & 0xEF1E9EB8) + (LODWORD(STACK[0xA48]) ^ 0xF78F4F5C);
  LODWORD(STACK[0xC0C]) = v4;
  uint64_t v5 = v3 + (int)(v4 + 141602980);
  *(void *)(v1 + 2072) = v5;
  *(void *)(v1 + 512) = v5;
  JUMPOUT(0x23C1D36A8);
}

uint64_t sub_23C1D76F8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((62 * ((((a2 + ((v8 + 353) ^ (a4 + 593)) - 1208) ^ (v7 + 8 == a7)) & 1) == 0)) ^ (v8 + 353))))();
}

uint64_t sub_23C1D77B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  STACK[0x268] = v33;
  return a26(a33);
}

void sub_23C1D77D0()
{
  int v0 = LOBYTE(STACK[0x5F7]);
  LODWORD(STACK[0xAAC]) = v0 ^ 0xEFAB6E6B;
  LODWORD(STACK[0xAB0]) = (2 * v0) & 0xD6;
  char v1 = (LOBYTE(STACK[0xA84]) - (((LOBYTE(STACK[0xA84]) << (LOBYTE(STACK[0xA8C]) - 27)) + 12) & 0x78) + 2) ^ 0x3C;
  LOBYTE(STACK[0x4AB]) = v0 + ((22 * v1) & 0x1E) + ((-101 * v1) ^ 0xF) - 71;
  JUMPOUT(0x23C1B1760);
}

uint64_t sub_23C1D78E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((1795 * (v43 + 8 == ((v44 - 153) ^ a43) - 855844381)) ^ v44)))();
}

uint64_t sub_23C1D791C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unint64_t a47)
{
  STACK[0x2C0] = a47;
  return a25(a26);
}

uint64_t sub_23C1D7938(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v52 = v51 + a3 - 1248;
  uint64_t v54 = (*(uint64_t (**)(void))(a2 + 8 * (v51 + a3 + 22)))();
  return (*(uint64_t (**)(uint64_t))(a2
                                            + 8
                                            * (v52 | (16 * (((a51 == 0) ^ ((v52 ^ 0x6D) - 106)) & 1)))))(v54);
}

void sub_23C1D79F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  LODWORD(STACK[0x2168]) = STACK[0x360];
  *(void *)(v37 + 88) = a33;
  STACK[0x250] = *(void *)(v36 + 4056);
  (*(void (**)(void))(v34 + 8 * (v35 ^ 0x4EE)))(*(void *)(v33 + 416));
  JUMPOUT(0x23C1D3D58);
}

void sub_23C1D7B84()
{
  unsigned int v1 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFF947A991CLL)) ^ LODWORD(STACK[0xBF0])) & 0x7FFFFFFF);
  int v2 = (v1 >> (LODWORD(STACK[0xBE4]) ^ 0x21)) ^ v1;
  LOBYTE(STACK[0x4AB]) = byte_23C211AD0[*(void *)(v0 + 2032) & 0xF | (16 * ((1394700225 * v2) >> 24))] ^ LOBYTE(STACK[0x5F7]) ^ (-63 * v2);
  JUMPOUT(0x23C1D7C10);
}

uint64_t sub_23C1D7C18()
{
  int v1 = LOBYTE(STACK[0x5F7]);
  LOBYTE(STACK[0xC1E]) = v1;
  int v2 = STACK[0xC08];
  unsigned int v3 = ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ LODWORD(STACK[0xC10])) & 0x7FFFFFFF)
     * (LODWORD(STACK[0xC08]) - 1129037194);
  unsigned int v4 = 1394700225 * (v3 ^ HIWORD(v3));
  uint64_t v5 = HIBYTE(v4);
  LOBYTE(STACK[0xC1F]) = v4;
  *(void *)(v0 + 2088) = v5;
  int v6 = byte_23C214E80[v5];
  uint64_t v7 = (v5 + 2);
  *(void *)(v0 + 2096) = v7;
  LODWORD(v7) = byte_23C2107A0[v7];
  int v8 = byte_23C212CF0[v5 + 1];
  LOBYTE(STACK[0xC36]) = HIBYTE(v4);
  unsigned int v9 = v7 ^ v6 ^ v8 ^ (-9 * v5) ^ v4 ^ v1;
  LOBYTE(STACK[0xC37]) = v9;
  LODWORD(STACK[0xC38]) = ((2 * (char)v9) & 0xFE6FCEBA) + ((char)v9 ^ 0xFF37E75D);
  unint64_t v10 = *(&off_26EFDBE20
        + (int)((997
               * (((((LODWORD(STACK[0xC00]) | v9) - v9) | (LODWORD(STACK[0xC00]) - v9) & ~(v9 ^ LODWORD(STACK[0xC00]))) >> 7) & 1)) ^ (LODWORD(STACK[0xC00]) + 441)));
  LODWORD(STACK[0x648]) = v2;
  LODWORD(STACK[0x64C]) = 143773250;
  return v10();
}

uint64_t sub_23C1D7D60(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((char)(byte_23C20EC30[*(void *)(v2 + 2096)] ^ byte_23C20F760[*(void *)(v2 + 2088)] ^ (23 * LOBYTE(STACK[0xC36])) ^ byte_23C20FD90[*(void *)(v2 + 2088)] ^ LOBYTE(STACK[0xC1F]) ^ LOBYTE(STACK[0xC1E])) > 57)
                                * ((a2 + LODWORD(STACK[0xC04]) + 1757891815) & 0xCB83FD ^ 0x182)) ^ LODWORD(STACK[0xC04]))))();
}

void sub_23C1D7DFC()
{
}

uint64_t sub_23C1D7EB4()
{
  uint64_t v3 = (v0 + 719);
  uint64_t v4 = (v3 ^ 0x45A) + *(void *)(v1 + 2280);
  uint64_t v5 = *(uint64_t (**)(void))(v2 + 8 * (int)(((v4 == 1784589254) * (((v0 + 69469044) | 0x9249284B) + 1771231278)) ^ v0));
  LODWORD(STACK[0xCD4]) = v3;
  *(void *)(v1 + 2272) = v4;
  return v5();
}

uint64_t sub_23C1D7F28()
{
  unsigned int v0 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFFDC88A904)) ^ LODWORD(STACK[0xCF8])) & 0x7FFFFFFF);
  unint64_t v1 = (v0 ^ HIWORD(v0)) * (LODWORD(STACK[0xCF0]) ^ 0x53216E4D);
  int v2 = byte_23C216EB0[v1 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C216680[v1 >> 24] ^ byte_23C2173F0[v1 >> 24] ^ v1 ^ (-61 * (((v0 ^ HIWORD(v0)) * (LODWORD(STACK[0xCF0]) ^ 0x53216E4D)) >> 24));
  return (*(&off_26EFDBE20
          + ((55 * ((((LOBYTE(STACK[0xCF7]) - 104 - v2) | (v2 - (LOBYTE(STACK[0xCF7]) - 104))) & 0x80) == 0)) ^ LODWORD(STACK[0xCE8]))))();
}

void sub_23C1D8004()
{
  unsigned int v1 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFF947A991CLL)) ^ LODWORD(STACK[0xD20])) & 0x7FFFFFFF);
  unint64_t v2 = 1394700225 * (v1 ^ HIWORD(v1));
  unsigned int v3 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8)) ^ (LODWORD(STACK[0xD14])
                                                                             + *(_DWORD *)(v0 + 2840)
                                                                             - 1493175637)) & 0x7FFFFFFF);
  unint64_t v4 = 1394700225 * (v3 ^ HIWORD(v3));
  LOBYTE(STACK[0x4AB]) = byte_23C217610[v2 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C20F880[(v2 >> 24) + 2] ^ byte_23C214F80[v2 >> 24] ^ byte_23C213440[v4 >> 24] ^ byte_23C216DA0[v4 >> 24] ^ v2 ^ byte_23C214970[v4 >> 24] ^ (41 * BYTE3(v2)) ^ v4 ^ (21 * BYTE3(v4));
  JUMPOUT(0x23C1B1694);
}

uint64_t sub_23C1D81B8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 + 1155)))();
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((((v1 - 258) | 0x104) ^ 0x6992D2A2)
                                                    + ((v1 + 274795380) | 0x860C204A))
                                                   * v0) ^ v1)))(v3);
}

void sub_23C1D821C()
{
  unsigned int v1 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28)) ^ LODWORD(STACK[0xDE0])) & 0x7FFFFFFF);
  unint64_t v2 = 1394700225 * (v1 ^ HIWORD(v1));
  unsigned int v3 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8)) ^ (LODWORD(STACK[0xDD4])
                                                                             + *(_DWORD *)(v0 + 2408)
                                                                             - 1587389016)) & 0x7FFFFFFF);
  unint64_t v4 = 1394700225 * (v3 ^ HIWORD(v3));
  LOBYTE(STACK[0x4AB]) = byte_23C2111C0[v2 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C217710[v2 >> 24] ^ byte_23C213330[(v2 >> 24) + 1] ^ byte_23C213440[v4 >> 24] ^ byte_23C216DA0[v4 >> 24] ^ v2 ^ byte_23C214970[v4 >> 24] ^ (5 * BYTE3(v2)) ^ v4 ^ (21 * BYTE3(v4));
  JUMPOUT(0x23C1BA4D0);
}

void sub_23C1D835C()
{
  unsigned int v1 = 1394700225
     * ((LODWORD(STACK[0xDFC]) ^ 0x7FFFFE0D) & (*(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8)) ^ LODWORD(STACK[0xE08])));
  unint64_t v2 = 1394700225 * (v1 ^ HIWORD(v1));
  unsigned int v3 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x2A17CE9C)) ^ (*(_DWORD *)(v0 + 3832) + *(_DWORD *)(v0 + 2568))) & 0x7FFFFFFF);
  unint64_t v4 = 1394700225 * (v3 ^ HIWORD(v3));
  LOBYTE(STACK[0x4AB]) = byte_23C213440[v2 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C216DA0[v2 >> 24] ^ byte_23C214970[v2 >> 24] ^ byte_23C20ED50[v4 >> 24] ^ byte_23C20F250[(v4 >> 24) + 1] ^ v2 ^ byte_23C212AD0[v4 >> 24] ^ (21 * BYTE3(v2)) ^ v4 ^ (-43 * BYTE3(v4));
  JUMPOUT(0x23C1BA4D0);
}

void sub_23C1D8494()
{
  uint64_t v4 = v1[326];
  v1[327] = v4;
  int v5 = STACK[0xE24];
  LODWORD(STACK[0xE38]) = STACK[0xE24];
  int v6 = v5 ^ (v0 + 262);
  LODWORD(STACK[0xE3C]) = v6;
  v4 -= 302921170;
  char v7 = *(unsigned char *)(STACK[0x1730] + v4);
  LODWORD(STACK[0xE40]) = 56 * (v6 ^ (v0 + 1));
  LOBYTE(STACK[0xE47]) = v7;
  uint64_t v8 = **(void **)(v2 + 89) + v4;
  v1[330] = v8;
  v1[64] = v8;
  v1[62] = *(void *)(v3 + 8 * (v5 ^ 0x67A));
  JUMPOUT(0x23C1D8748);
}

uint64_t sub_23C1D8500()
{
  unsigned int v0 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0xFFFFFFFFDC88A904)) ^ LODWORD(STACK[0xE48])) & 0x7FFFFFFF);
  unint64_t v1 = (v0 ^ HIWORD(v0)) * (LODWORD(STACK[0xE40]) + 1394699833);
  return (*(&off_26EFDBE20
          + ((75
            * ((LOBYTE(STACK[0xE47]) - 53) != (byte_23C216EB0[v1 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C216680[v1 >> 24] ^ byte_23C2173F0[v1 >> 24] ^ v1 ^ (-61 * (((v0 ^ HIWORD(v0)) * (LODWORD(STACK[0xE40]) + 1394699833)) >> 24))))) ^ LODWORD(STACK[0xE38]))))();
}

uint64_t sub_23C1D85D4()
{
  int v3 = v0 ^ 0x292;
  uint64_t v4 = *(void *)(v1 + 2616) + 1;
  int v5 = *(uint64_t (**)(void))(v2
                           + 8
                           * (int)((1172 * (v4 == (((v0 - 1771230269) - 2220815952) ^ v0 ^ 0x292))) ^ v0));
  LODWORD(STACK[0xE24]) = v3;
  *(void *)(v1 + 2608) = v4;
  return v5();
}

void sub_23C1D8690()
{
  char v1 = STACK[0x5F7];
  unsigned int v2 = (STACK[0xE58] & 0xFFFFFFF0 ^ 0x741FF55F)
     - 2012123552
     - ((2 * (STACK[0xE58] & 0xFFFFFFF0 ^ 0x741FF55F)) & 0x1022DCC0);
  LODWORD(STACK[0xE90]) = v2;
  char v3 = 2 * (((LOBYTE(STACK[0xE78]) ^ 0x58) + 4 * LOBYTE(STACK[0xE78])) & 0x1F)
     + v1
     + ((101 * (LOBYTE(STACK[0xE78]) ^ 0x58)) ^ 0x9F);
  char v4 = v3 - ((2 * v3 + 50) & 0xB0) + 113;
  LOBYTE(STACK[0xE96]) = v4;
  LOBYTE(STACK[0xE97]) = v4 ^ 0x40;
  uint64_t v5 = v0[441] + (v2 ^ 0x88116E60);
  v0[340] = v5;
  v0[64] = v5;
  JUMPOUT(0x23C1D8738);
}

void sub_23C1D87A4()
{
  char v1 = STACK[0x5F7];
  LOBYTE(STACK[0xEA7]) = byte_23C217820[LOBYTE(STACK[0xE97])];
  char v2 = ((74 * (LOBYTE(STACK[0xE90]) ^ 0x60)) & 0x76) + v1 + ((101 * (LOBYTE(STACK[0xE90]) ^ 0x60)) ^ 0xBB);
  unsigned int v3 = (STACK[0xE58] & 0xFFFFFFF4 ^ 0x741FF55F)
     - 902937249
     - ((2 * (STACK[0xE58] & 0xFFFFFFF4 ^ 0x741FF55F)) & 0x945C8ABE);
  LODWORD(STACK[0xEA8]) = v3;
  LOBYTE(STACK[0xEAF]) = v2 - ((2 * v2 + 122) & 0x77) + 56;
  uint64_t v4 = v0[441] + (v3 ^ 0xCA2E455F);
  v0[343] = v4;
  v0[64] = v4;
  JUMPOUT(0x23C1D8744);
}

void sub_23C1D8860()
{
  char v1 = STACK[0x5F7];
  int v2 = LOBYTE(STACK[0xE96]);
  int v3 = LOBYTE(STACK[0xEA7]);
  unsigned int v4 = (v2 ^ v3 ^ 0xFFFFFFB2) + 1;
  v2 ^= 0x14u;
  unsigned int v5 = v2 + (v4 ^ 0xFFFFFFF7) + ((2 * v4) & 0xFFFFFFEF) + 9;
  LOBYTE(STACK[0xEBB]) = byte_23C214A70[LOBYTE(STACK[0xEAF]) ^ 0x86];
  unsigned int v6 = (STACK[0xE58] & 0xFFFFFFF3 ^ 0x741FF55D)
     + 1735736621
     - ((2 * (STACK[0xE58] & 0xFFFFFFF3 ^ 0x741FF55D)) & 0xCEEA7A5A);
  LODWORD(STACK[0xEBC]) = v6;
  int v7 = ((v5 - ((2 * v5) & 0x38) + 28) ^ v3 ^ ((v3 ^ 0xFFFFFFA6) - ((2 * (v3 ^ 0xFFFFFFA6) + 2) & 0xFFFFFFE0) - 15) ^ 0xFFFFFFB5)
     + v2;
  int v8 = (v7 ^ 0xEF) + ((2 * v7) & 0xDE) + 17;
  unsigned int v9 = (((v8 - ((2 * v8) & 0x36)) << 16) - 1910833152) ^ 0x8E1B0000;
  LODWORD(STACK[0xEC0]) = v9 - 74799682 - ((2 * v9) & 0x77140000);
  char v10 = v1 - 54 * (LOBYTE(STACK[0xEA8]) ^ 0x5F) + ((101 * (LOBYTE(STACK[0xEA8]) ^ 0x5F)) ^ 0x7F);
  LOBYTE(STACK[0xEC7]) = v10 - ((2 * v10 + 18) & 0x12) - 62;
  uint64_t v11 = v0[441] + (v6 ^ 0x67753D2D);
  v0[346] = v11;
  v0[64] = v11;
  JUMPOUT(0x23C1D8744);
}

uint64_t sub_23C1D89E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  unsigned int v49 = ((-54 * (LOBYTE(STACK[0xEBC]) ^ 0x2D)) & 0xFFFFFFDA)
      + LOBYTE(STACK[0x5F7])
      + ((101 * (LOBYTE(STACK[0xEBC]) ^ 0x2D)) ^ 0x6D);
  unsigned int v50 = v49 - ((2 * v49 - 106) & 0xFFFFFF87) + 14;
  int v51 = byte_23C20FA90[v50 ^ 0x23];
  LOBYTE(STACK[0xED3]) = byte_23C214A70[LOBYTE(STACK[0xEC7]) ^ 0xD9];
  unsigned int v52 = (STACK[0xE58] & 0xFFFFFFF5 ^ 0x741FF55F)
      + 237043232
      - ((2 * (STACK[0xE58] & 0xFFFFFFF5 ^ 0x741FF55F)) & 0x1C41FC40);
  LODWORD(STACK[0xED4]) = v52;
  int v53 = ((((v51 ^ v50 ^ 6) - ((2 * (v51 ^ v50)) & 0xB2)) << 24) + 1493172224) ^ 0x59000000;
  LODWORD(STACK[0xED8]) = v53 - 349046345 - ((2 * v53) & 0xD6000000);
  v48[64] = v48[441] + (v52 ^ 0xE20FE20);
  v48[62] = *(&off_26EFDBE20 + a45 + 824);
  unint64_t v45 = ((v48[64] - qword_268B99528) & 0xFFFFFFFFFFFFFFF0) + qword_268B99520;
  uint64_t v46 = (*(uint64_t (**)(void, unint64_t *, uint64_t))(qword_268B99540
                                                                       + 32 * *(unsigned __int8 *)(v45 + 8)
                                                                       + 8))(*(void *)v45, &STACK[0x637], 1);
  LOBYTE(STACK[0x5F7]) = STACK[0x637];
  return ((uint64_t (*)(uint64_t))v48[62])(v46);
}

void sub_23C1D8AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  char v34 = STACK[0x5F7];
  char v35 = LOBYTE(STACK[0xED4]) ^ 0x20;
  unsigned int v36 = ((LOBYTE(STACK[0xEBB]) ^ 0x3C) + 685372405 - ((2 * (LOBYTE(STACK[0xEBB]) ^ 0x3C)) & 0x1EA)) ^ 0x28D9F3F5 | LODWORD(STACK[0xED8]) ^ 0xEB31F9B7;
  LODWORD(STACK[0xEDC]) = v36 - 716542189 + (~(2 * v36) | 0x556B21D9) + 1;
  char v37 = ((-108 * v35) & 0xAC) + v34 + ((-54 * v35) ^ 0x57) + ((54 * v35) & 0xC8) + ((-101 * v35) ^ 0xE4);
  unsigned int v38 = (STACK[0xE58] & 0xFFFFFFFD ^ 0x741FF557)
      + 1118180232
      - ((2 * (STACK[0xE58] & 0xFFFFFFFD ^ 0x741FF557)) & 0x854C2710);
  LODWORD(STACK[0xEE0]) = v38;
  unsigned __int8 v39 = byte_23C2115D0[(v37 - ((2 * v37 - 6) & 0xE7) + 112) ^ 0xF6];
  LOBYTE(STACK[0xEE7]) = 25 * v39 - ((a33 + 18 * v39) & 0x1C) - 83;
  uint64_t v40 = v33[441] + (v38 ^ 0x42A61388);
  v33[350] = v40;
  v33[64] = v40;
  JUMPOUT(0x23C1D8744);
}

uint64_t sub_23C1D8CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  char v44 = STACK[0x5F7];
  int v45 = ((((LOBYTE(STACK[0xEE7]) ^ 0x7A) - ((2 * (LOBYTE(STACK[0xEE7]) ^ 0x7A)) & 0x18)) << 8) + 621612032) ^ 0x250D0C00;
  LODWORD(STACK[0xEF0]) = v45 - 1520261545 - ((2 * v45) & 0x4AC54C00);
  char v46 = ((74 * (LOBYTE(STACK[0xEE0]) ^ 0x88)) & 0x5E) + v44 + ((101 * (LOBYTE(STACK[0xEE0]) ^ 0x88)) ^ 0x2F);
  unsigned int v47 = STACK[0xE58] & 0xFFFFFFF1 ^ 0x741FF55F;
  LODWORD(STACK[0xEF4]) = v47;
  int v48 = v47 + 123656191 - ((2 * v47) & 0xEBDAFFE);
  LODWORD(STACK[0xEF8]) = v48;
  LOBYTE(STACK[0xEFF]) = (v46 + (~(2 * v46 + 18) | 0xCF) - 94) ^ 0xF2;
  v43[64] = v43[441] + (v48 ^ 0x75ED7FFu);
  v43[62] = *(&off_26EFDBE20 + a40 + 1771231323);
  unint64_t v40 = ((v43[64] - qword_268B99528) & 0xFFFFFFFFFFFFFFF0) + qword_268B99520;
  uint64_t v41 = (*(uint64_t (**)(void, unint64_t *, uint64_t))(qword_268B99540
                                                                       + 32 * *(unsigned __int8 *)(v40 + 8)
                                                                       + 8))(*(void *)v40, &STACK[0x637], 1);
  LOBYTE(STACK[0x5F7]) = STACK[0x637];
  return ((uint64_t (*)(uint64_t))v43[62])(v41);
}

uint64_t sub_23C1D8DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  int v44 = byte_23C2115D0[LOBYTE(STACK[0xEFF])];
  int v45 = LOBYTE(STACK[0x5F7]) - 54 * ~LOBYTE(STACK[0xEF8]) + ((101 * ~LOBYTE(STACK[0xEF8])) ^ 0x7F) - 127;
  int v46 = v45 - ((2 * v45) & 0x44) + 34;
  int v47 = 25 * v44 - ((a36 + 50 * v44) & 0xE8) - 109;
  unsigned int v48 = ((((v47 ^ 0x86) - ((2 * v47) & 0xC2)) << 8) - 95985408) ^ 0xFA476100;
  unsigned int v49 = ((LOBYTE(STACK[0xED3]) ^ 0x3C) - 1206842493 - ((2 * LOBYTE(STACK[0xED3])) & 0xFF07)) ^ 0xB8110B83 | LODWORD(STACK[0xEF0]) ^ 0xA562A657;
  LODWORD(STACK[0xF48]) = v49 - ((2 * v49) & 0x38B4C15C) + 475685038;
  unsigned int v50 = (v48 + 319962699 - ((2 * v48) & 0x26247C00)) ^ 0x13123E4B | LODWORD(STACK[0xEC0]) ^ 0xFB8AA5BE;
  LODWORD(STACK[0xF4C]) = v50 - 1877516527 - ((2 * v50) & 0x202EBE22);
  int v51 = 2 * v46;
  unsigned int v52 = (v51 ^ 0x44) - ((2 * (v51 ^ 0x44)) & 0x48) - 91;
  unsigned int v53 = (v46 ^ 0x1A) + (v52 >> 6 << 7) + (v52 & 0x70 ^ 0xFFFFFFEB) + 53;
  LOBYTE(v53) = (v53 ^ 0x75) + ((2 * v53) & 0xEA) - 4;
  int v54 = STACK[0xE58];
  LODWORD(STACK[0xF50]) = STACK[0xE58] & 2;
  unsigned int v55 = (v54 & 0xFFFFFFFB ^ 0x741FF555) - 1996992311 - 2 * ((v54 & 0xFFFFFFFB ^ 0x741FF555) & 0x8F850CB ^ v54 & 2);
  LODWORD(STACK[0xF54]) = v55;
  unsigned int v56 = v53
      - ((2 * (v51 ^ 0x34 ^ v51 & 8) - (v51 ^ 0x34) + 25) & 0x1A ^ 0x18)
      + ((v53 < 0x71u) << 8)
      - 100;
  LOBYTE(v56) = byte_23C2115D0[(v56 - 0x600A6859C3E54115 - ((2 * v56) & 0x78357DFC) + 19) ^ 0x9FF597A63C1ABEEBLL];
  LOBYTE(STACK[0xF5B]) = 25 * v56 - ((a36 + 50 * v56) & 0xE8) + 19;
  LODWORD(STACK[0xF5C]) = (v54 & 0xFFFFFFFC ^ 0x741FF557)
                        + 1569982210
                        + ((2 * (v54 & 0xFFFFFFFC ^ 0x741FF557)) & 0xBB280E00 ^ 0xFFFFFFFB)
                        + 1;
  uint64_t v57 = v43[441] + (v55 ^ 0x88F850C9);
  v43[365] = v57;
  v43[64] = v57;
  v43[62] = *(&off_26EFDBE20 + a40 + 568);
  unint64_t v40 = ((v43[64] - qword_268B99528) & 0xFFFFFFFFFFFFFFF0) + qword_268B99520;
  uint64_t v41 = (*(uint64_t (**)(void, unint64_t *, uint64_t))(qword_268B99540
                                                                       + 32 * *(unsigned __int8 *)(v40 + 8)
                                                                       + 8))(*(void *)v40, &STACK[0x637], 1);
  LOBYTE(STACK[0x5F7]) = STACK[0x637];
  return ((uint64_t (*)(uint64_t))v43[62])(v41);
}

void sub_23C1D9078()
{
  char v1 = LOBYTE(STACK[0x5F7]) - 54 * (LOBYTE(STACK[0xF54]) ^ 0xC9) + ((101 * (LOBYTE(STACK[0xF54]) ^ 0xC9)) ^ 0x7F);
  unsigned int v2 = ((((LOBYTE(STACK[0xF5B]) ^ 0x56) - ((2 * (LOBYTE(STACK[0xF5B]) ^ 0x56)) & 0x1D0)) << 8) - 1175590912) ^ 0xB9EDE800;
  LOBYTE(STACK[0xF6B]) = v1 - ((2 * v1 + 114) & 0xB4) - 109;
  unsigned int v3 = (v2 - 2135468400 - ((2 * v2) & 0x16EAC00)) ^ 0x80B75690 | LODWORD(STACK[0xEDC]) ^ 0xD54A6F13;
  LODWORD(STACK[0xF6C]) = v3 - 478690769 - ((2 * v3) & 0xC6EF845E);
  uint64_t v4 = v0[441] + (LODWORD(STACK[0xF5C]) ^ 0x5D940702u);
  v0[367] = v4;
  v0[64] = v4;
  JUMPOUT(0x23C1D8734);
}

uint64_t sub_23C1D9164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  int v43 = LOBYTE(STACK[0x5F7]);
  uint64_t v44 = LOBYTE(STACK[0xF6B]);
  int v45 = byte_23C20FA90[v44 ^ 0xF6];
  int v46 = LOBYTE(STACK[0xF5C]) | 2;
  unsigned int v47 = STACK[0xE58] & 0xFFFFFFFA ^ 0x741FF555;
  LODWORD(STACK[0xF7C]) = v47;
  int v48 = v47 - 1705673526 - ((2 * v47) & 0x34AAF994);
  LODWORD(STACK[0xF80]) = v48;
  LODWORD(v44) = ((((v45 ^ v44 ^ 0x20) - ((2 * (v45 ^ v44)) & 0x14)) << 24) - 1979711488) ^ 0x8A000000;
  LODWORD(STACK[0xF84]) = v44 + 2010590574 - ((2 * v44) & 0xEE000000);
  unsigned int v49 = v43 + ((-54 * v46) & 0xFFFFFFEF) + ((101 * v46) ^ 0x77) + 65;
  LODWORD(v44) = (v49 ^ 0x9C) + 1408595836 - ((2 * (v49 ^ 0x9C)) & 0xF8);
  LODWORD(STACK[0xF88]) = v44;
  LODWORD(v44) = v44 ^ 0x53F5777C;
  int v50 = (v49 ^ 0x904604B4) + v44 - ((2 * (v49 ^ 0xBF)) & 0x1E8) + 1874459637;
  int v51 = v50 - ((2 * v50) & 0x4FC4FDC8) - 1478328604;
  LODWORD(STACK[0xF8C]) = v51;
  LODWORD(STACK[0xF90]) = ((v51 ^ 0x11A) & v44) - ((2 * ((v51 ^ 0x11A) & v44)) & 0x2F1EFD4E) + 395280047;
  v42[64] = v42[441] + (v48 ^ 0x9A557CCA);
  v42[62] = *(&off_26EFDBE20 + (a39 ^ 0x6F2));
  unint64_t v39 = ((v42[64] - qword_268B99528) & 0xFFFFFFFFFFFFFFF0) + qword_268B99520;
  uint64_t v40 = (*(uint64_t (**)(void, unint64_t *, uint64_t))(qword_268B99540
                                                                       + 32 * *(unsigned __int8 *)(v39 + 8)
                                                                       + 8))(*(void *)v39, &STACK[0x637], 1);
  LOBYTE(STACK[0x5F7]) = STACK[0x637];
  return ((uint64_t (*)(uint64_t))v42[62])(v40);
}

void sub_23C1D9B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36)
{
  char v37 = LOBYTE(STACK[0x5F7])
      + ((-54 * (LOBYTE(STACK[0xFFC]) ^ 0x76)) & 0x9F)
      + ((101 * (LOBYTE(STACK[0xFFC]) ^ 0x76)) ^ 0xCF)
      + 109;
  int v38 = LOBYTE(STACK[0xFF5]) ^ LOBYTE(STACK[0xFF6]) ^ 0xC1;
  unsigned int v39 = (((v38 - ((2 * v38) & 0x158)) << 16) - 1716781056) ^ 0x99AC0000;
  int v40 = byte_23C20FA90[LOBYTE(STACK[0xFF7]) ^ 0x74] ^ LOBYTE(STACK[0xFF7]);
  int v41 = ((((v40 ^ 0x90) - ((2 * v40) & 0xD8)) << 24) + 1811939328) ^ 0x6C000000;
  int v42 = (v41 + 375884175 - ((2 * v41) & 0x2C000000)) ^ 0x1667898F | LODWORD(STACK[0xF94]) ^ 0x6AD0EC42;
  LODWORD(STACK[0x1000]) = v42 - ((2 * v42) & 0xDAA13FF8) - 313483268;
  unsigned int v43 = (v39 + 2051379903 - ((2 * v39) & 0x748A0000)) ^ 0x7A4592BF | LODWORD(STACK[0xFDC]) ^ 0xDABD1D48;
  LODWORD(STACK[0x1004]) = v43 - ((2 * v43) & 0xB3545E12) - 643158263;
  unsigned int v44 = (STACK[0xE58] & 0xFFFFFFF8 ^ 0x741FF557)
      - 1680676373
      + ((2 * (STACK[0xE58] & 0xFFFFFFF8 ^ 0x741FF557)) & 0x37A5D3D0 ^ 0xFFFFFFF9)
      + 1;
  LOBYTE(v43) = byte_23C2115D0[(v37 - ((2 * v37 + 56) & 0x2E) + 19) ^ 0xCELL];
  LODWORD(STACK[0x1008]) = v44;
  LOBYTE(STACK[0x100F]) = 25 * v43 - ((a36 + 50 * v43) & 0x56) + 74;
  uint64_t v45 = v36[441] + (v44 ^ 0x9BD2E9EB);
  v36[387] = v45;
  v36[64] = v45;
  JUMPOUT(0x23C1D8744);
}

void sub_23C1D9D30()
{
  char v2 = ((-54 * (LOBYTE(STACK[0x1008]) ^ 0xEB)) & 0xD6)
     + LOBYTE(STACK[0x5F7])
     + ((101 * (LOBYTE(STACK[0x1008]) ^ 0xEB)) ^ 0x6B);
  int v3 = ((((LOBYTE(STACK[0x100F]) ^ 0x42) - ((2 * (LOBYTE(STACK[0x100F]) ^ 0x42)) & 0x6E)) << 8) + 1317353216) ^ 0x4E853700;
  unsigned int v4 = (v3 - ((2 * v3) & 0x1978DE00) - 1933807839) ^ 0x8CBC6F21 | LODWORD(STACK[0xFA4]) ^ 0xDA082BB3;
  int v5 = byte_23C214A70[(v2 + ((100 - 2 * v2) | 0xD) - 57) ^ 0xB5] ^ 0x3C;
  int v6 = LODWORD(STACK[0x129C]) ^ LODWORD(STACK[0xE5C]) ^ (v4 - ((2 * v4) & 0x162660D6) - 1961676693) ^ (v5 - ((2 * v5) & 0x152) + 1841905321);
  unsigned int v7 = LODWORD(STACK[0xE64]) ^ LODWORD(STACK[0xFE0]) ^ LODWORD(STACK[0x129C]) ^ 0xDD07A251;
  int v8 = STACK[0x1294];
  int v9 = (((LODWORD(STACK[0x1290]) ^ 0x71B14F9C ^ v6) + 1) ^ 0x3CC63FFE)
     + LODWORD(STACK[0x11C8])
     + ((2 * ((LODWORD(STACK[0x1290]) ^ 0x71B14F9C ^ v6) + 1)) & 0x798C7FFC);
  int v10 = LODWORD(STACK[0x1000]) ^ LODWORD(STACK[0xE60]) ^ LODWORD(STACK[0x1290]);
  unsigned int v11 = (v6 ^ ((v6 ^ 0x871FD533) - ((2 * (v6 ^ 0x871FD533) + 2) & 0x5CC7AEF4) - 1369188485) ^ 0x89986EE9 ^ (v9 - ((2 * v9) & 0xBE3726BE) + 1595642719))
      + LODWORD(STACK[0x1294]);
  HIDWORD(v12) = v10 ^ ~LODWORD(STACK[0x129C]);
  LODWORD(v12) = v10 ^ LODWORD(STACK[0x129C]) ^ 0x99173766;
  int v13 = ((v12 >> 1) - ((2 * (v12 >> 1)) & 0xA106F4E4) + 1350793842) ^ LODWORD(STACK[0x11CC]);
  int v14 = 2 * ((v7 & v8) - ((2 * (v7 & v8)) & 0x57EA9A4E)) + 1474992718;
  HIDWORD(v12) = v13 ^ 0x226A1D5F;
  LODWORD(v12) = v13;
  unsigned int v15 = (v12 >> 31) - ((2 * (v12 >> 31)) & 0xA2A09288) - 783267516;
  unsigned int v16 = ((2 * v14) & 0xEFCCFC3C ^ 0x503BCBE3)
      + (v14 ^ 0xDFF31BAF)
      + ((v8 + v7) ^ 0xBFFF47DD)
      + ((2 * (v8 + v7)) & 0x7FFE8FBA);
  unsigned int v17 = LODWORD(STACK[0x1004]) ^ LODWORD(STACK[0xE54]) ^ LODWORD(STACK[0x1290]) ^ LODWORD(STACK[0x129C]) ^ LODWORD(STACK[0x1288]);
  unsigned int v18 = (v11 - ((2 * v11) & 0xA3C2F460) + 1373731376) ^ LODWORD(STACK[0x1288]);
  unsigned int v19 = (v16 - ((2 * v16 + 265186438) & 0xAE782AE) + 1029371802) ^ LODWORD(STACK[0x1288]);
  unint64_t v20 = STACK[0x15B8];
  uint64_t v21 = *(void *)(v1 + 113);
  uint64_t v22 = *(void *)(v0 + 3560);
  uint64_t v23 = *(void *)(v0 + 3544);
  unsigned int v24 = *(_DWORD *)(v21 + 4 * (HIBYTE(v15) ^ 0x68)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v17) ^ 0xDu)) ^ *(_DWORD *)(v22 + 4 * (((v16 - ((2 * v16 - 122) & 0xAE) - 102) ^ LOBYTE(STACK[0x1288])) ^ 0x60u)) ^ *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v18) ^ 0x19u));
  unsigned int v25 = *(_DWORD *)(v21 + 4 * (HIBYTE(v18) ^ 0x68)) ^ *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v17) ^ 0xACu)) ^ *(_DWORD *)(v22 + 4 * (((v12 >> 31) - ((2 * (v12 >> 31)) & 0x88) + 68) ^ 0xC3u)) ^ *(_DWORD *)(v23 + 4 * (((unsigned __int16)((v16 - ((2 * v16 + 27782) & 0x82AE) - 2150) ^ LOWORD(STACK[0x1288])) >> 8) ^ 0x28u));
  unsigned int v26 = *(_DWORD *)(v21 + 4 * (HIBYTE(v17) ^ 0xF3)) ^ *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v19) ^ 0xD6u)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v15) ^ 0xE0u)) ^ *(_DWORD *)(v22 + 4 * (v18 ^ 0xF4u));
  unsigned int v27 = *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v15) ^ 0x8Bu)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v19) ^ 0x6C)) ^ *(_DWORD *)(v22 + 4 * ((LOBYTE(STACK[0x1004]) ^ LOBYTE(STACK[0xE54]) ^ LOBYTE(STACK[0x1290]) ^ LOBYTE(STACK[0x129C]) ^ LOBYTE(STACK[0x1288])) ^ 0x63u)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v18) ^ 0x85u));
  unsigned int v28 = *(_DWORD *)(v23 + 4 * (BYTE1(v26) ^ 0x82u)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v24) ^ 0x2C)) ^ *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v25) ^ 0xE4u)) ^ *(_DWORD *)(v22 + 4 * (v27 ^ 0xC5u));
  unsigned int v29 = *(_DWORD *)(v21 + 4 * (HIBYTE(v25) ^ 0xC2)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v27) ^ 0xF5u)) ^ *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v26) ^ 0x1Au)) ^ *(_DWORD *)(v22 + 4 * (v24 ^ 0xBBu));
  int v30 = *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v24) ^ 0x3Eu));
  unsigned int v31 = *(_DWORD *)(v21 + 4 * (HIBYTE(v26) ^ 0x56)) ^ *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v27) ^ 0x6Bu)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v24) ^ 0x78u)) ^ *(_DWORD *)(v22 + 4 * (v25 ^ 0x98u));
  unsigned int v32 = *(_DWORD *)(v21 + 4 * (HIBYTE(v27) ^ 0x61)) ^ v30 ^ *(_DWORD *)(v23 + 4 * (BYTE1(v25) ^ 0xD4u)) ^ *(_DWORD *)(v22 + 4 * (v26 ^ 0x6Du));
  char v33 = v28 ^ 0xE5;
  if (v17 == -206828189) {
    char v33 = -1;
  }
  char v34 = (v33 & (v28 ^ 0xE5)) - ((2 * (v33 & (v28 ^ 0xE5))) & 0x87);
  int v35 = *(_DWORD *)(v23 + 4 * (BYTE1(v32) ^ 0xD9u));
  unsigned int v36 = ((v35 & 0x9242F0B3 ^ 0x8B2DFDE1) - ((2 * (v35 & 0x9242F0B3 ^ 0x8B2DFDE1)) & 0x41E32E6) + 34543991) ^ 0x8D5A472D;
  unsigned int v37 = (v36 | 0x9BD2D66) - (v36 | 0xF642D299) - 163392871;
  int v38 = *(_DWORD *)(v21 + 4 * (HIBYTE(v28) ^ 0x13)) ^ *(_DWORD *)(STACK[0x15B8] + 4 * (BYTE2(v29) ^ 0xCDu)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v31) ^ 0x83u));
  int v39 = *(_DWORD *)(v22 + 4 * (v32 ^ 0x43u));
  unsigned int v40 = v39 & 0x40000000 | ((v39 & 0x40000000u) >> 30 << 31);
  unsigned int v41 = ((2 * (v35 & 0x6DBD0F4C ^ 0xE3C95349)) | 0x407E84E) - (v35 & 0x6DBD0F4C ^ 0xE3C95349) + 2113670105;
  unsigned int v42 = ((v39 & 0xBFFFFFFF ^ 0x56425B83) - ((2 * (v39 & 0xBFFFFFFF ^ 0x56425B83)) & 0x62873442) - 1320969695) ^ 0xCD6F7EEB;
  int v43 = ((2 * v42) | 0x4EE545DE) - v42 + 1485659409;
  if (3 * ((v40 + 0x40000000) & ~v38)) {
    int v44 = 2073974551 - (v40 | 0x3FEFFFFF);
  }
  else {
    int v44 = v40 - 1146202344;
  }
  unsigned int v45 = *(_DWORD *)(v20 + 4 * (BYTE2(v31) ^ 0x27u)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v29) ^ 0xC5)) ^ v41 ^ *(_DWORD *)(v22 + 4 * ((v34 - 61) ^ 0xC3u)) ^ v37;
  unsigned int v46 = ((v38 ^ 0xFB9F315F)
       - 2075023128
       + v44
       - ((2 * ((v38 ^ 0xFB9F315F) - 2075023128 + v44)) & 0xE8DA2B98)
       + 1953306060) ^ v43;
  unsigned int v47 = *(_DWORD *)(v22 + 4 * (v29 ^ 0xEBu)) ^ *(_DWORD *)(v20 + 4 * (BYTE2(v32) ^ 0xBCu)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v28) ^ 0xD5u)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v31) ^ 0x87));
  int v48 = *(_DWORD *)(v22 + 4 * (v31 ^ 0x10u)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v29) ^ 0xAEu)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v32) ^ 0xF2)) ^ *(_DWORD *)(v20 + 4 * (BYTE2(v28) ^ 0xD9u));
  int v49 = ((2 * v48) ^ 0x29E15F2C) - ((2 * ((2 * v48) ^ 0x29E15F2C)) & 0x6B4E7D64) - 1247330638;
  unsigned int v50 = (((v48 ^ 0x14F0AF96) - 817144982) ^ 0x6FE9F7FF)
      + ((2 * ((v48 ^ 0x14F0AF96) - 817144982)) & 0xDFD3EFFE)
      + (v49 & 0x9E96B6D4 ^ 0x548673B3)
      + ((2 * v49) & 0x3D2D65A8 ^ 0xD6F39ADF);
  unsigned int v51 = ((((v46 ^ 0x3DF396E7) >> (BYTE1(v46) & 0x18 ^ 0x10))
        + 315018262
        + (~(2 * ((v46 ^ 0x3DF396E7) >> (BYTE1(v46) & 0x18 ^ 0x10))) | 0xDA7267D3)
        + 1) ^ 0x12C6CC16) >> (BYTE1(v46) & 0x18 ^ 8);
  int v52 = *(_DWORD *)(v20 + 4 * (BYTE2(v45) ^ 0x2Fu)) ^ *(_DWORD *)(v21
                                                                  + 4
                                                                  * ((v51 - ((2 * v51) & 0xB8) - 36) ^ 0xDCu));
  int v53 = *(_DWORD *)(v23 + 4 * (BYTE1(v47) ^ 0x82u));
  int v54 = v53 ^ 0x70CC22F9;
  int v55 = v54 + (v53 ^ 0x460CEA0 ^ v52) + 1 - ((2 * (v54 + (v53 ^ 0x460CEA0 ^ v52) + 1)) & 0x2C54C0E0);
  unsigned int v56 = v50 - 803880225;
  if (v50 - 803880225 >= 0xD41D2597) {
    char v57 = -122;
  }
  else {
    char v57 = 29;
  }
  char v58 = v50 + v57;
  int v59 = v55 + 371875952;
  if (v56 >= 0xD41D2597) {
    char v61 = -41;
  }
  else {
    char v61 = 64;
  }
  int v60 = (v52 ^ 0x74ACEC59) - ((2 * (v52 ^ 0x74ACEC59) + 2) & 0x1DC83622) + 249830162;
  unsigned int v62 = ((v52 ^ v60 ^ v59 ^ 0x939D68C7) + v54 - ((2 * ((v52 ^ v60 ^ v59 ^ 0x939D68C7) + v54)) & 0xF474036E) + 2050621879) ^ *(_DWORD *)(v22 + 4 * (v58 + v61 - 126));
  int v63 = (v62 ^ 0x64A892E) - 2 * (((v62 ^ 0x64A892E) + 1566444848) & 0x485902A7 ^ (v62 ^ 0x64A892E) & 7) - 1514729520;
  unsigned __int8 v64 = v62 ^ 0x8E;
  if ((v62 ^ 0x64A8920) >= 0xA2A1F2D0)
  {
    char v65 = 112;
  }
  else
  {
    int v63 = v62 ^ 0x4E138B8E;
    char v65 = -96;
  }
  BOOL v66 = v63 == 1213792928;
  unsigned int v67 = *(_DWORD *)(v20 + 4 * ((BYTE2(v56) - ((v56 >> 15) & 0xB6) + 91) ^ 0x5Bu));
  int v68 = ((4 * v67) ^ 0x671D3884) - 2 * (((4 * v67) ^ 0x671D3884) & 0x780F8E14 ^ (4 * v67) & 0x10) - 133198331;
  unsigned int v69 = ((v68 & 0x84021080 ^ 0x7180D2BD) + (v68 & 0x202900 ^ 0x200901) - 2) ^ 0xFDB2D69C;
  unsigned int v70 = (((2 * v69) | 0xAB72A1BE) - v69 - 1438208223) ^ 0x59A955FF | (v67 >> 30);
  unsigned int v71 = v70 - ((2 * v70) & 0xD8E4222E) - 328068841;
  unsigned int v72 = *(_DWORD *)(v21 + 4 * (HIBYTE(v47) ^ 0x3D));
  unsigned int v73 = ((((4 * v72) ^ 0x4A51761C) - ((2 * ((4 * v72) ^ 0x4A51761C)) & 0xA7C24E40) - 740219101) & 0x84223980 | (v72 >> 30)) ^ 0x80202102;
  int v74 = v73 - ((2 * v73) & 0x8404006) + 1848927871;
  HIDWORD(v75) = v74 ^ ~v71;
  LODWORD(v75) = v74 ^ 0x1656FB34 ^ v71;
  int v76 = (v75 >> 2) - ((2 * (v75 >> 2)) & 0x891F6538) + 1150268060;
  int v77 = ((2 * ((v72 ^ v67) & 0x1EF7719F ^ 0x8131583)) | 0x3AD71DA0) - ((v72 ^ v67) & 0x1EF7719F ^ 0x8131583) - 493588176;
  unsigned int v78 = *(_DWORD *)(v22 + 4 * (v46 ^ 0xE7u)) ^ *(_DWORD *)(v20
                                                                            + 4
                                                                            * (((BYTE2(v47) ^ 0xE5)
                                                                              - ((2 * (BYTE2(v47) ^ 0xE5)) & 0x72)
                                                                              + 569) ^ 0x22Bu)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v45) ^ 0xC2)) ^ *(_DWORD *)(v23 + 4 * ((BYTE1(v56) - ((v56 >> 7) & 0x48) + 36) ^ 0x24u));
  unsigned int v79 = *(_DWORD *)(v22 + 4 * (v45 ^ 0x1Cu)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v46) ^ 0x96u)) ^ ((v76 ^ 0xA18B918B | v77 ^ 0x1F2B8AD5) - ((2 * (v76 ^ 0xA18B918B | v77 ^ 0x1F2B8AD5)) & 0x6F4889A) + 58344525);
  unsigned int v80 = *(_DWORD *)(v20 + 4 * (BYTE2(v46) ^ 0xF3u)) ^ *(_DWORD *)(v21 + 4 * HIBYTE(v56)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v45) ^ 0x87u)) ^ *(_DWORD *)(v22 + 4 * (v47 ^ 0x29u));
  if (v66) {
    unsigned __int8 v64 = v65;
  }
  unsigned int v81 = *(_DWORD *)(v20 + 4 * (BYTE2(v78) ^ 0x3Fu)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v62) ^ 6)) ^ *(_DWORD *)(v22 + 4 * (v80 ^ 0x2Au)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v79) ^ 0xC2u));
  unsigned int v82 = *(_DWORD *)(v21 + 4 * (HIBYTE(v78) ^ 0x3D)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v80) ^ 0xCEu)) ^ *(_DWORD *)(v20 + 4 * (BYTE2(v79) ^ 0x11u)) ^ *(_DWORD *)(v22 + 4 * (v64 ^ 0xA0u));
  unsigned int v83 = HIBYTE(v80) ^ 0xDB;
  unsigned int v84 = *(_DWORD *)(v21 + 4 * (HIBYTE(v79) ^ 0x9C)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v62) ^ 0x89u)) ^ *(_DWORD *)(v20 + 4 * (BYTE2(v80) ^ 0x73u)) ^ *(_DWORD *)(v22 + 4 * ~(_BYTE)v78);
  int v85 = *(_DWORD *)(v23 + 4 * (BYTE1(v78) ^ 0xB8u)) ^ *(_DWORD *)(v21 + 4 * v83) ^ *(_DWORD *)(v20
                                                                                                 + 4
                                                                                                 * (BYTE2(v62) ^ 0x4Au)) ^ *(_DWORD *)(v22 + 4 * (v79 ^ 0xABu));
  unsigned int v86 = v85 ^ ((v85 ^ 0xEB0F5069) - ((2 * (v85 ^ 0xEB0F5069) + 2) & 0x31076EC2) + 411285346) ^ ((v85 ^ 0x5E1FF62E)
                                                                                              - ((2 * (v85 ^ 0x5E1FF62E)
                                                                                                + 1780567184) & 0xED8AB834)
                                                                                              - 1412038046) ^ 0xFAB644ED;
  unsigned int v87 = v86 - ((2 * v86 + 35736718) & 0x33C8E70) - 1230049921;
  unsigned int v88 = *(_DWORD *)(v20 + 4 * (BYTE2(v82) ^ 0xABu)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v81) ^ 0x47)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v84) ^ 0x68u)) ^ *(_DWORD *)(v22 + 4 * ((v86 - ((2 * v86 - 114) & 0x70) + 127) ^ 0x38u));
  unsigned int v89 = *(_DWORD *)(v20 + 4 * (BYTE2(v84) ^ 0x63u)) ^ *(_DWORD *)(v22 + 4 * (v81 ^ 0xD2u)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v82) ^ 0x6E)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v87) ^ 0x47u));
  int v90 = *(_DWORD *)(v20 + 4 * (BYTE2(v87) ^ 0x9Eu)) ^ *(_DWORD *)(v22 + 4 * (v82 ^ 0xBBu)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v84) ^ 0x6E)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v81) ^ 0x45u));
  unsigned int v91 = *(_DWORD *)(v21 + 4 * (HIBYTE(v87) ^ 1)) ^ *(_DWORD *)(v20 + 4 * (BYTE2(v81) ^ 0x64u)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v82) ^ 0x52u)) ^ *(_DWORD *)(v22 + 4 * (v84 ^ 0x6Du));
  unsigned int v92 = *(_DWORD *)(v21 + 4 * (HIBYTE(v89) ^ 0x77)) ^ *(_DWORD *)(v20 + 4 * (BYTE2(v90) ^ 0x88u)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v91) ^ 0xEBu)) ^ *(_DWORD *)(v22 + 4 * (v88 ^ 8u));
  char v93 = v92 ^ 0x76;
  unsigned int v94 = 2 * ((v92 ^ 0xF3A1F376) % 0x3E02A4EC);
  char v95 = ((2 * (((v89 & 0x18 ^ 0xAD) - 1) ^ 0xAD)) & 0x1F) - (((v89 & 0x18 ^ 0xAD) - 1) ^ 0xAD) + 54;
  unsigned int v96 = ((((v90 ^ 0xD884DDEu) >> (v95 ^ 0x37)) - ((2 * ((v90 ^ 0xD884DDEu) >> (v95 ^ 0x37))) & 0x72FB2200) - 1182953216) ^ 0xB97D9100) >> (v95 ^ 0x2F);
  unsigned int v97 = (v96 - ((2 * v96) & 0xC7) + 99) ^ 0x63;
  unsigned int v98 = BYTE1(v88) ^ 0x77;
  int v99 = *(_DWORD *)(v22 + 4 * (v91 ^ 0x99u)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v90) ^ 0x4Du));
  unsigned int v100 = *(_DWORD *)(v20 + 4 * (BYTE2(v91) ^ 0x98u)) ^ *(_DWORD *)(v22 + 4 * (v89 ^ 0x25u)) ^ *(_DWORD *)(v23 + 4 * v98) ^ *(_DWORD *)(v21 + 4 * v97);
  unsigned int v101 = *(_DWORD *)(v23 + 4 * (BYTE1(v89) ^ 0x8Au)) ^ *(_DWORD *)(v20 + 4 * (BYTE2(v88) ^ 0x40u)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v91) ^ 0xB8)) ^ *(_DWORD *)(v22 + 4 * (v90 ^ 0xDEu));
  int v102 = *(_DWORD *)(v22
                   + 4
                   * ((*(unsigned char *)(v20 + 4 * (BYTE2(v91) ^ 0x98u)) ^ *(unsigned char *)(v22
                                                                                                + 4
                                                                                                * (v89 ^ 0x25u)) ^ *(unsigned char *)(v23 + 4 * v98) ^ *(unsigned char *)(v21 + 4 * v97)) ^ 0x3Eu)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v92) ^ 0xF3u));
  int v103 = *(_DWORD *)(v21 + 4 * (HIBYTE(v88) ^ 0xD));
  int v104 = *(_DWORD *)(v20 + 4 * (BYTE2(v89) ^ 0x1Bu));
  unsigned int v105 = v99 ^ v104 ^ v103;
  int v106 = *(_DWORD *)(v20 + 4 * (BYTE2(v101) ^ 0xB1u));
  int v107 = *(_DWORD *)(v21 + 4 * (HIBYTE(v101) ^ 0x46));
  int v108 = v107 ^ *(_DWORD *)(v20 + 4 * (BYTE2(v105) ^ 0x4Au));
  unsigned int v109 = (v108 & 0x40043D80 ^ 0x68056D82)
       + (v108 & 0xD146BF88 ^ 0x4601010)
       - ((v108 & 0xD146BF88 ^ 0x4601010) & 0x40043D80);
  int v110 = ((v108 & 0x2EB94077 ^ 0x4204013) - ((2 * (v108 & 0x2EB94077 ^ 0x4204013)) & 0x4C20008E) + 1997571911) ^ 0x75346672;
  unsigned int v111 = (v110 - ((2 * v110) & 0x8C020184) + 1174476994) ^ 0x4A14B9C2 | v109 ^ 0xED277E12;
  unsigned int v112 = v111 - ((2 * v111) & 0xE28F5728) - 246961260;
  int v113 = *(_DWORD *)(v21 + 4 * (HIBYTE(v100) ^ 0xEA));
  unsigned int v114 = v113 ^ *(_DWORD *)(v23 + 4 * (BYTE1(v105) ^ 0xD6u)) ^ v106 ^ *(_DWORD *)(v22
                                                                                  + 4 * (v92 ^ 0x76u));
  int v115 = *(_DWORD *)(v21 + 4 * (HIBYTE(v114) ^ 0xE4));
  unsigned int v116 = ((2 * v115) & 0xF399FF6C ^ 0x2508BB0C)
       + (v115 & 0xFDFFFFFF ^ 0xE958A231)
       + (((v115 ^ 0x6F6BA278) + 1) ^ 0xFFDAF5FF)
       + ((2 * ((v115 ^ 0x6F6BA278) + 1)) & 0xFFB5EBFE);
  if ((v94 & 0x397D7DDE) + (((v92 ^ 0xF3A1F376) % 0x3E02A4EC) ^ 0x1CBEBEEF) == 482262767) {
    char v117 = (((v92 ^ 0xF3A1F376) % 0x3E02A4EC) ^ 0xB9) + 71 + (v94 & 0x72);
  }
  else {
    char v117 = 0;
  }
  unsigned int v118 = v102 ^ v112;
  int v119 = *(_DWORD *)(v20 + 4 * (((v102 ^ v112) >> 16) ^ 0xD9u)) ^ 0x19C74E21;
  BOOL v66 = ((v116 - 2074604981) & v119) == ((2 * ((v116 - 2074604981) & v119)) & 0x21E4F2C4);
  unsigned int v120 = (v104 ^ ((v104 ^ 0xE638B1DE) - ((2 * (v104 ^ 0xE638B1DE) + 2) & 0x9AD62616) - 848620788) ^ 0x56C5FFD5 ^ ((v103 ^ 0x92945D87) + (v104 ^ v103 ^ 0x74ACEC59) + 1 - ((2 * ((v103 ^ 0x92945D87) + (v104 ^ v103 ^ 0x74ACEC59) + 1)) & 0x4D345FE) - 2107006209))
       + (v103 ^ 0x92945D87);
  unsigned int v121 = v99 ^ (v120 - ((2 * v120) & 0xC3481484) + 1638140482);
  unsigned int v122 = BYTE2(v92) ^ 0xA1;
  unsigned int v123 = BYTE1(v100) ^ 0x11;
  int v124 = *(_DWORD *)(v20 + 4 * (BYTE2(v100) ^ 0xD9u)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v92) ^ 0xF3));
  int v125 = *(_DWORD *)(v20 + 4 * v122);
  int v126 = *(_DWORD *)(v23 + 4 * v123);
  int v127 = *(_DWORD *)(v21 + 4 * (HIBYTE(v121) ^ 0x7A));
  HIDWORD(v128) = v126 ^ v125 ^ ~v127;
  LODWORD(v128) = v126 ^ v125 ^ v127 ^ 0xFB9F3158;
  int v129 = (v128 >> 3) - ((2 * (v128 >> 3)) & 0xE20AF17A) + 1896183997;
  int v130 = *(_DWORD *)(v22 + 4 * (v101 ^ 0x31u));
  unsigned int v131 = v121 ^ 0x21;
  HIDWORD(v128) = v130 ^ 1;
  LODWORD(v128) = v130 ^ 0xEF6F9EC8;
  int v132 = (v128 >> 3) - ((2 * (v128 >> 3)) & 0x8C81C748) + 1178657700;
  int v133 = *(_DWORD *)(v20 + 4 * (BYTE2(v121) ^ 0xBDu)) ^ v107;
  HIDWORD(v128) = v129 ^ v132 ^ 0x16F612B5;
  LODWORD(v128) = v129 ^ ~v132;
  unsigned int v134 = (v128 >> 29) - ((2 * (v128 >> 29)) & 0xBC65C794) + 1580393418;
  unsigned int v135 = v106 ^ *(_DWORD *)(v23 + 4 * (BYTE1(v121) ^ 0xCFu)) ^ v113 ^ *(_DWORD *)(v22
                                                                                  + 4
                                                                                  * (((v93 - v117) ^ 0xAB) + ((2 * (v93 - v117)) & 0x56) + 85));
  unsigned int v136 = v102 ^ v133;
  int v137 = *(_DWORD *)(v23 + 4 * (BYTE1(v101) ^ 0x55u));
  unsigned int v138 = v124 ^ v137 ^ *(_DWORD *)(v22 + 4 * v131);
  unsigned int v262 = (v102 ^ v133) ^ 0x99;
  unsigned int v139 = ((unsigned __int16)(v102 ^ v133) >> 8) ^ 0xB1;
  unsigned int v260 = HIBYTE(v136) ^ 0xB6;
  unsigned int v140 = *(_DWORD *)(v21 + 4 * (HIBYTE(v135) ^ 0xE4)) ^ 0x92945D87;
  int v141 = *(_DWORD *)(v20 + 4 * (BYTE2(v136) ^ 0xCDu)) ^ 0x19C74E21;
  int v142 = 2 * ((v141 & v140) - ((2 * (v141 & v140)) & 0x221C9942)) + 572299586;
  unsigned int v143 = ((v141 + v140) ^ 0x2BEFDECF)
       + ((2 * (v141 + v140)) & 0x57DFBD9E)
       + (v142 ^ 0x2144F957)
       + ((2 * v142) & 0xF94F3FD4 ^ 0xBFF6CD7B)
       + 1;
  int v263 = v143 - ((2 * v143 + 560955960) & 0x71BAC540) - 1986714692;
  unsigned int v261 = v138 ^ 0x96;
  LOWORD(v142) = (v105 ^ 0x28) - ((2 * (v105 ^ 0x28)) & 0x170) + 30648;
  unsigned int v144 = (v137 ^ ((v137 ^ 0x8F33DD06) - ((2 * (v137 ^ 0x8F33DD06) + 2) & 0x23F6F6E0) - 1845789839) ^ 0xA8CB5E48 ^ ((v124 ^ 0x8B5313A6) + (v124 ^ v137 ^ 0x460CEA0) + 1 - ((2 * ((v124 ^ 0x8B5313A6) + (v124 ^ v137 ^ 0x460CEA0) + 1)) & 0x93F80F82) + 1241253825))
       + (v124 ^ 0x8B5313A6);
  unsigned int v145 = v125 ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v105) ^ 0x90)) ^ v130 ^ v126;
  unsigned int v146 = (v144 - 1450828869 + (~(2 * v144) | 0xACF3C88B)) ^ *(_DWORD *)(v22
                                                                      + 4
                                                                      * (((v142 & 0x28B ^ 0x84148089)
                                                                        + (v142 & 0x1D74 ^ 0x1415)
                                                                        - 1) ^ 0x841483C8));
  unsigned int v147 = BYTE1(v118) ^ 9;
  unsigned int v148 = HIBYTE(v118) ^ 0xCC;
  unsigned int v149 = *(_DWORD *)(v20 + 4 * (BYTE2(v146) ^ 0xBCu)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v145) ^ 0xFD)) ^ *(_DWORD *)(v23 + 4 * (BYTE1(v114) ^ 0x4Bu)) ^ 0xFB9F315F;
  unsigned int v150 = *(_DWORD *)(v22 + 4 * (v118 ^ 0xABu)) ^ 0xEF6F9EC9;
  int v151 = (v150 + v149) ^ 0x3DD65DF7;
  int v152 = (2 * (v150 + v149)) & 0x7BACBBEE;
  unsigned int v153 = ((2 * (v115 & 0xFDFFFFFF ^ 0x6CA7C1A7)) | 0x3F675DD6) - (v115 & 0xFDFFFFFF ^ 0x6CA7C1A7) + 1615614229;
  unsigned int v154 = (v153 & 0xC4F359F0 ^ 0x40625130) + (v153 ^ 0xAF912ACB) - ((v153 ^ 0xAF912ACB) & 0xC4F359F0);
  int v155 = 2 * ((v150 & v149) - ((2 * (v150 & v149)) & 0x4B85385E)) - 880461730;
  int v156 = v155 ^ 0x49FD509F;
  unsigned int v157 = (2 * v155) & 0xFB0F2E7C ^ 0x6CF5DFC3;
  int v158 = *(_DWORD *)(v20 + 4 * (BYTE2(v114) ^ 0x8Cu)) ^ *(_DWORD *)(v23 + 4 * v147) ^ *(_DWORD *)(v22 + 4 * (v145 ^ 0x76u)) ^ *(_DWORD *)(v21 + 4 * (HIBYTE(v146) ^ 0x48));
  unsigned int v159 = v116 + 765959773;
  unsigned int v160 = 620202439 - v116;
  if (v66) {
    unsigned int v161 = v159;
  }
  else {
    unsigned int v161 = v160;
  }
  int v162 = *(_DWORD *)(v23 + 4 * (BYTE1(v134) ^ 0xA8u));
  int v163 = *(_DWORD *)(v23 + 4 * (BYTE1(v135) ^ 0x4Bu));
  int v164 = *(_DWORD *)(v23 + 4 * (BYTE1(v138) ^ 0xF5u));
  int v165 = *(_DWORD *)(v23 + 4 * v139);
  int v166 = *(_DWORD *)(v23 + 4 * (BYTE1(v145) ^ 0xA9u));
  int v167 = *(_DWORD *)(v23 + 4 * (BYTE1(v146) ^ 0xDFu));
  int v168 = *(_DWORD *)(v20 + 4 * (BYTE2(v138) ^ 0xA5u));
  int v169 = *(_DWORD *)(v20 + 4 * (BYTE2(v135) ^ 0x8Cu));
  int v170 = *(_DWORD *)(v20 + 4 * (BYTE2(v134) ^ 0xAAu));
  int v171 = *(_DWORD *)(v20 + 4 * (BYTE2(v145) ^ 0xF4u));
  unsigned int v172 = HIBYTE(v138) ^ 0x1A;
  int v173 = *(_DWORD *)(v21 + 4 * (HIBYTE(v134) ^ 0xBA));
  int v174 = *(_DWORD *)(v21 + 4 * v172);
  int v175 = *(_DWORD *)(v21 + 4 * v260);
  int v176 = *(_DWORD *)(v21 + 4 * v148);
  unsigned int v177 = v152 + v151 + v156 + v157 - ((2 * (v152 + v151 + v156 + v157) + 2137158290) & 0x9984FEA0) + 208910489;
  HIDWORD(v178) = v167 ^ 0x70CC22F9;
  LODWORD(v178) = v167;
  int v179 = (v178 >> 31) - ((2 * (v178 >> 31)) & 0x9A76C716) + 1295737739;
  HIDWORD(v178) = v176 ^ v171 ^ 0xB5313A6;
  LODWORD(v178) = v176 ^ ~v171;
  int v180 = *(_DWORD *)(v22 + 4 * (v134 ^ 0x4Cu));
  int v181 = *(_DWORD *)(v22 + 4 * v261);
  int v182 = v154 ^ v166 ^ *(_DWORD *)(v22 + 4 * (v146 ^ 0x73u)) ^ (v119
                                                                                 + 1454402542
                                                                                 + v161
                                                                                 - ((2 * (v119 + 1454402542 + v161)) & 0x2975FE74)
                                                                                 - 1799684294);
  HIDWORD(v178) = ((v178 >> 31) - ((2 * (v178 >> 31)) & 0x5FEE1DA6) + 804720339) ^ v179;
  LODWORD(v178) = HIDWORD(v178) ^ 0x62CC6D58;
  unsigned int v183 = (v168 ^ v163 ^ *(_DWORD *)(v22 + 4 * v262) ^ 0xE5E80880 ^ v173) + 1269039754;
  unsigned int v184 = ((2 * v183) & 0xFCECFAEE) + (v183 ^ 0x7E767D77);
  unsigned int v185 = ((2 * v158) & 0xDABE95E6 ^ 0xD23A8500) + (v158 ^ 0x6E21873);
  unsigned int v186 = ((2 * ((v180 ^ v174 ^ v169 ^ v165 ^ 0xEBBD5280) + 1401411191)) & 0x57E7BDFE)
       + (((v180 ^ v174 ^ v169 ^ v165 ^ 0xEBBD5280) + 1401411191) ^ 0x2BF3DEFF)
       - v185;
  unsigned int v187 = (v175 ^ v164 ^ *(_DWORD *)(v22 + 4 * (v135 ^ 0x3Eu)) ^ 0xB9FCA827 ^ v170) - 1947476229;
  int v188 = ((v178 >> 1) - ((2 * (v178 >> 1)) & 0x69946FD6) + 885667819) ^ *(_DWORD *)(v22
                                                                                  + 4
                                                                                  * (v114 ^ 0x3Eu));
  int v189 = v188 ^ 0x76A9AE93;
  int v190 = (v187 ^ 0x3EB5F99F) + ((2 * v187) & 0x7D6BF33E) - 1052113311 + (v188 ^ 0x76A9AE93);
  unsigned int v191 = (v190 ^ 0xF4865FB9)
       + ((2 * v188) ^ 0x5D7B4F37)
       + ((4 * v188) & 0x9FAFDBDC ^ 0x655965B3)
       + ((2 * v190) & 0xE90CBF72)
       + 1;
  unsigned int v192 = (v186 - 2 * ((v186 + 1097559028) & 0x7122E09F ^ v186 & 1) - 1299297134) ^ 0x8DA70936;
  unsigned int v193 = ((-441564638 * v192) & 0xFBD5AB7A) + ((-220782319 * v192) ^ 0x7DEAD5BD) - 2655285;
  unsigned int v194 = (v191 - ((2 * v191 - 1230824340) & 0xC9585B68) + 1073593322) ^ 0xE244C69C;
  unsigned int v195 = ((1659417479 * v194) ^ 0xFBEFFEFE) + ((-976132338 * v194) & 0xF7DFFDFC);
  unsigned int v196 = (v184 + (v177 ^ 0xC22527B9) - ((2 * (v184 + (v177 ^ 0xC22527B9)) + 51578132) & 0x107964AE) + 163984609) ^ 0xC386A6D3;
  unsigned int v197 = ((2 * ((v162 ^ v181 ^ 0x284FC72E ^ v263) - 1381455132)) & 0x919DFF6A)
       + (((v162 ^ v181 ^ 0x284FC72E ^ v263) - 1381455132) ^ 0x48CEFFB5)
       + (v182 ^ 0xF335E4BB);
  unsigned int v198 = (v197 - ((2 * v197 + 1851916440) & 0x8EB49B94) + 2123058710) ^ 0xF98BDC75;
  unsigned int v199 = ((1749830113 * v198) ^ 0xDB7BDF2D) + ((-795307070 * v198) & 0xB6F7BE5A);
  unsigned int v200 = v193 + ((1964916222 * v196) & 0xFDEFBDFE) + ((-1165025537 * v196) ^ 0x7EF7DEFF) - 41945267;
  unsigned int v201 = v195 + v199 - 887538992 + (~(2 * (v195 + v199) + 1361593258) | 0xBAF5CE0B);
  unsigned int v202 = v200 + 96852012;
  int v203 = v195 - v200 - ((2 * (v195 - v200) + 2090095020) & 0x51A5EF8C) + 656220316;
  unsigned int v204 = v193
       + ((1590614140 * v198) & 0xBE7FD6D4)
       + ((795307070 * v198) ^ 0x5F3FEB6B)
       + v199
       + 649450656
       + (v203 ^ 0xD72D0839);
  int v205 = v204 - ((2 * v204 + 26746498) & 0x349315E) - 1569675280;
  unsigned int v206 = ((((v200 + 96852012) ^ 0xA28518FA ^ v201)
         - ((2 * ((v200 + 96852012) ^ 0xA28518FA ^ v201)) & 0x12C82204)
         - 1989930750) ^ 0x769BEEFD)
       + v200;
  unsigned int v207 = (v201 ^ ((v201 ^ 0x5D7AE705) - ((2 * (v201 ^ 0x5D7AE705) + 2) & 0x352001C4) + 445645027) ^ 0x41A2E23E ^ (v206 - ((2 * v206 + 193704026) & 0xF36FF44C) - 8531373))
       + v202;
  int v208 = v207 - ((2 * v207) & 0x3F10CAE) + 33064535;
  int v209 = v208 ^ v201;
  unsigned int v210 = 2
       * (((v205 ^ 0x81A498AF) & (v203 ^ 0x28D2F7C6)) - ((2 * ((v205 ^ 0x81A498AF) & (v203 ^ 0x28D2F7C6))) & 0x347441AA))
       - 1267449430;
  unsigned int v211 = (v203 ^ 0xA9766F69 ^ v205) + (v210 ^ 0x439FBCD7) + 135529091 + ((2 * v210) & 0xEFD7FAF8 ^ 0x68C08250);
  unsigned int v212 = ((2 * v211) & 0xFDBEFD52) + (v211 ^ 0x7EDF7EA9);
  int v213 = (v208 ^ 0x1F88657)
       - v212
       + 2128576169
       - ((2 * ((v208 ^ 0x1F88657) - v212 + 2128576169)) & 0x4D770D72)
       - 1497659719;
  int v214 = v213 ^ v205;
  unsigned int v215 = (v213 ^ v205) & 0x800 ^ 0xE97EDBDF;
  unsigned int v216 = (v214 & 0xFFFFF7FF ^ 0x9870E31B | 0xBA3F19E1) - (v214 & 0xFFFFF7FF ^ 0x9870E31B | 0x45C0E61E) + 1170269726;
  unsigned int v217 = v215 + 1592340218;
  unsigned int v218 = v215 + 377564193;
  unsigned int v219 = (v216 & 0x7DE02096 ^ 0x70A00004) + (v216 ^ 0x8D54BEF2) - ((v216 ^ 0x8D54BEF2) & 0x7DE02096);
  unsigned int v220 = 837211832 - v215;
  if ((v218 & ~v209) == 0) {
    unsigned int v220 = v217;
  }
  unsigned int v221 = ((v209 ^ 0xA37D9EAD)
        - 1214776025
        + v220
        - ((2 * ((v209 ^ 0xA37D9EAD) - 1214776025 + v220)) & 0x89FEBD7E)
        - 989897025) ^ v219;
  unsigned int v222 = ((2 * (v212 - 2128576169 + (v221 ^ 0x311B2C37))) & 0x71769EDE)
       + ((v212 - 2128576169 + (v221 ^ 0x311B2C37)) ^ 0xB8BB4F6F);
  unsigned int v223 = ((2 * ((v177 ^ 0x3DDAD846) + (v213 ^ 0x59447946) + 1)) & 0xC5FFFDFE)
       + (((v177 ^ 0x3DDAD846) + (v213 ^ 0x59447946) + 1) ^ 0xE2FFFEFF);
  unsigned int v224 = ((2 * ((v182 ^ 0xCCA1B44) + (v221 ^ 0xCEE4D3C8) + 1)) & 0xFEF7756A)
       + (((v182 ^ 0xCCA1B44) + (v221 ^ 0xCEE4D3C8) + 1) ^ 0xFF7BBAB5);
  unsigned int v225 = v223 - ((2 * v223 + 833054556) & 0xC64436AA) - 67776765;
  unsigned int v226 = ((2 * (v185 + 312521998 + (v214 ^ 0xD8E0E1E9))) & 0x7EF3FBBC)
       + ((v185 + 312521998 + (v214 ^ 0xD8E0E1E9)) ^ 0x3F79FDDE);
  unsigned int v227 = v224 - ((2 * v224 - 538061042) & 0xA098E03C) - 1069327451;
  unsigned int v228 = v226 - ((2 * v226 + 603750974) & 0x26E1413C) - 445718083;
  unsigned int v229 = ((v189 + 1195683985 + v222) ^ 0xFED85DFF)
       + ((2 * v222 - 1903599326) ^ 0x40A02081)
       + ((2 * (v189 + 1195683985 + v222)) & 0xFDB0BBFE)
       - ((2 * (2 * v222 - 1903599326)) & 0x7EBFBEFC)
       + 1;
  unsigned int v230 = v229 - ((2 * v229 + 172887326) & 0x113C3584) + 1304764753;
  int v231 = *(_DWORD *)(STACK[0x1280] + 4 * (HIBYTE(v225) ^ 0xE3)) ^ *(_DWORD *)(STACK[0x1590]
                                                                              + 4 * (BYTE2(v228) ^ 0x70u));
  HIDWORD(v232) = v231 ^ 0x29595405;
  LODWORD(v232) = v231 ^ 0x40000000;
  int v233 = (v232 >> 30) - 1787120240 + (~(2 * (v232 >> 30)) | 0xD50A94E1);
  HIDWORD(v232) = v233 ^ 0x7AB58F;
  LODWORD(v232) = v233 ^ 0x95000000;
  int v234 = (v232 >> 23) - ((2 * (v232 >> 23)) & 0xB6251758) - 619541588;
  HIDWORD(v232) = *(_DWORD *)(STACK[0x1310] + 4 * (BYTE1(v227) ^ 0x70u)) ^ 0x1F3EC0C1;
  LODWORD(v232) = *(_DWORD *)(STACK[0x1310] + 4 * (BYTE1(v227) ^ 0x70u));
  int v235 = (v232 >> 30) - ((2 * (v232 >> 30)) & 0x889ADEC0) + 1145925472;
  HIDWORD(v232) = v234 ^ 0x13C;
  LODWORD(v232) = v234 ^ 0xA4945A00;
  int v236 = ((v232 >> 9) - ((2 * (v232 >> 9)) & 0x776893CC) - 1145812506) ^ v235;
  HIDWORD(v232) = v236 ^ 2;
  LODWORD(v232) = v236 ^ 0xFFF92684;
  unsigned int v237 = v225 ^ 0x55;
  int v238 = *(_DWORD *)(STACK[0x1480] + 4 * ((v229 - ((2 * v229 + 30) & 0x84) + 81) ^ 0xC2u)) ^ 0xA59A26F3 ^ ((v232 >> 2) + 440324733 + (~(2 * (v232 >> 2)) | 0xCB825B07));
  int v239 = *(_DWORD *)(STACK[0x1590] + 4 * (BYTE2(v227) ^ 0x4Cu));
  unsigned int v240 = (v226 - ((2 * v226 + 62) & 0x3C) - 67) ^ 0x9E;
  int v241 = *(_DWORD *)(STACK[0x1590] + 4 * (BYTE2(v225) ^ 0x22u));
  unsigned int v242 = HIBYTE(v228) ^ 0x13;
  int v243 = *(_DWORD *)(STACK[0x1310] + 4 * (BYTE1(v230) ^ 0x1Au));
  int v244 = *(_DWORD *)(STACK[0x1310]
                   + 4
                   * (((unsigned __int16)(v226 - ((2 * v226 - 32194) & 0x413C) - 7747) >> 8) ^ 0xA0u));
  unsigned int v245 = ((v238 & 0x5D304724 ^ 0xACECE277) - 1) ^ 0xE5CCE256;
  unsigned int v246 = (((2 * (v238 & 0xA2CFB8DB ^ 0xA28E98C9)) & 0x4155006) - (v238 & 0xA2CFB8DB ^ 0xA28E98C9) + 1895110616) ^ 0xD2322789;
  int v247 = *(_DWORD *)(STACK[0x1280] + 4 * v242);
  int v248 = *(_DWORD *)(STACK[0x1280] + 4 * (HIBYTE(v230) ^ 0x88));
  int v249 = (v246 | v245) - 2 * ((v246 | v245) & 0x7A92DC0B ^ v246 & 8) - 91038717;
  int v250 = STACK[0x1298];
  int v251 = *(_DWORD *)(STACK[0x1280] + 4 * (HIBYTE(v227) ^ 0xD0)) ^ *(_DWORD *)(STACK[0x1480] + 4 * v240) ^ *(_DWORD *)(STACK[0x1310] + 4 * (BYTE1(v225) ^ 0x1Bu)) ^ LODWORD(STACK[0x1298]);
  int v252 = STACK[0x12A0];
  int v253 = v251 ^ LODWORD(STACK[0x12A0]) ^ *(_DWORD *)(STACK[0x1590] + 4 * (BYTE2(v230) ^ 0x9Eu));
  int v254 = *(_DWORD *)(STACK[0x1480] + 4 * v237);
  int v255 = *(_DWORD *)(STACK[0x1480] + 4 * (v227 ^ 0x1Eu));
  int v256 = STACK[0x128C];
  LODWORD(STACK[0xE7C]) = LODWORD(STACK[0x12A0]) ^ LODWORD(STACK[0x1298]) ^ LODWORD(STACK[0x128C]) ^ v249;
  int v257 = v244 ^ v241 ^ v255 ^ v250 ^ v252 ^ v256 ^ v248;
  LODWORD(STACK[0xE80]) = v257;
  LODWORD(STACK[0xE84]) = v247 ^ v254 ^ v239 ^ v250 ^ v252 ^ v256 ^ v243;
  LOBYTE(v239) = byte_23C213200[(((2 * (v257 ^ 0xC9)) | 0xE17584E4)
                               - (v257 ^ 0xC9)
                               - 1891287666) ^ 0x70BAC2F0];
  HIDWORD(v232) = v253 ^ 0x4DD6845;
  LODWORD(v232) = v253;
  int v258 = LODWORD(STACK[0x11D8]) ^ ((v232 >> 30) - 118594087 + (~(2 * (v232 >> 30)) | 0xE23344F));
  HIDWORD(v232) = v258 ^ 1;
  LODWORD(v232) = v258 ^ 0xA3CA1DDC;
  unsigned int v259 = (v232 >> 2) - ((2 * (v232 >> 2)) & 0x34099A66) - 1710961357;
  LODWORD(STACK[0xE88]) = v259;
  LODWORD(STACK[0x101C]) = LOWORD(STACK[0xE7E]);
  LODWORD(STACK[0x1020]) = HIBYTE(v259);
  LODWORD(STACK[0x1024]) = LOWORD(STACK[0xE82]);
  v259 >>= 16;
  LODWORD(STACK[0x1028]) = v259;
  LOBYTE(STACK[0x102F]) = v259;
  LOBYTE(STACK[0x4AB]) = (102 * v239 - ((12 * v239 + 44) & 0x2C) - 51) ^ 0x47 ^ ((~(102 * v239 - 74) | 0x5D)
                                                                               + 51 * v239
                                                                               + 45);
  JUMPOUT(0x23C1B1F1CLL);
}

void sub_23C1DC5F8()
{
  LOBYTE(STACK[0x4AB]) = (LOBYTE(STACK[0x1043]) ^ 0xDF) & STACK[0x5F7];
  JUMPOUT(0x23C1B1F18);
}

void sub_23C1DC620()
{
  LOBYTE(STACK[0x4AB]) = LOBYTE(STACK[0x5F7]) ^ LOBYTE(STACK[0x1063]) ^ LODWORD(STACK[0x105C]) ^ LODWORD(STACK[0x1028]) ^ LOBYTE(STACK[0x1062]) ^ 0x16;
  JUMPOUT(0x23C1B1F1CLL);
}

void sub_23C1DC668()
{
  uint64_t v2 = *(void *)(v1 + 161) + *(void *)(v0 + 3336);
  int v3 = *(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x7D714E28));
  unint64_t v4 = ((1394700225 * ((v3 ^ LODWORD(STACK[0x1108])) & 0x7FFFFFFF)) ^ ((1394700225
                                                                      * ((v3 ^ LODWORD(STACK[0x1108])) & 0x7FFFFFFFu)) >> 16))
     * (LODWORD(STACK[0x10F8]) ^ 0x53216B2C);
  unint64_t v5 = 1394700225
     * ((1394700225 * ((v3 ^ v2) & 0x7FFFFFFF)) ^ ((1394700225 * ((v3 ^ v2) & 0x7FFFFFFF)) >> 16));
  LOBYTE(STACK[0x4AB]) = byte_23C214E80[v4 >> 24] ^ LOBYTE(STACK[0x5F7]) ^ byte_23C2107A0[(v4 >> 24) + 2] ^ byte_23C212CF0[(v4 >> 24) + 1] ^ byte_23C214E80[v5 >> 24] ^ byte_23C2107A0[(v5 >> 24) + 2] ^ v4 ^ byte_23C212CF0[(v5 >> 24) + 1] ^ v5 ^ (-9 * BYTE3(v4)) ^ (-9 * BYTE3(v5));
  JUMPOUT(0x23C1B1F1CLL);
}

void sub_23C1DC774(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

void sub_23C1DC7C0(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 16);
  BOOL v4 = v3 > v2;
  BOOL v5 = v3 == v2;
  int v6 = v4;
  if (*(unsigned char *)(a1 + 8)) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 24;
  if (!v7) {
    uint64_t v8 = 28;
  }
  *(_DWORD *)(v1 + 12) = *(_DWORD *)(a1 + v8) ^ *(_DWORD *)(a1 + 32);
}

void sub_23C1DC800(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)(a1 + 40);
  unint64_t v4 = *(void *)(a1 + 16);
  BOOL v5 = v4 > v3;
  BOOL v6 = v4 == v3;
  int v7 = v5;
  if (*(unsigned char *)(a1 + 28)) {
    BOOL v6 = v7;
  }
  BOOL v8 = !v6;
  uint64_t v9 = 32;
  if (!v8) {
    uint64_t v9 = 24;
  }
  *(_DWORD *)(v2 + 12) = *(_DWORD *)(a1 + v9) ^ v1;
}

uint64_t sub_23C1DC83C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v41 = *(_DWORD *)(v40 + 8) - 1431737413 * (v40 ^ 0xBE5E9F12);
  uint64_t v50 = *(void *)(a1 + 48);
  uint64_t v51 = *(void *)(a1 + 56);
  uint64_t v52 = ((uint64_t (*)(void, uint64_t, uint64_t))*(&off_26EFDBE20 + (int)(v41 ^ 0x98DA489B)))((((v41 ^ 0x98DA4C12) - 1711703475) ^ (v39 - 1580089869) & 0xFFFFFFF0)+ ((2 * (v39 - 1580089869)) & 0x33F2F9E0)+ 1711702807, 50, 853288424);
  HIDWORD(a15) = v41 ^ 0x98DA4C12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_26EFDBE20 + ((19 * (v52 != 0)) ^ (v41 + 1730523697))))(v52, v42, v43, v44, v45, v46, v47, v48, a2, v50, v51, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_23C1DC92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  LODWORD(STACK[0x3F8]) = (v50 - 1713476525) & 0xFEFBDFBE;
  HIDWORD(a25) = 339513482;
  LODWORD(a23) = 122;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((21 * (((v47 == 1580089869) ^ (((v50 + 83) ^ 0x41) + 1)) & 1)) ^ v50)))(a1, a2, a3, a4, a5, a6, a7, a8, v49, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           339513482,
           a25,
           0,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_23C1DC9E4(int a1@<W8>)
{
  v5[268] = v5[12];
  *(unsigned char *)(v6 - 253) = v13;
  *(_DWORD *)(v6 - 252) = v12;
  *(_DWORD *)&v14[205] = a1;
  int v15 = 339513482;
  int v16 = 339513482;
  int v17 = a1;
  int v7 = v4 + a1;
  int v18 = v4 + a1 + 139;
  int v19 = v4 + a1 + 793;
  unint64_t v8 = (unint64_t)((v18 ^ 0x143C9226u) > 0x143C908A) << 32;
  v5[123] = v8;
  uint64_t v9 = v11 + v8;
  v5[124] = v9;
  v5[86] = v9 - 0x494B3BC83CF4FA61;
  v5[84] = *(void *)(v2 + 8 * (v7 + 858));
  unint64_t v10 = ((v5[86] - qword_268B99528) & 0xFFFFFFFFFFFFFFF0) + *(void *)(v1 + 1312);
  (*(void (**)(void, unsigned char *, uint64_t))(*(void *)(v3 + 1344) + 32 * *(unsigned __int8 *)(v10 + 8) + 8))(*(void *)v10, v14, 1);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_23C1DEF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v39 + 362)))(1028);
  v40[70] = v41;
  *uint64_t v40 = v40[56];
  v40[1] = 0;
  uint64_t v42 = v40[66];
  v40[2] = v40[60];
  v40[3] = v42;
  uint64_t v43 = v40[63];
  v40[5] = 0;
  v40[6] = v43;
  v40[7] = v40[68];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (((v41 == 0) * (2 * (((v39 + 1426066424) | 0x28892370) ^ 0x7D89337F) - 206)) ^ v39)))(v41, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1DEFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v70 = (((a64 ^ LODWORD(STACK[0x2A0]) ^ 0x6BA1F67)
        - ((2 * (a64 ^ LODWORD(STACK[0x2A0]) ^ 0x6BA1F67) + 2026669716) & 0x60FDBBF8)
        + 1826955590) ^ 0xB07EDDFC)
      + a67;
  unsigned int v71 = (v70 ^ 0x7BFF5963) - 2080332131 + ((2 * v70) & 0xF7FEB2C6);
  unsigned int v72 = ((v71 & 0xFFFFFFFE) - ((2 * v71) & 0x9160777C) - 927974465) ^ 0x4B1265BC;
  LODWORD(STACK[0x344]) = v72;
  char v73 = 105 * v72 + 103;
  char v74 = -46 * v72;
  int v75 = dword_23C20EE50[((((((v73 - (v74 & 0xCE)) ^ LODWORD(STACK[0x334])) ^ 0xA44788CA) << (v68 - 21)) & 0x806101C)
                       - (((v73 - (v74 & 0xCE)) ^ LODWORD(STACK[0x334])) ^ 0xA44788CA)
                       - 87251983) ^ 0x5E8B2BBA];
  HIDWORD(v76) = v75 ^ 0x464;
  LODWORD(v76) = v75 ^ 0xB7235000;
  *(_DWORD *)(*(void *)(v69 + 560) + 4 * ((v73 - (v74 & 0xCE)) ^ 0x67u)) = LODWORD(STACK[0x23C]) ^ LODWORD(STACK[0x25C]) ^ LODWORD(STACK[0x290]) ^ 0xB132D1B7 ^ ((v76 >> 12) - ((2 * (v76 >> 12)) & 0x47292632) + 596939545);
  return (*(uint64_t (**)(void, void, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * v68))((v68 - 277), *(void *)(v67 + 8 * v68), 134615068, dword_23C20EE50, 1586179002, 1124, 3072544768, 1193879090, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

void sub_23C1DF18C()
{
}

uint64_t sub_23C1DF198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v38 + 8 * ((v39 + 848) | 0x190)))(1028);
  v40[72] = v41;
  *uint64_t v40 = v40[56];
  v40[1] = 0;
  uint64_t v42 = v40[66];
  v40[2] = v40[60];
  v40[3] = v42;
  uint64_t v43 = v40[63];
  v40[5] = v40[70];
  v40[6] = v43;
  v40[7] = v40[68];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (((v41 == 0) * ((((v39 + 848) ^ 0x5BC) + 2106143258) ^ 0x7D8933F9)) ^ (v39 + 848))))(v41, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1DF234()
{
  int v3 = (((LODWORD(STACK[0x2F4]) ^ 0xE9B9B79)
       - ((2 * (LODWORD(STACK[0x2F4]) ^ 0xE9B9B79) + 57352686) & 0x24F9BF9C)
       - 734891835) ^ 0x127CDFCE)
     + LODWORD(STACK[0x2D0]);
  unsigned int v4 = (v3 ^ 0x7C8B5EFB) - 2089508603 + ((2 * v3) & 0xF916BDF6);
  unsigned int v5 = ((v4 & 0xFFFFFFFE) - 1723962156 + (~(2 * v4) | 0xCD83265B)) ^ 0xA3232894;
  LODWORD(STACK[0x350]) = v5;
  int v6 = LODWORD(STACK[0x2D8]) ^ LODWORD(STACK[0x228]);
  LODWORD(STACK[0x354]) = v6;
  unsigned int v7 = ((((v1 + 337) ^ 0x9A) + 353566478) & 0xA8 ^ 0xE6BEE55B)
     - 1970700461
     + ((2 * ((((v1 + 337) ^ 0x9A) + 353566478) & 0xA8)) ^ 0x140)
     + 423696901;
  unsigned int v8 = ((v7 ^ 0xBFFF7DF5) + 1073775115 + ((2 * v7) & 0x7FFEFBEA)) * v5;
  unsigned int v9 = v8 - ((2 * v8) & 0xAD836008) - 691949564;
  unsigned int v10 = (((v9 ^ v6) ^ 7) + ((v9 ^ v6) & 0x86 ^ 0xDC44280) - (((v9 ^ v6) ^ 7) & 0x86)) ^ 0xC9C0468A;
  int v11 = dword_23C212E00[(v10 - ((2 * v10) & 0x8800006C) - 152874954) ^ 0x32E7544B];
  unsigned int v12 = 2 * ((v11 ^ 0x92E3A2B7) * (v11 ^ 0x92E3A2B7) - ((2 * (v11 ^ 0x92E3A2B7) * (v11 ^ 0x92E3A2B7)) & 0x473EF4E2))
      + 1195308258;
  *(_DWORD *)(*(void *)(v2 + 576) + 4 * (v9 ^ 4u)) = LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x248]) ^ LODWORD(STACK[0x2AC]) ^ v11 ^ 0xE8E5D0CC ^ ((v12 ^ 0x473EF4E2) - 2 * ((v12 ^ 0x473EF4E2) & 0x780B439A ^ v12 & 8) - 133479533);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8 * v1))(2464391863, 2014004122, 4161487763);
}

void sub_23C1DF4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  LODWORD(STACK[0x358]) = ((267 * (a7 ^ 0x328)) ^ 0x9AC00D23) + a62;
  uint64_t v63 = v62[11];
  v62[177] = v63;
  v62[178] = v63;
  v62[179] = v63;
  v62[180] = v63;
  v62[181] = v63;
  v62[182] = v63;
  v62[183] = v63;
  v62[184] = v63;
  v62[185] = v63;
  v62[186] = v63;
  uint64_t v64 = v62[11];
  v62[187] = v64;
  v62[188] = v64;
  v62[189] = v64;
  v62[190] = v64;
  v62[191] = v64;
  v62[192] = v64;
  LODWORD(v64) = STACK[0x250];
  int v65 = STACK[0x250];
  LODWORD(STACK[0x710]) = STACK[0x250];
  int v66 = STACK[0x228];
  int v67 = STACK[0x228];
  LODWORD(STACK[0x718]) = STACK[0x228];
  LODWORD(STACK[0x71C]) = v64;
  LODWORD(STACK[0x724]) = v66;
  LODWORD(STACK[0x728]) = v64;
  LODWORD(v64) = STACK[0x288];
  int v68 = STACK[0x288];
  LODWORD(STACK[0x714]) = STACK[0x288];
  LODWORD(STACK[0x720]) = v64;
  LODWORD(STACK[0x72C]) = v64;
  LODWORD(STACK[0x730]) = v67;
  LODWORD(STACK[0x734]) = v65;
  LODWORD(STACK[0x738]) = v68;
  LODWORD(STACK[0x73C]) = STACK[0x228];
  v62[199] = v62[63];
  v62[200] = v62[66];
  v62[201] = v62[70];
  v62[202] = v62[56];
  v62[203] = v62[66];
  v62[204] = v62[66];
  v62[205] = v62[70];
  v62[206] = v62[63];
  v62[207] = v62[56];
  v62[208] = v62[63];
  v62[209] = v62[66];
  v62[210] = v62[70];
  v62[211] = v62[56];
  v62[212] = v62[70];
  v62[213] = v62[56];
  v62[214] = v62[63];
  v62[215] = v62[70];
  v62[216] = v62[66];
  v62[217] = v62[63];
  v62[218] = v62[66];
  v62[219] = v62[63];
  v62[220] = v62[56];
  v62[221] = v62[70];
  v62[222] = v62[56];
  v62[223] = v62[70];
  v62[224] = v62[56];
  v62[225] = v62[66];
  v62[226] = v62[63];
  v62[227] = v62[70];
  v62[228] = v62[66];
  v62[229] = v62[56];
  v62[230] = v62[63];
  v62[231] = v62[70];
  v62[232] = v62[63];
  v62[233] = v62[66];
  v62[234] = v62[70];
  v62[235] = v62[56];
  v62[236] = v62[56];
  v62[237] = v62[66];
  v62[238] = v62[70];
  v62[239] = v62[66];
  v62[240] = v62[70];
  v62[241] = v62[56];
  v62[242] = v62[56];
  v62[243] = v62[63];
  v62[244] = v62[66];
  v62[245] = v62[63];
  v62[246] = v62[66];
  v62[247] = v62[70];
  v62[248] = v62[66];
  v62[249] = v62[70];
  v62[250] = v62[56];
  v62[251] = v62[63];
  v62[252] = v62[56];
  v62[253] = v62[70];
  v62[254] = v62[66];
  v62[255] = v62[63];
  v62[256] = v62[70];
  v62[257] = v62[56];
  v62[258] = v62[56];
  v62[259] = v62[66];
  v62[260] = v62[70];
  v62[261] = v62[63];
  v62[262] = v62[66];
  v62[263] = v62[66];
  v62[264] = v62[70];
  v62[265] = v62[63];
  v62[266] = v62[56];
  JUMPOUT(0x23C1DDFB4);
}

uint64_t sub_23C1DF7E4@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v36 = v33 + 411;
  unint64_t v430 = __PAIR64__(v31, a1);
  unsigned int v37 = LODWORD(STACK[0x204]) ^ 0xC18CD342;
  HIDWORD(a29) = v32;
  int v38 = STACK[0x20C];
  int v39 = ((v33 + 411) ^ 0x43D6D541) + 1127189946 * LODWORD(STACK[0x20C]);
  LODWORD(STACK[0x218]) = v31;
  LODWORD(a14) = v33 + 430;
  LODWORD(STACK[0x21C]) = a1;
  LODWORD(STACK[0x220]) = v37;
  unsigned int v40 = (~(v39 & ((v33 + 430) ^ 0x53E85F44u)) + 1637336797 * v38 + 1272945123) >> 17;
  unsigned int v41 = (((-479297536 * v38 - ((115146752 * v38 + 711786496) & 0x3A3C0000) - 766211447) ^ 0x1D1E0A89) & 0xFFFF8000 | v40) ^ 0x54FA;
  int v42 = v41 + 754287368 - ((2 * v41) & 0x59EB0610);
  unsigned int v43 = 78224713 * (v42 ^ 0x2CF58308) - ((156449426 * (v42 ^ 0x2CF58308)) & 0x9214D24E) - 922064601;
  unsigned int v44 = ((-1317011456 * (LODWORD(STACK[0x208]) ^ 0xD2812F68)
        - 1103379631
        - ((1660944384 * (LODWORD(STACK[0x208]) ^ 0xD2812F68)) & 0x7C000000)) ^ 0xBE3BC351 | ((560956771
                                                                                             * (LODWORD(STACK[0x208]) ^ 0xD2812F68)
                                                                                             - ((1121913542
                                                                                               * (LODWORD(STACK[0x208]) ^ 0xD2812F68)) & 0x741C7D5E)
                                                                                             - 1173471569) >> 9)) ^ 0x5D071F;
  unsigned int v45 = (369098752 * (v31 ^ 0x429656DF) + 411323472 - ((738197504 * (v31 ^ 0x429656DF)) & 0x30000000)) ^ 0x18844C50 | ((-2093375861 * (v31 ^ 0x429656DF) - ((108215574 * (v31 ^ 0x429656DF)) & 0x9E89ADF4) + 1329911546) >> 7);
  unsigned int v46 = ((2 * v45) & 0xF7DFFEEA ^ 0x11D124A) + (v45 ^ 0xFB7176D8);
  unsigned int v47 = ((v44 - ((2 * v44) & 0x84E3C6FA) + 1114760061) ^ 0x6E846075 ^ v42) - v46 - 68157579;
  unsigned int v48 = ((1267190912 * (a1 ^ 0x66455F17) - 246863833 - ((-1760585472 * (a1 ^ 0x66455F17)) & 0xE2925000)) ^ 0xF1492827 | ((1687621529 * (a1 ^ 0x66455F17) - ((-919724238 * (a1 ^ 0x66455F17)) & 0xFBA923D8) - 36400660) >> 25)) ^ 0x7E;
  unsigned int v49 = v48 + 1901035824 - ((2 * v48) & 0xE29F0260);
  unsigned int v50 = v49 ^ (v47 - ((2 * v47) & 0x9FADE178) + 1339486396) ^ 0x3E99718C;
  int v51 = v49 ^ 0x714F8130;
  unsigned int v52 = -142106043 * (v49 ^ 0x714F8130) - ((-284212086 * (v49 ^ 0x714F8130)) & 0xC7CC5604) + 1676028674;
  unsigned int v53 = (-692584448 * v50 - 1022998774 - ((-1385168896 * v50) & 0x86000000)) ^ 0xC306470A | ((1709808343 * v50
                                                                                            - ((-875350610 * v50) & 0x9B71559E)
                                                                                            + 1303947983) >> 13);
  int v54 = ((2 * v53) & 0x3FFE6BFA ^ 0x44B8A) + (v53 ^ 0x1FFD5838);
  unsigned int v55 = ((1256849408 * v46 - ((1511784448 - 1781268480 * v46) & 0xB2680000) + 105067864) ^ 0x59353558) & 0xFFFE0000 | ((-1345542795 * v46 - ((1603881706 * v46 + 1054584078) & 0xC1A268B8) - 2143352093) >> 15);
  int v56 = ((2 * v55) & 0x18377FBC ^ 0x30304) + (v55 ^ 0xC1A7E7C);
  unsigned int v57 = (-99636775 - (v48 << 30) - 1610612736 * v51) ^ 0xFA0FA9D9 | (v52 >> 3);
  unsigned int v58 = ((2 * v57) & 0xDDEDFBDE ^ 0x18E98AC0) + (v57 ^ 0x628A388F);
  unsigned int v59 = (v43 & 0xF7C73EFE ^ 0xC1022826) + (v40 << 31) + ((v43 >> 1) ^ 0x9F66ABEC) + v58 - v56 + v54 - 86414857;
  unsigned int v60 = ((-2025682640 * v56 - ((243602016 * v56 - 1346080576) & 0xB49B8DA0) + 842006328) ^ 0xDA4DC6D8) & 0xFFFFFFF0 | ((((-790081242 * v56 + 721176332) & 0xEB47B9E6) + 395040621 * v56 + 1960705926) >> 28);
  unsigned int v61 = ((1207959552 * v54 - ((-1342177280 - 1879048192 * v54) & 0xD0000000) + 1185685862) ^ 0x6EAC2166) & 0xF8000000 | ((1189873353 * v54 - ((-1915220590 * v54 - 465740618) & 0xE87C659E) - 430120662) >> 5);
  unsigned int v62 = ((2 * v61) & 0xB9DF4AE6 ^ 0x9434224) + (v61 ^ 0xDB4E54E5);
  unsigned int v63 = ((-868205248 * v58 - ((-1736410496 * v58 - 268623232) & 0xB6F9D380) - 746882280) ^ 0x5B7CE9D8) & 0xFFFFFFC0 | ((-1691287307 * v58 - ((912392682 * v58 - 71306102) & 0x857DF45C) - 1063324557) >> 26);
  unsigned int v64 = ((2 * v63) & 0xCB7FFAE6 ^ 0x20) + (v63 ^ 0xE5BFFD63);
  unsigned int v65 = ((-2001076224 * v59 - ((292814848 * v59 + 1546649600) & 0x89940000) + 1927527354) ^ 0xC4CBBBBA) & 0xFFFE0000 | ((213632093 * v59 - ((427264186 * v59 - 253448680) & 0xF615F2EA) - 209891199) >> 15);
  unsigned int v66 = ((2 * v65) & 0xFBBEF67E ^ 0x2E42A) + (v65 ^ 0x7DDE8D2A);
  unsigned int v67 = ((288332334 * v62 + 541857622) & 0xF92A482A) + 2003317481 * v62;
  unsigned int v68 = ((2 * v60) & 0x7FFF9EF4) + (v60 ^ 0x3FFFCF7A) + v64 - v62 - v66;
  unsigned int v69 = 288332334 * v62 - ((576664668 * v62 + 1083715244) & 0xEF8B4B84) + 403815704;
  unsigned int v70 = ((-671088640 * v64 - ((805306368 * v64 + 1879048192) & 0x55555555) - 1609395839) ^ 0xA8129181 | ((-2047698469 * v64 - ((199570358 * v64 - 1054546114) & 0xF18CF256) - 648483638) >> 5)) ^ 0x3C633C9;
  unsigned int v71 = v70 - ((2 * v70) & 0xC599F11E) + 1657600143;
  unsigned int v72 = ((-809759992 * v66 - ((-1619519984 * v66 + 115925520) & 0xD5D63E90) - 295727017) ^ 0xEAEB1F4F) & 0xFFFFFFF8 | ((-101219999 * v66 - ((-202439998 * v66 + 14490690) & 0xF67364FC) - 72859489) >> 29);
  unsigned int v73 = (v72 ^ 3) - 753446076 - ((2 * v72) & 0xA62EA688);
  LODWORD(STACK[0x224]) = v73;
  unsigned int v74 = (((-735410688 * v68 - ((676662272 * v68 + 1347828736) & 0x41850000) - 1997693239) ^ 0xA0C280C9) & 0xFFFFFE00 | ((1131025731 * v68 - ((-2032915834 * v68 - 957863138) & 0x8ADBAF22) - 1461588704) >> 23)) ^ 0x8A;
  int v75 = v74 - 931689008 + (~(2 * v74) | 0x6F10E45F) + 1;
  unsigned int v76 = (v69 & 0xFFFFFFFE | ((v67 + 1933889599) >> 31)) ^ 0xF7C5A5C2;
  int v77 = v76 - 1952005681 - 2 * (v76 & 0xBA6C1DF ^ v69 & 0x10);
  unsigned int v78 = (v73 ^ 0x2CE8ACBB) + (v71 ^ 0xE96A3940 ^ v77) + 1;
  unsigned int v79 = v75 ^ 0xC8778DD0;
  unsigned int v80 = (v75 ^ 0xC8778DD0) + (v78 ^ 0x7DFFD1AF) + ((2 * v78) & 0xFBFFA35E) - 2113917359;
  int v81 = v80 - 2013831794 - ((2 * v80) & 0xFEEBB1C);
  unsigned int v82 = (v77 ^ 0x8BA6C1CF)
      + (v73 ^ 0xD3175344)
      - ((2 * ((v77 ^ 0x8BA6C1CF) + (v73 ^ 0xD3175344))) & 0xC080EC28)
      - 532646380;
  unsigned int v83 = 2 * (((v82 ^ 0xDFB860D6) & (v75 ^ 0xC8778DD0)) - ((2 * ((v82 ^ 0xDFB860D6) & (v75 ^ 0xC8778DD0))) & 0x1C8CCDB0))
      - 1668493904;
  unsigned int v84 = (v75 ^ 0x97CFED06 ^ v82) + (v83 ^ 0x2335B5F) + 1631611153 + ((2 * v83) & 0x3D7F2DDC ^ 0x39190940);
  int v85 = v81 ^ 0x65539468 ^ (v84 - ((2 * v84) & 0x20008ECC) - 1879029914);
  unsigned int v86 = v85 - ((2 * v85 - 1978234478) & 0x82D4608A) - 2039122674;
  LODWORD(STACK[0x228]) = v86;
  LODWORD(STACK[0x22C]) = HIBYTE(v86) ^ 0x26A55AD4;
  int v87 = v79 + (v86 ^ 0x3E95CFBA) - 1757705110 - ((2 * (v79 + (v86 ^ 0x3E95CFBA) + 1)) & 0x2E7718D2);
  LODWORD(STACK[0x230]) = v87;
  int v88 = v86 ^ v73;
  LODWORD(STACK[0x234]) = v86 ^ v73;
  unsigned int v89 = v87 ^ 0x973B8C69;
  unsigned int v90 = -1989855995 * (v87 ^ 0x973B8C69) - ((315255306 * (v87 ^ 0x973B8C69)) & 0xF1F63122) - 117761903;
  LODWORD(STACK[0x238]) = v86 ^ 0xC16A3045;
  unsigned int v91 = (v81 ^ 0x87F75D8E)
      + (v86 ^ 0xC16A3045)
      + 1267068615
      - ((2 * ((v81 ^ 0x87F75D8E) + (v86 ^ 0xC16A3045))) & 0x970BDD8E);
  LODWORD(STACK[0x23C]) = v91;
  unsigned int v92 = -620667077 * (v86 ^ 0xC16A3045) - ((-1241334154 * (v86 ^ 0xC16A3045)) & 0xED6506D2) + 1991410537;
  unsigned int v93 = 23018240 * (v86 ^ 0xC16A3045) + 455379678 - ((46036480 * (v86 ^ 0xC16A3045)) & 0x36491400);
  v91 ^= 0x4B85EEC7u;
  unsigned int v94 = (1199570944 * (v88 ^ 0x127D6301) - 252388736 - ((-1895825408 * (v88 ^ 0x127D6301)) & 0xE1000000)) ^ 0xF0F4DA80 | ((-552207217 * (v88 ^ 0x127D6301) - ((-1104414434 * (v88 ^ 0x127D6301)) & 0x9AC37180) - 849233728) >> 9);
  unsigned int v95 = ((2 * v94) & 0xDF7EFE8E ^ 0x4C6088) + (v94 ^ 0x6FD9CF9B);
  unsigned int v96 = ((2 * (v93 ^ 0x1B248ADE | HIBYTE(v92))) & 0x2FCE7F96 ^ 0x84)
      + ((v93 ^ 0x1B248ADE | HIBYTE(v92)) ^ 0x97E73FBD)
      - v95;
  unsigned int v97 = ((-1499422720 * v89 - 1224697590 - ((1296121856 * v89) & 0x6E010000)) ^ 0xB700990A | (v90 >> 19)) ^ 0x1F1F;
  int v98 = v97 - 1882808559 - ((2 * v97) & 0x1F8D3E22);
  unsigned int v99 = v98 ^ (v96 - ((2 * v96 - 1347387656) & 0xFA2DF3A0) + 1424963916);
  unsigned int v100 = 470369577 * v95 - ((403868242 * v95 + 521073986) & 0x125EFBB6) - 927532932;
  v98 ^= 0x8FC69F11;
  unsigned int v101 = 494062539 * v98 - ((988125078 * v98) & 0x7B5AB608) + 1034771204;
  unsigned int v102 = -770371108 * v91 - 972403872 - ((-1540742216 * v91) & 0x8C1496C0);
  unsigned int v103 = (v102 | ((((-385185554 * v91) & 0x95A663F8) - 1954890871 * v91 + 892128771) >> 30)) ^ 0xC60A4B60;
  unsigned int v104 = v103 - 955988093 - ((2 * v103) & 0x8E098F06);
  unsigned int v105 = v104 + 24;
  HIDWORD(v106) = v99 ^ 0xD066C1;
  LODWORD(v106) = v99 ^ 0xF3FFFFFF;
  int v107 = (v106 >> 25) - ((2 * (v106 >> 25)) & 0x245D6042) + 305049633;
  HIDWORD(v106) = v104 ^ 0x104C783;
  LODWORD(v106) = v102 ^ 0xC7FFFFFF;
  int v108 = v107 ^ ((v106 >> 25) - ((2 * (v106 >> 25)) & 0x367FC8B2) - 1690311591);
  HIDWORD(v106) = v108 ^ 0x3A;
  LODWORD(v106) = v108 ^ 0x53AF2200;
  int v109 = ((v106 >> 7) - ((2 * (v106 >> 7)) & 0xEB01D0DC) - 176101266) ^ 0x70359482;
  unsigned int v110 = -189532815 * (v104 ^ 0xC704C783) - 1475899888 - ((1768418018 * (v104 ^ 0xC704C783)) & 0x500F1C20);
  unsigned int v111 = (1564475392 * v109 + 2145016981) ^ 0x7FDA5C95 | ((1142700683 * v109
                                                         - ((-2009565930 * v109) & 0x977D71C8)
                                                         + 1270790372) >> 10);
  unsigned int v112 = ((2 * v111) & 0xF3F7DFA2 ^ 0x25DF00) + (v111 ^ 0x79E9007F);
  unsigned int v113 = 1610612736 * v98 + 1197696376 + ((-1073741824 * v98) & 0x80000000);
  HIDWORD(v106) = v105 ^ 3;
  LODWORD(v106) = v110 ^ 0xA8078E10;
  int v114 = ((2 * (v106 >> 3)) & 0x7DD73D96) + ((v106 >> 3) ^ 0xBEEB9ECB);
  unsigned int v115 = 45711879 * v112 - ((91423758 * v112 - 1802068334) & 0xD72EAE8C) + 904046223;
  unsigned int v116 = 117440512 * v112 - ((234881024 * v112 - 1845493760) & 0xB6000000) + 610541265;
  unsigned int v117 = ((v100 >> 4) ^ 0x734D0023) - 1879048192 * v95 + ((v100 >> 3) & 0x17BFEFFC ^ 0x1125EFB8) + 438573105 + v112;
  unsigned int v118 = (((v113 ^ 0x47636578 | (v101 >> 3)) ^ 0x7B5AB60)
        + 1335345507
        - ((2 * ((v113 ^ 0x47636578 | (v101 >> 3)) ^ 0x7B5AB60)) & 0x9F2F82C6)) ^ 0x4F97C163;
  unsigned int v119 = ((v117 | v118) ^ 0x6F1A7BFE)
       + v114
       + (v117 & v118 ^ 0xFF0877EF)
       + ((2 * (v117 | v118)) & 0xDE34F7FC)
       + ((2 * (v117 & v118)) & 0xFE10EFDE);
  unsigned int v120 = -716246237 * v118 - ((714991174 * v118) & 0x612DFF46) - 1332281437;
  unsigned int v121 = 341226649 * (v119 - 231290180) - ((682453298 * (v119 - 231290180) + 700132184) & 0x67FFFAD8) - 925002984;
  unsigned int v122 = -268435456 * (v119 & 3) - 939524096 * (v119 - 231290180) + 2119234878;
  LOBYTE(v112) = (v121 & 0x18) - 19 - 2 * (v121 & 0x18) + 16;
  unsigned int v123 = ((v122 >> 7) & 0x17C81E2 ^ 0x3C81E2) + ((v122 >> 8) ^ 0xFFA0BB0C);
  int v124 = (((((v121 >> 5) ^ 0x59FFFEB) << (v112 ^ 0xF5))
         + 14758581
         - ((2 * (((v121 >> 5) ^ 0x59FFFEB) << (v112 ^ 0xF5))) & 0x1C2656A)) ^ 0xE132B5) << (v112 ^ 0xED);
  unsigned int v125 = (v124 - ((2 * v124) & 0xFC7BC584) + 2117984962) ^ (v121 >> 13);
  unsigned int v126 = v125 & 0xF7FFFFFF;
  unsigned int v127 = ((2 * v125) & 0xCEFDBEBA ^ 0xDC70BA3A)
       + (v125 & 0xF7FFFFFF ^ 0x9146A260)
       + (((v125 ^ 0x89C782C2) + 1) ^ 0xEBBFB4EA)
       + ((2 * ((v125 ^ 0x89C782C2) + 1)) & 0xD77F69D4);
  unsigned int v128 = v127 + 1971154679;
  int v129 = ((v127 + 616655801) & (v123 + 4264967))
       - 1305150215
       - ((2 * ((v127 + 616655801) & (v123 + 4264967))) & 0x6469F9C8);
  unsigned int v130 = ((2 * ((v116 ^ 0xDB641ED1) & 0xFF000000 | (v115 >> 8))) & 0xF7EFFFE8 ^ 0xC72EA8)
       + (((v116 ^ 0xDB641ED1) & 0xFF000000 | (v115 >> 8)) ^ 0x7B9C68A3);
  int v131 = 842006528 * v118 + 306265434 - ((610271232 * v118) & 0x24800000);
  unsigned int v132 = ((2 * (v126 ^ 0xD2B4857F)) | 0xC0185388) - (v126 ^ 0xD2B4857F) + 536073788;
  unsigned int v133 = (v132 & 0x8401CE28 ^ 0x4014E29) + (v132 & 0x7BFE31D7) - 1;
  unsigned int v134 = 1093377409 * v114 - ((-2108212478 * v114 + 663943530) & 0xB585151A) - 292812990;
  int v135 = -1065353216 * v114 - (((v114 << 24) + 889192448) & 0x73000000) + 335752253;
  unsigned int v136 = 737843077 - v127;
  if (v129 == -1305150215) {
    unsigned int v136 = v128;
  }
  unsigned int v137 = (v136 + v123 - ((2 * (v136 + v123) + 1594499474) & 0xB329E10A) + 152699214) ^ v133;
  HIDWORD(v138) = v137 ^ 0xAAADF1;
  LODWORD(v138) = v137 ^ 0xC2000000;
  int v139 = ((v138 >> 24) - ((2 * (v138 >> 24)) & 0xB7AD4856) + 1540793387) ^ 0xE4147EF0;
  int v140 = ((v131 ^ 0x12413D5A | (v120 >> 12)) ^ 0xB286E68A)
       + ((2 * (v131 ^ 0x12413D5A | (v120 >> 12))) & 0x651BDFCA ^ 0x1212CA)
       + v130
       - 780529625
       + v139;
  int v141 = v140 - ((2 * v140) & 0xAAF08AC) - 2057862058;
  unsigned int v142 = -515049483 * v139 - ((-1030098966 * v139) & 0xF3030A00) - 108952320;
  unsigned int v143 = ((v135 ^ 0xB9832C3D) & 0xFF800000 | (v134 >> 9)) ^ 0x6D6145;
  unsigned int v144 = v143 + 1771128829 - ((2 * v143) & 0xD3228FFA);
  unsigned int v145 = ((-938598912 * v130 - ((270285824 * v130 + 22204416) & 0x1E98EC00) - 537534745) ^ 0x8F4C76E7) & 0xFFFFFE00 | ((1281623823 * v130 - ((415763998 * v130 + 307276136) & 0x23794530) + 451213132) >> 23);
  unsigned int v146 = v145 ^ 0xF7FFFCD5;
  unsigned int v147 = (2 * v145) & 0xEFFFFBEC ^ 0x244;
  int v148 = -46137344 * v139 - 1872703460 - ((981467136 * v139) & 0x20800000);
  unsigned int v149 = 764078531 * (v144 ^ 0x699147FD) - ((1528157062 * (v144 ^ 0x699147FD)) & 0x7A647976) + 1026702523;
  unsigned int v150 = ((2 * (v148 ^ 0x9060D01C | (v142 >> 10))) & 0xAEDFB79E ^ 0x5C8082)
       + ((v148 ^ 0x9060D01C | (v142 >> 10)) ^ 0xD751BBAE);
  unsigned int v151 = -2046820352 * (v144 ^ 0x699147FD) - 885389543 - ((201326592 * (v144 ^ 0x699147FD)) & 0x94000000);
  unsigned int v152 = ((-1755408896 * (v144 ^ 0xECC6C3AB ^ v141)
         + 1809010524
         - ((784149504 * (v144 ^ 0xECC6C3AB ^ v141)) & 0xD7A69C00)) ^ 0x6BD34F5C | ((155955019
                                                                                   * (v144 ^ 0xECC6C3AB ^ v141)
                                                                                   - ((311910038
                                                                                     * (v144 ^ 0xECC6C3AB ^ v141)) & 0xFDF540B4)
                                                                                   - 17129382) >> 23)) ^ 0x1FD;
  unsigned int v153 = v152 + 1868130857 - ((2 * v152) & 0xDEB2D452);
  unsigned int v154 = v146 + v147 - 684245448 + v150;
  unsigned int v155 = ((v151 ^ 0xCB3A0719 | (v149 >> 7)) ^ 0x3F908BCC)
       + ((2 * (v151 ^ 0xCB3A0719 | (v149 >> 7))) & 0x7FD5DF6A ^ 0xD4C862)
       + v154
       + 426637390
       + (v153 ^ 0x6F596A29);
  unsigned int v156 = ((4 * v153) & 0xDE9D7E9C ^ 0x63FAD77B)
       + ((2 * v153) ^ 0x4E0394E3)
       + (v155 ^ 0xFCFAEFBD)
       + ((2 * v155) & 0xF9F5DF7A);
  unsigned int v157 = v156 - ((2 * v156 - 458776794) & 0x87DAF884) - 1237234731;
  int v158 = v153 ^ 0x461E41A5 ^ (1189195675 * v154 - ((230907702 * v154 + 941821346) & 0x528E5718) - 984042915);
  int v159 = v157 ^ (-1269723209 * v158 - ((1755520878 * v158) & 0x5F5EAF54) + 800020394);
  unsigned int v160 = 864785899 * (v159 ^ 0x6C422BE8) + 1335650327 - ((1729571798 * (v159 ^ 0x6C422BE8)) & 0x9F38D02E);
  LODWORD(STACK[0x240]) = v160;
  int v161 = (v160 ^ 0x4F9C6817) + (v157 ^ 0x43ED7C42);
  int v162 = v161 - 2077072257 - ((2 * v161) & 0x864C8FE);
  LODWORD(STACK[0x244]) = v162;
  unsigned int v163 = v150 + (v160 ^ 0xB06397E8) - ((2 * (v150 + (v160 ^ 0xB06397E8)) + 1361070180) & 0xD004166E) - 1869467799;
  LODWORD(STACK[0x248]) = v163;
  int v164 = v153 ^ v160;
  LODWORD(STACK[0x24C]) = v164;
  unsigned int v165 = (701231104 * (v164 ^ 0x20C5023E) - 364596777 - ((1402462208 * (v164 ^ 0x20C5023E)) & 0xD4896000)) ^ 0xEA44B1D7 | ((984784063 * (v164 ^ 0x20C5023E) - ((1969568126 * (v164 ^ 0x20C5023E)) & 0xFC03FBEA) + 2114059765) >> 20);
  unsigned int v166 = ((2 * v165) & 0xDCEBFBDE ^ 0xBC0) + (v165 ^ 0x6E75FA0F);
  unsigned int v167 = ((81720326 * (v163 ^ 0x68020B37) - ((163440652 * (v163 ^ 0x68020B37)) & 0xCE168168)) & 0xFFFFFFFE | ((-2106623485 * (v163 ^ 0x68020B37) - ((81720326 * (v163 ^ 0x68020B37)) & 0x6A4F8134) + 891797658) >> 31))
       + 1728790708;
  HIDWORD(v138) = v161;
  LODWORD(v138) = (-1238516047 * (v162 ^ 0x8432647F) + 1028777412 - ((1817935202 * (v162 ^ 0x8432647F)) & 0x7AA3CB88)) ^ 0x3D51E5C4;
  int v168 = ((2 * v167) & 0x4DEFDE7E ^ 0x4C068068) + (v167 ^ 0x41FCAF8B);
  int v169 = ((2 * (v138 >> 1)) & 0xFEE78FCC) + ((v138 >> 1) ^ 0x7F73C7E6);
  HIDWORD(v138) = v159;
  LODWORD(v138) = (669419103 * (v159 ^ 0x6C422BE8) - 145159826 - ((1338838206 * (v159 ^ 0x6C422BE8)) & 0xEEB212DC)) ^ 0xF759096E;
  int v170 = v138 >> 1;
  int v171 = v170 ^ 0x7DB1AD7D;
  unsigned int v172 = (2 * v170) & 0xFB635AFA;
  int v173 = 911603935 * v168 - ((1823207870 * v168 + 1219305534) & 0x60D43C38) - 725569989;
  unsigned int v174 = v168 + v166 + v171 + v172 + v169 + 960861831;
  unsigned int v175 = 1303741375 * v174 - ((-1687484546 * v174 + 392019504) & 0xE9C70E38) - 2137889228;
  unsigned int v176 = 1795653120 * v174 - ((-703661056 * v174 - 1149476864) & 0xAF3EAC00) - 1252161595;
  unsigned int v177 = 1985368095 * v166 - ((1823252542 * v166 + 270737438) & 0x7A12B4C0) - 2061833617;
  unsigned int v178 = -324231106 * v166 - ((-648462212 * v166 + 541474876) & 0xA4BB0458) - 494886325;
  unsigned int v179 = ((v176 ^ 0x579F57C5) & 0xFFFFFE00 | (v175 >> 23)) ^ 0x1E9;
  int v180 = v179 + 1600258778 + (~(2 * v179) | 0x413BFA4B) + 1;
  unsigned int v181 = (((1442373376 * v168 - ((737263104 * v168 + 757087744) & 0x56158C00) - 2120555011) ^ 0x2B0AC6FD) & 0xFFFFFF00 | HIBYTE(v173)) ^ 0xB0;
  unsigned int v182 = (1242395727 * v169 - 2 * ((1242395727 * v169 + 302192646) & 0x78D7535F ^ (1242395727 * v169) & 1u) + 182086500) >> 17;
  unsigned int v183 = (((-1171816448 * v169 - ((1951334400 * v169 + 403046400) & 0x79610000) + 1219747755) ^ 0xBCB0DFAB) & 0xFFFFF800 | ((-1596504848 * v169 - ((28215776 * v169 + 6488256) & 0x13B52C60u) - 1442048363) >> 21)) ^ 0x44E;
  unsigned int v184 = ((v182 & 0x7800 ^ 0xD08A3434) + (v182 & 0x1800 ^ 0x4310A8B) - ((v182 & 0x7800 ^ 0xD08A3434) & 0xD0081820)) ^ 0x4B3169F | (v183 + 330784576 - ((2 * v183) & 0x276EBE80)) ^ 0x13B75F40;
  int v185 = v184 - ((2 * v184) & 0x61A5982E) + 819121175;
  unsigned int v186 = (v181 - ((2 * v181) & 0x445FFFDE) - 1573912593) ^ 0xFD4DFD35 ^ v180;
  unsigned int v187 = (((v178 ^ 0x525D822D) & 0xFFFFFFFE | (v177 >> 31))
        + 900227051
        - 2 * (((v178 ^ 0x525D822D) & 0x35A85FFA | (v177 >> 31)) ^ v178 & 0x10)) ^ 0x35A85FEB;
  unsigned int v188 = v186 & v187 ^ 0xFBF3FCFF;
  unsigned int v189 = (2 * (v186 & v187)) & 0xF7E7F9FE;
  HIDWORD(v138) = v185 ^ 0x719;
  LODWORD(v138) = v185 ^ 0x959B1000;
  int v190 = (v138 >> 11) - ((2 * (v138 >> 11)) & 0x8F6C2B0C) + 1203115398;
  unsigned int v191 = 402784757 * v187 - ((805569514 * v187) & 0x88180936) - 1005845349;
  int v192 = v186 | v187;
  int v193 = v180 ^ 0x5F6202DA;
  unsigned int v194 = -1877897411 * (v180 ^ 0x5F6202DA) - ((539172474 * (v180 ^ 0x5F6202DA)) & 0x2864D30E) + 338848135;
  int v195 = v190 ^ 0x2662BCBD;
  unsigned int v196 = (1772496122 * (v190 ^ 0x2662BCBD)) & 0xFE1918A6;
  unsigned int v197 = v189
       + v188
       + (((v192 ^ 0x77BFEE1E) + ((2 * v192) & 0xEF7FDC3C) - 2009067037 + (v190 ^ 0xD99D4342)) ^ 0x7D7FDFDF)
       + ((2 * ((v192 ^ 0x77BFEE1E) + ((2 * v192) & 0xEF7FDC3C) - 2009067037 + (v190 ^ 0xD99D4342))) & 0xFAFFBFBE);
  unsigned int v198 = -1953964303 * v197 - ((387038690 * v197 - 1595335164) & 0x8FA9242E) + 407445785;
  int v199 = -1198657776 * v197 - ((823909920 * v197 + 244441152) & 0x38520840) - 1552812989;
  unsigned int v200 = (-408944640 * v193 - 1340654422 - ((1329594368 * v193) & 0x60000000)) ^ 0xB0173CAA | (v194 >> 11);
  unsigned int v201 = ((2 * v200) & 0xFFFE8DF6 ^ 0x40C92) + (v200 ^ 0x7FFDC0B6);
  unsigned int v202 = (v177 & 0x80000000 | (v191 >> 1)) ^ 0xB5E9FF72;
  unsigned int v203 = ((2 * ((v199 ^ 0x9C290423) & 0xFFFFFFF0 | (v198 >> 28))) & 0x68B9FD7E ^ 0x18)
       + (((v199 ^ 0x9C290423) & 0xFFFFFFF0 | (v198 >> 28)) ^ 0xB45CFEB3);
  unsigned int v204 = (-1466637617 * v203 - ((1361692062 * v203 - 486880482) & 0xAB59620E) + 1193940630) >> 3;
  unsigned int v205 = (-1499950104 * v195 + 533138725 - ((221325264 * v195) & 0x3F8E1A40)) ^ 0x1FC70D25 | ((v196
                                                                                             + 1261235587 * v195
                                                                                             + 15954860) >> 29);
  unsigned int v206 = ((2 * v205) & 0xBECF6AFE) + (v205 ^ 0xDF67B57F);
  unsigned int v207 = 668216639 * v206 - ((1336433278 * v206 + 1221461374) & 0x5308FA14) + 1307279305;
  unsigned int v208 = -1838491311 * v201 - ((617984674 * v201 + 641961770) & 0x8B75F92A) + 1490863146;
  unsigned int v209 = 1698955264 * v201 - ((-897056768 * v201 + 1017643008) & 0x87400000) - 504053571;
  unsigned int v210 = (v191 & 0xAFDFFA7E ^ 0x840C001A) + v202 - v201 + v206 - v203 - 46151206;
  unsigned int v211 = 1137132315 * v210 - 2 * ((1137132315 * v210 + 970136726) & 0x3960E05F ^ (1137132315 * v210) & 1) - 214696716;
  int v212 = ((v204 - (v203 << 29)) ^ 0x1AB59620)
       - 2 * ((((v204 - (v203 << 29)) ^ 0x1AB59620) + 1610612736) & 0x5A5CA9FF ^ v204 & 4)
       + 979151355;
  unsigned int v213 = 1667235840 * v210 - ((-960495616 * v210 + 629145600) & 0xE4000000) - 2067481374;
  int v214 = -183808064 * v206 - ((706125696 * v206 + 864116608) & 0x3058BC80) - 1309864392;
  unsigned int v215 = ((v209 ^ 0xC3A0C0BD) & 0xFFFC0000 | (v208 >> 14)) ^ 0x316EB;
  unsigned int v216 = v215 + 1316127722 - ((2 * v215) & 0x9CE507D4);
  unsigned int v217 = ((v213 ^ 0xF204BCE2) & 0xFFE00000 | (v211 >> 11)) ^ 0x172C1C;
  int v218 = v217 - 1407273736 - ((2 * v217) & 0x583D69F0);
  int v219 = (v216 ^ 0x4E7283EA) + (v218 ^ 0x53E14B07) + 1;
  unsigned int v220 = ((((v214 ^ 0x982C5E78) & 0xFFFFFFC0 | (v207 >> 26)) ^ 0xA)
        - ((2 * ((v214 ^ 0x982C5E78) & 0xFFFFFFC0 | (v207 >> 26))) & 0x76736B6A)
        + 993637813) ^ v216 ^ v212 ^ v218;
  unsigned int v221 = v220 ^ 0x87206EEB ^ ((v212 ^ 0x5A5CA9FB)
                            + (v219 ^ 0x3FF7C3F6)
                            + ((2 * v219) & 0x7FEF87EC)
                            + 769616747
                            - ((2 * ((v212 ^ 0x5A5CA9FB) + (v219 ^ 0x3FF7C3F6) + ((2 * v219) & 0x7FEF87EC) + 769616747)) & 0x8528B6E)
                            + 69813687);
  unsigned int v222 = 1569695457 * v221 - 491001821 - ((-1155576382 * v221) & 0xC577D046);
  LODWORD(STACK[0x250]) = v222;
  LOBYTE(v211) = ((65 - (v173 | 0xF7)) ^ 0xBD) + 89;
  unsigned int v223 = (v222 ^ 0xE2BBE823)
       + (v218 ^ 0xAC1EB4F8)
       - 1543764114
       - ((2 * ((v222 ^ 0xE2BBE823) + (v218 ^ 0xAC1EB4F8))) & 0x47F80EDC);
  LODWORD(STACK[0x254]) = v223;
  int v224 = v212 ^ v222;
  LODWORD(STACK[0x258]) = v224;
  unsigned int v225 = (v222 ^ 0x1D4417DC) + (v220 ^ 0x83092B5C) + 1;
  unsigned int v226 = (v222 ^ 0x1D4417DC) + (v220 ^ 0x83092B5C) + 111270609 - ((2 * v225) & 0xD43B5A0);
  LODWORD(STACK[0x25C]) = v226;
  unsigned int v227 = ((((v222 ^ 0xE2BBE823) >> (v211 & 8)) + 1031544694 - ((2 * ((v222 ^ 0xE2BBE823) >> (v211 & 8))) & 0x7AF83EEC)) ^ 0x3D7C1F76) >> (v211 ^ 0x58);
  LODWORD(STACK[0x260]) = v227 - ((2 * v227) & 0x172EDFCA) + 194473957;
  int v228 = ((v224 ^ v223) & 0x56BDEB38 ^ 0x585542B0)
       + ((v224 ^ v223) & 0x52B90000 ^ 0x2AA0007)
       - (((v224 ^ v223) & 0x56BDEB38 ^ 0x585542B0) & 0x5AF90080);
  LODWORD(STACK[0x264]) = (v228 ^ 0x10B70007 | (v224 ^ v223) & 0xA94214C7 ^ 0x9020486)
                        - ((2 * (v228 ^ 0x10B70007 | (v224 ^ v223) & 0xA94214C7 ^ 0x9020486)) & 0xF26C2416)
                        - 113896949;
  LODWORD(STACK[0x268]) = LOBYTE(STACK[0x253]) ^ 0xB32720BD;
  unsigned int v229 = (-601006845 * (v226 ^ 0x6A1DAD0) - ((945469958 * (v226 ^ 0x6A1DAD0)) & 0x52BEFB6C) + 694123958) >> 2;
  unsigned int v230 = ((-1767219200 * (v223 ^ 0xA3FC076E) - 975109534 - ((760528896 * (v223 ^ 0xA3FC076E)) & 0x8BC20000)) ^ 0xC5E10262 | ((153924947 * (v223 ^ 0xA3FC076E) - ((307849894 * (v223 ^ 0xA3FC076E)) & 0x8A78DF24) + 1161588626) >> 19)) ^ 0x8A7;
  int v231 = v230 - 1040970625 + (~(2 * v230) | 0x7C17E701) + 1;
  unsigned int v232 = (-1452751222 * (v224 ^ 0xB8E741D8) - 872175453 - ((1389464852 * (v224 ^ 0xB8E741D8)) & 0x98075144)) ^ 0xCC03A8A3 | ((1421108037 * (v224 ^ 0xB8E741D8) - ((694732426 * (v224 ^ 0xB8E741D8)) & 0x7AA5FF2C) + 1028849558) >> 31);
  unsigned int v233 = ((2 * v232) & 0x7EC7FF76) + (v232 ^ 0xBF63FFBB);
  unsigned int v234 = (-872480768 * v221 + 33598052 - ((-131072 * v221) & 0x4000000)) ^ 0x200AA64 | ((1958857727 * v221
                                                                                       - ((159619070 * v221) & 0x130EADCE)
                                                                                       - 1987619097) >> 16);
  unsigned int v235 = ((v229 - (v225 << 30)) ^ 0xA57DF6D) + 2049865742 - ((2 * ((v229 - (v225 << 30)) ^ 0xA57DF6D)) & 0xF45CF01C);
  unsigned int v236 = (v234 ^ 0xB7DF3250) - v233 + ((2 * v234) & 0x6FBF77AE ^ 0x1130F) + 1;
  unsigned int v237 = v236 - ((2 * v236 + 252217284) & 0xE5D9FE46) + 2054243077;
  unsigned int v238 = v231 ^ 0xC1F40C7F;
  unsigned int v239 = 769450227 * (v231 ^ 0xC1F40C7F) - ((1538900454 * (v231 ^ 0xC1F40C7F)) & 0xE0DD86C4) - 261176478;
  unsigned int v240 = ((1794753344 * (v231 ^ v235 ^ v237 ^ 0xC9368B52)
         + 1422719264
         - ((-705460608 * (v231 ^ v235 ^ v237 ^ 0xC9368B52)) & 0xA999F200)) ^ 0x54CCF920 | ((632022797
                                                                                           * (v231 ^ v235 ^ v237 ^ 0xC9368B52)
                                                                                           - ((1264045594
                                                                                             * (v231 ^ v235 ^ v237 ^ 0xC9368B52)) & 0xA43E08D4)
                                                                                           - 769719190) >> 26)) ^ 0x34;
  int v241 = v240 + 919436795 - ((2 * v240) & 0x6D9AFBF6);
  int v242 = v241 ^ 0x36CD7DFB;
  unsigned int v243 = 573074837 * (v241 ^ 0x36CD7DFB) - ((1146149674 * (v241 ^ 0x36CD7DFB)) & 0xE027FC38) - 267125220;
  unsigned int v244 = (((-1526211840 * v233 - ((1242543616 * v233 - 566489600) & 0xD185E800) + 1474362343) ^ 0x68C2F4E7) & 0xFFFFFF00 | ((-1482356773 * v233 - ((256511926 * v233 + 836647950) & 0x21D39136) + 1238951586) >> 24)) ^ 0x90;
  unsigned int v245 = v244 - ((2 * v244) & 0xEC6E8564) + 1983333042;
  unsigned int v246 = ((2021392384 * (v235 ^ 0x7A2E780E) + 472521459 - ((821559296 * (v235 ^ 0x7A2E780E)) & 0x38500000)) ^ 0x1C2A1AF3 | ((946314783 * (v235 ^ 0x7A2E780E) - ((1892629566 * (v235 ^ 0x7A2E780E)) & 0x7CCD8CC2) + 1046922849) >> 14)) ^ 0xF99B;
  unsigned int v247 = v246 + 1341929315 - ((2 * v246) & 0x9FF86EC6);
  int v248 = v241 ^ v245;
  unsigned int v249 = 1887010816 * v238 - 458656862 - ((-520945664 * v238) & 0xC9520000);
  unsigned int v250 = v243 >> 13;
  unsigned int v251 = ((v249 ^ 0xE4A973A2 | (v239 >> 17)) ^ 0x7837)
       + 1669214581
       + (~(2 * ((v249 ^ 0xE4A973A2 | (v239 >> 17)) ^ 0x7837)) | 0x39039D15)
       + 1;
  int v252 = v251 ^ 0x637E3175;
  int v253 = -151639808 * (v247 ^ 0x4FFC3763) + 836955019 - ((1844204032 * (v247 ^ 0x4FFC3763)) & 0x63C5D600);
  unsigned int v254 = -1067541609 * (v251 ^ 0x637E3175) - ((12400430 * (v251 ^ 0x637E3175)) & 0x4C931900) + 642354304;
  int v255 = 2
       * (((v248 ^ 0x40FA3F49) & (v251 ^ 0x637E3175)) - ((2 * ((v248 ^ 0x40FA3F49) & (v251 ^ 0x637E3175))) & 0x209CC37E))
       + 547144574;
  unsigned int v256 = (v251 ^ 0x23840E3C ^ v248) + (v255 ^ 0x9FD8F49B) + 1086048283 + ((2 * v255) & 0x7E886FC8 ^ 0x400806C8);
  unsigned int v257 = (v250 | (1822949376 * v242 + 1543074729 - ((-649068544 * v242) & 0xB7F00000)) ^ 0x5BF973A9) ^ 0x7809F;
  unsigned int v258 = v257 + 2047066104 - ((2 * v257) & 0xF4077FF0);
  unsigned int v259 = -373723136 * v252 - ((1400037376 * v252) & 0x7CABA000) + 1045812325;
  int v260 = v247 ^ 0x491A930A ^ (v256 - ((2 * v256) & 0xDCD48D2) + 115778665);
  unsigned int v261 = (~(2029154654 * v260) | 0xA5FA8A5B) - 1132906321 * v260 - 1392330029;
  unsigned int v262 = (v253 ^ 0x31E2EB8B | ((636941865 * (v247 ^ 0x4FFC3763)
                              - ((1273883730 * (v247 ^ 0x4FFC3763)) & 0xE49C2786)
                              + 1917719491) >> 24)) ^ 0x72;
  int v263 = v262 - 1637452983 - ((2 * v262) & 0x3CCCE692);
  int v264 = -1358954496 * v260 + 1044019146 - ((1577058304 * v260) & 0x7C000000);
  int v265 = v258 ^ 0x7A03BFF8;
  unsigned int v266 = 793627520 * v252 - ((1587255040 * v252) & 0xC4F13C00) + 1652072002;
  unsigned int v267 = ((v266 & 0x30000000 ^ 0x120C024D) + (v266 & 0xC8000000 ^ 0xC0002081) - 2) ^ 0xB20C22CC | (v254 >> 25);
  int v268 = v250 & 0x200;
  int v269 = (v259 >> 5) ^ 0x1F2AEA3;
  int v270 = v268 | 0x70265849;
  int v271 = ((v267 ^ 0x13) + 2037198370 - 2 * ((v267 ^ 0x13) & 0x796D2E26 ^ v267 & 4)) ^ 0x796D2E22 | v269;
  unsigned int v272 = v271 - ((2 * v271) & 0xE23C083C) - 249691106;
  HIDWORD(v138) = v272 ^ 0x6FFFAC0;
  LODWORD(v138) = v272 ^ 0x78000000;
  int v273 = (v138 >> 27) - ((2 * (v138 >> 27)) & 0xB24FF502) + 1495792257;
  BOOL v274 = (v268 & v273) + 1804574551 - 2 * (v268 & v273) == 1804574551;
  int v275 = -531844974 - (v268 | 0x70265849);
  if (v274) {
    int v275 = v270;
  }
  unsigned int v276 = (v273 ^ 0xA5182150)
       - 1881561161
       + v275
       - ((2 * ((v273 ^ 0xA5182150) - 1881561161 + v275)) & 0xDB12FE76)
       - 309756101;
  unsigned int v277 = ((2 * (v264 ^ 0x3E3A77CA | (v261 >> 8))) & 0xFFFED7F8 ^ 0x15A0570)
       + ((v264 ^ 0x3E3A77CA | (v261 >> 8)) ^ 0xFF526946);
  unsigned int v278 = (v258 & 0xFFFFFDFF ^ 0x978AC2C3 ^ v276) - v277 - 37892;
  unsigned int v279 = ((2 * v278) & 0xF9773FFA) + (v278 ^ 0xFCBB9FFD);
  HIDWORD(v280) = v263 ^ 0x7349;
  LODWORD(v280) = v253 ^ 0x31E28000;
  int v281 = (v280 >> 15) - ((2 * (v280 >> 15)) & 0x49EC760C) + 620116742;
  HIDWORD(v280) = v279 + 24579;
  LODWORD(v280) = v279 + 54812675;
  int v282 = ((v280 >> 15) - ((2 * (v280 >> 15)) & 0x10E8C062) - 2005639119) ^ v281;
  HIDWORD(v280) = v282 ^ 0x4A97;
  LODWORD(v280) = v282 ^ 0x9AC60000;
  unsigned int v283 = (-1342730706 * v277 - ((1609505884 * v277 + 1008836976) & 0x7E4EB62C) - 1657263153) ^ 0xBF275B17;
  unsigned int v284 = ((((804752942 * v277 + 504418488) & 0x2047A2EC) - 1476118295 * v277 - 2133604819) >> 31)
       - 267343358
       + v283
       - ((2 * v283) & 0xE0215404);
  int v285 = ((v280 >> 17) - ((2 * (v280 >> 17)) & 0x523A21DA) + 689770733) ^ 0x21CD0BCF;
  unsigned int v286 = ((1141596832 * v265 + 1790144265 - ((-2011773632 * v265) & 0xD566DE00)) ^ 0x6AB36F09 | ((1914723093 * v265
                                                                                                - ((-465521110 * v265) & 0xA6D4F7E8)
                                                                                                + 1399487476) >> 27)) ^ 0xA;
  int v287 = v286 - ((2 * v286) & 0xC27325E) + 101947695;
  unsigned int v288 = ((-211812352 * v285 - 625802855 - ((-423624704 * v285) & 0xB5400000)) ^ 0xDAB30199 | ((453773211 * v285
                                                                                              - ((907546422 * v285) & 0x941FFDDE)
                                                                                              + 1242562287) >> 11)) ^ 0x941FF;
  unsigned int v289 = v288 - 105096500 - ((2 * v288) & 0xF378B598);
  LODWORD(STACK[0x26C]) = v289;
  unsigned int v290 = (-20222976 * (v263 ^ 0x9E667349) - 2004050652 - ((496424960 * (v263 ^ 0x9E667349)) & 0x11193800)) ^ 0x888C9D24 | ((2147463899 * (v263 ^ 0x9E667349) - ((-39498 * (v263 ^ 0x9E667349)) & 0xF1D86EAA) - 118737067) >> 22);
  unsigned int v291 = ((2 * v290) & 0xBCDB5F7C ^ 0x744) + (v290 ^ 0x5E6DAC5D) + (v287 ^ 0xF9EC66D0);
  unsigned int v292 = ((v291 - ((2 * v291 + 1126473862) & 0x4798D072) + 1163835516) ^ 0x53DCC23B ^ v284) + (v289 ^ 0xF9BC5ACC);
  int v293 = v292 + 1047678751 - ((2 * v292) & 0x7CE49E3E);
  int v294 = (v289 ^ 0x643A533) + (v287 ^ 0xCB372D2 ^ v284) + 1;
  unsigned int v295 = (383327023 * (((2 * v294) & 0xF5DE7DD4) + (v294 ^ 0x7AEF3EEA))
        - ((28456542 * (((2 * v294) & 0xF5DE7DD4) + (v294 ^ 0x7AEF3EEA)) + 2984468) & 0x34E6AA4)
        - 1010959780) ^ v293;
  LODWORD(STACK[0x270]) = v295 ^ 0x220BF338;
  unsigned int v296 = v295 ^ 0xEFE1BAB7;
  unsigned int v297 = (v295 ^ 0xEFE1BAB7)
       + (v293 ^ 0x3E724F1F)
       - 246272288
       + (~(2 * ((v295 ^ 0xEFE1BAB7) + (v293 ^ 0x3E724F1F))) | 0x1D5BA23F)
       + 1;
  LODWORD(STACK[0x274]) = v297;
  unsigned int v298 = (v284 ^ 0xF010AA02)
       + (v295 ^ 0x101E4548)
       - 360564886
       - ((2 * ((v284 ^ 0xF010AA02) + (v295 ^ 0x101E4548) + 1)) & 0xD5046ED2);
  LODWORD(STACK[0x278]) = v298;
  int v299 = v295 ^ 0x220BF338 ^ v289;
  LODWORD(STACK[0x27C]) = v299;
  v297 ^= 0xF1522EE0;
  unsigned int v300 = 2140198595 * v297 - ((-14570106 * v297) & 0x8A58FE2E) - 986939625;
  unsigned int v301 = v298 ^ 0xEA823769;
  int v302 = v299 ^ 0x34561343;
  unsigned int v303 = -800319901 * (v299 ^ 0x34561343) - ((546843846 * (v299 ^ 0x34561343)) & 0x7E1F0BD6) + 1057981931;
  unsigned int v304 = 225193984 * v297 + 1855401872 - ((450387968 * v297) & 0xDD2E4000);
  unsigned int v305 = (136439790 * v296 - 1226883081 - ((272879580 * v296) & 0x6DBE7FEC)) ^ 0xB6DF3FF7 | ((((136439790 * v296) & 0x99847D14)
                                                                                            - 68219895 * v296
                                                                                            + 859685237) >> 31);
  unsigned int v306 = v305 ^ 0xD7EEEABF;
  unsigned int v307 = (2 * v305) & 0xAFDDD57E;
  unsigned int v308 = (436207616 * v301 - 593241916 - ((872415232 * v301) & 0xBBBBBBBB)) ^ 0xDCA3D8C4 | (((~(133912602 * v301) | 0xC85FD62D)
                                                                                           - 469914611 * v301
                                                                                           - 1680861974) >> 7);
  unsigned int v309 = ((2 * v308) & 0xF0737E7E ^ 0x634052) + (v308 ^ 0x790E1F16);
  int v310 = ((v304 ^ 0x6E972F90 | (v300 >> 20)) ^ 0xC52)
       - 1588916447
       - ((2 * ((v304 ^ 0x6E972F90 | (v300 >> 20)) ^ 0xC52)) & 0x42961E42);
  int v311 = 2 * v309 + 260866434;
  int v312 = v311 ^ 0x908304D;
  unsigned int v313 = (2 * v311) & 0xEDEF9F64;
  unsigned int v314 = v310 ^ 0xA14B0F21;
  unsigned int v315 = -1713889809 * (v310 ^ 0xA14B0F21) - ((867187678 * (v310 ^ 0xA14B0F21)) & 0x74CC4134) - 1167712102;
  int v316 = v309 + v312 - v313 + v306 + v307 + 2119947358;
  unsigned int v317 = ((-2107591912 * v302 - 1388890996 - ((79783472 * v302) & 0x5A6E6910)) ^ 0xAD37348C | (v303 >> 29)) ^ 1;
  unsigned int v318 = v317 - 84065475 - ((2 * v317) & 0xF5FA867A);
  unsigned int v319 = -959019311 * v309 - ((-1918038622 * v309 + 204195618) & 0xE4076F5E) - 132539584;
  unsigned int v320 = -1391615488 * v309 - ((1511736320 * v309 + 1468941312) & 0x8A42E400) + 1894290879;
  unsigned int v321 = v310 ^ v318 ^ 0xC46F3BE2 ^ (v316 - ((2 * v316 + 283550382) & 0x3FB2EFFC) - 934491819);
  v318 ^= 0xFAFD433D;
  unsigned int v322 = 239392709 * v318 - ((478785418 * v318) & 0x57539A6C) + 732548406;
  unsigned int v323 = (-1404165120 * v321 - 431585731 - ((1486637056 * v321) & 0xCC8D0800)) ^ 0xE646863D | ((-500493431 * v321
                                                                                              - ((-1000986862 * v321) & 0xCD7FF884)
                                                                                              + 1723857986) >> 22);
  unsigned int v324 = ((2 * v323) & 0xBBFAD8AE ^ 0x24) + (v323 ^ 0x5DFD6DCD);
  unsigned int v325 = (v320 ^ 0x452173BF) & 0xFFFFFE00 | (v319 >> 23);
  unsigned int v326 = v325 ^ 0xF6DD7E1B;
  unsigned int v327 = (2 * v325) & 0xEDBAFFFE ^ 0x3C8;
  int v328 = 1810006016 * v318 - 1797781733 - ((398786560 * v318) & 0x29B00000);
  unsigned int v329 = -1583710767 * v324 - ((53803938 * v324 + 96216050) & 0x29AFBB98) + 934670277;
  int v330 = -1652433168 * v314 + 59864994 - ((50576864 * v314) & 0x722EF40);
  unsigned int v331 = ((2 * (v328 ^ 0x94D8071B | (v322 >> 17))) & 0xF6BBF4B6 ^ 0x20A0)
       + ((v328 ^ 0x94D8071B | (v322 >> 17)) ^ 0xFB5DEF8F);
  unsigned int v332 = ((2 * (v330 ^ 0x39177A2 | (v315 >> 28))) & 0xD1F2F96E ^ 6) + ((v330 ^ 0x39177A2 | (v315 >> 28)) ^ 0xE8F97CBC);
  unsigned int v333 = v327 + v326 + v332 + v331 + v324;
  unsigned int v334 = -990074529 * v332 - ((-1980149058 * v332 - 270282194) & 0xEAED3D0E) + 1835567006;
  int v335 = 1337597952 * v324 - ((527712256 * v324 + 75382784) & 0x17460000) + 1306667621;
  unsigned int v336 = ((2 * ((v335 ^ 0x8BA30A65) & 0xFFFFE000 | (v329 >> 19))) & 0x96FCACDE ^ 0x2414)
       + (((v335 ^ 0x8BA30A65) & 0xFFFFE000 | (v329 >> 19)) ^ 0xCB7E44F5);
  unsigned int v337 = 1257766912 * v332 - ((-1779433472 * v332 - 1854930944) & 0xD3400000) - 1302669752;
  unsigned int v338 = ((939524096 * v331 - ((805306368 - (v331 << 28)) & 0x70000000) + 1449733357) ^ 0x3E692CED) & 0xF8000000 | ((-1424635961 * v331 - ((1445695374 * v331 + 1941785734) & 0xE96039E4) - 1366375627) >> 5);
  int v339 = ((2 * v338) & 0x6AEDBFD2 ^ 0x24901C2) + (v338 ^ 0x36D35F0E);
  unsigned int v340 = (-1528704193 * (v333 - 111055232) - ((163817086 * (v333 - 111055232) + 359284688) & 0x18B1797A) - 1492263771) >> 3;
  unsigned int v341 = -754239251 * v336 - ((-1508478502 * v336 - 1967561094) & 0xF5DD9506) - 1068794432;
  int v342 = 497025024 * v336 - ((994050048 * v336 + 1329594368) & 0x4B800000) - 1922268122;
  unsigned int v343 = v340 | (-787802032 - (v333 << 29) + ((-1073741824 * v333) & 0x80000000)) ^ 0xD10B1850;
  unsigned int v344 = ((2 * v343) & 0xF37FDCFE ^ 0x3160C2E) + (v343 ^ 0x7834F9E8);
  unsigned int v345 = v339 - v336 + v344 - ((2 * (v339 - v336 + v344) + 948899854) & 0xCCB38FC8) - 2103357461;
  unsigned int v346 = ((v337 ^ 0x69A2D648) & 0xFFF80000 | (v334 >> 13)) ^ 0x3ABB4;
  unsigned int v347 = v346 - 893466526 - ((2 * v346) & 0x957D90C4);
  unsigned int v348 = v347 ^ 0xCABEC862;
  unsigned int v349 = 1847516677 * (v347 ^ 0xCABEC862) - ((1547549706 * (v347 ^ 0xCABEC862)) & 0x4C63BD06) + 640802435;
  unsigned int v350 = ((v342 ^ 0x25CC8426) & 0xFFE00000 | (v341 >> 11)) ^ 0x1F5DD9;
  unsigned int v351 = v350 - 914949256 - ((2 * v350) & 0x92EDF6F0);
  HIDWORD(v280) = ~v340;
  LODWORD(v280) = (1129482055 * v344 - ((111480462 * v344 + 1185137550) & 0x4A994DFC) + 144607429) ^ 0xA54CA6FE;
  int v352 = (v280 >> 1) - 541981946 - ((2 * (v280 >> 1)) & 0xBF64060C);
  unsigned int v353 = ((-353370112 * (v347 ^ 0xACE70F86 ^ v345) + 296606234 - ((367001600 * (v347 ^ 0xACE70F86 ^ v345)) & 0x23400000)) ^ 0x11ADDA1A | ((-2146845009 * (v347 ^ 0xACE70F86 ^ v345) - ((1277278 * (v347 ^ 0xACE70F86 ^ v345)) & 0x5C337F5A) + 773439405) >> 12)) ^ 0x2E19B;
  unsigned int v354 = v353 + 1439412553 - ((2 * v353) & 0xAB976292);
  unsigned int v355 = ((83886080 * v348 - 1863157408 - ((167772160 * v348) & 0x20000000)) ^ 0x90F27960 | (v349 >> 8)) ^ 0x2631DE;
  unsigned int v356 = ((v355 - ((2 * v355) & 0xAF857366) + 1472379315) ^ 0x9EB442CB ^ v351)
       + (((v354 ^ 0x55CBB149) + (v352 ^ 0xDFB20306)) ^ 0xE0020033)
       - ((2 * ((v354 ^ 0x55CBB149) + (v352 ^ 0xDFB20306))) & 0x3FFBFF98)
       + 536739789;
  unsigned int v357 = ((2 * v356) & 0xFEFFE79E) + (v356 ^ 0xFF7FF3CF);
  unsigned int v358 = (v351 ^ 0xC976FB78)
       + (((v352 ^ 0xDFB20306) - 703786175) ^ 0xD6F8D6FF)
       + ((2 * ((v352 ^ 0xDFB20306) - 703786175)) & 0xADF1ADFE)
       + 688335105;
  unsigned int v359 = (v354 ^ 0xA7A2E463 ^ (v358 - ((2 * v358) & 0xE4D2AA54) - 227977942)) - 8391729 - v357;
  unsigned int v360 = ((2 * v359) & 0xFF57FFFE)
       + (v359 ^ 0xFFABFFFF)
       - 2
       * ((((2 * v359) & 0xFF57FFFE) + (v359 ^ 0xFFABFFFF) + 677856260) & 0x4ECDB5BE ^ (((2 * v359) & 0xFF57FFFE)
                                                                                      + (v359 ^ 0xFFABFFFF)) & 2)
       - 147523136;
  LODWORD(STACK[0x280]) = v360;
  int v361 = v360 ^ v354;
  LODWORD(STACK[0x284]) = v360 ^ v354;
  LODWORD(STACK[0x288]) = v360 ^ 0x2C675303;
  int v362 = v360 ^ 0x2C675303 ^ v352;
  LODWORD(STACK[0x28C]) = v362;
  unsigned int v363 = v357 + (v360 ^ 0xABF8BB97) + 857182475 + (~(2 * (v357 + (v360 ^ 0xABF8BB97)) + 16783460) | 0x9AD0F64F);
  LODWORD(STACK[0x290]) = v363;
  int v364 = v354 ^ v352;
  LODWORD(STACK[0x294]) = LOBYTE(STACK[0x283]);
  int v365 = v363 ^ 0x329784D8;
  unsigned int v366 = -891995541 * (v363 ^ 0x329784D8) - ((-1783991082 * (v363 ^ 0x329784D8)) & 0xD79463CC) + 1808413158;
  HIDWORD(v280) = v363 ^ 0x29784D8;
  LODWORD(v280) = v363 ^ 0x30000000;
  int v367 = (v280 >> 27) - ((2 * (v280 >> 27)) & 0x1B7F0FCA);
  HIDWORD(v280) = v364 ^ 0x279B24F;
  LODWORD(v280) = v364 ^ 0x88000000;
  int v368 = ((v280 >> 27) - ((2 * (v280 >> 27)) & 0xE70F7DA6) + 1938276051) ^ (v367 - 1916827675);
  HIDWORD(v280) = v368 ^ 0x55555555;
  LODWORD(v280) = v368 ^ 0x427E000;
  LODWORD(STACK[0x298]) = (v280 >> 5) - ((2 * (v280 >> 5)) & 0xD74AD9C8) - 341480220;
  unsigned int v369 = 1476395008 * v365 + 1460045685 - ((-1342177280 * v365) & 0xA0000000);
  unsigned int v370 = ((2 * (v369 ^ 0x57068775 | (v366 >> 5))) & 0xDDEBAC52 ^ 0x4A8A012)
       + ((v369 ^ 0x57068775 | (v366 >> 5)) ^ 0xEDAB87A6);
  unsigned int v371 = ((1420828672 * (v362 ^ 0xA7D2146D) + 1524946923 - ((-1453309952 * (v362 ^ 0xA7D2146D)) & 0xB5C98000)) ^ 0x5AE4D7EB | ((416982401 * (v362 ^ 0xA7D2146D) - ((833964802 * (v362 ^ 0xA7D2146D)) & 0xCD7B143E) + 1723697695) >> 19)) ^ 0xCD7;
  int v372 = v371 + 912319402 - ((2 * v371) & 0x6CC1C754);
  unsigned int v373 = ((-483421280 * (v360 ^ 0x54074468) - 2040496793 - ((106899264 * (v360 ^ 0x54074468)) & 0xCC0FAC0)) ^ 0x86607D67 | ((-1625719651 * (v360 ^ 0x54074468) - ((1043527994 * (v360 ^ 0x54074468)) & 0x80F80532) + 1081868953) >> 27)) ^ 8;
  unsigned int v374 = v373 - ((2 * v373) & 0xD24ED1F6) + 1764190459;
  unsigned int v375 = (-2107637760 * (v361 ^ 0x1CCF521) + 1892458926 - ((79691776 * (v361 ^ 0x1CCF521)) & 0xE1800000)) ^ 0x70CCA1AE | ((1970973715 * (v361 ^ 0x1CCF521) - ((183851046 * (v361 ^ 0x1CCF521)) & 0x15634C54u) - 1968069078) >> 11);
  unsigned int v376 = ((2 * v375) & 0xFFFBF5BC ^ 0x22A428) + (v375 ^ 0x7FECACEA);
  int v377 = v372 ^ 0x3660E3AA;
  unsigned int v378 = -1054358235 * (v372 ^ 0x3660E3AA) - ((-2108716470 * (v372 ^ 0x3660E3AA)) & 0xE371C4B6) + 1907941979;
  int v379 = (v374 ^ 0x5F478B51 ^ v372) - v376 - v370 + 1861472519;
  unsigned int v380 = ((-52959136 * v376 - ((-105918272 * v376 + 971864448) & 0xF6767D40) - 1741554840) ^ 0xFB3B3EA8) & 0xFFFFFFE0 | ((-806961341 * v376 - ((533560966 * v376 + 969894860) & 0x3FDF3FE6) - 1126738471) >> 27);
  unsigned int v381 = ((2 * v380) & 0xDAEBF57A ^ 0x22) + (v380 ^ 0xED75FAAE);
  unsigned int v382 = ((1848891000 * (((2 * v379) & 0xEBFFFD58) + (v379 ^ 0x75FFFEAC))
         - ((1550298352 * (((2 * v379) & 0xEBFFFD58) + (v379 ^ 0x75FFFEAC)) + 431075008) & 0x7B7C2CE0)
         + 1251405268) ^ 0x3DBE1674) & 0xFFFFFFF8 | ((-842630449 * (((2 * v379) & 0xEBFFFD58) + (v379 ^ 0x75FFFEAC))
                                                    - ((-1685260898 * (((2 * v379) & 0xEBFFFD58) + (v379 ^ 0x75FFFEAC))
                                                      - 1019857448) & 0xB128E5F0)
                                                    + 976195044) >> 29);
  unsigned int v383 = ((2 * v382) & 0xCF3BA7FE ^ 4) + (v382 ^ 0x679DD3FD);
  int v384 = (1240549696 * v377 + 2021473091 + (~(-1813867904 * v377) | 0xF05897F) + 1) ^ 0x787D3B43 | (v378 >> 26);
  unsigned int v385 = v384 ^ 0x9DFFFFE6;
  int v386 = (2 * v384) & 0x3BFFFFF4 ^ 0x30;
  unsigned int v387 = ((-280210354 * v370 - ((-560420708 * v370 + 1464768260) & 0xD1475BDC) - 1807025807) ^ 0xE8A3ADEF) & 0xFFFFFFFE | ((((-280210354 * v370 - 1415099518) & 0xF279E152) + 140105177 * v370 + 820996501) >> 31);
  unsigned int v388 = ((2 * v387) & 0xCFB3AD7E) + (v387 ^ 0x67D9D6BF);
  int v389 = v385 + v381 + v386 - v388 - v383 + 1037199589;
  unsigned int v390 = -61479435 * v389 - ((-122958870 * v389 - 1739261164) & 0xBC121C64) + 708021180;
  unsigned int v391 = 977450077 * v388 - ((881158330 * v388 + 792813882) & 0x31FD4FE0) + 278878349;
  int v392 = -1952448512 * v388 - ((390070272 * v388 + 658505728) & 0x41800000) + 879350055;
  unsigned int v393 = (-1747714048 * v389 - ((799539200 * v389 - 330301440) & 0xFBC00000) - 200728784) ^ 0xFDE11F30;
  unsigned int v394 = ((v393 & 0xFFFC0000 | (v390 >> 14)) ^ 0x37824)
       + 1293403287
       - ((2 * ((v393 & 0xFFFC0000 | (v390 >> 14)) ^ 0x37824)) & 0x9A2F892E);
  unsigned int v395 = ((-452984832 * v381 - ((-905969664 * v381 - 570425344) & 0xD6000000) + 1513463010) ^ 0x6B359CE2) & 0xFF000000 | ((-1339890971 * v381 - ((1615185354 * v381 + 1644410334) & 0xEEB5BE3E) - 1470318066) >> 8);
  unsigned int v396 = ((181104526 * v383 - ((362209052 * v383 + 212315932) & 0x30B61524) - 1632706015) ^ 0x985B0A93) & 0xFFFFFFFE | ((((181104526 * v383 + 106157966) & 0xF950E7DC) + 2056931385 * v383 - 2144493494) >> 31);
  unsigned int v397 = ((2 * v396) & 0xEF6A1BBA) + (v396 ^ 0xF7B50DDD);
  unsigned int v398 = ((2 * v395) & 0xF9F8E3CE ^ 0xE8A18E) + (v395 ^ 0xFC8B2B38) + v397;
  unsigned int v399 = v398 - ((2 * v398 + 379388024) & 0xCA0488F6) - 263142217;
  unsigned int v400 = ((v392 ^ 0x20C9D127) & 0xFFE00000 | (v391 >> 11)) ^ 0x131FD4;
  unsigned int v401 = v400 - 348215917 - ((2 * v400) & 0xD67D4B26);
  unsigned int v402 = 1352423675 * (v401 ^ 0xEB3EA593) - ((-1590119946 * (v401 ^ 0xEB3EA593)) & 0xDEFA00DE) + 1870463087;
  unsigned int v403 = (((250216448 * v397 - ((500432896 * v397 + 1006370816) & 0x24C80000) + 1348675344) ^ 0x12652710) & 0xFFFE0000 | ((-1465546891 * v397 - ((1363873514 * v397 - 1325384194) & 0xA879C632) + 750584344) >> 15)) ^ 0x1A879;
  unsigned int v404 = ((869793792 * (v394 ^ 0x4D17C497) + 567102870 - ((1739587584 * (v394 ^ 0x4D17C497)) & 0x43900000)) ^ 0x21CD4D96 | ((-442128773 * (v394 ^ 0x4D17C497) - ((-884257546 * (v394 ^ 0x4D17C497)) & 0x9384444E) + 1237459495) >> 13)) ^ 0x24E11;
  int v405 = v404 + 1028113734 - ((2 * v404) & 0x7A8F8A8C);
  unsigned int v406 = v405 ^ (v403 - ((2 * v403) & 0xE008216C) + 1879314614);
  unsigned int v407 = ((625550208 * (v401 ^ v394 ^ 0x432B257F ^ v399)
         - 762062618
         - ((1251100416 * (v401 ^ v394 ^ 0x432B257F ^ v399)) & 0xA527B100)) ^ 0xD293D8E6 | ((2051707463
                                                                                           * (v401 ^ v394 ^ 0x432B257F ^ v399)
                                                                                           - ((-191552370
                                                                                             * (v401 ^ v394 ^ 0x432B257F ^ v399)) & 0xFFA87ECA)
                                                                                           + 2144616293) >> 25)) ^ 0x3F;
  unsigned int v408 = v407 + 1656662937 - ((2 * v407) & 0xC57D5732);
  unsigned int v409 = ((v402 >> 9) | (2105540608 * (v401 ^ 0xEB3EA593) - 247874848 - ((-83886080 * (v401 ^ 0xEB3EA593)) & 0xE2000000)) ^ 0xF139BAE0) ^ 0x37BE80;
  int v410 = v409 + 1800285854 - 2 * (v409 & 0x6B4E2E9F ^ (v402 >> 9) & 1);
  int v411 = v408 ^ 0x62BEAB99;
  unsigned int v412 = ((2 * ((v408 ^ 0x62BEAB99) + (v406 ^ 0x4D43D5F0))) & 0xD7DEF6FE)
       + (((v408 ^ 0x62BEAB99) + (v406 ^ 0x4D43D5F0)) ^ 0x6BEF7B7F);
  int v413 = v406 ^ v410 ^ v408;
  unsigned int v414 = (v412 - ((2 * v412 + 1993305374) & 0xB6057ED4) + 376075769) ^ v413;
  unsigned int v415 = (2 * v414) ^ 0x99EA78DD;
  unsigned int v416 = (4 * v414) & 0xFF7FED6C ^ 0xCCAB1ED7;
  unsigned int v417 = v414 ^ 0xCCD538CA;
  v414 ^= 0x1FB1EF9Du;
  unsigned int v418 = ((v417 + v414) ^ 0x7BADB87F) + v415 + v416 + ((2 * (v417 + v414)) & 0xF75B70FE);
  unsigned int v419 = ((v414 + 75806284) ^ 0xFBBF3FCD)
       + ((2 * (v414 + 75806284)) & 0xF77E7F9A)
       + 71352371
       + ((v418 + 1356083611 + ~(2 * ((v418 + 68304441) & 0x4CC1F363 ^ (v418 + 1) & 2))) ^ 0x333E0C9F);
  unsigned int v420 = v419 - 450962256 - ((2 * v419) & 0xCA3DB960);
  LODWORD(STACK[0x29C]) = v413;
  LODWORD(STACK[0x2A0]) = v420;
  LODWORD(STACK[0x2A4]) = v420 ^ v413;
  LODWORD(STACK[0x2A8]) = (v420 ^ 0xE51EDCB0) + v411 - ((2 * ((v420 ^ 0xE51EDCB0) + v411)) & 0xF0F96482) - 126045631;
  LODWORD(STACK[0x2AC]) = (v420 ^ 0xE51EDCB0)
                        + (v405 ^ 0x3D47C546)
                        - ((2 * ((v420 ^ 0xE51EDCB0) + (v405 ^ 0x3D47C546))) & 0xC482D3C6)
                        - 499029533;
  uint64_t v421 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v36 ^ 0x46D)))(1028);
  v35[53] = v421;
  *int v35 = 0;
  v35[1] = 0;
  v35[2] = 0;
  v35[3] = 0;
  v35[5] = 0;
  v35[6] = 0;
  v35[7] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(v34 + 8 * ((63 * (v421 == 0)) ^ v36)))(v421, v422, v423, v424, v425, v426, v427, v428, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           v430,
           a31);
}

uint64_t sub_23C1E4470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v68 = LODWORD(STACK[0x240]) ^ LODWORD(STACK[0x244]) ^ LODWORD(STACK[0x248]) ^ 0xA3AC075F;
  unsigned int v69 = (STACK[0x24C] & 1 ^ 0xFFB3EBCF) + 2 * (STACK[0x24C] & 1);
  int v70 = ((v69 + 4985905) & v68) - 2118644530 - ((2 * ((v69 + 4985905) & v68)) & 0x3701968);
  unsigned int v71 = v69 + 2004877310;
  unsigned int v72 = 1994905500 - v69;
  if (v70 == -2118644530) {
    unsigned int v72 = v71;
  }
  int v73 = v68 - 1999891405 + v72 - ((2 * (v68 - 1999891405 + v72)) & 0x2555E7CA) + 313193445;
  unsigned int v74 = (STACK[0x24C] & 0xFFFFFFFE ^ 0xDB7B28CC)
      + (STACK[0x24C] & 0xB25E1B7C ^ 0x20041331)
      - ((STACK[0x24C] & 0xFFFFFFFE ^ 0xDB7B28CC) & 0xB25E1B7C);
  unsigned int v75 = (v74 & 0x6E3D3DCE ^ 0x6E0D24C3) + (v74 & 0x91C2C230 ^ 0x90400001) - 2;
  int v76 = LODWORD(STACK[0x2A4]) ^ LODWORD(STACK[0x220]);
  unsigned int v77 = ((v76 & 0x60D235E7 ^ 0x60D22070) + (v76 & 0x9F2DCA08 ^ 0x9801C209) - 1) ^ 0x62D11CCF;
  unsigned int v78 = (-174140126
       - (v76 & 0x10 | (2 * (((v76 & 0x10 ^ 0xBDDBBDD6) & 0x10 | 0x4A3CEAAA) ^ (v76 & 0x10 ^ 0xBDDBBDD6 | 0x7FFFFFEE))))) ^ 0x5B17A665 ^ (((2 * v77) | 0xD890E376) - v77 + 330796613);
  int v79 = ((v78 - ((2 * v78 + 984595718) & 0x353C7C4A) + 938876072) ^ 0x1A9E3E25) + a66;
  unsigned int v80 = (v79 ^ 0xFF5FE9C7) + 10491449 + ((2 * v79) & 0xFEBFD38E);
  unsigned int v81 = ((v80 & 0xFFFFFFFE) - ((2 * v80) & 0x1A4BF96C) - 1926890314) ^ 0x6CAEE78B;
  LODWORD(STACK[0x2B8]) = v81;
  int v82 = STACK[0x294];
  int v83 = LODWORD(STACK[0x294]) ^ 0x54;
  LODWORD(STACK[0x2BC]) = v83;
  LODWORD(STACK[0x2C0]) = v83 + 1;
  int v84 = v73 ^ v75;
  LODWORD(STACK[0x2C4]) = v73 ^ v75;
  int v85 = -308241933 * v81 - 1041350529;
  unsigned int v86 = v84 ^ LODWORD(STACK[0x26C]) ^ LODWORD(STACK[0x274]) ^ LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x29C]) ^ LODWORD(STACK[0x2AC]) ^ LODWORD(STACK[0x2A8]) ^ 0x8D825CCB;
  unsigned int v87 = v85 - ((-616483866 * v81) & 0x83DC80FE);
  int v88 = (v87 ^ ((v87 ^ 0x3E11BF80) - ((2 * (v87 ^ 0x3E11BF80) + 2) & 0x5A013C1C) - 1392468465) ^ ((v82 ^ 0x3E11BFD4 ^ v87)
                                                                                                + v83
                                                                                                + 1
                                                                                                - (((10 * (a21 ^ 0x12B)) ^ 0x45A8C8EE) & (2 * ((v82 ^ 0x3E11BFD4 ^ v87) + v83 + 1)))
                                                                                                + 584345326) ^ 0x4E3AB89F)
      + v83;
  int v89 = (v88 ^ 0xFD) + ((2 * v88) & 0xFA) + 3;
  int v90 = LODWORD(STACK[0x268]) ^ LODWORD(STACK[0x22C]) ^ (v89 - ((2 * v89) & 0x84) + 1217059650);
  unsigned int v91 = (v90 ^ 0xDB34B4FE)
      + (((v90 ^ 0x22F75ECB) + 1) ^ 0x1FFEFFFF)
      + ((2 * ((v90 ^ 0x22F75ECB) + 1)) & 0x3FFDFFFE)
      - 536805375;
  uint64_t v92 = v91 ^ 0xCFBDBFF5;
  int v93 = v92 + dword_23C210CB0[v90 ^ 0xDD08A1A7] + ((2 * v91) & 0x9F7B7FEA);
  uint64_t v94 = (2 * v93 + 168292878) & 0x1F3CBA8E;
  *(_DWORD *)(*(void *)(v67 + 424) + 4 * ((v85 - -26 * v81) ^ 0x7Fu)) = v86 ^ (v93
                                                                                                  - v94
                                                                                                  - 1801300402);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * (int)a21))(*(void *)(v66 + 8 * (int)a21), v94, v92, 3708330407, a21, 2675671018, 524073614, 2493666894, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

void sub_23C1E493C()
{
}

uint64_t sub_23C1E4948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  LODWORD(a38) = v39;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v40 | 0xC4)))(1032);
  v41[56] = v42;
  *unsigned int v41 = 0;
  v41[1] = 0;
  v41[2] = 0;
  v41[3] = 0;
  v41[5] = 0;
  v41[6] = 0;
  v41[7] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (((v42 != 0) * (v40 - 1316)) ^ v40)))(v42, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1E49B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  signed int v67 = (((v65 + 134257514) | 0xC0025261) + 1468303586) & 0xE07887A7;
  unsigned int v68 = ((a64 ^ LODWORD(STACK[0x2A4]) ^ 0x90140AD4)
       - ((2 * (a64 ^ LODWORD(STACK[0x2A4]) ^ 0x90140AD4) - 749078002) & 0x84B76680)
       + 738766919) ^ (v67 - 1852360297);
  int v69 = LODWORD(STACK[0x204]) ^ 0x7ABF6120;
  LODWORD(STACK[0x2D0]) = v69;
  unsigned int v70 = ((v68 - ((2 * v68 - 749078002) & 0x84B76680) + 738766919) ^ 0xC25BB340) + v69;
  unsigned int v71 = (v70 ^ 0x57DDEFFF) - 1474162687 + ((2 * v70) & 0xAFBBDFFE);
  unsigned int v72 = ((v71 & 0xFFFFFFFE) - ((2 * v71) & 0xD9A18860) + 1825621041) ^ 0x2F870CB6;
  LODWORD(STACK[0x2D4]) = v72;
  int v73 = LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x250]);
  LODWORD(STACK[0x2D8]) = v73;
  int v74 = STACK[0x238];
  int v75 = LODWORD(STACK[0x238]) + 1;
  LODWORD(STACK[0x2DC]) = v75;
  uint64_t v76 = LODWORD(STACK[0x28C]);
  uint64_t v77 = v76 ^ 0xA7D2146C;
  LODWORD(STACK[0x2E0]) = v77;
  uint64_t v78 = ((2 * (int)v76) & 0x3340828 ^ 0x3240808) + (v76 & 0x5BB449C ^ 0xB608B37B);
  LODWORD(STACK[0x2E4]) = v78;
  uint64_t v79 = *(void *)(v66 + 448);
  uint64_t v80 = (LODWORD(STACK[0x258]) ^ LODWORD(STACK[0x234]));
  __int16 v81 = ((((((((v65 - 25750) | 0x5261) - 30494) & 0x87A7) - 869) | 0x440) ^ 0x15F7) + 21856) * v72
      - ((2 * ((((((((v65 - 25750) | 0x5261) - 30494) & 0x87A7) - 869) | 0x440) ^ 0x15F7) + 21856) * v72) & 0xB734)
      + 23450;
  LOWORD(v71) = (v81 ^ v73 ^ ((LOWORD(STACK[0x228]) ^ 0x6B68 ^ v81 ^ v73)
                            + v75
                            - ((2 * ((LOWORD(STACK[0x228]) ^ 0x6B68 ^ v81 ^ v73) + v75)) & 0x5A08)
                            + 11524) ^ ((v81 ^ v73 ^ 0x5B2D) - ((2 * (v81 ^ v73 ^ 0x5B2D) + 2) & 0xA196) + 20684) ^ 0xD91D)
              + v74;
  LOWORD(v71) = (v71 ^ 0xFDFE) + ((2 * v71) & 0xFBFC) + 2;
  int v82 = v71;
  LOWORD(v71) = 2 * v71;
  int v83 = dword_23C215080[(v82 + 1828471341 - (v71 & 0x5A)) ^ 0x6CFC4264];
  int v84 = ((v83 ^ v76) & 0xFA44BB63 ^ 0xA204BE88)
      - ((2 * ((v83 ^ v76) & 0xFA44BB63 ^ 0xA204BE88)) & 0x94084E94)
      - 905615542;
  uint64_t v85 = (v84 & 0x8BC923C7 ^ 0x83800241) + (v84 ^ 0x4C4B7DAE) - ((v84 ^ 0x4C4B7DAE) & 0x8BC923C7);
  unsigned int v86 = ((2 * v83) & 0x3768828 ^ 0x1608800) + (v83 & 0x5BB449C ^ 0xD74FB175);
  unsigned int v87 = ((v82 - 95605442 - (v71 & 0x13C) + 96) ^ 0xFA4D2D3E) - 925465726;
  unsigned int v88 = ((2 * v87) & 0xBF45FBFE) + (v87 ^ 0xDFA2FDFF);
  int v89 = 2 * (((v86 + 738200203) & v77) - ((2 * ((v86 + 738200203) & v77)) & 0x1B710160)) - 1687092894;
  int v90 = v86 + v78 + (v89 ^ 0x9C3393BB) + ((2 * v89) & 0xF17ADA4C ^ 0xCF9DFDBB);
  uint64_t v91 = 2 * (((v88 + 542966273) & (v90 + 1898102844)) - ((2 * ((v88 + 542966273) & (v90 + 1898102844))) & 0x59FE72C4))
      - 637635900;
  int v92 = v88 + (v90 | 1) + (v91 ^ 0xCFD240D5) + ((2 * v91) & 0xD3A79BDC ^ 0x6C5B7E77);
  *(_DWORD *)(v79
            + 4
            * ((((((v67 - 101) | 0x40) ^ 0xF7) + 96) * v72
                               - ((2 * ((((v67 - 101) | 0x40) ^ 0xF7) + 96) * v72) & 0x34)
                               - 102) ^ 0x9Au)) = v80 ^ v85 ^ 0xD9797BFC ^ (v92
                                                                          - ((2 * v92 + 1990664280) & 0x417184F6)
                                                                          - 1676914009);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * v67))(v76, v77, v78, v79, v80, v85, 2206204481, v91, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_23C1E4E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  HIDWORD(a38) = v40;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v39 | 0x194)))(1028);
  v41[60] = v42;
  *unsigned int v41 = v41[56];
  v41[1] = 0;
  v41[2] = 0;
  v41[3] = 0;
  v41[5] = 0;
  v41[6] = 0;
  v41[7] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)(((v42 == 0) * (((v39 - 866) ^ 0xFFFFFD69) + ((v39 - 866) | 0x2A0))) | v39)))(v42, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1E4F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v69 = LODWORD(STACK[0x2A0]) ^ a66;
  LODWORD(STACK[0x2F4]) = v69;
  unsigned int v70 = (((2 * v69) ^ 0x17780E08) - ((((2 * v69) ^ 0x17780E08) << (v67 + 97)) & 0x14CFC8B8) + 174580828) & 0xBBF8AC96 ^ 0xBE32E14;
  unsigned int v71 = ((v70 - ((2 * v70) & 0x64C31820) + 912366969) ^ 0x9D92337D) + (v69 ^ 0x817BC2C9);
  int v72 = v71 - ((2 * v71) & 0x24F9BF9C) + 310173646;
  unsigned int v73 = (((2 * v72) ^ 0x24F9BF9C) - ((2 * ((2 * v72) ^ 0x24F9BF9C)) & 0x14CFC8B8) + 174580828) & 0xBBF8AC96 ^ 0xBE32E14;
  unsigned int v74 = ((v73 - ((2 * v73) & 0x64C31820) + 912366969) ^ 0x9D92337D) + (v72 ^ 0x98BB1A03);
  int v75 = ((v74 - ((2 * v74) & 0x24F9BF9C) + 310173646) ^ 0x127CDFCE) + (a64 ^ 0x627508CD);
  unsigned int v76 = ((((v75 ^ 0x3B9B7E8B) - 1000046219 + ((2 * v75) & 0x7736FD16)) & 0xFFFFFFFE) + 2138077441) ^ 0x5286807A;
  LODWORD(STACK[0x2F8]) = v76;
  unsigned int v77 = LODWORD(STACK[0x260]) ^ ((LODWORD(STACK[0x280]) ^ LODWORD(STACK[0x228])) >> 8) ^ 0xE6FA91E2;
  LODWORD(STACK[0x2FC]) = v77;
  unsigned int v78 = (v67 - 5) ^ 0xDBCA4795;
  unsigned int v79 = (v78 + 770135975) * v76 - ((2 * (v78 + 770135975) * v76) & 0xBC869BD8) - 566014484;
  unsigned int v80 = (1806772403 - ((v79 ^ v77) & 0xF3 ^ 0x42 | 0x6BB128B3) + ((v79 ^ v77) & 0xF3 ^ 0x42 | 0x944ED74C)) ^ 0x8C86C75D;
  int v81 = v80 - ((2 * v80) & 0x47AB6FEC) + 601208822;
  unsigned int v82 = (v81 ^ ((v81 ^ 0xC4E25859) - ((2 * (v81 ^ 0xC4E25859) + 290) & 0xDA3E6CB6) - 316721428) ^ ((v81 ^ 0xC4E258C9)
                                                                                                 - ((2 * (v81 ^ 0xC4E258C9) + 2) & 0xBBB1820E)
                                                                                                 + 1574486280) ^ 0x8BDA506A)
      + 144;
  unsigned int v83 = ((v82 ^ 0xFCEEFB25) + 51447003 + ((2 * v82) & 0xF9DDF64A)) | (((((((v79 ^ v77) & 0xC ^ 0xFFFFFFF7) + 709201023) & 0xA00084A)
                                                                      + ((((v79 ^ v77) & 0xC ^ 0xFFFFFFF7) + 709201023) ^ 0xA542C6A)) | 0x91A85300)
                                                                    - (((((v79 ^ v77) & 0xC ^ 0xFFFFFFF7) + 709201023) ^ 0xA542C6A) & 0x20118018)) ^ 0x9BA87B42;
  int v84 = dword_23C216280[(v83 - 1412080218 - ((2 * v83) & 0x57AABB4C)) ^ 0xABD55DBD];
  unsigned int v85 = ((2 * v84) ^ 0xF65A2E4A) - ((2 * ((2 * v84) ^ 0xF65A2E4A)) & 0xFA58DB00) - 47420031;
  unsigned int v86 = (v84 ^ 0xAB29AFA2) + (v85 & 0xA009710E ^ 0x5BF5FECD) + ((2 * v85) & 0x40122218 ^ 0x40100200) + 67264563;
  *(_DWORD *)(*(void *)(v68 + 480)
            + 4 * (((v78 - 89) * v76 - ((2 * (v78 - 89) * v76) & 0xD8) - 20) ^ 0xECu)) = LODWORD(STACK[0x27C]) ^ LODWORD(STACK[0x24C]) ^ LODWORD(STACK[0x2A8]) ^ 0x497E7C90 ^ (((2 * v86) & 0xBD79FFE6) + (v86 ^ 0x5EBCFFF3) - ((2 * (((2 * v86) & 0xBD79FFE6) + (v86 ^ 0x5EBCFFF3)) - 1283633414) & 0xA75C3940) + 762102813);
  return (*(uint64_t (**)(uint64_t))(v66 + 8 * ((v67 - 5) ^ 0x3B)))(770136230);
}

uint64_t sub_23C1E5374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v38 + 8 * ((int)a21 + 725)))(1028);
  v39[63] = v40;
  *int v39 = v39[56];
  v39[1] = 0;
  v39[2] = v39[60];
  v39[3] = 0;
  v39[5] = 0;
  v39[6] = 0;
  v39[7] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)(((((a21 ^ 0x7D8930D5 ^ (v40 == 0)) & 1) == 0) * (a21 - 792)) ^ a21)))(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1E53F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v75 = (v73 + 903753790) & 0xCA21CEF4;
  int v76 = ((LODWORD(STACK[0x2F4]) ^ 0x671956A4)
       - ((2 * (LODWORD(STACK[0x2F4]) ^ 0x671956A4) + 424192918) & 0x24F9BF9C)
       - 14600807) ^ 0x7ED98E6E;
  LODWORD(STACK[0x30C]) = a72 ^ 0xB70E6591;
  unsigned int v77 = ((v76 - (((v75 ^ 0x1948A9C2) + 2 * v76) & 0x24F9BF9C) - 14600807) ^ 0x127CDFCE) + (a72 ^ 0xB70E6591);
  unsigned int v78 = (v77 ^ 0x7FB95FFF) - 2142855167 + ((2 * v77) & 0xFF72BFFE);
  unsigned int v79 = ((v78 & 0xFFFFFFFE) - ((2 * v78) & 0x935862CC) + 1236021607) ^ 0x35670012;
  LODWORD(STACK[0x310]) = v79;
  int v80 = LODWORD(STACK[0x298]) ^ LODWORD(STACK[0x264]);
  LODWORD(STACK[0x314]) = v80;
  int v81 = v80 ^ LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x224]) ^ LODWORD(STACK[0x23C]) ^ LODWORD(STACK[0x230]) ^ LODWORD(STACK[0x25C]) ^ 0x4CD61569;
  int v82 = (-85 * v79 + 124 - ((86 * v79) & 0xF8));
  int v83 = ((v82 ^ 0x666E8337) - (((v75 + 734) ^ 0x80035E) & (2 * (v82 ^ 0x666E8337))) + 13727542) ^ 0x4E2EF0F9;
  int v84 = dword_23C2108B0[LODWORD(STACK[0x22C]) ^ LODWORD(STACK[0x268]) ^ LODWORD(STACK[0x294]) ^ 0xC7333580 ^ (((2 * v83) | 0xF440970C) - v83 - 2048936838)];
  HIDWORD(v85) = v84 ^ 0x9B4F4D7;
  LODWORD(v85) = v84;
  *(_DWORD *)(*(void *)(v74 + 504) + 4 * (v82 ^ 0x7Cu)) = v81 ^ ((v85 >> 29)
                                                                   - ((2 * (v85 >> 29)) & 0xAFB10052)
                                                                   - 673677271);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 8 * (int)(v75 ^ 0x2F)))(1311699193, 4097873676, 2246030458);
}

void sub_23C1E5654()
{
}

uint64_t sub_23C1E5660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v39 ^ 0xC4)))(1032);
  v40[66] = v41;
  *uint64_t v40 = v40[56];
  v40[1] = 0;
  v40[2] = v40[60];
  v40[3] = 0;
  uint64_t v42 = v40[63];
  v40[5] = 0;
  v40[6] = v42;
  v40[7] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (((v41 != 0) * (v39 - 1226)) ^ v39)))(v41, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1E56D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  signed int v34 = (v32 + 1531515525) & 0xA4B6E9F8;
  int v35 = ((LODWORD(STACK[0x2F4]) ^ 0x44DDB1D4)
       - ((2 * (LODWORD(STACK[0x2F4]) ^ 0x44DDB1D4) + 422579194) & 0x24F9BF9C)
       + 1595205067) ^ 0x5D1D691E;
  int v36 = (v35 - ((2 * v35 + 422579194) & 0x24F9BF9C) + 1595205067) ^ 0x5D1D691E;
  int v37 = ((v36 - ((2 * v36 + 422579194) & 0x24F9BF9C) + 1595205067) ^ 0x127CDFCE) + LODWORD(STACK[0x30C]);
  unsigned int v38 = (v37 ^ 0xF2E7FA7F) + 219678081 + ((2 * v37) & 0xE5CFF4FE);
  unsigned int v39 = ((v38 & 0xFFFFFFFE) - ((2 * v38) & 0x42FF4638) - 1585470692) ^ 0xFE6DCF3B;
  LODWORD(STACK[0x324]) = v39;
  int v40 = -92530514 * v39;
  LODWORD(a21) = 42 * (v34 ^ 0x1A5);
  int v41 = a21 + 2020989018;
  uint64_t v42 = (LODWORD(STACK[0x254]) ^ LODWORD(STACK[0x230])) ^ LODWORD(STACK[0x284]);
  unsigned int v43 = ((((87 * v39 - 26 - (v40 & v41)) ^ LODWORD(STACK[0x2FC])) ^ 0xFA)
       + (((-46265257 * v39 + 1010494950 - (v40 & v41)) ^ LODWORD(STACK[0x2FC])) & 0xAE ^ 0xE02CFC04)
       - ((((87 * v39 - 26 - (v40 & v41)) ^ LODWORD(STACK[0x2FC])) ^ 0xFA) & 0xAE)) ^ 0xE13C5088;
  int v44 = dword_23C216890[(((2 * v43) | 0x940C1AB2) - v43 - 1241910617) ^ 0x4B16A17B];
  unsigned int v45 = v44 + 371593849 + ~(2 * ((v44 + 442356670) & 0x7BC83EBB ^ v44 & 1));
  *(_DWORD *)(*(void *)(v33 + 528) + 4 * ((87 * v39 - 26 - (v40 & v41)) ^ 0xE6u)) = v42 ^ v45 ^ 0x3B4CC4D3 ^ (((v45 >> 3) & 0x10EA084E ^ 0x8DB48A3) + ((v45 >> 3) & 0x1001510 ^ 0x1111) + 536870910) & 0x11EA1FFE;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * v34))(148588707, 174, 4369, 536870910, 300556286, v42, 994886867, 230, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

void sub_23C1E5974()
{
}

uint64_t sub_23C1E5980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (int)(a21 ^ 0x684)))(1028);
  v39[68] = v40;
  *unsigned int v39 = v39[56];
  v39[1] = 0;
  uint64_t v41 = v39[66];
  v39[2] = v39[60];
  v39[3] = v41;
  uint64_t v42 = v39[63];
  v39[5] = 0;
  v39[6] = v42;
  v39[7] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)((14 * (((v40 == 0) ^ (2 * (a21 - 124) + 1)) & 1)) ^ a21)))(v40, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_23C1E5A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v68 = ((a65 ^ LODWORD(STACK[0x2AC]) ^ 0xA059269F)
       - ((2 * (a65 ^ LODWORD(STACK[0x2AC]) ^ 0xA059269F) + 381661982) & 0x13E271D0)
       - 984542601) ^ 0xA54BAC20;
  unsigned int v69 = (v68 - ((2 * v68 + 381661982) & 0x13E271D0) - 984542601) ^ 0xA54BAC20;
  int v70 = ((v69 - ((2 * v69 + 381661982) & 0x13E271D0) - 984542601) ^ 0x9F138E8) + LODWORD(STACK[0x30C]);
  unsigned int v71 = (v70 ^ 0xFE670BBF) + 26801217 + ((2 * v70) & 0xFCCE177E);
  unsigned int v72 = ((v71 & 0xFFFFFFFE) - ((2 * v71) & 0xFD96A86C) + 2127254583) ^ 0x2604FC52;
  LODWORD(STACK[0x330]) = v72;
  unsigned int v73 = (((LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x228])) ^ LODWORD(STACK[0x280])) >> 16) ^ 0xDC72607D;
  LODWORD(STACK[0x334]) = v73;
  int v74 = 1255858583 * v72 + 1269240505;
  int v75 = -1783250130 * v72;
  int v76 = dword_23C20FFA0[((((v74 - (v75 & 0x974E2572)) ^ v73) & ((((v66 & 0xD2D48BFB) - 114) | 0x40C) - 909) ^ 0x8008410)
                       - ((2
                         * (((v74 - (v75 & 0x974E2572)) ^ v73) & ((((v66 & 0xD2D48BFB) - 114) | 0x40C) - 909) ^ 0x8008410)) & 0x10806)
                       + 383901443) ^ 0x1EE15B0F];
  int v77 = v76 - 2 * ((v76 + 74449104) & 0x784E235 ^ v76 & 1) + 1408557828;
  int v78 = LODWORD(STACK[0x274]) ^ LODWORD(STACK[0x244]) ^ LODWORD(STACK[0x2A4]) ^ v77 ^ (((4 * v77) ^ 0x1E1388D0)
                                                                                     - ((2 * ((4 * v77) ^ 0x1E1388D0)) & 0x6E7BF5E0)
                                                                                     + 926808817) ^ (((8 * v77) ^ 0x3C2711A0) + 2137461764 + ~(2 * (((8 * v77) ^ 0x3C2711A0) & 0x7F671418 ^ (8 * v77) & 0x18)));
  int v79 = (v78 ^ 0x75C904D6) + 1;
  v78 ^= 0x1B13CA1Eu;
  unsigned int v80 = v78 + (v79 ^ 0x587F4D6E) + ((2 * v79) & 0xB0FE9ADC) - 1484737902;
  unsigned int v81 = ((v80 - ((2 * v80) & 0x2BDF0114) + 368017546) ^ 0xEA107F74) + v78;
  *(_DWORD *)(*(void *)(v67 + 544) + 4 * ((v74 - (v75 & 0x72)) ^ 0xB9u)) = v81
                                                                                              - ((2 * v81) & 0xC8779C86)
                                                                                              + 1681641027;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8 * (int)(v66 & 0xD2D48BFB)))(185, 1557049636);
}

void sub_23C1E5D48()
{
}

uint64_t sub_23C1E5D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  unsigned int v50 = (v47 - 1702454293) & 0xE7F0312F;
  uint64_t v62 = v49[7];
  uint64_t v60 = v49[5];
  uint64_t v61 = v49[6];
  uint64_t v51 = v49[1];
  uint64_t v58 = v49[3];
  uint64_t v59 = *v49;
  unsigned int v52 = *(void (**)(uint64_t))(v48 + 8 * (v47 - 2106142160));
  int v53 = v47;
  v52(v49[2]);
  int v54 = *(void (**)(uint64_t))(v48 + 8 * (v53 ^ 0x7D8935D0));
  v54(v58);
  v54(v51);
  v54(v49[53]);
  v52(v60);
  v54(v59);
  v54(v61);
  uint64_t v55 = ((uint64_t (*)(uint64_t))v52)(v62);
  if (((2 * a47) & 0xFB5BFEBE) - 1275611402 + (a47 ^ 0xE577B1E1 ^ (((v50 + 1291295008) & 0xB30867F1) - 1730524003)) == 832943701) {
    int v56 = 0;
  }
  else {
    int v56 = -45011;
  }
  LODWORD(STACK[0x370]) = v56;
  return (*(uint64_t (**)(uint64_t))(v48
                                            + 8
                                            * (int)((52
                                                   * (((2 * a47) & 0xFB5BFEBE)
                                                    - 1275611402
                                                    + (a47 ^ 0xE577B1E1 ^ (((v50 + 1291295008) & 0xB30867F1) - 1730524003)) == 832943701)) ^ v50)))(v55);
}

void sub_23C1E5EB8(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  LODWORD(STACK[0x374]) = a46 + 2133278039;
  v48[9] = 115231290;
  *(_DWORD *)(v49 - 220) = a46 + 2133278039;
  v48[274] = v48[11];
  LODWORD(STACK[0x45C]) = a1;
  v48[107] = 115231290;
  uint64_t v50 = v48[107];
  v48[108] = v50;
  int v51 = STACK[0x45C];
  LODWORD(STACK[0x470]) = STACK[0x45C];
  LODWORD(STACK[0x474]) = v51 - v47;
  uint64_t v52 = (*(_DWORD *)(v49 - 220) + v50);
  uint64_t v53 = v52 < v51 - v47 - 2027637300;
  v52 -= 536806538;
  v48[111] = v52;
  v48[86] = v48[274] + v52 + (v53 << 32);
  v48[84] = *(void *)(v46 + 8 * (v51 + 774));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E5F48()
{
  (*(void (**)(void))(v1 + 8 * (v2 + v0 + 1007)))(*(void *)(v3 + 88));
  JUMPOUT(0x23C1E5F70);
}

uint64_t sub_23C1E6004()
{
  unsigned int v1 = ((LODWORD(STACK[0x3E4]) ^ 0xBE426C14)
      - (STACK[0x3D8] & 0xC592961D ^ 0x40821018)
      + ((2 * (STACK[0x3D8] & 0xC592961D ^ 0x40821018)) & 0x83212438)) ^ 0x9A806B45;
  int v2 = ((2 * v1) & 0x1973D884) - v1 + 1933972413;
  int v3 = STACK[0x3D4];
  char v4 = v3 - ((2 * v3 - 106) & 0x94) - 107;
  char v5 = LOBYTE(STACK[0x3B7]) ^ (-113 * (v4 ^ 0x4A) - ((32 * v4 - 2 * (v4 ^ 0x4A)) & 0x3C) + 30);
  char v6 = (v5 ^ 0xB0) - ((2 * v5) & 4) + 2;
  unsigned int v7 = ((STACK[0x3D8] & 0xA080182 ^ 0x292949A)
      + (STACK[0x3D8] & 0x3A6D69E2 ^ 0x182C2920)
      - ((STACK[0x3D8] & 0x3A6D69E2 ^ 0x182C2920) & 0xA080182)) ^ 0x7C7CFF72 ^ ((v6 & 0xA0 ^ 0xC870289)
                                                                              + (v6 & 0x42 ^ 0x40080841)
                                                                              - 2) | v2 ^ 0x2F0EA22A ^ ((v6 & 1 | 0xFC0CBBFC) - (v6 & 0x1D | 0xD80C0A40) + (v6 & 1 | 0x58080000));
  unsigned int v8 = ((2 * v7) & 0x67CFFFA6)
     + (v7 ^ 0x33E7FFD3)
     - ((2 * (((2 * v7) & 0x67CFFFA6) + (v7 ^ 0x33E7FFD3)) + 99360852) & 0xCC8ABE2E)
     + 1765502785;
  LODWORD(STACK[0x3EC]) = v8;
  ++v3;
  int v9 = STACK[0x3E0];
  unsigned int v10 = *(uint64_t (**)(void))(v0
                            + 8
                            * (LODWORD(STACK[0x3E0]) ^ (8
                                                      * ((STACK[0x3DC] & 1) + 1522806415 - 2 * (STACK[0x3DC] & 1) != 1522806415))));
  LODWORD(STACK[0x3F0]) = v3;
  LODWORD(STACK[0x3C4]) = v9;
  LODWORD(STACK[0x3C8]) = STACK[0x3E8];
  LODWORD(STACK[0x3CC]) = v8;
  LODWORD(STACK[0x3D0]) = v3;
  return v10();
}

#error "23C1E65FC: call analysis failed (funcsize=186)"

void sub_23C1E6600()
{
}

uint64_t sub_23C1E6608@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v29 = (a18 - 1304883853) & 0x4DC6F0C9;
  LODWORD(STACK[0x208]) = a1;
  LODWORD(STACK[0x20C]) = a2;
  LODWORD(STACK[0x210]) = v26;
  LODWORD(STACK[0x214]) = a5;
  uint64_t v30 = v29 ^ 0x265u;
  BOOL v31 = ((((v26 ^ 0xDF) & 1) - v29) | (v29 - ((v26 ^ 0xDF) & 1))) >= 0;
  int v32 = *(uint64_t (**)(uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((2 * v31) | (8 * v31) | v30));
  return v32(v30, *(void *)(v28 + 160), v32, (v29 + 176) & (2 * **(unsigned __int8 **)(v28 + 160)), 3431644718, 1117148895, a3, a4, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_23C1E6770()
{
  char v4 = STACK[0x3B7];
  int v5 = STACK[0x434];
  unsigned int v6 = LODWORD(STACK[0x440]) ^ 0xA92F0BF3 ^ STACK[0x434] & 0xFFFFFFFC;
  LODWORD(STACK[0x488]) = v6;
  int v7 = v6 + 2044075655 + ((2 * (v6 & 0x79D61E8C ^ (v5 | 0x7FFFFFF7))) ^ 0x17) + 1;
  LODWORD(STACK[0x48C]) = v7;
  unsigned __int8 v8 = (-113 * (LOBYTE(STACK[0x458]) ^ 0xDE) - ((30 * (LOBYTE(STACK[0x458]) ^ 0xDE)) & 0xA4) + 82) ^ v4;
  int v9 = byte_23C212BE0[v8 ^ 0xE3];
  HIDWORD(v10) = v9 ^ 0x1E;
  LODWORD(v10) = (v9 ^ 0x80) << 24;
  HIDWORD(v10) = (v10 >> 30) + (~(2 * (v10 >> 30)) | 0x27) - 19;
  LODWORD(v10) = (HIDWORD(v10) ^ 0xFFFFFFEF) << 24;
  LOBYTE(STACK[0x490]) = v8;
  LOBYTE(STACK[0x491]) = (v10 >> 26) - ((2 * (v10 >> 26)) & 4) - 126;
  LOBYTE(STACK[0x492]) = (v8 ^ 0x96) - 2 * ((((v8 ^ 0x96) & 0xFD) + 120) ^ v8 & 1) + 116;
  v1[86] = v1[178] + (v7 ^ 0x79D61E87u);
  v1[84] = *(void *)(v0 + 8 * (v2 ^ (v3 - 50)));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E689C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  char v27 = STACK[0x3B7];
  char v28 = byte_23C2114D0[(LOBYTE(STACK[0x493]) ^ LOBYTE(STACK[0x49F])) ^ 0x89];
  char v29 = -113 * (LOBYTE(STACK[0x498]) ^ 0xE7) - ((30 * (LOBYTE(STACK[0x498]) ^ 0xE7)) & 0xA0) - 48;
  int v30 = STACK[0x434];
  unsigned int v31 = STACK[0x434] & 0xFFFFFFF6 ^ 0xD4A6380F;
  LODWORD(STACK[0x4A4]) = v31;
  LODWORD(STACK[0x4A8]) = v31 - 1330931534 - ((2 * v31) & 0x61573164);
  LOBYTE(STACK[0x4AF]) = -109 * v28 - ((a23 + 38 * v28) & 0x6A) + 114;
  unsigned __int8 v32 = v27 ^ 0x26 ^ v29;
  unsigned int v33 = (v30 & 0xFFFFFFFD ^ 0xD4A63806) + 1040776868 - 2 * ((v30 & 0xFFFFFFFD ^ 0xD4A63806) & 0x3E08FEB5 ^ v30 & 0x11);
  LODWORD(STACK[0x4B0]) = v33;
  char v34 = byte_23C2114D0[v32];
  LOBYTE(STACK[0x4B5]) = v34;
  LOBYTE(STACK[0x4B6]) = -109 * v34 - ((38 * v34 + 58) & 0x30) - 43;
  LOBYTE(STACK[0x4B7]) = -16 * ((3 * v28) & 3) - 104 * v28 - 7;
  uint64_t v35 = v25[180] + (v33 ^ 0x3E08FEA4);
  v25[118] = v35;
  v25[86] = v35;
  v25[84] = *(void *)(v23 + 8 * (v24 + v26 + 862));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E69F8()
{
  LOBYTE(STACK[0x4F5]) = STACK[0x3B7];
  LOBYTE(STACK[0x4F6]) = -113 * (LOBYTE(STACK[0x4B0]) ^ 0xA4) - ((30 * (LOBYTE(STACK[0x4B0]) ^ 0xA4)) & 0x88) + 68;
  LOBYTE(STACK[0x4F7]) = -104 * LOBYTE(STACK[0x4B5]) - ((48 * LOBYTE(STACK[0x4B5]) + 64) & 0x70) - 99;
  v2[86] = v2[181] + (LODWORD(STACK[0x4A8]) ^ 0xB0AB98B2);
  v2[84] = *(void *)(v0 + 8 * (v1 + v3 + 865));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E6A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  LOBYTE(STACK[0x5A7]) = STACK[0x3B7];
  int v28 = LOBYTE(STACK[0x59B]);
  int v29 = (v28 ^ 0x93) - ((2 * (v28 ^ 0x93)) & 0xA8) + 1864846164;
  unsigned int v30 = ((2 * (v28 ^ 0xA1)) & 0x1DA) + (v28 ^ 0xFDFF375C);
  unsigned int v31 = ((v29 ^ 0x90D8B4AB) - ((2 * (v29 ^ 0x90D8B4AB) + 2) & 0xD4E3C8BC) + 1785848927) ^ v29 ^ (505643065
                                                                                               - v30
                                                                                               - ((2080272414 - 2 * v30) & 0x40489054));
  LODWORD(STACK[0x5A8]) = v31;
  unsigned int v32 = STACK[0x434] & 0xFFFFFFFA ^ (v24 + 1);
  LODWORD(STACK[0x5AC]) = v32;
  unsigned int v33 = v32 - 143523488 - ((2 * v32) & 0xEEE402C0);
  LODWORD(STACK[0x5B0]) = v33;
  LOBYTE(v31) = byte_23C2114D0[(v31 ^ 0x2572E720) + 34];
  LOBYTE(STACK[0x5B4]) = -113 * (LOBYTE(STACK[0x5A0]) ^ 0xB3) - ((30 * (LOBYTE(STACK[0x5A0]) ^ 0xB3)) & 0x24) + 18;
  LOBYTE(STACK[0x5B5]) = -109 * v31 - ((a23 + 38 * v31) & 0xDA) - 86;
  LOBYTE(STACK[0x5B6]) = -16 * (v31 & 1) - 104 * v31 + 111;
  v25[86] = v25[190] + (v33 ^ 0xF7720160);
  v25[84] = *(void *)(v23 + 8 * (v26 ^ (v27 - 219)));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E6C0C()
{
  char v5 = ((~(30 * (LOBYTE(STACK[0x5B0]) ^ 0x60)) | 0x93) - 113 * (LOBYTE(STACK[0x5B0]) ^ 0x60) + 55) ^ LOBYTE(STACK[0x3B7]);
  LOBYTE(STACK[0x5B7]) = v5;
  int v6 = byte_23C216080[(LOBYTE(STACK[0x5A7]) ^ LOBYTE(STACK[0x5B4])) ^ 0x54] ^ 0x11;
  unsigned int v7 = (((v6 - ((2 * v6) & 0x16C)) << 8) - 2045397504) ^ 0x8615B600;
  LODWORD(STACK[0x5B8]) = v7 - 1285232166 - ((2 * v7) & 0x66C9D200);
  char v8 = ((2 * v5) & 0xBA ^ 0x90) + (v5 ^ 0x35);
  int v9 = LOBYTE(STACK[0x5B5]) ^ LOBYTE(STACK[0x5B6]) ^ 0x62;
  unsigned int v10 = (v9 - 1830997336 - ((2 * v9) & 0x150)) ^ 0x92DD32A8 | LODWORD(STACK[0x590]) ^ 0x44FE8AE1;
  LODWORD(STACK[0x5BC]) = v10 - ((2 * v10) & 0xB66C897C) + 1530283198;
  if (((v8 + 3) & 8) != 0) {
    char v11 = -8;
  }
  else {
    char v11 = 8;
  }
  char v12 = ((v8 + v11 + 35 - ((2 * (v8 + v11 + 35)) & 0xCC) - 26) ^ 0xCD) + 1;
  char v13 = (v12 ^ 0x7D) + v8 + ((2 * v12) & 0xFB);
  LOBYTE(STACK[0x5C3]) = v13 + (~(2 * v13 + 76) | 0x8B) + 97;
  uint64_t v14 = LODWORD(STACK[0x434]) ^ v1;
  LODWORD(STACK[0x5C4]) = v14;
  uint64_t v15 = v3[191] + v14;
  v3[152] = v15;
  v3[86] = v15;
  v3[84] = *(void *)(v0 + 8 * (v2 + v4 + 860));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E6DBC()
{
  LOBYTE(STACK[0x493]) = STACK[0x3B7];
  unsigned int v4 = STACK[0x434] & 0xFFFFFFF0 ^ (v1 + 9);
  LODWORD(STACK[0x494]) = v4;
  int v5 = v4 + 839850471 - ((2 * v4) & 0x641E33CE);
  LODWORD(STACK[0x498]) = v5;
  LOBYTE(STACK[0x49F]) = -113 * (LOBYTE(STACK[0x48C]) ^ 0x87) - ((30 * (LOBYTE(STACK[0x48C]) ^ 0x87)) & 0x77) - 69;
  int v6 = LOBYTE(STACK[0x492]) ^ LOBYTE(STACK[0x491]) ^ LOBYTE(STACK[0x490]);
  unsigned int v7 = (((v6 - ((2 * v6) & 0x42)) << 24) - 1593835520) ^ 0xA1000000;
  LODWORD(STACK[0x4A0]) = v7 + 62625494 - ((2 * v7) & 0x6000000);
  v3[86] = v3[179] + (v5 ^ 0x320F19E7u);
  v3[84] = *(void *)(v0 + 8 * (v2 ^ 0x7C7));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E73D8()
{
  int v5 = LOBYTE(STACK[0x3B7]);
  int v6 = 143 * LODWORD(STACK[0x534]) - ((30 * LODWORD(STACK[0x534])) & 0x56) + 299;
  LODWORD(STACK[0x538]) = (LODWORD(STACK[0x50C]) ^ 0xA2DAAC98 | LODWORD(STACK[0x520]) ^ 0xD9467BFF)
                        + 1152031433
                        - 2
                        * ((LODWORD(STACK[0x50C]) ^ 0xA2DAAC98 | LODWORD(STACK[0x520]) ^ 0xD9467BFF) & 0x44AA9ADD ^ (LODWORD(STACK[0x50C]) ^ 0xA2DAAC98) & 0x14);
  LODWORD(STACK[0x53C]) = (LODWORD(STACK[0x52C]) ^ 0x7563BC27 | LODWORD(STACK[0x524]) ^ 0xC80000)
                        - 2085959261
                        - 2
                        * ((LODWORD(STACK[0x52C]) ^ 0x7563BC27 | LODWORD(STACK[0x524]) ^ 0xC80000) & 0x3AAC9A7 ^ (LODWORD(STACK[0x52C]) ^ 0x7563BC27) & 4);
  unsigned int v7 = (v5 ^ 0xFFFFFFCD) & 0x29 ^ ((v5 ^ 0xFFFFFFCD) & 0x2D | 0xFFFFFFC2) ^ 0xFFFFFFCF;
  int v8 = byte_23C216080[(LOBYTE(STACK[0x52B]) ^ LOBYTE(STACK[0x533])) ^ 0xB7];
  int v9 = (((2 * v7) & 0x55555555) - v7 + 87) ^ 0x5E;
  int v10 = (v9 + 919741047 - ((2 * v9) & 0xEE)) ^ 0x36D22277 | ((v6 & 0xFA ^ 0x44140AB)
                                                                            + (v6 & 0xF2 ^ 0x6A8A2E50)
                                                                            - ((v6 & 0xFA ^ 0x44140AB) & 0x44040F3)) ^ 0x6A8B2E72;
  int v11 = ((v5 & 0xFA ^ 0xF1) - (v5 | 0xFE) - 2) ^ 0xF1;
  unsigned int v12 = STACK[0x434] & 0xFFFFFFF3 ^ (v1 + 8);
  LODWORD(STACK[0x540]) = v12;
  unsigned int v13 = v12 - 1369742103 + ((2 * v12) & 0x5CB6C9C2 ^ 0xFFFFFFEF) + 1;
  LODWORD(STACK[0x544]) = v13;
  int v14 = ((((v8 ^ 0xD3) - ((2 * (v8 ^ 0xD3)) & 0xB4)) << 8) + 1330600448) ^ 0x4F4F5A00;
  LODWORD(STACK[0x548]) = v14 - 385984298 - ((2 * v14) & 0x51FCB000);
  LOBYTE(STACK[0x54F]) = byte_23C216080[(v11 - ((2 * v11) & 0x3C) - 1242712034) ^ 0x7099F9 ^ (v10 - ((2 * v10) & 0x6B3A43AC) - 1247993386)];
  v2[86] = v2[185] + (v13 ^ 0xAE5B64E9);
  v2[84] = *(void *)(v0 + 8 * (v3 ^ (v4 - 68)));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E7664()
{
  char v5 = STACK[0x3B7];
  unsigned int v6 = LODWORD(STACK[0x53C]) ^ 0x83AAC9A3 | LODWORD(STACK[0x538]) ^ 0x44AA9AC9;
  LODWORD(STACK[0x550]) = v6 - 69660396 - ((2 * v6) & 0x77B22228);
  unsigned int v7 = LODWORD(STACK[0x508]) ^ 0xA0DF9EA | LODWORD(STACK[0x548]) ^ 0xE8FE58D6;
  LODWORD(STACK[0x554]) = v7 + 834706434 - ((2 * v7) & 0x63813804);
  LOBYTE(STACK[0x55B]) = (-113 * (LOBYTE(STACK[0x544]) ^ 0xE9) - ((30 * (LOBYTE(STACK[0x544]) ^ 0xE9)) & 0x87) - 61) ^ v5;
  unsigned int v8 = STACK[0x434] & 0xFFFFFFF7 ^ (v1 + 8);
  LODWORD(STACK[0x55C]) = v8;
  uint64_t v9 = (v8 + 1427079839 - ((2 * v8) & 0xAA1F053E)) ^ 0x550F829F;
  LODWORD(STACK[0x560]) = v9;
  v2[86] = v2[186] + v9;
  v2[84] = *(void *)(v0 + 8 * (v3 ^ (v4 - 72)));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E7770()
{
  int v5 = LOBYTE(STACK[0x3B7]);
  int v6 = ((((LOBYTE(STACK[0x54F]) ^ 0x2B) - ((2 * (LOBYTE(STACK[0x54F]) ^ 0x2B)) & 0x32)) << 8) + 2063931648) ^ 0x7B051900;
  unsigned int v7 = (v6 - 1325700873 - ((2 * v6) & 0x61F6D000)) ^ 0xB0FB68F7 | LODWORD(STACK[0x4A0]) ^ 0x3BB96D6;
  LODWORD(STACK[0x564]) = v7 + 73784621 - ((2 * v7) & 0x8CBBA5A);
  unsigned int v8 = (((v5 - ((2 * v5) & 0x13A)) << 22) - 1488977920) ^ 0xA7400000;
  unsigned int v9 = v8 - ((2 * v8) & 0xEB000000) + 1971718334;
  int v10 = (599785472 * LODWORD(STACK[0x560]) - ((-8388608 * LODWORD(STACK[0x560])) & 0x6800000) + 594780881) & 0x3E000000 ^ 0xA000000;
  unsigned int v11 = (v10 - ((2 * v10) & 0xF7FFFFFF) - 1173695364) ^ 0xB208D475;
  int v12 = ((2 * v11) | 0x615732AC) - v11 - 816552278;
  int v13 = byte_23C212BE0[LOBYTE(STACK[0x55B]) ^ 0x34] ^ LOBYTE(STACK[0x55B]) ^ ((LOBYTE(STACK[0x55B]) ^ 0x41)
                                                                              - 2
                                                                              * (((LOBYTE(STACK[0x55B]) ^ 0x41) + 56) & 0x27 ^ STACK[0x55B] & 2)
                                                                              - 99);
  int v14 = (((v13 ^ 0xA) - ((2 * v13) & 0xC0)) << 24) - 0x20000000;
  unsigned int v15 = v9 ^ 0xB17E053B;
  unsigned int v16 = (v9 ^ 0x5E28639A ^ v12)
      + (v9 ^ 0xB17E053B)
      - ((2 * ((v9 ^ 0x5E28639A ^ v12) + (v9 ^ 0xB17E053B))) & 0x83D52D9C)
      + 1105893070;
  unsigned int v17 = STACK[0x434] & 0xFFFFFFF8 ^ (v1 + 1);
  LODWORD(STACK[0x568]) = v17;
  int v18 = v17 - 2016616504 - ((2 * v17) & 0xF99BF90);
  LODWORD(STACK[0x56C]) = v18;
  int v19 = LOBYTE(STACK[0x4B6]) ^ LOBYTE(STACK[0x4F7]) ^ 0xA5;
  unsigned int v20 = ((v14 ^ 0xE0000000) + 336537335 - ((2 * v14) & 0x28000000)) ^ 0x140F26F7 | (v19 + 2084466284 - ((2 * v19) & 0xD8)) ^ 0x7C3E6E6C;
  LODWORD(STACK[0x570]) = v20 - 648051234 - ((2 * v20) & 0xB2BF0BBC);
  unsigned int v21 = (v12 ^ v16 ^ ((v12 ^ 0xEF5666A0) - ((2 * (v12 ^ 0xEF5666A0) + 2) & 0xCE9CC9DA) + 1733190894) ^ 0x360D6B7C) + v15;
  int v22 = ((2 * v21) & 0x7BDDD9F8) + (v21 ^ 0x3DEEECFC);
  HIDWORD(v23) = v22 + 1118980;
  LODWORD(v23) = v22 - 1039068412;
  int v24 = (v23 >> 22) - ((2 * (v23 >> 22)) & 0xCC436F3E) - 433997921;
  unsigned int v25 = (((v24 ^ 0x617A08C) + 32) ^ 0xFF26FD5F)
      + ((2 * ((v24 ^ 0x617A08C) + 32)) & 0xFE4DFABE)
      - ((((2 * ((2 * v24) ^ 0x3E)) & 8) - ((2 * v24) ^ 0x3E) + 59) & 0x40)
      + 14221985;
  int v26 = v25 + 1459230 - ((2 * v25) & 0x2C883C);
  LODWORD(STACK[0x574]) = v26;
  LODWORD(STACK[0x578]) = (v26 ^ 0x16441E) - ((2 * (v26 ^ 0x16441E) + 48) & 0x2E) + 143;
  v2[86] = v2[187] + (v18 ^ 0x87CCDFC8);
  v2[84] = *(void *)(v0 + 8 * (v3 ^ (v4 - 75)));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E7B2C()
{
  LOBYTE(STACK[0x57F]) = ((~(30 * (LOBYTE(STACK[0x56C]) ^ 0xC8)) | 0x73) - 113 * (LOBYTE(STACK[0x56C]) ^ 0xC8) + 71) ^ LOBYTE(STACK[0x3B7]);
  int v4 = STACK[0x574];
  int v5 = byte_23C212BE0[LODWORD(STACK[0x574]) ^ 0x16446B];
  unsigned int v6 = (STACK[0x434] & 0xFFFFFFF4 ^ (v1 + 9)) - 1395367156 - ((2 * (STACK[0x434] & 0xFFFFFFF4 ^ (v1 + 9))) & 0x59A8C628);
  LODWORD(STACK[0x580]) = v6;
  LODWORD(STACK[0x584]) = v4 ^ LODWORD(STACK[0x578]) ^ ((v5 ^ 0x9E) - ((2 * (v5 ^ 0x9E)) & 0x8A) + 69);
  uint64_t v7 = v3[188] + (v6 ^ 0xACD4631C);
  v3[144] = v7;
  v3[86] = v7;
  v3[84] = *(void *)(v0 + 8 * (v2 ^ 0x7C0));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E7BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  char v28 = STACK[0x3B7];
  int v29 = byte_23C2114D0[LOBYTE(STACK[0x57F])];
  unsigned int v30 = (((LODWORD(STACK[0x584]) << 24) ^ 0x4C000000)
       + 1187453116
       - ((2 * ((LODWORD(STACK[0x584]) << 24) ^ 0x4C000000)) & 0x8C000000)) ^ 0x46C718BC | LODWORD(STACK[0x554]) ^ 0x31C09C02;
  LODWORD(STACK[0x590]) = v30 + 1157532385 - ((2 * v30) & 0x89FD15C2);
  int v31 = (-104 * v29 - ((48 * v29) & 0x20) + 113) ^ (-109 * v29 - ((a23 + 38 * v29) & 0x64) + 111) ^ 0x23;
  int v32 = (v31 + 1999773662 - ((2 * v31) & 0x1BC)) ^ 0x77321FDE | LODWORD(STACK[0x564]) ^ 0x465DD2D;
  LODWORD(STACK[0x594]) = v32 - 920054163 - ((2 * v32) & 0x92522CDA);
  LOBYTE(STACK[0x59B]) = (-113 * (LOBYTE(STACK[0x580]) ^ 0x1C) - ((30 * (LOBYTE(STACK[0x580]) ^ 0x1C)) & 0x9A) + 77) ^ v28;
  unsigned int v33 = STACK[0x434] & 0xFFFFFFF1 ^ (v24 + 8);
  LODWORD(STACK[0x59C]) = v33;
  int v34 = v33 + 559742127 - ((2 * v33) & 0x42B9F962);
  LODWORD(STACK[0x5A0]) = v34;
  v26[86] = v26[189] + (v34 ^ 0x215CFCB3u);
  v26[84] = *(void *)(v23 + 8 * (v25 + v27 + 844));
  JUMPOUT(0x23C1E6720);
}

void sub_23C1E7D8C()
{
  int v3 = LOBYTE(STACK[0x3B7]);
  int v4 = byte_23C216180[LOBYTE(STACK[0x5B7]) ^ 0x37];
  unsigned int v5 = LODWORD(STACK[0x570]) ^ 0xD95F85DE | LODWORD(STACK[0x5B8]) ^ 0xB364E9DA;
  LODWORD(STACK[0x5D4]) = v5 - 334006456 - ((2 * v5) & 0xD82EEE90);
  LOBYTE(v5) = -113 * LODWORD(STACK[0x5C4]) - ((30 * LOBYTE(STACK[0x5C4])) & 0xF4) + 122;
  unsigned int v6 = (v1 + (((v4 ^ LOBYTE(STACK[0x5C3]) ^ 0x57) - ((2 * (v4 ^ LOBYTE(STACK[0x5C3]) ^ 0x57)) & 0xB8)) << 16) - 965148672) ^ 0xC65C0000;
  unsigned int v7 = (v6 - 576779061 - ((2 * v6) & 0x3B3E0000)) ^ 0xDD9F0CCB | LODWORD(STACK[0x594]) ^ 0xC929166D;
  LODWORD(STACK[0x5D8]) = v7 - ((2 * v7) & 0x7FA477E6) - 1076741133;
  unsigned int v8 = (STACK[0x434] & 0xFFFFFFF2 ^ (v0 + 9))
     + 246304235
     + ((2 * (STACK[0x434] & 0xFFFFFFF2 ^ (v0 + 9))) & 0x1D5C9BC4 ^ 0xFFFFFFED)
     + 1;
  LODWORD(STACK[0x5DC]) = v8;
  int v9 = ((v5 & 0xF0 ^ 0x50) - ((2 * (v5 & 0xF0 ^ 0x50)) & 0x180) + 585989326) ^ 0x22287CEB;
  unsigned int v10 = (-1643781205 - (v9 | 0x9E05E3AB) + (v9 | 0x61FA1C54)) ^ (v3 - ((2 * v3) & 0x1D0) + 396381672);
  LODWORD(STACK[0x5E0]) = v10;
  LODWORD(STACK[0x5E4]) = v10 ^ 0x769F517C;
  uint64_t v11 = v2[192] + (v8 ^ 0xEAE4DEB);
  v2[156] = v11;
  v2[86] = v11;
  JUMPOUT(0x23C1E7F6CLL);
}

void sub_23C1E7F78()
{
  uint64_t v1 = v0[99];
  uint64_t v2 = v0[271] + v1;
  unsigned int v3 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + ((LODWORD(STACK[0x418]) - 1121422934) & dword_268B99318)) ^ LODWORD(STACK[0x428])) & 0x7FFFFFFF);
  LOBYTE(STACK[0x38B]) = byte_23C20CB30[v1 & 0xF | (16 * ((1394700225 * (v3 ^ HIWORD(v3))) >> 24))] ^ LOBYTE(STACK[0x3B7]) ^ (-63 * (v3 ^ BYTE2(v3)));
  v0[79] = v2;
  JUMPOUT(0x23C1DD7E8);
}

void sub_23C1E8004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = *(void *)(v11 + 864) + a11;
  unsigned int v13 = 1394700225
      * (((v12 - 115231290) ^ *(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8))) & 0x7FFFFFFF);
  LOBYTE(STACK[0x38B]) = byte_23C213970[((1394700225 * (v13 ^ HIWORD(v13))) >> 24) & 0xFFFFF0FF | ((STACK[0x480] & 0xF) << 8)] ^ LOBYTE(STACK[0x3B7]) ^ (-63 * (v13 ^ BYTE2(v13)));
  *(void *)(v11 + 632) = v12 - 0x494B3BC843D3449BLL;
  JUMPOUT(0x23C1DCA54);
}

void sub_23C1E80AC()
{
  uint64_t v1 = v0[268] + v0[123];
  uint64_t v2 = v1 - 0x224E663FBDAD3D36;
  unsigned int v3 = 1394700225
     * ((*(_DWORD *)(qword_268B99310 + (int)(dword_268B99318 & 0xCF2A14D8)) ^ LODWORD(STACK[0x4E8])) & 0x7FFFFFFF);
  unint64_t v4 = 1394700225 * (v3 ^ HIWORD(v3));
  LODWORD(v1) = 1394700225 * ((*(_DWORD *)(qword_268B99310 + (dword_268B99318 & 0x5602C068)) ^ v1) & 0x7FFFFFFF);
  unint64_t v5 = 1394700225 * (v1 ^ WORD1(v1));
  LOBYTE(STACK[0x38B]) = byte_23C2172F0[v4 >> 24] ^ LOBYTE(STACK[0x3B7]) ^ byte_23C20F990[v4 >> 24] ^ byte_23C2112C0[(v4 >> 24) + 1] ^ byte_23C214B70[v5 >> 24] ^ byte_23C20FE90[v5 >> 24] ^ v4 ^ byte_23C2110B0[(v5 >> 24) + 3] ^ (121 * BYTE3(v4)) ^ v5 ^ (-59 * BYTE3(v5));
  v0[79] = v2;
  JUMPOUT(0x23C1DCA54);
}

void sub_23C1E81DC()
{
  unsigned __int8 v2 = (-113 * (LOBYTE(STACK[0x5DC]) ^ 0xEB) - ((30 * (LOBYTE(STACK[0x5DC]) ^ 0xEB)) & 0x34) + 26) ^ LOBYTE(STACK[0x3B7]);
  int v3 = LOBYTE(STACK[0x5E0]);
  unsigned int v4 = ((2 * v3) & 0xFFFFFFBF ^ 0x12) + (v3 ^ 0xFFFFFFD6);
  char v5 = (v2 ^ 0xF4) + 2 * ((v2 ^ 0xD7) + 1) + (((v2 ^ 0xD7) + 1) ^ 0x7F) - 127;
  int v6 = byte_23C212BE0[LODWORD(STACK[0x5E4])] ^ v3 ^ 0xBF ^ (v4 - ((2 * v4 + 50) & 0xC2) + 122);
  int v7 = byte_23C216180[v2 ^ 0x2BLL] ^ 0xD5 ^ (v5 - ((2 * v5) & 0xBB) - 35);
  unsigned int v8 = (v0 + ((v7 - ((2 * v7) & 0xC4)) << 16) - 612433920) ^ 0xDB620000;
  unsigned int v9 = (v8 - 195278238 - ((2 * v8) & 0x68B80000)) ^ 0xF45C4A62 | LODWORD(STACK[0x5D4]) ^ 0xEC177748;
  unsigned int v10 = (((((v6 - ((2 * v6) & 4)) << 24) - 2113929216) ^ 0x82000000) - 2133381770) ^ 0x80D72D76 | LODWORD(STACK[0x550]) ^ 0xFBD91114;
  int v11 = v10 - ((2 * v10) & 0x7AB44612) + 1029317385;
  unsigned int v12 = LODWORD(STACK[0x710]) ^ LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x714]) ^ LODWORD(STACK[0x718]) ^ (v9 - ((2 * v9) & 0x35BDA00A) - 1696673787);
  unsigned int v13 = LODWORD(STACK[0x5BC]) ^ LODWORD(STACK[0x448]) ^ LODWORD(STACK[0x71C]) ^ LODWORD(STACK[0x720]) ^ LODWORD(STACK[0x724]);
  unsigned int v14 = LODWORD(STACK[0x734]) ^ LODWORD(STACK[0x444]) ^ LODWORD(STACK[0x738]) ^ LODWORD(STACK[0x73C]) ^ v11;
  unsigned int v15 = LODWORD(STACK[0x5D8]) ^ LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x728]) ^ LODWORD(STACK[0x72C]) ^ LODWORD(STACK[0x730]);
  int v16 = *(_DWORD *)(v1[203] + 4 * (BYTE1(v14) ^ 0xC2u));
  int v17 = *(_DWORD *)(v1[205] + 4 * (BYTE2(v15) ^ 0xE4u));
  uint64_t v18 = v1[206];
  int v19 = *(_DWORD *)(v1[200] + 4 * BYTE1(v13)) ^ *(_DWORD *)(v1[199] + 4 * (HIBYTE(v14) ^ 0x8A)) ^ *(_DWORD *)(v1[202] + 4 * (v12 ^ 0xEAu));
  unsigned int v20 = v17 ^ 0xB0CC4200;
  unsigned int v21 = (v19 ^ v17 ^ 0x33A7B9C9) + (v17 ^ 0xB0CC4200) + 1;
  int v22 = *(_DWORD *)(v1[204] + 4 * (BYTE1(v12) ^ 0x78u)) ^ *(_DWORD *)(v1[201] + 4 * (BYTE2(v13) ^ 0xFEu)) ^ *(_DWORD *)(v18 + 4 * (HIBYTE(v15) ^ 0x35)) ^ *(_DWORD *)(v1[207] + 4 * ((LOBYTE(STACK[0x734]) ^ LOBYTE(STACK[0x444]) ^ LOBYTE(STACK[0x738]) ^ LOBYTE(STACK[0x73C]) ^ v11) ^ 0x74u));
  int v23 = *(_DWORD *)(v1[209] + 4 * (BYTE1(v15) ^ 0x88u)) ^ *(_DWORD *)(v1[210] + 4 * (BYTE2(v14) ^ 0x45u)) ^ *(_DWORD *)(v1[208] + 4 * (HIBYTE(v12) ^ 0x97));
  unsigned int v24 = (v19 ^ ((v19 ^ 0x836BFBC9) - ((2 * (v19 ^ 0x836BFBC9) + 2) & 0xB5B9B876) - 623059908) ^ (v21
                                                                                               - ((2 * v21) & 0xDA87E704)
                                                                                               - 314313854) ^ 0x4B0B2B8F)
      + v20;
  unsigned int v25 = v24 - ((2 * v24) & 0xA0DE5B0C) + 1349463430;
  v274[0] = ~(2 * v23) + v23;
  int v26 = *(_DWORD *)(v18 + 4 * (HIBYTE(v13) ^ 0x79)) ^ v16 ^ *(_DWORD *)(v1[212] + 4 * (BYTE2(v12) ^ 0xD9u));
  unsigned int v27 = v26 ^ *(_DWORD *)(v1[211]
                        + 4
                        * ((LOBYTE(STACK[0x5D8]) ^ LOBYTE(STACK[0x44C]) ^ LOBYTE(STACK[0x728]) ^ LOBYTE(STACK[0x72C]) ^ LOBYTE(STACK[0x730])) ^ 0x70u));
  LOBYTE(v26) = ((2 * (((v26 & 0x18 ^ 0x11) + 67) ^ 0xC4)) | 0x66) - (((v26 & 0x18 ^ 0x11) + 67) ^ 0xC4) - 51;
  unsigned int v28 = *(_DWORD *)(v1[213]
                  + 4
                  * ((LOBYTE(STACK[0x5BC]) ^ LOBYTE(STACK[0x448]) ^ LOBYTE(STACK[0x71C]) ^ LOBYTE(STACK[0x720]) ^ LOBYTE(STACK[0x724])) ^ 0x35u)) ^ v23;
  unsigned int v29 = ((((v22 ^ 0xD174A200) >> (v26 ^ 0xA3)) - 2137871487 - ((2 * ((v22 ^ 0xD174A200) >> (v26 ^ 0xA3))) & 0x1255702)) ^ 0x8092AB81) >> (v26 ^ 0xBB);
  int v30 = *(_DWORD *)(v1[219] + 4 * (HIBYTE(v28) ^ 0xC7));
  unsigned int v31 = *(_DWORD *)(v1[215] + 4 * (BYTE2(v22) ^ 0x74u)) ^ *(_DWORD *)(v1[218] + 4 * (BYTE1(v27) ^ 0xBBu)) ^ *(_DWORD *)(v1[220] + 4 * (v28 ^ 0x33u)) ^ *(_DWORD *)(v1[214] + 4 * (HIBYTE(v25) ^ 0x76));
  unsigned int v32 = *(_DWORD *)(v1[217] + 4 * ((v29 - ((2 * v29) & 0x7C) + 62) ^ 0x3Eu)) ^ *(_DWORD *)(v1[216] + 4 * (BYTE1(v28) ^ 0x28u)) ^ *(_DWORD *)(v1[221] + 4 * (BYTE2(v27) ^ 0xD1u)) ^ *(_DWORD *)(v1[224] + 4 * (v25 ^ 0x47u));
  int v33 = *(_DWORD *)(v1[227] + 4 * (BYTE2(v25) ^ 0xD6u));
  HIDWORD(v34) = v30 ^ 0x7C64;
  LODWORD(v34) = v30 ^ 0x6C758000;
  int v35 = (v34 >> 15) - ((2 * (v34 >> 15)) & 0x3BC9484) + 31345218;
  unsigned int v36 = *(_DWORD *)(v1[223] + 4 * (BYTE2(v28) ^ 0x2Cu)) ^ *(_DWORD *)(v1[222] + 4 * v22) ^ *(_DWORD *)(v1[226] + 4 * (HIBYTE(v27) ^ 0x5B)) ^ *(_DWORD *)(v1[225] + 4 * (BYTE1(v25) ^ 0x1Eu));
  int v37 = *(_DWORD *)(v1[228] + 4 * (BYTE1(v22) ^ 0xA2u));
  HIDWORD(v34) = v33 ^ 0x4200;
  LODWORD(v34) = v33 ^ 0xB0CC0000;
  int v38 = ((v34 >> 15) - ((2 * (v34 >> 15)) & 0x90B5D8B4) - 933565350) ^ v35;
  HIDWORD(v34) = v38 ^ 0x2B75;
  LODWORD(v34) = v38 ^ 0x4CB60000;
  unsigned int v39 = *(_DWORD *)(v1[229] + 4 * (v27 ^ 0xEBu)) ^ v37 ^ ((v34 >> 17)
                                                                           - ((2 * (v34 >> 17)) & 0x4932B082)
                                                                           + 614029377);
  int v40 = *(_DWORD *)(v1[239] + 4 * (BYTE1(v31) ^ 0xCu));
  unsigned int v41 = *(_DWORD *)(v1[231] + 4 * (BYTE2(v32) ^ 0xE8u)) ^ *(_DWORD *)(v1[230] + 4 * (HIBYTE(v31) ^ 0x38)) ^ *(_DWORD *)(v1[233] + 4 * (BYTE1(v36) ^ 0x15u)) ^ *(_DWORD *)(v1[236] + 4 * (v39 ^ 0x48u));
  int v42 = *(_DWORD *)(v1[240] + 4 * (BYTE2(v31) ^ 0xC4u));
  uint64_t v43 = v1[243];
  unsigned int v44 = *(_DWORD *)(v1[234] + 4 * (BYTE2(v36) ^ 0x61u)) ^ *(_DWORD *)(v1[232] + 4 * (HIBYTE(v32) ^ 0x25)) ^ *(_DWORD *)(v1[242] + 4 * (v31 ^ 0x1Au)) ^ *(_DWORD *)(v1[237] + 4 * (BYTE1(v39) ^ 0x5Fu));
  unsigned int v45 = v40 ^ *(_DWORD *)(v1[241] + 4 * (v32 ^ 0x2Cu)) ^ *(_DWORD *)(v43 + 4 * (HIBYTE(v36) ^ 0xB2)) ^ *(_DWORD *)(v1[238] + 4 * (BYTE2(v39) ^ 0x83u));
  int v46 = *(_DWORD *)(v1[245] + 4 * (HIBYTE(v41) ^ 0xA0));
  unsigned int v47 = v42 ^ *(_DWORD *)(v1[235] + 4 * (v36 ^ 0xF1u)) ^ *(_DWORD *)(v1[244]
                                                                                      + 4 * (BYTE1(v32) ^ 0xE8u)) ^ *(_DWORD *)(v43 + 4 * (HIBYTE(v39) ^ 7));
  int v48 = *(_DWORD *)(v1[246] + 4 * (BYTE1(v45) ^ 0x1Du));
  HIDWORD(v34) = v46 ^ 0x5FC64;
  LODWORD(v34) = v46 ^ 0x6C700000;
  int v49 = (v34 >> 19) - ((2 * (v34 >> 19)) & 0xA0F1D452) - 797382103;
  int v50 = *(_DWORD *)(v1[249] + 4 * (BYTE2(v47) ^ 0x41u));
  HIDWORD(v34) = v48 ^ 0x621E4;
  LODWORD(v34) = v48 ^ 0x33E80000;
  int v51 = ((v34 >> 19) - ((2 * (v34 >> 19)) & 0x91DAB5FA) - 923968771) ^ v49;
  HIDWORD(v34) = v51 ^ 0x1B9D;
  LODWORD(v34) = v51 ^ 0xD6466000;
  uint64_t v52 = v1[251];
  int v53 = *(_DWORD *)(v52 + 4 * (HIBYTE(v44) ^ 0x49));
  int v54 = *(_DWORD *)(v52 + 4 * (HIBYTE(v45) ^ 0x37));
  unsigned int v55 = *(_DWORD *)(v1[250] + 4 * (v47 ^ 0xBBu)) ^ *(_DWORD *)(v1[247] + 4 * (BYTE2(v44) ^ 0x35u)) ^ ((v34 >> 13) - ((2 * (v34 >> 13)) & 0x8B45D4AA) + 1168304725);
  unsigned int v56 = (v53 & 0x4000 | ((((unsigned __int16)(v53 & 0x4000) >> 14) & 1) << 15) | 0xF9FB2EC9) ^ 0x8000;
  unsigned int v57 = *(_DWORD *)(v1[253] + 4 * (BYTE2(v45) ^ 0xCu)) ^ 0xB0CC4200;
  unsigned int v58 = (v57 & (v56 + 100962615)) - 69264194 - ((2 * (v57 & (v56 + 100962615))) & 0xF7BE2068);
  unsigned int v59 = (v53 & 0xFFFFBFFF ^ 0x66BE103B) - ((2 * (v53 & 0xFFFFBFFF ^ 0x66BE103B)) & 0x6573641A) + 851030541;
  unsigned int v60 = (v59 & 0x4DAD15DE ^ 0x4D04058B) + (v59 & 0xB252EA21);
  unsigned int v61 = v56 + 1066243968;
  unsigned int v62 = 864318738 - v56;
  if (v58 == -69264194) {
    unsigned int v62 = v61;
  }
  int v63 = v57 - 965281353 + v62 - ((2 * (v57 - 965281353 + v62)) & 0x4A723DD0) + 624500456;
  int v64 = *(_DWORD *)(v1[255] + 4 * (HIBYTE(v47) ^ 0x42));
  int v65 = *(_DWORD *)(v1[256] + 4 * (BYTE2(v41) ^ 0x85u));
  HIDWORD(v66) = v65 ^ 0x4C4200;
  LODWORD(v66) = v65 ^ 0xB0800000;
  unsigned int v67 = *(_DWORD *)(v1[254] + 4 * (BYTE1(v47) ^ 0x20u)) ^ *(_DWORD *)(v1[252] + 4 * (v41 ^ 0xA4u)) ^ (v60 - 1) ^ v63;
  int v68 = (v66 >> 23) - ((2 * (v66 >> 23)) & 0x1FF4330A) - 1879434875;
  HIDWORD(v66) = v64 ^ 0x75FC64;
  LODWORD(v66) = v64 ^ 0x6C000000;
  unsigned int v69 = *(_DWORD *)(v1[248] + 4 * (BYTE1(v41) ^ 0xE0u)) ^ 0xEF579F80 ^ v50 ^ v54;
  int v70 = *(_DWORD *)(v1[257] + 4 * (v44 ^ 0xBEu)) ^ 0x230FD9B6;
  int v71 = (v70 & v69) - ((2 * (v70 & v69)) & 0x2CDD2112);
  unsigned int v72 = v68 ^ ((v66 >> 23) - ((2 * (v66 >> 23)) & 0xC8D0A20E) + 1684558087);
  int v73 = *(_DWORD *)(v1[258] + 4 * (v45 ^ 0x79u));
  __int16 v74 = v67 ^ 0x2201;
  unsigned int v75 = ((v70 + v69) ^ 0x5F7FBFCB)
      + ((2 * (v70 + v69)) & 0xBEFF7F96)
      + ((2 * v71 + 752689426) ^ 0x80C3303F)
      + ((2 * (2 * v71 + 752689426)) & 0xA7C3DDA4 ^ 0xFE7DBFDB);
  unsigned int v76 = v75 + 1 - 2 * ((v75 + 1952591625) & 0x7D9CFA23 ^ (v75 + 1) & 1) - 234936022;
  unsigned int v77 = *(_DWORD *)(v1[259] + 4 * (BYTE1(v44) ^ 0x4Eu)) ^ v73 ^ (v72 >> 9) ^ (((v72 << 23) ^ 0x41000000)
                                                                              - ((2 * ((v72 << 23) ^ 0x41000000)) & 0x6F000000)
                                                                              + 936523028);
  int v78 = *(_DWORD *)(v1[262] + 4 * (BYTE1(v76) ^ 0xABu));
  int v79 = *(_DWORD *)(v1[261] + 4 * (HIBYTE(v55) ^ 0x68)) ^ *(_DWORD *)(v1[260]
                                                                      + 4
                                                                      * (((v67 ^ 0x30122201) >> 16) ^ 0x1Au));
  unsigned int v80 = (v79 & 0x40000 | ((((v79 & 0x40000u) >> 18) & 1) << 19)) ^ 0xEF7775EF;
  int v81 = *(_DWORD *)(v1[265] + 4 * (HIBYTE(v67) ^ 0x21));
  unsigned int v82 = ((v80 + 277383697) & (v78 ^ 0x33EC0000))
      + 1617245337
      - ((2 * ((v80 + 277383697) & (v78 ^ 0x33EC0000))) & 0xC0C80000);
  unsigned int v83 = ((v79 & 0xFFFBFFFF ^ 0xECC82188)
       + (v79 & 0xB30ABA36 ^ 0x13029A36)
       - ((v79 & 0xFFFBFFFF ^ 0xECC82188) & 0xB30ABA36)) ^ 0xC2113CC6;
  unsigned int v84 = -1853043070 - (v83 | 0x918CCE82) + (v83 | 0x6E73317D);
  unsigned int v85 = v80 + 2097004476;
  unsigned int v86 = 1542237082 - v80;
  if (v82 == 1617245337) {
    unsigned int v86 = v85;
  }
  unsigned int v87 = (v78 ^ 0x33EE21E4) - 1819620779 + v86 - ((2 * ((v78 ^ 0x33EE21E4) - 1819620779 + v86)) & 0xB19CFC2A) - 657555947;
  unsigned int v88 = v76 ^ 0xAD;
  unsigned int v89 = *(_DWORD *)(v1[264] + 4 * (BYTE2(v76) ^ 0x6Eu)) ^ *(_DWORD *)(v1[263] + 4 * (BYTE1(v77) ^ 0x33u)) ^ v81 ^ *(_DWORD *)(v1[266] + 4 * (v55 ^ 0x35u));
  uint64_t v90 = v1[70];
  uint64_t v91 = v1[66];
  uint64_t v92 = v1[63];
  int v93 = *(_DWORD *)(v92 + 4 * (HIBYTE(v76) ^ 0x67)) ^ *(_DWORD *)(v90 + 4 * (BYTE2(v77) ^ 0xADu)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v55) ^ 5u));
  unsigned int v94 = BYTE2(v55) ^ 0xE4;
  uint64_t v95 = v1[56];
  unsigned int v96 = v93 ^ *(_DWORD *)(v95 + 4 * (v74 ^ 0xA3u));
  unsigned int v97 = HIBYTE(v77) ^ 0x33;
  int v98 = *(_DWORD *)(v91 + 4 * (HIBYTE(v74) ^ 0xD5u));
  unsigned int v99 = v87 ^ v84 ^ *(_DWORD *)(v95 + 4 * (v77 ^ 0x60u));
  unsigned int v100 = v98 & 0x10000000 ^ 0xBDA4FA37;
  int v101 = *(_DWORD *)(v90 + 4 * v94) ^ *(_DWORD *)(v95 + 4 * v88);
  int v102 = ((v100 + 1381696969) & ~v101) - 193481530 - 2 * ((v100 + 1381696969) & ~v101);
  unsigned int v103 = v100 + 2080104396;
  unsigned int v104 = -683289542 - v100;
  int v105 = *(_DWORD *)(v92 + 4 * v97);
  if (v102 == -193481530) {
    unsigned int v106 = v103;
  }
  else {
    unsigned int v106 = v104;
  }
  unsigned int v107 = v98 & 0xEFFFFFFF ^ v105 ^ ((v101 ^ 0x93C39BB6)
                                  - 698407427
                                  + v106
                                  - ((2 * ((v101 ^ 0x93C39BB6) - 698407427 + v106)) & 0x82AD942C)
                                  - 1051276778);
  unsigned int v108 = HIBYTE(v107) ^ 0x6C;
  int v109 = *(_DWORD *)(v90 + 4 * (BYTE2(v107) ^ 0xBEu));
  unsigned int v110 = *(_DWORD *)(v92 + 4 * (HIBYTE(v99) ^ 0xD9)) ^ *(_DWORD *)(v90 + 4 * (BYTE2(v89) ^ 0x32u)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v96) ^ 0x57u)) ^ *(_DWORD *)(v95 + 4 * (v107 ^ 0xF3u));
  int v111 = *(_DWORD *)(v90 + 4 * (BYTE2(v99) ^ 0x14u));
  unsigned int v112 = *(_DWORD *)(v92 + 4 * (HIBYTE(v89) ^ 0xA0)) ^ *(_DWORD *)(v90 + 4 * (BYTE2(v96) ^ 0xC0u)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v107) ^ 0x31u)) ^ *(_DWORD *)(v95 + 4 * (v99 ^ 0xEAu));
  unsigned int v113 = *(_DWORD *)(v92 + 4 * (HIBYTE(v96) ^ 0x3A)) ^ v109 ^ *(_DWORD *)(v95 + 4 * (v89 ^ 0xDEu)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v99) ^ 0xC5u));
  int v114 = *(_DWORD *)(v95 + 4 * (v96 ^ 0x51u)) ^ 0x230FD9B6;
  unsigned int v115 = v111 ^ *(_DWORD *)(v92 + 4 * v108) ^ 0xEF579F80 ^ *(_DWORD *)(v91 + 4 * (BYTE1(v89) ^ 6u));
  int v116 = (v114 & v115) - ((2 * (v114 & v115)) & 0x5876ED44);
  unsigned int v117 = ((v114 + v115) ^ 0xAEBB33FD)
       + ((2 * (v114 + v115)) & 0x5D7667FA)
       + ((2 * v116 - 663294652) ^ 0x18B82C4B)
       + ((2 * (2 * v116 - 663294652)) & 0x7E627DE0 ^ 0xCF9FA77F);
  unsigned int v118 = v117 + 1 - 2 * ((v117 + 276171509) & 0x79746AFF ^ (v117 + 1) & 2) - 1981123087;
  int v272 = *(_DWORD *)(v91 + 4 * (BYTE1(v113) ^ 0x36u)) ^ *(_DWORD *)(v90 + 4 * (BYTE2(v112) ^ 0xB1u)) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v110) ^ 0x7C));
  unsigned int v119 = (-1906615692 - (v272 & 0x1BD1126E ^ 0x19C11024 | 0x8E5B5A74) + (v272 & 0x1BD1126E ^ 0x19C11024 | 0x71A4A58B)) ^ 0x61B2670B;
  unsigned int v120 = (((2 * v119) | 0x8413A120) - v119 + 1039544176) ^ 0xC08F1034 | ((v272 & 0x24244501 ^ 0x3971554D)
                                                                       + (v272 & 0xC00AA890 ^ 0x400AA891)
                                                                       - 1) ^ 0x9D7D705D;
  unsigned int v121 = BYTE2(v118) ^ 0x76;
  unsigned int v122 = BYTE2(v110) ^ 0xDB;
  unsigned int v270 = *(_DWORD *)(v95 + 4 * (v118 ^ 0x66u));
  unsigned int v123 = HIBYTE(v118) ^ 0x31;
  unsigned int v124 = *(_DWORD *)(v91 + 4 * (BYTE1(v118) ^ 0x3Cu)) ^ *(_DWORD *)(v95 + 4 * (v110 ^ 0x47u)) ^ *(_DWORD *)(v90 + 4 * (BYTE2(v113) ^ 0x29u)) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v112) ^ 0x10));
  unsigned int v125 = BYTE1(v110) ^ 0x67;
  unsigned int v126 = (v120 - ((2 * v120) & 0x3BA12CD0) + 500209256) ^ v270;
  unsigned int v127 = *(_DWORD *)(v91 + 4 * (BYTE1(v112) ^ 0x27u)) ^ *(_DWORD *)(v90 + 4 * v122) ^ *(_DWORD *)(v95 + 4 * (v113 ^ 0xC8u)) ^ *(_DWORD *)(v92 + 4 * v123);
  unsigned int v128 = *(_DWORD *)(v90 + 4 * v121) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v113) ^ 0xE6)) ^ *(_DWORD *)(v95 + 4 * (v112 ^ 0xAFu)) ^ *(_DWORD *)(v91 + 4 * v125);
  LOBYTE(v113) = (((STACK[0x5A8] & 0x18 ^ 0xF7) + 32) ^ 0xA0) - 38;
  unsigned int v129 = ((((v127 ^ 0x2ABAD0EB) >> (v113 ^ 0x91))
         - 683614100
         + (~(2 * ((v127 ^ 0x2ABAD0EB) >> (v113 ^ 0x91))) | 0x517E3F27)
         + 1) ^ 0xD740E06C) >> (v113 ^ 0x89);
  unsigned int v130 = ((unsigned __int16)((v120 - ((2 * v120) & 0x2CD0) - 27032) ^ v270) >> 8) ^ 0x9E;
  unsigned int v131 = BYTE1(v124) ^ 0xF6;
  unsigned int v132 = v124 ^ 0x8E;
  int v265 = *(_DWORD *)(v91 + 4 * (BYTE1(v128) ^ 0x86u));
  int v267 = *(_DWORD *)(v90 + 4 * (BYTE2(v124) ^ 0xC9u));
  int v133 = *(_DWORD *)(v91 + 4 * (BYTE1(v127) ^ 0xD0u)) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v124) ^ 0xC8));
  int v134 = *(_DWORD *)(v95 + 4 * (v127 ^ 0xEBu));
  unsigned int v135 = *(_DWORD *)(v92 + 4 * (HIBYTE(v126) ^ 0xE6)) ^ v265 ^ v267 ^ v134;
  int v136 = *(_DWORD *)(v90 + 4 * (BYTE2(v127) ^ 0xBAu));
  int v137 = *(_DWORD *)(v92 + 4 * (HIBYTE(v128) ^ 0xE2));
  int v138 = *(_DWORD *)(v91 + 4 * v131);
  int v139 = *(_DWORD *)(v95 + 4 * v132);
  int v140 = *(_DWORD *)(v95 + 4 * (v128 ^ 0x70u));
  unsigned int v141 = *(_DWORD *)(v91 + 4 * v130) ^ v136 ^ v137 ^ v139;
  unsigned int v142 = *(_DWORD *)(v92 + 4 * ((v129 - ((2 * v129) & 0xF0) - 8) ^ 0xF8u)) ^ v138 ^ *(_DWORD *)(v90 + 4 * (BYTE2(v126) ^ 0xA7u)) ^ v140;
  int v143 = *(_DWORD *)(v95 + 4 * ~(_BYTE)v126);
  int v144 = *(_DWORD *)(v90 + 4 * (BYTE2(v128) ^ 0xB8u));
  unsigned int v269 = v133 ^ v143 ^ v144;
  unsigned int v145 = *(_DWORD *)(v90 + 4 * (BYTE2(v269) ^ 0xEBu)) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v135) ^ 0xE3)) ^ 0xDCB9BE64;
  int v146 = *(_DWORD *)(v91 + 4 * (BYTE1(v141) ^ 0xFu)) ^ 0x33EE21E4;
  int v147 = (v145 & v146) - ((2 * (v145 & v146)) & 0x774E111E);
  unsigned int v148 = ((v145 + v146) ^ 0xA90DDBAF)
       + ((2 * (v145 + v146)) & 0x521BB75E)
       + ((2 * v147 - 145878754) ^ 0xC37E153B)
       + ((2 * (2 * v147 - 145878754)) & 0x979FF7B4 ^ 0x7963DDCB);
  int v149 = v148 + 1 - 2 * ((v148 + 46276653) & 0x1F44673D ^ (v148 + 1) & 1) - 1039759512;
  int v150 = *(_DWORD *)(v95 + 4 * (v142 ^ 0x61u));
  unsigned int v151 = (v149 ^ ((v149 ^ 0x60BB98C3) - ((2 * (v149 ^ 0x60BB98C3) + 2) & 0xFC5748F0) - 30694279) ^ ((v150 ^ 0x230FD9B6)
                                                                                                  + (v150 ^ 0x43B44175 ^ v149)
                                                                                                  + 1
                                                                                                  - ((2 * ((v150 ^ 0x230FD9B6) + (v150 ^ 0x43B44175 ^ v149) + 1)) & 0xDDC8736A)
                                                                                                  + 1860450741) ^ 0xF8BFAF1)
       + (v150 ^ 0x230FD9B6);
  int v264 = v151 - ((2 * v151) & 0x351BB766) - 1701979213;
  int v152 = *(_DWORD *)(v95 + 4 * ((v272 ^ v270) ^ 0x17u)) ^ v144 ^ v133;
  unsigned int v153 = v137 ^ *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v272 ^ v270) >> 8) ^ 0x97u)) ^ v139 ^ v136;
  unsigned int v154 = *(_DWORD *)(v90 + 4 * (((v272 ^ v270) >> 16) ^ 0x20u)) ^ v140 ^ v138 ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v127) ^ 0x2A));
  int v155 = *(_DWORD *)(v92 + 4 * (((v272 ^ v270) >> 24) ^ 0x14)) ^ v265 ^ v267 ^ v134;
  unsigned int v156 = ((((v155 ^ 0xE37A7F42) >> ((63 - (BYTE1(v141) & 0x18 | 0xC7)) ^ 0x70))
         - 370214240
         - ((2 * ((v155 ^ 0xE37A7F42) >> ((63 - (BYTE1(v141) & 0x18 | 0xC7)) ^ 0x70))) & 0xD3DDF540)) ^ 0xE9EEFAA0) >> ((63 - (BYTE1(v141) & 0x18 | 0xC7)) ^ 0x68);
  unsigned int v157 = v152;
  unsigned __int8 v260 = BYTE1(v152);
  unsigned int v158 = BYTE2(v152) ^ 0xEB;
  unsigned int v159 = v135;
  unsigned int v271 = v135 ^ 0x42;
  unsigned int v259 = (v156 - ((2 * v156) & 0x77) - 69) ^ 0xBB;
  unsigned int v263 = v155 ^ 0x42;
  unsigned int v160 = v154 ^ 0x61;
  unsigned int v161 = BYTE2(v142) ^ 0xE9;
  int v262 = *(_DWORD *)(v90 + 4 * (BYTE2(v153) ^ 0xBu)) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v157) ^ 0xE7));
  int v162 = *(_DWORD *)(v92 + 4 * (HIBYTE(v153) ^ 0xC9)) ^ 0x6C75FC64;
  unsigned int v163 = *(_DWORD *)(v90 + 4 * (BYTE2(v154) ^ 0xE9u)) ^ 0xB0CC4200;
  unsigned int v261 = v157 ^ 0xFA;
  unsigned int v164 = HIBYTE(v142) ^ 0x2F;
  unsigned int v258 = BYTE1(v142) ^ 0x99;
  unsigned int v165 = HIBYTE(v154) ^ 0x2F;
  unsigned int v166 = BYTE1(v154) ^ 0x99;
  int v167 = 2 * ((v162 & v163) - ((2 * (v162 & v163)) & 0x68DA5652)) - 388344238;
  int v266 = *(_DWORD *)(v90 + 4 * (BYTE2(v141) ^ 0xBu));
  BYTE1(v147) = BYTE1(v159);
  int v273 = *(_DWORD *)(v90 + 4 * (BYTE2(v159) ^ 0x7Au));
  unsigned int v168 = v167 ^ 0xEDDA1243;
  int v169 = *(_DWORD *)(v90 + 4 * v161);
  int v170 = *(_DWORD *)(v90 + 4 * v158);
  BYTE1(v159) = BYTE1(v155);
  int v171 = *(_DWORD *)(v90 + 4 * (BYTE2(v155) ^ 0x7Au));
  int v268 = *(_DWORD *)(v92 + 4 * v164);
  unsigned int v172 = (2 * v167) & 0xF5FF77DC ^ 0x2E4BDB7B;
  int v173 = *(_DWORD *)(v91 + 4 * (BYTE1(v153) ^ 0xFu)) ^ v170 ^ *(_DWORD *)(v95 + 4 * v160) ^ *(_DWORD *)(v92 + 4 * v259);
  unsigned int v174 = ((v162 + v163) ^ 0xD17FEDFE) + ((2 * (v162 + v163)) & 0xA2FFDBFC) + v168 + v172 + 1;
  int v175 = v174 - ((2 * v174 + 1392483298) & 0x42CE89B0) + 1256657609;
  unsigned int v176 = (v264 ^ 0xB0C7B42E) + 804848677;
  int v177 = v176 ^ 0x5BBDFF78;
  unsigned int v178 = (2 * v176) & 0xB77BFEF0;
  int v179 = v262 ^ *(_DWORD *)(v95 + 4 * v263) ^ *(_DWORD *)(v91 + 4 * v166);
  int v180 = *(_DWORD *)(v91 + 4 * (BYTE1(v159) ^ 0x7Fu));
  unsigned int v181 = (*(_DWORD *)(v91 + 4 * (BYTE1(v147) ^ 0x7Fu)) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v141) ^ 0xC9)) ^ *(_DWORD *)(v95 + 4 * (v269 ^ 0xFAu)) ^ 0xC8F2E9ED ^ v169)
       + 545844375;
  unsigned int v182 = v178
       + v177
       + (v173 ^ 0x19EDD654)
       - ((2 * (v178 + v177 + (v173 ^ 0x19EDD654)) + 1216610578) & 0xEF183014)
       - 1680992109;
  unsigned int v183 = (*(_DWORD *)(v91 + 4 * v258) ^ v266 ^ 0xCDA1A067 ^ *(_DWORD *)(v95 + 4 * v271) ^ *(_DWORD *)(v92 + 4 * (HIBYTE(v269) ^ 0xE7)))
       - 493681713;
  int v184 = *(_DWORD *)(v92 + 4 * v165) ^ v171 ^ *(_DWORD *)(v91 + 4 * (v260 ^ 0xCFu)) ^ *(_DWORD *)(v95 + 4 * (v153 ^ 0xBCu));
  unsigned int v185 = ((2 * v183) & 0x6B8FFFFE) + (v183 ^ 0xB5C7FFFF) + (v179 ^ 0x325E5F98);
  int v186 = (v273 ^ *(_DWORD *)(v91 + 4 * (BYTE1(v269) ^ 0xCFu)) ^ *(_DWORD *)(v95 + 4
                                                                                  * (v141 ^ 0xBCu)) ^ 0x2B4336BA ^ v268)
       + 134305726;
  unsigned int v187 = ((2 * v186) & 0xFAD7FF74) + (v186 ^ 0xFD6BFFBA);
  int v188 = v180 ^ *(_DWORD *)(v95 + 4 * v261) ^ v175;
  unsigned int v189 = (v185 - ((2 * v185 - 1804599292) & 0xD3C740A0) + 874225746) ^ 0x6B327B6E;
  unsigned int v190 = ((991886601 * v189) ^ 0x7BDCFCFB) + ((1983773202 * v189) & 0xF7B9F9F6);
  unsigned int v191 = ((2 * v184) & 0xFFFEF7BE ^ 0x56866534) + (v184 ^ 0xD4BC4D65);
  unsigned int v192 = -1583751953 * (v182 ^ 0x43A39E79) - ((1127463390 * (v182 ^ 0x43A39E79)) & 0x84DEEFF8) + 1114601468;
  int v193 = v187 - v191 - ((2 * (v187 - v191) + 86440010) & 0x408084F8) - 1563181407;
  unsigned int v194 = ((2 * v181) & 0xBFEBEE94) + (v181 ^ 0x5FF5F74A) + (v188 ^ 0xCAD3ECAE);
  unsigned int v195 = v194 - ((2 * v194 + 1075057006) & 0xA8E3E274) + 1954281969;
  int v196 = (v192 & 0x8000 ^ 0x666FEAFE) + 2 * (v192 & 0x8000);
  unsigned int v197 = -1622682715 * (v193 ^ 0xDCC27E4A) - 1010136370 - ((1049601866 * (v193 ^ 0xDCC27E4A)) & 0x8795159C);
  unsigned int v198 = (v192 & 0xFFFF7FFF ^ 0x2ECF67C) - ((2 * (v192 & 0xFFFF7FFF ^ 0x2ECF67C)) & 0x63CDE354) + 837218730;
  unsigned int v199 = v190 - 2078080251;
  int v200 = (v199 & (v196 - 1718610686)) - 1999002401 - ((2 * (v199 & (v196 - 1718610686))) & 0x11B30000);
  unsigned int v201 = -858426793 * (v195 ^ 0x383FF71D) - ((-1716853586 * (v195 ^ 0x383FF71D)) & 0xBD18DD3A) - 561221987;
  int v202 = -862595734 - v196;
  int v203 = v196 - 4849810;
  if (v200 != -1999002401) {
    int v203 = v202;
  }
  int v204 = (v203 + v190 - ((2 * (v203 + v190) + 1006252338) & 0x7B7BFA44) - 608496197) ^ v198;
  unsigned int v205 = ((2 * v204) & 0xDBD767D0 ^ 0x99910210) + (v204 ^ 0xA1333EE0);
  unsigned int v206 = ((2 * (v199 + (v201 ^ 0x21739162) + 1)) & 0xBE7F9DDE) + ((v199 + (v201 ^ 0x21739162) + 1) ^ 0x5F3FCEEF);
  unsigned int v207 = v206
       + ((v205 - 1844163560 + (v201 ^ v197 ^ 0x1D46E453)) ^ 0x7EBFBE7E)
       + ((2 * (v205 - 1844163560 + (v201 ^ v197 ^ 0x1D46E453))) & 0xFD7F7CFC)
       + 2035109658;
  unsigned int v208 = v206
       + ((v205 - 1844163560 + (v197 ^ 0xC3CA8ACE)) ^ 0x90000301)
       - ((2 * (v205 - 1844163560 + (v197 ^ 0xC3CA8ACE))) & 0xDFFFF9FC)
       + v207
       + ((2 * v207 + 1365657330) ^ 0x32052103)
       - ((2 * (2 * v207 + 1365657330)) & 0x9BF5BDF8)
       - 1143212233;
  unsigned int v209 = v208 - ((2 * v208 - 1759219042) & 0xEA9F571E) - 1058937634;
  int v210 = v209 ^ (-162324081 - v205 - ((467101648 - 2 * v205) & 0x10CEDB4E));
  unsigned int v211 = ((2 * ((v173 ^ 0xE61229AB) + 2018070100)) & 0xFEDF3E8E)
       + (((v173 ^ 0xE61229AB) + 2018070100) ^ 0x7F6F9F47)
       - v207;
  unsigned int v212 = v211 - ((2 * v211 - 1346733440) & 0xDAB21642) + 1161185377;
  int v213 = v206 - 1598017263 + (v210 ^ 0x7D28C628);
  unsigned int v214 = ((2 * ((v179 ^ 0xCDA1A067) + (v209 ^ 0xAB05470) + 1)) & 0xD75FEAFA)
       + (((v179 ^ 0xCDA1A067) + (v209 ^ 0xAB05470) + 1) ^ 0x6BAFF57D);
  unsigned int v215 = ((2 * ((v188 ^ 0x352C1351) + (v210 ^ 0x82D739D7) + 1)) & 0x6DFFD16E)
       + (((v188 ^ 0x352C1351) + (v210 ^ 0x82D739D7) + 1) ^ 0x36FFE8B7);
  unsigned int v216 = v214 - ((2 * v214 - 836154374) & 0x83FFD014) - 1458270713;
  unsigned int v217 = v215 + 1291291059 - 2 * ((v215 + 1567446784) & 0x6F8A32B7 ^ v215 & 4);
  unsigned int v218 = v191 + (v213 ^ 0x10182E01) - ((2 * v213) & 0xDFCFA3FC) + 1;
  unsigned int v219 = v218 - ((2 * v218 + 2072937214) & 0x825BC5EE) + 2129994870;
  unsigned int v220 = HIBYTE(v219) ^ 0x41;
  uint64_t v221 = v1[53];
  int v222 = *(_DWORD *)(v221 + 4 * (HIBYTE(v212) ^ 0x6D));
  uint64_t v223 = v1[68];
  int v224 = *(_DWORD *)(v223 + 4 * ~HIWORD(v216));
  unsigned int v225 = BYTE1(v217) ^ 0x32;
  unsigned int v226 = ((((v219 ^ 0x412DE2F7) >> (v274[0] & 8 ^ 8))
         + 1735986757
         - ((2 * ((v219 ^ 0x412DE2F7) >> (v274[0] & 8 ^ 8))) & 0xCEF21C8A)) ^ 0x67790E45) >> (v274[0] & 8);
  char v227 = v226 - ((2 * v226) & 0x90);
  unsigned int v228 = BYTE2(v219) ^ 0x2D;
  uint64_t v229 = v1[72];
  int v230 = *(_DWORD *)(v229 + 4 * (v219 ^ 0xF7u));
  int v231 = *(_DWORD *)(v229 + 4 * (v217 ^ 0xB3u));
  int v232 = *(_DWORD *)(v229 + 4 * (v212 ^ 0x21u));
  int v233 = *(_DWORD *)(v229 + 4 * (v216 ^ 0xAu));
  LODWORD(v229) = HIBYTE(v217) ^ 0xEF;
  int v234 = *(_DWORD *)(v223 + 4 * v228);
  int v235 = *(_DWORD *)(v221 + 4 * (HIBYTE(v216) ^ 0x41));
  int v236 = *(_DWORD *)(v223 + 4 * (BYTE2(v217) ^ 0x8Au));
  LODWORD(v229) = *(_DWORD *)(v221 + 4 * v229);
  int v237 = *(_DWORD *)(v221 + 4 * v220);
  LODWORD(v221) = *(_DWORD *)(v223 + 4 * (BYTE2(v212) ^ 0x59u));
  LODWORD(v223) = (v227 - 56) ^ 0xC8;
  uint64_t v238 = v1[60];
  int v239 = *(_DWORD *)(v238 + 4 * v225);
  LODWORD(v223) = *(_DWORD *)(v238 + 4 * v223);
  int v240 = *(_DWORD *)(v238 + 4 * (BYTE1(v212) ^ 0xBu)) ^ v234 ^ v229;
  HIDWORD(v241) = v233 ^ 0x17;
  LODWORD(v241) = v233 ^ 0xAE78680;
  int v242 = (v241 >> 6) - ((2 * (v241 >> 6)) & 0xA4A47CCC);
  HIDWORD(v241) = v240 ^ 0x36;
  LODWORD(v241) = v240 ^ 0xCB0ABAC0;
  int v243 = (v242 + 1381121638) ^ ((v241 >> 6) - ((2 * (v241 >> 6)) & 0xD0070F14) - 402421878);
  int v244 = *(_DWORD *)(v238 + 4 * (BYTE1(v216) ^ 0xE8u));
  HIDWORD(v241) = v243 ^ 0x3ABC500;
  LODWORD(v241) = v243 ^ 0x87FFFFFF;
  int v245 = STACK[0x240];
  int v246 = STACK[0x270];
  int v247 = STACK[0x2A0];
  LODWORD(v238) = LODWORD(STACK[0x270]) ^ LODWORD(STACK[0x240]) ^ LODWORD(STACK[0x2A0]) ^ ((v241 >> 26)
                                                                                         - ((2 * (v241 >> 26)) & 0x74A5F77C)
                                                                                         - 1168966722);
  LODWORD(STACK[0x360]) = v224 ^ v222 ^ v239 ^ v230 ^ LODWORD(STACK[0x240]) ^ LODWORD(STACK[0x270]) ^ LODWORD(STACK[0x2A0]);
  unsigned int v248 = v235 ^ v236 ^ v232 ^ v245 ^ v246 ^ v247 ^ v223;
  int v249 = v237 ^ v231 ^ v221 ^ v244 ^ v245 ^ v246 ^ v247;
  LODWORD(STACK[0x35C]) = v238;
  LODWORD(STACK[0x364]) = v248;
  LODWORD(STACK[0x368]) = v249;
  LODWORD(STACK[0x5F0]) = v238 >> 8;
  unsigned int v250 = (1553594478 - (LOBYTE(STACK[0x361]) ^ 0xF1 | 0x5C99F86E) + (LOBYTE(STACK[0x361]) ^ 0xF1 | 0xA3660791)) ^ 0xE5674D91;
  char v251 = byte_23C216790[(((2 * v250) | 0x8CE1FC7E) - v250 + 965673409) ^ 0x8071B492];
  LODWORD(STACK[0x5F4]) = HIBYTE(v248);
  LODWORD(STACK[0x5F8]) = v248 >> 8;
  char v252 = v251 ^ 0xCC;
  if (v249 == 51169606) {
    char v252 = 16;
  }
  char v253 = ((v252 & (v251 ^ 0x20)) - 2 * (v252 & (v251 ^ 0x20) & 3) - 125) >> 2;
  char v254 = (v251 ^ 0x59 ^ v253) + 1;
  char v255 = v251 ^ 0x86;
  char v256 = v255 + (v254 ^ 0xD1) + ((2 * v254) & 0xA2) + 47;
  char v257 = (v253 ^ ((v253 ^ 0xDF) - ((2 * (v253 ^ 0xDF) + 2) & 0x84) - 61) ^ (v256 - ((2 * v256) & 0x36) + 27) ^ 0xF9)
       + v255;
  LOBYTE(STACK[0x38B]) = (v257 ^ 0xEE) + ((2 * v257) & 0xDD) + 18;
  v1[79] = v1[118];
  JUMPOUT(0x23C1DD6FCLL);
}

void sub_23C1EA5D8()
{
  int v1 = LOBYTE(STACK[0x3B7]);
  LODWORD(STACK[0x678]) = v1 ^ 0x7FEBD7EF;
  LODWORD(STACK[0x67C]) = (2 * v1) & 0xFFFFFFDF;
  uint64_t v2 = *(void *)(v0 + 1360);
  LOBYTE(STACK[0x38B]) = v1 ^ 0x51 ^ (113
                                    * ((LOBYTE(STACK[0x644])
                                      + LOBYTE(STACK[0x654])
                                      - ((2 * LOBYTE(STACK[0x644]) + 40) & 0x72)
                                      - 43) ^ 0x39)
                                    - 1);
  *(void *)(v0 + 632) = v2;
  JUMPOUT(0x23C1DD6FCLL);
}

uint64_t ZshgJnRaSlwn(uint64_t a1)
{
  return (*(&off_26EFDBE20 + ((459 * (a1 != 0)) ^ 0x4F6u)))();
}

uint64_t sub_23C1EA67C()
{
  return off_26EFDEF40();
}

void sub_23C1EA690(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_23C1EA760()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((125 * (*v0 != 637803140)) ^ (v2 + v3 - 338))))();
}

uint64_t sub_23C1EA79C()
{
  (*(void (**)(uint64_t))(v0 + 8 * (v4 ^ (v5 + 2396))))(qword_268B99540);
  uint64_t v6 = qword_268B99578[0] + 888;
  do
  {
    uint64_t v7 = *(void *)(v6 + 16);
    if ((*(_DWORD *)(v6 + 24) & 9) == 1) {
      ((void (*)(void, void))*(&off_26EFDBE20 + (v11 ^ (v5 + 2454))))(*(void *)v6, *(void *)(v6 + 8));
    }
    uint64_t v6 = v7;
  }
  while (v7);
  uint64_t v8 = qword_268B99580 + 888;
  do
  {
    uint64_t v9 = *(void *)(v8 + 16);
    if ((*(_DWORD *)(v8 + 24) & 9) == 1) {
      ((void (*)(void, void))*(&off_26EFDBE20 + (v11 ^ (v5 + 2454))))(*(void *)v8, *(void *)(v8 + 8));
    }
    uint64_t v8 = v9;
  }
  while (v9);
  *int v3 = v1;
  uint64_t result = v2;
  *(_DWORD *)(v2 + 8) = -355091622;
  return result;
}

uint64_t sub_23C1EEF3C@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, unsigned int a5@<W8>)
{
  int v13 = v9 + v10;
  unsigned int v14 = *(_DWORD *)(a4 + 4 * (v9 + v10));
  unsigned int v15 = (((v14 ^ 0x838F23FE ^ (v14 >> 30)) * (v12 ^ a1)) & v6) + v9 + (((v14 ^ 0x838F23FE ^ (v14 >> 30)) * a3) ^ v5);
  *(_DWORD *)(a4 + 4 * (v13 + 1)) = v15 - ((v7 + 2 * v15) & 0x71E47F8) + v8;
  return (*(uint64_t (**)(void))(a2 + 8 * (((a5 > 0x26E) | (16 * (a5 > 0x26E))) ^ v11)))();
}

uint64_t sub_23C1EEFB4(int a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23C1EEF3C(a1, a2, a3, a4, v4);
}

void sub_23C1EEFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_DWORD *a39,uint64_t a40,uint64_t a41,_DWORD *a42,_DWORD *a43,_DWORD *a44,_DWORD *a45,_DWORD *a46)
{
  uint64_t v47 = (*(uint64_t (**)(_DWORD *, void))(a2 + 8 * (v46 ^ 0x62A)))(a42, 0);
  *a43 = *a42 - 2087771140 - ((2 * *a42) & 0x71E47F8);
  *a45 = *a44 - 2087771140 - ((*a44 << (v46 + 11)) & 0x71E47F8);
  int v48 = *(&off_26EFDBE20 + v46 + 568);
  int v49 = ((uint64_t (*)(uint64_t))v48)(v47);
  *a46 = v49 - 2087771140 - ((2 * v49) & 0x71E47F8);
  int v50 = v48();
  *a39 = v50 - 2087771140 - ((2 * v50) & 0x71E47F8);
  JUMPOUT(0x23C1EE188);
}

void sub_23C1EF168()
{
}

uint64_t sub_23C1EF1D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,_DWORD *a40)
{
  LODWORD(STACK[0x460]) = 61303019;
  *a40 = -1699751884;
  unint64_t v44 = dword_268B989F0;
  STACK[0x358] = *(void *)(v41 + 8 * ((v40 + 1088587275) ^ 0x1FFFFFFFA05367F0));
  STACK[0x368] = v44;
  LODWORD(STACK[0x360]) = (v40 + 1088587275) ^ 0x8B;
  STACK[0x380] = a1;
  LODWORD(STACK[0x370]) = v40 + 1088587275;
  LODWORD(STACK[0x374]) = 0;
  LODWORD(STACK[0x378]) = v40 + 1088587477;
  *(void *)(v43 - 112) = &STACK[0x358];
  *(_DWORD *)(v43 - 104) = 1431737413 * ((((2 * (v43 - 112)) | 0x1DFB3178) - (v43 - 112) - 251500732) ^ 0xB0A307AE)
                         + 963210645
                         + v40;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v41 + 8 * (v40 + v42)))(v43 - 112);
  return ((uint64_t (*)(uint64_t))*(&off_26EFDBE20 + *(int *)(v43 - 100)))(v45);
}

uint64_t sub_23C1EF2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v44 = v41 + a17;
  (*(void (**)(uint64_t, uint64_t))(v42 + 8 * (v44 + 24)))(a41, 3312658705);
  int v45 = (*(&off_26EFDBE20 + v44 + 32))();
  LODWORD(xmmword_268B98018) = v45 - 2087771140 - ((5 * (a17 ^ (v43 + 971)) + 119424331) & (2 * v45));
  return sub_23C1EEF3C(-670101188, (uint64_t)&off_26EFDBE20, 1812433253, (uint64_t)&xmmword_268B98018, 1u);
}

uint64_t sub_23C1EF3D0()
{
  unsigned int v2 = ((DWORD1(xmmword_268B98018) & 0x7FFFFFFE ^ 0x68B86FB4)
      + (DWORD1(xmmword_268B98018) & 0x7DEFCD68 ^ 0x95478049)
      - ((DWORD1(xmmword_268B98018) & 0x7FFFFFFE ^ 0x68B86FB4) & 0x7DEFCD68)) ^ 0xD5CA8D69;
  LODWORD(xmmword_268B98018) = xmmword_268B9864C ^ *((_DWORD *)&STACK[0x460] + (BYTE4(xmmword_268B98018) & 1)) ^ ((unsigned __int128)((((v2 + 1474630561 - ((2 * v2) & 0xAFCA2740)) | ((xmmword_268B98018 & 0x80000000) - 497275735) & 0x80000000) ^ 0x14F71FE9) + 615689705 - 2 * ((((v2 + 1474630561 - ((2 * v2) & 0xAFCA2740)) | ((xmmword_268B98018 & 0x80000000) - 497275735) & 0x80000000) ^ 0x14F71FE9) & 0x24B2ADF9 ^ (v2 + 1474630561) & 0x10)) >> 1) ^ 0x11FE3E1F;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(v1 + 8 * (int)((1733 * (((v0 - 768229053) & 0xCE595FBF) == 782)) ^ (v0 - 768229053) & 0xCE595FBF)))(3586821481, 2949261120, 1474630561, 351739881, &STACK[0x460], ((v0 - 768229053) & 0xCE595FBF) + 1326702580, 301874719);
}

void sub_23C1EF52C()
{
}

void sub_23C1EF534()
{
}

uint64_t sub_23C1EF690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  int v43 = v40 + v41;
  uint64_t v44 = v39;
  uint64_t v45 = (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t, void, void, uint64_t *, uint64_t *))(v39 + 8 * (v40 + v41 + 6)))(1, &STACK[0x450], 16, 0, 0, &a21, &a19);
  a39 = -42929;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * ((487 * ((int)v45 >= (v41 ^ (v42 + 946)) + ((v43 - 1516) | 0x8C) - 348)) ^ (v43 - 1312))))(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_23C1EF718(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 + (v1 ^ 0xF8) + 766) ^ (v3 + 698)) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_23C1EF748@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 + a2 + 678) ^ (a2 - 805486768) & 0x7FAEFEDF ^ 0x10DCDD46) * (a1 == -536870170)) ^ a2)))();
}

void sub_23C1EF7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 - 0x4398FF68D0799FC3) = 0;
  *(_DWORD *)(a10 - 0x4398FF68D0799FBBLL) = 172727073;
  JUMPOUT(0x23C1EF7D4);
}

void *sub_23C1EF7F8(unint64_t a1)
{
  unint64_t v1 = (unint64_t)&v263[qword_268B98A18 ^ qword_268B98A20];
  qword_268B98A20 = 1435369301 * v1 + 0x6452D7E57E24B442;
  qword_268B98A18 = 1435369301 * (v1 ^ 0x9BAD281A81DB4BBELL);
  char v2 = dword_268B99588++;
  uint64_t v3 = qword_268B99578[v2 & 1];
  if (!v3) {
    return 0;
  }
  if ((*(unsigned char *)(v3 + 880) & 2) != 0 && atomic_exchange((atomic_uint *volatile)(v3 + 884), 1u))
  {
    char v5 = 1;
    while (*(_DWORD *)(v3 + 884) || atomic_exchange((atomic_uint *volatile)(v3 + 884), 1u))
    {
      if ((v5 & 0x3F) == 0) {
        (*(&off_26EFDBE20
      }
         + ((85 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE)) ^ byte_23C218340[byte_23C218240[(85 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE))] ^ 0xB5])
         + 1344))();
      ++v5;
    }
  }
  if (a1 <= 0xE0)
  {
    unint64_t v6 = (a1 + 31) & 0xFFFFFFFFFFFFFFF0;
    if (a1 < 0xF) {
      unint64_t v6 = 32;
    }
    unint64_t v7 = v6 >> 3;
    unint64_t v8 = *(unsigned int *)v3;
    unint64_t v9 = v8 >> ((v6 >> 3) & 0xFE);
    if ((v9 & 3) != 0)
    {
      uint64_t v10 = ((v8 >> ((v6 >> 3) & 0xFE)) & 1 | v7) ^ 1;
      uint64_t v11 = v3 + 16 * v10;
      uint64_t v12 = v11 + 72;
      uint64_t v13 = *(void *)(v11 + 88);
      uint64_t result = (void *)(v13 + 16);
      uint64_t v15 = *(void *)(v13 + 16);
      if (v12 == v15)
      {
        *(_DWORD *)uint64_t v3 = v8 & ~(1 << v10);
      }
      else
      {
        *(void *)(v15 + 24) = v12;
        *(void *)(v12 + 16) = v15;
      }
      *(void *)(v13 + 8) = (8 * v10) | 3;
      unsigned int v32 = (uint64_t *)(v13 + 8 * v10);
LABEL_28:
      v32[1] |= 1uLL;
      *unsigned int v32 = qword_268B99548 ^ v3;
      goto LABEL_97;
    }
    if (v6 > *(void *)(v3 + 8))
    {
      if (v9)
      {
        int v19 = (v9 << v7) & ((2 << v7) | -(2 << v7));
        unsigned int v20 = (v19 - 1) & ~v19;
        int v21 = (v20 >> 12) & 0x10;
        unsigned int v22 = v20 >> v21;
        unsigned int v23 = v21 & 0xFFFFFFF0 | (v22 >> 5) & 0xF;
        unsigned int v24 = v22 >> ((v22 >> 5) & 8);
        unsigned int v25 = v23 & 0xFFFFFFF8 | (v24 >> 2) & 7;
        unsigned int v26 = v24 >> ((v24 >> 2) & 4);
        unsigned int v27 = (v25 & 0xFFFFFFFC | (v26 >> 1) & 2 | (v26 >> ((v26 >> 1) & 2) >> 1) & 1)
            + (v26 >> ((v26 >> 1) & 2) >> (((v26 >> ((v26 >> 1) & 2)) & 2) != 0));
        uint64_t v28 = v3 + 16 * v27;
        uint64_t v29 = v28 + 72;
        uint64_t v30 = *(void *)(v28 + 88);
        uint64_t result = (void *)(v30 + 16);
        uint64_t v31 = *(void *)(v30 + 16);
        if (v29 == v31)
        {
          *(_DWORD *)uint64_t v3 = v8 & ~(1 << v27);
        }
        else
        {
          *(void *)(v31 + 24) = v29;
          *(void *)(v29 + 16) = v31;
        }
        uint64_t v105 = 8 * v27;
        uint64_t v106 = v105 - v6;
        if (v105 - v6 > 0x1F)
        {
          *(void *)(v30 + 8) = v6 | 3;
          unsigned int v107 = (uint64_t *)(v30 + v6);
          *unsigned int v107 = qword_268B99548 ^ v3;
          v107[1] = v106 | 1;
          *(void *)(v30 + v105) = v106;
          unint64_t v108 = *(void *)(v3 + 8);
          if (v108)
          {
            uint64_t v109 = *(void *)(v3 + 32);
            unint64_t v110 = v108 >> 3;
            uint64_t v111 = v3 + ((2 * v108) & 0x7FFFFFFF0) + 72;
            int v112 = 1 << v110;
            if ((*(_DWORD *)v3 & v112) != 0)
            {
              uint64_t v113 = *(void *)(v111 + 16);
            }
            else
            {
              *(_DWORD *)v3 |= v112;
              uint64_t v113 = v111;
            }
            *(void *)(v111 + 16) = v109;
            *(void *)(v113 + 24) = v109;
            *(void *)(v109 + 16) = v113;
            *(void *)(v109 + 24) = v111;
          }
          *(void *)(v3 + 8) = v106;
          *(void *)(v3 + 32) = v107;
          goto LABEL_97;
        }
        *(void *)(v30 + 8) = v105 | 3;
        unsigned int v32 = (uint64_t *)(v30 + v105);
        goto LABEL_28;
      }
      int v55 = *(_DWORD *)(v3 + 4);
      if (v55)
      {
        unsigned int v56 = (v55 - 1) & ~v55;
        int v57 = (v56 >> 12) & 0x10;
        unsigned int v58 = v56 >> v57;
        unsigned int v59 = v57 & 0xFFFFFFF0 | (v58 >> 5) & 0xF;
        unsigned int v60 = v58 >> ((v58 >> 5) & 8);
        unsigned int v61 = v59 & 0xFFFFFFF8 | (v60 >> 2) & 7;
        unsigned int v62 = v60 >> ((v60 >> 2) & 4);
        uint64_t v63 = *(void *)(v3
                        + 8
                        * ((v61 & 0xFFFFFFFC | (v62 >> 1) & 2 | (v62 >> ((v62 >> 1) & 2) >> 1) & 1)
                         + (v62 >> ((v62 >> 1) & 2) >> (((v62 >> ((v62 >> 1) & 2)) & 2) != 0)))
                        + 600);
        unint64_t v64 = (*(void *)(v63 + 8) & 0xFFFFFFFFFFFFFFF8) - v6;
        uint64_t v65 = 32;
        if (!*(void *)(v63 + 32)) {
          uint64_t v65 = 40;
        }
        for (uint64_t i = *(void *)(v63 + v65); i; uint64_t i = *(void *)(i + v67))
        {
          if ((*(void *)(i + 8) & 0xFFFFFFFFFFFFFFF8) - v6 < v64)
          {
            unint64_t v64 = (*(void *)(i + 8) & 0xFFFFFFFFFFFFFFF8) - v6;
            uint64_t v63 = i;
          }
          if (*(void *)(i + 32)) {
            uint64_t v67 = 32;
          }
          else {
            uint64_t v67 = 40;
          }
        }
        uint64_t v68 = *(void *)(v63 + 48);
        unsigned int v69 = *(void **)(v63 + 24);
        if (v69 != (void *)v63)
        {
          uint64_t v70 = *(void *)(v63 + 16);
          *(void *)(v70 + 24) = v69;
          v69[2] = v70;
          if (!v68) {
            goto LABEL_223;
          }
LABEL_184:
          uint64_t v160 = v3 + 8 * *(unsigned int *)(v63 + 56);
          if (v63 == *(void *)(v160 + 600))
          {
            *(void *)(v160 + 600) = v69;
            if (!v69)
            {
              *(_DWORD *)(v3 + 4) &= ~(1 << *(_DWORD *)(v63 + 56));
              goto LABEL_223;
            }
          }
          else
          {
            uint64_t v161 = 40;
            if (*(void *)(v68 + 32) == v63) {
              uint64_t v161 = 32;
            }
            *(void *)(v68 + v161) = v69;
            if (!v69) {
              goto LABEL_223;
            }
          }
          v69[6] = v68;
          uint64_t v162 = *(void *)(v63 + 32);
          if (v162)
          {
            v69[4] = v162;
            *(void *)(v162 + 48) = v69;
          }
          uint64_t v163 = *(void *)(v63 + 40);
          if (v163)
          {
            v69[5] = v163;
            *(void *)(v163 + 48) = v69;
          }
          goto LABEL_223;
        }
        unsigned int v157 = (void *)(v63 + 40);
        unsigned int v158 = *(void **)(v63 + 40);
        if (v158 || (unsigned int v157 = (void *)(v63 + 32), (v158 = *(void **)(v63 + 32)) != 0))
        {
          do
          {
            do
            {
              unsigned int v159 = v157;
              unsigned int v69 = v158;
              unsigned int v157 = v158 + 5;
              unsigned int v158 = (void *)v158[5];
            }
            while (v158);
            unsigned int v157 = v69 + 4;
            unsigned int v158 = (void *)v69[4];
          }
          while (v158);
          *unsigned int v159 = 0;
          if (v68) {
            goto LABEL_184;
          }
        }
        else
        {
          unsigned int v69 = 0;
          if (v68) {
            goto LABEL_184;
          }
        }
LABEL_223:
        if (v64 > 0x1F)
        {
          *(void *)(v63 + 8) = v6 | 3;
          *(void *)(v63 + v6) = qword_268B99548 ^ v3;
          uint64_t v194 = v63 + v6;
          *(void *)(v194 + 8) = v64 | 1;
          *(void *)(v194 + v64) = v64;
          unint64_t v195 = *(void *)(v3 + 8);
          if (v195)
          {
            uint64_t v196 = *(void *)(v3 + 32);
            unint64_t v197 = v195 >> 3;
            uint64_t v198 = v3 + ((2 * v195) & 0x7FFFFFFF0) + 72;
            int v199 = 1 << v197;
            if ((*(_DWORD *)v3 & v199) != 0)
            {
              uint64_t v200 = *(void *)(v198 + 16);
            }
            else
            {
              *(_DWORD *)v3 |= v199;
              uint64_t v200 = v198;
            }
            *(void *)(v198 + 16) = v196;
            *(void *)(v200 + 24) = v196;
            *(void *)(v196 + 16) = v200;
            *(void *)(v196 + 24) = v198;
          }
          *(void *)(v3 + 8) = v64;
          *(void *)(v3 + 32) = v194;
          uint64_t result = (void *)(v63 + 16);
        }
        else
        {
          unint64_t v192 = v64 + v6;
          *(void *)(v63 + 8) = v192 | 3;
          int v193 = (uint64_t *)(v63 + v192);
          v193[1] |= 1uLL;
          *int v193 = qword_268B99548 ^ v3;
          uint64_t result = (void *)(v63 + 16);
        }
        goto LABEL_97;
      }
    }
    goto LABEL_74;
  }
  if (a1 > 0xFFFFFFFFFFFFFF7FLL)
  {
    unint64_t v6 = -1;
    goto LABEL_74;
  }
  unint64_t v6 = (a1 + 31) & 0xFFFFFFFFFFFFFFF0;
  int v16 = *(_DWORD *)(v3 + 4);
  int v275 = (_DWORD *)(v3 + 4);
  if (v16)
  {
    unint64_t v17 = -(uint64_t)v6;
    if (v6 >= 0x100)
    {
      if (v6 >> 24)
      {
        unsigned int v18 = 31;
      }
      else
      {
        unint64_t v33 = (a1 + 31) >> 8;
        unsigned int v34 = ((v33 + 1048320) >> 16) & 8;
        LODWORD(v33) = v33 << v34;
        LODWORD(v33) = (v33 << (((v33 + 520192) >> 16) & 4) << ((((v33 << (((v33 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                     - (((v33 + 520192) >> 16) & 4 | v34 | (((v33 << (((v33 + 520192) >> 16) & 4))
                                                                                       + 245760) >> 16) & 2);
        unsigned int v18 = ((v6 >> (v33 + 21)) & 1 | (2 * v33)) + 28;
      }
    }
    else
    {
      unsigned int v18 = 0;
    }
    uint64_t v35 = *(void *)(v3 + 8 * v18 + 600);
    if (v35)
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      int v38 = 57 - (v18 >> 1);
      if (v18 == 31) {
        LOBYTE(v38) = 0;
      }
      unint64_t v39 = v6 << v38;
      while (1)
      {
        unint64_t v42 = (*(void *)(v35 + 8) & 0xFFFFFFFFFFFFFFF8) - v6;
        if (v42 < v17)
        {
          unint64_t v17 = (*(void *)(v35 + 8) & 0xFFFFFFFFFFFFFFF8) - v6;
          uint64_t v37 = v35;
          if (!v42) {
            break;
          }
        }
        uint64_t v40 = *(void *)(v35 + 40);
        uint64_t v35 = *(void *)(v35 + 8 * (v39 >> 63) + 32);
        if (v40 != v35 && v40 != 0) {
          uint64_t v36 = v40;
        }
        v39 *= 2;
        if (!v35) {
          goto LABEL_46;
        }
      }
      uint64_t v36 = v35;
      uint64_t v37 = v35;
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0;
LABEL_46:
      if (!(v36 | v37))
      {
        int v43 = ((2 << v18) | -(2 << v18)) & v16;
        if (!v43) {
          goto LABEL_74;
        }
        uint64_t v37 = 0;
        unsigned int v44 = (v43 - 1) & ~v43;
        int v45 = (v44 >> 12) & 0x10;
        unsigned int v46 = v44 >> v45;
        unsigned int v47 = v45 & 0xFFFFFFF0 | (v46 >> 5) & 0xF;
        unsigned int v48 = v46 >> ((v46 >> 5) & 8);
        unsigned int v49 = v47 & 0xFFFFFFF8 | (v48 >> 2) & 7;
        unsigned int v50 = v48 >> ((v48 >> 2) & 4);
        uint64_t v36 = *(void *)(v3
                        + 8
                        * ((v49 & 0xFFFFFFFC | (v50 >> 1) & 2 | (v50 >> ((v50 >> 1) & 2) >> 1) & 1)
                         + (v50 >> ((v50 >> 1) & 2) >> (((v50 >> ((v50 >> 1) & 2)) & 2) != 0)))
                        + 600);
      }
      if (!v36)
      {
LABEL_56:
        unint64_t v276 = v17;
        uint64_t v277 = v37;
        if (!v37 || v276 >= *(void *)(v3 + 8) - v6) {
          goto LABEL_74;
        }
        uint64_t v278 = v277 + v6;
        uint64_t v52 = *(void *)(v277 + 48);
        int v53 = *(void **)(v277 + 24);
        if (v53 == (void *)v277)
        {
          int v114 = (void *)(v277 + 40);
          unsigned int v115 = *(void **)(v277 + 40);
          if (v115 || (int v114 = (void *)(v277 + 32), (v115 = *(void **)(v277 + 32)) != 0))
          {
            do
            {
              do
              {
                int v116 = v114;
                int v53 = v115;
                int v114 = v115 + 5;
                unsigned int v115 = (void *)v115[5];
              }
              while (v115);
              int v114 = v53 + 4;
              unsigned int v115 = (void *)v53[4];
            }
            while (v115);
            *int v116 = 0;
            if (!v52) {
              goto LABEL_210;
            }
          }
          else
          {
            int v53 = 0;
            if (!v52) {
              goto LABEL_210;
            }
          }
        }
        else
        {
          uint64_t v54 = *(void *)(v277 + 16);
          *(void *)(v54 + 24) = v53;
          v53[2] = v54;
          if (!v52) {
            goto LABEL_210;
          }
        }
        uint64_t v117 = v277;
        uint64_t v118 = v3 + 8 * *(unsigned int *)(v277 + 56);
        if (v277 == *(void *)(v118 + 600))
        {
          *(void *)(v118 + 600) = v53;
          if (!v53)
          {
            *v275 &= ~(1 << *(_DWORD *)(v117 + 56));
            goto LABEL_210;
          }
        }
        else
        {
          uint64_t v119 = 40;
          if (*(void *)(v52 + 32) == v277) {
            uint64_t v119 = 32;
          }
          *(void *)(v52 + v119) = v53;
          if (!v53)
          {
LABEL_210:
            if (v276 > 0x1F)
            {
              *(void *)(v277 + 8) = v6 | 3;
              uint64_t v179 = v278;
              unint64_t v180 = v276;
              uint64_t v181 = v276 | 1;
              *(void *)uint64_t v278 = qword_268B99548 ^ v3;
              *(void *)(v179 + 8) = v181;
              *(void *)(v179 + v180) = v180;
              if (v180 > 0xFF)
              {
                unsigned int v264 = 31;
                if (!(v180 >> 24))
                {
                  unsigned int v186 = (((v276 >> 8) + 1048320) >> 16) & 8;
                  unsigned int v187 = (v276 >> 8) << v186;
                  unsigned int v188 = (v187 << (((v187 + 520192) >> 16) & 4) << ((((v187 << (((v187 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                       - (((v187 + 520192) >> 16) & 4 | v186 | (((v187 << (((v187 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
                  unsigned int v264 = ((v276 >> (v188 + 21)) & 1 | (2 * v188)) + 28;
                }
                unsigned int v265 = v264;
                uint64_t v266 = v3 + 8 * v264 + 600;
                uint64_t v189 = v278;
                *(_DWORD *)(v278 + 56) = v264;
                int v262 = (unsigned char *)(v189 + 32);
                uint64_t v190 = (uint64_t)*(&off_26EFDBE20
                                + ((85 * ((qword_268B98A18 + qword_268B98A20) ^ 0xBE)) ^ byte_23C218340[byte_23C218240[(85 * ((qword_268B98A18 + qword_268B98A20) ^ 0xBE))] ^ 0x4C])
                                + 1287);
                goto LABEL_265;
              }
              unint64_t v182 = v180 >> 3;
              uint64_t v183 = v3 + ((2 * v180) & 0x7FFFFFFF0) + 72;
              int v184 = 1 << v182;
              if ((v184 & *(_DWORD *)v3) != 0)
              {
                uint64_t v185 = *(void *)(v183 + 16);
              }
              else
              {
                *(_DWORD *)v3 |= v184;
                uint64_t v185 = v183;
              }
              uint64_t v191 = v278;
              *(void *)(v183 + 16) = v278;
              *(void *)(v185 + 24) = v191;
              *(void *)(v191 + 16) = v185;
              *(void *)(v191 + 24) = v183;
            }
            else
            {
              uint64_t v176 = v277;
              unint64_t v177 = v276 + v6;
              *(void *)(v277 + 8) = v177 | 3;
              unsigned int v178 = (uint64_t *)(v176 + v177);
              v178[1] |= 1uLL;
              *unsigned int v178 = qword_268B99548 ^ v3;
            }
            int v78 = (uint64_t *)v277;
LABEL_96:
            uint64_t result = v78 + 2;
            goto LABEL_97;
          }
        }
        v53[6] = v52;
        uint64_t v147 = *(void *)(v277 + 32);
        if (v147)
        {
          v53[4] = v147;
          *(void *)(v147 + 48) = v53;
        }
        uint64_t v148 = *(void *)(v277 + 40);
        if (v148)
        {
          v53[5] = v148;
          *(void *)(v148 + 48) = v53;
        }
        goto LABEL_210;
      }
    }
    do
    {
      if ((*(void *)(v36 + 8) & 0xFFFFFFFFFFFFFFF8) - v6 < v17)
      {
        unint64_t v17 = (*(void *)(v36 + 8) & 0xFFFFFFFFFFFFFFF8) - v6;
        uint64_t v37 = v36;
      }
      if (*(void *)(v36 + 32)) {
        uint64_t v51 = 32;
      }
      else {
        uint64_t v51 = 40;
      }
      uint64_t v36 = *(void *)(v36 + v51);
    }
    while (v36);
    goto LABEL_56;
  }
LABEL_74:
  unint64_t v279 = v6;
  unint64_t v71 = *(void *)(v3 + 8);
  if (v6 <= v71)
  {
    unint64_t v77 = v71 - v279;
    int v78 = *(uint64_t **)(v3 + 32);
    if (v71 - v279 < 0x20)
    {
      *(void *)(v3 + 8) = 0;
      *(void *)(v3 + 32) = 0;
      v78[1] = v71 | 3;
      unsigned int v80 = (uint64_t *)((char *)v78 + v71);
      *(uint64_t *)((char *)v78 + v71 + 8) |= 1uLL;
    }
    else
    {
      unint64_t v79 = v279;
      unsigned int v80 = (uint64_t *)((char *)v78 + v279);
      *(void *)(v3 + 32) = (char *)v78 + v279;
      *(void *)(v3 + 8) = v77;
      v80[1] = v77 | 1;
      *(uint64_t *)((char *)v78 + v71) = v77;
      v78[1] = v79 | 3;
    }
    *unsigned int v80 = qword_268B99548 ^ v3;
    goto LABEL_96;
  }
  unint64_t v72 = *(void *)(v3 + 16);
  unint64_t v280 = (uint64_t *)(v3 + 16);
  if (v279 < v72)
  {
    unint64_t v73 = v279;
    uint64_t v74 = v72 - v279;
    *unint64_t v280 = v74;
    uint64_t v75 = *(void *)(v3 + 40);
    unsigned int v76 = (uint64_t *)(v75 + v73);
    *(void *)(v3 + 40) = v75 + v73;
    v76[1] = v74 | 1;
    *(void *)(v75 + 8) = v73 | 3;
    *unsigned int v76 = qword_268B99548 ^ v3;
    uint64_t result = (void *)(v75 + 16);
    goto LABEL_97;
  }
  if (v72)
  {
    if ((*(_DWORD *)(v3 + 880) & 1) != 0 && *((void *)&xmmword_268B99558 + 1) <= v279)
    {
      unint64_t v81 = (qword_268B99550 + v279 + 62) & -qword_268B99550;
      unint64_t v82 = *(void *)(v3 + 872);
      if (!v82 || (unint64_t v83 = *(void *)(v3 + 856), v83 + v81 > v83) && v83 + v81 <= v82)
      {
        if (v81 > v279)
        {
          unint64_t v84 = ((uint64_t (*)(void, unint64_t, uint64_t, uint64_t, uint64_t, void))*(&off_26EFDBE20 + ((85 * ((qword_268B98A18 + qword_268B98A20) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 + qword_268B98A20) ^ 0xBE))] ^ 0x43]) + 1439))(0, (qword_268B99550 + v279 + 62) & -qword_268B99550, 3, 4098, 0xFFFFFFFFLL, 0);
          if (v84 != -1)
          {
            uint64_t v85 = -(v84 + 16) & 0xFLL;
            if (((v84 + 16) & 0xF) == 0) {
              uint64_t v85 = 0;
            }
            int v78 = (uint64_t *)(v84 + v85);
            *int v78 = v85;
            v78[1] = v81 - v85 - 32;
            unint64_t v86 = v84 + v81 - 32;
            *(void *)unint64_t v86 = qword_268B99548 ^ v3;
            *(_OWORD *)(v86 + 8) = xmmword_23C20CAD0;
            unint64_t v87 = *(void *)(v3 + 24);
            if (!v87 || v84 < v87) {
              *(void *)(v3 + 24) = v84;
            }
            unint64_t v88 = *(void *)(v3 + 856) + v81;
            *(void *)(v3 + 856) = v88;
            if (v88 > *(void *)(v3 + 864)) {
              *(void *)(v3 + 864) = v88;
            }
            goto LABEL_96;
          }
        }
      }
    }
  }
  uint64_t result = 0;
  unint64_t v89 = (xmmword_268B99558 + v279 + 95) & -(uint64_t)xmmword_268B99558;
  if (v89 > v279)
  {
    unint64_t v90 = *(void *)(v3 + 872);
    if (!v90 || (uint64_t result = 0, v91 = *(void *)(v3 + 856), v91 + v89 > v91) && v91 + v89 <= v90)
    {
      unint64_t v92 = ((uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, void))*(&off_26EFDBE20
                                                                                        + ((85 * (qword_268B98A20 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A20 ^ 0xBE ^ qword_268B98A18))] ^ 0x6F])
                                                                                        + 1452))(0, (xmmword_268B99558 + v279 + 95) & -(uint64_t)xmmword_268B99558, 3, 4098, 0xFFFFFFFFLL, 0);
      BOOL v93 = v92 != -1;
      if (v92 == -1) {
        unint64_t v94 = 0;
      }
      else {
        unint64_t v94 = v89;
      }
      if (v92 == -1)
      {
LABEL_308:
        unsigned __int8 v260 = (_DWORD *)(*(&off_26EFDBE20
                          + ((85 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE))] ^ 0xF7])
                          + 1378))();
        uint64_t result = 0;
        *unsigned __int8 v260 = 12;
        goto LABEL_97;
      }
      unint64_t v95 = *(void *)(v3 + 856) + v89;
      *(void *)(v3 + 856) = v95;
      if (v95 > *(void *)(v3 + 864)) {
        *(void *)(v3 + 864) = v95;
      }
      unint64_t v96 = *(void *)(v3 + 40);
      int v281 = (uint64_t *)(v3 + 40);
      unint64_t v282 = v96;
      if (v96)
      {
        unint64_t v97 = *(void *)(v3 + 888);
        uint64_t v98 = *(void *)(v3 + 896);
        if (v92 == v97 + v98 && (*(_DWORD *)(v3 + 912) & 9) == 1 && v282 >= v97 && v282 < v92)
        {
          *(void *)(v3 + 896) = v98 + v89;
          unsigned int v99 = v280;
          unint64_t v100 = *v280 + v89;
          unint64_t v101 = v282;
          if (((v282 + 16) & 0xF) != 0) {
            uint64_t v102 = -(v282 + 16) & 0xFLL;
          }
          else {
            uint64_t v102 = 0;
          }
          unint64_t v103 = v282 + v102;
          uint64_t v104 = v100 - v102;
          *int v281 = v103;
          *unsigned int v99 = v104;
          *(void *)(v103 + 8) = v104 | 1;
          *(void *)(v101 + v100 + 8) = 80;
          *(void *)(v3 + 48) = qword_268B99568;
          goto LABEL_306;
        }
        unsigned int v120 = (char *)(v3 + 888);
        if (v92 < *(void *)(v3 + 24)) {
          *(void *)(v3 + 24) = v92;
        }
        unint64_t v121 = v92 + v89;
        unsigned int v122 = (unint64_t *)(v3 + 888);
        if (*(void *)v120 == v92 + v89)
        {
          unsigned int v122 = (unint64_t *)(v3 + 888);
          if ((*(_DWORD *)(v3 + 912) & 9) == 1)
          {
            *(void *)(v3 + 888) = v92;
            *(void *)(v3 + 896) += v89;
            if (((v92 + 16) & 0xF) != 0) {
              uint64_t v123 = -(v92 + 16) & 0xFLL;
            }
            else {
              uint64_t v123 = 0;
            }
            unint64_t v124 = v92 + v123;
            if (((v121 + 16) & 0xF) != 0) {
              uint64_t v125 = -(v121 + 16) & 0xFLL;
            }
            else {
              uint64_t v125 = 0;
            }
            unint64_t v126 = v121 + v125;
            unint64_t v127 = v279;
            unsigned int v283 = (uint64_t *)v124;
            unint64_t v284 = v124 + v279;
            unint64_t v128 = v126 - v124 - v279;
            *(void *)(v124 + 8) = v279 | 3;
            *(void *)(v124 + v127) = qword_268B99548 ^ v3;
            if (v126 == *v281)
            {
              unint64_t v201 = *v280 + v128;
              *unint64_t v280 = v201;
              unint64_t v202 = v284;
              *int v281 = v284;
              *(void *)(v202 + 8) = v201 | 1;
            }
            else
            {
              if (v126 != *(void *)(v3 + 32))
              {
                unint64_t v129 = *(void *)(v126 + 8);
                if ((v129 & 3) != 1)
                {
LABEL_257:
                  unint64_t v285 = v128;
                  *(void *)(v126 + 8) = v129 & 0xFFFFFFFFFFFFFFFELL;
                  unint64_t v215 = v284;
                  *(void *)(v284 + 8) = v128 | 1;
                  *(void *)(v215 + v128) = v128;
                  if (v128 <= 0xFF)
                  {
                    unint64_t v216 = v128 >> 3;
                    uint64_t v217 = v3 + ((2 * v128) & 0x7FFFFFFF0) + 72;
                    int v218 = 1 << v216;
                    if ((v218 & *(_DWORD *)v3) != 0)
                    {
                      uint64_t v219 = *(void *)(v217 + 16);
                    }
                    else
                    {
                      *(_DWORD *)v3 |= v218;
                      uint64_t v219 = v217;
                    }
                    unint64_t v225 = v284;
                    *(void *)(v217 + 16) = v284;
                    *(void *)(v219 + 24) = v225;
                    *(void *)(v225 + 16) = v219;
                    *(void *)(v225 + 24) = v217;
                    goto LABEL_278;
                  }
                  unsigned int v267 = 31;
                  if (!(v128 >> 24))
                  {
                    unsigned int v220 = (((v285 >> 8) + 1048320) >> 16) & 8;
                    unsigned int v221 = (v285 >> 8) << v220;
                    unsigned int v222 = (v221 << (((v221 + 520192) >> 16) & 4) << ((((v221 << (((v221 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                         - (((v221 + 520192) >> 16) & 4 | v220 | (((v221 << (((v221 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
                    unsigned int v267 = ((v285 >> (v222 + 21)) & 1 | (2 * v222)) + 28;
                  }
                  unsigned int v268 = v267;
                  uint64_t v223 = v3 + 8 * v267 + 600;
                  unint64_t v224 = v284;
                  *(_DWORD *)(v284 + 56) = v267;
                  uint64_t v269 = v223;
                  uint64_t v270 = v3 + 4;
                  int v262 = (unsigned char *)(v224 + 32);
                  uint64_t v190 = (uint64_t)*(&off_26EFDBE20
                                  + ((85 * (qword_268B98A20 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C217F40[byte_23C217E40[(85 * (qword_268B98A20 ^ 0xBE ^ qword_268B98A18))] ^ 0xBF])
                                  + 1311);
LABEL_265:
                  uint64_t v261 = v190;
                  unsigned int v226 = v262;
                  unint64_t v227 = -(int)v262 & 7;
                  if (v227 > 0x10) {
                    LODWORD(v227) = 16;
                  }
                  switch((int)v227)
                  {
                    case 1:
                      goto LABEL_274;
                    case 2:
                      goto LABEL_273;
                    case 3:
                      goto LABEL_272;
                    case 4:
                      goto LABEL_271;
                    case 5:
                      goto LABEL_270;
                    case 6:
                      goto LABEL_269;
                    case 7:
                      *int v262 = 0;
                      unsigned int v226 = v262 + 1;
LABEL_269:
                      *v226++ = 0;
LABEL_270:
                      *v226++ = 0;
LABEL_271:
                      *v226++ = 0;
LABEL_272:
                      *v226++ = 0;
LABEL_273:
                      *v226++ = 0;
LABEL_274:
                      *v226++ = 0;
                      break;
                    default:
                      break;
                  }
                  unint64_t v228 = 16 - v227;
                  if (v228 >= 8)
                  {
                    unint64_t v229 = ((v228 >> 3) + 7) >> 3;
                    switch((v228 >> 3) & 7)
                    {
                      case 1uLL:
                        goto LABEL_316;
                      case 2uLL:
                        goto LABEL_315;
                      case 3uLL:
                        goto LABEL_314;
                      case 4uLL:
                        goto LABEL_313;
                      case 5uLL:
                        goto LABEL_312;
                      case 6uLL:
                        goto LABEL_311;
                      case 7uLL:
                        goto LABEL_310;
                      default:
                        do
                        {
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
LABEL_310:
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
LABEL_311:
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
LABEL_312:
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
LABEL_313:
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
LABEL_314:
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
LABEL_315:
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
LABEL_316:
                          *(void *)unsigned int v226 = 0;
                          v226 += 8;
                          --v229;
                        }
                        while (v229);
                        break;
                    }
                  }
                  switch(v228 & 7)
                  {
                    case 1uLL:
                      goto LABEL_325;
                    case 2uLL:
                      goto LABEL_324;
                    case 3uLL:
                      goto LABEL_323;
                    case 4uLL:
                      goto LABEL_322;
                    case 5uLL:
                      goto LABEL_321;
                    case 6uLL:
                      goto LABEL_320;
                    case 7uLL:
                      *v226++ = 0;
LABEL_320:
                      *v226++ = 0;
LABEL_321:
                      *v226++ = 0;
LABEL_322:
                      *v226++ = 0;
LABEL_323:
                      *v226++ = 0;
LABEL_324:
                      *v226++ = 0;
LABEL_325:
                      *unsigned int v226 = 0;
                      __asm { BRAA            X8, X17 }
                      return result;
                    default:
                      __asm { BRAA            X8, X17 }
                      return result;
                  }
                }
                unint64_t v130 = v129 & 0xFFFFFFFFFFFFFFF8;
                if (v129 <= 0xFF)
                {
                  uint64_t v131 = *(void *)(v126 + 16);
                  uint64_t v132 = *(void *)(v126 + 24);
                  if (v132 == v131)
                  {
                    *(_DWORD *)v3 &= ~(1 << (v129 >> 3));
                  }
                  else
                  {
                    *(void *)(v131 + 24) = v132;
                    *(void *)(v132 + 16) = v131;
                  }
                  goto LABEL_256;
                }
                uint64_t v205 = *(void *)(v126 + 48);
                unsigned int v206 = *(void **)(v126 + 24);
                if (v206 == (void *)v126)
                {
                  unsigned int v208 = (void *)(v126 + 40);
                  unsigned int v209 = *(void **)(v126 + 40);
                  if (v209 || (unsigned int v208 = (void *)(v126 + 32), (v209 = *(void **)(v126 + 32)) != 0))
                  {
                    do
                    {
                      do
                      {
                        int v210 = v208;
                        unsigned int v206 = v209;
                        unsigned int v208 = v209 + 5;
                        unsigned int v209 = (void *)v209[5];
                      }
                      while (v209);
                      unsigned int v208 = v206 + 4;
                      unsigned int v209 = (void *)v206[4];
                    }
                    while (v209);
                    *int v210 = 0;
                    if (!v205) {
                      goto LABEL_256;
                    }
                  }
                  else
                  {
                    unsigned int v206 = 0;
                    if (!v205) {
                      goto LABEL_256;
                    }
                  }
                }
                else
                {
                  uint64_t v207 = *(void *)(v126 + 16);
                  *(void *)(v207 + 24) = v206;
                  v206[2] = v207;
                  if (!v205) {
                    goto LABEL_256;
                  }
                }
                uint64_t v211 = v3 + 8 * *(unsigned int *)(v126 + 56);
                if (v126 != *(void *)(v211 + 600))
                {
                  uint64_t v212 = 40;
                  if (*(void *)(v205 + 32) == v126) {
                    uint64_t v212 = 32;
                  }
                  *(void *)(v205 + v212) = v206;
                  if (!v206) {
                    goto LABEL_256;
                  }
                  goto LABEL_250;
                }
                *(void *)(v211 + 600) = v206;
                if (v206)
                {
LABEL_250:
                  v206[6] = v205;
                  uint64_t v213 = *(void *)(v126 + 32);
                  if (v213)
                  {
                    v206[4] = v213;
                    *(void *)(v213 + 48) = v206;
                  }
                  uint64_t v214 = *(void *)(v126 + 40);
                  if (v214)
                  {
                    v206[5] = v214;
                    *(void *)(v214 + 48) = v206;
                  }
                  goto LABEL_256;
                }
                *(_DWORD *)(v3 + 4) &= ~(1 << *(_DWORD *)(v126 + 56));
LABEL_256:
                v126 += v130;
                v128 += v130;
                unint64_t v129 = *(void *)(v126 + 8);
                goto LABEL_257;
              }
              unint64_t v203 = *(void *)(v3 + 8) + v128;
              *(void *)(v3 + 8) = v203;
              unint64_t v204 = v284;
              *(void *)(v3 + 32) = v284;
              *(void *)(v204 + 8) = v203 | 1;
              *(void *)(v204 + v203) = v203;
            }
LABEL_278:
            int v78 = v283;
            goto LABEL_96;
          }
        }
        while (1)
        {
          unint64_t v133 = *v122;
          if (*v122 <= v282)
          {
            unint64_t v134 = v122[1];
            unint64_t v135 = v133 + v134;
            if (v133 + v134 > v282) {
              break;
            }
          }
          unsigned int v122 = (unint64_t *)v122[2];
        }
        if (((v135 - 79) & 0xF) != 0) {
          uint64_t v136 = (79 - (int)v135) & 0xFLL;
        }
        else {
          uint64_t v136 = 0;
        }
        unint64_t v137 = v135 + v136 - 95;
        int v138 = (unsigned char *)(v282 + 32);
        if (v137 >= v282 + 32) {
          int v139 = (char *)v137;
        }
        else {
          int v139 = (char *)v282;
        }
        int v140 = v139 + 16;
        unint64_t v141 = v94 - 80;
        if (((v92 + 16) & 0xF) != 0) {
          uint64_t v142 = -(v92 + 16) & 0xFLL;
        }
        else {
          uint64_t v142 = 0;
        }
        unint64_t v143 = v92 + v142;
        uint64_t v144 = v141 - v142;
        *int v281 = v143;
        *unint64_t v280 = v144;
        *(void *)(v143 + 8) = v144 | 1;
        *(void *)(v92 + v141 + 8) = 80;
        *(void *)(v3 + 48) = qword_268B99568;
        *((void *)v139 + 1) = 51;
        *((void *)v139 + 6) = qword_268B99548 ^ v3;
        if (((v140 ^ v120) & 7) != 0)
        {
          uint64_t v145 = 0;
          do
          {
            int v146 = &v140[v145];
            *int v146 = v120[v145];
            v146[1] = v120[v145 + 1];
            v146[2] = v120[v145 + 2];
            v146[3] = v120[v145 + 3];
            v146[4] = v120[v145 + 4];
            v146[5] = v120[v145 + 5];
            v146[6] = v120[v145 + 6];
            v146[7] = v120[v145 + 7];
            v145 += 8;
          }
          while (v145 != 32);
        }
        else
        {
          unint64_t v164 = -(int)v120 & 7;
          unsigned int v165 = v139 + 16;
          switch((int)v164)
          {
            case 1:
              goto LABEL_204;
            case 2:
              goto LABEL_203;
            case 3:
              goto LABEL_202;
            case 4:
              goto LABEL_201;
            case 5:
              goto LABEL_200;
            case 6:
              goto LABEL_199;
            case 7:
              char v166 = *v120;
              unsigned int v120 = (char *)(v3 + 889);
              *int v140 = v166;
              unsigned int v165 = v139 + 17;
LABEL_199:
              char v167 = *v120++;
              *v165++ = v167;
LABEL_200:
              char v168 = *v120++;
              *v165++ = v168;
LABEL_201:
              char v169 = *v120++;
              *v165++ = v169;
LABEL_202:
              char v170 = *v120++;
              *v165++ = v170;
LABEL_203:
              char v171 = *v120++;
              *v165++ = v171;
LABEL_204:
              char v172 = *v120++;
              *v165++ = v172;
              break;
            default:
              break;
          }
          BOOL v173 = v164 <= 0x20;
          unint64_t v174 = 32 - v164;
          if (!v173) {
            unint64_t v174 = 0;
          }
          if (v174 >= 8)
          {
            unint64_t v175 = ((v174 >> 3) + 7) >> 3;
            switch((v174 >> 3) & 7)
            {
              case 1uLL:
                goto LABEL_286;
              case 2uLL:
                goto LABEL_285;
              case 3uLL:
                goto LABEL_284;
              case 4uLL:
                goto LABEL_283;
              case 5uLL:
                goto LABEL_282;
              case 6uLL:
                goto LABEL_281;
              case 7uLL:
                goto LABEL_280;
              default:
                do
                {
                  uint64_t v230 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v230;
                  v165 += 8;
LABEL_280:
                  uint64_t v231 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v231;
                  v165 += 8;
LABEL_281:
                  uint64_t v232 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v232;
                  v165 += 8;
LABEL_282:
                  uint64_t v233 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v233;
                  v165 += 8;
LABEL_283:
                  uint64_t v234 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v234;
                  v165 += 8;
LABEL_284:
                  uint64_t v235 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v235;
                  v165 += 8;
LABEL_285:
                  uint64_t v236 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v236;
                  v165 += 8;
LABEL_286:
                  uint64_t v237 = *(void *)v120;
                  v120 += 8;
                  *(void *)unsigned int v165 = v237;
                  v165 += 8;
                  --v175;
                }
                while (v175);
                break;
            }
          }
          switch(v174 & 7)
          {
            case 1uLL:
              goto LABEL_294;
            case 2uLL:
              goto LABEL_293;
            case 3uLL:
              goto LABEL_292;
            case 4uLL:
              goto LABEL_291;
            case 5uLL:
              goto LABEL_290;
            case 6uLL:
              goto LABEL_289;
            case 7uLL:
              char v238 = *v120++;
              *v165++ = v238;
LABEL_289:
              char v239 = *v120++;
              *v165++ = v239;
LABEL_290:
              char v240 = *v120++;
              *v165++ = v240;
LABEL_291:
              char v241 = *v120++;
              *v165++ = v241;
LABEL_292:
              char v242 = *v120++;
              *v165++ = v242;
LABEL_293:
              char v243 = *v120++;
              *v165++ = v243;
LABEL_294:
              *unsigned int v165 = *v120;
              break;
            default:
              break;
          }
        }
        *(void *)(v3 + 888) = v92;
        *(void *)(v3 + 896) = v94;
        *(_DWORD *)(v3 + 912) = v93;
        *(void *)(v3 + 904) = v140;
        int v244 = (char *)(v134 + v133);
        if (v134 + v133 <= (unint64_t)(v139 + 64)) {
          int v244 = v139 + 64;
        }
        ((void (*)(char *, void *, unint64_t))*(&off_26EFDBE20
                                                                + ((85
                                                                                                 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE))] ^ 0x9B])
                                                                + 1320))(v139 + 56, &unk_23C20CAF0, ((v244 - v139 - 57) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v139 != (char *)v282)
        {
          unint64_t v245 = v282;
          unint64_t v246 = (unint64_t)&v139[-v282];
          unint64_t v286 = (unint64_t)&v139[-v282];
          *((void *)v139 + 1) &= ~1uLL;
          *(void *)(v245 + 8) = (unint64_t)&v139[-v245] | 1;
          *(void *)int v139 = &v139[-v245];
          if ((unint64_t)&v139[-v245] > 0xFF)
          {
            unsigned int v271 = 31;
            if (!(v246 >> 24))
            {
              unsigned int v251 = (((v286 >> 8) + 1048320) >> 16) & 8;
              unsigned int v252 = (v286 >> 8) << v251;
              unsigned int v253 = (v252 << (((v252 + 520192) >> 16) & 4) << ((((v252 << (((v252 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                   - (((v252 + 520192) >> 16) & 4 | v251 | (((v252 << (((v252 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
              unsigned int v271 = ((v286 >> (v253 + 21)) & 1 | (2 * v253)) + 28;
            }
            unsigned int v272 = v271;
            uint64_t v254 = v3 + 8 * v271 + 600;
            *(_DWORD *)(v282 + 56) = v271;
            uint64_t v273 = v254;
            uint64_t v274 = v3 + 4;
            int v262 = v138;
            uint64_t v190 = (uint64_t)*(&off_26EFDBE20
                            + ((85 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 - qword_268B98A20) ^ 0xBE))] ^ 0x63])
                            + 1254);
            goto LABEL_265;
          }
          unint64_t v247 = v246 >> 3;
          uint64_t v248 = v3 + ((2 * v246) & 0x7FFFFFFF0) + 72;
          int v249 = 1 << v247;
          if ((v249 & *(_DWORD *)v3) != 0)
          {
            uint64_t v250 = *(void *)(v248 + 16);
          }
          else
          {
            *(_DWORD *)v3 |= v249;
            uint64_t v250 = v248;
          }
          unint64_t v255 = v282;
          *(void *)(v248 + 16) = v282;
          *(void *)(v250 + 24) = v255;
          *(void *)(v255 + 16) = v250;
          *(void *)(v255 + 24) = v248;
        }
      }
      else
      {
        unint64_t v149 = *(void *)(v3 + 24);
        if (!v149 || v92 < v149) {
          *(void *)(v3 + 24) = v92;
        }
        *(void *)(v3 + 888) = v92;
        *(void *)(v3 + 896) = v89;
        *(_DWORD *)(v3 + 912) = v93;
        uint64_t v150 = qword_268B99548;
        *(void *)(v3 + 56) = 4095;
        *(void *)(v3 + 64) = v150;
        *(void *)(v3 + 88) = v3 + 72;
        *(void *)(v3 + 96) = v3 + 72;
        *(void *)(v3 + 112) = v3 + 88;
        *(void *)(v3 + 104) = v3 + 88;
        *(void *)(v3 + 128) = v3 + 104;
        *(void *)(v3 + 120) = v3 + 104;
        *(void *)(v3 + 136) = v3 + 120;
        *(void *)(v3 + 144) = v3 + 120;
        *(void *)(v3 + 160) = v3 + 136;
        *(void *)(v3 + 152) = v3 + 136;
        *(void *)(v3 + 176) = v3 + 152;
        *(void *)(v3 + 168) = v3 + 152;
        *(void *)(v3 + 184) = v3 + 168;
        *(void *)(v3 + 192) = v3 + 168;
        *(void *)(v3 + 208) = v3 + 184;
        *(void *)(v3 + 200) = v3 + 184;
        *(void *)(v3 + 224) = v3 + 200;
        *(void *)(v3 + 216) = v3 + 200;
        *(void *)(v3 + 232) = v3 + 216;
        *(void *)(v3 + 240) = v3 + 216;
        *(void *)(v3 + 248) = v3 + 232;
        *(void *)(v3 + 256) = v3 + 232;
        *(void *)(v3 + 264) = v3 + 248;
        *(void *)(v3 + 272) = v3 + 248;
        *(void *)(v3 + 280) = v3 + 264;
        *(void *)(v3 + 288) = v3 + 264;
        *(void *)(v3 + 296) = v3 + 280;
        *(void *)(v3 + 304) = v3 + 280;
        *(void *)(v3 + 312) = v3 + 296;
        *(void *)(v3 + 320) = v3 + 296;
        *(void *)(v3 + 328) = v3 + 312;
        *(void *)(v3 + 336) = v3 + 312;
        *(void *)(v3 + 344) = v3 + 328;
        *(void *)(v3 + 352) = v3 + 328;
        *(void *)(v3 + 360) = v3 + 344;
        *(void *)(v3 + 368) = v3 + 344;
        *(void *)(v3 + 376) = v3 + 360;
        *(void *)(v3 + 384) = v3 + 360;
        *(void *)(v3 + 392) = v3 + 376;
        *(void *)(v3 + 400) = v3 + 376;
        *(void *)(v3 + 408) = v3 + 392;
        *(void *)(v3 + 416) = v3 + 392;
        *(void *)(v3 + 424) = v3 + 408;
        *(void *)(v3 + 432) = v3 + 408;
        *(void *)(v3 + 440) = v3 + 424;
        *(void *)(v3 + 448) = v3 + 424;
        *(void *)(v3 + 456) = v3 + 440;
        *(void *)(v3 + 464) = v3 + 440;
        *(void *)(v3 + 472) = v3 + 456;
        *(void *)(v3 + 480) = v3 + 456;
        *(void *)(v3 + 488) = v3 + 472;
        *(void *)(v3 + 504) = v3 + 488;
        *(void *)(v3 + 512) = v3 + 488;
        *(void *)(v3 + 496) = v3 + 472;
        *(void *)(v3 + 528) = v3 + 504;
        *(void *)(v3 + 520) = v3 + 504;
        *(void *)(v3 + 544) = v3 + 520;
        *(void *)(v3 + 536) = v3 + 520;
        *(void *)(v3 + 560) = v3 + 536;
        *(void *)(v3 + 552) = v3 + 536;
        *(void *)(v3 + 576) = v3 + 552;
        *(void *)(v3 + 568) = v3 + 552;
        *(void *)(v3 + 592) = v3 + 568;
        *(void *)(v3 + 584) = v3 + 568;
        unint64_t v151 = v3 + (*(void *)(v3 - 8) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v152 = v151 - 16;
        uint64_t v153 = v92 + v89 - (v151 - 16);
        if ((v151 & 0xF) != 0) {
          uint64_t v154 = -(int)v151 & 0xFLL;
        }
        else {
          uint64_t v154 = 0;
        }
        unint64_t v155 = v152 + v154;
        uint64_t v156 = v153 - v154 - 80;
        *int v281 = v155;
        *unint64_t v280 = v156;
        *(void *)(v155 + 8) = v156 | 1;
        *(void *)(v92 + v89 - 72) = 80;
        *(void *)(v3 + 48) = qword_268B99568;
      }
LABEL_306:
      if (*v280 > v279)
      {
        unint64_t v256 = v279;
        uint64_t v257 = *v280 - v279;
        *unint64_t v280 = v257;
        uint64_t v258 = *v281;
        unsigned int v259 = (uint64_t *)(*v281 + v256);
        *int v281 = (uint64_t)v259;
        v259[1] = v257 | 1;
        *(void *)(v258 + 8) = v256 | 3;
        *unsigned int v259 = qword_268B99548 ^ v3;
        uint64_t result = (void *)(v258 + 16);
        goto LABEL_97;
      }
      goto LABEL_308;
    }
  }
LABEL_97:
  if ((*(unsigned char *)(v3 + 880) & 2) != 0) {
    atomic_store(0, (unsigned int *)(v3 + 884));
  }
  return result;
}

uint64_t sub_23C1F1630(uint64_t result)
{
  unint64_t v3 = (unint64_t)&v116[qword_268B98A18 - qword_268B98A78];
  qword_268B98A78 = 1435369301 * v3 + 0xF280E155BE86816;
  qword_268B98A18 = 1435369301 * (v3 ^ 0x9BAD281A81DB4BBELL);
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t v5 = result - 16;
  uint64_t v6 = qword_268B99548 ^ *(void *)(result - 16 + (*(void *)(result - 8) & 0xFFFFFFFFFFFFFFF8));
  if ((*(unsigned char *)(v6 + 0x370) & 2) != 0)
  {
    uint64_t v2 = 1;
    if (atomic_exchange((atomic_uint *volatile)(v6 + 884), 1u))
    {
      unint64_t v1 = (unint64_t)byte_23C218140;
      char v7 = 1;
      while (*(_DWORD *)(v6 + 884) || atomic_exchange((atomic_uint *volatile)(v6 + 884), 1u))
      {
        if ((v7 & 0x3F) == 0) {
          uint64_t result = (*(&off_26EFDBE20
        }
                    + ((85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18))] ^ 0x6F])
                    + 1473))();
        ++v7;
      }
    }
  }
  uint64_t v8 = *(void *)(v4 - 8);
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v5 + (v8 & 0xFFFFFFFFFFFFFFF8);
  if ((v8 & 1) == 0)
  {
    unint64_t v11 = *(void *)v5;
    if ((v8 & 3) == 0)
    {
      uint64_t v14 = v9 + v11 + 32;
      uint64_t result = ((uint64_t (*)(unint64_t, uint64_t))*(&off_26EFDBE20
                                                                   + ((85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218940[byte_23C218840[(85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18))] ^ 0xB5])
                                                                   + 1594))(v5 - v11, v14);
      if (!result) {
        *(void *)(v6 + 856) -= v14;
      }
      goto LABEL_117;
    }
    v5 -= v11;
    v9 += v11;
    if (v5 != *(void *)(v6 + 32))
    {
      if (v11 <= 0xFF)
      {
        uint64_t v12 = *(void *)(v5 + 16);
        uint64_t v13 = *(void *)(v5 + 24);
        if (v13 == v12)
        {
          *(_DWORD *)v6 &= ~(1 << (v11 >> 3));
        }
        else
        {
          *(void *)(v12 + 24) = v13;
          *(void *)(v13 + 16) = v12;
        }
        goto LABEL_40;
      }
      uint64_t v15 = *(void *)(v5 + 48);
      int v16 = *(void **)(v5 + 24);
      if (v16 == (void *)v5)
      {
        unsigned int v18 = (void *)(v5 + 40);
        int v19 = *(void **)(v5 + 40);
        if (v19 || (unsigned int v18 = (void *)(v5 + 32), (v19 = *(void **)(v5 + 32)) != 0))
        {
          do
          {
            do
            {
              unsigned int v20 = v18;
              int v16 = v19;
              unsigned int v18 = v19 + 5;
              int v19 = (void *)v19[5];
            }
            while (v19);
            unsigned int v18 = v16 + 4;
            int v19 = (void *)v16[4];
          }
          while (v19);
          *unsigned int v20 = 0;
          if (!v15) {
            goto LABEL_40;
          }
        }
        else
        {
          int v16 = 0;
          if (!v15) {
            goto LABEL_40;
          }
        }
      }
      else
      {
        uint64_t v17 = *(void *)(v5 + 16);
        *(void *)(v17 + 24) = v16;
        v16[2] = v17;
        if (!v15) {
          goto LABEL_40;
        }
      }
      uint64_t v21 = v6 + 8 * *(unsigned int *)(v5 + 56);
      if (v5 == *(void *)(v21 + 600))
      {
        *(void *)(v21 + 600) = v16;
        if (!v16)
        {
          *(_DWORD *)(v6 + 4) &= ~(1 << *(_DWORD *)(v5 + 56));
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v22 = 40;
        if (*(void *)(v15 + 32) == v5) {
          uint64_t v22 = 32;
        }
        *(void *)(v15 + v22) = v16;
        if (!v16) {
          goto LABEL_40;
        }
      }
      v16[6] = v15;
      uint64_t v23 = *(void *)(v5 + 32);
      if (v23)
      {
        v16[4] = v23;
        *(void *)(v23 + 48) = v16;
      }
      uint64_t v24 = *(void *)(v5 + 40);
      if (v24)
      {
        v16[5] = v24;
        *(void *)(v24 + 48) = v16;
      }
      goto LABEL_40;
    }
    if ((~*(_DWORD *)(v10 + 8) & 3) == 0)
    {
      *(void *)(v6 + 8) = v9;
      *(void *)(v10 + 8) &= ~1uLL;
      *(void *)(v5 + 8) = v9 | 1;
      *(void *)unint64_t v10 = v9;
      goto LABEL_117;
    }
  }
LABEL_40:
  unint64_t v25 = *(void *)(v10 + 8);
  if ((v25 & 2) != 0)
  {
    *(void *)(v10 + 8) = v25 & 0xFFFFFFFFFFFFFFFELL;
    *(void *)(v5 + 8) = v9 | 1;
    *(void *)(v5 + v9) = v9;
    goto LABEL_47;
  }
  if (v10 == *(void *)(v6 + 40))
  {
    uint64_t v2 = v6 + 16;
    unint64_t v33 = *(void *)(v6 + 16) + v9;
    *(void *)(v6 + 16) = v33;
    *(void *)(v6 + 40) = v5;
    *(void *)(v5 + 8) = v33 | 1;
    if (v5 == *(void *)(v6 + 32))
    {
      *(void *)(v6 + 32) = 0;
      *(void *)(v6 + 8) = 0;
    }
    if (v33 <= *(void *)(v6 + 48)) {
      goto LABEL_117;
    }
    unint64_t v34 = *(void *)(v6 + 40);
    if (!v34) {
      goto LABEL_117;
    }
    if (*(void *)v2 >= 0x51uLL)
    {
      unint64_t v1 = ((*(void *)v2 + (void)xmmword_268B99558 - 81) / (unint64_t)xmmword_268B99558 - 1)
         * xmmword_268B99558;
      unint64_t v35 = v6 + 888;
      uint64_t v36 = v6 + 888;
      do
      {
        if (*(void *)v36 <= v34 && *(void *)v36 + *(void *)(v36 + 8) > v34) {
          break;
        }
        uint64_t v36 = *(void *)(v36 + 16);
      }
      while (v36);
      if ((*(_DWORD *)(v36 + 24) & 9) == 1)
      {
        unint64_t v37 = *(void *)(v36 + 8);
        unint64_t v38 = v37 - v1;
        if (v37 >= v1)
        {
          unint64_t v39 = *(void *)v36;
          unint64_t v40 = *(void *)v36 + v37;
          while (v35 < v39 || v35 >= v40)
          {
            unint64_t v35 = *(void *)(v35 + 16);
            if (!v35)
            {
              uint64_t result = ((uint64_t (*)(unint64_t, void))*(&off_26EFDBE20
                                                                          + ((85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C217F40[byte_23C217E40[(85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18))] ^ 0x7C])
                                                                          + 1559))(v39 + v38, ((*(void *)v2 + (void)xmmword_268B99558 - 81) / (unint64_t)xmmword_268B99558 - 1)* xmmword_268B99558);
              char v50 = 1;
              if (v1)
              {
                if (result)
                {
                  unint64_t v1 = 0;
                }
                else
                {
                  *(void *)(v36 + 8) -= v1;
                  *(void *)(v6 + 856) -= v1;
                  uint64_t v61 = *(void *)(v6 + 40);
                  unint64_t v62 = *(void *)(v6 + 16) - v1;
                  if (((v61 + 16) & 0xF) != 0) {
                    uint64_t v63 = -(v61 + 16) & 0xFLL;
                  }
                  else {
                    uint64_t v63 = 0;
                  }
                  uint64_t v64 = v61 + v63;
                  unint64_t v65 = v62 - v63;
                  *(void *)(v6 + 40) = v64;
                  *(void *)(v6 + 16) = v65;
                  *(void *)(v64 + 8) = v65 | 1;
                  *(void *)(v61 + v62 + 8) = 80;
                  *(void *)(v6 + 48) = qword_268B99568;
                }
              }
              goto LABEL_145;
            }
          }
        }
      }
    }
    unint64_t v1 = 0;
    char v50 = 1;
LABEL_145:
    uint64_t v76 = *(void *)(v6 + 904);
    if (!v76 || (*(_DWORD *)(v76 + 24) & 9) != 1)
    {
      uint64_t v77 = 0;
      goto LABEL_160;
    }
    uint64_t v77 = 0;
    uint64_t result = *(void *)v76;
    uint64_t v78 = *(void *)(v76 + 8);
    uint64_t v79 = *(void *)v76 + 16;
    if ((v79 & 0xF) != 0) {
      uint64_t v80 = -(int)v79 & 0xFLL;
    }
    else {
      uint64_t v80 = 0;
    }
    uint64_t v81 = result + v80;
    unint64_t v82 = *(void *)(result + v80 + 8);
    unint64_t v83 = v82 & 0xFFFFFFFFFFFFFFF8;
    if ((v82 & 3) != 1 || result + v80 + (v82 & 0xFFFFFFFFFFFFFFF8) < result + v78 - 80)
    {
LABEL_160:
      *(void *)(v6 + 56) = 4095;
      if (v1 + v77) {
        char v89 = 0;
      }
      else {
        char v89 = v50;
      }
      if ((v89 & 1) != 0 && *(void *)v2 > *(void *)(v6 + 48)) {
        *(void *)(v6 + 48) = -1;
      }
      goto LABEL_117;
    }
    uint64_t v85 = *(void *)(v76 + 16);
    if (v81 == *(void *)(v6 + 32))
    {
      *(void *)(v6 + 32) = 0;
      *(void *)(v6 + 8) = 0;
      goto LABEL_183;
    }
    uint64_t v86 = *(void *)(v81 + 48);
    unint64_t v87 = *(void **)(v81 + 24);
    if (v87 == (void *)v81)
    {
      unint64_t v90 = (void *)(v81 + 40);
      unint64_t v91 = *(void **)(v81 + 40);
      if (v91 || (unint64_t v90 = (void *)(v81 + 32), (v91 = *(void **)(v81 + 32)) != 0))
      {
        do
        {
          do
          {
            unint64_t v92 = v90;
            unint64_t v87 = v91;
            unint64_t v90 = v91 + 5;
            unint64_t v91 = (void *)v91[5];
          }
          while (v91);
          unint64_t v90 = v87 + 4;
          unint64_t v91 = (void *)v87[4];
        }
        while (v91);
        *unint64_t v92 = 0;
        if (!v86) {
          goto LABEL_183;
        }
      }
      else
      {
        unint64_t v87 = 0;
        if (!v86) {
          goto LABEL_183;
        }
      }
    }
    else
    {
      uint64_t v88 = *(void *)(v81 + 16);
      *(void *)(v88 + 24) = v87;
      v87[2] = v88;
      if (!v86) {
        goto LABEL_183;
      }
    }
    uint64_t v93 = v6 + 8 * *(unsigned int *)(v81 + 56);
    if (v81 == *(void *)(v93 + 600))
    {
      *(void *)(v93 + 600) = v87;
      if (!v87)
      {
        *(_DWORD *)(v6 + 4) &= ~(1 << *(_DWORD *)(v81 + 56));
        goto LABEL_183;
      }
    }
    else
    {
      uint64_t v94 = 40;
      if (*(void *)(v86 + 32) == v81) {
        uint64_t v94 = 32;
      }
      *(void *)(v86 + v94) = v87;
      if (!v87)
      {
LABEL_183:
        uint64_t result = (*(&off_26EFDBE20
                  + ((85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218740[byte_23C218640[(85 * (qword_268B98A78 ^ 0xBE ^ qword_268B98A18))] ^ 0xF7])
                  + 1373))();
        if (result)
        {
          if (v82 >= 0x100)
          {
            if (v82 >> 24)
            {
              unsigned int v97 = 31;
            }
            else
            {
              unsigned int v98 = (((v82 >> 8) + 1048320) >> 16) & 8;
              unsigned int v99 = (v82 >> 8) << v98;
              unsigned int v100 = (v99 << (((v99 + 520192) >> 16) & 4) << ((((v99 << (((v99 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                   - (((v99 + 520192) >> 16) & 4 | v98 | (((v99 << (((v99 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
              unsigned int v97 = ((v83 >> (v100 + 21)) & 1 | (2 * v100)) + 28;
            }
          }
          else
          {
            unsigned int v97 = 0;
          }
          *(_DWORD *)(v81 + 56) = v97;
          unint64_t v101 = (unsigned char *)(v81 + 32);
          unsigned int v102 = -(v81 + 32) & 7;
          switch(v102)
          {
            case 1u:
              goto LABEL_197;
            case 2u:
              goto LABEL_196;
            case 3u:
              goto LABEL_195;
            case 4u:
              goto LABEL_194;
            case 5u:
              goto LABEL_193;
            case 6u:
              goto LABEL_192;
            case 7u:
              *unint64_t v101 = 0;
              unint64_t v101 = (unsigned char *)(v81 + 33);
LABEL_192:
              *v101++ = 0;
LABEL_193:
              *v101++ = 0;
LABEL_194:
              *v101++ = 0;
LABEL_195:
              *v101++ = 0;
LABEL_196:
              *v101++ = 0;
LABEL_197:
              *v101++ = 0;
              break;
            default:
              break;
          }
          unint64_t v103 = (uint64_t *)(v6 + 8 * v97 + 600);
          unint64_t v104 = 16 - v102;
          if (v104 >= 8)
          {
            unint64_t v105 = ((v104 >> 3) + 7) >> 3;
            switch(v104 >> 3)
            {
              case 1uLL:
                goto LABEL_203;
              case 2uLL:
                goto LABEL_202;
              case 3uLL:
                goto LABEL_201;
              default:
                do
                {
                  *(_OWORD *)unint64_t v101 = 0u;
                  *((_OWORD *)v101 + 1) = 0u;
                  *((void *)v101 + 4) = 0;
                  v101 += 40;
LABEL_201:
                  *(void *)unint64_t v101 = 0;
                  v101 += 8;
LABEL_202:
                  *(void *)unint64_t v101 = 0;
                  v101 += 8;
LABEL_203:
                  *(void *)unint64_t v101 = 0;
                  v101 += 8;
                  --v105;
                }
                while (v105);
                break;
            }
          }
          switch(v104 & 7)
          {
            case 1uLL:
              goto LABEL_211;
            case 2uLL:
              goto LABEL_210;
            case 3uLL:
              goto LABEL_209;
            case 4uLL:
              goto LABEL_208;
            case 5uLL:
              goto LABEL_207;
            case 6uLL:
              goto LABEL_206;
            case 7uLL:
              *v101++ = 0;
LABEL_206:
              *v101++ = 0;
LABEL_207:
              *v101++ = 0;
LABEL_208:
              *v101++ = 0;
LABEL_209:
              *v101++ = 0;
LABEL_210:
              *v101++ = 0;
LABEL_211:
              *unint64_t v101 = 0;
              break;
            default:
              break;
          }
          int v106 = *(_DWORD *)(v6 + 4);
          int v107 = 1 << v97;
          if ((v106 & (1 << v97)) != 0)
          {
            uint64_t v108 = *v103;
            if (v97 == 31) {
              LOBYTE(v109) = 0;
            }
            else {
              int v109 = 57 - (v97 >> 1);
            }
            unint64_t v110 = v83 << v109;
            while (1)
            {
              uint64_t v111 = v108;
              if ((*(void *)(v108 + 8) & 0xFFFFFFFFFFFFFFF8) == v83) {
                break;
              }
              unint64_t v112 = v108 + 8 * (v110 >> 63);
              uint64_t v114 = *(void *)(v112 + 32);
              uint64_t v113 = (uint64_t *)(v112 + 32);
              uint64_t v108 = v114;
              v110 *= 2;
              if (!v114)
              {
                uint64_t v77 = 0;
                *uint64_t v113 = v81;
                *(void *)(v81 + 48) = v111;
                goto LABEL_221;
              }
            }
            uint64_t v77 = 0;
            uint64_t v115 = *(void *)(v108 + 16);
            *(void *)(v115 + 24) = v81;
            *(void *)(v111 + 16) = v81;
            *(void *)(v81 + 16) = v115;
            *(void *)(v81 + 24) = v111;
            *(void *)(v81 + 48) = 0;
          }
          else
          {
            uint64_t v77 = 0;
            *(_DWORD *)(v6 + 4) = v106 | v107;
            *unint64_t v103 = v81;
            *(void *)(v81 + 48) = v103;
LABEL_221:
            *(void *)(v81 + 16) = v81;
            *(void *)(v81 + 24) = v81;
          }
        }
        else
        {
          *(void *)(v6 + 856) -= v78;
          *(void *)(v6 + 904) = v85;
          uint64_t v77 = v78;
        }
        goto LABEL_160;
      }
    }
    v87[6] = v86;
    uint64_t v95 = *(void *)(v81 + 32);
    if (v95)
    {
      v87[4] = v95;
      *(void *)(v95 + 48) = v87;
    }
    uint64_t v96 = *(void *)(v81 + 40);
    if (v96)
    {
      v87[5] = v96;
      *(void *)(v96 + 48) = v87;
    }
    goto LABEL_183;
  }
  if (v10 == *(void *)(v6 + 32))
  {
    unint64_t v49 = *(void *)(v6 + 8) + v9;
    *(void *)(v6 + 8) = v49;
    *(void *)(v6 + 32) = v5;
    *(void *)(v5 + 8) = v49 | 1;
    *(void *)(v5 + v49) = v49;
    goto LABEL_117;
  }
  v9 += v25 & 0xFFFFFFFFFFFFFFF8;
  if (v25 <= 0xFF)
  {
    uint64_t v27 = *(void *)(v10 + 16);
    uint64_t v26 = *(void *)(v10 + 24);
    if (v26 == v27)
    {
      *(_DWORD *)v6 &= ~(1 << (v25 >> 3));
    }
    else
    {
      *(void *)(v27 + 24) = v26;
      *(void *)(v26 + 16) = v27;
    }
    goto LABEL_102;
  }
  uint64_t v51 = *(void *)(v10 + 48);
  uint64_t v52 = *(void **)(v10 + 24);
  if (v52 == (void *)v10)
  {
    uint64_t v54 = (void *)(v10 + 40);
    int v55 = *(void **)(v10 + 40);
    if (v55 || (uint64_t v54 = (void *)(v10 + 32), (v55 = *(void **)(v10 + 32)) != 0))
    {
      do
      {
        do
        {
          unsigned int v56 = v54;
          uint64_t v52 = v55;
          uint64_t v54 = v55 + 5;
          int v55 = (void *)v55[5];
        }
        while (v55);
        uint64_t v54 = v52 + 4;
        int v55 = (void *)v52[4];
      }
      while (v55);
      *unsigned int v56 = 0;
      if (!v51) {
        goto LABEL_102;
      }
    }
    else
    {
      uint64_t v52 = 0;
      if (!v51) {
        goto LABEL_102;
      }
    }
  }
  else
  {
    uint64_t v53 = *(void *)(v10 + 16);
    *(void *)(v53 + 24) = v52;
    v52[2] = v53;
    if (!v51) {
      goto LABEL_102;
    }
  }
  uint64_t v57 = v6 + 8 * *(unsigned int *)(v10 + 56);
  if (v10 == *(void *)(v57 + 600))
  {
    *(void *)(v57 + 600) = v52;
    if (!v52)
    {
      *(_DWORD *)(v6 + 4) &= ~(1 << *(_DWORD *)(v10 + 56));
      goto LABEL_102;
    }
    goto LABEL_97;
  }
  uint64_t v58 = 40;
  if (*(void *)(v51 + 32) == v10) {
    uint64_t v58 = 32;
  }
  *(void *)(v51 + v58) = v52;
  if (v52)
  {
LABEL_97:
    v52[6] = v51;
    uint64_t v59 = *(void *)(v10 + 32);
    if (v59)
    {
      v52[4] = v59;
      *(void *)(v59 + 48) = v52;
    }
    uint64_t v60 = *(void *)(v10 + 40);
    if (v60)
    {
      v52[5] = v60;
      *(void *)(v60 + 48) = v52;
    }
  }
LABEL_102:
  *(void *)(v5 + 8) = v9 | 1;
  *(void *)(v5 + v9) = v9;
  if (v5 == *(void *)(v6 + 32))
  {
    *(void *)(v6 + 8) = v9;
    goto LABEL_117;
  }
LABEL_47:
  if (v9 > 0xFF)
  {
    if (v9 >> 24)
    {
      unsigned int v32 = 31;
    }
    else
    {
      unsigned int v41 = (((v9 >> 8) + 1048320) >> 16) & 8;
      unsigned int v42 = (v9 >> 8) << v41;
      unsigned int v43 = (v42 << (((v42 + 520192) >> 16) & 4) << ((((v42 << (((v42 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
          - (((v42 + 520192) >> 16) & 4 | v41 | (((v42 << (((v42 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
      unsigned int v32 = ((v9 >> (v43 + 21)) & 1 | (2 * v43)) + 28;
    }
    *(_DWORD *)(v5 + 56) = v32;
    unsigned int v44 = (unsigned char *)(v5 + 32);
    unsigned int v45 = -(v5 + 32) & 7;
    switch(v45)
    {
      case 1u:
        goto LABEL_72;
      case 2u:
        goto LABEL_71;
      case 3u:
        goto LABEL_70;
      case 4u:
        goto LABEL_69;
      case 5u:
        goto LABEL_68;
      case 6u:
        goto LABEL_67;
      case 7u:
        *unsigned int v44 = 0;
        unsigned int v44 = (unsigned char *)(v5 + 33);
LABEL_67:
        *v44++ = 0;
LABEL_68:
        *v44++ = 0;
LABEL_69:
        *v44++ = 0;
LABEL_70:
        *v44++ = 0;
LABEL_71:
        *v44++ = 0;
LABEL_72:
        *v44++ = 0;
        break;
      default:
        break;
    }
    unsigned int v46 = (uint64_t *)(v6 + 8 * v32 + 600);
    unint64_t v47 = 16 - v45;
    if (v47 >= 8)
    {
      unint64_t v48 = ((v47 >> 3) + 7) >> 3;
      switch(v47 >> 3)
      {
        case 1uLL:
          goto LABEL_123;
        case 2uLL:
          goto LABEL_122;
        case 3uLL:
          goto LABEL_121;
        default:
          do
          {
            *(_OWORD *)unsigned int v44 = 0u;
            *((_OWORD *)v44 + 1) = 0u;
            *((void *)v44 + 4) = 0;
            v44 += 40;
LABEL_121:
            *(void *)unsigned int v44 = 0;
            v44 += 8;
LABEL_122:
            *(void *)unsigned int v44 = 0;
            v44 += 8;
LABEL_123:
            *(void *)unsigned int v44 = 0;
            v44 += 8;
            --v48;
          }
          while (v48);
          break;
      }
    }
    switch(v47 & 7)
    {
      case 1uLL:
        goto LABEL_131;
      case 2uLL:
        goto LABEL_130;
      case 3uLL:
        goto LABEL_129;
      case 4uLL:
        goto LABEL_128;
      case 5uLL:
        goto LABEL_127;
      case 6uLL:
        goto LABEL_126;
      case 7uLL:
        *v44++ = 0;
LABEL_126:
        *v44++ = 0;
LABEL_127:
        *v44++ = 0;
LABEL_128:
        *v44++ = 0;
LABEL_129:
        *v44++ = 0;
LABEL_130:
        *v44++ = 0;
LABEL_131:
        *unsigned int v44 = 0;
        break;
      default:
        break;
    }
    int v66 = *(_DWORD *)(v6 + 4);
    if ((v66 & (1 << v32)) != 0)
    {
      uint64_t v67 = *v46;
      if (v32 == 31) {
        LOBYTE(v68) = 0;
      }
      else {
        int v68 = 57 - (v32 >> 1);
      }
      unint64_t v69 = v9 << v68;
      while (1)
      {
        uint64_t v70 = v67;
        if ((*(void *)(v67 + 8) & 0xFFFFFFFFFFFFFFF8) == v9) {
          break;
        }
        unint64_t v71 = v67 + 8 * (v69 >> 63);
        uint64_t v73 = *(void *)(v71 + 32);
        unint64_t v72 = (uint64_t *)(v71 + 32);
        uint64_t v67 = v73;
        v69 *= 2;
        if (!v73)
        {
          *unint64_t v72 = v5;
          *(void *)(v5 + 48) = v70;
          goto LABEL_141;
        }
      }
      uint64_t v74 = *(void *)(v67 + 16);
      *(void *)(v74 + 24) = v5;
      *(void *)(v67 + 16) = v5;
      *(void *)(v5 + 16) = v74;
      *(void *)(v5 + 24) = v67;
      *(void *)(v5 + 48) = 0;
    }
    else
    {
      *(_DWORD *)(v6 + 4) = v66 | (1 << v32);
      *unsigned int v46 = v5;
      *(void *)(v5 + 48) = v46;
LABEL_141:
      *(void *)(v5 + 16) = v5;
      *(void *)(v5 + 24) = v5;
    }
    uint64_t v75 = *(void *)(v6 + 56) - 1;
    *(void *)(v6 + 56) = v75;
    if (v75) {
      goto LABEL_117;
    }
    char v50 = 0;
    goto LABEL_145;
  }
  unint64_t v28 = v9 >> 3;
  uint64_t v29 = v6 + ((2 * v9) & 0x7FFFFFFF0) + 72;
  int v30 = 1 << v28;
  if ((*(_DWORD *)v6 & v30) != 0)
  {
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    *(_DWORD *)v6 |= v30;
    uint64_t v31 = v29;
  }
  *(void *)(v29 + 16) = v5;
  *(void *)(v31 + 24) = v5;
  *(void *)(v5 + 16) = v31;
  *(void *)(v5 + 24) = v29;
LABEL_117:
  if ((*(unsigned char *)(v6 + 880) & 2) != 0) {
    atomic_store(0, (unsigned int *)(v6 + 884));
  }
  return result;
}

void *sub_23C1F2498(void *result)
{
  uint64_t v1 = (qword_268B98A18 ^ qword_268B98A48) - (void)&v4;
  qword_268B98A48 = 1435369301 * v1 + 0xF280E155BE86816;
  qword_268B98A18 = 1435369301 * (v1 ^ 0x9BAD281A81DB4BBELL);
  if (result)
  {
    uint64_t v2 = result;
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0xE4])
                                  + 1482))(*result);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18))] ^ 0xCC])
                                  + 1493))(v2[2]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0x9B])
                                  + 1366))(v2[4]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218340[byte_23C218240[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0x50])
                                  + 1342))(v2[6]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218540[byte_23C218440[(85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18))] ^ 0x9B])
                                  + 1366))(v2[8]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0x63])
                                  + 1377))(v2[10]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C217F40[byte_23C217E40[(85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18))] ^ 0x7C])
                                  + 1517))(v2[12]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 - qword_268B98A48) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A48) ^ 0xBE))] ^ 0x6F])
                                  + 1436))(v2[14]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0x63])
                                  + 1377))(v2[16]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 - qword_268B98A48) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 - qword_268B98A48) ^ 0xBE))] ^ 0xF3])
                                  + 1458))(v2[18]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 - qword_268B98A48) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A48) ^ 0xBE))] ^ 0x6F])
                                  + 1436))(v2[20]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0x6F])
                                  + 1436))(v2[22]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0xCC])
                                  + 1493))(v2[24]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A48 ^ 0xBE ^ qword_268B98A18))] ^ 0xCC])
                                  + 1493))(v2[26]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0xE4])
                                  + 1482))(v2[28]);
    ((void (*)(void))*(&off_26EFDBE20
                                  + ((85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0x43])
                                  + 1423))(v2[30]);
    unint64_t v3 = (uint64_t (*)(void *))*(&off_26EFDBE20
                                           + ((85
                                                                            * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 + qword_268B98A48) ^ 0xBE))] ^ 0x7C])
                                           + 1517);
    return (void *)v3(v2);
  }
  return result;
}

uint64_t sub_23C1F2A78(uint64_t result, unsigned __int8 *a2, int a3, char a4)
{
  qword_268B98AA0 = 1435369301 * ((qword_268B98AA0 - (void)&v9 + qword_268B98A18) ^ 0x9BAD281A81DB4BBELL);
  qword_268B98A18 = qword_268B98AA0;
  if (a3)
  {
    int v5 = a3;
    char v7 = (void *)result;
    do
    {
      unsigned int v8 = *a2++;
      uint64_t result = ((uint64_t (*)(void, void, void, void))*(&off_26EFDBE20
                                                                        + ((85 * ((qword_268B98A18 + qword_268B98AA0) ^ 0xBE)) ^ byte_23C218940[byte_23C218840[(85 * ((qword_268B98A18 + qword_268B98AA0) ^ 0xBE))] ^ 0xB5])
                                                                        + 1607))(*(void *)(*v7 + 16 * (a4 & 0xF)), 0, *(unsigned __int8 *)(*v7 + 16 * (a4 & 0xF) + 8), v8);
      ++a4;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_23C1F2BAC(uint64_t result, unsigned int a2, int a3, char a4)
{
  uint64_t v4 = result;
  unint64_t v5 = (qword_268B98A18 + qword_268B98A80) ^ (unint64_t)&v16;
  qword_268B98A80 = (1435369301 * v5) ^ 0x9BAD281A81DB4BBELL;
  qword_268B98A18 = 1435369301 * (v5 ^ 0x9BAD281A81DB4BBELL);
  if (a3)
  {
    char v6 = &v15 ^ a2;
    unsigned __int8 v7 = v6 ^ a4;
    unsigned __int8 v8 = v6 + a4;
    if (a4) {
      unsigned __int8 v8 = v7;
    }
    unsigned __int8 v9 = a4 - v8;
    unsigned __int8 v10 = v8 ^ a4;
    if (*(unsigned char *)(result + a2))
    {
      unsigned __int8 v10 = 0;
      unsigned __int8 v11 = 0;
    }
    else
    {
      unsigned __int8 v11 = v8;
    }
    if (*(unsigned char *)(result + a2) != 1)
    {
      unsigned __int8 v9 = v10;
      unsigned __int8 v8 = v11;
    }
    unsigned __int8 v14 = v8;
    int v12 = 2 * a2;
    uint64_t v13 = (a3 - 1);
    ((void (*)(uint64_t, void, uint64_t, void))*(&off_26EFDBE20
                                                            + ((85
                                                                                             * ((qword_268B98A18
                                                                                               - qword_268B98A80) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A80) ^ 0xBE))] ^ 0xCC])
                                                            + 1548))(result, (2 * a2) | 1, v13, v9);
    return ((uint64_t (*)(uint64_t, void, uint64_t, void))*(&off_26EFDBE20
                                                                      + ((85 * ((qword_268B98A18 - qword_268B98A80) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A80) ^ 0xBE))] ^ 0x6F])
                                                                      + 1491))(v4, (v12 + 2), v13, v14);
  }
  else
  {
    *(unsigned char *)(result + a2) = a4;
  }
  return result;
}

uint64_t sub_23C1F2D58(uint64_t result, unsigned char *a2, int a3, char a4)
{
  uint64_t v4 = qword_268B98A18 - qword_268B98A98 - (void)&v9;
  qword_268B98A98 = 1435369301 * (v4 + 0x6452D7E57E24B442);
  qword_268B98A18 = 1435369301 * (v4 ^ 0x9BAD281A81DB4BBELL);
  if (a3)
  {
    int v6 = a3;
    uint64_t v8 = result;
    do
    {
      uint64_t result = ((uint64_t (*)(void, void, void))*(&off_26EFDBE20
                                                                + ((85
                                                                                                 * ((qword_268B98A18 + qword_268B98A98) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 + qword_268B98A98) ^ 0xBE))] ^ 0xBF])
                                                                + 1399))(*(void *)(v8 + 16 * (a4 & 0xF)), 0, *(unsigned __int8 *)(v8 + 16 * (a4 & 0xF) + 8));
      *a2++ = result;
      ++a4;
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_23C1F2E90(uint64_t a1, unsigned int a2, int a3)
{
  unint64_t v5 = (unint64_t)&v12 ^ qword_268B98A38 ^ qword_268B98A18;
  qword_268B98A38 = (1435369301 * v5) ^ 0x9BAD281A81DB4BBELL;
  qword_268B98A18 = 1435369301 * (v5 ^ 0x9BAD281A81DB4BBELL);
  if (a3)
  {
    int v6 = 2 * a2;
    uint64_t v7 = (a3 - 1);
    char v8 = ((uint64_t (*)(uint64_t, void, uint64_t))*(&off_26EFDBE20
                                                            + ((85
                                                                                             * ((qword_268B98A18
                                                                                               + qword_268B98A38) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 + qword_268B98A38) ^ 0xBE))] ^ 0x63])
                                                            + 1364))(a1, (2 * a2) | 1, v7);
    char v9 = ((uint64_t (*)(uint64_t, void, uint64_t))*(&off_26EFDBE20
                                                            + ((85
                                                                                             * (qword_268B98A38 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A38 ^ 0xBE ^ qword_268B98A18))] ^ 0x43])
                                                            + 1410))(a1, (v6 + 2), v7);
    if (*(unsigned char *)(a1 + a2) == 1)
    {
      return (v9 + v8);
    }
    else if (!*(unsigned char *)(a1 + a2))
    {
      return (v9 ^ v8);
    }
  }
  else
  {
    return *(unsigned __int8 *)(a1 + a2);
  }
  return v10;
}

uint64_t sub_23C1F3024(uint64_t *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = qword_268B98A18 - qword_268B98A30 - (void)&v22;
  qword_268B98A30 = (1435369301 * v2) ^ 0x9BAD281A81DB4BBELL;
  qword_268B98A18 = 1435369301 * (v2 ^ 0x9BAD281A81DB4BBELL);
  char v3 = byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A30) ^ 0xBE))] ^ 0xA0];
  unsigned int v21 = dword_26EFDEEB0 ^ a1;
  uint64_t v4 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                         + ((85
                                                                          * ((qword_268B98A18 - qword_268B98A30) ^ 0xBE)) ^ v3)
                                         + 1564))(256);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = 0;
    unsigned int v20 = v1;
    *uint64_t v1 = v4;
    int v7 = v4 + 2;
    for (uint64_t i = 1; ; ++i)
    {
      unsigned int v21 = v7 + v6 + v21 * &v21;
      char v9 = (void *)(v5 + v6);
      *(unsigned char *)(v5 + v6 + 8) = v21 & 3;
      char v10 = v21;
      int v11 = (v7 + v6) & 3;
      char v12 = (unsigned char *)((uint64_t (*)(void))*(&off_26EFDBE20
                                                      + ((85
                                                                                       * (qword_268B98A30 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218540[byte_23C218440[(85 * (qword_268B98A30 ^ 0xBE ^ qword_268B98A18))] ^ 0xF3])
                                                      + 1494))(~(-2 << ((v7 + v6) & 3)));
      if (!v12) {
        break;
      }
      if (v11)
      {
        int v13 = -1 << v11;
        if ((-1 << v11) >= 0xFFFFFFFE) {
          int v13 = -2;
        }
        *char v12 = ((v10 * v10) ^ 1) & 1;
        if (v11 != 1)
        {
          char v14 = (((v10 * v10) ^ 1) * ((v10 * v10) ^ 1)) ^ 1;
          v12[1] = v14 & 1;
          char v15 = (v14 * v14) ^ 1;
          v12[2] = v15 & 1;
          if (v13 != -4)
          {
            char v16 = (v15 * v15) ^ 1;
            v12[3] = v16 & 1;
            char v17 = (v16 * v16) ^ 1;
            v12[4] = v17 & 1;
            if (v13 != -6)
            {
              v12[5] = (v17 & 1) == 0;
              v12[6] = (v17 & 1) != 0;
            }
          }
        }
      }
      *(void *)(v5 + v6) = v12;
      v6 += 16;
      if (v6 == 256) {
        return 0;
      }
    }
    *char v9 = 0;
    do
    {
      if (*v9) {
        (*(&off_26EFDBE20
      }
         + ((85 * ((qword_268B98A18 + qword_268B98A30) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 + qword_268B98A30) ^ 0xBE))] ^ 0x63])
         + 1377))();
      v9 -= 2;
    }
    while (i-- > 1);
    ((void (*)(uint64_t))*(&off_26EFDBE20
                                   + ((85 * ((qword_268B98A18 - qword_268B98A30) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A30) ^ 0xBE))] ^ 0x77])
                                   + 1471))(v5);
    uint64_t v1 = v20;
  }
  else
  {
    (*(&off_26EFDBE20
     + ((85 * ((qword_268B98A18 - qword_268B98A30) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A30) ^ 0xBE))] ^ 0x6F])
     + 1436))();
  }
  *uint64_t v1 = 0;
  return 0xFFFFFFFFLL;
}

uint64_t sub_23C1F33E4(uint64_t result)
{
  unint64_t v1 = (unint64_t)&v2[qword_268B98A60 + qword_268B98A18];
  qword_268B98A60 = 1435369301 * v1 + 0xF280E155BE86816;
  qword_268B98A18 = 1435369301 * (v1 ^ 0x9BAD281A81DB4BBELL);
  if (result) {
    return (*(&off_26EFDBE20
  }
            + ((85 * (qword_268B98A60 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218540[byte_23C218440[(85 * (qword_268B98A60 ^ 0xBE ^ qword_268B98A18))] ^ 0x9B])
            + 1366))();
  return result;
}

void *sub_23C1F349C(void *result, char *a2, int a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v4 = *result | 1;
    uint64_t v5 = *result + v4 * a4;
    do
    {
      char v6 = *a2++;
      *(unsigned char *)(*result + (v5 & 0xF)) = v6;
      v5 += v4;
      --a3;
    }
    while (a3);
  }
  return result;
}

uint64_t sub_23C1F34CC(uint64_t result, unsigned char *a2, int a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v4 = result + a4 * (result | 1);
    do
    {
      *a2++ = *(unsigned char *)(result + (v4 & 0xF));
      v4 += result | 1;
      --a3;
    }
    while (a3);
  }
  return result;
}

uint64_t sub_23C1F34F4(uint64_t *a1)
{
  uint64_t v2 = qword_268B98A50 - (void)&v6 + qword_268B98A18;
  qword_268B98A50 = 1435369301 * (v2 + 0x6452D7E57E24B442);
  qword_268B98A18 = 1435369301 * (v2 ^ 0x9BAD281A81DB4BBELL);
  uint64_t v3 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                         + ((85
                                                                          * ((qword_268B98A18 + qword_268B98A50) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 + qword_268B98A50) ^ 0xBE))] ^ 0x7C])
                                         + 1553))(16);
  if (v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 0xFFFFFFFFLL;
  }
  *a1 = v3;
  return v4;
}

void *sub_23C1F35C8(void *result)
{
  unint64_t v1 = (qword_268B98A18 - qword_268B98A90) ^ (unint64_t)&v3;
  qword_268B98A90 = 1435369301 * (v1 + 0x6452D7E57E24B442);
  qword_268B98A18 = 1435369301 * (v1 ^ 0x9BAD281A81DB4BBELL);
  if (result)
  {
    do
    {
      uint64_t v2 = (void *)*result;
      (*(&off_26EFDBE20
       + ((85 * ((qword_268B98A18 - qword_268B98A90) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 - qword_268B98A90) ^ 0xBE))] ^ 0x63])
       + 1377))();
      uint64_t result = v2;
    }
    while (v2);
  }
  return result;
}

uint64_t *sub_23C1F36C0(uint64_t *result, char *a2, int a3, uint64_t a4)
{
  for (; a3; --a3)
  {
    char v4 = *a2;
    uint64_t v5 = result;
    do
    {
      uint64_t v5 = (uint64_t *)*v5;
      uint64_t v6 = v5[1];
      if (v6) {
        BOOL v7 = v6 == a4;
      }
      else {
        BOOL v7 = 1;
      }
    }
    while (!v7);
    if (!v6) {
      v5[1] = a4;
    }
    *((unsigned char *)v5 + 16) = v4;
    ++a2;
    ++a4;
  }
  return result;
}

uint64_t *sub_23C1F3704(uint64_t *result, unsigned char *a2, int a3, uint64_t a4)
{
  for (; a3; --a3)
  {
    uint64_t v4 = result[1];
    if (v4) {
      BOOL v5 = v4 == a4;
    }
    else {
      BOOL v5 = 1;
    }
    uint64_t v6 = result;
    if (!v5)
    {
      uint64_t v6 = result;
      do
      {
        uint64_t v6 = (uint64_t *)*v6;
        uint64_t v7 = v6[1];
        if (v7) {
          BOOL v8 = v7 == a4;
        }
        else {
          BOOL v8 = 1;
        }
      }
      while (!v8);
    }
    *a2++ = *((unsigned char *)v6 + 16);
    ++a4;
  }
  return result;
}

uint64_t sub_23C1F3750(uint64_t *a1)
{
  unint64_t v2 = (unint64_t)&v35[qword_268B98A18 - qword_268B98A40];
  qword_268B98A40 = (1435369301 * v2) ^ 0x9BAD281A81DB4BBELL;
  qword_268B98A18 = 1435369301 * (v2 ^ 0x9BAD281A81DB4BBELL);
  uint64_t v3 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                         + ((85 * ((85 * v2) ^ qword_268B98A18)) ^ byte_23C218540[byte_23C218440[(85 * ((85 * v2) ^ qword_268B98A18))] ^ 0xF3])
                                         + 1494))(24);
  if (!v3) {
    goto LABEL_18;
  }
  uint64_t v4 = (void *)v3;
  *a1 = v3;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x77])
   + 1438))();
  uint64_t v5 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                         + ((85
                                                                          * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0xF7])
                                         + 1367))(24);
  if (!v5) {
    goto LABEL_18;
  }
  uint64_t v6 = (void *)v5;
  *uint64_t v4 = v5;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x6F])
   + 1403))();
  uint64_t v7 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                         + ((85
                                                                          * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0x7C])
                                         + 1553))(24);
  if (!v7) {
    goto LABEL_18;
  }
  BOOL v8 = (void *)v7;
  *uint64_t v6 = v7;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x9B])
   + 1333))();
  uint64_t v9 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                         + ((85
                                                                          * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218340[byte_23C218240[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0x50])
                                         + 1378))(24);
  if (!v9) {
    goto LABEL_18;
  }
  char v10 = (void *)v9;
  *BOOL v8 = v9;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x7C])
   + 1484))();
  uint64_t v11 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0x9B])
                                          + 1402))(24);
  if (!v11) {
    goto LABEL_18;
  }
  char v12 = (void *)v11;
  *char v10 = v11;
  (*(&off_26EFDBE20
   + ((85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C217F40[byte_23C217E40[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0x7C])
   + 1484))();
  uint64_t v13 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x77])
                                          + 1507))(24);
  if (!v13) {
    goto LABEL_18;
  }
  char v14 = (void *)v13;
  *char v12 = v13;
  (*(&off_26EFDBE20
   + ((85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C217F40[byte_23C217E40[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0x7C])
   + 1484))();
  uint64_t v15 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218540[byte_23C218440[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0xF3])
                                          + 1494))(24);
  if (!v15) {
    goto LABEL_18;
  }
  char v16 = (void *)v15;
  *char v14 = v15;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0xF3])
   + 1425))();
  uint64_t v17 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0x7C])
                                          + 1553))(24);
  if (!v17) {
    goto LABEL_18;
  }
  unsigned int v18 = (void *)v17;
  *char v16 = v17;
  (*(&off_26EFDBE20
   + ((85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0xCC])
   + 1460))();
  uint64_t v19 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C218940[byte_23C218840[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0xB5])
                                          + 1588))(24);
  if (!v19) {
    goto LABEL_18;
  }
  unsigned int v20 = (void *)v19;
  *unsigned int v18 = v19;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218340[byte_23C218240[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0x91])
   + 1368))();
  uint64_t v21 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0xA0])
                                          + 1564))(24);
  if (!v21) {
    goto LABEL_18;
  }
  char v22 = (void *)v21;
  *unsigned int v20 = v21;
  (*(&off_26EFDBE20
   + ((85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0xCC])
   + 1460))();
  uint64_t v23 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218740[byte_23C218640[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0xF7])
                                          + 1367))(24);
  if (!v23) {
    goto LABEL_18;
  }
  uint64_t v24 = (void *)v23;
  *char v22 = v23;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0x43])
   + 1390))();
  uint64_t v25 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0xA0])
                                          + 1564))(24);
  if (!v25) {
    goto LABEL_18;
  }
  uint64_t v26 = (void *)v25;
  *uint64_t v24 = v25;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x7C])
   + 1484))();
  uint64_t v27 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x9B])
                                          + 1402))(24);
  if (!v27) {
    goto LABEL_18;
  }
  unint64_t v28 = (void *)v27;
  *uint64_t v26 = v27;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x6F])
   + 1403))();
  uint64_t v29 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0xCC])
                                          + 1529))(24);
  if (!v29) {
    goto LABEL_18;
  }
  int v30 = (void *)v29;
  *unint64_t v28 = v29;
  (*(&off_26EFDBE20
   + ((85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0x6F])
   + 1403))();
  uint64_t v31 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE)) ^ byte_23C217F40[byte_23C217E40[(85 * ((qword_268B98A18 - qword_268B98A40) ^ 0xBE))] ^ 0x77])
                                          + 1507))(24);
  if (!v31) {
    goto LABEL_18;
  }
  unsigned int v32 = (void *)v31;
  *int v30 = v31;
  (*(&off_26EFDBE20
   + ((85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218340[byte_23C218240[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0x4C])
   + 1414))();
  uint64_t v33 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                          + ((85
                                                                           * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C217F40[byte_23C217E40[(85 * (qword_268B98A40 ^ 0xBE ^ qword_268B98A18))] ^ 0xBF])
                                          + 1448))(24);
  if (v33)
  {
    *unsigned int v32 = v33;
    (*(&off_26EFDBE20
     + ((85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218740[byte_23C218640[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0xF7])
     + 1298))();
    return 0;
  }
  else
  {
LABEL_18:
    ((void (*)(uint64_t))*(&off_26EFDBE20
                                   + ((85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE)) ^ byte_23C218940[byte_23C218840[(85 * ((qword_268B98A18 + qword_268B98A40) ^ 0xBE))] ^ 0xB5])
                                   + 1572))(*a1);
    *a1 = 0;
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_23C1F4358(uint64_t result)
{
  unint64_t v1 = (unint64_t)&v2[qword_268B98A18 - qword_268B98A70];
  qword_268B98A70 = 1435369301 * v1 - 0x6452D7E57E24B442;
  qword_268B98A18 = 1435369301 * (v1 ^ 0x9BAD281A81DB4BBELL);
  if (result) {
    return (*(&off_26EFDBE20
  }
            + ((85 * (qword_268B98A70 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218140[byte_23C218040[(85 * (qword_268B98A70 ^ 0xBE ^ qword_268B98A18))] ^ 0x43])
            + 1423))();
  return result;
}

void *sub_23C1F440C(void *result, char *a2, int a3, uint64_t a4)
{
  for (; a3; --a3)
  {
    char v4 = *a2++;
    *(unsigned char *)(*result + (a4++ & 0xF)) = v4;
  }
  return result;
}

double sub_23C1F4430(uint64_t a1, long long *a2, unsigned int a3, uint64_t a4)
{
  if (a3)
  {
    if (a3 < 8
      || a3 - 1 > 0xF
      || (~a4 & 0xFu) < (((_BYTE)a3 - 1) & 0xFu)
      || (unint64_t)a2 - a1 - (a4 & 0xF) < 0x20)
    {
      uint64_t v4 = a4;
      uint64_t v5 = a2;
      goto LABEL_4;
    }
    uint64_t v6 = a3;
    if (a3 >= 0x20)
    {
      uint64_t v7 = a3 & 0xFFFFFFE0;
      BOOL v8 = (long long *)(a1 + (a4 & 0xF));
      long long v9 = *v8;
      long long v10 = v8[1];
      *a2 = *v8;
      a2[1] = v10;
      if (v7 == a3) {
        return *(double *)&v9;
      }
      if ((a3 & 0x18) == 0)
      {
        a3 -= v7;
        uint64_t v5 = (long long *)((char *)a2 + v7);
        uint64_t v4 = a4 + v7;
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
    uint64_t v4 = a4 + (a3 & 0xFFFFFFF8);
    uint64_t v5 = (long long *)((char *)a2 + (a3 & 0xFFFFFFF8));
    a3 -= a3 & 0xFFFFFFF8;
    uint64_t v11 = (void *)((char *)a2 + v7);
    uint64_t v12 = v7 + a4;
    uint64_t v13 = v7 - (v6 & 0xFFFFFFF8);
    do
    {
      *(void *)&long long v9 = *(void *)(a1 + (v12 & 0xF));
      *v11++ = v9;
      v12 += 8;
      v13 += 8;
    }
    while (v13);
    if ((v6 & 0xFFFFFFF8) == v6) {
      return *(double *)&v9;
    }
    do
    {
LABEL_4:
      *(unsigned char *)uint64_t v5 = *(unsigned char *)(a1 + (v4 & 0xF));
      uint64_t v5 = (long long *)((char *)v5 + 1);
      ++v4;
      --a3;
    }
    while (a3);
  }
  return *(double *)&v9;
}

uint64_t sub_23C1F451C(uint64_t *a1)
{
  unint64_t v2 = (unint64_t)&v6[qword_268B98A18 - qword_268B98A68];
  qword_268B98A68 = (1435369301 * v2) ^ 0x9BAD281A81DB4BBELL;
  qword_268B98A18 = 1435369301 * (v2 ^ 0x9BAD281A81DB4BBELL);
  uint64_t v3 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                         + ((85
                                                                          * ((qword_268B98A18 - qword_268B98A68) ^ 0xBE)) ^ byte_23C218140[byte_23C218040[(85 * ((qword_268B98A18 - qword_268B98A68) ^ 0xBE))] ^ 0xCC])
                                         + 1529))(16);
  if (v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 0xFFFFFFFFLL;
  }
  *a1 = v3;
  return v4;
}

unint64_t sub_23C1F45F4(uint64_t a1, unsigned int a2, int a3)
{
  qword_268B98A58 = 1435369301 * ((qword_268B98A58 - (void)&v34 + qword_268B98A18) ^ 0x9BAD281A81DB4BBELL);
  qword_268B98A18 = qword_268B98A58;
  if ((unint64_t)(a1 - 16777217) >= 0xFFFFFFFFFF000000)
  {
    uint64_t v6 = (a1 >> 4) + 1;
    while (1)
    {
      uint64_t v7 = ((uint64_t (*)(uint64_t))*(&off_26EFDBE20
                                             + ((85
                                                                              * (qword_268B98A58 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C218740[byte_23C218640[(85 * (qword_268B98A58 ^ 0xBE ^ qword_268B98A18))] ^ 0x63])
                                             + 1413))(16 * v6 + 31);
      if (!v7) {
        break;
      }
      uint64_t v8 = v7;
      uint64_t v9 = v7 + ((qword_268B99520 - v7) & 0xF);
      unint64_t v10 = v9 + 16;
      unint64_t v3 = ((v9 + 16 - qword_268B99520) & 0xFFFFFFFFFFFFFFF0) + qword_268B99528;
      if (v3) {
        BOOL v11 = v3 + a1 >= v3;
      }
      else {
        BOOL v11 = 0;
      }
      if (v11)
      {
        unint64_t v12 = qword_268B99538;
        unint64_t v13 = qword_268B99530;
        if (qword_268B99538 == qword_268B99530)
        {
          unint64_t v13 = v10 + 16 * v6 + 16;
          unint64_t v12 = v9 + 16;
        }
        if (v10 <= v12) {
          unint64_t v12 = v9 + 16;
        }
        qword_268B99538 = v12;
        if (v10 + 16 * v6 + 16 >= v13) {
          uint64_t v14 = v10 + 16 * v6 + 16;
        }
        else {
          uint64_t v14 = v13;
        }
        qword_268B99530 = v14;
        if (!((v14 - v12) >> 60))
        {
          unsigned int v32 = v6;
          v33[0] = (qword_268B99520 - v7) & 0xF;
          unsigned __int8 v15 = qword_268B99520 + a3 + qword_268B99528;
          unsigned int v16 = a2 / 0x21;
          unsigned int v17 = a2 / 0x21 + 1;
          for (unsigned int i = a3 & 0xFFFE | 1; ; i /= v20)
          {
            unsigned int v19 = i <= v16 ? i : a2 / 0x21 + 1;
            unsigned int v20 = i <= v16 ? a2 / 0x21 + 1 : i;
            do
            {
              unsigned int v21 = v20;
              unsigned int v20 = v19;
              unsigned int v19 = v21 % v19;
            }
            while (v19);
            if (v20 == 1) {
              break;
            }
          }
          for (unsigned int j = a3 | 1; ; j /= v24)
          {
            unsigned int v23 = j >= v6 ? v6 : j;
            unsigned int v24 = j <= v6 ? v6 : j;
            do
            {
              unsigned int v25 = v24;
              unsigned int v24 = v23;
              unsigned int v23 = v25 % v23;
            }
            while (v23);
            if (v24 == 1) {
              break;
            }
          }
          unsigned int v26 = (qword_268B99520 + a3 + qword_268B99528);
          *(unsigned char *)(v9 + 8) = v26 % v17;
          if (((*(uint64_t (**)(uint64_t))(qword_268B99540 + 32 * (v15 % v17)))(v9) & 0x80000000) == 0)
          {
            if (!v32)
            {
LABEL_44:
              (*(void (**)(uint64_t, unsigned int *, uint64_t, uint64_t))(qword_268B99540
                                                                                + 32 * *(unsigned __int8 *)(v9 + 8)
                                                                                + 16))(v9, &v32, 4, 16);
              (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(qword_268B99540
                                                                        + 32 * *(unsigned __int8 *)(v9 + 8)
                                                                        + 16))(v9, v33, 1, 20);
              return v3;
            }
            int v27 = 0;
            unsigned int v28 = j % v32;
            while (1)
            {
              unsigned int v26 = (v26 + i) % v17;
              *(unsigned char *)(v10 + 16 * v28 + 8) = v26;
              if (((*(uint64_t (**)(void))(qword_268B99540 + 32 * v26))() & 0x80000000) != 0) {
                break;
              }
              unsigned int v28 = (v28 + j) % v32;
              if (++v27 >= v32) {
                goto LABEL_44;
              }
            }
            if (v27)
            {
              int v29 = -v27;
              do
              {
                unsigned int v28 = (v28 - j) % v32;
                (*(void (**)(void))(qword_268B99540 + 32 * *(unsigned __int8 *)(v10 + 16 * v28 + 8) + 24))(*(void *)(v10 + 16 * v28));
                BOOL v11 = __CFADD__(v29++, 1);
              }
              while (!v11);
            }
          }
        }
        if (v9) {
          ((void (*)(uint64_t))*(&off_26EFDBE20
        }
                                         + ((85
                                                                          * ((qword_268B98A18 - qword_268B98A58) ^ 0xBE)) ^ byte_23C218540[byte_23C218440[(85 * ((qword_268B98A18 - qword_268B98A58) ^ 0xBE))] ^ 0x9B])
                                         + 1366))(v8);
        return 0;
      }
    }
  }
  return 0;
}

uint64_t sub_23C1F49FC(uint64_t result)
{
  qword_268B98A88 = 1435369301 * ((unint64_t)&v6[qword_268B98A18 - qword_268B98A88 + 4] ^ 0x9BAD281A81DB4BBELL);
  qword_268B98A18 = qword_268B98A88;
  if (result)
  {
    unint64_t v1 = ((result - qword_268B99528) & 0xFFFFFFFFFFFFFFF0) + qword_268B99520;
    unint64_t v2 = v1 - 16;
    (*(void (**)(void, int *, uint64_t, uint64_t))(qword_268B99540 + 32 * *(unsigned __int8 *)(v1 - 8) + 8))(*(void *)(v1 - 16), &v5, 4, 16);
    (*(void (**)(void, unsigned char *, uint64_t, uint64_t))(qword_268B99540 + 32 * *(unsigned __int8 *)(v1 - 8) + 8))(*(void *)(v1 - 16), v6, 1, 20);
    if ((v5 & 0x80000000) == 0)
    {
      unint64_t v3 = (unsigned __int8 *)(v1 - 8);
      uint64_t v4 = -1;
      do
      {
        (*(void (**)(void))(qword_268B99540 + 32 * *v3 + 24))(*((void *)v3 - 1));
        ++v4;
        v3 += 16;
      }
      while (v4 < v5);
    }
    return ((uint64_t (*)(unint64_t))*(&off_26EFDBE20
                                                      + ((85
                                                                                       * (qword_268B98A88 ^ 0xBE ^ qword_268B98A18)) ^ byte_23C217F40[byte_23C217E40[(85 * (qword_268B98A88 ^ 0xBE ^ qword_268B98A18))] ^ 0x7C])
                                                      + 1517))(v2 - v6[0]);
  }
  return result;
}

char *sub_23C1F4B88(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v3 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v15 = *result++;
            *a2++ = v15;
LABEL_17:
            char v16 = *result++;
            *a2++ = v16;
LABEL_18:
            char v17 = *result++;
            *a2++ = v17;
LABEL_19:
            char v18 = *result++;
            *a2++ = v18;
LABEL_20:
            char v19 = *result++;
            *a2++ = v19;
LABEL_21:
            char v20 = *result++;
            *a2++ = v20;
LABEL_22:
            char v21 = *result++;
            *a2++ = v21;
LABEL_23:
            char v22 = *result++;
            *a2++ = v22;
            --v3;
          }
          while (v3);
          break;
      }
    }
  }
  else
  {
    unint64_t v4 = -(int)result & 7;
    switch((int)v4)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v5 = *result++;
        *a2++ = v5;
LABEL_6:
        char v6 = *result++;
        *a2++ = v6;
LABEL_7:
        char v7 = *result++;
        *a2++ = v7;
LABEL_8:
        char v8 = *result++;
        *a2++ = v8;
LABEL_9:
        char v9 = *result++;
        *a2++ = v9;
LABEL_10:
        char v10 = *result++;
        *a2++ = v10;
LABEL_11:
        char v11 = *result++;
        *a2++ = v11;
        break;
      default:
        break;
    }
    BOOL v12 = a3 >= v4;
    unint64_t v13 = a3 - v4;
    if (!v12) {
      unint64_t v13 = 0;
    }
    if (v13 >= 8)
    {
      unint64_t v14 = ((v13 >> 3) + 7) >> 3;
      switch((v13 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v23 = *(void *)result;
            result += 8;
            *(void *)a2 = v23;
            a2 += 8;
LABEL_26:
            uint64_t v24 = *(void *)result;
            result += 8;
            *(void *)a2 = v24;
            a2 += 8;
LABEL_27:
            uint64_t v25 = *(void *)result;
            result += 8;
            *(void *)a2 = v25;
            a2 += 8;
LABEL_28:
            uint64_t v26 = *(void *)result;
            result += 8;
            *(void *)a2 = v26;
            a2 += 8;
LABEL_29:
            uint64_t v27 = *(void *)result;
            result += 8;
            *(void *)a2 = v27;
            a2 += 8;
LABEL_30:
            uint64_t v28 = *(void *)result;
            result += 8;
            *(void *)a2 = v28;
            a2 += 8;
LABEL_31:
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_32:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
            --v14;
          }
          while (v14);
          break;
      }
    }
    switch(v13 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v31 = *result++;
        *a2++ = v31;
LABEL_35:
        char v32 = *result++;
        *a2++ = v32;
LABEL_36:
        char v33 = *result++;
        *a2++ = v33;
LABEL_37:
        char v34 = *result++;
        *a2++ = v34;
LABEL_38:
        char v35 = *result++;
        *a2++ = v35;
LABEL_39:
        char v36 = *result++;
        *a2++ = v36;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

unsigned char *sub_23C1F4DE4(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23C1F4F4C(char a1, unsigned int a2)
{
  return byte_23C217F40[(byte_23C217E40[a2] ^ a1)] ^ a2;
}

uint64_t sub_23C1F4F78(unsigned int a1)
{
  return byte_23C217F40[byte_23C217E40[a1] ^ 0x77] ^ a1;
}

uint64_t sub_23C1F4FA4(char a1, unsigned int a2)
{
  return byte_23C218140[(byte_23C218040[a2] ^ a1)] ^ a2;
}

uint64_t sub_23C1F4FD0(unsigned int a1)
{
  return byte_23C218140[byte_23C218040[a1] ^ 0x6F] ^ a1;
}

uint64_t sub_23C1F4FFC(char a1, unsigned int a2)
{
  return byte_23C218340[(byte_23C218240[a2] ^ a1)] ^ a2;
}

uint64_t sub_23C1F5028(unsigned int a1)
{
  return byte_23C218340[byte_23C218240[a1] ^ 0x91] ^ a1;
}

uint64_t sub_23C1F5054(char a1, unsigned int a2)
{
  return byte_23C218540[(byte_23C218440[a2] ^ a1)] ^ a2;
}

uint64_t sub_23C1F5080(unsigned int a1)
{
  return byte_23C218540[byte_23C218440[a1] ^ 0x9B] ^ a1;
}

uint64_t sub_23C1F50AC(char a1, unsigned int a2)
{
  return byte_23C218740[(byte_23C218640[a2] ^ a1)] ^ a2;
}

uint64_t sub_23C1F50D8(unsigned int a1)
{
  return byte_23C218740[byte_23C218640[a1] ^ 0xF7] ^ a1;
}

uint64_t sub_23C1F5104(char a1, unsigned int a2)
{
  return byte_23C218940[(byte_23C218840[a2] ^ a1)] ^ a2;
}

uint64_t sub_23C1F5130(unsigned int a1)
{
  return byte_23C218940[byte_23C218840[a1] ^ 0xB5] ^ a1;
}

uint64_t sub_23C1F515C(unsigned int a1)
{
  return byte_23C217F40[byte_23C217E40[a1] ^ 0x7C] ^ a1;
}

uint64_t sub_23C1F5184(unsigned int a1)
{
  return byte_23C218540[byte_23C218440[a1] ^ 0xE4] ^ a1;
}

uint64_t sub_23C1F51B0(unsigned int a1)
{
  return byte_23C218340[byte_23C218240[a1] ^ 0x4C] ^ a1;
}

uint64_t sub_23C1F51DC(unsigned int a1)
{
  return byte_23C217F40[byte_23C217E40[a1] ^ 0xBF] ^ a1;
}

uint64_t sub_23C1F5208(unsigned int a1)
{
  return byte_23C218740[byte_23C218640[a1] ^ 0x63] ^ a1;
}

uint64_t sub_23C1F5234(unsigned int a1)
{
  return byte_23C218340[byte_23C218240[a1] ^ 0x50] ^ a1;
}

uint64_t sub_23C1F5260(unsigned int a1)
{
  return byte_23C218340[byte_23C218240[a1] ^ 0xB5] ^ a1;
}

uint64_t sub_23C1F528C(unsigned int a1)
{
  return byte_23C217F40[byte_23C217E40[a1] ^ 0xA0] ^ a1;
}

uint64_t sub_23C1F52B8(unsigned int a1)
{
  return byte_23C218140[byte_23C218040[a1] ^ 0xCC] ^ a1;
}

uint64_t sub_23C1F52E4(unsigned int a1)
{
  return byte_23C218540[byte_23C218440[a1] ^ 0xF3] ^ a1;
}

uint64_t sub_23C1F5310(unsigned int a1)
{
  return byte_23C218140[byte_23C218040[a1] ^ 0x43] ^ a1;
}

uint64_t sub_23C1F533C()
{
  uint64_t v0 = ccrng();
  sub_23C205214(v0 != 0, 22, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform_lib.c");
  sub_23C205214(0, 23, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform_lib.c");
  return v0;
}

uint64_t sub_23C1F53AC(uint64_t a1, unsigned int a2)
{
  unint64_t v4 = *(unsigned int (**)(uint64_t, void, uint64_t))sub_23C209210();
  uint64_t v5 = sub_23C209210();
  BOOL v6 = v4(v5, a2, a1) == 0;

  return sub_23C205214(v6, 31, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform_lib.c");
}

uint64_t sub_23C1F5414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *, uint64_t *, uint64_t *, uint64_t), uint64_t *a5, unint64_t a6, void *a7, unint64_t *a8)
{
  uint64_t v41 = a1;
  uint64_t v42 = a3;
  uint64_t v45 = *MEMORY[0x263EF8340];
  memset(__s, 0, sizeof(__s));
  uint64_t v14 = ccaes_cbc_encrypt_mode();
  MEMORY[0x270FA5388]();
  uint64_t v43 = (uint64_t)&v36 - v15;
  bzero((char *)&v36 - v15, v15);
  MEMORY[0x270FA5388]();
  char v17 = (char *)&v36 - v16;
  bzero((char *)&v36 - v16, v16);
  uint64_t v18 = 0xFFFFFFFFLL;
  if (HIDWORD(a6) || (a6 - 40) < 0xFFFFFFE0) {
    goto LABEL_30;
  }
  unint64_t v39 = &v36;
  unint64_t v40 = a8;
  unint64_t v38 = a7;
  if (!a4)
  {
    BOOL v20 = (a2 & 0xFFFFFFFFFFFFFFF7) == 0x10 || a2 == 32;
    if (!v20 || !a8 || *a8 < a6 + 8)
    {
      memset_s(__s, 0x40uLL, 0, 0x40uLL);
      goto LABEL_31;
    }
    unint64_t v37 = a6 + 8;
    cccbc_init();
    goto LABEL_15;
  }
  if (a8)
  {
    unint64_t v19 = *v40;
    unint64_t v37 = a6 + 8;
    if (v19 >= a6 + 8)
    {
LABEL_15:
      uint64_t v21 = 0;
      unsigned int v22 = a6 >> 3;
      if (a6 >> 3 <= 1) {
        uint64_t v23 = 1;
      }
      else {
        uint64_t v23 = v22;
      }
      do
      {
        uint64_t v24 = *a5++;
        *((void *)&__s[v21++] + 1) = v24;
      }
      while (v23 != v21);
      uint64_t v25 = 0;
      *(void *)&__s[0] = v42;
      uint64_t v26 = 1;
      uint64_t v41 = v22;
      do
      {
        uint64_t v42 = v25;
        uint64_t v27 = 0;
        uint64_t v28 = (uint64_t *)__s;
        do
        {
          if (a4)
          {
            if ((a4(1, &unk_268B995E8, v28, v28, 16) & 1) == 0) {
              goto LABEL_6;
            }
          }
          else
          {
            cccbc_clear_iv();
            sub_23C205C1C(v14, v43, (uint64_t)v17, 0x10uLL);
          }
          uint64_t v29 = *v28;
          v28 += 2;
          unint64_t v30 = v29 ^ bswap64(v26 + v27++);
          *(void *)&__s[v27 % v22] = v30;
        }
        while (v23 != v27);
        uint64_t v25 = v42 + 1;
        v26 += v41;
      }
      while (v42 != 5);
      char v31 = v38;
      *unint64_t v38 = *(void *)&__s[0];
      char v32 = v31 + 1;
      char v33 = (uint64_t *)__s + 1;
      do
      {
        uint64_t v34 = *v33;
        v33 += 2;
        *v32++ = v34;
        --v23;
      }
      while (v23);
      uint64_t v18 = 0;
      *unint64_t v40 = v37 & 0xFFFFFFF8;
LABEL_30:
      memset_s(__s, 0x40uLL, 0, 0x40uLL);
      if (a4) {
        return v18;
      }
LABEL_31:
      cc_clear();
      return v18;
    }
  }
LABEL_6:
  memset_s(__s, 0x40uLL, 0, 0x40uLL);
  return 0xFFFFFFFFLL;
}

uint64_t sub_23C1F572C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *, uint64_t *, uint64_t *, uint64_t), uint64_t *a5, unsigned int a6, void *a7, _DWORD *a8)
{
  unint64_t v11 = *a8;
  uint64_t v9 = sub_23C1F5414(a1, a2, a3, a4, a5, a6, a7, &v11);
  sub_23C205214(HIDWORD(v11) == 0, 171, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/aeskeywrap.c");
  *a8 = v11;
  return v9;
}

uint64_t sub_23C1F5798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void *, unint64_t *, unint64_t *, uint64_t), void *a5, unint64_t a6, void *a7, void *a8)
{
  uint64_t v45 = a5;
  uint64_t v43 = a1;
  uint64_t v48 = *MEMORY[0x263EF8340];
  memset(__s, 0, sizeof(__s));
  uint64_t v14 = ccaes_cbc_decrypt_mode();
  MEMORY[0x270FA5388]();
  uint64_t v46 = (uint64_t)&v37 - v15;
  bzero((char *)&v37 - v15, v15);
  MEMORY[0x270FA5388]();
  char v17 = (char *)&v37 - v16;
  bzero((char *)&v37 - v16, v16);
  uint64_t v18 = 0xFFFFFFFFLL;
  if (HIDWORD(a6)) {
    goto LABEL_33;
  }
  uint64_t v39 = a3;
  unsigned int v19 = a6 >> 3;
  if ((a6 >> 3) - 6 < 0xFFFFFFFC) {
    goto LABEL_33;
  }
  unint64_t v40 = &v37;
  uint64_t v41 = a8;
  unint64_t v38 = a7;
  unint64_t v44 = a6;
  if (!a4)
  {
    BOOL v20 = (a2 & 0xFFFFFFFFFFFFFFF7) == 0x10 || a2 == 32;
    if (!v20 || !a8 || *a8 < a6 - 8)
    {
      memset_s(__s, 0x40uLL, 0, 0x40uLL);
      goto LABEL_34;
    }
    cccbc_init();
    goto LABEL_15;
  }
  if (a8 && *v41 >= v44 - 8)
  {
LABEL_15:
    *(void *)&__s[0] = *v45;
    uint64_t v21 = v19 - 1;
    if (v19 != 1)
    {
      unsigned int v22 = (void *)__s + 1;
      uint64_t v23 = v45 + 1;
      uint64_t v24 = v19 - 1;
      do
      {
        uint64_t v25 = *v23++;
        *unsigned int v22 = v25;
        v22 += 2;
        --v24;
      }
      while (v24);
    }
    int v26 = 6 * v19 - 6;
    LODWORD(v43) = 1 - v19;
    int v27 = 5;
    uint64_t v42 = (unint64_t *)&__s[v19 - 2];
    do
    {
      LODWORD(v45) = v27;
      if (v44 >= 0x10)
      {
        uint64_t v28 = v42;
        int v29 = v21;
        unsigned int v30 = v26;
        do
        {
          *uint64_t v28 = *(void *)&__s[v29 % v21] ^ bswap64(v30);
          if (a4)
          {
            if ((a4(0, &unk_268B995E8, v28, v28, 16) & 1) == 0) {
              goto LABEL_6;
            }
          }
          else
          {
            cccbc_clear_iv();
            sub_23C205C1C(v14, v46, (uint64_t)v17, 0x10uLL);
          }
          --v30;
          v28 -= 2;
          BOOL v31 = __OFSUB__(v29--, 1);
        }
        while (!((v29 < 0) ^ v31 | (v29 == 0)));
      }
      int v27 = v45 - 1;
      v26 += v43;
    }
    while (v45);
    if (*(void *)&__s[0] == v39)
    {
      char v32 = v38;
      if (v21)
      {
        char v33 = (uint64_t *)__s + 1;
        uint64_t v34 = v21;
        do
        {
          uint64_t v35 = *v33;
          v33 += 2;
          *v32++ = v35;
          --v34;
        }
        while (v34);
      }
      uint64_t v18 = 0;
      *uint64_t v41 = (8 * v21);
    }
    else
    {
      uint64_t v18 = 0xFFFFFFFFLL;
    }
LABEL_33:
    memset_s(__s, 0x40uLL, 0, 0x40uLL);
    if (a4) {
      return v18;
    }
LABEL_34:
    cc_clear();
    return v18;
  }
LABEL_6:
  memset_s(__s, 0x40uLL, 0, 0x40uLL);
  return 0xFFFFFFFFLL;
}

uint64_t sub_23C1F5B00(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t (*a4)(void, void *, unint64_t *, unint64_t *, uint64_t), void *a5, unsigned int a6, void *a7, _DWORD *a8)
{
  uint64_t v11 = *a8;
  uint64_t v9 = sub_23C1F5798(a1, a2, a3, a4, a5, a6, a7, &v11);
  sub_23C205214(HIDWORD(v11) == 0, 261, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/aeskeywrap.c");
  *a8 = v11;
  return v9;
}

uint64_t sub_23C1F5B6C(unsigned int a1, _DWORD *a2)
{
  uint64_t v2 = a1 + 15;
  uint64_t v3 = v2 << 31 >> 31;
  BOOL v4 = v3 != v2 || v3 < 0;
  int v5 = v4;
  if (!v4) {
    *a2 = v3 & 0xFFFFFFF8;
  }
  return v5 ^ 1u;
}

uint64_t sub_23C1F5B98(unint64_t a1, unint64_t *a2)
{
  uint64_t v2 = a1 >= 0xFFFFFFFFFFFFFFF1;
  BOOL v3 = v2 << 63 >> 63 != v2 || v2 << 63 >> 63 == -1;
  int v4 = v3;
  if (!v3) {
    *a2 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  }
  return v4 ^ 1u;
}

BOOL sub_23C1F5BC8(unsigned int a1, unsigned int *a2)
{
  unsigned int v2 = a1 - 8;
  BOOL result = a1 > 7;
  *a2 = v2;
  return result;
}

BOOL sub_23C1F5BDC(unint64_t a1, unint64_t *a2)
{
  unint64_t v2 = a1 - 8;
  BOOL result = a1 > 7;
  *a2 = v2;
  return result;
}

uint64_t sub_23C1F5BF0()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  int v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = v0;
  v22[0] = *MEMORY[0x263EF8340];
  bzero(__s, 0x1000uLL);
  *(void *)&long long v18 = __s;
  *((void *)&v18 + 1) = v22;
  size_t v19 = 4096;
  uint64_t v12 = 3758097090;
  if (v6 && v4)
  {
    mach_port_t v13 = sub_23C1F5E58();
    if (!v13)
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_new_vek", ":", 179, "", 0, "", "");
      uint64_t v12 = 3758097084;
      goto LABEL_16;
    }
    mach_port_t v14 = v13;
    if (!ccder_blob_encode_body_tl()
      || !sub_23C207A08(&v18, v8)
      || !sub_23C207A08(&v18, v10)
      || !sub_23C207B28(&v18, v11)
      || !ccder_blob_encode_tl())
    {
      goto LABEL_14;
    }
    input[0] = *((void *)&v18 + 1);
    input[1] = (uint64_t)v22 - *((void *)&v18 + 1);
    uint64_t v15 = IOConnectCallMethod(v14, 0x4Au, input, 2u, 0, 0, 0, 0, __s, &v19);
    if (v15)
    {
      uint64_t v12 = v15;
      goto LABEL_16;
    }
    *(void *)&long long v17 = __s;
    *((void *)&v17 + 1) = &__s[v19];
    if (!ccder_blob_decode_range() || !sub_23C207A78(&v17, 0, v4)) {
      goto LABEL_14;
    }
    if (!v2)
    {
      uint64_t v12 = 0;
      goto LABEL_16;
    }
    uint64_t v12 = 0;
    if ((sub_23C207864(&v17, 0, v2) & 1) == 0) {
LABEL_14:
    }
      uint64_t v12 = 3758097098;
  }
LABEL_16:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v12;
}

uint64_t sub_23C1F5E58()
{
  if (qword_268B995A0 != -1) {
    dispatch_once(&qword_268B995A0, &unk_26EFDF1C8);
  }
  dispatch_sync((dispatch_queue_t)qword_268B995A8, &unk_26EFDF188);
  uint64_t result = dword_268B99590;
  if (!dword_268B99590)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return dword_268B99590;
  }
  return result;
}

unint64_t sub_23C1F5EE4(char *a1, const void *a2, size_t a3)
{
  unint64_t v3 = (unint64_t)a1;
  if (a1)
  {
    int v6 = open_dprotected_np(a1, 1793, 4, 0, 384);
    if (v6 == -1)
    {
      uint64_t v10 = __error();
      uint64_t v11 = strerror(*v10);
      syslog(3, "could not create file: %s (%s)\n", (const char *)v3, v11);
      return 0;
    }
    else
    {
      int v7 = v6;
      ssize_t v8 = write(v6, a2, a3);
      unint64_t v3 = v8 != -1;
      if (v8 == -1)
      {
        uint64_t v12 = __error();
        mach_port_t v13 = strerror(*v12);
        syslog(3, "failed to write restore bag to disk %s\n", v13);
      }
      close(v7);
    }
  }
  return v3;
}

const char *sub_23C1F5FB8(char *a1, void *a2, size_t *a3)
{
  unint64_t v3 = a1;
  memset(&v14, 0, sizeof(v14));
  if (a1)
  {
    if (!stat(a1, &v14))
    {
      size_t st_size = v14.st_size;
      int v7 = open(v3, 0);
      if (v7 == -1)
      {
        uint64_t v12 = __error();
        mach_port_t v13 = strerror(*v12);
        syslog(3, "could not open file: %s (%s)\n", v3, v13);
      }
      else
      {
        int v8 = v7;
        uint64_t v9 = calloc(st_size, 1uLL);
        unint64_t v3 = (const char *)(v9 != 0);
        if (!v9)
        {
LABEL_7:
          close(v8);
          return v3;
        }
        uint64_t v10 = v9;
        if (read(v8, v9, st_size) == st_size)
        {
          *a2 = v10;
          *a3 = st_size;
          goto LABEL_7;
        }
        close(v8);
        free(v10);
      }
    }
    return 0;
  }
  return v3;
}

uint64_t sub_23C1F60C4(unsigned int a1, const void *a2)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3) {
    return IOConnectCallMethod(v3, 0x6Cu, input, 1u, a2, 0x10uLL, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_delete_xart_leak", ":", 268, "", 0, "", "");
  return 3758097084;
}

char *sub_23C1F61AC(char *result, uint64_t a2, uint64_t a3)
{
  v9[2] = *(char **)MEMORY[0x263EF8340];
  if (result)
  {
    v9[0] = result;
    v9[1] = 0;
    uint64_t result = (char *)fts_open(v9, 84, 0);
    if (result)
    {
      uint64_t v5 = (FTS *)result;
      int v6 = fts_read((FTS *)result);
      if (v6)
      {
        int v7 = v6;
        do
        {
          int fts_info = v7->fts_info;
          if (fts_info != 6)
          {
            if (fts_info == 1)
            {
              if (a2)
              {
                if (((*(uint64_t (**)(uint64_t, FTSENT *))(a2 + 16))(a2, v7) & 1) == 0) {
                  fts_set(v5, v7, 4);
                }
              }
            }
            else if (a3 && fts_info == 8)
            {
              (*(void (**)(uint64_t, FTSENT *))(a3 + 16))(a3, v7);
            }
          }
          int v7 = fts_read(v5);
        }
        while (v7);
      }
      return (char *)fts_close(v5);
    }
  }
  return result;
}

char *sub_23C1F62BC(char *result, int a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (result)
  {
    mach_port_t v3 = result;
    bzero(v8, 0x400uLL);
    uint64_t result = realpath_DARWIN_EXTSN(v3, v8);
    if (result)
    {
      v6[0] = MEMORY[0x263EF8330];
      v6[1] = 0x40000000;
      v6[2] = sub_23C1F63D4;
      v6[3] = &unk_264E38148;
      int v7 = a2;
      v4[0] = MEMORY[0x263EF8330];
      v4[1] = 0x40000000;
      v4[2] = sub_23C1F648C;
      v4[3] = &unk_264E38168;
      int v5 = a2;
      return sub_23C1F61AC(v8, (uint64_t)v6, (uint64_t)v4);
    }
  }
  return result;
}

uint64_t sub_23C1F63D4(uint64_t a1, uint64_t a2)
{
  int v4 = sub_23C1F6430(*(const char **)(a2 + 48));
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 == -1 || v4 == v5) {
    printf(" dir: %s %i\n", *(const char **)(a2 + 48), v4);
  }
  return 1;
}

uint64_t sub_23C1F6430(const char *a1)
{
  int v1 = open_dprotected_np(a1, 0, 0, 1);
  if (v1 == -1) {
    return 0xFFFFFFFFLL;
  }
  int v2 = v1;
  uint64_t v3 = fcntl(v1, 63);
  if ((v2 & 0x80000000) == 0) {
    close(v2);
  }
  return v3;
}

uint64_t sub_23C1F648C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_23C1F6430(*(const char **)(a2 + 48));
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 == -1 || result == v5) {
    return printf("file: %s %i\n", *(const char **)(a2 + 48), result);
  }
  return result;
}

uint64_t sub_23C1F64E4()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  io_registry_entry_t v0 = IORegistryEntryFromPath(*MEMORY[0x263F0EC90], "IODeviceTree:/filesystems");
  if (v0)
  {
    io_object_t v1 = v0;
    CFTypeRef CFProperty = IORegistryEntryCreateCFProperty(v0, @"e-apfs", (CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
    BOOL v3 = CFProperty != 0;
    if (CFProperty) {
      CFRelease(CFProperty);
    }
    IOObjectRelease(v1);
  }
  else
  {
    BOOL v3 = 0;
  }
  size_t __len = 1023;
  bzero(__big, 0x400uLL);
  if ((byte_268B99598 & 1) == 0)
  {
    if (!sysctlbyname("kern.bootargs", __big, &__len, 0, 0) && strnstr(__big, "-apfs_shared_datavolume", __len)) {
      byte_268B99599 = 1;
    }
    byte_268B99598 = 1;
  }
  unsigned int v4 = byte_268B99599;
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s ioreg: %d, boot_arg: %d%s\n", "aks", "", "", "", "aks_fs_supports_enhanced_apfs", ":", 437, "", 0, "", v3, byte_268B99599, "");
  return v3 | v4;
}

uint64_t sub_23C1F6668(const char *a1)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  bzero(v4, 0x400uLL);
  bzero(__str, 0x400uLL);
  if (realpath_DARWIN_EXTSN(a1, v4))
  {
    snprintf(__str, 0x400uLL, "%s/mobile", v4);
    sub_23C1F673C(v4, (uint64_t)&off_264E36D28, 35);
    if ((sub_23C1F64E4() & 1) == 0) {
      sub_23C1F673C(__str, (uint64_t)&off_264E373B8, 72);
    }
  }
  return 0;
}

void sub_23C1F673C(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  bzero(__str, 0x400uLL);
  memset(&v7, 0, sizeof(v7));
  if (a3)
  {
    uint64_t v6 = a2 + 16;
    do
    {
      snprintf(__str, 0x400uLL, "%s%s", a1, *(const char **)(v6 - 16));
      if (stat(__str, &v7))
      {
        printf("stat failed: %s\n");
      }
      else
      {
        sub_23C1F6430(__str);
        printf("%s: mode=%o, u/g=%i:%i class=%i%s\n");
      }
      v6 += 48;
      --a3;
    }
    while (a3);
  }
}

uint64_t sub_23C1F6880(const char *a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  bzero(v3, 0x400uLL);
  if (realpath_DARWIN_EXTSN(a1, v3)) {
    sub_23C1F673C(v3, (uint64_t)&off_264E373B8, 72);
  }
  return 0;
}

const char *sub_23C1F6908()
{
  puts("shared allow list:");
  sub_23C1F6970("<var>", (uint64_t)&off_264E36D28, 35);
  puts("user allow list:");

  return sub_23C1F6970("<user>", (uint64_t)&off_264E373B8, 72);
}

const char *sub_23C1F6970(const char *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    uint64_t v4 = result;
    uint64_t v5 = (const char **)(a2 + 16);
    uint64_t v6 = (const char **)(a2 + 16);
    do
    {
      char v7 = *(unsigned char *)v6;
      v6 += 6;
      if (v7) {
        uint64_t result = (const char *)printf("%s%s\n", v4, *(v5 - 2));
      }
      uint64_t v5 = v6;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_23C1F69E0()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  int v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unsigned int v8 = v7;
  uint64_t v9 = v0;
  uint64_t v20 = *MEMORY[0x263EF8340];
  bzero(__s, 0x1000uLL);
  *(void *)&long long v16 = __s;
  *((void *)&v16 + 1) = &v20;
  size_t v17 = 4096;
  uint64_t v10 = 3758097090;
  if (v4 && v2)
  {
    mach_port_t v11 = sub_23C1F5E58();
    if (v11)
    {
      mach_port_t v12 = v11;
      if (!ccder_blob_encode_body_tl()
        || !sub_23C207A08(&v16, v6)
        || !sub_23C207B28(&v16, v9)
        || !ccder_blob_encode_tl())
      {
        goto LABEL_10;
      }
      input[0] = v8;
      input[1] = *((void *)&v16 + 1);
      uint64_t input[2] = (uint64_t)&v20 - *((void *)&v16 + 1);
      uint64_t v13 = IOConnectCallMethod(v12, 0x4Cu, input, 3u, 0, 0, 0, 0, __s, &v17);
      if (v13)
      {
        uint64_t v10 = v13;
        goto LABEL_12;
      }
      *(void *)&long long v15 = __s;
      *((void *)&v15 + 1) = &__s[v17];
      if (!ccder_blob_decode_range() || (uint64_t v10 = 0, (sub_23C207A78(&v15, 0, v2) & 1) == 0)) {
LABEL_10:
      }
        uint64_t v10 = 3758097098;
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_new_kek", ":", 508, "", 0, "", "");
      uint64_t v10 = 3758097084;
    }
  }
LABEL_12:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v10;
}

uint64_t sub_23C1F6C20()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = v0;
  uint64_t v20 = *MEMORY[0x263EF8340];
  bzero(__s, 0x1000uLL);
  *(void *)&long long v16 = __s;
  *((void *)&v16 + 1) = &v20;
  size_t v17 = 4096;
  uint64_t v10 = 3758097090;
  if (v6 && v4)
  {
    mach_port_t v11 = sub_23C1F5E58();
    if (!v11)
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_new_sibling_vek", ":", 543, "", 0, "", "");
      uint64_t v10 = 3758097084;
      goto LABEL_15;
    }
    mach_port_t v12 = v11;
    if (!ccder_blob_encode_body_tl()
      || !sub_23C207A08(&v16, v8)
      || !sub_23C207B28(&v16, v9)
      || !ccder_blob_encode_tl())
    {
      goto LABEL_13;
    }
    input[0] = *((void *)&v16 + 1);
    input[1] = (uint64_t)&v20 - *((void *)&v16 + 1);
    uint64_t v13 = IOConnectCallMethod(v12, 0x63u, input, 2u, 0, 0, 0, 0, __s, &v17);
    if (v13)
    {
      uint64_t v10 = v13;
      goto LABEL_15;
    }
    *(void *)&long long v15 = __s;
    *((void *)&v15 + 1) = &__s[v17];
    if (!ccder_blob_decode_range() || !sub_23C207A78(&v15, 0, v4)) {
      goto LABEL_13;
    }
    if (!v2)
    {
      uint64_t v10 = 0;
      goto LABEL_15;
    }
    uint64_t v10 = 0;
    if ((sub_23C207864(&v15, 0, v2) & 1) == 0) {
LABEL_13:
    }
      uint64_t v10 = 3758097098;
  }
LABEL_15:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v10;
}

uint64_t sub_23C1F6E74()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = v0;
  v22[0] = *MEMORY[0x263EF8340];
  bzero(__s, 0x1000uLL);
  *(void *)&long long v18 = __s;
  *((void *)&v18 + 1) = v22;
  size_t v19 = 4096;
  uint64_t v12 = 3758097090;
  if (v8 && v6 && v4 && v2)
  {
    mach_port_t v13 = sub_23C1F5E58();
    if (v13)
    {
      mach_port_t v14 = v13;
      if (!sub_23C207A08(&v18, v4)
        || !ccder_blob_encode_body_tl()
        || !sub_23C207A08(&v18, v8)
        || !sub_23C207A08(&v18, v10)
        || !sub_23C207B28(&v18, v11)
        || !ccder_blob_encode_tl())
      {
        goto LABEL_14;
      }
      input[0] = *((void *)&v18 + 1);
      input[1] = (uint64_t)v22 - *((void *)&v18 + 1);
      uint64_t v15 = IOConnectCallMethod(v14, 0x4Du, input, 2u, 0, 0, 0, 0, __s, &v19);
      if (v15)
      {
        uint64_t v12 = v15;
        goto LABEL_16;
      }
      *(void *)&long long v17 = __s;
      *((void *)&v17 + 1) = &__s[v19];
      if (!ccder_blob_decode_range() || (uint64_t v12 = 0, (sub_23C207A78(&v17, 0, v2) & 1) == 0)) {
LABEL_14:
      }
        uint64_t v12 = 3758097098;
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_rewrap_kek", ":", 582, "", 0, "", "");
      uint64_t v12 = 3758097084;
    }
  }
LABEL_16:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v12;
}

uint64_t sub_23C1F70D8()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  long long v18 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unsigned int v11 = v10;
  uint64_t v12 = v0;
  v24[0] = *MEMORY[0x263EF8340];
  uint64_t v13 = 3758097098;
  bzero(__s, 0x1000uLL);
  *(void *)&long long v20 = __s;
  *((void *)&v20 + 1) = v24;
  size_t v21 = 4096;
  mach_port_t v14 = sub_23C1F5E58();
  if (!v14)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_set_protection", ":", 616, "", 0, "", "");
    uint64_t v13 = 3758097084;
    goto LABEL_14;
  }
  mach_port_t v15 = v14;
  if (sub_23C207A08(&v20, v3)
    && sub_23C207A08(&v20, v5)
    && sub_23C207A08(&v20, v7)
    && sub_23C207B28(&v20, v12)
    && ccder_blob_encode_tl())
  {
    input[0] = v11;
    input[1] = v9;
    uint64_t input[2] = *((void *)&v20 + 1);
    uint64_t input[3] = (uint64_t)v24 - *((void *)&v20 + 1);
    uint64_t v16 = IOConnectCallMethod(v15, 0x54u, input, 4u, 0, 0, 0, 0, __s, &v21);
    if (v16)
    {
      uint64_t v13 = v16;
      goto LABEL_14;
    }
    *(void *)&long long v19 = __s;
    *((void *)&v19 + 1) = &__s[v21];
    if (!v21) {
      goto LABEL_13;
    }
    if (!ccder_blob_decode_range()) {
      goto LABEL_14;
    }
    if (!v18)
    {
LABEL_13:
      uint64_t v13 = 0;
      goto LABEL_14;
    }
    uint64_t v13 = 0;
    if ((sub_23C207A78(&v19, 0, v18) & 1) == 0) {
      uint64_t v13 = 3758097098;
    }
  }
LABEL_14:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v13;
}

uint64_t sub_23C1F7328()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unsigned int v12 = v11;
  uint64_t v13 = v0;
  v24[0] = *MEMORY[0x263EF8340];
  bzero(__s, 0x1000uLL);
  *(void *)&long long v20 = __s;
  *((void *)&v20 + 1) = v24;
  size_t v21 = 4096;
  if (!v6)
  {
    uint64_t v17 = 3758097090;
    goto LABEL_15;
  }
  mach_port_t v14 = sub_23C1F5E58();
  if (!v14)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_unwrap_vek_with_acm", ":", 653, "", 0, "", "");
    uint64_t v17 = 3758097084;
    goto LABEL_15;
  }
  mach_port_t v15 = v14;
  if (!sub_23C207A08(&v20, v4)
    || !sub_23C207A08(&v20, v6)
    || !sub_23C207A08(&v20, v8)
    || !sub_23C207A08(&v20, v10)
    || !sub_23C207B28(&v20, v13)
    || !ccder_blob_encode_tl())
  {
    goto LABEL_13;
  }
  input[0] = *((void *)&v20 + 1);
  input[1] = (uint64_t)v24 - *((void *)&v20 + 1);
  uint64_t input[2] = v12;
  uint64_t v16 = IOConnectCallMethod(v15, 0x4Bu, input, 3u, 0, 0, 0, 0, __s, &v21);
  if (v16)
  {
    uint64_t v17 = v16;
    goto LABEL_15;
  }
  *(void *)&long long v19 = __s;
  *((void *)&v19 + 1) = &__s[v21];
  if (!ccder_blob_decode_range()) {
    goto LABEL_13;
  }
  if (!v2)
  {
    uint64_t v17 = 0;
    goto LABEL_15;
  }
  uint64_t v17 = 0;
  if ((sub_23C207864(&v19, 0, v2) & 1) == 0) {
LABEL_13:
  }
    uint64_t v17 = 3758097098;
LABEL_15:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v17;
}

uint64_t sub_23C1F7598()
{
  return sub_23C1F7328();
}

void sub_23C1F75A4(const char *a1, char a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (a1)
  {
    bzero(&v13, 0x878uLL);
    bzero(v12, 0x400uLL);
    if (realpath_DARWIN_EXTSN(a1, v12))
    {
      uint64_t v4 = (char *)malloc(0x818uLL);
      memset_s(v4, 0x818uLL, 0, 0x818uLL);
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 0x40000000;
      v11[2] = sub_23C1F782C;
      v11[3] = &unk_264E381A8;
      v11[4] = v4;
      sub_23C1F61AC(v12, (uint64_t)&unk_26EFDF168, (uint64_t)v11);
      if (!statfs(v12, &v13))
      {
        if (a2) {
          printf("Free Blocks:%lld blocks of size:%d\n");
        }
        else {
          printf("%lld,%d\n");
        }
      }
      uint64_t v5 = v4 + 340;
      for (uint64_t i = 1; i != 5; ++i)
      {
        if (a2)
        {
          uint64_t v9 = &v4[296 * i];
          printf("%s:\n\tNum files:\t%u,\n\tNum hardlinks:\t%u,\n\tNum compressed:\t%u,\n\tTotal Size:\t%lld,\n\tMin File Size:\t%lld,\n\tMax File Size:\t%lld,\n", off_268B98AA8[i], *(_DWORD *)v9, *((_DWORD *)v9 + 2), *((_DWORD *)v9 + 1), *((void *)v9 + 2), *((void *)v9 + 3), *((void *)v9 + 4));
          printf("\tSize Distribution:");
          printf("%i", *((_DWORD *)v9 + 10));
          for (uint64_t j = 0; j != 252; j += 4)
          {
            putchar(44);
            printf("%i", *(_DWORD *)&v5[j]);
          }
        }
        else
        {
          uint64_t v7 = &v4[296 * i];
          printf("%i,%u,%u,%u,%lld,%lld,%lld,", i, *(_DWORD *)v7, *((_DWORD *)v7 + 2), *((_DWORD *)v7 + 1), *((void *)v7 + 2), *((void *)v7 + 3), *((void *)v7 + 4));
          printf("%i", *((_DWORD *)v7 + 10));
          for (uint64_t k = 0; k != 252; k += 4)
          {
            putchar(44);
            printf("%i", *(_DWORD *)&v5[k]);
          }
        }
        putchar(10);
        v5 += 296;
      }
      free(v4);
    }
  }
}

uint64_t sub_23C1F7824()
{
  return 1;
}

uint64_t sub_23C1F782C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_23C1F6430(*(const char **)(a2 + 48));
  if ((result - 7) >= 0xFFFFFFFA)
  {
    uint64_t v5 = *(void *)(a2 + 96);
    int64_t v6 = *(void *)(v5 + 96);
    uint64_t v7 = *(void *)(a1 + 32);
    ++*(_DWORD *)(v7 + 296 * result);
    if (*(unsigned __int16 *)(v5 + 6) >= 2u) {
      ++*(_DWORD *)(v7 + 296 * result + 8);
    }
    if ((*(unsigned char *)(v5 + 116) & 0x20) != 0) {
      ++*(_DWORD *)(v7 + 296 * result + 4);
    }
    uint64_t v8 = v7 + 296 * result;
    int64_t v10 = *(void *)(v8 + 32);
    uint64_t v9 = (int64_t *)(v8 + 32);
    *(v9 - 2) += v6;
    if (v6 > v10) {
      *uint64_t v9 = v6;
    }
    uint64_t v11 = v7 + 296 * result;
    int64_t v14 = *(void *)(v11 + 24);
    unsigned int v12 = (int64_t *)(v11 + 24);
    int64_t v13 = v14;
    if (v14) {
      BOOL v15 = v6 < v13;
    }
    else {
      BOOL v15 = 1;
    }
    if (v15) {
      *unsigned int v12 = v6;
    }
    if (v6) {
      unint64_t v16 = v7 + 296 * result + 4 * (63 - __clz(v6));
    }
    else {
      unint64_t v16 = v7 + 296 * result;
    }
    ++*(_DWORD *)(v16 + 40);
  }
  return result;
}

uint64_t sub_23C1F7938(unsigned int a1, uint64_t a2)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = 1;
  input[1] = a1;
  uint64_t input[2] = a2;
  uint64_t output = 0;
  uint32_t outputCnt = 1;
  mach_port_t v2 = sub_23C1F5E58();
  if (v2) {
    return IOConnectCallMethod(v2, 0x56u, input, 3u, 0, 0, &output, &outputCnt, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kext_set_options", ":", 820, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1F7A24(unsigned int a1, uint64_t *a2)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = 3758097084;
  if (!a2) {
    return 3758097090;
  }
  input[0] = 0;
  input[1] = a1;
  uint64_t input[2] = 0;
  uint64_t output = 0;
  uint32_t outputCnt = 1;
  mach_port_t v4 = sub_23C1F5E58();
  if (v4)
  {
    uint64_t v2 = IOConnectCallMethod(v4, 0x56u, input, 3u, 0, 0, &output, &outputCnt, 0, 0);
    if (!v2) {
      *a2 = output;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kext_get_options", ":", 841, "", 0, "", "");
  }
  return v2;
}

uint64_t sub_23C1F7B3C()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x10u, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_internal_state", ":", 857, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1F7BE4(unsigned int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 0x86u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_run_internal_test", ":", 871, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1F7CCC()
{
  int v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  mach_port_t v4 = v3;
  int v6 = v5;
  uint64_t v8 = v7;
  int v10 = v9;
  uint64_t v12 = v11;
  unsigned int v14 = v13;
  int v15 = v0;
  uint64_t v23 = *MEMORY[0x263EF8340];
  bzero(__src, 0x8000uLL);
  size_t __count = 0x8000;
  mach_port_t v16 = sub_23C1F5E58();
  if (v16)
  {
    input[0] = v15;
    input[1] = v14;
    uint64_t input[2] = v12;
    uint64_t input[3] = v10;
    if (!v14 || (uint64_t v17 = 3758097090, v4) && v2)
    {
      uint64_t v17 = IOConnectCallMethod(v16, 0x36u, input, 4u, v8, v6, 0, 0, __src, &__count);
      if (!v17 && v14)
      {
        long long v18 = calloc(__count, 1uLL);
        *mach_port_t v4 = v18;
        if (v18)
        {
          memcpy(v18, __src, __count);
          uint64_t v17 = 0;
          *mach_port_t v2 = __count;
        }
        else
        {
          uint64_t v17 = 3758097085;
        }
      }
    }
  }
  else
  {
    uint64_t v17 = 3758097084;
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_stash_escrow", ":", 890, "", 0, "", "");
  }
  memset_s(__src, 0x8000uLL, 0, 0x8000uLL);
  return v17;
}

void sub_23C1F7EAC()
{
  if (!dword_268B99590) {
    dword_268B99590 = sub_23C1F89BC("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
  }
}

uint64_t sub_23C1F7EEC()
{
  if (qword_268B995A0 != -1) {
    dispatch_once(&qword_268B995A0, &unk_26EFDF1C8);
  }
  dispatch_sync((dispatch_queue_t)qword_268B995A8, &unk_26EFDF1A8);
  uint64_t result = dword_268B99594;
  if (!dword_268B99594)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStoreTest");
    return dword_268B99594;
  }
  return result;
}

void sub_23C1F7F78()
{
  if (!dword_268B99594) {
    dword_268B99594 = sub_23C1F89BC("IOService:/IOResources/AppleKeyStoreTest", "AppleKeyStoreTest");
  }
}

uint64_t sub_23C1F7FB8(mach_port_t a1, const void *a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  input[0] = a4;
  input[1] = a3;
  uint64_t output = 0;
  uint32_t outputCnt = 1;
  bzero(outputStruct, 0x400uLL);
  size_t v19 = 1024;
  uint64_t v11 = IOConnectCallMethod(a1, 0xFu, input, 2u, a2, 0x10uLL, &output, &outputCnt, outputStruct, &v19);
  if (v11) {
    return v11;
  }
  uint64_t v17 = 3758097084;
  if (outputCnt == 1)
  {
    *a7 = output;
    if (sub_23C20A2CC(outputStruct, v19, 3u, v12, v13, v14, v15, v16, a5)) {
      return 3758097084;
    }
    else {
      return 0;
    }
  }
  return v17;
}

uint64_t sub_23C1F80F0(mach_port_t a1, const void *a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, _DWORD *a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, _DWORD *a13)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  input[0] = a4;
  input[1] = a3;
  uint64_t output = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint32_t outputCnt = 3;
  bzero(outputStruct, 0x400uLL);
  size_t v26 = 1024;
  uint64_t v17 = IOConnectCallMethod(a1, 0x13u, input, 2u, a2, 0x10uLL, &output, &outputCnt, outputStruct, &v26);
  if (v17) {
    return v17;
  }
  uint64_t v23 = 3758097084;
  if (outputCnt == 3)
  {
    int v24 = v30;
    *a7 = output;
    *a10 = v24;
    *a13 = v31;
    if (sub_23C20A2CC(outputStruct, v26, 5u, v18, v19, v20, v21, v22, a5)) {
      return 3758097084;
    }
    else {
      return 0;
    }
  }
  return v23;
}

uint64_t sub_23C1F824C(mach_port_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, size_t *a8)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a3;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 2, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a2);
  uint64_t v11 = IOConnectCallMethod(a1, 0x14u, input, 1u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, a7, a8);
  free(*(void **)&inputStructCnt[1]);
  return v11;
}

uint64_t sub_23C1F830C(mach_port_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, uint64_t a10, uint64_t a11, unsigned int a12, void *outputStruct, size_t *a14, _DWORD *a15)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  input[0] = a3;
  input[1] = a6;
  uint64_t input[2] = a9;
  uint64_t input[3] = a12;
  uint64_t output = 0;
  uint32_t outputCnt = 1;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 4, a4, a5, a6, a7, a8, a2);
  uint64_t v16 = IOConnectCallMethod(a1, 0x15u, input, 4u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], &output, &outputCnt, outputStruct, a14);
  if (v16)
  {
    uint64_t v17 = v16;
  }
  else if (outputCnt == 1)
  {
    uint64_t v17 = 0;
    *a15 = output;
  }
  else
  {
    uint64_t v17 = 3758097084;
  }
  free(*(void **)&inputStructCnt[1]);
  return v17;
}

uint64_t sub_23C1F8420(mach_port_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  input[0] = a3;
  input[1] = a6;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  bzero(outputStruct, 0x400uLL);
  size_t outputStructCnt = 1024;
  sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 2, v10, v11, v12, v13, v14, a2);
  uint64_t v15 = IOConnectCallMethod(a1, 0x10u, input, 2u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, outputStruct, &outputStructCnt);
  if (v15)
  {
    uint64_t v21 = v15;
  }
  else if (sub_23C20A2CC(outputStruct, outputStructCnt, 2u, v16, v17, v18, v19, v20, a7))
  {
    uint64_t v21 = 3758097084;
  }
  else
  {
    uint64_t v21 = 0;
  }
  free(*(void **)&inputStructCnt[1]);
  return v21;
}

uint64_t sub_23C1F855C(mach_port_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, unsigned int a9, uint64_t a10)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = a3;
  input[1] = a6;
  uint64_t input[2] = a9;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  bzero(outputStruct, 0x400uLL);
  size_t v25 = 1024;
  sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 3, v12, v13, v14, v15, v16, a2);
  uint64_t v17 = IOConnectCallMethod(a1, 0x17u, input, 3u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, outputStruct, &v25);
  if (v17)
  {
    uint64_t v23 = v17;
  }
  else if (sub_23C20A2CC(outputStruct, v25, 2u, v18, v19, v20, v21, v22, a10))
  {
    uint64_t v23 = 3758097084;
  }
  else
  {
    uint64_t v23 = 0;
  }
  free(*(void **)&inputStructCnt[1]);
  return v23;
}

uint64_t sub_23C1F86A8(mach_port_t a1, void *inputStruct, unsigned int a3)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a3;
  return IOConnectCallMethod(a1, 0x11u, input, 1u, inputStruct, 0x10uLL, 0, 0, 0, 0);
}

uint64_t sub_23C1F871C(mach_port_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a2;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 1, a4, a5, a6, a7, a8, a3);
  uint64_t v9 = IOConnectCallMethod(a1, 0x12u, input, 1u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, 0, 0);
  free(*(void **)&inputStructCnt[1]);
  return v9;
}

uint64_t sub_23C1F87CC()
{
  int v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  mach_port_t v4 = v3;
  int v6 = v5;
  input[1] = *MEMORY[0x263EF8340];
  input[0] = v0;
  bzero(__src, 0x8000uLL);
  size_t __count = 0x8000;
  mach_port_t v7 = sub_23C1F5E58();
  if (v7)
  {
    if (v6) {
      size_t v8 = 18;
    }
    else {
      size_t v8 = 0;
    }
    uint64_t v9 = IOConnectCallMethod(v7, 0x5Du, input, 1u, v6, v8, 0, 0, __src, &__count);
    size_t v10 = __count;
    if (v9)
    {
      uint64_t v12 = v9;
    }
    else if (__count - 32769 < 0xFFFFFFFFFFFF8000)
    {
      uint64_t v12 = 3758097090;
    }
    else
    {
      uint64_t v11 = calloc(__count, 1uLL);
      *mach_port_t v4 = v11;
      size_t v10 = __count;
      if (v11)
      {
        *mach_port_t v2 = __count;
        memcpy(v11, __src, v10);
        uint64_t v12 = 0;
        size_t v10 = __count;
      }
      else
      {
        uint64_t v12 = 3758097085;
      }
    }
  }
  else
  {
    uint64_t v12 = 3758097084;
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_internal_info_for_key", ":", 1246, "", 0, "", "");
    size_t v10 = 0x8000;
  }
  memset_s(__src, v10, 0, v10);
  return v12;
}

dispatch_queue_t sub_23C1F8990()
{
  dispatch_queue_t result = dispatch_queue_create("aks-client-queue", 0);
  qword_268B995A8 = (uint64_t)result;
  return result;
}

uint64_t sub_23C1F89BC(char *path, const char *a2)
{
  kern_return_t v7;
  CFDictionaryRef v8;
  io_service_t MatchingService;
  io_object_t v10;
  uint64_t result;
  kern_return_t v12;
  io_connect_t connect;

  connect = 0;
  mach_port_t v3 = *MEMORY[0x263F0EC90];
  io_service_t v4 = IORegistryEntryFromPath(*MEMORY[0x263F0EC90], path);
  int v5 = (task_port_t *)MEMORY[0x263EF8960];
  if (!v4 || (io_object_t v6 = v4, v7 = IOServiceOpen(v4, *MEMORY[0x263EF8960], 0, &connect), IOObjectRelease(v6), v7))
  {
    size_t v8 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(v3, v8);
    if (MatchingService)
    {
      size_t v10 = MatchingService;
      IOServiceOpen(MatchingService, *v5, 0, &connect);
      IOObjectRelease(v10);
    }
  }
  dispatch_queue_t result = connect;
  if (connect)
  {
    uint64_t v12 = IOConnectCallMethod(connect, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    dispatch_queue_t result = connect;
    if (v12)
    {
      IOServiceClose(connect);
      return 0;
    }
  }
  return result;
}

uint64_t sub_23C1F8AB4()
{
  ccder_sizeof_implicit_uint64();
  ccder_sizeof_raw_octet_string();
  ccder_sizeof_raw_octet_string();
  ccder_sizeof_implicit_uint64();

  return ccder_sizeof();
}

uint64_t sub_23C1F8B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2 + a3;
  if (!ccder_blob_encode_implicit_uint64()
    || !ccder_blob_encode_body_tl()
    || !ccder_blob_encode_body_tl()
    || !ccder_blob_encode_body_tl()
    || !ccder_blob_encode_implicit_uint64())
  {
    return 4294967273;
  }
  int v3 = ccder_blob_encode_tl();
  uint64_t result = 4294967273;
  if (v3)
  {
    if (a2 == v6) {
      return 0;
    }
    else {
      return 4294967273;
    }
  }
  return result;
}

uint64_t sub_23C1F8C1C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v6 = a1;
  *((void *)&v6 + 1) = a1 + a2;
  if (!ccder_blob_decode_range()
    || !sub_23C208F14(&v6, 0x8000000000000000, a3)
    || !sub_23C206674(&v6, 0x8000000000000001, (uint64_t)(a3 + 1), 16)
    || !sub_23C206674(&v6, 0x8000000000000002, (uint64_t)(a3 + 3), 40)
    || !sub_23C206674(&v6, 0x8000000000000003, (uint64_t)(a3 + 8), 16))
  {
    return 4294967277;
  }
  int v4 = sub_23C208F14(&v6, 0x8000000000000004, a3 + 10);
  uint64_t result = 4294967277;
  if (v4)
  {
    if ((void)v6 == *((void *)&v6 + 1)) {
      return 0;
    }
    else {
      return 4294967277;
    }
  }
  return result;
}

uint64_t sub_23C1F8CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  memset(__s, 0, sizeof(__s));
  int v9 = 40;
  *(void *)a4 = 0;
  uuid_copy((unsigned __int8 *)(a4 + 8), (const unsigned __int8 *)(a1 + 32));
  *(void *)(a4 + 80) = 1;
  sub_23C2092C8(a4 + 64, 0x10u);
  ccsha256_di();
  if (j__ccpbkdf2_hmac())
  {
    uint64_t v7 = 4294967286;
  }
  else
  {
    uint64_t v6 = sub_23C1F572C((uint64_t)__s, 0x20u, 0xA6A6A6A6A6A6A6A6, 0, (uint64_t *)a1, 0x20u, (void *)(a4 + 24), &v9);
    if (v6)
    {
      uint64_t v7 = v6;
    }
    else if (v9 == 40)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = 4294967286;
    }
  }
  memset_s(__s, 0x20uLL, 0, 0x20uLL);
  return v7;
}

uint64_t sub_23C1F8E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  memset(__s, 0, sizeof(__s));
  int v9 = 32;
  if (*(void *)a1)
  {
    uint64_t v7 = 4294967284;
  }
  else
  {
    ccsha256_di();
    if (j__ccpbkdf2_hmac()) {
      goto LABEL_9;
    }
    uint64_t v6 = sub_23C1F5B00((uint64_t)__s, 0x20u, 0xA6A6A6A6A6A6A6A6, 0, (void *)(a1 + 24), 0x28u, (void *)a4, &v9);
    if (v6)
    {
      uint64_t v7 = v6;
      goto LABEL_8;
    }
    if (v9 != 32)
    {
LABEL_9:
      uint64_t v7 = 4294967286;
    }
    else
    {
      cccurve25519_make_pub();
      if (uuid_compare((const unsigned __int8 *)(a1 + 8), (const unsigned __int8 *)(a4 + 32))) {
        uint64_t v7 = 4294967272;
      }
      else {
        uint64_t v7 = 0;
      }
    }
  }
LABEL_8:
  memset_s(__s, 0x20uLL, 0, 0x20uLL);
  return v7;
}

uint64_t sub_23C1F8F70()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  int v4 = v3;
  uint64_t v6 = v5;
  unsigned int v8 = v7;
  unsigned int v10 = v9;
  int v11 = v0;
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v12 = 3758097098;
  bzero(v18, 0x1000uLL);
  *(void *)&long long v16 = v18;
  *((void *)&v16 + 1) = &v19;
  mach_port_t v13 = sub_23C1F5E58();
  if (v13)
  {
    mach_port_t v14 = v13;
    if (sub_23C207A08(&v16, v2) && ccder_blob_encode_tl())
    {
      input[0] = v11;
      input[1] = v10;
      uint64_t input[2] = v6;
      uint64_t input[3] = v4;
      uint64_t input[4] = v8;
      uint64_t input[5] = *((void *)&v16 + 1);
      input[6] = (uint64_t)&v19 - *((void *)&v16 + 1);
      return IOConnectCallMethod(v14, 0x21u, input, 7u, 0, 0, 0, 0, 0, 0);
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_stash_create_for_bag_and_kek", ":", 50, "", 0, "", "");
    return 3758097084;
  }
  return v12;
}

uint64_t sub_23C1F9120()
{
  return sub_23C1F8F70();
}

uint64_t sub_23C1F9154(int a1)
{
  return sub_23C1F9160(a1, 0, 0);
}

uint64_t sub_23C1F9160(int a1, unsigned int a2, BOOL *a3)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  mach_port_t v6 = sub_23C1F5E58();
  if (v6)
  {
    input[0] = a1;
    input[1] = a2;
    uint64_t output = 0;
    uint32_t outputCnt = 1;
    uint64_t result = IOConnectCallMethod(v6, 0x22u, input, 2u, 0, 0, &output, &outputCnt, 0, 0);
    if (!result)
    {
      uint64_t result = 0;
      if (a3) {
        *a3 = output != 0;
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_aks_stash_load", ":", 77, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C1F9284(int a1, unsigned char *a2)
{
  BOOL v4 = 0;
  if (!a2) {
    return sub_23C1F9160(a1, 1u, &v4);
  }
  *a2 = 0;
  uint64_t result = sub_23C1F9160(a1, 1u, &v4);
  if (!result) {
    *a2 = v4;
  }
  return result;
}

uint64_t sub_23C1F92E0()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x25u, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_stash_destroy", ":", 125, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1F9388(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 0x24u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_stash_commit", ":", 138, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1F9470(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 0x33u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_stash_enable", ":", 154, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1F9558(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 0x35u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_stash_persist", ":", 170, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1F9640(void **a1)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  if (*(_DWORD *)a1 != 1634431856) {
    return 0xFFFFFFFFLL;
  }
  free(a1[1]);
  free(a1);
  return 0;
}

uint64_t sub_23C1F96A0(int a1, uint64_t a2, unint64_t a3, int a4, void ***a5)
{
  mach_port_t v14 = 0;
  if (!a2 && a3) {
    return 0xFFFFFFFFLL;
  }
  if (sub_23C1F97A8(a4, &v14) || (unsigned int v9 = calloc(0x20uLL, 1uLL)) == 0)
  {
    uint64_t v12 = 0xFFFFFFFFLL;
  }
  else
  {
    unsigned int v10 = v9;
    int v11 = sub_23C1F9890(v14, a2, a3, (uint64_t)v9);
    uint64_t v12 = 0xFFFFFFFFLL;
    if (a3 <= 0x7FFFFFFE && !v11 && !sub_23C1F9938(a1, a2, a3, (uint64_t)v10, (uint64_t)v14))
    {
      uint64_t v12 = 0;
      if (a5)
      {
        *a5 = v14;
        mach_port_t v14 = 0;
      }
    }
    memset_s(v10, 0x20uLL, 0, 0x20uLL);
    free(v10);
  }
  if (v14) {
    sub_23C1F9640(v14);
  }
  return v12;
}

uint64_t sub_23C1F97A8(int a1, void *a2)
{
  if ((a1 - 1) > 2 || a2 == 0) {
    return 0xFFFFFFFFLL;
  }
  mach_port_t v6 = calloc(0x20uLL, 1uLL);
  if (!v6) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v7 = v6;
  *((void *)v6 + 2) = 20;
  unsigned int v8 = calloc(0x14uLL, 1uLL);
  *((void *)v7 + 1) = v8;
  if (!v8)
  {
LABEL_19:
    free(v7);
    return 0xFFFFFFFFLL;
  }
  *unsigned int v7 = 1634431856;
  v7[6] = a1;
  uint64_t result = CCRandomCopyBytes();
  if (result)
  {
    unsigned int v10 = (void *)*((void *)v7 + 1);
    if (v10) {
      free(v10);
    }
    goto LABEL_19;
  }
  if (a1 == 3) {
    int v9 = 2000;
  }
  else {
    int v9 = 10000000;
  }
  if (a1 == 2) {
    int v9 = 1000;
  }
  v7[1] = v9;
  *a2 = v7;
  return result;
}

uint64_t sub_23C1F9890(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  if (*a1 != 1634431856 || !a2 && a3) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0xFFFFFFFFLL;
  if (a4 && (a1[6] - 4) >= 0xFFFFFFFD)
  {
    ccsha256_di();
    if (ccpbkdf2_hmac()) {
      return 0xFFFFFFFFLL;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_23C1F9938(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  rsize_t __n = 0;
  __s = 0;
  uint64_t v10 = 3758097090;
  mach_port_t v14 = 0;
  if ((a2 || !a3) && a4 && a5)
  {
    mach_port_t v11 = sub_23C1F5E58();
    if (v11)
    {
      mach_port_t v12 = v11;
      if (!sub_23C206E50(&v14, (uint64_t)off_268B98E70, *(void *)(a5 + 8))
        && !sub_23C206E50(&v14, (uint64_t)off_268B98E68, a4)
        && !sub_23C207218(&v14, (uint64_t)off_268B98E78, *(unsigned int *)(a5 + 4))
        && !sub_23C207218(&v14, (uint64_t)off_268B98E80, *(unsigned int *)(a5 + 24))
        && (a3 < 1 || !sub_23C206E50(&v14, (uint64_t)off_268B98B38, a2))
        && !sub_23C207748(&v14)
        && !sub_23C206B00(&v14, &__s, &__n))
      {
        input[0] = a1;
        input[1] = (uint64_t)__s;
        uint64_t input[2] = __n;
        uint64_t v10 = IOConnectCallMethod(v12, 0x1Eu, input, 3u, 0, 0, 0, 0, 0, 0);
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_set_prederived_configuration", ":", 218, "", 0, "", "");
      uint64_t v10 = 3758097084;
    }
  }
  sub_23C2063F4(&v14);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v10;
}

uint64_t sub_23C1F9B64()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v24 = *MEMORY[0x263EF8340];
  if (!v1) {
    return 0;
  }
  mach_port_t v2 = v1;
  int v3 = v0;
  uint64_t result = (uint64_t)calloc(0x20uLL, 1uLL);
  if (!result) {
    return result;
  }
  uint64_t v5 = result;
  *(_DWORD *)uint64_t result = 1634431856;
  mach_port_t v6 = sub_23C1F5E58();
  if (!v6)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_get_prederived_configuration", ":", 384, "", 0, "", "");
LABEL_16:
    sub_23C1F9640((void **)v5);
    return 0;
  }
  mach_port_t v7 = v6;
  bzero(outputStruct, 0x8000uLL);
  v13[0] = 0x8000;
  uint64_t input = v3;
  if (IOConnectCallMethod(v7, 0x1Fu, &input, 1u, 0, 0, 0, 0, outputStruct, v13) || v13[0] > 0x8000) {
    goto LABEL_16;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  long long v15 = 0u;
  long long v17 = 0u;
  uint64_t v18 = 0;
  long long v14 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  v13[1] = (size_t)off_268B98E70;
  long long v16 = (unint64_t)off_268B98E78;
  uint64_t v19 = off_268B98E80;
  sub_23C205EAC();
  uint64_t v9 = ccder_decode_tl();
  if (v9)
  {
    uint64_t v10 = (const void *)v9;
    mach_port_t v11 = calloc(*(void *)(v5 + 16), 1uLL);
    *(void *)(v5 + 8) = v11;
    if (!v11)
    {
      int v12 = 0;
      if (!Mutable) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    memcpy(v11, v10, *(void *)(v5 + 16));
    *(_DWORD *)(v5 + 4) = sub_23C2060E4();
    *(_DWORD *)(v5 + 24) = sub_23C2060E4();
  }
  int v12 = 1;
  if (Mutable) {
LABEL_10:
  }
    CFRelease(Mutable);
LABEL_11:
  if (!v12 || !*(void *)(v5 + 16)) {
    goto LABEL_16;
  }
  *mach_port_t v2 = v5;
  return 1;
}

uint64_t sub_23C1F9E34(int a1, uint64_t a2, int a3, _DWORD *a4)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  memset(v9, 0, sizeof(v9));
  if (a3) {
    BOOL v4 = a2 == 0;
  }
  else {
    BOOL v4 = 0;
  }
  BOOL v5 = v4 || a4 == 0;
  if (v5 || *a4 != 1634431856 || sub_23C1F9890(a4, a2, a3, (uint64_t)v9)) {
    uint64_t v7 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v7 = sub_23C1F9F00(a1, (uint64_t)v9, 32);
  }
  memset_s(v9, 0x20uLL, 0, 0x20uLL);
  return v7;
}

uint64_t sub_23C1F9F00(int a1, uint64_t a2, int a3)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  mach_port_t v6 = sub_23C1F5E58();
  if (v6)
  {
    input[0] = a1;
    input[1] = a2;
    uint64_t input[2] = a3;
    return IOConnectCallMethod(v6, 0xCu, input, 3u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_unlock_bag", ":", 807, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FA000(int a1, uint64_t a2, int a3, uint64_t a4, int a5, void ***a6)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  memset(__s, 0, sizeof(__s));
  memset(v17, 0, sizeof(v17));
  long long v16 = 0;
  if (!a6) {
    goto LABEL_17;
  }
  uint64_t v7 = *a6;
  if (!*a6 || *(_DWORD *)v7 != 1634431856 || !a2 && a3) {
    goto LABEL_17;
  }
  if (!a4 && a5 || sub_23C1F9890(*a6, a2, a3, (uint64_t)__s)) {
    goto LABEL_17;
  }
  int v11 = sub_23C1F97A8(*((_DWORD *)v7 + 6), &v16);
  int v12 = v16;
  if (v11 || (v13 = sub_23C1F9890(v16, a4, a5, (uint64_t)v17), int v12 = v16, v13))
  {
LABEL_15:
    if (v12) {
      sub_23C1F9640(v12);
    }
LABEL_17:
    uint64_t v14 = 0xFFFFFFFFLL;
    goto LABEL_13;
  }
  if (sub_23C1F9938(a1, (uint64_t)__s, 32, (uint64_t)v17, (uint64_t)v16))
  {
    int v12 = v16;
    goto LABEL_15;
  }
  sub_23C1F9640(v7);
  uint64_t v14 = 0;
  *a6 = v16;
LABEL_13:
  memset_s(__s, 0x20uLL, 0, 0x20uLL);
  memset_s(v17, 0x20uLL, 0, 0x20uLL);
  return v14;
}

uint64_t sub_23C1FA164(uint64_t a1, int a2, unsigned int a3, _DWORD *a4)
{
  return sub_23C1FA17C(a1, a2, 0, 0, a3, -1, a4);
}

uint64_t sub_23C1FA17C(uint64_t a1, int a2, uint64_t a3, int a4, unsigned int a5, int a6, _DWORD *a7)
{
  input[6] = *MEMORY[0x263EF8340];
  uint64_t v14 = 3758097084;
  mach_port_t v15 = sub_23C1F5E58();
  if (v15)
  {
    if (a7)
    {
      input[0] = a5;
      input[1] = a6;
      uint64_t input[2] = a1;
      uint64_t input[3] = a2;
      uint64_t input[4] = a3;
      uint64_t input[5] = a4;
      uint64_t output = 0;
      uint32_t outputCnt = 1;
      uint64_t v14 = IOConnectCallMethod(v15, 2u, input, 6u, 0, 0, &output, &outputCnt, 0, 0);
      if (!v14) {
        *a7 = output;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_create_bag", ":", 187, "", 0, "", "");
  }
  return v14;
}

uint64_t sub_23C1FA2D4(uint64_t a1, int a2, int a3, _DWORD *a4)
{
  return sub_23C1FA17C(a1, a2, 0, 0, 2u, a3, a4);
}

uint64_t sub_23C1FA2EC(uint64_t a1, int a2, uint64_t a3, int a4, int a5, _DWORD *a6)
{
  return sub_23C1FA17C(a3, a4, a1, a2, 2u, a5, a6);
}

uint64_t sub_23C1FA314(uint64_t a1, int a2, int a3, _DWORD *a4)
{
  return sub_23C1FA17C(a1, a2, 0, 0, 0x8000002u, a3, a4);
}

uint64_t sub_23C1FA330(uint64_t a1, int a2, uint64_t a3, int a4, int a5, _DWORD *a6)
{
  return sub_23C1FA17C(a3, a4, a1, a2, 0x8000002u, a5, a6);
}

uint64_t sub_23C1FA35C()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x42u, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_invalidate_sync_bags", ":", 544, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FA404(const void *a1, int a2, uint64_t a3, int a4, int a5)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  uint64_t v10 = 3758097084;
  mach_port_t v11 = sub_23C1F5E58();
  if (v11)
  {
    if (a1)
    {
      input[0] = a5;
      input[1] = a3;
      uint64_t input[2] = a4;
      return IOConnectCallMethod(v11, 0x43u, input, 3u, a1, a2, 0, 0, 0, 0);
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_unlock_with_sync_bag", ":", 557, "", 0, "", "");
  }
  return v10;
}

uint64_t sub_23C1FA528(const void *a1, int a2, _DWORD *a3)
{
  output[1] = *MEMORY[0x263EF8340];
  uint64_t v6 = 3758097084;
  mach_port_t v7 = sub_23C1F5E58();
  if (v7)
  {
    uint64_t v6 = 3758097090;
    if (a1)
    {
      if (a3)
      {
        output[0] = 0;
        uint32_t outputCnt = 1;
        uint64_t v6 = IOConnectCallMethod(v7, 6u, 0, 0, a1, a2, output, &outputCnt, 0, 0);
        if (!v6) {
          *a3 = output[0];
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_load_bag", ":", 574, "", 0, "", "");
  }
  return v6;
}

uint64_t sub_23C1FA644(const void *a1, int a2)
{
  uint64_t v4 = 3758097084;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a1) {
      return IOConnectCallMethod(v5, 0x57u, 0, 0, a1, a2, 0, 0, 0, 0);
    }
    return 3758097090;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_invalidate_bag", ":", 596, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_23C1FA714(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 4u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_unload_bag", ":", 612, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FA7FC(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 0x37u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_unload_session_bags", ":", 629, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FA8E4()
{
  int v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  uint64_t v4 = v3;
  int v5 = v0;
  uint64_t v13 = *MEMORY[0x263EF8340];
  mach_port_t v6 = sub_23C1F5E58();
  if (v6)
  {
    mach_port_t v7 = v6;
    uint64_t result = 3758097090;
    if (v4)
    {
      if (v2)
      {
        bzero(__src, 0x8000uLL);
        size_t __count = 0x8000;
        uint64_t input = v5;
        uint64_t result = IOConnectCallMethod(v7, 3u, &input, 1u, 0, 0, 0, 0, __src, &__count);
        if (!result)
        {
          uint64_t v9 = calloc(__count, 1uLL);
          *uint64_t v4 = v9;
          if (v9)
          {
            memcpy(v9, __src, __count);
            uint64_t result = 0;
            *mach_port_t v2 = __count;
          }
          else
          {
            return 3758097085;
          }
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_save_bag", ":", 646, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C1FAA74(int a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, int a9, unsigned __int8 a10, unsigned int a11, unsigned int a12, _DWORD *a13)
{
  input[12] = *MEMORY[0x263EF8340];
  mach_port_t v21 = sub_23C1F5E58();
  if (v21)
  {
    input[0] = a1;
    input[1] = a11;
    uint64_t input[2] = a10;
    uint64_t input[3] = a2;
    uint64_t input[4] = a3;
    uint64_t input[5] = a4;
    input[6] = a5;
    uint64_t input[7] = a6;
    input[8] = a7;
    input[9] = a8;
    input[10] = a9;
    input[11] = a12;
    uint64_t output = 0;
    uint32_t outputCnt = 1;
    uint64_t result = IOConnectCallMethod(v21, 0xFu, input, 0xCu, 0, 0, &output, &outputCnt, 0, 0);
    if (a13)
    {
      if (!result) {
        *a13 = output;
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_change_secret_opts", ":", 678, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C1FABE8(int a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, int a9, unsigned __int8 a10, unsigned int a11, _DWORD *a12)
{
  return sub_23C1FAA74(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, 0, a12);
}

uint64_t sub_23C1FAC0C(int a1, uint64_t a2, int a3, uint64_t a4, int a5, unsigned int a6, _DWORD *a7)
{
  return sub_23C1FAA74(a1, a2, a3, a4, a5, 0, 0, 0, 0, 0xFFu, a6, 0, a7);
}

uint64_t sub_23C1FAC4C(int a1, _OWORD *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  size_t v7 = 16;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a2)
    {
      long long outputStruct = 0uLL;
      uint64_t input = a1;
      uint64_t v4 = IOConnectCallMethod(v5, 0x17u, &input, 1u, 0, 0, 0, 0, &outputStruct, &v7);
      if (!v4) {
        *a2 = outputStruct;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_bag_uuid", ":", 729, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_23C1FAD74(int a1, void *a2, size_t *a3)
{
  return sub_23C1FAD88(a1, (uint64_t)&unk_23C219890, a2, a3);
}

uint64_t sub_23C1FAD88(int a1, uint64_t a2, void *a3, size_t *a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  __int16 v23 = 0;
  memset(__src, 0, sizeof(__src));
  size_t __count = 34;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  mach_port_t v8 = sub_23C1F5E58();
  if (v8)
  {
    uint64_t v14 = 3758097090;
    if (a3 && a4)
    {
      mach_port_t v15 = v8;
      uint64_t input = a1;
      sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 1, v9, v10, v11, v12, v13, a2);
      if (*(void *)&inputStructCnt[1])
      {
        uint64_t v16 = IOConnectCallMethod(v15, 0x44u, &input, 1u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
        if (v16)
        {
          uint64_t v14 = v16;
        }
        else
        {
          long long v17 = calloc(__count, 1uLL);
          *a3 = v17;
          uint64_t v14 = 3758097085;
          if (v17)
          {
            memcpy(v17, __src, __count);
            uint64_t v14 = 0;
            *a4 = __count;
          }
        }
      }
      else
      {
        uint64_t v14 = 3758097085;
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_copy_volume_cookie_persona", ":", 760, "", 0, "", "");
    uint64_t v14 = 3758097084;
  }
  free(*(void **)&inputStructCnt[1]);
  return v14;
}

uint64_t sub_23C1FAF38(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 0xDu, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lock_bag", ":", 790, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FB020(int a1, _DWORD *a2)
{
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a2)
    {
      uint64_t output = 0;
      input[0] = a1;
      uint32_t outputCnt = 1;
      uint64_t v4 = IOConnectCallMethod(v5, 7u, input, 1u, 0, 0, &output, &outputCnt, 0, 0);
      if (!v4) {
        *a2 = output;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_lock_state", ":", 824, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_23C1FB13C(const void *a1, int a2, int a3, int a4, void *a5, int *a6, _DWORD *a7)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  uint64_t v14 = 3758097084;
  mach_port_t v15 = sub_23C1F5E58();
  if (v15)
  {
    uint64_t v14 = 3758097090;
    if (a1 && a5 && a6)
    {
      input[0] = a4;
      input[1] = a3;
      uint64_t output = 0;
      uint32_t outputCnt = 1;
      size_t v18 = *a6;
      uint64_t v16 = IOConnectCallMethod(v15, 0xAu, input, 2u, a1, a2, &output, &outputCnt, a5, &v18);
      if (v16)
      {
        return v16;
      }
      else
      {
        *a6 = v18;
        uint64_t v14 = 0;
        if (a7) {
          *a7 = output;
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_wrap_key", ":", 848, "", 0, "", "");
  }
  return v14;
}

uint64_t sub_23C1FB2A8(const void *a1, int a2, int a3, int a4, void *a5, int *a6)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  uint64_t v12 = 3758097084;
  mach_port_t v13 = sub_23C1F5E58();
  if (v13)
  {
    uint64_t v12 = 3758097090;
    if (a1)
    {
      if (a5)
      {
        if (a6)
        {
          input[0] = a4;
          input[1] = a3;
          size_t v15 = *a6;
          uint64_t v12 = IOConnectCallMethod(v13, 0xBu, input, 2u, a1, a2, 0, 0, a5, &v15);
          if (!v12) {
            *a6 = v15;
          }
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_unwrap_key", ":", 877, "", 0, "", "");
  }
  return v12;
}

uint64_t sub_23C1FB3F0(const void *a1, int a2, int a3, int a4, uint64_t a5, unsigned int a6, void *a7)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  uint64_t v14 = 3758097084;
  mach_port_t v15 = sub_23C1F5E58();
  if (v15)
  {
    uint64_t v14 = 3758097090;
    if (a1 && a7)
    {
      input[0] = a3;
      input[1] = a4;
      uint64_t input[2] = a5;
      uint64_t input[3] = a6;
      size_t v17 = 108;
      return IOConnectCallMethod(v15, 0x18u, input, 4u, a1, a2, 0, 0, a7, &v17);
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_rewrap_key_for_backup", ":", 901, "", 0, "", "");
  }
  return v14;
}

uint64_t sub_23C1FB534(int a1, _DWORD *a2)
{
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a2)
    {
      uint64_t output = 0;
      input[0] = a1;
      uint32_t outputCnt = 1;
      uint64_t v4 = IOConnectCallMethod(v5, 0xEu, input, a1 != 0, 0, 0, &output, &outputCnt, 0, 0);
      if (!v4) {
        *a2 = output;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_system", ":", 922, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_23C1FB654(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  mach_port_t v8 = sub_23C1F5E58();
  if (v8)
  {
    input[0] = a1;
    input[1] = a2;
    uint64_t input[2] = a3;
    uint64_t input[3] = a4;
    return IOConnectCallMethod(v8, 5u, input, 4u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_system_with_passcode", ":", 950, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FB75C(int a1, int a2)
{
  return sub_23C1FB654(a1, a2, 0, 0);
}

uint64_t sub_23C1FB768(int a1, uint64_t a2, unsigned int a3)
{
  return sub_23C1FB788(a1, a2, a3);
}

uint64_t sub_23C1FB77C(int a1, uint64_t a2, unsigned int a3)
{
  return sub_23C1FB788(a1, a2, a3);
}

uint64_t sub_23C1FB788(int a1, uint64_t a2, unsigned int a3)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  uint64_t v6 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  mach_port_t v7 = sub_23C1F5E58();
  if (v7)
  {
    mach_port_t v13 = v7;
    input[0] = a1;
    input[1] = a3;
    sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 3, v8, v9, v10, v11, v12, a2);
    if (*(void *)&inputStructCnt[1])
    {
      uint64_t v6 = IOConnectCallMethod(v13, 0x41u, input, 2u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, 0, 0);
      uint64_t v14 = *(void **)&inputStructCnt[1];
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v6 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_keybag_for_volume_with_cookie_persona", ":", 987, "", 0, "", "");
    uint64_t v14 = 0;
  }
  free(v14);
  return v6;
}

uint64_t sub_23C1FB8F4()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = v0;
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v10 = 3758097085;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  bzero(__src, 0x8000uLL);
  size_t __count = 0x8000;
  mach_port_t v11 = sub_23C1F5E58();
  if (v11)
  {
    mach_port_t v17 = v11;
    input[0] = v8;
    input[1] = v6;
    sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 1, v12, v13, v14, v15, v16, v9);
    if (*(void *)&inputStructCnt[1])
    {
      uint64_t v18 = IOConnectCallMethod(v17, 0x6Eu, input, 2u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
      if (v18)
      {
        uint64_t v10 = v18;
      }
      else
      {
        uint64_t v19 = calloc(__count, 1uLL);
        *uint64_t v4 = v19;
        if (v19)
        {
          memcpy(v19, __src, __count);
          uint64_t v10 = 0;
          *mach_port_t v2 = __count;
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_enable_volume", ":", 1014, "", 0, "", "");
    uint64_t v10 = 3758097084;
  }
  free(*(void **)&inputStructCnt[1]);
  return v10;
}

uint64_t sub_23C1FBAAC(uint64_t a1)
{
  uint64_t v2 = 3758097084;
  uint64_t v13 = 0;
  int v12 = 0;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3)
  {
    mach_port_t v9 = v3;
    sub_23C20A1EC(&v13, (unsigned int *)&v12, 1, v4, v5, v6, v7, v8, a1);
    if (v13)
    {
      uint64_t v2 = IOConnectCallMethod(v9, 0x6Fu, 0, 0, v13, v12, 0, 0, 0, 0);
      uint64_t v10 = v13;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v2 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_disable_volume", ":", 1044, "", 0, "", "");
    uint64_t v10 = 0;
  }
  free(v10);
  return v2;
}

uint64_t sub_23C1FBBB4(uint64_t a1, void *a2)
{
  uint64_t v4 = 3758097084;
  uint64_t v16 = 0;
  int v15 = 0;
  size_t v14 = 16;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    mach_port_t v11 = v5;
    sub_23C20A1EC(&v16, (unsigned int *)&v15, 1, v6, v7, v8, v9, v10, a1);
    if (v16)
    {
      uint64_t v4 = IOConnectCallMethod(v11, 0x70u, 0, 0, v16, v15, 0, 0, a2, &v14);
      int v12 = v16;
    }
    else
    {
      int v12 = 0;
      uint64_t v4 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_copy_current_bag_uuid", ":", 1066, "", 0, "", "");
    int v12 = 0;
  }
  free(v12);
  return v4;
}

uint64_t sub_23C1FBCCC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6, void *a7)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  uint64_t v13 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  mach_port_t v14 = sub_23C1F5E58();
  if (v14)
  {
    mach_port_t v20 = v14;
    mach_port_t v21 = 0;
    uint64_t v13 = 3758097090;
    if (a2 && a7)
    {
      input[0] = a4;
      input[1] = a5;
      uint64_t input[2] = a6;
      sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 2, v15, v16, v17, v18, v19, a1);
      size_t v23 = 108;
      uint64_t v13 = IOConnectCallMethod(v20, 0x71u, input, 3u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, a7, &v23);
      mach_port_t v21 = *(void **)&inputStructCnt[1];
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_rewrap_key", ":", 1087, "", 0, "", "");
    mach_port_t v21 = 0;
  }
  free(v21);
  return v13;
}

uint64_t sub_23C1FBE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8, void *outputStruct)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  uint64_t v15 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  mach_port_t v16 = sub_23C1F5E58();
  if (v16)
  {
    mach_port_t v22 = v16;
    size_t v23 = 0;
    uint64_t v15 = 3758097090;
    if (a2 && a4 && outputStruct)
    {
      input[0] = a6;
      input[1] = a7;
      uint64_t input[2] = a8;
      sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 3, v17, v18, v19, v20, v21, a1);
      size_t v25 = 108;
      uint64_t v15 = IOConnectCallMethod(v22, 0x71u, input, 3u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, outputStruct, &v25);
      size_t v23 = *(void **)&inputStructCnt[1];
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_backup_rewrap_ek", ":", 1113, "", 0, "", "");
    size_t v23 = 0;
  }
  free(v23);
  return v15;
}

uint64_t sub_23C1FBFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  long long v17 = 0u;
  long long v18 = 0u;
  long long __s = 0u;
  long long v16 = 0u;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  uint64_t v8 = sub_23C1F8C1C(a1, a2, v13);
  if (v8)
  {
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v9 = sub_23C1F8E34((uint64_t)v13, a3, a4, (uint64_t)&__s);
    if (!v9)
    {
      long long v10 = v16;
      *a5 = __s;
      a5[1] = v10;
      long long v11 = v18;
      a5[2] = v17;
      a5[3] = v11;
    }
  }
  memset_s(v13, 0x58uLL, 0, 0x58uLL);
  memset_s(&__s, 0x40uLL, 0, 0x40uLL);
  return sub_23C205160(v9);
}

uint64_t sub_23C1FC0D8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  uint64_t v4 = sub_23C1F8C1C(a1, a2, v6);
  if (!v4) {
    uuid_copy(a3, (const unsigned __int8 *)v6 + 8);
  }
  memset_s(v6, 0x58uLL, 0, 0x58uLL);
  return sub_23C205160(v4);
}

uint64_t sub_23C1FC184(long long *a1, void *a2, unsigned int a3, void *a4, void *a5)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  long long v6 = a1[1];
  long long v12 = *a1;
  long long v13 = v6;
  long long v7 = a1[3];
  long long v14 = a1[2];
  long long v15 = v7;
  unsigned int v10 = *a5;
  int __s = 1;
  uint64_t v8 = sub_23C2057A0((uint64_t)&__s, 0, 0, a2, a3, a4, &v10);
  *a5 = v10;
  memset_s(&__s, 0x44uLL, 0, 0x44uLL);
  return sub_23C205160(v8);
}

uint64_t sub_23C1FC244(uint64_t a1, const void *a2, size_t a3, void *a4, size_t *a5)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  uint64_t v10 = 3758097084;
  mach_port_t v11 = sub_23C1F5E58();
  if (v11)
  {
    uint64_t v10 = 3758097090;
    if (a2 && a4)
    {
      input[0] = a1;
      input[1] = 64;
      return IOConnectCallMethod(v11, 0x82u, input, 2u, a2, a3, 0, 0, a4, a5);
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_unwrap_key", ":", 1193, "", 0, "", "");
  }
  return v10;
}

uint64_t sub_23C1FC360(int a1, const void *a2, size_t a3, void *a4, size_t *a5)
{
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v10 = 3758097084;
  mach_port_t v11 = sub_23C1F5E58();
  if (v11)
  {
    uint64_t v10 = 3758097090;
    if (a2 && a4)
    {
      input[0] = a1;
      return IOConnectCallMethod(v11, 0x81u, input, 1u, a2, a3, 0, 0, a4, a5);
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_wrap_key", ":", 1212, "", 0, "", "");
  }
  return v10;
}

uint64_t sub_23C1FC47C(int a1, _DWORD *a2)
{
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a2)
    {
      uint64_t output = 0;
      input[0] = a1;
      uint32_t outputCnt = 1;
      uint64_t v4 = IOConnectCallMethod(v5, 0x83u, input, 1u, 0, 0, &output, &outputCnt, 0, 0);
      if (!v4) {
        *a2 = output;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_get_handle", ":", 1231, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_23C1FC598(int a1, unsigned __int8 *a2)
{
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a2)
    {
      uint64_t v10 = 0;
      input[0] = a1;
      size_t v8 = 16;
      *(void *)src = 0;
      uint64_t v6 = IOConnectCallMethod(v5, 0x84u, input, 1u, 0, 0, 0, 0, src, &v8);
      if (v6)
      {
        return v6;
      }
      else if (v8 == 16)
      {
        uuid_copy(a2, src);
        return 0;
      }
      else
      {
        return 3758604298;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_kc_backup_get_uuid", ":", 1253, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_23C1FC6E0(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, _OWORD *a6)
{
  if (a5)
  {
    int v7 = a4;
    int v9 = a2;
    *a5 = -1;
    int v11 = sub_23C1FBFE8((uint64_t)a1, a2, a3, a4, a6);
    long long v12 = (FILE **)MEMORY[0x263EF8358];
    long long v13 = (FILE *)*MEMORY[0x263EF8358];
    if (!v11)
    {
      fprintf(v13, "%s%s:%s%s%s%s%u:%s%u:%s Unwrapped DER backup bag%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":", 1302, "", 0, "", "");
      uint64_t v17 = 0;
      goto LABEL_9;
    }
    fprintf(v13, "%s%s:%s%s%s%s%u:%s%u:%s Failed to unwrap backup bag as DER: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":", 1290, "", 0, "", v11, "");
    uint64_t v14 = sub_23C1FA528(a1, v9, a5);
    if (v14)
    {
      uint64_t v17 = v14;
      fprintf(*v12, "%s%s:%s%s%s%s%u:%s%u:%s Failed to load in-kernel backup bag: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":", 1292, "", 0, "", v14, "");
    }
    else
    {
      int v15 = sub_23C1F9B64();
      int v16 = *a5;
      if (v15)
      {
        uint64_t v17 = sub_23C1F9E34(v16, a3, v7, 0);
        if (!v17) {
          goto LABEL_9;
        }
        fprintf(*v12, "%s%s:%s%s%s%s%u:%s%u:%s Failed to unlock in-kernel backup bag with prederived secret: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":");
      }
      else
      {
        uint64_t v17 = sub_23C1F9F00(v16, a3, v7);
        if (!v17) {
          goto LABEL_9;
        }
        fprintf(*v12, "%s%s:%s%s%s%s%u:%s%u:%s Failed to unlock in-kernel backup bag: 0x%08x%s\n", "aks", "", "", "", "aks_kc_backup_open_keybag", ":");
      }
    }
  }
  else
  {
    uint64_t v17 = 3758097090;
  }
  if (*a5 != -1)
  {
    sub_23C1FA714(*a5);
    *a5 = -1;
  }
LABEL_9:
  sub_23C1F9640(0);
  return v17;
}

uint64_t sub_23C1FC910(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  uint64_t v8 = 3758097084;
  uint64_t v19 = 0;
  int v18 = 0;
  mach_port_t v9 = sub_23C1F5E58();
  if (v9)
  {
    mach_port_t v15 = v9;
    input[0] = a1;
    input[1] = a2;
    uint64_t input[2] = a3;
    sub_23C20A1EC(&v19, (unsigned int *)&v18, 1, v10, v11, v12, v13, v14, a4);
    if (v19)
    {
      uint64_t v8 = IOConnectCallMethod(v15, 0x60u, input, 3u, v19, v18, 0, 0, 0, 0);
      int v16 = v19;
    }
    else
    {
      int v16 = 0;
      uint64_t v8 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_create", ":", 1324, "", 0, "", "");
    int v16 = 0;
  }
  free(v16);
  return v8;
}

uint64_t sub_23C1FCA64(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  uint64_t v10 = 3758097084;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  mach_port_t v11 = sub_23C1F5E58();
  if (v11)
  {
    mach_port_t v17 = v11;
    input[0] = a1;
    input[1] = a2;
    uint64_t input[2] = a3;
    uint64_t input[3] = a5;
    sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 1, v12, v13, v14, v15, v16, a4);
    if (*(void *)&inputStructCnt[1])
    {
      uint64_t v10 = IOConnectCallMethod(v17, 0x75u, input, 4u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, 0, 0);
      int v18 = *(void **)&inputStructCnt[1];
    }
    else
    {
      int v18 = 0;
      uint64_t v10 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_create_with_flags", ":", 1346, "", 0, "", "");
    int v18 = 0;
  }
  free(v18);
  return v10;
}

uint64_t sub_23C1FCBC8()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  int v5 = v0;
  uint64_t v15 = *MEMORY[0x263EF8340];
  bzero(__src, 0x2000uLL);
  size_t __count = 0x2000;
  uint64_t input = v5;
  uint64_t v6 = 3758097090;
  if (v4 && v2)
  {
    mach_port_t v7 = sub_23C1F5E58();
    if (v7)
    {
      uint64_t v8 = IOConnectCallMethod(v7, 0x61u, &input, 1u, 0, 0, 0, 0, __src, &__count);
      if (v8)
      {
        uint64_t v6 = v8;
      }
      else
      {
        if (__count)
        {
          mach_port_t v9 = calloc(__count, 1uLL);
          *uint64_t v4 = v9;
          if (!v9)
          {
            uint64_t v6 = 3758097085;
            goto LABEL_10;
          }
          memcpy(v9, __src, __count);
          size_t v10 = __count;
        }
        else
        {
          size_t v10 = 0;
          *uint64_t v4 = 0;
        }
        uint64_t v6 = 0;
        *uint64_t v2 = v10;
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_list", ":", 1372, "", 0, "", "");
      uint64_t v6 = 3758097084;
    }
  }
LABEL_10:
  memset_s(__src, 0x2000uLL, 0, 0x2000uLL);
  return v6;
}

uint64_t sub_23C1FCD78(int a1, uint64_t a2)
{
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  uint64_t v15 = 0;
  int v14 = 0;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    mach_port_t v11 = v5;
    input[0] = a1;
    sub_23C20A1EC(&v15, (unsigned int *)&v14, 1, v6, v7, v8, v9, v10, a2);
    if (v15)
    {
      uint64_t v4 = IOConnectCallMethod(v11, 0x62u, input, 1u, v15, v14, 0, 0, 0, 0);
      uint64_t v12 = v15;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v4 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_keybag_persona_delete", ":", 1394, "", 0, "", "");
    uint64_t v12 = 0;
  }
  free(v12);
  return v4;
}

uint64_t sub_23C1FCEB8(int a1, uint64_t a2, int a3, unsigned int a4, void *a5, size_t *a6)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  uint64_t v12 = 3758097084;
  mach_port_t v13 = sub_23C1F5E58();
  if (v13)
  {
    uint64_t v12 = 3758097090;
    if (a5 && a6)
    {
      input[0] = a1;
      input[1] = a4;
      uint64_t input[2] = a2;
      uint64_t input[3] = a3;
      return IOConnectCallMethod(v13, 0x26u, input, 4u, 0, 0, 0, 0, a5, a6);
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_auth_token_create", ":", 1415, "", 0, "", "");
  }
  return v12;
}

uint64_t sub_23C1FCFEC(int a1, uint64_t a2, uint64_t a3, const __CFDictionary *a4)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  rsize_t __n = 0;
  int __s = 0;
  uint64_t v7 = 3758097090;
  uint64_t v20 = 0;
  mach_port_t v8 = sub_23C1F5E58();
  if (v8)
  {
    mach_port_t v9 = v8;
    CFTypeID TypeID = CFNumberGetTypeID();
    if (!sub_23C1FD328(a4, @"GracePeriod", TypeID, (uint64_t)off_268B98C90, &v20))
    {
      CFTypeID v11 = CFNumberGetTypeID();
      if (!sub_23C1FD328(a4, @"BackOffDelay", v11, (uint64_t)off_268B98C98, &v20))
      {
        CFTypeID v12 = CFNumberGetTypeID();
        if (!sub_23C1FD328(a4, @"MaxUnlockAttempts", v12, (uint64_t)off_268B98CA0, &v20))
        {
          CFTypeID v13 = CFNumberGetTypeID();
          if (!sub_23C1FD328(a4, @"EscrowPasscodePeriod", v13, (uint64_t)off_268B98CA8, &v20))
          {
            CFTypeID v14 = CFNumberGetTypeID();
            if (!sub_23C1FD328(a4, @"EscrowTokenPeriod", v14, (uint64_t)off_268B98CB0, &v20))
            {
              CFTypeID v15 = CFDataGetTypeID();
              if (!sub_23C1FD328(a4, @"UserUUID", v15, (uint64_t)off_268B98E98, &v20))
              {
                CFTypeID v16 = CFDataGetTypeID();
                if (!sub_23C1FD328(a4, @"BindKEKToKB", v16, (uint64_t)off_268B98ED8, &v20))
                {
                  CFTypeID v17 = CFBooleanGetTypeID();
                  if (!sub_23C1FD328(a4, @"InactivityRebootEnabled", v17, (uint64_t)off_268B990B0, &v20))
                  {
                    CFTypeID v18 = CFBooleanGetTypeID();
                    if (!sub_23C1FD328(a4, @"OnenessAutomaticMode", v18, (uint64_t)off_268B990B8, &v20)&& !sub_23C207748(&v20)&& (!a2 || !sub_23C206E50(&v20, (uint64_t)off_268B98B38, a2))&& !sub_23C206B00(&v20, &__s, &__n))
                    {
                      input[0] = a1;
                      input[1] = (uint64_t)__s;
                      uint64_t input[2] = __n;
                      uint64_t v7 = IOConnectCallMethod(v9, 0x1Eu, input, 3u, 0, 0, 0, 0, 0, 0);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_configuration", ":", 1488, "", 0, "", "");
    uint64_t v7 = 3758097084;
  }
  sub_23C2063F4(&v20);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v7;
}

uint64_t sub_23C1FD328(const __CFDictionary *a1, const void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  value = 0;
  uint64_t result = CFDictionaryGetValueIfPresent(a1, a2, (const void **)&value);
  if (result)
  {
    if (CFGetTypeID(value) == a3)
    {
      if (CFNumberGetTypeID() == a3)
      {
        uint64_t v10 = 0;
        if (!CFNumberGetValue((CFNumberRef)value, kCFNumberSInt64Type, &v10)
          || sub_23C207218(a5, a4, v10))
        {
          return 0xFFFFFFFFLL;
        }
        return 0;
      }
      if (CFBooleanGetTypeID() == a3)
      {
        CFBooleanGetValue((CFBooleanRef)value);
        if (sub_23C2070B0(a5, a4)) {
          return 0xFFFFFFFFLL;
        }
      }
      else
      {
        if (CFDataGetTypeID() != a3) {
          return 0xFFFFFFFFLL;
        }
        BytePtr = CFDataGetBytePtr((CFDataRef)value);
        CFDataGetLength((CFDataRef)value);
        if (sub_23C206E50(a5, a4, (uint64_t)BytePtr)) {
          return 0xFFFFFFFFLL;
        }
      }
      return 0;
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_23C1FD430()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  int v3 = v0;
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (v2)
    {
      mach_port_t v6 = v5;
      bzero(outputStruct, 0x8000uLL);
      v46[0] = 0x8000;
      uint64_t input = v3;
      uint64_t v7 = IOConnectCallMethod(v6, 0x1Fu, &input, 1u, 0, 0, 0, 0, outputStruct, v46);
      if (v7)
      {
        return v7;
      }
      else if (v46[0] > 0x8000)
      {
        return 3758604298;
      }
      else
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        bzero(v47, 0x250uLL);
        v46[1] = (size_t)off_268B98C90;
        v47[4] = off_268B98C98;
        v47[9] = off_268B98CA0;
        v47[14] = off_268B98CA8;
        v47[19] = off_268B98CB0;
        v47[24] = off_268B98CB8;
        v47[29] = off_268B98E98;
        v47[34] = off_268B98ED0;
        v47[39] = off_268B98EE0;
        v47[44] = off_268B98EE8;
        v47[49] = off_268B98EF0;
        v47[54] = off_268B99070;
        v47[59] = off_268B99078;
        v47[64] = off_268B990A8;
        v47[69] = off_268B990A0;
        sub_23C205EAC();
        uint64_t v9 = v47[0];
        uint64_t v10 = v47[5];
        uint64_t v11 = v47[10];
        uint64_t v12 = v47[15];
        uint64_t v13 = v47[20];
        uint64_t v14 = v47[25];
        uint64_t v15 = v47[30];
        uint64_t v45 = v2;
        uint64_t v16 = v47[35];
        uint64_t v38 = v47[40];
        uint64_t v39 = v47[45];
        uint64_t v40 = v47[50];
        uint64_t v41 = v47[55];
        uint64_t v42 = v47[60];
        uint64_t v43 = v47[65];
        uint64_t v44 = v47[70];
        CFTypeID TypeID = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"GracePeriod", TypeID, v9);
        CFTypeID v18 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"BackOffDelay", v18, v10);
        CFTypeID v19 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"MaxUnlockAttempts", v19, v11);
        CFTypeID v20 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"EscrowPasscodePeriod", v20, v12);
        CFTypeID v21 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"EscrowTokenPeriod", v21, v13);
        CFTypeID v22 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"ConfigFlags", v22, v14);
        CFTypeID v23 = CFDataGetTypeID();
        sub_23C1FD9B8(Mutable, @"UserUUID", v23, v15);
        CFTypeID v24 = CFDataGetTypeID();
        sub_23C1FD9B8(Mutable, @"GroupUUID", v24, v16);
        CFTypeID v25 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"RecoveryIterations", v25, v38);
        CFTypeID v26 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"RecoveryFlags", v26, v39);
        CFTypeID v27 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"RecoveryTargetIterations", v27, v40);
        CFTypeID v28 = CFBooleanGetTypeID();
        sub_23C1FD9B8(Mutable, @"MementoSupported", v28, v41);
        CFTypeID v29 = CFBooleanGetTypeID();
        sub_23C1FD9B8(Mutable, @"MementoBlobExists", v29, v42);
        CFTypeID v30 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"MementoPasscodeGeneration", v30, v43);
        CFTypeID v31 = CFNumberGetTypeID();
        sub_23C1FD9B8(Mutable, @"PasscodeGeneration", v31, v44);
        char v32 = sub_23C2060E4();
        char v33 = (const void *)*MEMORY[0x263EFFB38];
        uint64_t v34 = (const void *)*MEMORY[0x263EFFB40];
        if ((v32 & 2) != 0) {
          uint64_t v35 = (const void *)*MEMORY[0x263EFFB40];
        }
        else {
          uint64_t v35 = (const void *)*MEMORY[0x263EFFB38];
        }
        CFDictionarySetValue(Mutable, @"InactivityRebootEnabled", v35);
        if ((v32 & 8) != 0) {
          uint64_t v36 = v34;
        }
        else {
          uint64_t v36 = v33;
        }
        CFDictionarySetValue(Mutable, @"OnenessAutomaticMode", v36);
        uint64_t v4 = 0;
        *uint64_t v45 = Mutable;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_configuration", ":", 1556, "", 0, "", "");
  }
  return v4;
}

void sub_23C1FD9B8(__CFDictionary *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    if (CFNumberGetTypeID() == a3)
    {
      CFIndex valuePtr = sub_23C2060E4();
      CFNumberRef v7 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt64Type, &valuePtr);
      if (!v7) {
        return;
      }
LABEL_14:
      CFNumberRef v12 = v7;
      CFDictionaryAddValue(a1, a2, v7);
      CFRelease(v12);
      return;
    }
    if (CFBooleanGetTypeID() == a3)
    {
      int v8 = sub_23C206398();
      uint64_t v9 = (const void **)MEMORY[0x263EFFB40];
      if (!v8) {
        uint64_t v9 = (const void **)MEMORY[0x263EFFB38];
      }
      uint64_t v10 = *v9;
      CFDictionaryAddValue(a1, a2, v10);
    }
    else if (CFDataGetTypeID() == a3)
    {
      CFIndex valuePtr = 0;
      uint64_t v11 = (const UInt8 *)ccder_decode_tl();
      if (v11)
      {
        CFNumberRef v7 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v11, valuePtr);
        goto LABEL_14;
      }
    }
  }
}

uint64_t sub_23C1FDB00(int a1, unsigned int a2, uint64_t a3)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = a2;
  input[1] = a3;
  uint64_t input[2] = a1;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3) {
    return IOConnectCallMethod(v3, 0x1Au, input, 3u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_hold", ":", 1654, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FDBE4(int a1, unsigned int a2)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  input[0] = a2;
  input[1] = a1;
  mach_port_t v2 = sub_23C1F5E58();
  if (v2) {
    return IOConnectCallMethod(v2, 0x1Bu, input, 2u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_drop", ":", 1672, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FDCC4(int a1, unsigned int a2)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  mach_port_t v4 = sub_23C1F5E58();
  if (v4)
  {
    input[0] = a2;
    input[1] = a1;
    return IOConnectCallMethod(v4, 0x64u, input, 2u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_promote", ":", 1687, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FDDB4(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x91u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_oneness_heartbeat", ":", 1707, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FDE90(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x65u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_assert_consume", ":", 1722, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FDF6C(int a1, uint64_t a2)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  uint64_t v15 = 0;
  int v14 = 0;
  mach_port_t v4 = sub_23C1F5E58();
  if (v4)
  {
    mach_port_t v10 = v4;
    sub_23C20A1EC((char **)&v15, (unsigned int *)&v14, 3, v5, v6, v7, v8, v9, a2);
    input[0] = a1;
    input[1] = (uint64_t)v15;
    uint64_t input[2] = v14;
    uint64_t v11 = IOConnectCallMethod(v10, 0x12u, input, 3u, 0, 0, 0, 0, 0, 0);
    CFNumberRef v12 = v15;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_recover_with_escrow_bag", ":", 1739, "", 0, "", "");
    CFNumberRef v12 = 0;
    uint64_t v11 = 3758097084;
  }
  free(v12);
  return v11;
}

uint64_t sub_23C1FE0D0()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  mach_port_t v4 = v3;
  int v6 = v5;
  uint64_t v7 = (const void *)v0;
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v8 = 3758097090;
  bzero(__src, 0x8000uLL);
  size_t __count = 0x8000;
  mach_port_t v9 = sub_23C1F5E58();
  if (v9)
  {
    if (v7 && v4 && v2)
    {
      uint64_t v10 = IOConnectCallMethod(v9, 0x29u, 0, 0, v7, v6, 0, 0, __src, &__count);
      if (v10)
      {
        uint64_t v8 = v10;
      }
      else
      {
        uint64_t v11 = calloc(__count, 1uLL);
        *mach_port_t v4 = v11;
        if (v11)
        {
          memcpy(v11, __src, __count);
          uint64_t v8 = 0;
          *mach_port_t v2 = __count;
        }
        else
        {
          uint64_t v8 = 3758097085;
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fdr_hmac_data", ":", 1758, "", 0, "", "");
    uint64_t v8 = 3758097084;
  }
  memset_s(__src, 0x8000uLL, 0, 0x8000uLL);
  return v8;
}

uint64_t sub_23C1FE274(int a1, unsigned int a2, _DWORD *a3)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  mach_port_t v6 = sub_23C1F5E58();
  if (v6)
  {
    input[0] = a1;
    input[1] = a2;
    uint64_t output = 0;
    uint32_t outputCnt = 1;
    uint64_t result = IOConnectCallMethod(v6, 0x28u, input, 2u, 0, 0, &output, &outputCnt, 0, 0);
    if (a3)
    {
      if (!result) {
        *a3 = output;
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_generation", ":", 1781, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C1FE38C(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  uint64_t v9 = 3758097084;
  CFTypeID v21 = 0;
  int v20 = 0;
  mach_port_t v10 = sub_23C1F5E58();
  if (v10)
  {
    mach_port_t v16 = v10;
    if (a2) {
      CFTypeID v17 = a2;
    }
    else {
      CFTypeID v17 = "";
    }
    sub_23C20A1EC((char **)&v21, (unsigned int *)&v20, 2, v11, v12, v13, v14, v15, (uint64_t)v17);
    if (v21)
    {
      input[0] = a1;
      input[1] = a6;
      uint64_t input[2] = (uint64_t)v21;
      uint64_t input[3] = v20;
      uint64_t v9 = IOConnectCallMethod(v16, 0x2Au, input, 4u, 0, 0, 0, 0, 0, 0);
      CFTypeID v18 = v21;
    }
    else
    {
      CFTypeID v18 = 0;
      uint64_t v9 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_aks_verify_password", ":", 1807, "", 0, "", "");
    CFTypeID v18 = 0;
  }
  free(v18);
  return v9;
}

uint64_t sub_23C1FE518(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23C1FE38C(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_23C1FE520(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23C1FE38C(a1, a2, a3, a4, a5, 1u);
}

uint64_t sub_23C1FE528()
{
  if (sub_23C1F5E58())
  {
    JUMPOUT(0x23ECDD2B0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_register_for_notifications", ":", 1840, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FE5E4(int a1, int a2, void *a3, size_t *a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  size_t __count = 256;
  input[0] = a1;
  input[1] = a2;
  uint64_t result = 3758097090;
  if (a3 && a4)
  {
    mach_port_t v7 = sub_23C1F5E58();
    if (v7)
    {
      memset(__src, 0, sizeof(__src));
      uint64_t result = IOConnectCallMethod(v7, 0x31u, input, 2u, 0, 0, 0, 0, __src, &__count);
      if (!result)
      {
        if (__count > 0x100)
        {
          return 3758604298;
        }
        else
        {
          uint64_t v8 = calloc(__count, 1uLL);
          *a3 = v8;
          if (v8)
          {
            memcpy(v8, __src, __count);
            uint64_t result = 0;
            *a4 = __count;
          }
          else
          {
            return 3758097085;
          }
        }
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_create_signing_key", ":", 1859, "", 0, "", "");
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_23C1FE778()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v17 = *MEMORY[0x263EF8340];
  size_t __count = 0x8000;
  input[0] = v0;
  input[1] = v5;
  uint64_t result = 3758097090;
  if (v3)
  {
    mach_port_t v7 = v4;
    if (v4)
    {
      uint64_t v8 = v3;
      size_t v9 = v2;
      mach_port_t v10 = v1;
      mach_port_t v11 = sub_23C1F5E58();
      if (v11)
      {
        mach_port_t v12 = v11;
        bzero(__src, 0x8000uLL);
        uint64_t result = IOConnectCallMethod(v12, 0x31u, input, 2u, v10, v9, 0, 0, __src, &__count);
        if (!result)
        {
          if (__count > 0x8000)
          {
            return 3758604298;
          }
          else
          {
            uint64_t v13 = calloc(__count, 1uLL);
            *uint64_t v8 = v13;
            if (v13)
            {
              memcpy(v13, __src, __count);
              uint64_t result = 0;
              *mach_port_t v7 = __count;
            }
            else
            {
              return 3758097085;
            }
          }
        }
      }
      else
      {
        fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_create_signing_key_with_params", ":", 1881, "", 0, "", "");
        return 3758097084;
      }
    }
  }
  return result;
}

uint64_t sub_23C1FE928()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FE940()
{
  int v0 = MEMORY[0x270FA5388]();
  size_t v2 = v1;
  mach_port_t v4 = v3;
  uint32_t v6 = v5;
  uint64_t v19 = *MEMORY[0x263EF8340];
  size_t __count = 15360;
  input[0] = v0;
  input[1] = v7;
  uint64_t input[2] = v8;
  mach_port_t v9 = sub_23C1F5E58();
  if (v9)
  {
    mach_port_t v10 = v9;
    bzero(__src, 0x3C00uLL);
    uint64_t v11 = IOConnectCallMethod(v10, v6, input, 3u, 0, 0, 0, 0, __src, &__count);
    if (v11)
    {
      return v11;
    }
    else if (__count > 0x3C00)
    {
      return 3758604298;
    }
    else
    {
      uint64_t v12 = 0;
      if (v4 && v2)
      {
        if (__count)
        {
          uint64_t v13 = calloc(__count, 1uLL);
          *mach_port_t v4 = v13;
          if (!v13) {
            return 3758097085;
          }
          memcpy(v13, __src, __count);
          size_t v14 = __count;
        }
        else
        {
          size_t v14 = 0;
        }
        uint64_t v12 = 0;
        *size_t v2 = v14;
      }
    }
  }
  else
  {
    uint64_t v12 = 3758097084;
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "remote_session_operate", ":", 2017, "", 0, "", "");
  }
  return v12;
}

uint64_t sub_23C1FEB00(int a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, void *a8, size_t *a9)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  memset(__src, 0, sizeof(__src));
  size_t __count = 256;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  input[0] = a1;
  input[1] = a2;
  uint64_t v9 = 3758097090;
  uint64_t input[2] = a5;
  if (a8 && a9)
  {
    mach_port_t v12 = sub_23C1F5E58();
    if (v12)
    {
      mach_port_t v18 = v12;
      sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 2, v13, v14, v15, v16, v17, a3);
      if (*(void *)&inputStructCnt[1])
      {
        uint64_t v19 = IOConnectCallMethod(v18, 0x32u, input, 3u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
        if (v19)
        {
          uint64_t v9 = v19;
        }
        else if (__count > 0x100)
        {
          uint64_t v9 = 3758604298;
        }
        else
        {
          int v20 = calloc(__count, 1uLL);
          *a8 = v20;
          uint64_t v9 = 3758097085;
          if (v20)
          {
            memcpy(v20, __src, __count);
            uint64_t v9 = 0;
            *a9 = __count;
          }
        }
      }
      else
      {
        uint64_t v9 = 3758097085;
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_sign_signing_key", ":", 1911, "", 0, "", "");
      uint64_t v9 = 3758097084;
    }
  }
  free(*(void **)&inputStructCnt[1]);
  return v9;
}

uint64_t sub_23C1FED04(int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  uint64_t v10 = 3758097084;
  input[0] = a2;
  input[1] = a1;
  uint64_t output = 0;
  uint32_t outputCnt = 1;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  mach_port_t v11 = sub_23C1F5E58();
  if (v11)
  {
    mach_port_t v17 = v11;
    sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 3, v12, v13, v14, v15, v16, a3);
    if (*(void *)&inputStructCnt[1])
    {
      uint64_t v18 = IOConnectCallMethod(v17, 0x2Cu, input, 2u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], &output, &outputCnt, 0, 0);
      uint64_t v10 = v18;
      if (a9 && !v18) {
        *a9 = output;
      }
    }
    else
    {
      uint64_t v10 = 3758097085;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_remote_session", ":", 1938, "", 0, "", "");
  }
  free(*(void **)&inputStructCnt[1]);
  return v10;
}

uint64_t sub_23C1FEE80(int a1, int a2, uint64_t a3, uint64_t a4)
{
  mach_port_t v17 = 0;
  int __s = 0;
  uint64_t v4 = 3758097084;
  rsize_t __n = 0;
  uint64_t v16 = 0;
  uint64_t v5 = 3758097090;
  rsize_t __smax = 0;
  if (!a3 || !a4) {
    goto LABEL_12;
  }
  int v8 = -536870212;
  *(void *)&long long v19 = a3;
  *((void *)&v19 + 1) = a3 + a4;
  if (!(a3 + a4)) {
    goto LABEL_19;
  }
  uint64_t v16 = 0;
  if ((ccder_blob_decode_range() & 1) == 0)
  {
    int v8 = -536870198;
LABEL_19:
    syslog(3, "error parsing signing key: %d", v8);
    uint64_t v5 = 3758097084;
LABEL_12:
    uint64_t v12 = __s;
    uint64_t v4 = v5;
    goto LABEL_13;
  }
  sub_23C208F14(&v19, 0x8000000000000001, &v16);
  if (v16)
  {
    uint64_t v5 = sub_23C1FE940();
    if (v5) {
      syslog(3, "error: validating v1 local signing key failed: %d");
    }
    goto LABEL_12;
  }
  uint64_t v11 = sub_23C1FE5E4(a1, 11, &__s, &__n);
  if (v11)
  {
    uint64_t v5 = v11;
    syslog(3, "error: validating (create) v0 local signing key failed: %d", v11);
    goto LABEL_12;
  }
  uint64_t v12 = __s;
  if (__s && __n)
  {
    uint64_t v5 = sub_23C1FEB00(a1, a2, a3, a4, 11, (uint64_t)__s, __n, &v17, &__smax);
    if (v5) {
      syslog(3, "error: validating (sign) v0 local signing key failed: %d");
    }
    goto LABEL_12;
  }
LABEL_13:
  if (v12)
  {
    memset_s(v12, __n, 0, __n);
    free(__s);
  }
  if (v17)
  {
    memset_s(v17, __smax, 0, __smax);
    free(v17);
  }
  return v4;
}

uint64_t sub_23C1FF058()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF070()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF088()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF0A4()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF0BC()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF0D4()
{
  int v0 = MEMORY[0x270FA5388]();
  size_t v2 = v1;
  uint64_t v4 = v3;
  int v5 = v0;
  uint64_t v13 = *MEMORY[0x263EF8340];
  mach_port_t v6 = sub_23C1F5E58();
  if (v6)
  {
    mach_port_t v7 = v6;
    uint64_t result = 3758097090;
    if (v4)
    {
      if (v2)
      {
        bzero(__src, 0x8000uLL);
        size_t __count = 0x8000;
        input[0] = v5;
        input[1] = 0;
        uint64_t result = IOConnectCallMethod(v7, 0x14u, input, 2u, 0, 0, 0, 0, __src, &__count);
        if (!result)
        {
          if (__count)
          {
            uint64_t v9 = calloc(__count, 1uLL);
            *uint64_t v4 = v9;
            if (v9)
            {
              memcpy(v9, __src, __count);
              uint64_t result = 0;
              *size_t v2 = __count;
            }
            else
            {
              return 3758097085;
            }
          }
          else
          {
            return 3758097136;
          }
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drain_backup_keys", ":", 2072, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C1FF274()
{
  int v0 = MEMORY[0x270FA5388]();
  size_t v2 = v1;
  uint64_t v4 = v3;
  int v5 = v0;
  uint64_t v13 = *MEMORY[0x263EF8340];
  mach_port_t v6 = sub_23C1F5E58();
  if (v6)
  {
    mach_port_t v7 = v6;
    uint64_t result = 3758097090;
    if (v4)
    {
      if (v2)
      {
        bzero(__src, 0x8000uLL);
        size_t __count = 0x8000;
        input[0] = v5;
        input[1] = 1;
        uint64_t result = IOConnectCallMethod(v7, 0x14u, input, 2u, 0, 0, 0, 0, __src, &__count);
        if (!result)
        {
          if (__count)
          {
            if (__ROR8__(0xEF7BDEF7BDEF7BDFLL * __count, 2) > 0x210842108421084uLL)
            {
              return 3758604298;
            }
            else
            {
              uint64_t v9 = calloc(__count, 1uLL);
              *uint64_t v4 = v9;
              if (v9)
              {
                memcpy(v9, __src, __count);
                uint64_t result = 0;
                *size_t v2 = __count / 0x7C;
              }
              else
              {
                return 3758097085;
              }
            }
          }
          else
          {
            return 3758097136;
          }
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drain_backup_keys_info", ":", 2100, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C1FF470(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    input[0] = a1;
    return IOConnectCallMethod(v2, 0x16u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_clear_backup_bag", ":", 2129, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FF558()
{
  int v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  uint64_t v4 = v3;
  int v6 = v5;
  uint64_t v8 = v7;
  int v10 = v9;
  int v11 = v0;
  uint64_t v22 = *MEMORY[0x263EF8340];
  mach_port_t v12 = sub_23C1F5E58();
  if (!v12)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_backup_bag", ":", 2146, "", 0, "", "");
    return 3758097084;
  }
  mach_port_t v13 = v12;
  if (v4)
  {
    if (!v2) {
      return 3758097090;
    }
    long long outputStruct = __src;
    p_count = &__count;
    uint64_t v16 = 1;
  }
  else
  {
    p_count = 0;
    long long outputStruct = 0;
    uint64_t v16 = 0;
  }
  bzero(__src, 0x8000uLL);
  size_t __count = 0x8000;
  input[0] = v11;
  input[1] = v10;
  uint64_t input[2] = v16;
  uint64_t input[3] = v8;
  uint64_t input[4] = v6;
  uint64_t result = IOConnectCallMethod(v13, 0x15u, input, 5u, 0, 0, 0, 0, outputStruct, p_count);
  if (v4 && !result)
  {
    uint64_t v18 = calloc(__count, 1uLL);
    *uint64_t v4 = v18;
    if (v18)
    {
      memcpy(v18, __src, __count);
      uint64_t result = 0;
      *mach_port_t v2 = __count;
    }
    else
    {
      return 3758097085;
    }
  }
  return result;
}

uint64_t sub_23C1FF734(int a1, _DWORD *a2)
{
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097084;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a2)
    {
      uint64_t output = 0;
      input[0] = a1;
      uint32_t outputCnt = 1;
      uint64_t v4 = IOConnectCallMethod(v5, 0x52u, input, 1u, 0, 0, &output, &outputCnt, 0, 0);
      if (!v4) {
        *a2 = output;
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_make_public_backup_bag", ":", 2178, "", 0, "", "");
  }
  return v4;
}

uint64_t sub_23C1FF850()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF868()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF884()
{
  return sub_23C1FE940();
}

uint64_t sub_23C1FF89C()
{
  return sub_23C1FF8A8();
}

uint64_t sub_23C1FF8A8()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint32_t v4 = v3;
  input[1] = *MEMORY[0x263EF8340];
  input[0] = v0;
  *(void *)mach_port_t v12 = 4096;
  uint64_t v5 = 3758097084;
  int v18 = 0;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long __s = 0u;
  mach_port_t v6 = sub_23C1F5E58();
  if (v6)
  {
    if (v2)
    {
      mach_port_t v7 = v6;
      bzero(outputStruct, 0x1000uLL);
      uint64_t v8 = IOConnectCallMethod(v7, v4, input, 1u, 0, 0, 0, 0, outputStruct, (size_t *)v12);
      if (v8)
      {
        return v8;
      }
      else
      {
        uint64_t v5 = 0;
        if (!sub_23C207E30((uint64_t)outputStruct, v12[0], (char *)&__s))
        {
          long long v9 = v16;
          *(_OWORD *)(v2 + 32) = v15;
          *(_OWORD *)(v2 + 48) = v9;
          *(_WORD *)(v2 + 64) = v17;
          long long v10 = v14;
          *(_OWORD *)uint64_t v2 = __s;
          *(_OWORD *)(v2 + 16) = v10;
        }
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_get_device_state", ":", 2224, "", 0, "", "");
  }
  return v5;
}

uint64_t sub_23C1FFA44()
{
  return sub_23C1FF8A8();
}

uint64_t sub_23C1FFA50()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  size_t v4 = v3;
  mach_port_t v6 = v5;
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v7 = 3758097084;
  v12[0] = 4096;
  uint64_t input = v0;
  mach_port_t v8 = sub_23C1F5E58();
  if (v8)
  {
    if (v2)
    {
      mach_port_t v9 = v8;
      bzero(outputStruct, 0x1000uLL);
      memset_s(v2, 0x10uLL, 0, 0x10uLL);
      uint64_t v10 = IOConnectCallMethod(v9, 0x39u, &input, 1u, v6, v4, 0, 0, outputStruct, v12);
      if (v10)
      {
        return v10;
      }
      else
      {
        uint64_t v17 = 0;
        long long v21 = 0u;
        long long v13 = 0u;
        long long v14 = 0u;
        long long v16 = 0u;
        long long v19 = 0u;
        long long v20 = 0u;
        long long v22 = 0u;
        uint64_t v23 = 0;
        v12[1] = (size_t)off_268B98DD8;
        long long v15 = (unint64_t)off_268B98DE0;
        int v18 = off_268B98DE8;
        *(void *)&long long v21 = off_268B98DF0;
        sub_23C205EAC();
        *uint64_t v2 = sub_23C2060E4();
        v2[1] = sub_23C2060E4();
        v2[2] = sub_23C2060E4();
        uint64_t v7 = 0;
        v2[3] = sub_23C2060E4();
      }
    }
    else
    {
      return 3758097090;
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_remote_peer_get_state", ":", 2255, "", 0, "", "");
  }
  return v7;
}

uint64_t sub_23C1FFCC4(int a1, const void *a2, size_t a3)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5) {
    return IOConnectCallMethod(v5, 0x3Au, input, 1u, a2, a3, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_remote_peer_drop", ":", 2292, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FFDB0(int a1, int a2)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3)
  {
    if (a2) {
      uint32_t v4 = 32;
    }
    else {
      uint32_t v4 = 8;
    }
    return IOConnectCallMethod(v3, v4, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lock_device", ":", 2307, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C1FFEA4(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x8Du, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lock_cx", ":", 2327, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C1FFF80(int a1, uint64_t a2, int a3)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = a1;
  input[1] = a2;
  uint64_t input[2] = a3;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3) {
    return IOConnectCallMethod(v3, 9u, input, 3u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_unlock_device", ":", 2342, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C200064()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x13u, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_obliterate_class_d", ":", 2355, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C20010C(int a1, unsigned int a2, uint64_t a3, unsigned int a4, const void *a5, int a6)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  mach_port_t v12 = sub_23C1F5E58();
  if (v12)
  {
    input[0] = a1;
    input[1] = a2;
    uint64_t input[2] = a3;
    uint64_t input[3] = a4;
    return IOConnectCallMethod(v12, 0x3Fu, input, 4u, a5, a6, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_migrate_s_key", ":", 2367, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C200224(int a1, uint64_t a2, uint64_t a3, unsigned int a4, const void *a5, size_t a6, void *a7, size_t *a8)
{
  uint64_t input[4] = *MEMORY[0x263EF8340];
  input[0] = a1;
  input[1] = a4;
  uint64_t input[2] = a2;
  uint64_t input[3] = a3;
  size_t __count = 2048;
  mach_port_t v12 = sub_23C1F5E58();
  if (v12)
  {
    mach_port_t v13 = v12;
    bzero(__src, 0x800uLL);
    uint64_t v14 = IOConnectCallMethod(v13, 0x3Bu, input, 4u, a5, a6, 0, 0, __src, &__count);
    if (v14)
    {
      return v14;
    }
    else if (__count > 0x800)
    {
      return 3758604298;
    }
    else
    {
      uint64_t v15 = 0;
      if (a7 && a8)
      {
        if (__count)
        {
          long long v16 = calloc(__count, 1uLL);
          *a7 = v16;
          if (!v16) {
            return 3758097085;
          }
          memcpy(v16, __src, __count);
          size_t v17 = __count;
        }
        else
        {
          size_t v17 = 0;
        }
        uint64_t v15 = 0;
        *a8 = v17;
      }
    }
  }
  else
  {
    uint64_t v15 = 3758097084;
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_register", ":", 2388, "", 0, "", "");
  }
  return v15;
}

uint64_t sub_23C2003D4(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x3Cu, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_unregister", ":", 2412, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C2004B0(int a1, const void *a2, size_t a3, void *a4, size_t *a5)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  size_t __count = 2048;
  mach_port_t v9 = sub_23C1F5E58();
  if (v9)
  {
    mach_port_t v10 = v9;
    bzero(__src, 0x800uLL);
    uint64_t v11 = IOConnectCallMethod(v10, 0x3Du, input, 1u, a2, a3, 0, 0, __src, &__count);
    if (v11)
    {
      return v11;
    }
    else if (__count > 0x800)
    {
      return 3758604298;
    }
    else
    {
      uint64_t v12 = 0;
      if (a4 && a5)
      {
        if (__count)
        {
          mach_port_t v13 = calloc(__count, 1uLL);
          *a4 = v13;
          if (!v13) {
            return 3758097085;
          }
          memcpy(v13, __src, __count);
          size_t v14 = __count;
        }
        else
        {
          size_t v14 = 0;
        }
        uint64_t v12 = 0;
        *a5 = v14;
      }
    }
  }
  else
  {
    uint64_t v12 = 3758097084;
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_request_unlock", ":", 2429, "", 0, "", "");
  }
  return v12;
}

uint64_t sub_23C200658(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  bzero(__src, 0x800uLL);
  size_t __count = 2048;
  sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 2, v10, v11, v12, v13, v14, a2);
  if (!*(void *)&inputStructCnt[1])
  {
    uint64_t v17 = 3758097085;
    goto LABEL_12;
  }
  mach_port_t v15 = sub_23C1F5E58();
  if (!v15)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_smartcard_unlock", ":", 2460, "", 0, "", "");
    uint64_t v17 = 3758097084;
    goto LABEL_12;
  }
  uint64_t v16 = IOConnectCallMethod(v15, 0x3Eu, input, 1u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
  if (v16)
  {
    uint64_t v17 = v16;
    goto LABEL_12;
  }
  if (__count > 0x800)
  {
    uint64_t v17 = 3758604298;
    goto LABEL_12;
  }
  uint64_t v17 = 0;
  if (a6 && a7)
  {
    if (!__count)
    {
      size_t v19 = 0;
      goto LABEL_11;
    }
    int v18 = calloc(__count, 1uLL);
    *a6 = v18;
    uint64_t v17 = 3758097085;
    if (v18)
    {
      memcpy(v18, __src, __count);
      size_t v19 = __count;
LABEL_11:
      uint64_t v17 = 0;
      *a7 = v19;
    }
  }
LABEL_12:
  free(*(void **)&inputStructCnt[1]);
  return v17;
}

uint64_t sub_23C200840(unint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a3 && a4)
  {
    if (sub_23C200890((uint64_t)off_268B98E00, 0, a1, a2, a3, a4)) {
      return 0xFFFFFFFFLL;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_23C200890(uint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t *a5, void *a6)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a6 && a3 && a4 && a5 && a3 + a4 > a3)
  {
    sub_23C205EAC();
    if (a2)
    {
      if (*a6 == 8)
      {
        uint64_t v10 = sub_23C2060E4();
        uint64_t result = 0;
        *a5 = v10;
        return result;
      }
      return 0xFFFFFFFFLL;
    }
    uint64_t v11 = ccder_decode_tl();
    if (!v11) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v12 = v11;
    uint64_t result = 0;
    *a5 = v12;
    *a6 = 0;
  }
  return result;
}

uint64_t sub_23C2009C0(unint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a3 && a4)
  {
    if (sub_23C200890((uint64_t)off_268B98E30, 0, a1, a2, a3, a4)) {
      return 0xFFFFFFFFLL;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_23C200A10(unint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v5 = 8;
  if (!a3) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v6 = 0;
  uint64_t result = sub_23C200890((uint64_t)off_268B98E18, 1, a1, a2, &v6, &v5);
  if (result) {
    return 0xFFFFFFFFLL;
  }
  *a3 = v6;
  return result;
}

uint64_t sub_23C200A80(unint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v5 = 8;
  if (!a3) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v6 = 0;
  uint64_t result = sub_23C200890((uint64_t)off_268B98E10, 1, a1, a2, &v6, &v5);
  if (result) {
    return 0xFFFFFFFFLL;
  }
  *a3 = v6;
  return result;
}

uint64_t sub_23C200AF0(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x47u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_fail", ":", 2589, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C200BCC(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x49u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_set_healthy", ":", 2605, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C200CA8(int a1, uint64_t a2, uint64_t a3)
{
  return sub_23C200CB0(a1, a2, a3, 0x45u);
}

uint64_t sub_23C200CB0(int a1, uint64_t a2, uint64_t a3, uint32_t a4)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = a1;
  input[1] = a2;
  uint64_t input[2] = a3;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5) {
    return IOConnectCallMethod(v5, a4, input, 3u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "__aks_se_set_secret", ":", 2621, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C200D9C(int a1, uint64_t a2, uint64_t a3)
{
  return sub_23C200CB0(a1, a2, a3, 0x8Cu);
}

uint64_t sub_23C200DA4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = a1;
  input[1] = a2;
  uint64_t input[2] = a3;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3) {
    return IOConnectCallMethod(v3, 0x46u, input, 3u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_recover", ":", 2649, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C200E84(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = a1;
  input[1] = a2;
  uint64_t input[2] = a3;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3) {
    return IOConnectCallMethod(v3, 0x69u, input, 3u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_change_secret_epilogue", ":", 2665, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C200F64()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = v0;
  input[1] = v3;
  uint64_t input[2] = v4;
  bzero(__s, 0x1000uLL);
  __n[0] = 4096;
  mach_port_t v5 = sub_23C1F5E58();
  if (!v5)
  {
    uint64_t v8 = 3758097084;
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_get_reset_token_for_memento_secret", ":", 2683, "", 0, "", "");
    goto LABEL_10;
  }
  uint64_t v6 = IOConnectCallMethod(v5, 0x48u, input, 3u, 0, 0, 0, 0, __s, __n);
  if (v6)
  {
    uint64_t v8 = v6;
    goto LABEL_10;
  }
  if (__n[0] - 4097 < 0xFFFFFFFFFFFFF000)
  {
    uint64_t v8 = 3758604298;
    goto LABEL_10;
  }
  uint64_t v15 = 0;
  long long v14 = 0u;
  long long v12 = 0u;
  long long v11 = 0u;
  __n[1] = (rsize_t)off_268B98E88;
  long long v13 = (unint64_t)off_268B98E90;
  sub_23C205EAC();
  if ((void)v11)
  {
    ccder_decode_tl();
LABEL_9:
    uint64_t v8 = 0;
    goto LABEL_10;
  }
  if (!*((void *)&v13 + 1)) {
    goto LABEL_9;
  }
  unint64_t v7 = sub_23C2060E4();
  if (v7 > 0xFF) {
    goto LABEL_9;
  }
  uint64_t v8 = 0;
  *uint64_t v2 = v7;
LABEL_10:
  memset_s(__s, __n[0], 0, __n[0]);
  return v8;
}

uint64_t sub_23C2011E0()
{
  return sub_23C200F64();
}

uint64_t sub_23C2011F4(int a1, const void *a2, size_t a3)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v5 = sub_23C1F5E58();
  if (v5)
  {
    if (a2) {
      size_t v6 = a3;
    }
    else {
      size_t v6 = 0;
    }
    return IOConnectCallMethod(v5, 0x58u, input, 1u, a2, v6, 0, 0, 0, 0);
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_set_nonce", ":", 2737, "", 0, "", "");
    return 3758097084;
  }
}

uint64_t sub_23C2012E4()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  size_t v6 = v5;
  uint64_t v8 = v7;
  input[1] = *MEMORY[0x263EF8340];
  input[0] = v0;
  bzero(&__s, 0x1000uLL);
  size_t __n = 4096;
  uint64_t v9 = 3758097090;
  if (v8)
  {
    if (v6)
    {
      uint64_t v9 = 3758097090;
      if (v4)
      {
        if (v2)
        {
          mach_port_t v10 = sub_23C1F5E58();
          if (v10)
          {
            uint64_t v11 = IOConnectCallMethod(v10, 0x5Au, input, 1u, 0, 0, 0, 0, &__s, &__n);
            if (v11)
            {
              uint64_t v9 = v11;
            }
            else if (__n - 4097 < 0xFFFFFFFFFFFFF005)
            {
              uint64_t v9 = 3758604298;
            }
            else
            {
              long long v12 = calloc(5uLL, 1uLL);
              *uint64_t v4 = v12;
              if (v12)
              {
                *uint64_t v2 = 5;
                int v13 = __s;
                v12[4] = v19;
                *(_DWORD *)long long v12 = v13;
                long long v14 = calloc(__n - 5, 1uLL);
                *uint64_t v8 = v14;
                uint64_t v9 = 3758097085;
                if (v14)
                {
                  size_t v15 = __n;
                  *size_t v6 = __n - 5;
                  memcpy(v14, v20, v15);
                  uint64_t v9 = 0;
                }
              }
              else
              {
                uint64_t v9 = 3758097085;
              }
            }
          }
          else
          {
            fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_get_reset_sig", ":", 2759, "", 0, "", "");
            uint64_t v9 = 3758097084;
          }
        }
      }
    }
  }
  memset_s(&__s, __n, 0, __n);
  return v9;
}

uint64_t sub_23C2014FC()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  input[1] = *MEMORY[0x263EF8340];
  input[0] = v0;
  size_t v5 = 4096;
  bzero(__src, 0x1000uLL);
  size_t __count = 4096;
  uint64_t v6 = 3758097090;
  if (v4 && v2)
  {
    mach_port_t v7 = sub_23C1F5E58();
    if (v7)
    {
      uint64_t v8 = IOConnectCallMethod(v7, 0x59u, input, 1u, 0, 0, 0, 0, __src, &__count);
      size_t v5 = __count;
      if (v8)
      {
        uint64_t v6 = v8;
      }
      else if (__count - 4097 < 0xFFFFFFFFFFFFF000)
      {
        uint64_t v6 = 3758604298;
      }
      else
      {
        uint64_t v9 = calloc(__count, 1uLL);
        *uint64_t v4 = v9;
        size_t v5 = __count;
        if (v9)
        {
          *uint64_t v2 = __count;
          memcpy(v9, __src, v5);
          uint64_t v6 = 0;
          size_t v5 = __count;
        }
        else
        {
          uint64_t v6 = 3758097085;
        }
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_get_reset_pubkey", ":", 2791, "", 0, "", "");
      size_t v5 = 4096;
      uint64_t v6 = 3758097084;
    }
  }
  memset_s(__src, v5, 0, v5);
  return v6;
}

uint64_t sub_23C2016C4(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x5Bu, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_delete_reset_token", ":", 2815, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C2017A0(unsigned int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x5Eu, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_support_in_rm", ":", 2832, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C20187C(BOOL *a1)
{
  output[1] = *MEMORY[0x263EF8340];
  output[0] = 0;
  uint32_t outputCnt = 1;
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    uint64_t result = IOConnectCallMethod(v2, 0x6Bu, 0, 0, 0, 0, output, &outputCnt, 0, 0);
    if (a1)
    {
      if (!result) {
        *a1 = output[0] != 0;
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_support_in_rm_is_set", ":", 2848, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C201980()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x5Fu, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_stage_stash", ":", 2865, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C201A28()
{
  return sub_23C1F70D8();
}

uint64_t sub_23C201A48()
{
  return sub_23C1F7328();
}

uint64_t sub_23C201A64()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  uint64_t v14 = *MEMORY[0x263EF8340];
  bzero(__s, 0x1000uLL);
  *(void *)&long long v11 = __s;
  *((void *)&v11 + 1) = &v14;
  *(void *)long long v12 = 4096;
  uint64_t v6 = 3758097090;
  if (v4 && v2)
  {
    mach_port_t v7 = sub_23C1F5E58();
    if (v7)
    {
      mach_port_t v8 = v7;
      if (sub_23C207A08(&v11, v4) && sub_23C207B28(&v11, v5))
      {
        uint64_t v6 = 3758097098;
        if (ccder_blob_encode_tl())
        {
          uint64_t v9 = IOConnectCallMethod(v8, 0x55u, 0, 0, *((const void **)&v11 + 1), (size_t)&v14 - *((void *)&v11 + 1), 0, 0, __s, (size_t *)v12);
          if (!v9) {
            uint64_t v9 = sub_23C208398((uint64_t)__s, *(uint64_t *)v12, v2);
          }
          uint64_t v6 = v9;
        }
      }
      else
      {
        uint64_t v6 = 3758097098;
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_get_blob_state", ":", 2900, "", 0, "", "");
      uint64_t v6 = 3758097084;
    }
  }
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v6;
}

uint64_t sub_23C201C40()
{
  return sub_23C201A64();
}

uint64_t sub_23C201CAC()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  uint64_t v3 = v0;
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 3758097098;
  uint64_t output = 0;
  input[0] = v5;
  uint32_t outputCnt = 1;
  bzero(__s, 0x1000uLL);
  *(void *)&long long v9 = __s;
  *((void *)&v9 + 1) = &output;
  if (v2)
  {
    mach_port_t v6 = sub_23C1F5E58();
    if (v6)
    {
      mach_port_t v7 = v6;
      if (sub_23C207B28(&v9, v3))
      {
        if (ccder_blob_encode_tl())
        {
          uint64_t v4 = IOConnectCallMethod(v7, 0x4Eu, input, 1u, *((const void **)&v9 + 1), (size_t)&input[-1] - *((void *)&v9 + 1), &output, &outputCnt, 0, 0);
          if (!v4) {
            *mach_port_t v2 = output;
          }
        }
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_get_size", ":", 2943, "", 0, "", "");
      uint64_t v4 = 3758097084;
    }
  }
  else
  {
    uint64_t v4 = 3758097090;
  }
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v4;
}

uint64_t sub_23C201E50()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = v0;
  input[1] = *MEMORY[0x263EF8340];
  input[0] = v8;
  bzero(__s, 0x1000uLL);
  *(void *)&long long v15 = __s;
  *((void *)&v15 + 1) = input;
  size_t v16 = 4096;
  uint64_t v9 = 3758097090;
  if (v6 && v4)
  {
    mach_port_t v10 = sub_23C1F5E58();
    if (!v10)
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fv_import", ":", 2971, "", 0, "", "");
      uint64_t v9 = 3758097084;
      goto LABEL_14;
    }
    mach_port_t v11 = v10;
    if (!ccder_blob_encode_body_tl()
      || !sub_23C207A08(&v15, v6)
      || !sub_23C207B28(&v15, v7)
      || !ccder_blob_encode_tl())
    {
      goto LABEL_12;
    }
    uint64_t v12 = IOConnectCallMethod(v11, 0x4Fu, input, 1u, *((const void **)&v15 + 1), (size_t)input - *((void *)&v15 + 1), 0, 0, __s, &v16);
    if (v12)
    {
      uint64_t v9 = v12;
      goto LABEL_14;
    }
    *(void *)&long long v14 = __s;
    *((void *)&v14 + 1) = &__s[v16];
    if (!ccder_blob_decode_range()) {
      goto LABEL_12;
    }
    if (!v2)
    {
      uint64_t v9 = 0;
      goto LABEL_14;
    }
    uint64_t v9 = 0;
    if ((sub_23C207A78(&v14, 0, v2) & 1) == 0) {
LABEL_12:
    }
      uint64_t v9 = 3758097098;
  }
LABEL_14:
  memset_s(__s, 0x1000uLL, 0, 0x1000uLL);
  return v9;
}

uint64_t sub_23C202088()
{
  return sub_23C201CAC();
}

uint64_t sub_23C202098()
{
  return sub_23C201CAC();
}

uint64_t sub_23C2020A8()
{
  return sub_23C1F69E0();
}

uint64_t sub_23C2020C0()
{
  return sub_23C1F6E74();
}

uint64_t sub_23C2020DC()
{
  return sub_23C1F5BF0();
}

uint64_t sub_23C202120()
{
  return sub_23C1F5BF0();
}

uint64_t sub_23C202170()
{
  return sub_23C1F70D8();
}

uint64_t sub_23C202190(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 3758097090;
  }
  uint64_t result = sub_23C201A64();
  if (!result) {
    return 3758604312;
  }
  return result;
}

uint64_t sub_23C20224C()
{
  return sub_23C1F70D8();
}

uint64_t sub_23C20226C()
{
  return sub_23C1F7328();
}

uint64_t sub_23C202290()
{
  MEMORY[0x270FA5388]();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v8 = 3758097098;
  bzero(v13, 0x1000uLL);
  bzero(v12, 0x1000uLL);
  *(void *)&long long v11 = v13;
  *((void *)&v11 + 1) = &v14;
  *(void *)&long long v10 = v12;
  *((void *)&v10 + 1) = v13;
  if (sub_23C207A08(&v11, v7)
    && sub_23C207A08(&v11, v5)
    && ccder_blob_encode_tl()
    && sub_23C207A08(&v10, v3)
    && sub_23C207A08(&v10, v1)
    && ccder_blob_encode_tl())
  {
    return sub_23C1F70D8();
  }
  return v8;
}

uint64_t sub_23C202428()
{
  return sub_23C1F70D8();
}

uint64_t sub_23C202444()
{
  return sub_23C1F70D8();
}

uint64_t sub_23C202498()
{
  MEMORY[0x270FA5388]();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v6 = *MEMORY[0x263EF8340];
  bzero(v5, 0x4000uLL);
  uint64_t result = sub_23C1F70D8();
  if (!result)
  {
    if (ccder_decode_sequence_tl() && ccder_decode_tl())
    {
      __memcpy_chk();
      if (v3) {
        *uint64_t v3 = 0;
      }
      if (v1) {
        *uint64_t v1 = 0;
      }
      return 0;
    }
    else
    {
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_23C2025F8()
{
  return sub_23C1F70D8();
}

uint64_t sub_23C202618(int a1)
{
  uint64_t v1 = 8;
  if (a1) {
    uint64_t v1 = 12;
  }
  uint64_t v4 = v1;
  uint64_t v2 = sub_23C1F70D8();
  syslog(6, "aks_fv_prot_cmd_stash_kek(%llu) = %d", v4, v2);
  return v2;
}

uint64_t sub_23C202694()
{
  uint64_t v0 = sub_23C1F70D8();
  syslog(6, "aks_fv_prot_cmd_stash_commit = %d", v0);
  return v0;
}

uint64_t sub_23C2026F4()
{
  uint64_t v0 = sub_23C1F70D8();
  syslog(6, "aks_fv_prot_cmd_stash_destroy = %d", v0);
  return v0;
}

uint64_t sub_23C202754()
{
  return sub_23C1F7328();
}

uint64_t sub_23C202774()
{
  return sub_23C1F70D8();
}

uint64_t sub_23C202794()
{
  unsigned int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v7 = 3758097084;
  input[0] = v0;
  bzero(__src, 0x8000uLL);
  size_t __count = 0x8000;
  memset(inputStructCnt, 0, sizeof(inputStructCnt));
  if (v4)
  {
    mach_port_t v8 = sub_23C1F5E58();
    if (v8)
    {
      mach_port_t v14 = v8;
      if (v6) {
        long long v15 = v6;
      }
      else {
        long long v15 = "";
      }
      sub_23C20A1EC((char **)&inputStructCnt[1], inputStructCnt, 2, v9, v10, v11, v12, v13, (uint64_t)v15);
      uint64_t v16 = IOConnectCallMethod(v14, 0x50u, input, 1u, *(const void **)&inputStructCnt[1], (int)inputStructCnt[0], 0, 0, __src, &__count);
      if (v16)
      {
        uint64_t v7 = v16;
      }
      else
      {
        uint64_t v17 = calloc(__count, 1uLL);
        *uint64_t v4 = v17;
        if (v17)
        {
          memcpy(v17, __src, __count);
          uint64_t v7 = 0;
          *uint64_t v2 = (int)__count;
        }
        else
        {
          uint64_t v7 = 3758097085;
        }
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_collection", ":", 3220, "", 0, "", "");
    }
  }
  else
  {
    uint64_t v7 = 3758097090;
  }
  memset_s(__src, 0x8000uLL, 0, 0x8000uLL);
  free(*(void **)&inputStructCnt[1]);
  return v7;
}

uint64_t sub_23C20299C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  input[1] = *MEMORY[0x263EF8340];
  long long v21 = 0;
  input[0] = a1;
  int v20 = 0;
  uint64_t v7 = 3758097090;
  if (a2 && a6 && a7)
  {
    mach_port_t v11 = sub_23C1F5E58();
    if (v11)
    {
      mach_port_t v17 = v11;
      sub_23C20A1EC(&v21, (unsigned int *)&v20, 2, v12, v13, v14, v15, v16, a2);
      size_t v19 = *a7;
      uint64_t v7 = IOConnectCallMethod(v17, 0x51u, input, 1u, v21, v20, 0, 0, a6, &v19);
      if (!v7) {
        *a7 = (int)v19;
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_generate", ":", 3253, "", 0, "", "");
      uint64_t v7 = 3758097084;
    }
  }
  free(v21);
  return v7;
}

uint64_t sub_23C202B28(unsigned int a1)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  input[0] = 0;
  input[1] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x53u, input, 2u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drop_auxiliary_auth_by_uid", ":", 3280, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C202C04(int a1)
{
  uint64_t input[2] = *MEMORY[0x263EF8340];
  input[0] = 1;
  input[1] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x53u, input, 2u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_drop_auxiliary_auth_by_handle", ":", 3296, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C202CE4()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x5Cu, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lower_iteration_count", ":", 3310, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C202D8C(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x6Au, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_se_secret_drop", ":", 3326, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C202E68(uint64_t a1, uint64_t a2)
{
  if (a1 && a2 && !sub_23C1F87CC()) {
    sub_23C206150((uint64_t)off_268B99010);
  }
  free(0);
  return 3758097084;
}

uint64_t sub_23C202F34()
{
  return sub_23C1F87CC();
}

uint64_t sub_23C202F44()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  input[1] = *MEMORY[0x263EF8340];
  uint64_t v3 = 3758097090;
  input[0] = v0;
  bzero(__s, 0x1000uLL);
  rsize_t __n = 4096;
  mach_port_t v4 = sub_23C1F5E58();
  if (!v4)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_internal_state", ":", 3379, "", 0, "", "");
    uint64_t v3 = 3758097084;
    goto LABEL_11;
  }
  if (!v2)
  {
LABEL_11:
    rsize_t v6 = 4096;
    goto LABEL_9;
  }
  uint64_t v5 = IOConnectCallMethod(v4, 0x8Eu, input, 1u, 0, 0, 0, 0, __s, &__n);
  rsize_t v6 = __n;
  if (v5)
  {
    uint64_t v3 = v5;
  }
  else if (__n - 4097 >= 0xFFFFFFFFFFFFF000)
  {
    if (sub_23C207E30((uint64_t)__s, __n, v2)) {
      uint64_t v3 = 3758097090;
    }
    else {
      uint64_t v3 = 0;
    }
    rsize_t v6 = __n;
  }
LABEL_9:
  memset_s(__s, v6, 0, v6);
  return v3;
}

uint64_t sub_23C2030C4(const void *a1, size_t a2, void *a3, size_t *a4)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = 266;
  uint64_t result = 3758097090;
  if (a3 && a4)
  {
    mach_port_t v9 = sub_23C1F5E58();
    if (v9)
    {
      size_t v10 = *a4;
      uint64_t result = IOConnectCallMethod(v9, 0x68u, input, 1u, a1, a2, 0, 0, a3, &v10);
      if (!result) {
        *a4 = (int)v10;
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_fairplay_wrap", ":", 3405, "", 0, "", "");
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_23C2031EC(unsigned int a1, const void *a2, size_t a3, void *a4, size_t *a5)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = ((unint64_t)a1 << 8) | 1;
  uint64_t result = 3758097090;
  if (a4 && a5)
  {
    mach_port_t v10 = sub_23C1F5E58();
    if (v10)
    {
      size_t v11 = *a5;
      uint64_t result = IOConnectCallMethod(v10, 0x68u, input, 1u, a2, a3, 0, 0, a4, &v11);
      if (!result) {
        *a5 = (int)v11;
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_fairplay_generate_csk_internal", ":", 3429, "", 0, "", "");
      return 3758097084;
    }
  }
  return result;
}

uint64_t sub_23C20331C(const void *a1, size_t a2, void *a3, size_t *a4)
{
  return sub_23C2031EC(0, a1, a2, a3, a4);
}

uint64_t sub_23C203334(const void *a1, size_t a2, void *a3, size_t *a4)
{
  return sub_23C2031EC(1u, a1, a2, a3, a4);
}

uint64_t sub_23C20334C()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  mach_port_t v4 = v3;
  size_t v6 = v5;
  mach_port_t v8 = v7;
  uint64_t v9 = v0;
  uint64_t v20 = *MEMORY[0x263EF8340];
  long long v18 = 0u;
  memset(v19, 0, sizeof(v19));
  bzero(__s, 0x4000uLL);
  size_t v15 = 0x4000;
  input[0] = 1;
  input[1] = v9;
  mach_port_t v10 = sub_23C1F5E58();
  if (v10)
  {
    uint64_t v11 = IOConnectCallMethod(v10, 0x87u, input, 2u, v8, v6, 0, 0, __s, &v15);
    if (v11)
    {
      uint64_t v13 = v11;
    }
    else
    {
      __memcpy_chk();
      *uint64_t v2 = 44;
      uint64_t v12 = calloc(0x2CuLL, 1uLL);
      *mach_port_t v4 = v12;
      if (v12)
      {
        __memcpy_chk();
        uint64_t v13 = 0;
      }
      else
      {
        uint64_t v13 = 3758097085;
      }
    }
  }
  else
  {
    uint64_t v13 = 3758097084;
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_bak_get_beacon_internal", ":", 3465, "", 0, "", "");
  }
  memset_s(__s, 0x4000uLL, 0, 0x4000uLL);
  return v13;
}

uint64_t sub_23C203524()
{
  uint64_t v0 = sub_23C20334C();
  if (v0) {
    return v0;
  }
  else {
    return 3758604312;
  }
}

uint64_t sub_23C203668()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  mach_port_t v4 = v3;
  size_t v6 = v5;
  mach_port_t v8 = v7;
  uint64_t input[2] = *MEMORY[0x263EF8340];
  input[0] = 2;
  input[1] = v0;
  int v36 = 0;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v27 = 0u;
  memset(v26, 0, sizeof(v26));
  bzero(__s, 0x4000uLL);
  size_t v24 = 0x4000;
  mach_port_t v9 = sub_23C1F5E58();
  if (v9)
  {
    uint64_t v10 = IOConnectCallMethod(v9, 0x87u, input, 2u, 0, 0, 0, 0, __s, &v24);
    if (v10)
    {
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v11 = 3758097085;
      __memcpy_chk();
      uint64_t v12 = calloc(0x28uLL, 1uLL);
      *mach_port_t v8 = v12;
      if (v12)
      {
        *size_t v6 = 40;
        long long v13 = *(_OWORD *)&v26[1];
        long long v14 = *(_OWORD *)&v26[3];
        v12[4] = v26[5];
        *(_OWORD *)uint64_t v12 = v13;
        *((_OWORD *)v12 + 1) = v14;
        size_t v15 = calloc(0x91uLL, 1uLL);
        *mach_port_t v4 = v15;
        if (v15)
        {
          uint64_t v11 = 0;
          *uint64_t v2 = 145;
          long long v16 = v28;
          *size_t v15 = v27;
          v15[1] = v16;
          long long v17 = v29;
          long long v18 = v30;
          long long v19 = v32;
          v15[4] = v31;
          v15[5] = v19;
          v15[2] = v17;
          v15[3] = v18;
          long long v20 = v33;
          long long v21 = v34;
          long long v22 = v35;
          *((unsigned char *)v15 + 144) = v36;
          v15[7] = v21;
          v15[8] = v22;
          v15[6] = v20;
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_bak_get_swizzler_internal", ":", 3525, "", 0, "", "");
    uint64_t v11 = 3758097084;
  }
  memset_s(__s, 0x4000uLL, 0, 0x4000uLL);
  memset_s(v26, 0xC4uLL, 0, 0xC4uLL);
  return v11;
}

uint64_t sub_23C2038C0()
{
  return sub_23C203668();
}

uint64_t sub_23C2038D8(uint64_t a1)
{
  mach_port_t v2 = sub_23C1F7EEC();
  if (v2) {
    return IOConnectCallMethod(v2, 0xCu, 0, 0, *(const void **)a1, *(void *)(a1 + 8), 0, 0, 0, 0);
  }
  else {
    return 3758097084;
  }
}

uint64_t sub_23C203934()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  uint64_t v3 = (void *)v0;
  uint64_t v12 = *MEMORY[0x263EF8340];
  bzero(__src, 0x4000uLL);
  size_t __count = 0x4000;
  mach_port_t v4 = sub_23C1F5E58();
  if (v4)
  {
    uint64_t v5 = 3758097090;
    if (v3 && v2)
    {
      uint64_t v6 = IOConnectCallMethod(v4, 0x96u, 0, 0, 0, 0, 0, 0, __src, &__count);
      if (v6)
      {
        uint64_t v5 = v6;
      }
      else
      {
        uint64_t v7 = calloc(__count, 1uLL);
        *uint64_t v3 = v7;
        if (v7)
        {
          size_t v8 = __count;
          *mach_port_t v2 = __count;
          memcpy(v7, __src, v8);
          uint64_t v5 = 0;
        }
        else
        {
          uint64_t v5 = 3758097085;
        }
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_dsme_key", ":", 3574, "", 0, "", "");
    uint64_t v5 = 3758097084;
  }
  memset_s(__src, 0x4000uLL, 0, 0x4000uLL);
  return v5;
}

BOOL sub_23C203AC8(uint64_t a1, uint64_t a2)
{
  return a2 == 4 || a2 == 32;
}

uint64_t sub_23C203ADC()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x73u, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_prewarm_sps", ":", 3601, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C203B84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v11[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = 4294967285;
  if (a3 && a4 <= 0x30)
  {
    uint64_t v4 = 3758097084;
    mach_port_t v5 = sub_23C1F5E58();
    if (v5)
    {
      mach_port_t v6 = v5;
      ccder_sizeof_raw_octet_string();
      ccder_sizeof_uint64();
      ccder_sizeof_raw_octet_string();
      size_t v7 = ccder_sizeof();
      MEMORY[0x270FA5388]();
      mach_port_t v9 = (char *)v11 - v8;
      bzero((char *)v11 - v8, v7);
      ccder_encode_raw_octet_string();
      ccder_encode_uint64();
      ccder_encode_raw_octet_string();
      if ((char *)ccder_encode_constructed_tl() == v9) {
        return IOConnectCallMethod(v6, 0x72u, 0, 0, v9, v7, 0, 0, 0, 0);
      }
      else {
        return 3758097090;
      }
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_sealed_hashes_set", ":", 3618, "", 0, "", "");
    }
  }
  return v4;
}

uint64_t sub_23C203D9C(const void *a1, size_t a2)
{
  mach_port_t v4 = sub_23C1F5E58();
  if (v4) {
    return IOConnectCallMethod(v4, 0x90u, 0, 0, a1, a2, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_measure_and_seal_cryptex_manifest", ":", 3648, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C203E54()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x95u, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_seal_cryptex_manifest_lock", ":", 3662, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C203EFC(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t input[3] = *MEMORY[0x263EF8340];
  input[0] = a1;
  input[1] = a2;
  uint64_t input[2] = a3;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3) {
    return IOConnectCallMethod(v3, 0x85u, input, 3u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_lkgp_recover", ":", 3678, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C203FDC(int a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x8Au, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_memento_efface_blob", ":", 3694, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C2040B8()
{
  int v0 = MEMORY[0x270FA5388]();
  mach_port_t v2 = v1;
  input[1] = *MEMORY[0x263EF8340];
  input[0] = v0;
  bzero(__s, 0x1000uLL);
  rsize_t __n = 4096;
  mach_port_t v3 = sub_23C1F5E58();
  if (v3)
  {
    uint64_t v4 = IOConnectCallMethod(v3, 0x8Bu, input, 1u, 0, 0, 0, 0, __s, &__n);
    rsize_t v5 = __n;
    if (v4)
    {
      uint64_t v6 = v4;
    }
    else
    {
      uint64_t v6 = 3758097090;
      if (__n - 4097 >= 0xFFFFFFFFFFFFF000)
      {
        if (sub_23C2080A0((uint64_t)__s, __n, v2)) {
          uint64_t v6 = 3758097090;
        }
        else {
          uint64_t v6 = 0;
        }
        rsize_t v5 = __n;
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_memento_get_state", ":", 3712, "", 0, "", "");
    uint64_t v6 = 3758097084;
    rsize_t v5 = 4096;
  }
  memset_s(__s, v5, 0, v5);
  return v6;
}

uint64_t sub_23C20423C()
{
  mach_port_t v0 = sub_23C1F5E58();
  if (v0) {
    return IOConnectCallMethod(v0, 0x89u, &input, 0, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_jcop_supports_updated_kud_policy", ":", 3732, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C2042E4(uint64_t a1)
{
  input[1] = *MEMORY[0x263EF8340];
  input[0] = a1;
  mach_port_t v1 = sub_23C1F5E58();
  if (v1) {
    return IOConnectCallMethod(v1, 0x97u, input, 1u, 0, 0, 0, 0, 0, 0);
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_set_cx_window", ":", 3748, "", 0, "", "");
  return 3758097084;
}

uint64_t sub_23C2043BC()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  outputStruct[512] = *MEMORY[0x263EF8340];
  size_t v5 = 4096;
  if (!v0) {
    return 4294967285;
  }
  mach_port_t v1 = (void *)v0;
  mach_port_t v2 = sub_23C1F5E58();
  if (v2)
  {
    mach_port_t v3 = v2;
    bzero(outputStruct, 0x1000uLL);
    uint64_t result = IOConnectCallMethod(v3, 0x98u, 0, 0, 0, 0, 0, 0, outputStruct, &v5);
    if (!result)
    {
      if (v5 == 8)
      {
        uint64_t result = 0;
        *mach_port_t v1 = outputStruct[0];
      }
      else
      {
        return 3758604298;
      }
    }
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_get_cx_window", ":", 3765, "", 0, "", "");
    return 3758097084;
  }
  return result;
}

uint64_t sub_23C204518()
{
  return 0;
}

uint64_t sub_23C204524()
{
  return 0;
}

unint64_t sub_23C204598(unsigned int a1)
{
  mach_timebase_info info = 0;
  mach_timebase_info(&info);
  return 1000000000 * info.denom * (unint64_t)a1 / info.numer;
}

unint64_t sub_23C2045E4(uint64_t a1)
{
  mach_timebase_info info = 0;
  mach_timebase_info(&info);
  return (unint64_t)info.numer * a1 / info.denom;
}

uint64_t sub_23C204624()
{
  mach_timebase_info info = 0;
  mach_timebase_info(&info);
  return mach_continuous_time() * info.numer / info.denom / 0x3E8;
}

__darwin_time_t sub_23C204678()
{
  v1.tv_sec = 0;
  *(void *)&v1.tv_usec = 0;
  gettimeofday(&v1, 0);
  return v1.tv_sec;
}

uint64_t sub_23C2046A8()
{
  mach_timebase_info info = 0;
  mach_timebase_info(&info);
  return mach_continuous_time() * info.numer / info.denom / 0x3E8;
}

__darwin_time_t sub_23C2046FC()
{
  v1.tv_sec = 0;
  *(void *)&v1.tv_usec = 0;
  gettimeofday(&v1, 0);
  return v1.tv_sec;
}

uint64_t sub_23C20472C(uint64_t a1)
{
  return 1000000 * a1;
}

unint64_t sub_23C20473C(uint64_t a1)
{
  return (a1 + 999999) / 0xF4240uLL;
}

void *sub_23C204754(unsigned int a1, unsigned int a2)
{
  uint64_t v2 = a1 + 1;
  uint64_t v3 = v2 << 31 >> 31;
  if (v3 != v2 || v3 < 0)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s overflow%s\n", "aks", "", "", "", "circular_queue_init", ":", 337, "", 0, "", "");
    return 0;
  }
  else
  {
    size_t v5 = calloc(0x20uLL, 1uLL);
    uint64_t v6 = v5;
    if (v5)
    {
      v5[1] = 0;
      size_t v7 = (v3 & 0x1FFFFFFFFLL) * a2;
      *(_DWORD *)size_t v5 = a2;
      *((_DWORD *)v5 + 1) = v2;
      uint64_t v8 = calloc(v7, 1uLL);
      v6[2] = v7;
      v6[3] = v8;
    }
  }
  return v6;
}

uint64_t sub_23C204834(_DWORD *a1)
{
  unsigned int v3 = a1[2];
  unsigned int v2 = a1[3];
  uint64_t result = v2 - v3;
  if (v2 < v3) {
    return (result + a1[1]);
  }
  return result;
}

uint64_t sub_23C204850(unsigned int *a1, const void *a2)
{
  unsigned int v3 = a1[3];
  unsigned int v4 = (v3 + 1) % a1[1];
  memcpy((void *)(*((void *)a1 + 3) + *a1 * v3), a2, *a1);
  a1[3] = v4;
  if (v4 == a1[2]) {
    a1[2] = (v4 + 1) % a1[1];
  }
  return 0;
}

uint64_t sub_23C2048BC(unsigned int *a1, void *__dst)
{
  unsigned int v2 = a1[2];
  if (v2 == a1[3]) {
    return 0xFFFFFFFFLL;
  }
  if (__dst)
  {
    memcpy(__dst, (const void *)(*((void *)a1 + 3) + *a1 * v2), *a1);
    unsigned int v2 = a1[2];
  }
  memset_s((void *)(*((void *)a1 + 3) + *a1 * v2), *a1, 0, *a1);
  uint64_t result = 0;
  a1[2] = (a1[2] + 1) % a1[1];
  return result;
}

uint64_t sub_23C204948(unsigned int *a1, void *__dst)
{
  unsigned int v2 = a1[2];
  if (v2 == a1[3]) {
    return 0xFFFFFFFFLL;
  }
  memcpy(__dst, (const void *)(*((void *)a1 + 3) + *a1 * v2), *a1);
  return 0;
}

uint64_t sub_23C204990(int *a1, void *a2, unsigned int *a3)
{
  unsigned int v7 = a1[2];
  unsigned int v6 = a1[3];
  unsigned int v8 = v6 - v7;
  if (v6 < v7) {
    v8 += a1[1];
  }
  if (!v8) {
    return 0;
  }
  unsigned int v9 = *a1 * v8;
  uint64_t v10 = (char *)calloc(v9, 1uLL);
  if (!v10) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v11 = v10;
  unsigned int v12 = a1[2];
  unsigned int v13 = a1[3];
  if (v13 <= v12)
  {
    if (v12 <= v13) {
      goto LABEL_13;
    }
    unsigned int v17 = a1[1] - v12;
    memcpy(v10, (const void *)(*((void *)a1 + 3) + *a1 * v12), *a1 * v17);
    if (v8 <= v17) {
      goto LABEL_13;
    }
    uint64_t v10 = &v11[*a1 * v17];
    long long v14 = (const void *)*((void *)a1 + 3);
    size_t v15 = *a1 * (v8 - v17);
  }
  else
  {
    long long v14 = (const void *)(*((void *)a1 + 3) + *a1 * v12);
    size_t v15 = *a1 * v8;
  }
  memcpy(v10, v14, v15);
LABEL_13:
  unsigned int v18 = a1[1];
  int v19 = *a1;
  a1[2] = (a1[2] + v8) % v18;
  memset_s(*((void **)a1 + 3), v19 * v18, 0, v19 * v18);
  uint64_t result = 0;
  *a2 = v11;
  *a3 = v9;
  return result;
}

uint64_t sub_23C204ABC(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  rsize_t v1 = (*(_DWORD *)a1 * *(_DWORD *)(a1 + 4));
  return memset_s(*(void **)(a1 + 24), v1, 0, v1);
}

void sub_23C204ADC(void *a1)
{
  *((void *)a1 + 1) = 0;
  rsize_t v2 = (*(_DWORD *)a1 * *((_DWORD *)a1 + 1));
  memset_s(*((void **)a1 + 3), v2, 0, v2);
  memset_s(*((void **)a1 + 3), *((void *)a1 + 2), 0, *((void *)a1 + 2));
  free(*((void **)a1 + 3));
  memset_s(a1, 0x20uLL, 0, 0x20uLL);

  free(a1);
}

uint64_t sub_23C204B58(unsigned int a1)
{
  return (a1 >> 5) & 1;
}

BOOL sub_23C204B60(uint8x16_t *a1)
{
  int8x16_t v1 = (int8x16_t)vmovl_high_u8(*a1);
  int8x16_t v2 = (int8x16_t)vmovl_u8(*(uint8x8_t *)a1->i8);
  int8x16_t v3 = (int8x16_t)vmovl_u16((uint16x4_t)vorr_s8(vorr_s8(*(int8x8_t *)v2.i8, *(int8x8_t *)v1.i8), vorr_s8((int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL), (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL))));
  return vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)) != 0;
}

BOOL sub_23C204BA4(unsigned __int8 *a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  int v2 = 0;
  do
  {
    int v3 = *a1++;
    v2 |= v3;
    --a2;
  }
  while (a2);
  return v2 != 0;
}

_DWORD *sub_23C204BD0(_DWORD *result)
{
  if (result) {
    return (_DWORD *)(*result != 0);
  }
  return result;
}

uint64_t sub_23C204BE4(char a1, int a2)
{
  return a1 & 0x1F | (32 * a2);
}

uint64_t sub_23C204BEC(unsigned int a1)
{
  return (a1 >> 6) & 1;
}

uint64_t sub_23C204BF4(int a1)
{
  return a1 & 0xFFFFFFBF;
}

uint64_t sub_23C204BFC(int a1)
{
  return a1 | 0x40u;
}

uint64_t sub_23C204C04(char a1)
{
  char v1 = a1 & 0x1F;
  if ((a1 & 0x1Fu) >= 0x14) {
    char v1 = -1;
  }
  return ((a1 & 0x1Fu) < 0x14) & (0xC3FC0u >> v1);
}

uint64_t sub_23C204C2C(char a1)
{
  if ((a1 & 0x1Fu) > 0x13) {
    return 0xFFFFFFFFLL;
  }
  else {
    return a1 & 0x1F;
  }
}

uint64_t sub_23C204C3C(char a1)
{
  unsigned int v1 = a1 & 0x1F;
  if (v1 > 0x13) {
    unsigned int v1 = -1;
  }
  return (v1 < 0x12) & (0x2E03Eu >> v1);
}

uint64_t sub_23C204C64(char a1)
{
  return a1 & 0xF;
}

BOOL sub_23C204C6C(int a1, int a2)
{
  return ((a2 ^ a1) & 0xF) == 0;
}

uint64_t sub_23C204C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270ED87D8](a3, a1, a2);
}

uint64_t sub_23C204C90(const char *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3;
  unsigned int v4 = a1;
  uint64_t v25 = *MEMORY[0x263EF8340];
  char v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  *(_OWORD *)__str = 0u;
  long long v17 = 0u;
  size_t v5 = (FILE **)MEMORY[0x263EF8358];
  if (a3 >= 0x41)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s %sdump %s (len = %zd)%s%s\n", "aks", "", "", "", "dump_bytes_internal", ":", 782, "", 0, "", "", a1, a3, "", "");
    unsigned int v4 = "";
  }
  else if (!a3)
  {
    return memset_s(__str, 0x81uLL, 0, 0x81uLL);
  }
  unint64_t v6 = 0;
  unint64_t v15 = v3;
  do
  {
    unsigned int v7 = v5;
    if (v3 - v6 >= 0x40) {
      uint64_t v8 = 64;
    }
    else {
      uint64_t v8 = v3 - v6;
    }
    if (v8)
    {
      unsigned int v9 = (unsigned __int8 *)(a2 + v6);
      uint64_t v10 = __str;
      uint64_t v11 = v8;
      do
      {
        int v12 = *v9++;
        snprintf(v10, 3uLL, "%02x", v12);
        v10 += 2;
        --v11;
      }
      while (v11);
    }
    size_t v5 = v7;
    fprintf(*v7, "%s%s:%s%s%s%s%u:%s%u:%s %s%s%s[%04zu,%04zu): %s%s%s%s\n", "aks", "", "", "", "dump_bytes_internal", ":", 792, "", 0, "", "", v4, "", v6, v8 + v6, "", __str,
      "",
      "");
    v6 += v8;
    unint64_t v3 = v15;
  }
  while (v6 < v15);
  return memset_s(__str, 0x81uLL, 0, 0x81uLL);
}

unsigned char *sub_23C204E70(unsigned __int8 *a1, unint64_t a2)
{
  if (a2 >= 0x10) {
    uint64_t v2 = 16;
  }
  else {
    uint64_t v2 = a2;
  }
  if (v2)
  {
    unsigned int v4 = byte_268B995B0;
    uint64_t v5 = v2;
    do
    {
      int v6 = *a1++;
      snprintf(v4, 3uLL, "%02x", v6);
      v4 += 2;
      --v5;
    }
    while (v5);
  }
  byte_268B995B0[2 * v2] = 0;
  return byte_268B995B0;
}

uint64_t sub_23C204F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  memset(__s, 0, sizeof(__s));
  if (a4 == 3)
  {
    ccsha256_di();
    cchmac();
    uint64_t v5 = 0;
    *(_WORD *)a3 = __s[0];
    *(unsigned char *)(a3 + 2) = BYTE2(__s[0]);
  }
  else
  {
    uint64_t v5 = 0xFFFFFFFFLL;
  }
  memset_s(__s, 0x20uLL, 0, 0x20uLL);
  return v5;
}

uint64_t sub_23C204FD0(const char *a1, uint64_t a2, uint64_t a3)
{
  char v6 = 0;
  __int16 v5 = 0;
  sub_23C204F04(a2, a3, (uint64_t)&v5, 3);
  return sub_23C204C90(a1, (uint64_t)&v5, 3uLL);
}

char *sub_23C205028(char *result, unint64_t a2)
{
  if (a2 >= 2)
  {
    unint64_t v2 = a2 >> 1;
    unint64_t v3 = &result[a2 - 1];
    do
    {
      char v4 = *result;
      *result++ = *v3;
      *v3-- = v4;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_23C205058(unsigned __int8 *a1, unint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5 = 0xFFFFFFFFLL;
  if ((a2 & 1) == 0)
  {
    char v6 = a1;
    if (a1)
    {
      if (a3 && a4)
      {
        unint64_t v9 = a2 >> 1;
        uint64_t v10 = calloc(a2 >> 1, 1uLL);
        if (v10)
        {
          if (a2 >= 2)
          {
            if (v9 <= 1) {
              uint64_t v11 = 1;
            }
            else {
              uint64_t v11 = a2 >> 1;
            }
            int v12 = v10;
            do
            {
              int v13 = *v6;
              unsigned int v14 = v13 - 48;
              unsigned int v15 = v13 - 97;
              if ((v13 - 65) >= 6) {
                char v16 = -1;
              }
              else {
                char v16 = v13 - 55;
              }
              char v17 = v13 - 87;
              if (v15 > 5) {
                char v17 = v16;
              }
              if (v14 < 0xA) {
                char v17 = v14;
              }
              char v18 = 16 * v17;
              int v19 = v6[1];
              unsigned int v20 = v19 - 48;
              unsigned int v21 = v19 - 97;
              if ((v19 - 65) >= 6) {
                char v22 = -1;
              }
              else {
                char v22 = v19 - 55;
              }
              char v23 = v19 - 87;
              if (v21 > 5) {
                char v23 = v22;
              }
              if (v20 < 0xA) {
                char v23 = v20;
              }
              *v12++ = v23 | v18;
              v6 += 2;
              --v11;
            }
            while (v11);
          }
          uint64_t v5 = 0;
          *a3 = v10;
          *a4 = v9;
        }
        else
        {
          return 4294967279;
        }
      }
    }
  }
  return v5;
}

uint64_t sub_23C205160(uint64_t result)
{
  if (result == 0 || result >= 0xFFFFFFDA) {
    return dword_23C2198B0[(int)result + 38];
  }
  return result;
}

uint64_t sub_23C20517C(void *a1, uint64_t a2, char a3)
{
  memset_s(a1, 0x10uLL, 0, 0x10uLL);
  if (a3) {
    return 4294967285;
  }
  if (a2 && *(void *)a2 && (size_t v7 = *(void *)(a2 + 8)) != 0)
  {
    uint64_t v8 = calloc(v7, 1uLL);
    if (v8)
    {
      *a1 = v8;
      unint64_t v9 = *(const void **)a2;
      a1[1] = *(void *)(a2 + 8);
      memcpy(v8, v9, *(void *)(a2 + 8));
      return 0;
    }
    else
    {
      return 4294967279;
    }
  }
  else
  {
    uint64_t result = 0;
    *a1 = 0;
    a1[1] = 0;
  }
  return result;
}

uint64_t sub_23C205214(uint64_t result, int a2, const char *a3)
{
  if ((result & 1) == 0)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s failed REQUIRE condition (%s:%d)\n%s\n", "aks", "", "", "", "REQUIRE_func", ":", 1043, "", 0, "", a3, a2, "");
    abort();
  }
  return result;
}

uint64_t sub_23C205288(long long *a1, long long *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  memset(v14, 0, sizeof(v14));
  sub_23C2092C8((uint64_t)v14, 0x20u);
  cccurve25519_make_pub();
  long long v8 = 0u;
  long long v9 = 0u;
  int __s = 0x1000000;
  long long v4 = a2[1];
  long long v10 = *a2;
  long long v11 = v4;
  long long v5 = a1[1];
  long long v12 = *a1;
  long long v13 = v5;
  cccurve25519();
  ccsha256_di();
  ccdigest();
  memset_s(&__s, 0x64uLL, 0, 0x64uLL);
  memset_s(v14, 0x20uLL, 0, 0x20uLL);
  return 0;
}

uint64_t sub_23C205374(int *a1, uint64_t (*a2)(uint64_t, void *, uint64_t *, uint64_t *, uint64_t), char a3, uint64_t *a4, unsigned int a5, uint64_t a6, unsigned int *a7)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  unsigned int v32 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  memset(__s, 0, sizeof(__s));
  uint64_t v8 = 0xFFFFFFFFLL;
  if (!a6 || !a7) {
    goto LABEL_40;
  }
  if (!a1)
  {
LABEL_14:
    if (a2)
    {
      if (sub_23C1F5B6C(a5, &v32))
      {
        if (*a7 < v32) {
          goto LABEL_40;
        }
        char v18 = 0;
        unsigned int v19 = 0;
        unsigned int v20 = a2;
        unsigned int v21 = a4;
        goto LABEL_38;
      }
    }
    else
    {
      if ((a3 & 4) != 0)
      {
        if ((a5 & 0xF) != 0 || *a7 < a5) {
          goto LABEL_40;
        }
        unsigned int v32 = a5;
        uint64_t v29 = ccaes_cbc_encrypt_mode();
        sub_23C205C0C(v29, 32, (uint64_t)(a1 + 2), (uint64_t)&unk_268B995E8, a5 & 0xFFFFFFF0);
LABEL_39:
        uint64_t v8 = 0;
        *a7 = v32;
        goto LABEL_40;
      }
      if (sub_23C1F5B6C(a5, &v32))
      {
        if (*a7 < v32) {
          goto LABEL_40;
        }
        if ((a3 & 8) != 0)
        {
          ccsha256_di();
          cchkdf();
          char v18 = __s;
        }
        else
        {
          char v18 = a1 + 2;
        }
        unsigned int v19 = 32;
        unsigned int v20 = 0;
        unsigned int v21 = a4;
LABEL_38:
        if (sub_23C1F572C((uint64_t)v18, v19, 0xA6A6A6A6A6A6A6A6, v20, v21, a5, (void *)a6, &v32)) {
          goto LABEL_40;
        }
        goto LABEL_39;
      }
    }
    uint64_t v8 = 4294967285;
    if ((a3 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  int v14 = *a1;
  if ((*a1 - 1) >= 2)
  {
    if (v14) {
      goto LABEL_40;
    }
    goto LABEL_14;
  }
  if ((a3 & 4) != 0) {
    unsigned int v15 = 64;
  }
  else {
    unsigned int v15 = 72;
  }
  unsigned int v32 = v15;
  if (!a2 && a5 == 32 && *a7 >= v15)
  {
    if (v14 == 1)
    {
      sub_23C205288((long long *)(a1 + 9), &v34);
    }
    else
    {
      long long v23 = *(_OWORD *)(a1 + 5);
      long long v34 = *(_OWORD *)(a1 + 1);
      long long v35 = v23;
      long long v24 = *(_OWORD *)(a1 + 13);
      long long v36 = *(_OWORD *)(a1 + 9);
      long long v37 = v24;
    }
    if ((a3 & 0x80) == 0)
    {
      long long v25 = v35;
      *(_OWORD *)a6 = v34;
      *(_OWORD *)(a6 + 16) = v25;
      if ((a3 & 4) != 0)
      {
        uint64_t v28 = ccaes_cbc_encrypt_mode();
        sub_23C205C0C(v28, 32, (uint64_t)&v36, (uint64_t)&unk_268B995E8, 0x20uLL);
        goto LABEL_34;
      }
      int v31 = 40;
      if ((a3 & 8) != 0)
      {
        ccsha256_di();
        cchkdf();
        long long v27 = (void *)(a6 + 32);
        uint64_t v26 = __s;
      }
      else
      {
        uint64_t v26 = &v36;
        long long v27 = (void *)(a6 + 32);
      }
      if (!sub_23C1F572C((uint64_t)v26, 0x20u, 0xA6A6A6A6A6A6A6A6, 0, a4, 0x20u, v27, &v31))
      {
LABEL_34:
        uint64_t v8 = 0;
        *a7 = v15;
        if ((a3 & 8) == 0) {
          goto LABEL_42;
        }
        goto LABEL_41;
      }
    }
  }
LABEL_40:
  if ((a3 & 8) != 0) {
LABEL_41:
  }
    memset_s(__s, 0x20uLL, 0, 0x20uLL);
LABEL_42:
  memset_s(&v34, 0x40uLL, 0, 0x40uLL);
  return v8;
}

uint64_t sub_23C2056E0(long long *a1, uint64_t a2, long long *a3)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v8 = 0u;
  long long v7 = 0u;
  long long v3 = a1[1];
  long long v9 = *a1;
  long long v10 = v3;
  long long v4 = a3[1];
  long long v11 = *a3;
  int __s = 0x1000000;
  long long v12 = v4;
  cccurve25519();
  ccsha256_di();
  ccdigest();
  memset_s(&__s, 0x64uLL, 0, 0x64uLL);
  return 0;
}

uint64_t sub_23C2057A0(uint64_t a1, uint64_t (*a2)(void, void *, unint64_t *, unint64_t *, uint64_t), char a3, void *a4, unsigned int a5, void *a6, unsigned int *a7)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  unsigned int v24 = 0;
  memset(v26, 0, sizeof(v26));
  uint64_t v8 = 0xFFFFFFFFLL;
  if (a4 && a5)
  {
    if (!a1) {
      goto LABEL_6;
    }
    if (*(_DWORD *)a1 != 1)
    {
      if (!*(_DWORD *)a1)
      {
LABEL_6:
        if (a5 <= 0x28)
        {
          if (a2)
          {
            if (sub_23C1F5BC8(a5, &v24) && *a7 >= v24)
            {
              unsigned int v15 = 0;
              unsigned int v16 = 0;
              char v17 = a2;
              goto LABEL_30;
            }
          }
          else if ((a3 & 4) != 0)
          {
            if ((a5 & 0xF) == 0 && *a7 >= a5)
            {
              unsigned int v24 = a5;
              uint64_t v20 = ccaes_cbc_decrypt_mode();
              sub_23C205C0C(v20, 32, a1 + 8, (uint64_t)&unk_268B995E8, a5 & 0xFFFFFFF0);
LABEL_31:
              uint64_t v8 = 0;
              *a7 = v24;
              goto LABEL_35;
            }
          }
          else if (sub_23C1F5BC8(a5, &v24) && *a7 >= v24)
          {
            if ((a3 & 8) != 0)
            {
              ccsha256_di();
              cchkdf();
              unsigned int v15 = v26;
            }
            else
            {
              unsigned int v15 = (_OWORD *)(a1 + 8);
            }
            unsigned int v16 = 32;
            char v17 = 0;
LABEL_30:
            if (!sub_23C1F5B00((uint64_t)v15, v16, 0xA6A6A6A6A6A6A6A6, v17, a4, a5, a6, &v24)) {
              goto LABEL_31;
            }
            goto LABEL_40;
          }
        }
LABEL_38:
        uint64_t v8 = 4294967285;
        goto LABEL_35;
      }
LABEL_22:
      uint64_t v8 = 0xFFFFFFFFLL;
      goto LABEL_35;
    }
    unsigned int v24 = 32;
    if (*a7 < 0x20) {
      goto LABEL_38;
    }
    memset(__s, 0, sizeof(__s));
    if ((a3 & 4) != 0)
    {
      if (a5 != 64) {
        goto LABEL_38;
      }
      sub_23C2056E0((long long *)a4, a1 + 4, (long long *)(a1 + 36));
      uint64_t v21 = ccaes_cbc_decrypt_mode();
      sub_23C205C0C(v21, 32, (uint64_t)__s, (uint64_t)&unk_268B995E8, 0x20uLL);
    }
    else
    {
      if (a5 != 72) {
        goto LABEL_38;
      }
      sub_23C2056E0((long long *)a4, a1 + 4, (long long *)(a1 + 36));
      if (a3 < 0) {
        goto LABEL_22;
      }
      int v23 = 32;
      if ((a3 & 8) != 0)
      {
        ccsha256_di();
        cchkdf();
        char v18 = a4 + 4;
        unsigned int v19 = v26;
      }
      else
      {
        char v18 = a4 + 4;
        unsigned int v19 = __s;
      }
      if (sub_23C1F5B00((uint64_t)v19, 0x20u, 0xA6A6A6A6A6A6A6A6, 0, v18, 0x28u, a6, &v23))
      {
        memset_s(__s, 0x20uLL, 0, 0x20uLL);
LABEL_40:
        uint64_t v8 = 4294967277;
        goto LABEL_35;
      }
    }
    memset_s(__s, 0x20uLL, 0, 0x20uLL);
    uint64_t v8 = 0;
    *a7 = 32;
  }
LABEL_35:
  if ((a3 & 8) != 0) {
    memset_s(v26, 0x20uLL, 0, 0x20uLL);
  }
  return v8;
}

uint64_t sub_23C205AF4(uint64_t a1, void *a2, size_t *a3)
{
  size_t v5 = ((unint64_t)(cczp_bitlen() + 7) >> 2) | 1;
  char v6 = calloc(v5, 1uLL);
  if (!v6) {
    return 4294967279;
  }
  long long v7 = v6;
  ccec_export_pub();
  uint64_t result = 0;
  *a2 = v7;
  *a3 = v5;
  return result;
}

unint64_t sub_23C205B74()
{
  return (unint64_t)(cczp_bitlen() + 7) >> 3;
}

unint64_t sub_23C205B98()
{
  return (((unint64_t)(cczp_bitlen() + 7) >> 2) & 0x3FFFFFFFFFFFFFFELL) + 9;
}

unint64_t sub_23C205BC0()
{
  return ((unint64_t)(cczp_bitlen() + 7) >> 2) | 1;
}

unint64_t sub_23C205BE8()
{
  return (unint64_t)(cczp_bitlen() + 7) >> 3;
}

uint64_t sub_23C205C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return MEMORY[0x270ED8830](a1, a2, a3, a4, a5 >> 4);
}

uint64_t sub_23C205C14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return MEMORY[0x270ED8B30](a1, a2, a3, a4 >> 4);
}

uint64_t sub_23C205C1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return MEMORY[0x270ED8840](a1, a2, a3, a4 >> 4);
}

BOOL sub_23C205C24()
{
  return !MEMORY[0x23ECDD5A0]() && ccn_read_uint() == 0;
}

uint64_t sub_23C205CA0()
{
  return 1;
}

uint64_t sub_23C205CD8(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a5 + 8) >= *(void *)a5)
  {
    char v13 = 0;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      BOOL v11 = sub_23C205DD8(*(const void **)(*(void *)(a5 + 24) + v9), *(void *)(*(void *)(a5 + 24) + v9)+ *(unsigned __int8 *)(*(void *)(*(void *)(a5 + 24) + v9) + 1)+ 2, a1);
      if (v11) {
        break;
      }
      ++v10;
      v9 += 40;
      if (v10 >= *(void *)a5) {
        goto LABEL_10;
      }
    }
    int v14 = (void *)(*(void *)(a5 + 24) + v9);
    if (v14[1])
    {
      char v12 = 0;
      *(unsigned char *)(a5 + 16) = 1;
    }
    else
    {
      ++*(void *)(a5 + 8);
      v14[1] = a3;
      _OWORD v14[2] = a3 + a4;
      v14[3] = a3;
      v14[4] = a3 + a4;
      char v12 = 1;
    }
LABEL_10:
    char v13 = v12 | !v11;
  }
  return v13 & 1;
}

BOOL sub_23C205DC0(unsigned __int8 *a1, const void *a2)
{
  return sub_23C205DD8(a1, (uint64_t)&a1[a1[1] + 2], a2);
}

BOOL sub_23C205DD8(const void *a1, uint64_t a2, const void *a3)
{
  size_t v5 = sub_23C205E44((uint64_t)a1);
  return v5 == sub_23C205E44((uint64_t)a3) && memcmp(a1, a3, v5) == 0;
}

uint64_t sub_23C205E44(uint64_t a1)
{
  if (ccder_blob_decode_tag() && ccder_blob_decode_len()) {
    return a1 - a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_23C205EAC()
{
  uint64_t result = ccder_blob_decode_range();
  if (result)
  {
    if (ccder_blob_decode_sequence_tl())
    {
      uint64_t result = ccder_blob_decode_tl();
      if (result) {
        return 0;
      }
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_23C205F84(uint64_t a1, void *a2, void *a3)
{
  if (a1)
  {
    sub_23C205EAC();
    if (a2)
    {
      if (a3)
      {
        *a2 = 0;
        *a3 = 0;
      }
    }
  }
  return 0;
}

BOOL sub_23C205FFC(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v8 = sub_23C205DD8(*(const void **)a5, *(void *)a5 + *(unsigned __int8 *)(*(void *)a5 + 1) + 2, a1);
  if (v8)
  {
    *(unsigned char *)(a5 + 24) = 1;
    *(void *)(a5 + 8) = a3;
    *(void *)(a5 + 16) = a3 + a4;
  }
  return !v8;
}

uint64_t sub_23C206060(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4) {
    return 0;
  }
  if (result)
  {
    sub_23C205EAC();
    return 0;
  }
  return result;
}

uint64_t sub_23C2060E4()
{
  return 0;
}

uint64_t sub_23C206150(uint64_t result)
{
  if (result)
  {
    sub_23C205EAC();
    return 0;
  }
  return result;
}

double sub_23C2061F4(long long *a1, uint64_t a2, _DWORD *a3, void *a4)
{
  long long v8 = *a1;
  if (ccder_blob_decode_range())
  {
    *a4 = 0;
    *a3 = 0;
    double result = *(double *)&v8;
    *a1 = v8;
  }
  return result;
}

uint64_t sub_23C206264(uint64_t a1, uint64_t a2, unsigned int (*a3)(uint64_t, void, uint64_t), uint64_t a4)
{
  *(void *)&long long v12 = a1;
  *((void *)&v12 + 1) = a2;
  uint64_t v6 = ccder_blob_decode_range();
  if (v6)
  {
    uint64_t v11 = 0;
    uint64_t v7 = v12;
    if (sub_23C206318(&v12, &v10, &v11))
    {
      do
      {
        uint64_t v8 = v12 + v11;
        if (!a3(v7, v12 + v11 - v7, a4)) {
          break;
        }
        *(void *)&long long v12 = v8;
        uint64_t v7 = v8;
      }
      while ((sub_23C206318(&v12, &v10, &v11) & 1) != 0);
    }
  }
  return v6;
}

uint64_t sub_23C206318(long long *a1, void *a2, void *a3)
{
  long long v7 = *a1;
  uint64_t result = ccder_blob_decode_tag();
  if (result)
  {
    uint64_t result = ccder_blob_decode_len();
    if (result)
    {
      *a1 = v7;
      *a2 = 0;
      *a3 = 0;
      return 1;
    }
  }
  return result;
}

uint64_t sub_23C206398()
{
  return 0;
}

uint64_t sub_23C2063F4(void **a1)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  while (1)
  {
    unint64_t v2 = *a1;
    if (!*a1) {
      break;
    }
    long long v3 = (void *)*((void *)v2 + 1);
    *a1 = *(void **)v2;
    if (v3)
    {
      memset_s(v3, *((void *)v2 + 2), 0, *((void *)v2 + 2));
      free(*((void **)v2 + 1));
    }
    memset_s(v2, 0x18uLL, 0, 0x18uLL);
    free(v2);
  }
  return 0;
}

uint64_t sub_23C206474(void *a1, unsigned __int8 *a2)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  unint64_t v2 = (void **)a1;
  uint64_t result = (uint64_t)sub_23C206510(a1, a2);
  if (result)
  {
    uint64_t v4 = result;
    for (uint64_t i = *v2; i != (void *)result; uint64_t i = (void *)*i)
      unint64_t v2 = (void **)i;
    *unint64_t v2 = *(void **)result;
    uint64_t v6 = *(void **)(result + 8);
    if (v6)
    {
      memset_s(v6, *(void *)(v4 + 16), 0, *(void *)(v4 + 16));
      free(*(void **)(v4 + 8));
    }
    memset_s((void *)v4, 0x18uLL, 0, 0x18uLL);
    free((void *)v4);
    return 0;
  }
  return result;
}

void *sub_23C206510(void *a1, unsigned __int8 *a2)
{
  if (!a1) {
    return 0;
  }
  unint64_t v2 = (void *)*a1;
  if (*a1)
  {
    do
    {
      size_t v5 = (const void *)v2[1];
      if (ccder_blob_decode_sequence_tl() && sub_23C205DD8(a2, (uint64_t)&a2[a2[1] + 2], v5)) {
        break;
      }
      unint64_t v2 = (void *)*v2;
    }
    while (v2);
  }
  return v2;
}

uint64_t sub_23C206594(void *a1, unsigned __int8 *a2, int a3, void *a4, void *a5)
{
  uint64_t v8 = sub_23C206510(a1, a2);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = 1;
  if (a4)
  {
    if (a5)
    {
      uint64_t v10 = v8[1] + v8[2];
      *(void *)&long long v15 = v8[1];
      *((void *)&v15 + 1) = v10;
      uint64_t v9 = ccder_blob_decode_sequence_tl();
      if (v9)
      {
        if (sub_23C206674(&v15, 12, 0, 0))
        {
          uint64_t v11 = v15;
          if (ccder_blob_decode_tag())
          {
            if (ccder_blob_decode_len())
            {
              uint64_t v13 = 0;
              uint64_t v12 = v15;
              if (a3)
              {
                uint64_t v13 = (v15 - v11);
                uint64_t v12 = v11;
              }
              *a4 = v12;
              *a5 = v13;
            }
          }
        }
      }
    }
  }
  return v9;
}

uint64_t sub_23C206674(long long *a1, uint64_t a2, uint64_t a3, int a4)
{
  long long v8 = *a1;
  if ((ccder_blob_decode_range() & 1) == 0 || a3 && a4) {
    return 0;
  }
  *a1 = v8;
  return 1;
}

uint64_t sub_23C206704(void *a1, char *__s, void *a3, size_t a4)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  memset(v18, 0, sizeof(v18));
  long long v17 = 0u;
  long long v16 = 0u;
  long long v15 = 0u;
  long long v14 = 0u;
  long long v13 = 0u;
  long long v12 = 0u;
  v11[0] = 12;
  v11[1] = strlen(__s);
  long long v7 = (unsigned __int8 *)sub_23C206830((uint64_t)v11);
  uint64_t result = 0xFFFFFFFFLL;
  if (a3 && v7)
  {
    __memcpy_chk();
    __src = 0;
    uint64_t v10 = 0;
    if (sub_23C206594(a1, v7, 0, &__src, &v10))
    {
      if (v10 == a4)
      {
        memcpy(a3, __src, a4);
        return 0;
      }
      else
      {
        return 4294967277;
      }
    }
    else
    {
      return 4294967293;
    }
  }
  return result;
}

uint64_t sub_23C206830(uint64_t a1)
{
  if ((ccder_blob_decode_tl() & 1) == 0)
  {
    fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s bad 1%s\n", "aks", "", "", "", "der_key_validate");
    return 0;
  }
  return a1;
}

uint64_t sub_23C206930(void *a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v4 = sub_23C206594(a1, a2, 1, &v7, &v8);
  uint64_t v5 = v4;
  if (a3 && v4) {
    *a3 = sub_23C2060E4();
  }
  return v5;
}

uint64_t sub_23C20698C(void *a1, unsigned __int8 *a2, unsigned char *a3)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v4 = sub_23C206594(a1, a2, 1, &v7, &v8);
  uint64_t v5 = v4;
  if (a3 && v4) {
    *a3 = sub_23C206398();
  }
  return v5;
}

uint64_t sub_23C2069E8(uint64_t a1)
{
  if (a1) {
    return sub_23C205EAC() - 1;
  }
  else {
    return 4294967285;
  }
}

uint64_t sub_23C206A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (unsigned __int8 *)sub_23C206830(a1);
  if (v8)
  {
    uint64_t v9 = (uint64_t)v8;
    if (!sub_23C206474(a5, v8) && !sub_23C206CD0(a5, v9, a3, a3 + a4)) {
      return 1;
    }
  }
  fprintf((FILE *)*MEMORY[0x263EF8358], "%s%s:%s%s%s%s%u:%s%u:%s fail%s\n", "aks", "", "", "", "_merge_dict_cb", ":", 647, "", 0, "", "");
  return 0;
}

uint64_t sub_23C206B00(void *a1, void *a2, size_t *a3)
{
  uint64_t v3 = 0xFFFFFFFFLL;
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        uint64_t v7 = (void *)*a1;
        if (*a1)
        {
          unint64_t v8 = 0;
          uint64_t v9 = 0;
          uint64_t v10 = 0;
          do
          {
            v10 += v7[2];
            uint64_t v7 = (void *)*v7;
            v9 -= 16;
            --v8;
          }
          while (v7);
          if (v8 >= 0xF000000000000001 && (rsize_t v11 = -v9, (v12 = calloc(-v9, 1uLL)) != 0))
          {
            long long v13 = v12;
            long long v14 = (void *)*a1;
            if (*a1)
            {
              long long v15 = v12;
              do
              {
                *v15++ = *(_OWORD *)(v14 + 1);
                long long v14 = (void *)*v14;
              }
              while (v14);
            }
            qsort(v12, -(uint64_t)v8, 0x10uLL, (int (__cdecl *)(const void *, const void *))sub_23C208FA0);
            size_t v16 = ccder_sizeof();
            long long v17 = (char *)calloc(v16, 1uLL);
            char v18 = v17;
            if (v17)
            {
              long long v25 = v17;
              uint64_t v26 = &v17[v16];
              unint64_t v19 = v8 - 1;
              uint64_t v20 = (uint64_t)v13 - v9 - 8;
              while (!__CFADD__(v19++, 1))
              {
                uint64_t v22 = v20 - 16;
                char v23 = ccder_blob_encode_body();
                uint64_t v20 = v22;
                if ((v23 & 1) == 0) {
                  goto LABEL_16;
                }
              }
              if (!ccder_blob_encode_tl() || v25 != v26)
              {
LABEL_16:
                uint64_t v3 = 0xFFFFFFFFLL;
                goto LABEL_20;
              }
              uint64_t v3 = 0;
              *a2 = v18;
              *a3 = v16;
              char v18 = 0;
            }
            else
            {
              uint64_t v3 = 4294967279;
            }
LABEL_20:
            memset_s(v13, v11, 0, v11);
            free(v13);
            if (v18)
            {
              memset_s(v18, v16, 0, v16);
              free(v18);
            }
          }
          else
          {
            return 0xFFFFFFFFLL;
          }
        }
      }
    }
  }
  return v3;
}

uint64_t sub_23C206CD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2 && a3 && a4)
  {
    if (sub_23C205E44(a3) <= (unint64_t)(a4 - a3))
    {
      size_t v6 = ccder_sizeof();
      uint64_t v7 = (char *)calloc(v6, 1uLL);
      if (!v7) {
        return 4294967279;
      }
      unint64_t v8 = v7;
      size_t v16 = &v7[v6];
      if (ccder_blob_encode_body())
      {
        int v9 = ccder_blob_encode_body();
        uint64_t v10 = v16;
        if (!v9) {
          uint64_t v10 = 0;
        }
        long long v17 = v10;
        int v11 = ccder_blob_encode_tl();
        long long v12 = v17;
        if (!v11) {
          long long v12 = 0;
        }
        if (v12 && v12 == v8)
        {
          long long v14 = calloc(0x18uLL, 1uLL);
          if (v14)
          {
            long long v15 = v14;
            uint64_t result = 0;
            v15[1] = v8;
            v15[2] = v6;
            *long long v15 = *a1;
            *a1 = v15;
            return result;
          }
        }
      }
      memset_s(v8, v6, 0, v6);
      free(v8);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_23C206E40(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23C206CD0(a1, a2, a3, a3 + *(unsigned __int8 *)(a3 + 1) + 2);
}

uint64_t sub_23C206E50(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2 && a3)
  {
    ccder_sizeof();
    size_t v5 = ccder_sizeof();
    size_t v6 = (char *)calloc(v5, 1uLL);
    if (v6)
    {
      uint64_t v7 = v6;
      long long v15 = &v6[v5];
      if (!ccder_blob_encode_body() || !ccder_blob_encode_tl()) {
        goto LABEL_19;
      }
      int v8 = ccder_blob_encode_body();
      int v9 = v15;
      if (!v8) {
        int v9 = 0;
      }
      size_t v16 = v9;
      int v10 = ccder_blob_encode_tl();
      int v11 = v16;
      if (!v10) {
        int v11 = 0;
      }
      BOOL v12 = v11 && v11 == v7;
      if (v12 && (long long v13 = calloc(0x18uLL, 1uLL)) != 0)
      {
        long long v14 = v13;
        uint64_t result = 0;
        v14[1] = v7;
        _OWORD v14[2] = v5;
        *long long v14 = *a1;
        *a1 = v14;
      }
      else
      {
LABEL_19:
        memset_s(v7, v5, 0, v5);
        free(v7);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_23C206FC0(void *a1, char *__s, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  memset(v14, 0, sizeof(v14));
  long long v13 = 0u;
  long long v12 = 0u;
  long long v11 = 0u;
  long long v10 = 0u;
  long long v9 = 0u;
  long long v8 = 0u;
  v7[0] = 12;
  v7[1] = strlen(__s);
  uint64_t v5 = sub_23C206830((uint64_t)v7);
  uint64_t result = 4294967285;
  if (a3)
  {
    if (v5)
    {
      __memcpy_chk();
      return sub_23C206E50(a1, v5, a3);
    }
  }
  return result;
}

uint64_t sub_23C2070B0(void *a1, uint64_t a2)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2)
  {
    ccder_sizeof();
    size_t v4 = ccder_sizeof();
    uint64_t v5 = (char *)calloc(v4, 1uLL);
    if (v5)
    {
      size_t v6 = v5;
      long long v14 = &v5[v4];
      if (!ccder_blob_encode_body() || !ccder_blob_encode_tl()) {
        goto LABEL_18;
      }
      int v7 = ccder_blob_encode_body();
      long long v8 = v14;
      if (!v7) {
        long long v8 = 0;
      }
      uint64_t v15 = v8;
      int v9 = ccder_blob_encode_tl();
      long long v10 = v15;
      if (!v9) {
        long long v10 = 0;
      }
      BOOL v11 = v10 && v10 == v6;
      if (v11 && (long long v12 = calloc(0x18uLL, 1uLL)) != 0)
      {
        long long v13 = v12;
        uint64_t result = 0;
        v13[1] = v6;
        size_t v13[2] = v4;
        *long long v13 = *a1;
        *a1 = v13;
      }
      else
      {
LABEL_18:
        memset_s(v6, v4, 0, v4);
        free(v6);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_23C207218(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  v25[1] = *MEMORY[0x263EF8340];
  unint64_t v5 = HIBYTE(a3);
  if ((HIBYTE(a3) + 1) > 1u)
  {
    uint64_t v10 = 8;
  }
  else
  {
    uint64_t v6 = 9;
    uint64_t v7 = 48;
    uint64_t v8 = 1;
    while ((unint64_t)(v6 - 2) >= 2)
    {
      uint64_t v9 = a3 >> v7;
      --v6;
      v7 -= 8;
      if (v5 != v9)
      {
        uint64_t v8 = v6 - 1;
        goto LABEL_8;
      }
    }
    uint64_t v6 = 2;
LABEL_8:
    if ((((a3 >> (8 * v8 - 8)) ^ v5) & 0x80) != 0) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = v8;
    }
  }
  v25[0] = 0;
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2)
  {
    ccder_sizeof();
    size_t v12 = ccder_sizeof();
    long long v13 = (char *)calloc(v12, 1uLL);
    if (v13)
    {
      long long v14 = v13;
      uint64_t v15 = v10;
      do
      {
        *((unsigned char *)v25 + v15 - 1) = v3;
        v3 >>= 8;
        --v15;
      }
      while (v15);
      char v23 = &v13[v12];
      if ((ccder_blob_encode_body() & 1) == 0 || !ccder_blob_encode_tl()) {
        goto LABEL_30;
      }
      int v16 = ccder_blob_encode_body();
      long long v17 = v23;
      if (!v16) {
        long long v17 = 0;
      }
      unsigned int v24 = v17;
      int v18 = ccder_blob_encode_tl();
      unint64_t v19 = v24;
      if (!v18) {
        unint64_t v19 = 0;
      }
      BOOL v20 = v19 && v19 == v14;
      if (v20 && (uint64_t v21 = calloc(0x18uLL, 1uLL)) != 0)
      {
        uint64_t v22 = v21;
        uint64_t result = 0;
        v22[1] = v14;
        void v22[2] = v12;
        *uint64_t v22 = *a1;
        *a1 = v22;
      }
      else
      {
LABEL_30:
        memset_s(v14, v12, 0, v12);
        free(v14);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_23C207430(void *a1, uint64_t a2, char *__s)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2 && __s)
  {
    strlen(__s);
    ccder_sizeof();
    size_t v5 = ccder_sizeof();
    uint64_t v6 = (char *)calloc(v5, 1uLL);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v15 = &v6[v5];
      if (!ccder_blob_encode_body() || !ccder_blob_encode_tl()) {
        goto LABEL_19;
      }
      int v8 = ccder_blob_encode_body();
      uint64_t v9 = v15;
      if (!v8) {
        uint64_t v9 = 0;
      }
      int v16 = v9;
      int v10 = ccder_blob_encode_tl();
      BOOL v11 = v16;
      if (!v10) {
        BOOL v11 = 0;
      }
      BOOL v12 = v11 && v11 == v7;
      if (v12 && (long long v13 = calloc(0x18uLL, 1uLL)) != 0)
      {
        long long v14 = v13;
        uint64_t result = 0;
        v14[1] = v7;
        _OWORD v14[2] = v5;
        *long long v14 = *a1;
        *a1 = v14;
      }
      else
      {
LABEL_19:
        memset_s(v7, v5, 0, v5);
        free(v7);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t sub_23C2075A8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3 = 0;
  int __s = 0;
  rsize_t __n = 0;
  uint64_t v4 = 0xFFFFFFFFLL;
  if (a1 && a2)
  {
    size_t v5 = 0;
    if (a3)
    {
      if (sub_23C206B00(a3, &__s, &__n))
      {
        uint64_t v3 = 0;
        size_t v5 = 0;
      }
      else
      {
        size_t v5 = ccder_sizeof();
        uint64_t v7 = (char *)calloc(v5, 1uLL);
        uint64_t v3 = v7;
        if (v7)
        {
          uint64_t v15 = &v7[v5];
          if (!ccder_blob_encode_body()) {
            goto LABEL_23;
          }
          int v18 = v3;
          unint64_t v19 = v15;
          int v8 = ccder_blob_encode_body();
          uint64_t v9 = v19;
          if (!v8) {
            uint64_t v9 = 0;
          }
          int v18 = v3;
          unint64_t v19 = v9;
          int v10 = ccder_blob_encode_tl();
          BOOL v11 = v19;
          if (!v10) {
            BOOL v11 = 0;
          }
          BOOL v12 = v11 && v11 == v3;
          if (v12 && (long long v13 = calloc(0x18uLL, 1uLL)) != 0)
          {
            uint64_t v4 = 0;
            v13[1] = v3;
            size_t v13[2] = v5;
            *long long v13 = *a1;
            *a1 = v13;
            uint64_t v3 = 0;
          }
          else
          {
LABEL_23:
            uint64_t v4 = 0xFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v4 = 4294967279;
        }
      }
    }
  }
  else
  {
    size_t v5 = 0;
  }
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  if (v3)
  {
    memset_s(v3, v5, 0, v5);
    free(v3);
  }
  return v4;
}

BOOL sub_23C207748(void *a1)
{
  return *a1 == 0;
}

uint64_t sub_23C207758()
{
  return ccder_sizeof();
}

uint64_t sub_23C207770()
{
  uint64_t v0 = ccder_sizeof();
  return ccder_sizeof() + v0;
}

uint64_t sub_23C2077B8(long long *a1, uint64_t a2)
{
  long long v4 = *a1;
  if (a2)
  {
    uint64_t result = ccder_blob_encode_body_tl();
    if (!result) {
      return result;
    }
    if ((ccder_blob_encode_body_tl() & 1) == 0) {
      return 0;
    }
  }
  else if (!ccder_blob_encode_body_tl() || (ccder_blob_encode_tl() & 1) == 0)
  {
    return 0;
  }
  *a1 = v4;
  return 1;
}

uint64_t sub_23C207864(long long *a1, int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a3;
  uint64_t v5 = *(void *)(a3 + 8);
  int v7 = *(_DWORD *)(a3 + 20);
  long long v11 = *a1;
  if (a2)
  {
    long long v14 = *a1;
    BOOL v12 = 0;
    uint64_t v13 = 0;
    if ((ccder_blob_decode_range() & 1) == 0) {
      return 0;
    }
    uint64_t v6 = (uint64_t)v12;
    unsigned int v8 = v13 - v12;
    long long v11 = v14;
  }
  else
  {
    LODWORD(v14) = v5;
    uint64_t result = sub_23C20796C(&v11, 4, v6, &v14);
    if (!result) {
      return result;
    }
    unsigned int v8 = v14;
  }
  long long v14 = v11;
  BOOL v12 = 0;
  uint64_t v13 = 0;
  if ((ccder_blob_decode_range() & 1) == 0) {
    return 0;
  }
  long long v11 = v14;
  if ((v13 - v12) > 4) {
    return 0;
  }
  int v10 = *v12;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(_DWORD *)(a3 + 16) = v10;
  *(_DWORD *)(a3 + 20) = v7;
  *a1 = v11;
  return 1;
}

uint64_t sub_23C20796C(long long *a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  long long v8 = *a1;
  if ((ccder_blob_decode_range() & 1) == 0) {
    return 0;
  }
  if (a3)
  {
    if (a4) {
      *a4 = 0;
    }
  }
  *a1 = v8;
  return 1;
}

uint64_t sub_23C207A08(long long *a1, uint64_t a2)
{
  long long v4 = *a1;
  if (a2)
  {
    if ((ccder_blob_encode_body_tl() & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t result = ccder_blob_encode_tl();
    if (!result) {
      return result;
    }
  }
  *a1 = v4;
  return 1;
}

uint64_t sub_23C207A78(long long *a1, int a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v5 = a3[1];
  long long v9 = *a1;
  if (a2)
  {
    long long v12 = *a1;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t result = ccder_blob_decode_range();
    if (!result) {
      return result;
    }
    uint64_t v6 = v10;
    unsigned int v8 = v11 - v10;
    long long v9 = v12;
  }
  else
  {
    LODWORD(v12) = v5;
    uint64_t result = sub_23C20796C(&v9, 4, v6, &v12);
    if (!result) {
      return result;
    }
    unsigned int v8 = v12;
  }
  *a3 = v6;
  a3[1] = v8;
  *a1 = v9;
  return 1;
}

uint64_t sub_23C207B28(long long *a1, uint64_t a2)
{
  long long v4 = *a1;
  if (a2)
  {
    if ((ccder_blob_encode_body_tl() & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t result = ccder_blob_encode_tl();
    if (!result) {
      return result;
    }
  }
  *a1 = v4;
  return 1;
}

uint64_t sub_23C207B9C(long long *a1)
{
  long long v3 = *a1;
  if ((ccder_blob_decode_range() & 1) == 0) {
    return 0;
  }
  *a1 = v3;
  return 1;
}

uint64_t sub_23C207C20(unsigned int *a1, int a2, void *a3, _DWORD *a4)
{
  long long v12 = 0;
  if (sub_23C207218(&v12, (uint64_t)off_268B98D80, *a1)
    || sub_23C207218(&v12, (uint64_t)off_268B98D88, a1[1])
    || sub_23C207218(&v12, (uint64_t)off_268B98D90, *((void *)a1 + 1))
    || sub_23C207218(&v12, (uint64_t)off_268B98DA0, a1[4])
    || sub_23C207218(&v12, (uint64_t)off_268B98DB0, a1[5])
    || sub_23C207218(&v12, (uint64_t)off_268B98DC8, *(void *)((char *)a1 + 26))
    || sub_23C207218(&v12, (uint64_t)off_268B98DD0, *(void *)((char *)a1 + 34))
    || sub_23C207218(&v12, (uint64_t)off_268B98AD8, *(int *)((char *)a1 + 42))
    || sub_23C207218(&v12, (uint64_t)off_268B98CA0, *(unsigned int *)((char *)a1 + 46))
    || sub_23C206E50(&v12, (uint64_t)off_268B98E98, (uint64_t)a1 + 50)
    || a2
    && (sub_23C207218(&v12, (uint64_t)off_268B98DB8, *((char *)a1 + 66))
     || sub_23C207218(&v12, (uint64_t)off_268B98DC0, *((char *)a1 + 67))
     || sub_23C207218(&v12, (uint64_t)off_268B99098, *(void *)(a1 + 17))
     || sub_23C207218(&v12, (uint64_t)off_268B990E0, *(void *)(a1 + 19)))
    || (uint64_t v10 = 0, v11 = 0, sub_23C206B00(&v12, &v10, &v11)))
  {
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  else
  {
    uint64_t v8 = 0;
    *a3 = v10;
    *a4 = v11;
  }
  sub_23C2063F4(&v12);
  return v8;
}

uint64_t sub_23C207E30(uint64_t a1, int a2, char *__s)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t result = 0xFFFFFFFFLL;
  if (a2 && a1)
  {
    if (__s)
    {
      memset_s(__s, 0x54uLL, 0, 0x54uLL);
      bzero(v7, 0x228uLL);
      v7[4] = off_268B98D88;
      v7[9] = off_268B98D90;
      v7[14] = off_268B98DA0;
      v7[19] = off_268B98DB0;
      v7[24] = off_268B98DB8;
      v7[29] = off_268B98DC0;
      v7[34] = off_268B98DC8;
      v7[39] = off_268B98DD0;
      v7[44] = off_268B98AD8;
      v7[49] = off_268B98CA0;
      v7[54] = off_268B98E98;
      long long v9 = off_268B99098;
      uint64_t v10 = off_268B990E0;
      sub_23C205EAC();
      *(_DWORD *)int __s = sub_23C2060E4();
      *((_DWORD *)__s + 1) = sub_23C2060E4();
      *((void *)__s + 1) = sub_23C2060E4();
      *((_DWORD *)__s + 4) = sub_23C2060E4();
      *((_DWORD *)__s + 5) = sub_23C2060E4();
      *(void *)(__s + 26) = sub_23C2060E4();
      *(void *)(__s + 34) = sub_23C2060E4();
      *(_DWORD *)(__s + 42) = sub_23C2060E4();
      *(_DWORD *)(__s + 46) = sub_23C2060E4();
      sub_23C206674(&v8, 4, (uint64_t)(__s + 50), 16);
      __s[66] = sub_23C2060E4();
      __s[67] = sub_23C2060E4();
      *(void *)(__s + 68) = sub_23C2060E4();
      uint64_t v6 = sub_23C2060E4();
      uint64_t result = 0;
      *(void *)(__s + 76) = v6;
    }
  }
  return result;
}

uint64_t sub_23C2080A0(uint64_t a1, int a2, unsigned char *__s)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    memset_s(__s, 0x10uLL, 0, 0x10uLL);
    if (sub_23C205EAC())
    {
      void *__s = sub_23C2060E4();
      *((_DWORD *)__s + 1) = sub_23C2060E4();
      *((_DWORD *)__s + 2) = sub_23C2060E4();
      int v6 = sub_23C2060E4();
      uint64_t result = 0;
      *((_DWORD *)__s + 3) = v6;
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_23C208210(uint64_t a1, int a2, void *__s, void *a4, uint64_t a5)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t result = 0xFFFFFFFFLL;
  if (a2 && a1 && __s && a4)
  {
    memset_s(__s, 0x10uLL, 0, 0x10uLL);
    memset_s(a4, 0x10uLL, 0, 0x10uLL);
    uint64_t v12 = 0;
    v10[0] = 0u;
    long long v11 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    v10[1] = (unint64_t)off_268B99040;
    uint64_t v13 = off_268B98B78;
    sub_23C205EAC();
    if (sub_23C206674(v10, 4, (uint64_t)__s, 16)
      && sub_23C206674((long long *)((char *)&v11 + 8), 4, (uint64_t)a4, 16))
    {
      return sub_23C206674(&v15, 4, a5, 16) - 1;
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_23C208398(uint64_t a1, uint64_t a2, _DWORD *__s)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t result = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    memset_s(__s, 0x58uLL, 0, 0x58uLL);
    long long v24 = 0u;
    uint64_t v26 = 0;
    long long v27 = 0u;
    uint64_t v28 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v33 = 0;
    long long v34 = 0u;
    uint64_t v35 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
    uint64_t v40 = 0;
    long long v41 = 0u;
    uint64_t v42 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v8 = 0u;
    uint64_t v9 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v15 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    uint64_t v21 = 0;
    long long v23 = 0u;
    uint64_t v10 = off_268B98B58;
    *(void *)&long long v13 = off_268B98B50;
    uint64_t v16 = off_268B98B70;
    *(void *)&long long v19 = off_268B98DF8;
    uint64_t v22 = off_268B98DA0;
    long long v25 = off_268B98DA8;
    uint64_t v29 = off_268B98CA0;
    unsigned int v32 = off_268B98D90;
    long long v36 = off_268B98D98;
    uint64_t v39 = off_268B98F58;
    uint64_t v43 = off_268B98FC0;
    sub_23C205EAC();
    void *__s = sub_23C2060E4();
    if (sub_23C206674((long long *)((char *)&v8 + 8), 4, (uint64_t)(__s + 1), 16)
      && sub_23C206674(&v12, 4, (uint64_t)(__s + 5), 16)
      && (__s[9] = sub_23C2060E4(),
          __s[10] = sub_23C2060E4(),
          __s[11] = sub_23C2060E4(),
          __s[12] = sub_23C2060E4(),
          __s[15] = sub_23C2060E4(),
          __s[13] = sub_23C2060E4(),
          __s[14] = sub_23C2060E4(),
          sub_23C208688((long long *)((char *)&v20 + 8))))
    {
      int v6 = __s[9];
      if ((v6 & 0x400) != 0)
      {
        *((void *)__s + 9) = sub_23C2060E4();
        int v6 = __s[9];
      }
      if ((v6 & 0x800) != 0)
      {
        int v7 = sub_23C2060E4();
        uint64_t result = 0;
        __s[20] = v7;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_23C208688(long long *a1)
{
  long long v4 = *a1;
  uint64_t v2 = ccder_blob_decode_range();
  if (v2) {
    *a1 = v4;
  }
  return v2;
}

uint64_t sub_23C208710(int *a1, void *a2, _DWORD *a3)
{
  long long v11 = 0;
  uint64_t v3 = 4294967273;
  if (a2 && a3)
  {
    if (a1 && (int v7 = *a1) != 0)
    {
      if (v7)
      {
        sub_23C206FC0(&v11, "persona_uuid", (uint64_t)(a1 + 1));
        int v7 = *a1;
      }
      if ((v7 & 2) != 0) {
        sub_23C206FC0(&v11, "volume_uuid", (uint64_t)(a1 + 5));
      }
      uint64_t v9 = 0;
      size_t v10 = 0;
      if (!sub_23C206B00(&v11, &v9, &v10))
      {
        uint64_t v3 = 0;
        *a2 = v9;
        *a3 = v10;
      }
    }
    else
    {
      uint64_t v3 = 0;
      *a2 = 0;
      *a3 = 0;
    }
  }
  sub_23C2063F4(&v11);
  return v3;
}

uint64_t sub_23C2087E8(uint64_t a1, uint64_t a2, char *__s)
{
  int v6 = 0;
  uint64_t v3 = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    memset_s(__s, 0x24uLL, 0, 0x24uLL);
    if (sub_23C205EAC())
    {
      if (!sub_23C206704(&v6, "volume_uuid", __s + 20, 0x10uLL)) {
        *(_DWORD *)__s |= 2u;
      }
      uint64_t v3 = 0;
      if (!sub_23C206704(&v6, "persona_uuid", __s + 4, 0x10uLL)) {
        *(_DWORD *)__s |= 1u;
      }
    }
    else
    {
      uint64_t v3 = 0xFFFFFFFFLL;
    }
  }
  sub_23C2063F4(&v6);
  return v3;
}

uint64_t sub_23C2088D4(uint64_t a1, void *a2, _DWORD *a3)
{
  size_t v10 = 0;
  uint64_t v3 = 4294967273;
  if (a2 && a3)
  {
    if (a1)
    {
      if (!sub_23C206FC0(&v10, "options", a1) && !sub_23C206FC0(&v10, "kc", a1 + 8))
      {
        uint64_t v8 = 0;
        size_t v9 = 0;
        if (!sub_23C206B00(&v10, &v8, &v9))
        {
          uint64_t v3 = 0;
          *a2 = v8;
          *a3 = v9;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      *a2 = 0;
      *a3 = 0;
    }
  }
  sub_23C2063F4(&v10);
  return v3;
}

uint64_t sub_23C2089A0(uint64_t a1, uint64_t a2, char *__s)
{
  int v6 = 0;
  uint64_t v3 = 0xFFFFFFFFLL;
  if (a2 && a1 && __s)
  {
    memset_s(__s, 0x10uLL, 0, 0x10uLL);
    if (sub_23C205EAC())
    {
      sub_23C206704(&v6, "options", __s, 8uLL);
      sub_23C206704(&v6, "kc", __s + 8, 4uLL);
      uint64_t v3 = 0;
    }
    else
    {
      uint64_t v3 = 0xFFFFFFFFLL;
    }
  }
  sub_23C2063F4(&v6);
  return v3;
}

void *sub_23C208A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0;
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (a1)
  {
    if (a2)
    {
      uint64_t v2 = off_268B98AD0;
      if (off_268B98AD0)
      {
        sub_23C205EAC();
        return 0;
      }
    }
  }
  return v2;
}

uint64_t sub_23C208E58(long long *a1, uint64_t a2, uint64_t *a3, _DWORD *a4)
{
  long long v8 = *a1;
  if ((ccder_blob_decode_range() & 1) == 0) {
    return 0;
  }
  if (a3 && a4)
  {
    uint64_t result = (uint64_t)calloc(0, 1uLL);
    if (!result) {
      return result;
    }
    *a3 = result;
    *a4 = 0;
  }
  *a1 = v8;
  return 1;
}

uint64_t sub_23C208F14(long long *a1, uint64_t a2, void *a3)
{
  if (a3) {
    *a3 = 0;
  }
  long long v6 = *a1;
  uint64_t result = ccder_blob_decode_range();
  if (result)
  {
    if (ccn_read_uint())
    {
      return 0;
    }
    else
    {
      *a1 = v6;
      if (a3) {
        *a3 = 0;
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_23C208FA0(const void **a1, void **a2)
{
  uint64_t v5 = *a1;
  __s2 = *a2;
  if (!ccder_blob_decode_sequence_tl()
    || !ccder_blob_decode_sequence_tl()
    || !ccder_blob_decode_tag()
    || !ccder_blob_decode_len()
    || !v5
    || !ccder_blob_decode_tag()
    || !ccder_blob_decode_len()
    || !__s2)
  {
    return 4294967293;
  }
  int v2 = memcmp(v5, __s2, 0);
  if (v2 > 0) {
    return 1;
  }
  else {
    return ((v2 < 0) << 31 >> 31);
  }
}

uint64_t sub_23C2090CC(uint64_t a1, int a2, void *a3, size_t *a4)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 36, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  if (!off_26EFDF0D8) {
    return 4294967284;
  }
  if (a1 >= 7) {
    abort();
  }
  unsigned int v8 = a1;
  size_t v9 = (char *)&unk_268B990F8 + 72 * a1;
  int v11 = v9[4];
  size_t v10 = v9 + 4;
  if (!v11)
  {
    uint64_t result = ((uint64_t (*)(uint64_t, char *, char *))off_26EFDF0D8)(a1, (char *)&unk_268B990F8 + 72 * a1 + 5, (char *)&unk_268B990F8 + 72 * a1 + 64);
    if (result) {
      return result;
    }
    *size_t v10 = 1;
  }
  long long v13 = (char *)&unk_268B990F8 + 72 * a1;
  size_t v15 = *((void *)v13 + 8);
  long long v14 = (unint64_t *)(v13 + 64);
  if (*a4 < v15) {
    return 4294967285;
  }
  memcpy(a3, (char *)&unk_268B990F8 + 72 * v8 + 5, *a4);
  unint64_t v16 = *v14;
  *a4 = *v14;
  if (a2) {
    sub_23C205028((char *)a3, v16);
  }
  return 0;
}

uint64_t sub_23C209210()
{
  sub_23C205214(&off_26EFDF0D8 != 0, 62, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(off_26EFDF0E0[0] != 0, 63, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  uint64_t v0 = off_26EFDF0E0[0];

  return v0();
}

uint64_t sub_23C2092C8(uint64_t a1, unsigned int a2)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 70, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(off_26EFDF0E8 != 0, 71, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  uint64_t v4 = (uint64_t (*)(uint64_t, unsigned int))off_26EFDF0E8;

  return v4(a1, a2);
}

uint64_t sub_23C209398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 78, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF0F0 != 0, 79, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  unint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))unk_26EFDF0F0;

  return v16(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_23C2094B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 86, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF0F8 != 0, 87, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  long long v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))unk_26EFDF0F8;

  return v18(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_23C2095D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 94, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF100 != 0, 95, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  long long v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))unk_26EFDF100;

  return v18(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_23C209700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 106, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF108 != 0, 107, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  long long v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))unk_26EFDF108;

  return v17(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_23C209830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 115, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF110 != 0, 116, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  long long v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))unk_26EFDF110;

  return v18(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_23C209960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 123, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF118 != 0, 124, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))unk_26EFDF118;

  return v10(a1, a2, a3, a4, a5);
}

uint64_t sub_23C209A58()
{
  sub_23C205214(&off_26EFDF0D8 != 0, 131, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF120 != 0, 132, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  uint64_t v0 = (uint64_t (*)(void))unk_26EFDF120;

  return v0();
}

uint64_t sub_23C209B10(uint64_t a1, uint64_t a2)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 139, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF128 != 0, 140, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))unk_26EFDF128;

  return v4(a1, a2);
}

uint64_t sub_23C209BE0(uint64_t a1)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 147, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF130 != 0, 148, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  int v2 = (uint64_t (*)(uint64_t))unk_26EFDF130;

  return v2(a1);
}

uint64_t sub_23C209CA8(uint64_t a1)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 155, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF138 != 0, 156, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  int v2 = (uint64_t (*)(uint64_t))unk_26EFDF138;

  return v2(a1);
}

uint64_t sub_23C209D70(uint64_t a1)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 163, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF140 != 0, 164, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  int v2 = (uint64_t (*)(uint64_t))unk_26EFDF140;

  return v2(a1);
}

uint64_t sub_23C209E38(uint64_t a1)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 171, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF148 != 0, 172, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  int v2 = (uint64_t (*)(uint64_t))unk_26EFDF148;

  return v2(a1);
}

uint64_t sub_23C209F00(uint64_t a1)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 179, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF150 != 0, 180, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  int v2 = (uint64_t (*)(uint64_t))unk_26EFDF150;

  return v2(a1);
}

uint64_t sub_23C209FC8(uint64_t a1)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 187, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF158 != 0, 188, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  int v2 = (uint64_t (*)(uint64_t))unk_26EFDF158;

  return v2(a1);
}

uint64_t sub_23C20A090(uint64_t a1)
{
  sub_23C205214(&off_26EFDF0D8 != 0, 195, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  sub_23C205214(unk_26EFDF160 != 0, 196, "/Library/Caches/com.apple.xbs/Sources/AppleKeyStore_libs/platform/platform.c");
  int v2 = (uint64_t (*)(uint64_t))unk_26EFDF160;

  return v2(a1);
}

uint64_t sub_23C20A158(int a1)
{
  return -a1 & 3;
}

char *sub_23C20A164(_DWORD *a1, const void *a2, int a3)
{
  uint64_t v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    int v5 = -a3;
    size_t v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      int __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }
  else
  {
    *a1 = 0;
  }
  return v3;
}

char *sub_23C20A1EC(char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = &a9;
  unsigned int v12 = 4;
  if (a3)
  {
    int v13 = a3;
    do
    {
      long long v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }
    while (v13);
  }
  uint64_t result = (char *)calloc(1uLL, v12);
  unint64_t v16 = result;
  uint64_t v22 = (const void **)&a9;
  int v17 = 0;
  if (a3)
  {
    uint64_t v18 = 4;
    do
    {
      long long v19 = v22;
      long long v20 = *v22;
      v22 += 2;
      uint64_t result = sub_23C20A164(&v16[v18], v20, *((_DWORD *)v19 + 2));
      uint64_t v18 = result - v16;
      ++v17;
    }
    while (a3 != v17);
  }
  *(_DWORD *)unint64_t v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

uint64_t sub_23C20A2CC(unsigned int *a1, unint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2 < 4) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v9 = a3;
  if (*a1 >= a3)
  {
    long long v19 = (void **)&a9;
    if (!a3) {
      return 0;
    }
    int v11 = (char *)(a1 + 1);
    while (1)
    {
      unsigned int v12 = v19;
      int v13 = *v19;
      v19 += 2;
      unsigned int v16 = *(_DWORD *)v11;
      long long v14 = v11 + 4;
      size_t v15 = v16;
      if (v16 > a2) {
        break;
      }
      if (v13)
      {
        int v17 = (size_t *)v12[1];
        if (*v17 < v15) {
          return 0xFFFFFFFFLL;
        }
        memcpy(v13, v14, v15);
        *int v17 = v15;
      }
      int v11 = &v14[v15];
      if (!--v9) {
        return 0;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t CCRandomCopyBytes()
{
  return MEMORY[0x270ED7A78]();
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x270EE4528]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x270EE4530](BOOLean);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x270EE47C8](allocator, bytes, length);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x270EE4808](theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x270EE4820](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x270EE4838]();
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x270EE4920](allocator, capacity, keyCallBacks, valueCallBacks);
}

Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value)
{
  return MEMORY[0x270EE4968](theDict, key, value);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x270EE4A30](cf);
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x270EE4BE8](allocator, theType, valuePtr);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x270EE4C58]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x270EE4C70](number, theType, valuePtr);
}

void CFRelease(CFTypeRef cf)
{
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return MEMORY[0x270EF3F30](*(void *)&connection, *(void *)&selector, input, *(void *)&inputCnt, inputStruct, inputStructCnt, output, outputCnt);
}

kern_return_t IOConnectSetNotificationPort(io_connect_t connect, uint32_t type, mach_port_t port, uintptr_t reference)
{
  return MEMORY[0x270EF3F78](*(void *)&connect, *(void *)&type, *(void *)&port, reference);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x270EF4820](*(void *)&object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x270EF49D8](*(void *)&entry, key, allocator, *(void *)&options);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return MEMORY[0x270EF49E8](*(void *)&mainPort, path);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return MEMORY[0x270EF4A98](*(void *)&connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x270EF4AB0](*(void *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x270EF4AD0](name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return MEMORY[0x270EF4AE0](*(void *)&service, *(void *)&owningTask, *(void *)&type, connect);
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x270EF2A50](aClassName);
}

void NSLog(NSString *format, ...)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x270ED7DC0]();
}

uint64_t __memcpy_chk()
{
  return MEMORY[0x270ED7E38]();
}

void abort(void)
{
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl calloc(size_t __count, size_t __size)
{
  return (void *)MEMORY[0x270ED87B0](__count, __size);
}

uint64_t cc_clear()
{
  return MEMORY[0x270ED87D0]();
}

uint64_t ccaes_cbc_decrypt_mode()
{
  return MEMORY[0x270ED87E0]();
}

uint64_t ccaes_cbc_encrypt_mode()
{
  return MEMORY[0x270ED87E8]();
}

uint64_t cccbc_clear_iv()
{
  return MEMORY[0x270ED8820]();
}

uint64_t cccbc_init()
{
  return MEMORY[0x270ED8828]();
}

uint64_t cccurve25519()
{
  return MEMORY[0x270ED8868]();
}

uint64_t cccurve25519_make_pub()
{
  return MEMORY[0x270ED8878]();
}

uint64_t ccder_blob_decode_len()
{
  return MEMORY[0x270ED8890]();
}

uint64_t ccder_blob_decode_range()
{
  return MEMORY[0x270ED88A0]();
}

uint64_t ccder_blob_decode_sequence_tl()
{
  return MEMORY[0x270ED88A8]();
}

uint64_t ccder_blob_decode_tag()
{
  return MEMORY[0x270ED88B0]();
}

uint64_t ccder_blob_decode_tl()
{
  return MEMORY[0x270ED88B8]();
}

uint64_t ccder_blob_encode_body()
{
  return MEMORY[0x270ED88C8]();
}

uint64_t ccder_blob_encode_body_tl()
{
  return MEMORY[0x270ED88D0]();
}

uint64_t ccder_blob_encode_implicit_raw_octet_string()
{
  return MEMORY[0x270ED88D8]();
}

uint64_t ccder_blob_encode_implicit_uint64()
{
  return MEMORY[0x270ED88E0]();
}

uint64_t ccder_blob_encode_tl()
{
  return MEMORY[0x270ED88E8]();
}

uint64_t ccder_decode_sequence_tl()
{
  return MEMORY[0x270ED8920]();
}

uint64_t ccder_decode_tl()
{
  return MEMORY[0x270ED8930]();
}

uint64_t ccder_encode_constructed_tl()
{
  return MEMORY[0x270ED8950]();
}

uint64_t ccder_encode_raw_octet_string()
{
  return MEMORY[0x270ED8968]();
}

uint64_t ccder_encode_uint64()
{
  return MEMORY[0x270ED8978]();
}

uint64_t ccder_sizeof()
{
  return MEMORY[0x270ED8980]();
}

uint64_t ccder_sizeof_implicit_uint64()
{
  return MEMORY[0x270ED8990]();
}

uint64_t ccder_sizeof_raw_octet_string()
{
  return MEMORY[0x270ED89B0]();
}

uint64_t ccder_sizeof_uint64()
{
  return MEMORY[0x270ED89C0]();
}

uint64_t ccdigest()
{
  return MEMORY[0x270ED8A40]();
}

uint64_t ccec_export_pub()
{
  return MEMORY[0x270ED8AB8]();
}

uint64_t ccec_import_pub()
{
  return MEMORY[0x270ED8AD8]();
}

uint64_t cchkdf()
{
  return MEMORY[0x270ED8BA8]();
}

uint64_t cchmac()
{
  return MEMORY[0x270ED8BC0]();
}

uint64_t ccn_read_uint()
{
  return MEMORY[0x270ED8C40]();
}

uint64_t ccn_write_uint_padded()
{
  return MEMORY[0x270ED8C60]();
}

uint64_t ccpbkdf2_hmac()
{
  return MEMORY[0x270ED8C88]();
}

uint64_t ccrng()
{
  return MEMORY[0x270ED8C90]();
}

uint64_t ccsha256_di()
{
  return MEMORY[0x270ED8D70]();
}

uint64_t cczp_bitlen()
{
  return MEMORY[0x270ED8E70]();
}

int close(int a1)
{
  return MEMORY[0x270ED8F18](*(void *)&a1);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

int dlclose(void *__handle)
{
  return MEMORY[0x270ED9618](__handle);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x270ED9628](__path, *(void *)&__mode);
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x270ED98D0](*(void *)&a1, *(void *)&a2);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x270ED9A08](a1, a2);
}

void free(void *a1)
{
}

int fts_close(FTS *a1)
{
  return MEMORY[0x270ED9B48](a1);
}

FTS *__cdecl fts_open(char *const *a1, int a2, int (__cdecl *a3)(const FTSENT **, const FTSENT **))
{
  return (FTS *)MEMORY[0x270ED9B50](a1, *(void *)&a2, a3);
}

FTSENT *__cdecl fts_read(FTS *a1)
{
  return (FTSENT *)MEMORY[0x270ED9B60](a1);
}

int fts_set(FTS *a1, FTSENT *a2, int a3)
{
  return MEMORY[0x270ED9B68](a1, a2, *(void *)&a3);
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x270ED9D98](a1, a2);
}

uint64_t mach_continuous_time(void)
{
  return MEMORY[0x270EDA158]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x270EDA288](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return MEMORY[0x270EDA4B8](__s, __smax, *(void *)&__c, __n);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x270EDA828](a1, *(void *)&a2);
}

int open_dprotected_np(const char *a1, int a2, int a3, int a4, ...)
{
  return MEMORY[0x270EDA830](a1, *(void *)&a2, *(void *)&a3, *(void *)&a4);
}

int printf(const char *a1, ...)
{
  return MEMORY[0x270EDAD20](a1);
}

int putchar(int a1)
{
  return MEMORY[0x270EDB090](*(void *)&a1);
}

int puts(const char *a1)
{
  return MEMORY[0x270EDB098](a1);
}

void qsort(void *__base, size_t __nel, size_t __width, int (__cdecl *__compar)(const void *, const void *))
{
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return MEMORY[0x270EDB120](*(void *)&a1, a2, a3);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return (char *)MEMORY[0x270EDB170](a1, a2);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x270EDB510](__str, __size, __format);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x270EDB568](a1, a2);
}

int statfs(const char *a1, statfs *a2)
{
  return MEMORY[0x270EDB570](a1, a2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x270EDB5D8](*(void *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

char *__cdecl strnstr(const char *__big, const char *__little, size_t __len)
{
  return (char *)MEMORY[0x270EDB660](__big, __little, __len);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}

void syslog(int a1, const char *a2, ...)
{
}

int usleep(useconds_t a1)
{
  return MEMORY[0x270EDB9E8](*(void *)&a1);
}

int uuid_compare(const uuid_t uu1, const uuid_t uu2)
{
  return MEMORY[0x270EDBA08](uu1, uu2);
}

void uuid_copy(uuid_t dst, const uuid_t src)
{
}

void uuid_unparse(const uuid_t uu, uuid_string_t out)
{
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return MEMORY[0x270EDBC30](*(void *)&__fd, __buf, __nbyte);
}