void morphun::util::LocaleUtils::toString(morphun::util::LocaleUtils *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  void *__p[2];
  char v6;

  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "_");
  morphun::util::LocaleUtils::toString((uint64_t)this, (const void **)__p, a2);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2C37DC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(void *__dst, char *__src)
{
  if (*(_WORD *)__src)
  {
    unint64_t v4 = 0;
    do
      v5 = &__src[2 * v4++];
    while (*((_WORD *)v5 + 1));
    if (v4 >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (v4 >= 0xB)
    {
      uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v4 | 3) != 0xB) {
        uint64_t v7 = v4 | 3;
      }
      v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v7 + 1);
      __dst[1] = v4;
      __dst[2] = v8 | 0x8000000000000000;
      *__dst = v6;
    }
    else
    {
      *((unsigned char *)__dst + 23) = v4;
      v6 = __dst;
      if (!v4) {
        goto LABEL_9;
      }
    }
    memmove(v6, __src, 2 * v4);
    goto LABEL_14;
  }
  unint64_t v4 = 0;
  *((unsigned char *)__dst + 23) = 0;
LABEL_9:
  v6 = __dst;
LABEL_14:
  *((_WORD *)v6 + v4) = 0;
  return __dst;
}

void morphun::util::LocaleUtils::getSupportedLocaleList(morphun::util::LocaleUtils *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = a2 + 8;
  v3 = (void *)morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(this);
  std::map<std::string,std::vector<morphun::util::ULocale>>::map[abi:ne180100]((uint64_t)&v10, v3);
  unint64_t v4 = v10;
  if (v10 != v11)
  {
    do
    {
      v5 = (const morphun::util::ULocale *)v4[7];
      v6 = (const morphun::util::ULocale *)v4[8];
      while (v5 != v6)
      {
        std::__tree<morphun::util::ULocale>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&>((uint64_t **)a2, (uint64_t)v5, v5);
        v5 = (const morphun::util::ULocale *)((char *)v5 + 128);
      }
      uint64_t v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = (void **)v7;
          uint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void **)v4[2];
          BOOL v9 = *v8 == v4;
          unint64_t v4 = v8;
        }
        while (!v9);
      }
      unint64_t v4 = v8;
    }
    while (v8 != v11);
  }
  std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(v11[0]);
}

void sub_1D2C37F70(_Unwind_Exception *a1)
{
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<morphun::util::ULocale>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<morphun::util::ULocale>>,0>(uint64_t a1)
{
  v3 = (void **)(a1 + 24);
  std::vector<morphun::util::ULocale>::__destroy_vector::operator()[abi:ne180100](&v3);
  if (*(char *)(a1 + 23) < 0)
  {
    v2 = *(void **)a1;
    operator delete(v2);
  }
}

void std::vector<morphun::util::ULocale>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    unint64_t v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = v4 - 128;
      uint64_t v7 = v4 - 128;
      uint64_t v8 = v4 - 128;
      do
      {
        uint64_t v9 = *(void *)v8;
        v8 -= 128;
        (*(void (**)(char *))(v9 + 8))(v7);
        v6 -= 128;
        BOOL v10 = v7 == v2;
        uint64_t v7 = v8;
      }
      while (!v10);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void morphun::util::ULocale::~ULocale(void **this, void **a2)
{
  v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 5)) = a2[1];
  if (*((char *)this + 127) < 0) {
    operator delete(this[13]);
  }
  if (*((char *)this + 103) < 0) {
    operator delete(this[10]);
  }
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  if (*((char *)this + 55) < 0) {
    operator delete(this[4]);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

void morphun::util::ULocale::~ULocale(void **this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t std::map<std::string,std::vector<morphun::util::ULocale>>::map[abi:ne180100](uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  unint64_t v4 = a2 + 1;
  v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    uint64_t v24 = a1 + 8;
    do
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)v3;
      if (*(void *)a1 == v3) {
        goto LABEL_9;
      }
      uint64_t v8 = *(void **)(a1 + 8);
      uint64_t v9 = (void *)v3;
      if (v6)
      {
        do
        {
          uint64_t v7 = v8;
          uint64_t v8 = (void *)v8[1];
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v9[2];
          BOOL v10 = *v7 == (void)v9;
          uint64_t v9 = v7;
        }
        while (v10);
      }
      if (std::less<std::string>::operator()[abi:ne180100](v7 + 4, v5 + 4))
      {
LABEL_9:
        if (!v6)
        {
          v27[0] = v3;
          v11 = (uint64_t **)v3;
LABEL_15:
          v12 = (char *)operator new(0x50uLL);
          v13 = (uint64_t *)v12;
          v25[0] = v12;
          v25[1] = v3;
          char v26 = 0;
          if (*((char *)v5 + 55) < 0)
          {
            std::string::__init_copy_ctor_external((std::string *)(v12 + 32), (const std::string::value_type *)v5[4], v5[5]);
          }
          else
          {
            long long v14 = *((_OWORD *)v5 + 2);
            *((void *)v12 + 6) = v5[6];
            *((_OWORD *)v12 + 2) = v14;
          }
          v13[7] = 0;
          v13[8] = 0;
          v13[9] = 0;
          uint64_t v15 = v5[7];
          uint64_t v16 = v5[8];
          v27[1] = (uint64_t)(v13 + 7);
          char v28 = 0;
          uint64_t v17 = v16 - v15;
          if (v16 != v15)
          {
            if (v17 < 0) {
              std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
            }
            v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::util::ULocale>>(v17 >> 7);
            uint64_t v19 = 0;
            v13[7] = (uint64_t)v18;
            v13[8] = (uint64_t)v18;
            v13[9] = (uint64_t)&v18[128 * v20];
            do
            {
              morphun::util::ULocale::ULocale((morphun::util::ULocale *)&v18[v19], (const morphun::util::ULocale *)(v15 + v19));
              v19 += 128;
            }
            while (v15 + v19 != v16);
            v13[8] = (uint64_t)&v18[v19];
          }
          char v26 = 1;
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, v27[0], v11, v13);
          v25[0] = 0;
          std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,void *>>>>::reset[abi:ne180100]((uint64_t)v25);
          uint64_t v3 = v24;
          goto LABEL_24;
        }
        v27[0] = (uint64_t)v7;
        v11 = (uint64_t **)(v7 + 1);
      }
      else
      {
        v11 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__find_equal<std::string>(a1, v27, v5 + 4);
      }
      if (!*v11) {
        goto LABEL_15;
      }
LABEL_24:
      v21 = (void *)v5[1];
      if (v21)
      {
        do
        {
          v22 = v21;
          v21 = (void *)*v21;
        }
        while (v21);
      }
      else
      {
        do
        {
          v22 = (void *)v5[2];
          BOOL v10 = *v22 == (void)v5;
          v5 = v22;
        }
        while (!v10);
      }
      v5 = v22;
    }
    while (v22 != v4);
  }
  return a1;
}

void sub_1D2C3842C(_Unwind_Exception *a1, uint64_t a2, void **a3, ...)
{
  va_start(va, a3);
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy(*a3);
  _Unwind_Resume(a1);
}

void std::__tree<morphun::util::ULocale>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&>(uint64_t **a1, uint64_t a2, const morphun::util::ULocale *a3)
{
  v5 = (uint64_t **)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>((uint64_t)a1, &v10, a2);
  if (!*v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = (uint64_t *)operator new(0xA0uLL);
    v8[1] = a1 + 1;
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v7 + 4), a3);
    char v9 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v10, v6, v7);
    v8[0] = 0;
    std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100]((uint64_t)v8);
  }
}

void sub_1D2C38568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

morphun::util::ULocale *morphun::util::ULocale::ULocale(morphun::util::ULocale *this, const morphun::util::ULocale *a2)
{
  *(void *)this = &off_1F2A08A90;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((void *)this + 15) = 0;
  morphun::util::ULocale::operator=((uint64_t)this, (uint64_t)a2);
  return this;
}

void sub_1D2C385F0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 127) < 0) {
    operator delete(*(void **)(v1 + 104));
  }
  if (*(char *)(v1 + 103) < 0) {
    operator delete(*(void **)(v1 + 80));
  }
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*(void **)(v1 + 56));
  }
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*(void **)(v1 + 32));
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::ULocale::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
    std::string::operator=((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
    std::string::operator=((std::string *)(a1 + 56), (const std::string *)(a2 + 56));
    std::string::operator=((std::string *)(a1 + 80), (const std::string *)(a2 + 80));
    std::string::operator=((std::string *)(a1 + 104), (const std::string *)(a2 + 104));
  }
  return a1;
}

uint64_t *std::__tree<std::u16string_view>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      unint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            char v9 = (uint64_t **)a2[2];
          }
          else
          {
            char v9 = (uint64_t **)v2[1];
            uint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *char v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      (*(void (**)(void))(v1[4] + 8))();
    }
    operator delete(v1);
  }
}

void morphun::util::LocaleUtils::toString(uint64_t a1@<X0>, const void **a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  v25 = 0;
  std::basic_string<char16_t>::size_type v26 = 0;
  uint64_t v27 = 0;
  int v6 = (const char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      goto LABEL_13;
    }
    int v6 = *(const char **)v6;
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 31);
    if (!*(unsigned char *)(a1 + 31)) {
      goto LABEL_13;
    }
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v6, v7);
  if (v27 >= 0) {
    int v8 = (const std::basic_string<char16_t>::value_type *)&v25;
  }
  else {
    int v8 = (const std::basic_string<char16_t>::value_type *)v25;
  }
  if (v27 >= 0) {
    std::basic_string<char16_t>::size_type v9 = HIBYTE(v27);
  }
  else {
    std::basic_string<char16_t>::size_type v9 = v26;
  }
  std::basic_string<char16_t>::append(a3, v8, v9);
LABEL_13:
  uint64_t v10 = (const char *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0)
  {
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      goto LABEL_26;
    }
    uint64_t v10 = *(const char **)v10;
  }
  else
  {
    LODWORD(v11) = *(unsigned __int8 *)(a1 + 55);
    if (!*(unsigned char *)(a1 + 55)) {
      goto LABEL_26;
    }
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v10, v11);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, a2, (const void **)&v25);
  if ((v24 & 0x80u) == 0) {
    p_p = (const std::basic_string<char16_t>::value_type *)&__p;
  }
  else {
    p_p = (const std::basic_string<char16_t>::value_type *)__p;
  }
  if ((v24 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v13 = v24;
  }
  else {
    std::basic_string<char16_t>::size_type v13 = v23;
  }
  std::basic_string<char16_t>::append(a3, p_p, v13);
  if ((char)v24 < 0) {
    operator delete(__p);
  }
LABEL_26:
  long long v14 = (const char *)(a1 + 56);
  if (*(char *)(a1 + 79) < 0)
  {
    uint64_t v15 = *(void *)(a1 + 64);
    if (!v15) {
      goto LABEL_39;
    }
    long long v14 = *(const char **)v14;
  }
  else
  {
    LODWORD(v15) = *(unsigned __int8 *)(a1 + 79);
    if (!*(unsigned char *)(a1 + 79)) {
      goto LABEL_39;
    }
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v14, v15);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, a2, (const void **)&v25);
  if ((v24 & 0x80u) == 0) {
    uint64_t v16 = (const std::basic_string<char16_t>::value_type *)&__p;
  }
  else {
    uint64_t v16 = (const std::basic_string<char16_t>::value_type *)__p;
  }
  if ((v24 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v17 = v24;
  }
  else {
    std::basic_string<char16_t>::size_type v17 = v23;
  }
  std::basic_string<char16_t>::append(a3, v16, v17);
  if ((char)v24 < 0) {
    operator delete(__p);
  }
LABEL_39:
  v18 = (const char *)(a1 + 80);
  if (*(char *)(a1 + 103) < 0)
  {
    uint64_t v19 = *(void *)(a1 + 88);
    if (!v19) {
      goto LABEL_52;
    }
    v18 = *(const char **)v18;
  }
  else
  {
    LODWORD(v19) = *(unsigned __int8 *)(a1 + 103);
    if (!*(unsigned char *)(a1 + 103)) {
      goto LABEL_52;
    }
  }
  morphun::util::StringViewUtils::convert((uint64_t)&v25, v18, v19);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, a2, (const void **)&v25);
  if ((v24 & 0x80u) == 0) {
    uint64_t v20 = (const std::basic_string<char16_t>::value_type *)&__p;
  }
  else {
    uint64_t v20 = (const std::basic_string<char16_t>::value_type *)__p;
  }
  if ((v24 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v21 = v24;
  }
  else {
    std::basic_string<char16_t>::size_type v21 = v23;
  }
  std::basic_string<char16_t>::append(a3, v20, v21);
  if ((char)v24 < 0) {
    operator delete(__p);
  }
LABEL_52:
  if (SHIBYTE(v27) < 0) {
    operator delete(v25);
  }
}

void sub_1D2C38B18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (*(char *)(v20 + 23) < 0) {
    operator delete(*(void **)v20);
  }
  _Unwind_Resume(exception_object);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::append(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n)
{
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::size_type v6 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    std::basic_string<char16_t>::size_type v6 = 10;
    std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if (v6 - size >= __n)
  {
    if (__n)
    {
      int v8 = this;
      if ((*((unsigned char *)&this->__r_.__value_.__s + 23) & 0x80) != 0) {
        int v8 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      }
      memmove((char *)v8 + 2 * size, __s, 2 * __n);
      std::basic_string<char16_t>::size_type v9 = size + __n;
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
        this->__r_.__value_.__l.__size_ = v9;
      }
      else {
        *((unsigned char *)&this->__r_.__value_.__s + 23) = v9 & 0x7F;
      }
      v8->__r_.__value_.__s.__data_[v9] = 0;
    }
  }
  else
  {
    std::basic_string<char16_t>::__grow_by_and_replace(this, v6, __n - v6 + size, size, size, 0, __n, __s);
  }
  return this;
}

uint64_t morphun::util::StringViewUtils::convert(uint64_t a1, const char *a2, int32_t a3)
{
  UErrorCode pErrorCode = U_ZERO_ERROR;
  int32_t pDestLength = a3;
  std::basic_string<char16_t>::size_type v6 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  std::basic_string<char16_t>::resize(v6, a3, 0);
  uint64_t v7 = (UChar *)a1;
  if (*(char *)(a1 + 23) < 0) {
    uint64_t v7 = *(UChar **)a1;
  }
  u_strFromUTF8(v7, a3, &pDestLength, a2, a3, &pErrorCode);
  UErrorCode v8 = pErrorCode;
  if (pErrorCode >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v8);
  }
  if (pDestLength != a3) {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, pDestLength, 0);
  }
  return a1;
}

void sub_1D2C38D08(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::resize(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __n, std::basic_string<char16_t>::value_type __c)
{
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
    if (size >= __n)
    {
      this->__r_.__value_.__l.__size_ = __n;
      this = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      goto LABEL_7;
    }
LABEL_5:
    std::basic_string<char16_t>::append(this, __n - size, __c);
    return;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if (size < __n) {
    goto LABEL_5;
  }
  *((unsigned char *)&this->__r_.__value_.__s + 23) = __n & 0x7F;
LABEL_7:
  this->__r_.__value_.__s.__data_[__n] = 0;
}

uint64_t npc<std::basic_string<char16_t>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C38DB0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, const void **a2, const void **a3)
{
  if (*((char *)a2 + 23) >= 0) {
    unint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    unint64_t v5 = (unint64_t)a2[1];
  }
  if (*((char *)a3 + 23) >= 0) {
    unint64_t v6 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    unint64_t v6 = (unint64_t)a3[1];
  }
  uint64_t result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    UErrorCode v8 = (char *)result;
  }
  else {
    UErrorCode v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a2 + 23) >= 0) {
      std::basic_string<char16_t>::size_type v9 = a2;
    }
    else {
      std::basic_string<char16_t>::size_type v9 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, 2 * v5);
  }
  if (v6)
  {
    if (*((char *)a3 + 23) >= 0) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = *a3;
    }
    uint64_t result = (uint64_t)memmove(&v8[2 * v5], v10, 2 * v6);
  }
  *(_WORD *)&v8[2 * v5 + 2 * v6] = 0;
  return result;
}

void *std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (void *)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](a3, (uint64_t)(v4 + 4))) {
          break;
        }
        unint64_t v4 = (void *)*v7;
        unint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](v8, a3)) {
        break;
      }
      unint64_t v5 = v7 + 1;
      unint64_t v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

BOOL std::less<morphun::util::ULocale>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(const void **)(a1 + 104);
  uint64_t v2 = a1 + 104;
  uint64_t v3 = v4;
  int v5 = *(char *)(v2 + 23);
  uint64_t v8 = *(const void **)(a2 + 104);
  uint64_t v6 = a2 + 104;
  uint64_t v7 = v8;
  int v9 = *(char *)(v6 + 23);
  if (v9 >= 0) {
    size_t v10 = *(unsigned __int8 *)(v6 + 23);
  }
  else {
    size_t v10 = *(void *)(v6 + 8);
  }
  if (v9 >= 0) {
    uint64_t v7 = (const void *)v6;
  }
  if (v5 >= 0) {
    size_t v11 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    size_t v11 = *(void *)(v2 + 8);
  }
  if (v5 >= 0) {
    uint64_t v12 = (const void *)v2;
  }
  else {
    uint64_t v12 = v3;
  }
  if (v11 >= v10) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v11;
  }
  int v14 = memcmp(v7, v12, v13);
  if (v14) {
    return v14 < 0;
  }
  else {
    return v10 < v11;
  }
}

uint64_t std::basic_string<char16_t>::basic_string[abi:ne180100](uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a2 > 0xA)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a2 | 3) != 0xB) {
      uint64_t v4 = a2 | 3;
    }
    uint64_t v5 = v4 + 1;
    if (v4 + 1 < 0) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v6 = operator new(2 * v5);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::append(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __n, std::basic_string<char16_t>::value_type __c)
{
  if (__n)
  {
    LODWORD(v8) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v8 & 0x80000000) != 0)
    {
      std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
      unint64_t v11 = this->__r_.__value_.__r.__words[2];
      std::basic_string<char16_t>::size_type v10 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      unint64_t v8 = HIBYTE(v11);
    }
    else
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      std::basic_string<char16_t>::size_type v10 = 10;
    }
    if (v10 - size < __n)
    {
      std::basic_string<char16_t>::__grow_by(this, v10, __n - v10 + size, size, size, v3, v4);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v8) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    uint64_t v12 = this;
    if ((v8 & 0x80) != 0) {
      uint64_t v12 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    }
    size_t v13 = (std::basic_string<char16_t>::value_type *)((char *)v12 + 2 * size);
    std::basic_string<char16_t>::size_type v14 = __n;
    do
    {
      *v13++ = __c;
      --v14;
    }
    while (v14);
    std::basic_string<char16_t>::size_type v15 = size + __n;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v15;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v15 & 0x7F;
    }
    v12->__r_.__value_.__s.__data_[v15] = 0;
  }
  return this;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::util::ULocale>>(unint64_t a1)
{
  if (a1 >> 57) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(a1 << 7);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<morphun::util::ULocale>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

BOOL std::less<std::string>::operator()[abi:ne180100](void *a1, void *a2)
{
  int v2 = *((char *)a2 + 23);
  int v3 = *((char *)a1 + 23);
  if (v3 >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = a1[1];
  }
  if (v3 < 0) {
    a1 = (void *)*a1;
  }
  if (v2 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = a2[1];
  }
  if (v2 < 0) {
    a2 = (void *)*a2;
  }
  if (v5 >= v4) {
    size_t v6 = v4;
  }
  else {
    size_t v6 = v5;
  }
  int v7 = memcmp(a1, a2, v6);
  if (v7) {
    return v7 < 0;
  }
  else {
    return v4 < v5;
  }
}

uint64_t morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(morphun::util::LocaleUtils *this)
{
  {
    morphun::resources::DataResource::getProperties(&v3, (uint64_t *)"/", 0x3AuLL, 0);
    morphun::util::createSupportedLocaleMapToBase();
  }
  uint64_t result = morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(void)::BASE_SUPPORTED_LOCALES_;
  if (!morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(void)::BASE_SUPPORTED_LOCALES_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C3929C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
}

uint64_t **com::apple::siri::data::registration_locale_list::getContent@<X0>(uint64_t **a1@<X8>)
{
  __dst[48] = *(unsigned __int16 **)MEMORY[0x1E4F143B8];
  memcpy(__dst, &off_1E695BD38, 0x180uLL);
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, __dst, 16);
}

uint64_t **std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](uint64_t **a1, unsigned __int16 **a2, uint64_t a3)
{
  a1[1] = 0;
  size_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    size_t v5 = a2;
    size_t v6 = 0;
    int v7 = &a2[3 * a3];
    unint64_t v8 = a1 + 1;
    while (1)
    {
      int v9 = v4;
      if (v8 != (uint64_t **)v4)
      {
        std::basic_string<char16_t>::size_type v10 = v6;
        unint64_t v11 = v4;
        if (v6)
        {
          do
          {
            int v9 = v10;
            std::basic_string<char16_t>::size_type v10 = (uint64_t *)v10[1];
          }
          while (v10);
        }
        else
        {
          do
          {
            int v9 = (uint64_t *)v11[2];
            BOOL v12 = *v9 == (void)v11;
            unint64_t v11 = v9;
          }
          while (v12);
        }
        unint64_t v13 = v9[5];
        std::basic_string<char16_t>::size_type v14 = v5[1];
        if ((unint64_t)v14 >= v13) {
          std::basic_string<char16_t>::size_type v15 = (unsigned __int16 *)v9[5];
        }
        else {
          std::basic_string<char16_t>::size_type v15 = v5[1];
        }
        if (v15)
        {
          uint64_t v16 = *v5;
          std::basic_string<char16_t>::size_type v17 = (unsigned __int16 *)v9[4];
          while (1)
          {
            unsigned int v18 = *v17;
            unsigned int v19 = *v16;
            if (v18 < v19) {
              break;
            }
            if (v19 < v18) {
              goto LABEL_29;
            }
            ++v17;
            ++v16;
            std::basic_string<char16_t>::size_type v15 = (unsigned __int16 *)((char *)v15 - 1);
            if (!v15) {
              goto LABEL_16;
            }
          }
        }
        else
        {
LABEL_16:
          if (v13 >= (unint64_t)v14)
          {
LABEL_29:
            uint64_t v20 = v4;
            std::basic_string<char16_t>::size_type v21 = v4;
            if (!v6) {
              goto LABEL_23;
            }
            std::basic_string<char16_t>::size_type v21 = v4;
            while (2)
            {
              while (1)
              {
                uint64_t v20 = v6;
                v25 = (unsigned __int16 *)v6[5];
                std::basic_string<char16_t>::size_type v26 = v25 >= v14 ? v5[1] : v25;
                if (v26) {
                  break;
                }
LABEL_39:
                if (v14 < v25) {
                  goto LABEL_40;
                }
LABEL_42:
                if (v26)
                {
                  v32 = (unsigned __int16 *)v20[4];
                  v33 = *v5;
                  while (1)
                  {
                    unsigned int v34 = *v32;
                    unsigned int v35 = *v33;
                    if (v34 < v35) {
                      break;
                    }
                    if (v35 < v34) {
                      goto LABEL_23;
                    }
                    ++v32;
                    ++v33;
                    std::basic_string<char16_t>::size_type v26 = (unsigned __int16 *)((char *)v26 - 1);
                    if (!v26) {
                      goto LABEL_47;
                    }
                  }
                }
                else
                {
LABEL_47:
                  if (v25 >= v14) {
                    goto LABEL_23;
                  }
                }
                std::basic_string<char16_t>::size_type v21 = v20 + 1;
                size_t v6 = (uint64_t *)v20[1];
                if (!v6) {
                  goto LABEL_24;
                }
              }
              uint64_t v27 = (unsigned __int16 *)v20[4];
              char v28 = v26;
              v29 = *v5;
              while (1)
              {
                unsigned int v30 = *v29;
                unsigned int v31 = *v27;
                if (v30 < v31) {
                  break;
                }
                if (v31 < v30) {
                  goto LABEL_42;
                }
                ++v29;
                ++v27;
                char v28 = (unsigned __int16 *)((char *)v28 - 1);
                if (!v28) {
                  goto LABEL_39;
                }
              }
LABEL_40:
              size_t v6 = (uint64_t *)*v20;
              std::basic_string<char16_t>::size_type v21 = v20;
              if (!*v20) {
                goto LABEL_24;
              }
              continue;
            }
          }
        }
      }
      if (v6) {
        uint64_t v20 = v9;
      }
      else {
        uint64_t v20 = v4;
      }
      if (v6) {
        std::basic_string<char16_t>::size_type v21 = v9 + 1;
      }
      else {
        std::basic_string<char16_t>::size_type v21 = v4;
      }
LABEL_23:
      if (!*v21)
      {
LABEL_24:
        v22 = operator new(0x38uLL);
        long long v23 = *(_OWORD *)v5;
        v22[6] = v5[2];
        *((_OWORD *)v22 + 2) = v23;
        void *v22 = 0;
        v22[1] = 0;
        v22[2] = v20;
        uint64_t *v21 = (uint64_t)v22;
        unsigned __int8 v24 = (uint64_t *)**a1;
        if (v24)
        {
          *a1 = v24;
          v22 = (void *)*v21;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v22);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 3;
      if (v5 == v7) {
        return a1;
      }
      unint64_t v8 = (uint64_t **)*a1;
      size_t v6 = a1[1];
    }
  }
  return a1;
}

void sub_1D2C3956C(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*a1);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
  unint64_t v35 = 0;
  uint64_t v36 = 0;
  unsigned int v34 = 0;
  int32_t v5 = *(unsigned __int8 *)(v4 + 23);
  size_t v6 = *(const UChar **)v4;
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v8 = morphun::util::LocaleUtils::RUSSIAN((morphun::util::LocaleUtils *)v4);
  if ((v5 & 0x80u) == 0) {
    int v9 = (const UChar *)v4;
  }
  else {
    int v9 = v6;
  }
  if ((v5 & 0x80u) == 0) {
    int32_t v10 = v5;
  }
  else {
    int32_t v10 = v7;
  }
  unint64_t v11 = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::lowercase((uint64_t)&v34, v9, v10, v8);
  unint64_t v12 = HIBYTE(v36);
  if (v36 < 0) {
    unint64_t v12 = v35;
  }
  if (v12 < 2) {
    goto LABEL_10;
  }
  uint64_t v15 = 0;
  uint64_t v16 = (char *)v34;
  if (v36 >= 0) {
    uint64_t v16 = (char *)&v34;
  }
  do
  {
    int v17 = *(unsigned __int16 *)&v16[v15 * 2];
    int v18 = (unsigned __int16)word_1D2EC1664[v15];
  }
  while (v18 == v17 && v15++ != 1);
  if (v18 == v17) {
    goto LABEL_37;
  }
  uint64_t v20 = 0;
  std::basic_string<char16_t>::size_type v21 = (char *)v34;
  if (v36 >= 0) {
    std::basic_string<char16_t>::size_type v21 = (char *)&v34;
  }
  do
  {
    int v22 = *(unsigned __int16 *)&v21[v20 * 2];
    int v23 = (unsigned __int16)word_1D2EC166A[v20];
  }
  while (v23 == v22 && v20++ != 1);
  if (v23 == v22) {
    goto LABEL_37;
  }
  uint64_t v25 = 0;
  std::basic_string<char16_t>::size_type v26 = (char *)&v34;
  if (v36 < 0) {
    std::basic_string<char16_t>::size_type v26 = (char *)v34;
  }
  do
  {
    int v27 = *(unsigned __int16 *)&v26[v25 * 2];
    int v28 = (unsigned __int16)word_1D2EC1670[v25];
  }
  while (v28 == v27 && v25++ != 1);
  if (v28 == v27)
  {
LABEL_37:
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1D2EC9DE8);
    uint64_t v14 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(void *)this + 32))(this, a2, __p);
  }
  else
  {
LABEL_10:
    unint64_t v13 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::RUSSIAN(v11);
    if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v13, v4)) {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1D2EC9DE2);
    }
    else {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1D2EC9DDE);
    }
    uint64_t v14 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(void *)this + 32))(this, a2, __p);
  }
  uint64_t v30 = v14;
  if (v33 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v36) < 0) {
    operator delete(v34);
  }
  return v30;
}

void sub_1D2C39834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void std::basic_string<char16_t>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(uint64_t a1)
{
  if (a1 < 0) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(2 * a1);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E695BCB8, MEMORY[0x1E4FBA1C8]);
}

void sub_1D2C39944(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction::~RuGrammarSynthesizer_AboutPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_AboutPrepositionLookupFunction *this)
{
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(void *a1, uint64_t a2)
{
  if (a1[3] && (uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2)) != 0)
  {
    int32_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*a1 + 32);
    return v5(a1, a2, v4);
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(void *, uint64_t))(*a1 + 72);
    return v7(a1, a2);
  }
}

morphun::dialog::DefaultArticleLookupFunction *morphun::grammar::synthesis::RuGrammarSynthesizer_ArticleLookupFunction::RuGrammarSynthesizer_ArticleLookupFunction(morphun::dialog::DefaultArticleLookupFunction *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(unsigned __int8 *)(a4 + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a4 + 8);
  }
  int v9 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(a1, (const morphun::dialog::SemanticFeatureModel *)(a2 + 1), a3, v8 != 0, 1);
  uint64_t v10 = *a2;
  *(void *)int v9 = *a2;
  *(void *)((char *)a1 + *(void *)(v10 - 56)) = a2[4];
  *(void *)((char *)a1 + *(void *)(*(void *)a1 - 40)) = a2[5];
  uint64_t v11 = *(unsigned __int8 *)(a4 + 23);
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *(void *)(a4 + 8);
  }
  if (v11)
  {
    uint64_t v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, (unsigned __int16 *)a4);
    if (a3 + 16 == v12) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = *(void *)(v12 + 56);
    }
  }
  *((void *)a1 + 3) = v11;
  return a1;
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
  {
    operator new();
  }
  if (!morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_WORDS(void)::IN_WORDS_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  int v5 = *(char *)(v4 + 23);
  if (v5 >= 0) {
    size_t v6 = (unsigned __int16 *)v4;
  }
  else {
    size_t v6 = *(unsigned __int16 **)v4;
  }
  if (v5 >= 0) {
    unint64_t v7 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v7 = *(void *)(v4 + 8);
  }
  if (std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(void *)(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_WORDS(void)::IN_WORDS_+ 8), v6, v7))
  {
    goto LABEL_10;
  }
  if (v7 >= 4)
  {
    uint64_t v11 = 0;
    do
    {
      int v12 = v6[v11];
      int v13 = (unsigned __int16)word_1D2EC168A[v11];
    }
    while (v13 == v12 && v11++ != 3);
    if (v13 == v12) {
      goto LABEL_10;
    }
    uint64_t v15 = 0;
    do
    {
      int v16 = v6[v15];
      int v17 = (unsigned __int16)word_1D2EC1694[v15];
    }
    while (v17 == v16 && v15++ != 3);
    if (v17 == v16) {
      goto LABEL_10;
    }
  }
  {
    operator new();
  }
  if (!morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_FIRST_CHAR(void)::IN_FIRST_CHAR_)
  {
    uint64_t v20 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v20);
  }
  if (morphun::grammar::synthesis::RuGrammarSynthesizer::startsWith2Consonant((unsigned __int16 *)v4, *(void *)morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::IN_FIRST_CHAR(void)::IN_FIRST_CHAR_))
  {
LABEL_10:
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, ::a2);
    uint64_t v8 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(void *)this + 32))(this, a2, __p);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, a2_0);
    uint64_t v8 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(void *)this + 32))(this, a2, __p);
  }
  uint64_t v9 = v8;
  if (v22 < 0) {
    operator delete(__p[0]);
  }
  return v9;
}

void sub_1D2C39F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1D942B8B0](v14, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(uint64_t result, unsigned __int16 *a2, unint64_t a3)
{
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t result = 1;
    do
    {
      unint64_t v4 = v3[5];
      if (v4 >= a3) {
        unint64_t v5 = a3;
      }
      else {
        unint64_t v5 = v3[5];
      }
      if (v5)
      {
        size_t v6 = (unsigned __int16 *)v3[4];
        unint64_t v7 = v5;
        uint64_t v8 = a2;
        while (1)
        {
          unsigned int v9 = *v8;
          unsigned int v10 = *v6;
          if (v9 < v10) {
            break;
          }
          if (v10 < v9) {
            goto LABEL_12;
          }
          ++v8;
          ++v6;
          if (!--v7) {
            goto LABEL_11;
          }
        }
      }
      else
      {
LABEL_11:
        if (v4 <= a3)
        {
LABEL_12:
          if (v5)
          {
            uint64_t v11 = (unsigned __int16 *)v3[4];
            int v12 = a2;
            while (1)
            {
              unsigned int v13 = *v11;
              unsigned int v14 = *v12;
              if (v13 < v14) {
                break;
              }
              if (v14 < v13) {
                return result;
              }
              ++v11;
              ++v12;
              if (!--v5) {
                goto LABEL_17;
              }
            }
          }
          else
          {
LABEL_17:
            if (v4 >= a3) {
              return result;
            }
          }
          ++v3;
        }
      }
      uint64_t v3 = (void *)*v3;
    }
    while (v3);
    return 0;
  }
  return result;
}

uint64_t icu4cxx::UnicodeSet::UnicodeSet(uint64_t a1)
{
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)a1 = uset_openPatternOptions();
  return a1;
}

{
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)a1 = uset_openPattern();
  return a1;
}

void sub_1D2C3A100(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::Validate::notNull<icu4cxx::UnicodeSet>(uint64_t result)
{
  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &__dst);
  }
  return result;
}

void sub_1D2C3A198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t std::set<std::u16string_view>::set[abi:ne180100](uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = a2 + 16 * a3;
    do
    {
      std::__tree<std::u16string_view>::__emplace_hint_unique_key_args<std::u16string_view,std::u16string_view const&>((uint64_t **)a1, v4, *(unsigned __int16 **)v5, *(void *)(v5 + 8), (_OWORD *)v5);
      v5 += 16;
    }
    while (v5 != v6);
  }
  return a1;
}

void sub_1D2C3A238(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::u16string_view>::__emplace_hint_unique_key_args<std::u16string_view,std::u16string_view const&>(uint64_t **a1, void *a2, unsigned __int16 *a3, unint64_t a4, _OWORD *a5)
{
  uint64_t result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(a1, a2, &v11, &v10, a3, a4);
  if (!*result)
  {
    uint64_t v8 = (uint64_t **)result;
    unsigned int v9 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v9 + 2) = *a5;
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v11, v8, v9);
  }
  return result;
}

void *std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(void *a1, void *a2, void *a3, void *a4, unsigned __int16 *a5, unint64_t a6)
{
  if (a1 + 1 == a2) {
    goto LABEL_11;
  }
  unint64_t v6 = a2[5];
  if (v6 >= a6) {
    unint64_t v7 = a6;
  }
  else {
    unint64_t v7 = a2[5];
  }
  if (v7)
  {
    uint64_t v8 = (unsigned __int16 *)a2[4];
    unint64_t v9 = v7;
    uint64_t v10 = a5;
    do
    {
      unsigned int v11 = *v10;
      unsigned int v12 = *v8;
      if (v11 < v12) {
        goto LABEL_11;
      }
      if (v12 < v11) {
        goto LABEL_16;
      }
      ++v10;
      ++v8;
    }
    while (--v9);
  }
  if (v6 > a6)
  {
LABEL_11:
    uint64_t v13 = *a2;
    if ((void *)*a1 == a2)
    {
      uint64_t v15 = a2;
      goto LABEL_38;
    }
    if (v13)
    {
      unsigned int v14 = (void *)*a2;
      do
      {
        uint64_t v15 = v14;
        unsigned int v14 = (void *)v14[1];
      }
      while (v14);
    }
    else
    {
      char v22 = a2;
      do
      {
        uint64_t v15 = (void *)v22[2];
        BOOL v23 = *v15 == (void)v22;
        char v22 = v15;
      }
      while (v23);
    }
    unint64_t v24 = v15[5];
    if (a6 >= v24) {
      unint64_t v25 = v15[5];
    }
    else {
      unint64_t v25 = a6;
    }
    if (v25)
    {
      std::basic_string<char16_t>::size_type v26 = (unsigned __int16 *)v15[4];
      int v27 = a5;
      do
      {
        unsigned int v28 = *v26;
        unsigned int v29 = *v27;
        if (v28 < v29) {
          goto LABEL_38;
        }
        if (v29 < v28) {
          return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
        }
        ++v26;
        ++v27;
      }
      while (--v25);
    }
    if (v24 < a6)
    {
LABEL_38:
      if (v13)
      {
        *a3 = v15;
        return v15 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
  }
LABEL_16:
  if (v7)
  {
    int v16 = (unsigned __int16 *)a2[4];
    int v17 = a5;
    while (1)
    {
      unsigned int v18 = *v16;
      unsigned int v19 = *v17;
      if (v18 < v19) {
        break;
      }
      if (v19 < v18) {
        goto LABEL_41;
      }
      ++v16;
      ++v17;
      if (!--v7) {
        goto LABEL_21;
      }
    }
LABEL_22:
    uint64_t v20 = a2[1];
    if (v20)
    {
      std::basic_string<char16_t>::size_type v21 = (void *)a2[1];
      do
      {
        a4 = v21;
        std::basic_string<char16_t>::size_type v21 = (void *)*v21;
      }
      while (v21);
    }
    else
    {
      uint64_t v30 = a2;
      do
      {
        a4 = (void *)v30[2];
        BOOL v23 = *a4 == (void)v30;
        uint64_t v30 = a4;
      }
      while (!v23);
    }
    if (a4 != a1 + 1)
    {
      unint64_t v31 = a4[5];
      if (v31 >= a6) {
        unint64_t v32 = a6;
      }
      else {
        unint64_t v32 = a4[5];
      }
      if (v32)
      {
        char v33 = (unsigned __int16 *)a4[4];
        unsigned int v34 = a5;
        while (1)
        {
          unsigned int v35 = *v34;
          unsigned int v36 = *v33;
          if (v35 < v36) {
            break;
          }
          if (v36 < v35) {
            return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
          }
          ++v34;
          ++v33;
          if (!--v32) {
            goto LABEL_54;
          }
        }
      }
      else
      {
LABEL_54:
        if (v31 <= a6) {
          return std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, a3, a5, a6);
        }
      }
    }
    if (v20)
    {
      *a3 = a4;
    }
    else
    {
      *a3 = a2;
      return a2 + 1;
    }
    return a4;
  }
LABEL_21:
  if (v6 < a6) {
    goto LABEL_22;
  }
LABEL_41:
  *a3 = a2;
  *a4 = a2;
  return a4;
}

void *std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(uint64_t a1, void *a2, unsigned __int16 *a3, unint64_t a4)
{
  unint64_t v6 = *(void **)(a1 + 8);
  uint64_t result = (void *)(a1 + 8);
  uint64_t v5 = v6;
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = v5;
      unint64_t v8 = v5[5];
      uint64_t v9 = v8 >= a4 ? a4 : v8;
      if (v9) {
        break;
      }
LABEL_10:
      if (v8 <= a4)
      {
LABEL_13:
        if (v9)
        {
          uint64_t v15 = (unsigned __int16 *)v7[4];
          int v16 = a3;
          while (1)
          {
            unsigned int v17 = *v15;
            unsigned int v18 = *v16;
            if (v17 < v18) {
              break;
            }
            if (v18 < v17) {
              goto LABEL_22;
            }
            ++v15;
            ++v16;
            if (!--v9) {
              goto LABEL_18;
            }
          }
        }
        else
        {
LABEL_18:
          if (v8 >= a4) {
            goto LABEL_22;
          }
        }
        uint64_t result = v7 + 1;
        uint64_t v5 = (void *)v7[1];
        if (!v5) {
          goto LABEL_22;
        }
      }
      else
      {
LABEL_11:
        uint64_t v5 = (void *)*v7;
        uint64_t result = v7;
        if (!*v7) {
          goto LABEL_22;
        }
      }
    }
    uint64_t v10 = (unsigned __int16 *)v7[4];
    uint64_t v11 = v9;
    unsigned int v12 = a3;
    while (1)
    {
      unsigned int v13 = *v12;
      unsigned int v14 = *v10;
      if (v13 < v14) {
        goto LABEL_11;
      }
      if (v14 < v13) {
        goto LABEL_13;
      }
      ++v12;
      ++v10;
      if (!--v11) {
        goto LABEL_10;
      }
    }
  }
  unint64_t v7 = result;
LABEL_22:
  *a2 = v7;
  return result;
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction::~RuGrammarSynthesizer_InPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_InPrepositionLookupFunction *this)
{
}

uint64_t matlm_getSurfaceFormGrammemes(uint64_t a1)
{
  return *(void *)(npc<morphun::analysis::tokenattributes::LemmaMapping const>(a1) + 8);
}

uint64_t npc<morphun::analysis::tokenattributes::LemmaMapping const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C3A650(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

uint64_t matlm_getLemmaGrammemes(uint64_t a1)
{
  return *(void *)(npc<morphun::analysis::tokenattributes::LemmaMapping const>(a1) + 16);
}

CFStringRef matlm_createLemma(uint64_t a1)
{
  uint64_t v1 = npc<morphun::analysis::tokenattributes::LemmaMapping const>(a1);
  unint64_t v4 = *(const UniChar **)(v1 + 24);
  uint64_t v2 = v1 + 24;
  uint64_t v3 = v4;
  int v5 = *(char *)(v2 + 23);
  if (v5 >= 0) {
    unint64_t v6 = (const UniChar *)v2;
  }
  else {
    unint64_t v6 = v3;
  }
  if (v5 >= 0) {
    CFIndex v7 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    CFIndex v7 = *(void *)(v2 + 8);
  }
  return CFStringCreateWithCharacters(0, v6, v7);
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((void *)&v250 + 1) = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 != *(void *)(a2 + 16))
  {
    v236 = &off_1F2A09998;
    if (*(char *)(v4 + 31) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v237, *(const std::basic_string<char16_t>::value_type **)(v4 + 8), *(void *)(v4 + 16));
    }
    else
    {
      long long v8 = *(_OWORD *)(v4 + 8);
      v237.__r_.__value_.__r.__words[2] = *(void *)(v4 + 24);
      *(_OWORD *)&v237.__r_.__value_.__l.__data_ = v8;
    }
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](v238, v4 + 32);
    if (!*(void *)(a3 + 16)
      || ((v237.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? (uint64_t v9 = &v237)
        : (uint64_t v9 = (std::basic_string<char16_t> *)v237.__r_.__value_.__r.__words[0]),
          (v237.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? (int v10 = HIBYTE(v237.__r_.__value_.__r.__words[2]))
        : (int v10 = v237.__r_.__value_.__r.__words[1]),
          !morphun::util::UnicodeSetUtils::containsSome((void *)(a1[5] + 488), (uint64_t)v9, v10)
       || ((v237.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? (uint64_t v11 = &v237)
         : (uint64_t v11 = (std::basic_string<char16_t> *)v237.__r_.__value_.__r.__words[0]),
           (v237.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? (int v12 = HIBYTE(v237.__r_.__value_.__r.__words[2]))
         : (int v12 = v237.__r_.__value_.__r.__words[1]),
           morphun::util::UnicodeSetUtils::containsSome(a1 + 6, (uint64_t)v11, v12))))
    {
      operator new();
    }
    morphun::grammar::synthesis::getFeatureValue(&v235, a3, a1[8]);
    morphun::grammar::synthesis::getFeatureValue(&v234, a3, a1[9]);
    morphun::grammar::synthesis::getFeatureValue(&v233, a3, a1[10]);
    morphun::grammar::synthesis::getFeatureValue(&v232, a3, a1[11]);
    morphun::grammar::synthesis::getFeatureValue(&v231, a3, a1[12]);
    std::basic_string<char16_t>::size_type size = HIBYTE(v235.__r_.__value_.__r.__words[2]);
    if ((v235.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v235.__r_.__value_.__l.__size_;
    }
    if (!size)
    {
      char v22 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v14);
      goto LABEL_59;
    }
    uint64_t v16 = morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE(v14);
    std::basic_string<char16_t>::size_type v17 = HIBYTE(v235.__r_.__value_.__r.__words[2]);
    if ((v235.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v17 = v235.__r_.__value_.__l.__size_;
    }
    uint64_t v18 = *(unsigned __int8 *)(v16 + 23);
    int v19 = (char)v18;
    if ((v18 & 0x80u) != 0) {
      uint64_t v18 = *(void *)(v16 + 8);
    }
    if (v17 == v18)
    {
      if (!v17)
      {
LABEL_38:
        char v22 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL((morphun::grammar::synthesis::GrammemeConstants *)v16);
        goto LABEL_59;
      }
      if (v19 >= 0) {
        uint64_t v20 = (unsigned __int16 *)v16;
      }
      else {
        uint64_t v20 = *(unsigned __int16 **)v16;
      }
      std::basic_string<char16_t>::size_type v21 = &v235;
      if ((v235.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v21 = (std::basic_string<char16_t> *)v235.__r_.__value_.__r.__words[0];
      }
      while (*v20 == (unsigned __int16)v21->__r_.__value_.__s.__data_[0])
      {
        std::basic_string<char16_t>::size_type v21 = (std::basic_string<char16_t> *)((char *)v21 + 2);
        ++v20;
        if (!--v17) {
          goto LABEL_38;
        }
      }
    }
    uint64_t v23 = morphun::grammar::synthesis::GrammemeConstants::CASE_LOCATIVE((morphun::grammar::synthesis::GrammemeConstants *)v16);
    std::basic_string<char16_t>::size_type v24 = v235.__r_.__value_.__l.__size_;
    if ((v235.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v24 = HIBYTE(v235.__r_.__value_.__r.__words[2]);
    }
    uint64_t v25 = *(unsigned __int8 *)(v23 + 23);
    int v26 = (char)v25;
    if ((v25 & 0x80u) != 0) {
      uint64_t v25 = *(void *)(v23 + 8);
    }
    if (v24 != v25) {
      goto LABEL_60;
    }
    if (v24)
    {
      if (v26 >= 0) {
        int v27 = (unsigned __int16 *)v23;
      }
      else {
        int v27 = *(unsigned __int16 **)v23;
      }
      unsigned int v28 = &v235;
      if ((v235.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        unsigned int v28 = (std::basic_string<char16_t> *)v235.__r_.__value_.__r.__words[0];
      }
      std::basic_string<char16_t>::size_type v29 = v24 - 1;
      do
      {
        int v31 = (unsigned __int16)v28->__r_.__value_.__s.__data_[0];
        unsigned int v28 = (std::basic_string<char16_t> *)((char *)v28 + 2);
        int v30 = v31;
        int v33 = *v27++;
        int v32 = v33;
        BOOL v200 = v29-- != 0;
        char v34 = v200;
      }
      while (v32 == v30 && (v34 & 1) != 0);
      if (v32 != v30) {
        goto LABEL_60;
      }
    }
    char v22 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL((morphun::grammar::synthesis::GrammemeConstants *)v23);
LABEL_59:
    std::basic_string<char16_t>::operator=(&v235, v22);
LABEL_60:
    memset(&v230, 0, sizeof(v230));
    uint64_t v35 = npc<morphun::Tokenizer>(a1[1]);
    unsigned int v36 = (void *)(*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v35 + 24))(v35, &v237);
    npc<morphun::TokenChain>((uint64_t)v36);
    int v37 = a4 ^ 1;
    long long v38 = *(_OWORD *)(v36 + 1);
    uint64_t v39 = v36[2];
    if (v39) {
      uint64_t v40 = *(void *)(v39 + 80);
    }
    else {
      uint64_t v40 = 0;
    }
    while (1)
    {
      uint64_t v225 = *((void *)&v38 + 1);
      uint64_t v41 = v38;
      if (v40 == (void)v38) {
        goto LABEL_68;
      }
      if (*(unsigned char *)(v38 + 64) && !uset_containsAllCodePoints()) {
        break;
      }
      npc<morphun::Token const>(v41);
      *((void *)&v38 + 1) = v225;
      *(void *)&long long v38 = *(void *)(v41 + 80);
    }
    int v37 = 1;
LABEL_68:
    if ((*(int (**)(void *))(*v36 + 32))(v36) > 6) {
      int v42 = 1;
    }
    else {
      int v42 = v37;
    }
    CombinedBinaryType = (morphun::util::LocaleUtils *)(*(uint64_t (**)(void *))(*v36 + 32))(v36);
    uint64_t v44 = v36[2];
    if (v44) {
      uint64_t v45 = *(void *)(v44 + 80);
    }
    else {
      uint64_t v45 = 0;
    }
    if (CombinedBinaryType == 1) {
      int v46 = 1;
    }
    else {
      int v46 = v42;
    }
    v229[0] = v45;
    v229[1] = v44;
    if (v46 == 1)
    {
      int v222 = v42;
      while (1)
      {
        if (v229[0] == v36[1] || (morphun::TokenIterator::operator--(v229), uint64_t v47 = v229[0], v229[0] == v36[1]))
        {
          char v121 = HIBYTE(v230.__r_.__value_.__r.__words[2]);
          goto LABEL_508;
        }
        if (*(char *)(v229[0] + 39) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v228, *(const std::basic_string<char16_t>::value_type **)(v229[0] + 16), *(void *)(v229[0] + 24));
          uint64_t v47 = v229[0];
        }
        else
        {
          std::basic_string<char16_t> v228 = *(std::basic_string<char16_t> *)(v229[0] + 16);
        }
        uint64_t v48 = *(void *)(v47 + 72);
        if (!v48)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        v49 = (void *)(v48 + 16);
        int v50 = *(char *)(v48 + 39);
        if (v50 < 0)
        {
          if (*(void *)(v48 + 24) != 1) {
            goto LABEL_105;
          }
          v49 = (void *)*v49;
        }
        else if (v50 != 1)
        {
          goto LABEL_105;
        }
        if (*(_WORD *)v49 == 45)
        {
          morphun::TokenIterator::operator--(v229);
          int v52 = *(char *)(v229[0] + 39);
          std::basic_string<char16_t>::size_type v53 = v52 >= 0 ? v229[0] + 16 : *(void *)(v229[0] + 16);
          v54 = v52 >= 0
              ? (const std::basic_string<char16_t>::value_type *)*(unsigned __int8 *)(v229[0] + 39)
              : *(const std::basic_string<char16_t>::value_type **)(v229[0] + 24);
          std::basic_string<char16_t>::insert(&v228, v53, v54, v51);
          if (v229[0] != v36[1])
          {
            morphun::TokenIterator::operator--(v229);
            int v56 = *(char *)(v229[0] + 39);
            if (v56 >= 0) {
              std::basic_string<char16_t>::size_type v57 = v229[0] + 16;
            }
            else {
              std::basic_string<char16_t>::size_type v57 = *(void *)(v229[0] + 16);
            }
            if (v56 >= 0) {
              v58 = (const std::basic_string<char16_t>::value_type *)*(unsigned __int8 *)(v229[0] + 39);
            }
            else {
              v58 = *(const std::basic_string<char16_t>::value_type **)(v229[0] + 24);
            }
            std::basic_string<char16_t>::insert(&v228, v57, v58, v55);
          }
        }
LABEL_105:
        v59 = (void *)a1[5];
        uint64_t v60 = v59[1];
        if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v61 = &v228;
        }
        else {
          v61 = (std::basic_string<char16_t> *)v228.__r_.__value_.__r.__words[0];
        }
        if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v62 = HIBYTE(v228.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v62 = v228.__r_.__value_.__l.__size_;
        }
        if ((morphun::analysis::stemmer::RussianExposableMorphology::isInflectable(a1[5], (unsigned __int16 *)v61, v62) & 1) == 0)
        {
          if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0) {
            std::basic_string<char16_t>::__init_copy_ctor_external(&v226, v228.__r_.__value_.__l.__data_, v228.__r_.__value_.__l.__size_);
          }
          else {
            std::basic_string<char16_t> v226 = v228;
          }
          char v227 = 1;
LABEL_203:
          v91 = (const std::basic_string<char16_t>::value_type *)HIBYTE(v226.__r_.__value_.__r.__words[2]);
          std::basic_string<char16_t>::size_type v92 = v226.__r_.__value_.__l.__size_;
          BOOL v93 = (v226.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
          if ((v226.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v94 = &v226;
          }
          else {
            v94 = (std::basic_string<char16_t> *)v226.__r_.__value_.__r.__words[0];
          }
LABEL_206:
          if (v93) {
            v95 = (const std::basic_string<char16_t>::value_type *)v92;
          }
          else {
            v95 = v91;
          }
          CombinedBinaryType = (morphun::util::LocaleUtils *)std::basic_string<char16_t>::insert(&v230, (std::basic_string<char16_t>::size_type)v94, v95, v63);
          char v96 = 0;
          if (v227 && SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v226.__r_.__value_.__l.__data_);
            char v96 = 0;
          }
          goto LABEL_217;
        }
        uint64_t v243 = 0;
        if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v64 = &v228;
        }
        else {
          v64 = (std::basic_string<char16_t> *)v228.__r_.__value_.__r.__words[0];
        }
        if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v65 = HIBYTE(v228.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v65 = v228.__r_.__value_.__l.__size_;
        }
        CombinedBinaryType = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v60, (uint64_t)&v243, (const UChar *)v64, v65);
        if (!v243
          || ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? (v66 = &v228)
            : (v66 = (std::basic_string<char16_t> *)v228.__r_.__value_.__r.__words[0]),
              (v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? (int v67 = HIBYTE(v228.__r_.__value_.__r.__words[2]))
            : (int v67 = v228.__r_.__value_.__r.__words[1]),
              (int v68 = morphun::util::StringViewUtils::codePointAt((uint64_t)v66, v67, 0),
               CombinedBinaryType = (morphun::util::LocaleUtils *)MEMORY[0x1D942BD30](),
               v68 == CombinedBinaryType)
           && (v59[44] & ~v243) != 0
           && (v59[43] & ~v243) != 0))
        {
          LOBYTE(v226.__r_.__value_.__l.__data_) = 0;
          char v227 = 0;
          goto LABEL_212;
        }
        if ((v59[43] & ~v243) == 0 || (uint64_t v69 = v59[49] & v243, v69 == v59[48]) || v69 == v59[45])
        {
          BOOL v70 = 0;
        }
        else
        {
          if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) < 0)
          {
            if (v231.__r_.__value_.__l.__size_ == 11)
            {
              v97 = (std::basic_string<char16_t> *)v231.__r_.__value_.__r.__words[0];
LABEL_229:
              uint64_t v98 = 0;
              do
              {
                int v99 = (unsigned __int16)v97->__r_.__value_.__s.__data_[v98];
                int v100 = (unsigned __int16)aProperNoun[v98];
                BOOL v70 = v100 != v99;
              }
              while (v100 == v99 && v98++ != 10);
              goto LABEL_132;
            }
          }
          else if (SHIBYTE(v231.__r_.__value_.__r.__words[2]) == 11)
          {
            v97 = &v231;
            goto LABEL_229;
          }
          BOOL v70 = 1;
        }
LABEL_132:
        memset(&v245, 0, sizeof(v245));
        int32_t v71 = HIBYTE(v228.__r_.__value_.__r.__words[2]);
        long long v72 = *(_OWORD *)&v228.__r_.__value_.__l.__data_;
        uint64_t v73 = morphun::util::LocaleUtils::RUSSIAN(CombinedBinaryType);
        if ((v71 & 0x80u) == 0) {
          v74 = &v228;
        }
        else {
          v74 = (std::basic_string<char16_t> *)v72;
        }
        if ((v71 & 0x80u) == 0) {
          int32_t v75 = v71;
        }
        else {
          int32_t v75 = DWORD2(v72);
        }
        morphun::util::StringViewUtils::lowercase((uint64_t)&v245, (const UChar *)v74, v75, v73);
        if ((v245.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v76 = &v245;
        }
        else {
          v76 = (std::basic_string<char16_t> *)v245.__r_.__value_.__r.__words[0];
        }
        if ((v245.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v77 = HIBYTE(v245.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v77 = v245.__r_.__value_.__l.__size_;
        }
        if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v246, v235.__r_.__value_.__l.__data_, v235.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v246 = v235;
        }
        if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v247, v234.__r_.__value_.__l.__data_, v234.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v247 = v234;
        }
        if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v248, v233.__r_.__value_.__l.__data_, v233.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v248 = v233;
        }
        if (SHIBYTE(v232.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v249, v232.__r_.__value_.__l.__data_, v232.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v249 = v232;
        }
        memset(&__str, 0, sizeof(__str));
        v239.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
        LOBYTE(v239.__r_.__value_.__r.__words[1]) = 0;
        __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x60uLL);
        __str.__r_.__value_.__l.__size_ = __str.__r_.__value_.__r.__words[0];
        __str.__r_.__value_.__r.__words[2] = __str.__r_.__value_.__r.__words[0] + 96;
        __str.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__str.__r_.__value_.__r.__words[2], (long long *)&v246, &v250, (std::basic_string<char16_t> *)__str.__r_.__value_.__l.__data_);
        memset(&v239, 0, sizeof(v239));
        morphun::dialog::DictionaryLookupInflector::inflectWord((uint64_t)&__p, (uint64_t)v59, v76, v77, &__str, &v239);
        v244 = &v239;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v244);
        v239.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v239);
        uint64_t v78 = 0;
        int v42 = v222;
        do
        {
          if (SHIBYTE(v249.__r_.__value_.__r.__words[v78 + 2]) < 0) {
            operator delete(*(void **)((char *)&v249.__r_.__value_.__l.__data_ + v78 * 8));
          }
          v78 -= 3;
        }
        while (v78 != -12);
        memset(&v246, 0, sizeof(v246));
        if (v242) {
          char v79 = 1;
        }
        else {
          char v79 = v70;
        }
        if (v79)
        {
          if (v242) {
            p_p = (std::basic_string<char16_t> *)&__p;
          }
          else {
            p_p = &v228;
          }
          std::basic_string<char16_t>::operator=(&v246, p_p);
          if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v81 = &v228;
          }
          else {
            v81 = (std::basic_string<char16_t> *)v228.__r_.__value_.__r.__words[0];
          }
          std::basic_string<char16_t>::value_type v82 = v81->__r_.__value_.__s.__data_[0];
          if ((v246.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v83 = &v246;
          }
          else {
            v83 = (std::basic_string<char16_t> *)v246.__r_.__value_.__r.__words[0];
          }
          v83->__r_.__value_.__s.__data_[0] = v82;
          if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v84 = &v228;
          }
          else {
            v84 = (std::basic_string<char16_t> *)v228.__r_.__value_.__r.__words[0];
          }
          if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v85 = HIBYTE(v228.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v85 = v228.__r_.__value_.__l.__size_;
          }
          CombinedBinaryType = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v84, v85);
          if (CombinedBinaryType)
          {
            memset(&__str, 0, sizeof(__str));
            int32_t v86 = HIBYTE(v246.__r_.__value_.__r.__words[2]);
            long long v87 = *(_OWORD *)&v246.__r_.__value_.__l.__data_;
            uint64_t v88 = morphun::util::LocaleUtils::RUSSIAN(CombinedBinaryType);
            if ((v86 & 0x80u) == 0) {
              v89 = &v246;
            }
            else {
              v89 = (std::basic_string<char16_t> *)v87;
            }
            if ((v86 & 0x80u) == 0) {
              int32_t v90 = v86;
            }
            else {
              int32_t v90 = DWORD2(v87);
            }
            morphun::util::StringViewUtils::uppercase((uint64_t)&__str, (const UChar *)v89, v90, v88);
            CombinedBinaryType = (morphun::util::LocaleUtils *)std::basic_string<char16_t>::operator=(&v246, &__str);
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__str.__r_.__value_.__l.__data_);
            }
            int v42 = v222;
          }
          if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(&v226, v246.__r_.__value_.__l.__data_, v246.__r_.__value_.__l.__size_);
            char v227 = 1;
            if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v246.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            std::basic_string<char16_t> v226 = v246;
            char v227 = 1;
          }
        }
        else
        {
          LOBYTE(v226.__r_.__value_.__l.__data_) = 0;
          char v227 = 0;
        }
        if (v242 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v245.__r_.__value_.__l.__data_);
        }
        if (v227) {
          goto LABEL_203;
        }
LABEL_212:
        if (v42)
        {
          v91 = (const std::basic_string<char16_t>::value_type *)HIBYTE(v228.__r_.__value_.__r.__words[2]);
          std::basic_string<char16_t>::size_type v92 = v228.__r_.__value_.__l.__size_;
          BOOL v93 = (v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
          if ((v228.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v94 = &v228;
          }
          else {
            v94 = (std::basic_string<char16_t> *)v228.__r_.__value_.__r.__words[0];
          }
          goto LABEL_206;
        }
        char v96 = 1;
LABEL_217:
        if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v228.__r_.__value_.__l.__data_);
          if (v96) {
            break;
          }
        }
        else if (v96)
        {
          break;
        }
      }
    }
    v102 = &v235;
    if ((v235.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      v102 = (std::basic_string<char16_t> *)v235.__r_.__value_.__r.__words[0];
    }
    v221 = v102;
    if ((v235.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v103 = HIBYTE(v235.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v103 = v235.__r_.__value_.__l.__size_;
    }
    if ((v234.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v104 = &v234;
    }
    else {
      v104 = (std::basic_string<char16_t> *)v234.__r_.__value_.__r.__words[0];
    }
    if ((v234.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v105 = HIBYTE(v234.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v105 = v234.__r_.__value_.__l.__size_;
    }
    if ((v233.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v106 = &v233;
    }
    else {
      v106 = (std::basic_string<char16_t> *)v233.__r_.__value_.__r.__words[0];
    }
    if ((v233.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v107 = HIBYTE(v233.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v107 = v233.__r_.__value_.__l.__size_;
    }
    if ((v232.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v108 = &v232;
    }
    else {
      v108 = (std::basic_string<char16_t> *)v232.__r_.__value_.__r.__words[0];
    }
    if ((v232.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v109 = HIBYTE(v232.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v109 = v232.__r_.__value_.__l.__size_;
    }
    memset(&v226, 0, sizeof(v226));
    memset(&v245, 0, sizeof(v245));
    v220 = (std::basic_string<char16_t> *)HIBYTE(v237.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type v218 = v237.__r_.__value_.__l.__size_;
    v219 = (std::basic_string<char16_t> *)v237.__r_.__value_.__r.__words[0];
    uint64_t v110 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(CombinedBinaryType);
    uint64_t v111 = *(unsigned __int8 *)(v110 + 23);
    int v112 = (char)v111;
    if ((v111 & 0x80u) != 0) {
      uint64_t v111 = *(void *)(v110 + 8);
    }
    if (v103 == v111)
    {
      if (!v103) {
        goto LABEL_336;
      }
      if (v112 >= 0) {
        v113 = (unsigned __int16 *)v110;
      }
      else {
        v113 = *(unsigned __int16 **)v110;
      }
      std::basic_string<char16_t>::size_type v114 = v103;
      v115 = v221;
      while (*v113 == (unsigned __int16)v115->__r_.__value_.__s.__data_[0])
      {
        v115 = (std::basic_string<char16_t> *)((char *)v115 + 2);
        ++v113;
        if (!--v114) {
          goto LABEL_336;
        }
      }
    }
    uint64_t v110 = morphun::grammar::synthesis::GrammemeConstants::CASE_DATIVE((morphun::grammar::synthesis::GrammemeConstants *)v110);
    uint64_t v116 = *(unsigned __int8 *)(v110 + 23);
    int v117 = (char)v116;
    if ((v116 & 0x80u) != 0) {
      uint64_t v116 = *(void *)(v110 + 8);
    }
    if (v103 == v116)
    {
      if (!v103) {
        goto LABEL_336;
      }
      if (v117 >= 0) {
        v118 = (unsigned __int16 *)v110;
      }
      else {
        v118 = *(unsigned __int16 **)v110;
      }
      std::basic_string<char16_t>::size_type v119 = v103;
      v120 = v221;
      while (*v118 == (unsigned __int16)v120->__r_.__value_.__s.__data_[0])
      {
        v120 = (std::basic_string<char16_t> *)((char *)v120 + 2);
        ++v118;
        if (!--v119) {
          goto LABEL_336;
        }
      }
    }
    uint64_t v110 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v110);
    uint64_t v122 = *(unsigned __int8 *)(v110 + 23);
    int v123 = (char)v122;
    if ((v122 & 0x80u) != 0) {
      uint64_t v122 = *(void *)(v110 + 8);
    }
    if (v103 == v122)
    {
      if (!v103) {
        goto LABEL_336;
      }
      if (v123 >= 0) {
        v124 = (unsigned __int16 *)v110;
      }
      else {
        v124 = *(unsigned __int16 **)v110;
      }
      std::basic_string<char16_t>::size_type v125 = v103;
      v126 = v221;
      while (*v124 == (unsigned __int16)v126->__r_.__value_.__s.__data_[0])
      {
        v126 = (std::basic_string<char16_t> *)((char *)v126 + 2);
        ++v124;
        if (!--v125) {
          goto LABEL_336;
        }
      }
    }
    uint64_t v110 = morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL((morphun::grammar::synthesis::GrammemeConstants *)v110);
    uint64_t v127 = *(unsigned __int8 *)(v110 + 23);
    int v128 = (char)v127;
    if ((v127 & 0x80u) != 0) {
      uint64_t v127 = *(void *)(v110 + 8);
    }
    if (v103 == v127)
    {
      if (!v103) {
        goto LABEL_336;
      }
      if (v128 >= 0) {
        v129 = (unsigned __int16 *)v110;
      }
      else {
        v129 = *(unsigned __int16 **)v110;
      }
      std::basic_string<char16_t>::size_type v130 = v103;
      v131 = v221;
      while (*v129 == (unsigned __int16)v131->__r_.__value_.__s.__data_[0])
      {
        v131 = (std::basic_string<char16_t> *)((char *)v131 + 2);
        ++v129;
        if (!--v130) {
          goto LABEL_336;
        }
      }
    }
    uint64_t v110 = morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v110);
    uint64_t v132 = *(unsigned __int8 *)(v110 + 23);
    int v133 = (char)v132;
    if ((v132 & 0x80u) != 0) {
      uint64_t v132 = *(void *)(v110 + 8);
    }
    if (v103 == v132)
    {
      if (!v103) {
        goto LABEL_336;
      }
      if (v133 >= 0) {
        v134 = (unsigned __int16 *)v110;
      }
      else {
        v134 = *(unsigned __int16 **)v110;
      }
      std::basic_string<char16_t>::size_type v135 = v103;
      v136 = v221;
      while (*v134 == (unsigned __int16)v136->__r_.__value_.__s.__data_[0])
      {
        v136 = (std::basic_string<char16_t> *)((char *)v136 + 2);
        ++v134;
        if (!--v135) {
          goto LABEL_336;
        }
      }
    }
    uint64_t v110 = morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL((morphun::grammar::synthesis::GrammemeConstants *)v110);
    uint64_t v137 = *(unsigned __int8 *)(v110 + 23);
    int v138 = (char)v137;
    if ((v137 & 0x80u) != 0) {
      uint64_t v137 = *(void *)(v110 + 8);
    }
    if (v103 == v137)
    {
      if (!v103) {
        goto LABEL_336;
      }
      if (v138 >= 0) {
        v139 = (unsigned __int16 *)v110;
      }
      else {
        v139 = *(unsigned __int16 **)v110;
      }
      std::basic_string<char16_t>::size_type v140 = v103;
      v141 = v221;
      while (*v139 == (unsigned __int16)v141->__r_.__value_.__s.__data_[0])
      {
        v141 = (std::basic_string<char16_t> *)((char *)v141 + 2);
        ++v139;
        if (!--v140) {
          goto LABEL_336;
        }
      }
    }
    uint64_t v110 = morphun::grammar::synthesis::GrammemeConstants::CASE_LOCATIVE((morphun::grammar::synthesis::GrammemeConstants *)v110);
    uint64_t v142 = *(unsigned __int8 *)(v110 + 23);
    int v143 = (char)v142;
    if ((v142 & 0x80u) != 0) {
      uint64_t v142 = *(void *)(v110 + 8);
    }
    if (v103 == v142 && v103)
    {
      if (v143 >= 0) {
        v144 = (unsigned __int16 *)v110;
      }
      else {
        v144 = *(unsigned __int16 **)v110;
      }
      do
      {
        if (*v144 != (unsigned __int16)v221->__r_.__value_.__s.__data_[0]) {
          break;
        }
        v221 = (std::basic_string<char16_t> *)((char *)v221 + 2);
        ++v144;
        --v103;
      }
      while (v103);
    }
LABEL_336:
    uint64_t v145 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v110);
    uint64_t v146 = *(unsigned __int8 *)(v145 + 23);
    int v147 = (char)v146;
    if ((v146 & 0x80u) != 0) {
      uint64_t v146 = *(void *)(v145 + 8);
    }
    if (v105 == v146)
    {
      if (!v105) {
        goto LABEL_356;
      }
      if (v147 >= 0) {
        v148 = (unsigned __int16 *)v145;
      }
      else {
        v148 = *(unsigned __int16 **)v145;
      }
      std::basic_string<char16_t>::size_type v149 = v105;
      v150 = v104;
      while (*v148 == (unsigned __int16)v150->__r_.__value_.__s.__data_[0])
      {
        v150 = (std::basic_string<char16_t> *)((char *)v150 + 2);
        ++v148;
        if (!--v149) {
          goto LABEL_356;
        }
      }
    }
    uint64_t v145 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v145);
    uint64_t v151 = *(unsigned __int8 *)(v145 + 23);
    int v152 = (char)v151;
    if ((v151 & 0x80u) != 0) {
      uint64_t v151 = *(void *)(v145 + 8);
    }
    if (v105 == v151 && v105)
    {
      if (v152 >= 0) {
        v153 = (unsigned __int16 *)v145;
      }
      else {
        v153 = *(unsigned __int16 **)v145;
      }
      do
      {
        if (*v153 != (unsigned __int16)v104->__r_.__value_.__s.__data_[0]) {
          break;
        }
        v104 = (std::basic_string<char16_t> *)((char *)v104 + 2);
        ++v153;
        --v105;
      }
      while (v105);
    }
LABEL_356:
    uint64_t v154 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v145);
    uint64_t v155 = *(unsigned __int8 *)(v154 + 23);
    int v156 = (char)v155;
    if ((v155 & 0x80u) != 0) {
      uint64_t v155 = *(void *)(v154 + 8);
    }
    if (v107 == v155)
    {
      if (!v107) {
        goto LABEL_387;
      }
      if (v156 >= 0) {
        v157 = (unsigned __int16 *)v154;
      }
      else {
        v157 = *(unsigned __int16 **)v154;
      }
      std::basic_string<char16_t>::size_type v158 = v107;
      v159 = v106;
      while (*v157 == (unsigned __int16)v159->__r_.__value_.__s.__data_[0])
      {
        v159 = (std::basic_string<char16_t> *)((char *)v159 + 2);
        ++v157;
        if (!--v158) {
          goto LABEL_387;
        }
      }
    }
    uint64_t v154 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v154);
    uint64_t v160 = *(unsigned __int8 *)(v154 + 23);
    int v161 = (char)v160;
    if ((v160 & 0x80u) != 0) {
      uint64_t v160 = *(void *)(v154 + 8);
    }
    if (v107 == v160)
    {
      if (!v107) {
        goto LABEL_387;
      }
      if (v161 >= 0) {
        v162 = (unsigned __int16 *)v154;
      }
      else {
        v162 = *(unsigned __int16 **)v154;
      }
      std::basic_string<char16_t>::size_type v163 = v107;
      v164 = v106;
      while (*v162 == (unsigned __int16)v164->__r_.__value_.__s.__data_[0])
      {
        v164 = (std::basic_string<char16_t> *)((char *)v164 + 2);
        ++v162;
        if (!--v163) {
          goto LABEL_387;
        }
      }
    }
    uint64_t v154 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v154);
    uint64_t v165 = *(unsigned __int8 *)(v154 + 23);
    int v166 = (char)v165;
    if ((v165 & 0x80u) != 0) {
      uint64_t v165 = *(void *)(v154 + 8);
    }
    if (v107 == v165 && v107)
    {
      if (v166 >= 0) {
        v167 = (unsigned __int16 *)v154;
      }
      else {
        v167 = *(unsigned __int16 **)v154;
      }
      do
      {
        if (*v167 != (unsigned __int16)v106->__r_.__value_.__s.__data_[0]) {
          break;
        }
        v106 = (std::basic_string<char16_t> *)((char *)v106 + 2);
        ++v167;
        --v107;
      }
      while (v107);
    }
LABEL_387:
    uint64_t v168 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_ANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v154);
    uint64_t v169 = *(unsigned __int8 *)(v168 + 23);
    int v170 = (char)v169;
    if ((v169 & 0x80u) != 0) {
      uint64_t v169 = *(void *)(v168 + 8);
    }
    if (v109 == v169)
    {
      if (!v109) {
        goto LABEL_407;
      }
      if (v170 >= 0) {
        v171 = (unsigned __int16 *)v168;
      }
      else {
        v171 = *(unsigned __int16 **)v168;
      }
      std::basic_string<char16_t>::size_type v172 = v109;
      v173 = v108;
      while (*v171 == (unsigned __int16)v173->__r_.__value_.__s.__data_[0])
      {
        v173 = (std::basic_string<char16_t> *)((char *)v173 + 2);
        ++v171;
        if (!--v172) {
          goto LABEL_407;
        }
      }
    }
    uint64_t v174 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v168);
    uint64_t v175 = *(unsigned __int8 *)(v174 + 23);
    int v176 = (char)v175;
    if ((v175 & 0x80u) != 0) {
      uint64_t v175 = *(void *)(v174 + 8);
    }
    if (v109 == v175 && v109)
    {
      if (v176 >= 0) {
        v177 = (unsigned __int16 *)v174;
      }
      else {
        v177 = *(unsigned __int16 **)v174;
      }
      do
      {
        if (*v177 != (unsigned __int16)v108->__r_.__value_.__s.__data_[0]) {
          break;
        }
        v108 = (std::basic_string<char16_t> *)((char *)v108 + 2);
        ++v177;
        --v109;
      }
      while (v109);
    }
LABEL_407:
    if ((char)v220 >= 0) {
      v178 = &v237;
    }
    else {
      v178 = v219;
    }
    if ((char)v220 >= 0) {
      std::basic_string<char16_t>::size_type v179 = (std::basic_string<char16_t>::size_type)v220;
    }
    else {
      std::basic_string<char16_t>::size_type v179 = v218;
    }
    if (!v179 || !a1[3]) {
      goto LABEL_493;
    }
    uint64_t v180 = a1[4];
    if (!v180)
    {
      v216 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v216);
    }
    (*(void (**)(std::basic_string<char16_t> *__return_ptr))(*(void *)v180 + 24))(&v246);
    memset(&__p, 0, sizeof(__p));
    unsigned int v181 = (unsigned __int16)v178->__r_.__value_.__s.__data_[0];
    uint64_t v182 = 2;
    uint64_t v183 = 3;
    uint64_t v184 = 3;
    if (v181 < 0xE000) {
      uint64_t v184 = 0;
    }
    if (v181 >> 11 >= 0x1B) {
      uint64_t v183 = v184;
    }
    if (v181 >= 0x800) {
      uint64_t v182 = v183;
    }
    if (v181 >= 0x80) {
      uint64_t v185 = v182;
    }
    else {
      uint64_t v185 = 1;
    }
    std::basic_string<char16_t>::size_type v186 = HIBYTE(v246.__r_.__value_.__r.__words[2]);
    if ((v246.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v186 = v246.__r_.__value_.__l.__size_;
    }
    std::string::reserve(&__p, v186 + v185 * v179 + 1);
    morphun::util::StringViewUtils::convert(&__p, (uint64_t)v178, v179);
    std::string::push_back(&__p, 32);
    if ((v246.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v187 = &v246;
    }
    else {
      v187 = (std::basic_string<char16_t> *)v246.__r_.__value_.__r.__words[0];
    }
    if ((v246.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v188 = HIBYTE(v246.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v188 = v246.__r_.__value_.__l.__size_;
    }
    std::string::append(&__p, (const std::string::value_type *)v187, v188);
    {
      operator new();
    }
    v189 = (std::mutex *)morphun::grammar::ml::Inflector::inflect(std::u16string_view,std::basic_string<char16_t> *,long long)const::mutex;
    if (!morphun::grammar::ml::Inflector::inflect(std::u16string_view,std::basic_string<char16_t> *,long long)const::mutex)
    {
      v217 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v217);
    }
    std::mutex::lock((std::mutex *)morphun::grammar::ml::Inflector::inflect(std::u16string_view,std::basic_string<char16_t> *,long long)const::mutex);
    v190 = (char *)QuasarCPDecTranslator_translate();
    std::mutex::unlock(v189);
    if (v190)
    {
      int32_t v191 = strlen(v190);
      morphun::util::StringViewUtils::convert((uint64_t)&v245, v190, v191);
      free(v190);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v246.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v246.__r_.__value_.__l.__data_);
    }
    if (v190)
    {
      uint64_t v192 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1[1] + 24))(a1[1], &v245);
      npc<morphun::TokenChain>(v192);
      int v193 = (*(uint64_t (**)(void *))(*v36 + 40))(v36);
      if (v193 == (*(unsigned int (**)(uint64_t))(*(void *)v192 + 40))(v192))
      {
        long long v223 = *(_OWORD *)(v192 + 8);
        long long v224 = *(_OWORD *)(v36 + 1);
        uint64_t v194 = *((void *)&v224 + 1);
        if (!*((void *)&v224 + 1)) {
          goto LABEL_445;
        }
LABEL_444:
        uint64_t v194 = *(void *)(v194 + 80);
LABEL_445:
        while (v194 != (void)v224)
        {
          if (*(_DWORD *)(v224 + 12) != *(_DWORD *)(v224 + 8) || *(_DWORD *)(v223 + 12) != *(_DWORD *)(v223 + 8))
          {
            v195 = *(unsigned __int16 **)(v224 + 16);
            if (*(char *)(v224 + 39) < 0)
            {
              unint64_t v196 = *(void *)(v224 + 24);
            }
            else
            {
              v195 = (unsigned __int16 *)(v224 + 16);
              unint64_t v196 = *(unsigned __int8 *)(v224 + 39);
            }
            v197 = *(unsigned __int16 **)(v223 + 16);
            if (*(char *)(v223 + 39) < 0)
            {
              unint64_t v198 = *(void *)(v223 + 24);
            }
            else
            {
              v197 = (unsigned __int16 *)(v223 + 16);
              unint64_t v198 = *(unsigned __int8 *)(v223 + 39);
            }
            unint64_t v199 = v196 - 3;
            BOOL v200 = v196 >= 3 && v198 >= 3;
            if (v200 && (v198 < v199 || v198 > v196 + 3)) {
              goto LABEL_496;
            }
            if (v196 >= 4 && v198 >= 4)
            {
              if (v196 >= v199) {
                unint64_t v204 = v196 - 3;
              }
              else {
                unint64_t v204 = v196;
              }
              if (v198 < v199) {
                unint64_t v199 = v198;
              }
              if (v199 >= v204) {
                unint64_t v205 = v204;
              }
              else {
                unint64_t v205 = v199;
              }
              if (v205)
              {
                while (*v197 == *v195)
                {
                  ++v195;
                  ++v197;
                  if (!--v205) {
                    goto LABEL_483;
                  }
                }
LABEL_496:
                memset(&__str, 0, sizeof(__str));
                (*(void (**)(uint64_t))(*(void *)v192 + 16))(v192);
LABEL_500:
                if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
                {
                  operator delete(v245.__r_.__value_.__l.__data_);
                  if (SHIBYTE(v226.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v226.__r_.__value_.__l.__data_);
                  }
                }
                if (SHIBYTE(v230.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v230.__r_.__value_.__l.__data_);
                }
                std::basic_string<char16_t> v230 = __str;
                std::basic_string<char16_t>::size_type v210 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                char v121 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  std::basic_string<char16_t>::size_type v210 = __str.__r_.__value_.__l.__size_;
                }
                if (!v210) {
                  operator new();
                }
LABEL_508:
                if ((v237.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  v211 = &v237;
                }
                else {
                  v211 = (std::basic_string<char16_t> *)v237.__r_.__value_.__r.__words[0];
                }
                std::basic_string<char16_t>::value_type v212 = v211->__r_.__value_.__s.__data_[0];
                BOOL v213 = v121 < 0;
                v214 = &v230;
                if (v213) {
                  v214 = (std::basic_string<char16_t> *)v230.__r_.__value_.__r.__words[0];
                }
                v214->__r_.__value_.__s.__data_[0] = v212;
                operator new();
              }
LABEL_483:
              BOOL v207 = v196 > 2 || v196 == v198;
              if (v204 != v199 || !v207) {
                goto LABEL_496;
              }
            }
            else if (v196 <= 2 && v196 != v198)
            {
              goto LABEL_496;
            }
          }
          uint64_t v208 = *(void *)(npc<morphun::Token const>(v224) + 80);
          npc<morphun::Token const>(v223);
          *((void *)&v209 + 1) = *((void *)&v224 + 1);
          *(void *)&long long v209 = v208;
          long long v224 = v209;
          *((void *)&v209 + 1) = *((void *)&v223 + 1);
          *(void *)&long long v209 = *(void *)(v223 + 80);
          long long v223 = v209;
          uint64_t v194 = v36[2];
          if (v194) {
            goto LABEL_444;
          }
        }
        std::basic_string<char16_t>::operator=(&v226, &v245);
      }
      (*(void (**)(uint64_t))(*(void *)v192 + 16))(v192);
    }
    else
    {
LABEL_493:
      if (SHIBYTE(v245.__r_.__value_.__r.__words[2]) < 0)
      {
        *v245.__r_.__value_.__l.__data_ = 0;
        v245.__r_.__value_.__l.__size_ = 0;
      }
      else
      {
        v245.__r_.__value_.__s.__data_[0] = 0;
        *((unsigned char *)&v245.__r_.__value_.__s + 23) = 0;
      }
    }
    std::basic_string<char16_t> __str = v226;
    memset(&v226, 0, sizeof(v226));
    goto LABEL_500;
  }
  return 0;
}

void sub_1D2C3BF08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,void *a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a73 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v74 - 185) < 0) {
    operator delete(*(void **)(v74 - 208));
  }
  if (*(char *)(v74 - 209) < 0) {
    operator delete(*(void **)(v74 - 232));
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  (*(void (**)(uint64_t))(*(void *)v73 + 16))(v73);
  if (a39 < 0) {
    operator delete(a34);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  if (a57 < 0) {
    operator delete(a52);
  }
  if (a63 < 0) {
    operator delete(a58);
  }
  if (a69 < 0) {
    operator delete(a64);
  }
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::__init_copy_ctor_external(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __sz)
{
  int v5 = this;
  if (__sz > 0xA)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    std::basic_string<char16_t>::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((__sz | 3) != 0xB) {
      std::basic_string<char16_t>::size_type v6 = __sz | 3;
    }
    CFIndex v7 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v7;
    int v5 = v7;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, 2 * __sz + 2);
}

void *std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](void *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = a1 + 1;
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *> *,long>>>((uint64_t)a1, *(void **)a2, (void *)(a2 + 8));
  return a1;
}

void sub_1D2C3C394(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::getFeatureValue(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3)
{
  int v5 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a2, a3);
  if ((void *)(a2 + 8) == v5)
  {
    a1->__r_.__value_.__r.__words[0] = 0;
    a1->__r_.__value_.__l.__size_ = 0;
    a1->__r_.__value_.__r.__words[2] = 0;
  }
  else if (*((char *)v5 + 127) < 0)
  {
    std::basic_string<char16_t>::size_type v6 = (const std::basic_string<char16_t>::value_type *)v5[13];
    std::basic_string<char16_t>::size_type v7 = v5[14];
    std::basic_string<char16_t>::__init_copy_ctor_external(a1, v6, v7);
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(v5 + 13);
    a1->__r_.__value_.__r.__words[2] = v5[15];
  }
}

BOOL std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(unsigned __int16 *a1, unsigned __int16 *a2)
{
  int v2 = *((char *)a1 + 23);
  uint64_t v3 = *((void *)a1 + 1);
  if (v2 >= 0) {
    uint64_t v3 = *((unsigned __int8 *)a1 + 23);
  }
  uint64_t v4 = *((unsigned __int8 *)a2 + 23);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (!v3) {
    return 1;
  }
  if (v5 >= 0) {
    std::basic_string<char16_t>::size_type v6 = a2;
  }
  else {
    std::basic_string<char16_t>::size_type v6 = *(unsigned __int16 **)a2;
  }
  if (v2 >= 0) {
    std::basic_string<char16_t>::size_type v7 = a1;
  }
  else {
    std::basic_string<char16_t>::size_type v7 = *(unsigned __int16 **)a1;
  }
  uint64_t v8 = v3 - 1;
  do
  {
    int v10 = *v7++;
    int v9 = v10;
    int v12 = *v6++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    BOOL result = v11 == v9;
  }
  while (v11 == v9 && v14);
  return result;
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::operator=(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *__str)
{
  if (this != __str)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::size_type size = __str->__r_.__value_.__l.__size_;
      if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        std::basic_string<char16_t>::size_type v4 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
      }
      else
      {
        std::basic_string<char16_t> __str = (const std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
        std::basic_string<char16_t>::size_type v4 = size;
      }
      return std::basic_string<char16_t>::__assign_no_alias<false>(this, (const std::basic_string<char16_t>::value_type *)__str, v4);
    }
    else if ((*((unsigned char *)&__str->__r_.__value_.__s + 23) & 0x80) != 0)
    {
      return std::basic_string<char16_t>::__assign_no_alias<true>(this, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v2 = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
      this->__r_.__value_.__r.__words[2] = __str->__r_.__value_.__r.__words[2];
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = v2;
    }
  }
  return this;
}

uint64_t npc<morphun::Tokenizer>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C3C554(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::TokenChain>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C3C5B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::insert(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n)
{
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::size_type v7 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    std::basic_string<char16_t>::size_type v7 = 10;
    std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if (v7 - size >= (unint64_t)__s)
  {
    if (__s)
    {
      int v9 = this;
      if ((*((unsigned char *)&this->__r_.__value_.__s + 23) & 0x80) != 0) {
        int v9 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      }
      if (size)
      {
        if ((unint64_t)v9 + 2 * size <= __pos || (unint64_t)v9 > __pos) {
          int v11 = 0;
        }
        else {
          int v11 = __s;
        }
        __pos += 2 * (void)v11;
        memmove((char *)v9 + 2 * (void)__s, v9, 2 * size);
      }
      memmove(v9, (const void *)__pos, 2 * (void)__s);
      std::basic_string<char16_t>::size_type v12 = (std::basic_string<char16_t>::size_type)__s + size;
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
        this->__r_.__value_.__l.__size_ = v12;
      }
      else {
        *((unsigned char *)&this->__r_.__value_.__s + 23) = v12 & 0x7F;
      }
      v9->__r_.__value_.__s.__data_[v12] = 0;
    }
  }
  else
  {
    std::basic_string<char16_t>::__grow_by_and_replace(this, v7, (std::basic_string<char16_t>::size_type)__s + size - v7, size, 0, 0, (std::basic_string<char16_t>::size_type)__s, (const std::basic_string<char16_t>::value_type *)__pos);
  }
  return this;
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E695BCC0, MEMORY[0x1E4FBA1D0]);
}

void sub_1D2C3C710(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  BOOL result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D8] + 16);
  return result;
}

void std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]()
{
}

void std::basic_string<char16_t>::__grow_by_and_replace(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __old_cap, std::basic_string<char16_t>::size_type __delta_cap, std::basic_string<char16_t>::size_type __old_sz, std::basic_string<char16_t>::size_type __n_copy, std::basic_string<char16_t>::size_type __n_del, std::basic_string<char16_t>::size_type __n_add, const std::basic_string<char16_t>::value_type *__p_new_stuff)
{
  if (0x7FFFFFFFFFFFFFF6 - __old_cap < __delta_cap) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v15 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    uint64_t v15 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  std::basic_string<char16_t>::size_type v16 = __delta_cap + __old_cap;
  if (__delta_cap + __old_cap <= 2 * __old_cap) {
    std::basic_string<char16_t>::size_type v16 = 2 * __old_cap;
  }
  uint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((v16 | 3) != 0xB) {
    uint64_t v17 = v16 | 3;
  }
  if (v16 >= 0xB) {
    uint64_t v18 = v17 + 1;
  }
  else {
    uint64_t v18 = 11;
  }
  if (__old_cap > 0x3FFFFFFFFFFFFFF2) {
    uint64_t v19 = 0x7FFFFFFFFFFFFFF7;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v20 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v19);
  std::basic_string<char16_t>::size_type v21 = (std::basic_string<char16_t>::size_type)v20;
  uint64_t v23 = v22;
  if (__n_copy) {
    memmove(v20, v15, 2 * __n_copy);
  }
  if (__n_add) {
    memmove((void *)(v21 + 2 * __n_copy), __p_new_stuff, 2 * __n_add);
  }
  std::basic_string<char16_t>::size_type v24 = __old_sz - (__n_del + __n_copy);
  if (v24) {
    memmove((void *)(v21 + 2 * __n_copy + 2 * __n_add), (char *)v15 + 2 * __n_copy + 2 * __n_del, 2 * v24);
  }
  if (__old_cap != 10) {
    operator delete(v15);
  }
  std::basic_string<char16_t>::size_type v25 = __n_add + __n_copy + v24;
  this->__r_.__value_.__r.__words[0] = v21;
  this->__r_.__value_.__l.__size_ = v25;
  this->__r_.__value_.__r.__words[2] = v23 | 0x8000000000000000;
  *(_WORD *)(v21 + 2 * v25) = 0;
}

std::basic_string<char16_t> *std::basic_string<char16_t>::__assign_no_alias<true>(std::basic_string<char16_t> *__dst, const std::basic_string<char16_t>::value_type *__src, std::basic_string<char16_t>::size_type __n_add)
{
  BOOL v5 = __n_add > 0xA;
  std::basic_string<char16_t>::size_type v6 = __n_add - 10;
  if (v5)
  {
    std::basic_string<char16_t>::__grow_by_and_replace(__dst, 0xAuLL, v6, *((unsigned char *)&__dst->__r_.__value_.__s + 23) & 0x7F, 0, *((unsigned char *)&__dst->__r_.__value_.__s + 23) & 0x7F, __n_add, __src);
  }
  else
  {
    *((unsigned char *)&__dst->__r_.__value_.__s + 23) = __n_add;
    if (__n_add) {
      memmove(__dst, __src, 2 * __n_add);
    }
    __dst->__r_.__value_.__s.__data_[__n_add] = 0;
  }
  return __dst;
}

std::basic_string<char16_t> *std::basic_string<char16_t>::__assign_no_alias<false>(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__src, std::basic_string<char16_t>::size_type __n_add)
{
  std::basic_string<char16_t>::size_type v5 = this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL;
  if (v5 <= __n_add)
  {
    std::basic_string<char16_t>::__grow_by_and_replace(this, v5 - 1, __n_add - v5 + 1, this->__r_.__value_.__l.__size_, 0, this->__r_.__value_.__l.__size_, __n_add, __src);
  }
  else
  {
    std::basic_string<char16_t>::size_type v6 = (void *)this->__r_.__value_.__r.__words[0];
    this->__r_.__value_.__l.__size_ = __n_add;
    if (__n_add) {
      memmove(v6, __src, 2 * __n_add);
    }
    *((_WORD *)v6 + __n_add) = 0;
  }
  return this;
}

void *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(uint64_t a1, uint64_t a2)
{
  long long v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  std::basic_string<char16_t>::size_type v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = morphun::dialog::SemanticFeature::operator<((uint64_t)(v3 + 4), a2);
    std::basic_string<char16_t>::size_type v7 = v3 + 1;
    if (!v6)
    {
      std::basic_string<char16_t>::size_type v7 = v3;
      std::basic_string<char16_t>::size_type v5 = v3;
    }
    uint64_t v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || morphun::dialog::SemanticFeature::operator<(a2, (uint64_t)(v5 + 4))) {
    return v2;
  }
  return v5;
}

void std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *> *,long>>>(uint64_t a1, void *a2, void *a3)
{
  if (a2 != a3)
  {
    std::basic_string<char16_t>::size_type v4 = a2;
    BOOL v6 = (uint64_t *)(a1 + 8);
    do
    {
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = v6;
      if (*(uint64_t **)a1 == v6) {
        goto LABEL_9;
      }
      int v9 = *(uint64_t **)(a1 + 8);
      int v10 = v6;
      if (v7)
      {
        do
        {
          uint64_t v8 = v9;
          int v9 = (uint64_t *)v9[1];
        }
        while (v9);
      }
      else
      {
        do
        {
          uint64_t v8 = (uint64_t *)v10[2];
          BOOL v11 = *v8 == (void)v10;
          int v10 = v8;
        }
        while (v11);
      }
      if (morphun::dialog::SemanticFeature::operator<((uint64_t)(v8 + 4), (uint64_t)(v4 + 4)))
      {
LABEL_9:
        if (!v7)
        {
          uint64_t v20 = v6;
          std::basic_string<char16_t>::size_type v12 = (uint64_t **)v6;
LABEL_15:
          unsigned int v13 = (uint64_t *)operator new(0x80uLL);
          v18[0] = v13;
          v18[1] = v6;
          char v19 = 0;
          morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v13 + 4), (const morphun::dialog::SemanticFeature *)(v4 + 4));
          BOOL v14 = (std::basic_string<char16_t> *)(v13 + 13);
          if (*((char *)v4 + 127) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(v14, (const std::basic_string<char16_t>::value_type *)v4[13], v4[14]);
          }
          else
          {
            long long v15 = *(_OWORD *)(v4 + 13);
            v13[15] = v4[15];
            *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v15;
          }
          char v19 = 1;
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v20, v12, v18[0]);
          v18[0] = 0;
          std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v18);
          goto LABEL_19;
        }
        uint64_t v20 = v8;
        std::basic_string<char16_t>::size_type v12 = (uint64_t **)(v8 + 1);
      }
      else
      {
        std::basic_string<char16_t>::size_type v12 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>(a1, &v20, (uint64_t)(v4 + 4));
      }
      if (!*v12) {
        goto LABEL_15;
      }
LABEL_19:
      std::basic_string<char16_t>::size_type v16 = (void *)v4[1];
      if (v16)
      {
        do
        {
          uint64_t v17 = v16;
          std::basic_string<char16_t>::size_type v16 = (void *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          uint64_t v17 = (void *)v4[2];
          BOOL v11 = *v17 == (void)v4;
          std::basic_string<char16_t>::size_type v4 = v17;
        }
        while (!v11);
      }
      std::basic_string<char16_t>::size_type v4 = v17;
    }
    while (v17 != a3);
  }
}

void sub_1D2C3CBC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(void **a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(a1 + 4);
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(void **this)
{
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
}

void std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void ***)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(v1 + 4);
    }
    operator delete(v1);
  }
}

void *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>(uint64_t a1, void *a2, uint64_t a3)
{
  std::basic_string<char16_t>::size_type v5 = (void *)(a1 + 8);
  std::basic_string<char16_t>::size_type v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        if (!morphun::dialog::SemanticFeature::operator<(a3, (uint64_t)(v4 + 4))) {
          break;
        }
        std::basic_string<char16_t>::size_type v4 = (void *)*v7;
        std::basic_string<char16_t>::size_type v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!morphun::dialog::SemanticFeature::operator<(v8, a3)) {
        break;
      }
      std::basic_string<char16_t>::size_type v5 = v7 + 1;
      std::basic_string<char16_t>::size_type v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::~RuGrammarSynthesizer_RuDisplayFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *this)
{
  morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::~RuGrammarSynthesizer_RuDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  icu4cxx::UnicodeSet::~UnicodeSet((morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *)((char *)this + 48));
  morphun::grammar::ml::Inflector::~Inflector((morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *)((char *)this + 16));
  long long v2 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

void icu4cxx::UnicodeSet::~UnicodeSet(icu4cxx::UnicodeSet *this)
{
  if (*((unsigned char *)this + 8)) {
    uset_close();
  }
}

uint64_t npc<morphun::dialog::SemanticFeature const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C3CEA0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction::RuGrammarSynthesizer_RuDisplayFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_RuDisplayFunction *this, const morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F2A0CA68;
  long long v2 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::RUSSIAN(this);
  morphun::TokenizerFactory::createTokenizer(v2, v3);
}

void sub_1D2C3E27C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (*(char *)(v41 - 89) < 0) {
    operator delete(*(void **)(v41 - 112));
  }
  if (*(char *)(v41 - 121) < 0)
  {
    operator delete(*(void **)(v41 - 144));
    if ((v40 & 1) == 0)
    {
LABEL_8:
      QuasarCSystemConfig_delete();
      if (a38 < 0) {
        operator delete(__p);
      }
      uint64_t v43 = *(void *)(v38 + 32);
      *(void *)(v38 + 32) = 0;
      if (v43) {
        (*(void (**)(uint64_t))(*(void *)v43 + 16))(v43);
      }
      uint64_t v44 = *(void *)(v38 + 8);
      *(void *)(v38 + 8) = 0;
      if (v44) {
        (*(void (**)(uint64_t))(*(void *)v44 + 16))(v44);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v40)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v39);
  goto LABEL_8;
}

void std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  long long v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    std::basic_string<char16_t>::size_type v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::destroy[abi:ne180100](v4);
      }
      while ((void *)v4 != v2);
      std::basic_string<char16_t>::size_type v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  long long v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    std::basic_string<char16_t>::size_type v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        BOOL v6 = v4 - 32;
        uint64_t v7 = (void **)(v4 - 24);
        std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](&v7);
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      std::basic_string<char16_t>::size_type v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::destroy[abi:ne180100](uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 24);
  std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v3);
  if (*(char *)(a1 + 23) < 0)
  {
    long long v2 = *(void **)a1;
    operator delete(v2);
  }
}

void std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  long long v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    std::basic_string<char16_t>::size_type v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        if (*((char *)v4 - 1) < 0) {
          operator delete(*(v4 - 3));
        }
        v4 -= 4;
      }
      while (v4 != v2);
      std::basic_string<char16_t>::size_type v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]()
{
}

uint64_t std::__split_buffer<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
    std::basic_string<char16_t>::size_type v5 = (void **)(i - 24);
    std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>,std::reverse_iterator<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8);
    uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 8);
    while (v3 != v4)
    {
      std::basic_string<char16_t>::size_type v5 = (void **)(v3 + 8);
      std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100](&v5);
      v3 += 32;
    }
  }
  return a1;
}

uint64_t std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >> 59) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    BOOL v6 = (void *)result;
    uint64_t v7 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>(a4);
    uint64_t v8 = v7;
    void *v6 = v7;
    v6[1] = v7;
    v6[2] = &v7[4 * v9];
    uint64_t v17 = v7;
    uint64_t v18 = v7;
    v15[0] = v6 + 2;
    v15[1] = &v17;
    v15[2] = &v18;
    char v16 = 0;
    if (a2 != a3)
    {
      int v10 = (long long *)(a2 + 8);
      BOOL v11 = v7;
      do
      {
        uint64_t v12 = (uint64_t)v10 - 8;
        *BOOL v11 = *((void *)v10 - 1);
        unsigned int v13 = (std::basic_string<char16_t> *)(v11 + 1);
        if (*((char *)v10 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v13, *(const std::basic_string<char16_t>::value_type **)v10, *((void *)v10 + 1));
          BOOL v11 = v18;
        }
        else
        {
          long long v14 = *v10;
          v11[3] = *((void *)v10 + 2);
          *(_OWORD *)&v13->__r_.__value_.__l.__data_ = v14;
        }
        v11 += 4;
        uint64_t v18 = v11;
        v10 += 2;
      }
      while (v12 + 32 != a3);
      uint64_t v8 = v11;
    }
    char v16 = 1;
    BOOL result = std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v15);
    v6[1] = v8;
  }
  return result;
}

void sub_1D2C3EA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 16);
    uint64_t v4 = **(void **)(a1 + 8);
    while (v3 != v4)
    {
      if (*(char *)(v3 - 1) < 0) {
        operator delete(*(void **)(v3 - 24));
      }
      v3 -= 32;
    }
  }
  return a1;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>(unint64_t a1)
{
  if (a1 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(unint64_t a1)
{
  if (a1 >= 0x555555555555556) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(48 * a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::basic_string(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *__str, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n, std::allocator<char16_t> *__a)
{
  BOOL v6 = __str;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = __str->__r_.__value_.__l.__size_;
    if (size < __pos) {
      goto LABEL_18;
    }
    BOOL v6 = (const std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
  }
  else
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (size < __pos) {
LABEL_18:
    }
      std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  std::basic_string<char16_t>::size_type v9 = size - __pos;
  if (v9 >= __n) {
    std::basic_string<char16_t>::size_type v10 = __n;
  }
  else {
    std::basic_string<char16_t>::size_type v10 = v9;
  }
  if (v10 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (v10 >= 0xB)
  {
    uint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v10 | 3) != 0xB) {
      uint64_t v12 = v10 | 3;
    }
    BOOL v11 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v12 + 1);
    this->__r_.__value_.__l.__size_ = v10;
    this->__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    this->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v11;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = v10;
    BOOL v11 = this;
    if (!v10) {
      goto LABEL_17;
    }
  }
  memmove(v11, (char *)v6 + 2 * __pos, 2 * v10);
LABEL_17:
  *((_WORD *)v11 + v10) = 0;
  return this;
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
  unint64_t v17 = 0;
  uint64_t v18 = 0;
  char v16 = 0;
  int32_t v5 = *(unsigned __int8 *)(v4 + 23);
  BOOL v6 = *(const UChar **)v4;
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v8 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v4);
  if ((v5 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v9 = (const UChar *)v4;
  }
  else {
    std::basic_string<char16_t>::size_type v9 = v6;
  }
  if ((v5 & 0x80u) == 0) {
    int32_t v10 = v5;
  }
  else {
    int32_t v10 = v7;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&v16, v9, v10, v8);
  {
    operator new();
  }
  if (!morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::TO_WORDS(void)::TO_WORDS_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (v18 >= 0) {
    BOOL v11 = (unsigned __int16 *)&v16;
  }
  else {
    BOOL v11 = (unsigned __int16 *)v16;
  }
  if (v18 >= 0) {
    unint64_t v12 = HIBYTE(v18);
  }
  else {
    unint64_t v12 = v17;
  }
  if (std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(void *)(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::TO_WORDS(void)::TO_WORDS_+ 8), v11, v12))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1D2EC9E08);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1D2EC9E04);
  }
  uint64_t v13 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(void *)this + 32))(this, a2, __p);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(v16);
  }
  return v13;
}

void sub_1D2C3EECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  MEMORY[0x1D942B8B0](v21, 0x1020C4062D53EE8);
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction::~RuGrammarSynthesizer_ToPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_ToPrepositionLookupFunction *this)
{
}

void morphun::grammar::synthesis::RoGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::RoGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2C3F2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>(uint64_t a1, long long *a2, long long *a3, std::basic_string<char16_t> *this)
{
  uint64_t v4 = this;
  BOOL v11 = this;
  unint64_t v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    BOOL v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v4, *(const std::basic_string<char16_t>::value_type **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      BOOL v6 = (long long *)((char *)v6 + 24);
      unint64_t v12 = ++v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1D2C3F4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  long long v2 = *a1;
  if (*v2)
  {
    std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 16);
    uint64_t v4 = **(void **)(a1 + 8);
    while (v3 != v4)
    {
      if (*(char *)(v3 - 1) < 0) {
        operator delete(*(void **)(v3 - 24));
      }
      v3 -= 24;
    }
  }
  return a1;
}

uint64_t morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::getArticle(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
  unint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v21 = 0;
  int32_t v5 = *(unsigned __int8 *)(v4 + 23);
  BOOL v6 = *(const UChar **)v4;
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v8 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v4);
  if ((v5 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v9 = (const UChar *)v4;
  }
  else {
    std::basic_string<char16_t>::size_type v9 = v6;
  }
  if ((v5 & 0x80u) == 0) {
    int32_t v10 = v5;
  }
  else {
    int32_t v10 = v7;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&v21, v9, v10, v8);
  uint64_t v11 = *(unsigned __int8 *)(v4 + 23);
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *(void *)(v4 + 8);
  }
  if (v11)
  {
    {
      operator new();
    }
    if (!morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_WORDS(void)::WITH_WORDS_)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    if (v23 >= 0) {
      unint64_t v12 = (unsigned __int16 *)&v21;
    }
    else {
      unint64_t v12 = (unsigned __int16 *)v21;
    }
    if (v23 >= 0) {
      unint64_t v13 = HIBYTE(v23);
    }
    else {
      unint64_t v13 = v22;
    }
    if (std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(void *)(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_WORDS(void)::WITH_WORDS_+ 8), v12, v13)|| *v12 == 1097)
    {
      goto LABEL_23;
    }
    {
      operator new();
    }
    if (!morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_FIRST_CHAR(void)::WITH_FIRST_CHAR_)
    {
      char v20 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v20);
    }
    if (morphun::grammar::synthesis::RuGrammarSynthesizer::startsWith2Consonant((unsigned __int16 *)&v21, *(void *)morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::WITH_FIRST_CHAR(void)::WITH_FIRST_CHAR_))goto LABEL_23; {
    unint64_t v15 = *(unsigned __int8 *)(v4 + 23);
    }
    if ((v15 & 0x80u) != 0) {
      unint64_t v15 = *(void *)(v4 + 8);
    }
    if (v15 >= 2)
    {
      if (SHIBYTE(v23) < 0)
      {
        if (*(_WORD *)v21 != 1074) {
          goto LABEL_33;
        }
        char v16 = (char *)v21 + 2;
      }
      else
      {
        if ((unsigned __int16)v21 != 1074) {
          goto LABEL_33;
        }
        char v16 = (char *)&v21 + 2;
      }
      if (*(_WORD *)v16 == 1095)
      {
LABEL_23:
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, aA_29);
        uint64_t v14 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(void *)this + 32))(this, a2, __p);
        goto LABEL_34;
      }
    }
  }
LABEL_33:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, aA_30);
  uint64_t v14 = (*(uint64_t (**)(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *, const morphun::dialog::SemanticFeatureModel_DisplayValue *, void **))(*(void *)this + 32))(this, a2, __p);
LABEL_34:
  uint64_t v17 = v14;
  if (v25 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete(v21);
  }
  return v17;
}

void sub_1D2C3F99C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  MEMORY[0x1D942B8B0](v21, 0x1020C405F07FB98);
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction::~RuGrammarSynthesizer_WithPrepositionLookupFunction(morphun::grammar::synthesis::RuGrammarSynthesizer_WithPrepositionLookupFunction *this)
{
}

void morphun::grammar::synthesis::RuGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::RuGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2C40404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

morphun::dictionary::PhraseProperties *morphun::grammar::synthesis::RuGrammarSynthesizer::startsWith2Consonant(unsigned __int16 *a1, uint64_t a2)
{
  if (*((char *)a1 + 23) < 0)
  {
    if (*((void *)a1 + 1) >= 2uLL)
    {
      a1 = *(unsigned __int16 **)a1;
      goto LABEL_7;
    }
    return 0;
  }
  if (*((unsigned __int8 *)a1 + 23) < 2u) {
    return 0;
  }
LABEL_7:
  uint64_t v3 = a1[1];
  BOOL result = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D942C150](a2, *a1);
  if (result)
  {
    uint64_t v4 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(result);
    return (morphun::dictionary::PhraseProperties *)(MEMORY[0x1D942C150](*v4, v3) == 0);
  }
  return result;
}

void morphun::grammar::ml::Inflector::~Inflector(morphun::grammar::ml::Inflector *this)
{
  morphun::grammar::ml::Inflector::~Inflector(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C408;
  QuasarCPDecTranslator_delete();
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

__n128 std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, _WORD *a2, std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type a4)
{
  if (*a2)
  {
    uint64_t v6 = 0;
    do
      uint64_t v7 = (const std::basic_string<char16_t>::value_type *)(v6 + 1);
    while (a2[++v6]);
  }
  else
  {
    uint64_t v7 = 0;
  }
  std::basic_string<char16_t>::insert(this, (std::basic_string<char16_t>::size_type)a2, v7, a4);
  __n128 result = *(__n128 *)&this->__r_.__value_.__l.__data_;
  *(_OWORD *)a1 = *(_OWORD *)&this->__r_.__value_.__l.__data_;
  *(void *)(a1 + 16) = *((void *)&this->__r_.__value_.__l + 2);
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  this->__r_.__value_.__r.__words[0] = 0;
  return result;
}

const char *morphun::util::VersionUtils::getLibraryVersion(morphun::util::VersionUtils *this)
{
  return "3402.12";
}

void morphun::Tokenizer::setStyle(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 40) = a2;
  uint64_t v3 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 8);
  *(void *)(a1 + 16) = v3;
  if (a2 != 2)
  {
    if (a2 == 1)
    {
      unint64_t v4 = *(void *)(a1 + 24);
      if ((unint64_t)v3 < v4)
      {
        int32_t v5 = morphun::tokenizer::NumberCleaver::modifyTokens;
LABEL_29:
        *v3++ = v5;
LABEL_44:
        *(void *)(a1 + 16) = v3;
        goto LABEL_45;
      }
      uint64_t v7 = v4 - (void)v3;
      uint64_t v8 = v7 >> 2;
      if ((unint64_t)(v7 >> 2) <= 1) {
        uint64_t v8 = 1;
      }
      if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v9 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v9 = v8;
      }
      int32_t v10 = std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v9);
      unint64_t v12 = &v10[v11];
      *int32_t v10 = morphun::tokenizer::NumberCleaver::modifyTokens;
      uint64_t v3 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 1);
      uint64_t v14 = *(char **)(a1 + 8);
      unint64_t v13 = *(char **)(a1 + 16);
      if (v13 != v14)
      {
        do
        {
          uint64_t v15 = *((void *)v13 - 1);
          v13 -= 8;
          *--int32_t v10 = v15;
        }
        while (v13 != v14);
        unint64_t v13 = *(char **)(a1 + 8);
      }
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v3;
      *(void *)(a1 + 24) = v12;
      if (!v13) {
        goto LABEL_44;
      }
      char v16 = v13;
    }
    else
    {
      unint64_t v6 = *(void *)(a1 + 24);
      if ((unint64_t)v3 >= v6)
      {
        uint64_t v17 = v6 - (void)v3;
        uint64_t v18 = v17 >> 2;
        if ((unint64_t)(v17 >> 2) <= 1) {
          uint64_t v18 = 1;
        }
        if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v19 = v18;
        }
        char v20 = std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v19);
        unint64_t v22 = &v20[v21];
        *char v20 = morphun::tokenizer::NumberCleaver::modifyTokens;
        uint64_t v3 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 1);
        std::basic_string<char16_t>::size_type v24 = *(char **)(a1 + 8);
        uint64_t v23 = *(char **)(a1 + 16);
        if (v23 != v24)
        {
          do
          {
            uint64_t v25 = *((void *)v23 - 1);
            v23 -= 8;
            *--char v20 = v25;
          }
          while (v23 != v24);
          uint64_t v23 = *(char **)(a1 + 8);
        }
        *(void *)(a1 + 8) = v20;
        *(void *)(a1 + 16) = v3;
        *(void *)(a1 + 24) = v22;
        if (v23) {
          operator delete(v23);
        }
      }
      else
      {
        *v3++ = morphun::tokenizer::NumberCleaver::modifyTokens;
      }
      *(void *)(a1 + 16) = v3;
      unint64_t v26 = *(void *)(a1 + 24);
      if ((unint64_t)v3 < v26)
      {
        int32_t v5 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))morphun::tokenizer::ExplicitTokenModifier::modifyTokens;
        goto LABEL_29;
      }
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = ((uint64_t)v3 - v27) >> 3;
      if ((unint64_t)(v28 + 1) >> 61) {
        goto LABEL_64;
      }
      uint64_t v29 = v26 - v27;
      uint64_t v30 = v29 >> 2;
      if (v29 >> 2 <= (unint64_t)(v28 + 1)) {
        uint64_t v30 = v28 + 1;
      }
      if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v31 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v31 = v30;
      }
      if (v31) {
        unint64_t v31 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v31);
      }
      else {
        uint64_t v32 = 0;
      }
      uint64_t v33 = (void (**)(uint64_t, char *, uint64_t, uint64_t))(v31 + 8 * v28);
      unint64_t v34 = v31 + 8 * v32;
      unsigned __int16 *v33 = morphun::tokenizer::ExplicitTokenModifier::modifyTokens;
      uint64_t v3 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 1);
      uint64_t v35 = *(char **)(a1 + 8);
      char v16 = *(char **)(a1 + 16);
      if (v16 != v35)
      {
        do
        {
          unsigned int v36 = (void (*)(uint64_t, char *, uint64_t, uint64_t))*((void *)v16 - 1);
          v16 -= 8;
          *--uint64_t v33 = v36;
        }
        while (v16 != v35);
        char v16 = *(char **)(a1 + 8);
      }
      *(void *)(a1 + 8) = v33;
      *(void *)(a1 + 16) = v3;
      *(void *)(a1 + 24) = v34;
      if (!v16) {
        goto LABEL_44;
      }
    }
    operator delete(v16);
    goto LABEL_44;
  }
LABEL_45:
  if (*(int *)(a1 + 32) < 1) {
    return;
  }
  unint64_t v37 = *(void *)(a1 + 24);
  if ((unint64_t)v3 >= v37)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = ((uint64_t)v3 - v39) >> 3;
    if (!((unint64_t)(v40 + 1) >> 61))
    {
      uint64_t v41 = v37 - v39;
      uint64_t v42 = v41 >> 2;
      if (v41 >> 2 <= (unint64_t)(v40 + 1)) {
        uint64_t v42 = v40 + 1;
      }
      if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v43 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v43 = v42;
      }
      if (v43) {
        unint64_t v43 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v43);
      }
      else {
        uint64_t v44 = 0;
      }
      uint64_t v45 = (void *)(v43 + 8 * v40);
      unint64_t v46 = v43 + 8 * v44;
      *uint64_t v45 = morphun::tokenizer::OversizedTokenModifier::modifyTokens;
      uint64_t v38 = v45 + 1;
      uint64_t v48 = *(char **)(a1 + 8);
      uint64_t v47 = *(char **)(a1 + 16);
      if (v47 != v48)
      {
        do
        {
          uint64_t v49 = *((void *)v47 - 1);
          v47 -= 8;
          *--uint64_t v45 = v49;
        }
        while (v47 != v48);
        uint64_t v47 = *(char **)(a1 + 8);
      }
      *(void *)(a1 + 8) = v45;
      *(void *)(a1 + 16) = v38;
      *(void *)(a1 + 24) = v46;
      if (v47) {
        operator delete(v47);
      }
      goto LABEL_62;
    }
LABEL_64:
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  void *v3 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))morphun::tokenizer::OversizedTokenModifier::modifyTokens;
  uint64_t v38 = v3 + 1;
LABEL_62:
  *(void *)(a1 + 16) = v38;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(unint64_t a1)
{
  if (a1 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a1);
}

void morphun::Tokenizer::createTokenChain(uint64_t a1)
{
  if (*(void *)(a1 + 48)) {
    operator new();
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2C414C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator((morphun::tokenizer::RegexSplitIterator *)&a49);
  if (*(char *)(v54 - 105) < 0) {
    operator delete(*(void **)(v54 - 128));
  }
  (*(void (**)(uint64_t))(*(void *)a12 + 16))(a12);
  _Unwind_Resume(a1);
}

void morphun::Tokenizer::~Tokenizer(morphun::Tokenizer *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::Tokenizer::~Tokenizer(morphun::Tokenizer *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  unint64_t v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }
}

void virtual thunk to'morphun::Tokenizer::~Tokenizer(morphun::Tokenizer *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::Tokenizer::Tokenizer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v4 - 40)) = a2[1];
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 36) = 0x7FFFFFFFLL;
  *(void *)(a1 + 48) = a3;
  morphun::Tokenizer::setStyle(a1, 1);
  return a1;
}

void sub_1D2C41984(_Unwind_Exception *exception_object)
{
  uint64_t v3 = v2;
  int32_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 16) = v5;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::Tokenizer::Tokenizer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1F2A11260;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 36) = 0x7FFFFFFFLL;
  *(void *)(a1 + 48) = a2;
  morphun::Tokenizer::setStyle(a1, 1);
  return a1;
}

void sub_1D2C41A0C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = v2;
  int32_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 16) = v5;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::Tokenizer::getMaxInputSize(morphun::Tokenizer *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t morphun::Tokenizer::setMaxInputSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t morphun::Tokenizer::getMaxTokens(morphun::Tokenizer *this)
{
  return *((unsigned int *)this + 8);
}

void morphun::Tokenizer::setMaxTokens(morphun::Tokenizer *this, int a2)
{
  uint64_t v4 = (char *)*((void *)this + 1);
  int32_t v5 = (char *)*((void *)this + 2);
  if (v4 != v5)
  {
    while (*(_DWORD *(**)(_DWORD *, uint64_t, uint64_t, uint64_t))v4 != morphun::tokenizer::OversizedTokenModifier::modifyTokens)
    {
      v4 += 8;
      if (v4 == v5)
      {
        uint64_t v4 = (char *)*((void *)this + 2);
        break;
      }
    }
  }
  if (v4 != v5)
  {
    size_t v6 = v5 - (v4 + 8);
    if (v6) {
      memmove(v4, v4 + 8, v6);
    }
    int32_t v5 = &v4[v6];
    *((void *)this + 2) = v5;
  }
  if (a2 >= 1)
  {
    unint64_t v7 = *((void *)this + 3);
    if ((unint64_t)v5 >= v7)
    {
      uint64_t v9 = *((void *)this + 1);
      uint64_t v10 = (uint64_t)&v5[-v9] >> 3;
      if ((unint64_t)(v10 + 1) >> 61) {
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v11 = v7 - v9;
      uint64_t v12 = v11 >> 2;
      if (v11 >> 2 <= (unint64_t)(v10 + 1)) {
        uint64_t v12 = v10 + 1;
      }
      if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v13 = v12;
      }
      if (v13) {
        unint64_t v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v13);
      }
      else {
        uint64_t v14 = 0;
      }
      uint64_t v15 = (void *)(v13 + 8 * v10);
      unint64_t v16 = v13 + 8 * v14;
      *uint64_t v15 = morphun::tokenizer::OversizedTokenModifier::modifyTokens;
      uint64_t v8 = v15 + 1;
      uint64_t v18 = (char *)*((void *)this + 1);
      uint64_t v17 = (char *)*((void *)this + 2);
      if (v17 != v18)
      {
        do
        {
          uint64_t v19 = *((void *)v17 - 1);
          v17 -= 8;
          *--uint64_t v15 = v19;
        }
        while (v17 != v18);
        uint64_t v17 = (char *)*((void *)this + 1);
      }
      *((void *)this + 1) = v15;
      *((void *)this + 2) = v8;
      *((void *)this + 3) = v16;
      if (v17) {
        operator delete(v17);
      }
    }
    else
    {
      *(void *)int32_t v5 = morphun::tokenizer::OversizedTokenModifier::modifyTokens;
      uint64_t v8 = v5 + 8;
    }
    *((void *)this + 2) = v8;
  }
  *((_DWORD *)this + 8) = a2;
}

uint64_t marisa::Exception::what(marisa::Exception *this)
{
  return *((void *)this + 3);
}

void marisa::Exception::~Exception(std::exception *this)
{
  std::exception::~exception(this);

  JUMPOUT(0x1D942B8B0);
}

void *marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(void *a1)
{
  uint64_t v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = v2[6];
    if (v3) {
      MEMORY[0x1D942B890](v3, 0x1000C8077774924);
    }
    if (*v2) {
      MEMORY[0x1D942B890](*v2, 0x1000C8077774924);
    }
    MEMORY[0x1D942B8B0](v2, 0x1070C406A3FAA47);
  }
  return a1;
}

void *marisa::Agent::set_query(void *this, const char *a2, uint64_t a3)
{
  if (!a2 && a3)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc";
    exception[2] = 0x200000017;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc:23: MARI"
                   "SA_NULL_ERROR: (ptr == NULL) && (length != 0)";
  }
  uint64_t v3 = this[5];
  if (v3) {
    *(_DWORD *)(v3 + 108) = 0;
  }
  *this = a2;
  this[1] = a3;
  return this;
}

void *marisa::Agent::init_state(marisa::Agent *this)
{
  if (*((void *)this + 5))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc";
    exception[2] = 0x100000026;
    int32_t v5 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc:38: MARISA_STATE_E"
         "RROR: state_.get() != NULL";
    goto LABEL_9;
  }
  uint64_t v2 = operator new(0x70uLL, MEMORY[0x1E4FBA2D0]);
  if (v2)
  {
    *(_OWORD *)((char *)v2 + 25) = 0u;
    _OWORD *v2 = 0u;
    v2[1] = 0u;
    v2[3] = 0u;
    v2[4] = 0u;
    *(_OWORD *)((char *)v2 + 73) = 0u;
    *((void *)v2 + 12) = 0;
    *((void *)v2 + 13) = 0;
    uint64_t v6 = 0;
    *((void *)this + 5) = v2;
  }
  else
  {
    uint64_t v6 = 0;
    *((void *)this + 5) = 0;
  }
  __n128 result = marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(&v6);
  if (!*((void *)this + 5))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc";
    exception[2] = 0x800000028;
    int32_t v5 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc:40: MARISA_MEMORY_"
         "ERROR: state_.get() == NULL";
LABEL_9:
    exception[3] = v5;
  }
  return result;
}

void morphun::exception::StringIndexOutOfBoundsException::~StringIndexOutOfBoundsException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(morphun::exception::StringIndexOutOfBoundsException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11548;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11548;
  return result;
}

morphun::exception::StringIndexOutOfBoundsException *morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(morphun::exception::StringIndexOutOfBoundsException *this, int a2)
{
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a2, &v5);
  std::basic_string<char16_t>::insert(&v5, (std::basic_string<char16_t>::size_type)L"StringIndexOutOfBoundsException at ", (const std::basic_string<char16_t>::value_type *)0x23, v3);
  std::basic_string<char16_t> __p = v5;
  memset(&v5, 0, sizeof(v5));
  morphun::exception::Throwable::Throwable((uint64_t)this, (long long *)&__p);
  *(void *)this = &unk_1F2A114B8;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v5.__r_.__value_.__l.__data_);
  }
  *(void *)this = &unk_1F2A11548;
  return this;
}

void sub_1D2C41F68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11548;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11548;
  return result;
}

void morphun::analysis::stemmer::SvStemFilter::getLemma(std::basic_string<char16_t> *__str@<X1>, std::allocator<char16_t> *a2@<X4>, std::basic_string<char16_t> *a3@<X8>)
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    uint64_t v6 = __str;
  }
  else {
    uint64_t v6 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
  }
  if ((size & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type size = __str->__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_15;
  }
  unint64_t v7 = (char *)v6;
  while (*(_WORD *)v7 != 58)
  {
    v7 += 2;
    if (!--size) {
      goto LABEL_15;
    }
  }
  unint64_t v8 = v7 - (char *)v6;
  if ((int)(v8 >> 1) < 2)
  {
LABEL_15:
    int R1Start = morphun::analysis::stemmer::NordicStemFilter::getR1Start((uint64_t *)__str);
    int v11 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if ((v11 & 0x80) != 0)
    {
      std::basic_string<char16_t>::size_type v12 = __str->__r_.__value_.__l.__size_;
      if (R1Start >= (int)v12)
      {
        int v50 = (const std::basic_string<char16_t>::value_type *)__str->__r_.__value_.__r.__words[0];
        std::basic_string<char16_t>::__init_copy_ctor_external(a3, v50, v12);
        return;
      }
    }
    else if (R1Start >= v11)
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
      a3->__r_.__value_.__r.__words[2] = __str->__r_.__value_.__r.__words[2];
      return;
    }
    std::basic_string<char16_t>::size_type v13 = R1Start;
    std::basic_string<char16_t>::basic_string(&v57, __str, 0, R1Start, v10);
    std::basic_string<char16_t>::size_type v15 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if ((v15 & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type v15 = __str->__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::basic_string(&v56, __str, v13, v15 - v13, v14);
    memset(&__stra, 0, sizeof(__stra));
    int v16 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (v16 >= 0) {
      uint64_t v17 = __str;
    }
    else {
      uint64_t v17 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
    }
    if (v16 >= 0) {
      std::basic_string<char16_t>::size_type v18 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v18 = __str->__r_.__value_.__l.__size_;
    }
    uint64_t isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase((uint64_t)v17, v18);
    char v20 = isAllLowerCase;
    if ((isAllLowerCase & 1) == 0)
    {
      int32_t v21 = HIBYTE(v57.__r_.__value_.__r.__words[2]);
      long long v22 = *(_OWORD *)&v57.__r_.__value_.__l.__data_;
      uint64_t v23 = morphun::util::LocaleUtils::SWEDISH((morphun::util::LocaleUtils *)isAllLowerCase);
      if ((v21 & 0x80u) == 0) {
        std::basic_string<char16_t>::size_type v24 = &v57;
      }
      else {
        std::basic_string<char16_t>::size_type v24 = (std::basic_string<char16_t> *)v22;
      }
      if ((v21 & 0x80u) == 0) {
        int32_t v25 = v21;
      }
      else {
        int32_t v25 = DWORD2(v22);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__stra, (const UChar *)v24, v25, v23);
      unint64_t v26 = std::basic_string<char16_t>::operator=(&v57, &__stra);
      int32_t v27 = HIBYTE(v56.__r_.__value_.__r.__words[2]);
      long long v28 = *(_OWORD *)&v56.__r_.__value_.__l.__data_;
      uint64_t v29 = morphun::util::LocaleUtils::SWEDISH((morphun::util::LocaleUtils *)v26);
      if ((v27 & 0x80u) == 0) {
        uint64_t v30 = &v56;
      }
      else {
        uint64_t v30 = (std::basic_string<char16_t> *)v28;
      }
      if ((v27 & 0x80u) == 0) {
        int32_t v31 = v27;
      }
      else {
        int32_t v31 = DWORD2(v28);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__stra, (const UChar *)v30, v31, v29);
      std::basic_string<char16_t>::operator=(&v56, &__stra);
    }
    {
      operator new();
    }
    uint64_t v32 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_FIRST_STEP_REMOVE(void)::ENDINGS_FIRST_STEP_REMOVE_);
    if ((morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v56, *v32, v32[1]) & 1) == 0)
    {
      std::basic_string<char16_t>::size_type v33 = HIBYTE(v56.__r_.__value_.__r.__words[2]);
      if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v33 = v56.__r_.__value_.__l.__size_;
      }
      if (v33)
      {
        unint64_t v34 = &v56;
        if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          unint64_t v34 = (std::basic_string<char16_t> *)v56.__r_.__value_.__r.__words[0];
        }
        if (v34->__r_.__value_.__s.__data_[v33 - 1] == 115)
        {
          std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, (const void **)&v57.__r_.__value_.__l.__data_, (const void **)&v56.__r_.__value_.__l.__data_);
          {
            operator new();
          }
          uint64_t v35 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_FIRST_STEP_SHORTEN(void)::ENDINGS_FIRST_STEP_SHORTEN_);
          morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&__p, *v35, v35[1]);
          std::basic_string<char16_t>::assign(&v57, &__p, 0, v13);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v36 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v36 = __p.__r_.__value_.__l.__size_;
          }
          std::basic_string<char16_t>::assign(&v56, &__p, v13, v36);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
      }
    }
    {
      operator new();
    }
    unint64_t v37 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_SECOND_STEP(void)::ENDINGS_SECOND_STEP_);
    morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&v56, *v37, v37[1]);
    {
      operator new();
    }
    uint64_t v38 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_THIRD_STEP_SHORTEN(void)::ENDINGS_THIRD_STEP_SHORTEN_);
    if ((morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&v56, *v38, v38[1]) & 1) == 0)
    {
      {
        operator new();
      }
      uint64_t v39 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::SvStemFilter::ENDINGS_THIRD_STEP_REMOVE(void)::ENDINGS_THIRD_STEP_REMOVE_);
      morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v56, *v39, v39[1]);
    }
    if (v20)
    {
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a3, (const void **)&v57.__r_.__value_.__l.__data_, (const void **)&v56.__r_.__value_.__l.__data_);
    }
    else
    {
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)__dst, (const void **)&v57.__r_.__value_.__l.__data_, (const void **)&v56.__r_.__value_.__l.__data_);
      int v40 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
      if (v40 >= 0) {
        uint64_t v41 = __str;
      }
      else {
        uint64_t v41 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
      }
      if (v40 >= 0) {
        std::basic_string<char16_t>::size_type v42 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v42 = __str->__r_.__value_.__l.__size_;
      }
      isAllUpperCase = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v41, v42);
      unint64_t v44 = v59;
      unint64_t v46 = (void **)__dst[0];
      uint64_t v45 = __dst[1];
      if (isAllUpperCase)
      {
        uint64_t v47 = morphun::util::LocaleUtils::SWEDISH(isAllUpperCase);
        if ((v44 & 0x80u) == 0) {
          uint64_t v48 = __dst;
        }
        else {
          uint64_t v48 = v46;
        }
        if ((v44 & 0x80u) == 0) {
          int32_t v49 = v44;
        }
        else {
          int32_t v49 = (int)v45;
        }
        morphun::util::StringViewUtils::uppercase((uint64_t)&__stra, (const UChar *)v48, v49, v47);
        *a3 = __stra;
        memset(&__stra, 0, sizeof(__stra));
      }
      else
      {
        uint64_t v51 = morphun::util::LocaleUtils::SWEDISH(isAllUpperCase);
        if ((v44 & 0x80u) == 0) {
          int v52 = __dst;
        }
        else {
          int v52 = v46;
        }
        if ((v44 & 0x80u) == 0) {
          unint64_t v53 = v44;
        }
        else {
          unint64_t v53 = (unint64_t)v45;
        }
        morphun::util::StringViewUtils::capitalizeFirst((UChar *)v52, v53, v51, (uint64_t)a3);
      }
      if ((char)v59 < 0) {
        operator delete(__dst[0]);
      }
    }
    if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__stra.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v56.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v57.__r_.__value_.__l.__data_);
    }
    return;
  }

  std::basic_string<char16_t>::basic_string(a3, __str, 0, (v8 >> 1), a2);
}

void sub_1D2C426CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  MEMORY[0x1D942B8B0](v38, 0x20C40960023A9);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::assign(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *__str, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n)
{
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = __str->__r_.__value_.__l.__size_;
    if (size < __pos) {
      goto LABEL_11;
    }
    std::basic_string<char16_t> __str = (const std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
  }
  else
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (size < __pos) {
LABEL_11:
    }
      std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  std::basic_string<char16_t>::size_type v5 = size - __pos;
  if (v5 >= __n) {
    std::basic_string<char16_t>::size_type v5 = __n;
  }
  uint64_t v6 = (const std::basic_string<char16_t>::value_type *)((char *)__str + 2 * __pos);

  return std::basic_string<char16_t>::__assign_external(this, v6, v5);
}

void *std::vector<std::u16string_view>::vector[abi:ne180100](void *a1, const void *a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    std::vector<std::u16string_view>::__vallocate[abi:ne180100](a1, a3);
    uint64_t v6 = (char *)a1[1];
    memmove(v6, a2, 16 * a3);
    a1[1] = &v6[16 * a3];
  }
  return a1;
}

void sub_1D2C42914(_Unwind_Exception *exception_object)
{
  std::basic_string<char16_t>::size_type v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<std::vector<std::u16string_view>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C42980(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *std::vector<std::u16string_view>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  double result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(unint64_t a1)
{
  if (a1 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::__assign_external(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n)
{
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    unint64_t v10 = this->__r_.__value_.__r.__words[2];
    unint64_t v9 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v9 < __n)
    {
      std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
      goto LABEL_6;
    }
    unint64_t v6 = HIBYTE(v10);
    unint64_t v7 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  else
  {
    unint64_t v7 = this;
    if (__n > 0xA)
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      unint64_t v9 = 10;
LABEL_6:
      std::basic_string<char16_t>::__grow_by_and_replace(this, v9, __n - v9, size, 0, size, __n, __s);
      return this;
    }
  }
  if (__n)
  {
    memmove(v7, __s, 2 * __n);
    LOBYTE(v6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
  }
  if ((v6 & 0x80) != 0) {
    this->__r_.__value_.__l.__size_ = __n;
  }
  else {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __n & 0x7F;
  }
  v7->__r_.__value_.__s.__data_[__n] = 0;
  return this;
}

void morphun::analysis::stemmer::SvStemFilter::~SvStemFilter(morphun::analysis::stemmer::SvStemFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07E60);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07E60);
}

uint64_t mlogc_setLogLevel(uint64_t result)
{
  morphun::util::gLogLevel = result;
  return result;
}

uint64_t mlogc_getLogLevel()
{
  return morphun::util::gLogLevel;
}

uint64_t mlogc_logToConsole(int a1)
{
  if (a1) {
    uint64_t v1 = (morphun::util *)morphun::util::logClog;
  }
  else {
    uint64_t v1 = 0;
  }
  return morphun::util::Logger::registerLogger(MEMORY[0x1E4FBA248], v1);
}

uint64_t mlogc_registerLogger(morphun::util *a1, morphun::util *a2)
{
  return morphun::util::Logger::registerLogger(a1, a2);
}

uint64_t mlogc_unregisterLogger(morphun::util *a1)
{
  return morphun::util::Logger::registerLogger(a1, 0);
}

void morphun::dialog::language::EtCommonConceptFactory::~EtCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3288);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3288);
}

void morphun::grammar::synthesis::SvGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::SvGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  operator new();
}

void sub_1D2C44238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  __cxa_free_exception(v36);
  MEMORY[0x1D942B8B0](v35, 0x10F3C40831360C4);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C44828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        unint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            unint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      std::basic_string<char16_t>::size_type v12 = (char **)v4;
      std::basic_string<char16_t>::size_type v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      std::basic_string<char16_t>::size_type v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        std::basic_string<char16_t>::size_type v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        char *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    std::basic_string<char16_t>::size_type v12 = (char **)v4;
    std::basic_string<char16_t>::size_type v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          std::basic_string<char16_t>::size_type v12 = (char **)v14;
          std::basic_string<char16_t>::size_type v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          std::basic_string<char16_t>::size_type v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        std::basic_string<char16_t>::size_type v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C44A50(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C44AC8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](unsigned __int16 *a1, unsigned __int16 *a2)
{
  unint64_t v2 = *((unsigned __int8 *)a2 + 23);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    unint64_t v2 = *((void *)a2 + 1);
  }
  unint64_t v4 = *((unsigned __int8 *)a1 + 23);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    unint64_t v4 = *((void *)a1 + 1);
  }
  if (v2 >= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v2;
  }
  if (v6)
  {
    if (v5 >= 0) {
      BOOL v7 = a1;
    }
    else {
      BOOL v7 = *(unsigned __int16 **)a1;
    }
    if (v3 >= 0) {
      unint64_t v8 = a2;
    }
    else {
      unint64_t v8 = *(unsigned __int16 **)a2;
    }
    while (1)
    {
      unsigned int v9 = *v7;
      unsigned int v10 = *v8;
      if (v10 != v9) {
        break;
      }
      ++v7;
      ++v8;
      if (!--v6) {
        goto LABEL_17;
      }
    }
    BOOL v11 = v9 >= v10;
  }
  else
  {
LABEL_17:
    BOOL v11 = v4 >= v2;
  }
  return !v11;
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(void *)a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((void *)a1 + 1));
    if (a1[55] < 0) {
      operator delete(*((void **)a1 + 4));
    }
    operator delete(a1);
  }
}

uint64_t morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C44D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        unsigned int v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            unsigned int v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      std::basic_string<char16_t>::size_type v12 = (char **)v4;
      std::basic_string<char16_t>::size_type v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      std::basic_string<char16_t>::size_type v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        std::basic_string<char16_t>::size_type v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        char *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    std::basic_string<char16_t>::size_type v12 = (char **)v4;
    std::basic_string<char16_t>::size_type v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          std::basic_string<char16_t>::size_type v12 = (char **)v14;
          std::basic_string<char16_t>::size_type v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          std::basic_string<char16_t>::size_type v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        std::basic_string<char16_t>::size_type v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C44FC0(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C45038(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::isStripAllAccents(morphun::analysis::ConfigurableAnalyzer *this)
{
  return 0;
}

void morphun::analysis::ConfigurableAnalyzer::addSplitPunctuationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C451D0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v3, 0x1020C405F07FB98);
  morphun::analysis::filter::LanguageExpansion::~LanguageExpansion(v2);
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07AC0);
  MEMORY[0x1D942B8B0](v1, 0x10F3C40BBBF42DCLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::ConfigurableAnalyzer::addUnaccentFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C452FC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10E1C40F87B0920);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::addWordNormalizationFilter(uint64_t a1, uint64_t a2)
{
  return a2;
}

morphun::analysis::TokenStream *morphun::analysis::ConfigurableAnalyzer::addToNativeScriptTransliterationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v4 = (morphun::transliteration::TransliteratorFactory *)morphun::util::LocaleUtils::ROOT(this);
  if (morphun::transliteration::TransliteratorFactory::createTransliterator(v4, (morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80), v5))
  {
    operator new();
  }
  return a2;
}

void sub_1D2C453A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void **__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  MEMORY[0x1D942B8B0](v21, 0x10F3C405E42D0C4);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    if (morphun::util::gLogLevel <= 1)
    {
      if (*(char *)(v20 + 207) < 0)
      {
        std::basic_string<char16_t>::size_type v24 = *(const char **)(v20 + 184);
        uint64_t v25 = *(void *)(v20 + 192);
      }
      else
      {
        std::basic_string<char16_t>::size_type v24 = (const char *)(v20 + 184);
        LODWORD(v25) = *(unsigned __int8 *)(v20 + 207);
      }
      morphun::util::StringViewUtils::to_u16string(v24, v25, (std::basic_string<char16_t> *)&a9);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, L"Failed to load the transliterator to ", (std::basic_string<char16_t> *)&a9, v26);
      if (morphun::util::gLogLevel <= 1)
      {
        if (a20 >= 0) {
          p_p = (void **)&__p;
        }
        else {
          p_p = __p;
        }
        morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_p);
      }
      if (a20 < 0) {
        operator delete(__p);
      }
      if (a14 < 0) {
        operator delete(a9);
      }
    }
    __cxa_end_catch();
    JUMPOUT(0x1D2C4538CLL);
  }
  _Unwind_Resume(a1);
}

morphun::analysis::TokenStream *morphun::analysis::ConfigurableAnalyzer::addToLatinScriptTransliterationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v4 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(this);
  if (morphun::transliteration::TransliteratorFactory::createTransliterator((morphun::analysis::ConfigurableAnalyzer *)((char *)this + 80), v4, v5))
  {
    operator new();
  }
  return a2;
}

void sub_1D2C4554C(_Unwind_Exception *a1, std::basic_string<char16_t> *a2, std::basic_string<char16_t> *a3, void *__p, uint64_t a5, int a6, __int16 a7, char a8, char a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__pa,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  int v29 = (int)a2;
  MEMORY[0x1D942B8B0](v28, 0x10F3C405E42D0C4, a3, __p);
  if (v29 == 1)
  {
    __cxa_begin_catch(a1);
    if (morphun::util::gLogLevel <= 1)
    {
      if (*(char *)(v27 + 207) < 0)
      {
        int32_t v31 = *(const char **)(v27 + 184);
        uint64_t v32 = *(void *)(v27 + 192);
      }
      else
      {
        int32_t v31 = (const char *)(v27 + 184);
        LODWORD(v32) = *(unsigned __int8 *)(v27 + 207);
      }
      morphun::util::StringViewUtils::to_u16string(v31, v32, (std::basic_string<char16_t> *)&a10);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&a16, L"Failed to load the transliterator from ", (std::basic_string<char16_t> *)&a10, v33);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__pa, (std::basic_string<char16_t> *)&a16, L" to Latin");
      if (morphun::util::gLogLevel <= 1)
      {
        if (a27 >= 0) {
          p_pa = &__pa;
        }
        else {
          p_pa = __pa;
        }
        morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_pa);
      }
      if (a27 < 0) {
        operator delete(__pa);
      }
      if (a21 < 0) {
        operator delete(a16);
      }
      if (a15 < 0) {
        operator delete(a10);
      }
    }
    __cxa_end_catch();
    JUMPOUT(0x1D2C45530);
  }
  _Unwind_Resume(a1);
}

__n128 std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, std::basic_string<char16_t> *this, std::basic_string<char16_t>::value_type *__s)
{
  if (*__s)
  {
    uint64_t v6 = 0;
    do
      std::basic_string<char16_t>::size_type v7 = v6 + 1;
    while (__s[++v6]);
  }
  else
  {
    std::basic_string<char16_t>::size_type v7 = 0;
  }
  std::basic_string<char16_t>::append(this, __s, v7);
  __n128 result = *(__n128 *)&this->__r_.__value_.__l.__data_;
  *(_OWORD *)a1 = *(_OWORD *)&this->__r_.__value_.__l.__data_;
  *(void *)(a1 + 16) = *((void *)&this->__r_.__value_.__l + 2);
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  this->__r_.__value_.__r.__words[0] = 0;
  return result;
}

uint64_t morphun::analysis::ConfigurableAnalyzer::addStopFilter(uint64_t a1, uint64_t a2)
{
  return a2;
}

void morphun::analysis::ConfigurableAnalyzer::addNumberNormalizationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C457F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  std::basic_string<char16_t>::size_type v12 = v11;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  morphun::analysis::TokenFilter::~TokenFilter(v10, (uint64_t *)&off_1F2A07A00);
  MEMORY[0x1D942B8B0](v10, 0x10F3C400F1780CDLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::ConfigurableAnalyzer::addCharacterNormalizationFilter(morphun::analysis::ConfigurableAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C4595C(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07B40);
  MEMORY[0x1D942B8B0](v1, 0x10E1C40E08A22EALL);
  _Unwind_Resume(a1);
}

void morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::analysis::ConfigurableAnalyzer *this, const morphun::Chunk *a2)
{
  memset(&v18, 0, sizeof(v18));
  npc<morphun::Chunk const>((uint64_t)a2);
  uint64_t v4 = (*(uint64_t (**)(const morphun::Chunk *))(*(void *)a2 + 56))(a2);
  uint64_t v5 = npc<morphun::Token>(v4);
  int v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
  uint64_t v7 = (*(uint64_t (**)(const morphun::Chunk *))(*(void *)a2 + 48))(a2);
  uint64_t v8 = npc<morphun::Token>(v7);
  int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24))(v8);
  std::basic_string<char16_t>::reserve(&v18, v6 - v9);
  uint64_t v10 = (*(uint64_t (**)(const morphun::Chunk *))(*(void *)a2 + 56))(a2);
  uint64_t v11 = *(void *)(npc<morphun::Token>(v10) + 80);
  for (uint64_t i = (*(uint64_t (**)(const morphun::Chunk *))(*(void *)a2 + 48))(a2);
        i != v11;
        uint64_t i = *(void *)(i + 80))
  {
    npc<morphun::Token>(i);
    if (*(_DWORD *)(i + 12) > *(_DWORD *)(i + 8))
    {
      npc<morphun::Token>(i);
      int v13 = *(char *)(i + 39);
      if (v13 >= 0) {
        uint64_t v14 = (const std::basic_string<char16_t>::value_type *)(i + 16);
      }
      else {
        uint64_t v14 = *(const std::basic_string<char16_t>::value_type **)(i + 16);
      }
      if (v13 >= 0) {
        std::basic_string<char16_t>::size_type v15 = *(unsigned __int8 *)(i + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v15 = *(void *)(i + 24);
      }
      std::basic_string<char16_t>::append(&v18, v14, v15);
    }
    npc<morphun::Token>(i);
  }
  if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v16 = &v18;
  }
  else {
    int v16 = (std::basic_string<char16_t> *)v18.__r_.__value_.__r.__words[0];
  }
  if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v17 = HIBYTE(v18.__r_.__value_.__r.__words[2]);
  }
  else {
    int v17 = v18.__r_.__value_.__r.__words[1];
  }
  morphun::analysis::ConfigurableAnalyzer::createTokenChain(this, a2, (UChar *)v16, v17);
}

void sub_1D2C45B9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::Chunk const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C45C14(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C45C78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::reserve(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __requested_capacity)
{
  if (__requested_capacity >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  LODWORD(v3) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v3 & 0x80000000) == 0)
  {
    if (__requested_capacity <= 0xA) {
      return;
    }
    std::basic_string<char16_t>::size_type v4 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    if (v4 <= __requested_capacity) {
      std::basic_string<char16_t>::size_type v5 = __requested_capacity;
    }
    else {
      std::basic_string<char16_t>::size_type v5 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    if ((v5 | 3) != 0xB)
    {
      uint64_t v11 = (v5 | 3) + 1;
      goto LABEL_24;
    }
    unint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFFCLL) + 4;
LABEL_20:
    uint64_t v11 = v6 + 1;
    if (v6 < 0xB)
    {
      std::basic_string<char16_t>::size_type v12 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      int v13 = 1;
      uint64_t v14 = this;
      if ((v3 & 0x80) != 0) {
        goto LABEL_28;
      }
      goto LABEL_26;
    }
LABEL_24:
    uint64_t v14 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v11);
    uint64_t v11 = v15;
    LODWORD(v3) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v3 & 0x80000000) != 0)
    {
      LOBYTE(v13) = 0;
      std::basic_string<char16_t>::size_type v12 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
LABEL_28:
      std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
      int v17 = 1;
LABEL_29:
      BOOL v18 = __CFADD__(size, 1);
      std::basic_string<char16_t>::size_type v19 = size + 1;
      if (v18)
      {
        if (v17) {
          goto LABEL_35;
        }
      }
      else
      {
        memmove(v14, v12, 2 * v19);
        if (v17)
        {
LABEL_35:
          operator delete(v12);
          if ((v13 & 1) == 0) {
            goto LABEL_36;
          }
          goto LABEL_33;
        }
      }
      if ((v13 & 1) == 0)
      {
LABEL_36:
        this->__r_.__value_.__l.__size_ = v4;
        this->__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
        this->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v14;
        return;
      }
LABEL_33:
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v4 & 0x7F;
      return;
    }
    int v13 = 0;
    std::basic_string<char16_t>::size_type v12 = this;
LABEL_26:
    std::basic_string<char16_t>::size_type size = v3;
    int v17 = v13;
    goto LABEL_29;
  }
  unint64_t v7 = this->__r_.__value_.__r.__words[2];
  std::basic_string<char16_t>::size_type v8 = (v7 & 0x7FFFFFFFFFFFFFFFLL) - 1;
  if (v8 < __requested_capacity)
  {
    std::basic_string<char16_t>::size_type v4 = this->__r_.__value_.__l.__size_;
    if (v4 <= __requested_capacity) {
      std::basic_string<char16_t>::size_type v9 = __requested_capacity;
    }
    else {
      std::basic_string<char16_t>::size_type v9 = this->__r_.__value_.__l.__size_;
    }
    uint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v9 | 3) != 0xB) {
      uint64_t v10 = v9 | 3;
    }
    unint64_t v6 = v9 >= 0xB ? v10 : 10;
    if (v6 != v8)
    {
      unint64_t v3 = HIBYTE(v7);
      goto LABEL_20;
    }
  }
}

void sub_1D2C45E18(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
}

void morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::analysis::Analyzer *a1, const void *a2, UChar *s, int a4)
{
  if (a2)
  {
    uint64_t v6 = (*(uint64_t (**)(const void *))(*(void *)a2 + 48))(a2);
    uint64_t v7 = (*(uint64_t (**)(const void *))(*(void *)a2 + 56))(a2);
    if (v6)
    {
      std::basic_string<char16_t>::size_type v8 = (void *)v7;
      int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
      uint64_t v10 = npc<morphun::Token>((uint64_t)v8);
      if ((*(unsigned int (**)(uint64_t))(*v8 + 32))(v10) - v9 != a4)
      {
        exception = __cxa_allocate_exception(0x38uLL);
        (**(void (***)(std::basic_string<char16_t> *__return_ptr, const void *))a2)(&status, a2);
        std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&ut, "C", &status, v18);
        morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&ut);
      }
      {
        {
          operator new();
        }
      }
      memset(&ut.p, 0, 64);
      memset(&ut, 0, 72);
      ut.magic = 878368812;
      ut.sizeOfStruct = 144;
      ut.context = a2;
LABEL_12:
      morphun::analysis::Analyzer::tokenStream(a1, &ut, (morphun::analysis::TokenStreamContainer *)&status);
      if (morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(v21))
      {
        if (morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::OffsetAttribute>(v21))
        {
          morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>(v21);
          morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>(v21);
          morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(v21);
          operator new();
        }
        int v13 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v13);
      }
      std::basic_string<char16_t>::size_type v12 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v12);
    }
    uint64_t v14 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v14);
    int v16 = (void (*)(void *))morphun::exception::NullPointerException::~NullPointerException;
  }
  else
  {
    memset(&ut, 0, sizeof(ut));
    ut.magic = 878368812;
    ut.sizeOfStruct = 144;
    LODWORD(status.__r_.__value_.__l.__data_) = 0;
    utext_openUChars(&ut, s, a4, (UErrorCode *)&status);
    UErrorCode data = (UErrorCode)status.__r_.__value_.__l.__data_;
    if (SLODWORD(status.__r_.__value_.__l.__data_) < 1) {
      goto LABEL_12;
    }
    uint64_t v14 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(v14, data);
    int v16 = (void (*)(void *))morphun::exception::ICUException::~ICUException;
  }
  __cxa_throw(v14, v15, v16);
}

void sub_1D2C4692C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0) {
    operator delete(__p);
  }
  if (a36 < 0)
  {
    operator delete(a31);
    if ((v44 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v44)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v43);
  goto LABEL_8;
}

void *morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(uint64_t a1)
{
  uint64_t v2 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes17CharTermAttributeE");
  if (v2)
  {
    unint64_t v3 = (const void *)v2[3];
    if (v3) {
    else
    }
      return 0;
  }
  else
  {
    if (result) {
      std::shared_ptr<morphun::analysis::util::AttributeImpl>::shared_ptr[abi:ne180100]<morphun::analysis::util::AttributeImpl,void>(&v5, (uint64_t)result);
    }
  }
  return result;
}

void sub_1D2C46B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void *morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::OffsetAttribute>(uint64_t a1)
{
  uint64_t v2 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes15OffsetAttributeE");
  if (v2)
  {
    unint64_t v3 = (const void *)v2[3];
    if (v3) {
    else
    }
      return 0;
  }
  else
  {
    if (result) {
      std::shared_ptr<morphun::analysis::util::AttributeImpl>::shared_ptr[abi:ne180100]<morphun::analysis::util::AttributeImpl,void>(&v5, (uint64_t)result);
    }
  }
  return result;
}

void sub_1D2C46C80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>(uint64_t a1)
{
  uint64_t v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes17GrammemeAttributeE");
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (const void *)v1[3];
  if (!v2) {
    return 0;
  }
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>(uint64_t a1)
{
  uint64_t v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes21LemmaMappingAttributeE");
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (const void *)v1[3];
  if (!v2) {
    return 0;
  }
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(uint64_t a1)
{
  uint64_t v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes23SkippedOffsetsAttributeE");
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (const void *)v1[3];
  if (!v2) {
    return 0;
  }
}

void morphun::analysis::ConfigurableAnalyzer::splitDelimiters(morphun::analysis::ConfigurableAnalyzer *this, int a2, int a3, int a4, morphun::Token **a5, const morphun::Token *lpsrc, const morphun::Chunk *a7)
{
  int v8 = a3 + this;
  uint64_t v9 = (a3 + a2);
  if (lpsrc
  {
    a5 = (morphun::Token **)(*(uint64_t (**)(void *, uint64_t))(*(void *)v11 + 152))(v11, v9);
    if (a5)
    {
LABEL_8:
      (*((void (**)(morphun::Token **))*a5 + 3))(a5);
      (*((void (**)(morphun::Token **))*a5 + 4))(a5);
      operator new();
    }
  }
  else
  {
    while (a5)
    {
      if ((int)v9 <= (*((int (**)(morphun::Token **))*a5 + 3))(a5)) {
        goto LABEL_8;
      }
      a5 = (morphun::Token **)a5[10];
    }
  }
  exception = __cxa_allocate_exception(0x38uLL);
  int v13 = v9;
  uint64_t v14 = exception;
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v13, &v19);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v20, L"Cannot locate the sub-chunk from ", &v19, v15);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v21, &v20, L" to ");
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v8, &v18);
  if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v16 = &v18;
  }
  else {
    int v16 = (std::basic_string<char16_t> *)v18.__r_.__value_.__r.__words[0];
  }
  if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(v18.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = v18.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v21, (const std::basic_string<char16_t>::value_type *)v16, size);
  std::basic_string<char16_t> v22 = v21;
  memset(&v21, 0, sizeof(v21));
  morphun::exception::IllegalStateException::IllegalStateException((uint64_t)v14, (long long *)&v22);
}

void sub_1D2C47158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  if (v40 < 0) {
    operator delete(v38);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a19 < 0)
  {
    operator delete(a14);
    if ((v39 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v39)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v37);
  goto LABEL_14;
}

uint64_t npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C47278(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ConfigurableAnalyzer::addDelimitersFromOffsets(uint64_t a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a1 + 72);
  int v11 = (*(uint64_t (**)(uint64_t))(*(void *)a6 + 64))(a6);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)a6 + 72))(a6);
  if (*(void *)v12 != *(void *)(v12 + 8))
  {
    uint64_t v13 = v10 & 6;
    uint64_t v20 = a1 + 80;
    int v14 = **(_DWORD **)v12;
    memset(&v23, 0, sizeof(v23));
    int v15 = v11 - a4;
    if (a3 >= v11 - a4)
    {
      int v16 = (const UChar *)(a2 + 2 * v15);
      unint64_t v17 = a3 - v15;
      if (v17 >= v14 - v11) {
        std::basic_string<char16_t>::size_type v18 = v14 - v11;
      }
      else {
        std::basic_string<char16_t>::size_type v18 = v17;
      }
      if (v13) {
        morphun::util::StringViewUtils::lowercase((uint64_t)&v23, v16, v18, v20);
      }
      else {
        std::basic_string<char16_t>::__assign_external(&v23, (const std::basic_string<char16_t>::value_type *)v16, v18);
      }
      operator new();
    }
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  }
  return a5;
}

void sub_1D2C4749C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  MEMORY[0x1D942B8B0](v19, 0x10B3C405B5873CALL);
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::analysis::ConfigurableAnalyzer::getWordOrDelimiterToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5, uint64_t a6)
{
  if (a6)
  {
    uint64_t v6 = 2 * a6 - 2;
    do
    {
      UChar32 v8 = *a5++;
      if (u_isUWhiteSpace(v8)) {
        BOOL v9 = v6 == 0;
      }
      else {
        BOOL v9 = 1;
      }
      v6 -= 2;
    }
    while (!v9);
  }
  operator new();
}

void sub_1D2C4768C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__assign_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(uint64_t *result, const std::basic_string<char16_t> *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = (uint64_t)a2;
  uint64_t v7 = result;
  uint64_t v8 = result[2];
  uint64_t v9 = *result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *result) >> 4) < a4)
  {
    if (v9)
    {
      uint64_t v10 = result[1];
      int v11 = (void *)*result;
      if (v10 != v9)
      {
        uint64_t v12 = v10 - 48;
        uint64_t v13 = (void *)(v10 - 48);
        int v14 = (void *)(v10 - 48);
        do
        {
          uint64_t v15 = *v14;
          v14 -= 6;
          (*(void (**)(void *))(v15 + 8))(v13);
          v12 -= 48;
          BOOL v16 = v13 == (void *)v9;
          uint64_t v13 = v14;
        }
        while (!v16);
        int v11 = (void *)*v7;
      }
      v7[1] = v9;
      operator delete(v11);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x555555555555555) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 4);
    uint64_t v18 = 2 * v17;
    if (2 * v17 <= a4) {
      uint64_t v18 = a4;
    }
    if (v17 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v19 = 0x555555555555555;
    }
    else {
      unint64_t v19 = v18;
    }
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__vallocate[abi:ne180100](v7, v19);
    __n128 result = (uint64_t *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(v6, a3, v7[1]);
LABEL_22:
    v7[1] = (uint64_t)result;
    return result;
  }
  uint64_t v20 = result[1];
  unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((v20 - v9) >> 4);
  if (v21 < a4)
  {
    uint64_t v22 = (uint64_t)a2 + 16 * ((v20 - v9) >> 4);
    if (v20 != v9)
    {
      std::basic_string<char16_t> v23 = (std::basic_string<char16_t> *)(v9 + 24);
      uint64_t v24 = 48 * v21;
      uint64_t v25 = a2 + 1;
      do
      {
        *(_OWORD *)&v23[-1].__r_.__value_.__r.__words[1] = *(_OWORD *)&v25[-1].__r_.__value_.__r.__words[1];
        std::basic_string<char16_t>::operator=(v23, v25);
        v23 += 2;
        v25 += 2;
        v24 -= 48;
      }
      while (v24);
      uint64_t v9 = v7[1];
    }
    __n128 result = (uint64_t *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(v22, a3, v9);
    goto LABEL_22;
  }
  if (a2 != (const std::basic_string<char16_t> *)a3)
  {
    do
    {
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v6 + 8);
      __n128 result = (uint64_t *)std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v9 + 24), (const std::basic_string<char16_t> *)(v6 + 24));
      v6 += 48;
      v9 += 48;
    }
    while (v6 != a3);
    uint64_t v20 = v7[1];
  }
  if (v20 != v9)
  {
    uint64_t v26 = v20 - 48;
    uint64_t v27 = (void *)(v20 - 48);
    uint64_t v28 = (void *)(v20 - 48);
    do
    {
      uint64_t v29 = *v28;
      v28 -= 6;
      __n128 result = (uint64_t *)(*(uint64_t (**)(void *))(v29 + 8))(v27);
      v26 -= 48;
      BOOL v16 = v27 == (void *)v9;
      uint64_t v27 = v28;
    }
    while (!v16);
  }
  v7[1] = v9;
  return result;
}

void sub_1D2C478E8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    std::basic_string<char16_t>::size_type v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      uint64_t v6 = v4 - 48;
      uint64_t v7 = v4 - 48;
      uint64_t v8 = v4 - 48;
      do
      {
        uint64_t v9 = *(void *)v8;
        v8 -= 48;
        (*(void (**)(char *))(v9 + 8))(v7);
        v6 -= 48;
        BOOL v10 = v7 == v2;
        uint64_t v7 = v8;
      }
      while (!v10);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t morphun::util::Finally<morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::Chunk const*,std::u16string_view)::$_0>::~Finally(uint64_t a1)
{
  return a1;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = a3 + v6;
      *(void *)uint64_t v7 = &off_1F2A0F180;
      *(_OWORD *)(v7 + 8) = *(_OWORD *)(a1 + v6 + 8);
      uint64_t v8 = (std::basic_string<char16_t> *)(a3 + v6 + 24);
      uint64_t v9 = (const std::basic_string<char16_t>::value_type **)(a1 + v6 + 24);
      if (*(char *)(a1 + v6 + 47) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v8, *v9, *(void *)(a1 + v6 + 32));
      }
      else
      {
        long long v10 = *(_OWORD *)v9;
        *(void *)(a3 + v6 + 40) = *(void *)(a1 + v6 + 40);
        *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v10;
      }
      v6 += 48;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

char *std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[48 * v4];
  return result;
}

void *std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>(void *a1, uint64_t a2)
{
  unint64_t v3 = a2;
  if (a2 < 0)
  {
    uint64_t v4 = (unsigned __int8 *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v5 = 5381;
    do
    {
      unint64_t v3 = v5;
      unsigned int v6 = *v4++;
      uint64_t v5 = (33 * v5) ^ v6;
    }
    while (v6);
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v3;
    if (v3 >= *(void *)&v7) {
      unint64_t v10 = v3 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v3;
  }
  int v11 = *(void **)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = (void *)*v11;
  if (*v11)
  {
    do
    {
      unint64_t v13 = v12[1];
      if (v13 == v3)
      {
        if (std::type_info::operator==[abi:ne180100](*(void *)(v12[2] + 8), a2)) {
          return v12;
        }
      }
      else
      {
        if (v9 > 1)
        {
          if (v13 >= *(void *)&v7) {
            v13 %= *(void *)&v7;
          }
        }
        else
        {
          v13 &= *(void *)&v7 - 1;
        }
        if (v13 != v10) {
          return 0;
        }
      }
      uint64_t v12 = (void *)*v12;
    }
    while (v12);
  }
  return v12;
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if ((a2 & a1) < 0 != __OFSUB__(a1, a2)) {
    return strcmp((const char *)(a1 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void std::shared_ptr<morphun::analysis::util::AttributeImpl>::shared_ptr[abi:ne180100]<morphun::analysis::util::AttributeImpl,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1D2C47E48(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

uint64_t std::__shared_ptr_pointer<morphun::analysis::util::AttributeImpl *,std::shared_ptr<morphun::analysis::util::AttributeImpl>::__shared_ptr_default_delete<morphun::analysis::util::AttributeImpl,morphun::analysis::util::AttributeImpl>,std::allocator<morphun::analysis::util::AttributeImpl>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), 0x80000001D2EC1466)) {
    return a1 + 24;
  }
  else {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<morphun::analysis::util::AttributeImpl *,std::shared_ptr<morphun::analysis::util::AttributeImpl>::__shared_ptr_default_delete<morphun::analysis::util::AttributeImpl,morphun::analysis::util::AttributeImpl>,std::allocator<morphun::analysis::util::AttributeImpl>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

void std::__shared_ptr_pointer<morphun::analysis::util::AttributeImpl *,std::shared_ptr<morphun::analysis::util::AttributeImpl>::__shared_ptr_default_delete<morphun::analysis::util::AttributeImpl,morphun::analysis::util::AttributeImpl>,std::allocator<morphun::analysis::util::AttributeImpl>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1D942B8B0);
}

void morphun::analysis::ConfigurableAnalyzer::createTokenChain(morphun::analysis::Analyzer *a1, uint64_t a2)
{
  int v2 = *(char *)(a2 + 23);
  if (v2 >= 0) {
    unint64_t v3 = (UChar *)a2;
  }
  else {
    unint64_t v3 = *(UChar **)a2;
  }
  if (v2 >= 0) {
    LODWORD(v4) = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  morphun::analysis::ConfigurableAnalyzer::createTokenChain(a1, 0, v3, v4);
}

void morphun::analysis::ConfigurableAnalyzer::createComponents(morphun::analysis::ConfigurableAnalyzer *this)
{
}

void sub_1D2C486D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(void **this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(void **this, void *a2)
{
  uint64_t v4 = (void *)*a2;
  *this = (void *)*a2;
  *(void **)((char *)this + *(v4 - 5)) = (void *)a2[5];

  morphun::analysis::Analyzer::~Analyzer((morphun::analysis::Analyzer *)this, a2 + 2);
}

uint64_t *morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(uint64_t *a1, uint64_t *a2, const morphun::util::ULocale *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = morphun::analysis::Analyzer::Analyzer((morphun::analysis::Analyzer *)a1, a2 + 2);
  uint64_t v11 = a2[1];
  *(void *)unint64_t v10 = v11;
  *(uint64_t *)((char *)a1 + *(void *)(v11 - 40)) = a2[4];
  a1[8] = a4;
  uint64_t v12 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v12 - 40)) = a2[5];
  a1[9] = a5;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 10), a3);
  return a1;
}

void sub_1D2C48A58(_Unwind_Exception *a1)
{
  morphun::analysis::Analyzer::~Analyzer(v1, v2);
  _Unwind_Resume(a1);
}

morphun::analysis::Analyzer *morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(morphun::analysis::Analyzer *a1, const morphun::util::ULocale *a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = &unk_1F2A08C08;
  uint8x8_t v8 = morphun::analysis::Analyzer::Analyzer(a1, (uint64_t *)&off_1F2A075C0);
  *((void *)v8 + 8) = a3;
  *((void *)v8 + 9) = a4;
  *(void *)uint8x8_t v8 = &off_1F2A0FCF0;
  morphun::util::ULocale::ULocale((morphun::analysis::Analyzer *)((char *)v8 + 80), a2);
  return a1;
}

void sub_1D2C48AF8(_Unwind_Exception *a1)
{
  morphun::analysis::Analyzer::~Analyzer(v1, (uint64_t *)&off_1F2A075C0);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(morphun::analysis::ConfigurableAnalyzer *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void morphun::tokenizer::locale::th::ThTokenizer::createTokenExtractor()
{
}

void sub_1D2C48D00(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v2, 0x1020C405F07FB98);
  MEMORY[0x1D942B8B0](v1, 0x10F3C40002B4C98);
  _Unwind_Resume(a1);
}

void sub_1D2C48E10(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::resources::DataRegistrationService::registerDataPathForLocale(const morphun::util::ULocale *a1, uint64_t a2)
{
  morphun::resources::fallthroughLocaleString(&v58, a1);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __str = *(std::string *)a2;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
    if (__str.__r_.__value_.__l.__size_ >= 7) {
      size_t size = 7;
    }
    else {
      size_t size = __str.__r_.__value_.__l.__size_;
    }
  }
  else
  {
    if (HIBYTE(__str.__r_.__value_.__r.__words[2]) >= 7u) {
      size_t size = 7;
    }
    else {
      size_t size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    p_str = &__str;
  }
  int v5 = memcmp(p_str, "file://", size);
  if (size >= 7 && v5 == 0) {
    std::string::erase(&__str, 0, 7uLL);
  }
  while ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*((unsigned char *)&__str.__r_.__value_.__s + 23) || *(&v56 + HIBYTE(__str.__r_.__value_.__r.__words[2])) != 47) {
      goto LABEL_26;
    }
    uint64_t v7 = HIBYTE(__str.__r_.__value_.__r.__words[2]) - 1;
    --*((unsigned char *)&__str.__r_.__value_.__s + 23);
    uint8x8_t v8 = &__str;
LABEL_25:
    v8->__r_.__value_.__s.__data_[v7] = 0;
  }
  if (__str.__r_.__value_.__l.__size_)
  {
    uint8x8_t v8 = (std::string *)__str.__r_.__value_.__r.__words[0];
    if (*(unsigned char *)(__str.__r_.__value_.__r.__words[0] + __str.__r_.__value_.__l.__size_ - 1) == 47)
    {
      uint64_t v7 = --__str.__r_.__value_.__l.__size_;
      goto LABEL_25;
    }
  }
LABEL_26:
  memset(&v53, 0, sizeof(v53));
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v9 = &__str;
  }
  else {
    unint64_t v9 = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __str.__r_.__value_.__l.__size_;
  }
  if (v10)
  {
    if (&v53 <= v9 && (std::string *)((char *)&v53.__r_.__value_.__l.__data_ + 1) > v9)
    {
      if (v10 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      if (v10 > 0x16)
      {
        uint64_t v15 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v10 | 7) != 0x17) {
          uint64_t v15 = v10 | 7;
        }
        uint64_t v16 = v15 + 1;
        p_dst = (long long *)operator new(v15 + 1);
        *((void *)&__dst + 1) = v10;
        int64_t v60 = v16 | 0x8000000000000000;
        *(void *)&long long __dst = p_dst;
      }
      else
      {
        HIBYTE(v60) = v10;
        p_dst = &__dst;
      }
      do
      {
        std::string::value_type v17 = v9->__r_.__value_.__s.__data_[0];
        unint64_t v9 = (std::string *)((char *)v9 + 1);
        *(unsigned char *)p_dst = v17;
        p_dst = (long long *)((char *)p_dst + 1);
        --v10;
      }
      while (v10);
      *(unsigned char *)p_dst = 0;
      if (v60 >= 0) {
        uint64_t v18 = (const std::string::value_type *)&__dst;
      }
      else {
        uint64_t v18 = (const std::string::value_type *)__dst;
      }
      if (v60 >= 0) {
        std::string::size_type v19 = HIBYTE(v60);
      }
      else {
        std::string::size_type v19 = *((void *)&__dst + 1);
      }
      std::string::append(&v53, v18, v19);
      if (SHIBYTE(v60) < 0) {
        operator delete((void *)__dst);
      }
    }
    else
    {
      if (v10 < 0x17)
      {
        uint64_t v12 = &v53;
      }
      else
      {
        std::string::__grow_by(&v53, 0x16uLL, v10 - 22, 0, 0, 0, 0);
        v53.__r_.__value_.__l.__size_ = 0;
        if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v12 = &v53;
        }
        else {
          uint64_t v12 = (std::string *)v53.__r_.__value_.__r.__words[0];
        }
      }
      for (uint64_t i = 0; i != v10; ++i)
        v12->__r_.__value_.__s.__data_[i] = v9->__r_.__value_.__s.__data_[i];
      v12->__r_.__value_.__s.__data_[i] = 0;
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        v53.__r_.__value_.__l.__size_ = v10;
      }
      else {
        *((unsigned char *)&v53.__r_.__value_.__s + 23) = v10 & 0x7F;
      }
    }
  }
  uint64_t v20 = std::__fs::filesystem::__weakly_canonical(&v54, (const std::__fs::filesystem::path *)&v53, 0);
  if (SHIBYTE(v54.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&pn, v54.__pn_.__r_.__value_.__l.__data_, v54.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    std::string pn = v54.__pn_;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  std::string __str = pn;
  if (SHIBYTE(v54.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v54.__pn_.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v53.__r_.__value_.__l.__data_);
  }
  unint64_t v21 = (std::mutex *)morphun::resources::CLASS_MUTEX((morphun::resources *)v20);
  std::mutex::lock(v21);
  std::basic_string<char16_t> v23 = (uint64_t **)morphun::resources::PATHS_MAP(v22);
  npc<std::map<std::string,std::string>>((uint64_t)v23);
  uint64_t v24 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v23, &v58);
  if (v23 + 1 != v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = (const void **)(v24 + 7);
    uint64_t v27 = *((unsigned __int8 *)v24 + 79);
    if ((v27 & 0x80u) == 0) {
      uint64_t v28 = (uint64_t *)*((unsigned __int8 *)v24 + 79);
    }
    else {
      uint64_t v28 = v24[8];
    }
    std::string::size_type v29 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v29 = __str.__r_.__value_.__l.__size_;
    }
    if (v28 != (uint64_t *)v29) {
      goto LABEL_100;
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v30 = &__str;
    }
    else {
      uint64_t v30 = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    if ((v27 & 0x80) != 0)
    {
      if (memcmp(*v26, v30, (size_t)v24[8])) {
        goto LABEL_100;
      }
    }
    else if (*((unsigned char *)v24 + 79))
    {
      int32_t v31 = (unsigned __int8 *)(v24 + 7);
      while (*v31 == v30->__r_.__value_.__s.__data_[0])
      {
        ++v31;
        uint64_t v30 = (std::string *)((char *)v30 + 1);
        if (!--v27) {
          goto LABEL_88;
        }
      }
LABEL_100:
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v51, "R");
      if (*((char *)v25 + 79) < 0)
      {
        uint64_t v26 = (const void **)v25[7];
        std::basic_string<char16_t>::size_type v36 = v25[8];
      }
      else
      {
        LODWORD(v36) = *((unsigned __int8 *)v25 + 79);
      }
      morphun::util::StringViewUtils::to_u16string((const char *)v26, (int32_t)v36, &v50);
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v37 = &v50;
      }
      else {
        unint64_t v37 = (std::basic_string<char16_t> *)v50.__r_.__value_.__r.__words[0];
      }
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v38 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v38 = v50.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v51, (const std::basic_string<char16_t>::value_type *)v37, v38);
      std::basic_string<char16_t> v52 = v51;
      memset(&v51, 0, sizeof(v51));
      std::basic_string<char16_t>::append(&v52, (const std::basic_string<char16_t>::value_type *)"\"", 6uLL);
      std::string v53 = (std::string)v52;
      memset(&v52, 0, sizeof(v52));
      int v39 = *(char *)(a2 + 23);
      if (v39 >= 0) {
        int v40 = (const char *)a2;
      }
      else {
        int v40 = *(const char **)a2;
      }
      if (v39 >= 0) {
        LODWORD(v41) = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v41 = *(void *)(a2 + 8);
      }
      morphun::util::StringViewUtils::to_u16string(v40, v41, &v49);
      if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v42 = &v49;
      }
      else {
        std::basic_string<char16_t>::size_type v42 = (std::basic_string<char16_t> *)v49.__r_.__value_.__r.__words[0];
      }
      if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v43 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v43 = v49.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append((std::basic_string<char16_t> *)&v53, (const std::basic_string<char16_t>::value_type *)v42, v43);
      v54.__pn_ = v53;
      memset(&v53, 0, sizeof(v53));
      std::basic_string<char16_t>::append((std::basic_string<char16_t> *)&v54, L"\").", 3uLL);
      unint64_t v44 = v54.__pn_.__r_.__value_.__r.__words[2];
      std::string pn = v54.__pn_;
      memset(&v54, 0, sizeof(v54));
      std::string::size_type v45 = HIBYTE(v44);
      if ((v45 & 0x80u) == 0) {
        p_std::string pn = &pn;
      }
      else {
        p_std::string pn = (std::string *)pn.__r_.__value_.__r.__words[0];
      }
      if ((v45 & 0x80u) == 0) {
        std::string::size_type v47 = v45;
      }
      else {
        std::string::size_type v47 = pn.__r_.__value_.__l.__size_;
      }
      exception = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string<std::u16string_view,0>(&__dst, p_pn, v47);
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &__dst);
    }
  }
LABEL_88:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&pn, (char *)&word_1D2ED0AEE);
  if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(pn.__r_.__value_.__l.__data_);
  }
  uint64_t v32 = (void **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__find_equal<std::string>((uint64_t)v23, &pn, &v58);
  std::basic_string<char16_t>::size_type v33 = (char *)*v32;
  if (!*v32)
  {
    unint64_t v34 = (uint64_t **)v32;
    std::basic_string<char16_t>::size_type v33 = (char *)operator new(0x50uLL);
    *(void *)&long long __dst = v33;
    *((void *)&__dst + 1) = v23 + 1;
    LOBYTE(v60) = 0;
    uint64_t v35 = (std::string *)(v33 + 32);
    if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(v35, v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v35->__r_.__value_.__l.__data_ = *(_OWORD *)&v58.__r_.__value_.__l.__data_;
      *((void *)v33 + 6) = *((void *)&v58.__r_.__value_.__l + 2);
    }
    *((void *)v33 + 7) = 0;
    *((void *)v33 + 8) = 0;
    *((void *)v33 + 9) = 0;
    LOBYTE(v60) = 1;
    std::__tree<std::u16string_view>::__insert_node_at(v23, (uint64_t)pn.__r_.__value_.__l.__data_, v34, (uint64_t *)v33);
    *(void *)&long long __dst = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t *)&__dst);
  }
  std::string::operator=((std::string *)(v33 + 56), &__str);
  std::mutex::unlock(v21);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v58.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C49450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (*(char *)(v55 - 81) < 0)
  {
    operator delete(*(void **)(v55 - 104));
    if ((v52 & 1) == 0)
    {
LABEL_6:
      if (a48 < 0) {
        operator delete(__p);
      }
      if (a41 < 0) {
        operator delete(a36);
      }
      if (v54 < 0) {
        operator delete(v50);
      }
      if (a34 < 0) {
        operator delete(a29);
      }
      if (a27 < 0) {
        operator delete(a22);
      }
      if (v53 < 0) {
        operator delete(v49);
      }
      if (a21 < 0) {
        operator delete(a16);
      }
      std::mutex::unlock(v48);
      if (*(char *)(v55 - 137) < 0) {
        operator delete(*(void **)(v55 - 160));
      }
      if (*(char *)(v55 - 105) < 0) {
        operator delete(*(void **)(v55 - 128));
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v52)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v51);
  goto LABEL_6;
}

void morphun::resources::fallthroughLocaleString(std::string *this, const morphun::util::ULocale *a2)
{
  {
    if (v12) {
      morphun::resources::initLOCALE_FALLTHROUGH_BLACKLIST(v12);
    }
  }
  uint64_t v4 = morphun::resources::LOCALE_FALLTHROUGH_BLACKLIST(void)::LOCALE_FALLTHROUGH_BLACKLIST_;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)v14, a2);
  uint64_t v5 = v16;
  if ((v16 & 0x80u) != 0) {
    uint64_t v5 = v15;
  }
  if (v5)
  {
    unsigned int v6 = (void *)(v4 + 8);
    while (1)
    {
      uint64_t v7 = (void *)*v6;
      if (*v6)
      {
        uint64_t v8 = v4 + 8;
        do
        {
          BOOL v9 = std::less<std::string>::operator()[abi:ne180100](v7 + 4, v17);
          std::string::size_type v10 = v7 + 1;
          if (!v9)
          {
            std::string::size_type v10 = v7;
            uint64_t v8 = (uint64_t)v7;
          }
          uint64_t v7 = (void *)*v10;
        }
        while (*v10);
        if ((void *)v8 != v6 && !std::less<std::string>::operator()[abi:ne180100](v17, (void *)(v8 + 32))) {
          break;
        }
      }
      morphun::util::ULocale::getFallback((morphun::util::ULocale *)v14, (uint64_t)v13);
      morphun::util::ULocale::operator=((uint64_t)v14, (uint64_t)v13);
      uint64_t v11 = v16;
      if ((v16 & 0x80u) != 0) {
        uint64_t v11 = v15;
      }
      if (!v11) {
        goto LABEL_16;
      }
    }
    if (*(char *)(v8 + 79) < 0)
    {
      std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)(v8 + 56), *(void *)(v8 + 64));
    }
    else
    {
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)(v8 + 56);
      this->__r_.__value_.__r.__words[2] = *(void *)(v8 + 72);
    }
  }
  else
  {
LABEL_16:
    if (*((char *)a2 + 31) < 0)
    {
      std::string::__init_copy_ctor_external(this, *((const std::string::value_type **)a2 + 1), *((void *)a2 + 2));
    }
    else
    {
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)a2 + 8);
      this->__r_.__value_.__r.__words[2] = *((void *)a2 + 3);
    }
  }
}

void sub_1D2C49784(_Unwind_Exception *a1)
{
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  uint64_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    uint64_t v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    uint64_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, __sz + 1);
}

uint64_t morphun::resources::CLASS_MUTEX(morphun::resources *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::resources::CLASS_MUTEX(void)::classMutex;
  if (!morphun::resources::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C49930(_Unwind_Exception *a1)
{
}

uint64_t morphun::resources::PATHS_MAP(morphun::resources *this)
{
  {
    operator new();
  }
  return morphun::resources::PATHS_MAP(void)::PATHS_MAP_;
}

void sub_1D2C499D8(_Unwind_Exception *a1)
{
}

uint64_t npc<std::map<std::string,std::string>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C49A40(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  unint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = std::less<std::string>::operator()[abi:ne180100](v3 + 4, a2);
    std::string::size_type v7 = v3 + 1;
    if (!v6)
    {
      std::string::size_type v7 = v3;
      uint64_t v5 = v3;
    }
    unint64_t v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<std::string>::operator()[abi:ne180100](a2, v5 + 4)) {
    return v2;
  }
  return v5;
}

void *std::basic_string<char16_t>::basic_string<std::u16string_view,0>(void *__dst, void *__src, unint64_t a3)
{
  if (a3 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a3 >= 0xB)
  {
    uint64_t v7 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB) {
      uint64_t v7 = a3 | 3;
    }
    BOOL v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v7 + 1);
    __dst[1] = a3;
    __dst[2] = v8 | 0x8000000000000000;
    *long long __dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = a3;
    BOOL v6 = __dst;
    if (!a3) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, 2 * a3);
LABEL_9:
  *((_WORD *)v6 + a3) = 0;
  return __dst;
}

void *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__find_equal<std::string>(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = v4 + 4;
        if (!std::less<std::string>::operator()[abi:ne180100](a3, v4 + 4)) {
          break;
        }
        uint64_t v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((unsigned char *)a1 + 16))
    {
      if (*(char *)(v1 + 79) < 0) {
        operator delete(*(void **)(v1 + 56));
      }
      if (*(char *)(v1 + 55) < 0) {
        operator delete(*(void **)(v1 + 32));
      }
    }
    operator delete((void *)v1);
  }
}

void morphun::resources::initLOCALE_FALLTHROUGH_BLACKLIST(morphun::resources *this)
{
}

void sub_1D2C49F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46)
{
  if (*(char *)(v46 + 55) < 0) {
    operator delete(*v47);
  }
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t *)(v48 - 112));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v48 - 128));
  _Unwind_Resume(a1);
}

void morphun::resources::DataRegistrationService::getDataPathForLocale(morphun::resources::DataRegistrationService *this@<X0>, std::string *a2@<X8>)
{
  morphun::resources::fallthroughLocaleString(&__p, this);
  uint64_t v5 = (std::mutex *)morphun::resources::CLASS_MUTEX(v4);
  std::mutex::lock(v5);
  uint64_t v7 = morphun::resources::PATHS_MAP(v6);
  npc<std::map<std::string,std::string>>(v7);
  uint64_t v8 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>(v7, &__p);
  if ((void *)(v7 + 8) == v8)
  {
    a2->__r_.__value_.__r.__words[0] = 0;
    a2->__r_.__value_.__l.__size_ = 0;
    a2->__r_.__value_.__r.__words[2] = 0;
  }
  else if (*((char *)v8 + 79) < 0)
  {
    std::string::__init_copy_ctor_external(a2, (const std::string::value_type *)v8[7], v8[8]);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)(v8 + 7);
    a2->__r_.__value_.__r.__words[2] = v8[9];
  }
  std::mutex::unlock(v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    BOOL v9 = (void *)__p.__r_.__value_.__r.__words[0];
    operator delete(v9);
  }
}

void sub_1D2C4A124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::mutex::unlock(v15);
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::exception::IOException::~IOException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::IOException::IOException(morphun::exception::IOException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11298;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11298;
  return result;
}

void *morphun::exception::IOException::IOException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11298;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11298;
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_cmn_Hans::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696DF48;
  uint64_t v4 = L"zh_Hans";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_cmn_Hant::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E695DE20;
  uint64_t v4 = L"zh_Hant";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_Hant::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695C458;
  v3[1] = *(_OWORD *)&off_1E695C468;
  v3[2] = xmmword_1E695C478;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::dialog::DictionaryLookupFunction::determinePhrase(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v36 = 0;
  uint64_t v8 = *(void *)(a1 + 16);
  int v9 = *(char *)(a2 + 23);
  if (v9 >= 0) {
    std::string::size_type v10 = (const UChar *)a2;
  }
  else {
    std::string::size_type v10 = *(const UChar **)a2;
  }
  if (v9 >= 0) {
    uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v11 = *(void *)(a2 + 8);
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v8, (uint64_t)&v36, v10, v11);
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)(*(void *)(a1 + 168) & v36));
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] == 1)
  {
    morphun::dictionary::DictionaryMetaData::getPropertyName(*(morphun::dictionary::DictionaryMetaData **)(a1 + 16), (int8x8_t)(*(void *)(a1 + 168) & v36), a4);
    return;
  }
  memset(v35, 0, 7);
  if (v36)
  {
    unint64_t v13 = 0;
    int v14 = 0;
    unsigned __int8 v15 = 0;
LABEL_47:
    *(void *)a4 = v13;
    *(void *)(a4 + 8) = v14;
    *(_DWORD *)(a4 + 16) = v35[0];
    *(_DWORD *)(a4 + 19) = *(_DWORD *)((char *)v35 + 3);
    *(unsigned char *)(a4 + 23) = v15;
    return;
  }
  uint64_t v16 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 160) + 24))(*(void *)(a1 + 160), a2);
  uint64_t v17 = npc<morphun::TokenChain>(v16);
  if ((*(int (**)(uint64_t))(*(void *)v17 + 32))(v17) < 2)
  {
    unint64_t v13 = 0;
    int v14 = 0;
    unsigned __int8 v15 = 0;
LABEL_46:
    (*(void (**)(uint64_t))(*(void *)v16 + 16))(v16);
    goto LABEL_47;
  }
  unint64_t v31 = 0;
  long long v18 = *(_OWORD *)(v16 + 8);
  uint64_t v19 = *(void *)(v16 + 16);
  uint64_t v29 = v16;
  if (v19) {
    uint64_t v20 = *(void *)(v19 + 80);
  }
  else {
    uint64_t v20 = 0;
  }
  unint64_t v21 = 0;
  int v14 = 0;
  while (1)
  {
    uint64_t v30 = *((void *)&v18 + 1);
    uint64_t v22 = v18;
    if (v20 == (void)v18) {
      break;
    }
    {
      if (!v21) {
      int v23 = *(char *)(v22 + 63);
      }
      uint64_t v24 = v23 >= 0 ? (const UChar *)(v22 + 40) : *(const UChar **)(v22 + 40);
      uint64_t v25 = v23 >= 0 ? *(unsigned __int8 *)(v22 + 63) : *(void *)(v22 + 48);
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 16), (uint64_t)&v31, v24, v25))
      {
        if ((*(void *)(a1 + 168) & v31) != 0)
        {
          if (a3) {
            break;
          }
        }
      }
    }
    npc<morphun::Token const>(v22);
    *((void *)&v18 + 1) = v30;
    *(void *)&long long v18 = *(void *)(v22 + 80);
  }
  if (!v14)
  {
    unsigned __int8 v15 = 0;
    unint64_t v13 = 0;
    goto LABEL_35;
  }
  morphun::dialog::DictionaryLookupFunction::determine(a1, (uint64_t)v14 + 16, &v31);
  unint64_t v13 = (void *)v31;
  int v14 = v32;
  v35[0] = *(_DWORD *)v33;
  *(_DWORD *)((char *)v35 + 3) = *(_DWORD *)&v33[3];
  unsigned __int8 v15 = v34;
  if (((char)v34 & 0x80000000) == 0)
  {
LABEL_35:
    int v26 = 0;
    unint64_t v27 = v15;
    goto LABEL_36;
  }
  int v26 = 1;
  unint64_t v27 = (unint64_t)v32;
LABEL_36:
  if (v27 || !v21)
  {
    uint64_t v16 = v29;
  }
  else
  {
    morphun::dialog::DictionaryLookupFunction::determine(a1, (uint64_t)v21 + 16, &v31);
    uint64_t v16 = v29;
    if (v26) {
      operator delete(v13);
    }
    unint64_t v13 = (void *)v31;
    int v14 = v32;
    v35[0] = *(_DWORD *)v33;
    *(_DWORD *)((char *)v35 + 3) = *(_DWORD *)&v33[3];
    unsigned __int8 v15 = v34;
  }
  if ((v15 & 0x80u) == 0) {
    unint64_t v28 = v15;
  }
  else {
    unint64_t v28 = (unint64_t)v14;
  }
  if (v28) {
    goto LABEL_46;
  }
  morphun::dialog::DictionaryLookupFunction::determine(a1, a2, (void *)a4);
  (*(void (**)(uint64_t))(*(void *)v16 + 16))(v16);
  if ((v15 & 0x80) != 0) {
    operator delete(v13);
  }
}

void sub_1D2C4A770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  (*(void (**)(uint64_t))(*(void *)a9 + 16))(a9);
  if (v9 < 0) {
    operator delete(v10);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C4A820(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v32 = 0;
  uint64_t v6 = *(void *)(a1 + 16);
  int v7 = *(char *)(a2 + 23);
  if (v7 >= 0) {
    uint64_t v8 = (const UChar *)a2;
  }
  else {
    uint64_t v8 = *(const UChar **)a2;
  }
  if (v7 >= 0) {
    uint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a2 + 8);
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v6, (uint64_t)&v32, v8, v9);
  int8x8_t v10 = (int8x8_t)(*(void *)(a1 + 168) & v32);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v10);
  v11.i16[0] = vaddlv_u8(v11);
  if (*(unsigned char *)(a1 + 200)) {
    BOOL v12 = v11.u32[0] == 1;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12)
  {
    morphun::dictionary::DictionaryMetaData::getPropertyName(*(morphun::dictionary::DictionaryMetaData **)(a1 + 16), v10, (uint64_t)a3);
  }
  else
  {
    int v13 = *(char *)(a2 + 23);
    if (v13 >= 0) {
      int v14 = (const UChar *)a2;
    }
    else {
      int v14 = *(const UChar **)a2;
    }
    if (v13 >= 0) {
      std::basic_string<char16_t>::size_type v15 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::basic_string<char16_t>::size_type v15 = *(void *)(a2 + 8);
    }
    morphun::analysis::DictionaryExposableMorphology::getwordGrammemesets(&v33, a1 + 8, v14, v15);
    uint64_t v16 = v33;
    uint64_t v17 = v34;
    if (v33 == v34)
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
    }
    else
    {
      uint64_t v18 = (uint64_t)(*(void *)(a1 + 184) - *(void *)(a1 + 176)) >> 3;
      unint64_t v19 = v18 + 1;
      if (v18 == -1)
      {
        uint64_t v20 = 0;
        unint64_t v21 = 0;
      }
      else
      {
        if (v19 >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v18 + 1);
        unint64_t v21 = v22;
        uint64_t v23 = 0;
        uint64_t v20 = &v22[8 * v19];
        do
        {
          *(void *)&v22[v23] = 0;
          v23 += 8;
        }
        while (8 * v18 + 8 != v23);
      }
      uint64_t v24 = *(void **)(a1 + 176);
      uint64_t v25 = *(void **)(a1 + 184);
      uint64_t v26 = v25 - v24;
      unint64_t v27 = v16;
      do
      {
        uint64_t v28 = *v27;
        if (v24 == v25)
        {
          uint64_t v29 = 0;
        }
        else
        {
          uint64_t v29 = 0;
          uint64_t v30 = v24;
          while ((*v30 & v28) == 0)
          {
            ++v29;
            if (++v30 == v25) {
              goto LABEL_34;
            }
          }
          *(void *)&v21[8 * v29] |= v28;
        }
LABEL_34:
        if (v29 == v26) {
          *(void *)&v21[8 * v26] |= v28;
        }
        ++v27;
      }
      while (v27 != v17);
      if (v21 == v20)
      {
LABEL_41:
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      else
      {
        unint64_t v31 = v21;
        while (!*(void *)v31)
        {
          v31 += 8;
          if (v31 == v20) {
            goto LABEL_41;
          }
        }
        morphun::dictionary::DictionaryMetaData::getPropertyName(*(morphun::dictionary::DictionaryMetaData **)(a1 + 16), (int8x8_t)(*(void *)(a1 + 168) & *(void *)v31), (uint64_t)a3);
      }
      if (v21) {
        operator delete(v21);
      }
    }
    if (v16) {
      operator delete(v16);
    }
  }
}

void sub_1D2C4AA48(_Unwind_Exception *exception_object)
{
  if (v2) {
    operator delete(v2);
  }
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<long long>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  double result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

uint64_t morphun::dialog::DictionaryLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 32))(__p, a1, v3);
  unint64_t v4 = v7;
  if ((v7 & 0x80u) != 0) {
    unint64_t v4 = (unint64_t)__p[1];
  }
  if (v4) {
    operator new();
  }
  if ((v7 & 0x80) != 0) {
    operator delete(__p[0]);
  }
  return 0;
}

void sub_1D2C4AB90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x10B3C40F7FF9C27);
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(morphun::dialog::DictionaryLookupFunction *this)
{
  *(void *)this = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction(uint64_t *a1, uint64_t *a2, const morphun::util::ULocale *a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v4 - 56)) = a2[1];
  *(uint64_t *)((char *)a1 + *(void *)(*a1 - 40)) = a2[2];
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 1), a3);
  morphun::TokenizerFactory::createTokenizer(a3, v5);
}

{
  uint64_t v4;
  const morphun::util::ULocale *v5;

  uint64_t v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v4 - 56)) = a2[1];
  *(uint64_t *)((char *)a1 + *(void *)(*a1 - 40)) = a2[2];
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 1), a3);
  morphun::TokenizerFactory::createTokenizer(a3, v5);
}

void sub_1D2C4AE94(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 176);
  if (v3)
  {
    *(void *)(v1 + 184) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void *)(v1 + 160);
  *(void *)(v1 + 160) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *(void *)(v1 + 8) = &unk_1F2A0FEF8;
  _Unwind_Resume(a1);
}

void sub_1D2C4AF64(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::Validate::notNull<long long>(uint64_t result)
{
  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &__dst);
  }
  return result;
}

void sub_1D2C4AFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction(void *a1, const morphun::util::ULocale *a2)
{
  *a1 = &unk_1F2A095F0;
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 1), a2);
  morphun::TokenizerFactory::createTokenizer(a2, v3);
}

{
  const morphun::util::ULocale *v3;

  *a1 = &unk_1F2A095F0;
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 1), a2);
  morphun::TokenizerFactory::createTokenizer(a2, v3);
}

void sub_1D2C4B0C4(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 176);
  if (v3)
  {
    *(void *)(v1 + 184) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void *)(v1 + 160);
  *(void *)(v1 + 160) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *(void *)(v1 + 8) = &unk_1F2A0FEF8;
  _Unwind_Resume(a1);
}

void sub_1D2C4B2AC(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 + 160);
  *(void *)(v1 + 160) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *(void *)(v1 + 8) = &unk_1F2A0FEF8;
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::convertDisambiguationPartsOfSpeech(uint64_t a1, uint64_t a2, long long **a3)
{
  *(void *)&long long v28 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  std::vector<long long>::reserve((void **)a1, 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  uint64_t v5 = *a3;
  uint64_t v6 = a3[1];
  if (*a3 != v6)
  {
    do
    {
      if (*((char *)v5 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v27, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
      }
      else
      {
        long long v7 = *v5;
        v27.__r_.__value_.__r.__words[2] = *((void *)v5 + 2);
        *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v7;
      }
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = &v22;
      char v26 = 0;
      uint64_t v22 = (std::basic_string<char16_t> *)operator new(0x18uLL);
      uint64_t v23 = v22;
      uint64_t v24 = v22 + 1;
      uint64_t v23 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v24, (long long *)&v27, &v28, v22);
      uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2, (uint64_t *)&v22);
      uint64_t v9 = BinaryProperties;
      uint8x8_t v11 = *(uint64_t **)(a1 + 8);
      unint64_t v10 = *(void *)(a1 + 16);
      if ((unint64_t)v11 >= v10)
      {
        int v13 = *(uint64_t **)a1;
        uint64_t v14 = ((uint64_t)v11 - *(void *)a1) >> 3;
        unint64_t v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v16 = v10 - (void)v13;
        if (v16 >> 2 > v15) {
          unint64_t v15 = v16 >> 2;
        }
        if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v17 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v15;
        }
        if (v17) {
          unint64_t v17 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v17);
        }
        else {
          uint64_t v18 = 0;
        }
        unint64_t v19 = (uint64_t *)(v17 + 8 * v14);
        *unint64_t v19 = v9;
        BOOL v12 = v19 + 1;
        while (v11 != v13)
        {
          uint64_t v20 = *--v11;
          *--unint64_t v19 = v20;
        }
        *(void *)a1 = v19;
        *(void *)(a1 + 8) = v12;
        *(void *)(a1 + 16) = v17 + 8 * v18;
        if (v13) {
          operator delete(v13);
        }
      }
      else
      {
        *uint8x8_t v11 = BinaryProperties;
        BOOL v12 = v11 + 1;
      }
      *(void *)(a1 + 8) = v12;
      uint64_t v25 = &v22;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v25);
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v27.__r_.__value_.__l.__data_);
      }
      uint64_t v5 = (long long *)((char *)v5 + 24);
    }
    while (v5 != v6);
  }
}

void sub_1D2C4B530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v22 = *(void **)v20;
  if (*(void *)v20)
  {
    *(void *)(v20 + 8) = v22;
    operator delete(v22);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<long long>::reserve(void **a1, unint64_t a2)
{
  if (a2 > ((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    int64_t v3 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v4 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(a2);
    uint64_t v5 = &v4[v3 & 0xFFFFFFFFFFFFFFF8];
    long long v7 = &v4[8 * v6];
    uint64_t v8 = (char *)*a1;
    uint64_t v9 = (char *)a1[1];
    unint64_t v10 = v5;
    if (v9 != *a1)
    {
      unint64_t v10 = v5;
      do
      {
        uint64_t v11 = *((void *)v9 - 1);
        v9 -= 8;
        *((void *)v10 - 1) = v11;
        v10 -= 8;
      }
      while (v9 != v8);
    }
    *a1 = v10;
    a1[1] = v5;
    a1[2] = v7;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

void sub_1D2C4B6E8(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 + 160);
  *(void *)(v1 + 160) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *(void *)(v1 + 8) = &unk_1F2A0FEF8;
  _Unwind_Resume(a1);
}

void morphun::dialog::DictionaryLookupFunction::getFirstWord(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a3);
  uint64_t v5 = npc<morphun::TokenChain>(v4);
  long long v6 = *(_OWORD *)(v5 + 8);
  uint64_t v7 = *(void *)(v5 + 16);
  if (v7) {
    uint64_t v8 = *(void *)(v7 + 80);
  }
  else {
    uint64_t v8 = 0;
  }
  while (1)
  {
    uint64_t v11 = *((void *)&v6 + 1);
    uint64_t v9 = v6;
    if (v8 == (void)v6)
    {
      a1->__r_.__value_.__r.__words[0] = 0;
      a1->__r_.__value_.__l.__size_ = 0;
      a1->__r_.__value_.__r.__words[2] = 0;
      goto LABEL_11;
    }
    {
      break;
    }
    npc<morphun::Token const>(v9);
    *((void *)&v6 + 1) = v11;
    *(void *)&long long v6 = *(void *)(v9 + 80);
  }
  if (*(char *)(v9 + 63) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)(v9 + 40), *(void *)(v9 + 48));
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(v9 + 40);
    a1->__r_.__value_.__r.__words[2] = *(void *)(v9 + 56);
  }
LABEL_11:
  if (v4)
  {
    unint64_t v10 = *(void (**)(uint64_t))(*(void *)v4 + 16);
    v10(v4);
  }
}

void sub_1D2C4B8F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::tokenizer::locale::fi::FiCompound::FiCompound(uint64_t a1, uint64_t a2)
{
  npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(a2);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = a2;
  uint64_t v4 = npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(a2);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 8);
  npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(v4);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 12);
  return a1;
}

uint64_t npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C4B9D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::fi::FiCompound::addBoundaries(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 <= 0)
  {
    exception = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(exception + 8) = 0u;
    *(_OWORD *)(exception + 24) = 0u;
    *(_OWORD *)(exception + 40) = 0u;
    *(void *)exception = &unk_1F2A11488;
  }
  if (!*(unsigned char *)(npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(void *)(a1 + 8)) + 12))
  {
    *(_DWORD *)(a1 + 16) = -990248960;
    *(unsigned char *)(a1 + 20) = 0;
    uint64_t v7 = (uint64_t *)npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(void *)(a1 + 8));
    int v8 = *(_DWORD *)(npc<morphun::tokenizer::locale::fi::FiSegment>(*v7) + 64);
    uint64_t v9 = (uint64_t *)npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(void *)(a1 + 8));
    int v10 = *(_DWORD *)(npc<morphun::tokenizer::locale::fi::FiSegment>(*v9) + 68);
    int v11 = v8 + 3;
    if (v8 + 3 >= v10 - 2) {
      return;
    }
    unsigned int v32 = a2 - 1;
    while (1)
    {
      morphun::tokenizer::locale::fi::FiSegment::FiSegment((uint64_t)v51, *(void *)a1, v8, v11, 0);
      uint64_t v48 = 0;
      std::basic_string<char16_t> v49 = 0;
      uint64_t v50 = 0;
      morphun::tokenizer::locale::fi::FiSegment::addBoundaries((uint64_t)v51, (int **)&v48);
      if (v53) {
        break;
      }
      uint64_t v41 = v51;
      *(float *)&int v42 = -1000.0;
      char v43 = 0;
      std::basic_string<char16_t> v49 = (char *)v48;
      morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries((uint64_t)&v41, (int **)&v48, 1);
      BOOL v12 = v43 != 0;
      if (!*(unsigned char *)(a1 + 20) || v43)
      {
        float v13 = *(float *)&v42;
        goto LABEL_13;
      }
LABEL_49:
      if (v48)
      {
        std::basic_string<char16_t> v49 = (char *)v48;
        operator delete(v48);
      }
      if (++v11 == v10 - 2) {
        return;
      }
    }
    BOOL v12 = 1;
    float v13 = v52;
LABEL_13:
    morphun::tokenizer::locale::fi::FiSegment::FiSegment((uint64_t)&v41, *(void *)a1, v11, v10, 1);
    std::string __p = 0;
    int v39 = 0;
    uint64_t v40 = 0;
    morphun::tokenizer::locale::fi::FiSegment::addBoundaries((uint64_t)&v41, (int **)&__p);
    if (v47)
    {
      float v14 = v44;
    }
    else
    {
      uint64_t v35 = &v41;
      *(float *)&int v36 = -1000.0;
      char v37 = 0;
      int v39 = (char *)__p;
      morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries((uint64_t)&v35, (int **)&__p, 0);
      float v14 = *(float *)&v36;
      if (!v37)
      {
        char v15 = !v12;
        if (*(unsigned char *)(a1 + 20)) {
          char v15 = 1;
        }
        if ((v15 & 1) != 0 || v46 - v45 < 7)
        {
          BOOL v12 = 0;
        }
        else
        {
          morphun::tokenizer::locale::fi::FiCompound::FiCompound((uint64_t)v33, (uint64_t)&v35);
          int v39 = (char *)__p;
          morphun::tokenizer::locale::fi::FiCompound::addBoundaries(v33, v32, &__p);
          BOOL v12 = 0;
          float v14 = v34;
        }
      }
    }
    float v16 = v13 + v14;
    if (v16 > *(float *)(a1 + 16)) {
      goto LABEL_26;
    }
    char v17 = !v12;
    if (*(unsigned char *)(a1 + 20)) {
      char v17 = 1;
    }
    if ((v17 & 1) == 0)
    {
LABEL_26:
      npc<std::vector<int>>(a3);
      uint64_t v18 = *(int **)a3;
      *(void *)(a3 + 8) = *(void *)a3;
      if (v48 != v49)
      {
        std::vector<int>::__insert_with_size[abi:ne180100]<std::__wrap_iter<int *>,std::__wrap_iter<int *>>(a3, (char *)v18, (char *)v48, v49, (v49 - (unsigned char *)v48) >> 2);
        uint64_t v18 = *(int **)(a3 + 8);
      }
      unint64_t v19 = *(void *)(a3 + 16);
      if ((unint64_t)v18 >= v19)
      {
        unint64_t v21 = *(int **)a3;
        uint64_t v22 = ((uint64_t)v18 - *(void *)a3) >> 2;
        unint64_t v23 = v22 + 1;
        if ((unint64_t)(v22 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v24 = v19 - (void)v21;
        if (v24 >> 1 > v23) {
          unint64_t v23 = v24 >> 1;
        }
        BOOL v25 = (unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL;
        unint64_t v26 = 0x3FFFFFFFFFFFFFFFLL;
        if (!v25) {
          unint64_t v26 = v23;
        }
        if (v26)
        {
          unint64_t v26 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v26);
          uint64_t v28 = v27;
          unint64_t v21 = *(int **)a3;
          uint64_t v18 = *(int **)(a3 + 8);
        }
        else
        {
          uint64_t v28 = 0;
        }
        uint64_t v29 = (int *)(v26 + 4 * v22);
        int *v29 = v11;
        uint64_t v20 = (char *)(v29 + 1);
        while (v18 != v21)
        {
          int v30 = *--v18;
          *--uint64_t v29 = v30;
        }
        *(void *)a3 = v29;
        *(void *)(a3 + 8) = v20;
        *(void *)(a3 + 16) = v26 + 4 * v28;
        if (v21) {
          operator delete(v21);
        }
      }
      else
      {
        int *v18 = v11;
        uint64_t v20 = (char *)(v18 + 1);
      }
      *(void *)(a3 + 8) = v20;
      if (__p != v39) {
        std::vector<int>::__insert_with_size[abi:ne180100]<std::__wrap_iter<int *>,std::__wrap_iter<int *>>(a3, v20, (char *)__p, v39, (v39 - (unsigned char *)__p) >> 2);
      }
      *(float *)(a1 + 16) = v16;
      if (v12) {
        *(unsigned char *)(a1 + 20) = 1;
      }
    }
    if (__p)
    {
      int v39 = (char *)__p;
      operator delete(__p);
    }
    goto LABEL_49;
  }
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(void *)(a1 + 8)) + 8);
  uint64_t v6 = npc<morphun::tokenizer::locale::fi::FiSuffixSplit>(*(void *)(a1 + 8));

  morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries(v6, (int **)a3, 0);
}

void sub_1D2C4BDFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  if (__p) {
    operator delete(__p);
  }
  if (a29) {
    operator delete(a29);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<std::vector<int>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C4BE9C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::vector<int>::__insert_with_size[abi:ne180100]<std::__wrap_iter<int *>,std::__wrap_iter<int *>>(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  if (a5 < 1) {
    return;
  }
  uint64_t v6 = __src;
  unint64_t v10 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (a5 > (uint64_t)(v9 - v10) >> 2)
  {
    int v11 = *(char **)a1;
    unint64_t v12 = a5 + ((uint64_t)(v10 - *(void *)a1) >> 2);
    if (v12 >> 62) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = (__dst - v11) >> 2;
    uint64_t v14 = v9 - (void)v11;
    if (v14 >> 1 > v12) {
      unint64_t v12 = v14 >> 1;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v12;
    }
    if (v15) {
      unint64_t v15 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v15);
    }
    else {
      uint64_t v16 = 0;
    }
    unint64_t v26 = (_DWORD *)(v15 + 4 * v13);
    uint64_t v27 = (char *)&v26[a5];
    uint64_t v28 = 4 * a5;
    uint64_t v29 = v26;
    do
    {
      int v30 = *(_DWORD *)v6;
      v6 += 4;
      *v29++ = v30;
      v28 -= 4;
    }
    while (v28);
    unint64_t v31 = *(char **)a1;
    if (*(char **)a1 != __dst)
    {
      unsigned int v32 = __dst;
      do
      {
        int v33 = *((_DWORD *)v32 - 1);
        v32 -= 4;
        *--unint64_t v26 = v33;
      }
      while (v32 != v31);
    }
    unint64_t v34 = v15 + 4 * v16;
    uint64_t v35 = *(unsigned char **)(a1 + 8);
    uint64_t v36 = v35 - __dst;
    if (v35 != __dst) {
      memmove(v27, __dst, v35 - __dst);
    }
    char v37 = *(char **)a1;
    *(void *)a1 = v26;
    *(void *)(a1 + 8) = &v27[v36];
    *(void *)(a1 + 16) = v34;
    if (v37)
    {
      operator delete(v37);
    }
    return;
  }
  uint64_t v17 = v10 - (void)__dst;
  uint64_t v18 = (uint64_t)(v10 - (void)__dst) >> 2;
  if (v18 >= a5)
  {
    unint64_t v19 = &__src[4 * a5];
    unint64_t v21 = *(char **)(a1 + 8);
LABEL_17:
    uint64_t v22 = &__dst[4 * a5];
    unint64_t v23 = &v21[-4 * a5];
    uint64_t v24 = v21;
    if ((unint64_t)v23 < v10)
    {
      uint64_t v24 = v21;
      do
      {
        int v25 = *(_DWORD *)v23;
        v23 += 4;
        *(_DWORD *)uint64_t v24 = v25;
        v24 += 4;
      }
      while ((unint64_t)v23 < v10);
    }
    *(void *)(a1 + 8) = v24;
    if (v21 != v22) {
      memmove(&v21[-4 * ((v21 - v22) >> 2)], __dst, v21 - v22);
    }
    if (v19 != v6)
    {
      memmove(__dst, v6, v19 - v6);
    }
    return;
  }
  unint64_t v19 = &__src[4 * v18];
  int64_t v20 = a4 - v19;
  if (a4 != v19) {
    memmove(*(void **)(a1 + 8), &__src[4 * v18], a4 - v19);
  }
  unint64_t v21 = (char *)(v10 + v20);
  *(void *)(a1 + 8) = v10 + v20;
  if (v17 >= 1) {
    goto LABEL_17;
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(unint64_t a1)
{
  if (a1 >> 62) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(4 * a1);
}

uint64_t morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[3]);
  uint64_t v7 = v6;
  int v8 = (void *)(a3 + 8);
  if ((void *)(a3 + 8) == v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = (unsigned __int16 *)(v6 + 13);
  }
  {
    operator new();
  }
  if (v8 == v7) {
    goto LABEL_16;
  }
  uint64_t v10 = morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounCount>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v13 = *(void *)(v10 + 8);
  uint64_t v11 = v10 + 8;
  uint64_t v12 = v13;
  if (!v13) {
    goto LABEL_13;
  }
  uint64_t v14 = v11;
  do
  {
    BOOL v15 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v12 + 32), v9);
    uint64_t v16 = (uint64_t *)(v12 + 8);
    if (!v15)
    {
      uint64_t v16 = (uint64_t *)v12;
      uint64_t v14 = v12;
    }
    uint64_t v12 = *v16;
  }
  while (*v16);
  if (v14 == v11
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v9, (unsigned __int16 *)(v14 + 32)))
  {
LABEL_13:
    uint64_t v14 = v11;
  }
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounCount>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v14)
LABEL_16:
    uint64_t v17 = 0;
  else {
    uint64_t v17 = *(unsigned int *)(v14 + 56);
  }
  uint64_t v18 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[4]);
  unint64_t v19 = v18;
  if (v8 == v18) {
    int64_t v20 = 0;
  }
  else {
    int64_t v20 = (unsigned __int16 *)(v18 + 13);
  }
  {
    operator new();
  }
  if (v8 == v19) {
    goto LABEL_32;
  }
  uint64_t v21 = morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounGender>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v24 = *(void *)(v21 + 8);
  uint64_t v22 = v21 + 8;
  uint64_t v23 = v24;
  if (!v24) {
    goto LABEL_29;
  }
  uint64_t v25 = v22;
  do
  {
    BOOL v26 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v23 + 32), v20);
    uint64_t v27 = (uint64_t *)(v23 + 8);
    if (!v26)
    {
      uint64_t v27 = (uint64_t *)v23;
      uint64_t v25 = v23;
    }
    uint64_t v23 = *v27;
  }
  while (*v27);
  if (v25 == v22
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v20, (unsigned __int16 *)(v25 + 32)))
  {
LABEL_29:
    uint64_t v25 = v22;
  }
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounGender>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPronounGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v25)
LABEL_32:
    uint64_t v28 = 0;
  else {
    uint64_t v28 = *(unsigned int *)(v25 + 56);
  }
  uint64_t v29 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[5]);
  int v30 = v29;
  if (v8 == v29) {
    unint64_t v31 = 0;
  }
  else {
    unint64_t v31 = (unsigned __int16 *)(v29 + 13);
  }
  {
    operator new();
  }
  if (v8 == v30) {
    goto LABEL_48;
  }
  uint64_t v32 = morphun::grammar::synthesis::ArGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::Person>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v35 = *(void *)(v32 + 8);
  uint64_t v33 = v32 + 8;
  uint64_t v34 = v35;
  if (!v35) {
    goto LABEL_45;
  }
  uint64_t v36 = v33;
  do
  {
    BOOL v37 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v34 + 32), v31);
    std::basic_string<char16_t>::size_type v38 = (uint64_t *)(v34 + 8);
    if (!v37)
    {
      std::basic_string<char16_t>::size_type v38 = (uint64_t *)v34;
      uint64_t v36 = v34;
    }
    uint64_t v34 = *v38;
  }
  while (*v38);
  if (v36 == v33
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v31, (unsigned __int16 *)(v36 + 32)))
  {
LABEL_45:
    uint64_t v36 = v33;
  }
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::Person>>(morphun::grammar::synthesis::ArGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v36)
LABEL_48:
    uint64_t v39 = 0;
  else {
    uint64_t v39 = *(unsigned int *)(v36 + 56);
  }
  uint64_t v40 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 72);

  return v40(a1, a2, v17, v28, v39);
}

void sub_1D2C4CC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  while (1)
  {
    if (*((char *)v20 - 9) < 0) {
      operator delete(*(v20 - 4));
    }
    v20 -= 4;
    if (v20 == &__p)
    {
      MEMORY[0x1D942B8B0](a11, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction::ArGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_ArticleLookupFunction *this, const morphun::dialog::SemanticFeatureModel *a2, uint64_t a3)
{
  uint64_t v6 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(this, (const morphun::dialog::SemanticFeatureModel *)((char *)a2 + 8), a3, 1, 0);
  uint64_t v7 = *(void *)a2;
  *(void *)uint64_t v6 = *(void *)a2;
  *(void *)((char *)this + *(void *)(v7 - 56)) = *((void *)a2 + 4);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 5);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"countPronoun");
  uint64_t v8 = a3 + 8;
  uint64_t v9 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, (unsigned __int16 *)__p);
  uint64_t v10 = a3 + 16;
  if (a3 + 16 == v9) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(v9 + 56);
  }
  npc<morphun::dialog::SemanticFeature const>(v11);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  *((void *)this + 3) = v11;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "g");
  uint64_t v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v8, (unsigned __int16 *)__p);
  if (v10 == v12) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = *(void *)(v12 + 56);
  }
  npc<morphun::dialog::SemanticFeature const>(v13);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  *((void *)this + 4) = v13;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"person");
  uint64_t v14 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v8, (unsigned __int16 *)__p);
  if (v10 == v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = *(void *)(v14 + 56);
  }
  npc<morphun::dialog::SemanticFeature const>(v15);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  *((void *)this + 5) = v15;
  return this;
}

void sub_1D2C4D038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2C4D0BC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(void *)(a2 + 8), *(void *)(a2 + 16), a3);
  uint64_t v8 = TheBestDisplayValue;
  if (!TheBestDisplayValue) {
    return v8;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v123, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    v123.__r_.__value_.__r.__words[2] = *(void *)(v9 + 16);
    *(_OWORD *)&v123.__r_.__value_.__l.__data_ = v10;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(v123.__r_.__value_.__r.__words[2]);
  if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v123.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    uint64_t v8 = 0;
    if ((*((unsigned char *)&v123.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_215;
    }
    return v8;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v122, v8, a3);
  long long v118 = *((_OWORD *)a1 + 1);
  uint64_t v12 = operator new(0x10uLL);
  _OWORD *v12 = v118;
  BOOL hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v12, (uint64_t)(v12 + 1));
  operator delete(v12);
  if (!hasAnyFeatures) {
LABEL_213:
  }
    operator new();
  uint64_t v14 = a1[23];
  if (!v14)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v15 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v14 + 24))(v14, &v123);
  npc<morphun::TokenChain>(v15);
  uint64_t v113 = v15;
  npc<morphun::TokenChain>(v15);
  memset(&v126, 0, sizeof(v126));
  long long v17 = *(_OWORD *)(v15 + 8);
  uint64_t v18 = *(void *)(v15 + 16);
  char v114 = a4;
  if (v18) {
    uint64_t v19 = *(void *)(v18 + 80);
  }
  else {
    uint64_t v19 = 0;
  }
  char v20 = 0;
  uint64_t v21 = (uint64_t)(a1 + 16);
  uint64_t v22 = a1 + 17;
  v115 = a1 + 16;
  uint64_t v116 = (uint64_t)(a1 + 24);
  while (1)
  {
    uint64_t v119 = *((void *)&v17 + 1);
    uint64_t v23 = v17;
    if (v19 == (void)v17)
    {
      std::basic_string<char16_t> v120 = v126;
      char v121 = 1;
LABEL_209:
      std::basic_string<char16_t>::operator=(&v123, &v120);
      if (v121 && SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v120.__r_.__value_.__l.__data_);
      }
      (*(void (**)(uint64_t))(*(void *)v113 + 16))(v113);
      goto LABEL_213;
    }
    uint64_t v24 = (_OWORD *)(v17 + 16);
    if (morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection((morphun::grammar::synthesis::GrammarSynthesizerUtil *)v17, v16))
    {
      break;
    }
    int v28 = *(char *)(v23 + 39);
    if (v28 >= 0) {
      uint64_t v29 = (const std::basic_string<char16_t>::value_type *)(v23 + 16);
    }
    else {
      uint64_t v29 = *(const std::basic_string<char16_t>::value_type **)(v23 + 16);
    }
    if (v28 >= 0) {
      std::basic_string<char16_t>::size_type v30 = *(unsigned __int8 *)(v23 + 39);
    }
    else {
      std::basic_string<char16_t>::size_type v30 = *(void *)(v23 + 24);
    }
    std::basic_string<char16_t>::append(&v126, v29, v30);
LABEL_186:
    npc<morphun::Token const>(v23);
    *((void *)&v17 + 1) = v119;
    *(void *)&long long v17 = *(void *)(v23 + 80);
  }
  if (v22 != (uint64_t *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v21, (unsigned __int16 *)(v23 + 16)))
  {
    int v25 = *(char *)(v23 + 39);
    if (v25 >= 0) {
      BOOL v26 = (const std::basic_string<char16_t>::value_type *)(v23 + 16);
    }
    else {
      BOOL v26 = *(const std::basic_string<char16_t>::value_type **)(v23 + 16);
    }
    if (v25 >= 0) {
      std::basic_string<char16_t>::size_type v27 = *(unsigned __int8 *)(v23 + 39);
    }
    else {
      std::basic_string<char16_t>::size_type v27 = *(void *)(v23 + 24);
    }
    std::basic_string<char16_t>::append(&v126, v26, v27);
    char v20 = 1;
    goto LABEL_186;
  }
  if (v20)
  {
    int v31 = *(char *)(v23 + 39);
    if (v31 >= 0) {
      uint64_t v32 = (const std::basic_string<char16_t>::value_type *)(v23 + 16);
    }
    else {
      uint64_t v32 = *(const std::basic_string<char16_t>::value_type **)(v23 + 16);
    }
    if (v31 >= 0) {
      std::basic_string<char16_t>::size_type v33 = *(unsigned __int8 *)(v23 + 39);
    }
    else {
      std::basic_string<char16_t>::size_type v33 = *(void *)(v23 + 24);
    }
    std::basic_string<char16_t>::append(&v126, v32, v33);
LABEL_185:
    char v20 = 0;
    goto LABEL_186;
  }
  int v34 = *(char *)(v23 + 39);
  if (v34 >= 0) {
    uint64_t v35 = (void *)(v23 + 16);
  }
  else {
    uint64_t v35 = *(void **)(v23 + 16);
  }
  if (v34 >= 0) {
    unint64_t v36 = *(unsigned __int8 *)(v23 + 39);
  }
  else {
    unint64_t v36 = *(void *)(v23 + 24);
  }
  BOOL v37 = (uint64_t *)operator new(0x10uLL);
  std::basic_string<char16_t>::size_type v38 = v22;
  *(_OWORD *)BOOL v37 = *((_OWORD *)a1 + 1);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v133, a3, v37, v37 + 2);
  operator delete(v37);
  uint64_t v39 = a1;
  uint64_t v40 = a1[4];
  uint64_t v41 = (uint64_t *)operator new(8uLL);
  *uint64_t v41 = v40;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v132, a3, v41, v41 + 1);
  operator delete(v41);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)&v130, v116, v35, v36, &v133, &v132);
  a1 = v39;
  uint64_t v22 = v38;
  if (v131)
  {
    int v117 = v131;
    if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v124, v130.__r_.__value_.__l.__data_, v130.__r_.__value_.__l.__size_);
    }
    else {
      std::basic_string<char16_t> v124 = v130;
    }
    uint64_t v21 = (uint64_t)v115;
    char v125 = 1;
    goto LABEL_165;
  }
  if ((v114 & 1) == 0)
  {
    LOBYTE(v124.__r_.__value_.__l.__data_) = 0;
    char v125 = 0;
    uint64_t v21 = (uint64_t)v115;
    goto LABEL_168;
  }
  int v117 = v131;
  if (v36 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (v36 >= 0xB)
  {
    uint64_t v43 = (v36 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v36 | 3) != 0xB) {
      uint64_t v43 = v36 | 3;
    }
    p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v43 + 1);
    __dst.__r_.__value_.__l.__size_ = v36;
    __dst.__r_.__value_.__r.__words[2] = v44 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    goto LABEL_61;
  }
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v36;
  p_dst = &__dst;
  if (v36) {
LABEL_61:
  }
    memmove(p_dst, v35, 2 * v36);
  p_dst->__r_.__value_.__s.__data_[v36] = 0;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v134, a3, a1[2]);
  uint64_t v46 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v45);
  if ((v134.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v47 = HIBYTE(v134.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v47 = v134.__r_.__value_.__l.__size_;
  }
  uint64_t v48 = *(unsigned __int8 *)(v46 + 23);
  int v49 = (char)v48;
  if ((v48 & 0x80u) != 0) {
    uint64_t v48 = *(void *)(v46 + 8);
  }
  if (v47 != v48)
  {
    BOOL v59 = 0;
    goto LABEL_82;
  }
  if (v47)
  {
    if (v49 >= 0) {
      uint64_t v50 = (unsigned __int16 *)v46;
    }
    else {
      uint64_t v50 = *(unsigned __int16 **)v46;
    }
    std::basic_string<char16_t> v51 = (std::basic_string<char16_t> *)v134.__r_.__value_.__r.__words[0];
    if ((v134.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v51 = &v134;
    }
    std::basic_string<char16_t>::size_type v52 = v47 - 1;
    do
    {
      int v54 = (unsigned __int16)v51->__r_.__value_.__s.__data_[0];
      std::basic_string<char16_t> v51 = (std::basic_string<char16_t> *)((char *)v51 + 2);
      int v53 = v54;
      int v56 = *v50++;
      int v55 = v56;
      BOOL v58 = v52-- != 0;
      BOOL v59 = v55 == v53;
    }
    while (v55 == v53 && v58);
LABEL_82:
    if ((SHIBYTE(v134.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_83:
      if (!v59) {
        goto LABEL_164;
      }
LABEL_87:
      if (v36 >= 0xB)
      {
        uint64_t v61 = (v36 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v36 | 3) != 0xB) {
          uint64_t v61 = v36 | 3;
        }
        p_str = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v61 + 1);
        __str.__r_.__value_.__l.__size_ = v36;
        __str.__r_.__value_.__r.__words[2] = v62 | 0x8000000000000000;
        __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_str;
      }
      else
      {
        *((unsigned char *)&__str.__r_.__value_.__s + 23) = v36;
        p_str = &__str;
        if (!v36)
        {
LABEL_94:
          p_str[v36] = 0;
          int v63 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v64 = &__str;
          }
          else {
            v64 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
          }
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v65 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v65 = __str.__r_.__value_.__l.__size_;
          }
          if (v65 > 2)
          {
            v134.__r_.__value_.__r.__words[0] = 0;
            if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[1], (uint64_t)&v134, (const UChar *)v64, v65))goto LABEL_109; {
            if ((a1[20] & v134.__r_.__value_.__r.__words[0]) != 0)
            }
              goto LABEL_103;
            if ((a1[19] & v134.__r_.__value_.__r.__words[0]) != 0)
            {
LABEL_109:
              std::basic_string<char16_t>::size_type v69 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              unsigned int v70 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
LABEL_110:
              std::basic_string<char16_t>::size_type v68 = __str.__r_.__value_.__l.__size_;
              if (v70) {
                std::basic_string<char16_t>::size_type v71 = __str.__r_.__value_.__l.__size_;
              }
              else {
                std::basic_string<char16_t>::size_type v71 = v69;
              }
              if (!v71) {
                goto LABEL_117;
              }
              int v67 = (const std::basic_string<char16_t>::value_type *)__str.__r_.__value_.__r.__words[0];
              BOOL v81 = v70 == 0;
              long long v72 = &__str;
              if (!v81) {
                long long v72 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
              }
              if (v72->__r_.__value_.__s.__data_[v71 - 1] != 115)
              {
LABEL_117:
                int v73 = (char)v69;
                if ((v69 & 0x80u) == 0) {
                  std::basic_string<char16_t>::size_type v74 = v69;
                }
                else {
                  std::basic_string<char16_t>::size_type v74 = __str.__r_.__value_.__l.__size_;
                }
                if (v74)
                {
                  int v67 = (const std::basic_string<char16_t>::value_type *)__str.__r_.__value_.__r.__words[0];
                  int32_t v75 = &__str;
                  if ((v69 & 0x80u) != 0) {
                    int32_t v75 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                  }
                  if (((unsigned __int16)v75->__r_.__value_.__s.__data_[v74 - 1] | 2) == 0x7A) {
                    goto LABEL_124;
                  }
                  if (v74 >= 3)
                  {
                    uint64_t v82 = 0;
                    v83 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                    if (v73 >= 0) {
                      v83 = &__str;
                    }
                    uint64_t v84 = (uint64_t)v83 + 2 * v74 - 6;
                    do
                    {
                      int v85 = *(unsigned __int16 *)(v84 + v82 * 2);
                      int v86 = (unsigned __int16)aEau[v82];
                    }
                    while (v86 == v85 && v82++ != 2);
                    if (v86 == v85) {
                      goto LABEL_196;
                    }
                  }
                  std::basic_string<char16_t>::size_type v88 = v74 - 2;
                  if (v74 < 2) {
                    goto LABEL_148;
                  }
                  uint64_t v99 = 0;
                  int v100 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                  if (v73 >= 0) {
                    int v100 = &__str;
                  }
                  v101 = (char *)v100 + 2 * v88;
                  do
                  {
                    int v102 = *(unsigned __int16 *)&v101[v99 * 2];
                    int v103 = (unsigned __int16)word_1D2ECE95E[v99];
                  }
                  while (v103 == v102 && v99++ != 1);
                  if (v103 == v102)
                  {
LABEL_196:
                    __int16 v96 = 120;
LABEL_159:
                    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v128, (const void **)&__str.__r_.__value_.__l.__data_, v96);
LABEL_160:
                    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__dst.__r_.__value_.__l.__data_);
                    }
                    std::basic_string<char16_t> __dst = v128;
                    *((unsigned char *)&v128.__r_.__value_.__s + 23) = 0;
                    v128.__r_.__value_.__s.__data_[0] = 0;
                    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__str.__r_.__value_.__l.__data_);
                    }
                    goto LABEL_164;
                  }
                  uint64_t v105 = 0;
                  v106 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                  if (v73 >= 0) {
                    v106 = &__str;
                  }
                  std::basic_string<char16_t>::size_type v107 = (char *)v106 + 2 * v88;
                  do
                  {
                    int v108 = *(unsigned __int16 *)&v107[v105 * 2];
                    int v109 = (unsigned __int16)aAl[v105];
                  }
                  while (v109 == v108 && v105++ != 1);
                  if (v109 == v108)
                  {
LABEL_206:
                    std::basic_string<char16_t>::basic_string(&v134, &__str, 0, v88, v66);
                    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v128, &v134, L"aux");
                    if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(v134.__r_.__value_.__l.__data_);
                    }
                    goto LABEL_160;
                  }
LABEL_148:
                  std::basic_string<char16_t>::size_type v88 = v74 - 3;
                  if (v74 >= 3)
                  {
                    uint64_t v89 = 0;
                    BOOL v90 = v73 < 0;
                    v91 = &__str;
                    if (v90) {
                      v91 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                    }
                    std::basic_string<char16_t>::size_type v92 = (char *)v91 + 2 * v88;
                    do
                    {
                      int v93 = *(unsigned __int16 *)&v92[v89 * 2];
                      int v94 = (unsigned __int16)aAil[v89];
                    }
                    while (v94 == v93 && v89++ != 2);
                    if (v94 == v93) {
                      goto LABEL_206;
                    }
                  }
                }
                __int16 v96 = 115;
                goto LABEL_159;
              }
LABEL_124:
              if ((v69 & 0x80) != 0)
              {
LABEL_107:
                std::basic_string<char16_t>::__init_copy_ctor_external(&v128, v67, v68);
                goto LABEL_160;
              }
              goto LABEL_105;
            }
            if ((a1[21] & v134.__r_.__value_.__r.__words[0]) != 0)
            {
LABEL_103:
              int v63 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
            }
            else
            {
              if ((a1[22] & v134.__r_.__value_.__r.__words[0]) == 0) {
                goto LABEL_109;
              }
              v76 = (char *)v64 + 2 * v65;
              if (*((_WORD *)v76 - 1) == 233) {
                goto LABEL_109;
              }
              uint64_t v77 = 0;
              uint64_t v78 = v76 - 4;
              do
              {
                int v79 = *(unsigned __int16 *)&v78[v77 * 2];
                int v80 = (unsigned __int16)word_1D2EC1BFA[v77];
                BOOL v81 = v80 != v79 || v77++ == 1;
              }
              while (!v81);
              int v63 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
              if (v80 == v79)
              {
                std::basic_string<char16_t>::size_type v69 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                unsigned int v70 = SHIBYTE(__str.__r_.__value_.__r.__words[2]) >> 31;
                goto LABEL_110;
              }
            }
          }
          if (v63 < 0)
          {
            std::basic_string<char16_t>::size_type v68 = __str.__r_.__value_.__l.__size_;
            int v67 = (const std::basic_string<char16_t>::value_type *)__str.__r_.__value_.__r.__words[0];
            goto LABEL_107;
          }
LABEL_105:
          std::basic_string<char16_t> v128 = __str;
          goto LABEL_160;
        }
      }
      memmove(p_str, v35, 2 * v36);
      goto LABEL_94;
    }
  }
  else
  {
    BOOL v59 = 1;
    if ((SHIBYTE(v134.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_83;
    }
  }
  operator delete(v134.__r_.__value_.__l.__data_);
  if (v59) {
    goto LABEL_87;
  }
LABEL_164:
  std::basic_string<char16_t> v124 = __dst;
  char v125 = 1;
  uint64_t v21 = (uint64_t)v115;
LABEL_165:
  if (v117 && SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v130.__r_.__value_.__l.__data_);
  }
LABEL_168:
  v130.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v132;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v130);
  v130.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v133;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v130);
  if (*(char *)(v23 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v130, *(const std::basic_string<char16_t>::value_type **)(v23 + 16), *(void *)(v23 + 24));
  }
  else
  {
    *(_OWORD *)&v130.__r_.__value_.__l.__data_ = *v24;
    v130.__r_.__value_.__r.__words[2] = *(void *)(v23 + 32);
  }
  if (v125)
  {
    std::basic_string<char16_t>::operator=(&v130, &v124);
LABEL_174:
    if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v97 = &v130;
    }
    else {
      v97 = (std::basic_string<char16_t> *)v130.__r_.__value_.__r.__words[0];
    }
    if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v98 = HIBYTE(v130.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v98 = v130.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v126, (const std::basic_string<char16_t>::value_type *)v97, v98);
    if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v130.__r_.__value_.__l.__data_);
    }
    if (v125 && SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v124.__r_.__value_.__l.__data_);
    }
    goto LABEL_185;
  }
  if (v114) {
    goto LABEL_174;
  }
  LOBYTE(v120.__r_.__value_.__l.__data_) = 0;
  char v121 = 0;
  if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v130.__r_.__value_.__l.__data_);
    if (v125)
    {
      if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v124.__r_.__value_.__l.__data_);
      }
    }
  }
  if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v126.__r_.__value_.__l.__data_);
  }
  if (v19 == v23) {
    goto LABEL_209;
  }
  (*(void (**)(uint64_t))(*(void *)v113 + 16))(v113);
  uint64_t v8 = 0;
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v122[1]);
  if ((*((unsigned char *)&v123.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_215:
  }
    operator delete(v123.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1D2C4DB44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,void **a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (*(char *)(v54 - 97) < 0) {
    operator delete(*(void **)(v54 - 120));
  }
  if (a54 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v54 - 217) < 0) {
    operator delete(*(void **)(v54 - 240));
  }
  if (a15 && (*(unsigned char *)(v54 - 185) & 0x80) != 0) {
    operator delete(*(void **)(v54 - 208));
  }
  *(void *)(v54 - 208) = v54 - 168;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v54 - 208));
  *(void *)(v54 - 208) = v54 - 144;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v54 - 208));
  if (a48 < 0) {
    operator delete(a43);
  }
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 16))(a10);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a27);
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C4DD9C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 8;
  do
  {
    BOOL v6 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v3 + 32), a2);
    uint64_t v7 = (uint64_t *)(v3 + 8);
    if (!v6)
    {
      uint64_t v7 = (uint64_t *)v3;
      uint64_t v5 = v3;
    }
    uint64_t v3 = *v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2, (unsigned __int16 *)(v5 + 32))) {
    return v2;
  }
  return v5;
}

uint64_t std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, const void **a2, __int16 a3)
{
  if (*((char *)a2 + 23) >= 0) {
    unint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    unint64_t v5 = (unint64_t)a2[1];
  }
  uint64_t result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v5 + 1);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v7 = (char *)result;
  }
  else {
    uint64_t v7 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v7, v8, 2 * v5);
  }
  uint64_t v9 = &v7[2 * v5];
  *(_WORD *)uint64_t v9 = a3;
  *((_WORD *)v9 + 1) = 0;
  return result;
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction::~FrGrammarSynthesizer_FrDisplayFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction *this)
{
  morphun::grammar::synthesis::FrGrammarSynthesizer_FrDisplayFunction::~FrGrammarSynthesizer_FrDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C708;
  uint64_t v2 = *((void *)this + 23);
  *((void *)this + 23) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 17));
  *((void *)this + 5) = &unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 14));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 11));
}

uint64_t *std::set<std::basic_string<char16_t>>::set[abi:ne180100](uint64_t *a1, unsigned __int16 *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    do
    {
      std::__tree<std::basic_string<char16_t>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(a1, v4, a2, (uint64_t)a2);
      a2 += 12;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1D2C4E008(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  long long v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  void v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *uint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(v4, *(const void **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 4);
      uint64_t v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1D2C4E0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      uint64_t v6 = (char *)v1[1];
      do
      {
        uint64_t v8 = (void *)*((void *)v6 - 3);
        v6 -= 24;
        uint64_t v7 = v8;
        if (v8)
        {
          *((void *)v4 - 2) = v7;
          operator delete(v7);
        }
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<std::u16string_view>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D2C4E254(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v2 = **(void **)(a1 + 16);
    uint64_t v3 = **(void **)(a1 + 8);
    if (v2 != v3)
    {
      uint64_t v4 = **(void **)(a1 + 16);
      do
      {
        uint64_t v6 = *(void **)(v4 - 24);
        v4 -= 24;
        unint64_t v5 = v6;
        if (v6)
        {
          *(void *)(v2 - 16) = v5;
          operator delete(v5);
        }
        uint64_t v2 = v4;
      }
      while (v4 != v3);
    }
  }
  return a1;
}

uint64_t *std::__tree<std::basic_string<char16_t>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(uint64_t *result, uint64_t a2, unsigned __int16 *a3, uint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = (uint64_t **)result;
  size_t v8 = result + 1;
  if (result + 1 != (uint64_t *)a2)
  {
    uint64_t result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, (unsigned __int16 *)(a2 + 32));
    if (!result)
    {
      uint64_t result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v6 + 32), a3);
      if (!result)
      {
        uint64_t v19 = v6;
        char v20 = (void *)v6;
        uint64_t v14 = (unsigned __int16 *)&v19;
        if (v6) {
          return result;
        }
LABEL_31:
        uint64_t v6 = (uint64_t)v20;
        goto LABEL_32;
      }
      uint64_t v12 = *(void *)(v6 + 8);
      if (v12)
      {
        uint64_t v13 = *(unsigned __int16 **)(v6 + 8);
        do
        {
          uint64_t v14 = v13;
          uint64_t v13 = *(unsigned __int16 **)v13;
        }
        while (v13);
      }
      else
      {
        long long v17 = (unsigned __int16 *)v6;
        do
        {
          uint64_t v14 = (unsigned __int16 *)*((void *)v17 + 2);
          BOOL v16 = *(void *)v14 == (void)v17;
          long long v17 = v14;
        }
        while (!v16);
      }
      if (v14 == (unsigned __int16 *)v8
        || (uint64_t result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, v14 + 16),
            result))
      {
        if (v12)
        {
          char v20 = v14;
        }
        else
        {
          char v20 = (void *)v6;
          uint64_t v14 = (unsigned __int16 *)(v6 + 8);
        }
LABEL_30:
        if (*(void *)v14) {
          return result;
        }
        goto LABEL_31;
      }
LABEL_29:
      uint64_t result = std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)v7, &v20, a3);
      uint64_t v14 = (unsigned __int16 *)result;
      goto LABEL_30;
    }
  }
  uint64_t v9 = *(void *)v6;
  if (*v7 == (uint64_t *)v6)
  {
    uint64_t v11 = v6;
    goto LABEL_17;
  }
  if (v9)
  {
    uint64_t v10 = *(void *)v6;
    do
    {
      uint64_t v11 = v10;
      uint64_t v10 = *(void *)(v10 + 8);
    }
    while (v10);
  }
  else
  {
    uint64_t v15 = v6;
    do
    {
      uint64_t v11 = *(void *)(v15 + 16);
      BOOL v16 = *(void *)v11 == v15;
      uint64_t v15 = v11;
    }
    while (v16);
  }
  uint64_t result = (uint64_t *)std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v11 + 32), a3);
  if (!result) {
    goto LABEL_29;
  }
LABEL_17:
  if (v9)
  {
    char v20 = (void *)v11;
    uint64_t v14 = (unsigned __int16 *)(v11 + 8);
    goto LABEL_30;
  }
  char v20 = (void *)v6;
  uint64_t v14 = (unsigned __int16 *)v6;
LABEL_32:
  std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>((uint64_t)&v18, (uint64_t)v7, a4);
  return std::__tree<std::u16string_view>::__insert_node_at(v7, v6, (uint64_t **)v14, v18);
}

void std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 8;
  uint64_t v6 = (char *)operator new(0x38uLL);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v7 = (std::basic_string<char16_t> *)(v6 + 32);
  if (*(char *)(a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v7, *(const std::basic_string<char16_t>::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v7->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  }
  *(unsigned char *)(a1 + 16) = 1;
}

void sub_1D2C4E4F8(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](0, v2);
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>(uint64_t a1, void *a2, unsigned __int16 *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (void *)v4;
        size_t v8 = (unsigned __int16 *)(v4 + 32);
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, (unsigned __int16 *)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void morphun::dialog::language::DaCommonConceptFactory::~DaCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A056A8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A056A8);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,char16_t const(&)[16],0>(std::basic_string<char16_t> *this, long long *a2, char *__src)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(this[1].__r_.__value_.__r.__words, __src);
  return this;
}

void sub_1D2C4E6B4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 24;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_1D2C4E73C(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

uint64_t std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>(uint64_t **a1, uint64_t a2, unsigned __int16 *a3, long long *a4)
{
  uint64_t v6 = a2;
  size_t v8 = a1 + 1;
  if (a1 + 1 != (uint64_t **)a2
    && !std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, (unsigned __int16 *)(a2 + 32)))
  {
    if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v6 + 32), a3))
    {
      uint64_t v19 = v6;
      char v20 = (void *)v6;
      uint64_t v14 = (unsigned __int16 *)&v19;
      if (v6) {
        return;
      }
LABEL_31:
      uint64_t v6 = (uint64_t)v20;
      goto LABEL_32;
    }
    uint64_t v12 = *(void *)(v6 + 8);
    if (v12)
    {
      uint64_t v13 = *(unsigned __int16 **)(v6 + 8);
      do
      {
        uint64_t v14 = v13;
        uint64_t v13 = *(unsigned __int16 **)v13;
      }
      while (v13);
    }
    else
    {
      long long v17 = (unsigned __int16 *)v6;
      do
      {
        uint64_t v14 = (unsigned __int16 *)*((void *)v17 + 2);
        BOOL v16 = *(void *)v14 == (void)v17;
        long long v17 = v14;
      }
      while (!v16);
    }
    if (v14 == (unsigned __int16 *)v8 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, v14 + 16))
    {
      if (v12)
      {
        char v20 = v14;
      }
      else
      {
        char v20 = (void *)v6;
        uint64_t v14 = (unsigned __int16 *)(v6 + 8);
      }
LABEL_30:
      if (*(void *)v14) {
        return;
      }
      goto LABEL_31;
    }
LABEL_29:
    uint64_t v14 = (unsigned __int16 *)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v20, a3);
    goto LABEL_30;
  }
  uint64_t v9 = *(void *)v6;
  if (*a1 == (uint64_t *)v6)
  {
    uint64_t v11 = v6;
    goto LABEL_17;
  }
  if (v9)
  {
    uint64_t v10 = *(void *)v6;
    do
    {
      uint64_t v11 = v10;
      uint64_t v10 = *(void *)(v10 + 8);
    }
    while (v10);
  }
  else
  {
    uint64_t v15 = v6;
    do
    {
      uint64_t v11 = *(void *)(v15 + 16);
      BOOL v16 = *(void *)v11 == v15;
      uint64_t v15 = v11;
    }
    while (v16);
  }
  if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v11 + 32), a3)) {
    goto LABEL_29;
  }
LABEL_17:
  if (v9)
  {
    char v20 = (void *)v11;
    uint64_t v14 = (unsigned __int16 *)(v11 + 8);
    goto LABEL_30;
  }
  char v20 = (void *)v6;
  uint64_t v14 = (unsigned __int16 *)v6;
LABEL_32:
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__construct_node<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t)v18, (uint64_t)a1, a4);
  std::__tree<std::u16string_view>::__insert_node_at(a1, v6, (uint64_t **)v14, v18[0]);
  v18[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v18);
}

std::basic_string<char16_t> *std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__construct_node<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v5 = a2 + 8;
  uint64_t v6 = (char *)operator new(0x50uLL);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t result = std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)(v6 + 32), a3);
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

void sub_1D2C4EA4C(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100](std::basic_string<char16_t> *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = this + 1;
  if (*((char *)a2 + 47) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *((const std::basic_string<char16_t>::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

void sub_1D2C4EB34(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **com::apple::siri::tokenizer::data::config_ro::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::cortex::common::fallback_locales::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695C488;
  v3[1] = *(_OWORD *)&off_1E695C498;
  v3[2] = xmmword_1E695C4A8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t morphun::analysis::util::Attribute::operator==(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 32))();
}

uint64_t morphun::analysis::util::Attribute::operator!=(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(void *)a1 + 32))(a1) ^ 1;
}

void morphun::dialog::language::ThCommonConceptFactory::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
  morphun::dialog::SpeakableString::SpeakableString(v13, (long long *)__p);
  morphun::dialog::SpeakableString::operator+(a2, (uint64_t)v13, v14);
  morphun::dialog::SpeakableString::operator+((uint64_t)v14, a1, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a3 + 8);
  }
  if (v8)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)&word_1D2ED0D7C);
    morphun::dialog::SpeakableString::SpeakableString(v13, (long long *)__dst);
    morphun::dialog::SpeakableString::SpeakableString(__p, (long long *)a3);
    morphun::dialog::SpeakableString::operator+((uint64_t)v13, (uint64_t)__p, v14);
    morphun::dialog::SpeakableString::operator+=((uint64_t)a4, (uint64_t)v14);
    if (v12 < 0) {
      operator delete(__dst[0]);
    }
  }
}

void sub_1D2C4EDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ThCommonConceptFactory::createAndList()
{
}

void sub_1D2C4EFBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SemanticConceptList>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C4F074(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ThCommonConceptFactory::createOrList()
{
}

void sub_1D2C4F194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ThCommonConceptFactory::~ThCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05C28);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05C28);
}

void morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction::determine(void *a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, &__p);
  std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (size) {
    goto LABEL_4;
  }
  uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if (!v7)
  {
LABEL_4:
    *a3 = __p;
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&word_1D2ED0AEE);
    uint64_t v8 = a1[26];
    if (!v8 || (uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 24))(v8, a2), (v10 = v9) == 0))
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    long long v11 = *(_OWORD *)(v9 + 8);
    uint64_t v12 = *(void *)(v9 + 16);
    if (v12) {
      uint64_t v13 = *(void *)(v12 + 80);
    }
    else {
      uint64_t v13 = 0;
    }
    while (1)
    {
      uint64_t v27 = *((void *)&v11 + 1);
      uint64_t v14 = v11;
      if (v13 == (void)v11) {
        break;
      }
      {
        int v15 = *(char *)(v14 + 63);
        BOOL v16 = v15 >= 0 ? (const UChar *)(v14 + 40) : *(const UChar **)(v14 + 40);
        uint64_t v17 = v15 >= 0 ? *(unsigned __int8 *)(v14 + 63) : *(void *)(v14 + 48);
        uint64_t v18 = a1[27];
        uint64_t v19 = a1[28];
        v28.__r_.__value_.__r.__words[0] = 0;
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)&v28, v16, v17)
          && (v28.__r_.__value_.__r.__words[0] & v19) == v19)
        {
          morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v14 + 16, &v28);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          std::basic_string<char16_t> __p = v28;
          std::basic_string<char16_t>::size_type v21 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
          if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v21 = v28.__r_.__value_.__l.__size_;
          }
          if (v21) {
            std::basic_string<char16_t>::operator=(&__dst, &__p);
          }
        }
      }
      npc<morphun::Token const>(v14);
      *((void *)&v11 + 1) = v27;
      *(void *)&long long v11 = *(void *)(v14 + 80);
    }
    std::basic_string<char16_t>::size_type v22 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v22 = __dst.__r_.__value_.__l.__size_;
    }
    if (v22)
    {
      *a3 = __dst;
      memset(&__dst, 0, sizeof(__dst));
    }
    else
    {
      uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 56))(v10);
      uint64_t v24 = npc<morphun::Token>(v23);
      uint64_t v25 = npc<morphun::Token>(*(void *)(v24 + 72));
      morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v25 + 16, a3);
    }
    (*(void (**)(uint64_t))(*(void *)v10 + 16))(v10);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D2C4F560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  __cxa_free_exception(v25);
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C4F638(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction::~HiGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction *this)
{
  morphun::grammar::synthesis::HiGrammarSynthesizer_CountLookupFunction::~HiGrammarSynthesizer_CountLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0CD40;
  uint64_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FA428;
  long long v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(morphun::dialog::DictionaryLookupFunction *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 56)) = a2[1];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[2];
  uint64_t v4 = (void *)*((void *)this + 22);
  if (v4)
  {
    *((void *)this + 23) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::getDisplayValue(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(void *)(a2 + 8), *(void *)(a2 + 16), a3);
  uint64_t v8 = TheBestDisplayValue;
  if (!TheBestDisplayValue) {
    return v8;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v52, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    v52.__r_.__value_.__r.__words[2] = *(void *)(v9 + 16);
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v10;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(v52.__r_.__value_.__r.__words[2]);
  if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v52.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    uint64_t v8 = 0;
    if ((*((unsigned char *)&v52.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_96;
    }
    return v8;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v51, v8, a3);
  long long v45 = *(_OWORD *)(a1 + 8);
  uint64_t v12 = operator new(0x10uLL);
  _OWORD *v12 = v45;
  BOOL hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v12, (uint64_t)(v12 + 1));
  operator delete(v12);
  if (!hasAnyFeatures) {
    goto LABEL_94;
  }
  uint64_t v14 = *(void *)(a1 + 272);
  if (!v14)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v15 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v14 + 24))(v14, &v52);
  npc<morphun::TokenChain>(v15);
  LOBYTE(v49.__r_.__value_.__l.__data_) = 0;
  char v50 = 0;
  if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 1)
  {
    if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v16 = &v52;
    }
    else {
      BOOL v16 = (std::basic_string<char16_t> *)v52.__r_.__value_.__r.__words[0];
    }
    if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v17 = HIBYTE(v52.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v17 = v52.__r_.__value_.__l.__size_;
    }
    morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::inflectWord((uint64_t)&__str, a1, v16, v17, a3, a4);
    __n128 v18 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v49, (__n128 *)&__str);
    if (v55 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v19 = (void *)__str.__r_.__value_.__r.__words[0];
      goto LABEL_87;
    }
    goto LABEL_88;
  }
  memset(&v57, 0, sizeof(v57));
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 56))(v15);
  if (!v20)
  {
    uint64_t v44 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v44);
  }
  int v21 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 32))(v20);
  std::basic_string<char16_t>::reserve(&v57, v21);
  long long v22 = *(_OWORD *)(v15 + 8);
  uint64_t v23 = *(void *)(v15 + 16);
  if (v23) {
    uint64_t v24 = *(void *)(v23 + 80);
  }
  else {
    uint64_t v24 = 0;
  }
  char v25 = 0;
  while (1)
  {
    uint64_t v46 = *((void *)&v22 + 1);
    uint64_t v26 = v22;
    if (v24 == (void)v22)
    {
      std::basic_string<char16_t> __p = v57;
      char v48 = 1;
      goto LABEL_84;
    }
    uint64_t v27 = (const UChar **)(v22 + 16);
    uint64_t v28 = *(unsigned __int8 *)(v22 + 39);
    if (!*(unsigned char *)(v22 + 64))
    {
LABEL_39:
      if ((v28 & 0x80u) == 0) {
        int v31 = (const std::basic_string<char16_t>::value_type *)(v22 + 16);
      }
      else {
        int v31 = *(const std::basic_string<char16_t>::value_type **)(v22 + 16);
      }
      if ((v28 & 0x80u) == 0) {
        std::basic_string<char16_t>::size_type v32 = *(unsigned __int8 *)(v22 + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v32 = *(void *)(v22 + 24);
      }
      std::basic_string<char16_t>::append(&v57, v31, v32);
      goto LABEL_81;
    }
    if ((v28 & 0x80) != 0)
    {
      uint64_t v29 = *(void *)(v22 + 24);
      if (v29 == 1)
      {
        std::basic_string<char16_t>::size_type v30 = *v27;
        if ((**v27 == 45) | v25 & 1) {
          goto LABEL_39;
        }
        uint64_t v56 = 0;
      }
      else
      {
        if (v25) {
          goto LABEL_39;
        }
        uint64_t v56 = 0;
        std::basic_string<char16_t>::size_type v30 = *v27;
      }
    }
    else
    {
      if (v28 == 1)
      {
        if ((*(_WORD *)v27 == 45) | v25 & 1) {
          goto LABEL_39;
        }
      }
      else if (v25)
      {
        goto LABEL_39;
      }
      uint64_t v56 = 0;
      std::basic_string<char16_t>::size_type v30 = (const UChar *)(v22 + 16);
      uint64_t v29 = v28;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v56, v30, v29);
    if ((*(void *)(a1 + 392) & v56) == 0) {
      break;
    }
    int v33 = *(char *)(v26 + 39);
    if (v33 >= 0) {
      int v34 = (const std::basic_string<char16_t>::value_type *)(v26 + 16);
    }
    else {
      int v34 = *(const std::basic_string<char16_t>::value_type **)(v26 + 16);
    }
    if (v33 >= 0) {
      std::basic_string<char16_t>::size_type v35 = *(unsigned __int8 *)(v26 + 39);
    }
    else {
      std::basic_string<char16_t>::size_type v35 = *(void *)(v26 + 24);
    }
    std::basic_string<char16_t>::append(&v57, v34, v35);
    char v25 = 1;
LABEL_81:
    npc<morphun::Token const>(v26);
    *((void *)&v22 + 1) = v46;
    *(void *)&long long v22 = *(void *)(v26 + 80);
  }
  int v36 = *(char *)(v26 + 39);
  if (v36 >= 0) {
    BOOL v37 = (void *)(v26 + 16);
  }
  else {
    BOOL v37 = *(void **)(v26 + 16);
  }
  if (v36 >= 0) {
    unint64_t v38 = *(unsigned __int8 *)(v26 + 39);
  }
  else {
    unint64_t v38 = *(void *)(v26 + 24);
  }
  morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::inflectWord((uint64_t)&__str, a1, v37, v38, a3, a4);
  if (*(char *)(v26 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v53, *(const std::basic_string<char16_t>::value_type **)(v26 + 16), *(void *)(v26 + 24));
  }
  else
  {
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = *(_OWORD *)v27;
    v53.__r_.__value_.__r.__words[2] = *(void *)(v26 + 32);
  }
  if (v55)
  {
    std::basic_string<char16_t>::operator=(&v53, &__str);
    goto LABEL_67;
  }
  if (a4)
  {
LABEL_67:
    if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v39 = &v53;
    }
    else {
      uint64_t v39 = (std::basic_string<char16_t> *)v53.__r_.__value_.__r.__words[0];
    }
    if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v40 = HIBYTE(v53.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v40 = v53.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v57, (const std::basic_string<char16_t>::value_type *)v39, v40);
    int v41 = 1;
  }
  else
  {
    int v41 = 0;
  }
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v53.__r_.__value_.__l.__data_);
  }
  if (v55 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (v41)
  {
    char v25 = 0;
    goto LABEL_81;
  }
  LOBYTE(__p.__r_.__value_.__l.__data_) = 0;
  char v48 = 0;
  if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v57.__r_.__value_.__l.__data_);
  }
LABEL_84:
  __n128 v18 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v49, (__n128 *)&__p);
  if (v48 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v19 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_87:
    operator delete(v19);
  }
LABEL_88:
  if (v50)
  {
    std::basic_string<char16_t>::operator=(&v52, &v49);
    if (v50)
    {
      if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v49.__r_.__value_.__l.__data_);
      }
    }
LABEL_93:
    (*(void (**)(uint64_t))(*(void *)v15 + 16))(v15);
LABEL_94:
    operator new();
  }
  if (a4) {
    goto LABEL_93;
  }
  (*(void (**)(uint64_t, __n128))(*(void *)v15 + 16))(v15, v18);
  uint64_t v8 = 0;
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v51[1]);
  if ((*((unsigned char *)&v52.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_96:
  }
    operator delete(v52.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1D2C4FEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,void **a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  __cxa_free_exception(v39);
  if (*(char *)(v40 - 81) < 0) {
    operator delete(*(void **)(v40 - 104));
  }
  (*(void (**)(uint64_t))(*(void *)v38 + 16))(v38);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a24);
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C50060(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::inflectWord(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, int a6)
{
  uint64_t v12 = (uint64_t *)operator new(0x10uLL);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + 8);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v25, a5, v12, v12 + 2);
  operator delete(v12);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v14 = (uint64_t *)operator new(8uLL);
  *uint64_t v14 = v13;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v24, a5, v14, v14 + 1);
  operator delete(v14);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, a2 + 40, a3, a4, &v25, &v24);
  int v15 = v23;
  if (!v23)
  {
    if (!a6)
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      goto LABEL_19;
    }
    if (a4 >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v17 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v17 = a4 | 3;
      }
      p_dst = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v17 + 1);
      *((void *)&__dst + 1) = a4;
      unint64_t v20 = v18 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v20) = a4;
      p_dst = &__dst;
      if (!a4) {
        goto LABEL_18;
      }
    }
    memmove(p_dst, a3, 2 * a4);
LABEL_18:
    *((_WORD *)p_dst + a4) = 0;
    *(_OWORD *)a1 = __dst;
    *(void *)(a1 + 16) = v20;
    *(unsigned char *)(a1 + 24) = 1;
    goto LABEL_19;
  }
  if (SHIBYTE(v22) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)__p;
    *(void *)(a1 + 16) = v22;
  }
  *(unsigned char *)(a1 + 24) = 1;
  if (v15 && SHIBYTE(v22) < 0) {
    operator delete(__p[0]);
  }
LABEL_19:
  __p[0] = &v24;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  __p[0] = &v25;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_1D2C50248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *__p, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  if (v21)
  {
    if (v20 < 0) {
      operator delete(__p);
    }
  }
  std::basic_string<char16_t> __p = &a17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  std::basic_string<char16_t> __p = &a20;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

__n128 std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>(uint64_t a1, __n128 *a2)
{
  if (*(unsigned __int8 *)(a1 + 24) == a2[1].n128_u8[8])
  {
    if (*(unsigned char *)(a1 + 24))
    {
      if (*(char *)(a1 + 23) < 0) {
        operator delete(*(void **)a1);
      }
      __n128 result = *a2;
      *(void *)(a1 + 16) = a2[1].n128_u64[0];
      *(__n128 *)a1 = result;
      a2[1].n128_u8[7] = 0;
      a2->n128_u16[0] = 0;
    }
  }
  else if (*(unsigned char *)(a1 + 24))
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(unsigned char *)(a1 + 24) = 0;
  }
  else
  {
    __n128 result = *a2;
    *(void *)(a1 + 16) = a2[1].n128_u64[0];
    *(__n128 *)a1 = result;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    a2->n128_u64[0] = 0;
    *(unsigned char *)(a1 + 24) = 1;
  }
  return result;
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::~ItGrammarSynthesizer_ItDisplayFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction *this)
{
  morphun::grammar::synthesis::ItGrammarSynthesizer_ItDisplayFunction::~ItGrammarSynthesizer_ItDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C818;
  *((void *)this + 35) = &unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 44));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 41));
  uint64_t v2 = *((void *)this + 34);
  *((void *)this + 34) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

void morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor::createIterator()
{
}

void sub_1D2C504EC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4057BE6752);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor::~FiWordAndDelimiterTokenExtractor(morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor *this)
{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 192);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor *)((char *)this + 160));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A081B0);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 192);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::locale::fi::FiWordAndDelimiterTokenExtractor *)((char *)this + 160));

  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A081B0);
}

void morphun::dialog::language::NbCommonConceptFactory::~NbCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05A28);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05A28);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,char16_t const(&)[19],0>(std::basic_string<char16_t> *this, long long *a2, char *__src)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(this[1].__r_.__value_.__r.__words, __src);
  return this;
}

void sub_1D2C50668(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,char16_t const(&)[18],0>(std::basic_string<char16_t> *this, long long *a2, char *__src)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(this[1].__r_.__value_.__r.__words, __src);
  return this;
}

void sub_1D2C506E4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *virtual thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::setLemmaMappings(void *a1, uint64_t a2)
{
  return morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::setLemmaMappings((void *)((char *)a1 + *(void *)(*a1 - 104)), a2);
}

uint64_t *morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::setLemmaMappings(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1 + 1;
  __n128 result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*a1 + 56))(a1);
  if (v3 != (uint64_t *)a2)
  {
    long long v5 = *(const std::basic_string<char16_t> **)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v6 - *(void *)a2) >> 4);
    return std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__assign_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(v3, v5, v6, v7);
  }
  return result;
}

uint64_t virtual thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::getLemmaMappings(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  return (uint64_t)this + *(void *)(*(void *)this - 96) + 8;
}

void virtual thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::~LemmaMappingAttributeImpl(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::~LemmaMappingAttributeImpl((morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::~LemmaMappingAttributeImpl((morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *)((char *)this + *(void *)(*(void *)this - 32)));
}

void morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::~LemmaMappingAttributeImpl(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  *(void *)this = &off_1F2A0FBB0;
  uint64_t v1 = (void **)((char *)this + 8);
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v1);
}

{
  uint64_t vars8;

  morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::~LemmaMappingAttributeImpl(this);

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::getLemmaMappings(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  return (uint64_t)this + 8;
}

void morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::reflectWith(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this, morphun::analysis::util::AttributeReflector *a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  memset(&v32, 0, sizeof(v32));
  uint64_t v2 = (const void **)*((void *)this + 1);
  uint64_t v3 = (const void **)*((void *)this + 2);
  if (v2 != v3)
  {
    uint64_t v4 = v2 + 3;
    do
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(v32.__r_.__value_.__r.__words[2]);
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v32.__r_.__value_.__l.__size_;
      }
      if (size) {
        std::basic_string<char16_t>::append(&v32, L",", 1uLL);
      }
      std::operator+<char16_t>((uint64_t)&v27, word_1D2EC1C7A, v4);
      std::basic_string<char16_t>::append(&v27, word_1D2EC1C8A, 0x16uLL);
      std::basic_string<char16_t> v28 = v27;
      memset(&v27, 0, sizeof(v27));
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*(v4 - 2), &v26);
      int v6 = SHIBYTE(v26.__r_.__value_.__r.__words[2]);
      unint64_t v7 = (void *)v26.__r_.__value_.__r.__words[0];
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v8 = &v26;
      }
      else {
        uint64_t v8 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
      }
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v9 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v9 = v26.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v28, (const std::basic_string<char16_t>::value_type *)v8, v9);
      std::basic_string<char16_t> v29 = v28;
      memset(&v28, 0, sizeof(v28));
      std::basic_string<char16_t>::append(&v29, L",lemmaGrammemes=", 0x10uLL);
      std::basic_string<char16_t> v30 = v29;
      memset(&v29, 0, sizeof(v29));
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*(v4 - 1), &v25);
      int v10 = SHIBYTE(v25.__r_.__value_.__r.__words[2]);
      long long v11 = (void *)v25.__r_.__value_.__r.__words[0];
      if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v12 = &v25;
      }
      else {
        uint64_t v12 = (std::basic_string<char16_t> *)v25.__r_.__value_.__r.__words[0];
      }
      if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v13 = HIBYTE(v25.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v13 = v25.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v30, (const std::basic_string<char16_t>::value_type *)v12, v13);
      std::basic_string<char16_t> v33 = v30;
      memset(&v30, 0, sizeof(v30));
      std::basic_string<char16_t>::append(&v33, (const std::basic_string<char16_t>::value_type *)"}", 1uLL);
      std::basic_string<char16_t> __dst = v33;
      unint64_t v14 = v33.__r_.__value_.__r.__words[2];
      memset(&v33, 0, sizeof(v33));
      std::basic_string<char16_t>::size_type v15 = HIBYTE(v14);
      int v16 = (char)v15;
      uint64_t v17 = (void *)__dst.__r_.__value_.__r.__words[0];
      if ((v15 & 0x80u) == 0) {
        p_dst = &__dst;
      }
      else {
        p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
      }
      if ((v15 & 0x80u) == 0) {
        std::basic_string<char16_t>::size_type v19 = v15;
      }
      else {
        std::basic_string<char16_t>::size_type v19 = __dst.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v32, (const std::basic_string<char16_t>::value_type *)p_dst, v19);
      if (v16 < 0) {
        operator delete(v17);
      }
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v33.__r_.__value_.__l.__data_);
        if ((v10 & 0x80000000) == 0) {
          goto LABEL_29;
        }
      }
      else if ((v10 & 0x80000000) == 0)
      {
        goto LABEL_29;
      }
      operator delete(v11);
LABEL_29:
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v30.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v29.__r_.__value_.__l.__data_);
        if (v6 < 0) {
LABEL_42:
        }
          operator delete(v7);
      }
      else if (v6 < 0)
      {
        goto LABEL_42;
      }
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v28.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v27.__r_.__value_.__l.__data_);
      }
      int v20 = v4 + 3;
      v4 += 6;
    }
    while (v20 != v3);
  }
  std::operator+<char16_t>((uint64_t)&__dst, L"[", (const void **)&v32.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::append(&__dst, L"]", 1uLL);
  v33.__r_.__value_.__r.__words[0] = __dst.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v21 = __dst.__r_.__value_.__r.__words[0];
  *(std::basic_string<char16_t>::size_type *)((char *)v33.__r_.__value_.__r.__words + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7);
  char v22 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  memset(&__dst, 0, sizeof(__dst));
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v32.__r_.__value_.__l.__data_);
    v32.__r_.__value_.__r.__words[0] = v21;
    v32.__r_.__value_.__l.__size_ = v33.__r_.__value_.__r.__words[0];
    *(std::basic_string<char16_t>::size_type *)((char *)&v32.__r_.__value_.__r.__words[1] + 7) = *(std::basic_string<char16_t>::size_type *)((char *)v33.__r_.__value_.__r.__words + 7);
    *((unsigned char *)&v32.__r_.__value_.__s + 23) = v22;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    v32.__r_.__value_.__r.__words[0] = v21;
    v32.__r_.__value_.__l.__size_ = v33.__r_.__value_.__r.__words[0];
    *(std::basic_string<char16_t>::size_type *)((char *)&v32.__r_.__value_.__r.__words[1] + 7) = *(std::basic_string<char16_t>::size_type *)((char *)v33.__r_.__value_.__r.__words + 7);
    *((unsigned char *)&v32.__r_.__value_.__s + 23) = v22;
  }
  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "l");
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C50C94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (*(char *)(v48 - 129) < 0) {
    operator delete(*(void **)(v48 - 152));
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::operator+<char16_t>(uint64_t a1, _WORD *a2, const void **a3)
{
  if (*a2)
  {
    uint64_t v5 = 0;
    do
      uint64_t v6 = v5 + 1;
    while (a2[++v5]);
  }
  else
  {
    uint64_t v6 = 0;
  }
  if (*((char *)a3 + 23) >= 0) {
    unint64_t v8 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    unint64_t v8 = (unint64_t)a3[1];
  }
  uint64_t result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v8 + v6);
  if (*(char *)(result + 23) >= 0) {
    int v10 = (char *)result;
  }
  else {
    int v10 = *(char **)result;
  }
  if (v6) {
    uint64_t result = (uint64_t)memmove(v10, a2, 2 * v6);
  }
  if (v8)
  {
    if (*((char *)a3 + 23) >= 0) {
      long long v11 = a3;
    }
    else {
      long long v11 = *a3;
    }
    uint64_t result = (uint64_t)memmove(&v10[2 * v6], v11, 2 * v8);
  }
  *(_WORD *)&v10[2 * v6 + 2 * v8] = 0;
  return result;
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::copyTo(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this, morphun::analysis::util::AttributeImpl *lpsrc)
{
  if (!lpsrc)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (!v2)
  {
    uint64_t v6 = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(void *)uint64_t v6 = &unk_1F2A11358;
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)v2 + 96);

  return v3();
}

void sub_1D2C50F84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::clone(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
}

void sub_1D2C5105C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  MEMORY[0x1D942B8B0](v2, 0xA1C40B5CB1A42);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v3 = *(void **)(this + 8);
  uint64_t v2 = *(void **)(this + 16);
  if (v2 != v3)
  {
    uint64_t v4 = v2 - 6;
    uint64_t v5 = v2 - 6;
    uint64_t v6 = v2 - 6;
    do
    {
      uint64_t v7 = *v6;
      v6 -= 6;
      this = (*(uint64_t (**)(void *))(v7 + 8))(v5);
      v4 -= 6;
      BOOL v8 = v5 == v3;
      uint64_t v5 = v6;
    }
    while (!v8);
  }
  *(void *)(v1 + 16) = v3;
  return this;
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::operator()(int a1, void *lpsrc)
{
  if (!v2) {
    __cxa_bad_cast();
  }
  return (*(int (**)(void *))(*(void *)v2 + 40))(v2);
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::hashCode(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
  uint64_t v1 = *((void *)this + 1);
  uint64_t v2 = *((void *)this + 2);
  if (v1 == v2) {
    return 0;
  }
  LODWORD(v3) = 0;
  do
  {
    std::basic_string<char16_t>::size_type v9 = &off_1F2A0F180;
    long long v10 = *(_OWORD *)(v1 + 8);
    if (*(char *)(v1 + 47) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v11, *(const std::basic_string<char16_t>::value_type **)(v1 + 24), *(void *)(v1 + 32));
    }
    else
    {
      long long v4 = *(_OWORD *)(v1 + 24);
      v11.__r_.__value_.__r.__words[2] = *(void *)(v1 + 40);
      *(_OWORD *)&v11.__r_.__value_.__l.__data_ = v4;
    }
    std::basic_string<char16_t>::size_type size = HIBYTE(v11.__r_.__value_.__r.__words[2]);
    if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v6 = &v11;
    }
    else {
      uint64_t v6 = (std::basic_string<char16_t> *)v11.__r_.__value_.__r.__words[0];
    }
    if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v11.__r_.__value_.__l.__size_;
    }
    int v7 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t *)v6, 2 * size);
    uint64_t v3 = (v7 - (DWORD2(v10) + v10) + 32 * (DWORD2(v10) + v10) - v3 + 32 * v3);
    v1 += 48;
  }
  while (v1 != v2);
  return v3;
}

uint64_t morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::equals(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this, const morphun::analysis::util::Attribute *lpsrc)
{
  if ((morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *)((char *)this
                                                                       + *(void *)(*(void *)this - 88)) == lpsrc)
    return 1;
  if (!result) {
    return result;
  }
  uint64_t v6 = (char *)this + 8;
  uint64_t v4 = *((void *)this + 1);
  uint64_t v5 = *((void *)v6 + 1);
  uint64_t v7 = *(void *)(result + 8);
  if (v5 - v4 != *(void *)(result + 16) - v7) {
    return 0;
  }
  if (v4 == v5) {
    return 1;
  }
  do
  {
    uint64_t result = morphun::analysis::tokenattributes::LemmaMapping::operator==(v4, v7);
    if (!result) {
      break;
    }
    v7 += 48;
    v4 += 48;
  }
  while (v4 != v5);
  return result;
}

void covariant return thunk to'morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::clone(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
}

void morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::create(morphun::analysis::tokenattributes::LemmaMappingAttributeImpl *this)
{
}

void morphun::tokenizer::locale::DefaultTokenizer::createTokenExtractor()
{
}

void sub_1D2C5171C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
  {
    operator delete(__p);
    if ((v31 & 1) == 0)
    {
LABEL_6:
      MEMORY[0x1D942B8B0](v28, 0x10F3C40049B2901);
      _Unwind_Resume(a1);
    }
  }
  else if (!v31)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v30);
  goto LABEL_6;
}

void morphun::grammar::synthesis::FiGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::FiGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2C51F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  __cxa_free_exception(v24);
  MEMORY[0x1D942B8B0](v23, 0x10E1C40FACB0144);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer::getPossibleCombinations(long long **a1@<X0>, std::basic_string<char16_t>::size_type a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v93 = *MEMORY[0x1E4F143B8];
  memset(&v90, 0, sizeof(v90));
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v90, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a1[1] - (char *)*a1) >> 3));
  memset(v91, 0, 24);
  *(void *)&v91[0] = operator new(0x18uLL);
  *((void *)&v91[0] + 1) = *(void *)&v91[0];
  *(void *)&v91[1] = *(void *)&v91[0] + 24;
  *((void *)&v91[0] + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v91[1], (long long **)&v90, (long long **)v91, *(std::basic_string<char16_t> **)&v91[0]);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  v83.__r_.__value_.__r.__words[0] = a2;
  LOBYTE(v83.__r_.__value_.__r.__words[1]) = 0;
  uint64_t v4 = (std::basic_string<char16_t> *)operator new(0x18uLL);
  *(void *)(a2 + 16) = v4 + 1;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v4;
  BOOL v81 = (long long ***)v4;
  uint64_t v89 = v4;
  uint64_t v78 = (void **)(a2 + 16);
  uint64_t v84 = (std::basic_string<char16_t> *)(a2 + 16);
  v85.i64[0] = (uint64_t)&v89;
  v85.i64[1] = (uint64_t)&v81;
  LOBYTE(v86) = 0;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v4, *(long long ***)&v91[0], *((long long ***)&v91[0] + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v91[0] + 1) - *(void *)&v91[0]) >> 3));
  v81 += 3;
  uint64_t v5 = v81;
  LOBYTE(v86) = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v84);
  int v79 = (uint64_t *)a2;
  *(void *)(a2 + 8) = v5;
  uint64_t v84 = (std::basic_string<char16_t> *)v91;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
  uint64_t v84 = &v90;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
  uint64_t v6 = (char *)v2[1] - (char *)*v2;
  if (v6 == 24) {
    return;
  }
  unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
  if ((int)v7 < 2) {
    return;
  }
  uint64_t v76 = v7;
  uint64_t v77 = v2;
  unint64_t v8 = 1;
  do
  {
    std::basic_string<char16_t>::size_type v9 = *v2;
    memset(&v90, 0, sizeof(v90));
    std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::basic_string<char16_t> const*>,std::__wrap_iter<std::basic_string<char16_t> const*>>(&v90, v9, (long long *)((char *)v9 + 24 * v8), v8);
    long long v10 = v2[1];
    std::basic_string<char16_t> v11 = (long long *)((char *)*v2 + 24 * v8);
    memset(&v83, 0, sizeof(v83));
    std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::basic_string<char16_t> const*>,std::__wrap_iter<std::basic_string<char16_t> const*>>(&v83, v11, v10, 0xAAAAAAAAAAAAAAABLL * (((char *)v10 - (char *)v11) >> 3));
    unint64_t v80 = v8;
    morphun::grammar::synthesis::FiGrammarSynthesizer::getPossibleCombinations(&v81, &v83);
    std::basic_string<char16_t>::size_type v13 = v81;
    uint64_t v12 = v82;
    unint64_t v14 = v81;
    if (v81 == v82) {
      goto LABEL_43;
    }
    do
    {
      int v16 = (std::basic_string<char16_t> *)*v13;
      unint64_t v15 = (unint64_t)v13[1];
      unint64_t v17 = (unint64_t)v13[2];
      if (v15 < v17)
      {
        if (v16 == (std::basic_string<char16_t> *)v15)
        {
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v16, (long long *)v90.__r_.__value_.__l.__data_, (long long *)v90.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v90.__r_.__value_.__l.__size_ - v90.__r_.__value_.__r.__words[0]) >> 3));
          v13[1] = (long long **)&v16[1];
        }
        else
        {
          uint64_t v18 = v13[1];
          unint64_t v19 = v15 - 24;
          if (v15 >= 0x18)
          {
            do
            {
              uint64_t *v18 = 0;
              v18[1] = 0;
              v18[2] = 0;
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
              v18[2] = *(long long **)(v19 + 16);
              *(void *)unint64_t v19 = 0;
              *(void *)(v19 + 8) = 0;
              *(void *)(v19 + 16) = 0;
              v18 += 3;
              v19 += 24;
            }
            while (v19 < v15);
          }
          v13[1] = v18;
          if ((std::basic_string<char16_t> *)v15 != &v16[1])
          {
            uint64_t v20 = 0;
            do
            {
              uint64_t v21 = v15 - 24 + v20;
              uint64_t v22 = v15 + v20;
              std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)(v15 + v20 - 24));
              *(_OWORD *)(v22 - 24) = *(_OWORD *)(v21 - 24);
              *(void *)(v22 - 8) = *(void *)(v21 - 8);
              *(void *)(v21 - 24) = 0;
              *(void *)(v21 - 16) = 0;
              *(void *)(v21 - 8) = 0;
              v20 -= 24;
            }
            while (-8 * ((uint64_t)(v15 - (void)(v16 + 1)) >> 3) != v20);
          }
          uint64_t v23 = &v90;
          if (v16 <= &v90) {
            uint64_t v23 = &v90 + (v13[1] > (long long **)&v90);
          }
          if (v16 != v23) {
            std::vector<std::basic_string<char16_t>>::__assign_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>((uint64_t)v16, (std::basic_string<char16_t> *)v23->__r_.__value_.__l.__data_, (long long *)v23->__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL* ((uint64_t)(v23->__r_.__value_.__l.__size_ - v23->__r_.__value_.__r.__words[0]) >> 3));
          }
        }
        goto LABEL_41;
      }
      unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - (void)v16) >> 3) + 1;
      if (v24 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - (void)v16) >> 3);
      if (2 * v25 > v24) {
        unint64_t v24 = 2 * v25;
      }
      if (v25 >= 0x555555555555555) {
        unint64_t v26 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v26 = v24;
      }
      std::basic_string<char16_t>::size_type v92 = (void **)(v13 + 2);
      if (!v26)
      {
        memset(v91, 0, sizeof(v91));
LABEL_27:
        long long v87 = v92;
        std::basic_string<char16_t> v29 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(1uLL);
        uint64_t v31 = *((void *)&v91[0] + 1);
        if (*(void *)&v91[1] == *((void *)&v91[0] + 1))
        {
          int64x2_t v34 = vdupq_n_s64(*((unint64_t *)&v91[0] + 1));
          std::basic_string<char16_t> v32 = v29;
        }
        else
        {
          std::basic_string<char16_t> v32 = (void *)((char *)v29 + *(void *)&v91[1] - *((void *)&v91[0] + 1));
          std::basic_string<char16_t> v33 = v29;
          do
          {
            void *v33 = 0;
            v33[1] = 0;
            v33[2] = 0;
            *(_OWORD *)std::basic_string<char16_t> v33 = *(_OWORD *)v31;
            v33[2] = *(void *)(v31 + 16);
            *(void *)uint64_t v31 = 0;
            *(void *)(v31 + 8) = 0;
            *(void *)(v31 + 16) = 0;
            v33 += 3;
            v31 += 24;
          }
          while (v33 != v32);
          int64x2_t v34 = *(int64x2_t *)((char *)v91 + 8);
        }
        unint64_t v35 = *((void *)&v91[1] + 1);
        uint64_t v84 = *(std::basic_string<char16_t> **)&v91[0];
        *(void *)&v91[0] = v29;
        *((void *)&v91[0] + 1) = v29;
        int64x2_t v85 = v34;
        *(void *)&v91[1] = v32;
        *((void *)&v91[1] + 1) = &v29[3 * v30];
        unint64_t v86 = v35;
        std::__split_buffer<std::vector<std::basic_string<char16_t>>>::~__split_buffer((uint64_t)&v84);
        std::basic_string<char16_t> v27 = *(std::basic_string<char16_t> **)&v91[1];
        goto LABEL_33;
      }
      std::basic_string<char16_t> v27 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v26);
      *(void *)&v91[0] = v27;
      *((void *)&v91[0] + 1) = v27;
      *(void *)&v91[1] = v27;
      *((void *)&v91[1] + 1) = &v27[v28];
      if (!v28) {
        goto LABEL_27;
      }
LABEL_33:
      v27->__r_.__value_.__r.__words[0] = 0;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v27, (long long *)v90.__r_.__value_.__l.__data_, (long long *)v90.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v90.__r_.__value_.__l.__size_ - v90.__r_.__value_.__r.__words[0]) >> 3));
      uint64_t v36 = *((void *)&v91[0] + 1);
      BOOL v37 = (std::basic_string<char16_t> *)(*(void *)&v91[1] + 24);
      *(void *)&v91[1] += 24;
      uint64_t v38 = (std::basic_string<char16_t> *)*v13;
      if (v16 != (std::basic_string<char16_t> *)*v13)
      {
        uint64_t v39 = (std::basic_string<char16_t>::__raw *)v16;
        do
        {
          *(void *)(v36 - 24) = 0;
          *(void *)(v36 - 16) = 0;
          v36 -= 24;
          *(void *)(v36 + 16) = 0;
          long long v40 = *(_OWORD *)v39[-1].__words;
          --v39;
          *(_OWORD *)uint64_t v36 = v40;
          *(void *)(v36 + 16) = v39->__words[2];
          v39->__words[0] = 0;
          v39->__words[1] = 0;
          v39->__words[2] = 0;
        }
        while (v39 != (std::basic_string<char16_t>::__raw *)v38);
        BOOL v37 = *(std::basic_string<char16_t> **)&v91[1];
      }
      *((void *)&v91[0] + 1) = v36;
      int v41 = (std::basic_string<char16_t> *)v13[1];
      std::basic_string<char16_t>::size_type v88 = (std::basic_string<char16_t>::__raw *)v37;
      uint64_t v89 = v37;
      uint64_t v84 = (std::basic_string<char16_t> *)(v13 + 2);
      v85.i64[0] = (uint64_t)&v88;
      v85.i64[1] = (uint64_t)&v89;
      if (v16 != v41)
      {
        do
        {
          v37->__r_.__value_.__r.__words[0] = 0;
          v37->__r_.__value_.__l.__size_ = 0;
          v37->__r_.__value_.__r.__words[2] = 0;
          *(_OWORD *)&v37->__r_.__value_.__l.__data_ = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
          v37->__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
          v16->__r_.__value_.__r.__words[0] = 0;
          v16->__r_.__value_.__l.__size_ = 0;
          v16->__r_.__value_.__r.__words[2] = 0;
          ++v37;
          ++v16;
        }
        while (v16 != v41);
        uint64_t v89 = v37;
      }
      LOBYTE(v86) = 1;
      std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v84);
      *(void *)&v91[1] = v37;
      int v42 = (std::basic_string<char16_t> *)*v13;
      unsigned __int16 *v13 = (long long **)*((void *)&v91[0] + 1);
      *((void *)&v91[0] + 1) = v42;
      uint64_t v43 = v13[1];
      v13[1] = *(long long ***)&v91[1];
      uint64_t v44 = *((void *)&v91[0] + 1);
      *(void *)&v91[1] = v43;
      long long v45 = v13[2];
      v13[2] = (long long **)*((void *)&v91[1] + 1);
      *((void *)&v91[1] + 1) = v45;
      *(void *)&v91[0] = v44;
      std::__split_buffer<std::vector<std::basic_string<char16_t>>>::~__split_buffer((uint64_t)v91);
LABEL_41:
      v13 += 3;
    }
    while (v13 != v12);
    unint64_t v14 = v81;
    std::basic_string<char16_t>::size_type v13 = v82;
LABEL_43:
    if ((char *)v13 - (char *)v14 >= 1)
    {
      uint64_t v46 = ((char *)v13 - (char *)v14) / 24;
      uint64_t v47 = *v79;
      uint64_t v48 = (std::basic_string<char16_t> *)v79[1];
      uint64_t v49 = ((uint64_t)v48 - *v79) / 24;
      char v50 = (long long ***)(*v79 + 24 * v49);
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * (((unsigned char *)*v78 - (unsigned char *)v48) >> 3)) < v46)
      {
        unint64_t v51 = v49 + v46;
        if ((unint64_t)(v49 + v46) > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556 * (((uint64_t)*v78 - v47) >> 3) > v51) {
          unint64_t v51 = 0x5555555555555556 * (((uint64_t)*v78 - v47) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * (((uint64_t)*v78 - v47) >> 3) >= 0x555555555555555) {
          unint64_t v52 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v52 = v51;
        }
        long long v87 = v78;
        if (v52) {
          unint64_t v52 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v52);
        }
        else {
          uint64_t v53 = 0;
        }
        v66 = (std::basic_string<char16_t> *)(v52 + 24 * v49);
        uint64_t v84 = (std::basic_string<char16_t> *)v52;
        v85.i64[0] = (uint64_t)v66;
        v85.i64[1] = (uint64_t)v66;
        unint64_t v86 = v52 + 24 * v53;
        int v67 = &v66[v46];
        uint64_t v68 = 24 * v46;
        do
        {
          v66->__r_.__value_.__r.__words[0] = 0;
          v66->__r_.__value_.__l.__size_ = 0;
          v66->__r_.__value_.__r.__words[2] = 0;
          std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v66++, *v14, v14[1], 0xAAAAAAAAAAAAAAABLL * (v14[1] - *v14));
          v14 += 3;
          v68 -= 24;
        }
        while (v68);
        v85.i64[1] = (uint64_t)v67;
        std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>>((uint64_t)v78, (uint64_t)v50, v50, *v79, (void *)*v79, v85.i64[0], v85.i64[0]);
        v85.i64[0] = v69;
        unsigned int v70 = (long long ***)v79[1];
        std::basic_string<char16_t>::size_type v71 = (std::basic_string<char16_t> *)v85.i64[1];
        std::basic_string<char16_t>::size_type v88 = (std::basic_string<char16_t>::__raw *)v85.i64[1];
        uint64_t v89 = (std::basic_string<char16_t> *)v85.i64[1];
        *(void *)&v91[0] = v78;
        *((void *)&v91[0] + 1) = &v88;
        *(void *)&v91[1] = &v89;
        if (v50 != v70)
        {
          do
          {
            v71->__r_.__value_.__r.__words[0] = 0;
            v71->__r_.__value_.__l.__size_ = 0;
            v71->__r_.__value_.__r.__words[2] = 0;
            *(_OWORD *)&v71->__r_.__value_.__l.__data_ = *(_OWORD *)v50;
            v71->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v50[2];
            *char v50 = 0;
            v50[1] = 0;
            v50[2] = 0;
            ++v71;
            v50 += 3;
          }
          while (v50 != v70);
          uint64_t v89 = v71;
        }
        BYTE8(v91[1]) = 1;
        std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v91);
        int64x2_t v72 = *(int64x2_t *)v79;
        uint64_t v73 = v86;
        *int v79 = v85.i64[0];
        v79[1] = (uint64_t)v71;
        int64x2_t v85 = v72;
        uint64_t v74 = v79[2];
        v79[2] = v73;
        unint64_t v86 = v74;
        uint64_t v84 = (std::basic_string<char16_t> *)v72.i64[0];
        std::__split_buffer<std::vector<std::vector<std::basic_string<char16_t>>>>::~__split_buffer((uint64_t)&v84);
        goto LABEL_78;
      }
      uint64_t v75 = ((uint64_t)v48 - *v79) / 24;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * (((char *)v48 - (char *)v50) >> 3)) >= v46)
      {
        uint64_t v54 = &v14[3 * v46];
        char v55 = (std::basic_string<char16_t> *)v79[1];
      }
      else
      {
        *(void *)&v91[0] = v79[1];
        uint64_t v89 = v48;
        uint64_t v54 = &v14[((char *)v48 - (char *)v50) >> 3];
        uint64_t v84 = (std::basic_string<char16_t> *)v78;
        v85.i64[0] = (uint64_t)&v89;
        v85.i64[1] = (uint64_t)v91;
        LOBYTE(v86) = 0;
        char v55 = v48;
        if (v54 != v13)
        {
          uint64_t v56 = &v14[((char *)v48 - (char *)v50) >> 3];
          do
          {
            v55->__r_.__value_.__r.__words[0] = 0;
            v55->__r_.__value_.__l.__size_ = 0;
            v55->__r_.__value_.__r.__words[2] = 0;
            std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v55, *v56, v56[1], 0xAAAAAAAAAAAAAAABLL * (v56[1] - *v56));
            char v55 = (std::basic_string<char16_t> *)(*(void *)&v91[0] + 24);
            *(void *)&v91[0] += 24;
            v56 += 3;
          }
          while (v56 != v13);
        }
        LOBYTE(v86) = 1;
        std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v84);
        v79[1] = (uint64_t)v55;
        if ((char *)v48 - (char *)v50 < 1) {
          goto LABEL_78;
        }
      }
      std::basic_string<char16_t> v57 = &v55[-v46];
      BOOL v58 = (std::basic_string<char16_t>::__raw *)v55;
      while (v57 < v48)
      {
        v58->__words[0] = 0;
        v58->__words[1] = 0;
        v58->__words[2] = 0;
        *(_OWORD *)v58->__words = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
        v58->__words[2] = v57->__r_.__value_.__r.__words[2];
        v57->__r_.__value_.__r.__words[0] = 0;
        v57->__r_.__value_.__l.__size_ = 0;
        v57->__r_.__value_.__r.__words[2] = 0;
        ++v58;
        ++v57;
      }
      BOOL v59 = (std::basic_string<char16_t> *)&v50[3 * v46];
      v79[1] = (uint64_t)v58;
      if (v55 != v59)
      {
        unint64_t v60 = 0;
        unint64_t v61 = 0xAAAAAAAAAAAAAAABLL * (((char *)v55 - (char *)v59) >> 3);
        unint64_t v62 = v47 + 24 * v61 + 24 * v75;
        uint64_t v63 = -24 * v61;
        do
        {
          unint64_t v64 = v62 + v60;
          std::basic_string<char16_t>::size_type v65 = &v55[v60 / 0x18];
          std::vector<std::vector<std::basic_string<char16_t>>>::__vdeallocate((void ***)&v55[v60 / 0x18 - 1]);
          *(_OWORD *)&v65[-1].__r_.__value_.__l.__data_ = *(_OWORD *)(v62 + v60 - 24);
          v65[-1].__r_.__value_.__r.__words[2] = *(void *)(v62 + v60 - 8);
          *(void *)(v64 - 24) = 0;
          *(void *)(v64 - 16) = 0;
          *(void *)(v64 - 8) = 0;
          v60 -= 24;
        }
        while (v63 != v60);
      }
      for (; v14 != v54; v50 += 3)
      {
        if (v14 != v50) {
          std::vector<std::vector<std::basic_string<char16_t>>>::__assign_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>((uint64_t)v50, *v14, v14[1], 0xAAAAAAAAAAAAAAABLL * (v14[1] - *v14));
        }
        v14 += 3;
      }
    }
LABEL_78:
    uint64_t v84 = (std::basic_string<char16_t> *)&v81;
    std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
    uint64_t v84 = &v83;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
    uint64_t v84 = &v90;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v84);
    unint64_t v8 = v80 + 1;
    uint64_t v2 = v77;
  }
  while (v80 + 1 != v76);
}

void sub_1D2C52A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20,uint64_t a21,uint64_t a22,void **a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a23);
  *(void *)(v31 + 8) = v30;
  std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100](&a20);
  a23 = (void **)(v32 - 144);
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&a23);
  a23 = (void **)&a30;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a23);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(std::basic_string<char16_t> *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::basic_string<char16_t> *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)result;
  }
  return result;
}

void sub_1D2C52BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>>*>(uint64_t a1, long long **a2, long long **a3, std::basic_string<char16_t> *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  std::basic_string<char16_t> v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  void v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      v4->__r_.__value_.__r.__words[0] = 0;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v6[1] - (char *)*v6) >> 3));
      uint64_t v4 = ++v11;
      v6 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1D2C52C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

std::basic_string<char16_t> *std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::__wrap_iter<std::basic_string<char16_t> const*>,std::__wrap_iter<std::basic_string<char16_t> const*>>(std::basic_string<char16_t> *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::basic_string<char16_t> *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)result;
  }
  return result;
}

void sub_1D2C52D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::basic_string<char16_t>>::__assign_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(uint64_t a1, std::basic_string<char16_t> *__str, long long *a3, unint64_t a4)
{
  uint64_t v6 = (long long *)__str;
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(std::basic_string<char16_t> **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100]((void *)a1, v11);
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v8, v6, a3, *(std::basic_string<char16_t> **)(a1 + 8));
LABEL_15:
    *(void *)(a1 + 8) = v12;
    return;
  }
  std::basic_string<char16_t>::size_type v13 = *(std::basic_string<char16_t> **)(a1 + 8);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)v13 - (char *)v9) >> 3) < a4)
  {
    unint64_t v14 = (long long *)(&__str->__r_.__value_.__l.__data_ + (((char *)v13 - (char *)v9) >> 3));
    if (v13 != v9)
    {
      uint64_t v15 = 8 * (((char *)v13 - (char *)v9) >> 3);
      do
      {
        std::basic_string<char16_t>::operator=(v9, (const std::basic_string<char16_t> *)v6);
        uint64_t v6 = (long long *)((char *)v6 + 24);
        ++v9;
        v15 -= 24;
      }
      while (v15);
      uint64_t v9 = *(std::basic_string<char16_t> **)(a1 + 8);
    }
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v8, v14, a3, v9);
    goto LABEL_15;
  }
  if (__str != (std::basic_string<char16_t> *)a3)
  {
    do
    {
      std::basic_string<char16_t>::operator=(v9, (const std::basic_string<char16_t> *)v6);
      uint64_t v6 = (long long *)((char *)v6 + 24);
      ++v9;
    }
    while (v6 != a3);
    std::basic_string<char16_t>::size_type v13 = *(std::basic_string<char16_t> **)(a1 + 8);
  }
  while (v13 != v9)
  {
    if (SHIBYTE(v13[-1].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13[-1].__r_.__value_.__l.__data_);
    }
    --v13;
  }
  *(void *)(a1 + 8) = v9;
}

void sub_1D2C52F50(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(unint64_t a1)
{
  if (a1 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a1);
}

uint64_t std::__split_buffer<std::vector<std::basic_string<char16_t>>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v6 = v4;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v6);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void ****)(a1 + 16);
    uint64_t v4 = **(void ****)(a1 + 8);
    while (v3 != v4)
    {
      v3 -= 3;
      uint64_t v5 = v3;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v5);
    }
  }
  return a1;
}

void std::vector<std::basic_string<char16_t>>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100](a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*,std::basic_string<char16_t>*,std::basic_string<char16_t>*>(uint64_t a1, long long *a2, long long *a3, std::basic_string<char16_t> *this)
{
  uint64_t v4 = this;
  unint64_t v11 = this;
  uint64_t v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v4, *(const std::basic_string<char16_t>::value_type **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      uint64_t v6 = (long long *)((char *)v6 + 24);
      uint64_t v12 = ++v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1D2C53150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

char *std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

uint64_t std::__split_buffer<std::vector<std::vector<std::basic_string<char16_t>>>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v6 = v4;
    std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v6);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

double std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  while (a3 != a5)
  {
    *(void *)(a7 - 24) = 0;
    *(void *)(a7 - 16) = 0;
    a7 -= 24;
    *(void *)(a7 + 16) = 0;
    long long v8 = *(_OWORD *)(a3 - 3);
    a3 -= 3;
    double result = *(double *)&v8;
    *(_OWORD *)a7 = v8;
    *(void *)(a7 + 16) = a3[2];
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::vector<std::vector<std::basic_string<char16_t>>>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void ****)(a1 + 16);
    uint64_t v4 = **(void ****)(a1 + 8);
    while (v3 != v4)
    {
      v3 -= 3;
      uint64_t v5 = v3;
      std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v5);
    }
  }
  return a1;
}

std::basic_string<char16_t> *std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(std::basic_string<char16_t> *result, long long **a2, long long **a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100](result, a4);
    double result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::basic_string<char16_t> *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)result;
  }
  return result;
}

void sub_1D2C53314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(uint64_t a1, long long **a2, long long **a3, std::basic_string<char16_t> *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  unint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  void v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      v4->__r_.__value_.__r.__words[0] = 0;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v6[1] - (char *)*v6) >> 3));
      uint64_t v4 = ++v11;
      v6 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1D2C533E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void std::vector<std::vector<std::basic_string<char16_t>>>::__assign_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(uint64_t a1, long long **a2, long long **a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  char v9 = *(void ***)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    std::vector<std::vector<std::basic_string<char16_t>>>::__vdeallocate((void ***)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100]((void *)a1, v11);
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v8, a2, a3, *(std::basic_string<char16_t> **)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    std::basic_string<char16_t>::size_type v13 = &a2[(uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3];
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *>((uint64_t)a2, (uint64_t)v13, (uint64_t)v9);
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v8, v13, a3, *(std::basic_string<char16_t> **)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }
  uint64_t v14 = std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *>((uint64_t)a2, (uint64_t)a3, (uint64_t)v9);
  uint64_t v15 = *(void ***)(a1 + 8);
  while (v15 != (void **)v14)
  {
    v15 -= 3;
    int v16 = v15;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v16);
  }
  *(void *)(a1 + 8) = v14;
}

void sub_1D2C5355C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1D2C53564(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *,std::vector<std::basic_string<char16_t>> *>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      if (v5 != a3) {
        std::vector<std::basic_string<char16_t>>::__assign_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a3, *(std::basic_string<char16_t> **)v5, *(long long **)(v5 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v5 + 8) - *(void *)v5) >> 3));
      }
      v5 += 24;
      a3 += 24;
    }
    while (v5 != a2);
  }
  return a3;
}

void std::vector<std::vector<std::basic_string<char16_t>>>::__vdeallocate(void ***a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[1];
    uint64_t v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v3 -= 3;
        uint64_t v5 = v3;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v5);
      }
      while (v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

BOOL morphun::grammar::synthesis::FiGrammarSynthesizer::hasBackVowels(uint64_t a1)
{
  {
    operator new();
  }
  uint64_t v2 = (void *)morphun::grammar::synthesis::BACK_VOWELS(void)::BACK_VOWELS_;
  if (!morphun::grammar::synthesis::BACK_VOWELS(void)::BACK_VOWELS_) {
    goto LABEL_19;
  }
  {
    operator new();
  }
  if (!morphun::grammar::synthesis::NFKC(void)::NFKC_)
  {
LABEL_19:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::dictionary::PhraseProperties::normalize(a1, (uint64_t)&__p);
  if ((v10 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v10 & 0x80u) == 0) {
    int v4 = v10;
  }
  else {
    int v4 = v9;
  }
  BOOL v5 = morphun::util::UnicodeSetUtils::containsSome(v2, (uint64_t)p_p, v4);
  if ((char)v10 < 0) {
    operator delete(__p);
  }
  return v5;
}

void sub_1D2C537E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFKCInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result = unorm2_getNFKCInstance();
  *(void *)this = result;
  *((unsigned char *)this + 8) = 0;
  return result;
}

void sub_1D2C538F4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C53AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      std::basic_string<char16_t>::size_type v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      std::basic_string<char16_t>::size_type v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        unint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        unint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    std::basic_string<char16_t>::size_type v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          std::basic_string<char16_t>::size_type v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        std::basic_string<char16_t>::size_type v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C53D10(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C53D88(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer::toString(int a1@<W0>, std::basic_string<char16_t> *a2@<X8>)
{
  {
    operator new();
  }
  uint64_t v4 = npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Count)::valueMap);
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v5 = v4 + 8;
  uint64_t v6 = v7;
  if (!v7) {
    goto LABEL_12;
  }
  uint64_t v8 = v5;
  do
  {
    int v9 = *(_DWORD *)(v6 + 32);
    BOOL v10 = v9 < a1;
    if (v9 >= a1) {
      BOOL v11 = (uint64_t *)v6;
    }
    else {
      BOOL v11 = (uint64_t *)(v6 + 8);
    }
    if (!v10) {
      uint64_t v8 = v6;
    }
    uint64_t v6 = *v11;
  }
  while (*v11);
  if (v8 == v5 || *(_DWORD *)(v8 + 32) > a1) {
LABEL_12:
  }
    uint64_t v8 = v5;
  if (v8 == npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Count)::valueMap)
           + 8)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "u");
  }
  else if (*(char *)(v8 + 63) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *(const std::basic_string<char16_t>::value_type **)(v8 + 40), *(void *)(v8 + 48));
  }
  else
  {
    long long v12 = *(_OWORD *)(v8 + 40);
    a2->__r_.__value_.__r.__words[2] = *(void *)(v8 + 56);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v12;
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t *v11;
  long long v12;

  {
    operator new();
  }
  uint64_t v4 = npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Case)::valueMap);
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v5 = v4 + 8;
  uint64_t v6 = v7;
  if (!v7) {
    goto LABEL_12;
  }
  uint64_t v8 = v5;
  do
  {
    int v9 = *(_DWORD *)(v6 + 32);
    BOOL v10 = v9 < a1;
    if (v9 >= a1) {
      BOOL v11 = (uint64_t *)v6;
    }
    else {
      BOOL v11 = (uint64_t *)(v6 + 8);
    }
    if (!v10) {
      uint64_t v8 = v6;
    }
    uint64_t v6 = *v11;
  }
  while (*v11);
  if (v8 == v5 || *(_DWORD *)(v8 + 32) > a1) {
LABEL_12:
  }
    uint64_t v8 = v5;
  if (v8 == npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>>(morphun::grammar::synthesis::FiGrammarSynthesizer::toString(morphun::grammar::synthesis::FiGrammarSynthesizer::Case)::valueMap)
           + 8)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "u");
  }
  else if (*(char *)(v8 + 63) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *(const std::basic_string<char16_t>::value_type **)(v8 + 40), *(void *)(v8 + 48));
  }
  else
  {
    long long v12 = *(_OWORD *)(v8 + 40);
    a2->__r_.__value_.__r.__words[2] = *(void *)(v8 + 56);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v12;
  }
}

void sub_1D2C53FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v19 = 0;
  while (1)
  {
    if (*(char *)(v17 + v19 + 63) < 0) {
      operator delete(*(void **)(v17 + v19 + 40));
    }
    v19 -= 32;
    if (v19 == -64)
    {
      MEMORY[0x1D942B8B0](v16, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t **a1, int *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = 0;
    uint64_t v7 = &a2[8 * a3];
    uint64_t v8 = a1 + 1;
    while (1)
    {
      int v9 = v4;
      if (v8 == (uint64_t **)v4) {
        goto LABEL_9;
      }
      BOOL v10 = v6;
      BOOL v11 = v4;
      if (v6)
      {
        do
        {
          int v9 = v10;
          BOOL v10 = (uint64_t *)v10[1];
        }
        while (v10);
      }
      else
      {
        do
        {
          int v9 = (uint64_t *)v11[2];
          BOOL v12 = *v9 == (void)v11;
          BOOL v11 = v9;
        }
        while (v12);
      }
      int v13 = *v5;
      if (*((_DWORD *)v9 + 8) < *v5)
      {
LABEL_9:
        uint64_t v14 = (char **)(v6 ? v9 : v4);
        uint64_t v15 = (char **)(v6 ? v9 + 1 : v4);
      }
      else
      {
        uint64_t v14 = (char **)v4;
        uint64_t v15 = (char **)v4;
        if (v6)
        {
          uint64_t v15 = (char **)v4;
          while (1)
          {
            while (1)
            {
              uint64_t v14 = (char **)v6;
              int v19 = *((_DWORD *)v6 + 8);
              if (v13 >= v19) {
                break;
              }
              uint64_t v6 = (uint64_t *)*v14;
              uint64_t v15 = v14;
              if (!*v14) {
                goto LABEL_16;
              }
            }
            if (v19 >= v13) {
              break;
            }
            uint64_t v15 = v14 + 1;
            uint64_t v6 = (uint64_t *)v14[1];
            if (!v6) {
              goto LABEL_16;
            }
          }
        }
      }
      if (!*v15)
      {
LABEL_16:
        uint64_t v16 = (char *)operator new(0x40uLL);
        *((_DWORD *)v16 + 8) = *v5;
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 40);
        if (*((char *)v5 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *((const std::basic_string<char16_t>::value_type **)v5 + 1), *((void *)v5 + 2));
        }
        else
        {
          long long v18 = *(_OWORD *)(v5 + 2);
          *((void *)v16 + 7) = *((void *)v5 + 3);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v14;
        *uint64_t v15 = v16;
        uint64_t v20 = (uint64_t *)**a1;
        if (v20)
        {
          *a1 = v20;
          uint64_t v16 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 8;
      if (v5 == v7) {
        break;
      }
      uint64_t v8 = (uint64_t **)*a1;
      uint64_t v6 = a1[1];
    }
  }
  return a1;
}

void sub_1D2C541C0(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C54234(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*(void *)a1);
    std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*((void *)a1 + 1));
    if (a1[63] < 0) {
      operator delete(*((void **)a1 + 5));
    }
    operator delete(a1);
  }
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C5469C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  while (1)
  {
    if (*((char *)v10 - 9) < 0) {
      operator delete((void *)*(v10 - 4));
    }
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D942B8B0](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      BOOL v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        BOOL v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    BOOL v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          BOOL v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C548F4(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::Case>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C5496C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C54DD0(_Unwind_Exception *a1)
{
  uint64_t v4 = 352;
  while (1)
  {
    if (*(char *)(v2 + v4 - 1) < 0) {
      operator delete(*(void **)(v2 + v4 - 24));
    }
    v4 -= 32;
    if (!v4)
    {
      MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t **a1, int *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = 0;
    BOOL v7 = &a2[8 * a3];
    uint64_t v8 = a1 + 1;
    while (1)
    {
      uint64_t v9 = v4;
      if (v8 == (uint64_t **)v4) {
        goto LABEL_9;
      }
      uint64_t v10 = v6;
      BOOL v11 = v4;
      if (v6)
      {
        do
        {
          uint64_t v9 = v10;
          uint64_t v10 = (uint64_t *)v10[1];
        }
        while (v10);
      }
      else
      {
        do
        {
          uint64_t v9 = (uint64_t *)v11[2];
          BOOL v12 = *v9 == (void)v11;
          BOOL v11 = v9;
        }
        while (v12);
      }
      int v13 = *v5;
      if (*((_DWORD *)v9 + 8) < *v5)
      {
LABEL_9:
        uint64_t v14 = (char **)(v6 ? v9 : v4);
        uint64_t v15 = (char **)(v6 ? v9 + 1 : v4);
      }
      else
      {
        uint64_t v14 = (char **)v4;
        uint64_t v15 = (char **)v4;
        if (v6)
        {
          uint64_t v15 = (char **)v4;
          while (1)
          {
            while (1)
            {
              uint64_t v14 = (char **)v6;
              int v19 = *((_DWORD *)v6 + 8);
              if (v13 >= v19) {
                break;
              }
              uint64_t v6 = (uint64_t *)*v14;
              uint64_t v15 = v14;
              if (!*v14) {
                goto LABEL_16;
              }
            }
            if (v19 >= v13) {
              break;
            }
            uint64_t v15 = v14 + 1;
            uint64_t v6 = (uint64_t *)v14[1];
            if (!v6) {
              goto LABEL_16;
            }
          }
        }
      }
      if (!*v15)
      {
LABEL_16:
        uint64_t v16 = (char *)operator new(0x40uLL);
        *((_DWORD *)v16 + 8) = *v5;
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 40);
        if (*((char *)v5 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *((const std::basic_string<char16_t>::value_type **)v5 + 1), *((void *)v5 + 2));
        }
        else
        {
          long long v18 = *(_OWORD *)(v5 + 2);
          *((void *)v16 + 7) = *((void *)v5 + 3);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v14;
        *uint64_t v15 = v16;
        uint64_t v20 = (uint64_t *)**a1;
        if (v20)
        {
          *a1 = v20;
          uint64_t v16 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 8;
      if (v5 == v7) {
        break;
      }
      uint64_t v8 = (uint64_t **)*a1;
      uint64_t v6 = a1[1];
    }
  }
  return a1;
}

void sub_1D2C5501C(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<morphun::grammar::synthesis::FiGrammarSynthesizer::Case,std::basic_string<char16_t>>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C55090(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>>(morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C552C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  while (1)
  {
    if (*((char *)v10 - 9) < 0) {
      operator delete((void *)*(v10 - 4));
    }
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D942B8B0](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      BOOL v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        BOOL v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    BOOL v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          BOOL v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C554FC(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FiGrammarSynthesizer::PronounPerson>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C55574(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::selectLemmaInflection(void *a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v5 = (void *)a1[35];
  uint64_t v6 = (void *)a1[36];
  if (v5 == v6)
  {
    BOOL v7 = (void *)a1[35];
  }
  else
  {
    BOOL v7 = (void *)a1[35];
    while ((*v7 & *(void *)(*a2 + 8)) == 0)
    {
      if (++v7 == v6)
      {
        BOOL v7 = (void *)a1[36];
        break;
      }
    }
  }
  unint64_t v8 = v7 - v5;
  uint64_t v9 = a1[38];
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((a1[39] - v9) >> 3);
  if (v8 == v10)
  {
    BOOL v11 = (const void **)(a1 + 19);
  }
  else
  {
    if (v10 <= v8) {
      std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
    }
    BOOL v11 = (const void **)(v9 + 24 * v8);
  }
  memset(__p, 0, sizeof(__p));
  std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(__p, *v11, (uint64_t)v11[1], ((unsigned char *)v11[1] - (unsigned char *)*v11) >> 3);
  morphun::dictionary::Inflector_InflectionPattern::selectLemmaInflection(a3, *a2, a2[2], (uint64_t **)__p);
  BOOL v12 = __p[0];
  if (__p[0])
  {
    operator delete(v12);
  }
}

void sub_1D2C5568C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]()
{
}

void *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D2C5571C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer *this, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v4 - 40)) = a2[5];
  unint64_t v10 = (void **)((char *)this + 304);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v10);
  uint64_t v5 = (void *)*((void *)this + 35);
  if (v5)
  {
    *((void *)this + 36) = v5;
    operator delete(v5);
  }
  uint64_t v6 = a2[1];
  *(void *)this = v6;
  *(void *)((char *)this + *(void *)(v6 - 40)) = a2[4];
  uint64_t v7 = (void *)*((void *)this + 25);
  if (v7)
  {
    *((void *)this + 26) = v7;
    operator delete(v7);
  }
  unint64_t v10 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v10);
  size_t v8 = (void *)*((void *)this + 19);
  if (v8)
  {
    *((void *)this + 20) = v8;
    operator delete(v8);
  }
  uint64_t v9 = a2[2];
  *(void *)this = v9;
  *(void *)((char *)this + *(void *)(v9 - 40)) = a2[3];
}

void morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(morphun::analysis::MorphologicalAnalyzer *this)
{
  *(void *)this = &off_1F2A0FDB0;
  uint64_t v2 = (void *)*((void *)this + 25);
  if (v2)
  {
    *((void *)this + 26) = v2;
    operator delete(v2);
  }
  uint64_t v4 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = (void *)*((void *)this + 19);
  if (v3)
  {
    *((void *)this + 20) = v3;
    operator delete(v3);
  }
  *(void *)this = &unk_1F29FFA58;

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  void *v3;
  void **v4;

  *(void *)this = &off_1F2A0FDB0;
  uint64_t v2 = (void *)*((void *)this + 25);
  if (v2)
  {
    *((void *)this + 26) = v2;
    operator delete(v2);
  }
  uint64_t v4 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = (void *)*((void *)this + 19);
  if (v3)
  {
    *((void *)this + 20) = v3;
    operator delete(v3);
  }
  *(void *)this = &unk_1F29FFA58;
}

uint64_t morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::DictionaryGenderedNounLemmatizer(uint64_t a1, uint64_t *a2, morphun::dictionary::DictionaryMetaData *a3, uint64_t *a4)
{
  *((void *)&v99 + 1) = *MEMORY[0x1E4F143B8];
  uint64_t v5 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)a1);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v85 = *(void *)v5;
  uint64_t v8 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v5);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  uint64_t v10 = *(void *)v8;
  uint64_t v11 = *(void *)(v8 + 8);
  BOOL v12 = operator new(0x20uLL);
  int v13 = v12;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)(v12 + 4);
  v94.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)(v12 + 4);
  if ((v9 & 0x80u) == 0) {
    uint64_t v14 = v8;
  }
  else {
    uint64_t v14 = v10;
  }
  if ((v9 & 0x80u) == 0) {
    uint64_t v15 = v9;
  }
  else {
    uint64_t v15 = v11;
  }
  uint64_t v16 = v85;
  if ((v6 & 0x80u) != 0)
  {
    uint64_t v17 = v7;
  }
  else
  {
    uint64_t v16 = v5;
    uint64_t v17 = v6;
  }
  void *v12 = v16;
  v12[1] = v17;
  v12[2] = v14;
  v12[3] = v15;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v12;
  uint64_t v89 = 0;
  std::basic_string<char16_t> v90 = 0;
  v91 = 0;
  memset(&v98, 0, sizeof(v98));
  morphun::analysis::MorphologicalAnalyzer::MorphologicalAnalyzer((uint64_t *)a1, a2 + 1, a3, (uint64_t *)&v94, (uint64_t)&v89, (uint64_t **)&v98);
  std::basic_string<char16_t>::size_type v92 = &v98;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  v98.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v89;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v98);
  operator delete(v13);
  uint64_t v18 = *a2;
  *(void *)a1 = *a2;
  int v19 = (morphun::grammar::synthesis::GrammemeConstants *)a2[5];
  *(void *)(a1 + *(void *)(v18 - 40)) = v19;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 224) = 4;
  *(_OWORD *)(a1 + 232) = 0u;
  std::basic_string<char16_t>::size_type v88 = (void **)(a1 + 280);
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v21 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v19);
  uint64_t v22 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v21);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)v22;
  uint64_t v25 = *(void *)(v22 + 8);
  unint64_t v26 = operator new(0x10uLL);
  std::basic_string<char16_t> v27 = v26;
  if ((v23 & 0x80u) == 0) {
    uint64_t v28 = v22;
  }
  else {
    uint64_t v28 = v24;
  }
  if ((v23 & 0x80u) == 0) {
    uint64_t v29 = v23;
  }
  else {
    uint64_t v29 = v25;
  }
  *unint64_t v26 = v28;
  v26[1] = v29;
  if (*(char *)(v21 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v94, *(const std::basic_string<char16_t>::value_type **)v21, *(void *)(v21 + 8));
  }
  else
  {
    long long v30 = *(_OWORD *)v21;
    v94.__r_.__value_.__r.__words[2] = *(void *)(v21 + 16);
    *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v30;
  }
  std::basic_string<char16_t> __p = 0;
  __int16 v96 = 0;
  uint64_t v97 = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(&__p, v27, (uint64_t)v27 + 16, 1uLL);
  uint64_t v89 = 0;
  std::basic_string<char16_t> v90 = 0;
  v91 = 0;
  v98.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v89;
  LOBYTE(v98.__r_.__value_.__r.__words[1]) = 0;
  uint64_t v31 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  uint64_t v32 = (std::basic_string<char16_t>::__raw *)v31;
  uint64_t v89 = v31;
  std::basic_string<char16_t> v90 = v31;
  std::basic_string<char16_t> v33 = v31 + 2;
  v91 = v31 + 2;
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(v31, v94.__r_.__value_.__l.__data_, v94.__r_.__value_.__l.__size_);
  }
  else {
    *uint64_t v31 = v94;
  }
  v32[1].__words[0] = 0;
  v32[1].__words[1] = 0;
  v32[1].__words[2] = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(v32[1].__words, __p, (uint64_t)v96, (v96 - (unsigned char *)__p) >> 4);
  std::basic_string<char16_t> v90 = v33;
  if (__p)
  {
    __int16 v96 = __p;
    operator delete(__p);
  }
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v94.__r_.__value_.__l.__data_);
  }
  operator delete(v27);
  uint64_t v36 = v89;
  unint64_t v35 = v90;
  if (v89 != v90)
  {
    BOOL v37 = (void *)(a1 + 304);
    do
    {
      if (SHIBYTE(v36->__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v98, v36->__r_.__value_.__l.__data_, v36->__r_.__value_.__l.__size_);
      }
      else
      {
        long long v38 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
        v98.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v38;
      }
      memset(&v94, 0, sizeof(v94));
      std::basic_string<char16_t>::size_type v92 = &v94;
      char v93 = 0;
      v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
      v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
      v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
      v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (long long *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
      uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v20, (uint64_t *)&v94);
      uint64_t v40 = BinaryProperties;
      int v42 = *(uint64_t **)(a1 + 288);
      unint64_t v41 = *(void *)(a1 + 296);
      if ((unint64_t)v42 >= v41)
      {
        uint64_t v44 = (uint64_t *)*v88;
        uint64_t v45 = ((char *)v42 - (unsigned char *)*v88) >> 3;
        unint64_t v46 = v45 + 1;
        if ((unint64_t)(v45 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v47 = v41 - (void)v44;
        if (v47 >> 2 > v46) {
          unint64_t v46 = v47 >> 2;
        }
        BOOL v48 = (unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8;
        unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
        if (!v48) {
          unint64_t v49 = v46;
        }
        if (v49)
        {
          unint64_t v49 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v49);
          uint64_t v44 = *(uint64_t **)(a1 + 280);
          int v42 = *(uint64_t **)(a1 + 288);
        }
        else
        {
          uint64_t v50 = 0;
        }
        unint64_t v51 = (uint64_t *)(v49 + 8 * v45);
        *unint64_t v51 = v40;
        uint64_t v43 = v51 + 1;
        while (v42 != v44)
        {
          uint64_t v52 = *--v42;
          *--unint64_t v51 = v52;
        }
        *(void *)(a1 + 280) = v51;
        *(void *)(a1 + 288) = v43;
        *(void *)(a1 + 296) = v49 + 8 * v50;
        if (v44) {
          operator delete(v44);
        }
      }
      else
      {
        *int v42 = BinaryProperties;
        uint64_t v43 = v42 + 1;
      }
      *(void *)(a1 + 288) = v43;
      std::basic_string<char16_t>::size_type v92 = &v94;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
      if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v98.__r_.__value_.__l.__data_);
      }
      morphun::analysis::MorphologicalAnalyzer::convertLemmaAttributes((uint64_t)&v98, v20, (uint64_t *)&v36[1]);
      uint64_t v54 = *(std::basic_string<char16_t> **)(a1 + 312);
      unint64_t v53 = *(void *)(a1 + 320);
      if ((unint64_t)v54 >= v53)
      {
        unint64_t v56 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v54 - *v37) >> 3);
        unint64_t v57 = v56 + 1;
        if (v56 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v53 - *v37) >> 3);
        if (2 * v58 > v57) {
          unint64_t v57 = 2 * v58;
        }
        if (v58 >= 0x555555555555555) {
          unint64_t v59 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v59 = v57;
        }
        __int16 v96 = (unsigned char *)(a1 + 320);
        unint64_t v60 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v59);
        unint64_t v61 = (std::basic_string<char16_t> *)&v60[24 * v56];
        v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v60;
        v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v61;
        std::basic_string<char16_t> __p = &v60[24 * v62];
        std::basic_string<char16_t> *v61 = v98;
        v94.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&v61[1];
        std::vector<std::vector<long long>>::__swap_out_circular_buffer(v37, &v94);
        char v55 = *(std::basic_string<char16_t> **)(a1 + 312);
        int64x2_t v34 = (morphun::grammar::synthesis::GrammemeConstants *)std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&v94);
      }
      else
      {
        std::basic_string<char16_t> *v54 = v98;
        char v55 = v54 + 1;
        *(void *)(a1 + 312) = v54 + 1;
      }
      *(void *)(a1 + 312) = v55;
      v36 += 2;
    }
    while (v36 != v35);
  }
  uint64_t v63 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v34);
  if (*(char *)(v63 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v63, *(void *)(v63 + 8));
  }
  else
  {
    long long v64 = *(_OWORD *)v63;
    v98.__r_.__value_.__r.__words[2] = *(void *)(v63 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v64;
  }
  memset(&v94, 0, sizeof(v94));
  std::basic_string<char16_t>::size_type v92 = &v94;
  char v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (long long *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::size_type v65 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v20, (uint64_t *)(a1 + 240), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v65);
  std::basic_string<char16_t>::size_type v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v98.__r_.__value_.__l.__data_);
  }
  uint64_t v67 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v66);
  if (*(char *)(v67 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v67, *(void *)(v67 + 8));
  }
  else
  {
    long long v68 = *(_OWORD *)v67;
    v98.__r_.__value_.__r.__words[2] = *(void *)(v67 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v68;
  }
  memset(&v94, 0, sizeof(v94));
  std::basic_string<char16_t>::size_type v92 = &v94;
  char v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (long long *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  uint64_t v69 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v20, (uint64_t *)(a1 + 248), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v69);
  std::basic_string<char16_t>::size_type v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v98.__r_.__value_.__l.__data_);
  }
  uint64_t v71 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v70);
  if (*(char *)(v71 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v71, *(void *)(v71 + 8));
  }
  else
  {
    long long v72 = *(_OWORD *)v71;
    v98.__r_.__value_.__r.__words[2] = *(void *)(v71 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v72;
  }
  memset(&v94, 0, sizeof(v94));
  std::basic_string<char16_t>::size_type v92 = &v94;
  char v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (long long *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  uint64_t v73 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v20, (uint64_t *)(a1 + 256), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v73);
  std::basic_string<char16_t>::size_type v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v98.__r_.__value_.__l.__data_);
  }
  uint64_t v75 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v74);
  if (*(char *)(v75 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v75, *(void *)(v75 + 8));
  }
  else
  {
    long long v76 = *(_OWORD *)v75;
    v98.__r_.__value_.__r.__words[2] = *(void *)(v75 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v76;
  }
  memset(&v94, 0, sizeof(v94));
  std::basic_string<char16_t>::size_type v92 = &v94;
  char v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (long long *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  uint64_t v77 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v20, (uint64_t *)(a1 + 264), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v77);
  std::basic_string<char16_t>::size_type v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v98.__r_.__value_.__l.__data_);
  }
  uint64_t v79 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v78);
  if (*(char *)(v79 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)v79, *(void *)(v79 + 8));
  }
  else
  {
    long long v80 = *(_OWORD *)v79;
    v98.__r_.__value_.__r.__words[2] = *(void *)(v79 + 16);
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v80;
  }
  memset(&v94, 0, sizeof(v94));
  std::basic_string<char16_t>::size_type v92 = &v94;
  char v93 = 0;
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
  v94.__r_.__value_.__l.__size_ = v94.__r_.__value_.__r.__words[0];
  v94.__r_.__value_.__r.__words[2] = v94.__r_.__value_.__r.__words[0] + 24;
  v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v94.__r_.__value_.__r.__words[2], (long long *)&v98, &v99, (std::basic_string<char16_t> *)v94.__r_.__value_.__l.__data_);
  BOOL v81 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v20, (uint64_t *)(a1 + 272), (uint64_t *)&v94);
  morphun::util::Validate::notNull<long long>((uint64_t)v81);
  std::basic_string<char16_t>::size_type v92 = &v94;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v92);
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v98.__r_.__value_.__l.__data_);
  }
  uint64_t v82 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v20, (uint64_t *)(a1 + 232), a4);
  morphun::util::Validate::notNull<long long>((uint64_t)v82);
  v94.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v89;
  std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v94);
  return a1;
}

void sub_1D2C5640C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v29 - 128));
  std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>::~pair((uint64_t)&__p);
  operator delete(v27);
  std::pair<std::vector<long long>,std::vector<std::vector<long long>>>::~pair(a15);
  morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(v26, v28);
  _Unwind_Resume(a1);
}

void std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::destroy[abi:ne180100](v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>::~pair(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::pair<std::vector<long long>,std::vector<std::vector<long long>>>::~pair(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 24);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v2 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(morphun::analysis::MorphologicalAnalyzer *this, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v4 - 40)) = a2[3];
  uint64_t v5 = (void *)*((void *)this + 25);
  if (v5)
  {
    *((void *)this + 26) = v5;
    operator delete(v5);
  }
  uint64_t v8 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v8);
  uint64_t v6 = (void *)*((void *)this + 19);
  if (v6)
  {
    *((void *)this + 20) = v6;
    operator delete(v6);
  }
  uint64_t v7 = a2[1];
  *(void *)this = v7;
  *(void *)((char *)this + *(void *)(v7 - 40)) = a2[2];
}

void *std::vector<std::vector<long long>>::__swap_out_circular_buffer(void *result, void *a2)
{
  uint64_t v3 = (void *)*result;
  uint64_t v2 = (void *)result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    *(void *)(v4 - 24) = 0;
    *(void *)(v4 - 16) = 0;
    v4 -= 24;
    *(void *)(v4 + 16) = 0;
    long long v5 = *(_OWORD *)(v2 - 3);
    v2 -= 3;
    *(_OWORD *)uint64_t v4 = v5;
    *(void *)(v4 + 16) = v2[2];
    void *v2 = 0;
    v2[1] = 0;
    v2[2] = 0;
  }
  a2[1] = v4;
  uint64_t v6 = (void *)*result;
  char *result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::vector<long long>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    uint64_t v4 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v4)
    {
      *(void *)(v2 - 16) = v4;
      operator delete(v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::u16string_view>>>::destroy[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::getLemma(std::basic_string<char16_t> *a1, uint64_t a2, unsigned __int16 *__src, std::basic_string<char16_t>::size_type a4, uint64_t a5)
{
  uint64_t v7 = a1;
  if (*(_DWORD *)(a2 + 224) > (int)a4)
  {
    if (a4 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v15 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v15 = a4 | 3;
      }
      p_dst = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v15 + 1);
      *((void *)&__dst + 1) = a4;
      *(void *)&long long v69 = v16 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      BYTE7(v69) = a4;
      p_dst = &__dst;
      if (!a4) {
        goto LABEL_16;
      }
    }
    memmove(p_dst, __src, 2 * a4);
LABEL_16:
    *((_WORD *)p_dst + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    return;
  }
  if (!a5)
  {
    LOBYTE(a1->__r_.__value_.__l.__data_) = 0;
    LOBYTE(a1[1].__r_.__value_.__l.__data_) = 0;
    return;
  }
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  unint64_t v79 = 0;
  if ((*(void *)(a2 + 232) & a5) == 0)
  {
    if (a4 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v20 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v20 = a4 | 3;
      }
      uint64_t v17 = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v20 + 1);
      *((void *)&__dst + 1) = a4;
      *(void *)&long long v69 = v21 | 0x8000000000000000;
      *(void *)&long long __dst = v17;
    }
    else
    {
      BYTE7(v69) = a4;
      uint64_t v17 = &__dst;
      if (!a4) {
        goto LABEL_32;
      }
    }
    memmove(v17, __src, 2 * a4);
LABEL_32:
    *((_WORD *)v17 + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    goto LABEL_161;
  }
  memset(&v76, 0, sizeof(v76));
  if ((*(void *)(a2 + 256) & a5) == 0)
  {
    if ((*(void *)(a2 + 248) & a5) == 0) {
      goto LABEL_35;
    }
    uint64_t v18 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)a1);
    std::basic_string<char16_t>::operator=(&v76, v18);
    uint64_t v14 = v78;
    if ((unint64_t)v78 < v79)
    {
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_11;
      }
LABEL_25:
      long long v19 = *(_OWORD *)&v76.__r_.__value_.__l.__data_;
      v14->__r_.__value_.__r.__words[2] = v76.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v19;
      goto LABEL_26;
    }
LABEL_33:
    a1 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v77, (long long *)&v76);
    goto LABEL_34;
  }
  int v13 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)a1);
  std::basic_string<char16_t>::operator=(&v76, v13);
  uint64_t v14 = v78;
  if ((unint64_t)v78 >= v79) {
    goto LABEL_33;
  }
  if ((SHIBYTE(v76.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_25;
  }
LABEL_11:
  std::basic_string<char16_t>::__init_copy_ctor_external(v78, v76.__r_.__value_.__l.__data_, v76.__r_.__value_.__l.__size_);
LABEL_26:
  a1 = v14 + 1;
LABEL_34:
  uint64_t v78 = a1;
LABEL_35:
  memset(&v75, 0, sizeof(v75));
  if ((*(void *)(a2 + 272) & a5) == 0)
  {
    if ((*(void *)(a2 + 264) & a5) == 0) {
      goto LABEL_46;
    }
    uint64_t v24 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)a1);
    std::basic_string<char16_t>::operator=(&v75, v24);
    uint64_t v23 = v78;
    if ((unint64_t)v78 < v79)
    {
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_38;
      }
LABEL_42:
      long long v25 = *(_OWORD *)&v75.__r_.__value_.__l.__data_;
      v23->__r_.__value_.__r.__words[2] = v75.__r_.__value_.__r.__words[2];
      *(_OWORD *)&v23->__r_.__value_.__l.__data_ = v25;
      goto LABEL_43;
    }
LABEL_44:
    a1 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v77, (long long *)&v75);
    goto LABEL_45;
  }
  uint64_t v22 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)a1);
  std::basic_string<char16_t>::operator=(&v75, v22);
  uint64_t v23 = v78;
  if ((unint64_t)v78 >= v79) {
    goto LABEL_44;
  }
  if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  std::basic_string<char16_t>::__init_copy_ctor_external(v78, v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
LABEL_43:
  a1 = v23 + 1;
LABEL_45:
  uint64_t v78 = a1;
LABEL_46:
  uint64_t v26 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)a1);
  std::basic_string<char16_t>::size_type size = HIBYTE(v76.__r_.__value_.__r.__words[2]);
  if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v76.__r_.__value_.__l.__size_;
  }
  uint64_t v28 = *(unsigned __int8 *)(v26 + 23);
  int v29 = (char)v28;
  if ((v28 & 0x80u) != 0) {
    uint64_t v28 = *(void *)(v26 + 8);
  }
  if (size != v28) {
    goto LABEL_64;
  }
  if (!size)
  {
LABEL_59:
    if ((*(void *)(a2 + 240) & a5) == 0) {
      goto LABEL_64;
    }
    if (a4 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v50 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v50 = a4 | 3;
      }
      uint64_t v32 = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v50 + 1);
      *((void *)&__dst + 1) = a4;
      *(void *)&long long v69 = v51 | 0x8000000000000000;
      *(void *)&long long __dst = v32;
    }
    else
    {
      BYTE7(v69) = a4;
      uint64_t v32 = &__dst;
      if (!a4) {
        goto LABEL_112;
      }
    }
    memmove(v32, __src, 2 * a4);
LABEL_112:
    *((_WORD *)v32 + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    goto LABEL_157;
  }
  if (v29 >= 0) {
    long long v30 = (unsigned __int16 *)v26;
  }
  else {
    long long v30 = *(unsigned __int16 **)v26;
  }
  uint64_t v31 = &v76;
  if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v31 = (std::basic_string<char16_t> *)v76.__r_.__value_.__r.__words[0];
  }
  while (*v30 == (unsigned __int16)v31->__r_.__value_.__s.__data_[0])
  {
    uint64_t v31 = (std::basic_string<char16_t> *)((char *)v31 + 2);
    ++v30;
    if (!--size) {
      goto LABEL_59;
    }
  }
LABEL_64:
  morphun::dictionary::DictionaryMetaData::getPropertyValues(v11, __src, a4, (unsigned __int16 *)"i", 0xAuLL, &v73);
  uint64_t v33 = v73;
  uint64_t v34 = v74;
  if (v73 == v74)
  {
    LOBYTE(v7->__r_.__value_.__l.__data_) = 0;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 0;
    goto LABEL_156;
  }
  memset(&v72, 0, sizeof(v72));
  while (1)
  {
    if (*(char *)(v33 + 23) < 0)
    {
      uint64_t v36 = *(void *)v33;
      uint64_t v35 = *(void *)(v33 + 8);
    }
    else
    {
      LODWORD(v35) = *(unsigned __int8 *)(v33 + 23);
      uint64_t v36 = v33;
    }
    __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v12 + 248), v36, v35);
    morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&__dst, v12 + 8, KeyId);
    if (WORD1(v69)) {
      break;
    }
    v33 += 24;
    if (v33 == v34) {
      goto LABEL_74;
    }
  }
  std::basic_string<char16_t>::operator=(&v72, (const std::basic_string<char16_t> *)v33);
LABEL_74:
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
  {
    int v38 = v72.__r_.__value_.__r.__words[1];
    if (v72.__r_.__value_.__l.__size_)
    {
      uint64_t v39 = (std::basic_string<char16_t> *)v72.__r_.__value_.__r.__words[0];
      goto LABEL_79;
    }
LABEL_103:
    if (a4 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v54 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v54 = a4 | 3;
      }
      unint64_t v49 = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v54 + 1);
      *((void *)&__dst + 1) = a4;
      *(void *)&long long v69 = v55 | 0x8000000000000000;
      *(void *)&long long __dst = v49;
    }
    else
    {
      BYTE7(v69) = a4;
      unint64_t v49 = &__dst;
      if (!a4) {
        goto LABEL_121;
      }
    }
    memmove(v49, __src, 2 * a4);
LABEL_121:
    *((_WORD *)v49 + a4) = 0;
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = __dst;
    v7->__r_.__value_.__r.__words[2] = v69;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    goto LABEL_154;
  }
  int v38 = HIBYTE(v72.__r_.__value_.__r.__words[2]);
  if (!*((unsigned char *)&v72.__r_.__value_.__s + 23)) {
    goto LABEL_103;
  }
  uint64_t v39 = &v72;
LABEL_79:
  __int16 v40 = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v12 + 248), (uint64_t)v39, v38);
  morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)v80, v12 + 8, v40);
  long long __dst = *(_OWORD *)v80;
  long long v69 = *(_OWORD *)&v80[16];
  long long v70 = v81;
  char v71 = 1;
  morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)v80, (uint64_t)&__dst, (uint64_t *)&v77, 1);
  memset(&__p, 0, sizeof(__p));
  int v42 = *(int **)&v80[8];
  unint64_t v41 = *(int **)v80;
  if (*(void *)v80 == *(void *)&v80[8])
  {
    char v53 = 0;
    goto LABEL_142;
  }
  long long v64 = *(int **)v80;
  while (1)
  {
    morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)v41 + 40), v41[2], &v66);
    std::basic_string<char16_t>::size_type v43 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
    if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v44 = &v66;
    }
    else {
      uint64_t v44 = (std::basic_string<char16_t> *)v66.__r_.__value_.__r.__words[0];
    }
    if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v43 = v66.__r_.__value_.__l.__size_;
    }
    if (a4 < v43)
    {
      BOOL v45 = 0;
      if ((SHIBYTE(v66.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_98;
      }
LABEL_97:
      operator delete(v66.__r_.__value_.__l.__data_);
      goto LABEL_98;
    }
    if (v43)
    {
      uint64_t v46 = -(uint64_t)v43;
      do
      {
        int v47 = (unsigned __int16)v44->__r_.__value_.__s.__data_[0];
        uint64_t v44 = (std::basic_string<char16_t> *)((char *)v44 + 2);
        BOOL v45 = v47 == __src[a4 + v46];
        BOOL v48 = v47 != __src[a4 + v46] || v46 == -1;
        ++v46;
      }
      while (!v48);
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_97;
      }
    }
    else
    {
      BOOL v45 = 1;
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_97;
      }
    }
LABEL_98:
    if (v45) {
      break;
    }
    v41 += 6;
    if (v41 == v42)
    {
      char v53 = 0;
      unint64_t v41 = v64;
      goto LABEL_142;
    }
  }
  if (a4 > 0x7FFFFFFFFFFFFFF7) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a4 >= 0xB)
  {
    uint64_t v56 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a4 | 3) != 0xB) {
      uint64_t v56 = a4 | 3;
    }
    uint64_t v52 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v56 + 1);
    v65.__r_.__value_.__l.__size_ = a4;
    v65.__r_.__value_.__r.__words[2] = v57 | 0x8000000000000000;
    v65.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v52;
    goto LABEL_125;
  }
  *((unsigned char *)&v65.__r_.__value_.__s + 23) = a4;
  uint64_t v52 = &v65;
  if (a4) {
LABEL_125:
  }
    memmove(v52, __src, 2 * a4);
  v52->__r_.__value_.__s.__data_[a4] = 0;
  morphun::dictionary::Inflector_Inflection::lemmatize(&v66, v41, &v65);
  unint64_t v41 = v64;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t> __p = v66;
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v65.__r_.__value_.__l.__data_);
  }
  char v53 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type v58 = __p.__r_.__value_.__l.__size_;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v58 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  if (!v58)
  {
LABEL_142:
    LOBYTE(v7->__r_.__value_.__l.__data_) = 0;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 0;
    if (v53 < 0) {
      goto LABEL_143;
    }
    goto LABEL_152;
  }
  if ((*(void *)(a2 + 240) & a5) == 0) {
    goto LABEL_151;
  }
  std::basic_string<char16_t>::size_type v59 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
  if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v59 = v75.__r_.__value_.__l.__size_;
  }
  if (!v59) {
    goto LABEL_151;
  }
  unint64_t v60 = v77;
  for (uint64_t i = v78; i != v60; --i)
  {
    if (SHIBYTE(i[-1].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(i[-1].__r_.__value_.__l.__data_);
    }
  }
  uint64_t v78 = v60;
  uint64_t v62 = (morphun::grammar::synthesis::GrammemeConstants *)std::vector<std::basic_string<char16_t>>::push_back[abi:ne180100]((uint64_t *)&v77, (long long *)&v75);
  uint64_t v63 = (long long *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v62);
  std::vector<std::basic_string<char16_t>>::emplace_back<std::basic_string<char16_t> const&>((uint64_t *)&v77, v63);
  morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)&v66, (uint64_t)&__dst, (uint64_t *)&v77, 1);
  if (v64) {
    operator delete(v64);
  }
  unint64_t v41 = (int *)v66.__r_.__value_.__r.__words[0];
  *(std::basic_string<char16_t> *)long long v80 = v66;
  if (v66.__r_.__value_.__r.__words[0] != v66.__r_.__value_.__l.__size_)
  {
    morphun::dictionary::Inflector_Inflection::inflect(&v66, (int *)v66.__r_.__value_.__l.__data_, &__p);
    *uint64_t v7 = v66;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_143:
    }
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
LABEL_151:
    *uint64_t v7 = __p;
    LOBYTE(v7[1].__r_.__value_.__l.__data_) = 1;
  }
LABEL_152:
  if (v41)
  {
    *(void *)&v80[8] = v41;
    operator delete(v41);
  }
LABEL_154:
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v72.__r_.__value_.__l.__data_);
  }
LABEL_156:
  *(void *)&long long __dst = &v73;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
LABEL_157:
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v75.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v76.__r_.__value_.__l.__data_);
  }
LABEL_161:
  *(void *)&long long __dst = &v77;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
}

void sub_1D2C57200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (v48 < 0) {
    operator delete(__p);
  }
  if (v49) {
    operator delete(v49);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  a34 = &a40;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a34);
  if (a48 < 0) {
    operator delete(a43);
  }
  if (*(char *)(v50 - 169) < 0) {
    operator delete(*(void **)(v50 - 192));
  }
  *(void *)(v50 - 192) = v50 - 168;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v50 - 192));
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>(uint64_t *a1, long long *a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v6 = a1 + 2;
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v3) {
    unint64_t v3 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
    unint64_t v7 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v7 = v3;
  }
  uint64_t v17 = v6;
  if (v7)
  {
    uint64_t v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v7);
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = (std::basic_string<char16_t> *)&v9[24 * v2];
  v14[0] = v9;
  v14[1] = v10;
  uint64_t v15 = v10;
  uint64_t v16 = &v9[24 * v8];
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v10, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
    uint64_t v10 = v15;
  }
  else
  {
    long long v11 = *a2;
    v10->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
  }
  uint64_t v15 = v10 + 1;
  std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1D2C57418(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::push_back[abi:ne180100](uint64_t *a1, long long *a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t result = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>(a1, a2);
  }
  else
  {
    std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>((uint64_t)a1, a2);
    uint64_t result = v3 + 24;
  }
  a1[1] = result;
  return result;
}

uint64_t std::vector<std::basic_string<char16_t>>::emplace_back<std::basic_string<char16_t> const&>(uint64_t *a1, long long *a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t result = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>(a1, a2);
  }
  else
  {
    std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>((uint64_t)a1, a2);
    uint64_t result = v3 + 24;
  }
  a1[1] = result;
  return result;
}

void std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  *(void *)(a1 + 8) = v3 + 24;
}

void sub_1D2C57504(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>(uint64_t *a1, long long *a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v6 = a1 + 2;
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v3) {
    unint64_t v3 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
    unint64_t v7 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v7 = v3;
  }
  uint64_t v17 = v6;
  if (v7)
  {
    uint64_t v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v7);
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v10 = (std::basic_string<char16_t> *)&v9[24 * v2];
  v14[0] = v9;
  v14[1] = v10;
  uint64_t v15 = v10;
  uint64_t v16 = &v9[24 * v8];
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v10, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
    uint64_t v10 = v15;
  }
  else
  {
    long long v11 = *a2;
    v10->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
  }
  uint64_t v15 = v10 + 1;
  std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1D2C5761C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  uint64_t v4 = a2[1];
  if (v3 == *result)
  {
    uint64_t v5 = a2[1];
  }
  else
  {
    do
    {
      uint64_t v5 = v4 - 24;
      long long v6 = *(_OWORD *)(v3 - 24);
      *(void *)(v4 - 8) = *(void *)(v3 - 8);
      *(_OWORD *)(v4 - 24) = v6;
      *(void *)(v3 - 16) = 0;
      *(void *)(v3 - 8) = 0;
      *(void *)(v3 - 24) = 0;
      v4 -= 24;
      v3 -= 24;
    }
    while (v3 != v2);
  }
  a2[1] = v5;
  uint64_t v7 = *result;
  char *result = v5;
  a2[1] = v7;
  uint64_t v8 = result[1];
  result[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = result[2];
  result[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void ***)(a1 + 8);
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v4);
        uint64_t v4 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t **com::apple::siri::tokenizer::data::config_hu::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void marisa::grimoire::io::Mapper::~Mapper(marisa::grimoire::io::Mapper *this)
{
  uint64_t v2 = (void *)*((void *)this + 1);
  if (v2 != (void *)-1) {
    munmap(v2, *((void *)this + 3));
  }
  int v3 = *((_DWORD *)this + 8);
  if (v3 != -1) {
    close(v3);
  }
}

uint64_t marisa::grimoire::io::Mapper::seek(marisa::grimoire::io::Mapper *this, unint64_t a2)
{
  if (!*(void *)this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x100000047;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:71: M"
         "ARISA_STATE_ERROR: !is_open()";
    goto LABEL_8;
  }
  if (*((void *)this + 2) < a2)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x900000048;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:72: M"
         "ARISA_IO_ERROR: size > avail_";
LABEL_8:
    exception[3] = v4;
  }

  return marisa::grimoire::io::Mapper::map_data(this, a2);
}

uint64_t marisa::grimoire::io::Mapper::map_data(marisa::grimoire::io::Mapper *this, unint64_t a2)
{
  uint64_t v2 = *(void *)this;
  if (!*(void *)this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x100000063;
    uint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:99: M"
         "ARISA_STATE_ERROR: !is_open()";
LABEL_6:
    exception[3] = v8;
  }
  unint64_t v3 = *((void *)this + 2);
  BOOL v4 = v3 >= a2;
  unint64_t v5 = v3 - a2;
  if (!v4)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc";
    exception[2] = 0x900000064;
    uint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/mapper.cc:100: "
         "MARISA_IO_ERROR: size > avail_";
    goto LABEL_6;
  }
  *(void *)this = v2 + a2;
  *((void *)this + 2) = v5;
  return v2;
}

void morphun::tokenizer::trie::SerializedTrie::~SerializedTrie(morphun::tokenizer::trie::SerializedTrie *this)
{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 40);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::trie::SerializedTrie *)((char *)this + 8));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 40);
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::tokenizer::trie::SerializedTrie *)((char *)this + 8));
}

marisa::grimoire::trie::LoudsTrie **morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = *(void *)(a1 + 32);
    if (v2) {
      MEMORY[0x1D942B890](v2, 0x1000C8000313F17);
    }
  }

  return marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie(uint64_t a1, void *a2)
{
  morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LODWORD(v10[0]) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, v10);
  unint64_t v4 = LODWORD(v10[0]);
  unint64_t v5 = (void *)morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOWORD(v10[0]) = 0;
  morphun::util::MemoryMappedFile::read<short>(v5, v10);
  long long v6 = (morphun::util::StringUtils *)SLOWORD(v10[0]);
  *(void *)a1 = 0;
  if ((unint64_t)v6 >= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string(v6, &v14);
    std::basic_string<char16_t>::insert(&v14, (std::basic_string<char16_t>::size_type)"U", (const std::basic_string<char16_t>::value_type *)0x17, v9);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)&v14.__r_.__value_.__l.__data_;
    *(void *)&v11[0] = *((void *)&v14.__r_.__value_.__l + 2);
    memset(&v14, 0, sizeof(v14));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (long long *)v10);
    void *exception = &unk_1F2A113E8;
  }
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::CharsetConverter *)(a1 + 8), (&off_1E696E050)[v6]);
  morphun::dictionary::metadata::CompressedArray<int>::CompressedArray((int *)(a1 + 24), a2);
  *(unsigned char *)(a1 + 56) = (_BYTE)v6;
  if ((int)v4 < 1)
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    *(_OWORD *)uint64_t v10 = 0u;
    memset(v11, 0, sizeof(v11));
    marisa::Trie::build((marisa::grimoire::trie::LoudsTrie **)a1, (marisa::Keyset *)v10);
    marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array((uint64_t *)v12);
    marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)v11 + 1);
    marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)v10);
  }
  else
  {
    npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
    v10[0] = 0;
    morphun::util::MemoryMappedFile::read<char *>(a2, v10, v4);
    marisa::Trie::map((marisa::grimoire::trie::LoudsTrie **)a1, v10[0], v4);
  }
  return a1;
}

void sub_1D2C57C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v17 - 49) < 0)
  {
    operator delete(*(void **)(v17 - 72));
    if ((v16 & 1) == 0)
    {
LABEL_8:
      marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(v14);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v15);
  goto LABEL_8;
}

uint64_t morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>(uint64_t result)
{
  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &__dst);
  }
  return result;
}

void sub_1D2C57D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void *morphun::util::MemoryMappedFile::read<int>(void *result, _DWORD *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[2];
  if ((unint64_t)(result[1] - v3) <= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)4, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v6 = &v8;
    }
    else {
      long long v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    }
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v8.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    std::basic_string<char16_t> v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v12);
  }
  *a2 = *(_DWORD *)(*result + v3);
  result[2] = v3 + 4;
  return result;
}

void sub_1D2C57EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void *morphun::util::MemoryMappedFile::read<short>(void *result, _WORD *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[2];
  if ((unint64_t)(result[1] - v3) <= 1)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)2, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v6 = &v8;
    }
    else {
      long long v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    }
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v8.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    std::basic_string<char16_t> v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v12);
  }
  *a2 = *(_WORD *)(*result + v3);
  result[2] = v3 + 2;
  return result;
}

void sub_1D2C580C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

int *morphun::dictionary::metadata::CompressedArray<int>::CompressedArray(int *a1, void *a2)
{
  unint64_t v4 = a1 + 1;
  *(void *)a1 = 0;
  *((unsigned char *)a1 + 24) = 0;
  *((void *)a1 + 2) = 0;
  *((void *)a1 + 1) = 0;
  std::basic_string<char16_t>::size_type v5 = a1 + 2;
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  morphun::util::MemoryMappedFile::read<int>(a2, a1);
  morphun::util::MemoryMappedFile::read<int>(a2, v4);
  morphun::util::MemoryMappedFile::read<unsigned long long *>(a2, v5, 8 * *a1);
  *((void *)a1 + 2) = ~(-1 << a1[1]);
  return a1;
}

uint64_t npc<morphun::util::MemoryMappedFile>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C58250(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *morphun::util::MemoryMappedFile::read<char *>(void *result, void *a2, unint64_t a3)
{
  int v3 = a3;
  unint64_t v4 = result;
  uint64_t v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v8 = &v10;
    }
    else {
      std::basic_string<char16_t> v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    }
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v10.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    std::basic_string<char16_t> v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v14);
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1D2C58390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

uint64_t *marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v5 = *(void *)(v2 - 8);
    uint64_t v4 = v2 - 8;
    uint64_t v3 = v5;
    if (v5)
    {
      uint64_t v6 = 8 * v3;
      do
      {
        uint64_t v7 = *(void *)(v4 + v6);
        if (v7) {
          MEMORY[0x1D942B890](v7, 0x1050C80717B85FCLL);
        }
        v6 -= 8;
      }
      while (v6);
    }
    MEMORY[0x1D942B890](v4 - 8, 0x20C8093837F09);
  }
  return a1;
}

uint64_t *marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v5 = *(void *)(v2 - 8);
    uint64_t v4 = v2 - 8;
    uint64_t v3 = v5;
    if (v5)
    {
      uint64_t v6 = 8 * v3;
      do
      {
        uint64_t v7 = *(void *)(v4 + v6);
        if (v7) {
          MEMORY[0x1D942B890](v7, 0x1000C8077774924);
        }
        v6 -= 8;
      }
      while (v6);
    }
    MEMORY[0x1D942B890](v4 - 8, 0x10C80436913F5);
  }
  return a1;
}

void marisa::Keyset::~Keyset(marisa::Keyset *this)
{
  marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array((uint64_t *)this + 6);
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)this + 3);

  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)this);
}

void *morphun::util::MemoryMappedFile::read<unsigned long long *>(void *result, void *a2, unint64_t a3)
{
  int v3 = a3;
  uint64_t v4 = result;
  uint64_t v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v8 = &v10;
    }
    else {
      std::basic_string<char16_t> v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    }
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v10.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    std::basic_string<char16_t> v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v14);
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1D2C586B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void *morphun::util::MemoryMappedFile::read<char const*>(void *result, void *a2, unint64_t a3)
{
  int v3 = a3;
  uint64_t v4 = result;
  uint64_t v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v8 = &v10;
    }
    else {
      std::basic_string<char16_t> v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    }
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v10.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    std::basic_string<char16_t> v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v14);
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1D2C5888C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void *morphun::util::MemoryMappedFile::read<long long>(void *result, void *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[2];
  if ((unint64_t)(result[1] - v3) <= 7)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)8, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v6 = &v8;
    }
    else {
      uint64_t v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    }
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v8.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    std::basic_string<char16_t> v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v12);
  }
  *a2 = *(void *)(*result + v3);
  result[2] = v3 + 8;
  return result;
}

void sub_1D2C58A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void *morphun::tokenizer::trie::SerializedTrie::SerializedTrie(void *a1, const void **a2)
{
  *a1 = &unk_1F2A119C8;
  uint64_t v4 = a1 + 1;
  std::basic_string<char16_t>::size_type v5 = (void *)morphun::util::MemoryMappedFile::MemoryMappedFile((uint64_t)(a1 + 1), (uint64_t)a2);
  std::basic_string<char16_t> v12 = 0;
  morphun::util::MemoryMappedFile::read<char const*>(v5, &v12, 8uLL);
  if (strncmp(v12, "MORPHTK", 8uLL))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v10, "I", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, L" has an invalid header");
    morphun::exception::IOException::IOException((uint64_t)exception, &v11);
  }
  *(void *)&long long v11 = 0;
  morphun::util::MemoryMappedFile::read<long long>(v4, &v11);
  if ((void)v11 != 2)
  {
    std::basic_string<char16_t> v8 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v10, "I", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::exception::IncompatibleVersionException::IncompatibleVersionException((uint64_t)v8, &v11);
  }
  LOWORD(v11) = 0;
  morphun::util::MemoryMappedFile::read<short>(v4, &v11);
  if ((unsigned __int16)v11 != 1)
  {
    std::basic_string<char16_t> v9 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v10, "I", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, L" was built for a different architecture");
    morphun::exception::IOException::IOException((uint64_t)v9, &v11);
  }
  morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie((uint64_t)(a1 + 5), v4);
  return a1;
}

void sub_1D2C58D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v23 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else if (!v23)
  {
LABEL_8:
    morphun::util::MemoryMappedFile::~MemoryMappedFile(v21);
    _Unwind_Resume(a1);
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

void morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor::createIterator()
{
}

void sub_1D2C58F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::mutex::unlock(v16);
  MEMORY[0x1D942B8B0](v15, 0x10F1C4066D5B73CLL);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor::~ThWordAndDelimiterTokenExtractor(morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor *this)
{
  *(void *)this = &off_1F2A11BE0;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor *)((char *)this + 152));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A081D0);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  *(void *)this = &off_1F2A11BE0;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::locale::th::ThWordAndDelimiterTokenExtractor *)((char *)this + 152));

  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A081D0);
}

uint64_t morphun::dialog::ArticleDetectionFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  int v4 = *(char *)(v3 + 23);
  if (v4 >= 0) {
    unint64_t v5 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    unint64_t v5 = *(void *)(v3 + 8);
  }
  if (v5 < 2) {
    return 0;
  }
  std::basic_string<char16_t>::size_type v43 = 0;
  unint64_t v44 = 0;
  uint64_t v45 = 0;
  if (v4 >= 0) {
    uint64_t v6 = (const UChar *)v3;
  }
  else {
    uint64_t v6 = *(const UChar **)v3;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&v43, v6, v5, a1 + 8);
  if (*(unsigned char *)(a1 + 184))
  {
    unint64_t v7 = HIBYTE(v45);
    std::basic_string<char16_t> v8 = (char *)&v43;
    if (v45 < 0)
    {
      std::basic_string<char16_t> v8 = (char *)v43;
      unint64_t v7 = v44;
    }
    if (v7)
    {
      std::basic_string<char16_t> v9 = v8;
      while (*(_WORD *)v9 != 39)
      {
        v9 += 2;
        if (!--v7) {
          goto LABEL_18;
        }
      }
      if (v9 - v8 != -2) {
        *(_WORD *)std::basic_string<char16_t> v9 = 8217;
      }
    }
  }
LABEL_18:
  std::basic_string<char16_t> v10 = *(void **)(a1 + 136);
  if (v10 == (void *)(a1 + 144))
  {
    char v11 = 0;
    goto LABEL_43;
  }
  char v11 = 0;
  unint64_t v12 = HIBYTE(v45);
  std::basic_string<char16_t> v13 = (unsigned __int16 *)&v43;
  if (v45 < 0)
  {
    std::basic_string<char16_t> v13 = (unsigned __int16 *)v43;
    unint64_t v12 = v44;
  }
  while (1)
  {
    if (*((char *)v10 + 55) < 0)
    {
      std::basic_string<char16_t> v14 = (unsigned __int16 *)v10[4];
      unint64_t v15 = v10[5];
    }
    else
    {
      std::basic_string<char16_t> v14 = (unsigned __int16 *)(v10 + 4);
      unint64_t v15 = *((unsigned __int8 *)v10 + 55);
    }
    if (v12 < v15) {
      goto LABEL_34;
    }
    if (!v15) {
      break;
    }
    unint64_t v16 = v15 - 1;
    uint64_t v17 = v13;
    do
    {
      int v19 = *v17++;
      int v18 = v19;
      int v21 = *v14++;
      int v20 = v21;
      BOOL v22 = v16-- != 0;
      char v23 = v22;
    }
    while (v20 == v18 && (v23 & 1) != 0);
    if (v20 == v18) {
      break;
    }
    v11 |= v20 == v18;
LABEL_34:
    uint64_t v24 = (void *)v10[1];
    if (v24)
    {
      do
      {
        long long v25 = v24;
        uint64_t v24 = (void *)*v24;
      }
      while (v24);
    }
    else
    {
      do
      {
        long long v25 = (void *)v10[2];
        BOOL v26 = *v25 == (void)v10;
        std::basic_string<char16_t> v10 = v25;
      }
      while (!v26);
    }
    std::basic_string<char16_t> v10 = v25;
    if (v25 == (void *)(a1 + 144)) {
      goto LABEL_43;
    }
  }
  char v11 = 1;
LABEL_43:
  std::basic_string<char16_t> v27 = *(void **)(a1 + 160);
  if (v27 == (void *)(a1 + 168))
  {
    char v28 = 0;
    if (v11)
    {
LABEL_68:
      if ((v28 & 1) == 0) {
        operator new();
      }
    }
  }
  else
  {
    char v28 = 0;
    unint64_t v29 = HIBYTE(v45);
    long long v30 = (unsigned __int16 *)&v43;
    if (v45 < 0)
    {
      long long v30 = (unsigned __int16 *)v43;
      unint64_t v29 = v44;
    }
    do
    {
      if (*((char *)v27 + 55) < 0)
      {
        int v31 = (unsigned __int16 *)v27[4];
        unint64_t v32 = v27[5];
      }
      else
      {
        int v31 = (unsigned __int16 *)(v27 + 4);
        unint64_t v32 = *((unsigned __int8 *)v27 + 55);
      }
      if (v29 >= v32)
      {
        if (!v32) {
          goto LABEL_70;
        }
        unint64_t v33 = v32 - 1;
        uint64_t v34 = v30;
        do
        {
          int v36 = *v34++;
          int v35 = v36;
          int v38 = *v31++;
          int v37 = v38;
          BOOL v22 = v33-- != 0;
          char v39 = v22;
        }
        while (v37 == v35 && (v39 & 1) != 0);
        if (v37 == v35)
        {
LABEL_70:
          char v28 = 1;
          goto LABEL_71;
        }
        v28 |= v37 == v35;
      }
      __int16 v40 = (void *)v27[1];
      if (v40)
      {
        do
        {
          unint64_t v41 = v40;
          __int16 v40 = (void *)*v40;
        }
        while (v40);
      }
      else
      {
        do
        {
          unint64_t v41 = (void *)v27[2];
          BOOL v26 = *v41 == (void)v27;
          std::basic_string<char16_t> v27 = v41;
        }
        while (!v26);
      }
      std::basic_string<char16_t> v27 = v41;
    }
    while (v41 != (void *)(a1 + 168));
    if (v11) {
      goto LABEL_68;
    }
  }
LABEL_71:
  if (!(v11 & 1 | ((v28 & 1) == 0))) {
    operator new();
  }
  if (SHIBYTE(v45) < 0) {
    operator delete(v43);
  }
  return 0;
}

void sub_1D2C593CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v20, 0x10B3C40F7FF9C27);
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::ArticleDetectionFunction::~ArticleDetectionFunction(morphun::dialog::ArticleDetectionFunction *this)
{
  *(void *)this = &unk_1F2A09480;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 21));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 18));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &unk_1F2A09480;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 21));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 18));
}

void std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*a1);
    std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(a1[1]);
    (*(void (**)(void))(a1[4] + 8))();
    operator delete(a1);
  }
}

uint64_t morphun::dialog::getFeatureValues(uint64_t **a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 == v4) {
    goto LABEL_55;
  }
  char v7 = 0;
  uint64_t v8 = *a2;
  while (1)
  {
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, uint64_t))(*(void *)v8 + 24))(&__p, v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      break;
    }
    if (*((unsigned char *)&__p.__r_.__value_.__s + 23))
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      goto LABEL_7;
    }
LABEL_19:
    v8 += 56;
    v3 += 56;
    if (v8 == v4) {
      goto LABEL_20;
    }
  }
  std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  if (!__p.__r_.__value_.__l.__size_)
  {
    int v13 = 3;
    std::basic_string<char16_t> v10 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_13:
    operator delete(v10);
    goto LABEL_14;
  }
LABEL_7:
  std::basic_string<char16_t> v10 = (void *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  BOOL v12 = p_p->__r_.__value_.__s.__data_[size - 1] == 32;
  int v13 = 2 * v12;
  v7 |= v12;
  if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
    goto LABEL_13;
  }
LABEL_14:
  if (v13 == 3 || v13 == 0) {
    goto LABEL_19;
  }
LABEL_20:
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  if (*a2 != v16)
  {
    char v17 = 0;
    while (1)
    {
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, uint64_t))(*(void *)v15 + 24))(&__p, v15);
      int v18 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
      std::basic_string<char16_t>::size_type v19 = __p.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::size_type v20 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? HIBYTE(__p.__r_.__value_.__r.__words[2])
          : __p.__r_.__value_.__l.__size_;
      if (v20
        && a3 + 8 == std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3, (unsigned __int16 *)&__p))
      {
        break;
      }
      if ((v18 & 0x80) != 0) {
        goto LABEL_28;
      }
LABEL_29:
      v15 += 56;
      if (v15 == v16) {
        return v17 & 1;
      }
    }
    if (v17)
    {
      char v17 = 1;
    }
    else
    {
      int v21 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if (v18 >= 0) {
        int v21 = &__p;
      }
      BOOL v22 = (char *)v21;
      while (*(_WORD *)v22 != 8217)
      {
        v22 += 2;
        if (!--v20)
        {
          BOOL v22 = 0;
          break;
        }
      }
      int64_t v23 = v22 - (char *)v21;
      if (v22) {
        BOOL v24 = v23 == -2;
      }
      else {
        BOOL v24 = 1;
      }
      char v17 = !v24;
    }
    if (!a1)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    if (v7)
    {
      if (v18 < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v28, __p.__r_.__value_.__l.__data_, v19);
      }
      else {
        std::basic_string<char16_t> v28 = __p;
      }
    }
    else
    {
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v28, (const void **)&__p.__r_.__value_.__l.__data_, 32);
    }
    std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>(a1, (unsigned __int16 *)&v28, (uint64_t)&v28);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_29;
    }
LABEL_28:
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_29;
  }
LABEL_55:
  char v17 = 0;
  return v17 & 1;
}

void sub_1D2C59814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      uint64_t v6 = v4 - 56;
      char v7 = v4 - 56;
      uint64_t v8 = v4 - 56;
      do
      {
        uint64_t v9 = *(void *)v8;
        v8 -= 56;
        (*(void (**)(char *))(v9 + 8))(v7);
        v6 -= 56;
        BOOL v10 = v7 == v2;
        char v7 = v8;
      }
      while (!v10);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>(uint64_t **a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t result = std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v9, a2);
  if (!*result)
  {
    uint64_t v6 = (uint64_t **)result;
    char v7 = operator new(0x38uLL);
    v7[2] = *(_OWORD *)a3;
    *((void *)v7 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    uint64_t v8 = v9;
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v8, v6, (uint64_t *)v7);
  }
  return result;
}

uint64_t morphun::dialog::ArticleDetectionFunction::ArticleDetectionFunction(uint64_t a1, const morphun::util::ULocale *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &unk_1F2A09480;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 8), a2);
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 160) = a1 + 168;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 136) = a1 + 144;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  long long v25 = 0;
  BOOL v26 = 0;
  uint64_t v27 = 0;
  memset(&v24, 0, sizeof(v24));
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v23 = 0;
  morphun::util::ULocale::ULocale((uint64_t)&v28, (uint64_t)a2 + 8, (uint64_t)&v25, (uint64_t)&v24, (uint64_t)__p);
  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v28, &v30);
  if (SHIBYTE(v23) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v27) < 0) {
    operator delete(v25);
  }
  morphun::lang::features::LanguageGrammarFeatures::getFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v30, (uint64_t)&v28);
  uint64_t v8 = v28;
  if (v28 != (char *)v29)
  {
    do
    {
      long long v25 = 0;
      BOOL v26 = 0;
      uint64_t v27 = 0;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v25, *((void *)v8 + 8), *((void *)v8 + 9), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((void *)v8 + 9) - *((void *)v8 + 8)) >> 3));
      if (v25 != v26)
      {
        uint64_t v9 = v8 + 40;
        if (v8[63] < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v24, *((const std::basic_string<char16_t>::value_type **)v8 + 5), *((void *)v8 + 6));
        }
        else
        {
          *(_OWORD *)&v24.__r_.__value_.__l.__data_ = *v9;
          v24.__r_.__value_.__r.__words[2] = *((void *)v8 + 7);
        }
        uint64_t v10 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3, (unsigned __int16 *)&v24);
        if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v24.__r_.__value_.__l.__data_);
        }
        if (a3 + 8 != v10)
        {
          BOOL v11 = (morphun::dialog::getFeatureValues((uint64_t **)(a1 + 136), (uint64_t *)&v25, a4) & 1) != 0
             || *(unsigned char *)(a1 + 184) != 0;
          *(unsigned char *)(a1 + 184) = v11;
        }
        if (v8[63] < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v24, *((const std::basic_string<char16_t>::value_type **)v8 + 5), *((void *)v8 + 6));
        }
        else
        {
          *(_OWORD *)&v24.__r_.__value_.__l.__data_ = *v9;
          v24.__r_.__value_.__r.__words[2] = *((void *)v8 + 7);
        }
        uint64_t v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a5, (unsigned __int16 *)&v24);
        if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v24.__r_.__value_.__l.__data_);
        }
        if (a5 + 8 != v12)
        {
          BOOL v13 = (morphun::dialog::getFeatureValues((uint64_t **)(a1 + 160), (uint64_t *)&v25, a6) & 1) != 0
             || *(unsigned char *)(a1 + 184) != 0;
          *(unsigned char *)(a1 + 184) = v13;
        }
      }
      v24.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v25;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
      std::basic_string<char16_t> v14 = (char *)*((void *)v8 + 1);
      if (v14)
      {
        do
        {
          uint64_t v15 = v14;
          std::basic_string<char16_t> v14 = *(char **)v14;
        }
        while (v14);
      }
      else
      {
        do
        {
          uint64_t v15 = (char *)*((void *)v8 + 2);
          BOOL v16 = *(void *)v15 == (void)v8;
          uint64_t v8 = v15;
        }
        while (!v16);
      }
      uint64_t v8 = v15;
    }
    while (v15 != (char *)v29);
  }
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v29[0]);
  long long v30 = &off_1F2A088F0;
  return a1;
}

void sub_1D2C59CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char **a10, char **a11, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,uint64_t a37)
{
  *(void *)(v37 - 240) = &off_1F2A088F0;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*a10);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*a11);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KoCommonConceptFactory_KoAndList::getBeforeLast(morphun::dialog::language::KoCommonConceptFactory_KoAndList *this@<X0>, const morphun::dialog::SpeakableString *a2@<X2>, void *a3@<X8>)
{
  uint64_t v8 = morphun::util::LocaleUtils::KOREAN(this);
  uint64_t v9 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
  if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v8, v9)) {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, asc_1D2EC1D16);
  }
  else {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, byte_1D2EC1D1C);
  }
  morphun::dialog::SpeakableString::SpeakableString(a3, (long long *)__p);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2C59E7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::KoCommonConceptFactory_KoAndList::clone(morphun::dialog::language::KoCommonConceptFactory_KoAndList *this)
{
}

void sub_1D2C59F24(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KoCommonConceptFactory_KoAndList::~KoCommonConceptFactory_KoAndList(morphun::dialog::language::KoCommonConceptFactory_KoAndList *this)
{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05FC8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05FC8);
}

void morphun::exception::InvalidConfigurationException::~InvalidConfigurationException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::InvalidConfigurationException::InvalidConfigurationException(morphun::exception::InvalidConfigurationException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11518;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11518;
  return result;
}

void *morphun::exception::InvalidConfigurationException::InvalidConfigurationException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11518;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11518;
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_yue::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DF70;
  v3[1] = *(_OWORD *)&off_1E695DF80;
  v3[2] = xmmword_1E695DF90;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::Token_Word::newInstance(morphun::Token_Word *this)
{
}

void sub_1D2C5A248(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_Word::Token_Word(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7, char a8)
{
  *(void *)a1 = &unk_1F29F3FD0;
  double result = morphun::Token::Token(a1, (uint64_t *)&off_1F2A04F00, a2, a3, __src, a5, a6, a7, a8);
  *(void *)double result = &off_1F2A08410;
  return result;
}

void morphun::Token_Word::~Token_Word(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1F2A04F00);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::Token::~Token(this, (void **)&off_1F2A04F00);
}

morphun::Token *morphun::Token_Word::Token_Word(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8, char a9)
{
  double result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a7, a8, a9);
  uint64_t v11 = *a2;
  *(void *)double result = *a2;
  *(void *)((char *)result + *(void *)(v11 - 64)) = a2[4];
  *(void *)((char *)result + *(void *)(*(void *)result - 40)) = a2[5];
  return result;
}

void morphun::tokenizer::ExplicitTokenModifier::modifyTokens(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    for (uint64_t i = a2; *(_WORD *)i != 94; i += 2)
    {
      if (!--a3) {
        return;
      }
    }
    if (i - a2 != -2)
    {
      if (!a4)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      uint64_t v5 = *(void *)(a4 + 80);
      if (v5)
      {
        while (1)
        {
          uint64_t Caret = morphun::tokenizer::ExplicitTokenModifier::findCaret(v5);
          if (!Caret) {
            return;
          }
          uint64_t v7 = Caret;
          uint64_t v5 = *(void *)(Caret + 80);
          if (*(_DWORD *)(Caret + 12) - *(_DWORD *)(Caret + 8) == 1)
          {
            uint64_t v8 = morphun::tokenizer::ExplicitTokenModifier::findCaret(*(void *)(Caret + 80));
            if (!v8) {
              return;
            }
            uint64_t v5 = v8;
            if (*(void *)(v8 + 72) != v7) {
              break;
            }
          }
LABEL_44:
          if (!v5) {
            return;
          }
        }
        uint64_t v9 = *(void *)(v8 + 80);
        if (!v9) {
          return;
        }
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"=");
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
        }
        uint64_t v11 = *(unsigned __int8 *)(v9 + 39);
        int v12 = (char)v11;
        if ((v11 & 0x80u) != 0) {
          uint64_t v11 = *(void *)(v9 + 24);
        }
        if (size == v11)
        {
          if (size)
          {
            if (v12 >= 0) {
              BOOL v13 = (unsigned __int16 *)(v9 + 16);
            }
            else {
              BOOL v13 = *(unsigned __int16 **)(v9 + 16);
            }
            p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              p_p = &__p;
            }
            std::basic_string<char16_t>::size_type v15 = size - 1;
            do
            {
              int v17 = (unsigned __int16)p_p->__r_.__value_.__s.__data_[0];
              p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
              int v16 = v17;
              int v18 = *v13++;
              BOOL v19 = v18 != v16;
            }
            while (v18 == v16 && v15-- != 0);
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_33:
              if (v19) {
                goto LABEL_44;
              }
LABEL_37:
              int v21 = (morphun::tokenizer::ExplicitTokenModifier *)morphun::tokenizer::ExplicitTokenModifier::findCaret(*(void *)(v9 + 80));
              if (!v21) {
                return;
              }
              if (*((void *)v21 + 9) == v9)
              {
                uint64_t v23 = morphun::tokenizer::ExplicitTokenModifier::splitCaret(v21, v22);
                uint64_t v24 = npc<morphun::Token>((uint64_t)v23);
                long long v25 = (morphun::tokenizer::ExplicitTokenModifier *)morphun::tokenizer::ExplicitTokenModifier::findCaret(*(void *)(v24 + 80));
                if (v25)
                {
                  uint64_t v27 = morphun::tokenizer::ExplicitTokenModifier::splitCaret(v25, v26);
                  memset(&__p, 0, sizeof(__p));
                  morphun::tokenizer::ExplicitTokenModifier::getValue(*(void *)(v7 + 80), v5, &__p, 0);
                  memset(&v30, 0, sizeof(v30));
                  memset(&v29, 0, sizeof(v29));
                  npc<morphun::Token>((uint64_t)v23);
                  morphun::tokenizer::ExplicitTokenModifier::getValue(*((void *)v23 + 10), (uint64_t)v27, &v30, &v29);
                  operator new();
                }
                return;
              }
              uint64_t v5 = (uint64_t)v21;
              goto LABEL_44;
            }
          }
          else
          {
            BOOL v19 = 0;
            if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_33;
            }
          }
        }
        else
        {
          BOOL v19 = 1;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_33;
          }
        }
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v19) {
          goto LABEL_44;
        }
        goto LABEL_37;
      }
    }
  }
}

void sub_1D2C5A8BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::tokenizer::ExplicitTokenModifier::findCaret(uint64_t result)
{
  for (; result; double result = *(void *)(result + 80))
  {
    if (*(char *)(result + 39) < 0)
    {
      uint64_t v1 = *(char **)(result + 16);
      uint64_t v2 = *(void *)(result + 24);
      if (!v2) {
        continue;
      }
    }
    else
    {
      uint64_t v1 = (char *)(result + 16);
      uint64_t v2 = *(unsigned __int8 *)(result + 39);
      if (!*(unsigned char *)(result + 39)) {
        continue;
      }
    }
    uint64_t v3 = v1;
    while (*(_WORD *)v3 != 94)
    {
      v3 += 2;
      if (!--v2) {
        goto LABEL_11;
      }
    }
    if (v3 - v1 != -2) {
      return result;
    }
LABEL_11:
    ;
  }
  return result;
}

morphun::tokenizer::ExplicitTokenModifier *morphun::tokenizer::ExplicitTokenModifier::splitCaret(morphun::tokenizer::ExplicitTokenModifier *this, morphun::Token *a2)
{
  uint64_t v3 = npc<morphun::Token>((uint64_t)this);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 39);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(v3 + 24);
  }
  if (v4 != 1)
  {
    uint64_t v5 = npc<morphun::Token>((uint64_t)this);
    uint64_t v6 = (unsigned __int16 *)*((void *)this + 2);
    if (*((char *)this + 39) >= 0) {
      uint64_t v6 = (unsigned __int16 *)((char *)this + 16);
    }
    int v7 = *v6;
    npc<morphun::Token>(v5);
    if (*((char *)this + 39) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *((const std::basic_string<char16_t>::value_type **)this + 2), *((void *)this + 3));
    }
    else {
      std::basic_string<char16_t> __str = *(std::basic_string<char16_t> *)((char *)this + 16);
    }
    npc<morphun::Token>((uint64_t)this);
    if (*((char *)this + 63) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v14, *((const std::basic_string<char16_t>::value_type **)this + 5), *((void *)this + 6));
    }
    else {
      std::basic_string<char16_t> v14 = *(std::basic_string<char16_t> *)((char *)this + 40);
    }
    npc<morphun::Token>((uint64_t)this);
    (*(void (**)(morphun::tokenizer::ExplicitTokenModifier *))(*(void *)this + 24))(this);
    (*(void (**)(morphun::tokenizer::ExplicitTokenModifier *))(*(void *)this + 32))(this);
    if (v7 == 94)
    {
      std::basic_string<char16_t>::basic_string(&v13, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v8);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      std::basic_string<char16_t> __str = v13;
      std::basic_string<char16_t>::basic_string(&v13, &v14, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v9);
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v14.__r_.__value_.__l.__data_);
      }
      std::basic_string<char16_t> v14 = v13;
    }
    else
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::resize(&__str, size - 1, 0);
      std::basic_string<char16_t>::size_type v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v11 = __str.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::resize(&v14, v11 - 1, 0);
    }
    {
      operator new();
    }
    operator new();
  }
  return this;
}

void sub_1D2C5AF08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  MEMORY[0x1D942B8B0](v25, 0x10B3C405B5873CALL);
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C5AFD8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::ExplicitTokenModifier::getValue(uint64_t a1, uint64_t a2, std::basic_string<char16_t> *a3, std::basic_string<char16_t> *a4)
{
  npc<std::basic_string<char16_t>>((uint64_t)a3);
  std::basic_string<char16_t>::resize(a3, 0, 0);
  if (a4) {
    std::basic_string<char16_t>::resize(a4, 0, 0);
  }
  while (a1 != a2)
  {
    npc<std::basic_string<char16_t>>((uint64_t)a3);
    npc<morphun::Token const>(a1);
    int v8 = *(char *)(a1 + 39);
    if (v8 >= 0) {
      uint64_t v9 = (const std::basic_string<char16_t>::value_type *)(a1 + 16);
    }
    else {
      uint64_t v9 = *(const std::basic_string<char16_t>::value_type **)(a1 + 16);
    }
    if (v8 >= 0) {
      std::basic_string<char16_t>::size_type v10 = *(unsigned __int8 *)(a1 + 39);
    }
    else {
      std::basic_string<char16_t>::size_type v10 = *(void *)(a1 + 24);
    }
    std::basic_string<char16_t>::append(a3, v9, v10);
    if (a4)
    {
      npc<morphun::Token const>(a1);
      int v11 = *(char *)(a1 + 63);
      if (v11 >= 0) {
        int v12 = (const std::basic_string<char16_t>::value_type *)(a1 + 40);
      }
      else {
        int v12 = *(const std::basic_string<char16_t>::value_type **)(a1 + 40);
      }
      if (v11 >= 0) {
        std::basic_string<char16_t>::size_type v13 = *(unsigned __int8 *)(a1 + 63);
      }
      else {
        std::basic_string<char16_t>::size_type v13 = *(void *)(a1 + 48);
      }
      std::basic_string<char16_t>::append(a4, v12, v13);
    }
    npc<morphun::Token const>(a1);
    a1 = *(void *)(a1 + 80);
  }
}

void sub_1D2C5B120(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C5B184(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::__grow_by(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __old_cap, std::basic_string<char16_t>::size_type __delta_cap, std::basic_string<char16_t>::size_type __old_sz, std::basic_string<char16_t>::size_type __n_copy, std::basic_string<char16_t>::size_type __n_del, std::basic_string<char16_t>::size_type __n_add)
{
  if (0x7FFFFFFFFFFFFFF7 - __old_cap < __delta_cap) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  int v11 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    int v11 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  std::basic_string<char16_t>::size_type v12 = __delta_cap + __old_cap;
  if (__delta_cap + __old_cap <= 2 * __old_cap) {
    std::basic_string<char16_t>::size_type v12 = 2 * __old_cap;
  }
  uint64_t v13 = (v12 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((v12 | 3) != 0xB) {
    uint64_t v13 = v12 | 3;
  }
  if (v12 >= 0xB) {
    uint64_t v14 = v13 + 1;
  }
  else {
    uint64_t v14 = 11;
  }
  if (__old_cap <= 0x3FFFFFFFFFFFFFF2) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0x7FFFFFFFFFFFFFF7;
  }
  int v16 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v15);
  std::basic_string<char16_t>::size_type v17 = (std::basic_string<char16_t>::size_type)v16;
  uint64_t v19 = v18;
  if (__n_copy) {
    memmove(v16, v11, 2 * __n_copy);
  }
  if (__old_sz != __n_copy) {
    memmove((void *)(v17 + 2 * __n_copy), (char *)v11 + 2 * __n_copy, 2 * (__old_sz - __n_copy));
  }
  if (__old_cap != 10) {
    operator delete(v11);
  }
  this->__r_.__value_.__r.__words[0] = v17;
  this->__r_.__value_.__r.__words[2] = v19 | 0x8000000000000000;
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_EnteringLookupFunction::~FiGrammarSynthesizer_EnteringLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_EnteringLookupFunction *this)
{
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::~FiGrammarSynthesizer_LocativeBasedLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction *this)
{
}

void morphun::analysis::DaAnalyzer::addWordNormalizationFilter(morphun::analysis::DaAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C5B350(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10E1C403A81BC3DLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::DaAnalyzer::addStopFilter(morphun::analysis::DaAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C5B3CC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::DaAnalyzer::~DaAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06CC0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06CC0);
}

void mdr_registerDataPathForLocale(const __CFLocale *a1, const __CFString *a2)
{
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v4, a1);
  morphun::util::CFUtils::to_string(&__p, a2);
  morphun::resources::DataRegistrationService::registerDataPathForLocale((const morphun::util::ULocale *)v4, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C5B4B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    uint64_t v19 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v19, v16, v20);
    __cxa_end_catch();
    JUMPOUT(0x1D2C5B4A0);
  }
  _Unwind_Resume(a1);
}

CFStringRef mdr_getDataPathForLocaleCopy(const __CFLocale *a1)
{
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v5, a1);
  morphun::resources::DataRegistrationService::getDataPathForLocale((morphun::resources::DataRegistrationService *)v5, &v6);
  if ((v6.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v1 = &v6;
  }
  else {
    uint64_t v1 = (std::string *)v6.__r_.__value_.__r.__words[0];
  }
  if ((v6.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v6.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v6.__r_.__value_.__l.__size_;
  }
  CFStringRef v3 = CFStringCreateWithBytes(0, (const UInt8 *)v1, size, 0x8000100u, 0);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_1D2C5B5C8(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  va_start(va, a3);
  if (*(char *)(v4 - 33) < 0) {
    operator delete(*(void **)(v4 - 56));
  }
  if (a2 == 1)
  {
    int v7 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v7, v3, v8);
    __cxa_end_catch();
    JUMPOUT(0x1D2C5B5B0);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticFeatureModel::~SemanticFeatureModel(morphun::dialog::SemanticFeatureModel *this)
{
  morphun::dialog::SemanticFeatureModel::~SemanticFeatureModel(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  morphun::dialog::SemanticFeatureModel *v3;
  uint64_t v4;
  morphun::dialog::SemanticFeatureModel *v5;
  morphun::dialog::SemanticFeatureModel *v6;
  BOOL v7;
  morphun::dialog::SemanticFeatureModel *v8;
  uint64_t v9;
  morphun::dialog::SemanticFeatureModel *v10;
  morphun::dialog::SemanticFeatureModel *v11;

  uint64_t v2 = *((void *)this + 29);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  CFStringRef v3 = (morphun::dialog::SemanticFeatureModel *)*((void *)this + 10);
  if (v3 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 88))
  {
    do
    {
      uint64_t v4 = *((void *)v3 + 13);
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
      }
      uint64_t v5 = (morphun::dialog::SemanticFeatureModel *)*((void *)v3 + 1);
      if (v5)
      {
        do
        {
          std::string v6 = v5;
          uint64_t v5 = *(morphun::dialog::SemanticFeatureModel **)v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          std::string v6 = (morphun::dialog::SemanticFeatureModel *)*((void *)v3 + 2);
          int v7 = *(void *)v6 == (void)v3;
          CFStringRef v3 = v6;
        }
        while (!v7);
      }
      CFStringRef v3 = v6;
    }
    while (v6 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 88));
  }
  int v8 = (morphun::dialog::SemanticFeatureModel *)*((void *)this + 1);
  if (v8 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 16))
  {
    do
    {
      uint64_t v9 = *((void *)v8 + 7);
      if (v9) {
        (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
      }
      std::basic_string<char16_t>::size_type v10 = (morphun::dialog::SemanticFeatureModel *)*((void *)v8 + 1);
      if (v10)
      {
        do
        {
          int v11 = v10;
          std::basic_string<char16_t>::size_type v10 = *(morphun::dialog::SemanticFeatureModel **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          int v11 = (morphun::dialog::SemanticFeatureModel *)*((void *)v8 + 2);
          int v7 = *(void *)v11 == (void)v8;
          int v8 = v11;
        }
        while (!v7);
      }
      int v8 = v11;
    }
    while (v11 != (morphun::dialog::SemanticFeatureModel *)((char *)this + 16));
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(*((void **)this + 11));
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*((char **)this + 8));
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(*((void **)this + 5));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 2));
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

void std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*(void *)a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*((void *)a1 + 1));
    *((void *)a1 + 11) = &off_1F2A09958;
    uint64_t v2 = (void **)(a1 + 96);
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v2);
    morphun::dialog::SemanticValue::~SemanticValue((void **)a1 + 4);
    operator delete(a1);
  }
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

morphun::dialog::SemanticFeatureModel *morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(morphun::dialog::SemanticFeatureModel *this, const morphun::util::ULocale *a2)
{
  v5[0] = 0;
  v5[1] = 0;
  uint64_t v4 = v5;
  morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(this, a2, &v4);
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(v5[0]);
  return this;
}

{
  char **v4;
  char *v5[2];

  v5[0] = 0;
  v5[1] = 0;
  uint64_t v4 = v5;
  morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(this, a2, &v4);
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(v5[0]);
  return this;
}

void sub_1D2C5B9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
}

void *morphun::dialog::SemanticFeatureModel::SemanticFeatureModel(void *a1, const morphun::util::ULocale *a2, void *a3)
{
  a1[2] = 0;
  a1[5] = 0;
  *a1 = &unk_1F2A09260;
  a1[1] = a1 + 2;
  unint64_t v49 = (uint64_t **)(a1 + 2);
  a1[3] = 0;
  a1[4] = a1 + 5;
  a1[8] = 0;
  a1[9] = 0;
  a1[6] = 0;
  a1[7] = a1 + 8;
  uint64_t v50 = a1 + 8;
  uint64_t v51 = (char **)(a1 + 5);
  uint64_t v4 = a3 + 1;
  uint64_t v5 = (void *)*a3;
  if ((void *)*a3 != a3 + 1)
  {
    while (1)
    {
      std::string v6 = (void *)a1[8];
      int v7 = v50;
      int v8 = v50;
      if ((void *)a1[7] != v50)
      {
        uint64_t v9 = (void *)a1[8];
        std::basic_string<char16_t>::size_type v10 = v50;
        if (v6)
        {
          do
          {
            int v8 = v9;
            uint64_t v9 = (void *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            int v8 = (void *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            std::basic_string<char16_t>::size_type v10 = v8;
          }
          while (v11);
        }
        int v7 = v50;
        if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v8 + 4, v5 + 4)) {
          break;
        }
      }
      std::basic_string<char16_t>::size_type v12 = v7;
      if (!v6) {
        goto LABEL_18;
      }
      int v7 = v8 + 1;
      if (!v8[1])
      {
        std::basic_string<char16_t>::size_type v12 = v8;
LABEL_18:
        uint64_t v15 = (char *)operator new(0x78uLL);
        std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)(v15 + 40), (long long *)((char *)v5 + *(void *)(v5[4] - 40) + 32));
        *((void *)v15 + 12) = 0;
        *((void *)v15 + 4) = &off_1F2A08DB8;
        *((void *)v15 + 11) = &off_1F2A09958;
        *((void *)v15 + 13) = 0;
        *((void *)v15 + 14) = 0;
        std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>((void *)v15 + 12, v5[12], v5[13], 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v5[13] - v5[12]) >> 3));
        *(void *)uint64_t v15 = 0;
        *((void *)v15 + 1) = 0;
        *((void *)v15 + 2) = v12;
        *int v7 = v15;
        uint64_t v16 = *(void *)a1[7];
        if (v16)
        {
          a1[7] = v16;
          uint64_t v15 = (char *)*v7;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)a1[8], (uint64_t *)v15);
        ++a1[9];
      }
LABEL_21:
      std::basic_string<char16_t>::size_type v17 = (void *)v5[1];
      if (v17)
      {
        do
        {
          uint64_t v18 = v17;
          std::basic_string<char16_t>::size_type v17 = (void *)*v17;
        }
        while (v17);
      }
      else
      {
        do
        {
          uint64_t v18 = (void *)v5[2];
          BOOL v11 = *v18 == (void)v5;
          uint64_t v5 = v18;
        }
        while (!v11);
      }
      uint64_t v5 = v18;
      if (v18 == v4) {
        goto LABEL_27;
      }
    }
    std::basic_string<char16_t>::size_type v12 = v50;
    if (v6)
    {
      uint64_t v13 = v6;
      while (1)
      {
        while (1)
        {
          std::basic_string<char16_t>::size_type v12 = v13;
          uint64_t v14 = v13 + 4;
          if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v5 + 4, v13 + 4)) {
            break;
          }
          uint64_t v13 = (void *)*v12;
          int v7 = v12;
          if (!*v12) {
            goto LABEL_18;
          }
        }
        if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v14, v5 + 4)) {
          goto LABEL_21;
        }
        int v7 = v12 + 1;
        uint64_t v13 = (void *)v12[1];
        if (!v13) {
          goto LABEL_18;
        }
      }
    }
    goto LABEL_18;
  }
LABEL_27:
  a1[11] = 0;
  a1[12] = 0;
  a1[10] = a1 + 11;
  uint64_t v19 = a2;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 13), a2);
  a1[29] = 0;
  morphun::dialog::SemanticFeatureModel::createDefaultSemanticFeatures(a2, &v53);
  int v21 = v53;
  char v48 = v54;
  if (v53 != v54)
  {
    do
    {
      uint64_t v22 = *v21;
      npc<morphun::dialog::SemanticFeature>(*v21);
      uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 32))(v22);
      uint64_t v24 = v49;
      uint64_t v25 = *v49;
      BOOL v26 = v49;
      if (*v49)
      {
        while (1)
        {
          while (1)
          {
            BOOL v26 = (uint64_t **)v25;
            uint64_t v27 = (unsigned __int16 *)(v25 + 4);
            if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v23, (unsigned __int16 *)v25 + 16))break; {
            uint64_t v25 = *v26;
            }
            uint64_t v24 = v26;
            if (!*v26) {
              goto LABEL_34;
            }
          }
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v27, (unsigned __int16 *)v23)) {
            break;
          }
          uint64_t v24 = v26 + 1;
          uint64_t v25 = v26[1];
          if (!v25) {
            goto LABEL_34;
          }
        }
      }
      else
      {
LABEL_34:
        std::basic_string<char16_t> v28 = (uint64_t *)operator new(0x40uLL);
        std::basic_string<char16_t> v29 = (std::basic_string<char16_t> *)(v28 + 4);
        if (*(char *)(v23 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v29, *(const std::basic_string<char16_t>::value_type **)v23, *(void *)(v23 + 8));
        }
        else
        {
          long long v30 = *(_OWORD *)v23;
          v28[6] = *(void *)(v23 + 16);
          *(_OWORD *)&v29->__r_.__value_.__l.__data_ = v30;
        }
        v28[7] = v22;
        *std::basic_string<char16_t> v28 = 0;
        v28[1] = 0;
        v28[2] = (uint64_t)v26;
        *uint64_t v24 = v28;
        uint64_t v31 = *(void *)a1[1];
        if (v31)
        {
          a1[1] = v31;
          std::basic_string<char16_t> v28 = *v24;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)a1[2], v28);
        ++a1[3];
      }
      npc<morphun::dialog::SemanticFeature>(v22);
      if ((*(unsigned int (**)(uint64_t))(*(void *)v22 + 48))(v22))
      {
        npc<morphun::dialog::SemanticFeature>(v22);
        unint64_t v32 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v22 + 40))(v22);
        unint64_t v33 = v32 + 1;
        uint64_t v34 = (void *)*v32;
        if ((void *)*v32 != v32 + 1)
        {
          do
          {
            int v35 = v34 + 4;
            if (*((char *)v34 + 55) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(&__p, (const std::basic_string<char16_t>::value_type *)v34[4], v34[5]);
            }
            else
            {
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v35;
              __p.__r_.__value_.__r.__words[2] = v34[6];
            }
            int v36 = v51;
            uint64_t v37 = *v51;
            int v38 = v51;
            if (*v51)
            {
              while (1)
              {
                while (1)
                {
                  int v38 = (char **)v37;
                  char v39 = (unsigned __int16 *)(v37 + 32);
                  if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v34 + 16, (unsigned __int16 *)v37 + 16))break; {
                  uint64_t v37 = *v38;
                  }
                  int v36 = v38;
                  if (!*v38) {
                    goto LABEL_51;
                  }
                }
                if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v39, (unsigned __int16 *)v34 + 16))break; {
                int v36 = v38 + 1;
                }
                uint64_t v37 = v38[1];
                if (!v37) {
                  goto LABEL_51;
                }
              }
            }
            else
            {
LABEL_51:
              __int16 v40 = (char *)operator new(0x58uLL);
              v55[0] = v40;
              v55[1] = v51;
              char v56 = 0;
              unint64_t v41 = (std::basic_string<char16_t> *)(v40 + 32);
              if (*((char *)v34 + 55) < 0)
              {
                std::basic_string<char16_t>::__init_copy_ctor_external(v41, (const std::basic_string<char16_t>::value_type *)v34[4], v34[5]);
              }
              else
              {
                long long v42 = *v35;
                *((void *)v40 + 6) = v34[6];
                *(_OWORD *)&v41->__r_.__value_.__l.__data_ = v42;
              }
              *((void *)v40 + 7) = v22;
              *(std::basic_string<char16_t> *)(v40 + 64) = __p;
              memset(&__p, 0, sizeof(__p));
              char v56 = 1;
              *(void *)__int16 v40 = 0;
              *((void *)v40 + 1) = 0;
              *((void *)v40 + 2) = v38;
              *int v36 = v40;
              uint64_t v43 = *(void *)a1[4];
              if (v43)
              {
                a1[4] = v43;
                __int16 v40 = *v36;
              }
              std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)a1[5], (uint64_t *)v40);
              ++a1[6];
              v55[0] = 0;
              std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v55);
            }
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            unint64_t v44 = (void *)v34[1];
            if (v44)
            {
              do
              {
                uint64_t v45 = v44;
                unint64_t v44 = (void *)*v44;
              }
              while (v44);
            }
            else
            {
              do
              {
                uint64_t v45 = (void *)v34[2];
                BOOL v11 = *v45 == (void)v34;
                uint64_t v34 = v45;
              }
              while (!v11);
            }
            uint64_t v34 = v45;
          }
          while (v45 != v33);
        }
      }
      ++v21;
    }
    while (v21 != v48);
    int v21 = v53;
    uint64_t v19 = a2;
  }
  if (v21) {
    operator delete(v21);
  }
  morphun::grammar::synthesis::GrammarSynthesizerFactory::addSemanticFeatures(v19, (const morphun::util::ULocale *)a1, v20);
  return a1;
}

void sub_1D2C5BFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, void **a11, uint64_t a12, uint64_t a13, char **a14, char **a15, void **a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p)
{
}

void morphun::dialog::SemanticFeatureModel::createDefaultSemanticFeatures(morphun::dialog::SemanticFeatureModel *this@<X0>, void *a2@<X8>)
{
  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures(this, &v18);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v4 = *(int *)v19[16];
  uint64_t v5 = *(int *)v19[17];
  unint64_t v6 = v5 + v4;
  if (v5 + v4)
  {
    if ((v6 & 0x80000000) != 0) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    int v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v6);
    *a2 = v7;
    a2[1] = v7;
    a2[2] = &v7[8 * v8];
  }
  morphun::lang::features::LanguageGrammarFeatures::getCategories((morphun::lang::features::LanguageGrammarFeatures *)&v18, (uint64_t)&v16);
  if ((void **)v16 != v17) {
    operator new();
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(v17[0]);
  morphun::lang::features::LanguageGrammarFeatures::getFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v18, (uint64_t)&v16);
  if ((void **)v16 != v17)
  {
    *(_OWORD *)&v15.__r_.__value_.__r.__words[1] = 0uLL;
    v15.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v15.__r_.__value_.__l.__size_;
    memset(&v14, 0, sizeof(v14));
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v14, *(void *)(v16 + 64), *(void *)(v16 + 72), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(v16 + 72) - *(void *)(v16 + 64)) >> 3));
    std::basic_string<char16_t>::size_type size = v14.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::size_type v9 = v14.__r_.__value_.__r.__words[0];
    if (v14.__r_.__value_.__r.__words[0] != v14.__r_.__value_.__l.__size_)
    {
      std::basic_string<char16_t>::size_type v11 = v14.__r_.__value_.__r.__words[0];
      do
      {
        (*(void (**)(void **__return_ptr, std::basic_string<char16_t>::size_type))(*(void *)v11 + 24))(__p, v11);
        std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>((uint64_t **)&v15, (unsigned __int16 *)__p, (uint64_t)__p);
        if (v13 < 0) {
          operator delete(__p[0]);
        }
        v11 += 56;
        v9 += 56;
      }
      while (v11 != size);
    }
    __p[0] = &v14;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    operator new();
  }
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v17[0]);
  uint64_t v18 = &off_1F2A088F0;
}

void sub_1D2C5C540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33)
{
  int v35 = *(void **)v33;
  if (*(void *)v33)
  {
    *(void *)(v33 + 8) = v35;
    operator delete(v35);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SemanticFeature>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C5C70C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::pair<morphun::dialog::SemanticFeature *,std::basic_string<char16_t>>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100](std::basic_string<char16_t> *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = this + 1;
  if (*((char *)a2 + 47) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *((const std::basic_string<char16_t>::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

void sub_1D2C5C8A0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >= 0x492492492492493) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    long long v6 = result;
    double result = std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(a4);
    int v7 = result;
    void *v6 = result;
    v6[1] = result;
    v6[2] = &result[7 * v8];
    if (a2 != a3)
    {
      unint64_t v9 = 0;
      do
      {
        v7[v9 / 8] = &off_1F2A09998;
        std::basic_string<char16_t>::size_type v10 = (const std::basic_string<char16_t>::value_type **)(a2 + v9 + 8);
        if (*(char *)(a2 + v9 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v7[v9 / 8 + 1], *v10, *(void *)(a2 + v9 + 16));
        }
        else
        {
          long long v11 = *(_OWORD *)v10;
          v7[v9 / 8 + 3] = *(void *)(a2 + v9 + 24);
          *(_OWORD *)&v7[v9 / 8 + 1] = v11;
        }
        double result = std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&v7[v9 / 8 + 4], a2 + v9 + 32);
        v9 += 56;
      }
      while (a2 + v9 != a3);
      int v7 = (void *)((char *)v7 + v9);
    }
    v6[1] = v7;
  }
  return result;
}

void sub_1D2C5C9DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(unint64_t a1)
{
  if (a1 >= 0x492492492492493) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(56 * a1);
}

BOOL std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](void *a1, void *a2)
{
  uint64_t v2 = (unsigned __int16 *)((char *)a1 + *(void *)(*a1 - 40));
  CFStringRef v3 = (unsigned __int16 *)((char *)a2 + *(void *)(*a2 - 40));
  unint64_t v4 = *((unsigned __int8 *)v3 + 23);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    unint64_t v4 = *((void *)v3 + 1);
  }
  unint64_t v6 = *((unsigned __int8 *)v2 + 23);
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    unint64_t v6 = *((void *)v2 + 1);
  }
  if (v4 >= v6) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = v4;
  }
  if (v8)
  {
    unint64_t v9 = *(unsigned __int16 **)v2;
    if (v7 >= 0) {
      unint64_t v9 = (unsigned __int16 *)((char *)a1 + *(void *)(*a1 - 40));
    }
    std::basic_string<char16_t>::size_type v10 = *(unsigned __int16 **)v3;
    if (v5 >= 0) {
      std::basic_string<char16_t>::size_type v10 = (unsigned __int16 *)((char *)a2 + *(void *)(*a2 - 40));
    }
    unint64_t v11 = v8;
    do
    {
      unsigned int v12 = *v9;
      unsigned int v13 = *v10;
      if (v12 < v13) {
        return 1;
      }
      if (v13 < v12) {
        goto LABEL_19;
      }
      ++v9;
      ++v10;
    }
    while (--v11);
  }
  if (v6 < v4) {
    return 1;
  }
LABEL_19:
  if (v8)
  {
    if (v5 >= 0) {
      std::basic_string<char16_t> v15 = v3;
    }
    else {
      std::basic_string<char16_t> v15 = *(unsigned __int16 **)v3;
    }
    if (v7 >= 0) {
      uint64_t v16 = v2;
    }
    else {
      uint64_t v16 = *(unsigned __int16 **)v2;
    }
    do
    {
      unsigned int v17 = *v15;
      unsigned int v18 = *v16;
      if (v17 < v18) {
        return 0;
      }
      if (v18 < v17) {
        goto LABEL_31;
      }
      ++v15;
      ++v16;
    }
    while (--v8);
  }
  if (v4 < v6) {
    return 0;
  }
LABEL_31:
  unint64_t v19 = *((unsigned __int8 *)v3 + 47);
  int v20 = (char)v19;
  if ((v19 & 0x80u) != 0) {
    unint64_t v19 = *((void *)v3 + 4);
  }
  unint64_t v21 = *((unsigned __int8 *)v2 + 47);
  int v22 = (char)v21;
  if ((v21 & 0x80u) != 0) {
    unint64_t v21 = *((void *)v2 + 4);
  }
  if (v19 >= v21) {
    unint64_t v23 = v21;
  }
  else {
    unint64_t v23 = v19;
  }
  if (v23)
  {
    BOOL v26 = (unsigned __int16 *)*((void *)v2 + 3);
    uint64_t v24 = v2 + 12;
    uint64_t v25 = v26;
    if (v22 < 0) {
      uint64_t v24 = v25;
    }
    std::basic_string<char16_t> v29 = (unsigned __int16 *)*((void *)v3 + 3);
    uint64_t v27 = v3 + 12;
    std::basic_string<char16_t> v28 = v29;
    if (v20 < 0) {
      uint64_t v27 = v28;
    }
    while (1)
    {
      unsigned int v30 = *v24;
      unsigned int v31 = *v27;
      if (v31 != v30) {
        break;
      }
      ++v24;
      ++v27;
      if (!--v23) {
        goto LABEL_45;
      }
    }
    BOOL v32 = v30 >= v31;
  }
  else
  {
LABEL_45:
    BOOL v32 = v21 >= v19;
  }
  return !v32;
}

void sub_1D2C5CC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
}

void morphun::dialog::SemanticFeatureModel::getKnownSemanticValues(morphun::dialog::SemanticFeatureModel *this@<X0>, uint64_t **a2@<X8>)
{
  a2[1] = 0;
  uint64_t v2 = (char **)(a2 + 1);
  a2[2] = 0;
  *a2 = (uint64_t *)(a2 + 1);
  CFStringRef v3 = (void *)*((void *)this + 7);
  unint64_t v4 = (char *)this + 64;
  if (v3 != (void *)((char *)this + 64))
  {
    do
    {
      unint64_t v6 = v2;
      int v7 = v2;
      if (*v2)
      {
        unint64_t v8 = *v2;
        while (1)
        {
          while (1)
          {
            unint64_t v6 = (char **)v8;
            unint64_t v9 = v8 + 32;
            if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v3 + 4, (void *)v8 + 4)) {
              break;
            }
            unint64_t v8 = *v6;
            int v7 = v6;
            if (!*v6) {
              goto LABEL_9;
            }
          }
          if (!std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v9, v3 + 4)) {
            break;
          }
          int v7 = v6 + 1;
          unint64_t v8 = v6[1];
          if (!v8) {
            goto LABEL_9;
          }
        }
      }
      else
      {
LABEL_9:
        std::basic_string<char16_t>::size_type v10 = (char *)operator new(0x58uLL);
        v15[0] = v10;
        v15[1] = v2;
        char v16 = 0;
        std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)(v10 + 40), (long long *)((char *)v3 + *(void *)(v3[4] - 40) + 32));
        *((void *)v10 + 4) = &off_1F2A08DB8;
        char v16 = 1;
        *(void *)std::basic_string<char16_t>::size_type v10 = 0;
        *((void *)v10 + 1) = 0;
        *((void *)v10 + 2) = v6;
        *int v7 = v10;
        unint64_t v11 = (uint64_t *)**a2;
        if (v11)
        {
          *a2 = v11;
          std::basic_string<char16_t>::size_type v10 = *v7;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a2[1], (uint64_t *)v10);
        a2[2] = (uint64_t *)((char *)a2[2] + 1);
        v15[0] = 0;
        std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100]((uint64_t)v15);
      }
      unsigned int v12 = (char *)v3[1];
      if (v12)
      {
        do
        {
          unsigned int v13 = v12;
          unsigned int v12 = *(char **)v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          unsigned int v13 = (char *)v3[2];
          BOOL v14 = *(void *)v13 == (void)v3;
          CFStringRef v3 = v13;
        }
        while (!v14);
      }
      CFStringRef v3 = v13;
    }
    while (v13 != v4);
  }
}

void sub_1D2C5CE38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*v2);
  _Unwind_Resume(a1);
}

void *morphun::dialog::SemanticFeatureModel::getDisplayData(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)(a1 + 64);
  CFStringRef v3 = *(void **)(a1 + 64);
  if (!v3) {
    goto LABEL_8;
  }
  int v5 = (void *)(a1 + 64);
  do
  {
    BOOL v6 = std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](v3 + 4, a2);
    int v7 = v3 + 1;
    if (!v6)
    {
      int v7 = v3;
      int v5 = v3;
    }
    CFStringRef v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](a2, v5 + 4)) {
LABEL_8:
  }
    int v5 = v2;
  if (v2 == v5) {
    return 0;
  }
  else {
    return v5 + 11;
  }
}

uint64_t morphun::dialog::SemanticFeatureModel::getFeature(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v3 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 8, a2);
  if (a1 + 16 == v3) {
    return 0;
  }
  else {
    return *(void *)(v3 + 56);
  }
}

void morphun::dialog::SemanticFeatureModel::getFeatureAlias(uint64_t a1@<X0>, unsigned __int16 *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = a1 + 40;
  uint64_t v5 = *(void *)(a1 + 40);
  if (!v5) {
    goto LABEL_8;
  }
  uint64_t v7 = a1 + 40;
  do
  {
    BOOL v8 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v5 + 32), a2);
    unint64_t v9 = (uint64_t *)(v5 + 8);
    if (!v8)
    {
      unint64_t v9 = (uint64_t *)v5;
      uint64_t v7 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v7 == v4 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2, (unsigned __int16 *)(v7 + 32)))
  {
LABEL_8:
    *a3 = 0u;
    a3[1] = 0u;
  }
  else
  {
    *(void *)a3 = *(void *)(v7 + 56);
    std::basic_string<char16_t>::size_type v10 = (std::basic_string<char16_t> *)((char *)a3 + 8);
    if (*(char *)(v7 + 87) < 0)
    {
      unint64_t v11 = *(const std::basic_string<char16_t>::value_type **)(v7 + 64);
      std::basic_string<char16_t>::size_type v12 = *(void *)(v7 + 72);
      std::basic_string<char16_t>::__init_copy_ctor_external(v10, v11, v12);
    }
    else
    {
      *(_OWORD *)&v10->__r_.__value_.__l.__data_ = *(_OWORD *)(v7 + 64);
      v10->__r_.__value_.__r.__words[2] = *(void *)(v7 + 80);
    }
  }
}

uint64_t morphun::dialog::SemanticFeatureModel::getLocale(morphun::dialog::SemanticFeatureModel *this)
{
  return (uint64_t)this + 104;
}

uint64_t morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(morphun::dialog::SemanticFeatureModel *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t v2 = (char *)this + 88;
  uint64_t v3 = (void *)*((void *)this + 11);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = (char *)this + 88;
  do
  {
    BOOL v6 = morphun::dialog::SemanticFeature::operator<((uint64_t)(v3 + 4), (uint64_t)a2);
    uint64_t v7 = v3 + 1;
    if (!v6)
    {
      uint64_t v7 = v3;
      uint64_t v5 = (char *)v3;
    }
    uint64_t v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || morphun::dialog::SemanticFeature::operator<((uint64_t)a2, (uint64_t)(v5 + 32))) {
    return 0;
  }
  else {
    return *((void *)v5 + 13);
  }
}

void morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunction(morphun::dialog::SemanticFeatureModel *this, const morphun::dialog::SemanticFeature *a2, morphun::dialog::DefaultFeatureFunction *a3)
{
  uint64_t v7 = (char *)this + 88;
  BOOL v6 = (uint64_t *)*((void *)this + 11);
  BOOL v8 = (uint64_t **)((char *)this + 88);
  unint64_t v9 = (uint64_t **)((char *)this + 88);
  if (!v6)
  {
LABEL_13:
    std::basic_string<char16_t> v15 = (uint64_t *)operator new(0x70uLL);
    v21[0] = (uint64_t)v15;
    v21[1] = (uint64_t)v7;
    morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v15 + 4), a2);
    v15[13] = 0;
    char v22 = 1;
    *std::basic_string<char16_t> v15 = 0;
    v15[1] = 0;
    void v15[2] = (uint64_t)v8;
    *unint64_t v9 = v15;
    uint64_t v16 = **((void **)this + 10);
    unsigned int v17 = v15;
    if (v16)
    {
      *((void *)this + 10) = v16;
      unsigned int v17 = *v9;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)this + 11), v17);
    ++*((void *)this + 12);
    v21[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>>>>::reset[abi:ne180100](v21);
LABEL_16:
    unsigned int v18 = v15 + 13;
    goto LABEL_17;
  }
  std::basic_string<char16_t>::size_type v10 = (char *)this + 88;
  unint64_t v11 = (void *)*((void *)this + 11);
  do
  {
    BOOL v12 = morphun::dialog::SemanticFeature::operator<((uint64_t)(v11 + 4), (uint64_t)a2);
    unsigned int v13 = v11 + 1;
    if (!v12)
    {
      unsigned int v13 = v11;
      std::basic_string<char16_t>::size_type v10 = (char *)v11;
    }
    unint64_t v11 = (void *)*v13;
  }
  while (*v13);
  if (v10 == v7 || morphun::dialog::SemanticFeature::operator<((uint64_t)a2, (uint64_t)(v10 + 32)))
  {
    while (1)
    {
      while (1)
      {
        BOOL v8 = (uint64_t **)v6;
        uint64_t v14 = (uint64_t)(v6 + 4);
        if (!morphun::dialog::SemanticFeature::operator<((uint64_t)a2, v14)) {
          break;
        }
        BOOL v6 = *v8;
        unint64_t v9 = v8;
        if (!*v8) {
          goto LABEL_13;
        }
      }
      if (!morphun::dialog::SemanticFeature::operator<(v14, (uint64_t)a2)) {
        break;
      }
      unint64_t v9 = v8 + 1;
      BOOL v6 = v8[1];
      if (!v6) {
        goto LABEL_13;
      }
    }
    std::basic_string<char16_t> v15 = (uint64_t *)v8;
    goto LABEL_16;
  }
  uint64_t v20 = *((void *)v10 + 13);
  unsigned int v18 = v10 + 104;
  uint64_t v19 = v20;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v19 + 16))(v19);
  }
LABEL_17:
  void *v18 = a3;
}

void sub_1D2C5D228(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>>>>::reset[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,morphun::dialog::DefaultFeatureFunction *>,void *>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((unsigned char *)a1 + 16)) {
    operator delete((void *)v1);
    }
  }
}

void morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunctionByName(uint64_t a1, unsigned __int16 *a2, morphun::dialog::DefaultFeatureFunction *a3)
{
  uint64_t v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 8, a2);
  if (a1 + 16 == v6 || (uint64_t v7 = *(const morphun::dialog::SemanticFeature **)(v6 + 56)) == 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, (const void **)a2, word_1D2EC1D26);
    if (*(char *)(a1 + 231) < 0)
    {
      unint64_t v9 = *(const char **)(a1 + 208);
      uint64_t v10 = *(void *)(a1 + 216);
    }
    else
    {
      unint64_t v9 = (const char *)(a1 + 208);
      LODWORD(v10) = *(unsigned __int8 *)(a1 + 231);
    }
    morphun::util::StringViewUtils::to_u16string(v9, v10, &v13);
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v11 = &v13;
    }
    else {
      unint64_t v11 = (std::basic_string<char16_t> *)v13.__r_.__value_.__r.__words[0];
    }
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v13.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v13.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v14, (const std::basic_string<char16_t>::value_type *)v11, size);
    std::basic_string<char16_t> v15 = v14;
    memset(&v14, 0, sizeof(v14));
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v15);
  }

  morphun::dialog::SemanticFeatureModel::putDefaultFeatureFunction((morphun::dialog::SemanticFeatureModel *)a1, v7, a3);
}

void sub_1D2C5D3C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v26 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v26)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v23);
  goto LABEL_10;
}

uint64_t std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(uint64_t a1, const void **a2, _WORD *a3)
{
  if (*((char *)a2 + 23) >= 0) {
    unint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    unint64_t v5 = (unint64_t)a2[1];
  }
  if (*a3)
  {
    uint64_t v6 = 0;
    do
      uint64_t v7 = v6 + 1;
    while (a3[++v6]);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t result = std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v7 + v5);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v10 = (char *)result;
  }
  else {
    uint64_t v10 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a2 + 23) >= 0) {
      unint64_t v11 = a2;
    }
    else {
      unint64_t v11 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, 2 * v5);
  }
  if (v7) {
    uint64_t result = (uint64_t)memmove(&v10[2 * v5], a3, 2 * v7);
  }
  *(_WORD *)&v10[2 * v5 + 2 * v7] = 0;
  return result;
}

uint64_t morphun::dialog::SemanticFeatureModel::getDefaultDisplayFunction(morphun::dialog::SemanticFeatureModel *this)
{
  return *((void *)this + 29);
}

uint64_t morphun::dialog::SemanticFeatureModel::setDefaultDisplayFunction(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 232);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
  }
  *(void *)(a1 + 232) = a2;
  return result;
}

void virtual thunk to'morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectSignificantTokens(void *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectSignificantTokens(uint64_t *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  unint64_t v10 = *((int *)a4[1] - 1);
  uint64_t v11 = a1[6];
  npc<std::vector<std::basic_string<char16_t>>>((uint64_t)a3);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
    goto LABEL_62;
  }
  uint64_t v12 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v12 + 23) < 0)
  {
    uint64_t v12 = *(void *)v12;
    uint64_t v13 = *((void *)*a3 + 3 * (int)v10 + 1);
  }
  else
  {
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  v46.__r_.__value_.__r.__words[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)&v46, (const UChar *)v12, v13))
  {
    std::basic_string<char16_t> v14 = *a4;
    if (a4[1] - *a4 == 8)
    {
      unint64_t v15 = *(int *)v14;
      uint64_t v16 = *a3;
      unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3);
      if (v17 > v15)
      {
        unint64_t v18 = *((int *)v14 + 1);
        if (v17 > v18)
        {
          uint64_t v19 = (uint64_t)v16 + 24 * (int)v15;
          uint64_t v20 = (uint64_t)v16 + 24 * (int)v18;
          uint64_t v44 = 0;
          __str.__r_.__value_.__r.__words[0] = 0;
          if (*(char *)(v19 + 23) < 0)
          {
            char v22 = *(const UChar **)v19;
            uint64_t v21 = *(void *)(v19 + 8);
          }
          else
          {
            uint64_t v21 = *(unsigned __int8 *)(v19 + 23);
            char v22 = (const UChar *)v16 + 12 * (int)v15;
          }
          CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[6], (uint64_t)&__str, v22, v21);
          if (*(char *)(v20 + 23) < 0)
          {
            uint64_t v33 = *(const UChar **)v20;
            uint64_t v32 = *(void *)(v20 + 8);
          }
          else
          {
            uint64_t v32 = *(unsigned __int8 *)(v20 + 23);
            uint64_t v33 = (const UChar *)v20;
          }
          uint64_t v34 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[6], (uint64_t)&v44, v33, v32);
          if (CombinedBinaryType) {
            BOOL v35 = v34 == 0;
          }
          else {
            BOOL v35 = 1;
          }
          if (v35
            || (a1[9] & __str.__r_.__value_.__r.__words[0]) != 0
            && (uint64_t v41 = a1[10], (v41 & __str.__r_.__value_.__r.__words[0]) == 0)
            && (v44 & v41) != 0)
          {
            morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, v19, v20, 0, 0);
            unint64_t v36 = *(int *)*a4;
            if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v36) {
              std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
            }
            uint64_t v37 = (uint64_t)*a3 + 24 * (int)v36;
            if (*(char *)(v37 + 23) < 0) {
              operator delete(*(void **)v37);
            }
            long long v38 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
            *(void *)(v37 + 16) = *((void *)&v46.__r_.__value_.__l + 2);
            *(_OWORD *)uint64_t v37 = v38;
            morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, v20, v20, 1, 1);
            unint64_t v39 = *((int *)*a4 + 1);
            if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v39) {
              std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
            }
            uint64_t v40 = (uint64_t)*a3 + 24 * (int)v39;
            goto LABEL_56;
          }
          unint64_t v42 = *((int *)*a4 + 1);
          if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) > v42)
          {
            morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, (uint64_t)*a3 + 24 * (int)v42, (uint64_t)*a3 + 24 * (int)v42, 1, 0);
            int v25 = *a3;
            if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
              std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
            }
LABEL_55:
            uint64_t v40 = (uint64_t)v25 + 24 * (int)v10;
LABEL_56:
            if (*(char *)(v40 + 23) < 0) {
              operator delete(*(void **)v40);
            }
            long long v43 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
            *(void *)(v40 + 16) = *((void *)&v46.__r_.__value_.__l + 2);
            *(_OWORD *)uint64_t v40 = v43;
            a5->__r_.__value_.__r.__words[0] = 0;
            a5->__r_.__value_.__l.__size_ = 0;
            a5->__r_.__value_.__r.__words[2] = 0;
            std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
            return;
          }
        }
      }
    }
    else if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) > v10)
    {
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v46, a1, a2, (uint64_t)*a3 + 24 * (int)v10, (uint64_t)*a3 + 24 * (int)v10, 1, 0);
      int v25 = *a3;
      if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      goto LABEL_55;
    }
LABEL_62:
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
    goto LABEL_62;
  }
  uint64_t v23 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v23 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v46, *(const std::basic_string<char16_t>::value_type **)v23, *(void *)(v23 + 8));
  }
  else
  {
    long long v24 = *(_OWORD *)v23;
    v46.__r_.__value_.__r.__words[2] = *(void *)(v23 + 16);
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v24;
  }
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested((uint64_t)&__str, a1[3], a2, (uint64_t)&v46);
  std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  char v27 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::size_type v28 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
  if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v28 = v46.__r_.__value_.__l.__size_;
  }
  if (size == v28)
  {
    if (!size)
    {
LABEL_30:
      a5->__r_.__value_.__r.__words[0] = 0;
      a5->__r_.__value_.__l.__size_ = 0;
      a5->__r_.__value_.__r.__words[2] = 0;
      if ((v27 & 0x80) == 0) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
    std::basic_string<char16_t> v29 = &v46;
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t> v29 = (std::basic_string<char16_t> *)v46.__r_.__value_.__r.__words[0];
    }
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_str = &__str;
    }
    while (v29->__r_.__value_.__s.__data_[0] == p_str->__r_.__value_.__s.__data_[0])
    {
      p_str = (std::basic_string<char16_t> *)((char *)p_str + 2);
      std::basic_string<char16_t> v29 = (std::basic_string<char16_t> *)((char *)v29 + 2);
      if (!--size) {
        goto LABEL_30;
      }
    }
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)*a3 + (int)v10, &__str);
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
    goto LABEL_35;
  }
LABEL_34:
  operator delete(__str.__r_.__value_.__l.__data_);
LABEL_35:
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C5DA70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<std::vector<std::basic_string<char16_t>>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C5DB04(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a2);
  uint64_t v7 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v6);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(v7 + 8);
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  int v11 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (v8 != size) {
    goto LABEL_25;
  }
  if (v8)
  {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    if (v9 >= 0) {
      uint64_t v13 = (unsigned __int16 *)v7;
    }
    else {
      uint64_t v13 = *(unsigned __int16 **)v7;
    }
    while ((unsigned __int16)p_p->__r_.__value_.__s.__data_[0] == *v13)
    {
      ++v13;
      p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
      if (!--v8) {
        goto LABEL_14;
      }
    }
    goto LABEL_25;
  }
LABEL_14:
  if ((*(char *)(a4 + 23) & 0x80000000) == 0)
  {
    unint64_t v14 = *(unsigned __int8 *)(a4 + 23);
    if (v14 > 1)
    {
      unint64_t v15 = (const std::basic_string<char16_t>::value_type *)a4;
      goto LABEL_19;
    }
LABEL_25:
    if ((*(char *)(a4 + 23) & 0x80000000) == 0)
    {
      *(_OWORD *)a1 = *(_OWORD *)a4;
      *(void *)(a1 + 16) = *(void *)(a4 + 16);
      if ((v11 & 0x80000000) == 0) {
        return;
      }
      goto LABEL_66;
    }
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, *(const std::basic_string<char16_t>::value_type **)a4, *(void *)(a4 + 8));
LABEL_29:
    if ((v11 & 0x80000000) == 0) {
      return;
    }
    goto LABEL_66;
  }
  unint64_t v14 = *(void *)(a4 + 8);
  if (v14 <= 1) {
    goto LABEL_25;
  }
  unint64_t v15 = *(const std::basic_string<char16_t>::value_type **)a4;
LABEL_19:
  UChar32 v16 = MEMORY[0x1D942BD20]((unsigned __int16)v15[v14 - 1]);
  if ((v16 - 115) <= 7 && ((1 << (v16 - 115)) & 0xA1) != 0)
  {
    __int16 v18 = 8217;
LABEL_24:
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(a1, (const void **)a4, v18);
    goto LABEL_29;
  }
  int v19 = *(char *)(a4 + 23);
  if (v19 >= 0) {
    uint64_t v20 = (const std::basic_string<char16_t>::value_type *)a4;
  }
  else {
    uint64_t v20 = *(const std::basic_string<char16_t>::value_type **)a4;
  }
  if (v19 >= 0) {
    uint64_t v21 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v21 = *(void *)(a4 + 8);
  }
  if (morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v20, v21) && !u_ispunct(v16))
  {
    LOBYTE(v23) = *(unsigned char *)(a4 + 23);
    uint64_t v24 = *(void *)(a4 + 8);
  }
  else
  {
    int v22 = u_isdigit(v16);
    int v23 = *(char *)(a4 + 23);
    uint64_t v24 = *(void *)(a4 + 8);
    if (!v22)
    {
      unint64_t v25 = v23 >= 0 ? *(unsigned __int8 *)(a4 + 23) : *(void *)(a4 + 8);
      if (v25 < 3) {
        goto LABEL_53;
      }
      uint64_t v26 = 0;
      char v27 = *(const std::basic_string<char16_t>::value_type **)a4;
      if (v23 >= 0) {
        char v27 = (const std::basic_string<char16_t>::value_type *)a4;
      }
      uint64_t v28 = (uint64_t)&v27[v25 - 3];
      do
      {
        int v29 = *(unsigned __int16 *)(v28 + v26 * 2);
        int v30 = (unsigned __int16)word_1D2EC1D82[v26];
      }
      while (v30 == v29 && v26++ != 2);
      if (v30 != v29)
      {
LABEL_53:
        __int16 v18 = 115;
        goto LABEL_24;
      }
    }
  }
  if ((v23 & 0x80u) == 0) {
    uint64_t v32 = v23;
  }
  else {
    uint64_t v32 = v24;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v32 + 2);
  if (*(char *)(a1 + 23) < 0) {
    a1 = *(void *)a1;
  }
  if (v32)
  {
    if (*(char *)(a4 + 23) >= 0) {
      uint64_t v33 = (const std::basic_string<char16_t>::value_type *)a4;
    }
    else {
      uint64_t v33 = *(const std::basic_string<char16_t>::value_type **)a4;
    }
    memmove((void *)a1, v33, 2 * v32);
  }
  uint64_t v34 = a1 + 2 * v32;
  *(_DWORD *)uint64_t v34 = 7544857;
  *(_WORD *)(v34 + 4) = 0;
  if (v11 < 0)
  {
LABEL_66:
    BOOL v35 = (void *)__p.__r_.__value_.__r.__words[0];
    operator delete(v35);
  }
}

void sub_1D2C5DDA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (v15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(std::basic_string<char16_t> *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v11 = a3;
  v141[2] = *MEMORY[0x1E4F143B8];
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v128, a3, a2[2]);
  memset(&v127, 0, sizeof(v127));
  if (a7)
  {
    char v15 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(v14);
    std::basic_string<char16_t>::operator=(&v127, v15);
  }
  else
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue((std::basic_string<char16_t> *)v134, v11, a2[1]);
    if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v127.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> v127 = *(std::basic_string<char16_t> *)v134;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__s, v11, a2[3]);
  uint64_t v125 = 0;
  int v16 = *(char *)(a5 + 23);
  if (v16 >= 0) {
    unint64_t v17 = (const UChar *)a5;
  }
  else {
    unint64_t v17 = *(const UChar **)a5;
  }
  if (v16 >= 0) {
    uint64_t v18 = *(unsigned __int8 *)(a5 + 23);
  }
  else {
    uint64_t v18 = *(void *)(a5 + 8);
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[6], (uint64_t)&v125, v17, v18);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, v11, a2[4]);
  std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  int v20 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    morphun::dialog::DictionaryLookupFunction::determine((uint64_t)(a2 + 11), a5, v134);
    if (v20 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> __p = *(std::basic_string<char16_t> *)v134;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v123, v11, a2[5]);
  uint64_t v22 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE(v21);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  int v24 = (char)v23;
  if ((v23 & 0x80u) != 0) {
    uint64_t v23 = *(void *)(v22 + 8);
  }
  std::basic_string<char16_t>::size_type v25 = HIBYTE(v123.__r_.__value_.__r.__words[2]);
  if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v25 = v123.__r_.__value_.__l.__size_;
  }
  if (v23 != v25)
  {
LABEL_32:
    BOOL v28 = (a2[9] & v125) == 0 || (a2[10] & v125) != 0;
    goto LABEL_35;
  }
  if (v23)
  {
    uint64_t v26 = &v123;
    if ((v123.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v26 = (std::basic_string<char16_t> *)v123.__r_.__value_.__r.__words[0];
    }
    if (v24 >= 0) {
      char v27 = (unsigned __int16 *)v22;
    }
    else {
      char v27 = *(unsigned __int16 **)v22;
    }
    while ((unsigned __int16)v26->__r_.__value_.__s.__data_[0] == *v27)
    {
      ++v27;
      uint64_t v26 = (std::basic_string<char16_t> *)((char *)v26 + 2);
      if (!--v23) {
        goto LABEL_31;
      }
    }
    goto LABEL_32;
  }
LABEL_31:
  BOOL v28 = 0;
LABEL_35:
  int v29 = *(char *)(a4 + 23);
  if (v29 >= 0) {
    int v30 = (const UChar *)a4;
  }
  else {
    int v30 = *(const UChar **)a4;
  }
  if (v29 >= 0) {
    uint64_t v31 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v31 = *(void *)(a4 + 8);
  }
  PropertyValues = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[6], v30, v31, (unsigned __int16 *)"i", 0xAuLL, &v121);
  *(void *)((char *)v141 + 7) = 0;
  v141[0] = 0;
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v138, v128.__r_.__value_.__l.__data_, v128.__r_.__value_.__l.__size_);
  }
  else {
    std::basic_string<char16_t> v138 = v128;
  }
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v137, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
  }
  else {
    std::basic_string<char16_t> v137 = v127;
  }
  std::basic_string<char16_t>::size_type v33 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
  if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v33 = v138.__r_.__value_.__l.__size_;
  }
  if (!v33)
  {
    uint64_t v34 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(PropertyValues);
    PropertyValues = (morphun::grammar::synthesis::GrammemeConstants *)std::basic_string<char16_t>::operator=(&v138, v34);
  }
  std::basic_string<char16_t>::size_type v35 = HIBYTE(v137.__r_.__value_.__r.__words[2]);
  if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v35 = v137.__r_.__value_.__l.__size_;
  }
  if (!v35)
  {
    unint64_t v36 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(PropertyValues);
    PropertyValues = (morphun::grammar::synthesis::GrammemeConstants *)std::basic_string<char16_t>::operator=(&v137, v36);
  }
  if ((v28 & a6 & 1) == 0)
  {
    if (*(char *)(a4 + 23) < 0)
    {
      unint64_t v69 = *(void *)(a4 + 8);
      if (!v69)
      {
        std::basic_string<char16_t>::size_type v110 = 0;
        goto LABEL_244;
      }
    }
    else
    {
      unint64_t v69 = *(unsigned __int8 *)(a4 + 23);
      if (!*(unsigned char *)(a4 + 23)) {
        goto LABEL_241;
      }
    }
    int v70 = 0;
    if (*(char *)(a4 + 23) >= 0) {
      char v71 = (const UChar *)a4;
    }
    else {
      char v71 = *(const UChar **)a4;
    }
    int v72 = v71[v69 - 1];
    if (((v72 - 97) > 0x18 || ((1 << (v72 - 97)) & 0x1104111) == 0)
      && ((v72 - 229) > 0x13 || ((1 << (v72 + 27)) & 0x80003) == 0))
    {
      int v70 = 1;
    }
    uint64_t v75 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(PropertyValues);
    uint64_t v77 = *(unsigned __int8 *)(v75 + 23);
    int v78 = (char)v77;
    if ((v77 & 0x80u) != 0) {
      uint64_t v77 = *(void *)(v75 + 8);
    }
    std::basic_string<char16_t>::size_type v79 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
    if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v79 = v138.__r_.__value_.__l.__size_;
    }
    if (v77 == v79)
    {
      if (!v77) {
        goto LABEL_168;
      }
      long long v80 = &v138;
      if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        long long v80 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
      }
      if (v78 >= 0) {
        long long v81 = (unsigned __int16 *)v75;
      }
      else {
        long long v81 = *(unsigned __int16 **)v75;
      }
      while ((unsigned __int16)v80->__r_.__value_.__s.__data_[0] == *v81)
      {
        ++v81;
        long long v80 = (std::basic_string<char16_t> *)((char *)v80 + 2);
        if (!--v77) {
          goto LABEL_168;
        }
      }
    }
    uint64_t v75 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v75);
    uint64_t v82 = *(unsigned __int8 *)(v75 + 23);
    int v83 = (char)v82;
    if ((v82 & 0x80u) != 0) {
      uint64_t v82 = *(void *)(v75 + 8);
    }
    std::basic_string<char16_t>::size_type v84 = HIBYTE(v137.__r_.__value_.__r.__words[2]);
    if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v84 = v137.__r_.__value_.__l.__size_;
    }
    if (v82 != v84) {
      goto LABEL_197;
    }
    if (v82)
    {
      uint64_t v85 = &v137;
      if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v85 = (std::basic_string<char16_t> *)v137.__r_.__value_.__r.__words[0];
      }
      if (v83 >= 0) {
        unint64_t v86 = (unsigned __int16 *)v75;
      }
      else {
        unint64_t v86 = *(unsigned __int16 **)v75;
      }
      while ((unsigned __int16)v85->__r_.__value_.__s.__data_[0] == *v86)
      {
        ++v86;
        uint64_t v85 = (std::basic_string<char16_t> *)((char *)v85 + 2);
        if (!--v82) {
          goto LABEL_168;
        }
      }
      goto LABEL_197;
    }
LABEL_168:
    if (v69 >= 5)
    {
      uint64_t v87 = *(char *)(a4 + 23) >= 0 ? a4 : *(void *)a4;
      if (*(_WORD *)(v87 + 2 * v69 - 4) == 101 && (v72 - 108) <= 6 && ((1 << (v72 - 108)) & 0x45) != 0)
      {
        int v88 = *(unsigned __int16 *)(v87 + 2 * (v69 - 3));
        if (v88 == *(unsigned __int16 *)(v87 + 2 * v69 - 8))
        {
          BOOL v89 = (v88 - 97) > 0x18 || ((1 << (v88 - 97)) & 0x1104111) == 0;
          if (v89 && ((v88 - 229) > 0x13 || ((1 << (v88 + 27)) & 0x80003) == 0))
          {
            v115 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v139, (const std::basic_string<char16_t> *)a4, 0, v69 - 3, v76);
            std::basic_string<char16_t>::push_back(v115, v72);
            *(_OWORD *)std::basic_string<char16_t> v134 = *(_OWORD *)v139;
            *(void *)&v134[16] = *(void *)&v139[16];
            memset(v139, 0, 24);
            std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)v134, 101);
            std::basic_string<char16_t> v120 = *(std::basic_string<char16_t> *)v134;
            memset(v134, 0, 24);
            if ((v139[23] & 0x80000000) != 0) {
              operator delete(*(void **)v139);
            }
            goto LABEL_245;
          }
        }
      }
    }
    if (v70)
    {
      if (*(char *)(a4 + 23) >= 0) {
        uint64_t v90 = *(unsigned __int8 *)(a4 + 23);
      }
      else {
        uint64_t v90 = *(void *)(a4 + 8);
      }
      std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v120, v90 + 1);
      if ((v120.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v91 = &v120;
      }
      else {
        v91 = (std::basic_string<char16_t> *)v120.__r_.__value_.__r.__words[0];
      }
      uint64_t v92 = 2 * v90;
      if (v90)
      {
        if (*(char *)(a4 + 23) >= 0) {
          char v93 = (const UChar *)a4;
        }
        else {
          char v93 = *(const UChar **)a4;
        }
        memmove(v91, v93, 2 * v90);
      }
      int v94 = 101;
      goto LABEL_196;
    }
LABEL_197:
    uint64_t v95 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v75);
    uint64_t v96 = *(unsigned __int8 *)(v95 + 23);
    int v97 = (char)v96;
    if ((v96 & 0x80u) != 0) {
      uint64_t v96 = *(void *)(v95 + 8);
    }
    std::basic_string<char16_t>::size_type v98 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
    if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v98 = v138.__r_.__value_.__l.__size_;
    }
    if (v96 != v98) {
      goto LABEL_240;
    }
    if (v96)
    {
      long long v99 = &v138;
      if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        long long v99 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
      }
      if (v97 >= 0) {
        int v100 = (unsigned __int16 *)v95;
      }
      else {
        int v100 = *(unsigned __int16 **)v95;
      }
      while ((unsigned __int16)v99->__r_.__value_.__s.__data_[0] == *v100)
      {
        ++v100;
        long long v99 = (std::basic_string<char16_t> *)((char *)v99 + 2);
        if (!--v96) {
          goto LABEL_210;
        }
      }
      goto LABEL_240;
    }
LABEL_210:
    uint64_t v101 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v95);
    uint64_t v102 = *(unsigned __int8 *)(v101 + 23);
    int v103 = (char)v102;
    if ((v102 & 0x80u) != 0) {
      uint64_t v102 = *(void *)(v101 + 8);
    }
    std::basic_string<char16_t>::size_type v104 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v104 = __p.__r_.__value_.__l.__size_;
    }
    if (v102 != v104) {
      goto LABEL_240;
    }
    if (v102)
    {
      p_p = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if (v103 >= 0) {
        v106 = (unsigned __int16 *)v101;
      }
      else {
        v106 = *(unsigned __int16 **)v101;
      }
      while ((unsigned __int16)p_p->__r_.__value_.__s.__data_[0] == *v106)
      {
        ++v106;
        p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
        if (!--v102) {
          goto LABEL_223;
        }
      }
      goto LABEL_240;
    }
LABEL_223:
    if (v72 != 105 && v72 != 229)
    {
      char v107 = v70 ^ 1;
      if (v72 == 116) {
        char v107 = 1;
      }
      if (v107)
      {
LABEL_240:
        if ((*(char *)(a4 + 23) & 0x80000000) == 0)
        {
LABEL_241:
          std::basic_string<char16_t> v120 = *(std::basic_string<char16_t> *)a4;
          goto LABEL_245;
        }
        std::basic_string<char16_t>::size_type v110 = *(void *)(a4 + 8);
LABEL_244:
        std::basic_string<char16_t>::__init_copy_ctor_external(&v120, *(const std::basic_string<char16_t>::value_type **)a4, v110);
        goto LABEL_245;
      }
    }
    if (*(char *)(a4 + 23) >= 0) {
      uint64_t v108 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      uint64_t v108 = *(void *)(a4 + 8);
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v120, v108 + 1);
    if ((v120.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v91 = &v120;
    }
    else {
      v91 = (std::basic_string<char16_t> *)v120.__r_.__value_.__r.__words[0];
    }
    uint64_t v92 = 2 * v108;
    if (v108)
    {
      if (*(char *)(a4 + 23) >= 0) {
        int v109 = (const void *)a4;
      }
      else {
        int v109 = *(const void **)a4;
      }
      memmove(v91, v109, 2 * v108);
    }
    int v94 = 116;
LABEL_196:
    *(_DWORD *)((char *)&v91->__r_.__value_.__l.__data_ + v92) = v94;
    goto LABEL_245;
  }
  int v116 = a6;
  uint64_t v117 = v11;
  long long v118 = a1;
  uint64_t v37 = v121;
  uint64_t v38 = v122;
  if (v121 == v122)
  {
    char v39 = 0;
    uint64_t v119 = 0;
  }
  else
  {
    uint64_t v119 = 0;
    char v39 = 0;
    do
    {
      if (*(char *)(v37 + 23) < 0)
      {
        uint64_t v41 = *(void *)v37;
        uint64_t v40 = *(void *)(v37 + 8);
      }
      else
      {
        LODWORD(v40) = *(unsigned __int8 *)(v37 + 23);
        uint64_t v41 = v37;
      }
      uint64_t v42 = a2[7];
      __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v42 + 248), v41, v40);
      InflectionPattern = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)v139, v42 + 8, KeyId);
      *(_OWORD *)std::basic_string<char16_t> v134 = *(_OWORD *)v139;
      *(_OWORD *)&v134[16] = *(_OWORD *)&v139[16];
      long long v135 = v140;
      char v136 = 1;
      uint64_t v45 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(InflectionPattern);
      if (morphun::dictionary::Inflector_InflectionPattern::containsPartsOfSpeech(*(uint64_t *)&v134[8], *(void *)(v135 + 184), v45))
      {
        memset(v139, 0, 24);
        std::basic_string<char16_t> v46 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (long long *)&v128);
        int v47 = v46;
        *(void *)&v139[8] = v46;
        std::basic_string<char16_t>::size_type v48 = HIBYTE(v127.__r_.__value_.__r.__words[2]);
        if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v48 = v127.__r_.__value_.__l.__size_;
        }
        if (v48)
        {
          if ((unint64_t)v46 >= *(void *)&v139[16])
          {
            std::basic_string<char16_t> v46 = (std::basic_string<char16_t> *)std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (long long *)&v127);
          }
          else
          {
            if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(v46, v127.__r_.__value_.__l.__data_, v127.__r_.__value_.__l.__size_);
            }
            else
            {
              long long v49 = *(_OWORD *)&v127.__r_.__value_.__l.__data_;
              v46->__r_.__value_.__r.__words[2] = v127.__r_.__value_.__r.__words[2];
              *(_OWORD *)&v46->__r_.__value_.__l.__data_ = v49;
            }
            std::basic_string<char16_t> v46 = v47 + 1;
          }
          *(void *)&v139[8] = v46;
        }
        int v50 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
        std::basic_string<char16_t>::size_type v51 = __s.__r_.__value_.__l.__size_;
        if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v52 = HIBYTE(__s.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v52 = __s.__r_.__value_.__l.__size_;
        }
        if (v52)
        {
          uint64_t v53 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v46);
          uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
          int v55 = (char)v54;
          if ((v54 & 0x80u) != 0) {
            uint64_t v54 = *(void *)(v53 + 8);
          }
          if (v52 == v54)
          {
            if (v55 >= 0) {
              char v56 = (unsigned __int16 *)v53;
            }
            else {
              char v56 = *(unsigned __int16 **)v53;
            }
            p_s = (std::basic_string<char16_t> *)__s.__r_.__value_.__r.__words[0];
            if (v50 >= 0) {
              p_s = &__s;
            }
            while (*v56 == (unsigned __int16)p_s->__r_.__value_.__s.__data_[0])
            {
              p_s = (std::basic_string<char16_t> *)((char *)p_s + 2);
              ++v56;
              if (!--v52) {
                goto LABEL_94;
              }
            }
          }
          uint64_t v58 = *(void *)&v139[8];
          if (*(void *)&v139[8] >= *(void *)&v139[16])
          {
            uint64_t v59 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (long long *)&__s);
          }
          else
          {
            if (v50 < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)&v139[8], __s.__r_.__value_.__l.__data_, v51);
            }
            else
            {
              **(_OWORD **)&v139[8] = *(_OWORD *)&__s.__r_.__value_.__l.__data_;
              *(void *)(v58 + 16) = *((void *)&__s.__r_.__value_.__l + 2);
            }
            uint64_t v59 = v58 + 24;
          }
          *(void *)&v139[8] = v59;
        }
LABEL_94:
        std::basic_string<char16_t>::size_type v60 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v60 = __p.__r_.__value_.__l.__size_;
        }
        if (v60)
        {
          uint64_t v61 = *(void *)&v139[8];
          if (*(void *)&v139[8] >= *(void *)&v139[16])
          {
            uint64_t v62 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)v139, (long long *)&__p);
          }
          else
          {
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)&v139[8], __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
            }
            else
            {
              **(_OWORD **)&v139[8] = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *(void *)(v61 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
            }
            uint64_t v62 = v61 + 24;
          }
          *(void *)&v139[8] = v62;
        }
        uint64_t v133 = 0;
        int v63 = *(char *)(a4 + 23);
        if (v63 >= 0) {
          long long v64 = (const UChar *)a4;
        }
        else {
          long long v64 = *(const UChar **)a4;
        }
        if (v63 >= 0) {
          uint64_t v65 = *(unsigned __int8 *)(a4 + 23);
        }
        else {
          uint64_t v65 = *(void *)(a4 + 8);
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[6], (uint64_t)&v133, v64, v65);
        uint64_t v132 = 0;
        morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2[6], &v132, (uint64_t *)v139);
        int v66 = *(char *)(a4 + 23);
        if (v66 >= 0) {
          uint64_t v67 = (char *)a4;
        }
        else {
          uint64_t v67 = *(char **)a4;
        }
        if (v66 >= 0) {
          unint64_t v68 = *(unsigned __int8 *)(a4 + 23);
        }
        else {
          unint64_t v68 = *(void *)(a4 + 8);
        }
        morphun::dictionary::Inflector_InflectionPattern::reinflect(&__dst, (uint64_t)v134, v133, v132, v67, v68);
        if (v39 < 0) {
          operator delete(v119);
        }
        uint64_t v119 = __dst;
        v141[0] = *(void *)v130;
        *(void *)((char *)v141 + 7) = *(void *)&v130[7];
        char v39 = v131;
        long long __dst = (void **)v139;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&__dst);
      }
      v37 += 24;
    }
    while (v37 != v38);
  }
  a1 = v118;
  v120.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v119;
  v120.__r_.__value_.__l.__size_ = v141[0];
  *(std::basic_string<char16_t>::size_type *)((char *)&v120.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v141 + 7);
  *((unsigned char *)&v120.__r_.__value_.__s + 23) = v39;
  uint64_t v11 = v117;
  a6 = v116;
LABEL_245:
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v137.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v138.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::size_type v111 = HIBYTE(v120.__r_.__value_.__r.__words[2]);
  if (a6)
  {
    if (!((v120.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? HIBYTE(v120.__r_.__value_.__r.__words[2])
         : v120.__r_.__value_.__l.__size_))
    {
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested((uint64_t)a1, a2[3], v11, a4);
      goto LABEL_268;
    }
  }
  if ((*((unsigned char *)&v120.__r_.__value_.__s + 23) & 0x80) == 0)
  {
    if (*((unsigned char *)&v120.__r_.__value_.__s + 23))
    {
      uint64_t v113 = &v120;
      goto LABEL_259;
    }
LABEL_264:
    if (*(char *)(a4 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)a4, *(void *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)a4;
      a1->__r_.__value_.__r.__words[2] = *(void *)(a4 + 16);
    }
    goto LABEL_268;
  }
  std::basic_string<char16_t>::size_type v111 = v120.__r_.__value_.__l.__size_;
  if (!v120.__r_.__value_.__l.__size_) {
    goto LABEL_264;
  }
  uint64_t v113 = (std::basic_string<char16_t> *)v120.__r_.__value_.__r.__words[0];
LABEL_259:
  uint64_t v114 = 2 * v111;
  do
  {
    if (v113->__r_.__value_.__s.__data_[0] == 39) {
      v113->__r_.__value_.__s.__data_[0] = 8217;
    }
    uint64_t v113 = (std::basic_string<char16_t> *)((char *)v113 + 2);
    v114 -= 2;
  }
  while (v114);
  *a1 = v120;
  memset(&v120, 0, sizeof(v120));
LABEL_268:
  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v120.__r_.__value_.__l.__data_);
  }
  *(void *)std::basic_string<char16_t> v134 = &v121;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v134);
  if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v123.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v127.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v128.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C5E9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a63 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v63 - 145) < 0) {
    operator delete(*(void **)(v63 - 168));
  }
  if (*(char *)(v63 - 201) < 0) {
    operator delete(*(void **)(v63 - 224));
  }
  if (*(char *)(v63 - 169) < 0) {
    operator delete(*(void **)(v63 - 192));
  }
  *(void *)(v63 - 224) = &a17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v63 - 224));
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  if (a52 < 0) {
    operator delete(a47);
  }
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::push_back(std::basic_string<char16_t> *this, std::basic_string<char16_t>::value_type __c)
{
  unint64_t v5 = this;
  if ((SHIBYTE(this->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (*((unsigned char *)&this->__r_.__value_.__s + 23) != 10)
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      *((unsigned char *)&this->__r_.__value_.__s + 23) = (*((unsigned char *)&this->__r_.__value_.__s + 23) + 1) & 0x7F;
      goto LABEL_8;
    }
    std::basic_string<char16_t>::size_type v6 = 10;
    goto LABEL_5;
  }
  std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v6 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  if (size == v6)
  {
LABEL_5:
    std::basic_string<char16_t>::__grow_by(this, v6, 1uLL, v6, v6, v2, v3);
    std::basic_string<char16_t>::size_type size = v6;
  }
  v5->__r_.__value_.__l.__size_ = size + 1;
  unint64_t v5 = (std::basic_string<char16_t> *)v5->__r_.__value_.__r.__words[0];
LABEL_8:
  uint64_t v8 = (std::basic_string<char16_t>::value_type *)((char *)v5 + 2 * size);
  *uint64_t v8 = __c;
  v8[1] = 0;
}

void virtual thunk to'morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *this)
{
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction((morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction((morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *)((char *)this + *(void *)(*(void *)this - 32)));
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction *this)
{
  *(void *)this = &unk_1F2A0C4B8;
  *((void *)this + 37) = &unk_1F2A0C510;
  *((void *)this + 11) = &unk_1F2A095F0;
  std::basic_string<char16_t>::size_type v2 = (void *)*((void *)this + 33);
  if (v2)
  {
    *((void *)this + 34) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 31);
  *((void *)this + 31) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 12) = &unk_1F2A0FEF8;
  uint64_t v4 = *((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
}

{
  uint64_t vars8;

  morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::~DaGrammarSynthesizer_DaDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  memset(&v17, 0, sizeof(v17));
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5 == *(void *)(a2 + 16))
  {
    std::basic_string<char16_t>::size_type size = 0;
    unsigned int v7 = 0;
  }
  else
  {
    std::basic_string<char16_t>::size_type v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
    std::basic_string<char16_t>::operator=(&v17, v6);
    unsigned int v7 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type size = v17.__r_.__value_.__l.__size_;
  }
  if ((v7 & 0x80u) == 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = size;
  }
  if (v9)
  {
    if (!*(void *)(a3 + 16)) {
      goto LABEL_21;
    }
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = &v17;
    }
    else {
      unint64_t v10 = (std::basic_string<char16_t> *)v17.__r_.__value_.__r.__words[0];
    }
    if (v10->__r_.__value_.__s.__data_[v9 - 1] == 46)
    {
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::makeGenitiveWhenRequested((uint64_t)&v16, a1[3], a3, (uint64_t)&v17);
    }
    else
    {
      uint64_t v11 = a1[6];
      v16.__r_.__value_.__r.__words[0] = 0;
      if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)&v16, (const UChar *)v10, v9))
      {
        uint64_t v13 = a1[8];
        if (!v13)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        uint64_t v14 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v13 + 24))(v13, &v17);
        npc<morphun::TokenChain>(v14);
        npc<morphun::TokenChain>(v14);
        morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(&v16, a3, v14, (uint64_t)a1 + *(void *)(*a1 - 64));
        if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v17.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> v17 = v16;
        (*(void (**)(uint64_t))(*(void *)v14 + 16))(v14);
LABEL_21:
        operator new();
      }
      morphun::grammar::synthesis::DaGrammarSynthesizer_DaDisplayFunction::inflectWord(&v16, a1, a3, (uint64_t)&v17, (uint64_t)&v17, 1, 0);
    }
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> v17 = v16;
    goto LABEL_21;
  }
  if ((v7 & 0x80) != 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1D2C5EFB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  __cxa_free_exception(v18);
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C5F094(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(void)::POSSESSIVE_ADJECTIVE_COUNT_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2C5F170(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_1D2C5F1F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON(void)::POSSESSIVE_ADJECTIVE_PERSON_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2C5F29C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t result = morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(void)::WORDSWITHPOSSESSIVEWITHOUTARTICLE_;
  if (!morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(void)::WORDSWITHPOSSESSIVEWITHOUTARTICLE_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C5F3E0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::ItGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  __dst[24] = *(void **)MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"defArticle");
  operator new();
}

void sub_1D2C616C4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v2);
  MEMORY[0x1D942B8B0](v1, 0x10F3C4076D9A6D4);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset(unsigned __int16 *a1)
{
  if (*((char *)a1 + 23) < 0)
  {
    if (*((void *)a1 + 1) < 2uLL) {
      return 0;
    }
    std::basic_string<char16_t>::size_type v2 = *(unsigned __int16 **)a1;
  }
  else
  {
    std::basic_string<char16_t>::size_type v2 = a1;
    if (*((unsigned __int8 *)a1 + 23) < 2u) {
      return 0;
    }
  }
  int v4 = MEMORY[0x1D942BD20](*v2);
  if (*((char *)a1 + 23) >= 0) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = *(unsigned __int16 **)a1;
  }
  std::basic_string<char16_t>::size_type v6 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D942BD20](v5[1]);
  unsigned int v7 = v6;
  if (v4 == 112) {
    return v6 == 115 || v6 == 110;
  }
  BOOL v9 = v6 == 110 && v4 == 103;
  if (v9 || (v4 - 120) < 3) {
    return 1;
  }
  if (v4 != 115) {
    return 0;
  }
  unint64_t v10 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v6);
  return MEMORY[0x1D942C150](*v10, v7) == 0;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithVowelForElision(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    if (*(void *)(a1 + 8) >= 2uLL)
    {
      std::basic_string<char16_t>::size_type v2 = *(unsigned __int16 **)a1;
      goto LABEL_7;
    }
    return 0;
  }
  std::basic_string<char16_t>::size_type v2 = (unsigned __int16 *)a1;
  if (*(unsigned __int8 *)(a1 + 23) < 2u) {
    return 0;
  }
LABEL_7:
  int v4 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D942BD20](*v2);
  if (v4 == 104)
  {
    unsigned int v7 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v4);
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v8 = a1;
    }
    else {
      uint64_t v8 = *(void *)a1;
    }
    return MEMORY[0x1D942C150](*v7, *(unsigned __int16 *)(v8 + 2)) != 0;
  }
  else if (v4 == 105)
  {
    uint64_t v5 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v4);
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = *(void *)a1;
    }
    return MEMORY[0x1D942C150](*v5, *(unsigned __int16 *)(v6 + 2)) == 0;
  }
  else
  {
    BOOL v9 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v4);
    return morphun::dictionary::PhraseProperties::isStartsWithVowel(v9, a1);
  }
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t result = morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(void)::POSSESSIVE_ADJECTIVE_MAP_;
  if (!morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(void)::POSSESSIVE_ADJECTIVE_MAP_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C62130(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t *std::map<int,std::u16string_view>::map[abi:ne180100](uint64_t *a1, int *a2, uint64_t a3)
{
  a1[1] = 0;
  int v4 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    do
    {
      std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_hint_unique_key_args<int,std::pair<int const,std::u16string_view> const&>(a1, v4, *a2, (uint64_t)a2);
      a2 += 6;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1D2C621EC(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_hint_unique_key_args<int,std::pair<int const,std::u16string_view> const&>(uint64_t *result, uint64_t *a2, int a3, uint64_t a4)
{
  uint64_t v5 = (uint64_t **)result;
  uint64_t v6 = (uint64_t **)(result + 1);
  if (result + 1 == a2 || (int v7 = *((_DWORD *)a2 + 8), v7 > a3))
  {
    uint64_t v8 = (uint64_t *)*a2;
    if ((uint64_t *)*result == a2)
    {
      unint64_t v10 = a2;
LABEL_16:
      if (v8) {
        uint64_t v13 = (uint64_t **)v10;
      }
      else {
        uint64_t v13 = (uint64_t **)a2;
      }
      if (v8) {
        uint64_t v11 = (uint64_t **)(v10 + 1);
      }
      else {
        uint64_t v11 = (uint64_t **)a2;
      }
      goto LABEL_22;
    }
    if (v8)
    {
      BOOL v9 = (uint64_t *)*a2;
      do
      {
        unint64_t v10 = v9;
        BOOL v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      char v15 = a2;
      do
      {
        unint64_t v10 = (uint64_t *)v15[2];
        BOOL v16 = *v10 == (void)v15;
        char v15 = v10;
      }
      while (v16);
    }
    if (*((_DWORD *)v10 + 8) < a3) {
      goto LABEL_16;
    }
    std::basic_string<char16_t> v17 = *v6;
    if (*v6)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v13 = (uint64_t **)v17;
          int v18 = *((_DWORD *)v17 + 8);
          if (v18 <= a3) {
            break;
          }
          std::basic_string<char16_t> v17 = *v13;
          uint64_t v6 = v13;
          if (!*v13) {
            goto LABEL_44;
          }
        }
        if (v18 >= a3) {
          break;
        }
        uint64_t v6 = v13 + 1;
        std::basic_string<char16_t> v17 = v13[1];
        if (!v17) {
          goto LABEL_44;
        }
      }
LABEL_47:
      uint64_t v11 = v6;
      goto LABEL_22;
    }
  }
  else
  {
    if (v7 >= a3) {
      return result;
    }
    uint64_t v11 = (uint64_t **)(a2 + 1);
    uint64_t v12 = (uint64_t *)a2[1];
    if (v12)
    {
      do
      {
        uint64_t v11 = (uint64_t **)v12;
        uint64_t v12 = (uint64_t *)*v12;
        uint64_t v13 = v11;
        uint64_t v14 = v11;
      }
      while (v12);
    }
    else
    {
      uint64_t v14 = (uint64_t **)a2;
      do
      {
        int v19 = (uint64_t *)v14;
        uint64_t v14 = (uint64_t **)v14[2];
      }
      while (*v14 != v19);
      uint64_t v13 = (uint64_t **)a2;
    }
    if (v14 == v6 || *((_DWORD *)v14 + 8) > a3)
    {
LABEL_22:
      uint64_t v6 = v11;
      if (*v11) {
        return result;
      }
      goto LABEL_44;
    }
    int v20 = *v6;
    if (*v6)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v13 = (uint64_t **)v20;
          int v21 = *((_DWORD *)v20 + 8);
          if (v21 <= a3) {
            break;
          }
          int v20 = *v13;
          uint64_t v6 = v13;
          if (!*v13) {
            goto LABEL_44;
          }
        }
        if (v21 >= a3) {
          goto LABEL_47;
        }
        uint64_t v6 = v13 + 1;
        int v20 = v13[1];
        if (!v20) {
          goto LABEL_44;
        }
      }
    }
  }
  uint64_t v13 = (uint64_t **)(result + 1);
LABEL_44:
  uint64_t v22 = operator new(0x38uLL);
  v22[2] = *(_OWORD *)a4;
  *((void *)v22 + 6) = *(void *)(a4 + 16);

  return std::__tree<std::u16string_view>::__insert_node_at(v5, (uint64_t)v13, v6, (uint64_t *)v22);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjective(morphun::grammar::synthesis::ItGrammarSynthesizer *a1, char a2)
{
  char v3 = (char)a1;
  uint64_t v4 = morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(a1);
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v5 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)(v4 + 8);
  uint64_t v6 = v7;
  if (!v7) {
    goto LABEL_11;
  }
  int v8 = v3 & 0xF | (16 * (a2 & 0xF));
  BOOL v9 = v5;
  do
  {
    int v10 = *(_DWORD *)(v6 + 32);
    BOOL v11 = v10 < v8;
    if (v10 >= v8) {
      uint64_t v12 = (uint64_t *)v6;
    }
    else {
      uint64_t v12 = (uint64_t *)(v6 + 8);
    }
    if (!v11) {
      BOOL v9 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)v6;
    }
    uint64_t v6 = *v12;
  }
  while (*v12);
  if (v9 == v5 || v8 < *((_DWORD *)v9 + 8)) {
LABEL_11:
  }
    BOOL v9 = v5;
  if (v9 == (morphun::grammar::synthesis::ItGrammarSynthesizer *)(morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_MAP(v5)
                                                                 + 8))
    return 0;
  else {
    return *((void *)v9 + 5);
  }
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(morphun::grammar::synthesis::ItGrammarSynthesizer *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t result = morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(void)::INFLECTED_POSSESIVE_ADJECTIVES_;
  if (!morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(void)::INFLECTED_POSSESIVE_ADJECTIVES_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C62728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19)
{
  for (uint64_t i = 112; i != -16; i -= 32)
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v20 + i));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a10);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a13);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a16);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a19);
  MEMORY[0x1D942B8B0](v19, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](uint64_t *a1, uint64_t a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = a2 + 32 * a3;
    do
    {
      std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::u16string_view> const&>(a1, v4, *(unsigned __int16 **)v5, *(void *)(v5 + 8), (_OWORD *)v5);
      v5 += 32;
    }
    while (v5 != v6);
  }
  return a1;
}

void sub_1D2C628A8(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100](uint64_t *a1, void *a2)
{
  a1[1] = 0;
  uint64_t v3 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  uint64_t v4 = a2 + 1;
  uint64_t v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::u16string_view> const&>(a1, v3, (unsigned __int16 *)v5[4], v5[5], (_OWORD *)v5 + 2);
      uint64_t v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          uint64_t v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          uint64_t v5 = v7;
        }
        while (!v8);
      }
      uint64_t v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1D2C62954(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t **std::map<int,std::map<std::u16string_view,std::u16string_view>>::map[abi:ne180100](uint64_t **a1, int *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (void **)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = 0;
    uint64_t v7 = &a2[8 * a3];
    BOOL v8 = (void **)(a1 + 1);
    while (1)
    {
      BOOL v9 = v4;
      if (v8 == v4) {
        goto LABEL_9;
      }
      int v10 = v6;
      BOOL v11 = v4;
      if (v6)
      {
        do
        {
          BOOL v9 = v10;
          int v10 = (void **)v10[1];
        }
        while (v10);
      }
      else
      {
        do
        {
          BOOL v9 = (void **)v11[2];
          BOOL v12 = *v9 == v11;
          BOOL v11 = v9;
        }
        while (v12);
      }
      int v13 = *v5;
      if (*((_DWORD *)v9 + 8) < *v5)
      {
LABEL_9:
        uint64_t v14 = v6 ? v9 : v4;
        char v15 = v6 ? v9 + 1 : v4;
      }
      else
      {
        uint64_t v14 = v4;
        char v15 = v4;
        if (v6)
        {
          char v15 = v4;
          while (1)
          {
            while (1)
            {
              uint64_t v14 = v6;
              int v18 = *((_DWORD *)v6 + 8);
              if (v13 >= v18) {
                break;
              }
              uint64_t v6 = (void **)*v14;
              char v15 = v14;
              if (!*v14) {
                goto LABEL_16;
              }
            }
            if (v18 >= v13) {
              break;
            }
            char v15 = v14 + 1;
            uint64_t v6 = (void **)v14[1];
            if (!v6) {
              goto LABEL_16;
            }
          }
        }
      }
      if (!*v15)
      {
LABEL_16:
        BOOL v16 = operator new(0x40uLL);
        *((_DWORD *)v16 + 8) = *v5;
        std::map<std::u16string_view,std::u16string_view>::map[abi:ne180100]((uint64_t *)v16 + 5, (void *)v5 + 1);
        *(void *)BOOL v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v14;
        *char v15 = v16;
        std::basic_string<char16_t> v17 = (uint64_t *)**a1;
        if (v17)
        {
          *a1 = v17;
          BOOL v16 = *v15;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 8;
      if (v5 == v7) {
        break;
      }
      BOOL v8 = (void **)*a1;
      uint64_t v6 = (void **)a1[1];
    }
  }
  return a1;
}

void sub_1D2C62AE0(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(*a1);
    std::__tree<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::__map_value_compare<int,std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::map<std::u16string_view,std::u16string_view>>>>::destroy(a1[1]);
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy((void *)a1[6]);
    operator delete(a1);
  }
}

uint64_t *std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::u16string_view> const&>(uint64_t *result, uint64_t *a2, unsigned __int16 *a3, unint64_t a4, _OWORD *a5)
{
  uint64_t v6 = (uint64_t **)result;
  if (result + 1 == a2) {
    goto LABEL_11;
  }
  unint64_t v7 = a2[5];
  if (v7 >= a4) {
    unint64_t v8 = a4;
  }
  else {
    unint64_t v8 = a2[5];
  }
  if (v8)
  {
    BOOL v9 = (unsigned __int16 *)a2[4];
    unint64_t v10 = v8;
    BOOL v11 = a3;
    do
    {
      unsigned int v12 = *v11;
      unsigned int v13 = *v9;
      if (v12 < v13) {
        goto LABEL_11;
      }
      if (v13 < v12) {
        goto LABEL_16;
      }
      ++v11;
      ++v9;
    }
    while (--v10);
  }
  if (v7 > a4)
  {
LABEL_11:
    uint64_t v14 = *a2;
    if ((uint64_t *)*result == a2)
    {
      BOOL v16 = a2;
      goto LABEL_38;
    }
    if (v14)
    {
      char v15 = (uint64_t *)*a2;
      do
      {
        BOOL v16 = v15;
        char v15 = (uint64_t *)v15[1];
      }
      while (v15);
    }
    else
    {
      int v24 = a2;
      do
      {
        BOOL v16 = (uint64_t *)v24[2];
        BOOL v25 = *v16 == (void)v24;
        int v24 = v16;
      }
      while (v25);
    }
    unint64_t v26 = v16[5];
    if (a4 >= v26) {
      unint64_t v27 = v16[5];
    }
    else {
      unint64_t v27 = a4;
    }
    if (v27)
    {
      BOOL v28 = (unsigned __int16 *)v16[4];
      int v29 = a3;
      do
      {
        unsigned int v30 = *v28;
        unsigned int v31 = *v29;
        if (v30 < v31) {
          goto LABEL_38;
        }
        if (v31 < v30) {
          goto LABEL_58;
        }
        ++v28;
        ++v29;
      }
      while (--v27);
    }
    if (v26 < a4)
    {
LABEL_38:
      if (v14)
      {
        uint64_t v42 = v16;
        uint64_t v23 = v16 + 1;
      }
      else
      {
        uint64_t v42 = a2;
        uint64_t v23 = a2;
      }
      goto LABEL_59;
    }
LABEL_58:
    uint64_t result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)result, &v42, a3, a4);
    uint64_t v23 = result;
    goto LABEL_59;
  }
LABEL_16:
  if (v8)
  {
    std::basic_string<char16_t> v17 = (unsigned __int16 *)a2[4];
    int v18 = a3;
    while (1)
    {
      unsigned int v19 = *v17;
      unsigned int v20 = *v18;
      if (v19 < v20) {
        break;
      }
      if (v20 < v19) {
        goto LABEL_41;
      }
      ++v17;
      ++v18;
      if (!--v8) {
        goto LABEL_21;
      }
    }
LABEL_22:
    uint64_t v21 = a2[1];
    if (v21)
    {
      uint64_t v22 = (uint64_t *)a2[1];
      do
      {
        uint64_t v23 = v22;
        uint64_t v22 = (uint64_t *)*v22;
      }
      while (v22);
    }
    else
    {
      uint64_t v32 = a2;
      do
      {
        uint64_t v23 = (uint64_t *)v32[2];
        BOOL v25 = *v23 == (void)v32;
        uint64_t v32 = v23;
      }
      while (!v25);
    }
    if (v23 != result + 1)
    {
      unint64_t v33 = v23[5];
      if (v33 >= a4) {
        unint64_t v34 = a4;
      }
      else {
        unint64_t v34 = v23[5];
      }
      if (v34)
      {
        std::basic_string<char16_t>::size_type v35 = (unsigned __int16 *)v23[4];
        unint64_t v36 = a3;
        while (1)
        {
          unsigned int v37 = *v36;
          unsigned int v38 = *v35;
          if (v37 < v38) {
            break;
          }
          if (v38 < v37) {
            goto LABEL_58;
          }
          ++v36;
          ++v35;
          if (!--v34) {
            goto LABEL_55;
          }
        }
      }
      else
      {
LABEL_55:
        if (v33 <= a4) {
          goto LABEL_58;
        }
      }
    }
    if (v21)
    {
      uint64_t v42 = v23;
    }
    else
    {
      uint64_t v42 = a2;
      uint64_t v23 = a2 + 1;
    }
LABEL_59:
    if (*v23) {
      return result;
    }
    goto LABEL_60;
  }
LABEL_21:
  if (v7 < a4) {
    goto LABEL_22;
  }
LABEL_41:
  uint64_t v41 = a2;
  uint64_t v42 = a2;
  uint64_t v23 = (uint64_t *)&v41;
  if (a2) {
    return result;
  }
LABEL_60:
  char v39 = (uint64_t *)operator new(0x40uLL);
  long long v40 = a5[1];
  *((_OWORD *)v39 + 2) = *a5;
  *((_OWORD *)v39 + 3) = v40;
  return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v42, (uint64_t **)v23, v39);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getInflectedPossessiveAdjectiveValue(unsigned __int16 *a1, unint64_t a2, int a3, int a4)
{
  if (!a3) {
    return 0;
  }
  char v5 = a4;
  uint64_t result = 0;
  if (a4)
  {
    char v8 = a3;
    uint64_t v9 = morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(0);
    uint64_t v12 = *(void *)(v9 + 8);
    unint64_t v10 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)(v9 + 8);
    uint64_t v11 = v12;
    if (!v12) {
      goto LABEL_13;
    }
    int v13 = v8 & 0xF | (16 * (v5 & 0xF));
    uint64_t v14 = v10;
    do
    {
      int v15 = *(_DWORD *)(v11 + 32);
      BOOL v16 = v15 < v13;
      if (v15 >= v13) {
        std::basic_string<char16_t> v17 = (uint64_t *)v11;
      }
      else {
        std::basic_string<char16_t> v17 = (uint64_t *)(v11 + 8);
      }
      if (!v16) {
        uint64_t v14 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)v11;
      }
      uint64_t v11 = *v17;
    }
    while (*v17);
    if (v14 == v10 || v13 < *((_DWORD *)v14 + 8)) {
LABEL_13:
    }
      uint64_t v14 = v10;
    if (v14 == (morphun::grammar::synthesis::ItGrammarSynthesizer *)(morphun::grammar::synthesis::ItGrammarSynthesizer::INFLECTED_POSSESIVE_ADJECTIVES(v10)
                                                                    + 8))
      return 0;
    int v18 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>((uint64_t)v14 + 40, a1, a2);
    if ((void *)((char *)v14 + 48) == v18) {
      return 0;
    }
    else {
      return v18[6];
    }
  }
  return result;
}

void *std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  char v5 = *(void **)(a1 + 8);
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = v5;
  if (!v5) {
    return v3;
  }
  uint64_t v6 = v3;
  do
  {
    unint64_t v7 = v4[5];
    if (a3 >= v7) {
      unint64_t v8 = v4[5];
    }
    else {
      unint64_t v8 = a3;
    }
    if (v8)
    {
      uint64_t v9 = (unsigned __int16 *)v4[4];
      unint64_t v10 = a2;
      while (1)
      {
        unsigned int v11 = *v9;
        unsigned int v12 = *v10;
        if (v11 < v12)
        {
          ++v4;
          goto LABEL_16;
        }
        if (v12 < v11) {
          break;
        }
        ++v9;
        ++v10;
        if (!--v8) {
          goto LABEL_11;
        }
      }
      uint64_t v6 = v4;
    }
    else
    {
LABEL_11:
      if (v7 < a3) {
        ++v4;
      }
      else {
        uint64_t v6 = v4;
      }
    }
LABEL_16:
    uint64_t v4 = (void *)*v4;
  }
  while (v4);
  if (v3 == v6) {
    return v3;
  }
  unint64_t v13 = v6[5];
  if (v13 >= a3) {
    unint64_t v14 = a3;
  }
  else {
    unint64_t v14 = v6[5];
  }
  if (v14)
  {
    int v15 = (unsigned __int16 *)v6[4];
    do
    {
      unsigned int v16 = *a2;
      unsigned int v17 = *v15;
      if (v16 < v17) {
        return v3;
      }
      if (v17 < v16) {
        return v6;
      }
      ++a2;
      ++v15;
    }
    while (--v14);
  }
  if (v13 > a3) {
    return v3;
  }
  return v6;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C63148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      unsigned int v12 = (char **)v4;
      unint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      unint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        unsigned int v12 = (char **)v8;
LABEL_19:
        unsigned int v16 = (char *)operator new(0x40uLL);
        unsigned int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)unsigned int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        unsigned __int16 *v13 = v16;
        unsigned int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          unsigned int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    unsigned int v12 = (char **)v4;
    unint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          unsigned int v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          unint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        unint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C63370(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C633E8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C635DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      unsigned int v12 = (char **)v4;
      unint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      unint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        unsigned int v12 = (char **)v8;
LABEL_19:
        unsigned int v16 = (char *)operator new(0x40uLL);
        unsigned int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)unsigned int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        unsigned __int16 *v13 = v16;
        unsigned int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          unsigned int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    unsigned int v12 = (char **)v4;
    unint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          unsigned int v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          unint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        unint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C63804(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectiveCount>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C6387C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C63A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      unsigned int v12 = (char **)v4;
      unint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      unint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        unsigned int v12 = (char **)v8;
LABEL_19:
        unsigned int v16 = (char *)operator new(0x40uLL);
        unsigned int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)unsigned int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        unsigned __int16 *v13 = v16;
        unsigned int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          unsigned int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    unsigned int v12 = (char **)v4;
    unint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          unsigned int v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          unint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        unint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C63C98(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C63D10(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>>(morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C63F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  while (1)
  {
    if (*((char *)v10 - 9) < 0) {
      operator delete((void *)*(v10 - 4));
    }
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D942B8B0](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      unsigned int v12 = (char **)v4;
      unint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      unint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        unsigned int v12 = (char **)v8;
LABEL_19:
        unsigned int v16 = (char *)operator new(0x40uLL);
        unsigned int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)unsigned int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        unsigned __int16 *v13 = v16;
        unsigned int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          unsigned int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    unsigned int v12 = (char **)v4;
    unint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          unsigned int v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          unint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        unint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C6417C(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ItGrammarSynthesizer::PossessiveAdjectivePerson>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C641F4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_GenderLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine(a1, a2, __p);
  uint64_t v6 = (void *)HIBYTE(v15);
  int v7 = SHIBYTE(v15);
  if (v15 < 0) {
    uint64_t v6 = __p[1];
  }
  if (v6)
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    a3->__r_.__value_.__r.__words[2] = v15;
    __p[1] = 0;
    int64_t v15 = 0;
    __p[0] = 0;
  }
  else
  {
    uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
    int v9 = (char)v8;
    if ((v8 & 0x80u) != 0) {
      uint64_t v8 = *(void *)(a2 + 8);
    }
    if (v8
      && (v9 >= 0 ? (uint64_t v10 = a2) : (uint64_t v10 = *(void *)a2),
          (int v11 = *(unsigned __int16 *)(v10 + 2 * v8 - 2), v11 == 1514) || v11 == 1492))
    {
      uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v5);
    }
    else
    {
      uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v5);
    }
    if (*(char *)(v12 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a3, *(const std::basic_string<char16_t>::value_type **)v12, *(void *)(v12 + 8));
    }
    else
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v12;
      a3->__r_.__value_.__r.__words[2] = *(void *)(v12 + 16);
    }
    if (v7 < 0)
    {
      unint64_t v13 = __p[0];
      operator delete(v13);
    }
  }
}

void sub_1D2C64314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (v10 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_GenderLookupFunction::~HeGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::HeGrammarSynthesizer_GenderLookupFunction *this)
{
  *(void *)this = &unk_1F29FA650;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &unk_1F29FA650;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

uint64_t morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::getDisplayValue(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)&long long v108 = *MEMORY[0x1E4F143B8];
  uint64_t TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(void *)(a2 + 8), *(void *)(a2 + 16), a3);
  uint64_t v8 = TheBestDisplayValue;
  if (!TheBestDisplayValue) {
    return v8;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v90, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    v90.__r_.__value_.__r.__words[2] = *(void *)(v9 + 16);
    *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v10;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(v90.__r_.__value_.__r.__words[2]);
  if ((v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v90.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v89, v8, a3);
    long long v85 = *(_OWORD *)(a1 + 8);
    uint64_t v12 = operator new(0x10uLL);
    _OWORD *v12 = v85;
    BOOL hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v12, (uint64_t)(v12 + 1));
    operator delete(v12);
    if (!hasAnyFeatures) {
      goto LABEL_216;
    }
    uint64_t v88 = 0;
    if ((v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v14 = &v90;
    }
    else {
      uint64_t v14 = (std::basic_string<char16_t> *)v90.__r_.__value_.__r.__words[0];
    }
    if ((v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v15 = HIBYTE(v90.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v15 = v90.__r_.__value_.__l.__size_;
    }
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v88, (const UChar *)v14, v15))
    {
      unsigned int v16 = (v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? &v90
          : (std::basic_string<char16_t> *)v90.__r_.__value_.__r.__words[0];
      unint64_t v17 = (v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? HIBYTE(v90.__r_.__value_.__r.__words[2])
          : v90.__r_.__value_.__l.__size_;
      morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__str, (uint64_t *)a1, v16, v17, a3, 0);
      if (LOBYTE(v106.__r_.__value_.__l.__data_))
      {
        std::basic_string<char16_t>::operator=(&v90, &__str);
        if (LOBYTE(v106.__r_.__value_.__l.__data_))
        {
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
        }
LABEL_216:
        operator new();
      }
    }
    uint64_t v18 = *(void *)(a1 + 128);
    if (!v18)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    uint64_t v19 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v18 + 24))(v18, &v90);
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)&v92, (const morphun::TokenChain *)v19);
    unsigned int v20 = v92;
    uint64_t v21 = v93;
    switch(0xAAAAAAAAAAAAAAABLL * (((char *)v93 - (char *)v92) >> 3))
    {
      case 0uLL:
        memset(&v94, 0, sizeof(v94));
        memset(&__str, 0, sizeof(__str));
        char v95 = 1;
        __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
        p_p = &__p;
        goto LABEL_87;
      case 1uLL:
        if (*((char *)v92 + 23) < 0)
        {
          BOOL v28 = *(long long **)v92;
          unint64_t v27 = *((void *)v92 + 1);
        }
        else
        {
          unint64_t v27 = *((unsigned __int8 *)v92 + 23);
          BOOL v28 = v92;
        }
        morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__str, (uint64_t *)a1, v28, v27, a3, a4);
        if (!LOBYTE(v106.__r_.__value_.__l.__data_)) {
          goto LABEL_194;
        }
        int v44 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v102, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v102 = __str;
        }
        memset(&__p, 0, sizeof(__p));
        *(void *)&long long v96 = &__p;
        BYTE8(v96) = 0;
        __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
        __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
        __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[0] + 24;
        std::basic_string<char16_t>::size_type v52 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__p.__r_.__value_.__r.__words[2], (long long *)&v102, &v103, (std::basic_string<char16_t> *)__p.__r_.__value_.__l.__data_);
        v94.__r_.__value_.__r.__words[0] = __p.__r_.__value_.__r.__words[0];
        v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v52;
        v94.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
        memset(&__p, 0, sizeof(__p));
        char v95 = 1;
        *(void *)&long long v96 = &__p;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v96);
        if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v102.__r_.__value_.__l.__data_);
        }
        if ((v44 & 0x80000000) == 0) {
          goto LABEL_208;
        }
        uint64_t v53 = (void *)__str.__r_.__value_.__r.__words[0];
        goto LABEL_207;
      case 2uLL:
        *((void *)&v103 + 1) = 0;
        uint64_t v104 = 0;
        if (v93 == v92) {
          std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
        }
        if (*((char *)v92 + 23) < 0)
        {
          int v24 = *(UChar **)v92;
          std::basic_string<char16_t>::size_type v23 = *((void *)v92 + 1);
        }
        else
        {
          std::basic_string<char16_t>::size_type v23 = *((unsigned __int8 *)v92 + 23);
          int v24 = (UChar *)v92;
        }
        if (*((char *)v92 + 47) < 0)
        {
          uint64_t v45 = (UChar *)*((void *)v92 + 3);
          unint64_t v46 = *((void *)v92 + 4);
        }
        else
        {
          uint64_t v45 = (UChar *)v92 + 12;
          unint64_t v46 = *((unsigned __int8 *)v92 + 47);
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v103 + 8, v24, v23);
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v104, v45, v46);
        if (!*((void *)&v103 + 1) || !v104)
        {
          if (a4) {
            goto LABEL_193;
          }
          goto LABEL_194;
        }
        uint64_t v47 = *(void *)(a1 + 152);
        uint64_t v48 = v47 & *((void *)&v103 + 1);
        if ((v47 & *((void *)&v103 + 1)) != 0)
        {
          uint64_t v49 = *(void *)(a1 + 176);
          if ((v49 & *((void *)&v103 + 1)) == 0 && (v49 & v104) != 0) {
            goto LABEL_193;
          }
        }
        uint64_t v50 = v47 & v104;
        if ((*(void *)(a1 + 168) & *((void *)&v103 + 1)) != 0 && v50)
        {
          morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v45, v46, a3, a4);
          if (v101)
          {
            if (v23 > 0x7FFFFFFFFFFFFFF7) {
              std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
            }
            if (v23 >= 0xB)
            {
              uint64_t v69 = (v23 & 0xFFFFFFFFFFFFFFFCLL) + 4;
              if ((v23 | 3) != 0xB) {
                uint64_t v69 = v23 | 3;
              }
              p_str = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v69 + 1);
              __str.__r_.__value_.__l.__size_ = v23;
              __str.__r_.__value_.__r.__words[2] = v70 | 0x8000000000000000;
              __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_str;
            }
            else
            {
              *((unsigned char *)&__str.__r_.__value_.__s + 23) = v23;
              p_str = &__str;
              if (!v23)
              {
LABEL_159:
                p_str[v23] = 0;
                int v56 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                  std::basic_string<char16_t>::__init_copy_ctor_external(&v106, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
                }
                else {
                  std::basic_string<char16_t> v106 = __p;
                }
                memset(&v102, 0, sizeof(v102));
                *(void *)&long long v96 = &v102;
                BYTE8(v96) = 0;
                v102.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
                v102.__r_.__value_.__l.__size_ = v102.__r_.__value_.__r.__words[0];
                v102.__r_.__value_.__r.__words[2] = v102.__r_.__value_.__r.__words[0] + 48;
                char v71 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v102.__r_.__value_.__r.__words[2], (long long *)&__str, (long long *)&v107, (std::basic_string<char16_t> *)v102.__r_.__value_.__l.__data_);
                v94.__r_.__value_.__r.__words[0] = v102.__r_.__value_.__r.__words[0];
                v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v71;
                v94.__r_.__value_.__r.__words[2] = v102.__r_.__value_.__r.__words[2];
                memset(&v102, 0, sizeof(v102));
                char v95 = 1;
                *(void *)&long long v96 = &v102;
                std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v96);
                for (uint64_t i = 0; i != -6; i -= 3)
                {
                  if (SHIBYTE(v106.__r_.__value_.__r.__words[i + 2]) < 0) {
                    operator delete(*(void **)((char *)&__str + i * 8 + 24));
                  }
                }
                goto LABEL_205;
              }
            }
            memmove(p_str, v24, 2 * v23);
            goto LABEL_159;
          }
LABEL_192:
          if (a4)
          {
LABEL_193:
            memset(&v94, 0, sizeof(v94));
            std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v94, v92, v93, 0xAAAAAAAAAAAAAAABLL * (((char *)v93 - (char *)v92) >> 3));
            char v95 = 1;
            goto LABEL_208;
          }
LABEL_194:
          LOBYTE(v94.__r_.__value_.__l.__data_) = 0;
          char v95 = 0;
          goto LABEL_208;
        }
        uint64_t v54 = *(void *)(a1 + 176);
        uint64_t v55 = *(void *)(a1 + 160) & *((void *)&v103 + 1);
        if ((v54 & *((void *)&v103 + 1)) == 0 || v55)
        {
          if (v48) {
            BOOL v66 = v50 == 0;
          }
          else {
            BOOL v66 = 1;
          }
          char v67 = v66;
          BOOL v68 = (v54 & v104) == 0 || v55 == 0;
          if (v68 && (v67 & 1) != 0) {
            goto LABEL_192;
          }
        }
        else
        {
          if (((v54 | v47) & v104) != 0)
          {
            morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v24, v23, a3, a4);
            morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&v102, (uint64_t *)a1, v45, v46, a3, a4);
            if (v101)
            {
              if ((_BYTE)v103)
              {
                int v56 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                  std::basic_string<char16_t>::__init_copy_ctor_external(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
                }
                else {
                  std::basic_string<char16_t> __str = __p;
                }
                int v79 = SHIBYTE(v102.__r_.__value_.__r.__words[2]);
                if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
                  std::basic_string<char16_t>::__init_copy_ctor_external(&v106, v102.__r_.__value_.__l.__data_, v102.__r_.__value_.__l.__size_);
                }
                else {
                  std::basic_string<char16_t> v106 = v102;
                }
                long long v96 = 0uLL;
                v97[0] = 0;
                unint64_t v98 = (unint64_t)&v96;
                char v99 = 0;
                *(void *)&long long v96 = operator new(0x30uLL);
                *((void *)&v96 + 1) = v96;
                v97[0] = v96 + 48;
                long long v80 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v97, (long long *)&__str, (long long *)&v107, (std::basic_string<char16_t> *)v96);
                std::basic_string<char16_t>::size_type v81 = v97[0];
                *((void *)&v96 + 1) = v80;
                v97[0] = 0;
                *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v96;
                v94.__r_.__value_.__r.__words[2] = v81;
                long long v96 = 0uLL;
                char v95 = 1;
                unint64_t v98 = (unint64_t)&v96;
                std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v98);
                for (uint64_t j = 0; j != -6; j -= 3)
                {
                  if (SHIBYTE(v106.__r_.__value_.__r.__words[j + 2]) < 0) {
                    operator delete(*(void **)((char *)&__str + j * 8 + 24));
                  }
                }
                if (v79 < 0) {
                  operator delete(v102.__r_.__value_.__l.__data_);
                }
                goto LABEL_205;
              }
              if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_192;
              }
              uint64_t v74 = (void *)__p.__r_.__value_.__r.__words[0];
            }
            else
            {
              if (!(_BYTE)v103 || (SHIBYTE(v102.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_192;
              }
              uint64_t v74 = (void *)v102.__r_.__value_.__r.__words[0];
            }
            operator delete(v74);
            goto LABEL_192;
          }
          if (!v48 || !v50) {
            goto LABEL_192;
          }
        }
        morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v45, v46, a3, a4);
        if (!v101) {
          goto LABEL_192;
        }
        if (v23 > 0x7FFFFFFFFFFFFFF7) {
          std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
        }
        if (v23 >= 0xB)
        {
          uint64_t v75 = (v23 & 0xFFFFFFFFFFFFFFFCLL) + 4;
          if ((v23 | 3) != 0xB) {
            uint64_t v75 = v23 | 3;
          }
          uint64_t v73 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v75 + 1);
          __str.__r_.__value_.__l.__size_ = v23;
          __str.__r_.__value_.__r.__words[2] = v76 | 0x8000000000000000;
          __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v73;
        }
        else
        {
          *((unsigned char *)&__str.__r_.__value_.__s + 23) = v23;
          uint64_t v73 = &__str;
          if (!v23)
          {
LABEL_181:
            v73[v23] = 0;
            int v56 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&v106, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
            }
            else {
              std::basic_string<char16_t> v106 = __p;
            }
            memset(&v102, 0, sizeof(v102));
            *(void *)&long long v96 = &v102;
            BYTE8(v96) = 0;
            v102.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
            v102.__r_.__value_.__l.__size_ = v102.__r_.__value_.__r.__words[0];
            v102.__r_.__value_.__r.__words[2] = v102.__r_.__value_.__r.__words[0] + 48;
            uint64_t v77 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v102.__r_.__value_.__r.__words[2], (long long *)&__str, (long long *)&v107, (std::basic_string<char16_t> *)v102.__r_.__value_.__l.__data_);
            v94.__r_.__value_.__r.__words[0] = v102.__r_.__value_.__r.__words[0];
            v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v77;
            v94.__r_.__value_.__r.__words[2] = v102.__r_.__value_.__r.__words[2];
            memset(&v102, 0, sizeof(v102));
            char v95 = 1;
            *(void *)&long long v96 = &v102;
            std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v96);
            for (uint64_t k = 0; k != -6; k -= 3)
            {
              if (SHIBYTE(v106.__r_.__value_.__r.__words[k + 2]) < 0) {
                operator delete(*(void **)((char *)&__str + k * 8 + 24));
              }
            }
LABEL_205:
            if (v56 < 0)
            {
LABEL_206:
              uint64_t v53 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_207:
              operator delete(v53);
            }
            goto LABEL_208;
          }
        }
        memmove(v73, v24, 2 * v23);
        goto LABEL_181;
      case 3uLL:
        unint64_t v98 = 0;
        if (*((char *)v92 + 47) < 0)
        {
          BOOL v25 = (const UChar *)*((void *)v92 + 3);
          uint64_t v26 = *((void *)v92 + 4);
        }
        else
        {
          BOOL v25 = (const UChar *)v92 + 12;
          uint64_t v26 = *((unsigned __int8 *)v92 + 47);
        }
        if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v98, v25, v26)|| (*(void *)(a1 + 200) & v98) == 0)
        {
          goto LABEL_193;
        }
        *((void *)&v103 + 1) = 0;
        uint64_t v42 = (const UChar *)v92;
        if (*((char *)v92 + 23) < 0)
        {
          uint64_t v42 = *(const UChar **)v92;
          uint64_t v43 = *((void *)v92 + 1);
        }
        else
        {
          uint64_t v43 = *((unsigned __int8 *)v92 + 23);
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v103 + 8, v42, v43);
        uint64_t v57 = v92;
        if (*((char *)v92 + 23) < 0)
        {
          uint64_t v57 = *(long long **)v92;
          unint64_t v58 = *((void *)v92 + 1);
        }
        else
        {
          unint64_t v58 = *((unsigned __int8 *)v92 + 23);
        }
        morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__p, (uint64_t *)a1, v57, v58, a3, a4);
        int v59 = v101;
        if (!v101) {
          goto LABEL_193;
        }
        int v60 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> __str = __p;
        }
        uint64_t v61 = v92;
        if (*((char *)v92 + 47) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v106, *((const std::basic_string<char16_t>::value_type **)v92 + 3), *((void *)v92 + 4));
          uint64_t v61 = v92;
        }
        else
        {
          long long v62 = *(long long *)((char *)v92 + 24);
          v106.__r_.__value_.__r.__words[2] = *((void *)v92 + 5);
          *(_OWORD *)&v106.__r_.__value_.__l.__data_ = v62;
        }
        if (*((char *)v61 + 71) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v107, *((const std::basic_string<char16_t>::value_type **)v61 + 6), *((void *)v61 + 7));
        }
        else
        {
          long long v63 = v61[3];
          v107.__r_.__value_.__r.__words[2] = *((void *)v61 + 8);
          *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v63;
        }
        memset(&v102, 0, sizeof(v102));
        *(void *)&long long v96 = &v102;
        BYTE8(v96) = 0;
        v102.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x48uLL);
        v102.__r_.__value_.__l.__size_ = v102.__r_.__value_.__r.__words[0];
        v102.__r_.__value_.__r.__words[2] = v102.__r_.__value_.__r.__words[0] + 72;
        long long v64 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v102.__r_.__value_.__r.__words[2], (long long *)&__str, &v108, (std::basic_string<char16_t> *)v102.__r_.__value_.__l.__data_);
        v94.__r_.__value_.__r.__words[0] = v102.__r_.__value_.__r.__words[0];
        v94.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v64;
        v94.__r_.__value_.__r.__words[2] = v102.__r_.__value_.__r.__words[2];
        memset(&v102, 0, sizeof(v102));
        char v95 = 1;
        *(void *)&long long v96 = &v102;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v96);
        for (uint64_t m = 0; m != -9; m -= 3)
        {
          if (SHIBYTE(v107.__r_.__value_.__r.__words[m + 2]) < 0) {
            operator delete(*(void **)((char *)&v107.__r_.__value_.__l.__data_ + m * 8));
          }
        }
        if (!v59 || (v60 & 0x80000000) == 0) {
          goto LABEL_208;
        }
        goto LABEL_206;
      default:
        long long v29 = 0uLL;
        memset(&__p, 0, sizeof(__p));
        if (v92 == v93)
        {
          std::basic_string<char16_t>::size_type v41 = 0;
          goto LABEL_85;
        }
        uint64_t v30 = 0;
        while (2)
        {
          v102.__r_.__value_.__r.__words[0] = 0;
          if (*((char *)v20 + 23) < 0)
          {
            uint64_t v32 = *(const std::basic_string<char16_t>::value_type **)v20;
            uint64_t v31 = *((void *)v20 + 1);
          }
          else
          {
            uint64_t v31 = *((unsigned __int8 *)v20 + 23);
            uint64_t v32 = (const std::basic_string<char16_t>::value_type *)v20;
          }
          morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v102, (const UChar *)v32, v31);
          if ((*(void *)(a1 + 176) & v102.__r_.__value_.__r.__words[0]) != 0
            && (*(void *)(a1 + 152) & v102.__r_.__value_.__r.__words[0]) == 0)
          {
            ++v30;
          }
          if (v30 < 2)
          {
            if (*((char *)v20 + 23) < 0)
            {
              std::basic_string<char16_t>::size_type v35 = *(void **)v20;
              unint64_t v34 = *((void *)v20 + 1);
            }
            else
            {
              unint64_t v34 = *((unsigned __int8 *)v20 + 23);
              std::basic_string<char16_t>::size_type v35 = v20;
            }
            morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord((uint64_t)&__str, (uint64_t *)a1, v35, v34, a3, a4);
            int data_low = LOBYTE(v106.__r_.__value_.__l.__data_);
            if (LOBYTE(v106.__r_.__value_.__l.__data_))
            {
              std::basic_string<char16_t>::size_type v37 = __p.__r_.__value_.__l.__size_;
              if (__p.__r_.__value_.__l.__size_ >= __p.__r_.__value_.__r.__words[2])
              {
                std::basic_string<char16_t>::size_type v40 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&__p, (long long *)&__str);
              }
              else
              {
                if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                {
                  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)__p.__r_.__value_.__l.__size_, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
                }
                else
                {
                  *(_OWORD *)__p.__r_.__value_.__l.__size_ = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
                  *(void *)(v37 + 16) = *((void *)&__str.__r_.__value_.__l + 2);
                }
                std::basic_string<char16_t>::size_type v40 = v37 + 24;
              }
              __p.__r_.__value_.__l.__size_ = v40;
              if (data_low && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__str.__r_.__value_.__l.__data_);
              }
LABEL_66:
              unsigned int v20 = (long long *)((char *)v20 + 24);
              if (v20 == v21)
              {
                long long v29 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
                std::basic_string<char16_t>::size_type v41 = __p.__r_.__value_.__r.__words[2];
LABEL_85:
                *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v29;
                v94.__r_.__value_.__r.__words[2] = v41;
                memset(&__p, 0, sizeof(__p));
                char v95 = 1;
                goto LABEL_86;
              }
              continue;
            }
            if (!a4)
            {
              LOBYTE(v94.__r_.__value_.__l.__data_) = 0;
              char v95 = 0;
LABEL_86:
              __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__p;
              p_p = &__str;
LABEL_87:
              std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)p_p);
LABEL_208:
              __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v92;
              std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
              if (v95)
              {
                memset(&v91, 0, sizeof(v91));
                std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v91, (long long *)v94.__r_.__value_.__l.__data_, (long long *)v94.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL* ((uint64_t)(v94.__r_.__value_.__l.__size_ - v94.__r_.__value_.__r.__words[0]) >> 3));
                morphun::grammar::synthesis::GrammarSynthesizerUtil::getStringFromInflectedSignificantWords(&__str, *(const morphun::Token **)(v19 + 8), *(void *)(v19 + 16), &v91);
                std::basic_string<char16_t> v86 = __str;
                memset(&__str, 0, sizeof(__str));
                char v87 = 1;
                __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v91;
                std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
                if (v95)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v94;
                  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
                }
                std::basic_string<char16_t>::operator=(&v90, &v86);
                if (v87 && SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v86.__r_.__value_.__l.__data_);
                }
                goto LABEL_215;
              }
              LOBYTE(v86.__r_.__value_.__l.__data_) = 0;
              char v87 = 0;
              if (a4)
              {
LABEL_215:
                (*(void (**)(uint64_t))(*(void *)v19 + 16))(v19);
                goto LABEL_216;
              }
              (*(void (**)(uint64_t))(*(void *)v19 + 16))(v19);
              uint64_t v8 = 0;
              std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v89[1]);
              if ((*((unsigned char *)&v90.__r_.__value_.__s + 23) & 0x80) != 0) {
                goto LABEL_218;
              }
              return v8;
            }
            std::basic_string<char16_t>::size_type v33 = __p.__r_.__value_.__l.__size_;
            if (__p.__r_.__value_.__l.__size_ < __p.__r_.__value_.__r.__words[2])
            {
              if (*((char *)v20 + 23) < 0) {
                goto LABEL_49;
              }
              goto LABEL_61;
            }
          }
          else
          {
            std::basic_string<char16_t>::size_type v33 = __p.__r_.__value_.__l.__size_;
            if (__p.__r_.__value_.__l.__size_ < __p.__r_.__value_.__r.__words[2])
            {
              if (*((char *)v20 + 23) < 0)
              {
LABEL_49:
                std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)__p.__r_.__value_.__l.__size_, *(const std::basic_string<char16_t>::value_type **)v20, *((void *)v20 + 1));
LABEL_62:
                std::basic_string<char16_t>::size_type v39 = v33 + 24;
LABEL_65:
                __p.__r_.__value_.__l.__size_ = v39;
                goto LABEL_66;
              }
LABEL_61:
              long long v38 = *v20;
              *(void *)(v33 + 16) = *((void *)v20 + 2);
              *(_OWORD *)std::basic_string<char16_t>::size_type v33 = v38;
              goto LABEL_62;
            }
          }
          break;
        }
        std::basic_string<char16_t>::size_type v39 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&__p, v20);
        goto LABEL_65;
    }
  }
  uint64_t v8 = 0;
  if ((*((unsigned char *)&v90.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_218:
  }
    operator delete(v90.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1D2C65398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, void **a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,char *a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50,char a51)
{
  if (*(char *)(v53 - 137) < 0) {
    operator delete(*(void **)(v53 - 160));
  }
  operator delete(*(void **)(v53 - 208));
  if (v52 < 0) {
    operator delete(__p);
  }
  a39 = &a32;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a39);
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 16))(v51);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a20);
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::inflectWord(uint64_t a1, uint64_t *a2, void *a3, unint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12 = (uint64_t *)operator new(0x10uLL);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + 1);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v107, a5, v12, v12 + 2);
  operator delete(v12);
  uint64_t v13 = a2[3];
  uint64_t v14 = (uint64_t *)operator new(8uLL);
  *uint64_t v14 = v13;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v106, a5, v14, v14 + 1);
  operator delete(v14);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, (uint64_t)(a2 + 27), a3, a4, &v107, &v106);
  int v15 = v105;
  if (!v105)
  {
    if ((a6 & 1) == 0)
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      goto LABEL_31;
    }
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v108, a5, a2[1]);
    uint64_t v18 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v17);
    if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v108.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v108.__r_.__value_.__l.__size_;
    }
    uint64_t v20 = *(unsigned __int8 *)(v18 + 23);
    int v21 = (char)v20;
    if ((v20 & 0x80u) != 0) {
      uint64_t v20 = *(void *)(v18 + 8);
    }
    if (size == v20)
    {
      if (!size)
      {
        BOOL v31 = 1;
        if ((SHIBYTE(v108.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_35:
          if (v31)
          {
            if (a4 > 0x7FFFFFFFFFFFFFF7) {
              std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
            }
            if (a4 >= 0xB)
            {
              uint64_t v34 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
              if ((a4 | 3) != 0xB) {
                uint64_t v34 = a4 | 3;
              }
              p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v34 + 1);
              __dst.__r_.__value_.__l.__size_ = a4;
              __dst.__r_.__value_.__r.__words[2] = v35 | 0x8000000000000000;
              __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
            }
            else
            {
              *((unsigned char *)&__dst.__r_.__value_.__s + 23) = a4;
              p_dst = &__dst;
              if (!a4)
              {
LABEL_48:
                p_dst->__r_.__value_.__s.__data_[a4] = 0;
                uint64_t v109 = 0;
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  unint64_t v36 = &__dst;
                }
                else {
                  unint64_t v36 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                }
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::basic_string<char16_t>::size_type v37 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::basic_string<char16_t>::size_type v37 = __dst.__r_.__value_.__l.__size_;
                }
                morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[4], (uint64_t)&v109, (const UChar *)v36, v37);
                if (v109 && (a2[26] & v109) == 0)
                {
                  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  {
                    std::basic_string<char16_t>::size_type v57 = __dst.__r_.__value_.__r.__words[2];
                    *(_OWORD *)a1 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                    *(void *)(a1 + 16) = v57;
                    memset(&v102, 0, sizeof(v102));
                    goto LABEL_26;
                  }
                  std::basic_string<char16_t>::size_type v39 = __dst.__r_.__value_.__l.__size_;
                  unint64_t v58 = (const std::basic_string<char16_t>::value_type *)__dst.__r_.__value_.__r.__words[0];
                  goto LABEL_92;
                }
                std::basic_string<char16_t>::size_type v39 = __dst.__r_.__value_.__l.__size_;
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::basic_string<char16_t>::size_type v40 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::basic_string<char16_t>::size_type v40 = __dst.__r_.__value_.__l.__size_;
                }
                std::basic_string<char16_t>::size_type v41 = v40 - 2;
                if (v40 >= 2)
                {
                  uint64_t v42 = 0;
                  uint64_t v43 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    uint64_t v43 = &__dst;
                  }
                  int v44 = (char *)v43 + 2 * v41;
                  do
                  {
                    int v45 = *(unsigned __int16 *)&v44[v42 * 2];
                    int v46 = (unsigned __int16)word_1D2ED056C[v42];
                  }
                  while (v46 == v45 && v42++ != 1);
                  if (v46 == v45)
                  {
                    uint64_t v48 = std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v41, v38);
                    std::basic_string<char16_t>::append(v48, word_1D2ED0562, 4uLL);
LABEL_137:
                    *(_OWORD *)&v102.__r_.__value_.__l.__data_ = *(_OWORD *)&v108.__r_.__value_.__l.__data_;
                    std::basic_string<char16_t>::size_type v62 = v108.__r_.__value_.__r.__words[2];
                    goto LABEL_138;
                  }
                }
                if (!v40)
                {
LABEL_162:
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v102, (const void **)&__dst.__r_.__value_.__l.__data_, word_1D2ED0594);
LABEL_163:
                  int v100 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
                  *(std::basic_string<char16_t> *)a1 = v102;
                  memset(&v102, 0, sizeof(v102));
                  *(unsigned char *)(a1 + 24) = 1;
                  if (v100 < 0) {
                    operator delete(__dst.__r_.__value_.__l.__data_);
                  }
                  goto LABEL_27;
                }
                uint64_t v49 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v49 = &__dst;
                }
                std::basic_string<char16_t>::size_type v50 = v40 - 1;
                int v51 = (unsigned __int16)v49->__r_.__value_.__s.__data_[v40 - 1];
                if ((v51 - 114) < 2) {
                  goto LABEL_76;
                }
                if (v51 == 109)
                {
                  int v59 = std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v50, v38);
                  std::basic_string<char16_t>::append(v59, L"ns", 2uLL);
                  goto LABEL_137;
                }
                if (v51 == 122)
                {
LABEL_76:
                  char v52 = &v102;
                  std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v102, v40 + 2);
                  if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                    char v52 = (std::basic_string<char16_t> *)v102.__r_.__value_.__r.__words[0];
                  }
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    uint64_t v53 = &__dst;
                  }
                  else {
                    uint64_t v53 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  }
                  memmove(v52, v53, 2 * v40);
                  uint64_t v54 = (char *)v52 + 2 * v40;
                  *(_DWORD *)uint64_t v54 = 7536741;
                  *((_WORD *)v54 + 2) = 0;
                  goto LABEL_163;
                }
                std::basic_string<char16_t>::size_type v60 = v40 - 2;
                if (v40 < 2)
                {
LABEL_95:
                  unint64_t v58 = (const std::basic_string<char16_t>::value_type *)__dst.__r_.__value_.__r.__words[0];
                  uint64_t v61 = &__dst;
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                    uint64_t v61 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  }
                  if (v61->__r_.__value_.__s.__data_[v40 - 1] == 120)
                  {
                    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    {
                      *(_OWORD *)&v102.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                      std::basic_string<char16_t>::size_type v62 = __dst.__r_.__value_.__r.__words[2];
LABEL_138:
                      v102.__r_.__value_.__r.__words[2] = v62;
                      goto LABEL_163;
                    }
LABEL_92:
                    std::basic_string<char16_t>::__init_copy_ctor_external(&v102, v58, v39);
                    goto LABEL_163;
                  }
                  goto LABEL_162;
                }
                uint64_t v63 = 0;
                long long v64 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  long long v64 = &__dst;
                }
                uint64_t v65 = (char *)v64 + 2 * v60;
                do
                {
                  int v66 = *(unsigned __int16 *)&v65[v63 * 2];
                  int v67 = (unsigned __int16)aAl[v63];
                }
                while (v67 == v66 && v63++ != 1);
                if (v67 == v66) {
                  goto LABEL_136;
                }
                uint64_t v69 = 0;
                uint64_t v70 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v70 = &__dst;
                }
                char v71 = (char *)v70 + 2 * v60;
                do
                {
                  int v72 = *(unsigned __int16 *)&v71[v69 * 2];
                  int v73 = (unsigned __int16)aEl_0[v69];
                }
                while (v73 == v72 && v69++ != 1);
                if (v73 == v72) {
                  goto LABEL_136;
                }
                uint64_t v75 = 0;
                uint64_t v76 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v76 = &__dst;
                }
                uint64_t v77 = (char *)v76 + 2 * v60;
                do
                {
                  int v78 = *(unsigned __int16 *)&v77[v75 * 2];
                  int v79 = (unsigned __int16)aOl[v75];
                }
                while (v79 == v78 && v75++ != 1);
                if (v79 == v78) {
                  goto LABEL_136;
                }
                uint64_t v81 = 0;
                uint64_t v82 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v82 = &__dst;
                }
                int v83 = (char *)v82 + 2 * v60;
                do
                {
                  int v84 = *(unsigned __int16 *)&v83[v81 * 2];
                  int v85 = (unsigned __int16)word_1D2ED053A[v81];
                }
                while (v85 == v84 && v81++ != 1);
                if (v85 == v84)
                {
LABEL_136:
                  char v87 = std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v50, v38);
                  std::basic_string<char16_t>::append(v87, L"is", 2uLL);
                  goto LABEL_137;
                }
                uint64_t v88 = 0;
                BOOL v89 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  BOOL v89 = &__dst;
                }
                std::basic_string<char16_t> v90 = (char *)v89 + 2 * v60;
                do
                {
                  int v91 = *(unsigned __int16 *)&v90[v88 * 2];
                  int v92 = (unsigned __int16)word_1D2ED04F2[v88];
                }
                while (v92 == v91 && v88++ != 1);
                if (v92 == v91)
                {
                  std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v40 - 2, v38);
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v102, &v108, word_1D2ED0500);
                }
                else
                {
                  uint64_t v94 = 0;
                  char v95 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    char v95 = &__dst;
                  }
                  long long v96 = (char *)v95 + 2 * v60;
                  do
                  {
                    int v97 = *(unsigned __int16 *)&v96[v94 * 2];
                    int v98 = (unsigned __int16)word_1D2ECCEBE[v94];
                  }
                  while (v98 == v97 && v94++ != 1);
                  if (v98 != v97) {
                    goto LABEL_95;
                  }
                  std::basic_string<char16_t>::basic_string(&v108, &__dst, 0, v50, v38);
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v102, &v108, word_1D2ED0594);
                }
                if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v108.__r_.__value_.__l.__data_);
                }
                goto LABEL_163;
              }
            }
            memmove(p_dst, a3, 2 * a4);
            goto LABEL_48;
          }
          if (a4 > 0x7FFFFFFFFFFFFFF7) {
            std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
          }
          if (a4 >= 0xB)
          {
            uint64_t v55 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((a4 | 3) != 0xB) {
              uint64_t v55 = a4 | 3;
            }
            std::basic_string<char16_t>::size_type v33 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v55 + 1);
            v108.__r_.__value_.__l.__size_ = a4;
            v108.__r_.__value_.__r.__words[2] = v56 | 0x8000000000000000;
            v108.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v33;
          }
          else
          {
            *((unsigned char *)&v108.__r_.__value_.__s + 23) = a4;
            std::basic_string<char16_t>::size_type v33 = &v108;
            if (!a4) {
              goto LABEL_86;
            }
          }
          memmove(v33, a3, 2 * a4);
LABEL_86:
          *((_WORD *)v33 + a4) = 0;
          *(_OWORD *)a1 = *(_OWORD *)&v108.__r_.__value_.__l.__data_;
          std::basic_string<char16_t>::size_type v16 = v108.__r_.__value_.__r.__words[2];
          goto LABEL_4;
        }
LABEL_34:
        operator delete(v108.__r_.__value_.__l.__data_);
        goto LABEL_35;
      }
      if (v21 >= 0) {
        uint64_t v22 = (unsigned __int16 *)v18;
      }
      else {
        uint64_t v22 = *(unsigned __int16 **)v18;
      }
      std::basic_string<char16_t>::size_type v23 = (std::basic_string<char16_t> *)v108.__r_.__value_.__r.__words[0];
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v23 = &v108;
      }
      std::basic_string<char16_t>::size_type v24 = size - 1;
      do
      {
        int v26 = (unsigned __int16)v23->__r_.__value_.__s.__data_[0];
        std::basic_string<char16_t>::size_type v23 = (std::basic_string<char16_t> *)((char *)v23 + 2);
        int v25 = v26;
        int v28 = *v22++;
        int v27 = v28;
        BOOL v30 = v24-- != 0;
        BOOL v31 = v27 == v25;
      }
      while (v27 == v25 && v30);
    }
    else
    {
      BOOL v31 = 0;
    }
    if ((SHIBYTE(v108.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (SHIBYTE(v104) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
    goto LABEL_26;
  }
  *(_OWORD *)a1 = *(_OWORD *)__p;
  std::basic_string<char16_t>::size_type v16 = v104;
LABEL_4:
  *(void *)(a1 + 16) = v16;
LABEL_26:
  *(unsigned char *)(a1 + 24) = 1;
LABEL_27:
  if (v15 && SHIBYTE(v104) < 0) {
    operator delete(__p[0]);
  }
LABEL_31:
  __p[0] = &v106;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  __p[0] = &v107;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_1D2C65E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char a30)
{
  if (*(char *)(v31 - 89) < 0) {
    operator delete(*(void **)(v31 - 112));
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v30)
  {
    if (a25 < 0) {
      operator delete(a20);
    }
  }
  a20 = &a27;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
  a20 = &a30;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a20);
  _Unwind_Resume(a1);
}

void sub_1D2C65F58()
{
  operator delete(v0);
  JUMPOUT(0x1D2C65F50);
}

uint64_t std::vector<std::basic_string<char16_t>>::vector[abi:ne180100](uint64_t a1, long long *a2, unint64_t a3)
{
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (a3)
  {
    std::vector<std::basic_string<char16_t>>::__vallocate[abi:ne180100]((void *)a1, a3);
    *(void *)(a1 + 8) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>(v4, a2, (long long *)((char *)a2 + 24 * a3), *(std::basic_string<char16_t> **)(a1 + 8));
  }
  return a1;
}

void sub_1D2C65FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::~PtGrammarSynthesizer_PtDisplayFunction(morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction *this)
{
  morphun::grammar::synthesis::PtGrammarSynthesizer_PtDisplayFunction::~PtGrammarSynthesizer_PtDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0CA10;
  uint64_t v2 = *((void *)this + 16);
  *((void *)this + 16) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *((void *)this + 5) = &unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 14));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 11));
}

void morphun::exception::XMLParseException::~XMLParseException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::XMLParseException::XMLParseException(morphun::exception::XMLParseException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11328;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11328;
  return result;
}

void *morphun::exception::XMLParseException::XMLParseException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11328;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11328;
  return result;
}

double morphun::tokenizer::NumberCleaverIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 40) = 0;
  double result = NAN;
  *(void *)(a1 + 32) = 0xFFFFFFFF00000000;
  return result;
}

uint64_t morphun::tokenizer::NumberCleaverIterator::getNextBoundary(morphun::tokenizer::NumberCleaverIterator *this)
{
  uint64_t v2 = (int *)((char *)this + 36);
  if (*((_DWORD *)this + 9) != -1)
  {
    *((_DWORD *)this + 9) = -1;
    uint64_t v3 = (int *)((char *)this + 40);
    return *v3;
  }
  uint64_t v3 = (int *)((char *)this + 40);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 10);
  int v4 = (*(uint64_t (**)(void))(**((void **)this + 3) + 24))(*((void *)this + 3));
  int *v3 = v4;
  uint64_t v5 = *((int *)this + 8);
  if (v4 - (int)v5 >= 2)
  {
    uint64_t v6 = *((void *)this + 1);
    UChar32 v7 = *(unsigned __int16 *)(v6 + 2 * v5);
    int v8 = v5 + 1;
    BOOL v9 = (v7 & 0xFC00) != 0xD800 || v8 == v4;
    if (!v9)
    {
      int v10 = *(unsigned __int16 *)(v6 + 2 * v8);
      BOOL v9 = (v10 & 0xFC00) == 56320;
      int v11 = v10 + (v7 << 10) - 56613888;
      if (v9) {
        UChar32 v7 = v11;
      }
    }
    uint64_t v12 = v4 - 1;
    UChar32 v13 = *(unsigned __int16 *)(v6 + 2 * v12);
    if ((int)v12 > (int)v5 && (v13 & 0xFC00) == 56320)
    {
      int v15 = *(unsigned __int16 *)(v6 + 2 * v4 - 4);
      BOOL v9 = (v15 & 0xFC00) == 55296;
      int v16 = v13 + (v15 << 10) - 56613888;
      if (v9) {
        UChar32 v13 = v16;
      }
    }
    int v17 = u_isdigit(v7);
    if (v17 != u_isdigit(v13))
    {
      int v18 = u_isalpha(v7);
      if (v18 != u_isalpha(v13))
      {
        int v19 = *((_DWORD *)this + 8);
        *((_DWORD *)this + 9) = v19;
        int v20 = *((_DWORD *)this + 10);
        if (v17)
        {
          if (v19 < v20)
          {
            int v21 = v19;
            while (1)
            {
              uint64_t v22 = *((void *)this + 1);
              UChar32 v23 = *(unsigned __int16 *)(v22 + 2 * v21);
              if ((v23 & 0xF800) == 0xD800)
              {
                if ((v23 & 0x400) != 0)
                {
                  if (v21 > *((_DWORD *)this + 8))
                  {
                    int v28 = *(unsigned __int16 *)(v22 + 2 * v21 - 2);
                    BOOL v26 = (v28 & 0xFC00) == 55296;
                    int v27 = v23 - 56613888 + (v28 << 10);
LABEL_30:
                    if (v26) {
                      UChar32 v23 = v27;
                    }
                  }
                }
                else
                {
                  uint64_t v24 = v21 + 1;
                  if (v24 != v20)
                  {
                    int v25 = *(unsigned __int16 *)(v22 + 2 * v24);
                    BOOL v26 = (v25 & 0xFC00) == 56320;
                    int v27 = (v23 << 10) - 56613888 + v25;
                    goto LABEL_30;
                  }
                }
              }
              if (u_ispunct(v23) || u_isdigit(v23))
              {
                int v21 = *v2 + 1;
                int *v2 = v21;
                int v20 = *v3;
                if (v21 < *v3) {
                  continue;
                }
              }
              break;
            }
          }
LABEL_49:
          int v36 = *((_DWORD *)this + 9) - (v17 != 0);
          uint64_t v37 = *((void *)this + 1);
          UChar32 v38 = *(unsigned __int16 *)(v37 + 2 * v36);
          if ((v38 & 0xF800) == 0xD800)
          {
            if ((v38 & 0x400) != 0)
            {
              if (v36 > *((_DWORD *)this + 8))
              {
                int v43 = *(unsigned __int16 *)(v37 + 2 * v36 - 2);
                BOOL v41 = (v43 & 0xFC00) == 55296;
                int v42 = v38 + (v43 << 10);
LABEL_55:
                UChar32 v44 = v42 - 56613888;
                if (v41) {
                  UChar32 v38 = v44;
                }
              }
            }
            else
            {
              uint64_t v39 = v36 + 1;
              if (v39 != *v3)
              {
                int v40 = *(unsigned __int16 *)(v37 + 2 * v39);
                BOOL v41 = (v40 & 0xFC00) == 56320;
                int v42 = v40 + (v38 << 10);
                goto LABEL_55;
              }
            }
          }
          if (u_ispunct(v38)) {
            int *v2 = -1;
          }
          else {
            uint64_t v3 = v2;
          }
          return *v3;
        }
        if (v19 >= v20) {
          goto LABEL_49;
        }
        while (1)
        {
          uint64_t v29 = *((void *)this + 1);
          UChar32 v30 = *(unsigned __int16 *)(v29 + 2 * v19);
          if ((v30 & 0xF800) == 0xD800)
          {
            if ((v30 & 0x400) != 0)
            {
              if (v19 > *((_DWORD *)this + 8))
              {
                int v35 = *(unsigned __int16 *)(v29 + 2 * v19 - 2);
                BOOL v33 = (v35 & 0xFC00) == 55296;
                int v34 = v30 - 56613888 + (v35 << 10);
LABEL_44:
                if (v33) {
                  UChar32 v30 = v34;
                }
              }
            }
            else
            {
              uint64_t v31 = v19 + 1;
              if (v31 != v20)
              {
                int v32 = *(unsigned __int16 *)(v29 + 2 * v31);
                BOOL v33 = (v32 & 0xFC00) == 56320;
                int v34 = (v30 << 10) - 56613888 + v32;
                goto LABEL_44;
              }
            }
          }
          if (u_isalpha(v30))
          {
            int v19 = *v2 + 1;
            int *v2 = v19;
            int v20 = *v3;
            if (v19 < *v3) {
              continue;
            }
          }
          goto LABEL_49;
        }
      }
    }
  }
  return *v3;
}

void morphun::tokenizer::NumberCleaverIterator::~NumberCleaverIterator(morphun::tokenizer::NumberCleaverIterator *this)
{
}

void morphun::analysis::stemmer::slice_from(std::basic_string<char16_t> *__str, std::basic_string<char16_t>::value_type *a2, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  uint64_t v6 = HIDWORD(__str[1].__r_.__value_.__r.__words[1]);
  if ((v6 & 0x80000000) != 0
    || ((std::basic_string<char16_t>::size_type v7 = LODWORD(__str[1].__r_.__value_.__r.__words[2]),
         int v8 = HIDWORD(__str[1].__r_.__value_.__r.__words[0]),
         (int)v6 <= (int)v7)
      ? (BOOL v9 = (int)v7 <= v8)
      : (BOOL v9 = 0),
        !v9))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "f");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)SHIDWORD(__str[1].__r_.__value_.__r.__words[1]), &v33);
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v25 = &v33;
    }
    else {
      int v25 = (std::basic_string<char16_t> *)v33.__r_.__value_.__r.__words[0];
    }
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v33.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v33.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v25, size);
    std::basic_string<char16_t> v35 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    std::basic_string<char16_t>::append(&v35, L",ket=", 5uLL);
    std::basic_string<char16_t> v36 = v35;
    memset(&v35, 0, sizeof(v35));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)SLODWORD(__str[1].__r_.__value_.__r.__words[2]), &v32);
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v27 = &v32;
    }
    else {
      int v27 = (std::basic_string<char16_t> *)v32.__r_.__value_.__r.__words[0];
    }
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v28 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v28 = v32.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v36, (const std::basic_string<char16_t>::value_type *)v27, v28);
    std::basic_string<char16_t> v37 = v36;
    memset(&v36, 0, sizeof(v36));
    std::basic_string<char16_t>::append(&v37, L",limit=", 7uLL);
    std::basic_string<char16_t> v38 = v37;
    memset(&v37, 0, sizeof(v37));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)SHIDWORD(__str[1].__r_.__value_.__r.__words[0]), &v31);
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v29 = &v31;
    }
    else {
      uint64_t v29 = (std::basic_string<char16_t> *)v31.__r_.__value_.__r.__words[0];
    }
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v30 = HIBYTE(v31.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v30 = v31.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v38, (const std::basic_string<char16_t>::value_type *)v29, v30);
    std::basic_string<char16_t> __stra = v38;
    memset(&v38, 0, sizeof(v38));
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&__stra);
  }
  uint64_t v10 = a3;
  int v12 = v6 - v7 + a3;
  int v13 = v12 + v8;
  int v14 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v14 & 0x80u) != 0) {
    int v14 = __str->__r_.__value_.__r.__words[1];
  }
  if (v13 > v14)
  {
    int v15 = v13 >> 3;
    if (v13 >> 3 <= 3) {
      int v15 = 3;
    }
    std::basic_string<char16_t>::resize(__str, (v13 + v15 + 3) & 0x7FFFFFFC, 0);
    int v8 = HIDWORD(__str[1].__r_.__value_.__r.__words[0]);
  }
  if (v12) {
    BOOL v16 = v8 <= (int)v7;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16)
  {
    std::basic_string<char16_t>::basic_string(&__stra, __str, v10 + v6, v8 - (int)v7, a5);
    std::basic_string<char16_t>::assign(__str, &__stra, v7, 0xFFFFFFFFFFFFFFFFLL);
    if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__stra.__r_.__value_.__l.__data_);
    }
  }
  if ((int)v10 >= 1)
  {
    uint64_t v17 = v10;
    uint64_t v18 = v6;
    do
    {
      if (!v10) {
        std::__throw_out_of_range[abi:ne180100]("string_view::at");
      }
      std::basic_string<char16_t>::value_type v20 = *a2++;
      std::basic_string<char16_t>::value_type v19 = v20;
      if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v21 = __str;
      }
      else {
        int v21 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
      }
      v21->__r_.__value_.__s.__data_[v18++] = v19;
      --v10;
      --v17;
    }
    while (v17);
  }
  int data = (int)__str[1].__r_.__value_.__l.__data_;
  HIDWORD(__str[1].__r_.__value_.__r.__words[0]) += v12;
  if (data >= (int)v7)
  {
    LODWORD(v6) = data + v12;
    goto LABEL_30;
  }
  if (data > (int)v6) {
LABEL_30:
  }
    LODWORD(__str[1].__r_.__value_.__l.__data_) = v6;
}

void sub_1D2C66890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (*(char *)(v51 - 89) < 0) {
    operator delete(*(void **)(v51 - 112));
  }
  if (v50 < 0) {
    operator delete(v46);
  }
  if (*(char *)(v51 - 121) < 0) {
    operator delete(*(void **)(v51 - 144));
  }
  if (a43 < 0) {
    operator delete(__p);
  }
  if (v48 < 0) {
    operator delete(v45);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (v47 < 0) {
    operator delete(v44);
  }
  if (a23 < 0)
  {
    operator delete(a18);
    if ((v49 & 1) == 0) {
LABEL_22:
    }
      _Unwind_Resume(a1);
  }
  else if (!v49)
  {
    goto LABEL_22;
  }
  __cxa_free_exception(v43);
  goto LABEL_22;
}

uint64_t morphun::analysis::stemmer::in_grouping(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 24);
  if ((int)v1 >= *(_DWORD *)(a1 + 28)) {
    return 0;
  }
  uint64_t v2 = *(char *)(a1 + 23) >= 0 ? a1 : *(void *)a1;
  __int16 v3 = *(_WORD *)(v2 + 2 * v1);
  if ((unsigned __int16)((unsigned __int16)(v3 - 1104) >> 5) < 0x7FFu
    || (((unsigned __int16)aA_0[(unsigned __int16)(v3 - 1072) >> 3] >> ((v3 - 48) & 7)) & 1) == 0)
  {
    return 0;
  }
  *(_DWORD *)(a1 + 24) = v1 + 1;
  return 1;
}

uint64_t morphun::analysis::stemmer::out_grouping(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 24);
  if ((int)v1 >= *(_DWORD *)(a1 + 28)) {
    return 0;
  }
  uint64_t v2 = *(char *)(a1 + 23) >= 0 ? a1 : *(void *)a1;
  __int16 v3 = *(_WORD *)(v2 + 2 * v1);
  if ((unsigned __int16)((unsigned __int16)(v3 - 1104) >> 5) >= 0x7FFu
    && (((unsigned __int16)aA_0[(unsigned __int16)(v3 - 1072) >> 3] >> ((v3 - 48) & 7)) & 1) != 0)
  {
    return 0;
  }
  *(_DWORD *)(a1 + 24) = v1 + 1;
  return 1;
}

uint64_t morphun::analysis::stemmer::r_verb_common(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a1 + 24);
  uint64_t result = morphun::analysis::stemmer::find_among_b((uint64_t *)a1, a2, a3);
  if (result)
  {
    int v7 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 36) = v7;
    if (result == 2) {
      goto LABEL_6;
    }
    if (result != 1) {
      return 1;
    }
    int v8 = *(_DWORD *)(a1 + 28);
    if ((morphun::analysis::stemmer::eq_s_b((uint64_t *)a1, word_1D2EC1FA6, 1) & 1) != 0
      || (*(_DWORD *)(a1 + 24) = v7 - v8 + *(_DWORD *)(a1 + 28),
          uint64_t result = morphun::analysis::stemmer::eq_s_b((uint64_t *)a1, word_1D2EC1FAA, 1),
          result))
    {
LABEL_6:
      morphun::analysis::stemmer::slice_from((std::basic_string<char16_t> *)a1, &word_1D2ED0AEE, 0, v5, v6);
      return 1;
    }
  }
  return result;
}

uint64_t morphun::analysis::stemmer::find_among_b(uint64_t *a1, uint64_t a2, int a3)
{
  int v3 = 0;
  int v4 = 0;
  char v5 = 0;
  int v6 = 0;
  int v7 = *((_DWORD *)a1 + 6);
  int v8 = (uint64_t *)*a1;
  if (*((char *)a1 + 23) >= 0) {
    int v8 = a1;
  }
  while (1)
  {
    int v9 = v6 + ((a3 - v6) >> 1);
    if (v3 >= v4) {
      int v10 = v4;
    }
    else {
      int v10 = v3;
    }
    uint64_t v11 = v9;
    int v12 = (_WORD *)(a2 + 16 * v9);
    LODWORD(v13) = (unsigned __int16)*v12;
    if (*v12)
    {
      uint64_t v13 = 0;
      while (*(unsigned __int16 *)(a2 + 2 + 16 * v11 + 2 * v13++))
        ;
    }
    if ((int)v13 + ~v10 < 0)
    {
      int v17 = 0;
    }
    else
    {
      int v15 = v7 - 1 - v10;
      int v16 = v13 - v10;
      while (v7 - *((_DWORD *)a1 + 8) != v10)
      {
        int v17 = *((unsigned __int16 *)v8 + v15) - (unsigned __int16)v12[--v16];
        if (v17) {
          goto LABEL_17;
        }
        ++v10;
        --v15;
        if (v16 <= 0)
        {
          int v17 = 0;
          int v10 = v13;
          goto LABEL_17;
        }
      }
      int v17 = -1;
      int v10 = v7 - *((_DWORD *)a1 + 8);
    }
LABEL_17:
    if (v17 >= 0) {
      int v3 = v10;
    }
    else {
      a3 = v11;
    }
    if (v17 >= 0) {
      int v6 = v11;
    }
    else {
      int v4 = v10;
    }
    if (a3 - v6 <= 1)
    {
      BOOL v18 = v6 > 0 || a3 == v6;
      BOOL v19 = v18;
      char v20 = v19 | v5;
      char v5 = 1;
      if (v20) {
        break;
      }
    }
  }
  while (1)
  {
    uint64_t v21 = v6;
    LODWORD(v22) = *(unsigned __int16 *)(a2 + 16 * v6);
    if (v22)
    {
      uint64_t v22 = 0;
      while (*(unsigned __int16 *)(a2 + 2 + 16 * v21 + 2 * v22++))
        ;
    }
    if (v3 >= (int)v22) {
      break;
    }
    int v24 = *(char *)(a2 + 16 * v21 + 14);
    int v6 = v24;
    if (v24 < 0) {
      return 0;
    }
  }
  *((_DWORD *)a1 + 6) = v7 - v22;
  return *(char *)(a2 + 16 * v21 + 15);
}

uint64_t morphun::analysis::stemmer::eq_s_b(uint64_t *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v3 = *((int *)a1 + 6);
  if ((int)v3 - *((_DWORD *)a1 + 8) < (int)a3) {
    return 0;
  }
  if (a3)
  {
    unint64_t v5 = *((unsigned __int8 *)a1 + 23);
    BOOL v6 = (v5 & 0x80u) != 0;
    if ((v5 & 0x80u) != 0) {
      unint64_t v5 = a1[1];
    }
    uint64_t v7 = a3;
    if (v6) {
      int v8 = (uint64_t *)*a1;
    }
    else {
      int v8 = a1;
    }
    uint64_t v9 = -a3;
    uint64_t v10 = (uint64_t)v8 + 2 * v3;
    do
    {
      if (v5 <= v3 + v9) {
        std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
      }
      if (!v9) {
        std::__throw_out_of_range[abi:ne180100]("string_view::at");
      }
      if (*(unsigned __int16 *)(v10 + 2 * v9) != *a2) {
        return 0;
      }
      ++a2;
      ++v9;
    }
    while (--v7);
  }
  *((_DWORD *)a1 + 6) = v3 - a3;
  return 1;
}

void morphun::dialog::language::HeCommonConceptFactory::quantifiedJoin(uint64_t a1@<X0>, uint64_t a2@<X1>, const morphun::dialog::SpeakableString *a3@<X2>, int a4@<W4>, morphun::dialog::SpeakableString *a5@<X8>)
{
  uint64_t v10 = a1 + 752;
  uint64_t v11 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a3 + 32))(a3);
  int v12 = *(char *)(v11 + 23);
  if (v12 >= 0) {
    uint64_t v13 = (unsigned __int16 *)v11;
  }
  else {
    uint64_t v13 = *(unsigned __int16 **)v11;
  }
  if (v12 >= 0) {
    unint64_t v14 = *(unsigned __int8 *)(v11 + 23);
  }
  else {
    unint64_t v14 = *(void *)(v11 + 8);
  }
  if ((void *)(a1 + 760) == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v10, v13, v14))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
    morphun::dialog::SpeakableString::SpeakableString(v17, (long long *)__p);
    if (a4 == 1)
    {
      morphun::dialog::SpeakableString::operator+((uint64_t)a3, (uint64_t)v17, v18);
      morphun::dialog::SpeakableString::operator+((uint64_t)v18, a2, a5);
    }
    else
    {
      morphun::dialog::SpeakableString::operator+(a2, (uint64_t)v17, v18);
      morphun::dialog::SpeakableString::operator+((uint64_t)v18, (uint64_t)a3, a5);
    }
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    morphun::dialog::SpeakableString::SpeakableString(a5, a3);
  }
}

void sub_1D2C66EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::HeCommonConceptFactory::quantify(morphun::dialog::language::HeCommonConceptFactory *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a3);
  uint64_t v6 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, void))(*(void *)a3 + 104))(a3, *((void *)this + 97));
  memset(&v33, 0, sizeof(v33));
  morphun::dialog::SpeakableString::SpeakableString(&v34, (long long *)&v33);
  if (!v6) {
    goto LABEL_59;
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
  uint64_t v8 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v7);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 23);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *(void *)(v7 + 8);
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 23);
  int v12 = (char)v11;
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *(void *)(v8 + 8);
  }
  if (v9 == v11)
  {
    if (!v9)
    {
LABEL_16:
      if (morphun::dialog::language::HeCommonConceptFactory::isDefinite(this, a3))
      {
        if (*((_DWORD *)a2 + 4) == 1) {
          uint64_t v15 = (uint64_t)*((double *)a2 + 1);
        }
        else {
          uint64_t v15 = *((void *)a2 + 1);
        }
        if (v15 == 1)
        {
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "1");
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, byte_1D2EC201E);
          morphun::dialog::SpeakableString::SpeakableString((uint64_t)&v33, (long long *)&__dst, (unsigned __int16 *)__p);
          morphun::dialog::SpeakableString::operator=((uint64_t)&v34, (uint64_t)&v33);
          goto LABEL_42;
        }
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
        (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(void *)a2 + 200))(&v33, a2, &__dst);
        morphun::dialog::SpeakableString::operator=((uint64_t)&v34, (uint64_t)&v33);
      }
      else
      {
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"cardinal-masculine");
        (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(void *)a2 + 200))(&v33, a2, &__dst);
        morphun::dialog::SpeakableString::operator=((uint64_t)&v34, (uint64_t)&v33);
      }
LABEL_48:
      goto LABEL_49;
    }
    if (v12 >= 0) {
      uint64_t v13 = (unsigned __int16 *)v8;
    }
    else {
      uint64_t v13 = *(unsigned __int16 **)v8;
    }
    if (v10 >= 0) {
      unint64_t v14 = (unsigned __int16 *)v7;
    }
    else {
      unint64_t v14 = *(unsigned __int16 **)v7;
    }
    while (*v13 == *v14)
    {
      ++v14;
      ++v13;
      if (!--v9) {
        goto LABEL_16;
      }
    }
  }
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
  uint64_t v17 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v16);
  uint64_t v18 = *(unsigned __int8 *)(v16 + 23);
  int v19 = (char)v18;
  if ((v18 & 0x80u) != 0) {
    uint64_t v18 = *(void *)(v16 + 8);
  }
  uint64_t v20 = *(unsigned __int8 *)(v17 + 23);
  int v21 = (char)v20;
  if ((v20 & 0x80u) != 0) {
    uint64_t v20 = *(void *)(v17 + 8);
  }
  if (v18 != v20) {
    goto LABEL_59;
  }
  if (v18)
  {
    if (v21 >= 0) {
      uint64_t v22 = (unsigned __int16 *)v17;
    }
    else {
      uint64_t v22 = *(unsigned __int16 **)v17;
    }
    if (v19 >= 0) {
      UChar32 v23 = (unsigned __int16 *)v16;
    }
    else {
      UChar32 v23 = *(unsigned __int16 **)v16;
    }
    while (*v22 == *v23)
    {
      ++v23;
      ++v22;
      if (!--v18) {
        goto LABEL_36;
      }
    }
LABEL_59:
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "U");
    if (v6) {
      (**(void (***)(void **__return_ptr, uint64_t))v6)(__p, v6);
    }
    else {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
    }
    if ((v31 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v28 = __p;
    }
    else {
      std::basic_string<char16_t>::size_type v28 = (void **)__p[0];
    }
    if ((v31 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v29 = v31;
    }
    else {
      std::basic_string<char16_t>::size_type v29 = (std::basic_string<char16_t>::size_type)__p[1];
    }
    std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v28, v29);
    std::basic_string<char16_t> v33 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    morphun::exception::IllegalStateException::IllegalStateException((uint64_t)exception, (long long *)&v33);
  }
LABEL_36:
  if (morphun::dialog::language::HeCommonConceptFactory::isDefinite(this, a3))
  {
    if (*((_DWORD *)a2 + 4) == 1) {
      uint64_t v24 = (uint64_t)*((double *)a2 + 1);
    }
    else {
      uint64_t v24 = *((void *)a2 + 1);
    }
    if (v24 == 1)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "1");
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, byte_1D2EC2052);
      morphun::dialog::SpeakableString::SpeakableString((uint64_t)&v33, (long long *)&__dst, (unsigned __int16 *)__p);
      morphun::dialog::SpeakableString::operator=((uint64_t)&v34, (uint64_t)&v33);
LABEL_42:
      if ((char)v31 < 0) {
        operator delete(__p[0]);
      }
LABEL_49:
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      uint64_t v25 = (uint64_t)*((double *)a2 + 1);
      if (*((_DWORD *)a2 + 4) != 1) {
        uint64_t v25 = *((void *)a2 + 1);
      }
      if ((unint64_t)(v25 - 1) <= 1)
      {
        if (v36) {
          BOOL v26 = v36;
        }
        else {
          BOOL v26 = (long long *)&v35;
        }
        morphun::dialog::SpeakableString::SpeakableString((uint64_t)&v33, v26, (unsigned __int16 *)v26);
        morphun::dialog::SpeakableString::operator=((uint64_t)&v34, (uint64_t)&v33);
      }
      morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, (const morphun::dialog::SpeakableString *)&v34, a3);
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"construct-feminine");
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(void *)a2 + 200))(&v33, a2, &__dst);
    morphun::dialog::SpeakableString::operator=((uint64_t)&v34, (uint64_t)&v33);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(void *)a2 + 200))(&v33, a2, &__dst);
    morphun::dialog::SpeakableString::operator=((uint64_t)&v34, (uint64_t)&v33);
  }
  goto LABEL_48;
}

void sub_1D2C674C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 16))(v29);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SemanticFeatureConceptBase const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C67698(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::language::HeCommonConceptFactory::isDefinite(morphun::dialog::language::HeCommonConceptFactory *this, const morphun::dialog::SemanticFeatureConceptBase *a2)
{
  npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a2);
  uint64_t result = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, void))(*(void *)a2 + 48))(a2, *((void *)this + 98));
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)result);
    int v7 = *(char *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if (v7 >= 0) {
      uint64_t v8 = *(unsigned __int8 *)(v6 + 23);
    }
    uint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    int v10 = (char)v9;
    if ((v9 & 0x80u) != 0) {
      uint64_t v9 = *(void *)(v5 + 8);
    }
    if (v8 == v9)
    {
      if (v8)
      {
        if (v10 >= 0) {
          uint64_t v11 = (unsigned __int16 *)v5;
        }
        else {
          uint64_t v11 = *(unsigned __int16 **)v5;
        }
        if (v7 >= 0) {
          int v12 = (unsigned __int16 *)v6;
        }
        else {
          int v12 = *(unsigned __int16 **)v6;
        }
        uint64_t v13 = v8 - 1;
        do
        {
          int v15 = *v12++;
          int v14 = v15;
          int v17 = *v11++;
          int v16 = v17;
          BOOL v19 = v13-- != 0;
          uint64_t result = v16 == v14;
        }
        while (v16 == v14 && v19);
      }
      else
      {
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void morphun::dialog::language::HeCommonConceptFactory::createAndList()
{
}

void sub_1D2C678A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  morphun::dialog::SemanticConceptList::~SemanticConceptList(v15, (void ***)&off_1F2A05EB8);
  MEMORY[0x1D942B8B0](v15, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::HeCommonConceptFactory::createOrList()
{
}

void sub_1D2C679E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::HeCommonConceptFactory::~HeCommonConceptFactory(morphun::dialog::language::HeCommonConceptFactory *this)
{
  morphun::dialog::language::HeCommonConceptFactory::~HeCommonConceptFactory(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  *(void *)this = &off_1F2A0A6B8;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 95));

  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl((void **)this, (void **)&off_1F2A05868);
}

void sub_1D2C67B10(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::u16string_view>::__emplace_unique_key_args<std::u16string_view,std::u16string_view const&>(uint64_t **a1, unsigned __int16 *a2, unint64_t a3, _OWORD *a4)
{
  uint64_t result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, &v10, a2, a3);
  if (!*result)
  {
    int v7 = (uint64_t **)result;
    uint64_t v8 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v8 + 2) = *a4;
    uint64_t v9 = v10;
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v9, v7, v8);
  }
  return result;
}

void morphun::analysis::SvAnalyzer::addWordNormalizationFilter(morphun::analysis::SvAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C67C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::SvAnalyzer::addStopFilter(morphun::analysis::SvAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C67D4C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::SvAnalyzer::~SvAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06FC0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06FC0);
}

void morphun::dialog::GrammaticalCountConcept::lessThanOrEqualTo(morphun::dialog::GrammaticalCountConcept *this, double a2, const morphun::dialog::DucConcept *a3)
{
}

void sub_1D2C67EA4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::GrammaticalCountConcept const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C67F18(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::GrammaticalCountConcept *a2)
{
  *(void *)this = &off_1F2A093A0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  std::vector<morphun::dialog::DucConcept const*>::__init_with_size[abi:ne180100]<morphun::dialog::DucConcept const**,morphun::dialog::DucConcept const**>((void *)this + 1, *((const void **)a2 + 1), *((void *)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((void *)this + 5) = *((void *)a2 + 5);
  std::map<double,morphun::dialog::DucConcept const*>::map[abi:ne180100]((uint64_t)this + 48, (void *)a2 + 6);
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__init_with_size[abi:ne180100]<std::shared_ptr<morphun::dialog::DucConcept>*,std::shared_ptr<morphun::dialog::DucConcept>*>((void *)this + 9, *((void **)a2 + 9), *((void **)a2 + 10), (uint64_t)(*((void *)a2 + 10) - *((void *)a2 + 9)) >> 4);
  return this;
}

void sub_1D2C67FD4(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v1 + 56));
  int v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

void *std::vector<morphun::dialog::DucConcept const*>::__init_with_size[abi:ne180100]<morphun::dialog::DucConcept const**,morphun::dialog::DucConcept const**>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D2C68060(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::map<double,morphun::dialog::DucConcept const*>::map[abi:ne180100](uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = (uint64_t **)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  int v4 = a2 + 1;
  uint64_t v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      uint64_t v6 = (double *)(v5 + 4);
      uint64_t v7 = *(uint64_t **)(a1 + 8);
      size_t v8 = v3;
      if (*(uint64_t ***)a1 == v3) {
        goto LABEL_8;
      }
      uint64_t v9 = *(void *)(a1 + 8);
      uint64_t v10 = v3;
      if (v7)
      {
        do
        {
          size_t v8 = (uint64_t **)v9;
          uint64_t v9 = *(void *)(v9 + 8);
        }
        while (v9);
      }
      else
      {
        do
        {
          size_t v8 = (uint64_t **)v10[2];
          BOOL v11 = *v8 == (uint64_t *)v10;
          uint64_t v10 = v8;
        }
        while (v11);
      }
      double v12 = *v6;
      if (*((double *)v8 + 4) < *v6)
      {
LABEL_8:
        if (v7) {
          uint64_t v13 = v8;
        }
        else {
          uint64_t v13 = v3;
        }
        if (v7) {
          int v14 = v8 + 1;
        }
        else {
          int v14 = v3;
        }
      }
      else
      {
        uint64_t v13 = v3;
        int v14 = v3;
        if (v7)
        {
          int v14 = v3;
          while (1)
          {
            while (1)
            {
              uint64_t v13 = (uint64_t **)v7;
              double v18 = *((double *)v7 + 4);
              if (v12 >= v18) {
                break;
              }
              uint64_t v7 = (uint64_t *)*v7;
              int v14 = v13;
              if (!*v13) {
                goto LABEL_15;
              }
            }
            if (v18 >= v12) {
              break;
            }
            int v14 = (uint64_t **)(v7 + 1);
            uint64_t v7 = (uint64_t *)v7[1];
            if (!v7) {
              goto LABEL_15;
            }
          }
        }
      }
      if (!*v14)
      {
LABEL_15:
        uint64_t v15 = (uint64_t *)operator new(0x30uLL);
        *((_OWORD *)v15 + 2) = *(_OWORD *)v6;
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v13, v14, v15);
      }
      int v16 = (void *)v5[1];
      if (v16)
      {
        do
        {
          int v17 = v16;
          int v16 = (void *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          int v17 = (void *)v5[2];
          BOOL v11 = *v17 == (void)v5;
          uint64_t v5 = v17;
        }
        while (!v11);
      }
      uint64_t v5 = v17;
    }
    while (v17 != v4);
  }
  return a1;
}

void sub_1D2C681EC(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void *std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__init_with_size[abi:ne180100]<std::shared_ptr<morphun::dialog::DucConcept>*,std::shared_ptr<morphun::dialog::DucConcept>*>(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >> 60) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = result;
    uint64_t result = std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(a4);
    void *v6 = result;
    v6[1] = result;
    for (v6[2] = &result[2 * v7]; a2 != a3; a2 += 2)
    {
      uint64_t *result = *a2;
      uint64_t v8 = a2[1];
      result[1] = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      }
      result += 2;
    }
    v6[1] = result;
  }
  return result;
}

void sub_1D2C682A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    int v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v6);
        }
        v4 -= 16;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

char *std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)operator new(8 * a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * a2];
  return result;
}

void morphun::dialog::GrammaticalCountConcept::many(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
}

void sub_1D2C683EC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::GrammaticalCountConcept::few(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
}

void sub_1D2C68478(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::GrammaticalCountConcept::two(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
}

void sub_1D2C68504(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::GrammaticalCountConcept::zero(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::DucConcept *a2)
{
}

void sub_1D2C68590(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountConcept::toSpeakableString(morphun::dialog::GrammaticalCountConcept *this)
{
  double v1 = *((double *)this + 5);
  uint64_t v2 = this;
  double v3 = (double)(uint64_t)v1;
  BOOL v4 = v1 == 0.0;
  int v5 = *((_DWORD *)this + 8);
  if (v1 != v3) {
    BOOL v4 = 0;
  }
  if (v5) {
    BOOL v6 = !v4;
  }
  else {
    BOOL v6 = 0;
  }
  if (!v6)
  {
    unsigned int v7 = 0;
    goto LABEL_12;
  }
  if (v5 == 1)
  {
LABEL_11:
    unsigned int v7 = 1;
    goto LABEL_12;
  }
  if (v1 != v3)
  {
    if (v5 != 2) {
      goto LABEL_21;
    }
LABEL_16:
    unsigned int v7 = 2;
    goto LABEL_12;
  }
  if (v1 == 1.0) {
    goto LABEL_11;
  }
  if (v1 == 2.0 || v5 == 2) {
    goto LABEL_16;
  }
LABEL_21:
  uint64_t RangedValue = morphun::dialog::GrammaticalCountConcept::getRangedValue(this);
  if (!RangedValue)
  {
    this = v2;
    if (v5 == 4)
    {
      unsigned int v7 = 4;
    }
    else if (v5 == 3)
    {
      unsigned int v7 = 3;
    }
    else
    {
      unsigned int v7 = 5;
    }
LABEL_12:
    return morphun::dialog::GrammaticalCountConcept::chooseDefault(this, v7);
  }
  BOOL v11 = *(uint64_t (**)(void))(*(void *)RangedValue + 24);

  return v11();
}

uint64_t morphun::dialog::GrammaticalCountConcept::chooseDefault(morphun::dialog::GrammaticalCountConcept *this, unsigned int a2)
{
  uint64_t v3 = *((void *)this + 1);
  uint64_t RangedValue = *(void *)(v3 + 8 * a2);
  if (!RangedValue)
  {
    uint64_t RangedValue = morphun::dialog::GrammaticalCountConcept::getRangedValue(this);
    if (!RangedValue)
    {
      uint64_t RangedValue = *(void *)(v3 + 8 * *((unsigned int *)this + 8));
      if (!RangedValue)
      {
        uint64_t RangedValue = *(void *)(v3 + 40);
        if (!RangedValue)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
      }
    }
  }
  int v5 = *(uint64_t (**)(void))(*(void *)RangedValue + 24);

  return v5();
}

void sub_1D2C6879C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountConcept::getRangedValue(morphun::dialog::GrammaticalCountConcept *this)
{
  if (!*((void *)this + 8)) {
    return 0;
  }
  double v1 = (morphun::dialog::GrammaticalCountConcept *)*((void *)this + 6);
  if (v1 == (morphun::dialog::GrammaticalCountConcept *)((char *)this + 56)) {
    return 0;
  }
  double v2 = fabs(*((double *)this + 5));
  while (v2 > *((double *)v1 + 4))
  {
    uint64_t v3 = (morphun::dialog::GrammaticalCountConcept *)*((void *)v1 + 1);
    if (v3)
    {
      do
      {
        BOOL v4 = v3;
        uint64_t v3 = *(morphun::dialog::GrammaticalCountConcept **)v3;
      }
      while (v3);
    }
    else
    {
      do
      {
        BOOL v4 = (morphun::dialog::GrammaticalCountConcept *)*((void *)v1 + 2);
        BOOL v5 = *(void *)v4 == (void)v1;
        double v1 = v4;
      }
      while (!v5);
    }
    double v1 = v4;
    if (v4 == (morphun::dialog::GrammaticalCountConcept *)((char *)this + 56)) {
      return 0;
    }
  }
  return *((void *)v1 + 5);
}

void morphun::dialog::GrammaticalCountConcept::~GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::GrammaticalCountConcept::~GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 56)) = a2[1];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[2];
  BOOL v5 = (void **)((char *)this + 72);
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__destroy_vector::operator()[abi:ne180100](&v5);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 7));
  BOOL v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }
}

void *morphun::dialog::GrammaticalCountConcept::toString@<X0>(morphun::dialog::GrammaticalCountConcept *this@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void (***)(void))(*(uint64_t (**)(morphun::dialog::GrammaticalCountConcept *))(*(void *)this + 24))(this);
  if (v3)
  {
    BOOL v4 = v3;
    (**v3)(v3);
    BOOL v5 = (*v4)[2];
    return (void *)((uint64_t (*)(void))v5)(v4);
  }
  else
  {
    return std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "(");
  }
}

void sub_1D2C68A64(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(uint64_t a1, uint64_t *a2, int a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v11 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v11 - 56)) = a2[1];
  *(void *)(a1 + *(void *)(*(void *)a1 - 40)) = a2[2];
  std::vector<morphun::dialog::DucConcept const*>::vector((void *)(a1 + 8));
  *(_DWORD *)(a1 + 32) = a3;
  *(double *)(a1 + 40) = a6;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = a1 + 56;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(*(void *)(a1 + 8) + 8) = a4;
  *(void *)(*(void *)(a1 + 8) + 40) = a5;
  return a1;
}

void *std::vector<morphun::dialog::DucConcept const*>::vector(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  double v2 = operator new(0x30uLL);
  a1[1] = v2 + 3;
  a1[2] = v2 + 3;
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *a1 = v2;
  return a1;
}

uint64_t morphun::dialog::GrammaticalCountConcept::setChoosableResult(uint64_t result, unsigned int a2, uint64_t a3)
{
  *(void *)(*(void *)(result + 8) + 8 * a2) = a3;
  return result;
}

uint64_t morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)a1 = &off_1F2A093A0;
  std::vector<morphun::dialog::DucConcept const*>::vector((void *)(a1 + 8));
  *(_DWORD *)(a1 + 32) = a2;
  *(double *)(a1 + 40) = a5;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = a1 + 56;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(*(void *)(a1 + 8) + 8) = a3;
  *(void *)(*(void *)(a1 + 8) + 40) = a4;
  return a1;
}

morphun::dialog::GrammaticalCountConcept *morphun::dialog::GrammaticalCountConcept::GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this, const morphun::dialog::GrammaticalCountConcept *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 56)) = *((void *)a2 + 1);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 2);
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  std::vector<morphun::dialog::DucConcept const*>::__init_with_size[abi:ne180100]<morphun::dialog::DucConcept const**,morphun::dialog::DucConcept const**>((void *)this + 1, *(const void **)(a3 + 8), *(void *)(a3 + 16), (uint64_t)(*(void *)(a3 + 16) - *(void *)(a3 + 8)) >> 3);
  *((_DWORD *)this + 8) = *(_DWORD *)(a3 + 32);
  *((void *)this + 5) = *(void *)(a3 + 40);
  std::map<double,morphun::dialog::DucConcept const*>::map[abi:ne180100]((uint64_t)this + 48, (void *)(a3 + 48));
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__init_with_size[abi:ne180100]<std::shared_ptr<morphun::dialog::DucConcept>*,std::shared_ptr<morphun::dialog::DucConcept>*>((void *)this + 9, *(void **)(a3 + 72), *(void **)(a3 + 80), (uint64_t)(*(void *)(a3 + 80) - *(void *)(a3 + 72)) >> 4);
  return this;
}

void sub_1D2C68E20(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v1 + 56));
  BOOL v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::GrammaticalCountConcept::~GrammaticalCountConcept(morphun::dialog::GrammaticalCountConcept *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::GrammaticalCountConcept::~GrammaticalCountConcept(void *a1)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

morphun::dialog::DucConcept *morphun::dialog::GrammaticalCountConcept::adoptOwnership(morphun::dialog::GrammaticalCountConcept *this, morphun::dialog::DucConcept *a2)
{
  if (a2)
  {
    BOOL v4 = (morphun::dialog::DucConcept **)*((void *)this + 9);
    uint64_t v5 = (morphun::dialog::DucConcept **)*((void *)this + 10);
    if (v4 == v5)
    {
LABEL_6:
      unint64_t v7 = *((void *)this + 11);
      if ((unint64_t)v5 < v7) {
        std::shared_ptr<morphun::dialog::DucConcept>::shared_ptr[abi:ne180100]<morphun::dialog::DucConcept,void>(*((void **)this + 10), (uint64_t)a2);
      }
      uint64_t v8 = ((char *)v5 - (char *)v4) >> 4;
      if (!((unint64_t)(v8 + 1) >> 60))
      {
        uint64_t v9 = v7 - (void)v4;
        uint64_t v10 = v9 >> 3;
        if (v9 >> 3 <= (unint64_t)(v8 + 1)) {
          uint64_t v10 = v8 + 1;
        }
        if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v11 = v10;
        }
        double v18 = (char *)this + 88;
        if (v11) {
          unint64_t v11 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v11);
        }
        else {
          uint64_t v12 = 0;
        }
        unint64_t v14 = v11;
        uint64_t v15 = (void *)(v11 + 16 * v8);
        int v16 = v15;
        unint64_t v17 = v11 + 16 * v12;
        std::shared_ptr<morphun::dialog::DucConcept>::shared_ptr[abi:ne180100]<morphun::dialog::DucConcept,void>(v15, (uint64_t)a2);
      }
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    BOOL v6 = (morphun::dialog::DucConcept **)*((void *)this + 9);
    while (*v6 != a2)
    {
      v6 += 2;
      if (v6 == v5) {
        goto LABEL_6;
      }
    }
  }
  return a2;
}

void sub_1D2C6909C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::shared_ptr<morphun::dialog::DucConcept>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::shared_ptr<morphun::dialog::DucConcept>::shared_ptr[abi:ne180100]<morphun::dialog::DucConcept,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1D2C69124(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<std::shared_ptr<morphun::dialog::DucConcept>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    *(void *)(a1 + 16) = v2 - 16;
    BOOL v4 = *(std::__shared_weak_count **)(v2 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 16;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__shared_ptr_pointer<morphun::dialog::DucConcept *,std::shared_ptr<morphun::dialog::DucConcept>::__shared_ptr_default_delete<morphun::dialog::DucConcept,morphun::dialog::DucConcept>,std::allocator<morphun::dialog::DucConcept>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), 0x80000001D2D70879)) {
    return a1 + 24;
  }
  else {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<morphun::dialog::DucConcept *,std::shared_ptr<morphun::dialog::DucConcept>::__shared_ptr_default_delete<morphun::dialog::DucConcept,morphun::dialog::DucConcept>,std::allocator<morphun::dialog::DucConcept>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

void std::__shared_ptr_pointer<morphun::dialog::DucConcept *,std::shared_ptr<morphun::dialog::DucConcept>::__shared_ptr_default_delete<morphun::dialog::DucConcept,morphun::dialog::DucConcept>,std::allocator<morphun::dialog::DucConcept>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1D942B8B0);
}

uint64_t virtual thunk to'morphun::dialog::GrammaticalCountConcept::toSpeakableString(morphun::dialog::GrammaticalCountConcept *this)
{
  return morphun::dialog::GrammaticalCountConcept::toSpeakableString((morphun::dialog::GrammaticalCountConcept *)((char *)this + *(void *)(*(void *)this - 48)));
}

void *virtual thunk to'morphun::dialog::GrammaticalCountConcept::toString@<X0>(morphun::dialog::GrammaticalCountConcept *this@<X0>, void *a2@<X8>)
{
  return morphun::dialog::GrammaticalCountConcept::toString((morphun::dialog::GrammaticalCountConcept *)((char *)this + *(void *)(*(void *)this - 24)), a2);
}

void *morphun::analysis::stemmer::FiLemmaFilter::reset(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 18) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  *((void *)this + 19) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)this);
  *((void *)this + 17) = result;
  return result;
}

void morphun::analysis::stemmer::FiLemmaFilter::end(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  uint64_t v2 = *((void *)this + 17);
  if (v2)
  {
    (*(void (**)(uint64_t, void, char *))(*(void *)v2 + 56))(v2, *((unsigned int *)this + 48), (char *)this + 200);
    *((void *)this + 26) = *((void *)this + 25);
    std::vector<int>::shrink_to_fit((std::vector<int> *)((char *)this + 200));
    BOOL v4 = (int *)*((void *)this + 29);
    uint64_t v3 = (std::vector<int> *)((char *)this + 232);
    v3->__end_ = v4;
    std::vector<int>::shrink_to_fit(v3);
  }
}

void std::vector<int>::shrink_to_fit(std::vector<int> *this)
{
  value = this->__end_cap_.__value_;
  begin = this->__begin_;
  std::vector<int>::pointer end = this->__end_;
  unint64_t v5 = end - begin;
  if (v5 >= value - begin) {
    return;
  }
  if (end == begin)
  {
    uint64_t v10 = 0;
    uint64_t v8 = (int *)(4 * v5);
    goto LABEL_8;
  }
  BOOL v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(end - begin);
  std::vector<int>::pointer v7 = this->__begin_;
  begin = this->__end_;
  uint64_t v8 = (int *)&v6[4 * v5];
  uint64_t v10 = (int *)&v6[4 * v9];
  if (begin == this->__begin_)
  {
LABEL_8:
    unint64_t v11 = v8;
    goto LABEL_9;
  }
  unint64_t v11 = v8;
  do
  {
    int v12 = *--begin;
    *--unint64_t v11 = v12;
  }
  while (begin != v7);
  begin = v7;
LABEL_9:
  this->__begin_ = v11;
  this->__end_ = v8;
  this->__end_cap_.__value_ = v10;
  if (begin)
  {
    operator delete(begin);
  }
}

uint64_t morphun::analysis::stemmer::FiLemmaFilter::incrementToken(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  memset(&__str, 0, sizeof(__str));
  uint64_t v2 = (std::basic_string<char16_t> *)((char *)this + 160);
  if (*((char *)this + 183) < 0)
  {
    if (*((void *)this + 21))
    {
LABEL_3:
      std::basic_string<char16_t>::operator=(&__str, v2);
      uint64_t v3 = *((unsigned int *)this + 46);
      uint64_t v4 = *((unsigned int *)this + 47);
      uint64_t v5 = *((void *)this + 17);
      if (v5) {
        (*(void (**)(uint64_t, void, char *))(*(void *)v5 + 56))(v5, *((unsigned int *)this + 48), (char *)this + 200);
      }
      goto LABEL_5;
    }
  }
  else if (*((unsigned char *)this + 183))
  {
    goto LABEL_3;
  }
  uint64_t v16 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v16 + 24))(v16))
  {
    uint64_t v23 = 0;
    goto LABEL_71;
  }
  unint64_t v17 = (void *)*((void *)this + 15);
  npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v17);
  std::basic_string<char16_t>::operator=<morphun::analysis::tokenattributes::CharTermAttribute,0>(&__str, v17);
  uint64_t v18 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 16));
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 56))(v18);
  uint64_t v19 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 16));
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 72))(v19);
  uint64_t v20 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 16));
  *((_DWORD *)this + 46) = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 56))(v20);
  uint64_t v21 = *((void *)this + 17);
  if (v21)
  {
    *((_DWORD *)this + 48) = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 64))(v21);
    uint64_t v22 = (*(uint64_t (**)(void))(**((void **)this + 17) + 72))(*((void *)this + 17));
    if ((morphun::analysis::stemmer::FiLemmaFilter *)((char *)this + 200) != (morphun::analysis::stemmer::FiLemmaFilter *)v22) {
      std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 200, *(char **)v22, *(void *)(v22 + 8), (uint64_t)(*(void *)(v22 + 8) - *(void *)v22) >> 2);
    }
  }
LABEL_5:
  uint64_t v6 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 24))(v6))
  {
    uint64_t v8 = (void *)*((void *)this + 15);
    npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v8);
    std::basic_string<char16_t>::operator=<morphun::analysis::tokenattributes::CharTermAttribute,0>(v2, v8);
    uint64_t v9 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 16));
    *((_DWORD *)this + 47) = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 72))(v9);
    uint64_t v10 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 16));
    *((_DWORD *)this + 46) = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 56))(v10);
    uint64_t v11 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 16));
    int v12 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)(*(uint64_t (**)(uint64_t))(*(void *)v11 + 56))(v11);
    if (v4 == v12)
    {
      uint64_t v13 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIX_SPLIT(v12);
      if (*((char *)this + 183) < 0)
      {
        uint64_t v15 = (unsigned __int16 *)*((void *)this + 20);
        unint64_t v14 = *((void *)this + 21);
      }
      else
      {
        unint64_t v14 = *((unsigned __int8 *)this + 183);
        uint64_t v15 = (unsigned __int16 *)v2;
      }
      uint64_t v24 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v13, v15, v14);
      if ((morphun::tokenizer::locale::fi::FiSuffixSplit *)(morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIX_SPLIT(v24)
                                                           + 8) != v24)
      {
        int v25 = *((char *)this + 183);
        if (v25 >= 0) {
          BOOL v26 = (const std::basic_string<char16_t>::value_type *)v2;
        }
        else {
          BOOL v26 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 20);
        }
        if (v25 >= 0) {
          std::basic_string<char16_t>::size_type v27 = *((unsigned __int8 *)this + 183);
        }
        else {
          std::basic_string<char16_t>::size_type v27 = *((void *)this + 21);
        }
        std::basic_string<char16_t>::append(&__str, v26, v27);
      }
    }
  }
  else if (*((char *)this + 183) < 0)
  {
    **((_WORD **)this + 20) = 0;
    *((void *)this + 21) = 0;
  }
  else
  {
    *((_WORD *)this + 80) = 0;
    *((unsigned char *)this + 183) = 0;
  }
  uint64_t v28 = *((void *)this + 17);
  if (v28)
  {
    *((_DWORD *)this + 56) = (*(uint64_t (**)(uint64_t))(*(void *)v28 + 64))(v28);
    uint64_t v29 = (*(uint64_t (**)(void))(**((void **)this + 17) + 72))(*((void *)this + 17));
    if ((morphun::analysis::stemmer::FiLemmaFilter *)((char *)this + 232) != (morphun::analysis::stemmer::FiLemmaFilter *)v29) {
      std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 232, *(char **)v29, *(void *)(v29 + 8), (uint64_t)(*(void *)(v29 + 8) - *(void *)v29) >> 2);
    }
    (*(void (**)(void, void, char *))(**((void **)this + 17) + 56))(*((void *)this + 17), *((unsigned int *)this + 48), (char *)this + 200);
    *((_DWORD *)this + 48) = *((_DWORD *)this + 56);
    std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 200, *((char **)this + 29), *((void *)this + 30), (uint64_t)(*((void *)this + 30) - *((void *)this + 29)) >> 2);
  }
  uint64_t v30 = *((void *)this + 13);
  if (!v30)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::analysis::fi::FinnishMorphology::getInflectionAnalysis((morphun::lang::StringFilterUtil *)&v60, v30, &__str, 0, v7);
  if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v58, v61.__r_.__value_.__l.__data_, v61.__r_.__value_.__l.__size_);
  }
  else {
    std::basic_string<char16_t> v58 = v61;
  }
  morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::~FinnishMorphology_InflectionAnalysis((void **)&v60);
  std::basic_string<char16_t>::size_type size = HIBYTE(v58.__r_.__value_.__r.__words[2]);
  if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v58.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    std::basic_string<char16_t> v32 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 15));
    std::basic_string<char16_t> v33 = (std::basic_string<char16_t> *)((char *)v32 + *(void *)(*v32 - 96));
    p_str = &v58;
  }
  else
  {
    p_str = &__str;
    std::basic_string<char16_t> v33 = &v58;
  }
  std::basic_string<char16_t>::operator=(v33, p_str);
  if (*((void *)this + 18))
  {
    std::basic_string<char16_t>::size_type v60 = 0;
    uint64_t v35 = (v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v58
        : (std::basic_string<char16_t> *)v58.__r_.__value_.__r.__words[0];
    uint64_t v36 = (v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v58.__r_.__value_.__r.__words[2])
        : v58.__r_.__value_.__l.__size_;
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v60, (const UChar *)v35, v36))
    {
      uint64_t v37 = *((void *)this + 18);
      if (!v37)
      {
        char v52 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v52);
      }
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v37 + 64))(v37, v60);
    }
  }
  if (*((void *)this + 19))
  {
    std::basic_string<char16_t>::size_type v57 = 0;
    if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v38 = &v58;
    }
    else {
      std::basic_string<char16_t> v38 = (std::basic_string<char16_t> *)v58.__r_.__value_.__r.__words[0];
    }
    if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v39 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v39 = v58.__r_.__value_.__l.__size_;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v57, (const UChar *)v38, v39);
    std::basic_string<char16_t>::size_type v56 = 0;
    if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v40 = &v58;
    }
    else {
      int v40 = (std::basic_string<char16_t> *)v58.__r_.__value_.__r.__words[0];
    }
    if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v41 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v41 = v58.__r_.__value_.__l.__size_;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v56, (const UChar *)v40, v41);
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    std::basic_string<char16_t>::size_type v62 = &v55;
    int v42 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(1uLL);
    std::basic_string<char16_t>::size_type v60 = (uint64_t *)v42;
    v61.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v42;
    v61.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v42;
    v61.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&v42[2 * v43];
    std::basic_string<char16_t>::size_type v45 = v56;
    std::basic_string<char16_t>::size_type v44 = v57;
    v42->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A0F180;
    v42->__r_.__value_.__l.__size_ = v44;
    v42->__r_.__value_.__r.__words[2] = v45;
    if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v42 + 1, v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
      int v42 = (std::basic_string<char16_t> *)v61.__r_.__value_.__l.__size_;
    }
    else
    {
      v42[1] = v58;
    }
    v61.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)&v42[2];
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer(&v53, &v60);
    uint64_t v46 = v54;
    std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&v60);
    uint64_t v47 = *((void *)this + 19);
    uint64_t v54 = v46;
    if (!v47)
    {
      uint64_t v51 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v51);
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v47 + 64))(v47, &v53);
    std::basic_string<char16_t>::size_type v60 = &v53;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&v60);
  }
  uint64_t v48 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v48 + 64))(v48, v3, v4);
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v58.__r_.__value_.__l.__data_);
  }
  uint64_t v23 = 1;
LABEL_71:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v23;
}

void sub_1D2C69BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
  __cxa_free_exception(v28);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::analysis::TokenStream>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C69CC4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::analysis::tokenattributes::CharTermAttribute>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C69D28(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::basic_string<char16_t>::operator=<morphun::analysis::tokenattributes::CharTermAttribute,0>(std::basic_string<char16_t> *a1, void *a2)
{
  uint64_t v2 = (const std::basic_string<char16_t>::value_type *)((char *)a2 + *(void *)(*a2 - 96));
  if (*((char *)v2 + 23) < 0)
  {
    uint64_t v4 = v2;
    uint64_t v2 = *(const std::basic_string<char16_t>::value_type **)v2;
    std::basic_string<char16_t>::size_type v3 = *((void *)v4 + 1);
  }
  else
  {
    std::basic_string<char16_t>::size_type v3 = *((unsigned __int8 *)v2 + 23);
  }
  return std::basic_string<char16_t>::__assign_external(a1, v2, v3);
}

uint64_t npc<morphun::analysis::tokenattributes::OffsetAttribute>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C69DBC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  std::vector<int>::pointer v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 2)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *std::vector<int>::pointer v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 1;
    if (v8 >> 1 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = std::vector<int>::__vallocate[abi:ne180100](v7, v11);
    uint64_t v13 = (char *)v7[1];
    int v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      uint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  int v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 2;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  uint64_t v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    uint64_t v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  morphun::tokenizer::locale::fi::FiSuffixSplit *v12 = &v9[v17];
  return result;
}

void std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a2[1];
  for (uint64_t i = 48; ; i -= 48)
  {
    uint64_t v8 = v6 + i;
    if (v4 + i - 48 == v5) {
      break;
    }
    uint64_t v9 = v4 + i - 96;
    std::allocator<morphun::analysis::tokenattributes::LemmaMapping>::construct[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping,morphun::analysis::tokenattributes::LemmaMapping const&>(v8 - 96, v9);
  }
  uint64_t v10 = v8 - 48;
  a2[1] = v10;
  uint64_t v11 = *a1;
  *a1 = v10;
  a2[1] = v11;
  uint64_t v12 = a1[1];
  a1[1] = a2[2];
  a2[2] = v12;
  uint64_t v13 = a1[2];
  a1[2] = a2[3];
  a2[3] = v13;
  *a2 = a2[1];
}

uint64_t std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(i - 48);
    *(void *)(a1 + 16) = i - 48;
    (*(void (**)(void))(v4 + 8))();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::allocator<morphun::analysis::tokenattributes::LemmaMapping>::construct[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping,morphun::analysis::tokenattributes::LemmaMapping const&>(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1F2A0F180;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v2 = (std::basic_string<char16_t> *)(a1 + 24);
  if (*(char *)(a2 + 47) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v2, *(const std::basic_string<char16_t>::value_type **)(a2 + 24), *(void *)(a2 + 32));
  }
  else
  {
    long long v3 = *(_OWORD *)(a2 + 24);
    v2->__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    *(_OWORD *)&v2->__r_.__value_.__l.__data_ = v3;
  }
}

char *std::vector<int>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void morphun::analysis::stemmer::FiLemmaFilter::~FiLemmaFilter(morphun::analysis::stemmer::FiLemmaFilter *this)
{
  uint64_t v2 = (void *)*((void *)this + 29);
  if (v2)
  {
    *((void *)this + 30) = v2;
    operator delete(v2);
  }
  long long v3 = (void *)*((void *)this + 25);
  if (v3)
  {
    *((void *)this + 26) = v3;
    operator delete(v3);
  }
  if (*((char *)this + 183) < 0) {
    operator delete(*((void **)this + 20));
  }
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07EA8);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  void *v3;
  uint64_t vars8;

  uint64_t v2 = (void *)*((void *)this + 29);
  if (v2)
  {
    *((void *)this + 30) = v2;
    operator delete(v2);
  }
  long long v3 = (void *)*((void *)this + 25);
  if (v3)
  {
    *((void *)this + 26) = v3;
    operator delete(v3);
  }
  if (*((char *)this + 183) < 0) {
    operator delete(*((void **)this + 20));
  }

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07EA8);
}

void morphun::dialog::SemanticUtils::to_constraintMap(morphun::dialog::SemanticUtils *this, const morphun::dialog::SemanticFeatureModel *a2, CFDictionaryRef theDict)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = (char *)this + 8;
  if (theDict)
  {
    context[0] = a2;
    context[1] = this;
    *(_OWORD *)std::basic_string<char16_t> __p = 0u;
    long long v6 = 0u;
    CFDictionaryApplyFunction(theDict, (CFDictionaryApplierFunction)convertSemanticFeatureAndString, context);
    if (*((void *)&v6 + 1))
    {
      exception = __cxa_allocate_exception(0x38uLL);
      morphun::exception::Throwable::Throwable((uint64_t)exception, (long long *)__p);
      void *exception = &unk_1F2A112F8;
    }
    if (SBYTE7(v6) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1D2C6A2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void ***a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  __cxa_free_exception(v18);
  if (a18 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*a10);
  _Unwind_Resume(a1);
}

void convertSemanticFeatureAndString(const __CFString *a1, const __CFString *a2, uint64_t *a3)
{
  morphun::util::CFUtils::to_u16string(&v13, a1);
  npc<morphun::dialog::ConstraintMap>((uint64_t)a3);
  uint64_t v5 = *a3;
  uint64_t v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(*a3 + 8, (unsigned __int16 *)&v13);
  if (v5 + 16 == v6 || (std::vector<int>::pointer v7 = *(const morphun::dialog::SemanticFeature **)(v6 + 56)) == 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&__p, L"Input argument <", (const void **)&v13.__r_.__value_.__l.__data_);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v15, &__p, (std::basic_string<char16_t>::value_type *)">");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &v15);
  }
  uint64_t v8 = (uint64_t **)a3[1];
  morphun::util::CFUtils::to_u16string(&__p, a2);
  uint64_t v9 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)v8, &v17, (uint64_t)v7);
  if (!*v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = (char *)operator new(0x80uLL);
    *(void *)&long long v15 = v11;
    *((void *)&v15 + 1) = v8 + 1;
    char v16 = 0;
    morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v11 + 32), v7);
    *(std::basic_string<char16_t> *)(v11 + 104) = __p;
    memset(&__p, 0, sizeof(__p));
    char v16 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(v8, v17, v10, (uint64_t *)v11);
    *(void *)&long long v15 = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v15);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C6A47C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a21);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a2 == 1)
  {
    uint64_t v29 = __cxa_begin_catch(a1);
    uint64_t v30 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(void *))(*(void *)v29 + 24))(v29);
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v26 + 16), v30);
    *(void *)(v26 + 40) = v26 + 16;
    __cxa_end_catch();
    JUMPOUT(0x1D2C6A3F8);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::ConstraintMap>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C6A5F0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::fi::FinnishMorphology::FinnishMorphology(morphun::analysis::fi::FinnishMorphology *this)
{
  uint64_t v2 = (morphun::dictionary::Inflector *)morphun::util::LocaleUtils::FINNISH(this);
  Inflector = (morphun::util::LocaleUtils *)morphun::dictionary::Inflector::getInflector(v2, v3);
  *(void *)this = Inflector;
  uint64_t v5 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FINNISH(Inflector);
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v5, v6);
  if (Dictionary)
  {
    *((void *)this + 1) = Dictionary;
    *((void *)this + 2) = 0;
    operator new();
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2C6AC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  a15 = &a12;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  _Unwind_Resume(a1);
}

void sub_1D2C6AD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  JUMPOUT(0x1D2C6AD40);
}

void sub_1D2C6AD58()
{
  *(void *)(v0 + 8) = v1;
  JUMPOUT(0x1D2C6AD40);
}

void *std::vector<double>::__init_with_size[abi:ne180100]<double const*,double const*>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D2C6ADC4(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::vector<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::__emplace_back_slow_path<std::vector<std::vector<double>> &,std::vector<double>>(int64x2_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((a1->i64[1] - a1->i64[0]) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x555555555555555) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  if (0x5555555555555556 * ((a1[1].i64[0] - a1->i64[0]) >> 4) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((a1[1].i64[0] - a1->i64[0]) >> 4);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[1].i64[0] - a1->i64[0]) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v8 = 0x555555555555555;
  }
  else {
    unint64_t v8 = v4;
  }
  uint64_t v23 = a1 + 1;
  if (v8)
  {
    if (v8 > 0x555555555555555) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v9 = (char *)operator new(48 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v20 = v9;
  v21.i64[0] = (uint64_t)&v9[48 * v3];
  uint64_t v22 = &v9[48 * v8];
  morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer::FeedForwardInflectionAnalyzer_Layer(v21.i64[0], a2, a3);
  uint64_t v10 = v21.i64[0];
  uint64_t v11 = v21.i64[0] + 48;
  v21.i64[1] = v21.i64[0] + 48;
  uint64_t v13 = a1->i64[0];
  unint64_t v12 = a1->u64[1];
  if (v12 == a1->i64[0])
  {
    int64x2_t v17 = vdupq_n_s64(v12);
  }
  else
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = v10 + v14;
      uint64_t v16 = v12 + v14;
      *(void *)(v15 - 48) = 0;
      *(void *)(v15 - 40) = 0;
      *(void *)(v15 - 32) = 0;
      *(_OWORD *)(v15 - 48) = *(_OWORD *)(v12 + v14 - 48);
      *(void *)(v15 - 32) = *(void *)(v12 + v14 - 32);
      *(void *)(v16 - 48) = 0;
      *(void *)(v16 - 40) = 0;
      *(void *)(v16 - 32) = 0;
      *(void *)(v15 - 24) = 0;
      *(void *)(v15 - 16) = 0;
      *(void *)(v15 - 8) = 0;
      *(_OWORD *)(v15 - 24) = *(_OWORD *)(v12 + v14 - 24);
      *(void *)(v15 - 8) = *(void *)(v12 + v14 - 8);
      *(void *)(v16 - 24) = 0;
      *(void *)(v16 - 16) = 0;
      *(void *)(v16 - 8) = 0;
      v14 -= 48;
    }
    while (v12 + v14 != v13);
    v10 += v14;
    int64x2_t v17 = *a1;
    uint64_t v11 = v21.i64[1];
  }
  a1->i64[0] = v10;
  a1->i64[1] = v11;
  int64x2_t v21 = v17;
  uint64_t v18 = (char *)a1[1].i64[0];
  a1[1].i64[0] = (uint64_t)v22;
  uint64_t v22 = v18;
  uint64_t v20 = (char *)v17.i64[0];
  std::__split_buffer<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::~__split_buffer((uint64_t)&v20);
  return v11;
}

void sub_1D2C6AF7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 48;
    std::allocator<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::destroy[abi:ne180100](i - 48);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::allocator<morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer>::destroy[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void **)a1;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v3);
}

uint64_t morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(morphun::analysis::fi::FinnishMorphology *this)
{
  {
    if (v2) {
      morphun::analysis::fi::FinnishMorphology::createUnlemmatizableList(v2);
    }
  }
  uint64_t result = morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(void)::UNLEMMATIZABLE_;
  if (!morphun::analysis::fi::FinnishMorphology::UNLEMMATIZABLE(void)::UNLEMMATIZABLE_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C6B0B4(_Unwind_Exception *a1)
{
}

void morphun::analysis::fi::FinnishMorphology::createUnlemmatizableList(morphun::analysis::fi::FinnishMorphology *this)
{
}

void sub_1D2C6B338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&a9, (const void **)(v35 - 64), L" could not be read.");
    morphun::exception::IOException::IOException((uint64_t)exception, &a9);
  }
  if (*(char *)(v35 - 41) < 0) {
    operator delete(*(void **)(v35 - 64));
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::fi::FinnishMorphology::getInstance(morphun::analysis::fi::FinnishMorphology *this)
{
  {
    operator new();
  }
  return morphun::analysis::fi::FinnishMorphology::getInstance(void)::INSTANCE_;
}

void sub_1D2C6B4EC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x60C40AA6EF139);
  _Unwind_Resume(a1);
}

void morphun::analysis::fi::FinnishMorphology::getLemma(uint64_t a1, uint64_t *a2, std::basic_string<char16_t> *a3, uint64_t a4, uint64_t a5, unsigned __int16 *a6)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  memset(v39, 0, 15);
  if (a4 == a5)
  {
    uint64_t v11 = 0;
    LOBYTE(v12) = 0;
LABEL_46:
    uint64_t v33 = v39[0];
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v33;
    *(void *)(a1 + 15) = *(void *)((char *)v39 + 7);
    *(unsigned char *)(a1 + 23) = v12;
    return;
  }
  uint64_t v9 = *a2;
  if (*(char *)(a4 + 23) < 0)
  {
    uint64_t v13 = a4;
    a4 = *(void *)a4;
    uint64_t v10 = *(void *)(v13 + 8);
  }
  else
  {
    LODWORD(v10) = *(unsigned __int8 *)(a4 + 23);
  }
  uint64_t v14 = v9 + 8;
  __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v9 + 248), a4, v10);
  morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)__dst, v14, KeyId);
  v37[0] = *(_OWORD *)__dst;
  v37[1] = *(_OWORD *)&__dst[16];
  v37[2] = v41;
  char v38 = 1;
  if (!*(_WORD *)&__dst[18])
  {
    if (SHIBYTE(a3->__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, a3->__r_.__value_.__l.__data_, a3->__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)&a3->__r_.__value_.__l.__data_;
      *(void *)(a1 + 16) = *((void *)&a3->__r_.__value_.__l + 2);
    }
    return;
  }
  {
    operator new();
  }
  if (!morphun::analysis::fi::FinnishMorphology::LEMMA_PROPERTIES(void)::LEMMA_PROPERTIES_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)v36, (uint64_t)v37, (uint64_t *)morphun::analysis::fi::FinnishMorphology::LEMMA_PROPERTIES(void)::LEMMA_PROPERTIES_, 1);
  uint64_t v16 = v36[0];
  if (v36[0] == v36[1])
  {
    uint64_t v11 = 0;
    LOBYTE(v12) = 0;
LABEL_44:
    if (v16) {
      operator delete(v16);
    }
    goto LABEL_46;
  }
  morphun::dictionary::Inflector_Inflection::inflect((std::basic_string<char16_t> *)__dst, v36[0], a3);
  v39[0] = *(void *)&__dst[8];
  uint64_t v11 = *(void **)__dst;
  *(void *)((char *)v39 + 7) = *(void *)&__dst[15];
  int v12 = __dst[23];
  int v18 = SHIBYTE(a3->__r_.__value_.__r.__words[2]);
  BOOL v19 = v18 < 0;
  if (v18 >= 0) {
    uint64_t v20 = a3;
  }
  else {
    uint64_t v20 = (std::basic_string<char16_t> *)a3->__r_.__value_.__r.__words[0];
  }
  if (v19) {
    unint64_t size = a3->__r_.__value_.__l.__size_;
  }
  else {
    unint64_t size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
  }
  unint64_t v22 = *((unsigned __int8 *)a6 + 23);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = a6;
  }
  else {
    uint64_t v23 = *(unsigned __int16 **)a6;
  }
  if ((v22 & 0x80u) != 0) {
    unint64_t v22 = *((void *)a6 + 1);
  }
  std::basic_string<char16_t>::size_type v24 = size - v22;
  if (size < v22) {
    goto LABEL_44;
  }
  if (v22)
  {
    uint64_t v25 = -(uint64_t)v22;
    uint64_t v26 = (uint64_t)v20 + 2 * size;
    do
    {
      int v27 = *(unsigned __int16 *)(v26 + 2 * v25);
      int v29 = *v23++;
      int v28 = v29;
    }
    while (v29 == v27 && v25++ != -1);
    if (v28 != v27) {
      goto LABEL_44;
    }
  }
  std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)__dst, a3, 0, v24, v17);
  morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)v16 + 40), v16[2], &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v32 = __p.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append((std::basic_string<char16_t> *)__dst, (const std::basic_string<char16_t>::value_type *)p_p, v32);
  *(_OWORD *)a1 = *(_OWORD *)__dst;
  *(void *)(a1 + 16) = *(void *)&__dst[16];
  memset(__dst, 0, 24);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
  }
  operator delete(v16);
  if (v12 < 0) {
    operator delete(v11);
  }
}

void sub_1D2C6B894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  uint64_t v35 = 0;
  while (1)
  {
    if (*(char *)(v33 + v35 + 47) < 0) {
      operator delete(*(void **)(v33 + v35 + 24));
    }
    v35 -= 24;
    if (v35 == -48)
    {
      MEMORY[0x1D942B8B0](v32, 0x20C40960023A9);
      _Unwind_Resume(a1);
    }
  }
}

void morphun::analysis::fi::FinnishMorphology::getInflectionAnalysis(morphun::lang::StringFilterUtil *CombinedBinaryType, uint64_t a2, std::basic_string<char16_t> *__str, char a4, std::allocator<char16_t> *a5)
{
  uint64_t v5 = __str;
  uint64_t v6 = (uint64_t)CombinedBinaryType;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if ((a4 & 1) == 0)
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if ((size & 0x80u) == 0) {
      uint64_t v14 = __str;
    }
    else {
      uint64_t v14 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
    }
    if ((size & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type size = __str->__r_.__value_.__l.__size_;
    }
    if (size)
    {
      uint64_t v15 = (char *)v14;
      while (*(_WORD *)v15 != 58)
      {
        v15 += 2;
        if (!--size) {
          goto LABEL_48;
        }
      }
      uint64_t v16 = v15 - (char *)v14;
      if (v16 != -2)
      {
        std::basic_string<char16_t>::size_type v17 = v16 >> 1;
        std::basic_string<char16_t>::basic_string(&v40, __str, (v16 >> 1) + 1, 0xFFFFFFFFFFFFFFFFLL, a5);
        if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v18 = &v40;
        }
        else {
          int v18 = (std::basic_string<char16_t> *)v40.__r_.__value_.__r.__words[0];
        }
        if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v19 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
        }
        else {
          int v19 = v40.__r_.__value_.__r.__words[1];
        }
        morphun::dictionary::Inflector::getInflectionPatternsBySuffix((long long **)&v42, *(unsigned __int8 **)a2, (uint64_t)v18, v19);
        long long v20 = *(_OWORD *)&v42.__r_.__value_.__l.__data_;
        if (v42.__r_.__value_.__r.__words[0] != v42.__r_.__value_.__l.__size_)
        {
          uint64_t v21 = v42.__r_.__value_.__r.__words[0];
          while (*(__int16 *)(v21 + 18) < 1)
          {
LABEL_43:
            v21 += 48;
            if (v21 == *((void *)&v20 + 1)) {
              goto LABEL_44;
            }
          }
          int v22 = 0;
          while (1)
          {
            morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&__p, v21, v22);
            morphun::dictionary::metadata::StringContainer::getString(*((morphun::dictionary::metadata::StringContainer **)__p + 5), v38[0], &v39);
            if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v24 = HIBYTE(v39.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v24 = v39.__r_.__value_.__l.__size_;
            }
            if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v39.__r_.__value_.__l.__data_);
            }
            if (!v24) {
              break;
            }
            if (++v22 >= *(__int16 *)(v21 + 18)) {
              goto LABEL_43;
            }
          }
          uint64_t v5 = __str;
          std::basic_string<char16_t>::basic_string(&v41, __str, 0, v17, v23);
          if ((void)v20) {
            operator delete((void *)v20);
          }
          if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v40.__r_.__value_.__l.__data_);
          }
          std::basic_string<char16_t>::size_type v33 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
          if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v33 = v41.__r_.__value_.__l.__size_;
          }
          if (v33)
          {
            morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v6, (long long *)&v41);
            int v28 = 1;
            goto LABEL_59;
          }
LABEL_49:
          int v25 = SHIBYTE(v5->__r_.__value_.__r.__words[2]);
          if (v25 >= 0) {
            uint64_t v26 = (const UChar *)v5;
          }
          else {
            uint64_t v26 = (const UChar *)v5->__r_.__value_.__r.__words[0];
          }
          if (v25 >= 0) {
            uint64_t v27 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
          }
          else {
            uint64_t v27 = v5->__r_.__value_.__l.__size_;
          }
          morphun::dictionary::DictionaryMetaData::getPropertyValues(*(void *)(a2 + 8), v26, v27, L"lemma-form", 0xAuLL, (uint64_t *)&v39);
          if (v39.__r_.__value_.__r.__words[0] == v39.__r_.__value_.__l.__size_)
          {
            int v28 = 0;
          }
          else
          {
            morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v6, (long long *)v39.__r_.__value_.__l.__data_);
            int v28 = 1;
          }
          std::basic_string<char16_t> __p = &v39;
          std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
LABEL_59:
          if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v41.__r_.__value_.__l.__data_);
            if (v28) {
              return;
            }
          }
          else if (v28)
          {
            return;
          }
          int v29 = SHIBYTE(v5->__r_.__value_.__r.__words[2]);
          if (v29 >= 0) {
            uint64_t v30 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
          }
          else {
            uint64_t v30 = v5->__r_.__value_.__l.__size_;
          }
          if ((int)v30 >= 4)
          {
            uint64_t v31 = *(void *)(a2 + 8);
            uint64_t v32 = v29 >= 0 ? (const UChar *)v5 : (const UChar *)v5->__r_.__value_.__r.__words[0];
            v39.__r_.__value_.__r.__words[0] = 0;
            CombinedBinaryType = (morphun::lang::StringFilterUtil *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v31, (uint64_t)&v39, v32, v30);
            if (!CombinedBinaryType) {
              goto LABEL_6;
            }
          }
          goto LABEL_71;
        }
LABEL_44:
        if ((void)v20) {
          operator delete((void *)v20);
        }
        uint64_t v5 = __str;
        if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v40.__r_.__value_.__l.__data_);
        }
      }
    }
LABEL_48:
    memset(&v41, 0, sizeof(v41));
    goto LABEL_49;
  }
  if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    LODWORD(v7) = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v7 = __str->__r_.__value_.__l.__size_;
  }
  if ((int)v7 > 3)
  {
LABEL_6:
    unint64_t v8 = (void *)morphun::lang::StringFilterUtil::LATIN_SCRIPT(CombinedBinaryType);
    int v9 = SHIBYTE(v5->__r_.__value_.__r.__words[2]);
    if (v9 >= 0) {
      uint64_t v10 = (uint64_t)v5;
    }
    else {
      uint64_t v10 = v5->__r_.__value_.__r.__words[0];
    }
    if (v9 >= 0) {
      LODWORD(v11) = HIBYTE(v5->__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v11 = v5->__r_.__value_.__l.__size_;
    }
    if (morphun::util::UnicodeSetUtils::containsSome(v8, v10, v11))
    {
      int v12 = *(uint64_t **)(a2 + 16);
      if (v12) {
        morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getInflectionLikelihoods(v12, (uint64_t)v5);
      }
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
  }
LABEL_71:
  morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(v6, (long long *)v5);
}

void sub_1D2C6C26C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (v39 < 0) {
    operator delete(__p);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(&a25);
  (*(void (**)(uint64_t))(*(void *)v40 + 16))(v40);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory_ItAndList::getBeforeLast(const morphun::dialog::SemanticFeatureConceptBase *a1@<X1>, const morphun::dialog::SpeakableString *a2@<X2>, const morphun::dialog::SemanticFeatureConceptBase *a3@<X3>, const morphun::dialog::SpeakableString *a4@<X4>, void *a5@<X8>)
{
  uint64_t v7 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *, const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a4 + 32))(a4, a1, a2, a3);
  {
    operator new();
  }
  unint64_t v8 = (void *)morphun::dialog::language::ItCommonConceptFactory_ItAndList::IMPORTANT_SET(void)::IMPORTANT_SET_;
  npc<icu4cxx::UnicodeSet const>(morphun::dialog::language::ItCommonConceptFactory_ItAndList::IMPORTANT_SET(void)::IMPORTANT_SET_);
  {
    operator new();
  }
  int v9 = (void *)morphun::dialog::language::E_SOUND(void)::I_SOUND_;
  npc<icu4cxx::UnicodeSet const>(morphun::dialog::language::E_SOUND(void)::I_SOUND_);
  long long __p = 0uLL;
  uint64_t v11 = 0;
  if (morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(v7, v8, v9, (uint64_t **)&__p)) {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L" ed ");
  }
  else {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L" e ");
  }
  morphun::dialog::SpeakableString::SpeakableString(a5, &__p);
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)__p);
  }
}

void sub_1D2C6C608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t npc<icu4cxx::UnicodeSet const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C6C6DC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory_ItAndList::clone(morphun::dialog::language::ItCommonConceptFactory_ItAndList *this)
{
}

void sub_1D2C6C778(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory_ItAndList::~ItCommonConceptFactory_ItAndList(morphun::dialog::language::ItCommonConceptFactory_ItAndList *this)
{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05F40);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05F40);
}

void morphun::dialog::language::KkCommonConceptFactory::~KkCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3348);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3348);
}

morphun::util::DelimitedStringIterator *morphun::util::DelimitedStringIterator::DelimitedStringIterator(morphun::util::DelimitedStringIterator *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = a4;
  *((void *)this + 3) = a5;
  *((void *)this + 4) = a2;
  *((void *)this + 5) = a3;
  *((_DWORD *)this + 12) = a3;
  *((_DWORD *)this + 13) = 0;
  if ((int)a3 >= 1) {
    morphun::util::DelimitedStringIterator::getNext((UChar *)this);
  }
  return this;
}

{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = a4;
  *((void *)this + 3) = a5;
  *((void *)this + 4) = a2;
  *((void *)this + 5) = a3;
  *((_DWORD *)this + 12) = a3;
  *((_DWORD *)this + 13) = 0;
  if ((int)a3 >= 1) {
    morphun::util::DelimitedStringIterator::getNext((UChar *)this);
  }
  return this;
}

UChar *morphun::util::DelimitedStringIterator::getNext(UChar *this)
{
  uint64_t v1 = this;
  int v2 = *((_DWORD *)this + 12);
  uint64_t v3 = *((int *)this + 13);
  if (v2 <= (int)v3)
  {
    *(void *)this = &word_1D2ED0AEE;
    *((void *)this + 1) = 0;
  }
  else
  {
    unint64_t v4 = (const UChar *)(*((void *)this + 4) + 2 * v3);
    this = u_strFindFirst(v4, v2 - (int)v3, *((const UChar **)this + 2), *((_DWORD *)this + 6));
    unint64_t v5 = *((int *)v1 + 13);
    unint64_t v6 = *((void *)v1 + 5);
    if (this)
    {
      BOOL v7 = v6 >= v5;
      unint64_t v8 = v6 - v5;
      if (!v7) {
LABEL_14:
      }
        std::__throw_out_of_range[abi:ne180100]("string_view::substr");
      uint64_t v9 = *((void *)v1 + 4);
      uint64_t v10 = v9 + 2 * v5;
      if (v8 >= ((unint64_t)((char *)this - (char *)v4) >> 1)) {
        unint64_t v8 = ((unint64_t)((char *)this - (char *)v4) >> 1);
      }
      *(void *)uint64_t v1 = v10;
      *((void *)v1 + 1) = v8;
      int v11 = (((unint64_t)this - v9) >> 1) + *((_DWORD *)v1 + 6);
    }
    else
    {
      unint64_t v12 = v6 - v5;
      if (v6 < v5) {
        goto LABEL_14;
      }
      int v11 = *((_DWORD *)v1 + 12);
      unint64_t v13 = v11 - (int)v5;
      uint64_t v14 = *((void *)v1 + 4) + 2 * v5;
      if (v12 >= v13) {
        unint64_t v12 = v13;
      }
      *(void *)uint64_t v1 = v14;
      *((void *)v1 + 1) = v12;
    }
    *((_DWORD *)v1 + 13) = v11;
  }
  return this;
}

BOOL morphun::util::DelimitedStringIterator::hasNext(morphun::util::DelimitedStringIterator *this)
{
  return *((_DWORD *)this + 13) < *((_DWORD *)this + 12) || *((void *)this + 1) != 0;
}

double morphun::util::DelimitedStringIterator::DelimitedStringIterator(morphun::util::DelimitedStringIterator *this, const morphun::util::DelimitedStringIterator *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((_OWORD *)this + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)this + 2) = *((_OWORD *)a2 + 2);
  double result = *((double *)a2 + 6);
  *((double *)this + 6) = result;
  return result;
}

{
  double result;

  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((_OWORD *)this + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)this + 2) = *((_OWORD *)a2 + 2);
  double result = *((double *)a2 + 6);
  *((double *)this + 6) = result;
  return result;
}

uint64_t morphun::util::DelimitedStringIterator::operator*(uint64_t a1)
{
  return *(void *)a1;
}

morphun::util::DelimitedStringIterator *morphun::util::DelimitedStringIterator::operator++(morphun::util::DelimitedStringIterator *this)
{
  if (*((_DWORD *)this + 13) >= *((_DWORD *)this + 12) && !*((void *)this + 1))
  {
    exception = (morphun::exception::StringIndexOutOfBoundsException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(exception);
  }
  morphun::util::DelimitedStringIterator::getNext((UChar *)this);
  return this;
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_HK::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DE80;
  v3[1] = *(_OWORD *)&off_1E695DE90;
  v3[2] = xmmword_1E695DEA0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::analysis::stemmer::DictionaryLookupLemmaFilter::getLemmaForTermAt(uint64_t a1@<X0>, const std::basic_string<char16_t> *a2@<X1>, std::basic_string<char16_t> *a3@<X2>, std::basic_string<char16_t>::size_type a4@<X3>, std::basic_string<char16_t> *a5@<X4>, std::basic_string<char16_t> *a6@<X8>)
{
  unint64_t v12 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(void *)(a1 + 104));
  unint64_t v13 = (char *)v12 + *(void *)(*v12 - 96);
  if (v13[23] < 0) {
    unint64_t v13 = (char *)*((void *)v13 + 1);
  }
  else {
    LODWORD(v13) = v13[23];
  }
  if (*(_DWORD *)(a1 + 152) > (int)v13) {
    goto LABEL_5;
  }
  if (a4)
  {
    std::basic_string<char16_t>::size_type v20 = *(void *)(a1 + 144) & a4;
    if (v20)
    {
      uint64_t v76 = a6;
      int v21 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
      if (v21 >= 0) {
        int v22 = (const UChar *)a2;
      }
      else {
        int v22 = (const UChar *)a2->__r_.__value_.__r.__words[0];
      }
      if (v21 >= 0) {
        uint64_t size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      }
      else {
        uint64_t size = a2->__r_.__value_.__l.__size_;
      }
      morphun::dictionary::DictionaryMetaData::getPropertyValues(*(void *)(a1 + 136), v22, size, (unsigned __int16 *)"l", 5uLL, (uint64_t *)&v83);
      std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)a3);
      *a3 = v83;
      memset(&v83, 0, sizeof(v83));
      v82.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v83;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
      uint64_t v25 = a3->__r_.__value_.__r.__words[0];
      std::basic_string<char16_t>::size_type v24 = a3->__r_.__value_.__l.__size_;
      if (a3->__r_.__value_.__r.__words[0] != v24)
      {
        if (morphun::util::gLogLevel <= 0 && 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - v25) >> 3) >= 2)
        {
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "L");
          uint64_t v26 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(void *)(a1 + 104));
          uint64_t v27 = (char *)v26 + *(void *)(*v26 - 96);
          int v28 = v27[23];
          if (v28 >= 0) {
            int v29 = (const std::basic_string<char16_t>::value_type *)((char *)v26 + *(void *)(*v26 - 96));
          }
          else {
            int v29 = *(const std::basic_string<char16_t>::value_type **)v27;
          }
          if (v28 >= 0) {
            std::basic_string<char16_t>::size_type v30 = v27[23];
          }
          else {
            std::basic_string<char16_t>::size_type v30 = *((void *)v27 + 1);
          }
          std::basic_string<char16_t>::append(&__dst, v29, v30);
          std::basic_string<char16_t> v80 = __dst;
          memset(&__dst, 0, sizeof(__dst));
          std::basic_string<char16_t>::append(&v80, word_1D2EC4B6A, 0xBuLL);
          std::basic_string<char16_t> v81 = v80;
          memset(&v80, 0, sizeof(v80));
          morphun::util::StringViewUtils::join(L",", 1uLL, a3, (uint64_t)__p);
          if ((v78 & 0x80u) == 0) {
            uint64_t v31 = __p;
          }
          else {
            uint64_t v31 = (void **)__p[0];
          }
          if ((v78 & 0x80u) == 0) {
            std::basic_string<char16_t>::size_type v32 = v78;
          }
          else {
            std::basic_string<char16_t>::size_type v32 = (std::basic_string<char16_t>::size_type)__p[1];
          }
          std::basic_string<char16_t>::append(&v81, (const std::basic_string<char16_t>::value_type *)v31, v32);
          std::basic_string<char16_t> v82 = v81;
          memset(&v81, 0, sizeof(v81));
          std::basic_string<char16_t>::append(&v82, L"]", 1uLL);
          std::basic_string<char16_t> v83 = v82;
          memset(&v82, 0, sizeof(v82));
          if (morphun::util::gLogLevel <= 0)
          {
            if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v33 = &v83;
            }
            else {
              std::basic_string<char16_t>::size_type v33 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
            }
            morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v33);
          }
          if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v83.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v82.__r_.__value_.__l.__data_);
          }
          if ((char)v78 < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v81.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v80.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          uint64_t v25 = a3->__r_.__value_.__r.__words[0];
          std::basic_string<char16_t>::size_type v24 = a3->__r_.__value_.__l.__size_;
        }
        if (v25 != v24)
        {
          do
          {
            v83.__r_.__value_.__r.__words[0] = 0;
            if (*(char *)(v25 + 23) < 0)
            {
              uint64_t v35 = *(const UChar **)v25;
              uint64_t v34 = *(void *)(v25 + 8);
            }
            else
            {
              uint64_t v34 = *(unsigned __int8 *)(v25 + 23);
              uint64_t v35 = (const UChar *)v25;
            }
            if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 136), (uint64_t)&v83, v35, v34)&& (*(void *)(a1 + 144) & v83.__r_.__value_.__r.__words[0]) == v20)
            {
              int v39 = a5;
              uint64_t v40 = (const std::basic_string<char16_t> *)v25;
              goto LABEL_136;
            }
            v25 += 24;
          }
          while (v25 != v24);
          std::basic_string<char16_t>::size_type v24 = a3->__r_.__value_.__r.__words[0];
          std::basic_string<char16_t>::size_type v36 = a3->__r_.__value_.__l.__size_;
          if (a3->__r_.__value_.__r.__words[0] != v36)
          {
            while (1)
            {
              v83.__r_.__value_.__r.__words[0] = 0;
              if (*(char *)(v24 + 23) < 0)
              {
                char v38 = *(const UChar **)v24;
                uint64_t v37 = *(void *)(v24 + 8);
              }
              else
              {
                uint64_t v37 = *(unsigned __int8 *)(v24 + 23);
                char v38 = (const UChar *)v24;
              }
              if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 136), (uint64_t)&v83, v38, v37)&& (v83.__r_.__value_.__r.__words[0] & *(void *)(a1 + 144) & v20) != 0)
              {
                break;
              }
              v24 += 24;
              if (v24 == v36)
              {
                std::basic_string<char16_t>::size_type v24 = a3->__r_.__value_.__r.__words[0];
                break;
              }
            }
          }
        }
        int v39 = a5;
        uint64_t v40 = (const std::basic_string<char16_t> *)v24;
LABEL_136:
        std::basic_string<char16_t>::operator=(v39, v40);
        a6 = v76;
        goto LABEL_5;
      }
      a6 = v76;
      if (morphun::util::gLogLevel > 0) {
        goto LABEL_5;
      }
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v82, "L");
      std::basic_string<char16_t>::size_type v60 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(void *)(a1 + 104));
      std::basic_string<char16_t> v61 = (char *)v60 + *(void *)(*v60 - 96);
      int v62 = v61[23];
      if (v62 >= 0) {
        uint64_t v63 = (const std::basic_string<char16_t>::value_type *)((char *)v60 + *(void *)(*v60 - 96));
      }
      else {
        uint64_t v63 = *(const std::basic_string<char16_t>::value_type **)v61;
      }
      if (v62 >= 0) {
        std::basic_string<char16_t>::size_type v64 = v61[23];
      }
      else {
        std::basic_string<char16_t>::size_type v64 = *((void *)v61 + 1);
      }
      std::basic_string<char16_t>::append(&v82, v63, v64);
      std::basic_string<char16_t> v83 = v82;
      memset(&v82, 0, sizeof(v82));
      if (morphun::util::gLogLevel > 0)
      {
LABEL_130:
        if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v83.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v82.__r_.__value_.__l.__data_);
        }
        goto LABEL_5;
      }
      if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v59 = &v83;
      }
      else {
        int v59 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
      }
    }
    else
    {
      if (morphun::util::gLogLevel > 0) {
        goto LABEL_5;
      }
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v82, "L");
      uint64_t v54 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(void *)(a1 + 104));
      uint64_t v55 = (char *)v54 + *(void *)(*v54 - 96);
      int v56 = v55[23];
      if (v56 >= 0) {
        std::basic_string<char16_t>::size_type v57 = (const std::basic_string<char16_t>::value_type *)((char *)v54 + *(void *)(*v54 - 96));
      }
      else {
        std::basic_string<char16_t>::size_type v57 = *(const std::basic_string<char16_t>::value_type **)v55;
      }
      if (v56 >= 0) {
        std::basic_string<char16_t>::size_type v58 = v55[23];
      }
      else {
        std::basic_string<char16_t>::size_type v58 = *((void *)v55 + 1);
      }
      std::basic_string<char16_t>::append(&v82, v57, v58);
      std::basic_string<char16_t> v83 = v82;
      memset(&v82, 0, sizeof(v82));
      if (morphun::util::gLogLevel > 0) {
        goto LABEL_130;
      }
      if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v59 = &v83;
      }
      else {
        int v59 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
      }
    }
    morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v59);
    goto LABEL_130;
  }
  if (morphun::util::gLogLevel <= 0)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v82, "L");
    std::basic_string<char16_t> v41 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*(void *)(a1 + 104));
    std::basic_string<char16_t> v42 = (char *)v41 + *(void *)(*v41 - 96);
    int v43 = v42[23];
    if (v43 >= 0) {
      std::basic_string<char16_t>::size_type v44 = (const std::basic_string<char16_t>::value_type *)((char *)v41 + *(void *)(*v41 - 96));
    }
    else {
      std::basic_string<char16_t>::size_type v44 = *(const std::basic_string<char16_t>::value_type **)v42;
    }
    if (v43 >= 0) {
      std::basic_string<char16_t>::size_type v45 = v42[23];
    }
    else {
      std::basic_string<char16_t>::size_type v45 = *((void *)v42 + 1);
    }
    std::basic_string<char16_t>::append(&v82, v44, v45);
    std::basic_string<char16_t> v83 = v82;
    memset(&v82, 0, sizeof(v82));
    if (morphun::util::gLogLevel <= 0)
    {
      if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v46 = &v83;
      }
      else {
        uint64_t v46 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v46);
    }
    if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v83.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v82.__r_.__value_.__l.__data_);
    }
  }
  std::basic_string<char16_t>::operator=(a5, a2);
  int v47 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 56))(a1, a5);
  std::basic_string<char16_t>::resize(a5, v47, 0);
  std::basic_string<char16_t>::size_type v48 = HIBYTE(a5->__r_.__value_.__r.__words[2]);
  int v49 = (char)v48;
  if ((v48 & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type v48 = a5->__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::size_type v50 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  int v51 = (char)v50;
  if ((v50 & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type v50 = a2->__r_.__value_.__l.__size_;
  }
  if (v48 == v50)
  {
    if (v48)
    {
      if (v51 >= 0) {
        char v52 = a2;
      }
      else {
        char v52 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
      }
      uint64_t v53 = (std::basic_string<char16_t> *)a5->__r_.__value_.__r.__words[0];
      if (v49 >= 0) {
        uint64_t v53 = a5;
      }
      while (v52->__r_.__value_.__s.__data_[0] == v53->__r_.__value_.__s.__data_[0])
      {
        uint64_t v53 = (std::basic_string<char16_t> *)((char *)v53 + 2);
        char v52 = (const std::basic_string<char16_t> *)((char *)v52 + 2);
        if (!--v48) {
          goto LABEL_105;
        }
      }
    }
    else
    {
LABEL_105:
      if (v49 < 0)
      {
        *a5->__r_.__value_.__l.__data_ = 0;
        a5->__r_.__value_.__l.__size_ = 0;
      }
      else
      {
        a5->__r_.__value_.__s.__data_[0] = 0;
        *((unsigned char *)&a5->__r_.__value_.__s + 23) = 0;
      }
    }
  }
LABEL_5:
  if (!*(void *)(a1 + 128)) {
    goto LABEL_158;
  }
  uint64_t v75 = a6;
  std::basic_string<char16_t>::size_type v14 = a3->__r_.__value_.__r.__words[0];
  uint64_t v15 = a3->__r_.__value_.__l.__size_;
  if (a3->__r_.__value_.__r.__words[0] != v15) {
    goto LABEL_139;
  }
  int v16 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type v17 = v16 >= 0 ? (const UChar *)a2 : (const UChar *)a2->__r_.__value_.__r.__words[0];
  uint64_t v18 = v16 >= 0 ? HIBYTE(a2->__r_.__value_.__r.__words[2]) : a2->__r_.__value_.__l.__size_;
  morphun::dictionary::DictionaryMetaData::getPropertyValues(*(void *)(a1 + 136), v17, v18, (unsigned __int16 *)"l", 5uLL, (uint64_t *)&v83);
  std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)a3);
  *a3 = v83;
  memset(&v83, 0, sizeof(v83));
  v82.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v83;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
  std::basic_string<char16_t>::size_type v14 = a3->__r_.__value_.__r.__words[0];
  uint64_t v15 = a3->__r_.__value_.__l.__size_;
  if (a3->__r_.__value_.__r.__words[0] != v15) {
    goto LABEL_139;
  }
  std::basic_string<char16_t>::size_type v19 = HIBYTE(a5->__r_.__value_.__r.__words[2]);
  if ((v19 & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type v19 = a5->__r_.__value_.__l.__size_;
  }
  if (v19)
  {
    if (v14 >= a3->__r_.__value_.__r.__words[2])
    {
      uint64_t v15 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)a3, (long long *)a5);
    }
    else
    {
      std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>((uint64_t)a3, (long long *)a5);
      uint64_t v15 = v14 + 24;
    }
    a3->__r_.__value_.__l.__size_ = v15;
    std::basic_string<char16_t>::size_type v14 = a3->__r_.__value_.__r.__words[0];
LABEL_139:
    memset(&v82, 0, sizeof(v82));
    for (; v14 != v15; v14 += 24)
    {
      v81.__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(v14 + 23) < 0)
      {
        int v66 = *(const UChar **)v14;
        uint64_t v65 = *(void *)(v14 + 8);
      }
      else
      {
        uint64_t v65 = *(unsigned __int8 *)(v14 + 23);
        int v66 = (const UChar *)v14;
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 136), (uint64_t)&v81, v66, v65);
      std::basic_string<char16_t>::size_type v67 = v82.__r_.__value_.__l.__size_;
      if (v82.__r_.__value_.__l.__size_ >= v82.__r_.__value_.__r.__words[2])
      {
        unint64_t v69 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v82.__r_.__value_.__l.__size_ - v82.__r_.__value_.__r.__words[0]) >> 4);
        unint64_t v70 = v69 + 1;
        if (v69 + 1 > 0x555555555555555) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556
           * ((uint64_t)(v82.__r_.__value_.__r.__words[2] - v82.__r_.__value_.__r.__words[0]) >> 4) > v70)
          unint64_t v70 = 0x5555555555555556
              * ((uint64_t)(v82.__r_.__value_.__r.__words[2] - v82.__r_.__value_.__r.__words[0]) >> 4);
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v82.__r_.__value_.__r.__words[2] - v82.__r_.__value_.__r.__words[0]) >> 4) >= 0x2AAAAAAAAAAAAAALL)
          unint64_t v71 = 0x555555555555555;
        else {
          unint64_t v71 = v70;
        }
        int v85 = &v82.__r_.__value_.__r.__words[2];
        if (v71) {
          unint64_t v71 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v71);
        }
        else {
          uint64_t v72 = 0;
        }
        v83.__r_.__value_.__r.__words[0] = v71;
        v83.__r_.__value_.__l.__size_ = v71 + 48 * v69;
        v83.__r_.__value_.__r.__words[2] = v83.__r_.__value_.__l.__size_;
        unint64_t v84 = v71 + 48 * v72;
        morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping((std::basic_string<char16_t> *)v83.__r_.__value_.__l.__size_, a4, v81.__r_.__value_.__r.__words[0], (long long *)v14);
        v83.__r_.__value_.__r.__words[2] += 48;
        std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer((uint64_t *)&v82, &v83);
        std::basic_string<char16_t>::size_type v68 = v82.__r_.__value_.__l.__size_;
        std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&v83);
      }
      else
      {
        morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping((std::basic_string<char16_t> *)v82.__r_.__value_.__l.__size_, a4, v81.__r_.__value_.__r.__words[0], (long long *)v14);
        std::basic_string<char16_t>::size_type v68 = v67 + 48;
      }
      v82.__r_.__value_.__l.__size_ = v68;
    }
    goto LABEL_156;
  }
  memset(&v82, 0, sizeof(v82));
LABEL_156:
  uint64_t v73 = *(void *)(a1 + 128);
  if (!v73)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  (*(void (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v73 + 64))(v73, &v82);
  a6 = v75;
  v83.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v82;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&v83);
LABEL_158:
  if (SHIBYTE(a5->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a6, a5->__r_.__value_.__l.__data_, a5->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&a6->__r_.__value_.__l.__data_ = *(_OWORD *)&a5->__r_.__value_.__l.__data_;
    a6->__r_.__value_.__r.__words[2] = a5->__r_.__value_.__r.__words[2];
  }
}

void sub_1D2C6D474(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 105) < 0) {
    operator delete(*(void **)(v42 - 128));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2C6D5E0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *morphun::analysis::stemmer::DictionaryLookupLemmaFilter::reset(morphun::analysis::stemmer::DictionaryLookupLemmaFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 14) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 15) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  double result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((void *)this + 16) = result;
  return result;
}

void *morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>(uint64_t a1)
{
  uint64_t v1 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)(a1 + 8), (uint64_t)"N7morphun8analysis15tokenattributes16KeywordAttributeE");
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (const void *)v1[3];
  if (!v2) {
    return 0;
  }
}

uint64_t morphun::analysis::stemmer::DictionaryLookupLemmaFilter::incrementToken(morphun::analysis::stemmer::DictionaryLookupLemmaFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = *((void *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
    {
      memset(v23, 0, sizeof(v23));
      uint64_t v22 = 0;
      uint64_t v5 = *((void *)this + 17);
      unint64_t v6 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      BOOL v7 = (const UChar *)((char *)v6 + *(void *)(*v6 - 96));
      if (*((char *)v7 + 23) < 0)
      {
        BOOL v7 = *(const UChar **)v7;
        uint64_t v8 = *(void *)((char *)v6 + *(void *)(*v6 - 96) + 8);
      }
      else
      {
        uint64_t v8 = *((unsigned __int8 *)v7 + 23);
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v5, (uint64_t)&v22, v7, v8);
      memset(&__p, 0, sizeof(__p));
      uint64_t v9 = (char *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, morphun::analysis::stemmer::DictionaryLookupLemmaFilter *, char *, void *, uint64_t, std::basic_string<char16_t> *))(*(void *)this + 64))(&v20, this, &v9[*(void *)(*(void *)v9 - 96)], v23, v22, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::basic_string<char16_t> __p = v20;
      std::basic_string<char16_t>::size_type size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v20.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        int v11 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v11 + *(void *)(*v11 - 96)), &__p);
      }
      if (*((void *)this + 15))
      {
        v20.__r_.__value_.__r.__words[0] = 0;
        uint64_t v12 = *((void *)this + 17);
        unint64_t v13 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        std::basic_string<char16_t>::size_type v14 = (const UChar *)((char *)v13 + *(void *)(*v13 - 96));
        if (*((char *)v14 + 23) < 0)
        {
          std::basic_string<char16_t>::size_type v14 = *(const UChar **)v14;
          uint64_t v15 = *(void *)((char *)v13 + *(void *)(*v13 - 96) + 8);
        }
        else
        {
          uint64_t v15 = *((unsigned __int8 *)v14 + 23);
        }
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v12, (uint64_t)&v20, v14, v15))
        {
          uint64_t v16 = *((void *)this + 15);
          if (!v16)
          {
            std::basic_string<char16_t>::size_type v19 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(v19);
          }
          (*(void (**)(uint64_t, std::basic_string<char16_t>::size_type))(*(void *)v16 + 64))(v16, v20.__r_.__value_.__r.__words[0]);
        }
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v23;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
    }
  }
  return v3;
}

void sub_1D2C6D99C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  __cxa_free_exception(v18);
  if (a18 < 0) {
    operator delete(__p);
  }
  std::basic_string<char16_t> __p = (void *)(v19 - 56);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::DictionaryLookupLemmaFilter::DictionaryLookupLemmaFilter(uint64_t a1, uint64_t *a2, uint64_t a3, morphun::dictionary::DictionaryMetaData *a4, int a5, uint64_t *a6)
{
  int v11 = morphun::analysis::TokenFilter::TokenFilter((morphun::analysis::TokenFilter *)a1, (morphun::analysis::TokenStream *)(a2 + 1), a3);
  uint64_t v12 = *a2;
  *(void *)int v11 = *a2;
  *(void *)(a1 + *(void *)(v12 - 40)) = a2[7];
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(a4, v13);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  *(void *)(a1 + 136) = Dictionary;
  *(void *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = a5;
  *(void *)(a1 + 104) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(a1);
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(void *)(a1 + 136), (uint64_t *)(a1 + 144), a6);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  return a1;
}

void sub_1D2C6DB50(_Unwind_Exception *a1)
{
  __cxa_free_exception(v3);
  morphun::analysis::TokenFilter::~TokenFilter(v1, v2);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::compareTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned __int16 **)(a2 + 8);
  uint64_t v2 = (unsigned __int16 *)(a2 + 8);
  uint64_t v3 = v4;
  int v5 = *((char *)v2 + 23);
  BOOL v6 = v5 < 0;
  if (v5 >= 0) {
    BOOL v7 = v2;
  }
  else {
    BOOL v7 = v3;
  }
  if (v6) {
    unint64_t v8 = *((void *)v2 + 1);
  }
  else {
    unint64_t v8 = *((unsigned __int8 *)v2 + 23);
  }
  if (*(char *)(a1 + 31) < 0)
  {
    uint64_t v9 = *(unsigned __int16 **)(a1 + 8);
    unint64_t v10 = *(void *)(a1 + 16);
  }
  else
  {
    uint64_t v9 = (unsigned __int16 *)(a1 + 8);
    unint64_t v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10) {
    unint64_t v11 = v10;
  }
  else {
    unint64_t v11 = v8;
  }
  if (v11)
  {
    while (1)
    {
      unsigned int v12 = *v9;
      unsigned int v13 = *v7;
      if (v12 < v13) {
        return 0xFFFFFFFFLL;
      }
      if (v13 < v12) {
        return 1;
      }
      ++v9;
      ++v7;
      if (!--v11) {
        goto LABEL_17;
      }
    }
  }
  else
  {
LABEL_17:
    if (v10 < v8) {
      return 0xFFFFFFFFLL;
    }
    else {
      return v8 < v10;
    }
  }
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::~LanguageGrammarFeatures_GrammarCategory(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::~LanguageGrammarFeatures_GrammarCategory(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(*((void **)this + 11));
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*((void **)this + 8));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 5));
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

void std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(a1[1]);
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy((void *)a1[7]);
    operator delete(a1);
  }
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory(uint64_t a1, uint64_t *a2, long long *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v10 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v10 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v11 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v11;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)(a1 + 32), a4);
  std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)(a1 + 56), a5);
  std::map<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>::map[abi:ne180100]((uint64_t *)(a1 + 80), a6);
  *(unsigned char *)(a1 + 104) = 1;
  return a1;
}

void sub_1D2C6DE90(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*(void **)(v1 + 64));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v1 + 40));
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::basic_string<char16_t>>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::basic_string<char16_t>>::insert[abi:ne180100]<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(a1, *(unsigned __int16 **)a2, (unsigned __int16 *)(a2 + 8));
  return a1;
}

void sub_1D2C6DF0C(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t **std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100](uint64_t **a1, void *a2)
{
  a1[1] = 0;
  uint64_t v3 = (uint64_t)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  uint64_t v4 = (long long *)(a2 + 1);
  int v5 = (long long *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__construct_node<std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t)v13, (uint64_t)a1, v5 + 2);
      BOOL v6 = (uint64_t *)v13[0];
      leaf = (uint64_t **)std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__find_leaf(a1, v3, &v12, (unsigned __int16 *)(v13[0] + 32));
      std::__tree<std::u16string_view>::__insert_node_at(a1, v12, leaf, v6);
      v13[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v13);
      unint64_t v8 = (long long *)*((void *)v5 + 1);
      if (v8)
      {
        do
        {
          uint64_t v9 = v8;
          unint64_t v8 = *(long long **)v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v9 = (long long *)*((void *)v5 + 2);
          BOOL v10 = *(void *)v9 == (void)v5;
          int v5 = v9;
        }
        while (!v10);
      }
      int v5 = v9;
    }
    while (v9 != v4);
  }
  return a1;
}

void sub_1D2C6DFFC(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>::map[abi:ne180100](uint64_t *a1, void *a2)
{
  a1[1] = 0;
  uint64_t v3 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  uint64_t v4 = a2 + 1;
  int v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>> const&>(a1, v3, (unsigned __int16 *)v5[4], v5[5], (uint64_t)(v5 + 4));
      BOOL v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          BOOL v7 = v6;
          BOOL v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          BOOL v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          int v5 = v7;
        }
        while (!v8);
      }
      int v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1D2C6E0A8(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>> const&>(uint64_t *result, uint64_t *a2, unsigned __int16 *a3, unint64_t a4, uint64_t a5)
{
  BOOL v6 = (uint64_t **)result;
  if (result + 1 == a2) {
    goto LABEL_11;
  }
  unint64_t v7 = a2[5];
  if (v7 >= a4) {
    unint64_t v8 = a4;
  }
  else {
    unint64_t v8 = a2[5];
  }
  if (v8)
  {
    uint64_t v9 = (unsigned __int16 *)a2[4];
    unint64_t v10 = v8;
    long long v11 = a3;
    do
    {
      unsigned int v12 = *v11;
      unsigned int v13 = *v9;
      if (v12 < v13) {
        goto LABEL_11;
      }
      if (v13 < v12) {
        goto LABEL_16;
      }
      ++v11;
      ++v9;
    }
    while (--v10);
  }
  if (v7 > a4)
  {
LABEL_11:
    uint64_t v14 = *a2;
    if ((uint64_t *)*result == a2)
    {
      uint64_t v16 = a2;
      goto LABEL_38;
    }
    if (v14)
    {
      uint64_t v15 = (uint64_t *)*a2;
      do
      {
        uint64_t v16 = v15;
        uint64_t v15 = (uint64_t *)v15[1];
      }
      while (v15);
    }
    else
    {
      std::basic_string<char16_t>::size_type v24 = a2;
      do
      {
        uint64_t v16 = (uint64_t *)v24[2];
        BOOL v25 = *v16 == (void)v24;
        std::basic_string<char16_t>::size_type v24 = v16;
      }
      while (v25);
    }
    unint64_t v26 = v16[5];
    if (a4 >= v26) {
      unint64_t v27 = v16[5];
    }
    else {
      unint64_t v27 = a4;
    }
    if (v27)
    {
      int v28 = (unsigned __int16 *)v16[4];
      int v29 = a3;
      do
      {
        unsigned int v30 = *v28;
        unsigned int v31 = *v29;
        if (v30 < v31) {
          goto LABEL_38;
        }
        if (v31 < v30) {
          goto LABEL_58;
        }
        ++v28;
        ++v29;
      }
      while (--v27);
    }
    if (v26 < a4)
    {
LABEL_38:
      if (v14)
      {
        std::basic_string<char16_t> v41 = v16;
        uint64_t v23 = v16 + 1;
      }
      else
      {
        std::basic_string<char16_t> v41 = a2;
        uint64_t v23 = a2;
      }
      goto LABEL_59;
    }
LABEL_58:
    double result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)result, &v41, a3, a4);
    uint64_t v23 = result;
    goto LABEL_59;
  }
LABEL_16:
  if (v8)
  {
    std::basic_string<char16_t>::size_type v17 = (unsigned __int16 *)a2[4];
    uint64_t v18 = a3;
    while (1)
    {
      unsigned int v19 = *v17;
      unsigned int v20 = *v18;
      if (v19 < v20) {
        break;
      }
      if (v20 < v19) {
        goto LABEL_41;
      }
      ++v17;
      ++v18;
      if (!--v8) {
        goto LABEL_21;
      }
    }
LABEL_22:
    uint64_t v21 = a2[1];
    if (v21)
    {
      uint64_t v22 = (uint64_t *)a2[1];
      do
      {
        uint64_t v23 = v22;
        uint64_t v22 = (uint64_t *)*v22;
      }
      while (v22);
    }
    else
    {
      std::basic_string<char16_t>::size_type v32 = a2;
      do
      {
        uint64_t v23 = (uint64_t *)v32[2];
        BOOL v25 = *v23 == (void)v32;
        std::basic_string<char16_t>::size_type v32 = v23;
      }
      while (!v25);
    }
    if (v23 != result + 1)
    {
      unint64_t v33 = v23[5];
      if (v33 >= a4) {
        unint64_t v34 = a4;
      }
      else {
        unint64_t v34 = v23[5];
      }
      if (v34)
      {
        uint64_t v35 = (unsigned __int16 *)v23[4];
        std::basic_string<char16_t>::size_type v36 = a3;
        while (1)
        {
          unsigned int v37 = *v36;
          unsigned int v38 = *v35;
          if (v37 < v38) {
            break;
          }
          if (v38 < v37) {
            goto LABEL_58;
          }
          ++v36;
          ++v35;
          if (!--v34) {
            goto LABEL_55;
          }
        }
      }
      else
      {
LABEL_55:
        if (v33 <= a4) {
          goto LABEL_58;
        }
      }
    }
    if (v21)
    {
      std::basic_string<char16_t> v41 = v23;
    }
    else
    {
      std::basic_string<char16_t> v41 = a2;
      uint64_t v23 = a2 + 1;
    }
LABEL_59:
    if (*v23) {
      return result;
    }
    goto LABEL_60;
  }
LABEL_21:
  if (v7 < a4) {
    goto LABEL_22;
  }
LABEL_41:
  uint64_t v40 = a2;
  std::basic_string<char16_t> v41 = a2;
  uint64_t v23 = (uint64_t *)&v40;
  if (a2) {
    return result;
  }
LABEL_60:
  int v39 = operator new(0x48uLL);
  *((_OWORD *)v39 + 2) = *(_OWORD *)a5;
  std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)v39 + 6, (void *)(a5 + 16));
  return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v41, (uint64_t **)v23, (uint64_t *)v39);
}

void sub_1D2C6E32C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__find_leaf(void *a1, uint64_t a2, void *a3, unsigned __int16 *a4)
{
  BOOL v6 = (void *)a2;
  unint64_t v8 = a1 + 1;
  if (a1 + 1 != (void *)a2
    && std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(a2 + 32), a4))
  {
    while (1)
    {
      uint64_t v9 = *v8;
      BOOL v6 = v8;
      if (!*v8) {
        break;
      }
      while (1)
      {
        unint64_t v8 = (void *)v9;
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v9 + 32), a4)) {
          break;
        }
        uint64_t v9 = v8[1];
        if (!v9) {
          goto LABEL_19;
        }
      }
    }
LABEL_20:
    *a3 = v8;
    return v6;
  }
  unint64_t v10 = (void *)*a1;
  uint64_t v11 = *v6;
  if (v10 == v6)
  {
    unsigned int v13 = v6;
  }
  else
  {
    if (v11)
    {
      unsigned int v12 = (void *)*v6;
      do
      {
        unsigned int v13 = v12;
        unsigned int v12 = (void *)v12[1];
      }
      while (v12);
    }
    else
    {
      uint64_t v14 = v6;
      do
      {
        unsigned int v13 = (void *)v14[2];
        BOOL v15 = *v13 == (void)v14;
        uint64_t v14 = v13;
      }
      while (v15);
    }
    if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a4, (unsigned __int16 *)v13 + 16))
    {
      while (1)
      {
        uint64_t v16 = *v8;
        BOOL v6 = v8;
        if (!*v8) {
          goto LABEL_20;
        }
        while (1)
        {
          unint64_t v8 = (void *)v16;
          if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a4, (unsigned __int16 *)(v16 + 32))) {
            break;
          }
          uint64_t v16 = v8[1];
          if (!v16)
          {
LABEL_19:
            BOOL v6 = v8 + 1;
            goto LABEL_20;
          }
        }
      }
    }
  }
  if (v11)
  {
    *a3 = v13;
    return v13 + 1;
  }
  else
  {
    *a3 = v6;
  }
  return v6;
}

uint64_t *std::set<std::basic_string<char16_t>>::insert[abi:ne180100]<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(uint64_t *result, unsigned __int16 *a2, unsigned __int16 *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    int v5 = result;
    uint64_t v6 = (uint64_t)(result + 1);
    do
    {
      double result = std::__tree<std::basic_string<char16_t>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(v5, v6, v4 + 16, (uint64_t)(v4 + 16));
      unint64_t v7 = (unsigned __int16 *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          unint64_t v8 = v7;
          unint64_t v7 = *(unsigned __int16 **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          unint64_t v8 = (unsigned __int16 *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory(uint64_t a1, long long *a2, uint64_t a3, void *a4, void *a5)
{
  *(void *)a1 = &off_1F2A08980;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v9 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v9;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)(a1 + 32), a3);
  std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)(a1 + 56), a4);
  std::map<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>::map[abi:ne180100]((uint64_t *)(a1 + 80), a5);
  *(unsigned char *)(a1 + 104) = 1;
  return a1;
}

void sub_1D2C6E5AC(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*(void **)(v1 + 64));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v1 + 40));
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::~LanguageGrammarFeatures_GrammarCategory(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getName(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *((const std::basic_string<char16_t>::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
}

uint64_t *morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getValues@<X0>(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this@<X0>, uint64_t *a2@<X8>)
{
  return std::set<std::basic_string<char16_t>>::set[abi:ne180100](a2, (uint64_t)this + 32);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::isUniqueValues(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this)
{
  return *((unsigned __int8 *)this + 104);
}

uint64_t **morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getGrammemeDependenciesForCategory@<X0>(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this@<X0>, uint64_t **a2@<X8>)
{
  return std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100](a2, (void *)this + 7);
}

uint64_t **morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getGrammemeDependenciesForValue@<X0>(uint64_t a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(uint64_t **)(a1 + 88);
  double result = (uint64_t **)(a1 + 88);
  int v5 = v6;
  if (!v6) {
    goto LABEL_27;
  }
  unint64_t v7 = result;
  do
  {
    unint64_t v8 = v5[5];
    if ((unint64_t)a3 >= v8) {
      long long v9 = (uint64_t *)v5[5];
    }
    else {
      long long v9 = a3;
    }
    if (v9)
    {
      unint64_t v10 = (unsigned __int16 *)v5[4];
      uint64_t v11 = a2;
      while (1)
      {
        unsigned int v12 = *v10;
        unsigned int v13 = *v11;
        if (v12 < v13)
        {
          ++v5;
          goto LABEL_16;
        }
        if (v13 < v12) {
          break;
        }
        ++v10;
        ++v11;
        long long v9 = (uint64_t *)((char *)v9 - 1);
        if (!v9) {
          goto LABEL_11;
        }
      }
      unint64_t v7 = (uint64_t **)v5;
    }
    else
    {
LABEL_11:
      if (v8 < (unint64_t)a3) {
        ++v5;
      }
      else {
        unint64_t v7 = (uint64_t **)v5;
      }
    }
LABEL_16:
    int v5 = (uint64_t *)*v5;
  }
  while (v5);
  if (result == v7) {
    goto LABEL_27;
  }
  uint64_t v14 = v7[5];
  if (v14 >= a3) {
    BOOL v15 = a3;
  }
  else {
    BOOL v15 = v7[5];
  }
  if (v15)
  {
    uint64_t v16 = v7[4];
    do
    {
      unsigned int v17 = *a2;
      unsigned int v18 = *(unsigned __int16 *)v16;
      if (v17 < v18) {
        goto LABEL_27;
      }
      if (v18 < v17) {
        return std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)a4, v7 + 6);
      }
      ++a2;
      uint64_t v16 = (uint64_t *)((char *)v16 + 2);
      BOOL v15 = (uint64_t *)((char *)v15 - 1);
    }
    while (v15);
  }
  if (a3 < v14)
  {
LABEL_27:
    *(void *)(a4 + 16) = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)a4 = a4 + 8;
    return result;
  }
  return std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)a4, v7 + 6);
}

BOOL morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::operator<(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned __int16 **)(a2 + 8);
  uint64_t v2 = (unsigned __int16 *)(a2 + 8);
  uint64_t v3 = v4;
  int v5 = *((char *)v2 + 23);
  BOOL v6 = v5 < 0;
  if (v5 >= 0) {
    unint64_t v7 = v2;
  }
  else {
    unint64_t v7 = v3;
  }
  if (v6) {
    unint64_t v8 = *((void *)v2 + 1);
  }
  else {
    unint64_t v8 = *((unsigned __int8 *)v2 + 23);
  }
  if (*(char *)(a1 + 31) < 0)
  {
    long long v9 = *(unsigned __int16 **)(a1 + 8);
    unint64_t v10 = *(void *)(a1 + 16);
  }
  else
  {
    long long v9 = (unsigned __int16 *)(a1 + 8);
    unint64_t v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10) {
    unint64_t v11 = v10;
  }
  else {
    unint64_t v11 = v8;
  }
  if (v11)
  {
    while (1)
    {
      unsigned int v12 = *v9;
      unsigned int v13 = *v7;
      if (v13 != v12) {
        break;
      }
      ++v9;
      ++v7;
      if (!--v11) {
        goto LABEL_16;
      }
    }
    BOOL v14 = v12 >= v13;
  }
  else
  {
LABEL_16:
    BOOL v14 = v10 >= v8;
  }
  return !v14;
}

uint64_t **com::apple::siri::tokenizer::data::config_ru::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::tokenizer::dictionary::SegmentFuger::detachFugenelement(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  npc<morphun::tokenizer::dictionary::Segment>(a2);
  unint64_t v4 = *(int *)(v2 + 16);
  unint64_t v5 = *(void *)(v2 + 8);
  BOOL v6 = v5 >= v4;
  unint64_t v7 = v5 - v4;
  if (!v6) {
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  }
  if (v7 >= *(int *)(v2 + 20) - v4) {
    unint64_t v8 = *(int *)(v2 + 20) - v4;
  }
  else {
    unint64_t v8 = v7;
  }
  if (*(_DWORD *)(a1 + 20) > (int)v8) {
    return;
  }
  uint64_t v9 = *(void *)v2;
  npc<morphun::tokenizer::dictionary::Segment>(v2);
  float v10 = *(float *)(v2 + 48);
  memset(&v65, 0, sizeof(v65));
  std::basic_string<char16_t>::reserve(&v65, *(int *)(a1 + 16));
  unsigned int v11 = *(_DWORD *)(a1 + 16);
  if ((int)v11 < 1) {
    goto LABEL_119;
  }
  unsigned int v62 = 0;
  unsigned int v12 = (std::basic_string<char16_t>::value_type *)(v9 + 2 * v4);
  uint64_t v57 = v2;
  uint64_t v63 = v12;
  std::basic_string<char16_t>::size_type v64 = v8;
  while (1)
  {
    if ((int)(v11 - 1 + *(_DWORD *)(a1 + 20)) > (int)v8) {
      goto LABEL_119;
    }
    if (v8 < v11) {
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    }
    unsigned int v60 = v11 - 1;
    unint64_t v13 = v11;
    BOOL v14 = *(void **)a1;
    if (v11 >= 0xB)
    {
      uint64_t v16 = (v11 & 0xFFFFFFFC) + 4;
      if ((v11 | 3) != 0xB) {
        uint64_t v16 = v11 | 3;
      }
      BOOL v15 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v16 + 1);
      __dst[1] = (void *)v11;
      unint64_t v67 = v17 | 0x8000000000000000;
      __dst[0] = v15;
    }
    else
    {
      HIBYTE(v67) = v11;
      BOOL v15 = __dst;
    }
    memmove(v15, v12, 2 * v11);
    *((_WORD *)v15 + v11) = 0;
    uint64_t v18 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)(v14 + 20), (unsigned __int16 *)__dst);
    if (SHIBYTE(v67) < 0) {
      operator delete(__dst[0]);
    }
    unsigned int v19 = (std::basic_string<char16_t> *)&v12[v11];
    std::basic_string<char16_t>::size_type v20 = v64 - v11;
    if (v14 + 21 != (void *)v18)
    {
      uint64_t v21 = *(void **)a1;
      if (v21 + 9 == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(*(void *)a1 + 64, (unsigned __int16 *)v12, v11))
      {
        char v61 = 0;
      }
      else
      {
        unsigned int v58 = v11;
        unint64_t v22 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(void *)(a1 + 8) + 40), (uint64_t)&v12[v11], v20);
        if (v22 <= 0x100000000) {
          unsigned int v23 = 0;
        }
        else {
          unsigned int v23 = v22;
        }
        int v24 = v23 & 0xFFFFFF;
        float v25 = (float)(v23 & 0xFFFFFF);
        if (v10 >= v25)
        {
          char v61 = 0;
        }
        else
        {
          int v26 = (v23 >> 25) & 1;
          if (*(_DWORD *)(a1 + 20) <= (int)v20) {
            LOBYTE(v26) = 1;
          }
          char v61 = v26;
        }
        uint64_t v21 = *(void **)a1;
        uint64_t v39 = *(void *)(*(void *)a1 + 136);
        uint64_t v38 = *(void *)(*(void *)a1 + 144);
        if (v39 != v38)
        {
          while (1)
          {
            std::basic_string<char16_t>::__assign_external(&v65, *(const std::basic_string<char16_t>::value_type **)v39, *(void *)(v39 + 8));
            std::basic_string<char16_t>::append(&v65, (const std::basic_string<char16_t>::value_type *)v19, v20);
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v40 = &v65;
            }
            else {
              uint64_t v40 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
            }
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v41 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
            }
            else {
              int v41 = v65.__r_.__value_.__r.__words[1];
            }
            unint64_t v42 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(void *)(a1 + 8) + 40), (uint64_t)v40, v41);
            if (v42 <= 0x100000000) {
              unsigned int v43 = 0;
            }
            else {
              unsigned int v43 = v42;
            }
            BOOL v44 = v10 >= (float)(v43 & 0xFFFFFF) || (int)(v43 & 0xFFFFFF) <= v24;
            if (v44) {
              goto LABEL_77;
            }
            if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
            {
              std::basic_string<char16_t>::size_type size = v65.__r_.__value_.__l.__size_;
              if ((v43 & 0x2000000) == 0 && *(_DWORD *)(a1 + 20) > SLODWORD(v65.__r_.__value_.__r.__words[1])) {
                goto LABEL_77;
              }
              char v61 = 1;
              unsigned int v19 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
            }
            else
            {
              std::basic_string<char16_t>::size_type size = HIBYTE(v65.__r_.__value_.__r.__words[2]);
              if ((v43 & 0x2000000) == 0 && *(_DWORD *)(a1 + 20) > (int)HIBYTE(v65.__r_.__value_.__r.__words[2])) {
                goto LABEL_77;
              }
              char v61 = 1;
              unsigned int v19 = &v65;
            }
            std::basic_string<char16_t>::size_type v20 = size;
            int v24 = v43 & 0xFFFFFF;
            unsigned int v23 = v43;
LABEL_77:
            v39 += 16;
            if (v39 == v38)
            {
              float v25 = (float)v24;
              uint64_t v21 = *(void **)a1;
              break;
            }
          }
        }
        unsigned int v46 = v62;
        if (v61) {
          unsigned int v46 = v23;
        }
        unsigned int v62 = v46;
        if (v61) {
          float v10 = v25;
        }
        uint64_t v2 = v57;
        unsigned int v11 = v58;
        unsigned int v12 = (std::basic_string<char16_t>::value_type *)v63;
      }
      if (v21 + 12 == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>((uint64_t)(v21 + 11), (unsigned __int16 *)v12, v13)|| v10 > (float)*(int *)(a1 + 24)|| (uint64_t v47 = v21[14], v48 = v21[15], v47 == v48))
      {
        char v50 = v61;
      }
      else
      {
        float v49 = v10;
        char v50 = v61;
        do
        {
          std::basic_string<char16_t>::__assign_external(&v65, *(const std::basic_string<char16_t>::value_type **)v47, *(void *)(v47 + 8));
          std::basic_string<char16_t>::append(&v65, (const std::basic_string<char16_t>::value_type *)v19, v20);
          if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v51 = &v65;
          }
          else {
            int v51 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
          }
          if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v52 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
          }
          else {
            int v52 = v65.__r_.__value_.__r.__words[1];
          }
          unint64_t v53 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(void *)(a1 + 8) + 40), (uint64_t)v51, v52);
          if (v53 <= 0x100000000) {
            unsigned int v54 = 0;
          }
          else {
            unsigned int v54 = v53;
          }
          if (v49 < (float)(v54 & 0xFFFFFF))
          {
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              unsigned int v19 = &v65;
            }
            else {
              unsigned int v19 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
            }
            if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v20 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v20 = v65.__r_.__value_.__l.__size_;
            }
            char v50 = 1;
            float v49 = (float)(v54 & 0xFFFFFF);
            unsigned int v62 = v54;
          }
          v47 += 16;
        }
        while (v47 != v48);
      }
      if (v50) {
        goto LABEL_116;
      }
      goto LABEL_109;
    }
    npc<morphun::tokenizer::dictionary::Segment>(v2);
    uint64_t v27 = *(void *)(v2 + 40);
    if (!v27) {
      LODWORD(v27) = *(_DWORD *)(v2 + 20) - *(_DWORD *)(v2 + 24);
    }
    if ((int)v27 < *(_DWORD *)(a1 + 20)) {
      goto LABEL_110;
    }
    uint64_t v28 = *(void *)(*(void *)a1 + 136);
    uint64_t v29 = *(void *)(*(void *)a1 + 144);
    if (v28 != v29) {
      break;
    }
LABEL_109:
    unsigned int v12 = (std::basic_string<char16_t>::value_type *)v63;
LABEL_110:
    BOOL v44 = (int)v11 <= 1;
    unsigned int v11 = v60;
    unint64_t v8 = v64;
    if (v44) {
      goto LABEL_119;
    }
  }
  unsigned int v59 = v11;
  char v30 = 0;
  char v31 = 1;
  float v32 = v10;
  do
  {
    std::basic_string<char16_t>::__assign_external(&v65, *(const std::basic_string<char16_t>::value_type **)v28, *(void *)(v28 + 8));
    std::basic_string<char16_t>::append(&v65, v63, v64);
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v33 = &v65;
    }
    else {
      unint64_t v33 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
    }
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v34 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
    }
    else {
      int v34 = v65.__r_.__value_.__r.__words[1];
    }
    unint64_t v35 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(*(void *)(a1 + 8) + 40), (uint64_t)v33, v34);
    if (v35 <= 0x100000000) {
      unsigned int v36 = 0;
    }
    else {
      unsigned int v36 = v35;
    }
    if (v32 < (float)(v36 & 0xFFFFFF))
    {
      if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::size_type v37 = v65.__r_.__value_.__l.__size_;
        if ((v36 & 0x2000000) != 0 || *(_DWORD *)(a1 + 20) <= SLODWORD(v65.__r_.__value_.__r.__words[1]))
        {
          char v31 = 0;
          char v30 = 1;
          unsigned int v19 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
          goto LABEL_49;
        }
      }
      else
      {
        std::basic_string<char16_t>::size_type v37 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
        if ((v36 & 0x2000000) != 0 || *(_DWORD *)(a1 + 20) <= (int)HIBYTE(v65.__r_.__value_.__r.__words[2]))
        {
          char v31 = 0;
          char v30 = 1;
          unsigned int v19 = &v65;
LABEL_49:
          std::basic_string<char16_t>::size_type v20 = v37;
          float v32 = (float)(v36 & 0xFFFFFF);
          unsigned int v62 = v36;
        }
      }
    }
    v28 += 16;
  }
  while (v28 != v29);
  unsigned int v12 = (std::basic_string<char16_t>::value_type *)v63;
  if ((v30 & 1) == 0)
  {
    unsigned int v11 = v59;
    goto LABEL_110;
  }
  BOOL v55 = (v31 & 1) == 0;
  unsigned int v11 = v59;
  if (v55) {
    unsigned int v11 = -1;
  }
LABEL_116:
  npc<morphun::tokenizer::dictionary::Segment>(v2);
  *(void *)(v2 + 32) = v19;
  *(void *)(v2 + 40) = v20;
  if ((int)v11 >= 1)
  {
    *(_DWORD *)(v2 + 24) = *(_DWORD *)(v2 + 16) + v11;
    *(_DWORD *)(v2 + 28) = v11;
  }
  int16x8_t v56 = (int16x8_t)vshlq_u32((uint32x4_t)vdupq_n_s32(v62), (uint32x4_t)xmmword_1D2D6F520);
  v56.i64[0] = *(void *)&vmovn_s32((int32x4_t)v56) & 0xFF81FF81FF81FF81;
  *(float *)(v2 + 48) = (float)(v62 & 0xFFFFFF);
  *(_DWORD *)(v2 + 52) = vmovn_s16(v56).u32[0];
  *(unsigned char *)(v2 + 56) = HIBYTE(v62) & 1;
LABEL_119:
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v65.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C6EE00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::tokenizer::dictionary::Segment>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C6EE94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrie<int>::find(marisa::Trie *a1, uint64_t a2, int a3)
{
  int KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId(a1, a2, a3);
  if (KeyId < 0) {
    return 0;
  }
  else {
    return morphun::dictionary::metadata::CompressedArray<int>::read((uint64_t)a1 + 24, KeyId) | 0x100000000;
  }
}

uint64_t morphun::dictionary::metadata::MarisaTrie<int>::getKeyId(marisa::Trie *a1, uint64_t a2, int a3)
{
  memset(&__p, 0, sizeof(__p));
  long long v10 = 0u;
  memset(v9, 0, sizeof(v9));
  morphun::dictionary::metadata::CharsetConverter::encode((uint64_t)a1 + 8, &__p, a2, a3);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  marisa::Agent::set_query(v9, (const char *)p_p, size);
  int v6 = marisa::Trie::lookup(a1, (marisa::Agent *)v9);
  unsigned int v7 = DWORD1(v10);
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((void *)&v10 + 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v6) {
    return v7;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

void sub_1D2C6EFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::CompressedArray<int>::read(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = v2 * a2;
  int v4 = v2 * a2 + 63;
  if (v2 * a2 >= 0) {
    int v4 = v2 * a2;
  }
  int v5 = v2 + v3;
  int v6 = v5 - 1;
  int v7 = v5 + 62;
  if (v6 >= 0) {
    int v7 = v6;
  }
  if (a2 < 0 || (int v8 = v7 >> 6, v8 > *(_DWORD *)a1))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Invalid CompressedArray index");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  int v9 = v4 >> 6;
  char v10 = v3 - (v4 & 0xC0);
  unsigned int v11 = (void *)(*(void *)(a1 + 8) + 8 * (v4 >> 6));
  uint64_t v12 = *v11 >> v10;
  if (v9 != v8) {
    v12 |= v11[1] << -v10;
  }
  return v12 & *(void *)(a1 + 16);
}

void sub_1D2C6F0BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  v64[2] = *MEMORY[0x1E4F143B8];
  morphun::dialog::DictionaryLookupFunction::determinePhrase(a1, a2, 1, (uint64_t)&v63);
  std::basic_string<char16_t>::size_type size = HIBYTE(v63.__r_.__value_.__r.__words[2]);
  int v7 = SHIBYTE(v63.__r_.__value_.__r.__words[2]);
  if ((v63.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v63.__r_.__value_.__l.__size_;
  }
  if (size) {
    goto LABEL_4;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    if (v8)
    {
      uint64_t v62 = 0;
      int v9 = *(const UChar **)a2;
      goto LABEL_11;
    }
LABEL_4:
    *a3 = v63;
    return;
  }
  uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  if (!*(unsigned char *)(a2 + 23)) {
    goto LABEL_4;
  }
  uint64_t v62 = 0;
  int v9 = (const UChar *)a2;
LABEL_11:
  CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 208), (uint64_t)&v62, v9, v8);
  if (*(_DWORD *)(a1 + 232) || !CombinedBinaryType || (*(void *)(a1 + 224) & v62) != 0)
  {
    unsigned int v59 = 0;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    morphun::dialog::DictionaryLookupFunction::getFirstWord(&__p, *(void *)(a1 + 160), a2);
    int32_t v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type v12 = __p.__r_.__value_.__r.__words[0];
    int32_t v13 = __p.__r_.__value_.__r.__words[1];
    uint64_t v15 = morphun::util::LocaleUtils::SPANISH(v14);
    if ((v11 & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)v12;
    }
    if ((v11 & 0x80u) == 0) {
      int32_t v17 = v11;
    }
    else {
      int32_t v17 = v13;
    }
    uint64_t v18 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::StringViewUtils::lowercase((uint64_t)&v59, (const UChar *)p_p, v17, v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    int v19 = *(_DWORD *)(a1 + 232);
    if (v19 == 1)
    {
      uint64_t v35 = 0;
      unint64_t v36 = HIBYTE(v61);
      std::basic_string<char16_t>::size_type v37 = &v59;
      if (v61 < 0)
      {
        std::basic_string<char16_t>::size_type v37 = v59;
        unint64_t v36 = v60;
      }
      while (1)
      {
        uint64_t v38 = *(&off_1E695D7C0 + v35);
        if (!*v38) {
          break;
        }
        unint64_t v39 = 0;
        do
          uint64_t v40 = v39++;
        while (v38[v40 + 1]);
        if (v36 >= v39)
        {
          if (!v39) {
            break;
          }
          uint64_t v41 = ~v40;
          do
          {
            int v42 = (unsigned __int16)v37[v36 + v41];
            int v44 = (unsigned __int16)*v38++;
            int v43 = v44;
          }
          while (v44 == v42 && v41++ != -1);
          if (v43 == v42) {
            break;
          }
        }
        if (++v35 == 3)
        {
          if (v36 && v37[v36 - 1] == 115)
          {
            uint64_t v34 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v18);
            goto LABEL_75;
          }
          break;
        }
      }
      uint64_t v34 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v18);
LABEL_75:
      if (*(char *)(v34 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v34, *(void *)(v34 + 8));
        goto LABEL_78;
      }
    }
    else
    {
      if (v19)
      {
LABEL_81:
        if (SHIBYTE(v61) < 0) {
          operator delete(v59);
        }
        goto LABEL_4;
      }
      uint64_t v57 = 0;
      if (v61 >= 0) {
        std::basic_string<char16_t>::size_type v20 = (const UChar *)&v59;
      }
      else {
        std::basic_string<char16_t>::size_type v20 = (const UChar *)v59;
      }
      if (v61 >= 0) {
        uint64_t v21 = HIBYTE(v61);
      }
      else {
        uint64_t v21 = v60;
      }
      unint64_t v22 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 208), (uint64_t)&v57, v20, v21);
      uint64_t v23 = 0;
      unint64_t v24 = HIBYTE(v61);
      if (v61 >= 0) {
        float v25 = (unsigned __int16 *)&v59;
      }
      else {
        float v25 = (unsigned __int16 *)v59;
      }
      if (v61 < 0) {
        unint64_t v24 = v60;
      }
      do
      {
        int v26 = off_1E695D790[v23];
        if (!*v26) {
          goto LABEL_71;
        }
        unint64_t v27 = 0;
        do
          uint64_t v28 = v27++;
        while (v26[v28 + 1]);
        if (v24 >= v27)
        {
          if (!v27) {
            goto LABEL_71;
          }
          uint64_t v29 = ~v28;
          do
          {
            int v30 = v25[v24 + v29];
            int v32 = (unsigned __int16)*v26++;
            int v31 = v32;
          }
          while (v32 == v30 && v29++ != -1);
          if (v31 == v30)
          {
LABEL_71:
            uint64_t v34 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v22);
            goto LABEL_72;
          }
        }
        ++v23;
      }
      while (v23 != 6);
      if (v22)
      {
LABEL_49:
        uint64_t v34 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v22);
LABEL_72:
        if ((*(char *)(v34 + 23) & 0x80000000) == 0) {
          goto LABEL_76;
        }
LABEL_73:
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v34, *(void *)(v34 + 8));
        goto LABEL_78;
      }
      char v46 = 0;
      uint64_t v47 = 0;
      v64[0] = word_1D2ECEEBE;
      v64[1] = "a";
      while (1)
      {
        char v48 = v46;
        float v49 = (_WORD *)v64[v47];
        if (!*v49) {
          break;
        }
        unint64_t v50 = 0;
        do
          uint64_t v51 = v50++;
        while (v49[v51 + 1]);
        if (v24 >= v50)
        {
          if (!v50) {
            break;
          }
          uint64_t v52 = ~v51;
          do
          {
            int v53 = v25[v24 + v52];
            int v55 = (unsigned __int16)*v49++;
            int v54 = v55;
          }
          while (v55 == v53 && v52++ != -1);
          if (v54 == v53) {
            break;
          }
        }
        char v46 = 1;
        uint64_t v47 = 1;
        if (v48) {
          goto LABEL_49;
        }
      }
      uint64_t v34 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(0);
      if (*(char *)(v34 + 23) < 0) {
        goto LABEL_73;
      }
    }
LABEL_76:
    std::basic_string<char16_t> __p = *(std::basic_string<char16_t> *)v34;
LABEL_78:
    if (v7 < 0) {
      operator delete(v63.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> v63 = __p;
    goto LABEL_81;
  }
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (v7 < 0) {
    operator delete(v63.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C6F4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (v25 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction(morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction *this)
{
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &unk_1F29FB718;
  int v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  int v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::EsGrammarSynthesizer_CountGenderLookupFunction(morphun::util::LocaleUtils *a1)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1F29FB6C0;
  int v2 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::SPANISH(a1);
  uint64_t v3 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v2);
  if (*(char *)(v3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, *(const std::basic_string<char16_t>::value_type **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    v9.__r_.__value_.__r.__words[2] = *(void *)(v3 + 16);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v3);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v10, *(const std::basic_string<char16_t>::value_type **)v5, *(void *)(v5 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    v10.__r_.__value_.__r.__words[2] = *(void *)(v5 + 16);
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v6;
  }
  long long __p = 0uLL;
  v12[0] = 0;
  p_p = &__p;
  char v8 = 0;
  *(void *)&long long __p = operator new(0x30uLL);
  *((void *)&__p + 1) = __p;
  v12[0] = __p + 48;
  *((void *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v12, (long long *)&v9, &__p, (std::basic_string<char16_t> *)__p);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)a1, (uint64_t *)&off_1F2A06738, v2);
}

void sub_1D2C6F8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0) {
    operator delete(__p);
  }
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v25, (uint64_t *)&off_1F2A06738);
  _Unwind_Resume(a1);
}

uint64_t mca_createTokenChainString(uint64_t a1, const __CFString *a2)
{
  npc<morphun::analysis::ConfigurableAnalyzer>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 64))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1D2C6FA04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    uint64_t v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2C6F9ECLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::analysis::ConfigurableAnalyzer>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C6FAB4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mca_createTokenChain(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = npc<morphun::analysis::ConfigurableAnalyzer>(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 72))(v3, a2);
}

void morphun::Token_Head::newInstance(morphun::Token_Head *this)
{
}

void sub_1D2C6FC14(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this, int a2)
{
  *(void *)this = &unk_1F29F3DA8;
  double result = morphun::Token_Delim::Token_Delim(this, (uint64_t *)&off_1F2A04E50, a2, a2, &word_1D2ED0AEE, 0, &word_1D2ED0AEE, 0);
  *(void *)double result = &off_1F2A08320;
  return result;
}

void morphun::Token_Delim::~Token_Delim(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1F2A04F80);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::Token::~Token(this, (void **)&off_1F2A04F80);
}

void morphun::Token_Head::~Token_Head(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1F2A04E58);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::Token::~Token(this, (void **)&off_1F2A04E58);
}

morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this, uint64_t *a2)
{
  return morphun::Token_Head::Token_Head(this, a2, 0);
}

morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this, uint64_t *a2, int a3)
{
  double result = morphun::Token_Delim::Token_Delim(this, a2 + 1, a3, a3, &word_1D2ED0AEE, 0, &word_1D2ED0AEE, 0);
  uint64_t v5 = *a2;
  *(void *)double result = *a2;
  *(void *)((char *)result + *(void *)(v5 - 64)) = a2[7];
  *(void *)((char *)result + *(void *)(*(void *)result - 40)) = a2[8];
  return result;
}

morphun::Token *morphun::Token_Head::Token_Head(morphun::Token_Head *this)
{
  return morphun::Token_Head::Token_Head(this, 0);
}

void *morphun::analysis::util::FilteringTokenFilter::reset(morphun::analysis::util::FilteringTokenFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 13) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)this);
  double result = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)this + 1, (uint64_t)"N7morphun8analysis15tokenattributes15OffsetAttributeE");
  if (result)
  {
    double result = (void *)result[3];
    if (result) {
  }
    }
  *((void *)this + 14) = result;
  return result;
}

uint64_t morphun::analysis::util::FilteringTokenFilter::end(morphun::analysis::util::FilteringTokenFilter *this)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)npc<morphun::analysis::TokenStream>(*((void *)this + 12)) + 32);

  return v1();
}

uint64_t morphun::analysis::util::FilteringTokenFilter::incrementToken(morphun::analysis::util::FilteringTokenFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
LABEL_29:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (void **)((char *)this + 120);
  while (1)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
    if (!v4
      || ((*(uint64_t (**)(morphun::analysis::util::FilteringTokenFilter *))(*(void *)this + 56))(this) & 1) != 0)
    {
      return v4;
    }
    uint64_t v5 = *((void *)this + 13);
    if (v5)
    {
      uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 72))(v5);
      if (v3 != (void **)v6) {
        std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 120, *(char **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 2);
      }
      uint64_t v7 = *((void *)this + 14);
      if (!v7) {
        goto LABEL_29;
      }
      int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 72))(v7);
      int v9 = v8;
      int32_t v11 = (char *)*((void *)this + 16);
      unint64_t v10 = *((void *)this + 17);
      if ((unint64_t)v11 >= v10)
      {
        int32_t v13 = (char *)*v3;
        uint64_t v14 = (v11 - (unsigned char *)*v3) >> 2;
        unint64_t v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v16 = v10 - (void)v13;
        if (v16 >> 1 > v15) {
          unint64_t v15 = v16 >> 1;
        }
        if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v15;
        }
        if (v17)
        {
          unint64_t v17 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v17);
          int32_t v13 = (char *)*((void *)this + 15);
          int32_t v11 = (char *)*((void *)this + 16);
        }
        else
        {
          uint64_t v18 = 0;
        }
        int v19 = (_DWORD *)(v17 + 4 * v14);
        *int v19 = v9;
        std::basic_string<char16_t>::size_type v12 = v19 + 1;
        while (v11 != v13)
        {
          int v20 = *((_DWORD *)v11 - 1);
          v11 -= 4;
          *--int v19 = v20;
        }
        *((void *)this + 15) = v19;
        *((void *)this + 16) = v12;
        *((void *)this + 17) = v17 + 4 * v18;
        if (v13) {
          operator delete(v13);
        }
      }
      else
      {
        *(_DWORD *)int32_t v11 = v8;
        std::basic_string<char16_t>::size_type v12 = v11 + 4;
      }
      *((void *)this + 16) = v12;
      uint64_t v21 = *((void *)this + 13);
      npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(v21);
      uint64_t v22 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((void *)this + 13));
      uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 64))(v22);
      (*(void (**)(uint64_t, uint64_t, char *))(*(void *)v21 + 56))(v21, v23, (char *)this + 120);
    }
    uint64_t v2 = *((void *)this + 12);
    if (!v2) {
      goto LABEL_29;
    }
  }
}

void sub_1D2C701D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C70240(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double morphun::analysis::util::FilteringTokenFilter::FilteringTokenFilter(morphun::analysis::util::FilteringTokenFilter *this, morphun::analysis::TokenStream *a2, uint64_t a3)
{
  uint64_t v4 = morphun::analysis::TokenFilter::TokenFilter(this, (morphun::analysis::TokenStream *)((char *)a2 + 8), a3);
  uint64_t v5 = *(void *)a2;
  *(void *)uint64_t v4 = *(void *)a2;
  *(void *)((char *)v4 + *(void *)(v5 - 40)) = *((void *)a2 + 7);
  *((void *)v4 + 17) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)v4 + 120) = 0u;
  *(_OWORD *)((char *)v4 + 104) = 0u;
  return result;
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_ToPrepositionLookupFunction::getArticle(uint64_t a1, uint64_t a2)
{
  v15[0] = 0;
  v15[1] = 0;
  uint64_t v16 = 0;
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v3 = (morphun::lang::StringFilterUtil *)morphun::util::StringUtils::trim(v2, &__str);
  std::basic_string<char16_t>::size_type v4 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  int v5 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v4 = __str.__r_.__value_.__l.__size_;
  }
  if (!v4) {
    operator new();
  }
  uint64_t v7 = (void *)morphun::lang::StringFilterUtil::ARABIC_SCRIPT(v3);
  int v8 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  p_str = &__str;
  if (v5 < 0) {
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  if (!MEMORY[0x1D942C150](*v7, (unsigned __int16)p_str->__r_.__value_.__s.__data_[0]))
  {
    uint64_t v12 = 3;
    HIBYTE(v16) = 3;
    LODWORD(v15[0]) = 104859204;
    WORD2(v15[0]) = 160;
    goto LABEL_20;
  }
  if (v5 < 0)
  {
    if (size > 3)
    {
      int32_t v11 = v8;
      if (v8->__r_.__value_.__s.__data_[0] == 1575)
      {
LABEL_15:
        if (v11->__r_.__value_.__s.__data_[1] == 1604)
        {
          std::basic_string<char16_t>::basic_string(&v13, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v10);
          if (v5 < 0) {
            operator delete(v8);
          }
          std::basic_string<char16_t> __str = v13;
        }
      }
    }
  }
  else if (v5 >= 4 && (unsigned __int16)v8 == 1575)
  {
    int32_t v11 = &__str;
    goto LABEL_15;
  }
  uint64_t v12 = 1;
  HIBYTE(v16) = 1;
  LOWORD(v15[0]) = 1604;
LABEL_20:
  *(_WORD *)((unint64_t)v15 | (2 * v12)) = 0;
  operator new();
}

void sub_1D2C704F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_ToPrepositionLookupFunction::~ArGrammarSynthesizer_ToPrepositionLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_ToPrepositionLookupFunction *this)
{
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isValidCountConstraint(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, *(void *)(a1 + 16));
  BOOL v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getCount((unsigned __int16 *)&__p) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_1D2C705D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isValidCaseConstraint(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, *(void *)(a1 + 24));
  BOOL v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getCase((unsigned __int16 *)&__p) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_1D2C70650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isValidDeclensionConstraint(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, *(void *)(a1 + 8));
  BOOL v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension((unsigned __int16 *)&__p) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_1D2C706D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isNoun(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(char *)(a2 + 23);
  if (v5 >= 0) {
    uint64_t v6 = (const UChar *)a2;
  }
  else {
    uint64_t v6 = *(const UChar **)a2;
  }
  if (v5 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  uint64_t v12 = 0;
  double result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v4, (uint64_t)&v12, v6, v7);
  if (result)
  {
    uint64_t v12 = 0;
    int v9 = *(char *)(a2 + 23);
    if (v9 >= 0) {
      unint64_t v10 = (const UChar *)a2;
    }
    else {
      unint64_t v10 = *(const UChar **)a2;
    }
    if (v9 >= 0) {
      uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      uint64_t v11 = *(void *)(a2 + 8);
    }
    double result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v12, v10, v11);
    if (result) {
      return (void *)((*(void *)(a1 + 48) & v12) != 0);
    }
  }
  return result;
}

void *morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::isAdjective(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(char *)(a2 + 23);
  if (v5 >= 0) {
    uint64_t v6 = (const UChar *)a2;
  }
  else {
    uint64_t v6 = *(const UChar **)a2;
  }
  if (v5 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  uint64_t v12 = 0;
  double result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v4, (uint64_t)&v12, v6, v7);
  if (result)
  {
    uint64_t v12 = 0;
    int v9 = *(char *)(a2 + 23);
    if (v9 >= 0) {
      unint64_t v10 = (const UChar *)a2;
    }
    else {
      unint64_t v10 = *(const UChar **)a2;
    }
    if (v9 >= 0) {
      uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      uint64_t v11 = *(void *)(a2 + 8);
    }
    double result = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 32), (uint64_t)&v12, v10, v11);
    if (result) {
      return (void *)((*(void *)(a1 + 40) & v12) != 0);
    }
  }
  return result;
}

morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern *morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::NlGrammarSynthesizer_NlInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern *this, const morphun::dialog::SemanticFeatureModel *a2, uint64_t a3)
{
  *(void *)&long long v32 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 64)) = *((void *)a2 + 1);
  uint64_t v6 = (morphun::util::LocaleUtils *)*((void *)a2 + 2);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = v6;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  uint64_t v7 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::DUTCH(v6);
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v7, v8);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v10 = Dictionary;
  *((void *)this + 5) = 0;
  *((void *)this + 4) = Dictionary;
  *((void *)this + 6) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "a");
  long long __dst = 0;
  int v26 = 0;
  unint64_t v27 = 0;
  p_dst = &__dst;
  char v29 = 0;
  long long __dst = operator new(0x18uLL);
  int v26 = __dst;
  unint64_t v27 = (char *)__dst + 24;
  int v26 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v27, (long long *)__p, &v32, (std::basic_string<char16_t> *)__dst);
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v10, (uint64_t *)this + 5, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_dst = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  if (v31 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v12 = *((void *)this + 4);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"noun");
  long long __dst = 0;
  int v26 = 0;
  unint64_t v27 = 0;
  p_dst = &__dst;
  char v29 = 0;
  long long __dst = operator new(0x18uLL);
  int v26 = __dst;
  unint64_t v27 = (char *)__dst + 24;
  int v26 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v27, (long long *)__p, &v32, (std::basic_string<char16_t> *)__dst);
  std::basic_string<char16_t> v13 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)this + 6, (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v13);
  p_dst = &__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  if (v31 < 0) {
    operator delete(__p[0]);
  }
  {
    operator new();
  }
  uint64_t v14 = (unsigned __int16 *)morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION(void)::DECLENSION_;
  npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION(void)::DECLENSION_);
  uint64_t v15 = a3 + 8;
  uint64_t v16 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, v14);
  uint64_t v17 = a3 + 16;
  if (v17 == v16) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = *(void *)(v16 + 56);
  }
  *((void *)this + 1) = v18;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
  uint64_t v19 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v15, (unsigned __int16 *)&__dst);
  if (v17 == v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)(v19 + 56);
  }
  *((void *)this + 2) = v20;
  if (SHIBYTE(v27) < 0) {
    operator delete(__dst);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
  uint64_t v21 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v15, (unsigned __int16 *)&__dst);
  if (v17 == v21) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = *(void *)(v21 + 56);
  }
  *((void *)this + 3) = v22;
  if (SHIBYTE(v27) < 0) {
    operator delete(__dst);
  }
  return this;
}

void sub_1D2C70BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  MEMORY[0x1D942B8B0](v20, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(const void **a1, uint64_t a2)
{
  if (morphun::util::gLogLevel <= 1)
  {
    std::operator+<char16_t>((uint64_t)&v7, L"Unsupported inflection of '", a1);
    std::basic_string<char16_t>::append(&v7, L"': ", 3uLL);
    std::basic_string<char16_t> v8 = v7;
    memset(&v7, 0, sizeof(v7));
    int v3 = *(char *)(a2 + 23);
    if (v3 >= 0) {
      uint64_t v4 = (const std::basic_string<char16_t>::value_type *)a2;
    }
    else {
      uint64_t v4 = *(const std::basic_string<char16_t>::value_type **)a2;
    }
    if (v3 >= 0) {
      std::basic_string<char16_t>::size_type v5 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::basic_string<char16_t>::size_type v5 = *(void *)(a2 + 8);
    }
    std::basic_string<char16_t>::append(&v8, v4, v5);
    std::basic_string<char16_t> v9 = v8;
    memset(&v8, 0, sizeof(v8));
    if (morphun::util::gLogLevel <= 1)
    {
      if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v6 = &v9;
      }
      else {
        uint64_t v6 = (std::basic_string<char16_t> *)v9.__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v6);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v7.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D2C70DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 25) < 0) {
    operator delete(*(void **)(v21 - 48));
  }
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

unint64_t morphun::resources::DataResource::getProperties(void *a1, uint64_t *a2, unint64_t a3, int a4)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  std::basic_string<char16_t> v8 = (void *)morphun::resources::DataResource::getProperties(std::u16string_view,BOOL)::resources;
  unint64_t result = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](a2, 2 * a3);
  int8x8_t v10 = (int8x8_t)v8[1];
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8(v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v12 = result;
      if (result >= *(void *)&v10) {
        unint64_t v12 = result % *(void *)&v10;
      }
    }
    else
    {
      unint64_t v12 = (*(void *)&v10 - 1) & result;
    }
    std::basic_string<char16_t> v13 = *(uint64_t ****)(*v8 + 8 * v12);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = (uint64_t **)*i)
      {
        unint64_t v15 = (unint64_t)i[1];
        if (v15 == result)
        {
          if (i[3] == (uint64_t *)a3)
          {
            if (!a3) {
              return ((uint64_t (*)(void))i[4])();
            }
            uint64_t v16 = (unsigned __int16 *)i[2];
            unint64_t v17 = a3;
            for (uint64_t j = a2; *(unsigned __int16 *)j == *v16; uint64_t j = (uint64_t *)((char *)j + 2))
            {
              ++v16;
              if (!--v17) {
                return ((uint64_t (*)(void))i[4])();
              }
            }
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v15 >= *(void *)&v10) {
              v15 %= *(void *)&v10;
            }
          }
          else
          {
            v15 &= *(void *)&v10 - 1;
          }
          if (v15 != v12) {
            break;
          }
        }
      }
    }
  }
  if (!a4)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(__dst, a2, a3);
    morphun::exception::FileNotFoundException::FileNotFoundException((uint64_t)exception, __dst);
  }
  a1[2] = 0;
  a1[1] = 0;
  *a1 = a1 + 1;
  return result;
}

void sub_1D2C7105C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x10A0C408EF24B1CLL);
  _Unwind_Resume(a1);
}

uint64_t *std::unordered_map<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void),std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,std::allocator<std::pair<std::u16string_view const,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::unordered_map(uint64_t *a1, long long *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_DWORD *)a1 + 8) = 1065353216;
  if (a3)
  {
    std::basic_string<char16_t>::size_type v5 = a2;
    unint64_t v6 = 0;
    uint64_t v7 = 0;
    std::basic_string<char16_t> v8 = (long long *)((char *)a2 + 24 * a3);
    std::basic_string<char16_t> v9 = a1 + 2;
    while (1)
    {
      int8x8_t v10 = *(uint64_t **)v5;
      uint64_t v11 = *((void *)v5 + 1);
      unint64_t v12 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](*(uint64_t **)v5, 2 * v11);
      unint64_t v13 = v12;
      if (v6)
      {
        uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
        v14.i16[0] = vaddlv_u8(v14);
        if (v14.u32[0] > 1uLL)
        {
          unint64_t v3 = v12;
          if (v12 >= v6) {
            unint64_t v3 = v12 % v6;
          }
        }
        else
        {
          unint64_t v3 = (v6 - 1) & v12;
        }
        uint64_t v15 = *(void **)(*a1 + 8 * v3);
        if (v15)
        {
          for (uint64_t i = (void *)*v15; i; uint64_t i = (void *)*i)
          {
            unint64_t v17 = i[1];
            if (v17 == v12)
            {
              if (i[3] == v11)
              {
                if (!v11) {
                  goto LABEL_79;
                }
                uint64_t v18 = (unsigned __int16 *)i[2];
                uint64_t v19 = v11;
                uint64_t v20 = v10;
                while (*(unsigned __int16 *)v20 == *v18)
                {
                  ++v18;
                  uint64_t v20 = (uint64_t *)((char *)v20 + 2);
                  if (!--v19) {
                    goto LABEL_79;
                  }
                }
              }
            }
            else
            {
              if (v14.u32[0] > 1uLL)
              {
                if (v17 >= v6) {
                  v17 %= v6;
                }
              }
              else
              {
                v17 &= v6 - 1;
              }
              if (v17 != v3) {
                break;
              }
            }
          }
        }
      }
      uint64_t v21 = operator new(0x28uLL);
      void *v21 = 0;
      v21[1] = v13;
      long long v22 = *v5;
      v21[4] = *((void *)v5 + 2);
      *((_OWORD *)v21 + 1) = v22;
      float v23 = (float)(unint64_t)(v7 + 1);
      float v24 = *((float *)a1 + 8);
      if (!v6 || (float)(v24 * (float)v6) < v23) {
        break;
      }
LABEL_69:
      uint64_t v40 = *a1;
      uint64_t v41 = *(void **)(*a1 + 8 * v3);
      if (v41)
      {
        void *v21 = *v41;
      }
      else
      {
        void *v21 = *v9;
        *std::basic_string<char16_t> v9 = v21;
        *(void *)(v40 + 8 * v3) = v9;
        if (!*v21) {
          goto LABEL_78;
        }
        unint64_t v42 = *(void *)(*v21 + 8);
        if ((v6 & (v6 - 1)) != 0)
        {
          if (v42 >= v6) {
            v42 %= v6;
          }
        }
        else
        {
          v42 &= v6 - 1;
        }
        uint64_t v41 = (void *)(*a1 + 8 * v42);
      }
      *uint64_t v41 = v21;
LABEL_78:
      uint64_t v7 = a1[3] + 1;
      a1[3] = v7;
LABEL_79:
      std::basic_string<char16_t>::size_type v5 = (long long *)((char *)v5 + 24);
      if (v5 == v8) {
        return a1;
      }
    }
    BOOL v25 = (v6 & (v6 - 1)) != 0;
    if (v6 < 3) {
      BOOL v25 = 1;
    }
    unint64_t v26 = v25 | (2 * v6);
    unint64_t v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27) {
      int8x8_t prime = (int8x8_t)v27;
    }
    else {
      int8x8_t prime = (int8x8_t)v26;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v6 = a1[1];
    }
    if (*(void *)&prime > v6) {
      goto LABEL_35;
    }
    if (*(void *)&prime < v6)
    {
      unint64_t v35 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v6 < 3 || (uint8x8_t v36 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v36.i16[0] = vaddlv_u8(v36), v36.u32[0] > 1uLL))
      {
        unint64_t v35 = std::__next_prime(v35);
      }
      else
      {
        uint64_t v37 = 1 << -(char)__clz(v35 - 1);
        if (v35 >= 2) {
          unint64_t v35 = v37;
        }
      }
      if (*(void *)&prime <= v35) {
        int8x8_t prime = (int8x8_t)v35;
      }
      if (*(void *)&prime >= v6)
      {
        unint64_t v6 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          char v29 = operator new(8 * *(void *)&prime);
          int v30 = (void *)*a1;
          *a1 = (uint64_t)v29;
          if (v30) {
            operator delete(v30);
          }
          uint64_t v31 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v31++) = 0;
          while (*(void *)&prime != v31);
          long long v32 = (void *)*v9;
          if (*v9)
          {
            unint64_t v33 = v32[1];
            uint8x8_t v34 = (uint8x8_t)vcnt_s8(prime);
            v34.i16[0] = vaddlv_u8(v34);
            if (v34.u32[0] > 1uLL)
            {
              if (v33 >= *(void *)&prime) {
                v33 %= *(void *)&prime;
              }
            }
            else
            {
              v33 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v33) = v9;
            uint64_t v38 = (void *)*v32;
            if (*v32)
            {
              do
              {
                unint64_t v39 = v38[1];
                if (v34.u32[0] > 1uLL)
                {
                  if (v39 >= *(void *)&prime) {
                    v39 %= *(void *)&prime;
                  }
                }
                else
                {
                  v39 &= *(void *)&prime - 1;
                }
                if (v39 != v33)
                {
                  if (!*(void *)(*a1 + 8 * v39))
                  {
                    *(void *)(*a1 + 8 * v39) = v32;
                    goto LABEL_60;
                  }
                  void *v32 = *v38;
                  *uint64_t v38 = **(void **)(*a1 + 8 * v39);
                  **(void **)(*a1 + 8 * v39) = v38;
                  uint64_t v38 = v32;
                }
                unint64_t v39 = v33;
LABEL_60:
                long long v32 = v38;
                uint64_t v38 = (void *)*v38;
                unint64_t v33 = v39;
              }
              while (v38);
            }
          }
          unint64_t v6 = (unint64_t)prime;
          goto LABEL_64;
        }
        int v43 = (void *)*a1;
        *a1 = 0;
        if (v43) {
          operator delete(v43);
        }
        unint64_t v6 = 0;
        a1[1] = 0;
      }
    }
LABEL_64:
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v13 >= v6) {
        unint64_t v3 = v13 % v6;
      }
      else {
        unint64_t v3 = v13;
      }
    }
    else
    {
      unint64_t v3 = (v6 - 1) & v13;
    }
    goto LABEL_69;
  }
  return a1;
}

void sub_1D2C71524(_Unwind_Exception *a1)
{
  operator delete(v2);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](uint64_t *a1, unint64_t a2)
{
  if (a2 > 0x20)
  {
    if (a2 <= 0x40)
    {
      uint64_t v5 = *(uint64_t *)((char *)a1 + a2 - 16);
      uint64_t v6 = *a1 - 0x3C5A37A36834CED9 * (v5 + a2);
      uint64_t v8 = a1[2];
      uint64_t v7 = a1[3];
      uint64_t v9 = __ROR8__(v6 + v7, 52);
      uint64_t v10 = v6 + a1[1];
      uint64_t v11 = __ROR8__(v10, 7);
      uint64_t v12 = v10 + v8;
      uint64_t v13 = *(uint64_t *)((char *)a1 + a2 - 32) + v8;
      uint64_t v14 = *(uint64_t *)((char *)a1 + a2 - 8) + v7;
      uint64_t v15 = __ROR8__(v14 + v13, 52);
      uint64_t v16 = v11 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v5 + a2), 37) + v9;
      uint64_t v17 = __ROR8__(v13, 37);
      uint64_t v18 = *(uint64_t *)((char *)a1 + a2 - 24) + v13;
      uint64_t v19 = __ROR8__(v18, 7);
      uint64_t v20 = v16 + __ROR8__(v12, 31);
      uint64_t v21 = v18 + v5;
      uint64_t v22 = v21 + v14;
      unint64_t v23 = 0x9AE16A3B2F90404FLL;
      unint64_t v24 = 0xC3A5C85C97CB3127 * (v22 + v20) - 0x651E95C4D06FBFB1 * (v12 + v7 + v17 + v19 + v15 + __ROR8__(v21, 31));
      unint64_t v25 = v20 - 0x3C5A37A36834CED9 * (v24 ^ (v24 >> 47));
      return (v25 ^ (v25 >> 47)) * v23;
    }
    unint64_t v4 = 0x9DDFEA08EB382D69;
    uint64_t v32 = *(uint64_t *)((char *)a1 + a2 - 48);
    uint64_t v33 = *(uint64_t *)((char *)a1 + a2 - 40);
    uint64_t v34 = *(uint64_t *)((char *)a1 + a2 - 24);
    uint64_t v36 = *(uint64_t *)((char *)a1 + a2 - 64);
    uint64_t v35 = *(uint64_t *)((char *)a1 + a2 - 56);
    uint64_t v37 = *(uint64_t *)((char *)a1 + a2 - 16);
    uint64_t v38 = *(uint64_t *)((char *)a1 + a2 - 8);
    unint64_t v39 = v35 + v37;
    unint64_t v40 = 0x9DDFEA08EB382D69
        * (v34 ^ ((0x9DDFEA08EB382D69 * (v34 ^ (v32 + a2))) >> 47) ^ (0x9DDFEA08EB382D69 * (v34 ^ (v32 + a2))));
    unint64_t v41 = 0x9DDFEA08EB382D69 * (v40 ^ (v40 >> 47));
    unint64_t v42 = v36 + a2 + v35 + v32;
    uint64_t v43 = v42 + v33;
    unint64_t v44 = __ROR8__(v42, 44) + v36 + a2 + __ROR8__(v33 + v36 + a2 - 0x622015F714C7D297 * (v40 ^ (v40 >> 47)), 21);
    uint64_t v45 = v35 + v37 + *(uint64_t *)((char *)a1 + a2 - 32) - 0x4B6D499041670D8DLL;
    uint64_t v46 = v45 + v34 + v37;
    uint64_t v47 = __ROR8__(v46, 44);
    uint64_t v48 = v46 + v38;
    uint64_t v49 = v47 + v45 + __ROR8__(v45 + v33 + v38, 21);
    uint64_t v51 = *a1;
    unint64_t v50 = a1 + 4;
    unint64_t v52 = v51 - 0x4B6D499041670D8DLL * v33;
    uint64_t v53 = -(uint64_t)((a2 - 1) & 0xFFFFFFFFFFFFFFC0);
    do
    {
      uint64_t v54 = *(v50 - 3);
      uint64_t v55 = v52 + v43 + v39 + v54;
      uint64_t v56 = v50[2];
      uint64_t v57 = v50[3];
      uint64_t v58 = v50[1];
      unint64_t v39 = v58 + v43 - 0x4B6D499041670D8DLL * __ROR8__(v39 + v44 + v56, 42);
      uint64_t v59 = v41 + v48;
      uint64_t v60 = *(v50 - 2);
      uint64_t v61 = *(v50 - 1);
      uint64_t v62 = *(v50 - 4) - 0x4B6D499041670D8DLL * v44;
      uint64_t v63 = v62 + v48 + v61;
      uint64_t v64 = v62 + v54 + v60;
      uint64_t v43 = v64 + v61;
      uint64_t v65 = __ROR8__(v64, 44) + v62;
      unint64_t v66 = (0xB492B66FBE98F273 * __ROR8__(v55, 37)) ^ v49;
      unint64_t v52 = 0xB492B66FBE98F273 * __ROR8__(v59, 33);
      unint64_t v44 = v65 + __ROR8__(v63 + v66, 21);
      unint64_t v67 = v52 + v49 + *v50;
      uint64_t v48 = v67 + v58 + v56 + v57;
      uint64_t v49 = __ROR8__(v67 + v58 + v56, 44) + v67 + __ROR8__(v39 + v60 + v67 + v57, 21);
      v50 += 8;
      unint64_t v41 = v66;
      v53 += 64;
    }
    while (v53);
    unint64_t v68 = v52
        - 0x622015F714C7D297
        * ((0x9DDFEA08EB382D69
          * (v49 ^ ((0x9DDFEA08EB382D69 * (v49 ^ v44)) >> 47) ^ (0x9DDFEA08EB382D69 * (v49 ^ v44)))) ^ ((0x9DDFEA08EB382D69 * (v49 ^ ((0x9DDFEA08EB382D69 * (v49 ^ v44)) >> 47) ^ (0x9DDFEA08EB382D69 * (v49 ^ v44)))) >> 47));
    unint64_t v69 = 0x9DDFEA08EB382D69
        * (v68 ^ (v66
                - 0x4B6D499041670D8DLL * (v39 ^ (v39 >> 47))
                - 0x622015F714C7D297
                * ((0x9DDFEA08EB382D69
                  * (v48 ^ ((0x9DDFEA08EB382D69 * (v48 ^ v43)) >> 47) ^ (0x9DDFEA08EB382D69 * (v48 ^ v43)))) ^ ((0x9DDFEA08EB382D69 * (v48 ^ ((0x9DDFEA08EB382D69 * (v48 ^ v43)) >> 47) ^ (0x9DDFEA08EB382D69 * (v48 ^ v43)))) >> 47))));
    unint64_t v70 = 0x9DDFEA08EB382D69 * (v68 ^ (v69 >> 47) ^ v69);
    goto LABEL_13;
  }
  if (a2 > 0x10)
  {
    uint64_t v26 = a1[1];
    unint64_t v27 = 0xB492B66FBE98F273 * *a1;
    uint64_t v28 = __ROR8__(0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a1 + a2 - 8), 30) + __ROR8__(v27 - v26, 43);
    unint64_t v29 = v27 + a2 + __ROR8__(v26 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a1 + a2 - 8);
    unint64_t v23 = 0x9DDFEA08EB382D69;
    unint64_t v30 = 0x9DDFEA08EB382D69 * (v29 ^ (v28 - 0x3C5A37A36834CED9 * *(uint64_t *)((char *)a1 + a2 - 16)));
    unint64_t v31 = v29 ^ (v30 >> 47) ^ v30;
LABEL_8:
    unint64_t v25 = 0x9DDFEA08EB382D69 * v31;
    return (v25 ^ (v25 >> 47)) * v23;
  }
  if (a2 < 9)
  {
    if (a2 >= 4)
    {
      uint64_t v72 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v23 = 0x9DDFEA08EB382D69;
      unint64_t v73 = 0x9DDFEA08EB382D69 * (((8 * *(_DWORD *)a1) + a2) ^ v72);
      unint64_t v31 = v72 ^ (v73 >> 47) ^ v73;
      goto LABEL_8;
    }
    unint64_t v4 = 0x9AE16A3B2F90404FLL;
    if (!a2) {
      return v4;
    }
    unint64_t v70 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                   * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
LABEL_13:
    v4 *= v70 ^ (v70 >> 47);
    return v4;
  }
  uint64_t v2 = *(uint64_t *)((char *)a1 + a2 - 8);
  uint64_t v3 = __ROR8__(v2 + a2, a2);
  return (0x9DDFEA08EB382D69
        * ((0x9DDFEA08EB382D69
          * (v3 ^ ((0x9DDFEA08EB382D69 * (v3 ^ *a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v3 ^ *a1)))) ^ ((0x9DDFEA08EB382D69 * (v3 ^ ((0x9DDFEA08EB382D69 * (v3 ^ *a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v3 ^ *a1)))) >> 47))) ^ v2;
}

uint64_t std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t morphun::resources::DataResource::getString(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t v6 = (void *)morphun::resources::DataResource::getString(std::u16string_view,BOOL)::resources;
  unint64_t v7 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](a1, 2 * a2);
  int8x8_t v8 = (int8x8_t)v6[1];
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8(v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v10 = v7;
      if (v7 >= *(void *)&v8) {
        unint64_t v10 = v7 % *(void *)&v8;
      }
    }
    else
    {
      unint64_t v10 = (*(void *)&v8 - 1) & v7;
    }
    uint64_t v11 = *(void **)(*v6 + 8 * v10);
    if (v11)
    {
      for (uint64_t i = (void *)*v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v7)
        {
          if (i[3] == a2)
          {
            if (!a2) {
              return i[4];
            }
            uint64_t v14 = (unsigned __int16 *)i[2];
            unint64_t v15 = a2;
            for (uint64_t j = a1; *(unsigned __int16 *)j == *v14; uint64_t j = (uint64_t *)((char *)j + 2))
            {
              ++v14;
              if (!--v15) {
                return i[4];
              }
            }
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v13 >= *(void *)&v8) {
              v13 %= *(void *)&v8;
            }
          }
          else
          {
            v13 &= *(void *)&v8 - 1;
          }
          if (v13 != v10) {
            break;
          }
        }
      }
    }
  }
  if ((a3 & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(v19, a1, a2);
    morphun::exception::FileNotFoundException::FileNotFoundException((uint64_t)exception, v19);
  }
  return 0;
}

void sub_1D2C71C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1D942B8B0](v14, 0x10A0C408EF24B1CLL);
  _Unwind_Resume(a1);
}

uint64_t *std::unordered_map<std::u16string_view,char16_t const*>::unordered_map(uint64_t *a1, long long *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_DWORD *)a1 + 8) = 1065353216;
  if (a3)
  {
    uint64_t v5 = a2;
    unint64_t v6 = 0;
    uint64_t v7 = 0;
    int8x8_t v8 = (long long *)((char *)a2 + 24 * a3);
    uint8x8_t v9 = a1 + 2;
    while (1)
    {
      unint64_t v10 = *(uint64_t **)v5;
      uint64_t v11 = *((void *)v5 + 1);
      unint64_t v12 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](*(uint64_t **)v5, 2 * v11);
      unint64_t v13 = v12;
      if (v6)
      {
        uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
        v14.i16[0] = vaddlv_u8(v14);
        if (v14.u32[0] > 1uLL)
        {
          unint64_t v3 = v12;
          if (v12 >= v6) {
            unint64_t v3 = v12 % v6;
          }
        }
        else
        {
          unint64_t v3 = (v6 - 1) & v12;
        }
        unint64_t v15 = *(void **)(*a1 + 8 * v3);
        if (v15)
        {
          for (uint64_t i = (void *)*v15; i; uint64_t i = (void *)*i)
          {
            unint64_t v17 = i[1];
            if (v17 == v12)
            {
              if (i[3] == v11)
              {
                if (!v11) {
                  goto LABEL_79;
                }
                uint64_t v18 = (unsigned __int16 *)i[2];
                uint64_t v19 = v11;
                uint64_t v20 = v10;
                while (*(unsigned __int16 *)v20 == *v18)
                {
                  ++v18;
                  uint64_t v20 = (uint64_t *)((char *)v20 + 2);
                  if (!--v19) {
                    goto LABEL_79;
                  }
                }
              }
            }
            else
            {
              if (v14.u32[0] > 1uLL)
              {
                if (v17 >= v6) {
                  v17 %= v6;
                }
              }
              else
              {
                v17 &= v6 - 1;
              }
              if (v17 != v3) {
                break;
              }
            }
          }
        }
      }
      uint64_t v21 = operator new(0x28uLL);
      void *v21 = 0;
      v21[1] = v13;
      long long v22 = *v5;
      v21[4] = *((void *)v5 + 2);
      *((_OWORD *)v21 + 1) = v22;
      float v23 = (float)(unint64_t)(v7 + 1);
      float v24 = *((float *)a1 + 8);
      if (!v6 || (float)(v24 * (float)v6) < v23) {
        break;
      }
LABEL_69:
      uint64_t v40 = *a1;
      unint64_t v41 = *(void **)(*a1 + 8 * v3);
      if (v41)
      {
        void *v21 = *v41;
      }
      else
      {
        void *v21 = *v9;
        *uint8x8_t v9 = v21;
        *(void *)(v40 + 8 * v3) = v9;
        if (!*v21) {
          goto LABEL_78;
        }
        unint64_t v42 = *(void *)(*v21 + 8);
        if ((v6 & (v6 - 1)) != 0)
        {
          if (v42 >= v6) {
            v42 %= v6;
          }
        }
        else
        {
          v42 &= v6 - 1;
        }
        unint64_t v41 = (void *)(*a1 + 8 * v42);
      }
      *unint64_t v41 = v21;
LABEL_78:
      uint64_t v7 = a1[3] + 1;
      a1[3] = v7;
LABEL_79:
      uint64_t v5 = (long long *)((char *)v5 + 24);
      if (v5 == v8) {
        return a1;
      }
    }
    BOOL v25 = (v6 & (v6 - 1)) != 0;
    if (v6 < 3) {
      BOOL v25 = 1;
    }
    unint64_t v26 = v25 | (2 * v6);
    unint64_t v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27) {
      int8x8_t prime = (int8x8_t)v27;
    }
    else {
      int8x8_t prime = (int8x8_t)v26;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v6 = a1[1];
    }
    if (*(void *)&prime > v6) {
      goto LABEL_35;
    }
    if (*(void *)&prime < v6)
    {
      unint64_t v35 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v6 < 3 || (uint8x8_t v36 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v36.i16[0] = vaddlv_u8(v36), v36.u32[0] > 1uLL))
      {
        unint64_t v35 = std::__next_prime(v35);
      }
      else
      {
        uint64_t v37 = 1 << -(char)__clz(v35 - 1);
        if (v35 >= 2) {
          unint64_t v35 = v37;
        }
      }
      if (*(void *)&prime <= v35) {
        int8x8_t prime = (int8x8_t)v35;
      }
      if (*(void *)&prime >= v6)
      {
        unint64_t v6 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unint64_t v29 = operator new(8 * *(void *)&prime);
          unint64_t v30 = (void *)*a1;
          *a1 = (uint64_t)v29;
          if (v30) {
            operator delete(v30);
          }
          uint64_t v31 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v31++) = 0;
          while (*(void *)&prime != v31);
          uint64_t v32 = (void *)*v9;
          if (*v9)
          {
            unint64_t v33 = v32[1];
            uint8x8_t v34 = (uint8x8_t)vcnt_s8(prime);
            v34.i16[0] = vaddlv_u8(v34);
            if (v34.u32[0] > 1uLL)
            {
              if (v33 >= *(void *)&prime) {
                v33 %= *(void *)&prime;
              }
            }
            else
            {
              v33 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v33) = v9;
            uint64_t v38 = (void *)*v32;
            if (*v32)
            {
              do
              {
                unint64_t v39 = v38[1];
                if (v34.u32[0] > 1uLL)
                {
                  if (v39 >= *(void *)&prime) {
                    v39 %= *(void *)&prime;
                  }
                }
                else
                {
                  v39 &= *(void *)&prime - 1;
                }
                if (v39 != v33)
                {
                  if (!*(void *)(*a1 + 8 * v39))
                  {
                    *(void *)(*a1 + 8 * v39) = v32;
                    goto LABEL_60;
                  }
                  void *v32 = *v38;
                  *uint64_t v38 = **(void **)(*a1 + 8 * v39);
                  **(void **)(*a1 + 8 * v39) = v38;
                  uint64_t v38 = v32;
                }
                unint64_t v39 = v33;
LABEL_60:
                uint64_t v32 = v38;
                uint64_t v38 = (void *)*v38;
                unint64_t v33 = v39;
              }
              while (v38);
            }
          }
          unint64_t v6 = (unint64_t)prime;
          goto LABEL_64;
        }
        uint64_t v43 = (void *)*a1;
        *a1 = 0;
        if (v43) {
          operator delete(v43);
        }
        unint64_t v6 = 0;
        a1[1] = 0;
      }
    }
LABEL_64:
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v13 >= v6) {
        unint64_t v3 = v13 % v6;
      }
      else {
        unint64_t v3 = v13;
      }
    }
    else
    {
      unint64_t v3 = (v6 - 1) & v13;
    }
    goto LABEL_69;
  }
  return a1;
}

void sub_1D2C720C0(_Unwind_Exception *a1)
{
  operator delete(v2);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_getStartChar(uint64_t a1)
{
  uint64_t v1 = npc<morphun::Token const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 24))(v1);
}

void sub_1D2C721BC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_getEndChar(uint64_t a1)
{
  uint64_t v1 = npc<morphun::Token const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
}

uint64_t mtok_getLength(uint64_t a1)
{
  uint64_t v1 = npc<morphun::Token const>(a1);
  return (*(_DWORD *)(v1 + 12) - *(_DWORD *)(v1 + 8));
}

CFStringRef mtok_getValueCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::Token const>(a1);
  unint64_t v4 = *(const UniChar **)(v1 + 16);
  uint64_t v2 = v1 + 16;
  unint64_t v3 = v4;
  int v5 = *(char *)(v2 + 23);
  if (v5 >= 0) {
    unint64_t v6 = (const UniChar *)v2;
  }
  else {
    unint64_t v6 = v3;
  }
  if (v5 >= 0) {
    CFIndex v7 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    CFIndex v7 = *(void *)(v2 + 8);
  }
  return CFStringCreateWithCharacters(0, v6, v7);
}

CFStringRef mtok_getCleanValueCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::Token const>(a1);
  unint64_t v4 = *(const UniChar **)(v1 + 40);
  uint64_t v2 = v1 + 40;
  unint64_t v3 = v4;
  int v5 = *(char *)(v2 + 23);
  if (v5 >= 0) {
    unint64_t v6 = (const UniChar *)v2;
  }
  else {
    unint64_t v6 = v3;
  }
  if (v5 >= 0) {
    CFIndex v7 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    CFIndex v7 = *(void *)(v2 + 8);
  }
  return CFStringCreateWithCharacters(0, v6, v7);
}

uint64_t mtok_getPrevious(uint64_t a1)
{
  return *(void *)(npc<morphun::Token const>(a1) + 72);
}

uint64_t mtok_getNext(uint64_t a1)
{
  return *(void *)(npc<morphun::Token const>(a1) + 80);
}

BOOL mtok_isSignificant(uint64_t a1)
{
  return *(unsigned char *)(npc<morphun::Token const>(a1) + 64) != 0;
}

BOOL mtok_isWhitespace(uint64_t a1)
{
  return *(unsigned char *)(npc<morphun::Token const>(a1) + 65) != 0;
}

uint64_t mtok_getType(const void *a1)
{
  npc<morphun::Token const>((uint64_t)a1);
  {
    return 6;
  }
  uint64_t result = 0;
  if (!v3)
  {
    {
      return 1;
    }
    {
      return 3;
    }
    {
      return 4;
    }
    {
      return 5;
    }
    {
      return 2;
    }
    else
    {
      return 7;
    }
  }
  return result;
}

BOOL mtok_isType(const void *a1, uint64_t a2)
{
  return mtok_getType(a1) == a2;
}

uint64_t **com::apple::siri::tokenizer::data::config_tr::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DDC0;
  v3[1] = *(_OWORD *)&off_1E695DDD0;
  v3[2] = xmmword_1E695DDE0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t morphun::tokenizer::dictionary::Segment::Segment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, int a7, int a8, int a9)
{
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(_DWORD *)(a1 + 16) = a6;
  *(_DWORD *)(a1 + 20) = a7;
  *(_DWORD *)(a1 + 24) = a8;
  *(_DWORD *)(a1 + 28) = a9;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 80) = 1065353216;
  *(_DWORD *)(a1 + 84) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 92) = 1;
  *(void *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 16);
  if (a5 < a8) {
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  }
  unint64_t v11 = a5 - a8;
  if (v11 >= a7 - a8) {
    LODWORD(v11) = a7 - a8;
  }
  unint64_t v12 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(a3 + 40), a4 + 2 * a8, v11);
  if (HIDWORD(v12))
  {
    float v13 = (float)(v12 & 0xFFFFFF);
    int16x8_t v14 = (int16x8_t)vshlq_u32((uint32x4_t)vdupq_n_s32(v12), (uint32x4_t)xmmword_1D2D6F520);
    v14.i64[0] = *(void *)&vmovn_s32((int32x4_t)v14) & 0xFF81FF81FF81FF81;
    *(_DWORD *)(a1 + 52) = vmovn_s16(v14).u32[0];
    *(unsigned char *)(a1 + 56) = BYTE3(v12) & 1;
  }
  else
  {
    float v13 = *(float *)(a2 + 44);
  }
  *(float *)(a1 + 48) = v13;
  return a1;
}

void sub_1D2C728B0(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(std::__shared_weak_count **)(v1 + 72);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

float morphun::tokenizer::dictionary::Segment::tie(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (!v4) {
    LODWORD(v4) = *(_DWORD *)(a1 + 20) - *(_DWORD *)(a1 + 24);
  }
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  CFIndex v7 = *(std::__shared_weak_count **)(a1 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v5;
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  uint64_t v8 = *a2;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(*a2 + 92) * v4;
  int v9 = *(_DWORD *)(v8 + 84);
  int v10 = *(_DWORD *)(v8 + 88);
  if (*(int *)(a1 + 28) < 0) {
    int v11 = 1;
  }
  else {
    int v11 = 2;
  }
  *(float *)(a1 + 80) = *(float *)(v8 + 80) * *(float *)(a1 + 48);
  *(_DWORD *)(a1 + 84) = v9 + 1;
  *(_DWORD *)(a1 + 88) = v11 + v10;
  float v12 = 0.5;
  if (!*(void *)(a1 + 40)) {
    float v12 = 0.0;
  }
  float result = (float)((float)(*(float *)(v8 + 100) + (float)(int)v4) - (float)*(int *)(a1 + 104)) - v12;
  *(float *)(a1 + 100) = result;
  return result;
}

void morphun::tokenizer::locale::da::DaTokenizer::createTokenExtractor()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2C72B30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig((char **)va);
  MEMORY[0x1D942B8B0](v2, 0x10F3C4092900CF8);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig(char **this)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[21]);
  uint64_t v2 = this[17];
  if (v2)
  {
    this[18] = v2;
    operator delete(v2);
  }
  unint64_t v3 = this[14];
  if (v3)
  {
    this[15] = v3;
    operator delete(v3);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[12]);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[9]);
}

uint64_t **com::apple::siri::tokenizer::data::config_lt::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t *morphun::analysis::AnalyzerFactory::AnalyzerFactory(uint64_t *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  return this;
}

void morphun::dialog::language::PlCommonConceptFactory::~PlCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05AA8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05AA8);
}

uint64_t **com::apple::siri::tokenizer::data::config_fr::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DDF0;
  v3[1] = unk_1E695DE00;
  v3[2] = xmmword_1E695DE10;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void *morphun::analysis::filter::SplitPunctuationFilter::reset(morphun::analysis::filter::SplitPunctuationFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  float result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 14) = result;
  return result;
}

uint64_t morphun::analysis::filter::SplitPunctuationFilter::incrementToken(morphun::analysis::filter::SplitPunctuationFilter *this)
{
  uint64_t v1 = this;
  int v2 = 0;
  long long v3 = (std::basic_string<char16_t> *)((char *)this + 288);
  unint64_t v50 = (char *)this + 360;
  uint64_t v51 = (char *)this + 120;
  std::basic_string<char16_t> __str = (std::basic_string<char16_t> *)((char *)this + 288);
  uint64_t v46 = (std::basic_string<char16_t> *)((char *)this + 336);
  uint64_t v47 = (std::basic_string<char16_t> *)((char *)this + 312);
  while (1)
  {
    int v4 = v2;
    if (*((char *)v1 + 311) < 0)
    {
      std::basic_string<char16_t>::size_type v6 = *((void *)v1 + 37);
      if (v6)
      {
        uint64_t v5 = v3->__r_.__value_.__r.__words[0];
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v5 = (uint64_t)v3;
      std::basic_string<char16_t>::size_type v6 = *((unsigned __int8 *)v1 + 311);
      if (*((unsigned char *)v1 + 311)) {
        goto LABEL_16;
      }
    }
    uint64_t v7 = *((void *)v1 + 12);
    if (!v7)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    if (!(*(unsigned int (**)(uint64_t))(*(void *)v7 + 24))(v7))
    {
      int v2 = 0;
      return (v4 | v2) & 1;
    }
    uint64_t v8 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)v1 + 13));
    uint64_t v5 = (uint64_t)v8 + *(void *)(*v8 - 96);
    if (*(char *)(v5 + 23) < 0)
    {
      uint64_t v5 = *(void *)v5;
      std::basic_string<char16_t>::size_type v6 = *(void *)((char *)v8 + *(void *)(*v8 - 96) + 8);
    }
    else
    {
      std::basic_string<char16_t>::size_type v6 = *(unsigned __int8 *)(v5 + 23);
    }
    std::basic_string<char16_t>::operator=<morphun::analysis::tokenattributes::CharTermAttribute,0>(v3, *((void **)v1 + 13));
    if (*((char *)v1 + 311) < 0)
    {
      if (!*((void *)v1 + 37)) {
        goto LABEL_116;
      }
    }
    else if (!*((unsigned char *)v1 + 311))
    {
      goto LABEL_116;
    }
LABEL_16:
    uint64_t v9 = *((void *)v1 + 14);
    if (v9 && ((*(uint64_t (**)(uint64_t))(*(void *)v9 + 56))(v9) & 1) != 0) {
      goto LABEL_116;
    }
    if ((int)v6 >= 1) {
      break;
    }
    LODWORD(v20) = 0;
    LODWORD(v12) = 0;
    LODWORD(v10) = 0;
LABEL_55:
    if ((int)v10 >= (int)v6)
    {
      uint64_t v43 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v43 + *(void *)(*v43 - 96)), __str);
      if (*((char *)this + 311) < 0)
      {
        **((_WORD **)this + 36) = 0;
        *((void *)this + 37) = 0;
      }
      else
      {
        *((_WORD *)this + 144) = 0;
        *((unsigned char *)this + 311) = 0;
      }
LABEL_116:
      int v2 = 1;
      return (v4 | v2) & 1;
    }
    if (*((char *)this + 335) < 0)
    {
      **((_WORD **)this + 39) = 0;
      *((void *)this + 40) = 0;
    }
    else
    {
      *((_WORD *)this + 156) = 0;
      *((unsigned char *)this + 335) = 0;
    }
    if (*((char *)this + 359) < 0)
    {
      **((_WORD **)this + 42) = 0;
      *((void *)this + 43) = 0;
    }
    else
    {
      *((_WORD *)this + 168) = 0;
      *((unsigned char *)this + 359) = 0;
    }
    npc<std::basic_string<char16_t>>((uint64_t)v47);
    if (*((char *)this + 335) < 0)
    {
      **((_WORD **)this + 39) = 0;
      *((void *)this + 40) = 0;
    }
    else
    {
      *((_WORD *)this + 156) = 0;
      *((unsigned char *)this + 335) = 0;
    }
    npc<std::basic_string<char16_t>>((uint64_t)v46);
    if (*((char *)this + 359) < 0)
    {
      **((_WORD **)this + 42) = 0;
      *((void *)this + 43) = 0;
    }
    else
    {
      *((_WORD *)this + 168) = 0;
      *((unsigned char *)this + 359) = 0;
    }
    if (*((char *)this + 335) < 0) {
      unint64_t v32 = (*((void *)this + 41) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    else {
      unint64_t v32 = 10;
    }
    if (v6 >= v32) {
      std::basic_string<char16_t>::reserve(v47, v6);
    }
    if (*((char *)this + 359) < 0) {
      unint64_t v33 = (*((void *)this + 44) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    else {
      unint64_t v33 = 10;
    }
    if (v6 >= v33) {
      std::basic_string<char16_t>::reserve(v46, v6);
    }
    if ((int)v6 >= 1)
    {
      int v34 = 0;
      do
      {
        unsigned int v35 = morphun::util::StringViewUtils::codePointAt(v5, v6, v34);
        uint8x8_t v36 = v47;
        if (v34 < (int)v20 || (uint8x8_t v36 = v46, v34 > (int)v12)) {
          morphun::util::StringUtils::appendCodePoint(v36, v35);
        }
        if (v35 < 0x10000) {
          int v37 = 1;
        }
        else {
          int v37 = 2;
        }
        v34 += v37;
      }
      while (v34 < (int)v6);
    }
    uint64_t v1 = this;
    if (*((char *)this + 359) < 0) {
      uint64_t v38 = *((void *)this + 43);
    }
    else {
      uint64_t v38 = *((unsigned __int8 *)this + 359);
    }
    long long v3 = __str;
    if (v38)
    {
      std::basic_string<char16_t>::operator=(__str, v46);
    }
    else if (*((char *)this + 311) < 0)
    {
      **((_WORD **)this + 36) = 0;
      *((void *)this + 37) = 0;
    }
    else
    {
      *((_WORD *)this + 144) = 0;
      *((unsigned char *)this + 311) = 0;
    }
    uint64_t v39 = *((unsigned __int8 *)this + 335);
    if ((*((char *)this + 335) & 0x80000000) == 0)
    {
      if (!*((unsigned char *)this + 335)) {
        goto LABEL_98;
      }
LABEL_97:
      uint64_t v40 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v40 + *(void *)(*v40 - 96)), v47);
      uint64_t v39 = *((unsigned __int8 *)this + 335);
      goto LABEL_98;
    }
    if (*((void *)this + 40)) {
      goto LABEL_97;
    }
LABEL_98:
    if ((v39 & 0x80) != 0) {
      uint64_t v39 = *((void *)this + 40);
    }
    if (v39) {
      goto LABEL_116;
    }
    if (*((char *)this + 359) < 0) {
      uint64_t v41 = *((void *)this + 43);
    }
    else {
      uint64_t v41 = *((unsigned __int8 *)this + 359);
    }
    int v2 = 1;
    if (!v41) {
      return (v4 | v2) & 1;
    }
  }
  int v48 = v4;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  BOOL v13 = 0;
LABEL_20:
  int v52 = v12 + 1;
  int v53 = v11 - 1;
  BOOL v14 = v13;
  while (1)
  {
    uint64_t v15 = morphun::util::StringViewUtils::codePointAt(v5, v6, v10);
    int v16 = MEMORY[0x1D942C150](**((void **)this + 34), v15);
    BOOL v13 = v16 != 0;
    if (v16)
    {
      if (v14) {
        uint64_t v11 = v11;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = v10;
LABEL_46:
      if (v15 < 0x10000) {
        int v31 = 1;
      }
      else {
        int v31 = 2;
      }
      uint64_t v10 = (v31 + v10);
      if ((int)v10 >= (int)v6)
      {
        LODWORD(v20) = v11;
        int v4 = v48;
        if (!v16) {
          goto LABEL_55;
        }
        goto LABEL_54;
      }
      goto LABEL_20;
    }
    if (!v14) {
      goto LABEL_46;
    }
    int v17 = uset_containsAllCodePoints();
    if (*((void *)this + 17)) {
      BOOL v18 = morphun::analysis::filter::LanguageExpansion::expandWithWorkspace((uint64_t)v51, (const UChar *)v5, v6, (uint64_t)v50) != 0;
    }
    else {
      BOOL v18 = 0;
    }
    uint64_t v19 = (void *)*((void *)this + 35);
    uint64_t v20 = v11;
    uint64_t v21 = morphun::util::StringViewUtils::codePointAt(v5, v6, v11);
    LODWORD(v19) = MEMORY[0x1D942C150](*v19, v21);
    long long v22 = (void *)*((void *)this + 35);
    uint64_t v23 = v12;
    uint64_t v24 = morphun::util::StringViewUtils::codePointAt(v5, v6, v12);
    int v25 = MEMORY[0x1D942C150](*v22, v24);
    BOOL isAdjacentDigit = morphun::analysis::filter::SplitPunctuationFilter::isAdjacentDigit(v5, v6, v53);
    BOOL v27 = morphun::analysis::filter::SplitPunctuationFilter::isAdjacentDigit(v5, v6, v52);
    if (v19) {
      BOOL v28 = isAdjacentDigit;
    }
    else {
      BOOL v28 = 0;
    }
    if (v25) {
      BOOL v29 = v27;
    }
    else {
      BOOL v29 = 0;
    }
    if (!v17 && !v18 && !v28 && !v29)
    {
      LODWORD(v12) = v23;
      int v4 = v48;
LABEL_54:
      LODWORD(v10) = v12;
      goto LABEL_55;
    }
    if (!isAdjacentDigit && !v27) {
      break;
    }
    BOOL v14 = 0;
    if (v15 < 0x10000) {
      int v30 = 1;
    }
    else {
      int v30 = 2;
    }
    uint64_t v12 = v23;
    uint64_t v10 = (v23 + v30);
    uint64_t v11 = v20;
    if ((int)v10 >= (int)v6)
    {
      int v4 = v48;
      goto LABEL_55;
    }
  }
  unint64_t v42 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v42 + *(void *)(*v42 - 96)), __str);
  if (*((char *)this + 311) < 0)
  {
    **((_WORD **)this + 36) = 0;
    *((void *)this + 37) = 0;
  }
  else
  {
    *((_WORD *)this + 144) = 0;
    *((unsigned char *)this + 311) = 0;
  }
  int v2 = 1;
  int v4 = v48;
  return (v4 | v2) & 1;
}

void sub_1D2C73448(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C734AC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::analysis::filter::SplitPunctuationFilter::isAdjacentDigit(uint64_t a1, int a2, int a3)
{
  BOOL result = 0;
  if ((a3 & 0x80000000) == 0 && a2 > a3)
  {
    UChar32 v5 = morphun::util::StringViewUtils::codePointAt(a1, a2, a3);
    return u_isdigit(v5) != 0;
  }
  return result;
}

void sub_1D2C73550(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::SplitPunctuationFilter::~SplitPunctuationFilter(void **this)
{
  if (*((char *)this + 383) < 0) {
    operator delete(this[45]);
  }
  if (*((char *)this + 359) < 0) {
    operator delete(this[42]);
  }
  if (*((char *)this + 335) < 0) {
    operator delete(this[39]);
  }
  if (*((char *)this + 311) < 0) {
    operator delete(this[36]);
  }
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[16]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07AC0);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  if (*((char *)this + 383) < 0) {
    operator delete(this[45]);
  }
  if (*((char *)this + 359) < 0) {
    operator delete(this[42]);
  }
  if (*((char *)this + 335) < 0) {
    operator delete(this[39]);
  }
  if (*((char *)this + 311) < 0) {
    operator delete(this[36]);
  }
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[16]);

  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07AC0);
}

void std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(a1[1]);
    int v2 = (void *)a1[6];
    if (v2)
    {
      a1[7] = v2;
      operator delete(v2);
    }
    operator delete(a1);
  }
}

void morphun::analysis::filter::LanguageExpansion::~LanguageExpansion(void **this)
{
}

void *morphun::util::lemmatization::FeedForwardInflectionAnalyzer::FeedForwardInflectionAnalyzer(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, morphun::util::ULocale *a5)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 3), a5);
  return a1;
}

{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 3), a5);
  return a1;
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getInflectionLikelihoods(uint64_t *a1, uint64_t a2)
{
  if (*a1)
  {
    morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getWordFeatures((uint64_t)a1, a2, *a1, 7, (uint64_t *)&v9);
    long long v3 = (uint64_t ***)a1[2];
    if (v3)
    {
      morphun::util::lemmatization::FeedForwardInflectionAnalyzer::infer((uint64_t)&v9, v3, (double **)&__p);
      int v4 = (uint64_t *)a1[1];
      if (v4) {
        morphun::util::lemmatization::FeedForwardInflectionAnalyzer::asInflectionLikelihoods((uint64_t)a1, &__p, v4);
      }
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    std::basic_string<char16_t>::size_type v6 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v6);
  }
  UChar32 v5 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(v5);
}

void sub_1D2C738CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  __cxa_free_exception(v13);
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::getWordFeatures(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v10 = *(_DWORD *)(a3 + 16) + 1;
  std::vector<double>::vector(a5, v10 * a4);
  memset(&v29, 0, sizeof(v29));
  int v11 = *(char *)(a2 + 23);
  if (v11 >= 0) {
    uint64_t v12 = (const UChar *)a2;
  }
  else {
    uint64_t v12 = *(const UChar **)a2;
  }
  if (v11 >= 0) {
    LODWORD(v13) = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v13 = *(void *)(a2 + 8);
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&v29, v12, v13, a1 + 24);
  morphun::util::StringUtils::reverse((uint64_t)&v29);
  std::basic_string<char16_t>::resize(&v29, a4, 32);
  char v14 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v15 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  }
  else {
    int v15 = v29.__r_.__value_.__r.__words[1];
  }
  if (v15 >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = *(void *)(a3 + 8);
    uint64_t v18 = *(void *)(a3 + 16);
    uint64_t v19 = a3 + 8;
    uint64_t v20 = *a5;
    do
    {
      uint64_t v21 = v18;
      if (v17)
      {
        if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          long long v22 = &v29;
        }
        else {
          long long v22 = (std::basic_string<char16_t> *)v29.__r_.__value_.__r.__words[0];
        }
        unsigned int v23 = (unsigned __int16)v22->__r_.__value_.__s.__data_[v16];
        uint64_t v24 = v19;
        uint64_t v25 = v17;
        do
        {
          unsigned int v26 = *(unsigned __int16 *)(v25 + 28);
          BOOL v27 = v26 >= v23;
          if (v26 >= v23) {
            BOOL v28 = (uint64_t *)v25;
          }
          else {
            BOOL v28 = (uint64_t *)(v25 + 8);
          }
          if (v27) {
            uint64_t v24 = v25;
          }
          uint64_t v25 = *v28;
        }
        while (*v28);
        uint64_t v21 = v18;
        if (v24 != v19)
        {
          uint64_t v21 = v18;
          if (v23 >= *(unsigned __int16 *)(v24 + 28)) {
            uint64_t v21 = *(int *)(v24 + 32);
          }
        }
      }
      *(void *)(v20 + 8 * (v21 + v16 * v10)) = 0x3FF0000000000000;
      ++v16;
    }
    while (v16 != v15);
    char v14 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  }
  if (v14 < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C73A90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  uint64_t v17 = *(void **)v15;
  if (*(void *)v15)
  {
    *(void *)(v15 + 8) = v17;
    operator delete(v17);
  }
  _Unwind_Resume(exception_object);
}

double morphun::util::lemmatization::FeedForwardInflectionAnalyzer::infer@<D0>(uint64_t a1@<X0>, uint64_t ***a2@<X1>, double **a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(a3, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  std::basic_string<char16_t>::size_type v6 = *a2;
  uint64_t v7 = a2[1];
  if (*a2 != v7)
  {
    int v8 = 1;
    do
    {
      morphun::util::lemmatization::FeedForwardInflectionAnalyzer::preMultiply(v6, a3, &v14);
      if (*a3)
      {
        operator delete(*a3);
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      uint64_t v9 = (void *)v14;
      *(_OWORD *)a3 = v14;
      a3[2] = v15;
      int v10 = v9;
      int v11 = (double **)(v6 + 3);
      morphun::util::lemmatization::FeedForwardInflectionAnalyzer::add(a3, v11, &v14);
      if (v10)
      {
        operator delete(v10);
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      uint64_t v12 = (void *)v14;
      *(_OWORD *)a3 = v14;
      a3[2] = v15;
      uint64_t v13 = v12;
      if (v8 == -1431655765 * ((unint64_t)((char *)a2[1] - (char *)*a2) >> 4)) {
        morphun::util::lemmatization::FeedForwardInflectionAnalyzer::softMax(a3, (long double **)&v14);
      }
      else {
        morphun::util::lemmatization::FeedForwardInflectionAnalyzer::rectifiedLinear(a3, &v14);
      }
      if (v13)
      {
        operator delete(v13);
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      a3[2] = v15;
      ++v8;
      std::basic_string<char16_t>::size_type v6 = (uint64_t **)(v11 + 3);
    }
    while (v6 != v7);
  }
  return result;
}

void sub_1D2C73C10(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    *(void *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::asInflectionLikelihoods(uint64_t a1, void *a2, uint64_t *a3)
{
  memset(&v23, 0, sizeof(v23));
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v20 = &v21;
  if (a2)
  {
    unint64_t v4 = a2[1] - *a2;
    if ((int)(v4 >> 3) >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = v4 & 0x7FFFFFFF8;
      double v9 = -1.0;
      do
      {
        double v10 = *(double *)(*a2 + v7);
        uint64_t v11 = *a3;
        uint64_t v12 = (unsigned __int16 *)(*a3 + v6);
        uint64_t v13 = (char **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)&v20, &v24, v12);
        if (!*v13)
        {
          long long v14 = v13;
          uint64_t v15 = (char *)operator new(0x40uLL);
          uint64_t v16 = (std::basic_string<char16_t> *)(v15 + 32);
          if (*(char *)(v11 + v6 + 23) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(v16, *(const std::basic_string<char16_t>::value_type **)(v11 + v6), *(void *)(v11 + v6 + 8));
          }
          else
          {
            long long v17 = *(_OWORD *)v12;
            *((void *)v15 + 6) = *((void *)v12 + 2);
            *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
          }
          *((double *)v15 + 7) = v10;
          uint64_t v18 = v24;
          *(void *)uint64_t v15 = 0;
          *((void *)v15 + 1) = 0;
          *((void *)v15 + 2) = v18;
          *long long v14 = v15;
          if (*v20)
          {
            uint64_t v20 = (uint64_t **)*v20;
            uint64_t v15 = *v14;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v21, (uint64_t *)v15);
          ++v22;
        }
        if (v10 > v9)
        {
          std::basic_string<char16_t>::operator=(&v23, (const std::basic_string<char16_t> *)(*a3 + v6));
          double v9 = v10;
        }
        v7 += 8;
        v6 += 24;
      }
      while (v8 != v7);
    }
    operator new();
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2C73E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  __cxa_free_exception(v18);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(a11);
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    double result = std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D2C73EEC(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *morphun::util::lemmatization::FeedForwardInflectionAnalyzer::preMultiply@<X0>(uint64_t **a1@<X0>, double **a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * (a1[1] - *a1);
  if (((unint64_t)((char *)a2[1] - (char *)*a2) >> 3) != v5)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(a2[1] - *a2), &v24);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v25, L"must be v->size() == m->size(), v->size()=", &v24, v20);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v26, &v25, (std::basic_string<char16_t>::value_type *)",");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(0xAAAAAAAAAAAAAAABLL * (a1[1] - *a1)), &v23);
    if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v21 = &v23;
    }
    else {
      uint64_t v21 = (std::basic_string<char16_t> *)v23.__r_.__value_.__r.__words[0];
    }
    if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v23.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v26, (const std::basic_string<char16_t>::value_type *)v21, size);
    std::basic_string<char16_t> v27 = v26;
    memset(&v26, 0, sizeof(v26));
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v27);
  }
  uint64_t v6 = (*a1)[1] - **a1;
  double result = std::vector<double>::vector(a3, (int)(v6 >> 3));
  if ((int)((unint64_t)v6 >> 3) >= 1)
  {
    uint64_t v8 = 0;
    double v9 = *a2;
    double v10 = *a1;
    uint64_t v11 = *result;
    do
    {
      double v12 = 0.0;
      if ((int)v5 >= 1)
      {
        uint64_t v13 = v9;
        long long v14 = v10;
        uint64_t v15 = v5;
        do
        {
          double v16 = *v13++;
          double v17 = v16;
          uint64_t v18 = *v14;
          v14 += 3;
          double v12 = v12 + v17 * *(double *)(v18 + 8 * v8);
          --v15;
        }
        while (v15);
      }
      *(double *)(v11 + 8 * v8++) = v12;
    }
    while (v8 != ((unint64_t)v6 >> 3));
  }
  return result;
}

void sub_1D2C740C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

double morphun::util::lemmatization::FeedForwardInflectionAnalyzer::add@<D0>(double **a1@<X0>, double **a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = a1[1] - *a1;
  if (v5 != a2[1] - *a2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(a1[1] - *a1), &v21);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v22, "m", &v21, v17);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v23, &v22, (std::basic_string<char16_t>::value_type *)",");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(a2[1] - *a2), &v20);
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v18 = &v20;
    }
    else {
      uint64_t v18 = (std::basic_string<char16_t> *)v20.__r_.__value_.__r.__words[0];
    }
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v20.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v23, (const std::basic_string<char16_t>::value_type *)v18, size);
    std::basic_string<char16_t> v24 = v23;
    memset(&v23, 0, sizeof(v23));
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v24);
  }
  uint64_t v6 = (double **)std::vector<double>::vector(a3, v5);
  uint64_t v8 = *v6;
  unint64_t v9 = (char *)v6[1] - (char *)*v6;
  if ((int)(v9 >> 3) >= 1)
  {
    double v10 = *a1;
    uint64_t v11 = *a2;
    uint64_t v12 = (v9 >> 3);
    do
    {
      double v13 = *v10++;
      double v14 = v13;
      double v15 = *v11++;
      double result = v14 + v15;
      *v8++ = result;
      --v12;
    }
    while (v12);
  }
  return result;
}

void sub_1D2C742DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::softMax(double **a1@<X0>, long double **a2@<X8>)
{
  unint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  double v6 = **a1;
  if (*a1 == v5)
  {
    double v10 = 0.0;
  }
  else
  {
    uint64_t v7 = *a1;
    do
    {
      double v8 = *v7++;
      double v9 = v8;
      if (v8 > v6) {
        double v6 = v9;
      }
    }
    while (v7 != v5);
    double v10 = 0.0;
    uint64_t v11 = *a1;
    do
    {
      double v12 = *v11++;
      double v10 = v10 + exp(v12 - v6);
    }
    while (v11 != v5);
  }
  std::vector<double>::vector(a2, v5 - v4);
  double v14 = a1;
  double v13 = *a1;
  unint64_t v15 = (char *)v14[1] - (char *)v13;
  if ((int)(v15 >> 3) >= 1)
  {
    double v16 = *a2;
    uint64_t v17 = (v15 >> 3);
    do
    {
      double v18 = *v13++;
      *v16++ = exp(v18 - v6) / v10;
      --v17;
    }
    while (v17);
  }
}

double **morphun::util::lemmatization::FeedForwardInflectionAnalyzer::rectifiedLinear@<X0>(double **a1@<X0>, void *a2@<X8>)
{
  double result = (double **)std::vector<double>::vector(a2, a1[1] - *a1);
  unint64_t v4 = *result;
  unint64_t v5 = (char *)result[1] - (char *)*result;
  if ((int)(v5 >> 3) >= 1)
  {
    double v6 = *a1;
    uint64_t v7 = (v5 >> 3);
    do
    {
      double v8 = *v6++;
      *v4++ = fmax(v8, 0.0);
      --v7;
    }
    while (v7);
  }
  return result;
}

void *std::vector<double>::vector(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<morphun::dialog::DucConcept const*>::__vallocate[abi:ne180100](a1, a2);
    unint64_t v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_1D2C74524(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer::activation(double **a1@<X0>, long double **a2@<X8>, int a3@<W1>)
{
  if (a3) {
    morphun::util::lemmatization::FeedForwardInflectionAnalyzer::softMax(a1, a2);
  }
  else {
    morphun::util::lemmatization::FeedForwardInflectionAnalyzer::rectifiedLinear(a1, a2);
  }
}

std::basic_string<char16_t> *morphun::util::lemmatization::FeedForwardInflectionAnalyzer::enforceSizeTo(int a1, std::basic_string<char16_t> *this)
{
  if (!this)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::resize(this, a1, 32);
  return this;
}

void sub_1D2C745B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::transliteration::ICUScriptTransliterator::transliterate(uint64_t a1, unsigned __int16 *a2, unint64_t a3, uint64_t a4)
{
  if (!morphun::util::UnicodeSetUtils::containsSome((void *)(a1 + 136), (uint64_t)a2, a3)) {
    return 0;
  }
  if (a3 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a3 >= 0xB)
  {
    uint64_t v9 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB) {
      uint64_t v9 = a3 | 3;
    }
    p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v9 + 1);
    std::basic_string<char16_t>::size_type v22 = a3;
    int64_t v23 = v10 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_9;
  }
  HIBYTE(v23) = a3;
  p_dst = (void **)&__dst;
  if (a3) {
LABEL_9:
  }
    memmove(p_dst, a2, 2 * a3);
  *((_WORD *)p_dst + a3) = 0;
  if (*(void *)(a1 + 168)) {
    icu4cxx::Transliterator::trans();
  }
  icu4cxx::Transliterator::trans();
  int v11 = SHIBYTE(v23);
  double v12 = (std::basic_string<char16_t>::value_type *)__dst;
  if (v23 >= 0) {
    std::basic_string<char16_t>::size_type v13 = HIBYTE(v23);
  }
  else {
    std::basic_string<char16_t>::size_type v13 = v22;
  }
  if (v13 == a3)
  {
    if (!a3)
    {
LABEL_22:
      int v17 = 1;
      if ((v23 & 0x8000000000000000) == 0) {
        return !v17;
      }
LABEL_30:
      operator delete(__dst);
      return !v17;
    }
    double v14 = (void **)&__dst;
    if (v23 < 0) {
      double v14 = __dst;
    }
    unint64_t v15 = a3;
    double v16 = a2;
    while (*v16 == *(unsigned __int16 *)v14)
    {
      double v14 = (void **)((char *)v14 + 2);
      ++v16;
      if (!--v15) {
        goto LABEL_22;
      }
    }
  }
  int isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase((uint64_t)a2, a3);
  if (v11 >= 0) {
    uint64_t v19 = (std::basic_string<char16_t>::value_type *)&__dst;
  }
  else {
    uint64_t v19 = v12;
  }
  morphun::transliteration::Transliterator::matchCase(a1, a4, v19, v13, (uint64_t)a2, a3, isAllLowerCase);
  int v17 = 0;
  if (v23 < 0) {
    goto LABEL_30;
  }
  return !v17;
}

void sub_1D2C7476C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t icu4cxx::Transliterator::trans()
{
  return utrans_trans();
}

void sub_1D2C74808(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *U16copy(void **a1, int a2, int a3, int a4)
{
  uint64_t v7 = npc<std::basic_string<char16_t>>((uint64_t)a1);
  uint64_t v8 = npc<std::basic_string<char16_t>>(v7);
  uint64_t v9 = v8;
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)v8;
  }

  return std::basic_string<char16_t>::replace((std::basic_string<char16_t> *)v8, a4, 0, (const std::basic_string<char16_t>::value_type *)(v9 + 2 * a2), a3 - a2);
}

void sub_1D2C748D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::replace(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n1, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __n2)
{
  std::basic_string<char16_t>::size_type v5 = __n2;
  double v6 = __s;
  std::basic_string<char16_t>::size_type v7 = __pos;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::size_type v10 = size - __pos;
    if (size >= __pos)
    {
      if (v10 >= __n1) {
        std::basic_string<char16_t>::size_type v11 = __n1;
      }
      else {
        std::basic_string<char16_t>::size_type v11 = size - __pos;
      }
      std::basic_string<char16_t>::size_type v12 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v11 - size + v12 < __n2) {
        goto LABEL_13;
      }
      std::basic_string<char16_t>::size_type v13 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      goto LABEL_16;
    }
LABEL_39:
    std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type v10 = size - __pos;
  if (size < __pos) {
    goto LABEL_39;
  }
  if (v10 >= __n1) {
    std::basic_string<char16_t>::size_type v11 = __n1;
  }
  else {
    std::basic_string<char16_t>::size_type v11 = HIBYTE(this->__r_.__value_.__r.__words[2]) - __pos;
  }
  if (v11 - size + 10 < __n2)
  {
    std::basic_string<char16_t>::size_type v12 = 10;
LABEL_13:
    std::basic_string<char16_t>::__grow_by_and_replace(this, v12, size + __n2 - (v12 + v11), size, v7, v11, __n2, __s);
    return this;
  }
  std::basic_string<char16_t>::size_type v13 = this;
LABEL_16:
  if (__n2 == v11)
  {
    std::basic_string<char16_t>::size_type v11 = __n2;
  }
  else
  {
    std::basic_string<char16_t>::size_type v14 = v10 - v11;
    if (v10 != v11)
    {
      unint64_t v15 = (char *)v13 + 2 * v7;
      std::basic_string<char16_t>::size_type v16 = __n2 - v11;
      if (__n2 < v11)
      {
        if (__n2) {
          memmove((char *)v13 + 2 * v7, __s, 2 * __n2);
        }
        memmove(&v15[2 * v5], &v15[2 * v11], 2 * v14);
        std::basic_string<char16_t>::size_type v17 = size + v16;
        goto LABEL_34;
      }
      if ((char *)v13 + 2 * size > (char *)__s && v15 + 2 <= (char *)__s)
      {
        if (&v15[2 * v11] <= (char *)__s)
        {
          double v6 = &__s[v16];
        }
        else
        {
          if (v11) {
            memmove((char *)v13 + 2 * v7, __s, 2 * v11);
          }
          v7 += v11;
          v6 += v5;
          v5 -= v11;
          std::basic_string<char16_t>::size_type v11 = 0;
        }
      }
      memmove((char *)v13 + 2 * v7 + 2 * v5, (char *)v13 + 2 * v7 + 2 * v11, 2 * v14);
    }
  }
  if (v5) {
    memmove((char *)v13 + 2 * v7, v6, 2 * v5);
  }
  std::basic_string<char16_t>::size_type v17 = v5 - v11 + size;
LABEL_34:
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    this->__r_.__value_.__l.__size_ = v17;
  }
  else {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
  }
  v13->__r_.__value_.__s.__data_[v17] = 0;
  return this;
}

UChar *U16extract(const UChar *a1, int a2, int a3, unsigned __int16 *a4)
{
  std::basic_string<char16_t>::size_type v7 = a1;
  if (*(char *)(npc<std::basic_string<char16_t> const>((uint64_t)a1) + 23) < 0) {
    std::basic_string<char16_t>::size_type v7 = *(const UChar **)v7;
  }

  return u_strncpy(a4, v7, a3 - a2);
}

uint64_t npc<std::basic_string<char16_t> const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C74B78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *U16replace(void **a1, int a2, int a3, const std::basic_string<char16_t>::value_type *a4, int a5)
{
  uint64_t v9 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>((uint64_t)a1);

  return std::basic_string<char16_t>::replace(v9, a2, a3 - a2, a4, a5);
}

uint64_t U16char32At(void *const *a1, int a2)
{
  long long v3 = a1;
  uint64_t v4 = npc<std::basic_string<char16_t> const>((uint64_t)a1);
  unsigned __int8 v5 = *(unsigned char *)(v4 + 23);
  int v6 = v5;
  uint64_t v7 = v4;
  if ((char)v5 < 0)
  {
    int v6 = *((_DWORD *)v3 + 2);
    uint64_t v7 = (uint64_t)*v3;
  }
  uint64_t result = *(unsigned __int16 *)(v7 + 2 * a2);
  if ((result & 0xF800) == 0xD800)
  {
    if ((result & 0x400) != 0)
    {
      if (a2 < 1) {
        return result;
      }
      if ((v5 & 0x80) != 0) {
        long long v3 = (void *const *)*v3;
      }
      int v13 = *((unsigned __int16 *)v3 + (a2 - 1));
      BOOL v11 = (v13 & 0xFC00) == 55296;
      int v12 = result + (v13 << 10);
    }
    else
    {
      uint64_t v9 = a2 + 1;
      if (v9 == v6) {
        return result;
      }
      if ((v5 & 0x80) != 0) {
        long long v3 = (void *const *)*v3;
      }
      int v10 = *((unsigned __int16 *)v3 + v9);
      BOOL v11 = (v10 & 0xFC00) == 56320;
      int v12 = v10 + (result << 10);
    }
    unsigned int v14 = v12 - 56613888;
    if (v11) {
      return v14;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t U16charAt(void *const *a1, int a2)
{
  uint64_t v3 = npc<std::basic_string<char16_t> const>((uint64_t)a1);
  if (*(char *)(v3 + 23) < 0)
  {
    if (*(void *)(v3 + 8) <= (unint64_t)a2) {
      goto LABEL_7;
    }
    uint64_t v3 = *(void *)v3;
  }
  else if (*(unsigned __int8 *)(v3 + 23) <= (unint64_t)a2)
  {
LABEL_7:
    std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  return *(unsigned __int16 *)(v3 + 2 * a2);
}

uint64_t U16length(void *const *a1)
{
  uint64_t v1 = npc<std::basic_string<char16_t> const>((uint64_t)a1);
  if (*(char *)(v1 + 23) < 0) {
    return *(void *)(v1 + 8);
  }
  else {
    return *(unsigned __int8 *)(v1 + 23);
  }
}

void morphun::transliteration::ICUScriptTransliterator::~ICUScriptTransliterator(void **this)
{
  *this = &off_1F2A087A0;
  int v2 = (icu4cxx::UnicodeSet *)(this + 17);
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 21));
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 19));
  icu4cxx::UnicodeSet::~UnicodeSet(v2);
  *this = &unk_1F29F4370;

  JUMPOUT(0x1D942B8B0);
}

{
  icu4cxx::UnicodeSet *v2;

  *this = &off_1F2A087A0;
  int v2 = (icu4cxx::UnicodeSet *)(this + 17);
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 21));
  icu4cxx::Transliterator::~Transliterator((icu4cxx::Transliterator *)(this + 19));
  icu4cxx::UnicodeSet::~UnicodeSet(v2);
  *this = &unk_1F29F4370;
}

void icu4cxx::Transliterator::~Transliterator(icu4cxx::Transliterator *this)
{
  if (*((unsigned char *)this + 8)) {
    utrans_close();
  }
}

uint64_t morphun::transliteration::ICUScriptTransliterator::createTransliterator(morphun::transliteration::ICUScriptTransliterator *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3, icu4cxx::UnicodeSet *a4)
{
  int v6 = this;
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  UErrorCode code = U_ZERO_ERROR;
  *(void *)&long long v7 = -1;
  *((void *)&v7 + 1) = -1;
  __dst[0] = v7;
  __dst[1] = v7;
  uint64_t v8 = morphun::util::LocaleUtils::ROOT(this);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = *(unsigned __int8 *)(v8 + 31);
  }
  else {
    uint64_t v10 = *(void *)(v8 + 16);
  }
  uint64_t v11 = *((unsigned __int8 *)v6 + 31);
  int v12 = (char)v11;
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *((void *)v6 + 2);
  }
  if (v10 != v11) {
    goto LABEL_16;
  }
  int v13 = (const void **)(v8 + 8);
  if (v12 >= 0) {
    unsigned int v14 = (unsigned __int8 *)v6 + 8;
  }
  else {
    unsigned int v14 = (unsigned __int8 *)*((void *)v6 + 1);
  }
  if ((v9 & 0x80) != 0)
  {
    uint64_t v8 = memcmp(*v13, v14, *(void *)(v8 + 16));
    if (!v8) {
      goto LABEL_17;
    }
LABEL_16:
    int v15 = uscript_getCode();
    goto LABEL_22;
  }
  if (*(unsigned char *)(v8 + 31))
  {
    while (*(unsigned __int8 *)v13 == *v14)
    {
      int v13 = (const void **)((char *)v13 + 1);
      ++v14;
      if (!--v9) {
        goto LABEL_17;
      }
    }
    goto LABEL_16;
  }
LABEL_17:
  std::basic_string<char16_t>::size_type v16 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v8);
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)&v96, v16);
  *(void *)&long long v17 = -1;
  *((void *)&v17 + 1) = -1;
  long long __src = v17;
  long long v95 = v17;
  int v15 = uscript_getCode();
  unsigned int v18 = v15 - 1;
  if (v15 >= 1)
  {
    if (v18 >= 7) {
      unsigned int v18 = 7;
    }
    memcpy(__dst, &__src, 4 * v18 + 4);
  }
LABEL_22:
  int v92 = -1;
  uscript_getCode();
  long long __src = 0uLL;
  *(void *)&long long v95 = 0;
  Name = (char *)uscript_getName();
  std::string::basic_string[abi:ne180100]<0>(&v96, Name);
  if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t> v20 = &v96;
  }
  else {
    std::basic_string<char16_t> v20 = (std::basic_string<char16_t> *)v96.__r_.__value_.__r.__words[0];
  }
  if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int32_t v21 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
  }
  else {
    int32_t v21 = v96.__r_.__value_.__r.__words[1];
  }
  morphun::util::StringViewUtils::convert((uint64_t)&__src, (const char *)v20, v21);
  if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v96.__r_.__value_.__l.__data_);
  }
  memset(&v91, 0, sizeof(v91));
  memset(&v90, 0, sizeof(v90));
  if (v15 >= 1)
  {
    uint64_t v22 = v15;
    int64_t v23 = (char *)a2 + 8;
    std::basic_string<char16_t> v24 = __dst;
    while (1)
    {
      std::basic_string<char16_t> v24 = (_OWORD *)((char *)v24 + 4);
      std::basic_string<char16_t>::size_type size = HIBYTE(v91.__r_.__value_.__r.__words[2]);
      if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v91.__r_.__value_.__l.__size_;
      }
      if (size) {
        std::basic_string<char16_t>::append(&v91, L";", 1uLL);
      }
      char v87 = 0;
      std::basic_string<char16_t>::size_type v88 = 0;
      uint64_t v89 = 0;
      std::basic_string<char16_t> v26 = (const char *)uscript_getName();
      int32_t v27 = strlen(v26);
      morphun::util::StringViewUtils::convert((uint64_t)&v87, v26, v27);
      BOOL v28 = v89 >= 0
          ? (const std::basic_string<char16_t>::value_type *)&v87
          : (const std::basic_string<char16_t>::value_type *)v87;
      std::basic_string<char16_t>::size_type v29 = v89 >= 0 ? HIBYTE(v89) : v88;
      std::basic_string<char16_t>::append(&v91, v28, v29);
      std::basic_string<char16_t>::append(&v91, (const std::basic_string<char16_t>::value_type *)"-", 1uLL);
      int v30 = (SBYTE7(v95) & 0x80u) == 0
          ? (const std::basic_string<char16_t>::value_type *)&__src
          : (const std::basic_string<char16_t>::value_type *)__src;
      std::basic_string<char16_t>::size_type v31 = (SBYTE7(v95) & 0x80u) == 0 ? BYTE7(v95) : *((void *)&__src + 1);
      std::basic_string<char16_t>::append(&v91, v30, v31);
      if (!a3) {
        break;
      }
      std::operator+<char16_t>((uint64_t)&v86, L"[:", (const void **)&v87);
      std::basic_string<char16_t>::append(&v86, (const std::basic_string<char16_t>::value_type *)":", 2uLL);
      std::basic_string<char16_t> v96 = v86;
      memset(&v86, 0, sizeof(v86));
      icu4cxx::UnicodeSet::UnicodeSet((uint64_t)&v85);
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v96.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v86.__r_.__value_.__l.__data_);
      }
      MEMORY[0x1D942C0F0](*(void *)a3, v85.__r_.__value_.__r.__words[0]);
      icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v85);
LABEL_166:
      if (SHIBYTE(v89) < 0) {
        operator delete(v87);
      }
      if (!--v22) {
        goto LABEL_169;
      }
    }
    morphun::util::ResourceLocator::getRootForLocale(v6, &v79);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v77, (char *)L"/transliteration/");
    if ((v78 & 0x80u) == 0) {
      int v32 = v77;
    }
    else {
      int v32 = (void **)v77[0];
    }
    if ((v78 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v33 = v78;
    }
    else {
      std::basic_string<char16_t>::size_type v33 = (std::basic_string<char16_t>::size_type)v77[1];
    }
    std::basic_string<char16_t>::append(&v79, (const std::basic_string<char16_t>::value_type *)v32, v33);
    std::basic_string<char16_t> v80 = v79;
    memset(&v79, 0, sizeof(v79));
    int v34 = *((char *)a2 + 31);
    if (v34 >= 0) {
      unsigned int v35 = v23;
    }
    else {
      unsigned int v35 = (const char *)*((void *)a2 + 1);
    }
    if (v34 >= 0) {
      LODWORD(v36) = *((unsigned __int8 *)a2 + 31);
    }
    else {
      uint64_t v36 = *((void *)a2 + 2);
    }
    morphun::util::StringViewUtils::to_u16string(v35, v36, &v76);
    int v37 = SHIBYTE(v76.__r_.__value_.__r.__words[2]);
    uint64_t v38 = (void *)v76.__r_.__value_.__r.__words[0];
    if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v39 = &v76;
    }
    else {
      uint64_t v39 = (std::basic_string<char16_t> *)v76.__r_.__value_.__r.__words[0];
    }
    if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v40 = HIBYTE(v76.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v40 = v76.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v80, (const std::basic_string<char16_t>::value_type *)v39, v40);
    std::basic_string<char16_t> v81 = v80;
    memset(&v80, 0, sizeof(v80));
    std::basic_string<char16_t>::append(&v81, (const std::basic_string<char16_t>::value_type *)"/", 1uLL);
    std::basic_string<char16_t> v82 = v81;
    memset(&v81, 0, sizeof(v81));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v74, "t");
    if ((v75 & 0x80u) == 0) {
      uint64_t v41 = v74;
    }
    else {
      uint64_t v41 = (void **)v74[0];
    }
    if ((v75 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v42 = v75;
    }
    else {
      std::basic_string<char16_t>::size_type v42 = (std::basic_string<char16_t>::size_type)v74[1];
    }
    std::basic_string<char16_t>::append(&v82, (const std::basic_string<char16_t>::value_type *)v41, v42);
    std::basic_string<char16_t> v83 = v82;
    memset(&v82, 0, sizeof(v82));
    if (v89 >= 0) {
      uint64_t v43 = (const std::basic_string<char16_t>::value_type *)&v87;
    }
    else {
      uint64_t v43 = (const std::basic_string<char16_t>::value_type *)v87;
    }
    if (v89 >= 0) {
      std::basic_string<char16_t>::size_type v44 = HIBYTE(v89);
    }
    else {
      std::basic_string<char16_t>::size_type v44 = v88;
    }
    std::basic_string<char16_t>::append(&v83, v43, v44);
    std::basic_string<char16_t> v84 = v83;
    memset(&v83, 0, sizeof(v83));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v72, "_");
    if ((v73 & 0x80u) == 0) {
      uint64_t v45 = v72;
    }
    else {
      uint64_t v45 = (void **)v72[0];
    }
    if ((v73 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v46 = v73;
    }
    else {
      std::basic_string<char16_t>::size_type v46 = (std::basic_string<char16_t>::size_type)v72[1];
    }
    std::basic_string<char16_t>::append(&v84, (const std::basic_string<char16_t>::value_type *)v45, v46);
    std::basic_string<char16_t> v85 = v84;
    memset(&v84, 0, sizeof(v84));
    if ((SBYTE7(v95) & 0x80u) == 0) {
      p_src = (const std::basic_string<char16_t>::value_type *)&__src;
    }
    else {
      p_src = (const std::basic_string<char16_t>::value_type *)__src;
    }
    if ((SBYTE7(v95) & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v48 = BYTE7(v95);
    }
    else {
      std::basic_string<char16_t>::size_type v48 = *((void *)&__src + 1);
    }
    std::basic_string<char16_t>::append(&v85, p_src, v48);
    std::basic_string<char16_t> v96 = v85;
    memset(&v85, 0, sizeof(v85));
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L".rules");
    if ((v71 & 0x80u) == 0) {
      uint64_t v49 = __p;
    }
    else {
      uint64_t v49 = (void **)__p[0];
    }
    if ((v71 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v50 = v71;
    }
    else {
      std::basic_string<char16_t>::size_type v50 = (std::basic_string<char16_t>::size_type)__p[1];
    }
    std::basic_string<char16_t>::append(&v96, (const std::basic_string<char16_t>::value_type *)v49, v50);
    std::basic_string<char16_t> v86 = v96;
    memset(&v96, 0, sizeof(v96));
    if ((char)v71 < 0)
    {
      operator delete(__p[0]);
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v96.__r_.__value_.__l.__data_);
      }
    }
    if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v85.__r_.__value_.__l.__data_);
    }
    if ((char)v73 < 0) {
      operator delete(v72[0]);
    }
    if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v84.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v83.__r_.__value_.__l.__data_);
    }
    if ((char)v75 < 0) {
      operator delete(v74[0]);
    }
    if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v82.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v81.__r_.__value_.__l.__data_);
      if ((v37 & 0x80000000) == 0) {
        goto LABEL_119;
      }
    }
    else if ((v37 & 0x80000000) == 0)
    {
      goto LABEL_119;
    }
    operator delete(v38);
LABEL_119:
    if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v80.__r_.__value_.__l.__data_);
    }
    if ((char)v78 < 0) {
      operator delete(v77[0]);
    }
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    memset(&v85, 0, sizeof(v85));
    if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v51 = &v86;
    }
    else {
      uint64_t v51 = (std::basic_string<char16_t> *)v86.__r_.__value_.__r.__words[0];
    }
    if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v52 = HIBYTE(v86.__r_.__value_.__r.__words[2]);
    }
    else {
      int v52 = v86.__r_.__value_.__r.__words[1];
    }
    morphun::util::StringViewUtils::convert((std::string *)&v85, (uint64_t)v51, v52);
    if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v53 = &v85;
    }
    else {
      int v53 = (std::basic_string<char16_t> *)v85.__r_.__value_.__r.__words[0];
    }
    if (access((const char *)v53, 0) == -1) {
      goto LABEL_162;
    }
    morphun::util::MemoryMappedFile::MemoryMappedFile((uint64_t)&v96, (uint64_t)&v86);
    std::basic_string<char16_t>::size_type v54 = v96.__r_.__value_.__l.__size_;
    if (v96.__r_.__value_.__l.__size_ >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v55 = (const void *)v96.__r_.__value_.__r.__words[0];
    if (v96.__r_.__value_.__l.__size_ >= 0x17)
    {
      uint64_t v57 = v23;
      uint64_t v58 = v6;
      std::basic_string<char16_t>::size_type v59 = (v96.__r_.__value_.__l.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v96.__r_.__value_.__l.__size_ | 7) != 0x17) {
        std::basic_string<char16_t>::size_type v59 = v96.__r_.__value_.__l.__size_ | 7;
      }
      std::basic_string<char16_t>::size_type v60 = v59 + 1;
      uint64_t v56 = operator new(v59 + 1);
      v83.__r_.__value_.__l.__size_ = v54;
      v83.__r_.__value_.__r.__words[2] = v60 | 0x8000000000000000;
      v83.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v56;
      int v6 = v58;
      int64_t v23 = v57;
    }
    else
    {
      *((unsigned char *)&v83.__r_.__value_.__s + 23) = v96.__r_.__value_.__r.__words[1];
      uint64_t v56 = &v83;
      if (!v96.__r_.__value_.__l.__size_) {
        goto LABEL_145;
      }
    }
    memmove(v56, v55, v54);
LABEL_145:
    *((unsigned char *)v56 + v54) = 0;
    if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v61 = &v83;
    }
    else {
      uint64_t v61 = (std::basic_string<char16_t> *)v83.__r_.__value_.__r.__words[0];
    }
    if ((v83.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int32_t v62 = HIBYTE(v83.__r_.__value_.__r.__words[2]);
    }
    else {
      int32_t v62 = v83.__r_.__value_.__r.__words[1];
    }
    morphun::util::StringViewUtils::to_u16string((const char *)v61, v62, &v84);
    int v63 = SHIBYTE(v84.__r_.__value_.__r.__words[2]);
    uint64_t v64 = (void *)v84.__r_.__value_.__r.__words[0];
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v65 = &v84;
    }
    else {
      uint64_t v65 = (std::basic_string<char16_t> *)v84.__r_.__value_.__r.__words[0];
    }
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v66 = HIBYTE(v84.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v66 = v84.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v90, (const std::basic_string<char16_t>::value_type *)v65, v66);
    if (v63 < 0) {
      operator delete(v64);
    }
    if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v83.__r_.__value_.__l.__data_);
    }
    morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::util::MemoryMappedFile *)&v96);
LABEL_162:
    if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v85.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v86.__r_.__value_.__l.__data_);
    }
    goto LABEL_166;
  }
LABEL_169:
  if (a3) {
    goto LABEL_174;
  }
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v90.__r_.__value_.__l.__size_)
    {
LABEL_174:
      uint64_t v67 = utrans_openU();
      goto LABEL_175;
    }
  }
  else if (*((unsigned char *)&v90.__r_.__value_.__s + 23))
  {
    goto LABEL_174;
  }
  uint64_t v67 = 0;
LABEL_175:
  if (code >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    utrans_close();
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, code);
  }
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v90.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v91.__r_.__value_.__l.__data_);
  }
  if (SBYTE7(v95) < 0) {
    operator delete((void *)__src);
  }
  return v67;
}

void sub_1D2C7582C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  __cxa_free_exception(v72);
  if (a63 < 0) {
    operator delete(__p);
  }
  if (a69 < 0) {
    operator delete(a64);
  }
  if (a72 < 0) {
    operator delete(a71);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C7583C()
{
  JUMPOUT(0x1D2C75B38);
}

void sub_1D2C75854()
{
  __cxa_free_exception(v0);
  JUMPOUT(0x1D2C75B38);
}

void sub_1D2C75864(_Unwind_Exception *a1)
{
}

void sub_1D2C75890(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,long long a43,uint64_t a44,uint64_t a45,void *__p,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::util::MemoryMappedFile *)(v75 - 256));
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    std::operator+<char16_t>((uint64_t)&a43, "U", (const void **)&a53);
    unsigned __int8 v78 = morphun::exception::InvalidConfigurationException::InvalidConfigurationException(v75 - 256, &a43);
    std::throw_with_nested[abi:ne180100]<morphun::exception::InvalidConfigurationException>((uint64_t)v78);
  }
  if (a51 < 0) {
    operator delete(__p);
  }
  if (a58 < 0) {
    operator delete(a53);
  }
  if (a65 < 0) {
    operator delete(a60);
  }
  if (a71 < 0) {
    operator delete(a66);
  }
  if (a73 < 0) {
    operator delete(a72);
  }
  if (a75 < 0) {
    operator delete(a74);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C7591C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  morphun::exception::Throwable::~Throwable((std::exception *)(v55 - 256));
  if (a48 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  if (a55 < 0) {
    JUMPOUT(0x1D2C75ADCLL);
  }
  JUMPOUT(0x1D2C75AE0);
}

void sub_1D2C75950(void *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  JUMPOUT(0x1D2C75B38);
}

void sub_1D2C75960(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (v70 < 0) {
    operator delete(v69);
  }
  if (a38 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if ((a32 & 0x80000000) == 0)
  {
    if (a69 < 0) {
      operator delete(a64);
    }
    JUMPOUT(0x1D2C75B08);
  }
  JUMPOUT(0x1D2C75AECLL);
}

void sub_1D2C75968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  if (a74 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (a72 < 0) {
    operator delete(a67);
  }
  if (a65 < 0) {
    operator delete(a60);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a58 < 0) {
    operator delete(a53);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  if (v75 < 0) {
    operator delete(v74);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a38 < 0) {
    JUMPOUT(0x1D2C75AECLL);
  }
  JUMPOUT(0x1D2C75AF8);
}

void sub_1D2C75974()
{
}

void sub_1D2C75990()
{
}

void sub_1D2C75998()
{
}

void sub_1D2C759A0()
{
}

void sub_1D2C759A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v61 - 233) < 0) {
    operator delete(*(void **)(v61 - 256));
  }
  if (a61 < 0) {
    operator delete(a56);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a54 < 0) {
    operator delete(a49);
  }
  JUMPOUT(0x1D2C75A2CLL);
}

void sub_1D2C75A20()
{
}

void sub_1D2C75AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a60 < 0) {
    operator delete(a55);
  }
  JUMPOUT(0x1D2C75B08);
}

void sub_1D2C75AC4()
{
}

void sub_1D2C75ACC()
{
  if (*(char *)(v0 - 233) < 0) {
    JUMPOUT(0x1D2C75ADCLL);
  }
  JUMPOUT(0x1D2C75AE0);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    int v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    int v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void std::throw_with_nested[abi:ne180100]<morphun::exception::InvalidConfigurationException>(uint64_t a1)
{
}

void std::__throw_with_nested<morphun::exception::InvalidConfigurationException,morphun::exception::InvalidConfigurationException,true>::__do_throw[abi:ne180100](uint64_t a1)
{
  exception = __cxa_allocate_exception(0x48uLL);
  std::__nested<morphun::exception::InvalidConfigurationException>::__nested[abi:ne180100]((uint64_t)exception, a1);
}

void sub_1D2C75C48(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__nested<morphun::exception::InvalidConfigurationException>::__nested[abi:ne180100](uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_1F2A115A8;
  if (*(char *)(a2 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  size_t v5 = (std::string *)(a1 + 32);
  if (*(char *)(a2 + 55) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  *(void *)a1 = &unk_1F2A11518;
  std::nested_exception::nested_exception((std::nested_exception *)(a1 + 56));
  *(void *)a1 = &unk_1F2A11E48;
  *(void *)(a1 + 56) = &unk_1F2A11E78;
  return a1;
}

void sub_1D2C75D60(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  std::exception::~exception((std::exception *)v1);
  _Unwind_Resume(a1);
}

void std::__nested<morphun::exception::InvalidConfigurationException>::~__nested(uint64_t a1)
{
  std::nested_exception::~nested_exception((std::nested_exception *)(a1 + 56));

  morphun::exception::Throwable::~Throwable((std::exception *)a1);
}

{
  uint64_t vars8;

  std::nested_exception::~nested_exception((std::nested_exception *)(a1 + 56));
  morphun::exception::Throwable::~Throwable((std::exception *)a1);

  JUMPOUT(0x1D942B8B0);
}

void non-virtual thunk to'std::__nested<morphun::exception::InvalidConfigurationException>::~__nested(std::nested_exception *a1)
{
  p_ptr = (std::exception *)&a1[-4].__ptr_;
  std::nested_exception::~nested_exception(a1);
  morphun::exception::Throwable::~Throwable(p_ptr);

  JUMPOUT(0x1D942B8B0);
}

{
  std::exception *p_ptr;
  uint64_t vars8;

  p_ptr = (std::exception *)&a1[-4].__ptr_;
  std::nested_exception::~nested_exception(a1);

  morphun::exception::Throwable::~Throwable(p_ptr);
}

morphun::transliteration::ICUScriptTransliterator *morphun::transliteration::ICUScriptTransliterator::ICUScriptTransliterator(morphun::transliteration::ICUScriptTransliterator *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3)
{
  *(void *)this = &unk_1F29F4370;
  morphun::util::ULocale::ULocale((morphun::transliteration::ICUScriptTransliterator *)((char *)this + 8), a3);
  *(void *)this = &off_1F2A087A0;
  *((unsigned char *)this + 144) = 1;
  *((void *)this + 17) = uset_openEmpty();
  *((void *)this + 19) = morphun::transliteration::ICUScriptTransliterator::createTransliterator(a2, a3, (morphun::transliteration::ICUScriptTransliterator *)((char *)this + 136), v6);
  *((unsigned char *)this + 160) = 1;
  *((void *)this + 21) = morphun::transliteration::ICUScriptTransliterator::createTransliterator(a2, a3, 0, v7);
  *((unsigned char *)this + 176) = 1;
  return this;
}

void sub_1D2C75F64(_Unwind_Exception *a1)
{
  icu4cxx::Transliterator::~Transliterator(v3);
  icu4cxx::UnicodeSet::~UnicodeSet(v2);
  morphun::transliteration::Transliterator::~Transliterator(v1, (void **)&off_1F2A05078);
  _Unwind_Resume(a1);
}

void *morphun::analysis::filter::TransliterationFilter::reset(morphun::analysis::filter::TransliterationFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 18) = result;
  return result;
}

uint64_t morphun::analysis::filter::TransliterationFilter::incrementToken(const std::basic_string<char16_t> *this)
{
  std::basic_string<char16_t>::pointer data = this[4].__r_.__value_.__l.__data_;
  if (!data) {
    goto LABEL_14;
  }
  uint64_t v3 = (*(uint64_t (**)(std::basic_string<char16_t>::pointer))(*(void *)data + 24))(data);
  if (!v3) {
    return v3;
  }
  std::basic_string<char16_t>::pointer v4 = this[6].__r_.__value_.__l.__data_;
  if (v4)
  {
    if ((*(uint64_t (**)(std::basic_string<char16_t>::pointer))(*(void *)v4 + 56))(v4)) {
      return v3;
    }
  }
  std::basic_string<char16_t>::size_type size = this[4].__r_.__value_.__l.__size_;
  if (!size)
  {
LABEL_14:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  long long v6 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(this[4].__r_.__value_.__r.__words[2]);
  uint64_t v7 = (char *)v6 + *(void *)(*v6 - 96);
  if (v7[23] < 0)
  {
    uint64_t v7 = *(char **)v7;
    uint64_t v8 = *(void *)((char *)v6 + *(void *)(*v6 - 96) + 8);
  }
  else
  {
    uint64_t v8 = v7[23];
  }
  if ((*(unsigned int (**)(std::basic_string<char16_t>::size_type, char *, uint64_t, const std::basic_string<char16_t> *))(*(void *)size + 24))(size, v7, v8, this + 5))
  {
    uint64_t v9 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(this[4].__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v9 + *(void *)(*v9 - 96)), this + 5);
    if (SHIBYTE(this[5].__r_.__value_.__r.__words[2]) < 0)
    {
      *this[5].__r_.__value_.__l.__data_ = 0;
      this[5].__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this[5].__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&this[5].__r_.__value_.__s + 23) = 0;
    }
  }
  return v3;
}

void sub_1D2C76184(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C761EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::TransliterationFilter::~TransliterationFilter(void **this)
{
  if (*((char *)this + 143) < 0) {
    operator delete(this[15]);
  }
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07A80);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  if (*((char *)this + 143) < 0) {
    operator delete(this[15]);
  }

  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07A80);
}

morphun::analysis::filter::TransliterationFilter *morphun::analysis::filter::TransliterationFilter::TransliterationFilter(morphun::analysis::filter::TransliterationFilter *this, morphun::analysis::TokenStream *a2, const morphun::transliteration::Transliterator *a3)
{
  *(void *)this = &unk_1F2A08C08;
  size_t v5 = morphun::analysis::TokenFilter::TokenFilter(this, (morphun::analysis::TokenStream *)&off_1F2A07A80, (uint64_t)a2);
  *(void *)size_t v5 = &off_1F2A107E0;
  *((void *)v5 + 13) = a3;
  *((_OWORD *)v5 + 7) = 0u;
  *((_OWORD *)v5 + 8) = 0u;
  *((void *)v5 + 18) = 0;
  *((void *)this + 14) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v5);
  return this;
}

void sub_1D2C76334(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 143) < 0) {
    operator delete(*(void **)(v1 + 120));
  }
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)v1, (uint64_t *)&off_1F2A07A80);
  _Unwind_Resume(a1);
}

void sub_1D2C763B0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__introsort<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*,false>(char *a1, char *a2, uint64_t a3, char a4)
{
LABEL_1:
  uint64_t v125 = a2 - 16;
  unint64_t v10 = (unint64_t)a1;
  while (1)
  {
    a1 = (char *)v10;
    uint64_t v11 = (uint64_t)&a2[-v10];
    uint64_t v12 = (uint64_t)&a2[-v10] >> 4;
    if (v5 || !v4)
    {
      switch(v12)
      {
        case 0:
        case 1:
          return;
        case 2:
          uint64_t v51 = *(void *)a1;
          if (*(float *)(*(void *)a1 + 96) < *(float *)(*(void *)v125 + 96))
          {
            *(void *)a1 = *(void *)v125;
            *((void *)a2 - 2) = v51;
            uint64_t v52 = *((void *)a1 + 1);
            *((void *)a1 + 1) = *((void *)a2 - 1);
            *((void *)a2 - 1) = v52;
          }
          break;
        case 3:
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (void *)a1 + 2, v125);
          break;
        case 4:
          std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (void *)a1 + 2, (void *)a1 + 4, v125);
          break;
        case 5:
          std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (void *)a1 + 2, (void *)a1 + 4, (void *)a1 + 6);
          uint64_t v53 = *((void *)a1 + 6);
          if (*(float *)(v53 + 96) < *(float *)(*(void *)v125 + 96))
          {
            *((void *)a1 + 6) = *(void *)v125;
            *((void *)a2 - 2) = v53;
            uint64_t v54 = *((void *)a1 + 7);
            *((void *)a1 + 7) = *((void *)a2 - 1);
            *((void *)a2 - 1) = v54;
            uint64_t v55 = *((void *)a1 + 4);
            uint64_t v56 = *((void *)a1 + 6);
            float v57 = *(float *)(v56 + 96);
            if (*(float *)(v55 + 96) < v57)
            {
              uint64_t v58 = *((void *)a1 + 5);
              uint64_t v59 = *((void *)a1 + 7);
              *((void *)a1 + 4) = v56;
              *((void *)a1 + 5) = v59;
              *((void *)a1 + 6) = v55;
              *((void *)a1 + 7) = v58;
              uint64_t v60 = *((void *)a1 + 2);
              if (*(float *)(v60 + 96) < v57)
              {
                uint64_t v61 = *((void *)a1 + 3);
                *((void *)a1 + 2) = v56;
                *((void *)a1 + 3) = v59;
                *((void *)a1 + 4) = v60;
                *((void *)a1 + 5) = v61;
                uint64_t v62 = *(void *)a1;
                if (*(float *)(*(void *)a1 + 96) < v57)
                {
                  uint64_t v63 = *((void *)a1 + 1);
                  *(void *)a1 = v56;
                  *((void *)a1 + 1) = v59;
                  *((void *)a1 + 2) = v62;
                  *((void *)a1 + 3) = v63;
                }
              }
            }
          }
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v11 <= 383) {
      break;
    }
    if (!a3)
    {
      if (a1 == a2) {
        return;
      }
      int64_t v79 = (unint64_t)(v12 - 2) >> 1;
      int64_t v80 = v79;
      do
      {
        int64_t v81 = v80;
        if (v79 >= v80)
        {
          uint64_t v82 = (2 * v80) | 1;
          std::basic_string<char16_t> v83 = &a1[16 * v82];
          if (2 * v81 + 2 < v12 && *(float *)(*((void *)v83 + 2) + 96) < *(float *)(*(void *)v83 + 96))
          {
            v83 += 16;
            uint64_t v82 = 2 * v81 + 2;
          }
          std::basic_string<char16_t> v84 = &a1[16 * v81];
          if (*(float *)(*(void *)v84 + 96) >= *(float *)(*(void *)v83 + 96))
          {
            long long v85 = *(_OWORD *)v84;
            *(void *)std::basic_string<char16_t> v84 = 0;
            *((void *)v84 + 1) = 0;
            long long v126 = v85;
            uint64_t v86 = v85;
            do
            {
              char v87 = v83;
              long long v88 = *(_OWORD *)v83;
              *(void *)std::basic_string<char16_t> v83 = 0;
              *((void *)v83 + 1) = 0;
              uint64_t v89 = (std::__shared_weak_count *)*((void *)v84 + 1);
              *(_OWORD *)std::basic_string<char16_t> v84 = v88;
              if (v89) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v89);
              }
              if (v79 < v82) {
                break;
              }
              uint64_t v90 = 2 * v82;
              uint64_t v82 = (2 * v82) | 1;
              std::basic_string<char16_t> v83 = &a1[16 * v82];
              uint64_t v91 = v90 + 2;
              if (v91 < v12 && *(float *)(*((void *)v83 + 2) + 96) < *(float *)(*(void *)v83 + 96))
              {
                v83 += 16;
                uint64_t v82 = v91;
              }
              std::basic_string<char16_t> v84 = v87;
            }
            while (*(float *)(v86 + 96) >= *(float *)(*(void *)v83 + 96));
            int v92 = (std::__shared_weak_count *)*((void *)v87 + 1);
            *(_OWORD *)char v87 = v126;
            if (v92) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v92);
            }
          }
        }
        int64_t v80 = v81 - 1;
      }
      while (v81);
      uint64_t v93 = (unint64_t)v11 >> 4;
      while (2)
      {
        uint64_t v94 = 0;
        long long v95 = a2;
        uint64_t v97 = *(void *)a1;
        uint64_t v96 = *((void *)a1 + 1);
        *(void *)a1 = 0;
        *((void *)a1 + 1) = 0;
        uint64_t v98 = a1;
        do
        {
          char v99 = &v98[16 * v94 + 16];
          uint64_t v100 = 2 * v94;
          uint64_t v94 = (2 * v94) | 1;
          uint64_t v101 = v100 + 2;
          if (v101 < v93 && *(float *)(*((void *)v99 + 2) + 96) < *(float *)(*(void *)v99 + 96))
          {
            v99 += 16;
            uint64_t v94 = v101;
          }
          long long v102 = *(_OWORD *)v99;
          *(void *)char v99 = 0;
          *((void *)v99 + 1) = 0;
          long long v103 = (std::__shared_weak_count *)*((void *)v98 + 1);
          *(_OWORD *)uint64_t v98 = v102;
          if (v103) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v103);
          }
          uint64_t v98 = v99;
        }
        while (v94 <= (uint64_t)((unint64_t)(v93 - 2) >> 1));
        a2 -= 16;
        if (v99 == v95 - 16)
        {
          v115 = (std::__shared_weak_count *)*((void *)v99 + 1);
          *(void *)char v99 = v97;
          *((void *)v99 + 1) = v96;
          if (!v115) {
            goto LABEL_136;
          }
        }
        else
        {
          long long v104 = *((_OWORD *)v95 - 1);
          *(void *)a2 = 0;
          *((void *)v95 - 1) = 0;
          unsigned __int8 v105 = (std::__shared_weak_count *)*((void *)v99 + 1);
          *(_OWORD *)char v99 = v104;
          if (v105) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v105);
          }
          std::basic_string<char16_t> v106 = (std::__shared_weak_count *)*((void *)v95 - 1);
          *((void *)v95 - 2) = v97;
          *((void *)v95 - 1) = v96;
          if (v106) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v106);
          }
          uint64_t v107 = v99 + 16 - a1;
          if (v107 < 17) {
            goto LABEL_136;
          }
          unint64_t v108 = (((unint64_t)v107 >> 4) - 2) >> 1;
          uint64_t v109 = &a1[16 * v108];
          uint64_t v110 = *(void *)v99;
          if (*(float *)(*(void *)v99 + 96) >= *(float *)(*(void *)v109 + 96)) {
            goto LABEL_136;
          }
          uint64_t v111 = *((void *)v99 + 1);
          *(void *)char v99 = 0;
          *((void *)v99 + 1) = 0;
          do
          {
            int v112 = v109;
            long long v113 = *(_OWORD *)v109;
            *(void *)uint64_t v109 = 0;
            *((void *)v109 + 1) = 0;
            uint64_t v114 = (std::__shared_weak_count *)*((void *)v99 + 1);
            *(_OWORD *)char v99 = v113;
            if (v114) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v114);
            }
            if (!v108) {
              break;
            }
            unint64_t v108 = (v108 - 1) >> 1;
            uint64_t v109 = &a1[16 * v108];
            char v99 = v112;
          }
          while (*(float *)(v110 + 96) < *(float *)(*(void *)v109 + 96));
          v115 = (std::__shared_weak_count *)*((void *)v112 + 1);
          *(void *)int v112 = v110;
          *((void *)v112 + 1) = v111;
          if (!v115)
          {
LABEL_136:
            if (v93-- <= 2) {
              return;
            }
            continue;
          }
        }
        break;
      }
      std::__shared_weak_count::__release_shared[abi:ne180100](v115);
      goto LABEL_136;
    }
    unint64_t v13 = (unint64_t)v12 >> 1;
    unsigned int v14 = &a1[16 * ((unint64_t)v12 >> 1)];
    if ((unint64_t)v11 < 0x801)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(v14, a1, v125);
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, v14, v125);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((void *)a1 + 2, (void *)v14 - 2, (void *)a2 - 4);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((void *)a1 + 4, &a1[16 * v13 + 16], (void *)a2 - 6);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((void *)v14 - 2, v14, &a1[16 * v13 + 16]);
      long long v15 = *(_OWORD *)a1;
      *(_OWORD *)a1 = *(_OWORD *)v14;
      *(_OWORD *)unsigned int v14 = v15;
    }
    --a3;
    uint64_t v16 = *(void *)a1;
    if ((a4 & 1) != 0 || *(float *)(v16 + 96) < *(float *)(*((void *)a1 - 2) + 96))
    {
      uint64_t v17 = *((void *)a1 + 1);
      *(void *)a1 = 0;
      *((void *)a1 + 1) = 0;
      float v18 = *(float *)(v16 + 96);
      uint64_t v19 = a1;
      do
      {
        std::basic_string<char16_t> v20 = v19;
        uint64_t v22 = *((void *)v19 + 2);
        v19 += 16;
        uint64_t v21 = v22;
      }
      while (v18 < *(float *)(v22 + 96));
      int64_t v23 = a2;
      if (v20 == a1)
      {
        int64_t v23 = a2;
        do
        {
          if (v19 >= v23) {
            break;
          }
          uint64_t v25 = *((void *)v23 - 2);
          v23 -= 16;
        }
        while (v18 >= *(float *)(v25 + 96));
      }
      else
      {
        do
        {
          uint64_t v24 = *((void *)v23 - 2);
          v23 -= 16;
        }
        while (v18 >= *(float *)(v24 + 96));
      }
      if (v19 >= v23)
      {
        unint64_t v10 = (unint64_t)v19;
      }
      else
      {
        uint64_t v26 = *(void *)v23;
        unint64_t v10 = (unint64_t)v19;
        int32_t v27 = v23;
        do
        {
          *(void *)unint64_t v10 = v26;
          *(void *)int32_t v27 = v21;
          uint64_t v28 = *(void *)(v10 + 8);
          *(void *)(v10 + 8) = *((void *)v27 + 1);
          *((void *)v27 + 1) = v28;
          do
          {
            uint64_t v29 = *(void *)(v10 + 16);
            v10 += 16;
            uint64_t v21 = v29;
          }
          while (v18 < *(float *)(v29 + 96));
          do
          {
            uint64_t v30 = *((void *)v27 - 2);
            v27 -= 16;
            uint64_t v26 = v30;
          }
          while (v18 >= *(float *)(v30 + 96));
        }
        while (v10 < (unint64_t)v27);
      }
      std::basic_string<char16_t>::size_type v31 = (long long *)(v10 - 16);
      if ((char *)(v10 - 16) != a1)
      {
        long long v32 = *v31;
        *(void *)std::basic_string<char16_t>::size_type v31 = 0;
        *(void *)(v10 - 8) = 0;
        std::basic_string<char16_t>::size_type v33 = (std::__shared_weak_count *)*((void *)a1 + 1);
        *(_OWORD *)a1 = v32;
        if (v33) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v33);
        }
      }
      int v34 = *(std::__shared_weak_count **)(v10 - 8);
      *(void *)(v10 - 16) = v16;
      *(void *)(v10 - 8) = v17;
      if (v34) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v34);
      }
      if (v19 < v23) {
        goto LABEL_35;
      }
      BOOL v35 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (char *)(v10 - 16));
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>((char *)v10, a2))
      {
        a2 = (char *)(v10 - 16);
        if (v35) {
          return;
        }
        goto LABEL_1;
      }
      if (!v35)
      {
LABEL_35:
        std::__introsort<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*,false>(a1, v10 - 16, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      uint64_t v36 = *((void *)a1 + 1);
      *(void *)a1 = 0;
      *((void *)a1 + 1) = 0;
      float v37 = *(float *)(v16 + 96);
      if (*(float *)(*(void *)v125 + 96) >= v37)
      {
        uint64_t v39 = a1 + 16;
        do
        {
          unint64_t v10 = (unint64_t)v39;
          if (v39 >= a2) {
            break;
          }
          v39 += 16;
        }
        while (*(float *)(*(void *)v10 + 96) >= v37);
      }
      else
      {
        unint64_t v10 = (unint64_t)a1;
        do
        {
          uint64_t v38 = *(void *)(v10 + 16);
          v10 += 16;
        }
        while (*(float *)(v38 + 96) >= v37);
      }
      std::basic_string<char16_t>::size_type v40 = a2;
      if (v10 < (unint64_t)a2)
      {
        std::basic_string<char16_t>::size_type v40 = a2;
        do
        {
          uint64_t v41 = *((void *)v40 - 2);
          v40 -= 16;
        }
        while (*(float *)(v41 + 96) < v37);
      }
      if (v10 < (unint64_t)v40)
      {
        uint64_t v42 = *(void *)v10;
        uint64_t v43 = *(void *)v40;
        do
        {
          *(void *)unint64_t v10 = v43;
          *(void *)std::basic_string<char16_t>::size_type v40 = v42;
          uint64_t v44 = *(void *)(v10 + 8);
          *(void *)(v10 + 8) = *((void *)v40 + 1);
          *((void *)v40 + 1) = v44;
          do
          {
            uint64_t v45 = *(void *)(v10 + 16);
            v10 += 16;
            uint64_t v42 = v45;
          }
          while (*(float *)(v45 + 96) >= v37);
          do
          {
            uint64_t v46 = *((void *)v40 - 2);
            v40 -= 16;
            uint64_t v43 = v46;
          }
          while (*(float *)(v46 + 96) < v37);
        }
        while (v10 < (unint64_t)v40);
      }
      uint64_t v47 = (long long *)(v10 - 16);
      BOOL v4 = v10 - 16 >= (unint64_t)a1;
      BOOL v5 = v10 - 16 == (void)a1;
      if ((char *)(v10 - 16) != a1)
      {
        long long v48 = *v47;
        *(void *)uint64_t v47 = 0;
        *(void *)(v10 - 8) = 0;
        uint64_t v49 = (std::__shared_weak_count *)*((void *)a1 + 1);
        *(_OWORD *)a1 = v48;
        if (v49) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v49);
        }
      }
      a4 = 0;
      std::basic_string<char16_t>::size_type v50 = *(std::__shared_weak_count **)(v10 - 8);
      *(void *)(v10 - 16) = v16;
      *(void *)(v10 - 8) = v36;
      if (v50)
      {
        std::__shared_weak_count::__release_shared[abi:ne180100](v50);
        a4 = 0;
      }
    }
  }
  uint64_t v64 = a1 + 16;
  BOOL v66 = a1 == a2 || v64 == a2;
  if (a4)
  {
    if (!v66)
    {
      uint64_t v67 = 0;
      unint64_t v68 = a1;
      do
      {
        unint64_t v69 = v68;
        unint64_t v68 = v64;
        uint64_t v70 = *((void *)v69 + 2);
        if (*(float *)(*(void *)v69 + 96) < *(float *)(v70 + 96))
        {
          uint64_t v71 = *((void *)v69 + 3);
          uint64_t v72 = v67;
          *(void *)uint64_t v64 = 0;
          *((void *)v64 + 1) = 0;
          while (1)
          {
            unsigned __int8 v73 = &a1[v72];
            long long v74 = *(_OWORD *)&a1[v72];
            *(void *)unsigned __int8 v73 = 0;
            *((void *)v73 + 1) = 0;
            int v75 = *(std::__shared_weak_count **)&a1[v72 + 24];
            *((_OWORD *)v73 + 1) = v74;
            if (v75) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v75);
            }
            if (!v72) {
              break;
            }
            float v76 = *(float *)(*(void *)&a1[v72 - 16] + 96);
            v72 -= 16;
            if (v76 >= *(float *)(v70 + 96))
            {
              uint64_t v77 = &a1[v72 + 16];
              goto LABEL_90;
            }
          }
          uint64_t v77 = a1;
LABEL_90:
          unsigned __int8 v78 = (std::__shared_weak_count *)*((void *)v77 + 1);
          *(void *)uint64_t v77 = v70;
          *((void *)v77 + 1) = v71;
          if (v78) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v78);
          }
        }
        uint64_t v64 = v68 + 16;
        v67 += 16;
      }
      while (v68 + 16 != a2);
    }
  }
  else if (!v66)
  {
    do
    {
      uint64_t v117 = a1;
      a1 = v64;
      uint64_t v118 = *((void *)v117 + 2);
      if (*(float *)(*(void *)v117 + 96) < *(float *)(v118 + 96))
      {
        uint64_t v119 = *((void *)v117 + 3);
        std::basic_string<char16_t> v120 = v64;
        *(void *)uint64_t v64 = 0;
        *((void *)v64 + 1) = 0;
        do
        {
          long long v121 = *((_OWORD *)v120 - 1);
          *((void *)v120 - 2) = 0;
          *((void *)v120 - 1) = 0;
          uint64_t v122 = (std::__shared_weak_count *)*((void *)v120 + 1);
          *(_OWORD *)std::basic_string<char16_t> v120 = v121;
          if (v122) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v122);
          }
          float v123 = *(float *)(*((void *)v120 - 4) + 96);
          v120 -= 16;
        }
        while (v123 < *(float *)(v118 + 96));
        std::basic_string<char16_t> v124 = (std::__shared_weak_count *)*((void *)v120 + 1);
        *(void *)std::basic_string<char16_t> v120 = v118;
        *((void *)v120 + 1) = v119;
        if (v124) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v124);
        }
      }
      uint64_t v64 = a1 + 16;
    }
    while (a1 + 16 != a2);
  }
}

void *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(void *result, void *a2, void *a3)
{
  uint64_t v3 = *result;
  uint64_t v4 = *a2;
  float v5 = *(float *)(*a2 + 96);
  uint64_t v6 = *a3;
  float v7 = *(float *)(*a3 + 96);
  if (*(float *)(*result + 96) < v5)
  {
    if (v5 >= v7)
    {
      void *result = v4;
      *a2 = v3;
      uint64_t v12 = result[1];
      result[1] = a2[1];
      a2[1] = v12;
      uint64_t v13 = *a2;
      if (*(float *)(*a2 + 96) >= *(float *)(*a3 + 96)) {
        return result;
      }
      *a2 = *a3;
      *a3 = v13;
      uint64_t v8 = a3 + 1;
      uint64_t result = a2 + 1;
    }
    else
    {
      *result++ = v6;
      *a3 = v3;
      uint64_t v8 = a3 + 1;
    }
    uint64_t v9 = v8;
    goto LABEL_10;
  }
  if (v5 < v7)
  {
    *a2 = v6;
    *a3 = v4;
    uint64_t v9 = a2 + 1;
    uint64_t v10 = a2[1];
    a2[1] = a3[1];
    a3[1] = v10;
    uint64_t v11 = *result;
    if (*(float *)(*result + 96) < *(float *)(*a2 + 96))
    {
      *result++ = *a2;
      *a2 = v11;
LABEL_10:
      uint64_t v14 = *result;
      void *result = *v9;
      *uint64_t v9 = v14;
    }
  }
  return result;
}

void *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, a2, a3);
  uint64_t v9 = *a3;
  if (*(float *)(*a3 + 96) < *(float *)(*a4 + 96))
  {
    *a3 = *a4;
    *a4 = v9;
    uint64_t v10 = a3[1];
    a3[1] = a4[1];
    a4[1] = v10;
    uint64_t v11 = *a2;
    if (*(float *)(*a2 + 96) < *(float *)(*a3 + 96))
    {
      *a2 = *a3;
      *a3 = v11;
      uint64_t v12 = a2[1];
      a2[1] = a3[1];
      a3[1] = v12;
      uint64_t v13 = *a1;
      if (*(float *)(*a1 + 96) < *(float *)(*a2 + 96))
      {
        *a1 = *a2;
        *a2 = v13;
        uint64_t v14 = a1[1];
        a1[1] = a2[1];
        a2[1] = v14;
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(char *a1, char *a2)
{
  uint64_t v4 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(void *)a1;
      uint64_t v7 = *((void *)a2 - 2);
      if (*(float *)(*(void *)a1 + 96) < *(float *)(v7 + 96))
      {
        *(void *)a1 = v7;
        *((void *)a2 - 2) = v6;
        uint64_t v8 = *((void *)a1 + 1);
        *((void *)a1 + 1) = *((void *)a2 - 1);
        *((void *)a2 - 1) = v8;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (void *)a1 + 2, (void *)a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (void *)a1 + 2, (void *)a1 + 4, (void *)a2 - 2);
      return 1;
    case 5:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (void *)a1 + 2, (void *)a1 + 4, (void *)a1 + 6);
      uint64_t v23 = *((void *)a1 + 6);
      uint64_t v24 = *((void *)a2 - 2);
      if (*(float *)(v23 + 96) < *(float *)(v24 + 96))
      {
        *((void *)a1 + 6) = v24;
        *((void *)a2 - 2) = v23;
        uint64_t v25 = *((void *)a1 + 7);
        *((void *)a1 + 7) = *((void *)a2 - 1);
        *((void *)a2 - 1) = v25;
        uint64_t v26 = *((void *)a1 + 4);
        uint64_t v27 = *((void *)a1 + 6);
        float v28 = *(float *)(v27 + 96);
        if (*(float *)(v26 + 96) < v28)
        {
          uint64_t v29 = *((void *)a1 + 5);
          uint64_t v30 = *((void *)a1 + 7);
          *((void *)a1 + 4) = v27;
          *((void *)a1 + 5) = v30;
          *((void *)a1 + 6) = v26;
          *((void *)a1 + 7) = v29;
          uint64_t v31 = *((void *)a1 + 2);
          if (*(float *)(v31 + 96) < v28)
          {
            uint64_t v32 = *((void *)a1 + 3);
            *((void *)a1 + 2) = v27;
            *((void *)a1 + 3) = v30;
            *((void *)a1 + 4) = v31;
            *((void *)a1 + 5) = v32;
            uint64_t v33 = *(void *)a1;
            if (*(float *)(*(void *)a1 + 96) < v28)
            {
              uint64_t v34 = *((void *)a1 + 1);
              *(void *)a1 = v27;
              *((void *)a1 + 1) = v30;
              *((void *)a1 + 2) = v33;
              *((void *)a1 + 3) = v34;
            }
          }
        }
      }
      return 1;
    default:
      uint64_t v9 = a1 + 32;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*>(a1, (void *)a1 + 2, (void *)a1 + 4);
      uint64_t v10 = a1 + 48;
      if (a1 + 48 == a2) {
        return 1;
      }
      uint64_t v11 = 0;
      int v12 = 0;
      break;
  }
  while (1)
  {
    float v13 = *(float *)(*(void *)v9 + 96);
    uint64_t v14 = *(void *)v10;
    if (v13 < *(float *)(*(void *)v10 + 96))
    {
      uint64_t v15 = *((void *)v10 + 1);
      uint64_t v16 = v11;
      *(void *)uint64_t v10 = 0;
      *((void *)v10 + 1) = 0;
      while (1)
      {
        uint64_t v17 = &a1[v16];
        long long v18 = *(_OWORD *)&a1[v16 + 32];
        *((void *)v17 + 4) = 0;
        *((void *)v17 + 5) = 0;
        uint64_t v19 = *(std::__shared_weak_count **)&a1[v16 + 56];
        *((_OWORD *)v17 + 3) = v18;
        if (v19) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v19);
        }
        if (v16 == -32) {
          break;
        }
        float v20 = *(float *)(*(void *)&a1[v16 + 16] + 96);
        v16 -= 16;
        if (v20 >= *(float *)(v14 + 96))
        {
          uint64_t v21 = &a1[v16 + 48];
          goto LABEL_15;
        }
      }
      uint64_t v21 = a1;
LABEL_15:
      uint64_t v22 = (std::__shared_weak_count *)*((void *)v21 + 1);
      *(void *)uint64_t v21 = v14;
      *((void *)v21 + 1) = v15;
      if (v22) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v22);
      }
      if (++v12 == 8) {
        return v10 + 16 == a2;
      }
    }
    uint64_t v9 = v10;
    v11 += 16;
    v10 += 16;
    if (v10 == a2) {
      return 1;
    }
  }
}

uint64_t **com::apple::siri::tokenizer::data::config_yue_Hans::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DF70;
  v3[1] = *(_OWORD *)&off_1E695DF80;
  v3[2] = xmmword_1E695DF90;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::analysis::JaAnalyzer::addWordNormalizationFilter(morphun::analysis::JaAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C7718C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40D8FC8917);
  _Unwind_Resume(a1);
}

void morphun::analysis::JaAnalyzer::~JaAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06EC0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06EC0);
}

BOOL morphun::dialog::SpeakableString::contains(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1);
  char v4 = *(unsigned char *)(v3 + 23);
  if (v4 >= 0) {
    float v5 = (unsigned __int16 *)v3;
  }
  else {
    float v5 = *(unsigned __int16 **)v3;
  }
  uint64_t v6 = *((unsigned __int8 *)a2 + 23);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = *(unsigned __int16 **)a2;
  }
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a2 + 1);
  }
  if (!v6) {
    return 1;
  }
  if (v4 >= 0) {
    uint64_t v8 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    uint64_t v8 = *(void *)(v3 + 8);
  }
  uint64_t v9 = &v5[v8];
  if (v8 >= v6)
  {
    uint64_t v10 = v5;
    do
    {
      if (v8 - v6 == -1) {
        break;
      }
      uint64_t v14 = v8 + 1;
      while (*v10 != *v7)
      {
        ++v10;
        if (v6 == --v14) {
          goto LABEL_14;
        }
      }
      uint64_t v15 = 0;
      while (v7[v15] == v10[v15])
      {
        if (v6 == ++v15) {
          goto LABEL_15;
        }
      }
      ++v10;
      uint64_t v8 = v9 - v10;
    }
    while (v8 >= v6);
  }
LABEL_14:
  uint64_t v10 = v9;
LABEL_15:
  uint64_t v11 = (char *)((char *)v10 - (char *)v5);
  return v10 != v9 && v11 + 2 != 0;
}

BOOL morphun::dialog::SpeakableString::isEmpty(morphun::dialog::SpeakableString *this)
{
  if (*((char *)this + 31) < 0)
  {
    if (*((void *)this + 2)) {
      return 0;
    }
  }
  else if (*((unsigned char *)this + 31))
  {
    return 0;
  }
  uint64_t v2 = *((void *)this + 4);
  if (!v2) {
    return 1;
  }
  if (*(char *)(v2 + 23) < 0) {
    uint64_t v3 = *(void *)(v2 + 8);
  }
  else {
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  }
  return v3 == 0;
}

BOOL morphun::dialog::SpeakableString::speakEqualsPrint(morphun::dialog::SpeakableString *this)
{
  return *((void *)this + 4) == 0;
}

uint64_t morphun::dialog::SpeakableString::getSpeak(morphun::dialog::SpeakableString *this)
{
  if (*((void *)this + 4)) {
    return *((void *)this + 4);
  }
  else {
    return (uint64_t)this + 8;
  }
}

uint64_t morphun::dialog::SpeakableString::getPrint(morphun::dialog::SpeakableString *this)
{
  return (uint64_t)this + 8;
}

void morphun::dialog::SpeakableString::toSpeakableString(morphun::dialog::SpeakableString *this)
{
}

void sub_1D2C77424(_Unwind_Exception *a1)
{
  __cxa_free_exception(v2);
  MEMORY[0x1D942B8B0](v1, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

morphun::dialog::SpeakableString *morphun::dialog::SpeakableString::SpeakableString(morphun::dialog::SpeakableString *this, const morphun::dialog::SpeakableString *a2)
{
  *(void *)this = &off_1F2A09020;
  if (*((char *)a2 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 8), *((const std::basic_string<char16_t>::value_type **)a2 + 1), *((void *)a2 + 2));
  }
  else
  {
    long long v4 = *(_OWORD *)((char *)a2 + 8);
    *((void *)this + 3) = *((void *)a2 + 3);
    *(_OWORD *)((char *)this + 8) = v4;
  }
  *((void *)this + 4) = 0;
  if (((*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 48))(a2) & 1) == 0) {
    operator new();
  }
  return this;
}

void sub_1D2C77554(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C775E0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::SpeakableString::~SpeakableString(morphun::dialog::SpeakableString *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::SpeakableString::~SpeakableString(morphun::dialog::SpeakableString *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 56)) = a2[1];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[2];
  uint64_t v4 = *((void *)this + 4);
  float v5 = (void **)((char *)this + 8);
  if (v4 && (void **)v4 != v5)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1D942B8B0](v4, 0x1012C40EC159624);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(*v5);
  }
}

void morphun::dialog::SpeakableString::toString(morphun::dialog::SpeakableString *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  if ((*(unsigned int (**)(morphun::dialog::SpeakableString *))(*(void *)this + 48))(this))
  {
    std::operator+<char16_t>((uint64_t)&v10, "S", (const void **)this + 1);
    std::basic_string<char16_t>::push_back(&v10, 93);
    *a2 = v10;
  }
  else
  {
    std::operator+<char16_t>((uint64_t)&v8, "S", (const void **)this + 1);
    std::basic_string<char16_t>::append(&v8, (const std::basic_string<char16_t>::value_type *)"/", 5uLL);
    std::basic_string<char16_t> v9 = v8;
    memset(&v8, 0, sizeof(v8));
    uint64_t v4 = npc<std::basic_string<char16_t>>(*((void *)this + 4));
    int v5 = *(char *)(v4 + 23);
    if (v5 >= 0) {
      uint64_t v6 = (const std::basic_string<char16_t>::value_type *)v4;
    }
    else {
      uint64_t v6 = *(const std::basic_string<char16_t>::value_type **)v4;
    }
    if (v5 >= 0) {
      std::basic_string<char16_t>::size_type v7 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      std::basic_string<char16_t>::size_type v7 = *(void *)(v4 + 8);
    }
    std::basic_string<char16_t>::append(&v9, v6, v7);
    std::basic_string<char16_t> v10 = v9;
    memset(&v9, 0, sizeof(v9));
    std::basic_string<char16_t>::push_back(&v10, 93);
    *a2 = v10;
    memset(&v10, 0, sizeof(v10));
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D2C778D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 25) < 0) {
    operator delete(*(void **)(v21 - 48));
  }
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *morphun::dialog::SpeakableString::SpeakableString(uint64_t *a1, uint64_t *a2, long long *a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v4 - 56)) = a2[1];
  *(uint64_t *)((char *)a1 + *(void *)(*a1 - 40)) = a2[2];
  int v5 = (std::basic_string<char16_t> *)(a1 + 1);
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    a1[3] = *((void *)a3 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  a1[4] = 0;
  return a1;
}

void *morphun::dialog::SpeakableString::SpeakableString(void *a1, long long *a2)
{
  *a1 = &off_1F2A09020;
  uint64_t v3 = (std::basic_string<char16_t> *)(a1 + 1);
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v3, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    v3->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v3->__r_.__value_.__l.__data_ = v4;
  }
  a1[4] = 0;
  return a1;
}

uint64_t morphun::dialog::SpeakableString::SpeakableString(uint64_t a1, uint64_t *a2, long long *a3, unsigned __int16 *a4)
{
  uint64_t v7 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v7 - 56)) = a2[1];
  *(void *)(a1 + *(void *)(*(void *)a1 - 40)) = a2[2];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v8;
  }
  *(void *)(a1 + 32) = 0;
  uint64_t v9 = *((unsigned __int8 *)a3 + 23);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *((void *)a3 + 1);
  }
  uint64_t v11 = *((unsigned __int8 *)a4 + 23);
  int v12 = (char)v11;
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *((void *)a4 + 1);
  }
  if (v9 != v11) {
    goto LABEL_19;
  }
  if (v9)
  {
    if (v12 >= 0) {
      float v13 = a4;
    }
    else {
      float v13 = *(unsigned __int16 **)a4;
    }
    if (v10 >= 0) {
      uint64_t v14 = (const std::basic_string<char16_t>::value_type *)a3;
    }
    else {
      uint64_t v14 = *(const std::basic_string<char16_t>::value_type **)a3;
    }
    while (*v13 == *(unsigned __int16 *)v14)
    {
      ++v14;
      ++v13;
      if (!--v9) {
        return a1;
      }
    }
LABEL_19:
    operator new();
  }
  return a1;
}

void sub_1D2C77CAC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SpeakableString::SpeakableString(uint64_t a1, long long *a2, unsigned __int16 *a3)
{
  *(void *)a1 = &off_1F2A09020;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v6 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v6;
  }
  *(void *)(a1 + 32) = 0;
  uint64_t v7 = *((unsigned __int8 *)a2 + 23);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *((void *)a2 + 1);
  }
  uint64_t v9 = *((unsigned __int8 *)a3 + 23);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *((void *)a3 + 1);
  }
  if (v7 != v9) {
    goto LABEL_19;
  }
  if (v7)
  {
    if (v10 >= 0) {
      uint64_t v11 = a3;
    }
    else {
      uint64_t v11 = *(unsigned __int16 **)a3;
    }
    if (v8 >= 0) {
      int v12 = (const std::basic_string<char16_t>::value_type *)a2;
    }
    else {
      int v12 = *(const std::basic_string<char16_t>::value_type **)a2;
    }
    while (*v11 == *(unsigned __int16 *)v12)
    {
      ++v12;
      ++v11;
      if (!--v7) {
        return a1;
      }
    }
LABEL_19:
    operator new();
  }
  return a1;
}

void sub_1D2C77E20(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

morphun::dialog::SpeakableString *morphun::dialog::SpeakableString::SpeakableString(morphun::dialog::SpeakableString *this, const morphun::dialog::SpeakableString *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 56)) = *((void *)a2 + 1);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 2);
  if (*(char *)(a3 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 8), *(const std::basic_string<char16_t>::value_type **)(a3 + 8), *(void *)(a3 + 16));
  }
  else
  {
    long long v6 = *(_OWORD *)(a3 + 8);
    *((void *)this + 3) = *(void *)(a3 + 24);
    *(_OWORD *)((char *)this + 8) = v6;
  }
  *((void *)this + 4) = 0;
  if (((*(uint64_t (**)(uint64_t))(*(void *)a3 + 48))(a3) & 1) == 0) {
    operator new();
  }
  return this;
}

void sub_1D2C7800C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v3, 0x1012C40EC159624);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::SpeakableString::~SpeakableString(morphun::dialog::SpeakableString *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::SpeakableString::~SpeakableString(void *a1)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::SpeakableString::toString(morphun::dialog::SpeakableString *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

BOOL morphun::dialog::SpeakableString::operator==(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = *(unsigned __int8 *)(a1 + 31);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t v4 = *(unsigned __int8 *)(a2 + 31);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if (v2 != v4) {
    return 0;
  }
  if (v2)
  {
    if (v5 >= 0) {
      long long v6 = (unsigned __int16 *)(a2 + 8);
    }
    else {
      long long v6 = *(unsigned __int16 **)(a2 + 8);
    }
    if (v3 >= 0) {
      uint64_t v7 = (unsigned __int16 *)(a1 + 8);
    }
    else {
      uint64_t v7 = *(unsigned __int16 **)(a1 + 8);
    }
    while (*v6 == *v7)
    {
      ++v7;
      ++v6;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    return 0;
  }
LABEL_16:
  unint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = *(void *)(a2 + 32);
  BOOL result = (v8 | v9) == 0;
  if (v8) {
    BOOL v11 = v9 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    uint64_t v12 = *(unsigned __int8 *)(v8 + 23);
    int v13 = (char)v12;
    if ((v12 & 0x80u) != 0) {
      uint64_t v12 = *(void *)(v8 + 8);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 23);
    int v15 = (char)v14;
    if ((v14 & 0x80u) != 0) {
      uint64_t v14 = *(void *)(v9 + 8);
    }
    if (v12 == v14)
    {
      if (v12)
      {
        if (v15 < 0) {
          unint64_t v9 = *(void *)v9;
        }
        if (v13 < 0) {
          unint64_t v8 = *(void *)v8;
        }
        uint64_t v16 = v12 - 1;
        do
        {
          int v18 = *(unsigned __int16 *)v8;
          v8 += 2;
          int v17 = v18;
          int v20 = *(unsigned __int16 *)v9;
          v9 += 2;
          int v19 = v20;
          BOOL v22 = v16-- != 0;
          BOOL result = v19 == v17;
        }
        while (v19 == v17 && v22);
        return result;
      }
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL morphun::dialog::SpeakableString::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::dialog::SpeakableString::operator==(a1, a2);
}

void morphun::dialog::SpeakableString::operator+(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v6 = (const std::basic_string<char16_t>::value_type *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v21, *(const std::basic_string<char16_t>::value_type **)(a1 + 8), *(void *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = *(_OWORD *)v6;
    v21.__r_.__value_.__r.__words[2] = *(void *)(a1 + 24);
  }
  int v7 = *(char *)(a2 + 31);
  if (v7 >= 0) {
    unint64_t v8 = (const std::basic_string<char16_t>::value_type *)(a2 + 8);
  }
  else {
    unint64_t v8 = *(const std::basic_string<char16_t>::value_type **)(a2 + 8);
  }
  if (v7 >= 0) {
    std::basic_string<char16_t>::size_type v9 = *(unsigned __int8 *)(a2 + 31);
  }
  else {
    std::basic_string<char16_t>::size_type v9 = *(void *)(a2 + 16);
  }
  std::basic_string<char16_t>::append(&v21, v8, v9);
  uint64_t v10 = *(void *)(a1 + 32);
  if (v10 | *(void *)(a2 + 32))
  {
    memset(&v20, 0, sizeof(v20));
    if (v10)
    {
      int v11 = *(char *)(v10 + 23);
      if (v11 >= 0) {
        uint64_t v12 = (const std::basic_string<char16_t>::value_type *)v10;
      }
      else {
        uint64_t v12 = *(const std::basic_string<char16_t>::value_type **)v10;
      }
      if (v11 >= 0) {
        std::basic_string<char16_t>::size_type v13 = *(unsigned __int8 *)(v10 + 23);
      }
      else {
        std::basic_string<char16_t>::size_type v13 = *(void *)(v10 + 8);
      }
    }
    else
    {
      int v14 = *(char *)(a1 + 31);
      if (v14 >= 0) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = *(const std::basic_string<char16_t>::value_type **)(a1 + 8);
      }
      if (v14 >= 0) {
        std::basic_string<char16_t>::size_type v13 = *(unsigned __int8 *)(a1 + 31);
      }
      else {
        std::basic_string<char16_t>::size_type v13 = *(void *)(a1 + 16);
      }
    }
    std::basic_string<char16_t>::append(&v20, v12, v13);
    uint64_t v15 = *(void *)(a2 + 32);
    if (v15)
    {
      int v16 = *(char *)(v15 + 23);
      if (v16 >= 0) {
        int v17 = *(const std::basic_string<char16_t>::value_type **)(a2 + 32);
      }
      else {
        int v17 = *(const std::basic_string<char16_t>::value_type **)v15;
      }
      if (v16 >= 0) {
        std::basic_string<char16_t>::size_type v18 = *(unsigned __int8 *)(v15 + 23);
      }
      else {
        std::basic_string<char16_t>::size_type v18 = *(void *)(v15 + 8);
      }
    }
    else
    {
      int v19 = *(char *)(a2 + 31);
      if (v19 >= 0) {
        int v17 = (const std::basic_string<char16_t>::value_type *)(a2 + 8);
      }
      else {
        int v17 = *(const std::basic_string<char16_t>::value_type **)(a2 + 8);
      }
      if (v19 >= 0) {
        std::basic_string<char16_t>::size_type v18 = *(unsigned __int8 *)(a2 + 31);
      }
      else {
        std::basic_string<char16_t>::size_type v18 = *(void *)(a2 + 16);
      }
    }
    std::basic_string<char16_t>::append(&v20, v17, v18);
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)a3, (long long *)&v21, (unsigned __int16 *)&v20);
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    morphun::dialog::SpeakableString::SpeakableString(a3, (long long *)&v21);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C78408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::SpeakableString::operator=(uint64_t a1, uint64_t a2)
{
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(a1 + 8), (const std::basic_string<char16_t> *)(a2 + 8));
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1D942B8B0](v4, 0x1012C40EC159624);
    *(void *)(a1 + 32) = 0;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)a2 + 48))(a2) & 1) == 0) {
    operator new();
  }
  return a1;
}

void sub_1D2C78528(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SpeakableString::operator+=(uint64_t a1, uint64_t a2)
{
  morphun::dialog::SpeakableString::operator+(a1, a2, v4);
  morphun::dialog::SpeakableString::operator=(a1, (uint64_t)v4);
  return a1;
}

void sub_1D2C7859C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::SpeakableString::toSpeakableString(morphun::dialog::SpeakableString *this)
{
  morphun::dialog::SpeakableString::toSpeakableString((morphun::dialog::SpeakableString *)((char *)this
                                                                                         + *(void *)(*(void *)this - 48)));
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::~FeedForwardInflectionAnalyzer_InflectionLikelihoods(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::~FeedForwardInflectionAnalyzer_InflectionLikelihoods(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 5));
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::FeedForwardInflectionAnalyzer_InflectionLikelihoods(uint64_t a1, uint64_t *a2, long long *a3, void *a4, uint64_t a5)
{
  uint64_t v8 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v8 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v9 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v9;
  }
  std::map<std::basic_string<char16_t>,double>::map[abi:ne180100](a1 + 32, a4);
  *(void *)(a1 + 56) = a5;
  return a1;
}

void sub_1D2C787D4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::map<std::basic_string<char16_t>,double>::map[abi:ne180100](uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  uint64_t v4 = a2 + 1;
  int v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = v3;
      if (*(void *)a1 == v3) {
        goto LABEL_8;
      }
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = v3;
      if (v6)
      {
        do
        {
          uint64_t v7 = v8;
          uint64_t v8 = *(void *)(v8 + 8);
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v7 = *(void *)(v9 + 16);
          BOOL v10 = *(void *)v7 == v9;
          uint64_t v9 = v7;
        }
        while (v10);
      }
      if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v7 + 32), (unsigned __int16 *)v5 + 16))
      {
LABEL_8:
        if (!v6)
        {
          uint64_t v18 = v3;
          int v11 = (uint64_t **)v3;
LABEL_14:
          uint64_t v12 = (uint64_t *)operator new(0x40uLL);
          std::basic_string<char16_t>::size_type v13 = (std::basic_string<char16_t> *)(v12 + 4);
          if (*((char *)v5 + 55) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(v13, (const std::basic_string<char16_t>::value_type *)v5[4], v5[5]);
          }
          else
          {
            long long v14 = *((_OWORD *)v5 + 2);
            v12[6] = v5[6];
            *(_OWORD *)&v13->__r_.__value_.__l.__data_ = v14;
          }
          v12[7] = v5[7];
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, v18, v11, v12);
          goto LABEL_18;
        }
        uint64_t v18 = v7;
        int v11 = (uint64_t **)(v7 + 8);
      }
      else
      {
        int v11 = (uint64_t **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>(a1, &v18, (unsigned __int16 *)v5 + 16);
      }
      if (!*v11) {
        goto LABEL_14;
      }
LABEL_18:
      uint64_t v15 = (void *)v5[1];
      if (v15)
      {
        do
        {
          int v16 = v15;
          uint64_t v15 = (void *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          int v16 = (void *)v5[2];
          BOOL v10 = *v16 == (void)v5;
          int v5 = v16;
        }
        while (!v10);
      }
      int v5 = v16;
    }
    while (v16 != v4);
  }
  return a1;
}

void sub_1D2C78968(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](0, v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::FeedForwardInflectionAnalyzer_InflectionLikelihoods(uint64_t a1, long long *a2, void *a3, uint64_t a4)
{
  *(void *)a1 = &off_1F2A08A50;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v7 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  std::map<std::basic_string<char16_t>,double>::map[abi:ne180100](a1 + 32, a3);
  *(void *)(a1 + 56) = a4;
  return a1;
}

void sub_1D2C78A20(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void virtual thunk to'morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::~FeedForwardInflectionAnalyzer_InflectionLikelihoods(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

double morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::getLikelihood(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v2 = a1 + 40;
  uint64_t v3 = *(void *)(a1 + 40);
  double v4 = 0.0;
  if (v3)
  {
    uint64_t v6 = a1 + 40;
    do
    {
      BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v3 + 32), a2);
      uint64_t v8 = (uint64_t *)(v3 + 8);
      if (!v7)
      {
        uint64_t v8 = (uint64_t *)v3;
        uint64_t v6 = v3;
      }
      uint64_t v3 = *v8;
    }
    while (*v8);
    if (v6 != v2
      && !std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2, (unsigned __int16 *)(v6 + 32)))
    {
      return *(double *)(v6 + 56);
    }
  }
  return v4;
}

uint64_t morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods::getMostLikelyInflection(morphun::util::lemmatization::FeedForwardInflectionAnalyzer_InflectionLikelihoods *this)
{
  return (uint64_t)this + 8;
}

void virtual thunk to'morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::inflectSignificantTokens(void *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, void *a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::inflectSignificantTokens(uint64_t *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, void *a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  unint64_t v10 = *(int *)(a4[1] - 4);
  uint64_t v11 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v11 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v34, *(const std::basic_string<char16_t>::value_type **)v11, *(void *)(v11 + 8));
  }
  else
  {
    long long v12 = *(_OWORD *)v11;
    v34.__r_.__value_.__r.__words[2] = *(void *)(v11 + 16);
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v12;
  }
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::inflect(a1 + 19, (uint64_t)&v34, a2, (uint64_t)&__p);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  uint64_t v13 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v13 + 23) < 0) {
    operator delete(*(void **)v13);
  }
  *(std::basic_string<char16_t> *)uint64_t v13 = __p;
  uint64_t v14 = (uint64_t)*a3 + 24 * (int)v10;
  if ((*(char *)(v14 + 23) & 0x80000000) == 0)
  {
    if (*(unsigned char *)(v14 + 23)) {
      goto LABEL_9;
    }
LABEL_19:
    a5->__r_.__value_.__r.__words[0] = 0;
    a5->__r_.__value_.__l.__size_ = 0;
    a5->__r_.__value_.__r.__words[2] = 0;
    goto LABEL_55;
  }
  if (!*(void *)(v14 + 8)) {
    goto LABEL_19;
  }
LABEL_9:
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, a1[21]);
  int Count = morphun::grammar::synthesis::NlGrammarSynthesizer::getCount((unsigned __int16 *)&__p);
  __str.__r_.__value_.__r.__words[0] = 0;
  if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v16 = &v34;
  }
  else {
    int v16 = (std::basic_string<char16_t> *)v34.__r_.__value_.__r.__words[0];
  }
  if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(v34.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = v34.__r_.__value_.__l.__size_;
  }
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[4], (uint64_t)&__str, (const UChar *)v16, size);
  if (CombinedBinaryType)
  {
    std::basic_string<char16_t>::size_type v19 = a1[11] & __str.__r_.__value_.__r.__words[0];
    if (v19 == a1[8])
    {
      uint64_t v20 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(CombinedBinaryType);
      goto LABEL_24;
    }
    if (v19 == a1[9])
    {
      uint64_t v20 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(CombinedBinaryType);
      goto LABEL_24;
    }
    if (v19 == a1[10])
    {
      uint64_t v20 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER(CombinedBinaryType);
LABEL_24:
      if (*(char *)(v20 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v32, *(const std::basic_string<char16_t>::value_type **)v20, *(void *)(v20 + 8));
      }
      else
      {
        long long v21 = *(_OWORD *)v20;
        v32.__r_.__value_.__r.__words[2] = *(void *)(v20 + 16);
        *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v21;
      }
      goto LABEL_28;
    }
  }
  memset(&v32, 0, sizeof(v32));
LABEL_28:
  int Gender = morphun::grammar::synthesis::NlGrammarSynthesizer::getGender((unsigned __int16 *)&v32);
  if (Count == 1)
  {
    if (Gender == 3) {
      int v24 = 2;
    }
    else {
      int v24 = 1;
    }
    if (Gender) {
      BOOL v23 = v24;
    }
    else {
      BOOL v23 = 0;
    }
  }
  else
  {
    BOOL v23 = Count == 2;
  }
  if ((int)(((a4[1] - *a4) >> 2) - 1) >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = (uint64_t)(a1 + 12);
    uint64_t v27 = 4 * (((a4[1] - *a4) >> 2) - 1);
    do
    {
      unint64_t v28 = *(int *)(*a4 + v25);
      morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::inflectWithDeclension(v26, (uint64_t)*a3 + 24 * (int)v28, v23, &__str);
      char v29 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v30 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v30 = __str.__r_.__value_.__l.__size_;
      }
      if (v30)
      {
        if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v28) {
          std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
        }
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)*a3 + (int)v28, &__str);
        if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
          goto LABEL_45;
        }
      }
      else
      {
        a5->__r_.__value_.__r.__words[0] = 0;
        a5->__r_.__value_.__l.__size_ = 0;
        a5->__r_.__value_.__r.__words[2] = 0;
        if ((v29 & 0x80) == 0) {
          goto LABEL_45;
        }
      }
      operator delete(__str.__r_.__value_.__l.__data_);
LABEL_45:
      if (!v30) {
        goto LABEL_51;
      }
      v25 += 4;
    }
    while (v27 != v25);
  }
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
LABEL_51:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_55:
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v34.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C78EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

void virtual thunk to'morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern *this)
{
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern((morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern *)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern((morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern *)((char *)this + *(void *)(*(void *)this - 32)));
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern *this)
{
  *(void *)this = &off_1F2A0E118;
  *((void *)this + 29) = &unk_1F2A0E1A0;
  uint64_t v2 = *((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

{
  uint64_t vars8;

  morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern(this);

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::inflect@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::basic_string<char16_t> *a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
  if (result)
  {
    uint64_t v9 = npc<morphun::Tokenizer>(a1[7]);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, a2);
    npc<morphun::TokenChain>(v10);
    morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(a4, a3, v10, (uint64_t)a1 + *(void *)(*a1 - 72));
    uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)v10 + 16);
    return v11(v10);
  }
  else
  {
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
  }
  return result;
}

void sub_1D2C7912C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2C791B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C79218(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveNounInflectionPattern::isSupported(uint64_t *a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = npc<morphun::Tokenizer>(a1[7]);
  BOOL v7 = (const morphun::TokenChain *)(*(uint64_t (**)(uint64_t, const void **))(*(void *)v6 + 24))(v6, a2);
  npc<morphun::TokenChain>((uint64_t)v7);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)&v16, v7);
  if (v16 == v17)
  {
LABEL_12:
    uint64_t v12 = 0;
    goto LABEL_13;
  }
  if (!morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::isSupported(a1 + 19, (const void **)(v17 - 24), a3))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "l");
    morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)__p);
LABEL_10:
    if (v15 < 0) {
      operator delete(__p[0]);
    }
    goto LABEL_12;
  }
  int v8 = -1431655765 * ((unint64_t)(v17 - v16) >> 3) - 1;
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 24 * v8;
    while (1)
    {
      uint64_t v11 = (const void **)(v16 + v9);
      if (((*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 40))(a1, v16 + v9) & 1) == 0) {
        break;
      }
      v9 += 24;
      if (v10 == v9) {
        goto LABEL_7;
      }
    }
    std::operator+<char16_t>((uint64_t)__p, "o", v11);
    morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)__p);
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v12 = 1;
LABEL_13:
  __p[0] = &v16;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  (*(void (**)(const morphun::TokenChain *))(*(void *)v7 + 16))(v7);
  return v12;
}

void sub_1D2C793DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::basic_string<char16_t> __p = &a15;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 16))(v15);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::ar::ArabicNormalizationFilter::incrementToken(morphun::analysis::ar::ArabicNormalizationFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2) {
    goto LABEL_35;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    double v4 = (void *)*((void *)this + 13);
    if (v4) {
      uint64_t v5 = (uint64_t)v4 + *(void *)(*v4 - 96);
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v6 = npc<std::basic_string<char16_t>>(v5);
    if (*(char *)(v6 + 23) < 0) {
      uint64_t v7 = *(void *)(v6 + 8);
    }
    else {
      LODWORD(v7) = *(unsigned __int8 *)(v6 + 23);
    }
    if ((int)v7 >= 1)
    {
      int v8 = 0;
      do
      {
        int v9 = *(char *)(v6 + 23);
        uint64_t v10 = v6;
        if (v9 < 0) {
          uint64_t v10 = *(void *)v6;
        }
        int v11 = *(unsigned __int16 *)(v10 + 2 * v8);
        if (v11 <= 1599)
        {
          if ((v11 - 1570) < 2 || v11 == 1573)
          {
            uint64_t v15 = v6;
            if (v9 < 0) {
              uint64_t v15 = *(void *)v6;
            }
            *(_WORD *)(v15 + 2 * v8) = 1575;
          }
          else if (v11 == 1577)
          {
            uint64_t v14 = v6;
            if (v9 < 0) {
              uint64_t v14 = *(void *)v6;
            }
            *(_WORD *)(v14 + 2 * v8) = 1607;
          }
        }
        else if ((v11 - 1611) < 8 || v11 == 1600)
        {
          uint64_t v12 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(v6);
          uint64_t v6 = (uint64_t)std::basic_string<char16_t>::erase(v12, v8, v13);
          LODWORD(v7) = v7 - 1;
          --v8;
        }
        else if (v11 == 1609)
        {
          uint64_t v16 = v6;
          if (v9 < 0) {
            uint64_t v16 = *(void *)v6;
          }
          *(_WORD *)(v16 + 2 * v8) = 1610;
        }
        ++v8;
      }
      while (v8 < (int)v7);
    }
    uint64_t v17 = (void *)*((void *)this + 13);
    if (v17)
    {
      std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)((char *)v17 + *(void *)(*v17 - 96)), (int)v7, 0);
      return v3;
    }
LABEL_35:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return v3;
}

void sub_1D2C7967C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C796E4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::erase(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n)
{
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
  }
  else {
    std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if (size < __pos) {
    std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
  }
  std::basic_string<char16_t>::__erase_external_with_move(this, __pos, __n);
  return this;
}

void std::basic_string<char16_t>::__erase_external_with_move(std::basic_string<char16_t> *this, std::basic_string<char16_t>::size_type __pos, std::basic_string<char16_t>::size_type __n)
{
  int v4 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if (v4 < 0)
  {
    uint64_t v6 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
  }
  else
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    uint64_t v6 = this;
  }
  BOOL v7 = size != __pos;
  if (size - __pos >= 2)
  {
    memmove((char *)v6 + 2 * __pos, (char *)v6 + 2 * __pos + 2 * v7, 2 * (size - __pos - v7));
    LOBYTE(v4) = *((unsigned char *)&this->__r_.__value_.__s + 23);
  }
  std::basic_string<char16_t>::size_type v8 = size - v7;
  if ((v4 & 0x80) != 0) {
    this->__r_.__value_.__l.__size_ = v8;
  }
  else {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = v8 & 0x7F;
  }
  v6->__r_.__value_.__s.__data_[v8] = 0;
}

void morphun::analysis::ar::ArabicNormalizationFilter::~ArabicNormalizationFilter(morphun::analysis::ar::ArabicNormalizationFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07658);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07658);
}

uint64_t marisa::grimoire::trie::Tail::build(long long *a1, uint64_t a2, uint64_t *a3, int a4)
{
  if (!a3)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
    exception[2] = 0x20000000DLL;
    uint64_t v43 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc:13: "
          "MARISA_NULL_ERROR: offsets == NULL";
    goto LABEL_73;
  }
  if (a4 == 4096)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    if (v8)
    {
      uint64_t v9 = 0;
      char v7 = 1;
      while (1)
      {
        uint64_t v10 = *(void *)(a2 + 8) + 16 * v9;
        uint64_t v11 = *(unsigned int *)(v10 + 8);
        if (v11) {
          break;
        }
LABEL_11:
        if (++v9 == v8) {
          goto LABEL_15;
        }
      }
      uint64_t v12 = -v11;
      uint64_t v13 = *(void *)v10 + 1;
      while (*(unsigned char *)(v13 + v12))
      {
        if (!++v12) {
          goto LABEL_11;
        }
      }
      char v7 = 0;
    }
    else
    {
      char v7 = 1;
    }
    goto LABEL_15;
  }
  if (a4 != 0x2000)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
    exception[2] = 0x500000024;
    uint64_t v43 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc:36: "
          "MARISA_CODE_ERROR: undefined tail mode";
LABEL_73:
    exception[3] = v43;
  }
  char v7 = 0;
  uint64_t v8 = *(void *)(a2 + 24);
LABEL_15:
  memset(v44, 0, 41);
  memset(v45, 0, 41);
  long long v48 = 0u;
  memset(v49, 0, sizeof(v49));
  long long v50 = 0u;
  memset(v51, 0, sizeof(v51));
  v45[3] = 0u;
  long long v46 = 0u;
  memset(v47, 0, sizeof(v47));
  unint64_t v14 = *(void *)(a2 + 8);
  if (v8)
  {
    uint64_t v15 = 0;
    uint64_t v16 = (_DWORD *)(v14 + 12);
    do
    {
      *uint64_t v16 = v15;
      v16 += 4;
      ++v15;
    }
    while (v8 != v15);
  }
  marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v14, v14 + 16 * v8, 0);
  memset(v54, 0, 41);
  unint64_t v17 = *(void *)(a2 + 24);
  if (v17)
  {
    marisa::grimoire::vector::Vector<unsigned int>::realloc((uint64_t *)v54, *(void *)(a2 + 24));
    unint64_t v18 = *((void *)&v54[1] + 1);
  }
  else
  {
    unint64_t v18 = 0;
  }
  unint64_t v19 = v17 - v18;
  if (v17 > v18)
  {
    uint64_t v20 = (_DWORD *)(*((void *)&v54[0] + 1) + 4 * v18);
    do
    {
      *v20++ = 0;
      --v19;
    }
    while (v19);
  }
  *((void *)&v54[1] + 1) = v17;
  v53[0] = 0;
  v53[1] = 0;
  uint64_t v21 = *(void *)(a2 + 24);
  if (!v21)
  {
    size_t v22 = 0;
    goto LABEL_52;
  }
  size_t v22 = 0;
  BOOL v23 = v53;
  uint64_t v24 = *((void *)&v54[0] + 1);
  do
  {
    --v21;
    uint64_t v25 = *(void *)(a2 + 8);
    uint64_t v26 = v25 + 16 * v21;
    unint64_t v28 = (unsigned int *)(v26 + 8);
    uint64_t v27 = *(unsigned int *)(v26 + 8);
    if (!*(_DWORD *)(v26 + 8))
    {
      std::basic_string<char16_t>::size_type v40 = __cxa_allocate_exception(0x20uLL);
      *std::basic_string<char16_t>::size_type v40 = &unk_1F2A081F8;
      v40[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
      v40[2] = 0x4000000AALL;
      v40[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc"
               ":170: MARISA_RANGE_ERROR: current.length() == 0";
    }
    uint64_t v29 = 0;
    uint64_t v30 = *((unsigned int *)v23 + 2);
    while (v29 != v30)
    {
      if (*(unsigned __int8 *)(*v23 - v29) != *(unsigned __int8 *)(*(void *)v26 - v29)) {
        goto LABEL_33;
      }
      if (++v29 == v27) {
        goto LABEL_34;
      }
    }
    uint64_t v29 = *((unsigned int *)v23 + 2);
LABEL_33:
    if (v29 != v27) {
      goto LABEL_36;
    }
LABEL_34:
    if (v30)
    {
      *(_DWORD *)(v24 + 4 * *(unsigned int *)(v25 + 16 * v21 + 12)) = v30
                                                                      - v27
                                                                      + *(_DWORD *)(v24
                                                                                  + 4 * *((unsigned int *)v23 + 3));
      goto LABEL_48;
    }
LABEL_36:
    *(_DWORD *)(v24 + 4 * *(unsigned int *)(v25 + 16 * v21 + 12)) = v22;
    unint64_t v31 = *v28;
    if (v31)
    {
      for (unint64_t i = 0; i < v31; ++i)
      {
        char v52 = *(unsigned char *)(*(void *)v26 - v31 + i + 1);
        marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v44, &v52);
        unint64_t v31 = *v28;
      }
      if (v7)
      {
LABEL_45:
        char v52 = 0;
        marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v44, &v52);
        goto LABEL_47;
      }
      if (v31 >= 2)
      {
        unint64_t v33 = 1;
        do
        {
          marisa::grimoire::vector::BitVector::push_back((uint64_t *)v45, 0);
          ++v33;
        }
        while (v33 < *v28);
      }
    }
    else if (v7)
    {
      goto LABEL_45;
    }
    marisa::grimoire::vector::BitVector::push_back((uint64_t *)v45, 1);
LABEL_47:
    size_t v22 = *((void *)&v44[1] + 1);
    if (HIDWORD(*((void *)&v44[1] + 1)))
    {
      uint64_t v41 = __cxa_allocate_exception(0x20uLL);
      *uint64_t v41 = &unk_1F2A081F8;
      v41[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc";
      v41[2] = 0x7000000C0;
      v41[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/tail.cc"
               ":192: MARISA_SIZE_ERROR: buf_.size() > MARISA_UINT32_MAX";
    }
LABEL_48:
    BOOL v23 = (void *)v26;
  }
  while (v21);
  if (BYTE8(v44[2]))
  {
    std::basic_string<char16_t> v34 = __cxa_allocate_exception(0x20uLL);
    *std::basic_string<char16_t> v34 = &unk_1F2A081F8;
    v34[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    v34[2] = 0x100000064;
    v34[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:100: MARISA_STATE_ERROR: fixed_";
  }
LABEL_52:
  if (v22 != *(void *)&v44[2]) {
    marisa::grimoire::vector::Vector<char>::realloc((uint64_t *)v44, v22);
  }
  uint64_t v35 = *a3;
  *(_OWORD *)a3 = v54[0];
  a3[2] = *(void *)&v54[1];
  *(_OWORD *)(a3 + 3) = *(_OWORD *)((char *)&v54[1] + 8);
  *((unsigned char *)a3 + 40) = BYTE8(v54[2]);
  if (v35) {
    MEMORY[0x1D942B890](v35, 0x1000C8077774924);
  }
  long long v36 = *a1;
  *a1 = v44[0];
  v44[0] = v36;
  uint64_t v37 = *((void *)a1 + 2);
  *((void *)a1 + 2) = *(void *)&v44[1];
  *(void *)&v44[1] = v37;
  long long v38 = *(long long *)((char *)a1 + 24);
  *(long long *)((char *)a1 + 24) = *(_OWORD *)((char *)&v44[1] + 8);
  *(_OWORD *)((char *)&v44[1] + 8) = v38;
  LOBYTE(v37) = *((unsigned char *)a1 + 40);
  *((unsigned char *)a1 + 40) = BYTE8(v44[2]);
  BYTE8(v44[2]) = v37;
  marisa::grimoire::vector::BitVector::swap((marisa::grimoire::vector::BitVector *)(a1 + 3), (marisa::grimoire::vector::BitVector *)v45);
  if ((void)v50) {
    MEMORY[0x1D942B890](v50, 0x1000C8077774924);
  }
  if ((void)v48) {
    MEMORY[0x1D942B890](v48, 0x1000C8077774924);
  }
  if ((void)v46) {
    MEMORY[0x1D942B890](v46, 0x1000C8077774924);
  }
  if (*(void *)&v45[0]) {
    MEMORY[0x1D942B890](*(void *)&v45[0], 0x1000C8077774924);
  }
  uint64_t result = *(void *)&v44[0];
  if (*(void *)&v44[0])
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

void sub_1D2C79E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *(void *)(v9 - 144);
  if (v11) {
    MEMORY[0x1D942B890](v11, 0x1000C8077774924);
  }
  marisa::grimoire::trie::Tail::~Tail((marisa::grimoire::trie::Tail *)&a9);
  _Unwind_Resume(a1);
}

uint64_t *marisa::grimoire::vector::BitVector::swap(marisa::grimoire::vector::BitVector *this, marisa::grimoire::vector::BitVector *a2)
{
  marisa::grimoire::vector::Vector<unsigned long long>::swap((uint64_t *)this, (uint64_t *)a2);
  uint64_t v4 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v4;
  uint64_t v5 = *((void *)this + 7);
  uint64_t v6 = *((void *)this + 8);
  uint64_t v7 = *((void *)a2 + 8);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)this + 8) = v7;
  *((void *)a2 + 7) = v5;
  *((void *)a2 + 8) = v6;
  uint64_t v8 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v8;
  uint64_t v9 = *((void *)this + 10);
  uint64_t v10 = *((void *)this + 11);
  uint64_t v11 = *((void *)a2 + 11);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)this + 11) = v11;
  *((void *)a2 + 10) = v9;
  *((void *)a2 + 11) = v10;
  uint64_t v12 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v12;
  LOBYTE(v12) = *((unsigned char *)this + 104);
  *((unsigned char *)this + 104) = *((unsigned char *)a2 + 104);
  *((unsigned char *)a2 + 104) = v12;
  marisa::grimoire::vector::Vector<unsigned long long>::swap((uint64_t *)this + 14, (uint64_t *)a2 + 14);

  return marisa::grimoire::vector::Vector<unsigned long long>::swap((uint64_t *)this + 20, (uint64_t *)a2 + 20);
}

void marisa::grimoire::trie::Tail::~Tail(marisa::grimoire::trie::Tail *this)
{
  uint64_t v2 = *((void *)this + 26);
  if (v2) {
    MEMORY[0x1D942B890](v2, 0x1000C8077774924);
  }
  uint64_t v3 = *((void *)this + 20);
  if (v3) {
    MEMORY[0x1D942B890](v3, 0x1000C8077774924);
  }
  uint64_t v4 = *((void *)this + 14);
  if (v4) {
    MEMORY[0x1D942B890](v4, 0x1000C8077774924);
  }
  uint64_t v5 = *((void *)this + 6);
  if (v5) {
    MEMORY[0x1D942B890](v5, 0x1000C8077774924);
  }
  if (*(void *)this) {
    MEMORY[0x1D942B890](*(void *)this, 0x1000C8077774924);
  }
}

uint64_t *marisa::grimoire::vector::Vector<unsigned long long>::swap(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  void *result = *a2;
  *a2 = v2;
  uint64_t v3 = result[1];
  result[1] = a2[1];
  a2[1] = v3;
  uint64_t v4 = result[2];
  uint64_t v5 = result[3];
  uint64_t v6 = a2[3];
  result[2] = a2[2];
  result[3] = v6;
  a2[2] = v4;
  a2[3] = v5;
  uint64_t v7 = result[4];
  result[4] = a2[4];
  a2[4] = v7;
  LOBYTE(v7) = *((unsigned char *)result + 40);
  *((unsigned char *)result + 40) = *((unsigned char *)a2 + 40);
  *((unsigned char *)a2 + 40) = v7;
  return result;
}

uint64_t marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(unint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2;
  unint64_t v5 = a1;
  uint64_t v6 = a2 - a1;
  if ((uint64_t)(a2 - a1) < 161)
  {
    uint64_t v7 = 0;
    goto LABEL_84;
  }
  uint64_t v7 = 0;
  do
  {
    if (a3 >= *(unsigned int *)(v5 + 8)) {
      int v8 = -1;
    }
    else {
      int v8 = *(unsigned __int8 *)(*(void *)v5 - a3);
    }
    unint64_t v9 = v5 + 16 * ((unint64_t)v6 >> 5);
    if (a3 >= *(unsigned int *)(v9 + 8)) {
      int v10 = -1;
    }
    else {
      int v10 = *(unsigned __int8 *)(*(void *)v9 - a3);
    }
    if (a3 >= *(unsigned int *)(v4 - 8)) {
      int v11 = -1;
    }
    else {
      int v11 = *(unsigned __int8 *)(*(void *)(v4 - 16) - a3);
    }
    if (v8 <= v10) {
      int v12 = v10;
    }
    else {
      int v12 = v8;
    }
    if (v8 < v10) {
      int v10 = v8;
    }
    if (v10 <= v11) {
      int v10 = v11;
    }
    if (v12 >= v11) {
      int v13 = v10;
    }
    else {
      int v13 = v12;
    }
    unint64_t v14 = v5;
    unint64_t v15 = v4;
    unint64_t v16 = v5;
    unint64_t v17 = v4;
    while (v14 < v15)
    {
      unint64_t v18 = *(unsigned int *)(v14 + 8);
      int v19 = a3 >= v18 ? -1 : *(unsigned __int8 *)(*(void *)v14 - a3);
      if (v19 > v13) {
        break;
      }
      if (v19 == v13)
      {
        uint64_t v20 = *(void *)v14;
        int v21 = *(_DWORD *)(v14 + 12);
        *(void *)unint64_t v14 = *(void *)v16;
        *(void *)(v14 + 8) = *(void *)(v16 + 8);
        *(void *)unint64_t v16 = v20;
        *(_DWORD *)(v16 + 8) = v18;
        *(_DWORD *)(v16 + 12) = v21;
        v16 += 16;
      }
LABEL_30:
      v14 += 16;
    }
    if (v14 < v15)
    {
      unint64_t v22 = v15 - 16;
      do
      {
        unint64_t v15 = v22;
        unint64_t v23 = *(unsigned int *)(v22 + 8);
        if (a3 >= v23) {
          int v24 = -1;
        }
        else {
          int v24 = *(unsigned __int8 *)(*(void *)v15 - a3);
        }
        if (v24 < v13) {
          break;
        }
        if (v24 == v13)
        {
          uint64_t v25 = *(void *)(v17 - 16);
          v17 -= 16;
          uint64_t v26 = *(void *)v15;
          int v27 = *(_DWORD *)(v15 + 12);
          *(void *)unint64_t v15 = v25;
          *(void *)(v15 + 8) = *(void *)(v17 + 8);
          *(void *)unint64_t v17 = v26;
          *(_DWORD *)(v17 + 8) = v23;
          *(_DWORD *)(v17 + 12) = v27;
        }
        unint64_t v22 = v15 - 16;
      }
      while (v14 < v15);
    }
    if (v14 < v15)
    {
      uint64_t v28 = *(void *)v14;
      *(void *)unint64_t v14 = *(void *)v15;
      uint64_t v29 = *(void *)(v15 + 8);
      *(void *)unint64_t v15 = v28;
      uint64_t v30 = *(void *)(v14 + 8);
      *(void *)(v14 + 8) = v29;
      *(void *)(v15 + 8) = v30;
      goto LABEL_30;
    }
    while (v16 > v5)
    {
      uint64_t v32 = *(void *)(v16 - 16);
      v16 -= 16;
      uint64_t v31 = v32;
      uint64_t v33 = *(void *)(v14 - 16);
      v14 -= 16;
      *(void *)unint64_t v16 = v33;
      uint64_t v34 = *(void *)(v14 + 8);
      *(void *)unint64_t v14 = v31;
      uint64_t v35 = *(void *)(v16 + 8);
      *(void *)(v16 + 8) = v34;
      *(void *)(v14 + 8) = v35;
    }
    while (v17 < v4)
    {
      uint64_t v36 = *(void *)v17;
      *(void *)unint64_t v17 = *(void *)v15;
      uint64_t v37 = *(void *)(v15 + 8);
      *(void *)unint64_t v15 = v36;
      uint64_t v38 = *(void *)(v17 + 8);
      *(void *)(v17 + 8) = v37;
      *(void *)(v15 + 8) = v38;
      v15 += 16;
      v17 += 16;
    }
    uint64_t v39 = v14 - v5;
    uint64_t v40 = (uint64_t)(v14 - v5) >> 4;
    uint64_t v41 = v15 - v14;
    if (v40 <= (uint64_t)(v15 - v14) >> 4)
    {
      uint64_t v42 = v4 - v15;
      if (v41 >> 4 >= (uint64_t)(v4 - v15) >> 4)
      {
        if (v39 == 16)
        {
          ++v7;
        }
        else if (v39 >= 17)
        {
          v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v5, v14, a3);
        }
        if (v42 == 16)
        {
          ++v7;
        }
        else if (v42 >= 17)
        {
          v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v15, v4, a3);
        }
        if (v41 == 16)
        {
          ++v7;
        }
        else if (v41 >= 17)
        {
          if (v13 == -1)
          {
            ++v7;
            unint64_t v5 = v15;
            goto LABEL_79;
          }
          ++a3;
        }
        unint64_t v5 = v14;
LABEL_79:
        unint64_t v4 = v15;
        goto LABEL_80;
      }
    }
    if (v41 == 16) {
      goto LABEL_50;
    }
    if (v41 >= 17)
    {
      if (v13 == -1) {
LABEL_50:
      }
        ++v7;
      else {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v14, v15, a3 + 1);
      }
    }
    uint64_t v43 = v4 - v15;
    if (v40 >= (uint64_t)(v4 - v15) >> 4)
    {
      if (v43 == 16)
      {
        ++v7;
      }
      else if (v43 >= 17)
      {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v15, v4, a3);
      }
      unint64_t v4 = v14;
    }
    else
    {
      if (v39 == 16)
      {
        ++v7;
      }
      else if (v39 >= 17)
      {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Entry *>(v5, v14, a3);
      }
      unint64_t v5 = v15;
    }
LABEL_80:
    uint64_t v6 = v4 - v5;
  }
  while ((uint64_t)(v4 - v5) > 160);
LABEL_84:
  if (v6 >= 17)
  {
    unint64_t v44 = v5 + 16;
    if (v5 + 16 >= v4)
    {
      uint64_t v45 = 1;
    }
    else
    {
      uint64_t v45 = 1;
      do
      {
        if (v44 > v5)
        {
          unint64_t v46 = v44;
          while (1)
          {
            unint64_t v47 = *(unsigned int *)(v46 - 8);
            uint64_t v48 = *(unsigned int *)(v46 + 8);
            if (a3 >= v47)
            {
LABEL_94:
              if (v47 == v48) {
                break;
              }
              if (v47 < v48)
              {
LABEL_99:
                int v52 = -1;
                goto LABEL_101;
              }
              uint64_t v49 = *(void *)(v46 - 16);
              uint64_t v50 = *(void *)v46;
            }
            else
            {
              uint64_t v49 = *(void *)(v46 - 16);
              uint64_t v50 = *(void *)v46;
              uint64_t v51 = -(uint64_t)a3;
              while (-v48 != v51)
              {
                int v52 = *(unsigned __int8 *)(v49 + v51) - *(unsigned __int8 *)(v50 + v51);
                if (v52)
                {
                  if (v52 < 1) {
                    goto LABEL_101;
                  }
                  break;
                }
                if (-(uint64_t)v47 == --v51) {
                  goto LABEL_94;
                }
              }
            }
            *(void *)(v46 - 16) = v50;
            uint64_t v53 = *(void *)(v46 + 8);
            *(void *)unint64_t v46 = v49;
            uint64_t v54 = *(void *)(v46 - 8);
            *(void *)(v46 - 8) = v53;
            *(void *)(v46 + 8) = v54;
            v46 -= 16;
            if (v46 <= v5) {
              goto LABEL_99;
            }
          }
        }
        int v52 = 0;
LABEL_101:
        if (v52) {
          ++v45;
        }
        v44 += 16;
      }
      while (v44 < v4);
    }
    v7 += v45;
  }
  return v7;
}

uint64_t *marisa::grimoire::vector::Vector<char>::push_back(uint64_t *result, unsigned char *a2)
{
  uint64_t v3 = result;
  uint64_t v4 = result[3];
  uint64_t v5 = result[4];
  size_t v6 = v4 + 1;
  if (v5 < (unint64_t)(v4 + 1))
  {
    uint64_t v7 = 2 * v5;
    if (v5 < 0) {
      uint64_t v7 = -1;
    }
    if (v5 <= v6 >> 1) {
      size_t v8 = v6;
    }
    else {
      size_t v8 = v7;
    }
    uint64_t result = (uint64_t *)marisa::grimoire::vector::Vector<char>::realloc(result, v8);
    uint64_t v4 = v3[3];
  }
  *(unsigned char *)(v3[1] + v4) = *a2;
  ++v3[3];
  return result;
}

uint64_t *marisa::grimoire::vector::BitVector::push_back(uint64_t *this, int a2)
{
  unint64_t v2 = this[6];
  if (v2 == 0xFFFFFFFF)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h";
    exception[2] = 0x700000034;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h:52: MARISA_SIZE_ERROR: size_ == MARISA_UINT32_MAX";
  }
  uint64_t v4 = this;
  uint64_t v5 = this[3];
  if (v2 == v5 << 6)
  {
    unint64_t v6 = v5 + 1;
    unint64_t v7 = this[4];
    unint64_t v8 = this[3];
    if (v7 < v5 + 1)
    {
      uint64_t v9 = 2 * v7;
      if (v7 >> 60) {
        uint64_t v9 = 0x1FFFFFFFFFFFFFFFLL;
      }
      if (v7 <= v6 >> 1) {
        uint64_t v10 = v5 + 1;
      }
      else {
        uint64_t v10 = v9;
      }
      this = marisa::grimoire::vector::Vector<unsigned long long>::realloc(this, v10);
      unint64_t v8 = v4[3];
    }
    if (v8 < v6)
    {
      uint64_t v11 = v5 - v8 + 1;
      int v12 = (void *)(v4[1] + 8 * v8);
      do
      {
        *v12++ = 0;
        --v11;
      }
      while (v11);
    }
    v4[3] = v6;
    unint64_t v2 = v4[6];
  }
  if (a2)
  {
    *(void *)(v4[1] + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v2;
    ++v4[7];
  }
  v4[6] = v2 + 1;
  return this;
}

void *marisa::grimoire::vector::Vector<unsigned long long>::realloc(uint64_t *a1, uint64_t a2)
{
  uint64_t result = operator new[](8 * a2, MEMORY[0x1E4FBA2D0]);
  uint64_t v5 = a1[3];
  if (v5)
  {
    unint64_t v6 = (uint64_t *)a1[1];
    unint64_t v7 = result;
    do
    {
      uint64_t v8 = *v6++;
      *v7++ = v8;
      --v5;
    }
    while (v5);
  }
  uint64_t v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = a2;
  if (v9)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

unsigned char *marisa::grimoire::vector::Vector<char>::realloc(uint64_t *a1, size_t __sz)
{
  uint64_t result = operator new[](__sz, MEMORY[0x1E4FBA2D0]);
  uint64_t v5 = a1[3];
  if (v5)
  {
    unint64_t v6 = (char *)a1[1];
    unint64_t v7 = result;
    do
    {
      char v8 = *v6++;
      *v7++ = v8;
      --v5;
    }
    while (v5);
  }
  uint64_t v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = __sz;
  if (v9)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

_DWORD *marisa::grimoire::vector::Vector<unsigned int>::realloc(uint64_t *a1, uint64_t a2)
{
  uint64_t result = operator new[](4 * a2, MEMORY[0x1E4FBA2D0]);
  uint64_t v5 = a1[3];
  if (v5)
  {
    unint64_t v6 = (int *)a1[1];
    unint64_t v7 = result;
    do
    {
      int v8 = *v6++;
      *v7++ = v8;
      --v5;
    }
    while (v5);
  }
  uint64_t v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = a2;
  if (v9)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

uint64_t marisa::grimoire::vector::BitVector::map(marisa::grimoire::vector::BitVector *this, marisa::grimoire::io::Mapper *a2)
{
  memset(v13, 0, 41);
  memset(v17, 0, 41);
  memset(v18, 0, 41);
  long long v14 = 0u;
  long long v15 = 0u;
  memset(v16, 0, 25);
  marisa::grimoire::vector::Vector<unsigned long long>::map((uint64_t)v13, a2);
  unsigned int v4 = *(_DWORD *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  *(void *)&long long v14 = v4;
  uint64_t v5 = (unsigned int *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  if (v4 < *v5)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h";
    exception[2] = 0xA00000087;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/bit-vector.h:135: MARISA_FORMAT_ERROR: temp_num_1s > size_";
  }
  *((void *)&v14 + 1) = *v5;
  unint64_t v6 = (void *)marisa::grimoire::io::Mapper::map_data(a2, 8uLL);
  unint64_t v7 = *v6 / 0xCuLL;
  if (*v6 % 0xCuLL)
  {
    int v12 = __cxa_allocate_exception(0x20uLL);
    void *v12 = &unk_1F2A081F8;
    v12[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    void v12[2] = 0xA000000CALL;
    _OWORD v12[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:202: MARISA_FORMAT_ERROR: (total_size % sizeof(T)) != 0";
  }
  uint64_t v8 = marisa::grimoire::io::Mapper::map_data(a2, 12 * v7);
  marisa::grimoire::io::Mapper::seek(a2, (-12 * (_BYTE)v7) & 4);
  uint64_t v9 = v15;
  long long v15 = 0uLL;
  *(void *)&v16[0] = v8;
  *(_OWORD *)((char *)v16 + 8) = v7;
  BYTE8(v16[1]) = 1;
  if (v9) {
    MEMORY[0x1D942B890](v9, 0x1000C8077774924);
  }
  marisa::grimoire::vector::Vector<unsigned int>::map((uint64_t)v17, a2);
  marisa::grimoire::vector::Vector<unsigned int>::map((uint64_t)v18, a2);
  marisa::grimoire::vector::BitVector::swap(this, (marisa::grimoire::vector::BitVector *)v13);
  if (*(void *)&v18[0]) {
    MEMORY[0x1D942B890](*(void *)&v18[0], 0x1000C8077774924);
  }
  if (*(void *)&v17[0]) {
    MEMORY[0x1D942B890](*(void *)&v17[0], 0x1000C8077774924);
  }
  if ((void)v15) {
    MEMORY[0x1D942B890](v15, 0x1000C8077774924);
  }
  uint64_t result = *(void *)&v13[0];
  if (*(void *)&v13[0])
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

void sub_1D2C7AAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void marisa::grimoire::vector::BitVector::~BitVector(marisa::grimoire::vector::BitVector *this)
{
  uint64_t v2 = *((void *)this + 20);
  if (v2) {
    MEMORY[0x1D942B890](v2, 0x1000C8077774924);
  }
  uint64_t v3 = *((void *)this + 14);
  if (v3) {
    MEMORY[0x1D942B890](v3, 0x1000C8077774924);
  }
  uint64_t v4 = *((void *)this + 8);
  if (v4) {
    MEMORY[0x1D942B890](v4, 0x1000C8077774924);
  }
  if (*(void *)this) {
    MEMORY[0x1D942B890](*(void *)this, 0x1000C8077774924);
  }
}

uint64_t marisa::grimoire::vector::Vector<unsigned long long>::map(uint64_t a1, marisa::grimoire::io::Mapper *this)
{
  unint64_t v4 = *(void *)marisa::grimoire::io::Mapper::map_data(this, 8uLL);
  if ((v4 & 7) != 0)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    exception[2] = 0xA000000CALL;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:202: MARISA_FORMAT_ERROR: (total_size "
                   "% sizeof(T)) != 0";
  }
  uint64_t v5 = marisa::grimoire::io::Mapper::map_data(this, v4 & 0xFFFFFFFFFFFFFFF8);
  marisa::grimoire::io::Mapper::seek(this, -(int)v4 & 7);
  uint64_t result = *(void *)a1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = v4 >> 3;
  *(unsigned char *)(a1 + 40) = 1;
  if (result)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

uint64_t marisa::grimoire::vector::Vector<unsigned int>::map(uint64_t a1, marisa::grimoire::io::Mapper *this)
{
  unint64_t v4 = *(void *)marisa::grimoire::io::Mapper::map_data(this, 8uLL);
  if ((v4 & 3) != 0)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    exception[2] = 0xA000000CALL;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:202: MARISA_FORMAT_ERROR: (total_size "
                   "% sizeof(T)) != 0";
  }
  uint64_t v5 = marisa::grimoire::io::Mapper::map_data(this, v4 & 0xFFFFFFFFFFFFFFFCLL);
  marisa::grimoire::io::Mapper::seek(this, -(int)v4 & 7);
  uint64_t result = *(void *)a1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = v4 >> 2;
  *(unsigned char *)(a1 + 40) = 1;
  if (result)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

uint64_t *marisa::grimoire::vector::Vector<unsigned int>::resize(uint64_t *result, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v3 = result;
  unint64_t v4 = result[4];
  if (v4 < a2)
  {
    uint64_t v5 = 2 * v4;
    if (v4 >> 61) {
      uint64_t v5 = 0x3FFFFFFFFFFFFFFFLL;
    }
    if (v4 > a2 >> 1) {
      a2 = v5;
    }
    uint64_t result = (uint64_t *)marisa::grimoire::vector::Vector<unsigned int>::realloc(result, a2);
  }
  _OWORD v3[3] = v2;
  return result;
}

uint64_t marisa::grimoire::vector::BitVector::write_(marisa::grimoire::vector::BitVector *this, marisa::grimoire::io::Writer *a2)
{
  marisa::grimoire::vector::Vector<unsigned long long>::write_((uint64_t)this, a2);
  LODWORD(__buf) = *((void *)this + 6);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
  LODWORD(__buf) = *((void *)this + 7);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
  uint64_t __buf = 12 * *((void *)this + 11);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 8uLL);
  unint64_t v4 = (char *)*((void *)this + 10);
  unint64_t v5 = *((void *)this + 11);
  if (!v4 && v5)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x20000001ELL;
    uint64_t v8 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:30: MARISA_NULL_ERROR: (objs == NULL) && (num_objs != 0)";
    goto LABEL_7;
  }
  if (v5 >= 0x1555555555555556)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x700000020;
    uint64_t v8 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:32: MARISA_SIZE_ERROR: num_objs > (MARISA_SIZE_MAX / sizeof(T))";
LABEL_7:
    exception[3] = v8;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, v4, 12 * v5);
  marisa::grimoire::io::Writer::seek((uint64_t)a2, 4 * (*((_DWORD *)this + 22) & 1));
  marisa::grimoire::vector::Vector<unsigned int>::write_((uint64_t)this + 112, a2);
  return marisa::grimoire::vector::Vector<unsigned int>::write_((uint64_t)this + 160, a2);
}

uint64_t marisa::grimoire::vector::Vector<unsigned long long>::write_(uint64_t a1, marisa::grimoire::io::Writer *this)
{
  uint64_t __buf = 8 * *(void *)(a1 + 24);
  marisa::grimoire::io::Writer::write_data((uint64_t)this, (char *)&__buf, 8uLL);
  unint64_t v4 = *(char **)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  if (v4) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = v5 == 0;
  }
  if (!v6)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x20000001ELL;
    uint64_t v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:30: MARISA_NULL_ERROR: (objs == NULL) && (num_objs != 0)";
    goto LABEL_9;
  }
  if (v5 >> 61)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x700000020;
    uint64_t v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:32: MARISA_SIZE_ERROR: num_objs > (MARISA_SIZE_MAX / sizeof(T))";
LABEL_9:
    exception[3] = v9;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)this, v4, 8 * v5);
  return marisa::grimoire::io::Writer::seek((uint64_t)this, 0);
}

uint64_t marisa::grimoire::vector::Vector<unsigned int>::write_(uint64_t a1, marisa::grimoire::io::Writer *this)
{
  uint64_t __buf = 4 * *(void *)(a1 + 24);
  marisa::grimoire::io::Writer::write_data((uint64_t)this, (char *)&__buf, 8uLL);
  unint64_t v4 = *(char **)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  if (v4) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = v5 == 0;
  }
  if (!v6)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x20000001ELL;
    uint64_t v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:30: MARISA_NULL_ERROR: (objs == NULL) && (num_objs != 0)";
    goto LABEL_9;
  }
  if (v5 >> 62)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x700000020;
    uint64_t v9 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:32: MARISA_SIZE_ERROR: num_objs > (MARISA_SIZE_MAX / sizeof(T))";
LABEL_9:
    exception[3] = v9;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)this, v4, 4 * v5);
  return marisa::grimoire::io::Writer::seek((uint64_t)this, 4 * (*(_DWORD *)(a1 + 24) & 1));
}

uint64_t *marisa::grimoire::trie::Tail::restore(uint64_t *this, marisa::Agent *a2, unint64_t a3)
{
  unint64_t v3 = a3;
  unint64_t v5 = this;
  if (this[12])
  {
    do
    {
      this = marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)a2, (unsigned char *)(v5[2] + v3));
      uint64_t v6 = *(void *)(v5[8] + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3;
      ++v3;
    }
    while ((v6 & 1) == 0);
  }
  else
  {
    unint64_t v7 = (unsigned char *)(this[2] + a3);
    if (*v7)
    {
      do
        this = marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)a2, v7);
      while (*++v7);
    }
  }
  return this;
}

uint64_t marisa::grimoire::trie::Tail::match(marisa::grimoire::trie::Tail *this, marisa::Agent *a2, unint64_t a3)
{
  uint64_t v3 = *((void *)a2 + 5);
  uint64_t v4 = *((void *)this + 2);
  if (*((void *)this + 12))
  {
    unsigned int v5 = *(_DWORD *)(v3 + 100);
    uint64_t v6 = *(void *)a2;
    unint64_t v7 = *((void *)a2 + 1);
    do
    {
      if (*(unsigned __int8 *)(v4 + a3) != *(unsigned __int8 *)(v6 + v5)) {
        break;
      }
      *(_DWORD *)(v3 + 100) = ++v5;
      if ((*(void *)(*((void *)this + 8) + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3)) {
        return 1;
      }
      ++a3;
    }
    while (v7 > v5);
  }
  else
  {
    unint64_t v12 = v4 + a3;
    uint64_t v8 = v4 + a3 - *(unsigned int *)(v3 + 100);
    uint64_t v9 = *(void *)a2;
    unint64_t v10 = *((void *)a2 + 1);
    int v11 = *(unsigned __int8 *)v12;
    LODWORD(v12) = *(_DWORD *)(v3 + 100);
    while (v11 == *(unsigned __int8 *)(v9 + v12))
    {
      unint64_t v12 = (v12 + 1);
      *(_DWORD *)(v3 + 100) = v12;
      int v11 = *(unsigned __int8 *)(v8 + v12);
      if (!*(unsigned char *)(v8 + v12)) {
        return 1;
      }
      if (v10 <= v12) {
        return 0;
      }
    }
  }
  return 0;
}

BOOL marisa::grimoire::trie::Tail::prefix_match(marisa::grimoire::trie::Tail *this, marisa::Agent *a2, unint64_t a3)
{
  unint64_t v3 = a3;
  uint64_t v6 = *((void *)a2 + 5);
  if (*((void *)this + 12))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 100);
    while (1)
    {
      uint64_t v8 = (unsigned char *)(*((void *)this + 2) + v3);
      int v9 = *v8;
      int v10 = *(unsigned __int8 *)(*(void *)a2 + v7);
      BOOL result = v9 == v10;
      if (v9 != v10) {
        break;
      }
      marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, v8);
      unsigned int v7 = *(_DWORD *)(v6 + 100) + 1;
      *(_DWORD *)(v6 + 100) = v7;
      if ((*(void *)(*((void *)this + 8) + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3)) {
        return 1;
      }
      ++v3;
      if (*((void *)a2 + 1) <= (unint64_t)v7)
      {
        do
        {
          marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, (unsigned char *)(*((void *)this + 2) + v3));
          uint64_t v12 = *(void *)(*((void *)this + 8) + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3;
          ++v3;
        }
        while ((v12 & 1) == 0);
        return 1;
      }
    }
  }
  else
  {
    unint64_t v15 = *((void *)this + 2) + a3;
    int v13 = (unsigned __int8 *)(v15 - *(unsigned int *)(v6 + 100));
    int v14 = *(unsigned __int8 *)v15;
    LODWORD(v15) = *(_DWORD *)(v6 + 100);
    while (1)
    {
      int v16 = *(unsigned __int8 *)(*(void *)a2 + v15);
      BOOL result = v14 == v16;
      if (v14 != v16) {
        break;
      }
      marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, &v13[v15]);
      unint64_t v15 = (*(_DWORD *)(v6 + 100) + 1);
      *(_DWORD *)(v6 + 100) = v15;
      int v14 = v13[v15];
      if (!v13[v15]) {
        return 1;
      }
      if (*((void *)a2 + 1) <= v15)
      {
        unint64_t v17 = &v13[v15];
        do
          marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, v17);
        while (*++v17);
        return 1;
      }
    }
  }
  return result;
}

void morphun::dialog::language::LtCommonConceptFactory::~LtCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3388);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3388);
}

void morphun::grammar::synthesis::CaGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::CaGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2C7B7F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_TW::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E695DE20;
  uint64_t v4 = L"zh_Hant";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

std::basic_string<char16_t> *morphun::util::StringUtils::appendCodePoint(std::basic_string<char16_t> *a1, unsigned int a2)
{
  if (HIWORD(a2))
  {
    std::basic_string<char16_t>::push_back(a1, (a2 >> 10) - 10304);
    npc<std::basic_string<char16_t>>((uint64_t)a1);
    LOWORD(a2) = a2 & 0x3FF | 0xDC00;
  }
  std::basic_string<char16_t>::push_back(a1, a2);
  return a1;
}

void sub_1D2C7BA48(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::util::StringUtils::replace(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::basic_string<char16_t>::size_type v4 = *(unsigned __int8 *)(a2 + 23);
  std::basic_string<char16_t>::size_type v5 = *(void *)(a2 + 8);
  if ((v4 & 0x80u) != 0)
  {
    a2 = *(void *)a2;
    std::basic_string<char16_t>::size_type v4 = v5;
  }
  int v6 = *(char *)(a3 + 23);
  BOOL v7 = v6 < 0;
  if (v6 >= 0) {
    uint64_t v8 = (unsigned __int16 *)a3;
  }
  else {
    uint64_t v8 = *(unsigned __int16 **)a3;
  }
  if (v7) {
    unint64_t v9 = *(void *)(a3 + 8);
  }
  else {
    unint64_t v9 = *(unsigned __int8 *)(a3 + 23);
  }
  int v10 = *(char *)(a4 + 23);
  if (v10 >= 0) {
    int v11 = (__int16 *)a4;
  }
  else {
    int v11 = *(__int16 **)a4;
  }
  if (v10 >= 0) {
    unint64_t v12 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    unint64_t v12 = *(void *)(a4 + 8);
  }
  return morphun::util::StringViewUtils::replace(a1, a2, v4, v8, v9, v11, v12);
}

uint64_t morphun::util::StringUtils::trim@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *(void *)(a1 + 8);
  if (*(char *)(a1 + 23) >= 0)
  {
    unint64_t v4 = *(unsigned __int8 *)(a1 + 23);
  }
  else
  {
    a1 = *(void *)a1;
    unint64_t v4 = v3;
  }
  uint64_t result = morphun::util::StringViewUtils::trim(a1, v4);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  BOOL v7 = (const void *)result;
  unint64_t v8 = v6;
  if (v6 >= 0xB)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v6 | 3) != 0xB) {
      uint64_t v9 = v6 | 3;
    }
    int v10 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v9 + 1);
    a2[1] = v8;
    a2[2] = v11 | 0x8000000000000000;
    *a2 = v10;
    a2 = v10;
  }
  else
  {
    *((unsigned char *)a2 + 23) = v6;
    if (!v6) {
      goto LABEL_12;
    }
  }
  uint64_t result = (uint64_t)memmove(a2, v7, 2 * v8);
LABEL_12:
  *((_WORD *)a2 + v8) = 0;
  return result;
}

uint64_t morphun::util::StringUtils::isAllLowerCase(uint64_t a1)
{
  if (*(char *)(a1 + 23) >= 0) {
    return morphun::util::StringViewUtils::isAllLowerCase(a1, *(unsigned __int8 *)(a1 + 23));
  }
  else {
    return morphun::util::StringViewUtils::isAllLowerCase(*(void *)a1, *(void *)(a1 + 8));
  }
}

uint64_t morphun::util::StringUtils::isAllUpperCase(uint64_t a1)
{
  if (*(char *)(a1 + 23) >= 0) {
    return morphun::util::StringViewUtils::isAllUpperCase(a1, *(unsigned __int8 *)(a1 + 23));
  }
  else {
    return morphun::util::StringViewUtils::isAllUpperCase(*(void *)a1, *(void *)(a1 + 8));
  }
}

std::basic_string<char16_t> *morphun::util::StringUtils::capitalizeFirst@<X0>(UChar *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *((void *)a1 + 1);
  if (*((char *)a1 + 23) >= 0)
  {
    unint64_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else
  {
    a1 = *(UChar **)a1;
    unint64_t v5 = v4;
  }
  return morphun::util::StringViewUtils::capitalizeFirst(a1, v5, a2, a3);
}

uint64_t morphun::util::StringUtils::uppercase(uint64_t a1, const UChar *a2, uint64_t a3)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    int32_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const UChar **)a2;
    int32_t v5 = v4;
  }
  return morphun::util::StringViewUtils::uppercase(a1, a2, v5, a3);
}

uint64_t morphun::util::StringUtils::lowercase(uint64_t a1, const UChar *a2, uint64_t a3)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    int32_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const UChar **)a2;
    int32_t v5 = v4;
  }
  return morphun::util::StringViewUtils::lowercase(a1, a2, v5, a3);
}

uint64_t morphun::util::StringUtils::reverse(uint64_t a1)
{
  uint64_t result = npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(result + 23) < 0) {
    uint64_t v2 = *(void *)(result + 8);
  }
  else {
    LODWORD(v2) = *(unsigned __int8 *)(result + 23);
  }
  unsigned int v3 = v2 - 2;
  if ((int)v2 - 2 >= 0)
  {
    char v4 = 0;
    int v5 = v2 - 1;
    uint64_t v6 = v3 >> 1;
    uint64_t v7 = 2 * v5 - 2 * v6;
    do
    {
      int v8 = *(char *)(result + 23);
      uint64_t v9 = result;
      if (v8 < 0) {
        uint64_t v9 = *(void *)result;
      }
      __int16 v10 = *(_WORD *)(v9 + 2 * v6);
      __int16 v11 = *(_WORD *)(v9 + v7);
      BOOL v13 = (v10 & 0xF800) == 0xD800 || (v11 & 0xF800) == 55296;
      char v4 = (v4 & 1) != 0 || v13;
      uint64_t v14 = result;
      if (v8 < 0) {
        uint64_t v14 = *(void *)result;
      }
      *(_WORD *)(v14 + 2 * v6) = v11;
      uint64_t v15 = result;
      if (*(char *)(result + 23) < 0) {
        uint64_t v15 = *(void *)result;
      }
      *(_WORD *)(v15 + v7) = v10;
      v7 += 2;
    }
    while (v6-- > 0);
    char v17 = v4 ^ 1;
    if (v5 < 1) {
      char v17 = 1;
    }
    if ((v17 & 1) == 0)
    {
      for (int i = 0; i < v5; ++i)
      {
        uint64_t v19 = i;
        if (*(char *)(result + 23) < 0)
        {
          __int16 v20 = *(_WORD *)(*(void *)result + 2 * i);
          if ((v20 & 0xFC00) == 0xDC00)
          {
            uint64_t v21 = i + 1;
            __int16 v22 = *(_WORD *)(*(void *)result + 2 * v21);
            if ((v22 & 0xFC00) == 0xD800)
            {
              uint64_t v23 = *(void *)result;
              ++i;
              goto LABEL_34;
            }
          }
        }
        else
        {
          __int16 v20 = *(_WORD *)(result + 2 * i);
          if ((v20 & 0xFC00) == 0xDC00)
          {
            uint64_t v21 = i + 1;
            __int16 v22 = *(_WORD *)(result + 2 * v21);
            if ((v22 & 0xFC00) == 0xD800)
            {
              ++i;
              uint64_t v23 = result;
LABEL_34:
              *(_WORD *)(v23 + 2 * v19) = v22;
              uint64_t v24 = result;
              if (*(char *)(result + 23) < 0) {
                uint64_t v24 = *(void *)result;
              }
              *(_WORD *)(v24 + 2 * v21) = v20;
            }
          }
        }
      }
    }
  }
  return result;
}

std::string *morphun::util::StringUtils::convert(std::string *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    int v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    int v3 = v2;
  }
  return morphun::util::StringViewUtils::convert(a1, a2, v3);
}

uint64_t morphun::util::StringUtils::convert(uint64_t a1, const char *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    int32_t v3 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const char **)a2;
    int32_t v3 = v2;
  }
  return morphun::util::StringViewUtils::convert(a1, a2, v3);
}

void morphun::util::StringUtils::to_string(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(char *)(a1 + 23) >= 0)
  {
    int v3 = *(unsigned __int8 *)(a1 + 23);
  }
  else
  {
    a1 = *(void *)a1;
    int v3 = v2;
  }
  morphun::util::StringViewUtils::to_string(a1, v3, a2);
}

void morphun::util::StringUtils::to_u16string(const char *a1@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v2 = *((void *)a1 + 1);
  if (a1[23] >= 0)
  {
    int32_t v3 = *((unsigned __int8 *)a1 + 23);
  }
  else
  {
    a1 = *(const char **)a1;
    int32_t v3 = v2;
  }
  morphun::util::StringViewUtils::to_u16string(a1, v3, a2);
}

void morphun::util::StringUtils::to_u16string(morphun::util::StringUtils *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

{
  std::string *p_p;
  int32_t v4;
  std::string __p;
  void *v6[2];
  std::basic_string<char16_t>::size_type v7;

  v6[0] = 0;
  v6[1] = 0;
  uint64_t v7 = 0;
  std::to_string(&__p, (uint64_t)this);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v4 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    char v4 = __p.__r_.__value_.__r.__words[1];
  }
  morphun::util::StringViewUtils::convert((uint64_t)v6, (const char *)p_p, v4);
  if (SHIBYTE(v7) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, (const std::basic_string<char16_t>::value_type *)v6[0], (std::basic_string<char16_t>::size_type)v6[1]);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)v6;
    a2->__r_.__value_.__r.__words[2] = v7;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete(v6[0]);
  }
}

void sub_1D2C7BE84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::StringUtils::to_u16string(double a1@<D0>, std::basic_string<char16_t> *a2@<X8>)
{
  v7[0] = 0;
  v7[1] = 0;
  std::basic_string<char16_t>::size_type v8 = 0;
  std::to_string(&__p, a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int32_t v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    int32_t v5 = __p.__r_.__value_.__r.__words[1];
  }
  morphun::util::StringViewUtils::convert((uint64_t)v7, (const char *)p_p, v5);
  if (SHIBYTE(v8) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, (const std::basic_string<char16_t>::value_type *)v7[0], (std::basic_string<char16_t>::size_type)v7[1]);
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)v7;
    a2->__r_.__value_.__r.__words[2] = v8;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v8) < 0) {
    operator delete(v7[0]);
  }
}

void sub_1D2C7BF5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::util::StringUtils::endsWith(uint64_t *a1, unsigned __int16 *a2)
{
  int v2 = *((char *)a1 + 23);
  unint64_t v3 = a1[1];
  BOOL v4 = v2 < 0;
  if (v2 >= 0) {
    int32_t v5 = a1;
  }
  else {
    int32_t v5 = (uint64_t *)*a1;
  }
  if (!v4) {
    unint64_t v3 = *((unsigned __int8 *)a1 + 23);
  }
  unint64_t v6 = *((unsigned __int8 *)a2 + 23);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = *(unsigned __int16 **)a2;
  }
  if ((v6 & 0x80u) != 0) {
    unint64_t v6 = *((void *)a2 + 1);
  }
  if (v3 < v6) {
    return 0;
  }
  if (!v6) {
    return 1;
  }
  uint64_t v9 = -(uint64_t)v6;
  uint64_t v10 = (uint64_t)v5 + 2 * v3;
  do
  {
    int v11 = *v7++;
    BOOL result = v11 == *(unsigned __int16 *)(v10 + 2 * v9);
    BOOL v12 = v11 != *(unsigned __int16 *)(v10 + 2 * v9) || v9 == -1;
    ++v9;
  }
  while (!v12);
  return result;
}

BOOL morphun::util::StringUtils::startsWith(unsigned __int16 *a1, unsigned __int16 *a2)
{
  int v2 = *((char *)a1 + 23);
  if (v2 >= 0) {
    unint64_t v3 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    unint64_t v3 = *((void *)a1 + 1);
  }
  unint64_t v4 = *((unsigned __int8 *)a2 + 23);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    unint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 < v4) {
    return 0;
  }
  if (v5 >= 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = *(unsigned __int16 **)a2;
  }
  if (v2 >= 0) {
    std::basic_string<char16_t>::size_type v8 = a1;
  }
  else {
    std::basic_string<char16_t>::size_type v8 = *(unsigned __int16 **)a1;
  }
  if (!v4) {
    return 1;
  }
  unint64_t v9 = v4 - 1;
  do
  {
    int v11 = *v8++;
    int v10 = v11;
    int v13 = *v7++;
    int v12 = v13;
    BOOL v15 = v9-- != 0;
    BOOL result = v12 == v10;
  }
  while (v12 == v10 && v15);
  return result;
}

uint64_t morphun::util::StringUtils::codePointAt(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(char *)(a1 + 23) >= 0)
  {
    int v4 = *(unsigned __int8 *)(a1 + 23);
  }
  else
  {
    a1 = *(void *)a1;
    int v4 = v3;
  }
  return morphun::util::StringViewUtils::codePointAt(a1, v4, a2);
}

uint64_t mgcc_toSpeakableString(uint64_t a1)
{
  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
}

void sub_1D2C7C12C(_Unwind_Exception *a1, int a2)
{
  __cxa_free_exception(v3);
  if (a2 == 1)
  {
    unint64_t v6 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v6, v2, v7);
    __cxa_end_catch();
    JUMPOUT(0x1D2C7C0E8);
  }
  _Unwind_Resume(a1);
}

uint64_t mgcc_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_pl::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::exception::IllegalArgumentException::~IllegalArgumentException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::IllegalArgumentException::IllegalArgumentException(morphun::exception::IllegalArgumentException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11418;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11418;
  return result;
}

void *morphun::exception::IllegalArgumentException::IllegalArgumentException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11418;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11418;
  return result;
}

uint64_t morphun::grammar::synthesis::EnGrammarSynthesizer_CaseLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = 0;
  unint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  int32_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(const UChar **)v3;
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v7 = morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v3);
  if ((v4 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v8 = (const UChar *)v3;
  }
  else {
    std::basic_string<char16_t>::size_type v8 = v5;
  }
  if ((v4 & 0x80u) == 0) {
    int32_t v9 = v4;
  }
  else {
    int32_t v9 = v6;
  }
  int v10 = (morphun::analysis::filter::NormalizeFontVariantsFilter *)morphun::util::StringViewUtils::lowercase((uint64_t)&v37, v8, v9, v7);
  unint64_t v11 = HIBYTE(v39);
  if (v39 < 0) {
    unint64_t v11 = v38;
  }
  if (v11 >= 3)
  {
    std::string __p = 0;
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    int v12 = (void *)morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(v10);
    if (v39 >= 0) {
      int v13 = &v37;
    }
    else {
      int v13 = v37;
    }
    if (v39 >= 0) {
      std::basic_string<char16_t>::size_type v14 = HIBYTE(v39);
    }
    else {
      std::basic_string<char16_t>::size_type v14 = v38;
    }
    morphun::util::UnicodeSetUtils::replaceSetFromString((uint64_t)&__p, v12, (uint64_t)v13, v14, L"'", 1uLL);
    unint64_t v15 = HIBYTE(v36);
    int v16 = SHIBYTE(v36);
    if (v36 < 0) {
      unint64_t v15 = v35;
    }
    BOOL v17 = v15 >= 2;
    unint64_t v18 = v15 - 2;
    if (!v17) {
      goto LABEL_19;
    }
    uint64_t v20 = 0;
    p_p = (char *)__p;
    if (v36 >= 0) {
      p_p = (char *)&__p;
    }
    __int16 v22 = &p_p[2 * v18];
    do
    {
      int v23 = *(unsigned __int16 *)&v22[v20 * 2];
      int v24 = (unsigned __int16)aS_3[v20];
    }
    while (v24 == v23 && v20++ != 1);
    if (v24 == v23) {
      goto LABEL_45;
    }
    uint64_t v26 = 0;
    int v27 = (char *)__p;
    if (v36 >= 0) {
      int v27 = (char *)&__p;
    }
    uint64_t v28 = &v27[2 * v18];
    do
    {
      int v29 = *(unsigned __int16 *)&v28[v26 * 2];
      int v30 = (unsigned __int16)word_1D2EC7B6E[v26];
    }
    while (v30 == v29 && v26++ != 1);
    if (v30 == v29)
    {
LABEL_45:
      if (a1 + 16 == std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 8, (unsigned __int16 *)&__p))operator new(); {
    }
      }
    else
    {
LABEL_19:
      if (SHIBYTE(v36) < 0)
      {
        uint64_t v19 = (char *)__p;
        if (v35 != 3)
        {
LABEL_48:
          operator delete(v19);
          goto LABEL_49;
        }
      }
      else
      {
        if (SHIBYTE(v36) != 3) {
          goto LABEL_49;
        }
        uint64_t v19 = (char *)&__p;
      }
      uint64_t v32 = 0;
      while (aIts[v32] == *(_WORD *)&v19[v32 * 2])
      {
        if (++v32 == 3) {
          goto LABEL_45;
        }
      }
    }
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_49;
    }
    uint64_t v19 = (char *)__p;
    goto LABEL_48;
  }
LABEL_49:
  if (SHIBYTE(v39) < 0) {
    operator delete(v37);
  }
  return 0;
}

void sub_1D2C7C578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  MEMORY[0x1D942B8B0](v20, 0x10B3C40F7FF9C27);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_CaseLookupFunction::~EnGrammarSynthesizer_CaseLookupFunction(char **this)
{
  *this = (char *)&unk_1F2A0CBC0;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[2]);

  JUMPOUT(0x1D942B8B0);
}

{
  *this = (char *)&unk_1F2A0CBC0;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[2]);
}

uint64_t *std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>(uint64_t **a1, unsigned __int16 *a2, uint64_t a3)
{
  double result = std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v8, a2);
  if (!*result)
  {
    uint64_t v6 = (uint64_t **)result;
    std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>((uint64_t)&v7, (uint64_t)a1, a3);
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v8, v6, v7);
  }
  return result;
}

uint64_t morphun::analysis::tokenizer::MorphologicalWordToken::getLemmaMappings(morphun::analysis::tokenizer::MorphologicalWordToken *this)
{
  return (uint64_t)this + 96;
}

uint64_t morphun::analysis::tokenizer::MorphologicalWordToken::getGrammemes(morphun::analysis::tokenizer::MorphologicalWordToken *this)
{
  return *((void *)this + 11);
}

void morphun::analysis::tokenizer::MorphologicalWordToken::newInstance(morphun::analysis::tokenizer::MorphologicalWordToken *this)
{
}

void sub_1D2C7C800(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C4057596481);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::analysis::tokenizer::MorphologicalWordToken::MorphologicalWordToken(morphun::Token *a1, int a2, int a3, void *a4, unint64_t a5, void *a6, unint64_t a7, char a8, uint64_t a9, uint64_t *a10)
{
  *(void *)a1 = &unk_1F2A02628;
  unint64_t v11 = morphun::Token_Word::Token_Word(a1, (uint64_t *)&off_1F2A080A8, a2, a3, a4, a5, a6, a7, a8);
  *(void *)unint64_t v11 = &off_1F2A111A0;
  *((void *)v11 + 11) = a9;
  *((void *)v11 + 13) = 0;
  *((void *)v11 + 14) = 0;
  *((void *)v11 + 12) = 0;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__init_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>((void *)v11 + 12, *a10, a10[1], 0xAAAAAAAAAAAAAAABLL * ((a10[1] - *a10) >> 4));
  return a1;
}

void sub_1D2C7C8E8(_Unwind_Exception *a1)
{
  morphun::Token::~Token(v1, (void **)&off_1F2A080B0);
  _Unwind_Resume(a1);
}

void *std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__init_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__vallocate[abi:ne180100](result, a4);
    double result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::analysis::tokenattributes::LemmaMapping>,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>(a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1D2C7C968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenizer::MorphologicalWordToken::~MorphologicalWordToken(void **this)
{
  *this = &off_1F2A111A0;
  int v2 = this + 12;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v2);
  morphun::Token::~Token(this, (void **)&off_1F2A080B0);

  JUMPOUT(0x1D942B8B0);
}

{
  void **v2;
  uint64_t vars8;

  *this = &off_1F2A111A0;
  int v2 = this + 12;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100](&v2);

  morphun::Token::~Token(this, (void **)&off_1F2A080B0);
}

void morphun::analysis::tokenizer::MorphologicalWordToken::toString(morphun::analysis::tokenizer::MorphologicalWordToken *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  memset(&v82, 0, sizeof(v82));
  uint64_t v2 = *((void *)this + 12);
  uint64_t v3 = (char *)*((void *)this + 13);
  if ((char *)v2 != v3)
  {
    int32_t v4 = (unsigned __int8 *)(v2 + 47);
    do
    {
      morphun::util::StringUtils::to_u16string(*(morphun::util::StringUtils **)(v4 - 39), &v75);
      std::basic_string<char16_t>::insert(&v75, (std::basic_string<char16_t>::size_type)L"{surfaceFormGrammemes=", (const std::basic_string<char16_t>::value_type *)0x16, v5);
      std::basic_string<char16_t> v76 = v75;
      memset(&v75, 0, sizeof(v75));
      std::basic_string<char16_t>::append(&v76, (const std::basic_string<char16_t>::value_type *)",", 0x11uLL);
      std::basic_string<char16_t> v77 = v76;
      memset(&v76, 0, sizeof(v76));
      morphun::util::StringUtils::to_u16string(*(morphun::util::StringUtils **)(v4 - 31), &v74);
      int v6 = SHIBYTE(v74.__r_.__value_.__r.__words[2]);
      uint64_t v7 = (void *)v74.__r_.__value_.__r.__words[0];
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v8 = &v74;
      }
      else {
        uint64_t v8 = (std::basic_string<char16_t> *)v74.__r_.__value_.__r.__words[0];
      }
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v74.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v74.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v77, (const std::basic_string<char16_t>::value_type *)v8, size);
      std::basic_string<char16_t> v78 = v77;
      memset(&v77, 0, sizeof(v77));
      std::basic_string<char16_t>::append(&v78, (const std::basic_string<char16_t>::value_type *)",", 8uLL);
      std::basic_string<char16_t> v79 = v78;
      memset(&v78, 0, sizeof(v78));
      int v10 = (char)*v4;
      if (v10 >= 0) {
        unint64_t v11 = (const std::basic_string<char16_t>::value_type *)(v4 - 23);
      }
      else {
        unint64_t v11 = *(const std::basic_string<char16_t>::value_type **)(v4 - 23);
      }
      if (v10 >= 0) {
        std::basic_string<char16_t>::size_type v12 = *v4;
      }
      else {
        std::basic_string<char16_t>::size_type v12 = *(void *)(v4 - 15);
      }
      std::basic_string<char16_t>::append(&v79, v11, v12);
      std::basic_string<char16_t> v80 = v79;
      memset(&v79, 0, sizeof(v79));
      std::basic_string<char16_t>::append(&v80, (const std::basic_string<char16_t>::value_type *)"}", 1uLL);
      std::basic_string<char16_t> v81 = v80;
      memset(&v80, 0, sizeof(v80));
      int v13 = SHIBYTE(v81.__r_.__value_.__r.__words[2]);
      std::basic_string<char16_t>::size_type v14 = (void *)v81.__r_.__value_.__r.__words[0];
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v15 = &v81;
      }
      else {
        unint64_t v15 = (std::basic_string<char16_t> *)v81.__r_.__value_.__r.__words[0];
      }
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v16 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v16 = v81.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v82, (const std::basic_string<char16_t>::value_type *)v15, v16);
      if (v13 < 0) {
        operator delete(v14);
      }
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v80.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v79.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v78.__r_.__value_.__l.__data_);
        if (v6 < 0) {
LABEL_38:
        }
          operator delete(v7);
      }
      else if (v6 < 0)
      {
        goto LABEL_38;
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v77.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      BOOL v17 = (char *)(v4 + 1);
      v4 += 48;
    }
    while (v17 != v3);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"MorphologicalWordToken{begin=");
  int v18 = (*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(void *)this + 24))(this);
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v18, &v69);
  int v19 = SHIBYTE(v69.__r_.__value_.__r.__words[2]);
  uint64_t v20 = (void *)v69.__r_.__value_.__r.__words[0];
  if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v21 = &v69;
  }
  else {
    uint64_t v21 = (std::basic_string<char16_t> *)v69.__r_.__value_.__r.__words[0];
  }
  if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v22 = HIBYTE(v69.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v22 = v69.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v21, v22);
  std::basic_string<char16_t> v71 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v67, (char *)L", end=");
  if ((v68 & 0x80u) == 0) {
    int v23 = v67;
  }
  else {
    int v23 = (void **)v67[0];
  }
  if ((v68 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v24 = v68;
  }
  else {
    std::basic_string<char16_t>::size_type v24 = (std::basic_string<char16_t>::size_type)v67[1];
  }
  std::basic_string<char16_t>::append(&v71, (const std::basic_string<char16_t>::value_type *)v23, v24);
  std::basic_string<char16_t> v72 = v71;
  memset(&v71, 0, sizeof(v71));
  int v25 = (*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(void *)this + 32))(this);
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v25, &v66);
  int v26 = SHIBYTE(v66.__r_.__value_.__r.__words[2]);
  int v27 = (void *)v66.__r_.__value_.__r.__words[0];
  if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v28 = &v66;
  }
  else {
    uint64_t v28 = (std::basic_string<char16_t> *)v66.__r_.__value_.__r.__words[0];
  }
  if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v29 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v29 = v66.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v72, (const std::basic_string<char16_t>::value_type *)v28, v29);
  std::basic_string<char16_t> v73 = v72;
  memset(&v72, 0, sizeof(v72));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v64, ",");
  if ((v65 & 0x80u) == 0) {
    int v30 = v64;
  }
  else {
    int v30 = (void **)v64[0];
  }
  if ((v65 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v31 = v65;
  }
  else {
    std::basic_string<char16_t>::size_type v31 = (std::basic_string<char16_t>::size_type)v64[1];
  }
  std::basic_string<char16_t>::append(&v73, (const std::basic_string<char16_t>::value_type *)v30, v31);
  std::basic_string<char16_t> v74 = v73;
  memset(&v73, 0, sizeof(v73));
  int v32 = *((char *)this + 39);
  if (v32 >= 0) {
    uint64_t v33 = (const std::basic_string<char16_t>::value_type *)((char *)this + 16);
  }
  else {
    uint64_t v33 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 2);
  }
  if (v32 >= 0) {
    std::basic_string<char16_t>::size_type v34 = *((unsigned __int8 *)this + 39);
  }
  else {
    std::basic_string<char16_t>::size_type v34 = *((void *)this + 3);
  }
  std::basic_string<char16_t>::append(&v74, v33, v34);
  std::basic_string<char16_t> v75 = v74;
  memset(&v74, 0, sizeof(v74));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v62, "'");
  if ((v63 & 0x80u) == 0) {
    unint64_t v35 = v62;
  }
  else {
    unint64_t v35 = (void **)v62[0];
  }
  if ((v63 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v36 = v63;
  }
  else {
    std::basic_string<char16_t>::size_type v36 = (std::basic_string<char16_t>::size_type)v62[1];
  }
  std::basic_string<char16_t>::append(&v75, (const std::basic_string<char16_t>::value_type *)v35, v36);
  std::basic_string<char16_t> v76 = v75;
  memset(&v75, 0, sizeof(v75));
  int v37 = *((char *)this + 63);
  if (v37 >= 0) {
    unint64_t v38 = (const std::basic_string<char16_t>::value_type *)((char *)this + 40);
  }
  else {
    unint64_t v38 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 5);
  }
  if (v37 >= 0) {
    std::basic_string<char16_t>::size_type v39 = *((unsigned __int8 *)this + 63);
  }
  else {
    std::basic_string<char16_t>::size_type v39 = *((void *)this + 6);
  }
  std::basic_string<char16_t>::append(&v76, v38, v39);
  std::basic_string<char16_t> v77 = v76;
  memset(&v76, 0, sizeof(v76));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v60, (char *)L"', grammemes=");
  if ((v61 & 0x80u) == 0) {
    uint64_t v40 = v60;
  }
  else {
    uint64_t v40 = (void **)v60[0];
  }
  if ((v61 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v41 = v61;
  }
  else {
    std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t>::size_type)v60[1];
  }
  std::basic_string<char16_t>::append(&v77, (const std::basic_string<char16_t>::value_type *)v40, v41);
  std::basic_string<char16_t> v78 = v77;
  memset(&v77, 0, sizeof(v77));
  uint64_t v42 = (morphun::util::StringUtils *)(*(uint64_t (**)(morphun::analysis::tokenizer::MorphologicalWordToken *))(*(void *)this + 56))(this);
  morphun::util::StringUtils::to_u16string(v42, &v59);
  int v43 = SHIBYTE(v59.__r_.__value_.__r.__words[2]);
  unint64_t v44 = (void *)v59.__r_.__value_.__r.__words[0];
  if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v45 = &v59;
  }
  else {
    uint64_t v45 = (std::basic_string<char16_t> *)v59.__r_.__value_.__r.__words[0];
  }
  if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v46 = HIBYTE(v59.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v46 = v59.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v78, (const std::basic_string<char16_t>::value_type *)v45, v46);
  std::basic_string<char16_t> v79 = v78;
  memset(&v78, 0, sizeof(v78));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v57, (char *)L", lemmaMappings={");
  if ((v58 & 0x80u) == 0) {
    unint64_t v47 = v57;
  }
  else {
    unint64_t v47 = (void **)v57[0];
  }
  if ((v58 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v48 = v58;
  }
  else {
    std::basic_string<char16_t>::size_type v48 = (std::basic_string<char16_t>::size_type)v57[1];
  }
  std::basic_string<char16_t>::append(&v79, (const std::basic_string<char16_t>::value_type *)v47, v48);
  std::basic_string<char16_t> v80 = v79;
  memset(&v79, 0, sizeof(v79));
  if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v49 = &v82;
  }
  else {
    uint64_t v49 = (std::basic_string<char16_t> *)v82.__r_.__value_.__r.__words[0];
  }
  if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v50 = HIBYTE(v82.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v50 = v82.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v80, (const std::basic_string<char16_t>::value_type *)v49, v50);
  std::basic_string<char16_t> v81 = v80;
  memset(&v80, 0, sizeof(v80));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"}}");
  if ((v56 & 0x80u) == 0) {
    uint64_t v51 = __p;
  }
  else {
    uint64_t v51 = (void **)__p[0];
  }
  if ((v56 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v52 = v56;
  }
  else {
    std::basic_string<char16_t>::size_type v52 = (std::basic_string<char16_t>::size_type)__p[1];
  }
  std::basic_string<char16_t>::append(&v81, (const std::basic_string<char16_t>::value_type *)v51, v52);
  *a2 = v81;
  memset(&v81, 0, sizeof(v81));
  if ((char)v56 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v81.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v80.__r_.__value_.__l.__data_);
  }
  if ((char)v58 < 0) {
    operator delete(v57[0]);
  }
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v79.__r_.__value_.__l.__data_);
    if ((v43 & 0x80000000) == 0) {
      goto LABEL_120;
    }
  }
  else if ((v43 & 0x80000000) == 0)
  {
    goto LABEL_120;
  }
  operator delete(v44);
LABEL_120:
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v78.__r_.__value_.__l.__data_);
  }
  if ((char)v61 < 0) {
    operator delete(v60[0]);
  }
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v77.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v76.__r_.__value_.__l.__data_);
  }
  if ((char)v63 < 0) {
    operator delete(v62[0]);
  }
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v75.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v74.__r_.__value_.__l.__data_);
  }
  if ((char)v65 < 0) {
    operator delete(v64[0]);
  }
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v73.__r_.__value_.__l.__data_);
    if ((v26 & 0x80000000) == 0) {
      goto LABEL_138;
    }
  }
  else if ((v26 & 0x80000000) == 0)
  {
    goto LABEL_138;
  }
  operator delete(v27);
LABEL_138:
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v72.__r_.__value_.__l.__data_);
  }
  if ((char)v68 < 0) {
    operator delete(v67[0]);
  }
  if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v71.__r_.__value_.__l.__data_);
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_144;
    }
  }
  else if ((v19 & 0x80000000) == 0)
  {
    goto LABEL_144;
  }
  operator delete(v20);
LABEL_144:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v82.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C7D234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v88 - 121) < 0) {
    operator delete(*(void **)(v88 - 144));
  }
  if (*(char *)(v88 - 153) < 0) {
    operator delete(*(void **)(v88 - 176));
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (*(char *)(v88 - 185) < 0) {
    operator delete(*(void **)(v88 - 208));
  }
  if (v87 < 0) {
    operator delete(v84);
  }
  if (*(char *)(v88 - 217) < 0) {
    operator delete(*(void **)(v88 - 240));
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a82 < 0) {
    operator delete(a81);
  }
  if (a80 < 0) {
    operator delete(a79);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a78 < 0) {
    operator delete(a77);
  }
  if (a76 < 0) {
    operator delete(a75);
  }
  if (a43 < 0) {
    operator delete(a38);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (v86 < 0) {
    operator delete(v83);
  }
  if (a72 < 0) {
    operator delete(a69);
  }
  if (a52 < 0) {
    operator delete(a47);
  }
  if (a67 < 0) {
    operator delete(a62);
  }
  if (v85 < 0) {
    operator delete(v82);
  }
  if (a61 < 0) {
    operator delete(a56);
  }
  if (*(char *)(v88 - 89) < 0) {
    operator delete(*(void **)(v88 - 112));
  }
  _Unwind_Resume(a1);
}

morphun::Token *morphun::analysis::tokenizer::MorphologicalWordToken::MorphologicalWordToken(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8, char a9, uint64_t a10, uint64_t *a11)
{
  int v13 = morphun::Token_Word::Token_Word(a1, a2 + 1, a3, a4, a5, a6, a7, a8, a9);
  uint64_t v14 = *a2;
  *(void *)int v13 = *a2;
  *(void *)((char *)a1 + *(void *)(v14 - 64)) = a2[7];
  *(void *)((char *)a1 + *(void *)(*(void *)a1 - 40)) = a2[8];
  *((void *)a1 + 12) = 0;
  *((void *)a1 + 11) = a10;
  *((void *)a1 + 13) = 0;
  *((void *)a1 + 14) = 0;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__init_with_size[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping*,morphun::analysis::tokenattributes::LemmaMapping*>((void *)a1 + 12, *a11, a11[1], 0xAAAAAAAAAAAAAAABLL * ((a11[1] - *a11) >> 4));
  return a1;
}

void sub_1D2C7D63C(_Unwind_Exception *a1)
{
  morphun::Token::~Token(v1, (void **)(v2 + 16));
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::analysis::tokenizer::MorphologicalWordToken::toString(morphun::analysis::tokenizer::MorphologicalWordToken *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

std::basic_string<char16_t> *morphun::util::StringViewUtils::replace(std::basic_string<char16_t> *a1, uint64_t a2, std::basic_string<char16_t>::size_type a3, unsigned __int16 *a4, unint64_t a5, __int16 *a6, unint64_t a7)
{
  if (*(char *)(npc<std::basic_string<char16_t>>((uint64_t)a1) + 23) < 0) {
    unint64_t v14 = (a1->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else {
    unint64_t v14 = 10;
  }
  if (a3 >= v14 && a5 <= a7) {
    std::basic_string<char16_t>::reserve(a1, a3);
  }
  unint64_t v15 = 0;
  std::basic_string<char16_t>::size_type v16 = &a6[a7];
  while (1)
  {
    uint64_t v17 = std::u16string_view::find[abi:ne180100](a2, a3, a4, a5, v15);
    std::basic_string<char16_t>::size_type v22 = (__int16 *)(a2 + 2 * v15);
    if (v17 == -1) {
      break;
    }
    uint64_t v23 = v17;
    std::basic_string<char16_t>::size_type v24 = std::basic_string<char16_t>::append<char16_t const*,0>(a1, v22, (__int16 *)(a2 + 2 * v17), v18, v19, v20, v21);
    std::basic_string<char16_t>::append<char16_t const*,0>(v24, a6, v16, v25, v26, v27, v28);
    unint64_t v15 = v23 + a5;
  }

  return std::basic_string<char16_t>::append<char16_t const*,0>(a1, v22, (__int16 *)(a2 + 2 * a3), v18, v19, v20, v21);
}

uint64_t std::u16string_view::find[abi:ne180100](uint64_t a1, unint64_t a2, unsigned __int16 *a3, uint64_t a4, unint64_t a5)
{
  if (a2 < a5) {
    return -1;
  }
  if (a4)
  {
    std::basic_string<char16_t>::size_type v5 = (unsigned __int16 *)(a1 + 2 * a5);
    int v6 = (unsigned __int16 *)(a1 + 2 * a2);
    for (uint64_t i = v6 - v5; i >= a4; uint64_t i = v6 - v5)
    {
      if (i - a4 == -1) {
        break;
      }
      uint64_t v9 = i + 1;
      while (*v5 != *a3)
      {
        ++v5;
        if (a4 == --v9) {
          goto LABEL_5;
        }
      }
      uint64_t v10 = 0;
      while (a3[v10] == v5[v10])
      {
        if (a4 == ++v10) {
          goto LABEL_6;
        }
      }
      ++v5;
    }
LABEL_5:
    std::basic_string<char16_t>::size_type v5 = (unsigned __int16 *)(a1 + 2 * a2);
LABEL_6:
    if (v5 == v6) {
      return -1;
    }
    else {
      return ((uint64_t)v5 - a1) >> 1;
    }
  }
  return a5;
}

std::basic_string<char16_t> *std::basic_string<char16_t>::append<char16_t const*,0>(std::basic_string<char16_t> *this, __int16 *a2, __int16 *a3, uint64_t a4, uint64_t a5, std::basic_string<char16_t>::size_type a6, std::basic_string<char16_t>::size_type a7)
{
  uint64_t v8 = a2;
  LODWORD(v10) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v10 & 0x80000000) != 0)
  {
    uint64_t v11 = (char *)a3 - (char *)a2;
    if (a3 == a2) {
      return this;
    }
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v15 = this->__r_.__value_.__r.__words[2];
    std::basic_string<char16_t>::size_type v13 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    unint64_t v14 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    unint64_t v10 = HIBYTE(v15);
  }
  else
  {
    uint64_t v11 = (char *)a3 - (char *)a2;
    if (a3 == a2) {
      return this;
    }
    std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type v13 = 10;
    unint64_t v14 = this;
  }
  unint64_t v16 = v11 >> 1;
  if (v14 > (std::basic_string<char16_t> *)v8 || &v14->__r_.__value_.__s.__data_[size + 1] <= v8)
  {
    if (v13 - size < v16)
    {
      std::basic_string<char16_t>::__grow_by(this, v13, size - v13 + v16, size, size, a6, a7);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v10) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    std::basic_string<char16_t>::size_type v21 = this;
    if ((v10 & 0x80) != 0) {
      std::basic_string<char16_t>::size_type v21 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    }
    std::basic_string<char16_t>::size_type v22 = (__int16 *)((char *)v21 + 2 * size);
    while (v8 != a3)
    {
      __int16 v23 = *v8++;
      *v22++ = v23;
    }
    __int16 *v22 = 0;
    std::basic_string<char16_t>::size_type v24 = v16 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v24;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v24 & 0x7F;
    }
  }
  else
  {
    std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v26, v8, a3, v16);
    int v17 = (char)v27;
    uint64_t v18 = (void *)v26[0];
    if ((v27 & 0x80u) == 0) {
      uint64_t v19 = (const std::basic_string<char16_t>::value_type *)v26;
    }
    else {
      uint64_t v19 = (const std::basic_string<char16_t>::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v20 = v27;
    }
    else {
      std::basic_string<char16_t>::size_type v20 = v26[1];
    }
    std::basic_string<char16_t>::append(this, v19, v20);
    if (v17 < 0) {
      operator delete(v18);
    }
  }
  return this;
}

void sub_1D2C7D978(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(void *result, __int16 *a2, __int16 *a3, unint64_t a4)
{
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = result;
  if (a4 > 0xA)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a4 | 3) != 0xB) {
      uint64_t v8 = a4 | 3;
    }
    double result = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v8 + 1);
    v7[1] = a4;
    v7[2] = v9 | 0x8000000000000000;
    *uint64_t v7 = result;
    uint64_t v7 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    __int16 v10 = *a2++;
    *(_WORD *)uint64_t v7 = v10;
    uint64_t v7 = (void *)((char *)v7 + 2);
  }
  *(_WORD *)uint64_t v7 = 0;
  return result;
}

uint64_t morphun::util::StringViewUtils::trim(uint64_t a1, unint64_t a2)
{
  if ((int)a2 < 1)
  {
    unsigned int v3 = 0;
  }
  else
  {
    uint64_t v2 = 0;
    while (*(unsigned __int16 *)(a1 + 2 * v2) <= 0x20u)
    {
      if (a2 == ++v2)
      {
        unsigned int v3 = a2;
        goto LABEL_8;
      }
    }
    unsigned int v3 = v2;
  }
LABEL_8:
  uint64_t v4 = (int)a2;
  do
  {
    if (v4 <= (int)v3) {
      break;
    }
    uint64_t v5 = v4--;
  }
  while (*(unsigned __int16 *)(a1 - 2 + 2 * v5) < 0x21u);
  if (a2 < v3) {
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  }
  return a1 + 2 * v3;
}

uint64_t morphun::util::StringViewUtils::isAllLowerCase(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  int v2 = a2;
  if ((int)a2 < 1) {
    return 1;
  }
  int v4 = 0;
  do
  {
    unsigned int v5 = morphun::util::StringViewUtils::codePointAt(a1, v2, v4);
    BOOL v6 = v5 == MEMORY[0x1D942BD20]();
    uint64_t result = v6;
    if (!v6) {
      break;
    }
    uint64_t result = 1;
    int v8 = v5 < 0x10000 ? 1 : 2;
    v4 += v8;
  }
  while (v4 < v2);
  return result;
}

uint64_t morphun::util::StringViewUtils::codePointAt(uint64_t a1, int a2, int a3)
{
  if (a3 < 0 || a2 <= a3)
  {
    exception = (morphun::exception::StringIndexOutOfBoundsException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::StringIndexOutOfBoundsException::StringIndexOutOfBoundsException(exception, a3);
  }
  uint64_t result = *(unsigned __int16 *)(a1 + 2 * a3);
  if ((result & 0xF800) == 0xD800)
  {
    if ((result & 0x400) != 0)
    {
      if (!a3) {
        return result;
      }
      int v8 = *(unsigned __int16 *)(a1 + 2 * (a3 - 1));
      BOOL v6 = (v8 & 0xFC00) == 55296;
      int v7 = result + (v8 << 10);
    }
    else
    {
      if (a3 + 1 == a2) {
        return result;
      }
      int v5 = *(unsigned __int16 *)(a1 + 2 * (a3 + 1));
      BOOL v6 = (v5 & 0xFC00) == 56320;
      int v7 = v5 + (result << 10);
    }
    unsigned int v9 = v7 - 56613888;
    if (v6) {
      return v9;
    }
    else {
      return result;
    }
  }
  return result;
}

void sub_1D2C7DC30(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::StringViewUtils::isAllUpperCase(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  int v2 = a2;
  if ((int)a2 < 1) {
    return 1;
  }
  int v4 = 0;
  do
  {
    unsigned int v5 = morphun::util::StringViewUtils::codePointAt(a1, v2, v4);
    BOOL v6 = v5 == MEMORY[0x1D942BD30]();
    uint64_t result = v6;
    if (!v6) {
      break;
    }
    uint64_t result = 1;
    int v8 = v5 < 0x10000 ? 1 : 2;
    v4 += v8;
  }
  while (v4 < v2);
  return result;
}

std::basic_string<char16_t> *morphun::util::StringViewUtils::capitalizeFirst@<X0>(UChar *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a2 < 2)
  {
    if (a2 == 1)
    {
      *(void *)a4 = 0;
      *(void *)(a4 + 8) = 0;
      *(void *)(a4 + 16) = 0;
      return (std::basic_string<char16_t> *)morphun::util::StringViewUtils::uppercase(a4, a1, 1, a3);
    }
  }
  else
  {
    unsigned int v8 = morphun::util::StringViewUtils::codePointAt((uint64_t)a1, a2, 0);
    if (!u_isupper(v8))
    {
      *(void *)a4 = 0;
      *(void *)(a4 + 8) = 0;
      *(void *)(a4 + 16) = 0;
      morphun::util::StringUtils::appendCodePoint((std::basic_string<char16_t> *)a4, v8);
      int v9 = *(char *)(a4 + 23);
      if (v9 >= 0) {
        __int16 v10 = (const UChar *)a4;
      }
      else {
        __int16 v10 = *(const UChar **)a4;
      }
      if (v9 >= 0) {
        LODWORD(v11) = *(unsigned __int8 *)(a4 + 23);
      }
      else {
        uint64_t v11 = *(void *)(a4 + 8);
      }
      morphun::util::StringViewUtils::uppercase(a4, v10, v11, a3);
      uint64_t v16 = 2;
      if (v8 < 0x10000) {
        uint64_t v16 = 1;
      }
      return std::basic_string<char16_t>::append<char16_t const*,0>((std::basic_string<char16_t> *)a4, (__int16 *)&a1[v16], (__int16 *)&a1[a2], v12, v13, v14, v15);
    }
  }

  return (std::basic_string<char16_t> *)std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>((void *)a4, (__int16 *)a1, (__int16 *)&a1[a2], (uint64_t)(2 * a2) >> 1);
}

void sub_1D2C7DDE4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::StringViewUtils::uppercase(uint64_t a1, const UChar *a2, int32_t a3, uint64_t a4)
{
  unsigned int v8 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  std::basic_string<char16_t>::resize(v8, a3, 0);
  UErrorCode pErrorCode = U_ZERO_ERROR;
  int v9 = (UChar *)npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(a1 + 23) < 0) {
    int v9 = *(UChar **)a1;
  }
  if (*(char *)(a4 + 127) >= 0) {
    __int16 v10 = (const char *)(a4 + 104);
  }
  else {
    __int16 v10 = *(const char **)(a4 + 104);
  }
  int32_t v11 = u_strToUpper(v9, a3, a2, a3, v10, &pErrorCode);
  int32_t v12 = v11;
  UErrorCode v13 = pErrorCode;
  if (pErrorCode == U_BUFFER_OVERFLOW_ERROR)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v11, 0);
    UErrorCode pErrorCode = U_ZERO_ERROR;
    std::basic_string<char16_t>::size_type v14 = (UChar *)a1;
    if (*(char *)(a1 + 23) < 0) {
      std::basic_string<char16_t>::size_type v14 = *(UChar **)a1;
    }
    if (*(char *)(a4 + 127) >= 0) {
      std::basic_string<char16_t>::size_type v15 = (const char *)(a4 + 104);
    }
    else {
      std::basic_string<char16_t>::size_type v15 = *(const char **)(a4 + 104);
    }
    int32_t v12 = u_strToUpper(v14, v12, a2, a3, v15, &pErrorCode);
    UErrorCode v13 = pErrorCode;
  }
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    UErrorCode v18 = v13;
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v18);
  }
  if (*(char *)(a1 + 23) < 0) {
    uint64_t v16 = *(void *)(a1 + 8);
  }
  else {
    LODWORD(v16) = *(unsigned __int8 *)(a1 + 23);
  }
  if (v12 != v16) {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v12, 0);
  }
  return a1;
}

void sub_1D2C7DF6C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::StringViewUtils::lowercase(uint64_t a1, const UChar *a2, int32_t a3, uint64_t a4)
{
  unsigned int v8 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  std::basic_string<char16_t>::resize(v8, a3, 0);
  UErrorCode pErrorCode = U_ZERO_ERROR;
  int v9 = (UChar *)npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(a1 + 23) < 0) {
    int v9 = *(UChar **)a1;
  }
  if (*(char *)(a4 + 127) >= 0) {
    __int16 v10 = (const char *)(a4 + 104);
  }
  else {
    __int16 v10 = *(const char **)(a4 + 104);
  }
  int32_t v11 = u_strToLower(v9, a3, a2, a3, v10, &pErrorCode);
  int32_t v12 = v11;
  UErrorCode v13 = pErrorCode;
  if (pErrorCode == U_BUFFER_OVERFLOW_ERROR)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v11, 0);
    UErrorCode pErrorCode = U_ZERO_ERROR;
    std::basic_string<char16_t>::size_type v14 = (UChar *)a1;
    if (*(char *)(a1 + 23) < 0) {
      std::basic_string<char16_t>::size_type v14 = *(UChar **)a1;
    }
    if (*(char *)(a4 + 127) >= 0) {
      std::basic_string<char16_t>::size_type v15 = (const char *)(a4 + 104);
    }
    else {
      std::basic_string<char16_t>::size_type v15 = *(const char **)(a4 + 104);
    }
    int32_t v12 = u_strToLower(v14, v12, a2, a3, v15, &pErrorCode);
    UErrorCode v13 = pErrorCode;
  }
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    UErrorCode v18 = v13;
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v18);
  }
  if (*(char *)(a1 + 23) < 0) {
    uint64_t v16 = *(void *)(a1 + 8);
  }
  else {
    LODWORD(v16) = *(unsigned __int8 *)(a1 + 23);
  }
  if (v12 != v16) {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v12, 0);
  }
  return a1;
}

void sub_1D2C7E0E4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::string *morphun::util::StringViewUtils::convert(std::string *this, uint64_t a2, int a3)
{
  if (!this)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if ((SHIBYTE(this->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
LABEL_5:
    int v6 = 22;
    goto LABEL_6;
  }
  *this->__r_.__value_.__l.__data_ = 0;
  this->__r_.__value_.__l.__size_ = 0;
  if ((SHIBYTE(this->__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_5;
  }
  int v6 = LODWORD(this->__r_.__value_.__r.__words[2]) - 1;
LABEL_6:
  if (v6 < a3) {
    std::string::reserve(this, a3);
  }
  char v18 = 0;
  *(_DWORD *)std::basic_string<char16_t> __s = 0;
  if (a3 >= 1)
  {
    int v7 = 0;
    while (1)
    {
      uint64_t v8 = v7 + 1;
      unsigned int v9 = *(unsigned __int16 *)(a2 + 2 * v7);
      if ((v9 & 0xFC00) == 0xD800 && v8 != a3) {
        break;
      }
      if (v9 > 0x7F)
      {
        if (v9 <= 0x7FF)
        {
          __s[0] = (v9 >> 6) | 0xC0;
          uint64_t v14 = 1;
LABEL_23:
          std::string::size_type v11 = v14 + 1;
          __s[v14] = v9 & 0x3F | 0x80;
          goto LABEL_24;
        }
LABEL_21:
        __s[0] = (v9 >> 12) | 0xE0;
        uint64_t v13 = 1;
LABEL_22:
        uint64_t v14 = v13 + 1;
        *(unsigned char *)((unint64_t)__s | v13) = (v9 >> 6) & 0x3F | 0x80;
        goto LABEL_23;
      }
      __s[0] = *(_WORD *)(a2 + 2 * v7);
      std::string::size_type v11 = 1;
LABEL_24:
      std::string::append(this, __s, v11);
      int v7 = v8;
      if ((int)v8 >= a3) {
        return this;
      }
    }
    int v12 = *(unsigned __int16 *)(a2 + 2 * v8);
    if ((v12 & 0xFC00) != 0xDC00) {
      goto LABEL_21;
    }
    LODWORD(v8) = v7 + 2;
    unsigned int v9 = v12 + (v9 << 10) - 56613888;
    __s[0] = (v9 >> 18) | 0xF0;
    __s[1] = (v9 >> 12) & 0x3F | 0x80;
    uint64_t v13 = 2;
    goto LABEL_22;
  }
  return this;
}

void sub_1D2C7E2C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::util::StringViewUtils::to_string(uint64_t a1@<X0>, int a2@<W1>, std::string *a3@<X8>)
{
  memset(&__p, 0, sizeof(__p));
  morphun::util::StringViewUtils::convert(&__p, a1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(a3, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *a3 = __p;
  }
}

void sub_1D2C7E34C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::StringViewUtils::to_u16string(const char *a1@<X0>, int32_t a2@<W1>, std::basic_string<char16_t> *a3@<X8>)
{
  __p[0] = 0;
  __p[1] = 0;
  std::basic_string<char16_t>::size_type v5 = 0;
  morphun::util::StringViewUtils::convert((uint64_t)__p, a1, a2);
  if (SHIBYTE(v5) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a3, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
    if (SHIBYTE(v5) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    a3->__r_.__value_.__r.__words[2] = v5;
  }
}

void sub_1D2C7E3E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::util::StringViewUtils::endsWith(uint64_t a1, unint64_t a2, unsigned __int16 *a3, unint64_t a4)
{
  if (a2 < a4) {
    return 0;
  }
  if (!a4) {
    return 1;
  }
  uint64_t v5 = -(uint64_t)a4;
  uint64_t v6 = a1 + 2 * a2;
  do
  {
    int v7 = *a3++;
    BOOL result = v7 == *(unsigned __int16 *)(v6 + 2 * v5);
    BOOL v8 = v7 != *(unsigned __int16 *)(v6 + 2 * v5) || v5 == -1;
    ++v5;
  }
  while (!v8);
  return result;
}

uint64_t morphun::util::StringViewUtils::startsWith(unsigned __int16 *a1, unint64_t a2, unsigned __int16 *a3, unint64_t a4)
{
  if (a2 < a4) {
    return 0;
  }
  if (!a4) {
    return 1;
  }
  unint64_t v5 = a4 - 1;
  do
  {
    int v7 = *a1++;
    int v6 = v7;
    int v9 = *a3++;
    int v8 = v9;
    BOOL v11 = v5-- != 0;
    BOOL v12 = v8 == v6;
    BOOL v4 = v8 == v6;
  }
  while (v12 && v11);
  return v4;
}

uint64_t morphun::util::StringViewUtils::split@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int16 *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __int16 v10 = 0;
  unint64_t v11 = 0;
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  while (1)
  {
    uint64_t v12 = std::u16string_view::find[abi:ne180100](a1, a2, a3, a4, v11);
    if (v12 == -1) {
      break;
    }
    uint64_t v13 = v12;
    std::basic_string<char16_t>::size_type v15 = (__int16 *)(a1 + 2 * v12);
    uint64_t v16 = (__int16 *)(a1 + 2 * v11);
    if ((unint64_t)v10 >= a5[2])
    {
      __int16 v10 = (void *)std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<char16_t const*,char16_t const*>(a5, &v16, &v15);
    }
    else
    {
      std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v10, (__int16 *)(a1 + 2 * v11), (__int16 *)(a1 + 2 * v12), (uint64_t)(2 * v12 - 2 * v11) >> 1);
      v10 += 3;
      a5[1] = (uint64_t)v10;
    }
    a5[1] = (uint64_t)v10;
    unint64_t v11 = v13 + a4;
  }
  std::basic_string<char16_t>::size_type v15 = (__int16 *)(a1 + 2 * a2);
  uint64_t v16 = (__int16 *)(a1 + 2 * v11);
  if ((unint64_t)v10 >= a5[2])
  {
    uint64_t result = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<char16_t const*,char16_t const*>(a5, &v16, &v15);
  }
  else
  {
    std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v10, (__int16 *)(a1 + 2 * v11), (__int16 *)(a1 + 2 * a2), (uint64_t)(2 * a2 - 2 * v11) >> 1);
    uint64_t result = (uint64_t)(v10 + 3);
    a5[1] = (uint64_t)(v10 + 3);
  }
  a5[1] = result;
  return result;
}

void sub_1D2C7E5A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<char16_t const*,char16_t const*>(uint64_t *a1, __int16 **a2, __int16 **a3)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  int v8 = a1 + 2;
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v4;
  }
  int v17 = v8;
  if (v9) {
    unint64_t v9 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v9);
  }
  else {
    uint64_t v10 = 0;
  }
  unint64_t v13 = v9;
  uint64_t v14 = (void *)(v9 + 24 * v3);
  std::basic_string<char16_t>::size_type v15 = v14;
  unint64_t v16 = v9 + 24 * v10;
  std::basic_string<char16_t>::__init_with_size[abi:ne180100]<char16_t const*,char16_t const*>(v14, *a2, *a3, *a3 - *a2);
  std::basic_string<char16_t>::size_type v15 = v14 + 3;
  std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(a1, &v13);
  uint64_t v11 = a1[1];
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)&v13);
  return v11;
}

void sub_1D2C7E6D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::util::StringViewUtils::join@<X0>(std::basic_string<char16_t>::value_type *__s@<X1>, std::basic_string<char16_t>::size_type __n@<X2>, std::basic_string<char16_t> *result@<X0>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  std::basic_string<char16_t>::size_type v4 = result->__r_.__value_.__r.__words[0];
  std::basic_string<char16_t>::size_type size = result->__r_.__value_.__l.__size_;
  if (result->__r_.__value_.__r.__words[0] != size)
  {
    do
    {
      uint64_t v9 = *(unsigned __int8 *)(a4 + 23);
      if ((v9 & 0x80u) != 0) {
        uint64_t v9 = *(void *)(a4 + 8);
      }
      if (v9) {
        std::basic_string<char16_t>::append((std::basic_string<char16_t> *)a4, __s, __n);
      }
      int v10 = *(char *)(v4 + 23);
      if (v10 >= 0) {
        uint64_t v11 = (const std::basic_string<char16_t>::value_type *)v4;
      }
      else {
        uint64_t v11 = *(const std::basic_string<char16_t>::value_type **)v4;
      }
      if (v10 >= 0) {
        std::basic_string<char16_t>::size_type v12 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        std::basic_string<char16_t>::size_type v12 = *(void *)(v4 + 8);
      }
      uint64_t result = std::basic_string<char16_t>::append((std::basic_string<char16_t> *)a4, v11, v12);
      v4 += 24;
    }
    while (v4 != size);
  }
  return result;
}

void sub_1D2C7E784(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::StringViewUtils::strdup(const UChar *a1)
{
}

uint64_t **com::apple::siri::tokenizer::data::config_sv::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DE38;
  v3[1] = *(_OWORD *)&off_1E695DE48;
  v3[2] = xmmword_1E695DE58;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t **com::apple::siri::tokenizer::data::config_iw::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E695DE68;
  uint64_t v4 = "h";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_sk::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

CFArrayRef mloc_getSupportedLocalesList(morphun::util::LocaleUtils *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  morphun::util::LocaleUtils::getSupportedLocaleList(a1, (uint64_t)&v16);
  __int16 v1 = v18;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (const void **)((char *)&v16 - v4);
  if (v3 >= 0x200) {
    size_t v6 = 512;
  }
  else {
    size_t v6 = v3;
  }
  bzero((char *)&v16 - v4, v6);
  int v8 = v16;
  if (v16 != &v17)
  {
    uint64_t v9 = 0;
    do
    {
      CFLocaleRef v10 = morphun::util::CFUtils::convert((morphun::util::CFUtils *)(v8 + 4), v7);
      v5[v9] = v10;
      CFRelease(v10);
      uint64_t v11 = (void *)v8[1];
      if (v11)
      {
        do
        {
          std::basic_string<char16_t>::size_type v12 = (void **)v11;
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          std::basic_string<char16_t>::size_type v12 = (void **)v8[2];
          BOOL v13 = *v12 == v8;
          int v8 = v12;
        }
        while (!v13);
      }
      ++v9;
      int v8 = v12;
    }
    while (v12 != &v17);
  }
  CFArrayRef v14 = CFArrayCreate(0, v5, v1, &mloc_getSupportedLocalesList::callbacks);
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v17);
  return v14;
}

void sub_1D2C7EA94(_Unwind_Exception *a1)
{
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*(void **)(v1 - 72));
  _Unwind_Resume(a1);
}

void mloc_array_release(const __CFAllocator *a1, CFTypeRef cf)
{
}

CFLocaleRef mloc_createValidRegionAwareLanguage(const __CFLocale *a1, const __CFLocale *a2)
{
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v7, a1);
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v6, a2);
  morphun::util::LocaleUtils::createValidRegionAwareLanguage((morphun::util::LocaleUtils *)v7, (const morphun::util::ULocale *)v6, (morphun::util::ULocale *)v8);
  CFLocaleRef v4 = morphun::util::CFUtils::convert((morphun::util::CFUtils *)v8, v3);
  return v4;
}

void sub_1D2C7EB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_PronounLookupFunction::getArticle(uint64_t a1, uint64_t a2, char a3, char a4, char a5)
{
  v41[2] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = a1 + 56;
  uint64_t v5 = *(void *)(a1 + 56);
  if (!v5) {
    goto LABEL_11;
  }
  int v7 = a3 & 0xF | (16 * (a4 & 0xF)) | ((a5 & 0xF) << 8);
  uint64_t v8 = a1 + 56;
  do
  {
    int v9 = *(_DWORD *)(v5 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      uint64_t v11 = (uint64_t *)v5;
    }
    else {
      uint64_t v11 = (uint64_t *)(v5 + 8);
    }
    if (!v10) {
      uint64_t v8 = v5;
    }
    uint64_t v5 = *v11;
  }
  while (*v11);
  if (v8 == v6 || v7 < *(_DWORD *)(v8 + 32)) {
LABEL_11:
  }
    uint64_t v8 = a1 + 56;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  if (*(char *)(v12 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)v12, *(void *)(v12 + 8));
  }
  else
  {
    long long v14 = *(_OWORD *)v12;
    __str.__r_.__value_.__r.__words[2] = *(void *)(v12 + 16);
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v14;
  }
  int v15 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v15 = __str.__r_.__value_.__r.__words[1];
  }
  std::basic_string<char16_t>::size_type v16 = (v15 - 1);
  if ((int)v16 >= 2)
  {
    int v17 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &__str
        : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    if (v17->__r_.__value_.__s.__data_[v16] == 1577)
    {
      std::basic_string<char16_t>::basic_string(&v39, &__str, 0, v16, v13);
      std::basic_string<char16_t>::append(&v39, word_1D2E81944, 1uLL);
      v41[0] = v39.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::size_type v18 = v39.__r_.__value_.__r.__words[0];
      *(void *)((char *)v41 + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&v39.__r_.__value_.__r.__words[1]
                                                                               + 7);
      char v19 = HIBYTE(v39.__r_.__value_.__r.__words[2]);
      memset(&v39, 0, sizeof(v39));
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__str.__r_.__value_.__l.__data_);
        __str.__r_.__value_.__r.__words[0] = v18;
        __str.__r_.__value_.__l.__size_ = v41[0];
        *(std::basic_string<char16_t>::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v41 + 7);
        *((unsigned char *)&__str.__r_.__value_.__s + 23) = v19;
        if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v39.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        __str.__r_.__value_.__r.__words[0] = v18;
        __str.__r_.__value_.__l.__size_ = v41[0];
        *(std::basic_string<char16_t>::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v41 + 7);
        *((unsigned char *)&__str.__r_.__value_.__s + 23) = v19;
      }
    }
  }
  if (v8 != v6)
  {
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
      if (!__str.__r_.__value_.__l.__size_) {
        goto LABEL_70;
      }
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    else
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if (!*((unsigned char *)&__str.__r_.__value_.__s + 23)) {
        goto LABEL_70;
      }
      p_str = &__str;
    }
    std::basic_string<char16_t>::size_type v22 = (morphun::lang::StringFilterUtil *)morphun::util::StringViewUtils::trim((uint64_t)p_str, size);
    if (!v23) {
      goto LABEL_38;
    }
    std::basic_string<char16_t>::size_type v24 = (char *)v22;
    while (*(_WORD *)v24 != 32)
    {
      v24 += 2;
      if (!--v23) {
        goto LABEL_38;
      }
    }
    if (v24 - (char *)v22 == -2)
    {
LABEL_38:
      uint64_t v25 = (void *)morphun::lang::StringFilterUtil::LATIN_SCRIPT(v22);
      uint64_t v26 = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v26 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      }
      if (!MEMORY[0x1D942C150](*v25, (unsigned __int16)v26->__r_.__value_.__s.__data_[0]))
      {
        std::basic_string<char16_t>::size_type v27 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? HIBYTE(__str.__r_.__value_.__r.__words[2])
            : __str.__r_.__value_.__l.__size_;
        if (v27 < 2) {
          goto LABEL_56;
        }
        uint64_t v28 = 0;
        std::basic_string<char16_t>::size_type v29 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v29 = &__str;
        }
        do
        {
          int v30 = (unsigned __int16)v29->__r_.__value_.__s.__data_[v28];
          int v31 = (unsigned __int16)word_1D2ECF8DE[v28];
        }
        while (v31 == v30 && v28++ != 1);
        if (v31 != v30)
        {
LABEL_56:
          if (v27)
          {
            uint64_t v33 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
            std::basic_string<char16_t>::size_type v34 = &__str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v34 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
            }
            if (v34->__r_.__value_.__s.__data_[v27 - 1] == 1610)
            {
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
              {
                if (__str.__r_.__value_.__l.__size_ != 3) {
                  goto LABEL_68;
                }
              }
              else
              {
                if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) != 3) {
                  goto LABEL_68;
                }
                uint64_t v33 = &__str;
              }
              uint64_t v35 = 0;
              do
              {
                int v36 = (unsigned __int16)v33->__r_.__value_.__s.__data_[v35];
                int v37 = (unsigned __int16)word_1D2EC7C80[v35];
              }
              while (v37 == v36 && v35++ != 2);
              if (v37 != v36)
              {
LABEL_68:
                if (!std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(word_1D2EC7C88, (unsigned __int16 *)&__str))goto LABEL_70; {
              }
                }
            }
          }
          std::basic_string<char16_t>::append(&__str, *(const std::basic_string<char16_t>::value_type **)(v8 + 40), *(void *)(v8 + 48));
        }
      }
    }
  }
LABEL_70:
  operator new();
}

void sub_1D2C7EF14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(_WORD *a1, unsigned __int16 *a2)
{
  if (*a1)
  {
    uint64_t v2 = 0;
    do
      uint64_t v3 = v2 + 1;
    while (a1[++v2]);
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (*((char *)a2 + 23) < 0)
  {
    if (v3 == *((void *)a2 + 1))
    {
      if (v3 == -1) {
        std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
      }
      a2 = *(unsigned __int16 **)a2;
      if (v3) {
        goto LABEL_9;
      }
      return 1;
    }
    return 0;
  }
  if (v3 != *((unsigned __int8 *)a2 + 23)) {
    return 0;
  }
  if (!v3) {
    return 1;
  }
LABEL_9:
  uint64_t v5 = v3 - 1;
  do
  {
    int v7 = *a2++;
    int v6 = v7;
    int v9 = (unsigned __int16)*a1++;
    int v8 = v9;
    BOOL v11 = v5-- != 0;
    BOOL v12 = v8 == v6;
    BOOL v13 = v8 == v6;
  }
  while (v12 && v11);
  return v13;
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_PronounLookupFunction::~ArGrammarSynthesizer_PronounLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_PronounLookupFunction *this)
{
  *(void *)this = &off_1F2A0D018;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 7));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A0D018;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 7));
}

uint64_t *std::map<int,std::u16string_view>::map[abi:ne180100](uint64_t *a1, void *a2)
{
  a1[1] = 0;
  uint64_t v3 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  CFLocaleRef v4 = a2 + 1;
  uint64_t v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_hint_unique_key_args<int,std::pair<int const,std::u16string_view> const&>(a1, v3, *((_DWORD *)v5 + 8), (uint64_t)(v5 + 4));
      int v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          int v7 = v6;
          int v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          int v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          uint64_t v5 = v7;
        }
        while (!v8);
      }
      uint64_t v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1D2C7F178(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

unint64_t morphun::Token::hashCode(morphun::Token *this)
{
  uint64_t v3 = (char *)*((void *)this + 2);
  uint64_t v1 = (char *)this + 16;
  uint64_t v2 = v3;
  uint64_t v4 = *((void *)v1 + 1);
  if (v1[23] >= 0)
  {
    uint64_t v5 = v1[23];
  }
  else
  {
    uint64_t v1 = v2;
    uint64_t v5 = v4;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t *)v1, 2 * v5);
}

uint64_t morphun::Token::getEndChar(morphun::Token *this)
{
  return *((unsigned int *)this + 3);
}

uint64_t morphun::Token::getStartChar(morphun::Token *this)
{
  return *((unsigned int *)this + 2);
}

void morphun::Token::toString(morphun::Token *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  memset(&v54, 0, sizeof(v54));
  if (!this) {
    goto LABEL_16;
  }
  {
    *((unsigned char *)&v54.__r_.__value_.__s + 23) = 4;
    uint64_t v4 = 0x72006F0057;
LABEL_4:
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
LABEL_7:
    v54.__r_.__value_.__r.__words[0] = v5;
    v54.__r_.__value_.__s.__data_[4] = 0;
    goto LABEL_18;
  }
  {
    *((unsigned char *)&v54.__r_.__value_.__s + 23) = 4;
    uint64_t v5 = 0x6C006900610054;
    goto LABEL_7;
  }
  {
    *((unsigned char *)&v54.__r_.__value_.__s + 23) = 4;
    uint64_t v4 = 0x6100650048;
    goto LABEL_4;
  }
  {
    {
      *((unsigned char *)&v54.__r_.__value_.__s + 23) = 5;
      LODWORD(v54.__r_.__value_.__r.__words[1]) = 112;
      int v6 = L"Group";
      goto LABEL_17;
    }
    {
      std::basic_string<char16_t>::__assign_external(&v54, L"OverSizedToken", 0xEuLL);
      goto LABEL_18;
    }
LABEL_16:
    *((unsigned char *)&v54.__r_.__value_.__s + 23) = 5;
    LODWORD(v54.__r_.__value_.__r.__words[1]) = 110;
    int v6 = (const __int16 *)"T";
    goto LABEL_17;
  }
  *((unsigned char *)&v54.__r_.__value_.__s + 23) = 5;
  LODWORD(v54.__r_.__value_.__r.__words[1]) = 109;
  int v6 = L"Delim";
LABEL_17:
  v54.__r_.__value_.__r.__words[0] = *(void *)v6;
LABEL_18:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "{");
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    BOOL v8 = &v54;
  }
  else {
    BOOL v8 = (std::basic_string<char16_t> *)v54.__r_.__value_.__r.__words[0];
  }
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(v54.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = v54.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)v8, (const std::basic_string<char16_t>::value_type *)size, v7);
  std::basic_string<char16_t> v46 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 2), &v44);
  int v10 = SHIBYTE(v44.__r_.__value_.__r.__words[2]);
  BOOL v11 = (void *)v44.__r_.__value_.__r.__words[0];
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    BOOL v12 = &v44;
  }
  else {
    BOOL v12 = (std::basic_string<char16_t> *)v44.__r_.__value_.__r.__words[0];
  }
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v13 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v13 = v44.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v46, (const std::basic_string<char16_t>::value_type *)v12, v13);
  std::basic_string<char16_t> v47 = v46;
  memset(&v46, 0, sizeof(v46));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v42, (char *)L", end=");
  if ((v43 & 0x80u) == 0) {
    long long v14 = v42;
  }
  else {
    long long v14 = (void **)v42[0];
  }
  if ((v43 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v15 = v43;
  }
  else {
    std::basic_string<char16_t>::size_type v15 = (std::basic_string<char16_t>::size_type)v42[1];
  }
  std::basic_string<char16_t>::append(&v47, (const std::basic_string<char16_t>::value_type *)v14, v15);
  std::basic_string<char16_t> v48 = v47;
  memset(&v47, 0, sizeof(v47));
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 3), &v41);
  int v16 = SHIBYTE(v41.__r_.__value_.__r.__words[2]);
  int v17 = (void *)v41.__r_.__value_.__r.__words[0];
  if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v18 = &v41;
  }
  else {
    std::basic_string<char16_t>::size_type v18 = (std::basic_string<char16_t> *)v41.__r_.__value_.__r.__words[0];
  }
  if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v19 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v19 = v41.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v48, (const std::basic_string<char16_t>::value_type *)v18, v19);
  std::basic_string<char16_t> v49 = v48;
  memset(&v48, 0, sizeof(v48));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v39, ",");
  if ((v40 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v20 = v39;
  }
  else {
    std::basic_string<char16_t>::size_type v20 = (void **)v39[0];
  }
  if ((v40 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v21 = v40;
  }
  else {
    std::basic_string<char16_t>::size_type v21 = (std::basic_string<char16_t>::size_type)v39[1];
  }
  std::basic_string<char16_t>::append(&v49, (const std::basic_string<char16_t>::value_type *)v20, v21);
  std::basic_string<char16_t> v50 = v49;
  memset(&v49, 0, sizeof(v49));
  int v22 = *((char *)this + 39);
  if (v22 >= 0) {
    uint64_t v23 = (const std::basic_string<char16_t>::value_type *)((char *)this + 16);
  }
  else {
    uint64_t v23 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 2);
  }
  if (v22 >= 0) {
    std::basic_string<char16_t>::size_type v24 = *((unsigned __int8 *)this + 39);
  }
  else {
    std::basic_string<char16_t>::size_type v24 = *((void *)this + 3);
  }
  std::basic_string<char16_t>::append(&v50, v23, v24);
  std::basic_string<char16_t> v51 = v50;
  memset(&v50, 0, sizeof(v50));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v37, "'");
  if ((v38 & 0x80u) == 0) {
    uint64_t v25 = v37;
  }
  else {
    uint64_t v25 = (void **)v37[0];
  }
  if ((v38 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v26 = v38;
  }
  else {
    std::basic_string<char16_t>::size_type v26 = (std::basic_string<char16_t>::size_type)v37[1];
  }
  std::basic_string<char16_t>::append(&v51, (const std::basic_string<char16_t>::value_type *)v25, v26);
  std::basic_string<char16_t> v52 = v51;
  memset(&v51, 0, sizeof(v51));
  std::basic_string<char16_t>::size_type v29 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 5);
  uint64_t v28 = (char *)this + 40;
  std::basic_string<char16_t>::size_type v27 = v29;
  int v30 = v28[23];
  if (v30 >= 0) {
    int v31 = (const std::basic_string<char16_t>::value_type *)v28;
  }
  else {
    int v31 = v27;
  }
  if (v30 >= 0) {
    std::basic_string<char16_t>::size_type v32 = v28[23];
  }
  else {
    std::basic_string<char16_t>::size_type v32 = *((void *)v28 + 1);
  }
  std::basic_string<char16_t>::append(&v52, v31, v32);
  std::basic_string<char16_t> v53 = v52;
  memset(&v52, 0, sizeof(v52));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "'");
  if ((v36 & 0x80u) == 0) {
    uint64_t v33 = __p;
  }
  else {
    uint64_t v33 = (void **)__p[0];
  }
  if ((v36 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v34 = v36;
  }
  else {
    std::basic_string<char16_t>::size_type v34 = (std::basic_string<char16_t>::size_type)__p[1];
  }
  std::basic_string<char16_t>::append(&v53, (const std::basic_string<char16_t>::value_type *)v33, v34);
  *a2 = v53;
  memset(&v53, 0, sizeof(v53));
  if ((char)v36 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v53.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v52.__r_.__value_.__l.__data_);
  }
  if ((char)v38 < 0) {
    operator delete(v37[0]);
  }
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v51.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }
  if ((char)v40 < 0) {
    operator delete(v39[0]);
  }
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v49.__r_.__value_.__l.__data_);
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_87;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_87;
  }
  operator delete(v17);
LABEL_87:
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if ((char)v43 < 0) {
    operator delete(v42[0]);
  }
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v47.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_93;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_93;
  }
  operator delete(v11);
LABEL_93:
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v54.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C7F790(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 81) < 0) {
    operator delete(*(void **)(v1 - 104));
  }
  _Unwind_Resume(a1);
}

void morphun::Token::~Token(void **this, void **a2)
{
  uint64_t v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 8)) = a2[1];
  *(void **)((char *)this + *((void *)*this - 5)) = a2[2];
  if (*((char *)this + 63) < 0) {
    operator delete(this[5]);
  }
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }
}

morphun::Token *morphun::Token::Token(morphun::Token *this, uint64_t *a2, int a3, int a4, void *__src, unint64_t a6, void *a7, unint64_t a8, char a9)
{
  uint64_t v10 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v10 - 64)) = a2[1];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[2];
  *((_DWORD *)this + 2) = a3;
  *((_DWORD *)this + 3) = a4;
  if (a6 > 0x7FFFFFFFFFFFFFF7) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a6 >= 0xB)
  {
    uint64_t v16 = (a6 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a6 | 3) != 0xB) {
      uint64_t v16 = a6 | 3;
    }
    std::basic_string<char16_t>::size_type v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v16 + 1);
    *((void *)this + 3) = a6;
    *((void *)this + 4) = v17 | 0x8000000000000000;
    *((void *)this + 2) = v15;
    goto LABEL_8;
  }
  *((unsigned char *)this + 39) = a6;
  std::basic_string<char16_t>::size_type v15 = (char *)this + 16;
  if (a6) {
LABEL_8:
  }
    memmove(v15, __src, 2 * a6);
  *(_WORD *)&v15[2 * a6] = 0;
  if (a8 > 0x7FFFFFFFFFFFFFF7) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a8 >= 0xB)
  {
    uint64_t v19 = (a8 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a8 | 3) != 0xB) {
      uint64_t v19 = a8 | 3;
    }
    std::basic_string<char16_t>::size_type v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v19 + 1);
    *((void *)this + 6) = a8;
    *((void *)this + 7) = v20 | 0x8000000000000000;
    *((void *)this + 5) = v18;
  }
  else
  {
    *((unsigned char *)this + 63) = a8;
    std::basic_string<char16_t>::size_type v18 = (char *)this + 40;
    if (!a8) {
      goto LABEL_17;
    }
  }
  memmove(v18, a7, 2 * a8);
LABEL_17:
  *(_WORD *)&v18[2 * a8] = 0;
  *((unsigned char *)this + 64) = a9;
  *((unsigned char *)this + 65) = morphun::Token::calculateWhiteSpace(this);
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  return this;
}

void sub_1D2C7FC50(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 63) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v3);
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::Token::calculateWhiteSpace(morphun::Token *this)
{
  if ((*((char *)this + 39) & 0x80000000) == 0)
  {
    uint64_t v2 = *((unsigned __int8 *)this + 39);
    if (*((unsigned char *)this + 39)) {
      goto LABEL_3;
    }
    return 0;
  }
  uint64_t v2 = *((unsigned int *)this + 6);
  if (!v2) {
    return 0;
  }
LABEL_3:
  if ((int)v2 < 1)
  {
    return 1;
  }
  else
  {
    uint64_t v3 = 0;
    BOOL v4 = 0;
    uint64_t v5 = (char **)((char *)this + 16);
    do
    {
      int v6 = (char *)this + 16;
      if (*((char *)this + 39) < 0) {
        int v6 = *v5;
      }
      if (!u_isUWhiteSpace(*(unsigned __int16 *)&v6[2 * v3])) {
        break;
      }
      BOOL v4 = ++v3 >= (int)v2;
    }
    while (v2 != v3);
  }
  return v4;
}

uint64_t morphun::Token::operator==(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t Type = mtok_getType((const void *)a1);
  if (Type != mtok_getType((const void *)a2)) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 12) - *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 12) - *(_DWORD *)(a2 + 8)) {
    return 0;
  }
  if ((*(unsigned char *)(a1 + 64) != 0) != (*(unsigned char *)(a2 + 64) != 0)) {
    return 0;
  }
  {
    return 0;
  }
  uint64_t result = std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((unsigned __int16 *)(a1 + 40), (unsigned __int16 *)(a2 + 40));
  if (result)
  {
    return std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((unsigned __int16 *)(a1 + 16), (unsigned __int16 *)(a2 + 16));
  }
  return result;
}

const void *morphun::Token::isHead(const void *this)
{
  if (this) {
  return this;
  }
}

const void *morphun::Token::isTail(const void *this)
{
  if (this) {
  return this;
  }
}

uint64_t morphun::Token::getLength(morphun::Token *this)
{
  return (*((_DWORD *)this + 3) - *((_DWORD *)this + 2));
}

uint64_t morphun::Token::isSignificant(morphun::Token *this)
{
  return *((unsigned __int8 *)this + 64);
}

uint64_t morphun::Token::isWhitespace(morphun::Token *this)
{
  return *((unsigned __int8 *)this + 65);
}

uint64_t morphun::Token::getCleanValue(morphun::Token *this)
{
  return (uint64_t)this + 40;
}

uint64_t morphun::Token::getValue(morphun::Token *this)
{
  return (uint64_t)this + 16;
}

uint64_t morphun::Token::operator!=(uint64_t a1, uint64_t a2)
{
  return morphun::Token::operator==(a1, a2) ^ 1;
}

unint64_t morphun::Token::operator()(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(uint64_t **)(a2 + 16);
  uint64_t v2 = a2 + 16;
  uint64_t v3 = v4;
  int v5 = *(char *)(v2 + 23);
  if (v5 >= 0) {
    BOOL v6 = (uint64_t *)v2;
  }
  else {
    BOOL v6 = v3;
  }
  if (v5 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    uint64_t v7 = *(void *)(v2 + 8);
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v6, 2 * v7);
}

uint64_t virtual thunk to'morphun::Token::getStartChar(morphun::Token *this)
{
  return *(unsigned int *)((char *)this + *(void *)(*(void *)this - 48) + 8);
}

uint64_t virtual thunk to'morphun::Token::getEndChar(morphun::Token *this)
{
  return *(unsigned int *)((char *)this + *(void *)(*(void *)this - 56) + 12);
}

uint64_t morphun::Token::getPrevious(morphun::Token *this)
{
  return *((void *)this + 9);
}

uint64_t morphun::Token::setPrevious(uint64_t this, morphun::Token *a2)
{
  *(void *)(this + 72) = a2;
  return this;
}

uint64_t morphun::Token::getNext(morphun::Token *this)
{
  return *((void *)this + 10);
}

uint64_t morphun::Token::setNext(uint64_t this, morphun::Token *a2)
{
  *(void *)(this + 80) = a2;
  return this;
}

void virtual thunk to'morphun::Token::toString(morphun::Token *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

void morphun::Token_OverSizedToken::newInstance(morphun::Token_OverSizedToken *this)
{
}

void sub_1D2C80218(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7)
{
  *(void *)a1 = &unk_1F29F44D0;
  uint64_t result = morphun::Token::Token(a1, (uint64_t *)&off_1F2A050D8, a2, a3, __src, a5, a6, a7, 1);
  *(void *)uint64_t result = &off_1F2A08890;
  return result;
}

void morphun::Token_OverSizedToken::~Token_OverSizedToken(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1F2A050D8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::Token::~Token(this, (void **)&off_1F2A050D8);
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6)
{
  return morphun::Token_OverSizedToken::Token_OverSizedToken(a1, a2, a3, a4, a5, a6, a5, a6);
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8)
{
  uint64_t result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a7, a8, 1);
  uint64_t v10 = *a2;
  *(void *)uint64_t result = *a2;
  *(void *)((char *)result + *(void *)(v10 - 64)) = a2[4];
  *(void *)((char *)result + *(void *)(*(void *)result - 40)) = a2[5];
  return result;
}

morphun::Token *morphun::Token_OverSizedToken::Token_OverSizedToken(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5)
{
  *(void *)a1 = &unk_1F29F44D0;
  uint64_t result = morphun::Token::Token(a1, (uint64_t *)&off_1F2A050D8, a2, a3, __src, a5, __src, a5, 1);
  *(void *)uint64_t result = &off_1F2A08890;
  return result;
}

void morphun::dialog::language::IsCommonConceptFactory::~IsCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3308);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F3308);
}

BOOL morphun::readConfig(const void **a1, uint64_t a2)
{
  std::operator+<char16_t>((uint64_t)&v9, L"/com/apple/siri/tokenizer/data/config_", a1);
  std::basic_string<char16_t>::append(&v9, (const std::basic_string<char16_t>::value_type *)".", 0xBuLL);
  std::basic_string<char16_t> __p = v9;
  memset(&v9, 0, sizeof(v9));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  morphun::resources::DataResource::getProperties(&v11, (uint64_t *)p_p, size, 1);
  npc<std::map<std::u16string_view,char16_t const*>>(a2);
  uint64_t v5 = a2 + 8;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(a2 + 8));
  BOOL v6 = v12;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v6;
  uint64_t v7 = v13;
  *(void *)(a2 + 16) = v13;
  if (v7)
  {
    v6[2] = v5;
    BOOL v11 = &v12;
    BOOL v12 = 0;
    uint64_t v13 = 0;
    BOOL v6 = 0;
  }
  else
  {
    *(void *)a2 = v5;
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v6);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  return *(void *)(a2 + 16) != 0;
}

void sub_1D2C805F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v21 - 32));
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::u16string_view,char16_t const*>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C8068C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::TokenizerFactory::createTokenizer(morphun::TokenizerFactory *this, const morphun::util::ULocale *a2)
{
  uint64_t v2 = this;
  std::basic_string<char16_t> v52 = 0;
  {
    if (this) {
      operator new();
    }
  }
  uint64_t v3 = (uint64_t **)morphun::TOKENIZER_CACHE(void)::TOKENIZER_CACHE_;
  BOOL v4 = (std::mutex *)morphun::CLASS_MUTEX(this);
  std::mutex::lock(v4);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v3);
  uint64_t v5 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v3, (void *)v2 + 13);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v3);
  BOOL v6 = v3 + 1;
  if (v3 + 1 == v5)
  {
    std::mutex::unlock(v4);
  }
  else
  {
    std::basic_string<char16_t> v52 = v5[7];
    std::mutex::unlock(v4);
    if (v52) {
      operator new();
    }
  }
  std::basic_string<char16_t> v50 = 0;
  uint64_t v51 = 0;
  std::basic_string<char16_t> v49 = &v50;
  Config = morphun::util::ULocale::ULocale((morphun::util::ULocale *)v45, v2);
  int32_t v8 = v48;
  int32_t v9 = v47;
  if ((v48 & 0x80u) == 0) {
    uint64_t v10 = v48;
  }
  else {
    uint64_t v10 = v47;
  }
  if (v10)
  {
    while (1)
    {
      if ((v8 & 0x80u) == 0) {
        BOOL v11 = (const char *)&v46;
      }
      else {
        BOOL v11 = v46;
      }
      if ((v8 & 0x80u) == 0) {
        int32_t v12 = v8;
      }
      else {
        int32_t v12 = v9;
      }
      morphun::util::StringViewUtils::to_u16string(v11, v12, __p);
      Config = (morphun::util::LocaleUtils *)morphun::readConfig((const void **)&__p[0].__r_.__value_.__l.__data_, (uint64_t)&v49);
      int v13 = (int)Config;
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (v13) {
        break;
      }
      morphun::util::ULocale::getFallback((morphun::util::ULocale *)v45, (uint64_t)__p);
      morphun::util::ULocale::operator=((uint64_t)v45, (uint64_t)__p);
      int32_t v8 = v48;
      int32_t v9 = v47;
      if ((v48 & 0x80u) == 0) {
        uint64_t v14 = v48;
      }
      else {
        uint64_t v14 = v47;
      }
      if (!v14) {
        goto LABEL_23;
      }
    }
    std::basic_string<char16_t>::size_type v27 = v50;
    if (v50)
    {
      uint64_t v28 = &v50;
      do
      {
        unint64_t v29 = v27[5];
        if (v29 >= 0x18) {
          uint64_t v30 = 24;
        }
        else {
          uint64_t v30 = v27[5];
        }
        if (v30)
        {
          int v31 = (unsigned __int16 *)v27[4];
          std::basic_string<char16_t>::size_type v32 = L"tokenizer.alias.language";
          while (1)
          {
            unsigned int v33 = *v31;
            unsigned int v34 = *(unsigned __int16 *)v32;
            if (v33 < v34)
            {
              ++v27;
              goto LABEL_62;
            }
            if (v34 < v33) {
              break;
            }
            ++v31;
            ++v32;
            if (!--v30) {
              goto LABEL_57;
            }
          }
          uint64_t v28 = (void **)v27;
        }
        else
        {
LABEL_57:
          if (v29 < 0x18) {
            ++v27;
          }
          else {
            uint64_t v28 = (void **)v27;
          }
        }
LABEL_62:
        std::basic_string<char16_t>::size_type v27 = (void *)*v27;
      }
      while (v27);
      if (&v50 != v28)
      {
        unint64_t v35 = (unint64_t)v28[5];
        uint64_t v36 = 24;
        if (v35 < 0x18) {
          uint64_t v36 = (uint64_t)v28[5];
        }
        if (v36)
        {
          int v37 = (unsigned __int16 *)v28[4];
          unsigned __int8 v38 = L"tokenizer.alias.language";
          while (1)
          {
            unsigned int v39 = *(unsigned __int16 *)v38;
            unsigned int v40 = *v37;
            if (v39 < v40) {
              break;
            }
            if (v40 < v39) {
              goto LABEL_72;
            }
            ++v38;
            ++v37;
            if (!--v36) {
              goto LABEL_71;
            }
          }
        }
        else
        {
LABEL_71:
          if (v35 <= 0x18)
          {
LABEL_72:
            std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)v28[6]);
            Config = (morphun::util::LocaleUtils *)morphun::readConfig((const void **)&__p[0].__r_.__value_.__l.__data_, (uint64_t)&v49);
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p[0].__r_.__value_.__l.__data_);
            }
          }
        }
      }
    }
  }
LABEL_23:
  if (!v51)
  {
    if (morphun::util::gLogLevel <= 3)
    {
      (**(void (***)(std::basic_string<char16_t> *__return_ptr, morphun::TokenizerFactory *))v2)(&v42, v2);
      std::basic_string<char16_t>::insert(&v42, (std::basic_string<char16_t>::size_type)"T", (const std::basic_string<char16_t>::value_type *)0x12, v15);
      std::basic_string<char16_t> __dst = v42;
      memset(&v42, 0, sizeof(v42));
      Config = (morphun::util::LocaleUtils *)std::basic_string<char16_t>::append(&__dst, L" is unknown. The default will be used.", 0x26uLL);
      __p[0] = __dst;
      memset(&__dst, 0, sizeof(__dst));
      if (morphun::util::gLogLevel <= 3)
      {
        if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v16 = __p;
        }
        else {
          uint64_t v16 = (std::basic_string<char16_t> *)__p[0].__r_.__value_.__r.__words[0];
        }
        morphun::util::logToTopOfStackLogger((morphun::util *)3, 0, (uint64_t)v16);
      }
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
    }
    uint64_t v17 = morphun::util::LocaleUtils::ENGLISH(Config);
    uint64_t v20 = *(void *)(v17 + 8);
    uint64_t v18 = v17 + 8;
    uint64_t v19 = v20;
    uint64_t v21 = *(void *)(v18 + 8);
    if (*(char *)(v18 + 23) >= 0)
    {
      int32_t v22 = *(unsigned __int8 *)(v18 + 23);
    }
    else
    {
      uint64_t v18 = v19;
      int32_t v22 = v21;
    }
    morphun::util::StringViewUtils::to_u16string((const char *)v18, v22, __p);
    Config = (morphun::util::LocaleUtils *)morphun::readConfig((const void **)&__p[0].__r_.__value_.__l.__data_, (uint64_t)&v49);
    char v23 = (char)Config;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if ((v23 & 1) == 0)
    {
      exception = __cxa_allocate_exception(0x68uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "T");
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"TokenizerFactory");
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v42, (char *)L"/com/apple/siri/tokenizer/data/config_");
      morphun::exception::MissingResourceException::MissingResourceException((uint64_t)exception, (long long *)__p, (long long *)&__dst, (long long *)&v42);
    }
  }
  std::basic_string<char16_t>::size_type v24 = (std::mutex *)morphun::CLASS_MUTEX(Config);
  std::mutex::lock(v24);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v3);
  uint64_t v25 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v3, &v46);
  npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v3);
  if (v6 == v25)
  {
    npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v3);
    std::basic_string<char16_t>::size_type v26 = (uint64_t **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)v3, (void *)v2 + 13);
    npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v3);
    if (v6 == v26) {
      morphun::TokenizerFactory::createTokenizerObject((void (***)(std::basic_string<char16_t> *__return_ptr, void))v2, (uint64_t)&v49);
    }
    std::basic_string<char16_t> v52 = v26[7];
  }
  else
  {
    std::basic_string<char16_t> v52 = v25[7];
    npc<std::map<std::string,morphun::Tokenizer const*>>((uint64_t)v3);
    std::__tree<std::__value_type<std::string,morphun::Tokenizer const*>,std::__map_value_compare<std::string,std::__value_type<std::string,morphun::Tokenizer const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,morphun::Tokenizer const*>>>::__emplace_unique_key_args<std::string,std::string const&,morphun::Tokenizer const*&>(v3, (void *)v2 + 13, (uint64_t)v2 + 104, (uint64_t *)&v52);
  }
  std::mutex::unlock(v24);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(v50);
  operator new();
}

void sub_1D2C80CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
}

uint64_t morphun::CLASS_MUTEX(morphun *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::CLASS_MUTEX(void)::classMutex;
  if (!morphun::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C80F0C(_Unwind_Exception *a1)
{
}

uint64_t npc<std::map<std::string,morphun::Tokenizer const*>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C80F84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::TokenizerFactory::createTokenizerObject(void (***a1)(std::basic_string<char16_t> *__return_ptr, void), uint64_t a2)
{
  BOOL v4 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a2, (unsigned __int16 *)"t", 0x1EuLL);
  if ((void *)(a2 + 8) != v4)
  {
    int v5 = 0;
    BOOL v6 = (const UChar *)v4[6];
    int v7 = 12;
    do
    {
      int v8 = v5 + v7;
      if (v5 + v7 < 0 != __OFADD__(v5, v7)) {
        ++v8;
      }
      uint64_t v9 = (uint64_t)v8 >> 1;
      int32_t v10 = u_strcmp(v6, *((const UChar **)&morphun::TokenizerFactory::createTokenizerObject(morphun::util::ULocale const&,std::map<std::u16string_view,char16_t const*> const&)::TOKENIZER_CONSTRUCTORS+ 2 * (v8 >> 1)));
      if (v10 < 0)
      {
        int v7 = v9 - 1;
      }
      else
      {
        if (!v10)
        {
          if (morphun::util::gLogLevel <= 2)
          {
            (**a1)(&v18, a1);
            std::basic_string<char16_t>::insert(&v18, (std::basic_string<char16_t>::size_type)"T", (const std::basic_string<char16_t>::value_type *)0x12, v15);
            std::basic_string<char16_t> v19 = v18;
            memset(&v18, 0, sizeof(v18));
            std::basic_string<char16_t>::append(&v19, word_1D2ED07DE, 0x29uLL);
            std::basic_string<char16_t> __p = v19;
            memset(&v19, 0, sizeof(v19));
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              p_p = &__p;
            }
            else {
              p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
            }
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
            }
            morphun::util::Logger::infoComponent((uint64_t)"T", p_p, size);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v19.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v18.__r_.__value_.__l.__data_);
            }
          }
          operator new();
        }
        int v5 = v9 + 1;
      }
    }
    while (v5 <= v7);
  }
  (**a1)(&v19, a1);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, L"Error creating tokenizer for locale ", &v19, v11);
  if (morphun::util::gLogLevel <= 4)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int32_t v12 = &__p;
    }
    else {
      int32_t v12 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)v12);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  exception = __cxa_allocate_exception(0x38uLL);
  (**a1)(&v19, a1);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, L"Error creating tokenizer for locale ", &v19, v14);
  morphun::exception::InvalidConfigurationException::InvalidConfigurationException((uint64_t)exception, (long long *)&__p);
}

void sub_1D2C81308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::string,morphun::Tokenizer const*>,std::__map_value_compare<std::string,std::__value_type<std::string,morphun::Tokenizer const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,morphun::Tokenizer const*>>>::__emplace_unique_key_args<std::string,std::string const&,morphun::Tokenizer const*&>(uint64_t **a1, void *a2, uint64_t a3, uint64_t *a4)
{
  int v8 = a1 + 1;
  int v7 = a1[1];
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v7;
        int32_t v10 = v7 + 4;
        if (!std::less<std::string>::operator()[abi:ne180100](a2, v7 + 4)) {
          break;
        }
        int v7 = *v8;
        std::basic_string<char16_t>::size_type v11 = v8;
        if (!*v8) {
          goto LABEL_9;
        }
      }
      uint64_t result = (uint64_t *)std::less<std::string>::operator()[abi:ne180100](v10, a2);
      if (!result) {
        break;
      }
      std::basic_string<char16_t>::size_type v11 = v8 + 1;
      int v7 = v8[1];
      if (!v7) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    std::basic_string<char16_t>::size_type v11 = a1 + 1;
LABEL_9:
    int v13 = (uint64_t *)operator new(0x40uLL);
    std::basic_string<char16_t>::size_type v14 = (std::string *)(v13 + 4);
    if (*(char *)(a3 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v14, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)&v14->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
      v13[6] = *(void *)(a3 + 16);
    }
    v13[7] = *a4;
    uint64_t *v13 = 0;
    v13[1] = 0;
    v13[2] = (uint64_t)v8;
    *std::basic_string<char16_t>::size_type v11 = v13;
    std::basic_string<char16_t>::size_type v15 = (uint64_t *)**a1;
    if (v15)
    {
      *a1 = v15;
      int v13 = *v11;
    }
    uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return result;
}

void sub_1D2C81518(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::util::AttributeFactory::createAttributeInstance(morphun::analysis::util::AttributeFactory *this, const std::type_info *a2)
{
  uint64_t v3 = std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::find<std::type_index>((void *)this + 1, a2->__type_name);
  if (!v3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    int v8 = (const char *)(a2->__type_name & 0x7FFFFFFFFFFFFFFFLL);
    int32_t v9 = strlen(v8);
    morphun::util::StringViewUtils::to_u16string(v8, v9, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "C", &v11, v10);
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v12);
  }
  uint64_t v4 = v3[6];
  if (!v4) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  int v5 = *(uint64_t (**)(void))(*(void *)v4 + 48);

  return v5();
}

void sub_1D2C81634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v20);
  goto LABEL_8;
}

void *std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::find<std::type_index>(void *a1, uint64_t a2)
{
  unint64_t v3 = a2;
  if (a2 < 0)
  {
    uint64_t v4 = (unsigned __int8 *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v5 = 5381;
    do
    {
      unint64_t v3 = v5;
      unsigned int v6 = *v4++;
      uint64_t v5 = (33 * v5) ^ v6;
    }
    while (v6);
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v3;
    if (v3 >= *(void *)&v7) {
      unint64_t v10 = v3 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v3;
  }
  std::basic_string<char16_t> v11 = *(void **)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  long long v12 = (void *)*v11;
  if (*v11)
  {
    do
    {
      unint64_t v13 = v12[1];
      if (v3 == v13)
      {
        if (std::type_info::operator==[abi:ne180100](*(void *)(v12[2] + 8), a2)) {
          return v12;
        }
      }
      else
      {
        if (v9 > 1)
        {
          if (v13 >= *(void *)&v7) {
            v13 %= *(void *)&v7;
          }
        }
        else
        {
          v13 &= *(void *)&v7 - 1;
        }
        if (v13 != v10) {
          return 0;
        }
      }
      long long v12 = (void *)*v12;
    }
    while (v12);
  }
  return v12;
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);

  JUMPOUT(0x1D942B8B0);
}

void morphun::analysis::util::AttributeFactory::~AttributeFactory(morphun::analysis::util::AttributeFactory *this)
{
  *(void *)this = &off_1F2A10208;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A10208;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);
}

uint64_t std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::__deallocate_node(*(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::__deallocate_node(void *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    do
    {
      uint64_t v2 = (void *)*v1;
      std::__function::__value_func<morphun::analysis::util::AttributeImpl * ()(void)>::~__value_func[abi:ne180100](v1 + 3);
      operator delete(v1);
      uint64_t v1 = v2;
    }
    while (v2);
  }
}

void *std::__function::__value_func<morphun::analysis::util::AttributeImpl * ()(void)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

double morphun::analysis::util::AttributeFactory::AttributeFactory(morphun::analysis::util::AttributeFactory *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  return result;
}

double morphun::analysis::util::AttributeFactory::AttributeFactory(morphun::analysis::util::AttributeFactory *this)
{
  *(void *)this = &off_1F2A10208;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  return result;
}

void morphun::analysis::util::AttributeFactory::~AttributeFactory(morphun::analysis::util::AttributeFactory *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);
}

void virtual thunk to'morphun::analysis::util::AttributeFactory::~AttributeFactory(morphun::analysis::util::AttributeFactory *this)
{
  uint64_t v1 = (void *)((char *)this + *(void *)(*(void *)this - 32));
  *uint64_t v1 = &off_1F2A10208;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)(v1 + 1));
}

{
  void *v1;
  uint64_t vars8;

  uint64_t v1 = (void *)((char *)this + *(void *)(*(void *)this - 32));
  *uint64_t v1 = &off_1F2A10208;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)(v1 + 1));

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(morphun::analysis::util::AttributeFactory *this)
{
  {
    operator new();
  }
  return morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(void)::DEFAULT_ATTRIBUTE_FACTORY_;
}

void sub_1D2C81C88(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

void morphun::analysis::util::AttributeFactory::getStaticImplementation()
{
}

void sub_1D2C81DF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  morphun::analysis::util::AttributeFactory::~AttributeFactory(v2, (uint64_t *)&off_1F2A078B8);
  MEMORY[0x1D942B8B0]();
  _Unwind_Resume(a1);
}

void morphun::tokenizer::dictionary::SegmentValidator::~SegmentValidator(morphun::tokenizer::dictionary::SegmentValidator *this)
{
}

void sub_1D2C81E9C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void mtok_createTokenizer(const __CFLocale *a1)
{
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v2, a1);
  morphun::TokenizerFactory::createTokenizer((morphun::TokenizerFactory *)v2, v1);
}

void sub_1D2C81F0C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a2 == 1)
  {
    long long v12 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v12, v9, v13);
    __cxa_end_catch();
    JUMPOUT(0x1D2C81EF4);
  }
  _Unwind_Resume(a1);
}

uint64_t mtok_createTokenChain(uint64_t a1, const __CFString *a2)
{
  npc<morphun::Tokenizer const>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 24))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1D2C81FF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    std::basic_string<char16_t> v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2C81FDCLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::Tokenizer const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C820A4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

uint64_t mtok_getMaxInputSize(uint64_t a1)
{
  return *(unsigned int *)(npc<morphun::Tokenizer const>(a1) + 36);
}

uint64_t mtok_setMaxInputSize(uint64_t a1, int a2)
{
  uint64_t result = npc<morphun::Tokenizer>(a1);
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1D2C82210(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mtok_getMaxTokens(uint64_t a1)
{
  return *(unsigned int *)(npc<morphun::Tokenizer const>(a1) + 32);
}

void mtok_setMaxTokens(uint64_t a1, int a2)
{
  unint64_t v3 = (morphun::Tokenizer *)npc<morphun::Tokenizer>(a1);
  morphun::Tokenizer::setMaxTokens(v3, a2);
}

uint64_t mtok_setStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = npc<morphun::Tokenizer>(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 32))(v3, a2);
}

void *morphun::analysis::stemmer::DeStemFilter::reset(morphun::analysis::stemmer::DeStemFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 14) = result;
  return result;
}

uint64_t morphun::analysis::stemmer::DeStemFilter::incrementToken(morphun::analysis::stemmer::DeStemFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = *((void *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
    {
      uint64_t v5 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      unsigned int v6 = (char *)v5 + *(void *)(*v5 - 96);
      if (v6[23] < 0)
      {
        uint8x8_t v8 = *(const UChar **)v6;
        uint64_t v7 = *((void *)v6 + 1);
      }
      else
      {
        uint64_t v7 = v6[23];
        uint8x8_t v8 = (const UChar *)((char *)v5 + *(void *)(*v5 - 96));
      }
      morphun::dictionary::DictionaryMetaData::getPropertyValues(*((void *)this + 15), v8, v7, (unsigned __int16 *)"l", 5uLL, v28);
      unint64_t v9 = (const std::basic_string<char16_t> *)v28[0];
      if (v28[0] != v28[1])
      {
        if (*(char *)(v28[0] + 23) < 0) {
          unint64_t v10 = *(void *)(v28[0] + 8);
        }
        else {
          unint64_t v10 = *(unsigned __int8 *)(v28[0] + 23);
        }
        if (v10 >= 2)
        {
          unint64_t v13 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v13 + *(void *)(*v13 - 96)), v9);
        }
        goto LABEL_47;
      }
      unint64_t v29 = 0;
      if (v6[23] < 0)
      {
        long long v12 = *(const UChar **)v6;
        uint64_t v11 = *((void *)v6 + 1);
      }
      else
      {
        uint64_t v11 = v6[23];
        long long v12 = (const UChar *)v6;
      }
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 15), (uint64_t)&v29, v12, v11)&& (*((void *)this + 16) & v29) != 0)
      {
        goto LABEL_47;
      }
      std::basic_string<char16_t>::size_type v14 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      std::basic_string<char16_t>::size_type v15 = (std::basic_string<char16_t> *)((char *)v14 + *(void *)(*v14 - 96));
      int v16 = v6[23];
      if (v16 >= 0) {
        int v17 = v6[23];
      }
      else {
        int v17 = *((_DWORD *)v6 + 2);
      }
      if (v17 < 5)
      {
        int v18 = v17;
LABEL_46:
        std::basic_string<char16_t>::resize(v15, v18, 0);
LABEL_47:
        unint64_t v29 = (unint64_t)v28;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
        return v3;
      }
      if (v16 >= 0) {
        std::basic_string<char16_t> v19 = (const UChar *)v6;
      }
      else {
        std::basic_string<char16_t> v19 = *(const UChar **)v6;
      }
      int v20 = v19[v17 - 1];
      int v21 = v19[v17 - 2];
      if (v17 < 7)
      {
        if (v17 != 6) {
          goto LABEL_41;
        }
      }
      else
      {
        int v18 = v17 - 3;
        if (v19[v17 - 3] == 110 && v21 == 101 && v20 == 110) {
          goto LABEL_46;
        }
      }
      if (v21 == 101)
      {
        int v18 = v17 - 2;
        if ((v20 - 114) < 2) {
          goto LABEL_46;
        }
        if (v20 != 101)
        {
          if (v20 == 110) {
            int v18 = v17 - 2;
          }
          else {
            int v18 = v17;
          }
          goto LABEL_46;
        }
LABEL_45:
        int v18 = v17 - 1;
        goto LABEL_46;
      }
      if (v21 == 115)
      {
        int v18 = v17 - 2;
        if (v20 == 101) {
          goto LABEL_46;
        }
      }
LABEL_41:
      unsigned int v22 = v20 - 101;
      BOOL v23 = v22 > 0xE;
      int v24 = (1 << v22) & 0x6201;
      BOOL v25 = v23 || v24 == 0;
      int v18 = v17;
      if (v25) {
        goto LABEL_46;
      }
      goto LABEL_45;
    }
  }
  return v3;
}

void sub_1D2C826B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a12);
  _Unwind_Resume(a1);
}

void sub_1D2C82738(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::DeStemFilter::~DeStemFilter(morphun::analysis::stemmer::DeStemFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07C20);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07C20);
}

uint64_t **com::apple::siri::tokenizer::data::config_is::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t *morphun::analysis::tokenattributes::CharTermAttribute::CharTermAttribute(uint64_t *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(void *)(v2 - 88)) = a2[1];
  *(uint64_t *)((char *)this + *(void *)(*this - 56)) = a2[2];
  *(uint64_t *)((char *)this + *(void *)(*this - 40)) = a2[3];
  return this;
}

void *morphun::analysis::tokenattributes::CharTermAttribute::CharTermAttribute(void *this, const morphun::analysis::tokenattributes::CharTermAttribute *a2)
{
  uint64_t v2 = *(void *)a2;
  *this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v2 - 88)) = *((void *)a2 + 1);
  *(void *)((char *)this + *(void *)(*this - 56)) = *((void *)a2 + 2);
  *(void *)((char *)this + *(void *)(*this - 40)) = *((void *)a2 + 3);
  return this;
}

uint64_t morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(void *a1, uint64_t a2)
{
  if (!a1[9] || (uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2)) == 0)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    uint64_t v8 = a1[10];
    npc<morphun::dialog::SemanticFeature const>(v8);
    unint64_t v9 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v8);
    int Count = morphun::grammar::synthesis::PtGrammarSynthesizer::getCount(v9);
    if (!Count)
    {
      morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::determine((uint64_t)(a1 + 12), v7, __p);
      int Count = morphun::grammar::synthesis::PtGrammarSynthesizer::getCount((unsigned __int16 *)__p);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
    }
    uint64_t v11 = a1[11];
    npc<morphun::dialog::SemanticFeature const>(v11);
    long long v12 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v11);
    int Gender = morphun::grammar::synthesis::PtGrammarSynthesizer::getGender(v12);
    if (!Gender)
    {
      morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::determine((uint64_t)(a1 + 39), v7, __p);
      int Gender = morphun::grammar::synthesis::PtGrammarSynthesizer::getGender((unsigned __int16 *)__p);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
    }
    if (Count == 1 && Gender == 1)
    {
      int v18 = a1 + 75;
    }
    else if (Count == 1 && Gender == 2)
    {
      int v18 = a1 + 78;
    }
    else if (Count == 2 && Gender == 1)
    {
      int v18 = a1 + 81;
    }
    else if (Count == 2 && Gender == 2)
    {
      int v18 = a1 + 84;
    }
    else
    {
      if (Count != 1)
      {
        std::basic_string<char16_t> v19 = *(uint64_t (**)(void *, uint64_t, void *))(*a1 + 32);
        if (Count == 2) {
          int v18 = a1 + 72;
        }
        else {
          int v18 = a1 + 66;
        }
        return v19(a1, a2, v18);
      }
      int v18 = a1 + 69;
    }
    std::basic_string<char16_t> v19 = *(uint64_t (**)(void *, uint64_t, void *))(*a1 + 32);
    return v19(a1, a2, v18);
  }
  uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*a1 + 32);

  return v5(a1, a2, v4);
}

void sub_1D2C82CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2C82D54(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::~PtGrammarSynthesizer_ArticleLookupFunction(void **this)
{
  morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::~PtGrammarSynthesizer_ArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;

  *this = &off_1F2A0D590;
  if (*((char *)this + 695) < 0) {
    operator delete(this[84]);
  }
  if (*((char *)this + 671) < 0) {
    operator delete(this[81]);
  }
  if (*((char *)this + 647) < 0) {
    operator delete(this[78]);
  }
  if (*((char *)this + 623) < 0) {
    operator delete(this[75]);
  }
  if (*((char *)this + 599) < 0) {
    operator delete(this[72]);
  }
  if (*((char *)this + 575) < 0) {
    operator delete(this[69]);
  }
  if (*((char *)this + 551) < 0) {
    operator delete(this[66]);
  }
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction((morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *)(this + 39));
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction((morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *)(this + 12));
  uint64_t v2 = this[4];
  this[4] = 0;
  if (v2) {
    (*(void (**)(void *))(*(void *)v2 + 16))(v2);
  }
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_ArticleLookupFunction::PtGrammarSynthesizer_ArticleLookupFunction(morphun::dialog::DefaultArticleLookupFunction *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  *(void *)a1 = &unk_1F29FB158;
  uint64_t v11 = *(unsigned __int8 *)(a3 + 23);
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *(void *)(a3 + 8);
  }
  long long v12 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A06578, a2, v11 != 0, 1);
  *(void *)a1 = &off_1F2A0D590;
  unint64_t v13 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::PORTUGUESE(v12);
  uint64_t Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v13, v14);
  if (Dictionary)
  {
    *((void *)a1 + 3) = Dictionary;
    int v16 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::PORTUGUESE(Dictionary);
    morphun::TokenizerFactory::createTokenizer(v16, v17);
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2C836C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, void **a10, morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *a11, morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 + 671) < 0) {
    operator delete(*v34);
  }
  if (*(char *)(v33 + 647) < 0) {
    operator delete(*v37);
  }
  if (*(char *)(v33 + 623) < 0) {
    operator delete(*v36);
  }
  if (*(char *)(v33 + 599) < 0) {
    operator delete(*v35);
  }
  if (*(char *)(v33 + 575) < 0) {
    operator delete(*a9);
  }
  if (*(char *)(v33 + 551) < 0) {
    operator delete(*a10);
  }
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction(a11);
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction(a12);
  uint64_t v39 = *(void *)(v33 + 32);
  *(void *)(v33 + 32) = 0;
  if (v39) {
    (*(void (**)(uint64_t))(*(void *)v39 + 16))(v39);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::DefaultAnalyzerFactory::createAnalyzer(morphun::analysis::DefaultAnalyzerFactory *this, const morphun::util::ULocale *a2)
{
  uint64_t v4 = (std::mutex *)((char *)this + 272);
  std::mutex::lock((std::mutex *)((char *)this + 272));
  uint64_t v5 = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>((uint64_t)this + 216, (uint64_t)a2);
  unsigned int v6 = v5;
  if ((void *)((char *)this + 224) == v5)
  {
    int v37 = (uint64_t **)((char *)this + 216);
    std::mutex::unlock(v4);
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)v41, a2);
    uint64_t v8 = v43;
    if ((v43 & 0x80u) != 0) {
      uint64_t v8 = v42;
    }
    if (v8)
    {
      while (2)
      {
        int v9 = 0;
        if (v45 >= 0) {
          unint64_t v10 = (const char *)&v44;
        }
        else {
          unint64_t v10 = v44;
        }
        int v11 = 46;
        do
        {
          int v12 = v11 + v9;
          if (v11 + v9 < 0 != __OFADD__(v11, v9)) {
            ++v12;
          }
          uint64_t v13 = (uint64_t)v12 >> 1;
          int v14 = strcmp(v10, (&morphun::analysis::DefaultAnalyzerFactory::createAnalyzer(morphun::util::ULocale const&)::CONSTRUCTOR_MAP)[2 * (v12 >> 1)]);
          if (v14 < 0)
          {
            int v11 = v13 - 1;
          }
          else
          {
            if (!v14)
            {
              int v16 = (&morphun::analysis::DefaultAnalyzerFactory::createAnalyzer(morphun::util::ULocale const&)::CONSTRUCTOR_MAP)[2 * v13 + 1];
              std::mutex::lock(v4);
              int v17 = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>((uint64_t)v37, (uint64_t)v41);
              if (v6 == v17)
              {
                uint64_t v18 = ((uint64_t (*)(const morphun::util::ULocale *, void))v16)(a2, *((void *)this + 33));
                uint64_t v7 = v18;
                int v20 = (uint64_t *)*((void *)this + 31);
                unint64_t v19 = *((void *)this + 32);
                if ((unint64_t)v20 >= v19)
                {
                  unsigned int v22 = (void *)*((void *)this + 30);
                  uint64_t v23 = v20 - v22;
                  unint64_t v24 = v23 + 1;
                  if ((unint64_t)(v23 + 1) >> 61) {
                    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                  }
                  uint64_t v25 = v19 - (void)v22;
                  if (v25 >> 2 > v24) {
                    unint64_t v24 = v25 >> 2;
                  }
                  if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v26 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v26 = v24;
                  }
                  if (v26)
                  {
                    if (v26 >> 61) {
                      std::__throw_bad_array_new_length[abi:ne180100]();
                    }
                    std::basic_string<char16_t>::size_type v27 = (char *)operator new(8 * v26);
                  }
                  else
                  {
                    std::basic_string<char16_t>::size_type v27 = 0;
                  }
                  uint64_t v28 = (uint64_t *)&v27[8 * v23];
                  *uint64_t v28 = v7;
                  char v21 = v28 + 1;
                  if (v20 != v22)
                  {
                    do
                    {
                      uint64_t v29 = *--v20;
                      *--uint64_t v28 = v29;
                    }
                    while (v20 != v22);
                    int v20 = (uint64_t *)*((void *)this + 30);
                  }
                  *((void *)this + 30) = v28;
                  *((void *)this + 31) = v21;
                  *((void *)this + 32) = &v27[8 * v26];
                  if (v20) {
                    operator delete(v20);
                  }
                }
                else
                {
                  *int v20 = v18;
                  char v21 = v20 + 1;
                }
                *((void *)this + 31) = v21;
                uint64_t v30 = (uint64_t **)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>((uint64_t)v37, v46, (uint64_t)v41);
                if (!*v30)
                {
                  int v31 = v30;
                  std::basic_string<char16_t>::size_type v32 = operator new(0xA8uLL);
                  unsigned __int8 v38 = v32;
                  uint64_t v39 = v6;
                  char v40 = 0;
                  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v32 + 4), (const morphun::util::ULocale *)v41);
                  v32[20] = v7;
                  char v40 = 1;
                  std::__tree<std::u16string_view>::__insert_node_at(v37, v46[0], v31, v32);
                  unsigned __int8 v38 = 0;
                  std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)&v38);
                }
              }
              else
              {
                uint64_t v7 = v17[20];
              }
              uint64_t v33 = (uint64_t **)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>((uint64_t)v37, v46, (uint64_t)a2);
              if (!*v33)
              {
                unsigned int v34 = v33;
                unint64_t v35 = operator new(0xA8uLL);
                unsigned __int8 v38 = v35;
                uint64_t v39 = v6;
                char v40 = 0;
                morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v35 + 4), a2);
                v35[20] = v7;
                char v40 = 1;
                std::__tree<std::u16string_view>::__insert_node_at(v37, v46[0], v34, v35);
                unsigned __int8 v38 = 0;
                std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)&v38);
              }
              std::mutex::unlock(v4);
              return v7;
            }
            int v9 = v13 + 1;
          }
        }
        while (v9 <= v11);
        morphun::util::ULocale::getFallback((morphun::util::ULocale *)v41, (uint64_t)&v38);
        morphun::util::ULocale::operator=((uint64_t)v41, (uint64_t)&v38);
        uint64_t v15 = v43;
        if ((v43 & 0x80u) != 0) {
          uint64_t v15 = v42;
        }
        if (v15) {
          continue;
        }
        break;
      }
    }
    return (uint64_t)this + 8;
  }
  else
  {
    uint64_t v7 = v5[20];
    std::mutex::unlock(v4);
  }
  return v7;
}

void sub_1D2C83CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27)
{
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)&a11);
  std::mutex::unlock(v27);
  _Unwind_Resume(a1);
}

void *std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  long long v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)(v3 + 4), a2);
    uint64_t v7 = v3 + 1;
    if (!v6)
    {
      uint64_t v7 = v3;
      uint64_t v5 = v3;
    }
    long long v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<morphun::util::ULocale>::operator()[abi:ne180100](a2, (uint64_t)(v5 + 4))) {
    return v2;
  }
  return v5;
}

void std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void ***)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
    operator delete(v1);
    }
  }
}

void morphun::analysis::constructor<morphun::analysis::ZhAnalyzer>()
{
}

void sub_1D2C83E90(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::SvAnalyzer>()
{
}

void sub_1D2C83FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::RuAnalyzer>()
{
}

void sub_1D2C8412C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::PtBrAnalyzer>()
{
}

void sub_1D2C842D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1D942B8B0](v27, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::NlAnalyzer>()
{
}

void sub_1D2C8446C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::NbAnalyzer>()
{
}

void sub_1D2C845D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::JaAnalyzer>()
{
}

void sub_1D2C846BC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::ItAnalyzer>()
{
}

void sub_1D2C847F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::HeAnalyzer>()
{
}

void sub_1D2C848E0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::FrAnalyzer>()
{
}

void sub_1D2C849E0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::FiAnalyzer>()
{
}

void sub_1D2C84B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::EsAnalyzer>()
{
}

void sub_1D2C84C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::EnAnalyzer>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2C85124(_Unwind_Exception *a1)
{
  uint64_t v5 = 792;
  while (1)
  {
    if (*(char *)(v3 + v5 - 1) < 0) {
      operator delete(*(void **)(v3 + v5 - 24));
    }
    v5 -= 24;
    if (!v5)
    {
      MEMORY[0x1D942B8B0](v2, 0x1020C4062D53EE8);
      MEMORY[0x1D942B8B0](v1, 0x10F3C403D3B7C4FLL);
      _Unwind_Resume(a1);
    }
  }
}

void morphun::analysis::constructor<morphun::analysis::DeAnalyzer>()
{
}

void sub_1D2C852E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::DaAnalyzer>()
{
}

void sub_1D2C85444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::MinimalAnalyzer>()
{
}

void sub_1D2C85530(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::constructor<morphun::analysis::ArAnalyzer>()
{
}

void sub_1D2C855F0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C403D3B7C4FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::DefaultAnalyzerFactory::~DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::analysis::DefaultAnalyzerFactory::~DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[3];
  uint64_t v4 = (void *)*((void *)this + 30);
  uint64_t v5 = (void *)*((void *)this + 31);
  while (v4 != v5)
  {
    if (*v4) {
      (*(void (**)(void))(*(void *)*v4 + 16))(*v4);
    }
    ++v4;
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 272));
  BOOL v6 = (void *)*((void *)this + 30);
  if (v6)
  {
    *((void *)this + 31) = v6;
    operator delete(v6);
  }
  std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*((void ***)this + 28));
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer((void **)this + 1, &off_1F2A07100);
}

void std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(void **a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, uint64_t *a2)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(this, a2, 0xAAuLL);
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, uint64_t *a2, unint64_t a3)
{
  uint64_t v5 = a2[1];
  *(void *)this = v5;
  *(void *)((char *)this + *(void *)(v5 - 40)) = a2[2];
  uint64_t v6 = *a2;
  *(void *)this = *a2;
  uint64_t v7 = (morphun::util::LocaleUtils *)a2[3];
  *(void *)((char *)this + *(void *)(v6 - 40)) = v7;
  uint64_t v8 = (uint64_t *)((char *)this + 8);
  int v9 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(v7);
  *uint64_t v8 = (uint64_t)&unk_1F2A08C08;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v8, (uint64_t *)&off_1F2A07100, v9, 0, a3);
  *uint64_t v8 = (uint64_t)&off_1F2A0F0C0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((void *)this + 29) = 0;
  *((void *)this + 27) = (char *)this + 224;
  *((void *)this + 31) = 0;
  *((void *)this + 32) = 0;
  *((void *)this + 33) = a3;
  *((void *)this + 34) = 850045863;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *((void *)this + 41) = 0;
  if (a3 >= 0x2000)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    int v12 = (morphun::util::StringUtils *)a3;
    uint64_t v13 = exception;
    morphun::util::StringUtils::to_u16string(v12, &v15);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v16, "U", &v15, v14);
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v13, &v16);
  }
  return this;
}

void sub_1D2C85A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void ***a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a16 < 0)
  {
    operator delete(a11);
    if ((v25 & 1) == 0)
    {
LABEL_8:
      std::mutex::~mutex((std::mutex *)(a9 + 32));
      uint64_t v27 = *(void **)a9;
      if (*(void *)a9)
      {
        *(void *)(v22 + 248) = v27;
        operator delete(v27);
      }
      std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*a10);
      morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(v23, &off_1F2A07100);
      _Unwind_Resume(a1);
    }
  }
  else if (!v25)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v24);
  goto LABEL_8;
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(this, (morphun::util::StringUtils *)0xAA);
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this, morphun::util::StringUtils *a2)
{
  *(void *)this = &off_1F2A0FE60;
  uint64_t v4 = (uint64_t *)((char *)this + 8);
  uint64_t v5 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ENGLISH(this);
  *((void *)this + 1) = &unk_1F2A08C08;
  morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer(v4, (uint64_t *)&off_1F2A07100, v5, 0, (uint64_t)a2);
  *((void *)this + 1) = &off_1F2A0F0C0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((void *)this + 29) = 0;
  *((void *)this + 27) = (char *)this + 224;
  *((void *)this + 31) = 0;
  *((void *)this + 32) = 0;
  *((void *)this + 33) = a2;
  *((void *)this + 34) = 850045863;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *((void *)this + 41) = 0;
  if ((unint64_t)a2 >= 0x2000)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string(a2, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "U", &v9, v8);
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v10);
  }
  return this;
}

void sub_1D2C85C34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void ***a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a16 < 0)
  {
    operator delete(a11);
    if ((v25 & 1) == 0)
    {
LABEL_8:
      std::mutex::~mutex((std::mutex *)(a9 + 32));
      uint64_t v27 = *(void **)a9;
      if (*(void *)a9)
      {
        *(void *)(v23 + 248) = v27;
        operator delete(v27);
      }
      std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*a10);
      morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(v22, &off_1F2A07100);
      _Unwind_Resume(a1);
    }
  }
  else if (!v25)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v24);
  goto LABEL_8;
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *a1, uint64_t *a2, unint64_t *a3)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(a1, a2, *a3);
}

morphun::analysis::DefaultAnalyzerFactory *morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *a1, morphun::util::StringUtils **a2)
{
  return morphun::analysis::DefaultAnalyzerFactory::DefaultAnalyzerFactory(a1, *a2);
}

void virtual thunk to'morphun::analysis::DefaultAnalyzerFactory::~DefaultAnalyzerFactory(morphun::analysis::DefaultAnalyzerFactory *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::analysis::DefaultAnalyzerFactory::DEFAULT_FEATURE_CONFIG(morphun::analysis::DefaultAnalyzerFactory *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::analysis::DefaultAnalyzerFactory::DEFAULT_FEATURE_CONFIG(void)::DEFAULT_FEATURE_CONFIG_;
  if (!morphun::analysis::DefaultAnalyzerFactory::DEFAULT_FEATURE_CONFIG(void)::DEFAULT_FEATURE_CONFIG_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C85E04(_Unwind_Exception *a1)
{
}

uint64_t morphun::analysis::DefaultAnalyzerFactory::getDefaultInstance(morphun::analysis::DefaultAnalyzerFactory *this)
{
  {
    operator new();
  }
  return morphun::analysis::DefaultAnalyzerFactory::getDefaultInstance(void)::DEFAULT_FACTORY_;
}

void sub_1D2C85EA8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40F4CE41AFLL);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain::~NlGrammarSynthesizer_InflectorPatternChain(morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain *this)
{
  morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain::~NlGrammarSynthesizer_InflectorPatternChain(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  void *v3;

  *(void *)this = &unk_1F2A0D540;
  uint64_t v2 = (void *)*((void *)this + 1);
  uint64_t v3 = (void *)*((void *)this + 2);
  if (v2 != v3)
  {
    do
    {
      if (*v2) {
        (*(void (**)(void))(*(void *)*v2 + 16))(*v2);
      }
      ++v2;
    }
    while (v2 != v3);
    uint64_t v2 = (void *)*((void *)this + 1);
  }
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }
}

void morphun::dialog::SemanticValue::~SemanticValue(void **this)
{
  morphun::dialog::SemanticValue::~SemanticValue(this);

  JUMPOUT(0x1D942B8B0);
}

{
  if (*((char *)this + 55) < 0) {
    operator delete(this[4]);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

double morphun::dialog::SemanticValue::toString@<D0>(morphun::dialog::SemanticValue *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, (const void **)((char *)this + *(void *)(*(void *)this - 40)), 35);
  uint64_t v4 = (char *)this + *(void *)(*(void *)this - 40);
  uint64_t v7 = (const std::basic_string<char16_t>::value_type *)*((void *)v4 + 3);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = v7;
  int v8 = v5[23];
  if (v8 >= 0) {
    std::basic_string<char16_t> v9 = (const std::basic_string<char16_t>::value_type *)v5;
  }
  else {
    std::basic_string<char16_t> v9 = v6;
  }
  if (v8 >= 0) {
    std::basic_string<char16_t>::size_type v10 = v5[23];
  }
  else {
    std::basic_string<char16_t>::size_type v10 = *((void *)v5 + 1);
  }
  std::basic_string<char16_t>::append(&v12, v9, v10);
  double result = *(double *)&v12.__r_.__value_.__l.__data_;
  *a2 = v12;
  return result;
}

void sub_1D2C860D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *morphun::dialog::SemanticValue::SemanticValue(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  void *result = *a2;
  *(uint64_t *)((char *)result + *(void *)(v2 - 48)) = a2[1];
  return result;
}

uint64_t morphun::dialog::SemanticValue::SemanticValue(uint64_t a1, long long *a2, long long *a3)
{
  *(void *)a1 = &off_1F2A08DB8;
  return a1;
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(std::basic_string<char16_t> *this, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  uint64_t v6 = this + 1;
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v6, *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  return this;
}

void sub_1D2C8623C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void virtual thunk to'morphun::dialog::SemanticValue::~SemanticValue(morphun::dialog::SemanticValue *this)
{
}

{
  uint64_t vars8;

  morphun::dialog::SemanticValue::~SemanticValue((void **)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

double virtual thunk to'morphun::dialog::SemanticValue::toString@<D0>(morphun::dialog::SemanticValue *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  return morphun::dialog::SemanticValue::toString((morphun::dialog::SemanticValue *)((char *)this + *(void *)(*(void *)this - 24)), a2);
}

void *morphun::analysis::filter::PunctuationFilter::reset(morphun::analysis::filter::PunctuationFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  double result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 14) = result;
  return result;
}

uint64_t morphun::analysis::filter::PunctuationFilter::incrementToken(morphun::analysis::filter::PunctuationFilter *this)
{
  while (2)
  {
    uint64_t v2 = *((void *)this + 12);
    if (!v2)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
    if (v3)
    {
      uint64_t v4 = *((void *)this + 14);
      if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
      {
        long long v5 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        uint64_t v6 = (char *)v5 + *(void *)(*v5 - 96);
        if (v6[23] < 0) {
          uint64_t v7 = *((void *)v6 + 1);
        }
        else {
          LODWORD(v7) = v6[23];
        }
        int v8 = 0;
        do
        {
          if (v8 >= (int)v7) {
            return 1;
          }
          std::basic_string<char16_t> v9 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          uint64_t v10 = (uint64_t)v9 + *(void *)(*v9 - 96);
          if (*(char *)(v10 + 23) < 0)
          {
            uint64_t v12 = v10;
            uint64_t v10 = *(void *)v10;
            uint64_t v11 = *(void *)(v12 + 8);
          }
          else
          {
            LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
          }
          uint64_t v13 = morphun::util::StringViewUtils::codePointAt(v10, v11, v8);
          int v14 = MEMORY[0x1D942C150](**((void **)this + 16), v13);
          if (v13 < 0x10000) {
            int v15 = 1;
          }
          else {
            int v15 = 2;
          }
          v8 += v15;
        }
        while (!v14);
        npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        if (uset_containsAllCodePoints())
        {
          int v16 = 2;
          goto LABEL_29;
        }
        memset(&__str, 0, sizeof(__str));
        int v17 = (void *)*((void *)this + 15);
        uint64_t v18 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        uint64_t v19 = (uint64_t)v18 + *(void *)(*v18 - 96);
        if (*(char *)(v19 + 23) < 0)
        {
          uint64_t v19 = *(void *)v19;
          std::basic_string<char16_t>::size_type v20 = *(void *)((char *)v18 + *(void *)(*v18 - 96) + 8);
        }
        else
        {
          std::basic_string<char16_t>::size_type v20 = *(unsigned __int8 *)(v19 + 23);
        }
        morphun::util::UnicodeSetUtils::removeSetFromString((uint64_t)&__str, v17, v19, v20);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
        }
        if (size)
        {
          uint64_t v22 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v22 + *(void *)(*v22 - 96)), &__str);
          int v16 = 0;
          if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
            goto LABEL_28;
          }
        }
        else
        {
          int v16 = 2;
          if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
          {
LABEL_28:
            if (size) {
              return v3;
            }
LABEL_29:
            if (v16) {
              continue;
            }
            return v3;
          }
        }
        operator delete(__str.__r_.__value_.__l.__data_);
        goto LABEL_28;
      }
    }
    return v3;
  }
}

void sub_1D2C865B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_1D2C86634(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::PunctuationFilter::~PunctuationFilter(morphun::analysis::filter::PunctuationFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A079C0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A079C0);
}

morphun::analysis::filter::PunctuationFilter *morphun::analysis::filter::PunctuationFilter::PunctuationFilter(morphun::analysis::filter::PunctuationFilter *this, morphun::analysis::TokenStream *a2, int a3)
{
  *(void *)this = &unk_1F2A08C08;
  long long v5 = morphun::analysis::TokenFilter::TokenFilter(this, (morphun::analysis::TokenStream *)&off_1F2A079C0, (uint64_t)a2);
  *(void *)long long v5 = &off_1F2A106C0;
  *((void *)v5 + 13) = 0;
  *((void *)v5 + 14) = 0;
  if (a3)
  {
    {
      operator new();
    }
    uint64_t v6 = (morphun::dictionary::PhraseProperties *)morphun::analysis::filter::PunctuationFilter::INTRATOKEN_PUNCTUATION(void)::INTRATOKEN_PUNCTUATION_;
  }
  else
  {
    uint64_t v6 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::PUNCTUATION(v5);
  }
  *((void *)this + 15) = v6;
  *((void *)this + 16) = morphun::dictionary::PhraseProperties::PUNCTUATION(v6);
  *((void *)this + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)this);
  return this;
}

void sub_1D2C867A4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v2, 0x1020C405F07FB98);
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A079C0);
  _Unwind_Resume(a1);
}

void morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::~FinnishMorphology_InflectionAnalysis(void **this)
{
  morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::~FinnishMorphology_InflectionAnalysis(this);

  JUMPOUT(0x1D942B8B0);
}

{
  if (*((char *)this + 111) < 0) {
    operator delete(this[11]);
  }
  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(this + 4);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

uint64_t morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(uint64_t a1, long long *a2)
{
  *(void *)a1 = &unk_1F29F3B98;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v3;
  }
  long long v7 = 0uLL;
  uint64_t v8 = 0;
  long long v5 = 0uLL;
  uint64_t v6 = 0;
  morphun::util::lemmatization::InflectionIdentifier::InflectionIdentifier(a1 + 32, &v7, &v5);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(void *)(a1 + 104) = 0;
  return a1;
}

void sub_1D2C86928(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::FinnishMorphology_InflectionAnalysis(uint64_t a1, long long *a2, uint64_t a3, long long *a4)
{
  *(void *)a1 = &unk_1F29F3B98;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v7 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  morphun::util::lemmatization::InflectionIdentifier::InflectionIdentifier(a1 + 32, (long long *)(a3 + 8), (long long *)(a3 + 32));
  uint64_t v8 = (std::basic_string<char16_t> *)(a1 + 88);
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v8, *(const std::basic_string<char16_t>::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v9 = *a4;
    *(void *)(a1 + 104) = *((void *)a4 + 2);
    *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v9;
  }
  *(unsigned char *)(a1 + 112) = 1;
  return a1;
}

void sub_1D2C86A10(_Unwind_Exception *a1)
{
  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(v3);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::UkCommonConceptFactory::~UkCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05CA8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05CA8);
}

const void **morphun::util::CFUtils::convert(const void **this, const std::exception *a2, __CFError **a3)
{
  if (a2)
  {
    uint64_t v4 = (const char *)(*((uint64_t (**)(const void **, const std::exception *, __CFError **))*this + 2))(this, a2, a3);
    CFStringRef v5 = CFStringCreateWithCString(0, v4, 0x8000100u);
    a2->__vftable = (std::exception_vtbl *)CFErrorCreate(0, v5, 0, 0);
    return morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)&v5);
  }
  return this;
}

void sub_1D2C86B10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)va);
  _Unwind_Resume(a1);
}

const void **morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

void morphun::util::CFUtils::to_u16string(std::basic_string<char16_t> *this, const __CFString *a2)
{
  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  npc<__CFString const>((uint64_t)a2);
  CFIndex Length = CFStringGetLength(a2);
  std::basic_string<char16_t>::resize(this, Length, 0);
  npc<__CFString const>((uint64_t)a2);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    CFStringRef v5 = (UniChar *)this;
  }
  else {
    CFStringRef v5 = (UniChar *)this->__r_.__value_.__r.__words[0];
  }
  v6.location = 0;
  v6.length = Length;
  CFStringGetCharacters(a2, v6, v5);
}

void sub_1D2C86BD8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<__CFString const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C86C44(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::util::CFUtils::to_string(std::string *this, const __CFString *a2)
{
  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  npc<__CFString const>((uint64_t)a2);
  CFIndex Length = CFStringGetLength(a2);
  std::string::resize(this, Length, 0);
  npc<__CFString const>((uint64_t)a2);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    CFStringRef v5 = (UInt8 *)this;
  }
  else {
    CFStringRef v5 = (UInt8 *)this->__r_.__value_.__r.__words[0];
  }
  v8.location = 0;
  v8.length = Length;
  if (CFStringGetBytes(a2, v8, 0x8000100u, 0, 0, v5, Length, 0) != Length)
  {
    CFIndex usedBufLen = 4 * Length;
    std::string::resize(this, 4 * Length, 0);
    npc<__CFString const>((uint64_t)a2);
    if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      CFRange v6 = (UInt8 *)this;
    }
    else {
      CFRange v6 = (UInt8 *)this->__r_.__value_.__r.__words[0];
    }
    v9.location = 0;
    v9.length = Length;
    CFStringGetBytes(a2, v9, 0x8000100u, 0, 0, v6, 4 * Length, &usedBufLen);
    std::string::resize(this, usedBufLen, 0);
  }
}

void sub_1D2C86D6C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::CFUtils::convert(morphun::util::CFUtils *this, const __CFLocale *a2)
{
  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  CFStringRef v3 = (const __CFString *)MEMORY[0x1D942B400](a2);
  morphun::util::CFUtils::to_string(&v11, v3);
  v9[0] = 0;
  v9[1] = 0;
  uint64_t v10 = 0;
  v7[0] = 0;
  v7[1] = 0;
  uint64_t v8 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v6 = 0;
  morphun::util::ULocale::ULocale((uint64_t)this, (uint64_t)&v11, (uint64_t)v9, (uint64_t)v7, (uint64_t)__p);
  if (SHIBYTE(v6) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v8) < 0) {
    operator delete(v7[0]);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(v9[0]);
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C86E6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  __cxa_free_exception(v26);
  _Unwind_Resume(a1);
}

CFLocaleRef morphun::util::CFUtils::convert(morphun::util::CFUtils *this, const morphun::util::ULocale *a2)
{
  uint64_t v4 = (const UInt8 *)*((void *)this + 13);
  uint64_t v2 = (char *)this + 104;
  CFStringRef v3 = v4;
  int v5 = v2[23];
  if (v5 >= 0) {
    uint64_t v6 = (const UInt8 *)v2;
  }
  else {
    uint64_t v6 = v3;
  }
  if (v5 >= 0) {
    CFIndex v7 = v2[23];
  }
  else {
    CFIndex v7 = *((void *)v2 + 1);
  }
  CFStringRef v10 = CFStringCreateWithBytes(0, v6, v7, 0x8000100u, 0);
  CFLocaleRef v8 = CFLocaleCreate(0, v10);
  morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)&v10);
  return v8;
}

void sub_1D2C86F3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::util::AutoCRelease<__CFString const*,&(CFRelease)>::~AutoCRelease((const void **)va);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::NormalizeFontVariantsFilter::incrementToken(morphun::analysis::filter::NormalizeFontVariantsFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    {
      if (v25) {
        morphun::analysis::filter::createMappableChars(v25);
      }
    }
    uint64_t v4 = (void *)morphun::analysis::filter::NormalizeFontVariantsFilter::MAPPABLE_CHARS(void)::MAPPABLE_CHARS_;
    npc<icu4cxx::UnicodeSet const>(morphun::analysis::filter::NormalizeFontVariantsFilter::MAPPABLE_CHARS(void)::MAPPABLE_CHARS_);
    int v5 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
    uint64_t v6 = (uint64_t)v5 + *(void *)(*v5 - 96);
    if (*(char *)(v6 + 23) < 0)
    {
      uint64_t v6 = *(void *)v6;
      uint64_t v7 = *(void *)((char *)v5 + *(void *)(*v5 - 96) + 8);
    }
    else
    {
      LODWORD(v7) = *(unsigned __int8 *)(v6 + 23);
    }
    if (morphun::util::UnicodeSetUtils::containsSome(v4, v6, v7))
    {
      CFLocaleRef v8 = (void *)*((void *)this + 13);
      npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v8);
      uint64_t v9 = *(void *)(*v8 - 96);
      CFStringRef v10 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      uint64_t v11 = (uint64_t)v10 + *(void *)(*v10 - 96);
      if (*(char *)(v11 + 23) < 0)
      {
        uint64_t v11 = *(void *)v11;
        std::basic_string<char16_t>::size_type v12 = *(void *)((char *)v10 + *(void *)(*v10 - 96) + 8);
      }
      else
      {
        std::basic_string<char16_t>::size_type v12 = *(unsigned __int8 *)(v11 + 23);
      }
      memset(&v26, 0, sizeof(v26));
      std::basic_string<char16_t> __p = 0;
      std::basic_string<char16_t>::size_type v28 = 0;
      uint64_t v29 = 0;
      uint64_t v13 = morphun::util::StringViewUtils::replace(&v26, v11, v12, morphun::analysis::filter::OE, 1uLL, word_1D2EC7FCA, 2uLL);
      int v14 = (void *)morphun::analysis::filter::DOUBLE_QUOTES((morphun::analysis::filter *)v13);
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v15 = &v26;
      }
      else {
        int v15 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
      }
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v26.__r_.__value_.__l.__size_;
      }
      int v17 = (morphun::analysis::filter::NormalizeFontVariantsFilter *)morphun::util::UnicodeSetUtils::replaceSetFromString((uint64_t)&__p, v14, (uint64_t)v15, size, L"\"", 1uLL);
      uint64_t v18 = (void *)morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(v17);
      if (v29 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      if (v29 >= 0) {
        std::basic_string<char16_t>::size_type v20 = HIBYTE(v29);
      }
      else {
        std::basic_string<char16_t>::size_type v20 = v28;
      }
      morphun::util::UnicodeSetUtils::replaceSetFromString((uint64_t)&v26, v18, (uint64_t)p_p, v20, L"'", 1uLL);
      char v21 = (char *)v8 + v9;
      if (SHIBYTE(v29) < 0) {
        operator delete(__p);
      }
      if (v21[23] < 0) {
        operator delete(*(void **)v21);
      }
      long long v22 = *(_OWORD *)&v26.__r_.__value_.__l.__data_;
      *((void *)v21 + 2) = *((void *)&v26.__r_.__value_.__l + 2);
      *(_OWORD *)char v21 = v22;
    }
  }
  return v3;
}

void sub_1D2C87194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

void sub_1D2C87234(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::DOUBLE_QUOTES(morphun::analysis::filter *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::analysis::filter::DOUBLE_QUOTES(void)::DOUBLE_QUOTES_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C872E4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(morphun::analysis::filter::NormalizeFontVariantsFilter *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::analysis::filter::NormalizeFontVariantsFilter::SINGLE_QUOTES(void)::SINGLE_QUOTES_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C873B8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1D2C87440(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::createMappableChars(morphun::analysis::filter *this)
{
}

void sub_1D2C874E0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::NormalizeFontVariantsFilter::~NormalizeFontVariantsFilter(morphun::analysis::filter::NormalizeFontVariantsFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07B40);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07B40);
}

uint64_t morphun::transliteration::MLTransliterator::transliterate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 && *(void *)(a1 + 136))
  {
    memset(&v31, 0, sizeof(v31));
    memset(&v30, 0, sizeof(v30));
    uint64_t v8 = 2 * a3;
    std::basic_string<char16_t>::reserve(&v30, 2 * a3);
    uint64_t v9 = (std::basic_string<char16_t>::value_type *)a2;
    do
    {
      std::basic_string<char16_t>::value_type v10 = *v9;
      std::basic_string<char16_t>::size_type size = HIBYTE(v30.__r_.__value_.__r.__words[2]);
      if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v30.__r_.__value_.__l.__size_;
      }
      if (size) {
        BOOL v12 = (v10 & 0xFC00) == 56320;
      }
      else {
        BOOL v12 = 1;
      }
      if (!v12) {
        std::basic_string<char16_t>::push_back(&v30, 32);
      }
      std::basic_string<char16_t>::push_back(&v30, v10);
      ++v9;
      v8 -= 2;
    }
    while (v8);
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v13 = &v30;
    }
    else {
      uint64_t v13 = (std::basic_string<char16_t> *)v30.__r_.__value_.__r.__words[0];
    }
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v14 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    }
    else {
      int v14 = v30.__r_.__value_.__r.__words[1];
    }
    morphun::util::StringViewUtils::convert(&v31, (uint64_t)v13, v14);
    {
      operator new();
    }
    int v15 = (std::mutex *)morphun::transliteration::MLTransliterator::transliterate(std::u16string_view,std::basic_string<char16_t> *)const::mutex;
    if (!morphun::transliteration::MLTransliterator::transliterate(std::u16string_view,std::basic_string<char16_t> *)const::mutex)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    std::mutex::lock((std::mutex *)morphun::transliteration::MLTransliterator::transliterate(std::u16string_view,std::basic_string<char16_t> *)const::mutex);
    int v16 = (char *)QuasarCPDecTranslator_translate();
    std::mutex::unlock(v15);
    if (v16)
    {
      int32_t v17 = strlen(v16);
      morphun::util::StringViewUtils::convert((uint64_t)&v30, v16, v17);
      memset(&__str, 0, sizeof(__str));
      if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v18 = &v30;
      }
      else {
        uint64_t v18 = (std::basic_string<char16_t> *)v30.__r_.__value_.__r.__words[0];
      }
      if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v19 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v19 = v30.__r_.__value_.__l.__size_;
      }
      morphun::util::StringViewUtils::replace(&__str, (uint64_t)v18, v19, (unsigned __int16 *)&word_1D2ED0D7C, 1uLL, &word_1D2ED0AEE, 0);
      memset(&__p, 0, sizeof(__p));
      int isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase(a2, a3);
      if (isAllLowerCase)
      {
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_str = &__str;
        }
        else {
          p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        }
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int32_t v22 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        }
        else {
          int32_t v22 = __str.__r_.__value_.__r.__words[1];
        }
        morphun::util::StringViewUtils::lowercase((uint64_t)&__p, (const UChar *)p_str, v22, a1 + 8);
      }
      else
      {
        std::basic_string<char16_t>::operator=(&__p, &__str);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v24 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v24 = __p.__r_.__value_.__l.__size_;
      }
      morphun::transliteration::Transliterator::matchCase(a1, a4, (std::basic_string<char16_t>::value_type *)p_p, v24, a2, a3, isAllLowerCase);
      free(v16);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v31.__r_.__value_.__l.__data_);
      if (v16) {
        return 1;
      }
    }
    else if (v16)
    {
      return 1;
    }
  }
  if (!a4)
  {
    std::basic_string<char16_t> v26 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v26);
  }
  uint64_t result = 0;
  if (*(char *)(a4 + 23) < 0)
  {
    **(_WORD **)a4 = 0;
    *(void *)(a4 + 8) = 0;
  }
  else
  {
    *(_WORD *)a4 = 0;
    *(unsigned char *)(a4 + 23) = 0;
  }
  return result;
}

void sub_1D2C878B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void morphun::transliteration::MLTransliterator::~MLTransliterator(void **this)
{
  morphun::transliteration::MLTransliterator::~MLTransliterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  *this = &off_1F2A08730;
  QuasarCPDecTranslator_delete();
  *this = &unk_1F29F4328;
}

uint64_t **com::apple::siri::tokenizer::data::config_yue_Hant::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DE80;
  v3[1] = *(_OWORD *)&off_1E695DE90;
  v3[2] = xmmword_1E695DEA0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::dialog::language::BgCommonConceptFactory::~BgCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A055E8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A055E8);
}

uint64_t morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[4];
  npc<morphun::dialog::SemanticFeature const>(v4);
  int v5 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v4);
  int Count = morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(v5);
  if (!Count)
  {
    uint64_t FeatureValue = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 20), a2);
    if (!FeatureValue) {
      goto LABEL_6;
    }
    uint64_t v8 = FeatureValue;
    uint64_t v9 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)FeatureValue + 32))(FeatureValue);
    int Count = morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(v9);
    (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
  }
  if (Count == 2)
  {
    std::basic_string<char16_t>::value_type v10 = a1 + 15;
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v11 = a1[3];
  npc<morphun::dialog::SemanticFeature const>(v11);
  BOOL v12 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v11);
  int Gender = morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(v12);
  if (!Gender)
  {
    uint64_t v14 = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 46), a2);
    if (!v14) {
      goto LABEL_11;
    }
    uint64_t v15 = v14;
    int v16 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)v14 + 32))(v14);
    int Gender = morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(v16);
    (*(void (**)(uint64_t))(*(void *)v15 + 16))(v15);
  }
  if (Gender == 2)
  {
    std::basic_string<char16_t>::value_type v10 = a1 + 10;
    goto LABEL_12;
  }
LABEL_11:
  std::basic_string<char16_t>::value_type v10 = a1 + 5;
LABEL_12:
  int32_t v17 = *(uint64_t (**)(void *, uint64_t, void *))(*a1 + 40);

  return v17(a1, a2, v10);
}

void sub_1D2C87CE4(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C87D64(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::~DaGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *this)
{
  morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::~DaGrammarSynthesizer_ArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  *(void *)this = &off_1F2A0D0A0;
  *((void *)this + 46) = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 68);
  if (v2)
  {
    *((void *)this + 69) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 66);
  *((void *)this + 66) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 47) = &unk_1F2A0FEF8;
  *((void *)this + 20) = &unk_1F2A095F0;
  uint64_t v4 = (void *)*((void *)this + 42);
  if (v4)
  {
    *((void *)this + 43) = v4;
    operator delete(v4);
  }
  int v5 = *((void *)this + 40);
  *((void *)this + 40) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  }
  *((void *)this + 21) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::DaGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *a1, const morphun::dialog::SemanticFeatureModel *a2, char a3, long long *a4, long long *a5, long long *a6)
{
  morphun::dialog::SpeakableString::SpeakableString(v13, a4);
  morphun::dialog::SpeakableString::SpeakableString(v12, a5);
  morphun::dialog::SpeakableString::SpeakableString(v11, a6);
  morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::DaGrammarSynthesizer_ArticleLookupFunction(a1, a2, a3, (const morphun::dialog::SpeakableString *)v13, (const morphun::dialog::SpeakableString *)v12, (const morphun::dialog::SpeakableString *)v11);
}

void sub_1D2C87FF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction::DaGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *this, const morphun::dialog::SemanticFeatureModel *a2, char a3, const morphun::dialog::SpeakableString *a4, const morphun::dialog::SpeakableString *a5, const morphun::dialog::SpeakableString *a6)
{
  *((void *)&v22 + 1) = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FAA30;
  morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(this, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A06338, (uint64_t)a2, a3, 1);
  *(void *)this = &off_1F2A0D0A0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  morphun::dialog::SpeakableString::SpeakableString((morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 40), a4);
  morphun::dialog::SpeakableString::SpeakableString((morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 80), a5);
  std::basic_string<char16_t>::value_type v10 = morphun::dialog::SpeakableString::SpeakableString((morphun::grammar::synthesis::DaGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 120), a6);
  uint64_t v11 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::DANISH(v10);
  uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v11);
  if (*(char *)(v12 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v12, *(void *)(v12 + 8));
  }
  else
  {
    long long v13 = *(_OWORD *)v12;
    __dst.__r_.__value_.__r.__words[2] = *(void *)(v12 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v13;
  }
  uint64_t v14 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v12);
  if (*(char *)(v14 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v21, *(const std::basic_string<char16_t>::value_type **)v14, *(void *)(v14 + 8));
  }
  else
  {
    long long v15 = *(_OWORD *)v14;
    v21.__r_.__value_.__r.__words[2] = *(void *)(v14 + 16);
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
  }
  int v16 = 0;
  int32_t v17 = 0;
  v18[0] = 0;
  v18[1] = &v16;
  char v19 = 0;
  int v16 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  int32_t v17 = v16;
  v18[0] = v16 + 2;
  int32_t v17 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v18, (long long *)&__dst, &v22, v16);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((void *)this + 20, v11);
}

void sub_1D2C883D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v24);
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v23);
  _Unwind_Resume(a1);
}

void sub_1D2C88520()
{
}

void morphun::grammar::synthesis::FrGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::FrGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  __dst[21] = *(void **)MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"defArticle");
  operator new();
}

void sub_1D2C8A574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, morphun::dialog::DefinitenessDisplayFunction *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  __cxa_free_exception(v18);
  MEMORY[0x1D942B8B0](a18, 0x10F3C4056A24F47);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C8AF1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      long long v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      long long v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int32_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        char v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    long long v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          long long v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          long long v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        long long v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C8B144(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C8B1BC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2C8B3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      long long v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      long long v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int32_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        char v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    long long v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          long long v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          long long v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        long long v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2C8B5D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::FrGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C8B650(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::u16string_view>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::u16string_view>::insert[abi:ne180100]<std::__tree_const_iterator<std::u16string_view,std::__tree_node<std::u16string_view,void *> *,long>>(a1, *(void **)a2, (void *)(a2 + 8));
  return a1;
}

void sub_1D2C8B6A4(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::u16string_view>::insert[abi:ne180100]<std::__tree_const_iterator<std::u16string_view,std::__tree_node<std::u16string_view,void *> *,long>>(uint64_t *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = std::__tree<std::u16string_view>::__emplace_hint_unique_key_args<std::u16string_view,std::u16string_view const&>(v5, v6, (unsigned __int16 *)v4[4], v4[5], (_OWORD *)v4 + 2);
      BOOL v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          BOOL v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v4[2];
          BOOL v9 = *v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void morphun::tokenizer::dictionary::GermanicDecompounder::~GermanicDecompounder(char **this)
{
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)(this + 28));
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::util::MemoryMappedFile *)(this + 24));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[21]);
  uint64_t v2 = this[17];
  if (v2)
  {
    this[18] = v2;
    operator delete(v2);
  }
  uint64_t v3 = this[14];
  if (v3)
  {
    this[15] = v3;
    operator delete(v3);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[12]);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(this[9]);
}

void morphun::tokenizer::dictionary::GermanicDecompounder::analyze(int *a1, void *a2, uint64_t *a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a3;
  uint64_t v12 = (std::__shared_weak_count *)a2[1];
  v69[0] = *a2;
  v69[1] = v12;
  if (v12)
  {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
    morphun::tokenizer::dictionary::Segment::tie(v11, v69);
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
    if (a6) {
      goto LABEL_3;
    }
LABEL_90:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::tokenizer::dictionary::Segment::tie(v11, v69);
  if (!a6) {
    goto LABEL_90;
  }
LABEL_3:
  uint64_t v14 = *(uint64_t **)(a6 + 8);
  unint64_t v13 = *(void *)(a6 + 16);
  if ((unint64_t)v14 < v13)
  {
    *uint64_t v14 = *a3;
    uint64_t v15 = a3[1];
    v14[1] = v15;
    if (v15) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
    }
    int v16 = v14 + 2;
    *(void *)(a6 + 8) = v14 + 2;
    goto LABEL_25;
  }
  int32_t v17 = *(uint64_t **)a6;
  uint64_t v18 = ((uint64_t)v14 - *(void *)a6) >> 4;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 60) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v20 = v13 - (void)v17;
  if (v20 >> 3 > v19) {
    unint64_t v19 = v20 >> 3;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  long long v22 = (char *)operator new(16 * v21);
  uint64_t v23 = &v22[16 * v18];
  long long v24 = *(_OWORD *)a3;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)a3;
  if (*((void *)&v24 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v24 + 1) + 8), 1uLL, memory_order_relaxed);
    int32_t v17 = *(uint64_t **)a6;
    uint64_t v14 = *(uint64_t **)(a6 + 8);
  }
  int v25 = &v22[16 * v21];
  int v16 = v23 + 16;
  if (v14 == v17)
  {
    *(void *)a6 = v23;
    *(void *)(a6 + 8) = v16;
    *(void *)(a6 + 16) = v25;
    if (!v17) {
      goto LABEL_25;
    }
  }
  else
  {
    do
    {
      long long v26 = *((_OWORD *)v14 - 1);
      v14 -= 2;
      *((_OWORD *)v23 - 1) = v26;
      v23 -= 16;
      *uint64_t v14 = 0;
      v14[1] = 0;
    }
    while (v14 != v17);
    uint64_t v27 = *(uint64_t **)a6;
    int32_t v17 = *(uint64_t **)(a6 + 8);
    *(void *)a6 = v23;
    *(void *)(a6 + 8) = v16;
    *(void *)(a6 + 16) = v25;
    if (v17 != v27)
    {
      do
      {
        std::basic_string<char16_t>::size_type v28 = (std::__shared_weak_count *)*(v17 - 1);
        if (v28) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v28);
        }
        v17 -= 2;
      }
      while (v17 != v27);
      int32_t v17 = v27;
    }
    if (!v17) {
      goto LABEL_25;
    }
  }
  operator delete(v17);
LABEL_25:
  *(void *)(a6 + 8) = v16;
  uint64_t v29 = *a3;
  if (*(unsigned char *)(*a3 + 55)
    || *(unsigned char *)(v29 + 56)
    || *(float *)(v29 + 48) > (float)a1[94]
    || *(_DWORD *)(v29 + 84) > a1[91])
  {
    return;
  }
  uint64_t v30 = *(void *)(v29 + 40);
  if (!v30) {
    LODWORD(v30) = *(_DWORD *)(v29 + 20) - *(_DWORD *)(v29 + 24);
  }
  int v31 = a1[93];
  int v54 = v30 - v31;
  if (v31 > (int)v30 - v31) {
    return;
  }
  std::basic_string<char16_t>::size_type v32 = 0;
  uint64_t v33 = 0;
  unsigned int v34 = 0;
  uint64_t v55 = 0;
  unint64_t v58 = *(void *)(v29 + 8);
  uint64_t v59 = *(void *)v29;
  uint64_t v57 = (uint64_t)(a1 + 46);
  uint64_t v52 = (uint64_t)(a1 + 74);
  int v61 = v30 - 2 * v31 + 1;
  int v56 = a4;
  while (v31 < a1[92])
  {
    unsigned int v62 = a4 + v31;
    if (v33)
    {
      if (v32)
      {
        atomic_fetch_add_explicit(&v32->__shared_owners_, 1uLL, memory_order_relaxed);
        unint64_t v35 = v32;
      }
      else
      {
        unint64_t v35 = 0;
      }
      uint64_t v39 = v33;
    }
    else
    {
      std::basic_string<char16_t> v53 = v34;
      uint64_t v36 = a5;
      int v38 = *(_DWORD *)(*a3 + 24);
      int v37 = *(_DWORD *)(*a3 + 28);
      unint64_t v35 = (std::__shared_weak_count *)operator new(0x88uLL);
      v35->__shared_owners_ = 0;
      v35->__shared_weak_owners_ = 0;
      v35->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2A11DA0;
      uint64_t v39 = (uint64_t)&v35[1];
      morphun::tokenizer::dictionary::Segment::Segment((uint64_t)&v35[1], (uint64_t)a1, v57, v59, v58, v56, v62, v38, v37);
      a5 = v36;
      unsigned int v34 = v53;
    }
    if (v31 >= v54)
    {
      uint64_t v60 = 0;
      uint64_t v33 = 0;
      if (!v32) {
        goto LABEL_45;
      }
LABEL_44:
      std::__shared_weak_count::__release_shared[abi:ne180100](v32);
      goto LABEL_45;
    }
    std::allocate_shared[abi:ne180100]<morphun::tokenizer::dictionary::Segment,std::allocator<morphun::tokenizer::dictionary::Segment>,morphun::tokenizer::dictionary::DictionaryTokenizerConfig const&,morphun::tokenizer::trie::SerializedTrie const&,std::u16string_view &,int &,int &,void>(&v67, (uint64_t)a1, v57, v59, v58, v56, v56 + v31 + 1);
    uint64_t v33 = v67;
    uint64_t v60 = v68;
    if (v32) {
      goto LABEL_44;
    }
LABEL_45:
    std::allocate_shared[abi:ne180100]<morphun::tokenizer::dictionary::Segment,std::allocator<morphun::tokenizer::dictionary::Segment>,morphun::tokenizer::dictionary::DictionaryTokenizerConfig const&,morphun::tokenizer::trie::SerializedTrie const&,std::u16string_view &,int &,int &,void>(&v67, (uint64_t)a1, v57, v59, v58, v62, *(_DWORD *)(*a3 + 8));
    npc<morphun::tokenizer::dictionary::Segment>(v39);
    if (a5)
    {
      if (*(unsigned char *)(v39 + 54)) {
        goto LABEL_55;
      }
    }
    else if ((*(_DWORD *)(v39 + 28) & 0x80000000) != 0)
    {
      morphun::tokenizer::dictionary::SegmentFuger::detachFugenelement(v52, v39);
    }
    npc<morphun::tokenizer::dictionary::Segment>(v39);
    float v40 = *(float *)(v39 + 48);
    npc<morphun::tokenizer::dictionary::Segment>(v39);
    uint64_t v41 = *(void *)(v39 + 40);
    if (!v41) {
      LODWORD(v41) = *(_DWORD *)(v39 + 20) - *(_DWORD *)(v39 + 24);
    }
    if ((int)v41 < a1[83])
    {
      npc<morphun::tokenizer::dictionary::Segment>(v39);
      if (!*(unsigned char *)(v39 + 52)) {
        goto LABEL_55;
      }
    }
    npc<morphun::tokenizer::dictionary::Segment>(v39);
    if (*(unsigned char *)(v39 + 53)) {
      goto LABEL_55;
    }
    if (v40 < (float)a1[84])
    {
      if (!v55) {
        goto LABEL_55;
      }
      if (!v33) {
        goto LABEL_55;
      }
      float v45 = (float)a1[82];
      if (v40 < (float)(*(float *)(v55 + 48) + v45) || v40 < (float)(*(float *)(v33 + 48) + v45)) {
        goto LABEL_55;
      }
    }
    uint64_t v46 = v67;
    morphun::tokenizer::dictionary::SegmentFuger::detachFugenelement(v52, v67);
    npc<morphun::tokenizer::dictionary::Segment>(v46);
    uint64_t v47 = *(void *)(v46 + 40);
    if (!v47) {
      LODWORD(v47) = *(_DWORD *)(v46 + 20) - *(_DWORD *)(v46 + 24);
    }
    if ((int)v47 < a1[83] && (npc<morphun::tokenizer::dictionary::Segment>(v46), !*(unsigned char *)(v46 + 52))
      || (npc<morphun::tokenizer::dictionary::Segment>(v46), *(unsigned char *)(v46 + 53)))
    {
LABEL_55:
      BOOL v42 = v35 == 0;
      if (!v35) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    unsigned __int8 v48 = (std::__shared_weak_count *)a2[1];
    v66[0] = *a2;
    v66[1] = v48;
    if (v48)
    {
      atomic_fetch_add_explicit(&v48->__shared_owners_, 1uLL, memory_order_relaxed);
      morphun::tokenizer::dictionary::Segment::tie(v39, v66);
      std::__shared_weak_count::__release_shared[abi:ne180100](v48);
    }
    else
    {
      v49.n128_f32[0] = morphun::tokenizer::dictionary::Segment::tie(v39, v66);
    }
    v65[0] = v39;
    v65[1] = v35;
    if (v35) {
      atomic_fetch_add_explicit(&v35->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    std::basic_string<char16_t> v50 = v68;
    v64[0] = v67;
    v64[1] = v68;
    if (v68) {
      atomic_fetch_add_explicit(&v68->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    morphun::tokenizer::dictionary::GermanicDecompounder::analyze(a1, v65, v64, v62, 0, a6, v49);
    if (v50) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v50);
    }
    if (!v35)
    {
      BOOL v42 = 1;
      if (!v34) {
        goto LABEL_59;
      }
LABEL_58:
      std::__shared_weak_count::__release_shared[abi:ne180100](v34);
      goto LABEL_59;
    }
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
    BOOL v42 = v35 == 0;
LABEL_56:
    atomic_fetch_add_explicit(&v35->__shared_owners_, 1uLL, memory_order_relaxed);
LABEL_57:
    if (v34) {
      goto LABEL_58;
    }
LABEL_59:
    if (v68) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v68);
    }
    if (!v42) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v35);
    }
    ++v31;
    unsigned __int8 v43 = v60;
    std::basic_string<char16_t>::size_type v32 = v60;
    unsigned int v34 = v35;
    uint64_t v55 = v39;
    BOOL v44 = v61-- == 1;
    a4 = v56;
    if (v44) {
      goto LABEL_94;
    }
  }
  unint64_t v35 = v34;
  unsigned __int8 v43 = v32;
LABEL_94:
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if (v35)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
  }
}

void sub_1D2C8BDFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19)
{
  if (v21)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
    if (!v20)
    {
LABEL_3:
      if (!v21) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if (!v20)
  {
    goto LABEL_3;
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  if (!v21)
  {
LABEL_4:
    if (!v20) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_14:
  std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  if (!v20)
  {
LABEL_6:
    if (a19) {
      std::__shared_weak_count::__release_shared[abi:ne180100](a19);
    }
    if (v19) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v19);
    }
    _Unwind_Resume(exception_object);
  }
LABEL_5:
  std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  goto LABEL_6;
}

uint64_t std::allocate_shared[abi:ne180100]<morphun::tokenizer::dictionary::Segment,std::allocator<morphun::tokenizer::dictionary::Segment>,morphun::tokenizer::dictionary::DictionaryTokenizerConfig const&,morphun::tokenizer::trie::SerializedTrie const&,std::u16string_view &,int &,int &,void>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, int a7)
{
  uint64_t v14 = operator new(0x88uLL);
  v14[1] = 0;
  void v14[2] = 0;
  *uint64_t v14 = &unk_1F2A11DA0;
  uint64_t result = morphun::tokenizer::dictionary::Segment::Segment((uint64_t)(v14 + 3), a2, a3, a4, a5, a6, a7, a6, -1);
  *a1 = result;
  a1[1] = (uint64_t)v14;
  return result;
}

void sub_1D2C8BF80(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<morphun::tokenizer::dictionary::Segment>::__on_zero_shared(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 96);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

void std::__shared_ptr_emplace<morphun::tokenizer::dictionary::Segment>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2A11DA0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1D942B8B0);
}

void std::__shared_ptr_emplace<morphun::tokenizer::dictionary::Segment>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2A11DA0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t morphun::tokenizer::TokenExtractor::normalize(uint64_t a1, uint64_t a2, const UChar *a3, int32_t a4)
{
  return morphun::util::StringViewUtils::lowercase(a2, a3, a4, a1 + 8);
}

void morphun::tokenizer::TokenExtractor::createIterator()
{
}

void sub_1D2C8C0A4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C4047070A01);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::TokenExtractor::~TokenExtractor(morphun::tokenizer::TokenExtractor *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::tokenizer::TokenExtractor::~TokenExtractor(morphun::tokenizer::TokenExtractor *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  uint64_t v4 = *((void *)this + 17);
  if (v4)
  {
    std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v4 + 8));
    MEMORY[0x1D942B8B0](v4, 0x1020C4062D53EE8);
  }
  uint64_t v5 = (URegularExpression **)*((void *)this + 18);
  if (v5)
  {
    icu4cxx::RegularExpression::~RegularExpression(v5);
    MEMORY[0x1D942B8B0]();
  }
}

void icu4cxx::RegularExpression::~RegularExpression(URegularExpression **this)
{
  if (*((unsigned char *)this + 8)) {
    uregex_close(*this);
  }
}

uint64_t morphun::tokenizer::TokenExtractor::createWordsToNotSplit(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a2, (unsigned __int16 *)"t", 0x1CuLL);
  if ((void *)(a2 + 8) != v3)
  {
    uint64_t v4 = (char *)v3[6];
    if (*(_WORD *)v4)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, v4);
      if (morphun::util::gLogLevel <= 1)
      {
        std::operator+<char16_t>((uint64_t)&__p, L"Loading non-decompound list from ", &__dst);
        if (morphun::util::gLogLevel <= 1)
        {
          if (v8 >= 0) {
            p_p = &__p;
          }
          else {
            p_p = __p;
          }
          morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_p);
        }
        if (v8 < 0) {
          operator delete(__p);
        }
      }
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      operator new();
    }
  }
  return 0;
}

void sub_1D2C8C514(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
}

void sub_1D2C8C658(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x1D2C8C67CLL);
}

uint64_t *morphun::tokenizer::TokenExtractor::TokenExtractor(uint64_t *a1, uint64_t *a2, morphun::util::ULocale *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v8 - 40)) = a2[1];
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 1), a3);
  a1[17] = a5;
  a1[18] = 0;
  if (a5 && !*(void *)(a5 + 16))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    uint64_t v14 = operator new(0x30uLL);
    __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v14;
    *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = xmmword_1D2D6F510;
    *uint64_t v14 = xmmword_1D2ECF17E;
    v14[1] = unk_1D2ECF18E;
    *(_OWORD *)((char *)v14 + 28) = unk_1D2ECF19A;
    *((_WORD *)v14 + 22) = 0;
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&__p);
  }
  uint64_t v9 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a4, L"tokenizer.decompound", 0x14uLL);
  if ((void *)(a4 + 8) != v9)
  {
    uint64_t v10 = (char *)v9[6];
    if (*(_WORD *)v10)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, v10);
      std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)L"^(", (const std::basic_string<char16_t>::value_type *)2, v11);
      std::basic_string<char16_t> v16 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      std::basic_string<char16_t>::append(&v16, (const std::basic_string<char16_t>::value_type *)")", 2uLL);
      std::basic_string<char16_t> __p = v16;
      memset(&v16, 0, sizeof(v16));
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      operator new();
    }
  }
  morphun::tokenizer::TokenUtil::isSignificant((unsigned __int16 *)"A", 1uLL);
  return a1;
}

void sub_1D2C8C8F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
  {
    operator delete(__p);
    if ((v30 & 1) == 0)
    {
LABEL_6:
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v29);
  goto LABEL_6;
}

uint64_t icu4cxx::RegularExpression::RegularExpression(uint64_t a1, UChar *pattern, int32_t patternLength, uint32_t flags)
{
  *(unsigned char *)(a1 + 8) = 1;
  UErrorCode status = U_ZERO_ERROR;
  *(void *)a1 = uregex_open(pattern, patternLength, flags, 0, &status);
  UErrorCode v5 = status;
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v5);
  }
  return a1;
}

void sub_1D2C8CA3C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::tokenizer::TokenExtractor::isIndivisibleWordNormalized(uint64_t a1, uint64_t a2, const UChar *a3, uint64_t a4)
{
  UErrorCode v5 = a3;
  uint64_t v6 = morphun::util::StringViewUtils::lowercase(a1, a3, a4, a2);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = (unsigned __int16 *)v6;
  }
  else {
    uint64_t v8 = *(unsigned __int16 **)v6;
  }
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(v6 + 8);
  }
  if (v7 != a4) {
    return 0;
  }
  if (!v7) {
    return 1;
  }
  uint64_t v9 = v7 - 1;
  do
  {
    int v11 = *v8++;
    int v10 = v11;
    int v13 = *v5++;
    int v12 = v13;
    BOOL v15 = v9-- != 0;
    BOOL result = v12 == v10;
  }
  while (v12 == v10 && v15);
  return result;
}

void morphun::tokenizer::TokenExtractor::getRequiredKeyAsPath(uint64_t a1, morphun::util::ResourceLocator *a2, uint64_t a3, unsigned __int16 *a4, unint64_t a5)
{
  int v10 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a3, a4, a5);
  if ((void *)(a3 + 8) == v10 || (int v11 = v10, (v12 = (_WORD *)v10[6]) == 0) || !*v12)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(&__dst, a4, a5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v25, &__dst, (std::basic_string<char16_t>::value_type *)" ");
    morphun::exception::InvalidConfigurationException::InvalidConfigurationException((uint64_t)exception, (long long *)&v25.st_dev);
  }
  morphun::util::ResourceLocator::getRootForLocale(a2, &__dst);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v26, (char *)L"/tokenizer");
  if ((v27 & 0x80u) == 0) {
    int v13 = (const std::basic_string<char16_t>::value_type *)v26;
  }
  else {
    int v13 = (const std::basic_string<char16_t>::value_type *)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v14 = v27;
  }
  else {
    std::basic_string<char16_t>::size_type v14 = (std::basic_string<char16_t>::size_type)v26[1];
  }
  std::basic_string<char16_t>::append(&__dst, v13, v14);
  *(_OWORD *)&v25.st_dev = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
  *(void *)&v25.st_uid = *((void *)&__dst.__r_.__value_.__l + 2);
  memset(&__dst, 0, sizeof(__dst));
  BOOL v15 = (const std::basic_string<char16_t>::value_type *)v11[6];
  if (*v15)
  {
    uint64_t v16 = 0;
    do
      std::basic_string<char16_t>::size_type v17 = v16 + 1;
    while (v15[++v16]);
  }
  else
  {
    std::basic_string<char16_t>::size_type v17 = 0;
  }
  std::basic_string<char16_t>::append((std::basic_string<char16_t> *)&v25, v15, v17);
  *(_OWORD *)a1 = *(_OWORD *)&v25.st_dev;
  *(void *)(a1 + 16) = *(void *)&v25.st_uid;
  memset(&v25, 0, 24);
  if ((char)v27 < 0) {
    operator delete(v26[0]);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  memset(&__dst, 0, sizeof(__dst));
  int v19 = *(char *)(a1 + 23);
  if (v19 >= 0) {
    uint64_t v20 = a1;
  }
  else {
    uint64_t v20 = *(void *)a1;
  }
  if (v19 >= 0) {
    LODWORD(v21) = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v21 = *(void *)(a1 + 8);
  }
  morphun::util::StringViewUtils::convert((std::string *)&__dst, v20, v21);
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_dst = &__dst;
  }
  else {
    p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
  }
  if (stat((const char *)p_dst, &v25))
  {
    std::operator+<char16_t>((uint64_t)v26, "P", (const void **)a1);
    if (morphun::util::gLogLevel <= 4)
    {
      if ((v27 & 0x80u) == 0) {
        uint64_t v23 = v26;
      }
      else {
        uint64_t v23 = (void **)v26[0];
      }
      morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)v23);
    }
    if ((char)v27 < 0) {
      operator delete(v26[0]);
    }
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C8CD3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v15 - 89) < 0) {
    operator delete(*(void **)(v15 - 112));
  }
  if (*(char *)(v15 - 65) < 0) {
    operator delete(*(void **)(v15 - 88));
  }
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void morphun::exception::NullPointerException::~NullPointerException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

morphun::exception::NullPointerException *morphun::exception::NullPointerException::NullPointerException(morphun::exception::NullPointerException *this)
{
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"NullPointerException");
  morphun::exception::Throwable::Throwable((uint64_t)this, (long long *)__p);
  *(void *)this = &unk_1F2A112F8;
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  *(void *)this = &unk_1F2A11388;
  return this;
}

void sub_1D2C8CEF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *morphun::exception::NullPointerException::NullPointerException(uint64_t a1, long long *a2)
{
  BOOL result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11388;
  return result;
}

{
  void *result;

  BOOL result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11388;
  return result;
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determine(uint64_t *a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determineWord((uint64_t)v36, a1, a2);
  if (v38)
  {
    if ((SHIBYTE(v37) & 0x80000000) == 0)
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v36;
      a3->__r_.__value_.__r.__words[2] = v37;
      return;
    }
    std::basic_string<char16_t>::__init_copy_ctor_external(a3, (const std::basic_string<char16_t>::value_type *)v36[0], (std::basic_string<char16_t>::size_type)v36[1]);
    BOOL v6 = 1;
    goto LABEL_56;
  }
  if (*(char *)(a2 + 23) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v35, *(const std::basic_string<char16_t>::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::basic_string<char16_t> v35 = *(std::basic_string<char16_t> *)a2;
  }
  uint64_t v7 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  char v8 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type size = v35.__r_.__value_.__l.__size_;
  if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v10 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v10 = v35.__r_.__value_.__l.__size_;
  }
  if (v10)
  {
    uint64_t v11 = a1[26];
    if (!v11
      || (uint64_t v12 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v11 + 24))(v11, &v35),
          (uint64_t v13 = v12) == 0))
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 104))(v12);
    if (!v14 || (uint64_t v15 = *(void *)(v14 + 80)) == 0)
    {
      int v31 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v31);
    }
    std::basic_string<char16_t>::operator=(&v35, (const std::basic_string<char16_t> *)(v15 + 16));
    std::basic_string<char16_t>::size_type v17 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v17 = v35.__r_.__value_.__l.__size_;
    }
    uint64_t v18 = *(unsigned __int8 *)(a2 + 23);
    if ((v18 & 0x80u) != 0) {
      uint64_t v18 = *(void *)(a2 + 8);
    }
    if (v17 != v18)
    {
      morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determineWord((uint64_t)&__p, a1, (uint64_t)&v35);
      __n128 v16 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)v36, &__p);
      if (v34 && v33 < 0) {
        operator delete((void *)__p.n128_u64[0]);
      }
      int v19 = v38;
      if (v38)
      {
        if (SHIBYTE(v37) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(a3, (const std::basic_string<char16_t>::value_type *)v36[0], (std::basic_string<char16_t>::size_type)v36[1]);
        }
        else
        {
          *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v36;
          a3->__r_.__value_.__r.__words[2] = v37;
        }
        (*(void (**)(uint64_t))(*(void *)v13 + 16))(v13);
        goto LABEL_53;
      }
    }
    (*(void (**)(uint64_t, __n128))(*(void *)v13 + 16))(v13, v16);
    uint64_t v7 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type size = v35.__r_.__value_.__l.__size_;
    char v8 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  }
  if (v8 >= 0) {
    uint64_t v20 = &v35;
  }
  else {
    uint64_t v20 = (std::basic_string<char16_t> *)v35.__r_.__value_.__r.__words[0];
  }
  if (v8 >= 0) {
    uint64_t v21 = v7;
  }
  else {
    uint64_t v21 = size;
  }
  uint64_t v22 = a1[27];
  uint64_t v23 = a1[28];
  __p.n128_u64[0] = 0;
  CombinedBinaryuint64_t Type = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v22, (uint64_t)&__p, (const UChar *)v20, v21);
  if (CombinedBinaryType) {
    BOOL v25 = (__p.n128_u64[0] & v23) == v23;
  }
  else {
    BOOL v25 = 0;
  }
  if (v25)
  {
    std::basic_string<char16_t>::size_type v26 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v26 = v35.__r_.__value_.__l.__size_;
    }
    if (!v26) {
      goto LABEL_47;
    }
    unsigned __int8 v27 = &v35;
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      unsigned __int8 v27 = (std::basic_string<char16_t> *)v35.__r_.__value_.__r.__words[0];
    }
    int v28 = (unsigned __int16)v27->__r_.__value_.__s.__data_[v26 - 1];
    if (v28 == 120 || v28 == 115) {
      uint64_t v29 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(CombinedBinaryType);
    }
    else {
LABEL_47:
    }
      uint64_t v29 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(CombinedBinaryType);
    if (*(char *)(v29 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a3, *(const std::basic_string<char16_t>::value_type **)v29, *(void *)(v29 + 8));
      int v19 = 0;
    }
    else
    {
      int v19 = 0;
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v29;
      a3->__r_.__value_.__r.__words[2] = *(void *)(v29 + 16);
    }
  }
  else
  {
    int v19 = 0;
    a3->__r_.__value_.__r.__words[0] = 0;
    a3->__r_.__value_.__l.__size_ = 0;
    a3->__r_.__value_.__r.__words[2] = 0;
  }
LABEL_53:
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  BOOL v6 = v37 < 0;
  if (v19)
  {
LABEL_56:
    if (v6) {
      operator delete(v36[0]);
    }
  }
}

void sub_1D2C8D34C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  (*(void (**)(uint64_t))(*(void *)v25 + 16))(v25);
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determineWord(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a2, a3, __p);
  BOOL v6 = (void *)HIBYTE(v31);
  int v7 = SHIBYTE(v31);
  if (v31 < 0) {
    BOOL v6 = __p[1];
  }
  if (v6)
  {
    *(_OWORD *)a1 = *(_OWORD *)__p;
    *(void *)(a1 + 16) = v31;
    __p[1] = 0;
    uint64_t v31 = 0;
    __p[0] = 0;
    *(unsigned char *)(a1 + 24) = 1;
    return;
  }
  int v8 = *(char *)(v3 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (const UChar *)v3;
  }
  else {
    uint64_t v9 = *(const UChar **)v3;
  }
  if (v8 >= 0) {
    uint64_t v10 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    uint64_t v10 = *(void *)(v3 + 8);
  }
  uint64_t v11 = a2[27];
  uint64_t v12 = a2[30];
  v32[0] = 0;
  CombinedBinaryuint64_t Type = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)v32, v9, v10);
  if (CombinedBinaryType) {
    BOOL v14 = (v32[0] & v12) == v12;
  }
  else {
    BOOL v14 = 0;
  }
  if (v14) {
    goto LABEL_24;
  }
  int v15 = *(char *)(v3 + 23);
  if (v15 >= 0) {
    __n128 v16 = (const UChar *)v3;
  }
  else {
    __n128 v16 = *(const UChar **)v3;
  }
  if (v15 >= 0) {
    uint64_t v17 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    uint64_t v17 = *(void *)(v3 + 8);
  }
  uint64_t v18 = a2[27];
  uint64_t v19 = a2[29];
  v32[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)v32, v16, v17)
    && (v32[0] & v19) == v19)
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    char v20 = 1;
    *(void *)(a1 + 16) = 0;
    goto LABEL_39;
  }
  uint64_t v22 = *(void *)(v3 + 8);
  if (*(char *)(v3 + 23) >= 0)
  {
    uint64_t v23 = *(unsigned __int8 *)(v3 + 23);
  }
  else
  {
    uint64_t v3 = *(void *)v3;
    uint64_t v23 = v22;
  }
  uint64_t v24 = a2[27];
  uint64_t v25 = a2[28];
  v32[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v24, (uint64_t)v32, (const UChar *)v3, v23)
    && (v32[0] & v25) == v25)
  {
    morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[27], (const UChar *)v3, v23, (unsigned __int16 *)"i", 0xAuLL, v32);
    if (0xAAAAAAAAAAAAAAABLL * ((v32[1] - v32[0]) >> 3) >= 2)
    {
      char v33 = (void **)v32;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v33);
    }
    else
    {
      uint64_t v26 = a2[27];
      uint64_t v27 = a2[31];
      char v33 = 0;
      int v28 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v26, (uint64_t)&v33, (const UChar *)v3, v23);
      unint64_t v29 = (unint64_t)v33;
      char v33 = (void **)v32;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v33);
      if (v28 && (v29 & v27) == v27)
      {
LABEL_24:
        uint64_t v21 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(CombinedBinaryType);
        if (*(char *)(v21 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, *(const std::basic_string<char16_t>::value_type **)v21, *(void *)(v21 + 8));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)v21;
          *(void *)(a1 + 16) = *(void *)(v21 + 16);
        }
        char v20 = 1;
        goto LABEL_39;
      }
    }
  }
  char v20 = 0;
  *(unsigned char *)a1 = 0;
LABEL_39:
  *(unsigned char *)(a1 + 24) = v20;
  if (v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2C8D648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  a15 = &a12;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  if (v15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::~FrGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *this)
{
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::~FrGrammarSynthesizer_CountLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0CCD8;
  uint64_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FA370;
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  char v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::FrGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *this)
{
  *(void *)&long long v14 = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FA318;
  uint64_t v2 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::FRENCH(this);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"singular");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v13, "p");
  BOOL v6 = 0;
  int v7 = 0;
  v8[0] = 0;
  __p[0] = &v6;
  LOBYTE(__p[1]) = 0;
  BOOL v6 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  int v7 = v6;
  v8[0] = v6 + 2;
  int v7 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v8, &__dst, &v14, v6);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v11, "a");
  uint64_t v3 = 0;
  char v4 = 0;
  UErrorCode v5 = 0;
  v8[1] = &v3;
  char v9 = 0;
  uint64_t v3 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  char v4 = v3;
  UErrorCode v5 = v3 + 2;
  char v4 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v5, (long long *)__p, &__dst, v3);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)this, (uint64_t *)&off_1F2A060E0, v2);
}

void sub_1D2C8DC5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
  uint64_t v26 = 0;
  uint64_t v27 = v24 - 104;
  while (1)
  {
    if (*(char *)(v27 + v26 + 47) < 0) {
      operator delete(*(void **)(v27 + v26 + 24));
    }
    v26 -= 24;
    if (v26 == -48)
    {
      uint64_t v28 = *((void *)v23 + 26);
      *((void *)v23 + 26) = 0;
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 16))(v28);
      }
      morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v23, (uint64_t *)&off_1F2A060E0);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1D2C8DE4C()
{
}

uint64_t morphun::tokenizer::locale::de::DeTokenExtractorIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  *(_DWORD *)(a1 + 108) = 0;
  uint64_t result = morphun::tokenizer::ICUTokenExtractorIterator::reset();
  *(void *)(a1 + 88) = *(void *)(a1 + 80);
  *(_DWORD *)(a1 + 104) = 0;
  return result;
}

uint64_t morphun::tokenizer::locale::de::DeTokenExtractorIterator::getNextBoundary(morphun::tokenizer::locale::de::DeTokenExtractorIterator *this)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *((int *)this + 26);
  uint64_t v3 = *((void *)this + 10);
  if ((int)v2 >= (int)((unint64_t)(*((void *)this + 11) - v3) >> 2))
  {
    *((void *)this + 11) = v3;
    *((_DWORD *)this + 26) = 0;
    uint64_t v5 = ubrk_next();
    if (v5 == -1)
    {
      return 0xFFFFFFFFLL;
    }
    else
    {
      uint64_t v4 = v5;
      uint64_t v6 = *((int *)this + 27);
      uint64_t v7 = (v5 - v6);
      if ((int)v7 >= 6)
      {
        while (uscript_hasScript() || uscript_hasScript())
        {
          if (++v6 >= (int)v4)
          {
            int v8 = (char **)((char *)this + 56);
            morphun::tokenizer::locale::de::titleCase((uint64_t)this + 56, *((void *)this + 5), *((void *)this + 6), *((_DWORD *)this + 27), v7);
            uint64_t v9 = *((void *)this + 1);
            if (!v9
              || ((*((unsigned char *)this + 79) & 0x80) != 0
                ? (uint64_t v10 = (unsigned __int16 *)*((void *)this + 7), v11 = *((void *)this + 8))
                : (uint64_t v10 = (unsigned __int16 *)((char *)this + 56), v11 = *((unsigned __int8 *)this + 79)),
                  (void *)(v9 + 8) == std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(*((void *)this + 1), v10, v11)))
            {
              memset(v61, 0, sizeof(v61));
              uint64_t v12 = germantok_tokenize();
              uint64_t v13 = v12;
              if (v12 > 1 || v12 == 1 && *((void *)&v61[0] + 1) != v7)
              {
                uint64_t v14 = 0;
                int v15 = 0;
                do
                {
                  __n128 v16 = (int *)&v61[v14];
                  int v17 = *v16;
                  int v18 = v16[2];
                  ++v14;
                  int v19 = v7;
                  if (v14 < v13)
                  {
                    int v19 = v61[v14];
                    if (v18 + v17 > v19) {
                      int v18 = v19 - v17;
                    }
                  }
                  if (v18 + v17 < v19)
                  {
                    char v20 = (char *)this + 56;
                    if (*((char *)this + 79) < 0) {
                      char v20 = *v8;
                    }
                    if (*(_WORD *)&v20[2 * v19 - 2] == 115 && v14 < v13) {
                      --v19;
                    }
                    int v18 = v19 - v17;
                  }
                  uint64_t v22 = (int *)*((void *)this + 11);
                  if (v17 > v15)
                  {
                    uint64_t v23 = (int *)*((void *)this + 10);
                    if (v23 != v22 && v17 - v15 <= 6) {
                      *((void *)this + 11) = --v22;
                    }
                    uint64_t v24 = (v17 - 1);
                    if (v17 >= 1)
                    {
                      uint64_t v25 = (char *)this + 56;
                      if (*((char *)this + 79) < 0) {
                        uint64_t v25 = *v8;
                      }
                      if (*(_WORD *)&v25[2 * v24] == 115)
                      {
                        int v26 = v24 + *((_DWORD *)this + 27);
                        unint64_t v27 = *((void *)this + 12);
                        if ((unint64_t)v22 >= v27)
                        {
                          uint64_t v29 = v22 - v23;
                          unint64_t v30 = v29 + 1;
                          if ((unint64_t)(v29 + 1) >> 62) {
                            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                          }
                          uint64_t v31 = v27 - (void)v23;
                          if (v31 >> 1 > v30) {
                            unint64_t v30 = v31 >> 1;
                          }
                          BOOL v32 = (unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL;
                          unint64_t v33 = 0x3FFFFFFFFFFFFFFFLL;
                          if (!v32) {
                            unint64_t v33 = v30;
                          }
                          if (v33)
                          {
                            unint64_t v33 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v33);
                            uint64_t v23 = (int *)*((void *)this + 10);
                            uint64_t v22 = (int *)*((void *)this + 11);
                          }
                          else
                          {
                            uint64_t v34 = 0;
                          }
                          std::basic_string<char16_t> v35 = (int *)(v33 + 4 * v29);
                          *std::basic_string<char16_t> v35 = v26;
                          uint64_t v28 = v35 + 1;
                          while (v22 != v23)
                          {
                            int v36 = *--v22;
                            *--std::basic_string<char16_t> v35 = v36;
                          }
                          *((void *)this + 10) = v35;
                          *((void *)this + 11) = v28;
                          *((void *)this + 12) = v33 + 4 * v34;
                          if (v23) {
                            operator delete(v23);
                          }
                        }
                        else
                        {
                          int *v22 = v26;
                          uint64_t v28 = v22 + 1;
                        }
                        *((void *)this + 11) = v28;
                        uint64_t v22 = v28;
                      }
                    }
                    int v37 = *((_DWORD *)this + 27) + v17;
                    unint64_t v38 = *((void *)this + 12);
                    if ((unint64_t)v22 >= v38)
                    {
                      float v40 = (int *)*((void *)this + 10);
                      uint64_t v41 = v22 - v40;
                      unint64_t v42 = v41 + 1;
                      if ((unint64_t)(v41 + 1) >> 62) {
                        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                      }
                      uint64_t v43 = v38 - (void)v40;
                      if (v43 >> 1 > v42) {
                        unint64_t v42 = v43 >> 1;
                      }
                      BOOL v32 = (unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL;
                      unint64_t v44 = 0x3FFFFFFFFFFFFFFFLL;
                      if (!v32) {
                        unint64_t v44 = v42;
                      }
                      if (v44)
                      {
                        unint64_t v44 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v44);
                        float v40 = (int *)*((void *)this + 10);
                        uint64_t v22 = (int *)*((void *)this + 11);
                      }
                      else
                      {
                        uint64_t v45 = 0;
                      }
                      uint64_t v46 = (int *)(v44 + 4 * v41);
                      *uint64_t v46 = v37;
                      uint64_t v39 = v46 + 1;
                      while (v22 != v40)
                      {
                        int v47 = *--v22;
                        *--uint64_t v46 = v47;
                      }
                      *((void *)this + 10) = v46;
                      *((void *)this + 11) = v39;
                      *((void *)this + 12) = v44 + 4 * v45;
                      if (v40) {
                        operator delete(v40);
                      }
                    }
                    else
                    {
                      int *v22 = v37;
                      uint64_t v39 = v22 + 1;
                    }
                    *((void *)this + 11) = v39;
                    uint64_t v22 = v39;
                  }
                  int v15 = v18 + v17;
                  int v48 = v18 + v17 + *((_DWORD *)this + 27);
                  unint64_t v49 = *((void *)this + 12);
                  if ((unint64_t)v22 >= v49)
                  {
                    uint64_t v51 = (int *)*((void *)this + 10);
                    uint64_t v52 = v22 - v51;
                    unint64_t v53 = v52 + 1;
                    if ((unint64_t)(v52 + 1) >> 62) {
                      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                    }
                    uint64_t v54 = v49 - (void)v51;
                    if (v54 >> 1 > v53) {
                      unint64_t v53 = v54 >> 1;
                    }
                    BOOL v32 = (unint64_t)v54 >= 0x7FFFFFFFFFFFFFFCLL;
                    unint64_t v55 = 0x3FFFFFFFFFFFFFFFLL;
                    if (!v32) {
                      unint64_t v55 = v53;
                    }
                    if (v55)
                    {
                      unint64_t v55 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v55);
                      uint64_t v51 = (int *)*((void *)this + 10);
                      uint64_t v22 = (int *)*((void *)this + 11);
                    }
                    else
                    {
                      uint64_t v56 = 0;
                    }
                    uint64_t v57 = (int *)(v55 + 4 * v52);
                    *uint64_t v57 = v48;
                    std::basic_string<char16_t> v50 = v57 + 1;
                    while (v22 != v51)
                    {
                      int v58 = *--v22;
                      *--uint64_t v57 = v58;
                    }
                    *((void *)this + 10) = v57;
                    *((void *)this + 11) = v50;
                    *((void *)this + 12) = v55 + 4 * v56;
                    if (v51) {
                      operator delete(v51);
                    }
                  }
                  else
                  {
                    int *v22 = v48;
                    std::basic_string<char16_t> v50 = v22 + 1;
                  }
                  *((void *)this + 11) = v50;
                }
                while (v14 != v13);
                uint64_t v59 = *((int *)this + 26);
                *((_DWORD *)this + 26) = v59 + 1;
                uint64_t v4 = *(unsigned int *)(*((void *)this + 10) + 4 * v59);
              }
            }
            break;
          }
        }
      }
      *((_DWORD *)this + 27) = v4;
    }
  }
  else
  {
    *((_DWORD *)this + 26) = v2 + 1;
    return *(unsigned int *)(v3 + 4 * v2);
  }
  return v4;
}

void morphun::tokenizer::locale::de::titleCase(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  if (*(char *)(npc<std::basic_string<char16_t>>(a1) + 23) < 0)
  {
    **(_WORD **)a1 = 0;
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    *(_WORD *)a1 = 0;
    *(unsigned char *)(a1 + 23) = 0;
  }
  if (a5 >= 1)
  {
    std::basic_string<char16_t>::value_type v9 = MEMORY[0x1D942BD30](*(unsigned __int16 *)(a2 + 2 * a4));
    std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)a1, v9);
    if (a5 != 1)
    {
      uint64_t v10 = a5 - 1;
      unint64_t v11 = (unsigned __int16 *)(a2 + 2 * a4 + 2);
      do
      {
        npc<std::basic_string<char16_t>>(a1);
        unsigned int v12 = *v11++;
        std::basic_string<char16_t>::value_type v13 = MEMORY[0x1D942BD20](v12);
        std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)a1, v13);
        --v10;
      }
      while (v10);
    }
  }
}

void sub_1D2C8E48C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::de::DeTokenExtractorIterator::~DeTokenExtractorIterator(morphun::tokenizer::locale::de::DeTokenExtractorIterator *this)
{
  morphun::tokenizer::locale::de::DeTokenExtractorIterator::~DeTokenExtractorIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;

  *(void *)this = &unk_1F2A11A20;
  uint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator((morphun::tokenizer::locale::de::DeTokenExtractorIterator *)((char *)this + 16));
}

BOOL morphun::tokenizer::locale::de::DeTokenExtractorIterator::isIndivisibleWordNormalized(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (unsigned __int16 *)a3;
  morphun::tokenizer::locale::de::titleCase(a1, a3, a4, 0, a4);
  BOOL result = 0;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
  if ((v8 & 0x80u) == 0) {
    std::basic_string<char16_t>::value_type v9 = (unsigned __int16 *)a1;
  }
  else {
    std::basic_string<char16_t>::value_type v9 = *(unsigned __int16 **)a1;
  }
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a1 + 8);
  }
  if (v8 == a4)
  {
    if (a4)
    {
      uint64_t v10 = a4 - 1;
      do
      {
        int v12 = *v9++;
        int v11 = v12;
        int v14 = *v5++;
        int v13 = v14;
        BOOL v16 = v10-- != 0;
        BOOL result = v13 == v11;
      }
      while (v13 == v11 && v16);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

void morphun::dictionary::Inflector_InflectionPattern::constrain(unint64_t *a1, uint64_t a2, uint64_t *a3, int a4)
{
  uint64_t ValuesOfTypes = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getValuesOfTypes(*(void *)(*(void *)(a2 + 32) + 184), a3);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  if (*(__int16 *)(a2 + 18) >= 1)
  {
    uint64_t v8 = ValuesOfTypes;
    std::basic_string<char16_t>::value_type v9 = 0;
    for (int i = 0; i < *(__int16 *)(a2 + 18); ++i)
    {
      morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&v24, a2, i);
      uint64_t v11 = v25 & v8;
      if (a4)
      {
        if (v11 == v25) {
          goto LABEL_7;
        }
      }
      else if (v11 == v8)
      {
LABEL_7:
        unint64_t v12 = a1[2];
        if ((unint64_t)v9 >= v12)
        {
          int v15 = (void *)*a1;
          unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)v9 - *a1) >> 3);
          unint64_t v17 = v16 + 1;
          if (v16 + 1 > 0xAAAAAAAAAAAAAAALL) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (void)v15) >> 3);
          if (2 * v18 > v17) {
            unint64_t v17 = 2 * v18;
          }
          if (v18 >= 0x555555555555555) {
            unint64_t v19 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v19 = v17;
          }
          if (v19) {
            unint64_t v19 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v19);
          }
          else {
            uint64_t v20 = 0;
          }
          unint64_t v21 = v19 + 24 * v16;
          *(_OWORD *)unint64_t v21 = v24;
          *(void *)(v21 + 16) = v25;
          unint64_t v22 = v21;
          if (v9 != v15)
          {
            do
            {
              long long v23 = *(_OWORD *)(v9 - 3);
              *(void *)(v22 - 8) = *(v9 - 1);
              *(_OWORD *)(v22 - 24) = v23;
              v22 -= 24;
              v9 -= 3;
            }
            while (v9 != v15);
            std::basic_string<char16_t>::value_type v9 = (void *)*a1;
          }
          int v14 = (void *)(v21 + 24);
          *a1 = v22;
          a1[1] = v21 + 24;
          a1[2] = v19 + 24 * v20;
          if (v9) {
            operator delete(v9);
          }
        }
        else
        {
          long long v13 = v24;
          _OWORD v9[2] = v25;
          *(_OWORD *)std::basic_string<char16_t>::value_type v9 = v13;
          int v14 = v9 + 3;
        }
        a1[1] = (unint64_t)v14;
        std::basic_string<char16_t>::value_type v9 = v14;
      }
    }
  }
}

void sub_1D2C8E798(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    *(void *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition(morphun::dictionary::Inflector_InflectionPattern *this, uint64_t a2, int a3)
{
  if (*(__int16 *)(a2 + 18) <= a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"index too large for getInflectionAtPosition");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  unint64_t v5 = morphun::dictionary::metadata::CompressedArray<long long>::read(*(void *)(a2 + 32) + 192, *(_DWORD *)(a2 + 24) + a3);
  int Value = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v5, 0, *(unsigned __int8 *)(*(void *)(a2 + 32) + 224));
  uint64_t result = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v5 >> *(unsigned char *)(*(void *)(a2 + 32) + 224), 0, *(unsigned __int8 *)(*(void *)(a2 + 32) + 225));
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a2 + 32) + 136) + 8 * Value);
  *(void *)this = a2;
  *((_DWORD *)this + 2) = result;
  *((void *)this + 2) = v8;
  return result;
}

void sub_1D2C8E8B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::dictionary::metadata::CompressedArray<long long>::read(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = v2 * a2;
  int v4 = v2 * a2 + 63;
  if (v2 * a2 >= 0) {
    int v4 = v2 * a2;
  }
  int v5 = v2 + v3;
  int v6 = v5 - 1;
  int v7 = v5 + 62;
  if (v6 >= 0) {
    int v7 = v6;
  }
  if (a2 < 0 || (int v8 = v7 >> 6, v8 > *(_DWORD *)a1))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Invalid CompressedArray index");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  int v9 = v4 >> 6;
  char v10 = v3 - (v4 & 0xC0);
  uint64_t v11 = (void *)(*(void *)(a1 + 8) + 8 * (v4 >> 6));
  uint64_t v12 = *v11 >> v10;
  if (v9 != v8) {
    v12 |= v11[1] << -v10;
  }
  return v12 & *(void *)(a1 + 16);
}

void sub_1D2C8E9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::dictionary::metadata::CompressedArray<int>::extractValue(unint64_t a1, int a2, int a3)
{
  if ((a3 + a2) >= 0x41)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Illegal start or length value");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  return (a1 >> a2) & ~(-1 << a3);
}

void sub_1D2C8EAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::dictionary::Inflector_InflectionPattern::selectLemmaInflection(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  if (!*(_WORD *)(a2 + 18))
  {
    *a1 = 0;
    a1[24] = 0;
    return;
  }
  if (*(__int16 *)(a2 + 18) < 1)
  {
    int v7 = 0;
    goto LABEL_57;
  }
  uint64_t v39 = a1;
  int v7 = 0;
  int v8 = 0;
  unint64_t v9 = 0;
  int v10 = 0;
  __int32 v11 = 0;
  uint64_t v12 = -1;
  uint64_t v13 = 65281;
  do
  {
    morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&__p, a2, v10);
    int v14 = *a4;
    int v15 = a4[1];
    if (*a4 == v15)
    {
      int64_t v16 = 0;
    }
    else
    {
      int64_t v16 = 0;
      do
      {
        uint64_t v17 = *v14++;
        int64_t v16 = ((v17 & __p.__r_.__value_.__r.__words[2]) != 0) | (unint64_t)(2 * v16);
      }
      while (v14 != v15);
    }
    if (v16 >= v12)
    {
      uint8x8_t v18 = (uint8x8_t)vcnt_s8((int8x8_t)__p.__r_.__value_.__r.__words[2]);
      v18.i16[0] = vaddlv_u8(v18);
      uint64_t v19 = -v18.i32[0];
      uint8x8_t v20 = (uint8x8_t)vcnt_s8((int8x8_t)(__p.__r_.__value_.__r.__words[2] & a3));
      v20.i16[0] = vaddlv_u8(v20);
      if (v12 < v16) {
        goto LABEL_11;
      }
      if ((__int16)v11 > v20.i16[0] || (__int16)v11 >= v20.i16[0] && (int)v19 < (__int16)v13) {
        goto LABEL_37;
      }
      if ((__int16)v11 < v20.i16[0] || (int)v19 > (__int16)v13)
      {
LABEL_11:
        int v8 = (std::basic_string<char16_t> *)v7;
        uint64_t v12 = v16;
        __int32 v11 = v20.i32[0];
        uint64_t v13 = v19;
      }
      if ((unint64_t)v8 >= v9)
      {
        __int32 v40 = v11;
        uint64_t v22 = a3;
        uint64_t v23 = v13;
        unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v7) >> 3) + 1;
        if (v24 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556 * ((uint64_t)(v9 - (void)v7) >> 3) > v24) {
          unint64_t v24 = 0x5555555555555556 * ((uint64_t)(v9 - (void)v7) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (void)v7) >> 3) >= 0x555555555555555) {
          unint64_t v25 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v25 = v24;
        }
        if (v25) {
          unint64_t v25 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v25);
        }
        else {
          uint64_t v26 = 0;
        }
        unint64_t v27 = (std::basic_string<char16_t> *)(v25 + 8 * (((char *)v8 - (char *)v7) >> 3));
        *unint64_t v27 = __p;
        if (v8 == (std::basic_string<char16_t> *)v7)
        {
          uint64_t v29 = (int *)(v25 + 8 * (((char *)v8 - (char *)v7) >> 3));
        }
        else
        {
          unint64_t v28 = v25 + 8 * (((char *)v8 - (char *)v7) >> 3);
          do
          {
            uint64_t v29 = (int *)(v28 - 24);
            long long v30 = *(_OWORD *)&v8[-1].__r_.__value_.__l.__data_;
            *(void *)(v28 - 8) = *((void *)&v8[-1].__r_.__value_.__l + 2);
            *(_OWORD *)(v28 - 24) = v30;
            --v8;
            v28 -= 24;
          }
          while (v8 != (std::basic_string<char16_t> *)v7);
        }
        unint64_t v9 = v25 + 24 * v26;
        int v8 = v27 + 1;
        if (v7) {
          operator delete(v7);
        }
        int v7 = v29;
        uint64_t v13 = v23;
        a3 = v22;
        __int32 v11 = v40;
      }
      else
      {
        long long v21 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        v8->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v21;
        ++v8;
      }
    }
LABEL_37:
    ++v10;
  }
  while (v10 < *(__int16 *)(a2 + 18));
  if (v7 == (int *)v8) {
    goto LABEL_55;
  }
  uint64_t v31 = v7 + 6;
  BOOL v32 = v7;
  if (v7 + 6 != (int *)v8)
  {
    BOOL v32 = v7;
    do
    {
      morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)v31 + 40), v31[2], &__p);
      std::basic_string<char16_t>::size_type v33 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
      morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)v32 + 40), v32[2], &v41);
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::size_type v35 = v41.__r_.__value_.__l.__size_;
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      else
      {
        std::basic_string<char16_t>::size_type v35 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if ((v33 & 0x80u) == 0) {
        std::basic_string<char16_t>::size_type v36 = v33;
      }
      else {
        std::basic_string<char16_t>::size_type v36 = size;
      }
      if (v36 < v35) {
        BOOL v32 = v31;
      }
      v31 += 6;
    }
    while (v31 != (int *)v8);
  }
  if (v32 == (int *)v8)
  {
LABEL_55:
    a1 = v39;
LABEL_57:
    char v38 = 0;
    *a1 = 0;
    goto LABEL_58;
  }
  long long v37 = *(_OWORD *)v32;
  a1 = v39;
  *((void *)v39 + 2) = *((void *)v32 + 2);
  *(_OWORD *)uint64_t v39 = v37;
  char v38 = 1;
LABEL_58:
  a1[24] = v38;
  if (v7) {
    operator delete(v7);
  }
}

void sub_1D2C8EE2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (v19) {
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dictionary::Inflector_InflectionPattern::reinflect(unsigned char *__dst, uint64_t a2, uint64_t a3, uint64_t a4, char *__src, unint64_t a6)
{
  unint64_t v6 = a6;
  int v8 = __dst;
  if (!a4 || (uint64_t v9 = a4, v10 = a3, (a4 & ~a3) == 0))
  {
    if (a6 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a6 >= 0xB)
    {
      uint64_t v11 = (a6 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a6 | 3) != 0xB) {
        uint64_t v11 = a6 | 3;
      }
      uint64_t v12 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v11 + 1);
      v8[1] = v6;
      void v8[2] = v13 | 0x8000000000000000;
      *int v8 = v12;
      int v8 = v12;
    }
    else
    {
      __dst[23] = a6;
      if (!a6) {
        goto LABEL_11;
      }
    }
    memmove(v8, __src, 2 * v6);
LABEL_11:
    *((_WORD *)v8 + v6) = 0;
    return;
  }
  uint64_t v14 = a2;
  memset(&v80, 0, sizeof(v80));
  if (*(__int16 *)(a2 + 18) < 1) {
    goto LABEL_104;
  }
  int v15 = 0;
  uint64_t v16 = 0;
  uint8x8_t v17 = (uint8x8_t)vcnt_s8((int8x8_t)a4);
  v17.i16[0] = vaddlv_u8(v17);
  uint64_t v62 = v17.u32[0];
  uint8x8_t v18 = &__src[2 * a6];
  uint64_t v19 = -1;
  uint64_t v64 = 0xFFFFFFFFLL;
  unsigned __int8 v65 = v18;
  do
  {
    uint64_t v20 = v14;
    morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)&__dsta, v14, v15);
    unint64_t v21 = __dsta.__r_.__value_.__r.__words[2];
    morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(__dsta.__r_.__value_.__r.__words[0] + 40), __dsta.__r_.__value_.__r.__words[1], &__str);
    int8x8_t v22 = (int8x8_t)(v21 & v10);
    if (!v10 || *(void *)&v22 == v21)
    {
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
        uint64_t v23 = __str.__r_.__value_.__s.__data_[4];
        if ((int)v23 <= (__int16)v16) {
          goto LABEL_30;
        }
        p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      }
      else
      {
        uint64_t v23 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        if (HIBYTE(__str.__r_.__value_.__r.__words[2]) <= (__int16)v16) {
          goto LABEL_30;
        }
        p_str = &__str;
        std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      if (v6 >= size)
      {
        if (size)
        {
          uint64_t v26 = -(uint64_t)size;
          do
          {
            int v27 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[0];
            p_str = (std::basic_string<char16_t> *)((char *)p_str + 2);
            BOOL v28 = v27 == *(unsigned __int16 *)&v18[2 * v26];
            if (v27 != *(unsigned __int16 *)&v18[2 * v26]) {
              break;
            }
            ++v26;
          }
          while (v26);
          if (v28) {
            uint64_t v16 = v23;
          }
          else {
            uint64_t v16 = v16;
          }
        }
        else
        {
          uint64_t v16 = v23;
        }
      }
    }
LABEL_30:
    if ((v9 & ~v21) != 0)
    {
      uint64_t v31 = v19;
      goto LABEL_88;
    }
    uint8x8_t v29 = (uint8x8_t)vcnt_s8(v22);
    v29.i16[0] = vaddlv_u8(v29);
    uint64_t v30 = v29.u32[0];
    if (morphun::util::gLogLevel <= 0)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v72, (char *)L"reinflect result candidate suffix: ");
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v71, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
      }
      else {
        std::basic_string<char16_t> v71 = __str;
      }
      int v32 = SHIBYTE(v71.__r_.__value_.__r.__words[2]);
      int v61 = (void *)v71.__r_.__value_.__r.__words[0];
      if ((v71.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v33 = &v71;
      }
      else {
        std::basic_string<char16_t>::size_type v33 = (std::basic_string<char16_t> *)v71.__r_.__value_.__r.__words[0];
      }
      if ((v71.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v34 = HIBYTE(v71.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v34 = v71.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v72, (const std::basic_string<char16_t>::value_type *)v33, v34);
      std::basic_string<char16_t> v73 = v72;
      memset(&v72, 0, sizeof(v72));
      int v63 = v32;
      std::basic_string<char16_t>::append(&v73, L" , inflectionGrammemes: [", 0x19uLL);
      std::basic_string<char16_t> v74 = v73;
      memset(&v73, 0, sizeof(v73));
      morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(*(morphun::dictionary::DictionaryMetaData_MMappedDictionary **)(*(void *)(v20 + 32) + 184), v21, (uint64_t *)&v68);
      morphun::util::StringViewUtils::join(L", ", 2uLL, &v68, (uint64_t)__p);
      if ((v70 & 0x80u) == 0) {
        std::basic_string<char16_t>::size_type v35 = __p;
      }
      else {
        std::basic_string<char16_t>::size_type v35 = (void **)__p[0];
      }
      if ((v70 & 0x80u) == 0) {
        std::basic_string<char16_t>::size_type v36 = v70;
      }
      else {
        std::basic_string<char16_t>::size_type v36 = (std::basic_string<char16_t>::size_type)__p[1];
      }
      std::basic_string<char16_t>::append(&v74, (const std::basic_string<char16_t>::value_type *)v35, v36);
      uint64_t v37 = v9;
      std::basic_string<char16_t> v75 = v74;
      memset(&v74, 0, sizeof(v74));
      std::basic_string<char16_t>::append(&v75, L"], Number of matches with existing grammemes: ", 0x2EuLL);
      uint64_t v38 = v16;
      std::basic_string<char16_t> v76 = v75;
      memset(&v75, 0, sizeof(v75));
      std::to_string(&v66, v30);
      uint64_t v39 = v19;
      unint64_t v40 = v6;
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t> v41 = &v66;
      }
      else {
        std::basic_string<char16_t> v41 = (std::string *)v66.__r_.__value_.__r.__words[0];
      }
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int32_t v42 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
      }
      else {
        int32_t v42 = v66.__r_.__value_.__r.__words[1];
      }
      morphun::util::StringViewUtils::to_u16string((const char *)v41, v42, &v67);
      int v43 = SHIBYTE(v67.__r_.__value_.__r.__words[2]);
      unint64_t v44 = (void *)v67.__r_.__value_.__r.__words[0];
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v45 = &v67;
      }
      else {
        uint64_t v45 = (std::basic_string<char16_t> *)v67.__r_.__value_.__r.__words[0];
      }
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v46 = HIBYTE(v67.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v46 = v67.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v76, (const std::basic_string<char16_t>::value_type *)v45, v46);
      std::basic_string<char16_t> v77 = v76;
      memset(&v76, 0, sizeof(v76));
      if (morphun::util::gLogLevel <= 0)
      {
        if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v47 = &v77;
        }
        else {
          int v47 = (std::basic_string<char16_t> *)v77.__r_.__value_.__r.__words[0];
        }
        morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v47);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v77.__r_.__value_.__l.__data_);
        if (v43 < 0) {
          goto LABEL_93;
        }
      }
      else
      {
        if ((v43 & 0x80000000) == 0) {
          goto LABEL_67;
        }
LABEL_93:
        operator delete(v44);
      }
LABEL_67:
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v66.__r_.__value_.__l.__data_);
      }
      unint64_t v6 = v40;
      uint64_t v19 = v39;
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      uint64_t v16 = v38;
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      uint64_t v9 = v37;
      if ((char)v70 < 0) {
        operator delete(__p[0]);
      }
      v67.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v68;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v67);
      uint64_t v10 = a3;
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v74.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v73.__r_.__value_.__l.__data_);
        if (v63 < 0) {
          goto LABEL_95;
        }
      }
      else
      {
        if ((v63 & 0x80000000) == 0) {
          goto LABEL_79;
        }
LABEL_95:
        operator delete(v61);
      }
LABEL_79:
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v72.__r_.__value_.__l.__data_);
      }
    }
    uint64_t v48 = v19;
    if (v19 <= v30)
    {
      uint8x8_t v49 = (uint8x8_t)vcnt_s8((int8x8_t)v21);
      v49.i16[0] = vaddlv_u8(v49);
      uint64_t v50 = v49.u32[0] - v62;
      uint64_t v31 = v48;
      if (v48 != v30 || v64 > v50)
      {
        std::basic_string<char16_t>::operator=(&v80, &__str);
        uint64_t v64 = v50;
        uint64_t v31 = v30;
      }
    }
    else
    {
      uint64_t v31 = v19;
    }
LABEL_88:
    uint64_t v14 = v20;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    ++v15;
    uint64_t v19 = v31;
    uint8x8_t v18 = v65;
  }
  while (v15 < *(__int16 *)(v20 + 18));
  int v8 = __dst;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v6 >= v6 - (unsigned __int16)v16) {
      std::basic_string<char16_t>::size_type v52 = v6 - (unsigned __int16)v16;
    }
    else {
      std::basic_string<char16_t>::size_type v52 = v6;
    }
    if (v52 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (v52 >= 0xB)
    {
      uint64_t v54 = (v52 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v52 | 3) != 0xB) {
        uint64_t v54 = v52 | 3;
      }
      p_dsta = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v54 + 1);
      __dsta.__r_.__value_.__l.__size_ = v52;
      __dsta.__r_.__value_.__r.__words[2] = v55 | 0x8000000000000000;
      __dsta.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dsta;
    }
    else
    {
      *((unsigned char *)&__dsta.__r_.__value_.__s + 23) = v52;
      p_dsta = &__dsta;
      if (!v52)
      {
LABEL_109:
        p_dsta->__r_.__value_.__s.__data_[v52] = 0;
        if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v56 = &v80;
        }
        else {
          uint64_t v56 = (std::basic_string<char16_t> *)v80.__r_.__value_.__r.__words[0];
        }
        if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v57 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v57 = v80.__r_.__value_.__l.__size_;
        }
        std::basic_string<char16_t>::append(&__dsta, (const std::basic_string<char16_t>::value_type *)v56, v57);
        *(std::basic_string<char16_t> *)long long __dst = __dsta;
        goto LABEL_116;
      }
    }
    memmove(p_dsta, __src, 2 * v52);
    goto LABEL_109;
  }
LABEL_104:
  *int v8 = 0;
  v8[1] = 0;
  void v8[2] = 0;
LABEL_116:
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v80.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C8F480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57)
{
  if (*(char *)(v57 - 113) < 0) {
    operator delete(*(void **)(v57 - 136));
  }
  if (*(char *)(v57 - 89) < 0) {
    operator delete(*(void **)(v57 - 112));
  }
  _Unwind_Resume(exception_object);
}

void *morphun::dictionary::metadata::MarisaTrie<int>::getKey(std::basic_string<char16_t> *a1, marisa::Trie *this, int a3)
{
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  long long v8 = 0u;
  long long v6 = 0u;
  long long v7 = (unint64_t)a3;
  marisa::Trie::reverse_lookup(this, (marisa::Agent **)&v6);
  morphun::dictionary::metadata::CharsetConverter::decode((uint64_t)this + 8, a1, *((uint64_t *)&v7 + 1), v8);
  return marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((void *)&v8 + 1);
}

void sub_1D2C8F65C(_Unwind_Exception *a1)
{
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

BOOL morphun::dictionary::Inflector_InflectionPattern::containsPartsOfSpeech(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(char *)(a3 + 23);
  BOOL v5 = v4 < 0;
  if (v4 >= 0) {
    long long v6 = (unsigned __int16 *)a3;
  }
  else {
    long long v6 = *(unsigned __int16 **)a3;
  }
  if (v5) {
    unint64_t v7 = *(void *)(a3 + 8);
  }
  else {
    unint64_t v7 = *(unsigned __int8 *)(a3 + 23);
  }
  int IdentifierIfAvailable = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(a2 + 144, v6, v7);
  uint64_t v9 = 1 << IdentifierIfAvailable;
  if (IdentifierIfAvailable < 0) {
    uint64_t v9 = 0;
  }
  return (v9 & a1) != 0;
}

uint64_t **com::apple::siri::tokenizer::data::config_ar::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[8] = xmmword_1E695DF30;
  v3[9] = *(_OWORD *)&off_1E695DF40;
  v3[10] = xmmword_1E695DF50;
  v3[11] = unk_1E695DF60;
  v3[4] = xmmword_1E695DEF0;
  v3[5] = unk_1E695DF00;
  v3[6] = xmmword_1E695DF10;
  v3[7] = unk_1E695DF20;
  v3[0] = xmmword_1E695DEB0;
  v3[1] = *(_OWORD *)&off_1E695DEC0;
  v3[2] = xmmword_1E695DED0;
  _OWORD v3[3] = *(_OWORD *)&off_1E695DEE0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 8);
}

void morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap(morphun::transliteration::BidirectionalStringMap *this)
{
  morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  marisa::grimoire::trie::LoudsTrie **v3;

  *(void *)this = &unk_1F2A08760;
  int v2 = *((void *)this + 18);
  if (v2)
  {
    int v3 = morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(v2);
    MEMORY[0x1D942B8B0](v3, 0x10B0C402125A480);
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 80);
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::BidirectionalStringMap *)((char *)this + 64));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::BidirectionalStringMap *)((char *)this + 48));
  morphun::util::MemoryMappedFile::~MemoryMappedFile((morphun::transliteration::BidirectionalStringMap *)((char *)this + 8));
}

void morphun::transliteration::BidirectionalStringMap::getFromUnicodeSetPattern(std::basic_string<char16_t> *this, morphun::util::MemoryMappedFile *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  if ((unint64_t)(*((void *)a2 + 1) - v3) <= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)4, &v13);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, "I", &v13, v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v15, &v14, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)a2 + 2) - *((_DWORD *)a2 + 4)), &v12);
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v12;
    }
    else {
      uint64_t v10 = (std::basic_string<char16_t> *)v12.__r_.__value_.__r.__words[0];
    }
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v12.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v15, (const std::basic_string<char16_t>::value_type *)v10, size);
    std::basic_string<char16_t> v16 = v15;
    memset(&v15, 0, sizeof(v15));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v16);
  }
  unint64_t v5 = *(unsigned int *)(*(void *)a2 + v3);
  *((void *)a2 + 2) = v3 + 4;
  v15.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<char const*>(a2, &v15, v5);
  memset(&v16, 0, sizeof(v16));
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  this->__r_.__value_.__r.__words[0] = 0;
  morphun::util::StringViewUtils::convert((uint64_t)&v16, (const char *)v15.__r_.__value_.__l.__data_, v5);
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v6 = &v16;
  }
  else {
    long long v6 = (std::basic_string<char16_t> *)v16.__r_.__value_.__r.__words[0];
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v7 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v7 = v16.__r_.__value_.__l.__size_;
  }
  morphun::util::StringViewUtils::replace(this, (uint64_t)v6, v7, word_1D2EC1608, 1uLL, &word_1D2ED0AEE, 0);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C8F9F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void *morphun::util::MemoryMappedFile::read<signed char>(void *result, unsigned char *a2)
{
  int v2 = result;
  uint64_t v3 = result[2];
  if (result[1] == v3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)1, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, "I", &v9, v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, &v10, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v2 + 2) - *((_DWORD *)v2 + 4)), &v8);
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v6 = &v8;
    }
    else {
      long long v6 = (std::basic_string<char16_t> *)v8.__r_.__value_.__r.__words[0];
    }
    if ((v8.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v8.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v8.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v11, (const std::basic_string<char16_t>::value_type *)v6, size);
    std::basic_string<char16_t> v12 = v11;
    memset(&v11, 0, sizeof(v11));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v12);
  }
  *a2 = *(unsigned char *)(*result + v3);
  ++result[2];
  return result;
}

void sub_1D2C8FBF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

uint64_t morphun::transliteration::BidirectionalStringMap::BidirectionalStringMap(uint64_t a1, const void **a2)
{
  *(void *)a1 = &unk_1F2A08760;
  uint64_t v4 = (morphun::util::MemoryMappedFile *)(a1 + 8);
  std::basic_string<char16_t>::size_type v5 = (void *)morphun::util::MemoryMappedFile::MemoryMappedFile(a1 + 8, (uint64_t)a2);
  __s1.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<char const*>(v5, &__s1, 8uLL);
  if (strncmp((const char *)__s1.__r_.__value_.__l.__data_, "MORPHTM", 8uLL))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v21, "I", a2);
    std::basic_string<char16_t>::append(&v21, L" has an invalid header", 0x16uLL);
    std::basic_string<char16_t> __dst = v21;
    memset(&v21, 0, sizeof(v21));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (long long *)&__dst);
    void *exception = &unk_1F2A11298;
  }
  __dst.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<long long>(v4, &__dst);
  if (__dst.__r_.__value_.__r.__words[0] != 1)
  {
    std::basic_string<char16_t> v11 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v21, "I", a2);
    std::basic_string<char16_t>::append(&v21, (const std::basic_string<char16_t>::value_type *)" ", 0x1CuLL);
    std::basic_string<char16_t> __dst = v21;
    memset(&v21, 0, sizeof(v21));
    morphun::exception::Throwable::Throwable((uint64_t)v11, (long long *)&__dst);
    *std::basic_string<char16_t> v11 = &unk_1F2A114E8;
  }
  __dst.__r_.__value_.__s.__data_[0] = 0;
  morphun::util::MemoryMappedFile::read<short>(v4, &__dst);
  if (__dst.__r_.__value_.__s.__data_[0] != 1)
  {
    std::basic_string<char16_t> v12 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v21, "I", a2);
    std::basic_string<char16_t>::append(&v21, L" was built for a different architecture", 0x27uLL);
    std::basic_string<char16_t> __dst = v21;
    memset(&v21, 0, sizeof(v21));
    morphun::exception::Throwable::Throwable((uint64_t)v12, (long long *)&__dst);
    void *v12 = &unk_1F2A11298;
  }
  LOBYTE(__dst.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(v4, &__dst);
  if (LOBYTE(__dst.__r_.__value_.__l.__data_) - 3 <= 0xFFFFFFFD)
  {
    std::basic_string<char16_t> v13 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "U");
    morphun::exception::Throwable::Throwable((uint64_t)v13, (long long *)&__dst);
    void *v13 = &unk_1F2A11298;
  }
  *(unsigned char *)(a1 + 40) = __dst.__r_.__value_.__l.__data_;
  uint64_t v6 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 16) == v6)
  {
    std::basic_string<char16_t> v14 = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)1, &v19);
    std::basic_string<char16_t>::insert(&v19, (std::basic_string<char16_t>::size_type)"I", (const std::basic_string<char16_t>::value_type *)0x23, v15);
    std::basic_string<char16_t> __s1 = v19;
    memset(&v19, 0, sizeof(v19));
    std::basic_string<char16_t>::append(&__s1, (const std::basic_string<char16_t>::value_type *)" ", 0x13uLL);
    std::basic_string<char16_t> v21 = __s1;
    memset(&__s1, 0, sizeof(__s1));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*(_DWORD *)(a1 + 16) - *(_DWORD *)(a1 + 24)), &v18);
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v16 = &v18;
    }
    else {
      std::basic_string<char16_t> v16 = (std::basic_string<char16_t> *)v18.__r_.__value_.__r.__words[0];
    }
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v18.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v18.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v21, (const std::basic_string<char16_t>::value_type *)v16, size);
    std::basic_string<char16_t> __dst = v21;
    memset(&v21, 0, sizeof(v21));
    morphun::exception::Throwable::Throwable((uint64_t)v14, (long long *)&__dst);
    *std::basic_string<char16_t> v14 = &unk_1F2A11298;
  }
  char v7 = *(unsigned char *)(*(void *)(a1 + 8) + v6);
  *(void *)(a1 + 24) = v6 + 1;
  morphun::util::MemoryMappedFile::read<char const*>(v4, &__dst, 4uLL);
  *(unsigned char *)(a1 + 41) = v7;
  morphun::transliteration::BidirectionalStringMap::getFromUnicodeSetPattern(&__dst, v4);
  std::basic_string<char16_t> v8 = (void *)(a1 + 48);
  icu4cxx::UnicodeSet::UnicodeSet(a1 + 48);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  morphun::transliteration::BidirectionalStringMap::getFromUnicodeSetPattern(&__dst, v4);
  icu4cxx::UnicodeSet::UnicodeSet(a1 + 64);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie(a1 + 80, v4);
  if (*(unsigned char *)(a1 + 40) == 2) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a1 + 80;
  if (*(unsigned char *)(a1 + 41)) {
    MEMORY[0x1D942C140](*v8, 2);
  }
  MEMORY[0x1D942C170](*v8);
  return a1;
}

void sub_1D2C9021C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (*(char *)(v35 - 57) < 0) {
    operator delete(*(void **)(v35 - 80));
  }
  if (v34 < 0) {
    operator delete(v31);
  }
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v33 & 1) == 0)
    {
LABEL_14:
      morphun::util::MemoryMappedFile::~MemoryMappedFile(v30);
      _Unwind_Resume(a1);
    }
  }
  else if (!v33)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v32);
  goto LABEL_14;
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(void *a1, uint64_t a2, uint64_t a3)
{
  if (!a1[3] || (uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2)) == 0)
  {
    std::basic_string<char16_t> v9 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[7]);
    if ((void *)(a3 + 8) == v9) {
      std::basic_string<char16_t> v10 = 0;
    }
    else {
      std::basic_string<char16_t> v10 = (unsigned __int16 *)(v9 + 13);
    }
    PossessiveAdjectiveuint64_t Count = (morphun::grammar::synthesis::ItGrammarSynthesizer *)morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(v10);
    std::basic_string<char16_t> v12 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[6]);
    if ((void *)(a3 + 8) == v12) {
      std::basic_string<char16_t> v13 = 0;
    }
    else {
      std::basic_string<char16_t> v13 = (unsigned __int16 *)(v12 + 13);
    }
    int PossessiveAdjectivePerson = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(v13);
    std::basic_string<char16_t>::size_type v15 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 32))(a2, a1[4]);
    uint64_t Count = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(v15);
    uint8x8_t v17 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 32))(a2, a1[5]);
    uint64_t Gender = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    if (Count) {
      BOOL v20 = Gender == 0;
    }
    else {
      BOOL v20 = 1;
    }
    if (v20)
    {
      if (!Count)
      {
        morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::determine(a1 + 8, v19, (uint64_t)__p);
        uint64_t Count = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount((unsigned __int16 *)__p);
        if (v53 < 0) {
          operator delete(__p[0]);
        }
      }
      if (!Gender)
      {
        morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::determine(a1 + 37, v19, (uint64_t)__p);
        uint64_t Gender = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender((unsigned __int16 *)__p);
        if (v53 < 0) {
          operator delete(__p[0]);
        }
      }
    }
    if (!PossessiveAdjectiveCount || !PossessiveAdjectivePerson) {
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 72))(a1, a2, 1, Count, Gender);
    }
    uint64_t PossessiveAdjective = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjective(PossessiveAdjectiveCount, PossessiveAdjectivePerson);
    if (v22 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v23 = (const void *)PossessiveAdjective;
    unint64_t v24 = v22;
    int v51 = PossessiveAdjectivePerson;
    if (v22 >= 0xB)
    {
      uint64_t v27 = (v22 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v22 | 3) != 0xB) {
        uint64_t v27 = v22 | 3;
      }
      p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v27 + 1);
      unint64_t v56 = v24;
      int64_t v57 = v28 | 0x8000000000000000;
      std::basic_string<char16_t> __dst = (unsigned __int16 *)p_dst;
    }
    else
    {
      HIBYTE(v57) = v22;
      p_dst = (void **)&__dst;
      if (!v22)
      {
LABEL_34:
        *((_WORD *)p_dst + v24) = 0;
        if (v57 >= 0) {
          uint8x8_t v29 = (unsigned __int16 *)&__dst;
        }
        else {
          uint8x8_t v29 = __dst;
        }
        if (v57 >= 0) {
          unint64_t v30 = HIBYTE(v57);
        }
        else {
          unint64_t v30 = v56;
        }
        InflectedPossessiveAdjectiveint Value = morphun::grammar::synthesis::ItGrammarSynthesizer::getInflectedPossessiveAdjectiveValue(v29, v30, Gender, Count);
        std::basic_string<char16_t>::size_type v33 = v32;
        if (v32 > 0x7FFFFFFFFFFFFFF7) {
          std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
        }
        int v34 = (const void *)InflectedPossessiveAdjectiveValue;
        if (v32 >= 0xB)
        {
          uint64_t v36 = (v32 & 0xFFFFFFFFFFFFFFFCLL) + 4;
          if ((v32 | 3) != 0xB) {
            uint64_t v36 = v32 | 3;
          }
          uint64_t v35 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v36 + 1);
          v54.__r_.__value_.__l.__size_ = v33;
          v54.__r_.__value_.__r.__words[2] = v37 | 0x8000000000000000;
          v54.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v35;
        }
        else
        {
          *((unsigned char *)&v54.__r_.__value_.__s + 23) = v32;
          uint64_t v35 = &v54;
          if (!v32) {
            goto LABEL_48;
          }
        }
        memmove(v35, v34, 2 * v33);
LABEL_48:
        *((_WORD *)v35 + v33) = 0;
        std::basic_string<char16_t>::size_type size = HIBYTE(v54.__r_.__value_.__r.__words[2]);
        if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type size = v54.__r_.__value_.__l.__size_;
        }
        if (size) {
          std::basic_string<char16_t>::append(&v54, &word_1D2ED0D7C, 1uLL);
        }
        int v39 = *(char *)(v19 + 23);
        if (v39 >= 0) {
          unint64_t v40 = (const std::basic_string<char16_t>::value_type *)v19;
        }
        else {
          unint64_t v40 = *(const std::basic_string<char16_t>::value_type **)v19;
        }
        if (v39 >= 0) {
          std::basic_string<char16_t>::size_type v41 = *(unsigned __int8 *)(v19 + 23);
        }
        else {
          std::basic_string<char16_t>::size_type v41 = *(void *)(v19 + 8);
        }
        int32_t v42 = std::basic_string<char16_t>::append(&v54, v40, v41);
        uint64_t v43 = morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE((morphun::grammar::synthesis::ItGrammarSynthesizer *)v42);
        int v44 = *(char *)(v19 + 23);
        if (v44 >= 0) {
          uint64_t v45 = (unsigned __int16 *)v19;
        }
        else {
          uint64_t v45 = *(unsigned __int16 **)v19;
        }
        if (v44 >= 0) {
          unint64_t v46 = *(unsigned __int8 *)(v19 + 23);
        }
        else {
          unint64_t v46 = *(void *)(v19 + 8);
        }
        int v47 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v43, v45, v46);
        BOOL v50 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)(morphun::grammar::synthesis::ItGrammarSynthesizer::WORDSWITHPOSSESSIVEWITHOUTARTICLE(v47)
                                                                  + 8) == v47
           || (Count != 1 || PossessiveAdjectiveCount == 2) && v51 == 3;
        if (!a1[3])
        {
          morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)__p, (long long *)&v54, a3);
          (*(void (**)(void *, void **, BOOL, uint64_t, uint64_t))(*a1 + 72))(a1, __p, v50, Count, Gender);
          operator new();
        }
        morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)__p, (long long *)&v54, a3);
        uint64_t v26 = (*(uint64_t (**)(void *, void **, BOOL, uint64_t, uint64_t))(*a1 + 72))(a1, __p, v50, Count, Gender);
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v54.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57) < 0) {
          operator delete(__dst);
        }
        return v26;
      }
    }
    memmove(p_dst, v23, 2 * v24);
    goto LABEL_34;
  }
  char v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*a1 + 32);

  return v7(a1, a2, v6);
}

void sub_1D2C909E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v32, 0x10B3C40F7FF9C27);
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 16))(v33);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (*(char *)(v34 - 81) < 0) {
    operator delete(*(void **)(v34 - 104));
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::ItGrammarSynthesizer_ArticleLookupFunction(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(unsigned __int8 *)(a4 + 23);
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a4 + 8);
  }
  std::basic_string<char16_t> v8 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)(a2 + 1), a3, v7 != 0, 0);
  uint64_t v9 = *a2;
  *(void *)std::basic_string<char16_t> v8 = *a2;
  *(void *)((char *)a1 + *(void *)(v9 - 56)) = a2[4];
  *(void *)((char *)a1 + *(void *)(*a1 - 40)) = a2[5];
  a1[3] = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"count");
  uint64_t v10 = a3 + 8;
  uint64_t v11 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, (unsigned __int16 *)__p);
  uint64_t v12 = a3 + 16;
  if (a3 + 16 == v11) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = *(void *)(v11 + 56);
  }
  npc<morphun::dialog::SemanticFeature const>(v13);
  if (v25 < 0) {
    operator delete(__p[0]);
  }
  a1[4] = v13;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"gender");
  uint64_t v14 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v10, (unsigned __int16 *)__p);
  if (v12 == v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = *(void *)(v14 + 56);
  }
  std::basic_string<char16_t> v16 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)npc<morphun::dialog::SemanticFeature const>(v15);
  if (v25 < 0) {
    operator delete(__p[0]);
  }
  a1[5] = v15;
  uint8x8_t v17 = (unsigned __int16 *)morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_PERSON(v16);
  uint64_t v18 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v10, v17);
  if (v12 == v18) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *(void *)(v18 + 56);
  }
  BOOL v20 = (morphun::grammar::synthesis::ItGrammarSynthesizer *)npc<morphun::dialog::SemanticFeature const>(v19);
  a1[6] = v20;
  std::basic_string<char16_t> v21 = (unsigned __int16 *)morphun::grammar::synthesis::ItGrammarSynthesizer::POSSESSIVE_ADJECTIVE_COUNT(v20);
  uint64_t v22 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v10, v21);
  if (v12 == v22) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = *(void *)(v22 + 56);
  }
  a1[7] = npc<morphun::dialog::SemanticFeature const>(v23);
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::ItGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *)(a1 + 8));
}

void sub_1D2C90D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v15);
  _Unwind_Resume(a1);
}

void sub_1D2C90DFC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::PtBrAnalyzer::addWordNormalizationFilter(morphun::analysis::PtBrAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2C91018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void sub_1D2C910FC()
{
}

void morphun::analysis::PtBrAnalyzer::addStopFilter(morphun::analysis::PtBrAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2C9115C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::PtBrAnalyzer::~PtBrAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A07090);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A07090);
}

void *morphun::util::MemoryMappedFile::read<long long *>(void *result, void *a2, unint64_t a3)
{
  int v3 = a3;
  uint64_t v4 = result;
  uint64_t v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v8 = &v10;
    }
    else {
      std::basic_string<char16_t> v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    }
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v10.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    std::basic_string<char16_t> v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v14);
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1D2C91320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void *morphun::util::MemoryMappedFile::read<int *>(void *result, void *a2, unint64_t a3)
{
  int v3 = a3;
  uint64_t v4 = result;
  uint64_t v5 = result[2];
  if (result[1] - v5 < a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)v3, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, "I", &v11, v7);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v13, &v12, (std::basic_string<char16_t>::value_type *)" ");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)v4 + 2) - *((_DWORD *)v4 + 4)), &v10);
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v8 = &v10;
    }
    else {
      std::basic_string<char16_t> v8 = (std::basic_string<char16_t> *)v10.__r_.__value_.__r.__words[0];
    }
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v10.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v13, (const std::basic_string<char16_t>::value_type *)v8, size);
    std::basic_string<char16_t> v14 = v13;
    memset(&v13, 0, sizeof(v13));
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v14);
  }
  *a2 = *result + v5;
  result[2] = v5 + a3;
  return result;
}

void sub_1D2C914FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

void morphun::dictionary::Inflector_MMappedDictionary::~Inflector_MMappedDictionary(morphun::dictionary::Inflector_MMappedDictionary *this)
{
  if (*((unsigned char *)this + 392))
  {
    uint64_t v2 = *((void *)this + 47);
    if (v2) {
      MEMORY[0x1D942B890](v2, 0x1000C8000313F17);
    }
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 304);
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 240);
  if (*((unsigned char *)this + 216))
  {
    uint64_t v3 = *((void *)this + 25);
    if (v3) {
      MEMORY[0x1D942B890](v3, 0x1000C8000313F17);
    }
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)this + 19);
}

uint64_t morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern(morphun::dictionary::Inflector_MMappedDictionary *this, uint64_t a2, int a3)
{
  int v6 = morphun::dictionary::metadata::CompressedArray<int>::read(a2 + 264, a3);
  unint64_t v7 = morphun::dictionary::metadata::CompressedArray<long long>::read(a2 + 192, v6);
  __int16 Value = morphun::dictionary::metadata::CompressedArray<short>::extractValue(v7, *(unsigned __int8 *)(a2 + 403));
  unint64_t v9 = v7 >> *(unsigned char *)(a2 + 403);
  int v10 = morphun::dictionary::metadata::CompressedArray<short>::extractValue(v9, *(unsigned __int8 *)(a2 + 402));
  unint64_t v11 = v9 >> *(unsigned char *)(a2 + 402);
  int v12 = morphun::dictionary::metadata::CompressedArray<short>::extractValue(v11, *(unsigned __int8 *)(a2 + 401));
  uint64_t result = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v11 >> *(unsigned char *)(a2 + 401), 0, *(unsigned __int8 *)(a2 + 400));
  uint64_t v14 = *(void *)(*(void *)(a2 + 136) + 8 * v12);
  *(_DWORD *)this = a3;
  *((_DWORD *)this + 1) = result;
  *((void *)this + 1) = v14;
  *((_WORD *)this + 8) = v10;
  *((_WORD *)this + 9) = Value;
  *((_DWORD *)this + 5) = v6 + 1;
  *((_DWORD *)this + 6) = v6 + 1 + v10;
  *((void *)this + 4) = a2;
  *((void *)this + 5) = a2 + 144;
  return result;
}

uint64_t morphun::dictionary::metadata::CompressedArray<short>::extractValue(__int16 a1, unsigned int a2)
{
  if (a2 >= 0x41)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Illegal start or length value");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  return (__int16)(a1 & ~(unsigned __int16)(-1 << a2));
}

void sub_1D2C917CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::grammar::synthesis::EnGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::EnGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  __dst[9] = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "i");
  operator new();
}

void sub_1D2C924C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, morphun::dialog::DefinitenessDisplayFunction *a10, morphun::dialog::DictionaryLookupInflector *a11, uint64_t a12, icu4cxx::UnicodeSet *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v38 + 16));
  MEMORY[0x1D942B8B0](v38, 0x10A1C40A4A8B666);
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::LATIN_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::LATIN_SCRIPT(void)::LATIN_SCRIPT_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C9289C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1D2C92924(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::CYRILLIC_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::CYRILLIC_SCRIPT(void)::CYRILLIC_SCRIPT_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C929D4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::ARABIC_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::ARABIC_SCRIPT(void)::ARABIC_SCRIPT_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C92AA8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::HEBREW_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::HEBREW_SCRIPT(void)::HEBREW_SCRIPT_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C92B7C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::HAN_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::HAN_SCRIPT(void)::HAN_SCRIPT_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C92C50(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::HANGUL_SCRIPT(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::HANGUL_SCRIPT(void)::HANGUL_SCRIPT_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C92D24(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS(void)::NON_WHITESPACE_SEPARATED_SCRIPTS_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C92DF8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::lang::StringFilterUtil::filteredUnaccent(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, std::basic_string<char16_t> *a4@<X8>)
{
  int v6 = *(char *)(a3 + 23);
  if (v6 >= 0) {
    int v7 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    int v7 = *(_DWORD *)(a3 + 8);
  }
  memset(&v26, 0, sizeof(v26));
  if (v7 < 1)
  {
LABEL_63:
    if ((v6 & 0x80) != 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a4, *(const std::basic_string<char16_t>::value_type **)a3, *(void *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
      a4->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
    }
    goto LABEL_67;
  }
  int v10 = 0;
  char v11 = 1;
  do
  {
    while (1)
    {
      int v12 = *(char *)(a3 + 23);
      uint64_t v13 = v12 >= 0 ? a3 : *(void *)a3;
      if (v12 >= 0) {
        LODWORD(v14) = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        uint64_t v14 = *(void *)(a3 + 8);
      }
      uint64_t v15 = morphun::util::StringViewUtils::codePointAt(v13, v14, v10);
      if (!MEMORY[0x1D942C150](*a1, v15)) {
        break;
      }
      if (v11) {
        std::basic_string<char16_t>::assign(&v26, (const std::basic_string<char16_t> *)a3, 0, v10);
      }
      memset(&v25, 0, sizeof(v25));
      morphun::util::StringUtils::appendCodePoint(&v25, v15);
      memset(&__s, 0, sizeof(__s));
      {
        operator new();
      }
      npc<icu4cxx::Normalizer2>(morphun::lang::NFD(void)::NFD_);
      morphun::dictionary::PhraseProperties::normalize((uint64_t)&v25, (uint64_t)&__p);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
      }
      morphun::util::UnicodeSetUtils::removeSetFromString((uint64_t)&__s, a2, (uint64_t)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if ((*((unsigned char *)&__s.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        if (__s.__r_.__value_.__l.__size_ > 1)
        {
LABEL_37:
          {
            operator new();
          }
          npc<icu4cxx::Normalizer2>(morphun::lang::NFC(void)::NFC_);
          morphun::dictionary::PhraseProperties::normalize((uint64_t)&__s, (uint64_t)&__p);
          goto LABEL_40;
        }
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
      }
      else
      {
        if (HIBYTE(__s.__r_.__value_.__r.__words[2]) >= 2u) {
          goto LABEL_37;
        }
        std::basic_string<char16_t> __p = __s;
      }
LABEL_40:
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        BOOL v20 = &__p;
      }
      else {
        BOOL v20 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v21 = __p.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v26, (const std::basic_string<char16_t>::value_type *)v20, v21);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v25.__r_.__value_.__l.__data_);
      }
      char v11 = 0;
      if (v15 < 0x10000) {
        int v22 = 1;
      }
      else {
        int v22 = 2;
      }
      v10 += v22;
      if (v10 >= v7) {
        goto LABEL_65;
      }
    }
    std::basic_string<char16_t>::size_type v16 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v16 = v26.__r_.__value_.__l.__size_;
    }
    if (v16) {
      morphun::util::StringUtils::appendCodePoint(&v26, v15);
    }
    if (v15 < 0x10000) {
      int v17 = 1;
    }
    else {
      int v17 = 2;
    }
    v10 += v17;
  }
  while (v10 < v7);
  if (v11)
  {
    LOBYTE(v6) = *(unsigned char *)(a3 + 23);
    goto LABEL_63;
  }
LABEL_65:
  *a4 = v26;
  memset(&v26, 0, sizeof(v26));
LABEL_67:
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C93174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  MEMORY[0x1D942B8B0](v32, 0x1020C405F07FB98);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFDInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result = unorm2_getNFDInstance();
  *(void *)this = result;
  *((unsigned char *)this + 8) = 0;
  return result;
}

void sub_1D2C932C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<icu4cxx::Normalizer2>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C9332C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFCInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result = unorm2_getNFCInstance();
  *(void *)this = result;
  *((unsigned char *)this + 8) = 0;
  return result;
}

void sub_1D2C933BC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(void)::NFD_VOLATILE_CHARACTERS_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C9346C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(morphun::lang::StringFilterUtil *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(void)::COMBINING_DIACRITICAL_MARKS_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C93540(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

morphun::lang::StringFilterUtil *morphun::lang::StringFilterUtil::getSetSingleton(morphun::lang::StringFilterUtil *this, icu4cxx::UnicodeSet *a2)
{
  {
    operator new();
  }
  uint64_t v3 = morphun::lang::SET_SINGLETONS(void)::setSingletons_;
  npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(morphun::lang::SET_SINGLETONS(void)::setSingletons_);
  uint64_t v5 = (uint64_t **)(v3 + 8);
  uint64_t v4 = *(void **)(v3 + 8);
  if (!v4) {
    goto LABEL_13;
  }
  int v6 = (uint64_t **)(v3 + 8);
  do
  {
    unint64_t v7 = v4[4];
    BOOL v8 = v7 >= (unint64_t)this;
    if (v7 >= (unint64_t)this) {
      unint64_t v9 = v4;
    }
    else {
      unint64_t v9 = v4 + 1;
    }
    if (v8) {
      int v6 = (uint64_t **)v4;
    }
    uint64_t v4 = (void *)*v9;
  }
  while (*v9);
  if (v6 != v5 && v6[4] <= (uint64_t *)this)
  {
    npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(v3);
    if (this)
    {
      icu4cxx::UnicodeSet::~UnicodeSet(this);
      MEMORY[0x1D942B8B0]();
    }
    return (morphun::lang::StringFilterUtil *)v6[5];
  }
  else
  {
LABEL_13:
    npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(v3);
    morphun::util::Validate::notNull<icu4cxx::UnicodeSet>((uint64_t)this);
    MEMORY[0x1D942C170](*(void *)this);
    npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(v3);
    int v10 = *(uint64_t **)(v3 + 8);
    char v11 = (uint64_t **)(v3 + 8);
    if (v10)
    {
      while (1)
      {
        while (1)
        {
          char v11 = (uint64_t **)v10;
          unint64_t v12 = v10[4];
          if (v12 <= (unint64_t)this) {
            break;
          }
          int v10 = *v11;
          uint64_t v5 = v11;
          if (!*v11) {
            goto LABEL_20;
          }
        }
        if (v12 >= (unint64_t)this) {
          break;
        }
        int v10 = v11[1];
        if (!v10)
        {
          uint64_t v5 = v11 + 1;
          goto LABEL_20;
        }
      }
    }
    else
    {
LABEL_20:
      uint64_t v13 = (uint64_t *)operator new(0x30uLL);
      v13[4] = (uint64_t)this;
      void v13[5] = (uint64_t)this;
      uint64_t *v13 = 0;
      v13[1] = 0;
      v13[2] = (uint64_t)v11;
      void *v5 = v13;
      uint64_t v14 = **(void **)v3;
      if (v14)
      {
        *(void *)uint64_t v3 = v14;
        uint64_t v15 = *v5;
      }
      else
      {
        uint64_t v15 = v13;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v3 + 8), v15);
      ++*(void *)(v3 + 16);
    }
  }
  return this;
}

void sub_1D2C93724(_Unwind_Exception *a1)
{
}

uint64_t npc<std::map<icu4cxx::UnicodeSet const*,icu4cxx::UnicodeSet const*>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C9378C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::lang::StringFilterUtil *this, const morphun::util::ULocale *a2)
{
  {
    operator new();
  }
  uint64_t v3 = (std::mutex *)morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::functionMutex;
  uint64_t v4 = (std::mutex *)npc<std::mutex>(morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::functionMutex);
  std::mutex::lock(v4);
  {
    operator new();
  }
  uint64_t v5 = npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::exemplarCache);
  int v6 = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v5, (uint64_t)this);
  if ((void *)(npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(morphun::lang::StringFilterUtil::getExemplarCharacters(morphun::util::ULocale const&)::exemplarCache)
                + 8) == v6)
    operator new();
  uint64_t v7 = v6[20];
  npc<icu4cxx::UnicodeSet const>(v7);
  std::mutex::unlock(v3);
  return v7;
}

void sub_1D2C939DC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::mutex>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C93AA8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C93B0C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&,icu4cxx::UnicodeSet const*&>(uint64_t **a1, uint64_t a2, const morphun::util::ULocale *a3, uint64_t *a4)
{
  BOOL v8 = a1 + 1;
  uint64_t v7 = a1[1];
  unint64_t v9 = a1 + 1;
  int v10 = a1 + 1;
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v9 = (uint64_t **)v7;
        uint64_t v12 = (uint64_t)(v7 + 4);
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](a2, (uint64_t)(v7 + 4))) {
          break;
        }
        uint64_t v7 = *v9;
        int v10 = v9;
        if (!*v9) {
          goto LABEL_7;
        }
      }
      if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](v12, a2)) {
        break;
      }
      int v10 = v9 + 1;
      uint64_t v7 = v9[1];
      if (!v7) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    uint64_t v13 = (uint64_t *)operator new(0xA8uLL);
    v15[0] = v13;
    v15[1] = v8;
    char v16 = 0;
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v13 + 4), a3);
    v13[20] = *a4;
    char v16 = 1;
    uint64_t *v13 = 0;
    v13[1] = 0;
    v13[2] = (uint64_t)v9;
    *int v10 = v13;
    uint64_t v14 = (uint64_t *)**a1;
    if (v14)
    {
      *a1 = v14;
      uint64_t v13 = *v10;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    v15[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)v15);
  }
}

void sub_1D2C93C38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(morphun::lang::StringFilterUtil *this, const morphun::util::ULocale *a2)
{
  {
    operator new();
  }
  uint64_t v3 = (std::mutex *)morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(morphun::util::ULocale const&)::functionMutex;
  uint64_t v4 = (std::mutex *)npc<std::mutex>(morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(morphun::util::ULocale const&)::functionMutex);
  std::mutex::lock(v4);
  {
    operator new();
  }
  uint64_t v5 = morphun::lang::NfdVolatileForeignExemplarCache(void)::NfdVolatileForeignExemplarCache_;
  npc<std::map<morphun::util::ULocale,icu4cxx::UnicodeSet const*>>(morphun::lang::NfdVolatileForeignExemplarCache(void)::NfdVolatileForeignExemplarCache_);
  int v6 = (morphun::lang::StringFilterUtil *)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v5, (uint64_t)this);
  if ((morphun::lang::StringFilterUtil *)(v5 + 8) == v6)
  {
    BOOL v8 = (void *)morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(v6);
    uint64_t v12 = MEMORY[0x1D942C120](*v8);
    char v13 = 1;
    ExemplarCharacters = (void *)morphun::lang::StringFilterUtil::getExemplarCharacters(this, v9);
    MEMORY[0x1D942C1C0](v12, *ExemplarCharacters);
    operator new();
  }
  uint64_t v7 = *((void *)v6 + 20);
  npc<icu4cxx::UnicodeSet const>(v7);
  std::mutex::unlock(v3);
  return v7;
}

void sub_1D2C93E44(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void morphun::lang::StringFilterUtil::stripNonNativeAccents(morphun::lang::StringFilterUtil *a1@<X0>, const morphun::util::ULocale *a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  NfdVolatileForeignExemplarCharacters = (morphun::lang::StringFilterUtil *)morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(a1, a2);
  int v6 = (void *)morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(NfdVolatileForeignExemplarCharacters);

  morphun::lang::StringFilterUtil::filteredUnaccent(NfdVolatileForeignExemplarCharacters, v6, (uint64_t)a2, a3);
}

uint64_t morphun::lang::StringFilterUtil::unaccent(morphun::lang *a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t)a1;
  int v14 = 0;
  if (*(char *)(a2 + 23) >= 0) {
    LODWORD(v3) = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v3 = *(void *)(a2 + 8);
  }
  memset(&__p, 0, sizeof(__p));
  if ((int)v3 >= 1)
  {
    std::basic_string<char16_t>::resize(&__p, v3, 0);
    morphun::lang::NFD_NORMALIZER(v4);
    a1 = (morphun::lang *)unorm2_normalize();
    int v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v5 = __p.__r_.__value_.__r.__words[1];
    }
    if (a1 != v5) {
      std::basic_string<char16_t>::resize(&__p, (int)a1, 0);
    }
    int v6 = v14;
    if (v14 == 15)
    {
      int v14 = 0;
      morphun::lang::NFD_NORMALIZER(a1);
      a1 = (morphun::lang *)unorm2_normalize();
      int v6 = v14;
    }
    if (v6 >= 1)
    {
      UErrorCode v11 = v6;
      exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::ICUException::ICUException(exception, v11);
    }
  }
  uint64_t v7 = (void *)morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  morphun::util::UnicodeSetUtils::removeSetFromString(v2, v7, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_1D2C940C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::NFD_NORMALIZER(morphun::lang *this)
{
  {
    if (v2)
    {
      morphun::lang::NFD_NORMALIZER(void)::NFD_NORMALIZER_ = morphun::lang::getNFDInstance(v2);
    }
  }
  return morphun::lang::NFD_NORMALIZER(void)::NFD_NORMALIZER_;
}

void sub_1D2C9414C(_Unwind_Exception *a1)
{
}

uint64_t morphun::lang::getNFDInstance(morphun::lang *this)
{
  return unorm2_getNFDInstance();
}

void sub_1D2C941D4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::lang::StringFilterUtil::hasAccents(uint64_t a1)
{
  std::basic_string<char16_t> __p = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&__p, a1);
  int v2 = *(char *)(a1 + 23);
  if (v2 >= 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 8);
  }
  uint64_t v4 = HIBYTE(v16);
  if (v16 < 0) {
    uint64_t v4 = v15;
  }
  if (v3 == v4)
  {
    if (!v3)
    {
      BOOL v11 = 0;
      if ((SHIBYTE(v16) & 0x80000000) == 0) {
        return v11;
      }
      goto LABEL_22;
    }
    p_p = (unsigned __int16 *)__p;
    if (v16 >= 0) {
      p_p = (unsigned __int16 *)&__p;
    }
    if (v2 >= 0) {
      int v6 = (unsigned __int16 *)a1;
    }
    else {
      int v6 = *(unsigned __int16 **)a1;
    }
    uint64_t v7 = v3 - 1;
    do
    {
      int v9 = *v6++;
      int v8 = v9;
      int v10 = *p_p++;
      BOOL v11 = v10 != v8;
    }
    while (v10 == v8 && v7-- != 0);
  }
  else
  {
    BOOL v11 = 1;
  }
  if (SHIBYTE(v16) < 0) {
LABEL_22:
  }
    operator delete(__p);
  return v11;
}

void sub_1D2C942B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::lang::StringFilterUtil::equalIgnoreCaseAndAllAccents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v33 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v31 = 0;
  int v5 = *(char *)(a1 + 23);
  if (v5 >= 0) {
    int v6 = (const UChar *)a1;
  }
  else {
    int v6 = *(const UChar **)a1;
  }
  if (v5 >= 0) {
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v7 = *(void *)(a1 + 8);
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)v32, v6, v7, a3);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    int v9 = (const UChar *)a2;
  }
  else {
    int v9 = *(const UChar **)a2;
  }
  if (v8 >= 0) {
    LODWORD(v10) = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v10 = *(void *)(a2 + 8);
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)__p, v9, v10, a3);
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  unint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&v27, (uint64_t)v32);
  morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&v24, (uint64_t)__p);
  if (v29 >= 0) {
    uint64_t v11 = HIBYTE(v29);
  }
  else {
    uint64_t v11 = v28;
  }
  uint64_t v12 = HIBYTE(v26);
  if (v26 < 0) {
    uint64_t v12 = v25;
  }
  if (v11 != v12)
  {
    BOOL v22 = 0;
    goto LABEL_32;
  }
  if (v11)
  {
    char v13 = (unsigned __int16 *)v24;
    if (v26 >= 0) {
      char v13 = (unsigned __int16 *)&v24;
    }
    int v14 = (unsigned __int16 *)v27;
    if (v29 >= 0) {
      int v14 = (unsigned __int16 *)&v27;
    }
    uint64_t v15 = v11 - 1;
    do
    {
      int v17 = *v14++;
      int v16 = v17;
      int v19 = *v13++;
      int v18 = v19;
      BOOL v21 = v15-- != 0;
      BOOL v22 = v18 == v16;
    }
    while (v18 == v16 && v21);
LABEL_32:
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_33;
    }
LABEL_40:
    operator delete(v24);
    if ((v29 & 0x8000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_41;
  }
  BOOL v22 = 1;
  if (SHIBYTE(v26) < 0) {
    goto LABEL_40;
  }
LABEL_33:
  if ((v29 & 0x8000000000000000) == 0) {
    goto LABEL_34;
  }
LABEL_41:
  operator delete(v27);
LABEL_34:
  if (SHIBYTE(v31) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v33) < 0) {
    operator delete(v32[0]);
  }
  return v22;
}

void sub_1D2C94450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v26 - 17) < 0) {
    operator delete(*(void **)(v26 - 40));
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0) {
    uint64_t v1 = *(void *)(a1 + 8);
  }
  if (!v1) {
    return 0;
  }
  uint64_t v3 = (void *)morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS((morphun::lang::StringFilterUtil *)a1);
  int v4 = *(char *)(a1 + 23);
  if (v4 >= 0) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = *(void *)a1;
  }
  if (v4 >= 0) {
    LODWORD(v6) = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 8);
  }

  return morphun::util::UnicodeSetUtils::containsSome(v3, v5, v6);
}

BOOL morphun::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0) {
    uint64_t v1 = *(void *)(a1 + 8);
  }
  if (!v1) {
    return 0;
  }
  uint64_t v3 = (void *)morphun::lang::StringFilterUtil::NON_WHITESPACE_SEPARATED_SCRIPTS((morphun::lang::StringFilterUtil *)a1);
  int v4 = *(char *)(a1 + 23);
  if (v4 >= 0) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = *(void *)a1;
  }
  if (v4 >= 0) {
    LODWORD(v6) = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 8);
  }
  uint64_t v7 = morphun::util::StringViewUtils::codePointAt(v5, v6, 0);
  return MEMORY[0x1D942C150](*v3, v7) != 0;
}

uint64_t morphun::analysis::filter::ContractionExpandingFilter::incrementToken(morphun::analysis::filter::ContractionExpandingFilter *this)
{
  if (*((void *)this + 33) != *((void *)this + 34))
  {
    int v2 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v2 + *(void *)(*v2 - 96)), *((const std::basic_string<char16_t> **)this + 33));
    uint64_t v3 = *((void *)this + 33);
    uint64_t v4 = *((void *)this + 34);
    uint64_t v5 = v3 + 24;
    if (v3 + 24 != v4)
    {
      do
      {
        if (*(char *)(v3 + 23) < 0) {
          operator delete(*(void **)v3);
        }
        *(_OWORD *)uint64_t v3 = *(_OWORD *)(v3 + 24);
        *(void *)(v3 + 16) = *(void *)(v3 + 40);
        *(unsigned char *)(v3 + 47) = 0;
        uint64_t v6 = v3 + 48;
        *(_WORD *)(v3 + 24) = 0;
        v3 += 24;
      }
      while (v6 != v4);
      uint64_t v5 = *((void *)this + 34);
    }
    if (v5 == v3) {
      goto LABEL_12;
    }
    do
    {
      if (*(char *)(v5 - 1) < 0) {
        operator delete(*(void **)(v5 - 24));
      }
      v5 -= 24;
    }
    while (v5 != v3);
LABEL_11:
    uint64_t v5 = v3;
LABEL_12:
    *((void *)this + 34) = v5;
    return 1;
  }
  uint64_t v8 = *((void *)this + 12);
  if (!v8)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24))(v8);
  if (result)
  {
    int v9 = (void *)*((void *)this + 13);
    npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v9);
    uint64_t v10 = (const UChar *)((char *)v9 + *(void *)(*v9 - 96));
    if (*((char *)v10 + 23) < 0)
    {
      uint64_t v10 = *(const UChar **)v10;
      uint64_t v11 = *(void *)((char *)v9 + *(void *)(*v9 - 96) + 8);
    }
    else
    {
      LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
    }
    __p[0] = 0;
    __p[1] = 0;
    unint64_t v37 = 0;
    if (!*((void *)this + 16)) {
      return 1;
    }
    uint64_t v12 = morphun::analysis::filter::LanguageExpansion::expandWithWorkspace((uint64_t)this + 112, v10, v11, (uint64_t)__p);
    if (SHIBYTE(v37) < 0) {
      operator delete(__p[0]);
    }
    if (!v12) {
      return 1;
    }
    uint64_t v13 = (uint64_t)v9 + *(void *)(*v9 - 96);
    if (*(char *)(v13 + 23) < 0)
    {
      uint64_t v13 = *(void *)v13;
      uint64_t v14 = *(void *)((char *)v9 + *(void *)(*v9 - 96) + 8);
    }
    else
    {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    }
    char isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase(v13, v14);
    if (isAllLowerCase)
    {
      int isAllUpperCase = 0;
    }
    else
    {
      uint64_t v17 = (uint64_t)v9 + *(void *)(*v9 - 96);
      if (*(char *)(v17 + 23) < 0)
      {
        uint64_t v17 = *(void *)v17;
        uint64_t v18 = *(void *)((char *)v9 + *(void *)(*v9 - 96) + 8);
      }
      else
      {
        uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      }
      int isAllUpperCase = morphun::util::StringViewUtils::isAllUpperCase(v17, v18);
    }
    uint64_t v19 = *v12;
    uint64_t v20 = v12[1];
    if (*v12 == v20)
    {
LABEL_59:
      uint64_t v29 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v29 + *(void *)(*v29 - 96)), *((const std::basic_string<char16_t> **)this + 33));
      uint64_t v3 = *((void *)this + 33);
      uint64_t v30 = *((void *)this + 34);
      uint64_t v5 = v3 + 24;
      if (v3 + 24 != v30)
      {
        do
        {
          if (*(char *)(v3 + 23) < 0) {
            operator delete(*(void **)v3);
          }
          *(_OWORD *)uint64_t v3 = *(_OWORD *)(v3 + 24);
          *(void *)(v3 + 16) = *(void *)(v3 + 40);
          *(unsigned char *)(v3 + 47) = 0;
          uint64_t v31 = v3 + 48;
          *(_WORD *)(v3 + 24) = 0;
          v3 += 24;
        }
        while (v31 != v30);
        uint64_t v5 = *((void *)this + 34);
      }
      if (v5 == v3) {
        goto LABEL_12;
      }
      do
      {
        if (*(char *)(v5 - 1) < 0) {
          operator delete(*(void **)(v5 - 24));
        }
        v5 -= 24;
      }
      while (v5 != v3);
      goto LABEL_11;
    }
    uint64_t v33 = (char *)this + 288;
    while (1)
    {
      unint64_t v21 = *(void *)(v19 + 8);
      if (v21 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      BOOL v22 = *(const UChar **)v19;
      if (v21 >= 0xB)
      {
        uint64_t v24 = (v21 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v21 | 3) != 0xB) {
          uint64_t v24 = v21 | 3;
        }
        uint64_t v23 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v24 + 1);
        __p[1] = (void *)v21;
        unint64_t v37 = v25 | 0x8000000000000000;
        __p[0] = v23;
      }
      else
      {
        HIBYTE(v37) = *(void *)(v19 + 8);
        uint64_t v23 = __p;
        if (!v21) {
          goto LABEL_43;
        }
      }
      memmove(v23, v22, 2 * v21);
LABEL_43:
      *((_WORD *)v23 + v21) = 0;
      if ((isAllLowerCase & 1) == 0)
      {
        if (isAllUpperCase)
        {
          morphun::util::StringViewUtils::uppercase((uint64_t)__p, *(const UChar **)v19, *(void *)(v19 + 8), (uint64_t)v33);
        }
        else if (*((void *)this + 33) == *((void *)this + 34))
        {
          morphun::util::StringViewUtils::capitalizeFirst(*(UChar **)v19, *(void *)(v19 + 8), (uint64_t)v33, (uint64_t)&v34);
          if (SHIBYTE(v37) < 0) {
            operator delete(__p[0]);
          }
          *(_OWORD *)std::basic_string<char16_t> __p = v34;
          unint64_t v37 = v35;
        }
      }
      unint64_t v26 = *((void *)this + 34);
      if (v26 >= *((void *)this + 35))
      {
        uint64_t v28 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)this + 33, (long long *)__p);
      }
      else
      {
        if (SHIBYTE(v37) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)this + 34), (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
        }
        else
        {
          long long v27 = *(_OWORD *)__p;
          *(void *)(v26 + 16) = v37;
          *(_OWORD *)unint64_t v26 = v27;
        }
        uint64_t v28 = v26 + 24;
        *((void *)this + 34) = v26 + 24;
      }
      *((void *)this + 34) = v28;
      if (SHIBYTE(v37) < 0) {
        operator delete(__p[0]);
      }
      v19 += 16;
      if (v19 == v20) {
        goto LABEL_59;
      }
    }
  }
  return result;
}

void sub_1D2C949B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2C94A44(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::ContractionExpandingFilter::~ContractionExpandingFilter(void **this)
{
  *this = &off_1F2A108A0;
  int v2 = this + 33;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v2);
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[15]);
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07B00);

  JUMPOUT(0x1D942B8B0);
}

{
  void **v2;
  uint64_t vars8;

  *this = &off_1F2A108A0;
  int v2 = this + 33;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v2);
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(this[15]);

  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07B00);
}

morphun::analysis::filter::ContractionExpandingFilter *morphun::analysis::filter::ContractionExpandingFilter::ContractionExpandingFilter(morphun::analysis::filter::ContractionExpandingFilter *this, morphun::analysis::TokenStream *a2, const char **a3)
{
  *(void *)this = &unk_1F2A08C08;
  uint64_t v5 = morphun::analysis::TokenFilter::TokenFilter(this, (morphun::analysis::TokenStream *)&off_1F2A07B00, (uint64_t)a2);
  *(void *)uint64_t v5 = &off_1F2A108A0;
  *((void *)v5 + 13) = 0;
  morphun::analysis::filter::LanguageExpansion::LanguageExpansion((morphun::analysis::util::AttributeSource *)((char *)v5 + 112), a3);
  *((void *)this + 33) = 0;
  *((void *)this + 34) = 0;
  *((void *)this + 35) = 0;
  morphun::util::ULocale::ULocale((morphun::analysis::filter::ContractionExpandingFilter *)((char *)this + 288), (const morphun::util::ULocale *)a3);
  *((void *)this + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)this);
  return this;
}

void sub_1D2C94C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = (uint64_t)v10 + 264;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  morphun::analysis::filter::LanguageExpansion::~LanguageExpansion(v11);
  morphun::analysis::TokenFilter::~TokenFilter(v10, (uint64_t *)&off_1F2A07B00);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::nb::NbTokenizer::createTokenExtractor()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2C94E34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig((char **)va);
  MEMORY[0x1D942B8B0](v2, 0x10F3C4092900CF8);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::determine(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, (void *)a3);
  unint64_t v6 = *(unsigned __int8 *)(a3 + 23);
  LOBYTE(v7) = v6;
  unint64_t v8 = *(void *)(a3 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v9 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  if (!v9)
  {
    uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *(void *)(a2 + 8);
    }
    if (v10)
    {
      uint64_t v11 = a1[26];
      if (!v11 || (uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v11 + 24))(v11, a2)) == 0)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      uint64_t v13 = v12;
      long long v38 = *(_OWORD *)(v12 + 8);
      uint64_t v14 = *((void *)&v38 + 1);
      if (*((void *)&v38 + 1)) {
LABEL_11:
      }
        uint64_t v14 = *(void *)(v14 + 80);
      while (v14 != (void)v38)
      {
        if ((void)v38
        {
          int v15 = *(char *)(v38 + 63);
          int v16 = v15 >= 0 ? (const UChar *)(v38 + 40) : *(const UChar **)(v38 + 40);
          uint64_t v17 = v15 >= 0 ? *(unsigned __int8 *)(v38 + 63) : *(void *)(v38 + 48);
          uint64_t v18 = a1[27];
          uint64_t v19 = a1[28];
          v39.__r_.__value_.__r.__words[0] = 0;
          if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)&v39, v16, v17)
            && (v39.__r_.__value_.__r.__words[0] & v19) == v19)
          {
            morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v38 + 16, &v39);
            if ((char)v6 < 0) {
              operator delete(*(void **)a3);
            }
            *(_OWORD *)a3 = *(_OWORD *)&v39.__r_.__value_.__l.__data_;
            unint64_t v22 = v39.__r_.__value_.__r.__words[2];
            *(void *)(a3 + 16) = *((void *)&v39.__r_.__value_.__l + 2);
            unint64_t v6 = HIBYTE(v22);
            unint64_t v8 = *(void *)(a3 + 8);
            unint64_t v7 = HIBYTE(v22);
            break;
          }
        }
        npc<morphun::Token const>(v38);
        *((void *)&v21 + 1) = *((void *)&v38 + 1);
        *(void *)&long long v21 = *(void *)(v38 + 80);
        long long v38 = v21;
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14) {
          goto LABEL_11;
        }
      }
      if ((v7 & 0x80u) == 0) {
        unint64_t v23 = v6;
      }
      else {
        unint64_t v23 = v8;
      }
      if (!v23)
      {
        long long v38 = *(_OWORD *)(v13 + 8);
        uint64_t v24 = *((void *)&v38 + 1);
        if (!*((void *)&v38 + 1)) {
          goto LABEL_37;
        }
LABEL_36:
        uint64_t v24 = *(void *)(v24 + 80);
LABEL_37:
        while (v24 != (void)v38)
        {
          if ((void)v38
          {
            morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v38 + 16, &v39);
            if ((v7 & 0x80) != 0) {
              operator delete(*(void **)a3);
            }
            *(_OWORD *)a3 = *(_OWORD *)&v39.__r_.__value_.__l.__data_;
            unint64_t v26 = v39.__r_.__value_.__r.__words[2];
            *(void *)(a3 + 16) = *((void *)&v39.__r_.__value_.__l + 2);
            unint64_t v6 = HIBYTE(v26);
            unint64_t v8 = *(void *)(a3 + 8);
            unint64_t v7 = HIBYTE(v26);
            break;
          }
          npc<morphun::Token const>(v38);
          *((void *)&v25 + 1) = *((void *)&v38 + 1);
          *(void *)&long long v25 = *(void *)(v38 + 80);
          long long v38 = v25;
          uint64_t v24 = *(void *)(v13 + 16);
          if (v24) {
            goto LABEL_36;
          }
        }
      }
      if ((v7 & 0x80u) == 0) {
        unint64_t v27 = v6;
      }
      else {
        unint64_t v27 = v8;
      }
      if (v27) {
        goto LABEL_68;
      }
      uint64_t v28 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 104))(v13);
      if (!v28)
      {
        uint64_t v36 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v36);
      }
      uint64_t v29 = *((void *)v28 + 10);
      if (!v29)
      {
        unint64_t v37 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v37);
      }
      if (*(char *)(v29 + 63) < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v39, *(const std::basic_string<char16_t>::value_type **)(v29 + 40), *(void *)(v29 + 48));
      }
      else {
        std::basic_string<char16_t> v39 = *(std::basic_string<char16_t> *)(v29 + 40);
      }
      std::basic_string<char16_t>::size_type size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
      int v31 = SHIBYTE(v39.__r_.__value_.__r.__words[2]);
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v39.__r_.__value_.__l.__size_;
      }
      if (!size)
      {
LABEL_66:
        if (v31 < 0) {
          operator delete(v39.__r_.__value_.__l.__data_);
        }
LABEL_68:
        (*(void (**)(uint64_t))(*(void *)v13 + 16))(v13);
        return;
      }
      uint64_t v32 = &v39;
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v32 = (std::basic_string<char16_t> *)v39.__r_.__value_.__r.__words[0];
      }
      int v33 = (unsigned __int16)v32->__r_.__value_.__s.__data_[size - 1];
      if (v33 != 111)
      {
        if (v33 == 105)
        {
          long long v34 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v28);
          goto LABEL_65;
        }
        if (v33 != 97) {
          goto LABEL_66;
        }
      }
      long long v34 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v28);
LABEL_65:
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v34);
      goto LABEL_66;
    }
  }
}

void sub_1D2C95314(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  if ((*(unsigned char *)(v1 + 23) & 0x80) != 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *this)
{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0CDA8;
  uint64_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FA4E0;
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::ItGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *this)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FA488;
  uint64_t v2 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ITALIAN(this);
  uint64_t v3 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v2);
  if (*(char *)(v3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, *(const std::basic_string<char16_t>::value_type **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    v9.__r_.__value_.__r.__words[2] = *(void *)(v3 + 16);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v3);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v10, *(const std::basic_string<char16_t>::value_type **)v5, *(void *)(v5 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    v10.__r_.__value_.__r.__words[2] = *(void *)(v5 + 16);
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v6;
  }
  long long __p = 0uLL;
  v12[0] = 0;
  p_p = &__p;
  char v8 = 0;
  *(void *)&long long __p = operator new(0x30uLL);
  *((void *)&__p + 1) = __p;
  v12[0] = __p + 48;
  *((void *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v12, (long long *)&v9, &__p, (std::basic_string<char16_t> *)__p);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)this, (uint64_t *)&off_1F2A06160, v2);
}

void sub_1D2C9572C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0) {
    operator delete(__p);
  }
  uint64_t v27 = *((void *)v25 + 26);
  *((void *)v25 + 26) = 0;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 16))(v27);
  }
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v25, (uint64_t *)&off_1F2A06160);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_Hans::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E695DF70;
  v3[1] = *(_OWORD *)&off_1E695DF80;
  v3[2] = xmmword_1E695DF90;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

uint64_t morphun::analysis::util::StopwordAnalyzerBase::getStopwordSet(morphun::analysis::util::StopwordAnalyzerBase *this)
{
  return *((void *)this + 8);
}

morphun::analysis::Analyzer *morphun::analysis::util::StopwordAnalyzerBase::StopwordAnalyzerBase(morphun::analysis::Analyzer *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = morphun::analysis::Analyzer::Analyzer(a1, a2 + 1);
  uint64_t v6 = *a2;
  *(void *)uint64_t result = *a2;
  *(void *)((char *)result + *(void *)(v6 - 40)) = a2[3];
  *((void *)result + 8) = a3;
  return result;
}

morphun::analysis::Analyzer *morphun::analysis::util::StopwordAnalyzerBase::StopwordAnalyzerBase(morphun::analysis::util::StopwordAnalyzerBase *this, uint64_t *a2)
{
  uint64_t result = morphun::analysis::Analyzer::Analyzer(this, a2 + 1);
  uint64_t v4 = *a2;
  *(void *)uint64_t result = *a2;
  *(void *)((char *)result + *(void *)(v4 - 40)) = a2[3];
  *((void *)result + 8) = 0;
  return result;
}

void morphun::analysis::util::StopwordAnalyzerBase::~StopwordAnalyzerBase(morphun::analysis::util::StopwordAnalyzerBase *this, uint64_t a2)
{
}

void morphun::analysis::util::StopwordAnalyzerBase::loadStopwordSet(const void **a1, const void **a2)
{
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)__p, a1, a2);
  if ((v8 & 0x80u) == 0) {
    uint64_t v2 = (uint64_t *)__p;
  }
  else {
    uint64_t v2 = (uint64_t *)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    unint64_t v3 = v8;
  }
  else {
    unint64_t v3 = (unint64_t)__p[1];
  }
  String = (_WORD *)morphun::resources::DataResource::getString(v2, v3, 0);
  if ((char)v8 < 0) {
    operator delete(__p[0]);
  }
  if (*String)
  {
    uint64_t v5 = 0;
    while (String[++v5])
      ;
  }
  morphun::analysis::util::WordlistLoader::getWordSet();
}

void sub_1D2C95AD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet(const void **a1)
{
  std::operator+<char16_t>((uint64_t)__p, "/", a1);
  if ((v7 & 0x80u) == 0) {
    uint64_t v1 = (uint64_t *)__p;
  }
  else {
    uint64_t v1 = (uint64_t *)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v2 = v7;
  }
  else {
    unint64_t v2 = (unint64_t)__p[1];
  }
  String = (_WORD *)morphun::resources::DataResource::getString(v1, v2, 0);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  if (*String)
  {
    uint64_t v4 = 0;
    while (String[++v4])
      ;
  }
  morphun::analysis::util::WordlistLoader::getWordSet();
}

void sub_1D2C95BA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction::getArticle(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  std::basic_string<char16_t> v9 = (morphun::util::LocaleUtils *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  std::basic_string<char16_t> v10 = (unsigned __int16 *)v9;
  if (a5 == 2)
  {
    if (a4 == 2)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
    }
    else
    {
      uint64_t v13 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v9);
      if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v13, (uint64_t)v10)) {
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)aUn_0);
      }
      else {
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"una ");
      }
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
    }
  }
  else if (a4 == 2)
  {
    uint64_t v12 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v9);
    if ((morphun::dictionary::PhraseProperties::isStartsWithVowel(v12, (uint64_t)v10) & 1) != 0
      || morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset(v10))
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"degli ");
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
    }
    else
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
    }
  }
  else if (morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset((unsigned __int16 *)v9))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "u");
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
  }
  else if (a4 == 1 && a5 == 1)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"un ");
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v17 = 0;
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
  }
  uint64_t v14 = v11;
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[0]);
  }
  return v14;
}

void sub_1D2C95EB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction::~ItGrammarSynthesizer_IndefiniteArticleLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *this)
{
  *(void *)this = &unk_1F29FC4A0;
  uint64_t v1 = (morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 64);
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 296));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v1);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *v1;

  *(void *)this = &unk_1F29FC4A0;
  uint64_t v1 = (morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 64);
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_IndefiniteArticleLookupFunction *)((char *)this + 296));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v1);
}

uint64_t **com::apple::siri::tokenizer::data::config_he::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v3[2] = xmmword_1E695DFC0;
  _OWORD v3[3] = *(_OWORD *)&off_1E695DFD0;
  uint64_t v4 = "(";
  v3[0] = xmmword_1E695DFA0;
  v3[1] = unk_1E695DFB0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

uint64_t morphun::dictionary::PhraseProperties::RIEUL_END_TAG(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::dictionary::PhraseProperties::RIEUL_END_TAG(void)::RIEUL_END_TAG_;
  if (!morphun::dictionary::PhraseProperties::RIEUL_END_TAG(void)::RIEUL_END_TAG_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C960E4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(void)::DEFAULT_VOWELS_START_);
}

void sub_1D2C96260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  MEMORY[0x1D942B8B0](v27, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1D2C96350(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::FRENCH_VOWELS_START(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::FRENCH_VOWELS_START(void)::FRENCH_VOWELS_START_);
}

void sub_1D2C96498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  MEMORY[0x1D942B8B0](v27, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  return npc<icu4cxx::UnicodeSet const>(morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END(void)::DEFAULT_VOWELS_END_);
}

void sub_1D2C9666C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  MEMORY[0x1D942B8B0](v27, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::I_LETTER(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::dictionary::PhraseProperties::I_LETTER(void)::I_LETTER_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C967B4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::J_LETTER(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::dictionary::PhraseProperties::J_LETTER(void)::J_LETTER_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C96894(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(void)::DEFAULT_MATCHABLE_SET_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C96968(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::PUNCTUATION(morphun::dictionary::PhraseProperties *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::dictionary::PhraseProperties::PUNCTUATION(void)::PUNCTUATION_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2C96A3C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::isStartsWithVowel(morphun::dictionary::DictionaryMetaData *a1, uint64_t a2)
{
  *(void *)&long long v55 = *MEMORY[0x1E4F143B8];
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(a1, (const morphun::util::ULocale *)a2);
  uint64_t v5 = npc<morphun::dictionary::DictionaryMetaData const>(Dictionary);
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t v50 = 0;
  int v6 = *(char *)(a2 + 23);
  if (v6 >= 0) {
    unsigned __int8 v7 = (const UChar *)a2;
  }
  else {
    unsigned __int8 v7 = *(const UChar **)a2;
  }
  if (v6 >= 0) {
    uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v8 = *(void *)(a2 + 8);
  }
  CombinedBinaryuint64_t Type = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v5, (uint64_t)&v50, v7, v8);
  if (CombinedBinaryType)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&morphun::dialog::VOWEL_START);
    int v44 = 0;
    uint64_t v45 = 0;
    v46[0] = 0;
    LOBYTE(v42) = 0;
    int v44 = (std::basic_string<char16_t> *)operator new(0x18uLL);
    uint64_t v45 = v44;
    v46[0] = v44 + 1;
    uint64_t v45 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v46, &__dst, &v55, v44);
    uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(Dictionary, &v52, (uint64_t *)&v44);
    std::basic_string<char16_t>::size_type v41 = &v44;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v41);
    if (SHIBYTE(v54) < 0) {
      operator delete((void *)__dst);
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&morphun::dialog::CONSONANT_START);
    int v44 = 0;
    uint64_t v45 = 0;
    v46[0] = 0;
    std::basic_string<char16_t>::size_type v41 = &v44;
    LOBYTE(v42) = 0;
    int v44 = (std::basic_string<char16_t> *)operator new(0x18uLL);
    uint64_t v45 = v44;
    v46[0] = v44 + 1;
    uint64_t v45 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v46, &__dst, &v55, v44);
    uint64_t v11 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(Dictionary, &v51, (uint64_t *)&v44);
    std::basic_string<char16_t>::size_type v41 = &v44;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v41);
    if (SHIBYTE(v54) < 0) {
      operator delete((void *)__dst);
    }
    if ((unint64_t)v11 | (unint64_t)BinaryProperties)
    {
      uint64_t v12 = v51 & v50;
      if ((v52 & v50) != 0)
      {
        if (!v12) {
          return 1;
        }
      }
      else if (v12)
      {
        return 0;
      }
    }
  }
  uint64_t v14 = morphun::util::LocaleUtils::FRENCH(CombinedBinaryType);
  long long __dst = 0uLL;
  uint64_t v54 = 0;
  std::basic_string<char16_t>::size_type v41 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v40 = 0;
  morphun::util::ULocale::ULocale((uint64_t)&v44, (uint64_t)a1 + 8, (uint64_t)&__dst, (uint64_t)&v41, (uint64_t)__p);
  if ((v49 & 0x80u) == 0) {
    size_t v15 = v49;
  }
  else {
    size_t v15 = __n;
  }
  uint64_t v16 = *(unsigned __int8 *)(v14 + 127);
  int v17 = (char)v16;
  if ((v16 & 0x80u) != 0) {
    uint64_t v16 = *(void *)(v14 + 112);
  }
  if (v15 == v16)
  {
    uint64_t v20 = *(unsigned __int8 **)(v14 + 104);
    uint64_t v19 = (unsigned __int8 *)(v14 + 104);
    uint64_t v18 = v20;
    if (v17 >= 0) {
      long long v21 = v19;
    }
    else {
      long long v21 = v18;
    }
    if ((v49 & 0x80) != 0)
    {
      BOOL v30 = memcmp(__s1, v21, __n) == 0;
    }
    else if (v49)
    {
      p_s1 = &__s1;
      uint64_t v23 = v49 - 1;
      do
      {
        int v25 = *(unsigned __int8 *)p_s1;
        p_s1 = (void **)((char *)p_s1 + 1);
        int v24 = v25;
        int v27 = *v21++;
        int v26 = v27;
        BOOL v29 = v23-- != 0;
        BOOL v30 = v24 == v26;
      }
      while (v24 == v26 && v29);
    }
    else
    {
      BOOL v30 = 1;
    }
  }
  else
  {
    BOOL v30 = 0;
  }
  if (SHIBYTE(v40) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v43) < 0) {
    operator delete(v41);
  }
  if ((SHIBYTE(v54) & 0x80000000) == 0)
  {
    if (v30) {
      goto LABEL_44;
    }
LABEL_54:
    unint64_t v37 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(v31);
    long long v38 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v37);
    int v44 = 0;
    uint64_t v45 = 0;
    v46[0] = 0;
    return morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(a2, v37, v38, (uint64_t **)&v44);
  }
  operator delete((void *)__dst);
  if (!v30) {
    goto LABEL_54;
  }
LABEL_44:
  if (v50)
  {
    uint64_t v32 = *(unsigned __int8 *)(a2 + 23);
    int v33 = (char)v32;
    if ((v32 & 0x80u) != 0) {
      uint64_t v32 = *(void *)(a2 + 8);
    }
    if (v32)
    {
      long long v34 = *(_WORD **)a2;
      if (v33 >= 0) {
        long long v34 = (_WORD *)a2;
      }
      if (*v34 == 72) {
        return 0;
      }
    }
  }
  unint64_t v35 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(v31);
  uint64_t v36 = (void *)morphun::dictionary::PhraseProperties::FRENCH_VOWELS_START(v35);
  int v44 = 0;
  uint64_t v45 = 0;
  v46[0] = 0;
  return morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(a2, v35, v36, (uint64_t **)&v44);
}

void sub_1D2C96E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  if (*(char *)(v23 - 73) < 0) {
    operator delete(*(void **)(v23 - 96));
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dictionary::DictionaryMetaData const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C96EDC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets(uint64_t a1, void *a2, void *a3, uint64_t **a4)
{
  int FirstUsableIndex = morphun::dictionary::PhraseProperties::getFirstUsableIndex(a1, a2);
  if (FirstUsableIndex < 0) {
    return 0;
  }
  int v8 = FirstUsableIndex;
  if (*a4 != a4[1])
  {
    int v9 = *(char *)(a1 + 23);
    if (v9 >= 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = *(void *)a1;
    }
    if (v9 >= 0) {
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      uint64_t v11 = *(void *)(a1 + 8);
    }
    uint64_t v12 = morphun::util::StringViewUtils::codePointAt(v10, v11, v8);
    if (MEMORY[0x1D942C150](*a3, v12))
    {
      uint64_t v13 = *a4;
      int v14 = *(char *)(a1 + 23) >= 0 ? *(unsigned __int8 *)(a1 + 23) : *(_DWORD *)(a1 + 8);
      int v15 = v8 + 1;
      while (1)
      {
        uint64_t v16 = a4[1];
        if (v13 == v16 || v15 >= v14) {
          break;
        }
        uint64_t v19 = *v13++;
        uint64_t v18 = (void *)v19;
        npc<icu4cxx::UnicodeSet const>(v19);
        int v20 = *(char *)(a1 + 23);
        if (v20 >= 0) {
          uint64_t v21 = a1;
        }
        else {
          uint64_t v21 = *(void *)a1;
        }
        if (v20 >= 0) {
          LODWORD(v22) = *(unsigned __int8 *)(a1 + 23);
        }
        else {
          uint64_t v22 = *(void *)(a1 + 8);
        }
        uint64_t v23 = morphun::util::StringViewUtils::codePointAt(v21, v22, v15++);
        if (!MEMORY[0x1D942C150](*v18, v23)) {
          return 0;
        }
      }
      if (v13 == v16) {
        return 1;
      }
    }
    return 0;
  }
  memset(&v37, 0, sizeof(v37));
  int v24 = *(char *)(a1 + 23);
  if (v24 >= 0) {
    uint64_t v25 = a1;
  }
  else {
    uint64_t v25 = *(void *)a1;
  }
  if (v24 >= 0) {
    LODWORD(v26) = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v26 = *(void *)(a1 + 8);
  }
  unsigned int v27 = morphun::util::StringViewUtils::codePointAt(v25, v26, v8);
  appended = morphun::util::StringUtils::appendCodePoint(&v37, v27);
  morphun::dictionary::NFKD((morphun::dictionary *)appended);
  morphun::dictionary::PhraseProperties::normalize((uint64_t)&v37, (uint64_t)&__p);
  if ((v36 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v36 & 0x80u) == 0) {
    int v30 = v36;
  }
  else {
    int v30 = v35;
  }
  uint64_t v31 = morphun::util::StringViewUtils::codePointAt((uint64_t)p_p, v30, 0);
  BOOL v32 = MEMORY[0x1D942C150](*a3, v31) != 0;
  if ((char)v36 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return v32;
}

void sub_1D2C970A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::PhraseProperties::getFirstUsableIndex(uint64_t a1, void *a2)
{
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    LODWORD(v4) = *(unsigned __int8 *)(a1 + 23);
    if (!*(unsigned char *)(a1 + 23)) {
      return 0xFFFFFFFFLL;
    }
  }
  if ((int)v4 < 1) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v5 = 0;
  while (1)
  {
    int v6 = *(char *)(a1 + 23);
    uint64_t v7 = v6 >= 0 ? a1 : *(void *)a1;
    if (v6 >= 0) {
      LODWORD(v8) = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      uint64_t v8 = *(void *)(a1 + 8);
    }
    uint64_t v9 = morphun::util::StringViewUtils::codePointAt(v7, v8, v5);
    if (MEMORY[0x1D942C150](*a2, v9)) {
      break;
    }
    uint64_t v5 = (v5 + 1);
    if (v4 == v5) {
      return 0xFFFFFFFFLL;
    }
  }
  return v5;
}

uint64_t morphun::dictionary::NFKD(morphun::dictionary *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::dictionary::NFKD(void)::NFKD_;
  if (!morphun::dictionary::NFKD(void)::NFKD_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C9721C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::dictionary::PhraseProperties::normalize(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 23) >= 0) {
    LODWORD(v3) = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 8);
  }
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  if ((int)v3 >= 1)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a2, v3, 0);
    int v4 = unorm2_normalize();
    int v5 = *(unsigned __int8 *)(a2 + 23);
    if ((v5 & 0x80u) != 0) {
      int v5 = *(_DWORD *)(a2 + 8);
    }
    if (v4 != v5) {
      std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a2, v4, 0);
    }
  }
}

void sub_1D2C973D4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::Normalizer2::getNFKDInstance(icu4cxx::Normalizer2 *this)
{
  uint64_t result = unorm2_getNFKDInstance();
  *(void *)this = result;
  *((unsigned char *)this + 8) = 0;
  return result;
}

void sub_1D2C9747C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::PhraseProperties::isEndsWithVowel(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v60 = *MEMORY[0x1E4F143B8];
  int v4 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END((morphun::dictionary::PhraseProperties *)a1);
  uint64_t v51 = MEMORY[0x1D942C110](*v4);
  char v52 = 1;
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary((morphun::dictionary::DictionaryMetaData *)a1, v5);
  uint64_t v7 = (morphun::dictionary::PhraseProperties *)npc<morphun::dictionary::DictionaryMetaData const>(Dictionary);
  long long __p = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v8 = (void *)morphun::dictionary::PhraseProperties::PUNCTUATION(v7);
  int v9 = *(char *)(a2 + 23);
  if (v9 >= 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = *(void *)a2;
  }
  if (v9 >= 0) {
    std::basic_string<char16_t>::size_type v11 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::basic_string<char16_t>::size_type v11 = *(void *)(a2 + 8);
  }
  morphun::util::UnicodeSetUtils::removeSetFromString((uint64_t)&__p, v8, v10, v11);
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&morphun::dialog::VOWEL_END);
  long long v55 = 0uLL;
  unint64_t v56 = 0;
  p_dst = (void **)&v55;
  char v54 = 0;
  *(void *)&long long v55 = operator new(0x18uLL);
  *((void *)&v55 + 1) = v55;
  unint64_t v56 = (void *)(v55 + 24);
  *((void *)&v55 + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v56, &__dst, &v60, (std::basic_string<char16_t> *)v55);
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(Dictionary, &v47, (uint64_t *)&v55);
  p_dst = (void **)&v55;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  if (SHIBYTE(v59) < 0) {
    operator delete((void *)__dst);
  }
  uint64_t v13 = (morphun::dictionary::PhraseProperties *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v55, (char *)&morphun::dialog::CONSONANT_END);
  uint64_t v14 = morphun::dictionary::PhraseProperties::RIEUL_END_TAG(v13);
  if (*(char *)(v14 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v57, *(const std::basic_string<char16_t>::value_type **)v14, *(void *)(v14 + 8));
  }
  else
  {
    long long v15 = *(_OWORD *)v14;
    v57.__r_.__value_.__r.__words[2] = *(void *)(v14 + 16);
    *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v15;
  }
  long long __dst = 0uLL;
  uint64_t v59 = 0;
  p_dst = (void **)&__dst;
  char v54 = 0;
  *(void *)&long long __dst = operator new(0x30uLL);
  *((void *)&__dst + 1) = __dst;
  uint64_t v59 = __dst + 48;
  *((void *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v59, &v55, &__dst, (std::basic_string<char16_t> *)__dst);
  uint64_t v16 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(Dictionary, &v46, (uint64_t *)&__dst);
  int v17 = (unsigned __int8 **)(a1 + 8);
  p_dst = (void **)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_dst);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v57.__r_.__value_.__r.__words[i + 2]) < 0) {
      operator delete(*(void **)((char *)&v57.__r_.__value_.__l.__data_ + i * 8));
    }
  }
  if (!((unint64_t)v16 | (unint64_t)BinaryProperties)) {
    goto LABEL_28;
  }
  *(void *)&long long v55 = 0;
  int v20 = v50 >= 0 ? (const UChar *)&__p : (const UChar *)__p;
  uint64_t v21 = v50 >= 0 ? HIBYTE(v50) : v49;
  CombinedBinaryuint64_t Type = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(Dictionary, (uint64_t)&v55, v20, v21);
  if (!CombinedBinaryType) {
    goto LABEL_28;
  }
  uint64_t isEndsWithUnicodeSets = (v47 & (unint64_t)v55) != 0;
  uint64_t v23 = v46 & v55;
  if ((v47 & (unint64_t)v55) == 0)
  {
    if (v23) {
      goto LABEL_64;
    }
LABEL_28:
    uint64_t v24 = morphun::util::LocaleUtils::TURKISH(CombinedBinaryType);
    uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = *(unsigned __int8 *)(v24 + 31);
    }
    else {
      uint64_t v26 = *(void *)(v24 + 16);
    }
    uint64_t v27 = *(unsigned __int8 *)(a1 + 31);
    int v28 = (char)v27;
    if ((v27 & 0x80u) != 0) {
      uint64_t v27 = *(void *)(a1 + 16);
    }
    if (v26 != v27) {
      goto LABEL_43;
    }
    BOOL v29 = (const void **)(v24 + 8);
    if (v28 >= 0) {
      int v30 = (unsigned __int8 *)(a1 + 8);
    }
    else {
      int v30 = *v17;
    }
    if ((v25 & 0x80) != 0)
    {
      uint64_t v24 = memcmp(*v29, v30, *(void *)(v24 + 16));
      if (v24) {
        goto LABEL_43;
      }
    }
    else if (*(unsigned char *)(v24 + 31))
    {
      while (*(unsigned __int8 *)v29 == *v30)
      {
        BOOL v29 = (const void **)((char *)v29 + 1);
        ++v30;
        if (!--v25) {
          goto LABEL_57;
        }
      }
LABEL_43:
      uint64_t v31 = morphun::util::LocaleUtils::DUTCH((morphun::util::LocaleUtils *)v24);
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
      if ((v32 & 0x80u) == 0) {
        uint64_t v33 = *(unsigned __int8 *)(v31 + 31);
      }
      else {
        uint64_t v33 = *(void *)(v31 + 16);
      }
      uint64_t v34 = *(unsigned __int8 *)(a1 + 31);
      int v35 = (char)v34;
      if ((v34 & 0x80u) != 0) {
        uint64_t v34 = *(void *)(a1 + 16);
      }
      if (v33 == v34)
      {
        unsigned __int8 v36 = (const void **)(v31 + 8);
        if (v35 >= 0) {
          std::basic_string<char16_t> v37 = (unsigned __int8 *)(a1 + 8);
        }
        else {
          std::basic_string<char16_t> v37 = *v17;
        }
        if ((v32 & 0x80) == 0)
        {
          if (*(unsigned char *)(v31 + 31))
          {
            while (*(unsigned __int8 *)v36 == *v37)
            {
              unsigned __int8 v36 = (const void **)((char *)v36 + 1);
              ++v37;
              if (!--v32) {
                goto LABEL_61;
              }
            }
            goto LABEL_63;
          }
LABEL_61:
          uint64_t v40 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET((morphun::dictionary::PhraseProperties *)v31);
          std::basic_string<char16_t>::size_type v41 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::I_LETTER(v40);
          uint64_t v42 = morphun::dictionary::PhraseProperties::J_LETTER(v41);
          uint64_t v43 = operator new(8uLL);
          *uint64_t v43 = v42;
          *((void *)&v55 + 1) = v43 + 1;
          unint64_t v56 = v43 + 1;
          *(void *)&long long v55 = v43;
          LOBYTE(v40) = morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets(a2, v40, v41, (uint64_t **)&v55);
          operator delete(v43);
          if (v40)
          {
            uint64_t isEndsWithUnicodeSets = 1;
            goto LABEL_64;
          }
          goto LABEL_63;
        }
        uint64_t v31 = memcmp(*v36, v37, *(void *)(v31 + 16));
        if (!v31) {
          goto LABEL_61;
        }
      }
LABEL_63:
      int v44 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET((morphun::dictionary::PhraseProperties *)v31);
      long long v55 = 0uLL;
      unint64_t v56 = 0;
      uint64_t isEndsWithUnicodeSets = morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets(a2, v44, &v51, (uint64_t **)&v55);
      goto LABEL_64;
    }
LABEL_57:
    long long v38 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START((morphun::dictionary::PhraseProperties *)v24);
    uint64_t v39 = MEMORY[0x1D942C110](*v38);
    *(void *)&long long v55 = v39;
    BYTE8(v55) = 1;
    if (v52) {
      uset_close();
    }
    uint64_t v51 = v39;
    char v52 = 1;
    *(void *)&long long v55 = 0;
    BYTE8(v55) = 0;
    icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v55);
    goto LABEL_63;
  }
  if (v23) {
    goto LABEL_28;
  }
LABEL_64:
  if (SHIBYTE(v50) < 0) {
    operator delete(__p);
  }
  icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)&v51);
  return isEndsWithUnicodeSets;
}

void sub_1D2C97900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a2) {
    __clang_call_terminate(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets(uint64_t a1, void *a2, void *a3, uint64_t **a4)
{
  int LastUsableIndex = morphun::dictionary::PhraseProperties::getLastUsableIndex(a1, a2);
  if (LastUsableIndex < 0) {
    goto LABEL_44;
  }
  int v9 = LastUsableIndex;
  uint64_t v10 = a4[1];
  if (*a4 != v10)
  {
    std::basic_string<char16_t>::size_type v11 = v10 - 1;
    while (1)
    {
      int v12 = v9;
      uint64_t v13 = v11;
      uint64_t v14 = (void *)*v11;
      npc<icu4cxx::UnicodeSet const>(*v11);
      int v15 = *(char *)(a1 + 23);
      uint64_t v16 = v15 >= 0 ? a1 : *(void *)a1;
      if (v15 >= 0) {
        LODWORD(v17) = *(unsigned __int8 *)(a1 + 23);
      }
      else {
        uint64_t v17 = *(void *)(a1 + 8);
      }
      uint64_t v18 = morphun::util::StringViewUtils::codePointAt(v16, v17, v12);
      if (!MEMORY[0x1D942C150](*v14, v18)) {
        goto LABEL_44;
      }
      int v9 = v12 - 1;
      std::basic_string<char16_t>::size_type v11 = v13 - 1;
      if (v13 == *a4 || v12 <= 0)
      {
        if (v13 == *a4 && v12 >= 1)
        {
          int v20 = *(char *)(a1 + 23);
          uint64_t v21 = v20 >= 0 ? a1 : *(void *)a1;
          if (v20 >= 0) {
            LODWORD(v22) = *(unsigned __int8 *)(a1 + 23);
          }
          else {
            uint64_t v22 = *(void *)(a1 + 8);
          }
          uint64_t v23 = morphun::util::StringViewUtils::codePointAt(v21, v22, v9);
          if (MEMORY[0x1D942C150](*a3, v23))
          {
            LOBYTE(a3) = 1;
            return a3 & 1;
          }
        }
        goto LABEL_44;
      }
    }
  }
  memset(&v37, 0, sizeof(v37));
  int v24 = *(char *)(a1 + 23);
  if (v24 >= 0) {
    uint64_t v25 = a1;
  }
  else {
    uint64_t v25 = *(void *)a1;
  }
  if (v24 >= 0) {
    LODWORD(v26) = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v26 = *(void *)(a1 + 8);
  }
  unsigned int v27 = morphun::util::StringViewUtils::codePointAt(v25, v26, v9);
  appended = morphun::util::StringUtils::appendCodePoint(&v37, v27);
  morphun::dictionary::NFKD((morphun::dictionary *)appended);
  morphun::dictionary::PhraseProperties::normalize((uint64_t)&v37, (uint64_t)&__p);
  int v29 = morphun::dictionary::PhraseProperties::getLastUsableIndex((uint64_t)&__p, a2);
  if ((v29 & 0x80000000) == 0)
  {
    if ((v36 & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    if ((v36 & 0x80u) == 0) {
      int v31 = v36;
    }
    else {
      int v31 = v35;
    }
    uint64_t v32 = morphun::util::StringViewUtils::codePointAt((uint64_t)p_p, v31, v29);
    LOBYTE(a3) = MEMORY[0x1D942C150](*a3, v32) != 0;
  }
  if ((char)v36 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if ((v29 & 0x80000000) == 0) {
      return a3 & 1;
    }
    goto LABEL_44;
  }
  if (v29 < 0) {
LABEL_44:
  }
    LOBYTE(a3) = 0;
  return a3 & 1;
}

void sub_1D2C97BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::PhraseProperties::getLastUsableIndex(uint64_t a1, void *a2)
{
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4)
    {
LABEL_5:
      while (1)
      {
        uint64_t v4 = (v4 - 1);
        if ((int)v4 < 0) {
          break;
        }
        int v5 = *(char *)(a1 + 23);
        if (v5 >= 0) {
          uint64_t v6 = a1;
        }
        else {
          uint64_t v6 = *(void *)a1;
        }
        if (v5 >= 0) {
          LODWORD(v7) = *(unsigned __int8 *)(a1 + 23);
        }
        else {
          uint64_t v7 = *(void *)(a1 + 8);
        }
        uint64_t v8 = morphun::util::StringViewUtils::codePointAt(v6, v7, v4);
        if (MEMORY[0x1D942C150](*a2, v8)) {
          return v4;
        }
      }
    }
  }
  else
  {
    LODWORD(v4) = *(unsigned __int8 *)(a1 + 23);
    if (*(unsigned char *)(a1 + 23)) {
      goto LABEL_5;
    }
  }
  return 0xFFFFFFFFLL;
}

morphun::analysis::filter::LanguageExpansion *morphun::analysis::filter::LanguageExpansion::LanguageExpansion(morphun::analysis::filter::LanguageExpansion *this, const char **a2)
{
  uint64_t v3 = this;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  std::basic_string<char16_t> v74 = (uint64_t **)((char *)this + 8);
  *(void *)this = (char *)this + 8;
  uint64_t v4 = (char *)this + 24;
  morphun::util::ULocale::ULocale((morphun::analysis::filter::LanguageExpansion *)((char *)this + 24), (const morphun::util::ULocale *)a2);
  v77[0] = 0;
  v77[1] = 0;
  uint64_t v78 = 0;
  uint64_t v7 = a2[1];
  uint64_t v6 = (const char *)(a2 + 1);
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    LODWORD(v10) = *((unsigned __int8 *)v6 + 23);
  }
  else {
    uint64_t v10 = *((void *)v6 + 1);
  }
  morphun::util::StringViewUtils::to_u16string(v9, v10, &v95);
  int32_t v11 = HIBYTE(v95.__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type v12 = v95.__r_.__value_.__r.__words[0];
  int32_t v13 = v95.__r_.__value_.__r.__words[1];
  uint64_t v15 = morphun::util::LocaleUtils::ROOT(v14);
  if ((v11 & 0x80u) == 0) {
    uint64_t v16 = &v95;
  }
  else {
    uint64_t v16 = (std::basic_string<char16_t> *)v12;
  }
  if ((v11 & 0x80u) == 0) {
    int32_t v17 = v11;
  }
  else {
    int32_t v17 = v13;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)v77, (const UChar *)v16, v17, v15);
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v95.__r_.__value_.__l.__data_);
  }
  std::operator+<char16_t>((uint64_t)&v75, L"/com/apple/siri/morphology/analysis/filter/contractionExpandingTable_", (const void **)v77);
  std::basic_string<char16_t>::append(&v75, L".csv", 4uLL);
  std::basic_string<char16_t> __p = v75;
  memset(&v75, 0, sizeof(v75));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  String = (_WORD *)morphun::resources::DataResource::getString((uint64_t *)p_p, size, 1);
  if (String)
  {
    uint64_t v101 = 0;
    unint64_t v102 = 0;
    uint64_t v103 = 0;
    if (*String)
    {
      uint64_t v21 = 0;
      do
        uint64_t v22 = v21 + 1;
      while (String[++v21]);
    }
    else
    {
      uint64_t v22 = 0;
    }
    std::basic_string<char16_t> v73 = v3;
    *(_OWORD *)&v95.__r_.__value_.__l.__data_ = 0uLL;
    v95.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)"\n";
    uint64_t v96 = 1;
    uint64_t v97 = String;
    uint64_t v98 = v22;
    int v99 = v22;
    int v100 = 0;
    if ((int)v22 >= 1) {
      morphun::util::DelimitedStringIterator::getNext((UChar *)&v95);
    }
    while (1)
    {
      if (v100 >= v99 && v95.__r_.__value_.__l.__size_ == 0)
      {
        if (SHIBYTE(v103) < 0) {
          operator delete(v101);
        }
        uint64_t v3 = v73;
        goto LABEL_111;
      }
      uint64_t v88 = 0;
      unint64_t v89 = 0;
      uint64_t v90 = L",";
      uint64_t v91 = 1;
      long long v92 = *(_OWORD *)&v95.__r_.__value_.__l.__data_;
      int v93 = v95.__r_.__value_.__r.__words[1];
      int v94 = 0;
      if (SLODWORD(v95.__r_.__value_.__r.__words[1]) >= 1) {
        morphun::util::DelimitedStringIterator::getNext((UChar *)&v88);
      }
      uint64_t v26 = 0;
      unint64_t v27 = 0;
      int v28 = 0;
      int v29 = 0;
      unint64_t v30 = 0;
      while (v94 < v93 || v89 != 0)
      {
        morphun::util::StringViewUtils::lowercase((uint64_t)&v101, v88, v89, (uint64_t)v4);
        if (v103 >= 0) {
          uint64_t v32 = &v101;
        }
        else {
          uint64_t v32 = (void **)v101;
        }
        if (v103 >= 0) {
          unint64_t v33 = HIBYTE(v103);
        }
        else {
          unint64_t v33 = v102;
        }
        if (v33 != v89) {
          goto LABEL_118;
        }
        uint64_t v34 = v88;
        if (v33)
        {
          unint64_t v35 = v33;
          unsigned __int8 v36 = v88;
          while (*v36 == *(unsigned __int16 *)v32)
          {
            uint64_t v32 = (void **)((char *)v32 + 2);
            ++v36;
            if (!--v35) {
              goto LABEL_58;
            }
          }
LABEL_118:
          exception = __cxa_allocate_exception(0x38uLL);
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v84, (char *)L"String needs to be lowercased in ");
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v62 = &__p;
          }
          else {
            uint64_t v62 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v63 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v63 = __p.__r_.__value_.__l.__size_;
          }
          std::basic_string<char16_t>::append(&v84, (const std::basic_string<char16_t>::value_type *)v62, v63);
          std::basic_string<char16_t> v85 = v84;
          memset(&v84, 0, sizeof(v84));
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v82, (char *)L": ");
          if ((v83 & 0x80u) == 0) {
            uint64_t v64 = (const std::basic_string<char16_t>::value_type *)v82;
          }
          else {
            uint64_t v64 = (const std::basic_string<char16_t>::value_type *)v82[0];
          }
          if ((v83 & 0x80u) == 0) {
            std::basic_string<char16_t>::size_type v65 = v83;
          }
          else {
            std::basic_string<char16_t>::size_type v65 = v82[1];
          }
          std::basic_string<char16_t>::append(&v85, v64, v65);
          std::basic_string<char16_t> v86 = v85;
          memset(&v85, 0, sizeof(v85));
          unint64_t v66 = v89;
          if (v89 >= 0x7FFFFFFFFFFFFFF8) {
            std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
          }
          std::basic_string<char16_t> v67 = v88;
          if (v89 >= 0xB)
          {
            uint64_t v69 = (v89 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((v89 | 3) != 0xB) {
              uint64_t v69 = v89 | 3;
            }
            p_dst = (const std::basic_string<char16_t>::value_type **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v69 + 1);
            std::basic_string<char16_t>::size_type v80 = v66;
            int64_t v81 = v70 | 0x8000000000000000;
            long long __dst = (const std::basic_string<char16_t>::value_type *)p_dst;
          }
          else
          {
            HIBYTE(v81) = v89;
            p_dst = &__dst;
            if (!v89)
            {
LABEL_139:
              *((_WORD *)p_dst + v66) = 0;
              if (v81 >= 0) {
                std::basic_string<char16_t> v71 = (const std::basic_string<char16_t>::value_type *)&__dst;
              }
              else {
                std::basic_string<char16_t> v71 = __dst;
              }
              if (v81 >= 0) {
                std::basic_string<char16_t>::size_type v72 = HIBYTE(v81);
              }
              else {
                std::basic_string<char16_t>::size_type v72 = v80;
              }
              std::basic_string<char16_t>::append(&v86, v71, v72);
              std::basic_string<char16_t> v87 = v86;
              memset(&v86, 0, sizeof(v86));
              morphun::exception::Throwable::Throwable((uint64_t)exception, (long long *)&v87);
              void *exception = &unk_1F2A11518;
            }
          }
          memmove(p_dst, v67, 2 * v66);
          goto LABEL_139;
        }
LABEL_58:
        if (v27)
        {
          if ((unint64_t)v29 >= v30)
          {
            uint64_t v37 = (v29 - v28) >> 4;
            unint64_t v38 = v37 + 1;
            if ((unint64_t)(v37 + 1) >> 60) {
              std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
            }
            if ((uint64_t)(v30 - (void)v28) >> 3 > v38) {
              unint64_t v38 = (uint64_t)(v30 - (void)v28) >> 3;
            }
            if (v30 - (unint64_t)v28 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v39 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v39 = v38;
            }
            if (v39) {
              unint64_t v39 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v39);
            }
            else {
              uint64_t v40 = 0;
            }
            std::basic_string<char16_t>::size_type v41 = (const UChar **)(v39 + 16 * v37);
            *std::basic_string<char16_t>::size_type v41 = v34;
            v41[1] = (const UChar *)v33;
            if (v29 == v28)
            {
              uint64_t v43 = (char *)(v39 + 16 * v37);
            }
            else
            {
              unint64_t v42 = v39 + 16 * v37;
              do
              {
                uint64_t v43 = (char *)(v42 - 16);
                *(_OWORD *)(v42 - 16) = *((_OWORD *)v29 - 1);
                v29 -= 16;
                v42 -= 16;
              }
              while (v29 != v28);
            }
            unint64_t v30 = v39 + 16 * v40;
            int v29 = (char *)(v41 + 2);
            if (v28) {
              operator delete(v28);
            }
            int v28 = v43;
          }
          else
          {
            *(void *)int v29 = v88;
            *((void *)v29 + 1) = v33;
            v29 += 16;
          }
        }
        else
        {
          uint64_t v26 = v88;
          unint64_t v27 = v33;
        }
        morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v88);
      }
      int v44 = v74;
      uint64_t v45 = *v74;
      uint64_t v46 = v74;
      if (!*v74) {
        goto LABEL_102;
      }
      uint64_t v46 = v74;
      while (1)
      {
        while (1)
        {
          int v44 = (uint64_t **)v45;
          unint64_t v47 = v45[5];
          if (v47 >= v27) {
            unint64_t v48 = v27;
          }
          else {
            unint64_t v48 = v47;
          }
          if (v48)
          {
            uint64_t v49 = (unsigned __int16 *)v44[4];
            unint64_t v50 = v48;
            uint64_t v51 = v26;
            do
            {
              unsigned int v52 = *v51;
              unsigned int v53 = *v49;
              if (v52 < v53) {
                goto LABEL_91;
              }
              if (v53 < v52) {
                goto LABEL_93;
              }
              ++v51;
              ++v49;
            }
            while (--v50);
          }
          if (v27 >= v47) {
            break;
          }
LABEL_91:
          uint64_t v45 = *v44;
          uint64_t v46 = v44;
          if (!*v44) {
            goto LABEL_102;
          }
        }
LABEL_93:
        if (v48)
        {
          char v54 = (unsigned __int16 *)v44[4];
          long long v55 = v26;
          do
          {
            unsigned int v56 = *v54;
            unsigned int v57 = *v55;
            if (v56 < v57) {
              goto LABEL_99;
            }
            if (v57 < v56) {
              goto LABEL_101;
            }
            ++v54;
            ++v55;
          }
          while (--v48);
        }
        if (v47 >= v27) {
          break;
        }
LABEL_99:
        uint64_t v46 = v44 + 1;
        uint64_t v45 = v44[1];
        if (!v45) {
          goto LABEL_102;
        }
      }
LABEL_101:
      if (!v44)
      {
LABEL_102:
        int v58 = (uint64_t *)operator new(0x48uLL);
        v58[6] = 0;
        v58[4] = (uint64_t)v26;
        v58[5] = v27;
        v58[7] = 0;
        v58[8] = 0;
        std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>(v58 + 6, v28, (uint64_t)v29, (v29 - v28) >> 4);
        uint64_t *v58 = 0;
        v58[1] = 0;
        v58[2] = (uint64_t)v44;
        *uint64_t v46 = v58;
        uint64_t v59 = **(void **)v73;
        if (v59)
        {
          *(void *)std::basic_string<char16_t> v73 = v59;
          int v58 = *v46;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)v73 + 1), v58);
        ++*((void *)v73 + 2);
      }
      if (v28) {
        operator delete(v28);
      }
      morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v95);
    }
  }
  std::operator+<char16_t>((uint64_t)&v95, L"ExpansionTable does not exist: ", (const void **)&__p.__r_.__value_.__l.__data_);
  if (morphun::util::gLogLevel <= 1)
  {
    if ((v95.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v24 = &v95;
    }
    else {
      int v24 = (std::basic_string<char16_t> *)v95.__r_.__value_.__r.__words[0];
    }
    morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v24);
  }
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v95.__r_.__value_.__l.__data_);
  }
LABEL_111:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v75.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v78) < 0) {
    operator delete(v77[0]);
  }
  return v3;
}

void sub_1D2C98364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (*(char *)(v31 - 153) < 0) {
    operator delete(*(void **)(v31 - 176));
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  std::__tree<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::vector<std::u16string_view>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::vector<std::u16string_view>>>>::destroy(*a11);
  _Unwind_Resume(a1);
}

void *morphun::analysis::filter::LanguageExpansion::expandWithWorkspace(uint64_t a1, const UChar *a2, int32_t a3, uint64_t a4)
{
  morphun::util::StringViewUtils::lowercase(a4, a2, a3, a1 + 24);
  unint64_t v6 = *(unsigned __int8 *)(a4 + 23);
  char v7 = v6;
  int v8 = *(unsigned __int16 **)a4;
  unint64_t v9 = *(void *)(a4 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v10 = (unsigned __int16 *)a4;
  }
  else {
    uint64_t v10 = *(unsigned __int16 **)a4;
  }
  if ((v6 & 0x80u) == 0) {
    uint64_t v11 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v11 = *(void *)(a4 + 8);
  }
  if (v11)
  {
    uint64_t v12 = 2 * v11;
    do
    {
      if (*v10 == 8217) {
        *uint64_t v10 = 39;
      }
      ++v10;
      v12 -= 2;
    }
    while (v12);
    unint64_t v6 = *(unsigned __int8 *)(a4 + 23);
    int v8 = *(unsigned __int16 **)a4;
    unint64_t v9 = *(void *)(a4 + 8);
    char v7 = *(unsigned char *)(a4 + 23);
  }
  if (v7 < 0) {
    unint64_t v6 = v9;
  }
  else {
    int v8 = (unsigned __int16 *)a4;
  }
  uint64_t v15 = *(void **)(a1 + 8);
  uint64_t v14 = (void *)(a1 + 8);
  int32_t v13 = v15;
  if (v15)
  {
    uint64_t v16 = v14;
    do
    {
      unint64_t v17 = v13[5];
      if (v6 >= v17) {
        unint64_t v18 = v13[5];
      }
      else {
        unint64_t v18 = v6;
      }
      if (v18)
      {
        uint64_t v19 = (unsigned __int16 *)v13[4];
        int v20 = v8;
        while (1)
        {
          unsigned int v21 = *v19;
          unsigned int v22 = *v20;
          if (v21 < v22)
          {
            ++v13;
            goto LABEL_31;
          }
          if (v22 < v21) {
            break;
          }
          ++v19;
          ++v20;
          if (!--v18) {
            goto LABEL_26;
          }
        }
        uint64_t v16 = v13;
      }
      else
      {
LABEL_26:
        if (v17 < v6) {
          ++v13;
        }
        else {
          uint64_t v16 = v13;
        }
      }
LABEL_31:
      int32_t v13 = (void *)*v13;
    }
    while (v13);
    if (v14 != v16)
    {
      unint64_t v23 = v16[5];
      if (v23 >= v6) {
        unint64_t v24 = v6;
      }
      else {
        unint64_t v24 = v16[5];
      }
      if (v24)
      {
        uint64_t v25 = (unsigned __int16 *)v16[4];
        while (1)
        {
          unsigned int v26 = *v8;
          unsigned int v27 = *v25;
          if (v26 < v27) {
            break;
          }
          if (v27 < v26) {
            goto LABEL_43;
          }
          ++v8;
          ++v25;
          if (!--v24) {
            goto LABEL_41;
          }
        }
      }
      else
      {
LABEL_41:
        if (v6 >= v23) {
          goto LABEL_43;
        }
      }
    }
  }
  uint64_t v16 = v14;
LABEL_43:
  if (v14 == v16) {
    return 0;
  }
  else {
    return v16 + 6;
  }
}

double morphun::tokenizer::RegexSplitIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = a3;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)(a1 + 224) = xmmword_1D2D6F530;
  *(_DWORD *)(a1 + 240) = -1;
  return result;
}

uint64_t morphun::tokenizer::RegexSplitIterator::getNextBoundary(morphun::tokenizer::RegexSplitIterator *this)
{
  int v2 = *((_DWORD *)this + 58);
  if (*((_DWORD *)this + 57) >= v2)
  {
    *((_DWORD *)this + 56) = v2;
    uint64_t result = (*(uint64_t (**)(void))(**((void **)this + 4) + 24))(*((void *)this + 4));
    *((_DWORD *)this + 58) = result;
    uint64_t v4 = *((int *)this + 56);
    unint64_t v5 = (result - v4);
    if ((int)v5 >= 2)
    {
      UErrorCode status = U_ZERO_ERROR;
      utext_openUChars((UText *)((char *)this + 80), (const UChar *)(*((void *)this + 2) + 2 * v4), v5, &status);
      if (status >= U_ILLEGAL_ARGUMENT_ERROR)
      {
        UErrorCode v20 = status;
        exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::ICUException::ICUException(exception, v20);
      }
      else
      {
        UErrorCode v23 = U_ZERO_ERROR;
        uregex_setUText(*((URegularExpression **)this + 8), (UText *)((char *)this + 80), &v23);
        UErrorCode v6 = v23;
        if (v23 >= U_ILLEGAL_ARGUMENT_ERROR
          || (UErrorCode v23 = U_ZERO_ERROR,
              int v7 = uregex_find(*((URegularExpression **)this + 8), 0, &v23),
              UErrorCode v6 = v23,
              v23 >= U_ILLEGAL_ARGUMENT_ERROR))
        {
          exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::ICUException::ICUException(exception, v6);
        }
        else
        {
          if (!v7) {
            goto LABEL_20;
          }
          uint64_t v8 = *((void *)this + 1);
          if (*(void *)(v8 + 136))
          {
            unint64_t v9 = *((int *)this + 56);
            unint64_t v10 = *((void *)this + 3);
            BOOL v11 = v10 >= v9;
            unint64_t v12 = v10 - v9;
            if (!v11) {
              std::__throw_out_of_range[abi:ne180100]("string_view::substr");
            }
            int32_t v13 = (unsigned __int16 *)((char *)this + 40);
            int32_t v14 = v12 >= v5 ? v5 : v12;
            morphun::util::StringViewUtils::lowercase((uint64_t)this + 40, (const UChar *)(*((void *)this + 2) + 2 * v9), v14, v8 + 8);
            uint64_t v15 = npc<std::set<std::u16string_view>>(*(void *)(*((void *)this + 1) + 136));
            if (*((char *)this + 63) < 0)
            {
              int32_t v13 = (unsigned __int16 *)*((void *)this + 5);
              unint64_t v16 = *((void *)this + 6);
            }
            else
            {
              unint64_t v16 = *((unsigned __int8 *)this + 63);
            }
            unint64_t v17 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v15, v13, v16);
            if ((void *)(npc<std::set<std::u16string_view>>(*(void *)(*((void *)this + 1) + 136)) + 8) != v17)
            {
LABEL_20:
              uint64_t result = *((unsigned int *)this + 58);
              goto LABEL_21;
            }
          }
          UErrorCode v23 = U_ZERO_ERROR;
          int32_t v18 = uregex_groupCount(*((URegularExpression **)this + 8), &v23);
          UErrorCode v19 = v23;
          if (v23 < U_ILLEGAL_ARGUMENT_ERROR)
          {
            *((_DWORD *)this + 59) = 1;
            *((_DWORD *)this + 60) = v18;
            return morphun::tokenizer::RegexSplitIterator::getNextRegexBoundary(this);
          }
          exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::ICUException::ICUException(exception, v19);
        }
      }
    }
LABEL_21:
    *((_DWORD *)this + 57) = result;
    return result;
  }

  return morphun::tokenizer::RegexSplitIterator::getNextRegexBoundary(this);
}

void sub_1D2C988FC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::RegexSplitIterator::getNextRegexBoundary(morphun::tokenizer::RegexSplitIterator *this)
{
  int32_t v2 = *((_DWORD *)this + 59);
  if (v2 > *((_DWORD *)this + 60))
  {
LABEL_7:
    uint64_t result = *((unsigned int *)this + 58);
  }
  else
  {
    while (1)
    {
      UErrorCode status = U_ZERO_ERROR;
      int32_t v3 = uregex_end(*((URegularExpression **)this + 8), v2, &status);
      UErrorCode v4 = status;
      if (status >= U_ILLEGAL_ARGUMENT_ERROR)
      {
        exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::ICUException::ICUException(exception, v4);
      }
      if (v3 >= 1)
      {
        uint64_t result = (*((_DWORD *)this + 56) + v3);
        if ((int)result < *((_DWORD *)this + 58) && *((_DWORD *)this + 57) < (int)result) {
          break;
        }
      }
      int v6 = *((_DWORD *)this + 59);
      int v7 = *((_DWORD *)this + 60);
      int32_t v2 = v6 + 1;
      *((_DWORD *)this + 59) = v6 + 1;
      if (v6 >= v7) {
        goto LABEL_7;
      }
    }
  }
  *((_DWORD *)this + 57) = result;
  return result;
}

void sub_1D2C989E4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::set<std::u16string_view>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C98A48(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator(morphun::tokenizer::RegexSplitIterator *this)
{
  morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  icu4cxx::RegularExpression::~RegularExpression((URegularExpression **)this + 8);
  if (*((char *)this + 63) < 0) {
    operator delete(*((void **)this + 5));
  }
}

icu4cxx::RegularExpression *icu4cxx::RegularExpression::RegularExpression(icu4cxx::RegularExpression *this, const icu4cxx::RegularExpression *regexp)
{
  *((unsigned char *)this + 8) = 1;
  UErrorCode status = U_ZERO_ERROR;
  *(void *)this = uregex_clone(regexp, &status);
  *((unsigned char *)this + 8) = 1;
  UErrorCode v3 = status;
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v3);
  }
  return this;
}

void sub_1D2C98B60(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::RegexSplitIterator::RegexSplitIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = &unk_1F2A11680;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  *(unsigned char *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 80) = xmmword_1D2D6F540;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  long long v8 = xmmword_1D2D6F530;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = xmmword_1D2D6F530;
  *(_DWORD *)(a1 + 240) = -1;
  unint64_t v9 = *(const icu4cxx::RegularExpression ***)(a2 + 144);
  if (v9)
  {
    icu4cxx::RegularExpression::RegularExpression((icu4cxx::RegularExpression *)&v11, *v9);
    if (*(unsigned char *)(a1 + 72)) {
      uregex_close(*(URegularExpression **)(a1 + 64));
    }
    *(void *)(a1 + 64) = v11;
    *(unsigned char *)(a1 + 72) = v12;
    BOOL v11 = 0;
    char v12 = 0;
    icu4cxx::RegularExpression::~RegularExpression(&v11);
    long long v8 = xmmword_1D2D6F530;
  }
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = a4;
  *(_OWORD *)(a1 + 224) = v8;
  *(_DWORD *)(a1 + 240) = -1;
  return a1;
}

uint64_t morphun::dialog::language::FiCommonConceptFactory::quantifyType@<X0>(morphun::dialog::language::FiCommonConceptFactory *a1@<X0>, uint64_t a2@<X1>, const morphun::dialog::SemanticFeatureConceptBase *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  int v6 = a5;
  if (*((void *)a1 + 49))
  {
    uint64_t v11 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a3 + 104))(a3);
    uint64_t v12 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a3 + 128))(a3);
    npc<morphun::dialog::SemanticFeatureConceptBase>(v12);
    BOOL shouldUsePlural = morphun::dialog::language::FiCommonConceptFactory::shouldUsePlural(a1, a3);
    uint64_t v14 = *((void *)a1 + 47);
    uint64_t v15 = (morphun::grammar::synthesis::GrammemeConstants *)npc<morphun::dialog::SemanticFeature const>(v14);
    if (shouldUsePlural) {
      uint64_t v16 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v15);
    }
    else {
      uint64_t v16 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v15);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v12 + 64))(v12, v14, v16);
    if (v11)
    {
      uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 32))(v11);
      uint64_t v19 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v18);
      uint64_t v20 = *(unsigned __int8 *)(v18 + 23);
      int v21 = (char)v20;
      if ((v20 & 0x80u) != 0) {
        uint64_t v20 = *(void *)(v18 + 8);
      }
      uint64_t v22 = *(unsigned __int8 *)(v19 + 23);
      int v23 = (char)v22;
      if ((v22 & 0x80u) != 0) {
        uint64_t v22 = *(void *)(v19 + 8);
      }
      if (v20 != v22) {
        goto LABEL_28;
      }
      if (v20)
      {
        if (v23 >= 0) {
          unint64_t v24 = (unsigned __int16 *)v19;
        }
        else {
          unint64_t v24 = *(unsigned __int16 **)v19;
        }
        if (v21 >= 0) {
          uint64_t v25 = (unsigned __int16 *)v18;
        }
        else {
          uint64_t v25 = *(unsigned __int16 **)v18;
        }
        while (*v24 == *v25)
        {
          ++v25;
          ++v24;
          if (!--v20) {
            goto LABEL_23;
          }
        }
        goto LABEL_28;
      }
    }
LABEL_23:
    char v26 = v6 == 1 || shouldUsePlural;
    if ((v26 & 1) == 0)
    {
      uint64_t v27 = *((void *)a1 + 49);
      int v28 = (morphun::grammar::synthesis::GrammemeConstants *)npc<morphun::dialog::SemanticFeature const>(v27);
      uint64_t v29 = morphun::grammar::synthesis::GrammemeConstants::CASE_PARTITIVE(v28);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v12 + 64))(v12, v27, v29);
    }
LABEL_28:
    uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + *(void *)(*(void *)v12 - 56)) + 24))(v12 + *(void *)(*(void *)v12 - 56));
    npc<morphun::dialog::SpeakableString>(v30);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
    morphun::dialog::SpeakableString::SpeakableString(v33, (long long *)__p);
    morphun::dialog::SpeakableString::operator+(a2, (uint64_t)v33, v34);
    morphun::dialog::SpeakableString::operator+((uint64_t)v34, v30, a6);
    if (v32 < 0) {
      operator delete(__p[0]);
    }
    (*(void (**)(uint64_t))(*(void *)v30 + 16))(v30);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 16))(v12);
    if (v11) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v11 + 16))(v11);
    }
    return result;
  }

  return morphun::dialog::CommonConceptFactoryImpl::quantifyType((uint64_t *)a1, a2, (uint64_t)a3, a4, a5);
}

void sub_1D2C98FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 16))(v23);
  }
  (*(void (**)(uint64_t))(*(void *)v22 + 16))(v22);
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 16))(v21);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C99138(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SemanticFeatureConceptBase>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C9919C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::dialog::language::FiCommonConceptFactory::shouldUsePlural(morphun::dialog::language::FiCommonConceptFactory *this, const morphun::dialog::SemanticFeatureConceptBase *a2)
{
  uint64_t v4 = *((void *)this + 47);
  npc<morphun::dialog::SemanticFeature const>(v4);
  if ((*(unsigned int (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(void *)a2 + 56))(a2, v4))
  {
    uint64_t v5 = *((void *)this + 47);
    npc<morphun::dialog::SemanticFeature const>(v5);
    int v6 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(void *)a2 + 48))(a2, v5);
    if (!v6)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    int v7 = v6;
    uint64_t v8 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v6);
    uint64_t v9 = *((unsigned __int8 *)v7 + 23);
    int v10 = (char)v9;
    if ((v9 & 0x80u) != 0) {
      uint64_t v9 = *((void *)v7 + 1);
    }
    uint64_t v11 = *(unsigned __int8 *)(v8 + 23);
    int v12 = (char)v11;
    if ((v11 & 0x80u) != 0) {
      uint64_t v11 = *(void *)(v8 + 8);
    }
    if (v9 == v11)
    {
      if (!v9) {
        return 1;
      }
      if (v12 >= 0) {
        int32_t v13 = (unsigned __int16 *)v8;
      }
      else {
        int32_t v13 = *(unsigned __int16 **)v8;
      }
      if (v10 >= 0) {
        uint64_t v14 = v7;
      }
      else {
        uint64_t v14 = *(morphun::grammar::synthesis::GrammemeConstants **)v7;
      }
      while (*v13 == *(unsigned __int16 *)v14)
      {
        uint64_t v14 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v14 + 2);
        ++v13;
        if (!--v9) {
          return 1;
        }
      }
    }
  }
  uint64_t v16 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a2 + 128))(a2);
  uint64_t v17 = npc<morphun::dialog::SemanticFeatureConceptBase>(v16);
  (*(void (**)(uint64_t))(*(void *)v17 + 96))(v17);
  memset(&v38, 0, sizeof(v38));
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v16 + *(void *)(*(void *)v16 - 56)) + 24))(v16 + *(void *)(*(void *)v16 - 56));
  npc<morphun::dialog::SpeakableString>(v18);
  if (v18)
  {
    uint64_t v19 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v18 + 32))(v18);
    std::basic_string<char16_t>::operator=(&v38, v19);
  }
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
    if (*((unsigned char *)&v38.__r_.__value_.__s + 23))
    {
      uint64_t v21 = &v38;
      goto LABEL_25;
    }
LABEL_28:
    BOOL v15 = 0;
    if (!v18) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  std::basic_string<char16_t>::size_type size = v38.__r_.__value_.__l.__size_;
  if (!v38.__r_.__value_.__l.__size_) {
    goto LABEL_28;
  }
  uint64_t v21 = (std::basic_string<char16_t> *)v38.__r_.__value_.__r.__words[0];
LABEL_25:
  morphun::dictionary::DictionaryMetaData::getPropertyValues(*((void *)this + 94), (const UChar *)v21, size, (unsigned __int16 *)"i", 0xAuLL, v37);
  uint64_t v22 = v37[0];
  if (v37[0] == v37[1]) {
    goto LABEL_40;
  }
  if (*(char *)(v37[0] + 23) < 0)
  {
    uint64_t v22 = *(void *)v37[0];
    unint64_t v23 = *(void *)(v37[0] + 8);
  }
  else
  {
    unint64_t v23 = *(unsigned __int8 *)(v37[0] + 23);
  }
  if (v23 < 5) {
    goto LABEL_40;
  }
  uint64_t v24 = 0;
  uint64_t v25 = v22 + 2 * v23 - 10;
  do
  {
    int v26 = *(unsigned __int16 *)(v25 + v24 * 2);
    int v27 = (unsigned __int16)aYks[v24];
  }
  while (v27 == v26 && v24++ != 4);
  if (v27 != v26)
  {
LABEL_40:
    uint64_t v29 = *((void *)this + 94);
    if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v30 = &v38;
    }
    else {
      uint64_t v30 = (std::basic_string<char16_t> *)v38.__r_.__value_.__r.__words[0];
    }
    if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v31 = HIBYTE(v38.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v31 = v38.__r_.__value_.__l.__size_;
    }
    uint64_t v32 = *((void *)this + 95);
    unint64_t v39 = 0;
    CombinedBinaryuint64_t Type = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v29, (uint64_t)&v39, (const UChar *)v30, v31);
    BOOL v15 = (v32 & ~v39) == 0 && CombinedBinaryType != 0;
  }
  else
  {
    BOOL v15 = 1;
  }
  unint64_t v39 = (unint64_t)v37;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v39);
  if (!v18) {
    goto LABEL_54;
  }
LABEL_53:
  (*(void (**)(uint64_t))(*(void *)v18 + 16))(v18);
LABEL_54:
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  (*(void (**)(uint64_t))(*(void *)v16 + 16))(v16);
  return v15;
}

void sub_1D2C9954C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  __cxa_free_exception(v18);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::SpeakableString>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C9964C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::language::FiCommonConceptFactory::quantify(morphun::dialog::language::FiCommonConceptFactory *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  if (*((void *)this + 49))
  {
    npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a3);
    uint64_t v6 = *((void *)this + 49);
    npc<morphun::dialog::SemanticFeature const>(v6);
    uint64_t v7 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(void *)a3 + 104))(a3, v6);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "c");
    if (v7)
    {
      uint64_t v8 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 32))(v7);
      uint64_t v9 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 400, v8);
      if ((morphun::dialog::language::FiCommonConceptFactory *)((char *)this + 408) != (morphun::dialog::language::FiCommonConceptFactory *)v9) {
        std::basic_string<char16_t>::operator=(&__dst, (const std::basic_string<char16_t> *)(v9 + 56));
      }
    }
    if (morphun::dialog::language::FiCommonConceptFactory::shouldUsePlural(this, a3)) {
      std::basic_string<char16_t>::append(&__dst, L"-plural", 7uLL);
    }
    (*(void (**)(void *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(void *)a2 + 200))(v11, a2, &__dst);
    morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, (const morphun::dialog::SpeakableString *)v11, a3);
  }

  return morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, a3);
}

void sub_1D2C99830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 16))(v19);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C998F0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::FiCommonConceptFactory::~FiCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A057E8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A057E8);
}

uint64_t std::map<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::map[abi:ne180100](uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  UErrorCode v3 = (uint64_t **)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  uint64_t v4 = a2 + 1;
  uint64_t v5 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      uint64_t v6 = *(uint64_t **)(a1 + 8);
      uint64_t v7 = v3;
      if (*(uint64_t ***)a1 == v3) {
        goto LABEL_8;
      }
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = v3;
      if (v6)
      {
        do
        {
          uint64_t v7 = (uint64_t **)v8;
          uint64_t v8 = *(void *)(v8 + 8);
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v7 = (uint64_t **)v9[2];
          BOOL v10 = *v7 == (uint64_t *)v9;
          uint64_t v9 = v7;
        }
        while (v10);
      }
      unsigned int v11 = *((unsigned __int16 *)v5 + 16);
      if (*((unsigned __int16 *)v7 + 16) < v11)
      {
LABEL_8:
        if (v6) {
          int v12 = v7;
        }
        else {
          int v12 = v3;
        }
        if (v6) {
          int32_t v13 = v7 + 1;
        }
        else {
          int32_t v13 = v3;
        }
      }
      else
      {
        int v12 = v3;
        int32_t v13 = v3;
        if (v6)
        {
          int32_t v13 = v3;
          while (1)
          {
            while (1)
            {
              int v12 = (uint64_t **)v6;
              unsigned int v17 = *((unsigned __int16 *)v6 + 16);
              if (v11 >= v17) {
                break;
              }
              uint64_t v6 = *v12;
              int32_t v13 = v12;
              if (!*v12) {
                goto LABEL_15;
              }
            }
            if (v17 >= v11) {
              break;
            }
            int32_t v13 = v12 + 1;
            uint64_t v6 = v12[1];
            if (!v6) {
              goto LABEL_15;
            }
          }
        }
      }
      if (!*v13)
      {
LABEL_15:
        uint64_t v14 = operator new(0x48uLL);
        v14[16] = *((_WORD *)v5 + 16);
        std::map<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::map[abi:ne180100](v14 + 20, v5 + 5);
        *((unsigned char *)v14 + 64) = *((unsigned char *)v5 + 64);
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v12, v13, (uint64_t *)v14);
      }
      BOOL v15 = (void *)v5[1];
      if (v15)
      {
        do
        {
          uint64_t v16 = v15;
          BOOL v15 = (void *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          uint64_t v16 = (void *)v5[2];
          BOOL v10 = *v16 == (void)v5;
          uint64_t v5 = v16;
        }
        while (!v10);
      }
      uint64_t v5 = v16;
    }
    while (v16 != v4);
  }
  return a1;
}

void sub_1D2C99AD4(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,void *>>>::operator()[abi:ne180100](0, v1);
  std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*a1);
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(a1[1]);
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(a1[6]);
    operator delete(a1);
  }
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,void *>>>::operator()[abi:ne180100](char a1, void **a2)
{
  if (a1)
  {
    std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(a2[6]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void morphun::dialog::language::CsCommonConceptFactory::~CsCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05668);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05668);
}

void morphun::exception::ExcessComplexityException::~ExcessComplexityException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::ExcessComplexityException::ExcessComplexityException(morphun::exception::ExcessComplexityException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11488;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11488;
  return result;
}

uint64_t morphun::util::Logger::registerLogger(morphun::util *a1, morphun::util *a2)
{
  uint64_t v4 = (std::mutex *)morphun::util::CLASS_MUTEX(a1);
  std::mutex::lock(v4);
  uint64_t v6 = (morphun::util ***)morphun::util::LOGGER_CACHE(v5);
  npc<std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>>((uint64_t)v6);
  if (!a2)
  {
    int32_t v13 = *v6;
    int v12 = v6[1];
    while (v13 != v12)
    {
      if (*v13 == a1)
      {
        uint64_t v25 = v13 + 2;
        if (v13 + 2 != v12)
        {
          do
          {
            int v26 = v25[1];
            *(v25 - 2) = *v25;
            *(v25 - 1) = v26;
            v25 += 2;
          }
          while (v25 != v12);
          int32_t v13 = v25 - 2;
        }
        v6[1] = v13;
        goto LABEL_29;
      }
      v13 += 2;
    }
    goto LABEL_12;
  }
  uint64_t v7 = (char *)*v6;
  uint64_t v8 = v6[1];
  if (*v6 != v8)
  {
    uint64_t v9 = *v6;
    while (*v9 != a1)
    {
      v9 += 2;
      if (v9 == v8) {
        goto LABEL_6;
      }
    }
LABEL_12:
    uint64_t v14 = 0;
    goto LABEL_30;
  }
LABEL_6:
  unint64_t v10 = (unint64_t)v6[2];
  if ((unint64_t)v8 >= v10)
  {
    uint64_t v15 = ((char *)v8 - v7) >> 4;
    unint64_t v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 60) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v17 = v10 - (void)v7;
    if (v17 >> 3 > v16) {
      unint64_t v16 = v17 >> 3;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v16;
    }
    uint64_t v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v18);
    uint64_t v20 = (morphun::util **)&v19[16 * v15];
    uint64_t v22 = &v19[16 * v21];
    *uint64_t v20 = a1;
    v20[1] = a2;
    unsigned int v11 = v20 + 2;
    uint64_t v24 = *v6;
    unint64_t v23 = (char *)v6[1];
    if (v23 != (char *)*v6)
    {
      do
      {
        *((_OWORD *)v20 - 1) = *((_OWORD *)v23 - 1);
        v20 -= 2;
        v23 -= 16;
      }
      while (v23 != (char *)v24);
      unint64_t v23 = (char *)*v6;
    }
    uint64_t *v6 = v20;
    v6[1] = v11;
    v6[2] = (morphun::util **)v22;
    if (v23) {
      operator delete(v23);
    }
  }
  else
  {
    *uint64_t v8 = a1;
    v8[1] = a2;
    unsigned int v11 = v8 + 2;
  }
  v6[1] = v11;
LABEL_29:
  uint64_t v14 = 1;
LABEL_30:
  std::mutex::unlock(v4);
  return v14;
}

void sub_1D2C99E18(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::CLASS_MUTEX(morphun::util *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::util::CLASS_MUTEX(void)::classMutex;
  if (!morphun::util::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C99EF0(_Unwind_Exception *a1)
{
}

uint64_t morphun::util::LOGGER_CACHE(morphun::util *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return morphun::util::LOGGER_CACHE(void)::LOGGER_CACHE_;
}

void sub_1D2C99FE4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x20C40960023A9);
  _Unwind_Resume(a1);
}

uint64_t npc<std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C9A06C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::getOSLog(morphun::util *this)
{
  unint64_t v1 = 0x1EB9E1000uLL;
  {
    unint64_t v1 = 0x1EB9E1000;
    if (v3)
    {
      morphun::util::getOSLog(void)::log = (uint64_t)os_log_create("com.apple.morphun", "libmorphun");
      unint64_t v1 = 0x1EB9E1000;
    }
  }
  return *(void *)(v1 + 2392);
}

void *std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>::vector[abi:ne180100](void *a1, long long *a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 60) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(a3);
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v7];
    uint64_t v8 = 16 * a3;
    do
    {
      long long v9 = *a2++;
      *v6++ = v9;
      v8 -= 16;
    }
    while (v8);
    a1[1] = v6;
  }
  return a1;
}

void sub_1D2C9A16C(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::logOS(NSObject *a1, uint64_t a2, uint64_t a3, _WORD *a4)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  memset(&__p, 0, sizeof(__p));
  if (*a4)
  {
    uint64_t v6 = 0;
    do
      int v7 = v6 + 1;
    while (a4[++v6]);
  }
  else
  {
    int v7 = 0;
  }
  morphun::util::StringViewUtils::convert(&__p, (uint64_t)a4, v7);
  switch(a2)
  {
    case 0:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_DEBUG))
      {
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)buf = 136380675;
        uint64_t v19 = p_p;
        unint64_t v10 = "[TRACE] %{private}s";
        goto LABEL_23;
      }
      break;
    case 1:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v15 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v15 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)buf = 136380675;
        uint64_t v19 = v15;
        unint64_t v10 = "[DEBUG] %{private}s";
LABEL_23:
        int32_t v13 = a1;
        os_log_type_t v14 = OS_LOG_TYPE_DEBUG;
        goto LABEL_29;
      }
      break;
    case 2:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
      {
        unsigned int v11 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          unsigned int v11 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = v11;
        unint64_t v10 = "[INFO] %{public}s";
        goto LABEL_28;
      }
      break;
    case 3:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
      {
        unint64_t v16 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          unint64_t v16 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = v16;
        unint64_t v10 = "[WARNING] %{public}s";
LABEL_28:
        int32_t v13 = a1;
        os_log_type_t v14 = OS_LOG_TYPE_INFO;
        goto LABEL_29;
      }
      break;
    case 4:
      if (os_log_type_enabled(a1, OS_LOG_TYPE_ERROR))
      {
        int v12 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v12 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = v12;
        unint64_t v10 = "[ERROR] %{public}s";
        int32_t v13 = a1;
        os_log_type_t v14 = OS_LOG_TYPE_ERROR;
LABEL_29:
        _os_log_impl(&dword_1D2C37000, v13, v14, v10, buf, 0xCu);
      }
      break;
    default:
      break;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C9A3E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::logToTopOfStackLogger(morphun::util *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (std::mutex *)morphun::util::CLASS_MUTEX(a1);
  std::mutex::lock(v6);
  uint64_t v8 = morphun::util::LOGGER_CACHE(v7);
  long long v9 = (void *)npc<std::vector<std::pair<void *,void (*)(void *,MLogLevel,char16_t const*,char16_t const*)>>>(v8);
  uint64_t v10 = v9[1];
  if (*v9 != v10) {
    (*(void (**)(void, morphun::util *, uint64_t, uint64_t))(v10 - 8))(*(void *)(v10 - 16), a1, a2, a3);
  }

  std::mutex::unlock(v6);
}

void sub_1D2C9A490(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void morphun::util::Logger::infoComponent(uint64_t a1, void *__src, std::basic_string<char16_t>::size_type a3)
{
  if (morphun::util::gLogLevel > 2) {
    return;
  }
  if (a3 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a3 >= 0xB)
  {
    uint64_t v7 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB) {
      uint64_t v7 = a3 | 3;
    }
    p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v7 + 1);
    __dst.__r_.__value_.__l.__size_ = a3;
    __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    goto LABEL_9;
  }
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = a3;
  p_dst = &__dst;
  if (a3) {
LABEL_9:
  }
    memmove(p_dst, __src, 2 * a3);
  p_dst->__r_.__value_.__s.__data_[a3] = 0;
  std::basic_string<char16_t>::append(&__dst, &word_1D2ED0D7C, 1uLL);
  std::basic_string<char16_t> v15 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  {
    operator new();
  }
  if (!morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  int v9 = *(char *)(morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_ + 23);
  if (v9 >= 0) {
    uint64_t v10 = (const std::basic_string<char16_t>::value_type *)morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_;
  }
  else {
    uint64_t v10 = *(const std::basic_string<char16_t>::value_type **)morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_;
  }
  if (v9 >= 0) {
    std::basic_string<char16_t>::size_type v11 = *(unsigned __int8 *)(morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_ + 23);
  }
  else {
    std::basic_string<char16_t>::size_type v11 = *(void *)(morphun::util::PLATFORM_STRING(void)::PLATFORM_STRING_ + 8);
  }
  std::basic_string<char16_t>::append(&v15, v10, v11);
  std::basic_string<char16_t> __p = v15;
  memset(&v15, 0, sizeof(v15));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  morphun::util::logToTopOfStackLogger((morphun::util *)2, a1, (uint64_t)p_p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C9A6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  MEMORY[0x1D942B8B0](v28, 0x1012C40EC159624);
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(a1);
}

void morphun::util::generatePlatformString(std::basic_string<char16_t> *this)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  memset(&v35, 0, sizeof(v35));
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFURLRef fileURL = CFURLCreateWithFileSystemPath((CFAllocatorRef)*MEMORY[0x1E4F1CF80], @"/System/Library/CoreServices/SystemVersion.plist", kCFURLPOSIXPathStyle, 0);
  if (fileURL)
  {
    v32.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)CFDictionaryCreateMutable(v2, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (v32.__r_.__value_.__r.__words[0])
    {
      int v3 = CFReadStreamCreateWithFile(v2, fileURL);
      stream.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v3;
      if (v3)
      {
        if (CFReadStreamOpen(v3))
        {
          theDict[0] = (CFDictionaryRef)CFPropertyListCreateWithStream(v2, (CFReadStreamRef)stream.__r_.__value_.__l.__data_, 0, 0, 0, 0);
          CFTypeID v4 = CFGetTypeID(theDict[0]);
          if (v4 == CFDictionaryGetTypeID())
          {
            CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict[0], @"ProductName");
            if (Value)
            {
              morphun::util::CFUtils::to_u16string((std::basic_string<char16_t> *)&__p, Value);
              uint64_t v6 = __p.sysname[23] >= 0
                 ? (const std::basic_string<char16_t>::value_type *)&__p
                 : *(const std::basic_string<char16_t>::value_type **)__p.sysname;
              std::basic_string<char16_t>::size_type v7 = __p.sysname[23] >= 0 ? __p.sysname[23] : *(void *)&__p.sysname[8];
              std::basic_string<char16_t>::append(&v35, v6, v7);
              if (__p.sysname[23] < 0) {
                operator delete(*(void **)__p.sysname);
              }
            }
            CFStringRef v8 = (const __CFString *)CFDictionaryGetValue(theDict[0], @"ProductVersion");
            if (v8)
            {
              morphun::util::CFUtils::to_u16string(&__dst, v8);
              std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)"-", (const std::basic_string<char16_t>::value_type *)1, v9);
              *(void *)&__p.sysname[16] = *((void *)&__dst.__r_.__value_.__l + 2);
              *(_OWORD *)__p.sysname = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
              memset(&__dst, 0, sizeof(__dst));
              int v10 = __p.sysname[23];
              std::basic_string<char16_t>::size_type v11 = *(void **)__p.sysname;
              if (__p.sysname[23] >= 0) {
                p_p = (const std::basic_string<char16_t>::value_type *)&__p;
              }
              else {
                p_p = *(const std::basic_string<char16_t>::value_type **)__p.sysname;
              }
              if (__p.sysname[23] >= 0) {
                std::basic_string<char16_t>::size_type v13 = HIBYTE(*(void *)&__p.sysname[16]);
              }
              else {
                std::basic_string<char16_t>::size_type v13 = *(void *)&__p.sysname[8];
              }
              std::basic_string<char16_t>::append(&v35, p_p, v13);
              if (v10 < 0) {
                operator delete(v11);
              }
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__dst.__r_.__value_.__l.__data_);
              }
            }
          }
          morphun::util::AutoCRelease<void const*,&(CFRelease)>::~AutoCRelease((const void **)theDict);
        }
        CFReadStreamClose((CFReadStreamRef)stream.__r_.__value_.__l.__data_);
      }
      morphun::util::AutoCRelease<__CFReadStream *,&(CFRelease)>::~AutoCRelease((const void **)&stream.__r_.__value_.__l.__data_);
    }
    morphun::util::AutoCRelease<__CFDictionary *,&(CFRelease)>::~AutoCRelease((const void **)&v32.__r_.__value_.__l.__data_);
  }
  if (!uname(&__p))
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(v35.__r_.__value_.__r.__words[2]);
    if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v35.__r_.__value_.__l.__size_;
    }
    if (!size)
    {
      int32_t v15 = strlen(__p.sysname);
      morphun::util::StringViewUtils::to_u16string(__p.sysname, v15, &v32);
      std::basic_string<char16_t>::append(&v32, (const std::basic_string<char16_t>::value_type *)"-", 1uLL);
      std::basic_string<char16_t> __dst = v32;
      memset(&v32, 0, sizeof(v32));
      int32_t v16 = strlen(__p.release);
      morphun::util::StringViewUtils::to_u16string(__p.release, v16, &stream);
      int v17 = SHIBYTE(stream.__r_.__value_.__r.__words[2]);
      unint64_t v18 = (void *)stream.__r_.__value_.__r.__words[0];
      if ((stream.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_streauint64_t m = &stream;
      }
      else {
        p_streauint64_t m = (std::basic_string<char16_t> *)stream.__r_.__value_.__r.__words[0];
      }
      if ((stream.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v20 = HIBYTE(stream.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v20 = stream.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)p_stream, v20);
      theDict[0] = (CFDictionaryRef)__dst.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::size_type v21 = __dst.__r_.__value_.__r.__words[0];
      *(CFDictionaryRef *)((char *)theDict + 7) = *(CFDictionaryRef *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7);
      char v22 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      memset(&__dst, 0, sizeof(__dst));
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v35.__r_.__value_.__l.__data_);
      }
      v35.__r_.__value_.__r.__words[0] = v21;
      v35.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)theDict[0];
      *(std::basic_string<char16_t>::size_type *)((char *)&v35.__r_.__value_.__r.__words[1] + 7) = *(std::basic_string<char16_t>::size_type *)((char *)theDict + 7);
      *((unsigned char *)&v35.__r_.__value_.__s + 23) = v22;
      if (v17 < 0) {
        operator delete(v18);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
    }
    int32_t v23 = strlen(__p.machine);
    morphun::util::StringViewUtils::to_u16string(__p.machine, v23, &v32);
    std::basic_string<char16_t>::insert(&v32, (std::basic_string<char16_t>::size_type)"-", (const std::basic_string<char16_t>::value_type *)1, v24);
    std::basic_string<char16_t> __dst = v32;
    memset(&v32, 0, sizeof(v32));
    int v25 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
    int v26 = (void *)__dst.__r_.__value_.__r.__words[0];
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v28 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v28 = __dst.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v35, (const std::basic_string<char16_t>::value_type *)p_dst, v28);
    if (v25 < 0) {
      operator delete(v26);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Platform=");
  if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v29 = &v35;
  }
  else {
    uint64_t v29 = (std::basic_string<char16_t> *)v35.__r_.__value_.__r.__words[0];
  }
  if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v30 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v30 = v35.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v29, v30);
  *this = __dst;
  morphun::util::AutoCRelease<__CFURL const*,&(CFRelease)>::~AutoCRelease((const void **)&fileURL);
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C9AB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,const void *a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,const void *a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (v40 < 0) {
    operator delete(v39);
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  morphun::util::AutoCRelease<void const*,&(CFRelease)>::~AutoCRelease(&a32);
  morphun::util::AutoCRelease<__CFReadStream *,&(CFRelease)>::~AutoCRelease((const void **)&a9);
  morphun::util::AutoCRelease<__CFDictionary *,&(CFRelease)>::~AutoCRelease((const void **)&a12);
  morphun::util::AutoCRelease<__CFURL const*,&(CFRelease)>::~AutoCRelease(&a25);
  if (a31 < 0) {
    operator delete(a26);
  }
  _Unwind_Resume(a1);
}

const void **morphun::util::AutoCRelease<void const*,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  CFAllocatorRef v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

const void **morphun::util::AutoCRelease<__CFReadStream *,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  CFAllocatorRef v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

const void **morphun::util::AutoCRelease<__CFDictionary *,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  CFAllocatorRef v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

const void **morphun::util::AutoCRelease<__CFURL const*,&(CFRelease)>::~AutoCRelease(const void **a1)
{
  CFAllocatorRef v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

uint64_t **com::apple::siri::tokenizer::data::config_uk::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[11];
  npc<morphun::dialog::SemanticFeature const>(v4);
  uint64_t v5 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v4);
  unsigned int Case = morphun::grammar::synthesis::DeGrammarSynthesizer::getCase(v5);
  uint64_t v7 = a1[12];
  npc<morphun::dialog::SemanticFeature const>(v7);
  CFStringRef v8 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v7);
  int Count = morphun::grammar::synthesis::DeGrammarSynthesizer::getCount(v8);
  uint64_t v10 = a1[13];
  npc<morphun::dialog::SemanticFeature const>(v10);
  std::basic_string<char16_t>::size_type v11 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v10);
  int Gender = morphun::grammar::synthesis::DeGrammarSynthesizer::getGender(v11);
  int v13 = Gender;
  uint64_t v49 = 0;
  if (Count) {
    BOOL v14 = Gender == 0;
  }
  else {
    BOOL v14 = 1;
  }
  if (v14)
  {
    uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    if (*(char *)(v15 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v15, *(void *)(v15 + 8));
    }
    else
    {
      long long v16 = *(_OWORD *)v15;
      __p.__r_.__value_.__r.__words[2] = *(void *)(v15 + 16);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v16;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[3], (uint64_t)&v49, (const UChar *)p_p, size))
    {
      uint64_t v19 = a1[17];
      if (!v19)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      uint64_t v20 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v19 + 24))(v19, &__p);
      if ((*(int (**)(uint64_t))(*(void *)v20 + 32))(v20) >= 2)
      {
        uint64_t v21 = a1[3];
        uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 56))(v20);
        uint64_t v23 = npc<morphun::Token>(v22);
        uint64_t v24 = npc<morphun::Token>(*(void *)(v23 + 72));
        int v27 = *(const UChar **)(v24 + 16);
        uint64_t v25 = v24 + 16;
        int v26 = v27;
        int v28 = *(char *)(v25 + 23);
        if (v28 >= 0) {
          uint64_t v29 = (const UChar *)v25;
        }
        else {
          uint64_t v29 = v26;
        }
        if (v28 >= 0) {
          uint64_t v30 = *(unsigned __int8 *)(v25 + 23);
        }
        else {
          uint64_t v30 = *(void *)(v25 + 8);
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v21, (uint64_t)&v49, v29, v30);
      }
      (*(void (**)(uint64_t))(*(void *)v20 + 16))(v20);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (!Count)
    {
      if (v49 && (a1[10] & v49) == a1[9]) {
        LOBYTE(Count) = 2;
      }
      else {
        LOBYTE(Count) = 1;
      }
    }
    if (!v13 && v49)
    {
      uint64_t v31 = a1[7] & v49;
      if (v31 == a1[4])
      {
        LOBYTE(v13) = 2;
      }
      else if (v31 == a1[5])
      {
        LOBYTE(v13) = 1;
      }
      else if (v31 == a1[6])
      {
        LOBYTE(v13) = 3;
      }
      else
      {
        LOBYTE(v13) = 0;
      }
    }
  }
  if (Case <= 1) {
    char v32 = 1;
  }
  else {
    char v32 = Case;
  }
  uint64_t v33 = a1[15];
  if (!v33) {
    goto LABEL_55;
  }
  int v34 = Count & 0xF | (16 * (v13 & 0xF)) | ((v32 & 0xF) << 8);
  std::basic_string<char16_t> v35 = a1 + 15;
  do
  {
    int v36 = *(_DWORD *)(v33 + 32);
    BOOL v37 = v36 < v34;
    if (v36 >= v34) {
      uint64_t v38 = (uint64_t *)v33;
    }
    else {
      uint64_t v38 = (uint64_t *)(v33 + 8);
    }
    if (!v37) {
      std::basic_string<char16_t> v35 = (uint64_t *)v33;
    }
    uint64_t v33 = *v38;
  }
  while (*v38);
  if (v35 == a1 + 15 || v34 < *((_DWORD *)v35 + 8))
  {
LABEL_55:
    memset(&__p, 0, sizeof(__p));
    uint64_t v39 = (*(uint64_t (**)(uint64_t *, uint64_t, std::basic_string<char16_t> *))(*a1 + 32))(a1, a2, &__p);
    goto LABEL_56;
  }
  std::basic_string<char16_t>::size_type v42 = v35[6];
  if (v42 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v43 = (const void *)v35[5];
  if (v42 >= 0xB)
  {
    uint64_t v45 = (v42 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v42 | 3) != 0xB) {
      uint64_t v45 = v42 | 3;
    }
    int v44 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v45 + 1);
    __p.__r_.__value_.__l.__size_ = v42;
    __p.__r_.__value_.__r.__words[2] = v46 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v44;
  }
  else
  {
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = v35[6];
    int v44 = &__p;
    if (!v42) {
      goto LABEL_67;
    }
  }
  memmove(v44, v43, 2 * v42);
LABEL_67:
  v44->__r_.__value_.__s.__data_[v42] = 0;
  uint64_t v39 = (*(uint64_t (**)(uint64_t *, uint64_t, std::basic_string<char16_t> *))(*a1 + 32))(a1, a2, &__p);
LABEL_56:
  uint64_t v40 = v39;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v40;
}

void sub_1D2C9B228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D2C9B2E0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2C9B344(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::~DeGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction *this)
{
  morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::~DeGrammarSynthesizer_ArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &off_1F2A0D120;
  CFAllocatorRef v2 = *((void *)this + 17);
  *((void *)this + 17) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 15));
}

uint64_t morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(uint64_t result)
{
  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &__dst);
  }
  return result;
}

void sub_1D2C9B48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_ArticleLookupFunction::DeGrammarSynthesizer_ArticleLookupFunction(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1F29FAB00;
  uint64_t v7 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A06378, a2, a3, 1);
  *(void *)a1 = &off_1F2A0D120;
  CFStringRef v8 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::GERMAN(v7);
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v8, v9);
  if (Dictionary)
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(void *)(a1 + 24) = Dictionary;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(void *)(a1 + 80) = 0;
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "c");
    uint64_t v11 = a2 + 8;
    uint64_t v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)__p);
    uint64_t v13 = a2 + 16;
    if (a2 + 16 == v12) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = *(void *)(v12 + 56);
    }
    morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(v14);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    *(void *)(a1 + 88) = v14;
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"count");
    uint64_t v15 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, (unsigned __int16 *)__p);
    if (v13 == v15) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = *(void *)(v15 + 56);
    }
    morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(v16);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    *(void *)(a1 + 96) = v16;
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"gender");
    uint64_t v17 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, (unsigned __int16 *)__p);
    if (v13 == v17) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = *(void *)(v17 + 56);
    }
    morphun::util::Validate::notNull<morphun::dialog::SemanticFeature const>(v18);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    *(void *)(a1 + 104) = v18;
    uint64_t v19 = std::map<int,std::u16string_view>::map[abi:ne180100]((uint64_t *)(a1 + 112), a4);
    uint64_t v20 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::GERMAN((morphun::util::LocaleUtils *)v19);
    morphun::TokenizerFactory::createTokenizer(v20, v21);
  }
  exception = __cxa_allocate_exception(0x38uLL);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "I");
  morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, (long long *)__p);
}

void sub_1D2C9BA6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0)
  {
    operator delete(__p);
    if ((v25 & 1) == 0)
    {
LABEL_6:
      std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v23 + 120));
      _Unwind_Resume(a1);
    }
  }
  else if (!v25)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v24);
  goto LABEL_6;
}

void morphun::tokenizer::locale::de::DeTokenizer::createTokenExtractor()
{
}

void sub_1D2C9BC94(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40049B2901);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::CaCommonConceptFactory::~CaCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05628);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05628);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::heuristicDeclensionInflection(morphun::dictionary::PhraseProperties *a1@<X0>, const std::basic_string<char16_t>::value_type *a2@<X1>, uint64_t a3@<X8>)
{
  long long v3 = (std::basic_string<char16_t> *)a2;
  std::basic_string<char16_t>::size_type v5 = *((unsigned __int8 *)a2 + 23);
  if (*((char *)a2 + 23) < 0)
  {
    a2 = *(const std::basic_string<char16_t>::value_type **)a2;
    std::basic_string<char16_t>::size_type size = v3->__r_.__value_.__l.__size_;
    if (size < 2)
    {
LABEL_74:
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a3, a2, size);
      return;
    }
  }
  else
  {
    if (v5 <= 1)
    {
LABEL_21:
      *(_OWORD *)a3 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::basic_string<char16_t>::size_type v14 = v3->__r_.__value_.__r.__words[2];
LABEL_22:
      *(void *)(a3 + 16) = v14;
      return;
    }
    std::basic_string<char16_t>::size_type size = *((unsigned __int8 *)a2 + 23);
  }
  uint64_t v7 = 0;
  std::basic_string<char16_t>::size_type v8 = size - 2;
  do
  {
    int v9 = (unsigned __int16)a2[size - 2 + v7];
    int v10 = (unsigned __int16)aEn_0[v7];
  }
  while (v10 == v9 && v7++ != 1);
  if (v10 == v9
    || ((v5 & 0x80u) == 0 ? (std::basic_string<char16_t>::size_type v12 = v5) : (std::basic_string<char16_t>::size_type v12 = v3->__r_.__value_.__l.__size_),
        v12
     && ((v5 & 0x80u) == 0 ? (uint64_t v13 = v3) : (uint64_t v13 = (std::basic_string<char16_t> *)v3->__r_.__value_.__r.__words[0]),
         v13->__r_.__value_.__s.__data_[v12 - 1] == 101)))
  {
    if ((v5 & 0x80) == 0) {
      goto LABEL_21;
    }
    a2 = (const std::basic_string<char16_t>::value_type *)v3->__r_.__value_.__r.__words[0];
    std::basic_string<char16_t>::size_type size = v3->__r_.__value_.__l.__size_;
    goto LABEL_74;
  }
  if (size < 3) {
    goto LABEL_61;
  }
  std::basic_string<char16_t>::size_type v15 = size - 1;
  if ((v5 & 0x80u) == 0) {
    uint64_t v16 = v3;
  }
  else {
    uint64_t v16 = (std::basic_string<char16_t> *)v3->__r_.__value_.__r.__words[0];
  }
  uint64_t v17 = (unsigned __int16)v16->__r_.__value_.__s.__data_[v15];
  uint64_t v18 = (unsigned __int16)v16->__r_.__value_.__s.__data_[v8];
  uint64_t v19 = (unsigned __int16)v16->__r_.__value_.__s.__data_[size - 3];
  uint64_t v20 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(a1);
  uint64_t v21 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D942C150](*v20, v19);
  BOOL v22 = v19 != v18 || v21 == 0;
  if (v22
    && (v19 != 105 || v18 != 106)
    && (v19 != 101 || v18 != 105)
    && (v19 != 105 || v18 != 101)
    && (v19 != 111 || v18 != 101)
    && (v19 != 97 ? (BOOL v23 = v19 == 111) : (BOOL v23 = 1), !v23 || v18 != 117)
    || (char v24 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v21),
        uint64_t v21 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D942C150](*v24, v17),
        v21))
  {
    int v26 = SHIBYTE(v3->__r_.__value_.__r.__words[2]);
    unint64_t v27 = v3->__r_.__value_.__l.__size_;
    if (v26 >= 0) {
      unint64_t v27 = HIBYTE(v3->__r_.__value_.__r.__words[2]);
    }
    if (v27 < 2) {
      goto LABEL_89;
    }
    uint64_t v28 = 0;
    uint64_t v29 = v26 >= 0 ? (uint64_t)v3 : v3->__r_.__value_.__r.__words[0];
    uint64_t v30 = v29 + 2 * v27 - 4;
    do
    {
      int v31 = *(unsigned __int16 *)(v30 + v28);
      int v32 = *(unsigned __int16 *)&aI_15[v28];
      BOOL v33 = v32 != v31 || v28 == 2;
      v28 += 2;
    }
    while (!v33);
    if (v32 != v31)
    {
LABEL_89:
      int v34 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v21);
      std::basic_string<char16_t> v35 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D942C150](*v34, v19);
      if (!v35)
      {
        uint64_t v38 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v35);
        uint64_t v39 = (morphun::dictionary::PhraseProperties *)MEMORY[0x1D942C150](*v38, v18);
        if (v39)
        {
          uint64_t v40 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v39);
          if (!MEMORY[0x1D942C150](*v40, v17))
          {
            std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v42, (const void **)&v3->__r_.__value_.__l.__data_, v17);
            std::basic_string<char16_t>::push_back(&v42, 101);
            *(_OWORD *)a3 = *(_OWORD *)&v42.__r_.__value_.__l.__data_;
            std::basic_string<char16_t>::size_type v14 = v42.__r_.__value_.__r.__words[2];
            goto LABEL_22;
          }
        }
      }
    }
LABEL_61:
    if ((v3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v36 = HIBYTE(v3->__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v36 = v3->__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100](a3, v36 + 1);
    if (*(char *)(a3 + 23) < 0) {
      a3 = *(void *)a3;
    }
    if (v36)
    {
      if ((v3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        BOOL v37 = v3;
      }
      else {
        BOOL v37 = (std::basic_string<char16_t> *)v3->__r_.__value_.__r.__words[0];
      }
      memmove((void *)a3, v37, 2 * v36);
    }
    *(_DWORD *)(a3 + 2 * v36) = 101;
    return;
  }
  if (v17 == 115) {
    LOWORD(v17) = 122;
  }
  if (v19 == v18) {
    std::basic_string<char16_t>::basic_string(&v41, v3, 0, v8, v25);
  }
  else {
    std::basic_string<char16_t>::basic_string(&v41, v3, 0, v15, v25);
  }
  std::basic_string<char16_t>::push_back(&v41, v17);
  std::basic_string<char16_t> v42 = v41;
  memset(&v41, 0, sizeof(v41));
  std::basic_string<char16_t>::push_back(&v42, 101);
  *(std::basic_string<char16_t> *)a3 = v42;
  memset(&v42, 0, sizeof(v42));
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
}

void sub_1D2C9C0C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::inflectWithDeclension(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, std::basic_string<char16_t> *a4@<X8>)
{
  if (a3 == 2)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a4, *(const std::basic_string<char16_t>::value_type **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      a4->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
    }
  }
  else if (a3 == 1)
  {
    (*(void (**)(void))(*(void *)a1 + 88))();
  }
  else
  {
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
  }
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::inflect(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if ((*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1))
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[1]);
    uint64_t Declension = morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension((unsigned __int16 *)&__p);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*a1 + 80))(a1, a2, Declension);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
}

void sub_1D2C9C248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::isSupported(uint64_t a1, const void **a2, uint64_t a3)
{
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1))
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 56);
    return v6(a1, a3);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"not a adjective or not in dictionary");
    morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)__p);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    return 0;
  }
}

void sub_1D2C9C340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern *this)
{
}

uint64_t morphun::dialog::SemanticConcept::toSpeakableStringDefault(morphun::dialog::SemanticConcept *this, int a2)
{
  memset(&v12, 0, sizeof(v12));
  uint64_t v11 = 0;
  CurrentCFStringRef Value = morphun::dialog::SemanticConcept::getCurrentValue((uint64_t)this, &v11);
  uint64_t v5 = CurrentValue;
  if (CurrentValue)
  {
    uint64_t v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)CurrentValue + 24))(CurrentValue);
    std::basic_string<char16_t>::operator=(&v12, v6);
    std::basic_string<char16_t>::size_type size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v12.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      if (!(*(uint64_t (**)(morphun::dialog::SemanticConcept *))(*(void *)this + 120))(this))
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      if ((*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5)) {
        operator new();
      }
      goto LABEL_12;
    }
  }
  else if (a2)
  {
    std::basic_string<char16_t>::operator=(&v12, (const std::basic_string<char16_t> *)((char *)this + *(void *)(*((void *)this + 5) - 40) + 64));
    std::basic_string<char16_t>::size_type v8 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v8 = v12.__r_.__value_.__l.__size_;
    }
    if (v8) {
LABEL_12:
    }
      operator new();
  }
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 16))(v11);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1D2C9C5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  if (a9) {
    (*(void (**)(uint64_t))(*(void *)a9 + 16))(a9);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConcept::getCurrentValue(uint64_t a1, uint64_t *a2)
{
  FirstPossibleCFStringRef Value = morphun::dialog::SemanticConcept::getFirstPossibleValue(a1, a2);
  if (!FirstPossibleValue) {
    goto LABEL_8;
  }
  uint64_t v4 = FirstPossibleValue;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)FirstPossibleValue + 24))(FirstPossibleValue);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  if (!v6)
  {
    if (!*(unsigned char *)(a1 + 160)) {
      return 0;
    }
LABEL_8:
    uint64_t v7 = *(unsigned __int8 *)(a1 + 127);
    if ((v7 & 0x80u) != 0) {
      uint64_t v7 = *(void *)(a1 + 112);
    }
    if (v7) {
      return a1 + 96;
    }
    else {
      return 0;
    }
  }
  return v4;
}

uint64_t morphun::dialog::SemanticConcept::getFirstPossibleValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a1 + 152);
  if (v4)
  {
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t v6 = *(void *)(v4 + 16);
    if (v5 != v6)
    {
      uint64_t v7 = (void *)(a1 + 24);
      do
      {
        uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5);
        std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&p_size, v8);
        char v9 = *(void **)(a1 + 16);
        if (v9 == v7)
        {
          std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v33.__r_.__value_.__l.__data_);
          return v5;
        }
        char v10 = 1;
        do
        {
          uint64_t v11 = (std::basic_string<char16_t> *)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)&p_size, (uint64_t)(v9 + 4));
          if (&v33 != v11)
          {
            std::basic_string<char16_t>::size_type v12 = HIBYTE(v11[5].__r_.__value_.__r.__words[0]);
            int v13 = (char)v12;
            if ((v12 & 0x80u) != 0) {
              std::basic_string<char16_t>::size_type v12 = v11[4].__r_.__value_.__r.__words[2];
            }
            uint64_t v14 = *((unsigned __int8 *)v9 + 127);
            int v15 = (char)v14;
            if ((v14 & 0x80u) != 0) {
              uint64_t v14 = v9[14];
            }
            if (v12 == v14)
            {
              if (!v12) {
                goto LABEL_23;
              }
              if (v15 >= 0) {
                uint64_t v16 = (unsigned __int16 *)(v9 + 13);
              }
              else {
                uint64_t v16 = (unsigned __int16 *)v9[13];
              }
              if (v13 >= 0) {
                std::basic_string<char16_t>::size_type size = &v11[4].__r_.__value_.__s.__data_[4];
              }
              else {
                std::basic_string<char16_t>::size_type size = (std::basic_string<char16_t>::value_type *)v11[4].__r_.__value_.__l.__size_;
              }
              while (*v16 == (unsigned __int16)*size)
              {
                ++size;
                ++v16;
                if (!--v12) {
                  goto LABEL_23;
                }
              }
            }
          }
          char v10 = 0;
LABEL_23:
          uint64_t v18 = (void *)v9[1];
          if (v18)
          {
            do
            {
              uint64_t v19 = v18;
              uint64_t v18 = (void *)*v18;
            }
            while (v18);
          }
          else
          {
            do
            {
              uint64_t v19 = (void *)v9[2];
              BOOL v20 = *v19 == (void)v9;
              char v9 = v19;
            }
            while (!v20);
          }
          char v9 = v19;
        }
        while (v19 != v7);
        std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v33.__r_.__value_.__l.__data_);
        if (v10) {
          return v5;
        }
        v5 += 56;
      }
      while (v5 != v6);
    }
  }
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  uint64_t v22 = npc<morphun::dialog::SemanticFeatureModel const>(v21);
  uint64_t v5 = *(void *)(v22 + 232);
  if (v5)
  {
    uint64_t v23 = *(void *)(a1 + 152);
    if (v23)
    {
      uint64_t v5 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)v5 + 24))(*(void *)(v22 + 232), v23, a1 + 16, 1);
      if (!v5) {
        return v5;
      }
      goto LABEL_41;
    }
    if (!*(unsigned char *)(a1 + 160))
    {
      exception = __cxa_allocate_exception(0x38uLL);
      morphun::dialog::SemanticValue::toString((morphun::dialog::SemanticValue *)(a1 + 40), &v28);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v29, L"Display data is missing for \"", &v28, v27);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&p_size, &v29, (std::basic_string<char16_t>::value_type *)"\"");
      morphun::exception::IllegalStateException::IllegalStateException((uint64_t)exception, (long long *)&p_size);
    }
    p_std::basic_string<char16_t>::size_type size = (std::basic_string<char16_t>::size_type *)&off_1F2A09998;
    if (*(char *)(a1 + 127) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v33, *(const std::basic_string<char16_t>::value_type **)(a1 + 104), *(void *)(a1 + 112));
    }
    else {
      std::basic_string<char16_t> v33 = *(std::basic_string<char16_t> *)(a1 + 104);
    }
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](v34, a1 + 128);
    memset(&v28, 0, sizeof(v28));
    uint64_t v30 = &v28;
    char v31 = 0;
    v28.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x38uLL);
    v28.__r_.__value_.__l.__size_ = v28.__r_.__value_.__r.__words[0];
    v28.__r_.__value_.__r.__words[2] = v28.__r_.__value_.__r.__words[0] + 56;
    v28.__r_.__value_.__l.__size_ = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue*>((uint64_t)&p_size, (uint64_t)&v35, (uint64_t)v28.__r_.__value_.__l.__data_);
    morphun::dialog::SemanticFeatureModel_DisplayData::SemanticFeatureModel_DisplayData(&v29, (uint64_t *)&v28);
    uint64_t v30 = &v28;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&v30);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *, uint64_t, uint64_t))(*(void *)v5 + 24))(v5, &v29, a1 + 16, 1);
    v29.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A09958;
    p_std::basic_string<char16_t>::size_type size = &v29.__r_.__value_.__l.__size_;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_size);
    if (v5)
    {
LABEL_41:
      uint64_t v24 = *a2;
      *a2 = v5;
      if (v24) {
        (*(void (**)(uint64_t))(*(void *)v24 + 16))(v24);
      }
    }
  }
  return v5;
}

void sub_1D2C9CADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,void *a26,int a27,__int16 a28,char a29,char a30,int a31,__int16 a32,char a33,char a34)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v34 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v34)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v35);
  goto LABEL_10;
}

uint64_t npc<morphun::dialog::SemanticFeatureModel const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2C9CC38(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = 0;
    do
    {
      std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(a3 + v6, a1 + v6);
      v6 += 56;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

void *std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1F2A09998;
  if (*(char *)(a2 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  return std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)(a1 + 32), a2 + 32);
}

void sub_1D2C9CD84(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 31) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::SemanticConcept::getSemanticValue(morphun::dialog::SemanticConcept *this)
{
  return (uint64_t)this + *(void *)(*((void *)this + 5) - 40) + 64;
}

void morphun::dialog::SemanticConcept::clone(morphun::dialog::SemanticConcept *this)
{
}

void sub_1D2C9CE08(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40C09A0546);
  _Unwind_Resume(a1);
}

morphun::dialog::SemanticConcept *morphun::dialog::SemanticConcept::SemanticConcept(morphun::dialog::SemanticConcept *this, const morphun::dialog::SemanticConcept *a2)
{
  *(void *)this = &unk_1F29F47C0;
  long long v4 = (std::basic_string<char16_t> *)morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureConceptBase *)&off_1F2A05270, (uint64_t)a2);
  v4->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A08EF0;
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100](v4 + 2, (long long *)((char *)a2 + *(void *)(*((void *)a2 + 5) - 40) + 40));
  *((void *)this + 5) = &off_1F2A08DB8;
  *((void *)this + 12) = &off_1F2A09998;
  if (*((char *)a2 + 127) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 104), *((const std::basic_string<char16_t>::value_type **)a2 + 13), *((void *)a2 + 14));
  }
  else
  {
    long long v5 = *(_OWORD *)((char *)a2 + 104);
    *((void *)this + 15) = *((void *)a2 + 15);
    *(_OWORD *)((char *)this + 104) = v5;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)this + 16, (uint64_t)a2 + 128);
  *((void *)this + 19) = *((void *)a2 + 19);
  *((unsigned char *)this + 160) = *((unsigned char *)a2 + 160);
  return this;
}

void sub_1D2C9CF50(_Unwind_Exception *a1)
{
  morphun::dialog::SemanticValue::~SemanticValue(v2);
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, (void ***)&off_1F2A05270);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConcept::getFeatureValue(morphun::dialog::SemanticConcept *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t v12 = 0;
  CurrentCFStringRef Value = morphun::dialog::SemanticConcept::getCurrentValue((uint64_t)this, &v12);
  uint64_t v5 = CurrentValue;
  if (CurrentValue)
  {
    if ((*(uint64_t (**)(uint64_t, const morphun::dialog::SemanticFeature *))(*(void *)CurrentValue + 32))(CurrentValue, a2))
    {
      operator new();
    }
    uint64_t v6 = (*(uint64_t (**)(morphun::dialog::SemanticConcept *))(*(void *)this + 40))(this);
    uint64_t v7 = (morphun::dialog::SemanticFeatureModel *)npc<morphun::dialog::SemanticFeatureModel const>(v6);
    uint64_t DefaultFeatureFunction = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(v7, a2);
    if (DefaultFeatureFunction)
    {
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(*(void *)DefaultFeatureFunction + 24))(DefaultFeatureFunction, v5, (char *)this + 16);
      goto LABEL_10;
    }
    FirstPossibleCFStringRef Value = morphun::dialog::SemanticConcept::getFirstPossibleValue((uint64_t)this, &v12);
    if (FirstPossibleValue
      && (*(uint64_t (**)(uint64_t, const morphun::dialog::SemanticFeature *))(*(void *)FirstPossibleValue
                                                                                      + 32))(FirstPossibleValue, a2))
    {
      operator new();
    }
  }
  uint64_t v9 = 0;
LABEL_10:
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 16))(v12);
  }
  return v9;
}

void sub_1D2C9D140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  MEMORY[0x1D942B8B0](v10, 0x10B3C40F7FF9C27);
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 16))(a10);
  }
  _Unwind_Resume(a1);
}

BOOL morphun::dialog::SemanticConcept::isExists(morphun::dialog::SemanticConcept *this)
{
  uint64_t v3 = 0;
  CurrentCFStringRef Value = morphun::dialog::SemanticConcept::getCurrentValue((uint64_t)this, &v3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  return CurrentValue != 0;
}

void sub_1D2C9D214(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 16))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::SemanticConcept::toSpeakableString(morphun::dialog::SemanticConcept *this)
{
  return (*(uint64_t (**)(morphun::dialog::SemanticConcept *, void))(*(void *)this + 144))(this, *((unsigned __int8 *)this + 160));
}

void morphun::dialog::SemanticConcept::~SemanticConcept(void **this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::SemanticConcept::~SemanticConcept(void **this, uint64_t a2)
{
  long long v4 = *(void **)a2;
  *this = *(void **)a2;
  *(void **)((char *)this + *(v4 - 9)) = *(void **)(a2 + 40);
  *(void **)((char *)this + *((void *)*this - 7)) = *(void **)(a2 + 48);
  *(void **)((char *)this + *((void *)*this - 5)) = *(void **)(a2 + 56);
  morphun::dialog::SemanticValue::~SemanticValue(this + 5);

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)this, (void ***)(a2 + 8));
}

void *morphun::dialog::SemanticConcept::toString@<X0>(morphun::dialog::SemanticConcept *this@<X0>, void *a2@<X8>)
{
  return morphun::dialog::SemanticConcept::toString(this, a2);
}

{
  void (***v3)(void);
  void (***v4)(void);
  void (*v5)(void);
  uint64_t vars8;

  uint64_t v3 = (void (***)(void))(*(uint64_t (**)(morphun::dialog::SemanticConcept *))(*(void *)this + 144))(this);
  if (v3)
  {
    long long v4 = v3;
    (**v3)(v3);
    uint64_t v5 = (*v4)[2];
    return (void *)((uint64_t (*)(void))v5)(v4);
  }
  else
  {
    return std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "n");
  }
}

void sub_1D2C9D508(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::dialog::SemanticConcept::SemanticConcept(std::basic_string<char16_t> *this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SemanticValue *a3, void *a4, char a5)
{
  void (***v15)(std::basic_string<char16_t> *__return_ptr, void);
  void *v16;
  std::basic_string<char16_t>::size_type v17;
  std::basic_string<char16_t> v18;
  std::basic_string<char16_t> v19;
  long long v20;

  uint64_t v10 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureModel *)((char *)a2 + 8), (uint64_t)a3);
  uint64_t v11 = *(void *)a2;
  *uint64_t v10 = *(void *)a2;
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words + *(void *)(v11 - 72)) = *((void *)a2 + 5);
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words
                                            + *(void *)(this->__r_.__value_.__r.__words[0] - 56)) = *((void *)a2 + 6);
  *(std::basic_string<char16_t>::size_type *)((char *)this->__r_.__value_.__r.__words
                                            + *(void *)(this->__r_.__value_.__r.__words[0] - 40)) = *((void *)a2 + 7);
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100](this + 2, (long long *)((char *)a4 + *(void *)(*a4 - 40)));
  this[1].__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&off_1F2A08DB8;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)&this[4], (long long *)((char *)a4 + *(void *)(*a4 - 40) + 24));
  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a3);
  DisplayData = morphun::dialog::SemanticFeatureModel::getDisplayData((uint64_t)a3, a4);
  this[6].__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)DisplayData;
  LOBYTE(this[6].__r_.__value_.__r.__words[2]) = a5;
  if ((a5 & 1) == 0 && (!DisplayData || DisplayData[1] == DisplayData[2]))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    int v15 = (void (***)(std::basic_string<char16_t> *__return_ptr, void))a4;
    uint64_t v16 = exception;
    (**v15)(&v18, v15);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v19, L"Display data is missing for semantic value \"", &v18, v17);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v20, &v19, (std::basic_string<char16_t>::value_type *)"\"");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v16, &v20);
  }
  return this;
}

void sub_1D2C9D7EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v32 & 1) == 0)
    {
LABEL_10:
      morphun::dialog::SemanticValue::~SemanticValue(v29);
      morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v27, v28);
      _Unwind_Resume(a1);
    }
  }
  else if (!v32)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v31);
  goto LABEL_10;
}

morphun::dialog::SemanticConcept *morphun::dialog::SemanticConcept::SemanticConcept(morphun::dialog::SemanticConcept *this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SemanticValue *a3, char a4)
{
  *(void *)this = &unk_1F29F47C0;
  uint64_t v8 = (std::basic_string<char16_t> *)morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A05270, (uint64_t)a2);
  v8->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A08EF0;
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100](v8 + 2, (long long *)((char *)a3 + *(void *)(*(void *)a3 - 40)));
  *((void *)this + 5) = &off_1F2A08DB8;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)this + 96, (long long *)((char *)a3 + *(void *)(*(void *)a3 - 40) + 24));
  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a2);
  DisplayData = morphun::dialog::SemanticFeatureModel::getDisplayData((uint64_t)a2, a3);
  *((void *)this + 19) = DisplayData;
  *((unsigned char *)this + 160) = a4;
  if ((a4 & 1) == 0 && (!DisplayData || DisplayData[1] == DisplayData[2]))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    (**(void (***)(std::basic_string<char16_t> *__return_ptr, const morphun::dialog::SemanticValue *))a3)(&v13, a3);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, L"Display data is missing for semantic value \"", &v13, v12);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v15, &v14, (std::basic_string<char16_t>::value_type *)"\"");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v15);
  }
  return this;
}

void sub_1D2C9DA60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v31 & 1) == 0)
    {
LABEL_10:
      morphun::dialog::SemanticValue::~SemanticValue(v28);
      morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v27, (void ***)&off_1F2A05270);
      _Unwind_Resume(a1);
    }
  }
  else if (!v31)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v30);
  goto LABEL_10;
}

morphun::dialog::SemanticConcept *morphun::dialog::SemanticConcept::SemanticConcept(morphun::dialog::SemanticConcept *this, const morphun::dialog::SemanticConcept *a2, uint64_t a3)
{
  uint64_t v6 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticConcept *)((char *)a2 + 8), a3);
  uint64_t v7 = *(void *)a2;
  *(void *)uint64_t v6 = *(void *)a2;
  *(void *)((char *)this + *(void *)(v7 - 72)) = *((void *)a2 + 5);
  *(void *)((char *)this + *(void *)(*(void *)this - 56)) = *((void *)a2 + 6);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 7);
  std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)this + 2, (long long *)(a3 + 40 + *(void *)(*(void *)(a3 + 40) - 40)));
  *((void *)this + 5) = &off_1F2A08DB8;
  *((void *)this + 12) = &off_1F2A09998;
  if (*(char *)(a3 + 127) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 104), *(const std::basic_string<char16_t>::value_type **)(a3 + 104), *(void *)(a3 + 112));
  }
  else
  {
    long long v8 = *(_OWORD *)(a3 + 104);
    *((void *)this + 15) = *(void *)(a3 + 120);
    *(_OWORD *)((char *)this + 104) = v8;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)this + 16, a3 + 128);
  *((void *)this + 19) = *(void *)(a3 + 152);
  *((unsigned char *)this + 160) = *(unsigned char *)(a3 + 160);
  return this;
}

void sub_1D2C9DD30(_Unwind_Exception *a1)
{
  morphun::dialog::SemanticValue::~SemanticValue(v3);
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, v2);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::SemanticConcept::~SemanticConcept(morphun::dialog::SemanticConcept *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::SemanticConcept::~SemanticConcept(void *a1)
{
}

{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

BOOL virtual thunk to'morphun::dialog::SemanticConcept::isExists(morphun::dialog::SemanticConcept *this)
{
  return morphun::dialog::SemanticConcept::isExists((morphun::dialog::SemanticConcept *)((char *)this
                                                                                       + *(void *)(*(void *)this - 64)));
}

uint64_t virtual thunk to'morphun::dialog::SemanticConcept::toSpeakableString(morphun::dialog::SemanticConcept *this)
{
  return (*(uint64_t (**)(char *, void))(*(void *)((char *)this + *(void *)(*(void *)this - 48))
                                                   + 144))((char *)this + *(void *)(*(void *)this - 48), *((unsigned __int8 *)this + *(void *)(*(void *)this - 48) + 160));
}

void *virtual thunk to'morphun::dialog::SemanticConcept::toString@<X0>(morphun::dialog::SemanticConcept *this@<X0>, void *a2@<X8>)
{
  return morphun::dialog::SemanticConcept::toString((morphun::dialog::SemanticConcept *)((char *)this + *(void *)(*(void *)this - 24)), a2);
}

BOOL morphun::dialog::SemanticConcept::operator==(uint64_t a1, uint64_t a2)
{
  if (a2 == a1) {
    return 1;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  if (v4 != (*(uint64_t (**)(uint64_t))(*(void *)a2 + 40))(a2)) {
    return 0;
  }
  uint64_t v5 = a1 + 40 + *(void *)(*(void *)(a1 + 40) - 40);
  uint64_t v6 = a2 + 40 + *(void *)(*(void *)(a2 + 40) - 40);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 23);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(v5 + 8);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 23);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *(void *)(v6 + 8);
  }
  if (v7 != v9) {
    return 0;
  }
  if (v7)
  {
    if (v10 >= 0) {
      uint64_t v11 = (unsigned __int16 *)(a2 + 40 + *(void *)(*(void *)(a2 + 40) - 40));
    }
    else {
      uint64_t v11 = *(unsigned __int16 **)v6;
    }
    if (v8 >= 0) {
      std::basic_string<char16_t>::size_type v12 = (unsigned __int16 *)(a1 + 40 + *(void *)(*(void *)(a1 + 40) - 40));
    }
    else {
      std::basic_string<char16_t>::size_type v12 = *(unsigned __int16 **)v5;
    }
    while (*v11 == *v12)
    {
      ++v12;
      ++v11;
      if (!--v7) {
        goto LABEL_17;
      }
    }
    return 0;
  }
LABEL_17:
  uint64_t v13 = *(unsigned __int8 *)(v5 + 47);
  int v14 = (char)v13;
  if ((v13 & 0x80u) != 0) {
    uint64_t v13 = *(void *)(v5 + 32);
  }
  uint64_t v15 = *(unsigned __int8 *)(v6 + 47);
  int v16 = (char)v15;
  if ((v15 & 0x80u) != 0) {
    uint64_t v15 = *(void *)(v6 + 32);
  }
  if (v13 != v15) {
    return 0;
  }
  if (v13)
  {
    uint64_t v17 = (unsigned __int16 **)(v5 + 24);
    uint64_t v18 = (unsigned __int16 *)(v6 + 24);
    uint64_t v19 = *(unsigned __int16 **)(v6 + 24);
    if (v16 < 0) {
      uint64_t v18 = v19;
    }
    BOOL v20 = *v17;
    if (v14 >= 0) {
      BOOL v20 = (unsigned __int16 *)v17;
    }
    while (*v18 == *v20)
    {
      ++v20;
      ++v18;
      if (!--v13) {
        goto LABEL_29;
      }
    }
    return 0;
  }
LABEL_29:
  if (*(unsigned __int8 *)(a1 + 160) != *(unsigned __int8 *)(a2 + 160)) {
    return 0;
  }
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120))(a1);
  if (v21 != (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2)
    || *(void *)(a1 + 32) != *(void *)(a2 + 32))
  {
    return 0;
  }
  uint64_t v22 = *(void **)(a1 + 16);
  uint64_t v23 = (void *)(a1 + 24);
  if (v22 == v23) {
    return 1;
  }
  uint64_t v24 = *(void **)(a2 + 16);
  do
  {
    BOOL result = std::__equal_to::operator()[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>((uint64_t)(v22 + 4), (uint64_t)(v24 + 4));
    if (!result) {
      break;
    }
    int v26 = (void *)v22[1];
    std::basic_string<char16_t>::size_type v27 = v22;
    if (v26)
    {
      do
      {
        uint64_t v22 = v26;
        int v26 = (void *)*v26;
      }
      while (v26);
    }
    else
    {
      do
      {
        uint64_t v22 = (void *)v27[2];
        BOOL v28 = *v22 == (void)v27;
        std::basic_string<char16_t>::size_type v27 = v22;
      }
      while (!v28);
    }
    std::basic_string<char16_t> v29 = (void *)v24[1];
    if (v29)
    {
      do
      {
        uint64_t v30 = v29;
        std::basic_string<char16_t> v29 = (void *)*v29;
      }
      while (v29);
    }
    else
    {
      do
      {
        uint64_t v30 = (void *)v24[2];
        BOOL v28 = *v30 == (void)v24;
        uint64_t v24 = v30;
      }
      while (!v28);
    }
    uint64_t v24 = v30;
  }
  while (v22 != v23);
  return result;
}

BOOL std::__equal_to::operator()[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>(uint64_t a1, uint64_t a2)
{
  BOOL result = morphun::dialog::SemanticFeature::operator==(a1, a2);
  if (result)
  {
    int v5 = *(char *)(a1 + 95);
    uint64_t v6 = *(void *)(a1 + 80);
    if (v5 >= 0) {
      uint64_t v6 = *(unsigned __int8 *)(a1 + 95);
    }
    uint64_t v7 = *(unsigned __int8 *)(a2 + 95);
    int v8 = (char)v7;
    if ((v7 & 0x80u) != 0) {
      uint64_t v7 = *(void *)(a2 + 80);
    }
    if (v6 == v7)
    {
      if (v6)
      {
        if (v8 >= 0) {
          uint64_t v9 = (unsigned __int16 *)(a2 + 72);
        }
        else {
          uint64_t v9 = *(unsigned __int16 **)(a2 + 72);
        }
        if (v5 >= 0) {
          int v10 = (unsigned __int16 *)(a1 + 72);
        }
        else {
          int v10 = *(unsigned __int16 **)(a1 + 72);
        }
        uint64_t v11 = v6 - 1;
        do
        {
          int v13 = *v10++;
          int v12 = v13;
          int v15 = *v9++;
          int v14 = v15;
          BOOL v17 = v11-- != 0;
          BOOL result = v14 == v12;
        }
        while (v14 == v12 && v17);
      }
      else
      {
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL morphun::dialog::SemanticConcept::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::dialog::SemanticConcept::operator==(a1, a2);
}

void morphun::grammar::synthesis::BgGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::BgGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2C9E658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **com::apple::siri::tokenizer::data::config_wuu::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696DF48;
  uint64_t v4 = L"zh_Hans";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t non-virtual thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::setKeyword(uint64_t this, char a2)
{
  *(unsigned char *)(this + 8) = a2;
  return this;
}

uint64_t non-virtual thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::isKeyword(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  return *((unsigned __int8 *)this + 8);
}

void non-virtual thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::~KeywordAttributeImpl(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::setKeyword(uint64_t this, char a2)
{
  *(unsigned char *)(this + 16) = a2;
  return this;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::isKeyword(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  return *((unsigned __int8 *)this + 16);
}

void morphun::analysis::tokenattributes::KeywordAttributeImpl::reflectWith(morphun::analysis::tokenattributes::KeywordAttributeImpl *this, morphun::analysis::util::AttributeReflector *a2)
{
  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)L"keyword");
  if (*((unsigned char *)this + 16)) {
    uint64_t v4 = &word_1D2ED013A;
  }
  else {
    uint64_t v4 = L"false";
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)v4);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  if (v9 < 0) {
    operator delete(__dst[0]);
  }
}

void sub_1D2C9E940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  __cxa_free_exception(v20);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::copyTo(morphun::analysis::tokenattributes::KeywordAttributeImpl *this, morphun::analysis::util::AttributeImpl *lpsrc)
{
  if (!lpsrc)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (!v2)
  {
    uint64_t v6 = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(void *)uint64_t v6 = &unk_1F2A11358;
  }
  long long v3 = *(uint64_t (**)(void))(*(void *)v2 + 64);

  return v3();
}

void sub_1D2C9EAA8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenattributes::KeywordAttributeImpl::clone(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::operator()(int a1, void *lpsrc)
{
  if (!v2) {
    __cxa_bad_cast();
  }
  if (v2[16]) {
    return 31;
  }
  else {
    return 37;
  }
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::hashCode(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
  if (*((unsigned char *)this + 16)) {
    return 31;
  }
  else {
    return 37;
  }
}

uint64_t morphun::analysis::tokenattributes::KeywordAttributeImpl::equals(morphun::analysis::tokenattributes::KeywordAttributeImpl *this, const morphun::analysis::util::Attribute *lpsrc)
{
  if (this == lpsrc) {
    return 1;
  }
  if (result) {
    return *((unsigned __int8 *)this + 16) == *(unsigned __int8 *)(result + 16);
  }
  return result;
}

void covariant return thunk to'morphun::analysis::tokenattributes::KeywordAttributeImpl::clone(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
}

void morphun::analysis::tokenattributes::KeywordAttributeImpl::~KeywordAttributeImpl(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
}

void morphun::analysis::tokenattributes::KeywordAttributeImpl::create(morphun::analysis::tokenattributes::KeywordAttributeImpl *this)
{
}

void morphun::analysis::util::WordlistLoader::getWordSet()
{
}

void sub_1D2C9EFA0(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::transliteration::TransliteratorFactory::createTransliterator(morphun::transliteration::TransliteratorFactory *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3)
{
  uint64_t v74 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!morphun::transliteration::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v59 = (std::mutex *)morphun::transliteration::CLASS_MUTEX(void)::classMutex;
  std::mutex::lock((std::mutex *)morphun::transliteration::CLASS_MUTEX(void)::classMutex);
  if (*((char *)this + 127) < 0) {
    std::string::__init_copy_ctor_external(&v60, *((const std::string::value_type **)this + 13), *((void *)this + 14));
  }
  else {
    std::string v60 = *(std::string *)((char *)this + 104);
  }
  if (*((char *)a2 + 127) < 0) {
    std::string::__init_copy_ctor_external(&v61, *((const std::string::value_type **)a2 + 13), *((void *)a2 + 14));
  }
  else {
    std::string v61 = *(std::string *)((char *)a2 + 104);
  }
  {
    operator new();
  }
  uint64_t v5 = morphun::transliteration::TRANSLITERATOR_CACHE(void)::TRANSLITERATOR_CACHE_;
  npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(morphun::transliteration::TRANSLITERATOR_CACHE(void)::TRANSLITERATOR_CACHE_);
  uint64_t v6 = (uint64_t **)(v5 + 8);
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    goto LABEL_17;
  }
  uint64_t v8 = v5 + 8;
  do
  {
    int v9 = std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100]((const void **)(v7 + 32), (const void **)&v60.__r_.__value_.__l.__data_);
    int v10 = (uint64_t *)(v7 + 8);
    if (!v9)
    {
      int v10 = (uint64_t *)v7;
      uint64_t v8 = v7;
    }
    uint64_t v7 = *v10;
  }
  while (*v10);
  if ((uint64_t **)v8 == v6
    || std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100]((const void **)&v60.__r_.__value_.__l.__data_, (const void **)(v8 + 32)))
  {
LABEL_17:
    uint64_t v8 = v5 + 8;
  }
  uint64_t v11 = npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(v5);
  if (v6 != (uint64_t **)v8)
  {
    uint64_t v12 = *(void *)(v8 + 80);
    goto LABEL_95;
  }
  int v13 = (const void **)((char *)this + 8);
  int v14 = (unsigned __int8 **)((char *)a2 + 8);
  uint64_t v15 = *((unsigned __int8 *)this + 31);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = *((unsigned __int8 *)this + 31);
  }
  else {
    uint64_t v16 = *((void *)this + 2);
  }
  uint64_t v17 = *((unsigned __int8 *)a2 + 31);
  int v18 = (char)v17;
  if ((v17 & 0x80u) != 0) {
    uint64_t v17 = *((void *)a2 + 2);
  }
  if (v16 == v17)
  {
    if (v18 >= 0) {
      uint64_t v19 = (unsigned __int8 *)a2 + 8;
    }
    else {
      uint64_t v19 = *v14;
    }
    if ((v15 & 0x80) != 0)
    {
      uint64_t v11 = memcmp(*v13, v19, *((void *)this + 2));
      if (v11) {
        goto LABEL_36;
      }
    }
    else if (*((unsigned char *)this + 31))
    {
      BOOL v20 = (unsigned __int8 *)this + 8;
      while (*v20 == *v19)
      {
        ++v20;
        ++v19;
        if (!--v15) {
          goto LABEL_34;
        }
      }
      goto LABEL_36;
    }
LABEL_34:
    uint64_t v21 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Can't transliterate from locale to itself.");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v21, (long long *)&__dst);
  }
LABEL_36:
  uint64_t v22 = morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v11);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = *(unsigned __int8 *)(v22 + 31);
  }
  else {
    uint64_t v24 = *(void *)(v22 + 16);
  }
  uint64_t v25 = *((unsigned __int8 *)a2 + 31);
  int v26 = (char)v25;
  if ((v25 & 0x80u) != 0) {
    uint64_t v25 = *((void *)a2 + 2);
  }
  if (v24 != v25) {
    goto LABEL_51;
  }
  std::basic_string<char16_t>::size_type v27 = (const void **)(v22 + 8);
  if (v26 >= 0) {
    BOOL v28 = (unsigned __int8 *)a2 + 8;
  }
  else {
    BOOL v28 = *v14;
  }
  if ((v23 & 0x80) != 0)
  {
    uint64_t v22 = memcmp(*v27, v28, *(void *)(v22 + 16));
    if (v22) {
      goto LABEL_51;
    }
  }
  else if (*(unsigned char *)(v22 + 31))
  {
    while (*(unsigned __int8 *)v27 == *v28)
    {
      std::basic_string<char16_t>::size_type v27 = (const void **)((char *)v27 + 1);
      ++v28;
      if (!--v23) {
        goto LABEL_65;
      }
    }
LABEL_51:
    uint64_t v29 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v22);
    uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    if ((v30 & 0x80u) == 0) {
      uint64_t v31 = *(unsigned __int8 *)(v29 + 31);
    }
    else {
      uint64_t v31 = *(void *)(v29 + 16);
    }
    uint64_t v32 = *((unsigned __int8 *)this + 31);
    int v33 = (char)v32;
    if ((v32 & 0x80u) != 0) {
      uint64_t v32 = *((void *)this + 2);
    }
    if (v31 != v32) {
      goto LABEL_124;
    }
    int v34 = (const void **)(v29 + 8);
    if (v33 >= 0) {
      uint64_t v35 = (unsigned __int8 *)this + 8;
    }
    else {
      uint64_t v35 = (unsigned __int8 *)*v13;
    }
    if ((v30 & 0x80) != 0)
    {
      uint64_t v29 = memcmp(*v34, v35, *(void *)(v29 + 16));
      if (v29) {
        goto LABEL_124;
      }
    }
    else if (*(unsigned char *)(v29 + 31))
    {
      while (*(unsigned __int8 *)v34 == *v35)
      {
        int v34 = (const void **)((char *)v34 + 1);
        ++v35;
        if (!--v30) {
          goto LABEL_73;
        }
      }
LABEL_124:
      long long v55 = __cxa_allocate_exception(0x38uLL);
      (**(void (***)(std::basic_string<char16_t> *__return_ptr, morphun::transliteration::TransliteratorFactory *))this)(&v66, this);
      __n128 v56 = std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v67, &v66, (std::basic_string<char16_t>::value_type *)"-");
      (**(void (***)(std::basic_string<char16_t> *__return_ptr, const morphun::util::ULocale *, __n128))a2)(&v65, a2, v56);
      if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v57 = &v65;
      }
      else {
        unsigned int v57 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
      }
      if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v65.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v65.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v67, (const std::basic_string<char16_t>::value_type *)v57, size);
      std::basic_string<char16_t> v68 = v67;
      memset(&v67, 0, sizeof(v67));
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__dst, &v68, L" is not a supported language combination for transliteration.");
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v55, (long long *)&__dst);
    }
LABEL_73:
    uint64_t v39 = morphun::util::LocaleUtils::RUSSIAN((morphun::util::LocaleUtils *)v29);
    if (*(char *)(v39 + 31) < 0) {
      std::string::__init_copy_ctor_external(&__dst, *(const std::string::value_type **)(v39 + 8), *(void *)(v39 + 16));
    }
    else {
      std::string __dst = *(std::string *)(v39 + 8);
    }
    std::set<std::string>::set[abi:ne180100](&v62, (long long *)&__dst, 1);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    uint64_t v40 = (char **)std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)&v62, (void *)a2 + 1);
    if (v63 != v40) {
      operator new();
    }
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v40);
    goto LABEL_124;
  }
LABEL_65:
  int v64 = 0;
  uint64_t v69 = -1;
  Code = (morphun::util::LocaleUtils *)uscript_getCode();
  if (Code)
  {
    if (Code != 1 || v69 != 25)
    {
      uint64_t v38 = morphun::util::LocaleUtils::JAPANESE(Code);
      if (*(char *)(v38 + 31) < 0) {
        std::string::__init_copy_ctor_external(&__dst, *(const std::string::value_type **)(v38 + 8), *(void *)(v38 + 16));
      }
      else {
        std::string __dst = *(std::string *)(v38 + 8);
      }
      uint64_t v50 = morphun::util::LocaleUtils::HEBREW((morphun::util::LocaleUtils *)v38);
      if (*(char *)(v50 + 31) < 0) {
        std::string::__init_copy_ctor_external(&v71, *(const std::string::value_type **)(v50 + 8), *(void *)(v50 + 16));
      }
      else {
        std::string v71 = *(std::string *)(v50 + 8);
      }
      uint64_t v51 = morphun::util::LocaleUtils::RUSSIAN((morphun::util::LocaleUtils *)v50);
      if (*(char *)(v51 + 31) < 0) {
        std::string::__init_copy_ctor_external(&v72, *(const std::string::value_type **)(v51 + 8), *(void *)(v51 + 16));
      }
      else {
        std::string v72 = *(std::string *)(v51 + 8);
      }
      uint64_t v52 = morphun::util::LocaleUtils::ARABIC((morphun::util::LocaleUtils *)v51);
      if (*(char *)(v52 + 31) < 0) {
        std::string::__init_copy_ctor_external(v73, *(const std::string::value_type **)(v52 + 8), *(void *)(v52 + 16));
      }
      else {
        v73[0] = *(std::string *)(v52 + 8);
      }
      std::set<std::string>::set[abi:ne180100](&v62, (long long *)&__dst, 4);
      unint64_t v53 = 0;
      while (1)
      {
        if (SHIBYTE(v73[0].__r_.__value_.__r.__words[v53 + 2]) < 0) {
          operator delete(v73[v53 / 3].__r_.__value_.__l.__data_);
        }
        v53 -= 3;
        if (v53 == 0x1FFFFFFFFFFFFFF4)
        {
          if (v63 != std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::find<std::string>((uint64_t)&v62, (void *)this + 1))operator new(); {
          operator new();
          }
        }
      }
    }
  }
  uint64_t v12 = 0;
  npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(v5);
  std::basic_string<char16_t> v41 = *v6;
  std::basic_string<char16_t> v42 = (uint64_t **)(v5 + 8);
  uint64_t v43 = (uint64_t **)(v5 + 8);
  if (*v6)
  {
    while (1)
    {
      while (1)
      {
        std::basic_string<char16_t> v42 = (uint64_t **)v41;
        int v44 = (const void **)(v41 + 4);
        if (!std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100]((const void **)&v60.__r_.__value_.__l.__data_, (const void **)v41 + 4))break; {
        std::basic_string<char16_t> v41 = *v42;
        }
        uint64_t v43 = v42;
        if (!*v42) {
          goto LABEL_86;
        }
      }
      if (!std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100](v44, (const void **)&v60.__r_.__value_.__l.__data_))break; {
      uint64_t v43 = v42 + 1;
      }
      std::basic_string<char16_t> v41 = v42[1];
      if (!v41) {
        goto LABEL_86;
      }
    }
  }
  else
  {
LABEL_86:
    uint64_t v45 = (char *)operator new(0x58uLL);
    uint64_t v46 = (uint64_t *)v45;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v45;
    __dst.__r_.__value_.__l.__size_ = v5 + 8;
    __dst.__r_.__value_.__s.__data_[16] = 0;
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external((std::string *)(v45 + 32), v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
    }
    else {
      *(std::string *)(v45 + 32) = v60;
    }
    unint64_t v47 = (std::string *)(v46 + 7);
    if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(v47, v61.__r_.__value_.__l.__data_, v61.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v47->__r_.__value_.__l.__data_ = *(_OWORD *)&v61.__r_.__value_.__l.__data_;
      v46[9] = v61.__r_.__value_.__r.__words[2];
    }
    v46[10] = 0;
    __dst.__r_.__value_.__s.__data_[16] = 1;
    *uint64_t v46 = 0;
    v46[1] = 0;
    uint64_t v46[2] = (uint64_t)v42;
    *uint64_t v43 = v46;
    uint64_t v48 = **(void **)v5;
    if (v48)
    {
      *(void *)uint64_t v5 = v48;
      uint64_t v46 = *v43;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v5 + 8), v46);
    ++*(void *)(v5 + 16);
    __dst.__r_.__value_.__r.__words[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t *)&__dst);
  }
LABEL_95:
  if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v61.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  std::mutex::unlock(v59);
  return v12;
}

void sub_1D2CA0010(_Unwind_Exception *a1, morphun::transliteration::BidirectionalStringMap *a2, std::mutex *a3, ...)
{
  va_start(va, a3);
  std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)va);
  std::mutex::unlock(a3);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::pair<std::string,std::string>,morphun::transliteration::Transliterator *>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CA05CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::less<std::pair<std::string,std::string>>::operator()[abi:ne180100](const void **a1, const void **a2)
{
  int v4 = *((char *)a2 + 23);
  int v5 = *((char *)a1 + 23);
  if (v5 >= 0) {
    size_t v6 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v6 = (size_t)a1[1];
  }
  if (v5 >= 0) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = *a1;
  }
  if (v4 >= 0) {
    size_t v8 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v8 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    int v9 = a2;
  }
  else {
    int v9 = *a2;
  }
  if (v8 >= v6) {
    size_t v10 = v6;
  }
  else {
    size_t v10 = v8;
  }
  int v11 = memcmp(v7, v9, v10);
  BOOL v12 = v6 < v8;
  if (v11) {
    BOOL v12 = v11 < 0;
  }
  if (v12) {
    return 1;
  }
  int v14 = memcmp(v9, v7, v10);
  BOOL v15 = v8 < v6;
  if (v14) {
    BOOL v15 = v14 < 0;
  }
  if (v15) {
    return 0;
  }
  int v18 = (const void **)a2[3];
  uint64_t v17 = a2 + 3;
  uint64_t v16 = v18;
  int v19 = *((char *)v17 + 23);
  uint64_t v22 = (const void **)a1[3];
  uint64_t v21 = a1 + 3;
  BOOL v20 = v22;
  int v23 = *((char *)v21 + 23);
  if (v23 >= 0) {
    size_t v24 = *((unsigned __int8 *)v21 + 23);
  }
  else {
    size_t v24 = (size_t)v21[1];
  }
  if (v23 >= 0) {
    uint64_t v25 = v21;
  }
  else {
    uint64_t v25 = v20;
  }
  if (v19 >= 0) {
    size_t v26 = *((unsigned __int8 *)v17 + 23);
  }
  else {
    size_t v26 = (size_t)v17[1];
  }
  if (v19 >= 0) {
    std::basic_string<char16_t>::size_type v27 = v17;
  }
  else {
    std::basic_string<char16_t>::size_type v27 = v16;
  }
  if (v26 >= v24) {
    size_t v28 = v24;
  }
  else {
    size_t v28 = v26;
  }
  int v29 = memcmp(v25, v27, v28);
  if (v29) {
    return v29 < 0;
  }
  else {
    return v24 < v26;
  }
}

uint64_t **std::set<std::string>::set[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  int v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    int v5 = a2;
    size_t v6 = (long long *)((char *)a2 + 24 * a3);
    while (1)
    {
      uint64_t v7 = a1[1];
      size_t v8 = v4;
      if (*a1 != v4)
      {
        int v9 = a1[1];
        size_t v10 = v4;
        if (v7)
        {
          do
          {
            size_t v8 = v9;
            int v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            size_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            size_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::string>::operator()[abi:ne180100](v8 + 4, v5)) {
          break;
        }
      }
      BOOL v12 = (uint64_t **)v4;
      int v13 = (uint64_t **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (uint64_t **)(v8 + 1);
      if (!v8[1])
      {
        BOOL v12 = (uint64_t **)v8;
LABEL_19:
        uint64_t v16 = (uint64_t *)operator new(0x38uLL);
        uint64_t v17 = (std::string *)(v16 + 4);
        if (*((char *)v5 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(v17, *(const std::string::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          v16[6] = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *uint64_t v16 = 0;
        v16[1] = 0;
        _OWORD v16[2] = (uint64_t)v12;
        std::basic_string<char16_t> *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      int v5 = (long long *)((char *)v5 + 24);
      if (v5 == v6) {
        return a1;
      }
    }
    BOOL v12 = (uint64_t **)v4;
    int v13 = (uint64_t **)v4;
    if (v7)
    {
      int v14 = v7;
      while (1)
      {
        while (1)
        {
          BOOL v12 = (uint64_t **)v14;
          BOOL v15 = v14 + 4;
          if (!std::less<std::string>::operator()[abi:ne180100](v5, v14 + 4)) {
            break;
          }
          int v14 = *v12;
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::string>::operator()[abi:ne180100](v15, v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        int v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CA08A4(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void morphun::util::ResourceLocator::getDirectoryFromEnvironment(morphun::util::ResourceLocator *this@<X0>, const char *a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  v36[2] = *MEMORY[0x1E4F143B8];
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  size_t v6 = getenv((const char *)this);
  if (v6)
  {
    uint64_t v7 = v6;
    if (*v6)
    {
      int32_t v8 = strlen(v6);
      morphun::util::StringViewUtils::to_u16string(v7, v8, (std::basic_string<char16_t> *)&v35);
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)&v35.dli_fname;
      a3->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v35.dli_sname;
    }
  }
  else
  {
    dladdr(a2, &v35);
    if (v35.dli_fname && *v35.dli_fname)
    {
      int32_t v9 = strlen(v35.dli_fname);
      morphun::util::StringViewUtils::to_u16string(v35.dli_fname, v9, &__str);
      std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      char v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
      }
      else {
        p_str = &__str;
      }
      if (size)
      {
        uint64_t v13 = size;
        while (v13 * 2)
        {
          int v14 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[--v13];
          if (v14 == 47)
          {
            if (v13 != -1)
            {
              std::basic_string<char16_t>::size_type v15 = (v13 * 2) >> 1;
              do
              {
                std::basic_string<char16_t>::resize(&__str, v15, 0);
                std::basic_string<char16_t>::size_type v16 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  std::basic_string<char16_t>::size_type v16 = __str.__r_.__value_.__l.__size_;
                }
                if (!v16) {
                  break;
                }
                uint64_t v17 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                    ? &__str
                    : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                --v15;
              }
              while (v17->__r_.__value_.__s.__data_[v16 - 1] == 47);
              char v18 = 0;
              uint64_t v19 = 0;
              v36[0] = L"/usr/local/lib";
              v36[1] = "/";
              while (1)
              {
                char v20 = v18;
                std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)v36[v19]);
                std::basic_string<char16_t>::size_type v22 = __str.__r_.__value_.__l.__size_;
                uint64_t v21 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                {
                  uint64_t v21 = &__str;
                  std::basic_string<char16_t>::size_type v22 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                }
                uint64_t v23 = v33;
                if ((v33 & 0x80u) == 0) {
                  size_t v24 = __p;
                }
                else {
                  size_t v24 = (void **)__p[0];
                }
                if ((v33 & 0x80u) != 0) {
                  uint64_t v23 = (uint64_t)__p[1];
                }
                std::basic_string<char16_t>::size_type v25 = v22 - v23;
                if (v22 >= v23)
                {
                  if (!v23) {
                    break;
                  }
                  uint64_t v26 = -v23;
                  std::basic_string<char16_t>::size_type v27 = (char *)v21 + 2 * v22;
                  do
                  {
                    int v28 = *(unsigned __int16 *)&v27[2 * v26];
                    int v30 = *(unsigned __int16 *)v24;
                    size_t v24 = (void **)((char *)v24 + 2);
                    int v29 = v30;
                  }
                  while (v30 == v28 && v26++ != -1);
                  if (v29 == v28) {
                    break;
                  }
                }
                if ((char)v33 < 0) {
                  operator delete(__p[0]);
                }
                char v18 = 1;
                uint64_t v19 = 1;
                if (v20) {
                  goto LABEL_45;
                }
              }
              std::basic_string<char16_t>::assign(a3, &__str, 0, v25);
              if ((char)v33 < 0) {
                operator delete(__p[0]);
              }
LABEL_45:
              char v11 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            }
            break;
          }
        }
      }
      if (v11 < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_1D2CA0B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (*(char *)(v21 + 23) < 0) {
    operator delete(*(void **)v21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::ResourceLocator::APPLE_FRAMEWORKS_ROOT_DIRECTORY(morphun::util::ResourceLocator *this)
{
  {
    morphun::util::ResourceLocator::getDirectoryFromEnvironment((morphun::util::ResourceLocator *)"APPLE_FRAMEWORKS_ROOT", MEMORY[0x1E4F1C278], &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    morphun::util::StringViewUtils::strdup((const UChar *)p_p);
  }
  return morphun::util::ResourceLocator::APPLE_FRAMEWORKS_ROOT_DIRECTORY(void)::APPLE_FRAMEWORKS_ROOT_DIRECTORY_;
}

void sub_1D2CA0C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::util::ResourceLocator::MORPHUN_ROOT_DIRECTORY(morphun::util::ResourceLocator *this)
{
  {
    morphun::util::ResourceLocator::getDirectoryFromEnvironment((morphun::util::ResourceLocator *)"MORPHUN_ROOT", (const char *)morphun::util::ResourceLocator::getDirectoryFromEnvironment, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    morphun::util::StringViewUtils::strdup((const UChar *)p_p);
  }
  return morphun::util::ResourceLocator::MORPHUN_ROOT_DIRECTORY(void)::MORPHUN_ROOT_DIRECTORY_;
}

void sub_1D2CA0D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

double morphun::util::ResourceLocator::getRootForLocale@<D0>(morphun::util::ResourceLocator *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::resources::DataRegistrationService::getDataPathForLocale(this, &__p);
  char v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    int32_t v6 = __p.__r_.__value_.__r.__words[1];
    if (__p.__r_.__value_.__l.__size_)
    {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
LABEL_6:
      morphun::util::StringViewUtils::to_u16string((const char *)p_p, v6, a2);
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if (*((unsigned char *)&__p.__r_.__value_.__s + 23))
  {
    int32_t v6 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    goto LABEL_6;
  }
  int32_t v9 = (_WORD *)morphun::util::ResourceLocator::MORPHUN_ROOT_DIRECTORY(v4);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v14, (char *)L"/usr/share/morphun");
  if (*v9)
  {
    uint64_t v11 = 0;
    do
      BOOL v12 = (const std::basic_string<char16_t>::value_type *)(v11 + 1);
    while (v9[++v11]);
  }
  else
  {
    BOOL v12 = 0;
  }
  std::basic_string<char16_t>::insert(&v14, (std::basic_string<char16_t>::size_type)v9, v12, v10);
  double result = *(double *)&v14.__r_.__value_.__l.__data_;
  *a2 = v14;
  if (v5 < 0) {
LABEL_7:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_1D2CA0E28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (v20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::stemmer::NlLemmaFilter::getLemmaForTermAt(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X2>, std::basic_string<char16_t>::size_type a4@<X3>, std::basic_string<char16_t> *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = 0;
  uint64_t v12 = *(void *)(a1 + 136);
  int v13 = *(char *)(a2 + 23);
  if (v13 >= 0) {
    std::basic_string<char16_t> v14 = (const UChar *)a2;
  }
  else {
    std::basic_string<char16_t> v14 = *(const UChar **)a2;
  }
  if (v13 >= 0) {
    uint64_t v15 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v15 = *(void *)(a2 + 8);
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v12, (uint64_t)&v23, v14, v15);
  if ((*(void *)(a1 + 160) & v23) != 0) {
    goto LABEL_8;
  }
  *(void *)a6 = 0;
  *(void *)(a6 + 8) = 0;
  *(void *)(a6 + 16) = 0;
  if (*(char *)(a2 + 23) >= 0) {
    unsigned int v18 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    unsigned int v18 = *(_DWORD *)(a2 + 8);
  }
  morphun::analysis::stemmer::NlLemmaFilter::guessDiminutive(a6, a2, v18, v16, v17);
  int v19 = *(char *)(a6 + 23);
  if (v19 >= 0) {
    uint64_t v20 = *(unsigned __int8 *)(a6 + 23);
  }
  else {
    uint64_t v20 = *(void *)(a6 + 8);
  }
  if (!v20)
  {
LABEL_22:
    if ((v19 & 0x80) != 0) {
      operator delete(*(void **)a6);
    }
LABEL_8:
    morphun::analysis::stemmer::DictionaryLookupLemmaFilter::getLemmaForTermAt(a1, (const std::basic_string<char16_t> *)a2, a3, a4, a5, (std::basic_string<char16_t> *)a6);
    return;
  }
  uint64_t v21 = *(void *)(a1 + 136);
  if (v19 >= 0) {
    std::basic_string<char16_t>::size_type v22 = (const UChar *)a6;
  }
  else {
    std::basic_string<char16_t>::size_type v22 = *(const UChar **)a6;
  }
  uint64_t v24 = 0;
  if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v21, (uint64_t)&v24, v22, v20))
  {
    LOBYTE(v19) = *(unsigned char *)(a6 + 23);
    goto LABEL_22;
  }
}

void sub_1D2CA0F78(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::stemmer::NlLemmaFilter::guessDiminutive(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  if (*(char *)(a2 + 23) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::basic_string<char16_t> __str = *(std::basic_string<char16_t> *)a2;
  }
  std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  }
  if (size >= 3)
  {
    uint64_t v8 = 0;
    p_str = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    uint64_t v10 = (uint64_t)p_str + 2 * size - 6;
    do
    {
      int v11 = *(unsigned __int16 *)(v10 + v8 * 2);
      int v12 = (unsigned __int16)aJes[v8];
    }
    while (v12 == v11 && v8++ != 2);
    if (v12 == v11) {
      std::basic_string<char16_t>::resize(&__str, (int)--a3, 0);
    }
  }
  if ((int)a3 < 3) {
    goto LABEL_48;
  }
  std::basic_string<char16_t>::size_type v14 = __str.__r_.__value_.__l.__size_;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v14 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  }
  if (v14 < 2) {
    goto LABEL_48;
  }
  uint64_t v15 = 0;
  uint64_t v16 = &__str;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v16 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  uint64_t v17 = (uint64_t)v16 + 2 * v14 - 4;
  do
  {
    int v18 = *(unsigned __int16 *)(v17 + v15 * 2);
    int v19 = (unsigned __int16)word_1D2ECA92A[v15];
  }
  while (v19 == v18 && v15++ != 1);
  if (v19 != v18) {
    goto LABEL_48;
  }
  if (a3 <= 3)
  {
    std::basic_string<char16_t>::size_type v22 = 0;
    int v21 = (unsigned __int16)v16->__r_.__value_.__s.__data_[0];
    goto LABEL_35;
  }
  int v21 = (unsigned __int16)v16->__r_.__value_.__s.__data_[a3 - 3];
  if (v21 == 112)
  {
    if (v16->__r_.__value_.__s.__data_[a3 - 4] == 109)
    {
LABEL_33:
      npc<std::basic_string<char16_t>>(a1);
      std::basic_string<char16_t>::size_type v22 = a3 - 3;
LABEL_47:
      std::basic_string<char16_t>::assign((std::basic_string<char16_t> *)a1, &__str, 0, v22);
      goto LABEL_48;
    }
LABEL_46:
    npc<std::basic_string<char16_t>>(a1);
    std::basic_string<char16_t>::size_type v22 = a3 - 2;
    goto LABEL_47;
  }
  uint64_t v23 = a3 - 5;
  if (a3 < 5)
  {
    if (v21 != 116) {
      goto LABEL_54;
    }
LABEL_52:
    std::basic_string<char16_t>::size_type v22 = a3 - 4;
    int v24 = (unsigned __int16)v16->__r_.__value_.__s.__data_[v22];
    if (v24 == 39) {
      goto LABEL_36;
    }
    if (a3 >= 8 && v24 == 101)
    {
      std::basic_string<char16_t>::size_type v25 = (void *)morphun::analysis::stemmer::NlLemmaFilter::BLNMRP_SET((morphun::analysis::stemmer::NlLemmaFilter *)a1);
      uint64_t v26 = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v26 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      }
      int v27 = MEMORY[0x1D942C150](*v25, (unsigned __int16)v26->__r_.__value_.__s.__data_[v23]);
      int v28 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if (v27)
      {
        uint64_t v29 = a3 - 6;
        goto LABEL_61;
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v30 = &__str;
      }
      else {
        int v30 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      }
      if (v30->__r_.__value_.__s.__data_[v23] == 103)
      {
        uint64_t v29 = a3 - 6;
        if (v30->__r_.__value_.__s.__data_[v29] == 110)
        {
LABEL_61:
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v28 = &__str;
          }
          if (v28->__r_.__value_.__s.__data_[v29] == v28->__r_.__value_.__s.__data_[v23]
            && morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)&__str, a3 - 7))
          {
            npc<std::basic_string<char16_t>>(a1);
            std::basic_string<char16_t>::size_type v22 = a3 - 5;
            goto LABEL_47;
          }
          goto LABEL_36;
        }
      }
    }
    BOOL isVowelAtIndex = morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)&__str, a3 - 4);
    if (!isVowelAtIndex)
    {
      unsigned __int8 v33 = (void *)morphun::analysis::stemmer::NlLemmaFilter::LRN_SET((morphun::analysis::stemmer::NlLemmaFilter *)isVowelAtIndex);
      int v34 = &__str;
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v34 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      }
      if (MEMORY[0x1D942C150](*v33, (unsigned __int16)v34->__r_.__value_.__s.__data_[v22])) {
        goto LABEL_33;
      }
      goto LABEL_48;
    }
    if (a3 < 5) {
      goto LABEL_33;
    }
    uint64_t v32 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v32 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    if (v32->__r_.__value_.__s.__data_[v22] != v32->__r_.__value_.__s.__data_[a3 - 5]) {
      goto LABEL_33;
    }
LABEL_36:
    npc<std::basic_string<char16_t>>(a1);
    goto LABEL_47;
  }
  if (v21 == 116) {
    goto LABEL_52;
  }
  if (v21 != 107)
  {
LABEL_54:
    std::basic_string<char16_t>::size_type v22 = a3 - 3;
LABEL_35:
    if (v21 != 39) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  if (v16->__r_.__value_.__s.__data_[a3 - 4] != 110 || v16->__r_.__value_.__s.__data_[v23] != 105) {
    goto LABEL_46;
  }
  std::basic_string<char16_t>::basic_string(&__p, &__str, 0, a3 - 3, a5);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v36, &__p, word_1D2ECA3F0);
  npc<std::basic_string<char16_t>>(a1);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  *(_OWORD *)a1 = v36;
  *(void *)(a1 + 16) = v37;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_48:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CA1330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CA13D0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::NlLemmaFilter::BLNMRP_SET(morphun::analysis::stemmer::NlLemmaFilter *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::analysis::stemmer::NlLemmaFilter::BLNMRP_SET(void)::BLNMRP_SET_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2CA1480(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

BOOL morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex(uint64_t *a1, int a2)
{
  {
    operator new();
  }
  int v4 = (void *)npc<icu4cxx::UnicodeSet const>(morphun::analysis::stemmer::NlLemmaFilter::AEIOU_SET(void)::AEIOU_SET_);
  if (*((char *)a1 + 23) >= 0) {
    char v5 = a1;
  }
  else {
    char v5 = (uint64_t *)*a1;
  }
  if (MEMORY[0x1D942C150](*v4, *((unsigned __int16 *)v5 + a2))) {
    return 1;
  }
  if (a2 >= 1)
  {
    uint64_t v7 = *((char *)a1 + 23) >= 0 ? (uint64_t)a1 : *a1;
    if (*(_WORD *)(v7 + 2 * a2) == 106) {
      return *(unsigned __int16 *)(v7 + 2 * (a2 - 1)) == 105;
    }
  }
  return 0;
}

void sub_1D2CA15BC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::NlLemmaFilter::LRN_SET(morphun::analysis::stemmer::NlLemmaFilter *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::analysis::stemmer::NlLemmaFilter::LRN_SET(void)::LRN_SET_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2CA1690(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1D2CA1718(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t>::size_type morphun::analysis::stemmer::NlLemmaFilter::stem(int a1, std::basic_string<char16_t> *this, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  int v5 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if (v5 >= 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
  }
  unsigned int v7 = size - 4;
  if ((int)size < 4) {
    return size;
  }
  if (size >= 9)
  {
    uint64_t v10 = 0;
    int v11 = v5 >= 0 ? this : (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    do
    {
      int v12 = (unsigned __int16)v11->__r_.__value_.__s.__data_[size - 5 + v10];
      int v13 = (unsigned __int16)aHeden[v10];
    }
    while (v13 == v12 && v10++ != 4);
    if (v13 == v12
      && v11->__r_.__value_.__s.__data_[(size - 6)] != 99
      && v11->__r_.__value_.__s.__data_[(size - 7)] != 115)
    {
      std::basic_string<char16_t>::replace(this, (size - 3), 3uLL, (const std::basic_string<char16_t>::value_type *)"i", 2uLL);
      if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        return HIBYTE(this->__r_.__value_.__r.__words[2]);
      }
      else {
        return LODWORD(this->__r_.__value_.__r.__words[1]);
      }
    }
  }
  memset(&__str, 0, sizeof(__str));
  morphun::analysis::stemmer::NlLemmaFilter::guessDiminutive((uint64_t)&__str, (uint64_t)this, size, a4, a5);
  std::basic_string<char16_t>::size_type v15 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v15 = __str.__r_.__value_.__l.__size_;
  }
  if (v15)
  {
    std::basic_string<char16_t>::operator=(this, &__str);
LABEL_22:
    if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v8 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v8 = LODWORD(this->__r_.__value_.__r.__words[1]);
    }
    goto LABEL_25;
  }
  uint64_t v17 = (size - 1);
  int v18 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  int v19 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  if (v18 >= 0) {
    uint64_t v20 = this;
  }
  else {
    uint64_t v20 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  if (v20->__r_.__value_.__s.__data_[v17] != 110)
  {
LABEL_45:
    if ((v18 & 0x80u) == 0) {
      int v19 = this;
    }
    if (v19->__r_.__value_.__s.__data_[v17] == 115)
    {
      if (v19->__r_.__value_.__s.__data_[(size - 2)] == 39) {
        std::basic_string<char16_t>::size_type v8 = (size - 2);
      }
      else {
        std::basic_string<char16_t>::size_type v8 = v17;
      }
    }
    else if ((v18 & 0x80u) == 0)
    {
      std::basic_string<char16_t>::size_type v8 = v18;
    }
    else
    {
      std::basic_string<char16_t>::size_type v8 = LODWORD(this->__r_.__value_.__r.__words[1]);
    }
    goto LABEL_25;
  }
  {
    operator new();
  }
  int v21 = (void *)npc<icu4cxx::UnicodeSet const>(morphun::analysis::stemmer::NlLemmaFilter::E_SET(void)::E_SET_);
  std::basic_string<char16_t>::size_type v22 = (size - 2);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v23 = this;
  }
  else {
    uint64_t v23 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  if (!MEMORY[0x1D942C150](*v21, (unsigned __int16)v23->__r_.__value_.__s.__data_[v22]))
  {
    LOBYTE(v18) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    int v19 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    goto LABEL_45;
  }
  std::basic_string<char16_t>::size_type v8 = (size - 3);
  BOOL isVowelAtIndex = morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)this, size - 3);
  if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v25 = this;
  }
  else {
    std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  int v26 = (unsigned __int16)v25->__r_.__value_.__s.__data_[v8];
  if (isVowelAtIndex)
  {
    if (v26 != 105)
    {
      std::basic_string<char16_t>::size_type v8 = (size - 2);
      goto LABEL_25;
    }
    std::basic_string<char16_t>::size_type v8 = (size - 2);
    if (v25->__r_.__value_.__s.__data_[v22] != 235) {
      goto LABEL_25;
    }
    std::basic_string<char16_t>::replace(this, (size - 2), 2uLL, word_1D2ED0598, 1uLL);
    goto LABEL_22;
  }
  if (v26 != (unsigned __int16)v25->__r_.__value_.__s.__data_[v7] && v26 != 39)
  {
    std::basic_string<char16_t>::size_type v27 = (size - 3);
    BOOL v28 = size >= 5;
    unsigned int v29 = size - 5;
    if (v28
      && morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)this, v7)
      && (!morphun::analysis::stemmer::NlLemmaFilter::isVowelAtIndex((uint64_t *)this, v29)
       || morphun::analysis::stemmer::NlLemmaFilter::shouldElongateVowel((uint64_t *)this, v29)))
    {
      if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v30 = this;
      }
      else {
        int v30 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      }
      int v31 = (unsigned __int16)v30->__r_.__value_.__s.__data_[v8];
      if (v31 == 118) {
        __int16 v32 = 102;
      }
      else {
        __int16 v32 = v31;
      }
      if (v31 == 122) {
        std::basic_string<char16_t>::value_type v33 = 115;
      }
      else {
        std::basic_string<char16_t>::value_type v33 = v32;
      }
      std::basic_string<char16_t>::resize(this, v8, 0);
      std::basic_string<char16_t>::size_type v34 = HIBYTE(this->__r_.__value_.__r.__words[2]);
      if ((v34 & 0x80u) == 0) {
        Dl_info v35 = this;
      }
      else {
        Dl_info v35 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      }
      if ((v34 & 0x80u) != 0) {
        std::basic_string<char16_t>::size_type v34 = this->__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::push_back(this, v35->__r_.__value_.__s.__data_[v34 - 1]);
      std::basic_string<char16_t>::push_back(this, v33);
    }
    else
    {
      if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v36 = this;
      }
      else {
        long long v36 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
      }
      int v37 = (unsigned __int16)v36->__r_.__value_.__s.__data_[v8];
      if (v37 == 122)
      {
        uint64_t v38 = word_1D2ED0594;
      }
      else
      {
        std::basic_string<char16_t>::size_type v8 = v22;
        if (v37 != 118) {
          goto LABEL_25;
        }
        uint64_t v38 = L"f";
      }
      std::basic_string<char16_t>::replace(this, v27, 3uLL, v38, 1uLL);
    }
    goto LABEL_22;
  }
LABEL_25:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_1D2CA1B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x1020C405F07FB98);
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::NlLemmaFilter::shouldElongateVowel(uint64_t *a1, unsigned int a2)
{
  unsigned int v2 = a2 + 1;
  int v3 = *((unsigned __int8 *)a1 + 23);
  int v4 = (char)v3;
  if ((v3 & 0x80u) != 0) {
    int v3 = *((_DWORD *)a1 + 2);
  }
  if ((int)v2 >= v3) {
    goto LABEL_12;
  }
  if (v4 >= 0) {
    int v5 = a1;
  }
  else {
    int v5 = (uint64_t *)*a1;
  }
  int v6 = *((unsigned __int16 *)v5 + a2);
  if (v6 == 117)
  {
    char v7 = *((unsigned __int16 *)v5 + v2) == 101;
    return v7 & 1;
  }
  if (v6 == 105)
  {
    if (*((_WORD *)v5 + v2) == 97) {
      char v7 = -1;
    }
    else {
      char v7 = 0;
    }
  }
  else
  {
LABEL_12:
    char v7 = 0;
  }
  return v7 & 1;
}

void morphun::analysis::stemmer::NlLemmaFilter::~NlLemmaFilter(morphun::analysis::stemmer::NlLemmaFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07F40);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07F40);
}

void morphun::dialog::InflectableStringConcept::clone(morphun::dialog::InflectableStringConcept *this)
{
}

void sub_1D2CA1C64(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4018BE3501);
  _Unwind_Resume(a1);
}

morphun::dialog::InflectableStringConcept *morphun::dialog::InflectableStringConcept::InflectableStringConcept(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::InflectableStringConcept *a2)
{
  *(void *)this = &unk_1F29F4CC0;
  int v4 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureConceptBase *)&off_1F2A05430, (uint64_t)a2);
  *(void *)int v4 = &off_1F2A09668;
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticFeatureConceptBase *)((char *)v4 + 40), (const morphun::dialog::InflectableStringConcept *)((char *)a2 + 40));
  *((void *)this + 10) = &off_1F2A09998;
  if (*((char *)a2 + 111) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 88), *((const std::basic_string<char16_t>::value_type **)a2 + 11), *((void *)a2 + 12));
  }
  else
  {
    long long v5 = *(_OWORD *)((char *)a2 + 88);
    *((void *)this + 13) = *((void *)a2 + 13);
    *(_OWORD *)((char *)this + 88) = v5;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)this + 14, (uint64_t)a2 + 112);
  return this;
}

void sub_1D2CA1D6C(_Unwind_Exception *a1)
{
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, (void ***)&off_1F2A05430);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::InflectableStringConcept::getFeatureValue(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::SemanticFeature *a2)
{
  if ((*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(void *)this + 48))(this)) {
    operator new();
  }
  uint64_t v4 = (*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(void *)this + 40))(this);
  long long v5 = (morphun::dialog::SemanticFeatureModel *)npc<morphun::dialog::SemanticFeatureModel const>(v4);
  uint64_t DefaultFeatureFunction = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(v5, a2);
  if (!DefaultFeatureFunction) {
    return 0;
  }
  uint64_t v7 = DefaultFeatureFunction;
  morphun::dialog::InflectableStringConcept::getDisplayValue(this, 1, (uint64_t)v10);
  if (!v11) {
    return 0;
  }
  uint64_t v8 = (*(uint64_t (**)(uint64_t, unsigned char *, char *))(*(void *)v7 + 24))(v7, v10, (char *)this + 16);
  if (v11) {
  return v8;
  }
}

void sub_1D2CA1EEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (a16) {
  _Unwind_Resume(exception_object);
  }
}

void sub_1D2CA1F80(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::InflectableStringConcept::getDisplayValue(morphun::dialog::InflectableStringConcept *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(void *)this + 40))(this);
  uint64_t v7 = *(void *)(npc<morphun::dialog::SemanticFeatureModel const>(v6) + 232);
  if (v7 && *((void *)this + 4))
  {
    v19[0] = 0;
    v19[1] = 0;
    int v18 = v19;
    if (*((void *)this + 9))
    {
      uint64_t v8 = (const morphun::dialog::SemanticFeature *)(*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(void *)this + 120))(this);
      npc<morphun::dialog::SemanticFeature const>((uint64_t)v8);
      if (*((void *)this + 9)) {
        int32_t v9 = (long long *)*((void *)this + 9);
      }
      else {
        int32_t v9 = (long long *)((char *)this + 48);
      }
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,morphun::dialog::SemanticFeature const&,std::basic_string<char16_t> const&>((uint64_t **)&v18, (uint64_t)v8, v8, v9);
    }
    morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)v22, (long long *)this + 3, (uint64_t)&v18);
    int v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v20 = &v13;
    char v21 = 0;
    int v13 = (char *)operator new(0x38uLL);
    uint64_t v14 = (uint64_t)v13;
    uint64_t v15 = v13 + 56;
    uint64_t v14 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue const*,morphun::dialog::SemanticFeatureModel_DisplayValue*>((uint64_t)v22, (uint64_t)&v23, (uint64_t)v13);
    morphun::dialog::SemanticFeatureModel_DisplayData::SemanticFeatureModel_DisplayData(&v16, (uint64_t *)&v13);
    uint64_t v20 = &v13;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&v20);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t (***)(morphun::Object *__hidden), char *, uint64_t))(*(void *)v7 + 24))(v7, &v16, (char *)this + 16, a2);
    uint64_t v11 = v10;
    if (v10)
    {
      *(void *)a3 = &off_1F2A09998;
      if (*(char *)(v10 + 31) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a3 + 8), *(const std::basic_string<char16_t>::value_type **)(v10 + 8), *(void *)(v10 + 16));
      }
      else
      {
        long long v12 = *(_OWORD *)(v10 + 8);
        *(void *)(a3 + 24) = *(void *)(v10 + 24);
        *(_OWORD *)(a3 + 8) = v12;
      }
      std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)(a3 + 32), v11 + 32);
      *(unsigned char *)(a3 + 56) = 1;
      (*(void (**)(uint64_t))(*(void *)v11 + 16))(v11);
      uint64_t v16 = &off_1F2A09958;
      v22[0] = (void **)v17;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](v22);
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v19[0]);
      return;
    }
    uint64_t v16 = &off_1F2A09958;
    v22[0] = (void **)v17;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](v22);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v19[0]);
  }
  if (a2)
  {
    *(void *)a3 = &off_1F2A09998;
    if (*((char *)this + 111) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a3 + 8), *((const std::basic_string<char16_t>::value_type **)this + 11), *((void *)this + 12));
    }
    else
    {
      *(_OWORD *)(a3 + 8) = *(_OWORD *)((char *)this + 88);
      *(void *)(a3 + 24) = *((void *)this + 13);
    }
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)(a3 + 32), (uint64_t)this + 112);
    *(unsigned char *)(a3 + 56) = 1;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 56) = 0;
  }
}

void sub_1D2CA22CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **a17, uint64_t a18, uint64_t a19, uint64_t a20,void **a21)
{
  (*(void (**)(uint64_t))(*(void *)v21 + 16))(v21);
  a21 = (void **)&a13;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&a21);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a17);
  _Unwind_Resume(a1);
}

void sub_1D2CA240C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,morphun::dialog::SemanticFeature const&,std::basic_string<char16_t> const&>(uint64_t **a1, uint64_t a2, const morphun::dialog::SemanticFeature *a3, long long *a4)
{
  uint64_t v7 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)a1, &v12, a2);
  if (!*v7)
  {
    uint64_t v8 = v7;
    int32_t v9 = (uint64_t *)operator new(0x80uLL);
    v10[1] = a1 + 1;
    std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>((morphun::dialog::SemanticFeature *)(v9 + 4), a3, a4);
    char v11 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v12, v8, v9);
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10);
  }
}

void sub_1D2CA24C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

morphun::dialog::SemanticFeature *std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(morphun::dialog::SemanticFeature *a1, const morphun::dialog::SemanticFeature *a2, long long *a3)
{
  long long v5 = (std::basic_string<char16_t> *)((char *)morphun::dialog::SemanticFeature::SemanticFeature(a1, a2) + 72);
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    v5->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1D2CA2530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL morphun::dialog::InflectableStringConcept::isExists(morphun::dialog::InflectableStringConcept *this)
{
  morphun::dialog::InflectableStringConcept::getDisplayValue(this, 0, (uint64_t)v3);
  int v1 = v4;
  if (v4) {
  return v1 != 0;
  }
}

uint64_t morphun::dialog::InflectableStringConcept::toSpeakableString(morphun::dialog::InflectableStringConcept *this)
{
  morphun::dialog::InflectableStringConcept::getDisplayValue(this, 1, (uint64_t)v4);
  if (v5)
  {
    uint64_t v2 = (*(uint64_t (**)(morphun::dialog::InflectableStringConcept *))(*(void *)this + 120))(this);
    npc<morphun::dialog::SemanticFeature const>(v2);
    if ((*(uint64_t (**)(void *, uint64_t))(v4[0] + 32))(v4, v2)) {
      operator new();
    }
    operator new();
  }
  return 0;
}

void sub_1D2CA2714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  MEMORY[0x1D942B8B0](v16, 0x10B3C40F7FF9C27);
  if (a16) {
  _Unwind_Resume(a1);
  }
}

void morphun::dialog::InflectableStringConcept::~InflectableStringConcept(void ***this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::InflectableStringConcept::~InflectableStringConcept(void ***this, uint64_t a2)
{
  unsigned __int8 v4 = *(void ***)a2;
  *this = *(void ***)a2;
  *(void *)((char *)*(v4 - 9) + (void)this) = *(void *)(a2 + 40);
  *(void *)((char *)*(*this - 7) + (void)this) = *(void *)(a2 + 48);
  *(void *)((char *)*(*this - 5) + (void)this) = *(void *)(a2 + 56);

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(this, (void ***)(a2 + 8));
}

void morphun::dialog::InflectableStringConcept::toString(morphun::dialog::InflectableStringConcept *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

uint64_t **morphun::dialog::InflectableStringConcept::InflectableStringConcept(uint64_t **this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SpeakableString *a3, const morphun::dialog::SpeakableString *a4)
{
  uint64_t v7 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureModel *)((char *)a2 + 8), (uint64_t)a3);
  uint64_t v8 = *(void *)a2;
  *uint64_t v7 = *(void *)a2;
  *(uint64_t **)((char *)this + *(void *)(v8 - 72)) = (uint64_t *)*((void *)a2 + 5);
  *(uint64_t **)((char *)this + *(*this - 7)) = (uint64_t *)*((void *)a2 + 6);
  *(uint64_t **)((char *)this + *(*this - 5)) = (uint64_t *)*((void *)a2 + 7);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SpeakableString *)(this + 5), a4);
  SpeakFeature = (const morphun::dialog::SemanticFeature *)morphun::dialog::SemanticFeatureConceptBase::getSpeakFeature((morphun::dialog::SemanticFeatureConceptBase *)this);
  npc<morphun::dialog::SemanticFeature const>((uint64_t)SpeakFeature);
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(this + 10, a4, SpeakFeature);
  return this;
}

void sub_1D2CA2ABC(_Unwind_Exception *a1)
{
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, v2);
  _Unwind_Resume(a1);
}

uint64_t **morphun::dialog::InflectableStringConcept::InflectableStringConcept(uint64_t **this, const morphun::dialog::SemanticFeatureModel *a2, const morphun::dialog::SpeakableString *a3)
{
  *this = (uint64_t *)&unk_1F29F4CC0;
  char v5 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A05430, (uint64_t)a2);
  void *v5 = &off_1F2A09668;
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SpeakableString *)(v5 + 5), a3);
  SpeakFeature = (const morphun::dialog::SemanticFeature *)morphun::dialog::SemanticFeatureConceptBase::getSpeakFeature((morphun::dialog::SemanticFeatureConceptBase *)this);
  npc<morphun::dialog::SemanticFeature const>((uint64_t)SpeakFeature);
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(this + 10, a3, SpeakFeature);
  return this;
}

void sub_1D2CA2B94(_Unwind_Exception *a1)
{
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, (void ***)&off_1F2A05430);
  _Unwind_Resume(a1);
}

morphun::dialog::InflectableStringConcept *morphun::dialog::InflectableStringConcept::InflectableStringConcept(morphun::dialog::InflectableStringConcept *this, const morphun::dialog::InflectableStringConcept *a2, uint64_t a3)
{
  long long v6 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::InflectableStringConcept *)((char *)a2 + 8), a3);
  uint64_t v7 = *(void *)a2;
  *(void *)long long v6 = *(void *)a2;
  *(void *)((char *)this + *(void *)(v7 - 72)) = *((void *)a2 + 5);
  *(void *)((char *)this + *(void *)(*(void *)this - 56)) = *((void *)a2 + 6);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 7);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::InflectableStringConcept *)((char *)this + 40), (const morphun::dialog::SpeakableString *)(a3 + 40));
  *((void *)this + 10) = &off_1F2A09998;
  if (*(char *)(a3 + 111) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 88), *(const std::basic_string<char16_t>::value_type **)(a3 + 88), *(void *)(a3 + 96));
  }
  else
  {
    long long v8 = *(_OWORD *)(a3 + 88);
    *((void *)this + 13) = *(void *)(a3 + 104);
    *(_OWORD *)((char *)this + 88) = v8;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)this + 14, a3 + 112);
  return this;
}

void sub_1D2CA2D98(_Unwind_Exception *a1)
{
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(v1, v2);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::InflectableStringConcept::~InflectableStringConcept(morphun::dialog::InflectableStringConcept *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::InflectableStringConcept::~InflectableStringConcept(void *a1)
{
}

{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

BOOL virtual thunk to'morphun::dialog::InflectableStringConcept::isExists(morphun::dialog::InflectableStringConcept *this)
{
  return morphun::dialog::InflectableStringConcept::isExists((morphun::dialog::InflectableStringConcept *)((char *)this + *(void *)(*(void *)this - 64)));
}

void virtual thunk to'morphun::dialog::InflectableStringConcept::toString(morphun::dialog::InflectableStringConcept *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

uint64_t virtual thunk to'morphun::dialog::InflectableStringConcept::toSpeakableString(morphun::dialog::InflectableStringConcept *this)
{
  return morphun::dialog::InflectableStringConcept::toSpeakableString((morphun::dialog::InflectableStringConcept *)((char *)this + *(void *)(*(void *)this - 48)));
}

uint64_t morphun::analysis::stemmer::HeLemmaFilter::stem(int a1, std::basic_string<char16_t> *this)
{
  std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  int v4 = (char)size;
  if ((size & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::size_type v5 = size - 2;
  if (size < 2) {
    goto LABEL_15;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v4 >= 0 ? this : (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  long long v8 = (char *)v7 + 2 * v5;
  do
  {
    int v9 = *(unsigned __int16 *)&v8[v6 * 2];
    int v10 = (unsigned __int16)word_1D2ED0F06[v6];
  }
  while (v10 == v9 && v6++ != 1);
  if (v10 == v9)
  {
    std::basic_string<char16_t>::resize(this, v5, 0);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1D2EC8E9C, 1uLL, word_1D2EC8EA0, 1uLL);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1D2EC8EA4, 1uLL, word_1D2ED0D78, 1uLL);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1D2EC8EA8, 1uLL, word_1D2EC8EAC, 1uLL);
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1D2EC8EB0, 1uLL, word_1D2EC8EB4, 1uLL);
    uint64_t v12 = (unsigned __int16 *)&unk_1D2EC8EB8;
    int v13 = (const std::basic_string<char16_t>::value_type *)&unk_1D2EC8EBC;
    uint64_t v14 = this;
    std::basic_string<char16_t>::size_type v15 = 1;
    std::basic_string<char16_t>::size_type v16 = 1;
  }
  else
  {
LABEL_15:
    morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)this, word_1D2ED0EF4, 3uLL, word_1D2ED0EEE, 2uLL);
    uint64_t v12 = (unsigned __int16 *)&unk_1D2ED0EFC;
    int v13 = &word_1D2ED0ED8;
    uint64_t v14 = this;
    std::basic_string<char16_t>::size_type v15 = 4;
    std::basic_string<char16_t>::size_type v16 = 2;
  }
  morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix((uint64_t)v14, v12, v15, v13, v16);
  unsigned int v18 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  char v19 = v18;
  std::basic_string<char16_t>::size_type v20 = this->__r_.__value_.__l.__size_;
  if ((v18 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v21 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v21 = this->__r_.__value_.__l.__size_;
  }
  if (v21)
  {
    std::basic_string<char16_t>::size_type v22 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    if ((v18 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v22 = this;
    }
    if (v22->__r_.__value_.__s.__data_[0] == 1492)
    {
      std::basic_string<char16_t>::erase(this, 0, v17);
      unsigned int v18 = HIBYTE(this->__r_.__value_.__r.__words[2]);
      std::basic_string<char16_t>::size_type v20 = this->__r_.__value_.__l.__size_;
      char v19 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
  }
  if (v19 >= 0) {
    return v18;
  }
  else {
    return v20;
  }
}

std::basic_string<char16_t> *morphun::analysis::stemmer::HeLemmaFilter::replaceSuffix(uint64_t a1, unsigned __int16 *a2, std::basic_string<char16_t>::size_type a3, const std::basic_string<char16_t>::value_type *a4, std::basic_string<char16_t>::size_type a5)
{
  double result = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
  std::basic_string<char16_t>::size_type v10 = HIBYTE(result->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(result->__r_.__value_.__r.__words[2]) < 0)
  {
    char v11 = (std::basic_string<char16_t> *)result->__r_.__value_.__r.__words[0];
    std::basic_string<char16_t>::size_type size = result->__r_.__value_.__l.__size_;
  }
  else
  {
    char v11 = result;
    std::basic_string<char16_t>::size_type size = HIBYTE(result->__r_.__value_.__r.__words[2]);
  }
  if (size < a3) {
    return result;
  }
  if (a3)
  {
    uint64_t v13 = -(uint64_t)a3;
    uint64_t v14 = (char *)v11 + 2 * size;
    do
    {
      int v15 = *(unsigned __int16 *)&v14[2 * v13];
      int v17 = *a2++;
      int v16 = v17;
    }
    while (v17 == v15 && v13++ != -1);
    if (v16 != v15) {
      return result;
    }
    if (!result)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
  }
  if ((v10 & 0x80) != 0) {
    std::basic_string<char16_t>::size_type v10 = result->__r_.__value_.__l.__size_;
  }

  return std::basic_string<char16_t>::replace(result, v10 - a3, a3, a4, a5);
}

void sub_1D2CA3254(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CA32B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::HeLemmaFilter::~HeLemmaFilter(morphun::analysis::stemmer::HeLemmaFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07EF0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07EF0);
}

uint64_t morphun::exception::Throwable::getMessage(morphun::exception::Throwable *this)
{
  return (uint64_t)this + 8;
}

uint64_t morphun::exception::Throwable::what(morphun::exception::Throwable *this)
{
  uint64_t result = (uint64_t)this + 32;
  if (*((char *)this + 55) < 0) {
    return *(void *)result;
  }
  return result;
}

void morphun::exception::Throwable::~Throwable(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F2A115A8;
  if (SHIBYTE(this[6].__vftable) < 0) {
    operator delete(this[4].__vftable);
  }
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }

  std::exception::~exception(this);
}

double morphun::exception::Throwable::Throwable(morphun::exception::Throwable *this)
{
  *(void *)this = &unk_1F2A115A8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1F2A115A8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

uint64_t morphun::exception::Throwable::Throwable(uint64_t a1, long long *a2)
{
  *(void *)a1 = &unk_1F2A115A8;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v4;
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v5 = *((char *)a2 + 23);
  if (v5 >= 0) {
    uint64_t v6 = (const std::basic_string<char16_t>::value_type *)a2;
  }
  else {
    uint64_t v6 = *(const std::basic_string<char16_t>::value_type **)a2;
  }
  if (v5 >= 0) {
    LODWORD(v7) = *((unsigned __int8 *)a2 + 23);
  }
  else {
    uint64_t v7 = *((void *)a2 + 1);
  }
  morphun::util::StringViewUtils::convert((std::string *)(a1 + 32), (uint64_t)v6, v7);
  return a1;
}

void sub_1D2CA34EC(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::ar::ArTokenizer::createTokenExtractor()
{
}

void sub_1D2CA3FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (*(char *)(v23 - 121) < 0) {
    operator delete(*(void **)(v23 - 144));
  }
  std::vector<morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*a10);
  icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)(a11 + 152));
  morphun::tokenizer::TokenExtractor::~TokenExtractor((morphun::tokenizer::TokenExtractor *)a11, (uint64_t *)&off_1F2A08150);
  MEMORY[0x1D942B8B0](a11, 0x10F3C40C2C6248CLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::JaCommonConceptFactory::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void *a4@<X8>)
{
  morphun::dialog::SpeakableString::SpeakableString(v7, a3);
  morphun::dialog::SpeakableString::operator+(a1, (uint64_t)v7, v8);
  morphun::dialog::SpeakableString::operator+((uint64_t)v8, a2, a4);
}

void sub_1D2CA418C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
}

void morphun::dialog::language::JaCommonConceptFactory::quote(const morphun::dialog::SpeakableString *a1@<X1>, void *a2@<X8>)
{
  if ((*(unsigned int (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 48))(a1))
  {
    int v5 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 32))(a1);
    std::operator+<char16_t>((uint64_t)&v8, word_1D2ED06EA, v5);
    std::basic_string<char16_t>::append(&v8, word_1D2ED06EE, 1uLL);
    std::basic_string<char16_t> __p = v8;
    memset(&v8, 0, sizeof(v8));
    morphun::dialog::SpeakableString::SpeakableString(a2, (long long *)&__p);
  }
  else
  {
    uint64_t v6 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 32))(a1);
    std::operator+<char16_t>((uint64_t)&v8, word_1D2ED06EA, v6);
    std::basic_string<char16_t>::append(&v8, word_1D2ED06EE, 1uLL);
    std::basic_string<char16_t> __p = v8;
    memset(&v8, 0, sizeof(v8));
    uint64_t v7 = (unsigned __int16 *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 40))(a1);
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)a2, (long long *)&__p, v7);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CA4350(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::JaCommonConceptFactory::createAndList()
{
}

void sub_1D2CA450C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (*(char *)(v26 - 57) < 0) {
    operator delete(*(void **)(v26 - 80));
  }
  _Unwind_Resume(a1);
}

void sub_1D2CA45F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::JaCommonConceptFactory::createOrList()
{
}

void sub_1D2CA478C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (*(char *)(v26 - 57) < 0) {
    operator delete(*(void **)(v26 - 80));
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::JaCommonConceptFactory::~JaCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05968);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05968);
}

void morphun::analysis::FiAnalyzer::addWordNormalizationFilter(morphun::analysis::FiAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CA49EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v16);
  morphun::analysis::TokenFilter::~TokenFilter(v15, (uint64_t *)&off_1F2A07EA8);
  MEMORY[0x1D942B8B0](v15, 0x10F3C40F653F602);
  _Unwind_Resume(a1);
}

void morphun::analysis::FiAnalyzer::addStopFilter(morphun::analysis::FiAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CA4AF8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::FiAnalyzer::~FiAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06DC0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06DC0);
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::getDisplayValue(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t TheBestDisplayValue = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(void *)(a2 + 8), *(void *)(a2 + 16), a3);
  if (!TheBestDisplayValue) {
    return 0;
  }
  uint64_t v8 = TheBestDisplayValue;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    __str.__r_.__value_.__r.__words[2] = *(void *)(v9 + 16);
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v10;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_144;
    }
    return 0;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v74, v8, a3);
  std::basic_string<char16_t>::size_type v13 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  p_str = &__str;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::basic_string<char16_t>::size_type v13 = __str.__r_.__value_.__l.__size_;
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  int v15 = *(void **)(a1 + 120);
LABEL_12:
  if (v15 == *(void **)(a1 + 128))
  {
    uint64_t v29 = 0;
    uint64_t i = 0;
    goto LABEL_49;
  }
  for (uint64_t i = (unsigned __int16 *)v15[1]; ; i += 24)
  {
    if (i == (unsigned __int16 *)v15[2])
    {
      v15 += 4;
      goto LABEL_12;
    }
    std::basic_string<char16_t>::size_type v17 = *((unsigned __int8 *)i + 23);
    if (*((char *)i + 23) < 0)
    {
      std::basic_string<char16_t>::size_type v19 = *((void *)i + 1);
      if (!v19) {
        continue;
      }
      unsigned int v18 = *(unsigned __int16 **)i;
    }
    else
    {
      if (!*((unsigned char *)i + 23)) {
        continue;
      }
      unsigned int v18 = i;
      std::basic_string<char16_t>::size_type v19 = *((unsigned __int8 *)i + 23);
    }
    if (v13 >= v19)
    {
      std::basic_string<char16_t>::size_type v20 = *((unsigned __int8 *)i + 23);
      std::basic_string<char16_t>::size_type v21 = v19 - 1;
      std::basic_string<char16_t>::size_type v22 = p_str;
      do
      {
        int v24 = (unsigned __int16)v22->__r_.__value_.__s.__data_[0];
        std::basic_string<char16_t>::size_type v22 = (std::basic_string<char16_t> *)((char *)v22 + 2);
        int v23 = v24;
        int v26 = *v18++;
        int v25 = v26;
        BOOL v28 = v21-- != 0;
      }
      while (v25 == v23 && v28);
      if (v25 == v23)
      {
        uint64_t v29 = *v15;
        uint64_t v30 = *(unsigned __int8 *)(*v15 + 9);
        if (!*(unsigned char *)(*v15 + 9)) {
          break;
        }
        if ((v17 & 0x80) != 0)
        {
          std::basic_string<char16_t>::size_type v20 = *((void *)i + 1);
          if (v13 <= v20) {
            break;
          }
        }
        else if (v13 <= v17)
        {
          break;
        }
        if (p_str->__r_.__value_.__s.__data_[v20] == 32) {
          break;
        }
      }
    }
  }
  if (v29 && i)
  {
    if ((v17 & 0x80) != 0) {
      std::basic_string<char16_t>::size_type v17 = *((void *)i + 1);
    }
    if ((uint64_t)v13 >= (uint64_t)(v17 + v30)) {
      std::basic_string<char16_t>::size_type v31 = v17 + v30;
    }
    else {
      std::basic_string<char16_t>::size_type v31 = v13;
    }
    std::basic_string<char16_t>::basic_string(&v79, &__str, v31, 0xFFFFFFFFFFFFFFFFLL, v12);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> __str = v79;
  }
LABEL_49:
  LOBYTE(v72.__r_.__value_.__l.__data_) = 0;
  char v73 = 0;
  long long v68 = *(_OWORD *)(a1 + 8);
  __int16 v32 = operator new(0x10uLL);
  _OWORD *v32 = v68;
  BOOL hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v32, (uint64_t)(v32 + 1));
  operator delete(v32);
  if (!hasAnyFeatures) {
    goto LABEL_131;
  }
  uint64_t v34 = *(void *)(a1 + 384);
  if (!v34)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v35 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v34 + 24))(v34, &__str);
  npc<morphun::TokenChain>(v35);
  if ((*(unsigned int (**)(uint64_t))(*(void *)v35 + 32))(v35) == 1)
  {
    __p.__r_.__value_.__r.__words[0] = 0;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v37 = &__str;
    }
    else {
      int v37 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v38 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v38 = __str.__r_.__value_.__l.__size_;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 144), (uint64_t)&__p, (const UChar *)v37, v38);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v39 = &__str;
    }
    else {
      uint64_t v39 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v40 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v40 = __str.__r_.__value_.__l.__size_;
    }
    morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::inflectWord((uint64_t)&v79, (uint64_t *)a1, v39, v40, (uint64_t)__p.__r_.__value_.__l.__data_, a3, a4);
    __n128 v41 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v72, (__n128 *)&v79);
    if (v80 && SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t> v42 = (void *)v79.__r_.__value_.__r.__words[0];
      goto LABEL_126;
    }
    goto LABEL_127;
  }
  memset(&v78, 0, sizeof(v78));
  long long v43 = *(_OWORD *)(v35 + 8);
  uint64_t v44 = *(void *)(v35 + 16);
  if (v44) {
    uint64_t v45 = *(void *)(v44 + 80);
  }
  else {
    uint64_t v45 = 0;
  }
  char v46 = 0;
  while (2)
  {
    uint64_t v69 = *((void *)&v43 + 1);
    uint64_t v47 = v43;
    if (v45 == (void)v43)
    {
      std::basic_string<char16_t> __p = v78;
      char v71 = 1;
      goto LABEL_123;
    }
    uint64_t v48 = (_OWORD *)(v43 + 16);
    if (v46 & 1 | !morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection((morphun::grammar::synthesis::GrammarSynthesizerUtil *)v43, v36))
    {
      int v49 = *(char *)(v47 + 39);
      if (v49 >= 0) {
        uint64_t v50 = (const std::basic_string<char16_t>::value_type *)(v47 + 16);
      }
      else {
        uint64_t v50 = *(const std::basic_string<char16_t>::value_type **)(v47 + 16);
      }
      if (v49 >= 0) {
        std::basic_string<char16_t>::size_type v51 = *(unsigned __int8 *)(v47 + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v51 = *(void *)(v47 + 24);
      }
      std::basic_string<char16_t>::append(&v78, v50, v51);
      goto LABEL_120;
    }
    uint64_t v77 = 0;
    int v52 = *(char *)(v47 + 39);
    if (v52 >= 0) {
      unint64_t v53 = (const UChar *)(v47 + 16);
    }
    else {
      unint64_t v53 = *(const UChar **)(v47 + 16);
    }
    if (v52 >= 0) {
      uint64_t v54 = *(unsigned __int8 *)(v47 + 39);
    }
    else {
      uint64_t v54 = *(void *)(v47 + 24);
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 144), (uint64_t)&v77, v53, v54);
    if ((*(void *)(a1 + 424) & v77) != 0)
    {
      int v55 = *(char *)(v47 + 39);
      if (v55 >= 0) {
        __n128 v56 = (const std::basic_string<char16_t>::value_type *)(v47 + 16);
      }
      else {
        __n128 v56 = *(const std::basic_string<char16_t>::value_type **)(v47 + 16);
      }
      if (v55 >= 0) {
        std::basic_string<char16_t>::size_type v57 = *(unsigned __int8 *)(v47 + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v57 = *(void *)(v47 + 24);
      }
      std::basic_string<char16_t>::append(&v78, v56, v57);
      char v46 = 1;
      goto LABEL_120;
    }
    int v58 = *(char *)(v47 + 39);
    if (v58 >= 0) {
      uint64_t v59 = (void *)(v47 + 16);
    }
    else {
      uint64_t v59 = *(void **)(v47 + 16);
    }
    if (v58 >= 0) {
      unint64_t v60 = *(unsigned __int8 *)(v47 + 39);
    }
    else {
      unint64_t v60 = *(void *)(v47 + 24);
    }
    morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::inflectWord((uint64_t)&v79, (uint64_t *)a1, v59, v60, v77, a3, a4);
    if (*(char *)(v47 + 39) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v76, *(const std::basic_string<char16_t>::value_type **)(v47 + 16), *(void *)(v47 + 24));
    }
    else
    {
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = *v48;
      v76.__r_.__value_.__r.__words[2] = *(void *)(v47 + 32);
    }
    if (v80)
    {
      std::basic_string<char16_t>::operator=(&v76, &v79);
      goto LABEL_106;
    }
    if (a4)
    {
LABEL_106:
      if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string v61 = &v76;
      }
      else {
        std::string v61 = (std::basic_string<char16_t> *)v76.__r_.__value_.__r.__words[0];
      }
      if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v62 = HIBYTE(v76.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v62 = v76.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v78, (const std::basic_string<char16_t>::value_type *)v61, v62);
      int v63 = 1;
    }
    else
    {
      int v63 = 0;
    }
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v76.__r_.__value_.__l.__data_);
    }
    if (v80 && SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    if (v63)
    {
      char v46 = 0;
LABEL_120:
      npc<morphun::Token const>(v47);
      *((void *)&v43 + 1) = v69;
      *(void *)&long long v43 = *(void *)(v47 + 80);
      continue;
    }
    break;
  }
  LOBYTE(__p.__r_.__value_.__l.__data_) = 0;
  char v71 = 0;
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v78.__r_.__value_.__l.__data_);
  }
LABEL_123:
  __n128 v41 = std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v72, (__n128 *)&__p);
  if (v71 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t> v42 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_126:
    operator delete(v42);
  }
LABEL_127:
  if (v73)
  {
    std::basic_string<char16_t>::operator=(&__str, &v72);
    goto LABEL_130;
  }
  if (a4)
  {
LABEL_130:
    (*(void (**)(uint64_t))(*(void *)v35 + 16))(v35);
LABEL_131:
    if (v29)
    {
      std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&__p, (uint64_t)v74);
      uint64_t v64 = *((void *)i + 3);
      for (uint64_t j = *((void *)i + 4); v64 != j; v64 += 32)
      {
        if (*(void *)v64)
        {
          std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>((morphun::dialog::SemanticFeature *)&v79, *(const morphun::dialog::SemanticFeature **)v64, (long long *)(v64 + 8));
          std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>((uint64_t **)&__p, (uint64_t)&v79, (uint64_t)&v79);
          if (v82 < 0) {
            operator delete(v81);
          }
        }
      }
      operator new();
    }
    operator new();
  }
  (*(void (**)(uint64_t, __n128))(*(void *)v35 + 16))(v35, v41);
  if (v73 && SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v72.__r_.__value_.__l.__data_);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v74[1]);
  if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_144:
  }
    operator delete(__str.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1D2CA5360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,void **a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  (*(void (**)(uint64_t))(*(void *)v45 + 16))(v45);
  if (a22 && a21 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a24);
  if (a31 < 0) {
    operator delete(a26);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CA5584(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::inflectWord(uint64_t a1, uint64_t *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14 = (uint64_t *)operator new(0x10uLL);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + 1);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v123, a6, v14, v14 + 2);
  operator delete(v14);
  uint64_t v15 = a2[3];
  int v16 = (uint64_t *)operator new(8uLL);
  *int v16 = v15;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v122, a6, v16, v16 + 1);
  operator delete(v16);
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, (uint64_t)(a2 + 19), a3, a4, &v123, &v122);
  int v17 = v121;
  if (!v121)
  {
    if ((a7 & 1) == 0)
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      goto LABEL_191;
    }
    if (a4 >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v20 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v20 = a4 | 3;
      }
      p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v20 + 1);
      __dst.__r_.__value_.__l.__size_ = a4;
      __dst.__r_.__value_.__r.__words[2] = v21 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = a4;
      p_dst = &__dst;
      if (!a4)
      {
LABEL_15:
        p_dst->__r_.__value_.__s.__data_[a4] = 0;
        if (a5) {
          goto LABEL_186;
        }
        uint64_t v22 = a2[2];
        npc<morphun::dialog::SemanticFeature const>(v22);
        if ((void *)(a6 + 8) == std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a6, v22))
        {
LABEL_59:
          morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v124, a6, a2[1]);
          uint64_t v46 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v45);
          if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type size = HIBYTE(v124.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type size = v124.__r_.__value_.__l.__size_;
          }
          uint64_t v48 = *(unsigned __int8 *)(v46 + 23);
          int v49 = (char)v48;
          if ((v48 & 0x80u) != 0) {
            uint64_t v48 = *(void *)(v46 + 8);
          }
          if (size == v48)
          {
            if (!size)
            {
              BOOL v59 = 1;
              if ((SHIBYTE(v124.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_81:
                if (v59)
                {
                  std::basic_string<char16_t>::size_type v60 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                    std::basic_string<char16_t>::size_type v60 = __dst.__r_.__value_.__l.__size_;
                  }
                  if (v60)
                  {
                    std::string v61 = &__dst;
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      std::string v61 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    }
                    int v62 = (unsigned __int16)v61->__r_.__value_.__s.__data_[v60 - 1];
                    if (v62 == 120 || v62 == 115)
                    {
                      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                      {
                        std::basic_string<char16_t>::__init_copy_ctor_external(&v117, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
                        goto LABEL_183;
                      }
                      *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                      std::basic_string<char16_t>::size_type v63 = __dst.__r_.__value_.__r.__words[2];
LABEL_113:
                      v117.__r_.__value_.__r.__words[2] = v63;
LABEL_183:
                      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(__dst.__r_.__value_.__l.__data_);
                      }
                      std::basic_string<char16_t> __dst = v117;
                      goto LABEL_186;
                    }
                  }
                  uint64_t v64 = morphun::util::LocaleUtils::SPANISH((morphun::util::LocaleUtils *)v46);
                  if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v64, (uint64_t)&__dst))
                  {
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      std::basic_string<char16_t>::size_type v66 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                    }
                    else {
                      std::basic_string<char16_t>::size_type v66 = __dst.__r_.__value_.__l.__size_;
                    }
                    std::basic_string<char16_t> v67 = &v117;
                    std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v117, v66 + 1);
                    if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      std::basic_string<char16_t> v67 = (std::basic_string<char16_t> *)v117.__r_.__value_.__r.__words[0];
                    }
                    if (v66)
                    {
                      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                        long long v68 = &__dst;
                      }
                      else {
                        long long v68 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                      }
                      memmove(v67, v68, 2 * v66);
                    }
                    *(_DWORD *)((char *)&v67->__r_.__value_.__l.__data_ + 2 * v66) = 115;
                    goto LABEL_183;
                  }
                  std::basic_string<char16_t>::size_type v69 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                    std::basic_string<char16_t>::size_type v69 = __dst.__r_.__value_.__l.__size_;
                  }
                  if (v69)
                  {
                    std::basic_string<char16_t>::size_type v70 = v69 - 1;
                    char v71 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      char v71 = &__dst;
                    }
                    if (v71->__r_.__value_.__s.__data_[v70] == 122)
                    {
                      std::basic_string<char16_t> v72 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v70, v65);
                      std::basic_string<char16_t>::append(v72, (const std::basic_string<char16_t>::value_type *)"c", 3uLL);
LABEL_112:
                      *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&v124.__r_.__value_.__l.__data_;
                      std::basic_string<char16_t>::size_type v63 = v124.__r_.__value_.__r.__words[2];
                      goto LABEL_113;
                    }
                    if (v69 >= 3)
                    {
                      uint64_t v91 = 0;
                      long long v92 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                        long long v92 = &__dst;
                      }
                      uint64_t v93 = (uint64_t)v92 + 2 * v69 - 6;
                      do
                      {
                        int v94 = *(unsigned __int16 *)(v93 + v91);
                        int v95 = *(unsigned __int16 *)&aI_17[v91];
                        BOOL v96 = v95 != v94 || v91 == 4;
                        v91 += 2;
                      }
                      while (!v96);
                      if (v95 == v94)
                      {
                        uint64_t v97 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v69 - 2, v65);
                        std::basic_string<char16_t>::append(v97, L"ones", 4uLL);
                        goto LABEL_112;
                      }
                    }
                    uint64_t v114 = &__dst;
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      uint64_t v114 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    }
                    int v115 = (unsigned __int16)v114->__r_.__value_.__s.__data_[v70];
                    if (v115 == 103)
                    {
                      std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v70, v65);
                      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v117, &v124, L"gues");
LABEL_193:
                      if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(v124.__r_.__value_.__l.__data_);
                      }
                      goto LABEL_183;
                    }
                    if (v115 == 99)
                    {
                      std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v70, v65);
                      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v117, &v124, (std::basic_string<char16_t>::value_type *)"q");
                      goto LABEL_193;
                    }
                  }
                  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v117, (const void **)&__dst.__r_.__value_.__l.__data_, L"es");
                  goto LABEL_183;
                }
LABEL_186:
                *(_OWORD *)a1 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                std::basic_string<char16_t>::size_type v18 = __dst.__r_.__value_.__r.__words[2];
                goto LABEL_187;
              }
LABEL_80:
              operator delete(v124.__r_.__value_.__l.__data_);
              goto LABEL_81;
            }
            if (v49 >= 0) {
              uint64_t v50 = (unsigned __int16 *)v46;
            }
            else {
              uint64_t v50 = *(unsigned __int16 **)v46;
            }
            std::basic_string<char16_t>::size_type v51 = (std::basic_string<char16_t> *)v124.__r_.__value_.__r.__words[0];
            if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v51 = &v124;
            }
            std::basic_string<char16_t>::size_type v52 = size - 1;
            do
            {
              int v54 = (unsigned __int16)v51->__r_.__value_.__s.__data_[0];
              std::basic_string<char16_t>::size_type v51 = (std::basic_string<char16_t> *)((char *)v51 + 2);
              int v53 = v54;
              int v56 = *v50++;
              int v55 = v56;
              BOOL v58 = v52-- != 0;
              BOOL v59 = v55 == v53;
            }
            while (v55 == v53 && v58);
          }
          else
          {
            BOOL v59 = 0;
          }
          if ((SHIBYTE(v124.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_81;
          }
          goto LABEL_80;
        }
        int v23 = &v116;
        morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v116, a6, a2[2]);
        int v25 = SHIBYTE(v116.__r_.__value_.__r.__words[2]);
        int v26 = (void *)v116.__r_.__value_.__r.__words[0];
        if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        {
          std::basic_string<char16_t>::size_type v27 = HIBYTE(v116.__r_.__value_.__r.__words[2]);
        }
        else
        {
          std::basic_string<char16_t>::size_type v27 = v116.__r_.__value_.__l.__size_;
          int v23 = (std::basic_string<char16_t> *)v116.__r_.__value_.__r.__words[0];
        }
        uint64_t v28 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v24);
        uint64_t v30 = *(unsigned __int8 *)(v28 + 23);
        int v31 = (char)v30;
        if ((v30 & 0x80u) != 0) {
          uint64_t v30 = *(void *)(v28 + 8);
        }
        if (v27 == v30)
        {
          if (v27)
          {
            if (v31 >= 0) {
              __int16 v32 = (unsigned __int16 *)v28;
            }
            else {
              __int16 v32 = *(unsigned __int16 **)v28;
            }
            std::basic_string<char16_t>::size_type v33 = v27;
            uint64_t v34 = v23;
            while (*v32 == (unsigned __int16)v34->__r_.__value_.__s.__data_[0])
            {
              uint64_t v34 = (std::basic_string<char16_t> *)((char *)v34 + 2);
              ++v32;
              if (!--v33) {
                goto LABEL_30;
              }
            }
          }
          else
          {
LABEL_30:
            std::basic_string<char16_t>::size_type v35 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v35 = __dst.__r_.__value_.__l.__size_;
            }
            if (v35)
            {
              long long v36 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                long long v36 = &__dst;
              }
              if (v36->__r_.__value_.__s.__data_[v35 - 1] != 111)
              {
                if (v35 < 2) {
                  goto LABEL_125;
                }
                uint64_t v73 = 0;
                uint64_t v74 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v74 = &__dst;
                }
                uint64_t v75 = (uint64_t)v74 + 2 * v35 - 4;
                do
                {
                  int v76 = *(unsigned __int16 *)(v75 + v73 * 2);
                  int v77 = (unsigned __int16)word_1D2ECEEFA[v73];
                }
                while (v77 == v76 && v73++ != 1);
                if (v77 != v76)
                {
LABEL_125:
                  std::basic_string<char16_t>::size_type v79 = v35 - 1;
                  char v80 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    char v80 = &__dst;
                  }
                  if (v80->__r_.__value_.__s.__data_[v79] == 97)
                  {
                    int64_t v81 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v79, v29);
                    std::basic_string<char16_t>::append(v81, word_1D2ECDD76, 1uLL);
LABEL_176:
                    *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&v124.__r_.__value_.__l.__data_;
                    std::basic_string<char16_t>::size_type v44 = v124.__r_.__value_.__r.__words[2];
                    goto LABEL_53;
                  }
                  std::basic_string<char16_t>::size_type v98 = v35 - 2;
                  if (v35 >= 2)
                  {
                    uint64_t v99 = 0;
                    int v100 = &__dst;
                    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      int v100 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                    }
                    uint64_t v101 = (char *)v100 + 2 * v98;
                    do
                    {
                      int v102 = *(unsigned __int16 *)&v101[v99 * 2];
                      int v103 = (unsigned __int16)word_1D2ECEEBE[v99];
                    }
                    while (v103 == v102 && v99++ != 1);
                    if (v103 == v102)
                    {
                      unsigned __int8 v105 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v98, v29);
                      std::basic_string<char16_t>::append(v105, word_1D2ECEEFA, 2uLL);
                      goto LABEL_176;
                    }
                  }
                }
              }
            }
          }
        }
        uint64_t v37 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v28);
        uint64_t v39 = *(unsigned __int8 *)(v37 + 23);
        int v40 = (char)v39;
        if ((v39 & 0x80u) != 0) {
          uint64_t v39 = *(void *)(v37 + 8);
        }
        if (v27 == v39)
        {
          if (v27)
          {
            if (v40 >= 0) {
              __n128 v41 = (unsigned __int16 *)v37;
            }
            else {
              __n128 v41 = *(unsigned __int16 **)v37;
            }
            while (*v41 == (unsigned __int16)v23->__r_.__value_.__s.__data_[0])
            {
              int v23 = (std::basic_string<char16_t> *)((char *)v23 + 2);
              ++v41;
              if (!--v27) {
                goto LABEL_45;
              }
            }
            goto LABEL_51;
          }
LABEL_45:
          std::basic_string<char16_t>::size_type v42 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v42 = __dst.__r_.__value_.__l.__size_;
          }
          if (v42)
          {
            long long v43 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              long long v43 = &__dst;
            }
            if (v43->__r_.__value_.__s.__data_[v42 - 1] != 97)
            {
              if (v42 < 2) {
                goto LABEL_139;
              }
              uint64_t v82 = 0;
              unsigned __int8 v83 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                unsigned __int8 v83 = &__dst;
              }
              uint64_t v84 = (uint64_t)v83 + 2 * v42 - 4;
              do
              {
                int v85 = *(unsigned __int16 *)(v84 + v82 * 2);
                int v86 = (unsigned __int16)word_1D2ECEEBE[v82];
              }
              while (v86 == v85 && v82++ != 1);
              if (v86 != v85)
              {
LABEL_139:
                std::basic_string<char16_t>::size_type v88 = v42 - 1;
                unint64_t v89 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  unint64_t v89 = &__dst;
                }
                if (v89->__r_.__value_.__s.__data_[v88] == 111)
                {
                  uint64_t v90 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v88, v38);
                  std::basic_string<char16_t>::append(v90, (const std::basic_string<char16_t>::value_type *)"a", 1uLL);
                  goto LABEL_176;
                }
                std::basic_string<char16_t>::size_type v106 = v42 - 2;
                if (v42 >= 2)
                {
                  uint64_t v107 = 0;
                  unint64_t v108 = &__dst;
                  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                    unint64_t v108 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
                  }
                  uint64_t v109 = (char *)v108 + 2 * v106;
                  do
                  {
                    int v110 = *(unsigned __int16 *)&v109[v107 * 2];
                    int v111 = (unsigned __int16)word_1D2ECEEFA[v107];
                  }
                  while (v111 == v110 && v107++ != 1);
                  if (v111 == v110)
                  {
                    long long v113 = std::basic_string<char16_t>::basic_string(&v124, &__dst, 0, v106, v38);
                    std::basic_string<char16_t>::append(v113, word_1D2ECEEBE, 2uLL);
                    goto LABEL_176;
                  }
                }
              }
            }
          }
        }
LABEL_51:
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v117, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          goto LABEL_55;
        }
        *(_OWORD *)&v117.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
        std::basic_string<char16_t>::size_type v44 = __dst.__r_.__value_.__r.__words[2];
LABEL_53:
        v117.__r_.__value_.__r.__words[2] = v44;
LABEL_55:
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> __dst = v117;
        if (v25 < 0) {
          operator delete(v26);
        }
        goto LABEL_59;
      }
    }
    memmove(p_dst, a3, 2 * a4);
    goto LABEL_15;
  }
  if ((SHIBYTE(v120) & 0x80000000) == 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)__p;
    std::basic_string<char16_t>::size_type v18 = v120;
LABEL_187:
    *(void *)(a1 + 16) = v18;
    goto LABEL_188;
  }
  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
LABEL_188:
  *(unsigned char *)(a1 + 24) = 1;
  if (v17 && SHIBYTE(v120) < 0) {
    operator delete(__p[0]);
  }
LABEL_191:
  __p[0] = &v122;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  __p[0] = &v123;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_1D2CA5E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30)
{
  if (*(char *)(v33 - 81) < 0) {
    operator delete(*(void **)(v33 - 104));
  }
  if (v31 < 0) {
    operator delete(v30);
  }
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v32)
  {
    if (a28 < 0) {
      operator delete(a23);
    }
  }
  a23 = &a30;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a23);
  a23 = (char *)(v33 - 128);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a23);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::~EsGrammarSynthesizer_EsDisplayFunction(morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction *this)
{
  morphun::grammar::synthesis::EsGrammarSynthesizer_EsDisplayFunction::~EsGrammarSynthesizer_EsDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void **v3;

  *(void *)this = &unk_1F2A0C618;
  uint64_t v2 = *((void *)this + 48);
  *((void *)this + 48) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  int v3 = (void **)((char *)this + 120);
  std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__destroy_vector::operator()[abi:ne180100](&v3);
  *((void *)this + 4) = &unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 13));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 10));
}

uint64_t **com::apple::siri::tokenizer::data::config_ko::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E695E008;
  long long v4 = "c";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::ArGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2CA73EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, morphun::dialog::DictionaryLookupInflector *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  MEMORY[0x1D942B8B0](v37, 0x1012C40EC159624);
  while (1)
  {
    if (*(char *)(v36 - 1) < 0) {
      operator delete(*(void **)(v36 - 24));
    }
    v36 -= 24;
    if (v36 == v38 - 192)
    {
      std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)v35 + 27));
      morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v35, (uint64_t *)&off_1F29F33C8);
      MEMORY[0x1D942B8B0](v35, 0x10F3C4048E31FC7);
      if (a24 < 0) {
        operator delete(__p);
      }
      std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a28);
      _Unwind_Resume(a1);
    }
  }
}

void std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(uint64_t **a1, int a2, _WORD *a3)
{
  uint64_t v6 = operator new(0x38uLL);
  v6[8] = a2;
  *((void *)v6 + 5) = a3;
  if (*a3)
  {
    uint64_t v7 = 0;
    do
      uint64_t v8 = v7 + 1;
    while (a3[++v7]);
  }
  else
  {
    uint64_t v8 = 0;
  }
  *((void *)v6 + 6) = v8;
  long long v10 = a1 + 1;
  char v11 = a1[1];
  if (v11)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v12 = (uint64_t **)v11;
        int v13 = *((_DWORD *)v11 + 8);
        if (v13 <= a2) {
          break;
        }
        char v11 = *v12;
        long long v10 = v12;
        if (!*v12) {
          goto LABEL_14;
        }
      }
      if (v13 >= a2) {
        break;
      }
      char v11 = v12[1];
      if (!v11)
      {
        long long v10 = v12 + 1;
        goto LABEL_14;
      }
    }
    operator delete(v6);
  }
  else
  {
    uint64_t v12 = a1 + 1;
LABEL_14:
    std::__tree<std::u16string_view>::__insert_node_at(a1, (uint64_t)v12, v10, (uint64_t *)v6);
  }
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounCount>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CA7B98(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::Person>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CA7BFC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::ArGrammarSynthesizer::PronounGender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CA7C60(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::EnAnalyzer::addWordNormalizationFilter(morphun::analysis::EnAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2CA818C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (*(char *)(v35 - 121) < 0) {
    operator delete(*(void **)(v35 - 144));
  }
  MEMORY[0x1D942B8B0](v34, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::EnAnalyzer::addStopFilter(morphun::analysis::EnAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CA83F8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::EnAnalyzer::~EnAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06D40);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06D40);
}

uint64_t morphun::Token_Explicit::getLabel(morphun::Token_Explicit *this)
{
  return (uint64_t)this + 96;
}

void morphun::Token_Explicit::newInstance(morphun::Token_Explicit *this)
{
}

void sub_1D2CA85F0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C40F5E5B515);
  _Unwind_Resume(a1);
}

uint64_t morphun::Token_Explicit::Token_Explicit(uint64_t a1, int a2, int a3, void *a4, unint64_t a5, void *a6, unint64_t a7, uint64_t a8, void *__src, unint64_t a10)
{
  *(void *)a1 = &unk_1F29F42D8;
  char v11 = morphun::Token_Group::Token_Group((morphun::Token *)a1, (uint64_t *)&off_1F2A05000, a2, a3, a4, a5, a6, a7, a8);
  *(void *)char v11 = &off_1F2A086C0;
  uint64_t v12 = (char *)v11 + 96;
  if (a10 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a10 >= 0xB)
  {
    uint64_t v13 = (a10 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a10 | 3) != 0xB) {
      uint64_t v13 = a10 | 3;
    }
    uint64_t v12 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v13 + 1);
    *(void *)(a1 + 104) = a10;
    *(void *)(a1 + 112) = v14 | 0x8000000000000000;
    *(void *)(a1 + 96) = v12;
  }
  else
  {
    *(unsigned char *)(a1 + 119) = a10;
    if (!a10) {
      goto LABEL_9;
    }
  }
  memmove(v12, __src, 2 * a10);
LABEL_9:
  *((_WORD *)v12 + a10) = 0;
  return a1;
}

void sub_1D2CA871C(_Unwind_Exception *a1)
{
  morphun::Token_Group::~Token_Group(v1, (void **)&off_1F2A05000);
  _Unwind_Resume(a1);
}

void morphun::Token_Explicit::~Token_Explicit(void **this)
{
  *this = &off_1F2A086C0;
  if (*((char *)this + 119) < 0) {
    operator delete(this[12]);
  }
  morphun::Token_Group::~Token_Group((morphun::Token_Group *)this, (void **)&off_1F2A05000);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  *this = &off_1F2A086C0;
  if (*((char *)this + 119) < 0) {
    operator delete(this[12]);
  }

  morphun::Token_Group::~Token_Group((morphun::Token_Group *)this, (void **)&off_1F2A05000);
}

void morphun::Token_Explicit::toString(morphun::Token_Explicit *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  void (***v26)(void **__return_ptr);
  void **v27;
  std::basic_string<char16_t>::size_type v28;
  void **v29;
  std::basic_string<char16_t>::size_type v30;
  const std::basic_string<char16_t>::value_type *v31;
  char *v32;
  const std::basic_string<char16_t>::value_type *v33;
  int v34;
  const std::basic_string<char16_t>::value_type *v35;
  std::basic_string<char16_t>::size_type v36;
  void **v37;
  std::basic_string<char16_t>::size_type v38;
  void *__p[2];
  unsigned __int8 v40;
  void *v41[2];
  unsigned __int8 v42;
  void *v43[2];
  unsigned __int8 v44;
  void *v45[2];
  unsigned __int8 v46;
  void *v47[2];
  unsigned __int8 v48;
  void *v49[2];
  unsigned __int8 v50;
  std::basic_string<char16_t> v51;
  void *v52[2];
  unsigned __int8 v53;
  std::basic_string<char16_t> v54;
  std::basic_string<char16_t> __dst;
  std::basic_string<char16_t> v56;
  std::basic_string<char16_t> v57;
  std::basic_string<char16_t> v58;
  std::basic_string<char16_t> v59;
  std::basic_string<char16_t> v60;
  std::basic_string<char16_t> v61;
  std::basic_string<char16_t> v62;
  std::basic_string<char16_t> v63;
  std::basic_string<char16_t> v64;
  std::basic_string<char16_t> v65;
  std::basic_string<char16_t> v66;

  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Explicit{begin=");
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 2), &v54);
  int v4 = SHIBYTE(v54.__r_.__value_.__r.__words[2]);
  uint64_t v5 = (void *)v54.__r_.__value_.__r.__words[0];
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v6 = &v54;
  }
  else {
    uint64_t v6 = (std::basic_string<char16_t> *)v54.__r_.__value_.__r.__words[0];
  }
  if ((v54.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(v54.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = v54.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v6, size);
  int v56 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v52, (char *)L", end=");
  if ((v53 & 0x80u) == 0) {
    uint64_t v8 = v52;
  }
  else {
    uint64_t v8 = (void **)v52[0];
  }
  if ((v53 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v9 = v53;
  }
  else {
    std::basic_string<char16_t>::size_type v9 = (std::basic_string<char16_t>::size_type)v52[1];
  }
  std::basic_string<char16_t>::append(&v56, (const std::basic_string<char16_t>::value_type *)v8, v9);
  std::basic_string<char16_t>::size_type v57 = v56;
  memset(&v56, 0, sizeof(v56));
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 3), &v51);
  int v10 = SHIBYTE(v51.__r_.__value_.__r.__words[2]);
  char v11 = (void *)v51.__r_.__value_.__r.__words[0];
  if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v12 = &v51;
  }
  else {
    uint64_t v12 = (std::basic_string<char16_t> *)v51.__r_.__value_.__r.__words[0];
  }
  if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v13 = HIBYTE(v51.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v13 = v51.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v57, (const std::basic_string<char16_t>::value_type *)v12, v13);
  BOOL v58 = v57;
  memset(&v57, 0, sizeof(v57));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v49, ",");
  if ((v50 & 0x80u) == 0) {
    uint64_t v14 = v49;
  }
  else {
    uint64_t v14 = (void **)v49[0];
  }
  if ((v50 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v15 = v50;
  }
  else {
    std::basic_string<char16_t>::size_type v15 = (std::basic_string<char16_t>::size_type)v49[1];
  }
  std::basic_string<char16_t>::append(&v58, (const std::basic_string<char16_t>::value_type *)v14, v15);
  BOOL v59 = v58;
  memset(&v58, 0, sizeof(v58));
  int v16 = *((char *)this + 39);
  if (v16 >= 0) {
    int v17 = (const std::basic_string<char16_t>::value_type *)((char *)this + 16);
  }
  else {
    int v17 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 2);
  }
  if (v16 >= 0) {
    std::basic_string<char16_t>::size_type v18 = *((unsigned __int8 *)this + 39);
  }
  else {
    std::basic_string<char16_t>::size_type v18 = *((void *)this + 3);
  }
  std::basic_string<char16_t>::append(&v59, v17, v18);
  std::basic_string<char16_t>::size_type v60 = v59;
  memset(&v59, 0, sizeof(v59));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v47, "'");
  if ((v48 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v19 = v47;
  }
  else {
    std::basic_string<char16_t>::size_type v19 = (void **)v47[0];
  }
  if ((v48 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v20 = v48;
  }
  else {
    std::basic_string<char16_t>::size_type v20 = (std::basic_string<char16_t>::size_type)v47[1];
  }
  std::basic_string<char16_t>::append(&v60, (const std::basic_string<char16_t>::value_type *)v19, v20);
  std::string v61 = v60;
  memset(&v60, 0, sizeof(v60));
  int v21 = *((char *)this + 63);
  if (v21 >= 0) {
    uint64_t v22 = (const std::basic_string<char16_t>::value_type *)((char *)this + 40);
  }
  else {
    uint64_t v22 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 5);
  }
  if (v21 >= 0) {
    std::basic_string<char16_t>::size_type v23 = *((unsigned __int8 *)this + 63);
  }
  else {
    std::basic_string<char16_t>::size_type v23 = *((void *)this + 6);
  }
  std::basic_string<char16_t>::append(&v61, v22, v23);
  int v62 = v61;
  memset(&v61, 0, sizeof(v61));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v45, "'");
  if ((v46 & 0x80u) == 0) {
    int v24 = v45;
  }
  else {
    int v24 = (void **)v45[0];
  }
  if ((v46 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v25 = v46;
  }
  else {
    std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t>::size_type)v45[1];
  }
  std::basic_string<char16_t>::append(&v62, (const std::basic_string<char16_t>::value_type *)v24, v25);
  std::basic_string<char16_t>::size_type v63 = v62;
  memset(&v62, 0, sizeof(v62));
  if ((*(uint64_t (**)(morphun::Token_Explicit *))(*(void *)this + 56))(this))
  {
    int v26 = (void (***)(void **__return_ptr))(*(uint64_t (**)(morphun::Token_Explicit *))(*(void *)this + 56))(this);
    (**v26)(v43);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v43, "n");
  }
  if ((v44 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v27 = v43;
  }
  else {
    std::basic_string<char16_t>::size_type v27 = (void **)v43[0];
  }
  if ((v44 & 0x80u) == 0) {
    uint64_t v28 = v44;
  }
  else {
    uint64_t v28 = (std::basic_string<char16_t>::size_type)v43[1];
  }
  std::basic_string<char16_t>::append(&v63, (const std::basic_string<char16_t>::value_type *)v27, v28);
  uint64_t v64 = v63;
  memset(&v63, 0, sizeof(v63));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v41, (char *)L"}, label='");
  if ((v42 & 0x80u) == 0) {
    uint64_t v29 = v41;
  }
  else {
    uint64_t v29 = (void **)v41[0];
  }
  if ((v42 & 0x80u) == 0) {
    uint64_t v30 = v42;
  }
  else {
    uint64_t v30 = (std::basic_string<char16_t>::size_type)v41[1];
  }
  std::basic_string<char16_t>::append(&v64, (const std::basic_string<char16_t>::value_type *)v29, v30);
  std::basic_string<char16_t> v65 = v64;
  memset(&v64, 0, sizeof(v64));
  uint64_t v33 = (const std::basic_string<char16_t>::value_type *)*((void *)this + 12);
  int v32 = (char *)this + 96;
  int v31 = v33;
  uint64_t v34 = v32[23];
  if (v34 >= 0) {
    uint64_t v35 = (const std::basic_string<char16_t>::value_type *)v32;
  }
  else {
    uint64_t v35 = v31;
  }
  if (v34 >= 0) {
    uint64_t v36 = v32[23];
  }
  else {
    uint64_t v36 = *((void *)v32 + 1);
  }
  std::basic_string<char16_t>::append(&v65, v35, v36);
  std::basic_string<char16_t>::size_type v66 = v65;
  memset(&v65, 0, sizeof(v65));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "'");
  if ((v40 & 0x80u) == 0) {
    uint64_t v37 = __p;
  }
  else {
    uint64_t v37 = (void **)__p[0];
  }
  if ((v40 & 0x80u) == 0) {
    uint64_t v38 = v40;
  }
  else {
    uint64_t v38 = (std::basic_string<char16_t>::size_type)__p[1];
  }
  std::basic_string<char16_t>::append(&v66, (const std::basic_string<char16_t>::value_type *)v37, v38);
  *a2 = v66;
  memset(&v66, 0, sizeof(v66));
  if ((char)v40 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v66.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v65.__r_.__value_.__l.__data_);
  }
  if ((char)v42 < 0) {
    operator delete(v41[0]);
  }
  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v64.__r_.__value_.__l.__data_);
  }
  if ((char)v44 < 0) {
    operator delete(v43[0]);
  }
  if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v63.__r_.__value_.__l.__data_);
  }
  if ((char)v46 < 0) {
    operator delete(v45[0]);
  }
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v62.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v61.__r_.__value_.__l.__data_);
  }
  if ((char)v48 < 0) {
    operator delete(v47[0]);
  }
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v59.__r_.__value_.__l.__data_);
  }
  if ((char)v50 < 0) {
    operator delete(v49[0]);
  }
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v58.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_105;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_105;
  }
  operator delete(v11);
LABEL_105:
  if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v57.__r_.__value_.__l.__data_);
  }
  if ((char)v53 < 0) {
    operator delete(v52[0]);
  }
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v56.__r_.__value_.__l.__data_);
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_111;
    }
  }
  else if ((v4 & 0x80000000) == 0)
  {
    goto LABEL_111;
  }
  operator delete(v5);
LABEL_111:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CA8DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v82 - 73) < 0) {
    operator delete(*(void **)(v82 - 96));
  }
  if (*(char *)(v82 - 105) < 0) {
    operator delete(*(void **)(v82 - 128));
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (*(char *)(v82 - 137) < 0) {
    operator delete(*(void **)(v82 - 160));
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v82 - 169) < 0) {
    operator delete(*(void **)(v82 - 192));
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (*(char *)(v82 - 201) < 0) {
    operator delete(*(void **)(v82 - 224));
  }
  if (*(char *)(v82 - 233) < 0) {
    operator delete(*(void **)(v82 - 256));
  }
  if (a38 < 0) {
    operator delete(a33);
  }
  if (a78 < 0) {
    operator delete(a77);
  }
  if (a76 < 0) {
    operator delete(a75);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (v81 < 0) {
    operator delete(v79);
  }
  if (a72 < 0) {
    operator delete(a70);
  }
  if (a53 < 0) {
    operator delete(a48);
  }
  if (a68 < 0) {
    operator delete(a63);
  }
  if (v80 < 0) {
    operator delete(v78);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::Token_Explicit::Token_Explicit(uint64_t a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8, uint64_t a9, void *__src, unint64_t a11)
{
  std::basic_string<char16_t>::size_type v13 = morphun::Token_Group::Token_Group((morphun::Token *)a1, a2 + 1, a3, a4, a5, a6, a7, a8, a9);
  uint64_t v14 = *a2;
  *(void *)std::basic_string<char16_t>::size_type v13 = *a2;
  *(void *)(a1 + *(void *)(v14 - 64)) = a2[7];
  *(void *)(a1 + *(void *)(*(void *)a1 - 40)) = a2[8];
  if (a11 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a11 >= 0xB)
  {
    uint64_t v16 = (a11 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a11 | 3) != 0xB) {
      uint64_t v16 = a11 | 3;
    }
    std::basic_string<char16_t>::size_type v15 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v16 + 1);
    *(void *)(a1 + 104) = a11;
    *(void *)(a1 + 112) = v17 | 0x8000000000000000;
    *(void *)(a1 + 96) = v15;
  }
  else
  {
    std::basic_string<char16_t>::size_type v15 = (void *)(a1 + 96);
    *(unsigned char *)(a1 + 119) = a11;
    if (!a11) {
      goto LABEL_9;
    }
  }
  memmove(v15, __src, 2 * a11);
LABEL_9:
  *((_WORD *)v15 + a11) = 0;
  return a1;
}

void sub_1D2CA9128(_Unwind_Exception *a1)
{
  morphun::Token_Group::~Token_Group(v1, v2);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::Token_Explicit::toString(morphun::Token_Explicit *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::compareTo(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int16 **)(a2 + 8);
  uint64_t v2 = (unsigned __int16 *)(a2 + 8);
  long long v3 = v4;
  int v5 = *((char *)v2 + 23);
  BOOL v6 = v5 < 0;
  if (v5 >= 0) {
    uint64_t v7 = v2;
  }
  else {
    uint64_t v7 = v3;
  }
  if (v6) {
    unint64_t v8 = *((void *)v2 + 1);
  }
  else {
    unint64_t v8 = *((unsigned __int8 *)v2 + 23);
  }
  if (*(char *)(a1 + 31) < 0)
  {
    std::basic_string<char16_t>::size_type v9 = *(unsigned __int16 **)(a1 + 8);
    unint64_t v10 = *(void *)(a1 + 16);
  }
  else
  {
    std::basic_string<char16_t>::size_type v9 = (unsigned __int16 *)(a1 + 8);
    unint64_t v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10) {
    unint64_t v11 = v10;
  }
  else {
    unint64_t v11 = v8;
  }
  if (v11)
  {
    while (1)
    {
      unsigned int v12 = *v9;
      unsigned int v13 = *v7;
      if (v12 < v13) {
        return 0xFFFFFFFFLL;
      }
      if (v13 < v12) {
        return 1;
      }
      ++v9;
      ++v7;
      if (!--v11) {
        goto LABEL_17;
      }
    }
  }
  else
  {
LABEL_17:
    if (v10 < v8) {
      return 0xFFFFFFFFLL;
    }
    else {
      return v8 < v10;
    }
  }
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::~LanguageGrammarFeatures_GrammarFeatures(void **this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::~LanguageGrammarFeatures_GrammarFeatures(void **this, void **a2)
{
  long long v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 5)) = a2[1];
  int v4 = this + 4;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v4);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::LanguageGrammarFeatures_GrammarFeatures(uint64_t a1, uint64_t *a2, long long *a3, uint64_t *a4)
{
  uint64_t v6 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v6 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>(a1 + 32, *a4, a4[1], 0x6DB6DB6DB6DB6DB7 * ((a4[1] - *a4) >> 3));
  return a1;
}

void sub_1D2CA9414(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >= 0x492492492492493) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = (void *)result;
    double result = (uint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(a4);
    uint64_t v7 = result;
    void *v6 = result;
    v6[1] = result;
    v6[2] = result + 56 * v8;
    if (a2 != a3)
    {
      uint64_t v9 = 0;
      do
      {
        *(void *)(v7 + v9) = &off_1F2A08930;
        unint64_t v10 = (const std::basic_string<char16_t>::value_type **)(a2 + v9 + 8);
        if (*(char *)(a2 + v9 + 31) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v7 + v9 + 8), *v10, *(void *)(a2 + v9 + 16));
        }
        else
        {
          long long v11 = *(_OWORD *)v10;
          *(void *)(v7 + v9 + 24) = *(void *)(a2 + v9 + 24);
          *(_OWORD *)(v7 + v9 + 8) = v11;
        }
        double result = std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](v7 + v9 + 32, (void *)(a2 + v9 + 32));
        v9 += 56;
      }
      while (a2 + v9 != a3);
      v7 += v9;
    }
    v6[1] = v7;
  }
  return result;
}

void sub_1D2CA9550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  int v4 = (unsigned __int16 *)(a2 + 1);
  int v5 = (unsigned __int16 *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>> const&>((uint64_t **)a1, v3, v5 + 16, (long long *)v5 + 2);
      uint64_t v6 = (unsigned __int16 *)*((void *)v5 + 1);
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          uint64_t v6 = *(unsigned __int16 **)v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (unsigned __int16 *)*((void *)v5 + 2);
          BOOL v8 = *(void *)v7 == (void)v5;
          int v5 = v7;
        }
        while (!v8);
      }
      int v5 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1D2CA966C(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::LanguageGrammarFeatures_GrammarFeatures(uint64_t a1, long long *a2, uint64_t *a3)
{
  *(void *)a1 = &off_1F2A089C8;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v5;
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>(a1 + 32, *a3, a3[1], 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3));
  return a1;
}

void sub_1D2CA972C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void virtual thunk to'morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::~LanguageGrammarFeatures_GrammarFeatures(morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::getName(morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *((const std::basic_string<char16_t>::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::getValues@<X0>(morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)a2, *((void *)this + 4), *((void *)this + 5), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((void *)this + 5) - *((void *)this + 4)) >> 3));
}

BOOL morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::operator<(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int16 **)(a2 + 8);
  uint64_t v2 = (unsigned __int16 *)(a2 + 8);
  uint64_t v3 = v4;
  int v5 = *((char *)v2 + 23);
  BOOL v6 = v5 < 0;
  if (v5 >= 0) {
    uint64_t v7 = v2;
  }
  else {
    uint64_t v7 = v3;
  }
  if (v6) {
    unint64_t v8 = *((void *)v2 + 1);
  }
  else {
    unint64_t v8 = *((unsigned __int8 *)v2 + 23);
  }
  if (*(char *)(a1 + 31) < 0)
  {
    uint64_t v9 = *(unsigned __int16 **)(a1 + 8);
    unint64_t v10 = *(void *)(a1 + 16);
  }
  else
  {
    uint64_t v9 = (unsigned __int16 *)(a1 + 8);
    unint64_t v10 = *(unsigned __int8 *)(a1 + 31);
  }
  if (v8 >= v10) {
    unint64_t v11 = v10;
  }
  else {
    unint64_t v11 = v8;
  }
  if (v11)
  {
    while (1)
    {
      unsigned int v12 = *v9;
      unsigned int v13 = *v7;
      if (v13 != v12) {
        break;
      }
      ++v9;
      ++v7;
      if (!--v11) {
        goto LABEL_16;
      }
    }
    BOOL v14 = v12 >= v13;
  }
  else
  {
LABEL_16:
    BOOL v14 = v10 >= v8;
  }
  return !v14;
}

uint64_t **com::apple::siri::tokenizer::data::config_es::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::EsGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  operator new();
}

void sub_1D2CAAFC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char **a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  __cxa_free_exception(v50);
  *(void *)(v51 - 208) = a16;
  std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 208));
  morphun::dialog::DefinitenessDisplayFunction::~DefinitenessDisplayFunction(a14);
  MEMORY[0x1D942B8B0](a25, 0x10F3C4029A517A0);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CAB760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      unsigned int v12 = (char **)v4;
      unsigned int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      unsigned int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        unsigned int v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        morphun::Token *v13 = v16;
        std::basic_string<char16_t>::size_type v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    unsigned int v12 = (char **)v4;
    unsigned int v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          unsigned int v12 = (char **)v14;
          std::basic_string<char16_t>::size_type v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          unsigned int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        unsigned int v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CAB988(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CABA00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CABBF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      unsigned int v12 = (char **)v4;
      unsigned int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      unsigned int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        unsigned int v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        morphun::Token *v13 = v16;
        std::basic_string<char16_t>::size_type v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    unsigned int v12 = (char **)v4;
    unsigned int v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          unsigned int v12 = (char **)v14;
          std::basic_string<char16_t>::size_type v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          unsigned int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        unsigned int v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CABE1C(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::EsGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CABE94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::Object::~Object(morphun::Object *this)
{
}

void morphun::Object::toString(morphun::Object *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  __p[0] = 0;
  __p[1] = 0;
  std::basic_string<char16_t>::size_type v6 = 0;
  if (!this) {
    __cxa_bad_typeid();
  }
  uint64_t v3 = (const char *)(*(void *)(*(void *)(*(void *)this - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL);
  int32_t v4 = strlen(v3);
  morphun::util::StringViewUtils::convert((uint64_t)__p, v3, v4);
  if (SHIBYTE(v6) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
    if (SHIBYTE(v6) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    a2->__r_.__value_.__r.__words[2] = v6;
  }
}

void sub_1D2CABF68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::NlAnalyzer::addWordNormalizationFilter(morphun::analysis::NlAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2CAC2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v25, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::NlAnalyzer::addStopFilter(morphun::analysis::NlAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CAC4B0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::NlAnalyzer::~NlAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06F40);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06F40);
}

void morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A07100);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A07100);
}

uint64_t *morphun::analysis::MinimalAnalyzer::MinimalAnalyzer(morphun::analysis::MinimalAnalyzer *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3, uint64_t a4)
{
  double result = morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer((uint64_t *)this, (uint64_t *)a2 + 1, a3, 0, a4);
  uint64_t v6 = *(void *)a2;
  uint64_t *result = *(void *)a2;
  *(uint64_t *)((char *)result + *(void *)(v6 - 40)) = *((void *)a2 + 7);
  return result;
}

uint64_t *morphun::analysis::MinimalAnalyzer::MinimalAnalyzer(morphun::analysis::MinimalAnalyzer *this, const morphun::util::ULocale *a2, uint64_t a3)
{
  *(void *)this = &unk_1F2A08C08;
  double result = morphun::analysis::ConfigurableAnalyzer::ConfigurableAnalyzer((uint64_t *)this, (uint64_t *)&off_1F2A07100, a2, 0, a3);
  uint64_t *result = (uint64_t)&off_1F2A0F0C0;
  return result;
}

void morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(void **this, uint64_t a2)
{
}

void virtual thunk to'morphun::analysis::MinimalAnalyzer::~MinimalAnalyzer(morphun::analysis::MinimalAnalyzer *this)
{
}

{
  uint64_t vars8;

  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer((void **)((char *)this + *(void *)(*(void *)this - 32)), &off_1F2A07100);

  JUMPOUT(0x1D942B8B0);
}

void *mpron_toPronounConcept(const void *a1)
{
  if (!a1
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Object is not a PronounConcept");
    morphun::exception::ClassCastException::ClassCastException((uint64_t)exception, &__dst);
  }
  return result;
}

void sub_1D2CAC7E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0) {
      goto LABEL_6;
    }
  }
  else if (!v17)
  {
LABEL_6:
    if (a2 == 1)
    {
      std::basic_string<char16_t>::size_type v20 = (const void **)__cxa_begin_catch(exception_object);
      morphun::util::CFUtils::convert(v20, v15, v21);
      __cxa_end_catch();
      JUMPOUT(0x1D2CAC778);
    }
    _Unwind_Resume(exception_object);
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

void mpron_createWithCustom(const morphun::dialog::SemanticFeatureModel *a1, const __CFArray *a2, const __CFDictionary *a3)
{
  memset((char *)&v24[1] + 8, 0, 24);
  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a1);
  morphun::dialog::SemanticUtils::to_constraintMap((morphun::dialog::SemanticUtils *)v24, a1, a3);
  CFIndex Count = CFArrayGetCount(a2);
  if (Count >= 1)
  {
    for (CFIndex i = 0; i != Count; ++i)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(a2, i);
      if (!ValueAtIndex)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      uint64_t v9 = *(void *)&v24[2];
      if (*(void *)&v24[2] >= *((void *)&v24[2] + 1))
      {
        uint64_t v11 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)&v24[2] - *((void *)&v24[1] + 1)) >> 3);
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) > 0x492492492492492) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(*((void *)&v24[2] + 1) - *((void *)&v24[1] + 1)) >> 3) > v12) {
          unint64_t v12 = 0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(*((void *)&v24[2] + 1) - *((void *)&v24[1] + 1)) >> 3);
        }
        if ((unint64_t)(0x6DB6DB6DB6DB6DB7
                              * ((uint64_t)(*((void *)&v24[2] + 1) - *((void *)&v24[1] + 1)) >> 3)) >= 0x249249249249249)
          unint64_t v13 = 0x492492492492492;
        else {
          unint64_t v13 = v12;
        }
        std::basic_string<char16_t>::size_type v27 = (char *)&v24[2] + 8;
        if (v13) {
          unint64_t v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(v13);
        }
        else {
          uint64_t v14 = 0;
        }
        unint64_t v25 = v13;
        *(void *)int v26 = v13 + 56 * v11;
        *(void *)&v26[8] = *(void *)v26;
        *(void *)&v26[16] = v13 + 56 * v14;
        std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(*(uint64_t *)v26, (uint64_t)ValueAtIndex);
        uint64_t v15 = *(void *)v26;
        *(void *)&v26[8] += 56;
        long long v16 = *(_OWORD *)((char *)&v24[1] + 8);
        for (uint64_t j = 56; ; j -= 56)
        {
          uint64_t v18 = v15 + j;
          if (*((void *)&v16 + 1) + j - 56 == (void)v16) {
            break;
          }
          uint64_t v19 = *((void *)&v16 + 1) + j - 112;
          std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(v18 - 112, v19);
        }
        uint64_t v20 = *((void *)&v24[2] + 1);
        long long v23 = *(_OWORD *)&v26[8];
        long long v21 = *(_OWORD *)((char *)&v24[1] + 8);
        *((void *)&v24[1] + 1) = v18 - 56;
        *(_OWORD *)int v26 = v21;
        v24[2] = v23;
        *(void *)&v26[16] = v20;
        unint64_t v25 = v21;
        std::__split_buffer<morphun::dialog::SemanticFeatureModel_DisplayValue>::~__split_buffer((uint64_t)&v25);
        uint64_t v10 = v23;
      }
      else
      {
        std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>::construct[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue,morphun::dialog::SemanticFeatureModel_DisplayValue const&>(*(uint64_t *)&v24[2], (uint64_t)ValueAtIndex);
        uint64_t v10 = v9 + 56;
      }
      *(void *)&v24[2] = v10;
    }
  }
  operator new();
}

void sub_1D2CACAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::exception *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14, void **a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  MEMORY[0x1D942B8B0](v20, 0x10E1C4055CA4715);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a15);
  a14 = &a17;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&a14);
  if (a2 == 1)
  {
    long long v23 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v23, a9, v24);
    __cxa_end_catch();
    JUMPOUT(0x1D2CACA94);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CACC54(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<morphun::dialog::SemanticFeatureModel_DisplayValue>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(i - 56);
    *(void *)(a1 + 16) = i - 56;
    (*(void (**)(void))(v4 + 8))();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void mpron_createWithDefaults(const morphun::dialog::SemanticFeatureModel *a1, const __CFDictionary *a2)
{
  npc<morphun::dialog::SemanticFeatureModel const>((uint64_t)a1);
  morphun::dialog::SemanticUtils::to_constraintMap((morphun::dialog::SemanticUtils *)v4, a1, a2);
  operator new();
}

void sub_1D2CACD54(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11)
{
  uint64_t v13 = v12;
  MEMORY[0x1D942B8B0](v13, 0x10E1C4055CA4715);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a11);
  if (a2 == 1)
  {
    long long v16 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v16, v11, v17);
    __cxa_end_catch();
    JUMPOUT(0x1D2CACD3CLL);
  }
  _Unwind_Resume(a1);
}

void mpron_createFromInitialPronoun()
{
}

void sub_1D2CACE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v16, 0x10E1C4055CA4715);
  if (a2 == 1)
  {
    uint64_t v19 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v19, v15, v20);
    __cxa_end_catch();
    JUMPOUT(0x1D2CACE60);
  }
  _Unwind_Resume(a1);
}

uint64_t mpron_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

void morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  *(void *)this = &off_1F2A09958;
  uint64_t v1 = (void **)((char *)this + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v1);

  JUMPOUT(0x1D942B8B0);
}

{
  void **v1;

  *(void *)this = &off_1F2A09958;
  uint64_t v1 = (void **)((char *)this + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v1);
}

uint64_t *morphun::dialog::SemanticFeatureModel_DisplayData::SemanticFeatureModel_DisplayData(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v4 - 40)) = a2[1];
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = 0;
  std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(a1 + 1, *a3, a3[1], 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3));
  return a1;
}

void *morphun::dialog::SemanticFeatureModel_DisplayData::SemanticFeatureModel_DisplayData(void *a1, uint64_t *a2)
{
  *a1 = &off_1F2A09958;
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = 0;
  std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__init_with_size[abi:ne180100]<morphun::dialog::SemanticFeatureModel_DisplayValue*,morphun::dialog::SemanticFeatureModel_DisplayValue*>(a1 + 1, *a2, a2[1], 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 3));
  return a1;
}

void morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData(morphun::dialog::SemanticFeatureModel_DisplayData *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  uint64_t v3 = (void **)((char *)this + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v3);
}

void virtual thunk to'morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 32);
  *(void *)uint64_t v1 = &off_1F2A09958;
  uint64_t v2 = (void **)(v1 + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v2);
}

{
  char *v1;
  void **v2;
  uint64_t vars8;

  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 32);
  *(void *)uint64_t v1 = &off_1F2A09958;
  uint64_t v2 = (void **)(v1 + 8);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v2);

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayData::getValues(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  return (uint64_t)this + 8;
}

unint64_t morphun::dialog::SemanticFeatureModel_DisplayData::hashCode(morphun::dialog::SemanticFeatureModel_DisplayData *this)
{
  return morphun::dialog::SemanticFeatureModel_DisplayData::operator()((uint64_t)this, (uint64_t)this);
}

unint64_t morphun::dialog::SemanticFeatureModel_DisplayData::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  if (v2 == v3) {
    return 0;
  }
  unint64_t v4 = 0;
  do
  {
    BOOL v7 = *(uint64_t **)(v2 + 8);
    uint64_t v6 = v2 + 8;
    uint64_t v5 = v7;
    int v8 = *(char *)(v6 + 23);
    if (v8 >= 0) {
      uint64_t v9 = (uint64_t *)v6;
    }
    else {
      uint64_t v9 = v5;
    }
    if (v8 >= 0) {
      uint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      uint64_t v10 = *(void *)(v6 + 8);
    }
    v4 ^= (v4 << 6)
        + (v4 >> 2)
        + 2654435769u
        + std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v9, 2 * v10);
    uint64_t v2 = v6 + 48;
  }
  while (v2 != v3);
  return v4;
}

BOOL morphun::dialog::SemanticFeatureModel_DisplayData::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v3 - v2 != *(void *)(a2 + 16) - v4) {
    return 0;
  }
  if (v2 == v3) {
    return 1;
  }
  do
  {
    BOOL result = morphun::dialog::SemanticFeatureModel_DisplayValue::operator==(v2, v4);
    if (!result) {
      break;
    }
    v2 += 56;
    v4 += 56;
  }
  while (v2 != v3);
  return result;
}

BOOL morphun::dialog::SemanticFeatureModel_DisplayData::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::dialog::SemanticFeatureModel_DisplayData::operator==(a1, a2);
}

uint64_t **com::apple::siri::tokenizer::data::config_bg::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

morphun::dialog::SemanticFeatureModel_DisplayValue *morphun::dialog::DefinitenessDisplayFunction::addDefiniteness(morphun::dialog::DefinitenessDisplayFunction *a1, morphun::dialog::SemanticFeatureModel_DisplayValue *a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v6 = *((void *)a1 + 1);
    npc<morphun::dialog::SemanticFeature const>(v6);
    BOOL v7 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, v6);
    if ((void *)(a3 + 8) == v7) {
      return a2;
    }
    int v8 = v7;
    memset(&__p, 0, sizeof(__p));
    ArticlePrefixCFIndex Length = morphun::dialog::DefinitenessDisplayFunction::getArticlePrefixLength((uint64_t)a2, (void *)a1 + 5);
    if (ArticlePrefixLength < 1)
    {
      int v12 = morphun::dialog::DefinitenessDisplayFunction::getArticlePrefixLength((uint64_t)a2, (void *)a1 + 8);
      if (v12 < 1)
      {
        uint64_t v36 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
        std::basic_string<char16_t>::operator=(&__p, v36);
        goto LABEL_8;
      }
      uint64_t v34 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
      std::basic_string<char16_t>::basic_string(&v37, v34, v12, 0xFFFFFFFFFFFFFFFFLL, v35);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      uint64_t v10 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
      std::basic_string<char16_t>::basic_string(&v37, v10, ArticlePrefixLength, 0xFFFFFFFFFFFFFFFFLL, v11);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      int v12 = 0;
    }
    std::basic_string<char16_t> __p = v37;
LABEL_8:
    uint64_t v13 = (*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 40))(a2);
    uint64_t v14 = morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)&v37, (long long *)&__p, v13);
    if (ArticlePrefixLength <= 0)
    {
      uint64_t v14 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v14);
      uint64_t v15 = *((unsigned __int8 *)v8 + 127);
      int v16 = (char)v15;
      if ((v15 & 0x80u) != 0) {
        uint64_t v15 = v8[14];
      }
      uint64_t v17 = *(unsigned __int8 *)(v14 + 23);
      int v18 = (char)v17;
      if ((v17 & 0x80u) != 0) {
        uint64_t v17 = *(void *)(v14 + 8);
      }
      if (v15 == v17)
      {
        if (!v15)
        {
LABEL_23:
          uint64_t v21 = npc<morphun::dialog::DefaultFeatureFunction const>(*((void *)a1 + 3));
          uint64_t v22 = (const morphun::dialog::SpeakableString *)(*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *, uint64_t))(*(void *)v21 + 24))(v21, &v37, a3);
          if (v22) {
            morphun::dialog::DefinitenessDisplayFunction::replaceDisplayValue(a1, a2, v22);
          }
LABEL_43:
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          return a2;
        }
        if (v18 >= 0) {
          uint64_t v19 = (unsigned __int16 *)v14;
        }
        else {
          uint64_t v19 = *(unsigned __int16 **)v14;
        }
        if (v16 >= 0) {
          uint64_t v20 = (unsigned __int16 *)(v8 + 13);
        }
        else {
          uint64_t v20 = (unsigned __int16 *)v8[13];
        }
        while (*v19 == *v20)
        {
          ++v20;
          ++v19;
          if (!--v15) {
            goto LABEL_23;
          }
        }
      }
    }
    if (v12 <= 0)
    {
      uint64_t v24 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v14);
      uint64_t v25 = *((unsigned __int8 *)v8 + 127);
      int v26 = (char)v25;
      if ((v25 & 0x80u) != 0) {
        uint64_t v25 = v8[14];
      }
      uint64_t v27 = *(unsigned __int8 *)(v24 + 23);
      int v28 = (char)v27;
      if ((v27 & 0x80u) != 0) {
        uint64_t v27 = *(void *)(v24 + 8);
      }
      if (v25 == v27)
      {
        if (v25)
        {
          if (v28 >= 0) {
            uint64_t v29 = (unsigned __int16 *)v24;
          }
          else {
            uint64_t v29 = *(unsigned __int16 **)v24;
          }
          if (v26 >= 0) {
            uint64_t v30 = (unsigned __int16 *)(v8 + 13);
          }
          else {
            uint64_t v30 = (unsigned __int16 *)v8[13];
          }
          while (*v29 == *v30)
          {
            ++v30;
            ++v29;
            if (!--v25) {
              goto LABEL_41;
            }
          }
        }
        else
        {
LABEL_41:
          uint64_t v31 = npc<morphun::dialog::DefaultFeatureFunction const>(*((void *)a1 + 4));
          int v32 = (const morphun::dialog::SpeakableString *)(*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *, uint64_t))(*(void *)v31 + 24))(v31, &v37, a3);
          if (v32) {
            morphun::dialog::DefinitenessDisplayFunction::replaceDisplayValue(a1, a2, v32);
          }
        }
      }
    }
    goto LABEL_43;
  }
  return 0;
}

void sub_1D2CAD878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  (*(void (**)(uint64_t))(*(void *)v22 + 16))(v22);
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CAD944(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unint64_t morphun::dialog::DefinitenessDisplayFunction::getArticlePrefixLength(uint64_t a1, void *a2)
{
  std::basic_string<char16_t> __p = 0;
  unint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  int32_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(const UChar **)v3;
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v7 = morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v3);
  if ((v4 & 0x80u) == 0) {
    int v8 = (const UChar *)v3;
  }
  else {
    int v8 = v5;
  }
  if ((v4 & 0x80u) == 0) {
    int32_t v9 = v4;
  }
  else {
    int32_t v9 = v6;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&__p, v8, v9, v7);
  int v12 = (void *)*a2;
  uint64_t v11 = a2 + 1;
  uint64_t v10 = v12;
  if (v12 != v11)
  {
    p_p = (unsigned __int16 *)__p;
    unint64_t v13 = v25;
    if (v26 >= 0)
    {
      unint64_t v13 = HIBYTE(v26);
      p_p = (unsigned __int16 *)&__p;
    }
    do
    {
      unint64_t v15 = *((unsigned __int8 *)v10 + 55);
      if (*((char *)v10 + 55) < 0)
      {
        unint64_t v16 = v10[5];
        if (v16 < v13)
        {
LABEL_14:
          if (!v16) {
            goto LABEL_30;
          }
          if (v16 == -1) {
            std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
          }
          if ((v15 & 0x80u) == 0) {
            uint64_t v17 = (unsigned __int16 *)(v10 + 4);
          }
          else {
            uint64_t v17 = (unsigned __int16 *)v10[4];
          }
          unint64_t v18 = v16;
          uint64_t v19 = p_p;
          while (*v17 == *v19)
          {
            ++v19;
            ++v17;
            if (!--v18) {
              goto LABEL_30;
            }
          }
        }
      }
      else
      {
        unint64_t v16 = *((unsigned __int8 *)v10 + 55);
        if (v13 > v15) {
          goto LABEL_14;
        }
      }
      uint64_t v20 = (void *)v10[1];
      if (v20)
      {
        do
        {
          uint64_t v21 = v20;
          uint64_t v20 = (void *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          uint64_t v21 = (void *)v10[2];
          BOOL v22 = *v21 == (void)v10;
          uint64_t v10 = v21;
        }
        while (!v22);
      }
      uint64_t v10 = v21;
    }
    while (v21 != v11);
  }
  unint64_t v16 = 0xFFFFFFFFLL;
LABEL_30:
  if (v26 < 0) {
    operator delete(__p);
  }
  return v16;
}

void sub_1D2CADAD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::dialog::DefaultFeatureFunction const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CADB48(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::DefinitenessDisplayFunction::replaceDisplayValue(morphun::dialog::DefinitenessDisplayFunction *this, morphun::dialog::SemanticFeatureModel_DisplayValue *a2, const morphun::dialog::SpeakableString *a3)
{
  uint64_t v5 = (*(uint64_t (**)(morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 40))(a2);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&v9, v5);
  if (((*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a3 + 48))(a3) & 1) == 0)
  {
    uint64_t v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a3 + 40))(a3);
    uint64_t v7 = (const morphun::dialog::SemanticFeature *)*((void *)this + 2);
    npc<morphun::dialog::SemanticFeature const>((uint64_t)v7);
    uint64_t v10 = v7;
    int v8 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::piecewise_construct_t const&,std::tuple<morphun::dialog::SemanticFeature const&>,std::tuple<>>(&v9, (uint64_t)v7, &v10);
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v8 + 13), v6);
  }
  operator new();
}

void sub_1D2CADCD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
}

uint64_t *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::piecewise_construct_t const&,std::tuple<morphun::dialog::SemanticFeature const&>,std::tuple<>>(uint64_t **a1, uint64_t a2, const morphun::dialog::SemanticFeature **a3)
{
  uint64_t v5 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)a1, &v11, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    uint64_t v6 = (uint64_t *)operator new(0x80uLL);
    v9[0] = v6;
    v9[1] = a1 + 1;
    char v10 = 0;
    morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v6 + 4), *a3);
    v6[13] = 0;
    v6[14] = 0;
    v6[15] = 0;
    char v10 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v11, v7, v6);
    v9[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v9);
  }
  return v6;
}

void sub_1D2CADDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void morphun::dialog::DefinitenessDisplayFunction::~DefinitenessDisplayFunction(char **this)
{
  *this = (char *)&unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[9]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[6]);

  JUMPOUT(0x1D942B8B0);
}

{
  *this = (char *)&unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[9]);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(this[6]);
}

void morphun::dialog::DefinitenessDisplayFunction::getArticles(uint64_t a1, morphun::lang::features::LanguageGrammarFeatures *a2, unsigned __int16 *a3, uint64_t a4)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures(a2, &v38);
  morphun::lang::features::LanguageGrammarFeatures::getFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v38, (uint64_t)&v39);
  v38.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A088F0;
  uint64_t v7 = v39;
  if (v39 == v40) {
    goto LABEL_63;
  }
  while (1)
  {
    if (*((char *)v7 + 63) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v38, (const std::basic_string<char16_t>::value_type *)v7[5], (std::basic_string<char16_t>::size_type)v7[6]);
    }
    else {
      std::basic_string<char16_t> v38 = *(std::basic_string<char16_t> *)(v7 + 5);
    }
    std::basic_string<char16_t>::size_type size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
    if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v38.__r_.__value_.__l.__size_;
    }
    BOOL v9 = size == a4;
    BOOL v10 = size != a4 || a4 == 0;
    if (!v10)
    {
      uint64_t v11 = (std::basic_string<char16_t> *)v38.__r_.__value_.__r.__words[0];
      if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v11 = &v38;
      }
      uint64_t v12 = a4 - 1;
      unint64_t v13 = a3;
      do
      {
        int v15 = (unsigned __int16)v11->__r_.__value_.__s.__data_[0];
        uint64_t v11 = (std::basic_string<char16_t> *)((char *)v11 + 2);
        int v14 = v15;
        int v17 = *v13++;
        int v16 = v17;
        BOOL v19 = v12-- != 0;
        BOOL v9 = v16 == v14;
      }
      while (v16 == v14 && v19);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (v9) {
      break;
    }
    uint64_t v20 = v7[1];
    if (v20)
    {
      do
      {
        uint64_t v21 = (void **)v20;
        uint64_t v20 = (void *)*v20;
      }
      while (v20);
    }
    else
    {
      do
      {
        uint64_t v21 = (void **)v7[2];
        BOOL v10 = *v21 == v7;
        uint64_t v7 = v21;
      }
      while (!v10);
    }
    uint64_t v7 = v21;
    if (v21 == v40) {
      goto LABEL_63;
    }
  }
  memset(&v38, 0, sizeof(v38));
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v38, (uint64_t)v7[8], (uint64_t)v7[9], 0x6DB6DB6DB6DB6DB7 * (v7[9] - v7[8]));
  std::basic_string<char16_t>::size_type v23 = v38.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v22 = v38.__r_.__value_.__r.__words[0];
  if (v38.__r_.__value_.__r.__words[0] == v38.__r_.__value_.__l.__size_)
  {
    unint64_t v25 = &word_1D2ED0D7C;
    goto LABEL_50;
  }
  std::basic_string<char16_t>::size_type v24 = v38.__r_.__value_.__r.__words[0];
  unint64_t v25 = &word_1D2ED0D7C;
  while (1)
  {
    (*(void (**)(std::basic_string<char16_t> *__return_ptr, std::basic_string<char16_t>::size_type))(*(void *)v24 + 24))(&__p, v24);
    std::basic_string<char16_t>::size_type v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v26 = __p.__r_.__value_.__l.__size_;
    }
    if (v26)
    {
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, std::basic_string<char16_t>::size_type))(*(void *)v24 + 24))(&v36, v24);
      std::basic_string<char16_t>::size_type v27 = v36.__r_.__value_.__l.__size_;
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v28 = &v36;
      }
      else {
        int v28 = (std::basic_string<char16_t> *)v36.__r_.__value_.__r.__words[0];
      }
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v27 = HIBYTE(v36.__r_.__value_.__r.__words[2]);
      }
      BOOL v29 = v28->__r_.__value_.__s.__data_[v27 - 1] == 32;
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_42:
      }
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      BOOL v29 = 0;
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
        goto LABEL_42;
      }
    }
    if (v29) {
      break;
    }
    v24 += 56;
    v22 += 56;
    if (v24 == v23) {
      goto LABEL_50;
    }
  }
  unint64_t v25 = &word_1D2ED0AEE;
LABEL_50:
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v38;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  memset(&v38, 0, sizeof(v38));
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v38, (uint64_t)v7[8], (uint64_t)v7[9], 0x6DB6DB6DB6DB6DB7 * (v7[9] - v7[8]));
  std::basic_string<char16_t>::size_type v31 = v38.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v30 = v38.__r_.__value_.__r.__words[0];
  if (v38.__r_.__value_.__r.__words[0] != v38.__r_.__value_.__l.__size_)
  {
    int v32 = *(unsigned __int16 *)v25;
    do
    {
      (*(void (**)(std::basic_string<char16_t> *__return_ptr, std::basic_string<char16_t>::size_type))(*(void *)v30 + 24))(&v36, v30);
      if (v32)
      {
        uint64_t v33 = 0;
        do
          std::basic_string<char16_t>::size_type v34 = v33 + 1;
        while (v25[++v33]);
      }
      else
      {
        std::basic_string<char16_t>::size_type v34 = 0;
      }
      std::basic_string<char16_t>::append(&v36, v25, v34);
      std::basic_string<char16_t> __p = v36;
      memset(&v36, 0, sizeof(v36));
      std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t>>((uint64_t **)a1, (unsigned __int16 *)&__p, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
      v30 += 56;
    }
    while (v30 != v31);
  }
  __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v38;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
LABEL_63:
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v40[0]);
}

void sub_1D2CAE270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23)
{
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*(void **)(v24 - 104));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v23);
  _Unwind_Resume(a1);
}

void *morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(void *a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4, uint64_t a5, uint64_t a6, unsigned __int16 *a7, uint64_t a8)
{
  *a1 = &unk_1F2A09848;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "d");
  uint64_t v15 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)__p);
  if (a2 + 16 == v15) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = *(void *)(v15 + 56);
  }
  if (v23 < 0) {
    operator delete(__p[0]);
  }
  a1[1] = v16;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"speak");
  uint64_t v17 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)__p);
  if (a2 + 16 == v17) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = *(void *)(v17 + 56);
  }
  if (v23 < 0) {
    operator delete(__p[0]);
  }
  a1[2] = v18;
  a1[3] = a3;
  BOOL v19 = (morphun::lang::features::LanguageGrammarFeatures *)(a2 + 104);
  a1[4] = a6;
  morphun::dialog::DefinitenessDisplayFunction::getArticles((uint64_t)(a1 + 5), v19, a4, a5);
  morphun::dialog::DefinitenessDisplayFunction::getArticles((uint64_t)(a1 + 8), v19, a7, a8);
  return a1;
}

void sub_1D2CAE474(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v1 + 48));
  _Unwind_Resume(a1);
}

void *morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(void *a1, morphun::dialog::SemanticFeatureModel *a2, unsigned __int16 *a3, unsigned __int16 *a4, uint64_t a5, unsigned __int16 *a6, unsigned __int16 *a7, uint64_t a8)
{
  uint64_t v15 = (uint64_t)a2 + 8;
  uint64_t v16 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)a2 + 8, a3);
  if ((morphun::dialog::SemanticFeatureModel *)((char *)a2 + 16) == (morphun::dialog::SemanticFeatureModel *)v16) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = *(const morphun::dialog::SemanticFeature **)(v16 + 56);
  }
  npc<morphun::dialog::SemanticFeature const>((uint64_t)v17);
  uint64_t DefaultFeatureFunction = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(a2, v17);
  uint64_t v19 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v15, a6);
  if ((morphun::dialog::SemanticFeatureModel *)((char *)a2 + 16) == (morphun::dialog::SemanticFeatureModel *)v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(const morphun::dialog::SemanticFeature **)(v19 + 56);
  }
  npc<morphun::dialog::SemanticFeature const>((uint64_t)v20);
  uint64_t v21 = morphun::dialog::SemanticFeatureModel::getDefaultFeatureFunction(a2, v20);

  return morphun::dialog::DefinitenessDisplayFunction::DefinitenessDisplayFunction(a1, (uint64_t)a2, DefaultFeatureFunction, a4, a5, v21, a7, a8);
}

void morphun::exception::ICUException::~ICUException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

morphun::exception::ICUException *morphun::exception::ICUException::ICUException(morphun::exception::ICUException *this, UErrorCode code)
{
  uint64_t v3 = u_errorName(code);
  int32_t v4 = strlen(v3);
  morphun::util::StringViewUtils::to_u16string(v3, v4, &__p);
  morphun::exception::Throwable::Throwable((uint64_t)this, (long long *)&__p);
  *(void *)this = &unk_1F2A112F8;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(void *)this = &unk_1F2A112C8;
  return this;
}

void sub_1D2CAE660(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *morphun::exception::ICUException::ICUException(void *a1, UErrorCode code, uint64_t a3)
{
  uint64_t v5 = u_errorName(code);
  int32_t v6 = strlen(v5);
  morphun::util::StringViewUtils::to_u16string(v5, v6, &v11);
  std::basic_string<char16_t>::append(&v11, L": ", 2uLL);
  std::basic_string<char16_t> v12 = v11;
  memset(&v11, 0, sizeof(v11));
  int v7 = *(char *)(a3 + 23);
  if (v7 >= 0) {
    int v8 = (const std::basic_string<char16_t>::value_type *)a3;
  }
  else {
    int v8 = *(const std::basic_string<char16_t>::value_type **)a3;
  }
  if (v7 >= 0) {
    std::basic_string<char16_t>::size_type v9 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::basic_string<char16_t>::size_type v9 = *(void *)(a3 + 8);
  }
  std::basic_string<char16_t>::append(&v12, v8, v9);
  std::basic_string<char16_t> __p = v12;
  memset(&v12, 0, sizeof(v12));
  morphun::exception::Throwable::Throwable((uint64_t)a1, (long long *)&__p);
  *a1 = &unk_1F2A112F8;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  *a1 = &unk_1F2A112C8;
  return a1;
}

void sub_1D2CAE7B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **com::apple::siri::tokenizer::data::config_pt::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::dictionary::metadata::CharsetConverter::~CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dictionary::metadata::CharsetConverter::~CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  ucnv_close();
}

morphun::dictionary::metadata::CharsetConverter *morphun::dictionary::metadata::CharsetConverter::CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this, const char *a2, const char *a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 40)) = *((void *)a2 + 1);
  int v13 = 0;
  npc<char const>((uint64_t)a3);
  *((void *)this + 1) = ucnv_open();
  if (v13 >= 1)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    UErrorCode v8 = v13;
    int32_t v9 = strlen(a3);
    morphun::util::StringViewUtils::to_u16string(a3, v9, &v11);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)v12, "C", &v11, v10);
    morphun::exception::ICUException::ICUException(exception, v8, (uint64_t)v12);
  }
  return this;
}

void sub_1D2CAEAD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

uint64_t npc<char const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CAEB80(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::dictionary::metadata::CharsetConverter *morphun::dictionary::metadata::CharsetConverter::CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this, const char *a2)
{
  *(void *)this = &off_1F2A08530;
  int v11 = 0;
  npc<char const>((uint64_t)a2);
  *((void *)this + 1) = ucnv_open();
  if (v11 >= 1)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    UErrorCode v6 = v11;
    int32_t v7 = strlen(a2);
    morphun::util::StringViewUtils::to_u16string(a2, v7, &v9);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)v10, "C", &v9, v8);
    morphun::exception::ICUException::ICUException(exception, v6, (uint64_t)v10);
  }
  return this;
}

void sub_1D2CAEC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void virtual thunk to'morphun::dictionary::metadata::CharsetConverter::~CharsetConverter(morphun::dictionary::metadata::CharsetConverter *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::dictionary::metadata::CharsetConverter::encode(uint64_t a1, std::string *a2, uint64_t a3, int a4)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  ucnv_safeClone();
  npc<std::string>((uint64_t)a2);
  std::string::resize(a2, a4 + 8, 0);
  int v6 = ucnv_fromUChars();
  if (a4 + 8 != v6) {
    std::string::resize(a2, v6, 0);
  }
  return ucnv_close();
}

void sub_1D2CAEF5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (v17) {
    __cxa_free_exception(v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<std::string>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CAF000(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::CharsetConverter::decode(uint64_t a1, std::basic_string<char16_t> *a2, uint64_t a3, int a4)
{
  ucnv_safeClone();
  npc<std::basic_string<char16_t>>((uint64_t)a2);
  std::basic_string<char16_t>::resize(a2, a4, 0);
  int v6 = ucnv_toUChars();
  std::basic_string<char16_t>::resize(a2, v6, 0);
  return ucnv_close();
}

void sub_1D2CAF1F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (v17) {
    __cxa_free_exception(v16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CAF29C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::util::AttributeRegistrationReflector::reflect(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[1];
  if (!v3)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[3];
  v6[0] = a1[2];
  v6[1] = (unint64_t)v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  morphun::analysis::util::AttributeSource::addAttributeImpl(v3, v6, a2);
  if (v4)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_1D2CAF35C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::util::AttributeRegistrationReflector::reflect(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 32))(a1, a2, a3, 0);
}

void morphun::analysis::util::AttributeRegistrationReflector::~AttributeRegistrationReflector(morphun::analysis::util::AttributeRegistrationReflector *this)
{
  *(void *)this = &off_1F2A103E8;
  uint64_t v1 = (std::__shared_weak_count *)*((void *)this + 3);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }

  JUMPOUT(0x1D942B8B0);
}

{
  std::__shared_weak_count *v1;

  *(void *)this = &off_1F2A103E8;
  uint64_t v1 = (std::__shared_weak_count *)*((void *)this + 3);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t *morphun::analysis::util::AttributeRegistrationReflector::AttributeRegistrationReflector(uint64_t *result, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = *a2;
  void *result = *a2;
  *(uint64_t *)((char *)result + *(void *)(v4 - 64)) = a2[1];
  *(uint64_t *)((char *)result + *(void *)(*result - 40)) = a2[2];
  uint64_t v6 = *a4;
  uint64_t v5 = a4[1];
  result[1] = a3;
  result[2] = v6;
  result[3] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *morphun::analysis::util::AttributeRegistrationReflector::AttributeRegistrationReflector(void *result, uint64_t a2, void *a3)
{
  void *result = &off_1F2A103E8;
  result[1] = a2;
  uint64_t v3 = a3[1];
  result[2] = *a3;
  result[3] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void virtual thunk to'morphun::analysis::util::AttributeRegistrationReflector::reflect(void *a1, uint64_t a2)
{
}

uint64_t virtual thunk to'morphun::analysis::util::AttributeRegistrationReflector::reflect(char *a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, void))(*(void *)&a1[*(void *)(*(void *)a1 - 48)]
                                                                     + 32))(&a1[*(void *)(*(void *)a1 - 48)], a2, a3, 0);
}

void mdv_create(morphun::dialog::SemanticFeatureModel *a1, uint64_t a2, const __CFDictionary *a3)
{
  if (a1)
  {
    morphun::dialog::SemanticUtils::to_constraintMap((morphun::dialog::SemanticUtils *)v4, a1, a3);
    operator new();
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2CAF6B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16)
{
  __cxa_free_exception(v17);
  if (a2 == 1)
  {
    uint64_t v20 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v20, v16, v21);
    __cxa_end_catch();
    JUMPOUT(0x1D2CAF668);
  }
  _Unwind_Resume(a1);
}

uint64_t mdv_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

uint64_t morphun::dialog::SemanticFeature::isAliased(morphun::dialog::SemanticFeature *this)
{
  return *((unsigned __int8 *)this + 64);
}

uint64_t morphun::dialog::SemanticFeature::getBoundedValues(morphun::dialog::SemanticFeature *this)
{
  return (uint64_t)this + 40;
}

uint64_t morphun::dialog::SemanticFeature::getName(morphun::dialog::SemanticFeature *this)
{
  return (uint64_t)this + 16;
}

uint64_t morphun::dialog::SemanticFeature::getType(morphun::dialog::SemanticFeature *this)
{
  return *((unsigned int *)this + 2);
}

void morphun::dialog::SemanticFeature::~SemanticFeature(morphun::dialog::SemanticFeature *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::SemanticFeature::~SemanticFeature(morphun::dialog::SemanticFeature *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 6));
  if (*((char *)this + 39) < 0) {
    operator delete(*((void **)this + 2));
  }
}

uint64_t morphun::dialog::SemanticFeature::SemanticFeature(uint64_t a1, uint64_t *a2, std::basic_string<char16_t> *__str, int a4, uint64_t a5, int a6)
{
  char v6 = a6;
  uint64_t v10 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v10 - 40)) = a2[1];
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a1 + 48;
  *(unsigned char *)(a1 + 64) = 0;
  if (a4 != 1)
  {
    if (*(void *)(a5 + 16))
    {
      exception = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Features of type ");
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a4, &v16);
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v13 = &v16;
      }
      else {
        int v13 = (std::basic_string<char16_t> *)v16.__r_.__value_.__r.__words[0];
      }
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v16.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v13, size);
      std::basic_string<char16_t> v18 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v19, &v18, L" do not support bounded values!");
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v19);
    }
    if (a6)
    {
      uint64_t v15 = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v19, (char *)L"Only bounded features can have aliases");
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v15, &v19);
    }
  }
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(a1 + 16), __str);
  *(_DWORD *)(a1 + 8) = a4;
  if (a1 + 40 != a5) {
    std::__tree<std::basic_string<char16_t>>::__assign_multi<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>((void *)(a1 + 40), *(void **)a5, (void *)(a5 + 8));
  }
  *(unsigned char *)(a1 + 64) = v6;
  return a1;
}

void sub_1D2CAFAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (v33 < 0) {
    operator delete(v32);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v34 & 1) == 0)
    {
LABEL_12:
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v29 + 48));
      if (*(char *)(v29 + 39) < 0) {
        operator delete(*v30);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v34)
  {
    goto LABEL_12;
  }
  __cxa_free_exception(v31);
  goto LABEL_12;
}

void *std::__tree<std::basic_string<char16_t>>::__assign_multi<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(void *result, void *a2, void *a3)
{
  uint64_t v5 = (uint64_t)result;
  if (result[2])
  {
    uint64_t v6 = *result;
    uint64_t v8 = (uint64_t **)(result + 1);
    uint64_t v7 = result[1];
    void *result = result + 1;
    *(void *)(v7 + 16) = 0;
    result[1] = 0;
    result[2] = 0;
    if (*(void *)(v6 + 8)) {
      std::basic_string<char16_t> v9 = *(uint64_t **)(v6 + 8);
    }
    else {
      std::basic_string<char16_t> v9 = (uint64_t *)v6;
    }
    int v22 = (unsigned __int16 *)result;
    char v23 = v9;
    uint64_t v24 = (unsigned __int16 *)v9;
    if (v9)
    {
      char v23 = std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next((uint64_t)v9);
      if (a2 != a3)
      {
        uint64_t v10 = a2;
        do
        {
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v9 + 4), (const std::basic_string<char16_t> *)(v10 + 4));
          int v11 = *v8;
          std::basic_string<char16_t> v12 = (uint64_t **)(v5 + 8);
          int v13 = (uint64_t **)(v5 + 8);
          if (*v8)
          {
            do
            {
              while (1)
              {
                std::basic_string<char16_t> v12 = (uint64_t **)v11;
                if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v24 + 16, (unsigned __int16 *)v11 + 16))break; {
                int v11 = *v12;
                }
                int v13 = v12;
                if (!*v12) {
                  goto LABEL_14;
                }
              }
              int v11 = v12[1];
            }
            while (v11);
            int v13 = v12 + 1;
          }
LABEL_14:
          std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)v5, (uint64_t)v12, v13, (uint64_t *)v24);
          std::basic_string<char16_t> v9 = v23;
          uint64_t v24 = (unsigned __int16 *)v23;
          if (v23) {
            char v23 = std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next((uint64_t)v23);
          }
          int v14 = (void *)v10[1];
          if (v14)
          {
            do
            {
              a2 = v14;
              int v14 = (void *)*v14;
            }
            while (v14);
          }
          else
          {
            do
            {
              a2 = (void *)v10[2];
              BOOL v15 = *a2 == (void)v10;
              uint64_t v10 = a2;
            }
            while (!v15);
          }
          if (!v9) {
            break;
          }
          uint64_t v10 = a2;
        }
        while (a2 != a3);
      }
    }
    BOOL result = (void *)std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)&v22);
  }
  if (a2 != a3)
  {
    do
    {
      std::__tree<std::basic_string<char16_t>>::__construct_node<std::basic_string<char16_t> const&>((uint64_t)&v22, v5, (uint64_t)(a2 + 4));
      std::basic_string<char16_t> v16 = v22;
      char v17 = *(uint64_t **)(v5 + 8);
      std::basic_string<char16_t> v18 = (uint64_t **)(v5 + 8);
      long long v19 = (uint64_t **)(v5 + 8);
      if (v17)
      {
        do
        {
          while (1)
          {
            std::basic_string<char16_t> v18 = (uint64_t **)v17;
            if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v16 + 16, (unsigned __int16 *)v17 + 16))break; {
            char v17 = *v18;
            }
            long long v19 = v18;
            if (!*v18) {
              goto LABEL_31;
            }
          }
          char v17 = v18[1];
        }
        while (v17);
        long long v19 = v18 + 1;
      }
LABEL_31:
      BOOL result = std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)v5, (uint64_t)v18, v19, (uint64_t *)v16);
      uint64_t v20 = (void *)a2[1];
      if (v20)
      {
        do
        {
          uint64_t v21 = v20;
          uint64_t v20 = (void *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          uint64_t v21 = (void *)a2[2];
          BOOL v15 = *v21 == (void)a2;
          a2 = v21;
        }
        while (!v15);
      }
      a2 = v21;
    }
    while (v21 != a3);
  }
  return result;
}

void sub_1D2CAFDD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next(uint64_t a1)
{
  BOOL result = *(void **)(a1 + 16);
  if (result)
  {
    uint64_t v3 = (void *)*result;
    if (*result == a1)
    {
      void *result = 0;
      while (1)
      {
        uint64_t v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          BOOL result = v4;
          uint64_t v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; uint64_t v3 = (void *)result[1])
      {
        do
        {
          BOOL result = v3;
          uint64_t v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100](uint64_t a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v2);
  }
  return a1;
}

uint64_t morphun::dialog::SemanticFeature::SemanticFeature(uint64_t a1, const std::basic_string<char16_t> *a2, int a3, void *a4, int a5)
{
  char v5 = a5;
  *(void *)a1 = &off_1F2A08FB0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = a1 + 48;
  std::basic_string<char16_t> v9 = (void *)(a1 + 40);
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  if (a3 != 1)
  {
    if (a4[2])
    {
      exception = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Features of type ");
      morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a3, &v15);
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t> v12 = &v15;
      }
      else {
        std::basic_string<char16_t> v12 = (std::basic_string<char16_t> *)v15.__r_.__value_.__r.__words[0];
      }
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v15.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v12, size);
      std::basic_string<char16_t> v17 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v18, &v17, L" do not support bounded values!");
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v18);
    }
    if (a5)
    {
      int v14 = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v18, (char *)L"Only bounded features can have aliases");
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v14, &v18);
    }
  }
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(a1 + 16), a2);
  *(_DWORD *)(a1 + 8) = a3;
  if (v9 != a4) {
    std::__tree<std::basic_string<char16_t>>::__assign_multi<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>(v9, (void *)*a4, a4 + 1);
  }
  *(unsigned char *)(a1 + 64) = v5;
  return a1;
}

void sub_1D2CB0060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (v33 < 0) {
    operator delete(v32);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v34 & 1) == 0)
    {
LABEL_12:
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v29 + 48));
      if (*(char *)(v29 + 39) < 0) {
        operator delete(*v30);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v34)
  {
    goto LABEL_12;
  }
  __cxa_free_exception(v31);
  goto LABEL_12;
}

morphun::dialog::SemanticFeature *morphun::dialog::SemanticFeature::SemanticFeature(morphun::dialog::SemanticFeature *this, const morphun::dialog::SemanticFeature *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 40)) = *((void *)a2 + 1);
  *((_DWORD *)this + 2) = *(_DWORD *)(a3 + 8);
  if (*(char *)(a3 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 16), *(const std::basic_string<char16_t>::value_type **)(a3 + 16), *(void *)(a3 + 24));
  }
  else
  {
    long long v6 = *(_OWORD *)(a3 + 16);
    *((void *)this + 4) = *(void *)(a3 + 32);
    *((_OWORD *)this + 1) = v6;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)this + 5, a3 + 40);
  *((unsigned char *)this + 64) = *(unsigned char *)(a3 + 64);
  return this;
}

void sub_1D2CB023C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

morphun::dialog::SemanticFeature *morphun::dialog::SemanticFeature::SemanticFeature(morphun::dialog::SemanticFeature *this, const morphun::dialog::SemanticFeature *a2)
{
  *(void *)this = &off_1F2A08FB0;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  if (*((char *)a2 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 16), *((const std::basic_string<char16_t>::value_type **)a2 + 2), *((void *)a2 + 3));
  }
  else
  {
    long long v4 = *((_OWORD *)a2 + 1);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((_OWORD *)this + 1) = v4;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)this + 5, (uint64_t)a2 + 40);
  *((unsigned char *)this + 64) = *((unsigned char *)a2 + 64);
  return this;
}

void sub_1D2CB02F0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void virtual thunk to'morphun::dialog::SemanticFeature::~SemanticFeature(morphun::dialog::SemanticFeature *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void morphun::dialog::SemanticFeature::noValue()
{
}

void sub_1D2CB03FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(a11);
  MEMORY[0x1D942B8B0](v11, 0x10B3C40130681FCLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticFeature::boundedValue()
{
}

void sub_1D2CB0488(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C40130681FCLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticFeature::unboundedValue()
{
}

void sub_1D2CB0520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(a11);
  MEMORY[0x1D942B8B0](v11, 0x10B3C40130681FCLL);
  _Unwind_Resume(a1);
}

BOOL morphun::dialog::SemanticFeature::operator<(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(unsigned __int8 *)(a2 + 39);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    unint64_t v2 = *(void *)(a2 + 24);
  }
  unint64_t v4 = *(unsigned __int8 *)(a1 + 39);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    unint64_t v4 = *(void *)(a1 + 24);
  }
  if (v2 >= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v2;
  }
  if (v6)
  {
    std::basic_string<char16_t> v9 = *(unsigned __int16 **)(a1 + 16);
    uint64_t v7 = (unsigned __int16 *)(a1 + 16);
    uint64_t v8 = v9;
    if (v5 >= 0) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = v8;
    }
    int v13 = *(unsigned __int16 **)(a2 + 16);
    uint64_t v11 = (unsigned __int16 *)(a2 + 16);
    std::basic_string<char16_t> v12 = v13;
    if (v3 >= 0) {
      int v14 = v11;
    }
    else {
      int v14 = v12;
    }
    while (1)
    {
      unsigned int v15 = *v10;
      unsigned int v16 = *v14;
      if (v16 != v15) {
        break;
      }
      ++v10;
      ++v14;
      if (!--v6) {
        goto LABEL_17;
      }
    }
    BOOL v17 = v15 >= v16;
  }
  else
  {
LABEL_17:
    BOOL v17 = v4 >= v2;
  }
  return !v17;
}

BOOL morphun::dialog::SemanticFeature::operator==(uint64_t a1, uint64_t a2)
{
  int v2 = *(char *)(a1 + 39);
  uint64_t v3 = *(void *)(a1 + 24);
  if (v2 >= 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 39);
  }
  uint64_t v4 = *(unsigned __int8 *)(a2 + 39);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 24);
  }
  if (v3 != v4) {
    return 0;
  }
  if (!v3) {
    return 1;
  }
  if (v5 >= 0) {
    unint64_t v6 = (unsigned __int16 *)(a2 + 16);
  }
  else {
    unint64_t v6 = *(unsigned __int16 **)(a2 + 16);
  }
  if (v2 >= 0) {
    uint64_t v7 = (unsigned __int16 *)(a1 + 16);
  }
  else {
    uint64_t v7 = *(unsigned __int16 **)(a1 + 16);
  }
  uint64_t v8 = v3 - 1;
  do
  {
    int v10 = *v7++;
    int v9 = v10;
    int v12 = *v6++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    BOOL result = v11 == v9;
  }
  while (v11 == v9 && v14);
  return result;
}

void morphun::dialog::language::EsCommonConceptFactory::createAndList()
{
}

void sub_1D2CB076C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  morphun::dialog::SemanticConceptList::~SemanticConceptList(v15, (void ***)&off_1F2A05E30);
  MEMORY[0x1D942B8B0](v15, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::EsCommonConceptFactory::createOrList()
{
}

void sub_1D2CB08F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  morphun::dialog::SemanticConceptList::~SemanticConceptList(v15, (void ***)&off_1F2A05DA8);
  MEMORY[0x1D942B8B0](v15, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::EsCommonConceptFactory::~EsCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A057A8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A057A8);
}

void morphun::tokenizer::locale::de::DeWordAndDelimiterTokenExtractor::createIterator()
{
}

void sub_1D2CB0A54(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4090EFAF24);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::de::DeWordAndDelimiterTokenExtractor::~DeWordAndDelimiterTokenExtractor(morphun::tokenizer::locale::de::DeWordAndDelimiterTokenExtractor *this)
{
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A08190);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A08190);
}

uint64_t morphun::dialog::SemanticFeatureConceptBase::getSpeakFeature(morphun::dialog::SemanticFeatureConceptBase *this)
{
  uint64_t v1 = *((void *)this + 1);
  if (v1)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"speak");
    uint64_t v2 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v1 + 8, (unsigned __int16 *)__p);
    if (v1 + 16 == v2) {
      uint64_t v1 = 0;
    }
    else {
      uint64_t v1 = *(void *)(v2 + 56);
    }
    if (v5 < 0) {
      operator delete(__p[0]);
    }
  }
  return v1;
}

uint64_t morphun::dialog::SemanticFeatureConceptBase::getFeatureValueByName(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  uint64_t v5 = npc<morphun::dialog::SemanticFeatureModel const>(v4);
  uint64_t v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v5 + 8, a2);
  if (v4 + 16 == v6 || !*(void *)(v6 + 56))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    int v10 = (const void **)a2;
    int v11 = exception;
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, v10, L" is not a valid feature name for the SemanticFeatureModel");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v11, &v12);
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 104);

  return v7(a1);
}

void sub_1D2CB0C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void sub_1D2CB0CCC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticFeatureConceptBase::reset(void ***this)
{
  uint64_t v1 = this + 3;
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(this[3]);
  *(v1 - 1) = v1;
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t morphun::dialog::SemanticFeatureConceptBase::clearConstraintByName(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  uint64_t v5 = npc<morphun::dialog::SemanticFeatureModel const>(v4);
  uint64_t v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v5 + 8, a2);
  if (v4 + 16 == v6 || !*(void *)(v6 + 56))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    int v10 = (const void **)a2;
    int v11 = exception;
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, v10, L" is not a valid feature name for the SemanticFeatureModel");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v11, &v12);
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 80);

  return v7(a1);
}

void sub_1D2CB0E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::dialog::SemanticFeatureConceptBase::clearConstraint(morphun::dialog::SemanticFeatureConceptBase *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t v3 = (uint64_t **)((char *)this + 16);
  uint64_t v4 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)this + 16, (uint64_t)a2);
  if ((uint64_t *)((char *)this + 24) != v4)
  {
    uint64_t v5 = (void **)v4;
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__remove_node_pointer(v3, v4);
    std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(v5 + 4);
    operator delete(v5);
  }
}

uint64_t *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      uint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  uint64_t v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
  return v3;
}

uint64_t *std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2;
  if (*a2)
  {
    uint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      uint64_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      uint64_t v3 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  uint64_t v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 == v3)
  {
    uint64_t *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      uint64_t v7 = 0;
      BOOL result = (uint64_t *)v2;
    }
    else
    {
      uint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    uint64_t *v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      BOOL result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 != v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v18 = v7[1];
      *(void *)uint64_t v12 = v18;
      if (v18) {
        *(void *)(v18 + 16) = v12;
      }
      v7[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
      v7[1] = v12;
      *(void *)(v12 + 16) = v7;
      if (result == (uint64_t *)v12) {
        BOOL result = v7;
      }
      uint64_t v7 = *(uint64_t **)v12;
    }
    long long v19 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v19 + 24)) {
      goto LABEL_68;
    }
    uint64_t v20 = (uint64_t *)v7[1];
    if (v20 && !*((unsigned char *)v20 + 24))
    {
      if (v19 && !*((unsigned char *)v19 + 24))
      {
LABEL_68:
        uint64_t v20 = v7;
      }
      else
      {
        *((unsigned char *)v20 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v26 = *v20;
        v7[1] = *v20;
        if (v26) {
          *(void *)(v26 + 16) = v7;
        }
        v20[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
        *uint64_t v20 = (uint64_t)v7;
        v7[2] = (uint64_t)v20;
        long long v19 = v7;
      }
      uint64_t v23 = v20[2];
      *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v19 + 24) = 1;
      uint64_t v24 = *(uint64_t **)v23;
      uint64_t v27 = *(void *)(*(void *)v23 + 8);
      *(void *)uint64_t v23 = v27;
      if (v27) {
        *(void *)(v27 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      v24[1] = v23;
      goto LABEL_72;
    }
    *((unsigned char *)v7 + 24) = 0;
    BOOL v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    int v13 = *(uint64_t **)(v12 + 8);
    uint64_t v14 = *v13;
    *(void *)(v12 + 8) = *v13;
    if (v14) {
      *(void *)(v14 + 16) = v12;
    }
    v13[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
    uint64_t *v13 = v12;
    *(void *)(v12 + 16) = v13;
    if (result == (uint64_t *)*v7) {
      BOOL result = v7;
    }
    uint64_t v7 = *(uint64_t **)(*v7 + 8);
  }
  unsigned int v15 = (void *)*v7;
  if (!*v7 || *((unsigned char *)v15 + 24))
  {
    int v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_59;
    }
    *((unsigned char *)v7 + 24) = 0;
    BOOL v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      BOOL v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  int v16 = (uint64_t *)v7[1];
  if (v16 && !*((unsigned char *)v16 + 24))
  {
LABEL_59:
    unsigned int v15 = v7;
  }
  else
  {
    *((unsigned char *)v15 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v22 = v15[1];
    *uint64_t v7 = v22;
    if (v22) {
      *(void *)(v22 + 16) = v7;
    }
    void v15[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
    v15[1] = v7;
    v7[2] = (uint64_t)v15;
    int v16 = v7;
  }
  uint64_t v23 = v15[2];
  *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v16 + 24) = 1;
  uint64_t v24 = *(uint64_t **)(v23 + 8);
  uint64_t v25 = *v24;
  *(void *)(v23 + 8) = *v24;
  if (v25) {
    *(void *)(v25 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  *uint64_t v24 = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

uint64_t morphun::dialog::SemanticFeatureConceptBase::putConstraintByName(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  uint64_t v5 = npc<morphun::dialog::SemanticFeatureModel const>(v4);
  uint64_t v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v5 + 8, a2);
  if (v4 + 16 == v6 || !*(void *)(v6 + 56))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v10, (const void **)a2, L" is not a valid feature name for the SemanticFeatureModel");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v10);
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 64);

  return v7(a1);
}

void sub_1D2CB13DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

std::basic_string<char16_t> *morphun::dialog::SemanticFeatureConceptBase::putConstraint(uint64_t a1, const morphun::dialog::SemanticFeature *a2, const std::basic_string<char16_t> *a3)
{
  uint64_t v6 = a2;
  uint64_t v4 = (std::basic_string<char16_t> *)(std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::piecewise_construct_t const&,std::tuple<morphun::dialog::SemanticFeature const&>,std::tuple<>>((uint64_t **)(a1 + 16), (uint64_t)a2, &v6)+ 13);

  return std::basic_string<char16_t>::operator=(v4, a3);
}

BOOL morphun::dialog::SemanticFeatureConceptBase::hasConstraint(morphun::dialog::SemanticFeatureConceptBase *this, const morphun::dialog::SemanticFeature *a2)
{
  return (void *)((char *)this + 24) != std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)this + 16, (uint64_t)a2);
}

uint64_t morphun::dialog::SemanticFeatureConceptBase::getConstraint(morphun::dialog::SemanticFeatureConceptBase *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t v3 = (morphun::dialog::SemanticFeatureConceptBase *)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)this + 16, (uint64_t)a2);
  if ((morphun::dialog::SemanticFeatureConceptBase *)((char *)this + 24) == v3) {
    return 0;
  }
  else {
    return (uint64_t)v3 + 104;
  }
}

uint64_t morphun::dialog::SemanticFeatureConceptBase::getModel(morphun::dialog::SemanticFeatureConceptBase *this)
{
  return *((void *)this + 1);
}

void *morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(void *this, const morphun::dialog::SemanticFeatureModel *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)a2;
  *this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v3 - 72)) = *((void *)a2 + 1);
  *(void *)((char *)this + *(void *)(*this - 56)) = *((void *)a2 + 2);
  *(void *)((char *)this + *(void *)(*this - 40)) = *((void *)a2 + 3);
  this[4] = 0;
  this[3] = 0;
  this[1] = a3;
  this[2] = this + 3;
  return this;
}

morphun::dialog::SemanticFeatureConceptBase *morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(morphun::dialog::SemanticFeatureConceptBase *this, const morphun::dialog::SemanticFeatureConceptBase *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v4 - 72)) = *((void *)a2 + 1);
  *(void *)((char *)this + *(void *)(*(void *)this - 56)) = *((void *)a2 + 2);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 3);
  *((void *)this + 1) = *(void *)(a3 + 8);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)this + 2, a3 + 16);
  return this;
}

void morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(void ***this, void ***a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(void *)((char *)*(v2 - 9) + (void)this) = a2[1];
  *(void *)((char *)*(*this - 7) + (void)this) = a2[2];
  *(void *)((char *)*(*this - 5) + (void)this) = a2[3];
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(this[3]);
}

_DWORD *morphun::tokenizer::OversizedTokenModifier::modifyTokens(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_35;
  }
  int v4 = result[8];
  if (v4 < 1) {
    return result;
  }
  if (!a4)
  {
LABEL_35:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v5 = *(void *)(a4 + 80);
  if (v5)
  {
    do
    {
      if (*(_DWORD *)(v5 + 12) > *(_DWORD *)(v5 + 8) && !*(unsigned char *)(v5 + 65))
      {
        v4 -= result == 0;
      }
      uint64_t v5 = *(void *)(v5 + 80);
      if (v5) {
        BOOL v6 = v4 <= 0;
      }
      else {
        BOOL v6 = 1;
      }
    }
    while (!v6);
    if (v5)
    {
      while (1)
      {
        if (*(_DWORD *)(v5 + 12) != *(_DWORD *)(v5 + 8) && !*(unsigned char *)(v5 + 65))
        {
          if (!result) {
            break;
          }
        }
        uint64_t v5 = *(void *)(v5 + 80);
        if (!v5) {
          return result;
        }
      }
      if (*(void *)(v5 + 80))
      {
        memset(&v20, 0, sizeof(v20));
        memset(&v19, 0, sizeof(v19));
        uint64_t v7 = v5;
        while (1)
        {
          uint64_t v8 = v7;
          uint64_t v11 = *(const std::basic_string<char16_t>::value_type **)(v7 + 16);
          uint64_t v9 = v7 + 16;
          long long v10 = v11;
          int v12 = *(char *)(v9 + 23);
          if (v12 >= 0) {
            int v13 = (const std::basic_string<char16_t>::value_type *)v9;
          }
          else {
            int v13 = v10;
          }
          if (v12 >= 0) {
            std::basic_string<char16_t>::size_type v14 = *(unsigned __int8 *)(v9 + 23);
          }
          else {
            std::basic_string<char16_t>::size_type v14 = *(void *)(v9 + 8);
          }
          std::basic_string<char16_t>::append(&v20, v13, v14);
          int v15 = *(char *)(v8 + 63);
          if (v15 >= 0) {
            int v16 = (const std::basic_string<char16_t>::value_type *)(v8 + 40);
          }
          else {
            int v16 = *(const std::basic_string<char16_t>::value_type **)(v8 + 40);
          }
          if (v15 >= 0) {
            std::basic_string<char16_t>::size_type v17 = *(unsigned __int8 *)(v8 + 63);
          }
          else {
            std::basic_string<char16_t>::size_type v17 = *(void *)(v8 + 48);
          }
          std::basic_string<char16_t>::append(&v19, v16, v17);
          uint64_t v7 = *(void *)(v8 + 80);
          if (!v7) {
            operator new();
          }
        }
      }
    }
  }
  return result;
}

void sub_1D2CB1C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  MEMORY[0x1D942B8B0](v22, 0x10B3C405B5873CALL);
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

void morphun::analysis::RuAnalyzer::addWordNormalizationFilter(morphun::analysis::RuAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CB1DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::RuAnalyzer::addStopFilter(morphun::analysis::RuAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CB1EA0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::RuAnalyzer::~RuAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06F80);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06F80);
}

void morphun::exception::Exception::~Exception(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::Exception::Exception(morphun::exception::Exception *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11578;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11578;
  return result;
}

void *morphun::exception::Exception::Exception(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11578;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  void *result = &unk_1F2A11578;
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_ms::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v3[2] = xmmword_1E696BB00;
  _OWORD v3[3] = *(_OWORD *)&off_1E696BB10;
  int v4 = "(";
  v3[0] = xmmword_1E696BAE0;
  v3[1] = unk_1E696BAF0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

uint64_t *morphun::analysis::util::AttributeImpl::AttributeImpl(uint64_t *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(void *)(v2 - 88)) = a2[1];
  *(uint64_t *)((char *)this + *(void *)(*this - 56)) = a2[2];
  *(uint64_t *)((char *)this + *(void *)(*this - 40)) = a2[3];
  return this;
}

uint64_t morphun::analysis::util::AttributeImpl::reflectAsString@<X0>(morphun::analysis::util::AttributeImpl *this@<X0>, char a2@<W1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  npc<std::basic_string<char16_t>>((uint64_t)a3);
  v7[1] = a3;
  char v8 = a2;
}

void sub_1D2CB2284(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::ArAnalyzer::addWordNormalizationFilter(morphun::analysis::ArAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2CB2934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,char *a42)
{
  MEMORY[0x1D942B8B0](v42, 0x1012C40EC159624);
  a18 = &a21;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v45 = 0;
  while (1)
  {
    if (*((char *)&a42 + 8 * v45 + 95) < 0) {
      operator delete((&a42)[v45 + 9]);
    }
    v45 -= 3;
    if (v45 == -12)
    {
      a42 = &a24;
      std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a42);
      a42 = &a27;
      std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a42);
      uint64_t v46 = 0;
      uint64_t v47 = v43 - 176;
      while (1)
      {
        uint64_t v48 = *(void **)(v47 + v46 + 48);
        if (v48)
        {
          *(void *)(v47 + v46 + 56) = v48;
          operator delete(v48);
        }
        v46 -= 24;
        if (v46 == -72)
        {
          if (__p) {
            operator delete(__p);
          }
          MEMORY[0x1D942B8B0](a17, 0x10F3C4029A3C7BDLL);
          _Unwind_Resume(a1);
        }
      }
    }
  }
}

uint64_t morphun::analysis::ArAnalyzer::addStopFilter(uint64_t a1, uint64_t a2)
{
  return a2;
}

void morphun::analysis::ArAnalyzer::addCharacterNormalizationFilter(morphun::analysis::ArAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CB2BD4(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07658);
  MEMORY[0x1D942B8B0](v1, 0x10E1C40E08A22EALL);
  _Unwind_Resume(a1);
}

void morphun::analysis::ArAnalyzer::~ArAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06C80);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06C80);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_EmptyConstraintInflectorPattern::inflect(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 24))(a1))
  {
    if (*(char *)(a2 + 23) < 0)
    {
      uint64_t v5 = *(const std::basic_string<char16_t>::value_type **)a2;
      std::basic_string<char16_t>::size_type v6 = *(void *)(a2 + 8);
      std::basic_string<char16_t>::__init_copy_ctor_external(a3, v5, v6);
    }
    else
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      a3->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
    }
  }
  else
  {
    a3->__r_.__value_.__r.__words[0] = 0;
    a3->__r_.__value_.__l.__size_ = 0;
    a3->__r_.__value_.__r.__words[2] = 0;
  }
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_EmptyConstraintInflectorPattern::isSupported(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 + 16) == 0;
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_EmptyConstraintInflectorPattern::~NlGrammarSynthesizer_EmptyConstraintInflectorPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_EmptyConstraintInflectorPattern *this)
{
}

void morphun::analysis::Analyzer_GlobalReuseStrategy::~Analyzer_GlobalReuseStrategy(morphun::analysis::Analyzer_GlobalReuseStrategy *this)
{
}

uint64_t *morphun::analysis::Analyzer_GlobalReuseStrategy::Analyzer_GlobalReuseStrategy(uint64_t *this, uint64_t *a2)
{
  uint64_t v2 = a2[1];
  *this = v2;
  *(uint64_t *)((char *)this + *(void *)(v2 - 40)) = a2[2];
  uint64_t v3 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(void *)(v3 - 40)) = a2[3];
  return this;
}

void *morphun::analysis::Analyzer_GlobalReuseStrategy::Analyzer_GlobalReuseStrategy(void *this)
{
  *this = &off_1F2A0FEA8;
  return this;
}

uint64_t morphun::dialog::language::RuCommonConceptFactory::quantifyType(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a4)
  {
LABEL_109:
    uint64_t v63 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + *(void *)(*(void *)a3 - 56)) + 24))(a3 + *(void *)(*(void *)a3 - 56));
    if (!v63)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    goto LABEL_110;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 128))(a3);
  long long v10 = (morphun::grammar::synthesis::GrammemeConstants *)npc<morphun::dialog::SemanticFeatureConceptBase>(v9);
  memset(&v67, 0, sizeof(v67));
  if (a5 == 1)
  {
    uint64_t v11 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v10);
    std::basic_string<char16_t>::operator=(&v67, v11);
    goto LABEL_106;
  }
  uint64_t v12 = (*(uint64_t (**)(uint64_t, void))(*(void *)v9 + 104))(v9, a1[94]);
  uint64_t v13 = v12;
  memset(&__p, 0, sizeof(__p));
  if (!v12) {
    goto LABEL_53;
  }
  uint64_t v14 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v12);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 32))(v13);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 23);
  int v17 = (char)v16;
  if ((v16 & 0x80u) != 0) {
    uint64_t v16 = *(void *)(v14 + 8);
  }
  uint64_t v18 = *(unsigned __int8 *)(v15 + 23);
  int v19 = (char)v18;
  if ((v18 & 0x80u) != 0) {
    uint64_t v18 = *(void *)(v15 + 8);
  }
  if (v16 == v18)
  {
    if (!v16) {
      goto LABEL_21;
    }
    if (v19 >= 0) {
      std::basic_string<char16_t> v20 = (unsigned __int16 *)v15;
    }
    else {
      std::basic_string<char16_t> v20 = *(unsigned __int16 **)v15;
    }
    if (v17 >= 0) {
      BOOL v21 = (unsigned __int16 *)v14;
    }
    else {
      BOOL v21 = *(unsigned __int16 **)v14;
    }
    while (*v20 == *v21)
    {
      ++v21;
      ++v20;
      if (!--v16) {
        goto LABEL_21;
      }
    }
  }
  uint64_t v22 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 32))(v13);
  std::basic_string<char16_t>::operator=(&__p, v22);
LABEL_21:
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 16))(v13);
  std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_53;
  }
  uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v12);
  uint64_t v24 = *(unsigned __int8 *)(v12 + 23);
  int v25 = (char)v24;
  if ((v24 & 0x80u) != 0) {
    uint64_t v24 = *(void *)(v12 + 8);
  }
  std::basic_string<char16_t>::size_type v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v26 = __p.__r_.__value_.__l.__size_;
  }
  if (v24 == v26)
  {
    if (!v24) {
      goto LABEL_53;
    }
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    if (v25 >= 0) {
      int v28 = (unsigned __int16 *)v12;
    }
    else {
      int v28 = *(unsigned __int16 **)v12;
    }
    while ((unsigned __int16)p_p->__r_.__value_.__s.__data_[0] == *v28)
    {
      ++v28;
      p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
      if (!--v24) {
        goto LABEL_53;
      }
    }
  }
  uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v12);
  int v29 = *(char *)(v12 + 23);
  if (v29 >= 0) {
    uint64_t v30 = *(unsigned __int8 *)(v12 + 23);
  }
  else {
    uint64_t v30 = *(void *)(v12 + 8);
  }
  std::basic_string<char16_t>::size_type v31 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  char v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type v33 = __p.__r_.__value_.__l.__size_;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v34 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v34 = __p.__r_.__value_.__l.__size_;
  }
  if (v30 != v34) {
    goto LABEL_54;
  }
  if (!v30)
  {
LABEL_53:
    uint64_t v37 = a1[94];
    uint64_t v38 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)v12);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v9 + 64))(v9, v37, v38);
    std::basic_string<char16_t>::size_type v31 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type v33 = __p.__r_.__value_.__l.__size_;
    char v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    goto LABEL_54;
  }
  uint64_t v35 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v35 = &__p;
  }
  if (v29 >= 0) {
    std::basic_string<char16_t> v36 = (unsigned __int16 *)v12;
  }
  else {
    std::basic_string<char16_t> v36 = *(unsigned __int16 **)v12;
  }
  while ((unsigned __int16)v35->__r_.__value_.__s.__data_[0] == *v36)
  {
    ++v36;
    uint64_t v35 = (std::basic_string<char16_t> *)((char *)v35 + 2);
    if (!--v30) {
      goto LABEL_53;
    }
  }
LABEL_54:
  if (v32 < 0) {
    std::basic_string<char16_t>::size_type v31 = v33;
  }
  if (v31)
  {
    uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v12);
    uint64_t v39 = *(unsigned __int8 *)(v12 + 23);
    int v40 = (char)v39;
    if ((v39 & 0x80u) != 0) {
      uint64_t v39 = *(void *)(v12 + 8);
    }
    std::basic_string<char16_t>::size_type v41 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v41 = __p.__r_.__value_.__l.__size_;
    }
    if (v39 != v41) {
      goto LABEL_72;
    }
    if (v39)
    {
      uint64_t v42 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v42 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if (v40 >= 0) {
        uint64_t v43 = (unsigned __int16 *)v12;
      }
      else {
        uint64_t v43 = *(unsigned __int16 **)v12;
      }
      while ((unsigned __int16)v42->__r_.__value_.__s.__data_[0] == *v43)
      {
        ++v43;
        uint64_t v42 = (std::basic_string<char16_t> *)((char *)v42 + 2);
        if (!--v39) {
          goto LABEL_70;
        }
      }
      goto LABEL_72;
    }
  }
LABEL_70:
  if (a5 != 3)
  {
LABEL_72:
    uint64_t v45 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v12);
    uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
    int v47 = (char)v46;
    if ((v46 & 0x80u) != 0) {
      uint64_t v46 = *(void *)(v45 + 8);
    }
    std::basic_string<char16_t>::size_type v48 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v48 = __p.__r_.__value_.__l.__size_;
    }
    if (v46 != v48) {
      goto LABEL_102;
    }
    if (v46)
    {
      int v49 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v49 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if (v47 >= 0) {
        uint64_t v50 = (unsigned __int16 *)v45;
      }
      else {
        uint64_t v50 = *(unsigned __int16 **)v45;
      }
      while ((unsigned __int16)v49->__r_.__value_.__s.__data_[0] == *v50)
      {
        ++v50;
        int v49 = (std::basic_string<char16_t> *)((char *)v49 + 2);
        if (!--v46) {
          goto LABEL_85;
        }
      }
      goto LABEL_102;
    }
LABEL_85:
    if (a5 != 3)
    {
LABEL_102:
      std::basic_string<char16_t>::size_type v44 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v45);
      goto LABEL_103;
    }
    uint64_t v51 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 128))(a3);
    npc<morphun::dialog::SemanticFeatureConceptBase>(v51);
    (*(void (**)(uint64_t, void))(*(void *)v51 + 80))(v51, a1[94]);
    uint64_t v52 = (*(uint64_t (**)(uint64_t, void))(*(void *)v51 + 104))(v51, a1[96]);
    uint64_t v53 = v52;
    if (v52)
    {
      uint64_t v54 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v52);
      uint64_t v52 = (*(uint64_t (**)(uint64_t))(*(void *)v53 + 32))(v53);
      uint64_t v55 = *(unsigned __int8 *)(v54 + 23);
      int v56 = (char)v55;
      if ((v55 & 0x80u) != 0) {
        uint64_t v55 = *(void *)(v54 + 8);
      }
      uint64_t v57 = *(unsigned __int8 *)(v52 + 23);
      int v58 = (char)v57;
      if ((v57 & 0x80u) != 0) {
        uint64_t v57 = *(void *)(v52 + 8);
      }
      if (v55 == v57)
      {
        if (!v55)
        {
LABEL_101:
          std::string v61 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v52);
LABEL_114:
          std::basic_string<char16_t>::operator=(&v67, v61);
          if (v53) {
            (*(void (**)(uint64_t))(*(void *)v53 + 16))(v53);
          }
          (*(void (**)(uint64_t))(*(void *)v51 + 16))(v51);
          goto LABEL_104;
        }
        if (v58 >= 0) {
          BOOL v59 = (unsigned __int16 *)v52;
        }
        else {
          BOOL v59 = *(unsigned __int16 **)v52;
        }
        if (v56 >= 0) {
          std::basic_string<char16_t>::size_type v60 = (unsigned __int16 *)v54;
        }
        else {
          std::basic_string<char16_t>::size_type v60 = *(unsigned __int16 **)v54;
        }
        while (*v59 == *v60)
        {
          ++v60;
          ++v59;
          if (!--v55) {
            goto LABEL_101;
          }
        }
      }
    }
    std::string v61 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v52);
    goto LABEL_114;
  }
  std::basic_string<char16_t>::size_type v44 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v12);
LABEL_103:
  std::basic_string<char16_t>::operator=(&v67, v44);
LABEL_104:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_106:
  uint64_t v62 = a1[47];
  npc<morphun::dialog::SemanticFeature const>(v62);
  (*(void (**)(uint64_t, uint64_t, std::basic_string<char16_t> *))(*(void *)v9 + 64))(v9, v62, &v67);
  uint64_t v63 = (*(uint64_t (**)(uint64_t))(*(void *)(v9 + *(void *)(*(void *)v9 - 56)) + 24))(v9 + *(void *)(*(void *)v9 - 56));
  if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v67.__r_.__value_.__l.__data_);
  }
  (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  if (!v63) {
    goto LABEL_109;
  }
LABEL_110:
  memset(&v67, 0, sizeof(v67));
  (*(void (**)(void *, uint64_t, uint64_t, std::basic_string<char16_t> *, uint64_t))(*a1 + 120))(a1, a2, v63, &v67, a5);
  if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v67.__r_.__value_.__l.__data_);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v63 + 16))(v63);
}

void sub_1D2CB360C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  (*(void (**)(uint64_t))(*(void *)v21 + 16))(v21);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 16))(v20);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CB3728(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CB378C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::RuCommonConceptFactory::quantify(morphun::dialog::language::RuCommonConceptFactory *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a3);
  uint64_t v6 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a3 + 128))(a3);
  uint64_t v7 = npc<morphun::dialog::SemanticFeatureConceptBase>(v6);
  (*(void (**)(uint64_t, void))(*(void *)v7 + 80))(v7, *((void *)this + 94));
  uint64_t v8 = (*(uint64_t (**)(uint64_t, void))(*(void *)v6 + 104))(v6, *((void *)this + 95));
  uint64_t v9 = v8;
  memset(&v50, 0, sizeof(v50));
  if (v8)
  {
    long long v10 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v8 + 32))(v8);
    std::basic_string<char16_t>::operator=(&v50, v10);
    (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  }
  uint64_t v11 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, void))(*(void *)a3 + 104))(a3, *((void *)this + 94));
  uint64_t v12 = v11;
  memset(&v49, 0, sizeof(v49));
  if (!v11)
  {
LABEL_59:
    long long v51 = 0uLL;
    uint64_t v52 = 0;
    morphun::dialog::SpeakableString::SpeakableString(&__dst, &v51);
    std::basic_string<char16_t>::size_type size = HIBYTE(v50.__r_.__value_.__r.__words[2]);
    if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v50.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v45, "c");
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v41 = &v50;
      }
      else {
        std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t> *)v50.__r_.__value_.__r.__words[0];
      }
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v42 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v42 = v50.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v45, (const std::basic_string<char16_t>::value_type *)v41, v42);
      std::basic_string<char16_t> v46 = v45;
      memset(&v45, 0, sizeof(v45));
      if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v43 = &v49;
      }
      else {
        uint64_t v43 = (std::basic_string<char16_t> *)v49.__r_.__value_.__r.__words[0];
      }
      if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v44 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v44 = v49.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v46, (const std::basic_string<char16_t>::value_type *)v43, v44);
      std::basic_string<char16_t> __p = v46;
      memset(&v46, 0, sizeof(v46));
      (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, std::basic_string<char16_t> *))(*(void *)a2 + 200))(&v51, a2, &__p);
      morphun::dialog::SpeakableString::operator=((uint64_t)&__dst, (uint64_t)&v51);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v46.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v45.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *))(*(void *)a2 + 208))(&v51, a2);
      morphun::dialog::SpeakableString::operator=((uint64_t)&__dst, (uint64_t)&v51);
    }
    morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, (const morphun::dialog::SpeakableString *)&__dst, a3);
  }
  uint64_t v13 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v11);
  uint64_t v14 = (*(uint64_t (**)(morphun::grammar::synthesis::GrammemeConstants *))(*(void *)v12 + 32))(v12);
  uint64_t v15 = *(unsigned __int8 *)(v13 + 23);
  int v16 = (char)v15;
  if ((v15 & 0x80u) != 0) {
    uint64_t v15 = *(void *)(v13 + 8);
  }
  uint64_t v17 = *(unsigned __int8 *)(v14 + 23);
  int v18 = (char)v17;
  if ((v17 & 0x80u) != 0) {
    uint64_t v17 = *(void *)(v14 + 8);
  }
  if (v15 == v17)
  {
    if (!v15)
    {
LABEL_58:
      (*(void (**)(morphun::grammar::synthesis::GrammemeConstants *))(*(void *)v12 + 16))(v12);
      goto LABEL_59;
    }
    if (v18 >= 0) {
      int v19 = (unsigned __int16 *)v14;
    }
    else {
      int v19 = *(unsigned __int16 **)v14;
    }
    if (v16 >= 0) {
      uint64_t v20 = (unsigned __int16 *)v13;
    }
    else {
      uint64_t v20 = *(unsigned __int16 **)v13;
    }
    while (*v19 == *v20)
    {
      ++v20;
      ++v19;
      if (!--v15) {
        goto LABEL_58;
      }
    }
  }
  uint64_t v21 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(morphun::grammar::synthesis::GrammemeConstants *))(*(void *)v12 + 32))(v12);
  uint64_t v22 = std::basic_string<char16_t>::operator=(&v49, v21);
  uint64_t v23 = morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL((morphun::grammar::synthesis::GrammemeConstants *)v22);
  std::basic_string<char16_t>::size_type v24 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v24 = v49.__r_.__value_.__l.__size_;
  }
  uint64_t v25 = *(unsigned __int8 *)(v23 + 23);
  int v26 = (char)v25;
  if ((v25 & 0x80u) != 0) {
    uint64_t v25 = *(void *)(v23 + 8);
  }
  if (v24 == v25)
  {
    if (!v24)
    {
LABEL_32:
      int v29 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE((morphun::grammar::synthesis::GrammemeConstants *)v23);
      goto LABEL_47;
    }
    if (v26 >= 0) {
      uint64_t v27 = (unsigned __int16 *)v23;
    }
    else {
      uint64_t v27 = *(unsigned __int16 **)v23;
    }
    int v28 = &v49;
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v28 = (std::basic_string<char16_t> *)v49.__r_.__value_.__r.__words[0];
    }
    while (*v27 == (unsigned __int16)v28->__r_.__value_.__s.__data_[0])
    {
      int v28 = (std::basic_string<char16_t> *)((char *)v28 + 2);
      ++v27;
      if (!--v24) {
        goto LABEL_32;
      }
    }
  }
  uint64_t v30 = morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL((morphun::grammar::synthesis::GrammemeConstants *)v23);
  std::basic_string<char16_t>::size_type v31 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v31 = v49.__r_.__value_.__l.__size_;
  }
  uint64_t v32 = *(unsigned __int8 *)(v30 + 23);
  int v33 = (char)v32;
  if ((v32 & 0x80u) != 0) {
    uint64_t v32 = *(void *)(v30 + 8);
  }
  if (v31 != v32) {
    goto LABEL_48;
  }
  if (v31)
  {
    if (v33 >= 0) {
      std::basic_string<char16_t>::size_type v34 = (unsigned __int16 *)v30;
    }
    else {
      std::basic_string<char16_t>::size_type v34 = *(unsigned __int16 **)v30;
    }
    uint64_t v35 = &v49;
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v35 = (std::basic_string<char16_t> *)v49.__r_.__value_.__r.__words[0];
    }
    while (*v34 == (unsigned __int16)v35->__r_.__value_.__s.__data_[0])
    {
      uint64_t v35 = (std::basic_string<char16_t> *)((char *)v35 + 2);
      ++v34;
      if (!--v31) {
        goto LABEL_46;
      }
    }
    goto LABEL_48;
  }
LABEL_46:
  int v29 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CASE_LOCATIVE((morphun::grammar::synthesis::GrammemeConstants *)v30);
LABEL_47:
  std::basic_string<char16_t>::operator=(&v49, v29);
LABEL_48:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "-");
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t> v36 = &v49;
  }
  else {
    std::basic_string<char16_t> v36 = (std::basic_string<char16_t> *)v49.__r_.__value_.__r.__words[0];
  }
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v37 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v37 = v49.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v36, v37);
  *(void *)&long long v51 = __dst.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v38 = __dst.__r_.__value_.__r.__words[0];
  *(void *)((char *)&v51 + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1]
                                                                            + 7);
  char v39 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  memset(&__dst, 0, sizeof(__dst));
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v49.__r_.__value_.__l.__data_);
    v49.__r_.__value_.__r.__words[0] = v38;
    v49.__r_.__value_.__l.__size_ = v51;
    *(std::basic_string<char16_t>::size_type *)((char *)&v49.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)&v51 + 7);
    *((unsigned char *)&v49.__r_.__value_.__s + 23) = v39;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    v49.__r_.__value_.__r.__words[0] = v38;
    v49.__r_.__value_.__l.__size_ = v51;
    *(std::basic_string<char16_t>::size_type *)((char *)&v49.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)&v51 + 7);
    *((unsigned char *)&v49.__r_.__value_.__s + 23) = v39;
  }
  goto LABEL_58;
}

void sub_1D2CB3DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  (*(void (**)(uint64_t))(*(void *)v48 + 16))(v48);
  _Unwind_Resume(a1);
}

void sub_1D2CB3F64(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::RuCommonConceptFactory::quote(const void **this@<X0>, const morphun::dialog::SpeakableString *a2@<X1>, morphun::dialog::SpeakableString *a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
  uint64_t v7 = (void *)morphun::lang::StringFilterUtil::CYRILLIC_SCRIPT((morphun::lang::StringFilterUtil *)v6);
  int v8 = *(char *)(v6 + 23);
  if (v8 >= 0) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = *(void *)v6;
  }
  if (v8 >= 0) {
    LODWORD(v10) = *(unsigned __int8 *)(v6 + 23);
  }
  else {
    uint64_t v10 = *(void *)(v6 + 8);
  }
  if (morphun::util::UnicodeSetUtils::containsSome(v7, v9, v10))
  {
    morphun::dialog::CommonConceptFactoryImpl::quote(this, a2, a3);
  }
  else
  {
    morphun::dialog::SpeakableString::SpeakableString(a3, a2);
  }
}

void morphun::dialog::language::RuCommonConceptFactory::~RuCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05B68);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05B68);
}

uint64_t morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords(morphun::grammar::synthesis::GrammarSynthesizerUtil *this, const morphun::TokenChain *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  int v4 = (*(uint64_t (**)(const morphun::TokenChain *))(*(void *)a2 + 32))(a2);
  uint64_t result = (uint64_t)std::vector<std::basic_string<char16_t>>::reserve((uint64_t *)this, v4);
  long long v7 = *(_OWORD *)((char *)a2 + 8);
  uint64_t v8 = *((void *)a2 + 2);
  if (v8) {
    uint64_t v9 = *(void *)(v8 + 80);
  }
  else {
    uint64_t v9 = 0;
  }
  while (1)
  {
    uint64_t v14 = *((void *)&v7 + 1);
    uint64_t v13 = v7;
    if (v9 == (void)v7) {
      break;
    }
    if (morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection((morphun::grammar::synthesis::GrammarSynthesizerUtil *)v7, v6))
    {
      uint64_t v10 = (long long *)(v13 + 16);
      unint64_t v11 = *((void *)this + 1);
      if (v11 >= *((void *)this + 2))
      {
        uint64_t v12 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)this, v10);
      }
      else
      {
        std::vector<std::basic_string<char16_t>>::__construct_one_at_end[abi:ne180100]<std::basic_string<char16_t> const&>((uint64_t)this, v10);
        uint64_t v12 = v11 + 24;
      }
      *((void *)this + 1) = v12;
    }
    uint64_t result = npc<morphun::Token const>(v13);
    *((void *)&v7 + 1) = v14;
    *(void *)&long long v7 = *(void *)(v13 + 80);
  }
  return result;
}

void sub_1D2CB4174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<std::basic_string<char16_t>>::reserve(uint64_t *result, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((result[2] - *result) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v2 = result;
    uint64_t v3 = result[1] - *result;
    v5[4] = result + 2;
    v5[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(a2);
    v5[1] = v5[0] + v3;
    v5[2] = v5[0] + v3;
    v5[3] = v5[0] + 24 * v4;
    std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(v2, v5);
    return (uint64_t *)std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)v5);
  }
  return result;
}

BOOL morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection(morphun::grammar::synthesis::GrammarSynthesizerUtil *this, const morphun::Token *a2)
{
  if (*((unsigned char *)this + 64)) {
    BOOL v2 = *((unsigned char *)this + 65) == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2) {
    return 0;
  }
  if ((*((char *)this + 39) & 0x80000000) == 0)
  {
    uint64_t v3 = *((unsigned __int8 *)this + 39);
    if (v3 != 1 || *((_WORD *)this + 8) != 45) {
      return v3 != 0;
    }
    return 0;
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3 == 1)
  {
    if (**((_WORD **)this + 2) == 45) {
      return 0;
    }
    uint64_t v3 = 1;
  }
  return v3 != 0;
}

std::basic_string<char16_t> *morphun::grammar::synthesis::GrammarSynthesizerUtil::getStringFromInflectedSignificantWords(std::basic_string<char16_t> *result, const morphun::Token *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = result;
  result->__r_.__value_.__r.__words[0] = 0;
  result->__r_.__value_.__l.__size_ = 0;
  result->__r_.__value_.__r.__words[2] = 0;
  uint64_t v6 = a2;
  if (a3) {
    long long v7 = *(morphun::grammar::synthesis::GrammarSynthesizerUtil **)(a3 + 80);
  }
  else {
    long long v7 = 0;
  }
  int v8 = 0;
  uint64_t v9 = a3;
  while (1)
  {
    uint64_t v18 = v9;
    uint64_t v10 = (uint64_t)v6;
    if (v7 == v6) {
      break;
    }
    if (morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection(v6, a2))
    {
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a4[1] - *a4) >> 3) <= v8) {
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      uint64_t v11 = *a4 + 24 * v8;
      int v12 = *(char *)(v11 + 23);
      if (v12 >= 0) {
        uint64_t v13 = (const std::basic_string<char16_t>::value_type *)(*a4 + 24 * v8);
      }
      else {
        uint64_t v13 = *(const std::basic_string<char16_t>::value_type **)v11;
      }
      if (v12 >= 0) {
        std::basic_string<char16_t>::size_type v14 = *(unsigned __int8 *)(v11 + 23);
      }
      else {
        std::basic_string<char16_t>::size_type v14 = *(void *)(v11 + 8);
      }
      std::basic_string<char16_t>::append(v5, v13, v14);
      ++v8;
    }
    else
    {
      int v15 = *(char *)(v10 + 39);
      if (v15 >= 0) {
        int v16 = (const std::basic_string<char16_t>::value_type *)(v10 + 16);
      }
      else {
        int v16 = *(const std::basic_string<char16_t>::value_type **)(v10 + 16);
      }
      if (v15 >= 0) {
        std::basic_string<char16_t>::size_type v17 = *(unsigned __int8 *)(v10 + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v17 = *(void *)(v10 + 24);
      }
      std::basic_string<char16_t>::append(v5, v16, v17);
    }
    uint64_t result = (std::basic_string<char16_t> *)npc<morphun::Token const>(v10);
    uint64_t v9 = v18;
    uint64_t v6 = *(morphun::grammar::synthesis::GrammarSynthesizerUtil **)(v10 + 80);
  }
  return result;
}

void sub_1D2CB43C4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 40))(a3);
  int v40 = 0;
  std::basic_string<char16_t>::size_type v41 = 0;
  char v39 = 0;
  v38.__begin_ = (std::vector<int>::pointer)&v39;
  LOBYTE(v38.__end_) = 0;
  if (v7)
  {
    int v8 = v7;
    if (v7 < 0) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v7);
    char v39 = v9;
    std::basic_string<char16_t>::size_type v41 = &v9[24 * v10];
    size_t v11 = 24 * ((24 * v8 - 24) / 0x18uLL) + 24;
    bzero(v9, v11);
    int v40 = &v9[v11];
  }
  memset(&v38, 0, sizeof(v38));
  int v12 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 40))(a3);
  std::vector<int>::reserve(&v38, v12);
  long long v13 = *(_OWORD *)(a3 + 8);
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v35 = a4;
  if (v14) {
    uint64_t v15 = *(void *)(v14 + 80);
  }
  else {
    uint64_t v15 = 0;
  }
  for (uint64_t i = 0; ; ++i)
  {
    uint64_t v36 = *((void *)&v13 + 1);
    std::basic_string<char16_t>::size_type v17 = (morphun::grammar::synthesis::GrammarSynthesizerUtil *)v13;
    if (v15 == (void)v13) {
      break;
    }
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)&v39[24 * i], (const std::basic_string<char16_t> *)(v13 + 16));
    if (morphun::grammar::synthesis::GrammarSynthesizerUtil::checkSignificantTokenForInflection(v17, v18))
    {
      std::vector<int>::pointer end = v38.__end_;
      if (v38.__end_ >= v38.__end_cap_.__value_)
      {
        std::vector<int>::pointer begin = v38.__begin_;
        int64_t v22 = v38.__end_ - v38.__begin_;
        unint64_t v23 = v22 + 1;
        if ((unint64_t)(v22 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        int64_t v24 = (char *)v38.__end_cap_.__value_ - (char *)v38.__begin_;
        if (((char *)v38.__end_cap_.__value_ - (char *)v38.__begin_) >> 1 > v23) {
          unint64_t v23 = v24 >> 1;
        }
        if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v25 = v23;
        }
        if (v25) {
          unint64_t v25 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v25);
        }
        else {
          uint64_t v26 = 0;
        }
        uint64_t v27 = (int *)(v25 + 4 * v22);
        *uint64_t v27 = i;
        uint64_t v20 = v27 + 1;
        while (end != begin)
        {
          int v28 = *--end;
          *--uint64_t v27 = v28;
        }
        v38.__begin_ = v27;
        v38.__end_cap_.__value_ = (int *)(v25 + 4 * v26);
        if (begin) {
          operator delete(begin);
        }
      }
      else
      {
        *v38.__end_ = i;
        uint64_t v20 = end + 1;
      }
      v38.__end_ = v20;
    }
    npc<morphun::Token const>((uint64_t)v17);
    *((void *)&v13 + 1) = v36;
    *(void *)&long long v13 = *((void *)v17 + 10);
  }
  int v29 = v38.__begin_;
  if (v38.__begin_ == v38.__end_)
  {
    (*(void (**)(uint64_t))(*(void *)a3 + 160))(a3);
    if (!v29) {
      goto LABEL_41;
    }
LABEL_40:
    v38.__end_ = v29;
    operator delete(v29);
    goto LABEL_41;
  }
  (*(void (**)(void *__return_ptr))(*(void *)v35 + 24))(v37);
  if (v37[0] == v37[1])
  {
    (*(void (**)(uint64_t))(*(void *)a3 + 160))(a3);
  }
  else
  {
    a1->__r_.__value_.__r.__words[0] = 0;
    a1->__r_.__value_.__l.__size_ = 0;
    a1->__r_.__value_.__r.__words[2] = 0;
    uint64_t v30 = v39;
    std::basic_string<char16_t>::size_type v31 = v40;
    while (v30 != v31)
    {
      int v32 = v30[23];
      if (v32 >= 0) {
        int v33 = (const std::basic_string<char16_t>::value_type *)v30;
      }
      else {
        int v33 = *(const std::basic_string<char16_t>::value_type **)v30;
      }
      if (v32 >= 0) {
        std::basic_string<char16_t>::size_type v34 = v30[23];
      }
      else {
        std::basic_string<char16_t>::size_type v34 = *((void *)v30 + 1);
      }
      std::basic_string<char16_t>::append(a1, v33, v34);
      v30 += 24;
    }
  }
  std::basic_string<char16_t>::size_type v42 = (void **)v37;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v42);
  int v29 = v38.__begin_;
  if (v38.__begin_) {
    goto LABEL_40;
  }
LABEL_41:
  v38.__begin_ = (std::vector<int>::pointer)&v39;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v38);
}

void sub_1D2CB4744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char *__p, char *a17, uint64_t a18, char a19)
{
  *(void *)(v19 - 88) = &a13;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v19 - 88));
  if (__p)
  {
    a17 = __p;
    operator delete(__p);
  }
  std::basic_string<char16_t> __p = &a19;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void std::vector<int>::reserve(std::vector<int> *this, std::vector<int>::size_type __n)
{
  if (__n > this->__end_cap_.__value_ - this->__begin_)
  {
    if (__n >> 62) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    int64_t v3 = (char *)this->__end_ - (char *)this->__begin_;
    uint64_t v4 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(__n);
    uint64_t v5 = (int *)&v4[v3 & 0xFFFFFFFFFFFFFFFCLL];
    int v7 = (int *)&v4[4 * v6];
    std::vector<int>::pointer begin = this->__begin_;
    std::vector<int>::pointer end = this->__end_;
    uint64_t v10 = v5;
    if (end != this->__begin_)
    {
      uint64_t v10 = v5;
      do
      {
        int v11 = *--end;
        *--uint64_t v10 = v11;
      }
      while (end != begin);
    }
    this->__begin_ = v10;
    this->__end_ = v5;
    this->__end_cap_.__value_ = v7;
    if (begin)
    {
      operator delete(begin);
    }
  }
}

void sub_1D2CB48B0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == a3) {
    return 0;
  }
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v6 = a2 + 8;
  do
  {
    uint64_t v7 = *(void *)(v6 - 8);
    npc<morphun::dialog::SemanticFeature const>(v7);
    int v8 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a1, v7);
    BOOL v10 = v5 == v8;
    BOOL result = v5 != v8;
    BOOL v10 = !v10 || v6 == a3;
    v6 += 8;
  }
  while (!v10);
  return result;
}

void morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3)
{
  npc<morphun::dialog::SemanticFeature const>(a3);
  uint64_t v6 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a2, a3);
  if ((void *)(a2 + 8) == v6)
  {
    a1->__r_.__value_.__r.__words[0] = 0;
    a1->__r_.__value_.__l.__size_ = 0;
    a1->__r_.__value_.__r.__words[2] = 0;
  }
  else if (*((char *)v6 + 127) < 0)
  {
    uint64_t v7 = (const std::basic_string<char16_t>::value_type *)v6[13];
    std::basic_string<char16_t>::size_type v8 = v6[14];
    std::basic_string<char16_t>::__init_copy_ctor_external(a1, v7, v8);
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(v6 + 13);
    a1->__r_.__value_.__r.__words[2] = v6[15];
  }
}

void morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (a3 != a4)
  {
    uint64_t v5 = a3;
    do
    {
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__s, a2, *v5);
      std::basic_string<char16_t>::size_type size = HIBYTE(__s.__r_.__value_.__r.__words[2]);
      int v9 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
      if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = __s.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        BOOL v10 = *(std::basic_string<char16_t> **)(a1 + 8);
        if ((unint64_t)v10 >= *(void *)(a1 + 16))
        {
          uint64_t v11 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)a1, (long long *)&__s);
        }
        else
        {
          if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
            std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)(a1 + 8), __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
          }
          else {
            *BOOL v10 = __s;
          }
          uint64_t v11 = (uint64_t)&v10[1];
          *(void *)(a1 + 8) = v10 + 1;
        }
        *(void *)(a1 + 8) = v11;
      }
      if (v9 < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      ++v5;
    }
    while (v5 != a4);
  }
}

void sub_1D2CB4AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  operator delete(__p);
  a12 = v12;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a12);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a2) {
    return 0;
  }
  uint64_t v5 = a1;
  uint64_t v6 = 0;
  uint64_t v7 = (void *)(a3 + 8);
  int v8 = -1;
  do
  {
    int v9 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5);
    BOOL v10 = v9 + 1;
    uint64_t v11 = (void *)*v9;
    if ((void *)*v9 == v9 + 1)
    {
      int v12 = 0;
    }
    else
    {
      int v12 = 0;
      do
      {
        uint64_t v13 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, (uint64_t)(v11 + 4));
        if (v7 != v13)
        {
          uint64_t v14 = *((unsigned __int8 *)v13 + 127);
          int v15 = (char)v14;
          if ((v14 & 0x80u) != 0) {
            uint64_t v14 = v13[14];
          }
          uint64_t v16 = *((unsigned __int8 *)v11 + 127);
          int v17 = (char)v16;
          if ((v16 & 0x80u) != 0) {
            uint64_t v16 = v11[14];
          }
          if (v14 == v16)
          {
            if (v14)
            {
              if (v17 >= 0) {
                uint64_t v18 = (unsigned __int16 *)(v11 + 13);
              }
              else {
                uint64_t v18 = (unsigned __int16 *)v11[13];
              }
              if (v15 >= 0) {
                uint64_t v19 = (unsigned __int16 *)(v13 + 13);
              }
              else {
                uint64_t v19 = (unsigned __int16 *)v13[13];
              }
              while (*v18 == *v19)
              {
                ++v19;
                ++v18;
                if (!--v14) {
                  goto LABEL_20;
                }
              }
            }
            else
            {
LABEL_20:
              ++v12;
            }
          }
        }
        uint64_t v20 = (void *)v11[1];
        if (v20)
        {
          do
          {
            uint64_t v21 = v20;
            uint64_t v20 = (void *)*v20;
          }
          while (v20);
        }
        else
        {
          do
          {
            uint64_t v21 = (void *)v11[2];
            BOOL v22 = *v21 == (void)v11;
            uint64_t v11 = v21;
          }
          while (!v22);
        }
        uint64_t v11 = v21;
      }
      while (v21 != v10);
    }
    if (v12 > v8)
    {
      int v8 = v12;
      uint64_t v6 = v5;
    }
    v5 += 56;
  }
  while (v5 != a2);
  return v6;
}

void morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(void *a1, uint64_t a2, uint64_t a3)
{
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](a1, a3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 40))(a2);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *> *,long>>>((uint64_t)a1, *(void **)v5, (void *)(v5 + 8));
}

void sub_1D2CB4CE4(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*(void ***)(v1 + 8));
  _Unwind_Resume(a1);
}

char *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)a1, &v11, a2);
  uint64_t v6 = (char *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = (char *)operator new(0x80uLL);
    v9[0] = v6;
    v9[1] = a1 + 1;
    char v10 = 0;
    morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v6 + 32), (const morphun::dialog::SemanticFeature *)a3);
    *(_OWORD *)(v6 + 104) = *(_OWORD *)(a3 + 72);
    *((void *)v6 + 15) = *(void *)(a3 + 88);
    *(void *)(a3 + 80) = 0;
    *(void *)(a3 + 88) = 0;
    *(void *)(a3 + 72) = 0;
    char v10 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v11, v7, (uint64_t *)v6);
    v9[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v9);
  }
  return v6;
}

void sub_1D2CB4DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::getArticle(uint64_t a1, uint64_t a2, char a3, int a4, int a5)
{
  char v10 = (morphun::util::LocaleUtils *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  if ((a3 & 1) == 0)
  {
    uint64_t v12 = a1 + 528;
    goto LABEL_6;
  }
  uint64_t v11 = (unsigned __int16 *)v10;
  if (a5 == 2)
  {
    if (a4 != 2)
    {
      int v16 = morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithVowelForElision((uint64_t)v10);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
      if (v16) {
        uint64_t v12 = a1 + 624;
      }
      else {
        uint64_t v12 = a1 + 600;
      }
LABEL_7:
      return v13(a1, a2, v12);
    }
    uint64_t v12 = a1 + 696;
LABEL_6:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
    goto LABEL_7;
  }
  if (a4 == 2)
  {
    int v15 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ITALIAN(v10);
    if ((morphun::dictionary::PhraseProperties::isStartsWithVowel(v15, (uint64_t)v11) & 1) != 0
      || morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset(v11))
    {
      uint64_t v12 = a1 + 672;
    }
    else
    {
      uint64_t v12 = a1 + 648;
    }
    goto LABEL_6;
  }
  if (morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithVowelForElision((uint64_t)v10))
  {
    uint64_t v12 = a1 + 624;
    goto LABEL_6;
  }
  if (morphun::grammar::synthesis::ItGrammarSynthesizer::startsWithConsonantSubset(v11))
  {
    uint64_t v12 = a1 + 576;
    goto LABEL_6;
  }
  if (a4 == 1 && a5 == 1)
  {
    uint64_t v12 = a1 + 552;
    goto LABEL_6;
  }
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v19 = 0;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, __p);
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[0]);
  }
  return v17;
}

void sub_1D2CB4FB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::~ItGrammarSynthesizer_DefiniteArticleLookupFunction(void **this)
{
  morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::~ItGrammarSynthesizer_DefiniteArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  *this = &off_1F2A0DD38;
  if (*((char *)this + 719) < 0) {
    operator delete(this[87]);
  }
  if (*((char *)this + 695) < 0) {
    operator delete(this[84]);
  }
  if (*((char *)this + 671) < 0) {
    operator delete(this[81]);
  }
  if (*((char *)this + 647) < 0) {
    operator delete(this[78]);
  }
  if (*((char *)this + 623) < 0) {
    operator delete(this[75]);
  }
  if (*((char *)this + 599) < 0) {
    operator delete(this[72]);
  }
  if (*((char *)this + 575) < 0) {
    operator delete(this[69]);
  }
  if (*((char *)this + 551) < 0) {
    operator delete(this[66]);
  }
  *this = &unk_1F29FC098;
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *)(this + 37));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *)(this + 8));
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::~ItGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction *this)
{
  *(void *)this = &unk_1F29FC098;
  uint64_t v1 = (morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 64);
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 296));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_DefiniteArticleLookupFunction::ItGrammarSynthesizer_DefiniteArticleLookupFunction(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = &unk_1F29FC118;
  morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::ItGrammarSynthesizer_ArticleLookupFunction(a1, (uint64_t *)&off_1F2A069F0, a2, a3);
}

void sub_1D2CB5358(_Unwind_Exception *a1)
{
  if (v1[695] < 0) {
    operator delete(*v8);
  }
  if (v1[671] < 0) {
    operator delete(*v7);
  }
  if (v1[647] < 0) {
    operator delete(*v6);
  }
  if (v1[623] < 0) {
    operator delete(*v5);
  }
  if (v1[599] < 0) {
    operator delete(*v4);
  }
  if (v1[575] < 0) {
    operator delete(*v3);
  }
  if (v1[551] < 0) {
    operator delete(*v2);
  }
  morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction::~ItGrammarSynthesizer_ArticleLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_ArticleLookupFunction *)v1);
  _Unwind_Resume(a1);
}

void morphun::lang::features::LanguageGrammarFeatures::~LanguageGrammarFeatures(void **this)
{
  *this = &off_1F2A088F0;

  JUMPOUT(0x1D942B8B0);
}

{
  *this = &off_1F2A088F0;
}

uint64_t *morphun::lang::features::LanguageGrammarFeatures::LanguageGrammarFeatures(uint64_t *a1, uint64_t *a2, morphun::util::ULocale *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v8 - 40)) = a2[1];
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 1), a3);
  a1[17] = a4;
  a1[18] = a5;
  return a1;
}

void *morphun::lang::features::LanguageGrammarFeatures::LanguageGrammarFeatures(void *a1, const morphun::util::ULocale *a2, uint64_t a3, uint64_t a4)
{
  *a1 = &off_1F2A088F0;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 1), a2);
  a1[17] = a3;
  a1[18] = a4;
  return a1;
}

void morphun::lang::features::LanguageGrammarFeatures::~LanguageGrammarFeatures(void **this, void **a2)
{
  BOOL v2 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v2 - 5)) = a2[1];
}

void virtual thunk to'morphun::lang::features::LanguageGrammarFeatures::~LanguageGrammarFeatures(morphun::lang::features::LanguageGrammarFeatures *this)
{
  uint64_t v1 = (void **)((char *)this + *(void *)(*(void *)this - 32));
  *uint64_t v1 = &off_1F2A088F0;
}

{
  void **v1;
  uint64_t vars8;

  uint64_t v1 = (void **)((char *)this + *(void *)(*(void *)this - 32));
  *uint64_t v1 = &off_1F2A088F0;

  JUMPOUT(0x1D942B8B0);
}

void morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures(morphun::lang::features::LanguageGrammarFeatures *this@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *((unsigned __int8 *)this + 127);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *((void *)this + 14);
  }
  if (!v5)
  {
    *a2 = &off_1F2A088F0;
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a2 + 1), this);
    a2[17] = &unk_1E695E030;
    a2[18] = &morphun::lang::features::GRAMMAR_XML;
    return;
  }
  std::basic_string<char16_t> __p = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  int v6 = *((char *)this + 31);
  if (v6 >= 0) {
    uint64_t v7 = (char *)this + 8;
  }
  else {
    uint64_t v7 = (const char *)*((void *)this + 1);
  }
  if (v6 >= 0) {
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  else {
    uint64_t v8 = *((void *)this + 2);
  }
  morphun::util::StringViewUtils::convert((uint64_t)&__p, v7, v8);
  uint64_t v9 = 0;
  while (1)
  {
    char v10 = (&morphun::lang::features::GRAMMAR_XML_LANGUAGES)[5 * v9];
    if (*v10)
    {
      uint64_t v11 = 0;
      do
        uint64_t v12 = v11 + 1;
      while (v10[++v11]);
      if (v22 < 0)
      {
LABEL_18:
        if (v12 != v21) {
          goto LABEL_24;
        }
        p_p = (unsigned __int16 *)__p;
        if (v21 == -1) {
          std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
        }
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v12 = 0;
      if (v22 < 0) {
        goto LABEL_18;
      }
    }
    if (v12 != HIBYTE(v22)) {
      goto LABEL_24;
    }
    p_p = (unsigned __int16 *)&__p;
LABEL_20:
    if (!v12) {
      break;
    }
    while ((unsigned __int16)*v10 == *p_p)
    {
      ++p_p;
      ++v10;
      if (!--v12) {
        goto LABEL_26;
      }
    }
LABEL_24:
    if (++v9 == 38)
    {
      exception = __cxa_allocate_exception(0x38uLL);
      (**(void (***)(std::basic_string<char16_t> *__return_ptr, morphun::lang::features::LanguageGrammarFeatures *))this)(&v18, this);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v19, word_1D2EC9276, &v18, v16);
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v19);
    }
  }
LABEL_26:
  *a2 = &off_1F2A088F0;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a2 + 1), this);
  uint64_t v17 = &(&morphun::lang::features::GRAMMAR_XML_LANGUAGES)[5 * v9];
  a2[17] = v17 + 3;
  a2[18] = v17 + 1;
  if (SHIBYTE(v22) < 0) {
    operator delete(__p);
  }
}

void sub_1D2CB599C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v28 & 1) == 0)
    {
LABEL_8:
      if (a27 < 0) {
        operator delete(a22);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v28)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v27);
  goto LABEL_8;
}

void morphun::lang::features::LanguageGrammarFeatures::getKnownLanguages(uint64_t a1@<X8>)
{
  uint64_t v3 = 0;
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  do
  {
    uint64_t v5 = (&morphun::lang::features::GRAMMAR_XML_LANGUAGES)[5 * v3];
    if (*v5)
    {
      uint64_t v6 = 0;
      do
        int v7 = v6 + 1;
      while (v5[++v6]);
    }
    else
    {
      int v7 = 0;
    }
    morphun::util::StringViewUtils::to_string((uint64_t)v5, v7, &v13);
    uint64_t v9 = (uint64_t *)operator new(0xA0uLL);
    v14[0] = v9;
    v14[1] = v4;
    char v15 = 0;
    v20[0] = 0;
    v20[1] = 0;
    uint64_t v21 = 0;
    v18[0] = 0;
    v18[1] = 0;
    uint64_t v19 = 0;
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v17 = 0;
    morphun::util::ULocale::ULocale((uint64_t)(v9 + 4), (uint64_t)&v13, (uint64_t)v20, (uint64_t)v18, (uint64_t)__p);
    if (SHIBYTE(v17) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v19) < 0) {
      operator delete(v18[0]);
    }
    if (SHIBYTE(v21) < 0) {
      operator delete(v20[0]);
    }
    char v15 = 1;
    char v10 = (uint64_t **)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::__find_equal<morphun::util::ULocale>(a1, v20, (uint64_t)(v9 + 4));
    if (!*v10)
    {
      std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v20[0], v10, v9);
      v14[0] = 0;
    }
    std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100]((uint64_t)v14);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    ++v3;
  }
  while (v3 != 38);
  uint64_t v12 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ROOT(v11);
  std::__tree<morphun::util::ULocale>::__emplace_unique_key_args<morphun::util::ULocale,morphun::util::ULocale const&>((uint64_t **)a1, (uint64_t)v12, v12);
}

void sub_1D2CB5B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*v30);
  _Unwind_Resume(a1);
}

morphun::util::ULocale *morphun::lang::features::LanguageGrammarFeatures::getLanguage@<X0>(morphun::lang::features::LanguageGrammarFeatures *this@<X0>, morphun::util::ULocale *a2@<X8>)
{
  return morphun::util::ULocale::ULocale(a2, (morphun::lang::features::LanguageGrammarFeatures *)((char *)this + 8));
}

uint64_t morphun::lang::features::LanguageGrammarFeatures::getCategoriesCount(morphun::lang::features::LanguageGrammarFeatures *this)
{
  return **((unsigned int **)this + 17);
}

void morphun::lang::features::LanguageGrammarFeatures::addCategory(uint64_t **a1, uint64_t a2)
{
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = (unsigned __int16 *)&v54;
  std::basic_string<char16_t> v50 = &v51;
  long long v51 = 0;
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)(a2 + 24);
    do
    {
      uint64_t v5 = operator new(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>((void *)v5 + 4, *(char **)(v4 + 24 * v3));
      uint64_t v6 = (void **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)&v53, &v46, (unsigned __int16 *)v5 + 16);
      if (*v6)
      {
        std::__tree_node_destructor<std::allocator<std::__tree_node<std::basic_string<char16_t>,void *>>>::operator()[abi:ne180100](1, (void **)v5);
      }
      else
      {
        std::basic_string<char16_t>::size_type v7 = v46.__r_.__value_.__r.__words[0];
        *(void *)uint64_t v5 = 0;
        *((void *)v5 + 1) = 0;
        *((void *)v5 + 2) = v7;
        char *v6 = v5;
        if (*(void *)v53)
        {
          uint64_t v53 = *(unsigned __int16 **)v53;
          uint64_t v5 = *v6;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v54, (uint64_t *)v5);
        ++v55;
      }
      uint64_t v4 = *(void *)(a2 + 24);
      if (*(int *)(v4 + 24 * v3 + 8) >= 1)
      {
        uint64_t v8 = 0;
        do
        {
          uint64_t v9 = *(_WORD **)(v4 + 24 * v3);
          if (*v9)
          {
            uint64_t v10 = 0;
            do
              unint64_t v11 = v10 + 1;
            while (v9[++v10]);
          }
          else
          {
            unint64_t v11 = 0;
          }
          std::string v13 = (void **)std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)&v50, &v46, *(unsigned __int16 **)(v4 + 24 * v3), v11);
          uint64_t v14 = (char *)*v13;
          if (!*v13)
          {
            char v15 = v13;
            uint64_t v14 = (char *)operator new(0x48uLL);
            *((void *)v14 + 4) = v9;
            *((void *)v14 + 5) = v11;
            *((void *)v14 + 8) = 0;
            *((void *)v14 + 7) = 0;
            *((void *)v14 + 6) = v14 + 56;
            std::basic_string<char16_t>::size_type v16 = v46.__r_.__value_.__r.__words[0];
            *(void *)uint64_t v14 = 0;
            *((void *)v14 + 1) = 0;
            *((void *)v14 + 2) = v16;
            *char v15 = v14;
            uint64_t v17 = (uint64_t *)v14;
            if (*v50)
            {
              std::basic_string<char16_t> v50 = (uint64_t **)*v50;
              uint64_t v17 = (uint64_t *)*v15;
            }
            std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v51, v17);
            ++v52;
            uint64_t v4 = *(void *)(a2 + 24);
          }
          std::basic_string<char16_t> v18 = (char **)(*(void *)(v4 + 24 * v3 + 16) + 16 * v8);
          std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_multi<char16_t const* const&,char16_t const* const&>((uint64_t **)v14 + 6, *v18, v18 + 1);
          ++v8;
          uint64_t v4 = *(void *)(a2 + 24);
        }
        while (v8 < *(int *)(v4 + 24 * v3 + 8));
      }
      ++v3;
    }
    while (v3 < *(int *)(a2 + 16));
  }
  v49[0] = 0;
  v49[1] = 0;
  uint64_t v48 = (uint64_t *)v49;
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_multi<char16_t const* const&,char16_t const* const&>(&v48, *(char **)(*(void *)(a2 + 40) + v19), (char **)(*(void *)(a2 + 40) + v19 + 8));
      ++v20;
      v19 += 16;
    }
    while (v20 < *(int *)(a2 + 32));
  }
  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v21 = *(char **)(a2 + 8);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, v21);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, v21);
  morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory((uint64_t)v44, (long long *)__p, (uint64_t)&v53, &v48, &v50);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v46, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  }
  else {
    std::basic_string<char16_t> v46 = __dst;
  }
  morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory((morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)v47, (const morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)v44);
  uint64_t v22 = a1[1];
  unint64_t v23 = a1 + 1;
  int64_t v24 = a1 + 1;
  if (v22)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v23 = (uint64_t **)v22;
        unint64_t v25 = (unsigned __int16 *)(v22 + 4);
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)&v46, (unsigned __int16 *)v22 + 16))break; {
        uint64_t v22 = *v23;
        }
        int64_t v24 = v23;
        if (!*v23) {
          goto LABEL_34;
        }
      }
      if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v25, (unsigned __int16 *)&v46)) {
        break;
      }
      int64_t v24 = v23 + 1;
      uint64_t v22 = v23[1];
      if (!v22) {
        goto LABEL_34;
      }
    }
    char v30 = 0;
    uint64_t v27 = v23;
  }
  else
  {
LABEL_34:
    uint64_t v26 = (char *)operator new(0xA8uLL);
    uint64_t v27 = (uint64_t **)v26;
    v56[0] = v26;
    v56[1] = a1 + 1;
    char v57 = 0;
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v26 + 32), v46.__r_.__value_.__l.__data_, v46.__r_.__value_.__l.__size_);
    }
    else {
      *(std::basic_string<char16_t> *)(v26 + 32) = v46;
    }
    morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory((morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)(v27 + 7), (const morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)v47);
    char v57 = 1;
    *uint64_t v27 = 0;
    v27[1] = 0;
    uint64_t v27[2] = (uint64_t *)v23;
    *int64_t v24 = (uint64_t *)v27;
    int v28 = (uint64_t *)**a1;
    int v29 = (uint64_t *)v27;
    if (v28)
    {
      *a1 = v28;
      int v29 = *v24;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v29);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    v56[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,void *>>>>::reset[abi:ne180100]((uint64_t)v56);
    char v30 = 1;
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v30) {
      goto LABEL_47;
    }
  }
  else if (v30)
  {
LABEL_47:
    *((unsigned char *)v27 + 160) = *(unsigned char *)a2;
    goto LABEL_63;
  }
  std::set<std::basic_string<char16_t>>::insert[abi:ne180100]<std::__tree_const_iterator<std::basic_string<char16_t>,std::__tree_node<std::basic_string<char16_t>,void *> *,long>>((uint64_t *)v27 + 11, v53, (unsigned __int16 *)&v54);
  std::basic_string<char16_t>::size_type v31 = v48;
  if (v48 != (uint64_t *)v49)
  {
    do
    {
      v46.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x50uLL);
      v46.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)(v27 + 15);
      int v32 = (unsigned __int16 *)(v46.__r_.__value_.__r.__words[0] + 32);
      LOBYTE(v46.__r_.__value_.__r.__words[2]) = 0;
      std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::pair[abi:ne180100]((std::basic_string<char16_t> *)(v46.__r_.__value_.__r.__words[0] + 32), (long long *)v31 + 2);
      LOBYTE(v46.__r_.__value_.__r.__words[2]) = 1;
      leaf = (uint64_t **)std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__find_leaf(v27 + 14, (uint64_t)(v27 + 15), v44, v32);
      std::__tree<std::u16string_view>::__insert_node_at(v27 + 14, v44[0], leaf, (uint64_t *)v46.__r_.__value_.__l.__data_);
      v46.__r_.__value_.__r.__words[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v46);
      std::basic_string<char16_t>::size_type v34 = (uint64_t *)v31[1];
      if (v34)
      {
        do
        {
          uint64_t v35 = v34;
          std::basic_string<char16_t>::size_type v34 = (uint64_t *)*v34;
        }
        while (v34);
      }
      else
      {
        do
        {
          uint64_t v35 = (uint64_t *)v31[2];
          BOOL v36 = *v35 == (void)v31;
          std::basic_string<char16_t>::size_type v31 = v35;
        }
        while (!v36);
      }
      std::basic_string<char16_t>::size_type v31 = v35;
    }
    while (v35 != (uint64_t *)v49);
  }
  std::basic_string<char16_t>::size_type v37 = v50;
  if (v50 != &v51)
  {
    do
    {
      std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::__emplace_hint_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>> const&>((uint64_t *)v27 + 17, (uint64_t *)v27 + 18, (unsigned __int16 *)v37[4], (unint64_t)v37[5], (uint64_t)(v37 + 4));
      std::vector<int> v38 = v37[1];
      if (v38)
      {
        do
        {
          char v39 = (uint64_t **)v38;
          std::vector<int> v38 = (uint64_t *)*v38;
        }
        while (v38);
      }
      else
      {
        do
        {
          char v39 = (uint64_t **)v37[2];
          BOOL v36 = *v39 == (uint64_t *)v37;
          std::basic_string<char16_t>::size_type v37 = v39;
        }
        while (!v36);
      }
      std::basic_string<char16_t>::size_type v37 = v39;
    }
    while (v39 != &v51);
  }
LABEL_63:
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(v49[0]);
  std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(v51);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v54);
}

void sub_1D2CB61BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,void *>>>>::reset[abi:ne180100](v42 - 112);
  std::pair<std::basic_string<char16_t> const,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>::~pair((uint64_t)&a37);
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*(void **)(v42 - 176));
  std::__tree<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>>>::destroy(*(void **)(v42 - 152));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v42 - 128));
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_multi<char16_t const* const&,char16_t const* const&>(uint64_t **a1, char *a2, char **a3)
{
  uint64_t v6 = a1 + 1;
  std::basic_string<char16_t>::size_type v7 = (uint64_t *)operator new(0x50uLL);
  v10[0] = v7;
  v10[1] = v6;
  char v11 = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v7 + 4, a2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v7 + 7, *a3);
  char v11 = 1;
  while (1)
  {
    uint64_t v8 = *v6;
    uint64_t v9 = v6;
    if (!*v6) {
      break;
    }
    while (1)
    {
      uint64_t v6 = (uint64_t **)v8;
      if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v7 + 16, (unsigned __int16 *)v8 + 16))
      {
        break;
      }
      uint64_t v8 = v6[1];
      if (!v8)
      {
        uint64_t v9 = v6 + 1;
        goto LABEL_6;
      }
    }
  }
LABEL_6:
  std::__tree<std::u16string_view>::__insert_node_at(a1, (uint64_t)v6, v9, v7);
  v10[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10);
}

void sub_1D2CB6390(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 + 55) < 0) {
    operator delete(*v3);
  }
  std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::basic_string<char16_t> const,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::LanguageGrammarFeatures_GrammarCategory(morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *this, const morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *a2)
{
  *(void *)this = &off_1F2A08980;
  if (*((char *)a2 + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)this + 8), *((const std::basic_string<char16_t>::value_type **)a2 + 1), *((void *)a2 + 2));
  }
  else
  {
    long long v4 = *(_OWORD *)((char *)a2 + 8);
    *((void *)this + 3) = *((void *)a2 + 3);
    *(_OWORD *)((char *)this + 8) = v4;
  }
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)this + 4, (uint64_t)a2 + 32);
  std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>::multimap[abi:ne180100]((uint64_t **)this + 7, (void *)a2 + 7);
  std::map<std::u16string_view,std::multimap<std::basic_string<char16_t>,std::basic_string<char16_t>>>::map[abi:ne180100]((uint64_t *)this + 10, (void *)a2 + 10);
  *((unsigned char *)this + 104) = *((unsigned char *)a2 + 104);
  return this;
}

void sub_1D2CB6500(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*(void **)(v1 + 64));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v1 + 40));
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

void morphun::lang::features::LanguageGrammarFeatures::getCategories(morphun::lang::features::LanguageGrammarFeatures *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = a2 + 8;
  char v5 = 1;
  do
  {
    char v6 = v5;
    morphun::lang::features::LanguageGrammarFeatures::addCategory((uint64_t **)a2, (uint64_t)&morphun::lang::features::GRAMMAR_XML_COMMON0_GRAMMAR0_CATEGORYS + 48 * v4);
    char v5 = 0;
    uint64_t v4 = 1;
  }
  while ((v6 & 1) != 0);
  std::basic_string<char16_t>::size_type v7 = (int *)*((void *)this + 17);
  if (v7 != (int *)&unk_1E695E030 && *v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      morphun::lang::features::LanguageGrammarFeatures::addCategory((uint64_t **)a2, *((void *)v7 + 1) + v8);
      ++v9;
      std::basic_string<char16_t>::size_type v7 = (int *)*((void *)this + 17);
      v8 += 48;
    }
    while (v9 < *v7);
  }
}

void sub_1D2CB6600(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures::getFeaturesCount(morphun::lang::features::LanguageGrammarFeatures *this)
{
  return **((unsigned int **)this + 18);
}

void morphun::lang::features::LanguageGrammarFeatures::getFeatures(morphun::lang::features::LanguageGrammarFeatures *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = a2 + 8;
  uint64_t v3 = 8u;
  do
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, *(char **)((char *)&morphun::lang::features::GRAMMAR_XML_COMMON0_FEATURES0_FEATURES + v3));
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::LanguageGrammarFeatures_GrammarFeatures((uint64_t)&__dst, (long long *)__p, (uint64_t *)&v40);
    std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::__emplace_unique_key_args<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures,morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>((uint64_t **)a2, (uint64_t)&__dst, (uint64_t)&__dst);
    v46[0] = &v40;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)v46);
    if (SHIBYTE(__p[2]) < 0) {
      operator delete(__p[0]);
    }
    v3 += 32;
  }
  while (v3 != 104);
  if (*((_UNKNOWN **)this + 17) != &unk_1E695E030)
  {
    uint64_t v4 = (int *)*((void *)this + 18);
    if (*v4 >= 1)
    {
      uint64_t v5 = 0;
      std::basic_string<char16_t>::size_type v34 = (uint64_t **)a2;
      do
      {
        memset(__p, 0, sizeof(__p));
        uint64_t v36 = v5;
        uint64_t v37 = *((void *)v4 + 1) + 32 * v5;
        char v6 = (int *)(v37 + 16);
        if (*(int *)(v37 + 16) >= 1)
        {
          uint64_t v7 = 0;
          char v39 = (uint64_t *)(v37 + 24);
          do
          {
            *((void *)&v40 + 1) = 0;
            uint64_t v41 = 0;
            *(void *)&long long v40 = (char *)&v40 + 8;
            uint64_t v8 = *v39;
            uint64_t v9 = *(const std::basic_string<char16_t>::value_type **)(*v39 + 32 * v7);
            if (v9)
            {
              std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"count");
              v46[0] = &__dst;
              uint64_t v10 = std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t>&&>,std::tuple<>>((uint64_t **)&v40, (unsigned __int16 *)&__dst, v46);
              std::basic_string<char16_t>::__assign_external((std::basic_string<char16_t> *)((char *)v10 + 56), v9);
              if ((v44[15] & 0x80000000) != 0) {
                operator delete(__dst);
              }
            }
            uint64_t v11 = v8 + 32 * v7;
            uint64_t v12 = *(const std::basic_string<char16_t>::value_type **)(v11 + 8);
            if (v12)
            {
              std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"gender");
              v46[0] = &__dst;
              std::string v13 = std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t>&&>,std::tuple<>>((uint64_t **)&v40, (unsigned __int16 *)&__dst, v46);
              std::basic_string<char16_t>::__assign_external((std::basic_string<char16_t> *)((char *)v13 + 56), v12);
              if ((v44[15] & 0x80000000) != 0) {
                operator delete(__dst);
              }
            }
            uint64_t v14 = *(const std::basic_string<char16_t>::value_type **)(v11 + 24);
            if (v14)
            {
              std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&word_1D2ECAEAE);
              v46[0] = &__dst;
              char v15 = std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t>&&>,std::tuple<>>((uint64_t **)&v40, (unsigned __int16 *)&__dst, v46);
              std::basic_string<char16_t>::__assign_external((std::basic_string<char16_t> *)((char *)v15 + 56), v14);
              if ((v44[15] & 0x80000000) != 0) {
                operator delete(__dst);
              }
            }
            std::basic_string<char16_t>::size_type v16 = (char **)(v8 + 32 * v7 + 16);
            uint64_t v17 = (char *)__p[1];
            if (__p[1] >= __p[2])
            {
              uint64_t v19 = 0x6DB6DB6DB6DB6DB7 * (((char *)__p[1] - (char *)__p[0]) >> 3);
              unint64_t v20 = v19 + 1;
              if ((unint64_t)(v19 + 1) > 0x492492492492492) {
                std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
              }
              if (0xDB6DB6DB6DB6DB6ELL * (((char *)__p[2] - (char *)__p[0]) >> 3) > v20) {
                unint64_t v20 = 0xDB6DB6DB6DB6DB6ELL * (((char *)__p[2] - (char *)__p[0]) >> 3);
              }
              if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * (((char *)__p[2] - (char *)__p[0]) >> 3)) >= 0x249249249249249) {
                unint64_t v21 = 0x492492492492492;
              }
              else {
                unint64_t v21 = v20;
              }
              std::basic_string<char16_t> v45 = &__p[2];
              if (v21) {
                unint64_t v21 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureModel_DisplayValue>>(v21);
              }
              else {
                uint64_t v22 = 0;
              }
              std::basic_string<char16_t> __dst = (void *)v21;
              *(void *)std::basic_string<char16_t>::size_type v44 = v21 + 56 * v19;
              *(void *)&v44[8] = *(void *)v44;
              *(void *)&v44[16] = v21 + 56 * v22;
              std::allocator<morphun::lang::features::LanguageGrammarFeatures_Feature>::construct[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature,char16_t const* const&,std::map<std::basic_string<char16_t>,std::basic_string<char16_t>> &>(*(uint64_t *)v44, *v16, &v40);
              uint64_t v23 = 0;
              uint64_t v24 = *(void *)v44;
              *(void *)&v44[8] += 56;
              unint64_t v25 = (char *)__p[0];
              uint64_t v26 = (char *)__p[1];
              while (1)
              {
                uint64_t v27 = v24 + v23;
                int v28 = &v26[v23];
                if (&v26[v23] == v25) {
                  break;
                }
                *(void *)(v27 - 56) = &off_1F2A08930;
                int v29 = (std::basic_string<char16_t> *)(v27 - 48);
                char v30 = (const std::basic_string<char16_t>::value_type **)(v28 - 48);
                if (*(v28 - 25) < 0)
                {
                  std::basic_string<char16_t>::__init_copy_ctor_external(v29, *v30, *(void *)&v26[v23 - 40]);
                }
                else
                {
                  long long v31 = *(_OWORD *)v30;
                  *(void *)(v27 - 32) = *((void *)v28 - 4);
                  *(_OWORD *)&v29->__r_.__value_.__l.__data_ = v31;
                }
                std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](v24 + v23 - 24, &v26[v23 - 24]);
                v23 -= 56;
              }
              int v32 = __p[2];
              long long v38 = *(_OWORD *)&v44[8];
              long long v33 = *(_OWORD *)__p;
              __p[0] = (void *)(v24 + v23);
              *(_OWORD *)std::basic_string<char16_t>::size_type v44 = v33;
              *(_OWORD *)&__p[1] = v38;
              *(void *)&v44[16] = v32;
              std::basic_string<char16_t> __dst = (void *)v33;
              std::__split_buffer<morphun::dialog::SemanticFeatureModel_DisplayValue>::~__split_buffer((uint64_t)&__dst);
              std::basic_string<char16_t> v18 = (void *)v38;
              char v6 = (int *)(v37 + 16);
            }
            else
            {
              std::allocator<morphun::lang::features::LanguageGrammarFeatures_Feature>::construct[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature,char16_t const* const&,std::map<std::basic_string<char16_t>,std::basic_string<char16_t>> &>((uint64_t)__p[1], *v16, &v40);
              std::basic_string<char16_t> v18 = v17 + 56;
            }
            __p[1] = v18;
            std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*((void **)&v40 + 1));
            ++v7;
          }
          while (v7 < *v6);
        }
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v40, *(char **)(v37 + 8));
        morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::LanguageGrammarFeatures_GrammarFeatures((uint64_t)&__dst, &v40, (uint64_t *)__p);
        std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::__emplace_unique_key_args<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures,morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>(v34, (uint64_t)&__dst, (uint64_t)&__dst);
        if (SHIBYTE(v41) < 0) {
          operator delete((void *)v40);
        }
        std::basic_string<char16_t> __dst = __p;
        std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
        uint64_t v5 = v36 + 1;
        uint64_t v4 = (int *)*((void *)this + 18);
      }
      while (v36 + 1 < *v4);
    }
  }
}

void sub_1D2CB6AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void **__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  std::basic_string<char16_t> __p = &a26;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&__p);
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*a10);
  _Unwind_Resume(a1);
}

void std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::__emplace_unique_key_args<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures,morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 + 1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1 + 1;
  uint64_t v8 = a1 + 1;
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v5;
        uint64_t v10 = (uint64_t)(v5 + 4);
        if (!morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::operator<(a2, (uint64_t)(v5 + 4))) {
          break;
        }
        uint64_t v5 = *v7;
        uint64_t v8 = v7;
        if (!*v7) {
          goto LABEL_7;
        }
      }
      if (!morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::operator<(v10, a2)) {
        break;
      }
      uint64_t v8 = v7 + 1;
      uint64_t v5 = v7[1];
      if (!v5) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    uint64_t v11 = (char *)operator new(0x58uLL);
    uint64_t v12 = (uint64_t *)v11;
    v14[0] = v11;
    v14[1] = v6;
    char v15 = 0;
    *((void *)v11 + 4) = &off_1F2A089C8;
    if (*(char *)(a3 + 31) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v11 + 40), *(const std::basic_string<char16_t>::value_type **)(a3 + 8), *(void *)(a3 + 16));
    }
    else
    {
      *(_OWORD *)(v11 + 40) = *(_OWORD *)(a3 + 8);
      *((void *)v11 + 7) = *(void *)(a3 + 24);
    }
    v12[8] = 0;
    v12[9] = 0;
    v12[10] = 0;
    std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)(v12 + 8), *(void *)(a3 + 32), *(void *)(a3 + 40), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a3 + 40) - *(void *)(a3 + 32)) >> 3));
    char v15 = 1;
    uint64_t *v12 = 0;
    v12[1] = 0;
    void v12[2] = (uint64_t)v7;
    *uint64_t v8 = v12;
    std::string v13 = (uint64_t *)**a1;
    if (v13)
    {
      *a1 = v13;
      uint64_t v12 = *v8;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v12);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    v14[0] = 0;
    std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100]((uint64_t)v14);
  }
}

void sub_1D2CB6DD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t>&&>,std::tuple<>>(uint64_t **a1, unsigned __int16 *a2, _OWORD **a3)
{
  uint64_t v5 = (void **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v13, a2);
  char v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    char v6 = operator new(0x50uLL);
    v11[1] = a1 + 1;
    uint64_t v8 = *a3;
    uint64_t v9 = *((void *)*a3 + 2);
    unint64_t v6[2] = **a3;
    *((void *)v6 + 6) = v9;
    *uint64_t v8 = 0;
    v8[1] = 0;
    void v8[2] = 0;
    *((void *)v6 + 8) = 0;
    *((void *)v6 + 9) = 0;
    *((void *)v6 + 7) = 0;
    char v12 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v13, v7, (uint64_t *)v6);
    v11[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v11);
  }
  return v6;
}

std::basic_string<char16_t> *__cdecl std::basic_string<char16_t>::__assign_external(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s)
{
  if (*__s)
  {
    uint64_t v2 = 0;
    do
      std::basic_string<char16_t>::size_type v3 = v2 + 1;
    while (__s[++v2]);
  }
  else
  {
    std::basic_string<char16_t>::size_type v3 = 0;
  }
  return std::basic_string<char16_t>::__assign_external(this, __s, v3);
}

void std::allocator<morphun::lang::features::LanguageGrammarFeatures_Feature>::construct[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature,char16_t const* const&,std::map<std::basic_string<char16_t>,std::basic_string<char16_t>> &>(uint64_t a1, char *a2, void *a3)
{
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, a2);
  morphun::lang::features::LanguageGrammarFeatures_Feature::LanguageGrammarFeatures_Feature(a1, (long long *)__p, a3);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2CB6F34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::tokenizer::NumberCleaver::modifyTokens(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v4 = *(void *)(a4 + 80);
  if (!v4) {
    return;
  }
  do
  {
    if (*(_DWORD *)(v4 + 12) - *(_DWORD *)(v4 + 8) < 2)
    {
      uint64_t v5 = v4;
      goto LABEL_72;
    }
    if (*(char *)(v4 + 39) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)(v4 + 16), *(void *)(v4 + 24));
    }
    else {
      std::basic_string<char16_t> __str = *(std::basic_string<char16_t> *)(v4 + 16);
    }
    unint64_t v6 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
    int v59 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    else {
      uint64_t v8 = LODWORD(__str.__r_.__value_.__r.__words[1]);
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v9 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v9 = __str.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::size_type v58 = __str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_str = &__str;
    }
    else {
      p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    UChar32 v11 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[0];
    if ((v11 & 0xF800) == 0xD800 && (v11 & 0x400) == 0 && v8 != 1)
    {
      int v12 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[1];
      BOOL v23 = (v12 & 0xFC00) == 56320;
      UChar32 v13 = (v11 << 10) - 56613888 + v12;
      if (v23) {
        UChar32 v11 = v13;
      }
    }
    UChar32 v14 = *(unsigned __int16 *)((char *)p_str->__r_.__value_.__s.__data_ + ((uint64_t)((v9 << 32) - 0x100000000) >> 31));
    if ((v14 & 0xF800) == 0xD800 && (v14 & 0x400) != 0 && (int)v8 >= 2)
    {
      int v15 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[(v9 - 2)];
      BOOL v23 = (v15 & 0xFC00) == 55296;
      int v16 = v14 - 56613888 + (v15 << 10);
      if (v23) {
        UChar32 v14 = v16;
      }
    }
    int v17 = u_isdigit(v11);
    if (v17 == u_isdigit(v14)) {
      goto LABEL_70;
    }
    int v18 = u_isalpha(v11);
    if (v18 == u_isalpha(v14)) {
      goto LABEL_70;
    }
    if (!v17)
    {
      if ((int)v8 < 2)
      {
LABEL_59:
        unsigned int v33 = 1;
        goto LABEL_60;
      }
      uint64_t v26 = 0;
      uint64_t v27 = &p_str->__r_.__value_.__s.__data_[2];
      while (1)
      {
        UChar32 v28 = (unsigned __int16)*(v27 - 1);
        if ((v28 & 0xF800) != 0xD800) {
          goto LABEL_56;
        }
        if ((v28 & 0x400) != 0)
        {
          int v32 = (unsigned __int16)*(v27 - 2);
          BOOL v30 = (v32 & 0xFC00) == 55296;
          int v31 = v28 - 56613888 + (v32 << 10);
        }
        else
        {
          if (v8 - 2 == v26) {
            goto LABEL_56;
          }
          int v29 = (unsigned __int16)*v27;
          BOOL v30 = (v29 & 0xFC00) == 56320;
          int v31 = (v28 << 10) - 56613888 + v29;
        }
        if (v30) {
          UChar32 v28 = v31;
        }
LABEL_56:
        if (!u_isalpha(v28))
        {
          unsigned int v33 = v26 + 1;
          goto LABEL_60;
        }
        ++v26;
        ++v27;
        if (v8 - 1 == v26)
        {
LABEL_58:
          unsigned int v33 = v8;
          goto LABEL_60;
        }
      }
    }
    if ((int)v8 < 2) {
      goto LABEL_59;
    }
    uint64_t v19 = 0;
    unint64_t v20 = &p_str->__r_.__value_.__s.__data_[2];
    while (1)
    {
      UChar32 v21 = (unsigned __int16)*(v20 - 1);
      if ((v21 & 0xF800) == 0xD800)
      {
        if ((v21 & 0x400) != 0)
        {
          int v25 = (unsigned __int16)*(v20 - 2);
          BOOL v23 = (v25 & 0xFC00) == 55296;
          int v24 = v21 - 56613888 + (v25 << 10);
        }
        else
        {
          if (v8 - 2 == v19) {
            goto LABEL_42;
          }
          int v22 = (unsigned __int16)*v20;
          BOOL v23 = (v22 & 0xFC00) == 56320;
          int v24 = (v21 << 10) - 56613888 + v22;
        }
        if (v23) {
          UChar32 v21 = v24;
        }
      }
LABEL_42:
      if (!u_ispunct(v21) && !u_isdigit(v21)) {
        break;
      }
      ++v19;
      ++v20;
      if (v8 - 1 == v19) {
        goto LABEL_58;
      }
    }
    unsigned int v33 = v19 + 1;
LABEL_60:
    int v34 = v33 - (v17 != 0);
    UChar32 v35 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[v34];
    if ((v35 & 0xF800) == 0xD800)
    {
      if ((v35 & 0x400) != 0)
      {
        if (v34 >= 1)
        {
          int v40 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[v34 - 1];
          BOOL v38 = (v40 & 0xFC00) == 55296;
          int v39 = v35 - 56613888 + (v40 << 10);
          goto LABEL_66;
        }
      }
      else
      {
        uint64_t v36 = v34 + 1;
        if (v36 != v8)
        {
          int v37 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[v36];
          BOOL v38 = (v37 & 0xFC00) == 56320;
          int v39 = (v35 << 10) - 56613888 + v37;
LABEL_66:
          if (v38) {
            UChar32 v35 = v39;
          }
        }
      }
    }
    if (!u_ispunct(v35))
    {
      std::basic_string<char16_t>::basic_string(&v65, &__str, 0, v33, v41);
      if (v59 < 0)
      {
        if (size >= v33)
        {
          unint64_t v6 = size;
          uint64_t v42 = (std::basic_string<char16_t> *)v58;
LABEL_79:
          unint64_t v43 = v6 - v33;
          if (v43 >= 0x7FFFFFFFFFFFFFF8) {
            std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
          }
          if (v43 >= 0xB)
          {
            uint64_t v45 = (v43 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((v43 | 3) != 0xB) {
              uint64_t v45 = v43 | 3;
            }
            p_dst = (const UChar **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v45 + 1);
            unint64_t v63 = v6 - v33;
            unint64_t v64 = v46 | 0x8000000000000000;
            std::basic_string<char16_t> __dst = (const UChar *)p_dst;
          }
          else
          {
            HIBYTE(v64) = v43;
            p_dst = &__dst;
            if (v6 == v33)
            {
LABEL_87:
              *((_WORD *)p_dst + v43) = 0;
              memset(v61, 0, sizeof(v61));
              memset(__p, 0, sizeof(__p));
              if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                int v47 = &v65;
              }
              else {
                int v47 = (std::basic_string<char16_t> *)v65.__r_.__value_.__r.__words[0];
              }
              if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                int32_t v48 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
              }
              else {
                int32_t v48 = v65.__r_.__value_.__r.__words[1];
              }
              npc<morphun::Tokenizer const>(a1);
              uint64_t v49 = npc<morphun::tokenizer::TokenExtractor const>(*(void *)(a1 + 48));
              morphun::util::StringViewUtils::lowercase((uint64_t)v61, (const UChar *)v47, v48, v49 + 8);
              int32_t v50 = HIBYTE(v64);
              long long v51 = __dst;
              int32_t v52 = v63;
              uint64_t v53 = npc<morphun::tokenizer::TokenExtractor const>(*(void *)(a1 + 48));
              if ((v50 & 0x80u) == 0) {
                uint64_t v54 = (const UChar *)&__dst;
              }
              else {
                uint64_t v54 = v51;
              }
              if ((v50 & 0x80u) == 0) {
                int32_t v55 = v50;
              }
              else {
                int32_t v55 = v52;
              }
              morphun::util::StringViewUtils::lowercase((uint64_t)__p, v54, v55, v53 + 8);
              operator new();
            }
          }
          memmove(p_dst, (char *)v42 + 2 * v33, 2 * v43);
          goto LABEL_87;
        }
      }
      else if (v6 >= v33)
      {
        uint64_t v42 = &__str;
        goto LABEL_79;
      }
      std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
    }
LABEL_70:
    uint64_t v5 = v4;
    if ((v59 & 0x80) != 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
LABEL_72:
    uint64_t v4 = *(void *)(v5 + 80);
  }
  while (v4);
}

void sub_1D2CB771C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a39 < 0) {
    operator delete(__p);
  }
  if ((*(unsigned char *)(v39 - 89) & 0x80) != 0) {
    operator delete(*(void **)(v39 - 112));
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CB7854(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::tokenizer::TokenExtractor const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CB78B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::tr::TrTokenizer::createTokenExtractor()
{
}

void sub_1D2CB7938(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4065C8B95BLL);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::sv::SvTokenizer::createTokenExtractor()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2CB7B3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig((char **)va);
  MEMORY[0x1D942B8B0](v2, 0x10F3C4092900CF8);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::NumberToWordFilter::incrementToken(morphun::analysis::filter::NumberToWordFilter *this)
{
  uint64_t v2 = (uint64_t *)((char *)this + 104);
  if (*((void *)this + 13) != *((void *)this + 14))
  {
    std::basic_string<char16_t>::size_type v3 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
    std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v3 + *(void *)(*v3 - 96)), *((const std::basic_string<char16_t> **)this + 13));
    uint64_t v4 = *((void *)this + 13);
    uint64_t v5 = *((void *)this + 14);
    uint64_t v6 = v4 + 24;
    if (v4 + 24 != v5)
    {
      do
      {
        if (*(char *)(v4 + 23) < 0) {
          operator delete(*(void **)v4);
        }
        *(_OWORD *)uint64_t v4 = *(_OWORD *)(v4 + 24);
        *(void *)(v4 + 16) = *(void *)(v4 + 40);
        *(unsigned char *)(v4 + 47) = 0;
        uint64_t v7 = v4 + 48;
        *(_WORD *)(v4 + 24) = 0;
        v4 += 24;
      }
      while (v7 != v5);
      uint64_t v6 = *((void *)this + 14);
    }
    while (v6 != v4)
    {
      if (*(char *)(v6 - 1) < 0) {
        operator delete(*(void **)(v6 - 24));
      }
      v6 -= 24;
    }
    *((void *)this + 14) = v4;
    return 1;
  }
  uint64_t v9 = *((void *)this + 12);
  if (!v9)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 24))(v9);
  if (result)
  {
    uint64_t v10 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
    UChar32 v11 = (char *)v10 + *(void *)(*v10 - 96);
    if (v11[23] < 0) {
      uint64_t v12 = *((unsigned int *)v11 + 2);
    }
    else {
      uint64_t v12 = v11[23];
    }
    if (v12) {
      BOOL v13 = (int)v12 <= 12;
    }
    else {
      BOOL v13 = 0;
    }
    if (v13)
    {
      if ((int)v12 < 1)
      {
LABEL_30:
        int v50 = 0;
        if (!*((void *)this + 33)) {
          *((void *)this + 33) = unum_open();
        }
        if (!*((void *)this + 34)) {
          *((void *)this + 34) = unum_open();
        }
        npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
        npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
        unum_parseInt64();
        if (v50 <= 0)
        {
          npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
          memset(&v49, 0, sizeof(v49));
          int v18 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
          uint64_t v19 = (char *)v18 + *(void *)(*v18 - 96);
          if (v19[23] < 0) {
            std::basic_string<char16_t>::size_type v20 = (*((void *)v19 + 2) & 0x7FFFFFFFFFFFFFFFLL) - 1;
          }
          else {
            std::basic_string<char16_t>::size_type v20 = 10;
          }
          std::basic_string<char16_t>::resize(&v49, v20, 0);
          int v21 = unum_formatInt64();
          if (v50 == 15)
          {
            int v50 = 0;
            std::basic_string<char16_t>::resize(&v49, v21 + 1, 0);
            int v21 = unum_formatInt64();
          }
          int v22 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
          if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v22 = v49.__r_.__value_.__r.__words[1];
          }
          if (v21 != v22) {
            std::basic_string<char16_t>::resize(&v49, v21, 0);
          }
          if (v50 <= 0)
          {
            std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100](v2);
            BOOL v23 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
            int v24 = (char *)v23 + *(void *)(*v23 - 96);
            if (v24[23] < 0)
            {
              **(_WORD **)int v24 = 0;
              *((void *)v24 + 1) = 0;
            }
            else
            {
              *(_WORD *)int v24 = 0;
              v24[23] = 0;
            }
            std::basic_string<char16_t>::size_type size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
            uint64_t v26 = &v49;
            if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            {
              std::basic_string<char16_t>::size_type size = v49.__r_.__value_.__l.__size_;
              uint64_t v26 = (std::basic_string<char16_t> *)v49.__r_.__value_.__r.__words[0];
            }
            long long __src = 0;
            std::basic_string<char16_t>::size_type v42 = 0;
            unint64_t v43 = &word_1D2ED0D7C;
            uint64_t v44 = 1;
            uint64_t v45 = v26;
            std::basic_string<char16_t>::size_type v46 = size;
            int v47 = size;
            int v48 = 0;
            if ((int)size >= 1) {
              morphun::util::DelimitedStringIterator::getNext((UChar *)&__src);
            }
            for (char i = 1; ; char i = 0)
            {
              unint64_t v28 = v42;
              if (v48 >= v47 && v42 == 0) {
                break;
              }
              if (i)
              {
                BOOL v30 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
                std::basic_string<char16_t>::__assign_external((std::basic_string<char16_t> *)((char *)v30 + *(void *)(*v30 - 96)), (const std::basic_string<char16_t>::value_type *)__src, v42);
              }
              else
              {
                int v31 = __src;
                unint64_t v33 = *((void *)this + 14);
                unint64_t v32 = *((void *)this + 15);
                if (v33 >= v32)
                {
                  unint64_t v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - *v2) >> 3);
                  unint64_t v36 = v35 + 1;
                  if (v35 + 1 > 0xAAAAAAAAAAAAAAALL) {
                    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                  }
                  unint64_t v37 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *v2) >> 3);
                  if (2 * v37 > v36) {
                    unint64_t v36 = 2 * v37;
                  }
                  if (v37 >= 0x555555555555555) {
                    unint64_t v38 = 0xAAAAAAAAAAAAAAALL;
                  }
                  else {
                    unint64_t v38 = v36;
                  }
                  int32_t v55 = (char *)this + 120;
                  if (v38) {
                    unint64_t v38 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v38);
                  }
                  else {
                    uint64_t v39 = 0;
                  }
                  unint64_t v51 = v38;
                  int32_t v52 = (void *)(v38 + 24 * v35);
                  uint64_t v53 = v52;
                  unint64_t v54 = v38 + 24 * v39;
                  std::allocator<std::basic_string<char16_t>>::construct[abi:ne180100]<std::basic_string<char16_t>,std::u16string_view>(v52, v31, v28);
                  v53 += 3;
                  std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(v2, &v51);
                  unint64_t v34 = *((void *)this + 14);
                  std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)&v51);
                }
                else
                {
                  std::allocator<std::basic_string<char16_t>>::construct[abi:ne180100]<std::basic_string<char16_t>,std::u16string_view>(*((void **)this + 14), __src, v42);
                  unint64_t v34 = v33 + 24;
                  *((void *)this + 14) = v33 + 24;
                }
                *((void *)this + 14) = v34;
              }
              morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&__src);
            }
          }
          if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v49.__r_.__value_.__l.__data_);
          }
        }
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v15 = 2 * v12;
        while (1)
        {
          int v16 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 16));
          int v17 = (char *)v16 + *(void *)(*v16 - 96);
          if (v17[23] < 0) {
            int v17 = *(char **)v17;
          }
          if (!u_isdigit(*(unsigned __int16 *)&v17[v14])) {
            break;
          }
          v14 += 2;
          if (v15 == v14) {
            goto LABEL_30;
          }
        }
      }
    }
    return 1;
  }
  return result;
}

void sub_1D2CB81B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CB8260(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *std::allocator<std::basic_string<char16_t>>::construct[abi:ne180100]<std::basic_string<char16_t>,std::u16string_view>(void *__dst, void *__src, unint64_t a3)
{
  if (a3 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v5 = __dst;
  if (a3 >= 0xB)
  {
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB) {
      uint64_t v6 = a3 | 3;
    }
    uint64_t v7 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v6 + 1);
    v5[1] = a3;
    v5[2] = v8 | 0x8000000000000000;
    void *v5 = v7;
    uint64_t v5 = v7;
  }
  else
  {
    *((unsigned char *)__dst + 23) = a3;
    if (!a3) {
      goto LABEL_9;
    }
  }
  std::basic_string<char16_t> __dst = memmove(v5, __src, 2 * a3);
LABEL_9:
  *((_WORD *)v5 + a3) = 0;
  return __dst;
}

void morphun::analysis::filter::NumberToWordFilter::~NumberToWordFilter(morphun::analysis::filter::NumberToWordFilter *this)
{
  morphun::analysis::filter::NumberToWordFilter::~NumberToWordFilter(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void **v2;
  uint64_t vars8;

  if (*((void *)this + 33)) {
    unum_close();
  }
  if (*((void *)this + 34)) {
    unum_close();
  }
  uint64_t v2 = (void **)((char *)this + 104);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v2);

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07A00);
}

void morphun::analysis::DictionaryExposableMorphology::~DictionaryExposableMorphology(void **this)
{
  *this = &unk_1F2A0FEF8;

  JUMPOUT(0x1D942B8B0);
}

{
  *this = &unk_1F2A0FEF8;
}

void morphun::analysis::DictionaryExposableMorphology::getInflectionGrammemes(uint64_t a1, std::basic_string<char16_t>::size_type a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6)
{
  if (a4 != a5)
  {
    uint64_t v7 = a5;
    uint64_t v8 = a4;
    std::basic_string<char16_t>::size_type v10 = a1 + 2 * a2;
    while (!*(_WORD *)(v8 + 18))
    {
      uint64_t v52 = *(void *)(v8 + 8);
      unint64_t v54 = (char *)a6[1];
      uint64_t v53 = (char *)a6[2];
      if (v54 >= v53)
      {
        unint64_t v56 = 0xCCCCCCCCCCCCCCCDLL * ((v54 - (unsigned char *)*a6) >> 3);
        unint64_t v57 = v56 + 1;
        if (v56 + 1 > 0x666666666666666) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v58 = 0xCCCCCCCCCCCCCCCDLL * ((v53 - (unsigned char *)*a6) >> 3);
        if (2 * v58 > v57) {
          unint64_t v57 = 2 * v58;
        }
        if (v58 >= 0x333333333333333) {
          unint64_t v59 = 0x666666666666666;
        }
        else {
          unint64_t v59 = v57;
        }
        std::basic_string<char16_t>::size_type v60 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::analysis::DictionaryExposableMorphology::InflectionGrammemes>>(v59);
        uint64_t v62 = &v60[40 * v56];
        *(void *)uint64_t v62 = v52;
        v62[8] = 0;
        v62[32] = 0;
        unint64_t v64 = (char *)*a6;
        unint64_t v63 = (char *)a6[1];
        std::basic_string<char16_t> v65 = v62;
        if (v63 != *a6)
        {
          do
          {
            long long v66 = *(_OWORD *)(v63 - 40);
            long long v67 = *(_OWORD *)(v63 - 24);
            *((void *)v65 - 1) = *((void *)v63 - 1);
            *(_OWORD *)(v65 - 24) = v67;
            *(_OWORD *)(v65 - 40) = v66;
            v65 -= 40;
            v63 -= 40;
          }
          while (v63 != v64);
          unint64_t v63 = (char *)*a6;
        }
        int32_t v55 = v62 + 40;
        *a6 = v65;
        a6[1] = v62 + 40;
        a6[2] = &v60[40 * v61];
        if (v63) {
          operator delete(v63);
        }
      }
      else
      {
        *(void *)unint64_t v54 = v52;
        v54[8] = 0;
        int32_t v55 = v54 + 40;
        v54[32] = 0;
      }
      a6[1] = v55;
LABEL_78:
      v8 += 48;
      if (v8 == v7) {
        return;
      }
    }
    if (*(__int16 *)(v8 + 18) < 1) {
      goto LABEL_78;
    }
    UChar32 v11 = 0;
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    int v14 = 0;
    uint64_t v15 = -1;
    while (1)
    {
      morphun::dictionary::Inflector_InflectionPattern::getInflectionAtPosition((morphun::dictionary::Inflector_InflectionPattern *)v71, v8, v14);
      if ((v72 & ~a3) == 0)
      {
        morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)v71 + 40), v71[2], &__p);
        char v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
          p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
          if ((uint64_t)__p.__r_.__value_.__l.__size_ >= v15) {
            goto LABEL_11;
          }
          goto LABEL_44;
        }
        std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if (v15 <= HIBYTE(__p.__r_.__value_.__r.__words[2]))
        {
          p_p = &__p;
LABEL_11:
          if (a2 >= size)
          {
            if (!size) {
              goto LABEL_20;
            }
            uint64_t v19 = -(uint64_t)size;
            do
            {
              int v20 = *(unsigned __int16 *)(v10 + 2 * v19);
              int v22 = (unsigned __int16)p_p->__r_.__value_.__s.__data_[0];
              p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
              int v21 = v22;
            }
            while (v22 == v20 && v19++ != -1);
            if (v21 == v20)
            {
LABEL_20:
              if ((uint64_t)size > v15)
              {
                uint64_t v12 = v11;
                uint64_t v15 = size;
              }
              if ((unint64_t)v12 >= v13)
              {
                unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((v12 - v11) >> 3) + 1;
                if (v25 > 0xAAAAAAAAAAAAAAALL) {
                  std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                }
                if (0x5555555555555556 * ((uint64_t)(v13 - (void)v11) >> 3) > v25) {
                  unint64_t v25 = 0x5555555555555556 * ((uint64_t)(v13 - (void)v11) >> 3);
                }
                if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - (void)v11) >> 3) >= 0x555555555555555) {
                  unint64_t v26 = 0xAAAAAAAAAAAAAAALL;
                }
                else {
                  unint64_t v26 = v25;
                }
                if (v26) {
                  unint64_t v26 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v26);
                }
                else {
                  uint64_t v27 = 0;
                }
                unint64_t v28 = v26 + 8 * ((v12 - v11) >> 3);
                *(_OWORD *)unint64_t v28 = *(_OWORD *)v71;
                *(void *)(v28 + 16) = v72;
                if (v12 == v11)
                {
                  BOOL v30 = (char *)(v26 + 8 * ((v12 - v11) >> 3));
                }
                else
                {
                  unint64_t v29 = v26 + 8 * ((v12 - v11) >> 3);
                  do
                  {
                    BOOL v30 = (char *)(v29 - 24);
                    long long v31 = *(_OWORD *)(v12 - 24);
                    *(void *)(v29 - 8) = *((void *)v12 - 1);
                    *(_OWORD *)(v29 - 24) = v31;
                    v12 -= 24;
                    v29 -= 24;
                  }
                  while (v12 != v11);
                }
                unint64_t v13 = v26 + 24 * v27;
                uint64_t v12 = (char *)(v28 + 24);
                if (v11) {
                  operator delete(v11);
                }
                UChar32 v11 = v30;
              }
              else
              {
                long long v24 = *(_OWORD *)v71;
                *((void *)v12 + 2) = v72;
                *(_OWORD *)uint64_t v12 = v24;
                v12 += 24;
              }
              char v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            }
          }
          if ((v16 & 0x80) == 0) {
            goto LABEL_45;
          }
          p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
LABEL_44:
          operator delete(p_p);
        }
      }
LABEL_45:
      if (++v14 >= *(__int16 *)(v8 + 18))
      {
        if (v11 != v12)
        {
          unint64_t v32 = (char *)a6[1];
          unint64_t v33 = v11;
          do
          {
            uint64_t v34 = *(void *)(*(void *)v33 + 8) | *((void *)v33 + 2);
            unint64_t v35 = (char *)a6[2];
            if (v32 >= v35)
            {
              unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * ((v32 - (unsigned char *)*a6) >> 3);
              unint64_t v39 = v38 + 1;
              if (v38 + 1 > 0x666666666666666) {
                std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
              }
              unint64_t v40 = 0xCCCCCCCCCCCCCCCDLL * ((v35 - (unsigned char *)*a6) >> 3);
              if (2 * v40 > v39) {
                unint64_t v39 = 2 * v40;
              }
              if (v40 >= 0x333333333333333) {
                unint64_t v41 = 0x666666666666666;
              }
              else {
                unint64_t v41 = v39;
              }
              std::basic_string<char16_t>::size_type v42 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::analysis::DictionaryExposableMorphology::InflectionGrammemes>>(v41);
              uint64_t v44 = &v42[40 * v38];
              uint64_t v45 = *((void *)v33 + 2);
              long long v46 = *(_OWORD *)v33;
              *(void *)uint64_t v44 = v34;
              *(_OWORD *)(v44 + 8) = v46;
              *((void *)v44 + 3) = v45;
              v44[32] = 1;
              int v48 = (char *)*a6;
              int v47 = (char *)a6[1];
              std::basic_string<char16_t> v49 = v44;
              if (v47 != *a6)
              {
                do
                {
                  long long v50 = *(_OWORD *)(v47 - 40);
                  long long v51 = *(_OWORD *)(v47 - 24);
                  *((void *)v49 - 1) = *((void *)v47 - 1);
                  *(_OWORD *)(v49 - 24) = v51;
                  *(_OWORD *)(v49 - 40) = v50;
                  v49 -= 40;
                  v47 -= 40;
                }
                while (v47 != v48);
                int v47 = (char *)*a6;
              }
              unint64_t v32 = v44 + 40;
              *a6 = v49;
              a6[1] = v44 + 40;
              a6[2] = &v42[40 * v43];
              if (v47) {
                operator delete(v47);
              }
            }
            else
            {
              long long v36 = *(_OWORD *)v33;
              uint64_t v72 = *((void *)v33 + 2);
              *(_OWORD *)char v71 = v36;
              *(void *)unint64_t v32 = v34;
              long long v37 = *(_OWORD *)v71;
              *((void *)v32 + 3) = v72;
              *(_OWORD *)(v32 + 8) = v37;
              v32[32] = 1;
              v32 += 40;
            }
            a6[1] = v32;
            v33 += 24;
          }
          while (v33 != v12);
        }
        uint64_t v7 = a5;
        if (v11) {
          operator delete(v11);
        }
        goto LABEL_78;
      }
    }
  }
}

void sub_1D2CB892C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (v19) {
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::analysis::DictionaryExposableMorphology::InflectionGrammemes>>(unint64_t a1)
{
  if (a1 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a1);
}

void morphun::analysis::DictionaryExposableMorphology::getwordGrammemesets(void *a1, uint64_t a2, const UChar *a3, std::basic_string<char16_t>::size_type a4)
{
  *(void *)long long v31 = 0;
  if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a2 + 8), (uint64_t)v31, a3, a4))
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return;
  }
  unint64_t v28 = 0;
  unint64_t v29 = 0;
  uint64_t v30 = 0;
  morphun::dictionary::Inflector::getInflectionPatternsForWord(*(void *)(a2 + 16), (uint64_t)a3, a4, &v28);
  uint64_t v8 = v28;
  if (v28 == v29)
  {
    uint64_t v21 = *(void *)v31;
    a1[1] = 0;
    a1[2] = 0;
    *a1 = 0;
    int v22 = (uint64_t *)operator new(8uLL);
    *a1 = v22;
    *v22++ = v21;
    a1[1] = v22;
    a1[2] = v22;
    if (!v8) {
      return;
    }
    goto LABEL_34;
  }
  std::basic_string<char16_t> __p = 0;
  unint64_t v26 = 0;
  uint64_t v27 = 0;
  morphun::analysis::DictionaryExposableMorphology::getInflectionGrammemes((uint64_t)a3, a4, *(uint64_t *)v31, (uint64_t)v28, (uint64_t)v29, &__p);
  uint64_t v9 = __p;
  std::basic_string<char16_t>::size_type v10 = v26;
  if (__p == v26)
  {
    UChar32 v11 = 0;
  }
  else
  {
    UChar32 v11 = 0;
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    do
    {
      if ((unint64_t)v12 >= v13)
      {
        uint64_t v14 = (v12 - v11) >> 3;
        unint64_t v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if ((uint64_t)(v13 - (void)v11) >> 2 > v15) {
          unint64_t v15 = (uint64_t)(v13 - (void)v11) >> 2;
        }
        if (v13 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v16 = v15;
        }
        if (v16) {
          unint64_t v16 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v16);
        }
        else {
          uint64_t v17 = 0;
        }
        int v18 = (char *)(v16 + 8 * v14);
        *(void *)int v18 = *v9;
        uint64_t v19 = v18 + 8;
        while (v12 != v11)
        {
          uint64_t v20 = *((void *)v12 - 1);
          v12 -= 8;
          *((void *)v18 - 1) = v20;
          v18 -= 8;
        }
        unint64_t v13 = v16 + 8 * v17;
        if (v11) {
          operator delete(v11);
        }
        UChar32 v11 = v18;
        uint64_t v12 = v19;
      }
      else
      {
        *(void *)uint64_t v12 = *v9;
        v12 += 8;
      }
      v9 += 5;
    }
    while (v9 != v10);
    if (v11 != v12)
    {
      *a1 = v11;
      a1[1] = v12;
      a1[2] = v13;
      goto LABEL_31;
    }
  }
  uint64_t v23 = *(void *)v31;
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  long long v24 = (uint64_t *)operator new(8uLL);
  *a1 = v24;
  *v24++ = v23;
  a1[1] = v24;
  a1[2] = v24;
  if (v11) {
    operator delete(v11);
  }
LABEL_31:
  if (__p) {
    operator delete(__p);
  }
  uint64_t v8 = v28;
  if (v28) {
LABEL_34:
  }
    operator delete(v8);
}

void sub_1D2CB8BB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

morphun::analysis::DictionaryExposableMorphology *morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology(morphun::analysis::DictionaryExposableMorphology *this, const morphun::util::ULocale *a2, morphun::dictionary::DictionaryMetaData *a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 40)) = *((void *)a2 + 1);
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(a3, a2);
  *((void *)this + 1) = npc<morphun::dictionary::DictionaryMetaData const>(Dictionary);
  *((void *)this + 2) = morphun::dictionary::Inflector::getInflector(a3, v7);
  morphun::util::ULocale::ULocale((morphun::analysis::DictionaryExposableMorphology *)((char *)this + 24), a3);
  return this;
}

void sub_1D2CB8D28(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::DictionaryExposableMorphology *morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology(morphun::analysis::DictionaryExposableMorphology *this, const morphun::util::ULocale *a2)
{
  *(void *)this = &unk_1F2A0FEF8;
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(a2, a2);
  *((void *)this + 1) = npc<morphun::dictionary::DictionaryMetaData const>(Dictionary);
  *((void *)this + 2) = morphun::dictionary::Inflector::getInflector(a2, v5);
  morphun::util::ULocale::ULocale((morphun::analysis::DictionaryExposableMorphology *)((char *)this + 24), a2);
  return this;
}

void morphun::analysis::DictionaryExposableMorphology::~DictionaryExposableMorphology(void **this, void **a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v2 - 5)) = a2[1];
}

void virtual thunk to'morphun::analysis::DictionaryExposableMorphology::~DictionaryExposableMorphology(morphun::analysis::DictionaryExposableMorphology *this)
{
  uint64_t v1 = (void **)((char *)this + *(void *)(*(void *)this - 32));
  *uint64_t v1 = &unk_1F2A0FEF8;
}

{
  void **v1;
  uint64_t vars8;

  uint64_t v1 = (void **)((char *)this + *(void *)(*(void *)this - 32));
  *uint64_t v1 = &unk_1F2A0FEF8;

  JUMPOUT(0x1D942B8B0);
}

void morphun::analysis::ItAnalyzer::addWordNormalizationFilter(morphun::analysis::ItAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2CB93B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v25, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::ItAnalyzer::addStopFilter(morphun::analysis::ItAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2CB9538(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::ItAnalyzer::~ItAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06E80);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06E80);
}

uint64_t **com::apple::siri::tokenizer::data::config_hi::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t morphun::dialog::SemanticConceptList::setAvoidItemAffixRedundancy(uint64_t this, char a2)
{
  *(unsigned char *)(this + 344) = a2;
  return this;
}

morphun::dialog::SpeakableString *morphun::dialog::SemanticConceptList::getItemSuffix@<X0>(morphun::dialog::SemanticConceptList *this@<X0>, morphun::dialog::SpeakableString *a2@<X8>)
{
  return morphun::dialog::SpeakableString::SpeakableString(a2, (morphun::dialog::SemanticConceptList *)((char *)this + 304));
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::setItemSuffix(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SpeakableString *a2)
{
  morphun::dialog::SpeakableString::operator=((uint64_t)this + 304, (uint64_t)a2);
  return this;
}

morphun::dialog::SpeakableString *morphun::dialog::SemanticConceptList::getItemPrefix@<X0>(morphun::dialog::SemanticConceptList *this@<X0>, morphun::dialog::SpeakableString *a2@<X8>)
{
  return morphun::dialog::SpeakableString::SpeakableString(a2, (morphun::dialog::SemanticConceptList *)((char *)this + 264));
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::setItemPrefix(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SpeakableString *a2)
{
  morphun::dialog::SpeakableString::operator=((uint64_t)this + 264, (uint64_t)a2);
  return this;
}

morphun::dialog::SpeakableString *morphun::dialog::SemanticConceptList::getAfterLast@<X0>(morphun::dialog::SemanticConceptList *this@<X0>, morphun::dialog::SpeakableString *a2@<X8>)
{
  return morphun::dialog::SpeakableString::SpeakableString(a2, (morphun::dialog::SemanticConceptList *)((char *)this + 224));
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::setAfterLast(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SpeakableString *a2)
{
  morphun::dialog::SpeakableString::operator=((uint64_t)this + 224, (uint64_t)a2);
  return this;
}

morphun::dialog::SpeakableString *morphun::dialog::SemanticConceptList::getBeforeLast@<X0>(morphun::dialog::SemanticConceptList *this@<X0>, morphun::dialog::SpeakableString *a2@<X8>)
{
  return morphun::dialog::SpeakableString::SpeakableString(a2, (morphun::dialog::SemanticConceptList *)((char *)this + 184));
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::setBeforeLast(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SpeakableString *a2)
{
  morphun::dialog::SpeakableString::operator=((uint64_t)this + 184, (uint64_t)a2);
  return this;
}

morphun::dialog::SpeakableString *morphun::dialog::SemanticConceptList::getItemDelimiter@<X0>(morphun::dialog::SemanticConceptList *this@<X0>, morphun::dialog::SpeakableString *a2@<X8>)
{
  return morphun::dialog::SpeakableString::SpeakableString(a2, (morphun::dialog::SemanticConceptList *)((char *)this + 144));
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::setItemDelimiter(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SpeakableString *a2)
{
  morphun::dialog::SpeakableString::operator=((uint64_t)this + 144, (uint64_t)a2);
  return this;
}

morphun::dialog::SpeakableString *morphun::dialog::SemanticConceptList::getAfterFirst@<X0>(morphun::dialog::SemanticConceptList *this@<X0>, morphun::dialog::SpeakableString *a2@<X8>)
{
  return morphun::dialog::SpeakableString::SpeakableString(a2, (morphun::dialog::SemanticConceptList *)((char *)this + 104));
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::setAfterFirst(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SpeakableString *a2)
{
  morphun::dialog::SpeakableString::operator=((uint64_t)this + 104, (uint64_t)a2);
  return this;
}

morphun::dialog::SpeakableString *morphun::dialog::SemanticConceptList::getBeforeFirst@<X0>(morphun::dialog::SemanticConceptList *this@<X0>, morphun::dialog::SpeakableString *a2@<X8>)
{
  return morphun::dialog::SpeakableString::SpeakableString(a2, (morphun::dialog::SemanticConceptList *)((char *)this + 64));
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::setBeforeFirst(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SpeakableString *a2)
{
  morphun::dialog::SpeakableString::operator=((uint64_t)this + 64, (uint64_t)a2);
  return this;
}

void morphun::dialog::SemanticConceptList::clone(morphun::dialog::SemanticConceptList *this)
{
}

void sub_1D2CB97F4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::SemanticConceptList(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SemanticConceptList *a2)
{
  *(void *)this = &unk_1F29F4998;
  uint64_t v4 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureConceptBase *)&off_1F2A05310, (uint64_t)a2);
  *(void *)uint64_t v4 = &off_1F2A090B0;
  *((void *)v4 + 5) = 0;
  uint64_t v5 = (char **)((char *)v4 + 40);
  *((void *)v4 + 6) = 0;
  *((void *)v4 + 7) = 0;
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticFeatureConceptBase *)((char *)v4 + 64), (const morphun::dialog::SemanticConceptList *)((char *)a2 + 64));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 104), (const morphun::dialog::SemanticConceptList *)((char *)a2 + 104));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 144), (const morphun::dialog::SemanticConceptList *)((char *)a2 + 144));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 184), (const morphun::dialog::SemanticConceptList *)((char *)a2 + 184));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 224), (const morphun::dialog::SemanticConceptList *)((char *)a2 + 224));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 264), (const morphun::dialog::SemanticConceptList *)((char *)a2 + 264));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 304), (const morphun::dialog::SemanticConceptList *)((char *)a2 + 304));
  *((unsigned char *)this + 344) = 1;
  uint64_t v6 = (void *)*((void *)a2 + 5);
  for (char i = (void *)*((void *)a2 + 6); v6 != i; ++v6)
  {
    if (*v6)
    {
      uint64_t v8 = (*(uint64_t (**)(void))(*(void *)*v6 + 128))(*v6);
      uint64_t v9 = v8;
      UChar32 v11 = (uint64_t *)*((void *)this + 6);
      unint64_t v10 = *((void *)this + 7);
      if ((unint64_t)v11 >= v10)
      {
        uint64_t v13 = ((char *)v11 - *v5) >> 3;
        if ((unint64_t)(v13 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v14 = v10 - (void)*v5;
        uint64_t v15 = v14 >> 2;
        if (v14 >> 2 <= (unint64_t)(v13 + 1)) {
          uint64_t v15 = v13 + 1;
        }
        if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v16 = v15;
        }
        if (v16) {
          unint64_t v16 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v16);
        }
        else {
          uint64_t v17 = 0;
        }
        int v18 = (uint64_t *)(v16 + 8 * v13);
        uint64_t *v18 = v9;
        uint64_t v12 = v18 + 1;
        uint64_t v20 = (char *)*((void *)this + 5);
        uint64_t v19 = (char *)*((void *)this + 6);
        if (v19 != v20)
        {
          do
          {
            uint64_t v21 = *((void *)v19 - 1);
            v19 -= 8;
            *--int v18 = v21;
          }
          while (v19 != v20);
          uint64_t v19 = *v5;
        }
        *((void *)this + 5) = v18;
        *((void *)this + 6) = v12;
        *((void *)this + 7) = v16 + 8 * v17;
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        *UChar32 v11 = v8;
        uint64_t v12 = v11 + 1;
      }
      *((void *)this + 6) = v12;
    }
  }
  return this;
}

void sub_1D2CB9A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, morphun::dialog::SpeakableString *a10, morphun::dialog::SpeakableString *a11, morphun::dialog::SpeakableString *a12, morphun::dialog::SpeakableString *a13, morphun::dialog::SpeakableString *a14)
{
  int v18 = *v16;
  if (*v16)
  {
    *(void *)(v14 + 48) = v18;
    operator delete(v18);
  }
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v14, (void ***)&off_1F2A05310);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConceptList::getFeatureValue(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SemanticFeature *a2)
{
  if (*((void *)this + 5) == *((void *)this + 6)) {
    return 0;
  }
  uint64_t v4 = (*(uint64_t (**)(morphun::dialog::SemanticConceptList *))(*(void *)this + 40))(this);
  if (!v4)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures((morphun::lang::features::LanguageGrammarFeatures *)(v4 + 104), &v12);
  morphun::lang::features::LanguageGrammarFeatures::getCategories((morphun::lang::features::LanguageGrammarFeatures *)&v12, (uint64_t)v14);
  uint64_t v5 = (*(uint64_t (**)(const morphun::dialog::SemanticFeature *))(*(void *)a2 + 32))(a2);
  uint64_t v6 = v15;
  if (!v15)
  {
LABEL_9:
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(v6);
    uint64_t v12 = &off_1F2A088F0;
    return morphun::dialog::SemanticConceptList::toSpeakableString(this, a2);
  }
  uint64_t v7 = (unsigned __int16 *)v5;
  uint64_t v8 = (unsigned __int16 *)v15;
  while (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v7, v8 + 16))
  {
LABEL_8:
    uint64_t v8 = *(unsigned __int16 **)v8;
    if (!v8) {
      goto LABEL_9;
    }
  }
  if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v8 + 16, v7))
  {
    v8 += 4;
    goto LABEL_8;
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(v6);
  uint64_t v12 = &off_1F2A088F0;
  uint64_t v10 = npc<morphun::dialog::SemanticFeatureConceptBase>(**((void **)this + 5));
  return (*(uint64_t (**)(uint64_t, const morphun::dialog::SemanticFeature *))(*(void *)v10 + 104))(v10, a2);
}

void sub_1D2CB9CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConceptList::toSpeakableString(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SemanticFeature *a2)
{
  if (*((void *)this + 5) != *((void *)this + 6))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)&word_1D2ED0AEE);
    morphun::dialog::SpeakableString::SpeakableString(v67, &__dst);
    if (v66 < 0) {
      operator delete((void *)__dst);
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1D2ED0AEE);
    morphun::dialog::SpeakableString::SpeakableString(&__dst, &__p);
    if (SHIBYTE(v62) < 0) {
      operator delete((void *)__p);
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v58, (char *)&word_1D2ED0AEE);
    morphun::dialog::SpeakableString::SpeakableString(&__p, &v58);
    if (SHIBYTE(v59) < 0) {
      operator delete((void *)v58);
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v55, (char *)&word_1D2ED0AEE);
    morphun::dialog::SpeakableString::SpeakableString(&v58, &v55);
    if (SHIBYTE(v56) < 0) {
      operator delete((void *)v55);
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v53, (char *)&word_1D2ED0AEE);
    morphun::dialog::SpeakableString::SpeakableString(&v55, (long long *)v53);
    if (v54 < 0) {
      operator delete(v53[0]);
    }
    uint64_t v5 = (uint64_t *)*((void *)this + 5);
    uint64_t v4 = (uint64_t *)*((void *)this + 6);
    if (v5 == v4) {
LABEL_153:
    }
      operator new();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = (char *)*(v4 - 1);
    uint64_t v9 = *v5;
    while (1)
    {
      uint64_t v10 = (char *)*v5;
      npc<morphun::dialog::SemanticFeatureConceptBase>(*v5);
      uint64_t v11 = *(void *)v10;
      if (a2) {
        uint64_t v12 = (*(uint64_t (**)(char *, const morphun::dialog::SemanticFeature *))(v11 + 104))(v10, a2);
      }
      else {
        uint64_t v12 = (*(uint64_t (**)(char *))(*(void *)&v10[*(void *)(v11 - 56)] + 24))(&v10[*(void *)(v11 - 56)]);
      }
      uint64_t v13 = v12;
      if (!v12 || ((*(uint64_t (**)(uint64_t))(*(void *)v12 + 56))(v12) & 1) != 0)
      {
        uint64_t v13 = v7;
        uint64_t v10 = v6;
        goto LABEL_136;
      }
      morphun::dialog::SpeakableString::operator=((uint64_t)&__p, (uint64_t)&__dst);
      if ((char *)v9 == v10)
      {
        if (*((char *)this + 95) < 0)
        {
          if (*((void *)this + 10)) {
            goto LABEL_28;
          }
        }
        else if (*((unsigned char *)this + 95))
        {
          goto LABEL_28;
        }
        uint64_t v14 = *((void *)this + 12);
        if (v14)
        {
          if (*(char *)(v14 + 23) < 0)
          {
            if (*(void *)(v14 + 8))
            {
LABEL_28:
              morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)this + 64);
              goto LABEL_31;
            }
          }
          else if (*(unsigned char *)(v14 + 23))
          {
            goto LABEL_28;
          }
        }
        (*(void (**)(void **__return_ptr, morphun::dialog::SemanticConceptList *, uint64_t, uint64_t))(*(void *)this + 144))(v53, this, v9, v13);
        morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)v53);
      }
LABEL_31:
      if ((char *)v9 == v6)
      {
        if (*((char *)this + 135) < 0)
        {
          if (*((void *)this + 15)) {
            goto LABEL_39;
          }
        }
        else if (*((unsigned char *)this + 135))
        {
          goto LABEL_39;
        }
        uint64_t v15 = *((void *)this + 17);
        if (v15)
        {
          if (*(char *)(v15 + 23) < 0)
          {
            if (*(void *)(v15 + 8))
            {
LABEL_39:
              morphun::dialog::SpeakableString::operator+=((uint64_t)&__p, (uint64_t)this + 104);
              goto LABEL_43;
            }
          }
          else if (*(unsigned char *)(v15 + 23))
          {
            goto LABEL_39;
          }
        }
        if (!v9)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        (*(void (**)(void **__return_ptr, morphun::dialog::SemanticConceptList *, uint64_t, uint64_t, char *, uint64_t))(*(void *)this + 160))(v53, this, v9, v7, v10, v13);
        morphun::dialog::SpeakableString::operator+=((uint64_t)&__p, (uint64_t)v53);
      }
LABEL_43:
      if (v8 == v10 && v6)
      {
        if (*((char *)this + 215) < 0)
        {
          if (!*((void *)this + 25))
          {
LABEL_49:
            uint64_t v16 = *((void *)this + 27);
            if (!v16) {
              goto LABEL_54;
            }
            if (*(char *)(v16 + 23) < 0)
            {
              if (!*(void *)(v16 + 8))
              {
LABEL_54:
                (*(void (**)(void **__return_ptr, morphun::dialog::SemanticConceptList *, char *, uint64_t, char *, uint64_t))(*(void *)this + 192))(v53, this, v6, v7, v8, v13);
                morphun::dialog::SpeakableString::operator+=((uint64_t)&__p, (uint64_t)v53);
                goto LABEL_55;
              }
            }
            else if (!*(unsigned char *)(v16 + 23))
            {
              goto LABEL_54;
            }
          }
        }
        else if (!*((unsigned char *)this + 215))
        {
          goto LABEL_49;
        }
        morphun::dialog::SpeakableString::operator+=((uint64_t)&__p, (uint64_t)this + 184);
      }
LABEL_55:
      if (v8 != (char *)v9 && (char *)v9 != v10 && v6)
      {
        uint64_t v17 = v63;
        if ((v63 & 0x80u) != 0) {
          uint64_t v17 = v62;
        }
        if (v17)
        {
LABEL_61:
          p_p = &__p;
LABEL_62:
          morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)p_p);
          goto LABEL_63;
        }
        if (v64)
        {
          if (*(char *)(v64 + 23) < 0)
          {
            if (*(void *)(v64 + 8)) {
              goto LABEL_61;
            }
          }
          else if (*(unsigned char *)(v64 + 23))
          {
            goto LABEL_61;
          }
        }
        if (*((char *)this + 175) < 0) {
          uint64_t v48 = *((void *)this + 20);
        }
        else {
          uint64_t v48 = *((unsigned __int8 *)this + 175);
        }
        p_p = (long long *)((char *)this + 144);
        if (v48) {
          goto LABEL_62;
        }
        uint64_t v49 = *((void *)this + 22);
        if (v49)
        {
          uint64_t v50 = *(char *)(v49 + 23) < 0 ? *(void *)(v49 + 8) : *(unsigned __int8 *)(v49 + 23);
          p_p = (long long *)((char *)this + 144);
          if (v50) {
            goto LABEL_62;
          }
        }
        (*(void (**)(void **__return_ptr, morphun::dialog::SemanticConceptList *, char *, uint64_t, char *, uint64_t))(*(void *)this + 176))(v53, this, v6, v7, v10, v13);
        morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)v53);
      }
LABEL_63:
      if (*((char *)this + 295) < 0)
      {
        if (*((void *)this + 35)) {
          goto LABEL_70;
        }
      }
      else if (*((unsigned char *)this + 295))
      {
        goto LABEL_70;
      }
      uint64_t v19 = *((void *)this + 37);
      if (v19)
      {
        if (*(char *)(v19 + 23) < 0)
        {
          if (*(void *)(v19 + 8))
          {
LABEL_70:
            morphun::dialog::SpeakableString::operator=((uint64_t)&v58, (uint64_t)this + 264);
            goto LABEL_77;
          }
        }
        else if (*(unsigned char *)(v19 + 23))
        {
          goto LABEL_70;
        }
      }
      (*(void (**)(void **__return_ptr, morphun::dialog::SemanticConceptList *, char *, uint64_t))(*(void *)this + 224))(v53, this, v10, v13);
      morphun::dialog::SpeakableString::operator=((uint64_t)&v58, (uint64_t)v53);
LABEL_77:
      if (*((char *)this + 335) < 0)
      {
        if (*((void *)this + 40)) {
          goto LABEL_84;
        }
      }
      else if (*((unsigned char *)this + 335))
      {
        goto LABEL_84;
      }
      uint64_t v20 = *((void *)this + 42);
      if (!v20) {
        goto LABEL_86;
      }
      if (*(char *)(v20 + 23) < 0)
      {
        if (!*(void *)(v20 + 8))
        {
LABEL_86:
          (*(void (**)(void **__return_ptr, morphun::dialog::SemanticConceptList *, char *, uint64_t))(*(void *)this + 240))(v53, this, v10, v13);
          morphun::dialog::SpeakableString::operator=((uint64_t)&v55, (uint64_t)v53);
          goto LABEL_87;
        }
      }
      else if (!*(unsigned char *)(v20 + 23))
      {
        goto LABEL_86;
      }
LABEL_84:
      morphun::dialog::SpeakableString::operator=((uint64_t)&v55, (uint64_t)this + 304);
LABEL_87:
      if (!*((unsigned char *)this + 344)) {
        goto LABEL_107;
      }
      uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 32))(v13);
      int v22 = *(char *)(v21 + 23);
      if (v22 >= 0) {
        unint64_t v23 = *(unsigned __int8 *)(v21 + 23);
      }
      else {
        unint64_t v23 = *(void *)(v21 + 8);
      }
      unint64_t v24 = v60;
      if ((v60 & 0x80u) != 0) {
        unint64_t v24 = v59;
      }
      if (v23 < v24) {
        goto LABEL_107;
      }
      uint64_t v25 = (unsigned __int16 *)&v58 + 4;
      if ((v60 & 0x80u) != 0) {
        uint64_t v25 = (unsigned __int16 *)*((void *)&v58 + 1);
      }
      unint64_t v26 = v22 >= 0 ? (unsigned __int16 *)v21 : *(unsigned __int16 **)v21;
      if (v24)
      {
        unint64_t v27 = v24 - 1;
        do
        {
          int v29 = *v26++;
          int v28 = v29;
          int v31 = *v25++;
          int v30 = v31;
          BOOL v33 = v27-- != 0;
        }
        while (v30 == v28 && v33);
        if (v30 != v28) {
LABEL_107:
        }
          morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)&v58);
      }
      morphun::dialog::SpeakableString::operator+=((uint64_t)v67, v13);
      if (!*((unsigned char *)this + 344)) {
        goto LABEL_124;
      }
      uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 32))(v13);
      uint64_t v35 = *(void *)v34;
      int v36 = *(char *)(v34 + 23);
      BOOL v37 = v36 < 0;
      if (v36 >= 0) {
        uint64_t v35 = v34;
      }
      unint64_t v38 = *(unsigned __int8 *)(v34 + 23);
      if (v37) {
        unint64_t v38 = *(void *)(v34 + 8);
      }
      unint64_t v39 = v57;
      unint64_t v40 = (unsigned __int16 *)&v55 + 4;
      if ((v57 & 0x80u) != 0)
      {
        unint64_t v40 = (unsigned __int16 *)*((void *)&v55 + 1);
        unint64_t v39 = v56;
      }
      if (v38 < v39) {
        goto LABEL_124;
      }
      if (v39)
      {
        uint64_t v41 = -(uint64_t)v39;
        uint64_t v42 = v35 + 2 * v38;
        do
        {
          int v43 = *(unsigned __int16 *)(v42 + 2 * v41);
          int v45 = *v40++;
          int v44 = v45;
        }
        while (v45 == v43 && v41++ != -1);
        if (v44 != v43) {
LABEL_124:
        }
          morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)&v55);
      }
      if (v8 == v10)
      {
        if (*((char *)this + 255) < 0)
        {
          if (!*((void *)this + 30))
          {
LABEL_130:
            uint64_t v47 = *((void *)this + 32);
            if (!v47) {
              goto LABEL_147;
            }
            if (*(char *)(v47 + 23) < 0)
            {
              if (!*(void *)(v47 + 8))
              {
LABEL_147:
                (*(void (**)(void **__return_ptr, morphun::dialog::SemanticConceptList *, char *, uint64_t))(*(void *)this + 208))(v53, this, v8, v13);
                morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)v53);
                if (!v7) {
                  goto LABEL_136;
                }
LABEL_135:
                (*(void (**)(uint64_t))(*(void *)v7 + 16))(v7);
                goto LABEL_136;
              }
            }
            else if (!*(unsigned char *)(v47 + 23))
            {
              goto LABEL_147;
            }
          }
        }
        else if (!*((unsigned char *)this + 255))
        {
          goto LABEL_130;
        }
        morphun::dialog::SpeakableString::operator+=((uint64_t)v67, (uint64_t)this + 224);
      }
      if (v7) {
        goto LABEL_135;
      }
LABEL_136:
      ++v5;
      uint64_t v6 = v10;
      uint64_t v7 = v13;
      if (v5 == v4) {
        goto LABEL_153;
      }
    }
  }
  return 0;
}

void sub_1D2CBA700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (v47) {
    (*(void (**)(uint64_t))(*(void *)v47 + 16))(v47);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CBA904(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::SemanticConceptList::reset(morphun::dialog::SemanticConceptList *this)
{
  uint64_t v2 = (uint64_t *)*((void *)this + 5);
  long long v3 = (uint64_t *)*((void *)this + 6);
  while (v2 != v3)
  {
    uint64_t v4 = *v2++;
    uint64_t v5 = npc<morphun::dialog::SemanticFeatureConceptBase>(v4);
    (*(void (**)(uint64_t))(*(void *)v5 + 96))(v5);
  }
  uint64_t v7 = (void **)*((void *)this + 3);
  uint64_t v6 = (void *)((char *)this + 24);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v7);
  *(v6 - 1) = v6;
  void *v6 = 0;
  v6[1] = 0;
}

void morphun::dialog::SemanticConceptList::clearConstraint(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t v4 = (uint64_t *)*((void *)this + 5);
  uint64_t v5 = (uint64_t *)*((void *)this + 6);
  while (v4 != v5)
  {
    uint64_t v6 = *v4++;
    uint64_t v7 = npc<morphun::dialog::SemanticFeatureConceptBase>(v6);
    (*(void (**)(uint64_t, const morphun::dialog::SemanticFeature *))(*(void *)v7 + 80))(v7, a2);
  }

  morphun::dialog::SemanticFeatureConceptBase::clearConstraint(this, a2);
}

std::basic_string<char16_t> *morphun::dialog::SemanticConceptList::putConstraint(uint64_t **a1, const morphun::dialog::SemanticFeature *a2, const std::basic_string<char16_t> *a3)
{
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  while (v6 != v7)
  {
    uint64_t v8 = *v6++;
    uint64_t v9 = npc<morphun::dialog::SemanticFeatureConceptBase>(v8);
    (*(void (**)(uint64_t, const morphun::dialog::SemanticFeature *, const std::basic_string<char16_t> *))(*(void *)v9 + 64))(v9, a2, a3);
  }
  uint64_t v12 = a2;
  uint64_t v10 = (std::basic_string<char16_t> *)(std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::piecewise_construct_t const&,std::tuple<morphun::dialog::SemanticFeature const&>,std::tuple<>>(a1 + 2, (uint64_t)a2, &v12)+ 13);

  return std::basic_string<char16_t>::operator=(v10, a3);
}

BOOL morphun::dialog::SemanticConceptList::isExists(morphun::dialog::SemanticConceptList *this)
{
  return *((void *)this + 5) != *((void *)this + 6);
}

uint64_t morphun::dialog::SemanticConceptList::toSpeakableString(morphun::dialog::SemanticConceptList *this)
{
  return morphun::dialog::SemanticConceptList::toSpeakableString(this, 0);
}

void morphun::dialog::SemanticConceptList::~SemanticConceptList(morphun::dialog::SemanticConceptList *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::SemanticConceptList::~SemanticConceptList(morphun::dialog::SemanticConceptList *this, void ***a2)
{
  uint64_t v4 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)*(v4 - 9) + (void)this) = a2[5];
  *(void *)((char *)this + *(void *)(*(void *)this - 56)) = a2[6];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[7];
  uint64_t v5 = (void *)*((void *)this + 5);
  uint64_t v6 = (void *)*((void *)this + 6);
  while (v5 != v6)
  {
    if (*v5) {
      (*(void (**)(void))(*(void *)*v5 + 16))(*v5);
    }
    ++v5;
  }
  uint64_t v7 = (void *)*((void *)this + 5);
  if (v7)
  {
    *((void *)this + 6) = v7;
    operator delete(v7);
  }

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)this, a2 + 1);
}

void morphun::dialog::SemanticConceptList::toString(morphun::dialog::SemanticConceptList *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0AEE);
  morphun::dialog::SpeakableString::SpeakableString(&v12, (long long *)__p);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L", ");
  morphun::dialog::SpeakableString::SpeakableString(__p, (long long *)&__dst);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  uint64_t v4 = (char **)*((void *)this + 5);
  uint64_t v5 = (char **)*((void *)this + 6);
  if (v4 != v5)
  {
    char v6 = 1;
    do
    {
      uint64_t v7 = *v4;
      if ((v6 & 1) == 0) {
        morphun::dialog::SpeakableString::operator+=((uint64_t)&v12, (uint64_t)__p);
      }
      npc<morphun::dialog::SemanticFeatureConceptBase>((uint64_t)v7);
      uint64_t v8 = (*(uint64_t (**)(char *))(*(void *)&v7[*(void *)(*(void *)v7 - 56)] + 24))(&v7[*(void *)(*(void *)v7 - 56)]);
      if (v8)
      {
        morphun::dialog::SpeakableString::operator+=((uint64_t)&v12, v8);
        (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
      }
      char v6 = 0;
      ++v4;
    }
    while (v4 != v5);
  }
  std::operator+<char16_t>((uint64_t)&__dst, L"[", &v13);
  std::basic_string<char16_t>::append(&__dst, L"]", 1uLL);
  *a2 = __dst;
}

void sub_1D2CBAECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConceptList::SemanticConceptList(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase((void *)a1, (const morphun::dialog::SemanticFeatureModel *)(a2 + 1), a3);
  uint64_t v8 = *a2;
  *uint64_t v7 = *a2;
  *(void *)(a1 + *(void *)(v8 - 72)) = a2[5];
  *(void *)(a1 + *(void *)(*(void *)a1 - 56)) = a2[6];
  *(void *)(a1 + *(void *)(*(void *)a1 - 40)) = a2[7];
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v9 = (char **)(a1 + 40);
  *(void *)(a1 + 56) = 0;
  long long v27 = 0uLL;
  uint64_t v28 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 64), &v27);
  long long v27 = 0uLL;
  uint64_t v28 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 104), &v27);
  long long v27 = 0uLL;
  uint64_t v28 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 144), &v27);
  long long v27 = 0uLL;
  uint64_t v28 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 184), &v27);
  long long v27 = 0uLL;
  uint64_t v28 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 224), &v27);
  long long v27 = 0uLL;
  uint64_t v28 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 264), &v27);
  long long v27 = 0uLL;
  uint64_t v28 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 304), &v27);
  uint64_t v10 = *(void **)a4;
  char v11 = *(void **)(a4 + 8);
  for (*(unsigned char *)(a1 + 344) = 1; v10 != v11; ++v10)
  {
    if (*v10)
    {
      uint64_t v12 = (*(uint64_t (**)(void))(*(void *)*v10 + 128))(*v10);
      uint64_t v13 = v12;
      uint64_t v15 = *(uint64_t **)(a1 + 48);
      unint64_t v14 = *(void *)(a1 + 56);
      if ((unint64_t)v15 >= v14)
      {
        uint64_t v17 = ((char *)v15 - *v9) >> 3;
        if ((unint64_t)(v17 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v18 = v14 - (void)*v9;
        uint64_t v19 = v18 >> 2;
        if (v18 >> 2 <= (unint64_t)(v17 + 1)) {
          uint64_t v19 = v17 + 1;
        }
        if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v20 = v19;
        }
        if (v20) {
          unint64_t v20 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v20);
        }
        else {
          uint64_t v21 = 0;
        }
        int v22 = (uint64_t *)(v20 + 8 * v17);
        uint64_t *v22 = v13;
        uint64_t v16 = v22 + 1;
        unint64_t v24 = *(char **)(a1 + 40);
        unint64_t v23 = *(char **)(a1 + 48);
        if (v23 != v24)
        {
          do
          {
            uint64_t v25 = *((void *)v23 - 1);
            v23 -= 8;
            *--int v22 = v25;
          }
          while (v23 != v24);
          unint64_t v23 = *v9;
        }
        *(void *)(a1 + 40) = v22;
        *(void *)(a1 + 48) = v16;
        *(void *)(a1 + 56) = v20 + 8 * v21;
        if (v23) {
          operator delete(v23);
        }
      }
      else
      {
        *uint64_t v15 = v12;
        uint64_t v16 = v15 + 1;
      }
      *(void *)(a1 + 48) = v16;
    }
  }
  return a1;
}

void sub_1D2CBB290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, morphun::dialog::SpeakableString *a10, morphun::dialog::SpeakableString *a11, morphun::dialog::SpeakableString *a12, morphun::dialog::SpeakableString *a13, morphun::dialog::SpeakableString *a14, void ***a15)
{
  uint64_t v19 = *v16;
  if (*v16)
  {
    *(void *)(v15 + 48) = v19;
    operator delete(v19);
  }
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v15, a15);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConceptList::SemanticConceptList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_1F29F4998;
  uint64_t v5 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase((void *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A05310, a2);
  void *v5 = &off_1F2A090B0;
  void v5[5] = 0;
  char v6 = (char **)(v5 + 5);
  v5[6] = 0;
  v5[7] = 0;
  long long v24 = 0uLL;
  uint64_t v25 = 0;
  morphun::dialog::SpeakableString::SpeakableString(v5 + 8, &v24);
  long long v24 = 0uLL;
  uint64_t v25 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 104), &v24);
  long long v24 = 0uLL;
  uint64_t v25 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 144), &v24);
  long long v24 = 0uLL;
  uint64_t v25 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 184), &v24);
  long long v24 = 0uLL;
  uint64_t v25 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 224), &v24);
  long long v24 = 0uLL;
  uint64_t v25 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 264), &v24);
  long long v24 = 0uLL;
  uint64_t v25 = 0;
  morphun::dialog::SpeakableString::SpeakableString((void *)(a1 + 304), &v24);
  uint64_t v7 = *(void **)a3;
  uint64_t v8 = *(void **)(a3 + 8);
  for (*(unsigned char *)(a1 + 344) = 1; v7 != v8; ++v7)
  {
    if (*v7)
    {
      uint64_t v9 = (*(uint64_t (**)(void))(*(void *)*v7 + 128))(*v7);
      uint64_t v10 = v9;
      uint64_t v12 = *(uint64_t **)(a1 + 48);
      unint64_t v11 = *(void *)(a1 + 56);
      if ((unint64_t)v12 >= v11)
      {
        uint64_t v14 = ((char *)v12 - *v6) >> 3;
        if ((unint64_t)(v14 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v15 = v11 - (void)*v6;
        uint64_t v16 = v15 >> 2;
        if (v15 >> 2 <= (unint64_t)(v14 + 1)) {
          uint64_t v16 = v14 + 1;
        }
        if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v17 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v16;
        }
        if (v17) {
          unint64_t v17 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v17);
        }
        else {
          uint64_t v18 = 0;
        }
        uint64_t v19 = (uint64_t *)(v17 + 8 * v14);
        *uint64_t v19 = v10;
        uint64_t v13 = v19 + 1;
        uint64_t v21 = *(char **)(a1 + 40);
        unint64_t v20 = *(char **)(a1 + 48);
        if (v20 != v21)
        {
          do
          {
            uint64_t v22 = *((void *)v20 - 1);
            v20 -= 8;
            *--uint64_t v19 = v22;
          }
          while (v20 != v21);
          unint64_t v20 = *v6;
        }
        *(void *)(a1 + 40) = v19;
        *(void *)(a1 + 48) = v13;
        *(void *)(a1 + 56) = v17 + 8 * v18;
        if (v20) {
          operator delete(v20);
        }
      }
      else
      {
        uint64_t *v12 = v9;
        uint64_t v13 = v12 + 1;
      }
      *(void *)(a1 + 48) = v13;
    }
  }
  return a1;
}

void sub_1D2CBB5BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, morphun::dialog::SpeakableString *a9, morphun::dialog::SpeakableString *a10, morphun::dialog::SpeakableString *a11, morphun::dialog::SpeakableString *a12, morphun::dialog::SpeakableString *a13)
{
  unint64_t v17 = *v15;
  if (*v15)
  {
    *(void *)(v13 + 48) = v17;
    operator delete(v17);
  }
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v13, (void ***)&off_1F2A05310);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::SemanticConceptList::SemanticConceptList(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t **a4)
{
  morphun::dialog::convertToConst((uint64_t)__p, a4);
  morphun::dialog::SemanticConceptList::SemanticConceptList(a1, a2, a3, (uint64_t)__p);
  if (__p[0]) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_1D2CBB6FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::convertToConst(uint64_t a1, uint64_t **a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  std::vector<morphun::dialog::SemanticFeatureConceptBase const*>::reserve((void **)a1, a2[1] - *a2);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      uint64_t v6 = *v4;
      if (*v4)
      {
        uint64_t v8 = *(void **)(a1 + 8);
        unint64_t v7 = *(void *)(a1 + 16);
        if ((unint64_t)v8 >= v7)
        {
          uint64_t v10 = *(void **)a1;
          uint64_t v11 = ((uint64_t)v8 - *(void *)a1) >> 3;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 61) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v13 = v7 - (void)v10;
          if (v13 >> 2 > v12) {
            unint64_t v12 = v13 >> 2;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            unint64_t v14 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v14);
          }
          else {
            uint64_t v15 = 0;
          }
          uint64_t v16 = (void *)(v14 + 8 * v11);
          *uint64_t v16 = v6;
          uint64_t v9 = v16 + 1;
          if (v8 != v10)
          {
            do
            {
              uint64_t v17 = *--v8;
              *--uint64_t v16 = v17;
            }
            while (v8 != v10);
            uint64_t v8 = *(void **)a1;
          }
          *(void *)a1 = v16;
          *(void *)(a1 + 8) = v9;
          *(void *)(a1 + 16) = v14 + 8 * v15;
          if (v8) {
            operator delete(v8);
          }
        }
        else
        {
          *uint64_t v8 = v6;
          uint64_t v9 = v8 + 1;
        }
        *(void *)(a1 + 8) = v9;
      }
      ++v4;
    }
    while (v4 != v5);
  }
}

{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  std::vector<morphun::dialog::SemanticFeatureConceptBase const*>::reserve((void **)a1, a2[1] - *a2);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      uint64_t v6 = *v4;
      if (*v4)
      {
        uint64_t v8 = *(void **)(a1 + 8);
        unint64_t v7 = *(void *)(a1 + 16);
        if ((unint64_t)v8 >= v7)
        {
          uint64_t v10 = *(void **)a1;
          uint64_t v11 = ((uint64_t)v8 - *(void *)a1) >> 3;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 61) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v13 = v7 - (void)v10;
          if (v13 >> 2 > v12) {
            unint64_t v12 = v13 >> 2;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            unint64_t v14 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v14);
          }
          else {
            uint64_t v15 = 0;
          }
          uint64_t v16 = (void *)(v14 + 8 * v11);
          *uint64_t v16 = v6;
          uint64_t v9 = v16 + 1;
          if (v8 != v10)
          {
            do
            {
              uint64_t v17 = *--v8;
              *--uint64_t v16 = v17;
            }
            while (v8 != v10);
            uint64_t v8 = *(void **)a1;
          }
          *(void *)a1 = v16;
          *(void *)(a1 + 8) = v9;
          *(void *)(a1 + 16) = v14 + 8 * v15;
          if (v8) {
            operator delete(v8);
          }
        }
        else
        {
          *uint64_t v8 = v6;
          uint64_t v9 = v8 + 1;
        }
        *(void *)(a1 + 8) = v9;
      }
      ++v4;
    }
    while (v4 != v5);
  }
}

void sub_1D2CBB83C(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<morphun::dialog::SemanticFeatureConceptBase const*>::reserve(void **a1, unint64_t a2)
{
  if (a2 > ((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    int64_t v3 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v4 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(a2);
    uint64_t v5 = &v4[v3 & 0xFFFFFFFFFFFFFFF8];
    unint64_t v7 = &v4[8 * v6];
    uint64_t v9 = (char *)*a1;
    uint64_t v8 = (char *)a1[1];
    uint64_t v10 = v5;
    if (v8 != *a1)
    {
      do
      {
        uint64_t v11 = *((void *)v8 - 1);
        v8 -= 8;
        *((void *)v10 - 1) = v11;
        v10 -= 8;
      }
      while (v8 != v9);
      uint64_t v8 = (char *)*a1;
    }
    *a1 = v10;
    a1[1] = v5;
    a1[2] = v7;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

uint64_t morphun::dialog::SemanticConceptList::SemanticConceptList(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  morphun::dialog::convertToConst((uint64_t)__p, a3);
  morphun::dialog::SemanticConceptList::SemanticConceptList(a1, a2, (uint64_t)__p);
  if (__p[0]) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_1D2CBB968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

morphun::dialog::SemanticConceptList *morphun::dialog::SemanticConceptList::SemanticConceptList(morphun::dialog::SemanticConceptList *this, const morphun::dialog::SemanticConceptList *a2, void *a3)
{
  uint64_t v6 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticConceptList *)((char *)a2 + 8), (uint64_t)a3);
  uint64_t v7 = *(void *)a2;
  *(void *)uint64_t v6 = *(void *)a2;
  *(void *)((char *)this + *(void *)(v7 - 72)) = *((void *)a2 + 5);
  *(void *)((char *)this + *(void *)(*(void *)this - 56)) = *((void *)a2 + 6);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 7);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  uint64_t v8 = (char **)((char *)this + 40);
  *((void *)this + 7) = 0;
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 64), (const morphun::dialog::SpeakableString *)(a3 + 8));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 104), (const morphun::dialog::SpeakableString *)(a3 + 13));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 144), (const morphun::dialog::SpeakableString *)(a3 + 18));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 184), (const morphun::dialog::SpeakableString *)(a3 + 23));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 224), (const morphun::dialog::SpeakableString *)(a3 + 28));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 264), (const morphun::dialog::SpeakableString *)(a3 + 33));
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + 304), (const morphun::dialog::SpeakableString *)(a3 + 38));
  *((unsigned char *)this + 344) = 1;
  uint64_t v9 = (void *)a3[5];
  for (char i = (void *)a3[6]; v9 != i; ++v9)
  {
    if (*v9)
    {
      uint64_t v11 = (*(uint64_t (**)(void))(*(void *)*v9 + 128))(*v9);
      uint64_t v12 = v11;
      unint64_t v14 = (uint64_t *)*((void *)this + 6);
      unint64_t v13 = *((void *)this + 7);
      if ((unint64_t)v14 >= v13)
      {
        uint64_t v16 = ((char *)v14 - *v8) >> 3;
        if ((unint64_t)(v16 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v17 = v13 - (void)*v8;
        uint64_t v18 = v17 >> 2;
        if (v17 >> 2 <= (unint64_t)(v16 + 1)) {
          uint64_t v18 = v16 + 1;
        }
        if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v19 = v18;
        }
        if (v19) {
          unint64_t v19 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v19);
        }
        else {
          uint64_t v20 = 0;
        }
        uint64_t v21 = (uint64_t *)(v19 + 8 * v16);
        uint64_t *v21 = v12;
        uint64_t v15 = v21 + 1;
        unint64_t v23 = (char *)*((void *)this + 5);
        uint64_t v22 = (char *)*((void *)this + 6);
        if (v22 != v23)
        {
          do
          {
            uint64_t v24 = *((void *)v22 - 1);
            v22 -= 8;
            *--uint64_t v21 = v24;
          }
          while (v22 != v23);
          uint64_t v22 = *v8;
        }
        *((void *)this + 5) = v21;
        *((void *)this + 6) = v15;
        *((void *)this + 7) = v19 + 8 * v20;
        if (v22) {
          operator delete(v22);
        }
      }
      else
      {
        *unint64_t v14 = v11;
        uint64_t v15 = v14 + 1;
      }
      *((void *)this + 6) = v15;
    }
  }
  return this;
}

void sub_1D2CBBC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, morphun::dialog::SpeakableString *a9, morphun::dialog::SpeakableString *a10, morphun::dialog::SpeakableString *a11, morphun::dialog::SpeakableString *a12, morphun::dialog::SpeakableString *a13, void ***a14)
{
  uint64_t v18 = *v15;
  if (*v15)
  {
    *(void *)(v14 + 48) = v18;
    operator delete(v18);
  }
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v14, a14);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::SemanticConceptList::~SemanticConceptList(morphun::dialog::SemanticConceptList *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::SemanticConceptList::~SemanticConceptList(void *a1)
{
}

{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::dialog::SemanticConceptList::getSize(morphun::dialog::SemanticConceptList *this)
{
  return (*((void *)this + 6) - *((void *)this + 5)) >> 3;
}

uint64_t morphun::dialog::SemanticConceptList::get(morphun::dialog::SemanticConceptList *this, int a2)
{
  uint64_t v2 = *((void *)this + 5);
  if (a2 >= (unint64_t)((*((void *)this + 6) - v2) >> 3)) {
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  return *(void *)(v2 + 8 * a2);
}

uint64_t morphun::dialog::SemanticConceptList::operator[](uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (a2 >= (unint64_t)((*(void *)(a1 + 48) - v2) >> 3)) {
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  return *(void *)(v2 + 8 * a2);
}

BOOL virtual thunk to'morphun::dialog::SemanticConceptList::isExists(morphun::dialog::SemanticConceptList *this)
{
  return *(void *)((char *)this + *(void *)(*(void *)this - 64) + 40) != *(void *)((char *)this
                                                                                           + *(void *)(*(void *)this - 64)
                                                                                           + 48);
}

void virtual thunk to'morphun::dialog::SemanticConceptList::toString(morphun::dialog::SemanticConceptList *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

uint64_t virtual thunk to'morphun::dialog::SemanticConceptList::toSpeakableString(morphun::dialog::SemanticConceptList *this)
{
  return morphun::dialog::SemanticConceptList::toSpeakableString((morphun::dialog::SemanticConceptList *)((char *)this + *(void *)(*(void *)this - 48)), 0);
}

uint64_t **com::apple::siri::tokenizer::data::config_kk::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::analysis::stemmer::DaStemFilter::getLemma(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  int R1Start = morphun::analysis::stemmer::NordicStemFilter::getR1Start((uint64_t *)a1);
  int v6 = *(unsigned __int8 *)(a1 + 23);
  if ((v6 & 0x80) == 0)
  {
    if (R1Start >= v6)
    {
      *(_OWORD *)a2 = *(_OWORD *)a1;
      *(void *)(a2 + 16) = *(void *)(a1 + 16);
      return;
    }
LABEL_5:
    std::basic_string<char16_t>::size_type v8 = R1Start;
    std::basic_string<char16_t>::basic_string(&v81, (const std::basic_string<char16_t> *)a1, 0, R1Start, v5);
    uint64_t v10 = *(unsigned __int8 *)(a1 + 23);
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *(void *)(a1 + 8);
    }
    std::basic_string<char16_t>::basic_string(&v80, (const std::basic_string<char16_t> *)a1, v8, v10 - v8, v9);
    memset(&__str, 0, sizeof(__str));
    int v11 = *(char *)(a1 + 23);
    if (v11 >= 0) {
      uint64_t v12 = a1;
    }
    else {
      uint64_t v12 = *(void *)a1;
    }
    if (v11 >= 0) {
      uint64_t v13 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      uint64_t v13 = *(void *)(a1 + 8);
    }
    uint64_t isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase(v12, v13);
    char v15 = isAllLowerCase;
    if ((isAllLowerCase & 1) == 0)
    {
      int32_t v16 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
      long long v17 = *(_OWORD *)&v81.__r_.__value_.__l.__data_;
      uint64_t v18 = morphun::util::LocaleUtils::DANISH((morphun::util::LocaleUtils *)isAllLowerCase);
      if ((v16 & 0x80u) == 0) {
        unint64_t v19 = &v81;
      }
      else {
        unint64_t v19 = (std::basic_string<char16_t> *)v17;
      }
      if ((v16 & 0x80u) == 0) {
        int32_t v20 = v16;
      }
      else {
        int32_t v20 = DWORD2(v17);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__str, (const UChar *)v19, v20, v18);
      uint64_t v21 = std::basic_string<char16_t>::operator=(&v81, &__str);
      int32_t v22 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
      long long v23 = *(_OWORD *)&v80.__r_.__value_.__l.__data_;
      uint64_t v24 = morphun::util::LocaleUtils::DANISH((morphun::util::LocaleUtils *)v21);
      if ((v22 & 0x80u) == 0) {
        uint64_t v25 = &v80;
      }
      else {
        uint64_t v25 = (std::basic_string<char16_t> *)v23;
      }
      if ((v22 & 0x80u) == 0) {
        int32_t v26 = v22;
      }
      else {
        int32_t v26 = DWORD2(v23);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__str, (const UChar *)v25, v26, v24);
      std::basic_string<char16_t>::operator=(&v80, &__str);
    }
    {
      operator new();
    }
    long long v27 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::DaStemFilter::ENDINGS_FIRST_STEP_REMOVE(void)::ENDINGS_FIRST_STEP_REMOVE_);
    uint64_t v28 = morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v80, *v27, v27[1]);
    if ((v28 & 1) == 0)
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(v80.__r_.__value_.__r.__words[2]);
      if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v80.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        int v30 = &v80;
        if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v30 = (std::basic_string<char16_t> *)v80.__r_.__value_.__r.__words[0];
        }
        if (v30->__r_.__value_.__s.__data_[size - 1] == 115)
        {
          std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, (const void **)&v81.__r_.__value_.__l.__data_, (const void **)&v80.__r_.__value_.__l.__data_);
          {
            operator new();
          }
          int v31 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::DaStemFilter::ENDINGS_FIRST_STEP_SHORTEN(void)::ENDINGS_FIRST_STEP_SHORTEN_);
          morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&__p, *v31, v31[1]);
          std::basic_string<char16_t>::assign(&v81, &__p, 0, v8);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v32 = __p.__r_.__value_.__l.__size_;
          }
          uint64_t v28 = (uint64_t)std::basic_string<char16_t>::assign(&v80, &__p, v8, v32);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
      }
    }
    BOOL v33 = (unsigned __int16 ***)morphun::analysis::stemmer::DaStemFilter::ENDINGS_SECOND_STEP((morphun::analysis::stemmer::DaStemFilter *)v28);
    morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&v80, *v33, v33[1]);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__dst, (const void **)&v81.__r_.__value_.__l.__data_, (const void **)&v80.__r_.__value_.__l.__data_);
    std::basic_string<char16_t>::size_type v34 = __dst.__r_.__value_.__l.__size_;
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v34 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    if (v34 >= 4)
    {
      uint64_t v36 = 0;
      p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_dst = &__dst;
      }
      uint64_t v38 = (uint64_t)p_dst + 2 * v34 - 8;
      do
      {
        int v39 = *(unsigned __int16 *)(v38 + v36 * 2);
        int v40 = (unsigned __int16)aIgst[v36];
        BOOL v35 = v40 == v39;
      }
      while (v40 == v39 && v36++ != 3);
    }
    else
    {
      BOOL v35 = 0;
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__dst.__r_.__value_.__l.__data_);
      if (!v35) {
        goto LABEL_66;
      }
    }
    else if (!v35)
    {
      goto LABEL_66;
    }
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__dst, (const void **)&v81.__r_.__value_.__l.__data_, (const void **)&v80.__r_.__value_.__l.__data_);
    std::basic_string<char16_t>::size_type v43 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v43 = __dst.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::resize(&__dst, v43 - 2, 0);
    std::basic_string<char16_t>::assign(&v81, &__dst, 0, v8);
    std::basic_string<char16_t>::size_type v44 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v44 = __dst.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::assign(&v80, &__dst, v8, v44 - v8);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
LABEL_66:
    {
      operator new();
    }
    int v45 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::DaStemFilter::ENDINGS_THIRD_STEP_REMOVE(void)::ENDINGS_THIRD_STEP_REMOVE_);
    long long v46 = (morphun::analysis::stemmer::DaStemFilter *)morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v80, *v45, v45[1]);
    uint64_t v47 = (unsigned __int16 ***)morphun::analysis::stemmer::DaStemFilter::ENDINGS_SECOND_STEP(v46);
    morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&v80, *v47, v47[1]);
    std::basic_string<char16_t>::size_type v48 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
    if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v48 = v80.__r_.__value_.__l.__size_;
    }
    if (v48 >= 4)
    {
      uint64_t v49 = 0;
      uint64_t v50 = &v80;
      if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v50 = (std::basic_string<char16_t> *)v80.__r_.__value_.__r.__words[0];
      }
      uint64_t v51 = (uint64_t)v50 + 2 * v48 - 8;
      do
      {
        int v52 = *(unsigned __int16 *)(v51 + v49);
        int v53 = *(unsigned __int16 *)&aL_1[v49];
        BOOL v54 = v53 != v52 || v49 == 6;
        v49 += 2;
      }
      while (!v54);
      if (v53 == v52) {
        std::basic_string<char16_t>::resize(&v80, v48 - 1, 0);
      }
    }
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>(a2, (const void **)&v81.__r_.__value_.__l.__data_, (const void **)&v80.__r_.__value_.__l.__data_);
    if (*(char *)(a2 + 23) < 0)
    {
      unint64_t v55 = *(void *)(a2 + 8);
      if (v55 <= 3) {
        goto LABEL_96;
      }
    }
    else
    {
      LODWORD(v55) = *(unsigned __int8 *)(a2 + 23);
      if (v55 < 4) {
        goto LABEL_96;
      }
    }
    if ((morphun::analysis::stemmer::NordicStemFilter::isVowel((morphun::dictionary::PhraseProperties *)(unsigned __int16)(v55 - 1)) & 1) == 0)
    {
      int v56 = *(char *)(a2 + 23);
      uint64_t v57 = *(void *)(a2 + 8);
      if (v56 >= 0) {
        uint64_t v58 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v58 = *(void *)(a2 + 8);
      }
      if (v56 >= 0) {
        unint64_t v59 = (const UChar *)a2;
      }
      else {
        unint64_t v59 = *(const UChar **)a2;
      }
      int v60 = v59[v58 - 1];
      uint64_t v61 = v58 - 2;
      if ((v56 & 0x80000000) == 0)
      {
        uint64_t v57 = *(unsigned __int8 *)(a2 + 23);
        if (v60 != *(unsigned __int16 *)(a2 + 2 * v61)) {
          goto LABEL_96;
        }
        goto LABEL_95;
      }
      if (v60 == *(unsigned __int16 *)(*(void *)a2 + 2 * v61)) {
LABEL_95:
      }
        std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a2, v57 - 1, 0);
    }
LABEL_96:
    if ((v15 & 1) == 0)
    {
      int v62 = *(char *)(a1 + 23);
      if (v62 >= 0) {
        uint64_t v63 = a1;
      }
      else {
        uint64_t v63 = *(void *)a1;
      }
      if (v62 >= 0) {
        uint64_t v64 = *(unsigned __int8 *)(a1 + 23);
      }
      else {
        uint64_t v64 = *(void *)(a1 + 8);
      }
      int isAllUpperCase = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllUpperCase(v63, v64);
      if (isAllUpperCase)
      {
        int32_t v66 = *(unsigned __int8 *)(a2 + 23);
        long long v67 = *(const UChar **)a2;
        uint64_t v68 = *(void *)(a2 + 8);
        uint64_t v69 = morphun::util::LocaleUtils::DANISH(isAllUpperCase);
        if ((v66 & 0x80u) == 0) {
          std::basic_string<char16_t>::size_type v70 = (const UChar *)a2;
        }
        else {
          std::basic_string<char16_t>::size_type v70 = v67;
        }
        if ((v66 & 0x80u) == 0) {
          int32_t v71 = v66;
        }
        else {
          int32_t v71 = v68;
        }
        morphun::util::StringViewUtils::uppercase((uint64_t)&__str, v70, v71, v69);
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a2, &__str);
      }
      else
      {
        unint64_t v72 = *(unsigned __int8 *)(a2 + 23);
        uint64_t v73 = *(UChar **)a2;
        unint64_t v74 = *(void *)(a2 + 8);
        uint64_t v75 = morphun::util::LocaleUtils::DANISH(isAllUpperCase);
        if ((v72 & 0x80u) == 0) {
          int v76 = (UChar *)a2;
        }
        else {
          int v76 = v73;
        }
        if ((v72 & 0x80u) == 0) {
          unint64_t v77 = v72;
        }
        else {
          unint64_t v77 = v74;
        }
        morphun::util::StringViewUtils::capitalizeFirst(v76, v77, v75, (uint64_t)&__dst);
        if (*(char *)(a2 + 23) < 0) {
          operator delete(*(void **)a2);
        }
        *(std::basic_string<char16_t> *)a2 = __dst;
      }
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v80.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v81.__r_.__value_.__l.__data_);
    }
    return;
  }
  std::basic_string<char16_t>::size_type v7 = *(void *)(a1 + 8);
  if (R1Start < (int)v7) {
    goto LABEL_5;
  }
  uint64_t v42 = *(const std::basic_string<char16_t>::value_type **)a1;

  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a2, v42, v7);
}

void sub_1D2CBC728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  MEMORY[0x1D942B8B0](v38, 0x20C40960023A9);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::DaStemFilter::ENDINGS_SECOND_STEP(morphun::analysis::stemmer::DaStemFilter *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::DaStemFilter::ENDINGS_SECOND_STEP(void)::ENDINGS_SECOND_STEP_);
}

void sub_1D2CBC934(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x20C40960023A9);
  _Unwind_Resume(a1);
}

void sub_1D2CBC9C4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::DaStemFilter::~DaStemFilter(morphun::analysis::stemmer::DaStemFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07BD8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07BD8);
}

uint64_t matmwt_getGrammemes(uint64_t a1)
{
  uint64_t v1 = npc<morphun::analysis::tokenizer::MorphologicalWordToken const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 56))(v1);
}

uint64_t npc<morphun::analysis::tokenizer::MorphologicalWordToken const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CBCAF8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

CFArrayRef matmwt_createLemmaMappings(uint64_t a1)
{
  uint64_t v1 = npc<morphun::analysis::tokenizer::MorphologicalWordToken const>(a1);
  uint64_t v2 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)v1 + 64))(v1);
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  if (v4 == *v2)
  {
    std::basic_string<char16_t>::size_type v7 = 0;
  }
  else
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *v2) >> 4);
    if (v5 >> 61) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    int v6 = (const void **)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v5);
    uint64_t v3 = *v2;
    uint64_t v4 = v2[1];
    std::basic_string<char16_t>::size_type v7 = v6;
  }
  if (v3 != v4) {
    operator new();
  }
  CFArrayRef v8 = CFArrayCreate(0, v7, 0, &matmwt_createLemmaMappings::callbacks);
  if (v7) {
    operator delete(v7);
  }
  return v8;
}

void sub_1D2CBCD24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception *a10)
{
  if (a2 == 1)
  {
    uint64_t v10 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v10, a10, v11);
    __cxa_end_catch();
    JUMPOUT(0x1D2CBCCECLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t matmwt_lemmaMappings_release(const __CFAllocator *a1, const void *a2)
{
  if (a2) {
    return (*(uint64_t (**)(const void *))(*(void *)a2 + 16))(a2);
  }
  return result;
}

void *matmwt_getMorphologicalWordToken(const void *a1)
{
  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (!result)
  {
    uint64_t v3 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Couldn't cast MToken* to MorphologicalWordToken*");
    morphun::exception::ClassCastException::ClassCastException((uint64_t)v3, &__dst);
  }
  return result;
}

void sub_1D2CBCEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0) {
      goto LABEL_6;
    }
  }
  else if (!v17)
  {
LABEL_6:
    if (a2 == 1)
    {
      int32_t v20 = (const void **)__cxa_begin_catch(exception_object);
      morphun::util::CFUtils::convert(v20, v15, v21);
      __cxa_end_catch();
      JUMPOUT(0x1D2CBCE40);
    }
    _Unwind_Resume(exception_object);
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

void morphun::analysis::tokenattributes::LemmaMapping::~LemmaMapping(void **this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::analysis::tokenattributes::LemmaMapping::~LemmaMapping(void **this, void **a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v2 - 5)) = a2[1];
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

std::basic_string<char16_t> *morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping(std::basic_string<char16_t> *a1, std::basic_string<char16_t>::size_type *a2, std::basic_string<char16_t>::size_type a3, std::basic_string<char16_t>::size_type a4, long long *a5)
{
  std::basic_string<char16_t>::size_type v6 = *a2;
  a1->__r_.__value_.__r.__words[0] = *a2;
  *(std::basic_string<char16_t>::size_type *)((char *)a1->__r_.__value_.__r.__words + *(void *)(v6 - 40)) = a2[1];
  a1->__r_.__value_.__l.__size_ = a3;
  a1->__r_.__value_.__r.__words[2] = a4;
  std::basic_string<char16_t>::size_type v7 = a1 + 1;
  if (*((char *)a5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v7, *(const std::basic_string<char16_t>::value_type **)a5, *((void *)a5 + 1));
  }
  else
  {
    long long v8 = *a5;
    a1[1].__r_.__value_.__r.__words[2] = *((void *)a5 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

std::basic_string<char16_t> *morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping(std::basic_string<char16_t> *a1, std::basic_string<char16_t>::size_type a2, std::basic_string<char16_t>::size_type a3, long long *a4)
{
  a1->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A0F180;
  a1->__r_.__value_.__l.__size_ = a2;
  a1->__r_.__value_.__r.__words[2] = a3;
  unint64_t v5 = a1 + 1;
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v5, *(const std::basic_string<char16_t>::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void virtual thunk to'morphun::analysis::tokenattributes::LemmaMapping::~LemmaMapping(morphun::analysis::tokenattributes::LemmaMapping *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::analysis::tokenattributes::LemmaMapping::getSurfaceFormGrammemes(morphun::analysis::tokenattributes::LemmaMapping *this)
{
  return *((void *)this + 1);
}

uint64_t morphun::analysis::tokenattributes::LemmaMapping::getLemmaGrammemes(morphun::analysis::tokenattributes::LemmaMapping *this)
{
  return *((void *)this + 2);
}

uint64_t morphun::analysis::tokenattributes::LemmaMapping::getLemma(morphun::analysis::tokenattributes::LemmaMapping *this)
{
  return (uint64_t)this + 24;
}

BOOL morphun::analysis::tokenattributes::LemmaMapping::operator==(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8) || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int v2 = *(char *)(a1 + 47);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v2 >= 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 47);
  }
  uint64_t v4 = *(unsigned __int8 *)(a2 + 47);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 32);
  }
  if (v3 != v4) {
    return 0;
  }
  if (!v3) {
    return 1;
  }
  if (v5 >= 0) {
    long long v6 = (unsigned __int16 *)(a2 + 24);
  }
  else {
    long long v6 = *(unsigned __int16 **)(a2 + 24);
  }
  if (v2 >= 0) {
    std::basic_string<char16_t>::size_type v7 = (unsigned __int16 *)(a1 + 24);
  }
  else {
    std::basic_string<char16_t>::size_type v7 = *(unsigned __int16 **)(a1 + 24);
  }
  uint64_t v8 = v3 - 1;
  do
  {
    int v10 = *v7++;
    int v9 = v10;
    int v12 = *v6++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    BOOL result = v11 == v9;
  }
  while (v11 == v9 && v14);
  return result;
}

BOOL morphun::analysis::tokenattributes::LemmaMapping::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::analysis::tokenattributes::LemmaMapping::operator==(a1, a2);
}

uint64_t morphun::analysis::tokenattributes::LemmaMapping::hashCode(morphun::analysis::tokenattributes::LemmaMapping *this)
{
  uint64_t v3 = (char *)*((void *)this + 3);
  uint64_t v1 = (char *)this + 24;
  int v2 = v3;
  int v4 = *((_DWORD *)v1 - 2) + *((_DWORD *)v1 - 4);
  uint64_t v5 = *((void *)v1 + 1);
  if (v1[23] >= 0)
  {
    uint64_t v6 = v1[23];
  }
  else
  {
    uint64_t v1 = v2;
    uint64_t v6 = v5;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t *)v1, 2 * v6)
       - v4
       + 32 * v4;
}

uint64_t morphun::util::LocaleUtils::ARABIC(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ARABIC(void)::ARABIC_);
}

void sub_1D2CBD45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::util::ULocale>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CBD52C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SAUDI_ARABIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SAUDI_ARABIA(void)::SAUDI_ARABIA_);
}

void sub_1D2CBD648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::UNITED_ARAB_EMIRATES(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::UNITED_ARAB_EMIRATES(void)::UNITED_ARAB_EMIRATES_);
}

void sub_1D2CBD7D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::BULGARIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::BULGARIAN(void)::BULGARIAN_);
}

void sub_1D2CBD960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::BULGARIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::BULGARIA(void)::BULGARIA_);
}

void sub_1D2CBDAE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CATALAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CATALAN(void)::CATALAN_);
}

void sub_1D2CBDC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SPAIN_CATALAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SPAIN_CATALAN(void)::SPAIN_CATALAN_);
}

void sub_1D2CBDDF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CZECH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CZECH(void)::CZECH_);
}

void sub_1D2CBDF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CZECHIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CZECHIA(void)::CZECH_REPUBLIC_);
}

void sub_1D2CBE108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::DANISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::DANISH(void)::DANISH_);
}

void sub_1D2CBE290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::DENMARK(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::DENMARK(void)::DENMARK_);
}

void sub_1D2CBE418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::GERMAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::GERMAN(void)::GERMAN_);
}

void sub_1D2CBE5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::GERMANY(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::GERMANY(void)::GERMANY_);
}

void sub_1D2CBE728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SWITZERLAND_GERMAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SWITZERLAND_GERMAN(void)::SWITZERLAND_GERMAN_);
}

void sub_1D2CBE8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::AUSTRIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::AUSTRIA(void)::AUSTRIA_);
}

void sub_1D2CBEA48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::GREEK(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::GREEK(void)::GREEK_);
}

void sub_1D2CBEBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::GREECE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::GREECE(void)::GREECE_);
}

void sub_1D2CBED58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ENGLISH(void)::ENGLISH_);
}

void sub_1D2CBEEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::US(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::US(void)::US_);
}

void sub_1D2CBF068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::AUSTRALIA_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::AUSTRALIA_ENGLISH(void)::AUSTRALIA_ENGLISH_);
}

void sub_1D2CBF1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CANADIAN_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CANADIAN_ENGLISH(void)::CANADIAN_ENGLISH_);
}

void sub_1D2CBF388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SINGAPOREAN_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SINGAPOREAN_ENGLISH(void)::SINGAPOREAN_ENGLISH_);
}

void sub_1D2CBF518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::GREAT_BRITAIN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::GREAT_BRITAIN(void)::GREAT_BRITAIN_);
}

void sub_1D2CBF6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::NEW_ZEALAND_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::NEW_ZEALAND_ENGLISH(void)::NEW_ZEALAND_ENGLISH_);
}

void sub_1D2CBF838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::INDIAN_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::INDIAN_ENGLISH(void)::INDIAN_ENGLISH_);
}

void sub_1D2CBF9C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SOUTH_AFRICAN_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SOUTH_AFRICAN_ENGLISH(void)::SOUTH_AFRICAN_ENGLISH_);
}

void sub_1D2CBFB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::IRISH_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::IRISH_ENGLISH(void)::IRISH_ENGLISH_);
}

void sub_1D2CBFCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::FILIPINO_ENGLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::FILIPINO_ENGLISH(void)::FILIPINO_ENGLISH_);
}

void sub_1D2CBFE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SPANISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SPANISH(void)::SPANISH_);
}

void sub_1D2CC0000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SPAIN_SPANISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SPAIN_SPANISH(void)::SPAIN_SPANISH_);
}

void sub_1D2CC0188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::MEXICO_SPANISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::MEXICO_SPANISH(void)::MEXICO_SPANISH_);
}

void sub_1D2CC0318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::US_SPANISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::US_SPANISH(void)::US_SPANISH_);
}

void sub_1D2CC04A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CHILEAN_SPANISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CHILEAN_SPANISH(void)::CHILEAN_SPANISH_);
}

void sub_1D2CC0638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ESTONIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ESTONIAN(void)::ESTONIAN_);
}

void sub_1D2CC07C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ESTONIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ESTONIA(void)::ESTONIA_);
}

void sub_1D2CC0948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::FINNISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::FINNISH(void)::FINNISH_);
}

void sub_1D2CC0AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::FINLAND(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::FINLAND(void)::FINLAND_);
}

void sub_1D2CC0C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::FRENCH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::FRENCH(void)::FRENCH_);
}

void sub_1D2CC0DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::FRANCE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::FRANCE(void)::FRANCE_);
}

void sub_1D2CC0F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::BELGIUM_FRENCH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::BELGIUM_FRENCH(void)::BELGIUM_FRENCH_);
}

void sub_1D2CC10F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SWITZERLAND_FRENCH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SWITZERLAND_FRENCH(void)::SWITZERLAND_FRENCH_);
}

void sub_1D2CC1288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CANADIAN_FRENCH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CANADIAN_FRENCH(void)::CANADIAN_FRENCH_);
}

void sub_1D2CC1418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::HEBREW(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::HEBREW(void)::HEBREW_);
}

void sub_1D2CC15A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ISRAEL(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ISRAEL(void)::ISRAEL_);
}

void sub_1D2CC1728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::HINDI(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::HINDI(void)::HINDI_);
}

void sub_1D2CC18B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::INDIA_HINDI(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::INDIA_HINDI(void)::INDIA_HINDI_);
}

void sub_1D2CC1A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CROATIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CROATIAN(void)::CROATIAN_);
}

void sub_1D2CC1BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CROATIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CROATIA(void)::CROATIA_);
}

void sub_1D2CC1D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::HUNGARIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::HUNGARIAN(void)::HUNGARIAN_);
}

void sub_1D2CC1ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::HUNGARY(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::HUNGARY(void)::HUNGARY_);
}

void sub_1D2CC2058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::INDONESIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::INDONESIAN(void)::INDONESIAN_);
}

void sub_1D2CC21E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::INDONESIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::INDONESIA(void)::INDONESIA_);
}

void sub_1D2CC2368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ICELANDIC(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ICELANDIC(void)::ICELANDIC_);
}

void sub_1D2CC24F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ICELAND(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ICELAND(void)::ICELAND_);
}

void sub_1D2CC2678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ITALIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ITALIAN(void)::ITALIAN_);
}

void sub_1D2CC2800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ITALY(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ITALY(void)::ITALY_);
}

void sub_1D2CC2988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SWITZERLAND_ITALIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SWITZERLAND_ITALIAN(void)::SWITZERLAND_ITALIAN_);
}

void sub_1D2CC2B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::JAPANESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::JAPANESE(void)::JAPANESE_);
}

void sub_1D2CC2CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::JAPAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::JAPAN(void)::JAPAN_);
}

void sub_1D2CC2E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::KAZAKH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::KAZAKH(void)::KAZAKH_);
}

void sub_1D2CC2FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::KAZAKHSTAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::KAZAKHSTAN(void)::KAZAKHSTAN_);
}

void sub_1D2CC3138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::KOREAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::KOREAN(void)::KOREAN_);
}

void sub_1D2CC32C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::KOREA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::KOREA(void)::KOREA_);
}

void sub_1D2CC3448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::LITHUANIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::LITHUANIAN(void)::LITHUANIAN_);
}

void sub_1D2CC35D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::LITHUANIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::LITHUANIA(void)::LITHUANIA_);
}

void sub_1D2CC3758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::MALAY(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::MALAY(void)::MALAY_);
}

void sub_1D2CC38E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::MALAYSIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::MALAYSIA(void)::MALAYSIA_);
}

void sub_1D2CC3A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::NORWEGIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::NORWEGIAN(void)::NORWEGIAN_);
}

void sub_1D2CC3BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::NORWAY(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::NORWAY(void)::NORWAY_);
}

void sub_1D2CC3D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::DUTCH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::DUTCH(void)::DUTCH_);
}

void sub_1D2CC3F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::NETHERLANDS(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::NETHERLANDS(void)::NETHERLANDS_);
}

void sub_1D2CC4088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::BELGIUM_DUTCH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::BELGIUM_DUTCH(void)::BELGIUM_DUTCH_);
}

void sub_1D2CC4218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::POLISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::POLISH(void)::POLISH_);
}

void sub_1D2CC43A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::POLAND(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::POLAND(void)::POLAND_);
}

void sub_1D2CC4528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::PORTUGUESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::PORTUGUESE(void)::PORTUGUESE_);
}

void sub_1D2CC46B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::PORTUGAL(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::PORTUGAL(void)::PORTUGAL_);
}

void sub_1D2CC4838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::BRAZIL(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::BRAZIL(void)::BRAZIL_);
}

void sub_1D2CC49C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ROMANIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ROMANIAN(void)::ROMANIAN_);
}

void sub_1D2CC4B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ROMANIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ROMANIA(void)::ROMANIA_);
}

void sub_1D2CC4CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::RUSSIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::RUSSIAN(void)::RUSSIAN_);
}

void sub_1D2CC4E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::RUSSIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::RUSSIA(void)::RUSSIA_);
}

void sub_1D2CC4FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SLOVAK(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SLOVAK(void)::SLOVAK_);
}

void sub_1D2CC5170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SLOVAKIA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SLOVAKIA(void)::SLOVAKIA_);
}

void sub_1D2CC52F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SWEDISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SWEDISH(void)::SWEDISH_);
}

void sub_1D2CC5480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SWEDEN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SWEDEN(void)::SWEDEN_);
}

void sub_1D2CC5608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::THAI(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::THAI(void)::THAI_);
}

void sub_1D2CC5790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::THAILAND(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::THAILAND(void)::THAILAND_);
}

void sub_1D2CC5918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::TURKISH(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::TURKISH(void)::TURKISH_);
}

void sub_1D2CC5AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::TURKEY(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::TURKEY(void)::TURKEY_);
}

void sub_1D2CC5C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::UKRAINIAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::UKRAINIAN(void)::UKRAINIAN_);
}

void sub_1D2CC5DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::UKRAINE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::UKRAINE(void)::UKRAINE_);
}

void sub_1D2CC5F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::VIETNAMESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::VIETNAMESE(void)::VIETNAMESE_);
}

void sub_1D2CC60C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::VIETNAM(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::VIETNAM(void)::VIETNAM_);
}

void sub_1D2CC6248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SHANGHAINESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SHANGHAINESE(void)::SHANGHAINESE_);
}

void sub_1D2CC63D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CHINA_SHANGHAINESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CHINA_SHANGHAINESE(void)::CHINA_SHANGHAINESE_);
}

void sub_1D2CC6558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CANTONESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CANTONESE(void)::CANTONESE_);
}

void sub_1D2CC66E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CHINA_CANTONESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CHINA_CANTONESE(void)::CHINA_CANTONESE_);
}

void sub_1D2CC6868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::HONGKONG_CANTONESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::HONGKONG_CANTONESE(void)::HONGKONG_CANTONESE_);
}

void sub_1D2CC69F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CHINESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CHINESE(void)::CHINESE_);
}

void sub_1D2CC6B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::SIMPLIFIED_CHINESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::SIMPLIFIED_CHINESE(void)::SIMPLIFIED_CHINESE_);
}

void sub_1D2CC6D08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::TRADITIONAL_CHINESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::TRADITIONAL_CHINESE(void)::TRADITIONAL_CHINESE_);
}

void sub_1D2CC6E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::HONGKONG_CHINESE(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::HONGKONG_CHINESE(void)::HONGKONG_CHINESE_);
}

void sub_1D2CC7028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::CHINA(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::CHINA(void)::CHINA_);
}

void sub_1D2CC71B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::TAIWAN(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::TAIWAN(void)::TAIWAN_);
}

void sub_1D2CC7348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::LocaleUtils::ROOT(morphun::util::LocaleUtils *this)
{
  {
    operator new();
  }
  return npc<morphun::util::ULocale>(morphun::util::LocaleUtils::ROOT(void)::ROOT_);
}

void sub_1D2CC74D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  MEMORY[0x1D942B8B0](v26, 0x1093C404284DF82);
  _Unwind_Resume(a1);
}

void morphun::util::createSupportedLocaleMapToBase()
{
}

void sub_1D2CC771C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char *a26,char a27)
{
  a26 = &a16;
  std::vector<morphun::util::ULocale>::__destroy_vector::operator()[abi:ne180100]((void ***)&a26);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void *morphun::util::LocaleUtils::toLocales@<X0>(void *result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  int v3 = *((char *)result + 23);
  int v4 = (void *)*result;
  BOOL v5 = v3 < 0;
  if (v3 >= 0) {
    int v4 = result;
  }
  uint64_t v6 = *((unsigned __int8 *)result + 23);
  if (v5) {
    uint64_t v6 = result[1];
  }
  uint64_t v36 = 0;
  unint64_t v37 = 0;
  uint64_t v38 = L",";
  uint64_t v39 = 1;
  int v40 = v4;
  uint64_t v41 = v6;
  int v42 = v6;
  int v43 = 0;
  if ((int)v6 >= 1) {
    BOOL result = morphun::util::DelimitedStringIterator::getNext((UChar *)&v36);
  }
  while (v43 < v42 || v37 != 0)
  {
    uint64_t v8 = morphun::util::StringViewUtils::trim(v36, v37);
    unint64_t v10 = v9;
    if (v9)
    {
      if (v9 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      int v11 = (const void *)v8;
      if (v9 >= 0xB)
      {
        uint64_t v13 = (v9 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v9 | 3) != 0xB) {
          uint64_t v13 = v9 | 3;
        }
        int v12 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v13 + 1);
        __dst[1] = (void *)v10;
        unint64_t v34 = v14 | 0x8000000000000000;
        __dst[0] = v12;
      }
      else
      {
        HIBYTE(v34) = v9;
        int v12 = __dst;
      }
      memmove(v12, v11, 2 * v10);
      *((_WORD *)v12 + v10) = 0;
      morphun::util::LocaleUtils::toLocale((uint64_t)__dst, (morphun::util::ULocale *)v35);
      unint64_t v16 = a2[1];
      unint64_t v15 = a2[2];
      if (v16 >= v15)
      {
        uint64_t v18 = (uint64_t)(v16 - *a2) >> 7;
        if ((unint64_t)(v18 + 1) >> 57) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v19 = v15 - *a2;
        uint64_t v20 = v19 >> 6;
        if (v19 >> 6 <= (unint64_t)(v18 + 1)) {
          uint64_t v20 = v18 + 1;
        }
        if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFF80) {
          unint64_t v21 = 0x1FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v20;
        }
        long long v46 = a2 + 2;
        if (v21) {
          unint64_t v21 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::util::ULocale>>(v21);
        }
        else {
          uint64_t v22 = 0;
        }
        unint64_t v44 = v21;
        *(void *)int v45 = v21 + (v18 << 7);
        *(void *)&v45[8] = *(void *)v45;
        *(void *)&v45[16] = v21 + (v22 << 7);
        morphun::util::ULocale::ULocale(*(morphun::util::ULocale **)v45, (const morphun::util::ULocale *)v35);
        uint64_t v23 = *(void *)v45;
        *(void *)&v45[8] += 128;
        uint64_t v25 = *a2;
        uint64_t v24 = a2[1];
        for (uint64_t i = 128; ; i -= 128)
        {
          uint64_t v27 = v23 + i;
          if (v24 + i - 128 == v25) {
            break;
          }
          uint64_t v28 = (const morphun::util::ULocale *)(v24 + i - 256);
          morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v27 - 256), v28);
        }
        uint64_t v29 = a2[2];
        unint64_t v32 = *(void *)&v45[8];
        long long v30 = *(_OWORD *)&v45[8];
        long long v31 = *(_OWORD *)a2;
        *a2 = v27 - 128;
        *(_OWORD *)int v45 = v31;
        *(_OWORD *)(a2 + 1) = v30;
        *(void *)&v45[16] = v29;
        unint64_t v44 = v31;
        std::__split_buffer<morphun::util::ULocale>::~__split_buffer((uint64_t)&v44);
        unint64_t v17 = v32;
      }
      else
      {
        morphun::util::ULocale::ULocale((morphun::util::ULocale *)a2[1], (const morphun::util::ULocale *)v35);
        unint64_t v17 = v16 + 128;
        a2[1] = v16 + 128;
      }
      a2[1] = v17;
      if (SHIBYTE(v34) < 0) {
        operator delete(__dst[0]);
      }
    }
    BOOL result = morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v36);
  }
  return result;
}

void sub_1D2CC79F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17)
{
}

void morphun::util::LocaleUtils::toLocale(uint64_t a1@<X0>, morphun::util::ULocale *a2@<X8>)
{
  uint64_t v2 = a1;
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4)
    {
      memset(&v12, 0, sizeof(v12));
      uint64_t v2 = *(void *)a1;
      goto LABEL_6;
    }
  }
  else
  {
    LODWORD(v4) = *(unsigned __int8 *)(a1 + 23);
    if (*(unsigned char *)(a1 + 23))
    {
      memset(&v12, 0, sizeof(v12));
LABEL_6:
      morphun::util::StringViewUtils::convert(&v12, v2, v4);
      v10[0] = 0;
      v10[1] = 0;
      uint64_t v11 = 0;
      v8[0] = 0;
      v8[1] = 0;
      uint64_t v9 = 0;
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v7 = 0;
      morphun::util::ULocale::ULocale((uint64_t)a2, (uint64_t)&v12, (uint64_t)v10, (uint64_t)v8, (uint64_t)__p);
      if (SHIBYTE(v7) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v9) < 0) {
        operator delete(v8[0]);
      }
      if (SHIBYTE(v11) < 0) {
        operator delete(v10[0]);
      }
      if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v12.__r_.__value_.__l.__data_);
      }
      return;
    }
  }
  BOOL v5 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)a1);

  morphun::util::ULocale::ULocale(a2, v5);
}

void sub_1D2CC7BAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v26 - 17) < 0) {
    operator delete(*(void **)(v26 - 40));
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__split_buffer<morphun::util::ULocale>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(i - 128);
    *(void *)(a1 + 16) = i - 128;
    (*(void (**)(void))(v4 + 8))();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t morphun::util::LocaleUtils::getSupportedLocaleMap@<X0>(morphun::util::LocaleUtils *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(this);

  return std::map<std::string,std::vector<morphun::util::ULocale>>::map[abi:ne180100](a2, v3);
}

void morphun::util::LocaleUtils::createValidRegionAwareLanguage(morphun::util::LocaleUtils *this@<X0>, const morphun::util::ULocale *a2@<X1>, morphun::util::ULocale *a3@<X8>)
{
  uint64_t v7 = *((unsigned __int8 *)a2 + 127);
  size_t v8 = *((void *)a2 + 14);
  if ((v7 & 0x80u) == 0) {
    uint64_t v9 = *((unsigned __int8 *)a2 + 127);
  }
  else {
    uint64_t v9 = *((void *)a2 + 14);
  }
  uint64_t v10 = *((unsigned __int8 *)this + 127);
  int v11 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *((void *)this + 14);
  }
  if (v9 == v10)
  {
    std::string v12 = (const void **)((char *)a2 + 104);
    if (v11 >= 0) {
      uint64_t v13 = (unsigned __int8 *)this + 104;
    }
    else {
      uint64_t v13 = (unsigned __int8 *)*((void *)this + 13);
    }
    if ((v7 & 0x80) == 0)
    {
      if (v7)
      {
        while (*(unsigned __int8 *)v12 == *v13)
        {
          std::string v12 = (const void **)((char *)v12 + 1);
          ++v13;
          if (!--v7) {
            goto LABEL_40;
          }
        }
        goto LABEL_16;
      }
LABEL_40:
      morphun::util::ULocale::ULocale(a3, this);
      return;
    }
    if (!memcmp(*v12, v13, v8)) {
      goto LABEL_40;
    }
  }
LABEL_16:
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v27 = 0;
  uint64_t v14 = morphun::util::ULocale::ULocale((uint64_t)v28, (uint64_t)this + 8, (uint64_t)this + 32, (uint64_t)a2 + 56, (uint64_t)__p);
  if (SHIBYTE(v27) < 0) {
    operator delete(__p[0]);
  }
  if ((v30 & 0x80u) == 0) {
    unint64_t v15 = v29;
  }
  else {
    unint64_t v15 = (void *)v29[0];
  }
  if ((v30 & 0x80u) == 0) {
    size_t v16 = v30;
  }
  else {
    size_t v16 = v29[1];
  }
  int v17 = MEMORY[0x1D942BF30](v14);
  if (v17 < 0)
  {
LABEL_38:
    morphun::util::ULocale::ULocale(a3, this);
    goto LABEL_39;
  }
  int v18 = 0;
  while (1)
  {
    int v19 = v17 + v18;
    if (v17 + v18 < 0 != __OFADD__(v17, v18)) {
      ++v19;
    }
    int v20 = v19 >> 1;
    unint64_t v21 = (const char *)MEMORY[0x1D942BF60]((v19 >> 1));
    size_t v22 = strlen(v21);
    size_t v23 = v22;
    if (v22 >= v16) {
      size_t v24 = v16;
    }
    else {
      size_t v24 = v22;
    }
    int v25 = memcmp(v15, v21, v24);
    if (v25)
    {
      if ((v25 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_33;
    }
    if (v16 == v23) {
      break;
    }
    if (v16 >= v23)
    {
LABEL_36:
      int v18 = v20 + 1;
      goto LABEL_37;
    }
LABEL_33:
    int v17 = v20 - 1;
LABEL_37:
    if (v18 > v17) {
      goto LABEL_38;
    }
  }
  morphun::util::ULocale::ULocale(a3, (const morphun::util::ULocale *)v28);
LABEL_39:
}

void sub_1D2CC7E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
}

void morphun::util::LocaleUtils::getFallbackPair(morphun::util::LocaleUtils *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = morphun::util::FALLBACK_PAIR_LOCALES(this);
  uint64_t v6 = npc<std::map<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>> const>(v5);
  uint64_t v7 = std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v6, (uint64_t)this);
  uint64_t v8 = morphun::util::FALLBACK_PAIR_LOCALES((morphun::util *)v7);
  if ((void *)(npc<std::map<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>> const>(v8)
                + 8) == v7)
  {
    morphun::util::ULocale::getFallback(this, (uint64_t)v9);
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)a2, this);
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a2 + 128), (const morphun::util::ULocale *)v9);
  }
  else
  {
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)a2, (const morphun::util::ULocale *)(v7 + 20));
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a2 + 128), (const morphun::util::ULocale *)(v7 + 36));
  }
}

void sub_1D2CC7F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

uint64_t morphun::util::FALLBACK_PAIR_LOCALES(morphun::util *this)
{
  {
    if (v2) {
      morphun::util::initFALLBACK_PAIR_LOCALES(v2);
    }
  }
  return morphun::util::FALLBACK_PAIR_LOCALES(void)::FALLBACK_PAIR_LOCALES_;
}

void sub_1D2CC8020(_Unwind_Exception *a1)
{
}

uint64_t npc<std::map<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>> const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CC8088(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::util::initFALLBACK_PAIR_LOCALES(morphun::util *this)
{
}

void sub_1D2CC833C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v15 - 176));
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
  }
  if (__p)
  {
    operator delete(__p);
  }
}

BOOL morphun::util::LocaleUtils::areLanguageScriptCompatible(morphun::util::LocaleUtils *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (const void **)((char *)a2 + 104);
  uint64_t v6 = *((unsigned __int8 *)a2 + 127);
  size_t v7 = *((void *)a2 + 14);
  if ((v6 & 0x80u) == 0) {
    uint64_t v8 = *((unsigned __int8 *)a2 + 127);
  }
  else {
    uint64_t v8 = *((void *)a2 + 14);
  }
  uint64_t v9 = *((unsigned __int8 *)this + 127);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *((void *)this + 14);
  }
  if (v8 != v9) {
    goto LABEL_17;
  }
  if (v10 >= 0) {
    int v11 = (unsigned __int8 *)this + 104;
  }
  else {
    int v11 = (unsigned __int8 *)*((void *)this + 13);
  }
  if ((v6 & 0x80) != 0)
  {
    if (memcmp(*v5, v11, v7)) {
      goto LABEL_17;
    }
  }
  else if (v6)
  {
    for (uint64_t i = v5; *(unsigned __int8 *)i == *v11; uint64_t i = (const void **)((char *)i + 1))
    {
      ++v11;
      if (!--v6) {
        return 1;
      }
    }
LABEL_17:
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)&v35, this);
    uint64_t v13 = morphun::util::ULocale::ULocale((morphun::util::ULocale *)&v32, a2);
    uint64_t v14 = morphun::util::FALLBACK_PAIR_LOCALES(v13);
    uint64_t v15 = npc<std::map<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>> const>(v14);
    size_t v16 = (morphun::util *)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v15, (uint64_t)this);
    uint64_t v17 = morphun::util::FALLBACK_PAIR_LOCALES(v16);
    int v18 = (morphun::util *)npc<std::map<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>> const>(v17);
    if ((morphun::util *)((char *)v18 + 8) != v16) {
      int v18 = (morphun::util *)morphun::util::ULocale::operator=((uint64_t)&v35, (uint64_t)v16 + 288);
    }
    uint64_t v19 = morphun::util::FALLBACK_PAIR_LOCALES(v18);
    uint64_t v20 = npc<std::map<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>> const>(v19);
    unint64_t v21 = (morphun::util *)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v20, (uint64_t)a2);
    uint64_t v22 = morphun::util::FALLBACK_PAIR_LOCALES(v21);
    if ((morphun::util *)(npc<std::map<morphun::util::ULocale,std::pair<morphun::util::ULocale,morphun::util::ULocale>> const>(v22)
                         + 8) != v21)
      morphun::util::ULocale::operator=((uint64_t)&v32, (uint64_t)v21 + 288);
    uint64_t v23 = v38;
    if ((v38 & 0x80u) == 0) {
      size_t v24 = v38;
    }
    else {
      size_t v24 = v37;
    }
    uint64_t v25 = v34;
    if ((v34 & 0x80u) != 0) {
      uint64_t v25 = v33[1];
    }
    if (v24 != v25) {
      goto LABEL_40;
    }
    if ((v34 & 0x80u) == 0) {
      uint64_t v26 = (unsigned __int8 *)v33;
    }
    else {
      uint64_t v26 = (unsigned __int8 *)v33[0];
    }
    if ((v38 & 0x80) != 0)
    {
      if (memcmp(v36, v26, v37)) {
        goto LABEL_40;
      }
    }
    else if (v38)
    {
      uint64_t v27 = &v36;
      while (*(unsigned __int8 *)v27 == *v26)
      {
        uint64_t v27 = (const void **)((char *)v27 + 1);
        ++v26;
        if (!--v23) {
          goto LABEL_38;
        }
      }
      goto LABEL_40;
    }
LABEL_38:
    *(void *)&long long v29 = -1;
    *((void *)&v29 + 1) = -1;
    __s1[0] = v29;
    __s1[1] = v29;
    __s2[0] = v29;
    __s2[1] = v29;
    int Code = uscript_getCode();
    if (Code == uscript_getCode())
    {
      BOOL v28 = memcmp(__s1, __s2, 4 * Code) == 0;
LABEL_41:
      return v28;
    }
LABEL_40:
    BOOL v28 = 0;
    goto LABEL_41;
  }
  return 1;
}

void sub_1D2CC87B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27)
{
  __cxa_free_exception(v27);
  _Unwind_Resume(a1);
}

void morphun::grammar::ml::RuGrammemeMapper::toModelIdentifier(morphun::grammar::ml::RuGrammemeMapper *this@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v3 = (char *)this + 16;
  uint64_t v4 = (void *)*((void *)this + 2);
  if (!v4) {
    goto LABEL_34;
  }
  uint64_t v5 = (char *)this + 16;
  uint64_t v6 = (char *)this + 16;
  size_t v7 = (void *)*((void *)this + 2);
  do
  {
    uint64_t v8 = v7[4];
    BOOL v9 = v8 < a2;
    if (v8 >= a2) {
      int v10 = v7;
    }
    else {
      int v10 = v7 + 1;
    }
    if (!v9) {
      uint64_t v6 = (char *)v7;
    }
    size_t v7 = (void *)*v10;
  }
  while (*v10);
  if (v6 == v3 || *((void *)v6 + 4) > a2)
  {
    int64_t v11 = a2 & ~*((void *)this + 5);
    uint64_t v6 = (char *)this + 16;
    std::string v12 = (void *)*((void *)this + 2);
    do
    {
      int64_t v13 = v12[4];
      BOOL v14 = v13 < v11;
      if (v13 >= v11) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = v12 + 1;
      }
      if (!v14) {
        uint64_t v6 = (char *)v12;
      }
      std::string v12 = (void *)*v15;
    }
    while (*v15);
    if (v6 == v3 || v11 < *((void *)v6 + 4))
    {
      int64_t v16 = v11 & ~*((void *)this + 4);
      do
      {
        int64_t v17 = v4[4];
        BOOL v18 = v17 < v16;
        if (v17 >= v16) {
          uint64_t v19 = v4;
        }
        else {
          uint64_t v19 = v4 + 1;
        }
        if (!v18) {
          uint64_t v5 = (char *)v4;
        }
        uint64_t v4 = (void *)*v19;
      }
      while (*v19);
      if (v5 == v3 || (uint64_t v6 = v5, v16 < *((void *)v5 + 4)))
      {
LABEL_34:
        exception = __cxa_allocate_exception(0x38uLL);
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Unknown grammeme form ");
        morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a2, &v26);
        if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t v24 = &v26;
        }
        else {
          size_t v24 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
        }
        if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type size = v26.__r_.__value_.__l.__size_;
        }
        std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v24, size);
        std::basic_string<char16_t> v28 = __dst;
        memset(&__dst, 0, sizeof(__dst));
        morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v28);
      }
    }
  }
  if (v6[63] < 0)
  {
    uint64_t v20 = (const std::string::value_type *)*((void *)v6 + 5);
    std::string::size_type v21 = *((void *)v6 + 6);
    std::string::__init_copy_ctor_external(a3, v20, v21);
  }
  else
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)(v6 + 40);
    a3->__r_.__value_.__r.__words[2] = *((void *)v6 + 7);
  }
}

void sub_1D2CC89F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v26 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v26)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v23);
  goto LABEL_10;
}

void morphun::grammar::ml::RuGrammemeMapper::~RuGrammemeMapper(char **this)
{
  *this = (char *)&unk_1F2A0C3C0;
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(this[2]);

  JUMPOUT(0x1D942B8B0);
}

{
  *this = (char *)&unk_1F2A0C3C0;
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(this[2]);
}

uint64_t *std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long &,char const(&)[7]>(uint64_t *result, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6 = (uint64_t **)result;
  uint64_t v8 = (uint64_t **)(result + 1);
  size_t v7 = (uint64_t *)result[1];
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v7;
        uint64_t v10 = v7[4];
        if (v10 <= a2) {
          break;
        }
        size_t v7 = *v9;
        uint64_t v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }
      if (v10 >= a2) {
        break;
      }
      size_t v7 = v9[1];
      if (!v7)
      {
        uint64_t v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    BOOL v9 = (uint64_t **)(result + 1);
LABEL_9:
    int64_t v11 = (uint64_t *)operator new(0x40uLL);
    v11[4] = a3;
    std::string::basic_string[abi:ne180100]<0>(v11 + 5, a4);
    return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v9, v8, v11);
  }
  return result;
}

void sub_1D2CC8BE8(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<long long,std::string>,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[12]>(uint64_t *result, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6 = (uint64_t **)result;
  uint64_t v8 = (uint64_t **)(result + 1);
  size_t v7 = (uint64_t *)result[1];
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v7;
        uint64_t v10 = v7[4];
        if (v10 <= a2) {
          break;
        }
        size_t v7 = *v9;
        uint64_t v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }
      if (v10 >= a2) {
        break;
      }
      size_t v7 = v9[1];
      if (!v7)
      {
        uint64_t v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    BOOL v9 = (uint64_t **)(result + 1);
LABEL_9:
    int64_t v11 = (uint64_t *)operator new(0x40uLL);
    v11[4] = a3;
    std::string::basic_string[abi:ne180100]<0>(v11 + 5, a4);
    return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v9, v8, v11);
  }
  return result;
}

void sub_1D2CC8CCC(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<long long,std::string>,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[17]>(uint64_t *result, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6 = (uint64_t **)result;
  uint64_t v8 = (uint64_t **)(result + 1);
  size_t v7 = (uint64_t *)result[1];
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v7;
        uint64_t v10 = v7[4];
        if (v10 <= a2) {
          break;
        }
        size_t v7 = *v9;
        uint64_t v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }
      if (v10 >= a2) {
        break;
      }
      size_t v7 = v9[1];
      if (!v7)
      {
        uint64_t v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    BOOL v9 = (uint64_t **)(result + 1);
LABEL_9:
    int64_t v11 = (uint64_t *)operator new(0x40uLL);
    v11[4] = a3;
    std::string::basic_string[abi:ne180100]<0>(v11 + 5, a4);
    return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v9, v8, v11);
  }
  return result;
}

void sub_1D2CC8DB0(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<long long,std::string>,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<long long,std::string>,std::__map_value_compare<long long,std::__value_type<long long,std::string>,std::less<long long>,true>,std::allocator<std::__value_type<long long,std::string>>>::__emplace_unique_key_args<long long,long long,char const(&)[22]>(uint64_t *result, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6 = (uint64_t **)result;
  uint64_t v8 = (uint64_t **)(result + 1);
  size_t v7 = (uint64_t *)result[1];
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v7;
        uint64_t v10 = v7[4];
        if (v10 <= a2) {
          break;
        }
        size_t v7 = *v9;
        uint64_t v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }
      if (v10 >= a2) {
        break;
      }
      size_t v7 = v9[1];
      if (!v7)
      {
        uint64_t v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    BOOL v9 = (uint64_t **)(result + 1);
LABEL_9:
    int64_t v11 = (uint64_t *)operator new(0x40uLL);
    v11[4] = a3;
    std::string::basic_string[abi:ne180100]<0>(v11 + 5, a4);
    return std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v9, v8, v11);
  }
  return result;
}

void sub_1D2CC8E94(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<long long,std::string>,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<long long,std::string>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 63) < 0) {
      operator delete(__p[5]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t **com::apple::siri::tokenizer::data::config_th::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696B840;
  uint64_t v4 = "c";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::KoGrammarSynthesizer_ParticleResolver(morphun::util::LocaleUtils **a1, morphun::util::LocaleUtils *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::KOREA((morphun::util::LocaleUtils *)a1);
  uint64_t Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v4, v5);
  if (Dictionary)
  {
    *a1 = Dictionary;
    a1[1] = a2;
    size_t v7 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::ENGLISH(Dictionary);
    morphun::TokenizerFactory::createTokenizer(v7, v8);
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2CC9160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (*(char *)(v20 + 47) < 0) {
    operator delete(*v21);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::KoGrammarSynthesizer_ParticleResolver(morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *this, const morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *a2)
{
  *(void *)this = *(void *)a2;
  *((void *)this + 1) = *((void *)a2 + 1);
  uint64_t v2 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::ENGLISH(this);
  morphun::TokenizerFactory::createTokenizer(v2, v3);
}

void morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver(morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  if (*((char *)this + 71) < 0) {
    operator delete(*((void **)this + 6));
  }
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
}

void morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::getParticleValue(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(unsigned __int8 *)(a3 + 23);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a3 + 8);
  }
  if (!v4)
  {
    a1->__r_.__value_.__r.__words[0] = 0;
    a1->__r_.__value_.__l.__size_ = 0;
    a1->__r_.__value_.__r.__words[2] = 0;
    return;
  }
  size_t v7 = (morphun::lang::StringFilterUtil *)MEMORY[0x1D942C180](**(void **)(a2 + 8));
  if (v7) {
    goto LABEL_82;
  }
  uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a3 + 8);
  }
  if (!v8
    || ((BOOL v9 = (void *)morphun::lang::StringFilterUtil::HANGUL_SCRIPT(v7), v10 = *(char *)(a3 + 23), v10 >= 0)
      ? (uint64_t v11 = a3)
      : (uint64_t v11 = *(void *)a3),
        v10 >= 0 ? (LODWORD(v12) = *(unsigned __int8 *)(a3 + 23)) : (uint64_t v12 = *(void *)(a3 + 8)),
        uint64_t v13 = morphun::util::StringViewUtils::codePointAt(v11, v12, (int)v12 - 1),
        size_t v7 = (morphun::lang::StringFilterUtil *)MEMORY[0x1D942C150](*v9, v13),
        v7))
  {
LABEL_26:
    if (*(char *)(a3 + 23) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v50, *(const std::basic_string<char16_t>::value_type **)a3, *(void *)(a3 + 8));
    }
    else {
      std::basic_string<char16_t> v50 = *(std::basic_string<char16_t> *)a3;
    }
    goto LABEL_34;
  }
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14 || (uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v14 + 24))(v14, a3)) == 0)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v16 = v15;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 112))(v15);
  if (!v17)
  {
LABEL_25:
    size_t v7 = (morphun::lang::StringFilterUtil *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 16))(v16);
    goto LABEL_26;
  }
  while (1)
  {
    BOOL v18 = (uint64_t *)(v17 + 16);
    if (*(char *)(v17 + 39) < 0) {
      break;
    }
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 39);
    if (*(unsigned char *)(v17 + 39))
    {
      uint64_t v20 = v17 + 16;
      goto LABEL_23;
    }
LABEL_24:
    uint64_t v17 = *(void *)(v17 + 72);
    if (!v17) {
      goto LABEL_25;
    }
  }
  uint64_t v19 = *(void *)(v17 + 24);
  if (!v19) {
    goto LABEL_24;
  }
  uint64_t v20 = *v18;
LABEL_23:
  UChar32 v21 = morphun::util::StringViewUtils::codePointAt(v20, v19, (int)v19 - 1);
  if (!u_isalnum(v21)) {
    goto LABEL_24;
  }
  if (*(char *)(v17 + 39) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v50, *(const std::basic_string<char16_t>::value_type **)(v17 + 16), *(void *)(v17 + 24));
  }
  else
  {
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = *(_OWORD *)v18;
    v50.__r_.__value_.__r.__words[2] = *(void *)(v17 + 32);
  }
  size_t v7 = (morphun::lang::StringFilterUtil *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 16))(v16);
LABEL_34:
  uint64_t v22 = (morphun::lang::StringFilterUtil *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(v7);
  uint64_t v23 = (void *)morphun::lang::StringFilterUtil::LATIN_SCRIPT(v22);
  int v52 = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t isEndsWithUnicodeSets = (morphun::util::LocaleUtils *)morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets((uint64_t)&v50, v22, v23, (uint64_t **)&v52);
  if (isEndsWithUnicodeSets)
  {
    std::basic_string<char16_t> __p = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    int32_t v25 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
    long long v26 = *(_OWORD *)&v50.__r_.__value_.__l.__data_;
    uint64_t v27 = morphun::util::LocaleUtils::KOREAN(isEndsWithUnicodeSets);
    if ((v25 & 0x80u) == 0) {
      std::basic_string<char16_t> v28 = &v50;
    }
    else {
      std::basic_string<char16_t> v28 = (std::basic_string<char16_t> *)v26;
    }
    if ((v25 & 0x80u) == 0) {
      int32_t v29 = v25;
    }
    else {
      int32_t v29 = DWORD2(v26);
    }
    CombinedBinaryuint64_t Type = (morphun::dictionary::PhraseProperties *)morphun::util::StringViewUtils::lowercase((uint64_t)&__p, (const UChar *)v28, v29, v27);
    if (*(unsigned char *)(a2 + 80))
    {
      uint64_t v31 = HIBYTE(v49);
      if (v49 < 0) {
        uint64_t v31 = v48;
      }
      if (v31)
      {
        int v52 = 0;
        uint64_t v53 = 0;
        uint64_t v54 = 0;
        unint64_t v32 = (void *)morphun::dictionary::PhraseProperties::PUNCTUATION(CombinedBinaryType);
        BOOL v33 = v49 >= 0 ? &__p : (void **)__p;
        std::basic_string<char16_t>::size_type v34 = v49 >= 0 ? HIBYTE(v49) : v48;
        morphun::util::UnicodeSetUtils::removeSetFromString((uint64_t)&v52, v32, (uint64_t)v33, v34);
        uint64_t v35 = *(void *)a2;
        uint64_t v36 = v54 >= 0 ? (const UChar *)&v52 : (const UChar *)v52;
        uint64_t v37 = v54 >= 0 ? HIBYTE(v54) : v53;
        uint64_t v38 = *(void *)(a2 + 72);
        v51[0] = 0;
        CombinedBinaryuint64_t Type = (morphun::dictionary::PhraseProperties *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v35, (uint64_t)v51, v36, v37);
        if (CombinedBinaryType && ((unint64_t)v51[0] & v38) == v38)
        {
          char v39 = 1;
        }
        else
        {
          int v43 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(CombinedBinaryType);
          {
            operator new();
          }
          unint64_t v44 = (void *)morphun::grammar::synthesis::KoGrammarSynthesizer::DEFAULT_RIEUL_END(void)::DEFAULT_RIEUL_END_;
          npc<icu4cxx::UnicodeSet const>(morphun::grammar::synthesis::KoGrammarSynthesizer::DEFAULT_RIEUL_END(void)::DEFAULT_RIEUL_END_);
          memset(v51, 0, sizeof(v51));
          CombinedBinaryuint64_t Type = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets((uint64_t)&__p, v43, v44, v51);
          char v39 = (char)CombinedBinaryType;
        }
        if (SHIBYTE(v54) < 0) {
          operator delete(v52);
        }
        if (v39) {
          goto LABEL_69;
        }
      }
    }
    uint64_t v45 = morphun::util::LocaleUtils::KOREAN(CombinedBinaryType);
    if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v45, (uint64_t)&__p))
    {
LABEL_69:
      if (*(char *)(a2 + 47) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)(a2 + 24), *(void *)(a2 + 32));
      }
      else
      {
        *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(a2 + 24);
        a1->__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
      }
      if (SHIBYTE(v49) < 0) {
        operator delete(__p);
      }
LABEL_78:
      char v42 = 0;
      goto LABEL_79;
    }
    if (SHIBYTE(v49) < 0) {
      operator delete(__p);
    }
LABEL_73:
    char v42 = 1;
    goto LABEL_79;
  }
  int v40 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(isEndsWithUnicodeSets);
  uint64_t v41 = *(void **)(a2 + 8);
  int v52 = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  if (!morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets((uint64_t)&v50, v40, v41, (uint64_t **)&v52))goto LABEL_73; {
  if (*(char *)(a2 + 47) < 0)
  }
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)(a2 + 24), *(void *)(a2 + 32));
    goto LABEL_78;
  }
  char v42 = 0;
  *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(a2 + 24);
  a1->__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
LABEL_79:
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }
  if (v42)
  {
LABEL_82:
    if (*(char *)(a2 + 71) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)(a2 + 48), *(void *)(a2 + 56));
    }
    else
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)(a2 + 48);
      a1->__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    }
  }
}

void sub_1D2CC980C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  MEMORY[0x1D942B8B0](v21, 0x1020C405F07FB98);
  if (*(char *)(v22 - 49) < 0) {
    operator delete(*(void **)(v22 - 72));
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::SkGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::SkGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2CC9C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

void morphun::dialog::GrammaticalCountFactory::choose()
{
}

void sub_1D2CC9E00(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40F622BB8FLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountFactory::choose(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1);
  BOOL v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(void *)a1 + 48);
  v10.n128_f64[0] = a4;

  return v9(a1, v8, a2, a3, v10);
}

uint64_t morphun::dialog::GrammaticalCountFactory::select(morphun::dialog::GrammaticalCountFactory *this, double a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v7 = 0;
  uplrules_select();
  uint64_t v2 = (morphun::dialog::GrammaticalCountFactory *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, __src);
  uint64_t v3 = morphun::dialog::GrammaticalCountFactory::convertKeywordToCount(v2, (unsigned __int16 *)__p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return v3;
}

void sub_1D2CC9FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountFactory::convertKeywordToCount(morphun::dialog::GrammaticalCountFactory *a1, unsigned __int16 *a2)
{
  uint64_t v3 = (void *)morphun::dialog::GrammaticalCountFactory::KEYWORD_NAME_MAP(a1);
  v20[0] = 0;
  v20[1] = 0;
  uint64_t v19 = v20;
  uint64_t v4 = (unsigned __int16 *)(v3 + 1);
  uint64_t v5 = (unsigned __int16 *)*v3;
  if ((void *)*v3 == v3 + 1)
  {
    uint64_t v9 = 0;
LABEL_20:
    uint64_t v17 = 5;
    goto LABEL_21;
  }
  do
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,morphun::dialog::GrammaticalCountConcept::Count> const&>((uint64_t)&v19, (unsigned __int16 *)v20, v5 + 16, (uint64_t)(v5 + 16));
    char v6 = (unsigned __int16 *)*((void *)v5 + 1);
    if (v6)
    {
      do
      {
        int v7 = v6;
        char v6 = *(unsigned __int16 **)v6;
      }
      while (v6);
    }
    else
    {
      do
      {
        int v7 = (unsigned __int16 *)*((void *)v5 + 2);
        BOOL v8 = *(void *)v7 == (void)v5;
        uint64_t v5 = v7;
      }
      while (!v8);
    }
    uint64_t v5 = v7;
  }
  while (v7 != v4);
  uint64_t v9 = (char *)v20[0];
  if (!v20[0]) {
    goto LABEL_20;
  }
  __n128 v10 = v20;
  uint64_t v11 = (void *)v20[0];
  do
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11 + 4;
    BOOL v14 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v11 + 16, a2);
    uint64_t v15 = v11 + 1;
    if (!v14)
    {
      uint64_t v15 = v11;
      __n128 v10 = v11;
    }
    uint64_t v11 = (void *)*v15;
  }
  while (*v15);
  if (v10 == v20) {
    goto LABEL_20;
  }
  uint64_t v16 = (unsigned __int16 *)(v14 ? v12 + 4 : v13);
  if (std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2, v16)) {
    goto LABEL_20;
  }
  uint64_t v17 = *((unsigned int *)v10 + 14);
LABEL_21:
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(v9);
  return v17;
}

void sub_1D2CCA0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
}

uint64_t morphun::dialog::GrammaticalCountFactory::KEYWORD_NAME_MAP(morphun::dialog::GrammaticalCountFactory *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t result = morphun::dialog::GrammaticalCountFactory::KEYWORD_NAME_MAP(void)::KEYWORD_NAME_MAP_;
  if (!morphun::dialog::GrammaticalCountFactory::KEYWORD_NAME_MAP(void)::KEYWORD_NAME_MAP_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CCA2E4(_Unwind_Exception *a1)
{
  uint64_t v4 = 0;
  while (1)
  {
    if (*(char *)(v2 + v4 + 183) < 0) {
      operator delete(*(void **)(v2 + v4 + 160));
    }
    v4 -= 32;
    if (v4 == -192)
    {
      MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,morphun::dialog::GrammaticalCountConcept::Count> const&>(uint64_t result, unsigned __int16 *a2, unsigned __int16 *a3, uint64_t a4)
{
  uint64_t v7 = result;
  BOOL v8 = (unsigned __int16 *)(result + 8);
  if ((unsigned __int16 *)(result + 8) != a2)
  {
    uint64_t result = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, a2 + 16);
    if (!result)
    {
      uint64_t result = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a2 + 16, a3);
      if (!result)
      {
        uint64_t v22 = a2;
        uint64_t v23 = a2;
        BOOL v14 = (unsigned __int16 *)&v22;
        if (a2) {
          return result;
        }
        goto LABEL_31;
      }
      uint64_t v12 = *((void *)a2 + 1);
      if (v12)
      {
        uint64_t v13 = (unsigned __int16 *)*((void *)a2 + 1);
        do
        {
          BOOL v14 = v13;
          uint64_t v13 = *(unsigned __int16 **)v13;
        }
        while (v13);
      }
      else
      {
        uint64_t v17 = a2;
        do
        {
          BOOL v14 = (unsigned __int16 *)*((void *)v17 + 2);
          BOOL v16 = *(void *)v14 == (void)v17;
          uint64_t v17 = v14;
        }
        while (!v16);
      }
      if (v14 == v8
        || (uint64_t result = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a3, v14 + 16), result))
      {
        if (v12)
        {
          uint64_t v23 = v14;
        }
        else
        {
          uint64_t v23 = a2;
          BOOL v14 = a2 + 4;
        }
LABEL_30:
        if (*(void *)v14) {
          return result;
        }
        goto LABEL_31;
      }
LABEL_29:
      uint64_t result = (uint64_t)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>(v7, &v23, a3);
      BOOL v14 = (unsigned __int16 *)result;
      goto LABEL_30;
    }
  }
  uint64_t v9 = *(void *)a2;
  if (*(unsigned __int16 **)v7 != a2)
  {
    if (v9)
    {
      uint64_t v10 = *(void *)a2;
      do
      {
        uint64_t v11 = (unsigned __int16 *)v10;
        uint64_t v10 = *(void *)(v10 + 8);
      }
      while (v10);
    }
    else
    {
      uint64_t v15 = a2;
      do
      {
        uint64_t v11 = (unsigned __int16 *)*((void *)v15 + 2);
        BOOL v16 = *(void *)v11 == (void)v15;
        uint64_t v15 = v11;
      }
      while (v16);
    }
    uint64_t result = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v11 + 16, a3);
    if (result) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
  uint64_t v11 = a2;
LABEL_17:
  if (v9)
  {
    uint64_t v23 = v11;
    BOOL v14 = v11 + 4;
    goto LABEL_30;
  }
  uint64_t v23 = a2;
  BOOL v14 = a2;
LABEL_31:
  BOOL v18 = (char *)operator new(0x40uLL);
  uint64_t v19 = (std::basic_string<char16_t> *)(v18 + 32);
  if (*(char *)(a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v19, *(const std::basic_string<char16_t>::value_type **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)a4;
    *((void *)v18 + 6) = *(void *)(a4 + 16);
  }
  *((_DWORD *)v18 + 14) = *(_DWORD *)(a4 + 24);
  uint64_t v20 = v23;
  *(void *)BOOL v18 = 0;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = v20;
  *(void *)BOOL v14 = v18;
  uint64_t v21 = **(void **)v7;
  if (v21)
  {
    *(void *)uint64_t v7 = v21;
    BOOL v18 = *(char **)v14;
  }
  uint64_t result = (uint64_t)std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v7 + 8), (uint64_t *)v18);
  ++*(void *)(v7 + 16);
  return result;
}

void sub_1D2CCA594(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::map<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>::map[abi:ne180100](void *a1, unsigned __int16 *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (unsigned __int16 *)(a1 + 1);
  a1[2] = 0;
  *a1 = a1 + 1;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::dialog::GrammaticalCountConcept::Count>>>::__emplace_hint_unique_key_args<std::basic_string<char16_t>,std::pair<std::basic_string<char16_t> const,morphun::dialog::GrammaticalCountConcept::Count> const&>((uint64_t)a1, v4, a2, (uint64_t)a2);
      a2 += 16;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_1D2CCA610(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::GrammaticalCountFactory::getDefaultSupportedCount(morphun::dialog::GrammaticalCountFactory *this)
{
  return (uint64_t)this + 16;
}

void morphun::dialog::GrammaticalCountFactory::~GrammaticalCountFactory(morphun::dialog::GrammaticalCountFactory *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::GrammaticalCountFactory::~GrammaticalCountFactory(morphun::dialog::GrammaticalCountFactory *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  uplrules_close();
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 3));
}

morphun::dialog::GrammaticalCountFactory *morphun::dialog::GrammaticalCountFactory::GrammaticalCountFactory(morphun::dialog::GrammaticalCountFactory *this, const morphun::util::ULocale *a2)
{
  uint64_t v3 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = *((void *)a2 + 1);
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = (char *)this + 24;
  UErrorCode v13 = U_ZERO_ERROR;
  *((void *)this + 1) = uplrules_open();
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v13);
  }
  uplrules_getKeywords();
  while (1)
  {
    uint64_t v4 = (char *)uenum_unext();
    if (!v4) {
      break;
    }
    uint64_t v5 = (morphun::dialog::GrammaticalCountFactory *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, v4);
    int v6 = morphun::dialog::GrammaticalCountFactory::convertKeywordToCount(v5, (unsigned __int16 *)__p);
    std::__tree<morphun::dialog::GrammaticalCountConcept::Count>::__emplace_unique_key_args<morphun::dialog::GrammaticalCountConcept::Count,morphun::dialog::GrammaticalCountConcept::Count>((uint64_t *)this + 2, v6, v6);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  uenum_close();
  UErrorCode v7 = v13;
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    uint64_t v10 = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(v10, v7);
  }
  return this;
}

{
  uint64_t *v3;
  char *v4;
  morphun::dialog::GrammaticalCountFactory *v5;
  int v6;
  UErrorCode v7;
  morphun::exception::ICUException *exception;
  morphun::exception::ICUException *v10;
  void *__p[2];
  char v12;
  UErrorCode v13;

  *(void *)this = &off_1F2A09410;
  *((void *)this + 1) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = (char *)this + 24;
  uint64_t v3 = (uint64_t *)((char *)this + 16);
  *((void *)this + 4) = 0;
  UErrorCode v13 = U_ZERO_ERROR;
  *((void *)this + 1) = uplrules_open();
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v13);
  }
  uplrules_getKeywords();
  while (1)
  {
    uint64_t v4 = (char *)uenum_unext();
    if (!v4) {
      break;
    }
    uint64_t v5 = (morphun::dialog::GrammaticalCountFactory *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, v4);
    int v6 = morphun::dialog::GrammaticalCountFactory::convertKeywordToCount(v5, (unsigned __int16 *)__p);
    std::__tree<morphun::dialog::GrammaticalCountConcept::Count>::__emplace_unique_key_args<morphun::dialog::GrammaticalCountConcept::Count,morphun::dialog::GrammaticalCountConcept::Count>(v3, v6, v6);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  uenum_close();
  UErrorCode v7 = v13;
  if (v13 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    uint64_t v10 = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(v10, v7);
  }
  return this;
}

void sub_1D2CCA948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v15);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<morphun::dialog::GrammaticalCountConcept::Count>::__emplace_unique_key_args<morphun::dialog::GrammaticalCountConcept::Count,morphun::dialog::GrammaticalCountConcept::Count>(uint64_t *result, int a2, int a3)
{
  uint64_t v4 = (uint64_t **)result;
  int v6 = (uint64_t **)(result + 1);
  uint64_t v5 = (uint64_t *)result[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        UErrorCode v7 = (uint64_t **)v5;
        int v8 = *((_DWORD *)v5 + 7);
        if (v8 <= a2) {
          break;
        }
        uint64_t v5 = *v7;
        int v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      uint64_t v5 = v7[1];
      if (!v5)
      {
        int v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    UErrorCode v7 = (uint64_t **)(result + 1);
LABEL_9:
    uint64_t v9 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v9 + 7) = a3;
    return std::__tree<std::u16string_view>::__insert_node_at(v4, (uint64_t)v7, v6, v9);
  }
  return result;
}

void sub_1D2CCABFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v15);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::GrammaticalCountFactory::~GrammaticalCountFactory(morphun::dialog::GrammaticalCountFactory *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[16];
  npc<morphun::dialog::SemanticFeature const>(v4);
  uint64_t v5 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v4);
  int Count = morphun::grammar::synthesis::NlGrammarSynthesizer::getCount(v5);
  uint64_t v7 = a1[17];
  npc<morphun::dialog::SemanticFeature const>(v7);
  int v8 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v7);
  int Gender = morphun::grammar::synthesis::NlGrammarSynthesizer::getGender(v8);
  uint64_t v10 = a1[18];
  npc<morphun::dialog::SemanticFeature const>(v10);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v10);
  if (!v11) {
    goto LABEL_22;
  }
  char v12 = (unsigned __int16 *)v11;
  {
    operator new();
  }
  uint64_t v13 = npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::NlGrammarSynthesizer::SIZENESS_DIMINUTIVE(void)::SIZENESS_DIMINUTIVE_);
  int v14 = *(char *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if (v14 >= 0) {
    uint64_t v15 = *(unsigned __int8 *)(v13 + 23);
  }
  uint64_t v16 = *((unsigned __int8 *)v12 + 23);
  int v17 = (char)v16;
  if ((v16 & 0x80u) != 0) {
    uint64_t v16 = *((void *)v12 + 1);
  }
  if (v15 == v16)
  {
    if (v15)
    {
      if (v17 >= 0) {
        BOOL v18 = v12;
      }
      else {
        BOOL v18 = *(unsigned __int16 **)v12;
      }
      if (v14 >= 0) {
        uint64_t v19 = (unsigned __int16 *)v13;
      }
      else {
        uint64_t v19 = *(unsigned __int16 **)v13;
      }
      uint64_t v20 = v15 - 1;
      do
      {
        int v22 = *v19++;
        int v21 = v22;
        int v24 = *v18++;
        int v23 = v24;
        BOOL v26 = v20-- != 0;
        BOOL v27 = v23 == v21;
      }
      while (v23 == v21 && v26);
    }
    else
    {
      BOOL v27 = 1;
    }
  }
  else
  {
LABEL_22:
    BOOL v27 = 0;
  }
  if (Count) {
    BOOL v28 = Gender == 0;
  }
  else {
    BOOL v28 = 1;
  }
  if (v28)
  {
    uint64_t v29 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    v75[0] = 0;
    int v30 = *(char *)(v29 + 23);
    if (v30 >= 0) {
      uint64_t v31 = (const UChar *)v29;
    }
    else {
      uint64_t v31 = *(const UChar **)v29;
    }
    if (v30 >= 0) {
      uint64_t v32 = *(unsigned __int8 *)(v29 + 23);
    }
    else {
      uint64_t v32 = *(void *)(v29 + 8);
    }
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[3], (uint64_t)v75, v31, v32))
    {
LABEL_35:
      if (!v75[0]) {
        goto LABEL_92;
      }
      if (Count)
      {
        if (Gender) {
          goto LABEL_38;
        }
      }
      else
      {
        if ((a1[9] & v75[0]) != 0) {
          int Count = 2;
        }
        else {
          int Count = 1;
        }
        if (Gender)
        {
LABEL_38:
          if (v27) {
            goto LABEL_91;
          }
          goto LABEL_39;
        }
      }
      uint64_t v49 = a1[8] & v75[0];
      if (v49 == a1[5])
      {
        int Gender = 2;
        if (v27) {
          goto LABEL_91;
        }
      }
      else if (v49 == a1[6])
      {
        int Gender = 1;
        if (v27) {
          goto LABEL_91;
        }
      }
      else
      {
        if (v49 == a1[7]) {
          int Gender = 3;
        }
        else {
          int Gender = 0;
        }
        if (v27) {
          goto LABEL_91;
        }
      }
LABEL_39:
      if ((a1[10] & v75[0]) == 0)
      {
        std::basic_string<char16_t> v78 = 0;
        uint64_t v79 = 0;
        std::basic_string<char16_t> __p = 0;
        if (*(char *)(v29 + 23) >= 0) {
          unsigned int v35 = *(unsigned __int8 *)(v29 + 23);
        }
        else {
          unsigned int v35 = *(_DWORD *)(v29 + 8);
        }
        morphun::analysis::stemmer::NlLemmaFilter::guessDiminutive((uint64_t)&__p, v29, v35, size, v34);
        if (SHIBYTE(v79) < 0)
        {
          uint64_t v36 = (uint64_t)v78;
          if (!v78)
          {
            BOOL v27 = 0;
LABEL_121:
            operator delete(__p);
            goto LABEL_92;
          }
          p_p = (const UChar *)__p;
        }
        else
        {
          uint64_t v36 = HIBYTE(v79);
          if (!HIBYTE(v79))
          {
            BOOL v27 = 0;
            goto LABEL_92;
          }
          p_p = (const UChar *)&__p;
        }
        uint64_t v71 = a1[3];
        v74.__r_.__value_.__r.__words[0] = 0;
        BOOL v27 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v71, (uint64_t)&v74, p_p, v36) != 0;
        if ((SHIBYTE(v79) & 0x80000000) == 0) {
          goto LABEL_92;
        }
        goto LABEL_121;
      }
LABEL_91:
      BOOL v27 = 1;
      goto LABEL_92;
    }
    uint64_t v38 = npc<morphun::Tokenizer>(a1[4]);
    char v39 = (const morphun::TokenChain *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v38 + 24))(v38, v29);
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)&__p, v39);
    if (__p == v78)
    {
      memset(&v74, 0, sizeof(v74));
      goto LABEL_107;
    }
    uint64_t v73 = v39;
    int v72 = Count;
    int v40 = -1431655765 * ((v78 - (unsigned char *)__p) >> 3);
    if (v40 < 1)
    {
      LODWORD(v42) = 0;
    }
    else
    {
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      while (1)
      {
        int v43 = (char *)__p + v41;
        if (*((char *)__p + v41 + 23) < 0)
        {
          uint64_t v45 = *(const UChar **)v43;
          uint64_t v44 = *((void *)v43 + 1);
        }
        else
        {
          uint64_t v44 = *((unsigned __int8 *)__p + v41 + 23);
          uint64_t v45 = (const UChar *)((char *)__p + v41);
        }
        uint64_t v46 = a1[3];
        uint64_t v47 = a1[12];
        int v76 = 0;
        if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v46, (uint64_t)&v76, v45, v44)
          || ((unint64_t)v76 & v47) != v47)
        {
          break;
        }
        ++v42;
        v41 += 24;
        if (v40 == v42)
        {
LABEL_83:
          LODWORD(v42) = v40;
          goto LABEL_84;
        }
      }
    }
    if ((int)v42 < v40)
    {
      int v50 = 0;
      int v51 = v42;
      uint64_t v52 = 24 * v42;
      while (1)
      {
        uint64_t v53 = (char *)__p + v52;
        if (*((char *)__p + v52 + 23) < 0)
        {
          unint64_t v55 = *(const UChar **)v53;
          uint64_t v54 = *((void *)v53 + 1);
        }
        else
        {
          uint64_t v54 = *((unsigned __int8 *)__p + v52 + 23);
          unint64_t v55 = (const UChar *)((char *)__p + v52);
        }
        uint64_t v56 = a1[3];
        uint64_t v57 = a1[11];
        int v76 = 0;
        BOOL v58 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v56, (uint64_t)&v76, v55, v54)
           && ((unint64_t)v76 & v57) == v57;
        if (!v58
          && a1 + 14 == (uint64_t *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)(a1 + 13), (unsigned __int16 *)((char *)__p + v52)))
        {
          break;
        }
        ++v50;
        v52 += 24;
        if (v51 + v50 >= v40) {
          goto LABEL_83;
        }
      }
      LODWORD(v42) = v51 + v50;
    }
LABEL_84:
    int Count = v72;
    char v39 = v73;
    if (!v42) {
      goto LABEL_103;
    }
    uint64_t v59 = a1[3];
    unsigned int v60 = v42 - 1;
    uint64_t v61 = (const UChar *)((char *)__p + 24 * (v42 - 1));
    if (*((char *)v61 + 23) < 0)
    {
      uint64_t v61 = *(const UChar **)v61;
      uint64_t v62 = *((void *)__p + 3 * v60 + 1);
    }
    else
    {
      uint64_t v62 = *((unsigned __int8 *)v61 + 23);
    }
    uint64_t v66 = a1[11];
    int v76 = 0;
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v59, (uint64_t)&v76, v61, v62)
      && ((unint64_t)v76 & v66) == v66)
    {
      uint64_t v68 = (char *)__p + 24 * v60;
      if ((v68[23] & 0x80000000) == 0) {
        goto LABEL_104;
      }
    }
    else
    {
LABEL_103:
      uint64_t v68 = v78 - 24;
      if (((char)*(v78 - 1) & 0x80000000) == 0)
      {
LABEL_104:
        long long v69 = *(_OWORD *)v68;
        v74.__r_.__value_.__r.__words[2] = *((void *)v68 + 2);
        *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v69;
        goto LABEL_107;
      }
    }
    std::basic_string<char16_t>::__init_copy_ctor_external(&v74, *(const std::basic_string<char16_t>::value_type **)v68, *((void *)v68 + 1));
LABEL_107:
    int v76 = &__p;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v76);
    (*(void (**)(const morphun::TokenChain *))(*(void *)v39 + 16))(v39);
    if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::size_type size = v74.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::size_type v70 = (std::basic_string<char16_t> *)v74.__r_.__value_.__r.__words[0];
      if (!v74.__r_.__value_.__l.__size_)
      {
LABEL_113:
        operator delete(v70);
        goto LABEL_35;
      }
    }
    else
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(v74.__r_.__value_.__r.__words[2]);
      if (!*((unsigned char *)&v74.__r_.__value_.__s + 23)) {
        goto LABEL_35;
      }
      std::basic_string<char16_t>::size_type v70 = &v74;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[3], (uint64_t)v75, (const UChar *)v70, size);
    if ((SHIBYTE(v74.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
    std::basic_string<char16_t>::size_type v70 = (std::basic_string<char16_t> *)v74.__r_.__value_.__r.__words[0];
    goto LABEL_113;
  }
LABEL_92:
  char v63 = Gender == 3 || v27;
  uint64_t v64 = 19;
  if (((Count == 1) & v63) != 0) {
    uint64_t v64 = 22;
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t *))(*a1 + 32))(a1, a2, &a1[v64]);
}

void sub_1D2CCB330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  MEMORY[0x1D942B8B0](v28, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_1D2CCB440(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CCB4A4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_ArticleLookupFunction::~NlGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::NlGrammarSynthesizer_ArticleLookupFunction *this)
{
  morphun::grammar::synthesis::NlGrammarSynthesizer_ArticleLookupFunction::~NlGrammarSynthesizer_ArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &off_1F2A0D4D0;
  if (*((char *)this + 199) < 0) {
    operator delete(*((void **)this + 22));
  }
  if (*((char *)this + 175) < 0) {
    operator delete(*((void **)this + 19));
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 14));
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_ArticleLookupFunction::NlGrammarSynthesizer_ArticleLookupFunction(morphun::dialog::DefaultArticleLookupFunction *a1, uint64_t a2, char a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1F29FB088;
  uint64_t v4 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A06538, a2, a3, 1);
  *(void *)a1 = &off_1F2A0D4D0;
  uint64_t v5 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::DUTCH(v4);
  uint64_t Dictionary = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::createDictionary(v5, v6);
  if (Dictionary)
  {
    *((void *)a1 + 3) = Dictionary;
    int v8 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::DUTCH(Dictionary);
    morphun::TokenizerFactory::createTokenizer(v8, v9);
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2CCBCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  MEMORY[0x1D942B8B0](a9, 0x1012C40EC159624);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v23 + 112));
  uint64_t v25 = *(void *)(v23 + 32);
  *(void *)(v23 + 32) = 0;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 16))(v25);
  }
  _Unwind_Resume(a1);
}

marisa::grimoire::trie::LoudsTrie **marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(marisa::grimoire::trie::LoudsTrie **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    marisa::grimoire::trie::LoudsTrie::~LoudsTrie(v2);
    MEMORY[0x1D942B8B0]();
  }
  return a1;
}

marisa::grimoire::trie::LoudsTrie **marisa::Trie::build(marisa::grimoire::trie::LoudsTrie **this, marisa::Keyset *a2)
{
  uint64_t v4 = (marisa::grimoire::trie::LoudsTrie *)operator new(0x470uLL, MEMORY[0x1E4FBA2D0]);
  if (!v4)
  {
    uint64_t v133 = 0;
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    exception[2] = 0x80000000ELL;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:14: MARIS"
                   "A_MEMORY_ERROR: temp.get() == NULL";
  }
  uint64_t v5 = v4;
  marisa::grimoire::trie::LoudsTrie::LoudsTrie(v4);
  uint64_t v133 = v6;
  uint64_t v149 = 3;
  uint64_t v150 = 0x100000000200;
  int v151 = 0x20000;
  marisa::grimoire::trie::LoudsTrie::LoudsTrie((marisa::grimoire::trie::LoudsTrie *)v134);
  memset(v153, 0, 25);
  long long v152 = 0u;
  unint64_t v7 = *((void *)a2 + 11);
  if (v7)
  {
    marisa::grimoire::vector::Vector<marisa::grimoire::trie::ReverseKey>::realloc((uint64_t *)&v152, *((void *)a2 + 11));
    unint64_t v8 = *((void *)&v153[0] + 1);
  }
  else
  {
    unint64_t v8 = 0;
  }
  unint64_t v9 = v7 - v8;
  if (v7 > v8)
  {
    uint64_t v10 = *((void *)&v152 + 1) + 24 * v8;
    do
    {
      *(void *)uint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      *(_DWORD *)(v10 + 16) = 0;
      v10 += 24;
      --v9;
    }
    while (v9);
  }
  *((void *)&v153[0] + 1) = v7;
  if (!*((void *)a2 + 11))
  {
    char v12 = (char *)*((void *)&v152 + 1);
    if (!v7) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  unint64_t v11 = 0;
  char v12 = (char *)*((void *)&v152 + 1);
  uint64_t v13 = (_DWORD *)(*((void *)&v152 + 1) + 12);
  do
  {
    uint64_t v14 = *(void *)(*((void *)a2 + 6) + ((v11 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v11;
    int v15 = *(_DWORD *)(v14 + 8);
    *(void *)(v13 - 3) = *(void *)v14;
    *(v13 - 1) = v15;
    _DWORD *v13 = *(_DWORD *)(v14 + 12);
    v13 += 6;
    ++v11;
  }
  while (v11 < *((void *)a2 + 11));
  if (v7)
  {
LABEL_14:
    uint64_t v16 = 0;
    int v17 = v12 + 16;
    do
    {
      *int v17 = v16;
      v17 += 6;
      ++v16;
    }
    while (v7 != v16);
  }
LABEL_16:
  unint64_t v18 = marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Key *>(v12, &v12[24 * v7], 0);
  uint64_t v19 = 256;
  do
  {
    unint64_t v20 = v19;
    v19 *= 2;
  }
  while (v20 < v18 / v150);
  marisa::grimoire::vector::Vector<marisa::grimoire::trie::Cache>::resize(v143, v20);
  unint64_t v145 = v20 - 1;
  marisa::grimoire::vector::BitVector::push_back(v134, 1);
  marisa::grimoire::vector::BitVector::push_back(v134, 0);
  v160[0].n128_u8[0] = 0;
  marisa::grimoire::vector::Vector<char>::push_back(v137, v160);
  marisa::grimoire::vector::BitVector::push_back(v136, 0);
  unsigned __int8 v121 = v5;
  std::basic_string<char16_t> v122 = this;
  long long v158 = 0u;
  memset(v159, 0, 25);
  long long v157 = 0u;
  memset(v156, 0, sizeof(v156));
  memset(v155, 0, 25);
  long long v154 = 0u;
  v160[0].n128_u64[0] = *((void *)&v153[0] + 1) << 32;
  v160[0].n128_u32[2] = 0;
  std::deque<marisa::grimoire::trie::Range>::push_back(v156, (uint64_t *)v160);
  uint64_t v21 = *((void *)&v157 + 1);
  std::basic_string<char16_t> v123 = a2;
  if (*((void *)&v157 + 1))
  {
    uint64_t v126 = 0;
    uint64_t v127 = 0;
    uint64_t v22 = *((void *)&v152 + 1);
    int v125 = v151;
    uint64_t v124 = *((void *)&v152 + 1) + 24;
    do
    {
      uint64_t v23 = v136[6];
      int v24 = (unsigned int *)(*(void *)(*((void *)&v156[0] + 1) + 8 * ((unint64_t)v157 / 0x155))
                           + 12 * ((unint64_t)v157 % 0x155));
      uint64_t v26 = *v24;
      unint64_t v25 = v24[1];
      uint64_t v27 = v24[2];
      *(void *)&long long v157 = v157 + 1;
      *((void *)&v157 + 1) = v21 - 1;
      if ((unint64_t)v157 >= 0x2AA)
      {
        operator delete(**((void ***)&v156[0] + 1));
        *((void *)&v156[0] + 1) += 8;
        *(void *)&long long v157 = v157 - 341;
      }
      uint64_t v130 = v23;
      uint64_t v28 = v23 - v21;
      if (v26 < v25)
      {
        while (*(_DWORD *)(v22 + 24 * v26 + 8) == v27)
        {
          *(_DWORD *)(v22 + 24 * v26 + 12) = v28;
          uint64_t v26 = (v26 + 1);
          if (v25 == v26) {
            goto LABEL_65;
          }
        }
      }
      if (v26 != v25)
      {
        uint64_t v29 = v154;
        memset(v155, 0, 25);
        long long v154 = 0u;
        if (v29) {
          MEMORY[0x1D942B890](v29, 0x1000C8077774924);
        }
        double v30 = *(float *)(v22 + 24 * v26 + 12);
        uint64_t v31 = v26 + 1;
        if (v26 + 1 < v25)
        {
          uint64_t v32 = v124 + 24 * v26;
          uint64_t v33 = (v26 << 32) + 0x100000000;
          do
          {
            if (*(unsigned __int8 *)(*(void *)(v32 - 24) + v27) != *(unsigned __int8 *)(*(void *)v32 + v27))
            {
              *(float *)&unsigned int v34 = v30;
              v160[0].n128_u64[0] = v33 + v26;
              v160[0].n128_u64[1] = v27 | ((unint64_t)v34 << 32);
              marisa::grimoire::vector::Vector<marisa::grimoire::trie::WeightedRange>::push_back((uint64_t *)&v154, v160);
              double v30 = 0.0;
              LODWORD(v26) = v31;
            }
            double v30 = v30 + *(float *)(v32 + 12);
            ++v31;
            v32 += 24;
            v33 += 0x100000000;
          }
          while (v25 != v31);
        }
        *(float *)&unsigned int v35 = v30;
        v160[0].n128_u32[0] = v26;
        v160[0].n128_u32[1] = v25;
        v160[0].n128_u64[1] = v27 | ((unint64_t)v35 << 32);
        __n128 v36 = marisa::grimoire::vector::Vector<marisa::grimoire::trie::WeightedRange>::push_back((uint64_t *)&v154, v160);
        unint64_t v37 = v155[1];
        if (v125 == 0x20000)
        {
          uint64_t v38 = (__n128 *)*((void *)&v154 + 1);
          char v39 = (__n128 *)(*((void *)&v154 + 1) + 16 * v155[1]);
          if ((uint64_t)v155[1] <= 128)
          {
            std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(*((__n128 **)&v154 + 1), (__n128 *)(*((void *)&v154 + 1) + 16 * v155[1]), v155[1], 0, 0, v36);
          }
          else
          {
            int v40 = (__n128 *)std::get_temporary_buffer[abi:ne180100]<marisa::grimoire::trie::WeightedRange>(v155[1]);
            std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(v38, v39, v37, v40, v41, v42);
            if (v40) {
              operator delete(v40);
            }
          }
        }
        if (v130 == v21) {
          unint64_t v146 = v37;
        }
        if (v37)
        {
          uint64_t v43 = 0;
          uint64_t v44 = 32 * v28;
          uint64_t v131 = *((void *)&v154 + 1);
          do
          {
            uint64_t v45 = (unsigned int *)(v131 + 16 * v43);
            uint64_t v46 = (uint64_t *)v45;
            uint64_t v47 = v45[2];
            unsigned int v48 = *v45;
            unint64_t v49 = *(unsigned int *)(v22 + 24 * *v45 + 8);
            unint64_t v50 = v47 + 1;
            if (v47 + 1 >= v49)
            {
              unint64_t v51 = v45[2];
              LODWORD(v49) = v47 + 1;
            }
            else
            {
              unint64_t v51 = v49 - 1;
              unint64_t v52 = v45[2];
              do
              {
                unint64_t v53 = v52;
                unint64_t v52 = v50;
                uint64_t v54 = (uint64_t *)(v22 + 24 * v48);
                uint64_t v55 = *v45;
                while (++v55 < (unint64_t)v45[1])
                {
                  uint64_t v56 = *v54;
                  uint64_t v57 = v54[3];
                  v54 += 3;
                  if (*(unsigned __int8 *)(v56 + v52) != *(unsigned __int8 *)(v57 + v52))
                  {
                    unint64_t v51 = v53;
                    LODWORD(v49) = v52;
                    goto LABEL_52;
                  }
                }
                unint64_t v50 = v52 + 1;
              }
              while (v52 + 1 != v49);
            }
LABEL_52:
            float v59 = *((float *)v45 + 3);
            BOOL v58 = (int *)(v45 + 3);
            float v60 = v59;
            uint64_t v61 = (v44 ^ v28 ^ *(unsigned __int8 *)(*(void *)(v22 + 24 * v48) + v47)) & v145;
            uint64_t v62 = v144 + 12 * v61;
            float v64 = *(float *)(v62 + 8);
            char v63 = (float *)(v62 + 8);
            if (v64 < v60)
            {
              int v65 = v138;
              uint64_t v66 = (_DWORD *)(v144 + 12 * v61);
              _DWORD *v66 = v28;
              v66[1] = v65;
              *char v63 = v60;
              uint64_t v47 = *((unsigned int *)v46 + 2);
            }
            if (v51 == v47)
            {
              v160[0].n128_u8[0] = *(unsigned char *)(*(void *)(v22 + 24 * *(unsigned int *)v46) + v51);
              marisa::grimoire::vector::Vector<char>::push_back(v137, v160);
              marisa::grimoire::vector::BitVector::push_back(v136, 0);
            }
            else
            {
              v160[0].n128_u8[0] = 0;
              marisa::grimoire::vector::Vector<char>::push_back(v137, v160);
              marisa::grimoire::vector::BitVector::push_back(v136, 1);
              uint64_t v67 = v44;
              unint64_t v68 = v37;
              uint64_t v69 = *(void *)(v22 + 24 * *(unsigned int *)v46);
              uint64_t v70 = *((unsigned int *)v46 + 2);
              int v71 = *v58;
              uint64_t v72 = v127;
              if (*(void *)&v159[1] < (unint64_t)(v127 + 1))
              {
                uint64_t v73 = 2 * *(void *)&v159[1];
                if (*(void *)&v159[1] > 0x555555555555555uLL) {
                  uint64_t v73 = 0xAAAAAAAAAAAAAAALL;
                }
                if (*(void *)&v159[1] <= (unint64_t)(v127 + 1) >> 1) {
                  uint64_t v74 = v127 + 1;
                }
                else {
                  uint64_t v74 = v73;
                }
                marisa::grimoire::vector::Vector<marisa::grimoire::trie::ReverseKey>::realloc((uint64_t *)&v158, v74);
                uint64_t v72 = *((void *)&v159[0] + 1);
                uint64_t v126 = *((void *)&v158 + 1);
              }
              uint64_t v75 = v126 + 24 * v72;
              *(void *)uint64_t v75 = v69 + v70;
              *(_DWORD *)(v75 + 8) = v49 - v70;
              *(_DWORD *)(v75 + 12) = v71;
              *(_DWORD *)(v75 + 16) = 0;
              uint64_t v127 = ++*((void *)&v159[0] + 1);
              unint64_t v37 = v68;
              uint64_t v44 = v67;
            }
            *((_DWORD *)v46 + 2) = v49;
            std::deque<marisa::grimoire::trie::Range>::push_back(v156, v46);
            marisa::grimoire::vector::BitVector::push_back(v134, 1);
            ++v43;
          }
          while (v43 != v37);
        }
      }
LABEL_65:
      marisa::grimoire::vector::BitVector::push_back(v134, 0);
      uint64_t v21 = *((void *)&v157 + 1);
    }
    while (*((void *)&v157 + 1));
  }
  marisa::grimoire::vector::BitVector::push_back(v134, 0);
  marisa::grimoire::vector::BitVector::build((marisa::grimoire::vector::BitVector *)v134, 1, 1);
  marisa::grimoire::vector::Vector<unsigned char>::shrink(v137);
  memset(v160, 0, 41);
  uint64_t v76 = *((void *)&v153[0] + 1);
  marisa::grimoire::vector::Vector<unsigned int>::resize((uint64_t *)v160, *((unint64_t *)&v153[0] + 1));
  if (v76)
  {
    unint64_t v77 = v160[0].n128_u64[1];
    std::basic_string<char16_t> v78 = (unsigned int *)(*(void *)&v153[0] + 16);
    do
    {
      *(_DWORD *)(v77 + 4 * *v78) = *(v78 - 1);
      v78 += 6;
      --v76;
    }
    while (v76);
  }
  else
  {
    unint64_t v77 = v160[0].n128_u64[1];
  }
  unint64_t v79 = v160[0].n128_u64[0];
  unint64_t v132 = v160[1].n128_u64[1];
  long long v80 = v152;
  *(_OWORD *)v129 = v158;
  long long v152 = v158;
  long long v158 = v80;
  uint64_t v81 = *(void *)&v153[0];
  *(void *)&v153[0] = *(void *)&v159[0];
  *(void *)&v159[0] = v81;
  unint64_t v82 = *((void *)&v159[0] + 1);
  long long v83 = *(_OWORD *)((char *)v153 + 8);
  *(_OWORD *)((char *)v153 + 8) = *(_OWORD *)((char *)v159 + 8);
  *(_OWORD *)((char *)v159 + 8) = v83;
  BYTE8(v153[1]) = BYTE8(v159[1]);
  uint64_t v84 = v80;
  if ((void)v154)
  {
    unint64_t v128 = v82;
    MEMORY[0x1D942B890](v154, 0x1000C8077774924);
    unint64_t v82 = v128;
  }
  unint64_t v85 = v82;
  std::deque<marisa::grimoire::trie::Range>::~deque[abi:ne180100]((uint64_t)v156);
  if (v84) {
    MEMORY[0x1D942B890](v84, 0x1000C8077774924);
  }
  long long v158 = 0u;
  memset(v159, 0, 25);
  if (v85)
  {
    if (v149 == 1)
    {
      memset(v160, 0, 41);
      marisa::grimoire::vector::Vector<marisa::grimoire::trie::Entry>::resize((uint64_t *)v160, v85);
      int v86 = (unsigned int *)(v160[0].n128_u64[1] + 8);
      std::basic_string<char16_t> v87 = (_DWORD *)(*(void *)&v129[2] + 8);
      do
      {
        uint64_t v88 = *((void *)v87 - 1);
        unsigned int v89 = *v87;
        v87 += 6;
        *((void *)v86 - 1) = v88 + v89 - 1;
        *int v86 = v89;
        v86 += 4;
        --v85;
      }
      while (v85);
      marisa::grimoire::trie::Tail::build(v140, (uint64_t)v160, (uint64_t *)&v158, SHIDWORD(v150));
    }
    else
    {
      memset(v160, 0, 41);
      marisa::grimoire::vector::Vector<marisa::grimoire::trie::ReverseKey>::realloc((uint64_t *)v160, v85);
      unint64_t v90 = v85 - v160[1].n128_u64[1];
      if (v85 > v160[1].n128_u64[1])
      {
        unint64_t v91 = v160[0].n128_u64[1] + 24 * v160[1].n128_u64[1];
        do
        {
          *(void *)unint64_t v91 = 0;
          *(void *)(v91 + 8) = 0;
          *(_DWORD *)(v91 + 16) = 0;
          v91 += 24;
          --v90;
        }
        while (v90);
      }
      v160[1].n128_u64[1] = v85;
      if (v85 <= 1) {
        uint64_t v92 = 1;
      }
      else {
        uint64_t v92 = v85;
      }
      uint64_t v93 = (_DWORD *)(v160[0].n128_u64[1] + 12);
      int v94 = (int *)(*(void *)&v129[2] + 12);
      do
      {
        uint64_t v95 = *(v94 - 1);
        *(void *)(v93 - 3) = *(void *)(v94 - 3) + v95;
        *(v93 - 1) = v95;
        int v96 = *v94;
        v94 += 6;
        *uint64_t v93 = v96;
        v93 += 6;
        --v92;
      }
      while (v92);
      memset(v153, 0, 25);
      long long v152 = 0u;
      if (*(void *)v129) {
        MEMORY[0x1D942B890](*(void *)v129, 0x1000C8077774924);
      }
      uint64_t v97 = (marisa::grimoire::trie::LoudsTrie *)operator new(0x470uLL, MEMORY[0x1E4FBA2D0]);
      std::basic_string<char16_t>::size_type v98 = v97;
      if (v97) {
        marisa::grimoire::trie::LoudsTrie::LoudsTrie(v97);
      }
      marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::reset(&v142, v98);
      if (!v142)
      {
        std::basic_string<char16_t>::size_type v120 = __cxa_allocate_exception(0x20uLL);
        void *v120 = &unk_1F2A081F8;
        v120[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/louds-trie.cc";
        v120[2] = 0x8000001C5;
        v120[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/loud"
                  "s-trie.cc:453: MARISA_MEMORY_ERROR: next_trie_.get() == NULL";
      }
      marisa::grimoire::trie::LoudsTrie::build_trie<marisa::grimoire::trie::ReverseKey>((uint64_t)v142, (uint64_t *)v160, (uint64_t)&v158, (uint64_t)&v149, 2);
    }
    if (v160[0].n128_u64[0]) {
      MEMORY[0x1D942B890](v160[0].n128_u64[0], 0x1000C8077774924);
    }
  }
  if (v142)
  {
    unsigned int v99 = (*((_DWORD *)v142 + 268) + 1) | *((_DWORD *)v142 + 271) | *((_DWORD *)v142 + 272);
    v160[0].n128_u64[0] = 3;
    v160[0].n128_u64[1] = 0x100000000200;
    v160[1].n128_u32[0] = 0x20000;
    marisa::grimoire::trie::Config::parse_((uint64_t)v160, v99);
  }
  else
  {
    if (v141) {
      int v100 = 0x2000;
    }
    else {
      int v100 = 4096;
    }
    v160[0].n128_u64[0] = 3;
    v160[0].n128_u64[1] = 0x100000000200;
    v160[1].n128_u32[0] = 0x20000;
    marisa::grimoire::trie::Config::parse_((uint64_t)v160, v151 | v150 | v100 | 1);
  }
  __n128 v147 = v160[0];
  unsigned __int32 v148 = v160[1].n128_u32[0];
  marisa::grimoire::vector::BitVector::build((marisa::grimoire::vector::BitVector *)v136, 0, 0);
  if (*((void *)&v159[0] + 1))
  {
    unint64_t v101 = 0;
    unint64_t v102 = 0;
    do
    {
      do
      {
        unint64_t v103 = v102;
        unint64_t v104 = *(void *)(v136[2] + ((v102++ >> 3) & 0x1FFFFFFFFFFFFFF8));
      }
      while (((v104 >> v103) & 1) == 0);
      *(unsigned char *)(v137[1] + v103) = *(_DWORD *)(*((void *)&v158 + 1) + 4 * v101);
      *(_DWORD *)(*((void *)&v158 + 1) + 4 * v101++) >>= 8;
    }
    while (v101 < *((void *)&v159[0] + 1));
  }
  marisa::grimoire::vector::FlatVector::build(v139, (uint64_t)&v158);
  marisa::grimoire::trie::LoudsTrie::fill_cache((uint64_t)v134);
  if ((void)v158) {
    MEMORY[0x1D942B890](v158, 0x1000C8077774924);
  }
  if (v132)
  {
    unsigned __int8 v105 = operator new[](8 * v132, MEMORY[0x1E4FBA2D0]);
    bzero(v105, 8 * v132);
    uint64_t v106 = 0;
    uint64_t v107 = v105 + 1;
    do
    {
      *(v107 - 1) = *(_DWORD *)(v77 + 4 * v106);
      *uint64_t v107 = v106++;
      v107 += 2;
    }
    while (v132 != v106);
  }
  else
  {
    unsigned __int8 v105 = 0;
  }
  if (v79) {
    MEMORY[0x1D942B890](v79, 0x1000C8077774924);
  }
  unint64_t v108 = 126 - 2 * __clz(v132);
  if (v132) {
    uint64_t v109 = v108;
  }
  else {
    uint64_t v109 = 0;
  }
  std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *,false>((unint64_t)v105, &v105[2 * v132], v109, 1);
  if (v132)
  {
    uint64_t v110 = 0;
    unint64_t v111 = 0;
    do
    {
      while (1)
      {
        unint64_t v112 = v105[2 * v110];
        if (v111 >= v112) {
          break;
        }
        marisa::grimoire::vector::BitVector::push_back(v135, 0);
        ++v111;
      }
      if (v111 == v112)
      {
        marisa::grimoire::vector::BitVector::push_back(v135, 1);
        ++v111;
      }
      ++v110;
    }
    while (v110 != v132);
  }
  else
  {
    unint64_t v111 = 0;
  }
  for (; v111 < v138; ++v111)
    marisa::grimoire::vector::BitVector::push_back(v135, 0);
  marisa::grimoire::vector::BitVector::push_back(v135, 0);
  marisa::grimoire::vector::BitVector::build((marisa::grimoire::vector::BitVector *)v135, 0, 1);
  if (*((void *)v123 + 11))
  {
    unint64_t v113 = 0;
    uint64_t v114 = v105 + 1;
    do
    {
      int v115 = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)v135, *(v114 - 1));
      unsigned int v116 = *v114;
      v114 += 2;
      *(_DWORD *)(*(void *)(*((void *)v123 + 6) + (((unint64_t)v116 >> 5) & 0x7FFFFF8))
                + 16 * v116
                + 12) = v115;
      ++v113;
    }
    while (v113 < *((void *)v123 + 11));
  }
  else if (!v105)
  {
    goto LABEL_135;
  }
  MEMORY[0x1D942B890](v105, 0x1000C8077774924);
LABEL_135:
  if ((void)v152) {
    MEMORY[0x1D942B890](v152, 0x1000C8077774924);
  }
  marisa::grimoire::trie::LoudsTrie::swap(v121, (marisa::grimoire::trie::LoudsTrie *)v134);
  marisa::grimoire::trie::LoudsTrie::~LoudsTrie((marisa::grimoire::trie::LoudsTrie *)v134);
  std::basic_string<char16_t> v117 = *v122;
  *std::basic_string<char16_t> v122 = v133;
  uint64_t v133 = v117;
  return marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(&v133);
}

void sub_1D2CCCC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va1, a15);
  va_start(va, a15);
  uint64_t v22 = va_arg(va1, marisa::grimoire::trie::LoudsTrie *);
  uint64_t v19 = *(void *)(v17 - 160);
  if (v19) {
    MEMORY[0x1D942B890](v19, 0x1000C8077774924);
  }
  uint64_t v20 = *(void *)(v17 - 208);
  if (v20) {
    MEMORY[0x1D942B890](v20, 0x1000C8077774924);
  }
  v21.n128_u64[0] = v15;
  v21.n128_u64[1] = v16;
  if (v15) {
    MEMORY[0x1D942B890](v15, 0x1000C8077774924, v21);
  }
  if (STACK[0x500]) {
    MEMORY[0x1D942B890](STACK[0x500], 0x1000C8077774924, v21);
  }
  marisa::grimoire::trie::LoudsTrie::~LoudsTrie((marisa::grimoire::trie::LoudsTrie *)va1);
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)va);
  _Unwind_Resume(a1);
}

void sub_1D2CCCCC4()
{
}

void sub_1D2CCCCD4()
{
}

void sub_1D2CCCCE0()
{
  if (v0)
  {
    MEMORY[0x1D942B890](v0, 0x1000C8077774924, (__n128)0);
    JUMPOUT(0x1D2CCCDD4);
  }
  JUMPOUT(0x1D2CCCDD8);
}

void sub_1D2CCCD0C(void *a1, int a2)
{
  if (STACK[0x530]) {
    MEMORY[0x1D942B890](STACK[0x530], 0x1000C8077774924);
  }
  std::deque<marisa::grimoire::trie::Range>::~deque[abi:ne180100](v2 - 256);
  uint64_t v5 = *(void *)(v2 - 208);
  if (v5) {
    MEMORY[0x1D942B890](v5, 0x1000C8077774924);
  }
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/louds-trie.cc";
    exception[2] = 0x8000001AELL;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/lou"
                   "ds-trie.cc:430: MARISA_MEMORY_ERROR: std::bad_alloc";
  }
  JUMPOUT(0x1D2CCCDD8);
}

void sub_1D2CCCDCC()
{
}

marisa::grimoire::trie::LoudsTrie **marisa::Trie::map(marisa::grimoire::trie::LoudsTrie **this, const void *a2, unint64_t a3)
{
  if (!a2 && a3)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    exception[2] = 0x200000021;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:33: MARIS"
                   "A_NULL_ERROR: (ptr == NULL) && (size != 0)";
  }
  int v6 = (marisa::grimoire::trie::LoudsTrie *)operator new(0x470uLL, MEMORY[0x1E4FBA2D0]);
  if (!v6)
  {
    uint64_t v26 = 0;
    uint64_t v22 = __cxa_allocate_exception(0x20uLL);
    void *v22 = &unk_1F2A081F8;
    v22[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    v22[2] = 0x800000024;
    v22[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:36: MARISA_MEMO"
             "RY_ERROR: temp.get() == NULL";
  }
  marisa::grimoire::trie::LoudsTrie::LoudsTrie(v6);
  uint64_t v26 = v7;
  *(void *)&long long v23 = 0;
  *((void *)&v23 + 1) = -1;
  int v25 = -1;
  long long v8 = v23;
  *(void *)&long long v23 = a2;
  long long v27 = v8;
  long long v24 = a3;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  int v30 = -1;
  marisa::grimoire::io::Mapper::~Mapper((marisa::grimoire::io::Mapper *)&v27);
  unint64_t v9 = v26;
  uint64_t v10 = (unsigned char *)marisa::grimoire::io::Mapper::map_data((marisa::grimoire::io::Mapper *)&v23, 0x10uLL);
  if (*v10 != 87) {
    goto LABEL_10;
  }
  uint64_t v11 = 1u;
  do
  {
    if (v11 == 16) {
      goto LABEL_9;
    }
    uint64_t v12 = v11;
    int v13 = v10[v11];
    int v14 = marisa::grimoire::trie::Header::get_header(void)::buf[v11++];
  }
  while (v13 == v14);
  if ((unint64_t)(v12 - 1) <= 0xE)
  {
LABEL_10:
    uint64_t v20 = __cxa_allocate_exception(0x20uLL);
    *uint64_t v20 = &unk_1F2A081F8;
    v20[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/header.h";
    void v20[2] = 0xA00000015;
    v20[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/header.h:21: MARISA_FORMAT_ERROR: !test_header(ptr)";
  }
LABEL_9:
  marisa::grimoire::trie::LoudsTrie::LoudsTrie((marisa::grimoire::trie::LoudsTrie *)&v27);
  marisa::grimoire::trie::LoudsTrie::map_((marisa::grimoire::trie::LoudsTrie **)&v27, (marisa::grimoire::io::Mapper *)&v23);
  long long v15 = v31;
  long long v16 = v32;
  long long v31 = v23;
  long long v32 = v24;
  long long v23 = v15;
  long long v24 = v16;
  int v17 = v33;
  int v33 = v25;
  int v25 = v17;
  marisa::grimoire::trie::LoudsTrie::swap(v9, (marisa::grimoire::trie::LoudsTrie *)&v27);
  marisa::grimoire::trie::LoudsTrie::~LoudsTrie((marisa::grimoire::trie::LoudsTrie *)&v27);
  unint64_t v18 = *this;
  *this = v26;
  uint64_t v26 = v18;
  marisa::grimoire::io::Mapper::~Mapper((marisa::grimoire::io::Mapper *)&v23);
  return marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(&v26);
}

void sub_1D2CCD0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, marisa::grimoire::trie::LoudsTrie *a14, char a15)
{
}

uint64_t marisa::Trie::lookup(marisa::Trie *this, marisa::Agent *a2)
{
  uint64_t v2 = *(void *)this;
  if (!*(void *)this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    exception[2] = 0x100000057;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:87: MARIS"
                   "A_STATE_ERROR: trie_.get() == NULL";
  }
  uint64_t v4 = *((void *)a2 + 5);
  if (!v4)
  {
    marisa::Agent::init_state(a2);
    uint64_t v2 = *(void *)this;
    uint64_t v4 = *((void *)a2 + 5);
  }
  unint64_t v6 = 0;
  *(void *)(v4 + 96) = 0;
  int v33 = (marisa::grimoire::trie::Tail *)(v2 + 744);
  *(_DWORD *)(v4 + 108) = 0;
  while (1)
  {
    unint64_t v7 = *((void *)a2 + 1);
    if (v7 <= v6) {
      break;
    }
    uint64_t v8 = *((void *)a2 + 5);
    uint64_t v9 = *(unsigned int *)(v8 + 96);
    uint64_t v10 = *(unsigned int *)(v8 + 100);
    unint64_t v11 = (*(unsigned __int8 *)(*(void *)a2 + v10) ^ (unint64_t)(32 * v9) ^ v9) & *(void *)(v2 + 1056);
    uint64_t v12 = *(void *)(v2 + 1024);
    if (v9 != *(_DWORD *)(v12 + 12 * v11))
    {
      unint64_t v14 = marisa::grimoire::vector::BitVector::select0((marisa::grimoire::vector::BitVector *)v2, *(unsigned int *)(v8 + 96));
      uint64_t v15 = *(void *)(v2 + 16);
      if ((*(void *)(v15 + (((v14 + 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v14 + 1)))
      {
        unsigned int v16 = v14 - v9;
        *(_DWORD *)(v8 + 96) = v14 - v9;
        unint64_t v17 = v14 + 2;
        uint64_t v18 = 0xFFFFFFFFLL;
        while (1)
        {
          uint64_t v19 = v16;
          if ((*(void *)(*(void *)(v2 + 432) + (((unint64_t)v16 >> 3) & 0x1FFFFFF8)) >> v16))
          {
            if (v18 == 0xFFFFFFFFLL) {
              uint64_t v18 = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)(v2 + 416), v16);
            }
            else {
              ++v18;
            }
            uint64_t v20 = *(void *)(v2 + 720);
            unint64_t v21 = (unint64_t)(v20 * v18) >> 6;
            uint64_t v22 = (v20 * v18) & 0x3F;
            unint64_t v23 = v22 + v20;
            uint64_t v24 = *(void *)(v2 + 688);
            uint64_t v25 = *(void *)(v24 + 8 * v21) >> v22;
            if (v23 > 0x40) {
              v25 |= (2 * *(void *)(v24 + 8 * v21 + 8)) << (v22 ^ 0x3Fu);
            }
            unint64_t v26 = *(unsigned __int8 *)(*(void *)(v2 + 640) + v19) | ((*(_DWORD *)(v2 + 728) & v25) << 8);
            long long v27 = *(marisa::grimoire::trie::LoudsTrie **)(v2 + 1000);
            if (v27)
            {
              if (marisa::grimoire::trie::LoudsTrie::match_(v27, a2, v26)) {
                goto LABEL_32;
              }
            }
            else if (marisa::grimoire::trie::Tail::match(v33, a2, v26))
            {
              goto LABEL_32;
            }
            if (*(_DWORD *)(v8 + 100) != v10) {
              return 0;
            }
            unsigned int v16 = *(_DWORD *)(v8 + 96);
            uint64_t v15 = *(void *)(v2 + 16);
          }
          else if (*(unsigned __int8 *)(*(void *)(v2 + 640) + v16) == *(unsigned __int8 *)(*(void *)a2 + v10))
          {
            *(_DWORD *)(v8 + 100) = v10 + 1;
            goto LABEL_32;
          }
          *(_DWORD *)(v8 + 96) = ++v16;
          uint64_t v28 = *(void *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v17;
          ++v17;
          if ((v28 & 1) == 0) {
            return 0;
          }
        }
      }
      return 0;
    }
    unint64_t v13 = *(unsigned int *)(v12 + 12 * v11 + 8);
    if (v13 <= 0xFFFFFEFF)
    {
      uint64_t v29 = *(marisa::grimoire::trie::LoudsTrie **)(v2 + 1000);
      if (v29)
      {
        if ((marisa::grimoire::trie::LoudsTrie::match_(v29, a2, v13) & 1) == 0) {
          return 0;
        }
      }
      else if ((marisa::grimoire::trie::Tail::match(v33, a2, v13) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      *(_DWORD *)(v8 + 100) = v10 + 1;
    }
    *(_DWORD *)(v8 + 96) = *(_DWORD *)(*(void *)(v2 + 1024) + 12 * v11 + 4);
LABEL_32:
    unint64_t v6 = *(unsigned int *)(v4 + 100);
  }
  unint64_t v30 = *(unsigned int *)(v4 + 96);
  if ((*(void *)(*(void *)(v2 + 224) + ((v30 >> 3) & 0x1FFFFFF8)) >> v30))
  {
    *((void *)a2 + 3) = *(void *)a2;
    *((_DWORD *)a2 + 8) = v7;
    *((_DWORD *)a2 + 9) = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)(v2 + 208), v30);
    return 1;
  }
  return 0;
}

unint64_t marisa::Trie::reverse_lookup(marisa::Trie *this, marisa::Agent **a2)
{
  uint64_t v2 = *(void *)this;
  if (!*(void *)this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    exception[2] = 0x10000005FLL;
    __n128 v36 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:95: MARISA_STATE_E"
          "RROR: trie_.get() == NULL";
    goto LABEL_37;
  }
  if (!a2[5])
  {
    marisa::Agent::init_state((marisa::Agent *)a2);
    uint64_t v2 = *(void *)this;
  }
  unint64_t v5 = (unint64_t)a2[2];
  if (v5 >= *(void *)(v2 + 264))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/louds-trie.cc";
    exception[2] = 0x30000004ALL;
    __n128 v36 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/louds-trie.c"
          "c:74: MARISA_BOUND_ERROR: agent.query().id() >= size()";
LABEL_37:
    exception[3] = v36;
  }
  unint64_t v6 = a2[5];
  *((void *)v6 + 3) = 0;
  unint64_t v7 = *((void *)v6 + 4);
  if (v7 <= 0x1F)
  {
    if (v7 <= 0x10) {
      size_t v8 = 32;
    }
    else {
      size_t v8 = 2 * v7;
    }
    marisa::grimoire::vector::Vector<char>::realloc((uint64_t *)v6, v8);
    unint64_t v5 = (unint64_t)a2[2];
  }
  *((_DWORD *)v6 + 27) = 0;
  unint64_t result = marisa::grimoire::vector::BitVector::select1((marisa::grimoire::vector::BitVector *)(v2 + 208), v5);
  *((_DWORD *)v6 + 24) = result;
  if (!result) {
    goto LABEL_33;
  }
  while (1)
  {
    if ((*(void *)(*(void *)(v2 + 432) + ((result >> 3) & 0x1FFFFFF8)) >> result))
    {
      uint64_t v10 = *((void *)v6 + 3);
      int v11 = *(unsigned __int8 *)(*(void *)(v2 + 640) + result);
      uint64_t v12 = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)(v2 + 416), result);
      uint64_t v13 = *(void *)(v2 + 720);
      unint64_t v14 = (unint64_t)(v13 * v12) >> 6;
      uint64_t v15 = (v13 * v12) & 0x3F;
      unint64_t v16 = v15 + v13;
      uint64_t v17 = *(void *)(v2 + 688);
      uint64_t v18 = *(void *)(v17 + 8 * v14) >> v15;
      if (v16 > 0x40) {
        v18 |= (2 * *(void *)(v17 + 8 * v14 + 8)) << (v15 ^ 0x3Fu);
      }
      unint64_t v19 = v11 | ((*(_DWORD *)(v2 + 728) & v18) << 8);
      uint64_t v20 = *(marisa::grimoire::trie::LoudsTrie **)(v2 + 1000);
      if (v20) {
        unint64_t result = (unint64_t)marisa::grimoire::trie::LoudsTrie::restore_(v20, (marisa::Agent *)a2, v19);
      }
      else {
        unint64_t result = (unint64_t)marisa::grimoire::trie::Tail::restore((uint64_t *)(v2 + 744), a2[5], v19);
      }
      uint64_t v21 = *((void *)v6 + 3);
      if (v10 != v21)
      {
        uint64_t v22 = *((void *)v6 + 1);
        unint64_t v23 = (unsigned char *)(v22 + v21 - 1);
        if ((unint64_t)v23 > v22 + v10)
        {
          unint64_t v24 = v22 + v10 + 1;
          do
          {
            char v25 = *(unsigned char *)(v24 - 1);
            *(unsigned char *)(v24 - 1) = *v23;
            *v23-- = v25;
            BOOL v26 = v24++ >= (unint64_t)v23;
          }
          while (!v26);
        }
      }
    }
    else
    {
      char v37 = *(unsigned char *)(*(void *)(v2 + 640) + result);
      unint64_t result = (unint64_t)marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, &v37);
    }
    unint64_t v27 = *((unsigned int *)v6 + 24);
    if (*(void *)(v2 + 1064) >= v27) {
      break;
    }
    unint64_t result = marisa::grimoire::vector::BitVector::select1((marisa::grimoire::vector::BitVector *)v2, *((unsigned int *)v6 + 24))+ ~v27;
    *((_DWORD *)v6 + 24) = result;
  }
  uint64_t v28 = (marisa::Agent *)*((void *)v6 + 1);
  uint64_t v29 = *((void *)v6 + 3);
  unint64_t v30 = (marisa::Agent *)((char *)v28 + v29 - 1);
  if (v29) {
    BOOL v31 = v30 > v28;
  }
  else {
    BOOL v31 = 0;
  }
  if (v31)
  {
    unint64_t v32 = (unint64_t)v28 + 1;
    do
    {
      char v33 = *(unsigned char *)(v32 - 1);
      *(unsigned char *)(v32 - 1) = *(unsigned char *)v30;
      *(unsigned char *)unint64_t v30 = v33;
      unint64_t v30 = (marisa::Agent *)((char *)v30 - 1);
      BOOL v26 = v32++ >= (unint64_t)v30;
    }
    while (!v26);
LABEL_33:
    uint64_t v28 = (marisa::Agent *)*((void *)v6 + 1);
    uint64_t v29 = *((void *)v6 + 3);
  }
  a2[3] = v28;
  unsigned int v34 = a2[2];
  *((_DWORD *)a2 + 8) = v29;
  *((_DWORD *)a2 + 9) = v34;
  return result;
}

uint64_t marisa::Trie::predictive_search(marisa::Trie *this, marisa::Agent *a2)
{
  uint64_t v2 = *(void *)this;
  if (!*(void *)this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    exception[2] = 0x10000006FLL;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:111: MARI"
                   "SA_STATE_ERROR: trie_.get() == NULL";
  }
  uint64_t v4 = *((void *)a2 + 5);
  if (!v4)
  {
    marisa::Agent::init_state(a2);
    uint64_t v2 = *(void *)this;
    uint64_t v4 = *((void *)a2 + 5);
  }
  int v6 = *(_DWORD *)(v4 + 108);
  if (v6 == 2)
  {
    do
    {
      while (1)
      {
LABEL_48:
        uint64_t v39 = *(unsigned int *)(v4 + 104);
        uint64_t v40 = *(void *)(v4 + 56);
        if (*(void *)(v4 + 72) == v39)
        {
          *(_OWORD *)uint64_t v73 = xmmword_1D2D6F560;
          *(_DWORD *)&v73[16] = -1;
          unsigned int v41 = *(_DWORD *)(v40 + 20 * v39 - 20);
          int v42 = marisa::grimoire::vector::BitVector::select0((marisa::grimoire::vector::BitVector *)v2, v41);
          *(_DWORD *)uint64_t v73 = v42 - v41;
          *(_DWORD *)&v73[4] = v42 + 1;
          marisa::grimoire::vector::Vector<marisa::grimoire::trie::History>::push_back((uint64_t *)(v4 + 48), (__n128 *)v73);
          LODWORD(v39) = *(_DWORD *)(v4 + 104);
          uint64_t v40 = *(void *)(v4 + 56);
        }
        uint64_t v43 = (unsigned int *)(v40 + 20 * v39);
        unint64_t v44 = v43[1];
        unint64_t v45 = *(void *)(*(void *)(v2 + 16) + ((v44 >> 3) & 0x1FFFFFF8));
        v43[1] = v44 + 1;
        if ((v45 >> v44)) {
          break;
        }
        if (v39 == 1)
        {
LABEL_71:
          uint64_t result = 0;
          *(_DWORD *)(v4 + 108) = 4;
          return result;
        }
        uint64_t v52 = v40 + 20 * v39;
        ++*(_DWORD *)(v52 - 20);
        size_t v53 = *(unsigned int *)(v52 - 32);
        size_t v54 = *(void *)(v4 + 32);
        if (v54 < v53)
        {
          if (v54 <= v53 >> 1) {
            size_t v55 = v53;
          }
          else {
            size_t v55 = 2 * v54;
          }
          marisa::grimoire::vector::Vector<char>::realloc((uint64_t *)v4, v55);
          LODWORD(v39) = *(_DWORD *)(v4 + 104);
        }
        *(void *)(v4 + 24) = v53;
        *(_DWORD *)(v4 + 104) = v39 - 1;
      }
      *(_DWORD *)(v4 + 104) = v39 + 1;
      unint64_t v46 = *v43;
      if ((*(void *)(*(void *)(v2 + 432) + ((v46 >> 3) & 0x1FFFFFF8)) >> v46))
      {
        uint64_t v47 = v40 + 20 * v39;
        int v50 = *(_DWORD *)(v47 + 12);
        unint64_t v49 = (unsigned int *)(v47 + 12);
        int v48 = v50;
        if (v50 == -1) {
          unsigned int v51 = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)(v2 + 416), *v43);
        }
        else {
          unsigned int v51 = v48 + 1;
        }
        unsigned int *v49 = v51;
        uint64_t v56 = *(void *)(v2 + 720);
        unint64_t v57 = v56 * v51;
        unint64_t v58 = v57 >> 6;
        char v59 = (v56 * v51) & 0x3F;
        unint64_t v60 = (v57 & 0x3F) + v56;
        uint64_t v61 = *(void *)(v2 + 688);
        uint64_t v62 = *(void *)(v61 + 8 * (v57 >> 6)) >> (v57 & 0x3F);
        if (v60 > 0x40) {
          v62 |= (2 * *(void *)(v61 + 8 * v58 + 8)) << (v59 ^ 0x3Fu);
        }
        unint64_t v63 = *(unsigned __int8 *)(*(void *)(v2 + 640) + v46) | ((*(_DWORD *)(v2 + 728) & v62) << 8);
        float v64 = *(marisa::grimoire::trie::LoudsTrie **)(v2 + 1000);
        if (v64) {
          marisa::grimoire::trie::LoudsTrie::restore_(v64, a2, v63);
        }
        else {
          marisa::grimoire::trie::Tail::restore((uint64_t *)(v2 + 744), *((marisa::Agent **)a2 + 5), v63);
        }
      }
      else
      {
        v73[0] = *(unsigned char *)(*(void *)(v2 + 640) + v46);
        marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v4, v73);
      }
      int v65 = *(_DWORD *)(v4 + 24);
      *(_DWORD *)(v40 + 20 * v39 + 8) = v65;
      unint64_t v66 = *v43;
    }
    while (((*(void *)(*(void *)(v2 + 224) + ((v66 >> 3) & 0x1FFFFFF8)) >> v66) & 1) == 0);
    uint64_t v67 = v40 + 20 * v39;
    int v70 = *(_DWORD *)(v67 + 16);
    uint64_t v69 = (_DWORD *)(v67 + 16);
    int v68 = v70;
    if (v70 == -1) {
      int v38 = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)(v2 + 208), v66);
    }
    else {
      int v38 = v68 + 1;
    }
    *uint64_t v69 = v38;
    *((void *)a2 + 3) = *(void *)(v4 + 8);
    *((_DWORD *)a2 + 8) = v65;
  }
  else
  {
    if (v6 == 4) {
      return 0;
    }
    *(void *)(v4 + 24) = 0;
    unint64_t v8 = *(void *)(v4 + 32);
    if (v8 <= 0x3F)
    {
      if (v8 <= 0x20) {
        size_t v9 = 64;
      }
      else {
        size_t v9 = 2 * v8;
      }
      marisa::grimoire::vector::Vector<char>::realloc((uint64_t *)v4, v9);
    }
    *(void *)(v4 + 72) = 0;
    unint64_t v10 = *(void *)(v4 + 80);
    if (v10 <= 3)
    {
      if (v10 == 3) {
        uint64_t v11 = 6;
      }
      else {
        uint64_t v11 = 4;
      }
      marisa::grimoire::vector::Vector<marisa::grimoire::trie::History>::realloc((uint64_t *)(v4 + 48), v11);
    }
    unint64_t v12 = 0;
    *(_OWORD *)(v4 + 96) = xmmword_1D2D6F550;
    uint64_t v72 = (marisa::grimoire::trie::Tail *)(v2 + 744);
    while (*((void *)a2 + 1) > v12)
    {
      uint64_t v13 = *((void *)a2 + 5);
      uint64_t v14 = *(unsigned int *)(v13 + 96);
      uint64_t v15 = *(unsigned int *)(v13 + 100);
      unint64_t v16 = (*(unsigned __int8 *)(*(void *)a2 + v15) ^ (unint64_t)(32 * v14) ^ v14) & *(void *)(v2 + 1056);
      uint64_t v17 = *(void *)(v2 + 1024);
      if (v14 != *(_DWORD *)(v17 + 12 * v16))
      {
        unint64_t v20 = marisa::grimoire::vector::BitVector::select0((marisa::grimoire::vector::BitVector *)v2, *(unsigned int *)(v13 + 96));
        uint64_t v21 = *(void *)(v2 + 16);
        if ((*(void *)(v21 + (((v20 + 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v20 + 1)))
        {
          unsigned int v22 = v20 - v14;
          *(_DWORD *)(v13 + 96) = v20 - v14;
          unint64_t v23 = v20 + 2;
          uint64_t v24 = 0xFFFFFFFFLL;
          while (1)
          {
            uint64_t v25 = v22;
            if ((*(void *)(*(void *)(v2 + 432) + (((unint64_t)v22 >> 3) & 0x1FFFFFF8)) >> v22))
            {
              if (v24 == 0xFFFFFFFFLL) {
                uint64_t v24 = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)(v2 + 416), v22);
              }
              else {
                ++v24;
              }
              uint64_t v26 = *(void *)(v2 + 720);
              unint64_t v27 = (unint64_t)(v26 * v24) >> 6;
              uint64_t v28 = (v26 * v24) & 0x3F;
              unint64_t v29 = v28 + v26;
              uint64_t v30 = *(void *)(v2 + 688);
              uint64_t v31 = *(void *)(v30 + 8 * v27) >> v28;
              if (v29 > 0x40) {
                v31 |= (2 * *(void *)(v30 + 8 * v27 + 8)) << (v28 ^ 0x3Fu);
              }
              unint64_t v32 = *(unsigned __int8 *)(*(void *)(v2 + 640) + v25) | ((*(_DWORD *)(v2 + 728) & v31) << 8);
              char v33 = *(marisa::grimoire::trie::LoudsTrie **)(v2 + 1000);
              if (v33)
              {
                if (marisa::grimoire::trie::LoudsTrie::prefix_match_(v33, a2, v32)) {
                  goto LABEL_45;
                }
              }
              else if (marisa::grimoire::trie::Tail::prefix_match(v72, a2, v32))
              {
                goto LABEL_45;
              }
              if (*(_DWORD *)(v13 + 100) != v15) {
                goto LABEL_71;
              }
              unsigned int v22 = *(_DWORD *)(v13 + 96);
              uint64_t v21 = *(void *)(v2 + 16);
            }
            else if (*(unsigned __int8 *)(*(void *)(v2 + 640) + v22) == *(unsigned __int8 *)(*(void *)a2 + v15))
            {
              v73[0] = *(unsigned char *)(*(void *)(v2 + 640) + v22);
              marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v13, v73);
              ++*(_DWORD *)(v13 + 100);
              goto LABEL_45;
            }
            *(_DWORD *)(v13 + 96) = ++v22;
            uint64_t v34 = *(void *)(v21 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v23;
            ++v23;
            if ((v34 & 1) == 0) {
              goto LABEL_71;
            }
          }
        }
        goto LABEL_71;
      }
      uint64_t v18 = v17 + 12 * v16;
      unint64_t v19 = *(unsigned int *)(v18 + 8);
      if (v19 <= 0xFFFFFEFF)
      {
        unsigned int v35 = *(marisa::grimoire::trie::LoudsTrie **)(v2 + 1000);
        if (v35)
        {
          if ((marisa::grimoire::trie::LoudsTrie::prefix_match_(v35, a2, v19) & 1) == 0) {
            goto LABEL_71;
          }
        }
        else if (!marisa::grimoire::trie::Tail::prefix_match(v72, a2, v19))
        {
          goto LABEL_71;
        }
      }
      else
      {
        v73[0] = *(_DWORD *)(v18 + 8);
        marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v13, v73);
        ++*(_DWORD *)(v13 + 100);
      }
      *(_DWORD *)(v13 + 96) = *(_DWORD *)(*(void *)(v2 + 1024) + 12 * v16 + 4);
LABEL_45:
      unint64_t v12 = *(unsigned int *)(v4 + 100);
    }
    *(void *)&v73[12] = -1;
    *(void *)uint64_t v73 = *(unsigned int *)(v4 + 96);
    *(_DWORD *)&v73[8] = *(void *)(v4 + 24);
    marisa::grimoire::vector::Vector<marisa::grimoire::trie::History>::push_back((uint64_t *)(v4 + 48), (__n128 *)v73);
    *(_DWORD *)(v4 + 104) = 1;
    unint64_t v36 = *(unsigned int *)(v4 + 96);
    if (((*(void *)(*(void *)(v2 + 224) + ((v36 >> 3) & 0x1FFFFFF8)) >> v36) & 1) == 0) {
      goto LABEL_48;
    }
    uint64_t v37 = *(void *)(v4 + 24);
    *((void *)a2 + 3) = *(void *)(v4 + 8);
    *((_DWORD *)a2 + 8) = v37;
    int v38 = marisa::grimoire::vector::BitVector::rank1((marisa::grimoire::vector::BitVector *)(v2 + 208), v36);
  }
  *((_DWORD *)a2 + 9) = v38;
  return 1;
}

uint64_t marisa::Trie::num_keys(marisa::Trie *this)
{
  if (!this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    exception[2] = 0x10000007CLL;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:124: MARI"
                   "SA_STATE_ERROR: trie_.get() == NULL";
  }
  return *((void *)this + 33);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v280 = *MEMORY[0x1E4F143B8];
  memset(&v276, 0, sizeof(v276));
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5 == *(void *)(a2 + 16)) {
    operator new();
  }
  int v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
  std::basic_string<char16_t>::operator=(&v276, v6);
  std::basic_string<char16_t>::size_type size = HIBYTE(v276.__r_.__value_.__r.__words[2]);
  if ((v276.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v276.__r_.__value_.__l.__size_;
  }
  if (!size) {
    operator new();
  }
  morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getLastWord(&v275, (uint64_t)&v276);
  if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v8 = &v275;
  }
  else {
    unint64_t v8 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
  }
  if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v9 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v9 = v275.__r_.__value_.__l.__size_;
  }
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[14];
  __str.__r_.__value_.__r.__words[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v10, (uint64_t)&__str, (const UChar *)v8, v9)
    && (__str.__r_.__value_.__r.__words[0] & v11) == v11)
  {
    goto LABEL_30;
  }
  morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::trimEnd(&__str, (uint64_t)&v275);
  std::basic_string<char16_t>::size_type v12 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
  if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v12 = v275.__r_.__value_.__l.__size_;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type v13 = __str.__r_.__value_.__l.__size_;
    if (v12 == __str.__r_.__value_.__l.__size_) {
      goto LABEL_25;
    }
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::basic_string<char16_t>::size_type v13 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if (v12 == HIBYTE(__str.__r_.__value_.__r.__words[2])) {
      goto LABEL_25;
    }
    p_str = &__str;
  }
  uint64_t v15 = a1[1];
  uint64_t v16 = a1[14];
  __p.__r_.__value_.__r.__words[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v15, (uint64_t)&__p, (const UChar *)p_str, v13)
    && (__p.__r_.__value_.__r.__words[0] & v16) == v16)
  {
    std::basic_string<char16_t>::operator=(&v275, &__str);
LABEL_28:
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
LABEL_30:
    uint64_t v17 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[3]);
    uint64_t v18 = v17;
    unint64_t v19 = (void *)(a3 + 8);
    if ((void *)(a3 + 8) == v17) {
      unint64_t v20 = 0;
    }
    else {
      unint64_t v20 = (unsigned __int16 *)(v17 + 13);
    }
    {
      operator new();
    }
    if (v19 == v18) {
      goto LABEL_45;
    }
    uint64_t v21 = morphun::grammar::synthesis::TrGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap;
    npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Case>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap);
    uint64_t v24 = *(void *)(v21 + 8);
    uint64_t v22 = v21 + 8;
    uint64_t v23 = v24;
    if (!v24) {
      goto LABEL_42;
    }
    uint64_t v25 = v22;
    do
    {
      BOOL v26 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v23 + 32), v20);
      unint64_t v27 = (uint64_t *)(v23 + 8);
      if (!v26)
      {
        unint64_t v27 = (uint64_t *)v23;
        uint64_t v25 = v23;
      }
      uint64_t v23 = *v27;
    }
    while (*v27);
    if (v25 == v22
      || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v20, (unsigned __int16 *)(v25 + 32)))
    {
LABEL_42:
      uint64_t v25 = v22;
    }
    if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Case>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap)
       + 8 == v25)
LABEL_45:
      signed int v268 = 0;
    else {
      signed int v268 = *(_DWORD *)(v25 + 56);
    }
    uint64_t v28 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[4]);
    unint64_t v29 = v28;
    if (v19 == v28) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = (unsigned __int16 *)(v28 + 13);
    }
    {
      operator new();
    }
    if (v19 == v29) {
      goto LABEL_61;
    }
    uint64_t v31 = morphun::grammar::synthesis::TrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
    npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Count>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
    uint64_t v34 = *(void *)(v31 + 8);
    uint64_t v32 = v31 + 8;
    uint64_t v33 = v34;
    if (!v34) {
      goto LABEL_58;
    }
    uint64_t v35 = v32;
    do
    {
      BOOL v36 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v33 + 32), v30);
      uint64_t v37 = (uint64_t *)(v33 + 8);
      if (!v36)
      {
        uint64_t v37 = (uint64_t *)v33;
        uint64_t v35 = v33;
      }
      uint64_t v33 = *v37;
    }
    while (*v37);
    if (v35 == v32
      || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v30, (unsigned __int16 *)(v35 + 32)))
    {
LABEL_58:
      uint64_t v35 = v32;
    }
    if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Count>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
       + 8 == v35)
LABEL_61:
      int v266 = 0;
    else {
      int v266 = *(_DWORD *)(v35 + 56);
    }
    int v38 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[5]);
    uint64_t v39 = v38;
    if (v19 == v38) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = (unsigned __int16 *)(v38 + 13);
    }
    {
      operator new();
    }
    if (v19 == v39) {
      goto LABEL_77;
    }
    uint64_t v41 = morphun::grammar::synthesis::TrGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap;
    npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Person>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap);
    uint64_t v44 = *(void *)(v41 + 8);
    uint64_t v42 = v41 + 8;
    uint64_t v43 = v44;
    if (!v44) {
      goto LABEL_74;
    }
    uint64_t v45 = v42;
    do
    {
      BOOL v46 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v43 + 32), v40);
      uint64_t v47 = (uint64_t *)(v43 + 8);
      if (!v46)
      {
        uint64_t v47 = (uint64_t *)v43;
        uint64_t v45 = v43;
      }
      uint64_t v43 = *v47;
    }
    while (*v47);
    if (v45 == v42
      || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v40, (unsigned __int16 *)(v45 + 32)))
    {
LABEL_74:
      uint64_t v45 = v42;
    }
    if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Person>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getPerson(std::basic_string<char16_t> const*)::valueMap)
       + 8 == v45)
LABEL_77:
      int v48 = 0;
    else {
      int v48 = *(_DWORD *)(v45 + 56);
    }
    unint64_t v49 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[8]);
    int v50 = v49;
    if (v19 == v49) {
      unsigned int v51 = 0;
    }
    else {
      unsigned int v51 = (unsigned __int16 *)(v49 + 13);
    }
    int v269 = v48;
    {
      operator new();
    }
    if (v19 == v50) {
      goto LABEL_93;
    }
    uint64_t v52 = morphun::grammar::synthesis::TrGrammarSynthesizer::getCopula(std::basic_string<char16_t> const*)::valueMap;
    npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Copula>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getCopula(std::basic_string<char16_t> const*)::valueMap);
    uint64_t v55 = *(void *)(v52 + 8);
    uint64_t v53 = v52 + 8;
    uint64_t v54 = v55;
    if (!v55) {
      goto LABEL_90;
    }
    uint64_t v56 = v53;
    do
    {
      BOOL v57 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v54 + 32), v51);
      unint64_t v58 = (uint64_t *)(v54 + 8);
      if (!v57)
      {
        unint64_t v58 = (uint64_t *)v54;
        uint64_t v56 = v54;
      }
      uint64_t v54 = *v58;
    }
    while (*v58);
    if (v56 == v53
      || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v51, (unsigned __int16 *)(v56 + 32)))
    {
LABEL_90:
      uint64_t v56 = v53;
    }
    if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Copula>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getCopula(std::basic_string<char16_t> const*)::valueMap)
       + 8 == v56)
LABEL_93:
      int v265 = 0;
    else {
      int v265 = *(_DWORD *)(v56 + 56);
    }
    char v59 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[9]);
    unint64_t v60 = v59;
    if (v19 == v59) {
      uint64_t v61 = 0;
    }
    else {
      uint64_t v61 = (unsigned __int16 *)(v59 + 13);
    }
    {
      operator new();
    }
    if (v19 == v60) {
      goto LABEL_109;
    }
    uint64_t v62 = morphun::grammar::synthesis::TrGrammarSynthesizer::getTense(std::basic_string<char16_t> const*)::valueMap;
    npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Tense>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getTense(std::basic_string<char16_t> const*)::valueMap);
    uint64_t v65 = *(void *)(v62 + 8);
    uint64_t v63 = v62 + 8;
    uint64_t v64 = v65;
    if (!v65) {
      goto LABEL_106;
    }
    uint64_t v66 = v63;
    do
    {
      BOOL v67 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v64 + 32), v61);
      int v68 = (uint64_t *)(v64 + 8);
      if (!v67)
      {
        int v68 = (uint64_t *)v64;
        uint64_t v66 = v64;
      }
      uint64_t v64 = *v68;
    }
    while (*v68);
    if (v66 == v63
      || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v61, (unsigned __int16 *)(v66 + 32)))
    {
LABEL_106:
      uint64_t v66 = v63;
    }
    if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Tense>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getTense(std::basic_string<char16_t> const*)::valueMap)
       + 8 == v66)
LABEL_109:
      unsigned int v264 = 0;
    else {
      unsigned int v264 = *(_DWORD *)(v66 + 56);
    }
    uint64_t v69 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[7]);
    if (v19 == v69) {
      int v70 = 0;
    }
    else {
      int v70 = (unsigned __int16 *)(v69 + 13);
    }
    if (v19 == v69)
    {
      int v71 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[6]);
      if (v19 == v71) {
        int v70 = 0;
      }
      else {
        int v70 = (unsigned __int16 *)(v71 + 13);
      }
    }
    {
      operator new();
    }
    if (!v70) {
      goto LABEL_129;
    }
    uint64_t v72 = morphun::grammar::synthesis::TrGrammarSynthesizer::getPronoun(std::basic_string<char16_t> const*)::valueMap;
    npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Pronoun>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getPronoun(std::basic_string<char16_t> const*)::valueMap);
    uint64_t v75 = *(void *)(v72 + 8);
    uint64_t v73 = v72 + 8;
    uint64_t v74 = v75;
    if (!v75) {
      goto LABEL_126;
    }
    uint64_t v76 = v73;
    do
    {
      BOOL v77 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v74 + 32), v70);
      std::basic_string<char16_t> v78 = (uint64_t *)(v74 + 8);
      if (!v77)
      {
        std::basic_string<char16_t> v78 = (uint64_t *)v74;
        uint64_t v76 = v74;
      }
      uint64_t v74 = *v78;
    }
    while (*v78);
    if (v76 == v73
      || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v70, (unsigned __int16 *)(v76 + 32)))
    {
LABEL_126:
      uint64_t v76 = v73;
    }
    if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Pronoun>>(morphun::grammar::synthesis::TrGrammarSynthesizer::getPronoun(std::basic_string<char16_t> const*)::valueMap)
       + 8 == v76)
LABEL_129:
      unsigned int v79 = 0;
    else {
      unsigned int v79 = *(_DWORD *)(v76 + 56);
    }
    memset(&v274, 0, sizeof(v274));
    BOOL v267 = morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::endsWithNumber((uint64_t)&v276);
    if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v80 = &v275;
    }
    else {
      long long v80 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
    }
    if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v81 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v81 = v275.__r_.__value_.__l.__size_;
    }
    uint64_t v82 = a1[1];
    uint64_t v83 = a1[16];
    __str.__r_.__value_.__r.__words[0] = 0;
    CombinedBinaryuint64_t Type = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v82, (uint64_t)&__str, (const UChar *)v80, v81);
    BOOL v86 = (v83 & ~__str.__r_.__value_.__r.__words[0]) == 0 && CombinedBinaryType != 0;
    std::basic_string<char16_t>::size_type v87 = HIBYTE(v276.__r_.__value_.__r.__words[2]);
    uint64_t v88 = &v276;
    if ((v276.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::basic_string<char16_t>::size_type v87 = v276.__r_.__value_.__l.__size_;
      uint64_t v88 = (std::basic_string<char16_t> *)v276.__r_.__value_.__r.__words[0];
    }
    if (!v87)
    {
LABEL_271:
      std::basic_string<char16_t> __dst = 0;
      unint64_t v272 = 0;
      uint64_t v273 = 0;
      goto LABEL_272;
    }
    unsigned int v89 = (char *)v88;
    while (*(_WORD *)v89 != 32)
    {
      v89 += 2;
      if (!--v87) {
        goto LABEL_271;
      }
    }
    if (v89 - (char *)v88 == -2) {
      goto LABEL_271;
    }
    unint64_t v90 = (char *)morphun::grammar::synthesis::POSSESSIVE_COMPOUND_SUFFIXES;
    while (1)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, v90);
      if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v92 = &v275;
      }
      else {
        uint64_t v92 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
      }
      if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v93 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v93 = v275.__r_.__value_.__l.__size_;
      }
      unint64_t v94 = HIBYTE(v273);
      if (v273 >= 0) {
        p_dst = (unsigned __int16 *)&__dst;
      }
      else {
        p_dst = (unsigned __int16 *)__dst;
      }
      if (v273 < 0) {
        unint64_t v94 = v272;
      }
      std::basic_string<char16_t>::size_type v96 = v93 - v94;
      if (v93 < v94) {
        goto LABEL_264;
      }
      if (v94)
      {
        uint64_t v97 = -(uint64_t)v94;
        std::basic_string<char16_t>::size_type v98 = (char *)v92 + 2 * v93;
        do
        {
          int v99 = *(unsigned __int16 *)&v98[2 * v97];
          int v101 = *p_dst++;
          int v100 = v101;
        }
        while (v101 == v99 && v97++ != -1);
        if (v100 != v99) {
          goto LABEL_264;
        }
      }
      std::basic_string<char16_t>::basic_string(&__str, &v275, 0, v96, v91);
      if (morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::endsWithNumber((uint64_t)&__str))
      {
        LOBYTE(v103) = 0;
        int v104 = 2;
        goto LABEL_258;
      }
      if (morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneToken(a1[2], (uint64_t)&__str)) {
        goto LABEL_204;
      }
      unsigned __int8 v105 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? &__str
           : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      uint64_t v106 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? HIBYTE(__str.__r_.__value_.__r.__words[2])
           : __str.__r_.__value_.__l.__size_;
      uint64_t v107 = a1[1];
      uint64_t v108 = a1[15];
      __p.__r_.__value_.__r.__words[0] = 0;
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v107, (uint64_t)&__p, (const UChar *)v105, v106))
      {
        if ((__p.__r_.__value_.__r.__words[0] & v108) == v108) {
          goto LABEL_204;
        }
      }
      uint64_t v109 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? &__str
           : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      uint64_t v110 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? HIBYTE(__str.__r_.__value_.__r.__words[2])
           : __str.__r_.__value_.__l.__size_;
      uint64_t v111 = a1[1];
      uint64_t v112 = a1[16];
      __p.__r_.__value_.__r.__words[0] = 0;
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v111, (uint64_t)&__p, (const UChar *)v109, v110))
      {
        if ((__p.__r_.__value_.__r.__words[0] & v112) == v112)
        {
LABEL_204:
          uint64_t v116 = a1[1];
          std::basic_string<char16_t> v117 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
               ? &__str
               : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
          uint64_t v118 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
               ? HIBYTE(__str.__r_.__value_.__r.__words[2])
               : __str.__r_.__value_.__l.__size_;
          __p.__r_.__value_.__r.__words[0] = 0;
          if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v116, (uint64_t)&__p, (const UChar *)v117, v118))
          {
            uint64_t v119 = (v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                 ? &v275
                 : (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
            uint64_t v120 = (v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                 ? HIBYTE(v275.__r_.__value_.__r.__words[2])
                 : v275.__r_.__value_.__l.__size_;
            uint64_t v121 = a1[1];
            uint64_t v122 = a1[15];
            __p.__r_.__value_.__r.__words[0] = 0;
            if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v121, (uint64_t)&__p, (const UChar *)v119, v120)|| (__p.__r_.__value_.__r.__words[0] & v122) != v122)
            {
              unint64_t v140 = HIBYTE(v273);
              if (v273 < 0) {
                unint64_t v140 = v272;
              }
              if (v140 > 2
                || !morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneToken(a1[2], (uint64_t)&v275))
              {
                LOBYTE(v103) = 1;
                int v104 = 1;
                goto LABEL_258;
              }
            }
          }
        }
      }
      morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::revertLastConsonantAssimilation(&__p, (uint64_t)&__str, v113, v114, v115);
      std::basic_string<char16_t>::size_type v123 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v123 = __p.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::size_type v124 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v124 = __str.__r_.__value_.__l.__size_;
      }
      if (v123 == v124)
      {
        if (!v123) {
          goto LABEL_248;
        }
        int v125 = &__str;
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v125 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        }
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
        }
        while (v125->__r_.__value_.__s.__data_[0] == p_p->__r_.__value_.__s.__data_[0])
        {
          p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
          int v125 = (std::basic_string<char16_t> *)((char *)v125 + 2);
          if (!--v123) {
            goto LABEL_248;
          }
        }
      }
      if (morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneToken(a1[2], (uint64_t)&__p)) {
        goto LABEL_618;
      }
      uint64_t v127 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? &__p
           : (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      uint64_t v128 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? HIBYTE(__p.__r_.__value_.__r.__words[2])
           : __p.__r_.__value_.__l.__size_;
      uint64_t v129 = a1[1];
      uint64_t v130 = a1[15];
      v277.__r_.__value_.__r.__words[0] = 0;
      BOOL v131 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v129, (uint64_t)&v277, (const UChar *)v127, v128)&& (v277.__r_.__value_.__r.__words[0] & v130) == v130;
      if (v131
        || ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (unint64_t v132 = &__p)
          : (unint64_t v132 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0]),
            (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (std::basic_string<char16_t>::size_type v133 = HIBYTE(__p.__r_.__value_.__r.__words[2]))
          : (std::basic_string<char16_t>::size_type v133 = __p.__r_.__value_.__l.__size_),
            (uint64_t v134 = a1[1],
             uint64_t v135 = a1[16],
             v277.__r_.__value_.__r.__words[0] = 0,
             morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v134, (uint64_t)&v277, (const UChar *)v132, v133))&& (v277.__r_.__value_.__r.__words[0] & v135) == v135))
      {
LABEL_618:
        uint64_t v136 = a1[1];
        std::basic_string<char16_t> v137 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
             ? &__p
             : (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
        uint64_t v138 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
             ? HIBYTE(__p.__r_.__value_.__r.__words[2])
             : __p.__r_.__value_.__l.__size_;
        v277.__r_.__value_.__r.__words[0] = 0;
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v136, (uint64_t)&v277, (const UChar *)v137, v138))
        {
          unint64_t v139 = HIBYTE(v273);
          if (v273 < 0) {
            unint64_t v139 = v272;
          }
          if (v139 > 2
            || !morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneToken(a1[2], (uint64_t)&v275))
          {
            int v103 = 1;
            goto LABEL_255;
          }
        }
      }
LABEL_248:
      int v103 = 0;
LABEL_255:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      int v104 = v103;
LABEL_258:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__str.__r_.__value_.__l.__data_);
        if (!v104)
        {
LABEL_263:
          if (v103) {
            goto LABEL_268;
          }
LABEL_264:
          int v104 = 0;
          goto LABEL_265;
        }
      }
      else if (!v104)
      {
        goto LABEL_263;
      }
      if (v103) {
        goto LABEL_270;
      }
LABEL_265:
      if (SHIBYTE(v273) < 0) {
        operator delete(__dst);
      }
      if (v104)
      {
LABEL_270:
        int v48 = v269;
        if (v104 == 2) {
          goto LABEL_271;
        }
LABEL_272:
        if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v141 = &v275;
        }
        else {
          uint64_t v141 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
        }
        if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v142 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v142 = v275.__r_.__value_.__l.__size_;
        }
        uint64_t v143 = a1[1];
        uint64_t v144 = a1[14];
        __str.__r_.__value_.__r.__words[0] = 0;
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v143, (uint64_t)&__str, (const UChar *)v141, v142))
        {
          BOOL v145 = (__str.__r_.__value_.__r.__words[0] & v144) == v144;
        }
        else
        {
          BOOL v145 = 0;
        }
        if (!v145)
        {
          if (v86 || v267)
          {
            if (!v86) {
              goto LABEL_284;
            }
LABEL_288:
            morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getLastWord(&__str, (uint64_t)&v276);
            std::basic_string<char16_t>::size_type v148 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v148 = __str.__r_.__value_.__l.__size_;
            }
            std::basic_string<char16_t>::size_type v149 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
            if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v149 = v275.__r_.__value_.__l.__size_;
            }
            if (v148 == v149)
            {
              if (v148)
              {
                uint64_t v150 = &v275;
                if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  uint64_t v150 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
                }
                int v151 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  int v151 = &__str;
                }
                while (v150->__r_.__value_.__s.__data_[0] == v151->__r_.__value_.__s.__data_[0])
                {
                  int v151 = (std::basic_string<char16_t> *)((char *)v151 + 2);
                  uint64_t v150 = (std::basic_string<char16_t> *)((char *)v150 + 2);
                  if (!--v148) {
                    goto LABEL_300;
                  }
                }
                goto LABEL_311;
              }
LABEL_300:
              BOOL v154 = v266 == 2 || v48 != 0 || v79 != 0;
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
LABEL_312:
              }
                operator delete(__str.__r_.__value_.__l.__data_);
            }
            else
            {
LABEL_311:
              BOOL v154 = 0;
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                goto LABEL_312;
              }
            }
            if (v154)
            {
              std::basic_string<char16_t>::size_type v155 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
              if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v155 = v275.__r_.__value_.__l.__size_;
              }
              unint64_t v156 = HIBYTE(v273);
              if (v273 < 0) {
                unint64_t v156 = v272;
              }
              std::basic_string<char16_t>::resize(&v275, v155 - v156, 0);
              std::basic_string<char16_t>::size_type v157 = HIBYTE(v276.__r_.__value_.__r.__words[2]);
              if ((v276.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v157 = v276.__r_.__value_.__l.__size_;
              }
              unint64_t v158 = HIBYTE(v273);
              if (v273 < 0) {
                unint64_t v158 = v272;
              }
              std::basic_string<char16_t>::resize(&v276, v157 - v158, 0);
              morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::revertLastConsonantAssimilation(&__str, (uint64_t)&v275, v159, v160, v161);
              std::basic_string<char16_t>::size_type v162 = v275.__r_.__value_.__l.__size_;
              if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v162 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
              }
              std::basic_string<char16_t>::size_type v163 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              char v164 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v163 = __str.__r_.__value_.__l.__size_;
              }
              if (v162 != v163) {
                goto LABEL_335;
              }
              if (v162)
              {
                uint64_t v165 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v165 = &__str;
                }
                int v166 = &v275;
                if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  int v166 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
                }
                while (v165->__r_.__value_.__s.__data_[0] == v166->__r_.__value_.__s.__data_[0])
                {
                  int v166 = (std::basic_string<char16_t> *)((char *)v166 + 2);
                  uint64_t v165 = (std::basic_string<char16_t> *)((char *)v165 + 2);
                  if (!--v162) {
                    goto LABEL_338;
                  }
                }
LABEL_335:
                std::basic_string<char16_t>::operator=(&v275, &__str);
                morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::revertLastConsonantAssimilation(&__p, (uint64_t)&v276, v167, v168, v169);
                if (SHIBYTE(v276.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v276.__r_.__value_.__l.__data_);
                }
                std::basic_string<char16_t> v276 = __p;
                char v164 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              }
LABEL_338:
              if (v164 < 0) {
                operator delete(__str.__r_.__value_.__l.__data_);
              }
            }
            int v146 = 1;
LABEL_341:
            if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v170 = &v275;
            }
            else {
              int v170 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
            }
            if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v171 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v171 = v275.__r_.__value_.__l.__size_;
            }
            unsigned int VowelGroup = morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getVowelGroup(a1, (const UChar *)v170, v171);
            if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v173 = &v275;
            }
            else {
              v173 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
            }
            if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v174 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v174 = v275.__r_.__value_.__l.__size_;
            }
            uint64_t v175 = a1[1];
            uint64_t v176 = a1[14];
            __str.__r_.__value_.__r.__words[0] = 0;
            v177 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v175, (uint64_t)&__str, (const UChar *)v173, v174);
            BOOL v179 = (v176 & ~__str.__r_.__value_.__r.__words[0]) == 0 && v177 != 0;
            if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v180 = &v275;
            }
            else {
              uint64_t v180 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
            }
            if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v181 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v181 = v275.__r_.__value_.__l.__size_;
            }
            uint64_t v182 = a1[1];
            uint64_t v183 = a1[15];
            __str.__r_.__value_.__r.__words[0] = 0;
            uint64_t v184 = (std::basic_string<char16_t> *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v182, (uint64_t)&__str, (const UChar *)v180, v181);
            BOOL v186 = (v183 & ~__str.__r_.__value_.__r.__words[0]) == 0 && v184 != 0;
            if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&v270, v275.__r_.__value_.__l.__data_, v275.__r_.__value_.__l.__size_);
            }
            else {
              std::basic_string<char16_t> v270 = v275;
            }
            if (v266 == 2)
            {
              if (VowelGroup >= 2)
              {
                std::basic_string<char16_t>::append(&v274, L"lar", 3uLL);
                unsigned int VowelGroup = 2;
                if (v146)
                {
                  v187 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECA3B8;
LABEL_380:
                  std::basic_string<char16_t>::append(&v274, v187, 1uLL);
                }
              }
              else
              {
                std::basic_string<char16_t>::append(&v274, L"ler", 3uLL);
                unsigned int VowelGroup = 0;
                if (v146)
                {
                  v187 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECCAFC;
                  goto LABEL_380;
                }
              }
              uint64_t v184 = std::basic_string<char16_t>::operator=(&v270, &v274);
            }
            if (v48 | v79)
            {
              memset(&__str, 0, sizeof(__str));
              if (v48 == 3 && v79 <= 1)
              {
                uint64_t v188 = morphun::util::LocaleUtils::TURKISH((morphun::util::LocaleUtils *)v184);
                if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v188, (uint64_t)&v270)) {
                  std::basic_string<char16_t>::push_back(&__str, 115);
                }
                std::basic_string<char16_t>::push_back(&__str, morphun::grammar::synthesis::TrGrammarSynthesizer::getAffix(morphun::grammar::synthesis::TrGrammarSynthesizer::VowelGroup)::AFFIX[VowelGroup]);
                goto LABEL_388;
              }
              if (v79 <= 1) {
                unsigned int v79 = 1;
              }
              if (v48 == 3 && v79 == 2)
              {
                if (v266 == 2)
                {
                  if (v146) {
                    goto LABEL_388;
                  }
                  if (VowelGroup == 2)
                  {
                    std::basic_string<char16_t>::push_back(&__str, 305);
LABEL_520:
                    unsigned int VowelGroup = 2;
                    goto LABEL_388;
                  }
                  std::basic_string<char16_t>::push_back(&__str, 105);
                }
                else
                {
                  if ((VowelGroup & 0xFFFFFFFE) == 2)
                  {
                    std::basic_string<char16_t>::append(&__str, aLar_0, 4uLL);
                    goto LABEL_520;
                  }
                  std::basic_string<char16_t>::append(&__str, word_1D2ECA3CE, 4uLL);
                }
                unsigned int VowelGroup = 0;
                goto LABEL_388;
              }
              uint64_t v199 = morphun::util::LocaleUtils::TURKISH((morphun::util::LocaleUtils *)v184);
              if ((morphun::dictionary::PhraseProperties::isEndsWithVowel(v199, (uint64_t)&v270) & 1) == 0) {
                std::basic_string<char16_t>::push_back(&__str, morphun::grammar::synthesis::TrGrammarSynthesizer::getAffix(morphun::grammar::synthesis::TrGrammarSynthesizer::VowelGroup)::AFFIX[VowelGroup]);
              }
              if (v48 == 1) {
                std::basic_string<char16_t>::value_type v200 = 109;
              }
              else {
                std::basic_string<char16_t>::value_type v200 = 110;
              }
              std::basic_string<char16_t>::push_back(&__str, v200);
              if (v79 == 2)
              {
                std::basic_string<char16_t>::append(&__str, 1uLL, morphun::grammar::synthesis::TrGrammarSynthesizer::getAffix(morphun::grammar::synthesis::TrGrammarSynthesizer::VowelGroup)::AFFIX[VowelGroup]);
                std::basic_string<char16_t>::append(&__str, 1uLL, 122);
              }
LABEL_388:
              if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v270.__r_.__value_.__l.__data_);
              }
              std::basic_string<char16_t> v270 = __str;
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                v189 = &v270;
              }
              else {
                v189 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
              }
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v190 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              }
              else {
                std::basic_string<char16_t>::size_type v190 = __str.__r_.__value_.__l.__size_;
              }
              uint64_t v184 = std::basic_string<char16_t>::append(&v274, (const std::basic_string<char16_t>::value_type *)v189, v190);
              int v146 = 1;
            }
            memset(&__str, 0, sizeof(__str));
            if (v268)
            {
              uint64_t v191 = morphun::util::LocaleUtils::TURKISH((morphun::util::LocaleUtils *)v184);
              if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v191, (uint64_t)&v270))
              {
                uint64_t v192 = v146 ^ 1u;
                int v193 = (const std::basic_string<char16_t>::value_type *)((char *)&morphun::grammar::synthesis::POSSESSIVE
                                                                       + 8 * v268
                                                                       + 4 * v192);
                if (*v193)
                {
                  uint64_t v194 = 0;
                  v195 = (char *)&morphun::grammar::synthesis::POSSESSIVE + ((4 * v192) | (8 * v268)) + 2;
                  do
                    std::basic_string<char16_t>::size_type v196 = v194 + 1;
                  while (*(unsigned __int16 *)&v195[2 * v194++]);
                }
                else
                {
                  std::basic_string<char16_t>::size_type v196 = 0;
                }
                std::basic_string<char16_t>::append(&__str, v193, v196);
              }
              int v198 = VowelGroup;
              if (v268 <= 6)
              {
                if (((1 << v268) & 0x6A) != 0)
                {
                  int v198 = 2 * (VowelGroup > 1);
                }
                else
                {
                  int v198 = VowelGroup;
                  if (((1 << v268) & 0x14) != 0)
                  {
                    std::basic_string<char16_t>::push_back(&__str, morphun::grammar::synthesis::TrGrammarSynthesizer::getAffix(morphun::grammar::synthesis::TrGrammarSynthesizer::VowelGroup)::AFFIX[VowelGroup]);
                    int v198 = VowelGroup;
                  }
                }
              }
              v201 = (const std::basic_string<char16_t>::value_type *)&morphun::grammar::synthesis::ROUNDED[8 * v268 + 4 * (VowelGroup > 1)];
              if (*v201)
              {
                uint64_t v202 = 0;
                do
                  std::basic_string<char16_t>::size_type v203 = v202 + 1;
                while (*(unsigned __int16 *)((char *)&morphun::grammar::synthesis::ROUNDED[++v202]
                                            + ((8 * (VowelGroup > 1)) | (16 * v268))));
              }
              else
              {
                std::basic_string<char16_t>::size_type v203 = 0;
              }
              std::basic_string<char16_t>::append(&__str, v201, v203);
            }
            else
            {
              int v198 = VowelGroup;
            }
            if (SHIBYTE(v270.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v270.__r_.__value_.__l.__data_);
            }
            std::basic_string<char16_t> v270 = __str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              unint64_t v205 = &v270;
            }
            else {
              unint64_t v205 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
            }
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v206 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v206 = __str.__r_.__value_.__l.__size_;
            }
            std::basic_string<char16_t>::append(&v274, (const std::basic_string<char16_t>::value_type *)v205, v206);
            std::basic_string<char16_t>::size_type v207 = HIBYTE(v270.__r_.__value_.__r.__words[2]);
            if ((v270.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v207 = v270.__r_.__value_.__l.__size_;
            }
            if (v207)
            {
              morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::addCopulaSuffixes(&__str, v265, v264, v198, (uint64_t)&v270);
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v208 = &__str;
              }
              else {
                uint64_t v208 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
              }
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v209 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              }
              else {
                std::basic_string<char16_t>::size_type v209 = __str.__r_.__value_.__l.__size_;
              }
            }
            else
            {
              std::basic_string<char16_t>::size_type v210 = HIBYTE(v274.__r_.__value_.__r.__words[2]);
              if ((v274.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v210 = v274.__r_.__value_.__l.__size_;
              }
              if (v210)
              {
                morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::addCopulaSuffixes(&__str, v265, v264, v198, (uint64_t)&v274);
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v208 = &__str;
                }
                else {
                  uint64_t v208 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                }
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::basic_string<char16_t>::size_type v209 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::basic_string<char16_t>::size_type v209 = __str.__r_.__value_.__l.__size_;
                }
              }
              else
              {
                morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::addCopulaSuffixes(&__str, v265, v264, v198, (uint64_t)&v275);
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v208 = &__str;
                }
                else {
                  uint64_t v208 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                }
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::basic_string<char16_t>::size_type v209 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::basic_string<char16_t>::size_type v209 = __str.__r_.__value_.__l.__size_;
                }
              }
            }
            std::basic_string<char16_t>::append(&v274, (const std::basic_string<char16_t>::value_type *)v208, v209);
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__str.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v276.__r_.__value_.__r.__words[2]) < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&__p, v276.__r_.__value_.__l.__data_, v276.__r_.__value_.__l.__size_);
            }
            else {
              std::basic_string<char16_t> __p = v276;
            }
            std::basic_string<char16_t>::size_type v211 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v211 = __p.__r_.__value_.__l.__size_;
            }
            if (v211)
            {
              morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getLastWord(&__str, (uint64_t)&__p);
              std::basic_string<char16_t>::size_type v213 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v213 = __str.__r_.__value_.__l.__size_;
              }
              std::basic_string<char16_t>::size_type v214 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
              if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v214 = v275.__r_.__value_.__l.__size_;
              }
              if (v213 != v214) {
                goto LABEL_485;
              }
              if (v213)
              {
                v215 = &v275;
                if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  v215 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
                }
                v216 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  v216 = &__str;
                }
                while (v215->__r_.__value_.__s.__data_[0] == v216->__r_.__value_.__s.__data_[0])
                {
                  v216 = (std::basic_string<char16_t> *)((char *)v216 + 2);
                  v215 = (std::basic_string<char16_t> *)((char *)v215 + 2);
                  if (!--v213) {
                    goto LABEL_484;
                  }
                }
LABEL_485:
                if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                {
                  operator delete(__str.__r_.__value_.__l.__data_);
                  if (v186) {
                    goto LABEL_493;
                  }
                }
                else
                {
                  if (!v186) {
                    goto LABEL_539;
                  }
LABEL_493:
                  uint64_t v217 = a1[1];
                  if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    std::basic_string<char16_t>::size_type v218 = &v275;
                  }
                  else {
                    std::basic_string<char16_t>::size_type v218 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
                  }
                  if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    std::basic_string<char16_t>::size_type v219 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    std::basic_string<char16_t>::size_type v219 = v275.__r_.__value_.__l.__size_;
                  }
                  uint64_t v220 = a1[18];
                  __str.__r_.__value_.__r.__words[0] = 0;
                  v221 = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v217, (uint64_t)&__str, (const UChar *)v218, v219);
                  if (v221) {
                    BOOL v222 = (__str.__r_.__value_.__r.__words[0] & v220) == v220;
                  }
                  else {
                    BOOL v222 = 0;
                  }
                  if (v222)
                  {
                    std::basic_string<char16_t>::size_type v223 = HIBYTE(v274.__r_.__value_.__r.__words[2]);
                    if ((v274.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      std::basic_string<char16_t>::size_type v223 = v274.__r_.__value_.__l.__size_;
                    }
                    if (v223)
                    {
                      long long v224 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::TURKISH(v221);
                      if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v224, (uint64_t)&v274))
                      {
                        if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          uint64_t v225 = &v275;
                        }
                        else {
                          uint64_t v225 = (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
                        }
                        if ((v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          std::basic_string<char16_t>::size_type v226 = HIBYTE(v275.__r_.__value_.__r.__words[2]);
                        }
                        else {
                          std::basic_string<char16_t>::size_type v226 = v275.__r_.__value_.__l.__size_;
                        }
                        char isOneVowelWord = morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneVowelWord((morphun::util::LocaleUtils *)v225, v226);
                        morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::assimilateLastConsonant(&__str, (uint64_t)&__p, isOneVowelWord, v228, v229);
LABEL_515:
                        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(__p.__r_.__value_.__l.__data_);
                        }
                        std::basic_string<char16_t> __p = __str;
                      }
                    }
                  }
                }
              }
              else
              {
LABEL_484:
                if (v179) {
                  goto LABEL_485;
                }
                if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__str.__r_.__value_.__l.__data_);
                }
                if (v186) {
                  goto LABEL_493;
                }
                std::basic_string<char16_t>::size_type v230 = HIBYTE(v274.__r_.__value_.__r.__words[2]);
                if ((v274.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  std::basic_string<char16_t>::size_type v230 = v274.__r_.__value_.__l.__size_;
                }
                if (v230)
                {
                  std::basic_string<char16_t> v231 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::TURKISH(v212);
                  if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v231, (uint64_t)&v274))
                  {
                    std::basic_string<char16_t> v232 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                         ? &__p
                         : (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
                    unint64_t v233 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                         ? HIBYTE(__p.__r_.__value_.__r.__words[2])
                         : __p.__r_.__value_.__l.__size_;
                    if (morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::endsWithHardConsonant((unsigned __int16 *)v232, v233, 1))
                    {
                      std::basic_string<char16_t> v234 = (v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                           ? (morphun::util::LocaleUtils *)&v275
                           : (morphun::util::LocaleUtils *)v275.__r_.__value_.__r.__words[0];
                      std::basic_string<char16_t>::size_type v235 = (v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                           ? HIBYTE(v275.__r_.__value_.__r.__words[2])
                           : v275.__r_.__value_.__l.__size_;
                      if (!morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneVowelWord(v234, v235))
                      {
                        morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::assimilateLastConsonant(&__str, (uint64_t)&__p, 0, v236, v237);
                        goto LABEL_515;
                      }
                    }
                  }
                }
              }
LABEL_539:
              std::basic_string<char16_t>::size_type v238 = HIBYTE(v274.__r_.__value_.__r.__words[2]);
              if ((v274.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v238 = v274.__r_.__value_.__l.__size_;
              }
              if (v238)
              {
                std::basic_string<char16_t> v239 = (v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                     ? &v275
                     : (std::basic_string<char16_t> *)v275.__r_.__value_.__r.__words[0];
                std::basic_string<char16_t>::size_type v240 = (v275.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                     ? HIBYTE(v275.__r_.__value_.__r.__words[2])
                     : v275.__r_.__value_.__l.__size_;
                uint64_t v241 = a1[1];
                uint64_t v242 = a1[17];
                __str.__r_.__value_.__r.__words[0] = 0;
                if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v241, (uint64_t)&__str, (const UChar *)v239, v240)|| (__str.__r_.__value_.__r.__words[0] & v242) != v242)
                {
                  if (morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::endsWithHardConsonant((unsigned __int16 *)v239, v240, 0)|| (uint64_t v245 = a1[1], v246 = a1[18], __str.__r_.__value_.__r.__words[0] = 0, morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v245, (uint64_t)&__str, (const UChar *)v239, v240))&& (__str.__r_.__value_.__r.__words[0] & v246) == v246)
                  {
                    if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0)
                    {
                      std::basic_string<char16_t> v247 = (std::basic_string<char16_t> *)v274.__r_.__value_.__r.__words[0];
                      if (v274.__r_.__value_.__l.__size_) {
                        goto LABEL_559;
                      }
                      std::basic_string<char16_t>::size_type v249 = 0;
LABEL_598:
                      std::basic_string<char16_t>::__init_copy_ctor_external(&v277, (const std::basic_string<char16_t>::value_type *)v247, v249);
                    }
                    else
                    {
                      if (*((unsigned char *)&v274.__r_.__value_.__s + 23))
                      {
                        std::basic_string<char16_t> v247 = &v274;
LABEL_559:
                        switch(v247->__r_.__value_.__s.__data_[0])
                        {
                          case 'b':
                            std::basic_string<char16_t>::basic_string(&__str, &v274, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v244);
                            std::basic_string<char16_t>::insert(&__str, (std::basic_string<char16_t>::size_type)word_1D2ECA3FC, (const std::basic_string<char16_t>::value_type *)1, v248);
                            goto LABEL_566;
                          case 'c':
                            std::basic_string<char16_t>::basic_string(&__str, &v274, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v244);
                            std::basic_string<char16_t>::insert(&__str, (std::basic_string<char16_t>::size_type)word_1D2ECA400, (const std::basic_string<char16_t>::value_type *)1, v251);
                            goto LABEL_566;
                          case 'd':
                            std::basic_string<char16_t>::basic_string(&__str, &v274, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v244);
                            std::basic_string<char16_t>::insert(&__str, (std::basic_string<char16_t>::size_type)word_1D2ECDEF2, (const std::basic_string<char16_t>::value_type *)1, v250);
                            goto LABEL_566;
                          case 'g':
                            std::basic_string<char16_t>::basic_string(&__str, &v274, 1uLL, 0xFFFFFFFFFFFFFFFFLL, v244);
                            std::basic_string<char16_t>::insert(&__str, (std::basic_string<char16_t>::size_type)word_1D2ECA404, (const std::basic_string<char16_t>::value_type *)1, v252);
LABEL_566:
                            *(_OWORD *)&v277.__r_.__value_.__l.__data_ = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
                            std::basic_string<char16_t>::size_type v253 = __str.__r_.__value_.__r.__words[2];
                            goto LABEL_569;
                          default:
                            if ((SHIBYTE(v274.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                              goto LABEL_568;
                            }
                            std::basic_string<char16_t>::size_type v249 = v274.__r_.__value_.__l.__size_;
                            std::basic_string<char16_t> v247 = (std::basic_string<char16_t> *)v274.__r_.__value_.__r.__words[0];
                            break;
                        }
                        goto LABEL_598;
                      }
LABEL_568:
                      *(_OWORD *)&v277.__r_.__value_.__l.__data_ = *(_OWORD *)&v274.__r_.__value_.__l.__data_;
                      std::basic_string<char16_t>::size_type v253 = v274.__r_.__value_.__r.__words[2];
LABEL_569:
                      v277.__r_.__value_.__r.__words[2] = v253;
                    }
                    if (SHIBYTE(v274.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(v274.__r_.__value_.__l.__data_);
                    }
                    std::basic_string<char16_t> v274 = v277;
                  }
                }
              }
            }
            std::basic_string<char16_t>::size_type v254 = HIBYTE(v274.__r_.__value_.__r.__words[2]);
            if ((v274.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v254 = v274.__r_.__value_.__l.__size_;
            }
            if ((v267 || v179) && v254)
            {
              std::basic_string<char16_t>::size_type v255 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v255 = __p.__r_.__value_.__l.__size_;
              }
              if (v255)
              {
                {
                  operator new();
                }
                v256 = (void *)npc<icu4cxx::UnicodeSet const>(morphun::grammar::synthesis::TrGrammarSynthesizer::ENDING_DOUBLE_QUOTE(void)::ENDING_DOUBLE_QUOTE_);
                std::basic_string<char16_t>::size_type v257 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                v258 = &__p;
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                {
                  std::basic_string<char16_t>::size_type v257 = __p.__r_.__value_.__l.__size_;
                  v258 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
                }
                if (!MEMORY[0x1D942C150](*v256, (unsigned __int16)v258->__r_.__value_.__s.__data_[v257 - 1]))
                {
                  {
                    operator new();
                  }
                  v259 = (void *)npc<icu4cxx::UnicodeSet const>(morphun::grammar::synthesis::TrGrammarSynthesizer::ENDING_SINGLE_QUOTE(void)::ENDING_SINGLE_QUOTE_);
                  std::basic_string<char16_t>::size_type v260 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                  v261 = &__p;
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  {
                    std::basic_string<char16_t>::size_type v260 = __p.__r_.__value_.__l.__size_;
                    v261 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
                  }
                  if (MEMORY[0x1D942C150](*v259, (unsigned __int16)v261->__r_.__value_.__s.__data_[v260 - 1]))
                  {
                    std::basic_string<char16_t>::size_type v263 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      std::basic_string<char16_t>::size_type v263 = __p.__r_.__value_.__l.__size_;
                    }
                    std::basic_string<char16_t>::basic_string(&__str, &__p, 0, v263 - 1, v262);
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__p.__r_.__value_.__l.__data_);
                    }
                    std::basic_string<char16_t> __p = __str;
                  }
                  operator new();
                }
              }
            }
            operator new();
          }
          unint64_t v147 = HIBYTE(v273);
          if (v273 < 0) {
            unint64_t v147 = v272;
          }
          if (v147) {
            goto LABEL_288;
          }
        }
LABEL_284:
        int v146 = 0;
        goto LABEL_341;
      }
LABEL_268:
      v90 += 10;
      int v48 = v269;
      if (v90 == "N7morphun7grammar9synthesis38TrGrammarSynthesizer_TrDisplayFunctionE") {
        goto LABEL_271;
      }
    }
  }
LABEL_25:
  morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::normalizeString(&__p, (uint64_t)a1, (uint64_t)&v275);
  if (SHIBYTE(v275.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v275.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t> v275 = __p;
  goto LABEL_28;
}

void sub_1D2CCFEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  MEMORY[0x1D942B8B0](v55, 0x1020C405F07FB98);
  if (a55 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getLastWord(std::basic_string<char16_t> *a1, uint64_t a2)
{
  morphun::util::StringUtils::trim(a2, &__str);
  std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_str = &__str;
  }
  else {
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v6 = size;
    while (v6 * 2)
    {
      int v7 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[--v6];
      if (v7 == 32)
      {
        if (v6 == -1) {
          break;
        }
        std::basic_string<char16_t>::basic_string(a1, &__str, ((v6 * 2) >> 1) + 1, 0xFFFFFFFFFFFFFFFFLL, v3);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        return;
      }
    }
  }
  *a1 = __str;
}

void sub_1D2CD0568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::trimEnd(std::basic_string<char16_t> *this, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    *this = *(std::basic_string<char16_t> *)a2;
  }
  while (1)
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((size & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
    }
    if (!size) {
      break;
    }
    uint64_t v4 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET((morphun::dictionary::PhraseProperties *)this);
    int v5 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    uint64_t v6 = v5 >= 0 ? this : (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
    if (v5 >= 0) {
      LODWORD(v7) = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v7 = this->__r_.__value_.__l.__size_;
    }
    uint64_t v8 = morphun::util::StringViewUtils::codePointAt((uint64_t)v6, v7, (int)v7 - 1);
    if (MEMORY[0x1D942C150](*v4, v8)) {
      break;
    }
    std::basic_string<char16_t>::size_type v9 = HIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v9 & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type v9 = this->__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::resize(this, v9 - 1, 0);
  }
}

void sub_1D2CD0648(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::normalizeString(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::basic_string<char16_t> __str = *(std::basic_string<char16_t> *)a3;
  }
  char v5 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (*((unsigned char *)&__str.__r_.__value_.__s + 23))
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      p_str = &__str;
      goto LABEL_9;
    }
LABEL_14:
    a1->__r_.__value_.__r.__words[0] = 0;
    a1->__r_.__value_.__l.__size_ = 0;
    a1->__r_.__value_.__r.__words[2] = 0;
    if ((v5 & 0x80) == 0) {
      return;
    }
    goto LABEL_55;
  }
  std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
  if (!__str.__r_.__value_.__l.__size_) {
    goto LABEL_14;
  }
  p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
LABEL_9:
  int v8 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[size - 1];
  morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::trimEnd(&v32, (uint64_t)&__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t> __str = v32;
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::basic_string<char16_t>::size_type v9 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    if (*((unsigned char *)&v32.__r_.__value_.__s + 23))
    {
      uint64_t v10 = &__str;
      goto LABEL_18;
    }
LABEL_46:
    *a1 = __str;
    return;
  }
  std::basic_string<char16_t>::size_type v9 = __str.__r_.__value_.__l.__size_;
  if (!__str.__r_.__value_.__l.__size_) {
    goto LABEL_46;
  }
  uint64_t v10 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
LABEL_18:
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 112);
  v32.__r_.__value_.__r.__words[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)&v32, (const UChar *)v10, v9)
    && (v32.__r_.__value_.__r.__words[0] & v12) == v12)
  {
    goto LABEL_46;
  }
  std::basic_string<char16_t>::size_type v13 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  uint64_t v14 = &__str;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::basic_string<char16_t>::size_type v13 = __str.__r_.__value_.__l.__size_;
    uint64_t v14 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  uint64_t v15 = (morphun::util::LocaleUtils *)u_isdigit((unsigned __int16)v14->__r_.__value_.__s.__data_[v13 - 1]);
  if (!v15) {
    goto LABEL_46;
  }
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v16 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  }
  else {
    int v16 = __str.__r_.__value_.__r.__words[1];
  }
  int v35 = 0;
  morphun::util::LocaleUtils::TURKISH(v15);
  uint64_t v33 = unum_open();
  char v34 = 1;
  if (v35 > 0 || v16 < 1) {
    goto LABEL_53;
  }
  while (1)
  {
    {
      operator new();
    }
    uint64_t v17 = (void *)morphun::grammar::synthesis::TrGrammarSynthesizer::SEPARATOR_SPLITTER(void)::SEPARATOR_SPLITTER_;
    npc<icu4cxx::UnicodeSet const>(morphun::grammar::synthesis::TrGrammarSynthesizer::SEPARATOR_SPLITTER(void)::SEPARATOR_SPLITTER_);
    std::basic_string<char16_t>::basic_string(&v32, &__str, 0, v16, v18);
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v19 = &v32;
    }
    else {
      unint64_t v19 = (std::basic_string<char16_t> *)v32.__r_.__value_.__r.__words[0];
    }
    if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v20 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
    }
    else {
      uint64_t v20 = LODWORD(v32.__r_.__value_.__r.__words[1]);
    }
    int v21 = MEMORY[0x1D942C1E0](*v17, v19, v20, 0);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    uint64_t v22 = (morphun::util::LocaleUtils *)unum_parseDouble();
    double v24 = v23;
    if (v35 >= 1) {
      break;
    }
    int v16 = v21 - 1;
    if (v23 > 0.0 || v21 < 2) {
      goto LABEL_52;
    }
  }
  int v35 = 0;
  BOOL v26 = &__str;
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    BOOL v26 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  if (v26->__r_.__value_.__s.__data_[v16 - 1] != 48)
  {
    uint64_t v22 = (morphun::util::LocaleUtils *)unum_parseDouble();
    double v24 = v27;
    if (v35 >= 1) {
      int v35 = 0;
    }
  }
LABEL_52:
  if (v24 == -1.79769313e308)
  {
LABEL_53:
    *a1 = __str;
    memset(&__str, 0, sizeof(__str));
  }
  else
  {
    uint64_t v28 = (morphun::util::LocaleUtils *)morphun::util::LocaleUtils::TURKISH(v22);
    unint64_t v29 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::TURKISH(v28);
    morphun::dialog::NumberConcept::NumberConcept((morphun::dialog::NumberConcept *)&v32, v24, v28, v29);
    if (v8 == 46)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"ordinal");
      morphun::dialog::NumberConcept::asWords((morphun::dialog::NumberConcept *)&v32, (const void **)__p, a1);
      if (v31 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      morphun::dialog::NumberConcept::getAsWords((morphun::dialog::NumberConcept *)&v32, a1);
    }
  }
  icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)&v33);
  if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_55:
  }
    operator delete(__str.__r_.__value_.__l.__data_);
}

void sub_1D2CD0A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)(v20 - 152));
  if (*(char *)(v20 - 105) < 0) {
    operator delete(*(void **)(v20 - 128));
  }
  _Unwind_Resume(a1);
}

BOOL morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::endsWithNumber(uint64_t a1)
{
  morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::trimEnd(&__p, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
    if (!__p.__r_.__value_.__l.__size_)
    {
      BOOL v3 = 0;
LABEL_10:
      operator delete(__p.__r_.__value_.__l.__data_);
      return v3;
    }
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if (!*((unsigned char *)&__p.__r_.__value_.__s + 23)) {
      return 0;
    }
    p_p = &__p;
  }
  BOOL v3 = u_isdigit((unsigned __int16)p_p->__r_.__value_.__s.__data_[size - 1]) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_10;
  }
  return v3;
}

void sub_1D2CD0BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::revertLastConsonantAssimilation(std::basic_string<char16_t> *this, uint64_t a2, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  char v6 = *(unsigned char *)(a2 + 23);
  if (v6 < 0)
  {
    std::basic_string<char16_t>::size_type v7 = *(const std::basic_string<char16_t>::value_type **)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8)
    {
      std::basic_string<char16_t>::size_type v12 = 0;
      goto LABEL_32;
    }
  }
  else
  {
    if (!*(unsigned char *)(a2 + 23)) {
      goto LABEL_20;
    }
    std::basic_string<char16_t>::size_type v7 = (const std::basic_string<char16_t>::value_type *)a2;
    uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  int v9 = (unsigned __int16)v7[v8 - 1];
  if (v9 > 99)
  {
    if (v9 == 100)
    {
      if (v6 >= 0) {
        uint64_t v15 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v15 = *(void *)(a2 + 8);
      }
      std::basic_string<char16_t>::basic_string(&v16, (const std::basic_string<char16_t> *)a2, 0, v15 - 1, a5);
      std::basic_string<char16_t>::append(&v16, word_1D2ECDEF2, 1uLL);
      goto LABEL_29;
    }
    if (v9 == 287)
    {
      if (v6 >= 0) {
        uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v11 = *(void *)(a2 + 8);
      }
      std::basic_string<char16_t>::basic_string(&v16, (const std::basic_string<char16_t> *)a2, 0, v11 - 1, a5);
      std::basic_string<char16_t>::append(&v16, word_1D2ECA404, 1uLL);
      goto LABEL_29;
    }
  }
  else
  {
    if (v9 == 98)
    {
      if (v6 >= 0) {
        uint64_t v14 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v14 = *(void *)(a2 + 8);
      }
      std::basic_string<char16_t>::basic_string(&v16, (const std::basic_string<char16_t> *)a2, 0, v14 - 1, a5);
      std::basic_string<char16_t>::append(&v16, word_1D2ECA3FC, 1uLL);
      goto LABEL_29;
    }
    if (v9 == 99)
    {
      if (v6 >= 0) {
        uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v10 = *(void *)(a2 + 8);
      }
      std::basic_string<char16_t>::basic_string(&v16, (const std::basic_string<char16_t> *)a2, 0, v10 - 1, a5);
      std::basic_string<char16_t>::append(&v16, word_1D2ECA400, 1uLL);
LABEL_29:
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)&v16.__r_.__value_.__l.__data_;
      std::basic_string<char16_t>::size_type v13 = v16.__r_.__value_.__r.__words[2];
      goto LABEL_30;
    }
  }
  if ((*(unsigned char *)(a2 + 23) & 0x80) == 0)
  {
LABEL_20:
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    std::basic_string<char16_t>::size_type v13 = *(void *)(a2 + 16);
LABEL_30:
    this->__r_.__value_.__r.__words[2] = v13;
    return;
  }
  std::basic_string<char16_t>::size_type v7 = *(const std::basic_string<char16_t>::value_type **)a2;
  std::basic_string<char16_t>::size_type v12 = *(void *)(a2 + 8);
LABEL_32:

  std::basic_string<char16_t>::__init_copy_ctor_external(this, v7, v12);
}