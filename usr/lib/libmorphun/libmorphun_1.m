void sub_1D2CD0D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getVowelGroup(uint64_t *a1, const UChar *a2, uint64_t a3)
{
  int32_t v3 = a3;
  uint64_t v19 = 0;
  CombinedBinaryType = (morphun::util::LocaleUtils *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[1], (uint64_t)&v19, a2, a3);
  if (CombinedBinaryType)
  {
    if ((a1[10] & v19) != 0) {
      return 1;
    }
    if ((a1[11] & v19) != 0) {
      return 0;
    }
    if ((a1[12] & v19) != 0) {
      return 3;
    }
    if ((a1[13] & v19) != 0) {
      return 2;
    }
  }
  memset(&__p, 0, sizeof(__p));
  uint64_t v8 = morphun::util::LocaleUtils::TURKISH(CombinedBinaryType);
  v9 = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::lowercase((uint64_t)&__p, a2, v3, v8);
  uint64_t v10 = morphun::util::LocaleUtils::TURKISH(v9);
  if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v10, (uint64_t)&__p))
  {
    int LastLetter = morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getLastLetter((uint64_t)a1, (uint64_t)&__p);
  }
  else
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v21, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::basic_string<char16_t> v21 = __p;
    }
    do
    {
      if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::size_type size = v21.__r_.__value_.__l.__size_;
        if (!v21.__r_.__value_.__l.__size_)
        {
          int LastLetter = 105;
          goto LABEL_23;
        }
      }
      else
      {
        std::basic_string<char16_t>::size_type size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
        if (!*((unsigned char *)&v21.__r_.__value_.__s + 23))
        {
          int LastLetter = 105;
          goto LABEL_24;
        }
      }
      std::basic_string<char16_t>::resize(&v21, size - 1, 0);
      v14 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(v13);
      v15 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(v14);
      memset(v20, 0, sizeof(v20));
    }
    while (!morphun::dictionary::PhraseProperties::isEndsWithUnicodeSets((uint64_t)&v21, v14, v15, v20));
    int LastLetter = morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getLastLetter((uint64_t)a1, (uint64_t)&v21);
    if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
LABEL_23:
    operator delete(v21.__r_.__value_.__l.__data_);
  }
LABEL_24:
  uint64_t v7 = 0;
  if (LastLetter <= 224)
  {
    if (LastLetter == 97) {
      goto LABEL_39;
    }
    if (LastLetter != 111 && LastLetter != 117) {
      goto LABEL_41;
    }
LABEL_38:
    uint64_t v7 = 3;
    goto LABEL_41;
  }
  if (LastLetter > 304)
  {
    if (LastLetter == 305) {
      goto LABEL_39;
    }
    if (LastLetter != 363 && LastLetter != 367) {
      goto LABEL_41;
    }
    goto LABEL_38;
  }
  char v16 = LastLetter + 31;
  if ((LastLetter - 225) > 0x22) {
    goto LABEL_41;
  }
  if (((1 << v16) & 0x20C0000) != 0) {
    goto LABEL_38;
  }
  if (((1 << v16) & 0x8A00000) != 0)
  {
    uint64_t v7 = 1;
    goto LABEL_41;
  }
  if (((1 << v16) & 0x400000005) != 0) {
LABEL_39:
  }
    uint64_t v7 = 2;
LABEL_41:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_1D2CD1004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

std::basic_string<char16_t> *morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::addCopulaSuffixes(std::basic_string<char16_t> *result, int a2, unsigned int a3, int a4, uint64_t a5)
{
  result->__r_.__value_.__r.__words[0] = 0;
  result->__r_.__value_.__l.__size_ = 0;
  result->__r_.__value_.__r.__words[2] = 0;
  if (a3 | a2)
  {
    uint64_t v7 = result;
    if (a3 <= 1) {
      int v8 = 1;
    }
    else {
      int v8 = a3;
    }
    if (a2) {
      signed int v9 = v8;
    }
    else {
      signed int v9 = a3;
    }
    if (a2) {
      int v10 = a2;
    }
    else {
      int v10 = 3;
    }
    uint64_t v11 = morphun::util::LocaleUtils::TURKISH((morphun::util::LocaleUtils *)result);
    int isEndsWithVowel = morphun::dictionary::PhraseProperties::isEndsWithVowel(v11, a5);
    uint64_t v13 = v10;
    uint64_t v14 = v9;
    uint64_t v15 = 8 * v9;
    if (isEndsWithVowel)
    {
      char v16 = (const std::basic_string<char16_t>::value_type *)&morphun::grammar::synthesis::BEFORE_CONSONANT_GROUP[8 * v14 + 2 * v13];
      if (*v16)
      {
        uint64_t v17 = 0;
        do
          std::basic_string<char16_t>::size_type v18 = v17 + 1;
        while (morphun::grammar::synthesis::BEFORE_CONSONANT_GROUP[2 * v13 + 1 + v15 + v17++]);
      }
      else
      {
        std::basic_string<char16_t>::size_type v18 = 0;
      }
      std::basic_string<char16_t>::append(v7, v16, v18);
    }
    v20 = (const std::basic_string<char16_t>::value_type *)&morphun::grammar::synthesis::BEFORE_VOWEL_GROUP[8 * v14 + 2 * v13];
    if (*v20)
    {
      uint64_t v21 = 0;
      do
        std::basic_string<char16_t>::size_type v22 = v21 + 1;
      while (morphun::grammar::synthesis::BEFORE_VOWEL_GROUP[2 * v13 + 1 + v15 + v21++]);
    }
    else
    {
      std::basic_string<char16_t>::size_type v22 = 0;
    }
    std::basic_string<char16_t>::append(v7, v20, v22);
    std::basic_string<char16_t>::append(v7, 1uLL, morphun::grammar::synthesis::TrGrammarSynthesizer::getAffix(morphun::grammar::synthesis::TrGrammarSynthesizer::VowelGroup)::AFFIX[a4]);
    v24 = (const std::basic_string<char16_t>::value_type *)&morphun::grammar::synthesis::AFTER_VOWEL_GROUP[8 * v14 + 2 * v13];
    if (*v24)
    {
      uint64_t v25 = 0;
      do
        std::basic_string<char16_t>::size_type v26 = v25 + 1;
      while (morphun::grammar::synthesis::AFTER_VOWEL_GROUP[2 * v13 + 1 + v15 + v25++]);
    }
    else
    {
      std::basic_string<char16_t>::size_type v26 = 0;
    }
    return std::basic_string<char16_t>::append(v7, v24, v26);
  }
  return result;
}

void sub_1D2CD11AC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::endsWithHardConsonant(unsigned __int16 *a1, unint64_t a2, int a3)
{
  unint64_t v4 = a2 - 1;
  if (a2 > 1)
  {
    if (a3)
    {
      {
        operator new();
      }
      uint64_t v8 = morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::DEFAULT_DISCONT_HARD_CONSONANTS_END(void)::DEFAULT_DISCONT_HARD_CONSONANTS_END_;
    }
    else
    {
      {
        operator new();
      }
      uint64_t v8 = morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::DEFAULT_HARD_CONSONANTS_END(void)::DEFAULT_HARD_CONSONANTS_END_;
    }
    signed int v9 = (void *)npc<icu4cxx::UnicodeSet const>(v8);
    return MEMORY[0x1D942C150](*v9, a1[v4]) != 0;
  }
  else
  {
    if (!a2) {
      return 0;
    }
    int v5 = *a1;
    BOOL result = 1;
    BOOL v7 = (v5 - 107) > 9 || ((1 << (v5 - 107)) & 0x221) == 0;
    if (v7 && v5 != 231)
    {
      if (a3) {
        return 0;
      }
      if ((v5 - 102) > 0x12 || ((1 << (v5 - 102)) & 0x42805) == 0) {
        return v5 == 351;
      }
    }
  }
  return result;
}

void sub_1D2CD1528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  MEMORY[0x1D942B8B0](v33, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

BOOL morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneVowelWord(morphun::util::LocaleUtils *__src, std::basic_string<char16_t>::size_type a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  int32_t v3 = __src;
  if (a2 >= 0xB)
  {
    uint64_t v5 = (a2 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a2 | 3) != 0xB) {
      uint64_t v5 = a2 | 3;
    }
    p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v5 + 1);
    __dst.__r_.__value_.__l.__size_ = a2;
    __dst.__r_.__value_.__r.__words[2] = v6 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
  }
  else
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = a2;
    p_dst = &__dst;
    if (!a2) {
      goto LABEL_9;
    }
  }
  __src = (morphun::util::LocaleUtils *)memmove(p_dst, v3, 2 * a2);
LABEL_9:
  unsigned int v7 = 0;
  p_dst->__r_.__value_.__s.__data_[a2] = 0;
  while ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*((unsigned char *)&__dst.__r_.__value_.__s + 23)) {
      return v7 < 2;
    }
LABEL_14:
    uint64_t v8 = morphun::util::LocaleUtils::TURKISH(__src);
    v7 += morphun::dictionary::PhraseProperties::isEndsWithVowel(v8, (uint64_t)&__dst);
    std::basic_string<char16_t>::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::resize(&__dst, size - 1, 0);
  }
  if (__dst.__r_.__value_.__l.__size_) {
    goto LABEL_14;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  return v7 < 2;
}

void sub_1D2CD1798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::assimilateLastConsonant(std::basic_string<char16_t> *this, uint64_t a2, char a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  char v6 = *(unsigned char *)(a2 + 23);
  if (v6 < 0)
  {
    unsigned int v7 = *(const std::basic_string<char16_t>::value_type **)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8)
    {
      std::basic_string<char16_t>::size_type v12 = 0;
      goto LABEL_38;
    }
  }
  else
  {
    if (!*(unsigned char *)(a2 + 23)) {
      goto LABEL_30;
    }
    unsigned int v7 = (const std::basic_string<char16_t>::value_type *)a2;
    uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  int v9 = (unsigned __int16)v7[v8 - 1];
  if (v9 <= 111)
  {
    if (v9 == 103 || v9 == 107)
    {
      if (a3)
      {
        if (v6 >= 0) {
          uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          uint64_t v11 = *(void *)(a2 + 8);
        }
        std::basic_string<char16_t>::basic_string(&v17, (const std::basic_string<char16_t> *)a2, 0, v11 - 1, a5);
        std::basic_string<char16_t>::append(&v17, word_1D2ECA3F0, 1uLL);
      }
      else
      {
        if (v6 >= 0) {
          uint64_t v16 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          uint64_t v16 = *(void *)(a2 + 8);
        }
        std::basic_string<char16_t>::basic_string(&v17, (const std::basic_string<char16_t> *)a2, 0, v16 - 1, a5);
        std::basic_string<char16_t>::append(&v17, word_1D2ECA3EC, 1uLL);
      }
      goto LABEL_35;
    }
  }
  else
  {
    switch(v9)
    {
      case 112:
        if (v6 >= 0) {
          uint64_t v13 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          uint64_t v13 = *(void *)(a2 + 8);
        }
        std::basic_string<char16_t>::basic_string(&v17, (const std::basic_string<char16_t> *)a2, 0, v13 - 1, a5);
        std::basic_string<char16_t>::append(&v17, word_1D2ECA3F4, 1uLL);
        goto LABEL_35;
      case 116:
        if (v6 >= 0) {
          uint64_t v14 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          uint64_t v14 = *(void *)(a2 + 8);
        }
        std::basic_string<char16_t>::basic_string(&v17, (const std::basic_string<char16_t> *)a2, 0, v14 - 1, a5);
        std::basic_string<char16_t>::append(&v17, word_1D2ECA3F8, 1uLL);
        goto LABEL_35;
      case 231:
        if (v6 >= 0) {
          uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          uint64_t v10 = *(void *)(a2 + 8);
        }
        std::basic_string<char16_t>::basic_string(&v17, (const std::basic_string<char16_t> *)a2, 0, v10 - 1, a5);
        std::basic_string<char16_t>::append(&v17, L"c", 1uLL);
LABEL_35:
        *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
        std::basic_string<char16_t>::size_type v15 = v17.__r_.__value_.__r.__words[2];
        goto LABEL_36;
    }
  }
  if ((*(unsigned char *)(a2 + 23) & 0x80) == 0)
  {
LABEL_30:
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    std::basic_string<char16_t>::size_type v15 = *(void *)(a2 + 16);
LABEL_36:
    this->__r_.__value_.__r.__words[2] = v15;
    return;
  }
  unsigned int v7 = *(const std::basic_string<char16_t>::value_type **)a2;
  std::basic_string<char16_t>::size_type v12 = *(void *)(a2 + 8);
LABEL_38:

  std::basic_string<char16_t>::__init_copy_ctor_external(this, v7, v12);
}

void sub_1D2CD19A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CD1A20(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getLastLetter(uint64_t a1, uint64_t a2)
{
  morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::normalizeString(&v4, a1, a2);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v4.__r_.__value_.__l.__size_) {
      uint64_t v2 = *(unsigned __int16 *)(v4.__r_.__value_.__r.__words[0] + 2 * v4.__r_.__value_.__l.__size_ - 2);
    }
    else {
      uint64_t v2 = 0;
    }
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  else if (*((unsigned char *)&v4.__r_.__value_.__s + 23))
  {
    return (unsigned __int16)v4.__r_.__value_.__s.__data_[HIBYTE(v4.__r_.__value_.__r.__words[2]) - 1];
  }
  else
  {
    return 0;
  }
  return v2;
}

BOOL morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::isOneToken(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = npc<morphun::Tokenizer>(a1);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 24))(v3, a2);
  if (!v4)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v5 = v4;
  BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 1;
  (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  return v6;
}

void sub_1D2CD1B8C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CD1C20(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void icu4cxx::NumberFormat::~NumberFormat(icu4cxx::NumberFormat *this)
{
  if (*((unsigned char *)this + 8)) {
    unum_close();
  }
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::~TrGrammarSynthesizer_TrDisplayFunction(morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction *this)
{
  morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::~TrGrammarSynthesizer_TrDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0CB78;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

void sub_1D2CD1D64(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::MecabTokenExtractorIterator::reset(uint64_t a1, const std::basic_string<char16_t>::value_type *a2, std::basic_string<char16_t>::size_type a3)
{
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = a3;
  uint64_t v6 = a1 + 56;
  morphun::tokenizer::ICUTokenExtractorIterator::reset();
  if (*(unsigned char *)(v6 + 36))
  {
    unsigned int v7 = (void *)(a1 + 96);
    uint64_t v8 = std::basic_string<char16_t>::__assign_external((std::basic_string<char16_t> *)(a1 + 96), a2, a3);
    int v9 = (std::mutex *)morphun::tokenizer::CLASS_MUTEX((morphun::tokenizer *)v8);
    std::mutex::lock(v9);
    if (!morphun::tokenizer::gHantHansTransliteratorPool) {
      operator new();
    }
    uint64_t v10 = *(void *)(morphun::tokenizer::gHantHansTransliteratorPool + 8);
    if (*(void *)morphun::tokenizer::gHantHansTransliteratorPool == v10)
    {
      int v15 = 0;
      uint64_t v11 = utrans_openU();
    }
    else
    {
      uint64_t v11 = *(void *)(v10 - 8);
      *(void *)(morphun::tokenizer::gHantHansTransliteratorPool + 8) = v10 - 8;
    }
    std::mutex::unlock(v9);
    if (v11)
    {
      *(void *)&long long v14 = v11;
      utrans_transUChars();
      morphun::util::Finally<morphun::tokenizer::unifiedChineseTransliterate(std::basic_string<char16_t> &)::$_0>::~Finally((morphun::tokenizer *)&v14);
      if (*(char *)(a1 + 119) < 0)
      {
        if (*(void *)(a1 + 104))
        {
          unsigned int v7 = (void *)*v7;
          uint64_t v12 = *(void *)(a1 + 104);
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      LODWORD(v12) = *(unsigned __int8 *)(a1 + 119);
    }
    else
    {
      if ((*(char *)(a1 + 119) & 0x80000000) == 0)
      {
        *(_WORD *)(a1 + 96) = 0;
        *(unsigned char *)(a1 + 119) = 0;
        goto LABEL_15;
      }
      **(_WORD **)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 0;
      LODWORD(v12) = *(unsigned __int8 *)(a1 + 119);
      if ((v12 & 0x80) != 0) {
        goto LABEL_15;
      }
    }
    if (v12)
    {
      uint64_t v12 = v12;
      goto LABEL_16;
    }
LABEL_15:
    unsigned int v7 = *(void **)(a1 + 56);
    uint64_t v12 = *(void *)(a1 + 64);
LABEL_16:
    *(void *)(a1 + 120) = v7;
    *(void *)(a1 + 128) = v12;
    goto LABEL_17;
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)v6;
LABEL_17:
  *(void *)(a1 + 24) = mecab_sparse_tonode2();
  *(_OWORD *)(a1 + 72) = xmmword_1D2D6F570;
  *(_DWORD *)(a1 + 88) = 0;
  return morphun::tokenizer::MecabTokenExtractorIterator::calculateNextForeignRange((morphun::tokenizer::MecabTokenExtractorIterator *)a1);
}

void sub_1D2CD2128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (*(char *)(v40 - 89) < 0) {
    operator delete(*(void **)(v40 - 112));
  }
  if (v39 < 0) {
    operator delete(v38);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  std::mutex::unlock(v37);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::CLASS_MUTEX(morphun::tokenizer *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::tokenizer::CLASS_MUTEX(void)::classMutex;
  if (!morphun::tokenizer::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CD22A0(_Unwind_Exception *a1)
{
}

morphun::tokenizer *morphun::util::Finally<morphun::tokenizer::unifiedChineseTransliterate(std::basic_string<char16_t> &)::$_0>::~Finally(morphun::tokenizer *a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = (std::mutex *)morphun::tokenizer::CLASS_MUTEX(a1);
  std::mutex::lock(v3);
  if (v2)
  {
    uint64_t v4 = morphun::tokenizer::gHantHansTransliteratorPool;
    if (morphun::tokenizer::gHantHansTransliteratorPool
      && (uint64_t v6 = *(void **)morphun::tokenizer::gHantHansTransliteratorPool,
          uint64_t v5 = *(void **)(morphun::tokenizer::gHantHansTransliteratorPool + 8),
          uint64_t v7 = (uint64_t)v5 - *(void *)morphun::tokenizer::gHantHansTransliteratorPool,
          (unint64_t)v7 <= 0x207))
    {
      unint64_t v8 = *(void *)(morphun::tokenizer::gHantHansTransliteratorPool + 16);
      if ((unint64_t)v5 >= v8)
      {
        uint64_t v10 = v7 >> 3;
        unint64_t v11 = (v7 >> 3) + 1;
        if (v11 >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v12 = v8 - (void)v6;
        if (v12 >> 2 > v11) {
          unint64_t v11 = v12 >> 2;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13)
        {
          if (v13 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          long long v14 = (char *)operator new(8 * v13);
        }
        else
        {
          long long v14 = 0;
        }
        int v15 = &v14[8 * v10];
        *(void *)int v15 = v2;
        int v9 = v15 + 8;
        if (v5 != v6)
        {
          do
          {
            uint64_t v16 = *--v5;
            *((void *)v15 - 1) = v16;
            v15 -= 8;
          }
          while (v5 != v6);
          uint64_t v5 = *(void **)v4;
        }
        *(void *)uint64_t v4 = v15;
        *(void *)(v4 + 8) = v9;
        *(void *)(v4 + 16) = &v14[8 * v13];
        if (v5) {
          operator delete(v5);
        }
      }
      else
      {
        *uint64_t v5 = v2;
        int v9 = v5 + 1;
      }
      *(void *)(v4 + 8) = v9;
    }
    else
    {
      utrans_close();
    }
  }
  std::mutex::unlock(v3);
  return a1;
}

void sub_1D2CD2400(void *a1)
{
  std::mutex::unlock(v1);
  __clang_call_terminate(a1);
}

uint64_t morphun::tokenizer::MecabTokenExtractorIterator::calculateNextForeignRange(morphun::tokenizer::MecabTokenExtractorIterator *this)
{
  uint64_t v2 = *((int *)this + 22);
  int v3 = MEMORY[0x1D942C1D0](*(void *)(*((void *)this + 1) + 160), *((void *)this + 7) + 2 * v2, (*((_DWORD *)this + 16) - v2), 1)+ v2;
  *((_DWORD *)this + 21) = v3;
  uint64_t v4 = *((void *)this + 8);
  if ((int)v4 > v3)
  {
    LODWORD(v4) = MEMORY[0x1D942C1D0](*(void *)(*((void *)this + 1) + 160), *((void *)this + 7) + 2 * v3, (v4 - v3), 0)+ v3;
    int v3 = *((_DWORD *)this + 21);
  }
  unint64_t v5 = *((void *)this + 8);
  *((_DWORD *)this + 22) = v4;
  if (v5 < v3) {
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  }

  return morphun::tokenizer::ICUTokenExtractorIterator::reset();
}

uint64_t morphun::tokenizer::MecabTokenExtractorIterator::getNextBoundary(morphun::tokenizer::MecabTokenExtractorIterator *this)
{
  if (!*((void *)this + 3))
  {
    uint64_t v3 = *((void *)this + 16);
    int v2 = *((_DWORD *)this + 18);
    goto LABEL_15;
  }
  int v2 = *((_DWORD *)this + 18);
  uint64_t v3 = *((void *)this + 16);
  if (v2 == v3)
  {
LABEL_15:
    if (v3 != v2) {
      goto LABEL_23;
    }
    return 0xFFFFFFFFLL;
  }
  int v4 = *((_DWORD *)this + 22);
  if (*((_DWORD *)this + 21) <= v2 && v2 < v4) {
    goto LABEL_11;
  }
  if (v2 >= v4)
  {
    morphun::tokenizer::MecabTokenExtractorIterator::calculateNextForeignRange(this);
    int v2 = *((_DWORD *)this + 18);
  }
  uint64_t v3 = *((unsigned int *)this + 20);
  if (v2 >= (int)v3)
  {
    uint64_t v7 = *((void *)this + 3);
    while (1)
    {
      uint64_t v7 = *(void *)(v7 + 8);
      if (!v7) {
        break;
      }
      if ((*(unsigned char *)(v7 + 91) & 0xFE) != 2)
      {
        uint64_t v8 = (*(void *)(v7 + 64) - *((void *)this + 15)) >> 1;
        uint64_t v3 = v8 + (*(unsigned __int16 *)(v7 + 80) >> 1);
        *((_DWORD *)this + 19) = v8;
        *((_DWORD *)this + 20) = v3;
        if (v2 < (int)v3) {
          break;
        }
      }
    }
    *((void *)this + 3) = v7;
    uint64_t v9 = *((unsigned int *)this + 21);
    if ((int)v3 <= (int)v9) {
      goto LABEL_23;
    }
    morphun::tokenizer::MecabTokenExtractorIterator::setNextNativeBoundary(this, *((unsigned int *)this + 21));
    return v9;
  }
  if (*((_DWORD *)this + 21) > (int)v3)
  {
LABEL_23:
    morphun::tokenizer::MecabTokenExtractorIterator::setNextNativeBoundary(this, v3);
    return v3;
  }
LABEL_11:

  return morphun::tokenizer::MecabTokenExtractorIterator::getNextForeignBoundary(this);
}

uint64_t morphun::tokenizer::MecabTokenExtractorIterator::setNextNativeBoundary(morphun::tokenizer::MecabTokenExtractorIterator *this, uint64_t a2)
{
  if (*((_DWORD *)this + 18) >= (int)a2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    int v4 = operator new(0x70uLL);
    unint64_t v5 = v4;
    long long v6 = xmmword_1D2D6F580;
    v4[4] = xmmword_1D2ECA4D6;
    v4[5] = unk_1D2ECA4E6;
    *(_OWORD *)((char *)v4 + 92) = unk_1D2ECA4F2;
    *int v4 = xmmword_1D2ECA496;
    v4[1] = unk_1D2ECA4A6;
    v4[2] = xmmword_1D2ECA4B6;
    v4[3] = unk_1D2ECA4C6;
    *((_WORD *)v4 + 54) = 0;
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v5);
  }
  *((_DWORD *)this + 18) = a2;
  return a2;
}

void sub_1D2CD26E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::tokenizer::MecabTokenExtractorIterator::getNextForeignBoundary(morphun::tokenizer::MecabTokenExtractorIterator *this)
{
  int v2 = *((_DWORD *)this + 18);
  uint64_t result = *((unsigned int *)this + 21);
  if (v2 >= (int)result)
  {
    int v4 = ubrk_next();
    uint64_t result = *((unsigned int *)this + 22);
    if (v4 <= (int)result)
    {
      uint64_t result = (*((_DWORD *)this + 21) + v4);
      if (*((_DWORD *)this + 18) >= (int)result)
      {
        exception = __cxa_allocate_exception(0x38uLL);
        long long v6 = operator new(0x70uLL);
        uint64_t v7 = v6;
        long long v8 = xmmword_1D2D6F590;
        v6[4] = xmmword_1D2ECA466;
        v6[5] = unk_1D2ECA476;
        *(_OWORD *)((char *)v6 + 94) = unk_1D2ECA484;
        *long long v6 = *(_OWORD *)"I";
        v6[1] = *(_OWORD *)&aNternalLogicE[7];
        v6[2] = xmmword_1D2ECA446;
        v6[3] = unk_1D2ECA456;
        *((_WORD *)v6 + 55) = 0;
        morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v7);
      }
    }
  }
  *((_DWORD *)this + 18) = result;
  return result;
}

void sub_1D2CD2810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void morphun::tokenizer::MecabTokenExtractorIterator::~MecabTokenExtractorIterator(morphun::tokenizer::MecabTokenExtractorIterator *this)
{
  morphun::tokenizer::MecabTokenExtractorIterator::~MecabTokenExtractorIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::tokenizer::checkinCachedMecabTokenizer(*((void *)this + 2), *(_DWORD *)(*((void *)this + 1) + 152));
  if (*((char *)this + 119) < 0) {
    operator delete(*((void **)this + 12));
  }
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator((morphun::tokenizer::MecabTokenExtractorIterator *)((char *)this + 32));
}

uint64_t morphun::tokenizer::checkinCachedMecabTokenizer(uint64_t result, unsigned int a2)
{
  if (result && a2 <= 7)
  {
    uint64_t v2 = result;
    uint64_t v3 = (char *)&morphun::tokenizer::tokenizersMecab + 96 * a2;
    int v4 = (pthread_mutex_t *)(v3 + 32);
    pthread_mutex_lock((pthread_mutex_t *)(v3 + 32));
    uint64_t v5 = *((void *)v3 + 1);
    if (v5
      && (uint64_t v7 = *(void **)v5, v6 = *(void **)(v5 + 8),
                               uint64_t v8 = (uint64_t)v6 - *(void *)v5,
                               (unint64_t)v8 <= 0x207))
    {
      unint64_t v9 = *(void *)(v5 + 16);
      if ((unint64_t)v6 >= v9)
      {
        uint64_t v11 = v8 >> 3;
        unint64_t v12 = (v8 >> 3) + 1;
        if (v12 >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v13 = v9 - (void)v7;
        if (v13 >> 2 > v12) {
          unint64_t v12 = v13 >> 2;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          if (v14 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          int v15 = (char *)operator new(8 * v14);
        }
        else
        {
          int v15 = 0;
        }
        int v16 = &v15[8 * v11];
        *(void *)int v16 = v2;
        uint64_t v10 = v16 + 8;
        if (v6 != v7)
        {
          do
          {
            uint64_t v17 = *--v6;
            *((void *)v16 - 1) = v17;
            v16 -= 8;
          }
          while (v6 != v7);
          long long v6 = *(void **)v5;
        }
        *(void *)uint64_t v5 = v16;
        *(void *)(v5 + 8) = v10;
        *(void *)(v5 + 16) = &v15[8 * v14];
        if (v6) {
          operator delete(v6);
        }
      }
      else
      {
        *long long v6 = v2;
        uint64_t v10 = v6 + 1;
      }
      *(void *)(v5 + 8) = v10;
    }
    else
    {
      mecab_destroy();
    }
    return pthread_mutex_unlock(v4);
  }
  return result;
}

void sub_1D2CD2A50()
{
}

uint64_t morphun::tokenizer::checkoutCachedMecabTokenizer(morphun::tokenizer *this)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (this > 7) {
    goto LABEL_12;
  }
  unsigned int v1 = this;
  uint64_t v2 = (char *)&morphun::tokenizer::tokenizersMecab[12 * this];
  pthread_mutex_lock((pthread_mutex_t *)(v2 + 32));
  uint64_t v3 = (void *)*((void *)v2 + 1);
  if (!v3) {
    operator new();
  }
  uint64_t v4 = v3[1];
  if (*v3 == v4)
  {
    if (*(void *)v2
      || (LOBYTE(__p) = 0,
          strcpy((char *)&v20, "-d"),
          __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__p,
          __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)&v20,
          __dst.__r_.__value_.__r.__words[2] = morphun::tokenizer::tokenizersMecab[12 * v1 + 2],
          uint64_t v6 = MEMORY[0x1D942BAC0](3, &__dst),
          (*(void *)uint64_t v2 = v6) != 0))
    {
      uint64_t v5 = mecab_model_new_tagger();
    }
    else
    {
      uint64_t v5 = 0;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v4 - 8);
    v3[1] = v4 - 8;
  }
  pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
  if (!v5)
  {
LABEL_12:
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Mecab construction failed. ");
    uint64_t v8 = (char *)mecab_strerror();
    if (v8 && *v8)
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, v8);
      if ((v19 & 0x80u) == 0) {
        p_p = (const char *)&__p;
      }
      else {
        p_p = (const char *)__p;
      }
      if ((v19 & 0x80u) == 0) {
        int32_t v12 = v19;
      }
      else {
        int32_t v12 = v18;
      }
      morphun::util::StringViewUtils::to_u16string(p_p, v12, &v20);
      int v13 = SHIBYTE(v20.__r_.__value_.__r.__words[2]);
      unint64_t v14 = (void *)v20.__r_.__value_.__r.__words[0];
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v15 = &v20;
      }
      else {
        int v15 = (std::basic_string<char16_t> *)v20.__r_.__value_.__r.__words[0];
      }
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v20.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v15, size);
      if (v13 < 0) {
        operator delete(v14);
      }
      if ((char)v19 < 0) {
        operator delete(__p);
      }
    }
    else
    {
      std::basic_string<char16_t>::append(&__dst, L"Perhaps the data files could not be found.", 0x2AuLL);
    }
    if (morphun::util::gLogLevel <= 4)
    {
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_dst = &__dst;
      }
      else {
        p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)p_dst);
    }
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::exception::InvalidConfigurationException::InvalidConfigurationException((uint64_t)exception, (long long *)&__dst);
  }
  return v5;
}

void sub_1D2CD2CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (v24 < 0) {
    operator delete(v23);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::ULocale::toString(morphun::util::ULocale *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  int v3 = *((char *)this + 127);
  if (v3 < 0)
  {
    uint64_t v4 = (const char *)*((void *)this + 13);
    uint64_t v5 = *((void *)this + 14);
  }
  else
  {
    uint64_t v4 = (char *)this + 104;
    LODWORD(v5) = v3;
  }
  morphun::util::StringViewUtils::to_u16string(v4, v5, a2);
}

void virtual thunk to'morphun::util::ULocale::~ULocale(morphun::util::ULocale *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::util::ULocale::ULocale(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v11 - 40)) = a2[1];
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  int v12 = *(unsigned __int8 *)(a3 + 23);
  if ((v12 & 0x80u) != 0) {
    int v12 = *(_DWORD *)(a3 + 8);
  }
  int v13 = *(unsigned __int8 *)(a4 + 23);
  if ((v13 & 0x80u) != 0) {
    int v13 = *(_DWORD *)(a4 + 8);
  }
  int v14 = v13 + v12;
  int v15 = *(unsigned __int8 *)(a5 + 23);
  if ((v15 & 0x80u) != 0) {
    int v15 = *(_DWORD *)(a5 + 8);
  }
  int v16 = *(unsigned __int8 *)(a6 + 23);
  if ((v16 & 0x80u) != 0) {
    int v16 = *(_DWORD *)(a6 + 8);
  }
  int v17 = v14 + v15 + v16;
  if (v17 == v12) {
    int v18 = v17;
  }
  else {
    int v18 = v17 + 1;
  }
  std::string::reserve((std::string *)(a1 + 104), v18);
  int v19 = *(char *)(a3 + 23);
  if (v19 >= 0) {
    std::basic_string<char16_t> v20 = (const std::string::value_type *)a3;
  }
  else {
    std::basic_string<char16_t> v20 = *(const std::string::value_type **)a3;
  }
  if (v19 >= 0) {
    std::string::size_type v21 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::string::size_type v21 = *(void *)(a3 + 8);
  }
  std::string::append((std::string *)(a1 + 104), v20, v21);
  uint64_t v22 = *(unsigned __int8 *)(a4 + 23);
  if ((v22 & 0x80u) != 0) {
    uint64_t v22 = *(void *)(a4 + 8);
  }
  if (v22)
  {
    if (std::string::find((const std::string *)a4, 61, 0) == -1) {
      std::string::value_type v23 = 95;
    }
    else {
      std::string::value_type v23 = 64;
    }
    std::string::push_back((std::string *)(a1 + 104), v23);
    int v24 = *(char *)(a4 + 23);
    if (v24 >= 0) {
      uint64_t v25 = (const std::string::value_type *)a4;
    }
    else {
      uint64_t v25 = *(const std::string::value_type **)a4;
    }
    if (v24 >= 0) {
      std::string::size_type v26 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      std::string::size_type v26 = *(void *)(a4 + 8);
    }
    std::string::append((std::string *)(a1 + 104), v25, v26);
  }
  uint64_t v27 = *(unsigned __int8 *)(a5 + 23);
  if ((v27 & 0x80u) != 0) {
    uint64_t v27 = *(void *)(a5 + 8);
  }
  if (v27)
  {
    if (std::string::find((const std::string *)a5, 61, 0) == -1) {
      std::string::value_type v28 = 95;
    }
    else {
      std::string::value_type v28 = 64;
    }
    std::string::push_back((std::string *)(a1 + 104), v28);
    int v29 = *(char *)(a5 + 23);
    if (v29 >= 0) {
      v30 = (const std::string::value_type *)a5;
    }
    else {
      v30 = *(const std::string::value_type **)a5;
    }
    if (v29 >= 0) {
      std::string::size_type v31 = *(unsigned __int8 *)(a5 + 23);
    }
    else {
      std::string::size_type v31 = *(void *)(a5 + 8);
    }
    std::string::append((std::string *)(a1 + 104), v30, v31);
  }
  uint64_t v32 = *(unsigned __int8 *)(a6 + 23);
  if ((v32 & 0x80u) != 0) {
    uint64_t v32 = *(void *)(a6 + 8);
  }
  if (v32)
  {
    uint64_t v33 = *(unsigned __int8 *)(a4 + 23);
    if ((v33 & 0x80u) != 0) {
      uint64_t v33 = *(void *)(a4 + 8);
    }
    if (!v33) {
      std::string::push_back((std::string *)(a1 + 104), 95);
    }
    if (std::string::find((const std::string *)a6, 61, 0) == -1) {
      std::string::value_type v34 = 95;
    }
    else {
      std::string::value_type v34 = 64;
    }
    std::string::push_back((std::string *)(a1 + 104), v34);
    int v35 = *(char *)(a6 + 23);
    if (v35 >= 0) {
      v36 = (const std::string::value_type *)a6;
    }
    else {
      v36 = *(const std::string::value_type **)a6;
    }
    if (v35 >= 0) {
      std::string::size_type v37 = *(unsigned __int8 *)(a6 + 23);
    }
    else {
      std::string::size_type v37 = *(void *)(a6 + 8);
    }
    std::string::append((std::string *)(a1 + 104), v36, v37);
  }
  memset(v54, 0, 157);
  int v38 = *(char *)(a1 + 127);
  if ((v38 & 0x80000000) == 0)
  {
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    if (!v38)
    {
LABEL_67:
      uloc_getLanguage();
      MEMORY[0x1D942B680](a1 + 8, v54);
      uloc_getScript();
      MEMORY[0x1D942B680](a1 + 32, v54);
      uloc_getCountry();
      MEMORY[0x1D942B680](a1 + 56, v54);
      std::string::size_type v40 = std::string::find((const std::string *)(a1 + 104), 64, 0);
      if (v40 == -1)
      {
        uloc_getVariant();
        MEMORY[0x1D942B680](a1 + 80, v54);
      }
      else
      {
        std::string::assign((std::string *)(a1 + 80), (const std::string *)(a1 + 104), v40 + 1, 0xFFFFFFFFFFFFFFFFLL);
      }
      return a1;
    }
LABEL_66:
    uloc_canonicalize();
    MEMORY[0x1D942B680](a1 + 104, v54);
    goto LABEL_67;
  }
  unint64_t v39 = *(void *)(a1 + 112);
  if (v39 <= 0x9C)
  {
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    if (!v39) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (morphun::util::gLogLevel <= 4)
  {
    if (*(char *)(a1 + 127) < 0)
    {
      v42 = *(const char **)(a1 + 104);
      uint64_t v41 = *(void *)(a1 + 112);
    }
    else
    {
      LODWORD(v41) = *(unsigned __int8 *)(a1 + 127);
      v42 = (const char *)(a1 + 104);
    }
    morphun::util::StringViewUtils::to_u16string(v42, v41, &v53);
    std::basic_string<char16_t>::insert(&v53, (std::basic_string<char16_t>::size_type)"I", (const std::basic_string<char16_t>::value_type *)0xF, v43);
    __p[0] = v53;
    memset(&v53, 0, sizeof(v53));
    if (morphun::util::gLogLevel <= 4)
    {
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v44 = __p;
      }
      else {
        v44 = (std::basic_string<char16_t> *)__p[0].__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)v44);
    }
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v53.__r_.__value_.__l.__data_);
    }
  }
  std::string::basic_string[abi:ne180100]<0>(&v53, (char *)&unk_1D2ED2485);
  std::string::basic_string[abi:ne180100]<0>(v50, (char *)&unk_1D2ED2485);
  std::string::basic_string[abi:ne180100]<0>(v48, (char *)&unk_1D2ED2485);
  std::string::basic_string[abi:ne180100]<0>(v46, (char *)&unk_1D2ED2485);
  morphun::util::ULocale::ULocale((uint64_t)__p, (uint64_t)&v53, (uint64_t)v50, (uint64_t)v48, (uint64_t)v46);
  morphun::util::ULocale::operator=(a1, (uint64_t)__p);
  if (v47 < 0) {
    operator delete(v46[0]);
  }
  if (v49 < 0) {
    operator delete(v48[0]);
  }
  if (v51 < 0) {
    operator delete(v50[0]);
  }
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v53.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1D2CD3430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a53 < 0) {
    operator delete(a48);
  }
  if (v53[127] < 0) {
    operator delete(*v58);
  }
  if (v53[103] < 0) {
    operator delete(*v57);
  }
  if (v53[79] < 0) {
    operator delete(*v56);
  }
  if (v53[55] < 0) {
    operator delete(*v55);
  }
  if (v53[31] < 0) {
    operator delete(*v54);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::ULocale::ULocale(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &off_1F2A08A90;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v10 = a1 + 8;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v11 = a1 + 56;
  uint64_t v12 = a1 + 32;
  int v13 = (std::string *)(a1 + 80);
  *(_OWORD *)(a1 + 104) = 0u;
  int v14 = (std::string *)(a1 + 104);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 120) = 0;
  int v15 = *(unsigned __int8 *)(a2 + 23);
  if ((v15 & 0x80u) != 0) {
    int v15 = *(_DWORD *)(a2 + 8);
  }
  int v16 = *(unsigned __int8 *)(a3 + 23);
  if ((v16 & 0x80u) != 0) {
    int v16 = *(_DWORD *)(a3 + 8);
  }
  int v17 = v16 + v15;
  int v18 = *(unsigned __int8 *)(a4 + 23);
  if ((v18 & 0x80u) != 0) {
    int v18 = *(_DWORD *)(a4 + 8);
  }
  int v19 = *(unsigned __int8 *)(a5 + 23);
  if ((v19 & 0x80u) != 0) {
    int v19 = *(_DWORD *)(a5 + 8);
  }
  int v20 = v17 + v18 + v19;
  if (v20 == v15) {
    int v21 = v20;
  }
  else {
    int v21 = v20 + 1;
  }
  std::string::reserve((std::string *)(a1 + 104), v21);
  int v22 = *(char *)(a2 + 23);
  if (v22 >= 0) {
    std::string::value_type v23 = (const std::string::value_type *)a2;
  }
  else {
    std::string::value_type v23 = *(const std::string::value_type **)a2;
  }
  if (v22 >= 0) {
    std::string::size_type v24 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v24 = *(void *)(a2 + 8);
  }
  std::string::append(v14, v23, v24);
  uint64_t v25 = *(unsigned __int8 *)(a3 + 23);
  if ((v25 & 0x80u) != 0) {
    uint64_t v25 = *(void *)(a3 + 8);
  }
  if (v25)
  {
    if (std::string::find((const std::string *)a3, 61, 0) == -1) {
      std::string::value_type v26 = 95;
    }
    else {
      std::string::value_type v26 = 64;
    }
    std::string::push_back(v14, v26);
    int v27 = *(char *)(a3 + 23);
    if (v27 >= 0) {
      std::string::value_type v28 = (const std::string::value_type *)a3;
    }
    else {
      std::string::value_type v28 = *(const std::string::value_type **)a3;
    }
    if (v27 >= 0) {
      std::string::size_type v29 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      std::string::size_type v29 = *(void *)(a3 + 8);
    }
    std::string::append(v14, v28, v29);
  }
  uint64_t v30 = *(unsigned __int8 *)(a4 + 23);
  if ((v30 & 0x80u) != 0) {
    uint64_t v30 = *(void *)(a4 + 8);
  }
  if (v30)
  {
    if (std::string::find((const std::string *)a4, 61, 0) == -1) {
      std::string::value_type v31 = 95;
    }
    else {
      std::string::value_type v31 = 64;
    }
    std::string::push_back(v14, v31);
    int v32 = *(char *)(a4 + 23);
    if (v32 >= 0) {
      uint64_t v33 = (const std::string::value_type *)a4;
    }
    else {
      uint64_t v33 = *(const std::string::value_type **)a4;
    }
    if (v32 >= 0) {
      std::string::size_type v34 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      std::string::size_type v34 = *(void *)(a4 + 8);
    }
    std::string::append(v14, v33, v34);
  }
  uint64_t v35 = *(unsigned __int8 *)(a5 + 23);
  if ((v35 & 0x80u) != 0) {
    uint64_t v35 = *(void *)(a5 + 8);
  }
  if (v35)
  {
    uint64_t v36 = *(unsigned __int8 *)(a3 + 23);
    if ((v36 & 0x80u) != 0) {
      uint64_t v36 = *(void *)(a3 + 8);
    }
    if (!v36) {
      std::string::push_back(v14, 95);
    }
    if (std::string::find((const std::string *)a5, 61, 0) == -1) {
      std::string::value_type v37 = 95;
    }
    else {
      std::string::value_type v37 = 64;
    }
    std::string::push_back(v14, v37);
    int v38 = *(char *)(a5 + 23);
    if (v38 >= 0) {
      unint64_t v39 = (const std::string::value_type *)a5;
    }
    else {
      unint64_t v39 = *(const std::string::value_type **)a5;
    }
    if (v38 >= 0) {
      std::string::size_type v40 = *(unsigned __int8 *)(a5 + 23);
    }
    else {
      std::string::size_type v40 = *(void *)(a5 + 8);
    }
    std::string::append(v14, v39, v40);
  }
  memset(v57, 0, 157);
  int v41 = *(char *)(a1 + 127);
  if ((v41 & 0x80000000) == 0)
  {
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    if (!v41)
    {
LABEL_67:
      uloc_getLanguage();
      MEMORY[0x1D942B680](v10, v57);
      uloc_getScript();
      MEMORY[0x1D942B680](v12, v57);
      uloc_getCountry();
      MEMORY[0x1D942B680](v11, v57);
      std::string::size_type v43 = std::string::find(v14, 64, 0);
      if (v43 == -1)
      {
        uloc_getVariant();
        MEMORY[0x1D942B680](v13, v57);
      }
      else
      {
        std::string::assign(v13, v14, v43 + 1, 0xFFFFFFFFFFFFFFFFLL);
      }
      return a1;
    }
LABEL_66:
    uloc_canonicalize();
    MEMORY[0x1D942B680](v14, v57);
    goto LABEL_67;
  }
  unint64_t v42 = *(void *)(a1 + 112);
  if (v42 <= 0x9C)
  {
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    if (!v42) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (morphun::util::gLogLevel <= 4)
  {
    if (*(char *)(a1 + 127) < 0)
    {
      v45 = *(const char **)(a1 + 104);
      uint64_t v44 = *(void *)(a1 + 112);
    }
    else
    {
      LODWORD(v44) = *(unsigned __int8 *)(a1 + 127);
      v45 = (const char *)v14;
    }
    morphun::util::StringViewUtils::to_u16string(v45, v44, &v56);
    std::basic_string<char16_t>::insert(&v56, (std::basic_string<char16_t>::size_type)"I", (const std::basic_string<char16_t>::value_type *)0xF, v46);
    __p[0] = v56;
    memset(&v56, 0, sizeof(v56));
    if (morphun::util::gLogLevel <= 4)
    {
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v47 = __p;
      }
      else {
        char v47 = (std::basic_string<char16_t> *)__p[0].__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)v47);
    }
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v56.__r_.__value_.__l.__data_);
    }
  }
  std::string::basic_string[abi:ne180100]<0>(&v56, (char *)&unk_1D2ED2485);
  std::string::basic_string[abi:ne180100]<0>(v53, (char *)&unk_1D2ED2485);
  std::string::basic_string[abi:ne180100]<0>(v51, (char *)&unk_1D2ED2485);
  std::string::basic_string[abi:ne180100]<0>(v49, (char *)&unk_1D2ED2485);
  morphun::util::ULocale::ULocale(__p, &v56, v53, v51, v49);
  morphun::util::ULocale::operator=(a1, (uint64_t)__p);
  if (v50 < 0) {
    operator delete(v49[0]);
  }
  if (v52 < 0) {
    operator delete(v51[0]);
  }
  if (v54 < 0) {
    operator delete(v53[0]);
  }
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v56.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1D2CD3AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a53 < 0) {
    operator delete(a48);
  }
  if (v53[127] < 0) {
    operator delete(*v58);
  }
  if (v53[103] < 0) {
    operator delete(*v57);
  }
  if (v53[79] < 0) {
    operator delete(*v56);
  }
  if (v53[55] < 0) {
    operator delete(*v55);
  }
  if (v53[31] < 0) {
    operator delete(*v54);
  }
  _Unwind_Resume(exception_object);
}

morphun::util::ULocale *morphun::util::ULocale::ULocale(morphun::util::ULocale *this, const morphun::util::ULocale *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v4 - 40)) = *((void *)a2 + 1);
  *(_OWORD *)((char *)this + 8) = 0u;
  *((void *)this + 15) = 0;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  morphun::util::ULocale::operator=((uint64_t)this, a3);
  return this;
}

void sub_1D2CD3CA0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 127) < 0) {
    operator delete(*(void **)(v1 + 104));
  }
  if (*(char *)(v1 + 103) < 0) {
    operator delete(*(void **)(v1 + 80));
  }
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*(void **)(v1 + 56));
  }
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*(void **)(v1 + 32));
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void morphun::util::ULocale::getFallback(morphun::util::ULocale *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (const std::string *)((char *)this + 104);
  std::string::size_type v5 = std::string::find((const std::string *)((char *)this + 104), 64, 0);
  if (v5 == -1)
  {
    if (*((char *)this + 127) < 0) {
      std::string::size_type v7 = *((void *)this + 14);
    }
    else {
      std::string::size_type v7 = *((unsigned __int8 *)this + 127);
    }
    std::string::size_type v8 = std::string::rfind(v4, 95, v7);
    if (v8 != -1)
    {
      std::string::size_type v9 = v8 - 1;
      while (v9 != -1)
      {
        uint64_t v10 = v4;
        if (*((char *)this + 127) < 0) {
          uint64_t v10 = (const std::string *)v4->__r_.__value_.__r.__words[0];
        }
        int v11 = v10->__r_.__value_.__s.__data_[v9--];
        if (v11 != 95)
        {
          std::string::size_type v12 = v9 + 2;
          goto LABEL_21;
        }
      }
    }
    std::string::size_type v12 = 0;
LABEL_21:
    std::string::basic_string(&v25, v4, 0, v12, (std::allocator<char> *)&v24);
    std::string::basic_string(&v24, v4, v7, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__p);
    if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v13 = &v24;
    }
    else {
      int v13 = (std::string *)v24.__r_.__value_.__r.__words[0];
    }
    if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v24.__r_.__value_.__l.__size_;
    }
    int v15 = std::string::append(&v25, (const std::string::value_type *)v13, size);
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v26.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    std::basic_string<char16_t> __p = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v20 = 0;
    v17[0] = 0;
    v17[1] = 0;
    uint64_t v18 = 0;
    morphun::util::ULocale::ULocale(a2, (uint64_t)&v26, (uint64_t)&__p, (uint64_t)v19, (uint64_t)v17);
    if (SHIBYTE(v18) < 0) {
      operator delete(v17[0]);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete(v19[0]);
    }
    if (SHIBYTE(v23) < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v6 = (void *)v25.__r_.__value_.__r.__words[0];
      goto LABEL_39;
    }
  }
  else
  {
    std::string::basic_string(&v26, v4, 0, v5, (std::allocator<char> *)&v25);
    memset(&v25, 0, sizeof(v25));
    memset(&v24, 0, sizeof(v24));
    std::basic_string<char16_t> __p = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    morphun::util::ULocale::ULocale(a2, (uint64_t)&v26, (uint64_t)&v25, (uint64_t)&v24, (uint64_t)&__p);
    if (SHIBYTE(v23) < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v6 = (void *)v26.__r_.__value_.__r.__words[0];
LABEL_39:
      operator delete(v6);
    }
  }
}

void sub_1D2CD3F30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (*(char *)(v33 - 65) < 0) {
    operator delete(*(void **)(v33 - 88));
  }
  _Unwind_Resume(exception_object);
}

unint64_t morphun::util::ULocale::hashCode(morphun::util::ULocale *this)
{
  int v3 = (char *)*((void *)this + 13);
  uint64_t v1 = (char *)this + 104;
  uint64_t v2 = v3;
  unint64_t v4 = *((void *)v1 + 1);
  if (v1[23] >= 0)
  {
    unint64_t v5 = v1[23];
  }
  else
  {
    uint64_t v1 = v2;
    unint64_t v5 = v4;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t *)v1, v5);
}

void virtual thunk to'morphun::util::ULocale::toString(morphun::util::ULocale *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v2 = (char *)this + *(void *)(*(void *)this - 24);
  if (v2[127] < 0)
  {
    int v3 = (const char *)*((void *)v2 + 13);
    uint64_t v4 = *((void *)v2 + 14);
  }
  else
  {
    int v3 = v2 + 104;
    LODWORD(v4) = v2[127];
  }
  morphun::util::StringViewUtils::to_u16string(v3, v4, a2);
}

unint64_t morphun::util::ULocale::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t **)(a2 + 104);
  uint64_t v2 = a2 + 104;
  int v3 = v4;
  int v5 = *(char *)(v2 + 23);
  if (v5 >= 0) {
    uint64_t v6 = (uint64_t *)v2;
  }
  else {
    uint64_t v6 = v3;
  }
  if (v5 >= 0) {
    unint64_t v7 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    unint64_t v7 = *(void *)(v2 + 8);
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v6, v7);
}

void morphun::dialog::language::SvCommonConceptFactory::~SvCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05BE8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05BE8);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_ExitingLookupFunction::~FiGrammarSynthesizer_ExitingLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_ExitingLookupFunction *this)
{
}

uint64_t **com::apple::siri::tokenizer::data::config_ca::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::exception::ClassCastException::~ClassCastException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::ClassCastException::ClassCastException(morphun::exception::ClassCastException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11358;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A11358;
  return result;
}

void *morphun::exception::ClassCastException::ClassCastException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A11358;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A11358;
  return result;
}

uint64_t morphun::analysis::MorphologicalAnalyzer::compareGrammemes(morphun::analysis::MorphologicalAnalyzer *this, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *((void *)this + 22); ; i += 24)
  {
    if (i == *((void *)this + 23)) {
      return 0;
    }
    uint64_t v4 = *(void **)i;
    uint64_t v5 = *(void **)(i + 8);
    if (*(void **)i != v5)
    {
      uint64_t v6 = *(void **)i;
      do
      {
        if ((*v6 & ~a2) == 0) {
          goto LABEL_8;
        }
        ++v6;
      }
      while (v6 != v5);
      uint64_t v6 = *(void **)(i + 8);
LABEL_8:
      while ((*v4 & ~a3) != 0)
      {
        if (++v4 == v5)
        {
          uint64_t v4 = *(void **)(i + 8);
          break;
        }
      }
      if (v6 != v4) {
        break;
      }
    }
  }
  if (v6 < v4) {
    return -1;
  }
  else {
    return 1;
  }
}

void morphun::analysis::MorphologicalAnalyzer::selectLemmaInflection(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
}

void morphun::analysis::MorphologicalAnalyzer::selectBestLemmaMapping(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 == v5)
  {
    char v10 = 0;
    *(unsigned char *)a3 = 0;
  }
  else
  {
    for (uint64_t i = v4 + 48; i != v5; i += 48)
    {
      if ((*(uint64_t (**)(uint64_t, void, void))(*(void *)a1 + 48))(a1, *(void *)(i + 8), *(void *)(v4 + 8)) < 0)uint64_t v4 = i; {
    }
      }
    *(void *)a3 = &off_1F2A0F180;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(v4 + 8);
    std::string::size_type v8 = (std::basic_string<char16_t> *)(a3 + 24);
    if (*(char *)(v4 + 47) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v8, *(const std::basic_string<char16_t>::value_type **)(v4 + 24), *(void *)(v4 + 32));
    }
    else
    {
      long long v9 = *(_OWORD *)(v4 + 24);
      *(void *)(a3 + 40) = *(void *)(v4 + 40);
      *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v9;
    }
    char v10 = 1;
  }
  *(unsigned char *)(a3 + 48) = v10;
}

void morphun::analysis::MorphologicalAnalyzer::filterInflectionGrammemes(uint64_t a1, char **a2)
{
  long long v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 == v4)
  {
    a2[1] = v3;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      long long v9 = *(void **)(a1 + 200);
      char v10 = *(void **)(a1 + 208);
      if (v9 != v10)
      {
        while ((*v9 & ~*(void *)v3) != 0)
        {
          if (++v9 == v10) {
            goto LABEL_8;
          }
        }
      }
      if (v9 == v10)
      {
LABEL_8:
        if ((unint64_t)v7 >= v8)
        {
          unint64_t v13 = 0xCCCCCCCCCCCCCCCDLL * ((v7 - v6) >> 3) + 1;
          if (v13 > 0x666666666666666) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          if (0x999999999999999ALL * ((uint64_t)(v8 - (void)v6) >> 3) > v13) {
            unint64_t v13 = 0x999999999999999ALL * ((uint64_t)(v8 - (void)v6) >> 3);
          }
          if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v8 - (void)v6) >> 3) >= 0x333333333333333) {
            unint64_t v14 = 0x666666666666666;
          }
          else {
            unint64_t v14 = v13;
          }
          if (v14) {
            unint64_t v14 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::analysis::DictionaryExposableMorphology::InflectionGrammemes>>(v14);
          }
          else {
            uint64_t v15 = 0;
          }
          unint64_t v16 = v14 + 8 * ((v7 - v6) >> 3);
          long long v17 = *(_OWORD *)v3;
          long long v18 = *((_OWORD *)v3 + 1);
          *(void *)(v16 + 32) = *((void *)v3 + 4);
          *(_OWORD *)unint64_t v16 = v17;
          *(_OWORD *)(v16 + 16) = v18;
          if (v7 == v6)
          {
            uint64_t v20 = (char *)(v14 + 8 * ((v7 - v6) >> 3));
          }
          else
          {
            unint64_t v19 = v14 + 8 * ((v7 - v6) >> 3);
            do
            {
              uint64_t v20 = (char *)(v19 - 40);
              long long v21 = *(_OWORD *)(v7 - 40);
              long long v22 = *(_OWORD *)(v7 - 24);
              *(void *)(v19 - 8) = *((void *)v7 - 1);
              *(_OWORD *)(v19 - 24) = v22;
              *(_OWORD *)(v19 - 40) = v21;
              v7 -= 40;
              v19 -= 40;
            }
            while (v7 != v6);
          }
          unint64_t v8 = v14 + 40 * v15;
          unint64_t v7 = (char *)(v16 + 40);
          if (v6) {
            operator delete(v6);
          }
          uint64_t v6 = v20;
        }
        else
        {
          long long v11 = *(_OWORD *)v3;
          long long v12 = *((_OWORD *)v3 + 1);
          *((void *)v7 + 4) = *((void *)v3 + 4);
          *(_OWORD *)unint64_t v7 = v11;
          *((_OWORD *)v7 + 1) = v12;
          v7 += 40;
        }
      }
      v3 += 40;
    }
    while (v3 != v4);
    uint64_t v23 = *a2;
    a2[1] = *a2;
    if (v6 != v7)
    {
      std::string v24 = v6;
      do
      {
        std::string v25 = a2[2];
        if (v23 >= v25)
        {
          unint64_t v28 = 0xCCCCCCCCCCCCCCCDLL * ((v23 - *a2) >> 3);
          unint64_t v29 = v28 + 1;
          if (v28 + 1 > 0x666666666666666) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v30 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - *a2) >> 3);
          if (2 * v30 > v29) {
            unint64_t v29 = 2 * v30;
          }
          if (v30 >= 0x333333333333333) {
            unint64_t v31 = 0x666666666666666;
          }
          else {
            unint64_t v31 = v29;
          }
          if (v31) {
            unint64_t v31 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::analysis::DictionaryExposableMorphology::InflectionGrammemes>>(v31);
          }
          else {
            uint64_t v32 = 0;
          }
          unint64_t v33 = v31 + 40 * v28;
          long long v34 = *v24;
          long long v35 = v24[1];
          *(void *)(v33 + 32) = *((void *)v24 + 4);
          *(_OWORD *)unint64_t v33 = v34;
          *(_OWORD *)(v33 + 16) = v35;
          std::string::value_type v37 = *a2;
          uint64_t v36 = a2[1];
          unint64_t v38 = v33;
          if (v36 != *a2)
          {
            do
            {
              long long v39 = *(_OWORD *)(v36 - 40);
              long long v40 = *(_OWORD *)(v36 - 24);
              *(void *)(v38 - 8) = *((void *)v36 - 1);
              *(_OWORD *)(v38 - 24) = v40;
              *(_OWORD *)(v38 - 40) = v39;
              v38 -= 40;
              v36 -= 40;
            }
            while (v36 != v37);
            uint64_t v36 = *a2;
          }
          uint64_t v23 = (char *)(v33 + 40);
          *a2 = (char *)v38;
          a2[1] = (char *)(v33 + 40);
          a2[2] = (char *)(v31 + 40 * v32);
          if (v36) {
            operator delete(v36);
          }
        }
        else
        {
          long long v26 = *v24;
          long long v27 = v24[1];
          *((void *)v23 + 4) = *((void *)v24 + 4);
          *(_OWORD *)uint64_t v23 = v26;
          *((_OWORD *)v23 + 1) = v27;
          v23 += 40;
        }
        a2[1] = v23;
        std::string v24 = (_OWORD *)((char *)v24 + 40);
      }
      while (v24 != (_OWORD *)v7);
    }
    if (v6)
    {
      operator delete(v6);
    }
  }
}

void sub_1D2CD46E4(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::MorphologicalAnalyzer::convertLemmaAttributes(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(void *)&long long v33 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  std::vector<long long>::reserve((void **)a1, (a3[1] - *a3) >> 4);
  uint64_t v5 = *a3;
  uint64_t v6 = a3[1];
  if (*a3 != v6)
  {
    do
    {
      unint64_t v7 = *(void *)(v5 + 8);
      if (v7 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v8 = *(const void **)v5;
      if (v7 >= 0xB)
      {
        uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v7 | 3) != 0xB) {
          uint64_t v10 = v7 | 3;
        }
        p_dst = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v10 + 1);
        *((void *)&__dst + 1) = v7;
        unint64_t v32 = v11 | 0x8000000000000000;
        *(void *)&long long __dst = p_dst;
      }
      else
      {
        HIBYTE(v32) = *(void *)(v5 + 8);
        p_dst = &__dst;
        if (!v7) {
          goto LABEL_10;
        }
      }
      memmove(p_dst, v8, 2 * v7);
LABEL_10:
      *((_WORD *)p_dst + v7) = 0;
      long long v26 = 0;
      long long v27 = 0;
      unint64_t v28 = 0;
      unint64_t v29 = &v26;
      char v30 = 0;
      long long v26 = (std::basic_string<char16_t> *)operator new(0x18uLL);
      long long v27 = v26;
      unint64_t v28 = v26 + 1;
      long long v27 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v28, &__dst, &v33, v26);
      uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2, (uint64_t *)&v26);
      uint64_t v13 = BinaryProperties;
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v14 = *(void *)(a1 + 16);
      if ((unint64_t)v15 >= v14)
      {
        long long v17 = *(uint64_t **)a1;
        uint64_t v18 = ((uint64_t)v15 - *(void *)a1) >> 3;
        unint64_t v19 = v18 + 1;
        if ((unint64_t)(v18 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v20 = v14 - (void)v17;
        if (v20 >> 2 > v19) {
          unint64_t v19 = v20 >> 2;
        }
        if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21) {
          unint64_t v21 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v21);
        }
        else {
          uint64_t v22 = 0;
        }
        uint64_t v23 = (uint64_t *)(v21 + 8 * v18);
        uint64_t *v23 = v13;
        unint64_t v16 = v23 + 1;
        while (v15 != v17)
        {
          uint64_t v24 = *--v15;
          *--uint64_t v23 = v24;
        }
        *(void *)a1 = v23;
        *(void *)(a1 + 8) = v16;
        *(void *)(a1 + 16) = v21 + 8 * v22;
        if (v17) {
          operator delete(v17);
        }
      }
      else
      {
        uint64_t *v15 = BinaryProperties;
        unint64_t v16 = v15 + 1;
      }
      *(void *)(a1 + 8) = v16;
      unint64_t v29 = &v26;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
      if (SHIBYTE(v32) < 0) {
        operator delete((void *)__dst);
      }
      v5 += 16;
    }
    while (v5 != v6);
  }
}

void sub_1D2CD4944(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v22 = *(void **)v20;
  if (*(void *)v20)
  {
    *(void *)(v20 + 8) = v22;
    operator delete(v22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *morphun::analysis::MorphologicalAnalyzer::MorphologicalAnalyzer(uint64_t *a1, uint64_t *a2, morphun::dictionary::DictionaryMetaData *a3, uint64_t *a4, uint64_t a5, uint64_t **a6)
{
  uint64_t v11 = morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)a1, (const morphun::util::ULocale *)(a2 + 1), a3);
  uint64_t v12 = *a2;
  *(void *)uint64_t v11 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v12 - 40)) = a2[3];
  morphun::analysis::MorphologicalAnalyzer::convertLemmaAttributes((uint64_t)(a1 + 19), a1[1], a4);
  morphun::analysis::convertGrammemePriorities(a1 + 22, a1[1], a5);
  morphun::analysis::convertIgnoreGrammemes((uint64_t)(a1 + 25), a1[1], a6);
  return a1;
}

void sub_1D2CD4ABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  uint64_t v6 = *v4;
  if (*v4)
  {
    *(void *)(v2 + 160) = v6;
    operator delete(v6);
  }
  morphun::analysis::DictionaryExposableMorphology::~DictionaryExposableMorphology((void **)v2, v3);
  _Unwind_Resume(a1);
}

void morphun::analysis::convertGrammemePriorities(void *a1, uint64_t a2, uint64_t a3)
{
  long long v3 = a1;
  *(void *)&long long v55 = *MEMORY[0x1E4F143B8];
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  unint64_t v38 = a1 + 2;
  uint64_t v4 = *(void **)a3;
  uint64_t v5 = *(void **)(a3 + 8);
  if (v5 != *(void **)a3)
  {
    unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *(void *)a3) >> 3);
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    char v52 = v38;
    v48 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v6);
    char v49 = v48;
    char v50 = v48;
    char v51 = &v48[v8];
    std::vector<std::vector<long long>>::__swap_out_circular_buffer(v3, &v48);
    std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&v48);
    uint64_t v4 = *(void **)a3;
    uint64_t v5 = *(void **)(a3 + 8);
  }
  if (v4 == v5) {
    return;
  }
  long long v39 = v5;
  long long v40 = v3;
  do
  {
    std::string::size_type v43 = 0;
    uint64_t v44 = 0;
    unint64_t v45 = 0;
    std::vector<long long>::reserve((void **)&v43, (uint64_t)(v4[1] - *v4) >> 4);
    uint64_t v9 = *v4;
    uint64_t v10 = v4[1];
    if (*v4 == v10) {
      goto LABEL_37;
    }
    int v41 = v4;
    unint64_t v11 = v45;
    uint64_t v12 = v43;
    do
    {
      unint64_t v13 = *(void *)(v9 + 8);
      if (v13 >= 0x7FFFFFFFFFFFFFF8)
      {
        std::string::size_type v43 = v12;
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v14 = *(const void **)v9;
      if (v13 >= 0xB)
      {
        uint64_t v16 = (v13 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v13 | 3) != 0xB) {
          uint64_t v16 = v13 | 3;
        }
        p_dst = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v16 + 1);
        *((void *)&__dst + 1) = v13;
        unint64_t v54 = v17 | 0x8000000000000000;
        *(void *)&long long __dst = p_dst;
LABEL_15:
        memmove(p_dst, v14, 2 * v13);
        goto LABEL_16;
      }
      HIBYTE(v54) = *(void *)(v9 + 8);
      p_dst = &__dst;
      if (v13) {
        goto LABEL_15;
      }
LABEL_16:
      *((_WORD *)p_dst + v13) = 0;
      v48 = 0;
      char v49 = 0;
      char v50 = 0;
      std::basic_string<char16_t>::size_type v46 = &v48;
      char v47 = 0;
      v48 = (std::basic_string<char16_t> *)operator new(0x18uLL);
      char v49 = v48;
      char v50 = v48 + 1;
      char v49 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v50, &__dst, &v55, v48);
      uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2, (uint64_t *)&v48);
      uint64_t v19 = BinaryProperties;
      uint64_t v20 = v44;
      if ((unint64_t)v44 >= v11)
      {
        uint64_t v22 = v44 - v12;
        unint64_t v23 = v22 + 1;
        if ((unint64_t)(v22 + 1) >> 61)
        {
          std::string::size_type v43 = v12;
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if ((uint64_t)(v11 - (void)v12) >> 2 > v23) {
          unint64_t v23 = (uint64_t)(v11 - (void)v12) >> 2;
        }
        if (v11 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v24 = v23;
        }
        if (v24) {
          unint64_t v24 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v24);
        }
        else {
          uint64_t v25 = 0;
        }
        long long v26 = (uint64_t *)(v24 + 8 * v22);
        *long long v26 = v19;
        unint64_t v21 = v26 + 1;
        while (v20 != v12)
        {
          uint64_t v27 = *--v20;
          *--long long v26 = v27;
        }
        unint64_t v11 = v24 + 8 * v25;
        uint64_t v44 = v21;
        if (v12) {
          operator delete(v12);
        }
        uint64_t v12 = v26;
      }
      else
      {
        uint64_t *v44 = BinaryProperties;
        unint64_t v21 = v20 + 1;
      }
      uint64_t v44 = v21;
      std::basic_string<char16_t>::size_type v46 = &v48;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v46);
      if (SHIBYTE(v54) < 0) {
        operator delete((void *)__dst);
      }
      v9 += 16;
    }
    while (v9 != v10);
    unint64_t v45 = v11;
    std::string::size_type v43 = v12;
    long long v3 = v40;
    uint64_t v4 = v41;
    uint64_t v5 = v39;
LABEL_37:
    unint64_t v29 = (void *)v3[1];
    unint64_t v28 = v3[2];
    if ((unint64_t)v29 >= v28)
    {
      unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v29 - *v3) >> 3);
      unint64_t v33 = v32 + 1;
      if (v32 + 1 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *v3) >> 3);
      if (2 * v34 > v33) {
        unint64_t v33 = 2 * v34;
      }
      if (v34 >= 0x555555555555555) {
        unint64_t v35 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v35 = v33;
      }
      char v52 = v38;
      if (v35) {
        unint64_t v35 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v35);
      }
      else {
        uint64_t v36 = 0;
      }
      std::string::value_type v37 = (std::basic_string<char16_t> *)(v35 + 24 * v32);
      v48 = (std::basic_string<char16_t> *)v35;
      char v49 = v37;
      char v50 = v37;
      char v51 = (std::basic_string<char16_t> *)(v35 + 24 * v36);
      v37->__r_.__value_.__r.__words[0] = 0;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v37, v43, (uint64_t)v44, v44 - v43);
      ++v50;
      std::vector<std::vector<long long>>::__swap_out_circular_buffer(v3, &v48);
      unint64_t v31 = (void *)v3[1];
      std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&v48);
      char v30 = v43;
    }
    else
    {
      *unint64_t v29 = 0;
      v29[1] = 0;
      v29[2] = 0;
      char v30 = v43;
      std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v29, v43, (uint64_t)v44, v44 - v43);
      unint64_t v31 = v29 + 3;
      v3[1] = v29 + 3;
    }
    v3[1] = v31;
    if (v30) {
      operator delete(v30);
    }
    v4 += 3;
  }
  while (v4 != v5);
}

void sub_1D2CD4F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
}

void morphun::analysis::convertIgnoreGrammemes(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  std::vector<long long>::reserve((void **)a1, 0xAAAAAAAAAAAAAAABLL * (a3[1] - *a3));
  unint64_t v6 = *a3;
  unint64_t v7 = a3[1];
  if (*a3 != v7)
  {
    do
    {
      uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2, v6);
      uint64_t v9 = BinaryProperties;
      unint64_t v11 = *(uint64_t **)(a1 + 8);
      unint64_t v10 = *(void *)(a1 + 16);
      if ((unint64_t)v11 >= v10)
      {
        unint64_t v13 = *(uint64_t **)a1;
        uint64_t v14 = ((uint64_t)v11 - *(void *)a1) >> 3;
        unint64_t v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v16 = v10 - (void)v13;
        if (v16 >> 2 > v15) {
          unint64_t v15 = v16 >> 2;
        }
        if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v17 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v15;
        }
        if (v17) {
          unint64_t v17 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v17);
        }
        else {
          uint64_t v18 = 0;
        }
        uint64_t v19 = (uint64_t *)(v17 + 8 * v14);
        *uint64_t v19 = v9;
        uint64_t v12 = v19 + 1;
        while (v11 != v13)
        {
          uint64_t v20 = *--v11;
          *--uint64_t v19 = v20;
        }
        *(void *)a1 = v19;
        *(void *)(a1 + 8) = v12;
        *(void *)(a1 + 16) = v17 + 8 * v18;
        if (v13) {
          operator delete(v13);
        }
      }
      else
      {
        *unint64_t v11 = BinaryProperties;
        uint64_t v12 = v11 + 1;
      }
      *(void *)(a1 + 8) = v12;
      v6 += 3;
    }
    while (v6 != v7);
  }
}

void sub_1D2CD510C(_Unwind_Exception *exception_object)
{
  long long v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::YueCommonConceptFactory::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void *a4@<X8>)
{
  morphun::dialog::SpeakableString::SpeakableString(v7, a3);
  morphun::dialog::SpeakableString::operator+(a1, (uint64_t)v7, v8);
  morphun::dialog::SpeakableString::operator+((uint64_t)v8, a2, a4);
}

void sub_1D2CD51B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
}

void morphun::dialog::language::YueCommonConceptFactory::quote(const void **this@<X0>, const morphun::dialog::SpeakableString *a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
  if (morphun::lang::StringFilterUtil::hasNonWhitespaceSeparableCharacter((uint64_t)v6))
  {
    morphun::dialog::CommonConceptFactoryImpl::quote(this, a2, a3);
  }
  else
  {
    if ((*(unsigned int (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 48))(a2))
    {
      unint64_t v7 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
      std::operator+<char16_t>((uint64_t)&v9, word_1D2ED06EA, v7);
      std::basic_string<char16_t>::append(&v9, word_1D2ED06EE, 1uLL);
      std::basic_string<char16_t> __p = v9;
      memset(&v9, 0, sizeof(v9));
      morphun::dialog::SpeakableString::SpeakableString(a3, (long long *)&__p);
    }
    else
    {
      std::operator+<char16_t>((uint64_t)&v9, word_1D2ED06EA, v6);
      std::basic_string<char16_t>::append(&v9, word_1D2ED06EE, 1uLL);
      std::basic_string<char16_t> __p = v9;
      memset(&v9, 0, sizeof(v9));
      uint64_t v8 = (unsigned __int16 *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 40))(a2);
      morphun::dialog::SpeakableString::SpeakableString((uint64_t)a3, (long long *)&__p, v8);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D2CD53C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::YueCommonConceptFactory::createAndList()
{
}

void sub_1D2CD5510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CD55C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::YueCommonConceptFactory::createOrList()
{
}

void sub_1D2CD56F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::YueCommonConceptFactory::~YueCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05D68);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05D68);
}

uint64_t **com::apple::siri::tokenizer::data::config_nl::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v3[2] = xmmword_1E696B878;
  v3[3] = *(_OWORD *)&off_1E696B888;
  uint64_t v4 = L"(thuis)(kom)";
  v3[0] = xmmword_1E696B858;
  v3[1] = *(_OWORD *)&off_1E696B868;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

uint64_t morphun::util::LoggerConfig::setLogLevel(uint64_t result)
{
  morphun::util::gLogLevel = result;
  return result;
}

uint64_t morphun::util::LoggerConfig::getLogLevel(morphun::util::LoggerConfig *this)
{
  return morphun::util::gLogLevel;
}

uint64_t morphun::util::LoggerConfig::logToConsole(morphun::util::LoggerConfig *this)
{
  if (this) {
    uint64_t v1 = (morphun::util *)morphun::util::logClog;
  }
  else {
    uint64_t v1 = 0;
  }
  return morphun::util::Logger::registerLogger(MEMORY[0x1E4FBA248], v1);
}

void morphun::util::logClog(void *a1, uint64_t a2, _WORD *a3, _WORD *a4)
{
  if (a2 > 2 || !a3)
  {
    memset(&__p, 0, sizeof(__p));
    if (!a1)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    unint64_t v7 = &morphun::util::logClog(void *,MLogLevel,char16_t const*,char16_t const*)::logLevelPrefix[12 * a2];
    size_t v8 = strlen(v7);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v7, v8);
    if (a3)
    {
      if (*a3)
      {
        uint64_t v9 = 0;
        do
          int v10 = v9 + 1;
        while (a3[++v9]);
      }
      else
      {
        int v10 = 0;
      }
      morphun::util::StringViewUtils::convert(&__p, (uint64_t)a3, v10);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"[", 1);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)p_p, size);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"] ", 2);
    }
    if (*a4)
    {
      uint64_t v14 = 0;
      do
        int v15 = v14 + 1;
      while (a4[++v14]);
    }
    else
    {
      int v15 = 0;
    }
    morphun::util::StringViewUtils::convert(&__p, (uint64_t)a4, v15);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v17 = &__p;
    }
    else {
      unint64_t v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v18 = __p.__r_.__value_.__l.__size_;
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v17, v18);
    std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
    uint64_t v19 = std::locale::use_facet(&v22, MEMORY[0x1E4FBA258]);
    ((void (*)(const std::locale::facet *, uint64_t))v19->__vftable[2].~facet_0)(v19, 10);
    std::locale::~locale(&v22);
    std::ostream::put();
    std::ostream::flush();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D2CD5A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D942B730](v23, a1);
  if (v23[0])
  {
    unint64_t v6 = (char *)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *((void *)v6 + 5);
    int v8 = *((_DWORD *)v6 + 2);
    int v9 = *((_DWORD *)v6 + 36);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      int v10 = std::locale::use_facet(&__b, MEMORY[0x1E4FBA258]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&__b);
      *((_DWORD *)v6 + 36) = v9;
    }
    uint64_t v11 = a2 + a3;
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v12 = a2 + a3;
    }
    else {
      uint64_t v12 = a2;
    }
    if (!v7) {
      goto LABEL_29;
    }
    uint64_t v13 = *((void *)v6 + 3);
    BOOL v14 = v13 <= a3;
    uint64_t v15 = v13 - a3;
    size_t v16 = v14 ? 0 : v15;
    if (v12 - a2 >= 1
      && (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 96))(v7, a2, v12 - a2) != v12 - a2)
    {
      goto LABEL_29;
    }
    if ((uint64_t)v16 >= 1)
    {
      if (v16 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      if (v16 >= 0x17)
      {
        uint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16 | 7) != 0x17) {
          uint64_t v18 = v16 | 7;
        }
        uint64_t v19 = v18 + 1;
        p_b = (std::locale::__imp *)operator new(v18 + 1);
        size_t v25 = v16;
        int64_t v26 = v19 | 0x8000000000000000;
        __b.__locale_ = p_b;
      }
      else
      {
        HIBYTE(v26) = v16;
        p_b = (std::locale::__imp *)&__b;
      }
      memset(p_b, v9, v16);
      *((unsigned char *)p_b + v16) = 0;
      uint64_t v20 = v26 >= 0 ? &__b : (std::locale *)__b.__locale_;
      uint64_t v21 = (*(uint64_t (**)(uint64_t, std::locale *, size_t))(*(void *)v7 + 96))(v7, v20, v16);
      if (SHIBYTE(v26) < 0) {
        operator delete(__b.__locale_);
      }
      if (v21 != v16) {
        goto LABEL_29;
      }
    }
    if (v11 - v12 < 1
      || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 96))(v7, v12, v11 - v12) == v11 - v12)
    {
      *((void *)v6 + 3) = 0;
    }
    else
    {
LABEL_29:
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x1D942B740](v23);
  return a1;
}

void sub_1D2CD5D3C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B740](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v17 + *(void *)(*v17 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1D2CD5D10);
}

void sub_1D2CD5DA8(_Unwind_Exception *a1)
{
}

BOOL morphun::util::LoggerConfig::isTraceEnabled(morphun::util::LoggerConfig *this)
{
  return morphun::util::gLogLevel < 1;
}

BOOL morphun::util::LoggerConfig::isDebugEnabled(morphun::util::LoggerConfig *this)
{
  return morphun::util::gLogLevel < 2;
}

BOOL morphun::util::LoggerConfig::isInfoEnabled(morphun::util::LoggerConfig *this)
{
  return morphun::util::gLogLevel < 3;
}

BOOL morphun::util::LoggerConfig::isWarnEnabled(morphun::util::LoggerConfig *this)
{
  return morphun::util::gLogLevel < 4;
}

BOOL morphun::util::LoggerConfig::isErrorEnabled(morphun::util::LoggerConfig *this)
{
  return morphun::util::gLogLevel < 5;
}

uint64_t morphun::util::LoggerConfig::unregisterLogger(morphun::util::LoggerConfig *this, void *a2)
{
  return morphun::util::Logger::registerLogger(this, 0);
}

void morphun::dictionary::DictionaryMetaData::~DictionaryMetaData(morphun::dictionary::DictionaryMetaData *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dictionary::DictionaryMetaData::~DictionaryMetaData(morphun::dictionary::DictionaryMetaData *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  uint64_t v3 = *((void *)this + 1);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
}

uint64_t *morphun::dictionary::DictionaryMetaData::DictionaryMetaData(uint64_t *result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  *double result = *a2;
  *(uint64_t *)((char *)result + *(void *)(v3 - 40)) = a2[1];
  result[1] = a3;
  return result;
}

void *morphun::dictionary::DictionaryMetaData::DictionaryMetaData(void *result, uint64_t a2)
{
  *double result = &off_1F2A08470;
  result[1] = a2;
  return result;
}

void virtual thunk to'morphun::dictionary::DictionaryMetaData::~DictionaryMetaData(morphun::dictionary::DictionaryMetaData *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::dictionary::DictionaryMetaData::createDictionary(morphun::dictionary::DictionaryMetaData *this, const morphun::util::ULocale *a2)
{
  {
    operator new();
  }
  uint64_t v3 = (std::mutex *)morphun::dictionary::CLASS_MUTEX(void)::classMutex;
  if (!morphun::dictionary::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::mutex::lock((std::mutex *)morphun::dictionary::CLASS_MUTEX(void)::classMutex);
  {
    operator new();
  }
  uint64_t v5 = morphun::dictionary::DICTIONARY_CACHE(void)::DICTIONARY_CACHE_ + 8;
  uint64_t v4 = *(void **)(morphun::dictionary::DICTIONARY_CACHE(void)::DICTIONARY_CACHE_ + 8);
  if (!v4) {
    goto LABEL_11;
  }
  uint64_t v6 = morphun::dictionary::DICTIONARY_CACHE(void)::DICTIONARY_CACHE_ + 8;
  do
  {
    BOOL v7 = std::less<std::string>::operator()[abi:ne180100](v4 + 4, (void *)this + 1);
    int v8 = v4 + 1;
    if (!v7)
    {
      int v8 = v4;
      uint64_t v6 = (uint64_t)v4;
    }
    uint64_t v4 = (void *)*v8;
  }
  while (*v8);
  if (v6 == v5 || std::less<std::string>::operator()[abi:ne180100]((void *)this + 1, (void *)(v6 + 32))) {
LABEL_11:
  }
    operator new();
  uint64_t v9 = *(void *)(v6 + 56);
  std::mutex::unlock(v3);
  return v9;
}

void sub_1D2CD67A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::mutex *a12)
{
}

void sub_1D2CD6908(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (***a13)(std::basic_string<char16_t> *__return_ptr), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a38 < 0) {
    operator delete(a33);
  }
  if (a2 == 1)
  {
    v73 = (const morphun::util::ULocale *)__cxa_begin_catch(a1);
    morphun::dictionary::logEmptyDictionaryWarning(a13, v73, v74);
    operator new();
  }
  JUMPOUT(0x1D2CD6A88);
}

void sub_1D2CD6938(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, morphun::dictionary *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&a71);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&a55);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&STACK[0x270]);
  if (a38 < 0) {
    operator delete(a33);
  }
  if (a2 == 1)
  {
    v73 = (const morphun::util::ULocale *)__cxa_begin_catch(a1);
    morphun::dictionary::logEmptyDictionaryWarning(a13, v73, v74);
    v75 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)operator new(424, 0x10F3C40CB82E09DLL);
    morphun::dictionary::DictionaryMetaData_MMappedDictionary::DictionaryMetaData_MMappedDictionary(v75, a13);
    __cxa_end_catch();
    JUMPOUT(0x1D2CD6594);
  }
  JUMPOUT(0x1D2CD6A88);
}

void sub_1D2CD6944()
{
  std::__tree<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>>>::destroy(v0);
  uint64_t v1 = 512;
  do
  {
    v1 -= 256;
  }
  while (v1);
  JUMPOUT(0x1D2CD69C0);
}

void sub_1D2CD6A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
}

void sub_1D2CD6A60()
{
  MEMORY[0x1D942B8B0](v0, 0x10F3C40CB82E09DLL);
  __cxa_end_catch();
  JUMPOUT(0x1D2CD6A88);
}

void sub_1D2CD6A9C(void *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  JUMPOUT(0x1D2CD6900);
}

void morphun::dictionary::getResourcePath(morphun::dictionary *this, const morphun::util::ULocale *a2)
{
  uint64_t v4 = morphun::util::LocaleUtils::ARABIC(this);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 127);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = *(unsigned __int8 *)(v4 + 127);
  }
  else {
    uint64_t v6 = *(void *)(v4 + 112);
  }
  uint64_t v7 = *((unsigned __int8 *)a2 + 127);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *((void *)a2 + 14);
  }
  uint64_t v9 = a2;
  if (v6 != v7) {
    goto LABEL_18;
  }
  int v10 = (const void **)(v4 + 104);
  if (v8 >= 0) {
    uint64_t v11 = (unsigned __int8 *)a2 + 104;
  }
  else {
    uint64_t v11 = (unsigned __int8 *)*((void *)a2 + 13);
  }
  if ((v5 & 0x80) != 0)
  {
    uint64_t v4 = memcmp(*v10, v11, *(void *)(v4 + 112));
    uint64_t v9 = a2;
    if (v4) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (!*(unsigned char *)(v4 + 127))
  {
LABEL_16:
    uint64_t v9 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::ROOT((morphun::util::LocaleUtils *)v4);
    goto LABEL_18;
  }
  while (*(unsigned __int8 *)v10 == *v11)
  {
    int v10 = (const void **)((char *)v10 + 1);
    ++v11;
    if (!--v5) {
      goto LABEL_16;
    }
  }
  uint64_t v9 = a2;
LABEL_18:
  uint64_t v12 = morphun::util::ULocale::ULocale((morphun::util::ULocale *)v45, v9);
  morphun::util::ResourceLocator::getRootForLocale(v12, &v44);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "/");
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    BOOL v14 = &v44;
  }
  else {
    BOOL v14 = (std::basic_string<char16_t> *)v44.__r_.__value_.__r.__words[0];
  }
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = v44.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)v14, (const std::basic_string<char16_t>::value_type *)size, v13);
  std::basic_string<char16_t> v40 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v37, (char *)L"mmappable");
  if ((v38 & 0x80u) == 0) {
    size_t v16 = v37;
  }
  else {
    size_t v16 = (void **)v37[0];
  }
  if ((v38 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v17 = v38;
  }
  else {
    std::basic_string<char16_t>::size_type v17 = (std::basic_string<char16_t>::size_type)v37[1];
  }
  std::basic_string<char16_t>::append(&v40, (const std::basic_string<char16_t>::value_type *)v16, v17);
  std::basic_string<char16_t> v41 = v40;
  memset(&v40, 0, sizeof(v40));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v35, "_");
  if ((v36 & 0x80u) == 0) {
    uint64_t v18 = v35;
  }
  else {
    uint64_t v18 = (void **)v35[0];
  }
  if ((v36 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v19 = v36;
  }
  else {
    std::basic_string<char16_t>::size_type v19 = (std::basic_string<char16_t>::size_type)v35[1];
  }
  std::basic_string<char16_t>::append(&v41, (const std::basic_string<char16_t>::value_type *)v18, v19);
  std::basic_string<char16_t> v42 = v41;
  memset(&v41, 0, sizeof(v41));
  std::locale v22 = (const char *)*((void *)a2 + 1);
  uint64_t v21 = (char *)a2 + 8;
  uint64_t v20 = v22;
  int v23 = v21[23];
  if (v23 >= 0) {
    unint64_t v24 = v21;
  }
  else {
    unint64_t v24 = v20;
  }
  if (v23 >= 0) {
    LODWORD(v25) = *((unsigned __int8 *)v21 + 23);
  }
  else {
    uint64_t v25 = *((void *)v21 + 1);
  }
  morphun::util::StringViewUtils::to_u16string(v24, v25, &v34);
  int v26 = SHIBYTE(v34.__r_.__value_.__r.__words[2]);
  uint64_t v27 = (void *)v34.__r_.__value_.__r.__words[0];
  if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v28 = &v34;
  }
  else {
    unint64_t v28 = (std::basic_string<char16_t> *)v34.__r_.__value_.__r.__words[0];
  }
  if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v29 = HIBYTE(v34.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v29 = v34.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v42, (const std::basic_string<char16_t>::value_type *)v28, v29);
  std::basic_string<char16_t> v43 = v42;
  memset(&v42, 0, sizeof(v42));
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L".sdict");
  if ((v33 & 0x80u) == 0) {
    char v30 = __p;
  }
  else {
    char v30 = (void **)__p[0];
  }
  if ((v33 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v31 = v33;
  }
  else {
    std::basic_string<char16_t>::size_type v31 = (std::basic_string<char16_t>::size_type)__p[1];
  }
  std::basic_string<char16_t>::append(&v43, (const std::basic_string<char16_t>::value_type *)v30, v31);
  *(std::basic_string<char16_t> *)this = v43;
  memset(&v43, 0, sizeof(v43));
  if (((char)v33 & 0x80000000) == 0
    || (operator delete(__p[0]), (SHIBYTE(v43.__r_.__value_.__r.__words[2]) & 0x80000000) == 0))
  {
    if ((v26 & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  operator delete(v43.__r_.__value_.__l.__data_);
  if (v26 < 0) {
LABEL_57:
  }
    operator delete(v27);
LABEL_58:
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if ((char)v36 < 0) {
    operator delete(v35[0]);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  if ((char)v38 < 0) {
    operator delete(v37[0]);
  }
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CD6DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void *a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a63 < 0) {
    operator delete(a58);
  }
  if (v64 < 0) {
    operator delete(v63);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a49 < 0) {
    operator delete(a44);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a42 < 0) {
    operator delete(a37);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  if (*(char *)(v65 - 177) < 0) {
    operator delete(*(void **)(v65 - 200));
  }
  _Unwind_Resume(a1);
}

void sub_1D2CD6ED0()
{
}

void sub_1D2CD6ED8()
{
}

morphun::util::ULocale *std::pair<morphun::util::ULocale const,morphun::util::ULocale>::pair[abi:ne180100]<true,0>(morphun::util::ULocale *a1, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3)
{
  uint64_t v5 = morphun::util::ULocale::ULocale(a1, a2);
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)((char *)v5 + 128), a3);
  return a1;
}

void sub_1D2CD6F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>>>::destroy(void **a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::util::ULocale>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::util::ULocale>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

void morphun::dictionary::logEmptyDictionaryWarning(void (***this)(std::basic_string<char16_t> *__return_ptr), const morphun::util::ULocale *a2, const morphun::exception::IOException *a3)
{
  if (morphun::util::gLogLevel <= 3)
  {
    (**this)(&v10);
    std::basic_string<char16_t>::insert(&v10, (std::basic_string<char16_t>::size_type)&unk_1D2ECA74E, (const std::basic_string<char16_t>::value_type *)0x13, v4);
    std::basic_string<char16_t> v11 = v10;
    memset(&v10, 0, sizeof(v10));
    std::basic_string<char16_t>::append(&v11, word_1D2ECA776, 0x41uLL);
    std::basic_string<char16_t> v12 = v11;
    memset(&v11, 0, sizeof(v11));
    uint64_t v5 = (*(uint64_t (**)(const morphun::util::ULocale *))(*(void *)a2 + 24))(a2);
    int v6 = *(char *)(v5 + 23);
    if (v6 >= 0) {
      uint64_t v7 = (const std::basic_string<char16_t>::value_type *)v5;
    }
    else {
      uint64_t v7 = *(const std::basic_string<char16_t>::value_type **)v5;
    }
    if (v6 >= 0) {
      std::basic_string<char16_t>::size_type v8 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      std::basic_string<char16_t>::size_type v8 = *(void *)(v5 + 8);
    }
    std::basic_string<char16_t>::append(&v12, v7, v8);
    std::basic_string<char16_t> v13 = v12;
    memset(&v12, 0, sizeof(v12));
    if (morphun::util::gLogLevel <= 3)
    {
      if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v9 = &v13;
      }
      else {
        uint64_t v9 = (std::basic_string<char16_t> *)v13.__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger((morphun::util *)3, 0, (uint64_t)v9);
    }
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v12.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v11.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D2CD7138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 25) < 0) {
    operator delete(*(void **)(v28 - 48));
  }
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(uint64_t a1, uint64_t a2, const UChar *a3, uint64_t a4)
{
  int v6 = (void *)a2;
  npc<long long>(a2);
  *int v6 = 0;
  uint64_t v8 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1 + 8));
  unint64_t WordType = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordType(v8, (uint64_t)a3, a4);
  if (v9) {
    goto LABEL_20;
  }
  char v11 = v9;
  std::string __p = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v12 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1 + 8));
  morphun::util::StringViewUtils::lowercase((uint64_t)&__p, a3, a4, v12 + 16);
  uint64_t v13 = HIBYTE(v23);
  char v14 = HIBYTE(v23);
  p_p = (unsigned __int16 *)__p;
  if (v23 < 0) {
    uint64_t v13 = v22;
  }
  else {
    p_p = (unsigned __int16 *)&__p;
  }
  if (v13 != a4) {
    goto LABEL_10;
  }
  if (v13)
  {
    while (*a3 == *p_p)
    {
      ++p_p;
      ++a3;
      if (!--v13) {
        goto LABEL_17;
      }
    }
LABEL_10:
    uint64_t v16 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1 + 8));
    if (v23 >= 0) {
      std::basic_string<char16_t>::size_type v17 = &__p;
    }
    else {
      std::basic_string<char16_t>::size_type v17 = __p;
    }
    if (v23 >= 0) {
      int v18 = HIBYTE(v23);
    }
    else {
      int v18 = v22;
    }
    unint64_t WordType = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordType(v16, (uint64_t)v17, v18);
    char v11 = v19;
    char v14 = HIBYTE(v23);
  }
LABEL_17:
  if (v14 < 0) {
    operator delete(__p);
  }
  if (!v11) {
    return 0;
  }
LABEL_20:
  *int v6 = WordType;
  return v6;
}

void sub_1D2CD72E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<long long>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CD7354(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CD73B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dictionary::DictionaryMetaData::getPropertyNames(morphun::dictionary::DictionaryMetaData *this@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*((void *)this + 1));

  morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v5, a2, a3);
}

void morphun::dictionary::DictionaryMetaData::getPropertyName(morphun::dictionary::DictionaryMetaData *this@<X0>, int8x8_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (void *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*((void *)this + 1));
  morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypeOfValue(v5, a2, (uint64_t)v11);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v10 = 0;
  int v6 = v13;
  uint64_t v7 = __p;
  if (v13) {
    uint64_t v7 = v11;
  }
  *(_OWORD *)a3 = *(_OWORD *)v7;
  *(void *)(a3 + 16) = v7[2];
  v7[1] = 0;
  v7[2] = 0;
  *uint64_t v7 = 0;
  if (SHIBYTE(v10) < 0)
  {
    operator delete(__p[0]);
    if (!v6) {
      return;
    }
  }
  else if (!v6)
  {
    return;
  }
  if (v12 < 0)
  {
    uint64_t v8 = v11[0];
    operator delete(v8);
  }
}

BOOL morphun::dictionary::DictionaryMetaData::isKnownWord(uint64_t a1, const UChar *a2, uint64_t a3)
{
  uint64_t v4 = 0;
  return morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1, (uint64_t)&v4, a2, a3) != 0;
}

uint64_t morphun::dictionary::DictionaryMetaData::hasProperty(uint64_t a1, const UChar *a2, uint64_t a3, unsigned __int16 *a4, unint64_t a5)
{
  uint64_t v10 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1 + 8));
  int IdentifierIfAvailable = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(v10 + 144, a4, a5);
  if (IdentifierIfAvailable < 0) {
    return 0;
  }
  char v12 = IdentifierIfAvailable;
  unint64_t v15 = 0;
  BOOL v13 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1, (uint64_t)&v15, a2, a3) != 0;
  return v13 & (v15 >> v12);
}

BOOL morphun::dictionary::DictionaryMetaData::hasAllProperties(uint64_t a1, const UChar *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1, (uint64_t)&v8, a2, a3);
  return (a4 & ~v8) == 0 && CombinedBinaryType != 0;
}

BOOL morphun::dictionary::DictionaryMetaData::hasAnyProperty(uint64_t a1, const UChar *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1, (uint64_t)&v8, a2, a3);
  return (v8 & a4) != 0 && CombinedBinaryType != 0;
}

uint64_t morphun::dictionary::DictionaryMetaData::getBinaryProperties(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = 0;
  if (*a2 == a2[1]) {
    return 0;
  }
  if (!morphun::dictionary::DictionaryMetaData::getBinaryProperties(a1, &v5, a2))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v4, "P");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v4);
  }
  return v5;
}

void sub_1D2CD76F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t *morphun::dictionary::DictionaryMetaData::getBinaryProperties(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1 + 8));
  uint64_t ValuesOfTypes = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getValuesOfTypes(v5, a3);
  npc<long long>((uint64_t)a2);
  *a2 = ValuesOfTypes;
  if (ValuesOfTypes) {
    return a2;
  }
  else {
    return 0;
  }
}

void morphun::dictionary::DictionaryMetaData::getProperties(uint64_t a1@<X0>, const UChar *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v8 = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1, (uint64_t)&v8, a2, a3))
  {
    unint64_t v6 = v8;
    uint64_t v7 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1 + 8));
    morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v7, v6, a4);
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
}

uint64_t morphun::dictionary::DictionaryMetaData::getPropertyValues@<X0>(uint64_t a1@<X0>, const UChar *a2@<X1>, uint64_t a3@<X2>, unsigned __int16 *a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
  return morphun::dictionary::DictionaryMetaData::getPropertyValues(a1, a6, a2, a3, a4, a5);
}

void sub_1D2CD782C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::DictionaryMetaData::getPropertyValues(uint64_t a1, uint64_t *a2, const UChar *a3, uint64_t a4, unsigned __int16 *a5, unint64_t a6)
{
  if (a2)
  {
    std::vector<std::basic_string<char16_t>>::__clear[abi:ne180100](a2);
    uint64_t v13 = *(void *)(a1 + 8);
    char v12 = (uint64_t *)(a1 + 8);
    uint64_t v14 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(v13);
    int v15 = a2;
  }
  else
  {
    char v12 = (uint64_t *)(a1 + 8);
    uint64_t v14 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1 + 8));
    int v15 = 0;
  }
  if (morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordPropertyValues(v14, v15, (uint64_t)a3, a4, a5, a6))return 1; {
  if (morphun::util::StringViewUtils::isAllLowerCase((uint64_t)a3, a4))
  }
    return 0;
  uint64_t v17 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*v12);
  morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordType(v17, (uint64_t)a3, a4);
  if (v18) {
    return 0;
  }
  std::string __p = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v20 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*v12);
  morphun::util::StringViewUtils::lowercase((uint64_t)&__p, a3, a4, v20 + 16);
  uint64_t v21 = HIBYTE(v29);
  char v22 = HIBYTE(v29);
  p_p = (unsigned __int16 *)__p;
  if (v29 < 0) {
    uint64_t v21 = v28;
  }
  else {
    p_p = (unsigned __int16 *)&__p;
  }
  if (v21 != a4) {
    goto LABEL_18;
  }
  if (v21)
  {
    while (*a3 == *p_p)
    {
      ++p_p;
      ++a3;
      if (!--v21) {
        goto LABEL_17;
      }
    }
LABEL_18:
    uint64_t v24 = npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*v12);
    if (v29 >= 0) {
      uint64_t v25 = &__p;
    }
    else {
      uint64_t v25 = __p;
    }
    if (v29 >= 0) {
      int v26 = HIBYTE(v29);
    }
    else {
      int v26 = v28;
    }
    uint64_t WordPropertyValues = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordPropertyValues(v24, a2, (uint64_t)v25, v26, a5, a6);
    char v22 = HIBYTE(v29);
    goto LABEL_25;
  }
LABEL_17:
  uint64_t WordPropertyValues = 0;
LABEL_25:
  if (v22 < 0) {
    operator delete(__p);
  }
  return WordPropertyValues;
}

void sub_1D2CD79D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dictionary::DictionaryMetaData::getKnownWords(morphun::dictionary::DictionaryMetaData *this@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*((void *)this + 1));

  morphun::dictionary::DictionaryMetaData_MMappedDictionary::getAllWords(v3, a2);
}

void morphun::tokenizer::locale::ko::KoTokenizer::createTokenExtractor()
{
}

void sub_1D2CD7A94(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4065C8B95BLL);
  _Unwind_Resume(a1);
}

void morphun::exception::RuntimeException::~RuntimeException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::RuntimeException::RuntimeException(morphun::exception::RuntimeException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A112F8;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A112F8;
  return result;
}

void *morphun::exception::RuntimeException::RuntimeException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A112F8;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A112F8;
  return result;
}

void morphun::dialog::language::NlCommonConceptFactory::~NlCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05A68);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05A68);
}

void sub_1D2CD7C78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION_UNDECLINED(morphun::grammar::synthesis::NlGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION_UNDECLINED(void)::DECLENSION_UNDECLINED_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2CD7D1C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION_DECLINED(morphun::grammar::synthesis::NlGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::NlGrammarSynthesizer::DECLENSION_DECLINED(void)::DECLENSION_DECLINED_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2CD7DE4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::NlGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"de");
  operator new();
}

void sub_1D2CD8D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain *a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  morphun::dialog::StaticArticleLookupFunction::~StaticArticleLookupFunction(v31);
  morphun::grammar::synthesis::NlGrammarSynthesizer_ArticleLookupFunction::~NlGrammarSynthesizer_ArticleLookupFunction(v30);
  morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain::~NlGrammarSynthesizer_InflectorPatternChain(a14);
  MEMORY[0x1D942B8B0](v29, 0x10F3C40F56BF8CALL);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Count>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Count>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CD93C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        char v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            char v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      char v12 = (char **)v4;
      uint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      uint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        char v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        uint64_t *v13 = v16;
        char v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    char v12 = (char **)v4;
    uint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          char v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          uint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        uint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CD95EC(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CD9664(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CD9894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  while (1)
  {
    if (*((char *)v10 - 9) < 0) {
      operator delete((void *)*(v10 - 4));
    }
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D942B8B0](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      char v12 = (char **)v4;
      uint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      uint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        char v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        uint64_t *v13 = v16;
        char v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    char v12 = (char **)v4;
    uint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          char v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          uint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        uint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CD9AD0(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CD9B48(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Declension>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Declension>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CD9D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Declension>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      char v12 = (char **)v4;
      uint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      uint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        char v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        uint64_t *v13 = v16;
        char v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    char v12 = (char **)v4;
    uint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          char v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          uint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        uint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CD9F64(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Declension>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CD9FDC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer::getCase(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::NlGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Case>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Case>>(morphun::grammar::synthesis::NlGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CDA1D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Case>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      char v12 = (char **)v4;
      uint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      uint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        char v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        uint64_t *v13 = v16;
        char v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    char v12 = (char **)v4;
    uint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          char v12 = (char **)v14;
          int v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          uint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        uint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CDA3F8(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NlGrammarSynthesizer::Case>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CDA470(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::HuCommonConceptFactory::~HuCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F32C8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F29F32C8);
}

void msfmod_create()
{
}

void sub_1D2CDA54C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  MEMORY[0x1D942B8B0](v10, 0x10B3C40D982F6B4);
  if (a2 == 1)
  {
    uint64_t v13 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v13, v9, v14);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDA534);
  }
  _Unwind_Resume(a1);
}

morphun::dialog::SemanticFeatureModel *msfmod_destroy(morphun::dialog::SemanticFeatureModel *result)
{
  if (result)
  {
    morphun::dialog::SemanticFeatureModel::~SemanticFeatureModel(result);
    JUMPOUT(0x1D942B8B0);
  }
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_in::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696B8A0;
  uint64_t v4 = "i";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

BOOL morphun::analysis::core::StopFilter::accept(morphun::analysis::core::StopFilter *this)
{
  uint64_t v2 = npc<std::set<std::basic_string<char16_t>> const>(*((void *)this + 18));
  uint64_t v3 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v2, (unsigned __int16 *)(*((void *)this + 19) + *(void *)(**((void **)this + 19) - 96)));
  return npc<std::set<std::basic_string<char16_t>> const>(*((void *)this + 18)) + 8 == v3;
}

uint64_t npc<std::set<std::basic_string<char16_t>> const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CDA72C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::core::StopFilter::~StopFilter(morphun::analysis::core::StopFilter *this)
{
  *(void *)this = &unk_1F29FFFD8;
  uint64_t v2 = (void *)*((void *)this + 15);
  if (v2)
  {
    *((void *)this + 16) = v2;
    operator delete(v2);
  }
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07728);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t vars8;

  *(void *)this = &unk_1F29FFFD8;
  uint64_t v2 = (void *)*((void *)this + 15);
  if (v2)
  {
    *((void *)this + 16) = v2;
    operator delete(v2);
  }

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07728);
}

void morphun::analysis::util::FilteringTokenFilter::~FilteringTokenFilter(morphun::analysis::util::FilteringTokenFilter *this)
{
  *(void *)this = &unk_1F29FFFD8;
  uint64_t v2 = (void *)*((void *)this + 15);
  if (v2)
  {
    *((void *)this + 16) = v2;
    operator delete(v2);
  }

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07728);
}

morphun::analysis::TokenFilter *morphun::analysis::core::StopFilter::StopFilter(morphun::analysis::TokenFilter *a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_1F2A08C08;
  uint64_t v5 = morphun::analysis::TokenFilter::TokenFilter(a1, (morphun::analysis::TokenStream *)&off_1F2A07728, a2);
  *((void *)v5 + 17) = 0;
  *((void *)v5 + 18) = a3;
  *(_OWORD *)((char *)v5 + 120) = 0u;
  *(_OWORD *)((char *)v5 + 104) = 0u;
  *(void *)uint64_t v5 = &off_1F2A100B0;
  *((void *)v5 + 19) = 0;
  *((void *)a1 + 19) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v5);
  return a1;
}

void sub_1D2CDA918(_Unwind_Exception *a1)
{
  morphun::analysis::util::FilteringTokenFilter::~FilteringTokenFilter(v1);
  _Unwind_Resume(a1);
}

CFStringRef mnum_toStringCopy(uint64_t a1)
{
  void (***v1)(void **__return_ptr);
  void **v2;
  CFIndex v3;
  CFStringRef v4;
  void *__p[2];
  unsigned __int8 v7;

  uint64_t v1 = (void (***)(void **__return_ptr))npc<morphun::dialog::NumberConcept const>(a1);
  (**v1)(__p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v2 = __p;
  }
  else {
    uint64_t v2 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    uint64_t v3 = v7;
  }
  else {
    uint64_t v3 = (CFIndex)__p[1];
  }
  uint64_t v4 = CFStringCreateWithCharacters(0, (const UniChar *)v2, v3);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1D2CDA9C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    long long v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDA9ACLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::dialog::NumberConcept const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CDAA70(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

CFStringRef mnum_asWordsCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::NumberConcept const>(a1);
  (*(void (**)(void **__return_ptr))(*(void *)v1 + 176))(__p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v2 = __p;
  }
  else {
    uint64_t v2 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    CFIndex v3 = v7;
  }
  else {
    CFIndex v3 = (CFIndex)__p[1];
  }
  CFStringRef v4 = CFStringCreateWithCharacters(0, (const UniChar *)v2, v3);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1D2CDAB1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    long long v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDAB04);
  }
  _Unwind_Resume(exception_object);
}

CFStringRef mnum_asWordsVariantCopy(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::NumberConcept const>(a1);
  morphun::util::CFUtils::to_u16string(&v8, a2);
  (*(void (**)(void **__return_ptr, uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 184))(__p, a1, &v8);
  if ((v10 & 0x80u) == 0) {
    CFStringRef v4 = __p;
  }
  else {
    CFStringRef v4 = (void **)__p[0];
  }
  if ((v10 & 0x80u) == 0) {
    CFIndex v5 = v10;
  }
  else {
    CFIndex v5 = (CFIndex)__p[1];
  }
  CFStringRef v6 = CFStringCreateWithCharacters(0, (const UniChar *)v4, v5);
  if ((char)v10 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_1D2CDAC3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a2 == 1)
  {
    uint64_t v23 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v23, v20, v24);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDAC24);
  }
  _Unwind_Resume(exception_object);
}

void mnum_asSpokenWordsCopy()
{
}

void sub_1D2CDAD38(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    CFIndex v3 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v3, v2, v4);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDAD24);
  }
  _Unwind_Resume(exception_object);
}

void mnum_asSpokenWordsVariantCopy()
{
}

void sub_1D2CDAE4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v16, 0x10B3C40F7FF9C27);
  if (a2 == 1)
  {
    char v19 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v19, v15, v20);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDAE34);
  }
  _Unwind_Resume(a1);
}

void mnum_asDigitsCopy()
{
}

void sub_1D2CDAF50(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    CFIndex v3 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v3, v2, v4);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDAF3CLL);
  }
  _Unwind_Resume(exception_object);
}

CFStringRef mnum_asOrdinalDigitsCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::NumberConcept const>(a1);
  (*(void (**)(void **__return_ptr))(*(void *)v1 + 216))(__p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v2 = __p;
  }
  else {
    uint64_t v2 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    CFIndex v3 = v7;
  }
  else {
    CFIndex v3 = (CFIndex)__p[1];
  }
  CFStringRef v4 = CFStringCreateWithCharacters(0, (const UniChar *)v2, v3);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1D2CDB050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    long long v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDB038);
  }
  _Unwind_Resume(exception_object);
}

CFStringRef mnum_asOrginalDigitsVariantCopy(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::NumberConcept const>(a1);
  morphun::util::CFUtils::to_u16string(&v8, a2);
  (*(void (**)(void **__return_ptr, uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 224))(__p, a1, &v8);
  if ((v10 & 0x80u) == 0) {
    CFStringRef v4 = __p;
  }
  else {
    CFStringRef v4 = (void **)__p[0];
  }
  if ((v10 & 0x80u) == 0) {
    CFIndex v5 = v10;
  }
  else {
    CFIndex v5 = (CFIndex)__p[1];
  }
  CFStringRef v6 = CFStringCreateWithCharacters(0, (const UniChar *)v4, v5);
  if ((char)v10 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_1D2CDB170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a2 == 1)
  {
    uint64_t v23 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v23, v20, v24);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDB158);
  }
  _Unwind_Resume(exception_object);
}

void mnum_createFromInt64()
{
}

void sub_1D2CDB29C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  MEMORY[0x1D942B8B0](v26, 0x1093C409236E2FBLL);
  if (a2 == 1)
  {
    uint64_t v29 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v29, v25, v30);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDB280);
  }
  _Unwind_Resume(a1);
}

void mnum_createFromDouble()
{
}

void sub_1D2CDB3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  MEMORY[0x1D942B8B0](v26, 0x1093C409236E2FBLL);
  if (a2 == 1)
  {
    uint64_t v29 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v29, v25, v30);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDB3D0);
  }
  _Unwind_Resume(a1);
}

void mnum_clone()
{
}

void sub_1D2CDB4EC(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    CFIndex v3 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v3, v2, v4);
    __cxa_end_catch();
    JUMPOUT(0x1D2CDB4D8);
  }
  _Unwind_Resume(exception_object);
}

uint64_t mnum_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_fi::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E696B8B8;
  v3[1] = *(_OWORD *)&off_1E696B8C8;
  v3[2] = xmmword_1E696B8D8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::dialog::language::SkCommonConceptFactory::~SkCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05BA8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05BA8);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::inflect(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::basic_string<char16_t> *a4@<X8>)
{
  std::basic_string<char16_t> v8 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)(*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
  if ((v8 & 1) == 0) {
    goto LABEL_46;
  }
  uint64_t v9 = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::POSSESSIVE_PRONOUNS(v8);
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    BOOL v11 = (unsigned __int16 *)a2;
  }
  else {
    BOOL v11 = *(unsigned __int16 **)a2;
  }
  if (v10 >= 0) {
    unint64_t v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    unint64_t v12 = *(void *)(a2 + 8);
  }
  uint64_t v13 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v9, v11, v12);
  uint64_t v14 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::POSSESSIVE_PRONOUNS(v13);
  if ((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)((char *)v14 + 8) != v13)
  {
    unint64_t v15 = *((void *)v13 + 7);
    if (v15 >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v16 = (const void *)*((void *)v13 + 6);
    if (v15 >= 0xB)
    {
      uint64_t v25 = (v15 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v15 | 3) != 0xB) {
        uint64_t v25 = v15 | 3;
      }
      uint64_t v26 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v25 + 1);
      a4->__r_.__value_.__l.__size_ = v15;
      a4->__r_.__value_.__r.__words[2] = v27 | 0x8000000000000000;
      a4->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v26;
      a4 = v26;
    }
    else
    {
      *((unsigned char *)&a4->__r_.__value_.__s + 23) = v15;
      if (!v15) {
        goto LABEL_27;
      }
    }
    memmove(a4, v16, 2 * v15);
LABEL_27:
    a4->__r_.__value_.__s.__data_[v15] = 0;
    return;
  }
  uint64_t v17 = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::COUNT_CONDITIONAL_PRONOUNS(v14);
  int v18 = *(char *)(a2 + 23);
  if (v18 >= 0) {
    char v19 = (unsigned __int16 *)a2;
  }
  else {
    char v19 = *(unsigned __int16 **)a2;
  }
  if (v18 >= 0) {
    unint64_t v20 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    unint64_t v20 = *(void *)(a2 + 8);
  }
  uint64_t v21 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v17, v19, v20);
  char v22 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::COUNT_CONDITIONAL_PRONOUNS(v21);
  if ((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)((char *)v22 + 8) != v21)
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[2]);
    int Count = morphun::grammar::synthesis::NlGrammarSynthesizer::getCount((unsigned __int16 *)&__p);
    if (Count == 1)
    {
      uint64_t v24 = (char *)L"haar";
      goto LABEL_49;
    }
    if (Count == 2)
    {
      uint64_t v24 = (char *)&unk_1D2ECCB56;
LABEL_49:
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a4, v24);
LABEL_50:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return;
    }
    goto LABEL_38;
  }
  uint64_t v28 = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::DECLENSION_CONDITIONAL(v22);
  int v29 = *(char *)(a2 + 23);
  if (v29 >= 0) {
    char v30 = (unsigned __int16 *)a2;
  }
  else {
    char v30 = *(unsigned __int16 **)a2;
  }
  if (v29 >= 0) {
    unint64_t v31 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    unint64_t v31 = *(void *)(a2 + 8);
  }
  unint64_t v32 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v28, v30, v31);
  if ((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::DECLENSION_CONDITIONAL(v32)
                                                                             + 8) != v32)
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[1]);
    int Declension = morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension((unsigned __int16 *)&__p);
    if (Declension == 1)
    {
      uint64_t v24 = "o";
      goto LABEL_49;
    }
    if (Declension == 2)
    {
      uint64_t v24 = (char *)L"ons";
      goto LABEL_49;
    }
LABEL_38:
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
    goto LABEL_50;
  }
  unint64_t v34 = *(unsigned __int8 *)(a2 + 23);
  if ((v34 & 0x80u) != 0) {
    unint64_t v34 = *(void *)(a2 + 8);
  }
  if (v34 < 3)
  {
LABEL_46:
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
    return;
  }
  int isPossessive = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::isPossessive((morphun::util::LocaleUtils *)a1, a2);
  uint64_t v36 = *(unsigned __int8 *)(a2 + 23);
  if (isPossessive)
  {
    if ((v36 & 0x80) != 0)
    {
      std::basic_string<char16_t> v40 = *(const std::basic_string<char16_t>::value_type **)a2;
      std::basic_string<char16_t>::size_type v41 = *(void *)(a2 + 8);
      std::basic_string<char16_t>::__init_copy_ctor_external(a4, v40, v41);
    }
    else
    {
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      a4->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
    }
  }
  else
  {
    BOOL v37 = (v36 & 0x80u) != 0;
    if ((v36 & 0x80u) != 0) {
      uint64_t v36 = *(void *)(a2 + 8);
    }
    if (v37) {
      uint64_t v38 = *(void *)a2;
    }
    else {
      uint64_t v38 = a2;
    }
    if (MEMORY[0x1D942C150](a1[7], *(unsigned __int16 *)(v38 + 2 * v36 - 2)))
    {
      long long v39 = word_1D2ED0594;
    }
    else if (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::endsWithDutchSSound(a2))
    {
      long long v39 = L"'";
    }
    else
    {
      long long v39 = L"'s";
    }
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a4, (const void **)a2, v39);
  }
}

void sub_1D2CDB968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::POSSESSIVE_PRONOUNS(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t result = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::POSSESSIVE_PRONOUNS(void)::POSSESSIVE_PRONOUNS_;
  if (!morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::POSSESSIVE_PRONOUNS(void)::POSSESSIVE_PRONOUNS_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CDBA94(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::COUNT_CONDITIONAL_PRONOUNS(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return npc<std::set<std::u16string_view>>(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::COUNT_CONDITIONAL_PRONOUNS(void)::COUNT_CONDITIONAL_PRONOUNS_);
}

void sub_1D2CDBBAC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::DECLENSION_CONDITIONAL(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return npc<std::set<std::u16string_view>>(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::DECLENSION_CONDITIONAL(void)::DECLENSION_CONDITIONAL_);
}

void sub_1D2CDBCBC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::isPossessive(morphun::util::LocaleUtils *a1, uint64_t a2)
{
  uint64_t v2 = (const UChar *)a2;
  uint64_t v3 = a1;
  if ((*(char *)(a2 + 23) & 0x80000000) == 0)
  {
    LODWORD(v4) = *(unsigned __int8 *)(a2 + 23);
    if (v4 > 2)
    {
      memset(&__str, 0, sizeof(__str));
      goto LABEL_6;
    }
LABEL_22:
    LOBYTE(v3) = 0;
    return v3 & 1;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 <= 2) {
    goto LABEL_22;
  }
  memset(&__str, 0, sizeof(__str));
  uint64_t v2 = *(const UChar **)a2;
LABEL_6:
  uint64_t v5 = morphun::util::LocaleUtils::DUTCH(a1);
  morphun::util::StringViewUtils::lowercase((uint64_t)&__str, v2, v4, v5);
  std::basic_string<char16_t>::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
  {
    p_str = &__str;
  }
  else
  {
    std::basic_string<char16_t>::size_type size = __str.__r_.__value_.__l.__size_;
    p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  }
  std::basic_string<char16_t> v8 = (char *)p_str + 2 * size;
  uint64_t v9 = *((unsigned __int16 *)v8 - 1);
  if (MEMORY[0x1D942C150](*((void *)v3 + 7), *((unsigned __int16 *)v8 - 2)) && v9 == 115)
  {
    char v10 = 0;
    LOBYTE(v3) = 1;
  }
  else if (MEMORY[0x1D942C150](*((void *)v3 + 7), v9))
  {
    std::basic_string<char16_t>::size_type v12 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v12 = __str.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::basic_string(&__p, &__str, 0, v12 - 1, v11);
    LOBYTE(v3) = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::endsWithDutchSSound((uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    char v10 = 0;
  }
  else
  {
    char v10 = 1;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (v10) {
    goto LABEL_22;
  }
  return v3 & 1;
}

void sub_1D2CDBE44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::endsWithDutchSSound(uint64_t a1)
{
  std::basic_string<char16_t> __p = 0;
  unint64_t v28 = 0;
  uint64_t v29 = 0;
  int32_t v2 = *(unsigned __int8 *)(a1 + 23);
  uint64_t v3 = *(const UChar **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = morphun::util::LocaleUtils::DUTCH((morphun::util::LocaleUtils *)a1);
  if ((v2 & 0x80u) == 0) {
    CFStringRef v6 = (const UChar *)a1;
  }
  else {
    CFStringRef v6 = v3;
  }
  if ((v2 & 0x80u) == 0) {
    int32_t v7 = v2;
  }
  else {
    int32_t v7 = v4;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&__p, v6, v7, v5);
  unint64_t v8 = HIBYTE(v29);
  if (v29 < 0) {
    unint64_t v8 = v28;
  }
  if (!v8)
  {
LABEL_35:
    char v11 = 0;
    goto LABEL_36;
  }
  p_p = (unsigned __int16 *)__p;
  if (v29 >= 0) {
    p_p = (unsigned __int16 *)&__p;
  }
  int v10 = p_p[v8 - 1];
  char v11 = 1;
  if (v10 != 115 && v10 != 122)
  {
    if (v8 < 3) {
      goto LABEL_30;
    }
    uint64_t v12 = 0;
    uint64_t v13 = __p;
    if (v29 >= 0) {
      uint64_t v13 = &__p;
    }
    uint64_t v14 = (uint64_t)v13 + 2 * v8 - 6;
    do
    {
      int v15 = *(unsigned __int16 *)(v14 + v12 * 2);
      int v16 = (unsigned __int16)aSch[v12];
    }
    while (v16 == v15 && v12++ != 2);
    char v11 = v16 == v15 ? -1 : 0;
    if (v16 != v15 && v8 != 0)
    {
LABEL_30:
      char v19 = __p;
      if (v29 >= 0) {
        char v19 = &__p;
      }
      if (v19[v8 - 1] == 120)
      {
        char v11 = 1;
        goto LABEL_36;
      }
      if (v8 < 2) {
        goto LABEL_35;
      }
      uint64_t v21 = 0;
      char v22 = __p;
      if (v29 >= 0) {
        char v22 = &__p;
      }
      uint64_t v23 = (uint64_t)v22 + 2 * v8 - 4;
      do
      {
        int v24 = *(unsigned __int16 *)(v23 + v21 * 2);
        int v25 = (unsigned __int16)aSh[v21];
        char v11 = v25 == v24;
      }
      while (v25 == v24 && v21++ != 1);
    }
  }
LABEL_36:
  if (SHIBYTE(v29) < 0) {
    operator delete(__p);
  }
  return v11 & 1;
}

void sub_1D2CDC000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CDC06C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::isSupported(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if ((*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 64))(a1, a3))
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[3]);
    Case = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)morphun::grammar::synthesis::NlGrammarSynthesizer::getCase((unsigned __int16 *)&__p);
    if (Case == 1)
    {
      uint64_t v7 = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::COUNT_CONDITIONAL_PRONOUNS(Case);
      int v8 = *(char *)(a2 + 23);
      if (v8 >= 0) {
        uint64_t v9 = (unsigned __int16 *)a2;
      }
      else {
        uint64_t v9 = *(unsigned __int16 **)a2;
      }
      if (v8 >= 0) {
        unint64_t v10 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        unint64_t v10 = *(void *)(a2 + 8);
      }
      char v11 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v7, v9, v10);
      uint64_t v12 = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::COUNT_CONDITIONAL_PRONOUNS(v11);
      if ((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)(v12 + 8) == v11
        || (uint64_t v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 72))(a1, a3), (v12 & 1) != 0))
      {
        uint64_t v13 = morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::DECLENSION_CONDITIONAL((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)v12);
        int v14 = *(char *)(a2 + 23);
        if (v14 >= 0) {
          int v15 = (unsigned __int16 *)a2;
        }
        else {
          int v15 = *(unsigned __int16 **)a2;
        }
        if (v14 >= 0) {
          unint64_t v16 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          unint64_t v16 = *(void *)(a2 + 8);
        }
        uint64_t v17 = (morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v13, v15, v16);
        if ((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::DECLENSION_CONDITIONAL(v17)
                                                                                   + 8) == v17
          || ((*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 56))(a1, a3) & 1) != 0)
        {
          uint64_t v18 = 1;
LABEL_29:
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          return v18;
        }
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v20, "i");
        morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection((const void **)a2, (uint64_t)v20);
      }
      else
      {
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v20, "i");
        morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection((const void **)a2, (uint64_t)v20);
      }
    }
    else
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v20, "O");
      morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection((const void **)a2, (uint64_t)v20);
    }
    if (v21 < 0) {
      operator delete(v20[0]);
    }
    uint64_t v18 = 0;
    goto LABEL_29;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"invalid constraints: expected case value");
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection((const void **)a2, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1D2CDC28C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern::~NlGrammarSynthesizer_PossessivePattern(morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *this)
{
  *(void *)this = &off_1F2A0C988;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)((char *)this + 56));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A0C988;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::grammar::synthesis::NlGrammarSynthesizer_PossessivePattern *)((char *)this + 56));
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::determine(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, (void *)a3);
  unint64_t v6 = *(unsigned __int8 *)(a3 + 23);
  LOBYTE(v7) = v6;
  unint64_t v8 = *(void *)(a3 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v9 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  if (!v9)
  {
    uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *(void *)(a2 + 8);
    }
    if (v10)
    {
      uint64_t v11 = a1[26];
      if (!v11 || (uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v11 + 24))(v11, a2)) == 0)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      uint64_t v13 = v12;
      long long v97 = *(_OWORD *)(v12 + 8);
      uint64_t v14 = *((void *)&v97 + 1);
      if (*((void *)&v97 + 1)) {
LABEL_11:
      }
        uint64_t v14 = *(void *)(v14 + 80);
      while (v14 != (void)v97)
      {
        if ((void)v97
        {
          int v15 = *(char *)(v97 + 63);
          unint64_t v16 = v15 >= 0 ? (const UChar *)(v97 + 40) : *(const UChar **)(v97 + 40);
          uint64_t v17 = v15 >= 0 ? *(unsigned __int8 *)(v97 + 63) : *(void *)(v97 + 48);
          uint64_t v18 = a1[27];
          uint64_t v19 = a1[28];
          v98.__r_.__value_.__r.__words[0] = 0;
          if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)&v98, v16, v17)
            && (v98.__r_.__value_.__r.__words[0] & v19) == v19)
          {
            morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v97 + 16, &v98);
            if ((char)v6 < 0) {
              operator delete(*(void **)a3);
            }
            *(_OWORD *)a3 = *(_OWORD *)&v98.__r_.__value_.__l.__data_;
            unint64_t v22 = v98.__r_.__value_.__r.__words[2];
            *(void *)(a3 + 16) = *((void *)&v98.__r_.__value_.__l + 2);
            unint64_t v6 = HIBYTE(v22);
            unint64_t v8 = *(void *)(a3 + 8);
            unint64_t v7 = HIBYTE(v22);
            break;
          }
        }
        npc<morphun::Token const>(v97);
        *((void *)&v21 + 1) = *((void *)&v97 + 1);
        *(void *)&long long v21 = *(void *)(v97 + 80);
        long long v97 = v21;
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14) {
          goto LABEL_11;
        }
      }
      if ((v7 & 0x80u) == 0) {
        unint64_t v23 = v6;
      }
      else {
        unint64_t v23 = v8;
      }
      if (!v23)
      {
        long long v97 = *(_OWORD *)(v13 + 8);
        uint64_t v24 = *((void *)&v97 + 1);
        if (!*((void *)&v97 + 1)) {
          goto LABEL_37;
        }
LABEL_36:
        uint64_t v24 = *(void *)(v24 + 80);
LABEL_37:
        while (v24 != (void)v97)
        {
          if ((void)v97
          {
            morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v97 + 16, &v98);
            if ((v7 & 0x80) != 0) {
              operator delete(*(void **)a3);
            }
            *(_OWORD *)a3 = *(_OWORD *)&v98.__r_.__value_.__l.__data_;
            unint64_t v26 = v98.__r_.__value_.__r.__words[2];
            *(void *)(a3 + 16) = *((void *)&v98.__r_.__value_.__l + 2);
            unint64_t v6 = HIBYTE(v26);
            unint64_t v8 = *(void *)(a3 + 8);
            unint64_t v7 = HIBYTE(v26);
            break;
          }
          npc<morphun::Token const>(v97);
          *((void *)&v25 + 1) = *((void *)&v97 + 1);
          *(void *)&long long v25 = *(void *)(v97 + 80);
          long long v97 = v25;
          uint64_t v24 = *(void *)(v13 + 16);
          if (v24) {
            goto LABEL_36;
          }
        }
      }
      if ((v7 & 0x80u) == 0) {
        unint64_t v27 = v6;
      }
      else {
        unint64_t v27 = v8;
      }
      if (v27) {
        goto LABEL_136;
      }
      unint64_t v28 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 104))(v13);
      if (!v28)
      {
        v95 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v95);
      }
      uint64_t v29 = *((void *)v28 + 10);
      if (!v29)
      {
        v96 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v96);
      }
      if (*(char *)(v29 + 63) < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v98, *(const std::basic_string<char16_t>::value_type **)(v29 + 40), *(void *)(v29 + 48));
      }
      else {
        std::basic_string<char16_t> v98 = *(std::basic_string<char16_t> *)(v29 + 40);
      }
      std::basic_string<char16_t>::size_type size = HIBYTE(v98.__r_.__value_.__r.__words[2]);
      char v31 = HIBYTE(v98.__r_.__value_.__r.__words[2]);
      if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v98.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::size_type v32 = size - 5;
      if (size >= 5)
      {
        uint64_t v51 = 0;
        char v52 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
        if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          char v52 = &v98;
        }
        std::basic_string<char16_t> v53 = (char *)v52 + 2 * v32;
        do
        {
          int v54 = *(unsigned __int16 *)&v53[v51 * 2];
          int v55 = (unsigned __int16)aZione[v51];
        }
        while (v55 == v54 && v51++ != 4);
        if (v55 == v54) {
          goto LABEL_132;
        }
        uint64_t v57 = 0;
        uint64_t v58 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
        if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v58 = &v98;
        }
        v59 = (char *)v58 + 2 * v32;
        do
        {
          int v60 = *(unsigned __int16 *)&v59[v57 * 2];
          int v61 = (unsigned __int16)aSione[v57];
        }
        while (v61 == v60 && v57++ != 4);
        if (v61 == v60) {
          goto LABEL_132;
        }
        uint64_t v63 = 0;
        int v64 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
        if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v64 = &v98;
        }
        uint64_t v65 = (char *)v64 + 2 * v32;
        do
        {
          int v66 = *(unsigned __int16 *)&v65[v63 * 2];
          int v67 = (unsigned __int16)aGione[v63];
        }
        while (v67 == v66 && v63++ != 4);
        if (v67 == v66) {
          goto LABEL_132;
        }
      }
      if (size >= 2)
      {
        uint64_t v33 = 0;
        unint64_t v34 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
        if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unint64_t v34 = &v98;
        }
        uint64_t v35 = (uint64_t)v34 + 2 * size - 4;
        do
        {
          int v36 = *(unsigned __int16 *)(v35 + v33 * 2);
          int v37 = (unsigned __int16)word_1D2ECDDB2[v33];
        }
        while (v37 == v36 && v33++ != 1);
        if (v37 == v36) {
          goto LABEL_132;
        }
      }
      if (!size) {
        goto LABEL_134;
      }
      long long v39 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
      if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v39 = &v98;
      }
      int v40 = (unsigned __int16)v39->__r_.__value_.__s.__data_[size - 1];
      if (v40 == 224 || v40 == 249) {
        goto LABEL_132;
      }
      if (size >= 5)
      {
        uint64_t v69 = 0;
        v70 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
        if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v70 = &v98;
        }
        uint64_t v71 = (uint64_t)v70 + 2 * size - 10;
        do
        {
          int v72 = *(unsigned __int16 *)(v71 + v69 * 2);
          int v73 = (unsigned __int16)aTrice[v69];
        }
        while (v73 == v72 && v69++ != 4);
        if (v73 == v72) {
          goto LABEL_132;
        }
        if (size >= 6)
        {
          uint64_t v88 = 0;
          v89 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
          if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v89 = &v98;
          }
          uint64_t v90 = (uint64_t)v89 + 2 * size - 12;
          do
          {
            int v91 = *(unsigned __int16 *)(v90 + v88 * 2);
            int v92 = (unsigned __int16)aTudine[v88];
          }
          while (v92 == v91 && v88++ != 5);
          if (v92 == v91) {
            goto LABEL_132;
          }
        }
      }
      if (size < 4) {
        goto LABEL_155;
      }
      uint64_t v41 = 0;
      std::basic_string<char16_t> v42 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
      if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t> v42 = &v98;
      }
      uint64_t v43 = (uint64_t)v42 + 2 * size - 8;
      do
      {
        int v44 = *(unsigned __int16 *)(v43 + v41);
        int v45 = *(unsigned __int16 *)&aA_10[v41];
        BOOL v46 = v45 != v44 || v41 == 6;
        v41 += 2;
      }
      while (!v46);
      if (v45 != v44)
      {
LABEL_155:
        std::basic_string<char16_t>::size_type v47 = size - 3;
        if (size < 3) {
          goto LABEL_85;
        }
        uint64_t v76 = 0;
        v77 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
        if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v77 = &v98;
        }
        v78 = (char *)v77 + 2 * v47;
        do
        {
          int v79 = *(unsigned __int16 *)&v78[v76 * 2];
          int v80 = (unsigned __int16)aEma[v76];
        }
        while (v80 == v79 && v76++ != 2);
        if (v80 != v79)
        {
          uint64_t v82 = 0;
          v83 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
          if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v83 = &v98;
          }
          v84 = (char *)v83 + 2 * v47;
          do
          {
            int v85 = *(unsigned __int16 *)&v84[v82 * 2];
            int v86 = (unsigned __int16)aOre[v82];
          }
          while (v86 == v85 && v82++ != 2);
          if (v86 != v85)
          {
LABEL_85:
            v48 = (std::basic_string<char16_t> *)v98.__r_.__value_.__r.__words[0];
            if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v48 = &v98;
            }
            int v49 = (unsigned __int16)v48->__r_.__value_.__s.__data_[size - 1];
            if (v49 <= 110)
            {
              if (v49 == 97 || v49 == 101)
              {
LABEL_132:
                v75 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v28);
LABEL_133:
                std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v75);
                char v31 = HIBYTE(v98.__r_.__value_.__r.__words[2]);
                goto LABEL_134;
              }
              if (v49 != 105)
              {
LABEL_134:
                if (v31 < 0) {
                  operator delete(v98.__r_.__value_.__l.__data_);
                }
LABEL_136:
                (*(void (**)(uint64_t))(*(void *)v13 + 16))(v13);
                return;
              }
            }
            else
            {
              BOOL v50 = (v49 - 232) > 0xA || ((1 << (v49 + 24)) & 0x411) == 0;
              if (v50 && v49 != 111) {
                goto LABEL_134;
              }
            }
          }
        }
      }
      v75 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v28);
      goto LABEL_133;
    }
  }
}

void sub_1D2CDCB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  (*(void (**)(uint64_t))(*(void *)v19 + 16))(v19);
  if ((*(unsigned char *)(v18 + 23) & 0x80) != 0) {
    operator delete(*(void **)v18);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *this)
{
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0CF48;
  int32_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FA7C0;
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::ItGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction *this)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FA768;
  int32_t v2 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ITALIAN(this);
  uint64_t v3 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v2);
  if (*(char *)(v3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, *(const std::basic_string<char16_t>::value_type **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    v9.__r_.__value_.__r.__words[2] = *(void *)(v3 + 16);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v3);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v10, *(const std::basic_string<char16_t>::value_type **)v5, *(void *)(v5 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    v10.__r_.__value_.__r.__words[2] = *(void *)(v5 + 16);
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v6;
  }
  long long __p = 0uLL;
  v12[0] = 0;
  p_p = &__p;
  char v8 = 0;
  *(void *)&long long __p = operator new(0x30uLL);
  *((void *)&__p + 1) = __p;
  v12[0] = __p + 48;
  *((void *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v12, (long long *)&v9, &__p, (std::basic_string<char16_t> *)__p);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)this, (uint64_t *)&off_1F2A06260, v2);
}

void sub_1D2CDCF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0) {
    operator delete(__p);
  }
  uint64_t v27 = *((void *)v25 + 26);
  *((void *)v25 + 26) = 0;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 16))(v27);
  }
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v25, (uint64_t *)&off_1F2A06260);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_de::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v3[2] = xmmword_1E696BAB8;
  _OWORD v3[3] = *(_OWORD *)&off_1E696BAC8;
  long long v4 = "(";
  v3[0] = xmmword_1E696BA98;
  v3[1] = *(_OWORD *)&off_1E696BAA8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

void virtual thunk to'morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::inflectSignificantTokens(void *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, int **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::inflectSignificantTokens(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, int **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, *(void *)(a1 + 8));
  int Declension = morphun::grammar::synthesis::NlGrammarSynthesizer::getDeclension((unsigned __int16 *)&__p);
  uint64_t v11 = *a4;
  std::basic_string<char16_t> v10 = a4[1];
  if (v11 != v10)
  {
    int v12 = Declension;
    uint64_t v13 = a1 + 56;
    do
    {
      unint64_t v14 = *v11;
      morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveInflectionPattern::inflectWithDeclension(v13, (uint64_t)*a3 + 24 * (int)v14, v12, &v17);
      if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v14) {
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      uint64_t v15 = (uint64_t)*a3 + 24 * (int)v14;
      if (*(char *)(v15 + 23) < 0) {
        operator delete(*(void **)v15);
      }
      long long v16 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
      *(void *)(v15 + 16) = *((void *)&v17.__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v15 = v16;
      ++v11;
    }
    while (v11 != v10);
  }
  npc<std::vector<std::basic_string<char16_t>>>((uint64_t)a3);
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CDD1E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CDD270(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveListInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern *this)
{
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveListInflectionPattern((morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern *)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveListInflectionPattern((morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern *)((char *)this + *(void *)(*(void *)this - 32)));
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveListInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern *this)
{
  *(void *)this = &off_1F2A0E028;
  uint64_t v2 = *((void *)this + 14);
  *((void *)this + 14) = 0;
  *((void *)this + 15) = &unk_1F2A0E0B0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

{
  uint64_t vars8;

  morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::~NlGrammarSynthesizer_NlAdjectiveListInflectionPattern(this);

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::inflect@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::basic_string<char16_t> *a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
  if (result)
  {
    uint64_t v9 = npc<morphun::Tokenizer>(a1[14]);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, a2);
    npc<morphun::TokenChain>(v10);
    morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(a4, a3, v10, (uint64_t)a1 + *(void *)(*a1 - 72));
    uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)v10 + 16);
    return v11(v10);
  }
  else
  {
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
  }
  return result;
}

void sub_1D2CDD484(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CDD50C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CDD570(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlAdjectiveListInflectionPattern::isSupported(uint64_t *a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = npc<morphun::Tokenizer>(a1[14]);
  unint64_t v7 = (const morphun::TokenChain *)(*(uint64_t (**)(uint64_t, const void **))(*(void *)v6 + 24))(v6, a2);
  npc<morphun::TokenChain>((uint64_t)v7);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)&v14, v7);
  char v8 = v14;
  uint64_t v9 = v15;
  if (0xAAAAAAAAAAAAAAABLL * (v15 - v14) >= 2)
  {
    while (1)
    {
      if (v8 == v9)
      {
        uint64_t v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 56))(a1, a3);
        goto LABEL_7;
      }
      if (((*(uint64_t (**)(uint64_t *, const void **))(*a1 + 40))(a1, v8) & 1) == 0) {
        break;
      }
      v8 += 3;
    }
    std::operator+<char16_t>((uint64_t)__p, L"contains word that is not an adjective or not in dictionary: ", v8);
    morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)__p);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
  }
  uint64_t v10 = 0;
LABEL_7:
  __p[0] = &v14;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  (*(void (**)(const morphun::TokenChain *))(*(void *)v7 + 16))(v7);
  return v10;
}

void sub_1D2CDD710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::basic_string<char16_t> __p = &a15;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 16))(v15);
  }
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_en::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

char *morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::getDerivedSemanticName(morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction *this)
{
  uint64_t result = (char *)(*(uint64_t (**)(void))(**((void **)this + 89) + 32))(*((void *)this + 89));
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 712))
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
    if (v4)
    {
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
      return v5(a1, a2, v4);
    }
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  char v8 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 32))(a2, *(void *)(a1 + 720));
  int Count = morphun::grammar::synthesis::EsGrammarSynthesizer::getCount(v8);
  uint64_t v10 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 32))(a2, *(void *)(a1 + 728));
  int Gender = morphun::grammar::synthesis::EsGrammarSynthesizer::getGender(v10);
  if (!Count
    && (morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::determine(a1 + 24, v7, &__p),
        int Count = morphun::grammar::synthesis::EsGrammarSynthesizer::getCount((unsigned __int16 *)&__p),
        SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0))
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (Gender) {
      goto LABEL_12;
    }
  }
  else if (Gender)
  {
    goto LABEL_12;
  }
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::determine(a1 + 264, v7, &__p);
  int Gender = morphun::grammar::synthesis::EsGrammarSynthesizer::getGender((unsigned __int16 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_12:
  if (Count == 1)
  {
    if (Gender != 2)
    {
LABEL_67:
      if ((Gender - 1) <= 1)
      {
        std::basic_string<char16_t>::size_type v28 = *(void *)(a1 + 760);
        if (v28 <= 0x7FFFFFFFFFFFFFF7)
        {
          uint64_t v29 = *(const void **)(a1 + 752);
          if (v28 >= 0xB)
          {
            uint64_t v35 = (v28 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((v28 | 3) != 0xB) {
              uint64_t v35 = v28 | 3;
            }
            p_p = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v35 + 1);
            __p.__r_.__value_.__l.__size_ = v28;
            __p.__r_.__value_.__r.__words[2] = v36 | 0x8000000000000000;
            __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_p;
          }
          else
          {
            *((unsigned char *)&__p.__r_.__value_.__s + 23) = *(void *)(a1 + 760);
            p_p = &__p;
            if (!v28) {
              goto LABEL_84;
            }
          }
          goto LABEL_83;
        }
        goto LABEL_88;
      }
      goto LABEL_72;
    }
    if (!*(unsigned char *)(a1 + 816)) {
      goto LABEL_58;
    }
    morphun::dialog::DictionaryLookupFunction::getFirstWord(&v38, *(void *)(a1 + 664), v7);
    morphun::dialog::DictionaryLookupFunction::determine(a1 + 504, (uint64_t)&v38, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      int v12 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != 8)
      {
        BOOL v26 = 1;
        goto LABEL_55;
      }
    }
    else
    {
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) != 8)
      {
        BOOL v26 = 1;
        goto LABEL_56;
      }
      int v12 = &__p;
    }
    uint64_t v23 = 0;
    do
    {
      int v24 = (unsigned __int16)v12->__r_.__value_.__s.__data_[v23];
      int v25 = (unsigned __int16)aStressed[v23];
      BOOL v26 = v25 != v24;
    }
    while (v25 == v24 && v23++ != 7);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_56:
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v38.__r_.__value_.__l.__data_);
        if (v26)
        {
LABEL_58:
          std::basic_string<char16_t>::size_type v28 = *(void *)(a1 + 776);
          if (v28 <= 0x7FFFFFFFFFFFFFF7)
          {
            uint64_t v29 = *(const void **)(a1 + 768);
            if (v28 >= 0xB)
            {
              uint64_t v31 = (v28 & 0xFFFFFFFFFFFFFFFCLL) + 4;
              if ((v28 | 3) != 0xB) {
                uint64_t v31 = v28 | 3;
              }
              p_p = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v31 + 1);
              __p.__r_.__value_.__l.__size_ = v28;
              __p.__r_.__value_.__r.__words[2] = v32 | 0x8000000000000000;
              __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_p;
            }
            else
            {
              *((unsigned char *)&__p.__r_.__value_.__s + 23) = *(void *)(a1 + 776);
              p_p = &__p;
              if (!v28) {
                goto LABEL_84;
              }
            }
LABEL_83:
            memmove(p_p, v29, 2 * v28);
LABEL_84:
            p_p->__r_.__value_.__s.__data_[v28] = 0;
            uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 32))(a1, a2, &__p);
            goto LABEL_85;
          }
          goto LABEL_88;
        }
      }
      else if (v26)
      {
        goto LABEL_58;
      }
      goto LABEL_67;
    }
    int v12 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
LABEL_55:
    operator delete(v12);
    goto LABEL_56;
  }
  if (Count == 2 && Gender == 1)
  {
    std::basic_string<char16_t>::size_type v15 = *(void *)(a1 + 792);
    if (v15 > 0x7FFFFFFFFFFFFFF7) {
      goto LABEL_88;
    }
    long long v16 = *(const void **)(a1 + 784);
    if (v15 >= 0xB)
    {
      uint64_t v18 = (v15 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v15 | 3) != 0xB) {
        uint64_t v18 = v15 | 3;
      }
      std::basic_string<char16_t> v17 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v18 + 1);
      __p.__r_.__value_.__l.__size_ = v15;
      __p.__r_.__value_.__r.__words[2] = v19 | 0x8000000000000000;
      __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v17;
    }
    else
    {
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = *(void *)(a1 + 792);
      std::basic_string<char16_t> v17 = &__p;
      if (!v15) {
        goto LABEL_39;
      }
    }
  }
  else
  {
    if (Count != 2 || Gender != 2)
    {
LABEL_72:
      std::basic_string<char16_t>::size_type v28 = *(void *)(a1 + 744);
      if (v28 <= 0x7FFFFFFFFFFFFFF7)
      {
        uint64_t v29 = *(const void **)(a1 + 736);
        if (v28 >= 0xB)
        {
          uint64_t v33 = (v28 & 0xFFFFFFFFFFFFFFFCLL) + 4;
          if ((v28 | 3) != 0xB) {
            uint64_t v33 = v28 | 3;
          }
          p_p = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v33 + 1);
          __p.__r_.__value_.__l.__size_ = v28;
          __p.__r_.__value_.__r.__words[2] = v34 | 0x8000000000000000;
          __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_p;
        }
        else
        {
          *((unsigned char *)&__p.__r_.__value_.__s + 23) = *(void *)(a1 + 744);
          p_p = &__p;
          if (!v28) {
            goto LABEL_84;
          }
        }
        goto LABEL_83;
      }
LABEL_88:
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    std::basic_string<char16_t>::size_type v15 = *(void *)(a1 + 808);
    if (v15 > 0x7FFFFFFFFFFFFFF7) {
      goto LABEL_88;
    }
    long long v16 = *(const void **)(a1 + 800);
    if (v15 >= 0xB)
    {
      uint64_t v21 = (v15 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((v15 | 3) != 0xB) {
        uint64_t v21 = v15 | 3;
      }
      std::basic_string<char16_t> v17 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v21 + 1);
      __p.__r_.__value_.__l.__size_ = v15;
      __p.__r_.__value_.__r.__words[2] = v22 | 0x8000000000000000;
      __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v17;
    }
    else
    {
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = *(void *)(a1 + 808);
      std::basic_string<char16_t> v17 = &__p;
      if (!v15) {
        goto LABEL_39;
      }
    }
  }
  memmove(v17, v16, 2 * v15);
LABEL_39:
  v17->__r_.__value_.__s.__data_[v15] = 0;
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 32))(a1, a2, &__p);
LABEL_85:
  uint64_t v37 = v20;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v37;
}

void sub_1D2CDDE50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::~EsGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction *this)
{
  *(void *)this = &off_1F2A0D220;
  *((void *)this + 63) = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 85);
  if (v2)
  {
    *((void *)this + 86) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 83);
  *((void *)this + 83) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 64) = &unk_1F2A0FEF8;
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction((morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 264));
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction((morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 24));

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &off_1F2A0D220;
  *((void *)this + 63) = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 85);
  if (v2)
  {
    *((void *)this + 86) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 83);
  *((void *)this + 83) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 64) = &unk_1F2A0FEF8;
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction((morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 264));
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction((morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 24));
}

void sub_1D2CDE0C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EsGrammarSynthesizer_ArticleLookupFunction::EsGrammarSynthesizer_ArticleLookupFunction(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  v25[1] = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1F29FACA0;
  unint64_t v14 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A063F8, a2, a3 != 0, 1);
  *(void *)a1 = &off_1F2A0D220;
  uint64_t v15 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v14);
  if (*(char *)(v15 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v21, *(const std::basic_string<char16_t>::value_type **)v15, *(void *)(v15 + 8));
  }
  else
  {
    long long v16 = *(_OWORD *)v15;
    v21.__r_.__value_.__r.__words[2] = *(void *)(v15 + 16);
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v16;
  }
  uint64_t v17 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v15);
  if (*(char *)(v17 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v22, *(const std::basic_string<char16_t>::value_type **)v17, *(void *)(v17 + 8));
  }
  else
  {
    long long v18 = *(_OWORD *)v17;
    v22.__r_.__value_.__r.__words[2] = *(void *)(v17 + 16);
    *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v18;
  }
  *((void *)&v23 + 1) = 0;
  int v24 = 0;
  v25[0] = 0;
  uint64_t v19 = (char *)&v23 + 8;
  char v20 = 0;
  *((void *)&v23 + 1) = operator new(0x30uLL);
  int v24 = (std::basic_string<char16_t> *)*((void *)&v23 + 1);
  v25[0] = *((void *)&v23 + 1) + 48;
  int v24 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v25, (long long *)&v21, &v23, *((std::basic_string<char16_t> **)&v23 + 1));
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::EsGrammarSynthesizer_CountGenderLookupFunction((morphun::util::LocaleUtils *)(a1 + 24));
}

void sub_1D2CDE5B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction *a10, morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v24);
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction(a10);
  morphun::grammar::synthesis::EsGrammarSynthesizer_CountGenderLookupFunction::~EsGrammarSynthesizer_CountGenderLookupFunction(a11);
  _Unwind_Resume(a1);
}

void sub_1D2CDE700(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1D2CDE6F8);
}

uint64_t *morphun::dialog::PronounConcept::toSpeakableString(morphun::dialog::PronounConcept *this, const morphun::dialog::SemanticFeatureConceptBase *a2)
{
  FirstPossibleValue = morphun::dialog::PronounConcept::getFirstPossibleValue(this, a2, 1);
  uint64_t v4 = FirstPossibleValue;
  if (!FirstPossibleValue) {
    return v4;
  }
  if (*((char *)FirstPossibleValue + 23) < 0)
  {
    std::basic_string<char16_t>::size_type v5 = FirstPossibleValue[1];
    if (v5)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__p, (const std::basic_string<char16_t>::value_type *)*FirstPossibleValue, v5);
      goto LABEL_7;
    }
    return 0;
  }
  if (!*((unsigned char *)FirstPossibleValue + 23)) {
    return 0;
  }
  std::basic_string<char16_t> __p = *(std::basic_string<char16_t> *)FirstPossibleValue;
LABEL_7:
  std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v7 = (*(uint64_t (**)(morphun::dialog::PronounConcept *))(*(void *)this + 120))(this);
    npc<morphun::dialog::SemanticFeature const>(v7);
    if (v4 + 4 != std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature const*>((uint64_t)(v4 + 3), v7))operator new(); {
    operator new();
    }
  }
  uint64_t v4 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1D2CDE868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  MEMORY[0x1D942B8B0](v9, 0x10B3C40F7FF9C27);
  if (v10 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t *morphun::dialog::PronounConcept::getFirstPossibleValue(morphun::dialog::PronounConcept *this, const morphun::dialog::SemanticFeatureConceptBase *a2, int a3)
{
  uint64_t v3 = this;
  if (morphun::dialog::PronounConcept::isMatchingInitialPronoun(this))
  {
    uint64_t v4 = (uint64_t **)*((void *)v3 + 5);
    int v5 = *((_DWORD *)v3 + 20);
    return morphun::dialog::PronounConcept::PronounData::getPronounEntry(v4, v5);
  }
  uint64_t v68 = (uint64_t)v3;
  uint64_t v69 = 0;
  uint64_t v7 = 0;
  int v8 = 0;
  PronounEntry = 0;
  int v73 = *((_DWORD *)v3 + 18);
  int v10 = (unsigned __int16 *)((char *)v3 + 24);
  uint64_t v11 = (unsigned __int16 *)((char *)v3 + 64);
  v70 = (char *)v3 + 24;
LABEL_6:
  uint64_t v12 = *((void *)v3 + 5);
  if ((int)v7 >= (int)(-1431655765 * ((*(void *)(v12 + 24) - *(void *)(v12 + 16)) >> 4)
                      - 1431655765 * ((*(void *)(*(void *)v12 + 8) - **(void **)v12) >> 4)))
  {
    if (!PronounEntry && a3) {
      PronounEntry = morphun::dialog::PronounConcept::PronounData::getPronounEntry((uint64_t **)v12, 0);
    }
    goto LABEL_116;
  }
  int v75 = v8;
  unsigned int v76 = v7;
  char v13 = morphun::dialog::PronounConcept::PronounData::getPronounEntry((uint64_t **)v12, v7);
  v74 = PronounEntry;
  uint64_t v14 = (uint64_t)(v13 + 3);
  uint64_t v15 = (unsigned __int16 *)*((void *)v3 + 2);
  uint64_t v71 = v13;
  int v8 = 0;
  if (v15 == v10)
  {
    if (!a2) {
      goto LABEL_95;
    }
LABEL_24:
    std::basic_string<char16_t> v21 = (uint64_t *)v13[3];
    std::basic_string<char16_t> v22 = v13 + 4;
    if (v21 == v13 + 4)
    {
LABEL_94:
      uint64_t v3 = (morphun::dialog::PronounConcept *)v68;
      goto LABEL_95;
    }
    while (1)
    {
      uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21[4] + 32))(v21[4]);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
      if ((v24 & 0x80u) == 0) {
        int v25 = (char *)v23;
      }
      else {
        int v25 = *(char **)v23;
      }
      if ((v24 & 0x80u) != 0) {
        uint64_t v24 = *(void *)(v23 + 8);
      }
      if (!v24) {
        goto LABEL_86;
      }
      BOOL v26 = (unsigned __int16 *)(v21 + 5);
      uint64_t v27 = v25;
      while (*(_WORD *)v27 != 61)
      {
        v27 += 2;
        if (!--v24) {
          goto LABEL_86;
        }
      }
      uint64_t v28 = v27 - v25;
      if (v27 - v25 == -2) {
        goto LABEL_86;
      }
      uint64_t v29 = (*(uint64_t (**)(uint64_t))(*(void *)v21[4] + 32))(v21[4]);
      unint64_t v30 = v28 >> 1;
      unint64_t v31 = *(unsigned __int8 *)(v29 + 23);
      int v32 = (char)v31;
      if ((v31 & 0x80u) != 0) {
        unint64_t v31 = *(void *)(v29 + 8);
      }
      if (v31 <= v30) {
        std::__throw_out_of_range[abi:ne180100]("string_view::substr");
      }
      unint64_t v33 = v30 + 1;
      if (v32 >= 0) {
        uint64_t v34 = v29;
      }
      else {
        uint64_t v34 = *(void *)v29;
      }
      uint64_t v35 = (char *)(v34 + 2 * v33);
      unint64_t v36 = v31 - v33;
      if (v31 - v33 == 5)
      {
        uint64_t v37 = 0;
        while (word_1D2ECAEAE[v37] == *(_WORD *)&v35[v37 * 2])
        {
          if (++v37 == 5)
          {
            uint64_t v38 = v69;
            if (!v69)
            {
              uint64_t v38 = (*(uint64_t (**)(char *))(*(void *)((char *)a2 + *(void *)(*(void *)a2 - 56))
                                                      + 24))((char *)a2 + *(void *)(*(void *)a2 - 56));
              if (!v38)
              {
                uint64_t v69 = 0;
                int v10 = (unsigned __int16 *)v70;
                goto LABEL_86;
              }
            }
            uint64_t v69 = v38;
            uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 32))(v38);
            if (*((char *)v21 + 63) < 0)
            {
              BOOL v26 = (unsigned __int16 *)v21[5];
              uint64_t v40 = v21[6];
            }
            else
            {
              uint64_t v40 = *((unsigned __int8 *)v21 + 63);
            }
            int v10 = (unsigned __int16 *)v70;
            if (!morphun::dialog::PronounConcept::isMatchingSoundProperty(v68, v39, (uint64_t)v26, v40)) {
              goto LABEL_112;
            }
            goto LABEL_86;
          }
        }
      }
      if (*((char *)v21 + 63) < 0)
      {
        BOOL v26 = (unsigned __int16 *)v21[5];
        uint64_t v41 = v21[6];
      }
      else
      {
        uint64_t v41 = *((unsigned __int8 *)v21 + 63);
      }
      if (v36 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      if (v36 >= 0xB) {
        break;
      }
      HIBYTE(v78) = v31 - v33;
      std::basic_string<char16_t> v42 = __dst;
      if (v31 != v33) {
        goto LABEL_60;
      }
LABEL_61:
      *((_WORD *)v42 + v36) = 0;
      uint64_t v45 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, void **))(*(void *)a2 + 112))(a2, __dst);
      uint64_t v46 = v45;
      if (SHIBYTE(v78) < 0)
      {
        operator delete(__dst[0]);
        if (!v46)
        {
LABEL_82:
          int v10 = (unsigned __int16 *)v70;
          if (!v41) {
            goto LABEL_112;
          }
          goto LABEL_86;
        }
      }
      else if (!v45)
      {
        goto LABEL_82;
      }
      uint64_t v47 = (*(uint64_t (**)(uint64_t))(*(void *)v46 + 32))(v46);
      uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
      int v49 = (char)v48;
      if ((v48 & 0x80u) != 0) {
        uint64_t v48 = *(void *)(v47 + 8);
      }
      BOOL v50 = v48 == v41;
      if (v48) {
        BOOL v51 = v48 == v41;
      }
      else {
        BOOL v51 = 0;
      }
      if (v51)
      {
        if (v49 >= 0) {
          char v52 = (unsigned __int16 *)v47;
        }
        else {
          char v52 = *(unsigned __int16 **)v47;
        }
        uint64_t v53 = v41 - 1;
        do
        {
          int v55 = *v52++;
          int v54 = v55;
          int v57 = *v26++;
          int v56 = v57;
          BOOL v59 = v53-- != 0;
          BOOL v50 = v56 == v54;
        }
        while (v56 == v54 && v59);
      }
      (*(void (**)(uint64_t))(*(void *)v46 + 16))(v46);
      int v10 = (unsigned __int16 *)v70;
      if (!v50)
      {
LABEL_112:
        int v8 = v75;
        LODWORD(v7) = v76;
        int v62 = v73;
        PronounEntry = v74;
        uint64_t v3 = (morphun::dialog::PronounConcept *)v68;
LABEL_111:
        uint64_t v7 = (v7 + 1);
        int v73 = v62;
        goto LABEL_6;
      }
LABEL_86:
      int v60 = (uint64_t *)v21[1];
      if (v60)
      {
        do
        {
          int v61 = v60;
          int v60 = (uint64_t *)*v60;
        }
        while (v60);
      }
      else
      {
        do
        {
          int v61 = (uint64_t *)v21[2];
          BOOL v51 = *v61 == (void)v21;
          std::basic_string<char16_t> v21 = v61;
        }
        while (!v51);
      }
      std::basic_string<char16_t> v21 = v61;
      if (v61 == v22) {
        goto LABEL_94;
      }
    }
    uint64_t v43 = (v36 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v36 | 3) != 0xB) {
      uint64_t v43 = v36 | 3;
    }
    std::basic_string<char16_t> v42 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v43 + 1);
    __dst[1] = (void *)v36;
    unint64_t v78 = v44 | 0x8000000000000000;
    __dst[0] = v42;
LABEL_60:
    memmove(v42, v35, 2 * v36);
    goto LABEL_61;
  }
  LOBYTE(v16) = 1;
  do
  {
    int MatchState = morphun::dialog::getMatchState(v14, (uint64_t)(v15 + 16), v15 + 52);
    if (MatchState == 1) {
      ++v8;
    }
    if (!MatchState) {
      goto LABEL_109;
    }
    long long v18 = (unsigned __int16 *)*((void *)v15 + 1);
    if (v18)
    {
      do
      {
        uint64_t v19 = v18;
        long long v18 = *(unsigned __int16 **)v18;
      }
      while (v18);
    }
    else
    {
      do
      {
        uint64_t v19 = (unsigned __int16 *)*((void *)v15 + 2);
        BOOL v51 = *(void *)v19 == (void)v15;
        uint64_t v15 = v19;
      }
      while (!v51);
    }
    int v16 = (MatchState != 0) & v16;
    uint64_t v15 = v19;
  }
  while (v19 != v10);
  if (a2) {
    char v20 = v16;
  }
  else {
    char v20 = 0;
  }
  if (v20)
  {
    char v13 = v71;
    goto LABEL_24;
  }
  if (!v16)
  {
LABEL_109:
    int v8 = v75;
    LODWORD(v7) = v76;
    int v62 = v73;
    PronounEntry = v74;
    goto LABEL_111;
  }
LABEL_95:
  int v62 = *((_DWORD *)v3 + 18);
  uint64_t v63 = (unsigned __int16 *)*((void *)v3 + 7);
  if (v63 != v11)
  {
    do
    {
      int v64 = morphun::dialog::getMatchState(v14, (uint64_t)(v63 + 16), v63 + 52) != 0;
      uint64_t v65 = (unsigned __int16 *)*((void *)v63 + 1);
      if (v65)
      {
        do
        {
          int v66 = v65;
          uint64_t v65 = *(unsigned __int16 **)v65;
        }
        while (v65);
      }
      else
      {
        do
        {
          int v66 = (unsigned __int16 *)*((void *)v63 + 2);
          BOOL v51 = *(void *)v66 == (void)v63;
          uint64_t v63 = v66;
        }
        while (!v51);
      }
      v62 -= v64;
      uint64_t v63 = v66;
    }
    while (v66 != v11);
  }
  uint64_t v7 = v76;
  if (v74 && v8 >= v75 && (v8 != v75 || v62 >= v73))
  {
    int v8 = v75;
    int v62 = v73;
    PronounEntry = v74;
    goto LABEL_111;
  }
  PronounEntry = v71;
  if (v8 | v62) {
    goto LABEL_111;
  }
LABEL_116:
  if (v69) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v69 + 16))(v69, v7);
  }
  return PronounEntry;
}

void sub_1D2CDEF00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 16))(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CDEFE4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature const*>(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  int v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = morphun::dialog::SemanticFeature::operator<(v3[4], a2);
    uint64_t v7 = v3 + 1;
    if (!v6)
    {
      uint64_t v7 = v3;
      int v5 = v3;
    }
    uint64_t v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || morphun::dialog::SemanticFeature::operator<(a2, v5[4])) {
    return v2;
  }
  return v5;
}

uint64_t morphun::dialog::PronounConcept::isMatchingInitialPronoun(morphun::dialog::PronounConcept *this)
{
  int v1 = *((_DWORD *)this + 20);
  if (v1 < 0) {
    return 0;
  }
  if (*((void *)this + 4))
  {
    PronounEntry = morphun::dialog::PronounConcept::PronounData::getPronounEntry(*((uint64_t ***)this + 5), v1);
    uint64_t v4 = (char *)*((void *)this + 2);
    int v5 = (char *)this + 24;
    if (v4 != (char *)this + 24)
    {
      uint64_t v6 = (uint64_t)(PronounEntry + 3);
      uint64_t v7 = PronounEntry + 4;
      while (1)
      {
        int v8 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature const*>(v6, (uint64_t)(v4 + 32));
        if (v7 == v8) {
          return 0;
        }
        uint64_t v9 = *((unsigned __int8 *)v8 + 63);
        int v10 = (char)v9;
        if ((v9 & 0x80u) != 0) {
          uint64_t v9 = v8[6];
        }
        uint64_t v11 = v4[127];
        int v12 = (char)v11;
        if ((v11 & 0x80u) != 0) {
          uint64_t v11 = *((void *)v4 + 14);
        }
        if (v9 != v11) {
          return 0;
        }
        if (v9)
        {
          if (v12 >= 0) {
            char v13 = (unsigned __int16 *)(v4 + 104);
          }
          else {
            char v13 = (unsigned __int16 *)*((void *)v4 + 13);
          }
          if (v10 >= 0) {
            uint64_t v14 = (unsigned __int16 *)(v8 + 5);
          }
          else {
            uint64_t v14 = (unsigned __int16 *)v8[5];
          }
          while (*v13 == *v14)
          {
            ++v14;
            ++v13;
            if (!--v9) {
              goto LABEL_20;
            }
          }
          return 0;
        }
LABEL_20:
        uint64_t v15 = (char *)*((void *)v4 + 1);
        if (v15)
        {
          do
          {
            int v16 = v15;
            uint64_t v15 = *(char **)v15;
          }
          while (v15);
        }
        else
        {
          do
          {
            int v16 = (char *)*((void *)v4 + 2);
            BOOL v17 = *(void *)v16 == (void)v4;
            uint64_t v4 = v16;
          }
          while (!v17);
        }
        uint64_t result = 1;
        uint64_t v4 = v16;
        if (v16 == v5) {
          return result;
        }
      }
    }
  }
  return 1;
}

uint64_t *morphun::dialog::PronounConcept::PronounData::getPronounEntry(uint64_t **this, int a2)
{
  uint64_t v2 = this[2];
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((char *)this[3] - (char *)v2) >> 4);
  int v4 = a2 - v3;
  if (a2 >= (int)v3)
  {
    uint64_t v2 = (uint64_t *)**this;
    if (0xAAAAAAAAAAAAAAABLL * (((*this)[1] - (uint64_t)v2) >> 4) > v4) {
      return &v2[6 * v4];
    }
LABEL_6:
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  if (v3 <= a2) {
    goto LABEL_6;
  }
  int v4 = a2;
  return &v2[6 * v4];
}

uint64_t morphun::dialog::getMatchState(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  int v5 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature const*>(a1, a2);
  if ((void *)(a1 + 8) == v5) {
    return 0;
  }
  uint64_t v6 = *((unsigned __int8 *)v5 + 63);
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = v5[6];
  }
  uint64_t v8 = *((unsigned __int8 *)a3 + 23);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *((void *)a3 + 1);
  }
  if (v6 == v8)
  {
    if (!v6) {
      return 2;
    }
    if (v9 >= 0) {
      int v10 = a3;
    }
    else {
      int v10 = *(unsigned __int16 **)a3;
    }
    if (v7 >= 0) {
      uint64_t v11 = (unsigned __int16 *)(v5 + 5);
    }
    else {
      uint64_t v11 = (unsigned __int16 *)v5[5];
    }
    uint64_t v12 = v6;
    while (*v10 == *v11)
    {
      ++v11;
      ++v10;
      if (!--v12) {
        return 2;
      }
    }
  }
  return v6 == 0;
}

BOOL morphun::dialog::PronounConcept::isMatchingSoundProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 == 15)
  {
    uint64_t v7 = 0;
    while (morphun::dialog::CONSONANT_START[v7] == *(_WORD *)(a3 + v7 * 2))
    {
      if (++v7 == 15)
      {
LABEL_10:
        uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
        uint64_t v10 = npc<morphun::dialog::SemanticFeatureModel const>(v9);
        if (morphun::dictionary::PhraseProperties::isStartsWithVowel((morphun::dictionary::DictionaryMetaData *)(v10 + 104), a2))
        {
          if (a4 != 15) {
            return 1;
          }
          uint64_t v11 = 0;
          do
          {
            int v12 = *(unsigned __int16 *)(a3 + v11 * 2);
            int v13 = (unsigned __int16)morphun::dialog::CONSONANT_START[v11];
            BOOL result = v13 != v12;
          }
          while (v13 == v12 && v11++ != 14);
        }
        else
        {
          if (a4 != 11) {
            return 1;
          }
          uint64_t v26 = 0;
          do
          {
            int v27 = *(unsigned __int16 *)(a3 + v26 * 2);
            int v28 = (unsigned __int16)morphun::dialog::VOWEL_START[v26];
            BOOL result = v28 != v27;
          }
          while (v28 == v27 && v26++ != 10);
        }
        return result;
      }
    }
  }
  if (a4 == 11)
  {
    uint64_t v8 = 0;
    while (morphun::dialog::VOWEL_START[v8] == *(_WORD *)(a3 + v8 * 2))
    {
      if (++v8 == 11) {
        goto LABEL_10;
      }
    }
  }
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  uint64_t v17 = npc<morphun::dialog::SemanticFeatureModel const>(v16);
  if (morphun::dictionary::PhraseProperties::isEndsWithVowel(v17 + 104, a2))
  {
    if (a4 == 13)
    {
      uint64_t v18 = 0;
      do
      {
        int v19 = *(unsigned __int16 *)(a3 + v18 * 2);
        int v20 = (unsigned __int16)morphun::dialog::CONSONANT_END[v18];
        BOOL result = v20 != v19;
      }
      while (v20 == v19 && v18++ != 12);
      return result;
    }
    return 1;
  }
  if (a4 != 9) {
    return 1;
  }
  uint64_t v22 = 0;
  do
  {
    int v23 = *(unsigned __int16 *)(a3 + v22 * 2);
    int v24 = (unsigned __int16)morphun::dialog::VOWEL_END[v22];
    BOOL result = v24 != v23;
  }
  while (v24 == v23 && v22++ != 8);
  return result;
}

void sub_1D2CDF4F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::PronounConcept::clone(morphun::dialog::PronounConcept *this)
{
}

void sub_1D2CDF554(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10E1C4055CA4715);
  _Unwind_Resume(a1);
}

morphun::dialog::PronounConcept *morphun::dialog::PronounConcept::PronounConcept(morphun::dialog::PronounConcept *this, const morphun::dialog::PronounConcept *a2)
{
  *(void *)this = &unk_1F29F4638;
  int v4 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::SemanticFeatureConceptBase *)&off_1F2A05208, (uint64_t)a2);
  *(void *)int v4 = &off_1F2A08E18;
  uint64_t v5 = *((void *)a2 + 6);
  *((void *)v4 + 5) = *((void *)a2 + 5);
  *((void *)v4 + 6) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)this + 7, (uint64_t)a2 + 56);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  return this;
}

void sub_1D2CDF614(_Unwind_Exception *a1)
{
  unint64_t v3 = *(std::__shared_weak_count **)(v1 + 48);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v1, (void ***)&off_1F2A05208);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::PronounConcept::getFeatureValue(morphun::dialog::PronounConcept *this, const morphun::dialog::SemanticFeature *a2)
{
  FirstPossibleValue = morphun::dialog::PronounConcept::getFirstPossibleValue(this, 0, 1);
  if (FirstPossibleValue)
  {
    if (*((char *)FirstPossibleValue + 23) < 0)
    {
      if (!FirstPossibleValue[1]) {
        return 0;
      }
    }
    else if (!*((unsigned char *)FirstPossibleValue + 23))
    {
      return 0;
    }
    if (FirstPossibleValue + 4 != std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature const*>((uint64_t)(FirstPossibleValue + 3), (uint64_t)a2))operator new(); {
  }
    }
  return 0;
}

void sub_1D2CDF6D8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

uint64_t *morphun::dialog::PronounConcept::isExists(morphun::dialog::PronounConcept *this)
{
  BOOL result = morphun::dialog::PronounConcept::getFirstPossibleValue(this, 0, 0);
  if (result)
  {
    if (*((char *)result + 23) < 0) {
      uint64_t v2 = result[1];
    }
    else {
      uint64_t v2 = *((unsigned __int8 *)result + 23);
    }
    return (uint64_t *)(v2 != 0);
  }
  return result;
}

uint64_t *morphun::dialog::PronounConcept::toSpeakableString(morphun::dialog::PronounConcept *this)
{
  FirstPossibleValue = morphun::dialog::PronounConcept::getFirstPossibleValue(this, 0, 1);
  unint64_t v3 = FirstPossibleValue;
  if (!FirstPossibleValue) {
    return v3;
  }
  if (*((char *)FirstPossibleValue + 23) < 0)
  {
    std::basic_string<char16_t>::size_type v4 = FirstPossibleValue[1];
    if (v4)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__p, (const std::basic_string<char16_t>::value_type *)*FirstPossibleValue, v4);
      goto LABEL_7;
    }
    return 0;
  }
  if (!*((unsigned char *)FirstPossibleValue + 23)) {
    return 0;
  }
  std::basic_string<char16_t> __p = *(std::basic_string<char16_t> *)FirstPossibleValue;
LABEL_7:
  std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v6 = (*(uint64_t (**)(morphun::dialog::PronounConcept *))(*(void *)this + 120))(this);
    npc<morphun::dialog::SemanticFeature const>(v6);
    if (v3 + 4 != std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature const*>((uint64_t)(v3 + 3), v6))operator new(); {
    operator new();
    }
  }
  unint64_t v3 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_1D2CDF888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  MEMORY[0x1D942B8B0](v9, 0x10B3C40F7FF9C27);
  if (v10 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::PronounConcept::~PronounConcept(void ***this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::PronounConcept::~PronounConcept(void ***this, uint64_t a2)
{
  std::basic_string<char16_t>::size_type v4 = *(void ***)a2;
  *this = *(void ***)a2;
  *(void *)((char *)*(v4 - 9) + (void)this) = *(void *)(a2 + 40);
  *(void *)((char *)*(*this - 7) + (void)this) = *(void *)(a2 + 48);
  *(void *)((char *)*(*this - 5) + (void)this) = *(void *)(a2 + 56);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(this[8]);
  uint64_t v5 = (std::__shared_weak_count *)this[6];
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }

  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase(this, (void ***)(a2 + 8));
}

void *morphun::dialog::PronounConcept::toString@<X0>(morphun::dialog::PronounConcept *this@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void (***)(void))(*(uint64_t (**)(morphun::dialog::PronounConcept *))(*(void *)this + 24))(this);
  if (v3)
  {
    std::basic_string<char16_t>::size_type v4 = v3;
    (**v3)(v3);
    uint64_t v5 = (*v4)[2];
    return (void *)((uint64_t (*)(void))v5)(v4);
  }
  else
  {
    return std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "n");
  }
}

void sub_1D2CDFB4C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::PronounConcept::PronounConcept(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  int v10 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase((void *)a1, (const morphun::dialog::SemanticFeatureModel *)(a2 + 1), a3);
  uint64_t v11 = *a2;
  *int v10 = *a2;
  *(void *)(a1 + *(void *)(v11 - 72)) = a2[5];
  *(void *)(a1 + *(void *)(*(void *)a1 - 56)) = a2[6];
  *(void *)(a1 + *(void *)(*(void *)a1 - 40)) = a2[7];
  std::allocate_shared[abi:ne180100]<morphun::dialog::PronounConcept::PronounData,std::allocator<morphun::dialog::PronounConcept::PronounData>,morphun::dialog::SemanticFeatureModel const&,std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue> const&,void>((void *)(a1 + 40), a3, a4);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)(a1 + 56), a5);
  *(_DWORD *)(a1 + 80) = -1;
  if (-1431655765
     * ((*(void *)(*(void *)(a1 + 40) + 24) - *(void *)(*(void *)(a1 + 40) + 16)) >> 4) == 1431655765 * ((*(void *)(**(void **)(a1 + 40) + 8) - ***(void ***)(a1 + 40)) >> 4))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Display data can not be empty.");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &__dst);
  }
  return a1;
}

void sub_1D2CDFDA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
    {
LABEL_6:
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*(void ***)(v15 + 64));
      int v20 = *(std::__shared_weak_count **)(v15 + 48);
      if (v20) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v20);
      }
      morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v15, v16);
      _Unwind_Resume(a1);
    }
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  goto LABEL_6;
}

void std::allocate_shared[abi:ne180100]<morphun::dialog::PronounConcept::PronounData,std::allocator<morphun::dialog::PronounConcept::PronounData>,morphun::dialog::SemanticFeatureModel const&,std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue> const&,void>(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v189 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::size_type v4 = (char *)operator new(0x58uLL);
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = 0;
  *(void *)std::basic_string<char16_t>::size_type v4 = &unk_1F29F39F0;
  uint64_t v153 = a2;
  {
    operator new();
  }
  if (!morphun::dialog::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  v150 = (std::mutex *)morphun::dialog::CLASS_MUTEX(void)::classMutex;
  std::mutex::lock((std::mutex *)morphun::dialog::CLASS_MUTEX(void)::classMutex);
  {
    operator new();
  }
  uint64_t v5 = morphun::dialog::PRONOUN_DATA_CACHE(void)::PRONOUN_DATA_CACHE_;
  uint64_t v6 = (const morphun::util::ULocale *)(a2 + 104);
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)&v166, v6);
  __src = v6;
  uint64_t v151 = v5;
  {
    operator new();
  }
  uint64_t v7 = morphun::dialog::LOCALE_FALLBACK_PAIRS(void)::LOCALE_FALLBACK_PAIRS_;
  if (!morphun::dialog::LOCALE_FALLBACK_PAIRS(void)::LOCALE_FALLBACK_PAIRS_)
  {
    v145 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v145);
  }
  uint64_t v8 = morphun::dialog::LOCALE_FALLBACK_PAIRS(void)::LOCALE_FALLBACK_PAIRS_ + 8;
  while (1)
  {
    uint64_t v9 = (v171 & 0x80u) == 0 ? (const char *)&v169 : v169;
    int32_t v10 = (v171 & 0x80u) == 0 ? v171 : v170;
    morphun::util::StringViewUtils::to_u16string(v9, v10, (std::basic_string<char16_t> *)v175);
    std::basic_string<char16_t>::insert((std::basic_string<char16_t> *)v175, (std::basic_string<char16_t>::size_type)"/", (const std::basic_string<char16_t>::value_type *)0x26, v11);
    std::basic_string<char16_t> __dst = *(std::basic_string<char16_t> *)v175;
    memset(v175, 0, 24);
    std::basic_string<char16_t>::append(&__dst, L".csv", 4uLL);
    std::basic_string<char16_t> __p = __dst;
    memset(&__dst, 0, sizeof(__dst));
    int v12 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &__p
        : (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    unint64_t v13 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(__p.__r_.__value_.__r.__words[2])
        : __p.__r_.__value_.__l.__size_;
    String = (_WORD *)morphun::resources::DataResource::getString((uint64_t *)v12, v13, 1);
    if (String) {
      break;
    }
    if (v167 >= 0) {
      std::basic_string<char16_t>::size_type v15 = HIBYTE(v167);
    }
    else {
      std::basic_string<char16_t>::size_type v15 = v166.__r_.__value_.__r.__words[2];
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    if ((v175[23] & 0x80000000) != 0) {
      operator delete(*(void **)v175);
    }
    if (!v15)
    {
      v142 = __cxa_allocate_exception(0x38uLL);
      (**(void (***)(std::basic_string<char16_t> *__return_ptr))__src)(&__dst);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, "U", &__dst, v143);
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v142, (long long *)&__p);
    }
    if ((v171 & 0x80u) == 0) {
      uint64_t v16 = (const char *)&v169;
    }
    else {
      uint64_t v16 = v169;
    }
    if ((v171 & 0x80u) == 0) {
      int32_t v17 = v171;
    }
    else {
      int32_t v17 = v170;
    }
    morphun::util::StringViewUtils::to_u16string(v16, v17, &__p);
    int v18 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    int v19 = (void *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v22 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v7, (unsigned __int16 *)p_p, size);
    if (v18 < 0) {
      operator delete(v19);
    }
    if ((void *)v8 == v22)
    {
      morphun::util::ULocale::getFallback((morphun::util::ULocale *)&v166, (uint64_t)&__p);
      morphun::util::ULocale::operator=((uint64_t)&v166, (uint64_t)&__p);
    }
    else
    {
      int v23 = (_WORD *)v22[6];
      if (*v23)
      {
        uint64_t v24 = 0;
        do
          int v25 = v24 + 1;
        while (v23[++v24]);
      }
      else
      {
        int v25 = 0;
      }
      morphun::util::StringViewUtils::to_string((uint64_t)v23, v25, (std::string *)&__dst);
      memset(v175, 0, 24);
      v185 = 0;
      v186 = 0;
      uint64_t v187 = 0;
      v182 = 0;
      v183 = 0;
      uint64_t v184 = 0;
      morphun::util::ULocale::ULocale((uint64_t)&__p, (uint64_t)&__dst, (uint64_t)v175, (uint64_t)&v185, (uint64_t)&v182);
      morphun::util::ULocale::operator=((uint64_t)&v166, (uint64_t)&__p);
      if (SHIBYTE(v184) < 0) {
        operator delete(v182);
      }
      if (SHIBYTE(v187) < 0) {
        operator delete(v185);
      }
      if ((v175[23] & 0x80000000) != 0) {
        operator delete(*(void **)v175);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v27 = v153;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if ((v175[23] & 0x80000000) != 0) {
    operator delete(*(void **)v175);
  }
  if ((v171 & 0x80u) == 0) {
    int v28 = (const char *)&v169;
  }
  else {
    int v28 = v169;
  }
  if ((v171 & 0x80u) == 0) {
    int32_t v29 = v171;
  }
  else {
    int32_t v29 = v170;
  }
  morphun::util::StringViewUtils::to_u16string(v28, v29, &__p);
  std::basic_string<char16_t> v158 = __p;
  v159 = String;
  unint64_t v30 = *(char **)(v151 + 8);
  if (!v30) {
    goto LABEL_282;
  }
  unint64_t v31 = (char *)(v151 + 8);
  do
  {
    BOOL v32 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v30 + 16, (unsigned __int16 *)&v158);
    unint64_t v33 = (char **)(v30 + 8);
    if (!v32)
    {
      unint64_t v33 = (char **)v30;
      unint64_t v31 = v30;
    }
    unint64_t v30 = *v33;
  }
  while (*v33);
  if (v31 == (char *)(v151 + 8)
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)&v158, (unsigned __int16 *)v31 + 16))
  {
LABEL_282:
    if (*String)
    {
      uint64_t v34 = 0;
      do
        uint64_t v35 = v34 + 1;
      while (String[++v34]);
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v37 = (char *)operator new(0x48uLL);
    *((void *)v37 + 1) = 0;
    *((void *)v37 + 2) = 0;
    *(void *)uint64_t v37 = &unk_1F29F3A28;
    *(_OWORD *)(v37 + 24) = 0u;
    v152 = (uint64_t *)(v37 + 24);
    *(_OWORD *)(v37 + 56) = 0u;
    uint64_t v38 = (uint64_t **)(v37 + 56);
    *(_OWORD *)(v37 + 40) = 0u;
    *((void *)v37 + 6) = v37 + 56;
    v183 = 0;
    uint64_t v184 = 0;
    v182 = (void **)&v183;
    memset(&__str, 0, sizeof(__str));
    unint64_t v39 = 0;
    if (v35)
    {
      uint64_t v40 = 2 * v35;
      uint64_t v41 = String;
      do
      {
        int v42 = *v41++;
        if (v42 == 10) {
          ++v39;
        }
        v40 -= 2;
      }
      while (v40);
    }
    std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::reserve(v152, v39);
    v147 = (uint64_t **)(v151 + 8);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
    __p.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)"\n";
    uint64_t v161 = 1;
    v162 = String;
    uint64_t v163 = v35;
    int v164 = v35;
    int v165 = 0;
    if ((int)v35 >= 1) {
      morphun::util::DelimitedStringIterator::getNext((UChar *)&__p);
    }
    *(void *)&long long v43 = v37 + 24;
    *((void *)&v43 + 1) = v37;
    long long v146 = v43;
LABEL_91:
    BOOL v44 = v165 >= v164 && __p.__r_.__value_.__l.__size_ == 0;
    if (!v44)
    {
      std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(v183);
      v183 = 0;
      uint64_t v184 = 0;
      v182 = (void **)&v183;
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = 0uLL;
      __dst.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)L",";
      uint64_t v177 = 1;
      long long v178 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      int v179 = __p.__r_.__value_.__r.__words[1];
      int v180 = 0;
      if (SLODWORD(__p.__r_.__value_.__r.__words[1]) >= 1) {
        morphun::util::DelimitedStringIterator::getNext((UChar *)&__dst);
      }
      std::basic_string<char16_t>::size_type v45 = 0;
      __srca = 0;
      while (1)
      {
        if (v180 >= v179 && __dst.__r_.__value_.__l.__size_ == 0)
        {
          if (v45 >= 0x7FFFFFFFFFFFFFF8) {
            std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
          }
          if (v45 >= 0xB)
          {
            uint64_t v92 = (v45 & 0xFFFFFFFFFFFFFFFCLL) + 4;
            if ((v45 | 3) != 0xB) {
              uint64_t v92 = v45 | 3;
            }
            p_dst = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v92 + 1);
            __dst.__r_.__value_.__r.__words[2] = v93 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
            __dst.__r_.__value_.__l.__size_ = v45;
          }
          else
          {
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v45;
            p_dst = &__dst;
            if (!v45)
            {
LABEL_192:
              p_dst[v45] = 0;
              unint64_t v95 = *((void *)v37 + 4);
              unint64_t v94 = *((void *)v37 + 5);
              if (v95 >= v94)
              {
                unint64_t v97 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v95 - *v152) >> 4);
                unint64_t v98 = v97 + 1;
                if (v97 + 1 > 0x555555555555555) {
                  std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                }
                unint64_t v99 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v94 - *v152) >> 4);
                if (2 * v99 > v98) {
                  unint64_t v98 = 2 * v99;
                }
                if (v99 >= 0x2AAAAAAAAAAAAAALL) {
                  unint64_t v100 = 0x555555555555555;
                }
                else {
                  unint64_t v100 = v98;
                }
                v168 = v37 + 40;
                if (v100) {
                  unint64_t v100 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v100);
                }
                else {
                  uint64_t v101 = 0;
                }
                v166.__r_.__value_.__r.__words[0] = v100;
                v166.__r_.__value_.__l.__size_ = v100 + 48 * v97;
                v166.__r_.__value_.__r.__words[2] = v166.__r_.__value_.__l.__size_;
                int64_t v167 = v100 + 48 * v101;
                std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::pair[abi:ne180100]<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>&,0>(v166.__r_.__value_.__l.__size_, (long long *)&__dst, &v182);
                v166.__r_.__value_.__r.__words[2] += 48;
                std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::__swap_out_circular_buffer(v152, &v166);
                unint64_t v96 = *((void *)v37 + 4);
                std::__split_buffer<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::~__split_buffer((uint64_t)&v166);
              }
              else
              {
                std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::pair[abi:ne180100]<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>&,0>(*((void *)v37 + 4), (long long *)&__dst, &v182);
                unint64_t v96 = v95 + 48;
                *((void *)v37 + 4) = v96;
              }
              *((void *)v37 + 4) = v96;
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__dst.__r_.__value_.__l.__data_);
              }
              morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&__p);
              goto LABEL_91;
            }
          }
          memmove(p_dst, __srca, 2 * v45);
          goto LABEL_192;
        }
        if (!v45)
        {
          std::basic_string<char16_t>::size_type v45 = __dst.__r_.__value_.__l.__size_;
          __srca = (void *)__dst.__r_.__value_.__r.__words[0];
          goto LABEL_183;
        }
        std::basic_string<char16_t>::__assign_external(&__str, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
        std::basic_string<char16_t>::size_type v48 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v48 = __str.__r_.__value_.__l.__size_;
        }
        if (v48 < 0xB) {
          goto LABEL_117;
        }
        uint64_t v49 = 0;
        p_str = &__str;
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        }
        do
        {
          int v51 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[v49];
          int v52 = *(unsigned __int16 *)((char *)&xmmword_1D2ECAF5A + v49 * 2);
        }
        while (v52 == v51 && v49++ != 10);
        if (v52 == v51)
        {
          std::basic_string<char16_t>::basic_string(&v166, &__str, 0xBuLL, 0xFFFFFFFFFFFFFFFFLL, v47);
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
          std::basic_string<char16_t> __str = v166;
          int v54 = 1;
        }
        else
        {
LABEL_117:
          int v54 = 0;
        }
        morphun::dialog::SemanticFeatureModel::getFeatureAlias(v27, (unsigned __int16 *)&__str, v175);
        uint64_t v56 = *(void *)v175;
        if (!*(void *)v175)
        {
          std::basic_string<char16_t>::size_type v57 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          uint64_t v58 = &__str;
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            std::basic_string<char16_t>::size_type v57 = __str.__r_.__value_.__l.__size_;
            uint64_t v58 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
          }
          if (v57)
          {
            BOOL v59 = (char *)v58;
            while (*(_WORD *)v59 != 61)
            {
              v59 += 2;
              if (!--v57) {
                goto LABEL_133;
              }
            }
            uint64_t v60 = v59 - (char *)v58;
            if (v60 != -2)
            {
              std::basic_string<char16_t>::size_type v61 = v60 >> 1;
              std::basic_string<char16_t>::basic_string(&v166, &__str, (v60 >> 1) + 1, 0xFFFFFFFFFFFFFFFFLL, v55);
              if ((v175[31] & 0x80000000) != 0) {
                operator delete(*(void **)&v175[8]);
              }
              *(std::basic_string<char16_t> *)&v175[8] = v166;
              std::basic_string<char16_t>::basic_string(&v166, &__str, 0, v61, v62);
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__str.__r_.__value_.__l.__data_);
              }
              std::basic_string<char16_t> __str = v166;
            }
          }
LABEL_133:
          uint64_t v63 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v153 + 8, (unsigned __int16 *)&__str);
          if (v153 + 16 == v63 || (uint64_t v56 = *(void *)(v63 + 56)) == 0)
          {
            v141 = __cxa_allocate_exception(0x38uLL);
            std::operator+<char16_t>((uint64_t)&v166, word_1D2ECAF72, (const void **)&__str.__r_.__value_.__l.__data_);
            morphun::exception::InvalidConfigurationException::InvalidConfigurationException((uint64_t)v141, (long long *)&v166);
          }
        }
        if (v54) {
          break;
        }
        unsigned int v76 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature const*>((uint64_t)&v182, &v166, v56);
        if (!*v76)
        {
          v77 = v76;
          unint64_t v78 = (uint64_t *)operator new(0x40uLL);
          v78[4] = v56;
          int v79 = (std::basic_string<char16_t> *)(v78 + 5);
          if ((v175[31] & 0x80000000) != 0) {
            goto LABEL_177;
          }
LABEL_176:
          *(_OWORD *)&v79->__r_.__value_.__l.__data_ = *(_OWORD *)&v175[8];
          v79->__r_.__value_.__r.__words[2] = *(void *)&v175[24];
LABEL_178:
          std::basic_string<char16_t>::size_type v90 = v166.__r_.__value_.__r.__words[0];
          uint64_t *v78 = 0;
          v78[1] = 0;
          v78[2] = v90;
          std::basic_string<char16_t> *v77 = v78;
          if (*v182)
          {
            v182 = (void **)*v182;
            unint64_t v78 = *v77;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v183, v78);
          ++v184;
        }
LABEL_181:
        if ((v175[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v175[8]);
        }
LABEL_183:
        morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&__dst);
      }
      uint64_t v64 = (*(uint64_t (**)(uint64_t))(*(void *)v56 + 32))(v56);
      uint64_t v65 = (char *)*v38;
      if (!*v38) {
        goto LABEL_143;
      }
      int v66 = (uint64_t **)(v37 + 56);
      do
      {
        BOOL v67 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v65 + 16, (unsigned __int16 *)v64);
        uint64_t v68 = (char **)(v65 + 8);
        if (!v67)
        {
          uint64_t v68 = (char **)v65;
          int v66 = (uint64_t **)v65;
        }
        uint64_t v65 = *v68;
      }
      while (*v68);
      if (v66 == v38
        || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v64, (unsigned __int16 *)v66 + 16))
      {
LABEL_143:
        uint64_t v69 = (char *)operator new(0x1AuLL);
        v173.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v69;
        *(_OWORD *)&v173.__r_.__value_.__r.__words[1] = xmmword_1D2D6F5A0;
        *(void *)(v69 + 14) = 0x3D00790063006ELL;
        *(_OWORD *)uint64_t v69 = xmmword_1D2ECAF5A;
        *((_WORD *)v69 + 11) = 0;
        uint64_t v70 = (*(uint64_t (**)(uint64_t))(*(void *)v56 + 32))(v56);
        int v71 = *(char *)(v70 + 23);
        if (v71 >= 0) {
          int v72 = (const std::basic_string<char16_t>::value_type *)v70;
        }
        else {
          int v72 = *(const std::basic_string<char16_t>::value_type **)v70;
        }
        if (v71 >= 0) {
          std::basic_string<char16_t>::size_type v73 = *(unsigned __int8 *)(v70 + 23);
        }
        else {
          std::basic_string<char16_t>::size_type v73 = *(void *)(v70 + 8);
        }
        std::basic_string<char16_t>::append(&v173, v72, v73);
        std::basic_string<char16_t> v174 = v173;
        memset(&v173, 0, sizeof(v173));
        uint64_t v74 = (*(uint64_t (**)(uint64_t))(*(void *)v56 + 32))(v56);
        if (*(char *)(v74 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v188, *(const std::basic_string<char16_t>::value_type **)v74, *(void *)(v74 + 8));
        }
        else
        {
          long long v75 = *(_OWORD *)v74;
          v188.__r_.__value_.__r.__words[2] = *(void *)(v74 + 16);
          *(_OWORD *)&v188.__r_.__value_.__l.__data_ = v75;
        }
        std::set<std::basic_string<char16_t>>::set[abi:ne180100](v172, (unsigned __int16 *)&v188, 1);
        morphun::dialog::SemanticFeature::SemanticFeature((uint64_t)&v166, &v174, 1, v172, 1);
        int v80 = *v38;
        v81 = (uint64_t **)(v37 + 56);
        uint64_t v82 = (uint64_t **)(v37 + 56);
        if (*v38)
        {
          while (1)
          {
            while (1)
            {
              v81 = (uint64_t **)v80;
              v83 = (unsigned __int16 *)(v80 + 4);
              if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v64, (unsigned __int16 *)v80 + 16))break; {
              int v80 = *v81;
              }
              uint64_t v82 = v81;
              if (!*v81) {
                goto LABEL_161;
              }
            }
            if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v83, (unsigned __int16 *)v64)) {
              break;
            }
            uint64_t v82 = v81 + 1;
            int v80 = v81[1];
            if (!v80) {
              goto LABEL_161;
            }
          }
          int v66 = v81;
        }
        else
        {
LABEL_161:
          v84 = (char *)operator new(0x80uLL);
          int v66 = (uint64_t **)v84;
          v185 = v84;
          v186 = v37 + 56;
          LOBYTE(v187) = 0;
          if (*(char *)(v64 + 23) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v84 + 32), *(const std::basic_string<char16_t>::value_type **)v64, *(void *)(v64 + 8));
          }
          else
          {
            long long v85 = *(_OWORD *)v64;
            *((void *)v84 + 6) = *(void *)(v64 + 16);
            *((_OWORD *)v84 + 2) = v85;
          }
          morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v66 + 7), (const morphun::dialog::SemanticFeature *)&v166);
          LOBYTE(v187) = 1;
          *int v66 = 0;
          v66[1] = 0;
          v66[2] = (uint64_t *)v81;
          *uint64_t v82 = (uint64_t *)v66;
          uint64_t v86 = **((void **)v37 + 6);
          v87 = (uint64_t *)v66;
          if (v86)
          {
            *((void *)v37 + 6) = v86;
            v87 = *v82;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)v37 + 7), v87);
          ++*((void *)v37 + 8);
          v185 = 0;
          std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,void *>>>>::reset[abi:ne180100]((uint64_t)&v185);
        }
        uint64_t v27 = v153;
        std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v172[1]);
        if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v188.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v174.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v174.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v173.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v173.__r_.__value_.__l.__data_);
        }
      }
      uint64_t v88 = (uint64_t)(v66 + 7);
      v89 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature const*>((uint64_t)&v182, &v166, (uint64_t)(v66 + 7));
      if (*v89) {
        goto LABEL_181;
      }
      v77 = v89;
      unint64_t v78 = (uint64_t *)operator new(0x40uLL);
      v78[4] = v88;
      int v79 = (std::basic_string<char16_t> *)(v78 + 5);
      if ((v175[31] & 0x80000000) == 0) {
        goto LABEL_176;
      }
LABEL_177:
      std::basic_string<char16_t>::__init_copy_ctor_external(v79, *(const std::basic_string<char16_t>::value_type **)&v175[8], *(std::basic_string<char16_t>::size_type *)&v175[16]);
      goto LABEL_178;
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(v183);
    v102 = *v147;
    v103 = (uint64_t **)(v151 + 8);
    v104 = (uint64_t **)(v151 + 8);
    if (*v147)
    {
      while (1)
      {
        while (1)
        {
          v103 = (uint64_t **)v102;
          v105 = (unsigned __int16 *)(v102 + 4);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)&v158, (unsigned __int16 *)v102 + 16))break; {
          v102 = *v103;
          }
          v104 = v103;
          if (!*v103) {
            goto LABEL_215;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v105, (unsigned __int16 *)&v158)) {
          break;
        }
        v104 = v103 + 1;
        v102 = v103[1];
        if (!v102) {
          goto LABEL_215;
        }
      }
      unint64_t v31 = (char *)v103;
      v109 = (std::__shared_weak_count *)*((void *)&v146 + 1);
    }
    else
    {
LABEL_215:
      unint64_t v31 = (char *)operator new(0x48uLL);
      v166.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v31;
      v166.__r_.__value_.__l.__size_ = v151 + 8;
      LOBYTE(v166.__r_.__value_.__r.__words[2]) = 0;
      v106 = (std::basic_string<char16_t> *)(v31 + 32);
      if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v106, v158.__r_.__value_.__l.__data_, v158.__r_.__value_.__l.__size_);
      }
      else
      {
        *(_OWORD *)&v106->__r_.__value_.__l.__data_ = *(_OWORD *)&v158.__r_.__value_.__l.__data_;
        *((void *)v31 + 6) = *((void *)&v158.__r_.__value_.__l + 2);
      }
      *(_OWORD *)(v31 + 56) = v146;
      LOBYTE(v166.__r_.__value_.__r.__words[2]) = 1;
      *(void *)unint64_t v31 = 0;
      *((void *)v31 + 1) = 0;
      *((void *)v31 + 2) = v103;
      *v104 = (uint64_t *)v31;
      uint64_t v107 = **(void **)v151;
      v108 = (uint64_t *)v31;
      if (v107)
      {
        *(void *)uint64_t v151 = v107;
        v108 = *v104;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v151 + 8), v108);
      ++*(void *)(v151 + 16);
      v166.__r_.__value_.__r.__words[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::shared_ptr<morphun::dialog::PronounConcept::DefaultPronounData>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::shared_ptr<morphun::dialog::PronounConcept::DefaultPronounData>>,void *>>>>::reset[abi:ne180100]((uint64_t *)&v166);
      v109 = 0;
    }
    if (v109) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v109);
    }
  }
  *((void *)v4 + 3) = *((void *)v31 + 7);
  uint64_t v110 = *((void *)v31 + 8);
  *((void *)v4 + 4) = v110;
  if (v110) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v110 + 8), 1uLL, memory_order_relaxed);
  }
  if (SHIBYTE(v158.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v158.__r_.__value_.__l.__data_);
  }
  std::mutex::unlock(v150);
  *((void *)v4 + 5) = 0;
  *((void *)v4 + 6) = 0;
  *((void *)v4 + 9) = 0;
  v111 = (uint64_t **)(v4 + 72);
  *((void *)v4 + 10) = 0;
  *((void *)v4 + 7) = 0;
  *((void *)v4 + 8) = v4 + 72;
  __srcb = (uint64_t *)(v4 + 40);
  std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::reserve((uint64_t *)v4 + 5, 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3));
  uint64_t v112 = *a3;
  uint64_t v154 = a3[1];
  if (*a3 != v154)
  {
    do
    {
      *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
      __p.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__p.__r_.__value_.__l.__size_;
      v113 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v112 + 40))(v112);
      v115 = v113 + 1;
      v114 = (void *)*v113;
      if ((void *)*v113 != v113 + 1)
      {
        do
        {
          v116 = *v111;
          v117 = (uint64_t **)(v4 + 72);
          v118 = (uint64_t **)(v4 + 72);
          if (*v111)
          {
            while (1)
            {
              while (1)
              {
                v117 = (uint64_t **)v116;
                uint64_t v119 = (uint64_t)(v116 + 4);
                if (!morphun::dialog::SemanticFeature::operator<((uint64_t)(v114 + 4), (uint64_t)(v116 + 4))) {
                  break;
                }
                v116 = *v117;
                v118 = v117;
                if (!*v117) {
                  goto LABEL_236;
                }
              }
              if (!morphun::dialog::SemanticFeature::operator<(v119, (uint64_t)(v114 + 4))) {
                break;
              }
              v118 = v117 + 1;
              v116 = v117[1];
              if (!v116) {
                goto LABEL_236;
              }
            }
            std::basic_string<char16_t>::size_type v120 = (std::basic_string<char16_t>::size_type)v117;
          }
          else
          {
LABEL_236:
            v166.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x68uLL);
            v166.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)(v4 + 72);
            LOBYTE(v166.__r_.__value_.__r.__words[2]) = 0;
            morphun::dialog::SemanticFeature::SemanticFeature((morphun::dialog::SemanticFeature *)(v166.__r_.__value_.__r.__words[0] + 32), (const morphun::dialog::SemanticFeature *)(v114 + 4));
            LOBYTE(v166.__r_.__value_.__r.__words[2]) = 1;
            std::basic_string<char16_t>::size_type v120 = v166.__r_.__value_.__r.__words[0];
            *(void *)v166.__r_.__value_.__l.__data_ = 0;
            *(void *)(v120 + 8) = 0;
            *(void *)(v120 + 16) = v117;
            *v118 = (uint64_t *)v120;
            uint64_t v121 = **((void **)v4 + 8);
            v122 = (uint64_t *)v120;
            if (v121)
            {
              *((void *)v4 + 8) = v121;
              v122 = *v118;
            }
            std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)v4 + 9), v122);
            ++*((void *)v4 + 10);
            v166.__r_.__value_.__r.__words[0] = 0;
            std::unique_ptr<std::__tree_node<morphun::dialog::SemanticValue,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<morphun::dialog::SemanticValue,void *>>>>::reset[abi:ne180100]((uint64_t)&v166);
          }
          std::basic_string<char16_t>::size_type v123 = v120 + 32;
          v124 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature const*>((uint64_t)&__p, &v166, v120 + 32);
          if (!*v124)
          {
            v125 = v124;
            v126 = (uint64_t *)operator new(0x40uLL);
            v126[4] = v123;
            v127 = (std::basic_string<char16_t> *)(v126 + 5);
            if (*((char *)v114 + 127) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(v127, (const std::basic_string<char16_t>::value_type *)v114[13], v114[14]);
            }
            else
            {
              long long v128 = *(_OWORD *)(v114 + 13);
              v126[7] = v114[15];
              *(_OWORD *)&v127->__r_.__value_.__l.__data_ = v128;
            }
            std::basic_string<char16_t>::size_type v129 = v166.__r_.__value_.__r.__words[0];
            uint64_t *v126 = 0;
            v126[1] = 0;
            v126[2] = v129;
            *v125 = v126;
            if (*(void *)__p.__r_.__value_.__l.__data_)
            {
              __p.__r_.__value_.__r.__words[0] = *(void *)__p.__r_.__value_.__l.__data_;
              v126 = *v125;
            }
            std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)__p.__r_.__value_.__l.__size_, v126);
            ++__p.__r_.__value_.__r.__words[2];
          }
          v130 = (void *)v114[1];
          if (v130)
          {
            do
            {
              v131 = v130;
              v130 = (void *)*v130;
            }
            while (v130);
          }
          else
          {
            do
            {
              v131 = (void *)v114[2];
              BOOL v44 = *v131 == (void)v114;
              v114 = v131;
            }
            while (!v44);
          }
          v114 = v131;
        }
        while (v131 != v115);
      }
      v132 = (long long *)(*(uint64_t (**)(uint64_t))(*(void *)v112 + 24))(v112);
      unint64_t v134 = *((void *)v4 + 6);
      unint64_t v133 = *((void *)v4 + 7);
      if (v134 >= v133)
      {
        unint64_t v136 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v134 - *__srcb) >> 4);
        unint64_t v137 = v136 + 1;
        if (v136 + 1 > 0x555555555555555) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v138 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v133 - *__srcb) >> 4);
        if (2 * v138 > v137) {
          unint64_t v137 = 2 * v138;
        }
        if (v138 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v139 = 0x555555555555555;
        }
        else {
          unint64_t v139 = v137;
        }
        v168 = v4 + 56;
        if (v139) {
          unint64_t v139 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v139);
        }
        else {
          uint64_t v140 = 0;
        }
        v166.__r_.__value_.__r.__words[0] = v139;
        v166.__r_.__value_.__l.__size_ = v139 + 48 * v136;
        v166.__r_.__value_.__r.__words[2] = v166.__r_.__value_.__l.__size_;
        int64_t v167 = v139 + 48 * v140;
        std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>,0>((std::basic_string<char16_t> *)v166.__r_.__value_.__l.__size_, v132, (std::basic_string<char16_t>::size_type *)&__p);
        v166.__r_.__value_.__r.__words[2] += 48;
        std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::__swap_out_circular_buffer(__srcb, &v166);
        unint64_t v135 = *((void *)v4 + 6);
        std::__split_buffer<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::~__split_buffer((uint64_t)&v166);
      }
      else
      {
        std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>,0>(*((std::basic_string<char16_t> **)v4 + 6), v132, (std::basic_string<char16_t>::size_type *)&__p);
        unint64_t v135 = v134 + 48;
        *((void *)v4 + 6) = v134 + 48;
      }
      *((void *)v4 + 6) = v135;
      std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy((char *)__p.__r_.__value_.__l.__size_);
      v112 += 56;
    }
    while (v112 != v154);
  }
  *a1 = v4 + 24;
  a1[1] = v4;
}

void sub_1D2CE11E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::mutex *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47)
{
  MEMORY[0x1D942B8B0](v48, 0x1020C4062D53EE8);
  std::mutex::unlock(a15);
  std::__shared_weak_count::~__shared_weak_count(v47);
  operator delete(v50);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::reserve(uint64_t *result, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((result[2] - *result) >> 4) < a2)
  {
    if (a2 >= 0x555555555555556) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v2 = result;
    uint64_t v3 = result[1] - *result;
    v5[4] = result + 2;
    v5[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(a2);
    v5[1] = v5[0] + v3;
    v5[2] = v5[0] + v3;
    v5[3] = v5[0] + 48 * v4;
    std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::__swap_out_circular_buffer(v2, v5);
    return (uint64_t *)std::__split_buffer<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::~__split_buffer((uint64_t)v5);
  }
  return result;
}

uint64_t std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::pair[abi:ne180100]<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>&,0>(uint64_t a1, long long *a2, void *a3)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 32);
  *(void *)(a1 + 24) = a1 + 32;
  uint64_t v6 = (uint64_t **)(a1 + 24);
  *(void *)(a1 + 40) = 0;
  uint64_t v7 = a3 + 1;
  uint64_t v8 = (void *)*a3;
  if ((void *)*a3 != a3 + 1)
  {
    do
    {
      uint64_t v9 = *v5;
      int32_t v10 = v5;
      if (*v6 == v5) {
        goto LABEL_8;
      }
      std::basic_string<char16_t>::size_type v11 = (uint64_t *)*v5;
      int v12 = v5;
      if (v9)
      {
        do
        {
          int32_t v10 = v11;
          std::basic_string<char16_t>::size_type v11 = (uint64_t *)v11[1];
        }
        while (v11);
      }
      else
      {
        do
        {
          int32_t v10 = (uint64_t *)v12[2];
          BOOL v13 = *v10 == (void)v12;
          int v12 = v10;
        }
        while (v13);
      }
      uint64_t v14 = v8[4];
      if (morphun::dialog::SemanticFeature::operator<(v10[4], v14))
      {
LABEL_8:
        if (!v9)
        {
          uint64_t v22 = v5;
          std::basic_string<char16_t>::size_type v15 = (uint64_t **)v5;
LABEL_14:
          uint64_t v16 = (uint64_t *)operator new(0x40uLL);
          v16[4] = v8[4];
          int32_t v17 = (std::basic_string<char16_t> *)(v16 + 5);
          if (*((char *)v8 + 63) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external(v17, (const std::basic_string<char16_t>::value_type *)v8[5], v8[6]);
          }
          else
          {
            long long v18 = *(_OWORD *)(v8 + 5);
            v16[7] = v8[7];
            *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
          }
          std::__tree<std::u16string_view>::__insert_node_at(v6, (uint64_t)v22, v15, v16);
          goto LABEL_18;
        }
        uint64_t v22 = v10;
        std::basic_string<char16_t>::size_type v15 = (uint64_t **)(v10 + 1);
      }
      else
      {
        std::basic_string<char16_t>::size_type v15 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature const*>((uint64_t)v6, &v22, v14);
      }
      if (!*v15) {
        goto LABEL_14;
      }
LABEL_18:
      int v19 = (void *)v8[1];
      if (v19)
      {
        do
        {
          int v20 = v19;
          int v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          int v20 = (void *)v8[2];
          BOOL v13 = *v20 == (void)v8;
          uint64_t v8 = v20;
        }
        while (!v13);
      }
      uint64_t v8 = v20;
    }
    while (v20 != v7);
  }
  return a1;
}

void sub_1D2CE1848(_Unwind_Exception *a1)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<long long,std::string>,void *>>>::operator()[abi:ne180100](0, v2);
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*(char **)(v1 + 32));
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::pair[abi:ne180100]<std::basic_string<char16_t> const&,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>,0>(std::basic_string<char16_t> *this, long long *a2, std::basic_string<char16_t>::size_type *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  this[1].__r_.__value_.__r.__words[0] = *a3;
  uint64_t v6 = a3 + 1;
  std::basic_string<char16_t>::size_type v7 = a3[1];
  this[1].__r_.__value_.__l.__size_ = v7;
  p_std::basic_string<char16_t>::size_type size = &this[1].__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v9 = a3[2];
  this[1].__r_.__value_.__r.__words[2] = v9;
  if (v9)
  {
    *(void *)(v7 + 16) = p_size;
    *a3 = (std::basic_string<char16_t>::size_type)v6;
    *uint64_t v6 = 0;
    a3[2] = 0;
  }
  else
  {
    this[1].__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_size;
  }
  return this;
}

void std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::allocator<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::destroy[abi:ne180100](v4);
      }
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::destroy[abi:ne180100](uint64_t a1)
{
  std::__tree<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::__map_value_compare<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>,std::less<morphun::grammar::synthesis::FiGrammarSynthesizer::Count>,true>,std::allocator<std::__value_type<morphun::grammar::synthesis::FiGrammarSynthesizer::Count,std::basic_string<char16_t>>>>::destroy(*(char **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t *std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  if (v2 != *result)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v4 + v5;
      uint64_t v7 = v2 + v5;
      long long v8 = *(_OWORD *)(v2 + v5 - 48);
      *(void *)(v6 - 32) = *(void *)(v2 + v5 - 32);
      *(_OWORD *)(v6 - 48) = v8;
      *(void *)(v7 - 40) = 0;
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 48) = 0;
      *(void *)(v6 - 24) = *(void *)(v2 + v5 - 24);
      std::basic_string<char16_t>::size_type v9 = (uint64_t *)(v2 + v5 - 16);
      uint64_t v10 = *v9;
      *(void *)(v4 + v5 - 16) = *v9;
      uint64_t v11 = v4 + v5 - 16;
      uint64_t v12 = *(void *)(v2 + v5 - 8);
      *(void *)(v6 - 8) = v12;
      if (v12)
      {
        *(void *)(v10 + 16) = v11;
        *(void *)(v7 - 24) = v9;
        uint64_t *v9 = 0;
        *(void *)(v2 + v5 - 8) = 0;
      }
      else
      {
        *(void *)(v6 - 24) = v11;
      }
      v5 -= 48;
    }
    while (v2 + v5 != v3);
    v4 += v5;
  }
  a2[1] = v4;
  uint64_t v13 = *result;
  *BOOL result = v4;
  a2[1] = v13;
  uint64_t v14 = result[1];
  result[1] = a2[2];
  a2[2] = v14;
  uint64_t v15 = result[2];
  result[2] = a2[3];
  a2[3] = v15;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 48;
    std::allocator<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::destroy[abi:ne180100](i - 48);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *std::__tree<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature const*,std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature const*>(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = v4[4];
        if (!morphun::dialog::SemanticFeature::operator<(a3, v8)) {
          break;
        }
        uint64_t v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!morphun::dialog::SemanticFeature::operator<(v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::shared_ptr<morphun::dialog::PronounConcept::DefaultPronounData>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::shared_ptr<morphun::dialog::PronounConcept::DefaultPronounData>>,void *>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((unsigned char *)a1 + 16))
    {
      uint64_t v2 = *(std::__shared_weak_count **)(v1 + 64);
      if (v2) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v2);
      }
      if (*(char *)(v1 + 55) < 0) {
        operator delete(*(void **)(v1 + 32));
      }
    }
    operator delete((void *)v1);
  }
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::dialog::SemanticFeature const>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::dialog::SemanticFeature const>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void std::__shared_ptr_emplace<morphun::dialog::PronounConcept::DefaultPronounData>::__on_zero_shared(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 24);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>>>::destroy(*(void **)(a1 + 56));
  uint64_t v2 = v1;
  std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::dialog::SemanticFeature const>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::dialog::SemanticFeature const>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__shared_ptr_emplace<morphun::dialog::PronounConcept::DefaultPronounData>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F29F3A28;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1D942B8B0);
}

void std::__shared_ptr_emplace<morphun::dialog::PronounConcept::DefaultPronounData>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F29F3A28;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<morphun::dialog::PronounConcept::PronounData>::__on_zero_shared(uint64_t a1)
{
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*(void **)(a1 + 72));
  uint64_t v3 = (void **)(a1 + 40);
  std::vector<std::pair<std::basic_string<char16_t>,std::map<morphun::dialog::SemanticFeature const*,std::basic_string<char16_t>,morphun::dialog::PronounConcept::ptr_less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void std::__shared_ptr_emplace<morphun::dialog::PronounConcept::PronounData>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F29F39F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1D942B8B0);
}

void std::__shared_ptr_emplace<morphun::dialog::PronounConcept::PronounData>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F29F39F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t morphun::dialog::PronounConcept::PronounConcept(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  *(void *)a1 = &unk_1F29F4638;
  uint64_t v8 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase((void *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A05208, a2);
  *uint64_t v8 = &off_1F2A08E18;
  std::allocate_shared[abi:ne180100]<morphun::dialog::PronounConcept::PronounData,std::allocator<morphun::dialog::PronounConcept::PronounData>,morphun::dialog::SemanticFeatureModel const&,std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue> const&,void>(v8 + 5, a2, a3);
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)(a1 + 56), a4);
  *(_DWORD *)(a1 + 80) = -1;
  if (-1431655765
     * ((*(void *)(*(void *)(a1 + 40) + 24) - *(void *)(*(void *)(a1 + 40) + 16)) >> 4) == 1431655765 * ((*(void *)(**(void **)(a1 + 40) + 8) - ***(void ***)(a1 + 40)) >> 4))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Display data can not be empty.");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &__dst);
  }
  return a1;
}

void sub_1D2CE1FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*(void ***)(v15 + 64));
      int v19 = *(std::__shared_weak_count **)(v15 + 48);
      if (v19) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v19);
      }
      morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v15, (void ***)&off_1F2A05208);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t morphun::dialog::PronounConcept::PronounConcept(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  memset(v6, 0, sizeof(v6));
  morphun::dialog::PronounConcept::PronounConcept(a1, a2, a3, v6, a4);
  uint64_t v7 = (void **)v6;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v7);
  return a1;
}

void sub_1D2CE2070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::PronounConcept::PronounConcept(uint64_t a1, uint64_t a2, uint64_t a3)
{
  memset(v5, 0, sizeof(v5));
  morphun::dialog::PronounConcept::PronounConcept(a1, a2, v5, a3);
  uint64_t v6 = (void **)v5;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100](&v6);
  return a1;
}

void sub_1D2CE20D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::PronounConcept::PronounConcept(uint64_t a1, uint64_t *a2, uint64_t a3, UChar *a4, unint64_t a5)
{
  long long v40 = 0uLL;
  uint64_t v41 = 0;
  *(_OWORD *)&pErrorCode.__r_.__value_.__r.__words[1] = 0uLL;
  pErrorCode.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&pErrorCode.__r_.__value_.__l.__size_;
  morphun::dialog::PronounConcept::PronounConcept(a1, a2, a3, (uint64_t *)&v40, (uint64_t)&pErrorCode);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)pErrorCode.__r_.__value_.__l.__size_);
  pErrorCode.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v40;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&pErrorCode);
  int v8 = 0;
  uint64_t v39 = a1;
  std::basic_string<char16_t>::size_type v9 = (uint64_t **)(a1 + 56);
  while (1)
  {
    uint64_t v10 = *(uint64_t ***)(v39 + 40);
    if (v8 >= (int)(-1431655765 * ((unint64_t)((char *)v10[3] - (char *)v10[2]) >> 4)
                   - 1431655765 * ((unint64_t)((*v10)[1] - **v10) >> 4)))
      break;
    PronounEntry = morphun::dialog::PronounConcept::PronounData::getPronounEntry(v10, v8);
    uint64_t v12 = PronounEntry;
    uint64_t v13 = *((unsigned __int8 *)PronounEntry + 23);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = (const UChar *)PronounEntry;
    }
    else {
      uint64_t v14 = (const UChar *)*PronounEntry;
    }
    if ((v13 & 0x80u) != 0) {
      uint64_t v13 = PronounEntry[1];
    }
    BOOL v15 = v14[v13 - 1] == 32;
    LODWORD(pErrorCode.__r_.__value_.__l.__data_) = 0;
    if (u_strCaseCompare(a4, a5, v14, v13 - v15, 0, (UErrorCode *)&pErrorCode)) {
      BOOL v16 = 0;
    }
    else {
      BOOL v16 = SLODWORD(pErrorCode.__r_.__value_.__l.__data_) <= 0;
    }
    if (v16)
    {
      int v17 = a4;
      unint64_t v18 = a5;
      int v19 = (uint64_t *)v12[3];
      int v20 = v12 + 4;
      if (v19 == v12 + 4)
      {
LABEL_41:
        a5 = v18;
        a4 = v17;
        if ((*(_DWORD *)(v39 + 80) & 0x80000000) != 0) {
          *(_DWORD *)(v39 + 80) = v8;
        }
        goto LABEL_43;
      }
      while (2)
      {
        std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>((morphun::dialog::SemanticFeature *)&v40, (const morphun::dialog::SemanticFeature *)v19[4], (long long *)(v19 + 5));
        std::basic_string<char16_t> v21 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>(v9, (uint64_t)&v40, (uint64_t)&v40);
        char v23 = v22;
        if (v43 < 0) {
          operator delete(__p);
        }
        if (v23)
        {
LABEL_17:
          uint64_t v24 = (uint64_t *)v19[1];
          if (v24)
          {
            do
            {
              int v25 = v24;
              uint64_t v24 = (uint64_t *)*v24;
            }
            while (v24);
          }
          else
          {
            do
            {
              int v25 = (uint64_t *)v19[2];
              BOOL v26 = *v25 == (void)v19;
              int v19 = v25;
            }
            while (!v26);
          }
          int v19 = v25;
          if (v25 == v20) {
            goto LABEL_41;
          }
          continue;
        }
        break;
      }
      uint64_t v27 = v21[127];
      int v28 = (char)v27;
      if ((v27 & 0x80u) != 0) {
        uint64_t v27 = *((void *)v21 + 14);
      }
      uint64_t v29 = *((unsigned __int8 *)v19 + 63);
      int v30 = (char)v29;
      if ((v29 & 0x80u) != 0) {
        uint64_t v29 = v19[6];
      }
      if (v27 == v29)
      {
        if (!v27) {
          goto LABEL_17;
        }
        unint64_t v31 = (unsigned __int16 *)(v21 + 104);
        if (v30 >= 0) {
          BOOL v32 = (unsigned __int16 *)(v19 + 5);
        }
        else {
          BOOL v32 = (unsigned __int16 *)v19[5];
        }
        if (v28 < 0) {
          unint64_t v31 = *(unsigned __int16 **)v31;
        }
        while (*v32 == *v31)
        {
          ++v31;
          ++v32;
          if (!--v27) {
            goto LABEL_17;
          }
        }
      }
      if (v28 < 0)
      {
        **((_WORD **)v21 + 13) = 0;
        *((void *)v21 + 14) = 0;
      }
      else
      {
        *((_WORD *)v21 + 52) = 0;
        v21[127] = 0;
      }
      goto LABEL_17;
    }
LABEL_43:
    ++v8;
  }
  uint64_t result = v39;
  if ((*(_DWORD *)(v39 + 80) & 0x80000000) != 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(&pErrorCode, a4, a5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v40, "U", &pErrorCode, v38);
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v40);
  }
  uint64_t v34 = *(uint64_t **)(v39 + 56);
  if (v34 != (uint64_t *)(v39 + 64))
  {
    do
    {
      if (*((char *)v34 + 127) < 0)
      {
        if (v34[14])
        {
LABEL_48:
          uint64_t v35 = (uint64_t *)v34[1];
          if (v35)
          {
            do
            {
              unint64_t v36 = v35;
              uint64_t v35 = (uint64_t *)*v35;
            }
            while (v35);
          }
          else
          {
            do
            {
              unint64_t v36 = (uint64_t *)v34[2];
              BOOL v26 = *v36 == (void)v34;
              uint64_t v34 = v36;
            }
            while (!v26);
          }
          goto LABEL_56;
        }
      }
      else if (*((unsigned char *)v34 + 127))
      {
        goto LABEL_48;
      }
      unint64_t v36 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__remove_node_pointer(v9, v34);
      std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>((void **)v34 + 4);
      operator delete(v34);
LABEL_56:
      uint64_t v34 = v36;
      uint64_t result = v39;
    }
    while (v36 != (uint64_t *)(v39 + 64));
  }
  return result;
}

void sub_1D2CE2494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void ***a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v19 - 81) < 0)
  {
    operator delete(*(void **)(v19 - 104));
    if ((v17 & 1) == 0)
    {
LABEL_8:
      morphun::dialog::PronounConcept::~PronounConcept(a11, a10);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v18);
  goto LABEL_8;
}

uint64_t morphun::dialog::PronounConcept::PronounConcept(uint64_t a1, uint64_t a2, UChar *a3, unint64_t a4)
{
  long long v38 = 0uLL;
  uint64_t v39 = 0;
  *(_OWORD *)&pErrorCode.__r_.__value_.__r.__words[1] = 0uLL;
  pErrorCode.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&pErrorCode.__r_.__value_.__l.__size_;
  morphun::dialog::PronounConcept::PronounConcept(a1, a2, (uint64_t *)&v38, (uint64_t)&pErrorCode);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)pErrorCode.__r_.__value_.__l.__size_);
  pErrorCode.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v38;
  std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&pErrorCode);
  int v7 = 0;
  uint64_t v37 = a1;
  int v8 = (uint64_t **)(a1 + 56);
  while (1)
  {
    std::basic_string<char16_t>::size_type v9 = *(uint64_t ***)(v37 + 40);
    if (v7 >= (int)(-1431655765 * ((unint64_t)((char *)v9[3] - (char *)v9[2]) >> 4)
                   - 1431655765 * ((unint64_t)((*v9)[1] - **v9) >> 4)))
      break;
    PronounEntry = morphun::dialog::PronounConcept::PronounData::getPronounEntry(v9, v7);
    uint64_t v11 = PronounEntry;
    uint64_t v12 = *((unsigned __int8 *)PronounEntry + 23);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = (const UChar *)PronounEntry;
    }
    else {
      uint64_t v13 = (const UChar *)*PronounEntry;
    }
    if ((v12 & 0x80u) != 0) {
      uint64_t v12 = PronounEntry[1];
    }
    BOOL v14 = v13[v12 - 1] == 32;
    LODWORD(pErrorCode.__r_.__value_.__l.__data_) = 0;
    if (u_strCaseCompare(a3, a4, v13, v12 - v14, 0, (UErrorCode *)&pErrorCode)) {
      BOOL v15 = 0;
    }
    else {
      BOOL v15 = SLODWORD(pErrorCode.__r_.__value_.__l.__data_) <= 0;
    }
    if (v15)
    {
      unint64_t v16 = a4;
      int v17 = (uint64_t *)v11[3];
      unint64_t v18 = v11 + 4;
      if (v17 == v11 + 4)
      {
LABEL_41:
        a4 = v16;
        if ((*(_DWORD *)(v37 + 80) & 0x80000000) != 0) {
          *(_DWORD *)(v37 + 80) = v7;
        }
        goto LABEL_43;
      }
      while (2)
      {
        std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>((morphun::dialog::SemanticFeature *)&v38, (const morphun::dialog::SemanticFeature *)v17[4], (long long *)(v17 + 5));
        uint64_t v19 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>(v8, (uint64_t)&v38, (uint64_t)&v38);
        char v21 = v20;
        if (v41 < 0) {
          operator delete(__p);
        }
        if (v21)
        {
LABEL_17:
          char v22 = (uint64_t *)v17[1];
          if (v22)
          {
            do
            {
              char v23 = v22;
              char v22 = (uint64_t *)*v22;
            }
            while (v22);
          }
          else
          {
            do
            {
              char v23 = (uint64_t *)v17[2];
              BOOL v24 = *v23 == (void)v17;
              int v17 = v23;
            }
            while (!v24);
          }
          int v17 = v23;
          if (v23 == v18) {
            goto LABEL_41;
          }
          continue;
        }
        break;
      }
      uint64_t v25 = v19[127];
      int v26 = (char)v25;
      if ((v25 & 0x80u) != 0) {
        uint64_t v25 = *((void *)v19 + 14);
      }
      uint64_t v27 = *((unsigned __int8 *)v17 + 63);
      int v28 = (char)v27;
      if ((v27 & 0x80u) != 0) {
        uint64_t v27 = v17[6];
      }
      if (v25 == v27)
      {
        if (!v25) {
          goto LABEL_17;
        }
        uint64_t v29 = (unsigned __int16 *)(v19 + 104);
        if (v28 >= 0) {
          int v30 = (unsigned __int16 *)(v17 + 5);
        }
        else {
          int v30 = (unsigned __int16 *)v17[5];
        }
        if (v26 < 0) {
          uint64_t v29 = *(unsigned __int16 **)v29;
        }
        while (*v30 == *v29)
        {
          ++v29;
          ++v30;
          if (!--v25) {
            goto LABEL_17;
          }
        }
      }
      if (v26 < 0)
      {
        **((_WORD **)v19 + 13) = 0;
        *((void *)v19 + 14) = 0;
      }
      else
      {
        *((_WORD *)v19 + 52) = 0;
        v19[127] = 0;
      }
      goto LABEL_17;
    }
LABEL_43:
    ++v7;
  }
  if ((*(_DWORD *)(v37 + 80) & 0x80000000) != 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(&pErrorCode, a3, a4);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v38, "U", &pErrorCode, v36);
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &v38);
  }
  unint64_t v31 = *(uint64_t **)(v37 + 56);
  if (v31 != (uint64_t *)(v37 + 64))
  {
    do
    {
      if (*((char *)v31 + 127) < 0)
      {
        if (v31[14])
        {
LABEL_48:
          BOOL v32 = (uint64_t *)v31[1];
          if (v32)
          {
            do
            {
              unint64_t v33 = v32;
              BOOL v32 = (uint64_t *)*v32;
            }
            while (v32);
          }
          else
          {
            do
            {
              unint64_t v33 = (uint64_t *)v31[2];
              BOOL v24 = *v33 == (void)v31;
              unint64_t v31 = v33;
            }
            while (!v24);
          }
          goto LABEL_56;
        }
      }
      else if (*((unsigned char *)v31 + 127))
      {
        goto LABEL_48;
      }
      unint64_t v33 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__remove_node_pointer(v8, v31);
      std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>((void **)v31 + 4);
      operator delete(v31);
LABEL_56:
      unint64_t v31 = v33;
    }
    while (v33 != (uint64_t *)(v37 + 64));
  }
  return v37;
}

void sub_1D2CE28D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void ***a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a30 < 0)
  {
    operator delete(a25);
    if ((v31 & 1) == 0)
    {
LABEL_8:
      _Unwind_Resume(a1);
    }
  }
  else if (!v31)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v30);
  goto LABEL_8;
}

morphun::dialog::PronounConcept *morphun::dialog::PronounConcept::PronounConcept(morphun::dialog::PronounConcept *this, const morphun::dialog::PronounConcept *a2, uint64_t a3)
{
  uint64_t v6 = morphun::dialog::SemanticFeatureConceptBase::SemanticFeatureConceptBase(this, (const morphun::dialog::PronounConcept *)((char *)a2 + 8), a3);
  uint64_t v7 = *(void *)a2;
  *(void *)uint64_t v6 = *(void *)a2;
  *(void *)((char *)this + *(void *)(v7 - 72)) = *((void *)a2 + 5);
  *(void *)((char *)this + *(void *)(*(void *)this - 56)) = *((void *)a2 + 6);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 7);
  uint64_t v8 = *(void *)(a3 + 48);
  *((void *)this + 5) = *(void *)(a3 + 40);
  *((void *)this + 6) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)this + 7, a3 + 56);
  *((_DWORD *)this + 20) = *(_DWORD *)(a3 + 80);
  return this;
}

void sub_1D2CE2B04(_Unwind_Exception *a1)
{
  uint64_t v4 = *(std::__shared_weak_count **)(v1 + 48);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  morphun::dialog::SemanticFeatureConceptBase::~SemanticFeatureConceptBase((void ***)v1, v2);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dialog::PronounConcept::~PronounConcept(morphun::dialog::PronounConcept *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::PronounConcept::~PronounConcept(void *a1)
{
}

{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t *morphun::dialog::PronounConcept::getCurrentValue(morphun::dialog::PronounConcept *this, const morphun::dialog::SemanticFeatureConceptBase *a2, int a3)
{
  uint64_t result = morphun::dialog::PronounConcept::getFirstPossibleValue(this, a2, a3);
  if (result)
  {
    if (*((char *)result + 23) < 0) {
      uint64_t v4 = result[1];
    }
    else {
      uint64_t v4 = *((unsigned __int8 *)result + 23);
    }
    if (!v4) {
      return 0;
    }
  }
  return result;
}

uint64_t *virtual thunk to'morphun::dialog::PronounConcept::isExists(morphun::dialog::PronounConcept *this)
{
  uint64_t result = morphun::dialog::PronounConcept::getFirstPossibleValue((morphun::dialog::PronounConcept *)((char *)this + *(void *)(*(void *)this - 64)), 0, 0);
  if (result)
  {
    if (*((char *)result + 23) < 0) {
      uint64_t v2 = result[1];
    }
    else {
      uint64_t v2 = *((unsigned __int8 *)result + 23);
    }
    return (uint64_t *)(v2 != 0);
  }
  return result;
}

uint64_t *virtual thunk to'morphun::dialog::PronounConcept::toSpeakableString(morphun::dialog::PronounConcept *this)
{
  return morphun::dialog::PronounConcept::toSpeakableString((morphun::dialog::PronounConcept *)((char *)this
                                                                                              + *(void *)(*(void *)this - 48)));
}

void *virtual thunk to'morphun::dialog::PronounConcept::toString@<X0>(morphun::dialog::PronounConcept *this@<X0>, void *a2@<X8>)
{
  return morphun::dialog::PronounConcept::toString((morphun::dialog::PronounConcept *)((char *)this + *(void *)(*(void *)this - 24)), a2);
}

uint64_t morphun::dialog::PronounConcept::operator==(uint64_t a1, uint64_t a2)
{
  if (a2 == a1) {
    return 1;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 40))(a2);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 231);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = *(unsigned __int8 *)(v5 + 231);
  }
  else {
    uint64_t v7 = *(void *)(v5 + 216);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 231);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(v4 + 216);
  }
  if (v7 != v8) {
    return 0;
  }
  uint64_t v10 = (const void **)(v5 + 208);
  uint64_t v13 = *(unsigned __int8 **)(v4 + 208);
  uint64_t v12 = (unsigned __int8 *)(v4 + 208);
  uint64_t v11 = v13;
  if (v9 >= 0) {
    BOOL v14 = v12;
  }
  else {
    BOOL v14 = v11;
  }
  if ((v6 & 0x80) != 0)
  {
    if (memcmp(*v10, v14, *(void *)(v5 + 216))) {
      return 0;
    }
  }
  else if (*(unsigned char *)(v5 + 231))
  {
    while (*(unsigned __int8 *)v10 == *v14)
    {
      uint64_t v10 = (const void **)((char *)v10 + 1);
      ++v14;
      if (!--v6) {
        goto LABEL_18;
      }
    }
    return 0;
  }
LABEL_18:
  int v17 = *(unsigned __int16 **)(*(void *)(a1 + 40) + 16);
  unint64_t v16 = *(unsigned __int16 **)(*(void *)(a1 + 40) + 24);
  unint64_t v18 = *(unsigned __int16 **)(*(void *)(a2 + 40) + 16);
  if ((char *)v16 - (char *)v17 != *(void *)(*(void *)(a2 + 40) + 24) - (void)v18) {
    return 0;
  }
  while (v17 != v16)
  {
    uint64_t v19 = *((unsigned __int8 *)v17 + 23);
    int v20 = (char)v19;
    if ((v19 & 0x80u) != 0) {
      uint64_t v19 = *((void *)v17 + 1);
    }
    uint64_t v21 = *((unsigned __int8 *)v18 + 23);
    int v22 = (char)v21;
    if ((v21 & 0x80u) != 0) {
      uint64_t v21 = *((void *)v18 + 1);
    }
    if (v19 != v21) {
      return 0;
    }
    if (v19)
    {
      if (v22 >= 0) {
        char v23 = v18;
      }
      else {
        char v23 = *(unsigned __int16 **)v18;
      }
      if (v20 >= 0) {
        BOOL v24 = v17;
      }
      else {
        BOOL v24 = *(unsigned __int16 **)v17;
      }
      while (*v23 == *v24)
      {
        ++v24;
        ++v23;
        if (!--v19) {
          goto LABEL_34;
        }
      }
      return 0;
    }
LABEL_34:
    if (*((void *)v17 + 5) != *((void *)v18 + 5)) {
      return 0;
    }
    uint64_t v25 = (unsigned __int16 *)*((void *)v17 + 3);
    if (v25 != v17 + 16)
    {
      int v26 = (void *)*((void *)v18 + 3);
      while (*((void *)v25 + 4) == v26[4])
      {
        int v27 = *((char *)v25 + 63);
        uint64_t v28 = *((void *)v25 + 6);
        if (v27 >= 0) {
          uint64_t v28 = *((unsigned __int8 *)v25 + 63);
        }
        uint64_t v29 = *((unsigned __int8 *)v26 + 63);
        int v30 = (char)v29;
        if ((v29 & 0x80u) != 0) {
          uint64_t v29 = v26[6];
        }
        if (v28 != v29) {
          break;
        }
        if (v28)
        {
          int v31 = v30 >= 0 ? (unsigned __int16 *)(v26 + 5) : (unsigned __int16 *)v26[5];
          BOOL v32 = v27 >= 0 ? v25 + 20 : (unsigned __int16 *)*((void *)v25 + 5);
          uint64_t v33 = v28 - 1;
          do
          {
            int v35 = *v32++;
            int v34 = v35;
            int v37 = *v31++;
            int v36 = v37;
            BOOL v39 = v33-- != 0;
          }
          while (v36 == v34 && v39);
          if (v36 != v34) {
            break;
          }
        }
        long long v40 = (unsigned __int16 *)*((void *)v25 + 1);
        if (v40)
        {
          do
          {
            char v41 = v40;
            long long v40 = *(unsigned __int16 **)v40;
          }
          while (v40);
        }
        else
        {
          do
          {
            char v41 = (unsigned __int16 *)*((void *)v25 + 2);
            BOOL v42 = *(void *)v41 == (void)v25;
            uint64_t v25 = v41;
          }
          while (!v42);
        }
        char v43 = (void *)v26[1];
        if (v43)
        {
          do
          {
            BOOL v44 = v43;
            char v43 = (void *)*v43;
          }
          while (v43);
        }
        else
        {
          do
          {
            BOOL v44 = (void *)v26[2];
            BOOL v42 = *v44 == (void)v26;
            int v26 = v44;
          }
          while (!v42);
        }
        int v26 = v44;
        uint64_t v25 = v41;
        if (v41 == v17 + 16) {
          goto LABEL_68;
        }
      }
      return 0;
    }
LABEL_68:
    v17 += 24;
    v18 += 24;
  }
  if (*(void *)(a1 + 72) != *(void *)(a2 + 72)) {
    return 0;
  }
  std::basic_string<char16_t>::size_type v45 = *(void **)(a1 + 56);
  if (v45 == (void *)(a1 + 64))
  {
LABEL_84:
    if (*(_DWORD *)(a1 + 80) != *(_DWORD *)(a2 + 80)) {
      return 0;
    }
    uint64_t v51 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120))(a1);
    if (v51 != (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2)) {
      return 0;
    }
    int v52 = *(void **)(a2 + 16);
    uint64_t v53 = *(void *)(a2 + 32);
    return std::operator==[abi:ne180100]<morphun::dialog::SemanticFeature,std::basic_string<char16_t>,std::less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>>(a1 + 16, v52, v53);
  }
  else
  {
    uint64_t v46 = *(void **)(a2 + 56);
    while (1)
    {
      uint64_t result = std::__equal_to::operator()[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>((uint64_t)(v45 + 4), (uint64_t)(v46 + 4));
      if (!result) {
        break;
      }
      uint64_t v47 = (void *)v45[1];
      uint64_t v48 = v45;
      if (v47)
      {
        do
        {
          std::basic_string<char16_t>::size_type v45 = v47;
          uint64_t v47 = (void *)*v47;
        }
        while (v47);
      }
      else
      {
        do
        {
          std::basic_string<char16_t>::size_type v45 = (void *)v48[2];
          BOOL v42 = *v45 == (void)v48;
          uint64_t v48 = v45;
        }
        while (!v42);
      }
      uint64_t v49 = (void *)v46[1];
      if (v49)
      {
        do
        {
          BOOL v50 = v49;
          uint64_t v49 = (void *)*v49;
        }
        while (v49);
      }
      else
      {
        do
        {
          BOOL v50 = (void *)v46[2];
          BOOL v42 = *v50 == (void)v46;
          uint64_t v46 = v50;
        }
        while (!v42);
      }
      uint64_t v46 = v50;
      if (v45 == (void *)(a1 + 64)) {
        goto LABEL_84;
      }
    }
  }
  return result;
}

BOOL std::operator==[abi:ne180100]<morphun::dialog::SemanticFeature,std::basic_string<char16_t>,std::less<morphun::dialog::SemanticFeature>,std::allocator<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>>(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(void *)(a1 + 16) != a3) {
    return 0;
  }
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1 == a1 + 8) {
    return 1;
  }
  do
  {
    BOOL result = std::__equal_to::operator()[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>((uint64_t)(v4 + 4), (uint64_t)(a2 + 4));
    if (!result) {
      break;
    }
    uint64_t v7 = (void *)v4[1];
    uint64_t v8 = v4;
    if (v7)
    {
      do
      {
        uint64_t v4 = v7;
        uint64_t v7 = (void *)*v7;
      }
      while (v7);
    }
    else
    {
      do
      {
        uint64_t v4 = (void *)v8[2];
        BOOL v9 = *v4 == (void)v8;
        uint64_t v8 = v4;
      }
      while (!v9);
    }
    uint64_t v10 = (void *)a2[1];
    if (v10)
    {
      do
      {
        uint64_t v11 = v10;
        uint64_t v10 = (void *)*v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        uint64_t v11 = (void *)a2[2];
        BOOL v9 = *v11 == (void)a2;
        a2 = v11;
      }
      while (!v9);
    }
    a2 = v11;
  }
  while (v4 != v3);
  return result;
}

uint64_t morphun::dialog::PronounConcept::operator!=(uint64_t a1, uint64_t a2)
{
  return morphun::dialog::PronounConcept::operator==(a1, a2) ^ 1;
}

void virtual thunk to'morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectSignificantTokens(void *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
}

void morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectSignificantTokens(uint64_t *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  unint64_t v10 = *((int *)a4[1] - 1);
  uint64_t v11 = a1[6];
  npc<std::vector<std::basic_string<char16_t>>>((uint64_t)a3);
  uint64_t v12 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v12 + 23) < 0)
  {
    uint64_t v12 = *(void *)v12;
    uint64_t v13 = *((void *)*a3 + 3 * (int)v10 + 1);
  }
  else
  {
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  __p.__r_.__value_.__r.__words[0] = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)&__p, (const UChar *)v12, v13))
  {
    BOOL v14 = *a4;
    if (a4[1] - *a4 == 8)
    {
      BOOL v15 = *a3;
      uint64_t v16 = (uint64_t)*a3 + 24 * *(int *)v14;
      if (*(char *)(v16 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v16, *(void *)(v16 + 8));
        BOOL v14 = *a4;
        BOOL v15 = *a3;
      }
      else
      {
        long long v17 = *(_OWORD *)v16;
        __p.__r_.__value_.__r.__words[2] = *(void *)(v16 + 16);
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v17;
      }
      int v30 = (char *)v15 + 24 * *((int *)v14 + 1);
      if (v30[23] < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v47, *(const std::basic_string<char16_t>::value_type **)v30, *((void *)v30 + 1));
      }
      else
      {
        long long v31 = *(_OWORD *)v30;
        v47.__r_.__value_.__r.__words[2] = *((void *)v30 + 2);
        *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v31;
      }
      uint64_t v46 = 0;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[6], (uint64_t)&v46, (const UChar *)p_p, size);
      uint64_t v45 = 0;
      if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v34 = &v47;
      }
      else {
        int v34 = (std::basic_string<char16_t> *)v47.__r_.__value_.__r.__words[0];
      }
      if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v35 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v35 = v47.__r_.__value_.__l.__size_;
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[6], (uint64_t)&v45, (const UChar *)v34, v35);
      if ((a1[9] & v46) != 0 && (uint64_t v36 = a1[10], (v36 & v46) == 0) && (v45 & v36) != 0)
      {
        morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectWord((uint64_t)&v43, a1, a2, &__p, (uint64_t)&v47, 0);
        unint64_t v39 = *(int *)*a4;
        if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v39) {
          std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
        }
        uint64_t v40 = (uint64_t)*a3 + 24 * (int)v39;
        if (*(char *)(v40 + 23) < 0) {
          operator delete(*(void **)v40);
        }
        long long v41 = v43;
        *(void *)(v40 + 16) = v44;
        *(_OWORD *)uint64_t v40 = v41;
        morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectWord((uint64_t)&v43, a1, a2, &v47, (uint64_t)&v47, 1);
        unint64_t v42 = *((int *)*a4 + 1);
        if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v42) {
          std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
        }
        uint64_t v37 = (uint64_t)*a3 + 24 * (int)v42;
      }
      else
      {
        morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectWord((uint64_t)&v43, a1, a2, (std::basic_string<char16_t> *)*a3 + (int)v10, (uint64_t)*a3 + 24 * (int)v10, 1);
        if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
          std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
        }
        uint64_t v37 = (uint64_t)*a3 + 24 * (int)v10;
      }
      if (*(char *)(v37 + 23) < 0) {
        operator delete(*(void **)v37);
      }
      long long v38 = v43;
      *(void *)(v37 + 16) = v44;
      *(_OWORD *)uint64_t v37 = v38;
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v47.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectWord((uint64_t)&__p, a1, a2, (std::basic_string<char16_t> *)*a3 + (int)v10, (uint64_t)*a3 + 24 * (int)v10, 1);
      if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      uint64_t v28 = (uint64_t)*a3 + 24 * (int)v10;
      if (*(char *)(v28 + 23) < 0) {
        operator delete(*(void **)v28);
      }
      long long v29 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *(void *)(v28 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v28 = v29;
    }
    a5->__r_.__value_.__r.__words[0] = 0;
    a5->__r_.__value_.__l.__size_ = 0;
    a5->__r_.__value_.__r.__words[2] = 0;
    std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
    return;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a2, a1[4]);
  uint64_t v19 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v18);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  int v21 = (char)v20;
  if ((v20 & 0x80u) != 0) {
    uint64_t v20 = *(void *)(v19 + 8);
  }
  std::basic_string<char16_t>::size_type v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  int v23 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v22 = __p.__r_.__value_.__l.__size_;
  }
  if (v20 != v22) {
    goto LABEL_30;
  }
  if (v20)
  {
    BOOL v24 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v24 = &__p;
    }
    if (v21 >= 0) {
      uint64_t v25 = (unsigned __int16 *)v19;
    }
    else {
      uint64_t v25 = *(unsigned __int16 **)v19;
    }
    while ((unsigned __int16)v24->__r_.__value_.__s.__data_[0] == *v25)
    {
      ++v25;
      BOOL v24 = (std::basic_string<char16_t> *)((char *)v24 + 2);
      if (!--v20) {
        goto LABEL_21;
      }
    }
LABEL_30:
    a5->__r_.__value_.__r.__words[0] = 0;
    a5->__r_.__value_.__l.__size_ = 0;
    a5->__r_.__value_.__r.__words[2] = 0;
    if ((v23 & 0x80000000) == 0) {
      return;
    }
LABEL_31:
    operator delete(__p.__r_.__value_.__l.__data_);
    return;
  }
LABEL_21:
  morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectGenitive(&v47, (uint64_t)*a3 + 24 * (int)v10);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  uint64_t v26 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v26 + 23) < 0) {
    operator delete(*(void **)v26);
  }
  long long v27 = *(_OWORD *)&v47.__r_.__value_.__l.__data_;
  *(void *)(v26 + 16) = *((void *)&v47.__r_.__value_.__l + 2);
  *(_OWORD *)uint64_t v26 = v27;
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  if (v23 < 0) {
    goto LABEL_31;
  }
}

void sub_1D2CE3734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2CE37BC()
{
}

void sub_1D2CE381C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectGenitive(std::basic_string<char16_t> *this, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    *this = *(std::basic_string<char16_t> *)a2;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  BOOL v4 = (size & 0x80u) != 0;
  if ((size & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type size = this->__r_.__value_.__l.__size_;
  }
  if (v4) {
    uint64_t v5 = (std::basic_string<char16_t> *)this->__r_.__value_.__r.__words[0];
  }
  else {
    uint64_t v5 = this;
  }
  unsigned int v6 = (unsigned __int16)v5->__r_.__value_.__s.__data_[size - 1] - 115;
  BOOL v7 = v6 > 7;
  int v8 = (1 << v6) & 0xA1;
  if (v7 || v8 == 0) {
    unint64_t v10 = word_1D2ED0594;
  }
  else {
    unint64_t v10 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECAFC2;
  }
  return std::basic_string<char16_t>::append(this, v10, 1uLL);
}

void sub_1D2CE38DC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectWord(uint64_t a1, uint64_t *a2, uint64_t a3, std::basic_string<char16_t> *a4, uint64_t a5, int a6)
{
  *(void *)&long long v121 = *MEMORY[0x1E4F143B8];
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v104, a3, a2[2]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v103, a3, a2[1]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v102, a3, a2[4]);
  uint64_t v101 = 0;
  int v12 = *(char *)(a5 + 23);
  if (v12 >= 0) {
    uint64_t v13 = (const UChar *)a5;
  }
  else {
    uint64_t v13 = *(const UChar **)a5;
  }
  if (v12 >= 0) {
    uint64_t v14 = *(unsigned __int8 *)(a5 + 23);
  }
  else {
    uint64_t v14 = *(void *)(a5 + 8);
  }
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[6], (uint64_t)&v101, v13, v14);
  uint64_t v16 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE(CombinedBinaryType);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue((std::basic_string<char16_t> *)&v118, a3, a2[5]);
  int v17 = *(char *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if (v17 >= 0) {
    uint64_t v18 = *(unsigned __int8 *)(v16 + 23);
  }
  uint64_t v19 = v119[7];
  if (v119[7] < 0) {
    uint64_t v19 = *((void *)&v118 + 1);
  }
  if (v18 == v19)
  {
    if (!v18)
    {
LABEL_20:
      BOOL v22 = 0;
      if ((v119[7] & 0x80000000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
    uint64_t v20 = (long long *)v118;
    if (v119[7] >= 0) {
      uint64_t v20 = &v118;
    }
    if (v17 >= 0) {
      int v21 = (unsigned __int16 *)v16;
    }
    else {
      int v21 = *(unsigned __int16 **)v16;
    }
    while (*(unsigned __int16 *)v20 == *v21)
    {
      ++v21;
      uint64_t v20 = (long long *)((char *)v20 + 2);
      if (!--v18) {
        goto LABEL_20;
      }
    }
  }
  if ((a2[9] & v101) != 0)
  {
    BOOL v22 = (a2[10] & v101) != 0;
    if ((v119[7] & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  BOOL v22 = 1;
  if ((v119[7] & 0x80000000) != 0) {
LABEL_24:
  }
    operator delete((void *)v118);
LABEL_25:
  int v23 = SHIBYTE(a4->__r_.__value_.__r.__words[2]);
  if (v23 >= 0) {
    BOOL v24 = (const UChar *)a4;
  }
  else {
    BOOL v24 = (const UChar *)a4->__r_.__value_.__r.__words[0];
  }
  if (v23 >= 0) {
    uint64_t size = HIBYTE(a4->__r_.__value_.__r.__words[2]);
  }
  else {
    uint64_t size = a4->__r_.__value_.__l.__size_;
  }
  morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[6], v24, size, (unsigned __int16 *)"i", 0xAuLL, &v99);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a2[3]);
  std::basic_string<char16_t>::size_type v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  int v28 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v27 = __p.__r_.__value_.__l.__size_;
  }
  if (!v27)
  {
    morphun::dialog::DictionaryLookupFunction::determine((uint64_t)(a2 + 11), a5, &v118);
    if (v28 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v118;
    __p.__r_.__value_.__r.__words[2] = *(void *)v119;
  }
  *(_DWORD *)((char *)v115 + 3) = 0;
  v115[0] = 0;
  std::basic_string<char16_t>::size_type v29 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
  if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v29 = v104.__r_.__value_.__l.__size_;
  }
  if (v29)
  {
    int v30 = &v104;
    if ((*((unsigned char *)&v104.__r_.__value_.__s + 23) & 0x80) == 0)
    {
LABEL_41:
      std::basic_string<char16_t> v114 = *v30;
      goto LABEL_44;
    }
  }
  else
  {
    int v30 = (std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v26);
    if ((*((unsigned char *)&v30->__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_41;
    }
  }
  std::basic_string<char16_t>::__init_copy_ctor_external(&v114, v30->__r_.__value_.__l.__data_, v30->__r_.__value_.__l.__size_);
LABEL_44:
  std::basic_string<char16_t>::size_type v31 = HIBYTE(v103.__r_.__value_.__r.__words[2]);
  if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v31 = v103.__r_.__value_.__l.__size_;
  }
  if (v31)
  {
    BOOL v32 = &v103;
    if ((*((unsigned char *)&v103.__r_.__value_.__s + 23) & 0x80) == 0)
    {
LABEL_48:
      std::basic_string<char16_t> v113 = *v32;
      goto LABEL_51;
    }
  }
  else
  {
    BOOL v32 = (std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v30);
    if ((*((unsigned char *)&v32->__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_48;
    }
  }
  std::basic_string<char16_t>::__init_copy_ctor_external(&v113, v32->__r_.__value_.__l.__data_, v32->__r_.__value_.__l.__size_);
LABEL_51:
  if ((v22 & a6 & 1) == 0)
  {
    if (SHIBYTE(a4->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v36 = a4->__r_.__value_.__l.__size_;
      if (!v36)
      {
        std::basic_string<char16_t>::size_type v81 = 0;
        int v80 = (const std::basic_string<char16_t>::value_type *)a4->__r_.__value_.__r.__words[0];
        goto LABEL_189;
      }
    }
    else
    {
      unint64_t v36 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
      if (!*((unsigned char *)&a4->__r_.__value_.__s + 23)) {
        goto LABEL_145;
      }
    }
    if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v40 = a4;
    }
    else {
      uint64_t v40 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
    }
    int v41 = (unsigned __int16)v40->__r_.__value_.__s.__data_[v36 - 1];
    char v42 = 1;
    if (((v41 - 97) > 0x18 || ((1 << (v41 - 97)) & 0x1104111) == 0)
      && ((v41 - 229) > 0x13 || ((1 << (v41 + 27)) & 0x80003) == 0))
    {
      char v42 = 0;
    }
    uint64_t v43 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v32);
    uint64_t v45 = *(unsigned __int8 *)(v43 + 23);
    int v46 = (char)v45;
    if ((v45 & 0x80u) != 0) {
      uint64_t v45 = *(void *)(v43 + 8);
    }
    int v47 = SHIBYTE(v114.__r_.__value_.__r.__words[2]);
    if ((v114.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v48 = HIBYTE(v114.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v48 = v114.__r_.__value_.__l.__size_;
    }
    if (v45 == v48)
    {
      if (!v45) {
        goto LABEL_98;
      }
      uint64_t v49 = (std::basic_string<char16_t> *)v114.__r_.__value_.__r.__words[0];
      if ((v114.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v49 = &v114;
      }
      if (v46 >= 0) {
        BOOL v50 = (unsigned __int16 *)v43;
      }
      else {
        BOOL v50 = *(unsigned __int16 **)v43;
      }
      while ((unsigned __int16)v49->__r_.__value_.__s.__data_[0] == *v50)
      {
        ++v50;
        uint64_t v49 = (std::basic_string<char16_t> *)((char *)v49 + 2);
        if (!--v45) {
          goto LABEL_98;
        }
      }
    }
    uint64_t v43 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v43);
    uint64_t v51 = *(unsigned __int8 *)(v43 + 23);
    int v52 = (char)v51;
    if ((v51 & 0x80u) != 0) {
      uint64_t v51 = *(void *)(v43 + 8);
    }
    std::basic_string<char16_t>::size_type v53 = HIBYTE(v113.__r_.__value_.__r.__words[2]);
    if ((v113.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v53 = v113.__r_.__value_.__l.__size_;
    }
    if (v51 != v53) {
      goto LABEL_119;
    }
    if (v51)
    {
      int v54 = &v113;
      if ((v113.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v54 = (std::basic_string<char16_t> *)v113.__r_.__value_.__r.__words[0];
      }
      if (v52 >= 0) {
        int v55 = (unsigned __int16 *)v43;
      }
      else {
        int v55 = *(unsigned __int16 **)v43;
      }
      while ((unsigned __int16)v54->__r_.__value_.__s.__data_[0] == *v55)
      {
        ++v55;
        int v54 = (std::basic_string<char16_t> *)((char *)v54 + 2);
        if (!--v51) {
          goto LABEL_98;
        }
      }
      goto LABEL_119;
    }
LABEL_98:
    if (v36 >= 4)
    {
      uint64_t v56 = (a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (uint64_t)a4
          : a4->__r_.__value_.__r.__words[0];
      if (*(_WORD *)(v56 + 2 * (v36 - 2)) == 101)
      {
        unsigned int v57 = v41 - 108;
        if ((v41 - 108) <= 6 && ((1 << v57) & 0x45) != 0)
        {
          int v58 = *(unsigned __int16 *)(v56 + 2 * (v36 - 3));
          if (v58 == *(unsigned __int16 *)(v56 + 2 * v36 - 8))
          {
            BOOL v59 = (v58 - 97) > 0x18 || ((1 << (v58 - 97)) & 0x1104111) == 0;
            if (v59 && ((v58 - 229) > 0x13 || ((1 << (v58 + 27)) & 0x80003) == 0))
            {
              std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v110, a4, 0, v36 - 3, v44);
              std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)v110, v41);
              long long v118 = *(_OWORD *)v110;
              *(void *)uint64_t v119 = *(void *)&v110[16];
              memset(v110, 0, 24);
              std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)&v118, 101);
LABEL_116:
              *(_OWORD *)a1 = v118;
              *(void *)(a1 + 16) = *(void *)v119;
              *(void *)uint64_t v119 = 0;
              long long v118 = 0uLL;
              if ((v110[23] & 0x80000000) != 0) {
                operator delete(*(void **)v110);
              }
              goto LABEL_167;
            }
          }
          if (v57 <= 6 && ((1 << v57) & 0x45) != 0)
          {
            std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v110, a4, 0, v36 - 2, v44);
            std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)v110, v41);
            long long v118 = *(_OWORD *)v110;
            *(void *)uint64_t v119 = *(void *)&v110[16];
            memset(v110, 0, 24);
            std::basic_string<char16_t>::push_back((std::basic_string<char16_t> *)&v118, 101);
            goto LABEL_116;
          }
        }
      }
    }
    if ((v42 & 1) == 0)
    {
      if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v75 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v75 = a4->__r_.__value_.__l.__size_;
      }
      BOOL v32 = (std::basic_string<char16_t> *)std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v75 + 1);
      if (*(char *)(a1 + 23) >= 0) {
        unsigned int v76 = (char *)a1;
      }
      else {
        unsigned int v76 = *(char **)a1;
      }
      uint64_t v77 = 2 * v75;
      if (v75)
      {
        if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unint64_t v78 = a4;
        }
        else {
          unint64_t v78 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
        }
        BOOL v32 = (std::basic_string<char16_t> *)memmove(v76, v78, 2 * v75);
      }
      unint64_t v39 = 0;
      LOBYTE(v37) = 0;
      int v79 = 101;
      goto LABEL_185;
    }
LABEL_119:
    BOOL v32 = (std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v43);
    std::basic_string<char16_t>::size_type v60 = HIBYTE(v32->__r_.__value_.__r.__words[2]);
    int v61 = (char)v60;
    if ((v60 & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type v60 = v32->__r_.__value_.__l.__size_;
    }
    if (v60 != v48) {
      goto LABEL_144;
    }
    if (v48)
    {
      int v62 = (std::basic_string<char16_t> *)v114.__r_.__value_.__r.__words[0];
      if (v47 >= 0) {
        int v62 = &v114;
      }
      if (v61 >= 0) {
        uint64_t v63 = v32;
      }
      else {
        uint64_t v63 = (std::basic_string<char16_t> *)v32->__r_.__value_.__r.__words[0];
      }
      while (v62->__r_.__value_.__s.__data_[0] == v63->__r_.__value_.__s.__data_[0])
      {
        uint64_t v63 = (std::basic_string<char16_t> *)((char *)v63 + 2);
        int v62 = (std::basic_string<char16_t> *)((char *)v62 + 2);
        if (!--v48) {
          goto LABEL_130;
        }
      }
      goto LABEL_144;
    }
LABEL_130:
    BOOL v32 = (std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v32);
    std::basic_string<char16_t>::size_type v65 = HIBYTE(v32->__r_.__value_.__r.__words[2]);
    int v66 = (char)v65;
    if ((v65 & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type v65 = v32->__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::size_type v67 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v67 = __p.__r_.__value_.__l.__size_;
    }
    if (v65 != v67) {
      goto LABEL_144;
    }
    if (v65)
    {
      p_p = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if (v66 >= 0) {
        uint64_t v69 = v32;
      }
      else {
        uint64_t v69 = (std::basic_string<char16_t> *)v32->__r_.__value_.__r.__words[0];
      }
      while (p_p->__r_.__value_.__s.__data_[0] == v69->__r_.__value_.__s.__data_[0])
      {
        uint64_t v69 = (std::basic_string<char16_t> *)((char *)v69 + 2);
        p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
        if (!--v65) {
          goto LABEL_143;
        }
      }
      goto LABEL_144;
    }
LABEL_143:
    if (v42)
    {
LABEL_144:
      if ((SHIBYTE(a4->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_145:
        unint64_t v39 = 0;
        LOBYTE(v37) = 0;
LABEL_169:
        *(_OWORD *)a1 = *(_OWORD *)&a4->__r_.__value_.__l.__data_;
        std::basic_string<char16_t>::size_type v74 = a4->__r_.__value_.__r.__words[2];
LABEL_170:
        *(void *)(a1 + 16) = v74;
        goto LABEL_191;
      }
      int v80 = (const std::basic_string<char16_t>::value_type *)a4->__r_.__value_.__r.__words[0];
      goto LABEL_187;
    }
    char v90 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
    if (v36 >= 3)
    {
      int v80 = (const std::basic_string<char16_t>::value_type *)a4->__r_.__value_.__r.__words[0];
      if (v90 >= 0) {
        int v91 = a4;
      }
      else {
        int v91 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
      }
      int v92 = (unsigned __int16)v91->__r_.__value_.__s.__data_[v36 - 2];
      if (v41 == 107 && v92 == 115 || v41 == 103 && v92 == 105 || v41 == 116 && v92 == 101)
      {
LABEL_236:
        if ((*((unsigned char *)&a4->__r_.__value_.__s + 23) & 0x80) == 0) {
          goto LABEL_145;
        }
LABEL_187:
        std::basic_string<char16_t>::size_type v81 = a4->__r_.__value_.__l.__size_;
LABEL_189:
        unint64_t v39 = 0;
        LOBYTE(v37) = 0;
        std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, v80, v81);
        goto LABEL_191;
      }
      if (((v92 - 97) > 0x18 || ((1 << (v92 - 97)) & 0x1104111) == 0)
        && ((v92 - 229) > 0x13 || ((1 << (v92 + 27)) & 0x80003) == 0))
      {
        if ((v41 | 0x10) == 0x74) {
          goto LABEL_236;
        }
        if (v41 == v92)
        {
          unint64_t v97 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)&v118, a4, 0, v36 - 1, v64);
          std::basic_string<char16_t>::push_back(v97, 116);
          unint64_t v39 = 0;
          LOBYTE(v37) = 0;
          *(_OWORD *)a1 = v118;
          std::basic_string<char16_t>::size_type v74 = *(void *)v119;
          goto LABEL_170;
        }
      }
    }
    if (v90 >= 0) {
      std::basic_string<char16_t>::size_type v95 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v95 = a4->__r_.__value_.__l.__size_;
    }
    BOOL v32 = (std::basic_string<char16_t> *)std::basic_string<char16_t>::basic_string[abi:ne180100](a1, v95 + 1);
    if (*(char *)(a1 + 23) >= 0) {
      unsigned int v76 = (char *)a1;
    }
    else {
      unsigned int v76 = *(char **)a1;
    }
    uint64_t v77 = 2 * v95;
    if (v95)
    {
      if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v96 = a4;
      }
      else {
        unint64_t v96 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
      }
      BOOL v32 = (std::basic_string<char16_t> *)memmove(v76, v96, 2 * v95);
    }
    unint64_t v39 = 0;
    LOBYTE(v37) = 0;
    int v79 = 116;
LABEL_185:
    *(_DWORD *)&v76[v77] = v79;
    goto LABEL_191;
  }
  if (v99 == v100)
  {
    unsigned int v37 = 0;
    uint64_t v38 = 0;
    unint64_t v39 = 0;
LABEL_164:
    uint64_t v73 = v37;
    goto LABEL_165;
  }
  uint64_t v33 = a2[7];
  if (*(char *)(v100 - 1) < 0)
  {
    uint64_t v34 = *(void *)(v100 - 24);
    uint64_t v35 = *(void *)(v100 - 16);
  }
  else
  {
    uint64_t v34 = v100 - 24;
    LODWORD(v35) = *(unsigned __int8 *)(v100 - 1);
  }
  __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v33 + 248), v34, v35);
  morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&v118, v33 + 8, KeyId);
  *(_OWORD *)uint64_t v110 = v118;
  *(_OWORD *)&v110[16] = *(_OWORD *)v119;
  long long v111 = *(_OWORD *)&v119[16];
  char v112 = 1;
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v118, v114.__r_.__value_.__l.__data_, v114.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v118 = *(_OWORD *)&v114.__r_.__value_.__l.__data_;
    *(void *)uint64_t v119 = *((void *)&v114.__r_.__value_.__l + 2);
  }
  if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v119[8], v113.__r_.__value_.__l.__data_, v113.__r_.__value_.__l.__size_);
  }
  else {
    *(std::basic_string<char16_t> *)&v119[8] = v113;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v120, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else {
    std::basic_string<char16_t> v120 = __p;
  }
  v105 = 0;
  v106 = 0;
  uint64_t v107 = 0;
  v116 = &v105;
  char v117 = 0;
  v105 = (std::basic_string<char16_t> *)operator new(0x48uLL);
  v106 = v105;
  uint64_t v107 = v105 + 3;
  v106 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v107, &v118, &v121, v105);
  morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)&v108, (uint64_t)v110, (uint64_t *)&v105, 0);
  v116 = &v105;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v116);
  for (uint64_t i = 0; i != -9; i -= 3)
  {
    if (SHIBYTE(v120.__r_.__value_.__r.__words[i + 2]) < 0) {
      operator delete(*(void **)((char *)&v120.__r_.__value_.__l.__data_ + i * 8));
    }
  }
  int v72 = v108;
  if (v108 != v109)
  {
    morphun::dictionary::Inflector_Inflection::inflect((std::basic_string<char16_t> *)&v118, v109 - 6, a4);
    uint64_t v38 = *((void *)&v118 + 1);
    unint64_t v39 = (void *)v118;
    v115[0] = *(_DWORD *)v119;
    *(_DWORD *)((char *)v115 + 3) = *(_DWORD *)&v119[3];
    unsigned int v37 = v119[7];
    if (!v72) {
      goto LABEL_163;
    }
    goto LABEL_162;
  }
  unint64_t v39 = 0;
  uint64_t v38 = 0;
  unsigned int v37 = 0;
  if (v108) {
LABEL_162:
  }
    operator delete(v72);
LABEL_163:
  uint64_t v73 = v38;
  if ((v37 & 0x80) == 0) {
    goto LABEL_164;
  }
LABEL_165:
  if (v73)
  {
    *(void *)a1 = v39;
    *(void *)(a1 + 8) = v38;
    *(_DWORD *)(a1 + 16) = v115[0];
    *(_DWORD *)(a1 + 19) = *(_DWORD *)((char *)v115 + 3);
    *(unsigned char *)(a1 + 23) = v37;
    v115[0] = 0;
    *(_DWORD *)((char *)v115 + 3) = 0;
LABEL_167:
    unint64_t v39 = 0;
    LOBYTE(v37) = 0;
    goto LABEL_191;
  }
  if ((SHIBYTE(a4->__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_169;
  }
  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, a4->__r_.__value_.__l.__data_, a4->__r_.__value_.__l.__size_);
LABEL_191:
  if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v113.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v114.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v114.__r_.__value_.__l.__data_);
    if ((v37 & 0x80) == 0) {
      goto LABEL_195;
    }
  }
  else if ((v37 & 0x80) == 0)
  {
    goto LABEL_195;
  }
  operator delete(v39);
LABEL_195:
  uint64_t v82 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)v32);
  uint64_t v83 = *(unsigned __int8 *)(v82 + 23);
  int v84 = (char)v83;
  if ((v83 & 0x80u) != 0) {
    uint64_t v83 = *(void *)(v82 + 8);
  }
  std::basic_string<char16_t>::size_type v85 = HIBYTE(v102.__r_.__value_.__r.__words[2]);
  int v86 = SHIBYTE(v102.__r_.__value_.__r.__words[2]);
  if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v85 = v102.__r_.__value_.__l.__size_;
  }
  if (v83 == v85)
  {
    if (v83)
    {
      v87 = (std::basic_string<char16_t> *)v102.__r_.__value_.__r.__words[0];
      if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v87 = &v102;
      }
      if (v84 >= 0) {
        uint64_t v88 = (unsigned __int16 *)v82;
      }
      else {
        uint64_t v88 = *(unsigned __int16 **)v82;
      }
      while ((unsigned __int16)v87->__r_.__value_.__s.__data_[0] == *v88)
      {
        ++v88;
        v87 = (std::basic_string<char16_t> *)((char *)v87 + 2);
        if (!--v83) {
          goto LABEL_208;
        }
      }
    }
    else
    {
LABEL_208:
      if (a6)
      {
        unint64_t v89 = *(unsigned __int8 *)(a1 + 23);
        if ((v89 & 0x80u) != 0) {
          unint64_t v89 = *(void *)(a1 + 8);
        }
        if (v89 >= 2)
        {
          morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectGenitive((std::basic_string<char16_t> *)&v118, a1);
          if (*(char *)(a1 + 23) < 0) {
            operator delete(*(void **)a1);
          }
          *(_OWORD *)a1 = v118;
          *(void *)(a1 + 16) = *(void *)v119;
        }
      }
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(void *)&long long v118 = &v99;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v118);
  if (v86 < 0) {
    operator delete(v102.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v103.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v104.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CE4544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (*(char *)(v61 - 153) < 0) {
    operator delete(*(void **)(v61 - 176));
  }
  if (a61 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v61 - 201) < 0) {
    operator delete(*(void **)(v61 - 224));
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  std::basic_string<char16_t> __p = &a17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a38 < 0) {
    operator delete(a33);
  }
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::~NbGrammarSynthesizer_NbDisplayFunction(morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction *this)
{
  morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::~NbGrammarSynthesizer_NbDisplayFunction((morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction *)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::~NbGrammarSynthesizer_NbDisplayFunction((morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction *)((char *)this + *(void *)(*(void *)this - 32)));
}

void morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::~NbGrammarSynthesizer_NbDisplayFunction(morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction *this)
{
  *(void *)this = &unk_1F2A0C878;
  *((void *)this + 37) = &unk_1F2A0C8D0;
  *((void *)this + 11) = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 33);
  if (v2)
  {
    *((void *)this + 34) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 31);
  *((void *)this + 31) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 12) = &unk_1F2A0FEF8;
  uint64_t v4 = *((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
}

{
  uint64_t vars8;

  morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::~NbGrammarSynthesizer_NbDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  memset(&v17, 0, sizeof(v17));
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5 == *(void *)(a2 + 16))
  {
    std::basic_string<char16_t>::size_type size = 0;
    unsigned int v7 = 0;
  }
  else
  {
    unsigned int v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
    std::basic_string<char16_t>::operator=(&v17, v6);
    unsigned int v7 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type size = v17.__r_.__value_.__l.__size_;
  }
  if ((v7 & 0x80u) == 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = size;
  }
  if (v9)
  {
    if (*(void *)(a3 + 16))
    {
      uint64_t v10 = a1[6];
      if ((v7 & 0x80u) == 0) {
        uint64_t v11 = &v17;
      }
      else {
        uint64_t v11 = (std::basic_string<char16_t> *)v17.__r_.__value_.__r.__words[0];
      }
      v16.__r_.__value_.__r.__words[0] = 0;
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v10, (uint64_t)&v16, (const UChar *)v11, v9))
      {
        morphun::grammar::synthesis::NbGrammarSynthesizer_NbDisplayFunction::inflectWord((uint64_t)&v16, a1, a3, &v17, (uint64_t)&v17, 1);
        if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v17.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> v17 = v16;
      }
      else
      {
        uint64_t v12 = a1[8];
        if (!v12
          || (uint64_t v13 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v12 + 24))(v12, &v17)) == 0)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(&v16, a3, v13, (uint64_t)a1 + *(void *)(*a1 - 64));
        if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v17.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> v17 = v16;
        (*(void (**)(uint64_t))(*(void *)v13 + 16))(v13);
      }
    }
    operator new();
  }
  if ((v7 & 0x80) != 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1D2CE4AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  __cxa_free_exception(v18);
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_ResidingLookupFunction::~FiGrammarSynthesizer_ResidingLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_ResidingLookupFunction *this)
{
}

uint64_t morphun::dialog::DefaultArticleLookupFunction::getDerivedSemanticName(morphun::dialog::DefaultArticleLookupFunction *this)
{
  return 0;
}

void morphun::dialog::DefaultArticleLookupFunction::getPossibleArticles(morphun::dialog::DefaultArticleLookupFunction *this@<X0>, const morphun::dialog::SemanticFeatureModel *a2@<X1>, std::basic_string<char16_t>::size_type *a3@<X8>)
{
  uint64_t v5 = (*(uint64_t (**)(morphun::dialog::DefaultArticleLookupFunction *))(*(void *)this + 64))(this);
  if (v5)
  {
    unsigned int v6 = (unsigned __int16 *)v5;
    int v66 = a3;
    morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures((const morphun::dialog::SemanticFeatureModel *)((char *)a2 + 104), &v69);
    morphun::lang::features::LanguageGrammarFeatures::getFeatures((morphun::lang::features::LanguageGrammarFeatures *)&v69, (uint64_t)&v67);
    unsigned int v7 = v67;
    if (v67 == v68)
    {
LABEL_35:
      std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v68[0]);
      *int v66 = 0;
      v66[1] = 0;
      v66[2] = 0;
    }
    else
    {
      while (1)
      {
        if (*((char *)v7 + 63) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v78, (const std::basic_string<char16_t>::value_type *)v7[5], (std::basic_string<char16_t>::size_type)v7[6]);
        }
        else {
          std::basic_string<char16_t> v78 = *(std::basic_string<char16_t> *)(v7 + 5);
        }
        if (*v6)
        {
          uint64_t v8 = 0;
          do
            uint64_t v9 = v8 + 1;
          while (v6[++v8]);
        }
        else
        {
          uint64_t v9 = 0;
        }
        if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
          break;
        }
        if (v9 != HIBYTE(v78.__r_.__value_.__r.__words[2])) {
          goto LABEL_29;
        }
        if (!v9) {
          goto LABEL_38;
        }
        uint64_t v11 = &v78;
LABEL_18:
        uint64_t v12 = v9 - 1;
        uint64_t v13 = v6;
        do
        {
          int v15 = (unsigned __int16)v11->__r_.__value_.__s.__data_[0];
          uint64_t v11 = (std::basic_string<char16_t> *)((char *)v11 + 2);
          int v14 = v15;
          int v17 = *v13++;
          int v16 = v17;
          BOOL v18 = v17 != v14 || v12-- == 0;
        }
        while (!v18);
        if ((*((unsigned char *)&v78.__r_.__value_.__s + 23) & 0x80) != 0) {
          operator delete(v78.__r_.__value_.__l.__data_);
        }
        if (v16 == v14) {
          goto LABEL_38;
        }
LABEL_29:
        uint64_t v19 = v7[1];
        if (v19)
        {
          do
          {
            uint64_t v20 = (void **)v19;
            uint64_t v19 = (void *)*v19;
          }
          while (v19);
        }
        else
        {
          do
          {
            uint64_t v20 = (void **)v7[2];
            BOOL v18 = *v20 == v7;
            unsigned int v7 = v20;
          }
          while (!v18);
        }
        unsigned int v7 = v20;
        if (v20 == v68) {
          goto LABEL_35;
        }
      }
      if (v9 != v78.__r_.__value_.__l.__size_)
      {
        operator delete(v78.__r_.__value_.__l.__data_);
        goto LABEL_29;
      }
      if (v9 == -1) {
        std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
      }
      uint64_t v11 = (std::basic_string<char16_t> *)v78.__r_.__value_.__r.__words[0];
      if (v9) {
        goto LABEL_18;
      }
      operator delete(v78.__r_.__value_.__l.__data_);
LABEL_38:
      *int v66 = 0;
      v66[1] = 0;
      v66[2] = 0;
      uint64_t v75 = 0;
      uint64_t v76 = 0;
      uint64_t v77 = 0;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__init_with_size[abi:ne180100]<morphun::lang::features::LanguageGrammarFeatures_Feature*,morphun::lang::features::LanguageGrammarFeatures_Feature*>((uint64_t)&v75, (uint64_t)v7[8], (uint64_t)v7[9], 0x6DB6DB6DB6DB6DB7 * (v7[9] - v7[8]));
      uint64_t v21 = v75;
      uint64_t v22 = v76;
      if (v75 != v76)
      {
        uint64_t v65 = v76;
        int v23 = (char *)a2 + 8;
        BOOL v24 = (char *)a2 + 16;
        do
        {
          (*(void (**)(std::basic_string<char16_t> *__return_ptr, uint64_t))(*(void *)v21 + 24))(&v78, v21);
          std::basic_string<char16_t>::size_type size = HIBYTE(v78.__r_.__value_.__r.__words[2]);
          if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type size = v78.__r_.__value_.__l.__size_;
          }
          if (size)
          {
            (*(void (**)(int64x2_t *__return_ptr, uint64_t))(*(void *)v21 + 32))(&v73, v21);
            BOOL v26 = v74 == 0;
            std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy((void *)v73.i64[1]);
            if ((*((unsigned char *)&v78.__r_.__value_.__s + 23) & 0x80) == 0) {
              goto LABEL_44;
            }
          }
          else
          {
            BOOL v26 = 1;
            if ((*((unsigned char *)&v78.__r_.__value_.__s + 23) & 0x80) == 0)
            {
LABEL_44:
              if (!v26) {
                goto LABEL_48;
              }
              goto LABEL_99;
            }
          }
          operator delete(v78.__r_.__value_.__l.__data_);
          if (!v26)
          {
LABEL_48:
            int64x2_t v73 = 0uLL;
            unint64_t v74 = 0;
            (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v21 + 32))(__p, v21);
            std::basic_string<char16_t>::size_type v27 = (void **)__p[0];
            if (__p[0] != &__p[1])
            {
              do
              {
                uint64_t v28 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)v23, (unsigned __int16 *)v27 + 16);
                if (v24 == (char *)v28) {
                  uint64_t v29 = 0;
                }
                else {
                  uint64_t v29 = *(void *)(v28 + 56);
                }
                npc<morphun::dialog::SemanticFeature const>(v29);
                int v30 = (long long *)(v27 + 7);
                uint64_t v31 = v73.i64[1];
                if (v73.i64[1] >= v74)
                {
                  uint64_t v34 = (v73.i64[1] - v73.i64[0]) >> 5;
                  if ((unint64_t)(v34 + 1) >> 59) {
                    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                  }
                  unint64_t v35 = (uint64_t)(v74 - v73.i64[0]) >> 4;
                  if (v35 <= v34 + 1) {
                    unint64_t v35 = v34 + 1;
                  }
                  if (v74 - v73.i64[0] >= 0x7FFFFFFFFFFFFFE0) {
                    unint64_t v36 = 0x7FFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v36 = v35;
                  }
                  int v80 = &v74;
                  if (v36) {
                    unint64_t v36 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>(v36);
                  }
                  else {
                    uint64_t v37 = 0;
                  }
                  unint64_t v39 = (uint64_t *)(v36 + 32 * v34);
                  v78.__r_.__value_.__r.__words[0] = v36;
                  v78.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v39;
                  v78.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v39;
                  unint64_t v79 = v36 + 32 * v37;
                  *unint64_t v39 = v29;
                  uint64_t v40 = (std::basic_string<char16_t> *)(v39 + 1);
                  if (*((char *)v27 + 79) < 0)
                  {
                    std::basic_string<char16_t>::__init_copy_ctor_external(v40, (const std::basic_string<char16_t>::value_type *)v27[7], (std::basic_string<char16_t>::size_type)v27[8]);
                    unint64_t v39 = (uint64_t *)v78.__r_.__value_.__r.__words[2];
                  }
                  else
                  {
                    long long v41 = *v30;
                    v39[3] = (uint64_t)v27[9];
                    *(_OWORD *)&v40->__r_.__value_.__l.__data_ = v41;
                  }
                  uint64_t v38 = v39 + 4;
                  v78.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)(v39 + 4);
                  uint64_t v42 = v73.i64[1];
                  uint64_t v43 = v73.i64[0];
                  std::basic_string<char16_t>::size_type v44 = v78.__r_.__value_.__l.__size_;
                  if (v73.i64[1] == v73.i64[0])
                  {
                    int64x2_t v47 = vdupq_n_s64(v73.u64[1]);
                  }
                  else
                  {
                    do
                    {
                      uint64_t v45 = *(void *)(v42 - 32);
                      v42 -= 32;
                      *(void *)(v44 - 32) = v45;
                      v44 -= 32;
                      long long v46 = *(_OWORD *)(v42 + 8);
                      *(void *)(v44 + 24) = *(void *)(v42 + 24);
                      *(_OWORD *)(v44 + 8) = v46;
                      *(void *)(v42 + 16) = 0;
                      *(void *)(v42 + 24) = 0;
                      *(void *)(v42 + 8) = 0;
                    }
                    while (v42 != v43);
                    int64x2_t v47 = v73;
                    uint64_t v38 = (void *)v78.__r_.__value_.__r.__words[2];
                  }
                  v73.i64[0] = v44;
                  v73.i64[1] = (uint64_t)v38;
                  *(int64x2_t *)&v78.__r_.__value_.__r.__words[1] = v47;
                  unint64_t v48 = v74;
                  unint64_t v74 = v79;
                  unint64_t v79 = v48;
                  v78.__r_.__value_.__r.__words[0] = v47.i64[0];
                  std::__split_buffer<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::~__split_buffer((uint64_t)&v78);
                }
                else
                {
                  *(void *)v73.i64[1] = v29;
                  BOOL v32 = (std::basic_string<char16_t> *)(v31 + 8);
                  if (*((char *)v27 + 79) < 0)
                  {
                    std::basic_string<char16_t>::__init_copy_ctor_external(v32, (const std::basic_string<char16_t>::value_type *)v27[7], (std::basic_string<char16_t>::size_type)v27[8]);
                  }
                  else
                  {
                    long long v33 = *v30;
                    *(void *)(v31 + 24) = v27[9];
                    *(_OWORD *)&v32->__r_.__value_.__l.__data_ = v33;
                  }
                  uint64_t v38 = (void *)(v31 + 32);
                }
                v73.i64[1] = (uint64_t)v38;
                uint64_t v49 = (void **)v27[1];
                if (v49)
                {
                  do
                  {
                    BOOL v50 = v49;
                    uint64_t v49 = (void **)*v49;
                  }
                  while (v49);
                }
                else
                {
                  do
                  {
                    BOOL v50 = (void **)v27[2];
                    BOOL v18 = *v50 == v27;
                    std::basic_string<char16_t>::size_type v27 = v50;
                  }
                  while (!v18);
                }
                std::basic_string<char16_t>::size_type v27 = v50;
              }
              while (v50 != &__p[1]);
            }
            std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy((void *)__p[1]);
            (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v21 + 24))(__p, v21);
            uint64_t v22 = v65;
            std::basic_string<char16_t>::size_type v52 = v66[1];
            std::basic_string<char16_t>::size_type v51 = v66[2];
            if (v52 >= v51)
            {
              unint64_t v54 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v52 - *v66) >> 4);
              unint64_t v55 = v54 + 1;
              if (v54 + 1 > 0x555555555555555) {
                std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
              }
              unint64_t v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v51 - *v66) >> 4);
              if (2 * v56 > v55) {
                unint64_t v55 = 2 * v56;
              }
              if (v56 >= 0x2AAAAAAAAAAAAAALL) {
                unint64_t v57 = 0x555555555555555;
              }
              else {
                unint64_t v57 = v55;
              }
              int v80 = v66 + 2;
              if (v57) {
                unint64_t v57 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v57);
              }
              else {
                uint64_t v58 = 0;
              }
              v78.__r_.__value_.__r.__words[0] = v57;
              v78.__r_.__value_.__l.__size_ = v57 + 48 * v54;
              v78.__r_.__value_.__r.__words[2] = v78.__r_.__value_.__l.__size_;
              unint64_t v79 = v57 + 48 * v58;
              std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>::pair[abi:ne180100]<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>&,0>(v78.__r_.__value_.__l.__size_, (long long *)__p, v73.i64);
              std::basic_string<char16_t>::size_type v59 = v78.__r_.__value_.__l.__size_;
              std::basic_string<char16_t>::size_type v53 = v78.__r_.__value_.__r.__words[2] + 48;
              v78.__r_.__value_.__r.__words[2] += 48;
              std::basic_string<char16_t>::size_type v61 = *v66;
              unint64_t v60 = v66[1];
              if (v60 == *v66)
              {
                int64x2_t v63 = vdupq_n_s64(v60);
              }
              else
              {
                do
                {
                  long long v62 = *(_OWORD *)(v60 - 48);
                  *(void *)(v59 - 32) = *(void *)(v60 - 32);
                  *(_OWORD *)(v59 - 48) = v62;
                  *(void *)(v60 - 40) = 0;
                  *(void *)(v60 - 32) = 0;
                  *(void *)(v60 - 48) = 0;
                  *(void *)(v59 - 24) = 0;
                  *(void *)(v59 - 16) = 0;
                  *(void *)(v59 - 8) = 0;
                  *(_OWORD *)(v59 - 24) = *(_OWORD *)(v60 - 24);
                  *(void *)(v59 - 8) = *(void *)(v60 - 8);
                  v59 -= 48;
                  *(void *)(v60 - 24) = 0;
                  *(void *)(v60 - 16) = 0;
                  *(void *)(v60 - 8) = 0;
                  v60 -= 48;
                }
                while (v60 != v61);
                int64x2_t v63 = *(int64x2_t *)v66;
                std::basic_string<char16_t>::size_type v53 = v78.__r_.__value_.__r.__words[2];
              }
              *int v66 = v59;
              v66[1] = v53;
              *(int64x2_t *)&v78.__r_.__value_.__r.__words[1] = v63;
              unint64_t v64 = v66[2];
              v66[2] = v79;
              unint64_t v79 = v64;
              v78.__r_.__value_.__r.__words[0] = v63.i64[0];
              std::__split_buffer<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::~__split_buffer((uint64_t)&v78);
            }
            else
            {
              std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>::pair[abi:ne180100]<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>&,0>(v66[1], (long long *)__p, v73.i64);
              std::basic_string<char16_t>::size_type v53 = v52 + 48;
              v66[1] = v53;
            }
            v66[1] = v53;
            if (v72 < 0) {
              operator delete(__p[0]);
            }
            v78.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v73;
            std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v78);
          }
LABEL_99:
          v21 += 56;
        }
        while (v21 != v22);
      }
      v78.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v75;
      std::vector<morphun::lang::features::LanguageGrammarFeatures_Feature>::__destroy_vector::operator()[abi:ne180100]((void ***)&v78);
      std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v68[0]);
    }
    uint64_t v69 = &off_1F2A088F0;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
}

void sub_1D2CE52D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  *(void *)(v39 - 208) = a11;
  std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v39 - 208));
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(a13);
  _Unwind_Resume(a1);
}

void sub_1D2CE543C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>::pair[abi:ne180100]<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>&,0>(uint64_t a1, long long *a2, uint64_t *a3)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v5 = a1 + 24;
  *(void *)(v5 + 16) = 0;
  std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*,std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>*>(v5, *a3, a3[1], (a3[1] - *a3) >> 5);
  return a1;
}

void sub_1D2CE54A4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__split_buffer<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 48;
    std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>::destroy[abi:ne180100](i - 48);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__split_buffer<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = v2 - 32;
      *(void *)(a1 + 16) = v2 - 32;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v4 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void morphun::dialog::DefaultArticleLookupFunction::createPostposition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    uint64_t v7 = v6;
    if (*(char *)(v6 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v13, *(const std::basic_string<char16_t>::value_type **)v6, *(void *)(v6 + 8));
    }
    else
    {
      long long v8 = *(_OWORD *)v6;
      v13.__r_.__value_.__r.__words[2] = *(void *)(v6 + 16);
      *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v8;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    npc<morphun::dialog::SemanticFeature const>(v9);
    uint64_t v10 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v9);
    if (v10) {
      std::basic_string<char16_t>::operator=(&v13, v10);
    }
    if (*(unsigned char *)(a1 + 9))
    {
      uint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      if ((v11 & 0x80u) != 0) {
        uint64_t v11 = *(void *)(v7 + 8);
      }
      if (v11)
      {
        uint64_t v12 = *(unsigned __int8 *)(a3 + 23);
        if ((v12 & 0x80u) != 0) {
          uint64_t v12 = *(void *)(a3 + 8);
        }
        if (v12) {
          operator new();
        }
      }
    }
    operator new();
  }
  operator new();
}

void sub_1D2CE57C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v21, 0x10B3C40F7FF9C27);
  if (*(char *)(v22 - 57) < 0) {
    operator delete(*(void **)(v22 - 80));
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::DefaultArticleLookupFunction::createPreposition(morphun::dialog::DefaultArticleLookupFunction *this, const morphun::dialog::SemanticFeatureModel_DisplayValue *a2, const morphun::dialog::SpeakableString *a3)
{
  if (*((unsigned char *)this + 8))
  {
    uint64_t v6 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *))(*(void *)a2 + 24))(a2);
    uint64_t v7 = v6;
    if (*(char *)(v6 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v12, *(const std::basic_string<char16_t>::value_type **)v6, *(void *)(v6 + 8));
    }
    else
    {
      long long v8 = *(_OWORD *)v6;
      v12.__r_.__value_.__r.__words[2] = *(void *)(v6 + 16);
      *(_OWORD *)&v12.__r_.__value_.__l.__data_ = v8;
    }
    uint64_t v9 = *((void *)this + 2);
    npc<morphun::dialog::SemanticFeature const>(v9);
    uint64_t v10 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(const morphun::dialog::SemanticFeatureModel_DisplayValue *, uint64_t))(*(void *)a2 + 32))(a2, v9);
    if (v10) {
      std::basic_string<char16_t>::operator=(&v12, v10);
    }
    if (*((unsigned char *)this + 9))
    {
      uint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      if ((v11 & 0x80u) != 0) {
        uint64_t v11 = *(void *)(v7 + 8);
      }
      if (v11)
      {
        if (((*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a3 + 56))(a3) & 1) == 0) {
          operator new();
        }
      }
    }
    operator new();
  }
  operator new();
}

void sub_1D2CE5B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v26, 0x10B3C40F7FF9C27);
  if (*(char *)(v27 - 57) < 0) {
    operator delete(*(void **)(v27 - 80));
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::DefaultArticleLookupFunction::createPreposition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    uint64_t v7 = v6;
    if (*(char *)(v6 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v13, *(const std::basic_string<char16_t>::value_type **)v6, *(void *)(v6 + 8));
    }
    else
    {
      long long v8 = *(_OWORD *)v6;
      v13.__r_.__value_.__r.__words[2] = *(void *)(v6 + 16);
      *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v8;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    npc<morphun::dialog::SemanticFeature const>(v9);
    uint64_t v10 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v9);
    if (v10) {
      std::basic_string<char16_t>::operator=(&v13, v10);
    }
    if (*(unsigned char *)(a1 + 9))
    {
      uint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      if ((v11 & 0x80u) != 0) {
        uint64_t v11 = *(void *)(v7 + 8);
      }
      if (v11)
      {
        uint64_t v12 = *(unsigned __int8 *)(a3 + 23);
        if ((v12 & 0x80u) != 0) {
          uint64_t v12 = *(void *)(a3 + 8);
        }
        if (v12) {
          operator new();
        }
      }
    }
    operator new();
  }
  operator new();
}

void sub_1D2CE5EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v21, 0x10B3C40F7FF9C27);
  if (*(char *)(v22 - 57) < 0) {
    operator delete(*(void **)(v22 - 80));
  }
  _Unwind_Resume(a1);
}

morphun::dialog::DefaultArticleLookupFunction *morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(morphun::dialog::DefaultArticleLookupFunction *this, const morphun::dialog::SemanticFeatureModel *a2, uint64_t a3, char a4, char a5)
{
  uint64_t v7 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v7 - 56)) = *((void *)a2 + 1);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 2);
  *((unsigned char *)this + 8) = a4;
  *((unsigned char *)this + 9) = a5;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"speak");
  uint64_t v8 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a3 + 8, (unsigned __int16 *)__p);
  if (a3 + 16 == v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = *(void *)(v8 + 56);
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  *((void *)this + 2) = v9;
  return this;
}

void morphun::analysis::util::AttributeSource::~AttributeSource(morphun::analysis::util::AttributeSource *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::analysis::util::AttributeSource::~AttributeSource(morphun::analysis::util::AttributeSource *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(*((void **)this + 7));
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table((uint64_t)this + 8);
}

void std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(*a1);
    std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(a1[1]);
    uint64_t v2 = (std::__shared_weak_count *)a1[5];
    if (v2) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v2);
    }
    operator delete(a1);
  }
}

void morphun::analysis::util::AttributeSource::toString(morphun::analysis::util::AttributeSource *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  morphun::Object::toString((morphun::analysis::util::AttributeSource *)((char *)this + *(void *)(*(void *)this - 40)), &v8);
  std::basic_string<char16_t>::append(&v8, &word_1D2ED0D7C, 1uLL);
  std::basic_string<char16_t> v9 = v8;
  memset(&v8, 0, sizeof(v8));
  morphun::analysis::util::AttributeSource::reflectAsString(this, 0, __p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v5 = v7;
  }
  else {
    std::basic_string<char16_t>::size_type v5 = (std::basic_string<char16_t>::size_type)__p[1];
  }
  std::basic_string<char16_t>::append(&v9, (const std::basic_string<char16_t>::value_type *)v4, v5);
  *a2 = v9;
  memset(&v9, 0, sizeof(v9));
  if ((char)v7 < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CE6338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::util::AttributeSource::reflectAsString@<X0>(morphun::analysis::util::AttributeSource *this@<X0>, char a2@<W1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  npc<std::basic_string<char16_t>>((uint64_t)a3);
  v7[1] = a3;
  char v8 = a2;
}

void sub_1D2CE6414(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::util::AttributeSource::reflectWith(uint64_t this, morphun::analysis::util::AttributeReflector *a2)
{
  uint64_t v2 = *(void **)(this + 48);
  uint64_t v3 = (void *)(this + 56);
  if (v2 != (void *)(this + 56))
  {
    do
    {
      this = (*(uint64_t (**)(void, morphun::analysis::util::AttributeReflector *))(*(void *)v2[4] + 80))(v2[4], a2);
      std::basic_string<char16_t>::size_type v5 = (void *)v2[1];
      if (v5)
      {
        do
        {
          uint64_t v6 = v5;
          std::basic_string<char16_t>::size_type v5 = (void *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          uint64_t v6 = (void *)v2[2];
          BOOL v7 = *v6 == (void)v2;
          uint64_t v2 = v6;
        }
        while (!v7);
      }
      uint64_t v2 = v6;
    }
    while (v6 != v3);
  }
  return this;
}

morphun::analysis::util::AttributeSource *morphun::analysis::util::AttributeSource::AttributeSource(morphun::analysis::util::AttributeSource *this, const morphun::analysis::util::AttributeFactory *a2)
{
  uint64_t v4 = morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(this);

  return morphun::analysis::util::AttributeSource::AttributeSource(this, a2, v4);
}

{
  void *__p[2];
  char v6;

  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &off_1F2A101C8;
  *((_DWORD *)this + 10) = 1065353216;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 6) = (char *)this + 56;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"AttributeFactory must not be null");
  morphun::util::Validate::notNull<morphun::analysis::util::AttributeFactory const>((uint64_t)a2, (const void **)__p);
  *((void *)this + 11) = a2;
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return this;
}

morphun::analysis::util::AttributeSource *morphun::analysis::util::AttributeSource::AttributeSource(morphun::analysis::util::AttributeSource *this, const morphun::analysis::util::AttributeFactory *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 40)) = *((void *)a2 + 1);
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 10) = 1065353216;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 6) = (char *)this + 56;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"AttributeFactory must not be null");
  morphun::util::Validate::notNull<morphun::analysis::util::AttributeFactory const>(a3, (const void **)__p);
  *((void *)this + 11) = a3;
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return this;
}

void sub_1D2CE662C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(*v16);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v15);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::Validate::notNull<morphun::analysis::util::AttributeFactory const>(uint64_t result, const void **a2)
{
  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v4, L"Input argument <", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v5, &v4, (std::basic_string<char16_t>::value_type *)">");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &v5);
  }
  return result;
}

void sub_1D2CE6700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v20);
  goto LABEL_8;
}

morphun::analysis::util::AttributeSource *morphun::analysis::util::AttributeSource::AttributeSource(morphun::analysis::util::AttributeSource *this)
{
  uint64_t v2 = (const morphun::analysis::util::AttributeFactory *)morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(this);

  return morphun::analysis::util::AttributeSource::AttributeSource(this, v2);
}

void sub_1D2CE684C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(*v16);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v15);
  _Unwind_Resume(a1);
}

morphun::analysis::util::AttributeSource *morphun::analysis::util::AttributeSource::AttributeSource(morphun::analysis::util::AttributeSource *this, morphun::analysis::util::AttributeSource *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 40)) = *((void *)a2 + 1);
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((void *)this + 7) = 0;
  *((void *)this + 6) = (char *)this + 56;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
  morphun::util::Validate::notNull<morphun::analysis::util::AttributeSource>(a3, (const void **)__p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  npc<morphun::analysis::util::AttributeSource>(a3);
  if (this != (morphun::analysis::util::AttributeSource *)a3)
  {
    *((_DWORD *)this + 10) = *(_DWORD *)(a3 + 40);
    std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,void *> *>>((void *)this + 1, *(void **)(a3 + 24));
  }
  npc<morphun::analysis::util::AttributeSource>(a3);
  if (this != (morphun::analysis::util::AttributeSource *)a3) {
    std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::__assign_multi<std::__tree_const_iterator<std::shared_ptr<morphun::analysis::util::AttributeImpl>,std::__tree_node<std::shared_ptr<morphun::analysis::util::AttributeImpl>,void *> *,long>>((uint64_t)this + 48, *(void **)(a3 + 48), (void *)(a3 + 56));
  }
  npc<morphun::analysis::util::AttributeSource>(a3);
  *((void *)this + 9) = *(void *)(a3 + 72);
  *((void *)this + 11) = *(void *)(a3 + 88);
  return this;
}

void sub_1D2CE69FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(*v16);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v15);
  _Unwind_Resume(a1);
}

uint64_t morphun::util::Validate::notNull<morphun::analysis::util::AttributeSource>(uint64_t result, const void **a2)
{
  if (!result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v4, L"Input argument <", a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v5, &v4, (std::basic_string<char16_t>::value_type *)">");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &v5);
  }
  return result;
}

void sub_1D2CE6AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v20);
  goto LABEL_8;
}

uint64_t npc<morphun::analysis::util::AttributeSource>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CE6B84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,void *> *>>(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  if (!v4) {
    goto LABEL_12;
  }
  for (uint64_t i = 0; i != v4; *(void *)(*a1 + 8 * i++) = 0)
    ;
  uint64_t v6 = (void *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v6)
  {
    while (a2)
    {
      v6[2] = a2[2];
      uint64_t v6[3] = a2[3];
      BOOL v7 = (void *)*v6;
      std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__node_insert_multi((uint64_t)a1, v6);
      a2 = (void *)*a2;
      uint64_t v6 = v7;
      if (!v7) {
        goto LABEL_12;
      }
    }
    do
    {
      std::basic_string<char16_t> v13 = (void *)*v6;
      operator delete(v6);
      uint64_t v6 = v13;
    }
    while (v13);
  }
  else
  {
LABEL_12:
    while (a2)
    {
      char v8 = operator new(0x20uLL);
      *char v8 = 0;
      v8[1] = 0;
      *((_OWORD *)v8 + 1) = *((_OWORD *)a2 + 1);
      uint64_t v9 = *(void *)(v8[2] + 8);
      if (v9 < 0)
      {
        uint64_t v10 = (unsigned __int8 *)(v9 & 0x7FFFFFFFFFFFFFFFLL);
        uint64_t v11 = 5381;
        do
        {
          uint64_t v9 = v11;
          unsigned int v12 = *v10++;
          uint64_t v11 = (33 * v11) ^ v12;
        }
        while (v12);
      }
      v8[1] = v9;
      std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__node_insert_multi((uint64_t)a1, v8);
      a2 = (void *)*a2;
    }
  }
}

void sub_1D2CE6C94(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_1D2CE6CB4(_Unwind_Exception *a1)
{
}

void std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::__assign_multi<std::__tree_const_iterator<std::shared_ptr<morphun::analysis::util::AttributeImpl>,std::__tree_node<std::shared_ptr<morphun::analysis::util::AttributeImpl>,void *> *,long>>(uint64_t a1, void *a2, void *a3)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v6 = *(uint64_t **)a1;
    char v8 = (uint64_t **)(a1 + 8);
    uint64_t v7 = *(void *)(a1 + 8);
    *(void *)a1 = a1 + 8;
    *(void *)(v7 + 16) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 8) = 0;
    if (v6[1]) {
      uint64_t v9 = (uint64_t *)v6[1];
    }
    else {
      uint64_t v9 = v6;
    }
    if (!v9)
    {
      uint64_t v22 = 0;
LABEL_33:
      std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(v22);
      goto LABEL_34;
    }
    uint64_t v10 = std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next((uint64_t)v9);
    if (a2 != a3)
    {
      uint64_t v11 = v9;
      unsigned int v12 = a2;
      do
      {
        uint64_t v9 = v10;
        uint64_t v14 = v12[4];
        uint64_t v13 = v12[5];
        if (v13) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
        }
        uint64_t v15 = (std::__shared_weak_count *)v11[5];
        v11[4] = v14;
        v11[5] = v13;
        if (v15) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v15);
        }
        int v16 = *v8;
        int v17 = (uint64_t **)(a1 + 8);
        BOOL v18 = (uint64_t **)(a1 + 8);
        if (*v8)
        {
          do
          {
            while (1)
            {
              int v17 = (uint64_t **)v16;
              if (v11[4] >= (unint64_t)v16[4]) {
                break;
              }
              int v16 = (uint64_t *)*v16;
              BOOL v18 = v17;
              if (!*v17) {
                goto LABEL_18;
              }
            }
            int v16 = (uint64_t *)v16[1];
          }
          while (v16);
          BOOL v18 = v17 + 1;
        }
LABEL_18:
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v17, v18, v11);
        if (v10) {
          uint64_t v10 = std::__tree<std::basic_string<char16_t>>::_DetachedTreeCache::__detach_next((uint64_t)v10);
        }
        else {
          uint64_t v10 = 0;
        }
        uint64_t v19 = (void *)v12[1];
        if (v19)
        {
          do
          {
            a2 = v19;
            uint64_t v19 = (void *)*v19;
          }
          while (v19);
        }
        else
        {
          do
          {
            a2 = (void *)v12[2];
            BOOL v20 = *a2 == (void)v12;
            unsigned int v12 = a2;
          }
          while (!v20);
        }
        if (!v9) {
          break;
        }
        uint64_t v11 = v9;
        unsigned int v12 = a2;
      }
      while (a2 != a3);
    }
    std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(v9);
    if (v10)
    {
      for (uint64_t i = (uint64_t *)v10[2]; i; uint64_t i = (uint64_t *)i[2])
        uint64_t v10 = i;
      uint64_t v22 = v10;
      goto LABEL_33;
    }
  }
LABEL_34:
  if (a2 != a3)
  {
    int v23 = (uint64_t **)(a1 + 8);
    do
    {
      BOOL v24 = (uint64_t *)operator new(0x30uLL);
      unint64_t v25 = a2[4];
      uint64_t v26 = a2[5];
      v24[4] = v25;
      v24[5] = v26;
      if (v26) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v26 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v27 = *v23;
      uint64_t v28 = (uint64_t **)(a1 + 8);
      uint64_t v29 = (uint64_t **)(a1 + 8);
      if (*v23)
      {
        do
        {
          while (1)
          {
            uint64_t v28 = (uint64_t **)v27;
            if (v25 >= v27[4]) {
              break;
            }
            uint64_t v27 = (uint64_t *)*v27;
            uint64_t v29 = v28;
            if (!*v28) {
              goto LABEL_44;
            }
          }
          uint64_t v27 = (uint64_t *)v27[1];
        }
        while (v27);
        uint64_t v29 = v28 + 1;
      }
LABEL_44:
      std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, (uint64_t)v28, v29, v24);
      int v30 = (void *)a2[1];
      if (v30)
      {
        do
        {
          uint64_t v31 = v30;
          int v30 = (void *)*v30;
        }
        while (v30);
      }
      else
      {
        do
        {
          uint64_t v31 = (void *)a2[2];
          BOOL v20 = *v31 == (void)a2;
          a2 = v31;
        }
        while (!v20);
      }
      a2 = v31;
    }
    while (v31 != a3);
  }
}

void std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__node_insert_multi(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = *(void *)(a2[2] + 8);
  if ((v4 & 0x8000000000000000) != 0)
  {
    long long v5 = (unsigned __int8 *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v6 = 5381;
    do
    {
      unint64_t v4 = v6;
      unsigned int v7 = *v5++;
      uint64_t v6 = (33 * v6) ^ v7;
    }
    while (v7);
  }
  a2[1] = v4;
  unint64_t v8 = *(void *)(a1 + 8);
  float v9 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v10 = *(float *)(a1 + 32);
  if (!v8 || (float)(v10 * (float)v8) < v9)
  {
    BOOL v11 = 1;
    if (v8 >= 3) {
      BOOL v11 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v12 = v11 | (2 * v8);
    unint64_t v13 = vcvtps_u32_f32(v9 / v10);
    if (v12 <= v13) {
      int8x8_t prime = (int8x8_t)v13;
    }
    else {
      int8x8_t prime = (int8x8_t)v12;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v8 = *(void *)(a1 + 8);
    }
    if (*(void *)&prime > v8) {
      goto LABEL_102;
    }
    if (*(void *)&prime >= v8) {
      goto LABEL_63;
    }
    unint64_t v22 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v8 < 3 || (uint8x8_t v23 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v23.i16[0] = vaddlv_u8(v23), v23.u32[0] > 1uLL))
    {
      unint64_t v22 = std::__next_prime(v22);
    }
    else
    {
      uint64_t v24 = 1 << -(char)__clz(v22 - 1);
      if (v22 >= 2) {
        unint64_t v22 = v24;
      }
    }
    if (*(void *)&prime <= v22) {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime >= v8)
    {
      unint64_t v8 = *(void *)(a1 + 8);
      goto LABEL_63;
    }
    if (prime)
    {
LABEL_102:
      if (*(void *)&prime >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v15 = operator new(8 * *(void *)&prime);
      int v16 = *(void **)a1;
      *(void *)a1 = v15;
      if (v16) {
        operator delete(v16);
      }
      uint64_t v17 = 0;
      *(int8x8_t *)(a1 + 8) = prime;
      do
        *(void *)(*(void *)a1 + 8 * v17++) = 0;
      while (*(void *)&prime != v17);
      BOOL v18 = *(void **)(a1 + 16);
      if (v18)
      {
        unint64_t v19 = v18[1];
        uint8x8_t v20 = (uint8x8_t)vcnt_s8(prime);
        v20.i16[0] = vaddlv_u8(v20);
        unint64_t v21 = v20.u32[0];
        uint64_t v45 = v2;
        if (v20.u32[0] > 1uLL)
        {
          if (v19 >= *(void *)&prime) {
            v19 %= *(void *)&prime;
          }
        }
        else
        {
          v19 &= *(void *)&prime - 1;
        }
        *(void *)(*(void *)a1 + 8 * v19) = a1 + 16;
        unint64_t v25 = (void *)*v18;
        if (*v18)
        {
          uint64_t v26 = *(void *)&prime - 1;
          unint64_t v46 = v20.u32[0];
          do
          {
            unint64_t v27 = v25[1];
            if (v21 > 1)
            {
              if (v27 >= *(void *)&prime) {
                v27 %= *(void *)&prime;
              }
            }
            else
            {
              v27 &= v26;
            }
            if (v27 == v19)
            {
              BOOL v18 = v25;
            }
            else if (*(void *)(*(void *)a1 + 8 * v27))
            {
              uint64_t v28 = (void *)*v25;
              if (*v25)
              {
                uint64_t v29 = *(void *)(v25[2] + 8);
                int v30 = v25;
                while (1)
                {
                  uint64_t v31 = v28;
                  if (!std::type_info::operator==[abi:ne180100](v29, *(void *)(v28[2] + 8))) {
                    break;
                  }
                  uint64_t v28 = (void *)*v31;
                  int v30 = v31;
                  if (!*v31) {
                    goto LABEL_50;
                  }
                }
                uint64_t v28 = v31;
                uint64_t v31 = v30;
LABEL_50:
                uint64_t v26 = *(void *)&prime - 1;
                unint64_t v21 = v46;
              }
              else
              {
                uint64_t v31 = v25;
              }
              *BOOL v18 = v28;
              *uint64_t v31 = **(void **)(*(void *)a1 + 8 * v27);
              **(void **)(*(void *)a1 + 8 * v27) = v25;
            }
            else
            {
              *(void *)(*(void *)a1 + 8 * v27) = v18;
              BOOL v18 = v25;
              unint64_t v19 = v27;
            }
            unint64_t v25 = (void *)*v18;
          }
          while (*v18);
        }
        unint64_t v8 = (unint64_t)prime;
        uint64_t v2 = v45;
      }
      else
      {
        unint64_t v8 = (unint64_t)prime;
      }
    }
    else
    {
      BOOL v32 = *(void **)a1;
      *(void *)a1 = 0;
      if (v32) {
        operator delete(v32);
      }
      unint64_t v8 = 0;
      *(void *)(a1 + 8) = 0;
    }
  }
LABEL_63:
  uint8x8_t v33 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
  v33.i16[0] = vaddlv_u8(v33);
  unint64_t v34 = v33.u32[0];
  if (v33.u32[0] > 1uLL)
  {
    unint64_t v35 = v4;
    if (v8 <= v4) {
      unint64_t v35 = v4 % v8;
    }
  }
  else
  {
    unint64_t v35 = (v8 - 1) & v4;
  }
  unint64_t v36 = *(void **)(*(void *)a1 + 8 * v35);
  if (v36)
  {
    uint64_t v37 = (void *)*v36;
    if (*v36)
    {
      int v38 = 0;
      do
      {
        uint64_t v39 = v37;
        unint64_t v40 = v37[1];
        if (v34 > 1)
        {
          unint64_t v41 = v40;
          if (v40 >= v8) {
            unint64_t v41 = v40 % v8;
          }
        }
        else
        {
          unint64_t v41 = v40 & (v8 - 1);
        }
        if (v41 != v35) {
          break;
        }
        BOOL v42 = v40 == v4 && std::type_info::operator==[abi:ne180100](*(void *)(v39[2] + 8), *(void *)(v2[2] + 8));
        if (v38 & !v42) {
          break;
        }
        v38 |= v42;
        uint64_t v37 = (void *)*v39;
        unint64_t v36 = v39;
      }
      while (*v39);
    }
  }
  unint64_t v43 = v2[1];
  if (v34 > 1)
  {
    if (v43 >= v8) {
      v43 %= v8;
    }
  }
  else
  {
    v43 &= v8 - 1;
  }
  if (!v36)
  {
    *uint64_t v2 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v2;
    *(void *)(*(void *)a1 + 8 * v43) = a1 + 16;
    if (!*v2) {
      goto LABEL_98;
    }
    unint64_t v44 = *(void *)(*v2 + 8);
    if (v34 > 1)
    {
      if (v44 >= v8) {
        v44 %= v8;
      }
    }
    else
    {
      v44 &= v8 - 1;
    }
LABEL_97:
    *(void *)(*(void *)a1 + 8 * v44) = v2;
    goto LABEL_98;
  }
  *uint64_t v2 = *v36;
  void *v36 = v2;
  if (*v2)
  {
    unint64_t v44 = *(void *)(*v2 + 8);
    if (v34 > 1)
    {
      if (v44 >= v8) {
        v44 %= v8;
      }
    }
    else
    {
      v44 &= v8 - 1;
    }
    if (v44 != v43) {
      goto LABEL_97;
    }
  }
LABEL_98:
  ++*(void *)(a1 + 24);
}

morphun::analysis::util::AttributeSource *morphun::analysis::util::AttributeSource::AttributeSource(morphun::analysis::util::AttributeSource *this, morphun::analysis::util::AttributeSource *a2)
{
  *(void *)this = &off_1F2A101C8;
  *(_OWORD *)((char *)this + 8) = 0u;
  unint64_t v4 = (void *)((char *)this + 8);
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((void *)this + 7) = 0;
  *((void *)this + 6) = (char *)this + 56;
  long long v5 = (char *)this + 48;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "i");
  morphun::util::Validate::notNull<morphun::analysis::util::AttributeSource>((uint64_t)a2, (const void **)__p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  npc<morphun::analysis::util::AttributeSource>((uint64_t)a2);
  if (this != a2)
  {
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,void *> *>>(v4, *((void **)a2 + 3));
  }
  npc<morphun::analysis::util::AttributeSource>((uint64_t)a2);
  if (this != a2) {
    std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::__assign_multi<std::__tree_const_iterator<std::shared_ptr<morphun::analysis::util::AttributeImpl>,std::__tree_node<std::shared_ptr<morphun::analysis::util::AttributeImpl>,void *> *,long>>((uint64_t)v5, *((void **)a2 + 6), (void *)a2 + 7);
  }
  npc<morphun::analysis::util::AttributeSource>((uint64_t)a2);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)this + 11) = *((void *)a2 + 11);
  return this;
}

void sub_1D2CE74D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(*v16);
  std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table(v15);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::analysis::util::AttributeSource::~AttributeSource(morphun::analysis::util::AttributeSource *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::analysis::util::AttributeSource::getAttributeFactory(morphun::analysis::util::AttributeSource *this)
{
  return *((void *)this + 11);
}

void morphun::analysis::util::AttributeSource::addAttributeImpl(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  v10[0] = *a2;
  v10[1] = (unint64_t)v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  morphun::analysis::util::AttributeSource::updateState(a1, v10);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  unint64_t v6 = *a2;
  long long v5 = (std::__shared_weak_count *)a2[1];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unsigned int v7 = &off_1F2A103E8;
  v8[0] = &off_1F2A103E8;
  v8[1] = a1;
  v8[2] = v6;
  float v9 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
    unsigned int v7 = (uint64_t (**)(morphun::Object *__hidden))v8[0];
  }
  (*(void (**)(unint64_t, char *))(*(void *)*a2 + 80))(*a2, (char *)v8 + (void)*(v7 - 8));
  v8[0] = &off_1F2A103E8;
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
}

void sub_1D2CE7694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::util::AttributeSource::updateState(uint64_t result, unint64_t *a2)
{
  uint64_t v3 = *(uint64_t **)(result + 56);
  if (!v3)
  {
    unint64_t v13 = (uint64_t **)(result + 56);
    BOOL v11 = (uint64_t **)(result + 56);
    goto LABEL_20;
  }
  unint64_t v4 = *a2;
  long long v5 = (void *)(result + 56);
  unint64_t v6 = *(void **)(result + 56);
  do
  {
    unint64_t v7 = v6[4];
    BOOL v8 = v7 >= v4;
    if (v7 >= v4) {
      float v9 = v6;
    }
    else {
      float v9 = v6 + 1;
    }
    if (v8) {
      long long v5 = v6;
    }
    unint64_t v6 = (void *)*v9;
  }
  while (*v9);
  if (v5 == (void *)(result + 56) || v4 < v5[4])
  {
    unint64_t v10 = *a2;
    do
    {
      while (1)
      {
        BOOL v11 = (uint64_t **)v3;
        unint64_t v12 = v3[4];
        if (v10 >= v12) {
          break;
        }
        uint64_t v3 = *v11;
        unint64_t v13 = v11;
        if (!*v11) {
          goto LABEL_20;
        }
      }
      if (v12 >= v10) {
        goto LABEL_23;
      }
      uint64_t v3 = v11[1];
    }
    while (v3);
    unint64_t v13 = v11 + 1;
LABEL_20:
    uint64_t v14 = (uint64_t **)(result + 48);
    uint64_t v15 = (uint64_t *)operator new(0x30uLL);
    uint64_t v16 = a2[1];
    v15[4] = *a2;
    v15[5] = v16;
    if (v16) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
    }
    std::__tree<std::u16string_view>::__insert_node_at(v14, (uint64_t)v11, v13, v15);
LABEL_23:
    operator new();
  }
  return result;
}

void morphun::analysis::util::AttributeSource::addAttributeImpl(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v7 = (uint64_t *)(a1 + 8);
  if (!std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>((void *)(a1 + 8), *(void *)(a3 + 8)))
  {
    BOOL v8 = (std::__shared_weak_count *)a2[1];
    v31[0] = *a2;
    v31[1] = (unint64_t)v8;
    if (v8) {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    morphun::analysis::util::AttributeSource::updateState(a1, v31);
    if (v8) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
    uint64_t v9 = *(void *)(a3 + 8);
    unint64_t v10 = v9;
    if (v9 < 0)
    {
      BOOL v11 = (unsigned __int8 *)(v9 & 0x7FFFFFFFFFFFFFFFLL);
      uint64_t v12 = 5381;
      do
      {
        unint64_t v10 = v12;
        unsigned int v13 = *v11++;
        uint64_t v12 = (33 * v12) ^ v13;
      }
      while (v13);
    }
    unint64_t v14 = *a2;
    unint64_t v15 = *(void *)(a1 + 16);
    if (v15)
    {
      uint8x8_t v16 = (uint8x8_t)vcnt_s8((int8x8_t)v15);
      v16.i16[0] = vaddlv_u8(v16);
      unint64_t v17 = v16.u32[0];
      if (v16.u32[0] > 1uLL)
      {
        unint64_t v3 = v10;
        if (v10 >= v15) {
          unint64_t v3 = v10 % v15;
        }
      }
      else
      {
        unint64_t v3 = (v15 - 1) & v10;
      }
      BOOL v18 = *(void **)(*v7 + 8 * v3);
      if (v18)
      {
        unint64_t v19 = (void *)*v18;
        if (*v18)
        {
          do
          {
            unint64_t v20 = v19[1];
            if (v20 == v10)
            {
              if (std::type_info::operator==[abi:ne180100](*(void *)(v19[2] + 8), v9)) {
                return;
              }
            }
            else
            {
              if (v17 > 1)
              {
                if (v20 >= v15) {
                  v20 %= v15;
                }
              }
              else
              {
                v20 &= v15 - 1;
              }
              if (v20 != v3) {
                break;
              }
            }
            unint64_t v19 = (void *)*v19;
          }
          while (v19);
        }
      }
    }
    unint64_t v21 = operator new(0x20uLL);
    *unint64_t v21 = 0;
    v21[1] = v10;
    v21[2] = a3;
    v21[3] = v14;
    float v22 = (float)(unint64_t)(*(void *)(a1 + 32) + 1);
    float v23 = *(float *)(a1 + 40);
    if (!v15 || (float)(v23 * (float)v15) < v22)
    {
      BOOL v24 = 1;
      if (v15 >= 3) {
        BOOL v24 = (v15 & (v15 - 1)) != 0;
      }
      unint64_t v25 = v24 | (2 * v15);
      unint64_t v26 = vcvtps_u32_f32(v22 / v23);
      if (v25 <= v26) {
        size_t v27 = v26;
      }
      else {
        size_t v27 = v25;
      }
      std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>((uint64_t)v7, v27);
      unint64_t v15 = *(void *)(a1 + 16);
      if ((v15 & (v15 - 1)) != 0)
      {
        if (v10 >= v15) {
          unint64_t v3 = v10 % v15;
        }
        else {
          unint64_t v3 = v10;
        }
      }
      else
      {
        unint64_t v3 = (v15 - 1) & v10;
      }
    }
    uint64_t v28 = *v7;
    uint64_t v29 = *(void **)(*v7 + 8 * v3);
    if (v29)
    {
      *unint64_t v21 = *v29;
    }
    else
    {
      *unint64_t v21 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = v21;
      *(void *)(v28 + 8 * v3) = a1 + 24;
      if (!*v21)
      {
LABEL_47:
        ++*(void *)(a1 + 32);
        return;
      }
      unint64_t v30 = *(void *)(*v21 + 8);
      if ((v15 & (v15 - 1)) != 0)
      {
        if (v30 >= v15) {
          v30 %= v15;
        }
      }
      else
      {
        v30 &= v15 - 1;
      }
      uint64_t v29 = (void *)(*v7 + 8 * v30);
    }
    *uint64_t v29 = v21;
    goto LABEL_47;
  }
}

void sub_1D2CE7AA0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(void *)&v4)
  {
    if (prime >= *(void *)&v4) {
      return;
    }
    unint64_t v11 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v12 = (uint8x8_t)vcnt_s8(v4), v12.i16[0] = vaddlv_u8(v12), v12.u32[0] > 1uLL))
    {
      unint64_t v11 = std::__next_prime(v11);
    }
    else
    {
      uint64_t v13 = 1 << -(char)__clz(v11 - 1);
      if (v11 >= 2) {
        unint64_t v11 = v13;
      }
    }
    if (prime <= v11) {
      size_t prime = v11;
    }
    if (prime >= *(void *)&v4) {
      return;
    }
    if (!prime)
    {
      uint8x8_t v16 = *(void **)a1;
      *(void *)a1 = 0;
      if (v16) {
        operator delete(v16);
      }
      *(void *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  long long v5 = operator new(8 * prime);
  unint64_t v6 = *(void **)a1;
  *(void *)a1 = v5;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = 0;
  *(void *)(a1 + 8) = prime;
  do
    *(void *)(*(void *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  BOOL v8 = *(void **)(a1 + 16);
  if (v8)
  {
    size_t v9 = v8[1];
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)prime);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      if (v9 >= prime) {
        v9 %= prime;
      }
    }
    else
    {
      v9 &= prime - 1;
    }
    *(void *)(*(void *)a1 + 8 * v9) = a1 + 16;
    unint64_t v14 = (void *)*v8;
    if (*v8)
    {
      do
      {
        size_t v15 = v14[1];
        if (v10.u32[0] > 1uLL)
        {
          if (v15 >= prime) {
            v15 %= prime;
          }
        }
        else
        {
          v15 &= prime - 1;
        }
        if (v15 != v9)
        {
          if (!*(void *)(*(void *)a1 + 8 * v15))
          {
            *(void *)(*(void *)a1 + 8 * v15) = v8;
            goto LABEL_31;
          }
          *BOOL v8 = *v14;
          void *v14 = **(void **)(*(void *)a1 + 8 * v15);
          **(void **)(*(void *)a1 + 8 * v15) = v14;
          unint64_t v14 = v8;
        }
        size_t v15 = v9;
LABEL_31:
        BOOL v8 = v14;
        unint64_t v14 = (void *)*v14;
        size_t v9 = v15;
      }
      while (v14);
    }
  }
}

BOOL morphun::analysis::util::AttributeSource::hasAttributes(morphun::analysis::util::AttributeSource *this)
{
  return *((void *)this + 4) != 0;
}

uint64_t morphun::analysis::util::AttributeSource::clearAttributeStates(morphun::analysis::util::AttributeSource *this)
{
  uint64_t v2 = (void *)((char *)this + 72);
  uint64_t result = *((void *)this + 9);
  if (result)
  {
    do
    {
      uint64_t v3 = *(void *)(result + 16);
      MEMORY[0x1D942B8B0]();
      uint64_t result = v3;
    }
    while (v3);
  }
  *uint64_t v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t morphun::analysis::util::AttributeSource::clearAttributes(morphun::analysis::util::AttributeSource *this)
{
  uint64_t v3 = (void *)((char *)this + 72);
  uint64_t result = *((void *)this + 9);
  if (result)
  {
    do
    {
      uint64_t v4 = *(void *)(result + 16);
      MEMORY[0x1D942B8B0]();
      uint64_t result = v4;
    }
    while (v4);
  }
  *uint64_t v3 = 0;
  v3[1] = 0;
  long long v5 = (char *)*((void *)this + 6);
  unint64_t v6 = (char *)this + 56;
  if (v5 != v6)
  {
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**((void **)v5 + 4) + 56))(*((void *)v5 + 4));
      uint64_t v7 = (char *)*((void *)v5 + 1);
      if (v7)
      {
        do
        {
          BOOL v8 = v7;
          uint64_t v7 = *(char **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          BOOL v8 = (char *)*((void *)v5 + 2);
          BOOL v9 = *(void *)v8 == (void)v5;
          long long v5 = v8;
        }
        while (!v9);
      }
      long long v5 = v8;
    }
    while (v8 != v6);
  }
  return result;
}

void morphun::analysis::util::AttributeSource::removeAllAttributes(morphun::analysis::util::AttributeSource *this)
{
  uint64_t v3 = (void *)((char *)this + 72);
  uint64_t v2 = *((void *)this + 9);
  if (v2)
  {
    do
    {
      uint64_t v4 = *(void *)(v2 + 16);
      MEMORY[0x1D942B8B0]();
      uint64_t v2 = v4;
    }
    while (v4);
  }
  *uint64_t v3 = 0;
  v3[1] = 0;
  if (*((void *)this + 4))
  {
    long long v5 = (void *)*((void *)this + 3);
    if (v5)
    {
      do
      {
        unint64_t v6 = (void *)*v5;
        operator delete(v5);
        long long v5 = v6;
      }
      while (v6);
    }
    *((void *)this + 3) = 0;
    uint64_t v7 = *((void *)this + 2);
    if (v7)
    {
      for (uint64_t i = 0; i != v7; ++i)
        *(void *)(*((void *)this + 1) + 8 * i) = 0;
    }
    *((void *)this + 4) = 0;
  }
  uint8x8_t v10 = (void *)*((void *)this + 7);
  BOOL v9 = (void *)((char *)this + 56);
  std::__tree<std::shared_ptr<morphun::analysis::util::AttributeImpl>>::destroy(v10);
  *(v9 - 1) = v9;
  void *v9 = 0;
  v9[1] = 0;
}

morphun::analysis::util::AttributeSource_State *morphun::analysis::util::AttributeSource::captureState(morphun::analysis::util::AttributeSource *this)
{
  uint64_t result = (morphun::analysis::util::AttributeSource_State *)*((void *)this + 9);
  if (result) {
    morphun::analysis::util::AttributeSource_State::clone(result);
  }
  return result;
}

uint64_t morphun::analysis::util::AttributeSource::restoreState(uint64_t this, morphun::analysis::util::AttributeSource_State *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    uint64_t v3 = this;
    uint64_t v4 = (void *)(this + 56);
    do
    {
      long long v5 = *(void **)(v3 + 48);
      if (v5 == v4) {
        goto LABEL_16;
      }
      BOOL v6 = std::type_info::operator==[abi:ne180100](0x80000001D2E9ACEELL, 0x80000001D2E9ACEELL);
      uint64_t v7 = v5;
      while (!v6)
      {
        BOOL v8 = (void *)v7[1];
        if (v8)
        {
          do
          {
            BOOL v9 = v8;
            BOOL v8 = (void *)*v8;
          }
          while (v8);
        }
        else
        {
          do
          {
            BOOL v9 = (void *)v7[2];
            BOOL v10 = *v9 == (void)v7;
            uint64_t v7 = v9;
          }
          while (!v10);
        }
        uint64_t v7 = v9;
        if (v9 == v4) {
          goto LABEL_16;
        }
      }
      uint64_t v11 = v5[4];
      if (!v11)
      {
LABEL_16:
        exception = __cxa_allocate_exception(0x38uLL);
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"State contains AttributeImpl that is not in in this AttributeSource");
        morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &__dst);
      }
      uint64_t v12 = npc<morphun::analysis::util::AttributeImpl>(*((void *)v2 + 1));
      this = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 72))(v12, v11);
      uint64_t v2 = (morphun::analysis::util::AttributeSource_State *)*((void *)v2 + 2);
    }
    while (v2);
  }
  return this;
}

void sub_1D2CE7FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t npc<morphun::analysis::util::AttributeImpl>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CE8074(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::util::AttributeSource::hashCode(morphun::analysis::util::AttributeSource *this)
{
  uint64_t v1 = *((void *)this + 9);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 0;
  do
  {
    uint64_t v3 = *(char **)(v1 + 8);
    if (v3) {
      uint64_t v2 = (*(unsigned int (**)(char *))(*(void *)&v3[*(void *)(*(void *)v3 - 88)] + 40))(&v3[*(void *)(*(void *)v3 - 88)])
    }
         - v2
         + 32 * v2;
    uint64_t v1 = *(void *)(v1 + 16);
  }
  while (v1);
  return v2;
}

uint64_t morphun::analysis::util::AttributeSource::operator()(int a1, morphun::analysis::util::AttributeSource *this)
{
  return (int)morphun::analysis::util::AttributeSource::hashCode(this);
}

BOOL morphun::analysis::util::AttributeSource::operator==(void *a1, void *a2)
{
  if (a1[8] != a2[8] || a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v2 = (void *)a1[6];
  uint64_t v3 = (void *)a2[6];
  uint64_t v4 = a1 + 7;
  long long v5 = a2 + 7;
  BOOL v6 = v2 == a1 + 7 || v3 == v5;
  if (v6) {
    return 1;
  }
  do
  {
    uint64_t v8 = v3[4];
    uint64_t v9 = v2[4];
    BOOL result = v8 == v9;
    if (v8 != v9) {
      break;
    }
    BOOL v10 = (void *)v2[1];
    if (v10)
    {
      do
      {
        uint64_t v11 = v10;
        BOOL v10 = (void *)*v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        uint64_t v11 = (void *)v2[2];
        BOOL v6 = *v11 == (void)v2;
        uint64_t v2 = v11;
      }
      while (!v6);
    }
    uint64_t v12 = (void *)v3[1];
    if (v12)
    {
      do
      {
        uint64_t v13 = v12;
        uint64_t v12 = (void *)*v12;
      }
      while (v12);
    }
    else
    {
      do
      {
        uint64_t v13 = (void *)v3[2];
        BOOL v6 = *v13 == (void)v3;
        uint64_t v3 = v13;
      }
      while (!v6);
    }
    BOOL result = 1;
    if (v11 == v4) {
      break;
    }
    uint64_t v2 = v11;
    uint64_t v3 = v13;
  }
  while (v13 != v5);
  return result;
}

void morphun::analysis::util::AttributeSource::cloneAttributes(morphun::analysis::util::AttributeSource *this)
{
}

void sub_1D2CE864C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  MEMORY[0x1D942B8B0](v20, 0x10E1C40B6CE2AB0);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>>>::__emplace_unique_key_args<unsigned long,unsigned long,morphun::analysis::util::AttributeImpl *&>(float *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = a2;
  unint64_t v9 = *((void *)a1 + 1);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = a2;
      if (v9 <= a2) {
        unint64_t v4 = a2 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & a2;
    }
    uint64_t v11 = *(void **)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      for (uint64_t i = (void *)*v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == a2)
        {
          if (i[2] == a2) {
            return;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4) {
            break;
          }
        }
      }
    }
  }
  unint64_t v14 = operator new(0x20uLL);
  void *v14 = 0;
  v14[1] = v7;
  v14[2] = a3;
  v14[3] = a4;
  float v15 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v16 = a1[8];
  if (v9 && (float)(v16 * (float)v9) >= v15)
  {
    unint64_t v7 = v4;
    goto LABEL_64;
  }
  BOOL v17 = 1;
  if (v9 >= 3) {
    BOOL v17 = (v9 & (v9 - 1)) != 0;
  }
  unint64_t v18 = v17 | (2 * v9);
  unint64_t v19 = vcvtps_u32_f32(v15 / v16);
  if (v18 <= v19) {
    int8x8_t prime = (int8x8_t)v19;
  }
  else {
    int8x8_t prime = (int8x8_t)v18;
  }
  if (*(void *)&prime == 1)
  {
    int8x8_t prime = (int8x8_t)2;
  }
  else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
  {
    int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    unint64_t v9 = *((void *)a1 + 1);
  }
  if (*(void *)&prime <= v9)
  {
    if (*(void *)&prime >= v9) {
      goto LABEL_60;
    }
    unint64_t v27 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
    if (v9 < 3 || (uint8x8_t v28 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
    {
      unint64_t v27 = std::__next_prime(v27);
    }
    else
    {
      uint64_t v29 = 1 << -(char)__clz(v27 - 1);
      if (v27 >= 2) {
        unint64_t v27 = v29;
      }
    }
    if (*(void *)&prime <= v27) {
      int8x8_t prime = (int8x8_t)v27;
    }
    if (*(void *)&prime >= v9)
    {
      unint64_t v9 = *((void *)a1 + 1);
      goto LABEL_60;
    }
    if (!*(void *)&prime)
    {
      unint64_t v35 = *(void **)a1;
      *(void *)a1 = 0;
      if (v35) {
        operator delete(v35);
      }
      unint64_t v9 = 0;
      *((void *)a1 + 1) = 0;
      goto LABEL_60;
    }
  }
  if (*(void *)&prime >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  unint64_t v21 = operator new(8 * *(void *)&prime);
  float v22 = *(void **)a1;
  *(void *)a1 = v21;
  if (v22) {
    operator delete(v22);
  }
  uint64_t v23 = 0;
  *((int8x8_t *)a1 + 1) = prime;
  do
    *(void *)(*(void *)a1 + 8 * v23++) = 0;
  while (*(void *)&prime != v23);
  BOOL v24 = (void *)*((void *)a1 + 2);
  if (v24)
  {
    unint64_t v25 = v24[1];
    uint8x8_t v26 = (uint8x8_t)vcnt_s8(prime);
    v26.i16[0] = vaddlv_u8(v26);
    if (v26.u32[0] > 1uLL)
    {
      if (v25 >= *(void *)&prime) {
        v25 %= *(void *)&prime;
      }
    }
    else
    {
      v25 &= *(void *)&prime - 1;
    }
    *(void *)(*(void *)a1 + 8 * v25) = a1 + 4;
    unint64_t v30 = (void *)*v24;
    if (*v24)
    {
      do
      {
        unint64_t v31 = v30[1];
        if (v26.u32[0] > 1uLL)
        {
          if (v31 >= *(void *)&prime) {
            v31 %= *(void *)&prime;
          }
        }
        else
        {
          v31 &= *(void *)&prime - 1;
        }
        if (v31 != v25)
        {
          if (!*(void *)(*(void *)a1 + 8 * v31))
          {
            *(void *)(*(void *)a1 + 8 * v31) = v24;
            goto LABEL_56;
          }
          void *v24 = *v30;
          void *v30 = **(void **)(*(void *)a1 + 8 * v31);
          **(void **)(*(void *)a1 + 8 * v31) = v30;
          unint64_t v30 = v24;
        }
        unint64_t v31 = v25;
LABEL_56:
        BOOL v24 = v30;
        unint64_t v30 = (void *)*v30;
        unint64_t v25 = v31;
      }
      while (v30);
    }
  }
  unint64_t v9 = (unint64_t)prime;
LABEL_60:
  if ((v9 & (v9 - 1)) != 0)
  {
    if (v9 <= v7) {
      v7 %= v9;
    }
  }
  else
  {
    v7 &= v9 - 1;
  }
LABEL_64:
  BOOL v32 = *(void **)a1;
  uint8x8_t v33 = *(void **)(*(void *)a1 + 8 * v7);
  if (v33)
  {
    void *v14 = *v33;
LABEL_72:
    *uint8x8_t v33 = v14;
    goto LABEL_73;
  }
  void *v14 = *((void *)a1 + 2);
  *((void *)a1 + 2) = v14;
  v32[v7] = a1 + 4;
  if (*v14)
  {
    unint64_t v34 = *(void *)(*v14 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v34 >= v9) {
        v34 %= v9;
      }
    }
    else
    {
      v34 &= v9 - 1;
    }
    uint8x8_t v33 = (void *)(*(void *)a1 + 8 * v34);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
}

void sub_1D2CE8AC0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>>>::find<unsigned long>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (!a2) {
    return 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a3;
    if (a3 >= a2) {
      unint64_t v4 = a3 % a2;
    }
  }
  else
  {
    unint64_t v4 = (a2 - 1) & a3;
  }
  long long v5 = *(void **)(a1 + 8 * v4);
  if (!v5) {
    return 0;
  }
  BOOL result = (void *)*v5;
  if (*v5)
  {
    do
    {
      unint64_t v7 = result[1];
      if (v7 == a3)
      {
        if (result[2] == a3) {
          return result;
        }
      }
      else
      {
        if (v3.u32[0] > 1uLL)
        {
          if (v7 >= a2) {
            v7 %= a2;
          }
        }
        else
        {
          v7 &= a2 - 1;
        }
        if (v7 != v4) {
          return 0;
        }
      }
      BOOL result = (void *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t morphun::analysis::util::AttributeSource::copyTo(morphun::analysis::util::AttributeSource *this, morphun::analysis::util::AttributeSource *a2)
{
  memset(v11, 0, sizeof(v11));
  int v12 = 1065353216;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2)
  {
    unint64_t v4 = (void *)((char *)a2 + 8);
    do
    {
      uint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      npc<morphun::analysis::util::AttributeSource>((uint64_t)a2);
      unint64_t v7 = std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::find<std::type_index>(v4, *(void *)(v6 + 8));
      npc<morphun::analysis::util::AttributeSource>((uint64_t)a2);
      if (!v7)
      {
        exception = __cxa_allocate_exception(0x38uLL);
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"This AttributeSource contains AttributeImpl that is not in the target");
        morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &__dst);
      }
      if (!std::__hash_table<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>>>::find<unsigned long>(*(uint64_t *)&v11[0], *((unint64_t *)&v11[0] + 1), v5))
      {
        (*(void (**)(unint64_t, void))(*(void *)v5 + 72))(v5, v7[3]);
        std::__hash_table<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::hash<unsigned long>,std::equal_to<unsigned long>,true>,std::__unordered_map_equal<unsigned long,std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>,std::equal_to<unsigned long>,std::hash<unsigned long>,true>,std::allocator<std::__hash_value_type<unsigned long,morphun::analysis::util::AttributeImpl *>>>::__emplace_unique_key_args<unsigned long,unsigned long,morphun::analysis::util::AttributeImpl *&>((float *)v11, v5, v5, v5);
      }
      uint64_t v2 = (void *)*v2;
    }
    while (v2);
  }
  return std::__hash_table<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::map<std::u16string_view,char16_t const*> (*)(void)>>>::~__hash_table((uint64_t)v11);
}

void sub_1D2CE8CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

void virtual thunk to'morphun::analysis::util::AttributeSource::toString(morphun::analysis::util::AttributeSource *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

uint64_t **com::apple::siri::tokenizer::data::config_id::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v3[2] = xmmword_1E696BB00;
  _OWORD v3[3] = *(_OWORD *)&off_1E696BB10;
  unint64_t v4 = "(";
  v3[0] = xmmword_1E696BAE0;
  v3[1] = unk_1E696BAF0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

uint64_t morphun::dialog::StaticArticleLookupFunction::getFeatureValue(unsigned __int16 *a1, uint64_t a2)
{
  if (!*((void *)a1 + 3) || (uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2)) == 0)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    int v8 = *(char *)(v7 + 23);
    if (v8 >= 0) {
      uint64_t v9 = *(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v9 = *(void *)(v7 + 8);
    }
    if (!v9)
    {
LABEL_33:
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1D2ED0AEE);
      p_p = (void **)(*(uint64_t (**)(unsigned __int16 *, uint64_t, void **))(*(void *)a1 + 32))(a1, a2, &__p);
      if (SHIBYTE(v29) < 0) {
        operator delete(__p);
      }
      return (uint64_t)p_p;
    }
    uint8x8_t v10 = (const UChar *)v7;
    std::basic_string<char16_t> __p = 0;
    unint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v11 = *(const UChar **)v7;
    uint64_t v12 = morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v7);
    if (v8 >= 0) {
      unint64_t v13 = v10;
    }
    else {
      unint64_t v13 = v11;
    }
    p_p = &__p;
    morphun::util::StringViewUtils::lowercase((uint64_t)&__p, v13, v9, v12);
    float v15 = (unsigned __int16 *)__p;
    unint64_t v16 = v28;
    if (v29 >= 0)
    {
      float v15 = (unsigned __int16 *)&__p;
      unint64_t v16 = HIBYTE(v29);
    }
    if (*((char *)a1 + 79) < 0)
    {
      BOOL v17 = (unsigned __int16 *)*((void *)a1 + 7);
      unint64_t v18 = *((void *)a1 + 8);
    }
    else
    {
      BOOL v17 = a1 + 28;
      unint64_t v18 = *((unsigned __int8 *)a1 + 79);
    }
    if (v16 < v18) {
      goto LABEL_29;
    }
    if (!v18) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 - 1;
    do
    {
      int v21 = *v15++;
      int v20 = v21;
      int v23 = *v17++;
      int v22 = v23;
      BOOL v25 = v19-- != 0;
    }
    while (v22 == v20 && v25);
    if (v22 != v20)
    {
LABEL_29:
      p_p = (void **)(*(uint64_t (**)(unsigned __int16 *, uint64_t, void *))(*(void *)a1 + 32))(a1, a2, (void *)a1 + 4);
      int v26 = 0;
      if (v29 < 0) {
        goto LABEL_32;
      }
    }
    else
    {
LABEL_27:
      int v26 = 1;
      if (v29 < 0)
      {
LABEL_32:
        operator delete(__p);
        if (v26) {
          goto LABEL_33;
        }
        return (uint64_t)p_p;
      }
    }
    if (v26) {
      goto LABEL_33;
    }
    return (uint64_t)p_p;
  }
  uint64_t v5 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)a1 + 32);

  return v5(a1, a2, v4);
}

void sub_1D2CE8FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::StaticArticleLookupFunction::~StaticArticleLookupFunction(void **this)
{
  *this = &off_1F2A098A0;
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  if (*((char *)this + 55) < 0) {
    operator delete(this[4]);
  }

  JUMPOUT(0x1D942B8B0);
}

{
  *this = &off_1F2A098A0;
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  if (*((char *)this + 55) < 0) {
    operator delete(this[4]);
  }
}

uint64_t morphun::dialog::StaticArticleLookupFunction::StaticArticleLookupFunction(uint64_t a1, uint64_t a2, char *a3, char *a4)
{
  *(void *)a1 = &unk_1F29F4F40;
  int v8 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A05510, a2, 1, 1);
  *(void *)int v8 = &off_1F2A098A0;
  *((void *)v8 + 3) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>((void *)v8 + 4, a4);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, a4);
  std::basic_string<char16_t>::append(&__dst, &word_1D2ED0D7C, 1uLL);
  *(std::basic_string<char16_t> *)(a1 + 56) = __dst;
  if (a3)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, a3);
    uint64_t v9 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)&__dst);
    if (a2 + 16 == v9) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = *(void *)(v9 + 56);
    }
    *(void *)(a1 + 24) = v10;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1D2CE9210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 79) < 0) {
    operator delete(*v17);
  }
  if (*(char *)(v15 + 55) < 0) {
    operator delete(*v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *morphun::analysis::Analyzer_ReuseStrategy::Analyzer_ReuseStrategy(uint64_t *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  return this;
}

morphun::analysis *morphun::analysis::Analyzer_ReuseStrategy::getStoredValue(morphun::analysis::Analyzer_ReuseStrategy *this, morphun::analysis::Analyzer *a2)
{
  uint8x8_t v3 = (morphun::analysis *)npc<morphun::analysis::Analyzer>((uint64_t)a2);
  uint64_t v4 = (std::mutex *)morphun::analysis::CLASS_MUTEX(v3);
  std::mutex::lock(v4);
  if (*((void *)a2 + 7))
  {
    uint64_t v5 = (uint64_t *)*((void *)a2 + 5);
    uint64_t v6 = (morphun::analysis *)v5[4];
    std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__remove_node_pointer((uint64_t **)a2 + 5, v5);
    operator delete(v5);
  }
  else
  {
    std::mutex::unlock(v4);
    uint64_t v6 = (morphun::analysis *)(*(uint64_t (**)(morphun::analysis::Analyzer *))(*(void *)a2 + 24))(a2);
    uint64_t v4 = (std::mutex *)morphun::analysis::CLASS_MUTEX(v6);
    std::mutex::lock(v4);
    std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__emplace_unique_key_args<morphun::analysis::Analyzer_TokenStreamComponents *,morphun::analysis::Analyzer_TokenStreamComponents * const&>((uint64_t *)a2 + 2, (unint64_t)v6, (uint64_t)v6);
  }
  std::mutex::unlock(v4);
  return v6;
}

void sub_1D2CE93B8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::analysis::Analyzer>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CE941C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::CLASS_MUTEX(morphun::analysis *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::analysis::CLASS_MUTEX(void)::classMutex;
  if (!morphun::analysis::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CE94F4(_Unwind_Exception *a1)
{
}

uint64_t *std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint8x8_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = a2;
    do
    {
      uint8x8_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      uint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  uint64_t v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  return std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
}

uint64_t *std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__emplace_unique_key_args<morphun::analysis::Analyzer_TokenStreamComponents *,morphun::analysis::Analyzer_TokenStreamComponents * const&>(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v6 = (uint64_t **)(result + 1);
  BOOL v5 = (uint64_t *)result[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v5;
        unint64_t v8 = v5[4];
        if (v8 <= a2) {
          break;
        }
        BOOL v5 = *v7;
        uint64_t v6 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      BOOL v5 = v7[1];
      if (!v5)
      {
        uint64_t v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v7 = (uint64_t **)(result + 1);
LABEL_9:
    uint64_t v9 = (uint64_t *)operator new(0x28uLL);
    v9[4] = a3;
    uint64_t *v9 = 0;
    v9[1] = 0;
    v9[2] = (uint64_t)v7;
    *uint64_t v6 = v9;
    uint64_t v10 = *(void *)*v4;
    if (v10)
    {
      *uint64_t v4 = v10;
      uint64_t v11 = *v6;
    }
    else
    {
      uint64_t v11 = v9;
    }
    uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v4[1], v11);
    ++v4[2];
  }
  return result;
}

void morphun::analysis::Analyzer_ReuseStrategy::setStoredValue(morphun::analysis::Analyzer_ReuseStrategy *this, morphun::analysis::Analyzer *a2, morphun::analysis::Analyzer_TokenStreamComponents *a3)
{
  BOOL v5 = (std::mutex *)morphun::analysis::CLASS_MUTEX(this);
  std::mutex::lock(v5);
  npc<morphun::analysis::Analyzer>((uint64_t)a2);
  if (*((void *)a2 + 7) > 0x3FuLL)
  {
    unint64_t v8 = (void *)*((void *)a2 + 3);
    uint64_t v7 = (uint64_t *)((char *)a2 + 24);
    uint64_t v6 = v8;
    if (v8)
    {
      uint64_t v9 = v7;
      do
      {
        unint64_t v10 = v6[4];
        BOOL v11 = v10 >= (unint64_t)a3;
        if (v10 >= (unint64_t)a3) {
          uint64_t v12 = v6;
        }
        else {
          uint64_t v12 = v6 + 1;
        }
        if (v11) {
          uint64_t v9 = v6;
        }
        uint64_t v6 = (void *)*v12;
      }
      while (*v12);
      if (v9 != v7 && v9[4] <= (unint64_t)a3)
      {
        std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__remove_node_pointer((uint64_t **)v7 - 1, v9);
        operator delete(v9);
      }
    }
    if (a3) {
      (*(void (**)(morphun::analysis::Analyzer_TokenStreamComponents *))(*(void *)a3 + 16))(a3);
    }
  }
  else
  {
    std::__tree<morphun::analysis::Analyzer_TokenStreamComponents *>::__emplace_unique_key_args<morphun::analysis::Analyzer_TokenStreamComponents *,morphun::analysis::Analyzer_TokenStreamComponents * const&>((uint64_t *)a2 + 5, (unint64_t)a3, (uint64_t)a3);
  }

  std::mutex::unlock(v5);
}

void sub_1D2CE9718(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t *marisa::Keyset::push_back(uint64_t *this, const char *a2, size_t __sz, float a4)
{
  BOOL v5 = a2;
  uint64_t v6 = this;
  if (!a2 && __sz)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
    exception[2] = 0x20000003DLL;
    unint64_t v54 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:61: MARISA_NULL_"
          "ERROR: (ptr == NULL) && (length != 0)";
    goto LABEL_73;
  }
  if (HIDWORD(__sz))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
    exception[2] = 0x70000003ELL;
    unint64_t v54 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:62: MARISA_SIZE_"
          "ERROR: length > MARISA_UINT32_MAX";
    goto LABEL_73;
  }
  unint64_t v7 = this[11];
  unint64_t v8 = v7 >> 8;
  if (v7 >> 8 == this[7])
  {
    if (v8 == this[8])
    {
      if (v7 < 0x100) {
        uint64_t v9 = 1;
      }
      else {
        uint64_t v9 = 2 * v8;
      }
      unint64_t v10 = operator new[](8 * v9 + 16, MEMORY[0x1E4FBA2D0]);
      if (!v10)
      {
        uint64_t v58 = 0;
        unint64_t v55 = __cxa_allocate_exception(0x20uLL);
        *unint64_t v55 = &unk_1F2A081F8;
        v55[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
        v55[2] = 0x8000000A9;
        v55[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:169: MARI"
                 "SA_MEMORY_ERROR: new_blocks.get() == NULL";
      }
      *unint64_t v10 = 8;
      v10[1] = v9;
      uint64_t v11 = (uint64_t)(v10 + 2);
      if (v9) {
        bzero(v10 + 2, 8 * v9);
      }
      uint64_t v58 = v11;
      if (v7 >= 0x100)
      {
        uint64_t v12 = 0;
        do
        {
          uint64_t v13 = v6[6];
          uint64_t v14 = v58;
          uint64_t v15 = *(void *)(v13 + v12);
          *(void *)(v13 + v12) = *(void *)(v58 + v12);
          *(void *)(v14 + v12) = v15;
          v12 += 8;
        }
        while (8 * v8 != v12);
        uint64_t v11 = v58;
      }
      uint64_t v16 = v6[6];
      v6[6] = v11;
      uint64_t v58 = v16;
      v6[8] = v9;
      marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array(&v58);
    }
    BOOL v17 = operator new[](0x1000uLL, MEMORY[0x1E4FBA2D0]);
    if (!v17)
    {
      exception = __cxa_allocate_exception(0x20uLL);
      void *exception = &unk_1F2A081F8;
      exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
      exception[2] = 0x8000000B1;
      unint64_t v54 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:177: MARISA_ME"
            "MORY_ERROR: new_block.get() == NULL";
      goto LABEL_73;
    }
    unint64_t v18 = v17;
    bzero(v17, 0x1000uLL);
    uint64_t v20 = v6[6];
    uint64_t v19 = v6[7];
    v6[7] = v19 + 1;
    this = *(uint64_t **)(v20 + 8 * v19);
    *(void *)(v20 + 8 * v19) = v18;
    if (this) {
      this = (uint64_t *)MEMORY[0x1D942B890](this, 0x1050C80717B85FCLL);
    }
  }
  if (__sz < 0x401)
  {
    size_t v36 = v6[10];
    if (v36 >= __sz)
    {
      unint64_t v35 = (unsigned char *)v6[9];
    }
    else
    {
      uint64_t v37 = v6[1];
      if (v37 == v6[2])
      {
        if (v37) {
          unint64_t v38 = 2 * v37;
        }
        else {
          unint64_t v38 = 1;
        }
        BOOL v39 = v38 >> 61 != 0;
        if (8 * v38 >= 0xFFFFFFFFFFFFFFF0) {
          BOOL v39 = 1;
        }
        if (v39) {
          size_t v40 = -1;
        }
        else {
          size_t v40 = 8 * v38 + 16;
        }
        unint64_t v41 = operator new[](v40, MEMORY[0x1E4FBA2D0]);
        if (!v41)
        {
          uint64_t v58 = 0;
          unint64_t v57 = __cxa_allocate_exception(0x20uLL);
          *unint64_t v57 = &unk_1F2A081F8;
          v57[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
          v57[2] = 0x800000081;
          v57[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:129: MA"
                   "RISA_MEMORY_ERROR: new_blocks.get() == NULL";
        }
        *unint64_t v41 = 8;
        v41[1] = v38;
        uint64_t v42 = (uint64_t)(v41 + 2);
        if (v38) {
          bzero(v41 + 2, 8 * v38);
        }
        uint64_t v58 = v42;
        if (v37)
        {
          for (uint64_t i = 0; i != v37; ++i)
          {
            uint64_t v44 = v58;
            uint64_t v45 = *(void *)(*v6 + 8 * i);
            *(void *)(*v6 + 8 * i) = *(void *)(v58 + 8 * i);
            *(void *)(v44 + 8 * i) = v45;
          }
          uint64_t v42 = v58;
        }
        uint64_t v46 = *v6;
        *uint64_t v6 = v42;
        uint64_t v58 = v46;
        v6[2] = v38;
        this = marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array(&v58);
        uint64_t v37 = v6[1];
      }
      uint64_t v47 = *v6;
      unint64_t v35 = *(unsigned char **)(*v6 + 8 * v37);
      if (!v35)
      {
        this = (uint64_t *)operator new[](0x1000uLL, MEMORY[0x1E4FBA2D0]);
        if (!this)
        {
          exception = __cxa_allocate_exception(0x20uLL);
          void *exception = &unk_1F2A081F8;
          exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
          exception[2] = 0x80000008ALL;
          unint64_t v54 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:138: MARIS"
                "A_MEMORY_ERROR: new_block.get() == NULL";
LABEL_73:
          exception[3] = v54;
        }
        *(void *)(v47 + 8 * v37) = this;
        unint64_t v35 = *(unsigned char **)(*v6 + 8 * v37);
      }
      v6[1] = v37 + 1;
      size_t v36 = 4096;
      v6[9] = (uint64_t)v35;
      v6[10] = 4096;
    }
    v6[9] = (uint64_t)&v35[__sz];
    v6[10] = v36 - __sz;
    if (!__sz) {
      goto LABEL_68;
    }
    goto LABEL_66;
  }
  uint64_t v21 = v6[4];
  if (v21 == v6[5])
  {
    if (v21) {
      unint64_t v22 = 2 * v21;
    }
    else {
      unint64_t v22 = 1;
    }
    BOOL v23 = v22 >> 61 != 0;
    if (8 * v22 >= 0xFFFFFFFFFFFFFFF0) {
      BOOL v23 = 1;
    }
    if (v23) {
      size_t v24 = -1;
    }
    else {
      size_t v24 = 8 * v22 + 16;
    }
    BOOL v25 = operator new[](v24, MEMORY[0x1E4FBA2D0]);
    if (!v25)
    {
      uint64_t v58 = 0;
      unint64_t v56 = __cxa_allocate_exception(0x20uLL);
      *unint64_t v56 = &unk_1F2A081F8;
      v56[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
      v56[2] = 0x800000097;
      v56[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:151: MARISA"
               "_MEMORY_ERROR: new_blocks.get() == NULL";
    }
    *BOOL v25 = 8;
    v25[1] = v22;
    uint64_t v26 = (uint64_t)(v25 + 2);
    if (v22) {
      bzero(v25 + 2, 8 * v22);
    }
    uint64_t v58 = v26;
    if (v21)
    {
      for (uint64_t j = 0; j != v21; ++j)
      {
        uint64_t v28 = v6[3];
        uint64_t v29 = v58;
        uint64_t v30 = *(void *)(v28 + 8 * j);
        *(void *)(v28 + 8 * j) = *(void *)(v58 + 8 * j);
        *(void *)(v29 + 8 * j) = v30;
      }
      uint64_t v26 = v58;
    }
    uint64_t v31 = v6[3];
    uint64_t v6[3] = v26;
    uint64_t v58 = v31;
    v6[5] = v22;
    marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array(&v58);
  }
  this = (uint64_t *)operator new[](__sz, MEMORY[0x1E4FBA2D0]);
  if (!this)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc";
    exception[2] = 0x80000009FLL;
    unint64_t v54 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/keyset.cc:159: MARISA_MEMO"
          "RY_ERROR: new_block.get() == NULL";
    goto LABEL_73;
  }
  uint64_t v33 = v6[3];
  uint64_t v32 = v6[4];
  v6[4] = v32 + 1;
  uint64_t v34 = *(void *)(v33 + 8 * v32);
  *(void *)(v33 + 8 * v32) = this;
  if (v34)
  {
    this = (uint64_t *)MEMORY[0x1D942B890](v34, 0x1000C8077774924);
    uint64_t v32 = v6[4] - 1;
  }
  unint64_t v35 = *(unsigned char **)(v6[3] + 8 * v32);
LABEL_66:
  unint64_t v48 = v35;
  size_t v49 = __sz;
  do
  {
    char v50 = *v5++;
    *v48++ = v50;
    --v49;
  }
  while (v49);
LABEL_68:
  uint64_t v51 = *(void *)(v6[6] + (((unint64_t)v6[11] >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v6[11];
  *(void *)uint64_t v51 = v35;
  *(_DWORD *)(v51 + 8) = __sz;
  *(_DWORD *)(v51 + 12) = 1065353216;
  uint64_t v52 = v6[12] + __sz;
  ++v6[11];
  v6[12] = v52;
  return this;
}

void sub_1D2CE9DA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *morphun::analysis::stemmer::NordicStemFilter::reset(morphun::analysis::stemmer::NordicStemFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 14) = result;
  return result;
}

uint64_t morphun::analysis::stemmer::NordicStemFilter::incrementToken(morphun::analysis::stemmer::NordicStemFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = *((void *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
    {
      BOOL v5 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      uint64_t v6 = (char *)v5 + *(void *)(*v5 - 96);
      unint64_t v7 = (char *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      (*(void (**)(long long *__return_ptr, morphun::analysis::stemmer::NordicStemFilter *, char *))(*(void *)this + 56))(&v11, this, &v7[*(void *)(*(void *)v7 - 96)]);
      if (v6[23] < 0) {
        operator delete(*(void **)v6);
      }
      long long v8 = v11;
      *((void *)v6 + 2) = v12;
      *(_OWORD *)uint64_t v6 = v8;
    }
  }
  return v3;
}

void sub_1D2CE9F74(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CE9FD8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::stemmer::NordicStemFilter *morphun::analysis::stemmer::NordicStemFilter::NordicStemFilter(morphun::analysis::stemmer::NordicStemFilter *this, morphun::analysis::TokenStream *a2, uint64_t a3)
{
  BOOL v5 = morphun::analysis::TokenFilter::TokenFilter(this, (morphun::analysis::TokenStream *)((char *)a2 + 8), a3);
  uint64_t v6 = *(void *)a2;
  *(void *)BOOL v5 = *(void *)a2;
  *(void *)((char *)this + *(void *)(v6 - 40)) = *((void *)a2 + 7);
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)this);
  return this;
}

void sub_1D2CEA0BC(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter::~TokenFilter(v1, v2);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(std::basic_string<char16_t> *a1, unsigned __int16 **a2, unsigned __int16 **a3)
{
  if (a2 == a3) {
    return 0;
  }
  unint64_t size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = (std::basic_string<char16_t> *)a1->__r_.__value_.__r.__words[0];
  }
  if ((size & 0x80u) != 0) {
    unint64_t size = a1->__r_.__value_.__l.__size_;
  }
  uint64_t v5 = (uint64_t)v4 + 2 * size;
  while (1)
  {
    uint64_t v6 = a2[1];
    if (size >= (unint64_t)v6)
    {
      if (!v6) {
        break;
      }
      unint64_t v7 = *a2;
      uint64_t v8 = -(uint64_t)v6;
      do
      {
        int v9 = *(unsigned __int16 *)(v5 + 2 * v8);
        int v11 = *v7++;
        int v10 = v11;
      }
      while (v11 == v9 && v8++ != -1);
      if (v10 == v9) {
        break;
      }
    }
    a2 += 2;
    if (a2 == a3) {
      return 0;
    }
  }
  std::basic_string<char16_t>::resize(a1, size - 1, 0);
  return 1;
}

uint64_t morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(std::basic_string<char16_t> *a1, unsigned __int16 **a2, unsigned __int16 **a3)
{
  if (a2 == a3) {
    return 0;
  }
  uint64_t v3 = (std::basic_string<char16_t> *)a1->__r_.__value_.__r.__words[0];
  if ((a1->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    unint64_t size = a1->__r_.__value_.__l.__size_;
  }
  else
  {
    uint64_t v3 = a1;
    unint64_t size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  uint64_t v5 = (uint64_t)v3 + 2 * size;
  while (1)
  {
    uint64_t v6 = a2[1];
    std::basic_string<char16_t>::size_type v7 = size - (void)v6;
    if (size >= (unint64_t)v6)
    {
      if (!v6) {
        break;
      }
      uint64_t v8 = *a2;
      uint64_t v9 = -(uint64_t)v6;
      do
      {
        int v10 = *(unsigned __int16 *)(v5 + 2 * v9);
        int v12 = *v8++;
        int v11 = v12;
      }
      while (v12 == v10 && v9++ != -1);
      if (v11 == v10) {
        break;
      }
    }
    a2 += 2;
    if (a2 == a3) {
      return 0;
    }
  }
  std::basic_string<char16_t>::resize(a1, v7, 0);
  return 1;
}

uint64_t morphun::analysis::stemmer::NordicStemFilter::isVowel(morphun::dictionary::PhraseProperties *a1)
{
  char v7 = 1;
  LODWORD(__p) = (unsigned __int16)a1;
  uint64_t v1 = (morphun::dictionary::PhraseProperties *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(a1);
  uint64_t v2 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_END(v1);
  memset(v5, 0, sizeof(v5));
  uint64_t isStartsWithUnicodeSets = morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets((uint64_t)&__p, v1, v2, v5);
  if (v7 < 0) {
    operator delete(__p);
  }
  return isStartsWithUnicodeSets;
}

void sub_1D2CEA288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::stemmer::NordicStemFilter::getR1Start(uint64_t *a1)
{
  uint64_t v2 = 0;
  int v3 = 0;
  if (*((char *)a1 + 23) >= 0) {
    uint64_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    uint64_t v4 = *((unsigned int *)a1 + 2);
  }
  while ((v4 & ~((int)v4 >> 31)) != v2)
  {
    int v5 = v3;
    uint64_t v6 = v2;
    if (*((char *)a1 + 23) >= 0) {
      char v7 = a1;
    }
    else {
      char v7 = (uint64_t *)*a1;
    }
    int isVowel = morphun::analysis::stemmer::NordicStemFilter::isVowel((morphun::dictionary::PhraseProperties *)*((unsigned __int16 *)v7 + v6));
    int v3 = v5 | isVowel;
    uint64_t v2 = v6 + 1;
    if ((isVowel & 1) == 0 && ((v5 ^ 1) & 1) == 0)
    {
      if (v6 >= 3) {
        return v2;
      }
      else {
        return 3;
      }
    }
  }
  return v4;
}

void morphun::dialog::language::RoCommonConceptFactory::~RoCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05B28);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05B28);
}

uint64_t morphun::util::MemoryMappedFile::MemoryMappedFile(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (const void **)a2;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
  memset(&v17, 0, sizeof(v17));
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    int v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    int v5 = v4;
  }
  morphun::util::StringViewUtils::convert(&v17, a2, v5);
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v6 = &v17;
  }
  else {
    uint64_t v6 = (std::string *)v17.__r_.__value_.__r.__words[0];
  }
  int v7 = open((const char *)v6, 0);
  int v16 = v7;
  if (v7 < 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v15, "C", v2);
    morphun::exception::IOException::IOException((uint64_t)exception, (long long *)&v15.st_dev);
  }
  memset(&v15, 0, sizeof(v15));
  if (fstat(v7, &v15) < 0 || (v15.st_mode & 0xF000) != 0x8000)
  {
    int v11 = __cxa_allocate_exception(0x38uLL);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, v2, L" is not a regular file");
    morphun::exception::IOException::IOException((uint64_t)v11, &v14);
  }
  st_unint64_t size = v15.st_size;
  *(void *)(a1 + 8) = v15.st_size;
  uint64_t v9 = mmap(0, st_size, 1, 2, v16, 0);
  if (v9 == (void *)-1)
  {
    uint64_t v13 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v14, "M", v2);
    morphun::exception::IOException::IOException((uint64_t)v13, &v14);
  }
  *(void *)a1 = v9;
  *(unsigned char *)(a1 + 24) = 1;
  morphun::util::AutoFileDescriptor::~AutoFileDescriptor((morphun::util::AutoFileDescriptor *)&v16);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1D2CEA5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v22 & 1) == 0)
    {
LABEL_6:
      morphun::util::AutoFileDescriptor::~AutoFileDescriptor((morphun::util::AutoFileDescriptor *)(v23 - 60));
      if (*(char *)(v23 - 33) < 0) {
        operator delete(*(void **)(v23 - 56));
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v22)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v21);
  goto LABEL_6;
}

uint64_t morphun::util::MemoryMappedFile::MemoryMappedFile(uint64_t this, char *a2, uint64_t a3)
{
  *(void *)this = a2;
  *(void *)(this + 8) = a3;
  *(void *)(this + 16) = 0;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

{
  *(void *)this = a2;
  *(void *)(this + 8) = a3;
  *(void *)(this + 16) = 0;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

void morphun::util::MemoryMappedFile::~MemoryMappedFile(morphun::util::MemoryMappedFile *this)
{
  if (*((unsigned char *)this + 24))
  {
    uint64_t v2 = *(void **)this;
    if (*(void *)this) {
      munmap(v2, *((void *)this + 1));
    }
  }
}

void morphun::grammar::synthesis::CsGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::CsGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2CEA9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t morphun::tokenizer::locale::th::ThTokenExtractorIterator::reset(uint64_t a1, const UniChar *a2, CFIndex a3)
{
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = a3;
  morphun::tokenizer::ICUTokenExtractorIterator::reset();
  CFStringRef v6 = CFStringCreateWithCharactersNoCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a2, a3, (CFAllocatorRef)*MEMORY[0x1E4F1CFA0]);
  ThaiTokenizerSetStringWithRange();
  CFRelease(v6);
  *(_OWORD *)(a1 + 64) = xmmword_1D2D6F570;
  *(_DWORD *)(a1 + 80) = 0;

  return morphun::tokenizer::locale::th::ThTokenExtractorIterator::calculateNextForeignRange((morphun::tokenizer::locale::th::ThTokenExtractorIterator *)a1);
}

uint64_t morphun::tokenizer::locale::th::ThTokenExtractorIterator::calculateNextForeignRange(morphun::tokenizer::locale::th::ThTokenExtractorIterator *this)
{
  uint64_t v2 = *((int *)this + 20);
  int v3 = MEMORY[0x1D942C1D0](*(void *)(*((void *)this + 1) + 152), *((void *)this + 6) + 2 * v2, (*((_DWORD *)this + 14) - v2), 1)+ v2;
  *((_DWORD *)this + 19) = v3;
  uint64_t v4 = *((void *)this + 7);
  if ((int)v4 > v3)
  {
    LODWORD(v4) = MEMORY[0x1D942C1D0](*(void *)(*((void *)this + 1) + 152), *((void *)this + 6) + 2 * v3, (v4 - v3), 0)+ v3;
    int v3 = *((_DWORD *)this + 19);
  }
  unint64_t v5 = *((void *)this + 7);
  *((_DWORD *)this + 20) = v4;
  if (v5 < v3) {
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  }

  return morphun::tokenizer::ICUTokenExtractorIterator::reset();
}

uint64_t morphun::tokenizer::locale::th::ThTokenExtractorIterator::getNextBoundary(morphun::tokenizer::locale::th::ThTokenExtractorIterator *this)
{
  int v1 = *((_DWORD *)this + 16);
  uint64_t v2 = *((void *)this + 7);
  if (v1 == v2)
  {
    if (v2 == v1) {
      return 0xFFFFFFFFLL;
    }
    else {
      return v1;
    }
  }
  int v5 = *((_DWORD *)this + 20);
  if (*((_DWORD *)this + 19) > v1 || v1 >= v5)
  {
    if (v1 >= v5)
    {
      morphun::tokenizer::locale::th::ThTokenExtractorIterator::calculateNextForeignRange(this);
      int v1 = *((_DWORD *)this + 16);
    }
    uint64_t result = *((unsigned int *)this + 18);
    if (v1 >= (int)result)
    {
      while (ThaiTokenizerAdvanceToNextToken())
      {
        int CurrentTokenRange = ThaiTokenizerGetCurrentTokenRange();
        uint64_t result = (CurrentTokenRange + v8);
        *((_DWORD *)this + 17) = CurrentTokenRange;
        *((_DWORD *)this + 18) = result;
        if (*((_DWORD *)this + 16) < (int)result) {
          goto LABEL_20;
        }
      }
      uint64_t result = *((unsigned int *)this + 18);
LABEL_20:
      uint64_t v9 = *((unsigned int *)this + 19);
      if ((int)result > (int)v9)
      {
        *((_DWORD *)this + 16) = v9;
        return v9;
      }
    }
    else if (*((_DWORD *)this + 19) <= (int)result)
    {
      goto LABEL_13;
    }
    *((_DWORD *)this + 16) = result;
    return result;
  }
LABEL_13:

  return morphun::tokenizer::locale::th::ThTokenExtractorIterator::getNextForeignBoundary(this);
}

uint64_t morphun::tokenizer::locale::th::ThTokenExtractorIterator::getNextForeignBoundary(morphun::tokenizer::locale::th::ThTokenExtractorIterator *this)
{
  int v2 = *((_DWORD *)this + 16);
  uint64_t result = *((unsigned int *)this + 19);
  if (v2 >= (int)result)
  {
    int v4 = ubrk_next();
    uint64_t result = *((unsigned int *)this + 20);
    if (v4 <= (int)result) {
      uint64_t result = (*((_DWORD *)this + 19) + v4);
    }
  }
  *((_DWORD *)this + 16) = result;
  return result;
}

void morphun::tokenizer::locale::th::ThTokenExtractorIterator::~ThTokenExtractorIterator(morphun::tokenizer::locale::th::ThTokenExtractorIterator *this)
{
  morphun::tokenizer::locale::th::ThTokenExtractorIterator::~ThTokenExtractorIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  std::mutex *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  int v2 = *((void *)this + 2);
  int v3 = (std::mutex *)morphun::tokenizer::locale::th::CLASS_MUTEX(this);
  std::mutex::lock(v3);
  if (v2)
  {
    int v4 = morphun::tokenizer::locale::th::gTokenizerCache;
    if (morphun::tokenizer::locale::th::gTokenizerCache
      && (CFStringRef v6 = *(void **)morphun::tokenizer::locale::th::gTokenizerCache,
          int v5 = *(void **)(morphun::tokenizer::locale::th::gTokenizerCache + 8),
          int v7 = (uint64_t)v5 - *(void *)morphun::tokenizer::locale::th::gTokenizerCache,
          (unint64_t)v7 <= 0x207))
    {
      int v8 = *(void *)(morphun::tokenizer::locale::th::gTokenizerCache + 16);
      if ((unint64_t)v5 >= v8)
      {
        int v10 = v7 >> 3;
        int v11 = (v7 >> 3) + 1;
        if (v11 >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        int v12 = v8 - (void)v6;
        if (v12 >> 2 > v11) {
          int v11 = v12 >> 2;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
          uint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v13 = v11;
        }
        if (v13)
        {
          if (v13 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          long long v14 = (char *)operator new(8 * v13);
        }
        else
        {
          long long v14 = 0;
        }
        stat v15 = &v14[8 * v10];
        *(void *)stat v15 = v2;
        uint64_t v9 = v15 + 8;
        if (v5 != v6)
        {
          do
          {
            int v16 = *--v5;
            *((void *)v15 - 1) = v16;
            v15 -= 8;
          }
          while (v5 != v6);
          int v5 = *(void **)v4;
        }
        *(void *)int v4 = v15;
        *(void *)(v4 + 8) = v9;
        *(void *)(v4 + 16) = &v14[8 * v13];
        if (v5) {
          operator delete(v5);
        }
      }
      else
      {
        *int v5 = v2;
        uint64_t v9 = v5 + 1;
      }
      *(void *)(v4 + 8) = v9;
    }
    else
    {
      ThaiTokenizerDestroy();
    }
  }
  std::mutex::unlock(v3);
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator((morphun::tokenizer::locale::th::ThTokenExtractorIterator *)((char *)this + 24));
}

void sub_1D2CEAFAC()
{
}

uint64_t morphun::tokenizer::locale::th::CLASS_MUTEX(morphun::tokenizer::locale::th *this)
{
  {
    operator new();
  }
  uint64_t result = morphun::tokenizer::locale::th::CLASS_MUTEX(void)::classMutex;
  if (!morphun::tokenizer::locale::th::CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CEB090(_Unwind_Exception *a1)
{
}

void morphun::dictionary::Inflector::~Inflector(morphun::dictionary::Inflector *this)
{
  *(void *)this = &unk_1F2A08570;
  morphun::dictionary::Inflector_MMappedDictionary::~Inflector_MMappedDictionary((morphun::dictionary::Inflector *)((char *)this + 8));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &unk_1F2A08570;
  morphun::dictionary::Inflector_MMappedDictionary::~Inflector_MMappedDictionary((morphun::dictionary::Inflector *)((char *)this + 8));
}

uint64_t morphun::dictionary::Inflector::getInflector(morphun::dictionary::Inflector *this, const morphun::util::ULocale *a2)
{
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(this, a2);
  if (!Dictionary || (uint64_t v3 = *(void *)(Dictionary + 8)) == 0)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t result = *(void *)(v3 + 392);
  if (!result)
  {
    CFStringRef v6 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char>();
    if ((v11 & 0x80u) == 0) {
      int v7 = (const char *)&v9;
    }
    else {
      int v7 = v9;
    }
    if ((v11 & 0x80u) == 0) {
      int32_t v8 = v11;
    }
    else {
      int32_t v8 = v10;
    }
    morphun::util::StringViewUtils::to_u16string(v7, v8, &v12);
    morphun::exception::NullPointerException::NullPointerException((uint64_t)v6, (long long *)&v12);
  }
  return result;
}

void sub_1D2CEB268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v20);
  goto LABEL_8;
}

uint64_t morphun::dictionary::Inflector::Inflector(uint64_t a1, morphun::util::MemoryMappedFile *a2, const void **a3, uint64_t a4)
{
  *(void *)a1 = &unk_1F2A08570;
  int32_t v8 = (morphun::util::ULocale *)(a1 + 8);
  uint64_t v26 = 0;
  morphun::util::MemoryMappedFile::read<long long>(a2, &v26);
  uint64_t v9 = v26;
  if (v26 != (morphun::util::StringUtils *)3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v21, L"Inflection file ", a3);
    std::basic_string<char16_t>::append(&v21, (const std::basic_string<char16_t>::value_type *)" ", 0x1DuLL);
    std::basic_string<char16_t> v22 = v21;
    memset(&v21, 0, sizeof(v21));
    morphun::util::StringUtils::to_u16string(v9, &v20);
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v14 = &v20;
    }
    else {
      long long v14 = (std::basic_string<char16_t> *)v20.__r_.__value_.__r.__words[0];
    }
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v20.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v22, (const std::basic_string<char16_t>::value_type *)v14, size);
    std::basic_string<char16_t> v23 = v22;
    memset(&v22, 0, sizeof(v22));
    std::basic_string<char16_t>::append(&v23, (const std::basic_string<char16_t>::value_type *)" ", 0x16uLL);
    std::basic_string<char16_t> v24 = v23;
    memset(&v23, 0, sizeof(v23));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)3, &v19);
    if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v16 = &v19;
    }
    else {
      int v16 = (std::basic_string<char16_t> *)v19.__r_.__value_.__r.__words[0];
    }
    if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v17 = HIBYTE(v19.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v17 = v19.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v24, (const std::basic_string<char16_t>::value_type *)v16, v17);
    std::basic_string<char16_t> v25 = v24;
    memset(&v24, 0, sizeof(v24));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (long long *)&v25);
    void *exception = &unk_1F2A114E8;
  }
  v23.__r_.__value_.__s.__data_[0] = 0;
  morphun::util::MemoryMappedFile::read<short>(a2, &v23);
  if (v23.__r_.__value_.__s.__data_[0] != 1)
  {
    unint64_t v18 = __cxa_allocate_exception(0x38uLL);
    std::operator+<char16_t>((uint64_t)&v24, L"Inflection file ", a3);
    std::basic_string<char16_t>::append(&v24, L" was built for a different architecture", 0x27uLL);
    std::basic_string<char16_t> v25 = v24;
    memset(&v24, 0, sizeof(v24));
    morphun::exception::Throwable::Throwable((uint64_t)v18, (long long *)&v25);
    *unint64_t v18 = &unk_1F2A11298;
  }
  morphun::util::MemoryMappedFile::read<char *>(a2, &v25, 2uLL);
  morphun::util::ULocale::ULocale(v8, (const morphun::util::ULocale *)(a4 + 16));
  LODWORD(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, &v25);
  uint64_t data_low = SLODWORD(v25.__r_.__value_.__l.__data_);
  *(_DWORD *)(a1 + 136) = v25.__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<long long *>(a2, &v25, 8 * data_low);
  *(void *)(a1 + 144) = v25.__r_.__value_.__r.__words[0];
  morphun::dictionary::metadata::StringContainer::StringContainer((morphun::dictionary::metadata::StringContainer *)(a1 + 152), a2);
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 192) = a4;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 216) = 0;
  *(unsigned char *)(a1 + 224) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, (_DWORD *)(a1 + 200));
  morphun::util::MemoryMappedFile::read<int>(a2, (_DWORD *)(a1 + 204));
  morphun::util::MemoryMappedFile::read<unsigned long long *>(a2, (void *)(a1 + 208), 8 * *(int *)(a1 + 200));
  *(void *)(a1 + 216) = ~(-1 << *(_DWORD *)(a1 + 204));
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 232) = v25.__r_.__value_.__l.__data_;
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 233) = v25.__r_.__value_.__l.__data_;
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 234) = v25.__r_.__value_.__l.__data_;
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 235) = v25.__r_.__value_.__l.__data_;
  LODWORD(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, &v25);
  uint64_t v11 = SLODWORD(v25.__r_.__value_.__l.__data_);
  *(_DWORD *)(a1 + 236) = v25.__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<int *>(a2, &v25, 4 * v11);
  *(void *)(a1 + 240) = v25.__r_.__value_.__r.__words[0];
  morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie(a1 + 248, a2);
  morphun::dictionary::metadata::MarisaTrie<int>::MarisaTrie(a1 + 312, a2);
  morphun::dictionary::metadata::CompressedArray<int>::CompressedArray((int *)(a1 + 376), a2);
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 408) = v25.__r_.__value_.__l.__data_;
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 409) = v25.__r_.__value_.__l.__data_;
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 410) = v25.__r_.__value_.__l.__data_;
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 411) = v25.__r_.__value_.__l.__data_;
  LOBYTE(v25.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v25);
  *(unsigned char *)(a1 + 412) = v25.__r_.__value_.__l.__data_;
  *(unsigned char *)(a1 + 413) = *(_DWORD *)(a1 + 376) != 0;
  return a1;
}

void sub_1D2CEB780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (*(char *)(v47 - 89) < 0) {
    operator delete(*(void **)(v47 - 112));
  }
  if (v46 < 0) {
    operator delete(v43);
  }
  if (a41 < 0) {
    operator delete(__p);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  if (v44 < 0) {
    operator delete(v42);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a21 < 0)
  {
    operator delete(a16);
    if ((v45 & 1) == 0) {
LABEL_18:
    }
      _Unwind_Resume(a1);
  }
  else if (!v45)
  {
    goto LABEL_18;
  }
  __cxa_free_exception(v41);
  goto LABEL_18;
}

void morphun::dictionary::Inflector::getInflectionPatternsForWord(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  CFStringRef v6 = (const UChar *)a2;
  memset(&__p, 0, sizeof(__p));
  uint64_t v8 = a1 + 8;
  if (morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordPropertyInternalIdentifiers(*(void *)(a1 + 192), &__p, a2, a3, *(_DWORD *)(*(void *)(a1 + 192) + 408)))
  {
    begin = __p.__begin_;
LABEL_3:
    std::vector<int>::pointer end = __p.__end_;
    if (begin != __p.__end_)
    {
      uint64_t v11 = begin;
      do
      {
        morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)v33, v8, *v11);
        std::basic_string<char16_t> v12 = a4[1];
        unint64_t v13 = (unint64_t)a4[2];
        if ((unint64_t)v12 >= v13)
        {
          unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * (((char *)v12 - (unsigned char *)*a4) >> 4);
          unint64_t v16 = v15 + 1;
          if (v15 + 1 > 0x555555555555555) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - (void)*a4) >> 4);
          if (2 * v17 > v16) {
            unint64_t v16 = 2 * v17;
          }
          if (v17 >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v18 = 0x555555555555555;
          }
          else {
            unint64_t v18 = v16;
          }
          if (v18) {
            unint64_t v18 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v18);
          }
          else {
            uint64_t v19 = 0;
          }
          std::basic_string<char16_t> v20 = (_OWORD *)(v18 + 48 * v15);
          _OWORD *v20 = *(_OWORD *)v33;
          v20[1] = v34;
          v20[2] = v35;
          std::basic_string<char16_t> v22 = (char *)*a4;
          std::basic_string<char16_t> v21 = (char *)a4[1];
          std::basic_string<char16_t> v23 = v20;
          if (v21 != *a4)
          {
            do
            {
              long long v24 = *((_OWORD *)v21 - 3);
              long long v25 = *((_OWORD *)v21 - 1);
              *(v23 - 2) = *((_OWORD *)v21 - 2);
              *(v23 - 1) = v25;
              *(v23 - 3) = v24;
              v23 -= 3;
              v21 -= 48;
            }
            while (v21 != v22);
            std::basic_string<char16_t> v21 = (char *)*a4;
          }
          long long v14 = v20 + 3;
          *a4 = v23;
          a4[1] = v20 + 3;
          a4[2] = (void *)(v18 + 48 * v19);
          if (v21) {
            operator delete(v21);
          }
        }
        else
        {
          *std::basic_string<char16_t> v12 = *(_OWORD *)v33;
          v12[1] = v34;
          void v12[2] = v35;
          long long v14 = v12 + 3;
        }
        a4[1] = v14;
        ++v11;
      }
      while (v11 != end);
    }
    goto LABEL_26;
  }
  if ((morphun::util::StringViewUtils::isAllLowerCase((uint64_t)v6, a3) & 1) != 0
    || (morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordType(*(void *)(a1 + 192), (uint64_t)v6, a3),
        v26))
  {
    begin = __p.__begin_;
    goto LABEL_26;
  }
  v33[0] = 0;
  v33[1] = 0;
  *(void *)&long long v34 = 0;
  morphun::util::StringViewUtils::lowercase((uint64_t)v33, v6, a3, a1 + 8);
  char v27 = BYTE7(v34);
  if ((SBYTE7(v34) & 0x80u) == 0) {
    uint64_t v28 = v33;
  }
  else {
    uint64_t v28 = (void **)v33[0];
  }
  if ((SBYTE7(v34) & 0x80u) == 0) {
    uint64_t v29 = (char *)BYTE7(v34);
  }
  else {
    uint64_t v29 = (char *)v33[1];
  }
  if (v29 == (char *)a3)
  {
    if (!v29)
    {
LABEL_40:
      int WordPropertyInternalIdentifiers = 0;
      goto LABEL_42;
    }
    uint64_t v30 = v29;
    uint64_t v31 = v28;
    while (*v6 == *(unsigned __int16 *)v31)
    {
      uint64_t v31 = (void **)((char *)v31 + 2);
      ++v6;
      if (!--v30) {
        goto LABEL_40;
      }
    }
  }
  int WordPropertyInternalIdentifiers = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordPropertyInternalIdentifiers(*(void *)(a1 + 192), &__p, (uint64_t)v28, (int)v29, *(_DWORD *)(*(void *)(a1 + 192) + 408));
  char v27 = BYTE7(v34);
LABEL_42:
  if (v27 < 0) {
    operator delete(v33[0]);
  }
  begin = __p.__begin_;
  if (WordPropertyInternalIdentifiers) {
    goto LABEL_3;
  }
LABEL_26:
  if (begin)
  {
    __p.__end_ = begin;
    operator delete(begin);
  }
}

void sub_1D2CEBC00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a19) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dictionary::Inflector::getInflectionPatternsBySuffix(long long **a1, unsigned __int8 *a2, uint64_t a3, int a4)
{
  if (!a2[413])
  {
    exception = __cxa_allocate_exception(0x38uLL);
    uint64_t v31 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(64);
    *(void *)&long long v33 = v31;
    *((void *)&v33 + 1) = 63;
    *(void *)&long long v34 = v32 | 0x8000000000000000;
    v31[4] = *(_OWORD *)L" suffix to identifiers mappings";
    v31[5] = *(_OWORD *)L"to identifiers mappings";
    v31[6] = *(_OWORD *)L"ifiers mappings";
    *(_OWORD *)((char *)v31 + 110) = *(_OWORD *)L"mappings";
    unint64_t v31[2] = *(_OWORD *)L"onary is missing suffix to identifiers mappings";
    v31[3] = *(_OWORD *)L" missing suffix to identifiers mappings";
    *uint64_t v31 = *(_OWORD *)L"Inflection dictionary is missing suffix to identifiers mappings";
    v31[1] = *(_OWORD *)L"on dictionary is missing suffix to identifiers mappings";
    *((_WORD *)v31 + 63) = 0;
    morphun::exception::Throwable::Throwable((uint64_t)exception, &v33);
    void *exception = &unk_1F2A11418;
  }
  unint64_t v6 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(a2 + 312), a3, a4);
  if (HIDWORD(v6))
  {
    unint64_t v7 = v6;
    int Value = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v6, a2[235], a2[234]);
    int v9 = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v7, 0, a2[235]);
    a1[1] = 0;
    a1[2] = 0;
    *a1 = 0;
    if (v9)
    {
      int v10 = v9;
      if (v9 < 0) {
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v11 = (long long *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v9);
      int v12 = 0;
      int v13 = 0;
      uint64_t v14 = (uint64_t)(a2 + 8);
      unint64_t v16 = &v11[3 * v15];
      *a1 = v11;
      a1[1] = v11;
      a1[2] = v16;
      uint64_t v17 = (uint64_t)(a2 + 376);
      unint64_t v18 = v11;
      do
      {
        int v19 = morphun::dictionary::metadata::CompressedArray<int>::read(v17, v12 + Value);
        morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&v33, v14, v19);
        if (v18 >= v16)
        {
          unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * (v18 - v11) + 1;
          if (v22 > 0x555555555555555) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          if (0x5555555555555556 * (v16 - v11) > v22) {
            unint64_t v22 = 0x5555555555555556 * (v16 - v11);
          }
          if (0xAAAAAAAAAAAAAAABLL * (v16 - v11) >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v23 = 0x555555555555555;
          }
          else {
            unint64_t v23 = v22;
          }
          if (v23) {
            unint64_t v23 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v23);
          }
          else {
            uint64_t v24 = 0;
          }
          long long v25 = (_OWORD *)(v23 + 16 * (v18 - v11));
          *long long v25 = v33;
          v25[1] = v34;
          v25[2] = v35;
          if (v18 == v11)
          {
            char v27 = (long long *)(v23 + 16 * (v18 - v11));
          }
          else
          {
            unint64_t v26 = v23 + 16 * (v18 - v11);
            do
            {
              char v27 = (long long *)(v26 - 48);
              long long v28 = *(v18 - 3);
              long long v29 = *(v18 - 1);
              *(_OWORD *)(v26 - 32) = *(v18 - 2);
              *(_OWORD *)(v26 - 16) = v29;
              *(_OWORD *)(v26 - 48) = v28;
              v18 -= 3;
              v26 -= 48;
            }
            while (v18 != v11);
          }
          unint64_t v16 = (long long *)(v23 + 48 * v24);
          unint64_t v18 = v25 + 3;
          *a1 = v27;
          a1[1] = v25 + 3;
          a1[2] = v16;
          if (v11) {
            operator delete(v11);
          }
          uint64_t v11 = v27;
        }
        else
        {
          long long v20 = v33;
          long long v21 = v35;
          v18[1] = v34;
          v18[2] = v21;
          *unint64_t v18 = v20;
          v18 += 3;
        }
        a1[1] = v18;
        int v12 = (__int16)++v13;
      }
      while (v10 > (__int16)v13);
    }
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_1D2CEBF04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

void morphun::dialog::language::HiCommonConceptFactory::~HiCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A058A8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A058A8);
}

uint64_t morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::normalize(uint64_t a1, uint64_t a2, const std::basic_string<char16_t>::value_type *a3, std::basic_string<char16_t>::size_type a4, uint64_t a5, std::basic_string<char16_t>::size_type a6, int a7)
{
  std::basic_string<char16_t>::size_type v11 = *(void *)(a1 + 232);
  if (v11) {
    BOOL v12 = a4 >= v11;
  }
  else {
    BOOL v12 = 0;
  }
  if (!v12) {
    goto LABEL_17;
  }
  int v13 = *(unsigned __int16 **)(a1 + 224);
  uint64_t v14 = -(uint64_t)v11;
  do
  {
    int v15 = (unsigned __int16)a3[a4 + v14];
    int v17 = *v13++;
    int v16 = v17;
  }
  while (v17 == v15 && v14++ != -1);
  std::basic_string<char16_t>::size_type v19 = a4 + a7;
  BOOL v20 = v16 != v15 || v19 >= a6;
  if (!v20 && MEMORY[0x1D942C150](*(void *)(a1 + 152), *(unsigned __int16 *)(a5 + 2 * v19)))
  {
    unint64_t v22 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a2);
    if (a4 >= a4 - *(void *)(a1 + 232)) {
      std::basic_string<char16_t>::size_type v23 = a4 - *(void *)(a1 + 232);
    }
    else {
      std::basic_string<char16_t>::size_type v23 = a4;
    }
    uint64_t v24 = std::basic_string<char16_t>::__assign_external(v22, a3, v23);
    long long v25 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>((uint64_t)v24);
    std::basic_string<char16_t>::append(v25, *(const std::basic_string<char16_t>::value_type **)(a1 + 240), *(void *)(a1 + 248));
  }
  else
  {
LABEL_17:
    morphun::util::StringViewUtils::lowercase(a2, (const UChar *)a3, a4, a1 + 8);
  }
  return a2;
}

void sub_1D2CEC0CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::createIterator()
{
}

void sub_1D2CEC17C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C4053441C15);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::~SemiticWordAndDelimiterTokenExtractor(morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor *this)
{
  int v2 = (void **)((char *)this + 200);
  std::vector<morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::__destroy_vector::operator()[abi:ne180100](&v2);
  std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*((void **)this + 22));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor *)((char *)this + 152));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A08150);

  JUMPOUT(0x1D942B8B0);
}

{
  void **v2;
  uint64_t vars8;

  int v2 = (void **)((char *)this + 200);
  std::vector<morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::__destroy_vector::operator()[abi:ne180100](&v2);
  std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*((void **)this + 22));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor *)((char *)this + 152));

  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A08150);
}

void std::vector<morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  int v2 = (char *)**a1;
  if (v2)
  {
    int v4 = (char *)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        unint64_t v6 = v4 - 32;
        std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(*((void **)v4 - 3));
        int v4 = v6;
      }
      while (v6 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::addPrefix(uint64_t **a1, unsigned __int16 *a2, uint64_t a3)
{
  if (!a3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Condition is false.");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, &__dst);
  }
  uint64_t v3 = a2;
  int v5 = &a2[a3];
  do
  {
    if (!a1)
    {
      std::basic_string<char16_t>::size_type v23 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v23);
    }
    unsigned int v6 = *v3;
    uint64_t v8 = a1 + 1;
    unint64_t v7 = a1[1];
    if (!v7) {
      goto LABEL_15;
    }
    int v9 = a1 + 1;
    do
    {
      unsigned int v10 = *((unsigned __int16 *)v7 + 16);
      BOOL v11 = v10 >= v6;
      if (v10 >= v6) {
        BOOL v12 = (uint64_t **)v7;
      }
      else {
        BOOL v12 = (uint64_t **)(v7 + 1);
      }
      if (v11) {
        int v9 = (uint64_t **)v7;
      }
      unint64_t v7 = *v12;
    }
    while (*v12);
    if (v9 == v8 || *((unsigned __int16 *)v9 + 16) > v6)
    {
LABEL_15:
      v26[0] = 0;
      v26[1] = 0;
      long long v25 = v26;
      char v27 = 0;
      LOWORD(__dst) = v6;
      std::map<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>::map[abi:ne180100]((uint64_t)&__dst + 8, &v25);
      char v13 = v27;
      char v31 = v27;
      uint64_t v14 = *v8;
      int v15 = a1 + 1;
      if (*v8)
      {
        while (1)
        {
          while (1)
          {
            int v15 = (uint64_t **)v14;
            unsigned int v16 = *((unsigned __int16 *)v14 + 16);
            if ((unsigned __int16)__dst >= v16) {
              break;
            }
            uint64_t v14 = *v15;
            uint64_t v8 = v15;
            if (!*v15) {
              goto LABEL_22;
            }
          }
          if (v16 >= (unsigned __int16)__dst) {
            break;
          }
          uint64_t v14 = v15[1];
          if (!v14)
          {
            uint64_t v8 = v15 + 1;
            goto LABEL_22;
          }
        }
        int v9 = v15;
      }
      else
      {
LABEL_22:
        int v17 = operator new(0x48uLL);
        int v9 = (uint64_t **)v17;
        __int16 v18 = __dst;
        uint64_t v20 = *((void *)&__dst + 1);
        std::basic_string<char16_t>::size_type v19 = v29;
        v17[6] = v29;
        long long v21 = (char *)(v17 + 6);
        *((_WORD *)v17 + 16) = v18;
        v17[5] = v20;
        uint64_t v22 = v30;
        v17[7] = v30;
        if (v22)
        {
          v19[2] = v21;
          *((void *)&__dst + 1) = &v29;
          long long v29 = 0;
          uint64_t v30 = 0;
        }
        else
        {
          v17[5] = v21;
        }
        *((unsigned char *)v17 + 64) = v13;
        std::__tree<std::u16string_view>::__insert_node_at(a1, (uint64_t)v15, v8, v17);
      }
      std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(v29);
      std::__tree<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::__map_value_compare<char16_t,std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>,std::less<char16_t>,true>,std::allocator<std::__value_type<char16_t,morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor_AffixRecord>>>::destroy(v26[0]);
    }
    a1 = v9 + 5;
    ++v3;
  }
  while (v3 != v5);
  *((unsigned char *)v9 + 64) = 1;
}

void sub_1D2CEC52C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    if ((v20 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v20)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v19);
  goto LABEL_6;
}

BOOL morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::isKnownWord(BOOL result, unsigned __int16 *a2, unint64_t a3)
{
  if (result) {
    return result + 8 != (void)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(result, a2, a3);
  }
  return result;
}

void morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::decompoundWord(void *a1, char **a2, uint64_t a3, unint64_t a4, int a5, int a6)
{
  unint64_t v6 = a4;
  uint64_t v65 = a1 + 21;
  int v66 = a1 + 19;
  while (1)
  {
    if (v6 < a5) {
LABEL_102:
    }
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    int v70 = a5;
    unint64_t v8 = v6 - a5 >= a6 - a5 ? a6 - a5 : v6 - a5;
    if ((int)v8 < 3) {
      break;
    }
    int v9 = (unsigned __int16 *)(a3 + 2 * a5);
    if (!morphun::util::UnicodeSetUtils::containsSome(v66, (uint64_t)v9, v8)) {
      break;
    }
    uint64_t v10 = a1[17];
    if (morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::isKnownWord(v10, v9, v8)) {
      break;
    }
    uint64_t v11 = a1[25];
    uint64_t v71 = a1[26];
    unint64_t v69 = v8;
    if (v11 == v71)
    {
      int v37 = 0;
      LODWORD(v15) = 0;
      uint64_t v14 = v9;
      LODWORD(v17) = v8;
    }
    else
    {
      uint64_t v12 = 0;
      int v73 = 0;
      uint64_t v13 = v8;
      uint64_t v14 = v9;
      while (1)
      {
        uint64_t v10 = a1[17];
        if (morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::isKnownWord(v10, v14, v8)) {
          break;
        }
        uint64_t v15 = (int)v12;
        uint64_t v16 = v11;
        uint64_t v17 = v13;
        while (1)
        {
          if (!v16)
          {
            exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(exception);
          }
          uint64_t v18 = *(void *)(v16 + 8);
          if (!v18) {
            break;
          }
          unsigned int v19 = v9[v15];
          uint64_t v20 = v16 + 8;
          do
          {
            unsigned int v21 = *(unsigned __int16 *)(v18 + 32);
            BOOL v22 = v21 >= v19;
            if (v21 >= v19) {
              std::basic_string<char16_t>::size_type v23 = (uint64_t *)v18;
            }
            else {
              std::basic_string<char16_t>::size_type v23 = (uint64_t *)(v18 + 8);
            }
            if (v22) {
              uint64_t v20 = v18;
            }
            uint64_t v18 = *v23;
          }
          while (*v23);
          if (v20 == v16 + 8 || *(unsigned __int16 *)(v20 + 32) > v19) {
            break;
          }
          uint64_t v16 = v20 + 40;
          ++v15;
          BOOL v24 = (int)v17 <= 3;
          uint64_t v17 = (v17 - 1);
          if (v24)
          {
            uint64_t v17 = 2;
            break;
          }
        }
        if (*(unsigned char *)(v16 + 24))
        {
          if (v69 < (int)v15) {
            goto LABEL_102;
          }
          if (v69 - (int)v15 >= v17) {
            unint64_t v8 = v17;
          }
          else {
            unint64_t v8 = v69 - (int)v15;
          }
          npc<std::vector<int>>((uint64_t)a2);
          int v25 = v70 + v15;
          char v27 = a2[1];
          unint64_t v26 = (unint64_t)a2[2];
          if ((unint64_t)v27 >= v26)
          {
            long long v29 = *a2;
            uint64_t v30 = (v27 - *a2) >> 2;
            unint64_t v31 = v30 + 1;
            if ((unint64_t)(v30 + 1) >> 62) {
              goto LABEL_103;
            }
            uint64_t v32 = v26 - (void)v29;
            if (v32 >> 1 > v31) {
              unint64_t v31 = v32 >> 1;
            }
            BOOL v22 = (unint64_t)v32 >= 0x7FFFFFFFFFFFFFFCLL;
            unint64_t v33 = 0x3FFFFFFFFFFFFFFFLL;
            if (!v22) {
              unint64_t v33 = v31;
            }
            if (v33)
            {
              unint64_t v33 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v33);
              long long v29 = *a2;
              char v27 = a2[1];
            }
            else
            {
              uint64_t v34 = 0;
            }
            long long v35 = (char *)(v33 + 4 * v30);
            *(_DWORD *)long long v35 = v25;
            long long v28 = v35 + 4;
            while (v27 != v29)
            {
              int v36 = *((_DWORD *)v27 - 1);
              v27 -= 4;
              *((_DWORD *)v35 - 1) = v36;
              v35 -= 4;
            }
            *a2 = v35;
            a2[1] = v28;
            a2[2] = (char *)(v33 + 4 * v34);
            if (v29) {
              operator delete(v29);
            }
          }
          else
          {
            *(_DWORD *)char v27 = v25;
            long long v28 = v27 + 4;
          }
          uint64_t v14 = &v9[(int)v15];
          a2[1] = v28;
          ++v73;
        }
        else
        {
          uint64_t v15 = v12;
          uint64_t v17 = v13;
        }
        v11 += 32;
        if (v11 != v71)
        {
          uint64_t v13 = v17;
          uint64_t v12 = v15;
          if ((int)v17 > 2) {
            continue;
          }
        }
        uint64_t v10 = a1[17];
        goto LABEL_55;
      }
      LODWORD(v15) = v12;
      LODWORD(v17) = v13;
LABEL_55:
      unint64_t v6 = a4;
      int v37 = v73;
    }
    if (!morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::isKnownWord(v10, v14, v8))
    {
      unint64_t v38 = v65;
      int v39 = v17;
      if ((int)v17 >= 3)
      {
        uint64_t v40 = (int)v69;
        int v39 = v17;
        unint64_t v38 = v65;
        while (1)
        {
          uint64_t v41 = v38[1];
          if (!v41) {
            break;
          }
          unsigned int v42 = v9[--v40];
          unint64_t v43 = v38 + 1;
          do
          {
            unsigned int v44 = *(unsigned __int16 *)(v41 + 32);
            BOOL v45 = v44 >= v42;
            if (v44 >= v42) {
              int v46 = (uint64_t *)v41;
            }
            else {
              int v46 = (uint64_t *)(v41 + 8);
            }
            if (v45) {
              unint64_t v43 = (void *)v41;
            }
            uint64_t v41 = *v46;
          }
          while (*v46);
          if (v43 == v38 + 1 || *((unsigned __int16 *)v43 + 16) > v42) {
            break;
          }
          unint64_t v38 = v43 + 5;
          BOOL v24 = v39-- <= 3;
          if (v24)
          {
            int v39 = 2;
            break;
          }
        }
      }
      if (*((unsigned char *)v38 + 24))
      {
        int v47 = v69 - v17;
        LODWORD(v15) = v39 + v69 - v17;
        npc<std::vector<int>>((uint64_t)a2);
        if (v39 == v69 || v37 < 2)
        {
          int v74 = v15 + v70;
          std::vector<int>::emplace_back<int>((uint64_t)a2, &v74);
        }
        else
        {
          int v48 = v37;
          char v50 = *a2;
          size_t v49 = a2[1];
          morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::decompoundWord(a1, a2, a3, v6, (v47 + v70), (v15 + v70));
          if (a2[1] - *a2 == v49 - v50)
          {
            int v75 = v15 + v70;
            std::vector<int>::emplace_back<int>((uint64_t)a2, &v75);
          }
          int v37 = v48;
        }
      }
    }
    if (!v15 || v37 < 2)
    {
      npc<std::vector<int>>((uint64_t)a2);
      uint64_t v51 = *a2;
      uint64_t v52 = a2[1];
      if (*a2 != v52)
      {
        unint64_t v53 = (unint64_t)a2[2];
        if ((unint64_t)v52 >= v53)
        {
          uint64_t v55 = (v52 - v51) >> 2;
          unint64_t v56 = v55 + 1;
          if ((unint64_t)(v55 + 1) >> 62) {
LABEL_103:
          }
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          uint64_t v57 = v53 - (void)v51;
          if (v57 >> 1 > v56) {
            unint64_t v56 = v57 >> 1;
          }
          BOOL v22 = (unint64_t)v57 >= 0x7FFFFFFFFFFFFFFCLL;
          unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
          if (!v22) {
            unint64_t v58 = v56;
          }
          if (v58)
          {
            unint64_t v58 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v58);
            uint64_t v51 = *a2;
            uint64_t v52 = a2[1];
          }
          else
          {
            uint64_t v59 = 0;
          }
          unint64_t v60 = (char *)(v58 + 4 * v55);
          unint64_t v61 = v58 + 4 * v59;
          *(_DWORD *)unint64_t v60 = a6;
          unint64_t v54 = v60 + 4;
          while (v52 != v51)
          {
            int v62 = *((_DWORD *)v52 - 1);
            v52 -= 4;
            *((_DWORD *)v60 - 1) = v62;
            v60 -= 4;
          }
          *a2 = v60;
          a2[1] = v54;
          a2[2] = (char *)v61;
          if (v51) {
            operator delete(v51);
          }
        }
        else
        {
          *(_DWORD *)uint64_t v52 = a6;
          unint64_t v54 = v52 + 4;
        }
        a2[1] = v54;
      }
      return;
    }
    a5 = v15 + v70;
  }
}

void sub_1D2CECAD0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CECB34(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::vector<int>::emplace_back<int>(uint64_t a1, _DWORD *a2)
{
  int v5 = *(_DWORD **)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  if ((unint64_t)v5 >= v4)
  {
    unint64_t v7 = *(_DWORD **)a1;
    uint64_t v8 = ((uint64_t)v5 - *(void *)a1) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v4 - (void)v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    BOOL v11 = (unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL;
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v11) {
      unint64_t v12 = v9;
    }
    if (v12)
    {
      unint64_t v12 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v12);
      unint64_t v7 = *(_DWORD **)a1;
      int v5 = *(_DWORD **)(a1 + 8);
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v14 = (_DWORD *)(v12 + 4 * v8);
    unint64_t v15 = v12 + 4 * v13;
    _DWORD *v14 = *a2;
    unint64_t v6 = v14 + 1;
    while (v5 != v7)
    {
      int v16 = *--v5;
      *--uint64_t v14 = v16;
    }
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v15;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *int v5 = *a2;
    unint64_t v6 = v5 + 1;
  }
  *(void *)(a1 + 8) = v6;
}

void morphun::analysis::util::AttributeFactory_DefaultAttributeFactory::~AttributeFactory_DefaultAttributeFactory(morphun::analysis::util::AttributeFactory_DefaultAttributeFactory *this)
{
  *(void *)this = &unk_1F2A00328;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &unk_1F2A00328;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);
}

void std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::__emplace_unique_key_args<std::type_index,std::type_index,morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void)>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = a2;
  if (a2 < 0)
  {
    uint64_t v10 = (unsigned __int8 *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v11 = 5381;
    do
    {
      unint64_t v9 = v11;
      unsigned int v12 = *v10++;
      uint64_t v11 = (33 * v11) ^ v12;
    }
    while (v12);
  }
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    unint64_t v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v13) {
        unint64_t v4 = v9 % v13;
      }
    }
    else
    {
      unint64_t v4 = (v13 - 1) & v9;
    }
    int v16 = *(void **)(*(void *)a1 + 8 * v4);
    if (v16)
    {
      uint64_t v17 = (void *)*v16;
      if (*v16)
      {
        do
        {
          unint64_t v18 = v17[1];
          if (v18 == v9)
          {
            if (std::type_info::operator==[abi:ne180100](*(void *)(v17[2] + 8), a2)) {
              return;
            }
          }
          else
          {
            if (v15 > 1)
            {
              if (v18 >= v13) {
                v18 %= v13;
              }
            }
            else
            {
              v18 &= v13 - 1;
            }
            if (v18 != v4) {
              break;
            }
          }
          uint64_t v17 = (void *)*v17;
        }
        while (v17);
      }
    }
  }
  unsigned int v19 = (void *)(a1 + 16);
  uint64_t v20 = operator new(0x38uLL);
  unsigned int v21 = v20;
  v31[0] = v20;
  v31[1] = a1 + 16;
  void *v20 = 0;
  v20[1] = v9;
  v20[2] = a3;
  v20[6] = 0;
  if (a4)
  {
    v20[3] = &unk_1F2A11CC8;
    v20[4] = a4;
    v20[6] = v20 + 3;
  }
  char v32 = 1;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v23 = *(float *)(a1 + 32);
  if (!v13 || (float)(v23 * (float)v13) < v22)
  {
    BOOL v24 = 1;
    if (v13 >= 3) {
      BOOL v24 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v13);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>(a1, v27);
    unint64_t v13 = *(void *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v9 >= v13) {
        unint64_t v4 = v9 % v13;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v13 - 1) & v9;
    }
  }
  uint64_t v28 = *(void *)a1;
  long long v29 = *(void **)(*(void *)a1 + 8 * v4);
  if (v29)
  {
    *unsigned int v21 = *v29;
LABEL_43:
    *long long v29 = v21;
    goto LABEL_44;
  }
  *unsigned int v21 = *v19;
  *unsigned int v19 = v21;
  *(void *)(v28 + 8 * v4) = v19;
  if (*v21)
  {
    unint64_t v30 = *(void *)(*v21 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v30 >= v13) {
        v30 %= v13;
      }
    }
    else
    {
      v30 &= v13 - 1;
    }
    long long v29 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_43;
  }
LABEL_44:
  v31[0] = 0;
  ++*(void *)(a1 + 24);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)v31);
}

void sub_1D2CECF70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__function::__value_func<morphun::analysis::util::AttributeImpl * ()(void)>::~__value_func[abi:ne180100](v1 + 3);
    }
    operator delete(v1);
  }
}

void *std::__function::__func<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target_type()
{
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"PFPN7morphun8analysis15tokenattributes24PackedTokenAttributeImplEvE"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::operator()(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F2A11CC8;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F2A11CC8;
  result[1] = v3;
  return result;
}

void std::__function::__func<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::PackedTokenAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::~__func()
{
}

void *std::__function::__func<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target_type()
{
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"PFPN7morphun8analysis15tokenattributes25LemmaMappingAttributeImplEvE"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::operator()(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F2A11D20;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F2A11D20;
  result[1] = v3;
  return result;
}

void std::__function::__func<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::LemmaMappingAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::~__func()
{
}

void *std::__function::__func<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target_type()
{
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"PFPN7morphun8analysis15tokenattributes20KeywordAttributeImplEvE"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::operator()(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F2A11C18;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F2A11C18;
  result[1] = v3;
  return result;
}

void std::__function::__func<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::KeywordAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::~__func()
{
}

void *std::__function::__func<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target_type()
{
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::target(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"PFPN7morphun8analysis15tokenattributes21GrammemeAttributeImplEvE"))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::operator()(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t std::__function::__func<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F2A11C70;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F2A11C70;
  result[1] = v3;
  return result;
}

void std::__function::__func<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void),std::allocator<morphun::analysis::tokenattributes::GrammemeAttributeImpl * (*)(void)>,morphun::analysis::util::AttributeImpl * ()(void)>::~__func()
{
}

morphun::analysis::util::AttributeFactory_DefaultAttributeFactory *morphun::analysis::util::AttributeFactory_DefaultAttributeFactory::AttributeFactory_DefaultAttributeFactory(morphun::analysis::util::AttributeFactory_DefaultAttributeFactory *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v3 = (uint64_t *)((char *)this + 8);
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *(void *)this = &off_1F2A10438;
  unint64_t v4 = (unint64_t)"N7morphun8analysis15tokenattributes17GrammemeAttributeE";
  if (((unint64_t)"N7morphun8analysis15tokenattributes17GrammemeAttributeE" & 0x8000000000000000) != 0)
  {
    int v5 = (unsigned __int8 *)((unint64_t)"N7morphun8analysis15tokenattributes17GrammemeAttributeE" & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v6 = 5381;
    do
    {
      unint64_t v4 = v6;
      unsigned int v7 = *v5++;
      uint64_t v6 = (33 * v6) ^ v7;
    }
    while (v7);
  }
  uint64_t v8 = operator new(0x38uLL);
  unint64_t v9 = (void *)((char *)this + 24);
  unint64_t v56 = v8;
  uint64_t v57 = (char *)this + 24;
  *uint64_t v8 = 0;
  v8[1] = v4;
  void v8[3] = &unk_1F2A11C70;
  v8[4] = morphun::analysis::tokenattributes::GrammemeAttributeImpl::create;
  v8[6] = v8 + 3;
  char v58 = 1;
  std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>((uint64_t)v3, 1uLL);
  int8x8_t v10 = *(int8x8_t *)((char *)this + 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v10);
  v11.i16[0] = vaddlv_u8(v11);
  if (v11.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v10) {
      v4 %= *(void *)&v10;
    }
  }
  else
  {
    v4 &= *(void *)&v10 - 1;
  }
  uint64_t v12 = *v3;
  unint64_t v13 = *(void **)(*v3 + 8 * v4);
  if (v13)
  {
    *uint64_t v8 = *v13;
  }
  else
  {
    *uint64_t v8 = *v9;
    void *v9 = v8;
    *(void *)(v12 + 8 * v4) = v9;
    if (!*v8) {
      goto LABEL_17;
    }
    unint64_t v14 = *(void *)(*v8 + 8);
    if (v11.u32[0] > 1uLL)
    {
      if (v14 >= *(void *)&v10) {
        v14 %= *(void *)&v10;
      }
    }
    else
    {
      v14 &= *(void *)&v10 - 1;
    }
    unint64_t v13 = (void *)(*v3 + 8 * v14);
  }
  void *v13 = v8;
LABEL_17:
  unint64_t v56 = 0;
  ++*((void *)this + 4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v56);
  unint64_t v15 = (unint64_t)"N7morphun8analysis15tokenattributes16KeywordAttributeE";
  if (((unint64_t)"N7morphun8analysis15tokenattributes16KeywordAttributeE" & 0x8000000000000000) != 0)
  {
    int v16 = (unsigned __int8 *)((unint64_t)"N7morphun8analysis15tokenattributes16KeywordAttributeE" & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v17 = 5381;
    do
    {
      unint64_t v15 = v17;
      unsigned int v18 = *v16++;
      uint64_t v17 = (33 * v17) ^ v18;
    }
    while (v18);
  }
  unint64_t v19 = *((void *)this + 2);
  if (v19)
  {
    uint8x8_t v20 = (uint8x8_t)vcnt_s8((int8x8_t)v19);
    v20.i16[0] = vaddlv_u8(v20);
    unint64_t v21 = v20.u32[0];
    if (v20.u32[0] > 1uLL)
    {
      unint64_t v1 = v15;
      if (v15 >= v19) {
        unint64_t v1 = v15 % v19;
      }
    }
    else
    {
      unint64_t v1 = (v19 - 1) & v15;
    }
    float v22 = *(void **)(*v3 + 8 * v1);
    if (v22)
    {
      float v23 = (void *)*v22;
      if (*v22)
      {
        do
        {
          unint64_t v24 = v23[1];
          if (v24 == v15)
          {
            if (std::type_info::operator==[abi:ne180100](*(void *)(v23[2] + 8), (uint64_t)"N7morphun8analysis15tokenattributes16KeywordAttributeE"))
            {
              goto LABEL_59;
            }
          }
          else
          {
            if (v21 > 1)
            {
              if (v24 >= v19) {
                v24 %= v19;
              }
            }
            else
            {
              v24 &= v19 - 1;
            }
            if (v24 != v1) {
              break;
            }
          }
          float v23 = (void *)*v23;
        }
        while (v23);
      }
    }
  }
  unint64_t v25 = operator new(0x38uLL);
  unint64_t v56 = v25;
  uint64_t v57 = (char *)this + 24;
  *unint64_t v25 = 0;
  v25[1] = v15;
  void v25[3] = &unk_1F2A11C18;
  v25[4] = morphun::analysis::tokenattributes::KeywordAttributeImpl::create;
  v25[6] = v25 + 3;
  char v58 = 1;
  float v26 = (float)(unint64_t)(*((void *)this + 4) + 1);
  float v27 = *((float *)this + 10);
  if (!v19 || (float)(v27 * (float)v19) < v26)
  {
    BOOL v28 = 1;
    if (v19 >= 3) {
      BOOL v28 = (v19 & (v19 - 1)) != 0;
    }
    unint64_t v29 = v28 | (2 * v19);
    unint64_t v30 = vcvtps_u32_f32(v26 / v27);
    if (v29 <= v30) {
      size_t v31 = v30;
    }
    else {
      size_t v31 = v29;
    }
    std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>((uint64_t)v3, v31);
    unint64_t v19 = *((void *)this + 2);
    if ((v19 & (v19 - 1)) != 0)
    {
      if (v15 >= v19) {
        unint64_t v1 = v15 % v19;
      }
      else {
        unint64_t v1 = v15;
      }
    }
    else
    {
      unint64_t v1 = (v19 - 1) & v15;
    }
  }
  uint64_t v32 = *v3;
  unint64_t v33 = *(void **)(*v3 + 8 * v1);
  if (v33)
  {
    *unint64_t v25 = *v33;
LABEL_57:
    *unint64_t v33 = v25;
    goto LABEL_58;
  }
  *unint64_t v25 = *v9;
  void *v9 = v25;
  *(void *)(v32 + 8 * v1) = v9;
  if (*v25)
  {
    unint64_t v34 = *(void *)(*v25 + 8);
    if ((v19 & (v19 - 1)) != 0)
    {
      if (v34 >= v19) {
        v34 %= v19;
      }
    }
    else
    {
      v34 &= v19 - 1;
    }
    unint64_t v33 = (void *)(*v3 + 8 * v34);
    goto LABEL_57;
  }
LABEL_58:
  unint64_t v56 = 0;
  ++*((void *)this + 4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v56);
LABEL_59:
  unint64_t v35 = (unint64_t)"N7morphun8analysis15tokenattributes21LemmaMappingAttributeE";
  if (((unint64_t)"N7morphun8analysis15tokenattributes21LemmaMappingAttributeE" & 0x8000000000000000) != 0)
  {
    int v36 = (unsigned __int8 *)((unint64_t)"N7morphun8analysis15tokenattributes21LemmaMappingAttributeE" & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v37 = 5381;
    do
    {
      unint64_t v35 = v37;
      unsigned int v38 = *v36++;
      uint64_t v37 = (33 * v37) ^ v38;
    }
    while (v38);
  }
  unint64_t v39 = *((void *)this + 2);
  if (v39)
  {
    uint8x8_t v40 = (uint8x8_t)vcnt_s8((int8x8_t)v39);
    v40.i16[0] = vaddlv_u8(v40);
    unint64_t v41 = v40.u32[0];
    if (v40.u32[0] > 1uLL)
    {
      unint64_t v1 = v35;
      if (v35 >= v39) {
        unint64_t v1 = v35 % v39;
      }
    }
    else
    {
      unint64_t v1 = (v39 - 1) & v35;
    }
    unsigned int v42 = *(void **)(*v3 + 8 * v1);
    if (v42)
    {
      unint64_t v43 = (void *)*v42;
      if (*v42)
      {
        do
        {
          unint64_t v44 = v43[1];
          if (v44 == v35)
          {
            if (std::type_info::operator==[abi:ne180100](*(void *)(v43[2] + 8), (uint64_t)"N7morphun8analysis15tokenattributes21LemmaMappingAttributeE"))
            {
              goto LABEL_101;
            }
          }
          else
          {
            if (v41 > 1)
            {
              if (v44 >= v39) {
                v44 %= v39;
              }
            }
            else
            {
              v44 &= v39 - 1;
            }
            if (v44 != v1) {
              break;
            }
          }
          unint64_t v43 = (void *)*v43;
        }
        while (v43);
      }
    }
  }
  BOOL v45 = operator new(0x38uLL);
  unint64_t v56 = v45;
  uint64_t v57 = (char *)this + 24;
  void *v45 = 0;
  v45[1] = v35;
  v45[3] = &unk_1F2A11D20;
  v45[4] = morphun::analysis::tokenattributes::LemmaMappingAttributeImpl::create;
  v45[6] = v45 + 3;
  char v58 = 1;
  float v46 = (float)(unint64_t)(*((void *)this + 4) + 1);
  float v47 = *((float *)this + 10);
  if (!v39 || (float)(v47 * (float)v39) < v46)
  {
    BOOL v48 = 1;
    if (v39 >= 3) {
      BOOL v48 = (v39 & (v39 - 1)) != 0;
    }
    unint64_t v49 = v48 | (2 * v39);
    unint64_t v50 = vcvtps_u32_f32(v46 / v47);
    if (v49 <= v50) {
      size_t v51 = v50;
    }
    else {
      size_t v51 = v49;
    }
    std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>((uint64_t)v3, v51);
    unint64_t v39 = *((void *)this + 2);
    if ((v39 & (v39 - 1)) != 0)
    {
      if (v35 >= v39) {
        unint64_t v1 = v35 % v39;
      }
      else {
        unint64_t v1 = v35;
      }
    }
    else
    {
      unint64_t v1 = (v39 - 1) & v35;
    }
  }
  uint64_t v52 = *v3;
  unint64_t v53 = *(void **)(*v3 + 8 * v1);
  if (v53)
  {
    void *v45 = *v53;
LABEL_99:
    *unint64_t v53 = v45;
    goto LABEL_100;
  }
  void *v45 = *v9;
  void *v9 = v45;
  *(void *)(v52 + 8 * v1) = v9;
  if (*v45)
  {
    unint64_t v54 = *(void *)(*v45 + 8);
    if ((v39 & (v39 - 1)) != 0)
    {
      if (v54 >= v39) {
        v54 %= v39;
      }
    }
    else
    {
      v54 &= v39 - 1;
    }
    unint64_t v53 = (void *)(*v3 + 8 * v54);
    goto LABEL_99;
  }
LABEL_100:
  unint64_t v56 = 0;
  ++*((void *)this + 4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v56);
LABEL_101:
  return this;
}

void sub_1D2CEDA08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  morphun::analysis::util::AttributeFactory::~AttributeFactory(v2, (uint64_t *)&off_1F2A07898);
  _Unwind_Resume(a1);
}

uint64_t mtokc_getHead(uint64_t a1)
{
  uint64_t v1 = npc<morphun::TokenChain const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 104))(v1);
}

uint64_t npc<morphun::TokenChain const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CEDB24(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mtokc_getTail(uint64_t a1)
{
  uint64_t v1 = npc<morphun::TokenChain const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 112))(v1);
}

uint64_t mtokc_getWordCountRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = npc<morphun::TokenChain const>(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v5 + 24))(v5, a2, a3);
}

uint64_t mtokc_getWordCount(uint64_t a1)
{
  uint64_t v1 = npc<morphun::TokenChain const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
}

uint64_t mtokc_getSize(uint64_t a1)
{
  uint64_t v1 = npc<morphun::TokenChain const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 40))(v1);
}

uint64_t mtokc_compare(uint64_t a1, uint64_t a2)
{
  npc<morphun::TokenChain const>(a1);
  npc<morphun::TokenChain const>(a2);
  if (a1 == a2) {
    return 0;
  }
  npc<morphun::TokenChain const>(a1);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  npc<morphun::TokenChain const>(a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 48))(a2);
  if (v4)
  {
    while (1)
    {
      if (!v5) {
        goto LABEL_6;
      }
      if ((morphun::Token::operator==(v4, v5) & 1) == 0) {
        break;
      }
      uint64_t v4 = *(void *)(v4 + 80);
      uint64_t v5 = *(void *)(v5 + 80);
      if (!v4) {
        goto LABEL_6;
      }
    }
    unint64_t v8 = *(unsigned __int8 *)(v5 + 39);
    int v9 = (char)v8;
    if ((v8 & 0x80u) != 0) {
      unint64_t v8 = *(void *)(v5 + 24);
    }
    unint64_t v10 = *(unsigned __int8 *)(v4 + 39);
    int v11 = (char)v10;
    if ((v10 & 0x80u) != 0) {
      unint64_t v10 = *(void *)(v4 + 24);
    }
    if (v8 >= v10) {
      unint64_t v12 = v10;
    }
    else {
      unint64_t v12 = v8;
    }
    if (v12)
    {
      if (v11 >= 0) {
        unint64_t v13 = (unsigned __int16 *)(v4 + 16);
      }
      else {
        unint64_t v13 = *(unsigned __int16 **)(v4 + 16);
      }
      if (v9 >= 0) {
        unint64_t v14 = (unsigned __int16 *)(v5 + 16);
      }
      else {
        unint64_t v14 = *(unsigned __int16 **)(v5 + 16);
      }
      do
      {
        unsigned int v15 = *v13;
        unsigned int v16 = *v14;
        if (v15 < v16) {
          return 0xFFFFFFFFLL;
        }
        if (v16 < v15) {
          return 1;
        }
        ++v13;
        ++v14;
      }
      while (--v12);
    }
    if (v10 < v8) {
      uint64_t result = 0xFFFFFFFFLL;
    }
    else {
      uint64_t result = 1;
    }
    if (v8 == v10)
    {
      unint64_t v17 = *(unsigned __int8 *)(v5 + 63);
      int v18 = (char)v17;
      if ((v17 & 0x80u) != 0) {
        unint64_t v17 = *(void *)(v5 + 48);
      }
      unint64_t v19 = *(unsigned __int8 *)(v4 + 63);
      int v20 = (char)v19;
      if ((v19 & 0x80u) != 0) {
        unint64_t v19 = *(void *)(v4 + 48);
      }
      if (v17 >= v19) {
        unint64_t v21 = v19;
      }
      else {
        unint64_t v21 = v17;
      }
      if (v21)
      {
        if (v20 >= 0) {
          float v22 = (unsigned __int16 *)(v4 + 40);
        }
        else {
          float v22 = *(unsigned __int16 **)(v4 + 40);
        }
        if (v18 >= 0) {
          float v23 = (unsigned __int16 *)(v5 + 40);
        }
        else {
          float v23 = *(unsigned __int16 **)(v5 + 40);
        }
        do
        {
          unsigned int v24 = *v22;
          unsigned int v25 = *v23;
          if (v24 < v25) {
            return 0xFFFFFFFFLL;
          }
          if (v25 < v24) {
            return 1;
          }
          ++v22;
          ++v23;
        }
        while (--v21);
      }
      if (v19 < v17) {
        uint64_t result = 0xFFFFFFFFLL;
      }
      else {
        uint64_t result = 1;
      }
      if (v17 == v19)
      {
        uint64_t result = (v26 - v27);
        if (v26 == v27)
        {
          uint64_t result = (v28 - v29);
          if (v28 == v29)
          {
            int v30 = *(unsigned __int8 *)(v5 + 64);
            int v31 = *(char *)(v4 + 64);
            uint64_t result = (v30 - v31);
            if (v30 == v31)
            {
              unsigned int v32 = *(unsigned __int8 *)(v5 + 65) - *(char *)(v4 + 65);
              if (v32 <= 1) {
                return 1;
              }
              else {
                return v32;
              }
            }
          }
        }
      }
    }
  }
  else
  {
LABEL_6:
    if (v5) {
      unsigned int v6 = -1;
    }
    else {
      unsigned int v6 = 0;
    }
    if (v4) {
      return 1;
    }
    else {
      return v6;
    }
  }
  return result;
}

void sub_1D2CEE0DC()
{
}

uint64_t mtokc_createTokenChain(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = npc<morphun::TokenChain const>(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v5 + 136))(v5, a2, a3);
}

CFStringRef mtokc_getTokenValueCopy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = npc<morphun::TokenChain const>(a1);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 144))(v3, a2);
  int v5 = *(char *)(v4 + 23);
  if (v5 >= 0) {
    unsigned int v6 = (const UniChar *)v4;
  }
  else {
    unsigned int v6 = *(const UniChar **)v4;
  }
  if (v5 >= 0) {
    CFIndex v7 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    CFIndex v7 = *(void *)(v4 + 8);
  }
  return CFStringCreateWithCharacters(0, v6, v7);
}

uint64_t mtokc_getToken(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = npc<morphun::TokenChain const>(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 152))(v3, a2);
}

CFStringRef mtokc_toStringCopy(uint64_t a1)
{
  void (***v1)(void **__return_ptr);
  void **v2;
  CFIndex v3;
  CFStringRef v4;
  void *__p[2];
  unsigned __int8 v7;

  uint64_t v1 = (void (***)(void **__return_ptr))npc<morphun::TokenChain const>(a1);
  (**v1)(__p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v2 = __p;
  }
  else {
    uint64_t v2 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    uint64_t v3 = v7;
  }
  else {
    uint64_t v3 = (CFIndex)__p[1];
  }
  uint64_t v4 = CFStringCreateWithCharacters(0, (const UniChar *)v2, v3);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1D2CEE35C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    int v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2CEE344);
  }
  _Unwind_Resume(exception_object);
}

CFStringRef mtokc_toOriginatingStringCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::TokenChain const>(a1);
  (*(void (**)(void **__return_ptr))(*(void *)v1 + 160))(__p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v2 = __p;
  }
  else {
    uint64_t v2 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    CFIndex v3 = v7;
  }
  else {
    CFIndex v3 = (CFIndex)__p[1];
  }
  CFStringRef v4 = CFStringCreateWithCharacters(0, (const UniChar *)v2, v3);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_1D2CEE450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    int v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2CEE438);
  }
  _Unwind_Resume(exception_object);
}

uint64_t mtokc_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

void morphun::analysis::ZhAnalyzer::addWordNormalizationFilter(morphun::analysis::ZhAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2CEE604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a12);
  uint64_t v27 = 0;
  while (1)
  {
    if (*(&a25 + v27) < 0) {
      operator delete(*(void **)((char *)&a20 + v27));
    }
    v27 -= 24;
    if (v27 == -48)
    {
      MEMORY[0x1D942B8B0](v25, 0x10E1C405080EBC7);
      _Unwind_Resume(a1);
    }
  }
}

void morphun::analysis::ZhAnalyzer::~ZhAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A07000);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A07000);
}

void morphun::analysis::tokenattributes::CharTermAttributeImpl::reflectWith(morphun::analysis::tokenattributes::CharTermAttributeImpl *this, morphun::analysis::util::AttributeReflector *a2)
{
  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"term");
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2CEE7B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

std::basic_string<char16_t> *morphun::analysis::tokenattributes::CharTermAttributeImpl::copyTo(morphun::analysis::tokenattributes::CharTermAttributeImpl *this, morphun::analysis::util::AttributeImpl *lpsrc)
{
  if (!lpsrc)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (!v3)
  {
    int v9 = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(_OWORD *)(v9 + 40) = 0u;
    *(void *)int v9 = &unk_1F2A11358;
  }
  CFStringRef v4 = (const std::basic_string<char16_t>::value_type *)((char *)this + *(void *)(*(void *)this - 104));
  if (*((char *)v4 + 23) < 0)
  {
    CFStringRef v4 = *(const std::basic_string<char16_t>::value_type **)v4;
    std::basic_string<char16_t>::size_type v5 = *(void *)((char *)this + *(void *)(*(void *)this - 104) + 8);
  }
  else
  {
    std::basic_string<char16_t>::size_type v5 = *((unsigned __int8 *)v4 + 23);
  }
  char v6 = (std::basic_string<char16_t> *)((char *)v3 + *(void *)(*v3 - 96));

  return std::basic_string<char16_t>::__assign_external(v6, v4, v5);
}

void sub_1D2CEE920(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *morphun::analysis::tokenattributes::CharTermAttributeImpl::clear(void *this)
{
  uint64_t v1 = (char *)this + *(void *)(*this - 104);
  if (v1[23] < 0)
  {
    **(_WORD **)uint64_t v1 = 0;
    *((void *)v1 + 1) = 0;
  }
  else
  {
    *(_WORD *)uint64_t v1 = 0;
    v1[23] = 0;
  }
  return this;
}

uint64_t morphun::analysis::tokenattributes::CharTermAttributeImpl::operator()(int a1, void *lpsrc)
{
  if (!v2) {
    __cxa_bad_cast();
  }
  return (*(int (**)(void *))(*(void *)v2 + 40))(v2);
}

unint64_t morphun::analysis::tokenattributes::CharTermAttributeImpl::hashCode(morphun::analysis::tokenattributes::CharTermAttributeImpl *this)
{
  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 104);
  int v2 = v1[23];
  if (v2 >= 0) {
    CFIndex v3 = (uint64_t *)((char *)this + *(void *)(*(void *)this - 104));
  }
  else {
    CFIndex v3 = *(uint64_t **)v1;
  }
  if (v2 >= 0) {
    uint64_t v4 = v1[23];
  }
  else {
    uint64_t v4 = *((void *)v1 + 1);
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v3, 2 * v4);
}

uint64_t morphun::analysis::tokenattributes::CharTermAttributeImpl::equals(morphun::analysis::tokenattributes::CharTermAttributeImpl *this, const morphun::analysis::util::Attribute *lpsrc)
{
  uint64_t v2 = *(void *)this;
  if ((morphun::analysis::tokenattributes::CharTermAttributeImpl *)((char *)this + *(void *)(*(void *)this - 88)) == lpsrc) {
    return 1;
  }
  if (!result) {
    return result;
  }
  std::basic_string<char16_t>::size_type v5 = (unsigned __int16 *)((char *)this + *(void *)(v2 - 104));
  char v6 = (unsigned __int16 *)(result + *(void *)(*(void *)result - 104));
  uint64_t v7 = *((unsigned __int8 *)v5 + 23);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *((void *)v5 + 1);
  }
  uint64_t v9 = *((unsigned __int8 *)v6 + 23);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *((void *)v6 + 1);
  }
  if (v7 != v9) {
    return 0;
  }
  if (!v7) {
    return 1;
  }
  if (v10 < 0) {
    char v6 = *(unsigned __int16 **)v6;
  }
  if (v8 < 0) {
    std::basic_string<char16_t>::size_type v5 = *(unsigned __int16 **)v5;
  }
  uint64_t v11 = v7 - 1;
  do
  {
    int v13 = *v5++;
    int v12 = v13;
    int v15 = *v6++;
    int v14 = v15;
    BOOL v17 = v11-- != 0;
    uint64_t result = v14 == v12;
  }
  while (v14 == v12 && v17);
  return result;
}

void morphun::analysis::tokenattributes::CharTermAttributeImpl::toString(morphun::analysis::tokenattributes::CharTermAttributeImpl *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v2 = (char *)this + *(void *)(*(void *)this - 104);
  if (v2[23] < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *(const std::basic_string<char16_t>::value_type **)v2, *((void *)v2 + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)v2;
    a2->__r_.__value_.__r.__words[2] = *((void *)v2 + 2);
  }
}

void morphun::grammar::synthesis::HiGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::HiGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  operator new();
}

void sub_1D2CEFAEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  MEMORY[0x1D942B8B0](v43, 0x1012C40EC159624);
  float v46 = v44;
  while (1)
  {
    BOOL v48 = *(v46 - 3);
    v46 -= 3;
    float v47 = v48;
    if (v48)
    {
      *(v44 - 2) = v47;
      operator delete(v47);
    }
    unint64_t v44 = v46;
    if (v46 == &a38)
    {
      uint64_t v49 = *(void *)(a11 + 32);
      *(void *)(a11 + 32) = 0;
      if (v49) {
        (*(void (**)(uint64_t))(*(void *)v49 + 16))(v49);
      }
      MEMORY[0x1D942B8B0](a11, 0x10F3C4056FCC081);
      _Unwind_Resume(a1);
    }
  }
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine(a1, a2, __p);
  char v6 = (void *)HIBYTE(v17);
  int v7 = SHIBYTE(v17);
  if (v17 < 0) {
    char v6 = __p[1];
  }
  if (v6) {
    goto LABEL_4;
  }
  uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a2 + 8);
  }
  if (!v8)
  {
LABEL_4:
    *(_OWORD *)a3 = *(_OWORD *)__p;
    a3[2] = v17;
    __p[1] = 0;
    uint64_t v17 = 0;
    __p[0] = 0;
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 208);
    if (!v9)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, a2);
    long long v15 = *(_OWORD *)(v10 + 8);
    uint64_t v11 = *((void *)&v15 + 1);
    if (*((void *)&v15 + 1))
    {
LABEL_11:
      uint64_t v11 = *(void *)(v11 + 80);
      goto LABEL_12;
    }
    while (1)
    {
LABEL_12:
      if (v11 == (void)v15)
      {
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
        goto LABEL_19;
      }
      if ((void)v15
      {
        break;
      }
      npc<morphun::Token const>(v15);
      *((void *)&v12 + 1) = *((void *)&v15 + 1);
      *(void *)&long long v12 = *(void *)(v15 + 80);
      long long v15 = v12;
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11) {
        goto LABEL_11;
      }
    }
    morphun::dialog::DictionaryLookupFunction::determine(a1, v15 + 16, a3);
LABEL_19:
    (*(void (**)(uint64_t))(*(void *)v10 + 16))(v10);
    if (v7 < 0)
    {
      int v13 = __p[0];
      operator delete(v13);
    }
  }
}

void sub_1D2CF02D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p)
{
  (*(void (**)(uint64_t))(*(void *)v12 + 16))(v12);
  if (v13 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction(morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction *this)
{
  morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::~PtGrammarSynthesizer_GenericLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0D610;
  uint64_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FB280;
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::PtGrammarSynthesizer_GenericLookupFunction::PtGrammarSynthesizer_GenericLookupFunction(morphun::util::LocaleUtils *a1)
{
  *(void *)&long long v10 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1F29FB228;
  uint64_t v2 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::PORTUGUESE(a1);
  uint64_t v3 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(v2);
  if (*(char *)(v3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, *(const std::basic_string<char16_t>::value_type **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    v9.__r_.__value_.__r.__words[2] = *(void *)(v3 + 16);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
  }
  std::basic_string<char16_t>::size_type v5 = 0;
  char v6 = 0;
  v7[0] = 0;
  v7[1] = &v5;
  char v8 = 0;
  std::basic_string<char16_t>::size_type v5 = (std::basic_string<char16_t> *)operator new(0x18uLL);
  char v6 = v5;
  v7[0] = v5 + 1;
  char v6 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v7, (long long *)&v9, &v10, v5);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)a1, (uint64_t *)&off_1F2A065B8, v2);
}

void sub_1D2CF05C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::UkGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::UkGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2CF0988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::~DictionaryMetaData_MMappedDictionary(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::~DictionaryMetaData_MMappedDictionary(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  uint64_t v4 = *((void *)this + 49);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  std::basic_string<char16_t>::size_type v5 = (morphun::util::MemoryMappedFile *)*((void *)this + 50);
  if (v5)
  {
    morphun::util::MemoryMappedFile::~MemoryMappedFile(v5);
    MEMORY[0x1D942B8B0]();
  }
  if (*((unsigned char *)this + 384))
  {
    uint64_t v6 = *((void *)this + 46);
    if (v6) {
      MEMORY[0x1D942B890](v6, 0x1000C8000313F17);
    }
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)this + 41);
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer((morphun::dictionary::DictionaryMetaData_MMappedDictionary *)((char *)this + 288));
  if (*((unsigned char *)this + 280))
  {
    uint64_t v7 = *((void *)this + 33);
    if (v7) {
      MEMORY[0x1D942B890](v7, 0x1000C8000313F17);
    }
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie((uint64_t)this + 184);
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer((morphun::dictionary::DictionaryMetaData_MMappedDictionary *)((char *)this + 144));
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::DictionaryMetaData_MMappedDictionary(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this, const morphun::util::ULocale *a2, const morphun::util::ULocale *a3)
{
  uint64_t v4 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v4 - 40)) = *((void *)a2 + 1);
  *((_WORD *)this + 4) = 0;
  morphun::util::ULocale::ULocale((morphun::dictionary::DictionaryMetaData_MMappedDictionary *)((char *)this + 16), a3);
  *((void *)this + 18) = 0;
  *((unsigned char *)this + 168) = 0;
  *((void *)this + 19) = 0;
  *((void *)this + 20) = 0;
  *((void *)this + 22) = 0;
  v7[0] = 0;
  v7[1] = 0;
  uint64_t v6 = v7;
  unint64_t FieldMetrics = morphun::dictionary::metadata::MarisaTrie<unsigned long long>::getFieldMetrics(&v6);
  morphun::dictionary::metadata::MarisaTrie<unsigned long long>::MarisaTrie((uint64_t)this + 184, (uint64_t)&v6, FieldMetrics);
}

void sub_1D2CF0E10(_Unwind_Exception *a1)
{
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)(v3 + 328));
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer((morphun::dictionary::metadata::StringArrayContainer *)(v3 + 288));
  if (*(unsigned char *)(v3 + 280))
  {
    uint64_t v6 = *(void *)(v3 + 264);
    if (v6) {
      MEMORY[0x1D942B890](v6, 0x1000C8000313F17);
    }
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(v4);
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer(v2);
  _Unwind_Resume(a1);
}

unint64_t morphun::dictionary::metadata::MarisaTrie<unsigned long long>::getFieldMetrics(void *a1)
{
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::CharsetConverter *)v32, "BOCU1");
  memset(&__p, 0, sizeof(__p));
  memset(&v30, 0, sizeof(v30));
  uint64_t v2 = (void *)*a1;
  int v29 = a1 + 1;
  if ((void *)*a1 == a1 + 1)
  {
    unint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v6 = 0;
    char v3 = 0;
    goto LABEL_36;
  }
  char v3 = 0;
  unint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  unsigned int v8 = 0;
  unint64_t v28 = a1[2];
  do
  {
    uint64_t v9 = v2[6];
    if (v28 >= 0x20000)
    {
      if (v28 >> 17 > v8)
      {
        ++v8;
        goto LABEL_25;
      }
      unsigned int v8 = 0;
    }
    std::basic_string<char16_t>::__assign_external(&v30, (const std::basic_string<char16_t>::value_type *)v2[4], v2[5]);
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v30.__r_.__value_.__l.__size_;
    }
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v11 = &v30;
    }
    else {
      uint64_t v11 = (std::basic_string<char16_t> *)v30.__r_.__value_.__r.__words[0];
    }
    morphun::dictionary::metadata::CharsetConverter::encode((uint64_t)v32, &__p, (uint64_t)v11, size);
    std::string::size_type v12 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::string::size_type v13 = __p.__r_.__value_.__l.__size_;
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v14 = &v30;
    }
    else {
      int v14 = (std::basic_string<char16_t> *)v30.__r_.__value_.__r.__words[0];
    }
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v15 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    }
    else {
      int v15 = v30.__r_.__value_.__r.__words[1];
    }
    morphun::util::StringViewUtils::convert(&__p, (uint64_t)v14, v15);
    v6 += size;
    if ((v12 & 0x80u) == 0) {
      std::string::size_type v16 = v12;
    }
    else {
      std::string::size_type v16 = v13;
    }
    v4 += v16;
    std::string::size_type v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    char v3 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v17 = __p.__r_.__value_.__l.__size_;
    }
    v5 += v17;
LABEL_25:
    int v18 = (void *)v2[1];
    if (v18)
    {
      do
      {
        unint64_t v19 = v18;
        int v18 = (void *)*v18;
      }
      while (v18);
    }
    else
    {
      do
      {
        unint64_t v19 = (void *)v2[2];
        BOOL v20 = *v19 == (void)v2;
        uint64_t v2 = v19;
      }
      while (!v20);
    }
    v7 |= v9;
    uint64_t v2 = v19;
  }
  while (v19 != v29);
  if (!v7)
  {
LABEL_36:
    unsigned __int16 v21 = 0;
    goto LABEL_37;
  }
  unsigned __int16 v21 = 0;
  do
  {
    ++v21;
    BOOL v22 = v7 > 1;
    v7 >>= 1;
  }
  while (v22);
LABEL_37:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v30.__r_.__value_.__l.__data_);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_54;
    }
  }
  else
  {
    if ((v3 & 0x80) == 0) {
      goto LABEL_39;
    }
LABEL_54:
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_39:
  if (!v21) {
    ++v21;
  }
  BOOL v23 = 2 * v6 >= v4 || 2 * v6 >= v5;
  uint64_t v24 = 1;
  if (!v23) {
    uint64_t v24 = 2;
  }
  if (v4 >= 2 * v6 || v4 >= v5) {
    uint64_t v26 = v24;
  }
  else {
    uint64_t v26 = 0;
  }
  return v26 | ((unint64_t)v21 << 32);
}

void sub_1D2CF10D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(a1);
}

void morphun::dictionary::metadata::MarisaTrie<unsigned long long>::MarisaTrie(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = 0;
  uint64_t v6 = (morphun::dictionary::metadata::CharsetConverter *)(a1 + 8);
  EncodingName = morphun::dictionary::metadata::MarisaTrie<unsigned long long>::getEncodingName(a3);
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter(v6, EncodingName);
  morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray((int *)(a1 + 24), (int)(a3 >> 16) >> 16, *(_DWORD *)(a2 + 16));
}

void sub_1D2CF12D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  marisa::Keyset::~Keyset((marisa::Keyset *)&a16);
  if (*(unsigned char *)(v16 + 48))
  {
    uint64_t v19 = *(void *)(v16 + 32);
    if (v19) {
      MEMORY[0x1D942B890](v19, 0x1000C8000313F17);
    }
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)v16);
  _Unwind_Resume(a1);
}

void morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray(int *a1, uint64_t **a2)
{
  uint64_t v2 = a2[1];
  if (*a2 == v2) {
    goto LABEL_8;
  }
  unint64_t v3 = 0;
  unint64_t v4 = *a2;
  do
  {
    uint64_t v5 = *v4++;
    v3 |= v5;
  }
  while (v4 != v2);
  if (!v3)
  {
LABEL_8:
    char v6 = 0;
  }
  else
  {
    char v6 = 0;
    do
    {
      ++v6;
      BOOL v7 = v3 >= 2;
      v3 >>= 1;
    }
    while (v7);
  }
  char v8 = v6;
  if ((v6 & 0xFE) == 0) {
    char v8 = 1;
  }
  morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray(a1, v8, (unint64_t)((char *)v2 - (char *)*a2) >> 3);
}

void sub_1D2CF1424(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v3 = *(void *)(v1 + 8);
    if (v3) {
      MEMORY[0x1D942B890](v3, 0x1000C8000313F17);
    }
  }
  _Unwind_Resume(exception_object);
}

void morphun::dictionary::metadata::CompressedArray<int>::CompressedArray(int *a1, int **a2)
{
  uint64_t v2 = a2[1];
  if (*a2 == v2) {
    goto LABEL_8;
  }
  unint64_t v3 = 0;
  unint64_t v4 = *a2;
  do
  {
    uint64_t v5 = *v4++;
    v3 |= v5;
  }
  while (v4 != v2);
  if (!v3)
  {
LABEL_8:
    char v6 = 0;
  }
  else
  {
    char v6 = 0;
    do
    {
      ++v6;
      BOOL v7 = v3 >= 2;
      v3 >>= 1;
    }
    while (v7);
  }
  char v8 = v6;
  if ((v6 & 0xFE) == 0) {
    char v8 = 1;
  }
  int v9 = ((unint64_t)((char *)v2 - (char *)*a2) >> 2) * v8;
  int v10 = v9 + 63;
  if (v9 < -63) {
    int v10 = v9 + 126;
  }
  *a1 = v10 >> 6;
  a1[1] = v8;
  operator new[]();
}

void sub_1D2CF1640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      if (*(unsigned char *)(v15 + 24))
      {
        uint64_t v19 = *(void *)(v15 + 8);
        if (v19) {
          MEMORY[0x1D942B890](v19, 0x1000C8000313F17);
        }
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

void morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray(int *a1, int a2, int a3)
{
  int v3 = a3 * a2 + 63;
  if (a3 * a2 < -63) {
    int v3 = a3 * a2 + 126;
  }
  *a1 = v3 >> 6;
  a1[1] = a2;
  operator new[]();
}

uint64_t morphun::dictionary::metadata::CompressedArray<unsigned long long>::write(uint64_t result, int a2, unint64_t a3)
{
  int v3 = *(_DWORD *)(result + 4);
  int v4 = v3 * a2;
  int v5 = v3 * a2 + 63;
  if (v3 * a2 >= 0) {
    int v5 = v3 * a2;
  }
  int v6 = v3 + v4;
  int v7 = v6 - 1;
  int v8 = v6 + 62;
  if (v7 >= 0) {
    int v8 = v7;
  }
  int v9 = v8 >> 6;
  if (v9 > *(_DWORD *)result)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"CompressedArray index too big");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  int v10 = v5 >> 6;
  char v11 = v4 - (v5 & 0xC0);
  std::string::size_type v12 = (void *)(*(void *)(result + 8) + 8 * v10);
  *v12 |= a3 << v11;
  if (v10 != v9) {
    v12[1] |= a3 >> -v11;
  }
  return result;
}

void sub_1D2CF1814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

char *morphun::dictionary::metadata::MarisaTrie<unsigned long long>::getEncodingName(unsigned int a1)
{
  if (a1 >= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(int)a1, &v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v6, "U", &v5, v4);
    morphun::exception::IllegalStateException::IllegalStateException((uint64_t)exception, &v6);
  }
  return (&off_1E696E050)[a1];
}

void sub_1D2CF18F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v20);
  goto LABEL_8;
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::DictionaryMetaData_MMappedDictionary(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this, const morphun::util::ULocale *a2)
{
  *(void *)this = &off_1F2A084F0;
  *((_WORD *)this + 4) = 0;
  morphun::util::ULocale::ULocale((morphun::dictionary::DictionaryMetaData_MMappedDictionary *)((char *)this + 16), a2);
  *((void *)this + 18) = 0;
  *((unsigned char *)this + 168) = 0;
  *((void *)this + 19) = 0;
  *((void *)this + 20) = 0;
  *((void *)this + 22) = 0;
  v5[0] = 0;
  v5[1] = 0;
  std::basic_string<char16_t>::size_type v4 = v5;
  unint64_t FieldMetrics = morphun::dictionary::metadata::MarisaTrie<unsigned long long>::getFieldMetrics(&v4);
  morphun::dictionary::metadata::MarisaTrie<unsigned long long>::MarisaTrie((uint64_t)this + 184, (uint64_t)&v4, FieldMetrics);
}

void sub_1D2CF1A5C(_Unwind_Exception *a1)
{
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)(v3 + 328));
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer((morphun::dictionary::metadata::StringArrayContainer *)(v3 + 288));
  if (*(unsigned char *)(v3 + 280))
  {
    uint64_t v6 = *(void *)(v3 + 264);
    if (v6) {
      MEMORY[0x1D942B890](v6, 0x1000C8000313F17);
    }
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(v4);
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer(v2);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::DictionaryMetaData_MMappedDictionary(uint64_t a1, uint64_t *a2, morphun::util::MemoryMappedFile *a3)
{
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v5 - 40)) = a2[1];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  LOWORD(v20[0]) = 0;
  morphun::util::MemoryMappedFile::read<short>(a3, v20);
  *(_WORD *)(a1 + 8) = v20[0];
  uint64_t v6 = (void *)npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  __s[0] = 0;
  morphun::util::MemoryMappedFile::read<char *>(v6, __s, 4uLL);
  std::string::basic_string[abi:ne180100]<0>(v20, __s[0]);
  __s[0] = 0;
  __s[1] = 0;
  uint64_t v19 = 0;
  v16[0] = 0;
  v16[1] = 0;
  uint64_t v17 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v15 = 0;
  morphun::util::ULocale::ULocale(a1 + 16, (uint64_t)v20, (uint64_t)__s, (uint64_t)v16, (uint64_t)__p);
  if (SHIBYTE(v15) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(v16[0]);
  }
  if (SHIBYTE(v19) < 0) {
    operator delete(__s[0]);
  }
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  morphun::dictionary::metadata::StringArrayContainer::StringArrayContainer((morphun::dictionary::metadata::StringArrayContainer *)(a1 + 144), a3);
  npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  LOBYTE(v20[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a3, v20);
  *(unsigned char *)(a1 + 176) = v20[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  LOBYTE(v20[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a3, v20);
  *(unsigned char *)(a1 + 177) = v20[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  LOBYTE(v20[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a3, v20);
  *(unsigned char *)(a1 + 178) = v20[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  LOBYTE(v20[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a3, v20);
  *(unsigned char *)(a1 + 179) = v20[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  LODWORD(v20[0]) = 0;
  morphun::util::MemoryMappedFile::read<int>(a3, v20);
  *(_DWORD *)(a1 + 180) = v20[0];
  morphun::dictionary::metadata::MarisaTrie<unsigned long long>::MarisaTrie(a1 + 184, a3);
  npc<morphun::util::MemoryMappedFile>((uint64_t)a3);
  uint64_t v7 = *(int *)(a1 + 180);
  v20[0] = 0;
  morphun::util::MemoryMappedFile::read<long long *>(a3, v20, 8 * v7);
  *(void **)(a1 + 248) = v20[0];
  morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray((int *)(a1 + 256), a3);
  morphun::dictionary::metadata::StringArrayContainer::StringArrayContainer((morphun::dictionary::metadata::StringArrayContainer *)(a1 + 288), a3);
  morphun::dictionary::metadata::StringContainer::StringContainer((morphun::dictionary::metadata::StringContainer *)(a1 + 320), a3);
  morphun::dictionary::metadata::CompressedArray<int>::CompressedArray((int *)(a1 + 360), a3);
  if (*(_WORD *)(a1 + 8)) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = a3;
  int IdentifierIfAvailable = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(a1 + 288, (unsigned __int16 *)"i", 0xAuLL);
  *(_DWORD *)(a1 + 408) = IdentifierIfAvailable;
  *(_DWORD *)(a1 + 412) = ~(-1 << *(unsigned char *)(a1 + 178));
  unint64_t v9 = *(int *)(a1 + 288);
  if (v9)
  {
    char v10 = 0;
    do
    {
      ++v10;
      BOOL v11 = v9 > 1;
      v9 >>= 1;
    }
    while (v11);
  }
  else
  {
    char v10 = 0;
  }
  char v12 = v10;
  if ((v10 & 0xFE) == 0) {
    char v12 = 1;
  }
  *(_DWORD *)(a1 + 416) = v12;
  *(unsigned char *)(a1 + 420) = *(_DWORD *)(a1 + 256) != 0;
  return a1;
}

void sub_1D2CF1E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (*(unsigned char *)(v32 + 384))
  {
    uint64_t v38 = *(void *)(v32 + 368);
    if (v38) {
      MEMORY[0x1D942B890](v38, 0x1000C8000313F17);
    }
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)(v32 + 328));
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer(v36);
  if (*(unsigned char *)(v32 + 280))
  {
    uint64_t v39 = *(void *)(v32 + 264);
    if (v39) {
      MEMORY[0x1D942B890](v39, 0x1000C8000313F17);
    }
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(v35);
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer(v34);
  _Unwind_Resume(a1);
}

void sub_1D2CF1FD0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrie<unsigned long long>::MarisaTrie(uint64_t a1, void *a2)
{
  morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LODWORD(v9[0]) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, v9);
  unint64_t v4 = LODWORD(v9[0]);
  uint64_t v5 = (void *)morphun::util::Validate::notNull<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOWORD(v9[0]) = 0;
  morphun::util::MemoryMappedFile::read<short>(v5, v9);
  unsigned int v6 = SLOWORD(v9[0]);
  *(void *)a1 = 0;
  EncodingName = morphun::dictionary::metadata::MarisaTrie<unsigned long long>::getEncodingName(v6);
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::CharsetConverter *)(a1 + 8), EncodingName);
  morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray((int *)(a1 + 24), a2);
  *(unsigned char *)(a1 + 56) = v6;
  if ((int)v4 < 1)
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    *(_OWORD *)unint64_t v9 = 0u;
    memset(v10, 0, sizeof(v10));
    marisa::Trie::build((marisa::grimoire::trie::LoudsTrie **)a1, (marisa::Keyset *)v9);
    marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array((uint64_t *)v11);
    marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)v10 + 1);
    marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)v9);
  }
  else
  {
    npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
    v9[0] = 0;
    morphun::util::MemoryMappedFile::read<char *>(a2, v9, v4);
    marisa::Trie::map((marisa::grimoire::trie::LoudsTrie **)a1, v9[0], v4);
  }
  return a1;
}

void sub_1D2CF20FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array((uint64_t *)(v11 + 48));
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)(v11 + 24));
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array(&a9);
  if (*(unsigned char *)(v9 + 48))
  {
    uint64_t v13 = *(void *)(v9 + 32);
    if (v13) {
      MEMORY[0x1D942B890](v13, 0x1000C8000313F17);
    }
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)v9);
  _Unwind_Resume(a1);
}

int *morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray(int *a1, void *a2)
{
  unint64_t v4 = a1 + 1;
  *(void *)a1 = 0;
  *((unsigned char *)a1 + 24) = 0;
  *((void *)a1 + 2) = 0;
  *((void *)a1 + 1) = 0;
  uint64_t v5 = a1 + 2;
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  morphun::util::MemoryMappedFile::read<int>(a2, a1);
  morphun::util::MemoryMappedFile::read<int>(a2, v4);
  morphun::util::MemoryMappedFile::read<unsigned long long *>(a2, v5, 8 * *a1);
  *((void *)a1 + 2) = ~(-1 << a1[1]);
  return a1;
}

uint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::DictionaryMetaData_MMappedDictionary(uint64_t a1, morphun::util::MemoryMappedFile *a2)
{
  *(void *)a1 = &off_1F2A084F0;
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOWORD(v17[0]) = 0;
  morphun::util::MemoryMappedFile::read<short>(a2, v17);
  *(_WORD *)(a1 + 8) = v17[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  __s[0] = 0;
  morphun::util::MemoryMappedFile::read<char *>(a2, __s, 4uLL);
  std::string::basic_string[abi:ne180100]<0>(v17, __s[0]);
  __s[0] = 0;
  __s[1] = 0;
  uint64_t v16 = 0;
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v12 = 0;
  morphun::util::ULocale::ULocale(a1 + 16, (uint64_t)v17, (uint64_t)__s, (uint64_t)v13, (uint64_t)__p);
  if (SHIBYTE(v12) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(__s[0]);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  morphun::dictionary::metadata::StringArrayContainer::StringArrayContainer((morphun::dictionary::metadata::StringArrayContainer *)(a1 + 144), a2);
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOBYTE(v17[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, v17);
  *(unsigned char *)(a1 + 176) = v17[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOBYTE(v17[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, v17);
  *(unsigned char *)(a1 + 177) = v17[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOBYTE(v17[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, v17);
  *(unsigned char *)(a1 + 178) = v17[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LOBYTE(v17[0]) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, v17);
  *(unsigned char *)(a1 + 179) = v17[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LODWORD(v17[0]) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, v17);
  *(_DWORD *)(a1 + 180) = v17[0];
  morphun::dictionary::metadata::MarisaTrie<unsigned long long>::MarisaTrie(a1 + 184, a2);
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  uint64_t v4 = *(int *)(a1 + 180);
  v17[0] = 0;
  morphun::util::MemoryMappedFile::read<long long *>(a2, v17, 8 * v4);
  *(void **)(a1 + 248) = v17[0];
  morphun::dictionary::metadata::CompressedArray<unsigned long long>::CompressedArray((int *)(a1 + 256), a2);
  morphun::dictionary::metadata::StringArrayContainer::StringArrayContainer((morphun::dictionary::metadata::StringArrayContainer *)(a1 + 288), a2);
  morphun::dictionary::metadata::StringContainer::StringContainer((morphun::dictionary::metadata::StringContainer *)(a1 + 320), a2);
  morphun::dictionary::metadata::CompressedArray<int>::CompressedArray((int *)(a1 + 360), a2);
  if (*(_WORD *)(a1 + 8)) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = a2;
  int IdentifierIfAvailable = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(a1 + 288, (unsigned __int16 *)"i", 0xAuLL);
  *(_DWORD *)(a1 + 408) = IdentifierIfAvailable;
  *(_DWORD *)(a1 + 412) = ~(-1 << *(unsigned char *)(a1 + 178));
  unint64_t v6 = *(int *)(a1 + 288);
  if (v6)
  {
    char v7 = 0;
    do
    {
      ++v7;
      BOOL v8 = v6 > 1;
      v6 >>= 1;
    }
    while (v8);
  }
  else
  {
    char v7 = 0;
  }
  char v9 = v7;
  if ((v7 & 0xFE) == 0) {
    char v9 = 1;
  }
  *(_DWORD *)(a1 + 416) = v9;
  *(unsigned char *)(a1 + 420) = *(_DWORD *)(a1 + 256) != 0;
  return a1;
}

void sub_1D2CF2508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (*(unsigned char *)(v32 + 384))
  {
    uint64_t v38 = *(void *)(v32 + 368);
    if (v38) {
      MEMORY[0x1D942B890](v38, 0x1000C8000313F17);
    }
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)(v32 + 328));
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer(v36);
  if (*(unsigned char *)(v32 + 280))
  {
    uint64_t v39 = *(void *)(v32 + 264);
    if (v39) {
      MEMORY[0x1D942B890](v39, 0x1000C8000313F17);
    }
  }
  morphun::dictionary::metadata::MarisaTrie<int>::~MarisaTrie(v35);
  morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer(v34);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::dictionary::DictionaryMetaData_MMappedDictionary::~DictionaryMetaData_MMappedDictionary(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::getLocale(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this)
{
  return (uint64_t)this + 16;
}

unint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordType(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = morphun::dictionary::metadata::MarisaTrie<unsigned long long>::find((marisa::Trie *)(a1 + 184), a2, a3);
  if (!v5) {
    goto LABEL_6;
  }
  __int16 v6 = v4;
  if (*(unsigned char *)(a1 + 420)) {
    __int16 v6 = morphun::dictionary::metadata::CompressedArray<unsigned long long>::read(a1 + 256, v4);
  }
  int Value = morphun::dictionary::metadata::CompressedArray<short>::extractValue(v6, *(unsigned __int8 *)(a1 + 176));
  if (Value)
  {
    unint64_t v8 = *(void *)(*(void *)(a1 + 248) + 8 * Value) & 0xFFFFFFFFFFFFFF00;
    uint64_t v9 = *(void *)(*(void *)(a1 + 248) + 8 * Value);
  }
  else
  {
LABEL_6:
    uint64_t v9 = 0;
    unint64_t v8 = 0;
  }
  return v8 | v9;
}

uint64_t morphun::dictionary::metadata::MarisaTrie<unsigned long long>::find(marisa::Trie *a1, uint64_t a2, int a3)
{
  memset(&__p, 0, sizeof(__p));
  long long v11 = 0u;
  memset(v10, 0, sizeof(v10));
  morphun::dictionary::metadata::CharsetConverter::encode((uint64_t)a1 + 8, &__p, a2, a3);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  marisa::Agent::set_query(v10, (const char *)p_p, size);
  int v6 = marisa::Trie::lookup(a1, (marisa::Agent *)v10);
  int v7 = DWORD1(v11);
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((void *)&v11 + 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v6) {
    int v8 = v7;
  }
  else {
    int v8 = -1;
  }
  if (v8 < 0) {
    return 0;
  }
  else {
    return morphun::dictionary::metadata::CompressedArray<unsigned long long>::read((uint64_t)a1 + 24, v8);
  }
}

void sub_1D2CF2814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::CompressedArray<unsigned long long>::read(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = v2 * a2;
  int v4 = v2 * a2 + 63;
  if (v2 * a2 >= 0) {
    int v4 = v2 * a2;
  }
  int v5 = v2 + v3;
  int v6 = v5 - 1;
  int v7 = v5 + 62;
  if (v6 >= 0) {
    int v7 = v6;
  }
  if (a2 < 0 || (int v8 = v7 >> 6, v8 > *(_DWORD *)a1))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Invalid CompressedArray index");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  int v9 = v4 >> 6;
  char v10 = v3 - (v4 & 0xC0);
  long long v11 = (void *)(*(void *)(a1 + 8) + 8 * (v4 >> 6));
  uint64_t v12 = *v11 >> v10;
  if (v9 != v8) {
    v12 |= v11[1] << -v10;
  }
  return v12 & *(void *)(a1 + 16);
}

void sub_1D2CF2930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::getValueOfType(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  int IdentifierIfAvailable = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(a1 + 144, a2, a3);
  if (IdentifierIfAvailable < 0) {
    return 0;
  }
  else {
    return 1 << IdentifierIfAvailable;
  }
}

uint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::getValuesOfTypes(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 == v3) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 144;
  do
  {
    if (*(char *)(v2 + 23) < 0)
    {
      int v7 = *(unsigned __int16 **)v2;
      unint64_t v6 = *(void *)(v2 + 8);
    }
    else
    {
      unint64_t v6 = *(unsigned __int8 *)(v2 + 23);
      int v7 = (unsigned __int16 *)v2;
    }
    int IdentifierIfAvailable = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(v5, v7, v6);
    uint64_t v9 = 1 << IdentifierIfAvailable;
    if (IdentifierIfAvailable < 0) {
      uint64_t v9 = 0;
    }
    v4 |= v9;
    v2 += 24;
  }
  while (v2 != v3);
  return v4;
}

void *morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypeOfValue@<X0>(void *this@<X0>, int8x8_t a2@<X1>, uint64_t a3@<X8>)
{
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(a2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] == 1
    && (uint8x8_t v5 = (uint8x8_t)vcnt_s8((int8x8_t)(*(void *)&a2 - 1)),
        v5.i16[0] = vaddlv_u8(v5),
        int v6 = *((_DWORD *)this + 36),
        this += 18,
        v6 > v5.i32[0]))
  {
    this = morphun::dictionary::metadata::StringArrayContainer::getString(this, v5.u32[0], (uint64_t)&v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    *(unsigned char *)(a3 + 24) = 1;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 24) = 0;
  }
  return this;
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (a2)
  {
    unint64_t v3 = a2;
    do
    {
      morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypeOfValue(this, (int8x8_t)((((v3 - 1) ^ v3) >> 1) + 1), (uint64_t)__p);
      if (v11)
      {
        unint64_t v6 = a3[1];
        if (v6 >= a3[2])
        {
          uint64_t v8 = std::vector<std::basic_string<char16_t>>::__push_back_slow_path<std::basic_string<char16_t> const&>(a3, (long long *)__p);
          char v7 = HIBYTE(v10);
        }
        else
        {
          char v7 = HIBYTE(v10);
          if (SHIBYTE(v10) < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a3[1], (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
          }
          else
          {
            *(_OWORD *)unint64_t v6 = *(_OWORD *)__p;
            *(void *)(v6 + 16) = v10;
          }
          uint64_t v8 = v6 + 24;
          a3[1] = v6 + 24;
        }
        a3[1] = v8;
        if (v7 < 0) {
          operator delete(__p[0]);
        }
      }
      v3 &= v3 - 1;
    }
    while (v3);
  }
}

void sub_1D2CF2B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  v14[1] = v15;
  operator delete(__p);
  std::string __p = v14;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::getAllWords(morphun::dictionary::DictionaryMetaData_MMappedDictionary *this@<X0>, void *a2@<X8>)
{
  morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::MarisaTrieIterator((uint64_t)v3, (uint64_t)this + 184, &word_1D2ED0AEE, 0);
  morphun::dictionary::DictionaryKeyIterator::DictionaryKeyIterator(a2);
}

void sub_1D2CF2C1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::~MarisaTrieIterator((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::MarisaTrieIterator(uint64_t a1, uint64_t a2, __int16 *__src, unint64_t a4)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  uint8x8_t v5 = (marisa::Agent *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a4 >= 0xB)
  {
    uint64_t v11 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a4 | 3) != 0xB) {
      uint64_t v11 = a4 | 3;
    }
    uint64_t v9 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v11 + 1);
    *(void *)(a1 + 64) = a4;
    *(void *)(a1 + 72) = v12 | 0x8000000000000000;
    *(void *)(a1 + 56) = v9;
  }
  else
  {
    *(unsigned char *)(a1 + 79) = a4;
    uint64_t v9 = (void *)(a1 + 56);
    if (!a4)
    {
      *(_OWORD *)(a1 + 80) = 0uLL;
      *(_WORD *)(a1 + 56) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      uint64_t v10 = (unsigned char *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = 0uLL;
      memset(&__p, 0, sizeof(__p));
LABEL_9:
      p_p = &__p;
      goto LABEL_11;
    }
  }
  memmove(v9, __src, 2 * a4);
  *((_WORD *)v9 + a4) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  uint64_t v10 = (unsigned char *)(a1 + 112);
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  memset(&__p, 0, sizeof(__p));
  morphun::dictionary::metadata::CharsetConverter::encode(a2 + 8, &__p, (uint64_t)__src, a4);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_9;
  }
  p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if (!__p.__r_.__value_.__r.__words[0])
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc";
    exception[2] = 0x20000000FLL;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/agent.cc:15: MARI"
                   "SA_NULL_ERROR: str == NULL";
  }
LABEL_11:
  uint64_t v14 = *(void *)(a1 + 48);
  if (v14) {
    *(_DWORD *)(v14 + 108) = 0;
  }
  uint64_t v15 = 0;
  do
    uint64_t v16 = v15;
  while (p_p->__r_.__value_.__s.__data_[v15++]);
  *(void *)(a1 + 8) = p_p;
  *(void *)(a1 + 16) = v16;
  if (a4 == 1 && *__src == -1 || (marisa::Trie::predictive_search(*(marisa::Trie **)a1, v5) & 1) == 0) {
    *uint64_t v10 = 1;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1D2CF2E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((void *)(v15 + 48));
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::~MarisaTrieIterator(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((void *)(a1 + 48));
  return a1;
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::getPropertyMapInternalIdentifiers(uint64_t a1, std::vector<int> *this, int a3, int a4)
{
  std::vector<int>::reserve(this, a4);
  if (a4 >= 1)
  {
    int v8 = 0;
    uint64_t v9 = a1 + 360;
    do
    {
      int v10 = morphun::dictionary::metadata::CompressedArray<int>::read(v9, v8 + a3);
      int v11 = v10;
      std::vector<int>::pointer end = this->__end_;
      value = this->__end_cap_.__value_;
      if (end >= value)
      {
        std::vector<int>::pointer begin = this->__begin_;
        uint64_t v16 = end - this->__begin_;
        unint64_t v17 = v16 + 1;
        if ((unint64_t)(v16 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v18 = (char *)value - (char *)begin;
        if (v18 >> 1 > v17) {
          unint64_t v17 = v18 >> 1;
        }
        if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v19 = v17;
        }
        if (v19)
        {
          unint64_t v19 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v19);
          std::vector<int>::pointer begin = this->__begin_;
          std::vector<int>::pointer end = this->__end_;
        }
        else
        {
          uint64_t v20 = 0;
        }
        char v21 = (int *)(v19 + 4 * v16);
        *char v21 = v11;
        uint64_t v14 = v21 + 1;
        while (end != begin)
        {
          int v22 = *--end;
          *--char v21 = v22;
        }
        this->__begin_ = v21;
        this->__end_ = v14;
        this->__end_cap_.__value_ = (int *)(v19 + 4 * v20);
        if (begin) {
          operator delete(begin);
        }
      }
      else
      {
        *std::vector<int>::pointer end = v10;
        uint64_t v14 = end + 1;
      }
      this->__end_ = v14;
      ++v8;
    }
    while (v8 != a4);
  }
}

uint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordPropertyInternalIdentifiers(uint64_t a1, std::vector<int> *a2, uint64_t a3, int a4, int a5)
{
  if (a5 < 0) {
    return 0;
  }
  uint64_t v8 = morphun::dictionary::metadata::MarisaTrie<unsigned long long>::find((marisa::Trie *)(a1 + 184), a3, a4);
  if (!v9) {
    return 0;
  }
  unint64_t v10 = v8;
  if (*(unsigned char *)(a1 + 420)) {
    unint64_t v10 = morphun::dictionary::metadata::CompressedArray<unsigned long long>::read(a1 + 256, v8);
  }
  uint64_t result = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v10, *(unsigned __int8 *)(a1 + 176), *(unsigned __int8 *)(a1 + 177));
  if (result)
  {
    int v12 = result;
    a2->__end_ = a2->__begin_;
    int v13 = morphun::dictionary::metadata::CompressedArray<int>::read(a1 + 360, result);
    int Value = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v13, (*(unsigned char *)(a1 + 179) + *(unsigned char *)(a1 + 178)), *(unsigned __int8 *)(a1 + 416));
    if (Value >= 1)
    {
      int v15 = Value;
      int v16 = 0;
      int v17 = v12;
      for (int i = Value; i; --i)
      {
        int v19 = morphun::dictionary::metadata::CompressedArray<int>::read(a1 + 360, v17);
        unsigned int v20 = morphun::dictionary::metadata::CompressedArray<int>::extractValue(v19, 0, (*(unsigned char *)(a1 + 179) + *(unsigned char *)(a1 + 178)));
        int v21 = *(_DWORD *)(a1 + 412) & v20;
        if (v21 > a5) {
          break;
        }
        int v22 = v20 >> *(unsigned char *)(a1 + 178);
        if (v21 == a5)
        {
          morphun::dictionary::DictionaryMetaData_MMappedDictionary::getPropertyMapInternalIdentifiers(a1, a2, v15 + v12 + v16, v22);
          return 1;
        }
        v16 += v22;
        ++v17;
      }
    }
    return 0;
  }
  return result;
}

uint64_t morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordPropertyValues(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, unsigned __int16 *a5, unint64_t a6)
{
  int Identifier = morphun::dictionary::metadata::StringArrayContainer::getIdentifier(a1 + 288, a5, a6);
  memset(&v36, 0, sizeof(v36));
  uint64_t WordPropertyInternalIdentifiers = morphun::dictionary::DictionaryMetaData_MMappedDictionary::getWordPropertyInternalIdentifiers(a1, &v36, a3, a4, Identifier);
  uint64_t v12 = WordPropertyInternalIdentifiers;
  if (a2) {
    char v13 = WordPropertyInternalIdentifiers;
  }
  else {
    char v13 = 0;
  }
  if (v13)
  {
    if (*(void *)(a1 + 392)) {
      BOOL v14 = Identifier == *(_DWORD *)(a1 + 408);
    }
    else {
      BOOL v14 = 0;
    }
    std::vector<int>::pointer begin = v36.__begin_;
    std::vector<int>::pointer end = v36.__end_;
    if (v36.__begin_ != v36.__end_)
    {
      unsigned int v33 = v12;
      std::vector<int>::pointer v34 = v36.__begin_;
      int v17 = v36.__begin_;
      do
      {
        if (v14)
        {
          uint64_t v18 = *(void *)(a1 + 392);
          if (!v18)
          {
            exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(exception);
          }
          morphun::dictionary::metadata::MarisaTrie<int>::getKey(&__p, (marisa::Trie *)(v18 + 248), *v17);
        }
        else
        {
          morphun::dictionary::metadata::StringContainer::getString((morphun::dictionary::metadata::StringContainer *)(a1 + 320), *v17, &__p);
        }
        unint64_t v20 = a2[1];
        unint64_t v19 = a2[2];
        if (v20 >= v19)
        {
          unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - *a2) >> 3);
          unint64_t v23 = v22 + 1;
          if (v22 + 1 > 0xAAAAAAAAAAAAAAALL) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v19 - *a2) >> 3);
          if (2 * v24 > v23) {
            unint64_t v23 = 2 * v24;
          }
          if (v24 >= 0x555555555555555) {
            unint64_t v25 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v25 = v23;
          }
          v37[4] = a2 + 2;
          if (v25) {
            unint64_t v25 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v25);
          }
          else {
            uint64_t v26 = 0;
          }
          unint64_t v27 = v25 + 24 * v22;
          v37[0] = v25;
          v37[1] = v27;
          v37[3] = v25 + 24 * v26;
          long long v28 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v27 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v27 = v28;
          memset(&__p, 0, sizeof(__p));
          v37[2] = v27 + 24;
          std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(a2, v37);
          uint64_t v29 = a2[1];
          std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)v37);
          int v30 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          a2[1] = v29;
          if (v30 < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v21 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v20 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v20 = v21;
          a2[1] = v20 + 24;
        }
        ++v17;
      }
      while (v17 != end);
      std::vector<int>::pointer begin = v34;
      uint64_t v12 = v33;
    }
  }
  else
  {
    std::vector<int>::pointer begin = v36.__begin_;
  }
  if (begin)
  {
    v36.__end_ = begin;
    operator delete(begin);
  }
  return v12;
}

void sub_1D2CF33BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18)
{
  if (a18) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dictionary::DictionaryMetaData_MMappedDictionary::createDictionary()
{
}

void sub_1D2CF36BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
    {
LABEL_8:
      std::unique_ptr<morphun::util::MemoryMappedFile>::reset[abi:ne180100]((morphun::util::MemoryMappedFile **)(v23 - 40));
      _Unwind_Resume(a1);
    }
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_1D2CF377C()
{
  MEMORY[0x1D942B8B0](v0, 0x1010C40A6225C5ALL);
  JUMPOUT(0x1D2CF3774);
}

morphun::util::MemoryMappedFile *std::unique_ptr<morphun::util::MemoryMappedFile>::reset[abi:ne180100](morphun::util::MemoryMappedFile **a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result)
  {
    morphun::util::MemoryMappedFile::~MemoryMappedFile(result);
    JUMPOUT(0x1D942B8B0);
  }
  return result;
}

void morphun::dialog::language::EnCommonConceptFactory::~EnCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05768);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05768);
}

uint64_t **com::apple::siri::cortex::common::supported_locales::getContent@<X0>(uint64_t **a1@<X8>)
{
  __dst[114] = *(unsigned __int16 **)MEMORY[0x1E4F143B8];
  memcpy(__dst, &off_1E696BB28, 0x390uLL);
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, __dst, 38);
}

void morphun::dialog::language::PtCommonConceptFactory::~PtCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05AE8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05AE8);
}

uint64_t morphun::grammar::synthesis::HiGrammarSynthesizer_HiDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((void *)&v172 + 1) = *MEMORY[0x1E4F143B8];
  TheBestDisplayint Value = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(void *)(a2 + 8), *(void *)(a2 + 16), a3);
  uint64_t v7 = TheBestDisplayValue;
  if (!TheBestDisplayValue) {
    return v7;
  }
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v8 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v153, *(const std::basic_string<char16_t>::value_type **)v8, *(void *)(v8 + 8));
  }
  else
  {
    long long v9 = *(_OWORD *)v8;
    v153.__r_.__value_.__r.__words[2] = *(void *)(v8 + 16);
    *(_OWORD *)&v153.__r_.__value_.__l.__data_ = v9;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(v153.__r_.__value_.__r.__words[2]);
  if ((v153.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v153.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    uint64_t v7 = 0;
    if ((*((unsigned char *)&v153.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_278;
    }
    return v7;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::mergeConstraintsWithDisplayValue(v152, v7, a3);
  *(_OWORD *)v147 = *(_OWORD *)(a1 + 1);
  int v11 = operator new(0x10uLL);
  *int v11 = *(_OWORD *)v147;
  BOOL hasAnyFeatures = morphun::grammar::synthesis::GrammarSynthesizerUtil::hasAnyFeatures(a3, (uint64_t)v11, (uint64_t)(v11 + 1));
  operator delete(v11);
  if (!hasAnyFeatures) {
    goto LABEL_276;
  }
  uint64_t v13 = a1[4];
  if (!v13)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v14 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v13 + 24))(v13, &v153);
  npc<morphun::TokenChain>(v14);
  npc<morphun::TokenChain>(v14);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)&v155, (const morphun::TokenChain *)v14);
  int v16 = v155;
  int v15 = v156;
  if (v156 == v155)
  {
    unint64_t v158 = 0;
    long long v157 = 0uLL;
    memset(v170, 0, 24);
    char v159 = 1;
    v160.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v170;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v160);
    goto LABEL_268;
  }
  unsigned int v17 = 0;
  uint64_t v146 = (uint64_t)(a1 + 5);
  uint64_t v18 = a1[6];
  uint64_t v142 = v14;
  while (1)
  {
    *(void *)&v170[0] = 0;
    if (v16[23] < 0)
    {
      unint64_t v20 = *(const UChar **)v16;
      uint64_t v19 = *((void *)v16 + 1);
    }
    else
    {
      uint64_t v19 = v16[23];
      unint64_t v20 = (const UChar *)v16;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)v170, v20, v19);
    if ((a1[37] & ~*(void *)&v170[0]) == 0) {
      break;
    }
    ++v17;
    v16 += 24;
    if (v16 == v15)
    {
      uint64_t v21 = -1;
      goto LABEL_22;
    }
  }
  uint64_t v21 = v17;
LABEL_22:
  long long v162 = 0uLL;
  unint64_t v163 = 0;
  std::vector<std::basic_string<char16_t>>::reserve((uint64_t *)&v162, 0xAAAAAAAAAAAAAAABLL * ((v156 - v155) >> 3));
  int v22 = (unsigned __int16 *)v155;
  v148 = (unsigned __int16 *)v156;
  if (v155 != v156)
  {
    uint64_t v23 = 0;
    while (v21 == v23)
    {
      if (*((char *)v22 + 23) < 0)
      {
        unint64_t v25 = *(unsigned __int16 **)v22;
        uint64_t v24 = *((void *)v22 + 1);
      }
      else
      {
        uint64_t v24 = *((unsigned __int8 *)v22 + 23);
        unint64_t v25 = v22;
      }
      uint64_t v26 = 0;
      v170[0] = xmmword_1E696BEB8;
      v170[1] = unk_1E696BEC8;
      v170[2] = xmmword_1E696BED8;
      do
      {
        unint64_t v27 = (std::basic_string<char16_t> *)&v170[v26];
        if (v27->__r_.__value_.__l.__size_ == v24)
        {
          if (!v24) {
            goto LABEL_37;
          }
          long long v28 = (unsigned __int16 *)v27->__r_.__value_.__r.__words[0];
          uint64_t v29 = v24;
          int v30 = v25;
          while (*v30 == *v28)
          {
            ++v28;
            ++v30;
            if (!--v29) {
              goto LABEL_37;
            }
          }
        }
        ++v26;
      }
      while (v26 != 3);
      unint64_t v27 = &v171;
LABEL_37:
      if ((char *)v27 - (char *)v170 != 48) {
        break;
      }
      uint64_t v31 = (long long *)*((void *)&v162 + 1);
      if (*((void *)&v162 + 1) >= v163)
      {
        uint64_t v44 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v162, (long long *)v22);
      }
      else
      {
        if (*((char *)v22 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)&v162 + 1), *(const std::basic_string<char16_t>::value_type **)v22, *((void *)v22 + 1));
        }
        else
        {
          long long v32 = *(_OWORD *)v22;
          *(void *)(*((void *)&v162 + 1) + 16) = *((void *)v22 + 2);
          *uint64_t v31 = v32;
        }
        uint64_t v44 = (uint64_t)v31 + 24;
      }
      *((void *)&v162 + 1) = v44;
LABEL_220:
      ++v23;
      v22 += 12;
      if (v22 == v148)
      {
        int v22 = (unsigned __int16 *)v155;
        char v117 = v156;
        goto LABEL_226;
      }
    }
    uint64_t v169 = 0;
    int v33 = *((char *)v22 + 23);
    if (v33 >= 0) {
      std::vector<int>::pointer v34 = v22;
    }
    else {
      std::vector<int>::pointer v34 = *(const UChar **)v22;
    }
    if (v33 >= 0) {
      uint64_t v35 = *((unsigned __int8 *)v22 + 23);
    }
    else {
      uint64_t v35 = *((void *)v22 + 1);
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[6], (uint64_t)&v169, v34, v35);
    if ((a1[36] & v169) != 0 && v21 <= v23)
    {
      long long v143 = *(_OWORD *)(a1 + 1);
      uint64_t v38 = (uint64_t *)operator new(0x10uLL);
      *(_OWORD *)uint64_t v38 = v143;
      morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v171, a3, v38, v38 + 2);
    }
    else
    {
      uint64_t v37 = a1[1];
      uint64_t v38 = (uint64_t *)operator new(8uLL);
      uint64_t *v38 = v37;
      morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v171, a3, v38, v38 + 1);
    }
    operator delete(v38);
    if (v21 > v23)
    {
      uint64_t v40 = morphun::grammar::synthesis::GrammemeConstants::CASE_OBLIQUE(v39);
      unint64_t v41 = (_OWORD *)v171.__r_.__value_.__l.__size_;
      if (v171.__r_.__value_.__l.__size_ >= v171.__r_.__value_.__r.__words[2])
      {
        std::basic_string<char16_t>::size_type v43 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v171, (long long *)v40);
      }
      else
      {
        if (*(char *)(v40 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v171.__r_.__value_.__l.__size_, *(const std::basic_string<char16_t>::value_type **)v40, *(void *)(v40 + 8));
        }
        else
        {
          long long v42 = *(_OWORD *)v40;
          *(void *)(v171.__r_.__value_.__l.__size_ + 16) = *(void *)(v40 + 16);
          *unint64_t v41 = v42;
        }
        std::basic_string<char16_t>::size_type v43 = (std::basic_string<char16_t>::size_type)v41 + 24;
      }
      v171.__r_.__value_.__l.__size_ = v43;
    }
    uint64_t v45 = a1[3];
    float v46 = (uint64_t *)operator new(8uLL);
    *float v46 = v45;
    morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v168, a3, v46, v46 + 1);
    operator delete(v46);
    int v47 = *((char *)v22 + 23);
    if (v47 >= 0) {
      BOOL v48 = (std::basic_string<char16_t>::value_type *)v22;
    }
    else {
      BOOL v48 = *(std::basic_string<char16_t>::value_type **)v22;
    }
    if (v47 >= 0) {
      unint64_t v49 = *((unsigned __int8 *)v22 + 23);
    }
    else {
      unint64_t v49 = *((void *)v22 + 1);
    }
    morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)v170, v146, v48, v49, &v171, &v168);
    if (BYTE8(v170[1]))
    {
      if ((SBYTE7(v170[1]) & 0x80000000) == 0)
      {
        std::basic_string<char16_t> v160 = *(std::basic_string<char16_t> *)v170;
        char v161 = 1;
LABEL_198:
        char v53 = 0;
        int v52 = 1;
LABEL_199:
        *(void *)&v170[0] = &v168;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v170);
        *(void *)&v170[0] = &v171;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v170);
        if (v53)
        {
          if (!a4)
          {
            int v114 = 0;
            LOBYTE(v157) = 0;
            char v159 = 0;
            goto LABEL_214;
          }
          uint64_t v112 = *((void *)&v162 + 1);
          if (*((void *)&v162 + 1) < v163)
          {
            if (*((char *)v22 + 23) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)&v162 + 1), *(const std::basic_string<char16_t>::value_type **)v22, *((void *)v22 + 1));
            }
            else
            {
              long long v113 = *(_OWORD *)v22;
              *(void *)(*((void *)&v162 + 1) + 16) = *((void *)v22 + 2);
              *(_OWORD *)uint64_t v112 = v113;
            }
LABEL_212:
            uint64_t v115 = v112 + 24;
            goto LABEL_213;
          }
          uint64_t v115 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v162, (long long *)v22);
        }
        else
        {
          uint64_t v112 = *((void *)&v162 + 1);
          if (*((void *)&v162 + 1) < v163)
          {
            if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
            {
              std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)&v162 + 1), v160.__r_.__value_.__l.__data_, v160.__r_.__value_.__l.__size_);
            }
            else
            {
              **((_OWORD **)&v162 + 1) = *(_OWORD *)&v160.__r_.__value_.__l.__data_;
              *(void *)(v112 + 16) = *((void *)&v160.__r_.__value_.__l + 2);
            }
            goto LABEL_212;
          }
          uint64_t v115 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v162, (long long *)&v160);
        }
LABEL_213:
        *((void *)&v162 + 1) = v115;
        int v114 = 1;
LABEL_214:
        if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v116 = v52;
        }
        else {
          int v116 = 0;
        }
        if (v116 == 1) {
          operator delete(v160.__r_.__value_.__l.__data_);
        }
        if (!v114) {
          goto LABEL_267;
        }
        goto LABEL_220;
      }
      unint64_t v50 = *(void **)&v170[0];
      std::basic_string<char16_t>::__init_copy_ctor_external(&v160, *(const std::basic_string<char16_t>::value_type **)&v170[0], *((std::basic_string<char16_t>::size_type *)&v170[0] + 1));
      char v161 = 1;
      size_t v51 = v50;
LABEL_197:
      operator delete(v51);
      goto LABEL_198;
    }
    if ((a4 & 1) == 0)
    {
      int v52 = 0;
      LOBYTE(v160.__r_.__value_.__l.__data_) = 0;
      char v161 = 0;
      char v53 = 1;
      goto LABEL_199;
    }
    if (*((char *)v22 + 23) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)v22, *((void *)v22 + 1));
    }
    else {
      std::basic_string<char16_t> __str = *(std::basic_string<char16_t> *)v22;
    }
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[2]);
    uint64_t v55 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v54);
    int v144 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v57 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v57 = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v58 = *(unsigned __int8 *)(v55 + 23);
    int v59 = (char)v58;
    if ((v58 & 0x80u) != 0) {
      uint64_t v58 = *(void *)(v55 + 8);
    }
    if (v57 == v58)
    {
      if (!v57)
      {
LABEL_92:
        std::basic_string<char16_t>::size_type v63 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        std::basic_string<char16_t>::size_type v64 = __str.__r_.__value_.__l.__size_;
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v63 = __str.__r_.__value_.__l.__size_;
        }
        if (v63)
        {
          std::basic_string<char16_t>::size_type v65 = v63 - 1;
          p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_str = &__str;
          }
          if (p_str->__r_.__value_.__s.__data_[v65] == 2366)
          {
            std::basic_string<char16_t>::size_type v67 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v170, &__str, 0, v65, v56);
            std::basic_string<char16_t>::append(v67, (const std::basic_string<char16_t>::value_type *)"@\t", 1uLL);
LABEL_117:
            std::basic_string<char16_t> v165 = *(std::basic_string<char16_t> *)v170;
            goto LABEL_126;
          }
        }
        if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_124:
          std::basic_string<char16_t> v165 = __str;
LABEL_128:
          std::basic_string<char16_t> __str = v165;
          goto LABEL_129;
        }
LABEL_125:
        std::basic_string<char16_t>::__init_copy_ctor_external(&v165, __str.__r_.__value_.__l.__data_, v64);
LABEL_126:
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        goto LABEL_128;
      }
      if (v59 >= 0) {
        unint64_t v60 = (unsigned __int16 *)v55;
      }
      else {
        unint64_t v60 = *(unsigned __int16 **)v55;
      }
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      std::basic_string<char16_t>::size_type v62 = v57;
      while (*v60 == (unsigned __int16)p_p->__r_.__value_.__s.__data_[0])
      {
        p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
        ++v60;
        if (!--v62) {
          goto LABEL_92;
        }
      }
    }
    uint64_t v68 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v55);
    uint64_t v70 = *(unsigned __int8 *)(v68 + 23);
    int v71 = (char)v70;
    if ((v70 & 0x80u) != 0) {
      uint64_t v70 = *(void *)(v68 + 8);
    }
    if (v57 != v70) {
      goto LABEL_129;
    }
    if (v57)
    {
      if (v71 >= 0) {
        char v72 = (unsigned __int16 *)v68;
      }
      else {
        char v72 = *(unsigned __int16 **)v68;
      }
      int v73 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if (v144 >= 0) {
        int v73 = &__p;
      }
      while (*v72 == (unsigned __int16)v73->__r_.__value_.__s.__data_[0])
      {
        int v73 = (std::basic_string<char16_t> *)((char *)v73 + 2);
        ++v72;
        if (!--v57) {
          goto LABEL_110;
        }
      }
LABEL_129:
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v165, a3, a1[1]);
      uint64_t v79 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v78);
      int v81 = SHIBYTE(v165.__r_.__value_.__r.__words[2]);
      if ((v165.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v82 = HIBYTE(v165.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v82 = v165.__r_.__value_.__l.__size_;
      }
      uint64_t v83 = *(unsigned __int8 *)(v79 + 23);
      int v84 = (char)v83;
      if ((v83 & 0x80u) != 0) {
        uint64_t v83 = *(void *)(v79 + 8);
      }
      if (v82 != v83)
      {
LABEL_152:
        uint64_t v93 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v79);
        uint64_t v97 = *(unsigned __int8 *)(v93 + 23);
        int v98 = (char)v97;
        if ((v97 & 0x80u) != 0) {
          uint64_t v97 = *(void *)(v93 + 8);
        }
        if (v82 != v97) {
          goto LABEL_191;
        }
        if (v82)
        {
          if (v98 >= 0) {
            uint64_t v99 = (unsigned __int16 *)v93;
          }
          else {
            uint64_t v99 = *(unsigned __int16 **)v93;
          }
          uint64_t v100 = (std::basic_string<char16_t> *)v165.__r_.__value_.__r.__words[0];
          if (v81 >= 0) {
            uint64_t v100 = &v165;
          }
          while (*v99 == (unsigned __int16)v100->__r_.__value_.__s.__data_[0])
          {
            uint64_t v100 = (std::basic_string<char16_t> *)((char *)v100 + 2);
            ++v99;
            if (!--v82) {
              goto LABEL_163;
            }
          }
          goto LABEL_191;
        }
LABEL_163:
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v170[0];
        std::basic_string<char16_t>::size_type v101 = *(void *)&v170[1];
LABEL_190:
        __str.__r_.__value_.__r.__words[2] = v101;
LABEL_191:
        std::basic_string<char16_t> v160 = __str;
        memset(&__str, 0, sizeof(__str));
        char v161 = 1;
        if (v81 < 0) {
          operator delete(v165.__r_.__value_.__l.__data_);
        }
        if (v144 < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_198;
        }
        size_t v51 = (void *)__str.__r_.__value_.__r.__words[0];
        goto LABEL_197;
      }
      if (v82)
      {
        if (v84 >= 0) {
          std::basic_string<char16_t>::size_type v85 = (unsigned __int16 *)v79;
        }
        else {
          std::basic_string<char16_t>::size_type v85 = *(unsigned __int16 **)v79;
        }
        int v86 = (std::basic_string<char16_t> *)v165.__r_.__value_.__r.__words[0];
        if ((v165.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v86 = &v165;
        }
        std::basic_string<char16_t>::size_type v87 = v82;
        while (*v85 == (unsigned __int16)v86->__r_.__value_.__s.__data_[0])
        {
          int v86 = (std::basic_string<char16_t> *)((char *)v86 + 2);
          ++v85;
          if (!--v87) {
            goto LABEL_144;
          }
        }
        goto LABEL_152;
      }
LABEL_144:
      std::basic_string<char16_t>::size_type v88 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v88 = __str.__r_.__value_.__l.__size_;
      }
      if (v88)
      {
        std::basic_string<char16_t>::size_type v89 = v88 - 1;
        char v90 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          char v90 = &__str;
        }
        int v91 = (unsigned __int16)v90->__r_.__value_.__s.__data_[v89];
        if ((v91 - 2369) < 2)
        {
          std::basic_string<char16_t> v102 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v170, &__str, 0, v89, v80);
          std::basic_string<char16_t>::append(v102, word_1D2ECC10E, 3uLL);
          goto LABEL_167;
        }
        if ((v91 - 2367) <= 1)
        {
          int v92 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v170, &__str, 0, v89, v80);
          std::basic_string<char16_t>::append(v92, word_1D2ECC104, 4uLL);
LABEL_167:
          std::basic_string<char16_t> v164 = *(std::basic_string<char16_t> *)v170;
          goto LABEL_187;
        }
        if (v88 >= 2)
        {
          uint64_t v103 = 0;
          std::basic_string<char16_t> v104 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t> v104 = &__str;
          }
          uint64_t v105 = (uint64_t)v104 + 2 * v88 - 4;
          do
          {
            int v106 = *(unsigned __int16 *)(v105 + v103);
            int v107 = *(unsigned __int16 *)&asc_1D2ECC116[v103];
            BOOL v108 = v107 != v106 || v103 == 2;
            v103 += 2;
          }
          while (!v108);
          if (v107 == v106)
          {
            v109 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v170, &__str, 0, v89, v80);
            std::basic_string<char16_t>::append(v109, word_1D2ECC11C, 2uLL);
            goto LABEL_167;
          }
        }
        uint64_t v110 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v110 = &__str;
        }
        int v111 = (unsigned __int16)v110->__r_.__value_.__s.__data_[v89];
        if (v111 == 2366)
        {
          std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v170, &__str, 0, v89, v80);
          std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v164, (std::basic_string<char16_t> *)v170, (std::basic_string<char16_t>::value_type *)"G\t");
LABEL_223:
          if (SBYTE7(v170[1]) < 0) {
            operator delete(*(void **)&v170[0]);
          }
          goto LABEL_187;
        }
        if (v111 == 2310)
        {
          std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v170, &__str, 0, v89, v80);
          std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v164, (std::basic_string<char16_t> *)v170, word_1D2ECC126);
          goto LABEL_223;
        }
      }
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        std::basic_string<char16_t> v164 = __str;
LABEL_189:
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = *(_OWORD *)&v164.__r_.__value_.__l.__data_;
        std::basic_string<char16_t>::size_type v101 = v164.__r_.__value_.__r.__words[2];
        goto LABEL_190;
      }
      std::basic_string<char16_t>::__init_copy_ctor_external(&v164, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
LABEL_187:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      goto LABEL_189;
    }
LABEL_110:
    std::basic_string<char16_t>::size_type v74 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type v64 = __str.__r_.__value_.__l.__size_;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v74 = __str.__r_.__value_.__l.__size_;
    }
    if (v74)
    {
      std::basic_string<char16_t>::size_type v75 = v74 - 1;
      uint64_t v76 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v76 = &__str;
      }
      if (v76->__r_.__value_.__s.__data_[v75] == 2368)
      {
        uint64_t v77 = std::basic_string<char16_t>::basic_string((std::basic_string<char16_t> *)v170, &__str, 0, v75, v69);
        std::basic_string<char16_t>::append(v77, (const std::basic_string<char16_t>::value_type *)">\t", 1uLL);
        goto LABEL_117;
      }
    }
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_125;
  }
  char v117 = v155;
LABEL_226:
  if (v117 - (char *)v22 == 24)
  {
    long long v157 = v162;
LABEL_265:
    unint64_t v158 = v163;
    unint64_t v163 = 0;
    long long v162 = 0uLL;
    char v138 = 1;
    goto LABEL_266;
  }
  __p.__r_.__value_.__r.__words[0] = 0;
  if (*(char *)(*((void *)&v162 + 1) - 1) < 0)
  {
    long long v118 = *(const UChar **)(*((void *)&v162 + 1) - 24);
    uint64_t v119 = *(void *)(*((void *)&v162 + 1) - 16);
  }
  else
  {
    long long v118 = (const UChar *)(*((void *)&v162 + 1) - 24);
    uint64_t v119 = *(unsigned __int8 *)(*((void *)&v162 + 1) - 1);
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)&__p, v118, v119);
  uint64_t v120 = *((void *)&v162 + 1);
  uint64_t v121 = v162;
  if ((a1[34] & ~__p.__r_.__value_.__r.__words[0]) != 0
    || (unint64_t v122 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v162 + 1) - v162) >> 3), (int)v122 - 1 < 1))
  {
LABEL_264:
    *(void *)&long long v157 = v121;
    *((void *)&v157 + 1) = v120;
    goto LABEL_265;
  }
  uint64_t v123 = 0;
  unint64_t v124 = 0;
  char v141 = v157;
  char v145 = v159;
  while (1)
  {
    if (v122 <= v124)
    {
      LOBYTE(v157) = v141;
      char v159 = v145;
      std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
    }
    v125 = (unsigned __int8 *)(v121 + v123);
    v165.__r_.__value_.__r.__words[0] = 0;
    if (*(char *)(v121 + v123 + 23) < 0)
    {
      v127 = *(const UChar **)v125;
      uint64_t v126 = *((void *)v125 + 1);
    }
    else
    {
      uint64_t v126 = *(unsigned __int8 *)(v121 + v123 + 23);
      v127 = (const UChar *)(v121 + v123);
    }
    CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v18, (uint64_t)&v165, v127, v126);
    if ((a1[35] & ~v165.__r_.__value_.__r.__words[0]) != 0) {
      goto LABEL_261;
    }
    if ((char)v125[23] < 0)
    {
      v125 = *(unsigned __int8 **)(v121 + v123);
      unint64_t v129 = *(void *)(v121 + v123 + 8);
    }
    else
    {
      unint64_t v129 = v125[23];
    }
    uint64_t v130 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(CombinedBinaryType);
    if (*(char *)(v130 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v171, *(const std::basic_string<char16_t>::value_type **)v130, *(void *)(v130 + 8));
    }
    else
    {
      long long v131 = *(_OWORD *)v130;
      v171.__r_.__value_.__r.__words[2] = *(void *)(v130 + 16);
      *(_OWORD *)&v171.__r_.__value_.__l.__data_ = v131;
    }
    memset(&v160, 0, sizeof(v160));
    v168.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v160;
    LOBYTE(v168.__r_.__value_.__r.__words[1]) = 0;
    v160.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
    v160.__r_.__value_.__l.__size_ = v160.__r_.__value_.__r.__words[0];
    v160.__r_.__value_.__r.__words[2] = v160.__r_.__value_.__r.__words[0] + 24;
    v160.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v160.__r_.__value_.__r.__words[2], (long long *)&v171, &v172, (std::basic_string<char16_t> *)v160.__r_.__value_.__l.__data_);
    memset(&v168, 0, sizeof(v168));
    morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)v170, v146, v125, v129, &v160, &v168);
    __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v168;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
    v168.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v160;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v168);
    if (SHIBYTE(v171.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v171.__r_.__value_.__l.__data_);
    }
    if (BYTE8(v170[1]))
    {
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v162 + 1) - v162) >> 3) <= v124)
      {
        LOBYTE(v157) = v141;
        char v159 = v145;
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)(v162 + v123), (const std::basic_string<char16_t> *)v170);
    }
    else
    {
      if (!a4)
      {
        char v145 = 0;
        char v141 = 0;
        int v137 = 0;
        goto LABEL_257;
      }
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v162 + 1) - v162) >> 3) <= v124)
      {
        LOBYTE(v157) = v141;
        char v159 = v145;
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v162 + 1) - v162) >> 3) <= v124)
      {
        LOBYTE(v157) = v141;
        char v159 = v145;
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      uint64_t v135 = v162 + v123;
      if (*(char *)(v162 + v123 + 23) < 0) {
        operator delete(*(void **)v135);
      }
      long long v136 = *(_OWORD *)&v160.__r_.__value_.__l.__data_;
      *(void *)(v135 + 16) = *((void *)&v160.__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v135 = v136;
    }
    int v137 = 1;
LABEL_257:
    if (BYTE8(v170[1]) && SBYTE7(v170[1]) < 0) {
      operator delete(*(void **)&v170[0]);
    }
    if (!v137) {
      break;
    }
LABEL_261:
    ++v124;
    uint64_t v120 = *((void *)&v162 + 1);
    uint64_t v121 = v162;
    unint64_t v122 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v162 + 1) - v162) >> 3);
    v123 += 24;
    if ((uint64_t)v124 >= (int)v122 - 1) {
      goto LABEL_264;
    }
  }
  LOBYTE(v157) = v141;
  char v138 = v145;
LABEL_266:
  char v159 = v138;
LABEL_267:
  *(void *)&v170[0] = &v162;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v170);
  uint64_t v14 = v142;
LABEL_268:
  *(void *)&v170[0] = &v155;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v170);
  if (v159)
  {
    memset(&v154, 0, sizeof(v154));
    std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v154, (long long *)v157, *((long long **)&v157 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v157 + 1) - v157) >> 3));
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getStringFromInflectedSignificantWords((std::basic_string<char16_t> *)v170, *(const morphun::Token **)(v14 + 8), *(void *)(v14 + 16), &v154);
    std::basic_string<char16_t> v150 = *(std::basic_string<char16_t> *)v170;
    memset(v170, 0, 24);
    char v151 = 1;
    v160.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v154;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v160);
    if (v159)
    {
      *(void *)&v170[0] = &v157;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v170);
    }
    std::basic_string<char16_t>::operator=(&v153, &v150);
    if (v151)
    {
      if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v150.__r_.__value_.__l.__data_);
      }
    }
LABEL_275:
    (*(void (**)(uint64_t))(*(void *)v14 + 16))(v14);
LABEL_276:
    operator new();
  }
  LOBYTE(v150.__r_.__value_.__l.__data_) = 0;
  char v151 = 0;
  if (a4) {
    goto LABEL_275;
  }
  (*(void (**)(uint64_t))(*(void *)v14 + 16))(v14);
  uint64_t v7 = 0;
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v152[1]);
  if ((*((unsigned char *)&v153.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_278:
  }
    operator delete(v153.__r_.__value_.__l.__data_);
  return v7;
}

void sub_1D2CF49B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *__p,uint64_t a57,uint64_t a58,void *a59)
{
  if (*(char *)(v60 - 153) < 0) {
    operator delete(*(void **)(v60 - 176));
  }
  if (v59 < 0) {
    operator delete(__p);
  }
  if (a11 < 0) {
    operator delete(a59);
  }
  if (*(char *)(v60 - 217) < 0) {
    operator delete(*(void **)(v60 - 240));
  }
  *(void *)(v60 - 240) = v60 - 208;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v60 - 240));
  *(void *)(v60 - 208) = v60 - 128;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v60 - 208));
  *(void *)(v60 - 208) = &a48;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v60 - 208));
  *(void *)(v60 - 208) = &a37;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v60 - 208));
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 16))(a10);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a25);
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CF4D4C()
{
}

void sub_1D2CF4DA4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::anonymous namespace'::guessSingularInflection(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *a2, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  int v6 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type size = a2->__r_.__value_.__l.__size_;
  if (v6 >= 0) {
    unint64_t v8 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  else {
    unint64_t v8 = a2->__r_.__value_.__l.__size_;
  }
  if (!v8) {
    goto LABEL_13;
  }
  std::basic_string<char16_t>::size_type v9 = v8 - 1;
  unint64_t v10 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  if (v6 >= 0) {
    unint64_t v10 = a2;
  }
  int v11 = (unsigned __int16)v10->__r_.__value_.__s.__data_[v9];
  if (v11 == 2375)
  {
    std::basic_string<char16_t>::basic_string(&v21, a2, 0, v9, a5);
    std::basic_string<char16_t>::append(&v21, (const std::basic_string<char16_t>::value_type *)">\t", 1uLL);
    goto LABEL_11;
  }
  if (v11 == 2319)
  {
    std::basic_string<char16_t>::basic_string(&v21, a2, 0, v9, a5);
    std::basic_string<char16_t>::append(&v21, word_1D2ECC122, 1uLL);
LABEL_11:
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)&v21.__r_.__value_.__l.__data_;
    std::basic_string<char16_t>::size_type v12 = v21.__r_.__value_.__r.__words[2];
LABEL_15:
    this->__r_.__value_.__r.__words[2] = v12;
    return;
  }
  std::basic_string<char16_t>::size_type v13 = v8 - 1;
  if (v8 <= 1)
  {
LABEL_13:
    if ((v6 & 0x80000000) == 0)
    {
LABEL_14:
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      std::basic_string<char16_t>::size_type v12 = a2->__r_.__value_.__r.__words[2];
      goto LABEL_15;
    }
    uint64_t v14 = (const std::basic_string<char16_t>::value_type *)a2->__r_.__value_.__r.__words[0];
    goto LABEL_17;
  }
  uint64_t v15 = 0;
  uint64_t v14 = (const std::basic_string<char16_t>::value_type *)a2->__r_.__value_.__r.__words[0];
  if (v6 >= 0) {
    int v16 = a2;
  }
  else {
    int v16 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  }
  uint64_t v17 = (uint64_t)v16 + 2 * v8 - 4;
  do
  {
    int v18 = *(unsigned __int16 *)(v17 + v15 * 2);
    int v19 = (unsigned __int16)word_1D2ECC12A[v15];
  }
  while (v19 == v18 && v15++ != 1);
  if (v19 != v18)
  {
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_14;
    }
LABEL_17:
    std::basic_string<char16_t>::__init_copy_ctor_external(this, v14, size);
    return;
  }

  std::basic_string<char16_t>::basic_string(this, a2, 0, v13, a5);
}

void sub_1D2CF4F28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::HiGrammarSynthesizer_HiDisplayFunction::~HiGrammarSynthesizer_HiDisplayFunction(morphun::grammar::synthesis::HiGrammarSynthesizer_HiDisplayFunction *this)
{
  morphun::grammar::synthesis::HiGrammarSynthesizer_HiDisplayFunction::~HiGrammarSynthesizer_HiDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C7C0;
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

void sub_1D2CF504C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  TheBestDisplayint Value = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(void *)(a2 + 8), *(void *)(a2 + 16), a3);
  if (!TheBestDisplayValue) {
    return 0;
  }
  uint64_t v8 = TheBestDisplayValue;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)TheBestDisplayValue + 24))(TheBestDisplayValue);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v126, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    v126.__r_.__value_.__r.__words[2] = *(void *)(v9 + 16);
    *(_OWORD *)&v126.__r_.__value_.__l.__data_ = v10;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(v126.__r_.__value_.__r.__words[2]);
  if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v126.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&v124, a3);
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[1]);
    uint64_t v13 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v12);
    int v14 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v15 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v15 = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v16 = *(unsigned __int8 *)(v13 + 23);
    int v17 = (char)v16;
    if ((v16 & 0x80u) != 0) {
      uint64_t v16 = *(void *)(v13 + 8);
    }
    if (v15 == v16)
    {
      if (!v15) {
        goto LABEL_36;
      }
      if (v17 >= 0) {
        int v18 = (unsigned __int16 *)v13;
      }
      else {
        int v18 = *(unsigned __int16 **)v13;
      }
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      std::basic_string<char16_t>::size_type v20 = v15;
      while (*v18 == (unsigned __int16)p_p->__r_.__value_.__s.__data_[0])
      {
        p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
        ++v18;
        if (!--v20) {
          goto LABEL_36;
        }
      }
    }
    uint64_t v21 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v13);
    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
    int v23 = (char)v22;
    if ((v22 & 0x80u) != 0) {
      uint64_t v22 = *(void *)(v21 + 8);
    }
    if (v15 != v22)
    {
LABEL_54:
      uint64_t v36 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 40))(v8);
      uint64_t v37 = a1[3];
      npc<morphun::dialog::SemanticFeature const>(v37);
      uint64_t v38 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(v36, v37);
      BOOL v39 = v36 + 8 == (void)v38;
      if ((void *)(v36 + 8) == v38) {
        uint64_t v40 = 0;
      }
      else {
        uint64_t v40 = (long long *)(v38 + 13);
      }
      if (!v39)
      {
        unint64_t v41 = (const morphun::dialog::SemanticFeature *)a1[3];
        npc<morphun::dialog::SemanticFeature const>((uint64_t)v41);
        std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,morphun::dialog::SemanticFeature const&,std::basic_string<char16_t> const&>(&v124, (uint64_t)v41, v41, v40);
      }
LABEL_73:
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v137, a3, a1[2]);
      uint64_t v43 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v42);
      std::basic_string<char16_t>::size_type v44 = HIBYTE(v137.__r_.__value_.__r.__words[2]);
      if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v44 = v137.__r_.__value_.__l.__size_;
      }
      uint64_t v45 = *(unsigned __int8 *)(v43 + 23);
      int v46 = (char)v45;
      if ((v45 & 0x80u) != 0) {
        uint64_t v45 = *(void *)(v43 + 8);
      }
      if (v44 != v45) {
        goto LABEL_118;
      }
      if (v44)
      {
        if (v46 >= 0) {
          int v47 = (unsigned __int16 *)v43;
        }
        else {
          int v47 = *(unsigned __int16 **)v43;
        }
        BOOL v48 = &v137;
        if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          BOOL v48 = (std::basic_string<char16_t> *)v137.__r_.__value_.__r.__words[0];
        }
        while (*v47 == (unsigned __int16)v48->__r_.__value_.__s.__data_[0])
        {
          BOOL v48 = (std::basic_string<char16_t> *)((char *)v48 + 2);
          ++v47;
          if (!--v44) {
            goto LABEL_86;
          }
        }
LABEL_118:
        operator new();
      }
LABEL_86:
      long long v133 = 0uLL;
      int64_t v134 = 0;
      int32_t v49 = HIBYTE(v126.__r_.__value_.__r.__words[2]);
      long long v50 = *(_OWORD *)&v126.__r_.__value_.__l.__data_;
      uint64_t v51 = morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v43);
      if ((v49 & 0x80u) == 0) {
        int v52 = &v126;
      }
      else {
        int v52 = (std::basic_string<char16_t> *)v50;
      }
      if ((v49 & 0x80u) == 0) {
        int32_t v53 = v49;
      }
      else {
        int32_t v53 = DWORD2(v50);
      }
      unint64_t v54 = (morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction *)morphun::util::StringViewUtils::lowercase((uint64_t)&v133, (const UChar *)v52, v53, v51);
      uint64_t v55 = morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::POSSESSIVE_DETERMINERS(v54);
      if (v134 >= 0) {
        unint64_t v56 = (unsigned __int16 *)&v133;
      }
      else {
        unint64_t v56 = (unsigned __int16 *)v133;
      }
      if (v134 >= 0) {
        unint64_t v57 = HIBYTE(v134);
      }
      else {
        unint64_t v57 = *((void *)&v133 + 1);
      }
      uint64_t v58 = (morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction *)std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v55, v56, v57);
      if ((morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction *)(morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::POSSESSIVE_DETERMINERS(v58)
                                                                                 + 8) != v58)
      {
        std::basic_string<char16_t>::size_type v59 = *((void *)v58 + 7);
        if (v59 >= 0x7FFFFFFFFFFFFFF8) {
          std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v60 = (const void *)*((void *)v58 + 6);
        if (v59 >= 0xB)
        {
          uint64_t v67 = (v59 & 0xFFFFFFFFFFFFFFFCLL) + 4;
          if ((v59 | 3) != 0xB) {
            uint64_t v67 = v59 | 3;
          }
          p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v67 + 1);
          __dst.__r_.__value_.__l.__size_ = v59;
          __dst.__r_.__value_.__r.__words[2] = v68 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
        }
        else
        {
          *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v59;
          p_dst = &__dst;
          if (!v59) {
            goto LABEL_112;
          }
        }
        memmove(p_dst, v60, 2 * v59);
LABEL_112:
        p_dst->__r_.__value_.__s.__data_[v59] = 0;
        goto LABEL_113;
      }
      if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0)
      {
        if (!v126.__r_.__value_.__l.__size_)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, v126.__r_.__value_.__l.__data_, 0);
          goto LABEL_113;
        }
      }
      else if (!*((unsigned char *)&v126.__r_.__value_.__s + 23))
      {
        std::basic_string<char16_t> __dst = v126;
LABEL_113:
        if (SHIBYTE(v134) < 0) {
          operator delete((void *)v133);
        }
        if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v126.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> v126 = __dst;
        goto LABEL_118;
      }
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v130, (char *)word_1D2ED0156);
      if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::size_type v71 = v126.__r_.__value_.__l.__size_;
        if (v126.__r_.__value_.__l.__size_ <= 2)
        {
LABEL_241:
          uint64_t v114 = a1[3];
          npc<morphun::dialog::SemanticFeature const>(v114);
          uint64_t v115 = (const void **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)&v124, v114);
          if (&v125 != (void ***)v115)
          {
            std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__str, v115 + 13, (const void **)&v130.__r_.__value_.__l.__data_);
            uint64_t v116 = a1[3];
            npc<morphun::dialog::SemanticFeature const>(v116);
            v132.__r_.__value_.__r.__words[0] = v116;
            char v117 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,std::piecewise_construct_t const&,std::tuple<morphun::dialog::SemanticFeature const&>,std::tuple<>>(&v124, v116, (const morphun::dialog::SemanticFeature **)&v132);
            long long v118 = (void **)(v117 + 13);
            if (*((char *)v117 + 127) < 0) {
              operator delete(*v118);
            }
            *(std::basic_string<char16_t> *)long long v118 = __str;
          }
          std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__dst, (const void **)&v126.__r_.__value_.__l.__data_, (const void **)&v130.__r_.__value_.__l.__data_);
          if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v130.__r_.__value_.__l.__data_);
          }
          goto LABEL_113;
        }
      }
      else
      {
        std::basic_string<char16_t>::size_type v71 = HIBYTE(v126.__r_.__value_.__r.__words[2]);
        if (HIBYTE(v126.__r_.__value_.__r.__words[2]) <= 2u) {
          goto LABEL_241;
        }
      }
      std::basic_string<char16_t>::basic_string(&__str, &v126, v71 - 2, 2uLL, v70);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_str = &__str;
      }
      else {
        p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v78 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      else {
        int v78 = __str.__r_.__value_.__r.__words[1];
      }
      if (morphun::util::UnicodeSetUtils::containsSome(a1 + 39, (uint64_t)p_str, v78)
        && ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (uint64_t v79 = &__str)
          : (uint64_t v79 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0]),
            (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (int v80 = HIBYTE(__str.__r_.__value_.__r.__words[2]))
          : (int v80 = __str.__r_.__value_.__r.__words[1]),
            morphun::util::UnicodeSetUtils::containsSome(a1 + 41, (uint64_t)v79, v80)))
      {
        if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
        {
          *v130.__r_.__value_.__l.__data_ = 0;
          v130.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v130.__r_.__value_.__s.__data_[0] = 0;
          *((unsigned char *)&v130.__r_.__value_.__s + 23) = 0;
        }
      }
      else
      {
        std::basic_string<char16_t>::size_type v81 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v81 = __str.__r_.__value_.__l.__size_;
        }
        if (v81)
        {
          std::basic_string<char16_t>::size_type v82 = &__str;
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v82 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
          }
          if (v82->__r_.__value_.__s.__data_[v81 - 1] == 115)
          {
            uint64_t v83 = npc<morphun::Tokenizer>(a1[44]);
            uint64_t v84 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v83 + 24))(v83, &v126);
            npc<morphun::TokenChain>(v84);
            uint64_t v85 = a1[34];
            uint64_t v86 = (*(uint64_t (**)(uint64_t))(*(void *)v84 + 112))(v84);
            if (!v86 || (uint64_t v87 = *(void *)(v86 + 72)) == 0)
            {
              exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
              morphun::exception::NullPointerException::NullPointerException(exception);
            }
            char v90 = *(const UChar **)(v87 + 16);
            uint64_t v88 = v87 + 16;
            std::basic_string<char16_t>::size_type v89 = v90;
            int v91 = *(char *)(v88 + 23);
            if (v91 >= 0) {
              int v92 = (const UChar *)v88;
            }
            else {
              int v92 = v89;
            }
            if (v91 >= 0) {
              uint64_t v93 = *(unsigned __int8 *)(v88 + 23);
            }
            else {
              uint64_t v93 = *(void *)(v88 + 8);
            }
            uint64_t v94 = a1[35];
            v132.__r_.__value_.__r.__words[0] = 0;
            if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v85, (uint64_t)&v132, v92, v93)) {
              BOOL v95 = (v132.__r_.__value_.__r.__words[0] & v94) == v94;
            }
            else {
              BOOL v95 = 0;
            }
            if (v95)
            {
              if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
              {
                v130.__r_.__value_.__l.__size_ = 1;
                unint64_t v96 = (std::basic_string<char16_t> *)v130.__r_.__value_.__r.__words[0];
              }
              else
              {
                *((unsigned char *)&v130.__r_.__value_.__s + 23) = 1;
                unint64_t v96 = &v130;
              }
              LODWORD(v96->__r_.__value_.__l.__data_) = 8217;
            }
            (*(void (**)(uint64_t))(*(void *)v84 + 16))(v84);
          }
        }
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      goto LABEL_241;
    }
    if (v15)
    {
      if (v23 >= 0) {
        uint64_t v24 = (unsigned __int16 *)v21;
      }
      else {
        uint64_t v24 = *(unsigned __int16 **)v21;
      }
      unint64_t v25 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if (v14 >= 0) {
        unint64_t v25 = &__p;
      }
      while (*v24 == (unsigned __int16)v25->__r_.__value_.__s.__data_[0])
      {
        unint64_t v25 = (std::basic_string<char16_t> *)((char *)v25 + 2);
        ++v24;
        if (!--v15) {
          goto LABEL_36;
        }
      }
      goto LABEL_54;
    }
LABEL_36:
    std::basic_string<char16_t>::size_type v138 = 0;
    if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v26 = &v126;
    }
    else {
      uint64_t v26 = (std::basic_string<char16_t> *)v126.__r_.__value_.__r.__words[0];
    }
    if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v27 = HIBYTE(v126.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v27 = v126.__r_.__value_.__l.__size_;
    }
    CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[34], (uint64_t)&v138, (const UChar *)v26, v27);
    uint64_t v29 = a1[1];
    int v30 = (uint64_t *)operator new(8uLL);
    uint64_t *v30 = v29;
    morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v137, a3, v30, v30 + 1);
    operator delete(v30);
    uint64_t v31 = a1[4];
    long long v32 = (uint64_t *)operator new(8uLL);
    *long long v32 = v31;
    morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&__dst, a3, v32, v32 + 1);
    operator delete(v32);
    if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v33 = &v126;
    }
    else {
      int v33 = (std::basic_string<char16_t> *)v126.__r_.__value_.__r.__words[0];
    }
    if ((v126.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v34 = HIBYTE(v126.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v34 = v126.__r_.__value_.__l.__size_;
    }
    morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)&v133, (uint64_t)(a1 + 5), v33, v34, &v137, &__dst);
    if (v135)
    {
      if (SHIBYTE(v134) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&__str, (const std::basic_string<char16_t>::value_type *)v133, *((std::basic_string<char16_t>::size_type *)&v133 + 1));
        goto LABEL_64;
      }
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v133;
      std::basic_string<char16_t>::size_type v35 = v134;
LABEL_51:
      __str.__r_.__value_.__r.__words[2] = v35;
LABEL_64:
      char v122 = 1;
      goto LABEL_65;
    }
    if (CombinedBinaryType)
    {
      if (!a4)
      {
        LOBYTE(__str.__r_.__value_.__l.__data_) = 0;
        char v122 = 0;
        goto LABEL_65;
      }
      if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&__str, v126.__r_.__value_.__l.__data_, v126.__r_.__value_.__l.__size_);
        goto LABEL_64;
      }
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = *(_OWORD *)&v126.__r_.__value_.__l.__data_;
      std::basic_string<char16_t>::size_type v35 = v126.__r_.__value_.__r.__words[2];
      goto LABEL_51;
    }
    uint64_t v62 = npc<morphun::Tokenizer>(a1[44]);
    uint64_t v63 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v62 + 24))(v62, &v126);
    npc<morphun::TokenChain>(v63);
    long long v64 = *(_OWORD *)(v63 + 8);
    uint64_t v65 = *(void *)(v63 + 16);
    if (v65) {
      uint64_t v66 = *(void *)(v65 + 80);
    }
    else {
      uint64_t v66 = 0;
    }
    uint64_t v72 = 0;
    while (1)
    {
      *((void *)&v120 + 1) = *((void *)&v64 + 1);
      uint64_t v73 = v64;
      if (v66 == (void)v64) {
        break;
      }
      if (*(unsigned char *)(v64 + 64))
      {
        v130.__r_.__value_.__r.__words[0] = 0;
        int v74 = *(char *)(v64 + 39);
        if (v74 >= 0) {
          std::basic_string<char16_t>::size_type v75 = (const UChar *)(v64 + 16);
        }
        else {
          std::basic_string<char16_t>::size_type v75 = *(const UChar **)(v64 + 16);
        }
        if (v74 >= 0) {
          uint64_t v76 = *(unsigned __int8 *)(v64 + 39);
        }
        else {
          uint64_t v76 = *(void *)(v64 + 24);
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[34], (uint64_t)&v130, v75, v76);
        if (v72 && (a1[37] & ~v130.__r_.__value_.__r.__words[0]) == 0) {
          goto LABEL_148;
        }
        std::basic_string<char16_t>::size_type v138 = v130.__r_.__value_.__r.__words[0];
        uint64_t v72 = v73;
      }
      npc<morphun::Token const>(v73);
      *((void *)&v64 + 1) = *((void *)&v120 + 1);
      *(void *)&long long v64 = *(void *)(v73 + 80);
    }
    if (!v72 && a4)
    {
      if (SHIBYTE(v126.__r_.__value_.__r.__words[2]) < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&__str, v126.__r_.__value_.__l.__data_, v126.__r_.__value_.__l.__size_);
      }
      else {
        std::basic_string<char16_t> __str = v126;
      }
      char v122 = 1;
LABEL_234:
      if (v63) {
        (*(void (**)(uint64_t))(*(void *)v63 + 16))(v63);
      }
LABEL_65:
      if (v135 && SHIBYTE(v134) < 0) {
        operator delete((void *)v133);
      }
      *(void *)&long long v133 = &__dst;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v133);
      *(void *)&long long v133 = &v137;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v133);
      if (v122 || (a4 & 1) != 0)
      {
        std::basic_string<char16_t>::operator=(&v126, &__str);
        if (v122 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        goto LABEL_73;
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v125);
      if ((*((unsigned char *)&v126.__r_.__value_.__s + 23) & 0x80) != 0) {
        goto LABEL_122;
      }
      return 0;
    }
    if (!v72)
    {
LABEL_150:
      LOBYTE(__str.__r_.__value_.__l.__data_) = 0;
      char v122 = 0;
      goto LABEL_234;
    }
LABEL_148:
    if ((a4 & 1) == 0 && !v138) {
      goto LABEL_150;
    }
    if (*(char *)(v72 + 39) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v132, *(const std::basic_string<char16_t>::value_type **)(v72 + 16), *(void *)(v72 + 24));
    }
    else {
      std::basic_string<char16_t> v132 = *(std::basic_string<char16_t> *)(v72 + 16);
    }
    if ((v132.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v97 = &v132;
    }
    else {
      uint64_t v97 = (std::basic_string<char16_t> *)v132.__r_.__value_.__r.__words[0];
    }
    if ((v132.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v98 = HIBYTE(v132.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v98 = v132.__r_.__value_.__l.__size_;
    }
    morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)&v130, (uint64_t)(a1 + 5), v97, v98, &v137, &__dst);
    if (!v131)
    {
      if ((a4 & 1) == 0)
      {
        LOBYTE(__str.__r_.__value_.__l.__data_) = 0;
        char v122 = 0;
LABEL_232:
        if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v132.__r_.__value_.__l.__data_);
        }
        goto LABEL_234;
      }
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v129, a3, a1[1]);
      uint64_t v100 = (unsigned __int16 *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v99);
      BOOL v104 = std::operator==[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((unsigned __int16 *)&v129, v100);
      if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v129.__r_.__value_.__l.__data_);
      }
      if (v104) {
        morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::guessPluralInflection((morphun::dictionary::PhraseProperties *)&v129, &v132);
      }
      else {
        morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::guessSingularInflection(&v129, &v132, v101, v102, v103);
      }
      std::basic_string<char16_t> v130 = v129;
      char v131 = 1;
    }
    int v105 = (*(uint64_t (**)(uint64_t))(*(void *)v72 + 24))(v72);
    std::basic_string<char16_t>::basic_string(&v128, &v126, 0, v105, v106);
    if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v107 = &v130;
    }
    else {
      int v107 = (std::basic_string<char16_t> *)v130.__r_.__value_.__r.__words[0];
    }
    if ((v130.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v108 = HIBYTE(v130.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v108 = v130.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v128, (const std::basic_string<char16_t>::value_type *)v107, v108);
    std::basic_string<char16_t> v129 = v128;
    memset(&v128, 0, sizeof(v128));
    int v109 = (*(uint64_t (**)(uint64_t))(*(void *)v72 + 32))(v72);
    std::basic_string<char16_t>::basic_string(&v127, &v126, v109, 0xFFFFFFFFFFFFFFFFLL, v110);
    if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v111 = &v127;
    }
    else {
      int v111 = (std::basic_string<char16_t> *)v127.__r_.__value_.__r.__words[0];
    }
    if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v112 = HIBYTE(v127.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v112 = v127.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v129, (const std::basic_string<char16_t>::value_type *)v111, v112);
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = *(_OWORD *)&v129.__r_.__value_.__l.__data_;
    *(std::basic_string<char16_t>::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&v129.__r_.__value_.__r.__words[1] + 7);
    char v113 = HIBYTE(v129.__r_.__value_.__r.__words[2]);
    memset(&v129, 0, sizeof(v129));
    *((unsigned char *)&__str.__r_.__value_.__s + 23) = v113;
    char v122 = 1;
    if (SHIBYTE(v127.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v127.__r_.__value_.__l.__data_);
      if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v129.__r_.__value_.__l.__data_);
      }
    }
    if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v128.__r_.__value_.__l.__data_);
    }
    if (v131 && SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v130.__r_.__value_.__l.__data_);
    }
    goto LABEL_232;
  }
  if ((*((unsigned char *)&v126.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_122:
  }
    operator delete(v126.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1D2CF5D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void **a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,char a59)
{
  if (*(char *)(v60 - 185) < 0) {
    operator delete(*(void **)(v60 - 208));
  }
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 16))(v59);
  }
  if (*(unsigned char *)(v60 - 152) && *(char *)(v60 - 153) < 0) {
    operator delete(*(void **)(v60 - 176));
  }
  *(void *)(v60 - 176) = v60 - 144;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v60 - 176));
  *(void *)(v60 - 176) = v60 - 112;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v60 - 176));
  if (a23 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a25);
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CF6014(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::POSSESSIVE_DETERMINERS(morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t result = morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::POSSESSIVE_DETERMINERS(void)::POSSESSIVE_DETERMINERS_;
  if (!morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::POSSESSIVE_DETERMINERS(void)::POSSESSIVE_DETERMINERS_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CF6134(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

void sub_1D2CF61D4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CF6238(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::guessPluralInflection(morphun::dictionary::PhraseProperties *a1, const std::basic_string<char16_t> *a2)
{
  uint64_t v3 = (char *)a1;
  unint64_t v4 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  int v5 = (char)v4;
  unint64_t size = a2->__r_.__value_.__l.__size_;
  if ((v4 & 0x80u) == 0) {
    unint64_t v7 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  else {
    unint64_t v7 = a2->__r_.__value_.__l.__size_;
  }
  if (!v7) {
    goto LABEL_12;
  }
  uint64_t v8 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  if ((v4 & 0x80u) == 0) {
    uint64_t v8 = a2;
  }
  if (v8->__r_.__value_.__s.__data_[v7 - 1] == 115) {
    goto LABEL_53;
  }
  unint64_t v9 = v7 - 2;
  if (v7 >= 2)
  {
    uint64_t v21 = 0;
    uint64_t v22 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
    if ((v4 & 0x80u) == 0) {
      uint64_t v22 = a2;
    }
    uint64_t v23 = (uint64_t)v22 + 2 * v9;
    do
    {
      int v24 = *(unsigned __int16 *)(v23 + v21 * 2);
      int v25 = (unsigned __int16)word_1D2ECC1FE[v21];
    }
    while (v25 == v24 && v21++ != 1);
    if (v25 == v24) {
      goto LABEL_53;
    }
    uint64_t v27 = 0;
    long long v28 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
    if ((v4 & 0x80u) == 0) {
      long long v28 = a2;
    }
    uint64_t v29 = (uint64_t)v28 + 2 * v9;
    do
    {
      int v30 = *(unsigned __int16 *)(v29 + v27 * 2);
      int v31 = (unsigned __int16)aSh[v27];
    }
    while (v31 == v30 && v27++ != 1);
    if (v31 == v30) {
      goto LABEL_53;
    }
  }
  long long v10 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  if ((v4 & 0x80u) == 0) {
    long long v10 = a2;
  }
  if (((unsigned __int16)v10->__r_.__value_.__s.__data_[v7 - 1] | 2) == 0x7A)
  {
LABEL_53:
    std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)a1, v7 + 2);
    if (v3[23] < 0) {
      uint64_t v3 = *(char **)v3;
    }
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v33 = a2;
    }
    else {
      int v33 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
    }
    memmove(v3, v33, 2 * v7);
    std::basic_string<char16_t>::size_type v34 = &v3[2 * v7];
    *(_DWORD *)std::basic_string<char16_t>::size_type v34 = 7536741;
    *((_WORD *)v34 + 2) = 0;
  }
  else
  {
LABEL_12:
    if ((char)v4 < 0)
    {
      if (size <= 2)
      {
LABEL_24:
        if (v5 >= 0) {
          unint64_t v19 = v4;
        }
        else {
          unint64_t v19 = size;
        }
        std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)v3, v19 + 1);
        if (v3[23] < 0) {
          uint64_t v3 = *(char **)v3;
        }
        if (v19)
        {
          if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v20 = a2;
          }
          else {
            std::basic_string<char16_t>::size_type v20 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
          }
          memmove(v3, v20, 2 * v19);
        }
        *(_DWORD *)&v3[2 * v19] = 115;
        return;
      }
      int v11 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
      std::basic_string<char16_t>::size_type v12 = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      int v11 = a2;
      std::basic_string<char16_t>::size_type v12 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      if ((char)v4 <= 2) {
        goto LABEL_24;
      }
    }
    if (v11->__r_.__value_.__s.__data_[v12 - 1] != 121) {
      goto LABEL_24;
    }
    uint64_t v13 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_VOWELS_START(a1);
    std::basic_string<char16_t>::size_type v14 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    BOOL v15 = (v14 & 0x80u) != 0;
    if ((v14 & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type v14 = a2->__r_.__value_.__l.__size_;
    }
    uint64_t v16 = v15 ? (uint64_t *)a2->__r_.__value_.__r.__words[0] : (uint64_t *)a2;
    int v17 = MEMORY[0x1D942C150](*v13, *((unsigned __int16 *)v16 + v14 - 2));
    unint64_t v4 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    int v5 = (char)v4;
    unint64_t size = a2->__r_.__value_.__l.__size_;
    if (v17) {
      goto LABEL_24;
    }
    if ((v4 & 0x80u) != 0) {
      unint64_t v4 = a2->__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::basic_string(&v35, a2, 0, v4 - 1, v18);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)v3, &v35, (std::basic_string<char16_t>::value_type *)"i");
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v35.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1D2CF64B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::guessSingularInflection(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *a2, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  int v6 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type size = a2->__r_.__value_.__l.__size_;
  if (v6 >= 0) {
    unint64_t v8 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  else {
    unint64_t v8 = a2->__r_.__value_.__l.__size_;
  }
  if (v8 < 3) {
    goto LABEL_5;
  }
  uint64_t v12 = 0;
  uint64_t v13 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  if (v6 >= 0) {
    uint64_t v13 = a2;
  }
  uint64_t v14 = (uint64_t)v13 + 2 * v8 - 6;
  do
  {
    int v15 = *(unsigned __int16 *)(v14 + v12 * 2);
    int v16 = (unsigned __int16)word_1D2ECC212[v12];
  }
  while (v16 == v15 && v12++ != 2);
  if (v16 == v15) {
    goto LABEL_59;
  }
  unint64_t v18 = v8 - 4;
  if (v8 >= 4)
  {
    uint64_t v19 = 0;
    std::basic_string<char16_t>::size_type v20 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
    if (v6 >= 0) {
      std::basic_string<char16_t>::size_type v20 = a2;
    }
    uint64_t v21 = (uint64_t)v20 + 2 * v18;
    do
    {
      int v22 = *(unsigned __int16 *)(v21 + v19 * 2);
      int v23 = (unsigned __int16)word_1D2ECC21A[v19];
    }
    while (v23 == v22 && v19++ != 3);
    if (v23 == v22) {
      goto LABEL_59;
    }
    uint64_t v25 = 0;
    uint64_t v26 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
    if (v6 >= 0) {
      uint64_t v26 = a2;
    }
    uint64_t v27 = (uint64_t)v26 + 2 * v18;
    do
    {
      int v28 = *(unsigned __int16 *)(v27 + v25 * 2);
      int v29 = (unsigned __int16)aShes[v25];
    }
    while (v29 == v28 && v25++ != 3);
    if (v29 == v28) {
      goto LABEL_59;
    }
  }
  std::basic_string<char16_t>::size_type v31 = v8 - 3;
  uint64_t v32 = 0;
  int v33 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  if (v6 >= 0) {
    int v33 = a2;
  }
  std::basic_string<char16_t>::size_type v34 = (std::basic_string<char16_t>::size_type)v33 + 2 * v31;
  do
  {
    int v35 = *(unsigned __int16 *)(v34 + v32);
    int v36 = *(unsigned __int16 *)&aX[v32];
    BOOL v37 = v36 != v35 || v32 == 4;
    v32 += 2;
  }
  while (!v37);
  if (v36 == v35) {
    goto LABEL_59;
  }
  uint64_t v38 = 0;
  BOOL v39 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  if (v6 >= 0) {
    BOOL v39 = a2;
  }
  std::basic_string<char16_t>::size_type v40 = (std::basic_string<char16_t>::size_type)v39 + 2 * v31;
  do
  {
    int v41 = *(unsigned __int16 *)(v40 + v38 * 2);
    int v42 = (unsigned __int16)word_1D2ED0572[v38];
  }
  while (v42 == v41 && v38++ != 2);
  if (v42 == v41)
  {
LABEL_59:
    std::basic_string<char16_t>::size_type v10 = v8 - 2;
LABEL_60:
    std::basic_string<char16_t>::basic_string(this, a2, 0, v10, a5);
    return;
  }
  uint64_t v44 = 0;
  uint64_t v45 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
  if (v6 >= 0) {
    uint64_t v45 = a2;
  }
  std::basic_string<char16_t>::size_type v46 = (std::basic_string<char16_t>::size_type)v45 + 2 * v31;
  do
  {
    int v47 = *(unsigned __int16 *)(v46 + v44);
    int v48 = *(unsigned __int16 *)&aI_6[v44];
    BOOL v49 = v48 != v47 || v44 == 4;
    v44 += 2;
  }
  while (!v49);
  if (v48 != v47)
  {
LABEL_5:
    if (!v8)
    {
      if (v6 < 0)
      {
        unint64_t v9 = (const std::basic_string<char16_t>::value_type *)a2->__r_.__value_.__r.__words[0];
LABEL_67:
        std::basic_string<char16_t>::__init_copy_ctor_external(this, v9, size);
        return;
      }
LABEL_64:
      *this = *a2;
      return;
    }
    unint64_t v9 = (const std::basic_string<char16_t>::value_type *)a2->__r_.__value_.__r.__words[0];
    std::basic_string<char16_t>::size_type v10 = v8 - 1;
    if (v6 >= 0) {
      int v11 = a2;
    }
    else {
      int v11 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
    }
    if (v11->__r_.__value_.__s.__data_[v10] != 115)
    {
      if (v6 < 0) {
        goto LABEL_67;
      }
      goto LABEL_64;
    }
    goto LABEL_60;
  }
  std::basic_string<char16_t>::basic_string(&v50, a2, 0, v31, a5);
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)this, &v50, word_1D2ECEE0C);
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CF675C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::~EnGrammarSynthesizer_EnDisplayFunction(morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction *this)
{
  morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction::~EnGrammarSynthesizer_EnDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C5C0;
  *((void *)this + 55) = &unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 64));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 61));
  *((void *)this + 45) = &off_1F2A098A0;
  if (*((char *)this + 439) < 0) {
    operator delete(*((void **)this + 52));
  }
  if (*((char *)this + 415) < 0) {
    operator delete(*((void **)this + 49));
  }
  uint64_t v2 = *((void *)this + 44);
  *((void *)this + 44) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction *)((char *)this + 328));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::grammar::synthesis::EnGrammarSynthesizer_EnDisplayFunction *)((char *)this + 312));
}

std::basic_string<char16_t> *virtual thunk to'morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectSignificantTokens@<X0>(void *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  return morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectSignificantTokens((void *)((char *)a1 + *(void *)(*a1 - 48)), a2, a3, a4, a5);
}

std::basic_string<char16_t> *morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectSignificantTokens@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, char **a4@<X3>, std::basic_string<char16_t> *a5@<X8>)
{
  unint64_t v10 = *((int *)a4[1] - 1);
  uint64_t v11 = a1[5];
  uint64_t v12 = (uint64_t)*a3 + 24 * (int)v10;
  if (*(char *)(v12 + 23) < 0)
  {
    uint64_t v14 = v12;
    uint64_t v12 = *(void *)v12;
    uint64_t v13 = *(void *)(v14 + 8);
  }
  else
  {
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  v39.__r_.__value_.__r.__words[0] = 0;
  uint64_t result = (std::basic_string<char16_t> *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v11, (uint64_t)&v39, (const UChar *)v12, v13);
  if (result)
  {
    int v16 = *a4;
    if (a4[1] - *a4 == 8)
    {
      int v17 = *a3;
      uint64_t v18 = (uint64_t)*a3 + 24 * *(int *)v16;
      if (*(char *)(v18 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v39, *(const std::basic_string<char16_t>::value_type **)v18, *(void *)(v18 + 8));
        int v16 = *a4;
        int v17 = *a3;
      }
      else
      {
        long long v19 = *(_OWORD *)v18;
        v39.__r_.__value_.__r.__words[2] = *(void *)(v18 + 16);
        *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
      }
      int v22 = (char *)v17 + 24 * *((int *)v16 + 1);
      if (v22[23] < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v38, *(const std::basic_string<char16_t>::value_type **)v22, *((void *)v22 + 1));
      }
      else
      {
        long long v23 = *(_OWORD *)v22;
        v38.__r_.__value_.__r.__words[2] = *((void *)v22 + 2);
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v23;
      }
      uint64_t v37 = 0;
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v24 = &v39;
      }
      else {
        int v24 = (std::basic_string<char16_t> *)v39.__r_.__value_.__r.__words[0];
      }
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v39.__r_.__value_.__l.__size_;
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[5], (uint64_t)&v37, (const UChar *)v24, size);
      uint64_t v36 = 0;
      if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v26 = &v38;
      }
      else {
        uint64_t v26 = (std::basic_string<char16_t> *)v38.__r_.__value_.__r.__words[0];
      }
      if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v27 = HIBYTE(v38.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v27 = v38.__r_.__value_.__l.__size_;
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[5], (uint64_t)&v36, (const UChar *)v26, v27);
      if (!v37 || !v36 || (a1[8] & v37) != 0 && (uint64_t v28 = a1[9], (v28 & v37) == 0) && (v28 & v36) != 0)
      {
        morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectWord(&v35, a1, a2, (uint64_t)&v39, (uint64_t)&v38, 0);
        unint64_t v29 = *(int *)*a4;
        if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v29) {
          std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
        }
        uint64_t v30 = (uint64_t)*a3 + 24 * (int)v29;
        if (*(char *)(v30 + 23) < 0) {
          operator delete(*(void **)v30);
        }
        long long v31 = *(_OWORD *)&v35.__r_.__value_.__l.__data_;
        *(void *)(v30 + 16) = *((void *)&v35.__r_.__value_.__l + 2);
        *(_OWORD *)uint64_t v30 = v31;
      }
      morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectWord(&v35, a1, a2, (uint64_t)&v38, (uint64_t)&v38, 1);
      unint64_t v32 = *((int *)*a4 + 1);
      if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v32) {
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      uint64_t v33 = (uint64_t)*a3 + 24 * (int)v32;
      if (*(char *)(v33 + 23) < 0) {
        operator delete(*(void **)v33);
      }
      long long v34 = *(_OWORD *)&v35.__r_.__value_.__l.__data_;
      *(void *)(v33 + 16) = *((void *)&v35.__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v33 = v34;
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v38.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v39.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectWord(&v39, a1, a2, (uint64_t)*a3 + 24 * (int)v10, (uint64_t)*a3 + 24 * (int)v10, 1);
      if (0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3) <= v10) {
        std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
      }
      uint64_t v20 = (uint64_t)*a3 + 24 * (int)v10;
      if (*(char *)(v20 + 23) < 0) {
        operator delete(*(void **)v20);
      }
      long long v21 = *(_OWORD *)&v39.__r_.__value_.__l.__data_;
      *(void *)(v20 + 16) = *((void *)&v39.__r_.__value_.__l + 2);
      *(_OWORD *)uint64_t v20 = v21;
    }
    a5->__r_.__value_.__r.__words[0] = 0;
    a5->__r_.__value_.__l.__size_ = 0;
    a5->__r_.__value_.__r.__words[2] = 0;
    return std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(a5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  }
  else
  {
    a5->__r_.__value_.__r.__words[0] = 0;
    a5->__r_.__value_.__l.__size_ = 0;
    a5->__r_.__value_.__r.__words[2] = 0;
  }
  return result;
}

void sub_1D2CF6C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectWord(std::basic_string<char16_t> *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v79, a3, a2[2]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__sz, a3, a2[1]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__s, a3, a2[3]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a2[4]);
  std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  int v13 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::determine(a2 + 10, a5, (uint64_t)&v85);
    if (v13 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v85;
    __p.__r_.__value_.__r.__words[2] = v86;
  }
  std::basic_string<char16_t>::size_type v71 = a1;
  int v14 = *(char *)(a4 + 23);
  if (v14 >= 0) {
    int v15 = (const std::basic_string<char16_t>::value_type *)a4;
  }
  else {
    int v15 = *(const std::basic_string<char16_t>::value_type **)a4;
  }
  if (v14 >= 0) {
    uint64_t v16 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v16 = *(void *)(a4 + 8);
  }
  uint64_t PropertyValues = morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[5], (const UChar *)v15, v16, (unsigned __int16 *)"i", 0xAuLL, &v74);
  *(_DWORD *)((char *)v89 + 3) = 0;
  v89[0] = 0;
  uint64_t v19 = v74;
  uint64_t v18 = v75;
  if (v74 != v75)
  {
    uint64_t v72 = 0;
    unsigned __int8 v73 = 0;
    uint64_t v20 = 0;
    while (1)
    {
      if (*(char *)(v19 + 23) < 0)
      {
        uint64_t v22 = *(void *)v19;
        uint64_t v21 = *(void *)(v19 + 8);
      }
      else
      {
        LODWORD(v21) = *(unsigned __int8 *)(v19 + 23);
        uint64_t v22 = v19;
      }
      uint64_t v23 = a2[6];
      __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v23 + 248), v22, v21);
      InflectionPattern = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&v90, v23 + 8, KeyId);
      long long v85 = v90;
      long long v86 = v91;
      long long v87 = v92;
      char v88 = 1;
      uint64_t v26 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(InflectionPattern);
      uint64_t PropertyValues = morphun::dictionary::Inflector_InflectionPattern::containsPartsOfSpeech(*((uint64_t *)&v85 + 1), *(void *)(v87 + 184), v26);
      if (PropertyValues == a6) {
        break;
      }
LABEL_91:
      v19 += 24;
      if (v19 == v18) {
        goto LABEL_94;
      }
    }
    long long v90 = 0uLL;
    *(void *)&long long v91 = 0;
    uint64_t v27 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v90, (long long *)&v79);
    *((void *)&v90 + 1) = v27;
    std::basic_string<char16_t>::size_type v28 = HIBYTE(__sz.__r_.__value_.__r.__words[2]);
    int v29 = SHIBYTE(__sz.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type v30 = __sz.__r_.__value_.__l.__size_;
    if ((__sz.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v28 = __sz.__r_.__value_.__l.__size_;
    }
    if (v28)
    {
      if ((a6 & 1) == 0)
      {
        uint64_t v27 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v27);
        std::basic_string<char16_t>::size_type v32 = HIBYTE(v79.__r_.__value_.__r.__words[2]);
        if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v32 = v79.__r_.__value_.__l.__size_;
        }
        uint64_t v33 = *(unsigned __int8 *)(v27 + 23);
        int v34 = (char)v33;
        if ((v33 & 0x80u) != 0) {
          uint64_t v33 = *(void *)(v27 + 8);
        }
        if (v32 != v33) {
          goto LABEL_44;
        }
        if (v32)
        {
          if (v34 >= 0) {
            std::basic_string<char16_t> v35 = (unsigned __int16 *)v27;
          }
          else {
            std::basic_string<char16_t> v35 = *(unsigned __int16 **)v27;
          }
          uint64_t v36 = &v79;
          if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            uint64_t v36 = (std::basic_string<char16_t> *)v79.__r_.__value_.__r.__words[0];
          }
          while (*v35 == (unsigned __int16)v36->__r_.__value_.__s.__data_[0])
          {
            uint64_t v36 = (std::basic_string<char16_t> *)((char *)v36 + 2);
            ++v35;
            if (!--v32) {
              goto LABEL_23;
            }
          }
          goto LABEL_44;
        }
      }
LABEL_23:
      uint64_t v31 = *((void *)&v90 + 1);
      if (*((void *)&v90 + 1) >= (unint64_t)v91)
      {
        uint64_t v27 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v90, (long long *)&__sz);
      }
      else
      {
        if (v29 < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)&v90 + 1), __sz.__r_.__value_.__l.__data_, v30);
        }
        else
        {
          **((_OWORD **)&v90 + 1) = *(_OWORD *)&__sz.__r_.__value_.__l.__data_;
          *(void *)(v31 + 16) = *((void *)&__sz.__r_.__value_.__l + 2);
        }
        uint64_t v27 = v31 + 24;
      }
      *((void *)&v90 + 1) = v27;
    }
LABEL_44:
    int v37 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type v38 = __s.__r_.__value_.__l.__size_;
    if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v39 = HIBYTE(__s.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v39 = __s.__r_.__value_.__l.__size_;
    }
    if (v39)
    {
      uint64_t v40 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v27);
      uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
      int v42 = (char)v41;
      if ((v41 & 0x80u) != 0) {
        uint64_t v41 = *(void *)(v40 + 8);
      }
      if (v39 == v41)
      {
        if (v42 >= 0) {
          uint64_t v43 = (unsigned __int16 *)v40;
        }
        else {
          uint64_t v43 = *(unsigned __int16 **)v40;
        }
        p_s = (std::basic_string<char16_t> *)__s.__r_.__value_.__r.__words[0];
        if (v37 >= 0) {
          p_s = &__s;
        }
        while (*v43 == (unsigned __int16)p_s->__r_.__value_.__s.__data_[0])
        {
          p_s = (std::basic_string<char16_t> *)((char *)p_s + 2);
          ++v43;
          if (!--v39) {
            goto LABEL_66;
          }
        }
      }
      uint64_t v45 = *((void *)&v90 + 1);
      if (*((void *)&v90 + 1) >= (unint64_t)v91)
      {
        uint64_t v46 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v90, (long long *)&__s);
      }
      else
      {
        if (v37 < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)&v90 + 1), __s.__r_.__value_.__l.__data_, v38);
        }
        else
        {
          **((_OWORD **)&v90 + 1) = *(_OWORD *)&__s.__r_.__value_.__l.__data_;
          *(void *)(v45 + 16) = *((void *)&__s.__r_.__value_.__l + 2);
        }
        uint64_t v46 = v45 + 24;
      }
      *((void *)&v90 + 1) = v46;
    }
LABEL_66:
    std::basic_string<char16_t>::size_type v47 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v47 = __p.__r_.__value_.__l.__size_;
    }
    if (v47)
    {
      uint64_t v48 = *((void *)&v90 + 1);
      if (*((void *)&v90 + 1) >= (unint64_t)v91)
      {
        uint64_t v49 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v90, (long long *)&__p);
      }
      else
      {
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(*((std::basic_string<char16_t> **)&v90 + 1), __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        }
        else
        {
          **((_OWORD **)&v90 + 1) = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v48 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
        }
        uint64_t v49 = v48 + 24;
      }
      *((void *)&v90 + 1) = v49;
    }
    uint64_t v84 = 0;
    int v50 = *(char *)(a4 + 23);
    if (v50 >= 0) {
      uint64_t v51 = (const UChar *)a4;
    }
    else {
      uint64_t v51 = *(const UChar **)a4;
    }
    if (v50 >= 0) {
      uint64_t v52 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      uint64_t v52 = *(void *)(a4 + 8);
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[5], (uint64_t)&v84, v51, v52);
    uint64_t v83 = 0;
    morphun::dictionary::DictionaryMetaData::getBinaryProperties(a2[5], &v83, (uint64_t *)&v90);
    int v53 = *(char *)(a4 + 23);
    if (v53 >= 0) {
      unint64_t v54 = (char *)a4;
    }
    else {
      unint64_t v54 = *(char **)a4;
    }
    if (v53 >= 0) {
      unint64_t v55 = *(unsigned __int8 *)(a4 + 23);
    }
    else {
      unint64_t v55 = *(void *)(a4 + 8);
    }
    morphun::dictionary::Inflector_InflectionPattern::reinflect(__dst, (uint64_t)&v85, v84, v83, v54, v55);
    if ((v73 & 0x80) != 0) {
      operator delete(v72);
    }
    uint64_t v20 = __dst[1];
    v89[0] = *(_DWORD *)v81;
    *(_DWORD *)((char *)v89 + 3) = *(_DWORD *)&v81[3];
    uint64_t v72 = __dst[0];
    unsigned __int8 v73 = v82;
    __dst[0] = (void **)&v90;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](__dst);
    goto LABEL_91;
  }
  uint64_t v20 = 0;
  uint64_t v72 = 0;
  unsigned __int8 v73 = 0;
LABEL_94:
  if ((v73 & 0x80u) == 0) {
    unint64_t v56 = (void **)v73;
  }
  else {
    unint64_t v56 = v20;
  }
  if (v56)
  {
    unint64_t v57 = v71;
    v71->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v72;
    v71->__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v20;
    LODWORD(v71->__r_.__value_.__r.__words[2]) = v89[0];
    *(_DWORD *)((char *)&v71->__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v89 + 3);
    *((unsigned char *)&v71->__r_.__value_.__s + 23) = v73;
  }
  else
  {
    unint64_t v57 = v71;
    if (*(char *)(a4 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v71, *(const std::basic_string<char16_t>::value_type **)a4, *(void *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)&v71->__r_.__value_.__l.__data_ = *(_OWORD *)a4;
      v71->__r_.__value_.__r.__words[2] = *(void *)(a4 + 16);
    }
    if ((v73 & 0x80) != 0) {
      operator delete(v72);
    }
  }
  uint64_t v58 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)PropertyValues);
  uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
  int v60 = (char)v59;
  if ((v59 & 0x80u) != 0) {
    uint64_t v59 = *(void *)(v58 + 8);
  }
  std::basic_string<char16_t>::size_type v61 = HIBYTE(__s.__r_.__value_.__r.__words[2]);
  int v62 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
  if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v61 = __s.__r_.__value_.__l.__size_;
  }
  if (v59 == v61)
  {
    if (v59)
    {
      uint64_t v63 = (std::basic_string<char16_t> *)__s.__r_.__value_.__r.__words[0];
      if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v63 = &__s;
      }
      if (v60 >= 0) {
        long long v64 = (unsigned __int16 *)v58;
      }
      else {
        long long v64 = *(unsigned __int16 **)v58;
      }
      while ((unsigned __int16)v63->__r_.__value_.__s.__data_[0] == *v64)
      {
        ++v64;
        uint64_t v63 = (std::basic_string<char16_t> *)((char *)v63 + 2);
        if (!--v59) {
          goto LABEL_117;
        }
      }
    }
    else
    {
LABEL_117:
      if (SHIBYTE(v57->__r_.__value_.__r.__words[2]) < 0)
      {
        unint64_t v65 = v57->__r_.__value_.__l.__size_;
        if (v65 <= 1) {
          goto LABEL_128;
        }
        uint64_t v66 = (std::basic_string<char16_t> *)v57->__r_.__value_.__r.__words[0];
      }
      else
      {
        unint64_t v65 = HIBYTE(v57->__r_.__value_.__r.__words[2]);
        if (v65 <= 1) {
          goto LABEL_128;
        }
        uint64_t v66 = v57;
      }
      unsigned int v67 = (unsigned __int16)v66->__r_.__value_.__s.__data_[v65 - 1] - 115;
      BOOL v68 = v67 > 7;
      int v69 = (1 << v67) & 0xA1;
      if (v68 || v69 == 0) {
        std::basic_string<char16_t>::append(v57, word_1D2ED0594, 1uLL);
      }
    }
  }
LABEL_128:
  *(void *)&long long v85 = &v74;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v85);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v62 & 0x80000000) == 0) {
      goto LABEL_130;
    }
  }
  else if ((v62 & 0x80000000) == 0)
  {
    goto LABEL_130;
  }
  operator delete(__s.__r_.__value_.__l.__data_);
LABEL_130:
  if (SHIBYTE(__sz.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__sz.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
}

void sub_1D2CF728C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char *a45)
{
  if (*(char *)(a9 + 23) < 0) {
    operator delete(*(void **)a9);
  }
  a45 = &a12;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a45);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::~SvGrammarSynthesizer_SvDisplayFunction(morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction *this)
{
  morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::~SvGrammarSynthesizer_SvDisplayFunction((morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction *)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::~SvGrammarSynthesizer_SvDisplayFunction((morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction *)((char *)this + *(void *)(*(void *)this - 32)));
}

void morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::~SvGrammarSynthesizer_SvDisplayFunction(morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction *this)
{
  *(void *)this = &unk_1F2A0CAC8;
  *((void *)this + 39) = &unk_1F2A0CB20;
  morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::~SvGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction *)((char *)this + 80));
  uint64_t v2 = *((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

{
  uint64_t vars8;

  morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::~SvGrammarSynthesizer_SvDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  memset(&v15, 0, sizeof(v15));
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 != *(void *)(a2 + 16))
  {
    int v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v4 + 24))(v4);
    std::basic_string<char16_t>::operator=(&v15, v6);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::size_type size = v15.__r_.__value_.__l.__size_;
      if (v15.__r_.__value_.__l.__size_)
      {
        unint64_t v8 = (std::basic_string<char16_t> *)v15.__r_.__value_.__r.__words[0];
LABEL_8:
        uint64_t v9 = a1[5];
        v14.__r_.__value_.__r.__words[0] = 0;
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v9, (uint64_t)&v14, (const UChar *)v8, size))
        {
          morphun::grammar::synthesis::SvGrammarSynthesizer_SvDisplayFunction::inflectWord(&v14, a1, a3, (uint64_t)&v15, (uint64_t)&v15, 1);
          if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v15.__r_.__value_.__l.__data_);
          }
          std::basic_string<char16_t> v15 = v14;
        }
        else
        {
          uint64_t v10 = a1[7];
          if (!v10)
          {
            exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(exception);
          }
          uint64_t v11 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v10 + 24))(v10, &v15);
          npc<morphun::TokenChain>(v11);
          npc<morphun::TokenChain>(v11);
          morphun::grammar::synthesis::GrammarSynthesizerUtil::inflectSignificantWords(&v14, a3, v11, (uint64_t)a1 + *(void *)(*a1 - 64));
          if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v15.__r_.__value_.__l.__data_);
          }
          std::basic_string<char16_t> v15 = v14;
          (*(void (**)(uint64_t))(*(void *)v11 + 16))(v11);
        }
        operator new();
      }
      operator delete(v15.__r_.__value_.__l.__data_);
    }
    else
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
      if (*((unsigned char *)&v15.__r_.__value_.__s + 23))
      {
        unint64_t v8 = &v15;
        goto LABEL_8;
      }
    }
  }
  return 0;
}

void sub_1D2CF76A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  __cxa_free_exception(v18);
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D2CF7780(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CF781C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::PtGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::PtGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  operator new();
}

void sub_1D2CFBDF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, morphun::dialog::DefinitenessDisplayFunction *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  __cxa_free_exception(v62);
  MEMORY[0x1D942B8B0](v61, 0x10F3C405FC599D6);
  _Unwind_Resume(a1);
}

void sub_1D2CFC904()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1 - 256) {
      JUMPOUT(0x1D2CFC5BCLL);
    }
  }
}

void sub_1D2CFC92C()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1 - 256) {
      JUMPOUT(0x1D2CFC950);
    }
  }
}

void sub_1D2CFC978()
{
}

uint64_t morphun::grammar::synthesis::PtGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::PtGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Count>>(morphun::grammar::synthesis::PtGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Count>>(morphun::grammar::synthesis::PtGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CFCB60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        const std::basic_string<char16_t> *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          std::basic_string<char16_t> v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CFCD88(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CFCE00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::PtGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::PtGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::PtGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    unint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      unint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::PtGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2CFCFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      unint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            unint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            unint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        const std::basic_string<char16_t> *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          std::basic_string<char16_t> v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2CFD21C(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::PtGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CFD294(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction::getFeatureValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[1]);
  BOOL v7 = v6;
  unint64_t v8 = (void *)(a3 + 8);
  if ((void *)(a3 + 8) == v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = (unsigned __int16 *)(v6 + 13);
  }
  uint64_t v10 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[2]);
  BOOL v11 = v10;
  if (v8 == v10) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = (unsigned __int16 *)(v10 + 13);
  }
  int v13 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, a1[3]);
  int Count = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount(v13);
  std::basic_string<char16_t> v15 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, a1[4]);
  int Gender = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender(v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  if (Count) {
    BOOL v18 = Gender == 0;
  }
  else {
    BOOL v18 = 1;
  }
  if (v18)
  {
    uint64_t v19 = v17;
    if (!Count
      && (morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::determine(a1 + 5, v17, (uint64_t)__p),
          int Count = morphun::grammar::synthesis::ItGrammarSynthesizer::getCount((unsigned __int16 *)__p),
          SHIBYTE(v32) < 0))
    {
      operator delete(__p[0]);
      if (Gender) {
        goto LABEL_18;
      }
    }
    else if (Gender)
    {
      goto LABEL_18;
    }
    morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::determine(a1 + 34, v19, (uint64_t)__p);
    int Gender = morphun::grammar::synthesis::ItGrammarSynthesizer::getGender((unsigned __int16 *)__p);
    if (SHIBYTE(v32) < 0) {
      operator delete(__p[0]);
    }
  }
LABEL_18:
  if (v8 == v11 || v8 == v7) {
    operator new();
  }
  PossessiveAdjectiveint Count = (morphun::grammar::synthesis::ItGrammarSynthesizer *)morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectiveCount(v12);
  char PossessiveAdjectivePerson = morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjectivePerson(v9);
  PossessiveAdjective = (unsigned __int16 *)morphun::grammar::synthesis::ItGrammarSynthesizer::getPossessiveAdjective(PossessiveAdjectiveCount, PossessiveAdjectivePerson);
  if (!v23) {
    operator new();
  }
  InflectedPossessiveAdjectiveint Value = morphun::grammar::synthesis::ItGrammarSynthesizer::getInflectedPossessiveAdjectiveValue(PossessiveAdjective, v23, Gender, Count);
  if (v25 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v26 = (const void *)InflectedPossessiveAdjectiveValue;
  unint64_t v27 = v25;
  if (v25 >= 0xB)
  {
    uint64_t v29 = (v25 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v25 | 3) != 0xB) {
      uint64_t v29 = v25 | 3;
    }
    std::basic_string<char16_t>::size_type v28 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v29 + 1);
    __p[1] = (void *)v27;
    unint64_t v32 = v30 | 0x8000000000000000;
    __p[0] = v28;
  }
  else
  {
    HIBYTE(v32) = v25;
    std::basic_string<char16_t>::size_type v28 = __p;
    if (!v25)
    {
LABEL_31:
      *((_WORD *)v28 + v27) = 0;
      operator new();
    }
  }
  memmove(v28, v26, 2 * v27);
  goto LABEL_31;
}

void sub_1D2CFD59C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction::~ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction(morphun::grammar::synthesis::ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction *this)
{
  *(void *)this = &unk_1F2A0E1F8;
  uint64_t v1 = (morphun::grammar::synthesis::ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction *)((char *)this + 40);
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction *)((char *)this + 272));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v1);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction *v1;

  *(void *)this = &unk_1F2A0E1F8;
  uint64_t v1 = (morphun::grammar::synthesis::ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction *)((char *)this + 40);
  morphun::grammar::synthesis::ItGrammarSynthesizer_GenderLookupFunction::~ItGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::ItGrammarSynthesizer_PossessiveAdjectiveLookupFunction *)((char *)this + 272));
  morphun::grammar::synthesis::ItGrammarSynthesizer_CountLookupFunction::~ItGrammarSynthesizer_CountLookupFunction(v1);
}

void sub_1D2CFD738(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::tokenizer::locale::fi::FiSegment>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CFD79C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2CFD800(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::locale::fi::FiSuffixSplit::CLITICSET(morphun::tokenizer::locale::fi::FiSuffixSplit *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return npc<std::set<std::u16string_view>>(morphun::tokenizer::locale::fi::FiSuffixSplit::CLITICSET(void)::CLITICSET_);
}

void sub_1D2CFD904(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIX_SPLIT(morphun::tokenizer::locale::fi::FiSuffixSplit *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIX_SPLIT(void)::SUFFIX_SPLIT_;

  return npc<std::set<std::u16string_view>>(v1);
}

void sub_1D2CFD9D8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

void *std::set<std::u16string_view>::set[abi:ne180100]<char16_t const* const*>(void *a1, unsigned __int16 **a2, unsigned __int16 **a3)
{
  a1[1] = 0;
  uint64_t v4 = a1 + 1;
  a1[2] = 0;
  *a1 = a1 + 1;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      BOOL v7 = operator new(0x30uLL);
      unint64_t v8 = v7;
      uint64_t v9 = *v6;
      *((void *)v7 + 4) = *v6;
      if (*v9)
      {
        uint64_t v10 = 0;
        do
          unint64_t v11 = v10 + 1;
        while (v9[++v10]);
      }
      else
      {
        unint64_t v11 = 0;
      }
      *((void *)v7 + 5) = v11;
      int v13 = (uint64_t **)std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(a1, v4, &v16, &v15, v9, v11);
      if (*v13) {
        operator delete(v8);
      }
      else {
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a1, v16, v13, (uint64_t *)v8);
      }
      ++v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_1D2CFDAF4(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO(morphun::tokenizer::locale::fi::FiSuffixSplit *this)
{
  {
    if (v2) {
      morphun::tokenizer::locale::fi::FiSuffixSplit::loadSuffixInfo(v2);
    }
  }
  uint64_t result = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO(void)::SUFFIXINFO_;
  if (!morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO(void)::SUFFIXINFO_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2CFDB98(_Unwind_Exception *a1)
{
}

void morphun::tokenizer::locale::fi::FiSuffixSplit::loadSuffixInfo(morphun::tokenizer::locale::fi::FiSuffixSplit *this)
{
  uint64_t v1 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)std::set<std::u16string_view>::set[abi:ne180100]<char16_t const* const*>(&v26, (unsigned __int16 **)&morphun::tokenizer::locale::fi::ALL_SUFFIX_SEQUENCE_PRIMITIVE, (unsigned __int16 **)&morphun::tokenizer::locale::fi::ALL_SUFFIX_SEQUENCE_PRIMITIVE+ 665);
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  int v24 = 0;
  uint64_t v25 = 0;
  unint64_t v23 = &v24;
  uint64_t v4 = &v24;
  while (1)
  {
    uint64_t v5 = &(&off_1E696D730)[3 * v3];
    uint64_t v6 = &v24;
    if (v4 == &v24) {
      goto LABEL_16;
    }
    BOOL v7 = v2;
    unint64_t v8 = &v24;
    if (v2)
    {
      do
      {
        uint64_t v6 = (uint64_t **)v7;
        BOOL v7 = (uint64_t *)v7[1];
      }
      while (v7);
    }
    else
    {
      do
      {
        uint64_t v6 = (uint64_t **)v8[2];
        BOOL v9 = *v6 == (uint64_t *)v8;
        unint64_t v8 = v6;
      }
      while (v9);
    }
    uint64_t v10 = v6[5];
    unint64_t v11 = (unint64_t)v5[1];
    uint64_t v12 = v11 >= (unint64_t)v10 ? v6[5] : (uint64_t *)v5[1];
    if (v12) {
      break;
    }
LABEL_15:
    if ((unint64_t)v10 < v11) {
      goto LABEL_16;
    }
    int v13 = (unsigned __int16 *)*v5;
LABEL_20:
    uint64_t v1 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)&v23, &__p, v13, v11);
    BOOL v18 = (uint64_t **)v1;
LABEL_21:
    if (!*v18)
    {
      uint64_t v19 = operator new(0x38uLL);
      v19[2] = *(_OWORD *)v5;
      *((void *)v19 + 6) = v5[2];
      uint64_t v20 = __p;
      *(void *)uint64_t v19 = 0;
      *((void *)v19 + 1) = 0;
      *((void *)v19 + 2) = v20;
      *BOOL v18 = (uint64_t *)v19;
      if (*v23)
      {
        unint64_t v23 = (uint64_t **)*v23;
        uint64_t v19 = *v18;
      }
      uint64_t v1 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v24, (uint64_t *)v19);
      ++v25;
    }
    if (++v3 == 2)
    {
      uint64_t v21 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIX_SPLIT(v1);
      std::set<std::u16string_view>::insert[abi:ne180100]<std::__tree_const_iterator<std::u16string_view,std::__tree_node<std::u16string_view,void *> *,long>>(&v26, *(void **)v21, (void *)(v21 + 8));
      operator new();
    }
    uint64_t v4 = v23;
    uint64_t v2 = v24;
  }
  int v13 = (unsigned __int16 *)*v5;
  uint64_t v14 = v6[4];
  uint64_t v15 = *v5;
  while (1)
  {
    unsigned int v16 = *(unsigned __int16 *)v14;
    unsigned int v17 = (unsigned __int16)*v15;
    if (v16 < v17) {
      break;
    }
    if (v17 < v16) {
      goto LABEL_20;
    }
    uint64_t v14 = (uint64_t *)((char *)v14 + 2);
    ++v15;
    uint64_t v12 = (uint64_t *)((char *)v12 - 1);
    if (!v12) {
      goto LABEL_15;
    }
  }
LABEL_16:
  if (v2)
  {
    std::basic_string<char16_t> __p = v6;
    BOOL v18 = v6 + 1;
  }
  else
  {
    std::basic_string<char16_t> __p = &v24;
    BOOL v18 = &v24;
  }
  goto LABEL_21;
}

void sub_1D2CFE408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a23);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v23 - 104));
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::u16string_view,std::vector<int>>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::vector<int>>>>::__emplace_unique_key_args<std::u16string_view,std::u16string_view const&,std::vector<int>>(uint64_t a1, uint64_t *a2, uint64_t a3, _OWORD *a4, long long *a5)
{
  unint64_t v11 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](a2, 2 * a3);
  unint64_t v12 = v11;
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v5 = v11;
      if (v11 >= v13) {
        unint64_t v5 = v11 % v13;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v11;
    }
    uint64_t v15 = *(void **)(*(void *)a1 + 8 * v5);
    if (v15)
    {
      for (int i = (void *)*v15; i; int i = (void *)*i)
      {
        unint64_t v17 = i[1];
        if (v17 == v11)
        {
          if (i[3] == a3)
          {
            if (!a3) {
              return;
            }
            BOOL v18 = (unsigned __int16 *)i[2];
            uint64_t v19 = a3;
            for (uint64_t j = a2; *(unsigned __int16 *)j == *v18; uint64_t j = (uint64_t *)((char *)j + 2))
            {
              ++v18;
              if (!--v19) {
                return;
              }
            }
          }
        }
        else
        {
          if (v14.u32[0] > 1uLL)
          {
            if (v17 >= v13) {
              v17 %= v13;
            }
          }
          else
          {
            v17 &= v13 - 1;
          }
          if (v17 != v5) {
            break;
          }
        }
      }
    }
  }
  uint64_t v21 = operator new(0x38uLL);
  *uint64_t v21 = 0;
  v21[1] = v12;
  long long v22 = *a5;
  *((_OWORD *)v21 + 1) = *a4;
  *((_OWORD *)v21 + 2) = v22;
  v21[6] = *((void *)a5 + 2);
  *(void *)a5 = 0;
  *((void *)a5 + 1) = 0;
  *((void *)a5 + 2) = 0;
  float v23 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v24 = *(float *)(a1 + 32);
  if (!v13 || (float)(v24 * (float)v13) < v23)
  {
    BOOL v25 = 1;
    if (v13 >= 3) {
      BOOL v25 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v26 = v25 | (2 * v13);
    unint64_t v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27) {
      size_t v28 = v27;
    }
    else {
      size_t v28 = v26;
    }
    std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>(a1, v28);
    unint64_t v13 = *(void *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13) {
        unint64_t v5 = v12 % v13;
      }
      else {
        unint64_t v5 = v12;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v12;
    }
  }
  uint64_t v29 = *(void *)a1;
  uint64_t v30 = *(void **)(*(void *)a1 + 8 * v5);
  if (v30)
  {
    *uint64_t v21 = *v30;
LABEL_42:
    void *v30 = v21;
    goto LABEL_43;
  }
  *uint64_t v21 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v21;
  *(void *)(v29 + 8 * v5) = a1 + 16;
  if (*v21)
  {
    unint64_t v31 = *(void *)(*v21 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v31 >= v13) {
        v31 %= v13;
      }
    }
    else
    {
      v31 &= v13 - 1;
    }
    uint64_t v30 = (void *)(*(void *)a1 + 8 * v31);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
}

void sub_1D2CFE6EC(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::u16string_view,std::vector<int>>,void *>>>::operator()[abi:ne180100](1, v1);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::u16string_view,std::vector<int>>,void *>>>::operator()[abi:ne180100](char a1, void *__p)
{
  if (a1)
  {
    uint64_t v3 = (void *)__p[4];
    if (v3)
    {
      std::basic_string<char16_t> __p[5] = v3;
      operator delete(v3);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1D2CFE7C4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::__hash_table<std::__hash_value_type<std::u16string_view,std::vector<int>>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::vector<int>>>>::find<std::u16string_view>(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v8 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](a3, 2 * a4);
  if (!a2) {
    return 0;
  }
  uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v8;
    if (v8 >= a2) {
      unint64_t v10 = v8 % a2;
    }
  }
  else
  {
    unint64_t v10 = (a2 - 1) & v8;
  }
  int i = *(void **)(a1 + 8 * v10);
  if (i)
  {
    for (int i = (void *)*i; i; int i = (void *)*i)
    {
      unint64_t v12 = i[1];
      if (v8 == v12)
      {
        if (i[3] == a4)
        {
          if (!a4) {
            return i;
          }
          unint64_t v13 = (unsigned __int16 *)i[2];
          uint64_t v14 = a4;
          for (uint64_t j = a3; *(unsigned __int16 *)j == *v13; uint64_t j = (uint64_t *)((char *)j + 2))
          {
            ++v13;
            if (!--v14) {
              return i;
            }
          }
        }
      }
      else
      {
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2) {
            v12 %= a2;
          }
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 != v10) {
          return 0;
        }
      }
    }
  }
  return i;
}

void morphun::tokenizer::locale::fi::FiSuffixSplit::addSuffixInfo(morphun::tokenizer::locale::fi::FiSuffixSplit *a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v8 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO(a1);
  uint8x8_t v9 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)std::__hash_table<std::__hash_value_type<std::u16string_view,std::vector<int>>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::vector<int>>>>::find<std::u16string_view>(*(void *)v8, *(void *)(v8 + 8), (uint64_t *)a1, a2);
  morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO(v9);
  if (v9)
  {
    unint64_t v11 = (int *)*((void *)v9 + 4);
    for (int i = (int *)*((void *)v9 + 5); v11 != i; ++v11)
    {
      int v12 = *v11;
      npc<std::vector<int>>((uint64_t)a3);
      int v13 = v12 + a4;
      uint64_t v15 = (_DWORD *)a3[1];
      unint64_t v14 = a3[2];
      if ((unint64_t)v15 >= v14)
      {
        unint64_t v17 = (_DWORD *)*a3;
        uint64_t v18 = ((uint64_t)v15 - *a3) >> 2;
        unint64_t v19 = v18 + 1;
        if ((unint64_t)(v18 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v20 = v14 - (void)v17;
        if (v20 >> 1 > v19) {
          unint64_t v19 = v20 >> 1;
        }
        if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21)
        {
          unint64_t v21 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v21);
          unint64_t v17 = (_DWORD *)*a3;
          uint64_t v15 = (_DWORD *)a3[1];
        }
        else
        {
          uint64_t v22 = 0;
        }
        float v23 = (_DWORD *)(v21 + 4 * v18);
        _DWORD *v23 = v13;
        unsigned int v16 = v23 + 1;
        while (v15 != v17)
        {
          int v24 = *--v15;
          *--float v23 = v24;
        }
        *a3 = v23;
        a3[1] = v16;
        a3[2] = v21 + 4 * v22;
        if (v17) {
          operator delete(v17);
        }
      }
      else
      {
        _DWORD *v15 = v13;
        unsigned int v16 = v15 + 1;
      }
      a3[1] = v16;
    }
  }
}

void sub_1D2CFEA80(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::tokenizer::locale::fi::FiSuffixSplit::isInNotNominative(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  {
    operator new();
  }
  uint64_t v6 = morphun::tokenizer::locale::fi::FiSuffixSplit::isInNotNominative(morphun::tokenizer::locale::fi::FiSegment const*,std::u16string_view)::notNominativeSuffix_;
  if (!morphun::tokenizer::locale::fi::FiSuffixSplit::isInNotNominative(morphun::tokenizer::locale::fi::FiSegment const*,std::u16string_view)::notNominativeSuffix_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v7 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(morphun::tokenizer::locale::fi::FiSuffixSplit::isInNotNominative(morphun::tokenizer::locale::fi::FiSegment const*,std::u16string_view)::notNominativeSuffix_, a2, a3);
  if ((void *)(v6 + 8) == v7) {
    return 1;
  }
  if (!a1)
  {
    unint64_t v17 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v17);
  }
  unint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = v7[7];
  if (v8 < v9) {
    return 0;
  }
  if (!v9) {
    return 1;
  }
  unint64_t v11 = (unsigned __int16 *)v7[6];
  uint64_t v12 = -(uint64_t)v9;
  uint64_t v13 = *(void *)(a1 + 8) + 2 * v8;
  do
  {
    int v14 = *v11++;
    BOOL result = v14 == *(unsigned __int16 *)(v13 + 2 * v12);
    BOOL v15 = v14 != *(unsigned __int16 *)(v13 + 2 * v12) || v12 == -1;
    ++v12;
  }
  while (!v15);
  return result;
}

void sub_1D2CFEC58(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries(uint64_t a1, int **a2, int a3)
{
  uint64_t v5 = a1;
  int v6 = *(unsigned __int8 *)(a1 + 12);
  uint64_t v7 = npc<morphun::tokenizer::locale::fi::FiSegment>(*(void *)a1);
  if (v6)
  {
    *(_DWORD *)(v5 + 8) = *(_DWORD *)(v7 + 60);
    uint64_t v8 = npc<morphun::tokenizer::locale::fi::FiSegment>(*(void *)v5);
    morphun::tokenizer::locale::fi::FiSegment::addBoundaries(v8, a2);
    return;
  }
  int v41 = *(_DWORD *)(v7 + 64);
  int v44 = a3;
  uint64_t v40 = a2;
  int v9 = *(_DWORD *)(npc<morphun::tokenizer::locale::fi::FiSegment>(*(void *)v5) + 16);
  unint64_t v10 = npc<morphun::tokenizer::locale::fi::FiSegment>(*(void *)v5);
  unint64_t v11 = *(void *)(v10 + 16);
  if (a3 == 1) {
    int v12 = 3;
  }
  else {
    int v12 = 10;
  }
  if ((int)v11 - 3 < v12) {
    int v12 = v11 - 3;
  }
  if (v12 < 1)
  {
    uint64_t v13 = 0;
    goto LABEL_67;
  }
  int v45 = v9;
  uint64_t v13 = 0;
  int v14 = 0;
  uint64_t v46 = *(void *)(v10 + 8);
  unint64_t v42 = 0;
  uint64_t v43 = (v12 + 1);
  unint64_t v15 = 1;
  do
  {
    unint64_t v16 = v11 - v15;
    if (v11 >= v11 - v15) {
      unint64_t v17 = v11 - v15;
    }
    else {
      unint64_t v17 = v11;
    }
    if (v15 == v11 + 1) {
LABEL_75:
    }
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    uint64_t v18 = v5;
    unint64_t v19 = (unsigned __int16 *)(v46 + 2 * v16);
    if (v44 == 1)
    {
      {
        operator new();
      }
      uint64_t v20 = npc<std::set<std::u16string_view>>(morphun::tokenizer::locale::fi::FiSuffixSplit::MIDDLESUFFIXSET(void)::MIDDLESUFFIXSET_);
      unint64_t v10 = std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(void *)(v20 + 8), v19, v15);
      if (v10) {
        goto LABEL_19;
      }
    }
    else
    {
      if (v44)
      {
LABEL_22:
        uint64_t v5 = v18;
        goto LABEL_43;
      }
      uint64_t v24 = morphun::tokenizer::locale::fi::FiSuffixSplit::CLITICSET((morphun::tokenizer::locale::fi::FiSuffixSplit *)v10);
      unint64_t v10 = std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(void *)(v24 + 8), v19, v15);
      if (v10)
      {
        if (v16 > 2) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v28 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO(0);
        unint64_t v10 = (unint64_t)std::__hash_table<std::__hash_value_type<std::u16string_view,std::vector<int>>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::vector<int>>>>::find<std::u16string_view>(*(void *)v28, *(void *)(v28 + 8), (uint64_t *)v19, v15);
        if (v16 >= 3 && v10) {
          goto LABEL_19;
        }
      }
      if (v15 >= 3)
      {
        int64_t v29 = (int)v15 - 1;
        unint64_t v30 = 1;
        do
        {
          while (1)
          {
            uint64_t v31 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO((morphun::tokenizer::locale::fi::FiSuffixSplit *)v10);
            uint64_t v32 = v15 >= v15 - v30 ? v15 - v30 : v15;
            unint64_t v10 = (unint64_t)std::__hash_table<std::__hash_value_type<std::u16string_view,std::vector<int>>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::vector<int>>>>::find<std::u16string_view>(*(void *)v31, *(void *)(v31 + 8), (uint64_t *)v19, v32);
            if (v10) {
              break;
            }
            if ((uint64_t)++v30 >= v29) {
              goto LABEL_22;
            }
          }
          uint64_t v33 = morphun::tokenizer::locale::fi::FiSuffixSplit::CLITICSET((morphun::tokenizer::locale::fi::FiSuffixSplit *)v10);
          if (v15 < v30) {
            goto LABEL_75;
          }
          unint64_t v10 = std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(void *)(v33 + 8), &v19[v15 - v30], v30);
          ++v30;
        }
        while ((uint64_t)v30 < v29 && !v10);
        uint64_t v5 = v18;
        if (v10)
        {
LABEL_19:
          if ((unint64_t)v14 >= v42)
          {
            uint64_t v21 = (v14 - v13) >> 4;
            unint64_t v22 = v21 + 1;
            if ((unint64_t)(v21 + 1) >> 60) {
              std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
            }
            if ((uint64_t)(v42 - (void)v13) >> 3 > v22) {
              unint64_t v22 = (uint64_t)(v42 - (void)v13) >> 3;
            }
            if (v42 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v10 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v10 = v22;
            }
            if (v10) {
              unint64_t v10 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v10);
            }
            else {
              uint64_t v23 = 0;
            }
            BOOL v25 = (void *)(v10 + 16 * v21);
            *BOOL v25 = v46;
            v25[1] = v17;
            if (v14 == v13)
            {
              unint64_t v27 = (char *)(v10 + 16 * v21);
            }
            else
            {
              unint64_t v26 = v10 + 16 * v21;
              do
              {
                unint64_t v27 = (char *)(v26 - 16);
                *(_OWORD *)(v26 - 16) = *((_OWORD *)v14 - 1);
                v14 -= 16;
                v26 -= 16;
              }
              while (v14 != v13);
            }
            unint64_t v42 = v10 + 16 * v23;
            int v14 = (char *)(v25 + 2);
            if (v13) {
              operator delete(v13);
            }
            uint64_t v13 = v27;
          }
          else
          {
            *(void *)int v14 = v46;
            *((void *)v14 + 1) = v17;
            v14 += 16;
          }
        }
      }
    }
LABEL_43:
    ++v15;
  }
  while (v15 != v43);
  if (v13 != v14) {
    operator new();
  }
  int v9 = v45;
LABEL_67:
  if (!*(unsigned char *)(v5 + 12))
  {
    uint64_t v34 = npc<std::vector<int>>((uint64_t)v40);
    uint64_t v35 = npc<std::vector<int>>(v34);
    std::vector<int>::__insert_with_size[abi:ne180100]<std::__wrap_iter<int *>,std::__wrap_iter<int *>>(v35, *(char **)(v35 + 8), 0, 0, 0);
    uint64_t v36 = npc<morphun::tokenizer::locale::fi::FiSegment>(*(void *)v5);
    unint64_t v37 = *(void *)(v36 + 16);
    if (v37 < v9) {
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    }
    if (!v44)
    {
      std::basic_string<char16_t>::size_type v38 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)(*(void *)(v36 + 8) + 2 * v9);
      unint64_t v39 = v37 - v9;
      if (morphun::tokenizer::locale::fi::FiSuffixSplit::isInNotNominative(*(void *)v5, (unsigned __int16 *)v38, v39)) {
        morphun::tokenizer::locale::fi::FiSuffixSplit::addSuffixInfo(v38, v39, v40, v9 + v41);
      }
    }
  }
  if (v13) {
    operator delete(v13);
  }
}

void sub_1D2CFF2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  MEMORY[0x1D942B8B0](v20, 0x1020C4062D53EE8);
  if (v19) {
    operator delete(v19);
  }
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::KkGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::KkGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  operator new();
}

void sub_1D2CFF540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_Feature::getConstraints@<X0>(morphun::lang::features::LanguageGrammarFeatures_Feature *this@<X0>, uint64_t a2@<X8>)
{
  return std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](a2, (void *)this + 4);
}

void morphun::lang::features::LanguageGrammarFeatures_Feature::getValue(morphun::lang::features::LanguageGrammarFeatures_Feature *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a2, *((const std::basic_string<char16_t>::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
}

void morphun::lang::features::LanguageGrammarFeatures_Feature::~LanguageGrammarFeatures_Feature(morphun::lang::features::LanguageGrammarFeatures_Feature *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::lang::features::LanguageGrammarFeatures_Feature::~LanguageGrammarFeatures_Feature(morphun::lang::features::LanguageGrammarFeatures_Feature *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*((void **)this + 5));
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_Feature::LanguageGrammarFeatures_Feature(uint64_t a1, uint64_t *a2, long long *a3, void *a4)
{
  uint64_t v6 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v6 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](a1 + 32, a4);
  return a1;
}

void sub_1D2CFF830(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::lang::features::LanguageGrammarFeatures_Feature::LanguageGrammarFeatures_Feature(uint64_t a1, long long *a2, void *a3)
{
  *(void *)a1 = &off_1F2A08930;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v5;
  }
  std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](a1 + 32, a3);
  return a1;
}

void sub_1D2CFF8D4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void virtual thunk to'morphun::lang::features::LanguageGrammarFeatures_Feature::~LanguageGrammarFeatures_Feature(morphun::lang::features::LanguageGrammarFeatures_Feature *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void morphun::dialog::NumberConcept::asDigits(morphun::dialog::NumberConcept *a1@<X0>, const void **a2@<X1>, void *a3@<X8>)
{
  std::operator+<char16_t>((uint64_t)__p, L"%digits-", a2);
  morphun::dialog::NumberConcept::format(a1, (uint64_t)__p, a3);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2CFF9D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::NumberConcept::format(morphun::dialog::NumberConcept *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  morphun::dialog::NumberConcept::createRuleBasedNumberFormat(a1, (icu4cxx::NumberFormat *)v8);
  if ((*(char *)(a2 + 23) & 0x80000000) == 0)
  {
    if (*(unsigned char *)(a2 + 23)) {
      goto LABEL_5;
    }
LABEL_10:
    morphun::dialog::NumberConcept::format(a1, a3);
    goto LABEL_11;
  }
  if (!*(void *)(a2 + 8)) {
    goto LABEL_10;
  }
LABEL_5:
  int v9 = 0;
  unum_setTextAttribute();
  UErrorCode v6 = v9;
  if (v9 >= 1)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v6);
  }
  if (*((_DWORD *)a1 + 4)) {
    morphun::dialog::NumberConcept::formatDouble((uint64_t)a3);
  }
  else {
    morphun::dialog::NumberConcept::formatInt64((uint64_t)a3);
  }
LABEL_11:
  icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)v8);
}

void sub_1D2CFFC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 73) < 0) {
    operator delete(*(void **)(v33 - 96));
  }
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  __cxa_end_catch();
  icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)(v33 - 72));
  _Unwind_Resume(a1);
}

void sub_1D2CFFCE4()
{
}

icu4cxx::NumberFormat *morphun::dialog::NumberConcept::createRuleBasedNumberFormat@<X0>(morphun::dialog::NumberConcept *a1@<X0>, icu4cxx::NumberFormat *a2@<X8>)
{
  return morphun::dialog::NumberConcept::configure(a1, a2);
}

void sub_1D2CFFD48(_Unwind_Exception *a1)
{
  icu4cxx::NumberFormat::~NumberFormat(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::NumberConcept::formatInt64(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, 0x14uLL, 0);
  int v4 = unum_formatInt64();
  int v5 = v4;
  int v6 = *(unsigned __int8 *)(a1 + 23);
  LOBYTE(v7) = v6;
  if ((v6 & 0x80u) != 0) {
    int v6 = *(_DWORD *)(a1 + 8);
  }
  if (v4 != v6)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v4, 0);
    LOBYTE(v7) = *(unsigned char *)(a1 + 23);
  }
  int v7 = v7;
  if ((v7 & 0x80u) != 0) {
    int v7 = *(_DWORD *)(a1 + 8);
  }
  if (v5 != v7) {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v5, 0);
  }
}

void sub_1D2CFFEB8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::NumberConcept::formatDouble(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, 0x14uLL, 0);
  int v5 = unum_formatDouble();
  int v6 = v5;
  int v7 = *(unsigned __int8 *)(a1 + 23);
  LOBYTE(v8) = v7;
  if ((v7 & 0x80u) != 0) {
    int v7 = *(_DWORD *)(a1 + 8);
  }
  if (v5 != v7)
  {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v5, 0);
    LOBYTE(v8) = *(unsigned char *)(a1 + 23);
  }
  int v8 = v8;
  if ((v8 & 0x80u) != 0) {
    int v8 = *(_DWORD *)(a1 + 8);
  }
  if (v6 != v8) {
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, v6, 0);
  }
}

void sub_1D2D00048(_Unwind_Exception *a1)
{
  __cxa_free_exception(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

double morphun::dialog::NumberConcept::format@<D0>(morphun::dialog::NumberConcept *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if (*((_DWORD *)this + 4)) {
    morphun::dialog::NumberConcept::formatDouble((uint64_t)&v5);
  }
  else {
    morphun::dialog::NumberConcept::formatInt64((uint64_t)&v5);
  }
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  a2[2] = v6;
  return result;
}

uint64_t icu4cxx::NumberFormat::NumberFormat(uint64_t a1)
{
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)a1 = unum_open();
  return a1;
}

void sub_1D2D0018C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

icu4cxx::NumberFormat *morphun::dialog::NumberConcept::configure(morphun::dialog::NumberConcept *this, icu4cxx::NumberFormat *a2)
{
  if ((*((_DWORD *)this + 70) & 0x80000000) != 0)
  {
    npc<icu4cxx::NumberFormat>((uint64_t)a2);
    unum_getTextAttribute();
  }
  else
  {
    npc<icu4cxx::NumberFormat>((uint64_t)a2);
    unum_setAttribute();
  }
  if ((*((_DWORD *)this + 71) & 0x80000000) == 0) {
    unum_setAttribute();
  }
  if ((*((_DWORD *)this + 72) & 0x80000000) == 0) {
    unum_setAttribute();
  }
  if ((*((_DWORD *)this + 73) & 0x80000000) == 0) {
    unum_setAttribute();
  }
  if ((*((_DWORD *)this + 74) & 0x80000000) == 0) {
    unum_setAttribute();
  }
  if ((*((_DWORD *)this + 75) & 0x80000000) != 0) {
    unum_getTextAttribute();
  }
  else {
    unum_setAttribute();
  }
  return a2;
}

uint64_t npc<icu4cxx::NumberFormat>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D00330(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::NumberConcept::getAsOrdinalDigits(morphun::dialog::NumberConcept *this@<X0>, void *a2@<X8>)
{
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"%digits-ordinal");
  morphun::dialog::NumberConcept::format(this, (uint64_t)__p, a2);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2D003A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::NumberConcept::getAsDigits(size_t *this@<X0>, uint64_t a2@<X8>)
{
  morphun::dialog::NumberConcept::createSimpleNumberFormat((morphun::dialog::NumberConcept *)this, (icu4cxx::NumberFormat *)&v85);
  morphun::dialog::NumberConcept::format((morphun::dialog::NumberConcept *)this, &__str);
  icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)&v85);
  int v5 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v85, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
  }
  else {
    std::basic_string<char16_t> v85 = __str;
  }
  uint64_t v6 = morphun::util::LocaleUtils::AUSTRIA(v4);
  int v7 = (unsigned __int8 **)(this + 10);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 79);
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = *(unsigned __int8 *)(v6 + 79);
  }
  else {
    uint64_t v9 = *(void *)(v6 + 64);
  }
  size_t v10 = *((unsigned __int8 *)this + 103);
  int v11 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    size_t v10 = this[11];
  }
  if (v9 != v10) {
    goto LABEL_19;
  }
  int v12 = (const void **)(v6 + 56);
  if (v11 >= 0) {
    uint64_t v13 = (unsigned __int8 *)(this + 10);
  }
  else {
    uint64_t v13 = *v7;
  }
  if ((v8 & 0x80) != 0)
  {
    uint64_t v6 = memcmp(*v12, v13, *(void *)(v6 + 64));
    if (!v6) {
      goto LABEL_33;
    }
LABEL_19:
    uint64_t v14 = morphun::util::LocaleUtils::SWITZERLAND_GERMAN((morphun::util::LocaleUtils *)v6);
    uint64_t v15 = *(unsigned __int8 *)(v14 + 79);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = *(unsigned __int8 *)(v14 + 79);
    }
    else {
      uint64_t v16 = *(void *)(v14 + 64);
    }
    size_t v17 = *((unsigned __int8 *)this + 103);
    int v18 = (char)v17;
    if ((v17 & 0x80u) != 0) {
      size_t v17 = this[11];
    }
    if (v16 != v17) {
      goto LABEL_48;
    }
    unint64_t v19 = (const void **)(v14 + 56);
    if (v18 >= 0) {
      uint64_t v20 = (unsigned __int8 *)(this + 10);
    }
    else {
      uint64_t v20 = *v7;
    }
    if ((v15 & 0x80) != 0)
    {
      uint64_t v14 = memcmp(*v19, v20, *(void *)(v14 + 64));
      if (v14) {
        goto LABEL_48;
      }
    }
    else if (*(unsigned char *)(v14 + 79))
    {
      while (*(unsigned __int8 *)v19 == *v20)
      {
        unint64_t v19 = (const void **)((char *)v19 + 1);
        ++v20;
        if (!--v15) {
          goto LABEL_62;
        }
      }
LABEL_48:
      uint64_t v32 = morphun::util::LocaleUtils::BELGIUM_FRENCH((morphun::util::LocaleUtils *)v14);
      uint64_t v33 = *(unsigned __int8 *)(v32 + 79);
      if ((v33 & 0x80u) == 0) {
        uint64_t v34 = *(unsigned __int8 *)(v32 + 79);
      }
      else {
        uint64_t v34 = *(void *)(v32 + 64);
      }
      size_t v35 = *((unsigned __int8 *)this + 103);
      int v36 = (char)v35;
      if ((v35 & 0x80u) != 0) {
        size_t v35 = this[11];
      }
      if (v34 != v35) {
        goto LABEL_78;
      }
      unint64_t v37 = (const void **)(v32 + 56);
      if (v36 >= 0) {
        std::basic_string<char16_t>::size_type v38 = (unsigned __int8 *)(this + 10);
      }
      else {
        std::basic_string<char16_t>::size_type v38 = *v7;
      }
      if ((v33 & 0x80) != 0)
      {
        uint64_t v32 = memcmp(*v37, v38, *(void *)(v32 + 64));
        if (v32) {
          goto LABEL_78;
        }
      }
      else if (*(unsigned char *)(v32 + 79))
      {
        while (*(unsigned __int8 *)v37 == *v38)
        {
          unint64_t v37 = (const void **)((char *)v37 + 1);
          ++v38;
          if (!--v33) {
            goto LABEL_92;
          }
        }
LABEL_78:
        uint64_t v48 = *((unsigned __int8 *)this + 151);
        if ((v48 & 0x80u) == 0) {
          size_t v49 = *((unsigned __int8 *)this + 151);
        }
        else {
          size_t v49 = this[17];
        }
        size_t v50 = *((unsigned __int8 *)this + 279);
        int v51 = (char)v50;
        if ((v50 & 0x80u) != 0) {
          size_t v50 = this[33];
        }
        if (v49 == v50)
        {
          uint64_t v52 = (const void **)(this + 16);
          if (v51 >= 0) {
            int v53 = (unsigned __int8 *)(this + 32);
          }
          else {
            int v53 = (unsigned __int8 *)this[32];
          }
          if ((v48 & 0x80) != 0)
          {
            if (!memcmp(*v52, v53, this[17])) {
              goto LABEL_166;
            }
          }
          else
          {
            if (!*((unsigned char *)this + 151)) {
              goto LABEL_166;
            }
            while (*(unsigned __int8 *)v52 == *v53)
            {
              uint64_t v52 = (const void **)((char *)v52 + 1);
              ++v53;
              if (!--v48) {
                goto LABEL_166;
              }
            }
          }
        }
        goto LABEL_161;
      }
LABEL_92:
      uint64_t v54 = morphun::util::LocaleUtils::BELGIUM_FRENCH((morphun::util::LocaleUtils *)v32);
      uint64_t v55 = *((unsigned __int8 *)this + 151);
      if ((v55 & 0x80u) == 0) {
        size_t v56 = *((unsigned __int8 *)this + 151);
      }
      else {
        size_t v56 = this[17];
      }
      uint64_t v57 = *(unsigned __int8 *)(v54 + 127);
      int v58 = (char)v57;
      if ((v57 & 0x80u) != 0) {
        uint64_t v57 = *(void *)(v54 + 112);
      }
      if (v56 == v57)
      {
        uint64_t v59 = (const void **)(this + 16);
        int v62 = *(unsigned __int8 **)(v54 + 104);
        int v60 = (unsigned __int8 *)(v54 + 104);
        uint64_t v61 = v62;
        if (v58 >= 0) {
          uint64_t v63 = v60;
        }
        else {
          uint64_t v63 = v61;
        }
        if ((v55 & 0x80) == 0)
        {
          if (*((unsigned char *)this + 151))
          {
            while (*(unsigned __int8 *)v59 == *v63)
            {
              uint64_t v59 = (const void **)((char *)v59 + 1);
              ++v63;
              if (!--v55) {
                goto LABEL_129;
              }
            }
            goto LABEL_161;
          }
LABEL_129:
          if (*((_DWORD *)this + 4) == 1) {
            uint64_t v72 = (uint64_t)*((double *)this + 1);
          }
          else {
            uint64_t v72 = this[1];
          }
          if (v72 < 0) {
            uint64_t v72 = -v72;
          }
          if ((unint64_t)v72 <= 0x3B) {
            goto LABEL_161;
          }
          goto LABEL_157;
        }
        if (!memcmp(*v59, v63, this[17])) {
          goto LABEL_129;
        }
      }
LABEL_161:
      morphun::dialog::NumberConcept::createSimpleNumberFormat((morphun::dialog::NumberConcept *)this, (icu4cxx::NumberFormat *)v83);
      morphun::dialog::NumberConcept::format((morphun::dialog::NumberConcept *)this, &__p);
      goto LABEL_163;
    }
LABEL_62:
    uint64_t v28 = morphun::util::LocaleUtils::SWITZERLAND_GERMAN((morphun::util::LocaleUtils *)v14);
    unint64_t v39 = (const void **)(this + 16);
    uint64_t v40 = *((unsigned __int8 *)this + 151);
    if ((v40 & 0x80u) == 0) {
      size_t v41 = *((unsigned __int8 *)this + 151);
    }
    else {
      size_t v41 = this[17];
    }
    uint64_t v42 = *(unsigned __int8 *)(v28 + 127);
    int v43 = (char)v42;
    if ((v42 & 0x80u) != 0) {
      uint64_t v42 = *(void *)(v28 + 112);
    }
    if (v41 != v42)
    {
LABEL_111:
      uint64_t v64 = morphun::util::LocaleUtils::SWITZERLAND_FRENCH((morphun::util::LocaleUtils *)v28);
      uint64_t v65 = *((unsigned __int8 *)this + 151);
      if ((v65 & 0x80u) == 0) {
        size_t v66 = *((unsigned __int8 *)this + 151);
      }
      else {
        size_t v66 = this[17];
      }
      uint64_t v67 = *(unsigned __int8 *)(v64 + 127);
      int v68 = (char)v67;
      if ((v67 & 0x80u) != 0) {
        uint64_t v67 = *(void *)(v64 + 112);
      }
      if (v66 != v67) {
        goto LABEL_137;
      }
      uint64_t v70 = *(unsigned __int8 **)(v64 + 104);
      v64 += 104;
      int v69 = v70;
      if (v68 >= 0) {
        uint64_t v63 = (unsigned __int8 *)v64;
      }
      else {
        uint64_t v63 = v69;
      }
      if ((v65 & 0x80) != 0)
      {
        uint64_t v64 = memcmp(*v39, v63, this[17]);
        if (v64) {
          goto LABEL_137;
        }
      }
      else if (*((unsigned char *)this + 151))
      {
        std::basic_string<char16_t>::size_type v71 = (unsigned __int8 *)(this + 16);
        while (*v71 == *v63)
        {
          ++v71;
          ++v63;
          if (!--v65) {
            goto LABEL_151;
          }
        }
LABEL_137:
        uint64_t v73 = morphun::util::LocaleUtils::SWITZERLAND_ITALIAN((morphun::util::LocaleUtils *)v64);
        uint64_t v74 = *((unsigned __int8 *)this + 151);
        if ((v74 & 0x80u) == 0) {
          size_t v75 = *((unsigned __int8 *)this + 151);
        }
        else {
          size_t v75 = this[17];
        }
        uint64_t v76 = *(unsigned __int8 *)(v73 + 127);
        int v77 = (char)v76;
        if ((v76 & 0x80u) != 0) {
          uint64_t v76 = *(void *)(v73 + 112);
        }
        if (v75 != v76) {
          goto LABEL_161;
        }
        int v80 = *(unsigned __int8 **)(v73 + 104);
        int v78 = (morphun::util::LocaleUtils *)(v73 + 104);
        std::basic_string<char16_t> v79 = v80;
        if (v77 >= 0) {
          std::basic_string<char16_t>::size_type v81 = (unsigned __int8 *)v78;
        }
        else {
          std::basic_string<char16_t>::size_type v81 = v79;
        }
        if ((v74 & 0x80) != 0)
        {
          int v78 = (morphun::util::LocaleUtils *)memcmp(*v39, v81, this[17]);
          if (v78) {
            goto LABEL_161;
          }
        }
        else if (*((unsigned char *)this + 151))
        {
          while (*(unsigned __int8 *)v39 == *v81)
          {
            unint64_t v39 = (const void **)((char *)v39 + 1);
            ++v81;
            if (!--v74) {
              goto LABEL_162;
            }
          }
          goto LABEL_161;
        }
LABEL_162:
        morphun::util::LocaleUtils::ITALY(v78);
        morphun::dialog::NumberConcept::createSimpleNumberFormat((morphun::dialog::NumberConcept *)this, (icu4cxx::NumberFormat *)v83);
        morphun::dialog::NumberConcept::format((morphun::dialog::NumberConcept *)this, &__p);
        goto LABEL_163;
      }
LABEL_151:
      if (*((_DWORD *)this + 4) == 1) {
        uint64_t v82 = (uint64_t)*((double *)this + 1);
      }
      else {
        uint64_t v82 = this[1];
      }
      if (v82 < 0) {
        uint64_t v82 = -v82;
      }
      if ((unint64_t)v82 > 0x3B)
      {
LABEL_157:
        (*(void (**)(std::basic_string<char16_t> *__return_ptr, size_t *, unsigned __int8 *))(*this + 176))(&__p, this, v63);
        if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v85.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> v85 = __p;
        goto LABEL_166;
      }
      goto LABEL_161;
    }
    int v45 = *(unsigned __int8 **)(v28 + 104);
    v28 += 104;
    int v44 = v45;
    if (v43 >= 0) {
      uint64_t v46 = (unsigned __int8 *)v28;
    }
    else {
      uint64_t v46 = v44;
    }
    if ((v40 & 0x80) != 0)
    {
      uint64_t v28 = memcmp(*v39, v46, this[17]);
      if (v28) {
        goto LABEL_111;
      }
    }
    else if (*((unsigned char *)this + 151))
    {
      std::basic_string<char16_t>::size_type v47 = (unsigned __int8 *)(this + 16);
      while (*v47 == *v46)
      {
        ++v47;
        ++v46;
        if (!--v40) {
          goto LABEL_109;
        }
      }
      goto LABEL_111;
    }
    goto LABEL_109;
  }
  if (*(unsigned char *)(v6 + 79))
  {
    while (*(unsigned __int8 *)v12 == *v13)
    {
      int v12 = (const void **)((char *)v12 + 1);
      ++v13;
      if (!--v8) {
        goto LABEL_33;
      }
    }
    goto LABEL_19;
  }
LABEL_33:
  uint64_t v21 = morphun::util::LocaleUtils::AUSTRIA((morphun::util::LocaleUtils *)v6);
  uint64_t v23 = *((unsigned __int8 *)this + 151);
  if ((v23 & 0x80u) == 0) {
    size_t v24 = *((unsigned __int8 *)this + 151);
  }
  else {
    size_t v24 = this[17];
  }
  uint64_t v25 = *(unsigned __int8 *)(v21 + 127);
  int v26 = (char)v25;
  if ((v25 & 0x80u) != 0) {
    uint64_t v25 = *(void *)(v21 + 112);
  }
  if (v24 != v25) {
    goto LABEL_166;
  }
  unint64_t v27 = (const void **)(this + 16);
  unint64_t v30 = *(unsigned __int8 **)(v21 + 104);
  uint64_t v28 = v21 + 104;
  int64_t v29 = v30;
  if (v26 >= 0) {
    uint64_t v31 = (unsigned __int8 *)v28;
  }
  else {
    uint64_t v31 = v29;
  }
  if ((v23 & 0x80) != 0)
  {
    uint64_t v28 = memcmp(*v27, v31, this[17]);
    if (v28) {
      goto LABEL_166;
    }
    goto LABEL_109;
  }
  if (!*((unsigned char *)this + 151))
  {
LABEL_109:
    morphun::util::LocaleUtils::GERMANY((morphun::util::LocaleUtils *)v28);
    morphun::dialog::NumberConcept::createSimpleNumberFormat((morphun::dialog::NumberConcept *)this, (icu4cxx::NumberFormat *)v83);
    morphun::dialog::NumberConcept::format((morphun::dialog::NumberConcept *)this, &__p);
LABEL_163:
    if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v85.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> v85 = __p;
    icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)v83);
    goto LABEL_166;
  }
  while (*(unsigned __int8 *)v27 == *v31)
  {
    unint64_t v27 = (const void **)((char *)v27 + 1);
    ++v31;
    if (!--v23) {
      goto LABEL_109;
    }
  }
LABEL_166:
  morphun::dialog::NumberConcept::postProcess(&__str, v22, &__p);
  morphun::dialog::SpeakableString::SpeakableString(a2, (long long *)&__p, (unsigned __int16 *)&v85);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((v5 & 0x80000000) == 0) {
      return;
    }
LABEL_172:
    operator delete(__str.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v85.__r_.__value_.__l.__data_);
  if (v5 < 0) {
    goto LABEL_172;
  }
}

void sub_1D2D00B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (v24 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

icu4cxx::NumberFormat *morphun::dialog::NumberConcept::createSimpleNumberFormat@<X0>(morphun::dialog::NumberConcept *this@<X0>, icu4cxx::NumberFormat *a2@<X8>)
{
  return morphun::dialog::NumberConcept::configure(this, a2);
}

void sub_1D2D00C18(_Unwind_Exception *a1)
{
  icu4cxx::NumberFormat::~NumberFormat(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::NumberConcept::postProcess(std::basic_string<char16_t> *__str@<X0>, std::allocator<char16_t> *a2@<X4>, std::basic_string<char16_t> *a3@<X8>)
{
  std::basic_string<char16_t>::size_type v4 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  int v5 = (char)v4;
  std::basic_string<char16_t>::size_type size = __str->__r_.__value_.__l.__size_;
  if ((v4 & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type v4 = __str->__r_.__value_.__l.__size_;
  }
  if (v4)
  {
    int v7 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
    if (v5 >= 0) {
      int v7 = __str;
    }
    if (v7->__r_.__value_.__s.__data_[0] == 46 && v4 != 1)
    {
      std::basic_string<char16_t>::basic_string(&v12, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, a2);
      std::basic_string<char16_t>::insert(&v12, (std::basic_string<char16_t>::size_type)"\v .", (const std::basic_string<char16_t>::value_type *)3, v9);
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
      std::basic_string<char16_t>::size_type v10 = v12.__r_.__value_.__r.__words[2];
LABEL_13:
      a3->__r_.__value_.__r.__words[2] = v10;
      return;
    }
  }
  if ((v5 & 0x80000000) == 0)
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    std::basic_string<char16_t>::size_type v10 = __str->__r_.__value_.__r.__words[2];
    goto LABEL_13;
  }
  int v11 = (const std::basic_string<char16_t>::value_type *)__str->__r_.__value_.__r.__words[0];

  std::basic_string<char16_t>::__init_copy_ctor_external(a3, v11, size);
}

void sub_1D2D00CFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::NumberConcept::asSpokenWords(morphun::dialog::NumberConcept *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  morphun::dialog::NumberConcept::createSimpleNumberFormat(a1, (icu4cxx::NumberFormat *)&v9);
  morphun::dialog::NumberConcept::format(a1, &__str);
  icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)&v9);
  morphun::dialog::NumberConcept::postProcess(&__str, v6, &v9);
  (*(void (**)(void **__return_ptr, morphun::dialog::NumberConcept *, uint64_t))(*(void *)a1 + 184))(__p, a1, a2);
  morphun::dialog::SpeakableString::SpeakableString(a3, (long long *)&v9, (unsigned __int16 *)__p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D00DF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::NumberConcept::getAsSpokenWords(morphun::dialog::NumberConcept *this@<X0>, uint64_t a2@<X8>)
{
  morphun::dialog::NumberConcept::createSimpleNumberFormat(this, (icu4cxx::NumberFormat *)&v7);
  morphun::dialog::NumberConcept::format(this, &__str);
  icu4cxx::NumberFormat::~NumberFormat((icu4cxx::NumberFormat *)&v7);
  morphun::dialog::NumberConcept::postProcess(&__str, v4, &v7);
  (*(void (**)(void **__return_ptr, morphun::dialog::NumberConcept *))(*(void *)this + 176))(__p, this);
  morphun::dialog::SpeakableString::SpeakableString(a2, (long long *)&v7, (unsigned __int16 *)__p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D00F14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::NumberConcept::asWords(morphun::dialog::NumberConcept *a1@<X0>, const void **a2@<X1>, void *a3@<X8>)
{
  std::operator+<char16_t>((uint64_t)__p, "%", a2);
  morphun::dialog::NumberConcept::format(a1, (uint64_t)__p, a3);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2D00FD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::NumberConcept::getAsWords(morphun::dialog::NumberConcept *this@<X0>, void *a2@<X8>)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v3 = 0;
  morphun::dialog::NumberConcept::format(this, (uint64_t)__p, a2);
  if (SHIBYTE(v3) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2D01038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::NumberConcept::getRegionLocale(morphun::dialog::NumberConcept *this)
{
  return (uint64_t)this + 152;
}

uint64_t morphun::dialog::NumberConcept::getLanguage(morphun::dialog::NumberConcept *this)
{
  return (uint64_t)this + 24;
}

BOOL morphun::dialog::NumberConcept::hasFraction(morphun::dialog::NumberConcept *this)
{
  return *((double *)this + 1) != (double)(uint64_t)*((double *)this + 1) && *((_DWORD *)this + 4) == 1;
}

BOOL morphun::dialog::NumberConcept::getIsNegative(morphun::dialog::NumberConcept *this)
{
  double v1 = *((double *)this + 1);
  if (*((_DWORD *)this + 4) != 1) {
    double v1 = (double)*((uint64_t *)this + 1);
  }
  return v1 < 0.0;
}

void morphun::dialog::NumberConcept::roundFloor(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::getMutableVersion(morphun::dialog::NumberConcept *this)
{
}

void sub_1D2D01110(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1093C409236E2FBLL);
  _Unwind_Resume(a1);
}

morphun::dialog::NumberConcept *morphun::dialog::NumberConcept::NumberConcept(morphun::dialog::NumberConcept *this, const morphun::dialog::NumberConcept *a2)
{
  *(void *)this = &off_1F2A08CA0;
  *(_OWORD *)((char *)this + 8) = *(_OWORD *)((char *)a2 + 8);
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 24), (const morphun::dialog::NumberConcept *)((char *)a2 + 24));
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 152), (const morphun::dialog::NumberConcept *)((char *)a2 + 152));
  *((void *)this + 36) = -1;
  *((void *)this + 37) = -1;
  *((void *)this + 35) = -1;
  *(_OWORD *)((char *)this + 280) = *(_OWORD *)((char *)a2 + 280);
  *((void *)this + 37) = *((void *)a2 + 37);
  return this;
}

void sub_1D2D011C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void morphun::dialog::NumberConcept::roundCeiling(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::roundHalfDown(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::roundHalfUp(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::roundDown(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::roundUp(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::grouping(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::maxIntegerDigits(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::minIntegerDigits(morphun::dialog::NumberConcept *this)
{
}

uint64_t morphun::dialog::NumberConcept::getMaximumFractionDigits(morphun::dialog::NumberConcept *this)
{
  int v1 = *((_DWORD *)this + 70);
  if (v1 < 0) {
    return 3;
  }
  else {
    return v1;
  }
}

uint64_t morphun::dialog::NumberConcept::maxFractionDigitsAboveOne(morphun::dialog::NumberConcept *this, uint64_t a2)
{
  double v4 = *((double *)this + 1);
  if (*((_DWORD *)this + 4) != 1) {
    double v4 = (double)*((uint64_t *)this + 1);
  }
  double v5 = fabs(v4);
  if (v5 > 1.0e-16)
  {
    double v6 = ceil(log10(v5));
    int v7 = (int)-v6;
    if (v6 >= 0.0) {
      int v7 = 0;
    }
    a2 = (v7 + a2);
  }
  char v8 = *(uint64_t (**)(morphun::dialog::NumberConcept *, uint64_t))(*(void *)this + 48);

  return v8(this, a2);
}

void morphun::dialog::NumberConcept::maxFractionDigits(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::minFractionDigits(morphun::dialog::NumberConcept *this)
{
}

void morphun::dialog::NumberConcept::getAbsolute(morphun::dialog::NumberConcept *this)
{
  if ((*(unsigned int (**)(morphun::dialog::NumberConcept *))(*(void *)this + 144))(this)) {
    operator new();
  }

  morphun::dialog::NumberConcept::getMutableVersion(this);
}

void sub_1D2D01508(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1093C409236E2FBLL);
  _Unwind_Resume(a1);
}

morphun::dialog::NumberConcept *morphun::dialog::NumberConcept::NumberConcept(morphun::dialog::NumberConcept *this, uint64_t a2, const morphun::util::ULocale *a3, const morphun::util::ULocale *a4)
{
  *(void *)this = &off_1F2A08CA0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 24), a3);
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 152), a4);
  *((void *)this + 36) = -1;
  *((void *)this + 37) = -1;
  *((void *)this + 35) = -1;
  *((void *)this + 1) = a2;
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D2D015B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

morphun::dialog::NumberConcept *morphun::dialog::NumberConcept::NumberConcept(morphun::dialog::NumberConcept *this, double a2, const morphun::util::ULocale *a3, const morphun::util::ULocale *a4)
{
  *(void *)this = &off_1F2A08CA0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 24), a3);
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 152), a4);
  *((void *)this + 36) = -1;
  *((void *)this + 37) = -1;
  *((void *)this + 35) = -1;
  *((double *)this + 1) = a2;
  *((_DWORD *)this + 4) = 1;
  return this;
}

void sub_1D2D0165C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void morphun::dialog::NumberConcept::toSpeakableString(morphun::dialog::NumberConcept *this)
{
}

void sub_1D2D016E4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

void morphun::dialog::NumberConcept::~NumberConcept(void **this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::NumberConcept::~NumberConcept(void **this, void **a2)
{
  uint64_t v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 7)) = a2[1];
  *(void **)((char *)this + *((void *)*this - 5)) = a2[2];
}

void morphun::dialog::NumberConcept::toString(const char **this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  (*((void (**)(uint64_t *__return_ptr))*this + 26))(&v18);
  std::operator+<char16_t>((uint64_t)&v20, L"NumberConcept{", &v19);
  std::basic_string<char16_t>::append(&v20, L",", 1uLL);
  std::basic_string<char16_t> v21 = v20;
  memset(&v20, 0, sizeof(v20));
  if (*((char *)this + 151) < 0)
  {
    double v4 = this[16];
    double v5 = this[17];
  }
  else
  {
    double v4 = (const char *)(this + 16);
    LODWORD(v5) = *((unsigned __int8 *)this + 151);
  }
  morphun::util::StringViewUtils::to_u16string(v4, (int32_t)v5, &v17);
  int v6 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
  int v7 = (void *)v17.__r_.__value_.__r.__words[0];
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v8 = &v17;
  }
  else {
    char v8 = (std::basic_string<char16_t> *)v17.__r_.__value_.__r.__words[0];
  }
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = v17.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v21, (const std::basic_string<char16_t>::value_type *)v8, size);
  std::basic_string<char16_t> v22 = v21;
  memset(&v21, 0, sizeof(v21));
  std::basic_string<char16_t>::append(&v22, L",", 1uLL);
  std::basic_string<char16_t> v23 = v22;
  memset(&v22, 0, sizeof(v22));
  if (*((char *)this + 279) < 0)
  {
    std::basic_string<char16_t>::size_type v10 = this[32];
    int v11 = this[33];
  }
  else
  {
    std::basic_string<char16_t>::size_type v10 = (const char *)(this + 32);
    LODWORD(v11) = *((unsigned __int8 *)this + 279);
  }
  morphun::util::StringViewUtils::to_u16string(v10, (int32_t)v11, &v16);
  int v12 = SHIBYTE(v16.__r_.__value_.__r.__words[2]);
  uint64_t v13 = (void *)v16.__r_.__value_.__r.__words[0];
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v14 = &v16;
  }
  else {
    uint64_t v14 = (std::basic_string<char16_t> *)v16.__r_.__value_.__r.__words[0];
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v15 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v15 = v16.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::append(&v23, (const std::basic_string<char16_t>::value_type *)v14, v15);
  std::basic_string<char16_t> v24 = v23;
  memset(&v23, 0, sizeof(v23));
  std::basic_string<char16_t>::append(&v24, (const std::basic_string<char16_t>::value_type *)"}", 1uLL);
  *a2 = v24;
  memset(&v24, 0, sizeof(v24));
  if (v12 < 0) {
    operator delete(v13);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v22.__r_.__value_.__l.__data_);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_25;
    }
  }
  else if ((v6 & 0x80000000) == 0)
  {
    goto LABEL_25;
  }
  operator delete(v7);
LABEL_25:
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D01A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (*(char *)(v42 - 73) < 0) {
    operator delete(*(void **)(v42 - 96));
  }
  if (v41 < 0) {
    operator delete(v39);
  }
  if (*(char *)(v42 - 105) < 0) {
    operator delete(*(void **)(v42 - 128));
  }
  if (a38 < 0) {
    operator delete(__p);
  }
  if (v40 < 0) {
    operator delete(v38);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

morphun::dialog::NumberConcept *morphun::dialog::NumberConcept::NumberConcept(morphun::dialog::NumberConcept *this, double a2, const morphun::util::ULocale *a3, const morphun::util::ULocale *a4, const morphun::util::ULocale *a5)
{
  uint64_t v8 = *(void *)a3;
  *(void *)this = *(void *)a3;
  *(void *)((char *)this + *(void *)(v8 - 56)) = *((void *)a3 + 1);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a3 + 2);
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 24), a4);
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 152), a5);
  *((void *)this + 36) = -1;
  *((void *)this + 37) = -1;
  *((void *)this + 35) = -1;
  *((double *)this + 1) = a2;
  *((_DWORD *)this + 4) = 1;
  return this;
}

void sub_1D2D01C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

morphun::dialog::NumberConcept *morphun::dialog::NumberConcept::NumberConcept(morphun::dialog::NumberConcept *this, uint64_t *a2, const morphun::util::ULocale *a3, const morphun::util::ULocale *a4, const morphun::util::ULocale *a5)
{
  uint64_t v8 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v8 - 56)) = a2[1];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[2];
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 24), a4);
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 152), a5);
  *((void *)this + 36) = -1;
  *((void *)this + 37) = -1;
  *((void *)this + 35) = -1;
  *((void *)this + 1) = a3;
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D2D01DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

morphun::dialog::NumberConcept *morphun::dialog::NumberConcept::NumberConcept(morphun::dialog::NumberConcept *this, const morphun::dialog::NumberConcept *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v5 - 56)) = *((void *)a2 + 1);
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = *((void *)a2 + 2);
  *(_OWORD *)((char *)this + 8) = *(_OWORD *)(a3 + 8);
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 24), (const morphun::util::ULocale *)(a3 + 24));
  morphun::util::ULocale::ULocale((morphun::dialog::NumberConcept *)((char *)this + 152), (const morphun::util::ULocale *)(a3 + 152));
  *((void *)this + 36) = -1;
  *((void *)this + 37) = -1;
  *((void *)this + 35) = -1;
  *(_OWORD *)((char *)this + 280) = *(_OWORD *)(a3 + 280);
  *((void *)this + 37) = *(void *)(a3 + 296);
  return this;
}

void sub_1D2D01F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double morphun::dialog::NumberConcept::copySettings(morphun::dialog::NumberConcept *this, const morphun::dialog::NumberConcept *a2)
{
  *(_OWORD *)((char *)this + 280) = *(_OWORD *)((char *)a2 + 280);
  double result = *((double *)a2 + 37);
  *((double *)this + 37) = result;
  return result;
}

void virtual thunk to'morphun::dialog::NumberConcept::~NumberConcept(morphun::dialog::NumberConcept *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::NumberConcept::~NumberConcept(void *a1)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::dialog::NumberConcept::longValue(_DWORD *a1)
{
  if (a1[2] == 1) {
    return (uint64_t)*(double *)a1;
  }
  else {
    return *(void *)a1;
  }
}

double morphun::dialog::NumberConcept::doubleValue(uint64_t a1)
{
  double result = *(double *)a1;
  if (*(_DWORD *)(a1 + 8) != 1) {
    return (double)*(uint64_t *)a1;
  }
  return result;
}

BOOL morphun::dialog::NumberConcept::isIntegral(morphun::dialog::NumberConcept *this)
{
  return *((_DWORD *)this + 4) == 0;
}

uint64_t morphun::dialog::NumberConcept::longValue(morphun::dialog::NumberConcept *this)
{
  if (*((_DWORD *)this + 4) == 1) {
    return (uint64_t)*((double *)this + 1);
  }
  else {
    return *((void *)this + 1);
  }
}

double morphun::dialog::NumberConcept::doubleValue(morphun::dialog::NumberConcept *this)
{
  double result = *((double *)this + 1);
  if (*((_DWORD *)this + 4) != 1) {
    return (double)*((uint64_t *)this + 1);
  }
  return result;
}

void morphun::dialog::NumberConcept::round(morphun::dialog::NumberConcept *this)
{
}

BOOL morphun::dialog::NumberConcept::hasFraction(uint64_t a1)
{
  return *(double *)a1 != (double)(uint64_t)*(double *)a1 && *(_DWORD *)(a1 + 8) == 1;
}

void virtual thunk to'morphun::dialog::NumberConcept::toString(morphun::dialog::NumberConcept *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
}

void virtual thunk to'morphun::dialog::NumberConcept::toSpeakableString(morphun::dialog::NumberConcept *this)
{
  morphun::dialog::NumberConcept::toSpeakableString((morphun::dialog::NumberConcept *)((char *)this
                                                                                     + *(void *)(*(void *)this - 48)));
}

BOOL morphun::dialog::NumberConcept::operator==(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3 == 1) {
    uint64_t v4 = (uint64_t)v2;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  double v6 = *(double *)(a2 + 8);
  uint64_t v7 = (uint64_t)v6;
  if (v5 != 1) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if (v4 != v7) {
    return 0;
  }
  if (v3 != 1) {
    double v2 = (double)*(uint64_t *)(a1 + 8);
  }
  if (v5 != 1) {
    double v6 = (double)*(uint64_t *)(a2 + 8);
  }
  return v2 == v6;
}

uint64_t morphun::dialog::NumberConcept::hashCode(morphun::dialog::NumberConcept *this)
{
  if (*((_DWORD *)this + 4) == 1) {
    return (uint64_t)*((double *)this + 1);
  }
  else {
    return *((void *)this + 1);
  }
}

uint64_t morphun::dialog::NumberConcept::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t)*(double *)(a2 + 8);
  if (*(_DWORD *)(a2 + 16) != 1) {
    return (int)*(void *)(a2 + 8);
  }
  return (int)v2;
}

BOOL morphun::dialog::NumberConcept::operator<(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  if (*(_DWORD *)(a1 + 16) != 1) {
    double v2 = (double)*(uint64_t *)(a1 + 8);
  }
  double v3 = *(double *)(a2 + 8);
  if (*(_DWORD *)(a2 + 16) != 1) {
    double v3 = (double)*(uint64_t *)(a2 + 8);
  }
  return v2 < v3;
}

uint64_t morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::getDisplayValue(void *a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16))
  {
    memset(&v112, 0, sizeof(v112));
    double v6 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[30]);
    uint64_t v7 = (void *)(a3 + 8);
    if ((void *)(a3 + 8) != v6) {
      std::basic_string<char16_t>::operator=(&v112, (const std::basic_string<char16_t> *)(v6 + 13));
    }
    memset(&v111, 0, sizeof(v111));
    uint64_t v8 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[31]);
    if (v7 != v8) {
      std::basic_string<char16_t>::operator=(&v111, (const std::basic_string<char16_t> *)(v8 + 13));
    }
    memset(&v110, 0, sizeof(v110));
    std::basic_string<char16_t> v9 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[32]);
    if (v7 != v9) {
      std::basic_string<char16_t>::operator=(&v110, (const std::basic_string<char16_t> *)(v9 + 13));
    }
    memset(&v109, 0, sizeof(v109));
    std::basic_string<char16_t>::size_type v10 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[33]);
    if (v7 != v10) {
      std::basic_string<char16_t>::operator=(&v109, (const std::basic_string<char16_t> *)(v10 + 13));
    }
    memset(&v108, 0, sizeof(v108));
    int v11 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[34]);
    if (v7 != v11) {
      std::basic_string<char16_t>::operator=(&v108, (const std::basic_string<char16_t> *)(v11 + 13));
    }
    memset(&v107, 0, sizeof(v107));
    int v12 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[35]);
    if (v7 != v12) {
      std::basic_string<char16_t>::operator=(&v107, (const std::basic_string<char16_t> *)(v12 + 13));
    }
    uint64_t v13 = (*(uint64_t (**)(void))(**(void **)(a2 + 8) + 24))(*(void *)(a2 + 8));
    if (*(char *)(v13 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__str, *(const std::basic_string<char16_t>::value_type **)v13, *(void *)(v13 + 8));
    }
    else
    {
      long long v14 = *(_OWORD *)v13;
      __str.__r_.__value_.__r.__words[2] = *(void *)(v13 + 16);
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v14;
    }
    uint64_t v15 = *(void *)(a2 + 8);
    uint64_t v16 = *(void *)(a2 + 16);
    if (v15 != v16)
    {
      while (1)
      {
        uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 40))(v15);
        std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&v113, v17);
        std::basic_string<char16_t>::size_type size = HIBYTE(v112.__r_.__value_.__r.__words[2]);
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type size = v112.__r_.__value_.__l.__size_;
        }
        if (size)
        {
          uint64_t v19 = a1[30];
          {
            goto LABEL_37;
          }
        }
        std::basic_string<char16_t>::size_type v20 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
        if ((v111.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v20 = v111.__r_.__value_.__l.__size_;
        }
        if (v20
        {
          goto LABEL_37;
        }
        std::basic_string<char16_t>::size_type v21 = HIBYTE(v110.__r_.__value_.__r.__words[2]);
        if ((v110.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v21 = v110.__r_.__value_.__l.__size_;
        }
        if (v21
        {
          goto LABEL_37;
        }
        std::basic_string<char16_t>::size_type v22 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
        if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v22 = v109.__r_.__value_.__l.__size_;
        }
        if (!v22) {
          break;
        }
        if (hasFeature) {
          break;
        }
        uint64_t v25 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_CONSTRUCT((morphun::grammar::synthesis::GrammemeConstants *)hasFeature);
        uint64_t v26 = *((unsigned __int8 *)v25 + 23);
        int v27 = (char)v26;
        if ((v26 & 0x80u) != 0) {
          uint64_t v26 = *((void *)v25 + 1);
        }
        std::basic_string<char16_t>::size_type v28 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
        if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v28 = v109.__r_.__value_.__l.__size_;
        }
        if (v26 == v28)
        {
          if (v26)
          {
            if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int64_t v29 = &v109;
            }
            else {
              int64_t v29 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
            }
            if (v27 >= 0) {
              unint64_t v30 = v25;
            }
            else {
              unint64_t v30 = *(morphun::grammar::synthesis::GrammemeConstants **)v25;
            }
            while ((unsigned __int16)v29->__r_.__value_.__s.__data_[0] == *(unsigned __int16 *)v30)
            {
              unint64_t v30 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v30 + 2);
              int64_t v29 = (std::basic_string<char16_t> *)((char *)v29 + 2);
              if (!--v26) {
                goto LABEL_53;
              }
            }
          }
          else
          {
LABEL_53:
            uint64_t v25 = (morphun::grammar::synthesis::GrammemeConstants *)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)&v113, a1[33]);
            if (&v113.__r_.__value_.__r.__words[1] == (std::basic_string<char16_t>::size_type *)v25) {
              break;
            }
          }
        }
        uint64_t v31 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE(v25);
        uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
        int v33 = (char)v32;
        if ((v32 & 0x80u) != 0) {
          uint64_t v32 = *(void *)(v31 + 8);
        }
        std::basic_string<char16_t>::size_type v34 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
        if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v34 = v109.__r_.__value_.__l.__size_;
        }
        if (v32 == v34)
        {
          if (v32)
          {
            if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              size_t v35 = &v109;
            }
            else {
              size_t v35 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
            }
            if (v33 >= 0) {
              int v36 = (unsigned __int16 *)v31;
            }
            else {
              int v36 = *(unsigned __int16 **)v31;
            }
            while ((unsigned __int16)v35->__r_.__value_.__s.__data_[0] == *v36)
            {
              ++v36;
              size_t v35 = (std::basic_string<char16_t> *)((char *)v35 + 2);
              if (!--v32) {
                goto LABEL_68;
              }
            }
            goto LABEL_37;
          }
LABEL_68:
          if (&v113.__r_.__value_.__r.__words[1] == std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)&v113, a1[33]))break; {
        }
          }
LABEL_37:
        std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v113.__r_.__value_.__l.__size_);
        v15 += 56;
        if (v15 == v16) {
          goto LABEL_70;
        }
      }
      std::basic_string<char16_t> v24 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v15 + 24))(v15);
      std::basic_string<char16_t>::operator=(&__str, v24);
      goto LABEL_37;
    }
LABEL_70:
    memset(&__p, 0, sizeof(__p));
    std::basic_string<char16_t>::size_type v37 = HIBYTE(v108.__r_.__value_.__r.__words[2]);
    if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v37 = v108.__r_.__value_.__l.__size_;
    }
    if (!v37)
    {
      std::basic_string<char16_t>::size_type v38 = HIBYTE(v107.__r_.__value_.__r.__words[2]);
      if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v38 = v107.__r_.__value_.__l.__size_;
      }
      if (!v38)
      {
        uint64_t v52 = a1[2];
        int v53 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? &__str
            : (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        uint64_t v54 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? HIBYTE(__str.__r_.__value_.__r.__words[2])
            : __str.__r_.__value_.__l.__size_;
        v113.__r_.__value_.__r.__words[0] = 0;
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v52, (uint64_t)&v113, (const UChar *)v53, v54))
        {
          morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::performInflection(&v104, a1, (unsigned __int8 *)&__str, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110, (unsigned __int16 *)&v109);
        }
        else
        {
          uint64_t v69 = a1[36];
          if (!v69
            || (v70 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v69 + 24))(v69, &__str), (uint64_t v71 = v70) == 0))
          {
            exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(exception);
          }
          memset(&v104, 0, sizeof(v104));
          long long v72 = *(_OWORD *)(v70 + 8);
          uint64_t v73 = *(void *)(v70 + 16);
          uint64_t v74 = v73 ? *(void *)(v73 + 80) : 0;
          while (1)
          {
            uint64_t v103 = *((void *)&v72 + 1);
            uint64_t v81 = v72;
            if (v74 == (void)v72) {
              break;
            }
            if (*(unsigned char *)(v72 + 64))
            {
              morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::performInflection(&v113, a1, (unsigned __int8 *)(v72 + 16), (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110, (unsigned __int16 *)&v109);
              int v82 = SHIBYTE(v113.__r_.__value_.__r.__words[2]);
              uint64_t v83 = (void *)v113.__r_.__value_.__r.__words[0];
              if ((v113.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v84 = &v113;
              }
              else {
                uint64_t v84 = (std::basic_string<char16_t> *)v113.__r_.__value_.__r.__words[0];
              }
              if ((v113.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v85 = HIBYTE(v113.__r_.__value_.__r.__words[2]);
              }
              else {
                std::basic_string<char16_t>::size_type v85 = v113.__r_.__value_.__l.__size_;
              }
              std::basic_string<char16_t>::append(&v104, (const std::basic_string<char16_t>::value_type *)v84, v85);
              if (v82 < 0) {
                operator delete(v83);
              }
            }
            else
            {
              int v86 = *(char *)(v72 + 39);
              if (v86 >= 0) {
                long long v87 = (const std::basic_string<char16_t>::value_type *)(v72 + 16);
              }
              else {
                long long v87 = *(const std::basic_string<char16_t>::value_type **)(v72 + 16);
              }
              if (v86 >= 0) {
                std::basic_string<char16_t>::size_type v88 = *(unsigned __int8 *)(v72 + 39);
              }
              else {
                std::basic_string<char16_t>::size_type v88 = *(void *)(v72 + 24);
              }
              std::basic_string<char16_t>::append(&v104, v87, v88);
            }
            npc<morphun::Token const>(v81);
            *((void *)&v72 + 1) = v103;
            *(void *)&long long v72 = *(void *)(v81 + 80);
          }
          uint64_t v55 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(uint64_t))(*(void *)v71 + 16))(v71);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> __p = v104;
        std::basic_string<char16_t>::size_type v89 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
        if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v89 = v104.__r_.__value_.__l.__size_;
        }
        if (v89)
        {
          uint64_t v90 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE(v55);
          uint64_t v91 = *(unsigned __int8 *)(v90 + 23);
          int v92 = (char)v91;
          if ((v91 & 0x80u) != 0) {
            uint64_t v91 = *(void *)(v90 + 8);
          }
          std::basic_string<char16_t>::size_type v93 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
          if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v93 = v109.__r_.__value_.__l.__size_;
          }
          if (v91 == v93)
          {
            if (v91)
            {
              uint64_t v94 = &v109;
              if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                uint64_t v94 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
              }
              if (v92 >= 0) {
                BOOL v95 = (unsigned __int16 *)v90;
              }
              else {
                BOOL v95 = *(unsigned __int16 **)v90;
              }
              while ((unsigned __int16)v94->__r_.__value_.__s.__data_[0] == *v95)
              {
                ++v95;
                uint64_t v94 = (std::basic_string<char16_t> *)((char *)v94 + 2);
                if (!--v91) {
                  goto LABEL_216;
                }
              }
            }
            else
            {
LABEL_216:
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                p_str = &__str;
              }
              else {
                p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
              }
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v97 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              }
              else {
                std::basic_string<char16_t>::size_type v97 = __str.__r_.__value_.__l.__size_;
              }
              uint64_t v98 = morphun::util::StringViewUtils::trim((uint64_t)p_str, v97);
              if (!v99) {
                goto LABEL_230;
              }
              uint64_t v100 = (_WORD *)v98;
              while (*v100 != 32)
              {
                ++v100;
                if (!--v99) {
                  goto LABEL_230;
                }
              }
              if ((_WORD *)((char *)v100 - v98) == (_WORD *)-2)
              {
LABEL_230:
                morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::lookupDefiniteArticle(&v113, (uint64_t)&__p);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__p.__r_.__value_.__l.__data_);
                }
                std::basic_string<char16_t> __p = v113;
              }
            }
          }
          operator new();
        }
      }
    }
    memset(&v113, 0, sizeof(v113));
    std::basic_string<char16_t>::operator=(&v113, &__str);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v39 = &__str;
    }
    else {
      unint64_t v39 = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v40 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v40 = __str.__r_.__value_.__l.__size_;
    }
    uint64_t v41 = morphun::util::StringViewUtils::trim((uint64_t)v39, v40);
    if (!v42) {
      goto LABEL_88;
    }
    int v43 = (_WORD *)v41;
    while (*v43 != 32)
    {
      ++v43;
      if (!--v42) {
        goto LABEL_88;
      }
    }
    if ((_WORD *)((char *)v43 - v41) == (_WORD *)-2)
    {
LABEL_88:
      uint64_t v41 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)v41);
      uint64_t v44 = *(unsigned __int8 *)(v41 + 23);
      int v45 = (char)v44;
      if ((v44 & 0x80u) != 0) {
        uint64_t v44 = *(void *)(v41 + 8);
      }
      std::basic_string<char16_t>::size_type v46 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
      if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v46 = v109.__r_.__value_.__l.__size_;
      }
      if (v44 == v46)
      {
        if (v44)
        {
          std::basic_string<char16_t>::size_type v47 = &v109;
          if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v47 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
          }
          if (v45 >= 0) {
            uint64_t v48 = (unsigned __int16 *)v41;
          }
          else {
            uint64_t v48 = *(unsigned __int16 **)v41;
          }
          while ((unsigned __int16)v47->__r_.__value_.__s.__data_[0] == *v48)
          {
            ++v48;
            std::basic_string<char16_t>::size_type v47 = (std::basic_string<char16_t> *)((char *)v47 + 2);
            if (!--v44) {
              goto LABEL_101;
            }
          }
        }
        else
        {
LABEL_101:
          morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::lookupDefiniteArticle(&v104, (uint64_t)&__str);
          if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v113.__r_.__value_.__l.__data_);
          }
          std::basic_string<char16_t> v113 = v104;
        }
      }
    }
    std::basic_string<char16_t>::size_type v49 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
    if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v49 = v112.__r_.__value_.__l.__size_;
    }
    if (!v49) {
      goto LABEL_236;
    }
    if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0)
    {
      if (v113.__r_.__value_.__l.__size_ != 2) {
        goto LABEL_236;
      }
      size_t v50 = (std::basic_string<char16_t> *)v113.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (HIBYTE(v113.__r_.__value_.__r.__words[2]) != 2) {
        goto LABEL_236;
      }
      size_t v50 = &v113;
    }
    if (v50->__r_.__value_.__s.__data_[0] != 1571 || v50->__r_.__value_.__s.__data_[1] != 1582)
    {
      if ((*((unsigned char *)&v113.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        if (v113.__r_.__value_.__l.__size_ != 2) {
          goto LABEL_236;
        }
        int v51 = (std::basic_string<char16_t> *)v113.__r_.__value_.__r.__words[0];
      }
      else
      {
        if (HIBYTE(v113.__r_.__value_.__r.__words[2]) != 2) {
          goto LABEL_236;
        }
        int v51 = &v113;
      }
      if (v51->__r_.__value_.__s.__data_[0] != 1571 || v51->__r_.__value_.__s.__data_[1] != 1576) {
LABEL_236:
      }
        operator new();
    }
    uint64_t v56 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v41);
    uint64_t v57 = *(unsigned __int8 *)(v56 + 23);
    int v58 = (char)v57;
    if ((v57 & 0x80u) != 0) {
      uint64_t v57 = *(void *)(v56 + 8);
    }
    std::basic_string<char16_t>::size_type v59 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
    if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v59 = v112.__r_.__value_.__l.__size_;
    }
    if (v57 == v59)
    {
      if (!v57)
      {
        int v62 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECE8EA;
        goto LABEL_235;
      }
      int v60 = &v112;
      if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v60 = (std::basic_string<char16_t> *)v112.__r_.__value_.__r.__words[0];
      }
      if (v58 >= 0) {
        uint64_t v61 = (unsigned __int16 *)v56;
      }
      else {
        uint64_t v61 = *(unsigned __int16 **)v56;
      }
      int v62 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECE8EA;
      while ((unsigned __int16)v60->__r_.__value_.__s.__data_[0] == *v61)
      {
        ++v61;
        int v60 = (std::basic_string<char16_t> *)((char *)v60 + 2);
        if (!--v57) {
          goto LABEL_235;
        }
      }
    }
    uint64_t v63 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)v56);
    uint64_t v64 = *(unsigned __int8 *)(v63 + 23);
    int v65 = (char)v64;
    if ((v64 & 0x80u) != 0) {
      uint64_t v64 = *(void *)(v63 + 8);
    }
    std::basic_string<char16_t>::size_type v66 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
    if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v66 = v112.__r_.__value_.__l.__size_;
    }
    if (v64 == v66)
    {
      if (!v64)
      {
        int v62 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECE8EE;
        goto LABEL_235;
      }
      uint64_t v67 = &v112;
      if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v67 = (std::basic_string<char16_t> *)v112.__r_.__value_.__r.__words[0];
      }
      if (v65 >= 0) {
        int v68 = (unsigned __int16 *)v63;
      }
      else {
        int v68 = *(unsigned __int16 **)v63;
      }
      int v62 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECE8EE;
      while ((unsigned __int16)v67->__r_.__value_.__s.__data_[0] == *v68)
      {
        ++v68;
        uint64_t v67 = (std::basic_string<char16_t> *)((char *)v67 + 2);
        if (!--v64) {
          goto LABEL_235;
        }
      }
    }
    uint64_t v75 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v63);
    uint64_t v76 = *(unsigned __int8 *)(v75 + 23);
    int v77 = (char)v76;
    if ((v76 & 0x80u) != 0) {
      uint64_t v76 = *(void *)(v75 + 8);
    }
    std::basic_string<char16_t>::size_type v78 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
    if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v78 = v112.__r_.__value_.__l.__size_;
    }
    if (v76 != v78) {
      goto LABEL_236;
    }
    if (v76)
    {
      std::basic_string<char16_t> v79 = &v112;
      if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t> v79 = (std::basic_string<char16_t> *)v112.__r_.__value_.__r.__words[0];
      }
      if (v77 >= 0) {
        int v80 = (unsigned __int16 *)v75;
      }
      else {
        int v80 = *(unsigned __int16 **)v75;
      }
      int v62 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECE8F2;
      while ((unsigned __int16)v79->__r_.__value_.__s.__data_[0] == *v80)
      {
        ++v80;
        std::basic_string<char16_t> v79 = (std::basic_string<char16_t> *)((char *)v79 + 2);
        if (!--v76) {
          goto LABEL_235;
        }
      }
      goto LABEL_236;
    }
    int v62 = (const std::basic_string<char16_t>::value_type *)&unk_1D2ECE8F2;
LABEL_235:
    std::basic_string<char16_t>::append(&v113, v62, 1uLL);
    goto LABEL_236;
  }
  return 0;
}

void sub_1D2D02DD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a43 < 0) {
    operator delete(a38);
  }
  if (a49 < 0) {
    operator delete(a44);
  }
  if (a55 < 0) {
    operator delete(a50);
  }
  if (*(char *)(v55 - 137) < 0) {
    operator delete(*(void **)(v55 - 160));
  }
  if (*(char *)(v55 - 113) < 0) {
    operator delete(*(void **)(v55 - 136));
  }
  _Unwind_Resume(exception_object);
}

BOOL morphun::grammar::synthesis::anonymous namespace'::hasFeature(unsigned __int16 *a1, uint64_t a2, uint64_t a3)
{
  int v5 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a2, a3);
  if ((void *)(a2 + 8) == v5) {
    return 0;
  }
  int v6 = *((char *)v5 + 127);
  uint64_t v7 = v5[14];
  if (v6 >= 0) {
    uint64_t v7 = *((unsigned __int8 *)v5 + 127);
  }
  uint64_t v8 = *((unsigned __int8 *)a1 + 23);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *((void *)a1 + 1);
  }
  if (v7 != v8) {
    return 0;
  }
  if (!v7) {
    return 1;
  }
  if (v9 >= 0) {
    std::basic_string<char16_t>::size_type v10 = a1;
  }
  else {
    std::basic_string<char16_t>::size_type v10 = *(unsigned __int16 **)a1;
  }
  if (v6 >= 0) {
    int v11 = (unsigned __int16 *)(v5 + 13);
  }
  else {
    int v11 = (unsigned __int16 *)v5[13];
  }
  uint64_t v12 = v7 - 1;
  do
  {
    int v14 = *v11++;
    int v13 = v14;
    int v16 = *v10++;
    int v15 = v16;
    BOOL v18 = v12-- != 0;
    BOOL result = v15 == v13;
  }
  while (v15 == v13 && v18);
  return result;
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::lookupDefiniteArticle(std::basic_string<char16_t> *a1, uint64_t a2)
{
  uint64_t v4 = (morphun::lang::StringFilterUtil *)morphun::util::StringUtils::trim(a2, __p);
  char v5 = HIBYTE(v19);
  if ((SHIBYTE(v19) & 0x80000000) == 0)
  {
    if (HIBYTE(v19))
    {
      int v6 = __p;
      unint64_t v7 = HIBYTE(v19);
      goto LABEL_6;
    }
LABEL_19:
    if (*(char *)(a2 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      a1->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
    }
    goto LABEL_24;
  }
  unint64_t v7 = (unint64_t)__p[1];
  if (!__p[1]) {
    goto LABEL_19;
  }
  int v6 = (void **)__p[0];
LABEL_6:
  if (v7 >= 2)
  {
    uint64_t v8 = 0;
    do
    {
      int v9 = *(unsigned __int16 *)((char *)v6 + v8 * 2);
      int v10 = (unsigned __int16)word_1D2ECF8DE[v8];
    }
    while (v10 == v9 && v8++ != 1);
    if (v10 == v9)
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
      a1->__r_.__value_.__r.__words[2] = v19;
      __p[1] = 0;
      std::basic_string<char16_t>::size_type v19 = 0;
      __p[0] = 0;
      return;
    }
  }
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v12 = (void *)morphun::lang::StringFilterUtil::ARABIC_SCRIPT(v4);
  int v13 = __p;
  if (v5 < 0) {
    int v13 = (void **)__p[0];
  }
  if (MEMORY[0x1D942C150](*v12, *(unsigned __int16 *)v13))
  {
    HIBYTE(v17) = 2;
    LODWORD(v15) = 105121319;
    WORD2(v15) = 0;
  }
  else
  {
    HIBYTE(v17) = 4;
    uint64_t v15 = 0xA0064006440627;
    LOWORD(v16) = 0;
  }
  std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a1, (const void **)&v15, (const void **)__p);
LABEL_24:
  if (v5 < 0)
  {
    int v14 = __p[0];
    operator delete(v14);
  }
}

void sub_1D2D031E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p)
{
  if (v12 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::performInflection(std::basic_string<char16_t> *a1, void *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int16 *a7)
{
  int v11 = (void **)a3;
  uint64_t v14 = a2[2];
  uint64_t v63 = 0;
  uint64_t v15 = *((void *)a3 + 1);
  if ((a3[23] & 0x80u) == 0)
  {
    uint64_t v16 = a3[23];
  }
  else
  {
    a3 = *(unsigned __int8 **)a3;
    uint64_t v16 = v15;
  }
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v14, (uint64_t)&v63, (const UChar *)a3, v16);
  uint64_t v18 = v63;
  uint64_t v20 = a2[37];
  uint64_t v19 = a2[38];
  memset(&v62, 0, sizeof(v62));
  uint64_t v21 = *(unsigned __int8 *)(a5 + 23);
  if ((v21 & 0x80u) != 0) {
    uint64_t v21 = *(void *)(a5 + 8);
  }
  if (v21)
  {
    std::basic_string<char16_t>::size_type v22 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v62, (long long *)a5);
  }
  else
  {
    std::basic_string<char16_t> v23 = (long long *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(CombinedBinaryType);
    std::basic_string<char16_t>::size_type v22 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v62, v23);
  }
  std::basic_string<char16_t>::size_type v24 = v22;
  v62.__r_.__value_.__l.__size_ = v22;
  uint64_t v25 = *(unsigned __int8 *)(a6 + 23);
  int v26 = (char)v25;
  if ((v25 & 0x80u) != 0) {
    uint64_t v25 = *(void *)(a6 + 8);
  }
  if (v25)
  {
    if (v22 >= v62.__r_.__value_.__r.__words[2])
    {
      std::basic_string<char16_t>::size_type v22 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v62, (long long *)a6);
    }
    else
    {
      if (v26 < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v22, *(const std::basic_string<char16_t>::value_type **)a6, *(void *)(a6 + 8));
      }
      else
      {
        long long v27 = *(_OWORD *)a6;
        *(void *)(v22 + 16) = *(void *)(a6 + 16);
        *(_OWORD *)std::basic_string<char16_t>::size_type v22 = v27;
      }
      std::basic_string<char16_t>::size_type v22 = v24 + 24;
    }
    v62.__r_.__value_.__l.__size_ = v22;
  }
  uint64_t v28 = *((unsigned __int8 *)a7 + 23);
  if ((v28 & 0x80u) != 0) {
    uint64_t v28 = *((void *)a7 + 1);
  }
  if (v28)
  {
    std::basic_string<char16_t>::size_type v22 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_CONSTRUCT((morphun::grammar::synthesis::GrammemeConstants *)v22);
    int v29 = *(char *)(v22 + 23);
    uint64_t v30 = *(void *)(v22 + 8);
    if (v29 >= 0) {
      uint64_t v30 = *(unsigned __int8 *)(v22 + 23);
    }
    uint64_t v31 = *((unsigned __int8 *)a7 + 23);
    int v32 = (char)v31;
    if ((v31 & 0x80u) != 0) {
      uint64_t v31 = *((void *)a7 + 1);
    }
    if (v30 == v31)
    {
      if (v30)
      {
        int v33 = *(unsigned __int16 **)a7;
        if (v32 >= 0) {
          int v33 = a7;
        }
        if (v29 >= 0) {
          std::basic_string<char16_t>::size_type v34 = (unsigned __int16 *)v22;
        }
        else {
          std::basic_string<char16_t>::size_type v34 = *(unsigned __int16 **)v22;
        }
        while (*v33 == *v34)
        {
          ++v34;
          ++v33;
          if (!--v30) {
            goto LABEL_35;
          }
        }
      }
      else
      {
LABEL_35:
        std::basic_string<char16_t>::size_type size = (_OWORD *)v62.__r_.__value_.__l.__size_;
        if (v62.__r_.__value_.__l.__size_ >= v62.__r_.__value_.__r.__words[2])
        {
          std::basic_string<char16_t>::size_type v22 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v62, (long long *)a7);
        }
        else
        {
          if (v32 < 0)
          {
            std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v62.__r_.__value_.__l.__size_, *(const std::basic_string<char16_t>::value_type **)a7, *((void *)a7 + 1));
          }
          else
          {
            long long v36 = *(_OWORD *)a7;
            *(void *)(v62.__r_.__value_.__l.__size_ + 16) = *((void *)a7 + 2);
            *std::basic_string<char16_t>::size_type size = v36;
          }
          std::basic_string<char16_t>::size_type v22 = (std::basic_string<char16_t>::size_type)size + 24;
        }
        v62.__r_.__value_.__l.__size_ = v22;
      }
    }
  }
  uint64_t v37 = v20 & v18;
  uint64_t v38 = *(unsigned __int8 *)(a4 + 23);
  int v39 = (char)v38;
  if ((v38 & 0x80u) != 0) {
    uint64_t v38 = *(void *)(a4 + 8);
  }
  if (v38)
  {
    std::basic_string<char16_t>::size_type v40 = (_OWORD *)v62.__r_.__value_.__l.__size_;
    if (v62.__r_.__value_.__l.__size_ >= v62.__r_.__value_.__r.__words[2])
    {
      std::basic_string<char16_t>::size_type v45 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v62, (long long *)a4);
    }
    else
    {
      if (v39 < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v62.__r_.__value_.__l.__size_, *(const std::basic_string<char16_t>::value_type **)a4, *(void *)(a4 + 8));
      }
      else
      {
        long long v41 = *(_OWORD *)a4;
        *(void *)(v62.__r_.__value_.__l.__size_ + 16) = *(void *)(a4 + 16);
        *std::basic_string<char16_t>::size_type v40 = v41;
      }
      std::basic_string<char16_t>::size_type v45 = (std::basic_string<char16_t>::size_type)v40 + 24;
    }
  }
  else
  {
    if (v37 == v19) {
      goto LABEL_59;
    }
    uint64_t v42 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v22);
    int v43 = (_OWORD *)v62.__r_.__value_.__l.__size_;
    if (v62.__r_.__value_.__l.__size_ >= v62.__r_.__value_.__r.__words[2])
    {
      std::basic_string<char16_t>::size_type v45 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v62, (long long *)v42);
    }
    else
    {
      if (*(char *)(v42 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v62.__r_.__value_.__l.__size_, *(const std::basic_string<char16_t>::value_type **)v42, *(void *)(v42 + 8));
      }
      else
      {
        long long v44 = *(_OWORD *)v42;
        *(void *)(v62.__r_.__value_.__l.__size_ + 16) = *(void *)(v42 + 16);
        *int v43 = v44;
      }
      std::basic_string<char16_t>::size_type v45 = (std::basic_string<char16_t>::size_type)v43 + 24;
    }
  }
  v62.__r_.__value_.__l.__size_ = v45;
LABEL_59:
  {
    if (v57) {
  }
    }
  uint64_t v46 = (uint64_t)(a2 + 1);
  while (1)
  {
    int v49 = *((char *)v11 + 23);
    size_t v50 = v49 >= 0 ? v11 : (void **)*v11;
    unint64_t v51 = v49 >= 0 ? *((unsigned __int8 *)v11 + 23) : (unint64_t)v11[1];
    memset(&v58, 0, sizeof(v58));
    morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, v46, v50, v51, &v62, &v58);
    uint64_t v64 = &v58;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
    int v52 = v61;
    if (v61) {
      break;
    }
    if (v37 == v19)
    {
      if (*((char *)v11 + 23) < 0) {
        goto LABEL_77;
      }
LABEL_75:
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)v11;
      a1->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v11[2];
      goto LABEL_78;
    }
    int v53 = (std::basic_string<char16_t> *)(v62.__r_.__value_.__l.__size_ - 24);
    if (*(char *)(v62.__r_.__value_.__l.__size_ - 1) < 0)
    {
      uint64_t v55 = *(unsigned __int16 **)(v62.__r_.__value_.__l.__size_ - 24);
      unint64_t v54 = *(void *)(v62.__r_.__value_.__l.__size_ - 16);
    }
    else
    {
      unint64_t v54 = *(unsigned __int8 *)(v62.__r_.__value_.__l.__size_ - 1);
      uint64_t v55 = (unsigned __int16 *)(v62.__r_.__value_.__l.__size_ - 24);
    }
    uint64_t v56 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(v47, v55, v54);
    if ((void *)v48 == v56)
    {
      if (*((char *)v11 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(a1, (const std::basic_string<char16_t>::value_type *)*v11, (std::basic_string<char16_t>::size_type)v11[1]);
      }
      else
      {
        *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)v11;
        a1->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v11[2];
      }
      goto LABEL_84;
    }
    std::basic_string<char16_t>::__assign_external(v53, (const std::basic_string<char16_t>::value_type *)v56[6], v56[7]);
  }
  int v11 = __p;
  if ((v60 & 0x80000000) == 0) {
    goto LABEL_75;
  }
LABEL_77:
  std::basic_string<char16_t>::__init_copy_ctor_external(a1, (const std::basic_string<char16_t>::value_type *)*v11, (std::basic_string<char16_t>::size_type)v11[1]);
LABEL_78:
  if (v52 && v60 < 0) {
    operator delete(__p[0]);
  }
LABEL_84:
  __p[0] = &v62;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
}

void sub_1D2D03664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  std::basic_string<char16_t> __p = &a19;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::anonymous namespace'::generateCaseConstraintFallbackMap(morphun::grammar::synthesis::_anonymous_namespace_ *this)
{
}

uint64_t *std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::__emplace_unique_key_args<std::u16string_view,std::pair<std::u16string_view const,std::u16string_view>>(uint64_t **a1, unsigned __int16 *a2, unint64_t a3, _OWORD *a4)
{
  BOOL result = std::__tree<std::u16string_view>::__find_equal<std::u16string_view>((uint64_t)a1, &v11, a2, a3);
  if (!*result)
  {
    unint64_t v7 = (uint64_t **)result;
    uint64_t v8 = (uint64_t *)operator new(0x40uLL);
    long long v9 = a4[1];
    *((_OWORD *)v8 + 2) = *a4;
    *((_OWORD *)v8 + 3) = v9;
    uint64_t v10 = v11;
    return std::__tree<std::u16string_view>::__insert_node_at(a1, v10, v7, v8);
  }
  return result;
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction::~ArGrammarSynthesizer_ArDisplayFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_ArDisplayFunction *this)
{
  *(void *)this = &unk_1F2A0C458;
  uint64_t v2 = *((void *)this + 36);
  *((void *)this + 36) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C458;
  uint64_t v2 = *((void *)this + 36);
  *((void *)this + 36) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

void sub_1D2D039FC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenizer::StreamingTokenizer::close(std::vector<int> *this, std::vector<int>::size_type a2)
{
  this[4].__begin_ = 0;
  this[4].__end_ = 0;
  if ((int *)((char *)this[19].__end_cap_.__value_ - (char *)this[19].__begin_) >= (int *)0x41)
  {
    std::vector<int>::resize(this + 19, a2);
    std::vector<int>::shrink_to_fit(this + 19);
    this[19].__end_ = this[19].__begin_;
  }
  std::vector<int>::pointer begin = this[21].__begin_;
  if (begin)
  {
    std::basic_string<char16_t> __p = 0;
    char v5 = 0;
    uint64_t v6 = 0;
    (*(void (**)(std::vector<int>::pointer, void, void **))(*(void *)begin + 56))(begin, 0, &__p);
    if (__p)
    {
      char v5 = __p;
      operator delete(__p);
    }
  }
}

void sub_1D2D03AB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<int>::resize(std::vector<int> *this, std::vector<int>::size_type __sz)
{
  std::vector<int>::pointer begin = this->__begin_;
  std::vector<int>::pointer end = this->__end_;
  uint64_t v5 = (char *)end - (char *)this->__begin_;
  if ((unint64_t)v5 > 0x3F)
  {
    if (v5 == 64) {
      return;
    }
    uint64_t v20 = begin + 16;
    goto LABEL_14;
  }
  unint64_t v6 = 16 - (v5 >> 2);
  value = this->__end_cap_.__value_;
  if (v6 <= value - end)
  {
    bzero(this->__end_, 4 * v6);
    uint64_t v20 = &end[v6];
LABEL_14:
    this->__end_ = v20;
    return;
  }
  uint64_t v8 = v5 >> 2;
  uint64_t v9 = (char *)value - (char *)begin;
  uint64_t v10 = v9 >> 1;
  if ((unint64_t)(v9 >> 1) <= 0x10) {
    uint64_t v10 = 16;
  }
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v11 = v10;
  }
  char v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v11);
  std::vector<int>::pointer v13 = this->__begin_;
  std::vector<int>::pointer v14 = this->__end_;
  uint64_t v15 = &v12[4 * v8];
  uint64_t v17 = (int *)&v12[4 * v16];
  bzero(v15, 4 * v6);
  uint64_t v18 = (int *)&v15[4 * v6];
  while (v14 != v13)
  {
    int v19 = *--v14;
    *((_DWORD *)v15 - 1) = v19;
    v15 -= 4;
  }
  this->__begin_ = (std::vector<int>::pointer)v15;
  this->__end_ = v18;
  this->__end_cap_.__value_ = v17;
  if (v13)
  {
    operator delete(v13);
  }
}

uint64_t morphun::analysis::tokenizer::StreamingTokenizer::reset(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  *((void *)this + 12) = *((void *)this + 13);
  *((void *)this + 13) = 0;
  *((void *)this + 63) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>((uint64_t)this);
  if (*(void *)(npc<UText>(*((void *)this + 12)) + 56))
  {
    *((void *)this + 66) = morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenizer;
    *((void *)this + 67) = 0;
    *((_DWORD *)this + 136) = 0;
    *((_OWORD *)this + 32) = 0u;
    UErrorCode status = U_ZERO_ERROR;
    int64_t v2 = utext_nativeLength(*((UText **)this + 12));
    int32_t v3 = utext_extract(*((UText **)this + 12), 0, v2, 0, 0, &status);
    UErrorCode status = U_ZERO_ERROR;
    uint64_t v4 = (UChar *)((char *)this + 120);
    std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)this + 5, v3, 0);
    if (*((char *)this + 143) < 0) {
      uint64_t v4 = *(UChar **)v4;
    }
    utext_extract(*((UText **)this + 12), 0, v2, v4, v3, &status);
    UErrorCode v5 = status;
    if (status >= U_ILLEGAL_ARGUMENT_ERROR)
    {
      exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::ICUException::ICUException(exception, v5);
    }
  }
  else
  {
    *((void *)this + 66) = morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenChain;
    *((void *)this + 67) = 0;
    if (*((char *)this + 143) < 0)
    {
      **((_WORD **)this + 15) = 0;
      *((void *)this + 16) = 0;
    }
    else
    {
      *((_WORD *)this + 60) = 0;
      *((unsigned char *)this + 143) = 0;
    }
    uint64_t v7 = *(void *)(npc<UText>(*((void *)this + 12)) + 72);
    uint64_t v8 = npc<morphun::Chunk const>(v7);
    uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 48))(v8);
    *((void *)this + 64) = v9;
    if (v9)
    {
      uint64_t v10 = v9;
      {
        *((void *)this + 64) = v10[10];
      }
    }
    unint64_t v11 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
    *((void *)this + 65) = v11;
    if (v11)
    {
      char v12 = v11;
      {
        *((void *)this + 65) = v12[9];
      }
    }
    uint64_t v13 = npc<morphun::Token>(*((void *)this + 64));
    *((_DWORD *)this + 136) = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 24))(v13);
  }
  uint64_t v14 = npc<morphun::tokenizer::TokenExtractorIterator>(*((void *)this + 19));
  uint64_t v15 = (char *)this + 120;
  if (*((char *)this + 143) < 0)
  {
    uint64_t v17 = (char *)*((void *)this + 15);
    uint64_t v16 = *((void *)this + 16);
  }
  else
  {
    uint64_t v16 = *((unsigned __int8 *)this + 143);
    uint64_t v17 = (char *)this + 120;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)v14 + 32))(v14, v17, v16);
  if (*((char *)this + 143) < 0)
  {
    uint64_t v15 = (char *)*((void *)this + 15);
    uint64_t v19 = *((void *)this + 16);
  }
  else
  {
    uint64_t v19 = *((unsigned __int8 *)this + 143);
  }
  *((void *)this + 22) = v15;
  *((void *)this + 23) = v19;
  *((_OWORD *)this + 24) = xmmword_1D2D6F530;
  *((_DWORD *)this + 100) = -1;
  *((void *)this + 52) = v15;
  *((void *)this + 53) = v19;
  *((_DWORD *)this + 112) = 0;
  *((void *)this + 55) = 0xFFFFFFFF00000000;
  *(void *)((char *)this + 548) = 0;
  *((_DWORD *)this + 120) = 0;
  uint64_t v20 = *((void *)this + 57);
  if (v20 != *((void *)this + 58)) {
    *((void *)this + 58) = v20;
  }
  return result;
}

void sub_1D2D03F20(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<UText>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D03F84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D03FE8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D0404C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::tokenizer::TokenExtractorIterator>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D040B0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenizer(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  uint64_t v2 = *((void *)this + 63);
  if (v2)
  {
    int32_t v3 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v2 + 72))(v2);
    if (*v3 == v3[1]
      || (uint64_t v4 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((void *)this + 63)),
          int v5 = *(_DWORD *)(*(void *)((*(uint64_t (**)(uint64_t))(*(void *)v4 + 72))(v4) + 8) - 4),
          uint64_t v6 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 62)),
          v5 != (*(unsigned int (**)(uint64_t))(*(void *)v6 + 72))(v6)))
    {
      uint64_t v9 = *((void *)this + 57);
      if (v9 != *((void *)this + 58)) {
        *((void *)this + 58) = v9;
      }
      *((_DWORD *)this + 120) = *((_DWORD *)this + 137);
    }
    else
    {
      uint64_t v7 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((void *)this + 63));
      uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 72))(v7);
      if ((morphun::analysis::tokenizer::StreamingTokenizer *)((char *)this + 456) != (morphun::analysis::tokenizer::StreamingTokenizer *)v8) {
        std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 456, *(char **)v8, *(void *)(v8 + 8), (uint64_t)(*(void *)(v8 + 8) - *(void *)v8) >> 2);
      }
    }
  }
  morphun::analysis::util::AttributeSource::clearAttributes(this);
  uint64_t v10 = (void **)((char *)this + 456);
  while (1)
  {
    int NextBoundary = morphun::tokenizer::NumberCleaverIterator::getNextBoundary((morphun::analysis::tokenizer::StreamingTokenizer *)((char *)this + 408));
    if (NextBoundary == -1)
    {
      int v12 = -1;
      goto LABEL_47;
    }
    int v12 = NextBoundary;
    if (*((char *)this + 143) < 0)
    {
      uint64_t v14 = (char *)*((void *)this + 15);
      unint64_t v13 = *((void *)this + 16);
    }
    else
    {
      unint64_t v13 = *((unsigned __int8 *)this + 143);
      uint64_t v14 = (char *)this + 120;
    }
    unint64_t v15 = *((int *)this + 137);
    BOOL v16 = v13 >= v15;
    std::basic_string<char16_t>::size_type v17 = v13 - v15;
    if (!v16) {
      std::__throw_out_of_range[abi:ne180100]("string_view::substr");
    }
    std::basic_string<char16_t>::size_type v18 = NextBoundary - v15;
    uint64_t v19 = (unsigned __int16 *)&v14[2 * v15];
    unint64_t v20 = v17 >= v18 ? NextBoundary - v15 : v17;
    if (!*((unsigned char *)this + 485) || morphun::tokenizer::TokenUtil::isSignificant(v19, v20)) {
      break;
    }
    if (*((void *)this + 63))
    {
      std::basic_string<char16_t>::size_type v22 = (int *)*((void *)this + 58);
      unint64_t v21 = *((void *)this + 59);
      if ((unint64_t)v22 >= v21)
      {
        std::basic_string<char16_t>::size_type v24 = (int *)*v10;
        uint64_t v25 = ((char *)v22 - (unsigned char *)*v10) >> 2;
        unint64_t v26 = v25 + 1;
        if ((unint64_t)(v25 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v27 = v21 - (void)v24;
        if (v27 >> 1 > v26) {
          unint64_t v26 = v27 >> 1;
        }
        if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v28 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v28 = v26;
        }
        if (v28)
        {
          unint64_t v28 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v28);
          std::basic_string<char16_t>::size_type v24 = (int *)*((void *)this + 57);
          std::basic_string<char16_t>::size_type v22 = (int *)*((void *)this + 58);
        }
        else
        {
          uint64_t v29 = 0;
        }
        uint64_t v30 = (int *)(v28 + 4 * v25);
        int *v30 = v12;
        std::basic_string<char16_t> v23 = v30 + 1;
        while (v22 != v24)
        {
          int v31 = *--v22;
          *--uint64_t v30 = v31;
        }
        *((void *)this + 57) = v30;
        *((void *)this + 58) = v23;
        *((void *)this + 59) = v28 + 4 * v29;
        if (v24) {
          operator delete(v24);
        }
      }
      else
      {
        *std::basic_string<char16_t>::size_type v22 = v12;
        std::basic_string<char16_t> v23 = v22 + 1;
      }
      *((void *)this + 58) = v23;
    }
    *((_DWORD *)this + 137) = v12;
  }
  int v32 = (void *)*((void *)this + 61);
  if (*((unsigned char *)this + 484))
  {
    if (v32) {
      int v32 = (void *)((char *)v32 + *(void *)(*v32 - 96));
    }
    morphun::util::StringViewUtils::lowercase((uint64_t)v32, v19, v20, *((void *)this + 14));
  }
  else
  {
    int v33 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v32);
    std::basic_string<char16_t>::assign((std::basic_string<char16_t> *)((char *)v33 + *(void *)(*v33 - 96)), (const std::basic_string<char16_t> *)this + 5, *((int *)this + 137), v18);
  }
  uint64_t v34 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 62));
  int v35 = *((_DWORD *)this + 136);
  uint64_t v36 = (v35 + *((_DWORD *)this + 137));
  *((_DWORD *)this + 138) = v35 + v12;
  (*(void (**)(uint64_t, uint64_t))(*(void *)v34 + 64))(v34, v36);
LABEL_47:
  *((_DWORD *)this + 137) = v12;
  uint64_t v37 = *((void *)this + 63);
  if (v37 && *((void *)this + 57) != *((void *)this + 58)) {
    (*(void (**)(uint64_t, void, char *))(*(void *)v37 + 56))(v37, *((unsigned int *)this + 120), (char *)this + 456);
  }
  return v12 != -1;
}

void sub_1D2D04494(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D044F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D0455C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::tokenizer::StreamingTokenizer::incrementTokenChain(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  morphun::analysis::util::AttributeSource::clearAttributes(this);
  for (uint64_t result = *((void *)this + 64); result; *((void *)this + 64) = result)
  {
    int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v4 = npc<morphun::Token>(*((void *)this + 65));
    if (v3 > (*(int (**)(uint64_t))(*(void *)v4 + 32))(v4)) {
      return 0;
    }
    int v5 = *((unsigned __int8 *)this + 484);
    uint64_t v6 = npc<morphun::Token>(*((void *)this + 64));
    if (v5) {
      uint64_t v7 = v6 + 40;
    }
    else {
      uint64_t v7 = v6 + 16;
    }
    if (*(char *)(v7 + 23) < 0) {
      uint64_t v8 = *(void *)(v7 + 8);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    }
    int v9 = *((unsigned __int8 *)this + 485);
    uint64_t v10 = npc<morphun::Token>(*((void *)this + 64));
    if (v9)
    {
      if (*(unsigned char *)(v10 + 64)) {
        BOOL v11 = v8 == 0;
      }
      else {
        BOOL v11 = 1;
      }
      if (!v11) {
        goto LABEL_23;
      }
    }
    else
    {
      if (*(unsigned char *)(v10 + 65)) {
        BOOL v12 = 1;
      }
      else {
        BOOL v12 = v8 == 0;
      }
      if (!v12)
      {
LABEL_23:
        unint64_t v13 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 61));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v13 + *(void *)(*v13 - 96)), (const std::basic_string<char16_t> *)v7);
        uint64_t v14 = *((void *)this + 62);
        npc<morphun::analysis::tokenattributes::OffsetAttribute>(v14);
        uint64_t v15 = npc<morphun::Token>(*((void *)this + 64));
        uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 24))(v15);
        uint64_t v17 = npc<morphun::Token>(*((void *)this + 64));
        uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 32))(v17);
        *((_DWORD *)this + 138) = v18;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v14 + 64))(v14, v16, v18);
        *((void *)this + 64) = *(void *)(npc<morphun::Token>(*((void *)this + 64)) + 80);
        return 1;
      }
    }
    uint64_t result = *(void *)(npc<morphun::Token>(*((void *)this + 64)) + 80);
  }
  return result;
}

uint64_t morphun::analysis::tokenizer::StreamingTokenizer::end(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  uint64_t v2 = *((void *)this + 63);
  if (v2 && *((void *)this + 57) != *((void *)this + 58))
  {
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 72))(v2);
    if ((morphun::analysis::tokenizer::StreamingTokenizer *)((char *)this + 456) != (morphun::analysis::tokenizer::StreamingTokenizer *)v3) {
      std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)this + 456, *(char **)v3, *(void *)(v3 + 8), (uint64_t)(*(void *)(v3 + 8) - *(void *)v3) >> 2);
    }
    uint64_t v4 = npc<morphun::analysis::tokenattributes::SkippedOffsetsAttribute>(*((void *)this + 63));
    *((_DWORD *)this + 120) = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 64))(v4);
  }
  morphun::analysis::util::AttributeSource::clearAttributes(this);
  uint64_t v5 = npc<morphun::analysis::tokenattributes::OffsetAttribute>(*((void *)this + 62));
  (*(void (**)(uint64_t, void, void))(*(void *)v5 + 64))(v5, *((unsigned int *)this + 138), *((unsigned int *)this + 138));
  uint64_t result = *((void *)this + 63);
  if (result && *((void *)this + 57) != *((void *)this + 58))
  {
    uint64_t v7 = *(uint64_t (**)(void))(*(void *)result + 56);
    return v7();
  }
  return result;
}

uint64_t morphun::analysis::tokenizer::StreamingTokenizer::incrementToken(morphun::analysis::tokenizer::StreamingTokenizer *this)
{
  uint64_t v1 = (uint64_t (*)(void *))*((void *)this + 66);
  uint64_t v2 = *((void *)this + 67);
  uint64_t v3 = (void *)((char *)this + (v2 >> 1));
  if (v2) {
    return (*(uint64_t (**)(void))(*v3 + v1))();
  }
  else {
    return v1(v3);
  }
}

void morphun::analysis::tokenizer::StreamingTokenizer::~StreamingTokenizer(void **this)
{
  morphun::analysis::tokenizer::StreamingTokenizer::~StreamingTokenizer(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  void *v3;
  void *v4;
  uint64_t vars8;

  morphun::analysis::util::AttributeSource::clearAttributes((morphun::analysis::util::AttributeSource *)this);
  uint64_t v2 = this[18];
  if (v2) {
    (*(void (**)(void *))(*(void *)v2 + 16))(v2);
  }
  uint64_t v3 = this[19];
  if (v3) {
    (*(void (**)(void *))(*(void *)v3 + 16))(v3);
  }
  uint64_t v4 = this[57];
  if (v4)
  {
    this[58] = v4;
    operator delete(v4);
  }
  morphun::tokenizer::RegexSplitIterator::~RegexSplitIterator((morphun::tokenizer::RegexSplitIterator *)(this + 20));
  if (*((char *)this + 143) < 0) {
    operator delete(this[15]);
  }

  morphun::analysis::util::AttributeSource::~AttributeSource((morphun::analysis::util::AttributeSource *)this, (uint64_t *)&off_1F2A08078);
}

void sub_1D2D04A38(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D04A9C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::ja::JaTokenizer::createTokenExtractor()
{
}

void sub_1D2D04B88(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v2, 0x1020C405F07FB98);
  MEMORY[0x1D942B8B0](v1, 0x10F3C4065C8B95BLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[4];
  npc<morphun::dialog::SemanticFeature const>(v4);
  uint64_t v5 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v4);
  int Count = morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(v5);
  if (!Count)
  {
    Featureint Value = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 14), a2);
    if (!FeatureValue) {
      goto LABEL_6;
    }
    uint64_t v8 = FeatureValue;
    int v9 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)FeatureValue + 32))(FeatureValue);
    int Count = morphun::grammar::synthesis::SvGrammarSynthesizer::getCount(v9);
    (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
  }
  if (Count == 2)
  {
    uint64_t v10 = a1 + 11;
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v11 = a1[3];
  npc<morphun::dialog::SemanticFeature const>(v11);
  BOOL v12 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v11);
  int Gender = morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(v12);
  if (!Gender)
  {
    uint64_t v14 = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 40), a2);
    if (!v14) {
      goto LABEL_11;
    }
    uint64_t v15 = v14;
    uint64_t v16 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)v14 + 32))(v14);
    int Gender = morphun::grammar::synthesis::SvGrammarSynthesizer::getGender(v16);
    (*(void (**)(uint64_t))(*(void *)v15 + 16))(v15);
  }
  if (Gender == 2)
  {
    uint64_t v10 = a1 + 8;
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v10 = a1 + 5;
LABEL_12:
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, void *))(*a1 + 32);

  return v17(a1, a2, v10);
}

void sub_1D2D04DD8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D04E58(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::~SvGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction *this)
{
  morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::~SvGrammarSynthesizer_ArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &off_1F2A0D678;
  morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::~SvGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 320));
  *((void *)this + 14) = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 36);
  if (v2)
  {
    *((void *)this + 37) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 34);
  *((void *)this + 34) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 15) = &unk_1F2A0FEF8;
  if (*((char *)this + 111) < 0) {
    operator delete(*((void **)this + 11));
  }
  if (*((char *)this + 87) < 0) {
    operator delete(*((void **)this + 8));
  }
  if (*((char *)this + 63) < 0) {
    operator delete(*((void **)this + 5));
  }
}

void morphun::grammar::synthesis::SvGrammarSynthesizer_ArticleLookupFunction::SvGrammarSynthesizer_ArticleLookupFunction(uint64_t a1, uint64_t a2, char a3, long long *a4, long long *a5, long long *a6)
{
  *((void *)&v31 + 1) = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1F29FB2E0;
  morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A065F8, a2, a3, 1);
  *(void *)a1 = &off_1F2A0D678;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  uint64_t v11 = a2 + 8;
  uint64_t v12 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)&__p);
  unint64_t v13 = (morphun::util::LocaleUtils *)(a2 + 16);
  if (v13 == (morphun::util::LocaleUtils *)v12) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = *(void *)(v12 + 56);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(void *)(a1 + 24) = v14;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  uint64_t v15 = (morphun::util::LocaleUtils *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v11, (unsigned __int16 *)&__p);
  if (v13 == v15) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = *((void *)v15 + 7);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(void *)(a1 + 32) = v16;
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 40), *(const std::basic_string<char16_t>::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v17 = *a4;
    *(void *)(a1 + 56) = *((void *)a4 + 2);
    *(_OWORD *)(a1 + 40) = v17;
  }
  if (*((char *)a5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 64), *(const std::basic_string<char16_t>::value_type **)a5, *((void *)a5 + 1));
  }
  else
  {
    long long v18 = *a5;
    *(void *)(a1 + 80) = *((void *)a5 + 2);
    *(_OWORD *)(a1 + 64) = v18;
  }
  if (*((char *)a6 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 88), *(const std::basic_string<char16_t>::value_type **)a6, *((void *)a6 + 1));
  }
  else
  {
    long long v19 = *a6;
    *(void *)(a1 + 104) = *((void *)a6 + 2);
    *(_OWORD *)(a1 + 88) = v19;
  }
  unint64_t v20 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::SWEDISH(v15);
  uint64_t v21 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v20);
  if (*(char *)(v21 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__p, *(const std::basic_string<char16_t>::value_type **)v21, *(void *)(v21 + 8));
  }
  else
  {
    long long v22 = *(_OWORD *)v21;
    __p.__r_.__value_.__r.__words[2] = *(void *)(v21 + 16);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v22;
  }
  uint64_t v23 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v21);
  if (*(char *)(v23 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v30, *(const std::basic_string<char16_t>::value_type **)v23, *(void *)(v23 + 8));
  }
  else
  {
    long long v24 = *(_OWORD *)v23;
    v30.__r_.__value_.__r.__words[2] = *(void *)(v23 + 16);
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v24;
  }
  uint64_t v25 = 0;
  unint64_t v26 = 0;
  v27[0] = 0;
  v27[1] = &v25;
  char v28 = 0;
  uint64_t v25 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  unint64_t v26 = v25;
  v27[0] = v25 + 2;
  unint64_t v26 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v27, (long long *)&__p, &v31, v25);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((void *)(a1 + 112), v20);
}

void sub_1D2D05294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (*(char *)(v20 + 87) < 0) {
    operator delete(*v22);
  }
  if (*(char *)(v20 + 63) < 0) {
    operator delete(*v21);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::MorphologicalAnalyzerUtil::getLemmaMappings(uint64_t a1, std::basic_string<char16_t>::size_type a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  if (!a3) {
    return;
  }
  std::basic_string<char16_t>::size_type v59 = 0;
  char v60 = 0;
  uint64_t v61 = 0;
  morphun::dictionary::Inflector::getInflectionPatternsForWord(a5[2], a1, a2, &v59);
  uint64_t v10 = v59;
  if (v59 == v60) {
    goto LABEL_84;
  }
  uint64_t v56 = 0;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  __src = (void *)a1;
  morphun::analysis::DictionaryExposableMorphology::getInflectionGrammemes(a1, a2, a3, (uint64_t)v59, (uint64_t)v60, (void **)&v56);
  uint64_t v11 = v56;
  uint64_t v12 = v57;
  if (v56 == v57) {
    goto LABEL_81;
  }
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((a2 | 3) != 0xB) {
    uint64_t v13 = a2 | 3;
  }
  uint64_t v54 = v13 + 1;
  do
  {
    if (v11[32])
    {
      uint64_t v14 = *(void *)(*((void *)v11 + 1) + 8);
      uint64_t v15 = *((void *)v11 + 3);
      (*(void (**)(void **__return_ptr, uint64_t *, char *, uint64_t))(*a5 + 40))(__p, a5, v11 + 8, a3);
      if (!v65) {
        goto LABEL_79;
      }
      morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*((void *)v11 + 1) + 40), *((_DWORD *)v11 + 4), &v66);
      std::basic_string<char16_t>::size_type size = HIBYTE(v66.__r_.__value_.__r.__words[2]);
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v66.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::size_type v17 = a2 - size;
      if (a2 >= v17) {
        std::basic_string<char16_t>::size_type v18 = v17;
      }
      else {
        std::basic_string<char16_t>::size_type v18 = a2;
      }
      if (v18 > 0x7FFFFFFFFFFFFFF7) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      if (v18 >= 0xB)
      {
        uint64_t v21 = (v18 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v18 | 3) != 0xB) {
          uint64_t v21 = v18 | 3;
        }
        p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v21 + 1);
        __dst.__r_.__value_.__l.__size_ = v18;
        __dst.__r_.__value_.__r.__words[2] = v22 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
      }
      else
      {
        *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v18;
        p_dst = &__dst;
        if (!v18) {
          goto LABEL_26;
        }
      }
      memmove(p_dst, __src, 2 * v18);
LABEL_26:
      p_dst->__r_.__value_.__s.__data_[v18] = 0;
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v66.__r_.__value_.__l.__data_);
      }
      morphun::dictionary::metadata::StringContainer::getString(*((morphun::dictionary::metadata::StringContainer **)__p[0] + 5), (int)__p[1], &v66);
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v23 = &v66;
      }
      else {
        uint64_t v23 = (std::basic_string<char16_t> *)v66.__r_.__value_.__r.__words[0];
      }
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v24 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v24 = v66.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v23, v24);
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v66.__r_.__value_.__l.__data_);
      }
      std::basic_string<char16_t>::size_type v25 = v15 | v14;
      unint64_t v26 = v64 | v14;
      char v28 = (std::basic_string<char16_t> *)a4[1];
      unint64_t v27 = a4[2];
      if ((unint64_t)v28 >= v27)
      {
        unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v28 - *a4) >> 4);
        unint64_t v31 = v30 + 1;
        if (v30 + 1 > 0x555555555555555) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - *a4) >> 4);
        if (2 * v32 > v31) {
          unint64_t v31 = 2 * v32;
        }
        if (v32 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v33 = 0x555555555555555;
        }
        else {
          unint64_t v33 = v31;
        }
        int v68 = a4 + 2;
        if (v33) {
          unint64_t v33 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v33);
        }
        else {
          uint64_t v34 = 0;
        }
        uint64_t v47 = (std::basic_string<char16_t> *)(v33 + 48 * v30);
        v66.__r_.__value_.__r.__words[0] = v33;
        v66.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v47;
        v66.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)v47;
        unint64_t v67 = v33 + 48 * v34;
        v47->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A0F180;
        v47->__r_.__value_.__l.__size_ = v25;
        v47->__r_.__value_.__r.__words[2] = v26;
        uint64_t v48 = v47 + 1;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v48, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
        }
        else
        {
          long long v49 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
          v47[1].__r_.__value_.__r.__words[2] = __dst.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v48->__r_.__value_.__l.__data_ = v49;
        }
        v66.__r_.__value_.__r.__words[2] += 48;
        std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer(a4, &v66);
        uint64_t v46 = (std::basic_string<char16_t>::__raw *)a4[1];
        std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&v66);
      }
      else
      {
        v28->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A0F180;
        v28->__r_.__value_.__l.__size_ = v25;
        v28->__r_.__value_.__r.__words[2] = v26;
        uint64_t v29 = v28 + 1;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v29, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
        }
        else
        {
          *(_OWORD *)&v29->__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
          v28[1].__r_.__value_.__r.__words[2] = __dst.__r_.__value_.__r.__words[2];
        }
        uint64_t v46 = (std::basic_string<char16_t>::__raw *)&v28[2];
        a4[1] = (uint64_t)v46;
      }
      a4[1] = (uint64_t)v46;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      goto LABEL_79;
    }
    if (a2 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a2 >= 0xB)
    {
      uint64_t v20 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v54);
      __p[1] = (void *)a2;
      unint64_t v64 = v35 | 0x8000000000000000;
      __p[0] = v20;
    }
    else
    {
      HIBYTE(v64) = a2;
      uint64_t v20 = __p;
      if (!a2) {
        goto LABEL_49;
      }
    }
    memmove(v20, __src, 2 * a2);
LABEL_49:
    *((_WORD *)v20 + a2) = 0;
    uint64_t v37 = (void *)a4[1];
    unint64_t v36 = a4[2];
    if ((unint64_t)v37 >= v36)
    {
      unint64_t v41 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v37 - *a4) >> 4);
      unint64_t v42 = v41 + 1;
      if (v41 + 1 > 0x555555555555555) {
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v36 - *a4) >> 4);
      if (2 * v43 > v42) {
        unint64_t v42 = 2 * v43;
      }
      if (v43 >= 0x2AAAAAAAAAAAAAALL) {
        unint64_t v44 = 0x555555555555555;
      }
      else {
        unint64_t v44 = v42;
      }
      int v68 = a4 + 2;
      if (v44) {
        unint64_t v44 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v44);
      }
      else {
        uint64_t v45 = 0;
      }
      std::basic_string<char16_t>::size_type v51 = v44 + 48 * v41;
      v66.__r_.__value_.__r.__words[0] = v44;
      v66.__r_.__value_.__l.__size_ = v51;
      v66.__r_.__value_.__r.__words[2] = v51;
      unint64_t v67 = v44 + 48 * v45;
      *(void *)std::basic_string<char16_t>::size_type v51 = &off_1F2A0F180;
      float64x2_t v52 = vld1q_dup_f64((const double *)v11);
      *(float64x2_t *)(v51 + 8) = v52;
      int v53 = (std::basic_string<char16_t> *)(v51 + 24);
      if (SHIBYTE(v64) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v53, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
      }
      else
      {
        *(_OWORD *)&v53->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
        *(void *)(v51 + 40) = v64;
      }
      v66.__r_.__value_.__r.__words[2] += 48;
      std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer(a4, &v66);
      size_t v50 = (void *)a4[1];
      std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&v66);
      char v40 = HIBYTE(v64);
    }
    else
    {
      double v38 = *(double *)v11;
      void *v37 = &off_1F2A0F180;
      *((double *)v37 + 1) = v38;
      *((double *)v37 + 2) = v38;
      int v39 = (std::basic_string<char16_t> *)(v37 + 3);
      char v40 = HIBYTE(v64);
      if (SHIBYTE(v64) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(v39, (const std::basic_string<char16_t>::value_type *)__p[0], (std::basic_string<char16_t>::size_type)__p[1]);
      }
      else
      {
        *(_OWORD *)&v39->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
        void v37[5] = v64;
      }
      size_t v50 = v37 + 6;
      a4[1] = (uint64_t)v50;
    }
    a4[1] = (uint64_t)v50;
    if (v40 < 0) {
      operator delete(__p[0]);
    }
LABEL_79:
    v11 += 40;
  }
  while (v11 != v12);
  uint64_t v11 = v56;
LABEL_81:
  if (v11) {
    operator delete(v11);
  }
  uint64_t v10 = v59;
LABEL_84:
  if (v10) {
    operator delete(v10);
  }
}

void sub_1D2D05908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  *(void *)(v31 + 8) = v32;
  if (a31 < 0) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }
  if (a17) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::MorphologicalAnalyzerUtil::analyze_word(uint64_t a1, uint64_t a2, std::basic_string<char16_t>::size_type a3, uint64_t a4, uint64_t a5, uint64_t *a6, int a7)
{
  if (a5 || a7)
  {
    memset(v16, 0, 24);
    morphun::analysis::MorphologicalAnalyzerUtil::getLemmaMappings(a2, a3, a4, v16, a6);
    if (a5) {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)a5 + 64))(a5, v16);
    }
    if (a7)
    {
      (*(void (**)(void **__return_ptr, uint64_t *, uint64_t *))(*a6 + 32))(v12, a6, v16);
      if (v15)
      {
        if (SHIBYTE(v14) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, (const std::basic_string<char16_t>::value_type *)v13, *((std::basic_string<char16_t>::size_type *)&v13 + 1));
          int v11 = v15;
          *(unsigned char *)(a1 + 24) = 1;
          if (!v11)
          {
LABEL_14:
            v12[0] = v16;
            std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)v12);
            return;
          }
        }
        else
        {
          *(_OWORD *)a1 = v13;
          *(void *)(a1 + 16) = v14;
          *(unsigned char *)(a1 + 24) = 1;
        }
        goto LABEL_14;
      }
    }
    v12[0] = v16;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)v12);
  }
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
}

void sub_1D2D05B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, int a17, char a18)
{
  if (a16) {
  *(void *)(v18 - 40) = &a18;
  }
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)(v18 - 40));
  _Unwind_Resume(a1);
}

void *morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::reset(morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 14) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 15) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((void *)this + 16) = result;
  return result;
}

uint64_t morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::incrementToken(morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
    goto LABEL_71;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = *((void *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
    {
      uint64_t v5 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      uint64_t v6 = (unsigned __int8 *)v5 + *(void *)(*v5 - 96);
      if ((char)v6[23] < 0)
      {
        if (*((_DWORD *)this + 96) > *((_DWORD *)v6 + 2)) {
          goto LABEL_62;
        }
        uint64_t v37 = 0;
        uint64_t v8 = *(const UChar **)v6;
        uint64_t v7 = *((void *)v6 + 1);
      }
      else
      {
        uint64_t v7 = v6[23];
        if (*((_DWORD *)this + 96) > (int)v7) {
          goto LABEL_62;
        }
        uint64_t v37 = 0;
        uint64_t v8 = (const UChar *)v6;
      }
      if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 45), (uint64_t)&v37, v8, v7))
      {
        uint64_t v10 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        int v11 = (std::basic_string<char16_t> *)((char *)v10 + *(void *)(*v10 - 96));
        uint64_t v12 = (char *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        int v13 = (*(uint64_t (**)(morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter *, char *))(*(void *)this + 56))(this, &v12[*(void *)(*(void *)v12 - 96)]);
        std::basic_string<char16_t>::resize(v11, v13, 0);
        goto LABEL_62;
      }
      if ((char)v6[23] < 0)
      {
        uint64_t v14 = v6;
        uint64_t v6 = *(unsigned __int8 **)v6;
        unint64_t v9 = *((void *)v14 + 1);
      }
      else
      {
        unint64_t v9 = v6[23];
      }
      uint64_t v15 = v37;
      uint64_t v44 = v37;
      if ((*((void *)this + 46) & v37) != 0 || (*((void *)this + 47) & v37) == 0)
      {
        if (!*((void *)this + 16))
        {
          LOBYTE(v35.__r_.__value_.__l.__data_) = 0;
          char v36 = 0;
          goto LABEL_62;
        }
        int v16 = 0;
      }
      else
      {
        int v16 = 1;
      }
      int isAllUpperCase = morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v6, v9);
      if (v9 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      int v18 = isAllUpperCase;
      if (v9 >= 0xB)
      {
        uint64_t v20 = (v9 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v9 | 3) != 0xB) {
          uint64_t v20 = v9 | 3;
        }
        p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v20 + 1);
        unint64_t v42 = v9;
        int64_t v43 = v21 | 0x8000000000000000;
        std::basic_string<char16_t> __dst = p_dst;
      }
      else
      {
        HIBYTE(v43) = v9;
        p_dst = (void **)&__dst;
        if (!v9) {
          goto LABEL_28;
        }
      }
      memmove(p_dst, v6, 2 * v9);
LABEL_28:
      *((_WORD *)p_dst + v9) = 0;
      if (v18)
      {
        morphun::util::StringViewUtils::lowercase((uint64_t)&__dst, (const UChar *)v6, v9, (uint64_t)this + 392);
        if (v43 >= 0) {
          uint64_t v22 = (const UChar *)&__dst;
        }
        else {
          uint64_t v22 = (const UChar *)__dst;
        }
        if (v43 >= 0) {
          uint64_t v23 = HIBYTE(v43);
        }
        else {
          uint64_t v23 = v42;
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 45), (uint64_t)&v44, v22, v23);
        uint64_t v15 = v44;
      }
      if (v43 >= 0) {
        std::basic_string<char16_t>::size_type v24 = (void **)&__dst;
      }
      else {
        std::basic_string<char16_t>::size_type v24 = __dst;
      }
      if (v43 >= 0) {
        std::basic_string<char16_t>::size_type v25 = HIBYTE(v43);
      }
      else {
        std::basic_string<char16_t>::size_type v25 = v42;
      }
      morphun::analysis::MorphologicalAnalyzerUtil::analyze_word((uint64_t)&__p, (uint64_t)v24, v25, v15, *((void *)this + 16), (uint64_t *)this + 17, v16);
      if (v40)
      {
        if (v18)
        {
          memset(&v38, 0, sizeof(v38));
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_p = &__p;
          }
          else {
            p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int32_t v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          else {
            int32_t v27 = __p.__r_.__value_.__r.__words[1];
          }
          morphun::util::StringViewUtils::uppercase((uint64_t)&v38, (const UChar *)p_p, v27, (uint64_t)this + 392);
          std::basic_string<char16_t> v35 = v38;
          int v28 = 1;
          char v36 = 1;
          if (v40 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          std::basic_string<char16_t> v35 = __p;
          memset(&__p, 0, sizeof(__p));
          int v28 = 1;
          char v36 = 1;
        }
      }
      else
      {
        int v28 = 0;
        LOBYTE(v35.__r_.__value_.__l.__data_) = 0;
        char v36 = 0;
      }
      if (SHIBYTE(v43) < 0) {
        operator delete(__dst);
      }
      if (v28)
      {
        uint64_t v29 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v29 + *(void *)(*v29 - 96)), &v35);
        if (v36)
        {
          if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v35.__r_.__value_.__l.__data_);
          }
        }
      }
LABEL_62:
      if (*((void *)this + 15))
      {
        __p.__r_.__value_.__r.__words[0] = 0;
        unint64_t v30 = (const UChar *)(*((void *)this + 13) + *(void *)(**((void **)this + 13) - 96));
        if (*((char *)v30 + 23) < 0)
        {
          unint64_t v30 = *(const UChar **)v30;
          uint64_t v31 = *(void *)(*((void *)this + 13) + *(void *)(**((void **)this + 13) - 96) + 8);
        }
        else
        {
          uint64_t v31 = *((unsigned __int8 *)v30 + 23);
        }
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 45), (uint64_t)&__p, v30, v31))
        {
          uint64_t v32 = *((void *)this + 15);
          if (v32)
          {
            (*(void (**)(uint64_t, std::basic_string<char16_t>::size_type))(*(void *)v32 + 64))(v32, __p.__r_.__value_.__r.__words[0]);
            return v3;
          }
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
LABEL_71:
        }
      }
    }
  }
  return v3;
}

void sub_1D2D0606C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a29 && a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D0613C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::StemmableDictionaryLookupLemmaFilter(uint64_t a1, uint64_t *a2, uint64_t a3, morphun::dictionary::DictionaryMetaData *a4, uint64_t *a5, uint64_t a6, uint64_t **a7, int a8, uint64_t *a9, uint64_t *a10)
{
  std::basic_string<char16_t>::size_type v17 = morphun::analysis::TokenFilter::TokenFilter((morphun::analysis::TokenFilter *)a1, (morphun::analysis::TokenStream *)(a2 + 1), a3);
  uint64_t v18 = *a2;
  *(void *)std::basic_string<char16_t>::size_type v17 = *a2;
  *(void *)(a1 + *(void *)(v18 - 40)) = a2[7];
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 136) = &unk_1F2A08C08;
  morphun::analysis::DictionaryExposableMorphology::DictionaryExposableMorphology((morphun::analysis::DictionaryExposableMorphology *)(a1 + 136), (const morphun::util::ULocale *)&off_1F2A075E8, a4);
  *(void *)(a1 + 136) = &off_1F2A0FDB0;
  morphun::analysis::MorphologicalAnalyzer::convertLemmaAttributes(a1 + 288, *(void *)(a1 + 144), a5);
  morphun::analysis::convertGrammemePriorities((void *)(a1 + 312), *(void *)(a1 + 144), a6);
  morphun::analysis::convertIgnoreGrammemes(a1 + 336, *(void *)(a1 + 144), a7);
  uint64_t v19 = *(void *)(a1 + 144);
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 360) = v19;
  *(_DWORD *)(a1 + 384) = a8;
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 392), (const morphun::util::ULocale *)(a1 + 160));
  *(void *)(a1 + 104) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>(a1);
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(void *)(a1 + 360), (uint64_t *)(a1 + 376), a9);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  if (*a10 != a10[1])
  {
    uint64_t v21 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(*(void *)(a1 + 360), (uint64_t *)(a1 + 368), a10);
    morphun::util::Validate::notNull<long long>((uint64_t)v21);
  }
  return a1;
}

void sub_1D2D06338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(v12);
  morphun::analysis::TokenFilter::~TokenFilter(v10, v11);
  _Unwind_Resume(a1);
}

void *morphun::util::lemmatization::FeedForwardInflectionAnalyzer_Layer::FeedForwardInflectionAnalyzer_Layer(void *a1, uint64_t *a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  if (v6 != *a2)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v6 - v5) >> 3);
    if (v7 >= 0xAAAAAAAAAAAAAABLL) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v8 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v7);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[3 * v9];
    uint64_t v14 = v8;
    uint64_t v15 = v8;
    v12[0] = a1 + 2;
    v12[1] = &v14;
    void v12[2] = &v15;
    char v13 = 0;
    uint64_t v10 = v8;
    do
    {
      *uint64_t v10 = 0;
      v10[1] = 0;
      _OWORD v10[2] = 0;
      std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(v10, *(const void **)v5, *(void *)(v5 + 8), (uint64_t)(*(void *)(v5 + 8) - *(void *)v5) >> 3);
      uint64_t v10 = v15 + 3;
      v15 += 3;
      v5 += 24;
    }
    while (v5 != v6);
    char v13 = 1;
    std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
    a1[1] = v10;
  }
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
  std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(a1 + 3, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
  return a1;
}

void sub_1D2D064E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

BOOL morphun::transliteration::ToRomanizationTransliterator::transliterate(uint64_t a1, UChar *a2, unint64_t a3, uint64_t a4)
{
  if (!morphun::util::UnicodeSetUtils::containsSome((void *)(a1 + 296), (uint64_t)a2, a3)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 640))
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    int v8 = 1;
    uint64_t v9 = a2;
    int v10 = a3;
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    if (morphun::util::StringViewUtils::isAllLowerCase((uint64_t)a2, a3))
    {
      int v8 = 1;
      uint64_t v9 = a2;
      int v10 = a3;
    }
    else
    {
      morphun::util::StringViewUtils::lowercase((uint64_t)&v18, a2, a3, a1 + 8);
      int v8 = 0;
      if (v20 >= 0) {
        uint64_t v9 = &v18;
      }
      else {
        uint64_t v9 = v18;
      }
      if (v20 >= 0) {
        int v10 = HIBYTE(v20);
      }
      else {
        int v10 = v19;
      }
    }
  }
  unint64_t v12 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(a1 + 216), (uint64_t)v9, v10);
  if (HIDWORD(v12))
  {
    morphun::dictionary::metadata::MarisaTrie<int>::getKey(&v21, *(marisa::Trie **)(a1 + 288), v12);
    std::basic_string<char16_t> __p = v21;
    char v17 = 1;
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)v21.__r_.__value_.__r.__words[0];
    }
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v21.__r_.__value_.__l.__size_;
    }
    morphun::transliteration::Transliterator::matchCase(a1, a4, (std::basic_string<char16_t>::value_type *)p_p, size, (uint64_t)a2, a3, v8);
    BOOL v11 = 1;
    if (v17 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    LOBYTE(__p.__r_.__value_.__l.__data_) = 0;
    char v17 = 0;
    BOOL v11 = (morphun::transliteration::MLTransliterator::transliterate(a1 + 312, (uint64_t)a2, a3, a4) & 1) != 0
       || morphun::transliteration::ICUScriptTransliterator::transliterate(a1 + 456, a2, a3, a4);
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(v18);
  }
  return v11;
}

void sub_1D2D066CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 && a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void morphun::transliteration::ToRomanizationTransliterator::~ToRomanizationTransliterator(morphun::transliteration::ToRomanizationTransliterator *this)
{
  *(void *)this = &off_1F2A087E8;
  *((void *)this + 57) = &off_1F2A087A0;
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 624));
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 608));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 592));
  *((void *)this + 57) = &unk_1F29F4370;
  morphun::transliteration::MLTransliterator::~MLTransliterator((void **)this + 39);
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 296));
  morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 136));
  *(void *)this = &unk_1F29F43B8;

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A087E8;
  *((void *)this + 57) = &off_1F2A087A0;
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 624));
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 608));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 592));
  *((void *)this + 57) = &unk_1F29F4370;
  morphun::transliteration::MLTransliterator::~MLTransliterator((void **)this + 39);
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 296));
  morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap((morphun::transliteration::ToRomanizationTransliterator *)((char *)this + 136));
  *(void *)this = &unk_1F29F43B8;
}

uint64_t morphun::tokenizer::GermanicTokenExtractorIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  *(_DWORD *)(a1 + 84) = 0;
  uint64_t result = morphun::tokenizer::ICUTokenExtractorIterator::reset();
  *(void *)(a1 + 64) = *(void *)(a1 + 56);
  *(_DWORD *)(a1 + 80) = 0;
  return result;
}

uint64_t morphun::tokenizer::GermanicTokenExtractorIterator::getNextBoundary(morphun::tokenizer::GermanicTokenExtractorIterator *this)
{
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 7);
  uint64_t v3 = *((int *)this + 20);
  char v122 = (char **)((char *)this + 56);
  if ((int)v3 < (int)((unint64_t)(*((void *)this + 8) - v2) >> 2))
  {
    *((_DWORD *)this + 20) = v3 + 1;
    return *(unsigned int *)(v2 + 4 * v3);
  }
  *((void *)this + 8) = v2;
  *((_DWORD *)this + 20) = 0;
  uint64_t v5 = ubrk_next();
  if (v5 == -1) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v4 = v5;
  unint64_t v119 = *((int *)v1 + 21);
  int v6 = v5 - v119;
  if ((int)v5 - (int)v119 < *((_DWORD *)v1 + 22)) {
    goto LABEL_175;
  }
  uint64_t v7 = *((void *)v1 + 5);
  if (*(_WORD *)(v7 + 2 * (int)v5 - 2) == 115)
  {
    uint64_t v8 = (int)v5 - 2;
    int v9 = *(unsigned __int16 *)(v7 + 2 * v8);
    if (v9 == 8217 || v9 == 39) {
      int v6 = v8 - v119;
    }
  }
  uint64_t v10 = *((void *)v1 + 1);
  unint64_t v11 = *((void *)v1 + 6);
  std::basic_string<char16_t> v130 = 0;
  char v131 = 0;
  uint64_t v132 = 0;
  BOOL v12 = v11 >= v119;
  unint64_t v13 = v11 - v119;
  if (!v12) {
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  }
  if (v13 >= v6) {
    unint64_t v14 = v6;
  }
  else {
    unint64_t v14 = v13;
  }
  if (v14 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (v14 >= 0xB)
  {
    uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v14 | 3) != 0xB) {
      uint64_t v16 = v14 | 3;
    }
    p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v16 + 1);
    unint64_t v128 = v14;
    int64_t v129 = v17 | 0x8000000000000000;
    std::basic_string<char16_t> __dst = (void ***)p_dst;
  }
  else
  {
    HIBYTE(v129) = v14;
    p_dst = (void **)&__dst;
    if (!v14) {
      goto LABEL_23;
    }
  }
  memmove(p_dst, (const void *)(v7 + 2 * v119), 2 * v14);
LABEL_23:
  *((_WORD *)p_dst + v14) = 0;
  int v18 = HIBYTE(v129);
  if (v129 < 0) {
    int v18 = v128;
  }
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 2 * v18;
    do
    {
      if (v129 >= 0) {
        std::basic_string<char16_t> v21 = (void ***)&__dst;
      }
      else {
        std::basic_string<char16_t> v21 = __dst;
      }
      int v22 = *(unsigned __int16 *)((char *)v21 + v19);
      int v23 = MEMORY[0x1D942BD20](*(unsigned __int16 *)((char *)v21 + v19));
      if (v23 != v22)
      {
        if (v129 >= 0) {
          std::basic_string<char16_t>::size_type v24 = (void ***)&__dst;
        }
        else {
          std::basic_string<char16_t>::size_type v24 = __dst;
        }
        *(_WORD *)((char *)v24 + v19) = v23;
      }
      v19 += 2;
    }
    while (v20 != v19);
  }
  morphun::util::StringUtils::reverse((uint64_t)&__dst);
  if (v129 >= 0) {
    std::basic_string<char16_t>::size_type v25 = (void ***)&__dst;
  }
  else {
    std::basic_string<char16_t>::size_type v25 = __dst;
  }
  if (v129 >= 0) {
    unint64_t v26 = HIBYTE(v129);
  }
  else {
    unint64_t v26 = v128;
  }
  std::allocate_shared[abi:ne180100]<morphun::tokenizer::dictionary::Segment,std::allocator<morphun::tokenizer::dictionary::Segment>,morphun::tokenizer::dictionary::DictionaryTokenizerConfig const&,morphun::tokenizer::trie::SerializedTrie const&,std::u16string_view &,int &,int &,void>(&v125, v10, v10 + 184, (uint64_t)v25, v26, 0, v26);
  uint64_t v27 = v125;
  if (!v125)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  int v28 = (char *)operator new(0x88uLL);
  uint64_t v29 = (std::__shared_weak_count *)v28;
  *((void *)v28 + 1) = 0;
  *((void *)v28 + 2) = 0;
  *(void *)int v28 = &unk_1F2A11DA0;
  *(_OWORD *)(v28 + 24) = *(_OWORD *)v27;
  *(_OWORD *)(v28 + 40) = *(_OWORD *)(v27 + 16);
  *(_OWORD *)(v28 + 56) = *(_OWORD *)(v27 + 32);
  *((_DWORD *)v28 + 18) = *(_DWORD *)(v27 + 48);
  *((_DWORD *)v28 + 19) = *(_DWORD *)(v27 + 52);
  v28[80] = *(unsigned char *)(v27 + 56);
  *((void *)v28 + 11) = *(void *)(v27 + 64);
  uint64_t v30 = *(void *)(v27 + 72);
  *((void *)v28 + 12) = v30;
  if (v30) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v30 + 8), 1uLL, memory_order_relaxed);
  }
  *((_DWORD *)v28 + 26) = *(_DWORD *)(v27 + 80);
  *(void *)(v28 + 108) = *(void *)(v27 + 84);
  *((_DWORD *)v28 + 29) = *(_DWORD *)(v27 + 92);
  *((void *)v28 + 15) = *(void *)(v27 + 96);
  *((_DWORD *)v28 + 32) = *(_DWORD *)(v27 + 104);
  uint64_t v31 = v126;
  v124[0] = v27;
  v124[1] = v126;
  if (v126) {
    atomic_fetch_add_explicit(&v126->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v123[0] = (uint64_t)(v28 + 24);
  v123[1] = (uint64_t)v28;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v28 + 1, 1uLL, memory_order_relaxed);
  long long v118 = (std::__shared_weak_count *)v28;
  morphun::tokenizer::dictionary::GermanicDecompounder::analyze((int *)v10, v124, v123, 0, 1, (uint64_t)&v130);
  uint64_t v117 = v4;
  std::__shared_weak_count::__release_shared[abi:ne180100](v29);
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }
  uint64_t v32 = v130;
  unint64_t v33 = v131;
  if (v130 != v131)
  {
    uint64_t v34 = v130;
    do
    {
      uint64_t v35 = *(void *)v34;
      v34 += 16;
      float v36 = pow(*(float *)(v35 + 80), 1.0 / (float)((float)*(int *)(v35 + 84) * 1.5));
      *(float *)(v35 + 96) = v36;
    }
    while (v34 != v33);
  }
  long long v120 = *(_OWORD *)v32;
  uint64_t v37 = (std::__shared_weak_count *)*((void *)v32 + 1);
  if (v37)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)v32 + 1) + 8), 1uLL, memory_order_relaxed);
    unint64_t v33 = v131;
  }
  unint64_t v38 = 126 - 2 * __clz((v33 - v32) >> 4);
  if (v33 == v32) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = v38;
  }
  std::__introsort<std::_ClassicAlgPolicy,morphun::tokenizer::dictionary::ParsingsScorer::_getBestLeaf(std::vector<std::shared_ptr<morphun::tokenizer::dictionary::Segment>> *)::$_0 &,std::shared_ptr<morphun::tokenizer::dictionary::Segment>*,false>(v32, v33, v39, 1);
  uint64_t v41 = *(void *)v130;
  char v40 = (std::__shared_weak_count *)*((void *)v130 + 1);
  if (v40) {
    atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (*(float *)(v41 + 96) < (float)*(int *)(v10 + 344)
    && (float)((float)*(unint64_t *)(v41 + 8) / (float)*(int *)(v41 + 84)) < (float)*(int *)(v10 + 348))
  {
    if (v37) {
      atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    goto LABEL_97;
  }
  uint64_t v114 = v40;
  uint64_t v115 = v37;
  uint64_t v116 = v1;
  int v42 = 0;
  do
  {
    int64_t v43 = v130;
    uint64_t v44 = &v130[16 * v42];
    uint64_t v46 = *(void *)v44;
    uint64_t v45 = (std::__shared_weak_count *)*((void *)v44 + 1);
    if (v45) {
      atomic_fetch_add_explicit(&v45->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v121 = v45;
    uint64_t v47 = v42;
    uint64_t v48 = v131 - v43;
    float v49 = *(float *)(v46 + 96);
    int v50 = *(_DWORD *)(v46 + 84);
    float v51 = (float)v50;
    float v52 = pow((double)*(int *)(v46 + 92), 1.0 / (double)v50);
    float v53 = *(float *)(v46 + 100);
    uint64_t v54 = (int)(v48 >> 4);
    uint64_t v55 = 16 * v42;
    char v56 = 1;
    do
    {
      if (++v47 >= v54) {
        break;
      }
      uint64_t v57 = *(void *)&v130[v55 + 16];
      uint64_t v58 = *(std::__shared_weak_count **)&v130[v55 + 24];
      if (v58) {
        atomic_fetch_add_explicit(&v58->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      int v59 = *(_DWORD *)(v57 + 84);
      float v60 = *(float *)(v57 + 100);
      if (v51 > (float)v59)
      {
        float v61 = *(float *)(v57 + 96);
        if ((float)(v49 * powf(*(float *)(v10 + 356), v51 - (float)v59)) < v61) {
          goto LABEL_87;
        }
      }
      if (v59 >= 2)
      {
        float v62 = pow((double)*(int *)(v57 + 92), 1.0 / (double)v59);
        if (v52 < v62 && (float)(v49 * *(float *)(v10 + 356)) < *(float *)(v57 + 96)) {
          goto LABEL_87;
        }
      }
      if (*(_DWORD *)(v10 + 360) <= *(_DWORD *)(v46 + 8))
      {
        if (v53 >= 0.0 || v60 < 0.0)
        {
          if (v53 >= 3.0
            || v60 < 3.0
            || (float v64 = *(float *)(v57 + 96), (float)(v49 * powf(*(float *)(v10 + 352), v51 - (float)v59)) >= v64))
          {
            char v63 = 1;
            if (v53 >= 0.0) {
              goto LABEL_88;
            }
            if (v49 >= (float)*(int *)(v10 + 344) || (float)(v60 - v53) < 3.0) {
              goto LABEL_88;
            }
          }
        }
LABEL_87:
        char v56 = 0;
        char v63 = 0;
        ++v42;
        goto LABEL_88;
      }
      char v63 = 1;
LABEL_88:
      if (v58) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v58);
      }
      v55 += 16;
    }
    while ((v63 & 1) != 0);
    if (v121) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v121);
    }
  }
  while ((v56 & 1) == 0);
  long long v66 = *(_OWORD *)&v130[16 * v42];
  long long v120 = v66;
  if (*((void *)&v66 + 1)) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v66 + 1) + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v37 = v115;
  uint64_t v1 = v116;
  char v40 = v114;
LABEL_97:
  if (v40) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v40);
  }
  if (v37) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v37);
  }
  unint64_t v67 = 0;
  uint64_t v68 = v120;
  int v69 = *(_DWORD *)(v120 + 8);
  uint64_t v70 = (std::__shared_weak_count *)*((void *)&v120 + 1);
  while (1)
  {
    uint64_t v71 = v70;
    uint64_t v72 = *(void *)(v68 + 64);
    uint64_t v70 = *(std::__shared_weak_count **)(v68 + 72);
    if (v70) {
      atomic_fetch_add_explicit(&v70->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if (v67) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v67);
    }
    if (!v72) {
      break;
    }
    int v73 = *(_DWORD *)(v68 + 16);
    if (v73)
    {
      int v74 = *(_DWORD *)(v68 + 24);
      if (v73 != v74)
      {
        npc<std::vector<int>>((uint64_t)v122);
        int v75 = v69 - v74 + v119;
        int v77 = (char *)*((void *)v1 + 8);
        unint64_t v76 = *((void *)v1 + 9);
        if ((unint64_t)v77 >= v76)
        {
          std::basic_string<char16_t> v79 = *v122;
          uint64_t v80 = (v77 - *v122) >> 2;
          unint64_t v81 = v80 + 1;
          if ((unint64_t)(v80 + 1) >> 62) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v82 = v76 - (void)v79;
          if (v82 >> 1 > v81) {
            unint64_t v81 = v82 >> 1;
          }
          if ((unint64_t)v82 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v83 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v83 = v81;
          }
          if (v83)
          {
            unint64_t v83 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v83);
            std::basic_string<char16_t> v79 = (char *)*((void *)v1 + 7);
            int v77 = (char *)*((void *)v1 + 8);
          }
          else
          {
            uint64_t v84 = 0;
          }
          std::basic_string<char16_t>::size_type v85 = (_DWORD *)(v83 + 4 * v80);
          *std::basic_string<char16_t>::size_type v85 = v75;
          std::basic_string<char16_t>::size_type v78 = v85 + 1;
          while (v77 != v79)
          {
            int v86 = *((_DWORD *)v77 - 1);
            v77 -= 4;
            *--std::basic_string<char16_t>::size_type v85 = v86;
          }
          *((void *)v1 + 7) = v85;
          *((void *)v1 + 8) = v78;
          *((void *)v1 + 9) = v83 + 4 * v84;
          if (v79) {
            operator delete(v79);
          }
        }
        else
        {
          *(_DWORD *)int v77 = v75;
          std::basic_string<char16_t>::size_type v78 = v77 + 4;
        }
        *((void *)v1 + 8) = v78;
      }
      npc<std::vector<int>>((uint64_t)v122);
      int v87 = v69 - v73 + v119;
      std::basic_string<char16_t>::size_type v89 = (char *)*((void *)v1 + 8);
      unint64_t v88 = *((void *)v1 + 9);
      if ((unint64_t)v89 >= v88)
      {
        uint64_t v91 = *v122;
        uint64_t v92 = (v89 - *v122) >> 2;
        unint64_t v93 = v92 + 1;
        if ((unint64_t)(v92 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v94 = v88 - (void)v91;
        if (v94 >> 1 > v93) {
          unint64_t v93 = v94 >> 1;
        }
        if ((unint64_t)v94 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v95 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v95 = v93;
        }
        if (v95)
        {
          unint64_t v95 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v95);
          uint64_t v91 = (char *)*((void *)v1 + 7);
          std::basic_string<char16_t>::size_type v89 = (char *)*((void *)v1 + 8);
        }
        else
        {
          uint64_t v96 = 0;
        }
        std::basic_string<char16_t>::size_type v97 = (_DWORD *)(v95 + 4 * v92);
        *std::basic_string<char16_t>::size_type v97 = v87;
        uint64_t v90 = v97 + 1;
        while (v89 != v91)
        {
          int v98 = *((_DWORD *)v89 - 1);
          v89 -= 4;
          *--std::basic_string<char16_t>::size_type v97 = v98;
        }
        *((void *)v1 + 7) = v97;
        *((void *)v1 + 8) = v90;
        *((void *)v1 + 9) = v95 + 4 * v96;
        if (v91) {
          operator delete(v91);
        }
      }
      else
      {
        *(_DWORD *)std::basic_string<char16_t>::size_type v89 = v87;
        uint64_t v90 = v89 + 4;
      }
      *((void *)v1 + 8) = v90;
    }
    if (v70) {
      atomic_fetch_add_explicit(&v70->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v68 = v72;
    unint64_t v67 = v70;
    if (v71)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v71);
      uint64_t v68 = v72;
      unint64_t v67 = v70;
    }
  }
  if (v70) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v70);
  }
  uint64_t v4 = v117;
  if (v71) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v71);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v118);
  if (v126) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v126);
  }
  if (SHIBYTE(v129) < 0) {
    operator delete(__dst);
  }
  std::basic_string<char16_t> __dst = (void ***)&v130;
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
  uint64_t v99 = (char *)*((void *)v1 + 7);
  uint64_t v100 = (char *)*((void *)v1 + 8);
  if (v99 != v100)
  {
    if (*((_DWORD *)v100 - 1) != v117)
    {
      unint64_t v101 = *((void *)v1 + 9);
      if ((unint64_t)v100 >= v101)
      {
        uint64_t v103 = (v100 - v99) >> 2;
        unint64_t v104 = v103 + 1;
        if ((unint64_t)(v103 + 1) >> 62) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v105 = v101 - (void)v99;
        if (v105 >> 1 > v104) {
          unint64_t v104 = v105 >> 1;
        }
        BOOL v12 = (unint64_t)v105 >= 0x7FFFFFFFFFFFFFFCLL;
        unint64_t v106 = 0x3FFFFFFFFFFFFFFFLL;
        if (!v12) {
          unint64_t v106 = v104;
        }
        if (v106)
        {
          unint64_t v106 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v106);
          uint64_t v99 = (char *)*((void *)v1 + 7);
          uint64_t v100 = (char *)*((void *)v1 + 8);
        }
        else
        {
          uint64_t v107 = 0;
        }
        std::basic_string<char16_t> v108 = (_DWORD *)(v106 + 4 * v103);
        unint64_t v109 = v106 + 4 * v107;
        _DWORD *v108 = v117;
        uint64_t v102 = v108 + 1;
        while (v100 != v99)
        {
          int v110 = *((_DWORD *)v100 - 1);
          v100 -= 4;
          *--std::basic_string<char16_t> v108 = v110;
        }
        *((void *)v1 + 7) = v108;
        *((void *)v1 + 8) = v102;
        *((void *)v1 + 9) = v109;
        if (v99)
        {
          operator delete(v99);
          uint64_t v99 = *v122;
        }
        else
        {
          uint64_t v99 = (char *)v108;
        }
      }
      else
      {
        *(_DWORD *)uint64_t v100 = v117;
        uint64_t v102 = v100 + 4;
      }
      *((void *)v1 + 8) = v102;
    }
    uint64_t v111 = *((int *)v1 + 20);
    *((_DWORD *)v1 + 20) = v111 + 1;
    uint64_t v4 = *(unsigned int *)&v99[4 * v111];
  }
LABEL_175:
  *((_DWORD *)v1 + 21) = v4;
  return v4;
}

void sub_1D2D072FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,std::__shared_weak_count *a23,char *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  __cxa_free_exception(v30);
  if (a23) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a23);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  std::basic_string<char16_t> __p = &a30;
  std::vector<std::shared_ptr<morphun::dialog::DucConcept>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::GermanicTokenExtractorIterator::~GermanicTokenExtractorIterator(morphun::tokenizer::GermanicTokenExtractorIterator *this)
{
  morphun::tokenizer::GermanicTokenExtractorIterator::~GermanicTokenExtractorIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;

  *(void *)this = &unk_1F2A118D8;
  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator((morphun::tokenizer::GermanicTokenExtractorIterator *)((char *)this + 16));
}

void non-virtual thunk to'morphun::analysis::stemmer::FrStemFilter::~FrStemFilter(morphun::analysis::stemmer::FrStemFilter *this)
{
  uint64_t v1 = (morphun::analysis::stemmer::FrStemFilter *)((char *)this - 104);
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(this, (uint64_t *)&off_1F2A07D58);
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07D28);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter *v1;
  uint64_t vars8;

  uint64_t v1 = (morphun::analysis::stemmer::FrStemFilter *)((char *)this - 104);
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(this, (uint64_t *)&off_1F2A07D58);

  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07D28);
}

void virtual thunk to'morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void virtual thunk to'morphun::analysis::MorphologicalAnalyzer::~MorphologicalAnalyzer(morphun::analysis::MorphologicalAnalyzer *this)
{
  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 32);
  *(void *)uint64_t v1 = &off_1F2A0FDB0;
  uint64_t v2 = (void *)*((void *)v1 + 25);
  if (v2)
  {
    *((void *)v1 + 26) = v2;
    operator delete(v2);
  }
  uint64_t v4 = (void **)(v1 + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = (void *)*((void *)v1 + 19);
  if (v3)
  {
    *((void *)v1 + 20) = v3;
    operator delete(v3);
  }
  *(void *)uint64_t v1 = &unk_1F29FFA58;

  JUMPOUT(0x1D942B8B0);
}

{
  char *v1;
  void *v2;
  void *v3;
  void **v4;
  uint64_t vars8;

  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 32);
  *(void *)uint64_t v1 = &off_1F2A0FDB0;
  uint64_t v2 = (void *)*((void *)v1 + 25);
  if (v2)
  {
    *((void *)v1 + 26) = v2;
    operator delete(v2);
  }
  uint64_t v4 = (void **)(v1 + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = (void *)*((void *)v1 + 19);
  if (v3)
  {
    *((void *)v1 + 20) = v3;
    operator delete(v3);
  }
  *(void *)uint64_t v1 = &unk_1F29FFA58;
}

void *morphun::analysis::stemmer::FrStemFilter::reset(morphun::analysis::stemmer::FrStemFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 55) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 56) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((void *)this + 57) = result;
  return result;
}

uint64_t morphun::analysis::stemmer::FrStemFilter::incrementToken(morphun::analysis::stemmer::FrStemFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2) {
    goto LABEL_63;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (!v3) {
    return v3;
  }
  uint64_t v4 = *((void *)this + 55);
  if (v4)
  {
    if ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4)) {
      return v3;
    }
  }
  uint64_t v5 = (void *)*((void *)this + 54);
  if (!v5)
  {
LABEL_63:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  int v6 = (UChar *)((char *)v5 + *(void *)(*v5 - 96));
  uint64_t v33 = 0;
  if (*((char *)v6 + 23) < 0)
  {
    uint64_t v8 = *(const UChar **)v6;
    uint64_t v7 = *((void *)v6 + 1);
  }
  else
  {
    uint64_t v7 = *((unsigned __int8 *)v6 + 23);
    uint64_t v8 = v6;
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v33, v8, v7);
  if (*((char *)v6 + 23) < 0)
  {
    uint64_t v10 = *(void *)v6;
    std::basic_string<char16_t>::size_type v9 = *((void *)v6 + 1);
  }
  else
  {
    std::basic_string<char16_t>::size_type v9 = *((unsigned __int8 *)v6 + 23);
    uint64_t v10 = (uint64_t)v6;
  }
  morphun::analysis::MorphologicalAnalyzerUtil::analyze_word((uint64_t)&__p, v10, v9, v33, *((void *)this + 57), (uint64_t *)this + 13, 0);
  if (v32 && v31 < 0) {
    operator delete(__p);
  }
  if (*((char *)v6 + 23) < 0)
  {
    BOOL v12 = v6;
    int v6 = *(UChar **)v6;
    std::basic_string<char16_t>::size_type v11 = *((void *)v12 + 1);
  }
  else
  {
    std::basic_string<char16_t>::size_type v11 = *((unsigned __int8 *)v6 + 23);
  }
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::getLemma(&__str, (uint64_t)this + 104, v6, v11, v33);
  unint64_t v13 = (std::basic_string<char16_t> *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96));
  if (v29)
  {
    std::basic_string<char16_t>::operator=(v13, &__str);
    goto LABEL_52;
  }
  if (SHIBYTE(v13->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = v13->__r_.__value_.__l.__size_;
    if ((int)size >= 6)
    {
      LODWORD(v15) = size - 1;
      std::basic_string<char16_t>::size_type v18 = v13->__r_.__value_.__r.__words[0];
      int v20 = *(unsigned __int16 *)(v13->__r_.__value_.__r.__words[0] + 2 * (size - 1));
      if (v20 == 120)
      {
        if (*(_WORD *)(v18 + 2 * (size - 3)) != 97) {
          goto LABEL_51;
        }
        uint64_t v17 = (size - 2);
        if (*(_WORD *)(v18 + 2 * v17) != 117) {
          goto LABEL_51;
        }
LABEL_31:
        *(_WORD *)(v18 + 2 * v17) = 108;
        goto LABEL_51;
      }
      if (v20 != 115) {
        LODWORD(v15) = v13->__r_.__value_.__l.__size_;
      }
      if (*(_WORD *)(v18 + 2 * (v15 - 1)) == 114) {
        LODWORD(v15) = v15 - 1;
      }
      if (*(_WORD *)(v18 + 2 * (v15 - 1)) == 101) {
        LODWORD(v15) = v15 - 1;
      }
      if (*(_WORD *)(v18 + 2 * (v15 - 1)) == 233) {
        LODWORD(v15) = v15 - 1;
      }
LABEL_49:
      if (*(unsigned __int16 *)(v18 + 2 * (v15 - 1)) == *(unsigned __int16 *)(v18
                                                                                             + 2
                                                                                             * (v15 - 2)))
        LODWORD(v15) = v15 - 1;
      goto LABEL_51;
    }
    std::basic_string<char16_t>::size_type v15 = v13->__r_.__value_.__l.__size_;
  }
  else
  {
    unsigned int v14 = HIBYTE(v13->__r_.__value_.__r.__words[2]);
    LODWORD(v15) = v14;
    if (v14 >= 6)
    {
      LODWORD(v15) = v14 - 1;
      int v16 = (unsigned __int16)v13->__r_.__value_.__s.__data_[v14 - 1];
      if (v16 == 120)
      {
        if (v13->__r_.__value_.__s.__data_[v14 - 3] != 97) {
          goto LABEL_51;
        }
        uint64_t v17 = v14 - 2;
        if (v13->__r_.__value_.__s.__data_[v17] != 117) {
          goto LABEL_51;
        }
        std::basic_string<char16_t>::size_type v18 = *((void *)this + 54) + *(void *)(**((void **)this + 54) - 96);
        goto LABEL_31;
      }
      if (v16 != 115) {
        LODWORD(v15) = HIBYTE(v13->__r_.__value_.__r.__words[2]);
      }
      if (v13->__r_.__value_.__s.__data_[(v15 - 1)] == 114) {
        LODWORD(v15) = v15 - 1;
      }
      if (v13->__r_.__value_.__s.__data_[(v15 - 1)] == 101) {
        LODWORD(v15) = v15 - 1;
      }
      if (v13->__r_.__value_.__s.__data_[(v15 - 1)] == 233) {
        LODWORD(v15) = v15 - 1;
      }
      std::basic_string<char16_t>::size_type v18 = *((void *)this + 54) + *(void *)(**((void **)this + 54) - 96);
      goto LABEL_49;
    }
  }
LABEL_51:
  std::basic_string<char16_t>::resize(v13, (int)v15, 0);
LABEL_52:
  if (*((void *)this + 56))
  {
    uint64_t v27 = 0;
    std::basic_string<char16_t> v21 = (const UChar *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96));
    if (*((char *)v21 + 23) < 0)
    {
      std::basic_string<char16_t> v21 = *(const UChar **)v21;
      uint64_t v22 = *(void *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96) + 8);
    }
    else
    {
      uint64_t v22 = *((unsigned __int8 *)v21 + 23);
    }
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v27, v21, v22))
    {
      uint64_t v23 = *((void *)this + 56);
      if (!v23)
      {
        unint64_t v26 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v26);
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v23 + 64))(v23, v27);
    }
  }
  if (v29 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_1D2D07B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  __cxa_free_exception(v16);
  if (a16)
  {
    if (a15 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::FrStemFilter::~FrStemFilter(morphun::analysis::stemmer::FrStemFilter *this)
{
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer((morphun::analysis::stemmer::FrStemFilter *)((char *)this + 104), (uint64_t *)&off_1F2A07D58);
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07D28);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer((morphun::analysis::stemmer::FrStemFilter *)((char *)this + 104), (uint64_t *)&off_1F2A07D58);

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07D28);
}

void morphun::transliteration::Transliterator::~Transliterator(void **this, void **a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v2 - 5)) = a2[1];
}

double morphun::transliteration::Transliterator::matchCase(uint64_t a1, uint64_t a2, std::basic_string<char16_t>::value_type *a3, std::basic_string<char16_t>::size_type a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7)
  {
    uint64_t v10 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a2);
    std::basic_string<char16_t>::__assign_external(v10, a3, a4);
  }
  else if (morphun::util::StringViewUtils::isAllUpperCase(a5, a6))
  {
    morphun::util::StringViewUtils::uppercase(a2, (const UChar *)a3, a4, a1 + 8);
  }
  else
  {
    npc<std::basic_string<char16_t>>(a2);
    morphun::util::StringViewUtils::capitalizeFirst((UChar *)a3, a4, a1 + 8, (uint64_t)&v13);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    double result = *(double *)&v13;
    *(_OWORD *)a2 = v13;
    *(void *)(a2 + 16) = v14;
  }
  return result;
}

void sub_1D2D07E30(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D07E94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::KoGrammarSynthesizer::NONLATIN_VOWELS(morphun::grammar::synthesis::KoGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::KoGrammarSynthesizer::NONLATIN_VOWELS(void)::NONLATIN_VOWELS_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2D07F5C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

morphun::util::UnicodeSetUtils *morphun::util::UnicodeSetUtils::removeAll(morphun::util::UnicodeSetUtils *this, icu4cxx::UnicodeSet *a2, const icu4cxx::UnicodeSet *a3)
{
  uint64_t v5 = (void *)morphun::util::Validate::notNull<icu4cxx::UnicodeSet>((uint64_t)this);
  MEMORY[0x1D942C1C0](*v5, *(void *)a2);
  return this;
}

uint64_t morphun::grammar::synthesis::KoGrammarSynthesizer::VOWELS_WITH_RIEUL(morphun::grammar::synthesis::KoGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::KoGrammarSynthesizer::VOWELS_WITH_RIEUL(void)::VOWELS_WITH_RIEUL_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2D08084(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::KoGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::KoGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  __dst[126] = *(void **)MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, (char *)word_1D2ECE95E);
  operator new();
}

void sub_1D2D09020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  MEMORY[0x1D942B8B0](v77, 0x1012C40EC159624);
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&a61);
  if (a54 < 0) {
    operator delete(__p);
  }
  if (a60 < 0) {
    operator delete(a55);
  }
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&a76);
  if (a73 < 0) {
    operator delete(a72);
  }
  if (a75 < 0) {
    operator delete(a74);
  }
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&STACK[0x280]);
  if (SLOBYTE(STACK[0x267]) < 0) {
    operator delete((void *)STACK[0x250]);
  }
  if (SLOBYTE(STACK[0x27F]) < 0) {
    operator delete((void *)STACK[0x268]);
  }
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&STACK[0x308]);
  if (SLOBYTE(STACK[0x2EF]) < 0) {
    operator delete((void *)STACK[0x2D8]);
  }
  if (SLOBYTE(STACK[0x307]) < 0) {
    operator delete((void *)STACK[0x2F0]);
  }
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&STACK[0x390]);
  if (SLOBYTE(STACK[0x377]) < 0) {
    operator delete((void *)STACK[0x360]);
  }
  if (SLOBYTE(STACK[0x38F]) < 0) {
    operator delete((void *)STACK[0x378]);
  }
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&STACK[0x418]);
  if (SLOBYTE(STACK[0x3FF]) < 0) {
    operator delete((void *)STACK[0x3E8]);
  }
  if (SLOBYTE(STACK[0x417]) < 0) {
    operator delete((void *)STACK[0x400]);
  }
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&STACK[0x4A0]);
  if (SLOBYTE(STACK[0x487]) < 0) {
    operator delete((void *)STACK[0x470]);
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete((void *)STACK[0x488]);
  }
  while (v76 != &STACK[0x510])
  {
    v76 -= 14;
    std::pair<std::basic_string<char16_t> const,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>::~pair((uint64_t)v76);
  }
  MEMORY[0x1D942B8B0](a11, 0x10E1C40E3E4E422);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::Analyzer::getOffsetGap(morphun::analysis::Analyzer *this)
{
  return 1;
}

uint64_t morphun::analysis::Analyzer::getPositionIncrementGap(morphun::analysis::Analyzer *this)
{
  return 0;
}

UText *morphun::analysis::Analyzer::initReader(morphun::analysis::Analyzer *this, UText *a2)
{
  return a2;
}

morphun::analysis::Analyzer *morphun::analysis::Analyzer::Analyzer(morphun::analysis::Analyzer *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  uint64_t v4 = (morphun::analysis::Analyzer *)a2[1];
  *(void *)((char *)this + *(void *)(v3 - 40)) = v4;
  *((void *)this + 6) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = (char *)this + 24;
  *((void *)this + 7) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = (char *)this + 48;
  *((void *)this + 1) = morphun::analysis::Analyzer::GLOBAL_REUSE_STRATEGY(v4);
  return this;
}

void sub_1D2D096C8(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v2);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::Analyzer::GLOBAL_REUSE_STRATEGY(morphun::analysis::Analyzer *this)
{
  {
    operator new();
  }
  return morphun::analysis::Analyzer::GLOBAL_REUSE_STRATEGY(void)::GLOBAL_REUSE_STRATEGY_;
}

void sub_1D2D09770(_Unwind_Exception *a1)
{
}

void morphun::analysis::Analyzer::~Analyzer(morphun::analysis::Analyzer *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  uint64_t v4 = (char *)*((void *)this + 2);
  uint64_t v5 = (char *)this + 24;
  if (v4 != (char *)this + 24)
  {
    do
    {
      uint64_t v6 = *((void *)v4 + 4);
      if (v6) {
        (*(void (**)(uint64_t))(*(void *)v6 + 16))(v6);
      }
      uint64_t v7 = (char *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = *(char **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (char *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != v5);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 6));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 3));
}

morphun::analysis::TokenStreamContainer *morphun::analysis::Analyzer::tokenStream@<X0>(morphun::analysis::Analyzer *this@<X0>, UText *a2@<X1>, morphun::analysis::TokenStreamContainer *a3@<X8>)
{
  uint64_t v4 = *((void *)this + 1);
  if (!v4
    || (uint64_t v7 = (*(uint64_t (**)(uint64_t, morphun::analysis::Analyzer *))(*(void *)v4 + 24))(v4, this)) == 0)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v8 = (morphun::analysis::Analyzer_TokenStreamComponents *)v7;
  uint64_t v9 = (*(uint64_t (**)(morphun::analysis::Analyzer *, UText *))(*(void *)this + 32))(this, a2);
  (*(void (**)(morphun::analysis::Analyzer_TokenStreamComponents *, uint64_t))(*(void *)v8 + 24))(v8, v9);

  return morphun::analysis::TokenStreamContainer::TokenStreamContainer(a3, this, v8);
}

void sub_1D2D099E4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dictionary::DictionaryKeyIterator::~DictionaryKeyIterator(morphun::dictionary::DictionaryKeyIterator *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dictionary::DictionaryKeyIterator::~DictionaryKeyIterator(morphun::dictionary::DictionaryKeyIterator *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  uint64_t v3 = *((void *)this + 1);
  if (v3)
  {
    uint64_t v4 = morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::~MarisaTrieIterator(v3);
    MEMORY[0x1D942B8B0](v4, 0x1072C40BEE00F91);
  }
}

void morphun::dictionary::DictionaryKeyIterator::DictionaryKeyIterator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v2 - 40)) = a2[1];
  operator new();
}

void sub_1D2D09C4C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1072C40BEE00F91);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D09CC0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::operator*(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 112))
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)&word_1D2ED0AEE);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v5, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::basic_string<char16_t> v5 = __p;
    }
    uint64_t v2 = (void **)(a1 + 80);
    if (*(char *)(a1 + 103) < 0) {
      operator delete(*v2);
    }
    *(_OWORD *)uint64_t v2 = *(_OWORD *)&v5.__r_.__value_.__l.__data_;
    *(void *)(a1 + 96) = *((void *)&v5.__r_.__value_.__l + 2);
    *(void *)(a1 + 104) = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    morphun::dictionary::metadata::CharsetConverter::decode(*(void *)a1 + 8, (std::basic_string<char16_t> *)(a1 + 80), *(void *)(a1 + 32), *(_DWORD *)(a1 + 40));
    *(void *)(a1 + 104) = morphun::dictionary::metadata::CompressedArray<unsigned long long>::read(*(void *)a1 + 24, *(_DWORD *)(a1 + 44));
  }
  return a1 + 80;
}

void sub_1D2D09DA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::DictionaryKeyIterator::operator++(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  npc<morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>>(v2);
  if ((marisa::Trie::predictive_search(*(marisa::Trie **)v2, (marisa::Agent *)(v2 + 8)) & 1) == 0) {
    *(unsigned char *)(v2 + 112) = 1;
  }
  return a1;
}

uint64_t morphun::dictionary::DictionaryKeyIterator::operator*(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>>(*(void *)(a1 + 8));

  return morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::operator*(v1);
}

void morphun::dictionary::DictionaryKeyIterator::DictionaryKeyIterator(void *a1)
{
  *a1 = &off_1F2A084B0;
  operator new();
}

void sub_1D2D09F0C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1072C40BEE00F91);
  _Unwind_Resume(a1);
}

uint64_t *morphun::dictionary::DictionaryKeyIterator::DictionaryKeyIterator(uint64_t *result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  *double result = *a2;
  *(uint64_t *)((char *)result + *(void *)(v3 - 40)) = a2[1];
  result[1] = *(void *)(a3 + 8);
  *(void *)(a3 + 8) = 0;
  return result;
}

void *morphun::dictionary::DictionaryKeyIterator::DictionaryKeyIterator(void *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  *double result = &off_1F2A084B0;
  result[1] = v2;
  *(void *)(a2 + 8) = 0;
  return result;
}

void virtual thunk to'morphun::dictionary::DictionaryKeyIterator::~DictionaryKeyIterator(morphun::dictionary::DictionaryKeyIterator *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

BOOL morphun::dictionary::DictionaryKeyIterator::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (*(void *)v2 != *(void *)v3 || *(unsigned __int8 *)(v2 + 112) != *(unsigned __int8 *)(v3 + 112)) {
    return 0;
  }
  if (*(unsigned char *)(v2 + 112)) {
    return 1;
  }
  return *(_DWORD *)(v2 + 44) == *(_DWORD *)(v3 + 44);
}

BOOL morphun::dictionary::DictionaryKeyIterator::operator!=(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (*(void *)v2 != *(void *)v3 || *(unsigned __int8 *)(v2 + 112) != *(unsigned __int8 *)(v3 + 112)) {
    return 1;
  }
  if (*(unsigned char *)(v2 + 112)) {
    return 0;
  }
  return *(_DWORD *)(v2 + 44) != *(_DWORD *)(v3 + 44);
}

void morphun::dictionary::DictionaryKeyIterator::begin(morphun::dictionary::DictionaryKeyIterator *this@<X0>, void *a2@<X8>)
{
  uint64_t v3 = npc<morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>>(*((void *)this + 1));
  if (*(char *)(v3 + 79) < 0)
  {
    uint64_t v4 = *(__int16 **)(v3 + 56);
    unint64_t v5 = *(void *)(v3 + 64);
  }
  else
  {
    uint64_t v4 = (__int16 *)(v3 + 56);
    unint64_t v5 = *(unsigned __int8 *)(v3 + 79);
  }
  morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::MarisaTrieIterator((uint64_t)v6, *(void *)v3, v4, v5);
  morphun::dictionary::DictionaryKeyIterator::DictionaryKeyIterator(a2);
}

void sub_1D2D0A170(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::~MarisaTrieIterator((uint64_t)va);
  _Unwind_Resume(a1);
}

void morphun::dictionary::DictionaryKeyIterator::end(morphun::dictionary::DictionaryKeyIterator *this@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)npc<morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>>(*((void *)this + 1));
  morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::MarisaTrieIterator((uint64_t)v4, *v3, word_1D2ECE9BE, 1uLL);
  morphun::dictionary::DictionaryKeyIterator::DictionaryKeyIterator(a2);
}

void sub_1D2D0A1E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::dictionary::metadata::MarisaTrieIterator<unsigned long long>::~MarisaTrieIterator((uint64_t)va);
  _Unwind_Resume(a1);
}

void morphun::util::AutoFileDescriptor::~AutoFileDescriptor(morphun::util::AutoFileDescriptor *this)
{
  int v1 = *(_DWORD *)this;
  if ((v1 & 0x80000000) == 0) {
    close(v1);
  }
}

uint64_t morphun::grammar::synthesis::GrammarSynthesizerFactory::addSemanticFeatures(morphun::grammar::synthesis::GrammarSynthesizerFactory *this, const morphun::util::ULocale *a2, morphun::dialog::SemanticFeatureModel *a3)
{
  uint64_t v5 = morphun::grammar::synthesis::GRAMMAR_SYNTHESIZER_MAP(this);
  uint64_t v6 = (morphun::grammar::synthesis *)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v5, (uint64_t)this);
  uint64_t v7 = (morphun::grammar::synthesis *)morphun::grammar::synthesis::GRAMMAR_SYNTHESIZER_MAP(v6);
  if ((morphun::grammar::synthesis *)((char *)v7 + 8) == v6)
  {
    uint64_t v8 = morphun::grammar::synthesis::GRAMMAR_SYNTHESIZER_MAP(v7);
    morphun::util::ULocale::getFallback(this, (uint64_t)v10);
    uint64_t v6 = (morphun::grammar::synthesis *)std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::find<morphun::util::ULocale>(v8, (uint64_t)v10);
  }
  uint64_t result = morphun::grammar::synthesis::GRAMMAR_SYNTHESIZER_MAP(v7);
  if (v6 != (morphun::grammar::synthesis *)(result + 8)) {
    return (*((uint64_t (**)(const morphun::util::ULocale *))v6 + 20))(a2);
  }
  return result;
}

uint64_t morphun::grammar::synthesis::GRAMMAR_SYNTHESIZER_MAP(morphun::grammar::synthesis *this)
{
  MEMORY[0x1F4188790](this);
  {
    operator new();
  }
  uint64_t result = morphun::grammar::synthesis::GRAMMAR_SYNTHESIZER_MAP(void)::GRAMMAR_SYNTHESIZER_MAP_;
  if (!morphun::grammar::synthesis::GRAMMAR_SYNTHESIZER_MAP(void)::GRAMMAR_SYNTHESIZER_MAP_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D0A8E0(_Unwind_Exception *a1)
{
  for (uint64_t i = 4080; i != -136; i -= 136)
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<morphun::util::ULocale,void (*)(morphun::dialog::SemanticFeatureModel &)>::map[abi:ne180100](uint64_t **a1, const morphun::util::ULocale *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = (const morphun::util::ULocale *)((char *)a2 + 136 * a3);
    while (1)
    {
      uint64_t v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)(v8 + 4), (uint64_t)v5)) {
          break;
        }
      }
      BOOL v12 = (uint64_t **)v4;
      long long v13 = (uint64_t **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      long long v13 = (uint64_t **)(v8 + 1);
      if (!v8[1])
      {
        BOOL v12 = (uint64_t **)v8;
LABEL_19:
        int v16 = (uint64_t *)operator new(0xA8uLL);
        v19[0] = v16;
        v19[1] = v4;
        char v20 = 0;
        morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v16 + 4), v5);
        v16[20] = *((void *)v5 + 16);
        char v20 = 1;
        *int v16 = 0;
        v16[1] = 0;
        v16[2] = (uint64_t)v12;
        std::basic_string<char16_t> *v13 = v16;
        uint64_t v17 = (uint64_t *)**a1;
        if (v17)
        {
          *a1 = v17;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
        v19[0] = 0;
        std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)v19);
      }
LABEL_22:
      uint64_t v5 = (const morphun::util::ULocale *)((char *)v5 + 136);
      if (v5 == v6) {
        return a1;
      }
    }
    BOOL v12 = (uint64_t **)v4;
    long long v13 = (uint64_t **)v4;
    if (v7)
    {
      uint64_t v14 = v7;
      while (1)
      {
        while (1)
        {
          BOOL v12 = (uint64_t **)v14;
          uint64_t v15 = (uint64_t)(v14 + 4);
          if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)v5, (uint64_t)(v14 + 4))) {
            break;
          }
          uint64_t v14 = *v12;
          long long v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](v15, (uint64_t)v5)) {
          goto LABEL_22;
        }
        long long v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D0ABB4(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammarSynthesizerFactory::getKnownLocales(morphun::grammar::synthesis::GrammarSynthesizerFactory *this)
{
  {
    if (v2) {
      morphun::grammar::synthesis::initKnownLocales(v2);
    }
  }
  uint64_t result = morphun::grammar::synthesis::GrammarSynthesizerFactory::getKnownLocales(void)::KNOWN_LOCALES_;
  if (!morphun::grammar::synthesis::GrammarSynthesizerFactory::getKnownLocales(void)::KNOWN_LOCALES_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D0AC6C(_Unwind_Exception *a1)
{
}

void morphun::grammar::synthesis::initKnownLocales(morphun::grammar::synthesis *this)
{
}

void morphun::analysis::HeAnalyzer::addWordNormalizationFilter(morphun::analysis::HeAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D0AF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, char a15)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a13);
  uint64_t v17 = 0;
  while (1)
  {
    if (*(&a15 + v17 + 71) < 0) {
      operator delete(*(void **)(&a15 + v17 + 48));
    }
    v17 -= 24;
    if (v17 == -72)
    {
      MEMORY[0x1D942B8B0](v15, 0x10E1C4052C5F28CLL);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t morphun::analysis::HeAnalyzer::addStopFilter(uint64_t a1, uint64_t a2)
{
  return a2;
}

void morphun::analysis::HeAnalyzer::~HeAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06E40);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06E40);
}

void sub_1D2D0B040(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_STRONG(morphun::grammar::synthesis::DeGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_STRONG(void)::DECLENSION_STRONG_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D0B0E4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_MIXED(morphun::grammar::synthesis::DeGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_MIXED(void)::DECLENSION_MIXED_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D0B1AC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_WEAK(morphun::grammar::synthesis::DeGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_WEAK(void)::DECLENSION_WEAK_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D0B274(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DeGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::DeGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  v3[1] = 0;
  uint64_t v2 = v3;
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 273, "e");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 1041, L"seiner");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 785, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 529, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 289, "s");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 1057, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 801, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 545, "s");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 305, L"es");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 1073, L"seiner");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 817, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 561, L"es");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 274, "s");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 1042, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 786, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 530, "s");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 290, "s");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 1058, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 802, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 546, "s");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 306, "s");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 1074, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 818, "i");
  std::__tree<std::__value_type<int,std::u16string_view>,std::__map_value_compare<int,std::__value_type<int,std::u16string_view>,std::less<int>,true>,std::allocator<std::__value_type<int,std::u16string_view>>>::__emplace_unique_impl<unsigned int,char16_t const(&)[2]>(&v2, 562, "s");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "p");
  operator new();
}

void sub_1D2D0E26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,void *a44)
{
  MEMORY[0x1D942B8B0](v44, 0x1012C40EC159624);
  MEMORY[0x1D942B8B0](a12, 0x10F3C404B5F593DLL);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a14);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a17);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a20);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a23);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a26);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a29);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a32);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a35);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a38);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a41);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a44);
  _Unwind_Resume(a1);
}

void sub_1D2D0EB74()
{
}

void sub_1D2D0EB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void **a46)
{
}

void sub_1D2D0EBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void **a46)
{
}

void sub_1D2D0EC08()
{
}

void sub_1D2D0EC24()
{
}

void sub_1D2D0EC40()
{
}

void sub_1D2D0EC5C()
{
}

void sub_1D2D0EC78()
{
}

void sub_1D2D0EC94()
{
}

void sub_1D2D0ECB0()
{
}

void sub_1D2D0ECCC()
{
}

void sub_1D2D0ECF0()
{
  while (1)
  {
    if (*(char *)(v0 - 1) < 0) {
      operator delete(*(void **)(v0 - 24));
    }
    v0 -= 24;
    if (v0 == v1) {
      JUMPOUT(0x1D2D0ED10);
    }
  }
}

void sub_1D2D0ED40()
{
  uint64_t v2 = v0;
  while (1)
  {
    uint64_t v4 = *(void **)(v2 - 24);
    v2 -= 24;
    uint64_t v3 = v4;
    if (v4)
    {
      *(void *)(v0 - 16) = v3;
      operator delete(v3);
    }
    uint64_t v0 = v2;
    if (v2 == v1 - 256) {
      JUMPOUT(0x1D2D0EAE0);
    }
  }
}

void sub_1D2D0ED6C()
{
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::DeGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Count>>(morphun::grammar::synthesis::DeGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Count>>(morphun::grammar::synthesis::DeGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2D0EF58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      BOOL v12 = (char **)v4;
      long long v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      long long v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        BOOL v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    BOOL v12 = (char **)v4;
    long long v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          BOOL v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          long long v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        long long v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D0F180(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D0F1F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::DeGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::DeGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::DeGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2D0F428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  while (1)
  {
    if (*((char *)v10 - 9) < 0) {
      operator delete((void *)*(v10 - 4));
    }
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D942B8B0](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      BOOL v12 = (char **)v4;
      long long v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      long long v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        BOOL v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    BOOL v12 = (char **)v4;
    long long v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          BOOL v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          long long v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        long long v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D0F664(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D0F6DC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer::getCase(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::DeGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Case>>(morphun::grammar::synthesis::DeGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    uint64_t v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Case>>(morphun::grammar::synthesis::DeGrammarSynthesizer::getCase(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2D0F948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  while (1)
  {
    if (*((char *)v10 - 9) < 0) {
      operator delete((void *)*(v10 - 4));
    }
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D942B8B0](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Case>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      uint64_t v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            uint64_t v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      BOOL v12 = (char **)v4;
      long long v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      long long v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        BOOL v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        uint64_t v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        std::basic_string<char16_t> *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    BOOL v12 = (char **)v4;
    long long v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          BOOL v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          long long v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        long long v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D0FB88(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DeGrammarSynthesizer::Case>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D0FC00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::dictionary::metadata::StringArrayContainer *morphun::dictionary::metadata::StringArrayContainer::StringArrayContainer(morphun::dictionary::metadata::StringArrayContainer *this, morphun::util::MemoryMappedFile *a2)
{
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LODWORD(v19.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, &v19);
  *(_DWORD *)this = v19.__r_.__value_.__l.__data_;
  uint64_t v4 = (void *)npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  LODWORD(v19.__r_.__value_.__l.__data_) = 0;
  morphun::util::MemoryMappedFile::read<int>(v4, &v19);
  *((_DWORD *)this + 1) = v19.__r_.__value_.__l.__data_;
  uint64_t v5 = (void *)npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  uint64_t v6 = *(int *)this;
  v19.__r_.__value_.__r.__words[0] = 0;
  morphun::util::MemoryMappedFile::read<int *>(v5, &v19, 4 * v6);
  *((void *)this + 1) = v19.__r_.__value_.__r.__words[0];
  npc<morphun::util::MemoryMappedFile>((uint64_t)a2);
  uint64_t v7 = *((int *)this + 1);
  uint64_t v8 = *((void *)a2 + 2);
  if (*((void *)a2 + 1) - v8 < (unint64_t)(2 * v7))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(2 * (int)v7), &v16);
    std::basic_string<char16_t>::insert(&v16, (std::basic_string<char16_t>::size_type)"I", (const std::basic_string<char16_t>::value_type *)0x23, v12);
    std::basic_string<char16_t> v17 = v16;
    memset(&v16, 0, sizeof(v16));
    std::basic_string<char16_t>::append(&v17, (const std::basic_string<char16_t>::value_type *)" ", 0x13uLL);
    std::basic_string<char16_t> v18 = v17;
    memset(&v17, 0, sizeof(v17));
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(*((_DWORD *)a2 + 2) - *((_DWORD *)a2 + 4)), &v15);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v13 = &v15;
    }
    else {
      long long v13 = (std::basic_string<char16_t> *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v15.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v18, (const std::basic_string<char16_t>::value_type *)v13, size);
    std::basic_string<char16_t> v19 = v18;
    memset(&v18, 0, sizeof(v18));
    morphun::exception::Throwable::Throwable((uint64_t)exception, (long long *)&v19);
    void *exception = &unk_1F2A11298;
  }
  uint64_t v9 = *(void *)a2 + v8;
  *((void *)a2 + 2) = v8 + 2 * v7;
  *((void *)this + 2) = v9;
  *((unsigned char *)this + 24) = 0;
  return this;
}

void sub_1D2D0FE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (*(char *)(v34 - 57) < 0) {
    operator delete(*(void **)(v34 - 80));
  }
  if (v33 < 0) {
    operator delete(v31);
  }
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v32 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v32)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v30);
  goto LABEL_14;
}

void sub_1D2D0FF04(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dictionary::metadata::StringArrayContainer::StringArrayContainer(void *a1, uint64_t a2)
{
  *a1 = *(void *)(a2 + 16);
  operator new[]();
}

void sub_1D2D1022C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
  {
    operator delete(__p);
    if ((v28 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v28)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v27);
  goto LABEL_6;
}

uint64_t npc<std::map<std::u16string_view,int>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

{
  morphun::exception::NullPointerException *exception;

  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D10330(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::StringArrayContainer::StringArrayContainer(uint64_t this)
{
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

void morphun::dictionary::metadata::StringArrayContainer::~StringArrayContainer(morphun::dictionary::metadata::StringArrayContainer *this)
{
  if (*((unsigned char *)this + 24))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      MEMORY[0x1D942B890](v2, 0x1000C8052888210);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      MEMORY[0x1D942B890](v3, 0x1000C80BDFB0063);
    }
  }
}

uint64_t morphun::dictionary::metadata::StringArrayContainer::write()
{
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();

  return std::ostream::write();
}

void *morphun::dictionary::metadata::StringArrayContainer::getString@<X0>(void *this@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  if ((a2 & 0x80000000) != 0 || (uint64_t v3 = (void *)a3, *(_DWORD *)this <= (signed int)a2))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "O");
    morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException((uint64_t)exception, &__dst);
  }
  uint64_t v4 = this[2];
  int v5 = *(_DWORD *)(this[1] + 4 * a2);
  if (v5 >= 0xBu)
  {
    uint64_t v6 = (v5 & 0xFC) + 4;
    if ((v5 | 3) != 0xB) {
      uint64_t v6 = v5 | 3;
    }
    uint64_t v7 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v6 + 1);
    v3[1] = v5;
    void v3[2] = v8 | 0x8000000000000000;
    *uint64_t v3 = v7;
    uint64_t v3 = v7;
  }
  else
  {
    *(unsigned char *)(a3 + 23) = v5;
    if (!(_BYTE)v5) {
      goto LABEL_10;
    }
  }
  this = memmove(v3, (const void *)(v4 + 2 * (v5 >> 8)), 2 * v5);
LABEL_10:
  *((_WORD *)v3 + v5) = 0;
  return this;
}

void sub_1D2D10540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  int v3 = *(_DWORD *)a1 - 1;
  if (*(int *)a1 >= 1)
  {
    int v4 = 0;
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(void *)(a1 + 16);
    do
    {
      int v7 = v4 + v3;
      if (v4 + v3 < 0 != __OFADD__(v4, v3)) {
        ++v7;
      }
      uint64_t result = (v7 >> 1);
      unint64_t v9 = *(_DWORD *)(v5 + 4 * (int)result);
      if (v9 >= a3) {
        unint64_t v10 = a3;
      }
      else {
        unint64_t v10 = *(_DWORD *)(v5 + 4 * (int)result);
      }
      if (v10)
      {
        BOOL v11 = (unsigned __int16 *)(v6 + (((unint64_t)*(unsigned int *)(v5 + 4 * (int)result) >> 7) & 0x1FFFFFE));
        std::basic_string<char16_t>::size_type v12 = a2;
        while (1)
        {
          unsigned int v13 = *v12;
          unsigned int v14 = *v11;
          if (v13 < v14) {
            break;
          }
          if (v14 < v13) {
            goto LABEL_16;
          }
          ++v12;
          ++v11;
          if (!--v10) {
            goto LABEL_13;
          }
        }
      }
      else
      {
LABEL_13:
        if (a3 == v9) {
          return result;
        }
        if (a3 >= v9)
        {
LABEL_16:
          int v4 = result + 1;
          continue;
        }
      }
      int v3 = result - 1;
    }
    while (v4 <= v3);
  }
  return 0xFFFFFFFFLL;
}

uint64_t morphun::dictionary::metadata::StringArrayContainer::getIdentifier(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  uint64_t result = morphun::dictionary::metadata::StringArrayContainer::getIdentifierIfAvailable(a1, a2, a3);
  if ((result & 0x80000000) != 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"String not found: ");
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(v9, a2, a3);
    if ((v10 & 0x80u) == 0) {
      int v7 = (const std::basic_string<char16_t>::value_type *)v9;
    }
    else {
      int v7 = (const std::basic_string<char16_t>::value_type *)v9[0];
    }
    if ((v10 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v8 = v10;
    }
    else {
      std::basic_string<char16_t>::size_type v8 = v9[1];
    }
    std::basic_string<char16_t>::append(&__dst, v7, v8);
    std::basic_string<char16_t> v12 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v12);
  }
  return result;
}

void sub_1D2D106E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a20 < 0)
  {
    operator delete(a15);
    if ((v26 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v26)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v27);
  goto LABEL_10;
}

uint64_t morphun::dictionary::metadata::StringArrayContainer::size(morphun::dictionary::metadata::StringArrayContainer *this)
{
  return *(unsigned int *)this;
}

void morphun::exception::FileNotFoundException::~FileNotFoundException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::FileNotFoundException::FileNotFoundException(morphun::exception::FileNotFoundException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A113B8;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A113B8;
  return result;
}

void *morphun::exception::FileNotFoundException::FileNotFoundException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A113B8;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A113B8;
  return result;
}

void morphun::dialog::language::KoCommonConceptFactory::quantifiedJoin(const morphun::dialog::SpeakableString *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, morphun::dialog::SpeakableString *a4@<X8>)
{
  morphun::dialog::SpeakableString::SpeakableString(a4, a1);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
  BOOL isFirstNonWhitespaceSeparableCharacter = morphun::lang::StringFilterUtil::isFirstNonWhitespaceSeparableCharacter(v7);
  if (!isFirstNonWhitespaceSeparableCharacter)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
    morphun::dialog::SpeakableString::SpeakableString(v12, (long long *)__p);
    morphun::dialog::SpeakableString::operator+((uint64_t)a4, (uint64_t)v12, v13);
    morphun::dialog::SpeakableString::operator=((uint64_t)a4, (uint64_t)v13);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
  }
  morphun::dialog::SpeakableString::operator+((uint64_t)a4, a2, v13);
  morphun::dialog::SpeakableString::operator=((uint64_t)a4, (uint64_t)v13);
  uint64_t v9 = *(unsigned __int8 *)(a3 + 23);
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  if (v9)
  {
    if (!isFirstNonWhitespaceSeparableCharacter)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
      morphun::dialog::SpeakableString::SpeakableString(v12, (long long *)__p);
      morphun::dialog::SpeakableString::operator+((uint64_t)a4, (uint64_t)v12, v13);
      morphun::dialog::SpeakableString::operator=((uint64_t)a4, (uint64_t)v13);
      if (v11 < 0) {
        operator delete(__p[0]);
      }
    }
    morphun::dialog::SpeakableString::SpeakableString(v12, (long long *)a3);
    morphun::dialog::SpeakableString::operator+((uint64_t)a4, (uint64_t)v12, v13);
    morphun::dialog::SpeakableString::operator=((uint64_t)a4, (uint64_t)v13);
  }
}

void sub_1D2D10A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KoCommonConceptFactory::createAndList()
{
}

void sub_1D2D10C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  morphun::dialog::SemanticConceptList::~SemanticConceptList(v15, (void ***)&off_1F2A05FC8);
  MEMORY[0x1D942B8B0](v15, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KoCommonConceptFactory::createOrList()
{
}

void sub_1D2D10D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::KoCommonConceptFactory::~KoCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A059A8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A059A8);
}

BOOL morphun::transliteration::FromRomanizationTransliterator::transliterate(uint64_t a1, UChar *a2, unint64_t a3, uint64_t a4)
{
  if (!morphun::util::UnicodeSetUtils::containsSome((void *)(a1 + 296), (uint64_t)a2, a3)) {
    return 0;
  }
  int isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase((uint64_t)a2, a3);
  std::basic_string<char16_t> v18 = 0;
  uint64_t v19 = 0;
  uint64_t v9 = a2;
  int v10 = a3;
  uint64_t v20 = 0;
  if ((isAllLowerCase & 1) == 0)
  {
    morphun::util::StringViewUtils::lowercase((uint64_t)&v18, a2, a3, a1 + 8);
    if (v20 >= 0) {
      uint64_t v9 = &v18;
    }
    else {
      uint64_t v9 = v18;
    }
    if (v20 >= 0) {
      int v10 = HIBYTE(v20);
    }
    else {
      int v10 = v19;
    }
  }
  unint64_t v11 = morphun::dictionary::metadata::MarisaTrie<int>::find(*(marisa::Trie **)(a1 + 288), (uint64_t)v9, v10);
  if (HIDWORD(v11))
  {
    morphun::dictionary::metadata::MarisaTrie<int>::getKey(&v21, (marisa::Trie *)(a1 + 216), v11);
    std::basic_string<char16_t> __p = v21;
    char v17 = 1;
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)v21.__r_.__value_.__r.__words[0];
    }
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v21.__r_.__value_.__l.__size_;
    }
    morphun::transliteration::Transliterator::matchCase(a1, a4, (std::basic_string<char16_t>::value_type *)p_p, size, (uint64_t)a2, a3, isAllLowerCase);
    BOOL v12 = 1;
    if (v17 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    LOBYTE(__p.__r_.__value_.__l.__data_) = 0;
    char v17 = 0;
    BOOL v12 = morphun::transliteration::ICUScriptTransliterator::transliterate(a1 + 312, a2, a3, a4);
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(v18);
  }
  return v12;
}

void sub_1D2D10F64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 && a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void morphun::transliteration::FromRomanizationTransliterator::~FromRomanizationTransliterator(morphun::transliteration::FromRomanizationTransliterator *this)
{
  *(void *)this = &off_1F2A08830;
  *((void *)this + 39) = &off_1F2A087A0;
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 480));
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 464));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 448));
  *((void *)this + 39) = &unk_1F29F4370;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 296));
  morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 136));
  *(void *)this = &unk_1F29F4400;

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A08830;
  *((void *)this + 39) = &off_1F2A087A0;
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 480));
  icu4cxx::Transliterator::~Transliterator((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 464));
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 448));
  *((void *)this + 39) = &unk_1F29F4370;
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 296));
  morphun::transliteration::BidirectionalStringMap::~BidirectionalStringMap((morphun::transliteration::FromRomanizationTransliterator *)((char *)this + 136));
  *(void *)this = &unk_1F29F4400;
}

uint64_t marisa::grimoire::vector::BitVector::rank1(marisa::grimoire::vector::BitVector *this, unint64_t a2)
{
  unint64_t v2 = a2 >> 9;
  uint64_t v3 = *((void *)this + 10);
  uint64_t v4 = *(unsigned int *)(v3 + 12 * (a2 >> 9));
  switch((a2 >> 6) & 7)
  {
    case 1uLL:
      unint64_t v5 = *(_DWORD *)(v3 + 12 * v2 + 4) & 0x7F;
      goto LABEL_10;
    case 2uLL:
      unint64_t v6 = (unint64_t)*(unsigned int *)(v3 + 12 * v2 + 4) >> 7;
      goto LABEL_5;
    case 3uLL:
      unint64_t v6 = (unint64_t)*(unsigned int *)(v3 + 12 * v2 + 4) >> 15;
LABEL_5:
      v4 += v6;
      break;
    case 4uLL:
      v4 += (unint64_t)*(unsigned int *)(v3 + 12 * v2 + 4) >> 23;
      break;
    case 5uLL:
      unint64_t v5 = *(_DWORD *)(v3 + 12 * v2 + 8) & 0x1FF;
      goto LABEL_10;
    case 6uLL:
      unint64_t v5 = ((unint64_t)*(unsigned int *)(v3 + 12 * v2 + 8) >> 9) & 0x1FF;
      goto LABEL_10;
    case 7uLL:
      unint64_t v5 = ((unint64_t)*(unsigned int *)(v3 + 12 * v2 + 8) >> 18) & 0x1FF;
LABEL_10:
      v4 += v5;
      break;
    default:
      break;
  }
  unint64_t v7 = *(void *)(*((void *)this + 2) + 8 * (a2 >> 6)) & ~(-1 << a2);
  unint64_t v8 = (((((v7 >> 1) & 0x5555555555555555) + (v7 & 0x5555555555555555)) >> 2) & 0x3333333333333333)
     + ((((v7 >> 1) & 0x5555555555555555) + (v7 & 0x5555555555555555)) & 0x3333333333333333);
  return v4 + ((0x101010101010101 * (((v8 >> 4) & 0x707070707070707) + (v8 & 0x707070707070707))) >> 56);
}

unint64_t marisa::grimoire::vector::BitVector::select0(marisa::grimoire::vector::BitVector *this, unint64_t a2)
{
  uint64_t v2 = *((void *)this + 16);
  if ((a2 & 0x1FF) == 0) {
    return *(unsigned int *)(v2 + 4 * (a2 >> 9));
  }
  unint64_t v3 = *(_DWORD *)(v2 + 4 * (a2 >> 9)) >> 9;
  unint64_t v4 = (*(_DWORD *)(v2 + 4 * (a2 >> 9) + 4) + 511) >> 9;
  uint64_t v5 = *((void *)this + 10);
  if (v3 + 10 >= v4)
  {
    uint64_t v7 = v5 + 12 * v3;
    unint64_t v8 = v3-- << 9;
    uint64_t v9 = (unsigned int *)(v7 + 12);
    do
    {
      unsigned int v10 = *v9;
      v9 += 3;
      ++v3;
      v8 += 512;
    }
    while (v8 - v10 <= a2);
  }
  else
  {
    do
    {
      if (((v4 + v3) >> 1 << 9) - *(unsigned int *)(v5 + 12 * ((v4 + v3) >> 1)) > a2) {
        unint64_t v4 = (v4 + v3) >> 1;
      }
      else {
        unint64_t v3 = (v4 + v3) >> 1;
      }
    }
    while (v3 + 1 < v4);
  }
  unint64_t v11 = (unsigned int *)(v5 + 12 * v3);
  unint64_t v12 = v11[1];
  unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)(a2 - (v3 << 9) + *v11);
  uint64_t v14 = 8 * v3;
  if ((unint64_t)v13 >= 256 - (v12 >> 23))
  {
    unint64_t v15 = *(unsigned int *)(v5 + 12 * v3 + 8);
    uint64_t v16 = (v15 >> 9) & 0x1FF;
    if ((unint64_t)v13 >= 384 - v16)
    {
      uint64_t v18 = (v15 >> 18) & 0x1FF;
      if ((unint64_t)v13 >= 448 - v18)
      {
        v14 |= 7uLL;
        unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)((char *)v13 + v18 - 448);
      }
      else
      {
        v14 |= 6uLL;
        unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)((char *)v13 + v16 - 384);
      }
    }
    else if ((unint64_t)v13 >= 320 - (v15 & 0x1FF))
    {
      v14 |= 5uLL;
      unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)((char *)v13 + (v15 & 0x1FF) - 320);
    }
    else
    {
      v14 |= 4uLL;
      unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)((char *)v13 + (v12 >> 23) - 256);
    }
  }
  else if ((unint64_t)v13 >= 128 - (unint64_t)(v12 >> 7))
  {
    uint64_t v17 = (v12 >> 15);
    if ((unint64_t)v13 >= 192 - v17)
    {
      v14 |= 3uLL;
      unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)((char *)v13 + v17 - 192);
    }
    else
    {
      v14 |= 2uLL;
      unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)((char *)v13 + (v12 >> 7) - 128);
    }
  }
  else if ((unint64_t)v13 >= 64 - (v12 & 0x7F))
  {
    v14 |= 1uLL;
    unsigned int v13 = (marisa::grimoire::vector::_anonymous_namespace_ *)((char *)v13 + (v12 & 0x7F) - 64);
  }
}

unint64_t marisa::grimoire::vector::anonymous namespace'::select_bit(marisa::grimoire::vector::_anonymous_namespace_ *this, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = (((a3 - ((a3 >> 1) & 0x5555555555555555)) >> 2) & 0x3333333333333333)
     + ((a3 - ((a3 >> 1) & 0x5555555555555555)) & 0x3333333333333333);
  uint64_t v4 = (v3 + (v3 >> 4)) & 0xF0F0F0F0F0F0F0FLL;
  unint64_t v5 = __clz(__rbit64(((((0x101010101010101 * v4) | 0x8080808080808080)
                      - 0x101010101010101 * (void)this
                      - 0x101010101010101) >> 7) & 0x101010101010101));
  return v5
       + a2
                                                                                      * ((void)this
                                                                                       - ((unint64_t)(0x101010101010100 * v4) >> v5))
                                                                                      + (a3 >> v5)];
}

unint64_t marisa::grimoire::vector::BitVector::select1(marisa::grimoire::vector::BitVector *this, unint64_t a2)
{
  uint64_t v2 = *((void *)this + 22);
  if ((a2 & 0x1FF) == 0) {
    return *(unsigned int *)(v2 + 4 * (a2 >> 9));
  }
  unint64_t v3 = *(_DWORD *)(v2 + 4 * (a2 >> 9)) >> 9;
  unint64_t v4 = (*(_DWORD *)(v2 + 4 * (a2 >> 9) + 4) + 511) >> 9;
  uint64_t v5 = *((void *)this + 10);
  if (v3 + 10 >= v4)
  {
    uint64_t v7 = v5 + 12 * v3--;
    unint64_t v8 = (unsigned int *)(v7 + 12);
    do
    {
      unsigned int v9 = *v8;
      v8 += 3;
      ++v3;
    }
    while (v9 <= a2);
  }
  else
  {
    do
    {
      if (*(unsigned int *)(v5 + 12 * ((v4 + v3) >> 1)) > a2) {
        unint64_t v4 = (v4 + v3) >> 1;
      }
      else {
        unint64_t v3 = (v4 + v3) >> 1;
      }
    }
    while (v3 + 1 < v4);
  }
  unsigned int v10 = (unsigned int *)(v5 + 12 * v3);
  unint64_t v11 = v10[1];
  unint64_t v12 = a2 - *v10;
  uint64_t v13 = 8 * v3;
  if (v12 >= v11 >> 23)
  {
    unint64_t v23 = v11 >> 23;
    unint64_t v24 = *(unsigned int *)(v5 + 12 * v3 + 8);
    unint64_t v25 = (v24 >> 9) & 0x1FF;
    unint64_t v26 = (v24 >> 18) & 0x1FF;
    uint64_t v27 = v13 | 7;
    BOOL v28 = v12 >= v26;
    if (v12 < v26) {
      char v29 = (marisa::grimoire::vector::_anonymous_namespace_ *)(v12 - v25);
    }
    else {
      char v29 = (marisa::grimoire::vector::_anonymous_namespace_ *)(v12 - v26);
    }
    if (!v28) {
      uint64_t v27 = v13 | 6;
    }
    unint64_t v30 = v24 & 0x1FF;
    uint64_t v31 = v13 | 5;
    uint64_t v32 = v13 | 4;
    int v33 = (marisa::grimoire::vector::_anonymous_namespace_ *)(v12 - v23);
    BOOL v34 = v12 >= v30;
    if (v12 < v30) {
      std::basic_string<char16_t> v21 = v33;
    }
    else {
      std::basic_string<char16_t> v21 = (marisa::grimoire::vector::_anonymous_namespace_ *)(v12 - v30);
    }
    if (v34) {
      uint64_t v32 = v31;
    }
    if (v12 < v25)
    {
      uint64_t v22 = v32;
    }
    else
    {
      std::basic_string<char16_t> v21 = v29;
      uint64_t v22 = v27;
    }
  }
  else
  {
    unint64_t v14 = v11 >> 7;
    unint64_t v15 = (v11 >> 15);
    uint64_t v16 = (marisa::grimoire::vector::_anonymous_namespace_ *)(v12 - (v11 >> 7));
    if (v12 < v15)
    {
      uint64_t v17 = v13 | 2;
    }
    else
    {
      uint64_t v16 = (marisa::grimoire::vector::_anonymous_namespace_ *)(v12 - v15);
      uint64_t v17 = v13 | 3;
    }
    unint64_t v18 = v11 & 0x7F;
    BOOL v20 = v12 >= v18;
    uint64_t v19 = (marisa::grimoire::vector::_anonymous_namespace_ *)(v12 - v18);
    if (v20) {
      v13 |= 1uLL;
    }
    else {
      uint64_t v19 = (marisa::grimoire::vector::_anonymous_namespace_ *)v12;
    }
    BOOL v20 = v12 >= v14;
    if (v12 < v14) {
      std::basic_string<char16_t> v21 = v19;
    }
    else {
      std::basic_string<char16_t> v21 = v16;
    }
    if (v20) {
      uint64_t v22 = v17;
    }
    else {
      uint64_t v22 = v13;
    }
  }
}

uint64_t *marisa::grimoire::vector::Vector<unsigned int>::push_back(uint64_t *result, _DWORD *a2)
{
  unint64_t v3 = result;
  uint64_t v4 = result[3];
  unint64_t v5 = result[4];
  unint64_t v6 = v4 + 1;
  if (v5 < v4 + 1)
  {
    uint64_t v7 = 2 * v5;
    if (v5 >> 61) {
      uint64_t v7 = 0x3FFFFFFFFFFFFFFFLL;
    }
    if (v5 <= v6 >> 1) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v7;
    }
    double result = (uint64_t *)marisa::grimoire::vector::Vector<unsigned int>::realloc(result, v8);
    uint64_t v4 = v3[3];
    unint64_t v6 = v4 + 1;
  }
  *(_DWORD *)(v3[1] + 4 * v4) = *a2;
  _OWORD v3[3] = v6;
  return result;
}

_DWORD *marisa::grimoire::vector::Vector<unsigned int>::shrink(_DWORD *result)
{
  if (*((unsigned char *)result + 40))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    exception[2] = 0x100000064;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:100: MARISA_STATE_ERROR: fixed_";
  }
  uint64_t v1 = *((void *)result + 3);
  if (v1 != *((void *)result + 4))
  {
    return marisa::grimoire::vector::Vector<unsigned int>::realloc((uint64_t *)result, v1);
  }
  return result;
}

uint64_t morphun::analysis::util::AttributeFactory_StaticImplementationAttributeFactory::createAttributeInstance(morphun::analysis::util::AttributeFactory_StaticImplementationAttributeFactory *this, const std::type_info *a2)
{
  unint64_t v3 = std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::find<std::type_index>((void *)this + 1, a2->__type_name);
  if (v3)
  {
    uint64_t v4 = v3[6];
    if (!v4) {
      std::__throw_bad_function_call[abi:ne180100]();
    }
    unint64_t v5 = *(uint64_t (**)(void))(*(void *)v4 + 48);
    return v5();
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(void))(**((void **)this + 6) + 24);
    return v7();
  }
}

void morphun::analysis::util::AttributeFactory_StaticImplementationAttributeFactory::~AttributeFactory_StaticImplementationAttributeFactory(morphun::analysis::util::AttributeFactory_StaticImplementationAttributeFactory *this)
{
  *(void *)this = &unk_1F2A00370;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &unk_1F2A00370;
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)this + 8);
}

uint64_t std::__function::__value_func<morphun::analysis::util::AttributeImpl * ()(void)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t mlccfp_getCommonConceptFactory(uint64_t a1, const __CFLocale *a2)
{
  npc<morphun::dialog::LocalizedCommonConceptFactoryProvider>(a1);
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v6, a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 24))(a1, v6);
  return v4;
}

void sub_1D2D11A38(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a2 == 1)
  {
    unint64_t v12 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v12, v9, v13);
    __cxa_end_catch();
    JUMPOUT(0x1D2D11A20);
  }
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::LocalizedCommonConceptFactoryProvider>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D11AE8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mlccfp_getDefaultCommonConceptFactoryProvider(morphun::dialog::LocalizedCommonConceptFactoryProvider *a1)
{
  uint64_t DefaultCommonConceptFactoryProvider = morphun::dialog::LocalizedCommonConceptFactoryProvider::getDefaultCommonConceptFactoryProvider(a1);
  return npc<morphun::dialog::LocalizedCommonConceptFactoryProvider>(DefaultCommonConceptFactoryProvider);
}

uint64_t morphun::dialog::language::ArCommonConceptFactory::quantifyType(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a4)
  {
LABEL_43:
    uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + *(void *)(*(void *)a3 - 56)) + 24))(a3 + *(void *)(*(void *)a3 - 56));
    if (v33) {
      goto LABEL_44;
    }
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
LABEL_51:
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 128))(a3);
  if (!v9)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
    goto LABEL_51;
  }
  uint64_t v10 = v9;
  if (a5 == 3)
  {
    uint64_t v11 = a1[47];
    unint64_t v14 = (morphun::grammar::synthesis::GrammemeConstants *)npc<morphun::dialog::SemanticFeature const>(v11);
    uint64_t v13 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v14);
  }
  else
  {
    uint64_t v11 = a1[47];
    unint64_t v12 = (morphun::grammar::synthesis::GrammemeConstants *)npc<morphun::dialog::SemanticFeature const>(v11);
    if (a5 == 2) {
      uint64_t v13 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_DUAL(v12);
    }
    else {
      uint64_t v13 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v12);
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v10 + 64))(v10, v11, v13);
  unint64_t v15 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(uint64_t, void))(*(void *)a3 + 48))(a3, a1[94]);
  uint64_t v16 = v15;
  if (!v15) {
    goto LABEL_39;
  }
  uint64_t v17 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v15);
  uint64_t v18 = *((unsigned __int8 *)v16 + 23);
  int v19 = (char)v18;
  if ((v18 & 0x80u) != 0) {
    uint64_t v18 = *((void *)v16 + 1);
  }
  uint64_t v20 = *(unsigned __int8 *)(v17 + 23);
  int v21 = (char)v20;
  if ((v20 & 0x80u) != 0) {
    uint64_t v20 = *(void *)(v17 + 8);
  }
  if (v18 == v20)
  {
    if (!v18)
    {
      unsigned int v24 = 1;
      goto LABEL_40;
    }
    if (v21 >= 0) {
      uint64_t v22 = (unsigned __int16 *)v17;
    }
    else {
      uint64_t v22 = *(unsigned __int16 **)v17;
    }
    unint64_t v23 = *(morphun::grammar::synthesis::GrammemeConstants **)v16;
    if (v19 >= 0) {
      unint64_t v23 = v16;
    }
    unsigned int v24 = 1;
    while (*v22 == *(unsigned __int16 *)v23)
    {
      unint64_t v23 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v23 + 2);
      ++v22;
      if (!--v18) {
        goto LABEL_40;
      }
    }
  }
  uint64_t v25 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v17);
  uint64_t v26 = *((unsigned __int8 *)v16 + 23);
  int v27 = (char)v26;
  if ((v26 & 0x80u) != 0) {
    uint64_t v26 = *((void *)v16 + 1);
  }
  uint64_t v28 = *(unsigned __int8 *)(v25 + 23);
  int v29 = (char)v28;
  if ((v28 & 0x80u) != 0) {
    uint64_t v28 = *(void *)(v25 + 8);
  }
  if (v26 != v28)
  {
LABEL_39:
    unsigned int v24 = 0;
    goto LABEL_40;
  }
  if (v26)
  {
    if (v29 >= 0) {
      unint64_t v30 = (unsigned __int16 *)v25;
    }
    else {
      unint64_t v30 = *(unsigned __int16 **)v25;
    }
    uint64_t v31 = *(morphun::grammar::synthesis::GrammemeConstants **)v16;
    if (v27 >= 0) {
      uint64_t v31 = v16;
    }
    unsigned int v24 = 2;
    while (*v30 == *(unsigned __int16 *)v31)
    {
      uint64_t v31 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v31 + 2);
      ++v30;
      if (!--v26) {
        goto LABEL_40;
      }
    }
    goto LABEL_39;
  }
  unsigned int v24 = 2;
LABEL_40:
  uint64_t v32 = a1[94];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (&(&morphun::dialog::language::CASE_MAP)[6 * v24])[(char)a5]);
  (*(void (**)(uint64_t, uint64_t, void **))(*(void *)v10 + 64))(v10, v32, __p);
  if (SHIBYTE(v37) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)(v10 + *(void *)(*(void *)v10 - 56)) + 24))(v10 + *(void *)(*(void *)v10 - 56));
  (*(void (**)(uint64_t))(*(void *)v10 + 16))(v10);
  if (!v33) {
    goto LABEL_43;
  }
LABEL_44:
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v37 = 0;
  (*(void (**)(void *, uint64_t, uint64_t, void **, uint64_t))(*a1 + 120))(a1, a2, v33, __p, a5);
  if (SHIBYTE(v37) < 0) {
    operator delete(__p[0]);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v33 + 16))(v33);
}

void sub_1D2D11F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_1D2D1205C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ArCommonConceptFactory::quantifiedJoin(morphun::dialog::SpeakableString *a1@<X2>, uint64_t a2@<X1>, int a3@<W4>, morphun::dialog::SpeakableString *a4@<X8>)
{
  if ((a3 - 1) > 1)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
    morphun::dialog::SpeakableString::SpeakableString(v9, (long long *)__p);
    morphun::dialog::SpeakableString::operator+(a2, (uint64_t)v9, v10);
    morphun::dialog::SpeakableString::operator+((uint64_t)v10, (uint64_t)a1, a4);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    morphun::dialog::SpeakableString::SpeakableString(a4, a1);
  }
}

void sub_1D2D1214C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ArCommonConceptFactory::createAndList()
{
}

void sub_1D2D122A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D12360(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ArCommonConceptFactory::createOrList()
{
}

void sub_1D2D12484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ArCommonConceptFactory::~ArCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A055A8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A055A8);
}

uint64_t morphun::analysis::EsAnalyzer::isStripAllAccents(morphun::analysis::EsAnalyzer *this)
{
  return 1;
}

void morphun::analysis::EsAnalyzer::addWordNormalizationFilter(morphun::analysis::EsAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D12748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v23, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void sub_1D2D127FC()
{
}

void sub_1D2D12804()
{
}

void morphun::analysis::EsAnalyzer::addStopFilter(morphun::analysis::EsAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2D12870(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::EsAnalyzer::~EsAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06D80);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06D80);
}

void morphun::analysis::stemmer::NbStemFilter::getLemma(uint64_t a1@<X1>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  int R1Start = morphun::analysis::stemmer::NordicStemFilter::getR1Start((uint64_t *)a1);
  int v6 = *(unsigned __int8 *)(a1 + 23);
  if ((v6 & 0x80) == 0)
  {
    if (R1Start >= v6)
    {
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
      a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
      return;
    }
    goto LABEL_5;
  }
  std::basic_string<char16_t>::size_type v7 = *(void *)(a1 + 8);
  if (R1Start < (int)v7)
  {
LABEL_5:
    std::basic_string<char16_t>::size_type v8 = R1Start;
    std::basic_string<char16_t>::basic_string(&v63, (const std::basic_string<char16_t> *)a1, 0, R1Start, v5);
    uint64_t v10 = *(unsigned __int8 *)(a1 + 23);
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *(void *)(a1 + 8);
    }
    std::basic_string<char16_t>::basic_string(&v62, (const std::basic_string<char16_t> *)a1, v8, v10 - v8, v9);
    memset(&__str, 0, sizeof(__str));
    int v11 = *(char *)(a1 + 23);
    if (v11 >= 0) {
      uint64_t v12 = a1;
    }
    else {
      uint64_t v12 = *(void *)a1;
    }
    if (v11 >= 0) {
      uint64_t v13 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      uint64_t v13 = *(void *)(a1 + 8);
    }
    uint64_t isAllLowerCase = morphun::util::StringViewUtils::isAllLowerCase(v12, v13);
    char v15 = isAllLowerCase;
    if ((isAllLowerCase & 1) == 0)
    {
      int32_t v16 = HIBYTE(v63.__r_.__value_.__r.__words[2]);
      long long v17 = *(_OWORD *)&v63.__r_.__value_.__l.__data_;
      uint64_t v18 = morphun::util::LocaleUtils::NORWEGIAN((morphun::util::LocaleUtils *)isAllLowerCase);
      if ((v16 & 0x80u) == 0) {
        int v19 = &v63;
      }
      else {
        int v19 = (std::basic_string<char16_t> *)v17;
      }
      if ((v16 & 0x80u) == 0) {
        int32_t v20 = v16;
      }
      else {
        int32_t v20 = DWORD2(v17);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__str, (const UChar *)v19, v20, v18);
      int v21 = std::basic_string<char16_t>::operator=(&v63, &__str);
      int32_t v22 = HIBYTE(v62.__r_.__value_.__r.__words[2]);
      long long v23 = *(_OWORD *)&v62.__r_.__value_.__l.__data_;
      uint64_t v24 = morphun::util::LocaleUtils::NORWEGIAN((morphun::util::LocaleUtils *)v21);
      if ((v22 & 0x80u) == 0) {
        uint64_t v25 = &v62;
      }
      else {
        uint64_t v25 = (std::basic_string<char16_t> *)v23;
      }
      if ((v22 & 0x80u) == 0) {
        int32_t v26 = v22;
      }
      else {
        int32_t v26 = DWORD2(v23);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__str, (const UChar *)v25, v26, v24);
      std::basic_string<char16_t>::operator=(&v62, &__str);
    }
    {
      operator new();
    }
    int v27 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::NbStemFilter::ENDINGS_FIRST_STEP_REMOVE(void)::ENDINGS_FIRST_STEP_REMOVE_);
    if ((morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v62, *v27, v27[1]) & 1) == 0)
    {
      std::basic_string<char16_t>::size_type size = HIBYTE(v62.__r_.__value_.__r.__words[2]);
      if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type size = v62.__r_.__value_.__l.__size_;
      }
      if (!size) {
        goto LABEL_117;
      }
      int v29 = &v62;
      if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v29 = (std::basic_string<char16_t> *)v62.__r_.__value_.__r.__words[0];
      }
      if (v29->__r_.__value_.__s.__data_[size - 1] != 115) {
        goto LABEL_117;
      }
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, (const void **)&v63.__r_.__value_.__l.__data_, (const void **)&v62.__r_.__value_.__l.__data_);
      {
        operator new();
      }
      unint64_t v30 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::NbStemFilter::ENDINGS_FIRST_STEP_SHORTEN(void)::ENDINGS_FIRST_STEP_SHORTEN_);
      char v31 = morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&__p, *v30, v30[1]);
      if ((v31 & 1) == 0)
      {
        std::basic_string<char16_t>::size_type v32 = v62.__r_.__value_.__l.__size_;
        if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v32 = HIBYTE(v62.__r_.__value_.__r.__words[2]);
        }
        if (v32 >= 2)
        {
          uint64_t v33 = 0;
          BOOL v34 = &v62;
          if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            BOOL v34 = (std::basic_string<char16_t> *)v62.__r_.__value_.__r.__words[0];
          }
          uint64_t v35 = (uint64_t)v34 + 2 * v32 - 4;
          do
          {
            int v36 = *(unsigned __int16 *)(v35 + v33 * 2);
            int v37 = (unsigned __int16)aKs[v33];
          }
          while (v37 == v36 && v33++ != 1);
          if (v37 == v36)
          {
            std::basic_string<char16_t>::size_type v39 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v39 = __p.__r_.__value_.__l.__size_;
            }
            if (v39 <= 2) {
              std::basic_string<char16_t>::__throw_out_of_range[abi:ne180100]();
            }
            p_p = &__p;
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
            }
            if (morphun::analysis::stemmer::NordicStemFilter::isVowel((morphun::dictionary::PhraseProperties *)(unsigned __int16)p_p->__r_.__value_.__s.__data_[v39 - 3]))
            {
              std::basic_string<char16_t>::size_type v41 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v41 = __p.__r_.__value_.__l.__size_;
              }
              std::basic_string<char16_t>::resize(&__p, v41 - 1, 0);
            }
          }
        }
      }
      std::basic_string<char16_t>::assign(&v63, &__p, 0, v8);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v42 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v42 = __p.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::assign(&v62, &__p, v8, v42);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if ((v31 & 1) == 0)
      {
LABEL_117:
        {
          operator new();
        }
        int64_t v43 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::NbStemFilter::ENDINGS_FIRST_STEP_ER(void)::ENDINGS_FIRST_STEP_SHORTEN_);
        if (morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v62, *v43, v43[1])) {
          std::basic_string<char16_t>::append(&v62, (const std::basic_string<char16_t>::value_type *)"e", 2uLL);
        }
      }
    }
    {
      operator new();
    }
    uint64_t v44 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::NbStemFilter::ENDINGS_SECOND_STEP(void)::ENDINGS_SECOND_STEP_);
    morphun::analysis::stemmer::NordicStemFilter::shortenIfEndsWith(&v62, *v44, v44[1]);
    {
      operator new();
    }
    uint64_t v45 = (unsigned __int16 ***)npc<std::vector<std::u16string_view>>(morphun::analysis::stemmer::NbStemFilter::ENDINGS_THIRD_STEP_REMOVE(void)::ENDINGS_THIRD_STEP_REMOVE_);
    morphun::analysis::stemmer::NordicStemFilter::removeIfEndsWith(&v62, *v45, v45[1]);
    if (v15)
    {
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a2, (const void **)&v63.__r_.__value_.__l.__data_, (const void **)&v62.__r_.__value_.__l.__data_);
    }
    else
    {
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)__dst, (const void **)&v63.__r_.__value_.__l.__data_, (const void **)&v62.__r_.__value_.__l.__data_);
      int v46 = *(char *)(a1 + 23);
      if (v46 >= 0) {
        uint64_t v47 = a1;
      }
      else {
        uint64_t v47 = *(void *)a1;
      }
      if (v46 >= 0) {
        uint64_t v48 = *(unsigned __int8 *)(a1 + 23);
      }
      else {
        uint64_t v48 = *(void *)(a1 + 8);
      }
      int isAllUpperCase = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllUpperCase(v47, v48);
      unint64_t v50 = v65;
      float v52 = (void **)__dst[0];
      float v51 = __dst[1];
      if (isAllUpperCase)
      {
        uint64_t v53 = morphun::util::LocaleUtils::NORWEGIAN(isAllUpperCase);
        if ((v50 & 0x80u) == 0) {
          uint64_t v54 = __dst;
        }
        else {
          uint64_t v54 = v52;
        }
        if ((v50 & 0x80u) == 0) {
          int32_t v55 = v50;
        }
        else {
          int32_t v55 = (int)v51;
        }
        morphun::util::StringViewUtils::uppercase((uint64_t)&__str, (const UChar *)v54, v55, v53);
        *a2 = __str;
        memset(&__str, 0, sizeof(__str));
      }
      else
      {
        uint64_t v57 = morphun::util::LocaleUtils::NORWEGIAN(isAllUpperCase);
        if ((v50 & 0x80u) == 0) {
          uint64_t v58 = __dst;
        }
        else {
          uint64_t v58 = v52;
        }
        if ((v50 & 0x80u) == 0) {
          unint64_t v59 = v50;
        }
        else {
          unint64_t v59 = (unint64_t)v51;
        }
        morphun::util::StringViewUtils::capitalizeFirst((UChar *)v58, v59, v57, (uint64_t)a2);
      }
      if ((char)v65 < 0) {
        operator delete(__dst[0]);
      }
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v62.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v63.__r_.__value_.__l.__data_);
    }
    return;
  }
  char v56 = *(const std::basic_string<char16_t>::value_type **)a1;

  std::basic_string<char16_t>::__init_copy_ctor_external(a2, v56, v7);
}

void sub_1D2D12FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  MEMORY[0x1D942B8B0](v38, 0x20C40960023A9);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D131C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::NbStemFilter::~NbStemFilter(morphun::analysis::stemmer::NbStemFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07E10);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07E10);
}

void morphun::tokenizer::GermanicWordAndDelimiterTokenExtractor::createIterator()
{
}

void sub_1D2D132C8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C4058C5592ALL);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::GermanicWordAndDelimiterTokenExtractor::~GermanicWordAndDelimiterTokenExtractor(char **this)
{
  morphun::tokenizer::dictionary::GermanicDecompounder::~GermanicDecompounder(this + 19);
  morphun::tokenizer::TokenExtractor::~TokenExtractor((morphun::tokenizer::TokenExtractor *)this, (uint64_t *)&off_1F2A08170);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  morphun::tokenizer::dictionary::GermanicDecompounder::~GermanicDecompounder(this + 19);

  morphun::tokenizer::TokenExtractor::~TokenExtractor((morphun::tokenizer::TokenExtractor *)this, (uint64_t *)&off_1F2A08170);
}

uint64_t morphun::tokenizer::GermanicWordAndDelimiterTokenExtractor::GermanicWordAndDelimiterTokenExtractor(uint64_t a1, morphun::util::ULocale *a2, uint64_t a3, long long *a4)
{
  *(void *)a1 = &unk_1F2A08C08;
  uint64_t WordsToNotSplit = morphun::tokenizer::TokenExtractor::createWordsToNotSplit((uint64_t)a2, a3);
  morphun::tokenizer::TokenExtractor::TokenExtractor((uint64_t *)a1, (uint64_t *)&off_1F2A08170, a2, a3, WordsToNotSplit);
  *(void *)a1 = &off_1F2A11978;
  morphun::tokenizer::TokenExtractor::getRequiredKeyAsPath((uint64_t)__p, a2, a3, L"tokenizer.dictionary.file", 0x19uLL);
  long long v9 = *a4;
  long long v10 = a4[1];
  long long v11 = a4[2];
  *(_OWORD *)(a1 + 196) = *(long long *)((char *)a4 + 44);
  *(_OWORD *)(a1 + 184) = v11;
  *(_OWORD *)(a1 + 168) = v10;
  *(_OWORD *)(a1 + 152) = v9;
  std::set<std::u16string_view>::set[abi:ne180100]((uint64_t *)(a1 + 216), (uint64_t)(a4 + 4));
  std::set<std::u16string_view>::set[abi:ne180100]((uint64_t *)(a1 + 240), (uint64_t)a4 + 88);
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>((void *)(a1 + 264), *((const void **)a4 + 14), *((void *)a4 + 15), (uint64_t)(*((void *)a4 + 15) - *((void *)a4 + 14)) >> 4);
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>((void *)(a1 + 288), *((const void **)a4 + 17), *((void *)a4 + 18), (uint64_t)(*((void *)a4 + 18) - *((void *)a4 + 17)) >> 4);
  std::set<std::basic_string<char16_t>>::set[abi:ne180100]((uint64_t *)(a1 + 312), (uint64_t)(a4 + 10));
  uint64_t v12 = morphun::tokenizer::trie::SerializedTrie::SerializedTrie((void *)(a1 + 336), (const void **)__p);
  *(void *)(a1 + 440) = &unk_1F2A115D8;
  *(void *)(a1 + 448) = a1 + 152;
  *(void *)(a1 + 456) = v12;
  int v13 = *(_DWORD *)(a1 + 176);
  *(_DWORD *)(a1 + 464) = *(_DWORD *)(a1 + 180);
  int v14 = *(_DWORD *)(a1 + 188);
  *(_DWORD *)(a1 + 472) = *(_DWORD *)(a1 + 184);
  int v16 = *(_DWORD *)(a1 + 160);
  int v15 = *(_DWORD *)(a1 + 164);
  *(_DWORD *)(a1 + 468) = v15;
  *(_DWORD *)(a1 + 480) = v13;
  *(_DWORD *)(a1 + 484) = v15;
  int v17 = *(_DWORD *)(a1 + 168);
  *(_DWORD *)(a1 + 488) = *(_DWORD *)(a1 + 172);
  *(_DWORD *)(a1 + 496) = *(_DWORD *)(a1 + 192);
  *(_DWORD *)(a1 + 500) = v17;
  *(void *)(a1 + 504) = *(void *)(a1 + 200);
  *(_DWORD *)(a1 + 512) = *(_DWORD *)(a1 + 208);
  int v18 = *(_DWORD *)(a1 + 152);
  *(_DWORD *)(a1 + 516) = *(_DWORD *)(a1 + 156);
  *(_DWORD *)(a1 + 520) = v18 - 1;
  *(_DWORD *)(a1 + 524) = v16;
  *(_DWORD *)(a1 + 528) = v14;
  if (v21 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_1D2D13574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*(char **)(v15 + 320));
  int v18 = *(void **)(v15 + 288);
  if (v18)
  {
    *(void *)(v15 + 296) = v18;
    operator delete(v18);
  }
  int v19 = *v16;
  if (*v16)
  {
    *(void *)(v15 + 272) = v19;
    operator delete(v19);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v15 + 248));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v15 + 224));
  if (a15 < 0) {
    operator delete(__p);
  }
  morphun::tokenizer::TokenExtractor::~TokenExtractor((morphun::tokenizer::TokenExtractor *)v15, (uint64_t *)&off_1F2A08170);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::MsCommonConceptFactory::~MsCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A059E8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A059E8);
}

uint64_t morphun::analysis::filter::AmpersandToAndFilter::incrementToken(morphun::analysis::filter::AmpersandToAndFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
    unint64_t v5 = (char *)v4 + *(void *)(*v4 - 96);
    uint64_t v6 = v5[23] < 0 ? *((void *)v5 + 1) : v5[23];
    if (v6 == 1)
    {
      std::basic_string<char16_t>::size_type v7 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      std::basic_string<char16_t>::size_type v8 = (char *)v7 + *(void *)(*v7 - 96);
      if (v8[23] < 0) {
        std::basic_string<char16_t>::size_type v8 = *(char **)v8;
      }
      if (*(_WORD *)v8 == 38)
      {
        long long v9 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v9 + *(void *)(*v9 - 96)), (const std::basic_string<char16_t> *)((char *)this + 112));
      }
    }
  }
  return v3;
}

void sub_1D2D13780(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D137E4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::AmpersandToAndFilter::~AmpersandToAndFilter(void **this)
{
  if (*((char *)this + 135) < 0) {
    operator delete(this[14]);
  }
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07A40);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  if (*((char *)this + 135) < 0) {
    operator delete(this[14]);
  }

  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07A40);
}

morphun::analysis::TokenFilter *morphun::analysis::filter::AmpersandToAndFilter::AmpersandToAndFilter(morphun::analysis::TokenFilter *a1, uint64_t a2, long long *a3)
{
  *(void *)a1 = &unk_1F2A08C08;
  unint64_t v5 = morphun::analysis::TokenFilter::TokenFilter(a1, (morphun::analysis::TokenStream *)&off_1F2A07A40, a2);
  *(void *)unint64_t v5 = &off_1F2A10780;
  *((void *)v5 + 13) = 0;
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)((char *)v5 + 112), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *((void *)v5 + 16) = *((void *)a3 + 2);
    *((_OWORD *)v5 + 7) = v6;
  }
  *((void *)a1 + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)a1);
  return a1;
}

void sub_1D2D13958(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07A40);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::TokenFilter::close(morphun::analysis::TokenFilter *this)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)npc<morphun::analysis::TokenStream>(*((void *)this + 12)) + 48);

  return v1();
}

void sub_1D2D13A28(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::TokenFilter::reset(morphun::analysis::TokenFilter *this)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)npc<morphun::analysis::TokenStream>(*((void *)this + 12)) + 40);

  return v1();
}

uint64_t morphun::analysis::TokenFilter::end(morphun::analysis::TokenFilter *this)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)npc<morphun::analysis::TokenStream>(*((void *)this + 12)) + 32);

  return v1();
}

morphun::analysis::util::AttributeSource *morphun::analysis::TokenFilter::TokenFilter(morphun::analysis::TokenFilter *this, morphun::analysis::TokenStream *a2, uint64_t a3)
{
  double result = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::TokenStream *)((char *)a2 + 16), a3);
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)double result = v6;
  *(void *)((char *)result + *(void *)(v6 - 40)) = *((void *)a2 + 4);
  uint64_t v7 = *(void *)a2;
  *(void *)double result = *(void *)a2;
  *(void *)((char *)result + *(void *)(v7 - 40)) = *((void *)a2 + 5);
  *((void *)result + 12) = a3;
  return result;
}

void morphun::analysis::TokenFilter::~TokenFilter(morphun::analysis::TokenFilter *this, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v4 - 40)) = a2[5];
  uint64_t v5 = *((void *)this + 12);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  }

  morphun::analysis::util::AttributeSource::~AttributeSource(this, a2 + 2);
}

void sub_1D2D13D50(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::TrGrammarSynthesizer::COPULA_FIRST(morphun::grammar::synthesis::TrGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::TrGrammarSynthesizer::COPULA_FIRST(void)::COPULA_FIRST_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D13DF4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::TrGrammarSynthesizer::COPULA_SECOND(morphun::grammar::synthesis::TrGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::TrGrammarSynthesizer::COPULA_SECOND(void)::COPULA_SECOND_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D13EBC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::TrGrammarSynthesizer::COPULA_THIRD(morphun::grammar::synthesis::TrGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::TrGrammarSynthesizer::COPULA_THIRD(void)::COPULA_THIRD_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D13F84(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::TrGrammarSynthesizer::TENSE_PRESENT(morphun::grammar::synthesis::TrGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::TrGrammarSynthesizer::TENSE_PRESENT(void)::TENSE_PRESENT_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D1404C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::TrGrammarSynthesizer::TENSE_PAST(morphun::grammar::synthesis::TrGrammarSynthesizer *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::TrGrammarSynthesizer::TENSE_PAST(void)::TENSE_PAST_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D14114(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_1D2D1419C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::TrGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D14CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  MEMORY[0x1D942B8B0](v24, 0x1012C40EC159624);
  uint64_t v26 = *(void *)(v23 + 16);
  *(void *)(v23 + 16) = 0;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 16))(v26);
  }
  MEMORY[0x1D942B8B0](v23, 0x10E1C40DDD86669);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Case>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      uint64_t v7 = a1[1];
      std::basic_string<char16_t>::size_type v8 = v4;
      if (*a1 != v4)
      {
        long long v9 = a1[1];
        long long v10 = v4;
        if (v7)
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = v9;
            long long v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            long long v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        marisa::grimoire::vector::_anonymous_namespace_ *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      int v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          int v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        int v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D150E8(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Case>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D15160(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      uint64_t v7 = a1[1];
      std::basic_string<char16_t>::size_type v8 = v4;
      if (*a1 != v4)
      {
        long long v9 = a1[1];
        long long v10 = v4;
        if (v7)
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = v9;
            long long v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            long long v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        marisa::grimoire::vector::_anonymous_namespace_ *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      int v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          int v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        int v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D15310(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D15388(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Person>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      uint64_t v7 = a1[1];
      std::basic_string<char16_t>::size_type v8 = v4;
      if (*a1 != v4)
      {
        long long v9 = a1[1];
        long long v10 = v4;
        if (v7)
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = v9;
            long long v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            long long v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        marisa::grimoire::vector::_anonymous_namespace_ *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      int v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          int v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        int v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D15538(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Person>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D155B0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Pronoun>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      uint64_t v7 = a1[1];
      std::basic_string<char16_t>::size_type v8 = v4;
      if (*a1 != v4)
      {
        long long v9 = a1[1];
        long long v10 = v4;
        if (v7)
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = v9;
            long long v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            long long v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        marisa::grimoire::vector::_anonymous_namespace_ *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      int v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          int v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        int v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D15760(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Pronoun>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D157D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Copula>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      uint64_t v7 = a1[1];
      std::basic_string<char16_t>::size_type v8 = v4;
      if (*a1 != v4)
      {
        long long v9 = a1[1];
        long long v10 = v4;
        if (v7)
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = v9;
            long long v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            long long v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        marisa::grimoire::vector::_anonymous_namespace_ *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      int v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          int v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        int v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D15988(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Copula>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D15A00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Tense>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      uint64_t v7 = a1[1];
      std::basic_string<char16_t>::size_type v8 = v4;
      if (*a1 != v4)
      {
        long long v9 = a1[1];
        long long v10 = v4;
        if (v7)
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = v9;
            long long v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            std::basic_string<char16_t>::size_type v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            long long v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      int v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      int v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        int v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)int v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        marisa::grimoire::vector::_anonymous_namespace_ *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          int v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    int v13 = (char **)v4;
    if (v7)
    {
      int v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          int v14 = *v12;
          }
          int v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        int v13 = v12 + 1;
        int v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D15BB0(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::TrGrammarSynthesizer::Tense>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D15C28(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::locale::zh::ZhTokenizer::createTokenExtractor()
{
}

void sub_1D2D15FD0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4065C8B95BLL);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::determine(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, __p);
  uint64_t v6 = (void *)HIBYTE(v33);
  int v7 = SHIBYTE(v33);
  if (v33 < 0) {
    uint64_t v6 = __p[1];
  }
  if (v6) {
    goto LABEL_4;
  }
  uint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a2 + 8);
  }
  if (!v8)
  {
LABEL_4:
    *(_OWORD *)a3 = *(_OWORD *)__p;
    a3[2] = v33;
  }
  else
  {
    uint64_t v9 = a1[26];
    if (!v9 || (uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, a2), (v11 = v10) == 0))
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    long long v12 = *(_OWORD *)(v10 + 8);
    uint64_t v13 = *(void *)(v10 + 16);
    if (v13) {
      uint64_t v14 = *(void *)(v13 + 80);
    }
    else {
      uint64_t v14 = 0;
    }
    for (uint64_t i = 0; ; uint64_t i = v23)
    {
      uint64_t v29 = *((void *)&v12 + 1);
      uint64_t v16 = v12;
      if (v14 == (void)v12) {
        break;
      }
      {
        if (i)
        {
          int v17 = *(char *)(v16 + 63);
          if (v17 >= 0) {
            long long v18 = (const UChar *)(v16 + 40);
          }
          else {
            long long v18 = *(const UChar **)(v16 + 40);
          }
          if (v17 >= 0) {
            uint64_t v19 = *(unsigned __int8 *)(v16 + 63);
          }
          else {
            uint64_t v19 = *(void *)(v16 + 48);
          }
          uint64_t v20 = a1[27];
          uint64_t v21 = a1[28];
          *(void *)&long long v30 = 0;
          if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v20, (uint64_t)&v30, v18, v19)) {
            BOOL v22 = ((unint64_t)v30 & v21) == v21;
          }
          else {
            BOOL v22 = 0;
          }
          uint64_t v23 = v16;
          if (v22)
          {
            morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, i + 16, &v30);
            if (SHIBYTE(v33) < 0) {
              operator delete(__p[0]);
            }
            uint64_t v33 = v31;
            *(_OWORD *)std::basic_string<char16_t> __p = v30;
            unint64_t v24 = HIBYTE(v31);
            int v7 = SHIBYTE(v31);
            if ((v31 & 0x8000000000000000) != 0) {
              unint64_t v24 = *((void *)&v30 + 1);
            }
            if (v24)
            {
              int v7 = 0;
              *(_OWORD *)a3 = *(_OWORD *)__p;
              a3[2] = v33;
              __p[1] = 0;
              uint64_t v33 = 0;
              __p[0] = 0;
              goto LABEL_40;
            }
            break;
          }
        }
        else
        {
          uint64_t v23 = v16;
        }
      }
      else
      {
        uint64_t v23 = i;
      }
      npc<morphun::Token const>(v16);
      *((void *)&v12 + 1) = v29;
      *(void *)&long long v12 = *(void *)(v16 + 80);
    }
    uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 56))(v11);
    uint64_t v26 = npc<morphun::Token>(v25);
    uint64_t v27 = npc<morphun::Token>(*(void *)(v26 + 72));
    morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v27 + 16, a3);
LABEL_40:
    (*(void (**)(uint64_t))(*(void *)v11 + 16))(v11);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1D2D162F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  (*(void (**)(uint64_t))(*(void *)v20 + 16))(v20);
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D163B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::~EnGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction *this)
{
  morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::~EnGrammarSynthesizer_CountLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0CC18;
  uint64_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FA2B8;
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::EnGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction *this)
{
  *((void *)&v22 + 1) = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FA260;
  uint64_t v2 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::ENGLISH(this);
  uint64_t v3 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v2);
  if (*(char *)(v3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v20, *(const std::basic_string<char16_t>::value_type **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    v20.__r_.__value_.__r.__words[2] = *(void *)(v3 + 16);
    *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v3);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v21, *(const std::basic_string<char16_t>::value_type **)v5, *(void *)(v5 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    v21.__r_.__value_.__r.__words[2] = *(void *)(v5 + 16);
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v6;
  }
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  v16[0] = 0;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v14;
  LOBYTE(__dst.__r_.__value_.__r.__words[1]) = 0;
  uint64_t v14 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  uint64_t v15 = v14;
  v16[0] = v14 + 2;
  uint64_t v15 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v16, (long long *)&v20, &v22, v14);
  uint64_t v7 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v15);
  if (*(char *)(v7 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v7, *(void *)(v7 + 8));
  }
  else
  {
    long long v8 = *(_OWORD *)v7;
    __dst.__r_.__value_.__r.__words[2] = *(void *)(v7 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v8;
  }
  uint64_t v9 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v7);
  if (*(char *)(v9 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v19, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
  }
  else
  {
    long long v10 = *(_OWORD *)v9;
    v19.__r_.__value_.__r.__words[2] = *(void *)(v9 + 16);
    *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v10;
  }
  uint64_t v11 = 0;
  long long v12 = 0;
  uint64_t v13 = 0;
  v16[1] = &v11;
  char v17 = 0;
  uint64_t v11 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  long long v12 = v11;
  uint64_t v13 = v11 + 2;
  long long v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v13, (long long *)&__dst, (long long *)&v20, v11);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)this, (uint64_t *)&off_1F2A060A0, v2);
}

void sub_1D2D16828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a12);
  if (a22 < 0) {
    operator delete(__p);
  }
  uint64_t v33 = *((void *)v31 + 26);
  *((void *)v31 + 26) = 0;
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 16))(v33);
  }
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v31, (uint64_t *)&off_1F2A060A0);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::KoGrammarSynthesizer_KoDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  TheBestDisplayint Value = morphun::grammar::synthesis::GrammarSynthesizerUtil::getTheBestDisplayValue(*(void *)(a2 + 8), *(void *)(a2 + 16), a3);
  if (TheBestDisplayValue)
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)TheBestDisplayValue + 24))(TheBestDisplayValue);
    if (*(char *)(v8 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v56, *(const std::basic_string<char16_t>::value_type **)v8, *(void *)(v8 + 8));
    }
    else
    {
      long long v9 = *(_OWORD *)v8;
      v56.__r_.__value_.__r.__words[2] = *(void *)(v8 + 16);
      *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v9;
    }
    std::basic_string<char16_t>::size_type size = HIBYTE(v56.__r_.__value_.__r.__words[2]);
    if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v56.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      if ((a4 & 1) != 0
        || ((uint64_t v11 = (void *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET((morphun::dictionary::PhraseProperties *)v8),
             (v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          ? (long long v12 = &v56)
          : (long long v12 = (std::basic_string<char16_t> *)v56.__r_.__value_.__r.__words[0]),
            (v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (int v13 = HIBYTE(v56.__r_.__value_.__r.__words[2]))
          : (int v13 = v56.__r_.__value_.__r.__words[1]),
            morphun::util::UnicodeSetUtils::containsSome(v11, (uint64_t)v12, v13)))
      {
        morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[1]);
        std::basic_string<char16_t>::size_type v15 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v15 = __p.__r_.__value_.__l.__size_;
        }
        if (v15)
        {
          uint64_t v16 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v14);
          std::basic_string<char16_t>::size_type v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v17 = __p.__r_.__value_.__l.__size_;
          }
          uint64_t v18 = *(unsigned __int8 *)(v16 + 23);
          int v19 = (char)v18;
          if ((v18 & 0x80u) != 0) {
            uint64_t v18 = *(void *)(v16 + 8);
          }
          if (v17 == v18)
          {
            if (v17)
            {
              if (v19 >= 0) {
                std::basic_string<char16_t> v20 = (unsigned __int16 *)v16;
              }
              else {
                std::basic_string<char16_t> v20 = *(unsigned __int16 **)v16;
              }
              p_p = &__p;
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
              }
              while (*v20 == (unsigned __int16)p_p->__r_.__value_.__s.__data_[0])
              {
                p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
                ++v20;
                if (!--v17) {
                  goto LABEL_33;
                }
              }
            }
            else
            {
LABEL_33:
              morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v58, a3, a1[2]);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              std::basic_string<char16_t> __p = v58;
              std::basic_string<char16_t>::size_type v23 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
              if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::basic_string<char16_t>::size_type v23 = __p.__r_.__value_.__l.__size_;
              }
              if (!v23)
              {
                unint64_t v24 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::CLUSIVITY_EXCLUSIVE(v22);
                std::basic_string<char16_t>::operator=(&__p, v24);
              }
            }
          }
        }
        else
        {
          morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v58, a3, a1[3]);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          std::basic_string<char16_t> __p = v58;
        }
        uint64_t v27 = a1[5];
        uint64_t v25 = a1 + 5;
        uint64_t v26 = v27;
        if (!v27) {
          goto LABEL_103;
        }
        uint64_t v28 = v25;
        do
        {
          BOOL v29 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v26 + 32), (unsigned __int16 *)&__p);
          long long v30 = (uint64_t *)(v26 + 8);
          if (!v29)
          {
            long long v30 = (uint64_t *)v26;
            uint64_t v28 = (uint64_t *)v26;
          }
          uint64_t v26 = *v30;
        }
        while (*v30);
        if (v28 == v25
          || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)&__p, (unsigned __int16 *)v28 + 16))
        {
LABEL_103:
          operator new();
        }
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v58, v56.__r_.__value_.__l.__data_, v56.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v58 = v56;
        }
        std::basic_string<char16_t>::size_type v31 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
        std::basic_string<char16_t>::size_type v32 = (std::basic_string<char16_t> *)v58.__r_.__value_.__r.__words[0];
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v31 = v58.__r_.__value_.__l.__size_;
        }
        else {
          std::basic_string<char16_t>::size_type v32 = &v58;
        }
        uint64_t v33 = *((unsigned __int8 *)v28 + 127);
        if (*((char *)v28 + 127) < 0)
        {
          BOOL v34 = (unsigned __int16 *)v28[13];
          std::basic_string<char16_t>::size_type v35 = v28[14];
        }
        else
        {
          BOOL v34 = (unsigned __int16 *)(v28 + 13);
          std::basic_string<char16_t>::size_type v35 = *((unsigned __int8 *)v28 + 127);
        }
        if (v31 >= v35)
        {
          if (!v35) {
            goto LABEL_68;
          }
          uint64_t v36 = -(uint64_t)v35;
          do
          {
            int v37 = (unsigned __int16)v32->__r_.__value_.__s.__data_[v31 + v36];
            int v39 = *v34++;
            int v38 = v39;
          }
          while (v39 == v37 && v36++ != -1);
          if (v38 == v37)
          {
LABEL_68:
            if ((v33 & 0x80) != 0) {
              uint64_t v33 = v28[14];
            }
LABEL_86:
            std::basic_string<char16_t>::resize(&v58, v31 - v33, 0);
            goto LABEL_87;
          }
        }
        uint64_t v33 = *((unsigned __int8 *)v28 + 103);
        if (*((char *)v28 + 103) < 0)
        {
          if (v28[11])
          {
            std::basic_string<char16_t>::size_type v41 = (unsigned __int16 *)v28[10];
            std::basic_string<char16_t>::size_type v42 = v28[11];
LABEL_75:
            if (v31 < v42) {
              goto LABEL_87;
            }
            if (v42)
            {
              uint64_t v43 = -(uint64_t)v42;
              uint64_t v44 = (char *)v32 + 2 * v31;
              do
              {
                int v45 = *(unsigned __int16 *)&v44[2 * v43];
                int v47 = *v41++;
                int v46 = v47;
              }
              while (v47 == v45 && v43++ != -1);
              if (v46 != v45) {
                goto LABEL_87;
              }
            }
            if ((v33 & 0x80) != 0) {
              uint64_t v33 = v28[11];
            }
            goto LABEL_86;
          }
        }
        else if (*((unsigned char *)v28 + 103))
        {
          std::basic_string<char16_t>::size_type v41 = (unsigned __int16 *)(v28 + 10);
          std::basic_string<char16_t>::size_type v42 = *((unsigned __int8 *)v28 + 103);
          goto LABEL_75;
        }
LABEL_87:
        morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::getParticleValue(&v57, (uint64_t)(v28 + 7), (uint64_t)&v58);
        int v49 = SHIBYTE(v57.__r_.__value_.__r.__words[2]);
        unint64_t v50 = (void *)v57.__r_.__value_.__r.__words[0];
        if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          float v51 = &v57;
        }
        else {
          float v51 = (std::basic_string<char16_t> *)v57.__r_.__value_.__r.__words[0];
        }
        if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v52 = HIBYTE(v57.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v52 = v57.__r_.__value_.__l.__size_;
        }
        std::basic_string<char16_t>::append(&v58, (const std::basic_string<char16_t>::value_type *)v51, v52);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v54, v58.__r_.__value_.__l.__data_, v58.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v54 = v58;
        }
        if (v49 < 0) {
          operator delete(v50);
        }
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v56.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> v56 = v54;
        goto LABEL_103;
      }
    }
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v56.__r_.__value_.__l.__data_);
    }
  }
  return 0;
}

void sub_1D2D16DE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::KoGrammarSynthesizer_KoDisplayFunction::~KoGrammarSynthesizer_KoDisplayFunction(morphun::grammar::synthesis::KoGrammarSynthesizer_KoDisplayFunction *this)
{
  *(void *)this = &unk_1F29F3B10;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>>>::destroy(*((void **)this + 5));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &unk_1F29F3B10;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>>>::destroy(*((void **)this + 5));
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,0>(uint64_t a1)
{
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_1D2D1701C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void std::pair<std::basic_string<char16_t> const,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>::pair[abi:ne180100]<true,0>(std::basic_string<char16_t> *this, long long *a2, morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(this, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver *)&this[1], a3);
}

uint64_t std::pair<std::basic_string<char16_t> const,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

CFStringRef mss_createPrintCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::SpeakableString>(a1);
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  int v3 = *(char *)(v2 + 23);
  if (v3 >= 0) {
    long long v4 = (const UniChar *)v2;
  }
  else {
    long long v4 = *(const UniChar **)v2;
  }
  if (v3 >= 0) {
    CFIndex v5 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    CFIndex v5 = *(void *)(v2 + 8);
  }
  return CFStringCreateWithCharacters(0, v4, v5);
}

void sub_1D2D17218(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

CFStringRef mss_createSpeakCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::SpeakableString>(a1);
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 40))(v1);
  int v3 = *(char *)(v2 + 23);
  if (v3 >= 0) {
    long long v4 = (const UniChar *)v2;
  }
  else {
    long long v4 = *(const UniChar **)v2;
  }
  if (v3 >= 0) {
    CFIndex v5 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    CFIndex v5 = *(void *)(v2 + 8);
  }
  return CFStringCreateWithCharacters(0, v4, v5);
}

uint64_t mss_speakEqualsPrint(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::SpeakableString>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 48))(v1);
}

uint64_t mss_contains(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::SpeakableString>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 64))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1D2D173E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    uint64_t v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2D173C8);
  }
  _Unwind_Resume(exception_object);
}

void mss_create()
{
}

void sub_1D2D174BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v16, 0x10B3C40F7FF9C27);
  if (a2 == 1)
  {
    int v19 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v19, v15, v20);
    __cxa_end_catch();
    JUMPOUT(0x1D2D174A4);
  }
  _Unwind_Resume(a1);
}

void mss_createPrintSpeak()
{
}

void sub_1D2D175DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  MEMORY[0x1D942B8B0](v21, 0x10B3C40F7FF9C27);
  if (a2 == 1)
  {
    unint64_t v24 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v24, v20, v25);
    __cxa_end_catch();
    JUMPOUT(0x1D2D175C4);
  }
  _Unwind_Resume(a1);
}

uint64_t mss_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

void morphun::analysis::TokenStreamContainer::~TokenStreamContainer(morphun::analysis::TokenStreamContainer *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::analysis::TokenStreamContainer::~TokenStreamContainer(morphun::analysis::TokenStreamContainer *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  if (*((void *)this + 2))
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 48))(v4);
      uint64_t v5 = *((void *)this + 1);
      if (v5)
      {
        uint64_t v6 = *(void *)(v5 + 8);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 32))(v6);
        }
      }
    }
  }
}

morphun::analysis::TokenStreamContainer *morphun::analysis::TokenStreamContainer::TokenStreamContainer(morphun::analysis::TokenStreamContainer *this, morphun::analysis::Analyzer *a2, morphun::analysis::Analyzer_TokenStreamComponents *a3, uint64_t a4)
{
  uint64_t v7 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v7 - 40)) = *((void *)a2 + 1);
  npc<morphun::analysis::Analyzer>((uint64_t)a3);
  *((void *)this + 1) = a3;
  uint64_t v8 = npc<morphun::analysis::Analyzer_TokenStreamComponents>(a4);
  *((void *)this + 2) = a4;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a4 + 32))(v8);
  *((void *)this + 3) = npc<morphun::analysis::TokenStream>(v9);
  return this;
}

void sub_1D2D17954(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::analysis::Analyzer_TokenStreamComponents>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D179B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D17A1C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::analysis::TokenStreamContainer *morphun::analysis::TokenStreamContainer::TokenStreamContainer(morphun::analysis::TokenStreamContainer *this, morphun::analysis::Analyzer *a2, morphun::analysis::Analyzer_TokenStreamComponents *a3)
{
  *(void *)this = &off_1F29F3B58;
  npc<morphun::analysis::Analyzer>((uint64_t)a2);
  *((void *)this + 1) = a2;
  uint64_t v6 = npc<morphun::analysis::Analyzer_TokenStreamComponents>((uint64_t)a3);
  *((void *)this + 2) = a3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 32))(v6);
  *((void *)this + 3) = npc<morphun::analysis::TokenStream>(v7);
  return this;
}

void *morphun::analysis::TokenStreamContainer::TokenStreamContainer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v3 - 40)) = a2[1];
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  return morphun::analysis::TokenStreamContainer::operator=(a1, a3);
}

void *morphun::analysis::TokenStreamContainer::operator=(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  if (v4)
  {
    uint64_t v5 = a1[3];
    if (v5) {
      BOOL v6 = v4 == *(void *)(a2 + 16);
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6)
    {
      (*(void (**)(uint64_t))(*(void *)v5 + 48))(v5);
      uint64_t v7 = a1[1];
      if (v7)
      {
        uint64_t v8 = *(void *)(v7 + 8);
        if (v8) {
          (*(void (**)(uint64_t))(*(void *)v8 + 32))(v8);
        }
      }
    }
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  a1[3] = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  return a1;
}

void *morphun::analysis::TokenStreamContainer::TokenStreamContainer(void *a1, uint64_t a2)
{
  *a1 = &off_1F29F3B58;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  return morphun::analysis::TokenStreamContainer::operator=(a1, a2);
}

void virtual thunk to'morphun::analysis::TokenStreamContainer::~TokenStreamContainer(morphun::analysis::TokenStreamContainer *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::analysis::TokenStreamContainer::operator->(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

uint64_t morphun::analysis::TokenStreamContainer::operator*(uint64_t a1)
{
  return npc<morphun::analysis::TokenStream>(*(void *)(a1 + 24));
}

uint64_t morphun::analysis::TokenStreamContainer::get(morphun::analysis::TokenStreamContainer *this)
{
  return *((void *)this + 3);
}

uint64_t morphun::exception::MissingResourceException::getKey(morphun::exception::MissingResourceException *this)
{
  return (uint64_t)this + 80;
}

uint64_t morphun::exception::MissingResourceException::getClassName(morphun::exception::MissingResourceException *this)
{
  return (uint64_t)this + 56;
}

void morphun::exception::MissingResourceException::~MissingResourceException(std::exception *this)
{
  morphun::exception::MissingResourceException::~MissingResourceException(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F2A11448;
  if (SHIBYTE(this[12].__vftable) < 0) {
    operator delete(this[10].__vftable);
  }
  if (SHIBYTE(this[9].__vftable) < 0) {
    operator delete(this[7].__vftable);
  }

  morphun::exception::Throwable::~Throwable(this);
}

uint64_t morphun::exception::MissingResourceException::MissingResourceException(uint64_t a1, long long *a2, long long *a3, long long *a4)
{
  uint64_t v7 = morphun::exception::Throwable::Throwable(a1, a2);
  *(void *)uint64_t v7 = &unk_1F2A11448;
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(v7 + 56), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *(void *)(v7 + 72) = *((void *)a3 + 2);
    *(_OWORD *)(v7 + 56) = v8;
  }
  uint64_t v9 = (std::basic_string<char16_t> *)(a1 + 80);
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v9, *(const std::basic_string<char16_t>::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v10 = *a4;
    *(void *)(a1 + 96) = *((void *)a4 + 2);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v10;
  }
  return a1;
}

void sub_1D2D17E5C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*v2);
  }
  morphun::exception::Throwable::~Throwable((std::exception *)v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_WithPrepositionLookupFunction::getArticle(uint64_t a1, uint64_t a2)
{
  v11[0] = 0;
  v11[1] = 0;
  uint64_t v12 = 0;
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v3 = (morphun::lang::StringFilterUtil *)morphun::util::StringUtils::trim(v2, __p);
  unint64_t v4 = v10;
  int v5 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    unint64_t v4 = (unint64_t)__p[1];
  }
  if (v4)
  {
    BOOL v6 = (void *)morphun::lang::StringFilterUtil::ARABIC_SCRIPT(v3);
    uint64_t v7 = (void **)__p[0];
    if (v5 >= 0) {
      uint64_t v7 = __p;
    }
    if (MEMORY[0x1D942C150](*v6, *(unsigned __int16 *)v7))
    {
      uint64_t v8 = 1;
      HIBYTE(v12) = 1;
      LOWORD(v11[0]) = 1576;
    }
    else
    {
      uint64_t v8 = 3;
      HIBYTE(v12) = 3;
      LODWORD(v11[0]) = 104859176;
      WORD2(v11[0]) = 160;
    }
    *(_WORD *)((unint64_t)v11 | (2 * v8)) = 0;
    operator new();
  }
  operator new();
}

void sub_1D2D17FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p)
{
  MEMORY[0x1D942B8B0](v16, 0x10B3C40F7FF9C27);
  if (v17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_WithPrepositionLookupFunction::~ArGrammarSynthesizer_WithPrepositionLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_WithPrepositionLookupFunction *this)
{
}

uint64_t **com::apple::siri::tokenizer::data::config_el::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

double morphun::Chunk::getString@<D0>(morphun::Chunk *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  return morphun::Chunk::getNormalizedString(this, 0, a2);
}

double morphun::Chunk::getNormalizedString@<D0>(morphun::Chunk *this@<X0>, int a2@<W1>, std::basic_string<char16_t> *a3@<X8>)
{
  memset(&v15, 0, sizeof(v15));
  uint64_t v6 = npc<morphun::Token>(*((void *)this + 2));
  uint64_t v7 = (uint64_t *)((char *)this + 8);
  uint64_t v8 = *(void *)(v6 + 80);
  while (1)
  {
    uint64_t v9 = *v7;
    if (!*v7 || v9 == v8) {
      break;
    }
    {
      goto LABEL_7;
    }
    {
      {
        goto LABEL_14;
      }
LABEL_7:
      int v11 = *(char *)(v9 + 39);
      if (v11 >= 0) {
        uint64_t v12 = (const std::basic_string<char16_t>::value_type *)(v9 + 16);
      }
      else {
        uint64_t v12 = *(const std::basic_string<char16_t>::value_type **)(v9 + 16);
      }
      if (v11 >= 0) {
        std::basic_string<char16_t>::size_type v13 = *(unsigned __int8 *)(v9 + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v13 = *(void *)(v9 + 24);
      }
      std::basic_string<char16_t>::append(&v15, v12, v13);
      goto LABEL_14;
    }
    if (!a2) {
      goto LABEL_7;
    }
    if (*(_DWORD *)(v9 + 12) > *(_DWORD *)(v9 + 8)) {
      std::basic_string<char16_t>::append(&v15, &word_1D2ED0D7C, 1uLL);
    }
LABEL_14:
    uint64_t v7 = (uint64_t *)(v9 + 80);
  }
  if (a2)
  {
    morphun::util::StringUtils::trim((uint64_t)&v15, a3);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    double result = *(double *)&v15.__r_.__value_.__l.__data_;
    *a3 = v15;
  }
  return result;
}

void sub_1D2D182A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D18314(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double morphun::Chunk::getCleanString@<D0>(morphun::Chunk *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  return morphun::Chunk::getNormalizedString(this, 1, a2);
}

uint64_t morphun::Chunk::getCleanValueString@<X0>(morphun::Chunk *this@<X0>, int a2@<W1>, std::basic_string<char16_t> *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = npc<morphun::Token>(*((void *)this + 2));
  uint64_t v7 = *(void *)(result + 80);
  for (uint64_t i = (uint64_t *)((char *)this + 8); ; uint64_t i = (uint64_t *)(v9 + 80))
  {
    uint64_t v9 = *i;
    if (!*i || v9 == v7) {
      break;
    }
    if (!a2 || *(unsigned char *)(v9 + 64)) {
      goto LABEL_33;
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "-");
    int v11 = *(char *)(v9 + 63);
    if (v11 >= 0) {
      uint64_t v12 = (char *)*(unsigned __int8 *)(v9 + 63);
    }
    else {
      uint64_t v12 = *(char **)(v9 + 48);
    }
    unint64_t v13 = v28;
    if ((v28 & 0x80u) != 0) {
      unint64_t v13 = (unint64_t)__p[1];
    }
    if (v12 != (char *)v13)
    {
      BOOL v23 = 0;
      goto LABEL_28;
    }
    if (v12)
    {
      uint64_t v14 = (void **)__p[0];
      if ((v28 & 0x80u) == 0) {
        uint64_t v14 = __p;
      }
      if (v11 >= 0) {
        std::basic_string<char16_t> v15 = (unsigned __int16 *)(v9 + 40);
      }
      else {
        std::basic_string<char16_t> v15 = *(unsigned __int16 **)(v9 + 40);
      }
      uint64_t v16 = v12 - 1;
      do
      {
        int v18 = *v15++;
        int v17 = v18;
        int v20 = *(unsigned __int16 *)v14;
        uint64_t v14 = (void **)((char *)v14 + 2);
        int v19 = v20;
        BOOL v22 = v16-- != 0;
        BOOL v23 = v19 == v17;
      }
      while (v19 == v17 && v22);
LABEL_28:
      if (((char)v28 & 0x80000000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_32;
    }
    BOOL v23 = 1;
    if (((char)v28 & 0x80000000) == 0)
    {
LABEL_29:
      if (v23) {
        goto LABEL_30;
      }
      goto LABEL_33;
    }
LABEL_32:
    operator delete(__p[0]);
    if (v23)
    {
LABEL_30:
      uint64_t result = (uint64_t)std::basic_string<char16_t>::append(a3, &word_1D2ED0D7C, 1uLL);
      continue;
    }
LABEL_33:
    int v24 = *(char *)(v9 + 63);
    if (v24 >= 0) {
      uint64_t v25 = (const std::basic_string<char16_t>::value_type *)(v9 + 40);
    }
    else {
      uint64_t v25 = *(const std::basic_string<char16_t>::value_type **)(v9 + 40);
    }
    if (v24 >= 0) {
      std::basic_string<char16_t>::size_type v26 = *(unsigned __int8 *)(v9 + 63);
    }
    else {
      std::basic_string<char16_t>::size_type v26 = *(void *)(v9 + 48);
    }
    uint64_t result = (uint64_t)std::basic_string<char16_t>::append(a3, v25, v26);
  }
  return result;
}

void sub_1D2D184A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::Chunk::getCleanValueString(morphun::Chunk *this)
{
  return (*(uint64_t (**)(morphun::Chunk *, uint64_t))(*(void *)this + 80))(this, 1);
}

uint64_t morphun::Chunk::getSubChunk(morphun::Chunk *this, int a2, int a3)
{
  uint64_t v6 = *(void **)(npc<morphun::Token>(*((void *)this + 2)) + 80);
  uint64_t v7 = (void *)*((void *)this + 1);
  if (v7) {
    BOOL v8 = v7 == v6;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v10 = 0;
  do
  {
    if (v9) {
      goto LABEL_10;
    }
    if ((*(int (**)(void *))(*v7 + 24))(v7) > a2)
    {
      uint64_t v9 = 0;
LABEL_10:
      if (v10) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
    if ((*(int (**)(void *))(*v7 + 32))(v7) <= a2) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = v7;
    }
    if (v10)
    {
LABEL_11:
      if (!v9) {
        goto LABEL_25;
      }
LABEL_12:
      if (v10) {
        break;
      }
      goto LABEL_25;
    }
LABEL_18:
    if ((*(int (**)(void *))(*v7 + 24))(v7) >= a3)
    {
      unsigned __int8 v10 = 0;
      goto LABEL_25;
    }
    if ((*(int (**)(void *))(*v7 + 32))(v7) >= a3) {
      unsigned __int8 v10 = v7;
    }
    else {
      unsigned __int8 v10 = 0;
    }
    if (v9) {
      goto LABEL_12;
    }
LABEL_25:
    uint64_t v7 = (void *)v7[10];
  }
  while (v7 && v7 != v6);
  if (v10 && v9) {
    operator new();
  }
  return 0;
}

void sub_1D2D186B4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C401D7E7872);
  _Unwind_Resume(a1);
}

morphun::Chunk *morphun::Chunk::Chunk(morphun::Chunk *this, morphun::Token *a2, morphun::Token *a3, char a4)
{
  *(void *)this = &off_1F2A08B18;
  *((void *)this + 1) = a2;
  *((void *)this + 2) = a3;
  *((_DWORD *)this + 6) = 0;
  *((unsigned char *)this + 28) = a4;
  *((_DWORD *)this + 6) = morphun::Chunk::checkSize(a2, a3, a3);
  return this;
}

uint64_t morphun::Chunk::checkSize(morphun::Chunk *this, const morphun::Token *a2, const morphun::Token *a3)
{
  if (!this || !a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = 1;
  while (this != a2)
  {
    uint64_t v3 = (v3 + 1);
    this = (morphun::Chunk *)*((void *)this + 10);
    if (!this)
    {
      uint64_t v4 = __cxa_allocate_exception(0x38uLL);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"end token must be linked to and eventually follow start token!");
      morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v4, &__dst);
    }
  }
  return v3;
}

void sub_1D2D18808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t morphun::Chunk::getEnd(morphun::Chunk *this)
{
  return *((void *)this + 2);
}

uint64_t morphun::Chunk::getStart(morphun::Chunk *this)
{
  return *((void *)this + 1);
}

uint64_t morphun::Chunk::getSize(morphun::Chunk *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t morphun::Chunk::getWordCount(morphun::Chunk *this, const morphun::Chunk *a2)
{
  uint64_t v2 = npc<morphun::Chunk const>((uint64_t)this);
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(npc<morphun::Chunk const>(v2) + 16);
  uint64_t v5 = 0;
  if (v3) {
    BOOL v6 = v3 == v4;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    do
    {
      if (v7)
      {
        BOOL v8 = v7;
        uint64_t v9 = *v7;
        {
          unsigned __int8 v10 = (morphun::Chunk *)(*(uint64_t (**)(void *))(v9 + 56))(v8);
          uint64_t v5 = morphun::Chunk::getWordCount(v10, v11) + v5;
        }
      }
      else
      {
        uint64_t v5 = v5 + *(unsigned __int8 *)(v3 + 64);
      }
      uint64_t v3 = *(void *)(v3 + 80);
      npc<morphun::Token>(v3);
    }
    while (v3 && v3 != v4);
  }
  return v5;
}

void sub_1D2D189E4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::Chunk::getWordCount(morphun::Chunk *this)
{
  uint64_t v1 = (*(uint64_t (**)(morphun::Chunk *))(*(void *)this + 64))(this);
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  return v2;
}

void sub_1D2D18A90(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void morphun::Chunk::~Chunk(morphun::Chunk *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::Chunk::~Chunk(morphun::Chunk *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  if (*((unsigned char *)this + 28))
  {
    uint64_t v3 = (void *)*((void *)this + 1);
    if (v3)
    {
      do
      {
        uint64_t v4 = (void *)v3[10];
        (*(void (**)(void *))(*v3 + 16))(v3);
        uint64_t v3 = v4;
      }
      while (v4);
    }
  }
}

uint64_t morphun::Chunk::toString(morphun::Chunk *this)
{
  return (*(uint64_t (**)(void))(*(void *)this + 96))();
}

morphun::Chunk *morphun::Chunk::Chunk(morphun::Chunk *this, morphun::Token *a2, morphun::Token *a3, morphun::Token *a4, char a5)
{
  uint64_t v6 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v6 - 40)) = *((void *)a2 + 1);
  *((void *)this + 1) = a3;
  *((void *)this + 2) = a4;
  *((_DWORD *)this + 6) = 0;
  *((unsigned char *)this + 28) = a5;
  *((_DWORD *)this + 6) = morphun::Chunk::checkSize(a3, a4, a3);
  return this;
}

void virtual thunk to'morphun::Chunk::~Chunk(morphun::Chunk *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t virtual thunk to'morphun::Chunk::toString(morphun::Chunk *this)
{
  return (*(uint64_t (**)(void))(*(void *)((char *)this + *(void *)(*(void *)this - 24)) + 96))();
}

uint64_t morphun::dialog::CommonConceptFactoryImpl::quantifyType(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a4)
  {
LABEL_14:
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + *(void *)(*(void *)a3 - 56)) + 24))(a3 + *(void *)(*(void *)a3 - 56));
    goto LABEL_15;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 128))(a3);
  if (!v9)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v10 = v9;
  memset(&__p, 0, sizeof(__p));
  if (a5 == 2)
  {
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 4;
    std::basic_string<char16_t>::size_type v11 = 0x6C006100750064;
  }
  else
  {
    if (a5 == 1)
    {
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = 8;
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)L"singular";
      goto LABEL_9;
    }
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 6;
    LODWORD(__p.__r_.__value_.__r.__words[1]) = 7077985;
    std::basic_string<char16_t>::size_type v11 = *(void *)"p";
  }
  __p.__r_.__value_.__r.__words[0] = v11;
LABEL_9:
  uint64_t v12 = npc<morphun::dialog::SemanticFeature const>(a1[47]);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 40))(v12);
  uint64_t v14 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v13, (unsigned __int16 *)&__p);
  uint64_t v15 = npc<morphun::dialog::SemanticFeature const>(a1[47]);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v15 + 40))(v15) + 8 != v14)
  {
    uint64_t v16 = a1[47];
    npc<morphun::dialog::SemanticFeature const>(v16);
    (*(void (**)(uint64_t, uint64_t, std::basic_string<char16_t> *))(*(void *)v10 + 64))(v10, v16, &__p);
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v10 + *(void *)(*(void *)v10 - 56)) + 24))(v10 + *(void *)(*(void *)v10 - 56));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  (*(void (**)(uint64_t))(*(void *)v10 + 16))(v10);
  if (!v17) {
    goto LABEL_14;
  }
LABEL_15:
  memset(&__p, 0, sizeof(__p));
  if (a1[48])
  {
    int v18 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)a3 + 48))(a3);
    if (v18) {
      std::basic_string<char16_t>::operator=(&__p, v18);
    }
  }
  if (!v17)
  {
    int v20 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(v20);
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t, std::basic_string<char16_t> *, uint64_t))(*a1 + 120))(a1, a2, v17, &__p, a5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v17 + 16))(v17);
}

void sub_1D2D19114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_1D2D19210(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::CommonConceptFactoryImpl::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
  morphun::dialog::SpeakableString::SpeakableString(v8, (long long *)__p);
  morphun::dialog::SpeakableString::operator+(a1, (uint64_t)v8, v9);
  morphun::dialog::SpeakableString::operator+((uint64_t)v9, a2, a3);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2D192C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::CommonConceptFactoryImpl::quantify(morphun::dialog::CommonConceptFactoryImpl *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SpeakableString *a3, const morphun::dialog::SemanticFeatureConceptBase *a4)
{
  if (*((void *)this + 47))
  {
    npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a4);
    uint64_t v7 = *((void *)this + 47);
    npc<morphun::dialog::SemanticFeature const>(v7);
    (*(void (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(void *)a4 + 48))(a4, v7);
  }
  BOOL v23 = 0;
  unint64_t v24 = 0;
  BOOL v22 = &v23;
  BOOL v8 = (morphun::dialog::CommonConceptFactoryImpl *)*((void *)this + 91);
  if (v8 != (morphun::dialog::CommonConceptFactoryImpl *)((char *)this + 736))
  {
    do
    {
      uint64_t v9 = v23;
      uint64_t v10 = &v23;
      if (v22 == &v23) {
        goto LABEL_10;
      }
      std::basic_string<char16_t>::size_type v11 = v23;
      uint64_t v12 = &v23;
      if (v23)
      {
        do
        {
          uint64_t v10 = (uint64_t **)v11;
          std::basic_string<char16_t>::size_type v11 = (uint64_t *)v11[1];
        }
        while (v11);
      }
      else
      {
        do
        {
          uint64_t v10 = (uint64_t **)v12[2];
          BOOL v13 = *v10 == (uint64_t *)v12;
          uint64_t v12 = v10;
        }
        while (v13);
      }
      int v14 = *((_DWORD *)v8 + 7);
      if (*((_DWORD *)v10 + 7) < v14)
      {
LABEL_10:
        if (v23) {
          uint64_t v15 = v10;
        }
        else {
          uint64_t v15 = &v23;
        }
        if (v23) {
          uint64_t v16 = v10 + 1;
        }
        else {
          uint64_t v16 = &v23;
        }
      }
      else
      {
        uint64_t v15 = &v23;
        uint64_t v16 = &v23;
        if (v23)
        {
          uint64_t v16 = &v23;
          while (1)
          {
            while (1)
            {
              uint64_t v15 = (uint64_t **)v9;
              int v20 = *((_DWORD *)v9 + 7);
              if (v14 >= v20) {
                break;
              }
              uint64_t v9 = *v15;
              uint64_t v16 = v15;
              if (!*v15) {
                goto LABEL_17;
              }
            }
            if (v20 >= v14) {
              break;
            }
            uint64_t v16 = v15 + 1;
            uint64_t v9 = v15[1];
            if (!v9) {
              goto LABEL_17;
            }
          }
        }
      }
      if (!*v16)
      {
LABEL_17:
        uint64_t v17 = operator new(0x20uLL);
        v17[7] = *((_DWORD *)v8 + 7);
        *(void *)uint64_t v17 = 0;
        *((void *)v17 + 1) = 0;
        *((void *)v17 + 2) = v15;
        *uint64_t v16 = (uint64_t *)v17;
        if (*v22)
        {
          BOOL v22 = (uint64_t **)*v22;
          uint64_t v17 = *v16;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v23, (uint64_t *)v17);
        ++v24;
      }
      int v18 = (morphun::dialog::CommonConceptFactoryImpl *)*((void *)v8 + 1);
      if (v18)
      {
        do
        {
          int v19 = v18;
          int v18 = *(morphun::dialog::CommonConceptFactoryImpl **)v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          int v19 = (morphun::dialog::CommonConceptFactoryImpl *)*((void *)v8 + 2);
          BOOL v13 = *(void *)v19 == (void)v8;
          BOOL v8 = v19;
        }
        while (!v13);
      }
      BOOL v8 = v19;
    }
    while (v19 != (morphun::dialog::CommonConceptFactoryImpl *)((char *)this + 736));
  }
  double v21 = *((double *)a2 + 1);
  if (*((_DWORD *)a2 + 4) != 1) {
    double v21 = (double)*((uint64_t *)a2 + 1);
  }
  morphun::dialog::GrammaticalCountFactory::select((morphun::dialog::CommonConceptFactoryImpl *)((char *)this + 712), v21);
  if (v24 <= 1) {
    operator new();
  }
  operator new();
}

void sub_1D2D19D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  MEMORY[0x1D942B8B0](v18, 0x10B3C40F7FF9C27);
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(a18);
  _Unwind_Resume(a1);
}

void sub_1D2D19E7C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::dialog::GrammaticalCountConcept>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D19EE0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::CommonConceptFactoryImpl::quantify(morphun::dialog::CommonConceptFactoryImpl *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  if (*((void *)this + 49))
  {
    npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a3);
    uint64_t v6 = *((void *)this + 49);
    npc<morphun::dialog::SemanticFeature const>(v6);
    uint64_t v7 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(void *)a3 + 104))(a3, v6);
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 32))(v7);
      uint64_t v10 = (morphun::dialog::CommonConceptFactoryImpl *)std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>((uint64_t)this + 400, v9);
      (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
      if ((morphun::dialog::CommonConceptFactoryImpl *)((char *)this + 408) != v10) {
        operator new();
      }
    }
  }
  uint64_t v11 = (*(uint64_t (**)(const morphun::dialog::NumberConcept *))(*(void *)a2 + 24))(a2);
  uint64_t v12 = (*(uint64_t (**)(morphun::dialog::CommonConceptFactoryImpl *, const morphun::dialog::NumberConcept *, uint64_t, const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)this + 112))(this, a2, v11, a3);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 16))(v11);
  }
  return v12;
}

void sub_1D2D1A0CC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

void morphun::dialog::CommonConceptFactoryImpl::quote(const void **this@<X0>, const morphun::dialog::SpeakableString *a2@<X1>, void *a3@<X8>)
{
  if ((*(unsigned int (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 48))(a2))
  {
    uint64_t v6 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v15, this + 53, v6);
    int v7 = *((char *)this + 471);
    if (v7 >= 0) {
      uint64_t v8 = (const std::basic_string<char16_t>::value_type *)(this + 56);
    }
    else {
      uint64_t v8 = (const std::basic_string<char16_t>::value_type *)this[56];
    }
    if (v7 >= 0) {
      std::basic_string<char16_t>::size_type v9 = *((unsigned __int8 *)this + 471);
    }
    else {
      std::basic_string<char16_t>::size_type v9 = (std::basic_string<char16_t>::size_type)this[57];
    }
    std::basic_string<char16_t>::append(&v15, v8, v9);
    std::basic_string<char16_t> __p = v15;
    memset(&v15, 0, sizeof(v15));
    morphun::dialog::SpeakableString::SpeakableString(a3, (long long *)&__p);
  }
  else
  {
    uint64_t v10 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v15, this + 53, v10);
    int v11 = *((char *)this + 471);
    if (v11 >= 0) {
      uint64_t v12 = (const std::basic_string<char16_t>::value_type *)(this + 56);
    }
    else {
      uint64_t v12 = (const std::basic_string<char16_t>::value_type *)this[56];
    }
    if (v11 >= 0) {
      std::basic_string<char16_t>::size_type v13 = *((unsigned __int8 *)this + 471);
    }
    else {
      std::basic_string<char16_t>::size_type v13 = (std::basic_string<char16_t>::size_type)this[57];
    }
    std::basic_string<char16_t>::append(&v15, v12, v13);
    std::basic_string<char16_t> __p = v15;
    memset(&v15, 0, sizeof(v15));
    int v14 = (unsigned __int16 *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 40))(a2);
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)a3, (long long *)&__p, v14);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D1A2E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::CommonConceptFactoryImpl::number(morphun::dialog::CommonConceptFactoryImpl *this, const morphun::util::ULocale *a2, double a3)
{
}

void sub_1D2D1A3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  MEMORY[0x1D942B8B0](v9, 0x1093C409236E2FBLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::CommonConceptFactoryImpl::number(morphun::dialog::CommonConceptFactoryImpl *this, const morphun::util::ULocale *a2)
{
}

void sub_1D2D1A480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  MEMORY[0x1D942B8B0](v9, 0x1093C409236E2FBLL);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::CommonConceptFactoryImpl::createAndList(uint64_t a1, uint64_t **a2)
{
  morphun::dialog::convertToConst((uint64_t)__p, a2);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 64))(a1, __p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v3;
}

void sub_1D2D1A530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D1A674(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::CommonConceptFactoryImpl::createAndList()
{
}

void sub_1D2D1A79C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void sub_1D2D1A814(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::CommonConceptFactoryImpl::createOrList(uint64_t a1, uint64_t **a2)
{
  morphun::dialog::convertToConst((uint64_t)__p, a2);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 48))(a1, __p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return v3;
}

void sub_1D2D1A89C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::CommonConceptFactoryImpl::createOrList()
{
}

void sub_1D2D1A9B4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::CommonConceptFactoryImpl::createConcept(morphun::dialog::CommonConceptFactoryImpl *this, const morphun::dialog::SpeakableString *a2)
{
}

void sub_1D2D1AA34(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4018BE3501);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::CommonConceptFactoryImpl::getLanguage(morphun::dialog::CommonConceptFactoryImpl *this)
{
  return (uint64_t)this + 8;
}

uint64_t morphun::dialog::CommonConceptFactoryImpl::getSemanticFeatureModel(morphun::dialog::CommonConceptFactoryImpl *this)
{
  return (uint64_t)this + 136;
}

void morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(void **this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(void **this, void **a2)
{
  uint64_t v3 = *a2;
  *this = *a2;
  *(void **)((char *)this + *(v3 - 18)) = a2[1];
  *(void **)((char *)this + *((void *)*this - 5)) = a2[2];
  if (*((char *)this + 471) < 0) {
    operator delete(this[56]);
  }
  if (*((char *)this + 447) < 0) {
    operator delete(this[53]);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(this[51]);
  morphun::dialog::SemanticFeatureModel::~SemanticFeatureModel((morphun::dialog::SemanticFeatureModel *)(this + 17));
}

morphun::dialog::CommonConceptFactoryImpl *morphun::dialog::CommonConceptFactoryImpl::CommonConceptFactoryImpl(morphun::dialog::CommonConceptFactoryImpl *this, const morphun::util::ULocale *a2, morphun::util::ULocale *a3)
{
  memset(v7, 0, sizeof(v7));
  v6[0] = 0;
  v6[1] = 0;
  uint64_t v5 = v6;
  morphun::dialog::CommonConceptFactoryImpl::CommonConceptFactoryImpl((uint64_t)this, (uint64_t *)a2, a3, (uint64_t)v7, &v5);
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(v6[0]);
  return this;
}

void sub_1D2D1ACB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t morphun::dialog::CommonConceptFactoryImpl::CommonConceptFactoryImpl(uint64_t a1, uint64_t *a2, morphun::util::ULocale *a3, uint64_t a4, void *a5)
{
  uint64_t v9 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v9 - 144)) = a2[1];
  *(void *)(a1 + *(void *)(*(void *)a1 - 40)) = a2[2];
  morphun::util::ULocale::ULocale((morphun::util::ULocale *)(a1 + 8), a3);
  morphun::dialog::SemanticFeatureModel::SemanticFeatureModel((morphun::dialog::SemanticFeatureModel *)(a1 + 136), a3);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"count");
  uint64_t v10 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 144, (unsigned __int16 *)__p);
  uint64_t v11 = a1 + 152;
  if (a1 + 152 == v10) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = *(void *)(v10 + 56);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(__p[0]);
  }
  *(void *)(a1 + 376) = v12;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "m");
  uint64_t v13 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 144, (unsigned __int16 *)__p);
  if (v11 == v13) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = *(void *)(v13 + 56);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(__p[0]);
  }
  *(void *)(a1 + 384) = v14;
  uint64_t v15 = *(unsigned __int8 *)(a4 + 23);
  if ((v15 & 0x80u) != 0) {
    uint64_t v15 = *(void *)(a4 + 8);
  }
  if (v15)
  {
    uint64_t v16 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a1 + 144, (unsigned __int16 *)a4);
    if (v11 == v16) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = *(void *)(v16 + 56);
    }
  }
  *(void *)(a1 + 392) = v15;
  std::map<std::basic_string<char16_t>,std::basic_string<char16_t>>::map[abi:ne180100](a1 + 400, a5);
  uint64_t v17 = (void **)(a1 + 424);
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  uint64_t v18 = (void **)(a1 + 448);
  *(_OWORD *)(a1 + 424) = 0u;
  morphun::dialog::getDefaultList(a1 + 472);
  morphun::dialog::getDefaultList((uint64_t)__p);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SpeakableString *)(a1 + 552), (const morphun::dialog::SpeakableString *)v22);
  morphun::dialog::getDefaultList(a1 + 592);
  morphun::dialog::getDefaultList((uint64_t)__p);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SpeakableString *)(a1 + 672), (const morphun::dialog::SpeakableString *)v22);
  morphun::dialog::GrammaticalCountFactory::GrammaticalCountFactory((morphun::dialog::GrammaticalCountFactory *)(a1 + 712), a3);
  ulocdata_open();
  morphun::dialog::getQuote((uint64_t)__p);
  if (*(char *)(a1 + 447) < 0) {
    operator delete(*v17);
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)__p;
  *(void *)(a1 + 440) = v21;
  morphun::dialog::getQuote((uint64_t)__p);
  if (*(char *)(a1 + 471) < 0) {
    operator delete(*v18);
  }
  *(_OWORD *)uint64_t v18 = *(_OWORD *)__p;
  *(void *)(a1 + 464) = v21;
  ulocdata_close();
  return a1;
}

void sub_1D2D1B0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, morphun::dialog::SemanticFeatureModel *a10, void **a11, uint64_t a12, char a13)
{
  ulocdata_close();
  if (*(char *)(v13 + 471) < 0) {
    operator delete(*v15);
  }
  if (*(char *)(v13 + 447) < 0) {
    operator delete(*v14);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(*(void **)(v13 + 408));
  morphun::dialog::SemanticFeatureModel::~SemanticFeatureModel(a10);
  _Unwind_Resume(a1);
}

void sub_1D2D1B20C()
{
}

void morphun::dialog::getDefaultList(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = operator new(0x88uLL);
  v24.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v2;
  *(_OWORD *)&v24.__r_.__value_.__r.__words[1] = xmmword_1D2D6F5B0;
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[6] = 0u;
  v2[7] = 0u;
  *((_WORD *)v2 + 64) = 0;
  long long v26 = xmmword_1E696DBD0;
  uint64_t v27 = &word_1D2ED0AEE;
  long long v25 = xmmword_1E696DBE8;
  int v23 = 0;
  ulistfmt_openForType();
  int v3 = ulistfmt_format();
  std::basic_string<char16_t>::resize(&v24, v3, 0);
  memset(&__str, 0, sizeof(__str));
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v4 = &v24;
  }
  else {
    uint64_t v4 = (std::basic_string<char16_t> *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = v24.__r_.__value_.__l.__size_;
  }
  morphun::util::StringViewUtils::replace(&__str, (uint64_t)v4, size, word_1D2ECF17A, 1uLL, &word_1D2ED0D7C, 1uLL);
  p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_str = &__str;
  }
  int64_t v8 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int64_t v8 = __str.__r_.__value_.__l.__size_;
  }
  if (v8 < 1) {
    goto LABEL_15;
  }
  uint64_t v9 = (char *)p_str + 2 * v8;
  uint64_t v10 = (char *)p_str;
  while (*(_WORD *)v10 != 124)
  {
    v10 += 2;
    if (!--v8) {
      goto LABEL_15;
    }
  }
  if (v10 == v9 || (uint64_t v13 = v10 - (char *)p_str, v13 == -2))
  {
LABEL_15:
    exception = __cxa_allocate_exception(0x38uLL);
    uint64_t v12 = operator new(0x30uLL);
    int v20 = v12;
    long long v21 = xmmword_1D2D6F510;
    *uint64_t v12 = xmmword_1D2ECF17E;
    v12[1] = unk_1D2ECF18E;
    *(_OWORD *)((char *)v12 + 28) = unk_1D2ECF19A;
    *((_WORD *)v12 + 22) = 0;
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v20);
  }
  uint64_t v14 = v13 >> 1;
  std::basic_string<char16_t>::basic_string(&v19, &__str, 0, v13 >> 1, v6);
  morphun::dialog::SpeakableString::SpeakableString(&v20, (long long *)&v19);
  std::basic_string<char16_t>::size_type v16 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v16 = __str.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::basic_string(&v17, &__str, v14 + 1, v16 + ~v14, v15);
  morphun::dialog::SpeakableString::SpeakableString(v18, (long long *)&v17);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SpeakableString *)a1, (const morphun::dialog::SpeakableString *)&v20);
  morphun::dialog::SpeakableString::SpeakableString((morphun::dialog::SpeakableString *)(a1 + 40), (const morphun::dialog::SpeakableString *)v18);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  ulistfmt_close();
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D1B5D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  __cxa_free_exception(v40);
  ulistfmt_close();
  if (*(char *)(v41 - 113) < 0) {
    operator delete(*(void **)(v41 - 136));
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::getQuote(uint64_t a1)
{
  *(unsigned char *)(a1 + 23) = 4;
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 0;
  int Delimiter = ulocdata_getDelimiter();
  std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)a1, Delimiter, 0);
}

void sub_1D2D1B7AC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::EnStemFilter::stem(uint64_t a1, uint64_t a2)
{
  int v2 = *(char *)(a2 + 23);
  if (v2 >= 0) {
    uint64_t result = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t result = *(void *)(a2 + 8);
  }
  if ((int)result >= 4)
  {
    uint64_t v4 = v2 >= 0 ? a2 : *(void *)a2;
    if (*(_WORD *)(v4 + 2 * (result - 1)) == 115)
    {
      int v5 = *(unsigned __int16 *)(v4 + 2 * (result - 2));
      if (v5 != 117 && v5 != 115)
      {
        if (v5 == 101)
        {
          uint64_t v6 = (result - 3);
          unsigned __int16 v7 = *(_WORD *)(v4 + 2 * v6) - 97;
          switch((v7 >> 1) | (unsigned __int16)(v7 << 15))
          {
            case 0:
            case 2:
            case 7:
              return result;
            case 4:
              if ((*(_WORD *)(v4 + 2 * (result - 4)) & 0xFFFB) != 0x61)
              {
                *(_WORD *)(v4 + 2 * v6) = 121;
                uint64_t result = (result - 2);
              }
              break;
            default:
              return (result - 1);
          }
        }
        else
        {
          return (result - 1);
        }
      }
    }
  }
  return result;
}

void morphun::analysis::stemmer::EnStemFilter::~EnStemFilter(void **this)
{
  morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::~StemmableDictionaryLookupLemmaFilter(this, &off_1F2A07C60);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::~StemmableDictionaryLookupLemmaFilter(this, &off_1F2A07C60);
}

void morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::~StemmableDictionaryLookupLemmaFilter(void **this, void *a2)
{
  uint64_t v4 = (void *)*a2;
  *this = (void *)*a2;
  *(void **)((char *)this + *(v4 - 5)) = (void *)a2[7];
  this[17] = &off_1F2A0FDB0;
  int v5 = this[42];
  if (v5)
  {
    this[43] = v5;
    operator delete(v5);
  }
  unsigned __int16 v7 = this + 39;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v7);
  uint64_t v6 = this[36];
  if (v6)
  {
    this[37] = v6;
    operator delete(v6);
  }
  this[17] = &unk_1F29FFA58;

  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, a2 + 1);
}

uint64_t morphun::analysis::Analyzer_TokenStreamComponents::getTokenizer(morphun::analysis::Analyzer_TokenStreamComponents *this)
{
  return *((void *)this + 1);
}

uint64_t morphun::analysis::Analyzer_TokenStreamComponents::getTokenStream(morphun::analysis::Analyzer_TokenStreamComponents *this)
{
  return *((void *)this + 2);
}

uint64_t morphun::analysis::Analyzer_TokenStreamComponents::setReader(morphun::analysis::Analyzer_TokenStreamComponents *this, UText *a2)
{
  uint64_t v2 = *((void *)this + 1);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }

  return morphun::analysis::Tokenizer::setReader(v2, a2);
}

void sub_1D2D1BAE0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::Analyzer_TokenStreamComponents::~Analyzer_TokenStreamComponents(morphun::analysis::Analyzer_TokenStreamComponents *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::analysis::Analyzer_TokenStreamComponents::~Analyzer_TokenStreamComponents(morphun::analysis::Analyzer_TokenStreamComponents *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  uint64_t v3 = *((void *)this + 2);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
}

uint64_t *morphun::analysis::Analyzer_TokenStreamComponents::Analyzer_TokenStreamComponents(uint64_t *result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a2;
  *uint64_t result = *a2;
  *(uint64_t *)((char *)result + *(void *)(v4 - 40)) = a2[1];
  result[1] = a3;
  result[2] = a4;
  return result;
}

void *morphun::analysis::Analyzer_TokenStreamComponents::Analyzer_TokenStreamComponents(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = &off_1F2A10058;
  result[1] = a2;
  result[2] = a3;
  return result;
}

void virtual thunk to'morphun::analysis::Analyzer_TokenStreamComponents::~Analyzer_TokenStreamComponents(morphun::analysis::Analyzer_TokenStreamComponents *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 24;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::getParticleValue(&__p, v4, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 48))(a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_1D2D1BDF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleLookupFunction::~KoGrammarSynthesizer_ParticleLookupFunction(morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleLookupFunction *this)
{
  *(void *)this = &off_1F2A0D7A8;
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleLookupFunction *)((char *)this + 24));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A0D7A8;
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::~KoGrammarSynthesizer_ParticleResolver((morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleLookupFunction *)((char *)this + 24));
}

void morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleLookupFunction::KoGrammarSynthesizer_ParticleLookupFunction(morphun::dialog::DefaultArticleLookupFunction *a1, uint64_t a2, morphun::util::LocaleUtils *a3)
{
  *(void *)a1 = &unk_1F29FB500;
  uint64_t v4 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction(a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A066B8, a2, 1, 0);
  *(void *)uint64_t v4 = &off_1F2A0D7A8;
  morphun::grammar::synthesis::KoGrammarSynthesizer_ParticleResolver::KoGrammarSynthesizer_ParticleResolver((morphun::util::LocaleUtils **)v4 + 3, a3);
}

double marisa::grimoire::trie::LoudsTrie::LoudsTrie(marisa::grimoire::trie::LoudsTrie *this)
{
  *(_OWORD *)((char *)this + 25) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 137) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *(_OWORD *)((char *)this + 185) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_OWORD *)((char *)this + 89) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 233) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *(_OWORD *)((char *)this + 345) = 0u;
  *(_OWORD *)((char *)this + 393) = 0u;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *(_OWORD *)((char *)this + 297) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  *(_OWORD *)((char *)this + 441) = 0u;
  *((_OWORD *)this + 33) = 0u;
  *((_OWORD *)this + 34) = 0u;
  *(_OWORD *)((char *)this + 553) = 0u;
  *((_OWORD *)this + 36) = 0u;
  *((_OWORD *)this + 37) = 0u;
  *(_OWORD *)((char *)this + 601) = 0u;
  *(_OWORD *)((char *)this + 505) = 0u;
  *((_OWORD *)this + 30) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 29) = 0u;
  *(_OWORD *)((char *)this + 649) = 0u;
  *((_OWORD *)this + 39) = 0u;
  *((_OWORD *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 697) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((void *)this + 90) = 0;
  *((_DWORD *)this + 182) = 0;
  *(_OWORD *)((char *)this + 792) = 0u;
  *(_OWORD *)((char *)this + 808) = 0u;
  *(_OWORD *)((char *)this + 817) = 0u;
  *(_OWORD *)((char *)this + 929) = 0u;
  *(_OWORD *)((char *)this + 904) = 0u;
  *(_OWORD *)((char *)this + 920) = 0u;
  *(_OWORD *)((char *)this + 977) = 0u;
  *(_OWORD *)((char *)this + 952) = 0u;
  *(_OWORD *)((char *)this + 968) = 0u;
  *(_OWORD *)((char *)this + 840) = 0u;
  *(_OWORD *)((char *)this + 856) = 0u;
  *(_OWORD *)((char *)this + 872) = 0u;
  *(_OWORD *)((char *)this + 881) = 0u;
  *((unsigned char *)this + 1048) = 0;
  *(_OWORD *)((char *)this + 1016) = 0u;
  *(_OWORD *)((char *)this + 1032) = 0u;
  *(_OWORD *)((char *)this + 1000) = 0u;
  *((_OWORD *)this + 66) = 0u;
  *((unsigned char *)this + 784) = 0;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((void *)this + 134) = 3;
  *(void *)&double result = 0x100000000200;
  *((void *)this + 135) = 0x100000000200;
  *((_DWORD *)this + 272) = 0x20000;
  *((void *)this + 137) = 0;
  *((void *)this + 138) = -1;
  *((void *)this + 140) = 0;
  *((void *)this + 139) = 0;
  *((_DWORD *)this + 282) = -1;
  return result;
}

void marisa::grimoire::trie::LoudsTrie::~LoudsTrie(marisa::grimoire::trie::LoudsTrie *this)
{
  marisa::grimoire::io::Mapper::~Mapper((marisa::grimoire::trie::LoudsTrie *)((char *)this + 1096));
  uint64_t v2 = *((void *)this + 126);
  if (v2) {
    MEMORY[0x1D942B890](v2, 0x1000C8077774924);
  }
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((char *)this + 1000);
  uint64_t v3 = *((void *)this + 119);
  if (v3) {
    MEMORY[0x1D942B890](v3, 0x1000C8077774924);
  }
  uint64_t v4 = *((void *)this + 113);
  if (v4) {
    MEMORY[0x1D942B890](v4, 0x1000C8077774924);
  }
  uint64_t v5 = *((void *)this + 107);
  if (v5) {
    MEMORY[0x1D942B890](v5, 0x1000C8077774924);
  }
  uint64_t v6 = *((void *)this + 99);
  if (v6) {
    MEMORY[0x1D942B890](v6, 0x1000C8077774924);
  }
  uint64_t v7 = *((void *)this + 93);
  if (v7) {
    MEMORY[0x1D942B890](v7, 0x1000C8077774924);
  }
  uint64_t v8 = *((void *)this + 84);
  if (v8) {
    MEMORY[0x1D942B890](v8, 0x1000C8077774924);
  }
  uint64_t v9 = *((void *)this + 78);
  if (v9) {
    MEMORY[0x1D942B890](v9, 0x1000C8077774924);
  }
  uint64_t v10 = *((void *)this + 72);
  if (v10) {
    MEMORY[0x1D942B890](v10, 0x1000C8077774924);
  }
  uint64_t v11 = *((void *)this + 66);
  if (v11) {
    MEMORY[0x1D942B890](v11, 0x1000C8077774924);
  }
  uint64_t v12 = *((void *)this + 60);
  if (v12) {
    MEMORY[0x1D942B890](v12, 0x1000C8077774924);
  }
  uint64_t v13 = *((void *)this + 52);
  if (v13) {
    MEMORY[0x1D942B890](v13, 0x1000C8077774924);
  }
  uint64_t v14 = *((void *)this + 46);
  if (v14) {
    MEMORY[0x1D942B890](v14, 0x1000C8077774924);
  }
  uint64_t v15 = *((void *)this + 40);
  if (v15) {
    MEMORY[0x1D942B890](v15, 0x1000C8077774924);
  }
  uint64_t v16 = *((void *)this + 34);
  if (v16) {
    MEMORY[0x1D942B890](v16, 0x1000C8077774924);
  }
  uint64_t v17 = *((void *)this + 26);
  if (v17) {
    MEMORY[0x1D942B890](v17, 0x1000C8077774924);
  }
  uint64_t v18 = *((void *)this + 20);
  if (v18) {
    MEMORY[0x1D942B890](v18, 0x1000C8077774924);
  }
  uint64_t v19 = *((void *)this + 14);
  if (v19) {
    MEMORY[0x1D942B890](v19, 0x1000C8077774924);
  }
  uint64_t v20 = *((void *)this + 8);
  if (v20) {
    MEMORY[0x1D942B890](v20, 0x1000C8077774924);
  }
  if (*(void *)this) {
    MEMORY[0x1D942B890](*(void *)this, 0x1000C8077774924);
  }
}

uint64_t marisa::grimoire::trie::Config::parse_(uint64_t this, unsigned int a2)
{
  if (a2 >= 0x100000)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h";
    exception[2] = 0x50000003BLL;
    uint64_t v5 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h:59: MARISA_CODE_ERROR: (config_flags & ~MARISA_CONFIG_MASK) != 0";
    goto LABEL_26;
  }
  if ((a2 & 0x7F) != 0) {
    *(void *)this = a2 & 0x7F;
  }
  unsigned int v2 = a2 & 0xF80;
  int v3 = 512;
  if (v2 <= 0x1FF)
  {
    if ((a2 & 0xF80) == 0) {
      goto LABEL_14;
    }
    if (v2 != 128)
    {
      int v3 = a2 & 0xF80;
      if (v2 != 256) {
        goto LABEL_12;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v3 = a2 & 0xF80;
    goto LABEL_14;
  }
  if (v2 == 512) {
    goto LABEL_14;
  }
  if (v2 == 1024) {
    goto LABEL_13;
  }
  int v3 = a2 & 0xF80;
  if (v2 != 2048)
  {
LABEL_12:
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h";
    exception[2] = 0x500000065;
    uint64_t v5 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h:101: MARISA_CODE_ERROR: undefined cache level";
    goto LABEL_26;
  }
LABEL_14:
  *(_DWORD *)(this + 8) = v3;
  int v6 = 4096;
  int v7 = a2 & 0xF000;
  if ((a2 & 0xF000) != 0 && v7 != 4096)
  {
    if (v7 != 0x2000)
    {
      exception = __cxa_allocate_exception(0x20uLL);
      void *exception = &unk_1F2A081F8;
      exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h";
      exception[2] = 0x500000079;
      uint64_t v5 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h:121: MARISA_CODE_ERROR: undefined tail mode";
      goto LABEL_26;
    }
    int v6 = 0x2000;
  }
  *(_DWORD *)(this + 12) = v6;
  int v8 = 0x20000;
  int v9 = a2 & 0xF0000;
  if ((a2 & 0xF0000) != 0 && v9 != 0x20000)
  {
    if (v9 == 0x10000)
    {
      int v8 = 0x10000;
      goto LABEL_22;
    }
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h";
    exception[2] = 0x50000008DLL;
    uint64_t v5 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/config.h:141: MARISA_CODE_ERROR: undefined node order";
LABEL_26:
    exception[3] = v5;
  }
LABEL_22:
  *(_DWORD *)(this + 16) = v8;
  return this;
}

double marisa::grimoire::trie::LoudsTrie::swap(marisa::grimoire::trie::LoudsTrie *this, marisa::grimoire::trie::LoudsTrie *a2)
{
  marisa::grimoire::vector::BitVector::swap(this, a2);
  marisa::grimoire::vector::BitVector::swap((marisa::grimoire::trie::LoudsTrie *)((char *)this + 208), (marisa::grimoire::trie::LoudsTrie *)((char *)a2 + 208));
  marisa::grimoire::vector::BitVector::swap((marisa::grimoire::trie::LoudsTrie *)((char *)this + 416), (marisa::grimoire::trie::LoudsTrie *)((char *)a2 + 416));
  uint64_t v4 = *((void *)this + 78);
  *((void *)this + 78) = *((void *)a2 + 78);
  *((void *)a2 + 78) = v4;
  uint64_t v5 = *((void *)this + 79);
  *((void *)this + 79) = *((void *)a2 + 79);
  *((void *)a2 + 79) = v5;
  uint64_t v6 = *((void *)this + 80);
  *((void *)this + 80) = *((void *)a2 + 80);
  *((void *)a2 + 80) = v6;
  uint64_t v7 = *((void *)this + 81);
  *((void *)this + 81) = *((void *)a2 + 81);
  *((void *)a2 + 81) = v7;
  uint64_t v8 = *((void *)this + 82);
  *((void *)this + 82) = *((void *)a2 + 82);
  *((void *)a2 + 82) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 664);
  *((unsigned char *)this + 664) = *((unsigned char *)a2 + 664);
  *((unsigned char *)a2 + 664) = v8;
  marisa::grimoire::vector::Vector<unsigned long long>::swap((uint64_t *)this + 84, (uint64_t *)a2 + 84);
  uint64_t v9 = *((void *)this + 90);
  *((void *)this + 90) = *((void *)a2 + 90);
  *((void *)a2 + 90) = v9;
  LODWORD(v9) = *((_DWORD *)this + 182);
  *((_DWORD *)this + 182) = *((_DWORD *)a2 + 182);
  *((_DWORD *)a2 + 182) = v9;
  uint64_t v10 = *((void *)this + 92);
  *((void *)this + 92) = *((void *)a2 + 92);
  *((void *)a2 + 92) = v10;
  uint64_t v11 = *((void *)this + 93);
  *((void *)this + 93) = *((void *)a2 + 93);
  *((void *)a2 + 93) = v11;
  uint64_t v12 = *((void *)this + 94);
  *((void *)this + 94) = *((void *)a2 + 94);
  *((void *)a2 + 94) = v12;
  uint64_t v13 = *((void *)this + 95);
  *((void *)this + 95) = *((void *)a2 + 95);
  *((void *)a2 + 95) = v13;
  uint64_t v14 = *((void *)this + 96);
  *((void *)this + 96) = *((void *)a2 + 96);
  *((void *)a2 + 96) = v14;
  uint64_t v15 = *((void *)this + 97);
  *((void *)this + 97) = *((void *)a2 + 97);
  *((void *)a2 + 97) = v15;
  LOBYTE(v15) = *((unsigned char *)this + 784);
  *((unsigned char *)this + 784) = *((unsigned char *)a2 + 784);
  *((unsigned char *)a2 + 784) = v15;
  marisa::grimoire::vector::BitVector::swap((marisa::grimoire::trie::LoudsTrie *)((char *)this + 792), (marisa::grimoire::trie::LoudsTrie *)((char *)a2 + 792));
  uint64_t v16 = *((void *)this + 125);
  *((void *)this + 125) = *((void *)a2 + 125);
  *((void *)a2 + 125) = v16;
  uint64_t v17 = *((void *)this + 126);
  *((void *)this + 126) = *((void *)a2 + 126);
  *((void *)a2 + 126) = v17;
  uint64_t v18 = *((void *)this + 127);
  *((void *)this + 127) = *((void *)a2 + 127);
  *((void *)a2 + 127) = v18;
  uint64_t v19 = *((void *)this + 128);
  *((void *)this + 128) = *((void *)a2 + 128);
  *((void *)a2 + 128) = v19;
  uint64_t v20 = *((void *)this + 129);
  *((void *)this + 129) = *((void *)a2 + 129);
  *((void *)a2 + 129) = v20;
  uint64_t v21 = *((void *)this + 130);
  *((void *)this + 130) = *((void *)a2 + 130);
  *((void *)a2 + 130) = v21;
  LOBYTE(v21) = *((unsigned char *)this + 1048);
  *((unsigned char *)this + 1048) = *((unsigned char *)a2 + 1048);
  *((unsigned char *)a2 + 1048) = v21;
  uint64_t v22 = *((void *)this + 132);
  *((void *)this + 132) = *((void *)a2 + 132);
  *((void *)a2 + 132) = v22;
  uint64_t v23 = *((void *)this + 133);
  *((void *)this + 133) = *((void *)a2 + 133);
  *((void *)a2 + 133) = v23;
  uint64_t v24 = *((void *)this + 134);
  *((void *)this + 134) = *((void *)a2 + 134);
  *((void *)a2 + 134) = v24;
  double result = *((double *)a2 + 135);
  uint64_t v26 = *((void *)this + 135);
  *((double *)this + 135) = result;
  *((void *)a2 + 135) = v26;
  LODWORD(v24) = *((_DWORD *)this + 272);
  *((_DWORD *)this + 272) = *((_DWORD *)a2 + 272);
  *((_DWORD *)a2 + 272) = v24;
  uint64_t v27 = *((void *)this + 137);
  *((void *)this + 137) = *((void *)a2 + 137);
  *((void *)a2 + 137) = v27;
  uint64_t v28 = *((void *)this + 139);
  *((void *)this + 139) = *((void *)a2 + 139);
  *((void *)a2 + 139) = v28;
  uint64_t v29 = *((void *)this + 138);
  *((void *)this + 138) = *((void *)a2 + 138);
  *((void *)a2 + 138) = v29;
  uint64_t v30 = *((void *)this + 140);
  *((void *)this + 140) = *((void *)a2 + 140);
  *((void *)a2 + 140) = v30;
  LODWORD(v30) = *((_DWORD *)this + 282);
  *((_DWORD *)this + 282) = *((_DWORD *)a2 + 282);
  *((_DWORD *)a2 + 282) = v30;
  return result;
}

unint64_t std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *,false>(unint64_t result, unsigned int *a2, uint64_t a3, char a4)
{
  uint64_t v9 = (unsigned int *)result;
  while (2)
  {
    uint64_t v10 = a2 - 2;
    uint64_t i = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = i;
          uint64_t v12 = (char *)a2 - (char *)i;
          unint64_t v13 = ((char *)a2 - (char *)i) >> 3;
          if (v5 || !v4)
          {
            switch(v13)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                unsigned int v48 = *v10;
                unsigned int v49 = *i;
                if (*v10 < *i || v49 >= v48 && *(a2 - 1) < i[1])
                {
                  *uint64_t i = v48;
                  *(a2 - 2) = v49;
                  unsigned int v50 = i[1];
                  i[1] = *(a2 - 1);
                  *(a2 - 1) = v50;
                }
                break;
              case 3uLL:
                double result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(i, i + 2, a2 - 2);
                break;
              case 4uLL:
                double result = (unint64_t)std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(i, i + 2, i + 4, a2 - 2);
                break;
              case 5uLL:
                double result = (unint64_t)std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(i, i + 2, i + 4, i + 6, a2 - 2);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v12 <= 191)
          {
            float v51 = i + 2;
            BOOL v53 = i == a2 || v51 == a2;
            if (a4)
            {
              if (!v53)
              {
                uint64_t v54 = 0;
                int32_t v55 = i;
                do
                {
                  std::basic_string<char16_t> v56 = v55;
                  int32_t v55 = v51;
                  unsigned int v57 = v56[2];
                  unsigned int v58 = *v56;
                  if (v57 < *v56 || v58 >= v57 && v56[3] < v56[1])
                  {
                    unsigned int v60 = v56[2];
                    unsigned int v59 = v56[3];
                    unsigned int v61 = v56[1];
                    v56[2] = v58;
                    v55[1] = v61;
                    std::basic_string<char16_t> v62 = i;
                    if (v56 != i)
                    {
                      uint64_t v63 = v54;
                      do
                      {
                        unsigned int v64 = *(unsigned int *)((char *)i + v63 - 8);
                        if (v64 <= v60)
                        {
                          if (v64 < v60)
                          {
                            std::basic_string<char16_t> v62 = v56;
                            goto LABEL_120;
                          }
                          std::basic_string<char16_t> v62 = (unsigned int *)((char *)i + v63);
                          unsigned int v65 = *(unsigned int *)((char *)i + v63 - 4);
                          if (v65 <= v59) {
                            goto LABEL_120;
                          }
                        }
                        else
                        {
                          unsigned int v65 = *(unsigned int *)((char *)i + v63 - 4);
                        }
                        v56 -= 2;
                        uint64_t v66 = (unsigned int *)((char *)i + v63);
                        *uint64_t v66 = v64;
                        v66[1] = v65;
                        v63 -= 8;
                      }
                      while (v63);
                      std::basic_string<char16_t> v62 = i;
                    }
LABEL_120:
                    *std::basic_string<char16_t> v62 = v60;
                    v62[1] = v59;
                  }
                  float v51 = v55 + 2;
                  v54 += 8;
                }
                while (v55 + 2 != a2);
              }
            }
            else if (!v53)
            {
              do
              {
                uint64_t v82 = v9;
                uint64_t v9 = v51;
                unsigned int v83 = v82[2];
                unsigned int v84 = *v82;
                if (v83 < *v82 || v84 >= v83 && v82[3] < v82[1])
                {
                  unsigned int v85 = *v51;
                  unsigned int v86 = v51[1];
                  do
                  {
                    do
                    {
                      int v87 = v82;
                      unsigned int v88 = *(v82 - 2);
                      v82 -= 2;
                      unsigned int v89 = v82[3];
                      v82[4] = v84;
                      v82[5] = v89;
                      unsigned int v84 = v88;
                      BOOL v90 = v88 >= v85;
                    }
                    while (v88 > v85);
                  }
                  while (v90 && *(v87 - 1) > v86);
                  unsigned int *v87 = v85;
                  v87[1] = v86;
                }
                float v51 = v9 + 2;
              }
              while (v9 + 2 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (i != a2)
            {
              int64_t v67 = (v13 - 2) >> 1;
              int64_t v68 = v67;
              do
              {
                int64_t v69 = v68;
                if (v67 >= v68)
                {
                  uint64_t v70 = (2 * v68) | 1;
                  uint64_t v71 = &i[2 * v70];
                  if (2 * v69 + 2 < (uint64_t)v13)
                  {
                    unsigned int v72 = v71[2];
                    if (*v71 < v72 || v72 >= *v71 && i[2 * v70 + 1] < v71[3])
                    {
                      v71 += 2;
                      uint64_t v70 = 2 * v69 + 2;
                    }
                  }
                  int v73 = &i[2 * v69];
                  unsigned int v74 = *v71;
                  if (*v71 >= *v73 && (*v73 < v74 || v71[1] >= i[2 * v69 + 1]))
                  {
                    double result = (unint64_t)&i[2 * v69];
                    unsigned int v75 = *(_DWORD *)result;
                    unsigned int v76 = *(_DWORD *)(result + 4);
                    unsigned int *v73 = v74;
                    *(_DWORD *)(result + 4) = v71[1];
                    if (v67 >= v70)
                    {
                      while (1)
                      {
                        uint64_t v78 = 2 * v70;
                        uint64_t v70 = (2 * v70) | 1;
                        uint64_t v77 = &i[2 * v70];
                        uint64_t v79 = v78 + 2;
                        if (v79 < (uint64_t)v13)
                        {
                          double result = (unint64_t)(v77 + 2);
                          unsigned int v80 = v77[2];
                          if (*v77 < v80 || v80 >= *v77 && i[2 * v70 + 1] < v77[3])
                          {
                            v77 += 2;
                            uint64_t v70 = v79;
                          }
                        }
                        unsigned int v81 = *v77;
                        if (*v77 < v75) {
                          break;
                        }
                        if (v81 <= v75)
                        {
                          double result = v77[1];
                          if (result < v76) {
                            break;
                          }
                        }
                        *uint64_t v71 = v81;
                        v71[1] = v77[1];
                        uint64_t v71 = v77;
                        if (v67 < v70) {
                          goto LABEL_136;
                        }
                      }
                    }
                    uint64_t v77 = v71;
LABEL_136:
                    unsigned int *v77 = v75;
                    v77[1] = v76;
                  }
                }
                int64_t v68 = v69 - 1;
              }
              while (v69);
              uint64_t v91 = (unint64_t)v12 >> 3;
              do
              {
                uint64_t v92 = 0;
                uint64_t v93 = *(void *)i;
                uint64_t v94 = v91 - 2;
                if (v91 < 2) {
                  uint64_t v94 = v91 - 1;
                }
                uint64_t v95 = v94 >> 1;
                uint64_t v96 = i;
                do
                {
                  std::basic_string<char16_t>::size_type v97 = v96;
                  uint64_t v98 = v92 + 1;
                  v96 += 2 * v92 + 2;
                  uint64_t v99 = 2 * v92;
                  uint64_t v92 = (2 * v92) | 1;
                  uint64_t v100 = v99 + 2;
                  if (v100 < v91)
                  {
                    double result = v96[2];
                    if (*v96 < result
                      || result >= *v96 && (double result = v96[3], v97[2 * v98 + 1] < result))
                    {
                      v96 += 2;
                      uint64_t v92 = v100;
                    }
                  }
                  *std::basic_string<char16_t>::size_type v97 = *v96;
                  v97[1] = v96[1];
                }
                while (v92 <= v95);
                if (v96 == a2 - 2)
                {
                  *(void *)uint64_t v96 = v93;
                }
                else
                {
                  unsigned int *v96 = *(a2 - 2);
                  v96[1] = *(a2 - 1);
                  *((void *)a2 - 1) = v93;
                  uint64_t v101 = (char *)v96 - (char *)i + 8;
                  if (v101 >= 9)
                  {
                    unint64_t v102 = (v101 >> 3) - 2;
                    unint64_t v103 = v102 >> 1;
                    unint64_t v104 = &i[2 * (v102 >> 1)];
                    unsigned int v105 = *v104;
                    if (*v104 < *v96 || *v96 >= v105 && i[2 * v103 + 1] < v96[1])
                    {
                      unsigned int v106 = *v96;
                      unsigned int v107 = v96[1];
                      unsigned int *v96 = v105;
                      v96[1] = v104[1];
                      if (v102 >= 2)
                      {
                        while (1)
                        {
                          unint64_t v109 = v103 - 1;
                          unint64_t v103 = (v103 - 1) >> 1;
                          std::basic_string<char16_t> v108 = &i[2 * v103];
                          unsigned int v110 = *v108;
                          if (*v108 >= v106)
                          {
                            if (v110 > v106) {
                              break;
                            }
                            double result = i[2 * v103 + 1];
                            if (result >= v107) {
                              break;
                            }
                          }
                          else
                          {
                            double result = v108[1];
                          }
                          *unint64_t v104 = v110;
                          v104[1] = result;
                          unint64_t v104 = &i[2 * v103];
                          if (v109 <= 1) {
                            goto LABEL_183;
                          }
                        }
                      }
                      std::basic_string<char16_t> v108 = v104;
LABEL_183:
                      unsigned int *v108 = v106;
                      v108[1] = v107;
                    }
                  }
                }
                a2 -= 2;
                BOOL v32 = v91-- <= 2;
              }
              while (!v32);
            }
            return result;
          }
          unint64_t v14 = v13 >> 1;
          uint64_t v15 = &i[2 * (v13 >> 1)];
          if ((unint64_t)v12 >= 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(v9, &v9[2 * (v13 >> 1)], a2 - 2);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(v9 + 2, v15 - 2, a2 - 4);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(v9 + 4, &v9[2 * v14 + 2], a2 - 6);
            double result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(v15 - 2, v15, &v9[2 * v14 + 2]);
            uint64_t v16 = *(void *)v9;
            *(void *)uint64_t v9 = *(void *)v15;
            *(void *)uint64_t v15 = v16;
          }
          else
          {
            double result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(&v9[2 * (v13 >> 1)], v9, a2 - 2);
          }
          --a3;
          if (a4) {
            break;
          }
          unsigned int v17 = *(v9 - 2);
          if (v17 < *v9 || *v9 >= v17 && *(v9 - 1) < v9[1]) {
            break;
          }
          unsigned int v36 = *v9;
          unsigned int v35 = v9[1];
          unsigned int v37 = *v10;
          if (*v10 <= *v9 && (v37 < v36 || *(a2 - 1) <= v35))
          {
            for (uint64_t i = v9 + 2; i < a2 && *i <= v36 && (*i < v36 || i[1] <= v35); i += 2)
              ;
          }
          else
          {
            uint64_t i = v9;
            do
            {
              unsigned int v39 = i[2];
              i += 2;
              unsigned int v38 = v39;
            }
            while (v39 <= v36 && (v38 < v36 || i[1] <= v35));
          }
          uint64_t j = a2;
          if (i < a2)
          {
            for (uint64_t j = a2 - 2; v37 > v36 || v37 >= v36 && j[1] > v35; j -= 2)
            {
              unsigned int v41 = *(j - 2);
              unsigned int v37 = v41;
            }
          }
          if (i < j)
          {
            unsigned int v42 = *i;
            unsigned int v43 = *j;
            do
            {
              *uint64_t i = v43;
              *uint64_t j = v42;
              unsigned int v44 = i[1];
              i[1] = j[1];
              j[1] = v44;
              do
              {
                unsigned int v45 = i[2];
                i += 2;
                unsigned int v42 = v45;
              }
              while (v45 <= v36 && (v42 < v36 || i[1] <= v35));
              do
              {
                do
                {
                  unsigned int v46 = *(j - 2);
                  j -= 2;
                  unsigned int v43 = v46;
                  BOOL v47 = v46 >= v36;
                }
                while (v46 > v36);
              }
              while (v47 && j[1] > v35);
            }
            while (i < j);
          }
          BOOL v4 = i - 2 >= v9;
          BOOL v5 = i - 2 == v9;
          if (i - 2 != v9)
          {
            unsigned int *v9 = *(i - 2);
            v9[1] = *(i - 1);
          }
          a4 = 0;
          *(i - 2) = v36;
          *(i - 1) = v35;
        }
        uint64_t v18 = v9 + 2;
        uint64_t v19 = *(void *)v9;
        uint64_t v20 = HIDWORD(*(void *)v9);
        while (1)
        {
          unsigned int v21 = *v18;
          if (*v18 >= v19 && (v21 > v19 || v18[1] >= v20)) {
            break;
          }
          v18 += 2;
        }
        if (v18 - 2 == v9)
        {
          k = a2;
          if (v18 < a2)
          {
            unsigned int v25 = *v10;
            k = a2 - 2;
            if (*v10 >= v19)
            {
              k = a2 - 2;
              do
              {
                if (v25 <= v19)
                {
                  if (k[1] < v20 || v18 >= k) {
                    break;
                  }
                }
                else if (v18 >= k)
                {
                  break;
                }
                unsigned int v27 = *(k - 2);
                k -= 2;
                unsigned int v25 = v27;
              }
              while (v27 >= v19);
            }
          }
        }
        else
        {
          unsigned int v22 = *v10;
          for (k = a2 - 2; v22 >= v19 && (v22 > v19 || k[1] >= v20); k -= 2)
          {
            unsigned int v24 = *(k - 2);
            unsigned int v22 = v24;
          }
        }
        uint64_t i = v18;
        if (v18 < k)
        {
          unsigned int v28 = *k;
          uint64_t i = v18;
          uint64_t v29 = k;
          do
          {
            *uint64_t i = v28;
            *uint64_t v29 = v21;
            unsigned int v30 = i[1];
            i[1] = v29[1];
            v29[1] = v30;
            do
            {
              do
              {
                unsigned int v31 = i[2];
                i += 2;
                unsigned int v21 = v31;
                BOOL v32 = v31 > v19;
              }
              while (v31 < v19);
            }
            while (!v32 && i[1] < v20);
            do
            {
              unsigned int v33 = *(v29 - 2);
              v29 -= 2;
              unsigned int v28 = v33;
            }
            while (v33 >= v19 && (v28 > v19 || v29[1] >= v20));
          }
          while (i < v29);
        }
        if (i - 2 != v9)
        {
          unsigned int *v9 = *(i - 2);
          v9[1] = *(i - 1);
        }
        *(i - 2) = v19;
        *(i - 1) = v20;
        if (v18 >= k) {
          break;
        }
LABEL_51:
        double result = std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *,false>(v9, i - 2, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v34 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(v9, i - 2);
      double result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(i, a2);
      if (result) {
        break;
      }
      if (!v34) {
        goto LABEL_51;
      }
    }
    a2 = i - 2;
    if (!v34) {
      continue;
    }
    return result;
  }
}

uint64_t marisa::grimoire::vector::BitVector::build(marisa::grimoire::vector::BitVector *this, int a2, int a3)
{
  memset(v43, 0, 41);
  memset(v47, 0, 41);
  memset(v48, 0, 41);
  long long v44 = 0u;
  long long v45 = 0u;
  memset(v46, 0, 25);
  unint64_t v6 = *((void *)this + 6);
  unint64_t v7 = v6 >> 9;
  if ((v6 & 0x1FF) != 0) {
    ++v7;
  }
  unint64_t v8 = v7 + 1;
  size_t v9 = 12 * (v7 + 1);
  *(void *)&long long v45 = operator new[](v9, MEMORY[0x1E4FBA2D0]);
  *((void *)&v45 + 1) = v45;
  *(void *)&v46[0] = v45;
  *(void *)&v46[1] = v8;
  bzero((void *)v45, v9);
  *((void *)&v46[0] + 1) = v8;
  if (v6)
  {
    unint64_t v10 = 0;
    int v11 = 0;
    __int16 v12 = 0;
    do
    {
      if ((v10 & 0x3F) != 0)
      {
        unint64_t v13 = v10 >> 6;
      }
      else
      {
        unint64_t v14 = v10 >> 9;
        unint64_t v13 = v10 >> 6;
        switch((v10 >> 6) & 7)
        {
          case 1uLL:
            uint64_t v15 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v14);
            unsigned int v16 = v15[1] & 0xFFFFFF80 | (v11 - *v15) & 0x7F;
            goto LABEL_14;
          case 2uLL:
            uint64_t v15 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v14);
            unsigned int v16 = v15[1] & 0xFFFF807F | ((v11 - *(unsigned char *)v15) << 7);
            goto LABEL_14;
          case 3uLL:
            uint64_t v15 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v14);
            unsigned int v16 = v15[1] & 0xFF807FFF | ((v11 - *(unsigned char *)v15) << 15);
            goto LABEL_14;
          case 4uLL:
            uint64_t v15 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v14);
            unsigned int v16 = v15[1] & 0x7FFFFF | ((unsigned __int16)(v11 - *(_WORD *)v15) << 23);
LABEL_14:
            v15[1] = v16;
            break;
          case 5uLL:
            unsigned int v17 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v14);
            unsigned int v18 = v17[2] & 0xFFFFFE00 | (v11 - *v17) & 0x1FF;
            goto LABEL_17;
          case 6uLL:
            unsigned int v17 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v14);
            unsigned int v18 = v17[2] & 0xFFFC01FF | (((v11 - *v17) & 0x1FF) << 9);
            goto LABEL_17;
          case 7uLL:
            unsigned int v17 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v14);
            unsigned int v18 = v17[2] & 0xF803FFFF | (((v11 - *v17) & 0x1FF) << 18);
LABEL_17:
            v17[2] = v18;
            break;
          default:
            *(_DWORD *)(*((void *)&v45 + 1) + 12 * v14) = v11;
            break;
        }
      }
      if ((*(void *)(*((void *)this + 2) + 8 * v13) >> (v10 & 0x3F)))
      {
        if (a3 && (v11 & 0x1FF) == 0)
        {
          int v49 = v10;
          marisa::grimoire::vector::Vector<unsigned int>::push_back((uint64_t *)v48, &v49);
        }
        ++v11;
      }
      else
      {
        if (a2 && (v12 & 0x1FF) == 0)
        {
          int v49 = v10;
          marisa::grimoire::vector::Vector<unsigned int>::push_back((uint64_t *)v47, &v49);
        }
        ++v12;
      }
      ++v10;
      unint64_t v19 = *((void *)this + 6);
    }
    while (v10 < v19);
    if ((v19 & 0x1FF) != 0)
    {
      unint64_t v20 = (v19 - 1) >> 9;
      switch(((unint64_t)(v19 - 1) >> 6) & 7)
      {
        case 0uLL:
          uint64_t v21 = *((void *)&v45 + 1);
          unsigned int v22 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v20);
          int v23 = v11 - *v22;
          unsigned int v24 = v22[1] & 0xFFFFFF80 | v23 & 0x7F;
          v22[1] = v24;
          goto LABEL_36;
        case 1uLL:
          uint64_t v21 = *((void *)&v45 + 1);
          uint64_t v29 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v20);
          unsigned int v24 = v29[1];
          int v23 = v11 - *v29;
LABEL_36:
          unsigned int v26 = v24 & 0xFFFF807F | (v23 << 7);
          *(_DWORD *)(v21 + 12 * v20 + 4) = v26;
          goto LABEL_37;
        case 2uLL:
          uint64_t v21 = *((void *)&v45 + 1);
          unsigned int v25 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v20);
          unsigned int v26 = v25[1];
          int v23 = v11 - *v25;
LABEL_37:
          unsigned int v28 = v26 & 0xFF807FFF | (v23 << 15);
          *(_DWORD *)(v21 + 12 * v20 + 4) = v28;
          goto LABEL_38;
        case 3uLL:
          uint64_t v21 = *((void *)&v45 + 1);
          unsigned int v27 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v20);
          unsigned int v28 = v27[1];
          int v23 = v11 - *v27;
LABEL_38:
          *(_DWORD *)(v21 + 12 * v20 + 4) = v28 & 0x7FFFFF | ((unsigned __int16)v23 << 23);
          goto LABEL_39;
        case 4uLL:
          uint64_t v21 = *((void *)&v45 + 1);
          int v23 = v11 - *(_DWORD *)(*((void *)&v45 + 1) + 12 * v20);
LABEL_39:
          uint64_t v30 = v21 + 12 * v20;
          unsigned int v31 = *(_DWORD *)(v30 + 8) & 0xFFFFFE00 | v23 & 0x1FF;
          *(_DWORD *)(v30 + 8) = v31;
          goto LABEL_40;
        case 5uLL:
          uint64_t v21 = *((void *)&v45 + 1);
          char v40 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v20);
          unsigned int v31 = v40[2];
          int v23 = v11 - *v40;
LABEL_40:
          unsigned int v32 = v31 & 0xFFFC01FF | ((v23 & 0x1FF) << 9);
          *(_DWORD *)(v21 + 12 * v20 + 8) = v32;
          goto LABEL_41;
        case 6uLL:
          uint64_t v21 = *((void *)&v45 + 1);
          unsigned int v41 = (_DWORD *)(*((void *)&v45 + 1) + 12 * v20);
          unsigned int v32 = v41[2];
          int v23 = v11 - *v41;
LABEL_41:
          *(_DWORD *)(v21 + 12 * v20 + 8) = v32 & 0xF803FFFF | ((v23 & 0x1FF) << 18);
          break;
        default:
          break;
      }
    }
  }
  else
  {
    unint64_t v19 = 0;
    int v11 = 0;
  }
  uint64_t v33 = *((void *)this + 7);
  *(void *)&long long v44 = v19;
  *((void *)&v44 + 1) = v33;
  *(_DWORD *)(*((void *)&v45 + 1) + 12 * *((void *)&v46[0] + 1) - 12) = v11;
  if (a2)
  {
    int v49 = v19;
    marisa::grimoire::vector::Vector<unsigned int>::push_back((uint64_t *)v47, &v49);
    marisa::grimoire::vector::Vector<unsigned int>::shrink(v47);
  }
  if (a3)
  {
    int v49 = *((void *)this + 6);
    marisa::grimoire::vector::Vector<unsigned int>::push_back((uint64_t *)v48, &v49);
    marisa::grimoire::vector::Vector<unsigned int>::shrink(v48);
  }
  if (*((unsigned char *)this + 40))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    exception[2] = 0x100000064;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:100: MARISA_STATE_ERROR: fixed_";
  }
  uint64_t v34 = *((void *)this + 3);
  if (v34 == *((void *)this + 4))
  {
    char v35 = 0;
  }
  else
  {
    marisa::grimoire::vector::Vector<unsigned long long>::realloc((uint64_t *)this, v34);
    char v35 = *((unsigned char *)this + 40);
  }
  long long v36 = v43[0];
  v43[0] = *(_OWORD *)this;
  *(_OWORD *)this = v36;
  uint64_t v37 = *(void *)&v43[1];
  *(void *)&v43[1] = *((void *)this + 2);
  *((void *)this + 2) = v37;
  long long v38 = *(_OWORD *)((char *)&v43[1] + 8);
  *(_OWORD *)((char *)&v43[1] + 8) = *(_OWORD *)((char *)this + 24);
  *(_OWORD *)((char *)this + 24) = v38;
  LOBYTE(v37) = BYTE8(v43[2]);
  BYTE8(v43[2]) = v35;
  *((unsigned char *)this + 40) = v37;
  marisa::grimoire::vector::BitVector::swap(this, (marisa::grimoire::vector::BitVector *)v43);
  if (*(void *)&v48[0]) {
    MEMORY[0x1D942B890](*(void *)&v48[0], 0x1000C8077774924);
  }
  if (*(void *)&v47[0]) {
    MEMORY[0x1D942B890](*(void *)&v47[0], 0x1000C8077774924);
  }
  if ((void)v45) {
    MEMORY[0x1D942B890](v45, 0x1000C8077774924);
  }
  uint64_t result = *(void *)&v43[0];
  if (*(void *)&v43[0])
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

void sub_1D2D1D630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unsigned int *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(unsigned int *result, unsigned int *a2, unsigned int *a3)
{
  unsigned int v3 = *a2;
  unsigned int v4 = *result;
  if (*a2 >= *result && (v4 < v3 || a2[1] >= result[1]))
  {
    unsigned int v7 = *a3;
    if (*a3 < v3 || v3 >= v7 && a3[1] < a2[1])
    {
      *a2 = v7;
      *a3 = v3;
      unint64_t v8 = a2 + 1;
      unsigned int v9 = a2[1];
      a2[1] = a3[1];
      a3[1] = v9;
      unsigned int v10 = *a2;
      unsigned int v11 = *result;
      if (*a2 < *result || v11 >= v10 && *v8 < result[1])
      {
        *result++ = v10;
        *a2 = v11;
LABEL_18:
        unsigned int v15 = *result;
        *uint64_t result = *v8;
        *unint64_t v8 = v15;
      }
    }
  }
  else
  {
    unsigned int v5 = *a3;
    if (*a3 < v3 || v3 >= v5 && a3[1] < a2[1])
    {
      *result++ = v5;
      *a3 = v4;
      unint64_t v6 = a3 + 1;
LABEL_17:
      unint64_t v8 = v6;
      goto LABEL_18;
    }
    *uint64_t result = v3;
    *a2 = v4;
    unsigned int v12 = result[1];
    result[1] = a2[1];
    a2[1] = v12;
    unsigned int v13 = *a3;
    unsigned int v14 = *a2;
    if (*a3 < *a2 || v14 >= v13 && a3[1] < v12)
    {
      *a2 = v13;
      *a3 = v14;
      unint64_t v6 = a3 + 1;
      uint64_t result = a2 + 1;
      goto LABEL_17;
    }
  }
  return result;
}

unsigned int *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(unsigned int *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4)
{
  uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(a1, a2, a3);
  unsigned int v9 = *a4;
  unsigned int v10 = *a3;
  if (*a4 < *a3 || v10 >= v9 && a4[1] < a3[1])
  {
    *a3 = v9;
    *a4 = v10;
    unsigned int v11 = a3[1];
    a3[1] = a4[1];
    a4[1] = v11;
    unsigned int v12 = *a3;
    unsigned int v13 = *a2;
    if (*a3 < *a2 || v13 >= v12 && a3[1] < a2[1])
    {
      *a2 = v12;
      *a3 = v13;
      unsigned int v14 = a2[1];
      a2[1] = a3[1];
      a3[1] = v14;
      unsigned int v15 = *a2;
      unsigned int v16 = *a1;
      if (*a2 < *a1 || v16 >= v15 && a2[1] < a1[1])
      {
        *a1 = v15;
        *a2 = v16;
        unsigned int v17 = a1[1];
        a1[1] = a2[1];
        a2[1] = v17;
      }
    }
  }
  return result;
}

unsigned int *std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(unsigned int *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, unsigned int *a5)
{
  uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(a1, a2, a3, a4);
  unsigned int v11 = *a5;
  unsigned int v12 = *a4;
  if (*a5 < *a4 || v12 >= v11 && a5[1] < a4[1])
  {
    *a4 = v11;
    *a5 = v12;
    unsigned int v13 = a4[1];
    a4[1] = a5[1];
    a5[1] = v13;
    unsigned int v14 = *a4;
    unsigned int v15 = *a3;
    if (*a4 < *a3 || v15 >= v14 && a4[1] < a3[1])
    {
      *a3 = v14;
      *a4 = v15;
      unsigned int v16 = a3[1];
      a3[1] = a4[1];
      a4[1] = v16;
      unsigned int v17 = *a3;
      unsigned int v18 = *a2;
      if (*a3 < *a2 || v18 >= v17 && a3[1] < a2[1])
      {
        *a2 = v17;
        *a3 = v18;
        unsigned int v19 = a2[1];
        a2[1] = a3[1];
        a3[1] = v19;
        unsigned int v20 = *a2;
        unsigned int v21 = *a1;
        if (*a2 < *a1 || v21 >= v20 && a2[1] < a1[1])
        {
          *a1 = v20;
          *a2 = v21;
          unsigned int v22 = a1[1];
          a1[1] = a2[1];
          a2[1] = v22;
        }
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(unsigned int *a1, unsigned int *a2)
{
  uint64_t v4 = ((char *)a2 - (char *)a1) >> 3;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      unsigned int v6 = *(a2 - 2);
      unsigned int v7 = *a1;
      if (v6 < *a1 || v7 >= v6 && *(a2 - 1) < a1[1])
      {
        *a1 = v6;
        *(a2 - 2) = v7;
        unsigned int v8 = a1[1];
        a1[1] = *(a2 - 1);
        *(a2 - 1) = v8;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(a1, a1 + 2, a1 + 4, a1 + 6, a2 - 2);
      return 1;
    default:
      unsigned int v9 = a1 + 4;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned int,unsigned int> *>(a1, a1 + 2, a1 + 4);
      unsigned int v10 = a1 + 6;
      if (a1 + 6 == a2) {
        return 1;
      }
      uint64_t v11 = 0;
      int v12 = 0;
      break;
  }
  do
  {
    unsigned int v13 = *v9;
    if (*v10 >= *v9 && (v13 < *v10 || v10[1] >= v9[1])) {
      goto LABEL_22;
    }
    unsigned int v14 = *v10;
    unsigned int v15 = v10[1];
    *unsigned int v10 = v13;
    v10[1] = v9[1];
    unsigned int v16 = a1;
    if (v9 == a1) {
      goto LABEL_21;
    }
    uint64_t v17 = v11;
    while (1)
    {
      unsigned int v18 = (char *)a1 + v17;
      unsigned int v19 = *(unsigned int *)((char *)a1 + v17 + 8);
      if (v19 <= v14) {
        break;
      }
      unsigned int v20 = *((_DWORD *)v18 + 3);
LABEL_18:
      v9 -= 2;
      *((_DWORD *)v18 + 4) = v19;
      *(unsigned int *)((char *)a1 + v17 + 20) = v20;
      v17 -= 8;
      if (v17 == -16)
      {
        unsigned int v16 = a1;
        goto LABEL_21;
      }
    }
    if (v19 < v14)
    {
      unsigned int v16 = v9;
      goto LABEL_21;
    }
    unsigned int v20 = *(unsigned int *)((char *)a1 + v17 + 12);
    if (v20 > v15) {
      goto LABEL_18;
    }
    unsigned int v16 = (unsigned int *)((char *)a1 + v17 + 16);
LABEL_21:
    *unsigned int v16 = v14;
    v16[1] = v15;
    if (++v12 == 8) {
      return v10 + 2 == a2;
    }
LABEL_22:
    unsigned int v9 = v10;
    v11 += 8;
    v10 += 2;
  }
  while (v10 != a2);
  return 1;
}

double marisa::grimoire::vector::FlatVector::build(uint64_t *a1, uint64_t a2)
{
  memset(v25, 0, 41);
  uint64_t v26 = 0;
  unsigned int v27 = 0;
  uint64_t v28 = 0;
  uint64_t v4 = *(void *)(a2 + 24);
  if (!v4) {
    goto LABEL_10;
  }
  unsigned int v5 = 0;
  unsigned int v6 = *(unsigned int **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  do
  {
    unsigned int v9 = *v6++;
    unsigned int v8 = v9;
    if (v9 > v5) {
      unsigned int v5 = v8;
    }
    --v7;
  }
  while (v7);
  if (v5)
  {
    uint64_t v10 = 0;
    do
    {
      ++v10;
      BOOL v11 = v5 > 1;
      v5 >>= 1;
    }
    while (v11);
  }
  else
  {
LABEL_10:
    uint64_t v10 = 0;
  }
  BOOL v12 = v4 != 0;
  unint64_t v13 = (unint64_t)(v10 * v4 + 63) >> 6;
  if (v10) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    marisa::grimoire::vector::Vector<unsigned long long>::realloc((uint64_t *)v25, v14);
    *((void *)&v25[1] + 1) = v14;
    uint64_t v15 = *((void *)&v25[0] + 1);
    *(void *)(*((void *)&v25[0] + 1) + 8 * v14 - 8) = 0;
  }
  else
  {
    uint64_t v15 = 0;
    *((void *)&v25[1] + 1) = 0;
  }
  if (v10) {
    unint64_t v16 = 0xFFFFFFFF >> -(char)v10;
  }
  else {
    unint64_t v16 = v27;
  }
  uint64_t v17 = *(void *)(a2 + 24);
  if (v17)
  {
    unint64_t v18 = 0;
    unsigned int v19 = *(int **)(a2 + 16);
    uint64_t v20 = *(void *)(a2 + 24);
    do
    {
      int v21 = *v19++;
      unint64_t v22 = v16 & v21;
      *(void *)(v15 + 8 * (v18 >> 6)) = *(void *)(v15 + 8 * (v18 >> 6)) & ~(v16 << v18) | (v22 << v18);
      if ((v18 & 0x3F) + v10 >= 0x41) {
        *(void *)(v15 + 8 * (v18 >> 6) + 8) = *(void *)(v15 + 8 * (v18 >> 6) + 8) & ~(v16 >> -(v18 & 0x3F)) | (v22 >> -(v18 & 0x3F));
      }
      v18 += v10;
      --v20;
    }
    while (v20);
  }
  uint64_t v23 = *a1;
  *(_OWORD *)a1 = v25[0];
  a1[2] = *(void *)&v25[1];
  double result = *((double *)&v25[1] + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)((char *)&v25[1] + 8);
  *((unsigned char *)a1 + 40) = BYTE8(v25[2]);
  a1[6] = v10;
  *((_DWORD *)a1 + 14) = v16;
  a1[8] = v17;
  if (v23)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

uint64_t marisa::grimoire::trie::LoudsTrie::fill_cache(uint64_t this)
{
  unint64_t v1 = *(void *)(this + 1032);
  if (v1)
  {
    uint64_t v2 = this;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unsigned int v5 = (marisa::grimoire::vector::BitVector *)(this + 416);
    do
    {
      uint64_t v6 = *(void *)(v2 + 1016);
      unint64_t v7 = *(unsigned int *)(v6 + v3 + 4);
      if (v7)
      {
        *(unsigned char *)(v6 + v3 + 8) = *(unsigned char *)(*(void *)(v2 + 632) + v7);
        uint64_t v8 = *(void *)(v2 + 1016);
        if ((*(void *)(*(void *)(v2 + 432) + ((v7 >> 3) & 0x1FFFFFF8)) >> v7))
        {
          this = marisa::grimoire::vector::BitVector::rank1(v5, v7);
          uint64_t v9 = *(void *)(v2 + 720);
          unint64_t v10 = (unint64_t)(v9 * this) >> 6;
          uint64_t v11 = (v9 * this) & 0x3F;
          unint64_t v12 = v11 + v9;
          uint64_t v13 = *(void *)(v2 + 688);
          unint64_t v14 = *(void *)(v13 + 8 * v10);
          if (v12 > 0x40) {
            uint64_t v15 = ((2 * *(void *)(v13 + 8 * v10 + 8)) << (v11 ^ 0x3Fu)) | (v14 >> v11);
          }
          else {
            uint64_t v15 = v14 >> v11;
          }
          int v16 = *(_DWORD *)(v2 + 728) & v15;
        }
        else
        {
          int v16 = 0xFFFFFF;
        }
        *(_DWORD *)(v8 + v3 + 8) = *(unsigned __int8 *)(v8 + v3 + 8) | (v16 << 8);
        unint64_t v1 = *(void *)(v2 + 1032);
      }
      else
      {
        *(void *)(v6 + v3) = -1;
      }
      ++v4;
      v3 += 12;
    }
    while (v4 < v1);
  }
  return this;
}

uint64_t *marisa::grimoire::vector::Vector<marisa::grimoire::trie::Entry>::resize(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = result[4];
  if (v4 < a2)
  {
    uint64_t v5 = 2 * v4;
    if (v4 >> 59) {
      uint64_t v5 = 0xFFFFFFFFFFFFFFFLL;
    }
    if (v4 <= a2 >> 1) {
      uint64_t v6 = a2;
    }
    else {
      uint64_t v6 = v5;
    }
    double result = (uint64_t *)operator new[](16 * v6, MEMORY[0x1E4FBA2D0]);
    uint64_t v7 = v3[3];
    if (v7)
    {
      uint64_t v8 = (uint64_t *)(v3[1] + 8);
      uint64_t v9 = result + 1;
      do
      {
        *(v9 - 1) = *(v8 - 1);
        uint64_t v10 = *v8;
        v8 += 2;
        void *v9 = v10;
        v9 += 2;
        --v7;
      }
      while (v7);
    }
    uint64_t v11 = *v3;
    *uint64_t v3 = (uint64_t)result;
    v3[1] = (uint64_t)result;
    void v3[2] = (uint64_t)result;
    _OWORD v3[4] = v6;
    if (v11) {
      double result = (uint64_t *)MEMORY[0x1D942B890](v11, 0x1000C8077774924);
    }
  }
  unint64_t v12 = v3[3];
  uint64_t v13 = a2 - v12;
  if (a2 > v12)
  {
    uint64_t v14 = 16 * v12;
    do
    {
      uint64_t v15 = (void *)(v3[1] + v14);
      void *v15 = 0;
      v15[1] = 0;
      v14 += 16;
      --v13;
    }
    while (v13);
  }
  _OWORD v3[3] = a2;
  return result;
}

marisa::grimoire::trie::LoudsTrie **marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::reset(marisa::grimoire::trie::LoudsTrie **a1, marisa::grimoire::trie::LoudsTrie *a2)
{
  if (a2 && *a1 == a2)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/include/marisa/scoped-ptr.h";
    exception[2] = 0x600000013;
    exception[3] = "ext/lib/Marisa/marisa-trie/include/marisa/scoped-ptr.h:19: MARISA_RESET_ERROR: (ptr != NULL) && (ptr == ptr_)";
  }
  unint64_t v4 = *a1;
  *a1 = a2;
  return marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(&v4);
}

uint64_t marisa::grimoire::trie::LoudsTrie::build_trie<marisa::grimoire::trie::ReverseKey>(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a2;
  uint64_t v9 = a2[3];
  unint64_t v10 = a2[1];
  if (v9)
  {
    uint64_t v11 = 0;
    unint64_t v12 = (_DWORD *)(v10 + 16);
    do
    {
      *unint64_t v12 = v11;
      v12 += 6;
      ++v11;
    }
    while (v9 != v11);
  }
  unint64_t v13 = marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::ReverseKey *>(v10, v10 + 24 * v9, 0);
  uint64_t v14 = 256;
  if (a5 != 1) {
    uint64_t v14 = 1;
  }
  do
  {
    unint64_t v15 = v14;
    v14 *= 2;
  }
  while (v15 < v13 / *(unsigned int *)(a4 + 8));
  marisa::grimoire::vector::Vector<marisa::grimoire::trie::Cache>::resize((char *)(a1 + 1008), v15);
  *(void *)(a1 + 1056) = v15 - 1;
  marisa::grimoire::vector::BitVector::push_back((uint64_t *)a1, 1);
  marisa::grimoire::vector::BitVector::push_back((uint64_t *)a1, 0);
  v119[0].n128_u8[0] = 0;
  unint64_t v109 = (uint64_t *)(a1 + 624);
  marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)(a1 + 624), v119);
  unsigned int v110 = (uint64_t *)(a1 + 416);
  marisa::grimoire::vector::BitVector::push_back((uint64_t *)(a1 + 416), 0);
  uint64_t v102 = a3;
  uint64_t v103 = a5;
  long long v117 = 0u;
  memset(v118, 0, 25);
  long long v116 = 0u;
  memset(v115, 0, sizeof(v115));
  long long v113 = 0u;
  memset(v114, 0, 25);
  v119[0].n128_u64[0] = v7[3] << 32;
  v119[0].n128_u32[2] = 0;
  std::deque<marisa::grimoire::trie::Range>::push_back(v115, (uint64_t *)v119);
  uint64_t v16 = *((void *)&v116 + 1);
  if (*((void *)&v116 + 1))
  {
    uint64_t v107 = 0;
    std::basic_string<char16_t> v108 = v7;
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = *(void *)(a1 + 464);
      unsigned int v19 = (unsigned int *)(*(void *)(*((void *)&v115[0] + 1) + 8 * ((unint64_t)v116 / 0x155))
                           + 12 * ((unint64_t)v116 % 0x155));
      uint64_t v21 = *v19;
      unint64_t v20 = v19[1];
      uint64_t v22 = v19[2];
      *(void *)&long long v116 = v116 + 1;
      *((void *)&v116 + 1) = v16 - 1;
      if ((unint64_t)v116 >= 0x2AA)
      {
        uint64_t v23 = v18;
        operator delete(**((void ***)&v115[0] + 1));
        uint64_t v18 = v23;
        *((void *)&v115[0] + 1) += 8;
        *(void *)&long long v116 = v116 - 341;
      }
      uint64_t v111 = v16;
      int v24 = v18 - v16;
      if (v21 < v20)
      {
        while (1)
        {
          uint64_t v25 = v7[1];
          if (*(_DWORD *)(v25 + 24 * v21 + 8) != v22) {
            break;
          }
          *(_DWORD *)(v25 + 24 * v21 + 12) = v24;
          uint64_t v21 = (v21 + 1);
          if (v20 == v21) {
            goto LABEL_54;
          }
        }
      }
      if (v21 != v20)
      {
        uint64_t v105 = v18;
        uint64_t v26 = v113;
        long long v113 = 0u;
        memset(v114, 0, 25);
        if (v26) {
          MEMORY[0x1D942B890](v26, 0x1000C8077774924);
        }
        int v106 = v24;
        uint64_t v27 = v7[1];
        double v28 = *(float *)(v27 + 24 * v21 + 12);
        uint64_t v29 = v21 + 1;
        if (v21 + 1 < v20)
        {
          uint64_t v30 = 24 * v21;
          uint64_t v31 = (v21 << 32) + 0x100000000;
          do
          {
            if (*(unsigned __int8 *)(*(void *)(v27 + v30) - v22 - 1) != *(unsigned __int8 *)(*(void *)(v27 + v30 + 24)
                                                                                              - v22
                                                                                              - 1))
            {
              *(float *)&unsigned int v32 = v28;
              v119[0].n128_u64[0] = v31 + v21;
              v119[0].n128_u64[1] = v22 | ((unint64_t)v32 << 32);
              marisa::grimoire::vector::Vector<marisa::grimoire::trie::WeightedRange>::push_back((uint64_t *)&v113, v119);
              uint64_t v27 = v108[1];
              double v28 = 0.0;
              LODWORD(v21) = v29;
            }
            double v28 = v28 + *(float *)(v27 + v30 + 36);
            ++v29;
            v30 += 24;
            v31 += 0x100000000;
          }
          while (v20 != v29);
        }
        *(float *)&unsigned int v33 = v28;
        v119[0].n128_u32[0] = v21;
        v119[0].n128_u32[1] = v20;
        v119[0].n128_u64[1] = v22 | ((unint64_t)v33 << 32);
        __n128 v34 = marisa::grimoire::vector::Vector<marisa::grimoire::trie::WeightedRange>::push_back((uint64_t *)&v113, v119);
        unint64_t v35 = v114[1];
        uint64_t v7 = v108;
        if (*(_DWORD *)(a4 + 16) == 0x20000)
        {
          long long v36 = (__n128 *)*((void *)&v113 + 1);
          uint64_t v37 = (__n128 *)(*((void *)&v113 + 1) + 16 * v114[1]);
          if ((uint64_t)v114[1] <= 128)
          {
            std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(*((__n128 **)&v113 + 1), (__n128 *)(*((void *)&v113 + 1) + 16 * v114[1]), v114[1], 0, 0, v34);
          }
          else
          {
            long long v38 = (__n128 *)std::get_temporary_buffer[abi:ne180100]<marisa::grimoire::trie::WeightedRange>(v114[1]);
            std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(v36, v37, v35, v38, v39, v40);
            if (v38) {
              operator delete(v38);
            }
          }
        }
        if (v105 == v111) {
          *(void *)(a1 + 1064) = v35;
        }
        if (v35)
        {
          uint64_t v41 = 0;
          uint64_t v112 = *((void *)&v113 + 1);
          do
          {
            unint64_t v42 = v35;
            unsigned int v43 = (unsigned int *)(v112 + 16 * v41);
            long long v44 = (uint64_t *)v43;
            uint64_t v45 = v43[2];
            uint64_t v46 = v7[1];
            unint64_t v47 = *(unsigned int *)(v46 + 24 * *v43 + 8);
            unint64_t v48 = v45 + 1;
            if (v45 + 1 >= v47)
            {
              unint64_t v49 = v43[2];
              LODWORD(v47) = v45 + 1;
            }
            else
            {
              unint64_t v49 = v47 - 1;
              unsigned int v50 = (uint64_t *)(v46 + 24 * *v43);
              unint64_t v51 = v43[2];
              do
              {
                unint64_t v52 = v51;
                unint64_t v51 = v48;
                BOOL v53 = v50;
                uint64_t v54 = *v43;
                while (++v54 < (unint64_t)v43[1])
                {
                  uint64_t v55 = *v53;
                  uint64_t v56 = v53[3];
                  v53 += 3;
                  if (*(unsigned __int8 *)(v55 + ~v52 - 1) != *(unsigned __int8 *)(v56 + ~v52 - 1))
                  {
                    unint64_t v49 = v52;
                    LODWORD(v47) = v48;
                    goto LABEL_41;
                  }
                }
                ++v48;
              }
              while (v51 + 1 != v47);
            }
LABEL_41:
            uint64_t v57 = *(void *)(a1 + 648);
            float v59 = *((float *)v43 + 3);
            unsigned int v58 = (int *)(v43 + 3);
            float v60 = v59;
            uint64_t v61 = *(void *)(a1 + 1056) & v57;
            uint64_t v62 = *(void *)(a1 + 1016);
            uint64_t v63 = v62 + 12 * v61;
            float v65 = *(float *)(v63 + 8);
            unsigned int v64 = (float *)(v63 + 8);
            if (v65 < v60)
            {
              uint64_t v66 = (_DWORD *)(v62 + 12 * v61);
              *uint64_t v66 = v106;
              v66[1] = v57;
              *unsigned int v64 = v60;
              uint64_t v45 = *((unsigned int *)v44 + 2);
            }
            if (v49 == v45)
            {
              v119[0].n128_u8[0] = *(unsigned char *)(~v49 + *(void *)(v7[1] + 24 * *(unsigned int *)v44));
              marisa::grimoire::vector::Vector<char>::push_back(v109, v119);
              marisa::grimoire::vector::BitVector::push_back(v110, 0);
            }
            else
            {
              v119[0].n128_u8[0] = 0;
              marisa::grimoire::vector::Vector<char>::push_back(v109, v119);
              marisa::grimoire::vector::BitVector::push_back(v110, 1);
              uint64_t v67 = *(void *)(v7[1] + 24 * *(unsigned int *)v44);
              uint64_t v68 = *((unsigned int *)v44 + 2);
              int v69 = *v58;
              if (v118[2] < (unint64_t)(v17 + 1))
              {
                uint64_t v70 = 2 * v118[2];
                if (v118[2] > 0x555555555555555uLL) {
                  uint64_t v70 = 0xAAAAAAAAAAAAAAALL;
                }
                if (v118[2] <= (unint64_t)(v17 + 1) >> 1) {
                  uint64_t v71 = v17 + 1;
                }
                else {
                  uint64_t v71 = v70;
                }
                marisa::grimoire::vector::Vector<marisa::grimoire::trie::ReverseKey>::realloc((uint64_t *)&v117, v71);
                uint64_t v17 = v118[1];
                uint64_t v107 = *((void *)&v117 + 1);
              }
              uint64_t v72 = v67 - v68;
              int v73 = v47 - v68;
              uint64_t v7 = v108;
              uint64_t v74 = v107 + 24 * v17;
              *(void *)uint64_t v74 = v72;
              *(_DWORD *)(v74 + 8) = v73;
              *(_DWORD *)(v74 + 12) = v69;
              *(_DWORD *)(v74 + 16) = 0;
              uint64_t v17 = ++v118[1];
            }
            *((_DWORD *)v44 + 2) = v47;
            std::deque<marisa::grimoire::trie::Range>::push_back(v115, v44);
            marisa::grimoire::vector::BitVector::push_back((uint64_t *)a1, 1);
            ++v41;
            unint64_t v35 = v42;
          }
          while (v41 != v42);
        }
      }
LABEL_54:
      marisa::grimoire::vector::BitVector::push_back((uint64_t *)a1, 0);
      uint64_t v16 = *((void *)&v116 + 1);
    }
    while (*((void *)&v116 + 1));
  }
  marisa::grimoire::vector::BitVector::push_back((uint64_t *)a1, 0);
  marisa::grimoire::vector::BitVector::build((marisa::grimoire::vector::BitVector *)a1, v103 == 1, 1);
  marisa::grimoire::vector::Vector<unsigned char>::shrink(v109);
  memset(v119, 0, 41);
  marisa::grimoire::vector::Vector<unsigned int>::resize((uint64_t *)v119, v7[3]);
  uint64_t v75 = v7[3];
  if (v75)
  {
    unint64_t v76 = v119[0].n128_u64[1];
    uint64_t v77 = (unsigned int *)(v7[2] + 16);
    do
    {
      *(_DWORD *)(v76 + 4 * *v77) = *(v77 - 1);
      v77 += 6;
      --v75;
    }
    while (v75);
  }
  else
  {
    unint64_t v76 = v119[0].n128_u64[1];
  }
  __n128 v78 = *(__n128 *)v102;
  unint64_t v79 = v119[1].n128_u64[0];
  *(void *)uint64_t v102 = v119[0].n128_u64[0];
  *(void *)(v102 + 8) = v76;
  v119[0] = v78;
  unint64_t v80 = *(void *)(v102 + 16);
  *(void *)(v102 + 16) = v79;
  v119[1].n128_u64[0] = v80;
  __n128 v81 = *(__n128 *)(v102 + 24);
  *(__n128 *)(v102 + 24) = *(__n128 *)((char *)&v119[1] + 8);
  *(__n128 *)((char *)&v119[1] + 8) = v81;
  LOBYTE(v80) = *(unsigned char *)(v102 + 40);
  *(unsigned char *)(v102 + 40) = v119[2].n128_u8[8];
  v119[2].n128_u8[8] = v80;
  if (v78.n128_u64[0]) {
    MEMORY[0x1D942B890](v78.n128_u64[0], 0x1000C8077774924);
  }
  uint64_t v82 = *v7;
  *(_OWORD *)uint64_t v7 = v117;
  void v7[2] = v118[0];
  *(_OWORD *)(v7 + 3) = *(_OWORD *)&v118[1];
  *((unsigned char *)v7 + 40) = v118[3];
  if ((void)v113) {
    MEMORY[0x1D942B890](v113, 0x1000C8077774924);
  }
  std::deque<marisa::grimoire::trie::Range>::~deque[abi:ne180100]((uint64_t)v115);
  if (v82) {
    MEMORY[0x1D942B890](v82, 0x1000C8077774924);
  }
  long long v117 = 0u;
  memset(v118, 0, 25);
  unint64_t v83 = v7[3];
  if (v83)
  {
    if (*(void *)a4 == v103)
    {
      memset(v119, 0, 41);
      marisa::grimoire::vector::Vector<marisa::grimoire::trie::Entry>::resize((uint64_t *)v119, v83);
      uint64_t v84 = v7[3];
      if (v84)
      {
        unsigned int v85 = (_DWORD *)(v119[0].n128_u64[1] + 8);
        unsigned int v86 = (_DWORD *)(v7[1] + 8);
        do
        {
          uint64_t v87 = *((void *)v86 - 1);
          int v88 = *v86;
          v86 += 6;
          *((void *)v85 - 1) = v87 - 1;
          *unsigned int v85 = v88;
          v85 += 4;
          --v84;
        }
        while (v84);
      }
      marisa::grimoire::trie::Tail::build((long long *)(a1 + 744), (uint64_t)v119, (uint64_t *)&v117, *(_DWORD *)(a4 + 12));
      if (v119[0].n128_u64[0]) {
        MEMORY[0x1D942B890](v119[0].n128_u64[0], 0x1000C8077774924);
      }
    }
    else
    {
      unsigned int v89 = (void *)(a1 + 1000);
      BOOL v90 = (marisa::grimoire::trie::LoudsTrie *)operator new(0x470uLL, MEMORY[0x1E4FBA2D0]);
      if (v90)
      {
        uint64_t v91 = v90;
        marisa::grimoire::trie::LoudsTrie::LoudsTrie(v90);
        marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::reset((marisa::grimoire::trie::LoudsTrie **)(a1 + 1000), v91);
      }
      else
      {
        v119[0].n128_u64[0] = *v89;
        void *v89 = 0;
        marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)v119);
      }
      if (!*v89)
      {
        exception = __cxa_allocate_exception(0x20uLL);
        void *exception = &unk_1F2A081F8;
        exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/louds-trie.cc";
        exception[2] = 0x8000001D6;
        exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie"
                       "/louds-trie.cc:470: MARISA_MEMORY_ERROR: next_trie_.get() == NULL";
      }
      marisa::grimoire::trie::LoudsTrie::build_trie<marisa::grimoire::trie::ReverseKey>(*v89, v7, &v117, a4, v103 + 1);
    }
  }
  uint64_t v92 = *(_DWORD **)(a1 + 1000);
  if (v92)
  {
    unsigned int v93 = (v92[268] + 1) | v92[271] | v92[272];
    v119[0].n128_u64[0] = 3;
    v119[0].n128_u64[1] = 0x100000000200;
    v119[1].n128_u32[0] = 0x20000;
    marisa::grimoire::trie::Config::parse_((uint64_t)v119, v93);
  }
  else
  {
    if (*(void *)(a1 + 840)) {
      int v94 = 0x2000;
    }
    else {
      int v94 = 4096;
    }
    unsigned int v95 = *(_DWORD *)(a4 + 16) | *(_DWORD *)(a4 + 8) | v94 | 1;
    v119[0].n128_u64[0] = 3;
    v119[0].n128_u64[1] = 0x100000000200;
    v119[1].n128_u32[0] = 0x20000;
    marisa::grimoire::trie::Config::parse_((uint64_t)v119, v95);
  }
  *(__n128 *)(a1 + 1072) = v119[0];
  *(_DWORD *)(a1 + 1088) = v119[1].n128_u32[0];
  marisa::grimoire::vector::BitVector::build((marisa::grimoire::vector::BitVector *)v110, 0, 0);
  if (v118[1])
  {
    unint64_t v96 = 0;
    unint64_t v97 = 0;
    do
    {
      do
      {
        unint64_t v98 = v97;
        unint64_t v99 = *(void *)(*(void *)(a1 + 432) + ((v97++ >> 3) & 0x1FFFFFFFFFFFFFF8));
      }
      while (((v99 >> v98) & 1) == 0);
      *(unsigned char *)(*(void *)(a1 + 632) + v98) = *(_DWORD *)(*((void *)&v117 + 1) + 4 * v96);
      *(_DWORD *)(*((void *)&v117 + 1) + 4 * v96++) >>= 8;
    }
    while (v96 < v118[1]);
  }
  marisa::grimoire::vector::FlatVector::build((uint64_t *)(a1 + 672), (uint64_t)&v117);
  marisa::grimoire::trie::LoudsTrie::fill_cache(a1);
  uint64_t result = v117;
  if ((void)v117) {
    return MEMORY[0x1D942B890](v117, 0x1000C8077774924);
  }
  return result;
}

void sub_1D2D1EA68()
{
}

void sub_1D2D1EB8C()
{
}

uint64_t marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::ReverseKey *>(unint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2;
  unint64_t v5 = a1;
  uint64_t v6 = a2 - a1;
  if ((uint64_t)(a2 - a1) < 241)
  {
    uint64_t v7 = 0;
    goto LABEL_85;
  }
  uint64_t v7 = 0;
  do
  {
    if (a3 >= *(unsigned int *)(v5 + 8)) {
      int v8 = -1;
    }
    else {
      int v8 = *(unsigned __int8 *)(~a3 + *(void *)v5);
    }
    unint64_t v9 = v6 / 0x30uLL;
    if (a3 >= *(unsigned int *)(v5 + 24 * v9 + 8)) {
      int v10 = -1;
    }
    else {
      int v10 = *(unsigned __int8 *)(~a3 + *(void *)(v5 + 24 * v9));
    }
    if (a3 >= *(unsigned int *)(v4 - 16)) {
      int v11 = -1;
    }
    else {
      int v11 = *(unsigned __int8 *)(~a3 + *(void *)(v4 - 24));
    }
    if (v8 <= v10) {
      int v12 = v10;
    }
    else {
      int v12 = v8;
    }
    if (v8 < v10) {
      int v10 = v8;
    }
    if (v10 <= v11) {
      int v10 = v11;
    }
    if (v12 >= v11) {
      int v13 = v10;
    }
    else {
      int v13 = v12;
    }
    unint64_t v14 = v5;
    unint64_t v15 = v4;
    unint64_t v16 = v5;
    unint64_t v17 = v4;
    while (v14 < v15)
    {
      unint64_t v18 = *(unsigned int *)(v14 + 8);
      int v19 = a3 >= v18 ? -1 : *(unsigned __int8 *)(*(void *)v14 - a3 - 1);
      if (v19 > v13) {
        break;
      }
      if (v19 == v13)
      {
        uint64_t v20 = *(void *)v14;
        *(void *)unint64_t v14 = *(void *)v16;
        *(_DWORD *)(v14 + 8) = *(_DWORD *)(v16 + 8);
        uint64_t v21 = *(void *)(v14 + 12);
        *(_DWORD *)(v14 + 12) = *(_DWORD *)(v16 + 12);
        *(_DWORD *)(v14 + 16) = *(_DWORD *)(v16 + 16);
        *(void *)unint64_t v16 = v20;
        *(_DWORD *)(v16 + 8) = v18;
        *(void *)(v16 + 12) = v21;
        v16 += 24;
      }
LABEL_30:
      v14 += 24;
    }
    if (v14 < v15)
    {
      unint64_t v22 = v15 - 24;
      do
      {
        unint64_t v15 = v22;
        unint64_t v23 = *(unsigned int *)(v22 + 8);
        if (a3 >= v23) {
          int v24 = -1;
        }
        else {
          int v24 = *(unsigned __int8 *)(*(void *)v15 - a3 - 1);
        }
        if (v24 < v13) {
          break;
        }
        if (v24 == v13)
        {
          uint64_t v25 = *(void *)(v17 - 24);
          v17 -= 24;
          uint64_t v26 = *(void *)v15;
          *(void *)unint64_t v15 = v25;
          *(_DWORD *)(v15 + 8) = *(_DWORD *)(v17 + 8);
          uint64_t v27 = *(void *)(v15 + 12);
          *(_DWORD *)(v15 + 12) = *(_DWORD *)(v17 + 12);
          *(_DWORD *)(v15 + 16) = *(_DWORD *)(v17 + 16);
          *(void *)unint64_t v17 = v26;
          *(_DWORD *)(v17 + 8) = v23;
          *(void *)(v17 + 12) = v27;
        }
        unint64_t v22 = v15 - 24;
      }
      while (v14 < v15);
    }
    if (v14 < v15)
    {
      uint64_t v28 = *(void *)v14;
      int v29 = *(_DWORD *)(v14 + 16);
      *(void *)unint64_t v14 = *(void *)v15;
      uint64_t v30 = *(void *)(v14 + 8);
      *(_DWORD *)(v14 + 8) = *(_DWORD *)(v15 + 8);
      *(_DWORD *)(v14 + 12) = *(_DWORD *)(v15 + 12);
      *(_DWORD *)(v14 + 16) = *(_DWORD *)(v15 + 16);
      *(void *)unint64_t v15 = v28;
      *(void *)(v15 + 8) = v30;
      *(_DWORD *)(v15 + 16) = v29;
      goto LABEL_30;
    }
    if (v16 > v5)
    {
      uint64_t v31 = 0;
      do
      {
        uint64_t v32 = v16 + v31;
        uint64_t v33 = v14 + v31;
        uint64_t v34 = *(void *)(v16 + v31 - 24);
        int v35 = *(_DWORD *)(v16 + v31 - 8);
        *(void *)(v32 - 24) = *(void *)(v14 + v31 - 24);
        uint64_t v36 = *(void *)(v16 + v31 - 16);
        *(_DWORD *)(v32 - 16) = *(_DWORD *)(v14 + v31 - 16);
        *(_DWORD *)(v32 - 12) = *(_DWORD *)(v14 + v31 - 12);
        *(_DWORD *)(v32 - 8) = *(_DWORD *)(v14 + v31 - 8);
        *(void *)(v33 - 24) = v34;
        *(void *)(v33 - 16) = v36;
        *(_DWORD *)(v33 - 8) = v35;
        v31 -= 24;
      }
      while (v16 + v31 > v5);
      v14 += v31;
    }
    while (v17 < v4)
    {
      uint64_t v37 = *(void *)v17;
      int v38 = *(_DWORD *)(v17 + 16);
      *(void *)unint64_t v17 = *(void *)v15;
      uint64_t v39 = *(void *)(v17 + 8);
      *(_DWORD *)(v17 + 8) = *(_DWORD *)(v15 + 8);
      *(_DWORD *)(v17 + 12) = *(_DWORD *)(v15 + 12);
      *(_DWORD *)(v17 + 16) = *(_DWORD *)(v15 + 16);
      *(void *)unint64_t v15 = v37;
      *(void *)(v15 + 8) = v39;
      *(_DWORD *)(v15 + 16) = v38;
      v15 += 24;
      v17 += 24;
    }
    uint64_t v40 = v14 - v5;
    int64_t v41 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v14 - v5) >> 3);
    uint64_t v42 = v15 - v14;
    int64_t v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - v14) >> 3);
    if (v41 <= v43)
    {
      uint64_t v44 = v4 - v15;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - v15) >> 3)) <= v43)
      {
        if (v40 == 24)
        {
          ++v7;
        }
        else if (v40 >= 25)
        {
          v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::ReverseKey *>(v5, v14, a3);
        }
        if (v44 == 24)
        {
          ++v7;
        }
        else if (v44 >= 25)
        {
          v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::ReverseKey *>(v15, v4, a3);
        }
        if (v42 == 24)
        {
          ++v7;
        }
        else if (v42 >= 25)
        {
          if (v13 == -1)
          {
            ++v7;
            unint64_t v5 = v15;
            goto LABEL_80;
          }
          ++a3;
        }
        unint64_t v5 = v14;
LABEL_80:
        unint64_t v4 = v15;
        goto LABEL_81;
      }
    }
    if (v42 == 24) {
      goto LABEL_51;
    }
    if (v42 >= 25)
    {
      if (v13 == -1) {
LABEL_51:
      }
        ++v7;
      else {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::ReverseKey *>(v14, v15, a3 + 1);
      }
    }
    uint64_t v45 = v4 - v15;
    if (v41 >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - v15) >> 3)))
    {
      if (v45 == 24)
      {
        ++v7;
      }
      else if (v45 >= 25)
      {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::ReverseKey *>(v15, v4, a3);
      }
      unint64_t v4 = v14;
    }
    else
    {
      if (v40 == 24)
      {
        ++v7;
      }
      else if (v40 >= 25)
      {
        v7 += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::ReverseKey *>(v5, v14, a3);
      }
      unint64_t v5 = v15;
    }
LABEL_81:
    uint64_t v6 = v4 - v5;
  }
  while ((uint64_t)(v4 - v5) > 240);
LABEL_85:
  if (v6 >= 25)
  {
    unint64_t v46 = v5 + 24;
    if (v5 + 24 >= v4)
    {
      uint64_t v47 = 1;
    }
    else
    {
      uint64_t v47 = 1;
      do
      {
        if (v46 > v5)
        {
          unint64_t v48 = v46;
          while (1)
          {
            unint64_t v49 = *(unsigned int *)(v48 - 16);
            uint64_t v50 = *(unsigned int *)(v48 + 8);
            if (a3 >= v49)
            {
LABEL_95:
              if (v49 == v50) {
                break;
              }
              if (v49 < v50)
              {
LABEL_100:
                int v54 = -1;
                goto LABEL_102;
              }
              uint64_t v51 = *(void *)(v48 - 24);
              uint64_t v52 = *(void *)v48;
            }
            else
            {
              uint64_t v51 = *(void *)(v48 - 24);
              uint64_t v52 = *(void *)v48;
              uint64_t v53 = -(uint64_t)a3;
              while (-v50 != v53)
              {
                int v54 = *(unsigned __int8 *)(v51 - 1 + v53) - *(unsigned __int8 *)(*(void *)v48 - 1 + v53);
                if (v54)
                {
                  if (v54 < 1) {
                    goto LABEL_102;
                  }
                  break;
                }
                if (-(uint64_t)v49 == --v53) {
                  goto LABEL_95;
                }
              }
            }
            int v55 = *(_DWORD *)(v48 - 8);
            *(void *)(v48 - 24) = v52;
            uint64_t v56 = *(void *)(v48 + 8);
            *(_DWORD *)(v48 - 8) = *(_DWORD *)(v48 + 16);
            *(void *)unint64_t v48 = v51;
            uint64_t v57 = *(void *)(v48 - 16);
            *(void *)(v48 - 16) = v56;
            *(void *)(v48 + 8) = v57;
            *(_DWORD *)(v48 + 16) = v55;
            v48 -= 24;
            if (v48 <= v5) {
              goto LABEL_100;
            }
          }
        }
        int v54 = 0;
LABEL_102:
        if (v54) {
          ++v47;
        }
        v46 += 24;
      }
      while (v46 < v4);
    }
    v7 += v47;
  }
  return v7;
}

char *marisa::grimoire::vector::Vector<marisa::grimoire::trie::Cache>::resize(char *result, unint64_t a2)
{
  uint64_t v3 = (uint64_t *)result;
  unint64_t v4 = *((void *)result + 4);
  if (v4 < a2)
  {
    uint64_t v5 = 2 * v4;
    if (v4 > 0xAAAAAAAAAAAAAAALL) {
      uint64_t v5 = 0x1555555555555555;
    }
    if (v4 <= a2 >> 1) {
      uint64_t v6 = a2;
    }
    else {
      uint64_t v6 = v5;
    }
    uint64_t result = (char *)operator new[](12 * v6, MEMORY[0x1E4FBA2D0]);
    uint64_t v7 = v3[3];
    if (v7)
    {
      int v8 = (_DWORD *)(v3[1] + 8);
      unint64_t v9 = result + 8;
      do
      {
        *((void *)v9 - 1) = *((void *)v8 - 1);
        int v10 = *v8;
        v8 += 3;
        _DWORD *v9 = v10;
        v9 += 3;
        --v7;
      }
      while (v7);
    }
    uint64_t v11 = *v3;
    *uint64_t v3 = (uint64_t)result;
    v3[1] = (uint64_t)result;
    void v3[2] = (uint64_t)result;
    _OWORD v3[4] = v6;
    if (v11) {
      uint64_t result = (char *)MEMORY[0x1D942B890](v11, 0x1000C8077774924);
    }
  }
  unint64_t v12 = v3[3];
  uint64_t v13 = a2 - v12;
  if (a2 > v12)
  {
    uint64_t v14 = 12 * v12;
    do
    {
      uint64_t v15 = v3[1] + v14;
      *(void *)uint64_t v15 = 0;
      *(_DWORD *)(v15 + 8) = 0x800000;
      v14 += 12;
      --v13;
    }
    while (v13);
  }
  _OWORD v3[3] = a2;
  return result;
}

void std::deque<marisa::grimoire::trie::Range>::push_back(void *a1, uint64_t *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 341 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<marisa::grimoire::trie::Range>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x155)) + 12 * (v7 % 0x155);
  uint64_t v9 = *a2;
  *(_DWORD *)(v8 + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t v8 = v9;
  ++a1[5];
}

__n128 marisa::grimoire::vector::Vector<marisa::grimoire::trie::WeightedRange>::push_back(uint64_t *a1, __n128 *a2)
{
  uint64_t v5 = a1[3];
  unint64_t v4 = a1[4];
  if (v4 < v5 + 1)
  {
    uint64_t v6 = 2 * v4;
    if (v4 >> 59) {
      uint64_t v6 = 0xFFFFFFFFFFFFFFFLL;
    }
    if (v4 <= (unint64_t)(v5 + 1) >> 1) {
      uint64_t v7 = v5 + 1;
    }
    else {
      uint64_t v7 = v6;
    }
    unint64_t v8 = operator new[](16 * v7, MEMORY[0x1E4FBA2D0]);
    if (v5)
    {
      uint64_t v9 = (long long *)a1[1];
      int v10 = v8;
      uint64_t v11 = v5;
      do
      {
        long long v12 = *v9++;
        *v10++ = v12;
        --v11;
      }
      while (v11);
    }
    uint64_t v13 = *a1;
    *a1 = (uint64_t)v8;
    a1[1] = (uint64_t)v8;
    a1[2] = (uint64_t)v8;
    a1[4] = v7;
    if (v13)
    {
      MEMORY[0x1D942B890](v13, 0x1000C8077774924);
      uint64_t v5 = a1[3];
    }
  }
  __n128 result = *a2;
  *(__n128 *)(a1[1] + 16 * v5) = *a2;
  ++a1[3];
  return result;
}

void *std::get_temporary_buffer[abi:ne180100]<marisa::grimoire::trie::WeightedRange>(uint64_t a1)
{
  if (a1 >= 0x7FFFFFFFFFFFFFFLL) {
    unint64_t v1 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v1 = a1;
  }
  uint64_t v2 = (const std::nothrow_t *)MEMORY[0x1E4FBA2D0];
  while (1)
  {
    __n128 result = operator new(16 * v1, v2);
    if (result) {
      break;
    }
    BOOL v4 = v1 > 1;
    v1 >>= 1;
    if (!v4) {
      return 0;
    }
  }
  return result;
}

__n128 std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(__n128 *a1, __n128 *a2, unint64_t a3, __n128 *a4, uint64_t a5, __n128 result)
{
  if (a3 >= 2)
  {
    uint64_t v7 = (float *)a1;
    if (a3 == 2)
    {
      result.n128_u32[0] = a2[-1].n128_u32[3];
      if (result.n128_f32[0] > a1->n128_f32[3])
      {
        __n128 result = *a1;
        *a1 = a2[-1];
        a2[-1] = result;
      }
    }
    else if ((uint64_t)a3 > 128)
    {
      unint64_t v17 = (float *)a4;
      unint64_t v18 = a3 >> 1;
      int v19 = &a1[a3 >> 1];
      unint64_t v20 = a3 >> 1;
      if ((uint64_t)a3 <= a5)
      {
        __n128 v21 = std::__stable_sort_move<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(a1, v19, v20, a4, result);
        unint64_t v22 = (__n128 *)&v17[4 * v18];
        result.n128_u64[0] = std::__stable_sort_move<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>((__n128 *)&v7[4 * (a3 >> 1)], a2, a3 - (a3 >> 1), v22, v21).n128_u64[0];
        unint64_t v23 = &v17[4 * a3];
        int v24 = v22;
        while (v24 != (__n128 *)v23)
        {
          if (v24->n128_f32[3] <= v17[3])
          {
            __n128 v26 = *(__n128 *)v17;
            v17 += 4;
            __n128 result = v26;
          }
          else
          {
            __n128 v25 = *v24++;
            __n128 result = v25;
          }
          *(__n128 *)uint64_t v7 = result;
          v7 += 4;
          if (v17 == (float *)v22)
          {
            if (v24 != (__n128 *)v23)
            {
              unint64_t v27 = 0;
              do
              {
                __n128 result = v24[v27 / 0x10];
                *(__n128 *)&v7[v27 / 4] = result;
                v27 += 16;
              }
              while (&v24[v27 / 0x10] != (__n128 *)v23);
            }
            return result;
          }
        }
        if (v17 != (float *)v22)
        {
          uint64_t v28 = 0;
          do
          {
            __n128 result = *(__n128 *)&v17[v28];
            *(__n128 *)&v7[v28] = result;
            v28 += 4;
          }
          while (&v17[v28] != (float *)v22);
        }
      }
      else
      {
        std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(a1, v19, v20, a4, a5);
        std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(&v7[4 * (a3 >> 1)], a2, a3 - (a3 >> 1), v17, a5);
        std::__inplace_merge<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(v7, &v7[4 * (a3 >> 1)], (float *)a2, a3 >> 1, a3 - (a3 >> 1), v17, a5);
      }
    }
    else if (a1 != a2)
    {
      uint64_t v9 = a1 + 1;
      if (&a1[1] != a2)
      {
        uint64_t v10 = 0;
        uint64_t v11 = a1;
        do
        {
          result.n128_u32[0] = v11[1].n128_u32[3];
          float v12 = v11->n128_f32[3];
          uint64_t v11 = v9;
          if (result.n128_f32[0] > v12)
          {
            unint64_t v29 = v9->n128_u64[0];
            unsigned __int32 v30 = v9->n128_u32[2];
            uint64_t v13 = v10;
            while (1)
            {
              *(__n128 *)((char *)a1 + v13 + 16) = *(__n128 *)((char *)a1 + v13);
              if (!v13) {
                break;
              }
              float v14 = *(float *)((char *)&a1->n128_f32[-1] + v13);
              v13 -= 16;
              if (result.n128_f32[0] <= v14)
              {
                uint64_t v15 = (uint64_t)&a1[1] + v13;
                goto LABEL_15;
              }
            }
            uint64_t v15 = (uint64_t)a1;
LABEL_15:
            *(void *)uint64_t v15 = v29;
            *(_DWORD *)(v15 + 8) = v30;
            *(_DWORD *)(v15 + 12) = result.n128_u32[0];
          }
          uint64_t v9 = v11 + 1;
          v10 += 16;
        }
        while (&v11[1] != a2);
      }
    }
  }
  return result;
}

unsigned char *marisa::grimoire::vector::Vector<unsigned char>::shrink(unsigned char *result)
{
  if (result[40])
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    exception[2] = 0x100000064;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:100: MARISA_STATE_ERROR: fixed_";
  }
  size_t v1 = *((void *)result + 3);
  if (v1 != *((void *)result + 4))
  {
    return marisa::grimoire::vector::Vector<char>::realloc((uint64_t *)result, v1);
  }
  return result;
}

uint64_t std::deque<marisa::grimoire::trie::Range>::~deque[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *(void ***)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = *(void ***)(a1 + 16);
      uint64_t v2 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 170;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    uint64_t v6 = 341;
LABEL_7:
    *(void *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      uint64_t v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8 != v9) {
      *(void *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::deque<marisa::grimoire::trie::Range>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x155;
  unint64_t v4 = v2 - 341;
  if (v3)
  {
    a1[4] = v4;
    unint64_t v5 = (void *)a1[1];
    uint64_t v6 = (char *)a1[2];
    uint64_t v9 = *v5;
    uint64_t v7 = (char *)(v5 + 1);
    uint64_t v8 = v9;
    a1[1] = v7;
    if (v6 != (char *)a1[3]) {
      goto LABEL_41;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v40 = 1;
      }
      else {
        unint64_t v40 = (uint64_t)&v6[-*a1] >> 2;
      }
      int64_t v41 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v40);
      uint64_t v42 = &v41[8 * (v40 >> 2)];
      uint64_t v44 = &v41[8 * v43];
      uint64_t v45 = (uint64_t *)a1[1];
      uint64_t v6 = v42;
      uint64_t v46 = a1[2] - (void)v45;
      if (v46)
      {
        uint64_t v6 = &v42[v46 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v47 = 8 * (v46 >> 3);
        unint64_t v48 = &v41[8 * (v40 >> 2)];
        do
        {
          uint64_t v49 = *v45++;
          *(void *)unint64_t v48 = v49;
          v48 += 8;
          v47 -= 8;
        }
        while (v47);
      }
      goto LABEL_29;
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    BOOL v12 = v10 >> 3 < -1;
    uint64_t v13 = (v10 >> 3) + 2;
    if (v12) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = v11 + 1;
    }
    uint64_t v15 = -(v14 >> 1);
    uint64_t v16 = v14 >> 1;
    unint64_t v17 = &v7[-8 * v16];
    int64_t v18 = v6 - v7;
    if (v6 != v7)
    {
      memmove(&v7[-8 * v16], v7, v6 - v7);
      uint64_t v7 = (char *)a1[1];
    }
    uint64_t v6 = &v17[v18];
    a1[1] = &v7[8 * v15];
    a1[2] = &v17[v18];
    goto LABEL_41;
  }
  unint64_t v20 = (char *)a1[2];
  int v19 = (char *)a1[3];
  __n128 v21 = (char *)*a1;
  unint64_t v22 = (char *)a1[1];
  unint64_t v23 = (v20 - v22) >> 3;
  uint64_t v24 = (uint64_t)&v19[-*a1];
  if (v23 < v24 >> 3)
  {
    __n128 v25 = operator new(0xFFCuLL);
    __n128 v26 = v25;
    if (v19 != v20)
    {
      *(void *)unint64_t v20 = v25;
LABEL_42:
      a1[2] += 8;
      return;
    }
    if (v22 == v21)
    {
      if (v20 == v22) {
        unint64_t v51 = 1;
      }
      else {
        unint64_t v51 = (v19 - v22) >> 2;
      }
      uint64_t v52 = 2 * v51;
      uint64_t v53 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v51);
      unint64_t v22 = &v53[(v52 + 6) & 0xFFFFFFFFFFFFFFF8];
      int v55 = (uint64_t *)a1[1];
      uint64_t v56 = v22;
      uint64_t v57 = a1[2] - (void)v55;
      if (v57)
      {
        uint64_t v56 = &v22[v57 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v58 = 8 * (v57 >> 3);
        float v59 = &v53[(v52 + 6) & 0xFFFFFFFFFFFFFFF8];
        do
        {
          uint64_t v60 = *v55++;
          *(void *)float v59 = v60;
          v59 += 8;
          v58 -= 8;
        }
        while (v58);
      }
      uint64_t v61 = (char *)*a1;
      *a1 = v53;
      a1[1] = v22;
      a1[2] = v56;
      a1[3] = &v53[8 * v54];
      if (v61)
      {
        operator delete(v61);
        unint64_t v22 = (char *)a1[1];
      }
    }
    *((void *)v22 - 1) = v26;
    uint64_t v7 = (char *)a1[1];
    uint64_t v6 = (char *)a1[2];
    a1[1] = v7 - 8;
    uint64_t v8 = *((void *)v7 - 1);
    a1[1] = v7;
    if (v6 != (char *)a1[3])
    {
LABEL_41:
      *(void *)uint64_t v6 = v8;
      goto LABEL_42;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v85 = 1;
      }
      else {
        unint64_t v85 = (uint64_t)&v6[-*a1] >> 2;
      }
      int64_t v41 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v85);
      uint64_t v42 = &v41[8 * (v85 >> 2)];
      uint64_t v44 = &v41[8 * v86];
      uint64_t v87 = (uint64_t *)a1[1];
      uint64_t v6 = v42;
      uint64_t v88 = a1[2] - (void)v87;
      if (v88)
      {
        uint64_t v6 = &v42[v88 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v89 = 8 * (v88 >> 3);
        BOOL v90 = &v41[8 * (v85 >> 2)];
        do
        {
          uint64_t v91 = *v87++;
          *(void *)BOOL v90 = v91;
          v90 += 8;
          v89 -= 8;
        }
        while (v89);
      }
LABEL_29:
      uint64_t v50 = (char *)*a1;
      *a1 = v41;
      a1[1] = v42;
      a1[2] = v6;
      a1[3] = v44;
      if (v50)
      {
        operator delete(v50);
        uint64_t v6 = (char *)a1[2];
      }
      goto LABEL_41;
    }
    goto LABEL_5;
  }
  uint64_t v27 = v24 >> 2;
  if (v19 == v21) {
    unint64_t v28 = 1;
  }
  else {
    unint64_t v28 = v27;
  }
  unint64_t v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v28);
  uint64_t v31 = v30;
  uint64_t v32 = &v29[8 * v23];
  *(void *)&long long v33 = v29;
  *((void *)&v33 + 1) = v32;
  long long v95 = v33;
  uint64_t v34 = operator new(0xFFCuLL);
  *(void *)&long long v35 = v32;
  *((void *)&v35 + 1) = &v29[8 * v31];
  if (v23 == v31)
  {
    uint64_t v36 = 8 * v23;
    *(void *)&long long v37 = v95;
    if (v20 - v22 >= 1)
    {
      uint64_t v38 = v36 >> 3;
      if (v38 >= -1) {
        unint64_t v39 = v38 + 1;
      }
      else {
        unint64_t v39 = v38 + 2;
      }
      v32 -= 8 * (v39 >> 1);
      *(void *)&long long v35 = v32;
      *((void *)&v37 + 1) = v32;
      goto LABEL_50;
    }
    uint64_t v62 = v36 >> 2;
    if (v20 == v22) {
      unint64_t v63 = 1;
    }
    else {
      unint64_t v63 = v62;
    }
    unsigned int v64 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v63);
    uint64_t v32 = &v64[8 * (v63 >> 2)];
    *(void *)&long long v37 = v64;
    *((void *)&v37 + 1) = v32;
    *(void *)&long long v35 = v32;
    *((void *)&v35 + 1) = &v64[8 * v65];
    if (!v29) {
      goto LABEL_50;
    }
    long long v92 = v35;
    long long v95 = v37;
    operator delete(v29);
    long long v35 = v92;
  }
  long long v37 = v95;
LABEL_50:
  *(void *)uint64_t v32 = v34;
  *(void *)&long long v35 = v35 + 8;
  for (uint64_t i = a1[2]; i != a1[1]; i -= 8)
  {
    uint64_t v67 = (void *)*((void *)&v37 + 1);
    if (*((void *)&v37 + 1) == (void)v37)
    {
      int v69 = (unsigned char *)v35;
      if ((unint64_t)v35 >= *((void *)&v35 + 1))
      {
        if (*((void *)&v35 + 1) == *((void *)&v37 + 1)) {
          unint64_t v74 = 1;
        }
        else {
          unint64_t v74 = (uint64_t)(*((void *)&v35 + 1) - *((void *)&v37 + 1)) >> 2;
        }
        uint64_t v75 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v74);
        uint64_t v68 = &v75[(2 * v74 + 6) & 0xFFFFFFFFFFFFFFF8];
        uint64_t v77 = v68;
        uint64_t v78 = v69 - (unsigned char *)v67;
        if (v69 != (unsigned char *)v67)
        {
          uint64_t v77 = &v68[v78 & 0xFFFFFFFFFFFFFFF8];
          uint64_t v79 = 8 * (v78 >> 3);
          unint64_t v80 = v68;
          __n128 v81 = v67;
          do
          {
            uint64_t v82 = *v81++;
            *(void *)unint64_t v80 = v82;
            v80 += 8;
            v79 -= 8;
          }
          while (v79);
        }
        *(void *)&long long v37 = v75;
        *((void *)&v37 + 1) = v68;
        *(void *)&long long v35 = v77;
        *((void *)&v35 + 1) = &v75[8 * v76];
        if (v67)
        {
          long long v93 = v35;
          long long v97 = v37;
          operator delete(v67);
          long long v35 = v93;
          long long v37 = v97;
        }
      }
      else
      {
        uint64_t v70 = (uint64_t)(*((void *)&v35 + 1) - v35) >> 3;
        if (v70 >= -1) {
          uint64_t v71 = v70 + 1;
        }
        else {
          uint64_t v71 = v70 + 2;
        }
        uint64_t v72 = v71 >> 1;
        uint64_t v73 = v35 + 8 * (v71 >> 1);
        uint64_t v68 = (char *)(v73 - (v35 - *((void *)&v37 + 1)));
        if ((void)v35 == *((void *)&v37 + 1))
        {
          int v69 = (unsigned char *)*((void *)&v37 + 1);
        }
        else
        {
          uint64_t v94 = *((void *)&v35 + 1);
          uint64_t v96 = v37;
          memmove((void *)(v73 - (v35 - *((void *)&v37 + 1))), *((const void **)&v37 + 1), v35 - *((void *)&v37 + 1));
          *((void *)&v35 + 1) = v94;
          *(void *)&long long v37 = v96;
        }
        *((void *)&v37 + 1) = v68;
        *(void *)&long long v35 = &v69[8 * v72];
      }
    }
    else
    {
      uint64_t v68 = (char *)*((void *)&v37 + 1);
    }
    uint64_t v83 = *(void *)(i - 8);
    *((void *)v68 - 1) = v83;
    *((void *)&v37 + 1) -= 8;
  }
  uint64_t v84 = (char *)*a1;
  *(_OWORD *)a1 = v37;
  *((_OWORD *)a1 + 1) = v35;
  if (v84)
  {
    operator delete(v84);
  }
}

void sub_1D2D1FCDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, long long a11)
{
  operator delete(v11);
  if ((void)a11) {
    operator delete((void *)a11);
  }
  _Unwind_Resume(a1);
}

char *marisa::grimoire::vector::Vector<marisa::grimoire::trie::ReverseKey>::realloc(uint64_t *a1, uint64_t a2)
{
  __n128 result = (char *)operator new[](24 * a2, MEMORY[0x1E4FBA2D0]);
  uint64_t v5 = a1[3];
  if (v5)
  {
    uint64_t v6 = result + 16;
    uint64_t v7 = (_DWORD *)(a1[1] + 16);
    do
    {
      *((void *)v6 - 2) = *((void *)v7 - 2);
      *(v6 - 2) = *(v7 - 2);
      *(v6 - 1) = *(v7 - 1);
      int v8 = *v7;
      v7 += 6;
      *uint64_t v6 = v8;
      v6 += 6;
      --v5;
    }
    while (v5);
  }
  uint64_t v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = a2;
  if (v9)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

__n128 std::__stable_sort_move<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(__n128 *a1, __n128 *a2, unint64_t a3, __n128 *a4, __n128 result)
{
  if (a3)
  {
    uint64_t v5 = a4;
    int v8 = a1;
    if (a3 == 2)
    {
      uint64_t v9 = a2 - 1;
      if (a2[-1].n128_f32[3] <= a1->n128_f32[3])
      {
        *a4 = *a1;
        __n128 result = *v9;
      }
      else
      {
        *a4 = *v9;
        __n128 result = *a1;
      }
      a4[1] = result;
    }
    else if (a3 == 1)
    {
      __n128 result = *a1;
      *a4 = *a1;
    }
    else if ((uint64_t)a3 > 8)
    {
      unint64_t v17 = &a1[a3 >> 1];
      std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(a1, v17, a3 >> 1, a4, a3 >> 1);
      std::__stable_sort<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(&v8[a3 >> 1], a2, a3 - (a3 >> 1), &v5[a3 >> 1], a3 - (a3 >> 1));
      int64_t v18 = &v8[a3 >> 1];
      while (v18 != a2)
      {
        if (v18->n128_f32[3] <= v8->n128_f32[3])
        {
          __n128 v20 = *v8++;
          __n128 result = v20;
        }
        else
        {
          __n128 v19 = *v18++;
          __n128 result = v19;
        }
        *v5++ = result;
        if (v8 == v17)
        {
          if (v18 != a2)
          {
            uint64_t v21 = 0;
            do
            {
              __n128 result = v18[v21];
              v5[v21++] = result;
            }
            while (&v18[v21] != a2);
          }
          return result;
        }
      }
      if (v8 != v17)
      {
        uint64_t v22 = 0;
        do
        {
          __n128 result = v8[v22];
          v5[v22++] = result;
        }
        while (&v8[v22] != v17);
      }
    }
    else if (a1 != a2)
    {
      __n128 result = *a1;
      *a4 = *a1;
      uint64_t v10 = a1 + 1;
      if (&a1[1] != a2)
      {
        uint64_t v11 = 0;
        BOOL v12 = a4;
        do
        {
          uint64_t v13 = v8;
          uint64_t v14 = v12;
          int v8 = v10;
          uint64_t v15 = ++v12;
          if (v13[1].n128_f32[3] > v14->n128_f32[3])
          {
            *BOOL v12 = *v14;
            uint64_t v15 = a4;
            if (v14 != a4)
            {
              uint64_t v16 = v11;
              while (1)
              {
                uint64_t v15 = (__n128 *)((char *)a4 + v16);
                if (v13[1].n128_f32[3] <= *(float *)((char *)&a4->n128_f32[-1] + v16)) {
                  break;
                }
                __n128 *v15 = v15[-1];
                v16 -= 16;
                if (!v16)
                {
                  uint64_t v15 = a4;
                  break;
                }
              }
            }
          }
          __n128 result = *v8;
          __n128 *v15 = *v8;
          uint64_t v10 = v8 + 1;
          v11 += 16;
        }
        while (&v8[1] != a2);
      }
    }
  }
  return result;
}

float *std::__inplace_merge<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(float *result, float *a2, float *a3, uint64_t a4, uint64_t a5, float *a6, uint64_t a7)
{
  if (a5)
  {
    uint64_t v8 = a5;
    uint64_t v11 = result;
    while (v8 > a7 && a4 > a7)
    {
      if (!a4) {
        return result;
      }
      while (a2[3] <= v11[3])
      {
        v11 += 4;
        if (!--a4) {
          return result;
        }
      }
      if (a4 >= v8)
      {
        if (a4 == 1)
        {
          long long v74 = *(_OWORD *)v11;
          *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
          *(_OWORD *)a2 = v74;
          return result;
        }
        if (a4 >= 0) {
          uint64_t v22 = a4;
        }
        else {
          uint64_t v22 = a4 + 1;
        }
        uint64_t v21 = v22 >> 1;
        uint64_t v15 = &v11[4 * (v22 >> 1)];
        uint64_t v14 = a3;
        if (a3 != a2)
        {
          unint64_t v23 = ((char *)a3 - (char *)a2) >> 4;
          uint64_t v14 = a2;
          do
          {
            unint64_t v24 = v23 >> 1;
            __n128 v25 = &v14[4 * (v23 >> 1)];
            float v26 = v25[3];
            uint64_t v27 = v25 + 4;
            v23 += ~(v23 >> 1);
            if (v26 > v15[3]) {
              uint64_t v14 = v27;
            }
            else {
              unint64_t v23 = v24;
            }
          }
          while (v23);
        }
        uint64_t v13 = ((char *)v14 - (char *)a2) >> 4;
      }
      else
      {
        if (v8 >= 0) {
          uint64_t v12 = v8;
        }
        else {
          uint64_t v12 = v8 + 1;
        }
        uint64_t v13 = v12 >> 1;
        uint64_t v14 = &a2[4 * (v12 >> 1)];
        uint64_t v15 = a2;
        if (a2 != v11)
        {
          unint64_t v16 = ((char *)a2 - (char *)v11) >> 4;
          uint64_t v15 = v11;
          do
          {
            unint64_t v17 = v16 >> 1;
            int64_t v18 = &v15[4 * (v16 >> 1)];
            float v19 = v18[3];
            __n128 v20 = v18 + 4;
            v16 += ~(v16 >> 1);
            if (v14[3] > v19) {
              unint64_t v16 = v17;
            }
            else {
              uint64_t v15 = v20;
            }
          }
          while (v16);
        }
        uint64_t v21 = ((char *)v15 - (char *)v11) >> 4;
      }
      unint64_t v28 = v14;
      if (v15 != a2)
      {
        unint64_t v28 = v15;
        if (a2 != v14)
        {
          if (v15 + 4 == a2)
          {
            long long v72 = *(_OWORD *)v15;
            int64_t v34 = (char *)v14 - (char *)a2;
            uint64_t v67 = v21;
            int v69 = a6;
            long long v35 = a3;
            uint64_t v36 = v13;
            memmove(v15, a2, (char *)v14 - (char *)a2);
            uint64_t v13 = v36;
            uint64_t v21 = v67;
            a6 = v69;
            a3 = v35;
            unint64_t v28 = (float *)((char *)v15 + v34);
            *(_OWORD *)unint64_t v28 = v72;
          }
          else if (a2 + 4 == v14)
          {
            unint64_t v28 = v15 + 4;
            long long v73 = *((_OWORD *)v14 - 1);
            if (v14 - 4 != v15)
            {
              uint64_t v68 = v21;
              uint64_t v70 = a6;
              long long v37 = a3;
              uint64_t v38 = v13;
              memmove(v15 + 4, v15, (char *)(v14 - 4) - (char *)v15);
              uint64_t v13 = v38;
              uint64_t v21 = v68;
              a6 = v70;
              a3 = v37;
            }
            *(_OWORD *)uint64_t v15 = v73;
          }
          else
          {
            uint64_t v29 = ((char *)a2 - (char *)v15) >> 4;
            if (v29 == ((char *)v14 - (char *)a2) >> 4)
            {
              uint64_t v30 = 0;
              do
              {
                long long v71 = *(_OWORD *)&v15[v30];
                *(_OWORD *)&v15[v30] = *(_OWORD *)&a2[v30];
                uint64_t v31 = (uint64_t)&v15[v30 + 4];
                *(_OWORD *)&a2[v30] = v71;
                uint64_t v32 = (uint64_t)&a2[v30 + 4];
                v30 += 4;
              }
              while ((float *)v31 != a2 && v32 != (void)v14);
              unint64_t v28 = a2;
            }
            else
            {
              uint64_t v39 = ((char *)v14 - (char *)a2) >> 4;
              uint64_t v40 = ((char *)a2 - (char *)v15) >> 4;
              do
              {
                uint64_t v41 = v40;
                uint64_t v40 = v39;
                uint64_t v39 = v41 % v39;
              }
              while (v39);
              if (v40)
              {
                uint64_t v42 = &v15[4 * v40];
                do
                {
                  long long v43 = *((_OWORD *)v42 - 1);
                  v42 -= 4;
                  uint64_t v44 = &v42[4 * v29];
                  uint64_t v45 = v42;
                  do
                  {
                    uint64_t v46 = v45;
                    uint64_t v45 = v44;
                    *(_OWORD *)uint64_t v46 = *(_OWORD *)v44;
                    BOOL v47 = __OFSUB__(v29, ((char *)v14 - (char *)v44) >> 4);
                    uint64_t v49 = v29 - (((char *)v14 - (char *)v44) >> 4);
                    char v48 = (v49 < 0) ^ v47;
                    uint64_t v44 = &v15[4 * v49];
                    if (v48) {
                      uint64_t v44 = &v45[4 * v29];
                    }
                  }
                  while (v44 != v42);
                  *(_OWORD *)uint64_t v45 = v43;
                }
                while (v42 != v15);
              }
              unint64_t v28 = &v15[4 * (((char *)v14 - (char *)a2) >> 4)];
            }
          }
        }
      }
      a4 -= v21;
      v8 -= v13;
      if (v21 + v13 >= a4 + v8)
      {
        uint64_t v53 = a4;
        uint64_t v54 = v13;
        unint64_t v51 = a6;
        __n128 result = (float *)std::__inplace_merge<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(v28, v14, a3, v53, v8, a6, a7);
        uint64_t v14 = v15;
        uint64_t v8 = v54;
        a4 = v21;
        a3 = v28;
      }
      else
      {
        uint64_t v50 = v11;
        unint64_t v51 = a6;
        uint64_t v52 = a3;
        __n128 result = (float *)std::__inplace_merge<std::_ClassicAlgPolicy,std::greater<marisa::grimoire::trie::WeightedRange> &,marisa::grimoire::trie::WeightedRange*>(v50, v15, v28, v21, v13, a6, a7);
        a3 = v52;
        uint64_t v11 = v28;
      }
      a2 = v14;
      a6 = v51;
      if (!v8) {
        return result;
      }
    }
    if (a4 <= v8)
    {
      if (v11 != a2)
      {
        uint64_t v61 = 0;
        do
        {
          *(_OWORD *)&a6[v61] = *(_OWORD *)&v11[v61];
          v61 += 4;
        }
        while (&v11[v61] != a2);
        uint64_t v62 = &a6[v61];
        if (v62 != a6)
        {
          while (a2 != a3)
          {
            if (a2[3] <= a6[3])
            {
              long long v65 = *(_OWORD *)a6;
              a6 += 4;
              long long v64 = v65;
            }
            else
            {
              long long v63 = *(_OWORD *)a2;
              a2 += 4;
              long long v64 = v63;
            }
            *(_OWORD *)uint64_t v11 = v64;
            v11 += 4;
            if (a6 == v62) {
              return result;
            }
          }
          return (float *)memmove(v11, a6, (char *)v62 - (char *)a6);
        }
      }
    }
    else if (a2 != a3)
    {
      uint64_t v55 = 0;
      do
      {
        *(_OWORD *)&a6[v55] = *(_OWORD *)&a2[v55];
        v55 += 4;
      }
      while (&a2[v55] != a3);
      uint64_t v56 = &a6[v55];
      if (v56 != a6)
      {
        uint64_t v57 = a3 - 4;
        while (a2 != v11)
        {
          float v58 = *(v56 - 1);
          float v59 = *(a2 - 1);
          if (v58 <= v59) {
            uint64_t v60 = v56 - 4;
          }
          else {
            uint64_t v60 = a2 - 4;
          }
          if (v58 <= v59) {
            v56 -= 4;
          }
          else {
            a2 -= 4;
          }
          *(_OWORD *)uint64_t v57 = *(_OWORD *)v60;
          v57 -= 4;
          if (v56 == a6) {
            return result;
          }
        }
        uint64_t v66 = 0;
        do
        {
          *(_OWORD *)&v57[v66] = *(_OWORD *)&v56[v66 - 4];
          v66 -= 4;
        }
        while (&v56[v66] != a6);
      }
    }
  }
  return result;
}

uint64_t marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Key *>(char *a1, char *a2, unint64_t a3)
{
  unint64_t v4 = a2;
  uint64_t v5 = (uint64_t *)a1;
  uint64_t v6 = a2 - a1;
  if (a2 - a1 < 241)
  {
    uint64_t result = 0;
    goto LABEL_85;
  }
  uint64_t result = 0;
  do
  {
    if (a3 >= *((unsigned int *)v5 + 2)) {
      int v8 = -1;
    }
    else {
      int v8 = *(unsigned __int8 *)(*v5 + a3);
    }
    unint64_t v9 = v6 / 0x30uLL;
    if (a3 >= LODWORD(v5[3 * v9 + 1])) {
      int v10 = -1;
    }
    else {
      int v10 = *(unsigned __int8 *)(v5[3 * v9] + a3);
    }
    if (a3 >= *((unsigned int *)v4 - 4)) {
      int v11 = -1;
    }
    else {
      int v11 = *(unsigned __int8 *)(*((void *)v4 - 3) + a3);
    }
    if (v8 <= v10) {
      int v12 = v10;
    }
    else {
      int v12 = v8;
    }
    if (v8 < v10) {
      int v10 = v8;
    }
    if (v10 <= v11) {
      int v10 = v11;
    }
    if (v12 >= v11) {
      int v13 = v10;
    }
    else {
      int v13 = v12;
    }
    uint64_t v14 = v5;
    uint64_t v15 = (uint64_t *)v4;
    unint64_t v16 = (unint64_t)v5;
    unint64_t v17 = (uint64_t *)v4;
    while (v14 < v15)
    {
      unint64_t v18 = *((unsigned int *)v14 + 2);
      int v19 = a3 >= v18 ? -1 : *(unsigned __int8 *)(*v14 + a3);
      if (v19 > v13) {
        break;
      }
      if (v19 == v13)
      {
        uint64_t v20 = *v14;
        uint64_t *v14 = *(void *)v16;
        *((_DWORD *)v14 + 2) = *(_DWORD *)(v16 + 8);
        uint64_t v21 = *(uint64_t *)((char *)v14 + 12);
        *((_DWORD *)v14 + 3) = *(_DWORD *)(v16 + 12);
        *((_DWORD *)v14 + 4) = *(_DWORD *)(v16 + 16);
        *(void *)unint64_t v16 = v20;
        *(_DWORD *)(v16 + 8) = v18;
        *(void *)(v16 + 12) = v21;
        v16 += 24;
      }
LABEL_30:
      v14 += 3;
    }
    if (v14 < v15)
    {
      uint64_t v22 = v15 - 3;
      do
      {
        uint64_t v15 = v22;
        unint64_t v23 = *((unsigned int *)v22 + 2);
        if (a3 >= v23) {
          int v24 = -1;
        }
        else {
          int v24 = *(unsigned __int8 *)(*v15 + a3);
        }
        if (v24 < v13) {
          break;
        }
        if (v24 == v13)
        {
          uint64_t v25 = *(v17 - 3);
          v17 -= 3;
          uint64_t v26 = *v15;
          uint64_t *v15 = v25;
          *((_DWORD *)v15 + 2) = *((_DWORD *)v17 + 2);
          uint64_t v27 = *(uint64_t *)((char *)v15 + 12);
          *((_DWORD *)v15 + 3) = *((_DWORD *)v17 + 3);
          *((_DWORD *)v15 + 4) = *((_DWORD *)v17 + 4);
          *unint64_t v17 = v26;
          *((_DWORD *)v17 + 2) = v23;
          *(uint64_t *)((char *)v17 + 12) = v27;
        }
        uint64_t v22 = v15 - 3;
      }
      while (v14 < v15);
    }
    if (v14 < v15)
    {
      uint64_t v28 = *v14;
      int v29 = *((_DWORD *)v14 + 4);
      uint64_t *v14 = *v15;
      uint64_t v30 = v14[1];
      *((_DWORD *)v14 + 2) = *((_DWORD *)v15 + 2);
      *((_DWORD *)v14 + 3) = *((_DWORD *)v15 + 3);
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      uint64_t *v15 = v28;
      v15[1] = v30;
      *((_DWORD *)v15 + 4) = v29;
      goto LABEL_30;
    }
    if (v16 > (unint64_t)v5)
    {
      uint64_t v31 = 0;
      do
      {
        unint64_t v32 = v16 + v31 * 8;
        long long v33 = &v14[v31];
        uint64_t v34 = *(void *)(v16 + v31 * 8 - 24);
        int v35 = *(_DWORD *)(v16 + v31 * 8 - 8);
        *(void *)(v32 - 24) = v14[v31 - 3];
        uint64_t v36 = *(void *)(v16 + v31 * 8 - 16);
        *(_DWORD *)(v32 - 16) = v14[v31 - 2];
        *(_DWORD *)(v32 - 12) = *((_DWORD *)&v14[v31 - 1] - 1);
        *(_DWORD *)(v32 - 8) = v14[v31 - 1];
        *(v33 - 3) = v34;
        *(v33 - 2) = v36;
        *((_DWORD *)v33 - 2) = v35;
        v31 -= 3;
      }
      while (v16 + v31 * 8 > (unint64_t)v5);
      uint64_t v14 = (uint64_t *)((char *)v14 + v31 * 8);
    }
    while (v17 < (uint64_t *)v4)
    {
      uint64_t v37 = *v17;
      int v38 = *((_DWORD *)v17 + 4);
      *unint64_t v17 = *v15;
      uint64_t v39 = v17[1];
      *((_DWORD *)v17 + 2) = *((_DWORD *)v15 + 2);
      *((_DWORD *)v17 + 3) = *((_DWORD *)v15 + 3);
      *((_DWORD *)v17 + 4) = *((_DWORD *)v15 + 4);
      uint64_t *v15 = v37;
      v15[1] = v39;
      *((_DWORD *)v15 + 4) = v38;
      v15 += 3;
      v17 += 3;
    }
    uint64_t v40 = (char *)v14 - (char *)v5;
    int64_t v41 = 0xAAAAAAAAAAAAAAABLL * (v14 - v5);
    uint64_t v42 = (char *)v15 - (char *)v14;
    int64_t v43 = 0xAAAAAAAAAAAAAAABLL * (v15 - v14);
    if (v41 <= v43)
    {
      uint64_t v44 = v4 - (char *)v15;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((v4 - (char *)v15) >> 3)) <= v43)
      {
        if (v40 == 24)
        {
          ++result;
        }
        else if (v40 >= 25)
        {
          result += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Key *>(v5, v14, a3);
        }
        if (v44 == 24)
        {
          ++result;
        }
        else if (v44 >= 25)
        {
          result += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Key *>(v15, v4, a3);
        }
        if (v42 == 24)
        {
          ++result;
        }
        else if (v42 >= 25)
        {
          if (v13 == -1)
          {
            ++result;
            uint64_t v5 = v15;
            goto LABEL_80;
          }
          ++a3;
        }
        uint64_t v5 = v14;
LABEL_80:
        unint64_t v4 = (char *)v15;
        goto LABEL_81;
      }
    }
    if (v42 == 24) {
      goto LABEL_51;
    }
    if (v42 >= 25)
    {
      if (v13 == -1) {
LABEL_51:
      }
        ++result;
      else {
        result += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Key *>(v14, v15, a3 + 1);
      }
    }
    uint64_t v45 = v4 - (char *)v15;
    if (v41 >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * ((v4 - (char *)v15) >> 3)))
    {
      if (v45 == 24)
      {
        ++result;
      }
      else if (v45 >= 25)
      {
        result += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Key *>(v15, v4, a3);
      }
      unint64_t v4 = (char *)v14;
    }
    else
    {
      if (v40 == 24)
      {
        ++result;
      }
      else if (v40 >= 25)
      {
        result += marisa::grimoire::algorithm::details::sort<marisa::grimoire::trie::Key *>(v5, v14, a3);
      }
      uint64_t v5 = v15;
    }
LABEL_81:
    uint64_t v6 = v4 - (char *)v5;
  }
  while (v4 - (char *)v5 > 240);
LABEL_85:
  if (v6 >= 25)
  {
    uint64_t v46 = v5 + 3;
    uint64_t v47 = 1;
    while (v46 < (uint64_t *)v4)
    {
      if (v46 > v5)
      {
        char v48 = v46;
        while (1)
        {
          unint64_t v49 = *((unsigned int *)v48 - 4);
          uint64_t v50 = *((unsigned int *)v48 + 2);
          if (a3 >= v49)
          {
LABEL_95:
            if (v49 == v50) {
              break;
            }
            if (v49 < v50)
            {
LABEL_100:
              int v54 = -1;
              goto LABEL_102;
            }
            uint64_t v51 = *(v48 - 3);
            uint64_t v52 = *v48;
          }
          else
          {
            uint64_t v51 = *(v48 - 3);
            uint64_t v52 = *v48;
            unint64_t v53 = a3;
            while (v50 != v53)
            {
              int v54 = *(unsigned __int8 *)(v51 + v53) - *(unsigned __int8 *)(v52 + v53);
              if (v54)
              {
                if (v54 < 1) {
                  goto LABEL_102;
                }
                break;
              }
              if (v49 == ++v53) {
                goto LABEL_95;
              }
            }
          }
          int v55 = *((_DWORD *)v48 - 2);
          *(v48 - 3) = v52;
          uint64_t v56 = v48[1];
          *((_DWORD *)v48 - 2) = *((_DWORD *)v48 + 4);
          uint64_t *v48 = v51;
          uint64_t v57 = *(v48 - 2);
          *(v48 - 2) = v56;
          v48[1] = v57;
          *((_DWORD *)v48 + 4) = v55;
          v48 -= 3;
          if (v48 <= v5) {
            goto LABEL_100;
          }
        }
      }
      int v54 = 0;
LABEL_102:
      if (v54) {
        ++v47;
      }
      v46 += 3;
    }
    result += v47;
  }
  return result;
}

double marisa::grimoire::trie::LoudsTrie::map_(marisa::grimoire::trie::LoudsTrie **this, marisa::grimoire::io::Mapper *a2)
{
  unint64_t v4 = this + 81;
  marisa::grimoire::vector::BitVector::map((marisa::grimoire::vector::BitVector *)this, a2);
  marisa::grimoire::vector::BitVector::map((marisa::grimoire::vector::BitVector *)(this + 26), a2);
  marisa::grimoire::vector::BitVector::map((marisa::grimoire::vector::BitVector *)(this + 52), a2);
  unint64_t v5 = *(void *)marisa::grimoire::io::Mapper::map_data(a2, 8uLL);
  uint64_t v6 = marisa::grimoire::io::Mapper::map_data(a2, v5);
  marisa::grimoire::io::Mapper::seek(a2, -(int)v5 & 7);
  long long v7 = 0uLL;
  int v8 = this[78];
  *((_OWORD *)this + 39) = 0u;
  this[80] = (marisa::grimoire::trie::LoudsTrie *)v6;
  *unint64_t v4 = v5;
  *((unsigned char *)this + 664) = 1;
  if (v8)
  {
    MEMORY[0x1D942B890](v8, 0x1000C8077774924);
    long long v7 = 0uLL;
  }
  *(_OWORD *)((char *)&v32[1] + 9) = v7;
  v32[0] = v7;
  v32[1] = v7;
  *(void *)&v33[0] = 0;
  DWORD2(v33[0]) = 0;
  *(void *)&v33[1] = 0;
  marisa::grimoire::vector::Vector<unsigned long long>::map((uint64_t)v32, a2);
  unint64_t v9 = (marisa::grimoire::trie::LoudsTrie *)*(unsigned int *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  if (v9 >= 0x21)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/flat-vector.h";
    exception[2] = 0xA00000086;
    exception[3] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/flat-vector.h:134: MARISA_FORMAT_ERROR: temp_value_size > 32";
  }
  int v10 = *(_DWORD *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  DWORD2(v33[0]) = v10;
  *(void *)&v33[1] = *(void *)marisa::grimoire::io::Mapper::map_data(a2, 8uLL);
  int v11 = *(marisa::grimoire::trie::LoudsTrie **)&v33[1];
  long long v12 = *((_OWORD *)this + 42);
  *((_OWORD *)this + 42) = v32[0];
  v32[0] = v12;
  int v13 = this[86];
  this[86] = *(marisa::grimoire::trie::LoudsTrie **)&v32[1];
  *(void *)&v32[1] = v13;
  long long v14 = v4[3];
  v4[3] = *(_OWORD *)((char *)&v32[1] + 8);
  *(_OWORD *)((char *)&v32[1] + 8) = v14;
  *((unsigned char *)this + 712) = BYTE8(v32[2]);
  this[90] = v9;
  *((_DWORD *)this + 182) = v10;
  this[92] = v11;
  if ((void)v12) {
    MEMORY[0x1D942B890](v12, 0x1000C8077774924);
  }
  memset(v32, 0, 41);
  memset(v33, 0, 41);
  long long v36 = 0u;
  memset(v37, 0, sizeof(v37));
  long long v38 = 0u;
  memset(v39, 0, sizeof(v39));
  v33[3] = 0u;
  long long v34 = 0u;
  memset(v35, 0, sizeof(v35));
  unint64_t v15 = *(void *)marisa::grimoire::io::Mapper::map_data(a2, 8uLL);
  uint64_t v16 = marisa::grimoire::io::Mapper::map_data(a2, v15);
  marisa::grimoire::io::Mapper::seek(a2, -(int)v15 & 7);
  v32[0] = 0uLL;
  *(void *)&v32[1] = v16;
  *(_OWORD *)((char *)&v32[1] + 8) = v15;
  BYTE8(v32[2]) = 1;
  marisa::grimoire::vector::BitVector::map((marisa::grimoire::vector::BitVector *)v33, a2);
  long long v17 = v4[6];
  v4[6] = v32[0];
  v32[0] = v17;
  unint64_t v18 = this[95];
  this[95] = *(marisa::grimoire::trie::LoudsTrie **)&v32[1];
  *(void *)&v32[1] = v18;
  long long v19 = *((_OWORD *)this + 48);
  *((_OWORD *)this + 48) = *(_OWORD *)((char *)&v32[1] + 8);
  *(_OWORD *)((char *)&v32[1] + 8) = v19;
  LOBYTE(v18) = *((unsigned char *)this + 784);
  *((unsigned char *)this + 784) = BYTE8(v32[2]);
  BYTE8(v32[2]) = (_BYTE)v18;
  marisa::grimoire::vector::BitVector::swap((marisa::grimoire::vector::BitVector *)(this + 99), (marisa::grimoire::vector::BitVector *)v33);
  if ((void)v38) {
    MEMORY[0x1D942B890](v38, 0x1000C8077774924);
  }
  if ((void)v36) {
    MEMORY[0x1D942B890](v36, 0x1000C8077774924);
  }
  if ((void)v34) {
    MEMORY[0x1D942B890](v34, 0x1000C8077774924);
  }
  if (*(void *)&v33[0]) {
    MEMORY[0x1D942B890](*(void *)&v33[0], 0x1000C8077774924);
  }
  if (*(void *)&v32[0]) {
    MEMORY[0x1D942B890](*(void *)&v32[0], 0x1000C8077774924);
  }
  if (this[59] && !this[96])
  {
    uint64_t v20 = this + 125;
    uint64_t v21 = (marisa::grimoire::trie::LoudsTrie *)operator new(0x470uLL, MEMORY[0x1E4FBA2D0]);
    if (v21)
    {
      uint64_t v22 = v21;
      marisa::grimoire::trie::LoudsTrie::LoudsTrie(v21);
      marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::reset(this + 125, v22);
    }
    else
    {
      *(void *)&v32[0] = *v20;
      float *v20 = 0;
      marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr((marisa::grimoire::trie::LoudsTrie **)v32);
    }
    if (!*v20)
    {
      uint64_t v30 = __cxa_allocate_exception(0x20uLL);
      void *v30 = &unk_1F2A081F8;
      v30[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/louds-trie.cc";
      v30[2] = 0x800000220;
      uint64_t v31 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/trie/louds-trie"
            ".cc:544: MARISA_MEMORY_ERROR: next_trie_.get() == NULL";
LABEL_29:
      v30[3] = v31;
    }
    marisa::grimoire::trie::LoudsTrie::map_(*v20, a2);
  }
  unint64_t v23 = (void *)marisa::grimoire::io::Mapper::map_data(a2, 8uLL);
  unint64_t v24 = *v23 / 0xCuLL;
  if (*v23 % 0xCuLL)
  {
    uint64_t v30 = __cxa_allocate_exception(0x20uLL);
    void *v30 = &unk_1F2A081F8;
    v30[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h";
    v30[2] = 0xA000000CALL;
    uint64_t v31 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/vector/vector.h:202: MARISA_FORMAT_ERROR: (total_size % sizeof(T)) != 0";
    goto LABEL_29;
  }
  uint64_t v25 = marisa::grimoire::io::Mapper::map_data(a2, 12 * v24);
  marisa::grimoire::io::Mapper::seek(a2, (-12 * (_BYTE)v24) & 4);
  uint64_t v26 = this[126];
  *((_OWORD *)this + 63) = 0u;
  this[128] = (marisa::grimoire::trie::LoudsTrie *)v25;
  v4[24] = v24;
  *((unsigned char *)this + 1048) = 1;
  if (v26)
  {
    MEMORY[0x1D942B890](v26, 0x1000C8077774924);
    unint64_t v24 = *((void *)v4 + 48);
  }
  this[132] = (marisa::grimoire::trie::LoudsTrie *)(v24 - 1);
  this[133] = (marisa::grimoire::trie::LoudsTrie *)*(unsigned int *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  unsigned int v27 = *(_DWORD *)marisa::grimoire::io::Mapper::map_data(a2, 4uLL);
  *(void *)&v32[0] = 3;
  *((void *)&v32[0] + 1) = 0x100000000200;
  LODWORD(v32[1]) = 0x20000;
  marisa::grimoire::trie::Config::parse_((uint64_t)v32, v27);
  this[134] = *(marisa::grimoire::trie::LoudsTrie **)&v32[0];
  double result = *((double *)v32 + 1);
  this[135] = (marisa::grimoire::trie::LoudsTrie *)*((void *)&v32[0] + 1);
  *((_DWORD *)this + 272) = v32[1];
  return result;
}

void sub_1D2D20F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t marisa::grimoire::trie::LoudsTrie::write_(marisa::grimoire::trie::LoudsTrie *this, marisa::grimoire::io::Writer *a2)
{
  marisa::grimoire::vector::BitVector::write_(this, a2);
  marisa::grimoire::vector::BitVector::write_((marisa::grimoire::trie::LoudsTrie *)((char *)this + 208), a2);
  marisa::grimoire::vector::BitVector::write_((marisa::grimoire::trie::LoudsTrie *)((char *)this + 416), a2);
  uint64_t __buf = *((void *)this + 81);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 8uLL);
  unint64_t v4 = (char *)*((void *)this + 80);
  size_t v5 = *((void *)this + 81);
  if (v4) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = v5 == 0;
  }
  if (!v6) {
    goto LABEL_14;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, v4, v5);
  marisa::grimoire::io::Writer::seek((uint64_t)a2, -*((_DWORD *)this + 162) & 7);
  marisa::grimoire::vector::Vector<unsigned long long>::write_((uint64_t)this + 672, a2);
  LODWORD(__buf) = *((void *)this + 90);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
  LODWORD(__buf) = *((_DWORD *)this + 182);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
  uint64_t __buf = *((void *)this + 92);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 8uLL);
  uint64_t __buf = *((void *)this + 96);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 8uLL);
  long long v7 = (char *)*((void *)this + 95);
  size_t v8 = *((void *)this + 96);
  if (!v7)
  {
    if (v8) {
      goto LABEL_14;
    }
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, v7, v8);
  marisa::grimoire::io::Writer::seek((uint64_t)a2, -*((_DWORD *)this + 192) & 7);
  marisa::grimoire::vector::BitVector::write_((marisa::grimoire::trie::LoudsTrie *)((char *)this + 792), a2);
  unint64_t v9 = (marisa::grimoire::trie::LoudsTrie *)*((void *)this + 125);
  if (v9) {
    marisa::grimoire::trie::LoudsTrie::write_(v9, a2);
  }
  uint64_t __buf = 12 * *((void *)this + 129);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 8uLL);
  int v10 = (char *)*((void *)this + 128);
  unint64_t v11 = *((void *)this + 129);
  if (!v10)
  {
    if (v11)
    {
LABEL_14:
      exception = __cxa_allocate_exception(0x20uLL);
      void *exception = &unk_1F2A081F8;
      exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
      exception[2] = 0x20000001ELL;
      long long v14 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:30: MARISA_NULL_ERROR: (objs == NULL) && (num_objs != 0)";
      goto LABEL_16;
    }
  }
  if (v11 >= 0x1555555555555556)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h";
    exception[2] = 0x700000020;
    long long v14 = "ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.h:32: MARISA_SIZE_ERROR: num_objs > (MARISA_SIZE_MAX / sizeof(T))";
LABEL_16:
    exception[3] = v14;
  }
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, v10, 12 * v11);
  marisa::grimoire::io::Writer::seek((uint64_t)a2, 4 * (*((_DWORD *)this + 258) & 1));
  LODWORD(__buf) = *((void *)this + 133);
  marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
  LODWORD(__buf) = *((_DWORD *)this + 271) | *((_DWORD *)this + 268) | *((_DWORD *)this + 272);
  return marisa::grimoire::io::Writer::write_data((uint64_t)a2, (char *)&__buf, 4uLL);
}

uint64_t marisa::grimoire::trie::LoudsTrie::match_(marisa::grimoire::trie::LoudsTrie *this, marisa::Agent *a2, unint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 5);
  long long v7 = (marisa::grimoire::trie::LoudsTrie *)((char *)this + 416);
  size_t v8 = (marisa::grimoire::trie::LoudsTrie *)((char *)this + 744);
  while (1)
  {
    while (1)
    {
      unint64_t v9 = *((void *)this + 132) & a3;
      uint64_t v10 = *((void *)this + 128);
      if (a3 == *(_DWORD *)(v10 + 12 * v9 + 4)) {
        break;
      }
      if ((*(void *)(*((void *)this + 54) + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3))
      {
        int v13 = (marisa::grimoire::trie::LoudsTrie *)*((void *)this + 125);
        int v14 = *(unsigned __int8 *)(*((void *)this + 80) + a3);
        uint64_t v15 = marisa::grimoire::vector::BitVector::rank1(v7, a3);
        uint64_t v16 = *((void *)this + 90);
        unint64_t v17 = (unint64_t)(v16 * v15) >> 6;
        uint64_t v18 = (v16 * v15) & 0x3F;
        unint64_t v19 = v18 + v16;
        uint64_t v20 = *((void *)this + 86);
        unint64_t v21 = *(void *)(v20 + 8 * v17);
        if (v13)
        {
          unint64_t v22 = v21 >> v18;
          if (v19 > 0x40) {
            v22 |= (2 * *(void *)(v20 + 8 * v17 + 8)) << (v18 ^ 0x3Fu);
          }
          if ((marisa::grimoire::trie::LoudsTrie::match_(v13, a2, v14 | ((*((_DWORD *)this + 182) & v22) << 8)) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v19 > 0x40) {
            uint64_t v25 = ((2 * *(void *)(v20 + 8 * v17 + 8)) << (v18 ^ 0x3Fu)) | (v21 >> v18);
          }
          else {
            uint64_t v25 = v21 >> v18;
          }
          if ((marisa::grimoire::trie::Tail::match(v8, a2, v14 | ((*((_DWORD *)this + 182) & v25) << 8)) & 1) == 0) {
            return 0;
          }
        }
      }
      else
      {
        uint64_t v24 = *(unsigned int *)(v6 + 100);
        if (*(unsigned __int8 *)(*((void *)this + 80) + a3) != *(unsigned __int8 *)(*(void *)a2 + v24)) {
          return 0;
        }
        *(_DWORD *)(v6 + 100) = v24 + 1;
      }
      if (a3 <= *((void *)this + 133)) {
        return 1;
      }
      if (*((void *)a2 + 1) <= (unint64_t)*(unsigned int *)(v6 + 100)) {
        return 0;
      }
      a3 = marisa::grimoire::vector::BitVector::select1(this, a3) + ~a3;
    }
    unint64_t v11 = *(unsigned int *)(v10 + 12 * v9 + 8);
    if (v11 <= 0xFFFFFEFF)
    {
      unint64_t v23 = (marisa::grimoire::trie::LoudsTrie *)*((void *)this + 125);
      if (v23)
      {
        if ((marisa::grimoire::trie::LoudsTrie::match_(v23, a2, v11) & 1) == 0) {
          return 0;
        }
      }
      else if ((marisa::grimoire::trie::Tail::match(v8, a2, v11) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      uint64_t v12 = *(unsigned int *)(v6 + 100);
      if (*(unsigned __int8 *)(*(void *)a2 + v12) != v11) {
        return 0;
      }
      *(_DWORD *)(v6 + 100) = v12 + 1;
    }
    a3 = *(unsigned int *)(*((void *)this + 128) + 12 * v9);
    if (!a3) {
      break;
    }
    if (*((void *)a2 + 1) <= (unint64_t)*(unsigned int *)(v6 + 100)) {
      return 0;
    }
  }
  return 1;
}

uint64_t *marisa::grimoire::trie::LoudsTrie::restore_(marisa::grimoire::trie::LoudsTrie *this, marisa::Agent *a2, unint64_t a3)
{
  uint64_t v6 = (uint64_t *)*((void *)a2 + 5);
  long long v7 = (marisa::grimoire::trie::LoudsTrie *)((char *)this + 416);
  size_t v8 = (uint64_t *)((char *)this + 744);
  while (1)
  {
    while (1)
    {
      unint64_t v9 = *((void *)this + 132) & a3;
      uint64_t v10 = *((void *)this + 128);
      if (a3 != *(_DWORD *)(v10 + 12 * v9 + 4)) {
        break;
      }
      uint64_t v11 = v10 + 12 * v9;
      unint64_t v12 = *(unsigned int *)(v11 + 8);
      if (v12 <= 0xFFFFFEFF)
      {
        unint64_t v23 = (marisa::grimoire::trie::LoudsTrie *)*((void *)this + 125);
        if (v23) {
          double result = (uint64_t *)marisa::grimoire::trie::LoudsTrie::restore_(v23, a2, v12);
        }
        else {
          double result = marisa::grimoire::trie::Tail::restore(v8, *((marisa::Agent **)a2 + 5), v12);
        }
      }
      else
      {
        char v27 = *(_DWORD *)(v11 + 8);
        double result = marisa::grimoire::vector::Vector<char>::push_back(v6, &v27);
      }
      a3 = *(unsigned int *)(*((void *)this + 128) + 12 * v9);
      if (!a3) {
        return result;
      }
    }
    if ((*(void *)(*((void *)this + 54) + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3))
    {
      int v14 = *(unsigned __int8 *)(*((void *)this + 80) + a3);
      uint64_t v15 = marisa::grimoire::vector::BitVector::rank1(v7, a3);
      uint64_t v16 = *((void *)this + 90);
      unint64_t v17 = (unint64_t)(v16 * v15) >> 6;
      uint64_t v18 = (v16 * v15) & 0x3F;
      unint64_t v19 = v18 + v16;
      uint64_t v20 = *((void *)this + 86);
      unint64_t v21 = *(void *)(v20 + 8 * v17);
      uint64_t v22 = v19 > 0x40
          ? ((2 * *(void *)(v20 + 8 * v17 + 8)) << (v18 ^ 0x3Fu)) | (v21 >> v18)
          : v21 >> v18;
      unint64_t v24 = v14 | ((*((_DWORD *)this + 182) & v22) << 8);
      uint64_t v25 = (marisa::grimoire::trie::LoudsTrie *)*((void *)this + 125);
      double result = v25
             ? (uint64_t *)marisa::grimoire::trie::LoudsTrie::restore_(v25, a2, v24)
             : marisa::grimoire::trie::Tail::restore(v8, *((marisa::Agent **)a2 + 5), v24);
    }
    else
    {
      char v26 = *(unsigned char *)(*((void *)this + 80) + a3);
      double result = marisa::grimoire::vector::Vector<char>::push_back(v6, &v26);
    }
    if (a3 <= *((void *)this + 133)) {
      break;
    }
    a3 = marisa::grimoire::vector::BitVector::select1(this, a3) + ~a3;
  }
  return result;
}

__n128 marisa::grimoire::vector::Vector<marisa::grimoire::trie::History>::push_back(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = a1[3];
  unint64_t v5 = a1[4];
  unint64_t v6 = v4 + 1;
  if (v5 < v4 + 1)
  {
    uint64_t v7 = 2 * v5;
    if (v5 > 0x666666666666666) {
      uint64_t v7 = 0xCCCCCCCCCCCCCCCLL;
    }
    if (v5 <= v6 >> 1) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v7;
    }
    marisa::grimoire::vector::Vector<marisa::grimoire::trie::History>::realloc(a1, v8);
    uint64_t v4 = a1[3];
  }
  unint64_t v9 = (__n128 *)(a1[1] + 20 * v4);
  __n128 result = *a2;
  v9[1].n128_u32[0] = a2[1].n128_u32[0];
  __n128 *v9 = result;
  ++a1[3];
  return result;
}

_DWORD *marisa::grimoire::vector::Vector<marisa::grimoire::trie::History>::realloc(uint64_t *a1, uint64_t a2)
{
  __n128 result = operator new[](20 * a2, MEMORY[0x1E4FBA2D0]);
  uint64_t v5 = a1[3];
  if (v5)
  {
    unint64_t v6 = (long long *)a1[1];
    uint64_t v7 = result;
    do
    {
      long long v8 = *v6;
      v7[4] = *((_DWORD *)v6 + 4);
      *(_OWORD *)uint64_t v7 = v8;
      v7 += 5;
      unint64_t v6 = (long long *)((char *)v6 + 20);
      --v5;
    }
    while (v5);
  }
  uint64_t v9 = *a1;
  *a1 = (uint64_t)result;
  a1[1] = (uint64_t)result;
  a1[2] = (uint64_t)result;
  a1[4] = a2;
  if (v9)
  {
    JUMPOUT(0x1D942B890);
  }
  return result;
}

uint64_t marisa::grimoire::trie::LoudsTrie::prefix_match_(marisa::grimoire::trie::LoudsTrie *this, marisa::Agent *a2, unint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 5);
  uint64_t v7 = (marisa::grimoire::trie::LoudsTrie *)((char *)this + 416);
  long long v8 = (marisa::grimoire::trie::LoudsTrie *)((char *)this + 744);
  while (1)
  {
    unint64_t v9 = *((void *)this + 132) & a3;
    uint64_t v10 = *((void *)this + 128);
    if (a3 != *(_DWORD *)(v10 + 12 * v9 + 4))
    {
      int v12 = *(unsigned __int8 *)(*((void *)this + 80) + a3);
      if ((*(void *)(*((void *)this + 54) + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3))
      {
        uint64_t v13 = marisa::grimoire::vector::BitVector::rank1(v7, a3);
        uint64_t v14 = *((void *)this + 90);
        unint64_t v15 = (unint64_t)(v14 * v13) >> 6;
        uint64_t v16 = (v14 * v13) & 0x3F;
        unint64_t v17 = v16 + v14;
        uint64_t v18 = *((void *)this + 86);
        unint64_t v19 = *(void *)(v18 + 8 * v15);
        if (v17 > 0x40) {
          uint64_t v20 = ((2 * *(void *)(v18 + 8 * v15 + 8)) << (v16 ^ 0x3Fu)) | (v19 >> v16);
        }
        else {
          uint64_t v20 = v19 >> v16;
        }
        unint64_t v22 = v12 | ((*((_DWORD *)this + 182) & v20) << 8);
        unint64_t v23 = (marisa::grimoire::trie::LoudsTrie *)*((void *)this + 125);
        if (v23)
        {
          if ((marisa::grimoire::trie::LoudsTrie::prefix_match_(v23, a2, v22) & 1) == 0) {
            return 0;
          }
        }
        else if (!marisa::grimoire::trie::Tail::prefix_match(v8, a2, v22))
        {
          return 0;
        }
      }
      else
      {
        if (v12 != *(unsigned __int8 *)(*(void *)a2 + *(unsigned int *)(v6 + 100))) {
          return 0;
        }
        char v25 = *(unsigned char *)(*((void *)this + 80) + a3);
        marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, &v25);
        ++*(_DWORD *)(v6 + 100);
      }
      if (a3 <= *((void *)this + 133)) {
        return 1;
      }
      a3 = marisa::grimoire::vector::BitVector::select1(this, a3) + ~a3;
      goto LABEL_23;
    }
    unint64_t v11 = *(unsigned int *)(v10 + 12 * v9 + 8);
    if (v11 > 0xFFFFFEFF)
    {
      if (*(unsigned __int8 *)(*(void *)a2 + *(unsigned int *)(v6 + 100)) != v11) {
        return 0;
      }
      char v26 = *(_DWORD *)(v10 + 12 * v9 + 8);
      marisa::grimoire::vector::Vector<char>::push_back((uint64_t *)v6, &v26);
      ++*(_DWORD *)(v6 + 100);
      goto LABEL_22;
    }
    unint64_t v21 = (marisa::grimoire::trie::LoudsTrie *)*((void *)this + 125);
    if (!v21) {
      break;
    }
    if ((marisa::grimoire::trie::LoudsTrie::prefix_match_(v21, a2, v11) & 1) == 0) {
      return 0;
    }
LABEL_22:
    a3 = *(unsigned int *)(*((void *)this + 128) + 12 * v9);
    if (!a3) {
      return 1;
    }
LABEL_23:
    if (*((void *)a2 + 1) <= (unint64_t)*(unsigned int *)(v6 + 100))
    {
      marisa::grimoire::trie::LoudsTrie::restore_(this, a2, a3);
      return 1;
    }
  }
  if (marisa::grimoire::trie::Tail::prefix_match(v8, a2, v11)) {
    goto LABEL_22;
  }
  return 0;
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v107[2] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[9]);
  uint64_t v7 = (void *)(a3 + 8);
  if ((void *)(a3 + 8) == v6) {
    long long v8 = 0;
  }
  else {
    long long v8 = (unsigned __int16 *)(v6 + 13);
  }
  unsigned int Case = morphun::grammar::synthesis::FiGrammarSynthesizer::getCase(v8);
  uint64_t v10 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[8]);
  if (v7 == v10) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = (unsigned __int16 *)(v10 + 13);
  }
  unsigned int Count = morphun::grammar::synthesis::FiGrammarSynthesizer::getCount(v11);
  uint64_t v13 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[11]);
  BOOL v14 = v7 == v13;
  if (v7 == v13) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = (unsigned __int16 *)(v13 + 13);
  }
  if (v14)
  {
    uint64_t v16 = std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>(a3, a1[10]);
    if (v7 == v16) {
      unint64_t v15 = 0;
    }
    else {
      unint64_t v15 = (unsigned __int16 *)(v16 + 13);
    }
  }
  int PronounPerson = morphun::grammar::synthesis::FiGrammarSynthesizer::getPronounPerson(v15);
  memset(&v106, 0, sizeof(v106));
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18 == *(void *)(a2 + 16))
  {
    std::basic_string<char16_t>::size_type size = 0;
    unsigned int v20 = 0;
  }
  else
  {
    unint64_t v19 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v18 + 24))(v18);
    std::basic_string<char16_t>::operator=(&v106, v19);
    unsigned int v20 = HIBYTE(v106.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t>::size_type size = v106.__r_.__value_.__l.__size_;
  }
  memset(&v105, 0, sizeof(v105));
  if ((v20 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type size = v20;
  }
  if (!size || !(Case | Count)) {
LABEL_174:
  }
    operator new();
  if (Case <= 1) {
    uint64_t v22 = 1;
  }
  else {
    uint64_t v22 = Case;
  }
  if (Count <= 1) {
    uint64_t v23 = 1;
  }
  else {
    uint64_t v23 = Count;
  }
  unint64_t v24 = &v106;
  if ((v20 & 0x80u) != 0) {
    unint64_t v24 = (std::basic_string<char16_t> *)v106.__r_.__value_.__r.__words[0];
  }
  char v25 = (char *)v24;
  while (*(_WORD *)v25 != 32)
  {
    v25 += 2;
    if (!--size) {
      goto LABEL_166;
    }
  }
  if (v25 - (char *)v24 == -2) {
    goto LABEL_166;
  }
  {
    operator new();
  }
  if (!morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::NUMBER_AND_UNIT(void)::NUMBER_AND_UNIT_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  icu4cxx::RegularExpression::RegularExpression((icu4cxx::RegularExpression *)regexp, *(const icu4cxx::RegularExpression **)morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::NUMBER_AND_UNIT(void)::NUMBER_AND_UNIT_);
  if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v26 = &v106;
  }
  else {
    char v26 = (std::basic_string<char16_t> *)v106.__r_.__value_.__r.__words[0];
  }
  LODWORD(status.__r_.__value_.__l.__data_) = 0;
  if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int32_t v27 = HIBYTE(v106.__r_.__value_.__r.__words[2]);
  }
  else {
    int32_t v27 = v106.__r_.__value_.__r.__words[1];
  }
  uregex_setText(regexp[0], (const UChar *)v26, v27, (UErrorCode *)&status);
  UErrorCode data = (UErrorCode)status.__r_.__value_.__l.__data_;
  if (SLODWORD(status.__r_.__value_.__l.__data_) >= 1
    || (LODWORD(status.__r_.__value_.__l.__data_) = 0,
        int v29 = uregex_matches(regexp[0], 0, (UErrorCode *)&status),
        UErrorCode data = (UErrorCode)status.__r_.__value_.__l.__data_,
        SLODWORD(status.__r_.__value_.__l.__data_) >= 1))
  {
    uint64_t v86 = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(v86, data);
  }
  if (v29)
  {
    if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v30 = HIBYTE(v106.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v30 = v106.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::resize(&v105, v30, 0);
    if ((v105.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v31 = &v105;
    }
    else {
      uint64_t v31 = (std::basic_string<char16_t> *)v105.__r_.__value_.__r.__words[0];
    }
    if ((v105.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int32_t v32 = HIBYTE(v105.__r_.__value_.__r.__words[2]);
    }
    else {
      int32_t v32 = v105.__r_.__value_.__r.__words[1];
    }
    int v33 = icu4cxx::RegularExpression::group(regexp[0], 1, (unsigned __int16 *)v31, v32);
    std::basic_string<char16_t>::resize(&v105, v33, 0);
    memset(&status, 0, sizeof(status));
    if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v34 = HIBYTE(v106.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v34 = v106.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::resize(&status, v34, 0);
    if ((status.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_std::basic_string<char16_t> status = &status;
    }
    else {
      p_std::basic_string<char16_t> status = (std::basic_string<char16_t> *)status.__r_.__value_.__r.__words[0];
    }
    if ((status.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int32_t v36 = HIBYTE(status.__r_.__value_.__r.__words[2]);
    }
    else {
      int32_t v36 = status.__r_.__value_.__r.__words[1];
    }
    int v37 = icu4cxx::RegularExpression::group(regexp[0], 2, (unsigned __int16 *)p_status, v36);
    std::basic_string<char16_t>::resize(&status, v37, 0);
    morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString((uint64_t)&__dst, a1, (uint64_t)&status, v22, v23, PronounPerson);
    int v38 = SHIBYTE(v103);
    uint64_t v39 = __dst;
    if (v103 >= 0) {
      p_dst = (const std::basic_string<char16_t>::value_type *)&__dst;
    }
    else {
      p_dst = (const std::basic_string<char16_t>::value_type *)__dst;
    }
    if (v103 >= 0) {
      std::basic_string<char16_t>::size_type v41 = HIBYTE(v103);
    }
    else {
      std::basic_string<char16_t>::size_type v41 = v102;
    }
    std::basic_string<char16_t>::append(&v105, p_dst, v41);
    if (v38 < 0) {
      operator delete(v39);
    }
    if ((SHIBYTE(status.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_162:
      icu4cxx::RegularExpression::~RegularExpression(regexp);
      LOBYTE(v80) = *((unsigned char *)&v105.__r_.__value_.__s + 23);
      std::basic_string<char16_t>::size_type v81 = v105.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::size_type v82 = HIBYTE(v105.__r_.__value_.__r.__words[2]);
      if ((v105.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v83 = HIBYTE(v105.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v83 = v105.__r_.__value_.__l.__size_;
      }
      if (v83)
      {
LABEL_169:
        if ((v80 & 0x80u) == 0) {
          std::basic_string<char16_t>::size_type v84 = v82;
        }
        else {
          std::basic_string<char16_t>::size_type v84 = v81;
        }
        if (v84) {
          operator new();
        }
        goto LABEL_174;
      }
LABEL_166:
      morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString((uint64_t)&status, a1, (uint64_t)&v106, v22, v23, PronounPerson);
      if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v105.__r_.__value_.__l.__data_);
      }
      std::basic_string<char16_t> v105 = status;
      std::basic_string<char16_t>::size_type v80 = HIBYTE(status.__r_.__value_.__r.__words[2]);
      std::basic_string<char16_t>::size_type v81 = status.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::size_type v82 = HIBYTE(status.__r_.__value_.__r.__words[2]);
      goto LABEL_169;
    }
    uint64_t v42 = (char *)status.__r_.__value_.__r.__words[0];
LABEL_161:
    operator delete(v42);
    goto LABEL_162;
  }
  unsigned int v87 = v23;
  unsigned int v88 = v22;
  if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int64_t v43 = &v106;
  }
  else {
    int64_t v43 = (std::basic_string<char16_t> *)v106.__r_.__value_.__r.__words[0];
  }
  if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v44 = HIBYTE(v106.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v44 = v106.__r_.__value_.__l.__size_;
  }
  uint64_t v45 = morphun::util::StringViewUtils::trim((uint64_t)v43, v44);
  *(_OWORD *)&status.__r_.__value_.__l.__data_ = 0uLL;
  status.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)&word_1D2ED0D7C;
  uint64_t v96 = 1;
  uint64_t v97 = v45;
  uint64_t v98 = v46;
  int v99 = v46;
  int v100 = 0;
  if ((int)v46 >= 1) {
    morphun::util::DelimitedStringIterator::getNext((UChar *)&status);
  }
  uint64_t v47 = 0;
  char v48 = 0;
  unint64_t v49 = 0;
  while (1)
  {
    std::basic_string<char16_t>::size_type v50 = status.__r_.__value_.__l.__size_;
    if (v100 >= v99 && status.__r_.__value_.__l.__size_ == 0) {
      break;
    }
    if (status.__r_.__value_.__l.__size_)
    {
      std::basic_string<char16_t>::size_type v52 = status.__r_.__value_.__r.__words[0];
      if ((unint64_t)v48 >= v49)
      {
        uint64_t v53 = (v48 - v47) >> 4;
        unint64_t v54 = v53 + 1;
        if ((unint64_t)(v53 + 1) >> 60) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if ((uint64_t)(v49 - (void)v47) >> 3 > v54) {
          unint64_t v54 = (uint64_t)(v49 - (void)v47) >> 3;
        }
        if (v49 - (unint64_t)v47 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v55 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v55 = v54;
        }
        if (v55) {
          unint64_t v55 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v55);
        }
        else {
          uint64_t v56 = 0;
        }
        uint64_t v57 = (std::basic_string<char16_t>::size_type *)(v55 + 16 * v53);
        *uint64_t v57 = v52;
        v57[1] = v50;
        if (v48 == v47)
        {
          float v59 = (char *)(v55 + 16 * v53);
        }
        else
        {
          unint64_t v58 = v55 + 16 * v53;
          do
          {
            float v59 = (char *)(v58 - 16);
            *(_OWORD *)(v58 - 16) = *((_OWORD *)v48 - 1);
            v48 -= 16;
            v58 -= 16;
          }
          while (v48 != v47);
        }
        unint64_t v49 = v55 + 16 * v56;
        char v48 = (char *)(v57 + 2);
        if (v47) {
          operator delete(v47);
        }
        uint64_t v47 = v59;
      }
      else
      {
        *(void *)char v48 = status.__r_.__value_.__r.__words[0];
        *((void *)v48 + 1) = v50;
        v48 += 16;
      }
    }
    morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&status);
  }
  if (v48 - v47 != 32)
  {
LABEL_159:
    uint64_t v23 = v87;
    uint64_t v22 = v88;
    if (!v47) {
      goto LABEL_162;
    }
    uint64_t v42 = v47;
    goto LABEL_161;
  }
  std::basic_string<char16_t>::size_type v60 = *((void *)v47 + 1);
  if (v60 > 0x7FFFFFFFFFFFFFF7) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v61 = *(const void **)v47;
  if (v60 >= 0xB)
  {
    uint64_t v63 = (v60 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((v60 | 3) != 0xB) {
      uint64_t v63 = v60 | 3;
    }
    uint64_t v62 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v63 + 1);
    status.__r_.__value_.__l.__size_ = v60;
    status.__r_.__value_.__r.__words[2] = v64 | 0x8000000000000000;
    status.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v62;
  }
  else
  {
    *((unsigned char *)&status.__r_.__value_.__s + 23) = *((void *)v47 + 1);
    uint64_t v62 = &status;
    if (!v60)
    {
LABEL_117:
      v62->__r_.__value_.__s.__data_[v60] = 0;
      unint64_t v65 = *((void *)v47 + 3);
      if (v65 > 0x7FFFFFFFFFFFFFF7) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v66 = (const void *)*((void *)v47 + 2);
      if (v65 >= 0xB)
      {
        uint64_t v68 = (v65 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((v65 | 3) != 0xB) {
          uint64_t v68 = v65 | 3;
        }
        uint64_t v67 = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v68 + 1);
        unint64_t v102 = v65;
        int64_t v103 = v69 | 0x8000000000000000;
        long long __dst = v67;
      }
      else
      {
        HIBYTE(v103) = *((void *)v47 + 3);
        uint64_t v67 = (void **)&__dst;
        if (!v65) {
          goto LABEL_125;
        }
      }
      memmove(v67, v66, 2 * v65);
LABEL_125:
      *((_WORD *)v67 + v65) = 0;
      uint64_t v93 = 0;
      uint64_t v94 = 0;
      if (v103 >= 0) {
        uint64_t v70 = (const UChar *)&__dst;
      }
      else {
        uint64_t v70 = (const UChar *)__dst;
      }
      if (v103 >= 0) {
        uint64_t v71 = HIBYTE(v103);
      }
      else {
        uint64_t v71 = v102;
      }
      if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[1], (uint64_t)&v94, v70, v71)
        || (a1[15] & v94) != 0)
      {
        long long v72 = (status.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? &status
            : (std::basic_string<char16_t> *)status.__r_.__value_.__r.__words[0];
        uint64_t v73 = (status.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? HIBYTE(status.__r_.__value_.__r.__words[2])
            : status.__r_.__value_.__l.__size_;
        if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[1], (uint64_t)&v93, (const UChar *)v72, v73)&& (a1[12] & v93) != 0)
        {
          morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString((uint64_t)&__p, a1, (uint64_t)&status, v88, v87, 0);
          std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v92, &__p, &word_1D2ED0D7C);
          morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString((uint64_t)v89, a1, (uint64_t)&__dst, v88, v87, PronounPerson);
          int v74 = (char)v90;
          uint64_t v75 = (void *)v89[0];
          if ((v90 & 0x80u) == 0) {
            uint64_t v76 = (const std::basic_string<char16_t>::value_type *)v89;
          }
          else {
            uint64_t v76 = (const std::basic_string<char16_t>::value_type *)v89[0];
          }
          if ((v90 & 0x80u) == 0) {
            std::basic_string<char16_t>::size_type v77 = v90;
          }
          else {
            std::basic_string<char16_t>::size_type v77 = v89[1];
          }
          std::basic_string<char16_t>::append(&v92, v76, v77);
          v107[0] = v92.__r_.__value_.__l.__size_;
          std::basic_string<char16_t>::size_type v78 = v92.__r_.__value_.__r.__words[0];
          *(void *)((char *)v107 + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&v92.__r_.__value_.__r.__words[1]
                                                                                    + 7);
          char v79 = HIBYTE(v92.__r_.__value_.__r.__words[2]);
          memset(&v92, 0, sizeof(v92));
          if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v105.__r_.__value_.__l.__data_);
          }
          v105.__r_.__value_.__r.__words[0] = v78;
          v105.__r_.__value_.__l.__size_ = v107[0];
          *(std::basic_string<char16_t>::size_type *)((char *)&v105.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v107 + 7);
          *((unsigned char *)&v105.__r_.__value_.__s + 23) = v79;
          if (v74 < 0) {
            operator delete(v75);
          }
          if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v92.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
      }
      if (SHIBYTE(v103) < 0) {
        operator delete(__dst);
      }
      if (SHIBYTE(status.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(status.__r_.__value_.__l.__data_);
      }
      goto LABEL_159;
    }
  }
  memmove(v62, v61, 2 * v60);
  goto LABEL_117;
}

void sub_1D2D22250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,char a43)
{
  MEMORY[0x1D942B8B0](v43, 0x1020C405F07FB98);
  if (*(char *)(v44 - 153) < 0) {
    operator delete(*(void **)(v44 - 176));
  }
  if (*(char *)(v44 - 121) < 0) {
    operator delete(*(void **)(v44 - 144));
  }
  _Unwind_Resume(a1);
}

uint64_t icu4cxx::RegularExpression::group(icu4cxx::RegularExpression *this, int32_t a2, unsigned __int16 *a3, int32_t a4)
{
  UErrorCode status = U_ZERO_ERROR;
  uint64_t result = uregex_group(this, a2, a3, a4, &status);
  UErrorCode v5 = status;
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    exception = (morphun::exception::ICUException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::ICUException::ICUException(exception, v5);
  }
  return result;
}

void sub_1D2D2245C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9 = a3;
  *((void *)&v71 + 1) = *MEMORY[0x1E4F143B8];
  uint64_t v65 = 0;
  uint64_t v12 = *(void *)(a3 + 8);
  if (*(char *)(a3 + 23) >= 0)
  {
    uint64_t v13 = *(unsigned __int8 *)(a3 + 23);
  }
  else
  {
    a3 = *(void *)a3;
    uint64_t v13 = v12;
  }
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a2[1], (uint64_t)&v65, (const UChar *)a3, v13)
    && (a2[15] & v65) == 0)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)v9;
      *(void *)(a1 + 16) = *(void *)(v9 + 16);
    }
  }
  else
  {
    if (a6)
    {
      BOOL hasBackVowels = morphun::grammar::synthesis::FiGrammarSynthesizer::hasBackVowels(v9);
      __p[0] = 0;
      __p[1] = 0;
      *(void *)&long long v59 = 0;
      if (a6 == 3)
      {
        if (hasBackVowels) {
          std::basic_string<char16_t>::size_type v30 = L"nsa";
        }
        else {
          std::basic_string<char16_t>::size_type v30 = aNs_0;
        }
        std::basic_string<char16_t>::__assign_external((std::basic_string<char16_t> *)__p, v30);
      }
      else if (a6 == 2)
      {
        BYTE7(v59) = 2;
        LODWORD(__p[0]) = 6881395;
        WORD2(__p[0]) = 0;
      }
      if (a4 == 1 || a4 == 2 && a5 == 1)
      {
        morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString(&__str, a2, v9, 10, 1, 0);
        uint64_t v32 = BYTE7(__str_16);
        int v33 = SBYTE7(__str_16);
        if (SBYTE7(__str_16) < 0) {
          uint64_t v32 = *((void *)&__str + 1);
        }
        std::basic_string<char16_t>::basic_string(&v64, (const std::basic_string<char16_t> *)&__str, 0, v32 - 2, v31);
        if ((SBYTE7(v59) & 0x80u) == 0) {
          std::basic_string<char16_t>::size_type v34 = __p;
        }
        else {
          std::basic_string<char16_t>::size_type v34 = (void **)__p[0];
        }
        if ((SBYTE7(v59) & 0x80u) == 0) {
          std::basic_string<char16_t>::size_type v35 = BYTE7(v59);
        }
        else {
          std::basic_string<char16_t>::size_type v35 = (std::basic_string<char16_t>::size_type)__p[1];
        }
      }
      else
      {
        BOOL v37 = a4 == 2 && a5 == 2;
        if (a4 != 6 && !v37)
        {
          if (a4 != 11)
          {
            morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString(&__str, a2, v9, a4, a5, 0);
            if ((SBYTE7(v59) & 0x80u) == 0) {
              uint64_t v44 = __p;
            }
            else {
              uint64_t v44 = (void **)__p[0];
            }
            if ((SBYTE7(v59) & 0x80u) == 0) {
              std::basic_string<char16_t>::size_type v45 = BYTE7(v59);
            }
            else {
              std::basic_string<char16_t>::size_type v45 = (std::basic_string<char16_t>::size_type)__p[1];
            }
            std::basic_string<char16_t>::append((std::basic_string<char16_t> *)&__str, (const std::basic_string<char16_t>::value_type *)v44, v45);
            *(_OWORD *)a1 = __str;
            *(void *)(a1 + 16) = __str_16;
            goto LABEL_61;
          }
          morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString(&__str, a2, v9, 11, a5, 0);
          uint64_t v39 = BYTE7(__str_16);
          int v33 = SBYTE7(__str_16);
          if (SBYTE7(__str_16) < 0) {
            uint64_t v39 = *((void *)&__str + 1);
          }
          std::basic_string<char16_t>::basic_string(&v63, (const std::basic_string<char16_t> *)&__str, 0, v39 - 1, v38);
          std::basic_string<char16_t>::append(&v63, word_1D2ED0598, 1uLL);
          std::basic_string<char16_t> v64 = v63;
          memset(&v63, 0, sizeof(v63));
          if ((SBYTE7(v59) & 0x80u) == 0) {
            uint64_t v40 = __p;
          }
          else {
            uint64_t v40 = (void **)__p[0];
          }
          if ((SBYTE7(v59) & 0x80u) == 0) {
            std::basic_string<char16_t>::size_type v41 = BYTE7(v59);
          }
          else {
            std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t>::size_type)__p[1];
          }
          std::basic_string<char16_t>::append(&v64, (const std::basic_string<char16_t>::value_type *)v40, v41);
          *(std::basic_string<char16_t> *)a1 = v64;
          memset(&v64, 0, sizeof(v64));
          if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v63.__r_.__value_.__l.__data_);
          }
LABEL_59:
          if (v33 < 0) {
            operator delete((void *)__str);
          }
LABEL_61:
          if (SBYTE7(v59) < 0) {
            operator delete(__p[0]);
          }
          return;
        }
        morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString(&__str, a2, v9, a4, a5, 0);
        uint64_t v43 = BYTE7(__str_16);
        int v33 = SBYTE7(__str_16);
        if (SBYTE7(__str_16) < 0) {
          uint64_t v43 = *((void *)&__str + 1);
        }
        std::basic_string<char16_t>::basic_string(&v64, (const std::basic_string<char16_t> *)&__str, 0, v43 - 1, v42);
        if ((SBYTE7(v59) & 0x80u) == 0) {
          std::basic_string<char16_t>::size_type v34 = __p;
        }
        else {
          std::basic_string<char16_t>::size_type v34 = (void **)__p[0];
        }
        if ((SBYTE7(v59) & 0x80u) == 0) {
          std::basic_string<char16_t>::size_type v35 = BYTE7(v59);
        }
        else {
          std::basic_string<char16_t>::size_type v35 = (std::basic_string<char16_t>::size_type)__p[1];
        }
      }
      std::basic_string<char16_t>::append(&v64, (const std::basic_string<char16_t>::value_type *)v34, v35);
      *(std::basic_string<char16_t> *)a1 = v64;
      goto LABEL_59;
    }
    int v15 = *(char *)(v9 + 23);
    if (v15 >= 0) {
      uint64_t v16 = (const std::basic_string<char16_t>::value_type *)v9;
    }
    else {
      uint64_t v16 = *(const std::basic_string<char16_t>::value_type **)v9;
    }
    if (v15 >= 0) {
      uint64_t v17 = *(unsigned __int8 *)(v9 + 23);
    }
    else {
      uint64_t v17 = *(void *)(v9 + 8);
    }
    morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[1], (const UChar *)v16, v17, (unsigned __int16 *)"i", 0xAuLL, (uint64_t *)&v64);
    std::basic_string<char16_t>::size_type size = v64.__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::size_type v19 = v64.__r_.__value_.__r.__words[0];
    if (v64.__r_.__value_.__r.__words[0] == v64.__r_.__value_.__l.__size_)
    {
      uint64_t v21 = a2[3];
      if (!v21
        || (uint64_t v22 = (const morphun::TokenChain *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v21 + 24))(v21, v9)) == 0)
      {
        exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(exception);
      }
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getSignificantWords((morphun::grammar::synthesis::GrammarSynthesizerUtil *)__p, v22);
      uint64_t v23 = __p[1];
      if (__p[0] != __p[1])
      {
        if (morphun::util::gLogLevel <= 1)
        {
          std::operator+<char16_t>((uint64_t)&v62, L"No inflect type for ", (const void **)v9);
          std::basic_string<char16_t>::append(&v62, (const std::basic_string<char16_t>::value_type *)".", 0x28uLL);
          std::basic_string<char16_t> v63 = v62;
          memset(&v62, 0, sizeof(v62));
          int v24 = *((char *)__p[1] - 1);
          if (v24 >= 0) {
            char v25 = (const std::basic_string<char16_t>::value_type *)((char *)__p[1] - 24);
          }
          else {
            char v25 = (const std::basic_string<char16_t>::value_type *)*((void *)__p[1] - 3);
          }
          if (v24 >= 0) {
            std::basic_string<char16_t>::size_type v26 = *((unsigned __int8 *)__p[1] - 1);
          }
          else {
            std::basic_string<char16_t>::size_type v26 = *((void *)__p[1] - 2);
          }
          std::basic_string<char16_t>::append(&v63, v25, v26);
          long long __str = *(_OWORD *)&v63.__r_.__value_.__l.__data_;
          *(void *)&long long __str_16 = *((void *)&v63.__r_.__value_.__l + 2);
          memset(&v63, 0, sizeof(v63));
          if (morphun::util::gLogLevel <= 1)
          {
            if ((SBYTE7(__str_16) & 0x80u) == 0) {
              p_str = &__str;
            }
            else {
              p_str = (long long *)__str;
            }
            morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_str);
          }
          if (SBYTE7(__str_16) < 0) {
            operator delete((void *)__str);
          }
          if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v63.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v62.__r_.__value_.__l.__data_);
          }
          uint64_t v23 = __p[1];
        }
        if (*((char *)v23 - 1) < 0)
        {
          uint64_t v28 = (const UChar *)*(v23 - 3);
          uint64_t v29 = *(v23 - 2);
        }
        else
        {
          uint64_t v28 = (const UChar *)(v23 - 3);
          uint64_t v29 = *((unsigned __int8 *)v23 - 1);
        }
        morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[1], v28, v29, (unsigned __int16 *)"i", 0xAuLL, (uint64_t *)&__str);
        std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)&v64);
        *(_OWORD *)&v64.__r_.__value_.__l.__data_ = __str;
        v64.__r_.__value_.__r.__words[2] = __str_16;
        *(void *)&long long __str_16 = 0;
        long long __str = 0uLL;
        v63.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v63);
      }
      *(void *)&long long __str = __p;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
      (*(void (**)(const morphun::TokenChain *))(*(void *)v22 + 16))(v22);
      std::basic_string<char16_t>::size_type size = v64.__r_.__value_.__l.__size_;
      std::basic_string<char16_t>::size_type v19 = v64.__r_.__value_.__r.__words[0];
    }
    if (v19 == size)
    {
      morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::getBestMatchingKnownLemma((std::basic_string<char16_t> *)v9, (uint64_t)(a2 + 4), v18, (std::basic_string<char16_t> *)__p);
      if (morphun::util::gLogLevel <= 1)
      {
        std::operator+<char16_t>((uint64_t)&v62, L"No inflect type for ", (const void **)v9);
        std::basic_string<char16_t>::append(&v62, L". Approximating with ", 0x15uLL);
        std::basic_string<char16_t> v63 = v62;
        memset(&v62, 0, sizeof(v62));
        if ((SBYTE7(v59) & 0x80u) == 0) {
          uint64_t v46 = __p;
        }
        else {
          uint64_t v46 = (void **)__p[0];
        }
        if ((SBYTE7(v59) & 0x80u) == 0) {
          std::basic_string<char16_t>::size_type v47 = BYTE7(v59);
        }
        else {
          std::basic_string<char16_t>::size_type v47 = (std::basic_string<char16_t>::size_type)__p[1];
        }
        std::basic_string<char16_t>::append(&v63, (const std::basic_string<char16_t>::value_type *)v46, v47);
        long long __str = *(_OWORD *)&v63.__r_.__value_.__l.__data_;
        *(void *)&long long __str_16 = *((void *)&v63.__r_.__value_.__l + 2);
        memset(&v63, 0, sizeof(v63));
        if (morphun::util::gLogLevel <= 1)
        {
          if ((SBYTE7(__str_16) & 0x80u) == 0) {
            char v48 = &__str;
          }
          else {
            char v48 = (long long *)__str;
          }
          morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v48);
        }
        if (SBYTE7(__str_16) < 0) {
          operator delete((void *)__str);
        }
        if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v63.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v62.__r_.__value_.__l.__data_);
        }
      }
      if ((SBYTE7(v59) & 0x80u) == 0) {
        unint64_t v49 = __p;
      }
      else {
        unint64_t v49 = (void **)__p[0];
      }
      if ((SBYTE7(v59) & 0x80u) == 0) {
        uint64_t v50 = BYTE7(v59);
      }
      else {
        uint64_t v50 = (uint64_t)__p[1];
      }
      morphun::dictionary::DictionaryMetaData::getPropertyValues(a2[1], (const UChar *)v49, v50, (unsigned __int16 *)"i", 0xAuLL, (uint64_t *)&__str);
      std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)&v64);
      *(_OWORD *)&v64.__r_.__value_.__l.__data_ = __str;
      v64.__r_.__value_.__r.__words[2] = __str_16;
      *(void *)&long long __str_16 = 0;
      long long __str = 0uLL;
      v63.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v63);
      if (SBYTE7(v59) < 0) {
        operator delete(__p[0]);
      }
    }
    if (*(char *)(v9 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, *(const std::basic_string<char16_t>::value_type **)v9, *(void *)(v9 + 8));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)v9;
      *(void *)(a1 + 16) = *(void *)(v9 + 16);
    }
    uint64_t v51 = v64.__r_.__value_.__r.__words[0];
    if (v64.__r_.__value_.__r.__words[0] != v64.__r_.__value_.__l.__size_)
    {
      uint64_t v52 = a2[2];
      if (*(char *)(v64.__r_.__value_.__r.__words[0] + 23) < 0)
      {
        uint64_t v51 = *(void *)v64.__r_.__value_.__l.__data_;
        uint64_t v53 = *(void *)(v64.__r_.__value_.__r.__words[0] + 8);
      }
      else
      {
        LODWORD(v53) = *(unsigned __int8 *)(v64.__r_.__value_.__r.__words[0] + 23);
      }
      __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v52 + 248), v51, v53);
      morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&__str, v52 + 8, KeyId);
      *(_OWORD *)std::basic_string<char16_t> __p = __str;
      long long v59 = __str_16;
      long long v60 = v70;
      char v61 = 1;
      morphun::grammar::synthesis::FiGrammarSynthesizer::toString(a4, (std::basic_string<char16_t> *)&__str);
      morphun::grammar::synthesis::FiGrammarSynthesizer::toString(a5, (std::basic_string<char16_t> *)((char *)&__str_16 + 8));
      memset(&v62, 0, sizeof(v62));
      uint64_t v66 = &v62;
      char v67 = 0;
      v62.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
      v62.__r_.__value_.__l.__size_ = v62.__r_.__value_.__r.__words[0];
      v62.__r_.__value_.__r.__words[2] = v62.__r_.__value_.__r.__words[0] + 48;
      v62.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v62.__r_.__value_.__r.__words[2], &__str, &v71, (std::basic_string<char16_t> *)v62.__r_.__value_.__l.__data_);
      morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)&v63, (uint64_t)__p, (uint64_t *)&v62, 1);
      uint64_t v66 = &v62;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v66);
      for (uint64_t i = 0; i != -48; i -= 24)
      {
        if (*((char *)&v70 + i + 15) < 0) {
          operator delete(*(void **)((char *)&__str_16 + i + 8));
        }
      }
      uint64_t v56 = (void *)v63.__r_.__value_.__r.__words[0];
      if (v63.__r_.__value_.__r.__words[0] != v63.__r_.__value_.__l.__size_)
      {
        morphun::dictionary::Inflector_Inflection::inflect((std::basic_string<char16_t> *)&__str, (int *)v63.__r_.__value_.__l.__data_, (std::basic_string<char16_t> *)v9);
        if (*(char *)(a1 + 23) < 0) {
          operator delete(*(void **)a1);
        }
        *(_OWORD *)a1 = __str;
        *(void *)(a1 + 16) = __str_16;
      }
      if (v56) {
        operator delete(v56);
      }
    }
    __p[0] = &v64;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  }
}

void sub_1D2D22D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39)
{
  if (*(char *)(v40 - 105) < 0) {
    operator delete(*(void **)(v40 - 128));
  }
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  *(void *)(v40 - 128) = &a9;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v40 - 128));
  (*(void (**)(uint64_t))(*(void *)v39 + 16))(v39);
  a9 = &a32;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::~FiGrammarSynthesizer_FiDisplayFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction *this)
{
  morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::~FiGrammarSynthesizer_FiDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C670;
  *((void *)this + 4) = &off_1F2A0C6B8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*((void **)this + 6));
  unint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
}

void sub_1D2D230F4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::ArStemFilter::stem(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) >= 0) {
    return *(unsigned __int8 *)(a2 + 23);
  }
  else {
    return *(unsigned int *)(a2 + 8);
  }
}

void morphun::analysis::stemmer::ArStemFilter::~ArStemFilter(void **this)
{
  morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::~StemmableDictionaryLookupLemmaFilter(this, &off_1F2A07B80);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::stemmer::StemmableDictionaryLookupLemmaFilter::~StemmableDictionaryLookupLemmaFilter(this, &off_1F2A07B80);
}

uint64_t marisa::grimoire::io::Writer::seek(uint64_t this, size_t __nitems)
{
  __buf[2] = *MEMORY[0x1E4F143B8];
  if (!*(void *)this && *(_DWORD *)(this + 8) == -1 && !*(void *)(this + 16))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc";
    exception[2] = 0x100000044;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/write"
                   "r.cc:68: MARISA_STATE_ERROR: !is_open()";
  }
  if (__nitems)
  {
    __buf[0] = 0;
    __buf[1] = 0;
    return marisa::grimoire::io::Writer::write_data(this, (char *)__buf, __nitems);
  }
  return this;
}

uint64_t marisa::grimoire::io::Writer::write_data(uint64_t this, char *__buf, size_t __nitems)
{
  size_t v3 = __nitems;
  uint64_t v4 = __buf;
  uint64_t v5 = this;
  uint64_t v6 = *(FILE **)this;
  if (!*(void *)this && *(_DWORD *)(this + 8) == -1 && !*(void *)(this + 16))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc";
    exception[2] = 0x100000071;
    uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc:113: "
         "MARISA_STATE_ERROR: !is_open()";
    goto LABEL_20;
  }
  if (__nitems)
  {
    if (*(_DWORD *)(this + 8) != -1)
    {
      while (1)
      {
        size_t v7 = v3 >= 0x7FFFFFFFFFFFFFFFLL ? 0x7FFFFFFFFFFFFFFFLL : v3;
        this = write(*(_DWORD *)(v5 + 8), v4, v7);
        if (this <= 0) {
          break;
        }
        v4 += this;
        v3 -= this;
        if (!v3) {
          return this;
        }
      }
      exception = __cxa_allocate_exception(0x20uLL);
      void *exception = &unk_1F2A081F8;
      exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc";
      exception[2] = 0x900000081;
      uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc:129"
           ": MARISA_IO_ERROR: size_written <= 0";
LABEL_20:
      exception[3] = v9;
    }
    if (v6)
    {
      if (fwrite(__buf, 1uLL, __nitems, v6) != __nitems)
      {
        exception = __cxa_allocate_exception(0x20uLL);
        void *exception = &unk_1F2A081F8;
        exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc";
        exception[2] = 0x900000086;
        uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc:1"
             "34: MARISA_IO_ERROR: ::fwrite(data, 1, size, file_) != size";
        goto LABEL_20;
      }
      this = fflush(*(FILE **)v5);
      if (this)
      {
        exception = __cxa_allocate_exception(0x20uLL);
        void *exception = &unk_1F2A081F8;
        exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc";
        exception[2] = 0x900000087;
        uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc:1"
             "35: MARISA_IO_ERROR: ::fflush(file_) != 0";
        goto LABEL_20;
      }
    }
    else
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = std::ostream::write();
        if ((*(unsigned char *)(this + *(void *)(*(void *)this - 24) + 32) & 5) != 0)
        {
          uint64_t v10 = __cxa_allocate_exception(0x20uLL);
          *uint64_t v10 = &unk_1F2A081F8;
          v10[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/writer.cc";
          _OWORD v10[2] = 0x90000008BLL;
          v10[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/grimoire/io/write"
                   "r.cc:139: MARISA_IO_ERROR: !stream_->write(static_cast<const char *>(data), static_cast<std::streamsize>(size))";
        }
      }
    }
  }
  return this;
}

void sub_1D2D234C4()
{
}

void sub_1D2D23540()
{
}

uint64_t morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getDisplayValue(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((void *)&v215 + 1) = *MEMORY[0x1E4F143B8];
  memset(&v184, 0, sizeof(v184));
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5 == *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v9 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
  std::basic_string<char16_t>::operator=(&v184, v9);
  char v10 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
  std::basic_string<char16_t>::size_type size = v184.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v12 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
  if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v13 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v13 = v184.__r_.__value_.__l.__size_;
  }
  if (!v13) {
    goto LABEL_248;
  }
  if (!*(void *)(a3 + 16))
  {
LABEL_244:
    if (v10 < 0) {
      std::basic_string<char16_t>::size_type v12 = size;
    }
    if (v12) {
      operator new();
    }
LABEL_248:
    if (v10 < 0) {
      goto LABEL_249;
    }
    return 0;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v183, a3, a1[5]);
  if ((v183.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v14 = HIBYTE(v183.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v14 = v183.__r_.__value_.__l.__size_;
  }
  if (!v14) {
    goto LABEL_105;
  }
  int v15 = (v183.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
      ? &v183
      : (std::basic_string<char16_t> *)v183.__r_.__value_.__r.__words[0];
  if (!morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getSuffixMap((morphun::grammar::synthesis::DeGrammarSynthesizer *)a1, (unsigned __int16 *)v15, v14))goto LABEL_105; {
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v211, a3, a1[2]);
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v188, a3, a1[3]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__dst, a3, a1[4]);
  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t v16 = *(void *)(a2 + 16);
  if (v17 == v16)
  {
    if ((*((unsigned char *)&__dst.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_100;
    }
    goto LABEL_101;
  }
  int v168 = a4;
  uint64_t v18 = 0;
  if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v19 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v19 = v211.__r_.__value_.__l.__size_;
  }
  if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unsigned int v20 = &v211;
  }
  else {
    unsigned int v20 = (std::basic_string<char16_t> *)v211.__r_.__value_.__r.__words[0];
  }
  if ((v188.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v21 = HIBYTE(v188.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v21 = v188.__r_.__value_.__l.__size_;
  }
  if ((v188.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v22 = &v188;
  }
  else {
    uint64_t v22 = (std::basic_string<char16_t> *)v188.__r_.__value_.__r.__words[0];
  }
  char v166 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v23 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v23 = __dst.__r_.__value_.__l.__size_;
  }
  p_dst = &__dst;
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_dst = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
  }
  std::basic_string<char16_t> v171 = p_dst;
  std::basic_string<char16_t> v173 = v22;
  do
  {
    uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 40))(v17);
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100](&v199, v25);
    if (v19)
    {
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v187, (uint64_t)&v199, a1[2]);
      std::basic_string<char16_t>::size_type v26 = HIBYTE(v187.__r_.__value_.__r.__words[2]);
      if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v26 = v187.__r_.__value_.__l.__size_;
      }
      if (v19 == v26)
      {
        int32_t v27 = &v187;
        if ((v187.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int32_t v27 = (std::basic_string<char16_t> *)v187.__r_.__value_.__r.__words[0];
        }
        std::basic_string<char16_t>::size_type v28 = v19;
        uint64_t v29 = v20;
        while (v27->__r_.__value_.__s.__data_[0] == v29->__r_.__value_.__s.__data_[0])
        {
          uint64_t v29 = (std::basic_string<char16_t> *)((char *)v29 + 2);
          int32_t v27 = (std::basic_string<char16_t> *)((char *)v27 + 2);
          if (!--v28) {
            goto LABEL_43;
          }
        }
      }
      LOBYTE(v39) = 0;
      goto LABEL_71;
    }
LABEL_43:
    if (v21)
    {
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v186, (uint64_t)&v199, a1[3]);
      std::basic_string<char16_t>::size_type v30 = HIBYTE(v186.__r_.__value_.__r.__words[2]);
      if ((v186.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v30 = v186.__r_.__value_.__l.__size_;
      }
      if (v21 == v30)
      {
        uint64_t v31 = &v186;
        if ((v186.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v31 = (std::basic_string<char16_t> *)v186.__r_.__value_.__r.__words[0];
        }
        std::basic_string<char16_t>::size_type v32 = v21;
        int v33 = v173;
        while (v31->__r_.__value_.__s.__data_[0] == v33->__r_.__value_.__s.__data_[0])
        {
          int v33 = (std::basic_string<char16_t> *)((char *)v33 + 2);
          uint64_t v31 = (std::basic_string<char16_t> *)((char *)v31 + 2);
          if (!--v32) {
            goto LABEL_52;
          }
        }
      }
      BOOL v39 = 0;
      goto LABEL_69;
    }
LABEL_52:
    if (v23)
    {
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, (uint64_t)&v199, a1[4]);
      std::basic_string<char16_t>::size_type v34 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v34 = __p.__r_.__value_.__l.__size_;
      }
      if (v23 == v34)
      {
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        std::basic_string<char16_t>::size_type v36 = v23;
        BOOL v37 = v171;
        while (p_p->__r_.__value_.__s.__data_[0] == v37->__r_.__value_.__s.__data_[0])
        {
          BOOL v37 = (std::basic_string<char16_t> *)((char *)v37 + 2);
          p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
          if (!--v36) {
            goto LABEL_61;
          }
        }
      }
      BOOL v39 = 0;
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_67:
      }
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
LABEL_61:
      uint64_t v38 = a1[5];
      npc<morphun::dialog::SemanticFeature const>(v38);
      BOOL v39 = &v199.__r_.__value_.__r.__words[1] == std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)&v199, v38);
      if (v23 && (*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
        goto LABEL_67;
      }
    }
    if (!v21) {
      goto LABEL_70;
    }
LABEL_69:
    if ((SHIBYTE(v186.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_70:
      if (!v19) {
        goto LABEL_82;
      }
      goto LABEL_71;
    }
    operator delete(v186.__r_.__value_.__l.__data_);
    if (!v19)
    {
LABEL_82:
      if (v39) {
        goto LABEL_83;
      }
      goto LABEL_74;
    }
LABEL_71:
    if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v187.__r_.__value_.__l.__data_);
    }
    if (v39) {
LABEL_83:
    }
      operator new();
LABEL_74:
    uint64_t v40 = a1[1];
    npc<morphun::dialog::SemanticFeature const>(v40);
    std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t> *)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)&v199, v40);
    if (v18) {
      BOOL v42 = 1;
    }
    else {
      BOOL v42 = &v199.__r_.__value_.__r.__words[1] == (std::basic_string<char16_t>::size_type *)v41;
    }
    if (!v42) {
      uint64_t v18 = v17;
    }
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy((void **)v199.__r_.__value_.__l.__size_);
    v17 += 56;
  }
  while (v17 != v16);
  if (v18)
  {
    uint64_t v43 = a1[1];
    npc<morphun::dialog::SemanticFeature const>(v43);
    uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v18 + 32))(v18, v43);
    if (*(char *)(v44 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v199, *(const std::basic_string<char16_t>::value_type **)v44, *(void *)(v44 + 8));
    }
    else
    {
      long long v45 = *(_OWORD *)v44;
      v199.__r_.__value_.__r.__words[2] = *(void *)(v44 + 16);
      *(_OWORD *)&v199.__r_.__value_.__l.__data_ = v45;
    }
    std::basic_string<char16_t>::size_type v46 = HIBYTE(v199.__r_.__value_.__r.__words[2]);
    if ((v199.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v46 = v199.__r_.__value_.__l.__size_;
    }
    if (!v46)
    {
      std::basic_string<char16_t>::size_type v47 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v18 + 24))(v18);
      std::basic_string<char16_t>::operator=(&v199, v47);
    }
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v193, a3, a1[4]);
    morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getLookupDeclensionAdjective(&v195, a1, (uint64_t)&v199, a3, (unsigned __int16 *)&v193);
    if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v193.__r_.__value_.__l.__data_);
    }
    *(_OWORD *)&v193.__r_.__value_.__r.__words[1] = 0uLL;
    v193.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v193.__r_.__value_.__l.__size_;
    char v48 = *(void **)(*(uint64_t (**)(uint64_t))(*(void *)v18 + 40))(v18);
    uint64_t v49 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 40))(v18);
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *> *,long>>>((uint64_t)&v193, v48, (void *)(v49 + 8));
    std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *> *,long>>>((uint64_t)&v193, *(void **)a3, (void *)(a3 + 8));
    operator new();
  }
  a4 = v168;
  if (v166 < 0) {
LABEL_100:
  }
    operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_101:
  if (SHIBYTE(v188.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v188.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v211.__r_.__value_.__l.__data_);
  }
LABEL_105:
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v182, a3, a1[6]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v181, a3, a1[2]);
  if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v51 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v51 = v184.__r_.__value_.__l.__size_;
  }
  LOBYTE(__str.__r_.__value_.__l.__data_) = 0;
  char v180 = 0;
  uint64_t v52 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v50);
  uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
  int v54 = (char)v53;
  if ((v53 & 0x80u) != 0) {
    uint64_t v53 = *(void *)(v52 + 8);
  }
  std::basic_string<char16_t>::size_type v55 = HIBYTE(v181.__r_.__value_.__r.__words[2]);
  if ((v181.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v55 = v181.__r_.__value_.__l.__size_;
  }
  if (v53 != v55)
  {
LABEL_136:
    uint64_t v64 = a1[16];
    if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v65 = &v184;
    }
    else {
      uint64_t v65 = (std::basic_string<char16_t> *)v184.__r_.__value_.__r.__words[0];
    }
    if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v66 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v66 = v184.__r_.__value_.__l.__size_;
    }
    v211.__r_.__value_.__r.__words[0] = 0;
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v64, (uint64_t)&v211, (const UChar *)v65, v66))
    {
      memset(&v188, 0, sizeof(v188));
      morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectWord((uint64_t)&v211, (uint64_t)a1, (uint64_t)&v184, a3, (long long **)&v188, a4);
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v188;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
      if (LOBYTE(v212.__r_.__value_.__l.__data_))
      {
        std::optional<std::basic_string<char16_t>>::operator=[abi:ne180100]<std::basic_string<char16_t> const&,void>(&__str, &v211);
        if (LOBYTE(v212.__r_.__value_.__l.__data_))
        {
          if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v211.__r_.__value_.__l.__data_);
          }
        }
      }
      goto LABEL_229;
    }
    uint64_t v67 = a1[58];
    if (!v67
      || (uint64_t v68 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v67 + 24))(v67, &v184),
          (uint64_t v69 = v68) == 0))
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    uint64_t v70 = (*(uint64_t (**)(uint64_t))(*(void *)v68 + 56))(v68);
    uint64_t v71 = *(void *)(npc<morphun::Token>(v70) + 72);
    npc<morphun::Token>(v71);
    uint64_t v72 = *(unsigned __int8 *)(v71 + 39);
    if ((v72 & 0x80u) == 0) {
      uint64_t v73 = *(unsigned __int8 *)(v71 + 39);
    }
    else {
      uint64_t v73 = *(void *)(v71 + 24);
    }
    if (v73)
    {
      uint64_t v74 = v71;
      while (1)
      {
        int v75 = *(unsigned __int8 *)(v74 + 65);
        uint64_t v74 = *(void *)(v74 + 72);
        if (v75) {
          break;
        }
        if (!v74)
        {
          LOBYTE(v193.__r_.__value_.__l.__data_) = 0;
          char v194 = 0;
          LOBYTE(v191.__r_.__value_.__l.__data_) = 0;
          char v192 = 0;
          goto LABEL_188;
        }
      }
      LOBYTE(v193.__r_.__value_.__l.__data_) = 0;
      char v194 = 0;
      LOBYTE(v191.__r_.__value_.__l.__data_) = 0;
      char v192 = 0;
      if (v74 && *(unsigned char *)(v74 + 64))
      {
        uint64_t v197 = 0;
        uint64_t v198 = 0;
        if ((v72 & 0x80u) == 0) {
          uint64_t v76 = (const UChar *)(v71 + 16);
        }
        else {
          uint64_t v76 = *(const UChar **)(v71 + 16);
        }
        if ((v72 & 0x80u) == 0) {
          uint64_t v77 = v72;
        }
        else {
          uint64_t v77 = *(void *)(v71 + 24);
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[16], (uint64_t)&v198, v76, v77);
        int v78 = *(char *)(v74 + 39);
        if (v78 >= 0) {
          char v79 = (const UChar *)(v74 + 16);
        }
        else {
          char v79 = *(const UChar **)(v74 + 16);
        }
        if (v78 >= 0) {
          uint64_t v80 = *(unsigned __int8 *)(v74 + 39);
        }
        else {
          uint64_t v80 = *(void *)(v74 + 24);
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[16], (uint64_t)&v197, v79, v80);
        if ((a1[62] & v197) != 0 && (a1[60] & v198) != 0)
        {
          int v81 = *(char *)(v74 + 39);
          if (v81 >= 0) {
            std::basic_string<char16_t>::size_type v82 = (const UChar *)(v74 + 16);
          }
          else {
            std::basic_string<char16_t>::size_type v82 = *(const UChar **)(v74 + 16);
          }
          if (v81 >= 0) {
            std::basic_string<char16_t>::size_type v83 = *(unsigned __int8 *)(v74 + 39);
          }
          else {
            std::basic_string<char16_t>::size_type v83 = *(void *)(v74 + 24);
          }
          morphun::analysis::DictionaryExposableMorphology::getwordGrammemesets(&v195, (uint64_t)(a1 + 18), v82, v83);
          int v84 = *(char *)(v71 + 39);
          if (v84 >= 0) {
            unint64_t v85 = (const UChar *)(v71 + 16);
          }
          else {
            unint64_t v85 = *(const UChar **)(v71 + 16);
          }
          if (v84 >= 0) {
            std::basic_string<char16_t>::size_type v86 = *(unsigned __int8 *)(v71 + 39);
          }
          else {
            std::basic_string<char16_t>::size_type v86 = *(void *)(v71 + 24);
          }
          uint64_t v164 = v69;
          morphun::analysis::DictionaryExposableMorphology::getwordGrammemesets(&v208, (uint64_t)(a1 + 18), v85, v86);
          morphun::grammar::synthesis::filterGrammemesFromSetThatDontContainGrammeme((uint64_t)&v195, a1[62]);
          morphun::grammar::synthesis::filterGrammemesFromSetThatDontContainGrammeme((uint64_t)&v208, a1[60]);
          uint64_t v170 = a3;
          int v169 = a4;
          uint64_t v162 = v71 + 16;
          int64_t v167 = (morphun::analysis::MorphologicalAnalyzer *)(a1 + 18);
          uint64_t v163 = v71;
          if (morphun::util::gLogLevel < 1)
          {
            std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "\n");
            int v104 = *(char *)(v74 + 39);
            if (v104 >= 0) {
              std::basic_string<char16_t> v105 = (const std::basic_string<char16_t>::value_type *)(v74 + 16);
            }
            else {
              std::basic_string<char16_t> v105 = *(const std::basic_string<char16_t>::value_type **)(v74 + 16);
            }
            if (v104 >= 0) {
              std::basic_string<char16_t>::size_type v106 = *(unsigned __int8 *)(v74 + 39);
            }
            else {
              std::basic_string<char16_t>::size_type v106 = *(void *)(v74 + 24);
            }
            std::basic_string<char16_t>::append(&__dst, v105, v106);
            std::basic_string<char16_t> v211 = __dst;
            memset(&__dst, 0, sizeof(__dst));
            if (morphun::util::gLogLevel <= 0)
            {
              if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v107 = &v211;
              }
              else {
                uint64_t v107 = (std::basic_string<char16_t> *)v211.__r_.__value_.__r.__words[0];
              }
              morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v107);
            }
            if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v211.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
            std::basic_string<char16_t>::size_type v88 = v195.__r_.__value_.__l.__size_;
            std::basic_string<char16_t> v108 = (unint64_t *)v195.__r_.__value_.__r.__words[0];
            long long v172 = (uint64_t *)v195.__r_.__value_.__r.__words[0];
            if (v195.__r_.__value_.__r.__words[0] == v195.__r_.__value_.__l.__size_)
            {
              uint64_t v115 = (uint64_t *)v195.__r_.__value_.__r.__words[0];
              goto LABEL_318;
            }
            do
            {
              uint64_t v109 = a3;
              unint64_t v110 = *v108;
              uint64_t v111 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1[16] + 8));
              morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v111, v110, (uint64_t *)&v199);
              morphun::util::StringViewUtils::join(L",", 1uLL, &v199, (uint64_t)&__dst);
              std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)"\n", 1uLL);
              a3 = v109;
              std::basic_string<char16_t> v211 = __dst;
              memset(&__dst, 0, sizeof(__dst));
              if (morphun::util::gLogLevel <= 0)
              {
                if ((v211.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v112 = &v211;
                }
                else {
                  uint64_t v112 = (std::basic_string<char16_t> *)v211.__r_.__value_.__r.__words[0];
                }
                morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v112);
              }
              if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v211.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__dst.__r_.__value_.__l.__data_);
              }
              v207.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v199;
              std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v207);
              ++v108;
            }
            while (v108 != (unint64_t *)v88);
            unsigned int v87 = v172;
          }
          else
          {
            std::basic_string<char16_t>::size_type v88 = v195.__r_.__value_.__l.__size_;
            unsigned int v87 = (uint64_t *)v195.__r_.__value_.__r.__words[0];
          }
          long long v172 = v87;
          if (v87 == (uint64_t *)v88 || (long long v113 = v87 + 1, v87 + 1 == (uint64_t *)v88))
          {
            uint64_t v115 = v87;
          }
          else
          {
            uint64_t v114 = *v87;
            uint64_t v115 = v87;
            long long v116 = v87 + 1;
            do
            {
              uint64_t v118 = *v116++;
              uint64_t v117 = v118;
              if (morphun::analysis::MorphologicalAnalyzer::compareGrammemes(v167, v118, v114) < 0)
              {
                uint64_t v114 = v117;
                uint64_t v115 = v113;
              }
              long long v113 = v116;
            }
            while (v116 != (uint64_t *)v88);
          }
LABEL_318:
          std::basic_string<char16_t>::size_type v131 = v208.__r_.__value_.__l.__size_;
          std::basic_string<char16_t> v130 = (uint64_t *)v208.__r_.__value_.__r.__words[0];
          std::basic_string<char16_t>::size_type v132 = v208.__r_.__value_.__r.__words[0] + 8;
          BOOL v133 = v208.__r_.__value_.__r.__words[0] == v208.__r_.__value_.__l.__size_
              || v132 == v208.__r_.__value_.__l.__size_;
          std::basic_string<char16_t> v174 = (void *)v208.__r_.__value_.__r.__words[0];
          if (!v133)
          {
            std::basic_string<char16_t> v130 = (uint64_t *)v208.__r_.__value_.__r.__words[0];
            uint64_t v134 = *(void *)v208.__r_.__value_.__l.__data_;
            char v135 = (uint64_t *)(v208.__r_.__value_.__r.__words[0] + 8);
            do
            {
              uint64_t v137 = *v135++;
              uint64_t v136 = v137;
              if (morphun::analysis::MorphologicalAnalyzer::compareGrammemes(v167, v137, v134) < 0)
              {
                uint64_t v134 = v136;
                std::basic_string<char16_t> v130 = (uint64_t *)v132;
              }
              std::basic_string<char16_t>::size_type v132 = (std::basic_string<char16_t>::size_type)v135;
            }
            while (v135 != (uint64_t *)v131);
          }
          memset(&v207, 0, sizeof(v207));
          std::basic_string<char16_t>::size_type v138 = (uint64_t *)v131;
          uint64_t v71 = v163;
          uint64_t v69 = v164;
          if (v115 != (uint64_t *)v195.__r_.__value_.__l.__size_)
          {
            morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getFeatureNameFromConstraintsOrBinaryType((uint64_t)&v211, (uint64_t)a1, v170, *v115, a1[67], a1[2]);
            if (LOBYTE(v212.__r_.__value_.__l.__data_))
            {
              std::basic_string<char16_t>::size_type v139 = v207.__r_.__value_.__l.__size_;
              if (v207.__r_.__value_.__l.__size_ >= v207.__r_.__value_.__r.__words[2])
              {
                std::basic_string<char16_t>::size_type v141 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v207, (long long *)&v211);
                char v140 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
              }
              else
              {
                char v140 = HIBYTE(v211.__r_.__value_.__r.__words[2]);
                if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
                {
                  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v207.__r_.__value_.__l.__size_, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
                }
                else
                {
                  *(_OWORD *)v207.__r_.__value_.__l.__size_ = *(_OWORD *)&v211.__r_.__value_.__l.__data_;
                  *(void *)(v139 + 16) = *((void *)&v211.__r_.__value_.__l + 2);
                }
                std::basic_string<char16_t>::size_type v141 = v139 + 24;
              }
              v207.__r_.__value_.__l.__size_ = v141;
              if (v140 < 0) {
                operator delete(v211.__r_.__value_.__l.__data_);
              }
            }
          }
          if (v130 != v138)
          {
            morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getFeatureNameFromConstraintsOrBinaryType((uint64_t)&v211, (uint64_t)a1, v170, *v130, a1[63], a1[4]);
            int data_low = LOBYTE(v212.__r_.__value_.__l.__data_);
            if (LOBYTE(v212.__r_.__value_.__l.__data_))
            {
              std::basic_string<char16_t>::size_type v145 = v207.__r_.__value_.__l.__size_;
              if (v207.__r_.__value_.__l.__size_ >= v207.__r_.__value_.__r.__words[2])
              {
                std::basic_string<char16_t>::size_type v146 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v207, (long long *)&v211);
              }
              else
              {
                if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0)
                {
                  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v207.__r_.__value_.__l.__size_, v211.__r_.__value_.__l.__data_, v211.__r_.__value_.__l.__size_);
                }
                else
                {
                  *(_OWORD *)v207.__r_.__value_.__l.__size_ = *(_OWORD *)&v211.__r_.__value_.__l.__data_;
                  *(void *)(v145 + 16) = *((void *)&v211.__r_.__value_.__l + 2);
                }
                std::basic_string<char16_t>::size_type v146 = v145 + 24;
              }
              v207.__r_.__value_.__l.__size_ = v146;
            }
            morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getFeatureNameFromConstraintsOrBinaryType((uint64_t)&__dst, (uint64_t)a1, v170, *v130, a1[72], a1[3]);
            if (v203)
            {
              std::basic_string<char16_t>::size_type v147 = v207.__r_.__value_.__l.__size_;
              if (v207.__r_.__value_.__l.__size_ >= v207.__r_.__value_.__r.__words[2])
              {
                std::basic_string<char16_t>::size_type v149 = std::vector<std::basic_string<char16_t>>::__emplace_back_slow_path<std::basic_string<char16_t> const&>((uint64_t *)&v207, (long long *)&__dst);
                char v148 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
              }
              else
              {
                char v148 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
                if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                {
                  std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)v207.__r_.__value_.__l.__size_, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
                }
                else
                {
                  *(_OWORD *)v207.__r_.__value_.__l.__size_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
                  *(void *)(v147 + 16) = *((void *)&__dst.__r_.__value_.__l + 2);
                }
                std::basic_string<char16_t>::size_type v149 = v147 + 24;
              }
              v207.__r_.__value_.__l.__size_ = v149;
              if (v148 < 0) {
                operator delete(__dst.__r_.__value_.__l.__data_);
              }
            }
            if (data_low && SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v211.__r_.__value_.__l.__data_);
            }
          }
          a4 = v169;
          morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectWord((uint64_t)&__dst, (uint64_t)a1, v162, v170, (long long **)&v207, v169);
          morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectWord((uint64_t)&v199, (uint64_t)a1, v74 + 16, v170, (long long **)&v207, v169);
          int v150 = v203;
          int v151 = v200;
          if (v203 && v200)
          {
            std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(&v211, (long long *)&__dst, (long long *)&v199);
            std::basic_string<char16_t> v188 = v211;
            std::basic_string<char16_t> v189 = v212;
            int v151 = 1;
            char v190 = 1;
          }
          else
          {
            LOBYTE(v188.__r_.__value_.__l.__data_) = 0;
            char v190 = 0;
          }
          if (v151 && SHIBYTE(v199.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v199.__r_.__value_.__l.__data_);
          }
          if (v150 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          v211.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v207;
          std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v211);
          if (v174) {
            operator delete(v174);
          }
          int64_t v103 = v172;
          if (!v172) {
            goto LABEL_380;
          }
          goto LABEL_379;
        }
        memset(&v211, 0, sizeof(v211));
        morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectWord((uint64_t)&v199, (uint64_t)a1, v71 + 16, a3, (long long **)&v211, a4);
        __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v211;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
        if (!v200)
        {
          LOBYTE(v188.__r_.__value_.__l.__data_) = 0;
          char v190 = 0;
          goto LABEL_258;
        }
        if ((a1[59] & v197) == 0 || (uint64_t v101 = a1[60], (v101 & v197) != 0) || (v198 & v101) == 0)
        {
          if ((a1[61] & v197) == 0 || (uint64_t v102 = a1[60], (v102 & v197) != 0) || (v198 & v102) == 0)
          {
            std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(&v211, (long long *)&v199, (long long *)(v74 + 16));
            std::basic_string<char16_t> v188 = v211;
            std::basic_string<char16_t> v189 = v212;
            char v190 = 1;
            goto LABEL_258;
          }
          morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getGender((uint64_t)&__dst, a1, a3, v198);
          morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getLookupDeclensionAdjective(&v195, a1, v74 + 16, a3, (unsigned __int16 *)&__dst);
          std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(&v211, (long long *)&v199, (long long *)&v195);
          std::basic_string<char16_t> v188 = v211;
          std::basic_string<char16_t> v189 = v212;
          char v190 = 1;
          if (SHIBYTE(v195.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v195.__r_.__value_.__l.__data_);
          }
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_258;
          }
          int64_t v129 = (void *)__dst.__r_.__value_.__r.__words[0];
          goto LABEL_424;
        }
        uint64_t v165 = v69;
        morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v208, a3, a1[2]);
        morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v207, a3, a1[3]);
        memset(&__sz, 0, sizeof(__sz));
        morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v205, a3, a1[5]);
        uint64_t v120 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v119);
        std::basic_string<char16_t>::size_type v121 = HIBYTE(v207.__r_.__value_.__r.__words[2]);
        int v122 = SHIBYTE(v207.__r_.__value_.__r.__words[2]);
        std::basic_string<char16_t>::size_type v123 = v207.__r_.__value_.__l.__size_;
        if ((v207.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v121 = v207.__r_.__value_.__l.__size_;
        }
        uint64_t v124 = *(unsigned __int8 *)(v120 + 23);
        int v125 = (char)v124;
        if ((v124 & 0x80u) != 0) {
          uint64_t v124 = *(void *)(v120 + 8);
        }
        if (v121 == v124)
        {
          if (!v121)
          {
LABEL_310:
            if (SHIBYTE(__sz.__r_.__value_.__r.__words[2]) < 0)
            {
              __sz.__r_.__value_.__l.__size_ = 0;
              p_sz = (std::basic_string<char16_t> *)__sz.__r_.__value_.__r.__words[0];
            }
            else
            {
              *((unsigned char *)&__sz.__r_.__value_.__s + 23) = 0;
              p_sz = &__sz;
            }
            p_sz->__r_.__value_.__s.__data_[0] = 0;
LABEL_385:
            std::basic_string<char16_t>::size_type v152 = HIBYTE(v205.__r_.__value_.__r.__words[2]);
            if ((v205.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::basic_string<char16_t>::size_type v152 = v205.__r_.__value_.__l.__size_;
            }
            if (!v152)
            {
              std::basic_string<char16_t> v153 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_STRONG((morphun::grammar::synthesis::DeGrammarSynthesizer *)v120);
              std::basic_string<char16_t>::operator=(&v205, v153);
            }
            int v175 = SHIBYTE(v208.__r_.__value_.__r.__words[2]);
            if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&v211, v208.__r_.__value_.__l.__data_, v208.__r_.__value_.__l.__size_);
            }
            else {
              std::basic_string<char16_t> v211 = v208;
            }
            if (v122 < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&v212, v207.__r_.__value_.__l.__data_, v123);
            }
            else {
              std::basic_string<char16_t> v212 = v207;
            }
            if (SHIBYTE(__sz.__r_.__value_.__r.__words[2]) < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&v213, __sz.__r_.__value_.__l.__data_, __sz.__r_.__value_.__l.__size_);
            }
            else {
              std::basic_string<char16_t> v213 = __sz;
            }
            if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&v214, v205.__r_.__value_.__l.__data_, v205.__r_.__value_.__l.__size_);
            }
            else {
              std::basic_string<char16_t> v214 = v205;
            }
            int v154 = a4;
            uint64_t v155 = a1[6];
            v156 = (uint64_t *)operator new(8uLL);
            uint64_t *v156 = v155;
            morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v204, a3, v156, v156 + 1);
            operator delete(v156);
            int v157 = *(char *)(v74 + 39);
            if (v157 >= 0) {
              unint64_t v158 = (void *)(v74 + 16);
            }
            else {
              unint64_t v158 = *(void **)(v74 + 16);
            }
            if (v157 >= 0) {
              unint64_t v159 = *(unsigned __int8 *)(v74 + 39);
            }
            else {
              unint64_t v159 = *(void *)(v74 + 24);
            }
            memset(&v201, 0, sizeof(v201));
            v209 = &v201;
            char v210 = 0;
            v201.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x60uLL);
            v201.__r_.__value_.__l.__size_ = v201.__r_.__value_.__r.__words[0];
            v201.__r_.__value_.__r.__words[2] = v201.__r_.__value_.__r.__words[0] + 96;
            v201.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201.__r_.__value_.__r.__words[2], (long long *)&v211, &v215, (std::basic_string<char16_t> *)v201.__r_.__value_.__l.__data_);
            morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)&__dst, (uint64_t)(a1 + 18), v158, v159, &v201, &v204);
            v209 = &v201;
            std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v209);
            if (v203)
            {
              std::basic_string<char16_t> v195 = __dst;
            }
            else
            {
              morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getLookupDeclensionAdjective(&v201, a1, v74 + 16, a3, (unsigned __int16 *)&__sz);
              std::basic_string<char16_t> v195 = v201;
            }
            char v196 = 1;
            __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v204;
            std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
            for (uint64_t i = 0; i != -12; i -= 3)
            {
              if (SHIBYTE(v214.__r_.__value_.__r.__words[i + 2]) < 0) {
                operator delete(*(void **)((char *)&v214.__r_.__value_.__l.__data_ + i * 8));
              }
            }
            if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v205.__r_.__value_.__l.__data_);
            }
            a4 = v154;
            if (SHIBYTE(__sz.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__sz.__r_.__value_.__l.__data_);
            }
            uint64_t v69 = v165;
            if (v122 < 0) {
              operator delete(v207.__r_.__value_.__l.__data_);
            }
            if (v175 < 0) {
              operator delete(v208.__r_.__value_.__l.__data_);
            }
            std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>::pair[abi:ne180100]<true,0>(&v211, (long long *)&v199, (long long *)&v195);
            std::basic_string<char16_t> v188 = v211;
            std::basic_string<char16_t> v189 = v212;
            char v190 = 1;
            if ((SHIBYTE(v195.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_258;
            }
            int64_t v129 = (void *)v195.__r_.__value_.__r.__words[0];
LABEL_424:
            operator delete(v129);
LABEL_258:
            if (!v200 || (SHIBYTE(v199.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_380;
            }
            int64_t v103 = (uint64_t *)v199.__r_.__value_.__r.__words[0];
LABEL_379:
            operator delete(v103);
LABEL_380:
            if (!v190)
            {
              LOBYTE(v177.__r_.__value_.__l.__data_) = 0;
              char v178 = 0;
              std::__optional_destruct_base<std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>,false>::~__optional_destruct_base[abi:ne180100]((uint64_t)&v188);
              goto LABEL_218;
            }
            std::optional<std::basic_string<char16_t>>::operator=[abi:ne180100]<std::basic_string<char16_t> const&,void>(&v193, &v188);
            std::optional<std::basic_string<char16_t>>::operator=[abi:ne180100]<std::basic_string<char16_t> const&,void>(&v191, &v189);
            std::__optional_destruct_base<std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>,false>::~__optional_destruct_base[abi:ne180100]((uint64_t)&v188);
            goto LABEL_192;
          }
          if (v125 >= 0) {
            std::basic_string<char16_t> v126 = (unsigned __int16 *)v120;
          }
          else {
            std::basic_string<char16_t> v126 = *(unsigned __int16 **)v120;
          }
          std::basic_string<char16_t> v127 = (std::basic_string<char16_t> *)v207.__r_.__value_.__r.__words[0];
          if ((v207.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t> v127 = &v207;
          }
          while (*v126 == (unsigned __int16)v127->__r_.__value_.__s.__data_[0])
          {
            std::basic_string<char16_t> v127 = (std::basic_string<char16_t> *)((char *)v127 + 2);
            ++v126;
            if (!--v121) {
              goto LABEL_310;
            }
          }
        }
        __dst.__r_.__value_.__r.__words[0] = 0;
        if ((v199.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v142 = &v199;
        }
        else {
          uint64_t v142 = (std::basic_string<char16_t> *)v199.__r_.__value_.__r.__words[0];
        }
        if ((v199.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v143 = HIBYTE(v199.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v143 = v199.__r_.__value_.__l.__size_;
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[16], (uint64_t)&__dst, (const UChar *)v142, v143);
        morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getGender((uint64_t)&v211, a1, a3, (uint64_t)__dst.__r_.__value_.__l.__data_);
        if (SHIBYTE(__sz.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__sz.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t> __sz = v211;
        goto LABEL_385;
      }
LABEL_188:
      memset(&v188, 0, sizeof(v188));
      morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectWord((uint64_t)&v211, (uint64_t)a1, v71 + 16, a3, (long long **)&v188, a4);
      std::__optional_storage_base<std::basic_string<char16_t>,false>::__assign_from[abi:ne180100]<std::__optional_move_assign_base<std::basic_string<char16_t>,false>>((uint64_t)&v193, (__n128 *)&v211);
      if (LOBYTE(v212.__r_.__value_.__l.__data_) && SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v211.__r_.__value_.__l.__data_);
      }
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v188;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
      if (v194)
      {
LABEL_192:
        memset(&v211, 0, sizeof(v211));
        long long v89 = *(_OWORD *)(v69 + 8);
        uint64_t v90 = *(void *)(v69 + 16);
        if (v90) {
          uint64_t v91 = *(void *)(v90 + 80);
        }
        else {
          uint64_t v91 = 0;
        }
        while (1)
        {
          uint64_t v176 = *((void *)&v89 + 1);
          uint64_t v92 = v89;
          if (v91 == (void)v89)
          {
            std::basic_string<char16_t> v177 = v211;
            char v178 = 1;
            goto LABEL_218;
          }
          if (v71 == (void)v89 && v194) {
            break;
          }
          if (v74 == (void)v89 && v192)
          {
            std::basic_string<char16_t>::size_type v96 = HIBYTE(v191.__r_.__value_.__r.__words[2]);
            std::basic_string<char16_t>::size_type v97 = v191.__r_.__value_.__l.__size_;
            BOOL v98 = (v191.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
            if ((v191.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v94 = &v191;
            }
            else {
              uint64_t v94 = (std::basic_string<char16_t> *)v191.__r_.__value_.__r.__words[0];
            }
LABEL_213:
            if (v98) {
              std::basic_string<char16_t>::size_type v95 = v97;
            }
            else {
              std::basic_string<char16_t>::size_type v95 = v96;
            }
            goto LABEL_216;
          }
          int v93 = *(char *)(v89 + 39);
          if (v93 >= 0) {
            uint64_t v94 = (std::basic_string<char16_t> *)(v89 + 16);
          }
          else {
            uint64_t v94 = *(std::basic_string<char16_t> **)(v89 + 16);
          }
          if (v93 >= 0) {
            std::basic_string<char16_t>::size_type v95 = *(unsigned __int8 *)(v89 + 39);
          }
          else {
            std::basic_string<char16_t>::size_type v95 = *(void *)(v89 + 24);
          }
LABEL_216:
          std::basic_string<char16_t>::append(&v211, (const std::basic_string<char16_t>::value_type *)v94, v95);
          npc<morphun::Token const>(v92);
          *((void *)&v89 + 1) = v176;
          *(void *)&long long v89 = *(void *)(v92 + 80);
        }
        std::basic_string<char16_t>::size_type v96 = HIBYTE(v193.__r_.__value_.__r.__words[2]);
        std::basic_string<char16_t>::size_type v97 = v193.__r_.__value_.__l.__size_;
        BOOL v98 = (v193.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
        if ((v193.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v94 = &v193;
        }
        else {
          uint64_t v94 = (std::basic_string<char16_t> *)v193.__r_.__value_.__r.__words[0];
        }
        goto LABEL_213;
      }
      LOBYTE(v177.__r_.__value_.__l.__data_) = 0;
      char v178 = 0;
LABEL_218:
      if (v192 && SHIBYTE(v191.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v191.__r_.__value_.__l.__data_);
      }
      if (v194 && SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v193.__r_.__value_.__l.__data_);
      }
      if (v178)
      {
        std::optional<std::basic_string<char16_t>>::operator=[abi:ne180100]<std::basic_string<char16_t> const&,void>(&__str, &v177);
        if (v178)
        {
          if (SHIBYTE(v177.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v177.__r_.__value_.__l.__data_);
          }
        }
      }
    }
    else
    {
      LOBYTE(v177.__r_.__value_.__l.__data_) = 0;
      char v178 = 0;
    }
    (*(void (**)(uint64_t))(*(void *)v69 + 16))(v69);
    goto LABEL_229;
  }
  if (v53)
  {
    uint64_t v56 = &v181;
    if ((v181.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v56 = (std::basic_string<char16_t> *)v181.__r_.__value_.__r.__words[0];
    }
    if (v54 >= 0) {
      uint64_t v57 = (unsigned __int16 *)v52;
    }
    else {
      uint64_t v57 = *(unsigned __int16 **)v52;
    }
    while ((unsigned __int16)v56->__r_.__value_.__s.__data_[0] == *v57)
    {
      ++v57;
      uint64_t v56 = (std::basic_string<char16_t> *)((char *)v56 + 2);
      if (!--v53) {
        goto LABEL_121;
      }
    }
    goto LABEL_136;
  }
LABEL_121:
  uint64_t v58 = morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v52);
  std::basic_string<char16_t>::size_type v59 = HIBYTE(v182.__r_.__value_.__r.__words[2]);
  if ((v182.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v59 = v182.__r_.__value_.__l.__size_;
  }
  uint64_t v60 = *(unsigned __int8 *)(v58 + 23);
  int v61 = (char)v60;
  if ((v60 & 0x80u) != 0) {
    uint64_t v60 = *(void *)(v58 + 8);
  }
  if (v59 != v60) {
    goto LABEL_136;
  }
  if (v59)
  {
    if (v61 >= 0) {
      std::basic_string<char16_t> v62 = (unsigned __int16 *)v58;
    }
    else {
      std::basic_string<char16_t> v62 = *(unsigned __int16 **)v58;
    }
    std::basic_string<char16_t> v63 = &v182;
    if ((v182.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t> v63 = (std::basic_string<char16_t> *)v182.__r_.__value_.__r.__words[0];
    }
    while (*v62 == (unsigned __int16)v63->__r_.__value_.__s.__data_[0])
    {
      std::basic_string<char16_t> v63 = (std::basic_string<char16_t> *)((char *)v63 + 2);
      ++v62;
      if (!--v59) {
        goto LABEL_134;
      }
    }
    goto LABEL_136;
  }
LABEL_134:
  if (v51 < 2) {
    goto LABEL_136;
  }
  morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectGenitiveProperNoun(&v211, (unsigned __int16 **)&v184);
  std::basic_string<char16_t> __str = v211;
  char v180 = 1;
LABEL_229:
  if (v180)
  {
    std::basic_string<char16_t>::operator=(&v184, &__str);
    int v99 = 0;
    if (v180 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      int v99 = 0;
    }
  }
  else
  {
    int v99 = a4 ^ 1;
  }
  if (SHIBYTE(v181.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v181.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v182.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v182.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v183.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v183.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::size_type v12 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
  if (!v99)
  {
    std::basic_string<char16_t>::size_type size = v184.__r_.__value_.__l.__size_;
    char v10 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
    goto LABEL_244;
  }
  if ((*((unsigned char *)&v184.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_249:
  }
    operator delete(v184.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1D2D24E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,void *a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  STACK[0x230] = (unint64_t)&STACK[0x250];
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x230]);
  uint64_t v80 = 0;
  uint64_t v81 = v78 - 208;
  while (1)
  {
    if (*(char *)(v81 + v80 + 95) < 0) {
      operator delete(*(void **)(v81 + v80 + 72));
    }
    v80 -= 24;
    if (v80 == -96)
    {
      if (SLOBYTE(STACK[0x27F]) < 0) {
        operator delete((void *)STACK[0x268]);
      }
      if (SLOBYTE(STACK[0x297]) < 0) {
        operator delete((void *)STACK[0x280]);
      }
      if (SLOBYTE(STACK[0x2B7]) < 0) {
        operator delete((void *)STACK[0x2A0]);
      }
      if (*(char *)(v78 - 225) < 0) {
        operator delete(*(void **)(v78 - 248));
      }
      if (LOBYTE(STACK[0x208]) && SLOBYTE(STACK[0x207]) < 0) {
        operator delete(a78);
      }
      if (a74 && a73 < 0) {
        operator delete(a72);
      }
      if (a77 && a76 < 0) {
        operator delete(a75);
      }
      (*(void (**)(uint64_t))(*(void *)a12 + 16))(a12);
      if (a29 && a28 < 0) {
        operator delete(a23);
      }
      if (a36 < 0) {
        operator delete(a31);
      }
      if (a42 < 0) {
        operator delete(a37);
      }
      if (a48 < 0) {
        operator delete(a43);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
      _Unwind_Resume(a1);
    }
  }
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectGenitiveProperNoun(std::basic_string<char16_t> *a1, unsigned __int16 **a2)
{
  char v4 = *((unsigned char *)a2 + 23);
  if (v4 >= 0) {
    uint64_t v5 = (unsigned __int16 *)*((unsigned __int8 *)a2 + 23);
  }
  else {
    uint64_t v5 = a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = (unsigned __int16 *)a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  int v7 = MEMORY[0x1D942BD20](v6[(void)v5 - 1]);
  if (*((char *)a2 + 23) >= 0) {
    long long v8 = (unsigned __int16 *)a2;
  }
  else {
    long long v8 = *a2;
  }
  int v9 = MEMORY[0x1D942BD20](v8[(void)v5 - 2]);
  BOOL v10 = (v7 - 115) > 7 || ((1 << (v7 - 115)) & 0xA1) == 0;
  if (!v10 || v7 == 223 || v7 == 101 && v9 == 99)
  {
    if (*((char *)a2 + 23) >= 0) {
      unint64_t v11 = (unsigned __int16 *)*((unsigned __int8 *)a2 + 23);
    }
    else {
      unint64_t v11 = a2[1];
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)a1, (unint64_t)v11 + 1);
    if ((a1->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      a1 = (std::basic_string<char16_t> *)a1->__r_.__value_.__r.__words[0];
    }
    if (v11)
    {
      if (*((char *)a2 + 23) >= 0) {
        std::basic_string<char16_t>::size_type v12 = (unsigned __int16 *)a2;
      }
      else {
        std::basic_string<char16_t>::size_type v12 = *a2;
      }
      memmove(a1, v12, 2 * (void)v11);
    }
    *(_DWORD *)((char *)&a1->__r_.__value_.__l.__data_ + 2 * (void)v11) = 8217;
  }
  else if (v7 == 8217)
  {
    if (*((char *)a2 + 23) < 0)
    {
      std::basic_string<char16_t>::size_type v13 = (const std::basic_string<char16_t>::value_type *)*a2;
      std::basic_string<char16_t>::size_type v14 = (std::basic_string<char16_t>::size_type)a2[1];
      std::basic_string<char16_t>::__init_copy_ctor_external(a1, v13, v14);
    }
    else
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      a1->__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)a2[2];
    }
  }
  else
  {
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a1, (const void **)a2, 115);
  }
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::inflectWord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long **a5, int a6)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  memset(&v26, 0, sizeof(v26));
  std::basic_string<char16_t>::size_type v12 = a5 + 1;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>(&v26, *a5, a5[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a5[1] - (char *)*a5) >> 3));
  if (*a5 == *v12)
  {
    __p.__r_.__value_.__r.__words[0] = 0;
    int v13 = *(char *)(a3 + 23);
    std::basic_string<char16_t>::size_type v14 = v13 >= 0 ? (const UChar *)a3 : *(const UChar **)a3;
    uint64_t v15 = v13 >= 0 ? *(unsigned __int8 *)(a3 + 23) : *(void *)(a3 + 8);
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a2 + 128), (uint64_t)&__p, v14, v15);
    memset(&v25, 0, sizeof(v25));
    if ((*(void *)(a2 + 472) & __p.__r_.__value_.__r.__words[0]) != 0)
    {
      *(_OWORD *)&__src.__r_.__value_.__l.__data_ = *(_OWORD *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 40);
      __src.__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
      uint64_t v28 = v16;
      std::vector<morphun::dialog::SemanticFeature const*>::__assign_with_size[abi:ne180100]<morphun::dialog::SemanticFeature const* const*,morphun::dialog::SemanticFeature const* const*>(&v25, (char *)&__src, v29, 4uLL);
    }
    else
    {
      *(_OWORD *)&__src.__r_.__value_.__l.__data_ = *(_OWORD *)(a2 + 24);
      __src.__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
      std::vector<morphun::dialog::SemanticFeature const*>::__assign_with_size[abi:ne180100]<morphun::dialog::SemanticFeature const* const*,morphun::dialog::SemanticFeature const* const*>(&v25, (char *)&__src, (char *)&v28, 3uLL);
    }
    uint64_t v17 = (void *)v25.__r_.__value_.__r.__words[0];
    morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&__src, a4, (uint64_t *)v25.__r_.__value_.__l.__data_, (uint64_t *)v25.__r_.__value_.__l.__size_);
    std::vector<std::basic_string<char16_t>>::__vdeallocate((uint64_t *)&v26);
    std::basic_string<char16_t> v26 = __src;
    memset(&__src, 0, sizeof(__src));
    v24.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__src;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
    if (v17) {
      operator delete(v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 48);
  std::basic_string<char16_t>::size_type v19 = (uint64_t *)operator new(8uLL);
  *std::basic_string<char16_t>::size_type v19 = v18;
  morphun::grammar::synthesis::GrammarSynthesizerUtil::convertToStringConstraints((uint64_t)&v25, a4, v19, v19 + 1);
  operator delete(v19);
  int v20 = *(char *)(a3 + 23);
  if (v20 >= 0) {
    std::basic_string<char16_t>::size_type v21 = (void *)a3;
  }
  else {
    std::basic_string<char16_t>::size_type v21 = *(void **)a3;
  }
  if (v20 >= 0) {
    unint64_t v22 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    unint64_t v22 = *(void *)(a3 + 8);
  }
  morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)&__src, a2 + 144, v21, v22, &v26, &v25);
  if ((_BYTE)v28)
  {
    *(std::basic_string<char16_t> *)a1 = __src;
    memset(&__src, 0, sizeof(__src));
    *(unsigned char *)(a1 + 24) = 1;
  }
  else if (a6)
  {
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a4, *(void *)(a2 + 32));
    morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getLookupDeclensionAdjective(&v24, (uint64_t *)a2, a3, a4, (unsigned __int16 *)&__p);
    *(std::basic_string<char16_t> *)a1 = v24;
    memset(&v24, 0, sizeof(v24));
    *(unsigned char *)(a1 + 24) = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 24) = 0;
  }
  __src.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v25;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__src);
  __src.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v26;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__src);
}

void sub_1D2D25858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char *a26)
{
  if (__p) {
    operator delete(__p);
  }
  a26 = &a22;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a26);
  _Unwind_Resume(a1);
}

void sub_1D2D258D4()
{
}

std::basic_string<char16_t> *std::optional<std::basic_string<char16_t>>::operator=[abi:ne180100]<std::basic_string<char16_t> const&,void>(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *a2)
{
  if (LOBYTE(this[1].__r_.__value_.__l.__data_))
  {
    std::basic_string<char16_t>::operator=(this, a2);
  }
  else
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(this, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v3 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      this->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
    }
    LOBYTE(this[1].__r_.__value_.__l.__data_) = 1;
  }
  return this;
}

void sub_1D2D25998(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__optional_destruct_base<std::pair<std::basic_string<char16_t>,std::basic_string<char16_t>>,false>::~__optional_destruct_base[abi:ne180100](uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    if (*(char *)(a1 + 47) < 0) {
      operator delete(*(void **)(a1 + 24));
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
  }
  return a1;
}

double morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getGender(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (!a4) {
    goto LABEL_11;
  }
  uint64_t v7 = a2[63] & a4;
  if (v7 == a2[64])
  {
    long long v8 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)a1);
    goto LABEL_8;
  }
  if (v7 == a2[65])
  {
    long long v8 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)a1);
    goto LABEL_8;
  }
  if (v7 != a2[66])
  {
LABEL_11:
    morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v11, a3, a2[4]);
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    double result = *(double *)&v11.__r_.__value_.__l.__data_;
    *(std::basic_string<char16_t> *)a1 = v11;
    return result;
  }
  long long v8 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)a1);
LABEL_8:
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a1, v8);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 23);
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a1 + 8);
  }
  if (!v10) {
    goto LABEL_11;
  }
  return result;
}

void sub_1D2D25AD4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getLookupDeclensionAdjective(std::basic_string<char16_t> *a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned __int16 *a5)
{
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v26, a4, a2[5]);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = v26.__r_.__value_.__l.__size_;
    if (!v26.__r_.__value_.__l.__size_) {
      goto LABEL_21;
    }
    std::basic_string<char16_t> v11 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::basic_string<char16_t>::size_type size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    if (!*((unsigned char *)&v26.__r_.__value_.__s + 23)) {
      goto LABEL_21;
    }
    std::basic_string<char16_t> v11 = &v26;
  }
  SuffixMap = morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getSuffixMap((morphun::grammar::synthesis::DeGrammarSynthesizer *)a2, (unsigned __int16 *)v11, size);
  if (!SuffixMap)
  {
LABEL_21:
    if (*(char *)(a3 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)a3, *(void *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
      a1->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
    }
    goto LABEL_24;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v25, a4, a2[3]);
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a4, a2[2]);
  char Case = morphun::grammar::synthesis::DeGrammarSynthesizer::getCase((unsigned __int16 *)&__p);
  char Count = morphun::grammar::synthesis::DeGrammarSynthesizer::getCount((unsigned __int16 *)&v25);
  char Gender = morphun::grammar::synthesis::DeGrammarSynthesizer::getGender(a5);
  uint64_t v18 = *((void *)SuffixMap + 1);
  uint64_t v17 = SuffixMap + 8;
  uint64_t v16 = v18;
  if (!v18) {
    goto LABEL_17;
  }
  int v19 = Count & 0xF | (16 * (Gender & 0xF)) | ((Case & 0xF) << 8);
  int v20 = v17;
  do
  {
    int v21 = *(_DWORD *)(v16 + 32);
    BOOL v22 = v21 < v19;
    if (v21 >= v19) {
      std::basic_string<char16_t>::size_type v23 = (uint64_t *)v16;
    }
    else {
      std::basic_string<char16_t>::size_type v23 = (uint64_t *)(v16 + 8);
    }
    if (!v22) {
      int v20 = (char *)v16;
    }
    uint64_t v16 = *v23;
  }
  while (*v23);
  if (v20 == v17 || v19 < *((_DWORD *)v20 + 8))
  {
LABEL_17:
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    goto LABEL_21;
  }
  if (*(char *)(a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1, *(const std::basic_string<char16_t>::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    a1->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  }
  std::basic_string<char16_t>::append(a1, *((const std::basic_string<char16_t>::value_type **)v20 + 5), *((void *)v20 + 6));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
LABEL_24:
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D25CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

char *morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getSuffixMap(morphun::grammar::synthesis::DeGrammarSynthesizer *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v6 = morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_STRONG(a1);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(v6 + 8);
  }
  if (a3 == v7)
  {
    if (!v7) {
      return (char *)a1 + 56;
    }
    if (v8 >= 0) {
      int v9 = (unsigned __int16 *)v6;
    }
    else {
      int v9 = *(unsigned __int16 **)v6;
    }
    for (uint64_t i = a2; *v9 == *i; ++i)
    {
      ++v9;
      if (!--v7) {
        return (char *)a1 + 56;
      }
    }
  }
  uint64_t v12 = morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_WEAK((morphun::grammar::synthesis::DeGrammarSynthesizer *)v6);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  int v14 = (char)v13;
  if ((v13 & 0x80u) != 0) {
    uint64_t v13 = *(void *)(v12 + 8);
  }
  if (a3 == v13)
  {
    if (!a3) {
      return (char *)a1 + 80;
    }
    if (v14 >= 0) {
      uint64_t v15 = (unsigned __int16 *)v12;
    }
    else {
      uint64_t v15 = *(unsigned __int16 **)v12;
    }
    uint64_t v16 = a3;
    for (uint64_t j = a2; *v15 == *j; ++j)
    {
      ++v15;
      if (!--v16) {
        return (char *)a1 + 80;
      }
    }
  }
  uint64_t v18 = morphun::grammar::synthesis::DeGrammarSynthesizer::DECLENSION_MIXED((morphun::grammar::synthesis::DeGrammarSynthesizer *)v12);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  int v20 = (char)v19;
  if ((v19 & 0x80u) != 0) {
    uint64_t v19 = *(void *)(v18 + 8);
  }
  if (a3 == v19)
  {
    if (!a3) {
      return (char *)a1 + 104;
    }
    if (v20 >= 0) {
      int v21 = (unsigned __int16 *)v18;
    }
    else {
      int v21 = *(unsigned __int16 **)v18;
    }
    while (*v21 == *a2)
    {
      ++a2;
      ++v21;
      if (!--a3) {
        return (char *)a1 + 104;
      }
    }
  }
  return 0;
}

uint64_t morphun::grammar::synthesis::filterGrammemesFromSetThatDontContainGrammeme(uint64_t result, uint64_t a2)
{
  long long v3 = *(void **)result;
  unint64_t v2 = *(void **)(result + 8);
  if (*(void **)result != v2)
  {
    while ((*v3 & a2) != 0)
    {
      if (++v3 == v2) {
        return result;
      }
    }
    if (v3 != v2)
    {
      for (uint64_t i = v3 + 1; i != v2; ++i)
      {
        if ((*i & a2) != 0) {
          *v3++ = *i;
        }
      }
    }
    if (v3 != v2) {
      *(void *)(result + 8) = v3;
    }
  }
  return result;
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::getFeatureNameFromConstraintsOrBinaryType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__s, a3, a6);
  int v10 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
  {
    if (__s.__r_.__value_.__l.__size_)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
LABEL_6:
      *(unsigned char *)(a1 + 24) = 1;
      if ((v10 & 0x80000000) == 0) {
        return;
      }
      goto LABEL_14;
    }
  }
  else if (*((unsigned char *)&__s.__r_.__value_.__s + 23))
  {
    *(std::basic_string<char16_t> *)a1 = __s;
    goto LABEL_6;
  }
  if (!a4)
  {
LABEL_13:
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 24) = 0;
    if ((v10 & 0x80000000) == 0) {
      return;
    }
    goto LABEL_14;
  }
  std::basic_string<char16_t> v11 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(*(void *)(a2 + 128) + 8));
  morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v11, a5 & a4, v13);
  uint64_t v12 = v13[0];
  if (v13[0] == v13[1])
  {
    uint64_t v15 = (void **)v13;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v15);
    goto LABEL_13;
  }
  if (*(char *)(v13[0] + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, *(const std::basic_string<char16_t>::value_type **)v13[0], *(void *)(v13[0] + 8));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)v13[0];
    *(void *)(a1 + 16) = *(void *)(v12 + 16);
  }
  *(unsigned char *)(a1 + 24) = 1;
  uint64_t v15 = (void **)v13;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v15);
  if (v10 < 0) {
LABEL_14:
  }
    operator delete(__s.__r_.__value_.__l.__data_);
}

void sub_1D2D2604C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, char *a16)
{
  a16 = &a10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  if (v16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *std::vector<morphun::dialog::SemanticFeature const*>::__assign_with_size[abi:ne180100]<morphun::dialog::SemanticFeature const* const*,morphun::dialog::SemanticFeature const* const*>(void *result, char *__src, char *a3, unint64_t a4)
{
  uint64_t v6 = __src;
  uint64_t v7 = result;
  uint64_t v8 = result[2];
  int v9 = (char *)*result;
  if (a4 > (v8 - *result) >> 3)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      void v7[2] = 0;
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11 >> 61) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    double result = operator new(8 * v11);
    int v9 = (char *)result;
    *uint64_t v7 = result;
    v7[1] = result;
    void v7[2] = &result[v11];
    size_t v12 = a3 - v6;
    if (v12) {
      double result = memcpy(result, v6, v12);
    }
    uint64_t v13 = (void **)(v7 + 1);
    goto LABEL_21;
  }
  uint64_t v13 = (void **)(result + 1);
  int v14 = (unsigned char *)result[1];
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4)
  {
    size_t v12 = a3 - __src;
    if (a3 == __src) {
      goto LABEL_21;
    }
    uint64_t v17 = (void *)*result;
LABEL_20:
    double result = memmove(v17, __src, v12);
    goto LABEL_21;
  }
  int v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    double result = memmove((void *)*result, __src, v14 - v9);
    int v9 = (char *)*v13;
  }
  size_t v12 = a3 - v16;
  if (v12)
  {
    uint64_t v17 = v9;
    std::basic_string<char16_t> __src = v16;
    goto LABEL_20;
  }
LABEL_21:
  const std::basic_string<char16_t>::value_type *v13 = &v9[v12];
  return result;
}

void sub_1D2D2620C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::~DeGrammarSynthesizer_DeDisplayFunction(morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction *this)
{
  morphun::grammar::synthesis::DeGrammarSynthesizer_DeDisplayFunction::~DeGrammarSynthesizer_DeDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F2A0C568;
  unint64_t v2 = *((void *)this + 58);
  *((void *)this + 58) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *((void *)this + 47) = &unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 56));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 53));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 14));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 11));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 8));
}

void *morphun::analysis::stemmer::RuLemmaFilter::reset(morphun::analysis::stemmer::RuLemmaFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 15) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  double result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((void *)this + 16) = result;
  return result;
}

uint64_t morphun::analysis::stemmer::RuLemmaFilter::incrementToken(morphun::analysis::stemmer::RuLemmaFilter *this)
{
  uint64_t v123 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    char v4 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 14));
    uint64_t v5 = (void *)((char *)v4 + *(void *)(*v4 - 96));
    if (*((char *)v5 + 23) < 0)
    {
      std::basic_string<char16_t>::size_type v6 = v5[1];
      if (v6 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v5 = (void *)*v5;
    }
    else
    {
      std::basic_string<char16_t>::size_type v6 = *((unsigned __int8 *)v5 + 23);
    }
    if (v6 >= 0xB)
    {
      uint64_t v8 = (v6 & 0x7FFFFFFFFFFFFFFCLL) + 4;
      if ((v6 | 3) != 0xB) {
        uint64_t v8 = v6 | 3;
      }
      p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v8 + 1);
      __dst.__r_.__value_.__l.__size_ = v6;
      __dst.__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v6;
      p_dst = &__dst;
      if (!v6) {
        goto LABEL_14;
      }
    }
    memmove(p_dst, v5, 2 * v6);
LABEL_14:
    p_dst->__r_.__value_.__s.__data_[v6] = 0;
    uint64_t v10 = *((void *)this + 16);
    if (v10)
    {
      memset(&__str, 0, sizeof(__str));
      (*(void (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)v10 + 64))(v10, &__str);
      v111.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&__str;
      std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&v111);
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v11 = &__dst;
    }
    else {
      unint64_t v11 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    uint64_t isAllLowerCase = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllLowerCase((uint64_t)v11, size);
    char v14 = (char)isAllLowerCase;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v109, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::basic_string<char16_t> v109 = __dst;
    }
    if ((v14 & 1) == 0)
    {
      int32_t v15 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      long long v16 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      uint64_t v17 = morphun::util::LocaleUtils::RUSSIAN(isAllLowerCase);
      if ((v15 & 0x80u) == 0) {
        uint64_t v18 = &__dst;
      }
      else {
        uint64_t v18 = (std::basic_string<char16_t> *)v16;
      }
      if ((v15 & 0x80u) == 0) {
        int32_t v19 = v15;
      }
      else {
        int32_t v19 = DWORD2(v16);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&v109, (const UChar *)v18, v19, v17);
    }
    int v20 = (uint64_t *)*((void *)this + 13);
    uint64_t v21 = *((void *)this + 16);
    uint64_t v22 = v20[1];
    if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v23 = &v109;
    }
    else {
      std::basic_string<char16_t>::size_type v23 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
    }
    if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v24 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v24 = v109.__r_.__value_.__l.__size_;
    }
    if ((morphun::analysis::stemmer::RussianExposableMorphology::isInflectable(*((void *)this + 13), (unsigned __int16 *)v23, v24) & 1) == 0)goto LABEL_52; {
    std::basic_string<char16_t>::size_type v113 = 0;
    }
    if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t> v25 = &v109;
    }
    else {
      std::basic_string<char16_t> v25 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
    }
    if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v26 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v26 = v109.__r_.__value_.__l.__size_;
    }
    morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v22, (uint64_t)&v113, (const UChar *)v25, v26);
    std::basic_string<char16_t>::size_type v29 = v113;
    if (!v113) {
      goto LABEL_126;
    }
    if ((v20[49] & v113) == 0)
    {
LABEL_52:
      memset(&__p, 0, sizeof(__p));
LABEL_53:
      if (*((void *)this + 15))
      {
        uint64_t v32 = *(void *)(*((void *)this + 13) + 8);
        __str.__r_.__value_.__r.__words[0] = 0;
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v33 = &__dst;
        }
        else {
          int v33 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
        }
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v34 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v34 = __dst.__r_.__value_.__l.__size_;
        }
        morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v32, (uint64_t)&__str, (const UChar *)v33, v34);
        uint64_t v35 = *((void *)this + 15);
        if (!v35)
        {
          uint64_t v107 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(v107);
        }
        (*(void (**)(uint64_t, std::basic_string<char16_t>::size_type))(*(void *)v35 + 64))(v35, __str.__r_.__value_.__r.__words[0]);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v109.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      return v3;
    }
    uint64_t v30 = v20[45];
    uint64_t v31 = v20[46];
    if (((v20[43] | v20[48] | v20[44] | v20[47] | v30 | v31) & v113) == 0) {
      goto LABEL_126;
    }
    if ((v31 & v113) != 0
      || (v30 & v113) != 0 && (v20[51] & v113) != 0 && (v20[35] & v113) != 0 && (v20[31] & v113) != 0)
    {
      if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v111, v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
      }
      else {
        std::basic_string<char16_t> v111 = v109;
      }
      goto LABEL_124;
    }
    uint64_t v117 = 0;
    uint64_t v118 = 0;
    unint64_t v119 = 0;
    if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v37 = &v109;
    }
    else {
      BOOL v37 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
    }
    if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v38 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v38 = v109.__r_.__value_.__l.__size_;
    }
    morphun::analysis::MorphologicalAnalyzerUtil::getLemmaMappings((uint64_t)v37, v38, v113, (uint64_t *)&v117, v20);
    BOOL v39 = v117;
    uint64_t v40 = v118;
    if (v117 == v118)
    {
      uint64_t v114 = 0;
      uint64_t v115 = 0;
      unint64_t v116 = 0;
      if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v41 = &v109;
      }
      else {
        std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t> *)v109.__r_.__value_.__r.__words[0];
      }
      if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v42 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v42 = v109.__r_.__value_.__l.__size_;
      }
      morphun::dictionary::Inflector::getInflectionPatternsForWord(v20[2], (uint64_t)v41, v42, &v114);
      if (v114 != v115)
      {
        uint64_t v43 = v114;
        while (v43[9])
        {
          v43 += 24;
          if (v43 == v115) {
            goto LABEL_90;
          }
        }
        int v100 = v118;
        if ((unint64_t)v118 >= v119)
        {
          unint64_t v102 = 0xAAAAAAAAAAAAAAABLL * (((char *)v118 - (char *)v117) >> 4);
          if (v102 + 1 > 0x555555555555555) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v103 = 0x5555555555555556 * ((uint64_t)(v119 - (void)v117) >> 4);
          if (v103 <= v102 + 1) {
            unint64_t v103 = v102 + 1;
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v119 - (void)v117) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v104 = 0x555555555555555;
          }
          else {
            unint64_t v104 = v103;
          }
          *((void *)&v121 + 1) = &v119;
          if (v104) {
            unint64_t v104 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v104);
          }
          else {
            uint64_t v105 = 0;
          }
          __str.__r_.__value_.__r.__words[0] = v104;
          __str.__r_.__value_.__l.__size_ = v104 + 48 * v102;
          __str.__r_.__value_.__r.__words[2] = __str.__r_.__value_.__l.__size_;
          *(void *)&long long v121 = v104 + 48 * v105;
          morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping((std::basic_string<char16_t> *)__str.__r_.__value_.__l.__size_, v29, v29, (long long *)&v109);
          __str.__r_.__value_.__r.__words[2] += 48;
          std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer((uint64_t *)&v117, &__str);
          uint64_t v101 = v118;
          std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&__str);
        }
        else
        {
          morphun::analysis::tokenattributes::LemmaMapping::LemmaMapping(v118, v29, v29, (long long *)&v109);
          uint64_t v101 = v100 + 2;
        }
        uint64_t v118 = v101;
        if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v111, v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> v111 = v109;
        }
        char v112 = 1;
        if (v114) {
          operator delete(v114);
        }
        __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v117;
        std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
LABEL_124:
        if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::size_type v52 = v111.__r_.__value_.__r.__words[0];
          std::basic_string<char16_t>::__init_copy_ctor_external(&__p, v111.__r_.__value_.__l.__data_, v111.__r_.__value_.__l.__size_);
          uint64_t v53 = (void *)v52;
LABEL_206:
          operator delete(v53);
          goto LABEL_207;
        }
        goto LABEL_203;
      }
LABEL_90:
      if (v114) {
        operator delete(v114);
      }
      BOOL v39 = v117;
      uint64_t v40 = v118;
    }
    uint64_t v114 = 0;
    uint64_t v115 = 0;
    unint64_t v116 = 0;
    if (v39 != v40)
    {
      unint64_t v44 = 0;
      do
      {
        long long v45 = (void *)v20[25];
        std::basic_string<char16_t>::size_type v46 = (void *)v20[26];
        if (v45 != v46)
        {
          while ((*v45 & ~v39->__r_.__value_.__l.__size_) != 0)
          {
            if (++v45 == v46) {
              goto LABEL_100;
            }
          }
        }
        if (v45 == v46)
        {
LABEL_100:
          if (v44 >= v116)
          {
            unint64_t v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v44 - (void)v114) >> 4);
            unint64_t v48 = v47 + 1;
            if (v47 + 1 > 0x555555555555555) {
              std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
            }
            if (0x5555555555555556 * ((uint64_t)(v116 - (void)v114) >> 4) > v48) {
              unint64_t v48 = 0x5555555555555556 * ((uint64_t)(v116 - (void)v114) >> 4);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v116 - (void)v114) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
              unint64_t v49 = 0x555555555555555;
            }
            else {
              unint64_t v49 = v48;
            }
            *((void *)&v121 + 1) = &v116;
            if (v49) {
              unint64_t v49 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>>>(v49);
            }
            else {
              uint64_t v50 = 0;
            }
            __str.__r_.__value_.__r.__words[0] = v49;
            __str.__r_.__value_.__l.__size_ = v49 + 48 * v47;
            __str.__r_.__value_.__r.__words[2] = __str.__r_.__value_.__l.__size_;
            *(void *)&long long v121 = v49 + 48 * v50;
            std::allocator<morphun::analysis::tokenattributes::LemmaMapping>::construct[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping,morphun::analysis::tokenattributes::LemmaMapping const&>(__str.__r_.__value_.__l.__size_, (uint64_t)v39);
            __str.__r_.__value_.__r.__words[2] += 48;
            std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__swap_out_circular_buffer((uint64_t *)&v114, &__str);
            unint64_t v44 = (unint64_t)v115;
            std::__split_buffer<morphun::analysis::tokenattributes::LemmaMapping>::~__split_buffer((uint64_t)&__str);
          }
          else
          {
            std::allocator<morphun::analysis::tokenattributes::LemmaMapping>::construct[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping,morphun::analysis::tokenattributes::LemmaMapping const&>(v44, (uint64_t)v39);
            v44 += 48;
          }
          uint64_t v115 = (_WORD *)v44;
        }
        v39 += 2;
      }
      while (v39 != v40);
    }
    if (v21) {
      (*(void (**)(uint64_t, std::basic_string<char16_t> **))(*(void *)v21 + 64))(v21, &v117);
    }
    morphun::analysis::MorphologicalAnalyzer::selectBestLemmaMapping((uint64_t)v20, (uint64_t *)&v114, (uint64_t)&__str);
    if (!v122[8])
    {
      int v51 = 0;
      LOBYTE(v111.__r_.__value_.__l.__data_) = 0;
      char v112 = 0;
      goto LABEL_123;
    }
    if ((v122[7] & 0x80000000) != 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v111, (const std::basic_string<char16_t>::value_type *)v121, *((std::basic_string<char16_t>::size_type *)&v121 + 1));
      int v51 = 1;
      char v112 = 1;
      if (!v122[8]) {
        goto LABEL_123;
      }
    }
    else
    {
      *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v121;
      v111.__r_.__value_.__r.__words[2] = *(void *)v122;
      char v112 = 1;
    }
    int v51 = 1;
LABEL_123:
    __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v114;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
    __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v117;
    std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
    if (v51) {
      goto LABEL_124;
    }
LABEL_126:
    if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0) {
      std::basic_string<char16_t>::__init_copy_ctor_external(&v111, v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
    }
    else {
      std::basic_string<char16_t> v111 = v109;
    }
    int v54 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
    char v55 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
    int v56 = v111.__r_.__value_.__r.__words[1];
    if ((v111.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v57 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
    }
    else {
      int v57 = v111.__r_.__value_.__r.__words[1];
    }
    if (v57 < 6) {
      goto LABEL_197;
    }
    if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(&__str, v111.__r_.__value_.__l.__data_, v111.__r_.__value_.__l.__size_);
      int v54 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
      int v56 = v111.__r_.__value_.__r.__words[1];
      char v55 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
    }
    else
    {
      std::basic_string<char16_t> __str = v111;
    }
    if (v55 >= 0) {
      int v58 = v54;
    }
    else {
      int v58 = v56;
    }
    DWORD1(v121) = v58;
    *((void *)&v121 + 1) = 0;
    *(void *)&v122[4] = 0;
    *(_DWORD *)int v122 = v58;
    if (v58 >= 1)
    {
      int v59 = 0;
      do
      {
        p_str = (std::basic_string<char16_t> *)__str.__r_.__value_.__r.__words[0];
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_str = &__str;
        }
        int v61 = (unsigned __int16)p_str->__r_.__value_.__s.__data_[v59];
        int v62 = v59 + 1;
        if (v61 == 1105)
        {
          *(_DWORD *)int v122 = v59 + 1;
          LODWORD(v121) = v59;
          morphun::analysis::stemmer::slice_from(&__str, word_1D2EC1F42, 1, v27, v28);
          int v62 = v121;
          int v58 = DWORD1(v121);
        }
        HIDWORD(v121) = v62;
        int v59 = v62;
      }
      while (v58 > v62);
    }
    *(_DWORD *)&v122[4] = v58;
    *(_DWORD *)&v122[8] = v58;
    LODWORD(v121) = 0;
    while ((morphun::analysis::stemmer::in_grouping((uint64_t)&__str) & 1) == 0)
    {
      int v63 = DWORD1(v121);
      if ((int)v121 >= SDWORD1(v121)) {
        goto LABEL_162;
      }
      LODWORD(v121) = v121 + 1;
    }
    *(_DWORD *)&v122[8] = v121;
    while (!morphun::analysis::stemmer::out_grouping((uint64_t)&__str))
    {
      int v63 = DWORD1(v121);
      if ((int)v121 >= SDWORD1(v121)) {
        goto LABEL_162;
      }
      LODWORD(v121) = v121 + 1;
    }
    while (!morphun::analysis::stemmer::in_grouping((uint64_t)&__str))
    {
      int v63 = DWORD1(v121);
      if ((int)v121 >= SDWORD1(v121)) {
        goto LABEL_162;
      }
      LODWORD(v121) = v121 + 1;
    }
    while ((morphun::analysis::stemmer::out_grouping((uint64_t)&__str) & 1) == 0)
    {
      int v63 = DWORD1(v121);
      if ((int)v121 >= SDWORD1(v121)) {
        goto LABEL_162;
      }
      LODWORD(v121) = v121 + 1;
    }
    *(_DWORD *)&v122[4] = v121;
    int v63 = DWORD1(v121);
LABEL_162:
    DWORD2(v121) = 0;
    LODWORD(v121) = v63;
    if (v63 < *(int *)&v122[8])
    {
LABEL_194:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      char v55 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
LABEL_197:
      if (v21)
      {
        *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = 0uLL;
        __str.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A0F180;
        if (v55 < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v121, v111.__r_.__value_.__l.__data_, v111.__r_.__value_.__l.__size_);
        }
        else
        {
          long long v121 = *(_OWORD *)&v111.__r_.__value_.__l.__data_;
          *(void *)int v122 = *((void *)&v111.__r_.__value_.__l + 2);
        }
        uint64_t v117 = 0;
        uint64_t v118 = 0;
        unint64_t v119 = 0;
        uint64_t v114 = &v117;
        LOBYTE(v115) = 0;
        uint64_t v117 = (std::basic_string<char16_t> *)operator new(0x30uLL);
        uint64_t v118 = v117;
        unint64_t v85 = v117 + 2;
        unint64_t v119 = (unint64_t)&v117[2];
        std::allocator<morphun::analysis::tokenattributes::LemmaMapping>::construct[abi:ne180100]<morphun::analysis::tokenattributes::LemmaMapping,morphun::analysis::tokenattributes::LemmaMapping const&>((uint64_t)v117, (uint64_t)&__str);
        uint64_t v118 = v85;
        (*(void (**)(uint64_t, std::basic_string<char16_t> **))(*(void *)v21 + 64))(v21, &v117);
        uint64_t v114 = &v117;
        std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&v114);
        char v55 = HIBYTE(v111.__r_.__value_.__r.__words[2]);
      }
      if (v55 < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&__p, v111.__r_.__value_.__l.__data_, v111.__r_.__value_.__l.__size_);
        if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v53 = (void *)v111.__r_.__value_.__r.__words[0];
          goto LABEL_206;
        }
LABEL_207:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> __str = __p;
        }
        if ((v14 & 1) == 0)
        {
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v86 = &__dst;
          }
          else {
            std::basic_string<char16_t>::size_type v86 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
          }
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v87 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v87 = __dst.__r_.__value_.__l.__size_;
          }
          int isAllUpperCase = (morphun::util::LocaleUtils *)morphun::util::StringViewUtils::isAllUpperCase((uint64_t)v86, v87);
          if (isAllUpperCase)
          {
            memset(&v111, 0, sizeof(v111));
            int32_t v89 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            long long v90 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
            uint64_t v91 = morphun::util::LocaleUtils::RUSSIAN(isAllUpperCase);
            if ((v89 & 0x80u) == 0) {
              uint64_t v92 = &__str;
            }
            else {
              uint64_t v92 = (std::basic_string<char16_t> *)v90;
            }
            if ((v89 & 0x80u) == 0) {
              int32_t v93 = v89;
            }
            else {
              int32_t v93 = DWORD2(v90);
            }
            morphun::util::StringViewUtils::uppercase((uint64_t)&v111, (const UChar *)v92, v93, v91);
            std::basic_string<char16_t>::operator=(&__str, &v111);
            if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v111.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            unint64_t v94 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            long long v95 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
            uint64_t v96 = morphun::util::LocaleUtils::RUSSIAN(isAllUpperCase);
            if ((v94 & 0x80u) == 0) {
              std::basic_string<char16_t>::size_type v97 = &__str;
            }
            else {
              std::basic_string<char16_t>::size_type v97 = (std::basic_string<char16_t> *)v95;
            }
            if ((v94 & 0x80u) == 0) {
              unint64_t v98 = v94;
            }
            else {
              unint64_t v98 = *((void *)&v95 + 1);
            }
            morphun::util::StringViewUtils::capitalizeFirst((UChar *)v97, v98, v96, (uint64_t)&v111);
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__str.__r_.__value_.__l.__data_);
            }
            std::basic_string<char16_t> __str = v111;
          }
        }
        int v99 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 14));
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v99 + *(void *)(*v99 - 96)), &__str);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        goto LABEL_53;
      }
LABEL_203:
      std::basic_string<char16_t> __p = v111;
      goto LABEL_207;
    }
    DWORD2(v121) = *(_DWORD *)&v122[8];
    if ((morphun::analysis::stemmer::r_verb_common((uint64_t)&__str, (uint64_t)&morphun::analysis::stemmer::a_0, 8) & 1) == 0)
    {
      LODWORD(v121) = DWORD1(v121);
      *(_DWORD *)int v122 = DWORD1(v121);
      if (morphun::analysis::stemmer::find_among_b((uint64_t *)&__str, (uint64_t)&morphun::analysis::stemmer::a_3, 1))
      {
        HIDWORD(v121) = v121;
        morphun::analysis::stemmer::slice_from(&__str, &word_1D2ED0AEE, 0, v64, v65);
        int v66 = v121;
        int v67 = DWORD1(v121);
      }
      else
      {
        int v66 = DWORD1(v121);
        LODWORD(v121) = DWORD1(v121);
        int v67 = DWORD1(v121);
      }
      *(_DWORD *)int v122 = v66;
      if (morphun::analysis::stemmer::find_among_b((uint64_t *)&__str, (uint64_t)&morphun::analysis::stemmer::a_1, 25))
      {
        HIDWORD(v121) = v121;
        morphun::analysis::stemmer::slice_from(&__str, &word_1D2ED0AEE, 0, v68, v69);
        *(_DWORD *)int v122 = v121;
        int among_b = morphun::analysis::stemmer::find_among_b((uint64_t *)&__str, (uint64_t)&morphun::analysis::stemmer::a_2, 7);
        if (!among_b) {
          goto LABEL_178;
        }
        int v73 = v121;
        HIDWORD(v121) = v121;
        if (among_b != 2)
        {
          if (among_b != 1) {
            goto LABEL_178;
          }
          int v74 = DWORD1(v121);
          if ((morphun::analysis::stemmer::eq_s_b((uint64_t *)&__str, word_1D2EC1FA6, 1) & 1) == 0)
          {
            LODWORD(v121) = v73 - v74 + DWORD1(v121);
            if ((morphun::analysis::stemmer::eq_s_b((uint64_t *)&__str, word_1D2EC1FAA, 1) & 1) == 0) {
              goto LABEL_178;
            }
          }
        }
      }
      else
      {
        int v75 = v67 - v66;
        LODWORD(v121) = DWORD1(v121) - v75;
        if (morphun::analysis::stemmer::r_verb_common((uint64_t)&__str, (uint64_t)&morphun::analysis::stemmer::a_4, 45)) {
          goto LABEL_178;
        }
        LODWORD(v121) = DWORD1(v121) - v75;
        *(_DWORD *)int v122 = DWORD1(v121) - v75;
        if (!morphun::analysis::stemmer::find_among_b((uint64_t *)&__str, (uint64_t)&morphun::analysis::stemmer::a_5, 35))goto LABEL_178; {
        HIDWORD(v121) = v121;
        }
      }
      morphun::analysis::stemmer::slice_from(&__str, &word_1D2ED0AEE, 0, v71, v72);
    }
LABEL_178:
    LODWORD(v121) = DWORD1(v121);
    *(_DWORD *)int v122 = DWORD1(v121);
    if (morphun::analysis::stemmer::eq_s_b((uint64_t *)&__str, word_1D2EC925E, 1))
    {
      HIDWORD(v121) = v121;
      morphun::analysis::stemmer::slice_from(&__str, &word_1D2ED0AEE, 0, v76, v77);
      int v78 = v121;
      int v79 = DWORD1(v121);
    }
    else
    {
      int v78 = DWORD1(v121);
      LODWORD(v121) = DWORD1(v121);
      int v79 = DWORD1(v121);
    }
    *(_DWORD *)int v122 = v78;
    if (morphun::analysis::stemmer::find_among_b((uint64_t *)&__str, (uint64_t)&morphun::analysis::stemmer::a_6, 1))
    {
      HIDWORD(v121) = v121;
      if (*(int *)&v122[4] <= (int)v121) {
        morphun::analysis::stemmer::slice_from(&__str, &word_1D2ED0AEE, 0, v80, v81);
      }
    }
    LODWORD(v121) = DWORD1(v121) + v78 - v79;
    *(_DWORD *)int v122 = v121;
    int v82 = morphun::analysis::stemmer::find_among_b((uint64_t *)&__str, (uint64_t)&morphun::analysis::stemmer::a_7, 3);
    if (!v82) {
      goto LABEL_193;
    }
    HIDWORD(v121) = v121;
    if (v82 == 1)
    {
      morphun::analysis::stemmer::slice_from(&__str, &word_1D2ED0AEE, 0, v83, v84);
      *(_DWORD *)int v122 = v121;
      if (!morphun::analysis::stemmer::eq_s_b((uint64_t *)&__str, word_1D2EC1FAE, 1)) {
        goto LABEL_193;
      }
      HIDWORD(v121) = v121;
      if (!morphun::analysis::stemmer::eq_s_b((uint64_t *)&__str, word_1D2EC1FAE, 1)) {
        goto LABEL_193;
      }
    }
    else if (v82 != 3 {
           && (v82 != 2 || (morphun::analysis::stemmer::eq_s_b((uint64_t *)&__str, word_1D2EC1FAE, 1) & 1) == 0))
    }
    {
      goto LABEL_193;
    }
    morphun::analysis::stemmer::slice_from(&__str, &word_1D2ED0AEE, 0, v83, v84);
LABEL_193:
    DWORD2(v121) = 0;
    LODWORD(v121) = 0;
    std::basic_string<char16_t>::assign(&v111, &__str, 0, SDWORD1(v121));
    goto LABEL_194;
  }
  return v3;
}

void sub_1D2D272D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,char *__p,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  if (__p) {
    operator delete(__p);
  }
  std::basic_string<char16_t> __p = &a39;
  std::vector<morphun::analysis::tokenattributes::LemmaMapping>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D27510(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::RuLemmaFilter::~RuLemmaFilter(morphun::analysis::stemmer::RuLemmaFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07F88);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07F88);
}

uint64_t **com::apple::siri::tokenizer::data::config_da::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  void v3[2] = xmmword_1E696DC18;
  _OWORD v3[3] = *(_OWORD *)&off_1E696DC28;
  char v4 = L"(her|der)(fra|til)";
  v3[0] = xmmword_1E696DBF8;
  v3[1] = *(_OWORD *)&off_1E696DC08;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 528) || (uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2)) == 0)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
    uint64_t v8 = v7;
    if (!*(unsigned char *)(a1 + 696)) {
      goto LABEL_32;
    }
    uint64_t v9 = *(unsigned __int8 *)(v7 + 23);
    if ((v9 & 0x80u) != 0) {
      uint64_t v9 = *(void *)(v7 + 8);
    }
    if (!v9)
    {
LABEL_32:
      uint64_t v20 = *(void *)(a1 + 536);
      npc<morphun::dialog::SemanticFeature const>(v20);
      uint64_t v21 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v20);
      int Count = morphun::grammar::synthesis::FrGrammarSynthesizer::getCount(v21);
      if (!Count)
      {
        morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::determine((uint64_t *)(a1 + 32), v8, &__p);
        int Count = morphun::grammar::synthesis::FrGrammarSynthesizer::getCount((unsigned __int16 *)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      uint64_t v23 = *(void *)(a1 + 544);
      npc<morphun::dialog::SemanticFeature const>(v23);
      std::basic_string<char16_t>::size_type v24 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v23);
      char Gender = (morphun::util::LocaleUtils *)morphun::grammar::synthesis::FrGrammarSynthesizer::getGender(v24);
      int v26 = (int)Gender;
      if (!Gender)
      {
        morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::determine((void *)(a1 + 296), v8, (uint64_t)&__p);
        char Gender = (morphun::util::LocaleUtils *)morphun::grammar::synthesis::FrGrammarSynthesizer::getGender((unsigned __int16 *)&__p);
        int v26 = (int)Gender;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      if (Count != 1)
      {
        if (Count == 2)
        {
          uint64_t v27 = a1 + 672;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a2, v27);
        }
LABEL_55:
        if (*(char *)(a1 + 599) < 0)
        {
          if (!*(void *)(a1 + 584)) {
            goto LABEL_64;
          }
        }
        else if (!*(unsigned char *)(a1 + 599))
        {
          goto LABEL_64;
        }
        uint64_t v30 = *(unsigned __int8 *)(v8 + 23);
        if ((v30 & 0x80u) != 0) {
          uint64_t v30 = *(void *)(v8 + 8);
        }
        if (v30)
        {
          uint64_t v31 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FRENCH(Gender);
          if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v31, v8))
          {
            uint64_t v27 = a1 + 576;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a2, v27);
          }
        }
LABEL_64:
        uint64_t v27 = a1 + 552;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a2, v27);
      }
      if (*(char *)(a1 + 671) < 0)
      {
        if (!*(void *)(a1 + 656)) {
          goto LABEL_52;
        }
      }
      else if (!*(unsigned char *)(a1 + 671))
      {
LABEL_52:
        if (v26 == 2)
        {
          uint64_t v27 = a1 + 624;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a2, v27);
        }
        if (v26 == 1)
        {
          uint64_t v27 = a1 + 600;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a2, v27);
        }
        goto LABEL_55;
      }
      uint64_t v28 = *(unsigned __int8 *)(v8 + 23);
      if ((v28 & 0x80u) != 0) {
        uint64_t v28 = *(void *)(v8 + 8);
      }
      if (v28 && (*(unsigned char *)(a1 + 697) || v26 == 1))
      {
        std::basic_string<char16_t>::size_type v29 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FRENCH(Gender);
        char Gender = (morphun::util::LocaleUtils *)morphun::dictionary::PhraseProperties::isStartsWithVowel(v29, v8);
        if (Gender)
        {
          uint64_t v27 = a1 + 648;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a2, v27);
        }
      }
      goto LABEL_52;
    }
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10 || (uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 24))(v10, v8)) == 0)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    uint64_t v12 = v11;
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 104))(v11);
    if (!v13)
    {
      int v33 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(v33);
    }
    uint64_t v14 = *(void *)(v13 + 80);
    npc<morphun::Token>(v14);
    int32_t v15 = (_WORD **)(v14 + 40);
    int v16 = *(unsigned __int8 *)(v14 + 63);
    if (*(char *)(v14 + 63) < 0)
    {
      uint64_t v18 = *(void *)(v14 + 48);
      if (v18 != 2)
      {
        if (v18 != 3) {
          goto LABEL_31;
        }
        goto LABEL_26;
      }
      uint64_t v17 = *v15;
    }
    else
    {
      uint64_t v17 = (_WORD *)(v14 + 40);
      if (v16 != 2)
      {
        if (v16 != 3)
        {
LABEL_31:
          (*(void (**)(uint64_t))(*(void *)v12 + 16))(v12);
          goto LABEL_32;
        }
LABEL_27:
        uint64_t v19 = 0;
        while (word_1D2ECF39E[v19] == *(_WORD *)((char *)v15 + v19 * 2))
        {
          if (++v19 == 3) {
            operator new();
          }
        }
        goto LABEL_31;
      }
    }
    if (*v17 == 108 && v17[1] == 101) {
      operator new();
    }
    if ((v16 & 0x80) == 0 || *(void *)(v14 + 48) != 3) {
      goto LABEL_31;
    }
LABEL_26:
    int32_t v15 = (_WORD **)*v15;
    goto LABEL_27;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);

  return v5(a1, a2, v4);
}

void sub_1D2D27CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  MEMORY[0x1D942B8B0](v28, 0x10B3C40F7FF9C27);
  (*(void (**)(uint64_t))(*(void *)v27 + 16))(v27);
  _Unwind_Resume(a1);
}

void sub_1D2D27E14(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D27E78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::~FrGrammarSynthesizer_ArticleLookupFunction(void **this)
{
  morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::~FrGrammarSynthesizer_ArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;

  *this = &off_1F2A0D378;
  if (*((char *)this + 695) < 0) {
    operator delete(this[84]);
  }
  if (*((char *)this + 671) < 0) {
    operator delete(this[81]);
  }
  if (*((char *)this + 647) < 0) {
    operator delete(this[78]);
  }
  if (*((char *)this + 623) < 0) {
    operator delete(this[75]);
  }
  if (*((char *)this + 599) < 0) {
    operator delete(this[72]);
  }
  if (*((char *)this + 575) < 0) {
    operator delete(this[69]);
  }
  morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::~FrGrammarSynthesizer_GenderLookupFunction((morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction *)(this + 37));
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::~FrGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *)(this + 4));
  uint64_t v2 = this[3];
  this[3] = 0;
  if (v2) {
    (*(void (**)(void *))(*(void *)v2 + 16))(v2);
  }
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleLookupFunction::FrGrammarSynthesizer_ArticleLookupFunction(void *a1, uint64_t a2, char a3, int a4, int a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *a1 = &unk_1F29FAEE8;
  uint64_t v14 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A064B8, a2, a6 != 0, a3);
  *(void *)uint64_t v14 = &off_1F2A0D378;
  if (a4)
  {
    int32_t v15 = (morphun::TokenizerFactory *)morphun::util::LocaleUtils::FRENCH(v14);
    morphun::TokenizerFactory::createTokenizer(v15, v16);
  }
  a1[3] = 0;
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::FrGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *)(a1 + 4));
}

void sub_1D2D282AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, void **a11, morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction *a12, morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction *a13)
{
  if (*(char *)(v13 + 671) < 0) {
    operator delete(*v14);
  }
  if (*(char *)(v13 + 647) < 0) {
    operator delete(*v16);
  }
  if (*(char *)(v13 + 623) < 0) {
    operator delete(*v15);
  }
  if (*(char *)(v13 + 599) < 0) {
    operator delete(*a10);
  }
  if (*(char *)(v13 + 575) < 0) {
    operator delete(*a11);
  }
  morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::~FrGrammarSynthesizer_GenderLookupFunction(a12);
  morphun::grammar::synthesis::FrGrammarSynthesizer_CountLookupFunction::~FrGrammarSynthesizer_CountLookupFunction(a13);
  uint64_t v18 = *(void *)(v13 + 24);
  *(void *)(v13 + 24) = 0;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 16))(v18);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D28398()
{
}

void sub_1D2D283A0()
{
}

void morphun::exception::IncompatibleVersionException::~IncompatibleVersionException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::IncompatibleVersionException::IncompatibleVersionException(morphun::exception::IncompatibleVersionException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A114E8;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A114E8;
  return result;
}

void *morphun::exception::IncompatibleVersionException::IncompatibleVersionException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A114E8;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A114E8;
  return result;
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_CountLookupFunction::getFeatureValue()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D2887C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27)
{
  if (v28) {
    operator delete(v28);
  }
  if (*(char *)(v29 - 121) < 0) {
    operator delete(*(void **)(v29 - 144));
  }
  morphun::analysis::fi::FinnishMorphology_InflectionAnalysis::~FinnishMorphology_InflectionAnalysis(&a27);
  MEMORY[0x1D942B8B0](v27, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_CountLookupFunction::~FiGrammarSynthesizer_CountLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_CountLookupFunction *this)
{
}

void morphun::analysis::util::AttributeSource_State::clone(morphun::analysis::util::AttributeSource_State *this)
{
}

void sub_1D2D28A54(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void covariant return thunk to'morphun::analysis::util::AttributeSource_State::clone(morphun::analysis::util::AttributeSource_State *this)
{
}

void morphun::analysis::util::AttributeSource_State::~AttributeSource_State(morphun::analysis::util::AttributeSource_State *this)
{
}

uint64_t *morphun::analysis::util::AttributeSource_State::AttributeSource_State(uint64_t *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *this = *a2;
  *(uint64_t *)((char *)this + *(void *)(v2 - 56)) = a2[1];
  *(uint64_t *)((char *)this + *(void *)(*this - 40)) = a2[2];
  this[1] = 0;
  this[2] = 0;
  return this;
}

void *morphun::analysis::util::AttributeSource_State::AttributeSource_State(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1F2A10380;
  return this;
}

void virtual thunk to'morphun::analysis::util::AttributeSource_State::~AttributeSource_State(morphun::analysis::util::AttributeSource_State *this)
{
}

void virtual thunk to'morphun::analysis::util::AttributeSource_State::~AttributeSource_State()
{
}

uint64_t **com::apple::siri::tokenizer::data::config_hr::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_vi::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_ja::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  void v3[2] = xmmword_1E696DCB0;
  _OWORD v3[3] = *(_OWORD *)&off_1E696DCC0;
  uint64_t v4 = "(";
  v3[0] = xmmword_1E696DC90;
  v3[1] = *(_OWORD *)&off_1E696DCA0;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

void morphun::grammar::synthesis::HrGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::HrGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2D290EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

void morphun::analysis::DeAnalyzer::addWordNormalizationFilter(morphun::analysis::DeAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D2950C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  __cxa_free_exception(v21);
  morphun::analysis::TokenFilter::~TokenFilter(v20, (uint64_t *)&off_1F2A07C20);
  MEMORY[0x1D942B8B0](v20, 0x10E1C40C1B1C832);
  _Unwind_Resume(a1);
}

void morphun::analysis::DeAnalyzer::addStopFilter(morphun::analysis::DeAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2D29674(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::DeAnalyzer::~DeAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06D00);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06D00);
}

void morphun::dialog::language::ElCommonConceptFactory::~ElCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05728);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05728);
}

void morphun::dictionary::Inflector_Inflection::inflect(std::basic_string<char16_t> *a1, int *a2, std::basic_string<char16_t> *a3)
{
  morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)a2 + 40), a2[2], &v26);
  uint64_t v6 = *(void *)a2;
  if (*(__int16 *)(*(void *)a2 + 16) < 1)
  {
LABEL_22:
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)a1, (const void **)&a3->__r_.__value_.__l.__data_, (const void **)&v26.__r_.__value_.__l.__data_);
  }
  else
  {
    int v7 = 0;
    while (1)
    {
      uint64_t v8 = *(morphun::dictionary::metadata::StringContainer **)(v6 + 40);
      int v9 = morphun::dictionary::metadata::CompressedArray<long long>::read(*(void *)(v6 + 32) + 192, *(_DWORD *)(v6 + 20) + v7);
      morphun::dictionary::metadata::StringContainer::getString(v8, v9, &__p);
      uint64_t v11 = (std::basic_string<char16_t> *)a3->__r_.__value_.__r.__words[0];
      std::basic_string<char16_t>::size_type size = a3->__r_.__value_.__l.__size_;
      if ((a3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        uint64_t v11 = a3;
        std::basic_string<char16_t>::size_type size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
      }
      std::basic_string<char16_t>::size_type v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v13 = __p.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::size_type v15 = size - v13;
      if (size >= v13)
      {
        if (!v13) {
          break;
        }
        uint64_t v16 = -(uint64_t)v13;
        uint64_t v17 = (char *)v11 + 2 * size;
        do
        {
          int v18 = *(unsigned __int16 *)&v17[2 * v16];
          int v20 = (unsigned __int16)p_p->__r_.__value_.__s.__data_[0];
          p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
          int v19 = v20;
        }
        while (v20 == v18 && v16++ != -1);
        if (v19 == v18) {
          break;
        }
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      ++v7;
      uint64_t v6 = *(void *)a2;
      if (v7 >= *(__int16 *)(*(void *)a2 + 16)) {
        goto LABEL_22;
      }
    }
    std::basic_string<char16_t>::basic_string(&v24, a3, 0, v15, v10);
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v22 = &v26;
    }
    else {
      uint64_t v22 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
    }
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v23 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v23 = v26.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v24, (const std::basic_string<char16_t>::value_type *)v22, v23);
    *a1 = v24;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D298BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dictionary::Inflector_Inflection::lemmatize(std::basic_string<char16_t> *a1, int *a2, const std::basic_string<char16_t> *a3)
{
  morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)a2 + 40), a2[2], &v24);
  if (!*(_WORD *)(*(void *)a2 + 16)) {
    goto LABEL_27;
  }
  int v7 = (const std::basic_string<char16_t> *)a3->__r_.__value_.__r.__words[0];
  std::basic_string<char16_t>::size_type size = a3->__r_.__value_.__l.__size_;
  if ((a3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
  {
    int v7 = a3;
    std::basic_string<char16_t>::size_type size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
  }
  std::basic_string<char16_t>::size_type v9 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v10 = &v24;
  }
  else {
    uint64_t v10 = (std::basic_string<char16_t> *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v9 = v24.__r_.__value_.__l.__size_;
  }
  std::basic_string<char16_t>::size_type v11 = size - v9;
  if (size < v9) {
    goto LABEL_27;
  }
  if (!v9) {
    goto LABEL_18;
  }
  uint64_t v12 = -(uint64_t)v9;
  uint64_t v13 = (uint64_t)v7 + 2 * size;
  do
  {
    int v14 = *(unsigned __int16 *)(v13 + 2 * v12);
    int v16 = (unsigned __int16)v10->__r_.__value_.__s.__data_[0];
    uint64_t v10 = (std::basic_string<char16_t> *)((char *)v10 + 2);
    int v15 = v16;
  }
  while (v16 == v14 && v12++ != -1);
  if (v15 == v14)
  {
LABEL_18:
    std::basic_string<char16_t>::basic_string(&v23, a3, 0, v11, v6);
    int v18 = *(morphun::dictionary::metadata::StringContainer **)(*(void *)a2 + 40);
    int v19 = morphun::dictionary::metadata::CompressedArray<long long>::read(*(void *)(*(void *)a2 + 32) + 192, *(_DWORD *)(*(void *)a2 + 20));
    morphun::dictionary::metadata::StringContainer::getString(v18, v19, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v21 = __p.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v23, (const std::basic_string<char16_t>::value_type *)p_p, v21);
    *a1 = v23;
    memset(&v23, 0, sizeof(v23));
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v23.__r_.__value_.__l.__data_);
      }
    }
  }
  else
  {
LABEL_27:
    if ((*((unsigned char *)&a3->__r_.__value_.__s + 23) & 0x80) != 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a1, a3->__r_.__value_.__l.__data_, a3->__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&a1->__r_.__value_.__l.__data_ = *(_OWORD *)&a3->__r_.__value_.__l.__data_;
      a1->__r_.__value_.__r.__words[2] = a3->__r_.__value_.__r.__words[2];
    }
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D29A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **com::apple::siri::tokenizer::data::config_no::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696DCD8;
  uint64_t v4 = L"nb";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

void morphun::grammar::synthesis::HiGrammarSynthesizer_GenderLookupFunction::determine(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if (v4)
  {
    morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, (void *)a3);
    uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
    char v9 = v8;
    uint64_t v10 = *(void *)(a3 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v11 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      uint64_t v11 = *(void *)(a3 + 8);
    }
    if (!v11)
    {
      uint64_t v12 = *(unsigned __int8 *)(a2 + 23);
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(a2 + 8);
      }
      if (v12)
      {
        uint64_t v13 = a1[26];
        if (!v13
          || (uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 24))(v13, a2), (v15 = v14) == 0))
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        uint64_t v16 = v14;
        long long v72 = *(_OWORD *)(v14 + 8);
        uint64_t v17 = *((void *)&v72 + 1);
        if (*((void *)&v72 + 1)) {
          goto LABEL_28;
        }
        while (v17 != (void)v72)
        {
          if ((void)v72
          {
            int v18 = *(char *)(v72 + 63);
            int v19 = v18 >= 0 ? (const UChar *)(v72 + 40) : *(const UChar **)(v72 + 40);
            uint64_t v20 = v18 >= 0 ? *(unsigned __int8 *)(v72 + 63) : *(void *)(v72 + 48);
            uint64_t v21 = a1[27];
            uint64_t v22 = a1[28];
            *(void *)&long long v74 = 0;
            BOOL v23 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v21, (uint64_t)&v74, v19, v20)
               && ((unint64_t)v74 & v22) == v22;
            if (v23)
            {
              morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v72 + 16, &v74);
              if (*(char *)(a3 + 23) < 0) {
                operator delete(*(void **)a3);
              }
              *(_OWORD *)a3 = v74;
              *(void *)(a3 + 16) = v75;
              break;
            }
          }
          npc<morphun::Token const>(v72);
          *((void *)&v24 + 1) = *((void *)&v72 + 1);
          *(void *)&long long v24 = *(void *)(v72 + 80);
          long long v72 = v24;
          uint64_t v17 = *(void *)(v15 + 16);
          if (v17) {
LABEL_28:
          }
            uint64_t v17 = *(void *)(v17 + 80);
        }
        uint64_t v25 = *(unsigned __int8 *)(a3 + 23);
        char v26 = v25;
        uint64_t v27 = *(void *)(a3 + 8);
        if ((v25 & 0x80u) == 0) {
          uint64_t v28 = *(unsigned __int8 *)(a3 + 23);
        }
        else {
          uint64_t v28 = *(void *)(a3 + 8);
        }
        if (!v28)
        {
          long long v73 = *(_OWORD *)(v15 + 8);
          uint64_t v29 = *((void *)&v73 + 1);
          if (!*((void *)&v73 + 1)) {
            goto LABEL_41;
          }
LABEL_40:
          uint64_t v29 = *(void *)(v29 + 80);
LABEL_41:
          while (v29 != (void)v73)
          {
            if ((void)v73
            {
              morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v73 + 16, &v74);
              if (*(char *)(a3 + 23) < 0) {
                operator delete(*(void **)a3);
              }
              *(_OWORD *)a3 = v74;
              *(void *)(a3 + 16) = v75;
              break;
            }
            npc<morphun::Token const>(v73);
            *((void *)&v30 + 1) = *((void *)&v73 + 1);
            *(void *)&long long v30 = *(void *)(v73 + 80);
            long long v73 = v30;
            uint64_t v29 = *(void *)(v15 + 16);
            if (v29) {
              goto LABEL_40;
            }
          }
          uint64_t v25 = *(unsigned __int8 *)(a3 + 23);
          uint64_t v27 = *(void *)(a3 + 8);
          char v26 = *(unsigned char *)(a3 + 23);
        }
        if (v26 < 0) {
          uint64_t v25 = v27;
        }
        if (!v25)
        {
          uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 104))(v16);
          if (!v31)
          {
            uint64_t v70 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(v70);
          }
          uint64_t v32 = *(void *)(v31 + 80);
          if (!v32)
          {
            uint64_t v71 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(v71);
          }
          {
            operator new();
          }
          uint64_t v33 = (morphun::grammar::synthesis::GrammemeConstants **)npc<std::set<std::u16string_view>>(morphun::grammar::synthesis::MASCULINE_SUFFIXES(void)::MASCULINE_SUFFIXES_);
          std::basic_string<char16_t>::size_type v36 = *v33;
          std::basic_string<char16_t>::size_type v34 = (morphun::grammar::synthesis::GrammemeConstants *)(v33 + 1);
          uint64_t v35 = v36;
          if (v36 != v34)
          {
            unint64_t v37 = *(unsigned __int8 *)(v32 + 63);
            if ((v37 & 0x80u) == 0) {
              uint64_t v38 = v32 + 40;
            }
            else {
              uint64_t v38 = *(void *)(v32 + 40);
            }
            if ((v37 & 0x80u) != 0) {
              unint64_t v37 = *(void *)(v32 + 48);
            }
            uint64_t v39 = v38 + 2 * v37;
            while (1)
            {
              unint64_t v40 = *((void *)v35 + 5);
              if (v37 >= v40)
              {
                if (!v40) {
                  break;
                }
                std::basic_string<char16_t>::size_type v41 = (unsigned __int16 *)*((void *)v35 + 4);
                uint64_t v42 = -(uint64_t)v40;
                do
                {
                  int v43 = *(unsigned __int16 *)(v39 + 2 * v42);
                  int v45 = *v41++;
                  int v44 = v45;
                }
                while (v45 == v43 && v42++ != -1);
                if (v44 == v43) {
                  break;
                }
              }
              unint64_t v47 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v35 + 1);
              if (v47)
              {
                do
                {
                  unint64_t v48 = v47;
                  unint64_t v47 = *(morphun::grammar::synthesis::GrammemeConstants **)v47;
                }
                while (v47);
              }
              else
              {
                do
                {
                  unint64_t v48 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v35 + 2);
                  BOOL v23 = *(void *)v48 == (void)v35;
                  uint64_t v35 = v48;
                }
                while (!v23);
              }
              uint64_t v35 = v48;
              if (v48 == v34) {
                goto LABEL_80;
              }
            }
            unint64_t v49 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v34);
            std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v49);
          }
LABEL_80:
          uint64_t v50 = *(unsigned __int8 *)(a3 + 23);
          if ((v50 & 0x80u) != 0) {
            uint64_t v50 = *(void *)(a3 + 8);
          }
          if (!v50)
          {
            {
              operator new();
            }
            std::basic_string<char16_t>::size_type v52 = (morphun::grammar::synthesis::GrammemeConstants **)npc<std::set<std::u16string_view>>(morphun::grammar::synthesis::FEMININE_SUFFIXES(void)::FEMININE_SUFFIXES_);
            char v55 = *v52;
            uint64_t v53 = (morphun::grammar::synthesis::GrammemeConstants *)(v52 + 1);
            int v54 = v55;
            if (v55 != v53)
            {
              unint64_t v56 = *(unsigned __int8 *)(v32 + 63);
              if ((v56 & 0x80u) == 0) {
                uint64_t v57 = v32 + 40;
              }
              else {
                uint64_t v57 = *(void *)(v32 + 40);
              }
              if ((v56 & 0x80u) != 0) {
                unint64_t v56 = *(void *)(v32 + 48);
              }
              uint64_t v58 = v57 + 2 * v56;
              while (1)
              {
                unint64_t v59 = *((void *)v54 + 5);
                if (v56 >= v59)
                {
                  if (!v59) {
                    break;
                  }
                  uint64_t v60 = (unsigned __int16 *)*((void *)v54 + 4);
                  uint64_t v61 = -(uint64_t)v59;
                  do
                  {
                    int v62 = *(unsigned __int16 *)(v58 + 2 * v61);
                    int v64 = *v60++;
                    int v63 = v64;
                  }
                  while (v64 == v62 && v61++ != -1);
                  if (v63 == v62) {
                    break;
                  }
                }
                int v66 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v54 + 1);
                if (v66)
                {
                  do
                  {
                    int v67 = v66;
                    int v66 = *(morphun::grammar::synthesis::GrammemeConstants **)v66;
                  }
                  while (v66);
                }
                else
                {
                  do
                  {
                    int v67 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v54 + 2);
                    BOOL v23 = *(void *)v67 == (void)v54;
                    int v54 = v67;
                  }
                  while (!v23);
                }
                int v54 = v67;
                if (v67 == v53) {
                  goto LABEL_83;
                }
              }
              uint64_t v68 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v53);
              std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v68);
            }
          }
        }
LABEL_83:
        int v7 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 16))(v16);
        uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
        uint64_t v10 = *(void *)(a3 + 8);
        char v9 = *(unsigned char *)(a3 + 23);
      }
    }
    if (v9 < 0) {
      uint64_t v8 = v10;
    }
    if (!v8)
    {
      int v51 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v7);
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v51);
    }
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
}

void sub_1D2D2A220(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v3, 0x1020C4062D53EE8);
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D2A370(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HiGrammarSynthesizer_GenderLookupFunction::~HiGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::HiGrammarSynthesizer_GenderLookupFunction *this)
{
  morphun::grammar::synthesis::HiGrammarSynthesizer_GenderLookupFunction::~HiGrammarSynthesizer_GenderLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0CEE0;
  uint64_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FA708;
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::dialog::language::TrCommonConceptFactory::createAndList()
{
}

void sub_1D2D2A558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D2A5DC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::TrCommonConceptFactory::createOrList()
{
}

void sub_1D2D2A690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::TrCommonConceptFactory::~TrCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05C68);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05C68);
}

void sub_1D2D2A760(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D2A7C4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL morphun::tokenizer::TokenUtil::isSignificant(unsigned __int16 *a1, unint64_t a2)
{
  if (a2 > 1) {
    return 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v3 = *a1;
  {
      operator new();
  }
  uint64_t v4 = (void *)npc<icu4cxx::UnicodeSet const>(morphun::tokenizer::TokenUtil::SIGNIFICANT_CHARACTERS(void)::SIGNIFICANT_CHARACTERS_);
  return MEMORY[0x1D942C150](*v4, v3) != 0;
}

void sub_1D2D2A8A4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_yue_CN::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696DD30;
  uint64_t v4 = L"yue_Hans";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t morphun::grammar::synthesis::NbGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[4];
  npc<morphun::dialog::SemanticFeature const>(v4);
  uint64_t v5 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v4);
  int Count = morphun::grammar::synthesis::NbGrammarSynthesizer::getCount(v5);
  if (!Count)
  {
    Featureint Value = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 17), a2);
    if (!FeatureValue) {
      goto LABEL_6;
    }
    uint64_t v8 = FeatureValue;
    char v9 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)FeatureValue + 32))(FeatureValue);
    int Count = morphun::grammar::synthesis::NbGrammarSynthesizer::getCount(v9);
    (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
  }
  if (Count == 2)
  {
    uint64_t v10 = a1 + 14;
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v11 = a1[3];
  npc<morphun::dialog::SemanticFeature const>(v11);
  uint64_t v12 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v11);
  int Gender = morphun::grammar::synthesis::NbGrammarSynthesizer::getGender(v12);
  if (!Gender)
  {
    uint64_t v14 = morphun::dialog::DictionaryLookupFunction::getFeatureValue((uint64_t)(a1 + 43), a2);
    if (!v14)
    {
LABEL_12:
      uint64_t v10 = a1 + 5;
      goto LABEL_14;
    }
    uint64_t v15 = v14;
    uint64_t v16 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)v14 + 32))(v14);
    int Gender = morphun::grammar::synthesis::NbGrammarSynthesizer::getGender(v16);
    (*(void (**)(uint64_t))(*(void *)v15 + 16))(v15);
  }
  if (Gender != 2)
  {
    if (Gender == 3)
    {
      uint64_t v10 = a1 + 11;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  uint64_t v10 = a1 + 8;
LABEL_14:
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, void *))(*a1 + 32);

  return v17(a1, a2, v10);
}

void sub_1D2D2AB54(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D2ABD4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NbGrammarSynthesizer_ArticleLookupFunction::~NbGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::NbGrammarSynthesizer_ArticleLookupFunction *this)
{
  morphun::grammar::synthesis::NbGrammarSynthesizer_ArticleLookupFunction::~NbGrammarSynthesizer_ArticleLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  *(void *)this = &off_1F2A0D450;
  *((void *)this + 43) = &unk_1F2A095F0;
  uint64_t v2 = (void *)*((void *)this + 65);
  if (v2)
  {
    *((void *)this + 66) = v2;
    operator delete(v2);
  }
  long long v3 = *((void *)this + 63);
  *((void *)this + 63) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 44) = &unk_1F2A0FEF8;
  *((void *)this + 17) = &unk_1F2A095F0;
  uint64_t v4 = (void *)*((void *)this + 39);
  if (v4)
  {
    *((void *)this + 40) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *((void *)this + 37);
  *((void *)this + 37) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  }
  *((void *)this + 18) = &unk_1F2A0FEF8;
  if (*((char *)this + 135) < 0) {
    operator delete(*((void **)this + 14));
  }
  if (*((char *)this + 111) < 0) {
    operator delete(*((void **)this + 11));
  }
  if (*((char *)this + 87) < 0) {
    operator delete(*((void **)this + 8));
  }
  if (*((char *)this + 63) < 0) {
    operator delete(*((void **)this + 5));
  }
}

void morphun::grammar::synthesis::NbGrammarSynthesizer_ArticleLookupFunction::NbGrammarSynthesizer_ArticleLookupFunction(uint64_t a1, uint64_t a2, char a3, long long *a4, long long *a5, long long *a6, long long *a7)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1F29FAFB8;
  uint64_t v12 = morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A064F8, a2, a3, 1);
  *(void *)a1 = &off_1F2A0D450;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 40), *(const std::basic_string<char16_t>::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v13 = *a4;
    *(void *)(a1 + 56) = *((void *)a4 + 2);
    *(_OWORD *)(a1 + 40) = v13;
  }
  if (*((char *)a5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 64), *(const std::basic_string<char16_t>::value_type **)a5, *((void *)a5 + 1));
  }
  else
  {
    long long v14 = *a5;
    *(void *)(a1 + 80) = *((void *)a5 + 2);
    *(_OWORD *)(a1 + 64) = v14;
  }
  if (*((char *)a6 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 88), *(const std::basic_string<char16_t>::value_type **)a6, *((void *)a6 + 1));
  }
  else
  {
    long long v15 = *a6;
    *(void *)(a1 + 104) = *((void *)a6 + 2);
    *(_OWORD *)(a1 + 88) = v15;
  }
  if (*((char *)a7 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 112), *(const std::basic_string<char16_t>::value_type **)a7, *((void *)a7 + 1));
  }
  else
  {
    long long v16 = *a7;
    *(void *)(a1 + 128) = *((void *)a7 + 2);
    *(_OWORD *)(a1 + 112) = v16;
  }
  uint64_t v17 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::NORWEGIAN(v12);
  uint64_t v18 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v17);
  if (*(char *)(v18 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v18, *(void *)(v18 + 8));
  }
  else
  {
    long long v19 = *(_OWORD *)v18;
    __dst.__r_.__value_.__r.__words[2] = *(void *)(v18 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v19;
  }
  uint64_t v20 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v18);
  if (*(char *)(v20 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v27, *(const std::basic_string<char16_t>::value_type **)v20, *(void *)(v20 + 8));
  }
  else
  {
    long long v21 = *(_OWORD *)v20;
    v27.__r_.__value_.__r.__words[2] = *(void *)(v20 + 16);
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v21;
  }
  uint64_t v22 = 0;
  BOOL v23 = 0;
  v24[0] = 0;
  v24[1] = &v22;
  char v25 = 0;
  uint64_t v22 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  BOOL v23 = v22;
  v24[0] = v22 + 2;
  BOOL v23 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v24, (long long *)&__dst, &v28, v22);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((void *)(a1 + 136), v17);
}

void sub_1D2D2B214(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (v20[111] < 0) {
    operator delete(*v22);
  }
  if (v20[87] < 0) {
    operator delete(*v21);
  }
  if (v20[63] < 0) {
    operator delete(*a9);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::determine(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if (v4)
  {
    morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, (void *)a3);
    uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
    char v9 = v8;
    uint64_t v10 = *(void *)(a3 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v11 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      uint64_t v11 = *(void *)(a3 + 8);
    }
    if (!v11)
    {
      uint64_t v12 = *(unsigned __int8 *)(a2 + 23);
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(a2 + 8);
      }
      if (v12)
      {
        uint64_t v13 = a1[26];
        if (!v13
          || (uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 24))(v13, a2), (v15 = v14) == 0))
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        uint64_t v16 = v14;
        long long v72 = *(_OWORD *)(v14 + 8);
        uint64_t v17 = *((void *)&v72 + 1);
        if (*((void *)&v72 + 1)) {
          goto LABEL_28;
        }
        while (v17 != (void)v72)
        {
          if ((void)v72
          {
            int v18 = *(char *)(v72 + 63);
            long long v19 = v18 >= 0 ? (const UChar *)(v72 + 40) : *(const UChar **)(v72 + 40);
            uint64_t v20 = v18 >= 0 ? *(unsigned __int8 *)(v72 + 63) : *(void *)(v72 + 48);
            uint64_t v21 = a1[27];
            uint64_t v22 = a1[28];
            *(void *)&long long __dst = 0;
            BOOL v23 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v21, (uint64_t)&__dst, v19, v20)
               && ((unint64_t)__dst & v22) == v22;
            if (v23)
            {
              morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v72 + 16, &__dst);
              if (*(char *)(a3 + 23) < 0) {
                operator delete(*(void **)a3);
              }
              *(_OWORD *)a3 = __dst;
              *(void *)(a3 + 16) = v75;
              break;
            }
          }
          npc<morphun::Token const>(v72);
          *((void *)&v24 + 1) = *((void *)&v72 + 1);
          *(void *)&long long v24 = *(void *)(v72 + 80);
          long long v72 = v24;
          uint64_t v17 = *(void *)(v15 + 16);
          if (v17) {
LABEL_28:
          }
            uint64_t v17 = *(void *)(v17 + 80);
        }
        uint64_t v25 = *(unsigned __int8 *)(a3 + 23);
        char v26 = v25;
        uint64_t v27 = *(void *)(a3 + 8);
        if ((v25 & 0x80u) == 0) {
          uint64_t v28 = *(unsigned __int8 *)(a3 + 23);
        }
        else {
          uint64_t v28 = *(void *)(a3 + 8);
        }
        if (!v28)
        {
          long long v73 = *(_OWORD *)(v15 + 8);
          uint64_t v29 = *((void *)&v73 + 1);
          if (!*((void *)&v73 + 1)) {
            goto LABEL_41;
          }
LABEL_40:
          uint64_t v29 = *(void *)(v29 + 80);
LABEL_41:
          while (v29 != (void)v73)
          {
            if ((void)v73
            {
              morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, v73 + 16, &__dst);
              if (*(char *)(a3 + 23) < 0) {
                operator delete(*(void **)a3);
              }
              *(_OWORD *)a3 = __dst;
              *(void *)(a3 + 16) = v75;
              break;
            }
            npc<morphun::Token const>(v73);
            *((void *)&v30 + 1) = *((void *)&v73 + 1);
            *(void *)&long long v30 = *(void *)(v73 + 80);
            long long v73 = v30;
            uint64_t v29 = *(void *)(v15 + 16);
            if (v29) {
              goto LABEL_40;
            }
          }
          uint64_t v25 = *(unsigned __int8 *)(a3 + 23);
          uint64_t v27 = *(void *)(a3 + 8);
          char v26 = *(unsigned char *)(a3 + 23);
        }
        if (v26 < 0) {
          uint64_t v25 = v27;
        }
        if (!v25)
        {
          uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 104))(v16);
          if (!v31)
          {
            uint64_t v70 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(v70);
          }
          uint64_t v32 = *(void *)(v31 + 80);
          if (!v32)
          {
            uint64_t v71 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
            morphun::exception::NullPointerException::NullPointerException(v71);
          }
          {
            operator new();
          }
          uint64_t v33 = (morphun::grammar::synthesis::GrammemeConstants **)npc<std::set<std::u16string_view>>(morphun::grammar::synthesis::MASCULINE_SUFFIXES(void)::MASCULINE_SUFFIXES_);
          std::basic_string<char16_t>::size_type v36 = *v33;
          std::basic_string<char16_t>::size_type v34 = (morphun::grammar::synthesis::GrammemeConstants *)(v33 + 1);
          uint64_t v35 = v36;
          if (v36 != v34)
          {
            unint64_t v37 = *(unsigned __int8 *)(v32 + 63);
            if ((v37 & 0x80u) == 0) {
              uint64_t v38 = v32 + 40;
            }
            else {
              uint64_t v38 = *(void *)(v32 + 40);
            }
            if ((v37 & 0x80u) != 0) {
              unint64_t v37 = *(void *)(v32 + 48);
            }
            uint64_t v39 = v38 + 2 * v37;
            while (1)
            {
              unint64_t v40 = *((void *)v35 + 5);
              if (v37 >= v40)
              {
                if (!v40) {
                  break;
                }
                std::basic_string<char16_t>::size_type v41 = (unsigned __int16 *)*((void *)v35 + 4);
                uint64_t v42 = -(uint64_t)v40;
                do
                {
                  int v43 = *(unsigned __int16 *)(v39 + 2 * v42);
                  int v45 = *v41++;
                  int v44 = v45;
                }
                while (v45 == v43 && v42++ != -1);
                if (v44 == v43) {
                  break;
                }
              }
              unint64_t v47 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v35 + 1);
              if (v47)
              {
                do
                {
                  unint64_t v48 = v47;
                  unint64_t v47 = *(morphun::grammar::synthesis::GrammemeConstants **)v47;
                }
                while (v47);
              }
              else
              {
                do
                {
                  unint64_t v48 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v35 + 2);
                  BOOL v23 = *(void *)v48 == (void)v35;
                  uint64_t v35 = v48;
                }
                while (!v23);
              }
              uint64_t v35 = v48;
              if (v48 == v34) {
                goto LABEL_80;
              }
            }
            unint64_t v49 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v34);
            std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v49);
          }
LABEL_80:
          uint64_t v50 = *(unsigned __int8 *)(a3 + 23);
          if ((v50 & 0x80u) != 0) {
            uint64_t v50 = *(void *)(a3 + 8);
          }
          if (!v50)
          {
            {
              operator new();
            }
            std::basic_string<char16_t>::size_type v52 = (morphun::grammar::synthesis::GrammemeConstants **)npc<std::set<std::u16string_view>>(morphun::grammar::synthesis::FEMININE_SUFFIXES(void)::FEMININE_SUFFIXES_);
            char v55 = *v52;
            uint64_t v53 = (morphun::grammar::synthesis::GrammemeConstants *)(v52 + 1);
            int v54 = v55;
            if (v55 != v53)
            {
              unint64_t v56 = *(unsigned __int8 *)(v32 + 63);
              if ((v56 & 0x80u) == 0) {
                uint64_t v57 = v32 + 40;
              }
              else {
                uint64_t v57 = *(void *)(v32 + 40);
              }
              if ((v56 & 0x80u) != 0) {
                unint64_t v56 = *(void *)(v32 + 48);
              }
              uint64_t v58 = v57 + 2 * v56;
              while (1)
              {
                unint64_t v59 = *((void *)v54 + 5);
                if (v56 >= v59)
                {
                  if (!v59) {
                    break;
                  }
                  uint64_t v60 = (unsigned __int16 *)*((void *)v54 + 4);
                  uint64_t v61 = -(uint64_t)v59;
                  do
                  {
                    int v62 = *(unsigned __int16 *)(v58 + 2 * v61);
                    int v64 = *v60++;
                    int v63 = v64;
                  }
                  while (v64 == v62 && v61++ != -1);
                  if (v63 == v62) {
                    break;
                  }
                }
                int v66 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v54 + 1);
                if (v66)
                {
                  do
                  {
                    int v67 = v66;
                    int v66 = *(morphun::grammar::synthesis::GrammemeConstants **)v66;
                  }
                  while (v66);
                }
                else
                {
                  do
                  {
                    int v67 = (morphun::grammar::synthesis::GrammemeConstants *)*((void *)v54 + 2);
                    BOOL v23 = *(void *)v67 == (void)v54;
                    int v54 = v67;
                  }
                  while (!v23);
                }
                int v54 = v67;
                if (v67 == v53) {
                  goto LABEL_83;
                }
              }
              uint64_t v68 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(v53);
              std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v68);
            }
          }
        }
LABEL_83:
        int v7 = (morphun::grammar::synthesis::GrammemeConstants *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 16))(v16);
        uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
        uint64_t v10 = *(void *)(a3 + 8);
        char v9 = *(unsigned char *)(a3 + 23);
      }
    }
    if (v9 < 0) {
      uint64_t v8 = v10;
    }
    if (!v8)
    {
      int v51 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v7);
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v51);
    }
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
}

void sub_1D2D2BA70(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v3, 0x1020C4062D53EE8);
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void sub_1D2D2BBC0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::~FrGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction *this)
{
  morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::~FrGrammarSynthesizer_GenderLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(void *)this = &off_1F2A0CE10;
  uint64_t v2 = *((void *)this + 26);
  *((void *)this + 26) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  *(void *)this = &unk_1F29FA598;
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction::FrGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::FrGrammarSynthesizer_GenderLookupFunction *this)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FA540;
  uint64_t v2 = (const morphun::util::ULocale *)morphun::util::LocaleUtils::FRENCH(this);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "m");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v6, (char *)L"feminine");
  long long __p = 0uLL;
  v8[0] = 0;
  p_p = &__p;
  char v4 = 0;
  *(void *)&long long __p = operator new(0x30uLL);
  *((void *)&__p + 1) = __p;
  v8[0] = __p + 48;
  *((void *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v8, &__dst, &__p, (std::basic_string<char16_t> *)__p);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)this, (uint64_t *)&off_1F2A061A0, v2);
}

void sub_1D2D2BF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0) {
    operator delete(__p);
  }
  uint64_t v27 = *((void *)v25 + 26);
  *((void *)v25 + 26) = 0;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 16))(v27);
  }
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v25, (uint64_t *)&off_1F2A061A0);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::morphun::inflection::pronoun::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  void v3[2] = xmmword_1E696DF08;
  _OWORD v3[3] = *(_OWORD *)&off_1E696DF18;
  _OWORD v3[4] = xmmword_1E696DF28;
  v3[5] = unk_1E696DF38;
  v3[0] = xmmword_1E696DEE8;
  v3[1] = unk_1E696DEF8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 4);
}

void morphun::tokenizer::TokenExtractorMecab::createIterator()
{
}

void sub_1D2D2C158(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 119) < 0) {
    operator delete(*v3);
  }
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator(v2);
  MEMORY[0x1D942B8B0](v1, 0x10F3C40CC98BFB7);
  _Unwind_Resume(a1);
}

void morphun::tokenizer::TokenExtractorMecab::~TokenExtractorMecab(morphun::tokenizer::TokenExtractorMecab *this)
{
  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::TokenExtractorMecab *)((char *)this + 160));
  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A08130);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  icu4cxx::UnicodeSet::~UnicodeSet((morphun::tokenizer::TokenExtractorMecab *)((char *)this + 160));

  morphun::tokenizer::TokenExtractor::~TokenExtractor(this, (uint64_t *)&off_1F2A08130);
}

uint64_t morphun::tokenizer::TokenExtractorMecab::TokenExtractorMecab(uint64_t a1, morphun::util::ULocale *a2, morphun::tokenizer *a3, void *a4, uint64_t a5)
{
  *(void *)a1 = &unk_1F2A08C08;
  uint64_t WordsToNotSplit = morphun::tokenizer::TokenExtractor::createWordsToNotSplit((uint64_t)a2, a5);
  morphun::tokenizer::TokenExtractor::TokenExtractor((uint64_t *)a1, (uint64_t *)&off_1F2A08130, a2, a5, WordsToNotSplit);
  *(void *)a1 = &off_1F2A116D0;
  *(_DWORD *)(a1 + 152) = a3;
  *(unsigned char *)(a1 + 168) = 1;
  *(void *)(a1 + 160) = MEMORY[0x1D942C110](*a4);
  *(unsigned char *)(a1 + 168) = 1;
  uint64_t v11 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a5, L"unified.chinese.tokenizer.active", 0x20uLL);
  if ((void *)(a5 + 8) == v11) {
    goto LABEL_13;
  }
  uint64_t v12 = (__int16 *)v11[6];
  __int16 v13 = *v12;
  if (!*v12) {
    goto LABEL_14;
  }
  uint64_t v14 = 0;
  do
    uint64_t v15 = v14 + 1;
  while (v12[++v14]);
  if (v15 != 4)
  {
LABEL_13:
    LOBYTE(v13) = 0;
    goto LABEL_14;
  }
  uint64_t v17 = 0;
  do
  {
    LOBYTE(v13) = word_1D2ED013A[v17] == v12[v17];
    BOOL v18 = word_1D2ED013A[v17] != v12[v17] || v17 == 3;
    ++v17;
  }
  while (!v18);
LABEL_14:
  *(unsigned char *)(a1 + 176) = v13;
  v41[0] = 0;
  v41[1] = 0;
  uint64_t v42 = 0;
  long long v19 = std::__tree<std::__value_type<std::u16string_view,std::u16string_view>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,std::u16string_view>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,std::u16string_view>>>::find<std::u16string_view>(a5, (unsigned __int16 *)"t", 0x19uLL);
  if ((void *)(a5 + 8) == v19 || !*(_WORD *)v19[6])
  {
    int st_ino = 0;
    uint64_t v22 = 0;
    LODWORD(v20) = 0;
  }
  else
  {
    morphun::tokenizer::TokenExtractor::getRequiredKeyAsPath((uint64_t)&__p, a2, a5, (unsigned __int16 *)"t", 0x19uLL);
    uint64_t v42 = *(void *)&__p.st_uid;
    *(_OWORD *)std::basic_string<char16_t>::size_type v41 = *(_OWORD *)&__p.st_dev;
    uint64_t v20 = HIBYTE(*(void *)&__p.st_uid);
    int st_ino = __p.st_ino;
    uint64_t v22 = *(void ***)&__p.st_dev;
  }
  memset(&v44, 0, sizeof(v44));
  if ((v20 & 0x80u) == 0) {
    BOOL v23 = v41;
  }
  else {
    BOOL v23 = v22;
  }
  if ((v20 & 0x80u) == 0) {
    int v24 = v20;
  }
  else {
    int v24 = st_ino;
  }
  morphun::util::StringViewUtils::convert(&v44, (uint64_t)v23, v24);
  uint64_t v25 = (morphun::util::ResourceLocator *)pthread_mutex_lock((pthread_mutex_t *)&morphun::tokenizer::tokenizersMecab[12 * a3 + 4]);
  char v26 = &morphun::tokenizer::tokenizersMecab[12 * a3];
  uint64_t v28 = v26[2];
  uint64_t v27 = (char **)(v26 + 2);
  if (!v28)
  {
    std::string::size_type size = HIBYTE(v44.__r_.__value_.__r.__words[2]);
    char v30 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
    if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v44.__r_.__value_.__l.__size_;
    }
    if (!size)
    {
      uint64_t v31 = (char *)morphun::util::ResourceLocator::APPLE_FRAMEWORKS_ROOT_DIRECTORY(v25);
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, v31);
      if ((__p.st_gid & 0x80000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = *(stat **)&__p.st_dev;
      }
      if ((__p.st_gid & 0x80000000) == 0) {
        int st_gid_high = HIBYTE(__p.st_gid);
      }
      else {
        int st_gid_high = __p.st_ino;
      }
      morphun::util::StringViewUtils::convert(&v44, (uint64_t)p_p, st_gid_high);
      if (SHIBYTE(__p.st_gid) < 0) {
        operator delete(*(void **)&__p.st_dev);
      }
      std::string::append(&v44, (const std::string::value_type *)morphun::tokenizer::tokenizersMecab[12 * a3 + 3]);
      char v30 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
    }
    memset(&__p, 0, sizeof(__p));
    if (v30 >= 0) {
      std::basic_string<char16_t>::size_type v34 = &v44;
    }
    else {
      std::basic_string<char16_t>::size_type v34 = (std::string *)v44.__r_.__value_.__r.__words[0];
    }
    if (stat((const char *)v34, &__p) || (__p.st_mode & 0xF000) != 0x4000)
    {
      exception = __cxa_allocate_exception(0x38uLL);
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v39 = &v44;
      }
      else {
        uint64_t v39 = (std::string *)v44.__r_.__value_.__r.__words[0];
      }
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int32_t v40 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
      }
      else {
        int32_t v40 = v44.__r_.__value_.__r.__words[1];
      }
      morphun::util::StringViewUtils::to_u16string((const char *)v39, v40, &v43);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&__p, &v43, L" was not found");
      morphun::exception::FileNotFoundException::FileNotFoundException((uint64_t)exception, (long long *)&__p.st_dev);
    }
    if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v35 = &v44;
    }
    else {
      uint64_t v35 = (std::string *)v44.__r_.__value_.__r.__words[0];
    }
    *uint64_t v27 = strdup((const char *)v35);
  }
  pthread_mutex_unlock((pthread_mutex_t *)&morphun::tokenizer::tokenizersMecab[12 * a3 + 4]);
  uint64_t v36 = morphun::tokenizer::checkoutCachedMecabTokenizer(a3);
  morphun::tokenizer::checkinCachedMecabTokenizer(v36, a3);
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v42) < 0) {
    operator delete(v41[0]);
  }
  return a1;
}

void sub_1D2D2C5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a21 < 0)
  {
    operator delete(a16);
    if ((v36 & 1) == 0)
    {
LABEL_8:
      pthread_mutex_unlock(v34);
      if (a27 < 0) {
        operator delete(a22);
      }
      if (a14 < 0) {
        operator delete(a9);
      }
      icu4cxx::UnicodeSet::~UnicodeSet((icu4cxx::UnicodeSet *)(v33 + 160));
      morphun::tokenizer::TokenExtractor::~TokenExtractor((morphun::tokenizer::TokenExtractor *)v33, (uint64_t *)&off_1F2A08130);
      _Unwind_Resume(a1);
    }
  }
  else if (!v36)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v35);
  goto LABEL_8;
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_DefinitenessLookupFunction::determine(uint64_t a1@<X0>, uint64_t a2@<X1>, std::basic_string<char16_t> *a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine(a1, a2, __p);
  uint64_t v6 = (void *)HIBYTE(v19);
  int v7 = SHIBYTE(v19);
  if (v19 < 0) {
    uint64_t v6 = __p[1];
  }
  if (v6)
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
    a3->__r_.__value_.__r.__words[2] = v19;
    return;
  }
  uint64_t v17 = 0;
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    char v9 = (const UChar *)a2;
  }
  else {
    char v9 = *(const UChar **)a2;
  }
  if (v8 >= 0) {
    uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v10 = *(void *)(a2 + 8);
  }
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*(void *)(a1 + 208), (uint64_t)&v17, v9, v10);
  if (CombinedBinaryType)
  {
    if ((*(void *)(a1 + 216) & v17) != 0)
    {
      uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(CombinedBinaryType);
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v13 = *(unsigned __int8 *)(a2 + 23);
    int v14 = (char)v13;
    if ((v13 & 0x80u) != 0) {
      uint64_t v13 = *(void *)(a2 + 8);
    }
    if (v13)
    {
      uint64_t v15 = *(unsigned __int16 **)a2;
      if (v14 >= 0) {
        uint64_t v15 = (unsigned __int16 *)a2;
      }
      int v16 = *v15;
      if (v16 == 1514 || v16 == 1492)
      {
        uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE(0);
LABEL_22:
        if (*(char *)(v12 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(a3, *(const std::basic_string<char16_t>::value_type **)v12, *(void *)(v12 + 8));
        }
        else
        {
          *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)v12;
          a3->__r_.__value_.__r.__words[2] = *(void *)(v12 + 16);
        }
        goto LABEL_26;
      }
    }
  }
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
LABEL_26:
  if (v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2D2C800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (v10 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_DefinitenessLookupFunction::~HeGrammarSynthesizer_DefinitenessLookupFunction(morphun::grammar::synthesis::HeGrammarSynthesizer_DefinitenessLookupFunction *this)
{
  *(void *)this = &unk_1F29FB7D0;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &unk_1F29FB7D0;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

uint64_t morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleElidedFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(v4 + 8);
  }
  if (v5)
  {
    uint64_t v6 = v4;
    int v7 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FRENCH((morphun::util::LocaleUtils *)v4);
    int isStartsWithVowel = morphun::dictionary::PhraseProperties::isStartsWithVowel(v7, v6);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
    if (isStartsWithVowel) {
      uint64_t v10 = a1 + 72;
    }
    else {
      uint64_t v10 = a1 + 48;
    }
  }
  else
  {
    uint64_t v10 = a1 + 24;
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
  }

  return v9(a1, a2, v10);
}

void morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleElidedFunction::~FrGrammarSynthesizer_ArticleElidedFunction(void **this)
{
  *this = &off_1F2A0D2F8;
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }

  JUMPOUT(0x1D942B8B0);
}

{
  *this = &off_1F2A0D2F8;
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

std::basic_string<char16_t> *morphun::grammar::synthesis::FrGrammarSynthesizer_ArticleElidedFunction::FrGrammarSynthesizer_ArticleElidedFunction(std::basic_string<char16_t> *a1, uint64_t a2, uint64_t a3, long long *a4, long long *a5, long long *a6)
{
  a1->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&unk_1F29FAE18;
  uint64_t v10 = (std::basic_string<char16_t> *)morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A06478, a2, a3 != 0, 0);
  v10->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&off_1F2A0D2F8;
  if (*((char *)a4 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v10 + 1, *(const std::basic_string<char16_t>::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v11 = *a4;
    v10[1].__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v10[1].__r_.__value_.__l.__data_ = v11;
  }
  if (*((char *)a5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(a1 + 2, *(const std::basic_string<char16_t>::value_type **)a5, *((void *)a5 + 1));
  }
  else
  {
    long long v12 = *a5;
    a1[2].__r_.__value_.__r.__words[2] = *((void *)a5 + 2);
    *(_OWORD *)&a1[2].__r_.__value_.__l.__data_ = v12;
  }
  uint64_t v13 = a1 + 3;
  if (*((char *)a6 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v13, *(const std::basic_string<char16_t>::value_type **)a6, *((void *)a6 + 1));
  }
  else
  {
    long long v14 = *a6;
    a1[3].__r_.__value_.__r.__words[2] = *((void *)a6 + 2);
    *(_OWORD *)&v13->__r_.__value_.__l.__data_ = v14;
  }
  return a1;
}

void sub_1D2D2CC94(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 71) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void morphun::exception::IndexOutOfBoundsException::~IndexOutOfBoundsException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException(morphun::exception::IndexOutOfBoundsException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A114B8;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A114B8;
  return result;
}

void *morphun::exception::IndexOutOfBoundsException::IndexOutOfBoundsException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A114B8;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A114B8;
  return result;
}

uint64_t **com::apple::siri::tokenizer::data::config_et::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t morphun::tokenizer::locale::fi::FiTokenExtractorIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  *(_DWORD *)(a1 + 132) = 0;
  uint64_t result = morphun::tokenizer::ICUTokenExtractorIterator::reset();
  *(void *)(a1 + 112) = *(void *)(a1 + 104);
  *(_DWORD *)(a1 + 128) = 0;
  return result;
}

uint64_t morphun::tokenizer::locale::fi::FiTokenExtractorIterator::getNextBoundary(morphun::tokenizer::locale::fi::FiTokenExtractorIterator *this)
{
  long long v3 = (int **)((char *)this + 104);
  uint64_t v2 = *((void *)this + 13);
  uint64_t v4 = *((int *)this + 32);
  if ((int)v4 >= (int)((unint64_t)(*((void *)this + 14) - v2) >> 2))
  {
    *((void *)this + 14) = v2;
    *((_DWORD *)this + 32) = 0;
    uint64_t v6 = ubrk_next();
    if (v6 == -1)
    {
      return 0xFFFFFFFFLL;
    }
    else
    {
      uint64_t v5 = v6;
      uint64_t v7 = *((int *)this + 33);
      std::basic_string<char16_t>::size_type v8 = (v6 - v7);
      if ((int)v8 < 4) {
        goto LABEL_29;
      }
      if (*((char *)this + 79) < 0)
      {
        **((_WORD **)this + 7) = 0;
        *((void *)this + 8) = 0;
      }
      else
      {
        *((_WORD *)this + 28) = 0;
        *((unsigned char *)this + 79) = 0;
      }
      uint64_t v9 = *((void *)this + 5);
      std::basic_string<char16_t>::reserve((std::basic_string<char16_t> *)((char *)this + 56), v8);
      if ((int)v5 > (int)v7)
      {
        uint64_t v10 = (int)v5 - v7;
        long long v11 = (unsigned __int16 *)(v9 + 2 * v7);
        do
        {
          unsigned int v12 = *v11++;
          unsigned int v13 = MEMORY[0x1D942BD20](v12);
          morphun::util::StringUtils::appendCodePoint((std::basic_string<char16_t> *)((char *)this + 56), v13);
          --v10;
        }
        while (v10);
      }
      long long v14 = (char *)this + 80;
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)this + 80), (const std::basic_string<char16_t> *)((char *)this + 56));
      morphun::util::StringUtils::reverse((uint64_t)this + 80);
      if (*((char *)this + 79) < 0)
      {
        int v16 = (char *)*((void *)this + 7);
        unint64_t v15 = *((void *)this + 8);
      }
      else
      {
        unint64_t v15 = *((unsigned __int8 *)this + 79);
        int v16 = (char *)this + 56;
      }
      if (*((char *)this + 103) < 0)
      {
        long long v14 = (char *)*((void *)this + 10);
        unint64_t v17 = *((void *)this + 11);
      }
      else
      {
        unint64_t v17 = *((unsigned __int8 *)this + 103);
      }
      uint64_t v18 = morphun::tokenizer::locale::fi::FiSegment::FiSegment((uint64_t)v39, *((void *)this + 1), (uint64_t)v16, v15, (uint64_t)v14, v17, 0, v15, 1);
      if (v39[73])
      {
        morphun::tokenizer::locale::fi::FiSegment::addBoundaries(v18, v3);
      }
      else if ((int)v15 >= 6)
      {
        int v36 = v39;
        int v37 = -998637568;
        char v38 = 0;
        morphun::tokenizer::locale::fi::FiSuffixSplit::addBoundaries((uint64_t)&v36, v3, 0);
        if (!v38 && v15 != 6)
        {
          morphun::tokenizer::locale::fi::FiCompound::FiCompound((uint64_t)v35, (uint64_t)&v36);
          *((void *)this + 14) = *((void *)this + 13);
          morphun::tokenizer::locale::fi::FiCompound::addBoundaries((uint64_t)v35, 14, (uint64_t)v3);
        }
      }
      int64_t v19 = (char *)*((void *)this + 13);
      uint64_t v20 = (char *)*((void *)this + 14);
      if (v19 == v20)
      {
LABEL_29:
        *((_DWORD *)this + 33) = v5;
      }
      else
      {
        uint64_t v21 = (char *)*((void *)this + 13);
        do
        {
          *(_DWORD *)v21 += *((_DWORD *)this + 33);
          v21 += 4;
        }
        while (v21 != v20);
        unint64_t v22 = *((void *)this + 15);
        if ((unint64_t)v20 >= v22)
        {
          uint64_t v24 = (v20 - v19) >> 2;
          unint64_t v25 = v24 + 1;
          if ((unint64_t)(v24 + 1) >> 62) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v26 = v22 - (void)v19;
          if (v26 >> 1 > v25) {
            unint64_t v25 = v26 >> 1;
          }
          BOOL v27 = (unint64_t)v26 >= 0x7FFFFFFFFFFFFFFCLL;
          unint64_t v28 = 0x3FFFFFFFFFFFFFFFLL;
          if (!v27) {
            unint64_t v28 = v25;
          }
          if (v28)
          {
            unint64_t v28 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v28);
            int64_t v19 = (char *)*((void *)this + 13);
            uint64_t v20 = (char *)*((void *)this + 14);
          }
          else
          {
            uint64_t v29 = 0;
          }
          char v30 = (_DWORD *)(v28 + 4 * v24);
          unint64_t v31 = v28 + 4 * v29;
          _DWORD *v30 = v5;
          BOOL v23 = v30 + 1;
          while (v20 != v19)
          {
            int v32 = *((_DWORD *)v20 - 1);
            v20 -= 4;
            *--char v30 = v32;
          }
          *((void *)this + 13) = v30;
          *((void *)this + 14) = v23;
          *((void *)this + 15) = v31;
          if (v19) {
            operator delete(v19);
          }
        }
        else
        {
          *(_DWORD *)uint64_t v20 = v5;
          BOOL v23 = v20 + 4;
        }
        *((void *)this + 14) = v23;
        uint64_t v33 = *((int *)this + 32);
        *((_DWORD *)this + 32) = v33 + 1;
        *((_DWORD *)this + 33) = v5;
        return *(unsigned int *)(*((void *)this + 13) + 4 * v33);
      }
    }
  }
  else
  {
    *((_DWORD *)this + 32) = v4 + 1;
    return *(unsigned int *)(v2 + 4 * v4);
  }
  return v5;
}

void morphun::tokenizer::locale::fi::FiTokenExtractorIterator::~FiTokenExtractorIterator(morphun::tokenizer::locale::fi::FiTokenExtractorIterator *this)
{
  morphun::tokenizer::locale::fi::FiTokenExtractorIterator::~FiTokenExtractorIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;

  *(void *)this = &unk_1F2A11AD8;
  uint64_t v2 = (void *)*((void *)this + 13);
  if (v2)
  {
    *((void *)this + 14) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 103) < 0) {
    operator delete(*((void **)this + 10));
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator((morphun::tokenizer::locale::fi::FiTokenExtractorIterator *)((char *)this + 16));
}

BOOL morphun::util::UnicodeSetUtils::containsSome(void *a1, uint64_t a2, int a3)
{
  LODWORD(v6) = 0;
  do
  {
    int v7 = v6;
    if ((int)v6 >= a3) {
      break;
    }
    uint64_t v6 = (int)v6 + 1;
    uint64_t v8 = *(unsigned __int16 *)(a2 + 2 * v7);
    if ((v8 & 0xFC00) == 0xD800 && v6 != a3)
    {
      int v10 = *(unsigned __int16 *)(a2 + 2 * v6);
      BOOL v11 = (v10 & 0xFC00) == 56320;
      unsigned int v12 = v10 + (v8 << 10) - 56613888;
      if (v11) {
        LODWORD(v6) = v7 + 2;
      }
      if (v11) {
        uint64_t v8 = v12;
      }
      else {
        uint64_t v8 = *(unsigned __int16 *)(a2 + 2 * v7);
      }
    }
  }
  while (!MEMORY[0x1D942C150](*a1, v8));
  return v7 < a3;
}

uint64_t morphun::util::UnicodeSetUtils::removeSetFromString(uint64_t a1, void *a2, uint64_t a3, std::basic_string<char16_t>::size_type a4)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v7 = 0;
  morphun::util::UnicodeSetUtils::replaceSetFromString(a1, a2, a3, a4, (const std::basic_string<char16_t>::value_type *)__p, 0);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_1D2D2D4A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::util::UnicodeSetUtils::replaceSetFromString(uint64_t a1, void *a2, uint64_t a3, std::basic_string<char16_t>::size_type a4, const std::basic_string<char16_t>::value_type *a5, std::basic_string<char16_t>::size_type a6)
{
  if ((*(char *)(npc<std::basic_string<char16_t>>(a1) + 23) & 0x80000000) == 0)
  {
    *(_WORD *)a1 = 0;
    *(unsigned char *)(a1 + 23) = 0;
LABEL_4:
    unint64_t v12 = 10;
    goto LABEL_5;
  }
  **(_WORD **)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    goto LABEL_4;
  }
  unint64_t v12 = (*(void *)(a1 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
LABEL_5:
  if (a4 >= v12) {
    std::basic_string<char16_t>::reserve((std::basic_string<char16_t> *)a1, a4);
  }
  if ((int)a4 >= 1)
  {
    int v13 = 0;
    do
    {
      uint64_t v14 = morphun::util::StringViewUtils::codePointAt(a3, a4, v13);
      if (MEMORY[0x1D942C150](*a2, v14))
      {
        if (a6)
        {
          unint64_t v15 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(a1);
          std::basic_string<char16_t>::append(v15, a5, a6);
        }
      }
      else
      {
        morphun::util::StringUtils::appendCodePoint((std::basic_string<char16_t> *)a1, v14);
      }
      if (v14 < 0x10000) {
        int v16 = 1;
      }
      else {
        int v16 = 2;
      }
      v13 += v16;
    }
    while (v13 < (int)a4);
  }
  return a1;
}

void sub_1D2D2D628(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v4 = v3;
  memset(&v142, 0, sizeof(v142));
  char v5 = *(unsigned char *)(v3 + 23);
  uint64_t v6 = *(void *)(v3 + 8);
  if (v5 >= 0) {
    uint64_t v7 = (_WORD *)v3;
  }
  else {
    uint64_t v7 = *(_WORD **)v3;
  }
  if (v5 >= 0) {
    uint64_t v6 = *(unsigned __int8 *)(v3 + 23);
  }
  if (v6)
  {
    uint64_t v8 = v7;
    do
    {
      if (*v8 == 44) {
        goto LABEL_11;
      }
      ++v8;
      --v6;
    }
    while (v6);
    uint64_t v8 = 0;
LABEL_11:
    uint64_t v9 = v8 - v7;
    if (!v8) {
      uint64_t v9 = -1;
    }
  }
  else
  {
    uint64_t v9 = -1;
  }
  uint64_t v126 = v9;
  if (v5 >= 0)
  {
    unint64_t v10 = *(unsigned __int8 *)(v3 + 23);
  }
  else
  {
    uint64_t v3 = *(void *)v3;
    unint64_t v10 = *(void *)(v4 + 8);
  }
  uint64_t v11 = morphun::util::StringViewUtils::trim(v3, v10);
  morphun::util::StringViewUtils::split(v11, v12, (unsigned __int16 *)&word_1D2ED0D7C, 1, (uint64_t *)&v140);
  if (v126 != -1)
  {
    memset(&v139, 0, sizeof(v139));
    std::vector<std::basic_string<char16_t>>::reserve((uint64_t *)&v139, 0xAAAAAAAAAAAAAAABLL * ((v141 - (uint64_t)v140) >> 3));
    int v13 = *(char *)(v4 + 23);
    uint64_t v14 = *(const std::basic_string<char16_t>::value_type **)v4;
    BOOL v15 = v13 < 0;
    if (v13 >= 0) {
      uint64_t v14 = (const std::basic_string<char16_t>::value_type *)v4;
    }
    uint64_t v16 = *(unsigned __int8 *)(v4 + 23);
    if (v15) {
      uint64_t v16 = *(void *)(v4 + 8);
    }
    *(void *)stat __p = 0;
    *(void *)&__p[8] = 0;
    *(void *)&__p[16] = L",";
    *(void *)&__p[24] = 1;
    char v135 = (std::basic_string<char16_t>::size_type *)v14;
    uint64_t v136 = v16;
    int v137 = v16;
    int v138 = 0;
    if ((int)v16 >= 1) {
      morphun::util::DelimitedStringIterator::getNext((UChar *)__p);
    }
    while (v138 < v137 || *(void *)&__p[8] != 0)
    {
      int64_t v19 = (void *)morphun::util::StringViewUtils::trim(*(uint64_t *)__p, *(unint64_t *)&__p[8]);
      unint64_t v20 = v18;
      std::basic_string<char16_t>::size_type size = v139.__r_.__value_.__l.__size_;
      if (v139.__r_.__value_.__l.__size_ >= v139.__r_.__value_.__r.__words[2])
      {
        unint64_t v23 = 0xAAAAAAAAAAAAAAABLL
            * ((uint64_t)(v139.__r_.__value_.__l.__size_ - v139.__r_.__value_.__r.__words[0]) >> 3);
        unint64_t v24 = v23 + 1;
        if (v23 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556
           * ((uint64_t)(v139.__r_.__value_.__r.__words[2] - v139.__r_.__value_.__r.__words[0]) >> 3) > v24)
          unint64_t v24 = 0x5555555555555556
              * ((uint64_t)(v139.__r_.__value_.__r.__words[2] - v139.__r_.__value_.__r.__words[0]) >> 3);
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v139.__r_.__value_.__r.__words[2] - v139.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
          unint64_t v25 = 0xAAAAAAAAAAAAAAALL;
        else {
          unint64_t v25 = v24;
        }
        std::basic_string<char16_t>::size_type v145 = &v139.__r_.__value_.__r.__words[2];
        if (v25) {
          unint64_t v25 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v25);
        }
        else {
          uint64_t v26 = 0;
        }
        v143.__r_.__value_.__r.__words[0] = v25;
        v143.__r_.__value_.__l.__size_ = v25 + 24 * v23;
        v143.__r_.__value_.__r.__words[2] = v143.__r_.__value_.__l.__size_;
        unint64_t v144 = v25 + 24 * v26;
        std::allocator<std::basic_string<char16_t>>::construct[abi:ne180100]<std::basic_string<char16_t>,std::u16string_view>((void *)v143.__r_.__value_.__l.__size_, v19, v20);
        v143.__r_.__value_.__r.__words[2] += 24;
        std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer((uint64_t *)&v139, &v143);
        std::basic_string<char16_t>::size_type v22 = v139.__r_.__value_.__l.__size_;
        std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)&v143);
      }
      else
      {
        std::allocator<std::basic_string<char16_t>>::construct[abi:ne180100]<std::basic_string<char16_t>,std::u16string_view>((void *)v139.__r_.__value_.__l.__size_, v19, v18);
        std::basic_string<char16_t>::size_type v22 = size + 24;
      }
      v139.__r_.__value_.__l.__size_ = v22;
      morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)__p);
    }
LABEL_115:
    memset(&v143, 0, sizeof(v143));
    std::vector<std::basic_string<char16_t>>::reserve((uint64_t *)&v143, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v139.__r_.__value_.__l.__size_ - v139.__r_.__value_.__r.__words[0]) >> 3));
    std::basic_string<char16_t>::size_type v62 = v139.__r_.__value_.__l.__size_;
    uint64_t v63 = v139.__r_.__value_.__r.__words[0];
    if (v139.__r_.__value_.__l.__size_ - v139.__r_.__value_.__r.__words[0] == 48)
    {
      uint64_t v64 = *(void *)(a1 + 8);
      if (*(char *)(v139.__r_.__value_.__r.__words[0] + 23) < 0)
      {
        int v66 = *(const UChar **)v139.__r_.__value_.__l.__data_;
        uint64_t v65 = *(void *)(v139.__r_.__value_.__r.__words[0] + 8);
      }
      else
      {
        uint64_t v65 = *(unsigned __int8 *)(v139.__r_.__value_.__r.__words[0] + 23);
        int v66 = (const UChar *)v139.__r_.__value_.__r.__words[0];
      }
      uint64_t v74 = *(void *)(a1 + 40);
      *(void *)stat __p = 0;
      if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v64, (uint64_t)__p, v66, v65)) {
        BOOL v75 = (*(void *)__p & v74) == v74;
      }
      else {
        BOOL v75 = 0;
      }
      if (v75)
      {
        uint64_t v77 = *(void *)(a1 + 8);
        if (*(char *)(v63 + 47) < 0)
        {
          int v79 = *(const UChar **)(v63 + 24);
          uint64_t v78 = *(void *)(v63 + 32);
        }
        else
        {
          uint64_t v78 = *(unsigned __int8 *)(v63 + 47);
          int v79 = (const UChar *)(v63 + 24);
        }
        uint64_t v80 = *(void *)(a1 + 16);
        *(void *)stat __p = 0;
        CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v77, (uint64_t)__p, v79, v78);
        if ((*(void *)__p & v80) != 0 && CombinedBinaryType != 0) {
          uint64_t v76 = v63 + 24;
        }
        else {
          uint64_t v76 = v63;
        }
      }
      else
      {
        uint64_t v76 = v63;
      }
      morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::getLocativeString((uint64_t)&v133, (void *)a1, v63, v76);
      std::basic_string<char16_t>::size_type v84 = v143.__r_.__value_.__l.__size_;
      if (v143.__r_.__value_.__l.__size_ >= v143.__r_.__value_.__r.__words[2])
      {
        unint64_t v86 = 0xAAAAAAAAAAAAAAABLL
            * ((uint64_t)(v143.__r_.__value_.__l.__size_ - v143.__r_.__value_.__r.__words[0]) >> 3);
        unint64_t v87 = v86 + 1;
        if (v86 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556
           * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3) > v87)
          unint64_t v87 = 0x5555555555555556
              * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3);
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
          unint64_t v88 = 0xAAAAAAAAAAAAAAALL;
        else {
          unint64_t v88 = v87;
        }
        char v135 = &v143.__r_.__value_.__r.__words[2];
        if (v88) {
          unint64_t v88 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v88);
        }
        else {
          uint64_t v89 = 0;
        }
        long long v90 = (std::basic_string<char16_t> *)(v88 + 24 * v86);
        *(void *)stat __p = v88;
        *(void *)&__p[8] = v90;
        *(void *)&__p[24] = v88 + 24 * v89;
        *long long v90 = v133;
        memset(&v133, 0, sizeof(v133));
        *(void *)&__p[16] = v90 + 1;
        std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer((uint64_t *)&v143, __p);
        std::basic_string<char16_t>::size_type v85 = v143.__r_.__value_.__l.__size_;
        std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)__p);
      }
      else
      {
        *(_OWORD *)v143.__r_.__value_.__l.__size_ = *(_OWORD *)&v133.__r_.__value_.__l.__data_;
        *(void *)(v84 + 16) = *((void *)&v133.__r_.__value_.__l + 2);
        std::basic_string<char16_t>::size_type v85 = v84 + 24;
      }
      v143.__r_.__value_.__l.__size_ = v85;
      morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::getLocativeString((uint64_t)&v133, (void *)a1, v63 + 24, v63 + 24);
      std::basic_string<char16_t>::size_type v91 = v143.__r_.__value_.__l.__size_;
      if (v143.__r_.__value_.__l.__size_ >= v143.__r_.__value_.__r.__words[2])
      {
        unint64_t v93 = 0xAAAAAAAAAAAAAAABLL
            * ((uint64_t)(v143.__r_.__value_.__l.__size_ - v143.__r_.__value_.__r.__words[0]) >> 3);
        unint64_t v94 = v93 + 1;
        if (v93 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556
           * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3) > v94)
          unint64_t v94 = 0x5555555555555556
              * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3);
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
          unint64_t v95 = 0xAAAAAAAAAAAAAAALL;
        else {
          unint64_t v95 = v94;
        }
        char v135 = &v143.__r_.__value_.__r.__words[2];
        if (v95) {
          unint64_t v95 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v95);
        }
        else {
          uint64_t v96 = 0;
        }
        std::basic_string<char16_t>::size_type v97 = (std::basic_string<char16_t> *)(v95 + 24 * v93);
        *(void *)stat __p = v95;
        *(void *)&__p[8] = v97;
        *(void *)&__p[24] = v95 + 24 * v96;
        *std::basic_string<char16_t>::size_type v97 = v133;
        memset(&v133, 0, sizeof(v133));
        *(void *)&__p[16] = v97 + 1;
        std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer((uint64_t *)&v143, __p);
        std::basic_string<char16_t>::size_type v92 = v143.__r_.__value_.__l.__size_;
        std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)__p);
      }
      else
      {
        *(_OWORD *)v143.__r_.__value_.__l.__size_ = *(_OWORD *)&v133.__r_.__value_.__l.__data_;
        *(void *)(v91 + 16) = *((void *)&v133.__r_.__value_.__l + 2);
        std::basic_string<char16_t>::size_type v92 = v91 + 24;
      }
      v143.__r_.__value_.__l.__size_ = v92;
    }
    else if (v139.__r_.__value_.__r.__words[0] != v139.__r_.__value_.__l.__size_)
    {
      do
      {
        morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::getLocativeString((uint64_t)&v133, (void *)a1, v63, v63);
        std::basic_string<char16_t>::size_type v67 = v143.__r_.__value_.__l.__size_;
        if (v143.__r_.__value_.__l.__size_ >= v143.__r_.__value_.__r.__words[2])
        {
          unint64_t v69 = 0xAAAAAAAAAAAAAAABLL
              * ((uint64_t)(v143.__r_.__value_.__l.__size_ - v143.__r_.__value_.__r.__words[0]) >> 3);
          unint64_t v70 = v69 + 1;
          if (v69 + 1 > 0xAAAAAAAAAAAAAAALL) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          if (0x5555555555555556
             * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3) > v70)
            unint64_t v70 = 0x5555555555555556
                * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3);
          if (0xAAAAAAAAAAAAAAABLL
             * ((uint64_t)(v143.__r_.__value_.__r.__words[2] - v143.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
            unint64_t v71 = 0xAAAAAAAAAAAAAAALL;
          else {
            unint64_t v71 = v70;
          }
          char v135 = &v143.__r_.__value_.__r.__words[2];
          if (v71) {
            unint64_t v71 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v71);
          }
          else {
            uint64_t v72 = 0;
          }
          long long v73 = (std::basic_string<char16_t> *)(v71 + 24 * v69);
          *(void *)stat __p = v71;
          *(void *)&__p[8] = v73;
          *(void *)&__p[24] = v71 + 24 * v72;
          std::basic_string<char16_t> *v73 = v133;
          memset(&v133, 0, sizeof(v133));
          *(void *)&__p[16] = v73 + 1;
          std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer((uint64_t *)&v143, __p);
          std::basic_string<char16_t>::size_type v68 = v143.__r_.__value_.__l.__size_;
          std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)__p);
        }
        else
        {
          *(_OWORD *)v143.__r_.__value_.__l.__size_ = *(_OWORD *)&v133.__r_.__value_.__l.__data_;
          *(void *)(v67 + 16) = *((void *)&v133.__r_.__value_.__l + 2);
          std::basic_string<char16_t>::size_type v68 = v67 + 24;
        }
        v143.__r_.__value_.__l.__size_ = v68;
        v63 += 24;
      }
      while (v63 != v62);
    }
    if (v126 == -1) {
      unint64_t v98 = &word_1D2ED0D7C;
    }
    else {
      unint64_t v98 = L", ";
    }
    if (*v98)
    {
      uint64_t v99 = 0;
      do
        std::basic_string<char16_t>::size_type v100 = v99 + 1;
      while (v98[++v99]);
    }
    else
    {
      std::basic_string<char16_t>::size_type v100 = 0;
    }
    morphun::util::StringViewUtils::join(v98, v100, &v143, (uint64_t)__p);
    if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v142.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> v142 = *(std::basic_string<char16_t> *)__p;
    *(void *)stat __p = &v143;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    *(void *)stat __p = &v139;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    goto LABEL_187;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((v141 - (uint64_t)v140) >> 3) <= 1)
  {
    morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::getLocativeString((uint64_t)__p, (void *)a1, v4, v4);
    if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v142.__r_.__value_.__l.__data_);
    }
    std::basic_string<char16_t> v142 = *(std::basic_string<char16_t> *)__p;
LABEL_187:
    if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    {
      std::basic_string<char16_t>::size_type v102 = v142.__r_.__value_.__l.__size_;
      if (v142.__r_.__value_.__l.__size_)
      {
        unint64_t v103 = (std::basic_string<char16_t> *)v142.__r_.__value_.__r.__words[0];
LABEL_192:
        morphun::util::StringViewUtils::trim((uint64_t)v103, v102);
        if (v104) {
          goto LABEL_236;
        }
      }
    }
    else
    {
      std::basic_string<char16_t>::size_type v102 = HIBYTE(v142.__r_.__value_.__r.__words[2]);
      if (*((unsigned char *)&v142.__r_.__value_.__s + 23))
      {
        unint64_t v103 = &v142;
        goto LABEL_192;
      }
    }
    if (morphun::util::gLogLevel <= 1)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v130, "N");
      int v105 = *(char *)(v4 + 23);
      if (v105 >= 0) {
        std::basic_string<char16_t>::size_type v106 = (const std::basic_string<char16_t>::value_type *)v4;
      }
      else {
        std::basic_string<char16_t>::size_type v106 = *(const std::basic_string<char16_t>::value_type **)v4;
      }
      if (v105 >= 0) {
        std::basic_string<char16_t>::size_type v107 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        std::basic_string<char16_t>::size_type v107 = *(void *)(v4 + 8);
      }
      std::basic_string<char16_t>::append(&v130, v106, v107);
      std::basic_string<char16_t> __dst = v130;
      memset(&v130, 0, sizeof(v130));
      std::basic_string<char16_t>::append(&__dst, L" in locative (", 0xEuLL);
      std::basic_string<char16_t> v132 = __dst;
      memset(&__dst, 0, sizeof(__dst));
      morphun::grammar::synthesis::FiGrammarSynthesizer::toString(*(_DWORD *)(a1 + 60), &v129);
      if ((v129.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t> v108 = &v129;
      }
      else {
        std::basic_string<char16_t> v108 = (std::basic_string<char16_t> *)v129.__r_.__value_.__r.__words[0];
      }
      if ((v129.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v109 = HIBYTE(v129.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v109 = v129.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v132, (const std::basic_string<char16_t>::value_type *)v108, v109);
      std::basic_string<char16_t> v133 = v132;
      memset(&v132, 0, sizeof(v132));
      std::basic_string<char16_t>::append(&v133, (const std::basic_string<char16_t>::value_type *)"/", 1uLL);
      std::basic_string<char16_t> v139 = v133;
      memset(&v133, 0, sizeof(v133));
      morphun::grammar::synthesis::FiGrammarSynthesizer::toString(*(_DWORD *)(a1 + 56), &v128);
      if ((v128.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v110 = &v128;
      }
      else {
        unint64_t v110 = (std::basic_string<char16_t> *)v128.__r_.__value_.__r.__words[0];
      }
      if ((v128.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v111 = HIBYTE(v128.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v111 = v128.__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&v139, (const std::basic_string<char16_t>::value_type *)v110, v111);
      std::basic_string<char16_t> v143 = v139;
      memset(&v139, 0, sizeof(v139));
      std::basic_string<char16_t>::append(&v143, (const std::basic_string<char16_t>::value_type *)")", 1uLL);
      *(std::basic_string<char16_t> *)stat __p = v143;
      memset(&v143, 0, sizeof(v143));
      if (morphun::util::gLogLevel <= 1)
      {
        if (__p[23] >= 0) {
          char v112 = __p;
        }
        else {
          char v112 = *(unsigned char **)__p;
        }
        morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v112);
      }
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v143.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v128.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v128.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v139.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v139.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v133.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v129.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v132.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v132.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v130.__r_.__value_.__l.__data_);
      }
    }
    std::basic_string<char16_t>::operator=(&v142, (const std::basic_string<char16_t> *)v4);
LABEL_236:
    operator new();
  }
  memset(&v139, 0, sizeof(v139));
  memset(&v143, 0, sizeof(v143));
  morphun::grammar::synthesis::FiGrammarSynthesizer::getPossibleCombinations(&v140, (std::basic_string<char16_t>::size_type)&v133);
  memset(&v132, 0, sizeof(v132));
  std::basic_string<char16_t>::size_type v28 = v133.__r_.__value_.__l.__size_;
  BOOL v27 = (long long ***)v133.__r_.__value_.__r.__words[0];
  if (v133.__r_.__value_.__r.__words[0] == v133.__r_.__value_.__l.__size_) {
    goto LABEL_81;
  }
  uint64_t v125 = v4;
  do
  {
    uint64_t v29 = *v27;
    char v30 = v27[1];
    if (*v27 == v30) {
      goto LABEL_60;
    }
    do
    {
      morphun::util::StringViewUtils::join(&word_1D2ED0D7C, 1uLL, (std::basic_string<char16_t> *)v29, (uint64_t)__p);
      uint64_t v31 = *(void *)(a1 + 8);
      if (__p[23] >= 0) {
        int v32 = (const UChar *)__p;
      }
      else {
        int v32 = *(const UChar **)__p;
      }
      if (__p[23] >= 0) {
        uint64_t v33 = __p[23];
      }
      else {
        uint64_t v33 = *(void *)&__p[8];
      }
      __dst.__r_.__value_.__r.__words[0] = 0;
      std::basic_string<char16_t>::size_type v34 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v31, (uint64_t)&__dst, v32, v33);
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      v29 += 3;
      if (v34) {
        BOOL v35 = v29 == v30;
      }
      else {
        BOOL v35 = 1;
      }
    }
    while (!v35);
    if (v34)
    {
LABEL_60:
      int v36 = (std::basic_string<char16_t> *)v132.__r_.__value_.__l.__size_;
      if (v132.__r_.__value_.__l.__size_ >= v132.__r_.__value_.__r.__words[2])
      {
        unint64_t v38 = 0xAAAAAAAAAAAAAAABLL
            * ((uint64_t)(v132.__r_.__value_.__l.__size_ - v132.__r_.__value_.__r.__words[0]) >> 3);
        unint64_t v39 = v38 + 1;
        if (v38 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556
           * ((uint64_t)(v132.__r_.__value_.__r.__words[2] - v132.__r_.__value_.__r.__words[0]) >> 3) > v39)
          unint64_t v39 = 0x5555555555555556
              * ((uint64_t)(v132.__r_.__value_.__r.__words[2] - v132.__r_.__value_.__r.__words[0]) >> 3);
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v132.__r_.__value_.__r.__words[2] - v132.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
          unint64_t v40 = 0xAAAAAAAAAAAAAAALL;
        else {
          unint64_t v40 = v39;
        }
        char v135 = &v132.__r_.__value_.__r.__words[2];
        if (v40) {
          unint64_t v40 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v40);
        }
        else {
          uint64_t v41 = 0;
        }
        uint64_t v42 = (std::basic_string<char16_t> *)(v40 + 24 * v38);
        *(void *)stat __p = v40;
        *(void *)&__p[8] = v42;
        *(void *)&__p[16] = v42;
        *(void *)&__p[24] = v40 + 24 * v41;
        v42->__r_.__value_.__r.__words[0] = 0;
        v42->__r_.__value_.__l.__size_ = 0;
        v42->__r_.__value_.__r.__words[2] = 0;
        std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v42, *v27, v27[1], 0xAAAAAAAAAAAAAAABLL * (v27[1] - *v27));
        *(void *)&__p[16] += 24;
        std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::vector<std::vector<std::basic_string<char16_t>>>>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>,std::reverse_iterator<std::vector<std::vector<std::basic_string<char16_t>>>*>>((uint64_t)&v132.__r_.__value_.__r.__words[2], v132.__r_.__value_.__l.__size_, (void *)v132.__r_.__value_.__l.__size_, (uint64_t)v132.__r_.__value_.__l.__data_, v132.__r_.__value_.__l.__data_, *(uint64_t *)&__p[8], *(uint64_t *)&__p[8]);
        long long v43 = *(_OWORD *)&v132.__r_.__value_.__l.__data_;
        v132.__r_.__value_.__r.__words[0] = v44;
        std::basic_string<char16_t>::size_type v45 = v132.__r_.__value_.__r.__words[2];
        long long v127 = *(_OWORD *)&__p[16];
        *(_OWORD *)&__p[8] = v43;
        *(_OWORD *)&v132.__r_.__value_.__r.__words[1] = v127;
        *(void *)&__p[24] = v45;
        *(void *)stat __p = v43;
        std::__split_buffer<std::vector<std::vector<std::basic_string<char16_t>>>>::~__split_buffer((uint64_t)__p);
        std::basic_string<char16_t>::size_type v37 = v127;
      }
      else
      {
        *(_OWORD *)v132.__r_.__value_.__l.__size_ = 0uLL;
        v36->__r_.__value_.__r.__words[2] = 0;
        std::vector<std::vector<std::basic_string<char16_t>>>::__init_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>(v36, *v27, v27[1], 0xAAAAAAAAAAAAAAABLL * (v27[1] - *v27));
        std::basic_string<char16_t>::size_type v37 = (std::basic_string<char16_t>::size_type)&v36[1];
      }
      v132.__r_.__value_.__l.__size_ = v37;
    }
    v27 += 3;
  }
  while (v27 != (long long ***)v28);
  std::basic_string<char16_t>::size_type v46 = (long long ***)v132.__r_.__value_.__r.__words[0];
  uint64_t v4 = v125;
  if (v132.__r_.__value_.__r.__words[0] == v132.__r_.__value_.__l.__size_)
  {
LABEL_81:
    if (morphun::util::gLogLevel <= 1)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "T");
      int v47 = *(char *)(v4 + 23);
      if (v47 >= 0) {
        unint64_t v48 = (const std::basic_string<char16_t>::value_type *)v4;
      }
      else {
        unint64_t v48 = *(const std::basic_string<char16_t>::value_type **)v4;
      }
      if (v47 >= 0) {
        std::basic_string<char16_t>::size_type v49 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        std::basic_string<char16_t>::size_type v49 = *(void *)(v4 + 8);
      }
      std::basic_string<char16_t>::append(&__dst, v48, v49);
      *(std::basic_string<char16_t> *)stat __p = __dst;
      memset(&__dst, 0, sizeof(__dst));
      if (morphun::util::gLogLevel <= 1)
      {
        if (__p[23] >= 0) {
          uint64_t v50 = __p;
        }
        else {
          uint64_t v50 = *(unsigned char **)__p;
        }
        morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v50);
      }
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
    std::basic_string<char16_t>::size_type v46 = (long long ***)v133.__r_.__value_.__r.__words[0];
    if (&v143 == (std::basic_string<char16_t> *)v133.__r_.__value_.__l.__data_) {
      goto LABEL_99;
    }
  }
  else
  {
    if (v132.__r_.__value_.__l.__size_ - v132.__r_.__value_.__r.__words[0] != 24)
    {
      if (morphun::util::gLogLevel <= 1)
      {
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v129, "T");
        morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(0xAAAAAAAAAAAAAAABLL* ((uint64_t)(v132.__r_.__value_.__l.__size_ - v132.__r_.__value_.__r.__words[0]) >> 3)), &v128);
        int v113 = SHIBYTE(v128.__r_.__value_.__r.__words[2]);
        uint64_t v114 = (void *)v128.__r_.__value_.__r.__words[0];
        if ((v128.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v115 = &v128;
        }
        else {
          uint64_t v115 = (std::basic_string<char16_t> *)v128.__r_.__value_.__r.__words[0];
        }
        if ((v128.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v116 = HIBYTE(v128.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v116 = v128.__r_.__value_.__l.__size_;
        }
        std::basic_string<char16_t>::append(&v129, (const std::basic_string<char16_t>::value_type *)v115, v116);
        std::basic_string<char16_t> v130 = v129;
        memset(&v129, 0, sizeof(v129));
        std::basic_string<char16_t>::append(&v130, L" different splittings found in dictionary for ", 0x2EuLL);
        std::basic_string<char16_t> __dst = v130;
        memset(&v130, 0, sizeof(v130));
        int v117 = *(char *)(v125 + 23);
        if (v117 >= 0) {
          uint64_t v118 = (const std::basic_string<char16_t>::value_type *)v125;
        }
        else {
          uint64_t v118 = *(const std::basic_string<char16_t>::value_type **)v125;
        }
        if (v117 >= 0) {
          std::basic_string<char16_t>::size_type v119 = *(unsigned __int8 *)(v125 + 23);
        }
        else {
          std::basic_string<char16_t>::size_type v119 = *(void *)(v125 + 8);
        }
        std::basic_string<char16_t>::append(&__dst, v118, v119);
        *(std::basic_string<char16_t> *)stat __p = __dst;
        memset(&__dst, 0, sizeof(__dst));
        if (morphun::util::gLogLevel <= 1)
        {
          if (__p[23] >= 0) {
            uint64_t v120 = __p;
          }
          else {
            uint64_t v120 = *(unsigned char **)__p;
          }
          morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)v120);
        }
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v130.__r_.__value_.__l.__data_);
        }
        if (v113 < 0) {
          operator delete(v114);
        }
        if (SHIBYTE(v129.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v129.__r_.__value_.__l.__data_);
        }
        std::basic_string<char16_t>::size_type v46 = (long long ***)v132.__r_.__value_.__r.__words[0];
      }
      long long v121 = &v143;
      if (&v143 != (std::basic_string<char16_t> *)v46)
      {
        std::vector<std::vector<std::basic_string<char16_t>>>::__assign_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v143, *v46, v46[1], 0xAAAAAAAAAAAAAAABLL * (v46[1] - *v46));
        long long v121 = (std::basic_string<char16_t> *)v132.__r_.__value_.__r.__words[0];
      }
      for (std::basic_string<char16_t>::size_type i = v132.__r_.__value_.__l.__size_; v121 != (std::basic_string<char16_t> *)i; ++v121)
      {
        if (v121 != &v143)
        {
          uint64_t v123 = (long long **)v121->__r_.__value_.__l.__size_;
          unint64_t v124 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)v123 - v121->__r_.__value_.__r.__words[0]) >> 3);
          if (v124 < 0xAAAAAAAAAAAAAAABLL
                    * ((uint64_t)(v143.__r_.__value_.__l.__size_ - v143.__r_.__value_.__r.__words[0]) >> 3))
            std::vector<std::vector<std::basic_string<char16_t>>>::__assign_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v143, (long long **)v121->__r_.__value_.__l.__data_, v123, v124);
        }
      }
      goto LABEL_99;
    }
    if (&v143 == (std::basic_string<char16_t> *)v132.__r_.__value_.__l.__data_)
    {
LABEL_99:
      std::vector<std::basic_string<char16_t>>::reserve((uint64_t *)&v139, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v143.__r_.__value_.__l.__size_ - v143.__r_.__value_.__r.__words[0]) >> 3));
      std::basic_string<char16_t>::size_type v51 = v143.__r_.__value_.__l.__size_;
      for (uint64_t j = (std::basic_string<char16_t> *)v143.__r_.__value_.__r.__words[0];
            j != (std::basic_string<char16_t> *)v51;
            ++j)
      {
        morphun::util::StringViewUtils::join(&word_1D2ED0D7C, 1uLL, j, (uint64_t)&__dst);
        uint64_t v53 = (_OWORD *)v139.__r_.__value_.__l.__size_;
        if (v139.__r_.__value_.__l.__size_ >= v139.__r_.__value_.__r.__words[2])
        {
          unint64_t v55 = 0xAAAAAAAAAAAAAAABLL
              * ((uint64_t)(v139.__r_.__value_.__l.__size_ - v139.__r_.__value_.__r.__words[0]) >> 3);
          unint64_t v56 = v55 + 1;
          if (v55 + 1 > 0xAAAAAAAAAAAAAAALL) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          if (0x5555555555555556
             * ((uint64_t)(v139.__r_.__value_.__r.__words[2] - v139.__r_.__value_.__r.__words[0]) >> 3) > v56)
            unint64_t v56 = 0x5555555555555556
                * ((uint64_t)(v139.__r_.__value_.__r.__words[2] - v139.__r_.__value_.__r.__words[0]) >> 3);
          if (0xAAAAAAAAAAAAAAABLL
             * ((uint64_t)(v139.__r_.__value_.__r.__words[2] - v139.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
            unint64_t v57 = 0xAAAAAAAAAAAAAAALL;
          else {
            unint64_t v57 = v56;
          }
          char v135 = &v139.__r_.__value_.__r.__words[2];
          if (v57) {
            unint64_t v57 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v57);
          }
          else {
            uint64_t v58 = 0;
          }
          unint64_t v59 = v57 + 24 * v55;
          *(void *)stat __p = v57;
          *(void *)&__p[8] = v59;
          *(void *)&__p[24] = v57 + 24 * v58;
          long long v60 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
          *(void *)(v59 + 16) = *((void *)&__dst.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v59 = v60;
          memset(&__dst, 0, sizeof(__dst));
          *(void *)&__p[16] = v59 + 24;
          std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer((uint64_t *)&v139, __p);
          std::basic_string<char16_t>::size_type v61 = v139.__r_.__value_.__l.__size_;
          std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)__p);
          v139.__r_.__value_.__l.__size_ = v61;
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v54 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
          *(void *)(v139.__r_.__value_.__l.__size_ + 16) = *((void *)&__dst.__r_.__value_.__l + 2);
          *uint64_t v53 = v54;
          v139.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)v53 + 24;
        }
      }
      *(void *)stat __p = &v132;
      std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
      *(void *)stat __p = &v133;
      std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
      *(void *)stat __p = &v143;
      std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
      goto LABEL_115;
    }
  }
  std::vector<std::vector<std::basic_string<char16_t>>>::__assign_with_size[abi:ne180100]<std::vector<std::basic_string<char16_t>>*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v143, *v46, v46[1], 0xAAAAAAAAAAAAAAABLL * (v46[1] - *v46));
  goto LABEL_99;
}

void sub_1D2D2E69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void ***a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void **a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a58 < 0) {
    operator delete(__p);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (v58 < 0) {
    operator delete(v59);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  a32 = &a39;
  std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a32);
  a39 = &a46;
  std::vector<std::vector<std::vector<std::basic_string<char16_t>>>>::__destroy_vector::operator()[abi:ne180100](&a39);
  a46 = (void *)(v60 - 128);
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a46);
  a46 = (void *)(v60 - 208);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a46);
  *(void *)(v60 - 208) = v60 - 184;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v60 - 208));
  if (*(char *)(v60 - 137) < 0) {
    operator delete(*(void **)(v60 - 160));
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::getLocativeString(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a2[1];
  int v9 = *(char *)(a4 + 23);
  if (v9 >= 0) {
    unint64_t v10 = (const UChar *)a4;
  }
  else {
    unint64_t v10 = *(const UChar **)a4;
  }
  if (v9 >= 0) {
    uint64_t v11 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v11 = *(void *)(a4 + 8);
  }
  morphun::dictionary::DictionaryMetaData::getPropertyValues(v8, v10, v11, (unsigned __int16 *)"i", 0xAuLL, v35);
  uint64_t v12 = v35[0];
  if (v35[0] != v35[1])
  {
    if (*(char *)(v35[0] + 23) < 0)
    {
      uint64_t v12 = *(void *)v35[0];
      unint64_t v13 = *(void *)(v35[0] + 8);
    }
    else
    {
      unint64_t v13 = *(unsigned __int8 *)(v35[0] + 23);
    }
    if (v13 >= 5)
    {
      uint64_t v14 = 0;
      uint64_t v15 = v12 + 2 * v13 - 10;
      do
      {
        int v16 = *(unsigned __int16 *)(v15 + v14 * 2);
        int v17 = (unsigned __int16)aYks[v14];
      }
      while (v17 == v16 && v14++ != 4);
      if (v17 == v16) {
        goto LABEL_30;
      }
    }
  }
  uint64_t v19 = a2[1];
  int v20 = *(char *)(a4 + 23);
  uint64_t v21 = v20 >= 0 ? (const UChar *)a4 : *(const UChar **)a4;
  uint64_t v22 = v20 >= 0 ? *(unsigned __int8 *)(a4 + 23) : *(void *)(a4 + 8);
  uint64_t v23 = a2[3];
  unint64_t v36 = 0;
  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v19, (uint64_t)&v36, v21, v22)
    && (v36 & v23) == v23)
  {
LABEL_30:
    uint64_t v25 = 2;
  }
  else
  {
    uint64_t v25 = 1;
  }
  uint64_t v26 = a2[1];
  int v27 = *(char *)(a4 + 23);
  if (v27 >= 0) {
    std::basic_string<char16_t>::size_type v28 = (const UChar *)a4;
  }
  else {
    std::basic_string<char16_t>::size_type v28 = *(const UChar **)a4;
  }
  if (v27 >= 0) {
    uint64_t v29 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v29 = *(void *)(a4 + 8);
  }
  uint64_t v30 = a2[4];
  unint64_t v36 = 0;
  CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v26, (uint64_t)&v36, v28, v29);
  int v32 = (uint64_t *)a2[6];
  if (CombinedBinaryType) {
    BOOL v33 = (v36 & v30) == v30;
  }
  else {
    BOOL v33 = 0;
  }
  if (v33)
  {
    npc<morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction const>(a2[6]);
    std::basic_string<char16_t>::size_type v34 = (unsigned int *)(a2 + 7);
  }
  else
  {
    npc<morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction const>(a2[6]);
    std::basic_string<char16_t>::size_type v34 = (unsigned int *)a2 + 15;
  }
  morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction::inflectString(a1, v32, a3, *v34, v25, 0);
  unint64_t v36 = (unint64_t)v35;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v36);
}

void sub_1D2D2EB58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)&a10;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&a13);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::grammar::synthesis::FiGrammarSynthesizer_FiDisplayFunction const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D2EBC4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer_LocativeBasedLookupFunction::FiGrammarSynthesizer_LocativeBasedLookupFunction(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, int a5)
{
  *(void *)&long long v32 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v9 - 56)) = a2[1];
  unint64_t v10 = (morphun::util::LocaleUtils *)a2[2];
  *(void *)(a1 + *(void *)(*(void *)a1 - 40)) = v10;
  uint64_t v11 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::FINNISH(v10);
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary(v11, v12);
  if (!Dictionary)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v14 = Dictionary;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 8) = Dictionary;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 48) = a3;
  *(_DWORD *)(a1 + 56) = a5;
  *(_DWORD *)(a1 + 60) = a4;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"noun");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v29, (char *)L"proper-noun");
  long long __p = 0uLL;
  uint64_t v31 = 0;
  char v26 = 0;
  *(void *)&long long __p = operator new(0x30uLL);
  *((void *)&__p + 1) = __p;
  uint64_t v31 = __p + 48;
  *((void *)&__p + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v31, &__dst, &__p, (std::basic_string<char16_t> *)__p);
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v14, (uint64_t *)(a1 + 16), (uint64_t *)&__p);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  p_p = (void **)&__p;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v29[i + 2]) < 0) {
      operator delete((void *)v29[i]);
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "p");
  long long __dst = 0uLL;
  uint64_t v28 = 0;
  p_p = (void **)&__dst;
  char v26 = 0;
  *(void *)&long long __dst = operator new(0x18uLL);
  *((void *)&__dst + 1) = __dst;
  uint64_t v28 = __dst + 24;
  *((void *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v28, &__p, &v32, (std::basic_string<char16_t> *)__dst);
  unint64_t v18 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v17, (uint64_t *)(a1 + 24), (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v18);
  p_p = (void **)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)__p);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "o");
  long long __dst = 0uLL;
  uint64_t v28 = 0;
  p_p = (void **)&__dst;
  char v26 = 0;
  *(void *)&long long __dst = operator new(0x18uLL);
  *((void *)&__dst + 1) = __dst;
  uint64_t v28 = __dst + 24;
  *((void *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v28, &__p, &v32, (std::basic_string<char16_t> *)__dst);
  int v20 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v19, (uint64_t *)(a1 + 32), (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v20);
  p_p = (void **)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)__p);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "a");
  long long __dst = 0uLL;
  uint64_t v28 = 0;
  p_p = (void **)&__dst;
  char v26 = 0;
  *(void *)&long long __dst = operator new(0x18uLL);
  *((void *)&__dst + 1) = __dst;
  uint64_t v28 = __dst + 24;
  *((void *)&__dst + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v28, &__p, &v32, (std::basic_string<char16_t> *)__dst);
  uint64_t v22 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v21, (uint64_t *)(a1 + 40), (uint64_t *)&__dst);
  morphun::util::Validate::notNull<long long>((uint64_t)v22);
  p_p = (void **)&__dst;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&p_p);
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)__p);
  }
  return a1;
}

void sub_1D2D2F004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  __cxa_free_exception(v25);
  _Unwind_Resume(a1);
}

void *morphun::analysis::filter::SuffixFilter::reset(morphun::analysis::filter::SuffixFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 13) = result;
  return result;
}

uint64_t morphun::analysis::filter::SuffixFilter::incrementToken(morphun::analysis::filter::SuffixFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = *((void *)this + 13);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
    {
      uint64_t v6 = (unsigned __int16 *)*((void *)this + 15);
      uint64_t v7 = (unsigned __int16 *)*((void *)this + 16);
      while (v6 != v7)
      {
        if (*((char *)v6 + 23) < 0)
        {
          uint64_t v9 = *(unsigned __int16 **)v6;
          unint64_t v8 = *((void *)v6 + 1);
        }
        else
        {
          unint64_t v8 = *((unsigned __int8 *)v6 + 23);
          uint64_t v9 = v6;
        }
        unint64_t v10 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 14));
        uint64_t v11 = (char *)v10 + *(void *)(*v10 - 96);
        if (v11[23] < 0) {
          uint64_t v12 = *((void *)v11 + 1);
        }
        else {
          LODWORD(v12) = v11[23];
        }
        if ((int)v12 > (int)v8)
        {
          unint64_t v13 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 14));
          uint64_t v14 = (char *)v13 + *(void *)(*v13 - 96);
          if (v14[23] < 0)
          {
            uint64_t v14 = *(char **)v14;
            unint64_t v15 = *(void *)((char *)v13 + *(void *)(*v13 - 96) + 8);
          }
          else
          {
            unint64_t v15 = v14[23];
          }
          if (v15 >= v8)
          {
            if (!v8) {
              goto LABEL_27;
            }
            uint64_t v16 = -(uint64_t)v8;
            uint64_t v17 = &v14[2 * v15];
            do
            {
              int v18 = *(unsigned __int16 *)&v17[2 * v16];
              int v20 = *v9++;
              int v19 = v20;
            }
            while (v20 == v18 && v16++ != -1);
            if (v19 == v18)
            {
LABEL_27:
              uint64_t v22 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 14));
              std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)((char *)v22 + *(void *)(*v22 - 96)), (int)v12 - (int)v8, 0);
            }
          }
        }
        v6 += 12;
      }
    }
  }
  return v3;
}

void sub_1D2D2F328(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D2F38C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::SuffixFilter::~SuffixFilter(morphun::analysis::filter::SuffixFilter *this)
{
  uint64_t v2 = (void **)((char *)this + 120);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v2);
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07900);

  JUMPOUT(0x1D942B8B0);
}

{
  void **v2;
  uint64_t vars8;

  uint64_t v2 = (void **)((char *)this + 120);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v2);

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07900);
}

morphun::analysis::TokenFilter *morphun::analysis::filter::SuffixFilter::SuffixFilter(morphun::analysis::TokenFilter *a1, uint64_t a2, long long **a3)
{
  *(void *)a1 = &unk_1F2A08C08;
  char v5 = morphun::analysis::TokenFilter::TokenFilter(a1, (morphun::analysis::TokenStream *)&off_1F2A07900, a2);
  *(void *)char v5 = &off_1F2A105A0;
  *(_OWORD *)((char *)v5 + 120) = 0u;
  *(_OWORD *)((char *)v5 + 104) = 0u;
  *((void *)v5 + 17) = 0;
  std::vector<std::basic_string<char16_t>>::__init_with_size[abi:ne180100]<std::basic_string<char16_t>*,std::basic_string<char16_t>*>((std::basic_string<char16_t> *)v5 + 5, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  *((void *)a1 + 14) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)a1);
  return a1;
}

void sub_1D2D2F51C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  morphun::analysis::TokenFilter::~TokenFilter(v2, (uint64_t *)&off_1F2A07900);
  _Unwind_Resume(a1);
}

UText *morphun::analysis::AnalyzerWrapper::wrapReader(morphun::analysis::AnalyzerWrapper *this, UText *a2)
{
  return a2;
}

morphun::analysis::Analyzer_TokenStreamComponents *morphun::analysis::AnalyzerWrapper::wrapComponents(morphun::analysis::AnalyzerWrapper *this, morphun::analysis::Analyzer_TokenStreamComponents *a2)
{
  return a2;
}

uint64_t morphun::analysis::AnalyzerWrapper::getOffsetGap(morphun::analysis::AnalyzerWrapper *this)
{
  uint64_t v1 = (*(uint64_t (**)(morphun::analysis::AnalyzerWrapper *))(*(void *)this + 56))(this);
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)npc<morphun::analysis::Analyzer>(v1) + 48);

  return v2();
}

void sub_1D2D2F62C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::AnalyzerWrapper::getPositionIncrementGap(morphun::analysis::AnalyzerWrapper *this)
{
  uint64_t v1 = (*(uint64_t (**)(morphun::analysis::AnalyzerWrapper *))(*(void *)this + 56))(this);
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)npc<morphun::analysis::Analyzer>(v1) + 40);

  return v2();
}

uint64_t morphun::analysis::AnalyzerWrapper::initReader(morphun::analysis::AnalyzerWrapper *this, UText *a2)
{
  uint64_t v4 = (*(uint64_t (**)(morphun::analysis::AnalyzerWrapper *))(*(void *)this + 56))(this);
  npc<morphun::analysis::Analyzer>(v4);
  uint64_t v5 = (*(uint64_t (**)(morphun::analysis::AnalyzerWrapper *, UText *))(*(void *)this + 72))(this, a2);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 32);

  return v6(v4, v5);
}

uint64_t morphun::analysis::AnalyzerWrapper::createComponents(morphun::analysis::AnalyzerWrapper *this)
{
  uint64_t v2 = (*(uint64_t (**)(morphun::analysis::AnalyzerWrapper *))(*(void *)this + 56))(this);
  uint64_t v3 = npc<morphun::analysis::Analyzer>(v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 24))(v3);
  uint64_t v5 = *(uint64_t (**)(morphun::analysis::AnalyzerWrapper *, uint64_t))(*(void *)this + 64);

  return v5(this, v4);
}

morphun::analysis::Analyzer *morphun::analysis::AnalyzerWrapper::AnalyzerWrapper(morphun::analysis::AnalyzerWrapper *this, uint64_t *a2)
{
  uint64_t result = morphun::analysis::Analyzer::Analyzer(this, a2 + 1);
  uint64_t v4 = *a2;
  *(void *)uint64_t result = *a2;
  *(void *)((char *)result + *(void *)(v4 - 40)) = a2[3];
  return result;
}

void morphun::analysis::AnalyzerWrapper::~AnalyzerWrapper(morphun::analysis::AnalyzerWrapper *this, uint64_t a2)
{
}

uint64_t morphun::grammar::synthesis::ArGrammarSynthesizer_DefinitenessLookupFunction::getFeatureValue(void *a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v4 = v3;
  uint64_t v5 = a1[2];
  if (*(char *)(v3 + 23) < 0)
  {
    uint64_t v6 = *(void *)(v3 + 8);
    if (!v6) {
      return 0;
    }
    uint64_t v42 = 0;
    uint64_t v7 = *(const UChar **)v3;
  }
  else
  {
    uint64_t v6 = *(unsigned __int8 *)(v3 + 23);
    if (!*(unsigned char *)(v3 + 23)) {
      return 0;
    }
    uint64_t v42 = 0;
    uint64_t v7 = (const UChar *)v3;
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v5, (uint64_t)&v42, v7, v6);
  if ((a1[29] & v42) != 0) {
    operator new();
  }
  unint64_t v8 = (morphun::util::LocaleUtils *)(*(void *(**)(std::basic_string<char16_t> *__return_ptr, void *, uint64_t))(*a1 + 32))(&__p, a1, v4);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (size) {
    operator new();
  }
  if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((a1[30] & v42) == 0)
  {
    int v11 = *(char *)(v4 + 23);
    uint64_t v12 = v11 >= 0 ? *(unsigned __int8 *)(v4 + 23) : *(void *)(v4 + 8);
    if (v12)
    {
      memset(&__p, 0, sizeof(__p));
      unint64_t v13 = *(const UChar **)v4;
      uint64_t v14 = morphun::util::LocaleUtils::ARABIC(v8);
      if (v11 >= 0) {
        unint64_t v15 = (const UChar *)v4;
      }
      else {
        unint64_t v15 = v13;
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__p, v15, v12, v14);
      std::basic_string<char16_t>::size_type v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v17 = __p.__r_.__value_.__l.__size_;
      }
      if (v17 >= 2)
      {
        uint64_t v18 = 0;
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
        }
        do
        {
          int v20 = (unsigned __int16)p_p->__r_.__value_.__s.__data_[v18];
          int v21 = (unsigned __int16)word_1D2ECF8DE[v18];
          BOOL v22 = v21 != v20 || v18++ == 1;
        }
        while (!v22);
        if (v21 == v20) {
          operator new();
        }
      }
      uint64_t v23 = (void *)a1[26];
      if (v23 != a1 + 27)
      {
        do
        {
          std::basic_string<char16_t>::size_type v25 = __p.__r_.__value_.__l.__size_;
          unint64_t v24 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          {
            unint64_t v24 = &__p;
            std::basic_string<char16_t>::size_type v25 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          uint64_t v26 = v23[6];
          std::basic_string<char16_t>::size_type v27 = v25 - v26;
          if (v25 >= v26)
          {
            if (!v26) {
              goto LABEL_48;
            }
            uint64_t v28 = (unsigned __int16 *)v23[5];
            uint64_t v29 = -v26;
            uint64_t v30 = (char *)v24 + 2 * v25;
            do
            {
              int v31 = *(unsigned __int16 *)&v30[2 * v29];
              int v33 = *v28++;
              int v32 = v33;
            }
            while (v33 == v31 && v29++ != -1);
            if (v32 == v31)
            {
LABEL_48:
              std::basic_string<char16_t>::basic_string(&v40, &__p, 0, v27, v16);
              uint64_t v39 = 0;
              if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                BOOL v35 = &v40;
              }
              else {
                BOOL v35 = (std::basic_string<char16_t> *)v40.__r_.__value_.__r.__words[0];
              }
              if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v36 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
              }
              else {
                std::basic_string<char16_t>::size_type v36 = v40.__r_.__value_.__l.__size_;
              }
              morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v5, (uint64_t)&v39, (const UChar *)v35, v36);
              if ((a1[31] & v39) != 0) {
                operator new();
              }
              if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v40.__r_.__value_.__l.__data_);
              }
            }
          }
          std::basic_string<char16_t>::size_type v37 = (void *)v23[1];
          if (v37)
          {
            do
            {
              unint64_t v38 = v37;
              std::basic_string<char16_t>::size_type v37 = (void *)*v37;
            }
            while (v37);
          }
          else
          {
            do
            {
              unint64_t v38 = (void *)v23[2];
              BOOL v22 = *v38 == (void)v23;
              uint64_t v23 = v38;
            }
            while (!v22);
          }
          uint64_t v23 = v38;
        }
        while (v38 != a1 + 27);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
  return 0;
}

void sub_1D2D2FC6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  MEMORY[0x1D942B8B0](v21, 0x10B3C40F7FF9C27);
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_DefinitenessLookupFunction::~ArGrammarSynthesizer_DefinitenessLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_DefinitenessLookupFunction *this)
{
  *(void *)this = &off_1F29F39B0;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 27));
  *(void *)this = &unk_1F29F3128;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &off_1F29F39B0;
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 27));
  *(void *)this = &unk_1F29F3128;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

uint64_t morphun::grammar::synthesis::DEFINITENESS_VALUES(morphun::grammar::synthesis *this)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  return morphun::grammar::synthesis::DEFINITENESS_VALUES(void)::_DEFINITENESS_VALUES;
}

void sub_1D2D30050(_Unwind_Exception *a1)
{
  uint64_t v4 = 0;
  while (1)
  {
    if (*(char *)(v2 + v4 + 71) < 0) {
      operator delete(*(void **)(v2 + v4 + 48));
    }
    v4 -= 24;
    if (v4 == -72)
    {
      MEMORY[0x1D942B8B0](v1, 0x20C40960023A9);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::endSkippedOffsets(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return (uint64_t)this + *(void *)(*(void *)this - 112) + 24;
}

uint64_t virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::startSkippedOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *(unsigned int *)((char *)this + *(void *)(*(void *)this - 104) + 16);
}

char *virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setSkippedTextWithOffsets(void *a1, int a2, uint64_t a3)
{
  uint64_t v3 = (char *)a1 + *(void *)(*a1 - 96);
  *((_DWORD *)v3 + 4) = a2;
  uint64_t result = v3 + 24;
  if (v3 + 24 != (char *)a3) {
    return std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>(result, *(char **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
  }
  return result;
}

void virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::~PackedTokenAttributeImpl(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  morphun::analysis::tokenattributes::PackedTokenAttributeImpl::~PackedTokenAttributeImpl((morphun::analysis::tokenattributes::PackedTokenAttributeImpl *)((char *)this + *(void *)(*(void *)this - 32)));

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::tokenattributes::PackedTokenAttributeImpl::~PackedTokenAttributeImpl((morphun::analysis::tokenattributes::PackedTokenAttributeImpl *)((char *)this + *(void *)(*(void *)this - 32)));
}

void morphun::analysis::tokenattributes::PackedTokenAttributeImpl::~PackedTokenAttributeImpl(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  *(void *)this = &off_1F2A0F8B0;
  *(void *)((char *)this + unk_1F2A0F850) = &unk_1F2A0F998;
  *(void *)((char *)this + *(void *)(*(void *)this - 112)) = &unk_1F2A0FA40;
  *(void *)((char *)this + *(void *)(*(void *)this - 120)) = &unk_1F2A0FB00;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2)
  {
    *((void *)this + 4) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
}

{
  uint64_t vars8;

  morphun::analysis::tokenattributes::PackedTokenAttributeImpl::~PackedTokenAttributeImpl(this);

  JUMPOUT(0x1D942B8B0);
}

uint64_t virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::endOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *(unsigned int *)((char *)this + *(void *)(*(void *)this - 112) + 12);
}

uint64_t virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this, int a2, int a3)
{
  return morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setOffset((uint64_t)this + *(void *)(*(void *)this - 104), a2, a3);
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setOffset(uint64_t this, int a2, int a3)
{
  if (a2 < 0 || a3 < a2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a2, &v10);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v11, L"startOffset must be non-negative, and endOffset must be >= startOffset, startOffset=", &v10, v6);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v12, &v11, (std::basic_string<char16_t>::value_type *)",");
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a3, &v9);
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v7 = &v9;
    }
    else {
      uint64_t v7 = (std::basic_string<char16_t> *)v9.__r_.__value_.__r.__words[0];
    }
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type size = HIBYTE(v9.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type size = v9.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v12, (const std::basic_string<char16_t>::value_type *)v7, size);
    std::basic_string<char16_t> v13 = v12;
    memset(&v12, 0, sizeof(v12));
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v13);
  }
  *(_DWORD *)(this + 8) = a2;
  *(_DWORD *)(this + 12) = a3;
  return this;
}

void sub_1D2D30400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  if (v32 < 0) {
    operator delete(v30);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v31 & 1) == 0) {
LABEL_14:
    }
      _Unwind_Resume(a1);
  }
  else if (!v31)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v29);
  goto LABEL_14;
}

uint64_t virtual thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::startOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *(unsigned int *)((char *)this + *(void *)(*(void *)this - 96) + 8);
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::endSkippedOffsets(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return (uint64_t)this + 24;
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::startSkippedOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *((unsigned int *)this + 4);
}

char *morphun::analysis::tokenattributes::PackedTokenAttributeImpl::setSkippedTextWithOffsets(uint64_t a1, int a2, uint64_t a3)
{
  *(_DWORD *)(a1 + 16) = a2;
  uint64_t result = (char *)(a1 + 24);
  if (result != (char *)a3) {
    return std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>(result, *(char **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
  }
  return result;
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::endOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *((unsigned int *)this + 3);
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::startOffset(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  return *((unsigned int *)this + 2);
}

void morphun::analysis::tokenattributes::PackedTokenAttributeImpl::reflectWith(int **this, morphun::analysis::util::AttributeReflector *a2)
{
  void v16[2] = *MEMORY[0x1E4F143B8];
  morphun::analysis::tokenattributes::CharTermAttributeImpl::reflectWith((morphun::analysis::tokenattributes::CharTermAttributeImpl *)this, a2);
  npc<morphun::analysis::util::AttributeReflector>((uint64_t)a2);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "s");
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 2), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "e");
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 3), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "s");
  morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)*((int *)this + 4), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  memset(&__dst, 0, sizeof(__dst));
  uint64_t v4 = this[3];
  for (uint64_t i = this[4]; v4 != i; ++v4)
  {
    std::basic_string<char16_t>::size_type v6 = (morphun::util::StringUtils *)*v4;
    std::basic_string<char16_t>::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    if (size) {
      std::basic_string<char16_t>::append(&__dst, L",", 1uLL);
    }
    morphun::util::StringUtils::to_u16string(v6, &__p);
    int v8 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::basic_string<char16_t> v9 = (void *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v11 = __p.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)p_p, v11);
    if (v8 < 0) {
      operator delete(v9);
    }
  }
  std::operator+<char16_t>((uint64_t)&__p, L"[", (const void **)&__dst.__r_.__value_.__l.__data_);
  std::basic_string<char16_t>::append(&__p, L"]", 1uLL);
  v16[0] = __p.__r_.__value_.__l.__size_;
  std::basic_string<char16_t>::size_type v12 = __p.__r_.__value_.__r.__words[0];
  *(void *)((char *)v16 + 7) = *(std::basic_string<char16_t>::size_type *)((char *)&__p.__r_.__value_.__r.__words[1]
                                                                           + 7);
  char v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  memset(&__p, 0, sizeof(__p));
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    __dst.__r_.__value_.__r.__words[0] = v12;
    __dst.__r_.__value_.__l.__size_ = v16[0];
    *(std::basic_string<char16_t>::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v16 + 7);
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    __dst.__r_.__value_.__r.__words[0] = v12;
    __dst.__r_.__value_.__l.__size_ = v16[0];
    *(std::basic_string<char16_t>::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v16 + 7);
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13;
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"skippedOffsets");
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D30874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::analysis::util::AttributeReflector>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D30938(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *morphun::analysis::tokenattributes::PackedTokenAttributeImpl::copyTo(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this, morphun::analysis::util::AttributeImpl *lpsrc)
{
  if (!lpsrc)
  {
    morphun::analysis::tokenattributes::CharTermAttributeImpl::copyTo(this, 0);
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  {
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t result = (char *)std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v4 + *(void *)(*(void *)v4 - 104)), (const std::basic_string<char16_t> *)((char *)this + *(void *)(*(void *)this - 104)));
      *((void *)v5 + 1) = *((void *)this + 1);
      *((_DWORD *)v5 + 4) = *((_DWORD *)this + 4);
      if (v5 != this)
      {
        uint64_t v7 = (char *)*((void *)this + 3);
        uint64_t v8 = *((void *)this + 4);
        return std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>((char *)v5 + 24, v7, v8, (v8 - (uint64_t)v7) >> 2);
      }
      return result;
    }
LABEL_14:
    std::basic_string<char16_t>::size_type v12 = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(v12 + 8) = 0u;
    *(_OWORD *)(v12 + 24) = 0u;
    *(_OWORD *)(v12 + 40) = 0u;
    *(void *)std::basic_string<char16_t>::size_type v12 = &unk_1F2A11358;
  }
  morphun::analysis::tokenattributes::CharTermAttributeImpl::copyTo(this, lpsrc);
  if (!v9) {
    goto LABEL_14;
  }
  (*(void (**)(void *, void, void))(*(void *)v9 + 64))(v9, *((unsigned int *)this + 2), *((unsigned int *)this + 3));
  if (!v10) {
    goto LABEL_14;
  }
  std::basic_string<char16_t>::size_type v11 = *(uint64_t (**)(void))(*(void *)v10 + 56);

  return (char *)v11();
}

void sub_1D2D30C00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenattributes::PackedTokenAttributeImpl::clone(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
}

void sub_1D2D30E0C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*v2);
  }
  MEMORY[0x1D942B8B0](v1, 0x1093C4008690FAALL);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenattributes::PackedTokenAttributeImpl::clear(std::vector<int> *this, std::vector<int>::size_type a2)
{
  uint64_t v3 = (char *)this + *((void *)this->__begin_ - 13);
  if (v3[23] < 0)
  {
    **(_WORD **)uint64_t v3 = 0;
    *((void *)v3 + 1) = 0;
  }
  else
  {
    *(_WORD *)uint64_t v3 = 0;
    v3[23] = 0;
  }
  uint64_t v5 = this + 1;
  std::vector<int>::pointer begin = this[1].__begin_;
  this->__end_ = 0;
  LODWORD(this->__end_cap_.__value_) = 0;
  if ((int *)((char *)this[1].__end_cap_.__value_ - (char *)begin) >= (int *)0x41)
  {
    std::vector<int>::resize(this + 1, a2);
    std::vector<int>::shrink_to_fit(this + 1);
    std::vector<int>::pointer begin = v5->__begin_;
  }
  this[1].__end_ = begin;
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::operator()(int a1, void *lpsrc)
{
  if (!v2) {
    __cxa_bad_cast();
  }
  return (*(int (**)(void *))(*(void *)v2 + 40))(v2);
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::hashCode(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
  uint64_t v2 = (char *)this + *(void *)(*(void *)this - 104);
  int v3 = v2[23];
  if (v3 >= 0) {
    uint64_t v4 = (uint64_t *)((char *)this + *(void *)(*(void *)this - 104));
  }
  else {
    uint64_t v4 = *(uint64_t **)v2;
  }
  if (v3 >= 0) {
    uint64_t v5 = v2[23];
  }
  else {
    uint64_t v5 = *((void *)v2 + 1);
  }
  int v6 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v4, 2 * v5);
  int v7 = *((_DWORD *)this + 2) - v6 + 32 * v6;
  int v8 = *((_DWORD *)this + 3) - v7 + 32 * v7;
  return (*((_DWORD *)this + 4) - v8 + 32 * v8);
}

uint64_t morphun::analysis::tokenattributes::PackedTokenAttributeImpl::equals(const void **this, const morphun::analysis::util::Attribute *lpsrc)
{
  if ((const morphun::analysis::util::Attribute *)((char *)this + *((void *)*this - 11)) == lpsrc) {
    return 1;
  }
  if (result)
  {
    if (*((_DWORD *)this + 2) == *(_DWORD *)(result + 8)
      && *((_DWORD *)this + 3) == *(_DWORD *)(result + 12)
      && *((_DWORD *)this + 4) == *(_DWORD *)(result + 16)
      && (size_t v5 = (unsigned char *)this[4] - (unsigned char *)this[3],
          int v6 = *(const void **)(result + 24),
          v5 == *(void *)(result + 32) - (void)v6)
      && !memcmp(this[3], v6, v5))
    {
      return morphun::analysis::tokenattributes::CharTermAttributeImpl::equals((morphun::analysis::tokenattributes::CharTermAttributeImpl *)this, lpsrc);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void covariant return thunk to'morphun::analysis::tokenattributes::PackedTokenAttributeImpl::clone(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
}

void morphun::analysis::tokenattributes::PackedTokenAttributeImpl::create(morphun::analysis::tokenattributes::PackedTokenAttributeImpl *this)
{
}

void morphun::tokenizer::locale::nl::NlTokenizer::createTokenExtractor()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D31484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  morphun::tokenizer::locale::da::DaDictionaryTokenizerConfig::~DaDictionaryTokenizerConfig((char **)va);
  MEMORY[0x1D942B8B0](v2, 0x10F3C4092900CF8);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::DaGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::DaGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "n");
  operator new();
}

void sub_1D2D32F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *__p,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  __cxa_free_exception(v54);
  MEMORY[0x1D942B8B0](v53, 0x10F3C409DF61E03);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Count>>(morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    int v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      int v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Count>>(morphun::grammar::synthesis::DaGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2D336C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      int v8 = v4;
      if (*a1 != v4)
      {
        std::basic_string<char16_t> v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            int v8 = v9;
            std::basic_string<char16_t> v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            int v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      std::basic_string<char16_t>::size_type v12 = (char **)v4;
      char v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      char v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        std::basic_string<char16_t>::size_type v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        std::basic_string<char16_t>::size_type v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        const UChar *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    std::basic_string<char16_t>::size_type v12 = (char **)v4;
    char v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          std::basic_string<char16_t>::size_type v12 = (char **)v14;
          unint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          char v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        char v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D338F0(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D33968(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    int v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      int v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::DaGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2D33B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      int v8 = v4;
      if (*a1 != v4)
      {
        std::basic_string<char16_t> v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            int v8 = v9;
            std::basic_string<char16_t> v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            int v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      std::basic_string<char16_t>::size_type v12 = (char **)v4;
      char v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      char v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        std::basic_string<char16_t>::size_type v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        std::basic_string<char16_t>::size_type v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        const UChar *v13 = v16;
        int v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    std::basic_string<char16_t>::size_type v12 = (char **)v4;
    char v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          std::basic_string<char16_t>::size_type v12 = (char **)v14;
          unint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          char v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        char v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D33D84(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::DaGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D33DFC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::filter::LowerCaseFilter::incrementToken(morphun::analysis::filter::LowerCaseFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
    uint64_t v5 = (char *)v4 + *(void *)(*v4 - 96);
    if (v5[23] < 0) {
      uint64_t v6 = *((void *)v5 + 1);
    }
    else {
      LODWORD(v6) = v5[23];
    }
    if ((int)v6 >= 1)
    {
      int v7 = 0;
      while (1)
      {
        int v8 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
        uint64_t v9 = (uint64_t)v8 + *(void *)(*v8 - 96);
        if (*(char *)(v9 + 23) < 0)
        {
          uint64_t v11 = v9;
          uint64_t v9 = *(void *)v9;
          uint64_t v10 = *(void *)(v11 + 8);
        }
        else
        {
          LODWORD(v10) = *(unsigned __int8 *)(v9 + 23);
        }
        unsigned int v12 = morphun::util::StringViewUtils::codePointAt(v9, v10, v7);
        if (v12 != MEMORY[0x1D942BD20]()) {
          break;
        }
        if (v12 < 0x10000) {
          int v13 = 1;
        }
        else {
          int v13 = 2;
        }
        v7 += v13;
        if (v7 >= (int)v6) {
          return v3;
        }
      }
      memset(&__str, 0, sizeof(__str));
      uint64_t v14 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      unint64_t v15 = (const UChar *)((char *)v14 + *(void *)(*v14 - 96));
      if (*((char *)v15 + 23) < 0)
      {
        unint64_t v15 = *(const UChar **)v15;
        uint64_t v16 = *(void *)((char *)v14 + *(void *)(*v14 - 96) + 8);
      }
      else
      {
        LODWORD(v16) = *((unsigned __int8 *)v15 + 23);
      }
      morphun::util::StringViewUtils::lowercase((uint64_t)&__str, v15, v16, (uint64_t)this + 112);
      std::basic_string<char16_t>::size_type v17 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v17 + *(void *)(*v17 - 96)), &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
    }
  }
  return v3;
}

void sub_1D2D33FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_1D2D34054(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::LowerCaseFilter::~LowerCaseFilter(void **this)
{
  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07980);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  morphun::analysis::TokenFilter::~TokenFilter((morphun::analysis::TokenFilter *)this, (uint64_t *)&off_1F2A07980);
}

uint64_t morphun::tokenizer::SemiticTokenExtractorIterator::reset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  *(_DWORD *)(a1 + 84) = 0;
  uint64_t result = morphun::tokenizer::ICUTokenExtractorIterator::reset();
  *(void *)(a1 + 64) = *(void *)(a1 + 56);
  *(_DWORD *)(a1 + 80) = 0;
  return result;
}

uint64_t morphun::tokenizer::SemiticTokenExtractorIterator::getNextBoundary(morphun::tokenizer::SemiticTokenExtractorIterator *this)
{
  uint64_t v3 = (char **)((char *)this + 56);
  uint64_t v2 = *((void *)this + 7);
  uint64_t v4 = *((int *)this + 20);
  if ((int)v4 < (int)((unint64_t)(*((void *)this + 8) - v2) >> 2))
  {
    *((_DWORD *)this + 20) = v4 + 1;
    uint64_t v5 = *(unsigned int *)(v2 + 4 * v4);
LABEL_25:
    *((_DWORD *)this + 21) = v5;
    return v5;
  }
  *((void *)this + 8) = v2;
  *((_DWORD *)this + 20) = 0;
  uint64_t v6 = ubrk_next();
  uint64_t v5 = v6;
  if (v6 != -1)
  {
    int v7 = *((_DWORD *)this + 21);
    if ((int)v6 - v7 >= 2)
    {
      morphun::tokenizer::SemiticWordAndDelimiterTokenExtractor::decompoundWord(*((void **)this + 1), v3, *((void *)this + 5), *((void *)this + 6), v7, v6);
      int v8 = (char *)*((void *)this + 7);
      uint64_t v9 = (char *)*((void *)this + 8);
      uint64_t v10 = v9 - v8;
      if ((unint64_t)(v9 - v8) >= 5)
      {
        if (*((_DWORD *)v9 - 1) != v5)
        {
          unint64_t v11 = *((void *)this + 9);
          if ((unint64_t)v9 >= v11)
          {
            uint64_t v13 = v10 >> 2;
            unint64_t v14 = (v10 >> 2) + 1;
            if (v14 >> 62) {
              std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v15 = v11 - (void)v8;
            if (v15 >> 1 > v14) {
              unint64_t v14 = v15 >> 1;
            }
            if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v14 = 0x3FFFFFFFFFFFFFFFLL;
            }
            if (v14)
            {
              unint64_t v14 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v14);
              int v8 = (char *)*((void *)this + 7);
              uint64_t v9 = (char *)*((void *)this + 8);
            }
            else
            {
              uint64_t v16 = 0;
            }
            std::basic_string<char16_t>::size_type v17 = (char *)(v14 + 4 * v13);
            unint64_t v18 = v14 + 4 * v16;
            *(_DWORD *)std::basic_string<char16_t>::size_type v17 = v5;
            unsigned int v12 = v17 + 4;
            while (v9 != v8)
            {
              int v19 = *((_DWORD *)v9 - 1);
              v9 -= 4;
              *((_DWORD *)v17 - 1) = v19;
              v17 -= 4;
            }
            *((void *)this + 7) = v17;
            *((void *)this + 8) = v12;
            *((void *)this + 9) = v18;
            if (v8)
            {
              operator delete(v8);
              int v8 = *v3;
            }
            else
            {
              int v8 = v17;
            }
          }
          else
          {
            *(_DWORD *)uint64_t v9 = v5;
            unsigned int v12 = v9 + 4;
          }
          *((void *)this + 8) = v12;
        }
        uint64_t v20 = *((int *)this + 20);
        *((_DWORD *)this + 20) = v20 + 1;
        uint64_t v5 = *(unsigned int *)&v8[4 * v20];
      }
    }
    goto LABEL_25;
  }
  return v5;
}

void morphun::tokenizer::SemiticTokenExtractorIterator::~SemiticTokenExtractorIterator(morphun::tokenizer::SemiticTokenExtractorIterator *this)
{
  morphun::tokenizer::SemiticTokenExtractorIterator::~SemiticTokenExtractorIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;

  *(void *)this = &unk_1F2A11870;
  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator((morphun::tokenizer::SemiticTokenExtractorIterator *)((char *)this + 16));
}

uint64_t **com::apple::siri::tokenizer::data::config_zh_CN::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696DF48;
  uint64_t v4 = L"zh_Hans";
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t mdaf_getAnalyzer(uint64_t a1, const __CFLocale *a2)
{
  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v6, a2);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 24))(a1, v6);
  return v3;
}

void sub_1D2D34480(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v3, v2, v4);
    __cxa_end_catch();
    JUMPOUT(0x1D2D34434);
  }
  _Unwind_Resume(exception_object);
}

uint64_t mdaf_getDefaultInstance(morphun::analysis::DefaultAnalyzerFactory *a1)
{
  return morphun::analysis::DefaultAnalyzerFactory::getDefaultInstance(a1);
}

void mdaf_create()
{
}

void sub_1D2D345A8(_Unwind_Exception *a1, int a2)
{
  uint64_t v5 = v3;
  MEMORY[0x1D942B8B0](v5, 0x10F3C40F4CE41AFLL);
  if (a2 == 1)
  {
    int v7 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v7, v2, v8);
    __cxa_end_catch();
    JUMPOUT(0x1D2D34594);
  }
  _Unwind_Resume(a1);
}

uint64_t mdaf_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

void morphun::dialog::DictionaryLookupInflector::~DictionaryLookupInflector(morphun::dialog::DictionaryLookupInflector *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::DictionaryLookupInflector::~DictionaryLookupInflector(morphun::dialog::DictionaryLookupInflector *this, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)this = v4;
  *(void *)((char *)this + *(void *)(v4 - 40)) = a2[4];
  uint64_t v5 = (void *)*((void *)this + 25);
  if (v5)
  {
    *((void *)this + 26) = v5;
    operator delete(v5);
  }
  int v8 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v8);
  uint64_t v6 = (void *)*((void *)this + 19);
  if (v6)
  {
    *((void *)this + 20) = v6;
    operator delete(v6);
  }
  uint64_t v7 = a2[2];
  *(void *)this = v7;
  *(void *)((char *)this + *(void *)(v7 - 40)) = a2[3];
}

uint64_t *morphun::dialog::DictionaryLookupInflector::DictionaryLookupInflector(uint64_t *a1, morphun::dictionary::DictionaryMetaData *a2, uint64_t a3, uint64_t **a4, char a5)
{
  *a1 = (uint64_t)&unk_1F2A08C08;
  memset(v7, 0, sizeof(v7));
  uint64_t result = morphun::analysis::MorphologicalAnalyzer::MorphologicalAnalyzer(a1, (uint64_t *)&off_1F2A05498, a2, v7, a3, a4);
  *uint64_t result = (uint64_t)&off_1F2A09718;
  *((unsigned char *)result + 224) = a5;
  return result;
}

void morphun::dialog::DictionaryLookupInflector::inflectWord(uint64_t a1, uint64_t a2, const void *a3, unint64_t a4, std::basic_string<char16_t> *a5, std::basic_string<char16_t> *a6)
{
  *(void *)&long long v144 = *MEMORY[0x1E4F143B8];
  if (morphun::util::gLogLevel <= 0)
  {
    uint64_t v10 = (const void **)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v142, (char *)L"DictionaryLookupInflector::inflectWord");
    if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v142.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  *(void *)std::basic_string<char16_t>::size_type v131 = 0;
  if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v12, (uint64_t)v131, (const UChar *)a3, a4))
  {
    if (morphun::util::gLogLevel > 0)
    {
LABEL_80:
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      return;
    }
    if (a4 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v53 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v53 = a4 | 3;
      }
      p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v53 + 1);
      __dst.__r_.__value_.__l.__size_ = a4;
      __dst.__r_.__value_.__r.__words[2] = v54 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = a4;
      p_dst = &__dst;
      if (!a4) {
        goto LABEL_69;
      }
    }
    memmove(p_dst, a3, 2 * a4);
LABEL_69:
    p_dst->__r_.__value_.__s.__data_[a4] = 0;
    std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)"\t", (const std::basic_string<char16_t>::value_type *)1, v13);
    std::basic_string<char16_t> v143 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    std::basic_string<char16_t>::append(&v143, (const std::basic_string<char16_t>::value_type *)":", 0x28uLL);
    std::basic_string<char16_t> v142 = v143;
    memset(&v143, 0, sizeof(v143));
    if (morphun::util::gLogLevel <= 0)
    {
      if ((v142.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v55 = &v142;
      }
      else {
        unint64_t v55 = (std::basic_string<char16_t> *)v142.__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v55);
    }
    if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v142.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v143.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    goto LABEL_80;
  }
  std::basic_string<char16_t> v128 = 0;
  std::basic_string<char16_t> v129 = 0;
  uint64_t v130 = 0;
  morphun::dictionary::Inflector::getInflectionPatternsForWord(v11, (uint64_t)a3, a4, &v128);
  uint64_t v15 = v128;
  if (v128 == v129)
  {
    if (morphun::util::gLogLevel > 0) {
      goto LABEL_247;
    }
    if (a4 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      uint64_t v104 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
      if ((a4 | 3) != 0xB) {
        uint64_t v104 = a4 | 3;
      }
      std::basic_string<char16_t> v40 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v104 + 1);
      __dst.__r_.__value_.__l.__size_ = a4;
      __dst.__r_.__value_.__r.__words[2] = v105 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v40;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = a4;
      std::basic_string<char16_t> v40 = &__dst;
      if (!a4) {
        goto LABEL_236;
      }
    }
    memmove(v40, a3, 2 * a4);
LABEL_236:
    v40->__r_.__value_.__s.__data_[a4] = 0;
    std::basic_string<char16_t>::insert(&__dst, (std::basic_string<char16_t>::size_type)"\t", (const std::basic_string<char16_t>::value_type *)1, v14);
    std::basic_string<char16_t> v143 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    std::basic_string<char16_t>::append(&v143, L": no inflection patterns found\n", 0x1FuLL);
    std::basic_string<char16_t> v142 = v143;
    memset(&v143, 0, sizeof(v143));
    if (morphun::util::gLogLevel <= 0)
    {
      if ((v142.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v106 = &v142;
      }
      else {
        std::basic_string<char16_t>::size_type v106 = (std::basic_string<char16_t> *)v142.__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v106);
    }
    if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v142.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v143.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
LABEL_247:
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 24) = 0;
    if (v15) {
      goto LABEL_230;
    }
    return;
  }
  uint64_t v125 = 0;
  uint64_t v126 = 0;
  uint64_t v127 = 0;
  morphun::analysis::DictionaryExposableMorphology::getInflectionGrammemes((uint64_t)a3, a4, *(uint64_t *)v131, (uint64_t)v128, (uint64_t)v129, &v125);
  uint64_t v16 = v125;
  if (v125 == v126)
  {
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 24) = 0;
    if (v16) {
      goto LABEL_228;
    }
    goto LABEL_229;
  }
  (*(void (**)(uint64_t, void **))(*(void *)a2 + 24))(a2, &v125);
  std::basic_string<char16_t> __src = (void *)a3;
  std::basic_string<char16_t> __p = 0;
  uint64_t v123 = 0;
  unint64_t v124 = 0;
  std::vector<long long>::reserve(&__p, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6->__r_.__value_.__l.__size_ - a6->__r_.__value_.__r.__words[0]) >> 3));
  std::basic_string<char16_t>::size_type v17 = a6->__r_.__value_.__r.__words[0];
  std::basic_string<char16_t>::size_type size = a6->__r_.__value_.__l.__size_;
  if (a6->__r_.__value_.__r.__words[0] != size)
  {
    do
    {
      if (*(char *)(v17 + 23) < 0)
      {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v143, *(const std::basic_string<char16_t>::value_type **)v17, *(void *)(v17 + 8));
      }
      else
      {
        long long v19 = *(_OWORD *)v17;
        v143.__r_.__value_.__r.__words[2] = *(void *)(v17 + 16);
        *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v19;
      }
      memset(&v142, 0, sizeof(v142));
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v142;
      LOBYTE(__dst.__r_.__value_.__r.__words[1]) = 0;
      v142.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x18uLL);
      v142.__r_.__value_.__l.__size_ = v142.__r_.__value_.__r.__words[0];
      v142.__r_.__value_.__r.__words[2] = v142.__r_.__value_.__r.__words[0] + 24;
      v142.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v142.__r_.__value_.__r.__words[2], (long long *)&v143, &v144, (std::basic_string<char16_t> *)v142.__r_.__value_.__l.__data_);
      uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)&v142);
      uint64_t v21 = BinaryProperties;
      BOOL v22 = v123;
      if ((unint64_t)v123 >= v124)
      {
        unint64_t v24 = (char *)__p;
        int64_t v25 = (v123 - (unsigned char *)__p) >> 3;
        unint64_t v26 = v25 + 1;
        if ((unint64_t)(v25 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v27 = v124 - (void)__p;
        if ((uint64_t)(v124 - (void)__p) >> 2 > v26) {
          unint64_t v26 = v27 >> 2;
        }
        BOOL v28 = (unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8;
        unint64_t v29 = 0x1FFFFFFFFFFFFFFFLL;
        if (!v28) {
          unint64_t v29 = v26;
        }
        if (v29)
        {
          unint64_t v29 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v29);
          unint64_t v24 = (char *)__p;
          BOOL v22 = v123;
        }
        else
        {
          uint64_t v30 = 0;
        }
        int v31 = (uint64_t *)(v29 + 8 * v25);
        *int v31 = v21;
        uint64_t v23 = v31 + 1;
        while (v22 != v24)
        {
          uint64_t v32 = *((void *)v22 - 1);
          v22 -= 8;
          *--int v31 = v32;
        }
        std::basic_string<char16_t> __p = v31;
        uint64_t v123 = (char *)v23;
        unint64_t v124 = v29 + 8 * v30;
        if (v24) {
          operator delete(v24);
        }
      }
      else
      {
        *(void *)uint64_t v123 = BinaryProperties;
        uint64_t v23 = (uint64_t *)(v22 + 8);
      }
      uint64_t v123 = (char *)v23;
      __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v142;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
      if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v143.__r_.__value_.__l.__data_);
      }
      v17 += 24;
    }
    while (v17 != size);
  }
  uint64_t v33 = v126;
  if (v126 == v125)
  {
    std::basic_string<char16_t>::size_type v36 = 0;
    std::basic_string<char16_t>::size_type v37 = 0;
    unint64_t v38 = v126;
    unint64_t v35 = 0x1EA696000uLL;
  }
  else
  {
    unint64_t v34 = 0xCCCCCCCCCCCCCCCDLL * ((v126 - (unsigned char *)v125) >> 3);
    if (v34 >> 61) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v35 = 0x1EA696000;
    std::basic_string<char16_t>::size_type v36 = (unint64_t *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(0xCCCCCCCCCCCCCCCDLL * ((v126 - (unsigned char *)v125) >> 3));
    bzero(v36, 8 * v34);
    std::basic_string<char16_t>::size_type v37 = &v36[v34];
    uint64_t v33 = v125;
    unint64_t v38 = v126;
  }
  uint64_t v41 = v38 - v33;
  if (v41 >= 1)
  {
    unint64_t v42 = 0;
    int64_t v43 = v41 / 0x28uLL;
    if (v43 <= 1) {
      int64_t v43 = 1;
    }
    do
    {
      v36[v42] = v42;
      ++v42;
    }
    while (v43 != v42);
  }
  if (*(unsigned char *)(a2 + 224))
  {
    unint64_t v44 = v37 - v36;
    if (v37 == v36)
    {
      uint64_t v46 = 0;
    }
    else
    {
      if ((char *)v37 - (char *)v36 < 0) {
        std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
      }
      std::basic_string<char16_t>::size_type v45 = std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(v37 - v36);
      memmove(v45, v36, (char *)v37 - (char *)v36);
      uint64_t v46 = (uint64_t)v45;
    }
    v121[0] = a2;
    v121[1] = &v125;
    v121[2] = &__p;
    unint64_t v56 = 126 - 2 * __clz(v44);
    if (v37 == v36) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = v56;
    }
    std::basic_string<char16_t>::size_type v109 = (unint64_t *)v46;
    uint64_t v114 = (unint64_t *)(v46 + 8 * v44);
    std::__introsort<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *,false>(v46, v114, (uint64_t)v121, v57, 1);
    if (*(uint64_t *)(v35 + 3112) <= 0)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v133, "S");
      if (v37 != v36)
      {
        uint64_t v58 = 8 * v44;
        unint64_t v59 = v109;
        do
        {
          unint64_t v60 = *v59;
          std::basic_string<char16_t>::append(&v133, (const std::basic_string<char16_t>::value_type *)"\t", 2uLL);
          std::basic_string<char16_t>::size_type v61 = v125;
          if (0xCCCCCCCCCCCCCCCDLL * ((v126 - (unsigned char *)v125) >> 3) <= v60) {
            std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
          }
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v140, "I");
          std::basic_string<char16_t>::size_type v62 = (char *)&v61[5 * v60];
          int v63 = v62[32];
          if (v62[32])
          {
            std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v138, "p");
            uint64_t v65 = *((void *)v62 + 1);
            uint64_t v64 = (int *)(v62 + 8);
            morphun::dictionary::metadata::MarisaTrie<int>::getKey(&v137, (marisa::Trie *)(*(void *)(v65 + 32) + 240), *(_DWORD *)v65);
            if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v66 = &v137;
            }
            else {
              int v66 = (std::basic_string<char16_t> *)v137.__r_.__value_.__r.__words[0];
            }
            if ((v137.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v67 = HIBYTE(v137.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v67 = v137.__r_.__value_.__l.__size_;
            }
            std::basic_string<char16_t>::append(&v138, (const std::basic_string<char16_t>::value_type *)v66, v67);
            std::basic_string<char16_t>::append(&v138, (const std::basic_string<char16_t>::value_type *)",", 0xAuLL);
            morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)v64 + 40), v64[2], &v136);
            if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v68 = &v136;
            }
            else {
              std::basic_string<char16_t>::size_type v68 = (std::basic_string<char16_t> *)v136.__r_.__value_.__r.__words[0];
            }
            if ((v136.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::basic_string<char16_t>::size_type v69 = HIBYTE(v136.__r_.__value_.__r.__words[2]);
            }
            else {
              std::basic_string<char16_t>::size_type v69 = v136.__r_.__value_.__l.__size_;
            }
            std::basic_string<char16_t>::append(&v138, (const std::basic_string<char16_t>::value_type *)v68, v69);
            std::basic_string<char16_t>::append(&v138, L"\"", 1uLL);
            if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0) {
              std::basic_string<char16_t>::__init_copy_ctor_external(&v139, v138.__r_.__value_.__l.__data_, v138.__r_.__value_.__l.__size_);
            }
            else {
              std::basic_string<char16_t> v139 = v138;
            }
          }
          else
          {
            memset(&v139, 0, sizeof(v139));
          }
          int v70 = SHIBYTE(v139.__r_.__value_.__r.__words[2]);
          unint64_t v71 = (void *)v139.__r_.__value_.__r.__words[0];
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v72 = &v139;
          }
          else {
            uint64_t v72 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
          }
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v73 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v73 = v139.__r_.__value_.__l.__size_;
          }
          std::basic_string<char16_t>::append(&v140, (const std::basic_string<char16_t>::value_type *)v72, v73);
          std::basic_string<char16_t> __dst = v140;
          memset(&v140, 0, sizeof(v140));
          std::basic_string<char16_t>::append(&__dst, L"], grammemes[", 0xDuLL);
          std::basic_string<char16_t> v143 = __dst;
          memset(&__dst, 0, sizeof(__dst));
          unint64_t v74 = v61[5 * v60];
          BOOL v75 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(v12 + 8));
          morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v75, v74, (uint64_t *)&v134);
          morphun::util::StringViewUtils::join(L",", 1uLL, &v134, (uint64_t)&v135);
          if ((v135.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v76 = &v135;
          }
          else {
            uint64_t v76 = (std::basic_string<char16_t> *)v135.__r_.__value_.__r.__words[0];
          }
          if ((v135.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v77 = HIBYTE(v135.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v77 = v135.__r_.__value_.__l.__size_;
          }
          std::basic_string<char16_t>::append(&v143, (const std::basic_string<char16_t>::value_type *)v76, v77);
          std::basic_string<char16_t> v142 = v143;
          memset(&v143, 0, sizeof(v143));
          std::basic_string<char16_t>::append(&v142, L"]", 1uLL);
          std::basic_string<char16_t> v132 = v142;
          memset(&v142, 0, sizeof(v142));
          if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v135.__r_.__value_.__l.__data_);
          }
          v119[0] = &v134;
          std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v119);
          if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v143.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(__dst.__r_.__value_.__l.__data_);
            if (v70 < 0) {
LABEL_144:
            }
              operator delete(v71);
          }
          else if (v70 < 0)
          {
            goto LABEL_144;
          }
          unint64_t v35 = 0x1EA696000;
          if (v63)
          {
            if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v136.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v137.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v138.__r_.__value_.__l.__data_);
            }
          }
          if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v140.__r_.__value_.__l.__data_);
          }
          int v78 = SHIBYTE(v132.__r_.__value_.__r.__words[2]);
          int v79 = (void *)v132.__r_.__value_.__r.__words[0];
          if ((v132.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v80 = &v132;
          }
          else {
            uint64_t v80 = (std::basic_string<char16_t> *)v132.__r_.__value_.__r.__words[0];
          }
          if ((v132.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v81 = HIBYTE(v132.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v81 = v132.__r_.__value_.__l.__size_;
          }
          std::basic_string<char16_t>::append(&v133, (const std::basic_string<char16_t>::value_type *)v80, v81);
          std::basic_string<char16_t>::append(&v133, (const std::basic_string<char16_t>::value_type *)"\n", 1uLL);
          if (v78 < 0) {
            operator delete(v79);
          }
          ++v59;
          v58 -= 8;
        }
        while (v58);
      }
      if (*(uint64_t *)(v35 + 3112) <= 0)
      {
        if ((v133.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v82 = &v133;
        }
        else {
          int v82 = (std::basic_string<char16_t> *)v133.__r_.__value_.__r.__words[0];
        }
        morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v82);
      }
      if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v133.__r_.__value_.__l.__data_);
      }
    }
    std::basic_string<char16_t>::size_type v52 = v109;
    if (v109 == v114)
    {
LABEL_221:
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      if (v52) {
LABEL_222:
      }
        operator delete(v52);
      goto LABEL_223;
    }
  }
  else
  {
    int v47 = v36;
    if (v36 != v37)
    {
      unint64_t v48 = v36 + 1;
      int v47 = v36;
      if (v36 + 1 != v37)
      {
        int v47 = v36;
        do
        {
          unint64_t v49 = *v47;
          unint64_t v50 = 0xCCCCCCCCCCCCCCCDLL * ((v126 - (unsigned char *)v125) >> 3);
          if (v50 <= *v48 || v50 <= v49) {
            std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
          }
          if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(a2, (int8x8_t *)v125 + 5 * *v48, (int8x8_t *)v125 + 5 * v49, (uint64_t *)__p, (uint64_t *)v123) < 0)int v47 = v48; {
          ++v48;
          }
        }
        while (v48 != v37);
      }
    }
    std::basic_string<char16_t>::size_type v52 = (unint64_t *)std::__allocate_at_least[abi:ne180100]<std::allocator<void (*)(morphun::Tokenizer const*,std::u16string_view,morphun::Token_Head *)>>(1uLL);
    *std::basic_string<char16_t>::size_type v52 = *v47;
    uint64_t v114 = v52 + 1;
    unint64_t v35 = 0x1EA696000;
  }
  uint64_t v83 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((a4 | 3) != 0xB) {
    uint64_t v83 = a4 | 3;
  }
  uint64_t v108 = v83 + 1;
  unint64_t v110 = v52;
  uint64_t __len = 2 * a4;
  while (1)
  {
    if (0xCCCCCCCCCCCCCCCDLL * ((v126 - (unsigned char *)v125) >> 3) <= *v52) {
      std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
    }
    std::basic_string<char16_t>::size_type v84 = (char *)v125 + 40 * *v52;
    if (!v84[32])
    {
      if (a4 > 0x7FFFFFFFFFFFFFF7) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      std::basic_string<char16_t>::size_type v52 = v110;
      if (a4 >= 0xB)
      {
        unint64_t v103 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v108);
        v142.__r_.__value_.__l.__size_ = a4;
        v142.__r_.__value_.__r.__words[2] = v107 | 0x8000000000000000;
        v142.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v103;
      }
      else
      {
        *((unsigned char *)&v142.__r_.__value_.__s + 23) = a4;
        unint64_t v103 = &v142;
        if (!a4)
        {
LABEL_251:
          v103[a4] = 0;
          *(std::basic_string<char16_t> *)a1 = v142;
          *(unsigned char *)(a1 + 24) = 1;
          if (v110) {
            goto LABEL_222;
          }
          goto LABEL_223;
        }
      }
      memmove(v103, __src, __len);
      goto LABEL_251;
    }
    std::basic_string<char16_t>::size_type v85 = (uint64_t *)(v84 + 8);
    if (*(uint64_t *)(v35 + 3112) > 0) {
      goto LABEL_208;
    }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v133, (char *)L"reinflect function called:\n\targs:\n");
    std::basic_string<char16_t>::append(&v133, (const std::basic_string<char16_t>::value_type *)"\t", 7uLL);
    std::basic_string<char16_t> v134 = v133;
    memset(&v133, 0, sizeof(v133));
    if (a4 > 0x7FFFFFFFFFFFFFF7) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    if (a4 >= 0xB)
    {
      unint64_t v86 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v108);
      v132.__r_.__value_.__l.__size_ = a4;
      v132.__r_.__value_.__r.__words[2] = v87 | 0x8000000000000000;
      v132.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v86;
LABEL_164:
      memmove(v86, __src, __len);
      goto LABEL_165;
    }
    *((unsigned char *)&v132.__r_.__value_.__s + 23) = a4;
    unint64_t v86 = &v132;
    if (a4) {
      goto LABEL_164;
    }
LABEL_165:
    v86->__r_.__value_.__s.__data_[a4] = 0;
    int v88 = SHIBYTE(v132.__r_.__value_.__r.__words[2]);
    uint64_t v89 = (void *)v132.__r_.__value_.__r.__words[0];
    if ((v132.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v90 = &v132;
    }
    else {
      long long v90 = (std::basic_string<char16_t> *)v132.__r_.__value_.__r.__words[0];
    }
    if ((v132.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v91 = HIBYTE(v132.__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v91 = v132.__r_.__value_.__l.__size_;
    }
    std::basic_string<char16_t>::append(&v134, (const std::basic_string<char16_t>::value_type *)v90, v91);
    std::basic_string<char16_t> v135 = v134;
    memset(&v134, 0, sizeof(v134));
    std::basic_string<char16_t>::append(&v135, (const std::basic_string<char16_t>::value_type *)"\n", 0x18uLL);
    std::basic_string<char16_t> v139 = v135;
    memset(&v135, 0, sizeof(v135));
    unint64_t v92 = v85[2];
    unint64_t v93 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(v12 + 8));
    morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v93, v92, (uint64_t *)&v118);
    morphun::util::StringViewUtils::join(L", ", 2uLL, &v118, (uint64_t)v119);
    if ((v120 & 0x80u) == 0) {
      unint64_t v94 = v119;
    }
    else {
      unint64_t v94 = (void **)v119[0];
    }
    if ((v120 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v95 = v120;
    }
    else {
      std::basic_string<char16_t>::size_type v95 = (std::basic_string<char16_t>::size_type)v119[1];
    }
    std::basic_string<char16_t>::append(&v139, (const std::basic_string<char16_t>::value_type *)v94, v95);
    std::basic_string<char16_t> v140 = v139;
    memset(&v139, 0, sizeof(v139));
    std::basic_string<char16_t>::append(&v140, L"\n\t\tconstraints: ", 0x10uLL);
    std::basic_string<char16_t> __dst = v140;
    memset(&v140, 0, sizeof(v140));
    morphun::util::StringViewUtils::join(L", ", 2uLL, a5, (uint64_t)v116);
    if ((v117 & 0x80u) == 0) {
      uint64_t v96 = v116;
    }
    else {
      uint64_t v96 = (void **)v116[0];
    }
    if ((v117 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v97 = v117;
    }
    else {
      std::basic_string<char16_t>::size_type v97 = (std::basic_string<char16_t>::size_type)v116[1];
    }
    std::basic_string<char16_t>::append(&__dst, (const std::basic_string<char16_t>::value_type *)v96, v97);
    std::basic_string<char16_t> v143 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    std::basic_string<char16_t>::append(&v143, (const std::basic_string<char16_t>::value_type *)"\n", 1uLL);
    std::basic_string<char16_t> v142 = v143;
    memset(&v143, 0, sizeof(v143));
    if (*(uint64_t *)(v35 + 3112) <= 0)
    {
      if ((v142.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v98 = &v142;
      }
      else {
        unint64_t v98 = (std::basic_string<char16_t> *)v142.__r_.__value_.__r.__words[0];
      }
      morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v98);
    }
    if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v142.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v143.__r_.__value_.__l.__data_);
    }
    if ((char)v117 < 0) {
      operator delete(v116[0]);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v140.__r_.__value_.__l.__data_);
    }
    if ((char)v120 < 0) {
      operator delete(v119[0]);
    }
    v116[0] = &v118;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v116);
    if (SHIBYTE(v139.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v139.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v135.__r_.__value_.__l.__data_);
      if (v88 < 0) {
LABEL_216:
      }
        operator delete(v89);
    }
    else if (v88 < 0)
    {
      goto LABEL_216;
    }
    if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v134.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v133.__r_.__value_.__l.__data_);
    }
LABEL_208:
    uint64_t v99 = *v85;
    uint64_t v100 = v85[2];
    uint64_t v101 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)a5);
    morphun::dictionary::Inflector_InflectionPattern::reinflect(&v142, v99, v100, v101, (char *)__src, a4);
    if ((SHIBYTE(v142.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      break;
    }
    std::basic_string<char16_t>::size_type v102 = (void *)v142.__r_.__value_.__r.__words[0];
    if (v142.__r_.__value_.__l.__size_)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a1, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
      *(unsigned char *)(a1 + 24) = 1;
      operator delete(v102);
      goto LABEL_254;
    }
    operator delete(v142.__r_.__value_.__l.__data_);
LABEL_213:
    if (++v52 == v114)
    {
      std::basic_string<char16_t>::size_type v52 = v110;
      goto LABEL_221;
    }
  }
  if (!*((unsigned char *)&v142.__r_.__value_.__s + 23)) {
    goto LABEL_213;
  }
  *(std::basic_string<char16_t> *)a1 = v142;
  *(unsigned char *)(a1 + 24) = 1;
LABEL_254:
  std::basic_string<char16_t>::size_type v52 = v110;
  if (v110) {
    goto LABEL_222;
  }
LABEL_223:
  if (v36) {
    operator delete(v36);
  }
  if (__p)
  {
    uint64_t v123 = (char *)__p;
    operator delete(__p);
  }
  uint64_t v16 = v125;
  if (v125)
  {
LABEL_228:
    uint64_t v126 = v16;
    operator delete(v16);
  }
LABEL_229:
  uint64_t v15 = v128;
  if (v128) {
LABEL_230:
  }
    operator delete(v15);
}

void sub_1D2D358CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  if (a11) {
    operator delete(a11);
  }
  if (v47) {
    operator delete(v47);
  }
  if (a29) {
    operator delete(a29);
  }
  if (a32) {
    operator delete(a32);
  }
  if (a35) {
    operator delete(a35);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::anonymous namespace'::traceLogInflectCall(const void **a1, const void *a2, unint64_t a3, std::basic_string<char16_t> *a4, std::basic_string<char16_t> *a5)
{
  if (*((char *)a1 + 23) >= 0) {
    unint64_t v10 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    unint64_t v10 = (unint64_t)a1[1];
  }
  uint64_t v11 = &v33;
  std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v33, v10 + 6);
  if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v11 = (std::basic_string<char16_t> *)v33.__r_.__value_.__r.__words[0];
  }
  if (v10)
  {
    if (*((char *)a1 + 23) >= 0) {
      uint64_t v12 = a1;
    }
    else {
      uint64_t v12 = *a1;
    }
    memmove(v11, v12, 2 * v10);
  }
  std::basic_string<char16_t>::size_type v13 = (char *)v11 + 2 * v10;
  *(void *)std::basic_string<char16_t>::size_type v13 = *(void *)L"(word=";
  *((_DWORD *)v13 + 2) = 3997796;
  *((_WORD *)v13 + 6) = 0;
  if (a3 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a3 >= 0xB)
  {
    uint64_t v15 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB) {
      uint64_t v15 = a3 | 3;
    }
    p_dst = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v15 + 1);
    std::basic_string<char16_t>::size_type v31 = a3;
    int64_t v32 = v16 | 0x8000000000000000;
    std::basic_string<char16_t> __dst = p_dst;
    goto LABEL_18;
  }
  HIBYTE(v32) = a3;
  p_dst = &__dst;
  if (a3) {
LABEL_18:
  }
    memmove(p_dst, a2, 2 * a3);
  *((_WORD *)p_dst + a3) = 0;
  int v17 = SHIBYTE(v32);
  unint64_t v18 = __dst;
  if (v32 >= 0) {
    long long v19 = (const std::basic_string<char16_t>::value_type *)&__dst;
  }
  else {
    long long v19 = (const std::basic_string<char16_t>::value_type *)__dst;
  }
  if (v32 >= 0) {
    std::basic_string<char16_t>::size_type v20 = HIBYTE(v32);
  }
  else {
    std::basic_string<char16_t>::size_type v20 = v31;
  }
  std::basic_string<char16_t>::append(&v33, v19, v20);
  std::basic_string<char16_t> v34 = v33;
  memset(&v33, 0, sizeof(v33));
  std::basic_string<char16_t>::append(&v34, (const std::basic_string<char16_t>::value_type *)",", 0x11uLL);
  std::basic_string<char16_t> v35 = v34;
  memset(&v34, 0, sizeof(v34));
  morphun::util::StringViewUtils::join(L", ", 2uLL, a4, (uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    uint64_t v21 = v28;
  }
  else {
    uint64_t v21 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v22 = v29;
  }
  else {
    std::basic_string<char16_t>::size_type v22 = (std::basic_string<char16_t>::size_type)v28[1];
  }
  std::basic_string<char16_t>::append(&v35, (const std::basic_string<char16_t>::value_type *)v21, v22);
  std::basic_string<char16_t> v36 = v35;
  memset(&v35, 0, sizeof(v35));
  std::basic_string<char16_t>::append(&v36, (const std::basic_string<char16_t>::value_type *)"]", 0x23uLL);
  std::basic_string<char16_t> v37 = v36;
  memset(&v36, 0, sizeof(v36));
  morphun::util::StringViewUtils::join(L", ", 2uLL, a5, (uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    uint64_t v23 = __p;
  }
  else {
    uint64_t v23 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::basic_string<char16_t>::size_type v24 = v27;
  }
  else {
    std::basic_string<char16_t>::size_type v24 = (std::basic_string<char16_t>::size_type)__p[1];
  }
  std::basic_string<char16_t>::append(&v37, (const std::basic_string<char16_t>::value_type *)v23, v24);
  std::basic_string<char16_t> v38 = v37;
  memset(&v37, 0, sizeof(v37));
  std::basic_string<char16_t>::append(&v38, (const std::basic_string<char16_t>::value_type *)"]", 3uLL);
  std::basic_string<char16_t> v39 = v38;
  memset(&v38, 0, sizeof(v38));
  if (morphun::util::gLogLevel <= 0)
  {
    if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t v25 = &v39;
    }
    else {
      int64_t v25 = (std::basic_string<char16_t> *)v39.__r_.__value_.__r.__words[0];
    }
    morphun::util::logToTopOfStackLogger(0, 0, (uint64_t)v25);
  }
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if ((char)v27 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  if ((char)v29 < 0) {
    operator delete(v28[0]);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v34.__r_.__value_.__l.__data_);
    if ((v17 & 0x80000000) == 0) {
      goto LABEL_58;
    }
  }
  else if ((v17 & 0x80000000) == 0)
  {
    goto LABEL_58;
  }
  operator delete(v18);
LABEL_58:
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v33.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D36004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (*(char *)(v51 - 73) < 0) {
    operator delete(*(void **)(v51 - 96));
  }
  if (*(char *)(v51 - 105) < 0) {
    operator delete(*(void **)(v51 - 128));
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v51 - 137) < 0) {
    operator delete(*(void **)(v51 - 160));
  }
  if (a49 < 0) {
    operator delete(a44);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a42 < 0) {
    operator delete(a37);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (v50 < 0) {
    operator delete(v49);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(uint64_t a1, int8x8_t *a2, int8x8_t *a3, uint64_t *a4, uint64_t *a5)
{
  int8x8_t v7 = *a2;
  int8x8_t v8 = *a3;
  if (a4 == a5) {
    goto LABEL_7;
  }
  int64_t v9 = 0;
  unint64_t v10 = a4;
  do
  {
    uint64_t v11 = *v10++;
    int64_t v9 = ((v11 & *(void *)&v7) != 0) | (unint64_t)(2 * v9);
  }
  while (v10 != a5);
  int64_t v12 = 0;
  do
  {
    uint64_t v13 = *a4++;
    int64_t v12 = ((v13 & *(void *)&v8) != 0) | (unint64_t)(2 * v12);
  }
  while (a4 != a5);
  if (v9 == v12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t, int8x8_t, int8x8_t))(*(void *)a1 + 48))(a1, *a2, *a3);
    if (!result)
    {
      if (a2[4].i8[0])
      {
        if (a3[4].i8[0])
        {
          uint8x8_t v15 = (uint8x8_t)vcnt_s8(v7);
          v15.i16[0] = vaddlv_u8(v15);
          unsigned int v16 = v15.i32[0];
          uint8x8_t v17 = (uint8x8_t)vcnt_s8(v8);
          v17.i16[0] = vaddlv_u8(v17);
          if (v16 == v17.i32[0])
          {
            int v18 = *(unsigned __int16 *)(*(void *)&a2[1] + 18);
            int v19 = *(unsigned __int16 *)(*(void *)&a3[1] + 18);
            uint64_t v20 = 1;
            if ((__int16)v18 >= (__int16)v19) {
              uint64_t v20 = -1;
            }
            if (v18 == v19) {
              return 0;
            }
            else {
              return v20;
            }
          }
          else if (v16 < v17.i32[0])
          {
            return -1;
          }
          else
          {
            return 1;
          }
        }
        else
        {
          return -1;
        }
      }
      else
      {
        return 1;
      }
    }
  }
  else if (v9 > v12)
  {
    return -1;
  }
  else
  {
    return 1;
  }
  return result;
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *,false>(uint64_t result, unint64_t *a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v10 = (unint64_t *)result;
LABEL_2:
  std::basic_string<char16_t>::size_type v145 = a2;
  std::basic_string<char16_t>::size_type v146 = a2 - 1;
  uint64_t v141 = a2 - 3;
  std::basic_string<char16_t> v142 = a2 - 2;
  while (1)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (char *)a2 - (char *)v10;
    uint64_t v13 = a2 - v10;
    if (v6 || !v5)
    {
      switch(v13)
      {
        case 0:
        case 1:
          return result;
        case 2:
          uint64_t v73 = **(void **)(a3 + 8);
          unint64_t v74 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v73) >> 3);
          if (v74 <= *v146 || v74 <= *v11) {
            goto LABEL_174;
          }
          uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v73 + 40 * *v146), (int8x8_t *)(v73 + 40 * *v11), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
          if (result < 0)
          {
            unint64_t v75 = *v11;
            *uint64_t v11 = *v146;
            *std::basic_string<char16_t>::size_type v146 = v75;
          }
          break;
        case 3:
          return std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v11, v11 + 1, v146, a3);
        case 4:
          return std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v11, v11 + 1, v11 + 2, v146, a3);
        case 5:
          return std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *,0>(v11, v11 + 1, v11 + 2, v11 + 3, v146, a3);
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v12 <= 191)
    {
      uint64_t v76 = v11 + 1;
      BOOL v78 = v11 == a2 || v76 == a2;
      if (a5)
      {
        if (v78) {
          return result;
        }
        uint64_t v79 = 0;
        uint64_t v80 = v11;
        while (1)
        {
          std::basic_string<char16_t>::size_type v81 = v76;
          unint64_t v82 = v80[1];
          uint64_t v83 = **(void **)(a3 + 8);
          unint64_t v84 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v83) >> 3);
          if (v84 <= v82) {
            break;
          }
          unint64_t v85 = *v80;
          if (v84 <= v85) {
            break;
          }
          uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v83 + 40 * v82), (int8x8_t *)(v83 + 40 * v85), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
          if (result < 0)
          {
            unint64_t v86 = *v81;
            uint64_t v87 = v79;
            while (1)
            {
              *(unint64_t *)((char *)v11 + v87 + 8) = *(unint64_t *)((char *)v11 + v87);
              if (!v87) {
                break;
              }
              uint64_t v88 = **(void **)(a3 + 8);
              unint64_t v89 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v88) >> 3);
              if (v89 <= v86) {
                goto LABEL_174;
              }
              unint64_t v90 = *(unint64_t *)((char *)v11 + v87 - 8);
              if (v89 <= v90) {
                goto LABEL_174;
              }
              uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v88 + 40 * v86), (int8x8_t *)(v88 + 40 * v90), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
              v87 -= 8;
              if ((result & 0x8000000000000000) == 0)
              {
                std::basic_string<char16_t>::size_type v91 = (unint64_t *)((char *)v11 + v87 + 8);
                goto LABEL_111;
              }
            }
            std::basic_string<char16_t>::size_type v91 = v11;
LABEL_111:
            *std::basic_string<char16_t>::size_type v91 = v86;
          }
          uint64_t v76 = v81 + 1;
          v79 += 8;
          uint64_t v80 = v81;
          if (v81 + 1 == a2) {
            return result;
          }
        }
      }
      else
      {
        if (v78) {
          return result;
        }
        while (1)
        {
          std::basic_string<char16_t> v132 = v76;
          unint64_t v133 = v11[1];
          uint64_t v134 = **(void **)(a3 + 8);
          unint64_t v135 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v134) >> 3);
          if (v135 <= v133 || v135 <= *v11) {
            break;
          }
          uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v134 + 40 * v133), (int8x8_t *)(v134 + 40 * *v11), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
          if (result < 0)
          {
            unint64_t v136 = *v132;
            std::basic_string<char16_t> v137 = v132;
            do
            {
              *std::basic_string<char16_t> v137 = *(v137 - 1);
              uint64_t v138 = **(void **)(a3 + 8);
              unint64_t v139 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v138) >> 3);
              if (v139 <= v136) {
                goto LABEL_174;
              }
              unint64_t v140 = *(v137 - 2);
              if (v139 <= v140) {
                goto LABEL_174;
              }
              uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v138 + 40 * v136), (int8x8_t *)(v138 + 40 * v140), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
              --v137;
            }
            while (result < 0);
            *std::basic_string<char16_t> v137 = v136;
          }
          uint64_t v76 = v132 + 1;
          uint64_t v11 = v132;
          if (v132 + 1 == a2) {
            return result;
          }
        }
      }
LABEL_174:
      std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
    }
    std::basic_string<char16_t>::size_type v149 = v11;
    if (!a4) {
      break;
    }
    unint64_t v14 = (unint64_t)v13 >> 1;
    uint8x8_t v15 = &v11[(unint64_t)v13 >> 1];
    if ((unint64_t)v12 < 0x401)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v15, v11, v146, a3);
    }
    else
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v11, v15, v146, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v11 + 1, v15 - 1, v142, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v11 + 2, &v11[v14 + 1], v141, a3);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v15 - 1, v15, &v11[v14 + 1], a3);
      unint64_t v16 = *v11;
      *uint64_t v11 = *v15;
      unint64_t *v15 = v16;
    }
    --a4;
    if (a5) {
      goto LABEL_14;
    }
    unint64_t v17 = *(v11 - 1);
    uint64_t v18 = **(void **)(a3 + 8);
    unint64_t v19 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v18) >> 3);
    if (v19 <= v17 || v19 <= *v11) {
      goto LABEL_174;
    }
    if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v18 + 40 * v17), (int8x8_t *)(v18 + 40 * *v11), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0)
    {
LABEL_14:
      unint64_t v20 = *v11;
      uint64_t v21 = v11;
      do
      {
        unint64_t v23 = v21[1];
        ++v21;
        unint64_t v22 = v23;
        uint64_t v24 = **(void **)(a3 + 8);
        unint64_t v25 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v24) >> 3);
        if (v25 <= v23 || v25 <= v20) {
          goto LABEL_174;
        }
      }
      while (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v24 + 40 * v22), (int8x8_t *)(v24 + 40 * v20), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0);
      unint64_t v26 = v11;
      unsigned __int8 v27 = v21 - 1;
      if (v21 - 1 != v26)
      {
        while (1)
        {
          unint64_t v29 = *--a2;
          unint64_t v28 = v29;
          uint64_t v30 = **(void **)(a3 + 8);
          unint64_t v31 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v30) >> 3);
          if (v31 <= v29 || v31 <= v20) {
            goto LABEL_174;
          }
          if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v30 + 40 * v28), (int8x8_t *)(v30 + 40 * v20), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0)goto LABEL_28; {
        }
          }
      }
      a2 = v145;
      while (v21 < a2)
      {
        unint64_t v33 = *--a2;
        unint64_t v32 = v33;
        uint64_t v34 = **(void **)(a3 + 8);
        unint64_t v35 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v34) >> 3);
        if (v35 <= v33 || v35 <= v20) {
          goto LABEL_174;
        }
        if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v34 + 40 * v32), (int8x8_t *)(v34 + 40 * v20), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0)break; {
      }
        }
LABEL_28:
      if (v21 < a2)
      {
        std::basic_string<char16_t> v36 = v21;
        std::basic_string<char16_t> v37 = a2;
        do
        {
          unint64_t v38 = *v36;
          unint64_t *v36 = *v37;
          unint64_t *v37 = v38;
          do
          {
            unint64_t v40 = v36[1];
            ++v36;
            unint64_t v39 = v40;
            uint64_t v41 = **(void **)(a3 + 8);
            unint64_t v42 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v41) >> 3);
            if (v42 <= v40 || v42 <= v20) {
              goto LABEL_174;
            }
          }
          while (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v41 + 40 * v39), (int8x8_t *)(v41 + 40 * v20), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0);
          unsigned __int8 v27 = v36 - 1;
          do
          {
            unint64_t v44 = *--v37;
            unint64_t v43 = v44;
            uint64_t v45 = **(void **)(a3 + 8);
            unint64_t v46 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v45) >> 3);
            if (v46 <= v44 || v46 <= v20) {
              goto LABEL_174;
            }
          }
          while ((morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v45 + 40 * v43), (int8x8_t *)(v45 + 40 * v20), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) & 0x8000000000000000) == 0);
        }
        while (v36 < v37);
      }
      if (v27 != v149) {
        *std::basic_string<char16_t>::size_type v149 = *v27;
      }
      *unsigned __int8 v27 = v20;
      BOOL v5 = v21 >= a2;
      a2 = v145;
      if (!v5) {
        goto LABEL_45;
      }
      BOOL v47 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v149, v27, a3);
      unint64_t v10 = v27 + 1;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(v27 + 1, v145, a3);
      if (result)
      {
        a2 = v27;
        unint64_t v10 = v149;
        if (v47) {
          return result;
        }
        goto LABEL_2;
      }
      if (!v47)
      {
LABEL_45:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *,false>(v149, v27, a3, a4, a5 & 1);
        a5 = 0;
        unint64_t v10 = v27 + 1;
      }
    }
    else
    {
      unint64_t v48 = *v11;
      uint64_t v49 = **(void **)(a3 + 8);
      unint64_t v50 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v49) >> 3);
      if (v50 <= *v11 || v50 <= *v146) {
        goto LABEL_174;
      }
      uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v49 + 40 * v48), (int8x8_t *)(v49 + 40 * *v146), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
      if (result < 0)
      {
        unint64_t v10 = v11;
        while (1)
        {
          uint64_t v54 = **(void **)(a3 + 8);
          unint64_t v55 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v54) >> 3);
          if (v55 <= v48) {
            goto LABEL_174;
          }
          unint64_t v57 = v10[1];
          ++v10;
          unint64_t v56 = v57;
          if (v55 <= v57) {
            goto LABEL_174;
          }
          uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v54 + 40 * v48), (int8x8_t *)(v54 + 40 * v56), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
          if (result < 0) {
            goto LABEL_59;
          }
        }
      }
      uint64_t v51 = v11 + 1;
      do
      {
        unint64_t v10 = v51;
        if (v51 >= a2) {
          break;
        }
        uint64_t v52 = **(void **)(a3 + 8);
        unint64_t v53 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v52) >> 3);
        if (v53 <= v48 || v53 <= *v10) {
          goto LABEL_174;
        }
        uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v52 + 40 * v48), (int8x8_t *)(v52 + 40 * *v10), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
        uint64_t v51 = v10 + 1;
      }
      while ((result & 0x8000000000000000) == 0);
LABEL_59:
      uint64_t v58 = a2;
      if (v10 < a2)
      {
        uint64_t v58 = a2;
        do
        {
          uint64_t v59 = **(void **)(a3 + 8);
          unint64_t v60 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v59) >> 3);
          if (v60 <= v48) {
            goto LABEL_174;
          }
          unint64_t v62 = *--v58;
          unint64_t v61 = v62;
          if (v60 <= v62) {
            goto LABEL_174;
          }
          uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v59 + 40 * v48), (int8x8_t *)(v59 + 40 * v61), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
        }
        while (result < 0);
      }
LABEL_72:
      if (v10 < v58)
      {
        unint64_t v63 = *v10;
        *unint64_t v10 = *v58;
        *uint64_t v58 = v63;
        do
        {
          uint64_t v64 = **(void **)(a3 + 8);
          unint64_t v65 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v64) >> 3);
          if (v65 > v48)
          {
            unint64_t v67 = v10[1];
            ++v10;
            unint64_t v66 = v67;
            if (v65 > v67) {
              continue;
            }
          }
          goto LABEL_174;
        }
        while ((morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v64 + 40 * v48), (int8x8_t *)(v64 + 40 * v66), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) & 0x8000000000000000) == 0);
        while (1)
        {
          uint64_t v68 = **(void **)(a3 + 8);
          unint64_t v69 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v68) >> 3);
          if (v69 <= v48) {
            goto LABEL_174;
          }
          unint64_t v71 = *--v58;
          unint64_t v70 = v71;
          if (v69 <= v71) {
            goto LABEL_174;
          }
          uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v68 + 40 * v48), (int8x8_t *)(v68 + 40 * v70), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
          if ((result & 0x8000000000000000) == 0) {
            goto LABEL_72;
          }
        }
      }
      uint64_t v72 = v10 - 1;
      BOOL v5 = v10 - 1 >= v11;
      BOOL v6 = v10 - 1 == v11;
      if (v10 - 1 != v11) {
        *uint64_t v11 = *v72;
      }
      a5 = 0;
      *uint64_t v72 = v48;
    }
  }
  if (v11 != a2)
  {
    int64_t v92 = (unint64_t)(v13 - 2) >> 1;
    int64_t v147 = v92;
    while (1)
    {
      int64_t v93 = v92;
      if (v147 >= v92)
      {
        uint64_t v94 = (2 * v92) | 1;
        std::basic_string<char16_t>::size_type v95 = &v149[v94];
        if (2 * v92 + 2 < v13)
        {
          uint64_t v96 = **(void **)(a3 + 8);
          unint64_t v97 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v96) >> 3);
          if (v97 <= *v95) {
            goto LABEL_174;
          }
          unint64_t v98 = v95[1];
          if (v97 <= v98) {
            goto LABEL_174;
          }
          if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v96 + 40 * *v95), (int8x8_t *)(v96 + 40 * v98), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0)
          {
            ++v95;
            uint64_t v94 = 2 * v93 + 2;
          }
        }
        uint64_t v99 = **(void **)(a3 + 8);
        unint64_t v100 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v99) >> 3);
        if (v100 <= *v95) {
          goto LABEL_174;
        }
        uint64_t v101 = &v149[v93];
        if (v100 <= *v101) {
          goto LABEL_174;
        }
        uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v99 + 40 * *v95), (int8x8_t *)(v99 + 40 * *v101), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
        if ((result & 0x8000000000000000) == 0)
        {
          int64_t v144 = v93;
          unint64_t v102 = *v101;
          do
          {
            unint64_t v103 = v95;
            *uint64_t v101 = *v95;
            if (v147 < v94) {
              break;
            }
            uint64_t v104 = (2 * v94) | 1;
            std::basic_string<char16_t>::size_type v95 = &v149[v104];
            uint64_t v94 = 2 * v94 + 2;
            if (v94 < v13)
            {
              uint64_t v105 = **(void **)(a3 + 8);
              unint64_t v106 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v105) >> 3);
              if (v106 <= *v95) {
                goto LABEL_174;
              }
              unint64_t v107 = v95[1];
              if (v106 <= v107) {
                goto LABEL_174;
              }
              if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v105 + 40 * *v95), (int8x8_t *)(v105 + 40 * v107), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) >= 0)uint64_t v94 = v104; {
              else
              }
                ++v95;
              a2 = v145;
            }
            else
            {
              uint64_t v94 = v104;
            }
            uint64_t v108 = **(void **)(a3 + 8);
            unint64_t v109 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v108) >> 3);
            if (v109 <= *v95 || v109 <= v102) {
              goto LABEL_174;
            }
            uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v108 + 40 * *v95), (int8x8_t *)(v108 + 40 * v102), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
            uint64_t v101 = v103;
          }
          while ((result & 0x8000000000000000) == 0);
          *unint64_t v103 = v102;
          int64_t v93 = v144;
        }
      }
      int64_t v92 = v93 - 1;
      if (!v93)
      {
        uint64_t v110 = (unint64_t)v12 >> 3;
        std::basic_string<char16_t>::size_type v111 = v149;
        while (1)
        {
          char v112 = a2;
          uint64_t v113 = 0;
          unint64_t v148 = *v111;
          uint64_t v114 = v111;
          do
          {
            uint64_t v115 = &v114[v113 + 1];
            uint64_t v116 = (2 * v113) | 1;
            uint64_t v117 = 2 * v113 + 2;
            if (v117 < v110)
            {
              uint64_t v118 = **(void **)(a3 + 8);
              unint64_t v119 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v118) >> 3);
              if (v119 <= *v115) {
                goto LABEL_174;
              }
              unint64_t v120 = v114[v113 + 2];
              if (v119 <= v120) {
                goto LABEL_174;
              }
              uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v118 + 40 * *v115), (int8x8_t *)(v118 + 40 * v120), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
              if (result < 0)
              {
                ++v115;
                uint64_t v116 = v117;
              }
            }
            unint64_t *v114 = *v115;
            uint64_t v114 = v115;
            uint64_t v113 = v116;
          }
          while (v116 <= (uint64_t)((unint64_t)(v110 - 2) >> 1));
          a2 = v112 - 1;
          if (v115 == v112 - 1)
          {
            std::basic_string<char16_t>::size_type v111 = v149;
            unint64_t *v115 = v148;
          }
          else
          {
            unint64_t *v115 = *a2;
            std::basic_string<char16_t>::size_type v111 = v149;
            *a2 = v148;
            uint64_t v121 = (char *)v115 - (char *)v149 + 8;
            if (v121 >= 9)
            {
              unint64_t v122 = (((unint64_t)v121 >> 3) - 2) >> 1;
              uint64_t v123 = &v149[v122];
              uint64_t v124 = **(void **)(a3 + 8);
              unint64_t v125 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v124) >> 3);
              if (v125 <= *v123 || v125 <= *v115) {
                goto LABEL_174;
              }
              uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v124 + 40 * *v123), (int8x8_t *)(v124 + 40 * *v115), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
              if (result < 0)
              {
                uint64_t v126 = a2;
                unint64_t v127 = *v115;
                do
                {
                  std::basic_string<char16_t> v128 = v123;
                  unint64_t *v115 = *v123;
                  if (!v122) {
                    break;
                  }
                  unint64_t v122 = (v122 - 1) >> 1;
                  uint64_t v123 = &v149[v122];
                  uint64_t v129 = **(void **)(a3 + 8);
                  unint64_t v130 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v129) >> 3);
                  if (v130 <= *v123 || v130 <= v127) {
                    goto LABEL_174;
                  }
                  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v129 + 40 * *v123), (int8x8_t *)(v129 + 40 * v127), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8));
                  uint64_t v115 = v128;
                }
                while (result < 0);
                *std::basic_string<char16_t> v128 = v127;
                a2 = v126;
              }
            }
          }
          if (v110-- <= 2) {
            return result;
          }
        }
      }
    }
  }
  return result;
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4 = **(void **)(a4 + 8);
  unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a4 + 8) + 8) - v4) >> 3);
  if (v5 <= *a2 || v5 <= *a1) {
    goto LABEL_21;
  }
  uint64_t v10 = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a4, (int8x8_t *)(v4 + 40 * *a2), (int8x8_t *)(v4 + 40 * *a1), **(uint64_t ***)(a4 + 16), *(uint64_t **)(*(void *)(a4 + 16) + 8));
  unint64_t v11 = *a3;
  unint64_t v12 = *a2;
  uint64_t v13 = *(void *)a4;
  uint64_t v14 = **(void **)(a4 + 8);
  unint64_t v15 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a4 + 8) + 8) - v14) >> 3);
  if (v10 < 0)
  {
    if (v15 > *a3 && v15 > v12)
    {
      uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(v13, (int8x8_t *)(v14 + 40 * v11), (int8x8_t *)(v14 + 40 * v12), **(uint64_t ***)(a4 + 16), *(uint64_t **)(*(void *)(a4 + 16) + 8));
      unint64_t v21 = *a1;
      if (result < 0)
      {
        *a1 = *a3;
      }
      else
      {
        *a1 = *a2;
        *a2 = v21;
        uint64_t v22 = **(void **)(a4 + 8);
        unint64_t v23 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a4 + 8) + 8) - v22) >> 3);
        if (v23 <= *a3 || v23 <= v21) {
          goto LABEL_21;
        }
        uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a4, (int8x8_t *)(v22 + 40 * *a3), (int8x8_t *)(v22 + 40 * v21), **(uint64_t ***)(a4 + 16), *(uint64_t **)(*(void *)(a4 + 16) + 8));
        if ((result & 0x8000000000000000) == 0) {
          return result;
        }
        unint64_t v21 = *a2;
        *a2 = *a3;
      }
      *a3 = v21;
      return result;
    }
LABEL_21:
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  }
  if (v15 <= *a3 || v15 <= v12) {
    goto LABEL_21;
  }
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(v13, (int8x8_t *)(v14 + 40 * v11), (int8x8_t *)(v14 + 40 * v12), **(uint64_t ***)(a4 + 16), *(uint64_t **)(*(void *)(a4 + 16) + 8));
  if ((result & 0x8000000000000000) == 0) {
    return result;
  }
  unint64_t v17 = *a2;
  *a2 = *a3;
  *a3 = v17;
  uint64_t v18 = **(void **)(a4 + 8);
  unint64_t v19 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a4 + 8) + 8) - v18) >> 3);
  if (v19 <= *a2 || v19 <= *a1) {
    goto LABEL_21;
  }
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a4, (int8x8_t *)(v18 + 40 * *a2), (int8x8_t *)(v18 + 40 * *a1), **(uint64_t ***)(a4 + 16), *(uint64_t **)(*(void *)(a4 + 16) + 8));
  if (result < 0)
  {
    unint64_t v20 = *a1;
    *a1 = *a2;
    *a2 = v20;
  }
  return result;
}

uint64_t std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(unint64_t *a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(a1, a2, a3, a5);
  uint64_t v10 = **(void **)(a5 + 8);
  unint64_t v11 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a5 + 8) + 8) - v10) >> 3);
  if (v11 <= *a4 || v11 <= *a3) {
    goto LABEL_12;
  }
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a5, (int8x8_t *)(v10 + 40 * *a4), (int8x8_t *)(v10 + 40 * *a3), **(uint64_t ***)(a5 + 16), *(uint64_t **)(*(void *)(a5 + 16) + 8));
  if ((result & 0x8000000000000000) == 0) {
    return result;
  }
  unint64_t v13 = *a3;
  *a3 = *a4;
  *a4 = v13;
  uint64_t v14 = **(void **)(a5 + 8);
  unint64_t v15 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a5 + 8) + 8) - v14) >> 3);
  if (v15 <= *a3 || v15 <= *a2) {
    goto LABEL_12;
  }
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a5, (int8x8_t *)(v14 + 40 * *a3), (int8x8_t *)(v14 + 40 * *a2), **(uint64_t ***)(a5 + 16), *(uint64_t **)(*(void *)(a5 + 16) + 8));
  if ((result & 0x8000000000000000) == 0) {
    return result;
  }
  unint64_t v16 = *a2;
  *a2 = *a3;
  *a3 = v16;
  uint64_t v17 = **(void **)(a5 + 8);
  unint64_t v18 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a5 + 8) + 8) - v17) >> 3);
  if (v18 <= *a2 || v18 <= *a1) {
LABEL_12:
  }
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a5, (int8x8_t *)(v17 + 40 * *a2), (int8x8_t *)(v17 + 40 * *a1), **(uint64_t ***)(a5 + 16), *(uint64_t **)(*(void *)(a5 + 16) + 8));
  if (result < 0)
  {
    unint64_t v19 = *a1;
    *a1 = *a2;
    *a2 = v19;
  }
  return result;
}

uint64_t std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *,0>(unint64_t *a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, unint64_t *a5, uint64_t a6)
{
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(a1, a2, a3, a4, a6);
  uint64_t v12 = **(void **)(a6 + 8);
  unint64_t v13 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a6 + 8) + 8) - v12) >> 3);
  if (v13 <= *a5 || v13 <= *a4) {
    goto LABEL_15;
  }
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a6, (int8x8_t *)(v12 + 40 * *a5), (int8x8_t *)(v12 + 40 * *a4), **(uint64_t ***)(a6 + 16), *(uint64_t **)(*(void *)(a6 + 16) + 8));
  if ((result & 0x8000000000000000) == 0) {
    return result;
  }
  unint64_t v15 = *a4;
  *a4 = *a5;
  *a5 = v15;
  uint64_t v16 = **(void **)(a6 + 8);
  unint64_t v17 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a6 + 8) + 8) - v16) >> 3);
  if (v17 <= *a4 || v17 <= *a3) {
    goto LABEL_15;
  }
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a6, (int8x8_t *)(v16 + 40 * *a4), (int8x8_t *)(v16 + 40 * *a3), **(uint64_t ***)(a6 + 16), *(uint64_t **)(*(void *)(a6 + 16) + 8));
  if ((result & 0x8000000000000000) == 0) {
    return result;
  }
  unint64_t v18 = *a3;
  *a3 = *a4;
  *a4 = v18;
  uint64_t v19 = **(void **)(a6 + 8);
  unint64_t v20 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a6 + 8) + 8) - v19) >> 3);
  if (v20 <= *a3 || v20 <= *a2) {
    goto LABEL_15;
  }
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a6, (int8x8_t *)(v19 + 40 * *a3), (int8x8_t *)(v19 + 40 * *a2), **(uint64_t ***)(a6 + 16), *(uint64_t **)(*(void *)(a6 + 16) + 8));
  if ((result & 0x8000000000000000) == 0) {
    return result;
  }
  unint64_t v21 = *a2;
  *a2 = *a3;
  *a3 = v21;
  uint64_t v22 = **(void **)(a6 + 8);
  unint64_t v23 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a6 + 8) + 8) - v22) >> 3);
  if (v23 <= *a2 || v23 <= *a1) {
LABEL_15:
  }
    std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
  uint64_t result = morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a6, (int8x8_t *)(v22 + 40 * *a2), (int8x8_t *)(v22 + 40 * *a1), **(uint64_t ***)(a6 + 16), *(uint64_t **)(*(void *)(a6 + 16) + 8));
  if (result < 0)
  {
    unint64_t v24 = *a1;
    *a1 = *a2;
    *a2 = v24;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      unint64_t v8 = *(a2 - 1);
      uint64_t v9 = **(void **)(a3 + 8);
      unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v9) >> 3);
      if (v10 <= v8 || v10 <= *a1) {
        goto LABEL_26;
      }
      if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v9 + 40 * v8), (int8x8_t *)(v9 + 40 * *a1), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0)
      {
        unint64_t v11 = *a1;
        *a1 = *(a2 - 1);
        *(a2 - 1) = v11;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *,0>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      uint64_t v12 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,morphun::dialog::DictionaryLookupInflector::inflectWord(std::u16string_view,std::vector<std::basic_string<char16_t>> const&,std::vector<std::basic_string<char16_t>> const&)::$_0 &,long long *>(a1, a1 + 1, a1 + 2, a3);
      unint64_t v13 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v14 = 0;
      int v15 = 0;
      break;
  }
  while (1)
  {
    uint64_t v16 = **(void **)(a3 + 8);
    unint64_t v17 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v16) >> 3);
    if (v17 <= *v13 || v17 <= *v12) {
LABEL_26:
    }
      std::vector<std::vector<long long>>::__throw_out_of_range[abi:ne180100]();
    if (morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v16 + 40 * *v13), (int8x8_t *)(v16 + 40 * *v12), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) < 0)
    {
      unint64_t v18 = *v13;
      uint64_t v19 = v14;
      while (1)
      {
        *(unint64_t *)((char *)a1 + v19 + 24) = *(unint64_t *)((char *)a1 + v19 + 16);
        if (v19 == -16) {
          break;
        }
        uint64_t v20 = **(void **)(a3 + 8);
        unint64_t v21 = 0xCCCCCCCCCCCCCCCDLL * ((*(void *)(*(void *)(a3 + 8) + 8) - v20) >> 3);
        if (v21 <= v18) {
          goto LABEL_26;
        }
        unint64_t v22 = *(unint64_t *)((char *)a1 + v19 + 8);
        if (v21 <= v22) {
          goto LABEL_26;
        }
        v19 -= 8;
        if ((morphun::dialog::DictionaryLookupInflector::compareInflectionGrammemes(*(void *)a3, (int8x8_t *)(v20 + 40 * v18), (int8x8_t *)(v20 + 40 * v22), **(uint64_t ***)(a3 + 16), *(uint64_t **)(*(void *)(a3 + 16) + 8)) & 0x8000000000000000) == 0)
        {
          unint64_t v23 = (unint64_t *)((char *)a1 + v19 + 24);
          goto LABEL_18;
        }
      }
      unint64_t v23 = a1;
LABEL_18:
      unint64_t *v23 = v18;
      if (++v15 == 8) {
        return v13 + 1 == a2;
      }
    }
    uint64_t v12 = v13;
    v14 += 8;
    if (++v13 == a2) {
      return 1;
    }
  }
}

void morphun::dialog::DictionaryLookupInflector::inflect(uint64_t a1, uint64_t a2, void *__src, unint64_t a4, std::basic_string<char16_t> *a5, std::basic_string<char16_t> *a6)
{
  if (morphun::util::gLogLevel <= 0)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "D");
    if (SHIBYTE(v32) < 0) {
      operator delete(__p[0]);
    }
  }
  for (std::basic_string<char16_t>::size_type i = a5->__r_.__value_.__r.__words[0]; ; i += 24)
  {
    if (i == a5->__r_.__value_.__l.__size_)
    {
      if (a4 >= 0x7FFFFFFFFFFFFFF8) {
        std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
      }
      if (a4 >= 0xB)
      {
        uint64_t v15 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
        if ((a4 | 3) != 0xB) {
          uint64_t v15 = a4 | 3;
        }
        uint64_t v14 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v15 + 1);
        __p[1] = (void *)a4;
        unint64_t v32 = v16 | 0x8000000000000000;
        __p[0] = v14;
      }
      else
      {
        HIBYTE(v32) = a4;
        uint64_t v14 = __p;
        if (!a4) {
          goto LABEL_18;
        }
      }
      memmove(v14, __src, 2 * a4);
LABEL_18:
      *((_WORD *)v14 + a4) = 0;
      *(_OWORD *)a1 = *(_OWORD *)__p;
      *(void *)(a1 + 16) = v32;
      *(unsigned char *)(a1 + 24) = 1;
      return;
    }
    uint64_t v13 = *(unsigned __int8 *)(i + 23);
    if ((v13 & 0x80u) != 0) {
      uint64_t v13 = *(void *)(i + 8);
    }
    if (v13) {
      break;
    }
  }
  int isAllUpperCase = morphun::util::StringViewUtils::isAllUpperCase((uint64_t)__src, a4);
  if ((isAllUpperCase & 1) != 0
    || (morphun::dialog::DictionaryLookupInflector::inflectWord(a1, a2, __src, a4, a5, a6), !*(unsigned char *)(a1 + 24)))
  {
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)__p, (const morphun::util::ULocale *)(a2 + 24));
    unint64_t v28 = 0;
    unint64_t v29 = 0;
    uint64_t v30 = 0;
    morphun::util::StringViewUtils::lowercase((uint64_t)&v28, (const UChar *)__src, a4, (uint64_t)__p);
    if (v30 >= 0) {
      unint64_t v18 = &v28;
    }
    else {
      unint64_t v18 = v28;
    }
    if (v30 >= 0) {
      unint64_t v19 = HIBYTE(v30);
    }
    else {
      unint64_t v19 = v29;
    }
    morphun::dialog::DictionaryLookupInflector::inflectWord((uint64_t)&v26, a2, v18, v19, a5, a6);
    if (v27)
    {
      if (isAllUpperCase)
      {
        memset(&__str, 0, sizeof(__str));
        if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v20 = &v26;
        }
        else {
          uint64_t v20 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
        }
        if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int32_t v21 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
        }
        else {
          int32_t v21 = v26.__r_.__value_.__r.__words[1];
        }
        morphun::util::StringViewUtils::uppercase((uint64_t)&__str, (const UChar *)v20, v21, (uint64_t)__p);
        if (v27)
        {
          std::basic_string<char16_t>::operator=(&v26, &__str);
        }
        else
        {
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            std::basic_string<char16_t>::__init_copy_ctor_external(&v26, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
          }
          else {
            std::basic_string<char16_t> v26 = __str;
          }
          char v27 = 1;
        }
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        UChar32 v22 = morphun::util::StringViewUtils::codePointAt((uint64_t)__src, a4, 0);
        if (u_isupper(v22))
        {
          if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unint64_t v23 = &v26;
          }
          else {
            unint64_t v23 = (std::basic_string<char16_t> *)v26.__r_.__value_.__r.__words[0];
          }
          if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type size = v26.__r_.__value_.__l.__size_;
          }
          morphun::util::StringViewUtils::capitalizeFirst((UChar *)v23, size, (uint64_t)__p, (uint64_t)&__str);
          if (v27)
          {
            if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v26.__r_.__value_.__l.__data_);
            }
            std::basic_string<char16_t> v26 = __str;
          }
          else
          {
            std::basic_string<char16_t> v26 = __str;
            char v27 = 1;
          }
        }
      }
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      if (v27)
      {
        *(std::basic_string<char16_t> *)a1 = v26;
        *(unsigned char *)(a1 + 24) = 1;
      }
    }
    else
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
    }
    if (SHIBYTE(v30) < 0) {
      operator delete(v28);
    }
  }
}

void sub_1D2D37A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a22 && a21 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_WithConditionalHyphen::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (morphun::dictionary::PhraseProperties *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v3 = (morphun::lang::StringFilterUtil *)morphun::dictionary::PhraseProperties::DEFAULT_MATCHABLE_SET(v2);
  uint64_t v4 = (void *)morphun::lang::StringFilterUtil::HEBREW_SCRIPT(v3);
  memset(v5, 0, 24);
  morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets((uint64_t)v2, v3, v4, v5);
  operator new();
}

void sub_1D2D37BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v21, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_WithConditionalHyphen::~HeGrammarSynthesizer_WithConditionalHyphen(morphun::grammar::synthesis::HeGrammarSynthesizer_WithConditionalHyphen *this)
{
}

void *mddmd_getCombinedBinaryType(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  npc<morphun::dictionary::DictionaryMetaData const>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a3);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  CombinedBinaryType = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1, a2, (const UChar *)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return CombinedBinaryType;
}

void sub_1D2D37D18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    unint64_t v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2D37CFCLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D37DC8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

CFArrayRef mddmd_createPropertyNames(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = npc<morphun::dictionary::DictionaryMetaData const>(a1);
  uint64_t v4 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(v3 + 8));
  morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v4, a2, &v24);
  uint64_t v5 = v24;
  uint64_t v6 = v25;
  if (v24 == v25)
  {
    int8x8_t v7 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    int8x8_t v7 = 0;
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      if (*(char *)(v5 + 23) < 0)
      {
        unint64_t v11 = *(const UniChar **)v5;
        CFIndex v10 = *(void *)(v5 + 8);
      }
      else
      {
        CFIndex v10 = *(unsigned __int8 *)(v5 + 23);
        unint64_t v11 = (const UniChar *)v5;
      }
      CFStringRef v12 = CFStringCreateWithCharacters(0, v11, v10);
      CFStringRef v13 = v12;
      if (v8 >= v9)
      {
        uint64_t v15 = (v8 - v7) >> 3;
        unint64_t v16 = v15 + 1;
        if ((unint64_t)(v15 + 1) >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if ((v9 - v7) >> 2 > v16) {
          unint64_t v16 = (v9 - v7) >> 2;
        }
        if ((unint64_t)(v9 - v7) >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v17 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v16;
        }
        if (v17)
        {
          if (v17 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unint64_t v18 = (char *)operator new(8 * v17);
        }
        else
        {
          unint64_t v18 = 0;
        }
        unint64_t v19 = (CFStringRef *)&v18[8 * v15];
        *unint64_t v19 = v13;
        uint64_t v14 = (char *)(v19 + 1);
        while (v8 != v7)
        {
          CFStringRef v20 = (const __CFString *)*((void *)v8 - 1);
          v8 -= 8;
          *--unint64_t v19 = v20;
        }
        uint64_t v9 = &v18[8 * v17];
        if (v7) {
          operator delete(v7);
        }
        int8x8_t v7 = (char *)v19;
      }
      else
      {
        *(void *)unint64_t v8 = v12;
        uint64_t v14 = v8 + 8;
      }
      v5 += 24;
      unint64_t v8 = v14;
    }
    while (v5 != v6);
  }
  CFArrayRef v21 = CFArrayCreate(0, (const void **)v7, (v14 - v7) >> 3, MEMORY[0x1E4F1D510]);
  if (v7 != v14)
  {
    UChar32 v22 = (CFTypeRef *)v7;
    do
      CFRelease(*v22++);
    while (v22 != (CFTypeRef *)v14);
  }
  if (v7) {
    operator delete(v7);
  }
  std::basic_string<char16_t> v26 = (void **)&v24;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v26);
  return v21;
}

void sub_1D2D37FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception *a10, char a11, uint64_t a12, uint64_t a13, char *a14)
{
  if (v14) {
    operator delete(v14);
  }
  a14 = &a11;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a14);
  if (a2 == 1)
  {
    unint64_t v17 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v17, a10, v18);
    __cxa_end_catch();
    JUMPOUT(0x1D2D37F6CLL);
  }
  _Unwind_Resume(a1);
}

CFStringRef mddmd_createPropertyName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (morphun::dictionary::DictionaryMetaData *)npc<morphun::dictionary::DictionaryMetaData const>(a1);
  morphun::dictionary::DictionaryMetaData::getPropertyName(v3, (int8x8_t)a2, (uint64_t)__p);
  if ((v9 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v9 & 0x80u) == 0) {
    CFIndex v5 = v9;
  }
  else {
    CFIndex v5 = (CFIndex)__p[1];
  }
  CFStringRef v6 = CFStringCreateWithCharacters(0, (const UniChar *)v4, v5);
  if ((char)v9 < 0) {
    operator delete(__p[0]);
  }
  return v6;
}

void sub_1D2D38098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    unint64_t v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2D38080);
  }
  _Unwind_Resume(exception_object);
}

BOOL mddmd_isKnownWord(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dictionary::DictionaryMetaData const>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v9 = 0;
  BOOL v6 = morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1, (uint64_t)&v9, (const UChar *)p_p, size) != 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_1D2D38184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    unint64_t v17 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v17, v14, v18);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3816CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t mddmd_getBinaryProperties(uint64_t a1, const __CFArray *a2)
{
  npc<morphun::dictionary::DictionaryMetaData const>(a1);
  uint64_t v18 = 0;
  unint64_t v19 = 0;
  unint64_t v20 = 0;
  CFIndex Count = CFArrayGetCount(a2);
  if (Count >= 1)
  {
    for (CFIndex i = 0; i != Count; ++i)
    {
      CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(a2, i);
      morphun::util::CFUtils::to_u16string(&__p, ValueAtIndex);
      int8x8_t v7 = v19;
      if ((unint64_t)v19 >= v20)
      {
        unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v19[-v18] >> 3);
        unint64_t v10 = v9 + 1;
        if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556 * ((uint64_t)(v20 - v18) >> 3) > v10) {
          unint64_t v10 = 0x5555555555555556 * ((uint64_t)(v20 - v18) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - v18) >> 3) >= 0x555555555555555) {
          unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v11 = v10;
        }
        v22[4] = (void **)&v20;
        if (v11) {
          unint64_t v11 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v11);
        }
        else {
          uint64_t v12 = 0;
        }
        unint64_t v13 = v11 + 24 * v9;
        v22[0] = (void **)v11;
        v22[1] = (void **)v13;
        v22[3] = (void **)(v11 + 24 * v12);
        long long v14 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *(void *)(v13 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v13 = v14;
        memset(&__p, 0, sizeof(__p));
        v22[2] = (void **)(v13 + 24);
        std::vector<std::basic_string<char16_t>>::__swap_out_circular_buffer(&v18, v22);
        uint64_t v15 = v19;
        std::__split_buffer<std::basic_string<char16_t>>::~__split_buffer((uint64_t)v22);
        unint64_t v19 = v15;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        long long v8 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((void *)v19 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
        *int8x8_t v7 = v8;
        unint64_t v19 = (char *)v7 + 24;
      }
    }
  }
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(a1, &v18);
  v22[0] = (void **)&v18;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](v22);
  return BinaryProperties;
}

void sub_1D2D3839C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::exception *a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a19);
  if (a2 == 1)
  {
    CFArrayRef v21 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v21, a9, v22);
    __cxa_end_catch();
    JUMPOUT(0x1D2D38370);
  }
  _Unwind_Resume(a1);
}

uint64_t mddmd_getDictionary(__CFLocale *a1)
{
  morphun::util::CFUtils::convert((morphun::util::CFUtils *)v4, a1);
  uint64_t Dictionary = morphun::dictionary::DictionaryMetaData::createDictionary((morphun::dictionary::DictionaryMetaData *)v4, v1);
  npc<morphun::dictionary::DictionaryMetaData const>(Dictionary);
  return Dictionary;
}

void sub_1D2D38490(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v3, v2, v4);
    __cxa_end_catch();
    JUMPOUT(0x1D2D38478);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_DeConjunctionArticleLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  memset(&v10, 0, sizeof(v10));
  uint64_t v4 = *(uint64_t **)(a1 + 24);
  if (v4)
  {
    int v5 = *(char *)(v3 + 23);
    if (v5 >= 0) {
      BOOL v6 = (const UChar *)v3;
    }
    else {
      BOOL v6 = *(const UChar **)v3;
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      uint64_t v7 = *(void *)(v3 + 8);
    }
    if (morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getVowelGroup(v4, v6, v7) >= 2) {
      long long v8 = L" da";
    }
    else {
      long long v8 = L" de";
    }
    std::basic_string<char16_t>::append(&v10, v8, 3uLL);
    operator new();
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2D3863C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  __cxa_free_exception(v15);
  if (*(char *)(v16 - 17) < 0) {
    operator delete(*(void **)(v16 - 40));
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_DeConjunctionArticleLookupFunction::~TrGrammarSynthesizer_DeConjunctionArticleLookupFunction(morphun::grammar::synthesis::TrGrammarSynthesizer_DeConjunctionArticleLookupFunction *this)
{
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::inflect(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  if (((*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1) & 1) == 0)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    return;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[2]);
  *(void *)((char *)&v61 + 7) = 0;
  *(void *)&long long v61 = 0;
  if (*(void *)(a3 + 16) != 1) {
    goto LABEL_48;
  }
  CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v8);
  uint64_t v10 = *((unsigned __int8 *)CombinedBinaryType + 23);
  int v11 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *((void *)CombinedBinaryType + 1);
  }
  int v12 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (v10 == size)
  {
    if (v10)
    {
      p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      if (v11 >= 0) {
        uint64_t v15 = CombinedBinaryType;
      }
      else {
        uint64_t v15 = *(morphun::grammar::synthesis::GrammemeConstants **)CombinedBinaryType;
      }
      while ((unsigned __int16)p_p->__r_.__value_.__s.__data_[0] == *(unsigned __int16 *)v15)
      {
        uint64_t v15 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v15 + 2);
        p_p = (std::basic_string<char16_t> *)((char *)p_p + 2);
        if (!--v10) {
          goto LABEL_17;
        }
      }
    }
    else
    {
LABEL_17:
      uint64_t v16 = a1[4];
      int v17 = *(char *)(a2 + 23);
      if (v17 >= 0) {
        uint64_t v18 = (const std::basic_string<char16_t>::value_type *)a2;
      }
      else {
        uint64_t v18 = *(const std::basic_string<char16_t>::value_type **)a2;
      }
      if (v17 >= 0) {
        uint64_t v19 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v19 = *(void *)(a2 + 8);
      }
      uint64_t v20 = a1[8];
      *(void *)&v52[0] = 0;
      CombinedBinaryType = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v16, (uint64_t)v52, (const UChar *)v18, v19);
      if (CombinedBinaryType) {
        BOOL v21 = (*(void *)&v52[0] & v20) == v20;
      }
      else {
        BOOL v21 = 0;
      }
      if (v21) {
        goto LABEL_82;
      }
    }
  }
  uint64_t v22 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(CombinedBinaryType);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  int v24 = (char)v23;
  if ((v23 & 0x80u) != 0) {
    uint64_t v23 = *(void *)(v22 + 8);
  }
  if (v23 != size) {
    goto LABEL_48;
  }
  if (size)
  {
    uint64_t v25 = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
    if (v12 >= 0) {
      uint64_t v25 = &__p;
    }
    if (v24 >= 0) {
      std::basic_string<char16_t> v26 = (unsigned __int16 *)v22;
    }
    else {
      std::basic_string<char16_t> v26 = *(unsigned __int16 **)v22;
    }
    while ((unsigned __int16)v25->__r_.__value_.__s.__data_[0] == *v26)
    {
      ++v26;
      uint64_t v25 = (std::basic_string<char16_t> *)((char *)v25 + 2);
      if (!--size) {
        goto LABEL_38;
      }
    }
    goto LABEL_48;
  }
LABEL_38:
  uint64_t v27 = a1[4];
  int v28 = *(char *)(a2 + 23);
  unint64_t v29 = v28 >= 0 ? (const UChar *)a2 : *(const UChar **)a2;
  uint64_t v30 = v28 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
  uint64_t v31 = a1[9];
  *(void *)&v52[0] = 0;
  if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v27, (uint64_t)v52, v29, v30)
    || (*(void *)&v52[0] & v31) != v31)
  {
LABEL_48:
    int v33 = *(char *)(a2 + 23);
    if (v33 >= 0) {
      uint64_t v34 = (const UChar *)a2;
    }
    else {
      uint64_t v34 = *(const UChar **)a2;
    }
    if (v33 >= 0) {
      uint64_t v35 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      uint64_t v35 = *(void *)(a2 + 8);
    }
    morphun::dictionary::DictionaryMetaData::getPropertyValues(a1[4], v34, v35, (unsigned __int16 *)"i", 0xAuLL, v54);
    uint64_t v36 = v54[0];
    if (v54[0] == v54[1])
    {
      char v39 = 0;
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v37 = a1[7];
      if (*(char *)(v54[0] + 23) < 0)
      {
        uint64_t v36 = *(void *)v54[0];
        uint64_t v38 = *(void *)(v54[0] + 8);
      }
      else
      {
        LODWORD(v38) = *(unsigned __int8 *)(v54[0] + 23);
      }
      __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v37 + 248), v36, v38);
      morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)__dst, v37 + 8, KeyId);
      v52[0] = *(_OWORD *)__dst;
      v52[1] = *(_OWORD *)&__dst[16];
      v52[2] = v59;
      char v53 = 1;
      uint64_t v51 = 0;
      int v42 = *(char *)(a2 + 23);
      if (v42 >= 0) {
        unint64_t v43 = (const UChar *)a2;
      }
      else {
        unint64_t v43 = *(const UChar **)a2;
      }
      if (v42 >= 0) {
        uint64_t v44 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v44 = *(void *)(a2 + 8);
      }
      morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[4], (uint64_t)&v51, v43, v44);
      uint64_t v50 = 0;
      uint64_t v45 = a1[4];
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v60, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      }
      else {
        std::basic_string<char16_t> v60 = __p;
      }
      memset(__dst, 0, 24);
      unint64_t v56 = (void **)__dst;
      char v57 = 0;
      *(void *)std::basic_string<char16_t> __dst = operator new(0x18uLL);
      *(void *)&__dst[8] = *(void *)__dst;
      *(void *)&__dst[16] = *(void *)__dst + 24;
      *(void *)&__dst[8] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&__dst[16], (long long *)&v60, &v61, *(std::basic_string<char16_t> **)__dst);
      morphun::dictionary::DictionaryMetaData::getBinaryProperties(v45, &v50, (uint64_t *)__dst);
      unint64_t v56 = (void **)__dst;
      std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v56);
      if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v60.__r_.__value_.__l.__data_);
      }
      int v46 = *(char *)(a2 + 23);
      if (v46 >= 0) {
        BOOL v47 = (char *)a2;
      }
      else {
        BOOL v47 = *(char **)a2;
      }
      if (v46 >= 0) {
        unint64_t v48 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        unint64_t v48 = *(void *)(a2 + 8);
      }
      morphun::dictionary::Inflector_InflectionPattern::reinflect(__dst, (uint64_t)v52, v51, v50, v47, v48);
      *(void *)&long long v61 = *(void *)&__dst[8];
      uint64_t v40 = *(void *)__dst;
      *(void *)((char *)&v61 + 7) = *(void *)&__dst[15];
      char v39 = __dst[23];
    }
    uint64_t v49 = v61;
    *(void *)a4 = v40;
    *(void *)(a4 + 8) = v49;
    *(void *)(a4 + 15) = *(void *)((char *)&v61 + 7);
    *(unsigned char *)(a4 + 23) = v39;
    *(void *)&v52[0] = v54;
    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v52);
    LOBYTE(v12) = *((unsigned char *)&__p.__r_.__value_.__s + 23);
    goto LABEL_79;
  }
LABEL_82:
  if (*(char *)(a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)a4, *(const std::basic_string<char16_t>::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)a4 = *(_OWORD *)a2;
    *(void *)(a4 + 16) = *(void *)(a2 + 16);
  }
LABEL_79:
  if ((v12 & 0x80) != 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D38AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  a11 = &a19;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a11);
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::isSupported(uint64_t *a1, const void **a2, uint64_t a3)
{
  if (((*(uint64_t (**)(uint64_t *))(*a1 + 48))(a1) & 1) == 0)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"not a noun or not in dictionary");
    morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::logUnsupportedInflection(a2, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__p, a3, a1[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    return size != 0;
  }
  return size != 0;
}

void sub_1D2D38C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::~NlGrammarSynthesizer_NlNounInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern *this)
{
}

morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern *morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern::NlGrammarSynthesizer_NlNounInflectionPattern(morphun::grammar::synthesis::NlGrammarSynthesizer_NlNounInflectionPattern *this, const morphun::dialog::SemanticFeatureModel *a2)
{
  *(void *)&long long v23 = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FB5D8;
  uint64_t v3 = morphun::grammar::synthesis::NlGrammarSynthesizer_NlInflectionPattern::NlGrammarSynthesizer_NlInflectionPattern(this, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A066F8, (uint64_t)a2);
  *(void *)this = &off_1F2A0D830;
  uint64_t v4 = (morphun::dictionary::Inflector *)morphun::util::LocaleUtils::DUTCH(v3);
  Inflector = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dictionary::Inflector::getInflector(v4, v5);
  *((void *)this + 7) = Inflector;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  uint64_t v7 = *((void *)this + 4);
  uint64_t v8 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(Inflector);
  if (*(char *)(v8 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v22, *(const std::basic_string<char16_t>::value_type **)v8, *(void *)(v8 + 8));
  }
  else
  {
    long long v9 = *(_OWORD *)v8;
    v22.__r_.__value_.__r.__words[2] = *(void *)(v8 + 16);
    *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v9;
  }
  int v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = &v17;
  char v21 = 0;
  int v17 = (std::basic_string<char16_t> *)operator new(0x18uLL);
  uint64_t v18 = v17;
  uint64_t v19 = v17 + 1;
  uint64_t v18 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v19, (long long *)&v22, &v23, v17);
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v7, (uint64_t *)this + 8, (uint64_t *)&v17);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  uint64_t v20 = &v17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v20);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  uint64_t v12 = *((void *)this + 4);
  uint64_t v13 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v11);
  if (*(char *)(v13 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v22, *(const std::basic_string<char16_t>::value_type **)v13, *(void *)(v13 + 8));
  }
  else
  {
    long long v14 = *(_OWORD *)v13;
    v22.__r_.__value_.__r.__words[2] = *(void *)(v13 + 16);
    *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v14;
  }
  int v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = &v17;
  char v21 = 0;
  int v17 = (std::basic_string<char16_t> *)operator new(0x18uLL);
  uint64_t v18 = v17;
  uint64_t v19 = v17 + 1;
  uint64_t v18 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v19, (long long *)&v22, &v23, v17);
  uint64_t v15 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v12, (uint64_t *)this + 9, (uint64_t *)&v17);
  morphun::util::Validate::notNull<long long>((uint64_t)v15);
  uint64_t v20 = &v17;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v20);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return this;
}

void sub_1D2D38EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *morphun::analysis::filter::DiacriticFilter::reset(morphun::analysis::filter::DiacriticFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  BOOL result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 14) = result;
  return result;
}

uint64_t morphun::analysis::filter::DiacriticFilter::incrementToken(morphun::analysis::filter::DiacriticFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = *((void *)this + 14);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
    {
      int v5 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
      BOOL v6 = (char *)v5 + *(void *)(*v5 - 96);
      if (v6[23] < 0) {
        uint64_t v7 = *((void *)v6 + 1);
      }
      else {
        LODWORD(v7) = v6[23];
      }
      if ((int)v7 >= 1)
      {
        int v8 = 0;
        while (1)
        {
          long long v9 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          uint64_t v10 = (uint64_t)v9 + *(void *)(*v9 - 96);
          if (*(char *)(v10 + 23) < 0)
          {
            uint64_t v12 = v10;
            uint64_t v10 = *(void *)v10;
            uint64_t v11 = *(void *)(v12 + 8);
          }
          else
          {
            LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
          }
          uint64_t v13 = morphun::util::StringViewUtils::codePointAt(v10, v11, v8);
          if (MEMORY[0x1D942C150](**((void **)this + 15), v13)) {
            break;
          }
          if (v13 < 0x10000) {
            int v14 = 1;
          }
          else {
            int v14 = 2;
          }
          v8 += v14;
          if (v8 >= (int)v7) {
            return v3;
          }
        }
        if (*((unsigned char *)this + 128))
        {
          memset(&__str, 0, sizeof(__str));
          uint64_t v15 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          morphun::lang::StringFilterUtil::unaccent((morphun::lang *)&__str, (uint64_t)v15 + *(void *)(*v15 - 96));
          uint64_t v16 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v16 + *(void *)(*v16 - 96)), &__str);
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          int v17 = (morphun::lang::StringFilterUtil *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          uint64_t v18 = (void **)((char *)v17 + *(void *)(*(void *)v17 - 96));
          uint64_t v19 = (void *)*((void *)this + 15);
          uint64_t v20 = (void *)morphun::lang::StringFilterUtil::COMBINING_DIACRITICAL_MARKS(v17);
          char v21 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 13));
          morphun::lang::StringFilterUtil::filteredUnaccent(v19, v20, (uint64_t)v21 + *(void *)(*v21 - 96), &__str);
          if (*((char *)v18 + 23) < 0) {
            operator delete(*v18);
          }
          *(std::basic_string<char16_t> *)uint64_t v18 = __str;
        }
      }
    }
  }
  return v3;
}

void sub_1D2D391E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D3925C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::filter::DiacriticFilter::~DiacriticFilter(morphun::analysis::filter::DiacriticFilter *this)
{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07940);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07940);
}

morphun::analysis::filter::DiacriticFilter *morphun::analysis::filter::DiacriticFilter::DiacriticFilter(morphun::analysis::filter::DiacriticFilter *this, morphun::analysis::TokenStream *a2, const morphun::util::ULocale *a3)
{
  *(void *)this = &unk_1F2A08C08;
  int v5 = morphun::analysis::TokenFilter::TokenFilter(this, (morphun::analysis::TokenStream *)&off_1F2A07940, (uint64_t)a2);
  *(void *)int v5 = &off_1F2A10600;
  *((void *)v5 + 13) = 0;
  *((void *)v5 + 14) = 0;
  uint64_t v7 = *((unsigned __int8 *)a3 + 127);
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *((void *)a3 + 14);
  }
  if (v7) {
    uint64_t NfdVolatileForeignExemplarCharacters = morphun::lang::StringFilterUtil::getNfdVolatileForeignExemplarCharacters(a3, v6);
  }
  else {
    uint64_t NfdVolatileForeignExemplarCharacters = morphun::lang::StringFilterUtil::NFD_VOLATILE_CHARACTERS(v5);
  }
  *((void *)this + 15) = NfdVolatileForeignExemplarCharacters;
  uint64_t v9 = *((unsigned __int8 *)a3 + 127);
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *((void *)a3 + 14);
  }
  *((unsigned char *)this + 128) = v9 == 0;
  *((void *)this + 13) = morphun::analysis::util::AttributeSource::addAttribute<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)this);
  return this;
}

void sub_1D2D39388(_Unwind_Exception *a1)
{
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07940);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NbGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::NbGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"defArticle");
  operator new();
}

void sub_1D2D3A798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  __cxa_free_exception(v34);
  MEMORY[0x1D942B8B0](v33, 0x10F3C409DF61E03);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NbGrammarSynthesizer::getCount(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::NbGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Count>>(morphun::grammar::synthesis::NbGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    int v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      int v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Count>>(morphun::grammar::synthesis::NbGrammarSynthesizer::getCount(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2D3AE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v14, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Count>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      int v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            int v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            int v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      uint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      uint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        unint64_t *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    uint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          uint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        uint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D3B044(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Count>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D3B0BC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NbGrammarSynthesizer::getGender(unsigned __int16 *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  if (!a1) {
    return 0;
  }
  uint64_t v2 = morphun::grammar::synthesis::NbGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap;
  npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::NbGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap);
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v3 = v2 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v3;
  do
  {
    BOOL v7 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v4 + 32), a1);
    int v8 = (uint64_t *)(v4 + 8);
    if (!v7)
    {
      int v8 = (uint64_t *)v4;
      uint64_t v6 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v6 == v3 || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](a1, (unsigned __int16 *)(v6 + 32))) {
LABEL_10:
  }
    uint64_t v6 = v3;
  if (npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Gender>>(morphun::grammar::synthesis::NbGrammarSynthesizer::getGender(std::basic_string<char16_t> const*)::valueMap)
     + 8 == v6)
    return 0;
  else {
    return *(unsigned int *)(v6 + 56);
  }
}

void sub_1D2D3B2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  while (1)
  {
    if (*((char *)v10 - 9) < 0) {
      operator delete((void *)*(v10 - 4));
    }
    v10 -= 4;
    if (v10 == &a9)
    {
      MEMORY[0x1D942B8B0](v9, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Gender>::map[abi:ne180100](uint64_t **a1, long long *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = &a2[2 * a3];
    while (1)
    {
      BOOL v7 = a1[1];
      int v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            int v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            int v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v8 + 16, (unsigned __int16 *)v5))break; {
      }
        }
      uint64_t v12 = (char **)v4;
      uint64_t v13 = (char **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      uint64_t v13 = (char **)(v8 + 1);
      if (!v8[1])
      {
        uint64_t v12 = (char **)v8;
LABEL_19:
        uint64_t v16 = (char *)operator new(0x40uLL);
        int v17 = (std::basic_string<char16_t> *)(v16 + 32);
        if (*((char *)v5 + 23) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(v17, *(const std::basic_string<char16_t>::value_type **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v18 = *v5;
          *((void *)v16 + 6) = *((void *)v5 + 2);
          *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
        }
        *((_DWORD *)v16 + 14) = *((_DWORD *)v5 + 6);
        *(void *)uint64_t v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v16 + 2) = v12;
        unint64_t *v13 = v16;
        uint64_t v19 = (uint64_t *)**a1;
        if (v19)
        {
          *a1 = v19;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
LABEL_25:
      v5 += 2;
      if (v5 == v6) {
        return a1;
      }
    }
    uint64_t v12 = (char **)v4;
    uint64_t v13 = (char **)v4;
    if (v7)
    {
      uint64_t v14 = (char *)v7;
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (char **)v14;
          uint64_t v15 = (unsigned __int16 *)(v14 + 32);
          if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)v5, (unsigned __int16 *)v14 + 16))break; {
          uint64_t v14 = *v12;
          }
          uint64_t v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<std::basic_string<char16_t>>::operator()[abi:ne180100](v15, (unsigned __int16 *)v5)) {
          goto LABEL_25;
        }
        uint64_t v13 = v12 + 1;
        uint64_t v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D3B528(_Unwind_Exception *a1)
{
  operator delete(v1);
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<std::basic_string<char16_t>,morphun::grammar::synthesis::NbGrammarSynthesizer::Gender>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D3B5A0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::Token_Delim::newInstance(morphun::Token_Delim *this)
{
}

void sub_1D2D3B6E8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_Delim::Token_Delim(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7)
{
  *(void *)a1 = &unk_1F29F40A8;
  BOOL result = morphun::Token::Token(a1, (uint64_t *)&off_1F2A04F80, a2, a3, __src, a5, a6, a7, 0);
  *(void *)BOOL result = &off_1F2A085C8;
  return result;
}

morphun::Token *morphun::Token_Delim::Token_Delim(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8)
{
  BOOL result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a7, a8, 0);
  uint64_t v10 = *a2;
  *(void *)BOOL result = *a2;
  *(void *)((char *)result + *(void *)(v10 - 64)) = a2[4];
  *(void *)((char *)result + *(void *)(*(void *)result - 40)) = a2[5];
  return result;
}

void *virtual thunk to'morphun::analysis::tokenattributes::GrammemeAttributeImpl::setGrammemes(void *this, uint64_t a2)
{
  *(void *)((char *)this + *(void *)(*this - 104) + 8) = a2;
  return this;
}

uint64_t virtual thunk to'morphun::analysis::tokenattributes::GrammemeAttributeImpl::getGrammemes(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
  return *(void *)((char *)this + *(void *)(*(void *)this - 96) + 8);
}

void virtual thunk to'morphun::analysis::tokenattributes::GrammemeAttributeImpl::~GrammemeAttributeImpl(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
}

uint64_t morphun::analysis::tokenattributes::GrammemeAttributeImpl::getGrammemes(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
  return *((void *)this + 1);
}

uint64_t morphun::analysis::tokenattributes::GrammemeAttributeImpl::setGrammemes(uint64_t this, uint64_t a2)
{
  *(void *)(this + 8) = a2;
  return this;
}

void morphun::analysis::tokenattributes::GrammemeAttributeImpl::reflectWith(morphun::util::StringUtils **this, morphun::analysis::util::AttributeReflector *a2)
{
  if (!a2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__dst, "g");
  morphun::util::StringUtils::to_u16string(this[1], &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v7 < 0) {
    operator delete(__dst[0]);
  }
}

void sub_1D2D3B9E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  __cxa_free_exception(v20);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::tokenattributes::GrammemeAttributeImpl::copyTo(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this, morphun::analysis::util::AttributeImpl *lpsrc)
{
  if (!lpsrc)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  if (!v2)
  {
    uint64_t v6 = (char *)__cxa_allocate_exception(0x38uLL);
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(void *)uint64_t v6 = &unk_1F2A11358;
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)v2 + 64);

  return v3();
}

void sub_1D2D3BB4C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::tokenattributes::GrammemeAttributeImpl::clone(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
}

uint64_t morphun::analysis::tokenattributes::GrammemeAttributeImpl::clear(uint64_t this)
{
  *(void *)(this + 8) = 0;
  return this;
}

uint64_t morphun::analysis::tokenattributes::GrammemeAttributeImpl::operator()(int a1, void *lpsrc)
{
  if (!v2) {
    __cxa_bad_cast();
  }
  return (*(int (**)(void *))(*(void *)v2 + 40))(v2);
}

uint64_t morphun::analysis::tokenattributes::GrammemeAttributeImpl::hashCode(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
  return *((unsigned int *)this + 2);
}

uint64_t morphun::analysis::tokenattributes::GrammemeAttributeImpl::equals(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this, const morphun::analysis::util::Attribute *lpsrc)
{
  if ((morphun::analysis::tokenattributes::GrammemeAttributeImpl *)((char *)this + *(void *)(*(void *)this - 88)) == lpsrc) {
    return 1;
  }
  if (result) {
    return *((void *)this + 1) == *(void *)(result + 8);
  }
  return result;
}

void covariant return thunk to'morphun::analysis::tokenattributes::GrammemeAttributeImpl::clone(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
}

void morphun::analysis::tokenattributes::GrammemeAttributeImpl::~GrammemeAttributeImpl(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
}

void morphun::analysis::tokenattributes::GrammemeAttributeImpl::create(morphun::analysis::tokenattributes::GrammemeAttributeImpl *this)
{
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_DefinitenessLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v4 = (const UChar *)v3;
  int v5 = *(char *)(v3 + 23);
  if (v5 >= 0) {
    uint64_t v6 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    uint64_t v6 = *(void *)(v3 + 8);
  }
  if (!v6) {
    goto LABEL_23;
  }
  std::basic_string<char16_t> __p = 0;
  unint64_t v29 = 0;
  uint64_t v30 = 0;
  char v7 = *(const UChar **)v3;
  uint64_t v8 = morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v3);
  if (v5 >= 0) {
    uint64_t v9 = v4;
  }
  else {
    uint64_t v9 = v7;
  }
  morphun::util::StringViewUtils::lowercase((uint64_t)&__p, v9, v6, v8);
  unint64_t v10 = HIBYTE(v30);
  if (v30 < 0) {
    unint64_t v10 = v29;
  }
  if (v10 >= 3)
  {
    uint64_t v11 = 0;
    p_p = (char *)__p;
    if (v30 >= 0) {
      p_p = (char *)&__p;
    }
    do
    {
      int v13 = *(unsigned __int16 *)&p_p[v11 * 2];
      int v14 = (unsigned __int16)word_1D2ED004E[v11];
    }
    while (v14 == v13 && v11++ != 2);
    if (v14 != v13)
    {
      if (v10 < 4) {
        goto LABEL_21;
      }
      uint64_t v18 = 0;
      uint64_t v19 = (char *)__p;
      if (v30 >= 0) {
        uint64_t v19 = (char *)&__p;
      }
      do
      {
        int v20 = *(unsigned __int16 *)&v19[v18 * 2];
        int v21 = (unsigned __int16)word_1D2ED0056[v18];
      }
      while (v21 == v20 && v18++ != 3);
      if (v21 != v20)
      {
        uint64_t v23 = 0;
        int v24 = (char *)&__p;
        if (v30 < 0) {
          int v24 = (char *)__p;
        }
        do
        {
          int v25 = *(unsigned __int16 *)&v24[v23 * 2];
          int v26 = (unsigned __int16)aEen[v23];
        }
        while (v26 == v25 && v23++ != 3);
        if (v26 == v25) {
          operator new();
        }
        goto LABEL_21;
      }
    }
    operator new();
  }
LABEL_21:
  if (SHIBYTE(v30) < 0) {
    operator delete(__p);
  }
LABEL_23:
  (*(void (**)(void **__return_ptr, uint64_t, const UChar *))(*(void *)a1 + 32))(&__p, a1, v4);
  unint64_t v16 = HIBYTE(v30);
  if (v30 < 0) {
    unint64_t v16 = v29;
  }
  if (v16) {
    operator new();
  }
  if (v30 < 0) {
    operator delete(__p);
  }
  return 0;
}

void sub_1D2D3C100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x10B3C40F7FF9C27);
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_DefinitenessLookupFunction::~NlGrammarSynthesizer_DefinitenessLookupFunction(morphun::grammar::synthesis::NlGrammarSynthesizer_DefinitenessLookupFunction *this)
{
  *(void *)this = &unk_1F29FB888;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &unk_1F29FB888;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

uint64_t morphun::TokenChain::toOriginatingString@<X0>(uint64_t this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t v2 = this;
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t v4 = (uint64_t *)(this + 8);
  int v5 = -1;
  while (1)
  {
    uint64_t v6 = *v4;
    if (!*v4 || v6 == *(void *)(v2 + 16)) {
      break;
    }
    this = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
    if ((int)this >= v5)
    {
      int v7 = *(char *)(v6 + 39);
      if (v7 >= 0) {
        uint64_t v8 = (const std::basic_string<char16_t>::value_type *)(v6 + 16);
      }
      else {
        uint64_t v8 = *(const std::basic_string<char16_t>::value_type **)(v6 + 16);
      }
      if (v7 >= 0) {
        std::basic_string<char16_t>::size_type v9 = *(unsigned __int8 *)(v6 + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v9 = *(void *)(v6 + 24);
      }
      std::basic_string<char16_t>::append(a2, v8, v9);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
      int v5 = this;
    }
    uint64_t v4 = (uint64_t *)(v6 + 80);
  }
  return this;
}

void sub_1D2D3C3A4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::TokenChain::getToken(morphun::TokenChain *this, int a2)
{
  if (a2 == -1)
  {
    int v7 = *(uint64_t (**)(void))(*(void *)this + 104);
    return v7();
  }
  else
  {
    int v2 = a2 - *((_DWORD *)this + 15);
    if (v2 < 0 || (uint64_t v3 = *((void *)this + 4), v2 >= (int)((unint64_t)(*((void *)this + 5) - v3) >> 3)))
    {
      if (morphun::util::gLogLevel <= 4)
      {
        morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)a2, &v8);
        std::basic_string<char16_t>::insert(&v8, (std::basic_string<char16_t>::size_type)"A", (const std::basic_string<char16_t>::value_type *)0x2B, v5);
        std::basic_string<char16_t> __p = v8;
        memset(&v8, 0, sizeof(v8));
        if (morphun::util::gLogLevel <= 4)
        {
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_p = &__p;
          }
          else {
            p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
          }
          morphun::util::logToTopOfStackLogger((morphun::util *)4, 0, (uint64_t)p_p);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v8.__r_.__value_.__l.__data_);
        }
      }
      return 0;
    }
    else
    {
      return *(void *)(v3 + 8 * v2);
    }
  }
}

void sub_1D2D3C4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::TokenChain::getTokenValue(morphun::TokenChain *this)
{
  uint64_t v2 = (*(uint64_t (**)(morphun::TokenChain *))(*(void *)this + 152))(this);
  if (!v2) {
    uint64_t v2 = (*(uint64_t (**)(morphun::TokenChain *))(*(void *)this + 104))(this);
  }
  return v2 + 16;
}

void morphun::TokenChain::getNewTokenChain(morphun::TokenChain *this, uint64_t a2, int a3)
{
  uint64_t v6 = (*(uint64_t (**)(morphun::TokenChain *))(*(void *)this + 104))(this);
  uint64_t v7 = npc<morphun::Token_Head>(v6);
  std::basic_string<char16_t> v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 40))(v7, a2);
  std::basic_string<char16_t>::size_type v9 = java_cast<morphun::Token_Head *,morphun::Token>(v8);
  unint64_t v10 = (void *)(*(uint64_t (**)(morphun::TokenChain *))(*(void *)this + 104))(this);
  uint64_t v11 = (uint64_t)v9;
  while (1)
  {
    npc<morphun::Token const>((uint64_t)v10);
    uint64_t v12 = v10[10];
    if (v12 == (*(uint64_t (**)(morphun::TokenChain *))(*(void *)this + 112))(this)) {
      break;
    }
    npc<morphun::Token const>((uint64_t)v10);
    unint64_t v10 = (void *)v10[10];
    uint64_t v13 = npc<morphun::Token const>((uint64_t)v10);
    if ((*(int (**)(uint64_t))(*v10 + 24))(v13) >= (int)a2
      && (*(int (**)(void *))(*v10 + 32))(v10) <= a3)
    {
      uint64_t v14 = (*(uint64_t (**)(void *, uint64_t))(*v10 + 40))(v10, a2);
      *(void *)(npc<morphun::Token>(v14) + 72) = v11;
      npc<morphun::Token>(v11);
      *(void *)(v11 + 80) = v14;
      uint64_t v11 = v14;
    }
  }
  operator new();
}

void sub_1D2D3C7E8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C40D65E1E45);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token_Head>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D3C878(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *java_cast<morphun::Token_Head *,morphun::Token>(void *result)
{
  if (result)
  {
    if (!result)
    {
      exception = (char *)__cxa_allocate_exception(0x38uLL);
      *(_OWORD *)(exception + 8) = 0u;
      *(_OWORD *)(exception + 24) = 0u;
      *(_OWORD *)(exception + 40) = 0u;
      *(void *)exception = &unk_1F2A11358;
    }
  }
  return result;
}

void sub_1D2D3C988(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D3C9EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::TokenChain *morphun::TokenChain::TokenChain(morphun::TokenChain *this, morphun::Token_Head *a2, morphun::Token_Tail *a3)
{
  *(void *)this = &unk_1F29F3C18;
  *((void *)this + 1) = a2;
  *((void *)this + 2) = a3;
  *((_DWORD *)this + 6) = 0;
  *((unsigned char *)this + 28) = 1;
  *((_DWORD *)this + 6) = morphun::Chunk::checkSize(a2, a3, a3);
  *(void *)this = &off_1F2A08238;
  npc<morphun::Token_Tail>((uint64_t)a3);
  int v6 = (*(uint64_t (**)(morphun::Token_Tail *))(*(void *)a3 + 32))(a3);
  npc<morphun::Token_Head>((uint64_t)a2);
  int v7 = (*(uint64_t (**)(morphun::Token_Head *))(*(void *)a2 + 24))(a2);
  uint64_t v11 = 0;
  std::vector<morphun::Token *>::vector((void *)this + 4, v6 - v7 + 1, &v11);
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 15) = (*(uint64_t (**)(morphun::Token_Head *))(*(void *)a2 + 24))(a2);
  **((void **)this + 4) = a2;
  *(void *)(*((void *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(morphun::Token_Head *))(*(void *)a2 + 32))(a2)
                  - *((_DWORD *)this + 15))) = a2;
  *(void *)(*((void *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(morphun::Token_Tail *))(*(void *)a3 + 24))(a3)
                  - *((_DWORD *)this + 15))) = a3;
  *(void *)(*((void *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(morphun::Token_Tail *))(*(void *)a3 + 32))(a3)
                  - *((_DWORD *)this + 15))) = a3;
  uint64_t v8 = *((void *)a2 + 10);
  do
  {
    if ((morphun::Token_Tail *)v8 == a3) {
      break;
    }
    npc<morphun::Token>(v8);
    if (*(_DWORD *)(v8 + 12) > *(_DWORD *)(v8 + 8))
    {
      npc<morphun::Token>(v8);
      *(void *)(*((void *)this + 4)
                + 8 * (int)((*(uint64_t (**)(uint64_t))(*(void *)v8 + 24))(v8) - *((_DWORD *)this + 15))) = v8;
      *(void *)(*((void *)this + 4)
                + 8 * (int)((*(uint64_t (**)(uint64_t))(*(void *)v8 + 32))(v8) + ~*((_DWORD *)this + 15))) = v8;
    }
    npc<morphun::Token>(v8);
    int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 32))(v8);
    uint64_t v8 = *(void *)(v8 + 80);
    npc<morphun::Token>(v8);
  }
  while ((*(int (**)(uint64_t))(*(void *)v8 + 24))(v8) >= v9);
  return this;
}

void sub_1D2D3CD0C(_Unwind_Exception *a1)
{
  morphun::Chunk::~Chunk(v1, (uint64_t *)&off_1F2A04E30);
  _Unwind_Resume(a1);
}

uint64_t npc<morphun::Token_Tail>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D3CD98(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *std::vector<morphun::Token *>::vector(void *a1, unint64_t a2, uint64_t *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >> 61) {
      std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = 8 * a2;
    int v7 = operator new(8 * a2);
    *a1 = v7;
    a1[1] = v7;
    uint64_t v8 = &v7[a2];
    a1[2] = v8;
    uint64_t v9 = *a3;
    do
    {
      *v7++ = v9;
      v6 -= 8;
    }
    while (v6);
    a1[1] = v8;
  }
  return a1;
}

void sub_1D2D3CE28(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::TokenChain::isExplicitOnly(morphun::TokenChain *this)
{
  int v1 = *((_DWORD *)this + 14);
  if (v1)
  {
    char v2 = v1 == 1;
  }
  else
  {
    uint64_t v4 = (*(uint64_t (**)(morphun::TokenChain *))(*(void *)this + 104))(this);
    char v5 = 0;
LABEL_4:
    char v6 = v5;
    while (1)
    {
      npc<morphun::Token>(v4);
      uint64_t v4 = *(void *)(v4 + 80);
      if (!v4) {
        break;
      }
      {
        char v5 = 1;
        if (v7) {
          goto LABEL_4;
        }
        break;
      }
    }
    char v2 = v6 & (v4 == 0);
    if (v2) {
      int v8 = 1;
    }
    else {
      int v8 = 2;
    }
    *((_DWORD *)this + 14) = v8;
  }
  return v2 & 1;
}

uint64_t morphun::TokenChain::hashCode(morphun::TokenChain *this)
{
  int v1 = (void *)*((void *)this + 1);
  if (!v1) {
    return 0;
  }
  LODWORD(v2) = 0;
  do
  {
    uint64_t v2 = (*(unsigned int (**)(void *))(*v1 + 48))(v1) - v2 + 32 * v2;
    int v1 = (void *)v1[10];
  }
  while (v1);
  return v2;
}

void *morphun::TokenChain::getTail(morphun::TokenChain *this)
{
  uint64_t result = (void *)*((void *)this + 2);
  if (result)
  {
    if (!result)
    {
      exception = (char *)__cxa_allocate_exception(0x38uLL);
      *(_OWORD *)(exception + 8) = 0u;
      *(_OWORD *)(exception + 24) = 0u;
      *(_OWORD *)(exception + 40) = 0u;
      *(void *)exception = &unk_1F2A11358;
    }
  }
  return result;
}

void *morphun::TokenChain::getHead(void **this)
{
  return java_cast<morphun::Token_Head *,morphun::Token>(this[1]);
}

void morphun::TokenChain::~TokenChain(morphun::TokenChain *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::TokenChain::~TokenChain(morphun::TokenChain *this, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v4 - 40)) = a2[3];
  char v5 = (void *)*((void *)this + 4);
  if (v5)
  {
    *((void *)this + 5) = v5;
    operator delete(v5);
  }

  morphun::Chunk::~Chunk(this, a2 + 1);
}

std::basic_string<char16_t> *morphun::TokenChain::toString@<X0>(morphun::TokenChain *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  uint64_t result = (std::basic_string<char16_t> *)std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, "T");
  char v5 = 0;
  for (CFIndex i = (uint64_t *)((char *)this + 8); ; CFIndex i = (uint64_t *)(v7 + 80))
  {
    uint64_t v7 = *i;
    if (!*i || v7 == *((void *)this + 2)) {
      break;
    }
    if (!*(unsigned char *)(v7 + 65))
    {
      if (v5) {
        std::basic_string<char16_t>::append(a2, L" | ", 3uLL);
      }
      int v8 = *(char *)(v7 + 39);
      if (v8 >= 0) {
        uint64_t v9 = (const std::basic_string<char16_t>::value_type *)(v7 + 16);
      }
      else {
        uint64_t v9 = *(const std::basic_string<char16_t>::value_type **)(v7 + 16);
      }
      if (v8 >= 0) {
        std::basic_string<char16_t>::size_type v10 = *(unsigned __int8 *)(v7 + 39);
      }
      else {
        std::basic_string<char16_t>::size_type v10 = *(void *)(v7 + 24);
      }
      uint64_t result = std::basic_string<char16_t>::append(a2, v9, v10);
      char v5 = 1;
    }
  }
  return result;
}

void sub_1D2D3D260(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

morphun::TokenChain *morphun::TokenChain::TokenChain(morphun::TokenChain *this, morphun::Token_Head *a2, morphun::Token_Tail *a3, const morphun::Token *a4)
{
  uint64_t v8 = *((void *)a2 + 1);
  *(void *)this = v8;
  *(void *)((char *)this + *(void *)(v8 - 40)) = *((void *)a2 + 2);
  *((void *)this + 1) = a3;
  *((void *)this + 2) = a4;
  *((_DWORD *)this + 6) = 0;
  *((unsigned char *)this + 28) = 1;
  *((_DWORD *)this + 6) = morphun::Chunk::checkSize(a3, a4, a3);
  uint64_t v9 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v9 - 40)) = *((void *)a2 + 3);
  npc<morphun::Token_Tail>((uint64_t)a4);
  int v10 = (*(uint64_t (**)(const morphun::Token *))(*(void *)a4 + 32))(a4);
  npc<morphun::Token_Head>((uint64_t)a3);
  int v11 = (*(uint64_t (**)(morphun::Token_Tail *))(*(void *)a3 + 24))(a3);
  uint64_t v15 = 0;
  std::vector<morphun::Token *>::vector((void *)this + 4, v10 - v11 + 1, &v15);
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 15) = (*(uint64_t (**)(morphun::Token_Tail *))(*(void *)a3 + 24))(a3);
  **((void **)this + 4) = a3;
  *(void *)(*((void *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(morphun::Token_Tail *))(*(void *)a3 + 32))(a3)
                  - *((_DWORD *)this + 15))) = a3;
  *(void *)(*((void *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(const morphun::Token *))(*(void *)a4 + 24))(a4)
                  - *((_DWORD *)this + 15))) = a4;
  *(void *)(*((void *)this + 4)
            + 8
            * (int)((*(uint64_t (**)(const morphun::Token *))(*(void *)a4 + 32))(a4)
                  - *((_DWORD *)this + 15))) = a4;
  uint64_t v12 = *((void *)a3 + 10);
  do
  {
    if ((const morphun::Token *)v12 == a4) {
      break;
    }
    npc<morphun::Token>(v12);
    if (*(_DWORD *)(v12 + 12) > *(_DWORD *)(v12 + 8))
    {
      npc<morphun::Token>(v12);
      *(void *)(*((void *)this + 4)
                + 8
                * (int)((*(uint64_t (**)(uint64_t))(*(void *)v12 + 24))(v12) - *((_DWORD *)this + 15))) = v12;
      *(void *)(*((void *)this + 4)
                + 8
                * (int)((*(uint64_t (**)(uint64_t))(*(void *)v12 + 32))(v12) + ~*((_DWORD *)this + 15))) = v12;
    }
    npc<morphun::Token>(v12);
    int v13 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 32))(v12);
    uint64_t v12 = *(void *)(v12 + 80);
    npc<morphun::Token>(v12);
  }
  while ((*(int (**)(uint64_t))(*(void *)v12 + 24))(v12) >= v13);
  return this;
}

void sub_1D2D3D658(_Unwind_Exception *a1)
{
  morphun::Chunk::~Chunk(v1, v2);
  _Unwind_Resume(a1);
}

void virtual thunk to'morphun::TokenChain::~TokenChain(morphun::TokenChain *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void morphun::TokenChain::createEmptyTokenChain(morphun::TokenChain *this)
{
}

void sub_1D2D3D7AC(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  MEMORY[0x1D942B8B0](v2, 0x10A1C40D65E1E45);
  _Unwind_Resume(a1);
}

uint64_t morphun::TokenChain::EMPTY_CHAIN(morphun::TokenChain *this)
{
  {
    if (v2) {
      morphun::TokenChain::createEmptyTokenChain(v2);
    }
  }
  return morphun::TokenChain::EMPTY_CHAIN(void)::EMPTY_CHAIN_;
}

void sub_1D2D3D858(_Unwind_Exception *a1)
{
}

uint64_t morphun::TokenChain::operator==(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  if (v4 != (*(unsigned int (**)(uint64_t))(*(void *)a2 + 40))(a2)) {
    return 0;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 48))(a2);
  if (!v5) {
    return v6 == 0;
  }
  while (1)
  {
    uint64_t result = morphun::Token::operator==(v5, v6);
    if (!result) {
      break;
    }
    uint64_t v5 = *(void *)(v5 + 80);
    uint64_t v6 = *(void *)(v6 + 80);
    if (!v5) {
      return v6 == 0;
    }
  }
  return result;
}

uint64_t morphun::TokenChain::operator!=(uint64_t a1, uint64_t a2)
{
  return morphun::TokenChain::operator==(a1, a2) ^ 1;
}

uint64_t morphun::TokenChain::operator()(uint64_t a1, uint64_t a2)
{
  return (*(int (**)(uint64_t))(*(void *)a2 + 120))(a2);
}

std::basic_string<char16_t> *virtual thunk to'morphun::TokenChain::toString@<X0>(morphun::TokenChain *this@<X0>, std::basic_string<char16_t> *a2@<X8>)
{
  return morphun::TokenChain::toString((morphun::TokenChain *)((char *)this + *(void *)(*(void *)this - 24)), a2);
}

uint64_t morphun::Token_Group::getSubTokens(morphun::Token_Group *this)
{
  return *((void *)this + 11);
}

void morphun::Token_Group::newInstance(morphun::Token_Group *this)
{
}

void sub_1D2D3DB94(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C40DF864942);
  _Unwind_Resume(a1);
}

uint64_t morphun::Token_Group::cloneSubTokens(morphun::Token_Group *this, uint64_t a2)
{
  uint64_t v3 = *((void *)this + 11);
  if (v3 && (*(int (**)(uint64_t))(*(void *)v3 + 40))(v3) >= 1)
  {
    uint64_t v5 = npc<morphun::Chunk>(*((void *)this + 11));
    uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 48))(v5);
    uint64_t v7 = npc<morphun::Token>((uint64_t)v6);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 40))(v7, a2);
    uint64_t v9 = npc<morphun::Chunk>(*((void *)this + 11));
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 56))(v9);
    if (v6 != (void *)v10)
    {
      int v11 = (void *)v10;
      uint64_t v12 = v8;
      do
      {
        uint64_t v6 = (void *)v6[10];
        uint64_t v13 = npc<morphun::Token>((uint64_t)v6);
        uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*v6 + 40))(v13, a2);
        *(void *)(npc<morphun::Token>(v14) + 72) = v12;
        npc<morphun::Token>(v12);
        *(void *)(v12 + 80) = v14;
        uint64_t v12 = v14;
      }
      while (v6 != v11);
    }
    operator new();
  }
  return 0;
}

void sub_1D2D3DD80(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10A1C401D7E7872);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_Group::Token_Group(morphun::Token *a1, int a2, int a3, void *__src, unint64_t a5, void *a6, unint64_t a7, uint64_t a8)
{
  *(void *)a1 = &unk_1F29F4180;
  uint64_t result = morphun::Token::Token(a1, (uint64_t *)&off_1F2A04FC0, a2, a3, __src, a5, a6, a7, 1);
  *(void *)uint64_t result = &off_1F2A08640;
  *((void *)result + 11) = a8;
  return result;
}

uint64_t npc<morphun::Chunk>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D3DE84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D3DEE8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::Token_Group::~Token_Group(morphun::Token_Group *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::Token_Group::~Token_Group(morphun::Token_Group *this, void **a2)
{
  int v4 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(v4 - 8)) = a2[4];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[5];
  uint64_t v5 = *((void *)this + 11);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  }

  morphun::Token::~Token((void **)this, a2 + 1);
}

void virtual thunk to'morphun::Token_Group::~Token_Group(morphun::Token_Group *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::Token_Group::~Token_Group(void *a1)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

morphun::Token *morphun::Token_Group::Token_Group(morphun::Token *a1, uint64_t *a2, int a3, int a4, void *a5, unint64_t a6, void *a7, unint64_t a8, uint64_t a9)
{
  uint64_t result = morphun::Token::Token(a1, a2 + 1, a3, a4, a5, a6, a7, a8, 1);
  uint64_t v11 = *a2;
  *(void *)uint64_t result = *a2;
  *(void *)((char *)result + *(void *)(v11 - 64)) = a2[4];
  *(void *)((char *)result + *(void *)(*(void *)result - 40)) = a2[5];
  *((void *)result + 11) = a9;
  return result;
}

uint64_t npc<morphun::tokenizer::locale::fi::FiSegment const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D3E2D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::locale::fi::FiSegment::FiSegment(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, char a9)
{
  *(void *)a1 = a2;
  if (a4 < a7) {
    goto LABEL_18;
  }
  unint64_t v10 = a8 - a7;
  unint64_t v11 = a4 - a7;
  if (v11 >= v10) {
    unint64_t v11 = a8 - a7;
  }
  *(void *)(a1 + 8) = a3 + 2 * a7;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = a3;
  *(void *)(a1 + 32) = a4;
  *(void *)(a1 + 40) = a5;
  *(void *)(a1 + 48) = a6;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = a7;
  *(_DWORD *)(a1 + 68) = a8;
  *(_WORD *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 74) = a9;
  if (a6 < a8) {
LABEL_18:
  }
    std::__throw_out_of_range[abi:ne180100]("string_view::substr");
  if (a8 >= v10) {
    int v12 = a8 - a7;
  }
  else {
    int v12 = a8;
  }
  unint64_t v13 = morphun::dictionary::metadata::MarisaTrie<int>::find((marisa::Trie *)(a2 + 40), a5 + 2 * (a6 - a8), v12);
  unint64_t v14 = HIDWORD(v13);
  if (HIDWORD(v13))
  {
    if ((unsigned __int16)v13 <= 2u) {
      int v18 = 2;
    }
    else {
      int v18 = (unsigned __int16)v13;
    }
    unsigned int v19 = v18 - 1;
    if ((unsigned __int16)v13 <= 0xF9Fu) {
      unsigned int v20 = v19;
    }
    else {
      unsigned int v20 = 3998;
    }
    int v17 = FREQ_TO_LOG_PROB[v20];
    LODWORD(v14) = WORD1(v13) & 0x3F;
    unsigned int v15 = (v13 >> 22) & 1;
    char v16 = 1;
  }
  else
  {
    LOBYTE(v15) = 0;
    char v16 = 0;
    int v17 = 0;
  }
  *(_DWORD *)(a1 + 60) = v17;
  *(_DWORD *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 72) = v15;
  *(unsigned char *)(a1 + 73) = v16;
  return a1;
}

uint64_t morphun::tokenizer::locale::fi::FiSegment::FiSegment(uint64_t a1, uint64_t a2, int a3, int a4, char a5)
{
  return morphun::tokenizer::locale::fi::FiSegment::FiSegment(a1, *(void *)a2, *(void *)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48), a3, a4, a5);
}

void morphun::tokenizer::locale::fi::FiSegment::addBoundaries(uint64_t a1, int **a2)
{
  if (*(unsigned char *)(a1 + 73))
  {
    int v3 = *(_DWORD *)(a1 + 56);
    if (v3)
    {
      int v5 = *(_DWORD *)(a1 + 68) - v3;
      morphun::tokenizer::locale::fi::FiSegment::FiSegment((uint64_t)v27, a1, *(_DWORD *)(a1 + 64), v5, 0);
      morphun::tokenizer::locale::fi::FiSegment::addBoundaries(v27, a2);
      uint64_t v6 = (morphun::tokenizer::locale::fi::FiSuffixSplit *)morphun::tokenizer::locale::fi::FiSegment::FiSegment((uint64_t)&v24, a1, v5, *(_DWORD *)(a1 + 68), 1);
      if (*(unsigned char *)(a1 + 72)
        && (uint64_t v7 = (uint64_t *)v25,
            uint64_t v8 = v26,
            uint64_t v9 = morphun::tokenizer::locale::fi::FiSuffixSplit::SUFFIXINFO(v6),
            !std::__hash_table<std::__hash_value_type<std::u16string_view,std::vector<int>>,std::__unordered_map_hasher<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::hash<std::u16string_view>,std::equal_to<std::u16string_view>,true>,std::__unordered_map_equal<std::u16string_view,std::__hash_value_type<std::u16string_view,std::vector<int>>,std::equal_to<std::u16string_view>,std::hash<std::u16string_view>,true>,std::allocator<std::__hash_value_type<std::u16string_view,std::vector<int>>>>::find<std::u16string_view>(*(void *)v9, *(void *)(v9 + 8), v7, v8)))
      {
        if (!a2)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        unint64_t v11 = a2[1];
        unint64_t v10 = (unint64_t)a2[2];
        if ((unint64_t)v11 >= v10)
        {
          unint64_t v13 = *a2;
          uint64_t v14 = v11 - *a2;
          unint64_t v15 = v14 + 1;
          if ((unint64_t)(v14 + 1) >> 62) {
            std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v16 = v10 - (void)v13;
          if (v16 >> 1 > v15) {
            unint64_t v15 = v16 >> 1;
          }
          BOOL v17 = (unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL;
          unint64_t v18 = 0x3FFFFFFFFFFFFFFFLL;
          if (!v17) {
            unint64_t v18 = v15;
          }
          if (v18)
          {
            unint64_t v18 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(v18);
            unint64_t v13 = *a2;
            unint64_t v11 = a2[1];
          }
          else
          {
            uint64_t v19 = 0;
          }
          unsigned int v20 = (int *)(v18 + 4 * v14);
          unint64_t v21 = v18 + 4 * v19;
          int *v20 = v5;
          int v12 = v20 + 1;
          while (v11 != v13)
          {
            int v22 = *--v11;
            *--unsigned int v20 = v22;
          }
          *a2 = v20;
          a2[1] = v12;
          a2[2] = (int *)v21;
          if (v13) {
            operator delete(v13);
          }
        }
        else
        {
          *unint64_t v11 = v5;
          int v12 = v11 + 1;
        }
        a2[1] = v12;
        morphun::tokenizer::locale::fi::FiSegment::addBoundaries(&v24, a2);
      }
      else if (*(unsigned char *)(a1 + 74))
      {
        if (morphun::tokenizer::locale::fi::FiSuffixSplit::isInNotNominative(a1, (unsigned __int16 *)v25, v26)) {
          morphun::tokenizer::locale::fi::FiSuffixSplit::addSuffixInfo(v25, v26, a2, v5);
        }
      }
    }
  }
}

void sub_1D2D3E620(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t **com::apple::siri::tokenizer::data::config_zh::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  void v3[2] = xmmword_1E696DF80;
  _OWORD v3[3] = *(_OWORD *)&off_1E696DF90;
  int v4 = L"/zh-Hant";
  v3[0] = xmmword_1E696DF60;
  v3[1] = *(_OWORD *)&off_1E696DF70;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 3);
}

uint64_t morphun::tokenizer::dictionary::DictionaryTokenizerConfig::DictionaryTokenizerConfig(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(_OWORD *)a1 = xmmword_1D2D6F5C0;
  *(_OWORD *)(a1 + 16) = xmmword_1D2D6F5D0;
  *(void *)(a1 + 32) = 200;
  *(_DWORD *)(a1 + 40) = 100;
  *(void *)(a1 + 44) = 1036831949;
  *(void *)(a1 + 52) = 0;
  std::set<std::u16string_view>::set[abi:ne180100]((uint64_t *)(a1 + 64), (uint64_t)a2);
  std::set<std::u16string_view>::set[abi:ne180100]((uint64_t *)(a1 + 88), (uint64_t)a3);
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>((void *)(a1 + 112), *(const void **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 4);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  std::vector<std::u16string_view>::__init_with_size[abi:ne180100]<std::u16string_view*,std::u16string_view*>((void *)(a1 + 136), *(const void **)a5, *(void *)(a5 + 8), (uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 4);
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 160) = a1 + 168;
  *(void *)(a1 + 176) = 0;
  memset(&v37, 0, sizeof(v37));
  int v12 = (void *)*a2;
  unint64_t v10 = a2 + 1;
  unint64_t v11 = v12;
  if (v12 != v10)
  {
    do
    {
      std::basic_string<char16_t>::__assign_external(&v37, (const std::basic_string<char16_t>::value_type *)v11[4], v11[5]);
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v13 = &v37;
      }
      else {
        unint64_t v13 = (std::basic_string<char16_t> *)v37.__r_.__value_.__r.__words[0];
      }
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type size = v37.__r_.__value_.__l.__size_;
      }
      unint64_t v15 = (std::basic_string<char16_t> *)((char *)v13 + 2 * size - 2);
      if (size) {
        BOOL v16 = v15 > v13;
      }
      else {
        BOOL v16 = 0;
      }
      if (v16)
      {
        BOOL v17 = (char *)&v13->__r_.__value_.__s.__data_[1];
        do
        {
          std::basic_string<char16_t>::value_type v18 = *((_WORD *)v17 - 1);
          *((_WORD *)v17 - 1) = v15->__r_.__value_.__s.__data_[0];
          v15->__r_.__value_.__s.__data_[0] = v18;
          unint64_t v15 = (std::basic_string<char16_t> *)((char *)v15 - 2);
          BOOL v19 = v17 >= (char *)v15;
          v17 += 2;
        }
        while (!v19);
      }
      std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>((uint64_t **)(a1 + 160), (unsigned __int16 *)&v37, (uint64_t)&v37);
      int v20 = *((_DWORD *)v11 + 10);
      if (*(_DWORD *)(a1 + 28) < v20) {
        *(_DWORD *)(a1 + 28) = v20;
      }
      unint64_t v21 = (void *)v11[1];
      if (v21)
      {
        do
        {
          int v22 = v21;
          unint64_t v21 = (void *)*v21;
        }
        while (v21);
      }
      else
      {
        do
        {
          int v22 = (void *)v11[2];
          BOOL v23 = *v22 == (void)v11;
          unint64_t v11 = v22;
        }
        while (!v23);
      }
      unint64_t v11 = v22;
    }
    while (v22 != v10);
  }
  unint64_t v26 = (void *)*a3;
  uint64_t v24 = a3 + 1;
  int v25 = v26;
  if (v26 != v24)
  {
    do
    {
      std::basic_string<char16_t>::__assign_external(&v37, (const std::basic_string<char16_t>::value_type *)v25[4], v25[5]);
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v27 = &v37;
      }
      else {
        uint64_t v27 = (std::basic_string<char16_t> *)v37.__r_.__value_.__r.__words[0];
      }
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v28 = HIBYTE(v37.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v28 = v37.__r_.__value_.__l.__size_;
      }
      unint64_t v29 = (std::basic_string<char16_t> *)((char *)v27 + 2 * v28 - 2);
      if (v28) {
        BOOL v30 = v29 > v27;
      }
      else {
        BOOL v30 = 0;
      }
      if (v30)
      {
        uint64_t v31 = (char *)&v27->__r_.__value_.__s.__data_[1];
        do
        {
          std::basic_string<char16_t>::value_type v32 = *((_WORD *)v31 - 1);
          *((_WORD *)v31 - 1) = v29->__r_.__value_.__s.__data_[0];
          v29->__r_.__value_.__s.__data_[0] = v32;
          unint64_t v29 = (std::basic_string<char16_t> *)((char *)v29 - 2);
          BOOL v19 = v31 >= (char *)v29;
          v31 += 2;
        }
        while (!v19);
      }
      std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>((uint64_t **)(a1 + 160), (unsigned __int16 *)&v37, (uint64_t)&v37);
      int v33 = *((_DWORD *)v25 + 10);
      if (*(_DWORD *)(a1 + 28) < v33) {
        *(_DWORD *)(a1 + 28) = v33;
      }
      uint64_t v34 = (void *)v25[1];
      if (v34)
      {
        do
        {
          uint64_t v35 = v34;
          uint64_t v34 = (void *)*v34;
        }
        while (v34);
      }
      else
      {
        do
        {
          uint64_t v35 = (void *)v25[2];
          BOOL v23 = *v35 == (void)v25;
          int v25 = v35;
        }
        while (!v23);
      }
      int v25 = v35;
    }
    while (v35 != v24);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1D2D3E950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  std::basic_string<char16_t>::value_type v18 = *v16;
  if (*v16)
  {
    *(void *)(v15 + 120) = v18;
    operator delete(v18);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v15 + 96));
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v15 + 72));
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction::getFeatureValue(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 & 0xFFFFFFFFFFFFLL | 0x284F000000000000;
  if (a1[3])
  {
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
    if (v5)
    {
      uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*a1 + 32);
      return v6(a1, a2, v5);
    }
  }
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  if (*(char *)(v8 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v43, *(const std::basic_string<char16_t>::value_type **)v8, *(void *)(v8 + 8));
  }
  else
  {
    long long v9 = *(_OWORD *)v8;
    v43.__r_.__value_.__r.__words[2] = *(void *)(v8 + 16);
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v9;
  }
  std::basic_string<char16_t>::size_type size = HIBYTE(v43.__r_.__value_.__r.__words[2]);
  if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v43.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_65;
  }
  morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::determine(a1 + 4, (uint64_t)&v43, &__p);
  uint64_t v12 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(v11);
  uint64_t v13 = HIBYTE(v42);
  int v14 = SHIBYTE(v42);
  if (v42 < 0) {
    uint64_t v13 = v41;
  }
  uint64_t v15 = *(unsigned __int8 *)(v12 + 23);
  int v16 = (char)v15;
  if ((v15 & 0x80u) != 0) {
    uint64_t v15 = *(void *)(v12 + 8);
  }
  if (v13 == v15)
  {
    if (!v13)
    {
LABEL_25:
      char v19 = 0;
      if ((SHIBYTE(v42) & 0x80000000) == 0) {
        goto LABEL_64;
      }
LABEL_26:
      operator delete(__p);
      if ((v19 & 1) == 0) {
        goto LABEL_65;
      }
      goto LABEL_67;
    }
    if (v16 >= 0) {
      BOOL v17 = (unsigned __int16 *)v12;
    }
    else {
      BOOL v17 = *(unsigned __int16 **)v12;
    }
    p_p = (unsigned __int16 *)__p;
    if (v42 >= 0) {
      p_p = (unsigned __int16 *)&__p;
    }
    while (*v17 == *p_p)
    {
      ++p_p;
      ++v17;
      if (!--v13) {
        goto LABEL_25;
      }
    }
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type v21 = v43.__r_.__value_.__l.__size_;
    if (v43.__r_.__value_.__l.__size_ <= 3) {
      goto LABEL_55;
    }
    int v20 = (std::basic_string<char16_t> *)v43.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (HIBYTE(v43.__r_.__value_.__r.__words[2]) <= 3u) {
      goto LABEL_55;
    }
    int v20 = &v43;
    std::basic_string<char16_t>::size_type v21 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
  }
  uint64_t v22 = 0;
  uint64_t v23 = (uint64_t)v20 + 2 * v21 - 4;
  do
  {
    int v24 = *(unsigned __int16 *)(v23 + v22 * 2);
    int v25 = (unsigned __int16)word_1D2ED0156[v22];
  }
  while (v25 == v24 && v22++ != 1);
  if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v27 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v27 = v43.__r_.__value_.__l.__size_;
  }
  if (v25 == v24)
  {
    std::basic_string<char16_t>::size_type v28 = v27 - 2;
LABEL_54:
    std::basic_string<char16_t>::resize(&v43, v28, 0);
    goto LABEL_55;
  }
  std::basic_string<char16_t>::size_type v28 = v27 - 2;
  if (v27 >= 2)
  {
    uint64_t v29 = 0;
    BOOL v30 = &v43;
    if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      BOOL v30 = (std::basic_string<char16_t> *)v43.__r_.__value_.__r.__words[0];
    }
    uint64_t v31 = (char *)v30 + 2 * v28;
    do
    {
      int v32 = *(unsigned __int16 *)&v31[v29 * 2];
      int v33 = (unsigned __int16)aS_3[v29];
    }
    while (v33 == v32 && v29++ != 1);
    if (v33 == v32) {
      goto LABEL_54;
    }
  }
LABEL_55:
  uint64_t v35 = (morphun::dictionary::DictionaryMetaData *)morphun::util::LocaleUtils::ENGLISH((morphun::util::LocaleUtils *)v12);
  if (morphun::dictionary::PhraseProperties::isStartsWithVowel(v35, (uint64_t)&v43)) {
    goto LABEL_59;
  }
  uint64_t v36 = &v43;
  if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v36 = (std::basic_string<char16_t> *)v43.__r_.__value_.__r.__words[0];
  }
  if (v36->__r_.__value_.__s.__data_[0] == 56)
  {
LABEL_59:
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v38, "a");
    uint64_t v37 = (*(uint64_t (**)(void *, uint64_t, void **))(*a1 + 32))(a1, a2, v38);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v38, "a");
    uint64_t v37 = (*(uint64_t (**)(void *, uint64_t, void **))(*a1 + 32))(a1, a2, v38);
  }
  uint64_t v4 = v37;
  if (v39 < 0) {
    operator delete(v38[0]);
  }
  char v19 = 1;
  if (v14 < 0) {
    goto LABEL_26;
  }
LABEL_64:
  if ((v19 & 1) == 0)
  {
LABEL_65:
    std::basic_string<char16_t> __p = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v4 = (*(uint64_t (**)(void *, uint64_t, void **))(*a1 + 32))(a1, a2, &__p);
    if (SHIBYTE(v42) < 0) {
      operator delete(__p);
    }
  }
LABEL_67:
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1D2D3ED90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (v26 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction::~EnGrammarSynthesizer_ArticleLookupFunction(morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction *this)
{
  *(void *)this = &off_1F2A0D1A0;
  morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::~EnGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 32));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A0D1A0;
  morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::~EnGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction *)((char *)this + 32));
}

void morphun::grammar::synthesis::EnGrammarSynthesizer_ArticleLookupFunction::EnGrammarSynthesizer_ArticleLookupFunction(void *a1, uint64_t a2, char *a3)
{
  *a1 = &unk_1F29FABD0;
  *(void *)morphun::dialog::DefaultArticleLookupFunction::DefaultArticleLookupFunction((morphun::dialog::DefaultArticleLookupFunction *)a1, (const morphun::dialog::SemanticFeatureModel *)&off_1F2A063B8, a2, a3 != 0, 1) = &off_1F2A0D1A0;
  if (a3)
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, a3);
    uint64_t v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(a2 + 8, (unsigned __int16 *)__p);
    if (a2 + 16 == v6) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 56);
    }
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  a1[3] = v7;
  morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction::EnGrammarSynthesizer_CountLookupFunction((morphun::grammar::synthesis::EnGrammarSynthesizer_CountLookupFunction *)(a1 + 4));
}

void morphun::Token_Tail::newInstance(morphun::Token_Tail *this)
{
}

void sub_1D2D3F00C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10B3C405B5873CALL);
  _Unwind_Resume(a1);
}

morphun::Token *morphun::Token_Tail::Token_Tail(morphun::Token_Tail *this, int a2)
{
  *(void *)this = &unk_1F29F3EF8;
  uint64_t result = morphun::Token_Delim::Token_Delim(this, (uint64_t *)&off_1F2A04EA8, a2, a2, &word_1D2ED0AEE, 0, &word_1D2ED0AEE, 0);
  *(void *)uint64_t result = &off_1F2A08398;
  return result;
}

void morphun::Token_Tail::~Token_Tail(void **this)
{
  morphun::Token::~Token(this, (void **)&off_1F2A04EB0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::Token::~Token(this, (void **)&off_1F2A04EB0);
}

morphun::Token *morphun::Token_Tail::Token_Tail(morphun::Token_Tail *this, uint64_t *a2, int a3)
{
  uint64_t result = morphun::Token_Delim::Token_Delim(this, a2 + 1, a3, a3, &word_1D2ED0AEE, 0, &word_1D2ED0AEE, 0);
  uint64_t v5 = *a2;
  *(void *)uint64_t result = *a2;
  *(void *)((char *)result + *(void *)(v5 - 64)) = a2[7];
  *(void *)((char *)result + *(void *)(*(void *)result - 40)) = a2[8];
  return result;
}

uint64_t msfc_isExists(uint64_t a1)
{
  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1);
}

void sub_1D2D3F284(_Unwind_Exception *a1, int a2)
{
  __cxa_free_exception(v3);
  if (a2 == 1)
  {
    uint64_t v6 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v6, v2, v7);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3F240);
  }
  _Unwind_Resume(a1);
}

CFStringRef msfc_createConstraintByNameCopy(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::SemanticFeatureConceptBase const>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  CFStringRef v5 = (CFStringRef)v4;
  if (!v4)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v6 = std::__tree<std::basic_string<char16_t>>::find<std::basic_string<char16_t>>(v4 + 8, (unsigned __int16 *)&__p);
  if (&v5->data == (char **)v6 || !*(void *)(v6 + 56))
  {
    uint64_t v12 = __cxa_allocate_exception(0x38uLL);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v14, (const void **)&__p.__r_.__value_.__l.__data_, L" is not a valid feature name for the SemanticFeatureModel");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)v12, &v14);
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  uint64_t v8 = v7;
  if (v7)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      unint64_t v10 = *(const UniChar **)v7;
      CFIndex v9 = *(void *)(v7 + 8);
    }
    else
    {
      CFIndex v9 = *(unsigned __int8 *)(v7 + 23);
      unint64_t v10 = (const UniChar *)v7;
    }
    CFStringRef v5 = CFStringCreateWithCharacters(0, v10, v9);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (!v8) {
      return 0;
    }
  }
  else if (!v8)
  {
    return 0;
  }
  return v5;
}

void sub_1D2D3F480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    uint64_t v23 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v23, v20, v24);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3F3D4);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D3F574(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void msfc_putConstraintByName(uint64_t a1, const __CFString *a2, const __CFString *a3)
{
  npc<morphun::dialog::SemanticFeatureConceptBase>(a1);
  morphun::util::CFUtils::to_u16string(&v7, a2);
  morphun::util::CFUtils::to_u16string(&__p, a3);
  (*(void (**)(uint64_t, std::basic_string<char16_t> *, std::basic_string<char16_t> *))(*(void *)a1 + 72))(a1, &v7, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D3F630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a2 == 1)
  {
    uint64_t v23 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v23, v20, v24);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3F61CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D3F6F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void msfc_clearConstraintByName(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::SemanticFeatureConceptBase>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  (*(void (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 88))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D3F790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    std::basic_string<char16_t>::value_type v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3F77CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t msfc_reset(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::SemanticFeatureConceptBase>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 96))(v1);
}

uint64_t msfc_createFeatureValueByNameCopy(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::SemanticFeatureConceptBase const>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 112))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1D2D3F90C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    std::basic_string<char16_t>::value_type v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3F8F4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t msfc_toSpeakableStringCopy(char *a1)
{
  if (!a1)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return (*(uint64_t (**)(char *))(*(void *)&a1[*(void *)(*(void *)a1 - 56)] + 24))(&a1[*(void *)(*(void *)a1 - 56)]);
}

void sub_1D2D3FA08(_Unwind_Exception *a1, int a2)
{
  __cxa_free_exception(v3);
  if (a2 == 1)
  {
    uint64_t v6 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v6, v2, v7);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3F9C4);
  }
  _Unwind_Resume(a1);
}

uint64_t msfc_toSpeakableStringWithDependencyCopy(char *lpsrc, uint64_t a2)
{
  if (lpsrc
  {
    if (!v4)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
    CFStringRef v5 = v4;
    npc<morphun::dialog::SemanticFeatureConceptBase const>(a2);
    return (*(uint64_t (**)(void *, uint64_t))(*(void *)v5 + 136))(v5, a2);
  }
  else
  {
    npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)lpsrc);
    return (*(uint64_t (**)(char *))(*(void *)&lpsrc[*(void *)(*(void *)lpsrc - 56)] + 24))(&lpsrc[*(void *)(*(void *)lpsrc - 56)]);
  }
}

void sub_1D2D3FBB4(_Unwind_Exception *a1, int a2)
{
  __cxa_free_exception(v3);
  if (a2 == 1)
  {
    uint64_t v6 = (const void **)__cxa_begin_catch(a1);
    morphun::util::CFUtils::convert(v6, v2, v7);
    __cxa_end_catch();
    JUMPOUT(0x1D2D3FB70);
  }
  _Unwind_Resume(a1);
}

uint64_t msfc_clone(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::SemanticFeatureConceptBase const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 128))(v1);
}

uint64_t msfc_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

void morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::determine(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  morphun::dialog::DictionaryLookupFunction::determine((uint64_t)a1, a2, (void *)a3);
  uint64_t v6 = *(unsigned __int8 *)(a3 + 23);
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *(void *)(a3 + 8);
  }
  if (!v6)
  {
    uint64_t v14 = 0;
    int v7 = *(char *)(a2 + 23);
    uint64_t v8 = v7 >= 0 ? (const UChar *)a2 : *(const UChar **)a2;
    uint64_t v9 = v7 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
    CombinedBinaryType = (std::basic_string<char16_t> *)morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[26], (uint64_t)&v14, v8, v9);
    if (CombinedBinaryType)
    {
      uint64_t v11 = v14;
      if ((a1[27] & v14) != 0)
      {
        uint64_t v12 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_COMMON((morphun::grammar::synthesis::GrammemeConstants *)CombinedBinaryType);
        CombinedBinaryType = std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v12);
        uint64_t v11 = v14;
      }
      if ((a1[28] & v11) != 0)
      {
        uint64_t v13 = (const std::basic_string<char16_t> *)morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)CombinedBinaryType);
        std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)a3, v13);
      }
    }
  }
}

void sub_1D2D3FD80(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::~SvGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction *this)
{
  morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::~SvGrammarSynthesizer_GenderLookupFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  uint64_t v3;

  *(void *)this = &unk_1F29FA878;
  uint64_t v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    *((void *)this + 23) = v2;
    operator delete(v2);
  }
  int v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *((void *)this + 1) = &unk_1F2A0FEF8;
}

void morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction::SvGrammarSynthesizer_GenderLookupFunction(morphun::grammar::synthesis::SvGrammarSynthesizer_GenderLookupFunction *this)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F29FA820;
  uint64_t v2 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::SWEDISH(this);
  uint64_t v3 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER(v2);
  if (*(char *)(v3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v9, *(const std::basic_string<char16_t>::value_type **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    v9.__r_.__value_.__r.__words[2] = *(void *)(v3 + 16);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
  }
  uint64_t v5 = morphun::grammar::synthesis::GrammemeConstants::GENDER_COMMON((morphun::grammar::synthesis::GrammemeConstants *)v3);
  if (*(char *)(v5 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v10, *(const std::basic_string<char16_t>::value_type **)v5, *(void *)(v5 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    v10.__r_.__value_.__r.__words[2] = *(void *)(v5 + 16);
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v6;
  }
  memset(&v11, 0, sizeof(v11));
  int v7 = &v11;
  char v8 = 0;
  v11.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)operator new(0x30uLL);
  v11.__r_.__value_.__l.__size_ = v11.__r_.__value_.__r.__words[0];
  v11.__r_.__value_.__r.__words[2] = v11.__r_.__value_.__r.__words[0] + 48;
  v11.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v11.__r_.__value_.__r.__words[2], (long long *)&v9, (long long *)&v11, (std::basic_string<char16_t> *)v11.__r_.__value_.__l.__data_);
  morphun::dialog::DictionaryLookupFunction::DictionaryLookupFunction((uint64_t *)this, (uint64_t *)&off_1F2A062A0, v2);
}

void sub_1D2D40198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0) {
    operator delete(__p);
  }
  morphun::dialog::DictionaryLookupFunction::~DictionaryLookupFunction(v25, (uint64_t *)&off_1F2A062A0);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_AsPrepositionLookupFunction::getArticle(uint64_t a1, uint64_t a2)
{
  v11[0] = 0;
  v11[1] = 0;
  uint64_t v12 = 0;
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v3 = (morphun::lang::StringFilterUtil *)morphun::util::StringUtils::trim(v2, __p);
  unint64_t v4 = v10;
  int v5 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    unint64_t v4 = (unint64_t)__p[1];
  }
  if (v4)
  {
    long long v6 = (void *)morphun::lang::StringFilterUtil::ARABIC_SCRIPT(v3);
    int v7 = (void **)__p[0];
    if (v5 >= 0) {
      int v7 = __p;
    }
    if (MEMORY[0x1D942C150](*v6, *(unsigned __int16 *)v7))
    {
      uint64_t v8 = 1;
      HIBYTE(v12) = 1;
      LOWORD(v11[0]) = 1603;
    }
    else
    {
      uint64_t v8 = 3;
      HIBYTE(v12) = 3;
      LODWORD(v11[0]) = 104859203;
      WORD2(v11[0]) = 160;
    }
    *(_WORD *)((unint64_t)v11 | (2 * v8)) = 0;
    operator new();
  }
  operator new();
}

void sub_1D2D403EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p)
{
  MEMORY[0x1D942B8B0](v16, 0x10B3C40F7FF9C27);
  if (v17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::ArGrammarSynthesizer_AsPrepositionLookupFunction::~ArGrammarSynthesizer_AsPrepositionLookupFunction(morphun::grammar::synthesis::ArGrammarSynthesizer_AsPrepositionLookupFunction *this)
{
}

uint64_t morphun::analysis::Tokenizer::close(uint64_t this)
{
  *(void *)(this + 96) = 0;
  *(void *)(this + 104) = 0;
  return this;
}

uint64_t morphun::analysis::Tokenizer::reset(uint64_t this)
{
  *(void *)(this + 96) = *(void *)(this + 104);
  *(void *)(this + 104) = 0;
  return this;
}

morphun::analysis::TokenStream *morphun::analysis::Tokenizer::Tokenizer(morphun::analysis::Tokenizer *this, uint64_t *a2)
{
  uint64_t result = morphun::analysis::TokenStream::TokenStream(this, a2 + 1);
  uint64_t v4 = *a2;
  *(void *)uint64_t result = *a2;
  *(void *)((char *)result + *(void *)(v4 - 40)) = a2[5];
  *((void *)result + 12) = 0;
  *((void *)result + 13) = 0;
  return result;
}

morphun::analysis::util::AttributeSource *morphun::analysis::Tokenizer::Tokenizer(morphun::analysis::Tokenizer *this, morphun::analysis::util::AttributeFactory *a2, uint64_t a3)
{
  uint64_t result = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::util::AttributeFactory *)((char *)a2 + 16), a3);
  uint64_t v5 = *((void *)a2 + 1);
  *(void *)uint64_t result = v5;
  *(void *)((char *)result + *(void *)(v5 - 40)) = *((void *)a2 + 4);
  uint64_t v6 = *(void *)a2;
  *(void *)uint64_t result = *(void *)a2;
  *(void *)((char *)result + *(void *)(v6 - 40)) = *((void *)a2 + 5);
  *((void *)result + 12) = 0;
  *((void *)result + 13) = 0;
  return result;
}

uint64_t morphun::analysis::Tokenizer::correctOffset(morphun::analysis::Tokenizer *this, uint64_t a2)
{
  return a2;
}

uint64_t morphun::analysis::Tokenizer::setReader(uint64_t this, UText *a2)
{
  if (!a2)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"input must not be null");
    morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &__dst);
  }
  if (*(void *)(this + 96))
  {
    uint64_t v3 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "T");
    morphun::exception::IllegalStateException::IllegalStateException((uint64_t)v3, &__dst);
  }
  *(void *)(this + 104) = a2;
  return this;
}

void sub_1D2D40734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v16) {
    __cxa_free_exception(v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **com::apple::siri::tokenizer::data::config_it::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E696DFA8;
  v3[1] = unk_1E696DFB8;
  void v3[2] = xmmword_1E696DFC8;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

void morphun::dialog::language::ViCommonConceptFactory::~ViCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05CE8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05CE8);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE(void)::POS_ADJECTIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D408B8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_1D2D40940(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN(void)::POS_NOUN_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D409E4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::POS_ADPOSITION(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::POS_ADPOSITION(void)::POS_ADPOSITION_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D40AAC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::POS_VERB(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB(void)::POS_VERB_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D40B74(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::POS_DETERMINER(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::POS_DETERMINER(void)::POS_DETERMINER_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D40C3C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN(void)::POS_PROPER_NOUN_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D40D04(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(void)::CASE_NOMINATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D40DCC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_ABLATIVE(void)::CASE_ABLATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D40E94(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE(void)::CASE_ACCUSATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D40F5C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_ADESSIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_ADESSIVE(void)::CASE_ADESSIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41024(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_ALLATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_ALLATIVE(void)::CASE_ALLATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D410EC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_DATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_DATIVE(void)::CASE_DATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D411B4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_ELATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_ELATIVE(void)::CASE_ELATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D4127C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_ESSIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_ESSIVE(void)::CASE_ESSIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41344(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(void)::CASE_GENITIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D4140C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_ILLATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_ILLATIVE(void)::CASE_ILLATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D414D4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_INESSIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_INESSIVE(void)::CASE_INESSIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D4159C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL(void)::CASE_INSTRUMENTAL_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41664(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_LOCATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_LOCATIVE(void)::CASE_LOCATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D4172C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_OBLIQUE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_OBLIQUE(void)::CASE_OBLIQUE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D417F4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_PARTITIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_PARTITIVE(void)::CASE_PARTITIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D418BC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL(void)::CASE_PREPOSITIONAL_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41984(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CASE_TRANSLATIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CASE_TRANSLATIVE(void)::CASE_TRANSLATIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41A4C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(void)::NUMBER_SINGULAR_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41B14(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::NUMBER_DUAL(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_DUAL(void)::NUMBER_DUAL_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41BDC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL(void)::NUMBER_PLURAL_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41CA4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(void)::GENDER_MASCULINE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41D6C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE(void)::GENDER_FEMININE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41E34(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER(void)::GENDER_NEUTER_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41EFC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::GENDER_COMMON(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::GENDER_COMMON(void)::GENDER_COMMON_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D41FC4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_INDEFINITE(void)::DEFINITENESS_INDEFINITE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D4208C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE(void)::DEFINITENESS_DEFINITE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D42154(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_CONSTRUCT(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_CONSTRUCT(void)::DEFINITENESS_CONSTRUCT_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D4221C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::PERSON_FIRST(void)::PERSON_FIRST_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D422E4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::PERSON_SECOND(void)::PERSON_SECOND_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D423AC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::PERSON_THIRD(void)::PERSON_THIRD_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D42474(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::ANIMACY_ANIMATE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_ANIMATE(void)::ANIMACY_ANIMATE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D4253C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE(void)::ANIMACY_INANIMATE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D42604(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::CLUSIVITY_EXCLUSIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::CLUSIVITY_EXCLUSIVE(void)::CLUSIVITY_EXCLUSIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D426CC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::GrammemeConstants::VERBTYPE_INFINITIVE(morphun::grammar::synthesis::GrammemeConstants *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::VERBTYPE_INFINITIVE(void)::VERBTYPE_INFINITIVE_;

  return npc<std::basic_string<char16_t>>(v1);
}

void sub_1D2D42794(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void non-virtual thunk to'morphun::analysis::pt::BrazilianStemFilter::~BrazilianStemFilter(morphun::analysis::pt::BrazilianStemFilter *this)
{
  uint64_t v1 = (morphun::analysis::pt::BrazilianStemFilter *)((char *)this - 104);
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(this, (uint64_t *)&off_1F2A076C8);
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07698);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter *v1;
  uint64_t vars8;

  uint64_t v1 = (morphun::analysis::pt::BrazilianStemFilter *)((char *)this - 104);
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(this, (uint64_t *)&off_1F2A076C8);

  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07698);
}

void *morphun::analysis::pt::BrazilianStemFilter::reset(morphun::analysis::pt::BrazilianStemFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 55) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 56) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((void *)this + 57) = result;
  return result;
}

uint64_t morphun::analysis::pt::BrazilianStemFilter::incrementToken(morphun::analysis::pt::BrazilianStemFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2) {
    goto LABEL_118;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (!v3) {
    return v3;
  }
  uint64_t v4 = *((void *)this + 55);
  if (v4)
  {
    if ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4)) {
      return v3;
    }
  }
  uint64_t v5 = (void *)*((void *)this + 54);
  if (!v5)
  {
LABEL_118:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v6 = (void *)((char *)v5 + *(void *)(*v5 - 96));
  if (*((char *)v6 + 23) < 0)
  {
    std::basic_string<char16_t>::size_type v7 = v6[1];
    if (v7 >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = (void *)*v6;
  }
  else
  {
    std::basic_string<char16_t>::size_type v7 = *((unsigned __int8 *)v6 + 23);
  }
  if (v7 >= 0xB)
  {
    uint64_t v9 = (v7 & 0x7FFFFFFFFFFFFFFCLL) + 4;
    if ((v7 | 3) != 0xB) {
      uint64_t v9 = v7 | 3;
    }
    p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v9 + 1);
    __dst.__r_.__value_.__l.__size_ = v7;
    __dst.__r_.__value_.__r.__words[2] = v10 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
    goto LABEL_16;
  }
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v7;
  p_dst = &__dst;
  if (v7) {
LABEL_16:
  }
    memmove(p_dst, v6, 2 * v7);
  p_dst->__r_.__value_.__s.__data_[v7] = 0;
  uint64_t v67 = 0;
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t> v11 = &__dst;
  }
  else {
    std::basic_string<char16_t> v11 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
  }
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type size = __dst.__r_.__value_.__l.__size_;
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v67, (const UChar *)v11, size);
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v13 = &__dst;
  }
  else {
    uint64_t v13 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
  }
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v14 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v14 = __dst.__r_.__value_.__l.__size_;
  }
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::getLemma(&__str, (uint64_t)this + 104, (unsigned __int16 *)v13, v14, v67);
  char v16 = (void *)*((void *)this + 54);
  uint64_t v17 = *(void *)(*v16 - 96);
  if (!v66)
  {
    int v18 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    char v19 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v18 = __dst.__r_.__value_.__r.__words[1];
    }
    if (v18 >= 4) {
      int v20 = 4;
    }
    else {
      int v20 = v18;
    }
    if (v20 < 1)
    {
LABEL_81:
      if ((v19 & 0x80) == 0)
      {
        *(_OWORD *)&v64.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
        std::basic_string<char16_t>::size_type v47 = __dst.__r_.__value_.__r.__words[2];
        goto LABEL_89;
      }
      std::basic_string<char16_t>::__init_copy_ctor_external(&v64, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
LABEL_93:
      uint64_t v51 = (void **)((char *)v16 + v17);
      if (*((char *)v51 + 23) < 0) {
        operator delete(*v51);
      }
      *(std::basic_string<char16_t> *)uint64_t v51 = v64;
      goto LABEL_96;
    }
    uint64_t v60 = *(void *)(*v16 - 96);
    std::basic_string<char16_t>::size_type v21 = v18;
    if (v18 >= 4) {
      uint64_t v22 = 4;
    }
    else {
      uint64_t v22 = v18;
    }
    while (1)
    {
      std::basic_string<char16_t>::size_type v23 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v23 = __dst.__r_.__value_.__l.__size_;
      }
      BOOL v24 = v23 >= v21 - v22;
      std::basic_string<char16_t>::size_type v25 = v23 - (v21 - v22);
      if (!v24) {
        std::__throw_out_of_range[abi:ne180100]("string_view::substr");
      }
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v26 = &__dst;
      }
      else {
        char v26 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
      }
      if (v25 >= v21) {
        std::basic_string<char16_t>::size_type v27 = v21;
      }
      else {
        std::basic_string<char16_t>::size_type v27 = v25;
      }
      uint64_t v28 = morphun::analysis::pt::inflectorMap(v15);
      uint64_t v31 = *(morphun::analysis::pt **)(v28 + 8);
      uint64_t v29 = (morphun::analysis::pt *)(v28 + 8);
      BOOL v30 = v31;
      if (v31)
      {
        int v32 = (std::basic_string<char16_t> *)((char *)v26 + 2 * (v21 - v22));
        int v33 = v29;
        do
        {
          std::basic_string<char16_t>::size_type v34 = *((void *)v30 + 5);
          if (v27 >= v34) {
            std::basic_string<char16_t>::size_type v35 = *((void *)v30 + 5);
          }
          else {
            std::basic_string<char16_t>::size_type v35 = v27;
          }
          if (v35)
          {
            uint64_t v36 = (unsigned __int16 *)*((void *)v30 + 4);
            uint64_t v37 = (std::basic_string<char16_t> *)((char *)v26 + 2 * (v21 - v22));
            while (1)
            {
              unsigned int v38 = *v36;
              unsigned int v39 = (unsigned __int16)v37->__r_.__value_.__s.__data_[0];
              if (v38 < v39)
              {
                BOOL v30 = (morphun::analysis::pt *)((char *)v30 + 8);
                goto LABEL_65;
              }
              if (v39 < v38) {
                break;
              }
              ++v36;
              uint64_t v37 = (std::basic_string<char16_t> *)((char *)v37 + 2);
              if (!--v35) {
                goto LABEL_60;
              }
            }
            int v33 = v30;
          }
          else
          {
LABEL_60:
            if (v34 < v27) {
              BOOL v30 = (morphun::analysis::pt *)((char *)v30 + 8);
            }
            else {
              int v33 = v30;
            }
          }
LABEL_65:
          BOOL v30 = *(morphun::analysis::pt **)v30;
        }
        while (v30);
        if (v29 != v33)
        {
          std::basic_string<char16_t>::size_type v40 = *((void *)v33 + 5);
          if (v40 >= v27) {
            std::basic_string<char16_t>::size_type v41 = v27;
          }
          else {
            std::basic_string<char16_t>::size_type v41 = *((void *)v33 + 5);
          }
          if (v41)
          {
            uint64_t v42 = (unsigned __int16 *)*((void *)v33 + 4);
            while (1)
            {
              unsigned int v43 = (unsigned __int16)v32->__r_.__value_.__s.__data_[0];
              unsigned int v44 = *v42;
              if (v43 < v44) {
                break;
              }
              if (v44 < v43) {
                goto LABEL_77;
              }
              int v32 = (std::basic_string<char16_t> *)((char *)v32 + 2);
              ++v42;
              if (!--v41) {
                goto LABEL_75;
              }
            }
          }
          else
          {
LABEL_75:
            if (v27 >= v40) {
              goto LABEL_77;
            }
          }
        }
      }
      int v33 = v29;
LABEL_77:
      uint64_t v15 = (morphun::analysis::pt *)morphun::analysis::pt::inflectorMap(v29);
      if ((morphun::analysis::pt *)((char *)v15 + 8) != v33)
      {
        std::basic_string<char16_t>::size_type v48 = *((int *)v33 + 12);
        if (!v48) {
          std::basic_string<char16_t>::size_type v48 = v27;
        }
        std::basic_string<char16_t>::size_type v49 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v49 = __dst.__r_.__value_.__l.__size_;
        }
        uint64_t v50 = std::basic_string<char16_t>::basic_string(&v69, &__dst, 0, v49 - v48, v45);
        uint64_t v17 = v60;
        std::basic_string<char16_t>::append(v50, *((const std::basic_string<char16_t>::value_type **)v33 + 7), *((void *)v33 + 8));
        if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external(&v64, v69.__r_.__value_.__l.__data_, v69.__r_.__value_.__l.__size_);
          if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v69.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          *(_OWORD *)&v64.__r_.__value_.__l.__data_ = *(_OWORD *)&v69.__r_.__value_.__l.__data_;
          std::basic_string<char16_t>::size_type v47 = v69.__r_.__value_.__r.__words[2];
LABEL_89:
          v64.__r_.__value_.__r.__words[2] = v47;
        }
        goto LABEL_93;
      }
      if (v22-- <= 1)
      {
        char v19 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
        uint64_t v17 = v60;
        goto LABEL_81;
      }
    }
  }
  std::basic_string<char16_t>::operator=((std::basic_string<char16_t> *)((char *)v16 + v17), &__str);
LABEL_96:
  if (*((void *)this + 56))
  {
    v69.__r_.__value_.__r.__words[0] = 0;
    uint64_t v52 = (const UChar *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96));
    if (*((char *)v52 + 23) < 0)
    {
      uint64_t v52 = *(const UChar **)v52;
      uint64_t v53 = *(void *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96) + 8);
    }
    else
    {
      uint64_t v53 = *((unsigned __int8 *)v52 + 23);
    }
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v69, v52, v53))
    {
      uint64_t v54 = *((void *)this + 56);
      if (!v54)
      {
        long long v59 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v59);
      }
      (*(void (**)(uint64_t, std::basic_string<char16_t>::size_type))(*(void *)v54 + 64))(v54, v69.__r_.__value_.__r.__words[0]);
    }
  }
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v55 = &__dst;
  }
  else {
    unint64_t v55 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
  }
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::basic_string<char16_t>::size_type v56 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  }
  else {
    std::basic_string<char16_t>::size_type v56 = __dst.__r_.__value_.__l.__size_;
  }
  morphun::analysis::MorphologicalAnalyzerUtil::analyze_word((uint64_t)&__p, (uint64_t)v55, v56, v67, *((void *)this + 57), (uint64_t *)this + 13, 0);
  if (v63 && v62 < 0) {
    operator delete(__p);
  }
  if (v66 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_1D2D42E58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (*(char *)(v32 - 89) < 0) {
    operator delete(*(void **)(v32 - 112));
  }
  if (a25 && a24 < 0) {
    operator delete(__p);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::analysis::pt::inflectorMap(morphun::analysis::pt *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  {
    operator new();
  }
  uint64_t result = morphun::analysis::pt::inflectorMap(void)::inflectorMap_;
  if (!morphun::analysis::pt::inflectorMap(void)::inflectorMap_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D43150(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

uint64_t **std::map<std::u16string_view,morphun::analysis::pt::BrazilianStemFilter_InflectionRule>::map[abi:ne180100](uint64_t **a1, unsigned __int16 **a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    uint64_t v5 = a2;
    uint64_t v6 = 0;
    std::basic_string<char16_t>::size_type v7 = &a2[5 * a3];
    uint64_t v8 = a1 + 1;
    while (1)
    {
      uint64_t v9 = v4;
      if (v8 != (uint64_t **)v4)
      {
        uint64_t v10 = v6;
        std::basic_string<char16_t> v11 = v4;
        if (v6)
        {
          do
          {
            uint64_t v9 = v10;
            uint64_t v10 = (uint64_t *)v10[1];
          }
          while (v10);
        }
        else
        {
          do
          {
            uint64_t v9 = (uint64_t *)v11[2];
            BOOL v12 = *v9 == (void)v11;
            std::basic_string<char16_t> v11 = v9;
          }
          while (v12);
        }
        unint64_t v13 = v9[5];
        std::basic_string<char16_t>::size_type v14 = v5[1];
        if ((unint64_t)v14 >= v13) {
          uint64_t v15 = (unsigned __int16 *)v9[5];
        }
        else {
          uint64_t v15 = v5[1];
        }
        if (v15)
        {
          char v16 = *v5;
          uint64_t v17 = (unsigned __int16 *)v9[4];
          while (1)
          {
            unsigned int v18 = *v17;
            unsigned int v19 = *v16;
            if (v18 < v19) {
              break;
            }
            if (v19 < v18) {
              goto LABEL_29;
            }
            ++v17;
            ++v16;
            uint64_t v15 = (unsigned __int16 *)((char *)v15 - 1);
            if (!v15) {
              goto LABEL_16;
            }
          }
        }
        else
        {
LABEL_16:
          if (v13 >= (unint64_t)v14)
          {
LABEL_29:
            int v20 = v4;
            std::basic_string<char16_t>::size_type v21 = v4;
            if (!v6) {
              goto LABEL_23;
            }
            std::basic_string<char16_t>::size_type v21 = v4;
            while (2)
            {
              while (1)
              {
                int v20 = v6;
                char v26 = (unsigned __int16 *)v6[5];
                std::basic_string<char16_t>::size_type v27 = v26 >= v14 ? v5[1] : v26;
                if (v27) {
                  break;
                }
LABEL_39:
                if (v14 < v26) {
                  goto LABEL_40;
                }
LABEL_42:
                if (v27)
                {
                  int v33 = (unsigned __int16 *)v20[4];
                  std::basic_string<char16_t>::size_type v34 = *v5;
                  while (1)
                  {
                    unsigned int v35 = *v33;
                    unsigned int v36 = *v34;
                    if (v35 < v36) {
                      break;
                    }
                    if (v36 < v35) {
                      goto LABEL_23;
                    }
                    ++v33;
                    ++v34;
                    std::basic_string<char16_t>::size_type v27 = (unsigned __int16 *)((char *)v27 - 1);
                    if (!v27) {
                      goto LABEL_47;
                    }
                  }
                }
                else
                {
LABEL_47:
                  if (v26 >= v14) {
                    goto LABEL_23;
                  }
                }
                std::basic_string<char16_t>::size_type v21 = v20 + 1;
                uint64_t v6 = (uint64_t *)v20[1];
                if (!v6) {
                  goto LABEL_24;
                }
              }
              uint64_t v28 = (unsigned __int16 *)v20[4];
              uint64_t v29 = v27;
              BOOL v30 = *v5;
              while (1)
              {
                unsigned int v31 = *v30;
                unsigned int v32 = *v28;
                if (v31 < v32) {
                  break;
                }
                if (v32 < v31) {
                  goto LABEL_42;
                }
                ++v30;
                ++v28;
                uint64_t v29 = (unsigned __int16 *)((char *)v29 - 1);
                if (!v29) {
                  goto LABEL_39;
                }
              }
LABEL_40:
              uint64_t v6 = (uint64_t *)*v20;
              std::basic_string<char16_t>::size_type v21 = v20;
              if (!*v20) {
                goto LABEL_24;
              }
              continue;
            }
          }
        }
      }
      if (v6) {
        int v20 = v9;
      }
      else {
        int v20 = v4;
      }
      if (v6) {
        std::basic_string<char16_t>::size_type v21 = v9 + 1;
      }
      else {
        std::basic_string<char16_t>::size_type v21 = v4;
      }
LABEL_23:
      if (!*v21)
      {
LABEL_24:
        uint64_t v22 = operator new(0x48uLL);
        long long v23 = *(_OWORD *)v5;
        long long v24 = *((_OWORD *)v5 + 1);
        v22[8] = v5[4];
        *((_OWORD *)v22 + 2) = v23;
        *((_OWORD *)v22 + 3) = v24;
        *uint64_t v22 = 0;
        v22[1] = 0;
        v22[2] = v20;
        *std::basic_string<char16_t>::size_type v21 = (uint64_t)v22;
        std::basic_string<char16_t>::size_type v25 = (uint64_t *)**a1;
        if (v25)
        {
          *a1 = v25;
          uint64_t v22 = (void *)*v21;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v22);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
      }
      v5 += 5;
      if (v5 == v7) {
        return a1;
      }
      uint64_t v8 = (uint64_t **)*a1;
      uint64_t v6 = a1[1];
    }
  }
  return a1;
}

void sub_1D2D433C0(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::pt::BrazilianStemFilter::~BrazilianStemFilter(morphun::analysis::pt::BrazilianStemFilter *this)
{
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer((morphun::analysis::pt::BrazilianStemFilter *)((char *)this + 104), (uint64_t *)&off_1F2A076C8);
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07698);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer((morphun::analysis::pt::BrazilianStemFilter *)((char *)this + 104), (uint64_t *)&off_1F2A076C8);

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07698);
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::getConstraintMap(morphun::dialog::SemanticFeatureModel_DisplayValue *this)
{
  return (uint64_t)this + 32;
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::getFeatureValue(morphun::dialog::SemanticFeatureModel_DisplayValue *this, const morphun::dialog::SemanticFeature *a2)
{
  uint64_t v3 = (morphun::dialog::SemanticFeatureModel_DisplayValue *)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::find<morphun::dialog::SemanticFeature>((uint64_t)this + 32, (uint64_t)a2);
  if ((morphun::dialog::SemanticFeatureModel_DisplayValue *)((char *)this + 40) == v3) {
    return 0;
  }
  else {
    return (uint64_t)v3 + 104;
  }
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::getDisplayString(morphun::dialog::SemanticFeatureModel_DisplayValue *this)
{
  return (uint64_t)this + 8;
}

void morphun::dialog::SemanticFeatureModel_DisplayValue::~SemanticFeatureModel_DisplayValue(morphun::dialog::SemanticFeatureModel_DisplayValue *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::SemanticFeatureModel_DisplayValue::~SemanticFeatureModel_DisplayValue(morphun::dialog::SemanticFeatureModel_DisplayValue *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = a2[1];
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*((void ***)this + 5));
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(uint64_t a1, uint64_t *a2, long long *a3, uint64_t a4)
{
  uint64_t v6 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v6 - 40)) = a2[1];
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v7;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)(a1 + 32), a4);
  return a1;
}

void sub_1D2D436C0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(uint64_t a1, long long *a2, uint64_t a3)
{
  *(void *)a1 = &off_1F2A09998;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v5;
  }
  std::map<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>::map[abi:ne180100]((void *)(a1 + 32), a3);
  return a1;
}

void sub_1D2D43764(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(uint64_t a1, uint64_t *a2, long long *a3)
{
  v6[0] = 0;
  v6[1] = 0;
  long long v5 = v6;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(a1, a2, a3, (uint64_t)&v5);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v6[0]);
  return a1;
}

void sub_1D2D437CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11)
{
}

uint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(uint64_t a1, long long *a2)
{
  v5[0] = 0;
  v5[1] = 0;
  uint64_t v4 = v5;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(a1, a2, (uint64_t)&v4);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v5[0]);
  return a1;
}

void sub_1D2D4382C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11)
{
}

uint64_t **morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(uint64_t **this, const morphun::dialog::SpeakableString *a2, const morphun::dialog::SemanticFeature *a3, const morphun::dialog::SemanticFeature *a4)
{
  uint64_t v8 = (long long *)(*(uint64_t (**)(const morphun::dialog::SemanticFeature *))(*(void *)a3 + 32))(a3);
  v12[0] = 0;
  v12[1] = 0;
  std::basic_string<char16_t> v11 = v12;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)this, (uint64_t *)a2, v8, (uint64_t)&v11);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v12[0]);
  if (((*(uint64_t (**)(const morphun::dialog::SemanticFeature *))(*(void *)a3 + 48))(a3) & 1) == 0)
  {
    uint64_t v9 = (long long *)(*(uint64_t (**)(const morphun::dialog::SemanticFeature *))(*(void *)a3 + 40))(a3);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,morphun::dialog::SemanticFeature const&,std::basic_string<char16_t> const&>(this + 4, (uint64_t)a4, a4, v9);
  }
  return this;
}

void sub_1D2D4393C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11)
{
}

uint64_t **morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue(uint64_t **this, const morphun::dialog::SpeakableString *a2, const morphun::dialog::SemanticFeature *a3)
{
  uint64_t v6 = (long long *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
  v10[0] = 0;
  v10[1] = 0;
  uint64_t v9 = v10;
  morphun::dialog::SemanticFeatureModel_DisplayValue::SemanticFeatureModel_DisplayValue((uint64_t)this, v6, (uint64_t)&v9);
  std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(v10[0]);
  if (((*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 48))(a2) & 1) == 0)
  {
    long long v7 = (long long *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 40))(a2);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_unique_key_args<morphun::dialog::SemanticFeature,morphun::dialog::SemanticFeature const&,std::basic_string<char16_t> const&>(this + 4, (uint64_t)a3, a3, v7);
  }
  return this;
}

void sub_1D2D43A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11)
{
}

void virtual thunk to'morphun::dialog::SemanticFeatureModel_DisplayValue::~SemanticFeatureModel_DisplayValue(morphun::dialog::SemanticFeatureModel_DisplayValue *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

BOOL morphun::dialog::SemanticFeatureModel_DisplayValue::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 31);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t v4 = *(unsigned __int8 *)(a2 + 31);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if (v2 != v4) {
    return 0;
  }
  if (v2)
  {
    if (v5 >= 0) {
      uint64_t v6 = (unsigned __int16 *)(a2 + 8);
    }
    else {
      uint64_t v6 = *(unsigned __int16 **)(a2 + 8);
    }
    if (v3 >= 0) {
      long long v7 = (unsigned __int16 *)(a1 + 8);
    }
    else {
      long long v7 = *(unsigned __int16 **)(a1 + 8);
    }
    while (*v6 == *v7)
    {
      ++v7;
      ++v6;
      if (!--v2) {
        goto LABEL_15;
      }
    }
    return 0;
  }
LABEL_15:
  if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
    return 0;
  }
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = (void *)(a1 + 40);
  if (v8 == (void *)(a1 + 40)) {
    return 1;
  }
  uint64_t v10 = *(void **)(a2 + 32);
  do
  {
    BOOL result = std::__equal_to::operator()[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>>((uint64_t)(v8 + 4), (uint64_t)(v10 + 4));
    if (!result) {
      break;
    }
    BOOL v12 = (void *)v8[1];
    unint64_t v13 = v8;
    if (v12)
    {
      do
      {
        uint64_t v8 = v12;
        BOOL v12 = (void *)*v12;
      }
      while (v12);
    }
    else
    {
      do
      {
        uint64_t v8 = (void *)v13[2];
        BOOL v14 = *v8 == (void)v13;
        unint64_t v13 = v8;
      }
      while (!v14);
    }
    uint64_t v15 = (void *)v10[1];
    if (v15)
    {
      do
      {
        char v16 = v15;
        uint64_t v15 = (void *)*v15;
      }
      while (v15);
    }
    else
    {
      do
      {
        char v16 = (void *)v10[2];
        BOOL v14 = *v16 == (void)v10;
        uint64_t v10 = v16;
      }
      while (!v14);
    }
    uint64_t v10 = v16;
  }
  while (v8 != v9);
  return result;
}

BOOL morphun::dialog::SemanticFeatureModel_DisplayValue::operator!=(uint64_t a1, uint64_t a2)
{
  return !morphun::dialog::SemanticFeatureModel_DisplayValue::operator==(a1, a2);
}

unint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::hashCode(morphun::dialog::SemanticFeatureModel_DisplayValue *this)
{
  int v3 = (char *)*((void *)this + 1);
  uint64_t v1 = (char *)this + 8;
  uint64_t v2 = v3;
  uint64_t v4 = *((void *)v1 + 1);
  if (v1[23] >= 0)
  {
    uint64_t v5 = v1[23];
  }
  else
  {
    uint64_t v1 = v2;
    uint64_t v5 = v4;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t *)v1, 2 * v5);
}

unint64_t morphun::dialog::SemanticFeatureModel_DisplayValue::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t **)(a2 + 8);
  uint64_t v2 = a2 + 8;
  int v3 = v4;
  int v5 = *(char *)(v2 + 23);
  if (v5 >= 0) {
    uint64_t v6 = (uint64_t *)v2;
  }
  else {
    uint64_t v6 = v3;
  }
  if (v5 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(v2 + 23);
  }
  else {
    uint64_t v7 = *(void *)(v2 + 8);
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](v6, 2 * v7);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_WithHyphenSuffixLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = (_WORD *)v2;
  }
  else {
    uint64_t v4 = *(_WORD **)v2;
  }
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(v2 + 8);
  }
  if (v3)
  {
    int v5 = v4;
    do
    {
      if (*v5 == 32) {
        break;
      }
      ++v5;
      --v3;
    }
    while (v3);
    operator new();
  }
  operator new();
}

void sub_1D2D43E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v15, 0x10B3C40F7FF9C27);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_WithHyphenSuffixLookupFunction::~FiGrammarSynthesizer_WithHyphenSuffixLookupFunction(morphun::grammar::synthesis::FiGrammarSynthesizer_WithHyphenSuffixLookupFunction *this)
{
}

void non-virtual thunk to'morphun::analysis::stemmer::EsStemFilter::~EsStemFilter(morphun::analysis::stemmer::EsStemFilter *this)
{
  uint64_t v1 = (morphun::analysis::stemmer::EsStemFilter *)((char *)this - 104);
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(this, (uint64_t *)&off_1F2A07CE0);
  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07CB0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter *v1;
  uint64_t vars8;

  uint64_t v1 = (morphun::analysis::stemmer::EsStemFilter *)((char *)this - 104);
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer(this, (uint64_t *)&off_1F2A07CE0);

  morphun::analysis::TokenFilter::~TokenFilter(v1, (uint64_t *)&off_1F2A07CB0);
}

void *morphun::analysis::stemmer::EsStemFilter::reset(morphun::analysis::stemmer::EsStemFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 55) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 56) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  BOOL result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((void *)this + 57) = result;
  return result;
}

uint64_t morphun::analysis::stemmer::EsStemFilter::incrementToken(morphun::analysis::stemmer::EsStemFilter *this)
{
  uint64_t v2 = *((void *)this + 12);
  if (!v2) {
    goto LABEL_87;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (!v3) {
    return v3;
  }
  uint64_t v4 = *((void *)this + 55);
  if (v4)
  {
    if ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4)) {
      return v3;
    }
  }
  int v5 = (void *)*((void *)this + 54);
  if (!v5)
  {
LABEL_87:
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v6 = (void *)((char *)v5 + *(void *)(*v5 - 96));
  if (*((char *)v6 + 23) < 0)
  {
    unint64_t v7 = v6[1];
    if (v7 >= 0x7FFFFFFFFFFFFFF8) {
      std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = (void *)*v6;
  }
  else
  {
    unint64_t v7 = *((unsigned __int8 *)v6 + 23);
  }
  if (v7 >= 0xB)
  {
    uint64_t v9 = (v7 & 0x7FFFFFFFFFFFFFFCLL) + 4;
    if ((v7 | 3) != 0xB) {
      uint64_t v9 = v7 | 3;
    }
    p_dst = (void **)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v9 + 1);
    unint64_t v47 = v7;
    int64_t v48 = v10 | 0x8000000000000000;
    std::basic_string<char16_t> __dst = p_dst;
    goto LABEL_16;
  }
  HIBYTE(v48) = v7;
  p_dst = (void **)&__dst;
  if (v7) {
LABEL_16:
  }
    memmove(p_dst, v6, 2 * v7);
  *((_WORD *)p_dst + v7) = 0;
  uint64_t v45 = 0;
  if (v48 >= 0) {
    std::basic_string<char16_t> v11 = (const UChar *)&__dst;
  }
  else {
    std::basic_string<char16_t> v11 = (const UChar *)__dst;
  }
  if (v48 >= 0) {
    uint64_t v12 = HIBYTE(v48);
  }
  else {
    uint64_t v12 = v47;
  }
  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v45, v11, v12);
  if (v48 >= 0) {
    unint64_t v13 = (unsigned __int16 *)&__dst;
  }
  else {
    unint64_t v13 = (unsigned __int16 *)__dst;
  }
  if (v48 >= 0) {
    std::basic_string<char16_t>::size_type v14 = HIBYTE(v48);
  }
  else {
    std::basic_string<char16_t>::size_type v14 = v47;
  }
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::getLemma(&__str, (uint64_t)this + 104, v13, v14, v45);
  uint64_t v15 = (std::basic_string<char16_t> *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96));
  if (v44)
  {
    std::basic_string<char16_t>::operator=(v15, &__str);
    goto LABEL_65;
  }
  unsigned int v16 = HIBYTE(v15->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v15->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type size = v15->__r_.__value_.__l.__size_;
    if ((int)size < 5) {
      goto LABEL_64;
    }
    unsigned int v17 = size - 1;
    std::basic_string<char16_t>::size_type v20 = v15->__r_.__value_.__r.__words[0];
    if (*(_WORD *)(v15->__r_.__value_.__r.__words[0] + 2 * (size - 1)) != 115) {
      goto LABEL_64;
    }
    std::basic_string<char16_t>::size_type v18 = v15->__r_.__value_.__l.__size_;
  }
  else if (v16 < 5 {
         || (unsigned int v17 = v16 - 1,
  }
             LODWORD(v18) = HIBYTE(v15->__r_.__value_.__r.__words[2]),
             LODWORD(size) = v18,
             std::basic_string<char16_t>::size_type v20 = *((void *)this + 54) + *(void *)(**((void **)this + 54) - 96),
             v15->__r_.__value_.__s.__data_[v16 - 1] != 115))
  {
    LODWORD(size) = HIBYTE(v15->__r_.__value_.__r.__words[2]);
    goto LABEL_64;
  }
  uint64_t v21 = (size - 2);
  int v22 = *(unsigned __int16 *)(v20 + 2 * v21);
  if ((v22 - 232) >= 2 && v22 != 101)
  {
    if ((v16 & 0x80) != 0) {
      int v26 = *(unsigned __int16 *)(v15->__r_.__value_.__r.__words[0] + 2 * v21);
    }
    else {
      int v26 = (unsigned __int16)v15->__r_.__value_.__s.__data_[v21];
    }
    if (v26 == 111 || (v26 - 224) < 2 || v26 == 97) {
      LODWORD(size) = v17;
    }
    goto LABEL_64;
  }
  uint64_t v23 = (v18 - 3);
  std::basic_string<char16_t>::size_type size = *((void *)this + 54) + *(void *)(**((void **)this + 54) - 96);
  if ((v16 & 0x80) != 0) {
    std::basic_string<char16_t>::size_type size = v15->__r_.__value_.__r.__words[0];
  }
  int v24 = *(unsigned __int16 *)(size + 2 * v23);
  LODWORD(size) = v17;
  if (v24 != 116)
  {
    if (v24 != 110)
    {
      if (v24 == 99)
      {
        std::basic_string<char16_t>::size_type v25 = *((void *)this + 54) + *(void *)(**((void **)this + 54) - 96);
        if ((v16 & 0x80) != 0) {
          std::basic_string<char16_t>::size_type v25 = v15->__r_.__value_.__r.__words[0];
        }
        *(_WORD *)(v25 + 2 * v23) = 122;
      }
      goto LABEL_63;
    }
    uint64_t v27 = (v18 - 4);
    if ((v16 & 0x80) != 0)
    {
      std::basic_string<char16_t>::size_type v29 = v15->__r_.__value_.__r.__words[0];
      int v28 = *(unsigned __int16 *)(v15->__r_.__value_.__r.__words[0] + 2 * v27);
      if (v28 != 97) {
        goto LABEL_59;
      }
    }
    else
    {
      int v28 = (unsigned __int16)v15->__r_.__value_.__s.__data_[v27];
      std::basic_string<char16_t>::size_type v29 = *((void *)this + 54) + *(void *)(**((void **)this + 54) - 96);
      if (v28 != 97)
      {
        std::basic_string<char16_t>::size_type v29 = *((void *)this + 54) + *(void *)(**((void **)this + 54) - 96);
LABEL_59:
        if (v28 != 111)
        {
LABEL_63:
          LODWORD(size) = v21;
          goto LABEL_64;
        }
        __int16 v30 = 243;
LABEL_62:
        *(_WORD *)(v29 + 2 * v27) = v30;
        goto LABEL_63;
      }
    }
    __int16 v30 = 225;
    goto LABEL_62;
  }
LABEL_64:
  std::basic_string<char16_t>::resize(v15, (int)size, 0);
LABEL_65:
  if (*((void *)this + 56))
  {
    uint64_t v42 = 0;
    unsigned int v31 = (const UChar *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96));
    if (*((char *)v31 + 23) < 0)
    {
      unsigned int v31 = *(const UChar **)v31;
      uint64_t v32 = *(void *)(*((void *)this + 54) + *(void *)(**((void **)this + 54) - 96) + 8);
    }
    else
    {
      uint64_t v32 = *((unsigned __int8 *)v31 + 23);
    }
    if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v42, v31, v32))
    {
      uint64_t v33 = *((void *)this + 56);
      if (!v33)
      {
        unsigned int v38 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
        morphun::exception::NullPointerException::NullPointerException(v38);
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v33 + 64))(v33, v42);
    }
  }
  if (v48 >= 0) {
    std::basic_string<char16_t>::size_type v34 = (void **)&__dst;
  }
  else {
    std::basic_string<char16_t>::size_type v34 = __dst;
  }
  if (v48 >= 0) {
    std::basic_string<char16_t>::size_type v35 = HIBYTE(v48);
  }
  else {
    std::basic_string<char16_t>::size_type v35 = v47;
  }
  morphun::analysis::MorphologicalAnalyzerUtil::analyze_word((uint64_t)&__p, (uint64_t)v34, v35, v45, *((void *)this + 57), (uint64_t *)this + 13, 0);
  if (v41 && v40 < 0) {
    operator delete(__p);
  }
  if (v44 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v48) < 0) {
    operator delete(__dst);
  }
  return v3;
}

void sub_1D2D44420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  __cxa_free_exception(v21);
  if (a21 && a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v22 - 49) < 0) {
    operator delete(*(void **)(v22 - 72));
  }
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::EsStemFilter::~EsStemFilter(morphun::analysis::stemmer::EsStemFilter *this)
{
  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer((morphun::analysis::stemmer::EsStemFilter *)((char *)this + 104), (uint64_t *)&off_1F2A07CE0);
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07CB0);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t vars8;

  morphun::analysis::stemmer::DictionaryGenderedNounLemmatizer::~DictionaryGenderedNounLemmatizer((morphun::analysis::stemmer::EsStemFilter *)((char *)this + 104), (uint64_t *)&off_1F2A07CE0);

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07CB0);
}

void morphun::dialog::language::EsCommonConceptFactory_EsOrList::getBeforeLast(const morphun::dialog::SemanticFeatureConceptBase *a1@<X1>, const morphun::dialog::SpeakableString *a2@<X2>, const morphun::dialog::SemanticFeatureConceptBase *a3@<X3>, const morphun::dialog::SpeakableString *a4@<X4>, void *a5@<X8>)
{
  unint64_t v7 = (morphun::dialog::language::EsCommonConceptFactory_EsAndList *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *, const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a4 + 32))(a4, a1, a2, a3);
  uint64_t v8 = (void *)morphun::dialog::language::EsCommonConceptFactory_EsAndList::IMPORTANT_SET(v7);
  {
    operator new();
  }
  if (!morphun::dialog::language::O_SOUND(void)::O_SOUND_)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  long long __p = 0uLL;
  uint64_t v11 = 0;
  if (morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets((uint64_t)v7, v8, (void *)morphun::dialog::language::O_SOUND(void)::O_SOUND_, (uint64_t **)&__p))std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, " "); {
  else
  }
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, " ");
  morphun::dialog::SpeakableString::SpeakableString(a5, &__p);
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)__p);
  }
}

void sub_1D2D446AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::EsCommonConceptFactory_EsOrList::clone(morphun::dialog::language::EsCommonConceptFactory_EsOrList *this)
{
}

void sub_1D2D44798(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::EsCommonConceptFactory_EsOrList::~EsCommonConceptFactory_EsOrList(morphun::dialog::language::EsCommonConceptFactory_EsOrList *this)
{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05DA8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05DA8);
}

void morphun::tokenizer::locale::fi::FiTokenizer::createTokenExtractor()
{
}

void sub_1D2D44904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  morphun::tokenizer::TokenExtractor::~TokenExtractor(v15, (uint64_t *)&off_1F2A081B0);
  MEMORY[0x1D942B8B0](v15, 0x10F3C4096D43D9CLL);
  _Unwind_Resume(a1);
}

void morphun::exception::IllegalStateException::~IllegalStateException(std::exception *this)
{
  morphun::exception::Throwable::~Throwable(this);

  JUMPOUT(0x1D942B8B0);
}

double morphun::exception::IllegalStateException::IllegalStateException(morphun::exception::IllegalStateException *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A113E8;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F2A113E8;
  return result;
}

void *morphun::exception::IllegalStateException::IllegalStateException(uint64_t a1, long long *a2)
{
  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A113E8;
  return result;
}

{
  void *result;

  double result = (void *)morphun::exception::Throwable::Throwable(a1, a2);
  *double result = &unk_1F2A113E8;
  return result;
}

void morphun::analysis::NbAnalyzer::addWordNormalizationFilter(morphun::analysis::NbAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2D44AE8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10E1C403A81BC3DLL);
  _Unwind_Resume(a1);
}

void morphun::analysis::NbAnalyzer::addStopFilter(morphun::analysis::NbAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2D44B64(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::NbAnalyzer::~NbAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06F00);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06F00);
}

void morphun::dialog::language::DeCommonConceptFactory::quantify(morphun::dialog::language::DeCommonConceptFactory *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  npc<morphun::dialog::SemanticFeatureConceptBase const>((uint64_t)a3);
  uint64_t v6 = *((void *)this + 94);
  npc<morphun::dialog::SemanticFeature const>(v6);
  uint64_t v7 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(void *)a3 + 104))(a3, v6);
  memset(&v139, 0, sizeof(v139));
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 32))(v7);
    std::basic_string<char16_t>::operator=(&v139, v9);
    (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
  }
  uint64_t v10 = *((void *)this + 95);
  npc<morphun::dialog::SemanticFeature const>(v10);
  uint64_t v11 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *, uint64_t))(*(void *)a3 + 104))(a3, v10);
  uint64_t v12 = v11;
  memset(&v138, 0, sizeof(v138));
  if (v11)
  {
    unint64_t v13 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v11 + 32))(v11);
    std::basic_string<char16_t>::operator=(&v138, v13);
    (*(void (**)(uint64_t))(*(void *)v12 + 16))(v12);
  }
  long long v133 = 0uLL;
  uint64_t v134 = 0;
  std::basic_string<char16_t>::size_type v14 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::dialog::SpeakableString::SpeakableString(v135, &v133);
  std::basic_string<char16_t>::size_type size = HIBYTE(v138.__r_.__value_.__r.__words[2]);
  if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type size = v138.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    std::basic_string<char16_t>::size_type v14 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v14);
    uint64_t v16 = *((unsigned __int8 *)v14 + 23);
    int v17 = (char)v16;
    if ((v16 & 0x80u) != 0) {
      uint64_t v16 = *((void *)v14 + 1);
    }
    std::basic_string<char16_t>::size_type v18 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
    if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v18 = v138.__r_.__value_.__l.__size_;
    }
    if (v16 != v18) {
      goto LABEL_35;
    }
    if (v16)
    {
      unsigned int v19 = &v138;
      if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        unsigned int v19 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
      }
      if (v17 >= 0) {
        std::basic_string<char16_t>::size_type v20 = v14;
      }
      else {
        std::basic_string<char16_t>::size_type v20 = *(morphun::grammar::synthesis::GrammemeConstants **)v14;
      }
      while ((unsigned __int16)v19->__r_.__value_.__s.__data_[0] == *(unsigned __int16 *)v20)
      {
        std::basic_string<char16_t>::size_type v20 = (morphun::grammar::synthesis::GrammemeConstants *)((char *)v20 + 2);
        unsigned int v19 = (std::basic_string<char16_t> *)((char *)v19 + 2);
        if (!--v16) {
          goto LABEL_21;
        }
      }
LABEL_35:
      uint64_t v27 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v14);
      uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
      int v29 = (char)v28;
      if ((v28 & 0x80u) != 0) {
        uint64_t v28 = *(void *)(v27 + 8);
      }
      std::basic_string<char16_t>::size_type v30 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
      if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v30 = v138.__r_.__value_.__l.__size_;
      }
      if (v28 != v30) {
        goto LABEL_76;
      }
      if (v28)
      {
        unsigned int v31 = &v138;
        if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          unsigned int v31 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
        }
        if (v29 >= 0) {
          uint64_t v32 = (unsigned __int16 *)v27;
        }
        else {
          uint64_t v32 = *(unsigned __int16 **)v27;
        }
        while ((unsigned __int16)v31->__r_.__value_.__s.__data_[0] == *v32)
        {
          ++v32;
          unsigned int v31 = (std::basic_string<char16_t> *)((char *)v31 + 2);
          if (!--v28) {
            goto LABEL_48;
          }
        }
LABEL_76:
        uint64_t v45 = morphun::grammar::synthesis::GrammemeConstants::CASE_DATIVE((morphun::grammar::synthesis::GrammemeConstants *)v27);
        uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
        int v47 = (char)v46;
        if ((v46 & 0x80u) != 0) {
          uint64_t v46 = *(void *)(v45 + 8);
        }
        std::basic_string<char16_t>::size_type v48 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
        if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v48 = v138.__r_.__value_.__l.__size_;
        }
        if (v46 != v48)
        {
LABEL_117:
          uint64_t v63 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v45);
          uint64_t v64 = *(unsigned __int8 *)(v63 + 23);
          int v65 = (char)v64;
          if ((v64 & 0x80u) != 0) {
            uint64_t v64 = *(void *)(v63 + 8);
          }
          std::basic_string<char16_t>::size_type v66 = HIBYTE(v138.__r_.__value_.__r.__words[2]);
          if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v66 = v138.__r_.__value_.__l.__size_;
          }
          if (v64 != v66) {
            goto LABEL_245;
          }
          if (v64)
          {
            uint64_t v67 = &v138;
            if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              uint64_t v67 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
            }
            if (v65 >= 0) {
              uint64_t v68 = (unsigned __int16 *)v63;
            }
            else {
              uint64_t v68 = *(unsigned __int16 **)v63;
            }
            while ((unsigned __int16)v67->__r_.__value_.__s.__data_[0] == *v68)
            {
              ++v68;
              uint64_t v67 = (std::basic_string<char16_t> *)((char *)v67 + 2);
              if (!--v64) {
                goto LABEL_130;
              }
            }
LABEL_245:
            uint64_t v130 = v136;
            if ((v136 & 0x80u) != 0) {
              uint64_t v130 = v135[2];
            }
            if (!v130)
            {
              if (v137)
              {
                if (*(char *)(v137 + 23) < 0)
                {
                  if (*(void *)(v137 + 8)) {
                    goto LABEL_254;
                  }
                }
                else if (*(unsigned char *)(v137 + 23))
                {
                  goto LABEL_254;
                }
              }
              (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *))(*(void *)a2 + 208))(&v133, a2);
              morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
            }
LABEL_254:
            morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, (const morphun::dialog::SpeakableString *)v135, a3);
          }
LABEL_130:
          uint64_t v69 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v63);
          uint64_t v70 = *(unsigned __int8 *)(v69 + 23);
          int v71 = (char)v70;
          if ((v70 & 0x80u) != 0) {
            uint64_t v70 = *(void *)(v69 + 8);
          }
          std::basic_string<char16_t>::size_type v72 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v72 = v139.__r_.__value_.__l.__size_;
          }
          if (v70 == v72)
          {
            if (!v70)
            {
LABEL_143:
              std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "c");
              (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v133, a2, __p);
              morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
              goto LABEL_243;
            }
            uint64_t v73 = &v139;
            if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              uint64_t v73 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
            }
            if (v71 >= 0) {
              unint64_t v74 = (unsigned __int16 *)v69;
            }
            else {
              unint64_t v74 = *(unsigned __int16 **)v69;
            }
            while ((unsigned __int16)v73->__r_.__value_.__s.__data_[0] == *v74)
            {
              ++v74;
              uint64_t v73 = (std::basic_string<char16_t> *)((char *)v73 + 2);
              if (!--v70) {
                goto LABEL_143;
              }
            }
          }
          uint64_t v93 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v69);
          int v94 = *(char *)(v93 + 23);
          uint64_t v95 = *(void *)(v93 + 8);
          if (v94 >= 0) {
            uint64_t v95 = *(unsigned __int8 *)(v93 + 23);
          }
          std::basic_string<char16_t>::size_type v96 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v96 = v139.__r_.__value_.__l.__size_;
          }
          if (v95 == v96)
          {
            if (!v95) {
              goto LABEL_75;
            }
            unint64_t v97 = &v139;
            if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              unint64_t v97 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
            }
            unint64_t v98 = v94 >= 0 ? (unsigned __int16 *)v93 : *(unsigned __int16 **)v93;
            uint64_t v99 = v95 - 1;
            do
            {
              int v101 = *v98++;
              int v100 = v101;
              int v103 = (unsigned __int16)v97->__r_.__value_.__s.__data_[0];
              unint64_t v97 = (std::basic_string<char16_t> *)((char *)v97 + 2);
              int v102 = v103;
              BOOL v104 = v99-- != 0;
              char v105 = v104;
            }
            while (v102 == v100 && (v105 & 1) != 0);
            if (v102 == v100) {
              goto LABEL_75;
            }
          }
          uint64_t v118 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v93);
          int v119 = *(char *)(v118 + 23);
          uint64_t v120 = *(void *)(v118 + 8);
          if (v119 >= 0) {
            uint64_t v120 = *(unsigned __int8 *)(v118 + 23);
          }
          std::basic_string<char16_t>::size_type v121 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v121 = v139.__r_.__value_.__l.__size_;
          }
          if (v120 != v121) {
            goto LABEL_245;
          }
          if (v120)
          {
            unint64_t v122 = &v139;
            if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              unint64_t v122 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
            }
            uint64_t v123 = v119 >= 0 ? (unsigned __int16 *)v118 : *(unsigned __int16 **)v118;
            uint64_t v124 = v120 - 1;
            do
            {
              int v126 = *v123++;
              int v125 = v126;
              int v128 = (unsigned __int16)v122->__r_.__value_.__s.__data_[0];
              unint64_t v122 = (std::basic_string<char16_t> *)((char *)v122 + 2);
              int v127 = v128;
              BOOL v104 = v124-- != 0;
              char v129 = v104;
            }
            while (v127 == v125 && (v129 & 1) != 0);
            if (v127 != v125) {
              goto LABEL_245;
            }
          }
          goto LABEL_242;
        }
        if (v46)
        {
          std::basic_string<char16_t>::size_type v49 = &v138;
          if ((v138.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v49 = (std::basic_string<char16_t> *)v138.__r_.__value_.__r.__words[0];
          }
          if (v47 >= 0) {
            uint64_t v50 = (unsigned __int16 *)v45;
          }
          else {
            uint64_t v50 = *(unsigned __int16 **)v45;
          }
          while ((unsigned __int16)v49->__r_.__value_.__s.__data_[0] == *v50)
          {
            ++v50;
            std::basic_string<char16_t>::size_type v49 = (std::basic_string<char16_t> *)((char *)v49 + 2);
            if (!--v46) {
              goto LABEL_89;
            }
          }
          goto LABEL_117;
        }
LABEL_89:
        uint64_t v51 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v45);
        uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
        int v53 = (char)v52;
        if ((v52 & 0x80u) != 0) {
          uint64_t v52 = *(void *)(v51 + 8);
        }
        std::basic_string<char16_t>::size_type v54 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
        if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v54 = v139.__r_.__value_.__l.__size_;
        }
        if (v52 == v54)
        {
          if (!v52) {
            goto LABEL_171;
          }
          unint64_t v55 = &v139;
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            unint64_t v55 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
          }
          if (v53 >= 0) {
            std::basic_string<char16_t>::size_type v56 = (unsigned __int16 *)v51;
          }
          else {
            std::basic_string<char16_t>::size_type v56 = *(unsigned __int16 **)v51;
          }
          while ((unsigned __int16)v55->__r_.__value_.__s.__data_[0] == *v56)
          {
            ++v56;
            unint64_t v55 = (std::basic_string<char16_t> *)((char *)v55 + 2);
            if (!--v52) {
              goto LABEL_171;
            }
          }
        }
        uint64_t v81 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v51);
        uint64_t v82 = *(unsigned __int8 *)(v81 + 23);
        int v83 = (char)v82;
        if ((v82 & 0x80u) != 0) {
          uint64_t v82 = *(void *)(v81 + 8);
        }
        std::basic_string<char16_t>::size_type v84 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
        if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v84 = v139.__r_.__value_.__l.__size_;
        }
        if (v82 != v84) {
          goto LABEL_205;
        }
        if (v82)
        {
          unint64_t v85 = &v139;
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            unint64_t v85 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
          }
          if (v83 >= 0) {
            unint64_t v86 = (unsigned __int16 *)v81;
          }
          else {
            unint64_t v86 = *(unsigned __int16 **)v81;
          }
          while ((unsigned __int16)v85->__r_.__value_.__s.__data_[0] == *v86)
          {
            ++v86;
            unint64_t v85 = (std::basic_string<char16_t> *)((char *)v85 + 2);
            if (!--v82) {
              goto LABEL_171;
            }
          }
LABEL_205:
          uint64_t v106 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v81);
          int v107 = *(char *)(v106 + 23);
          uint64_t v108 = *(void *)(v106 + 8);
          if (v107 >= 0) {
            uint64_t v108 = *(unsigned __int8 *)(v106 + 23);
          }
          std::basic_string<char16_t>::size_type v109 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v109 = v139.__r_.__value_.__l.__size_;
          }
          if (v108 != v109) {
            goto LABEL_245;
          }
          if (v108)
          {
            uint64_t v110 = &v139;
            if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              uint64_t v110 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
            }
            std::basic_string<char16_t>::size_type v111 = v107 >= 0 ? (unsigned __int16 *)v106 : *(unsigned __int16 **)v106;
            uint64_t v112 = v108 - 1;
            do
            {
              int v114 = *v111++;
              int v113 = v114;
              int v116 = (unsigned __int16)v110->__r_.__value_.__s.__data_[0];
              uint64_t v110 = (std::basic_string<char16_t> *)((char *)v110 + 2);
              int v115 = v116;
              BOOL v104 = v112-- != 0;
              char v117 = v104;
            }
            while (v115 == v113 && (v117 & 1) != 0);
            if (v115 != v113) {
              goto LABEL_245;
            }
          }
LABEL_185:
          std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "c");
          (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v133, a2, __p);
          morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
          goto LABEL_243;
        }
LABEL_171:
        std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"cardinal-m");
        (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v133, a2, __p);
        morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
        goto LABEL_243;
      }
LABEL_48:
      uint64_t v33 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v27);
      uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
      int v35 = (char)v34;
      if ((v34 & 0x80u) != 0) {
        uint64_t v34 = *(void *)(v33 + 8);
      }
      std::basic_string<char16_t>::size_type v36 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
      if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v36 = v139.__r_.__value_.__l.__size_;
      }
      if (v34 == v36)
      {
        if (!v34) {
          goto LABEL_157;
        }
        uint64_t v37 = &v139;
        if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v37 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
        }
        if (v35 >= 0) {
          unsigned int v38 = (unsigned __int16 *)v33;
        }
        else {
          unsigned int v38 = *(unsigned __int16 **)v33;
        }
        while ((unsigned __int16)v37->__r_.__value_.__s.__data_[0] == *v38)
        {
          ++v38;
          uint64_t v37 = (std::basic_string<char16_t> *)((char *)v37 + 2);
          if (!--v34) {
            goto LABEL_157;
          }
        }
      }
      uint64_t v75 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v33);
      uint64_t v76 = *(unsigned __int8 *)(v75 + 23);
      int v77 = (char)v76;
      if ((v76 & 0x80u) != 0) {
        uint64_t v76 = *(void *)(v75 + 8);
      }
      std::basic_string<char16_t>::size_type v78 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
      if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v78 = v139.__r_.__value_.__l.__size_;
      }
      if (v76 != v78) {
        goto LABEL_172;
      }
      if (v76)
      {
        uint64_t v79 = &v139;
        if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v79 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
        }
        if (v77 >= 0) {
          uint64_t v80 = (unsigned __int16 *)v75;
        }
        else {
          uint64_t v80 = *(unsigned __int16 **)v75;
        }
        while ((unsigned __int16)v79->__r_.__value_.__s.__data_[0] == *v80)
        {
          ++v80;
          uint64_t v79 = (std::basic_string<char16_t> *)((char *)v79 + 2);
          if (!--v76) {
            goto LABEL_157;
          }
        }
LABEL_172:
        uint64_t v87 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v75);
        uint64_t v88 = *(unsigned __int8 *)(v87 + 23);
        int v89 = (char)v88;
        if ((v88 & 0x80u) != 0) {
          uint64_t v88 = *(void *)(v87 + 8);
        }
        std::basic_string<char16_t>::size_type v90 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
        if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::basic_string<char16_t>::size_type v90 = v139.__r_.__value_.__l.__size_;
        }
        if (v88 != v90) {
          goto LABEL_245;
        }
        if (v88)
        {
          std::basic_string<char16_t>::size_type v91 = &v139;
          if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::basic_string<char16_t>::size_type v91 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
          }
          if (v89 >= 0) {
            int64_t v92 = (unsigned __int16 *)v87;
          }
          else {
            int64_t v92 = *(unsigned __int16 **)v87;
          }
          while ((unsigned __int16)v91->__r_.__value_.__s.__data_[0] == *v92)
          {
            ++v92;
            std::basic_string<char16_t>::size_type v91 = (std::basic_string<char16_t> *)((char *)v91 + 2);
            if (!--v88) {
              goto LABEL_185;
            }
          }
          goto LABEL_245;
        }
        goto LABEL_185;
      }
LABEL_157:
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"cardinal-s");
      (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v133, a2, __p);
      morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
      goto LABEL_243;
    }
  }
LABEL_21:
  uint64_t v21 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v14);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  int v23 = (char)v22;
  if ((v22 & 0x80u) != 0) {
    uint64_t v22 = *(void *)(v21 + 8);
  }
  std::basic_string<char16_t>::size_type v24 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
  if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v24 = v139.__r_.__value_.__l.__size_;
  }
  if (v22 == v24)
  {
    if (!v22)
    {
LABEL_34:
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"cardinal-masculine");
      (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v133, a2, __p);
      morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
      goto LABEL_243;
    }
    std::basic_string<char16_t>::size_type v25 = &v139;
    if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
    }
    if (v23 >= 0) {
      int v26 = (unsigned __int16 *)v21;
    }
    else {
      int v26 = *(unsigned __int16 **)v21;
    }
    while ((unsigned __int16)v25->__r_.__value_.__s.__data_[0] == *v26)
    {
      ++v26;
      std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t> *)((char *)v25 + 2);
      if (!--v22) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v39 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v21);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
  int v41 = (char)v40;
  if ((v40 & 0x80u) != 0) {
    uint64_t v40 = *(void *)(v39 + 8);
  }
  std::basic_string<char16_t>::size_type v42 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
  if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v42 = v139.__r_.__value_.__l.__size_;
  }
  if (v40 == v42)
  {
    if (!v40)
    {
LABEL_75:
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "c");
      (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v133, a2, __p);
      morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
      goto LABEL_243;
    }
    unsigned int v43 = &v139;
    if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      unsigned int v43 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
    }
    if (v41 >= 0) {
      char v44 = (unsigned __int16 *)v39;
    }
    else {
      char v44 = *(unsigned __int16 **)v39;
    }
    while ((unsigned __int16)v43->__r_.__value_.__s.__data_[0] == *v44)
    {
      ++v44;
      unsigned int v43 = (std::basic_string<char16_t> *)((char *)v43 + 2);
      if (!--v40) {
        goto LABEL_75;
      }
    }
  }
  uint64_t v57 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v39);
  uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
  int v59 = (char)v58;
  if ((v58 & 0x80u) != 0) {
    uint64_t v58 = *(void *)(v57 + 8);
  }
  std::basic_string<char16_t>::size_type v60 = HIBYTE(v139.__r_.__value_.__r.__words[2]);
  if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::basic_string<char16_t>::size_type v60 = v139.__r_.__value_.__l.__size_;
  }
  if (v58 != v60) {
    goto LABEL_245;
  }
  if (v58)
  {
    long long v61 = &v139;
    if ((v139.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      long long v61 = (std::basic_string<char16_t> *)v139.__r_.__value_.__r.__words[0];
    }
    if (v59 >= 0) {
      char v62 = (unsigned __int16 *)v57;
    }
    else {
      char v62 = *(unsigned __int16 **)v57;
    }
    while ((unsigned __int16)v61->__r_.__value_.__s.__data_[0] == *v62)
    {
      ++v62;
      long long v61 = (std::basic_string<char16_t> *)((char *)v61 + 2);
      if (!--v58) {
        goto LABEL_242;
      }
    }
    goto LABEL_245;
  }
LABEL_242:
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "c");
  (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v133, a2, __p);
  morphun::dialog::SpeakableString::operator=((uint64_t)v135, (uint64_t)&v133);
LABEL_243:
  if (v132 < 0) {
    operator delete(__p[0]);
  }
  goto LABEL_245;
}

void sub_1D2D458F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 57) < 0) {
    operator delete(*(void **)(v21 - 80));
  }
  if (*(char *)(v21 - 33) < 0) {
    operator delete(*(void **)(v21 - 56));
  }
  _Unwind_Resume(a1);
}

void sub_1D2D45A50(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1D2D45AB4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::DeCommonConceptFactory::quote(morphun::dialog::language::DeCommonConceptFactory *this@<X0>, const morphun::dialog::SpeakableString *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = morphun::util::LocaleUtils::SWITZERLAND_GERMAN(this);
  uint64_t v7 = (*(uint64_t (**)(morphun::dialog::language::DeCommonConceptFactory *))(*(void *)this + 32))(this);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 127);
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = *(unsigned __int8 *)(v7 + 127);
  }
  else {
    uint64_t v9 = *(void *)(v7 + 112);
  }
  uint64_t v10 = *(unsigned __int8 *)(v6 + 127);
  int v11 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(v6 + 112);
  }
  if (v9 == v10)
  {
    uint64_t v12 = (const void **)(v7 + 104);
    uint64_t v15 = *(unsigned __int8 **)(v6 + 104);
    std::basic_string<char16_t>::size_type v14 = (unsigned __int8 *)(v6 + 104);
    unint64_t v13 = v15;
    if (v11 >= 0) {
      uint64_t v16 = v14;
    }
    else {
      uint64_t v16 = v13;
    }
    if ((v8 & 0x80) == 0)
    {
      if (*(unsigned char *)(v7 + 127))
      {
        while (*(unsigned __int8 *)v12 == *v16)
        {
          uint64_t v12 = (const void **)((char *)v12 + 1);
          ++v16;
          if (!--v8) {
            goto LABEL_19;
          }
        }
        goto LABEL_16;
      }
LABEL_19:
      if ((*(unsigned int (**)(const morphun::dialog::SpeakableString *, unsigned __int8 *))(*(void *)a2 + 48))(a2, v16))
      {
        int v17 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
        std::operator+<char16_t>((uint64_t)&v20, word_1D2ED05AC, v17);
        std::basic_string<char16_t>::append(&v20, word_1D2ED05B0, 1uLL);
        std::basic_string<char16_t> __p = v20;
        memset(&v20, 0, sizeof(v20));
        morphun::dialog::SpeakableString::SpeakableString(a3, (long long *)&__p);
      }
      else
      {
        std::basic_string<char16_t>::size_type v18 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
        std::operator+<char16_t>((uint64_t)&v20, word_1D2ED05AC, v18);
        std::basic_string<char16_t>::append(&v20, word_1D2ED05B0, 1uLL);
        std::basic_string<char16_t> __p = v20;
        memset(&v20, 0, sizeof(v20));
        unsigned int v19 = (unsigned __int16 *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 40))(a2);
        morphun::dialog::SpeakableString::SpeakableString((uint64_t)a3, (long long *)&__p, v19);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v20.__r_.__value_.__l.__data_);
      }
      return;
    }
    if (!memcmp(*v12, v16, *(void *)(v7 + 112))) {
      goto LABEL_19;
    }
  }
LABEL_16:

  morphun::dialog::CommonConceptFactoryImpl::quote((const void **)this, a2, a3);
}

void sub_1D2D45D3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::DeCommonConceptFactory::~DeCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A056E8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A056E8);
}

uint64_t mccf_getSemanticFeatureModel(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::CommonConceptFactory const>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 24))(v1);
}

uint64_t npc<morphun::dialog::CommonConceptFactory const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D45E98(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

CFLocaleRef mccf_getLanguageCopy(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::CommonConceptFactory const>(a1);
  uint64_t v2 = (morphun::util::CFUtils *)(*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  return morphun::util::CFUtils::convert(v2, v3);
}

void mccf_quote()
{
}

void sub_1D2D45FC4(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v3, v2, v4);
    __cxa_end_catch();
    JUMPOUT(0x1D2D45FB0);
  }
  _Unwind_Resume(exception_object);
}

uint64_t npc<morphun::dialog::SpeakableString const>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D46078(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mccf_quantifyCopy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 104))(a1, a2, a3);
}

void sub_1D2D46188(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t mccf_quantifyFormattedCopy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 112))(a1, a2, a3, a4);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::~FiGrammarSynthesizer_LemmaApproximator(morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator *this)
{
  *(void *)this = &off_1F2A0C6B8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*((void **)this + 2));

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &off_1F2A0C6B8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*((void **)this + 2));
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,0>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(a1 + 24);
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 9) < 0) {
          operator delete(*(void **)(v3 - 32));
        }
        v3 -= 32;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 24);
    }
    *(void *)(a1 + 32) = v2;
    operator delete(v4);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    int v5 = *(void **)a1;
    operator delete(v5);
  }
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::FiGrammarSynthesizer_LemmaApproximator(morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator *this, const morphun::dictionary::DictionaryMetaData *a2, const morphun::dictionary::Inflector *a3)
{
  *((void *)&v20[0] + 1) = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)a2;
  *(void *)this = *(void *)a2;
  *(void *)((char *)this + *(void *)(v3 - 40)) = *((void *)a2 + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 1) = (char *)this + 16;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"yks=-");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v18, (char *)L"nominative");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v19, (char *)L"singular");
  uint64_t v12 = 0;
  unint64_t v13 = 0;
  std::basic_string<char16_t>::size_type v14 = 0;
  uint64_t v16 = &v12;
  LOBYTE(v17) = 0;
  uint64_t v12 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  unint64_t v13 = v12;
  std::basic_string<char16_t>::size_type v14 = v12 + 2;
  uint64_t v4 = 0;
  unint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v14, &v18, v20, v12);
  while (1)
  {
    if (SHIBYTE(v19[v4 + 2]) < 0) {
      operator delete((void *)v19[v4]);
    }
    v4 -= 3;
    if (v4 == -6)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v18, (char *)L"nominative");
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v19, "p");
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      int v11 = 0;
      uint64_t v16 = &v9;
      LOBYTE(v17) = 0;
      uint64_t v9 = (std::basic_string<char16_t> *)operator new(0x30uLL);
      uint64_t v10 = v9;
      int v11 = v9 + 2;
      uint64_t v5 = 0;
      uint64_t v10 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v11, &v18, v20, v9);
      while (1)
      {
        if (SHIBYTE(v19[v5 + 2]) < 0) {
          operator delete((void *)v19[v5]);
        }
        v5 -= 3;
        if (v5 == -6)
        {
          memset(&v8[2], 0, 24);
          uint64_t v6 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*((void *)a3 + 1));
          morphun::dictionary::DictionaryMetaData_MMappedDictionary::getAllWords(v6, v8);
        }
      }
    }
  }
}

{
  uint64_t v3;
  uint64_t v4;
  morphun::dictionary::DictionaryMetaData_MMappedDictionary *v5;
  void v7[5];
  std::basic_string<char16_t> *v8;
  std::basic_string<char16_t> *v9;
  std::basic_string<char16_t> *v10;
  std::basic_string<char16_t> *v11;
  std::basic_string<char16_t> *v12;
  std::basic_string<char16_t> *v13;
  uint64_t __dst;
  std::basic_string<char16_t> **v15;
  uint64_t v16;
  long long v17;
  void v18[3];
  long long v19[2];

  *((void *)&v19[0] + 1) = *MEMORY[0x1E4F143B8];
  *(void *)this = &off_1F2A0C6B8;
  *((void *)this + 2) = 0;
  *((void *)this + 1) = (char *)this + 16;
  *((void *)this + 3) = 0;
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"yks=-");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v17, (char *)L"nominative");
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v18, (char *)L"singular");
  int v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0;
  uint64_t v15 = &v11;
  LOBYTE(v16) = 0;
  int v11 = (std::basic_string<char16_t> *)operator new(0x30uLL);
  uint64_t v12 = v11;
  unint64_t v13 = v11 + 2;
  uint64_t v3 = 0;
  uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v13, &v17, v19, v11);
  while (1)
  {
    if (SHIBYTE(v18[v3 + 2]) < 0) {
      operator delete((void *)v18[v3]);
    }
    v3 -= 3;
    if (v3 == -6)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v17, (char *)L"nominative");
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(v18, "p");
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v15 = &v8;
      LOBYTE(v16) = 0;
      uint64_t v8 = (std::basic_string<char16_t> *)operator new(0x30uLL);
      uint64_t v9 = v8;
      uint64_t v10 = v8 + 2;
      uint64_t v4 = 0;
      uint64_t v9 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v10, &v17, v19, v8);
      while (1)
      {
        if (SHIBYTE(v18[v4 + 2]) < 0) {
          operator delete((void *)v18[v4]);
        }
        v4 -= 3;
        if (v4 == -6)
        {
          memset(&v7[2], 0, 24);
          uint64_t v5 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*((void *)a2 + 1));
          morphun::dictionary::DictionaryMetaData_MMappedDictionary::getAllWords(v5, v7);
        }
      }
    }
  }
}

void sub_1D2D46AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,uint64_t a39,char a40,uint64_t a41,char a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51)
{
  *(void *)(v51 - 160) = &a44;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 160));
  *(void *)(v51 - 160) = &a47;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 160));
  *(void *)(v51 - 160) = &a50;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 160));
  if (*(char *)(v51 - 209) < 0) {
    operator delete(*(void **)(v51 - 232));
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*a10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t> const&>,std::tuple<>>(uint64_t **a1, unsigned __int16 *a2, long long **a3)
{
  uint64_t v5 = (uint64_t **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v14, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    uint64_t v6 = (uint64_t *)operator new(0x50uLL);
    v12[0] = v6;
    v12[1] = a1 + 1;
    char v13 = 0;
    uint64_t v8 = (std::basic_string<char16_t> *)(v6 + 4);
    uint64_t v9 = *a3;
    if (*((char *)*a3 + 23) < 0)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(v8, *(const std::basic_string<char16_t>::value_type **)v9, *((void *)v9 + 1));
    }
    else
    {
      long long v10 = *v9;
      v6[6] = *((void *)v9 + 2);
      *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v10;
    }
    v6[7] = 0;
    v6[8] = 0;
    v6[9] = 0;
    char v13 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v14, v7, v6);
    v12[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,void *>>>>::reset[abi:ne180100]((uint64_t)v12);
  }
  return v6;
}

void sub_1D2D46D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  uint64_t v4 = a2[1];
  if (v3 == *result)
  {
    uint64_t v5 = a2[1];
  }
  else
  {
    do
    {
      uint64_t v5 = v4 - 32;
      long long v6 = *(_OWORD *)(v3 - 32);
      *(void *)(v4 - 16) = *(void *)(v3 - 16);
      *(_OWORD *)(v4 - 32) = v6;
      *(void *)(v3 - 24) = 0;
      *(void *)(v3 - 16) = 0;
      *(void *)(v3 - 32) = 0;
      *(unsigned char *)(v4 - 8) = *(unsigned char *)(v3 - 8);
      v4 -= 32;
      v3 -= 32;
    }
    while (v3 != v2);
  }
  a2[1] = v5;
  uint64_t v7 = *result;
  *double result = v5;
  a2[1] = v7;
  uint64_t v8 = result[1];
  result[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = result[2];
  result[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void ***)(a1 + 8);
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = v2 - 4;
      *(void *)(a1 + 16) = v2 - 4;
      if (*((char *)v2 - 9) < 0)
      {
        operator delete(*v4);
        uint64_t v4 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::basic_string<char16_t> const,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

std::basic_string<char16_t> *morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::getHeuristicSuffix@<X0>(std::basic_string<char16_t> *__str@<X0>, std::allocator<char16_t> *a2@<X4>, std::basic_string<char16_t> *a3@<X8>)
{
  int v5 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v5 & 0x80u) != 0) {
    int v5 = __str->__r_.__value_.__r.__words[1];
  }
  if (v5 <= 3) {
    int v5 = 3;
  }
  return std::basic_string<char16_t>::basic_string(a3, __str, (v5 - 3), 0xFFFFFFFFFFFFFFFFLL, a2);
}

void sub_1D2D4753C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,uint64_t a39,char a40,uint64_t a41,char a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51)
{
  *(void *)(v51 - 160) = &a44;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 160));
  *(void *)(v51 - 160) = &a47;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 160));
  *(void *)(v51 - 160) = &a50;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v51 - 160));
  if (*(char *)(v51 - 209) < 0) {
    operator delete(*(void **)(v51 - 232));
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*a9);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::FiGrammarSynthesizer_LemmaApproximator(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  uint64_t v6 = *a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + *(void *)(v6 - 40)) = a2[1];
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = a1 + 16;
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  if (*a3 != v8)
  {
    do
    {
      int v9 = *(unsigned __int8 *)(v7 + 23);
      if ((v9 & 0x80u) != 0) {
        int v9 = *(_DWORD *)(v7 + 8);
      }
      if (v9 <= 3) {
        int v9 = 3;
      }
      std::basic_string<char16_t>::basic_string(&__p, (const std::basic_string<char16_t> *)v7, (v9 - 3), 0xFFFFFFFFFFFFFFFFLL, a5);
      p_p = &__p;
      long long v10 = std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t>&&>,std::tuple<>>((uint64_t **)(a1 + 8), (unsigned __int16 *)&__p, (_OWORD **)&p_p);
      int v11 = (uint64_t *)v10 + 7;
      unint64_t v12 = *((void *)v10 + 8);
      if (v12 >= *((void *)v10 + 9))
      {
        uint64_t v13 = std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__emplace_back_slow_path<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple const&>(v11, (long long *)v7);
      }
      else
      {
        std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__construct_one_at_end[abi:ne180100]<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple const&>((uint64_t)v11, (long long *)v7);
        uint64_t v13 = v12 + 32;
      }
      *((void *)v10 + 8) = v13;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      v7 += 32;
    }
    while (v7 != v8);
  }
  return a1;
}

void sub_1D2D478C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*v14);
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t>&&>,std::tuple<>>(uint64_t **a1, unsigned __int16 *a2, _OWORD **a3)
{
  int v5 = (void **)std::__tree<std::basic_string<char16_t>>::__find_equal<std::basic_string<char16_t>>((uint64_t)a1, &v13, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x50uLL);
    v11[1] = a1 + 1;
    uint64_t v8 = *a3;
    uint64_t v9 = *((void *)*a3 + 2);
    v6[2] = **a3;
    *((void *)v6 + 6) = v9;
    *uint64_t v8 = 0;
    v8[1] = 0;
    void v8[2] = 0;
    *((void *)v6 + 8) = 0;
    *((void *)v6 + 9) = 0;
    *((void *)v6 + 7) = 0;
    char v12 = 1;
    std::__tree<std::u16string_view>::__insert_node_at(a1, v13, v7, (uint64_t *)v6);
    v11[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,void *>>>>::reset[abi:ne180100]((uint64_t)v11);
  }
  return v6;
}

void std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__construct_one_at_end[abi:ne180100]<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple const&>(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(*(std::basic_string<char16_t> **)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(v4 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v4 = v5;
  }
  *(unsigned char *)(v4 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 8) = v4 + 32;
}

void sub_1D2D47A0C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__emplace_back_slow_path<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple const&>(uint64_t *a1, long long *a2)
{
  uint64_t v2 = (a1[1] - *a1) >> 5;
  unint64_t v3 = v2 + 1;
  if ((unint64_t)(v2 + 1) >> 59) {
    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v6 = a1 + 2;
  uint64_t v7 = a1[2] - *a1;
  if (v7 >> 4 > v3) {
    unint64_t v3 = v7 >> 4;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v8 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v8 = v3;
  }
  long long v18 = v6;
  if (v8)
  {
    long long v10 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>(v8);
  }
  else
  {
    long long v10 = 0;
    uint64_t v9 = 0;
  }
  int v11 = (std::basic_string<char16_t> *)&v10[32 * v2];
  v15[0] = v10;
  v15[1] = v11;
  uint64_t v16 = v11;
  uint64_t v17 = &v10[32 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v11, *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
    int v11 = v16;
  }
  else
  {
    long long v12 = *a2;
    v11->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v12;
  }
  v10[32 * v2 + 24] = *((unsigned char *)a2 + 24);
  uint64_t v16 = (std::basic_string<char16_t> *)((char *)v11 + 32);
  std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__swap_out_circular_buffer(a1, v15);
  uint64_t v13 = a1[1];
  std::__split_buffer<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::~__split_buffer((uint64_t)v15);
  return v13;
}

void sub_1D2D47B10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::FiGrammarSynthesizer_LemmaApproximator(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, std::allocator<char16_t> *a5)
{
  *a1 = &off_1F2A0C6B8;
  a1[2] = 0;
  a1[1] = a1 + 2;
  uint64_t v6 = (uint64_t **)(a1 + 1);
  a1[3] = 0;
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  if (*a2 != v8)
  {
    do
    {
      int v9 = *(unsigned __int8 *)(v7 + 23);
      if ((v9 & 0x80u) != 0) {
        int v9 = *(_DWORD *)(v7 + 8);
      }
      if (v9 <= 3) {
        int v9 = 3;
      }
      std::basic_string<char16_t>::basic_string(&__p, (const std::basic_string<char16_t> *)v7, (v9 - 3), 0xFFFFFFFFFFFFFFFFLL, a5);
      p_p = &__p;
      long long v10 = std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::piecewise_construct_t const&,std::tuple<std::basic_string<char16_t>&&>,std::tuple<>>(v6, (unsigned __int16 *)&__p, (_OWORD **)&p_p);
      int v11 = (uint64_t *)v10 + 7;
      unint64_t v12 = *((void *)v10 + 8);
      if (v12 >= *((void *)v10 + 9))
      {
        uint64_t v13 = std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__emplace_back_slow_path<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple const&>(v11, (long long *)v7);
      }
      else
      {
        std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>::__construct_one_at_end[abi:ne180100]<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple const&>((uint64_t)v11, (long long *)v7);
        uint64_t v13 = v12 + 32;
      }
      *((void *)v10 + 8) = v13;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      v7 += 32;
    }
    while (v7 != v8);
  }
  return a1;
}

void sub_1D2D47C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*v14);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::~FiGrammarSynthesizer_LemmaApproximator(morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 40)) = a2[1];
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*((void **)this + 2));
}

void virtual thunk to'morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::~FiGrammarSynthesizer_LemmaApproximator(morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator *this)
{
  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 32);
  *(void *)uint64_t v1 = &off_1F2A0C6B8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*((void **)v1 + 2));
}

{
  char *v1;
  uint64_t vars8;

  uint64_t v1 = (char *)this + *(void *)(*(void *)this - 32);
  *(void *)uint64_t v1 = &off_1F2A0C6B8;
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::vector<morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::WordSuffixTuple>>>>::destroy(*((void **)v1 + 2));

  JUMPOUT(0x1D942B8B0);
}

void morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::getBestMatchingKnownLemma(std::basic_string<char16_t> *__str@<X1>, uint64_t a2@<X0>, std::allocator<char16_t> *a3@<X4>, std::basic_string<char16_t> *a4@<X8>)
{
  int v7 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
  if (v7 < 0)
  {
    uint64_t v8 = (const std::basic_string<char16_t>::value_type *)__str->__r_.__value_.__r.__words[0];
    std::basic_string<char16_t>::size_type size = __str->__r_.__value_.__l.__size_;
    if (!size)
    {
      std::basic_string<char16_t>::__init_copy_ctor_external(a4, v8, 0);
      return;
    }
    std::basic_string<char16_t>::__init_copy_ctor_external(a4, v8, size);
    LOBYTE(v7) = *((unsigned char *)&__str->__r_.__value_.__s + 23);
  }
  else
  {
    *a4 = *__str;
    if (!v7) {
      return;
    }
  }
  int v7 = v7;
  if ((v7 & 0x80u) != 0) {
    int v7 = __str->__r_.__value_.__r.__words[1];
  }
  if (v7 <= 3) {
    int v7 = 3;
  }
  std::basic_string<char16_t>::basic_string(&v45, __str, (v7 - 3), 0xFFFFFFFFFFFFFFFFLL, a3);
  if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v10 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  else {
    int v10 = __str->__r_.__value_.__r.__words[1];
  }
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v11 = a2 + 16;
  uint64_t v12 = v13;
  if (!v13) {
    goto LABEL_56;
  }
  uint64_t v14 = v11;
  do
  {
    BOOL v15 = std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)(v12 + 32), (unsigned __int16 *)&v45);
    uint64_t v16 = (uint64_t *)(v12 + 8);
    if (!v15)
    {
      uint64_t v16 = (uint64_t *)v12;
      uint64_t v14 = v12;
    }
    uint64_t v12 = *v16;
  }
  while (*v16);
  if (v14 == v11
    || std::less<std::basic_string<char16_t>>::operator()[abi:ne180100]((unsigned __int16 *)&v45, (unsigned __int16 *)(v14 + 32))|| (uint64_t v17 = *(std::basic_string<char16_t> **)(v14 + 56), v18 = *(unsigned __int16 **)(v14 + 64), v17 == (std::basic_string<char16_t> *)v18))
  {
LABEL_56:
    morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::getFallBackLemma((uint64_t)__str, &__p);
    if (SHIBYTE(a4->__r_.__value_.__r.__words[2]) < 0) {
      operator delete(a4->__r_.__value_.__l.__data_);
    }
    *a4 = __p;
    if (morphun::util::gLogLevel <= 1)
    {
      std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"No match found. Using fallback lemma: ");
      int v39 = SHIBYTE(a4->__r_.__value_.__r.__words[2]);
      if (v39 >= 0) {
        uint64_t v40 = (const std::basic_string<char16_t>::value_type *)a4;
      }
      else {
        uint64_t v40 = (const std::basic_string<char16_t>::value_type *)a4->__r_.__value_.__r.__words[0];
      }
      if (v39 >= 0) {
        std::basic_string<char16_t>::size_type v41 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v41 = a4->__r_.__value_.__l.__size_;
      }
      std::basic_string<char16_t>::append(&__dst, v40, v41);
      std::basic_string<char16_t> __p = __dst;
      memset(&__dst, 0, sizeof(__dst));
      if (morphun::util::gLogLevel <= 1)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::basic_string<char16_t> *)__p.__r_.__value_.__r.__words[0];
        }
        morphun::util::logToTopOfStackLogger((morphun::util *)1, 0, (uint64_t)p_p);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
    goto LABEL_74;
  }
  char v19 = 0;
  do
  {
    if (SHIBYTE(v17->__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v22 = v17->__r_.__value_.__r.__words[0];
      std::basic_string<char16_t>::size_type v20 = v17->__r_.__value_.__l.__size_;
      uint64_t v21 = v17->__r_.__value_.__r.__words[0] + 2 * v20;
    }
    else
    {
      std::basic_string<char16_t>::size_type v20 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
      uint64_t v21 = (uint64_t)v17 + 2 * v20;
      uint64_t v22 = (uint64_t)v17;
    }
    uint64_t v23 = v22 + 2 * v20 - 2 * SLOBYTE(v17[1].__r_.__value_.__l.__data_);
    std::basic_string<char16_t>::size_type v24 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if ((v24 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v25 = __str;
    }
    else {
      std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t> *)__str->__r_.__value_.__r.__words[0];
    }
    if ((v24 & 0x80u) != 0) {
      std::basic_string<char16_t>::size_type v24 = __str->__r_.__value_.__l.__size_;
    }
    int v26 = (std::basic_string<char16_t> *)((char *)v25 + 2 * v24 - 2);
    while (v21 != v23)
    {
      int v28 = *(unsigned __int16 *)(v21 - 2);
      v21 -= 2;
      int v27 = v28;
      int v29 = (unsigned __int16)v26->__r_.__value_.__s.__data_[0];
      int v26 = (std::basic_string<char16_t> *)((char *)v26 - 2);
      if (v27 != v29) {
        goto LABEL_54;
      }
    }
    int v30 = morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::levenshteinDistance((uint64_t *)__str, (uint64_t *)v17);
    int v31 = v30;
    if (v30 <= v10)
    {
      if (v30 < v10) {
        goto LABEL_52;
      }
      std::basic_string<char16_t>::size_type v32 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
      if ((v32 & 0x80u) == 0) {
        uint64_t v33 = a4;
      }
      else {
        uint64_t v33 = (std::basic_string<char16_t> *)a4->__r_.__value_.__r.__words[0];
      }
      if ((v32 & 0x80u) != 0) {
        std::basic_string<char16_t>::size_type v32 = a4->__r_.__value_.__l.__size_;
      }
      if (SHIBYTE(v17->__r_.__value_.__r.__words[2]) < 0)
      {
        int v35 = (std::basic_string<char16_t> *)v17->__r_.__value_.__r.__words[0];
        std::basic_string<char16_t>::size_type v34 = v17->__r_.__value_.__l.__size_;
      }
      else
      {
        std::basic_string<char16_t>::size_type v34 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
        int v35 = v17;
      }
      if (v32 >= v34) {
        std::basic_string<char16_t>::size_type v36 = v34;
      }
      else {
        std::basic_string<char16_t>::size_type v36 = v32;
      }
      if (v36)
      {
        do
        {
          unsigned int v37 = (unsigned __int16)v35->__r_.__value_.__s.__data_[0];
          unsigned int v38 = (unsigned __int16)v33->__r_.__value_.__s.__data_[0];
          if (v37 < v38) {
            goto LABEL_53;
          }
          if (v38 < v37) {
            goto LABEL_52;
          }
          int v35 = (std::basic_string<char16_t> *)((char *)v35 + 2);
          uint64_t v33 = (std::basic_string<char16_t> *)((char *)v33 + 2);
        }
        while (--v36);
      }
      if (v32 < v34) {
LABEL_52:
      }
        std::basic_string<char16_t>::operator=(a4, v17);
LABEL_53:
      char v19 = 1;
      int v10 = v31;
    }
LABEL_54:
    uint64_t v17 = (std::basic_string<char16_t> *)((char *)v17 + 32);
  }
  while (v17 != (std::basic_string<char16_t> *)v18);
  if ((v19 & 1) == 0) {
    goto LABEL_56;
  }
LABEL_74:
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D4811C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (*(char *)(v27 + 23) < 0) {
    operator delete(*(void **)v27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::levenshteinDistance(uint64_t *a1, uint64_t *a2)
{
  signed int v2 = *((unsigned __int8 *)a1 + 23);
  if ((v2 & 0x80u) != 0) {
    signed int v2 = *((_DWORD *)a1 + 2);
  }
  signed int v3 = *((unsigned __int8 *)a2 + 23);
  if ((v3 & 0x80u) != 0) {
    signed int v3 = *((_DWORD *)a2 + 2);
  }
  if (v2 <= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 <= v3) {
    long long v5 = a2;
  }
  else {
    long long v5 = a1;
  }
  if (v2 <= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v2;
  }
  if (v2 >= v3) {
    uint64_t v7 = v3;
  }
  else {
    uint64_t v7 = v2;
  }
  if (v7)
  {
    if (v6)
    {
      uint64_t v8 = (int)v7 + 1;
      if (v7 == -1)
      {
        int v9 = 0;
      }
      else
      {
        if ((v8 & 0x80000000) != 0) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        int v9 = (int *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((int)v7 + 1);
        bzero(v9, 4 * v8);
        uint64_t v10 = 0;
        do
        {
          v9[v10] = v10;
          ++v10;
        }
        while (v7 + 1 != v10);
      }
      if ((int)v6 >= 1)
      {
        uint64_t v11 = v9 + 1;
        int v12 = *v9;
        uint64_t v13 = 1;
        do
        {
          if (*((char *)v5 + 23) >= 0) {
            uint64_t v14 = v5;
          }
          else {
            uint64_t v14 = (uint64_t *)*v5;
          }
          int v15 = *((unsigned __int16 *)v14 + v13 - 1);
          int *v9 = v13;
          if ((int)v7 >= 1)
          {
            uint64_t v16 = 0;
            int v17 = v13;
            do
            {
              int v18 = v11[v16];
              if (*((char *)v4 + 23) >= 0) {
                char v19 = v4;
              }
              else {
                char v19 = (uint64_t *)*v4;
              }
              if (*((unsigned __int16 *)v19 + v16) != v15) {
                ++v12;
              }
              if (v18 + 1 >= v17 + 1) {
                ++v17;
              }
              else {
                int v17 = v18 + 1;
              }
              if (v12 < v17) {
                int v17 = v12;
              }
              v11[v16++] = v17;
              int v12 = v18;
            }
            while ((v7 + 1) - 1 != v16);
          }
          int v12 = v13++;
        }
        while (v13 != v6 + 1);
      }
      uint64_t v6 = v9[(int)v7];
      operator delete(v9);
    }
    else
    {
      return v7;
    }
  }
  return v6;
}

void *morphun::grammar::synthesis::FiGrammarSynthesizer_LemmaApproximator::getFallBackLemma@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = morphun::util::LocaleUtils::FINNISH((morphun::util::LocaleUtils *)a1);
  int isEndsWithVowel = morphun::dictionary::PhraseProperties::isEndsWithVowel(v4, a1);
  BOOL hasBackVowels = morphun::grammar::synthesis::FiGrammarSynthesizer::hasBackVowels(a1);
  if (isEndsWithVowel)
  {
    if (hasBackVowels)
    {
LABEL_3:
      uint64_t v7 = (__int16 *)"r";
      goto LABEL_7;
    }
    uint64_t v9 = *(unsigned __int8 *)(a1 + 23);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = *(void *)a1;
    }
    if ((v9 & 0x80u) != 0) {
      uint64_t v9 = *(void *)(a1 + 8);
    }
    int v11 = *(unsigned __int16 *)(v10 + 2 * v9 - 2);
    if (v11 <= 120)
    {
      if (v11 == 101)
      {
        uint64_t v7 = (__int16 *)"m";
      }
      else
      {
        if (v11 != 105) {
          goto LABEL_3;
        }
        uint64_t v7 = L"kiwi";
      }
    }
    else
    {
      switch(v11)
      {
        case 121:
          uint64_t v7 = L"rugby";
          break;
        case 228:
          uint64_t v7 = aSytk;
          break;
        case 246:
          uint64_t v7 = (__int16 *)&unk_1D2ED06B8;
          break;
        default:
          goto LABEL_3;
      }
    }
  }
  else if (hasBackVowels)
  {
    uint64_t v7 = L"jukebox";
  }
  else
  {
    uint64_t v7 = L"kennel";
  }
LABEL_7:

  return std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(a2, (char *)v7);
}

void morphun::grammar::synthesis::PlGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::PlGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"gender");
  operator new();
}

void sub_1D2D48774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

void morphun::dialog::language::ItCommonConceptFactory::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W4>, void *a4@<X8>)
{
  if (a3 == 1)
  {
    morphun::dialog::SpeakableString::operator+(a1, a2, a4);
  }
  else
  {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)&word_1D2ED0D7C);
    morphun::dialog::SpeakableString::SpeakableString(v9, (long long *)__p);
    morphun::dialog::SpeakableString::operator+(a1, (uint64_t)v9, v10);
    morphun::dialog::SpeakableString::operator+((uint64_t)v10, a2, a4);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1D2D4899C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory::quantify(morphun::dialog::language::ItCommonConceptFactory *this, const morphun::dialog::NumberConcept *a2, const morphun::dialog::SemanticFeatureConceptBase *a3)
{
  long long v14 = 0uLL;
  uint64_t v15 = 0;
  morphun::dialog::SpeakableString::SpeakableString(v16, &v14);
  if (*((_DWORD *)a2 + 4) == 1) {
    uint64_t v6 = (uint64_t)*((double *)a2 + 1);
  }
  else {
    uint64_t v6 = *((void *)a2 + 1);
  }
  if (v6 != 1) {
    goto LABEL_9;
  }
  if (!a3 || !*((void *)this + 94))
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v7 = (*(uint64_t (**)(const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a3 + 104))(a3);
  uint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = (long long *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 32))(v7);
    uint64_t v10 = (unsigned __int16 *)(*(uint64_t (**)(uint64_t))(*(void *)v8 + 32))(v8);
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)&v14, v9, v10);
    morphun::dialog::SpeakableString::operator=((uint64_t)v16, (uint64_t)&v14);
    (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
  }
  else
  {
LABEL_9:
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, (char *)L"cardinal-masculine");
    (*(void (**)(long long *__return_ptr, const morphun::dialog::NumberConcept *, void **))(*(void *)a2 + 200))(&v14, a2, __p);
    morphun::dialog::SpeakableString::operator=((uint64_t)v16, (uint64_t)&v14);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
  }
  morphun::dialog::CommonConceptFactoryImpl::quantify(this, a2, (const morphun::dialog::SpeakableString *)v16, a3);
}

void sub_1D2D48C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory::createAndList()
{
}

void sub_1D2D48E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  morphun::dialog::SemanticConceptList::~SemanticConceptList(v15, (void ***)&off_1F2A05F40);
  MEMORY[0x1D942B8B0](v15, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory::createOrList()
{
}

void sub_1D2D48F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ItCommonConceptFactory::~ItCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05928);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05928);
}

void morphun::dialog::language::FrCommonConceptFactory::quote(const morphun::dialog::SpeakableString *a1@<X1>, void *a2@<X8>)
{
  if ((*(unsigned int (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 48))(a1))
  {
    long long v5 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 32))(a1);
    std::operator+<char16_t>((uint64_t)&v8, word_1D2ED06EA, v5);
    std::basic_string<char16_t>::append(&v8, word_1D2ED06EE, 1uLL);
    std::basic_string<char16_t> __p = v8;
    memset(&v8, 0, sizeof(v8));
    morphun::dialog::SpeakableString::SpeakableString(a2, (long long *)&__p);
  }
  else
  {
    uint64_t v6 = (const void **)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 32))(a1);
    std::operator+<char16_t>((uint64_t)&v8, word_1D2ED06EA, v6);
    std::basic_string<char16_t>::append(&v8, word_1D2ED06EE, 1uLL);
    std::basic_string<char16_t> __p = v8;
    memset(&v8, 0, sizeof(v8));
    uint64_t v7 = (unsigned __int16 *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a1 + 40))(a1);
    morphun::dialog::SpeakableString::SpeakableString((uint64_t)a2, (long long *)&__p, v7);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D49178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::FrCommonConceptFactory::~FrCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05828);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05828);
}

uint64_t morphun::dialog::LocalizedCommonConceptFactoryProvider::getCommonConceptFactory(morphun::dialog::LocalizedCommonConceptFactoryProvider *this, const morphun::util::ULocale *a2)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (std::mutex *)((char *)this + 32);
  std::mutex::lock((std::mutex *)((char *)this + 32));
  long long v5 = (uint64_t **)((char *)this + 16);
  uint64_t v6 = (void *)*((void *)this + 2);
  if (v6)
  {
    uint64_t v7 = (uint64_t **)((char *)this + 16);
    do
    {
      BOOL v8 = std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)(v6 + 4), (uint64_t)a2);
      uint64_t v9 = v6 + 1;
      if (!v8)
      {
        uint64_t v9 = v6;
        uint64_t v7 = (uint64_t **)v6;
      }
      uint64_t v6 = (void *)*v9;
    }
    while (*v9);
    if (v7 != v5 && !std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)a2, (uint64_t)(v7 + 4)))
    {
      uint64_t v34 = (uint64_t)v7[20];
      goto LABEL_71;
    }
  }
  {
    operator new();
  }
  uint64_t v10 = morphun::dialog::constructCommonConceptFactory(morphun::util::ULocale const&)::ALIAS_MAP;
  npc<std::map<morphun::util::ULocale,char const*>>(morphun::dialog::constructCommonConceptFactory(morphun::util::ULocale const&)::ALIAS_MAP);
  char v13 = *(void **)(v10 + 8);
  uint64_t v11 = v10 + 8;
  int v12 = v13;
  if (!v13) {
    goto LABEL_16;
  }
  long long v14 = (void *)v11;
  do
  {
    BOOL v15 = std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)(v12 + 4), (uint64_t)a2);
    uint64_t v16 = v12 + 1;
    if (!v15)
    {
      uint64_t v16 = v12;
      long long v14 = v12;
    }
    int v12 = (void *)*v16;
  }
  while (*v16);
  if (v14 == (void *)v11
    || std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)a2, (uint64_t)(v14 + 4)))
  {
LABEL_16:
    long long v14 = (void *)v11;
  }
  if ((void *)(npc<std::map<morphun::util::ULocale,char const*>>(morphun::dialog::constructCommonConceptFactory(morphun::util::ULocale const&)::ALIAS_MAP)
                + 8) == v14)
  {
    if (*((char *)a2 + 31) >= 0) {
      int v17 = (char *)a2 + 8;
    }
    else {
      int v17 = (char *)*((void *)a2 + 1);
    }
  }
  else
  {
    int v17 = (char *)v14[20];
  }
  int v18 = 0;
  int v19 = 40;
  while (1)
  {
    int v20 = v18 + v19;
    if (v18 + v19 < 0 != __OFADD__(v18, v19)) {
      ++v20;
    }
    uint64_t v21 = (uint64_t)v20 >> 1;
    uint64_t v22 = (morphun::util::LocaleUtils *)strcmp(v17, (&morphun::dialog::constructCommonConceptFactory(morphun::util::ULocale const&)::COMMON_CONCEPT_FACTORY_CONSTRUCTORS)[2 * (v20 >> 1)]);
    if ((v22 & 0x80000000) == 0) {
      break;
    }
    int v19 = v21 - 1;
LABEL_29:
    if (v18 > v19)
    {
      uint64_t v23 = (void *)morphun::util::LocaleUtils::BASE_SUPPORTED_LOCALES(v22);
      std::map<std::string,std::vector<morphun::util::ULocale>>::map[abi:ne180100]((uint64_t)&v43, v23);
      std::string::basic_string[abi:ne180100]<0>(__p, v17);
      std::basic_string<char16_t>::size_type size = v43.__r_.__value_.__l.__size_;
      if (!v43.__r_.__value_.__l.__size_) {
        goto LABEL_40;
      }
      std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t> *)&v43.__r_.__value_.__r.__words[1];
      do
      {
        int v26 = v25;
        uint64_t v27 = (std::basic_string<char16_t>::size_type *)(size + 32);
        BOOL v28 = std::less<std::string>::operator()[abi:ne180100]((void *)(size + 32), __p);
        int v29 = (std::basic_string<char16_t>::size_type *)(size + 8);
        if (!v28)
        {
          int v29 = (std::basic_string<char16_t>::size_type *)size;
          std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t> *)size;
        }
        std::basic_string<char16_t>::size_type size = *v29;
      }
      while (*v29);
      if (v25 == (std::basic_string<char16_t> *)&v43.__r_.__value_.__r.__words[1]
        || (!v28 ? (p_std::basic_string<char16_t>::size_type size = v27) : (p_std::basic_string<char16_t>::size_type size = &v26[1].__r_.__value_.__l.__size_),
            std::less<std::string>::operator()[abi:ne180100](__p, p_size)))
      {
LABEL_40:
        std::basic_string<char16_t>::size_type v25 = (std::basic_string<char16_t> *)&v43.__r_.__value_.__r.__words[1];
      }
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (&v43.__r_.__value_.__r.__words[1] != (std::basic_string<char16_t>::size_type *)v25) {
        operator new();
      }
      uint64_t v34 = 0;
      std::__tree<std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<morphun::util::ULocale>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<morphun::util::ULocale>>>>::destroy((void *)v43.__r_.__value_.__l.__size_);
      goto LABEL_61;
    }
  }
  if (v22)
  {
    int v18 = v21 + 1;
    goto LABEL_29;
  }
  if (morphun::util::gLogLevel <= 2)
  {
    (**(void (***)(std::basic_string<char16_t> *__return_ptr, const morphun::util::ULocale *))a2)(&v43, a2);
    std::basic_string<char16_t>::insert(&v43, (std::basic_string<char16_t>::size_type)&unk_1D2ED07A2, (const std::basic_string<char16_t>::value_type *)0x1D, v31);
    std::basic_string<char16_t> v44 = v43;
    memset(&v43, 0, sizeof(v43));
    std::basic_string<char16_t>::append(&v44, word_1D2ED07DE, 0x29uLL);
    __p[0] = v44;
    memset(&v44, 0, sizeof(v44));
    if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v32 = __p;
    }
    else {
      std::basic_string<char16_t>::size_type v32 = (std::basic_string<char16_t> *)__p[0].__r_.__value_.__r.__words[0];
    }
    if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::basic_string<char16_t>::size_type v33 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::basic_string<char16_t>::size_type v33 = __p[0].__r_.__value_.__l.__size_;
    }
    morphun::util::Logger::infoComponent((uint64_t)&unk_1D2ED0756, v32, v33);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v34 = ((uint64_t (*)(const morphun::util::ULocale *))(&morphun::dialog::constructCommonConceptFactory(morphun::util::ULocale const&)::COMMON_CONCEPT_FACTORY_CONSTRUCTORS)[2 * v21 + 1])(a2);
LABEL_61:
  if (!v34)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    (**(void (***)(std::basic_string<char16_t> *__return_ptr, const morphun::util::ULocale *))a2)(&v44, a2);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)__p, &v44, word_1D2ED06F2);
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)__p);
  }
  int v35 = *v5;
  std::basic_string<char16_t>::size_type v36 = (uint64_t **)((char *)this + 16);
  unsigned int v37 = (uint64_t **)((char *)this + 16);
  if (*v5)
  {
    while (1)
    {
      while (1)
      {
        std::basic_string<char16_t>::size_type v36 = (uint64_t **)v35;
        uint64_t v38 = (uint64_t)(v35 + 4);
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)a2, (uint64_t)(v35 + 4))) {
          break;
        }
        int v35 = *v36;
        unsigned int v37 = v36;
        if (!*v36) {
          goto LABEL_68;
        }
      }
      if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](v38, (uint64_t)a2)) {
        break;
      }
      unsigned int v37 = v36 + 1;
      int v35 = v36[1];
      if (!v35) {
        goto LABEL_68;
      }
    }
  }
  else
  {
LABEL_68:
    int v39 = (uint64_t *)operator new(0xA8uLL);
    __p[0].__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v39;
    __p[0].__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)this + 16;
    LOBYTE(__p[0].__r_.__value_.__r.__words[2]) = 0;
    morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v39 + 4), a2);
    v39[20] = v34;
    LOBYTE(__p[0].__r_.__value_.__r.__words[2]) = 1;
    *int v39 = 0;
    v39[1] = 0;
    v39[2] = (uint64_t)v36;
    std::basic_string<char16_t> *v37 = v39;
    uint64_t v40 = **((void **)this + 1);
    if (v40)
    {
      *((void *)this + 1) = v40;
      int v39 = *v37;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)this + 2), v39);
    ++*((void *)this + 3);
    __p[0].__r_.__value_.__r.__words[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)__p);
  }
LABEL_71:
  std::mutex::unlock(v4);
  return v34;
}

void sub_1D2D49A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, morphun::dialog::SpeakableString *a10, morphun::dialog::SpeakableString *a11, morphun::dialog::SpeakableString *a12, morphun::dialog::SemanticFeatureModel *a13, morphun::util::ULocale *a14, std::mutex *a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  MEMORY[0x1D942B8B0](v34, 0x1020C4062D53EE8);
  std::mutex::unlock(a15);
  _Unwind_Resume(a1);
}

uint64_t **std::map<morphun::util::ULocale,char const*>::map[abi:ne180100](uint64_t **a1, const morphun::util::ULocale *a2, uint64_t a3)
{
  a1[1] = 0;
  uint64_t v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  if (a3)
  {
    long long v5 = a2;
    uint64_t v6 = (const morphun::util::ULocale *)((char *)a2 + 136 * a3);
    while (1)
    {
      uint64_t v7 = a1[1];
      BOOL v8 = v4;
      if (*a1 != v4)
      {
        uint64_t v9 = a1[1];
        uint64_t v10 = v4;
        if (v7)
        {
          do
          {
            BOOL v8 = v9;
            uint64_t v9 = (uint64_t *)v9[1];
          }
          while (v9);
        }
        else
        {
          do
          {
            BOOL v8 = (uint64_t *)v10[2];
            BOOL v11 = *v8 == (void)v10;
            uint64_t v10 = v8;
          }
          while (v11);
        }
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)(v8 + 4), (uint64_t)v5)) {
          break;
        }
      }
      int v12 = (uint64_t **)v4;
      char v13 = (uint64_t **)v4;
      if (!v7) {
        goto LABEL_19;
      }
      char v13 = (uint64_t **)(v8 + 1);
      if (!v8[1])
      {
        int v12 = (uint64_t **)v8;
LABEL_19:
        uint64_t v16 = (uint64_t *)operator new(0xA8uLL);
        v19[0] = v16;
        v19[1] = v4;
        char v20 = 0;
        morphun::util::ULocale::ULocale((morphun::util::ULocale *)(v16 + 4), v5);
        v16[20] = *((void *)v5 + 16);
        char v20 = 1;
        *uint64_t v16 = 0;
        v16[1] = 0;
        void v16[2] = (uint64_t)v12;
        void *v13 = v16;
        int v17 = (uint64_t *)**a1;
        if (v17)
        {
          *a1 = v17;
          uint64_t v16 = *v13;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v16);
        a1[2] = (uint64_t *)((char *)a1[2] + 1);
        v19[0] = 0;
        std::unique_ptr<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,void *>>>>::reset[abi:ne180100]((uint64_t)v19);
      }
LABEL_22:
      long long v5 = (const morphun::util::ULocale *)((char *)v5 + 136);
      if (v5 == v6) {
        return a1;
      }
    }
    int v12 = (uint64_t **)v4;
    char v13 = (uint64_t **)v4;
    if (v7)
    {
      long long v14 = v7;
      while (1)
      {
        while (1)
        {
          int v12 = (uint64_t **)v14;
          uint64_t v15 = (uint64_t)(v14 + 4);
          if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100]((uint64_t)v5, (uint64_t)(v14 + 4))) {
            break;
          }
          long long v14 = *v12;
          char v13 = v12;
          if (!*v12) {
            goto LABEL_19;
          }
        }
        if (!std::less<morphun::util::ULocale>::operator()[abi:ne180100](v15, (uint64_t)v5)) {
          goto LABEL_22;
        }
        char v13 = v12 + 1;
        long long v14 = v12[1];
        if (!v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  return a1;
}

void sub_1D2D49EF0(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(v1);
  _Unwind_Resume(a1);
}

uint64_t npc<std::map<morphun::util::ULocale,char const*>>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D49F68(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::YueCommonConceptFactory>()
{
}

void sub_1D2D4A004(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::ViCommonConceptFactory>()
{
}

void sub_1D2D4A0B0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::UkCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4A274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::TrCommonConceptFactory>()
{
}

void sub_1D2D4A38C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::ThCommonConceptFactory>()
{
}

void sub_1D2D4A438(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::SvCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4A5F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a10);
  for (uint64_t i = 48; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)&a18 + i);
  if (a17 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v23, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::SkCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4A830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::RuCommonConceptFactory>()
{
}

void sub_1D2D4AA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(v15, (void **)&off_1F2A05B68);
  MEMORY[0x1D942B8B0](v15, 0x10F3C40E3187E5ELL);
  _Unwind_Resume(a1);
}

void sub_1D2D4AAB4()
{
}

void morphun::dialog::constructor<morphun::dialog::language::RoCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4AC5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::PtCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4AE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 48; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::PlCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4B080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::NlCommonConceptFactory>()
{
}

void sub_1D2D4B198(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::NbCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4B35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::LtCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4B560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 48; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::KoCommonConceptFactory>()
{
}

void sub_1D2D4B668(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::KkCommonConceptFactory>()
{
}

void sub_1D2D4B714(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::JaCommonConceptFactory>()
{
}

void sub_1D2D4B7C0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::ItCommonConceptFactory>()
{
}

void sub_1D2D4B8D4(_Unwind_Exception *a1)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(v1, (void **)&off_1F2A05928);
  MEMORY[0x1D942B8B0](v1, 0x10F3C40EABB763BLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::IsCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4BAB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::MsCommonConceptFactory>()
{
}

void sub_1D2D4BBC8(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::HuCommonConceptFactory>()
{
}

void sub_1D2D4BC74(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::HrCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4BE38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::HiCommonConceptFactory>()
{
}

void sub_1D2D4BF50(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::HeCommonConceptFactory>()
{
}

void sub_1D2D4C190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, long long a10, int a11, __int16 a12, char a13, char a14, long long __dst, int a16, __int16 a17, char a18, char a19, long long __p,int a21,__int16 a22,char a23,char a24)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    exception = __cxa_allocate_exception(0x68uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, "/");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "m");
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&a10, "/");
    morphun::exception::MissingResourceException::MissingResourceException((uint64_t)exception, &__p, &__dst, &a10);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*(void **)(v24 + 760));
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl((void **)v24, (void **)&off_1F2A05868);
  MEMORY[0x1D942B8B0](v24, 0x10F3C40CB53AF93);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::FrCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4C484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 48; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::FiCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4C900(_Unwind_Exception *a1)
{
  __cxa_free_exception(v2);
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(v1, (void **)&off_1F2A057E8);
  MEMORY[0x1D942B8B0](v1, 0x10F3C40B3EB4615);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::EtCommonConceptFactory>()
{
}

void sub_1D2D4CABC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::EsCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4CC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 48; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::EnCommonConceptFactory>()
{
}

void sub_1D2D4CD5C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::ElCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4CF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::DeCommonConceptFactory>()
{
}

void sub_1D2D4D0F8(_Unwind_Exception *a1)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(v1, (void **)&off_1F2A056E8);
  MEMORY[0x1D942B8B0](v1, 0x10F3C40EABB1690);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::DaCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4D2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 48; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::CsCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4D4CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::ZhCommonConceptFactory>()
{
}

void sub_1D2D4D5E4(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::CaCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4D77C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 48; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::BgCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4D99C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,std::basic_string<char16_t>>>>::destroy(a11);
  for (uint64_t i = 96; i != -48; i -= 48)
    std::pair<std::basic_string<char16_t> const,std::basic_string<char16_t>>::~pair((uint64_t)(&a19 + i));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C4083EFF29ELL);
  _Unwind_Resume(a1);
}

void morphun::dialog::constructor<morphun::dialog::language::ArCommonConceptFactory>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D4DC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(v24, (void **)&off_1F2A055A8);
  MEMORY[0x1D942B8B0](v24, 0x10F3C40EABB763BLL);
  _Unwind_Resume(a1);
}

void morphun::dialog::LocalizedCommonConceptFactoryProvider::~LocalizedCommonConceptFactoryProvider(morphun::dialog::LocalizedCommonConceptFactoryProvider *this)
{
  JUMPOUT(0x1D942B8B0);
}

{
}

void morphun::dialog::LocalizedCommonConceptFactoryProvider::~LocalizedCommonConceptFactoryProvider(morphun::dialog::LocalizedCommonConceptFactoryProvider *this, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v3 - 56)) = a2[1];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[2];
  uint64_t v4 = (char *)*((void *)this + 1);
  long long v5 = (char *)this + 16;
  if (v4 != (char *)this + 16)
  {
    do
    {
      uint64_t v6 = *((void *)v4 + 20);
      if (v6) {
        (*(void (**)(uint64_t))(*(void *)v6 + 16))(v6);
      }
      uint64_t v7 = (char *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          BOOL v8 = v7;
          uint64_t v7 = *(char **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          BOOL v8 = (char *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != v5);
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 32));
  std::__tree<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::__map_value_compare<morphun::util::ULocale,std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>,std::less<morphun::util::ULocale>,true>,std::allocator<std::__value_type<morphun::util::ULocale,morphun::analysis::ConfigurableAnalyzer *>>>::destroy(*((void ***)this + 2));
}

double morphun::dialog::LocalizedCommonConceptFactoryProvider::LocalizedCommonConceptFactoryProvider(morphun::dialog::LocalizedCommonConceptFactoryProvider *this, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v2 - 56)) = a2[1];
  *(void *)((char *)this + *(void *)(*(void *)this - 40)) = a2[2];
  *((void *)this + 2) = 0;
  *((void *)this + 1) = (char *)this + 16;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 850045863;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double morphun::dialog::LocalizedCommonConceptFactoryProvider::LocalizedCommonConceptFactoryProvider(morphun::dialog::LocalizedCommonConceptFactoryProvider *this)
{
  *((void *)this + 2) = 0;
  *(void *)this = &off_1F2A09A00;
  *((void *)this + 1) = (char *)this + 16;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 850045863;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

void virtual thunk to'morphun::dialog::LocalizedCommonConceptFactoryProvider::~LocalizedCommonConceptFactoryProvider(morphun::dialog::LocalizedCommonConceptFactoryProvider *this)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

void virtual thunk to'morphun::dialog::LocalizedCommonConceptFactoryProvider::~LocalizedCommonConceptFactoryProvider(void *a1)
{
}

{
  uint64_t vars8;

  JUMPOUT(0x1D942B8B0);
}

uint64_t virtual thunk to'morphun::dialog::LocalizedCommonConceptFactoryProvider::getCommonConceptFactory(morphun::dialog::LocalizedCommonConceptFactoryProvider *this, const morphun::util::ULocale *a2)
{
  return morphun::dialog::LocalizedCommonConceptFactoryProvider::getCommonConceptFactory((morphun::dialog::LocalizedCommonConceptFactoryProvider *)((char *)this + *(void *)(*(void *)this - 48)), a2);
}

uint64_t morphun::dialog::LocalizedCommonConceptFactoryProvider::getDefaultCommonConceptFactoryProvider(morphun::dialog::LocalizedCommonConceptFactoryProvider *this)
{
  {
    operator new();
  }
  return morphun::dialog::LocalizedCommonConceptFactoryProvider::getDefaultCommonConceptFactoryProvider(void)::DEFAULT_LOCALIZED_COMMON_CONCEPT_FACTORY_PROVIDER;
}

void sub_1D2D4E190(_Unwind_Exception *a1)
{
}

void morphun::grammar::synthesis::HuGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::HuGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L"count");
  operator new();
}

void sub_1D2D4E370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v33 = 0;
  while (1)
  {
    if (*(&a31 + v33) < 0) {
      operator delete(*(void **)((char *)&a26 + v33));
    }
    v33 -= 24;
    if (v33 == -48)
    {
      MEMORY[0x1D942B8B0](v31, 0x10F3C40BE507067);
      if (a17 < 0) {
        operator delete(__p);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t **com::apple::siri::tokenizer::data::config_cs::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  long long v3 = xmmword_1E696E008;
  uint64_t v4 = 0x1D2ED0832;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)&v3, 1);
}

uint64_t **com::apple::siri::tokenizer::data::config_nb::getContent@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v3[0] = xmmword_1E696E020;
  v3[1] = unk_1E696E030;
  void v3[2] = xmmword_1E696E040;
  return std::map<std::u16string_view,char16_t const*>::map[abi:ne180100](a1, (unsigned __int16 **)v3, 2);
}

morphun::analysis::TokenStream *morphun::analysis::TokenStream::TokenStream(morphun::analysis::TokenStream *this, uint64_t *a2)
{
  morphun::analysis::TokenStream::DEFAULT_TOKEN_ATTRIBUTE_FACTORY(this);
  morphun::analysis::util::AttributeSource::AttributeSource(this, (const morphun::analysis::util::AttributeFactory *)(a2 + 1), morphun::analysis::TokenStream::DEFAULT_TOKEN_ATTRIBUTE_FACTORY(void)::DEFAULT_TOKEN_ATTRIBUTE_FACTORY_);
  uint64_t v4 = *a2;
  *(void *)this = *a2;
  *(void *)((char *)this + *(void *)(v4 - 40)) = a2[3];
  return this;
}

uint64_t *morphun::analysis::TokenStream::DEFAULT_TOKEN_ATTRIBUTE_FACTORY(morphun::analysis::TokenStream *this)
{
  v8[4] = *MEMORY[0x1E4F143B8];
  {
    if (v2)
    {
      morphun::analysis::util::AttributeFactory::DEFAULT_ATTRIBUTE_FACTORY(v2);
      v5[0] = &unk_1F2A11CC8;
      v5[1] = morphun::analysis::tokenattributes::PackedTokenAttributeImpl::create;
      uint64_t v5[3] = v5;
      v6[0] = &unk_1F2A11C18;
      v6[1] = morphun::analysis::tokenattributes::KeywordAttributeImpl::create;
      void v6[3] = v6;
      v7[0] = &unk_1F2A11CC8;
      v7[1] = morphun::analysis::tokenattributes::PackedTokenAttributeImpl::create;
      uint64_t v7[3] = v7;
      v8[0] = &unk_1F2A11CC8;
      v8[1] = morphun::analysis::tokenattributes::PackedTokenAttributeImpl::create;
      void v8[3] = v8;
      std::unordered_map<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>::unordered_map((uint64_t)&v3, (uint64_t *)&v4, 4);
      morphun::analysis::util::AttributeFactory::getStaticImplementation();
    }
  }
  return &morphun::analysis::TokenStream::DEFAULT_TOKEN_ATTRIBUTE_FACTORY(void)::DEFAULT_TOKEN_ATTRIBUTE_FACTORY_;
}

void sub_1D2D4E7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table((uint64_t)&a9);
  for (uint64_t i = 128; i != -32; i -= 40)
    std::__function::__value_func<morphun::analysis::util::AttributeImpl * ()(void)>::~__value_func[abi:ne180100](&a14 + i);
  _Unwind_Resume(a1);
}

uint64_t std::unordered_map<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>::unordered_map(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = a2;
    int v29 = &a2[5 * a3];
    int v30 = (void *)(a1 + 16);
    do
    {
      uint64_t v6 = *v5;
      uint64_t v7 = *(void *)(*v5 + 8);
      unint64_t v8 = v7;
      if (v7 < 0)
      {
        BOOL v9 = (unsigned __int8 *)(v7 & 0x7FFFFFFFFFFFFFFFLL);
        uint64_t v10 = 5381;
        do
        {
          unint64_t v8 = v10;
          unsigned int v11 = *v9++;
          uint64_t v10 = (33 * v10) ^ v11;
        }
        while (v11);
      }
      unint64_t v12 = *(void *)(a1 + 8);
      if (v12)
      {
        uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
        v13.i16[0] = vaddlv_u8(v13);
        unint64_t v14 = v13.u32[0];
        if (v13.u32[0] > 1uLL)
        {
          unint64_t v3 = v8;
          if (v8 >= v12) {
            unint64_t v3 = v8 % v12;
          }
        }
        else
        {
          unint64_t v3 = (v12 - 1) & v8;
        }
        uint64_t v15 = *(void **)(*(void *)a1 + 8 * v3);
        if (v15)
        {
          uint64_t v16 = (void *)*v15;
          if (*v15)
          {
            do
            {
              unint64_t v17 = v16[1];
              if (v17 == v8)
              {
                if (std::type_info::operator==[abi:ne180100](*(void *)(v16[2] + 8), v7)) {
                  goto LABEL_44;
                }
              }
              else
              {
                if (v14 > 1)
                {
                  if (v17 >= v12) {
                    v17 %= v12;
                  }
                }
                else
                {
                  v17 &= v12 - 1;
                }
                if (v17 != v3) {
                  break;
                }
              }
              uint64_t v16 = (void *)*v16;
            }
            while (v16);
          }
        }
      }
      int v18 = operator new(0x38uLL);
      v31[0] = v18;
      v31[1] = v30;
      char v32 = 0;
      *int v18 = 0;
      v18[1] = v8;
      v18[2] = v6;
      std::__function::__value_func<morphun::analysis::util::AttributeImpl * ()(void)>::__value_func[abi:ne180100]((uint64_t)(v18 + 3), (uint64_t)(v5 + 1));
      char v32 = 1;
      float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
      float v20 = *(float *)(a1 + 32);
      if (!v12 || (float)(v20 * (float)v12) < v19)
      {
        BOOL v21 = (v12 & (v12 - 1)) != 0;
        if (v12 < 3) {
          BOOL v21 = 1;
        }
        unint64_t v22 = v21 | (2 * v12);
        unint64_t v23 = vcvtps_u32_f32(v19 / v20);
        if (v22 <= v23) {
          size_t v24 = v23;
        }
        else {
          size_t v24 = v22;
        }
        std::__hash_table<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,morphun::analysis::util::AttributeImpl *>>>::__rehash<true>(a1, v24);
        unint64_t v12 = *(void *)(a1 + 8);
        if ((v12 & (v12 - 1)) != 0)
        {
          if (v8 >= v12) {
            unint64_t v3 = v8 % v12;
          }
          else {
            unint64_t v3 = v8;
          }
        }
        else
        {
          unint64_t v3 = (v12 - 1) & v8;
        }
      }
      uint64_t v25 = *(void *)a1;
      int v26 = *(void **)(*(void *)a1 + 8 * v3);
      if (v26)
      {
        *int v18 = *v26;
      }
      else
      {
        *int v18 = *v30;
        void *v30 = v18;
        *(void *)(v25 + 8 * v3) = v30;
        if (!*v18) {
          goto LABEL_43;
        }
        unint64_t v27 = *(void *)(*v18 + 8);
        if ((v12 & (v12 - 1)) != 0)
        {
          if (v27 >= v12) {
            v27 %= v12;
          }
        }
        else
        {
          v27 &= v12 - 1;
        }
        int v26 = (void *)(*(void *)a1 + 8 * v27);
      }
      *int v26 = v18;
LABEL_43:
      v31[0] = 0;
      ++*(void *)(a1 + 24);
      std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)v31);
LABEL_44:
      v5 += 5;
    }
    while (v5 != v29);
  }
  return a1;
}

void sub_1D2D4EA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  std::__hash_table<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::__unordered_map_hasher<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::hash<std::type_index>,std::equal_to<std::type_index>,true>,std::__unordered_map_equal<std::type_index,std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>,std::equal_to<std::type_index>,std::hash<std::type_index>,true>,std::allocator<std::__hash_value_type<std::type_index,std::function<morphun::analysis::util::AttributeImpl * ()(void)>>>>::~__hash_table(v4);
  _Unwind_Resume(a1);
}

morphun::analysis::util::AttributeSource *morphun::analysis::TokenStream::TokenStream(morphun::analysis::TokenStream *this, morphun::analysis::util::AttributeSource *a2, uint64_t a3)
{
  double result = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::util::AttributeSource *)((char *)a2 + 8), a3);
  uint64_t v5 = *(void *)a2;
  *(void *)double result = *(void *)a2;
  *(void *)((char *)result + *(void *)(v5 - 40)) = *((void *)a2 + 3);
  return result;
}

morphun::analysis::util::AttributeSource *morphun::analysis::TokenStream::TokenStream(morphun::analysis::TokenStream *this, morphun::analysis::util::AttributeFactory *a2, uint64_t a3)
{
  double result = morphun::analysis::util::AttributeSource::AttributeSource(this, (morphun::analysis::util::AttributeFactory *)((char *)a2 + 8), a3);
  uint64_t v5 = *(void *)a2;
  *(void *)double result = *(void *)a2;
  *(void *)((char *)result + *(void *)(v5 - 40)) = *((void *)a2 + 3);
  return result;
}

void morphun::analysis::TokenStream::~TokenStream(morphun::analysis::TokenStream *this, uint64_t a2)
{
}

morphun::dictionary::metadata::StringContainer *morphun::dictionary::metadata::StringContainer::StringContainer(morphun::dictionary::metadata::StringContainer *this, morphun::util::MemoryMappedFile *a2)
{
  LOBYTE(v8) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v8);
  unsigned int v4 = (char)v8;
  *(unsigned char *)this = (_BYTE)v8;
  *((void *)this + 1) = 0;
  EncodingName = morphun::dictionary::metadata::MarisaTrie<signed char>::getEncodingName(v4);
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::StringContainer *)((char *)this + 16), EncodingName);
  *((_DWORD *)this + 8) = 0;
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v8);
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v8);
  morphun::util::MemoryMappedFile::read<signed char>(a2, &v8);
  int v9 = 0;
  morphun::util::MemoryMappedFile::read<int>(a2, &v9);
  int v6 = v9;
  if (v9 >= 1)
  {
    unint64_t v8 = 0;
    morphun::util::MemoryMappedFile::read<char *>(a2, &v8, v9);
    marisa::Trie::map((marisa::grimoire::trie::LoudsTrie **)this + 1, v8, v6);
    *((_DWORD *)this + 8) = marisa::Trie::num_keys(*((marisa::Trie **)this + 1));
  }
  return this;
}

void sub_1D2D4ED00(_Unwind_Exception *a1)
{
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(v1);
  _Unwind_Resume(a1);
}

char *morphun::dictionary::metadata::MarisaTrie<signed char>::getEncodingName(unsigned int a1)
{
  if (a1 >= 3)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    morphun::util::StringUtils::to_u16string((morphun::util::StringUtils *)(int)a1, &v5);
    std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v6, "U", &v5, v4);
    morphun::exception::IllegalStateException::IllegalStateException((uint64_t)exception, &v6);
  }
  return (&off_1E696E050)[a1];
}

void sub_1D2D4EDDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v20);
  goto LABEL_8;
}

uint64_t morphun::dictionary::metadata::StringContainer::StringContainer(uint64_t a1, void *a2, uint64_t a3)
{
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::CharsetConverter *)&v43, "BOCU1");
  __p[0] = 0;
  __p[1] = 0;
  *(void *)&v45[0] = 0;
  std::basic_string<char16_t> v5 = a2 + 1;
  long long v6 = (void *)*a2;
  if ((void *)*a2 == a2 + 1)
  {
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    unint64_t v18 = 0;
  }
  else
  {
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = v6[5];
      morphun::dictionary::metadata::CharsetConverter::encode((uint64_t)&v43, (std::string *)__p, v6[4], v10);
      unsigned int v11 = (void *)BYTE7(v45[0]);
      unint64_t v12 = __p[1];
      morphun::util::StringViewUtils::convert((std::string *)__p, v6[4], v6[5]);
      if ((char)v11 >= 0) {
        uint8x8_t v13 = v11;
      }
      else {
        uint8x8_t v13 = v12;
      }
      unint64_t v14 = BYTE7(v45[0]);
      if (SBYTE7(v45[0]) < 0) {
        unint64_t v14 = (unint64_t)__p[1];
      }
      uint64_t v15 = (void *)v6[1];
      if (v15)
      {
        do
        {
          uint64_t v16 = v15;
          uint64_t v15 = (void *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          uint64_t v16 = (void *)v6[2];
          BOOL v17 = *v16 == (void)v6;
          long long v6 = v16;
        }
        while (!v17);
      }
      v9 += v10;
      v7 += (unint64_t)v13;
      v8 += v14;
      long long v6 = v16;
    }
    while (v16 != v5);
    unint64_t v18 = 2 * v9;
    if (SBYTE7(v45[0]) < 0) {
      operator delete(__p[0]);
    }
  }
  if (v18 >= v7 || v18 >= v8) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  if (v7 >= v18 || v7 >= v8) {
    unsigned int v22 = v20;
  }
  else {
    unsigned int v22 = 0;
  }
  *(unsigned char *)a1 = v22;
  *(void *)(a1 + 8) = 0;
  EncodingName = morphun::dictionary::metadata::MarisaTrie<signed char>::getEncodingName(v22);
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::CharsetConverter *)(a1 + 16), EncodingName);
  *(_DWORD *)(a1 + 32) = a2[2];
  npc<std::map<std::u16string_view,int>>(a3);
  if (*(void *)(a3 + 16))
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "T");
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)__p);
  }
  uint64_t v47 = 0;
  memset(v46, 0, sizeof(v46));
  *(_OWORD *)std::basic_string<char16_t> __p = 0u;
  memset(v45, 0, sizeof(v45));
  memset(&v43, 0, sizeof(v43));
  size_t v24 = (void *)*a2;
  if ((void *)*a2 != v5)
  {
    do
    {
      morphun::dictionary::metadata::CharsetConverter::encode(a1 + 16, &v43, v24[4], v24[5]);
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v26 = &v43;
      }
      else {
        int v26 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        size_t size = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      }
      else {
        size_t size = v43.__r_.__value_.__l.__size_;
      }
      marisa::Keyset::push_back((uint64_t *)__p, (const char *)v26, size, v25);
      BOOL v28 = (void *)v24[1];
      if (v28)
      {
        do
        {
          int v29 = v28;
          BOOL v28 = (void *)*v28;
        }
        while (v28);
      }
      else
      {
        do
        {
          int v29 = (void *)v24[2];
          BOOL v17 = *v29 == (void)v24;
          size_t v24 = v29;
        }
        while (!v17);
      }
      size_t v24 = v29;
    }
    while (v29 != v5);
  }
  marisa::Trie::build((marisa::grimoire::trie::LoudsTrie **)(a1 + 8), (marisa::Keyset *)__p);
  if (*(_DWORD *)(a1 + 32) != marisa::Trie::num_keys(*(marisa::Trie **)(a1 + 8)))
  {
    uint64_t v40 = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Number of keys in string container should match with size of data");
    morphun::exception::IllegalStateException::IllegalStateException((uint64_t)v40, &__dst);
  }
  int v30 = (void *)*a2;
  if ((void *)*a2 != v5)
  {
    unint64_t v31 = 0;
    do
    {
      npc<std::map<std::u16string_view,int>>(a3);
      int v32 = *(_DWORD *)(*(void *)(*(void *)&v46[0] + ((v31 >> 5) & 0x7FFFFFFFFFFFFF8))
                      + 16 * v31
                      + 12);
      uint64_t v33 = (uint64_t **)std::__tree<std::u16string_view>::__find_equal<std::u16string_view>(a3, &__dst, (unsigned __int16 *)v30[4], v30[5]);
      if (!*v33)
      {
        uint64_t v34 = v33;
        int v35 = operator new(0x38uLL);
        v35[2] = *((_OWORD *)v30 + 2);
        *((_DWORD *)v35 + 12) = v32;
        std::__tree<std::u16string_view>::__insert_node_at((uint64_t **)a3, __dst, v34, (uint64_t *)v35);
      }
      std::basic_string<char16_t>::size_type v36 = (void *)v30[1];
      if (v36)
      {
        do
        {
          unsigned int v37 = v36;
          std::basic_string<char16_t>::size_type v36 = (void *)*v36;
        }
        while (v36);
      }
      else
      {
        do
        {
          unsigned int v37 = (void *)v30[2];
          BOOL v17 = *v37 == (void)v30;
          int v30 = v37;
        }
        while (!v17);
      }
      ++v31;
      int v30 = v37;
    }
    while (v37 != v5);
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
  marisa::scoped_array<marisa::scoped_array<marisa::Key>>::~scoped_array((uint64_t *)v46);
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)v45 + 1);
  marisa::scoped_array<marisa::scoped_array<char>>::~scoped_array((uint64_t *)__p);
  return a1;
}

void sub_1D2D4F218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v31 & 1) == 0)
    {
LABEL_6:
      if (a22 < 0) {
        operator delete(a17);
      }
      marisa::Keyset::~Keyset((marisa::Keyset *)&a23);
      marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(v28);
      _Unwind_Resume(a1);
    }
  }
  else if (!v31)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v30);
  goto LABEL_6;
}

void sub_1D2D4F350(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

morphun::dictionary::metadata::StringContainer *morphun::dictionary::metadata::StringContainer::StringContainer(morphun::dictionary::metadata::StringContainer *this)
{
  *(unsigned char *)this = 1;
  *((void *)this + 1) = 0;
  EncodingName = morphun::dictionary::metadata::MarisaTrie<signed char>::getEncodingName(1u);
  morphun::dictionary::metadata::CharsetConverter::CharsetConverter((morphun::dictionary::metadata::StringContainer *)((char *)this + 16), EncodingName);
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D2D4F3B4(_Unwind_Exception *a1)
{
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(v1);
  _Unwind_Resume(a1);
}

void morphun::dictionary::metadata::StringContainer::~StringContainer(marisa::grimoire::trie::LoudsTrie **this)
{
}

{
  marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1);
}

uint64_t morphun::dictionary::metadata::StringContainer::write(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  char v20 = 0;
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    exception = __cxa_allocate_exception(0x20uLL);
    void *exception = &unk_1F2A081F8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
    exception[2] = 0x100000090;
    exception[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:144: MARI"
                   "SA_STATE_ERROR: trie_.get() == NULL";
  }
  if (*(void *)(v2 + 264))
  {
    uint64_t v3 = MEMORY[0x1E4FBA498] + 64;
    v19[0] = MEMORY[0x1E4FBA498] + 64;
    std::basic_string<char16_t>::size_type v4 = (uint64_t *)MEMORY[0x1E4FBA418];
    uint64_t v5 = *(void *)(MEMORY[0x1E4FBA418] + 16);
    uint64_t v14 = *(void *)(MEMORY[0x1E4FBA418] + 8);
    *(uint64_t *)((char *)&v15[-1] + *(void *)(v14 - 24)) = v5;
    long long v6 = (std::ios_base *)((char *)&v15[-1] + *(void *)(v14 - 24));
    std::ios_base::init(v6, v15);
    uint64_t v7 = MEMORY[0x1E4FBA498] + 24;
    v6[1].__vftable = 0;
    v6[1].__fmtflags_ = -1;
    uint64_t v14 = v7;
    v19[0] = v3;
    std::streambuf::basic_streambuf();
    v15[0] = MEMORY[0x1E4FBA470] + 16;
    *(_OWORD *)std::basic_string<char16_t> __p = 0u;
    long long v17 = 0u;
    int v18 = 16;
    unint64_t v8 = *(marisa::grimoire::trie::LoudsTrie **)(a1 + 8);
    if (!v8)
    {
      uint8x8_t v13 = __cxa_allocate_exception(0x20uLL);
      void *v13 = &unk_1F2A081F8;
      v13[1] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc";
      v13[2] = 0x1000000D5;
      uint64_t v13[3] = "/Library/Caches/com.apple.xbs/Sources/Morphun/ext/lib/Marisa/marisa-trie/lib/marisa/trie.cc:213: MARISA_S"
               "TATE_ERROR: trie.trie_.get() == NULL";
    }
    uint64_t v9 = MEMORY[0x1E4FBA470] + 16;
    int v21 = 0;
    int v22 = -1;
    unint64_t v23 = &v14;
    char v24 = 0;
    marisa::grimoire::io::Writer::write_data((uint64_t)&v21, "We love Marisa.", 0x10uLL);
    marisa::grimoire::trie::LoudsTrie::write_(v8, (marisa::grimoire::io::Writer *)&v21);
    uint64_t v10 = (char *)&v15[-1] + *(void *)(v14 - 24);
    if ((v10[32] & 5) == 0) {
      (*(void (**)(void **__return_ptr))(**((void **)v10 + 5) + 32))(&v21);
    }
    std::ostream::write();
    std::stringbuf::str();
    std::ostream::write();
    if (SHIBYTE(v23) < 0) {
      operator delete(v21);
    }
    uint64_t v14 = *v4;
    *(uint64_t *)((char *)&v15[-1] + *(void *)(v14 - 24)) = v4[3];
    v15[0] = v9;
    if (SBYTE7(v17) < 0) {
      operator delete(__p[0]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return MEMORY[0x1D942B820](v19);
  }
  else
  {
    LODWORD(v14) = 0;
    return std::ostream::write();
  }
}

void sub_1D2D4F8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA418];
  uint64_t v3 = *MEMORY[0x1E4FBA418];
  *(void *)a1 = *MEMORY[0x1E4FBA418];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1D942B820](a1 + 112);
  return a1;
}

void *morphun::dictionary::metadata::StringContainer::getString@<X0>(morphun::dictionary::metadata::StringContainer *this@<X0>, int a2@<W1>, std::basic_string<char16_t> *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  long long v8 = 0u;
  long long v7 = (unint64_t)a2;
  long long v6 = 0u;
  marisa::Trie::reverse_lookup((morphun::dictionary::metadata::StringContainer *)((char *)this + 8), (marisa::Agent **)&v6);
  morphun::dictionary::metadata::CharsetConverter::decode((uint64_t)this + 16, a3, *((uint64_t *)&v7 + 1), v8);
  return marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((void *)&v8 + 1);
}

void sub_1D2D4FADC(_Unwind_Exception *a1)
{
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

uint64_t morphun::dictionary::metadata::StringContainer::getIdentifierIfAvailable(uint64_t a1, uint64_t a2, std::string::size_type __requested_capacity)
{
  int v3 = __requested_capacity;
  memset(&v13, 0, sizeof(v13));
  std::string::reserve(&v13, __requested_capacity);
  long long v12 = 0u;
  memset(v11, 0, sizeof(v11));
  morphun::dictionary::metadata::CharsetConverter::encode(a1 + 16, &v13, a2, v3);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v6 = &v13;
  }
  else {
    long long v6 = (std::string *)v13.__r_.__value_.__r.__words[0];
  }
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v13.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v13.__r_.__value_.__l.__size_;
  }
  marisa::Agent::set_query(v11, (const char *)v6, size);
  int v8 = marisa::Trie::lookup((marisa::Trie *)(a1 + 8), (marisa::Agent *)v11);
  unsigned int v9 = DWORD1(v12);
  marisa::scoped_ptr<marisa::grimoire::trie::State>::~scoped_ptr((void *)&v12 + 1);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  if (v8) {
    return v9;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

void sub_1D2D4FBC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::dictionary::metadata::StringContainer::getIdentifier(uint64_t a1, void *a2, std::string::size_type a3)
{
  uint64_t result = morphun::dictionary::metadata::StringContainer::getIdentifierIfAvailable(a1, (uint64_t)a2, a3);
  if ((result & 0x80000000) != 0)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"String not found: ");
    std::basic_string<char16_t>::basic_string<std::u16string_view,0>(v9, a2, a3);
    if ((v10 & 0x80u) == 0) {
      long long v7 = (const std::basic_string<char16_t>::value_type *)v9;
    }
    else {
      long long v7 = (const std::basic_string<char16_t>::value_type *)v9[0];
    }
    if ((v10 & 0x80u) == 0) {
      std::basic_string<char16_t>::size_type v8 = v10;
    }
    else {
      std::basic_string<char16_t>::size_type v8 = v9[1];
    }
    std::basic_string<char16_t>::append(&__dst, v7, v8);
    std::basic_string<char16_t> v12 = __dst;
    memset(&__dst, 0, sizeof(__dst));
    morphun::exception::IllegalArgumentException::IllegalArgumentException((uint64_t)exception, (long long *)&v12);
  }
  return result;
}

void sub_1D2D4FCD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a20 < 0)
  {
    operator delete(a15);
    if ((v26 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v26)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v27);
  goto LABEL_10;
}

uint64_t morphun::dictionary::metadata::StringContainer::convertIdentifierToBit(morphun::dictionary::metadata::StringContainer *this)
{
  return 1 << (char)this;
}

uint64_t morphun::dictionary::metadata::StringContainer::convertBitToIdentifier(morphun::dictionary::metadata::StringContainer *this)
{
  uint8x8_t v1 = (uint8x8_t)vcnt_s8((int8x8_t)this);
  v1.i16[0] = vaddlv_u8(v1);
  char v2 = vaddlv_u8((uint8x8_t)vcnt_s8((int8x8_t)((char *)this - 1)));
  if (v1.u32[0] != 1) {
    return -1;
  }
  return v2;
}

uint64_t morphun::dictionary::metadata::StringContainer::size(morphun::dictionary::metadata::StringContainer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t morphun::tokenizer::ICUTokenExtractorIterator::reset()
{
  return ubrk_setText();
}

void sub_1D2D4FE10(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::tokenizer::ICUTokenExtractorIterator::getNextBoundary(morphun::tokenizer::ICUTokenExtractorIterator *this)
{
  return ubrk_next();
}

void morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator(morphun::tokenizer::ICUTokenExtractorIterator *this)
{
  morphun::tokenizer::ICUTokenExtractorIterator::~ICUTokenExtractorIterator(this);

  JUMPOUT(0x1D942B8B0);
}

{
  uint64_t v2;
  std::mutex *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *(void *)this = &unk_1F2A117A0;
  char v2 = *((void *)this + 1);
  int v3 = (std::mutex *)CLASS_MUTEX();
  std::mutex::lock(v3);
  if (v2)
  {
    std::basic_string<char16_t>::size_type v4 = gTokenizerCache;
    if (gTokenizerCache
      && (long long v6 = *(void **)gTokenizerCache,
          uint64_t v5 = *(void **)(gTokenizerCache + 8),
          long long v7 = (uint64_t)v5 - *(void *)gTokenizerCache,
          (unint64_t)v7 <= 0x207))
    {
      std::basic_string<char16_t>::size_type v8 = *(void *)(gTokenizerCache + 16);
      if ((unint64_t)v5 >= v8)
      {
        unsigned __int8 v10 = v7 >> 3;
        unsigned int v11 = (v7 >> 3) + 1;
        if (v11 >> 61) {
          std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
        }
        std::basic_string<char16_t> v12 = v8 - (void)v6;
        if (v12 >> 2 > v11) {
          unsigned int v11 = v12 >> 2;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
          std::string v13 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          std::string v13 = v11;
        }
        if (v13)
        {
          if (v13 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v14 = (char *)operator new(8 * v13);
        }
        else
        {
          uint64_t v14 = 0;
        }
        uint64_t v15 = &v14[8 * v10];
        *(void *)uint64_t v15 = v2;
        unsigned int v9 = v15 + 8;
        if (v5 != v6)
        {
          do
          {
            uint64_t v16 = *--v5;
            *((void *)v15 - marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v16;
            v15 -= 8;
          }
          while (v5 != v6);
          uint64_t v5 = *(void **)v4;
        }
        *(void *)std::basic_string<char16_t>::size_type v4 = v15;
        *(void *)(v4 + 8) = v9;
        *(void *)(v4 + 16) = &v14[8 * v13];
        if (v5) {
          operator delete(v5);
        }
      }
      else
      {
        *uint64_t v5 = v2;
        unsigned int v9 = v5 + 1;
      }
      *(void *)(v4 + 8) = v9;
    }
    else
    {
      ubrk_close();
    }
  }
  std::mutex::unlock(v3);
  *((void *)this + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = 0;
  if (*((unsigned char *)this + 16)) {
    ubrk_close();
  }
}

void sub_1D2D50008()
{
}

uint64_t CLASS_MUTEX(void)
{
  {
    operator new();
  }
  uint64_t result = CLASS_MUTEX(void)::classMutex;
  if (!CLASS_MUTEX(void)::classMutex)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D500F0(_Unwind_Exception *a1)
{
}

uint64_t morphun::tokenizer::ICUTokenExtractorIterator::ICUTokenExtractorIterator(uint64_t a1)
{
  *(void *)a1 = &unk_1F2A117A0;
  char v2 = (std::mutex *)CLASS_MUTEX();
  std::mutex::lock(v2);
  if (!gTokenizerCache) {
    operator new();
  }
  uint64_t v3 = *(void *)(gTokenizerCache + 8);
  if (*(void *)gTokenizerCache != v3)
  {
    uint64_t v4 = *(void *)(v3 - 8);
    *(void *)(gTokenizerCache + 8) = v3 - 8;
    if (v4) {
      goto LABEL_5;
    }
LABEL_8:
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v7, "B");
    morphun::exception::InvalidConfigurationException::InvalidConfigurationException((uint64_t)exception, &v7);
  }
  int v8 = 0;
  {
    LODWORD(v7) = 0;
    checkoutCachedTokenizer(void)::source = ubrk_open();
  }
  uint64_t v4 = ubrk_clone();
  if (!v4) {
    goto LABEL_8;
  }
LABEL_5:
  std::mutex::unlock(v2);
  ubrk_setText();
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = 0;
  return a1;
}

void sub_1D2D50398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  __cxa_free_exception(v15);
  std::mutex::unlock(v14);
  _Unwind_Resume(a1);
}

uint64_t morphun::grammar::synthesis::NlGrammarSynthesizer_NlDisplayFunction::getDisplayValue(uint64_t a1, uint64_t a2)
{
  memset(&v12, 0, sizeof(v12));
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3 != *(void *)(a2 + 16))
  {
    uint64_t v4 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v3 + 24))(v3);
    std::basic_string<char16_t>::operator=(&v12, v4);
    std::basic_string<char16_t>::size_type size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v12.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      while (v6 != v7)
      {
        if (!*(void *)v6)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        (*(void (**)(std::basic_string<char16_t> *__return_ptr))(**(void **)v6 + 32))(&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          if (__p.__r_.__value_.__l.__size_) {
            goto LABEL_22;
          }
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        else if (*((unsigned char *)&__p.__r_.__value_.__s + 23))
        {
          goto LABEL_22;
        }
        v6 += 8;
      }
      if (*(unsigned char *)(a1 + 40))
      {
        if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external(&__p, v12.__r_.__value_.__l.__data_, v12.__r_.__value_.__l.__size_);
        }
        else {
          std::basic_string<char16_t> __p = v12;
        }
      }
      else
      {
        memset(&__p, 0, sizeof(__p));
      }
LABEL_22:
      std::basic_string<char16_t>::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v8 = __p.__r_.__value_.__l.__size_;
      }
      if (v8) {
        std::basic_string<char16_t>::operator=(&v12, &__p);
      }
      operator new();
    }
    if ((*((unsigned char *)&v12.__r_.__value_.__s + 23) & 0x80) != 0) {
      operator delete(v12.__r_.__value_.__l.__data_);
    }
  }
  return 0;
}

void sub_1D2D50624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  MEMORY[0x1D942B8B0](v20, 0x10B3C406733FD4BLL);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::NlGrammarSynthesizer_NlDisplayFunction::~NlGrammarSynthesizer_NlDisplayFunction(morphun::grammar::synthesis::NlGrammarSynthesizer_NlDisplayFunction *this)
{
  morphun::grammar::synthesis::NlGrammarSynthesizer_NlDisplayFunction::~NlGrammarSynthesizer_NlDisplayFunction(this);

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &unk_1F2A0C928;
  *((void *)this + 4marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = &unk_1F2A09848;
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 50));
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy(*((char **)this + 47));
  *((void *)this + 3marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = &off_1F2A098A0;
  if (*((char *)this + 327) < 0) {
    operator delete(*((void **)this + 38));
  }
  if (*((char *)this + 303) < 0) {
    operator delete(*((void **)this + 35));
  }
  morphun::grammar::synthesis::NlGrammarSynthesizer_ArticleLookupFunction::~NlGrammarSynthesizer_ArticleLookupFunction((morphun::grammar::synthesis::NlGrammarSynthesizer_NlDisplayFunction *)((char *)this + 48));
  morphun::grammar::synthesis::NlGrammarSynthesizer_InflectorPatternChain::~NlGrammarSynthesizer_InflectorPatternChain((morphun::grammar::synthesis::NlGrammarSynthesizer_NlDisplayFunction *)((char *)this + 8));
}

void morphun::dialog::language::HrCommonConceptFactory::~HrCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A058E8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A058E8);
}

void morphun::analysis::util::AttributeSource_StringAttributeReflector::reflect(uint64_t a1, uint64_t a2, uint64_t a3, void (***a4)(void **__return_ptr, void))
{
  if (a4) {
    (**a4)(__p, a4);
  }
  else {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "n");
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)a1 + 24))(a1, a2, a3, __p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2D50898(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::basic_string<char16_t> *morphun::analysis::util::AttributeSource_StringAttributeReflector::reflect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = npc<std::basic_string<char16_t>>(*(void *)(a1 + 8));
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(unsigned char *)(v8 + 23))
  {
LABEL_3:
    unsigned int v9 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(*(void *)(a1 + 8));
    std::basic_string<char16_t>::append(v9, L",", 1uLL);
  }
LABEL_4:
  if (*(unsigned char *)(a1 + 16))
  {
    std::basic_string<char16_t> __p = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    unsigned __int8 v10 = *(std::basic_string<char16_t> **)(a1 + 8);
    npc<std::basic_string<char16_t>>((uint64_t)v10);
    unsigned int v11 = (const char *)(*(void *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL);
    int32_t v12 = strlen(v11);
    morphun::util::StringViewUtils::convert((uint64_t)&__p, v11, v12);
    std::string v13 = v27 >= 0
        ? (const std::basic_string<char16_t>::value_type *)&__p
        : (const std::basic_string<char16_t>::value_type *)__p;
    std::basic_string<char16_t>::size_type v14 = v27 >= 0 ? HIBYTE(v27) : v26;
    std::basic_string<char16_t>::append(v10, v13, v14);
    std::basic_string<char16_t>::append(v10, L"#", 1uLL);
    if (SHIBYTE(v27) < 0) {
      operator delete(__p);
    }
  }
  uint64_t v15 = (std::basic_string<char16_t> *)npc<std::basic_string<char16_t>>(*(void *)(a1 + 8));
  int v16 = *(char *)(a3 + 23);
  if (v16 >= 0) {
    long long v17 = (const std::basic_string<char16_t>::value_type *)a3;
  }
  else {
    long long v17 = *(const std::basic_string<char16_t>::value_type **)a3;
  }
  if (v16 >= 0) {
    std::basic_string<char16_t>::size_type v18 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::basic_string<char16_t>::size_type v18 = *(void *)(a3 + 8);
  }
  float v19 = std::basic_string<char16_t>::append(v15, v17, v18);
  uint64_t v20 = std::basic_string<char16_t>::append(v19, L"=", 1uLL);
  int v21 = *(char *)(a4 + 23);
  if (v21 >= 0) {
    int v22 = (const std::basic_string<char16_t>::value_type *)a4;
  }
  else {
    int v22 = *(const std::basic_string<char16_t>::value_type **)a4;
  }
  if (v21 >= 0) {
    std::basic_string<char16_t>::size_type v23 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::basic_string<char16_t>::size_type v23 = *(void *)(a4 + 8);
  }
  return std::basic_string<char16_t>::append(v20, v22, v23);
}

void sub_1D2D50A08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1D2D50A74(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::util::AttributeSource_StringAttributeReflector::~AttributeSource_StringAttributeReflector(morphun::analysis::util::AttributeSource_StringAttributeReflector *this)
{
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_InterrogativeArticleLookupFunction::getFeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
  uint64_t v4 = *(uint64_t **)(a1 + 24);
  if (v4)
  {
    int v5 = *(char *)(v3 + 23);
    if (v5 >= 0) {
      uint64_t v6 = (const UChar *)v3;
    }
    else {
      uint64_t v6 = *(const UChar **)v3;
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      uint64_t v7 = *(void *)(v3 + 8);
    }
    morphun::grammar::synthesis::TrGrammarSynthesizer_TrDisplayFunction::getVowelGroup(v4, v6, v7);
    operator new();
  }
  exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
  morphun::exception::NullPointerException::NullPointerException(exception);
}

void sub_1D2D50C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  __cxa_free_exception(v21);
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::TrGrammarSynthesizer_InterrogativeArticleLookupFunction::~TrGrammarSynthesizer_InterrogativeArticleLookupFunction(morphun::grammar::synthesis::TrGrammarSynthesizer_InterrogativeArticleLookupFunction *this)
{
}

void morphun::dialog::language::EsCommonConceptFactory_EsAndList::getBeforeLast(const morphun::dialog::SemanticFeatureConceptBase *a1@<X1>, const morphun::dialog::SpeakableString *a2@<X2>, const morphun::dialog::SemanticFeatureConceptBase *a3@<X3>, const morphun::dialog::SpeakableString *a4@<X4>, void *a5@<X8>)
{
  uint64_t v7 = (morphun::dialog::language::EsCommonConceptFactory_EsAndList *)(*(uint64_t (**)(const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *, const morphun::dialog::SpeakableString *, const morphun::dialog::SemanticFeatureConceptBase *))(*(void *)a4 + 32))(a4, a1, a2, a3);
  uint64_t v8 = (void *)morphun::dialog::language::EsCommonConceptFactory_EsAndList::IMPORTANT_SET(v7);
  {
    operator new();
  }
  unsigned int v9 = (void *)morphun::dialog::language::I_SOUND(void)::I_SOUND_;
  npc<icu4cxx::UnicodeSet const>(morphun::dialog::language::I_SOUND(void)::I_SOUND_);
  {
    operator new();
  }
  uint64_t v10 = morphun::dialog::language::EsCommonConceptFactory_EsAndList::NON_SPANISH_VOWEL_SET(void)::NON_SPANISH_VOWEL_SET_;
  npc<icu4cxx::UnicodeSet const>(morphun::dialog::language::EsCommonConceptFactory_EsAndList::NON_SPANISH_VOWEL_SET(void)::NON_SPANISH_VOWEL_SET_);
  unsigned int v11 = operator new(8uLL);
  *unsigned int v11 = v10;
  *((void *)&__p + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v11 + 1;
  std::basic_string<char16_t>::size_type v14 = v11 + 1;
  *(void *)&long long __p = v11;
  int isStartsWithUnicodeSets = morphun::dictionary::PhraseProperties::isStartsWithUnicodeSets((uint64_t)v7, v8, v9, (uint64_t **)&__p);
  operator delete(v11);
  if (isStartsWithUnicodeSets) {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L" e ");
  }
  else {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__p, (char *)L" y ");
  }
  morphun::dialog::SpeakableString::SpeakableString(a5, &__p);
  if (SHIBYTE(v14) < 0) {
    operator delete((void *)__p);
  }
}

void sub_1D2D50EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1D942B8B0](v15, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

uint64_t morphun::dialog::language::EsCommonConceptFactory_EsAndList::IMPORTANT_SET(morphun::dialog::language::EsCommonConceptFactory_EsAndList *this)
{
  {
    operator new();
  }
  uint64_t v1 = morphun::dialog::language::EsCommonConceptFactory_EsAndList::IMPORTANT_SET(void)::IMPORTANT_SET_;

  return npc<icu4cxx::UnicodeSet const>(v1);
}

void sub_1D2D50FCC(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x1020C405F07FB98);
  _Unwind_Resume(a1);
}

void sub_1D2D51054(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::EsCommonConceptFactory_EsAndList::clone(morphun::dialog::language::EsCommonConceptFactory_EsAndList *this)
{
}

void sub_1D2D510F0(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::EsCommonConceptFactory_EsAndList::~EsCommonConceptFactory_EsAndList(morphun::dialog::language::EsCommonConceptFactory_EsAndList *this)
{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05E30);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05E30);
}

void morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(void **this)
{
  morphun::util::lemmatization::InflectionIdentifier::~InflectionIdentifier(this);

  JUMPOUT(0x1D942B8B0);
}

{
  if (*((char *)this + 55) < 0) {
    operator delete(this[4]);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

uint64_t morphun::util::lemmatization::InflectionIdentifier::InflectionIdentifier(uint64_t a1, long long *a2, long long *a3)
{
  *(void *)a1 = &unk_1F2A08A10;
  if (*((char *)a2 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)(a1 + 8), *(const std::basic_string<char16_t>::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v5;
  }
  uint64_t v6 = (std::basic_string<char16_t> *)(a1 + 32);
  if (*((char *)a3 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v6, *(const std::basic_string<char16_t>::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 48) = *((void *)a3 + 2);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  return a1;
}

void sub_1D2D51284(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::HeCommonConceptFactory_HeAndList::getBeforeLast(morphun::dialog::language::HeCommonConceptFactory_HeAndList *this@<X0>, const morphun::dialog::SpeakableString *a2@<X4>, void *a3@<X8>)
{
  uint64_t v8 = (void *)morphun::lang::StringFilterUtil::HEBREW_SCRIPT(this);
  uint64_t v9 = (*(uint64_t (**)(const morphun::dialog::SpeakableString *))(*(void *)a2 + 32))(a2);
  int v10 = *(char *)(v9 + 23);
  if (v10 >= 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = *(void *)v9;
  }
  if (v10 >= 0) {
    LODWORD(v12) = *(unsigned __int8 *)(v9 + 23);
  }
  else {
    uint64_t v12 = *(void *)(v9 + 8);
  }
  if (morphun::util::UnicodeSetUtils::containsSome(v8, v11, v12)) {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, " ");
  }
  else {
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, " ");
  }
  morphun::dialog::SpeakableString::SpeakableString(a3, (long long *)__p);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1D2D51374(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void morphun::dialog::language::HeCommonConceptFactory_HeAndList::clone(morphun::dialog::language::HeCommonConceptFactory_HeAndList *this)
{
}

void sub_1D2D5141C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40223A8A63);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::HeCommonConceptFactory_HeAndList::~HeCommonConceptFactory_HeAndList(morphun::dialog::language::HeCommonConceptFactory_HeAndList *this)
{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05EB8);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::SemanticConceptList::~SemanticConceptList(this, (void ***)&off_1F2A05EB8);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer::addSemanticFeatures(morphun::grammar::synthesis::HeGrammarSynthesizer *this, morphun::dialog::SemanticFeatureModel *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D52188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  __cxa_free_exception(v36);
  MEMORY[0x1D942B8B0](v35, 0x10F3C40FEEDA326);
  _Unwind_Resume(a1);
}

void morphun::dialog::language::ZhCommonConceptFactory::quantifiedJoin(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void *a4@<X8>)
{
  morphun::dialog::SpeakableString::SpeakableString(v7, a3);
  morphun::dialog::SpeakableString::operator+(a1, (uint64_t)v7, v8);
  morphun::dialog::SpeakableString::operator+((uint64_t)v8, a2, a4);
}

void sub_1D2D52628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
}

void morphun::dialog::language::ZhCommonConceptFactory::~ZhCommonConceptFactory(void **this)
{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05D28);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::dialog::CommonConceptFactoryImpl::~CommonConceptFactoryImpl(this, (void **)&off_1F2A05D28);
}

void non-virtual thunk to'morphun::analysis::stemmer::ItStemFilter::~ItStemFilter(morphun::analysis::stemmer::ItStemFilter *this)
{
  uint64_t v2 = (morphun::analysis::stemmer::ItStemFilter *)((char *)this - 104);
  *(void *)this = &unk_1F2A01928;
  *((void *)this - 13) = &unk_1F2A01980;
  uint64_t v3 = (void *)*((void *)this + 25);
  if (v3)
  {
    *((void *)this + 26) = v3;
    operator delete(v3);
  }
  long long v5 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v5);
  uint64_t v4 = (void *)*((void *)this + 19);
  if (v4)
  {
    *((void *)this + 20) = v4;
    operator delete(v4);
  }
  *(void *)this = &unk_1F2A019C0;
  *((void *)this - 13) = &unk_1F2A019F8;
  morphun::analysis::TokenFilter::~TokenFilter(v2, (uint64_t *)&off_1F2A07DA0);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::TokenFilter *v2;
  void *v3;
  void *v4;
  void **v5;
  uint64_t vars8;

  uint64_t v2 = (morphun::analysis::stemmer::ItStemFilter *)((char *)this - 104);
  *(void *)this = &unk_1F2A01928;
  *((void *)this - 13) = &unk_1F2A01980;
  uint64_t v3 = (void *)*((void *)this + 25);
  if (v3)
  {
    *((void *)this + 26) = v3;
    operator delete(v3);
  }
  long long v5 = (void **)((char *)this + 176);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v5);
  uint64_t v4 = (void *)*((void *)this + 19);
  if (v4)
  {
    *((void *)this + 20) = v4;
    operator delete(v4);
  }
  *(void *)this = &unk_1F2A019C0;
  *((void *)this - 13) = &unk_1F2A019F8;

  morphun::analysis::TokenFilter::~TokenFilter(v2, (uint64_t *)&off_1F2A07DA0);
}

void *morphun::analysis::stemmer::ItStemFilter::reset(morphun::analysis::stemmer::ItStemFilter *this)
{
  uint64_t v2 = npc<morphun::analysis::TokenStream>(*((void *)this + 12));
  (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  *((void *)this + 42) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::KeywordAttribute>((uint64_t)this);
  *((void *)this + 43) = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::GrammemeAttribute>((uint64_t)this);
  uint64_t result = morphun::analysis::util::AttributeSource::getAttribute<morphun::analysis::tokenattributes::LemmaMappingAttribute>((uint64_t)this);
  *((void *)this + 44) = result;
  return result;
}

uint64_t morphun::analysis::stemmer::ItStemFilter::incrementToken(morphun::analysis::stemmer::ItStemFilter *this)
{
  *(void *)&long long v96 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *((void *)this + 12);
  if (!v2)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
  if (v3)
  {
    uint64_t v4 = *((void *)this + 42);
    if (!v4 || ((*(uint64_t (**)(uint64_t))(*(void *)v4 + 56))(v4) & 1) == 0)
    {
      long long v5 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 41));
      uint64_t v6 = (void *)((char *)v5 + *(void *)(*v5 - 96));
      if (*((char *)v6 + 23) < 0)
      {
        std::basic_string<char16_t>::size_type v7 = v6[1];
        if (v7 >= 0x7FFFFFFFFFFFFFF8) {
          std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v6 = (void *)*v6;
      }
      else
      {
        std::basic_string<char16_t>::size_type v7 = *((unsigned __int8 *)v6 + 23);
      }
      if (v7 >= 0xB)
      {
        uint64_t v9 = (v7 & 0x7FFFFFFFFFFFFFFCLL) + 4;
        if ((v7 | 3) != 0xB) {
          uint64_t v9 = v7 | 3;
        }
        p_dst = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v9 + 1);
        __dst.__r_.__value_.__l.__size_ = v7;
        __dst.__r_.__value_.__r.__words[2] = v10 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)p_dst;
      }
      else
      {
        *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v7;
        p_dst = &__dst;
        if (!v7)
        {
LABEL_16:
          p_dst->__r_.__value_.__s.__data_[v7] = 0;
          uint64_t v80 = 0;
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v11 = &__dst;
          }
          else {
            uint64_t v11 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
          }
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type size = __dst.__r_.__value_.__l.__size_;
          }
          morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)&v80, (const UChar *)v11, size);
          uint64_t v13 = v80;
          if ((*((void *)this + 46) & v80) != 0)
          {
            if ((*((void *)this + 45) & v80) != 0)
            {
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                std::basic_string<char16_t>::__init_copy_ctor_external(&__str, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
              }
              else {
                std::basic_string<char16_t> __str = __dst;
              }
              int v19 = 1;
              unsigned __int8 v79 = 1;
              goto LABEL_45;
            }
            uint64_t v14 = *((void *)this + 14);
            uint64_t v15 = *((void *)this + 15);
            int v16 = (void *)npc<morphun::analysis::tokenattributes::CharTermAttribute>(*((void *)this + 41));
            long long v17 = (const UChar *)((char *)v16 + *(void *)(*v16 - 96));
            if (*((char *)v17 + 23) < 0)
            {
              long long v17 = *(const UChar **)v17;
              uint64_t v18 = *(void *)((char *)v16 + *(void *)(*v16 - 96) + 8);
            }
            else
            {
              uint64_t v18 = *((unsigned __int8 *)v17 + 23);
            }
            morphun::dictionary::DictionaryMetaData::getPropertyValues(v14, v17, v18, (unsigned __int16 *)"i", 0xAuLL, &v88);
            uint64_t v20 = v88;
            uint64_t v21 = v89;
            if (v88 != v89)
            {
              if ((*((void *)this + 48) & v13) != 0)
              {
                uint64_t v74 = 0x800000000;
                uint64_t v22 = 0x65006E0069006ELL;
                uint64_t v23 = 0x69006D00650066;
              }
              else if ((*((void *)this + 47) & v13) != 0)
              {
                uint64_t v22 = 0x6E0069006C0075;
                uint64_t v23 = 0x6300730061006DLL;
                uint64_t v74 = 0x900000065;
              }
              else
              {
                uint64_t v74 = 0;
                uint64_t v23 = 0;
                uint64_t v22 = 0;
              }
              char v24 = (marisa::Trie *)(v15 + 248);
              uint64_t v25 = v15 + 8;
              while (1)
              {
                if (*(char *)(v20 + 23) < 0)
                {
                  uint64_t v27 = *(void *)v20;
                  uint64_t v26 = *(void *)(v20 + 8);
                }
                else
                {
                  LODWORD(v26) = *(unsigned __int8 *)(v20 + 23);
                  uint64_t v27 = v20;
                }
                __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId(v24, v27, v26);
                morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&v93, v25, KeyId);
                v86[0] = v93;
                v86[1] = v94;
                v86[2] = v95;
                char v87 = 1;
                if (WORD1(v94)) {
                  break;
                }
                v20 += 24;
                if (v20 == v21) {
                  goto LABEL_43;
                }
              }
              std::basic_string<char16_t>::size_type v49 = (void *)*((void *)this + 41);
              npc<morphun::analysis::tokenattributes::CharTermAttribute>((uint64_t)v49);
              uint64_t v50 = *(void *)(*v49 - 96);
              std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&v93, "p");
              *((void *)&v94 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v23;
              *(void *)&long long v95 = v22;
              WORD4(v95) = v74;
              *(_DWORD *)((char *)&v95 + 10) = 0;
              BYTE14(v95) = 0;
              HIBYTE(v95) = BYTE4(v74);
              int v83 = 0;
              std::basic_string<char16_t>::size_type v84 = 0;
              uint64_t v82 = 0;
              std::basic_string<char16_t>::size_type v91 = (void **)&v82;
              LOBYTE(v92) = 0;
              uint64_t v82 = (std::basic_string<char16_t> *)operator new(0x30uLL);
              int v83 = v82;
              std::basic_string<char16_t>::size_type v84 = v82 + 2;
              int v83 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v84, &v93, &v96, v82);
              morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)&v91, (uint64_t)v86, (uint64_t *)&v82, 1);
              uint64_t v51 = (const std::basic_string<char16_t> *)((char *)v49 + v50);
              uint64_t v52 = v91;
              int v53 = (int *)v92;
              if (v91 == v92)
              {
LABEL_124:
                if (SHIBYTE(v51->__r_.__value_.__r.__words[2]) < 0) {
                  std::basic_string<char16_t>::__init_copy_ctor_external(&v85, v51->__r_.__value_.__l.__data_, v51->__r_.__value_.__l.__size_);
                }
                else {
                  std::basic_string<char16_t> v85 = *v51;
                }
LABEL_134:
                if (v52) {
                  operator delete(v52);
                }
                std::basic_string<char16_t> __str = v85;
                unsigned __int8 v79 = 1;
                std::basic_string<char16_t>::size_type v91 = (void **)&v82;
                std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v91);
                for (uint64_t i = 0; i != -48; i -= 24)
                {
                  if (*((char *)&v95 + i + 15) < 0) {
                    operator delete(*(void **)((char *)&v94 + i + 8));
                  }
                }
                *(void *)&v86[0] = &v88;
                std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v86);
                int v19 = v79;
                goto LABEL_45;
              }
              std::basic_string<char16_t>::size_type v54 = (int *)v91;
              while (1)
              {
                std::basic_string<char16_t>::size_type v55 = HIBYTE(v51->__r_.__value_.__r.__words[2]);
                std::basic_string<char16_t>::size_type v56 = (const std::basic_string<char16_t> *)v51->__r_.__value_.__r.__words[0];
                std::basic_string<char16_t>::size_type v57 = v51->__r_.__value_.__l.__size_;
                morphun::dictionary::metadata::StringContainer::getString(*(morphun::dictionary::metadata::StringContainer **)(*(void *)v54 + 40), v54[2], &v90);
                if ((v55 & 0x80u) == 0) {
                  uint64_t v58 = v51;
                }
                else {
                  uint64_t v58 = v56;
                }
                if ((v55 & 0x80u) == 0) {
                  std::basic_string<char16_t>::size_type v59 = v55;
                }
                else {
                  std::basic_string<char16_t>::size_type v59 = v57;
                }
                std::basic_string<char16_t>::size_type v60 = HIBYTE(v90.__r_.__value_.__r.__words[2]);
                if ((v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  long long v61 = &v90;
                }
                else {
                  long long v61 = (std::basic_string<char16_t> *)v90.__r_.__value_.__r.__words[0];
                }
                if ((v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  std::basic_string<char16_t>::size_type v60 = v90.__r_.__value_.__l.__size_;
                }
                if (v59 < v60) {
                  break;
                }
                if (v60)
                {
                  uint64_t v63 = -(uint64_t)v60;
                  std::basic_string<char16_t>::size_type v64 = (std::basic_string<char16_t>::size_type)v58 + 2 * v59;
                  do
                  {
                    int v65 = (unsigned __int16)v61->__r_.__value_.__s.__data_[0];
                    long long v61 = (std::basic_string<char16_t> *)((char *)v61 + 2);
                    BOOL v62 = v65 == *(unsigned __int16 *)(v64 + 2 * v63);
                    BOOL v66 = v65 != *(unsigned __int16 *)(v64 + 2 * v63) || v63 == -1;
                    ++v63;
                  }
                  while (!v66);
                  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
                    goto LABEL_110;
                  }
                }
                else
                {
                  BOOL v62 = 1;
                  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
                    goto LABEL_110;
                  }
                }
LABEL_119:
                if (v62)
                {
                  morphun::dictionary::Inflector_Inflection::lemmatize(&v85, v54, v51);
                  goto LABEL_134;
                }
                v54 += 6;
                if (v54 == v53) {
                  goto LABEL_124;
                }
              }
              BOOL v62 = 0;
              if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_119;
              }
LABEL_110:
              operator delete(v90.__r_.__value_.__l.__data_);
              goto LABEL_119;
            }
LABEL_43:
            *(void *)&v86[0] = &v88;
            std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)v86);
          }
          int v19 = 0;
          LOBYTE(__str.__r_.__value_.__l.__data_) = 0;
          unsigned __int8 v79 = 0;
LABEL_45:
          int v29 = (std::basic_string<char16_t> *)(*((void *)this + 41) + *(void *)(**((void **)this + 41) - 96));
          if (v19)
          {
            std::basic_string<char16_t>::operator=(v29, &__str);
          }
          else
          {
            if (SHIBYTE(v29->__r_.__value_.__r.__words[2]) < 0) {
              uint64_t v30 = LODWORD(v29->__r_.__value_.__r.__words[1]);
            }
            else {
              uint64_t v30 = HIBYTE(v29->__r_.__value_.__r.__words[2]);
            }
            if ((int)v30 >= 6)
            {
              for (uint64_t j = 0; j != v30; ++j)
              {
                int v32 = SHIBYTE(v29->__r_.__value_.__r.__words[2]);
                uint64_t v33 = v29;
                if (v32 < 0) {
                  uint64_t v33 = (std::basic_string<char16_t> *)v29->__r_.__value_.__r.__words[0];
                }
                switch(v33->__r_.__value_.__s.__data_[j])
                {
                  case 0xE0:
                  case 0xE1:
                  case 0xE2:
                  case 0xE4:
                    __int16 v34 = 97;
                    goto LABEL_60;
                  case 0xE8:
                  case 0xE9:
                  case 0xEA:
                  case 0xEB:
                    __int16 v34 = 101;
                    goto LABEL_60;
                  case 0xEC:
                  case 0xED:
                  case 0xEE:
                  case 0xEF:
                    __int16 v34 = 105;
                    goto LABEL_60;
                  case 0xF2:
                  case 0xF3:
                  case 0xF4:
                  case 0xF6:
                    __int16 v34 = 111;
                    goto LABEL_60;
                  case 0xF9:
                  case 0xFA:
                  case 0xFB:
                  case 0xFC:
                    __int16 v34 = 117;
LABEL_60:
                    uint64_t v35 = v29;
                    if (v32 < 0) {
                      uint64_t v35 = (std::basic_string<char16_t> *)v29->__r_.__value_.__r.__words[0];
                    }
                    v35->__r_.__value_.__s.__data_[j] = v34;
                    break;
                  default:
                    break;
                }
              }
              uint64_t v36 = (v30 - 1);
              int v37 = SHIBYTE(v29->__r_.__value_.__r.__words[2]);
              uint64_t v38 = v29;
              if (v37 < 0) {
                uint64_t v38 = (std::basic_string<char16_t> *)v29->__r_.__value_.__r.__words[0];
              }
              HIDWORD(v39) = (unsigned __int16)v38->__r_.__value_.__s.__data_[v36] - 97;
              LODWORD(v39) = HIDWORD(v39);
              switch((v39 >> 1))
              {
                case 0u:
                case 7u:
                  uint64_t v30 = (v30 - 2);
                  uint64_t v40 = v29;
                  if (v37 < 0) {
                    uint64_t v40 = (std::basic_string<char16_t> *)v29->__r_.__value_.__r.__words[0];
                  }
                  std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t> *)((char *)v40 + 2 * v30);
                  int v42 = 105;
                  goto LABEL_70;
                case 2u:
                  uint64_t v67 = (v30 - 2);
                  LODWORD(v30) = v30 - 2;
                  if (v37 < 0)
                  {
                    if (*(_WORD *)(v29->__r_.__value_.__r.__words[0] + 2 * v67) == 105) {
                      break;
                    }
                    uint64_t v68 = (std::basic_string<char16_t> *)v29->__r_.__value_.__r.__words[0];
                  }
                  else
                  {
                    uint64_t v68 = v29;
                    if (v29->__r_.__value_.__s.__data_[v67] == 105) {
                      break;
                    }
                  }
                  std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t> *)((char *)v68 + 2 * v67);
                  int v42 = 104;
                  goto LABEL_70;
                case 4u:
                  uint64_t v69 = (v30 - 2);
                  LODWORD(v30) = v30 - 2;
                  if (v37 < 0)
                  {
                    if (*(_WORD *)(v29->__r_.__value_.__r.__words[0] + 2 * v69) == 104) {
                      break;
                    }
                    uint64_t v70 = (std::basic_string<char16_t> *)v29->__r_.__value_.__r.__words[0];
                  }
                  else
                  {
                    uint64_t v70 = v29;
                    if (v29->__r_.__value_.__s.__data_[v69] == 104) {
                      break;
                    }
                  }
                  std::basic_string<char16_t>::size_type v41 = (std::basic_string<char16_t> *)((char *)v70 + 2 * v69);
                  int v42 = 105;
LABEL_70:
                  if ((unsigned __int16)v41->__r_.__value_.__s.__data_[0] != v42) {
                    LODWORD(v30) = v36;
                  }
                  break;
                default:
                  break;
              }
            }
            std::basic_string<char16_t>::resize(v29, (int)v30, 0);
          }
          if (*((void *)this + 43))
          {
            *(void *)&v86[0] = 0;
            std::string v43 = (const UChar *)(*((void *)this + 41) + *(void *)(**((void **)this + 41) - 96));
            if (*((char *)v43 + 23) < 0)
            {
              std::string v43 = *(const UChar **)v43;
              uint64_t v44 = *(void *)(*((void *)this + 41) + *(void *)(**((void **)this + 41) - 96) + 8);
            }
            else
            {
              uint64_t v44 = *((unsigned __int8 *)v43 + 23);
            }
            if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(*((void *)this + 14), (uint64_t)v86, v43, v44))
            {
              uint64_t v45 = *((void *)this + 43);
              if (!v45)
              {
                uint64_t v73 = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
                morphun::exception::NullPointerException::NullPointerException(v73);
              }
              (*(void (**)(uint64_t, void))(*(void *)v45 + 64))(v45, *(void *)&v86[0]);
            }
          }
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v46 = &__dst;
          }
          else {
            uint64_t v46 = (std::basic_string<char16_t> *)__dst.__r_.__value_.__r.__words[0];
          }
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::basic_string<char16_t>::size_type v47 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          }
          else {
            std::basic_string<char16_t>::size_type v47 = __dst.__r_.__value_.__l.__size_;
          }
          morphun::analysis::MorphologicalAnalyzerUtil::analyze_word((uint64_t)&__p, (uint64_t)v46, v47, v80, *((void *)this + 44), (uint64_t *)this + 13, 0);
          if (v77 && v76 < 0) {
            operator delete(__p);
          }
          if (v79 && SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          return v3;
        }
      }
      memmove(p_dst, v6, 2 * v7);
      goto LABEL_16;
    }
  }
  return v3;
}

void sub_1D2D53384(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::ItStemFilter::~ItStemFilter(morphun::analysis::stemmer::ItStemFilter *this)
{
  *((void *)this + 13) = &unk_1F2A01928;
  *(void *)this = &unk_1F2A01980;
  uint64_t v2 = (void *)*((void *)this + 38);
  if (v2)
  {
    *((void *)this + 39) = v2;
    operator delete(v2);
  }
  uint64_t v4 = (void **)((char *)this + 280);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = (void *)*((void *)this + 32);
  if (v3)
  {
    *((void *)this + 33) = v3;
    operator delete(v3);
  }
  *((void *)this + 13) = &unk_1F2A019C0;
  *(void *)this = &unk_1F2A019F8;
  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07DA0);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  void *v3;
  void **v4;
  uint64_t vars8;

  *((void *)this + 13) = &unk_1F2A01928;
  *(void *)this = &unk_1F2A01980;
  uint64_t v2 = (void *)*((void *)this + 38);
  if (v2)
  {
    *((void *)this + 39) = v2;
    operator delete(v2);
  }
  uint64_t v4 = (void **)((char *)this + 280);
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = (void *)*((void *)this + 32);
  if (v3)
  {
    *((void *)this + 33) = v3;
    operator delete(v3);
  }
  *((void *)this + 13) = &unk_1F2A019C0;
  *(void *)this = &unk_1F2A019F8;

  morphun::analysis::TokenFilter::~TokenFilter(this, (uint64_t *)&off_1F2A07DA0);
}

void *morphun::TokenIterator::TokenIterator(void *this, const morphun::Token *a2, const morphun::Token *a3)
{
  *this = a2;
  this[1] = a3;
  return this;
}

{
  *this = a2;
  this[1] = a3;
  return this;
}

uint64_t morphun::TokenIterator::operator->(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t morphun::TokenIterator::operator*(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t morphun::TokenIterator::get(morphun::TokenIterator *this)
{
  return *(void *)this;
}

uint64_t *morphun::TokenIterator::operator++(uint64_t *a1)
{
  *a1 = *(void *)(npc<morphun::Token const>(*a1) + 80);
  return a1;
}

void sub_1D2D53648(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::TokenIterator::operator++(uint64_t *a1)
{
  uint64_t result = npc<morphun::Token const>(*a1);
  *a1 = *(void *)(result + 80);
  return result;
}

void *morphun::TokenIterator::operator--(void *result)
{
  if (*result)
  {
    uint64_t v1 = *(void *)(*result + 72);
    if (!v1)
    {
      exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
      morphun::exception::NullPointerException::NullPointerException(exception);
    }
  }
  else
  {
    uint64_t v1 = result[1];
  }
  *uint64_t result = v1;
  return result;
}

void sub_1D2D536F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t morphun::TokenIterator::operator--(uint64_t *a1)
{
  uint64_t v1 = *a1;
  morphun::TokenIterator::operator--(a1);
  return v1;
}

BOOL morphun::TokenIterator::operator==(void *a1, void *a2)
{
  return *a1 == *a2;
}

BOOL morphun::TokenIterator::operator!=(void *a1, void *a2)
{
  return *a1 != *a2;
}

const void *minf_toInflectableStringConcept(const void *a1)
{
  if (!a1
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"Object is not a PronounConcept");
    morphun::exception::ClassCastException::ClassCastException((uint64_t)exception, &__dst);
  }
  return a1;
}

void sub_1D2D53840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0) {
      goto LABEL_6;
    }
  }
  else if (!v17)
  {
LABEL_6:
    if (a2 == 1)
    {
      uint64_t v20 = (const void **)__cxa_begin_catch(exception_object);
      morphun::util::CFUtils::convert(v20, v15, v21);
      __cxa_end_catch();
      JUMPOUT(0x1D2D537D0);
    }
    _Unwind_Resume(exception_object);
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t minf_toSpeakableString(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::InflectableStringConcept>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 24))(v1);
}

uint64_t npc<morphun::dialog::InflectableStringConcept>(uint64_t result)
{
  if (!result)
  {
    exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
    morphun::exception::NullPointerException::NullPointerException(exception);
  }
  return result;
}

void sub_1D2D53984(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t minf_clone(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::InflectableStringConcept>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 128))(v1);
}

void minf_create(uint64_t a1, uint64_t a2)
{
  if (a2) {
    operator new();
  }
  exception = __cxa_allocate_exception(0x38uLL);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "I");
  morphun::exception::NullPointerException::NullPointerException((uint64_t)exception, &__dst);
}

void sub_1D2D53AE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0) {
      goto LABEL_6;
    }
  }
  else if (!v17)
  {
LABEL_6:
    if (a2 == 1)
    {
      uint64_t v20 = (const void **)__cxa_begin_catch(exception_object);
      morphun::util::CFUtils::convert(v20, v15, v21);
      __cxa_end_catch();
      JUMPOUT(0x1D2D53A70);
    }
    _Unwind_Resume(exception_object);
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t minf_destroy(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

uint64_t minf_isExists(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::InflectableStringConcept>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
}

void minf_putConstraintByName(uint64_t a1, const __CFString *a2, const __CFString *a3)
{
  npc<morphun::dialog::InflectableStringConcept>(a1);
  morphun::util::CFUtils::to_u16string(&v7, a2);
  morphun::util::CFUtils::to_u16string(&__p, a3);
  (*(void (**)(uint64_t, std::basic_string<char16_t> *, std::basic_string<char16_t> *))(*(void *)a1 + 72))(a1, &v7, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D53CD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a2 == 1)
  {
    uint64_t v23 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v23, v20, v24);
    __cxa_end_catch();
    JUMPOUT(0x1D2D53CC4);
  }
  _Unwind_Resume(exception_object);
}

void minf_clearConstraintByName(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::InflectableStringConcept>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  (*(void (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 88))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1D2D53DD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    uint64_t v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2D53DC0);
  }
  _Unwind_Resume(exception_object);
}

uint64_t minf_reset(uint64_t a1)
{
  uint64_t v1 = npc<morphun::dialog::InflectableStringConcept>(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 96))(v1);
}

uint64_t minf_getFeatureValueByNameCopy(uint64_t a1, const __CFString *a2)
{
  npc<morphun::dialog::InflectableStringConcept>(a1);
  morphun::util::CFUtils::to_u16string(&__p, a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, std::basic_string<char16_t> *))(*(void *)a1 + 112))(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1D2D53F50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a2 == 1)
  {
    uint64_t v18 = (const void **)__cxa_begin_catch(exception_object);
    morphun::util::CFUtils::convert(v18, v15, v19);
    __cxa_end_catch();
    JUMPOUT(0x1D2D53F38);
  }
  _Unwind_Resume(exception_object);
}

void morphun::analysis::FrAnalyzer::addWordNormalizationFilter(morphun::analysis::FrAnalyzer *this, morphun::analysis::TokenStream *a2)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1D2D541E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1D942B8B0](v19, 0x10F3C40C7D8954FLL);
  _Unwind_Resume(a1);
}

void sub_1D2D542C8()
{
}

void sub_1D2D542D0()
{
}

void morphun::analysis::FrAnalyzer::addStopFilter(morphun::analysis::FrAnalyzer *this, morphun::analysis::TokenStream *a2)
{
}

void sub_1D2D5433C(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F1C40C2748A64);
  _Unwind_Resume(a1);
}

void morphun::analysis::FrAnalyzer::~FrAnalyzer(void **this)
{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06E00);

  JUMPOUT(0x1D942B8B0);
}

{
  morphun::analysis::ConfigurableAnalyzer::~ConfigurableAnalyzer(this, &off_1F2A06E00);
}

void morphun::analysis::FrAnalyzer::loadStopwordSet(morphun::analysis::FrAnalyzer *this)
{
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(__p, "f");
  morphun::analysis::util::StopwordAnalyzerBase::loadSnowballStopwordSet((const void **)__p);
}

void sub_1D2D54460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double morphun::grammar::synthesis::HeGrammarSynthesizer_HeDisplayFunction::singleWordStemToPlural@<D0>(char *__src@<X1>, unint64_t a2@<X2>, std::allocator<char16_t> *a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4 = a4;
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  }
  if (a2 >= 0xB)
  {
    uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a2 | 3) != 0xB) {
      uint64_t v8 = a2 | 3;
    }
    std::basic_string<char16_t> v7 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v8 + 1);
    v4[1] = a2;
    v4[2] = v9 | 0x8000000000000000;
    *uint64_t v4 = (uint64_t)v7;
  }
  else
  {
    *((unsigned char *)a4 + 23) = a2;
    std::basic_string<char16_t> v7 = a4;
    if (!a2) {
      goto LABEL_9;
    }
  }
  memmove(v7, __src, 2 * a2);
LABEL_9:
  uint64_t v11 = 0;
  *((_WORD *)v7 + a2) = 0;
  do
  {
    uint64_t v12 = *((unsigned __int8 *)v4 + 23);
    int v13 = (char)v12;
    if ((v12 & 0x80u) != 0) {
      uint64_t v12 = v4[1];
    }
    if (v12)
    {
      uint64_t v14 = v13 >= 0 ? (uint64_t)v4 : *v4;
      uint64_t v15 = v12 - 1;
      if (morphun::grammar::synthesis::FINAL_TO_MEDIAL_SUBSTITUTION[v11] == *(_WORD *)(v14 + 2 * v15)) {
        *(_WORD *)(v14 + 2 * v15) = morphun::grammar::synthesis::FINAL_TO_MEDIAL_SUBSTITUTION[v11 + 1];
      }
    }
    v11 += 2;
  }
  while (v11 != 10);
  if (a2 == 3)
  {
    uint64_t v16 = 0;
    while (*(unsigned __int16 *)&__src[v16 * 2] == (unsigned __int16)word_1D2ED0D80[v16])
    {
      if (++v16 == 3)
      {
        if (*((char *)v4 + 23) < 0)
        {
          v4[1] = 5;
          uint64_t v4 = (uint64_t *)*v4;
        }
        else
        {
          *((unsigned char *)v4 + 23) = 5;
        }
        *((_DWORD *)v4 + 2) = 1501;
        uint64_t v33 = &qword_1D2ED0D88;
        goto LABEL_135;
      }
    }
  }
  if (a2 != 2)
  {
    if (a2 == 4)
    {
      uint64_t v18 = 0;
      while (*(unsigned __int16 *)&__src[v18 * 2] == (unsigned __int16)word_1D2ED0DA0[v18])
      {
        if (++v18 == 4)
        {
          if (*((char *)v4 + 23) < 0)
          {
            v4[1] = 4;
            uint64_t v4 = (uint64_t *)*v4;
          }
          else
          {
            *((unsigned char *)v4 + 23) = 4;
          }
          unsigned int v40 = 99157472;
LABEL_117:
          uint64_t v42 = v40 | 0x5DD05D900000000;
          goto LABEL_132;
        }
      }
    }
    if (a2 == 3)
    {
      uint64_t v19 = 0;
      while (*(unsigned __int16 *)&__src[v19 * 2] == (unsigned __int16)word_1D2ED0DAA[v19])
      {
        if (++v19 == 3)
        {
          if (*((char *)v4 + 23) < 0)
          {
            v4[1] = 4;
            uint64_t v4 = (uint64_t *)*v4;
          }
          else
          {
            *((unsigned char *)v4 + 23) = 4;
          }
          unsigned int v40 = 98567657;
          goto LABEL_117;
        }
      }
    }
    if (a2 == 4)
    {
      uint64_t v20 = 0;
      while (*(unsigned __int16 *)&__src[v20 * 2] == (unsigned __int16)word_1D2ED0DB2[v20])
      {
        if (++v20 == 4)
        {
          if (*((char *)v4 + 23) < 0)
          {
            v4[1] = 5;
            uint64_t v4 = (uint64_t *)*v4;
          }
          else
          {
            *((unsigned char *)v4 + 23) = 5;
          }
          *((_DWORD *)v4 + 2) = 1501;
          uint64_t v33 = &qword_1D2ED0DBC;
          goto LABEL_135;
        }
      }
    }
    if (a2 == 5)
    {
      uint64_t v21 = 0;
      while (*(unsigned __int16 *)&__src[v21 * 2] == (unsigned __int16)word_1D2ED0DC8[v21])
      {
        if (++v21 == 5) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 4)
    {
      uint64_t v32 = 0;
      while (*(unsigned __int16 *)&__src[v32 * 2] == (unsigned __int16)word_1D2ED0DD4[v32])
      {
        if (++v32 == 4) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 5)
    {
      uint64_t v34 = 0;
      while (*(unsigned __int16 *)&__src[v34 * 2] == (unsigned __int16)word_1D2ED0DDE[v34])
      {
        if (++v34 == 5) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 4)
    {
      uint64_t v35 = 0;
      while (*(unsigned __int16 *)&__src[v35 * 2] == (unsigned __int16)word_1D2ED0DEA[v35])
      {
        if (++v35 == 4) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 5)
    {
      uint64_t v36 = 0;
      while (*(unsigned __int16 *)&__src[v36 * 2] == (unsigned __int16)word_1D2ED0DF4[v36])
      {
        if (++v36 == 5) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 6)
    {
      uint64_t v39 = 0;
      while (*(unsigned __int16 *)&__src[v39 * 2] == (unsigned __int16)word_1D2ED0E00[v39])
      {
        if (++v39 == 6) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 5)
    {
      uint64_t v41 = 0;
      while (*(unsigned __int16 *)&__src[v41 * 2] == (unsigned __int16)word_1D2ED0E0E[v41])
      {
        if (++v41 == 5) {
          goto LABEL_257;
        }
      }
      uint64_t v57 = 0;
      while (*(unsigned __int16 *)&__src[v57 * 2] == (unsigned __int16)word_1D2ED0E1A[v57])
      {
        if (++v57 == 5) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 4)
    {
      uint64_t v58 = 0;
      while (*(unsigned __int16 *)&__src[v58 * 2] == (unsigned __int16)word_1D2ED0E26[v58])
      {
        if (++v58 == 4) {
          goto LABEL_257;
        }
      }
      uint64_t v66 = 0;
      while (*(unsigned __int16 *)&__src[v66 * 2] == (unsigned __int16)word_1D2ED0E30[v66])
      {
        if (++v66 == 4) {
          goto LABEL_257;
        }
      }
      int v59 = 1;
    }
    else
    {
      int v59 = 0;
    }
    if (a2 == 5)
    {
      uint64_t v67 = 0;
      while (*(unsigned __int16 *)&__src[v67 * 2] == (unsigned __int16)word_1D2ED0E3A[v67])
      {
        if (++v67 == 5) {
          goto LABEL_257;
        }
      }
    }
    if (v59)
    {
      uint64_t v68 = 0;
      while (*(unsigned __int16 *)&__src[v68 * 2] == (unsigned __int16)word_1D2ED0E46[v68])
      {
        if (++v68 == 4) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 3)
    {
      uint64_t v69 = 0;
      while (*(unsigned __int16 *)&__src[v69 * 2] == (unsigned __int16)word_1D2ED0E50[v69])
      {
        if (++v69 == 3) {
          goto LABEL_257;
        }
      }
      uint64_t v70 = 0;
      while (*(unsigned __int16 *)&__src[v70 * 2] == (unsigned __int16)word_1D2ED0E58[v70])
      {
        if (++v70 == 3) {
          goto LABEL_257;
        }
      }
      uint64_t v71 = 0;
      while (*(unsigned __int16 *)&__src[v71 * 2] == (unsigned __int16)word_1D2ED0E60[v71])
      {
        if (++v71 == 3) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 5)
    {
      uint64_t v72 = 0;
      while (*(unsigned __int16 *)&__src[v72 * 2] == (unsigned __int16)word_1D2ED0E68[v72])
      {
        if (++v72 == 5) {
          goto LABEL_257;
        }
      }
    }
    if (v59)
    {
      uint64_t v73 = 0;
      while (*(unsigned __int16 *)&__src[v73 * 2] == (unsigned __int16)word_1D2ED0E74[v73])
      {
        if (++v73 == 4) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 3)
    {
      uint64_t v74 = 0;
      while (*(unsigned __int16 *)&__src[v74 * 2] == (unsigned __int16)word_1D2ED0E7E[v74])
      {
        if (++v74 == 3) {
          goto LABEL_257;
        }
      }
      uint64_t v75 = 0;
      while (*(unsigned __int16 *)&__src[v75 * 2] == (unsigned __int16)word_1D2ED0E86[v75])
      {
        if (++v75 == 3) {
          goto LABEL_257;
        }
      }
    }
    if (v59)
    {
      uint64_t v76 = 0;
      while (*(unsigned __int16 *)&__src[v76 * 2] == (unsigned __int16)word_1D2ED0E8E[v76])
      {
        if (++v76 == 4) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 5)
    {
      uint64_t v77 = 0;
      while (*(unsigned __int16 *)&__src[v77 * 2] == (unsigned __int16)word_1D2ED0E98[v77])
      {
        if (++v77 == 5) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 3)
    {
      uint64_t v78 = 0;
      while (*(unsigned __int16 *)&__src[v78 * 2] == (unsigned __int16)word_1D2ED0EA4[v78])
      {
        if (++v78 == 3) {
          goto LABEL_257;
        }
      }
      uint64_t v79 = 0;
      while (*(unsigned __int16 *)&__src[v79 * 2] == (unsigned __int16)word_1D2ED0EAC[v79])
      {
        if (++v79 == 3) {
          goto LABEL_257;
        }
      }
    }
    if (v59)
    {
      uint64_t v80 = 0;
      while (*(unsigned __int16 *)&__src[v80 * 2] == (unsigned __int16)word_1D2ED0EB4[v80])
      {
        if (++v80 == 4) {
          goto LABEL_257;
        }
      }
    }
    if (a2 == 3)
    {
      uint64_t v81 = 0;
      while (*(unsigned __int16 *)&__src[v81 * 2] == (unsigned __int16)word_1D2ED0EBE[v81])
      {
        if (++v81 == 3) {
          goto LABEL_257;
        }
      }
      uint64_t v82 = 0;
      while (*(unsigned __int16 *)&__src[v82 * 2] == (unsigned __int16)word_1D2ED0EC6[v82])
      {
        if (++v82 == 3) {
          goto LABEL_257;
        }
      }
    }
    if (v59)
    {
      uint64_t v83 = 0;
      while (*(unsigned __int16 *)&__src[v83 * 2] == (unsigned __int16)word_1D2ED0ECE[v83])
      {
        if (++v83 == 4) {
          goto LABEL_257;
        }
      }
    }
    goto LABEL_59;
  }
  int v17 = *(unsigned __int16 *)__src;
  if (v17 == 1489)
  {
    if (*((_WORD *)__src + 1) == 1514)
    {
      if (*((char *)v4 + 23) < 0)
      {
        v4[1] = 4;
        uint64_t v4 = (uint64_t *)*v4;
      }
      else
      {
        *((unsigned char *)v4 + 23) = 4;
      }
      uint64_t v42 = 0x5EA05D505E005D1;
LABEL_132:
      *uint64_t v4 = v42;
      *((_WORD *)v4 + 4) = 0;
      return result;
    }
LABEL_59:
    int v22 = *((char *)v4 + 23);
    unint64_t v23 = v4[1];
    if (v22 >= 0) {
      unint64_t v23 = *((unsigned __int8 *)v4 + 23);
    }
    std::basic_string<char16_t>::size_type v24 = v23 - 2;
    if (v23 >= 2)
    {
      uint64_t v25 = 0;
      uint64_t v26 = (uint64_t *)*v4;
      if (v22 >= 0) {
        uint64_t v26 = v4;
      }
      std::basic_string<char16_t>::size_type v27 = (std::basic_string<char16_t>::size_type)v26 + 2 * v24;
      do
      {
        int v28 = *(unsigned __int16 *)(v27 + v25 * 2);
        int v29 = (unsigned __int16)word_1D2ED0EDE[v25];
      }
      while (v29 == v28 && v25++ != 1);
      if (v29 == v28) {
        goto LABEL_102;
      }
    }
    if (!v23) {
      return result;
    }
    std::basic_string<char16_t>::size_type v24 = v23 - 1;
    int v31 = (uint64_t *)*v4;
    if (v22 >= 0) {
      int v31 = v4;
    }
    if (*((_WORD *)v31 + v24) == 1492) {
      goto LABEL_102;
    }
    unint64_t v37 = v23 - 2;
    if (v23 >= 2)
    {
      uint64_t v43 = 0;
      uint64_t v44 = (uint64_t *)*v4;
      if (v22 >= 0) {
        uint64_t v44 = v4;
      }
      uint64_t v45 = (uint64_t)v44 + 2 * v37;
      do
      {
        int v46 = *(unsigned __int16 *)(v45 + v43 * 2);
        int v47 = (unsigned __int16)word_1D2ED0EE8[v43];
      }
      while (v47 == v46 && v43++ != 1);
      if (v47 == v46)
      {
        std::basic_string<char16_t>::size_type v49 = word_1D2ED0D78;
        std::basic_string<char16_t>::size_type v50 = 1;
        goto LABEL_137;
      }
      uint64_t v51 = 0;
      uint64_t v52 = (uint64_t *)*v4;
      if (v22 >= 0) {
        uint64_t v52 = v4;
      }
      uint64_t v53 = (uint64_t)v52 + 2 * v37;
      do
      {
        int v54 = *(unsigned __int16 *)(v53 + v51 * 2);
        int v55 = (unsigned __int16)word_1D2ED0EEE[v51];
      }
      while (v55 == v54 && v51++ != 1);
      if (v55 == v54)
      {
        std::basic_string<char16_t>::basic_string(&__p, (const std::basic_string<char16_t> *)v4, 0, v23 - 2, a3);
        std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v89, &__p, (std::basic_string<char16_t>::value_type *)word_1D2ED0EF4);
        goto LABEL_168;
      }
      uint64_t v60 = 0;
      long long v61 = (uint64_t *)*v4;
      if (v22 >= 0) {
        long long v61 = v4;
      }
      uint64_t v62 = (uint64_t)v61 + 2 * v37;
      do
      {
        int v63 = *(unsigned __int16 *)(v62 + v60 * 2);
        int v64 = (unsigned __int16)word_1D2ED0ED8[v60];
      }
      while (v64 == v63 && v60++ != 1);
      if (v64 == v63)
      {
        std::basic_string<char16_t>::basic_string(&__p, (const std::basic_string<char16_t> *)v4, 0, v23 - 2, a3);
        std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v89, &__p, word_1D2ED0EFC);
        goto LABEL_168;
      }
    }
    uint64_t v38 = (uint64_t *)*v4;
    if (v22 >= 0) {
      uint64_t v38 = v4;
    }
    if (*((_WORD *)v38 + v24) == 1514)
    {
LABEL_102:
      std::basic_string<char16_t>::basic_string(&__p, (const std::basic_string<char16_t> *)v4, 0, v24, a3);
      std::operator+[abi:ne180100]<char16_t,std::char_traits<char16_t>,std::allocator<char16_t>>((uint64_t)&v89, &__p, word_1D2ED0ED8);
LABEL_168:
      if (*((char *)v4 + 23) < 0) {
        operator delete((void *)*v4);
      }
      double result = *(double *)&v89;
      *(_OWORD *)uint64_t v4 = v89;
      v4[2] = v90;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return result;
    }
    std::basic_string<char16_t>::size_type v49 = word_1D2ED0F06;
    std::basic_string<char16_t>::size_type v50 = 2;
LABEL_137:
    std::basic_string<char16_t>::append((std::basic_string<char16_t> *)v4, v49, v50);
    return result;
  }
  if (v17 != 1510)
  {
    if (v17 == 1488 && *((_WORD *)__src + 1) == 1489)
    {
LABEL_257:
      if (*((char *)v4 + 23) >= 0) {
        uint64_t v84 = *((unsigned __int8 *)v4 + 23);
      }
      else {
        uint64_t v84 = v4[1];
      }
      std::basic_string<char16_t> v85 = &v89;
      std::basic_string<char16_t>::basic_string[abi:ne180100]((uint64_t)&v89, v84 + 2);
      if (v90 < 0) {
        std::basic_string<char16_t> v85 = (long long *)v89;
      }
      if (v84)
      {
        if (*((char *)v4 + 23) >= 0) {
          unint64_t v86 = v4;
        }
        else {
          unint64_t v86 = (const void *)*v4;
        }
        memmove(v85, v86, 2 * v84);
      }
      char v87 = (char *)v85 + 2 * v84;
      *(_DWORD *)char v87 = 99222997;
      *((_WORD *)v87 + 2) = 0;
      if (*((char *)v4 + 23) < 0) {
        operator delete((void *)*v4);
      }
      double result = *(double *)&v89;
      *(_OWORD *)uint64_t v4 = v89;
      v4[2] = v90;
      return result;
    }
    goto LABEL_59;
  }
  if (*((_WORD *)__src + 1) != 1500) {
    goto LABEL_59;
  }
  if (*((char *)v4 + 23) < 0)
  {
    v4[1] = 5;
    uint64_t v4 = (uint64_t *)*v4;
  }
  else
  {
    *((unsigned char *)v4 + 23) = 5;
  }
  *((_DWORD *)v4 + 2) = 1501;
  uint64_t v33 = &qword_1D2ED0D94;
LABEL_135:
  *uint64_t v4 = *v33;
  return result;
}

void sub_1D2D55000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t morphun::grammar::synthesis::HeGrammarSynthesizer_HeDisplayFunction::getDisplayValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v140 = *MEMORY[0x1E4F143B8];
  memset(&v112, 0, sizeof(v112));
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 != *(void *)(a2 + 16))
  {
    uint64_t v6 = (const std::basic_string<char16_t> *)(*(uint64_t (**)(uint64_t))(*(void *)v4 + 24))(v4);
    std::basic_string<char16_t>::operator=(&v112, v6);
    std::basic_string<char16_t>::size_type size = HIBYTE(v112.__r_.__value_.__r.__words[2]);
    if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::basic_string<char16_t>::size_type size = v112.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&__s, a3, a1[32]);
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue(&v110, a3, a1[33]);
      int v8 = SHIBYTE(__s.__r_.__value_.__r.__words[2]);
      if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::basic_string<char16_t>::size_type v9 = HIBYTE(__s.__r_.__value_.__r.__words[2]);
      }
      else {
        std::basic_string<char16_t>::size_type v9 = __s.__r_.__value_.__l.__size_;
      }
      if (v9) {
        goto LABEL_12;
      }
      std::basic_string<char16_t>::size_type v10 = HIBYTE(v110.__r_.__value_.__r.__words[2]);
      if ((v110.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::basic_string<char16_t>::size_type v10 = v110.__r_.__value_.__l.__size_;
      }
      if (v10)
      {
LABEL_12:
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v11 = &v112;
        }
        else {
          uint64_t v11 = (std::basic_string<char16_t> *)v112.__r_.__value_.__r.__words[0];
        }
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v12 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v12 = v112.__r_.__value_.__l.__size_;
        }
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
        {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v137, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
        }
        else
        {
          long long v137 = *(_OWORD *)&__s.__r_.__value_.__l.__data_;
          *(void *)std::basic_string<char16_t> v138 = *((void *)&__s.__r_.__value_.__l + 2);
        }
        if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0) {
          std::basic_string<char16_t>::__init_copy_ctor_external((std::basic_string<char16_t> *)&v138[8], v110.__r_.__value_.__l.__data_, v110.__r_.__value_.__l.__size_);
        }
        else {
          *(std::basic_string<char16_t> *)&v138[8] = v110;
        }
        long long v131 = 0uLL;
        *(void *)&v132[0] = 0;
        v130.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v131;
        LOBYTE(v130.__r_.__value_.__r.__words[1]) = 0;
        *(void *)&long long v131 = operator new(0x30uLL);
        *((void *)&v131 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v131;
        *(void *)&v132[0] = v131 + 48;
        *((void *)&v131 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)v132, &v137, &v139, (std::basic_string<char16_t> *)v131);
        memset(&v130, 0, sizeof(v130));
        morphun::dialog::DictionaryLookupInflector::inflect((uint64_t)__p, (uint64_t)(a1 + 3), v11, v12, (std::basic_string<char16_t> *)&v131, &v130);
        v129[0] = (void **)&v130;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](v129);
        v130.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v131;
        std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v130);
        for (uint64_t i = 0; i != -48; i -= 24)
        {
          if ((char)v138[i + 31] < 0) {
            operator delete(*(void **)&v138[i + 8]);
          }
        }
        int v15 = v115;
        if (v115)
        {
          if ((v114 & 0x80000000) == 0)
          {
            uint64_t v16 = (std::basic_string<char16_t> *)__p;
            goto LABEL_122;
          }
          uint64_t v16 = (std::basic_string<char16_t> *)__p;
          goto LABEL_124;
        }
        uint64_t v17 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_DUAL(v13);
        uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
        int v19 = (char)v18;
        if ((v18 & 0x80u) != 0) {
          uint64_t v18 = *(void *)(v17 + 8);
        }
        if (v9 == v18)
        {
          if (!v9) {
            goto LABEL_58;
          }
          if (v19 >= 0) {
            uint64_t v20 = (unsigned __int16 *)v17;
          }
          else {
            uint64_t v20 = *(unsigned __int16 **)v17;
          }
          p_s = (std::basic_string<char16_t> *)__s.__r_.__value_.__r.__words[0];
          if (v8 >= 0) {
            p_s = &__s;
          }
          std::basic_string<char16_t>::size_type v22 = v9;
          while (*v20 == (unsigned __int16)p_s->__r_.__value_.__s.__data_[0])
          {
            p_s = (std::basic_string<char16_t> *)((char *)p_s + 2);
            ++v20;
            if (!--v22) {
              goto LABEL_58;
            }
          }
        }
        uint64_t v23 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v17);
        uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
        int v25 = (char)v24;
        if ((v24 & 0x80u) != 0) {
          uint64_t v24 = *(void *)(v23 + 8);
        }
        if (v9 != v24) {
          goto LABEL_121;
        }
        if (v9)
        {
          if (v25 >= 0) {
            uint64_t v26 = (unsigned __int16 *)v23;
          }
          else {
            uint64_t v26 = *(unsigned __int16 **)v23;
          }
          std::basic_string<char16_t>::size_type v27 = (std::basic_string<char16_t> *)__s.__r_.__value_.__r.__words[0];
          if (v8 >= 0) {
            std::basic_string<char16_t>::size_type v27 = &__s;
          }
          while (*v26 == (unsigned __int16)v27->__r_.__value_.__s.__data_[0])
          {
            std::basic_string<char16_t>::size_type v27 = (std::basic_string<char16_t> *)((char *)v27 + 2);
            ++v26;
            if (!--v9) {
              goto LABEL_58;
            }
          }
LABEL_121:
          uint64_t v16 = &v112;
          if ((SHIBYTE(v112.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_122:
            std::basic_string<char16_t> v109 = *v16;
            if (!v15) {
              goto LABEL_127;
            }
            goto LABEL_125;
          }
LABEL_124:
          std::basic_string<char16_t>::__init_copy_ctor_external(&v109, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
          if (!v15) {
            goto LABEL_127;
          }
          goto LABEL_125;
        }
LABEL_58:
        memset(&v117, 0, sizeof(v117));
        std::basic_string<char16_t>::size_type v28 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
        int v29 = &v112;
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        {
          std::basic_string<char16_t>::size_type v28 = v112.__r_.__value_.__l.__size_;
          int v29 = (std::basic_string<char16_t> *)v112.__r_.__value_.__r.__words[0];
        }
        long long v137 = 0uLL;
        *(void *)std::basic_string<char16_t> v138 = &word_1D2ED0D7C;
        *(void *)&v138[8] = 1;
        *(void *)&v138[16] = v29;
        *(void *)&v138[24] = v28;
        *(void *)&long long v139 = v28;
        if ((int)v28 >= 1) {
          morphun::util::DelimitedStringIterator::getNext((UChar *)&v137);
        }
        uint64_t v30 = 0;
        int v31 = 0;
        unint64_t v32 = 0;
        char v33 = 1;
        while (1)
        {
          if (SDWORD1(v139) >= (int)v139)
          {
            std::basic_string<char16_t>::size_type v34 = HIBYTE(v117.__r_.__value_.__r.__words[2]);
            std::basic_string<char16_t>::size_type v35 = v117.__r_.__value_.__l.__size_;
            if (!*((void *)&v137 + 1))
            {
              if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v49 = HIBYTE(v117.__r_.__value_.__r.__words[2]);
              }
              else {
                std::basic_string<char16_t>::size_type v49 = v117.__r_.__value_.__l.__size_;
              }
              if (v49) {
                BOOL v50 = 0;
              }
              else {
                BOOL v50 = v30 == v31;
              }
              if (v50)
              {
                if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
                  std::basic_string<char16_t>::__init_copy_ctor_external(&v109, v112.__r_.__value_.__l.__data_, v112.__r_.__value_.__l.__size_);
                }
                else {
                  std::basic_string<char16_t> v109 = v112;
                }
                goto LABEL_267;
              }
              if (((v30 != v31) & v33) != 1)
              {
                if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  int v64 = &v117;
                }
                else {
                  int v64 = (std::basic_string<char16_t> *)v117.__r_.__value_.__r.__words[0];
                }
                (*(void (**)(std::basic_string<char16_t> *__return_ptr, uint64_t *, std::basic_string<char16_t> *, std::basic_string<char16_t>::size_type))(*a1 + 32))(&v109, a1, v64, v49);
                if (v30 != v31)
                {
                  int v65 = v30;
                  do
                  {
                    std::basic_string<char16_t>::push_back(&v109, 32);
                    (*(void (**)(long long *__return_ptr, uint64_t *, void, void))(*a1 + 32))(&v137, a1, *(void *)v65, *((void *)v65 + 1));
                    if (v138[7] >= 0) {
                      uint64_t v66 = (const std::basic_string<char16_t>::value_type *)&v137;
                    }
                    else {
                      uint64_t v66 = (const std::basic_string<char16_t>::value_type *)v137;
                    }
                    if (v138[7] >= 0) {
                      std::basic_string<char16_t>::size_type v67 = v138[7];
                    }
                    else {
                      std::basic_string<char16_t>::size_type v67 = *((void *)&v137 + 1);
                    }
                    std::basic_string<char16_t>::append(&v109, v66, v67);
                    if ((v138[7] & 0x80000000) != 0) {
                      operator delete((void *)v137);
                    }
                    v65 += 16;
                  }
                  while (v65 != v31);
                }
                goto LABEL_267;
              }
              uint64_t v125 = 0;
              if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v51 = &v117;
              }
              else {
                uint64_t v51 = (std::basic_string<char16_t> *)v117.__r_.__value_.__r.__words[0];
              }
              if (!morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[1], (uint64_t)&v125, (const UChar *)v51, v49))
              {
                memset(&v116, 0, sizeof(v116));
                goto LABEL_244;
              }
              if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v52 = &v117;
              }
              else {
                uint64_t v52 = (std::basic_string<char16_t> *)v117.__r_.__value_.__r.__words[0];
              }
              if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::basic_string<char16_t>::size_type v53 = HIBYTE(v117.__r_.__value_.__r.__words[2]);
              }
              else {
                std::basic_string<char16_t>::size_type v53 = v117.__r_.__value_.__l.__size_;
              }
              morphun::dictionary::DictionaryMetaData::getPropertyValues(a1[1], (const UChar *)v52, v53, (unsigned __int16 *)"i", 0xAuLL, &v123);
              if (v123 == v124)
              {
                memset(&v116, 0, sizeof(v116));
                goto LABEL_241;
              }
              morphun::dictionary::DictionaryMetaData::getPropertyName((morphun::dictionary::DictionaryMetaData *)a1[1], (int8x8_t)(a1[35] & v125), (uint64_t)v121);
              uint64_t v55 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE(v54);
              uint64_t v56 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v55);
              uint64_t v118 = 0;
              uint64_t v119 = 0;
              uint64_t v120 = 0;
              uint64_t v57 = v123;
              if (v123 != v124)
              {
                uint64_t v58 = v56;
                uint64_t v59 = a1[2];
                if (*(char *)(v123 + 23) < 0)
                {
                  uint64_t v57 = *(void *)v123;
                  uint64_t v60 = *(void *)(v123 + 8);
                }
                else
                {
                  LODWORD(v60) = *(unsigned __int8 *)(v123 + 23);
                }
                __int16 KeyId = morphun::dictionary::metadata::MarisaTrie<int>::getKeyId((marisa::Trie *)(v59 + 248), v57, v60);
                uint64_t InflectionPattern = morphun::dictionary::Inflector_MMappedDictionary::getInflectionPattern((morphun::dictionary::Inflector_MMappedDictionary *)&v131, v59 + 8, KeyId);
                long long v137 = v131;
                *(_OWORD *)std::basic_string<char16_t> v138 = v132[0];
                *(_OWORD *)&v138[16] = v132[1];
                LOBYTE(v139) = 1;
                if (!WORD1(v132[0]))
                {
                  if (SHIBYTE(v117.__r_.__value_.__r.__words[2]) < 0) {
                    std::basic_string<char16_t>::__init_copy_ctor_external(&v116, v117.__r_.__value_.__l.__data_, v117.__r_.__value_.__l.__size_);
                  }
                  else {
                    std::basic_string<char16_t> v116 = v117;
                  }
                  goto LABEL_237;
                }
                *(_OWORD *)&v130.__r_.__value_.__r.__words[1] = 0uLL;
                v130.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v130.__r_.__value_.__l.__size_;
                uint64_t v70 = *(unsigned __int8 *)(v55 + 23);
                if ((v70 & 0x80u) != 0) {
                  uint64_t v70 = *(void *)(v55 + 8);
                }
                if (v70)
                {
                  uint64_t InflectionPattern = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)InflectionPattern);
                  uint64_t v71 = *(unsigned __int8 *)(v55 + 23);
                  int v72 = (char)v71;
                  if ((v71 & 0x80u) != 0) {
                    uint64_t v71 = *(void *)(v55 + 8);
                  }
                  uint64_t v73 = *(unsigned __int8 *)(InflectionPattern + 23);
                  int v74 = (char)v73;
                  if ((v73 & 0x80u) != 0) {
                    uint64_t v73 = *(void *)(InflectionPattern + 8);
                  }
                  if (v71 == v73)
                  {
                    if (v71)
                    {
                      if (v74 >= 0) {
                        uint64_t v75 = (unsigned __int16 *)InflectionPattern;
                      }
                      else {
                        uint64_t v75 = *(unsigned __int16 **)InflectionPattern;
                      }
                      if (v72 >= 0) {
                        uint64_t v76 = (unsigned __int16 *)v55;
                      }
                      else {
                        uint64_t v76 = *(unsigned __int16 **)v55;
                      }
                      while (*v75 == *v76)
                      {
                        ++v76;
                        ++v75;
                        if (!--v71) {
                          goto LABEL_179;
                        }
                      }
                    }
                    else
                    {
LABEL_179:
                      uint64_t v77 = (unsigned __int16 *)morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_CONSTRUCT((morphun::grammar::synthesis::GrammemeConstants *)InflectionPattern);
                      uint64_t InflectionPattern = (uint64_t)std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>((uint64_t **)&v130, v77, (uint64_t)v77);
                    }
                  }
                }
                uint64_t v78 = *(unsigned __int8 *)(v58 + 23);
                if ((v78 & 0x80u) != 0) {
                  uint64_t v78 = *(void *)(v58 + 8);
                }
                if (!v78) {
                  uint64_t v58 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)InflectionPattern);
                }
                std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>((uint64_t **)&v130, (unsigned __int16 *)v58, v58);
                unint64_t v79 = v122;
                if ((v122 & 0x80u) != 0) {
                  unint64_t v79 = (unint64_t)v121[1];
                }
                if (v79)
                {
                  std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>((uint64_t **)&v130, (unsigned __int16 *)v121, (uint64_t)v121);
                }
                else
                {
                  int v126 = 0;
                  if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    uint64_t v80 = &v117;
                  }
                  else {
                    uint64_t v80 = (std::basic_string<char16_t> *)v117.__r_.__value_.__r.__words[0];
                  }
                  if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    std::basic_string<char16_t>::size_type v81 = HIBYTE(v117.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    std::basic_string<char16_t>::size_type v81 = v117.__r_.__value_.__l.__size_;
                  }
                  if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(a1[1], (uint64_t)&v126, (const UChar *)v80, v81))
                  {
                    unint64_t v82 = (unint64_t)v126;
                    uint64_t v83 = a1[35];
                    uint64_t v84 = (morphun::dictionary::DictionaryMetaData_MMappedDictionary *)npc<morphun::dictionary::DictionaryMetaData_MMappedDictionary>(*(void *)(a1[1] + 8));
                    morphun::dictionary::DictionaryMetaData_MMappedDictionary::getTypesOfValues(v84, v83 & v82, (uint64_t *)&v131);
                    std::basic_string<char16_t> v85 = (unsigned __int16 *)*((void *)&v131 + 1);
                    for (uint64_t j = (unsigned __int16 *)v131; j != v85; j += 12)
                      std::__tree<std::basic_string<char16_t>>::__emplace_unique_key_args<std::basic_string<char16_t>,std::basic_string<char16_t> const&>((uint64_t **)&v130, j, (uint64_t)j);
                    v129[0] = (void **)&v131;
                    std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](v129);
                  }
                }
                std::basic_string<char16_t>::size_type v87 = v130.__r_.__value_.__r.__words[0];
                int v127 = 0;
                int v128 = 0;
                int v126 = 0;
                if ((std::basic_string<char16_t>::size_type *)v130.__r_.__value_.__l.__data_ != &v130.__r_.__value_.__r.__words[1])
                {
                  unint64_t v88 = 0;
                  std::basic_string<char16_t>::size_type v89 = v130.__r_.__value_.__r.__words[0];
                  do
                  {
                    unint64_t v90 = v88;
                    std::basic_string<char16_t>::size_type v91 = *(std::basic_string<char16_t> **)(v89 + 8);
                    if (v91)
                    {
                      do
                      {
                        int64_t v92 = v91;
                        std::basic_string<char16_t>::size_type v91 = (std::basic_string<char16_t> *)v91->__r_.__value_.__r.__words[0];
                      }
                      while (v91);
                    }
                    else
                    {
                      do
                      {
                        int64_t v92 = *(std::basic_string<char16_t> **)(v89 + 16);
                        BOOL v46 = v92->__r_.__value_.__r.__words[0] == v89;
                        std::basic_string<char16_t>::size_type v89 = (std::basic_string<char16_t>::size_type)v92;
                      }
                      while (!v46);
                    }
                    ++v88;
                    std::basic_string<char16_t>::size_type v89 = (std::basic_string<char16_t>::size_type)v92;
                  }
                  while (v92 != (std::basic_string<char16_t> *)&v130.__r_.__value_.__r.__words[1]);
                  long long v133 = (void **)&v126;
                  char v134 = 0;
                  if (v90 >= 0xAAAAAAAAAAAAAAALL) {
                    std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
                  }
                  int v126 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>>(v88);
                  int v127 = v126;
                  int v128 = &v126[v93];
                  unint64_t v135 = v126;
                  unsigned __int8 v136 = v126;
                  *(void *)&long long v131 = &v128;
                  *((void *)&v131 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = &v135;
                  *(void *)&v132[0] = &v136;
                  BYTE8(v132[0]) = 0;
                  long long v94 = v126;
                  do
                  {
                    if (*(char *)(v87 + 55) < 0)
                    {
                      std::basic_string<char16_t>::__init_copy_ctor_external(v94, *(const std::basic_string<char16_t>::value_type **)(v87 + 32), *(void *)(v87 + 40));
                    }
                    else
                    {
                      long long v95 = *(_OWORD *)(v87 + 32);
                      v94->__r_.__value_.__r.__words[2] = *(void *)(v87 + 48);
                      *(_OWORD *)&v94->__r_.__value_.__l.__data_ = v95;
                    }
                    long long v96 = *(std::basic_string<char16_t> **)(v87 + 8);
                    if (v96)
                    {
                      do
                      {
                        unint64_t v97 = v96;
                        long long v96 = (std::basic_string<char16_t> *)v96->__r_.__value_.__r.__words[0];
                      }
                      while (v96);
                    }
                    else
                    {
                      do
                      {
                        unint64_t v97 = *(std::basic_string<char16_t> **)(v87 + 16);
                        BOOL v46 = v97->__r_.__value_.__r.__words[0] == v87;
                        std::basic_string<char16_t>::size_type v87 = (std::basic_string<char16_t>::size_type)v97;
                      }
                      while (!v46);
                    }
                    long long v94 = ++v136;
                    std::basic_string<char16_t>::size_type v87 = (std::basic_string<char16_t>::size_type)v97;
                  }
                  while (v97 != (std::basic_string<char16_t> *)&v130.__r_.__value_.__r.__words[1]);
                  BYTE8(v132[0]) = 1;
                  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&v131);
                  int v127 = v94;
                }
                morphun::dictionary::Inflector_InflectionPattern::constrain((unint64_t *)v129, (uint64_t)&v137, (uint64_t *)&v126, 0);
                *(void *)&long long v131 = &v126;
                std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v131);
                unint64_t v98 = v129[0];
                if (v129[0] != v129[1])
                {
                  morphun::dictionary::Inflector_Inflection::inflect((std::basic_string<char16_t> *)&v131, (int *)v129[0], &v117);
                  if (v120 >= 0) {
                    uint64_t v99 = (unsigned __int16 *)&v118;
                  }
                  else {
                    uint64_t v99 = (unsigned __int16 *)v118;
                  }
                  if (v120 >= 0) {
                    uint64_t v100 = HIBYTE(v120);
                  }
                  else {
                    uint64_t v100 = v119;
                  }
                  morphun::grammar::synthesis::HeGrammarSynthesizer_HeDisplayFunction::applyDefiniteness(&v116, (const std::basic_string<char16_t> *)&v131, v99, v100);
                  if (SBYTE7(v132[0]) < 0) {
                    operator delete((void *)v131);
                  }
                  if (v98) {
                    operator delete(v98);
                  }
                  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v130.__r_.__value_.__l.__size_);
LABEL_237:
                  if (SHIBYTE(v120) < 0) {
                    operator delete(v118);
                  }
                  if ((char)v122 < 0) {
                    operator delete(v121[0]);
                  }
LABEL_241:
                  *(void *)&long long v137 = &v123;
                  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v137);
                  char v101 = HIBYTE(v116.__r_.__value_.__r.__words[2]);
                  std::basic_string<char16_t>::size_type v102 = v116.__r_.__value_.__l.__size_;
                  if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    std::basic_string<char16_t>::size_type v102 = HIBYTE(v116.__r_.__value_.__r.__words[2]);
                  }
                  if (!v102)
                  {
LABEL_244:
                    if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      int v103 = &v117;
                    }
                    else {
                      int v103 = (std::basic_string<char16_t> *)v117.__r_.__value_.__r.__words[0];
                    }
                    if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      std::basic_string<char16_t>::size_type v104 = HIBYTE(v117.__r_.__value_.__r.__words[2]);
                    }
                    else {
                      std::basic_string<char16_t>::size_type v104 = v117.__r_.__value_.__l.__size_;
                    }
                    (*(void (**)(long long *__return_ptr, uint64_t *, std::basic_string<char16_t> *, std::basic_string<char16_t>::size_type))(*a1 + 32))(&v137, a1, v103, v104);
                    uint64_t v105 = v138[7];
                    if (v138[7] < 0) {
                      uint64_t v105 = *((void *)&v137 + 1);
                    }
                    if (v105)
                    {
                      std::basic_string<char16_t>::size_type v106 = v105 - 1;
                      int v107 = &v137;
                      if (v138[7] < 0) {
                        int v107 = (long long *)v137;
                      }
                      if (*((_WORD *)v107 + v106) == 1501) {
                        std::basic_string<char16_t>::resize((std::basic_string<char16_t> *)&v137, v106, 0);
                      }
                    }
                    if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(v116.__r_.__value_.__l.__data_);
                    }
                    v116.__r_.__value_.__r.__words[2] = *(void *)v138;
                    *(_OWORD *)&v116.__r_.__value_.__l.__data_ = v137;
                    char v101 = v138[7];
                  }
                  if (v101 < 0) {
                    std::basic_string<char16_t>::__init_copy_ctor_external(&v109, v116.__r_.__value_.__l.__data_, v116.__r_.__value_.__l.__size_);
                  }
                  else {
                    std::basic_string<char16_t> v109 = v116;
                  }
                  uint64_t v108 = v30;
                  do
                  {
                    std::basic_string<char16_t>::push_back(&v109, 32);
                    std::basic_string<char16_t>::append(&v109, *(const std::basic_string<char16_t>::value_type **)v108, *((void *)v108 + 1));
                    v108 += 16;
                  }
                  while (v108 != v31);
                  if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v116.__r_.__value_.__l.__data_);
                  }
LABEL_267:
                  if (v30) {
                    operator delete(v30);
                  }
                  if (SHIBYTE(v117.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v117.__r_.__value_.__l.__data_);
                  }
                  if (!v115)
                  {
LABEL_127:
                    if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(v112.__r_.__value_.__l.__data_);
                    }
                    std::basic_string<char16_t> v112 = v109;
                    break;
                  }
LABEL_125:
                  if (v114 < 0) {
                    operator delete(__p[0]);
                  }
                  goto LABEL_127;
                }
                if (v129[0]) {
                  operator delete(v129[0]);
                }
                std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)v130.__r_.__value_.__l.__size_);
              }
              memset(&v116, 0, sizeof(v116));
              goto LABEL_237;
            }
          }
          else
          {
            std::basic_string<char16_t>::size_type v34 = HIBYTE(v117.__r_.__value_.__r.__words[2]);
            std::basic_string<char16_t>::size_type v35 = v117.__r_.__value_.__l.__size_;
          }
          if ((v34 & 0x80u) != 0) {
            std::basic_string<char16_t>::size_type v34 = v35;
          }
          long long v36 = v137;
          if (v34)
          {
            if ((unint64_t)v31 >= v32)
            {
              uint64_t v37 = (v31 - v30) >> 4;
              unint64_t v38 = v37 + 1;
              if ((unint64_t)(v37 + 1) >> 60) {
                std::vector<std::pair<morphun::dialog::DefaultArticleLookupFunction const*,std::vector<std::pair<std::basic_string<char16_t>,std::vector<std::pair<morphun::dialog::SemanticFeature const* const,std::basic_string<char16_t>>>>> const>>::__throw_length_error[abi:ne180100]();
              }
              if ((uint64_t)(v32 - (void)v30) >> 3 > v38) {
                unint64_t v38 = (uint64_t)(v32 - (void)v30) >> 3;
              }
              if (v32 - (unint64_t)v30 >= 0x7FFFFFFFFFFFFFF0) {
                unint64_t v39 = 0xFFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v39 = v38;
              }
              if (v39) {
                unint64_t v39 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::u16string_view>>(v39);
              }
              else {
                uint64_t v40 = 0;
              }
              uint64_t v41 = (long long *)(v39 + 16 * v37);
              *uint64_t v41 = v36;
              if (v31 == v30)
              {
                uint64_t v43 = (char *)(v39 + 16 * v37);
              }
              else
              {
                unint64_t v42 = v39 + 16 * v37;
                do
                {
                  uint64_t v43 = (char *)(v42 - 16);
                  *(_OWORD *)(v42 - 16) = *((_OWORD *)v31 - 1);
                  v31 -= 16;
                  v42 -= 16;
                }
                while (v31 != v30);
              }
              unint64_t v32 = v39 + 16 * v40;
              int v31 = (char *)(v41 + 1);
              if (v30) {
                operator delete(v30);
              }
              uint64_t v30 = v43;
            }
            else
            {
              *(_OWORD *)int v31 = v137;
              v31 += 16;
            }
            uint64_t v44 = a1[1];
            uint64_t v45 = a1[36];
            *(void *)&long long v131 = 0;
            if (morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v44, (uint64_t)&v131, (const UChar *)v137, *((uint64_t *)&v137 + 1)))
            {
              BOOL v46 = ((unint64_t)v131 & v45) == v45;
            }
            else
            {
              BOOL v46 = 0;
            }
            if (!v46
              || (uint64_t v47 = a1[1],
                  uint64_t v48 = a1[37],
                  *(void *)&long long v131 = 0,
                  morphun::dictionary::DictionaryMetaData::getCombinedBinaryType(v47, (uint64_t)&v131, (const UChar *)v137, *((uint64_t *)&v137 + 1)))&& ((unint64_t)v131 & v48) == v48)
            {
              char v33 = 0;
            }
          }
          else
          {
            std::basic_string<char16_t>::__assign_external(&v117, (const std::basic_string<char16_t>::value_type *)v137, *((std::basic_string<char16_t>::size_type *)&v137 + 1));
          }
          morphun::util::DelimitedStringIterator::operator++((morphun::util::DelimitedStringIterator *)&v137);
        }
      }
      morphun::grammar::synthesis::GrammarSynthesizerUtil::getFeatureValue((std::basic_string<char16_t> *)&v137, a3, a1[34]);
      if ((v138[7] & 0x80000000) != 0)
      {
        uint64_t v61 = *((void *)&v137 + 1);
        if (!*((void *)&v137 + 1)) {
          goto LABEL_138;
        }
        uint64_t v62 = (unsigned __int16 *)v137;
      }
      else
      {
        uint64_t v61 = v138[7];
        if (!v138[7]) {
          goto LABEL_138;
        }
        uint64_t v62 = (unsigned __int16 *)&v137;
      }
      morphun::grammar::synthesis::HeGrammarSynthesizer_HeDisplayFunction::applyDefiniteness((std::basic_string<char16_t> *)&v131, &v112, v62, v61);
      if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v112.__r_.__value_.__l.__data_);
      }
      *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v131;
      v112.__r_.__value_.__r.__words[2] = *(void *)&v132[0];
LABEL_138:
      operator new();
    }
    if ((*((unsigned char *)&v112.__r_.__value_.__s + 23) & 0x80) != 0) {
      operator delete(v112.__r_.__value_.__l.__data_);
    }
  }
  return 0;
}

void sub_1D2D55DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::grammar::synthesis::SvGrammarSynthesizer::Count>>>::destroy((char *)a72);
  if (a56 < 0) {
    operator delete(__p);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  a70 = (uint64_t)&a63;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a70);
  if (v72) {
    operator delete(v72);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (a40 && a39 < 0) {
    operator delete(a34);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_HeDisplayFunction::applyDefiniteness(std::basic_string<char16_t> *this, const std::basic_string<char16_t> *a2, unsigned __int16 *a3, uint64_t a4)
{
  std::basic_string<char16_t>::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0) {
    std::basic_string<char16_t>::size_type size = a2->__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v9 = morphun::grammar::synthesis::GrammemeConstants::DEFINITENESS_DEFINITE((morphun::grammar::synthesis::GrammemeConstants *)this);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = (unsigned __int16 *)v9;
    }
    else {
      uint64_t v11 = *(unsigned __int16 **)v9;
    }
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *(void *)(v9 + 8);
    }
    if (v10 == a4)
    {
      if (!v10)
      {
LABEL_13:
        this->__r_.__value_.__r.__words[0] = 0;
        this->__r_.__value_.__l.__size_ = 0;
        this->__r_.__value_.__r.__words[2] = 0;
        {
          operator new();
        }
        if (!morphun::grammar::synthesis::DEFINITENESS_COMPOUND_SPLITTER(void)::DEFINITENESS_COMPOUND_SPLITTER_)
        {
          exception = (morphun::exception::NullPointerException *)__cxa_allocate_exception(0x38uLL);
          morphun::exception::NullPointerException::NullPointerException(exception);
        }
        int v12 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
        if (v12 >= 0) {
          int v13 = a2;
        }
        else {
          int v13 = (const std::basic_string<char16_t> *)a2->__r_.__value_.__r.__words[0];
        }
        if (v12 >= 0) {
          uint64_t v14 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
        }
        else {
          uint64_t v14 = LODWORD(a2->__r_.__value_.__r.__words[1]);
        }
        unsigned int v15 = MEMORY[0x1D942C1E0](*(void *)morphun::grammar::synthesis::DEFINITENESS_COMPOUND_SPLITTER(void)::DEFINITENESS_COMPOUND_SPLITTER_, v13, v14, 0);
        memset(&v34, 0, sizeof(v34));
        if ((v15 & 0x80000000) != 0)
        {
          std::basic_string<char16_t>::operator=(&v34, a2);
        }
        else
        {
          std::basic_string<char16_t>::size_type v16 = v15;
          unint64_t v17 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
          int v18 = (char)v17;
          if ((v17 & 0x80u) != 0) {
            unint64_t v17 = a2->__r_.__value_.__l.__size_;
          }
          if (v18 >= 0) {
            int v19 = (const std::basic_string<char16_t>::value_type *)a2;
          }
          else {
            int v19 = (const std::basic_string<char16_t>::value_type *)a2->__r_.__value_.__r.__words[0];
          }
          if (v17 >= v15) {
            std::basic_string<char16_t>::size_type v20 = v15;
          }
          else {
            std::basic_string<char16_t>::size_type v20 = v17;
          }
          std::basic_string<char16_t>::append(this, v19, v20);
          std::basic_string<char16_t>::basic_string(&v33, a2, v16, 0xFFFFFFFFFFFFFFFFLL, v21);
          std::basic_string<char16_t> v34 = v33;
        }
        std::basic_string<char16_t>::size_type v24 = HIBYTE(v34.__r_.__value_.__r.__words[2]);
        char v25 = HIBYTE(v34.__r_.__value_.__r.__words[2]);
        std::basic_string<char16_t>::size_type v26 = v34.__r_.__value_.__l.__size_;
        if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::basic_string<char16_t>::size_type v27 = HIBYTE(v34.__r_.__value_.__r.__words[2]);
        }
        else {
          std::basic_string<char16_t>::size_type v27 = v34.__r_.__value_.__l.__size_;
        }
        if (!v27) {
          goto LABEL_44;
        }
        std::basic_string<char16_t>::size_type v28 = v34.__r_.__value_.__r.__words[0];
        int v29 = &v34;
        if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v29 = (std::basic_string<char16_t> *)v34.__r_.__value_.__r.__words[0];
        }
        if (v29->__r_.__value_.__s.__data_[0] != 1492)
        {
LABEL_44:
          std::basic_string<char16_t>::append(this, word_1D2ED0EE4, 1uLL);
          std::basic_string<char16_t>::size_type v24 = HIBYTE(v34.__r_.__value_.__r.__words[2]);
          std::basic_string<char16_t>::size_type v26 = v34.__r_.__value_.__l.__size_;
          std::basic_string<char16_t>::size_type v28 = v34.__r_.__value_.__r.__words[0];
          char v25 = HIBYTE(v34.__r_.__value_.__r.__words[2]);
        }
        if (v25 >= 0) {
          uint64_t v30 = &v34;
        }
        else {
          uint64_t v30 = (std::basic_string<char16_t> *)v28;
        }
        if (v25 >= 0) {
          std::basic_string<char16_t>::size_type v31 = v24;
        }
        else {
          std::basic_string<char16_t>::size_type v31 = v26;
        }
        std::basic_string<char16_t>::append(this, (const std::basic_string<char16_t>::value_type *)v30, v31);
        if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v34.__r_.__value_.__l.__data_);
        }
        return;
      }
      while (*a3 == *v11)
      {
        ++v11;
        ++a3;
        if (!--v10) {
          goto LABEL_13;
        }
      }
    }
  }
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    std::basic_string<char16_t>::size_type v22 = (const std::basic_string<char16_t>::value_type *)a2->__r_.__value_.__r.__words[0];
    std::basic_string<char16_t>::size_type v23 = a2->__r_.__value_.__l.__size_;
    std::basic_string<char16_t>::__init_copy_ctor_external(this, v22, v23);
  }
  else
  {
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
    this->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
  }
}

void sub_1D2D56334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  MEMORY[0x1D942B8B0](v19, 0x1020C405F07FB98);
  if (*(char *)(v18 + 23) < 0) {
    operator delete(*(void **)v18);
  }
  _Unwind_Resume(a1);
}

void morphun::grammar::synthesis::HeGrammarSynthesizer_HeDisplayFunction::~HeGrammarSynthesizer_HeDisplayFunction(morphun::grammar::synthesis::HeGrammarSynthesizer_HeDisplayFunction *this)
{
  *(void *)this = &unk_1F2A0C760;

  JUMPOUT(0x1D942B8B0);
}

{
  *(void *)this = &unk_1F2A0C760;
}

void sub_1D2D564B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void morphun::analysis::stemmer::RussianExposableMorphology::selectLemmaInflection(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = a2[2];
  if ((a1[34] & a3) == a1[32] && (a1[50] & a3) == 0)
  {
    uint64_t v11 = a1[43];
    int v12 = (uint64_t **)(a1 + 58);
    int v13 = (uint64_t **)(a1 + 55);
    if ((v11 & a3) != 0) {
      uint64_t v10 = v12;
    }
    else {
      uint64_t v10 = v13;
    }
  }
  else
  {
    uint64_t v10 = (uint64_t **)(a1 + 55);
  }
  morphun::dictionary::Inflector_InflectionPattern::selectLemmaInflection(a4, v8, v9, v10);
}

void morphun::analysis::stemmer::RussianExposableMorphology::~RussianExposableMorphology(morphun::analysis::stemmer::RussianExposableMorphology *this)
{
  morphun::analysis::stemmer::RussianExposableMorphology::~RussianExposableMorphology(this);

  JUMPOUT(0x1D942B8B0);
}

{
  void *v2;
  void *v3;
  uint64_t vars8;

  icu4cxx::UnicodeSet::~UnicodeSet((morphun::analysis::stemmer::RussianExposableMorphology *)((char *)this + 488));
  uint64_t v2 = (void *)*((void *)this + 58);
  if (v2)
  {
    *((void *)this + 59) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 55);
  if (v3)
  {
    *((void *)this + 56) = v3;
    operator delete(v3);
  }
  std::__tree<std::__value_type<std::u16string_view,char16_t const*>,std::__map_value_compare<std::u16string_view,std::__value_type<std::u16string_view,char16_t const*>,std::less<std::u16string_view>,true>,std::allocator<std::__value_type<std::u16string_view,char16_t const*>>>::destroy(*((void **)this + 53));

  morphun::dialog::DictionaryLookupInflector::~DictionaryLookupInflector(this, &off_1F2A07FC8);
}

morphun::analysis::stemmer::RussianExposableMorphology *morphun::analysis::stemmer::RussianExposableMorphology::RussianExposableMorphology(morphun::analysis::stemmer::RussianExposableMorphology *this)
{
  long long v215 = (long long *)*MEMORY[0x1E4F143B8];
  *(void *)this = &unk_1F2A08C08;
  std::basic_string<char16_t> v177 = (morphun::grammar::synthesis::GrammemeConstants *)morphun::util::LocaleUtils::RUSSIAN(this);
  uint64_t v1 = morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN(v177);
  int v2 = *(char *)(v1 + 23);
  if (v2 >= 0) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = *(void *)v1;
  }
  if (v2 >= 0) {
    uint64_t v4 = *(unsigned __int8 *)(v1 + 23);
  }
  else {
    uint64_t v4 = *(void *)(v1 + 8);
  }
  uint64_t v5 = morphun::grammar::synthesis::GrammemeConstants::POS_NOUN((morphun::grammar::synthesis::GrammemeConstants *)v1);
  int v6 = *(char *)(v5 + 23);
  if (v6 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = *(void *)v5;
  }
  if (v6 >= 0) {
    uint64_t v8 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    uint64_t v8 = *(void *)(v5 + 8);
  }
  uint64_t v9 = morphun::grammar::synthesis::GrammemeConstants::POS_ADJECTIVE((morphun::grammar::synthesis::GrammemeConstants *)v5);
  int v10 = *(char *)(v9 + 23);
  if (v10 >= 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = *(void *)v9;
  }
  if (v10 >= 0) {
    uint64_t v12 = *(unsigned __int8 *)(v9 + 23);
  }
  else {
    uint64_t v12 = *(void *)(v9 + 8);
  }
  uint64_t v13 = morphun::grammar::synthesis::GrammemeConstants::POS_VERB((morphun::grammar::synthesis::GrammemeConstants *)v9);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)v13;
  uint64_t v16 = *(void *)(v13 + 8);
  unint64_t v17 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x40uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = (char *)v17 + 64;
  *(void *)&long long v201 = (char *)v17 + 64;
  if ((v14 & 0x80u) == 0) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v15;
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v19 = v14;
  }
  else {
    uint64_t v19 = v16;
  }
  *(void *)unint64_t v17 = v3;
  *((void *)v17 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v4;
  *((void *)v17 + 2) = v7;
  *((void *)v17 + 3) = v8;
  *((void *)v17 + 4) = v11;
  *((void *)v17 + 5) = v12;
  *((void *)v17 + 6) = v18;
  *((void *)v17 + 7) = v19;
  *(void *)&long long v200 = v17;
  uint64_t v20 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE(v17);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = *(void *)v20;
  }
  if ((v21 & 0x80u) != 0) {
    uint64_t v21 = *(void *)(v20 + 8);
  }
  uint64_t v186 = v21;
  uint64_t v188 = v22;
  uint64_t v23 = morphun::grammar::synthesis::GrammemeConstants::CASE_GENITIVE((morphun::grammar::synthesis::GrammemeConstants *)v20);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = *(void *)v23;
  }
  if ((v24 & 0x80u) != 0) {
    uint64_t v24 = *(void *)(v23 + 8);
  }
  uint64_t v182 = v24;
  uint64_t v184 = v25;
  uint64_t v26 = morphun::grammar::synthesis::GrammemeConstants::CASE_DATIVE((morphun::grammar::synthesis::GrammemeConstants *)v23);
  char v27 = *(unsigned char *)(v26 + 23);
  if (v27 >= 0) {
    uint64_t v28 = v26;
  }
  else {
    uint64_t v28 = *(void *)v26;
  }
  uint64_t v179 = v28;
  if (v27 >= 0) {
    uint64_t v29 = *(unsigned __int8 *)(v26 + 23);
  }
  else {
    uint64_t v29 = *(void *)(v26 + 8);
  }
  uint64_t v30 = morphun::grammar::synthesis::GrammemeConstants::CASE_ACCUSATIVE((morphun::grammar::synthesis::GrammemeConstants *)v26);
  int v31 = *(char *)(v30 + 23);
  if (v31 >= 0) {
    uint64_t v32 = v30;
  }
  else {
    uint64_t v32 = *(void *)v30;
  }
  if (v31 >= 0) {
    uint64_t v33 = *(unsigned __int8 *)(v30 + 23);
  }
  else {
    uint64_t v33 = *(void *)(v30 + 8);
  }
  uint64_t v34 = morphun::grammar::synthesis::GrammemeConstants::CASE_INSTRUMENTAL((morphun::grammar::synthesis::GrammemeConstants *)v30);
  int v35 = *(char *)(v34 + 23);
  if (v35 >= 0) {
    uint64_t v36 = v34;
  }
  else {
    uint64_t v36 = *(void *)v34;
  }
  if (v35 >= 0) {
    uint64_t v37 = *(unsigned __int8 *)(v34 + 23);
  }
  else {
    uint64_t v37 = *(void *)(v34 + 8);
  }
  uint64_t v38 = morphun::grammar::synthesis::GrammemeConstants::CASE_PREPOSITIONAL((morphun::grammar::synthesis::GrammemeConstants *)v34);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
  uint64_t v40 = *(void *)v38;
  uint64_t v41 = *(void *)(v38 + 8);
  *((void *)&v201 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = 0;
  *(void *)&long long v202 = 0;
  unint64_t v42 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x60uLL);
  *((void *)&v202 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = (char *)v42 + 96;
  if ((v39 & 0x80u) == 0) {
    uint64_t v43 = v38;
  }
  else {
    uint64_t v43 = v40;
  }
  if ((v39 & 0x80u) == 0) {
    uint64_t v44 = v39;
  }
  else {
    uint64_t v44 = v41;
  }
  *(void *)unint64_t v42 = v188;
  *((void *)v42 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v186;
  *((void *)v42 + 2) = v184;
  *((void *)v42 + 3) = v182;
  *((void *)v42 + 4) = v179;
  *((void *)v42 + 5) = v29;
  *((void *)v42 + 6) = v32;
  *((void *)v42 + 7) = v33;
  *((void *)v42 + 8) = v36;
  *((void *)v42 + 9) = v37;
  *((void *)v42 + 10) = v43;
  *((void *)v42 + 1marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v44;
  *((void *)&v201 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v42;
  *(void *)&long long v202 = (char *)v42 + 96;
  uint64_t v45 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE(v42);
  int v46 = *(char *)(v45 + 23);
  if (v46 >= 0) {
    uint64_t v47 = v45;
  }
  else {
    uint64_t v47 = *(void *)v45;
  }
  if (v46 >= 0) {
    uint64_t v48 = *(unsigned __int8 *)(v45 + 23);
  }
  else {
    uint64_t v48 = *(void *)(v45 + 8);
  }
  uint64_t v49 = morphun::grammar::synthesis::GrammemeConstants::GENDER_FEMININE((morphun::grammar::synthesis::GrammemeConstants *)v45);
  int v50 = *(char *)(v49 + 23);
  if (v50 >= 0) {
    uint64_t v51 = v49;
  }
  else {
    uint64_t v51 = *(void *)v49;
  }
  if (v50 >= 0) {
    uint64_t v52 = *(unsigned __int8 *)(v49 + 23);
  }
  else {
    uint64_t v52 = *(void *)(v49 + 8);
  }
  uint64_t v53 = morphun::grammar::synthesis::GrammemeConstants::GENDER_NEUTER((morphun::grammar::synthesis::GrammemeConstants *)v49);
  uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
  uint64_t v55 = *(void *)v53;
  uint64_t v56 = *(void *)(v53 + 8);
  *(void *)&long long v203 = 0;
  uint64_t v57 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x30uLL);
  *((void *)&v203 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = (char *)v57 + 48;
  *(void *)&long long v204 = (char *)v57 + 48;
  if ((v54 & 0x80u) == 0) {
    uint64_t v58 = v53;
  }
  else {
    uint64_t v58 = v55;
  }
  if ((v54 & 0x80u) == 0) {
    uint64_t v59 = v54;
  }
  else {
    uint64_t v59 = v56;
  }
  *(void *)uint64_t v57 = v47;
  *((void *)v57 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v48;
  *((void *)v57 + 2) = v51;
  *((void *)v57 + 3) = v52;
  *((void *)v57 + 4) = v58;
  *((void *)v57 + 5) = v59;
  *(void *)&long long v203 = v57;
  uint64_t v60 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR(v57);
  int v61 = *(char *)(v60 + 23);
  if (v61 >= 0) {
    uint64_t v62 = v60;
  }
  else {
    uint64_t v62 = *(void *)v60;
  }
  if (v61 >= 0) {
    uint64_t v63 = *(unsigned __int8 *)(v60 + 23);
  }
  else {
    uint64_t v63 = *(void *)(v60 + 8);
  }
  uint64_t v64 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v60);
  uint64_t v65 = *(unsigned __int8 *)(v64 + 23);
  uint64_t v66 = *(void *)v64;
  uint64_t v67 = *(void *)(v64 + 8);
  *((void *)&v204 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = 0;
  uint64_t v68 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0x20uLL);
  *(void *)&long long v205 = (char *)v68 + 32;
  *((void *)&v205 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = (char *)v68 + 32;
  if ((v65 & 0x80u) == 0) {
    uint64_t v69 = v64;
  }
  else {
    uint64_t v69 = v66;
  }
  if ((v65 & 0x80u) == 0) {
    uint64_t v70 = v65;
  }
  else {
    uint64_t v70 = v67;
  }
  *(void *)uint64_t v68 = v62;
  *((void *)v68 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v63;
  *((void *)v68 + 2) = v69;
  *((void *)v68 + 3) = v70;
  *((void *)&v204 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v68;
  uint64_t v71 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE(v68);
  int v72 = *(char *)(v71 + 23);
  if (v72 >= 0) {
    uint64_t v73 = v71;
  }
  else {
    uint64_t v73 = *(void *)v71;
  }
  if (v72 >= 0) {
    uint64_t v74 = *(unsigned __int8 *)(v71 + 23);
  }
  else {
    uint64_t v74 = *(void *)(v71 + 8);
  }
  uint64_t v75 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_ANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v71);
  uint64_t v76 = *(unsigned __int8 *)(v75 + 23);
  uint64_t v77 = *(void *)v75;
  uint64_t v78 = *(void *)(v75 + 8);
  long long v206 = 0uLL;
  *(void *)&long long v207 = 0;
  unint64_t v79 = operator new(0x20uLL);
  if ((v76 & 0x80u) == 0) {
    uint64_t v80 = v75;
  }
  else {
    uint64_t v80 = v77;
  }
  if ((v76 & 0x80u) == 0) {
    uint64_t v81 = v76;
  }
  else {
    uint64_t v81 = v78;
  }
  *((void *)&v206 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v79 + 4;
  *(void *)&long long v207 = v79 + 4;
  *unint64_t v79 = v73;
  v79[1] = v74;
  v79[2] = v80;
  v79[3] = v81;
  *(void *)&long long v206 = v79;
  {
    operator new();
  }
  uint64_t v82 = morphun::grammar::synthesis::GrammemeConstants::DERIVATIONTYPE_PATRONYMIC(void)::DERIVATIONTYPE_PATRONYMIC_;
  npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::GrammemeConstants::DERIVATIONTYPE_PATRONYMIC(void)::DERIVATIONTYPE_PATRONYMIC_);
  uint64_t v83 = *(unsigned __int8 *)(v82 + 23);
  uint64_t v84 = *(void *)v82;
  uint64_t v85 = *(void *)(v82 + 8);
  *((void *)&v207 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = 0;
  long long v208 = 0uLL;
  unint64_t v86 = operator new(0x10uLL);
  if ((v83 & 0x80u) == 0) {
    uint64_t v87 = v82;
  }
  else {
    uint64_t v87 = v84;
  }
  if ((v83 & 0x80u) == 0) {
    uint64_t v88 = v83;
  }
  else {
    uint64_t v88 = v85;
  }
  *(void *)&long long v208 = v86 + 2;
  *((void *)&v208 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v86 + 2;
  *unint64_t v86 = v87;
  v86[1] = v88;
  *((void *)&v207 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v86;
  {
    operator new();
  }
  uint64_t v89 = morphun::grammar::synthesis::GrammemeConstants::REGISTER_INFORMAL(void)::REGISTER_INFORMAL_;
  npc<std::basic_string<char16_t>>(morphun::grammar::synthesis::GrammemeConstants::REGISTER_INFORMAL(void)::REGISTER_INFORMAL_);
  uint64_t v90 = *(unsigned __int8 *)(v89 + 23);
  uint64_t v91 = *(void *)v89;
  uint64_t v92 = *(void *)(v89 + 8);
  *(void *)&long long v209 = 0;
  uint64_t v93 = operator new(0x10uLL);
  *((void *)&v209 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v93 + 2;
  *(void *)&v210[0] = v93 + 2;
  if ((v90 & 0x80u) == 0) {
    uint64_t v94 = v89;
  }
  else {
    uint64_t v94 = v91;
  }
  if ((v90 & 0x80u) == 0) {
    uint64_t v95 = v90;
  }
  else {
    uint64_t v95 = v92;
  }
  *uint64_t v93 = v94;
  v93[1] = v95;
  *(void *)&long long v209 = v93;
  std::basic_string<char16_t> v195 = 0;
  char v196 = 0;
  char v194 = 0;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v194;
  LOBYTE(__dst.__r_.__value_.__r.__words[1]) = 0;
  char v194 = (morphun::grammar::synthesis::GrammemeConstants *)operator new(0xA8uLL);
  std::basic_string<char16_t> v195 = v194;
  char v196 = (void *)((char *)v194 + 168);
  std::basic_string<char16_t> v195 = (morphun::grammar::synthesis::GrammemeConstants *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::u16string_view>>,std::vector<std::u16string_view> const*,std::vector<std::u16string_view> const*,std::vector<std::u16string_view>*>((uint64_t)&v196, (uint64_t)&v200, (uint64_t)v210 + 8, v194);
  uint64_t v96 = morphun::grammar::synthesis::GrammemeConstants::POS_PROPER_NOUN(v195);
  if (*(char *)(v96 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&__dst, *(const std::basic_string<char16_t>::value_type **)v96, *(void *)(v96 + 8));
  }
  else
  {
    long long v97 = *(_OWORD *)v96;
    __dst.__r_.__value_.__r.__words[2] = *(void *)(v96 + 16);
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v97;
  }
  uint64_t v98 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_PLURAL((morphun::grammar::synthesis::GrammemeConstants *)v96);
  if (*(char *)(v98 + 23) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(&v212, *(const std::basic_string<char16_t>::value_type **)v98, *(void *)(v98 + 8));
  }
  else
  {
    long long v99 = *(_OWORD *)v98;
    v212.__r_.__value_.__r.__words[2] = *(void *)(v98 + 16);
    *(_OWORD *)&v212.__r_.__value_.__l.__data_ = v99;
  }
  long long v213 = 0uLL;
  uint64_t v214 = 0;
  uint64_t v197 = (void **)&v213;
  LOBYTE(v198) = 0;
  *(void *)&long long v213 = operator new(0x30uLL);
  *((void *)&v213 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v213;
  uint64_t v214 = v213 + 48;
  *((void *)&v213 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v214, (long long *)&__dst, &v213, (std::basic_string<char16_t> *)v213);
  char v192 = 0;
  std::basic_string<char16_t> v193 = 0;
  std::basic_string<char16_t> v191 = 0;
  uint64_t v197 = (void **)&v191;
  LOBYTE(v198) = 0;
  std::basic_string<char16_t> v191 = (std::basic_string<char16_t> *)operator new(0x18uLL);
  char v192 = v191;
  std::basic_string<char16_t> v193 = (uint64_t *)&v191[1];
  char v192 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<std::basic_string<char16_t>>>,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>> const*,std::vector<std::basic_string<char16_t>>*>((uint64_t)&v193, (long long **)&v213, &v215, v191);
  uint64_t v197 = 0;
  uint64_t v198 = 0;
  uint64_t v199 = 0;
  morphun::analysis::MorphologicalAnalyzer::MorphologicalAnalyzer((uint64_t *)this, (uint64_t *)&off_1F2A07FD0, v177, (uint64_t *)&v197, (uint64_t)&v194, (uint64_t **)&v191);
  *(void *)this = &unk_1F2A02288;
  *((unsigned char *)this + 224) = 1;
  uint64_t v197 = (void **)&v191;
  std::vector<std::vector<std::basic_string<char16_t>>>::__destroy_vector::operator()[abi:ne180100](&v197);
  uint64_t v197 = (void **)&v213;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v212.__r_.__value_.__r.__words[i + 2]) < 0) {
      operator delete(*(void **)((char *)&__dst + i * 8 + 24));
    }
  }
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)&v194;
  std::vector<std::vector<std::u16string_view>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__dst);
  for (uint64_t j = 0; j != -168; j -= 24)
  {
    std::basic_string<char16_t>::size_type v102 = *(void **)((char *)&v210[-1] + j);
    if (v102)
    {
      *(void *)((char *)&v209 + j + 8) = v102;
      operator delete(v102);
    }
  }
  *(void *)this = &off_1F2A10FA8;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((void *)this + 5marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = 0;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 376) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  v210[0] = xmmword_1E696E108;
  v210[1] = *(_OWORD *)&off_1E696E118;
  v210[2] = xmmword_1E696E128;
  long long v206 = xmmword_1E696E0C8;
  long long v207 = *(_OWORD *)&off_1E696E0D8;
  long long v208 = xmmword_1E696E0E8;
  long long v209 = unk_1E696E0F8;
  long long v202 = xmmword_1E696E088;
  long long v203 = unk_1E696E098;
  long long v204 = xmmword_1E696E0A8;
  long long v205 = *(_OWORD *)&off_1E696E0B8;
  long long v200 = xmmword_1E696E068;
  long long v201 = unk_1E696E078;
  std::set<std::u16string_view>::set[abi:ne180100]((uint64_t)this + 416, (uint64_t)&v200, 13);
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  v185 = (void **)((char *)this + 464);
  std::basic_string<char16_t> v187 = (void **)((char *)this + 440);
  *(_OWORD *)((char *)this + 440) = 0u;
  icu4cxx::UnicodeSet::UnicodeSet((uint64_t)this + 488);
  uint64_t v103 = *((void *)this + 1);
  std::basic_string<char16_t> v183 = (void *)((char *)this + 488);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"familyname");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t BinaryProperties = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 50, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)BinaryProperties);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "s");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t v105 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 51, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v105);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"feminine");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t>::size_type v106 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 29, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v106);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "m");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  int v107 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 30, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v107);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "n");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t v108 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 31, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v108);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"animate");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t> v109 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 32, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v109);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"inanimate");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t> v110 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 33, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v110);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  *((void *)this + 34) = *((void *)this + 33) | *((void *)this + 32);
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"singular");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t>::size_type v111 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 35, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v111);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "p");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t> v112 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 36, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v112);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"nominative");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  int v113 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 37, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v113);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "g");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  char v114 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 38, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v114);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"dative");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  unsigned __int8 v115 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 39, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v115);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"accusative");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t> v116 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 40, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v116);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "i");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t> v117 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 41, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v117);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"prepositional");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t v118 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 42, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v118);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"noun");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t v119 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 43, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v119);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "a");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t v120 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 45, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v120);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "a");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  std::basic_string<char16_t>::size_type v121 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 46, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v121);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"verb");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  unsigned __int8 v122 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 47, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v122);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, "n");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t v123 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 48, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v123);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  std::basic_string<char16_t>::basic_string[abi:ne180100]<0>(&__dst, (char *)L"proper-noun");
  long long v200 = 0uLL;
  *(void *)&long long v201 = 0;
  uint64_t v197 = (void **)&v200;
  LOBYTE(v198) = 0;
  *(void *)&long long v200 = operator new(0x18uLL);
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = v200;
  *(void *)&long long v201 = v200 + 24;
  *((void *)&v200 + marisa::scoped_ptr<marisa::grimoire::trie::LoudsTrie>::~scoped_ptr(this + 1) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::basic_string<char16_t>>,std::basic_string<char16_t> const*,std::basic_string<char16_t> const*,std::basic_string<char16_t>*>((uint64_t)&v201, (long long *)&__dst, (long long *)&v212, (std::basic_string<char16_t> *)v200);
  uint64_t v124 = morphun::dictionary::DictionaryMetaData::getBinaryProperties(v103, (uint64_t *)this + 44, (uint64_t *)&v200);
  morphun::util::Validate::notNull<long long>((uint64_t)v124);
  uint64_t v197 = (void **)&v200;
  std::vector<std::basic_string<char16_t>>::__destroy_vector::operator()[abi:ne180100](&v197);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  uint64_t v189 = v103;
  *((void *)this + 49) = *((void *)this + 45) | *((void *)this + 43) | *((void *)this + 48) | *((void *)this + 44) | *((void *)this + 47) | *((void *)this + 46);
  uint64_t v126 = morphun::grammar::synthesis::GrammemeConstants::VERBTYPE_INFINITIVE(v125);
  uint64_t v127 = *(unsigned __int8 *)(v126 + 23);
  if ((v127 & 0x80u) == 0) {
    uint64_t v128 = v126;
  }
  else {
    uint64_t v128 = *(void *)v126;
  }
  if ((v127 & 0x80u) != 0) {
    uint64_t v127 = *(void *)(v126 + 8);
  }
  uint64_t v178 = v127;
  uint64_t v180 = v128;
  uint64_t v129 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v126);
  uint64_t v130 = *(unsigned __int8 *)(v129 + 23);
  if ((v130 & 0x80u) == 0) {
    uint64_t v131 = v129;
  }
  else {
    uint64_t v131 = *(void *)v129;
  }
  if ((v130 & 0x80u) != 0) {
    uint64_t v130 = *(void *)(v129 + 8);
  }
  uint64_t v176 = v130;
  uint64_t v132 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v129);
  int v133 = *(char *)(v132 + 23);
  if (v133 >= 0) {
    uint64_t v134 = v132;
  }
  else {
    uint64_t v134 = *(void *)v132;
  }
  if (v133 >= 0) {
    uint64_t v135 = *(unsigned __int8 *)(v132 + 23);
  }
  else {
    uint64_t v135 = *(void *)(v132 + 8);
  }
  uint64_t v136 = morphun::grammar::synthesis::GrammemeConstants::GENDER_MASCULINE((morphun::grammar::synthesis::GrammemeConstants *)v132);
  int v137 = *(char *)(v136 + 23);
  if (v137 >= 0) {
    uint64_t v138 = v136;
  }
  else {
    uint64_t v138 = *(void *)v136;
  }
  if (v137 >= 0) {
    uint64_t v139 = *(unsigned __int8 *)(v136 + 23);
  }
  else {
    uint64_t v139 = *(void *)(v136 + 8);
  }
  uint64_t v140 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v136);
  uint64_t v141 = *(unsigned __int8 *)(v140 + 23);
  uint64_t v143 = *(void *)v140;
  uint64_t v142 = *(void *)(v140 + 8);
  int64_t v144 = operator new(0x50uLL);
  std::basic_string<char16_t>::size_type v145 = v144;
  __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)(v144 + 10);
  __dst.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)(v144 + 10);
  if ((v141 & 0x80u) == 0) {
    uint64_t v146 = v140;
  }
  else {
    uint64_t v146 = v143;
  }
  if ((v141 & 0x80u) == 0) {
    uint64_t v147 = v141;
  }
  else {
    uint64_t v147 = v142;
  }
  *int64_t v144 = v180;
  v144[1] = v178;
  v144[2] = v131;
  v144[3] = v176;
  v144[4] = v134;
  v144[5] = v135;
  v144[6] = v138;
  v144[7] = v139;
  v144[8] = v146;
  v144[9] = v147;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v144;
  morphun::analysis::MorphologicalAnalyzer::convertLemmaAttributes((uint64_t)&v200, v189, (uint64_t *)&__dst);
  unint64_t v148 = *v187;
  if (*v187)
  {
    *((void *)this + 56) = v148;
    operator delete(v148);
    *std::basic_string<char16_t> v187 = 0;
    *((void *)this + 56) = 0;
    *((void *)this + 57) = 0;
  }
  *(_OWORD *)std::basic_string<char16_t> v187 = v200;
  *((void *)this + 57) = v201;
  operator delete(v145);
  uint64_t v150 = morphun::grammar::synthesis::GrammemeConstants::VERBTYPE_INFINITIVE(v149);
  char v151 = *(unsigned char *)(v150 + 23);
  if (v151 >= 0) {
    uint64_t v152 = v150;
  }
  else {
    uint64_t v152 = *(void *)v150;
  }
  uint64_t v181 = v152;
  if (v151 >= 0) {
    uint64_t v153 = *(unsigned __int8 *)(v150 + 23);
  }
  else {
    uint64_t v153 = *(void *)(v150 + 8);
  }
  uint64_t v154 = morphun::grammar::synthesis::GrammemeConstants::CASE_NOMINATIVE((morphun::grammar::synthesis::GrammemeConstants *)v150);
  int v155 = *(char *)(v154 + 23);
  if (v155 >= 0) {
    uint64_t v156 = v154;
  }
  else {
    uint64_t v156 = *(void *)v154;
  }
  if (v155 >= 0) {
    uint64_t v157 = *(unsigned __int8 *)(v154 + 23);
  }
  else {
    uint64_t v157 = *(void *)(v154 + 8);
  }
  uint64_t v158 = morphun::grammar::synthesis::GrammemeConstants::NUMBER_SINGULAR((morphun::grammar::synthesis::GrammemeConstants *)v154);
  int v159 = *(char *)(v158 + 23);
  if (v159 >= 0) {
    uint64_t v160 = v158;
  }
  else {
    uint64_t v160 = *(void *)v158;
  }
  if (v159 >= 0) {
    uint64_t v161 = *(unsigned __int8 *)(v158 + 23);
  }
  else {
    uint64_t v161 = *(void *)(v158 + 8);
  }
  uint64_t v162 = morphun::grammar::synthesis::GrammemeConstants::ANIMACY_INANIMATE((morphun::grammar::synthesis::GrammemeConstants *)v158);
  uint64_t v163 = *(unsigned __int8 *)(v162 + 23);
  uint64_t v165 = *(void *)v162;
  uint64_t v164 = *(void *)(v162 + 8);
  char v166 = operator new(0x40uLL);
  int64_t v167 = v166;
  __dst.__r_.__value_.__l.__size_ = (std::basic_string<char16_t>::size_type)(v166 + 8);
  __dst.__r_.__value_.__r.__words[2] = (std::basic_string<char16_t>::size_type)(v166 + 8);
  if ((v163 & 0x80u) == 0) {
    uint64_t v168 = v162;
  }
  else {
    uint64_t v168 = v165;
  }
  if ((v163 & 0x80u) == 0) {
    uint64_t v169 = v163;
  }
  else {
    uint64_t v169 = v164;
  }
  *char v166 = v181;
  v166[1] = v153;
  v166[2] = v156;
  v166[3] = v157;
  v166[4] = v160;
  v166[5] = v161;
  v166[6] = v168;
  v166[7] = v169;
  __dst.__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v166;
  morphun::analysis::MorphologicalAnalyzer::convertLemmaAttributes((uint64_t)&v200, v189, (uint64_t *)&__dst);
  uint64_t v170 = *v185;
  if (*v185)
  {
    *((void *)this + 59) = v170;
    operator delete(v170);
    void *v185 = 0;
    *((void *)this + 59) = 0;
    *((void *)this + 60) = 0;
  }
  *((_OWORD *)this + 29) = v200;
  *((void *)this + 60) = v201;
  operator delete(v167);
  long long v172 = (morphun::lang::StringFilterUtil *)morphun::util::LocaleUtils::RUSSIAN(v171);
  ExemplarCharacters = (void *)morphun::lang::StringFilterUtil::getExemplarCharacters(v172, v173);
  MEMORY[0x1D942C0F0](*v183, *ExemplarCharacters);
  MEMORY[0x1D942C170](*v183);
  return this;
}

void sub_1D2D57BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, icu4cxx::UnicodeSet *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28)
{
  MEMORY[0x1D942B8B0](v28, 0x1012C40EC159624);
  int v31 = v29;
  while (1)
  {
    uint64_t v33 = (void *)*((void *)v31 - 3);
    v31 -= 24;
    uint64_t v32 = v33;
    if (v33)
    {
      *((void *)v29 - 2) = v32;
      operator delete(v32);
    }
    uint64_t v29 = v31;
    if (v31 == &a27) {
      _Unwind_Resume(a1);
    }
  }
}

uint64_t morphun::analysis::stemmer::RussianExposableMorphology::getInstance(morphun::analysis::stemmer::RussianExposableMorphology *this)
{
  {
    operator new();
  }
  return morphun::analysis::stemmer::RussianExposableMorphology::getInstance(void)::INSTANCE_;
}

void sub_1D2D58004(_Unwind_Exception *a1)
{
  MEMORY[0x1D942B8B0](v1, 0x10F3C40BDA3BE62);
  _Unwind_Resume(a1);
}

uint64_t morphun::analysis::stemmer::RussianExposableMorphology::isInflectable(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  if (a3 < 3) {
    return 0;
  }
  uint64_t result = uset_containsAllCodePoints();
  if (result) {
    return std::__tree<std::u16string_view>::__count_unique<std::u16string_view>(*(void *)(a1 + 424), a2, a3) == 0;
  }
  return result;
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x1F40D7170](allocator, values, numValues, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1F40D71B8](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1F40D71F0](theArray, idx);
}

void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context)
{
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D7998](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1F40D7A00]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo)
{
  return (CFErrorRef)MEMORY[0x1F40D7A98](allocator, domain, code, userInfo);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

CFLocaleRef CFLocaleCreate(CFAllocatorRef allocator, CFLocaleIdentifier localeIdentifier)
{
  return (CFLocaleRef)MEMORY[0x1F40D7BE0](allocator, localeIdentifier);
}

CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale)
{
  return (CFLocaleIdentifier)MEMORY[0x1F40D7C20](locale);
}

CFPropertyListRef CFPropertyListCreateWithStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7F58](allocator, stream, streamLength, options, format, error);
}

void CFReadStreamClose(CFReadStreamRef stream)
{
}

CFReadStreamRef CFReadStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL)
{
  return (CFReadStreamRef)MEMORY[0x1F40D7FC0](alloc, fileURL);
}

Boolean CFReadStreamOpen(CFReadStreamRef stream)
{
  return MEMORY[0x1F40D7FF8](stream);
}

void CFRelease(CFTypeRef cf)
{
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return (CFStringRef)MEMORY[0x1F40D8438](alloc, bytes, numBytes, *(void *)&encoding, isExternalRepresentation);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1F40D8448](alloc, cStr, *(void *)&encoding);
}

CFStringRef CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars)
{
  return (CFStringRef)MEMORY[0x1F40D8460](alloc, chars, numChars);
}

CFStringRef CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator)
{
  return (CFStringRef)MEMORY[0x1F40D8470](alloc, chars, numChars, contentsDeallocator);
}

CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen)
{
  return MEMORY[0x1F40D8500](theString, range.location, range.length, *(void *)&encoding, lossByte, isExternalRepresentation, buffer, maxBufLen);
}

void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer)
{
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1F40D8578](theString);
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x1F40D88A0](allocator, filePath, pathStyle, isDirectory);
}

uint64_t QuasarCPDecTranslator_delete()
{
  return MEMORY[0x1F4117BB8]();
}

uint64_t QuasarCPDecTranslator_new()
{
  return MEMORY[0x1F4117BC0]();
}

uint64_t QuasarCPDecTranslator_translate()
{
  return MEMORY[0x1F4117BC8]();
}

uint64_t QuasarCSystemConfig_delete()
{
  return MEMORY[0x1F4117BD0]();
}

uint64_t QuasarCSystemConfig_new()
{
  return MEMORY[0x1F4117BD8]();
}

uint64_t QuasarCSystemConfig_readJsonFile()
{
  return MEMORY[0x1F4117BE0]();
}

uint64_t QuasarC_setLogLevel()
{
  return MEMORY[0x1F4117BF0]();
}

uint64_t ThaiTokenizerAdvanceToNextToken()
{
  return MEMORY[0x1F417DD80]();
}

uint64_t ThaiTokenizerCreate()
{
  return MEMORY[0x1F417DD88]();
}

uint64_t ThaiTokenizerDestroy()
{
  return MEMORY[0x1F417DD90]();
}

uint64_t ThaiTokenizerGetCurrentTokenRange()
{
  return MEMORY[0x1F417DD98]();
}

uint64_t ThaiTokenizerSetStringWithRange()
{
  return MEMORY[0x1F417DDA8]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::string::size_type std::string::find(const std::string *this, std::string::value_type __c, std::string::size_type __pos)
{
  return MEMORY[0x1F417E380](this, __c, __pos);
}

std::string::size_type std::string::rfind(const std::string *this, std::string::value_type __c, std::string::size_type __pos)
{
  return MEMORY[0x1F417E388](this, __c, __pos);
}

uint64_t std::stringbuf::str()
{
  return MEMORY[0x1F417E3A8]();
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x1F417E408](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x1F417E418](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1F417E448](this, a2);
}

std::nested_exception *__cdecl std::nested_exception::nested_exception(std::nested_exception *this)
{
  return (std::nested_exception *)MEMORY[0x1F417E520](this);
}

void std::nested_exception::~nested_exception(std::nested_exception *this)
{
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1F417E530](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x1F417E588](__n);
}

std::string *__cdecl std::string::erase(std::string *this, std::string::size_type __pos, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1F417E5A0](this, __pos, __n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1F417E5B8](this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1F417E5C0](this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1F417E5D8](this, __s);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1F417E5E8](this, __str, __pos, __n);
}

void std::string::resize(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
}

void std::string::reserve(std::string *this, std::string::size_type __requested_capacity)
{
}

void std::string::__grow_by(std::string *this, std::string::size_type __old_cap, std::string::size_type __delta_cap, std::string::size_type __old_sz, std::string::size_type __n_copy, std::string::size_type __n_del, std::string::size_type __n_add)
{
}

void std::string::push_back(std::string *this, std::string::value_type __c)
{
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return (std::string *)MEMORY[0x1F417E660](this, __str, __pos, __n, __a);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x1F417E670](this, __str);
}

uint64_t std::ostream::put()
{
  return MEMORY[0x1F417E830]();
}

uint64_t std::ostream::flush()
{
  return MEMORY[0x1F417E838]();
}

uint64_t std::ostream::write()
{
  return MEMORY[0x1F417E840]();
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x1F417E848]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x1F417E850]();
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x1F417E860]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x1F417E978]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x1F417E980]();
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
}

void std::__shared_weak_count::~__shared_weak_count(std::__shared_weak_count *this)
{
}

std::__fs::filesystem::path *__cdecl std::__fs::filesystem::__weakly_canonical(std::__fs::filesystem::path *__return_ptr retstr, const std::__fs::filesystem::path *__p, std::error_code *__ec)
{
  return (std::__fs::filesystem::path *)MEMORY[0x1F417EB68](retstr, __p, __ec);
}

void std::mutex::lock(std::mutex *this)
{
}

void std::mutex::unlock(std::mutex *this)
{
}

void std::mutex::~mutex(std::mutex *this)
{
}

void std::locale::~locale(std::locale *this)
{
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x1F417EE40]();
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, double __val)
{
  return (std::string *)MEMORY[0x1F417EE58](retstr, __val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, int __val)
{
  return (std::string *)MEMORY[0x1F417EE70](retstr, *(void *)&__val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, uint64_t __val)
{
  return (std::string *)MEMORY[0x1F417EE90](retstr, __val);
}

uint64_t std::operator+<char>()
{
  return MEMORY[0x1F417EEA0]();
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new[](size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1F417EF30](thrown_size);
}

void __cxa_bad_cast(void)
{
}

void __cxa_bad_typeid(void)
{
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x1F417EF80](a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_rethrow(void)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x1F417EFA8](lpsrc, lpstype, lpdtype, s2d);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

int access(const char *a1, int a2)
{
  return MEMORY[0x1F40CA210](a1, *(void *)&a2);
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return MEMORY[0x1F40CB3F8](*(void *)&a1);
}

int dladdr(const void *a1, Dl_info *a2)
{
  return MEMORY[0x1F40CBDA0](a1, a2);
}

long double exp(long double __x)
{
  MEMORY[0x1F40CBFE0](__x);
  return result;
}

int fflush(FILE *a1)
{
  return MEMORY[0x1F40CC0C8](a1);
}

void free(void *a1)
{
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x1F40CC2B8](*(void *)&a1, a2);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1F40CC338](__ptr, __size, __nitems, __stream);
}

uint64_t germantok_tokenize()
{
  return MEMORY[0x1F417F678]();
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1F40CC3B0](a1);
}

long double log10(long double __x)
{
  MEMORY[0x1F40CC880](__x);
  return result;
}

uint64_t mecab_destroy()
{
  return MEMORY[0x1F4180A40]();
}

uint64_t mecab_model_new()
{
  return MEMORY[0x1F4180A58]();
}

uint64_t mecab_model_new_tagger()
{
  return MEMORY[0x1F4180A60]();
}

uint64_t mecab_sparse_tonode2()
{
  return MEMORY[0x1F4180A80]();
}

uint64_t mecab_strerror()
{
  return MEMORY[0x1F4180A88]();
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD20](__b, *(void *)&__c, __len);
}

void *__cdecl mmap(void *a1, size_t a2, int a3, int a4, int a5, off_t a6)
{
  return (void *)MEMORY[0x1F40CCE40](a1, a2, *(void *)&a3, *(void *)&a4, *(void *)&a5, a6);
}

int munmap(void *a1, size_t a2)
{
  return MEMORY[0x1F40CCE88](a1, a2);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1F40CD0E0](a1, *(void *)&a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x1F40CD818](__x, __y);
  return result;
}

float powf(float a1, float a2)
{
  MEMORY[0x1F40CD828](a1, a2);
  return result;
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA88](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA98](a1);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x1F40CE110](a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x1F40CE178](__s1);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1F40CE1F0](__s1, __s2, __n);
}

const char *__cdecl u_errorName(UErrorCode code)
{
  return (const char *)MEMORY[0x1F417F728](*(void *)&code);
}

UBool u_isUWhiteSpace(UChar32 c)
{
  return MEMORY[0x1F417F7A0](*(void *)&c);
}

UBool u_isalnum(UChar32 c)
{
  return MEMORY[0x1F417F7B0](*(void *)&c);
}

UBool u_isalpha(UChar32 c)
{
  return MEMORY[0x1F417F7B8](*(void *)&c);
}

UBool u_isdigit(UChar32 c)
{
  return MEMORY[0x1F417F7C8](*(void *)&c);
}

UBool u_ispunct(UChar32 c)
{
  return MEMORY[0x1F417F7E0](*(void *)&c);
}

UBool u_isupper(UChar32 c)
{
  return MEMORY[0x1F417F7F8](*(void *)&c);
}

UChar *__cdecl u_memcpy(UChar *dest, const UChar *src, int32_t count)
{
  return (UChar *)MEMORY[0x1F417F808](dest, src, *(void *)&count);
}

int32_t u_strCaseCompare(const UChar *s1, int32_t length1, const UChar *s2, int32_t length2, uint32_t options, UErrorCode *pErrorCode)
{
  return MEMORY[0x1F417F818](s1, *(void *)&length1, s2, *(void *)&length2, *(void *)&options, pErrorCode);
}

UChar *__cdecl u_strFindFirst(const UChar *s, int32_t length, const UChar *substring, int32_t subLength)
{
  return (UChar *)MEMORY[0x1F417F820](s, *(void *)&length, substring, *(void *)&subLength);
}

UChar *__cdecl u_strFromUTF8(UChar *dest, int32_t destCapacity, int32_t *pDestLength, const char *src, int32_t srcLength, UErrorCode *pErrorCode)
{
  return (UChar *)MEMORY[0x1F417F838](dest, *(void *)&destCapacity, pDestLength, src, *(void *)&srcLength, pErrorCode);
}

int32_t u_strToLower(UChar *dest, int32_t destCapacity, const UChar *src, int32_t srcLength, const char *locale, UErrorCode *pErrorCode)
{
  return MEMORY[0x1F417F848](dest, *(void *)&destCapacity, src, *(void *)&srcLength, locale, pErrorCode);
}

int32_t u_strToUpper(UChar *dest, int32_t destCapacity, const UChar *src, int32_t srcLength, const char *locale, UErrorCode *pErrorCode)
{
  return MEMORY[0x1F417F860](dest, *(void *)&destCapacity, src, *(void *)&srcLength, locale, pErrorCode);
}

int32_t u_strcmp(const UChar *s1, const UChar *s2)
{
  return MEMORY[0x1F417F878](s1, s2);
}

int32_t u_strlen(const UChar *s)
{
  return MEMORY[0x1F417F890](s);
}

UChar *__cdecl u_strncpy(UChar *dst, const UChar *src, int32_t n)
{
  return (UChar *)MEMORY[0x1F417F898](dst, src, *(void *)&n);
}

UChar32 u_tolower(UChar32 c)
{
  return MEMORY[0x1F417F8A8](*(void *)&c);
}

UChar32 u_toupper(UChar32 c)
{
  return MEMORY[0x1F417F8B8](*(void *)&c);
}

uint64_t ubrk_clone()
{
  return MEMORY[0x1F417FA28]();
}

uint64_t ubrk_close()
{
  return MEMORY[0x1F417FA30]();
}

uint64_t ubrk_next()
{
  return MEMORY[0x1F417FA78]();
}

uint64_t ubrk_open()
{
  return MEMORY[0x1F417FA80]();
}

uint64_t ubrk_setText()
{
  return MEMORY[0x1F417FAA0]();
}

uint64_t ucnv_close()
{
  return MEMORY[0x1F417FC30]();
}

uint64_t ucnv_fromUChars()
{
  return MEMORY[0x1F417FC58]();
}

uint64_t ucnv_open()
{
  return MEMORY[0x1F417FCB8]();
}

uint64_t ucnv_safeClone()
{
  return MEMORY[0x1F417FCD0]();
}

uint64_t ucnv_toUChars()
{
  return MEMORY[0x1F417FCF8]();
}

uint64_t uenum_close()
{
  return MEMORY[0x1F417FFD8]();
}

uint64_t uenum_unext()
{
  return MEMORY[0x1F417FFF0]();
}

uint64_t ulistfmt_close()
{
  return MEMORY[0x1F41800C8]();
}

uint64_t ulistfmt_format()
{
  return MEMORY[0x1F41800D8]();
}

uint64_t ulistfmt_openForType()
{
  return MEMORY[0x1F41800F0]();
}

uint64_t uloc_canonicalize()
{
  return MEMORY[0x1F4180110]();
}

uint64_t uloc_getCountry()
{
  return MEMORY[0x1F4180140]();
}

uint64_t uloc_getLanguage()
{
  return MEMORY[0x1F4180198]();
}

uint64_t uloc_getScript()
{
  return MEMORY[0x1F41801A8]();
}

uint64_t uloc_getVariant()
{
  return MEMORY[0x1F41801B0]();
}

uint64_t ulocdata_close()
{
  return MEMORY[0x1F41801E8]();
}

uint64_t ulocdata_getDelimiter()
{
  return MEMORY[0x1F41801F8]();
}

uint64_t ulocdata_getExemplarSet()
{
  return MEMORY[0x1F4180200]();
}

uint64_t ulocdata_open()
{
  return MEMORY[0x1F4180210]();
}

int uname(utsname *a1)
{
  return MEMORY[0x1F40CE5C8](a1);
}

uint64_t unorm2_getNFCInstance()
{
  return MEMORY[0x1F4180230]();
}

uint64_t unorm2_getNFDInstance()
{
  return MEMORY[0x1F4180238]();
}

uint64_t unorm2_getNFKCInstance()
{
  return MEMORY[0x1F4180240]();
}

uint64_t unorm2_getNFKDInstance()
{
  return MEMORY[0x1F4180248]();
}

uint64_t unorm2_normalize()
{
  return MEMORY[0x1F4180258]();
}

uint64_t unum_close()
{
  return MEMORY[0x1F4180290]();
}

uint64_t unum_countAvailable()
{
  return MEMORY[0x1F4180298]();
}

uint64_t unum_formatDouble()
{
  return MEMORY[0x1F41802A8]();
}

uint64_t unum_formatInt64()
{
  return MEMORY[0x1F41802B8]();
}

uint64_t unum_getAvailable()
{
  return MEMORY[0x1F41802C8]();
}

uint64_t unum_getTextAttribute()
{
  return MEMORY[0x1F41802E8]();
}

uint64_t unum_open()
{
  return MEMORY[0x1F41802F0]();
}

uint64_t unum_parseDouble()
{
  return MEMORY[0x1F4180308]();
}

uint64_t unum_parseInt64()
{
  return MEMORY[0x1F4180310]();
}

uint64_t unum_setAttribute()
{
  return MEMORY[0x1F4180320]();
}

uint64_t unum_setTextAttribute()
{
  return MEMORY[0x1F4180340]();
}

uint64_t uplrules_close()
{
  return MEMORY[0x1F4180410]();
}

uint64_t uplrules_getKeywords()
{
  return MEMORY[0x1F4180418]();
}

uint64_t uplrules_open()
{
  return MEMORY[0x1F4180420]();
}

uint64_t uplrules_select()
{
  return MEMORY[0x1F4180430]();
}

URegularExpression *__cdecl uregex_clone(const URegularExpression *regexp, UErrorCode *status)
{
  return (URegularExpression *)MEMORY[0x1F4180458](regexp, status);
}

void uregex_close(URegularExpression *regexp)
{
}

int32_t uregex_end(URegularExpression *regexp, int32_t groupNum, UErrorCode *status)
{
  return MEMORY[0x1F4180468](regexp, *(void *)&groupNum, status);
}

UBool uregex_find(URegularExpression *regexp, int32_t startIndex, UErrorCode *status)
{
  return MEMORY[0x1F4180478](regexp, *(void *)&startIndex, status);
}

int32_t uregex_group(URegularExpression *regexp, int32_t groupNum, UChar *dest, int32_t destCapacity, UErrorCode *status)
{
  return MEMORY[0x1F4180488](regexp, *(void *)&groupNum, dest, *(void *)&destCapacity, status);
}

int32_t uregex_groupCount(URegularExpression *regexp, UErrorCode *status)
{
  return MEMORY[0x1F4180490](regexp, status);
}

UBool uregex_matches(URegularExpression *regexp, int32_t startIndex, UErrorCode *status)
{
  return MEMORY[0x1F41804B0](regexp, *(void *)&startIndex, status);
}

URegularExpression *__cdecl uregex_open(const UChar *pattern, int32_t patternLength, uint32_t flags, UParseError *pe, UErrorCode *status)
{
  return (URegularExpression *)MEMORY[0x1F41804B8](pattern, *(void *)&patternLength, *(void *)&flags, pe, status);
}

void uregex_setText(URegularExpression *regexp, const UChar *text, int32_t textLength, UErrorCode *status)
{
}

void uregex_setUText(URegularExpression *regexp, UText *text, UErrorCode *status)
{
}

uint64_t uscript_getCode()
{
  return MEMORY[0x1F41805C8]();
}

uint64_t uscript_getName()
{
  return MEMORY[0x1F41805D0]();
}

uint64_t uscript_hasScript()
{
  return MEMORY[0x1F41805F8]();
}

uint64_t uset_add()
{
  return MEMORY[0x1F4180680]();
}

uint64_t uset_addAll()
{
  return MEMORY[0x1F4180688]();
}

uint64_t uset_addAllCodePoints()
{
  return MEMORY[0x1F4180690]();
}

uint64_t uset_clone()
{
  return MEMORY[0x1F41806C0]();
}

uint64_t uset_cloneAsThawed()
{
  return MEMORY[0x1F41806C8]();
}

uint64_t uset_close()
{
  return MEMORY[0x1F41806D0]();
}

uint64_t uset_closeOver()
{
  return MEMORY[0x1F41806D8]();
}

uint64_t uset_contains()
{
  return MEMORY[0x1F41806E0]();
}

uint64_t uset_containsAllCodePoints()
{
  return MEMORY[0x1F41806E8]();
}

uint64_t uset_freeze()
{
  return MEMORY[0x1F41806F0]();
}

uint64_t uset_isEmpty()
{
  return MEMORY[0x1F4180708]();
}

uint64_t uset_openEmpty()
{
  return MEMORY[0x1F4180718]();
}

uint64_t uset_openPattern()
{
  return MEMORY[0x1F4180720]();
}

uint64_t uset_openPatternOptions()
{
  return MEMORY[0x1F4180728]();
}

uint64_t uset_removeAll()
{
  return MEMORY[0x1F4180730]();
}

uint64_t uset_span()
{
  return MEMORY[0x1F4180748]();
}

uint64_t uset_spanBack()
{
  return MEMORY[0x1F4180750]();
}

int32_t utext_extract(UText *ut, int64_t nativeStart, int64_t nativeLimit, UChar *dest, int32_t destCapacity, UErrorCode *status)
{
  return MEMORY[0x1F4180790](ut, nativeStart, nativeLimit, dest, *(void *)&destCapacity, status);
}

int64_t utext_nativeLength(UText *ut)
{
  return MEMORY[0x1F41807B0](ut);
}

UText *__cdecl utext_openUChars(UText *ut, const UChar *s, int64_t length, UErrorCode *status)
{
  return (UText *)MEMORY[0x1F41807C0](ut, s, length, status);
}

uint64_t utrans_close()
{
  return MEMORY[0x1F41807F0]();
}

uint64_t utrans_openU()
{
  return MEMORY[0x1F41807F8]();
}

uint64_t utrans_trans()
{
  return MEMORY[0x1F4180800]();
}

uint64_t utrans_transUChars()
{
  return MEMORY[0x1F4180808]();
}