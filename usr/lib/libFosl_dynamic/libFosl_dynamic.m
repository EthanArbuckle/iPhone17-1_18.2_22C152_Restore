uint64_t fosl_filter_kernelpool_getParamType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;

  v3 = *(unsigned __int16 *)(sub_2226ADE94((void *)(a1 + 48), a2) + 16);
  v4 = (v3 >> 7) & 3;
  if (v4) {
    v5 = sub_2226ADEA4(v4);
  }
  else {
    v5 = sub_2226ADE54(v3 & 0x7F);
  }
  v6 = v5;
  v7 = sub_22263AD28(*(void *)(a1 + 8));
  if (v6 == 10) {
    v8 = 9;
  }
  else {
    v8 = v6;
  }
  if (v8 == 26) {
    v8 = 25;
  }
  if (v7) {
    return v8;
  }
  else {
    return v6;
  }
}

uint64_t fosl_filter_kernelpool_getPrintedKernel(uint64_t a1)
{
  return sub_2225C3C70(a1 + 32);
}

uint64_t fosl_filter_kernelpool_getParamName(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = sub_2226ADE94((void *)(a1 + 48), a2);

  return sub_2225C3C70(v2);
}

uint64_t fosl_filter_kernelpool_getNumKernels(uint64_t a1)
{
  uint64_t v1 = sub_2225F315C(a1);

  return sub_2226ADD88(v1);
}

uint64_t fosl_filter_kernelpool_getNumKernelParameters(uint64_t a1)
{
  return sub_222655F48(*(void *)(a1 + 8) + 16);
}

uint64_t fosl_filter_kernelpool_getNumKernelAttributes(uint64_t a1)
{
  return sub_2225D4970((void *)(a1 + 120));
}

uint64_t fosl_filter_kernelpool_getNumDiagnostics(uint64_t a1)
{
  uint64_t v1 = sub_2225F315C(a1);

  return sub_2226B0ED0(v1, v2);
}

uint64_t fosl_filter_kernelpool_getKernelReturnType(uint64_t a1)
{
  uint64_t v5 = sub_222640540(*(void *)(a1 + 8));
  uint64_t v1 = sub_2225C3C70((uint64_t)&v5);
  uint64_t v2 = sub_222655B10(v1);
  int v3 = sub_222655AE4(v2);
  return sub_2226ADE54(v3);
}

uint64_t fosl_filter_kernelpool_getKernelName(uint64_t a1)
{
  return sub_2225C3C70(a1 + 16);
}

uint64_t fosl_filter_kernelpool_getKernelKind(unsigned char *a1)
{
  return sub_2226ADE4C(*a1 & 3);
}

uint64_t fosl_filter_kernelpool_getKernelByIdx(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = sub_2225F315C(a1);

  return sub_2226ADDF4(v3, a2);
}

void fosl_filter_kernelpool_destroyPool(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = (void *)sub_2226ADD84();
    j__free(v1);
  }
}

uint64_t fosl_filter_kernelpool_createPool()
{
  uint64_t v0 = sub_2225C26A4(408);

  return sub_2226ADD58(v0);
}

uint64_t fosl_filter_kernelpool_addString(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_2225F315C(a1);
  sub_2225C3D00((int)v5, a2);
  return sub_2226B02FC(v3, v5[0], v5[1]);
}

uint64_t fosl_filter_kernelpool_addLibrary(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_2225F315C(a1);
  sub_2225C3D00((int)v5, a2);
  return sub_2226B0D64(v3, v5[0], v5[1]);
}

void *sub_2225C26A8(size_t a1)
{
  result = malloc_type_malloc(a1, 0x7CDD1027uLL);
  if (!result) {
    sub_2226C9670();
  }
  return result;
}

uint64_t sub_2225C26D4(void *a1, uint64_t a2)
{
  *a1 = a2;
  uint64_t result = sub_2225C2710((uint64_t)a1);
  if (result >= 2)
  {
    uint64_t result = sub_2225C26A4((8 * result));
    a1[1] = result;
  }
  return result;
}

uint64_t sub_2225C2710(uint64_t a1)
{
  return sub_2225C2F14(*(_DWORD *)(*(void *)a1 + 4) + 1);
}

void sub_2225C2720(uint64_t a1)
{
  if (sub_2225C276C(a1))
  {
    uint64_t v2 = *(void **)(a1 + 8);
    if (v2)
    {
      j__free(v2);
    }
  }
}

BOOL sub_2225C276C(uint64_t a1)
{
  return sub_2225C2710(a1) > 1;
}

void *sub_2225C278C(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned char *)(a1 + 18) & 0xF7 | (8 * ((*(unsigned __int8 *)(a2 + 18) >> 3) & 1));
  *(unsigned char *)(a1 + 18) = v4;
  *(unsigned char *)(a1 + 18) = v4 & 0xF8 | *(unsigned char *)(a2 + 18) & 7;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t result = (void *)sub_2225C2814(a1);
  if ((result & 1) != 0 || (*(unsigned char *)(a1 + 18) & 7) == 1)
  {
    return sub_2225C2848(a1, a2);
  }
  return result;
}

BOOL sub_2225C2814(uint64_t a1)
{
  BOOL result = sub_2225C3A10(a1);
  if (result) {
    return !sub_2225C39FC(a1);
  }
  return result;
}

void *sub_2225C2848(uint64_t a1, uint64_t a2)
{
  int v4 = (void *)sub_2225C28AC(a1);
  uint64_t v5 = (uint64_t *)sub_2225C28E4(a2);
  unsigned int v6 = sub_2225C2710(a1);

  return sub_2225CA694(v4, v5, v6);
}

uint64_t sub_2225C28AC(uint64_t a1)
{
  unsigned int v2 = sub_2225C2710(a1);
  uint64_t result = a1 + 8;
  if (v2 >= 2) {
    return *(void *)result;
  }
  return result;
}

uint64_t sub_2225C28E8(unsigned char *a1, int a2, int a3, unsigned int *a4)
{
  if (a3) {
    char v7 = 9;
  }
  else {
    char v7 = 1;
  }
  a1[18] = v7 | a1[18] & 0xF0;
  v8 = (void *)sub_2225C28AC((uint64_t)a1);
  unsigned int v9 = sub_2225C2710((uint64_t)a1);
  unsigned int v19 = v9;
  if (a4)
  {
    if (sub_2225C2A60(a4) < v9) {
      sub_2225CA674(v8, 0, v9);
    }
    v10 = (uint64_t *)sub_2225C2A68(a4);
    int v18 = sub_2225C2A60(a4);
    v11 = (unsigned int *)sub_2225C2A9C(&v18, &v19);
    sub_2225CA694(v8, v10, *v11);
    int v12 = *(_DWORD *)(*(void *)a1 + 4);
    unsigned int v13 = (v12 - 1) >> 6;
    v8[v13] &= ~(-1 << (v12 - 1));
    unsigned int v14 = v19;
    unsigned int v15 = v13 + 1;
    if (v15 != v19)
    {
      do
        v8[v15++] = 0;
      while (v14 != v15);
    }
  }
  else
  {
    sub_2225CA674(v8, 0, v9);
    int v12 = *(_DWORD *)(*(void *)a1 + 4);
  }
  unsigned int v16 = v12 - 2;
  if (a2)
  {
    sub_2225CA728((uint64_t)v8, v16);
    uint64_t result = sub_2225CA6B0(v8, v19);
    if (!result) {
      goto LABEL_15;
    }
    unsigned int v16 = v12 - 3;
  }
  uint64_t result = sub_2225CA70C((uint64_t)v8, v16);
LABEL_15:
  if (*(_UNKNOWN **)a1 == &unk_2226C9E90) {
    return sub_2225CA70C((uint64_t)v8, v12 - 1);
  }
  return result;
}

unint64_t sub_2225C2A60(unsigned int *a1)
{
  return sub_2225C5744(*a1);
}

_DWORD *sub_2225C2A68(_DWORD *a1)
{
  BOOL v2 = sub_2225C5754(a1);
  uint64_t result = a1 + 2;
  if (!v2) {
    return *(_DWORD **)result;
  }
  return result;
}

uint64_t sub_2225C2AA8(uint64_t a1, uint64_t a2)
{
  sub_2225C2720(a1);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  char v4 = *(unsigned char *)(a1 + 18) & 0xF8 | *(unsigned char *)(a2 + 18) & 7;
  *(unsigned char *)(a1 + 18) = v4;
  *(unsigned char *)(a1 + 18) = v4 & 0xF7 | *(unsigned char *)(a2 + 18) & 8;
  *(void *)a2 = &unk_2226C9E98;
  return a1;
}

BOOL sub_2225C2B1C(unsigned __int16 *a1)
{
  BOOL result = sub_2225C2814((uint64_t)a1);
  if (result)
  {
    uint64_t v3 = *(void *)a1;
    if (a1[8] == *(unsigned __int16 *)(*(void *)a1 + 2))
    {
      uint64_t v4 = sub_2225C28E4(a1);
      return sub_2225CA6F8(v4, *(_DWORD *)(v3 + 4) - 1) == 0;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2225C2B7C(uint64_t a1)
{
  uint64_t v2 = sub_2225C28E4(a1);
  int v3 = sub_2225C2710(a1);

  return sub_2225CA7BC(v2, v3);
}

void sub_2225C2BC4(uint64_t a1)
{
  uint64_t v2 = (void *)sub_2225C28AC(a1);
  unsigned int v3 = sub_2225C2710(a1);

  sub_2225CA674(v2, 0, v3);
}

uint64_t sub_2225C2C10(__int16 **a1, int a2, int a3)
{
  uint64_t result = sub_2225C2814((uint64_t)a1);
  if (result)
  {
    int v7 = sub_2225C2B7C((uint64_t)a1);
    unsigned int v8 = v7 + 1;
    if (v7 == -1)
    {
      if (a3)
      {
        if ((sub_2225C36F4((uint64_t)a1, a2, a3, 0) & 1) == 0)
        {
          if (!*((_DWORD *)*a1 + 1)) {
            return 16;
          }
LABEL_37:
          *((unsigned char *)a1 + 18) = *((unsigned char *)a1 + 18) & 0xF8 | 3;
          return 24;
        }
        goto LABEL_5;
      }
      goto LABEL_31;
    }
    int v11 = *((__int16 *)a1 + 8);
    int v12 = v8 - *((_DWORD *)*a1 + 1) + v11;
    if (v12 <= **a1)
    {
      int v13 = (*a1)[1];
      unsigned int v14 = v13 - v11;
      if (v12 >= v13) {
        unsigned int v15 = v8 - *((_DWORD *)*a1 + 1);
      }
      else {
        unsigned int v15 = v14;
      }
      if ((v15 & 0x80000000) != 0)
      {
        sub_2225C3568((uint64_t)a1, -v15);
      }
      else
      {
        if (v15)
        {
          uint64_t v16 = sub_2225C32FC((uint64_t)a1, v15);
          a3 = sub_2225C3544(v16, a3);
          if (v8 >= v15) {
            v8 -= v15;
          }
          else {
            unsigned int v8 = 0;
          }
        }
        if (a3)
        {
          if ((sub_2225C36F4((uint64_t)a1, a2, a3, 0) & 1) == 0)
          {
            int v10 = *((_DWORD *)*a1 + 1);
            goto LABEL_34;
          }
          if (v8)
          {
LABEL_6:
            sub_2225C2F20((uint64_t)a1);
            int v9 = sub_2225C2B7C((uint64_t)a1);
            int v10 = *((_DWORD *)*a1 + 1);
            if (v9 == v10)
            {
              if (*((unsigned __int16 *)a1 + 8) == (unsigned __int16)**a1)
              {
                *((unsigned char *)a1 + 18) &= 0xF8u;
                return 20;
              }
              sub_2225C32FC((uint64_t)a1, 1u);
              return 16;
            }
            unsigned int v8 = v9 + 1;
LABEL_34:
            if (v8 == v10) {
              return 16;
            }
            if (v8) {
              return 24;
            }
            goto LABEL_37;
          }
LABEL_5:
          *((_WORD *)a1 + 8) = (*a1)[1];
          goto LABEL_6;
        }
        if (!v8)
        {
LABEL_31:
          uint64_t result = 0;
          *((unsigned char *)a1 + 18) = *((unsigned char *)a1 + 18) & 0xF8 | 3;
          return result;
        }
      }
      return 0;
    }
    return sub_2225C3644((uint64_t)a1, a2);
  }
  return result;
}

void *sub_2225C2E00(void *a1, uint64_t a2)
{
  return a1;
}

void *sub_2225C2E28(void *a1, uint64_t *a2)
{
  return a1;
}

uint64_t sub_2225C2E68(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_2226C9E98;
  return sub_2225C2AA8(a1, a2);
}

uint64_t sub_2225C2E7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225C2EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  if (*(_UNKNOWN **)a1 == &unk_2226C9E70) {
    return sub_2225C422C(a1, a2);
  }
  if (v2 == &unk_2226C9E78) {
    return sub_2225C4174(a1, a2);
  }
  if (v2 == &unk_2226C9E80) {
    return sub_2225C3FB0(a1, a2);
  }
  if (v2 == &unk_2226C9E88) {
    return sub_2225C4070(a1, a2);
  }
  if (v2 == &unk_2226C9EA0) {
    return sub_2225C3E20((uint64_t **)a1, a2);
  }
  return sub_2225C3D24(a1, a2);
}

uint64_t sub_2225C2F14(int a1)
{
  return (a1 + 63) >> 6;
}

BOOL sub_2225C2F20(uint64_t a1)
{
  uint64_t v2 = sub_2225C28AC(a1);
  int v3 = sub_2225C2710(a1);

  return sub_2225CA924(v2, v3);
}

BOOL sub_2225C2F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unint64_t *)sub_2225C28AC(a1);
  uint64_t v5 = (uint64_t *)sub_2225C28E4(a2);
  unsigned int v6 = sub_2225C2710(a1);

  return sub_2225CA894(v4, v5, 0, v6);
}

uint64_t sub_2225C2FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = (unint64_t *)sub_2225C28AC(a1);
  int v7 = (unint64_t *)sub_2225C28E4(a2);
  unsigned int v8 = sub_2225C2710(a1);

  return sub_2225CA8DC(v6, v7, a3, v8);
}

uint64_t sub_2225C303C(uint64_t a1, uint64_t a2, int a3, unsigned char *a4)
{
  unsigned int v8 = *(__int16 **)a1;
  int v9 = *(_DWORD *)(a2 + 4);
  unsigned int v10 = sub_2225C2F14(v9 + 1);
  unsigned int v11 = sub_2225C2710(a1);
  BOOL v12 = 0;
  signed int v13 = v9 - *((_DWORD *)v8 + 1);
  if ((_UNKNOWN *)a2 != &unk_2226C9E90 && v8 == (__int16 *)&unk_2226C9E90)
  {
    if ((*(unsigned char *)(a1 + 18) & 7) != 1)
    {
      BOOL v12 = 0;
      if ((v13 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_8;
    }
    BOOL v12 = *(void *)sub_2225C28AC(a1) >> 62 != 3;
  }
  if ((v13 & 0x80000000) == 0)
  {
LABEL_6:
    int v14 = 0;
    goto LABEL_19;
  }
LABEL_8:
  if (sub_2225C2814(a1))
  {
    int v15 = sub_2225C2B7C(a1) - *((_DWORD *)v8 + 1);
    int v16 = *(__int16 *)(a1 + 16);
    int v17 = *(__int16 *)(a2 + 2);
    if (v15 + 1 + v16 >= v17) {
      signed int v18 = v15 + 1;
    }
    else {
      signed int v18 = v17 - v16;
    }
    if (v18 <= v13) {
      signed int v18 = v13;
    }
    if (v18 < 0)
    {
      *(_WORD *)(a1 + 16) = v16 + v18;
      v13 -= v18;
      if (v13 >= 0) {
        goto LABEL_6;
      }
    }
  }
  if (!sub_2225C2814(a1) && (*(unsigned char *)(a1 + 18) & 7) != 1) {
    goto LABEL_6;
  }
  unsigned int v19 = (unint64_t *)sub_2225C28AC(a1);
  int v14 = sub_2225C34F8(v19, v11, -v13);
LABEL_19:
  if (v10 <= v11)
  {
    if (v10 == 1 && v11 != 1)
    {
      if (sub_2225C2814(a1) || (*(unsigned char *)(a1 + 18) & 7) == 1) {
        uint64_t v23 = *(void *)sub_2225C28AC(a1);
      }
      else {
        uint64_t v23 = 0;
      }
      sub_2225C2720(a1);
      *(void *)(a1 + 8) = v23;
    }
  }
  else
  {
    v20 = (void *)sub_2225C26A4(8 * v10);
    sub_2225CA674(v20, 0, v10);
    if (sub_2225C2814(a1) || (*(unsigned char *)(a1 + 18) & 7) == 1)
    {
      v21 = (uint64_t *)sub_2225C28AC(a1);
      sub_2225CA694(v20, v21, v11);
    }
    sub_2225C2720(a1);
    *(void *)(a1 + 8) = v20;
  }
  *(void *)a1 = a2;
  if (v13 >= 1 && (sub_2225C2814(a1) || (*(unsigned char *)(a1 + 18) & 7) == 1))
  {
    v24 = (void *)sub_2225C28AC(a1);
    sub_2225CA964(v24, v10, v13);
  }
  if (sub_2225C2814(a1))
  {
    uint64_t result = sub_2225C2C10((__int16 **)a1, a3, v14);
    *a4 = result != 0;
  }
  else if ((*(unsigned char *)(a1 + 18) & 7) == 1)
  {
    if (v14) {
      char v26 = 1;
    }
    else {
      char v26 = v12;
    }
    *a4 = v26;
    if (!v12 && *(_UNKNOWN **)a1 == &unk_2226C9E90)
    {
      uint64_t v27 = sub_2225C28AC(a1);
      sub_2225CA70C(v27, 0x3Fu);
    }
    return 0;
  }
  else
  {
    uint64_t result = 0;
    *a4 = 0;
  }
  return result;
}

uint64_t sub_2225C32FC(uint64_t a1, unsigned int a2)
{
  *(_WORD *)(a1 + 16) += a2;
  uint64_t v4 = (unint64_t *)sub_2225C28AC(a1);
  unsigned int v5 = sub_2225C2710(a1);

  return sub_2225C34F8(v4, v5, a2);
}

uint64_t sub_2225C3360(uint64_t a1, uint64_t a2, int a3)
{
  int v5 = *(__int16 *)(a2 + 16);
  signed int v6 = *(__int16 *)(a1 + 16) - v5;
  if ((((((*(unsigned char *)(a2 + 18) ^ *(unsigned char *)(a1 + 18)) & 8) == 0) ^ a3) & 1) == 0)
  {
    int v8 = *(unsigned __int16 *)(a1 + 16);
    int v9 = *(unsigned __int16 *)(a2 + 16);
    sub_2225C2E64(v15, a2);
    if (v8 == v9)
    {
      unsigned int v10 = 0;
      unsigned int v11 = 0;
      if (!sub_2225C35C4(a1, (uint64_t)v15)) {
        goto LABEL_12;
      }
    }
    else
    {
      if (v6 < 1)
      {
        unsigned int v10 = sub_2225C32FC(a1, ~v6);
        sub_2225C3568((uint64_t)v15, 1u);
LABEL_12:
        sub_2225C2FD0((uint64_t)v15, a1, v10 != 0);
        sub_2225C2848(a1, (uint64_t)v15);
        *(unsigned char *)(a1 + 18) ^= 8u;
        goto LABEL_13;
      }
      unsigned int v11 = sub_2225C32FC((uint64_t)v15, v6 - 1);
      sub_2225C3568(a1, 1u);
    }
    sub_2225C2FD0(a1, (uint64_t)v15, v11 != 0);
    unsigned int v10 = v11;
LABEL_13:
    if (v10 == 3) {
      unsigned int v14 = 1;
    }
    else {
      unsigned int v14 = v10;
    }
    if (v10 == 1) {
      uint64_t v7 = 3;
    }
    else {
      uint64_t v7 = v14;
    }
    goto LABEL_19;
  }
  if (v6 < 1)
  {
    uint64_t v12 = sub_2225C32FC(a1, v5 - *(__int16 *)(a1 + 16));
    sub_2225C2F68(a1, a2);
    return v12;
  }
  sub_2225C2E64(v15, a2);
  uint64_t v7 = sub_2225C32FC((uint64_t)v15, v6);
  sub_2225C2F68(a1, (uint64_t)v15);
LABEL_19:
  sub_2225C2AA4(v15);
  return v7;
}

uint64_t sub_2225C34F8(unint64_t *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = sub_2225C3AC4(a1, a2, a3);
  sub_2225CA82C(a1, a2, a3);
  return v6;
}

uint64_t sub_2225C3544(uint64_t result, int a2)
{
  if (result == 2) {
    int v2 = 3;
  }
  else {
    int v2 = result;
  }
  if (result) {
    unsigned int v3 = v2;
  }
  else {
    unsigned int v3 = 1;
  }
  if (a2) {
    return v3;
  }
  else {
    return result;
  }
}

void sub_2225C3568(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    unsigned int v4 = sub_2225C2710(a1);
    int v5 = (void *)sub_2225C28AC(a1);
    sub_2225CA964(v5, v4, a2);
    *(_WORD *)(a1 + 16) -= a2;
  }
}

uint64_t sub_2225C35C4(uint64_t a1, uint64_t a2)
{
  int v3 = *(__int16 *)(a1 + 16);
  int v4 = *(__int16 *)(a2 + 16);
  int v5 = v3 - v4;
  if (v3 == v4)
  {
    uint64_t v7 = sub_2225C28E4(a1);
    uint64_t v8 = sub_2225C28E4(a2);
    unsigned int v9 = sub_2225C2710(a1);
    int v5 = sub_2225CA9E0(v7, v8, v9);
  }
  if (v5 <= 0) {
    return v5 >= 0;
  }
  else {
    return 2;
  }
}

uint64_t sub_2225C3644(uint64_t a1, int a2)
{
  if ((a2 & 0xFFFFFFFB) == 0)
  {
    char v3 = *(unsigned char *)(a1 + 18);
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    char v3 = *(unsigned char *)(a1 + 18);
    if ((v3 & 8) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    if (a2 == 2)
    {
      char v3 = *(unsigned char *)(a1 + 18);
      if ((v3 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_8:
      *(unsigned char *)(a1 + 18) = v3 & 0xF8;
      return 20;
    }
    char v3 = *(unsigned char *)(a1 + 18);
  }
LABEL_10:
  *(unsigned char *)(a1 + 18) = v3 & 0xF8 | 2;
  int v5 = *(_WORD **)a1;
  *(_WORD *)(a1 + 16) = **(_WORD **)a1;
  uint64_t v6 = (char *)sub_2225C28AC(a1);
  unsigned int v7 = sub_2225C2710(a1);
  sub_2225CAA18(v6, v7, *((_DWORD *)v5 + 1));
  return 16;
}

uint64_t sub_2225C36F4(uint64_t a1, int a2, int a3, unsigned int a4)
{
  uint64_t result = 0;
  switch(a2)
  {
    case 1:
      BOOL v6 = (*(unsigned char *)(a1 + 18) & 8) == 0;
      goto LABEL_8;
    case 2:
      uint64_t result = (*(unsigned __int8 *)(a1 + 18) >> 3) & 1;
      break;
    case 3:
      return result;
    case 4:
      BOOL v6 = (a3 & 0xFFFFFFFE) == 2;
LABEL_8:
      uint64_t result = v6;
      break;
    default:
      if (a3 == 3)
      {
        uint64_t result = 1;
      }
      else if (a3 == 2 && (*(unsigned char *)(a1 + 18) & 7) != 3)
      {
        uint64_t v8 = sub_2225C28E4(a1);
        uint64_t result = sub_2225CA6F8(v8, a4) != 0;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_2225C37C4(unsigned char *a1, uint64_t a2, int a3)
{
  unsigned __int8 v4 = a1[18];
  unsigned __int8 v5 = *(unsigned char *)(a2 + 18);
  uint64_t result = 0;
  switch(4 * (v4 & 7) + (v5 & 7))
  {
    case 1:
    case 9:
    case 0xD:
      if (a3 != (v5 & 8) >> 3) {
        char v9 = 8;
      }
      else {
        char v9 = 0;
      }
      a1[18] = v4 & 0xF0 | v9 | 1;
      sub_2225C2848((uint64_t)a1, a2);
      goto LABEL_6;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 0xB:
    case 0xF:
      return result;
    case 8:
    case 0xC:
      uint64_t result = 0;
      a1[18] = v4 & 0xF8;
      if (a3 != (*(unsigned char *)(a2 + 18) & 8) >> 3) {
        char v10 = 8;
      }
      else {
        char v10 = 0;
      }
      char v11 = v10 | v4 & 0xF0;
      goto LABEL_16;
    case 0xA:
      return 2;
    case 0xE:
      sub_2225C278C((uint64_t)a1, a2);
      uint64_t result = 0;
      if (a3 != (*(unsigned char *)(a2 + 18) & 8) >> 3) {
        char v12 = 8;
      }
      else {
        char v12 = 0;
      }
      char v11 = v12 | a1[18] & 0xF7;
LABEL_16:
      a1[18] = v11;
      break;
    default:
      if (((((v5 ^ v4) & 8) == 0) ^ a3))
      {
LABEL_6:
        uint64_t result = 0;
      }
      else
      {
        sub_2225C28E8(a1, 0, 0, 0);
        uint64_t result = 1;
      }
      break;
  }
  return result;
}

uint64_t sub_2225C3944(__int16 **a1, uint64_t a2, int a3, int a4)
{
  uint64_t result = sub_2225C37C4(a1, a2, a4);
  if (result == 2)
  {
    int v9 = sub_2225C3360((uint64_t)a1, a2, a4);
    uint64_t result = sub_2225C2C10(a1, a3, v9);
  }
  char v10 = *((unsigned char *)a1 + 18);
  if ((v10 & 7) == 3)
  {
    char v11 = *(unsigned char *)(a2 + 18);
    if ((v11 & 7) != 3 || a4 != ((v11 ^ v10) & 8) >> 3) {
      *((unsigned char *)a1 + 18) = v10 & 0xF7 | (8 * (a3 == 2));
    }
  }
  return result;
}

uint64_t sub_2225C39EC(__int16 **a1, uint64_t a2, int a3)
{
  return sub_2225C3944(a1, a2, a3, 0);
}

uint64_t sub_2225C39F4(__int16 **a1, uint64_t a2, int a3)
{
  return sub_2225C3944(a1, a2, a3, 1);
}

BOOL sub_2225C39FC(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 18) & 7) == 3;
}

BOOL sub_2225C3A10(uint64_t a1)
{
  return !sub_2225C3D10(a1) && !sub_2225C57B8(a1);
}

uint64_t sub_2225C3A4C(unint64_t a1)
{
  unint64_t v1 = a1 | (a1 >> 1) | ((a1 | (a1 >> 1)) >> 2);
  unint64_t v2 = v1 | (v1 >> 4) | ((v1 | (v1 >> 4)) >> 8);
  return (v2 | (v2 >> 16) | ((v2 | (v2 >> 16)) >> 32)) + 1;
}

unsigned int *sub_2225C3A70(unsigned int *a1, uint64_t a2)
{
  sub_2225C58AC(a1, a2, (uint64_t)v4);
  sub_2225C3BE8((uint64_t)a1, v4);
  sub_2225C2F10(v4);
  return a1;
}

uint64_t sub_2225C3AB8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 18) >> 3) & 1;
}

uint64_t sub_2225C3AC4(unint64_t *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6 = sub_2225CA744(a1, a2);
  if (v6 >= a3) {
    return 0;
  }
  if (v6 + 1 == a3) {
    return 2;
  }
  if (a3 <= a2 << 6 && sub_2225CA6F8((uint64_t)a1, a3 - 1)) {
    return 3;
  }
  return 1;
}

uint64_t sub_2225C3B40(unsigned int *a1)
{
  return *a1;
}

BOOL sub_2225C3B48(uint64_t a1)
{
  return *(unsigned char *)(a1 + 16) == 0;
}

uint64_t sub_2225C3B58(uint64_t a1, int *a2)
{
  return a1;
}

BOOL sub_2225C3B84(_DWORD *a1)
{
  return sub_2225C599C(a1, *a1 - 1);
}

uint64_t sub_2225C3B90@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2225C3A6C(v5, *a1, 0, 0);
  sub_2225C7578(v5, (uint64_t)a1, a2);
  return sub_2225C2F10(v5);
}

uint64_t sub_2225C3BE8(uint64_t a1, int *a2)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
LABEL_5:
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    int v5 = *a2;
    *a2 = 0;
    *(_DWORD *)a1 = v5;
    return a1;
  }
  if ((int *)a1 != a2)
  {
    unsigned __int8 v4 = *(void **)(a1 + 8);
    if (v4) {
      j__free(v4);
    }
    goto LABEL_5;
  }
  return a1;
}

uint64_t sub_2225C3C40(uint64_t a1, uint64_t a2)
{
  sub_2225C3D0C(&v3, a1, a2);
  return v3;
}

uint64_t sub_2225C3C70(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_2225C3C78(void *a1)
{
  return *a1 + a1[1];
}

void sub_2225C3C84(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_2225C2AA0(a3, a1, 0);

  sub_2225C56C8(v4, a2);
}

BOOL sub_2225C3CC8(uint64_t a1, const void *a2, size_t a3)
{
  return *(void *)(a1 + 8) == a3 && sub_2225C5A30(*(const void **)a1, a2, a3) == 0;
}

uint64_t sub_2225C3D04(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

BOOL sub_2225C3D10(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 18) & 7) == 1;
}

uint64_t sub_2225C3D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v11[2] = *MEMORY[0x263EF8340];
  if (sub_2225C2814(a1))
  {
    uint64_t v4 = *(__int16 *)(a1 + 16) + 0x3FFFLL;
    unint64_t v5 = *(void *)sub_2225C28E4(a1);
    unint64_t v6 = v5 >> 63;
    if (v4 != 1) {
      LOWORD(v6) = v4;
    }
    uint64_t v7 = v6 & 0x7FFF;
    unsigned int v8 = *(unsigned __int8 *)(a1 + 18);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(a1 + 18);
    if ((v8 & 7) == 3)
    {
      uint64_t v7 = 0;
      unint64_t v5 = 0;
    }
    else
    {
      if ((v8 & 7) != 0) {
        unint64_t v5 = *(void *)sub_2225C28E4(a1);
      }
      else {
        unint64_t v5 = 0x8000000000000000;
      }
      uint64_t v7 = 0x7FFFLL;
    }
  }
  v11[0] = v5;
  v11[1] = v7 | ((unint64_t)((v8 >> 3) & 1) << 15);
  sub_2225C3E1C(v10, (uint64_t)v11);
  return sub_2225C6C04(a2, 80, v10[0], v10[1]);
}

uint64_t sub_2225C3E20@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  char v10 = 0;
  uint64_t v9 = **a1;
  WORD1(v9) = -1022;
  sub_2225C2E64(v8, a1);
  sub_2225C303C((uint64_t)v8, (uint64_t)&v9, 0, &v10);
  sub_2225C2E64(v7, v8);
  sub_2225C303C((uint64_t)v7, (uint64_t)&unk_2226C9E80, 0, &v10);
  sub_2225C3FB0((uint64_t)v7, (uint64_t)v6);
  uint64_t v11 = *(void *)sub_2225C2A68(v6);
  sub_2225C2F10(v6);
  if (sub_2225C2814((uint64_t)v7) && v10)
  {
    sub_2225C303C((uint64_t)v7, (uint64_t)&v9, 0, &v10);
    sub_2225C2E64(v6, v8);
    sub_2225C39F4(v6, (uint64_t)v7, 0);
    sub_2225C303C((uint64_t)v6, (uint64_t)&unk_2226C9E80, 0, &v10);
    sub_2225C3FB0((uint64_t)v6, (uint64_t)v5);
    uint64_t v12 = *(void *)sub_2225C2A68(v5);
    sub_2225C2F10(v5);
    sub_2225C2AA4(v6);
  }
  else
  {
    uint64_t v12 = 0;
  }
  sub_2225C3E1C(v4, (uint64_t)&v11);
  sub_2225C6C04(a2, 128, v4[0], v4[1]);
  sub_2225C2AA4(v7);
  return sub_2225C2AA4(v8);
}

uint64_t sub_2225C3FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_2225C2814(a1))
  {
    uint64_t v4 = *(__int16 *)(a1 + 16) + 1023;
    unint64_t v5 = *(void *)sub_2225C28E4(a1);
    uint64_t v6 = (v5 >> 52) & 1;
    if (v4 != 1) {
      LOWORD(v6) = v4;
    }
  }
  else if ((*(unsigned char *)(a1 + 18) & 7) == 3)
  {
    LOWORD(v6) = 0;
    unint64_t v5 = 0;
  }
  else
  {
    if ((*(unsigned char *)(a1 + 18) & 7) != 0) {
      unint64_t v5 = *(void *)sub_2225C28E4(a1);
    }
    else {
      unint64_t v5 = 0;
    }
    LOWORD(v6) = 2047;
  }
  unint64_t v7 = ((unint64_t)*(unsigned __int8 *)(a1 + 18) << 60) & 0x8000000000000000 | ((unint64_t)(v6 & 0x7FF) << 52) | v5 & 0xFFFFFFFFFFFFFLL;

  return sub_2225C3A6C(a2, 64, v7, 0);
}

uint64_t sub_2225C4070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v13[2] = *MEMORY[0x263EF8340];
  if (sub_2225C2814(a1))
  {
    uint64_t v4 = *(__int16 *)(a1 + 16) + 0x3FFFLL;
    unint64_t v5 = (uint64_t *)sub_2225C28E4(a1);
    uint64_t v6 = *v5;
    unint64_t v7 = v5[1];
    uint64_t v8 = HIWORD(v7) & 1;
    if (v4 != 1) {
      LOWORD(v8) = v4;
    }
  }
  else if ((*(unsigned char *)(a1 + 18) & 7) == 3)
  {
    LOWORD(v8) = 0;
    uint64_t v6 = 0;
    unint64_t v7 = 0;
  }
  else
  {
    if ((*(unsigned char *)(a1 + 18) & 7) != 0)
    {
      uint64_t v9 = (uint64_t *)sub_2225C28E4(a1);
      uint64_t v6 = *v9;
      unint64_t v7 = v9[1];
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v7 = 0;
    }
    LOWORD(v8) = 0x7FFF;
  }
  unint64_t v10 = ((unint64_t)*(unsigned __int8 *)(a1 + 18) << 60) & 0x8000000000000000 | ((unint64_t)(v8 & 0x7FFF) << 48) | v7 & 0xFFFFFFFFFFFFLL;
  v13[0] = v6;
  v13[1] = v10;
  sub_2225C3E1C(v12, (uint64_t)v13);
  return sub_2225C6C04(a2, 128, v12[0], v12[1]);
}

uint64_t sub_2225C4174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_2225C2814(a1))
  {
    int v4 = *(__int16 *)(a1 + 16) + 127;
    unsigned int v5 = *(_DWORD *)sub_2225C28E4(a1);
    int v6 = (v5 >> 23) & 1;
    if (v4 != 1) {
      LOBYTE(v6) = v4;
    }
  }
  else
  {
    unsigned int v5 = *(unsigned char *)(a1 + 18) & 7;
    if (v5 == 3)
    {
      LOBYTE(v6) = 0;
      unsigned int v5 = 0;
    }
    else
    {
      if ((*(unsigned char *)(a1 + 18) & 7) != 0) {
        unsigned int v5 = *(_DWORD *)sub_2225C28E4(a1);
      }
      LOBYTE(v6) = -1;
    }
  }
  uint64_t v7 = (*(unsigned __int8 *)(a1 + 18) << 28) & 0x80000000 | (v6 << 23) | v5 & 0x7FFFFF;

  return sub_2225C3A6C(a2, 32, v7, 0);
}

uint64_t sub_2225C422C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_2225C2814(a1))
  {
    int v4 = *(__int16 *)(a1 + 16) + 15;
    unsigned int v5 = *(_DWORD *)sub_2225C28E4(a1);
    int v6 = (v5 >> 10) & 1;
    if (v4 != 1) {
      LOBYTE(v6) = v4;
    }
  }
  else
  {
    unsigned int v5 = *(unsigned char *)(a1 + 18) & 7;
    if (v5 == 3)
    {
      LOBYTE(v6) = 0;
      LOWORD(v5) = 0;
    }
    else
    {
      if ((*(unsigned char *)(a1 + 18) & 7) != 0) {
        unsigned int v5 = *(_DWORD *)sub_2225C28E4(a1);
      }
      LOBYTE(v6) = 31;
    }
  }
  uint64_t v7 = ((v6 & 0x1F) << 10) & 0x7C00 | (((*(unsigned __int8 *)(a1 + 18) >> 3) & 1) << 15) | v5 & 0x3FF;

  return sub_2225C3A6C(a2, 16, v7, 0);
}

float sub_2225C42E4(uint64_t a1)
{
  sub_2225C2EA4(a1, (uint64_t)v3);
  float v1 = sub_2225C4328(v3);
  sub_2225C2F10(v3);
  return v1;
}

float sub_2225C4328(_DWORD *a1)
{
  BOOL v2 = sub_2225C5754(a1);
  uint64_t v3 = a1 + 2;
  if (!v2) {
    uint64_t v3 = *(_DWORD **)v3;
  }
  return *(float *)v3;
}

uint64_t sub_2225C435C(uint64_t a1, _DWORD *a2)
{
  uint64_t v4 = *(void *)sub_2225C2A68(a2);
  uint64_t v5 = *((void *)sub_2225C2A68(a2) + 1);
  uint64_t v6 = v5 & 0x7FFF;
  uint64_t result = sub_2225C26D4((void *)a1, (uint64_t)&unk_2226C9E90);
  if (!(v6 | v4))
  {
    char v8 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((v5 & 0x8000) != 0)) | 3;
LABEL_15:
    *(unsigned char *)(a1 + 18) = v8;
    return result;
  }
  if (v6 == 0x7FFF && v4 == 0x8000000000000000)
  {
    char v8 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((v5 & 0x8000) != 0));
    goto LABEL_15;
  }
  char v10 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((v5 & 0x8000) != 0));
  if (v6 != 0x7FFF || v4 == 0x8000000000000000)
  {
    *(unsigned char *)(a1 + 18) = v10 | 2;
    *(_WORD *)(a1 + 16) = v6 - 0x3FFF;
    *(void *)sub_2225C28AC(a1) = v4;
    uint64_t result = sub_2225C28AC(a1);
    *(void *)(result + 8) = 0;
    if ((v5 & 0x7FFF) == 0) {
      *(_WORD *)(a1 + 16) = -16382;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 18) = v10 | 1;
    *(void *)sub_2225C28AC(a1) = v4;
    uint64_t result = sub_2225C28AC(a1);
    *(void *)(result + 8) = 0;
  }
  return result;
}

uint64_t sub_2225C4464(__int16 **a1, _DWORD *a2)
{
  uint64_t v4 = *(void *)sub_2225C2A68(a2);
  uint64_t v5 = *((void *)sub_2225C2A68(a2) + 1);
  sub_2225C3A6C(v8, 64, v4, 0);
  sub_2225C455C((uint64_t)a1, v8);
  sub_2225C2F10(v8);
  sub_2225C303C((uint64_t)a1, (uint64_t)&unk_2226C9EA0, 0, &v9);
  uint64_t result = sub_2225C2814((uint64_t)a1);
  if (result)
  {
    sub_2225C3A6C(v7, 64, v5, 0);
    sub_2225C464C(v8, &unk_2226C9E80, v7);
    sub_2225C2F10(v7);
    sub_2225C303C((uint64_t)v8, (uint64_t)&unk_2226C9EA0, 0, &v9);
    sub_2225C39EC(a1, (uint64_t)v8, 0);
    return sub_2225C2AA4(v8);
  }
  return result;
}

void *sub_2225C455C(uint64_t a1, _DWORD *a2)
{
  unint64_t v3 = *(void *)sub_2225C2A68(a2);
  uint64_t v4 = (v3 >> 52) & 0x7FF;
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFLL;
  uint64_t result = (void *)sub_2225C26D4((void *)a1, (uint64_t)&unk_2226C9E80);
  if (!(v4 | v3 & 0xFFFFFFFFFFFFFLL))
  {
    char v7 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * (((v3 >> 60) & 8) != 0)) | 3;
LABEL_15:
    *(unsigned char *)(a1 + 18) = v7;
    return result;
  }
  if (v4 == 2047 && v5 == 0)
  {
    char v7 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * (((v3 >> 60) & 8) != 0));
    goto LABEL_15;
  }
  char v9 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * (((v3 >> 60) & 8) != 0));
  if (v4 != 2047 || v5 == 0)
  {
    *(unsigned char *)(a1 + 18) = v9 | 2;
    *(_WORD *)(a1 + 16) = v4 - 1023;
    uint64_t result = (void *)sub_2225C28AC(a1);
    void *result = v5;
    if (v4)
    {
      uint64_t result = (void *)sub_2225C28AC(a1);
      *result |= 0x10000000000000uLL;
    }
    else
    {
      *(_WORD *)(a1 + 16) = -1022;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 18) = v9 | 1;
    uint64_t result = (void *)sub_2225C28AC(a1);
    void *result = v5;
  }
  return result;
}

uint64_t sub_2225C4650(uint64_t a1, _DWORD *a2)
{
  uint64_t v4 = *(void *)sub_2225C2A68(a2);
  unint64_t v5 = *((void *)sub_2225C2A68(a2) + 1);
  uint64_t v6 = HIWORD(v5) & 0x7FFF;
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  uint64_t result = sub_2225C26D4((void *)a1, (uint64_t)&unk_2226C9E88);
  if (v6) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v4 == 0;
  }
  if (v9 && v7 == 0)
  {
    char v15 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * (((v5 >> 60) & 8) != 0)) | 3;
LABEL_24:
    *(unsigned char *)(a1 + 18) = v15;
    return result;
  }
  if (v6 == 0x7FFF && v4 == 0 && v7 == 0)
  {
    char v15 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * (((v5 >> 60) & 8) != 0));
    goto LABEL_24;
  }
  char v13 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * (((v5 >> 60) & 8) != 0));
  if (v6 != 0x7FFF || (v4 | v7) == 0)
  {
    *(unsigned char *)(a1 + 18) = v13 | 2;
    *(_WORD *)(a1 + 16) = v6 - 0x3FFF;
    *(void *)sub_2225C28AC(a1) = v4;
    uint64_t result = sub_2225C28AC(a1);
    *(void *)(result + 8) = v7;
    if (v6)
    {
      uint64_t result = sub_2225C28AC(a1);
      *(void *)(result + 8) |= 0x1000000000000uLL;
    }
    else
    {
      *(_WORD *)(a1 + 16) = -16382;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 18) = v13 | 1;
    *(void *)sub_2225C28AC(a1) = v4;
    uint64_t result = sub_2225C28AC(a1);
    *(void *)(result + 8) = v7;
  }
  return result;
}

void *sub_2225C478C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3 = *(void *)sub_2225C2A68(a2);
  int v4 = (v3 >> 23);
  int v5 = v3 & 0x7FFFFF;
  uint64_t result = (void *)sub_2225C26D4((void *)a1, (uint64_t)&unk_2226C9E78);
  if (!(v4 | v3 & 0x7FFFFF))
  {
    char v7 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((int)v3 < 0)) | 3;
LABEL_15:
    *(unsigned char *)(a1 + 18) = v7;
    return result;
  }
  if (v4 == 255 && v5 == 0)
  {
    char v7 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((int)v3 < 0));
    goto LABEL_15;
  }
  char v9 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((int)v3 < 0));
  if (v4 != 255 || v5 == 0)
  {
    *(unsigned char *)(a1 + 18) = v9 | 2;
    *(_WORD *)(a1 + 16) = v4 - 127;
    uint64_t result = (void *)sub_2225C28AC(a1);
    void *result = v3 & 0x7FFFFF;
    if ((v3 >> 23))
    {
      uint64_t result = (void *)sub_2225C28AC(a1);
      *result |= 0x800000uLL;
    }
    else
    {
      *(_WORD *)(a1 + 16) = -126;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 18) = v9 | 1;
    uint64_t result = (void *)sub_2225C28AC(a1);
    void *result = v3 & 0x7FFFFF;
  }
  return result;
}

void *sub_2225C4880(uint64_t a1, _DWORD *a2)
{
  uint64_t v3 = *(void *)sub_2225C2A68(a2);
  unsigned int v4 = (v3 >> 10) & 0x1F;
  int v5 = v3 & 0x3FF;
  uint64_t result = (void *)sub_2225C26D4((void *)a1, (uint64_t)&unk_2226C9E70);
  if (!(v4 | v5))
  {
    char v7 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((v3 & 0x8000) != 0)) | 3;
LABEL_15:
    *(unsigned char *)(a1 + 18) = v7;
    return result;
  }
  if (v4 == 31 && v5 == 0)
  {
    char v7 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((v3 & 0x8000) != 0));
    goto LABEL_15;
  }
  char v9 = *(unsigned char *)(a1 + 18) & 0xF0 | (8 * ((v3 & 0x8000) != 0));
  if (v4 != 31 || v5 == 0)
  {
    *(unsigned char *)(a1 + 18) = v9 | 2;
    *(_WORD *)(a1 + 16) = v4 - 15;
    uint64_t result = (void *)sub_2225C28AC(a1);
    void *result = v3 & 0x3FF;
    if (v4)
    {
      uint64_t result = (void *)sub_2225C28AC(a1);
      *result |= 0x400uLL;
    }
    else
    {
      *(_WORD *)(a1 + 16) = -14;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 18) = v9 | 1;
    uint64_t result = (void *)sub_2225C28AC(a1);
    void *result = v3 & 0x3FF;
  }
  return result;
}

void *sub_2225C4974(__int16 **a1, void *a2, _DWORD *a3)
{
  if (a2 == &unk_2226C9E70) {
    return sub_2225C4880((uint64_t)a1, a3);
  }
  if (a2 == &unk_2226C9E78) {
    return sub_2225C478C((uint64_t)a1, a3);
  }
  if (a2 == &unk_2226C9E80) {
    return sub_2225C455C((uint64_t)a1, a3);
  }
  if (a2 == &unk_2226C9E90) {
    return (void *)sub_2225C435C((uint64_t)a1, a3);
  }
  if (a2 == &unk_2226C9E88) {
    return (void *)sub_2225C4650((uint64_t)a1, a3);
  }
  return (void *)sub_2225C4464(a1, a3);
}

void *sub_2225C49F4(uint64_t a1, int a2)
{
  if (a2) {
    char v3 = 10;
  }
  else {
    char v3 = 2;
  }
  *(unsigned char *)(a1 + 18) = v3 | *(unsigned char *)(a1 + 18) & 0xF0;
  *(_WORD *)(a1 + 16) = **(_WORD **)a1;
  unsigned int v4 = (void *)sub_2225C28AC(a1);
  int v5 = sub_2225C2710(a1);
  char v6 = v5;
  unsigned int v7 = v5 - 1;
  uint64_t result = memset(v4, 255, 8 * (v5 - 1));
  *((void *)v4 + v7) = 0xFFFFFFFFFFFFFFFFLL >> ((v6 << 6) - *(_DWORD *)(*(void *)a1 + 4));
  return result;
}

void *sub_2225C4A8C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_2225C2AA0(a3, a1, 0);

  return sub_2225C49F4(v4, a2);
}

uint64_t sub_2225C4AD0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  sub_2225C2AA0(a3, a1, 0);
  *(unsigned char *)(a3 + 18) = *(unsigned char *)(a3 + 18) & 0xF8 | 2;
  sub_2225C2BC4(a3);
  if (a2) {
    char v6 = 8;
  }
  else {
    char v6 = 0;
  }
  *(unsigned char *)(a3 + 18) = *(unsigned char *)(a3 + 18) & 0xF7 | v6;
  *(_WORD *)(a3 + 16) = *(_WORD *)(a1 + 2);
  int v7 = *(_DWORD *)(a1 + 4);
  uint64_t v8 = sub_2225C28AC(a3);
  uint64_t result = sub_2225C2F14(v7);
  *(void *)(v8 + 8 * (result - 1)) |= 1 << (v7 - 1);
  return result;
}

__int16 **sub_2225C4B80(__int16 **a1, void *a2, _DWORD *a3)
{
  return a1;
}

__int16 **sub_2225C4BA8(__int16 **a1, float a2)
{
  sub_2225C4BF8((uint64_t)v4, LODWORD(a2));
  sub_2225C4974(a1, &unk_2226C9E78, v4);
  sub_2225C2F10(v4);
  return a1;
}

uint64_t sub_2225C4BF8@<X0>(uint64_t a1@<X8>, unsigned int a2@<S0>)
{
  return sub_2225C3A6C(a1, 32, a2, 0);
}

uint64_t sub_2225C4C10(uint64_t a1, const void **a2, unsigned int a3, unsigned int a4)
{
  int v7 = *(unsigned char *)(a1 + 18) & 7;
  if (v7 == 3)
  {
    if (sub_2225C3AB8(a1))
    {
      LOBYTE(v53[0]) = 45;
      sub_2225C52D8((uint64_t)a2, v53);
    }
    if (a4)
    {
      LOBYTE(v53[0]) = 48;
      return sub_2225C52D8((uint64_t)a2, v53);
    }
    sub_2225C3D00((int)v56, "0.0E+0");
    uint64_t v8 = v56[0];
    uint64_t v9 = v56[1];
    return sub_2225C5288(a2, v8, v9);
  }
  if (v7 == 1)
  {
    sub_2225C3D00((int)v57, "NaN");
    uint64_t v8 = v57[0];
    uint64_t v9 = v57[1];
    return sub_2225C5288(a2, v8, v9);
  }
  if ((*(unsigned char *)(a1 + 18) & 7) == 0)
  {
    if (sub_2225C3AB8(a1))
    {
      sub_2225C3D00((int)v59, "-Inf");
      uint64_t v8 = v59[0];
      uint64_t v9 = v59[1];
    }
    else
    {
      sub_2225C3D00((int)v58, "+Inf");
      uint64_t v8 = v58[0];
      uint64_t v9 = v58[1];
    }
    return sub_2225C5288(a2, v8, v9);
  }
  if (sub_2225C3AB8(a1))
  {
    LOBYTE(v53[0]) = 45;
    sub_2225C52D8((uint64_t)a2, v53);
  }
  uint64_t v12 = *(unsigned int *)(*(void *)a1 + 4);
  int v13 = *(__int16 *)(a1 + 16) - v12 + 1;
  uint64_t v14 = sub_2225C28E4(a1);
  unsigned int v15 = sub_2225C2F14(v12);
  uint64_t v16 = sub_2225C3C40(v14, v15);
  uint64_t v18 = sub_2225C6C04(v54, v12, v16, v17);
  if (!a3) {
    a3 = 59 * *(_DWORD *)(*(void *)a1 + 4) / 0xC4u + 2;
  }
  unsigned int v19 = sub_2225C7BEC(v18);
  uint64_t v20 = v19 + v13;
  unsigned int v55 = v19 + v13;
  sub_2225C84E8(v54, v19, (uint64_t)v53);
  sub_2225C3BE8((uint64_t)v54, v53);
  sub_2225C2F10(v53);
  if (v20)
  {
    if ((int)v20 < 1)
    {
      int v21 = -(int)v20;
      uint64_t v22 = (*(_DWORD *)(*(void *)a1 + 4) + (-137 * (int)v20 + 136) / 59);
      sub_2225C80D0((uint64_t)v54, v22, (uint64_t)v53);
      sub_2225C3BE8((uint64_t)v54, v53);
      sub_2225C2F10(v53);
      sub_2225C3A6C(v53, v22, 5, 0);
      if ((-(int)v20 & 1) == 0) {
        goto LABEL_23;
      }
LABEL_22:
      sub_2225C6FA4((uint64_t)v54, (uint64_t)v53);
LABEL_23:
      while (v21 >= 2)
      {
        v21 >>= 1;
        sub_2225C6FA4((uint64_t)v53, (uint64_t)v53);
        if (v21) {
          goto LABEL_22;
        }
      }
      sub_2225C2F10(v53);
    }
    else
    {
      sub_2225C80D0((uint64_t)v54, (*(_DWORD *)(*(void *)a1 + 4) + v20), (uint64_t)v53);
      sub_2225C3BE8((uint64_t)v54, v53);
      sub_2225C2F10(v53);
      sub_2225C3A70(v54, v20);
      unsigned int v55 = 0;
    }
  }
  sub_2225C5348((int *)v54, &v55, a3);
  sub_2225C549C(v53);
  uint64_t v23 = sub_2225C3B40(v54);
  sub_2225C3A6C(v52, v23, 10, 0);
  sub_2225C3A6C(v51, v23, 0, 0);
  unsigned int v24 = v55;
  if (sub_2225C54A0((uint64_t)v54, 0))
  {
    LOBYTE(v25) = 1;
    do
    {
      sub_2225C8C70((uint64_t)v54, (uint64_t)v52, (uint64_t)v54, (uint64_t)v51);
      int v26 = sub_2225C54BC(v51);
      int v25 = v25 & (v26 == 0);
      if (v25 == 1)
      {
        ++v24;
      }
      else
      {
        v50[0] = v26 + 48;
        sub_2225C52D8((uint64_t)v53, v50);
      }
    }
    while (sub_2225C54A0((uint64_t)v54, 0));
  }
  unsigned int v55 = v24;
  sub_2225C54F0(v53, &v55, a3);
  int v27 = sub_2225C5664((uint64_t)v53);
  int v28 = v27;
  unsigned int v29 = v55;
  if (!a4) {
    goto LABEL_45;
  }
  if ((v55 & 0x80000000) != 0)
  {
    if (((v27 + v55 - 1) & 0x80000000) == 0 || 1 - (v27 + v55) <= a4)
    {
      int v42 = v55 + v27;
      if ((int)(v55 + v27) < 1)
      {
        v50[0] = 48;
        sub_2225C52D8((uint64_t)a2, v50);
        v50[0] = 46;
        sub_2225C52D8((uint64_t)a2, v50);
        if (v42)
        {
          do
          {
            v50[0] = 48;
            sub_2225C52D8((uint64_t)a2, v50);
          }
          while (!__CFADD__(v42++, 1));
          int v42 = 0;
        }
      }
      else
      {
        int v43 = -v55;
        int v44 = v27;
        do
        {
          v45 = (unsigned char *)sub_2225C5698((uint64_t)v53, --v44);
          sub_2225C52D8((uint64_t)a2, v45);
        }
        while (v43 != v44);
        v50[0] = 46;
        sub_2225C52D8((uint64_t)a2, v50);
      }
      if (v42 != v28)
      {
        unsigned int v47 = ~v42 + v28;
        do
        {
          v48 = (unsigned char *)sub_2225C5698((uint64_t)v53, v47);
          sub_2225C52D8((uint64_t)a2, v48);
          --v47;
        }
        while (v47 != -1);
      }
      goto LABEL_61;
    }
    goto LABEL_45;
  }
  if (v55 > a4 || v55 + v27 > a3)
  {
LABEL_45:
    v32 = (unsigned char *)sub_2225C5698((uint64_t)v53, v27 - 1);
    sub_2225C52D8((uint64_t)a2, v32);
    v50[0] = 46;
    sub_2225C52D8((uint64_t)a2, v50);
    int v33 = v29 + v28 - 1;
    if (v28 == 1)
    {
      v50[0] = 48;
      sub_2225C52D8((uint64_t)a2, v50);
    }
    else
    {
      unsigned int v34 = v28 - 2;
      do
      {
        v35 = (unsigned char *)sub_2225C5698((uint64_t)v53, v34);
        sub_2225C52D8((uint64_t)a2, v35);
        --v34;
      }
      while (v34 != -1);
    }
    v50[0] = 69;
    sub_2225C52D8((uint64_t)a2, v50);
    if (v33 < 0) {
      char v36 = 45;
    }
    else {
      char v36 = 43;
    }
    v50[0] = v36;
    if (v33 >= 0) {
      int v37 = v29 + v28 - 1;
    }
    else {
      int v37 = -v33;
    }
    sub_2225C52D8((uint64_t)a2, v50);
    sub_2225C56C0(v50);
    do
    {
      char v49 = (char)v37 % 10 + 48;
      sub_2225C52D8((uint64_t)v50, &v49);
      unsigned int v38 = v37 + 9;
      v37 /= 10;
    }
    while (v38 > 0x12);
    int v39 = sub_2225C5664((uint64_t)v50);
    if (v39)
    {
      unsigned int v40 = v39 - 1;
      do
      {
        v41 = (unsigned char *)sub_2225C5698((uint64_t)v50, v40);
        sub_2225C52D8((uint64_t)a2, v41);
        --v40;
      }
      while (v40 != -1);
    }
    sub_2225C56C4(v50);
    goto LABEL_61;
  }
  if (v27)
  {
    unsigned int v30 = v27 - 1;
    do
    {
      v31 = (unsigned char *)sub_2225C5698((uint64_t)v53, v30);
      sub_2225C52D8((uint64_t)a2, v31);
      --v30;
    }
    while (v30 != -1);
  }
  for (; v29; --v29)
  {
    v50[0] = 48;
    sub_2225C52D8((uint64_t)a2, v50);
  }
LABEL_61:
  sub_2225C2F10(v51);
  sub_2225C2F10(v52);
  sub_2225C56C4(v53);
  return sub_2225C2F10(v54);
}

uint64_t sub_2225C5288(const void **a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v4 = (char *)sub_2225C3C70((uint64_t)v7);
  int v5 = (char *)sub_2225C3C78(v7);
  return sub_2225C5A88(a1, v4, v5);
}

uint64_t sub_2225C52D8(uint64_t a1, unsigned char *a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2225C5B48((const void **)a1, 0);
  }
  *(unsigned char *)sub_2225C3D04(a1) = *a2;
  uint64_t v4 = sub_2225C3D04(a1) + 1;

  return sub_2225C5B6C(a1, v4);
}

uint64_t sub_2225C5348(int *a1, _DWORD *a2, int a3)
{
  uint64_t result = sub_2225C5C28(a1);
  unsigned int v7 = (196 * a3 + 58) / 0x3Bu;
  BOOL v8 = result >= v7;
  int v9 = result - v7;
  if (v9 != 0 && v8)
  {
    unsigned int v10 = 59 * v9;
    if (v10 >= 0xC4)
    {
      unsigned int v11 = v10 / 0xC4;
      *a2 += v10 / 0xC4;
      uint64_t v12 = sub_2225C3B40((unsigned int *)a1);
      sub_2225C3A6C(v17, v12, 1, 0);
      uint64_t v13 = sub_2225C3B40((unsigned int *)a1);
      sub_2225C3A6C(v16, v13, 10, 0);
      if ((v11 & 1) == 0) {
        goto LABEL_6;
      }
LABEL_5:
      sub_2225C6FA4((uint64_t)v17, (uint64_t)v16);
LABEL_6:
      while (v11 >= 2)
      {
        v11 >>= 1;
        sub_2225C6FA4((uint64_t)v16, (uint64_t)v16);
        if (v11) {
          goto LABEL_5;
        }
      }
      sub_2225C8AA0((unsigned int *)a1, (uint64_t)v17, (uint64_t)v15);
      sub_2225C3BE8((uint64_t)a1, v15);
      sub_2225C2F10(v15);
      uint64_t v14 = sub_2225C5C28(a1);
      sub_2225C7E9C((uint64_t)a1, v14, (uint64_t)v15);
      sub_2225C3BE8((uint64_t)a1, v15);
      sub_2225C2F10(v15);
      sub_2225C2F10(v16);
      return sub_2225C2F10(v17);
    }
  }
  return result;
}

BOOL sub_2225C54A0(uint64_t a1, uint64_t a2)
{
  return !sub_2225C5CC8(a1, a2);
}

uint64_t sub_2225C54BC(_DWORD *a1)
{
  BOOL v2 = sub_2225C5754(a1);
  char v3 = a1 + 2;
  if (!v2) {
    char v3 = *(_DWORD **)v3;
  }
  return *(void *)v3;
}

uint64_t sub_2225C54F0(void *a1, _DWORD *a2, unsigned int a3)
{
  uint64_t result = sub_2225C5664((uint64_t)a1);
  unsigned int v7 = result;
  unsigned int v8 = result - a3;
  if (result > a3)
  {
    if (*(char *)sub_2225C5698((uint64_t)a1, v8 - 1) >= 53)
    {
      if (a3)
      {
        int v11 = -a3;
        while (1)
        {
          unsigned int v8 = v7 + v11;
          if (*(unsigned char *)sub_2225C5698((uint64_t)a1, v7 + v11) != 57) {
            break;
          }
          BOOL v10 = __CFADD__(v11++, 1);
          if (v10) {
            goto LABEL_17;
          }
        }
        uint64_t v12 = (unsigned char *)sub_2225C5698((uint64_t)a1, v7 + v11);
        ++*v12;
      }
      if (v8 == v7)
      {
LABEL_17:
        *a2 += v7;
        sub_2225C5D90(a1);
        char v14 = 49;
        return sub_2225C52D8((uint64_t)a1, &v14);
      }
    }
    else if (v8 < v7)
    {
      int v9 = -a3;
      while (1)
      {
        unsigned int v8 = v7 + v9;
        if (*(unsigned char *)sub_2225C5698((uint64_t)a1, v7 + v9) != 48) {
          break;
        }
        BOOL v10 = __CFADD__(v9++, 1);
        if (v10)
        {
          unsigned int v8 = v7;
          break;
        }
      }
    }
    *a2 += v8;
    uint64_t v13 = sub_2225C5698((uint64_t)a1, 0);
    sub_2225C5698((uint64_t)a1, v8);
    return sub_2225C5D24((uint64_t)a1, v13);
  }
  return result;
}

uint64_t sub_2225C5664(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return v2 - sub_2225C3C70(a1);
}

uint64_t sub_2225C5698(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + a2;
}

void sub_2225C56C8(uint64_t a1, int a2)
{
  if (a2) {
    char v3 = 11;
  }
  else {
    char v3 = 3;
  }
  *(unsigned char *)(a1 + 18) = v3 | *(unsigned char *)(a1 + 18) & 0xF0;
  *(_WORD *)(a1 + 16) = *(_WORD *)(*(void *)a1 + 2) - 1;
  uint64_t v4 = (void *)sub_2225C28AC(a1);
  unsigned int v5 = sub_2225C2710(a1);

  sub_2225CA674(v4, 0, v5);
}

unint64_t sub_2225C5744(unsigned int a1)
{
  return ((unint64_t)a1 + 63) >> 6;
}

BOOL sub_2225C5754(_DWORD *a1)
{
  return *a1 < 0x41u;
}

uint64_t sub_2225C5764(uint64_t a1)
{
  if (sub_2225C579C((_DWORD *)a1))
  {
    uint64_t v2 = *(void **)(a1 + 8);
    if (v2) {
      j__free(v2);
    }
  }
  return a1;
}

BOOL sub_2225C579C(_DWORD *a1)
{
  return !sub_2225C5754(a1);
}

BOOL sub_2225C57B8(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 18) & 7) == 0;
}

uint64_t sub_2225C57C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  if (sub_2225C5754((_DWORD *)a1)) {
    *(void *)(a1 + 8) = a3;
  }
  else {
    sub_2225C69EC(a1, a2, a3, a4);
  }
  sub_2225C5834(a1);
  return a1;
}

uint64_t sub_2225C5834(uint64_t a1)
{
  if ((*(_DWORD *)a1 & 0x3F) != 0)
  {
    unint64_t v2 = 0xFFFFFFFFFFFFFFFFLL >> -(*(_DWORD *)a1 & 0x3F);
    if (sub_2225C5754((_DWORD *)a1))
    {
      char v3 = (void *)(a1 + 8);
    }
    else
    {
      uint64_t v4 = *(void *)(a1 + 8);
      char v3 = (void *)(v4 + 8 * (sub_2225C2A60((unsigned int *)a1) - 1));
    }
    *v3 &= v2;
  }
  return a1;
}

uint64_t sub_2225C58AC@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754(a1))
  {
    uint64_t v6 = *a1;
    if (v6 <= a2)
    {
      uint64_t v8 = a3;
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = *((void *)a1 + 1) << a2;
      uint64_t v8 = a3;
    }
    return sub_2225C3A6C(v8, v6, v7, 0);
  }
  else
  {
    return sub_2225C8780((uint64_t)a1, a2, a3);
  }
}

uint64_t sub_2225C5948(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = 0;
  if (sub_2225C5754((_DWORD *)a1)) {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
  }
  else {
    sub_2225C6AA4(a1, a2);
  }
  return a1;
}

BOOL sub_2225C599C(_DWORD *a1, unsigned int a2)
{
  uint64_t v4 = sub_2225C5A00(a2);
  BOOL v5 = sub_2225C5754(a1);
  uint64_t v6 = (uint64_t *)(a1 + 2);
  if (!v5)
  {
    uint64_t v7 = *v6;
    uint64_t v6 = (uint64_t *)(v7 + 8 * sub_2225C5A20(a2));
  }
  return (*v6 & v4) != 0;
}

uint64_t sub_2225C5A00(char a1)
{
  return 1 << sub_2225C5A28(a1);
}

uint64_t sub_2225C5A20(unsigned int a1)
{
  return a1 >> 6;
}

uint64_t sub_2225C5A28(char a1)
{
  return a1 & 0x3F;
}

uint64_t sub_2225C5A30(const void *a1, const void *a2, size_t a3)
{
  if (a3) {
    return memcmp(a1, a2, a3);
  }
  else {
    return 0;
  }
}

void *sub_2225C5A40(void *a1, char *__s)
{
  *a1 = __s;
  a1[1] = strlen(__s);
  return a1;
}

void *sub_2225C5A74(void *result, uint64_t a2, uint64_t a3)
{
  void *result = a2;
  result[1] = a3;
  return result;
}

void *sub_2225C5A7C(void *result, uint64_t a2)
{
  void *result = a2;
  result[1] = 2;
  return result;
}

uint64_t sub_2225C5A88(const void **a1, char *a2, char *a3)
{
  unint64_t v6 = sub_2225C5B3C((uint64_t)a2, (uint64_t)a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > v7 - sub_2225C3D04((uint64_t)a1))
  {
    uint64_t v8 = sub_2225C5664((uint64_t)a1);
    sub_2225C5B48(a1, v8 + v6);
  }
  int v9 = (unsigned char *)sub_2225C3D04((uint64_t)a1);
  sub_2225C5B50(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_2225C5B40(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

char *sub_2225C5B48(const void **a1, unint64_t a2)
{
  return sub_2225C5B7C(a1, a2, 1);
}

uint64_t sub_2225C5B50(char *a1, char *a2, unsigned char *a3)
{
  sub_2225C5B8C(a1, a2, a3);
  return v3;
}

uint64_t sub_2225C5B6C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_2225C5B74(uint64_t a1, uint64_t a2)
{
  return a2 - a1;
}

char *sub_2225C5B7C(const void **a1, unint64_t a2, uint64_t a3)
{
  return sub_2225D343C(a1, a1 + 3, a2, a3);
}

uint64_t sub_2225C5B8C(char *a1, char *a2, unsigned char *a3)
{
  uint64_t v7 = a3;
  uint64_t v8 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      char v5 = *v4++;
      *v7++ = v5;
      uint64_t v8 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v9, &v8, &v7);
  return v9;
}

uint64_t sub_2225C5C08()
{
  return 0;
}

void *sub_2225C5C14(void *result, void *a2, void *a3)
{
  void *result = *a2;
  result[1] = *a3;
  return result;
}

uint64_t sub_2225C5C28(int *a1)
{
  int v1 = *a1;
  return v1 - sub_2225C5C50((uint64_t)a1);
}

uint64_t sub_2225C5C50(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    int v2 = *(_DWORD *)a1;
    return v2 + sub_2225C5CB0(*(void *)(a1 + 8), 2) - 64;
  }
  else
  {
    return sub_2225C7A1C(a1);
  }
}

uint64_t sub_2225C5CB0(unint64_t a1, int a2)
{
  if (a2) {
    BOOL v2 = a1 == 0;
  }
  else {
    BOOL v2 = 0;
  }
  unint64_t v3 = __clz(a1);
  if (v2) {
    return 64;
  }
  else {
    return v3;
  }
}

BOOL sub_2225C5CC8(uint64_t a1, uint64_t a2)
{
  if (sub_2225C5754((_DWORD *)a1)) {
    return *(void *)(a1 + 8) == a2;
  }

  return sub_2225C7708(a1, a2);
}

uint64_t sub_2225C5D24(uint64_t a1, uint64_t a2)
{
  sub_2225C3D04(a1);
  uint64_t v4 = sub_2225C5DD4();
  uint64_t v5 = sub_2225C3D04(a1);
  nullsub_1(v4, v5);
  sub_2225C5B6C(a1, v4);
  return a2;
}

uint64_t sub_2225C5D90(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  uint64_t result = nullsub_1(v2, v3);
  a1[1] = *a1;
  return result;
}

uint64_t sub_2225C5DDC()
{
  sub_2225C5DF8();
  return v0;
}

uint64_t sub_2225C5E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)j_j_nullsub_1(a3);
  uint64_t v9 = sub_2225C5ED8((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2225C5E90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = j_j_nullsub_1(a1);
  uint64_t v4 = j_j_nullsub_1(a2);
  return sub_2225C5EEC((uint64_t)&v5, (uint64_t)&v4);
}

uint64_t sub_2225C5ED8(int a1, const void *a2, uint64_t a3, char *__dst)
{
  return sub_2225C5F24(a2, a3, __dst);
}

uint64_t sub_2225C5EEC(uint64_t a1, uint64_t a2)
{
  sub_2225C5C10(&v3, a1, a2);
  return v3;
}

uint64_t sub_2225C5F24(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_2225C5F7C(__dst, a1, a2 - (void)a1);
  uint64_t v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

void *sub_2225C5F7C(void *__dst, const void *a2, size_t a3)
{
  if (a3) {
    memmove(__dst, a2, a3);
  }
  return __dst;
}

uint64_t sub_2225C5FB0(uint64_t a1, uint64_t a2)
{
  return a1 + a2 - nullsub_1();
}

void *sub_2225C5FE4(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  nullsub_1(v2, v3);
  if (!sub_2225C603C(a1))
  {
    uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

BOOL sub_2225C603C(void *a1)
{
  return *a1 == (void)(a1 + 3);
}

_DWORD *sub_2225C604C(_DWORD *a1, _DWORD *a2)
{
  if (sub_2225C608C((uint64_t)&v5, a2, a1)) {
    return a2;
  }
  else {
    return a1;
  }
}

BOOL sub_2225C608C(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  return *a2 < *a3;
}

void *sub_2225C60A0(void *result, uint64_t a2, uint64_t a3)
{
  void *result = a2;
  result[1] = a2;
  result[2] = a2 + a3;
  return result;
}

uint64_t sub_2225C60B0()
{
  if (*(unsigned char *)off_26B5C78A0())
  {
    uint64_t v0 = off_26B5C78B8();
    *(void *)uint64_t v0 = v1;
    *uint64_t v2 = 0;
  }
  else
  {
    uint64_t v0 = off_26B5C78B8();
  }
  return *(void *)v0;
}

uint64_t *sub_2225C6134@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = a2;
  a3[2] = sub_2225C634C(a2, 0xB492B66FBE98F273);
  a3[3] = sub_2225C637C(a2 ^ 0xB492B66FBE98F273, 49);
  a3[4] = 0xB492B66FBE98F273 * a2;
  unint64_t v6 = sub_2225C6384(a2);
  a3[5] = v6;
  a3[6] = sub_2225C634C(0xB492B66FBE98F273 * a2, v6);

  return sub_2225C61DC(a3, a1);
}

uint64_t *sub_2225C61DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[1] + *a1;
  char v5 = a1 + 3;
  uint64_t v6 = a1[3];
  uint64_t v7 = sub_2225C3C70(a2 + 8);
  *a1 = 0xB492B66FBE98F273 * sub_2225C637C(v4 + v6 + v7, 37);
  uint64_t v8 = a1[4] + a1[1];
  uint64_t v9 = sub_2225C3C70(a2 + 48);
  uint64_t v10 = sub_2225C637C(v8 + v9, 42);
  *a1 ^= a1[6];
  a1[1] = 0xB492B66FBE98F273 * v10;
  uint64_t v11 = *v5;
  a1[1] += sub_2225C3C70(a2 + 40) + v11;
  a1[2] = 0xB492B66FBE98F273 * sub_2225C637C(a1[5] + a1[2], 33);
  *char v5 = 0xB492B66FBE98F273 * a1[4];
  a1[4] = a1[5] + *a1;
  sub_2225C638C(a2, v5, a1 + 4);
  a1[5] = a1[6] + a1[2];
  uint64_t v12 = a1[1];
  a1[6] = sub_2225C3C70(a2 + 16) + v12;
  sub_2225C638C(a2 + 32, a1 + 5, a1 + 6);

  return sub_2225C6448(a1 + 2, a1);
}

unint64_t sub_2225C634C(uint64_t a1, uint64_t a2)
{
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (a2 ^ ((0x9DDFEA08EB382D69 * (a2 ^ a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (a2 ^ a1)))) ^ ((0x9DDFEA08EB382D69 * (a2 ^ ((0x9DDFEA08EB382D69 * (a2 ^ a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (a2 ^ a1)))) >> 47));
}

uint64_t sub_2225C637C(uint64_t a1, char a2)
{
  return __ROR8__(a1, a2);
}

unint64_t sub_2225C6384(unint64_t a1)
{
  return a1 ^ (a1 >> 47);
}

uint64_t sub_2225C638C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  *a2 += sub_2225C3C70(a1);
  uint64_t v6 = sub_2225C3C70(a1 + 24);
  *a3 = sub_2225C637C(*a3 + v6 + *a2, 21);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_2225C3C70(a1 + 8);
  uint64_t v9 = sub_2225C3C70(a1 + 16) + v8 + *a2;
  *a2 = v9;
  uint64_t result = sub_2225C637C(v9, 44);
  *a3 += result + v7;
  *a2 += v6;
  return result;
}

uint64_t *sub_2225C6448(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  void *result = *a2;
  *a2 = v2;
  return result;
}

unint64_t sub_2225C645C(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  if (a2 - 4 <= 4) {
    return sub_2225C655C(a1, a2, a3);
  }
  if (a2 - 9 <= 7) {
    return sub_2225C65BC((uint64_t)a1, a2, a3);
  }
  if (a2 - 17 <= 0xF) {
    return sub_2225C6624((uint64_t)a1, a2, a3);
  }
  if (a2 >= 0x21) {
    return sub_2225C6728((uint64_t)a1, a2, a3);
  }
  if (a2) {
    return sub_2225C68E4((unsigned __int8 *)a1, a2, a3);
  }
  return a3 ^ 0x9AE16A3B2F90404FLL;
}

unint64_t sub_2225C64BC(void *a1, unint64_t a2)
{
  unint64_t v4 = sub_2225C634C(a1[3], a1[5]);
  uint64_t v5 = v4 - 0x4B6D499041670D8DLL * sub_2225C6384(a1[1]) + a1[2];
  unint64_t v6 = sub_2225C634C(a1[4], a1[6]);
  uint64_t v7 = v6 - 0x4B6D499041670D8DLL * sub_2225C6384(a2) + *a1;

  return sub_2225C634C(v5, v7);
}

unint64_t sub_2225C655C(unsigned int *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = a2 + 8 * sub_2225C3B40(a1);
  uint64_t v7 = sub_2225C3B40((unsigned int *)((char *)a1 + a2 - 4)) ^ a3;

  return sub_2225C634C(v6, v7);
}

unint64_t sub_2225C65BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2225C3C70(a1);
  uint64_t v7 = sub_2225C3C70(a1 + a2 - 8);
  uint64_t v8 = sub_2225C637C(v7 + a2, a2);
  return sub_2225C634C(v6 ^ a3, v8) ^ v7;
}

unint64_t sub_2225C6624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = 0xB492B66FBE98F273 * sub_2225C3C70(a1);
  uint64_t v7 = sub_2225C3C70(a1 + 8);
  uint64_t v8 = a1 + a2;
  unint64_t v9 = 0x9AE16A3B2F90404FLL * sub_2225C3C70(v8 - 8);
  uint64_t v10 = sub_2225C3C70(v8 - 16);
  uint64_t v11 = sub_2225C637C(v6 - v7, 43);
  uint64_t v12 = v11 - 0x3C5A37A36834CED9 * v10 + sub_2225C637C(v9 ^ a3, 30);
  uint64_t v13 = a3 + a2 + v6 - v9 + sub_2225C637C(v7 ^ 0xC949D7C7509E6557, 20);

  return sub_2225C634C(v12, v13);
}

unint64_t sub_2225C6728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = sub_2225C3C70(a1 + 24);
  uint64_t v6 = sub_2225C3C70(v4);
  uint64_t v7 = v4 + a2;
  uint64_t v8 = v4 + a2 - 16;
  uint64_t v9 = v6 - 0x3C5A37A36834CED9 * (sub_2225C3C70(v8) + a2);
  uint64_t v10 = sub_2225C637C(v9 + v5, 52);
  uint64_t v11 = sub_2225C637C(v9, 37);
  uint64_t v12 = v9 + sub_2225C3C70(v4 + 8);
  uint64_t v13 = sub_2225C637C(v12, 7);
  v4 += 16;
  uint64_t v14 = sub_2225C3C70(v4) + v12;
  uint64_t v15 = v11 + v10 + v13 + sub_2225C637C(v14, 31);
  uint64_t v16 = sub_2225C3C70(v4);
  uint64_t v17 = sub_2225C3C70(v7 - 32) + v16;
  uint64_t v18 = sub_2225C3C70(v7 - 8);
  uint64_t v19 = sub_2225C637C(v17 + v18, 52);
  uint64_t v20 = sub_2225C637C(v17, 37);
  uint64_t v21 = sub_2225C3C70(v7 - 24) + v17;
  uint64_t v22 = sub_2225C637C(v21, 7);
  uint64_t v23 = sub_2225C3C70(v8) + v21;
  uint64_t v24 = sub_2225C637C(v23, 31);
  unint64_t v25 = sub_2225C6384(0x9AE16A3B2F90404FLL * (v14 + v5 + v19 + v20 + v22 + v24) - 0x3C5A37A36834CED9
                                                                                * (v18 + v23 + v15));
  return 0x9AE16A3B2F90404FLL * sub_2225C6384(((0xC3A5C85C97CB3127 * v25) ^ a3) + v15);
}

unint64_t sub_2225C68E4(unsigned __int8 *a1, unint64_t a2, uint64_t a3)
{
  return 0x9AE16A3B2F90404FLL
       * sub_2225C6384((0x9AE16A3B2F90404FLL * (*a1 | ((unint64_t)a1[a2 >> 1] << 8))) ^ a3 ^ (0xC949D7C7509E6557 * (a2 + 4 * a1[a2 - 1])));
}

void *sub_2225C6954(void *result, uint64_t a2)
{
  void *result = a2;
  return result;
}

uint64_t sub_2225C695C(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a3 - (a2 - (void)a1));
  uint64_t v5 = a2;
  sub_2225C5F7C(v4, a1, a2 - (void)a1);
  return sub_2225C5EEC((uint64_t)&v5, (uint64_t)&v4);
}

uint64_t sub_2225C69A0(void *a1, void *a2)
{
  return sub_2225C69AC(*a1, *a2);
}

char *sub_2225C69B0(char *result, char *a2)
{
  char v2 = *result;
  void *result = *a2;
  *a2 = v2;
  return result;
}

uint64_t sub_2225C69C4()
{
  return sub_2225C69CC();
}

uint64_t sub_2225C69CC()
{
  return sub_2225C69D4();
}

void *sub_2225C69D8(void *a1, uint64_t a2)
{
  return sub_2225C60A0(a1, (uint64_t)(a1 + 3), a2);
}

uint64_t sub_2225C69E4()
{
  return sub_2225C69CC();
}

void sub_2225C69EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v7 = sub_2225C2A60((unsigned int *)a1);
  sub_2225C6A68(v7);
  *(void *)(a1 + 8) = v8;
  void *v8 = a3;
  if (a3 < 0 && a4 && sub_2225C2A60((unsigned int *)a1) >= 2)
  {
    unint64_t v9 = 1;
    do
      *(void *)(*(void *)(a1 + 8) + 8 * v9++) = -1;
    while (v9 < sub_2225C2A60((unsigned int *)a1));
  }
}

void sub_2225C6A68(unsigned int a1)
{
  size_t v1 = 8 * a1;
  char v2 = (void *)sub_2225C26A4(v1);

  bzero(v2, v1);
}

void *sub_2225C6AA4(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225C2A60((unsigned int *)a1);
  uint64_t v5 = (void *)sub_2225C6B08(v4);
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(const void **)(a2 + 8);
  size_t v7 = 8 * sub_2225C2A60((unsigned int *)a1);

  return memcpy(v5, v6, v7);
}

uint64_t sub_2225C6B08(unsigned int a1)
{
  return sub_2225C26A4(8 * a1);
}

uint64_t sub_2225C6B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a2;
  v12[1] = a3;
  if (sub_2225C5754((_DWORD *)a1))
  {
    *(void *)(a1 + 8) = *(void *)sub_2225C6BC0(v12, 0);
  }
  else
  {
    unsigned int v4 = sub_2225C2A60((unsigned int *)a1);
    sub_2225C6A68(v4);
    *(void *)(a1 + 8) = v5;
    int v11 = sub_2225C3D04((uint64_t)v12);
    int v10 = sub_2225C2A60((unsigned int *)a1);
    int v6 = *(_DWORD *)sub_2225C2A9C(&v11, &v10);
    size_t v7 = *(void **)(a1 + 8);
    uint64_t v8 = (const void *)sub_2225C3C70((uint64_t)v12);
    memcpy(v7, v8, (8 * v6));
  }
  return sub_2225C5834(a1);
}

uint64_t sub_2225C6BC0(void *a1, uint64_t a2)
{
  return *a1 + 8 * a2;
}

uint64_t sub_2225C6BCC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  sub_2225C6B10(a1, a3, a4);
  return a1;
}

uint64_t sub_2225C6C08(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(_DWORD *)a1;
  if (v4 == sub_2225C3B40((unsigned int *)a2))
  {
    uint64_t v5 = *(void **)(a1 + 8);
    int v6 = *(const void **)(a2 + 8);
    int v7 = sub_2225C2A60((unsigned int *)a1);
    memcpy(v5, v6, (8 * v7));
    return a1;
  }
  if (sub_2225C5754((_DWORD *)a1))
  {
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    int v11 = sub_2225C2A60((unsigned int *)a1);
    if (v11 == sub_2225C2A60((unsigned int *)a2))
    {
      int v10 = *(void **)(a1 + 8);
      goto LABEL_10;
    }
    BOOL v14 = sub_2225C5754((_DWORD *)a2);
    uint64_t v15 = *(void **)(a1 + 8);
    if (v14)
    {
      if (v15) {
        j__free(v15);
      }
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      goto LABEL_11;
    }
    if (v15) {
      j__free(v15);
    }
  }
  unsigned int v9 = sub_2225C2A60((unsigned int *)a2);
  int v10 = (void *)sub_2225C6B08(v9);
  *(void *)(a1 + 8) = v10;
LABEL_10:
  uint64_t v12 = *(const void **)(a2 + 8);
  int v13 = sub_2225C2A60((unsigned int *)a2);
  memcpy(v10, v12, (8 * v13));
LABEL_11:
  *(_DWORD *)a1 = *(_DWORD *)a2;

  return sub_2225C5834(a1);
}

uint64_t sub_2225C6D38(uint64_t a1, uint64_t a2)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    *(void *)(a1 + 8) = a2;
  }
  else
  {
    **(void **)(a1 + 8) = a2;
    unsigned int v4 = (void *)(*(void *)(a1 + 8) + 8);
    int v5 = sub_2225C2A60((unsigned int *)a1);
    bzero(v4, (8 * v5 - 8));
  }

  return sub_2225C5834(a1);
}

uint64_t sub_2225C6DA8(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    ++*(void *)(a1 + 8);
  }
  else
  {
    char v2 = *(uint64_t **)(a1 + 8);
    unsigned int v3 = sub_2225C2A60((unsigned int *)a1);
    sub_2225C6E10(v2, v2, v3);
  }

  return sub_2225C5834(a1);
}

void *sub_2225C6E10(void *result, uint64_t *a2, unsigned int a3)
{
  if (a3)
  {
    uint64_t v3 = a3 - 1;
    do
    {
      uint64_t v4 = *a2++;
      *result++ = v4 + 1;
    }
    while (v4 == -1 && v3-- != 0);
  }
  return result;
}

uint64_t sub_2225C6E3C(uint64_t a1, uint64_t a2)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    *(void *)(a1 + 8) += *(void *)(a2 + 8);
  }
  else
  {
    uint64_t v4 = *(unint64_t **)(a1 + 8);
    int v5 = *(uint64_t **)(a2 + 8);
    unsigned int v6 = sub_2225C2A60((unsigned int *)a1);
    sub_2225C6EBC(v4, (uint64_t *)v4, v5, v6);
  }

  return sub_2225C5834(a1);
}

unint64_t *sub_2225C6EBC(unint64_t *result, uint64_t *a2, uint64_t *a3, unsigned int a4)
{
  if (a4)
  {
    unsigned int v6 = result;
    char v7 = 0;
    uint64_t v8 = a4;
    do
    {
      uint64_t result = (unint64_t *)sub_2225CAB38(a2, a3);
      uint64_t v10 = *a2++;
      uint64_t v9 = v10;
      uint64_t v11 = *a3++;
      unint64_t v12 = *result;
      unint64_t v13 = v9 + (v7 & 1) + v11;
      *unsigned int v6 = v13;
      if (v13 >= v12) {
        v7 &= v13 == v12;
      }
      else {
        char v7 = 1;
      }
      ++v6;
      --v8;
    }
    while (v8);
  }
  return result;
}

void *sub_2225C6F50(void *result, unint64_t *a2, unint64_t *a3, unsigned int a4)
{
  if (a4)
  {
    BOOL v4 = 0;
    uint64_t v5 = a4;
    do
    {
      unint64_t v7 = *a2++;
      unint64_t v6 = v7;
      if (v4)
      {
        unint64_t v8 = *a3;
        BOOL v4 = *a3 > v6 - 1 || v6 == 0;
        --v6;
      }
      else
      {
        unint64_t v8 = *a3;
        BOOL v4 = *a3 > v6;
      }
      *result++ = v6 - v8;
      ++a3;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_2225C6FA4(uint64_t a1, uint64_t a2)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    *(void *)(a1 + 8) *= *(void *)(a2 + 8);
    sub_2225C5834(a1);
  }
  else
  {
    int v4 = sub_2225C5C28((int *)a1);
    if (v4)
    {
      int v5 = sub_2225C5A20(v4 - 1);
      unsigned int v6 = v5 + 1;
      if (v5 != -1)
      {
        int v7 = sub_2225C5C28((int *)a2);
        if (v7 && (v8 = sub_2225C5A20(v7 - 1), unsigned int v9 = v8 + 1, v8 != -1))
        {
          unsigned int v10 = v9 + v6;
          uint64_t v11 = (unint64_t *)sub_2225C6B08(v9 + v6);
          sub_2225C7108(v11, *(unint64_t **)(a1 + 8), v6, *(uint64_t **)(a2 + 8), v9);
          sub_2225C70AC(a1);
          if (v9 + v6 >= sub_2225C2A60((unsigned int *)a1)) {
            unsigned int v10 = sub_2225C2A60((unsigned int *)a1);
          }
          memcpy(*(void **)(a1 + 8), v11, 8 * v10);
          sub_2225C5834(a1);
          j__free(v11);
        }
        else
        {
          sub_2225C70AC(a1);
        }
      }
    }
  }
  return a1;
}

void sub_2225C70AC(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    char v2 = *(void **)(a1 + 8);
    size_t v3 = 8 * sub_2225C2A60((unsigned int *)a1);
    bzero(v2, v3);
  }
}

unint64_t sub_2225C7108(unint64_t *a1, unint64_t *a2, unsigned int a3, uint64_t *a4, unsigned int a5)
{
  unint64_t result = sub_2225CAB90(a1, a2, a3, *a4);
  a1[a3] = result;
  if (a5 >= 2)
  {
    uint64_t v11 = 1;
    do
    {
      if (a3)
      {
        uint64_t v12 = 0;
        unint64_t v13 = 0;
        unsigned int v14 = a4[v11];
        unint64_t v15 = HIDWORD(a4[v11]);
        do
        {
          unsigned int v16 = a2[v12];
          unint64_t v17 = HIDWORD(a2[v12]);
          unint64_t v18 = v16 * (unint64_t)v14;
          BOOL v19 = __CFADD__(v18, v13);
          if (__CFADD__(v18, v13)) {
            uint64_t v20 = 0x100000000;
          }
          else {
            uint64_t v20 = 0;
          }
          unint64_t v21 = ((v18 + v13) >> 32) + v17 * (unint64_t)v14 + v20;
          BOOL v22 = v21 != 0;
          if (v21) {
            BOOL v19 = 0;
          }
          BOOL v23 = __CFADD__(v18, v13);
          unsigned int v24 = v18 + v13;
          unint64_t v25 = v16 * (unint64_t)v15;
          unint64_t result = v21 + v25;
          unint64_t v26 = v24 | ((unint64_t)result << 32);
          unint64_t v27 = a1[(v11 + v12)];
          if (v23) {
            BOOL v22 = 1;
          }
          if (result) {
            BOOL v22 = 0;
          }
          if (v22 || v19) {
            uint64_t v28 = 0x100000000;
          }
          else {
            uint64_t v28 = 0;
          }
          a1[(v11 + v12)] = v26 + v27;
          unint64_t v13 = v28
              + __CFADD__(v26, v27)
              + HIDWORD(v25)
              + v17 * (unint64_t)v15
              + HIDWORD(result);
          ++v12;
        }
        while (a3 != v12);
      }
      else
      {
        unint64_t v13 = 0;
      }
      a1[v11++ + a3] = v13;
    }
    while (v11 != a5);
  }
  return result;
}

uint64_t sub_2225C7224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v6 = sub_2225C2A60((unsigned int *)a1);
  uint64_t v7 = sub_2225C6B08(v6);
  uint64_t v8 = v7;
  if (v6)
  {
    unsigned int v9 = *(uint64_t **)(a1 + 8);
    unsigned int v10 = *(uint64_t **)(a2 + 8);
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v7;
    do
    {
      uint64_t v14 = *v9++;
      uint64_t v13 = v14;
      uint64_t v15 = *v10++;
      *v12++ = v15 & v13;
      --v11;
    }
    while (v11);
  }
  int v16 = sub_2225C3B40((unsigned int *)a1);

  return sub_2225C72BC(a3, v8, v16);
}

uint64_t sub_2225C72C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v6 = sub_2225C2A60((unsigned int *)a1);
  uint64_t v7 = sub_2225C6B08(v6);
  uint64_t v8 = v7;
  if (v6)
  {
    unsigned int v9 = *(uint64_t **)(a1 + 8);
    unsigned int v10 = *(uint64_t **)(a2 + 8);
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v7;
    do
    {
      uint64_t v14 = *v9++;
      uint64_t v13 = v14;
      uint64_t v15 = *v10++;
      *v12++ = v15 | v13;
      --v11;
    }
    while (v11);
  }
  int v16 = sub_2225C3B40((unsigned int *)a1);

  return sub_2225C72BC(a3, v8, v16);
}

uint64_t sub_2225C7358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v6 = sub_2225C2A60((unsigned int *)a1);
  uint64_t v7 = sub_2225C6B08(v6);
  uint64_t v8 = v7;
  if (v6)
  {
    unsigned int v9 = *(uint64_t **)(a1 + 8);
    unsigned int v10 = *(uint64_t **)(a2 + 8);
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v7;
    do
    {
      uint64_t v14 = *v9++;
      uint64_t v13 = v14;
      uint64_t v15 = *v10++;
      *v12++ = v15 ^ v13;
      --v11;
    }
    while (v11);
  }
  int v16 = sub_2225C3B40((unsigned int *)a1);
  sub_2225C72BC((uint64_t)v19, v8, v16);
  uint64_t v17 = sub_2225C5834((uint64_t)v19);
  sub_2225C3B80(a3, v17);
  return sub_2225C2F10(v19);
}

uint64_t sub_2225C7408@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754(a1))
  {
    uint64_t v6 = *a1;
    uint64_t v7 = *(void *)(a2 + 8) * *((void *)a1 + 1);
    return sub_2225C3A6C(a3, v6, v7, 0);
  }
  else
  {
    uint64_t v9 = sub_2225C3B80(a3, a1);
    return sub_2225C6FA4(v9, a2);
  }
}

uint64_t sub_2225C7498@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754(a1))
  {
    uint64_t v6 = *a1;
    uint64_t v7 = *(void *)(a2 + 8) + *((void *)a1 + 1);
    return sub_2225C3A6C(a3, v6, v7, 0);
  }
  else
  {
    sub_2225C3A6C(v14, *a1, 0, 0);
    uint64_t v9 = (unint64_t *)v14[1];
    unsigned int v10 = (uint64_t *)*((void *)a1 + 1);
    uint64_t v11 = *(uint64_t **)(a2 + 8);
    unsigned int v12 = sub_2225C2A60(a1);
    sub_2225C6EBC(v9, v10, v11, v12);
    uint64_t v13 = sub_2225C5834((uint64_t)v14);
    sub_2225C3B80(a3, v13);
    return sub_2225C2F10(v14);
  }
}

uint64_t sub_2225C7578@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754(a1))
  {
    uint64_t v6 = *a1;
    uint64_t v7 = *((void *)a1 + 1) - *(void *)(a2 + 8);
    return sub_2225C3A6C(a3, v6, v7, 0);
  }
  else
  {
    sub_2225C3A6C(v14, *a1, 0, 0);
    uint64_t v9 = (void *)v14[1];
    unsigned int v10 = (unint64_t *)*((void *)a1 + 1);
    uint64_t v11 = *(unint64_t **)(a2 + 8);
    unsigned int v12 = sub_2225C2A60(a1);
    sub_2225C6F50(v9, v10, v11, v12);
    uint64_t v13 = sub_2225C5834((uint64_t)v14);
    sub_2225C3B80(a3, v13);
    return sub_2225C2F10(v14);
  }
}

uint64_t sub_2225C7658(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225C5C28((int *)a1);
  if (v4 != sub_2225C5C28((int *)a2)) {
    return 0;
  }
  if (v4 <= 0x40) {
    return **(void **)(a1 + 8) == **(void **)(a2 + 8);
  }
  int v6 = sub_2225C5A20(v4 - 1);
  if (v6 < 0) {
    return 1;
  }
  int v7 = v6;
  do
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 8) + 8 * v7);
    uint64_t v9 = *(void *)(*(void *)(a2 + 8) + 8 * v7);
    uint64_t result = v8 == v9;
    BOOL v10 = __OFSUB__(v7--, 1);
  }
  while (v7 < 0 == v10 && v8 == v9);
  return result;
}

BOOL sub_2225C7708(uint64_t a1, uint64_t a2)
{
  return sub_2225C5C28((int *)a1) <= 0x40 && **(void **)(a1 + 8) == a2;
}

uint64_t sub_2225C7750(uint64_t a1, uint64_t a2)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    unint64_t v4 = *(void *)(a1 + 8);
    unint64_t v5 = *(void *)(a2 + 8);
    return v4 < v5;
  }
  unsigned int v7 = sub_2225C5C28((int *)a1);
  unsigned int v17 = v7;
  unsigned int v8 = sub_2225C5C28((int *)a2);
  unsigned int v16 = v8;
  if (v7 < v8) {
    return 1;
  }
  if (v8 < v7) {
    return 0;
  }
  if (v7 <= 0x40)
  {
    unint64_t v4 = **(void **)(a1 + 8);
    unint64_t v5 = **(void **)(a2 + 8);
    return v4 < v5;
  }
  uint64_t v9 = (_DWORD *)sub_2225C7858(&v17, &v16);
  int v10 = sub_2225C5A20(*v9 - 1);
  if (v10 < 0) {
    return 0;
  }
  uint64_t v11 = *(void *)(a2 + 8);
  while (1)
  {
    unint64_t v12 = *(void *)(*(void *)(a1 + 8) + 8 * v10);
    unint64_t v13 = *(void *)(v11 + 8 * v10);
    if (v12 > v13) {
      break;
    }
    if (v12 < v13)
    {
      int v15 = 1;
      LODWORD(v11) = 1;
      return v15 & v11;
    }
    BOOL v14 = __OFSUB__(v10--, 1);
    if (v10 < 0 != v14)
    {
      int v15 = 0;
      return v15 & v11;
    }
  }
  LODWORD(v11) = 0;
  int v15 = 1;
  return v15 & v11;
}

BOOL sub_2225C785C(uint64_t a1, uint64_t a2)
{
  if (!sub_2225C5754((_DWORD *)a1))
  {
    sub_2225C3B80(v10, a1);
    sub_2225C3B80(v9, a2);
    BOOL v4 = sub_2225C3B84((_DWORD *)a1);
    BOOL v5 = sub_2225C3B84(v9);
    BOOL v6 = v5;
    if (v4)
    {
      sub_2225C7958((uint64_t)v10);
      sub_2225C6DA8((uint64_t)v10);
      if (!v6)
      {
        BOOL v4 = 1;
LABEL_11:
        sub_2225C2F10(v9);
        sub_2225C2F10(v10);
        return v4;
      }
    }
    else if (!v5)
    {
      uint64_t v7 = sub_2225C7750((uint64_t)v10, (uint64_t)v9);
      goto LABEL_10;
    }
    sub_2225C7958((uint64_t)v9);
    sub_2225C6DA8((uint64_t)v9);
    if (!v4) {
      goto LABEL_11;
    }
    uint64_t v7 = sub_2225C79D8((uint64_t)v10, (uint64_t)v9);
LABEL_10:
    BOOL v4 = v7;
    goto LABEL_11;
  }
  return (uint64_t)(*(void *)(a1 + 8) << -*(unsigned char *)a1) >> -*(unsigned char *)a1 < (uint64_t)(*(void *)(a2 + 8) << -*(unsigned char *)a1) >> -*(unsigned char *)a1;
}

uint64_t sub_2225C7958(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    *(void *)(a1 + 8) = ~*(void *)(a1 + 8);
  }
  else if (sub_2225C2A60((unsigned int *)a1))
  {
    unint64_t v2 = 0;
    do
    {
      *(void *)(*(void *)(a1 + 8) + 8 * v2) = ~*(void *)(*(void *)(a1 + 8) + 8 * v2);
      ++v2;
    }
    while (v2 < sub_2225C2A60((unsigned int *)a1));
  }

  return sub_2225C5834(a1);
}

uint64_t sub_2225C79D8(uint64_t a1, uint64_t a2)
{
  if (sub_2225C7750(a1, a2)) {
    return 0;
  }
  else {
    return sub_2225CAC30(a1, a2) ^ 1;
  }
}

uint64_t sub_2225C7A1C(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)a1 & 0x3F;
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 64;
  }
  if (v2) {
    uint64_t v4 = ~(-1 << *(_DWORD *)a1);
  }
  else {
    uint64_t v4 = -1;
  }
  int v5 = sub_2225C2A60((unsigned int *)a1);
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v4 & *(void *)(v6 + 8 * (v5 - 1))) != 0) {
    return v3 + sub_2225C5CB0(v4 & *(void *)(v6 + 8 * (v5 - 1)), 2) - 64;
  }
  if (v5 != 1)
  {
    uint64_t v8 = (v3 + (v5 << 6) - 64);
    unsigned int v9 = v5 - 2;
    while (1)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        break;
      }
      LODWORD(v3) = v3 + 64;
      if (!v9--) {
        return v8;
      }
    }
    return sub_2225C5CB0(v10, 2) + v3;
  }
  return v3;
}

uint64_t sub_2225C7AD4(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    uint64_t v2 = *(void *)(a1 + 8) << -*(unsigned char *)a1;
    return sub_2225C7BCC(v2);
  }
  else
  {
    if ((*(_DWORD *)a1 & 0x3F) != 0) {
      uint64_t v4 = *(_DWORD *)a1 & 0x3F;
    }
    else {
      uint64_t v4 = 64;
    }
    if ((*(_DWORD *)a1 & 0x3F) != 0) {
      char v5 = 64 - (*(unsigned char *)a1 & 0x3F);
    }
    else {
      char v5 = 0;
    }
    int v6 = sub_2225C2A60((unsigned int *)a1);
    int v7 = v6 - 1;
    uint64_t result = sub_2225C7BCC(*(void *)(*(void *)(a1 + 8) + 8 * (v6 - 1)) << v5);
    if (result == v4)
    {
      if (v6 - 2 < 0)
      {
        return v4;
      }
      else
      {
        uint64_t result = (v4 + (v6 << 6) - 64);
        while (1)
        {
          --v7;
          uint64_t v8 = *(void *)(a1 + 8);
          if (*(void *)(v8 + 8 * v7) != -1) {
            break;
          }
          LODWORD(v4) = v4 + 64;
          if (v7 <= 0) {
            return result;
          }
        }
        return sub_2225C7BCC(*(void *)(v8 + 8 * v7)) + v4;
      }
    }
  }
  return result;
}

uint64_t sub_2225C7BCC(uint64_t a1)
{
  return sub_2225C5CB0(~a1, 2);
}

uint64_t sub_2225C7BEC(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    int v7 = sub_2225C7CBC(*(void *)(a1 + 8), 2);
    uint64_t v2 = &v7;
  }
  else
  {
    if (sub_2225C2A60((unsigned int *)a1))
    {
      unint64_t v3 = 0;
      int v4 = 0;
      do
      {
        if (*(void *)(*(void *)(a1 + 8) + 8 * v3)) {
          break;
        }
        v4 += 64;
        ++v3;
      }
      while (v3 < sub_2225C2A60((unsigned int *)a1));
    }
    else
    {
      int v4 = 0;
      LODWORD(v3) = 0;
    }
    int v6 = v4;
    if (v3 < sub_2225C2A60((unsigned int *)a1)) {
      int v6 = v4 + sub_2225C7CBC(*(void *)(*(void *)(a1 + 8) + 8 * v3), 2);
    }
    uint64_t v2 = &v6;
  }
  return *(unsigned int *)sub_2225C2A9C(v2, a1);
}

uint64_t sub_2225C7CBC(unint64_t a1, int a2)
{
  if (a2) {
    BOOL v2 = a1 == 0;
  }
  else {
    BOOL v2 = 0;
  }
  unint64_t v3 = __clz(__rbit64(a1));
  if (v2) {
    return 64;
  }
  else {
    return v3;
  }
}

uint64_t sub_2225C7CD8(uint64_t a1)
{
  if (!sub_2225C2A60((unsigned int *)a1)) {
    return 0;
  }
  unint64_t v2 = 0;
  LODWORD(v3) = 0;
  do
    uint64_t v3 = sub_2225C7D40(*(void *)(*(void *)(a1 + 8) + 8 * v2++)) + v3;
  while (v2 < sub_2225C2A60((unsigned int *)a1));
  return v3;
}

uint64_t sub_2225C7D40(uint64_t a1)
{
  uint8x8_t v1 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
  v1.i16[0] = vaddlv_u8(v1);
  return v1.u32[0];
}

uint64_t sub_2225C7D58(uint64_t result, uint64_t a2, int a3, char a4)
{
  unsigned int v4 = a3 - 1;
  if (a3 - 1 >= 0)
  {
    uint64_t v5 = 0;
    int v6 = (unint64_t *)(a2 + 8 * v4);
    int v7 = (unint64_t *)(result + 8 * v4);
    do
    {
      unint64_t v8 = *v6--;
      *v7-- = (v8 >> a4) | v5;
      uint64_t v5 = v8 << (64 - a4);
      --a3;
    }
    while (a3);
  }
  return result;
}

BOOL sub_2225C7D98(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1)) {
    return *(void *)(a1 + 8) == 0;
  }
  if (!sub_2225C2A60((unsigned int *)a1)) {
    return 1;
  }
  unsigned int v3 = 0;
  do
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 8 * v3);
    BOOL v2 = v4 == 0;
    if (v4) {
      break;
    }
    ++v3;
  }
  while (v3 != sub_2225C2A60((unsigned int *)a1));
  return v2;
}

uint64_t sub_2225C7E1C(uint64_t a1, uint64_t a2)
{
  if (sub_2225C5754((_DWORD *)a1) && sub_2225C5754((_DWORD *)a2))
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(_DWORD *)a1 = *(_DWORD *)a2;
    return sub_2225C5834(a1);
  }
  else
  {
    return sub_2225C6C08(a1, a2);
  }
}

uint64_t sub_2225C7E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 > 0x40)
  {
    unsigned int v8 = sub_2225C5744(a2);
    uint64_t v9 = sub_2225C6B08(v8);
    uint64_t result = sub_2225C72BC(a3, v9, a2);
    uint64_t v10 = 0;
    do
    {
      *(void *)(*(void *)(a3 + 8) + v10) = *(void *)(*(void *)(a1 + 8) + v10);
      v10 += 8;
    }
    while (8 * (a2 >> 6) != v10);
    int v11 = -(int)a2 & 0x3F;
    if (v11) {
      *(void *)(*(void *)(a3 + 8) + 8 * (a2 >> 6)) = *(void *)(*(void *)(a1 + 8)
    }
                                                                                   + 8 * (a2 >> 6)) & (0xFFFFFFFFFFFFFFFFLL >> v11);
  }
  else
  {
    uint64_t v6 = *(void *)sub_2225C2A68((_DWORD *)a1);
    return sub_2225C3A6C(a3, a2, v6, 0);
  }
  return result;
}

uint64_t sub_2225C7F78@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v3 = a2;
  if (a2 > 0x40)
  {
    unsigned int v8 = sub_2225C5744(a2);
    uint64_t v9 = sub_2225C6B08(v8);
    uint64_t result = sub_2225C72BC(a3, v9, v3);
    unsigned int v10 = *a1;
    if (*a1 >= 0x40)
    {
      unsigned int v11 = 0;
      do
      {
        uint64_t result = (uint64_t)sub_2225C2A68(a1);
        uint64_t v13 = *(void *)(result + 8 * v11);
        *(void *)(*(void *)(a3 + 8) + 8 * v11++) = v13;
        unsigned int v10 = *a1;
      }
      while (v11 != *a1 >> 6);
      uint64_t v12 = v13 >> 63;
    }
    else
    {
      unsigned int v11 = 0;
      uint64_t v12 = 0;
    }
    char v14 = -(char)v10 & 0x3F;
    if (v14)
    {
      uint64_t result = (uint64_t)sub_2225C2A68(a1);
      uint64_t v12 = (uint64_t)(*(void *)(result + 8 * v11) << v14) >> v14;
    }
    if (v11 != v3 >> 6)
    {
      do
      {
        *(void *)(*(void *)(a3 + 8) + 8 * v11) = v12;
        v12 >>= 63;
        ++v11;
      }
      while (v3 >> 6 != v11);
      unsigned int v11 = v3 >> 6;
    }
    int v15 = -v3 & 0x3F;
    if (v15) {
      *(void *)(*(void *)(a3 + 8) + 8 * v11) = v12 & (0xFFFFFFFFFFFFFFFFLL >> v15);
    }
  }
  else
  {
    unint64_t v6 = (unint64_t)((uint64_t)(*((void *)a1 + 1) << -*(unsigned char *)a1) >> (a2
                                                                              - *a1)) >> -(char)a2;
    return sub_2225C3A6C(a3, a2, v6, 0);
  }
  return result;
}

void sub_2225C80D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3 = a2;
  if (a2 > 0x40)
  {
    unsigned int v7 = sub_2225C5744(a2);
    uint64_t v8 = sub_2225C6B08(v7);
    sub_2225C72BC(a3, v8, v3);
    unsigned int v9 = 0;
    if (sub_2225C2A60((unsigned int *)a1))
    {
      do
      {
        *(void *)(*(void *)(a3 + 8) + 8 * v9) = *(void *)&sub_2225C2A68((_DWORD *)a1)[2 * v9];
        ++v9;
      }
      while (v9 != sub_2225C2A60((unsigned int *)a1));
    }
    unsigned int v10 = (void *)(*(void *)(a3 + 8) + 8 * v9);
    size_t v11 = 8 * (sub_2225C2A60((unsigned int *)a3) - v9);
    bzero(v10, v11);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 8);
    sub_2225C3A6C(a3, a2, v6, 0);
  }
}

uint64_t sub_2225C81B8@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    BOOL v6 = sub_2225C5754(a1);
    uint64_t v7 = *a1;
    if (v6)
    {
      if (v7 != a2)
      {
        uint64_t v11 = (uint64_t)(*((void *)a1 + 1) << -(char)v7) >> -(char)v7 >> a2;
        uint64_t v8 = a3;
LABEL_29:
        uint64_t v12 = 0;
        goto LABEL_30;
      }
      uint64_t v8 = a3;
      uint64_t v7 = a2;
LABEL_28:
      uint64_t v11 = 0;
      goto LABEL_29;
    }
    if (v7 == a2)
    {
      BOOL v10 = sub_2225C3B84(a1);
      uint64_t v7 = *a1;
      if (v10)
      {
        uint64_t v8 = a3;
        uint64_t v11 = -1;
        uint64_t v12 = 1;
LABEL_30:
        return sub_2225C3A6C(v8, v7, v11, v12);
      }
      uint64_t v8 = a3;
      goto LABEL_28;
    }
    unsigned int v13 = sub_2225C2A60(a1);
    uint64_t v14 = sub_2225C26A4(8 * v13);
    unsigned int v15 = a2 & 0x3F;
    unsigned int v16 = sub_2225C2A60(a1) - 1;
    unint64_t v17 = v16 - (a2 >> 6);
    unsigned int v18 = sub_2225C5A28(*a1);
    if (v18) {
      unsigned int v19 = v18;
    }
    else {
      unsigned int v19 = 64;
    }
    if ((a2 & 0x3F) != 0)
    {
      unsigned int v20 = a2 >> 6;
      uint64_t v21 = *((void *)a1 + 1);
      if (v16 != v20)
      {
        if (v17 <= 1) {
          uint64_t v22 = 1;
        }
        else {
          uint64_t v22 = v17;
        }
        unsigned int v23 = v20;
        unsigned int v24 = (unint64_t *)v14;
        do
        {
          unint64_t v25 = *(void *)(v21 + 8 * v23++);
          *v24++ = (*(void *)(v21 + 8 * v23) << (64 - v15)) | (v25 >> v15);
          --v22;
        }
        while (v22);
      }
      uint64_t v26 = *(void *)(v21 + 8 * v16) >> v15;
      *(void *)(v14 + 8 * v17) = v26;
      if (!sub_2225C3B84(a1)) {
        goto LABEL_41;
      }
      char v27 = v19 - v15;
      if (v19 >= v15)
      {
        uint64_t v28 = v26 | (-1 << v27);
      }
      else
      {
        if (v16 != v20) {
          *(void *)(v14 + 8 * (v17 - 1)) |= -1 << v27;
        }
        uint64_t v28 = -1;
      }
    }
    else
    {
      unint64_t v29 = 0;
      uint64_t v30 = *((void *)a1 + 1);
      do
        *(void *)(v14 + 8 * v29) = *(void *)(v30 + 8 * ((a2 >> 6) + v29));
      while (v29++ < v17);
      if (!sub_2225C3B84(a1) || v19 >= 0x40) {
        goto LABEL_41;
      }
      uint64_t v28 = *(void *)(v14 + 8 * v17) | (-1 << v19);
    }
    *(void *)(v14 + 8 * v17) = v28;
LABEL_41:
    uint64_t v32 = sub_2225C3B84(a1);
    unint64_t v33 = (v17 + 1);
    if (v33 < sub_2225C2A60(a1))
    {
      uint64_t v34 = v32 << 63 >> 63;
      do
        *(void *)(v14 + 8 * v33++) = v34;
      while (v33 < sub_2225C2A60(a1));
    }
    sub_2225C72BC((uint64_t)v36, v14, *a1);
    uint64_t v35 = sub_2225C5834((uint64_t)v36);
    sub_2225C3B80(a3, v35);
    return sub_2225C2F10(v36);
  }

  return sub_2225C3B80(a3, a1);
}

uint64_t sub_2225C8484(int *a1, unint64_t a2)
{
  if (sub_2225C5C28(a1) > 0x40 || sub_2225C54BC(a1) > a2) {
    return a2;
  }

  return sub_2225C54BC(a1);
}

uint64_t sub_2225C84E8@<X0>(unsigned int *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v6 = sub_2225C5754(a1);
  uint64_t v7 = *a1;
  if (v6)
  {
    if (v7 > a2)
    {
      uint64_t v8 = *((void *)a1 + 1) >> a2;
      uint64_t v9 = a3;
LABEL_9:
      return sub_2225C3A6C(v9, v7, v8, 0);
    }
LABEL_8:
    uint64_t v9 = a3;
    uint64_t v8 = 0;
    goto LABEL_9;
  }
  if (v7 <= a2) {
    goto LABEL_8;
  }
  if (a2)
  {
    unsigned int v10 = sub_2225C2A60(a1);
    uint64_t v11 = sub_2225C26A4(8 * v10);
    if (a2 > 0x3F)
    {
      char v15 = a2 & 0x3F;
      unsigned int v16 = a2 >> 6;
      int v17 = sub_2225C2A60(a1);
      if ((a2 & 0x3F) != 0)
      {
        unint64_t v18 = v17 - v16;
        uint64_t v19 = *((void *)a1 + 1);
        uint64_t v20 = (v18 - 1);
        if (v18 == 1)
        {
          uint64_t v20 = 0;
        }
        else
        {
          uint64_t v21 = (v18 - 1);
          uint64_t v22 = (unint64_t *)v11;
          do
          {
            unint64_t v23 = *(void *)(v19 + 8 * v16++);
            *v22++ = (*(void *)(v19 + 8 * v16) << (64 - v15)) | (v23 >> v15);
            --v21;
          }
          while (v21);
        }
        *(void *)(v11 + 8 * v20) = *(void *)(v19 + 8 * (v17 - 1)) >> v15;
        if (v18 < sub_2225C2A60(a1))
        {
          do
            *(void *)(v11 + 8 * v18++) = 0;
          while (v18 < sub_2225C2A60(a1));
        }
      }
      else
      {
        if (v17 != v16)
        {
          unint64_t v24 = 0;
          unint64_t v25 = (unint64_t)a2 >> 6;
          do
          {
            *(void *)(v11 + 8 * v24) = *(void *)(*((void *)a1 + 1) + 8 * (v25 + v24));
            ++v24;
          }
          while (v24 < sub_2225C2A60(a1) - v16);
        }
        unint64_t v26 = sub_2225C2A60(a1) - v16;
        if (v26 < sub_2225C2A60(a1))
        {
          do
            *(void *)(v11 + 8 * v26++) = 0;
          while (v26 < sub_2225C2A60(a1));
        }
      }
    }
    else
    {
      uint64_t v12 = *((void *)a1 + 1);
      int v13 = sub_2225C2A60(a1);
      sub_2225C7D58(v11, v12, v13, a2);
    }
    sub_2225C72BC((uint64_t)v28, v11, *a1);
    uint64_t v27 = sub_2225C5834((uint64_t)v28);
    sub_2225C3B80(a3, v27);
    return sub_2225C2F10(v28);
  }
  else
  {
    return sub_2225C3B80(a3, a1);
  }
}

uint64_t sub_2225C8730@<X0>(unsigned int *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_2225C8484(a2, *a1);

  return sub_2225C58AC(a1, v5, a3);
}

uint64_t sub_2225C8780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v3 = a2;
  if (*(_DWORD *)a1 == a2)
  {
    return sub_2225C3A6C(a3, a2, 0, 0);
  }
  else if (a2)
  {
    unsigned int v7 = sub_2225C2A60((unsigned int *)a1);
    uint64_t v8 = (void *)sub_2225C26A4(8 * v7);
    uint64_t v9 = v8;
    if (v3 > 0x3F)
    {
      uint64_t v15 = v3 >> 6;
      char v16 = v3 & 0x3F;
      if ((v3 & 0x3F) != 0)
      {
        int v17 = sub_2225C2A60((unsigned int *)a1);
        unsigned int v18 = v17 - 1;
        uint64_t v19 = *(void **)(a1 + 8);
        if (v17 - 1 > v15)
        {
          int v20 = v17 - v15 - 2;
          uint64_t v21 = &v9[v18];
          do
          {
            *v21-- = (v19[v20] >> (64 - v16)) | (v19[v20 + 1] << v16);
            --v20;
            --v18;
          }
          while (v15 < v18);
        }
        v9[v15] = *v19 << v16;
        if (v15 <= 1) {
          int v22 = 1;
        }
        else {
          int v22 = v3 >> 6;
        }
        bzero(v9, (8 * v22));
      }
      else
      {
        bzero(v8, (v3 >> 3) & 0x1FFFFFF8);
        if (v15 < sub_2225C2A60((unsigned int *)a1))
        {
          uint64_t v23 = 0;
          do
          {
            v9[v15 + v23] = *(void *)(*(void *)(a1 + 8) + 8 * v23);
            ++v23;
          }
          while (v15 + v23 < (unint64_t)sub_2225C2A60((unsigned int *)a1));
        }
      }
    }
    else if (sub_2225C2A60((unsigned int *)a1))
    {
      unint64_t v10 = 0;
      uint64_t v11 = 0;
      char v12 = v3;
      char v13 = 64 - v3;
      do
      {
        uint64_t v14 = *(void *)(a1 + 8);
        v9[v10] = (*(void *)(v14 + 8 * v10) << v12) | v11;
        uint64_t v11 = *(void *)(v14 + 8 * v10++) >> v13;
      }
      while (v10 < sub_2225C2A60((unsigned int *)a1));
    }
    sub_2225C72BC((uint64_t)v25, (uint64_t)v9, *(_DWORD *)a1);
    uint64_t v24 = sub_2225C5834((uint64_t)v25);
    sub_2225C3B80(a3, v24);
    return sub_2225C2F10(v25);
  }
  else
  {
    return sub_2225C3B80(a3, a1);
  }
}

uint64_t sub_2225C89B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    uint64_t v6 = sub_2225C3B40((unsigned int *)a1);
    uint64_t v7 = *(void *)(a2 + 8) | *(void *)(a1 + 8);
    return sub_2225C3A6C(a3, v6, v7, 0);
  }
  else
  {
    return sub_2225C72C0(a1, a2, a3);
  }
}

uint64_t sub_2225C8A4C(uint64_t a1, uint64_t a2)
{
  if (sub_2225C7750(a1, a2)) {
    return 1;
  }

  return sub_2225CAC30(a1, a2);
}

uint64_t sub_2225C8AA0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754(a1))
  {
    uint64_t v6 = *a1;
    unint64_t v7 = *((void *)a1 + 1);
    unint64_t v8 = *(void *)(a2 + 8);
  }
  else
  {
    int v11 = sub_2225C5C28((int *)a2);
    if (v11) {
      uint64_t v12 = sub_2225C5A20(v11 - 1) + 1;
    }
    else {
      uint64_t v12 = 0;
    }
    int v13 = sub_2225C5C28((int *)a1);
    if (!v13
      || (int v14 = sub_2225C5A20(v13 - 1), v15 = v14 + 1, v14 == -1)
      || v15 < v12
      || (int v16 = v14, sub_2225C7750((uint64_t)a1, a2)))
    {
      uint64_t v6 = *a1;
      uint64_t v10 = a3;
      uint64_t v9 = 0;
      goto LABEL_12;
    }
    if (sub_2225C900C((uint64_t)a1, a2))
    {
      uint64_t v6 = *a1;
      uint64_t v10 = a3;
      uint64_t v9 = 1;
      goto LABEL_12;
    }
    if (v16 || v12 != 1)
    {
      sub_2225C3A6C(a3, 1, 0, 0);
      sub_2225C3B80(v18, a1);
      sub_2225C906C((uint64_t)v18, v15, a2, v12, a3, 0);
      return sub_2225C2F10(v18);
    }
    uint64_t v6 = *a1;
    unint64_t v7 = **((void **)a1 + 1);
    unint64_t v8 = **(void **)(a2 + 8);
  }
  uint64_t v9 = v7 / v8;
  uint64_t v10 = a3;
LABEL_12:

  return sub_2225C3A6C(v10, v6, v9, 0);
}

uint64_t sub_2225C8C18@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225C3A6C(v6, *a1, a2, 0);
  sub_2225C7498(a1, (uint64_t)v6, a3);
  return sub_2225C2F10(v6);
}

uint64_t sub_2225C8C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = sub_2225C5C28((int *)a1);
  if (v8) {
    unsigned int v9 = sub_2225C5A20(v8 - 1) + 1;
  }
  else {
    unsigned int v9 = 0;
  }
  int v10 = sub_2225C5C28((int *)a2);
  if (!v10)
  {
    uint64_t v11 = 0;
    if (v9) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v13 = a3;
    uint64_t v14 = 0;
LABEL_11:
    sub_2225C6D38(v13, v14);
    uint64_t v12 = a4;
    goto LABEL_12;
  }
  uint64_t v11 = sub_2225C5A20(v10 - 1) + 1;
  if (!v9) {
    goto LABEL_10;
  }
LABEL_6:
  if (v9 < v11 || sub_2225C7750(a1, a2))
  {
    sub_2225C7E1C(a4, a1);
    uint64_t v12 = a3;
LABEL_12:
    return sub_2225C6D38(v12, 0);
  }
  if (sub_2225C900C(a1, a2))
  {
    uint64_t v13 = a3;
    uint64_t v14 = 1;
    goto LABEL_11;
  }
  if (v9 == 1 && v11 == 1)
  {
    BOOL v16 = sub_2225C5754((_DWORD *)a1);
    int v17 = (unint64_t *)(a1 + 8);
    if (!v16) {
      int v17 = *(unint64_t **)(a1 + 8);
    }
    unint64_t v18 = *v17;
    BOOL v19 = sub_2225C5754((_DWORD *)a2);
    int v22 = *(unint64_t **)(a2 + 8);
    uint64_t v21 = (unint64_t *)(a2 + 8);
    int v20 = v22;
    if (v19) {
      int v20 = v21;
    }
    unint64_t v23 = *v20;
    uint64_t v24 = sub_2225C3B40((unsigned int *)a1);
    sub_2225C3A6C(v28, v24, v18 / v23, 0);
    sub_2225C3BE8(a3, v28);
    sub_2225C2F10(v28);
    uint64_t v25 = sub_2225C3B40((unsigned int *)a1);
    sub_2225C3A6C(v28, v25, v18 % v23, 0);
    sub_2225C3BE8(a4, v28);
    unint64_t v26 = v28;
  }
  else
  {
    sub_2225C3B80(v27, a1);
    sub_2225C906C((uint64_t)v27, v9, a2, v11, a3, a4);
    unint64_t v26 = (int *)v27;
  }
  return sub_2225C2F10(v26);
}

uint64_t sub_2225C8E50@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754(a1))
  {
    uint64_t v6 = *a1;
    unint64_t v7 = *((void *)a1 + 1);
    unint64_t v8 = *(void *)(a2 + 8);
LABEL_3:
    unint64_t v9 = v7 % v8;
    uint64_t v10 = a3;
LABEL_18:
    return sub_2225C3A6C(v10, v6, v9, 0);
  }
  int v11 = sub_2225C5C28((int *)a1);
  if (v11) {
    unsigned int v12 = sub_2225C5A20(v11 - 1) + 1;
  }
  else {
    unsigned int v12 = 0;
  }
  int v13 = sub_2225C5C28((int *)a2);
  if (v13)
  {
    uint64_t v14 = sub_2225C5A20(v13 - 1) + 1;
    if (!v12) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v14 = 0;
    if (!v12) {
      goto LABEL_17;
    }
  }
  if (v12 >= v14 && !sub_2225C7750((uint64_t)a1, a2))
  {
    if (!sub_2225C900C((uint64_t)a1, a2))
    {
      if (v12 != 1)
      {
        sub_2225C3A6C(a3, 1, 0, 0);
        sub_2225C3B80(v16, a1);
        sub_2225C906C((uint64_t)v16, v12, a2, v14, 0, a3);
        return sub_2225C2F10(v16);
      }
      uint64_t v6 = *a1;
      unint64_t v7 = **((void **)a1 + 1);
      unint64_t v8 = **(void **)(a2 + 8);
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v6 = *a1;
    uint64_t v10 = a3;
    unint64_t v9 = 0;
    goto LABEL_18;
  }

  return sub_2225C3B80(a3, a1);
}

uint64_t sub_2225C8FF0(uint64_t a1, uint64_t a2)
{
  return sub_2225C7750(a1, a2) ^ 1;
}

uint64_t sub_2225C900C(uint64_t a1, uint64_t a2)
{
  if (sub_2225C5754((_DWORD *)a1)) {
    return *(void *)(a1 + 8) == *(void *)(a2 + 8);
  }

  return sub_2225C7658(a1, a2);
}

void sub_2225C906C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  uint64_t v10 = (2 * a4);
  uint64_t v11 = 2 * a2;
  uint64_t v65 = a4;
  if (a6) {
    int v12 = 4;
  }
  else {
    int v12 = 3;
  }
  int v59 = v11 - 2 * a4;
  unsigned int v13 = (v12 * v10 + 2 * v59) | 1;
  uint64_t v14 = (2 * a2) | 1;
  size_t v15 = 4 * v14;
  if (v13 > 0x80)
  {
    int v20 = (_DWORD *)sub_2225C26A4(4 * v14);
    BOOL v16 = (unsigned int *)sub_2225C26A4(4 * v10);
    v62 = (uint64_t *)sub_2225C26A4(4 * v11);
    if (a6) {
      v61 = (_DWORD *)sub_2225C26A4(4 * v10);
    }
    else {
      v61 = 0;
    }
  }
  else
  {
    BOOL v16 = &v66[v14];
    int v17 = v10 + v14;
    unint64_t v18 = (uint64_t *)&v66[v17];
    BOOL v19 = &v66[(v17 + v11)];
    int v20 = v66;
    if (!a6) {
      BOOL v19 = 0;
    }
    v61 = v19;
    v62 = v18;
  }
  uint64_t v63 = a6;
  bzero(v20, v15);
  unsigned int v64 = a2;
  if (a2)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 8 * a2;
    unsigned int v23 = 1;
    do
    {
      int v24 = sub_2225C2A60((unsigned int *)a1);
      uint64_t v25 = (uint64_t *)(a1 + 8);
      if (v24 != 1) {
        uint64_t v25 = (uint64_t *)(*(void *)(a1 + 8) + v21);
      }
      uint64_t v26 = *v25;
      v20[v23 - 1] = v26;
      v20[v23] = HIDWORD(v26);
      v21 += 8;
      v23 += 2;
    }
    while (v22 != v21);
  }
  v20[v11] = 0;
  bzero(v16, 4 * v10);
  if (v65)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 8 * v65;
    unsigned int v29 = 1;
    do
    {
      int v30 = sub_2225C2A60((unsigned int *)a3);
      v31 = (uint64_t *)(*(void *)(a3 + 8) + v27);
      if (v30 == 1) {
        v31 = (uint64_t *)(a3 + 8);
      }
      uint64_t v32 = *v31;
      v16[v29 - 1] = v32;
      v16[v29] = HIDWORD(v32);
      v27 += 8;
      v29 += 2;
    }
    while (v28 != v27);
  }
  bzero(v62, 4 * v11);
  if (v63) {
    bzero(v61, 4 * v10);
  }
  if (v10)
  {
    while (!v16[v10 - 1])
    {
      if (!--v10) {
        goto LABEL_29;
      }
    }
    LODWORD(v11) = v11 - v10;
  }
  else
  {
    LODWORD(v11) = v59;
  }
LABEL_29:
  if (v11 + v10)
  {
    uint64_t v33 = (v11 + v10);
    while (!v20[v33 - 1])
    {
      LODWORD(v11) = v11 - 1;
      if (!(--v33 * 4))
      {
        LODWORD(v11) = -(int)v10;
        break;
      }
    }
  }
  if (v10 == 1)
  {
    uint64_t v34 = 0;
    if ((v11 & 0x80000000) == 0)
    {
      unint64_t v35 = *v16;
      uint64_t v36 = v11;
      unsigned int v37 = v65;
      uint64_t v38 = a5;
      while (1)
      {
        uint64_t v39 = v34;
        uint64_t v34 = v20[v36];
        unint64_t v40 = v34 | (v39 << 32);
        if (v40)
        {
          if (v40 >= v35)
          {
            if (v40 == v35)
            {
              uint64_t v34 = 0;
              *((_DWORD *)v62 + v36) = 1;
            }
            else
            {
              unint64_t v42 = v40 / v35;
              *((_DWORD *)v62 + v36) = v42;
              uint64_t v34 = (v34 - v35 * v42);
            }
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v34 = 0;
        }
        *((_DWORD *)v62 + v36) = 0;
LABEL_44:
        if (v36-- <= 0) {
          goto LABEL_49;
        }
      }
    }
    unsigned int v37 = v65;
    uint64_t v38 = a5;
LABEL_49:
    if (v61) {
      _DWORD *v61 = v34;
    }
  }
  else
  {
    sub_2225C955C(v20, (int *)v16, (uint64_t)v62, (uint64_t)v61, v11, v10);
    unsigned int v37 = v65;
    uint64_t v38 = a5;
  }
  if (v38)
  {
    if (*(_DWORD *)v38 == *(_DWORD *)a1)
    {
      sub_2225C70AC(v38);
    }
    else
    {
      if (sub_2225C5754((_DWORD *)v38))
      {
        *(void *)(v38 + 8) = 0;
      }
      else
      {
        int v43 = *(void **)(v38 + 8);
        if (v43) {
          j__free(v43);
        }
      }
      *(_DWORD *)uint64_t v38 = *(_DWORD *)a1;
      if (!sub_2225C5754((_DWORD *)v38))
      {
        unsigned int v44 = sub_2225C2A60((unsigned int *)v38);
        sub_2225C6A68(v44);
        *(void *)(v38 + 8) = v45;
      }
    }
    if (v64 == 1)
    {
      uint64_t v46 = *v62;
      BOOL v47 = sub_2225C5754((_DWORD *)v38);
      v48 = (void *)(v38 + 8);
      if (!v47) {
        v48 = (void *)*v48;
      }
      void *v48 = v46;
    }
    else if (v64)
    {
      uint64_t v49 = 0;
      unsigned int v50 = 1;
      do
      {
        *(void *)(*(void *)(v38 + 8) + v49) = *((unsigned int *)v62 + v50 - 1) | ((unint64_t)*((unsigned int *)v62 + v50) << 32);
        v49 += 8;
        v50 += 2;
      }
      while (8 * v64 != v49);
    }
  }
  if (v63)
  {
    if (*(_DWORD *)v63 == *(_DWORD *)a3)
    {
      sub_2225C70AC(v63);
    }
    else
    {
      if (sub_2225C5754((_DWORD *)v63))
      {
        *(void *)(v63 + 8) = 0;
      }
      else
      {
        v51 = *(void **)(v63 + 8);
        if (v51) {
          j__free(v51);
        }
      }
      *(_DWORD *)uint64_t v63 = *(_DWORD *)a3;
      if (!sub_2225C5754((_DWORD *)v63))
      {
        unsigned int v52 = sub_2225C2A60((unsigned int *)v63);
        sub_2225C6A68(v52);
        *(void *)(v63 + 8) = v53;
      }
    }
    if (v37 == 1)
    {
      uint64_t v54 = *(void *)v61;
      BOOL v55 = sub_2225C5754((_DWORD *)v63);
      v56 = (void *)(v63 + 8);
      if (!v55) {
        v56 = (void *)*v56;
      }
      void *v56 = v54;
    }
    else if (v37)
    {
      uint64_t v57 = 0;
      unsigned int v58 = 1;
      do
      {
        *(void *)(*(void *)(v63 + 8) + v57) = v61[v58 - 1] | ((unint64_t)v61[v58] << 32);
        v57 += 8;
        v58 += 2;
      }
      while (8 * v37 != v57);
    }
  }
  if (v20 != v66)
  {
    j__free(v20);
    j__free(v16);
    j__free(v62);
    if (v61) {
      j__free(v61);
    }
  }
}

uint64_t sub_2225C955C(int *a1, int *a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  unsigned int v6 = a6;
  uint64_t v12 = a6 - 1;
  int v13 = sub_2225CAC60(a2[v12], 2);
  unint64_t v14 = v6 + a5;
  int v58 = v13;
  uint64_t v59 = a4;
  if (v13)
  {
    if (v14)
    {
      unsigned int v15 = 0;
      uint64_t v16 = v6 + a5;
      int v17 = a1;
      do
      {
        unsigned int v18 = *v17 >> (32 - v13);
        *int v17 = (*v17 << v13) | v15;
        ++v17;
        unsigned int v15 = v18;
        --v16;
      }
      while (v16);
      if (!v6) {
        goto LABEL_11;
      }
      goto LABEL_9;
    }
    unsigned int v18 = 0;
    if (v6)
    {
LABEL_9:
      unsigned int v19 = 0;
      uint64_t v20 = v6;
      uint64_t v21 = a2;
      do
      {
        unsigned int v22 = *v21 >> (32 - v13);
        int *v21 = (*v21 << v13) | v19;
        ++v21;
        unsigned int v19 = v22;
        --v20;
      }
      while (v20);
    }
  }
  else
  {
    unsigned int v18 = 0;
  }
LABEL_11:
  a1[v14] = v18;
  uint64_t v23 = v6 - 2;
  uint64_t v24 = a5;
  LODWORD(result) = a5 + 3;
  uint64_t v26 = v6;
  uint64_t v63 = v12;
  unsigned int v62 = v6;
  uint64_t v60 = v23;
  uint64_t v61 = a3;
  do
  {
    int v27 = v24 + v6;
    unint64_t v28 = a1[v27 - 1] | ((unint64_t)a1[v27] << 32);
    unint64_t v29 = a2[v12];
    unint64_t v30 = v28 / v29;
    unint64_t v31 = v28 % v29;
    if (v28 / v29 == 0x100000000
      || (unint64_t v32 = v28 / v29, v30 * a2[v23] > (a1[v27 - 2] | (v31 << 32))))
    {
      unint64_t v32 = v30 - 1;
      unint64_t v33 = v31 + v29;
      if (!HIDWORD(v33)
        && (v30 == 0x100000001 || v32 * a2[v23] > (a1[v27 - 2] | (v33 << 32))))
      {
        unint64_t v32 = v30 - 2;
      }
    }
    if (!v6) {
      goto LABEL_44;
    }
    uint64_t v34 = 0;
    char v35 = 0;
    unsigned int v36 = result;
    do
    {
      int v37 = v34 + v24 + 1;
      unint64_t v38 = a1[(v34 + v24)] | ((unint64_t)a1[v37] << 32);
      unint64_t v39 = v32 * a2[v34];
      BOOL v40 = v38 >= v39;
      unint64_t v41 = v38 - v39;
      a1[(v34 + v24)] = v41;
      BOOL v42 = !v40;
      a1[v37] = HIDWORD(v41);
      BOOL v43 = v40 || (int)v34 + (int)v24 + 2 > v14;
      if (!v43)
      {
        unsigned int v44 = v36;
        do
        {
          int v45 = a1[v44 - 1];
          BOOL v42 = v45 == 0;
          a1[v44 - 1] = v45 - 1;
          if (v45) {
            BOOL v46 = 1;
          }
          else {
            BOOL v46 = v44 > v14;
          }
          ++v44;
        }
        while (!v46);
      }
      v35 |= v42;
      ++v34;
      ++v36;
    }
    while (v34 != v26);
    if (v35)
    {
      unint64_t v47 = 0;
      char v48 = 1;
      do
      {
        int v49 = ~a1[v47] + (v48 & 1);
        a1[v47] = v49;
        v48 &= v49 == 0;
        BOOL v40 = v47++ >= v14;
      }
      while (!v40);
      *(_DWORD *)(a3 + 4 * v24) = v32 - 1;
      int v65 = result;
      uint64_t v64 = v24 + v6;
      LOBYTE(a3) = 0;
      uint64_t v50 = v26;
      v51 = a2;
      int v52 = v24;
      do
      {
        uint64_t v53 = &a1[v52];
        unsigned int v54 = *(_DWORD *)sub_2225C2A9C(v53, v51);
        int v55 = *v51++;
        unsigned int v56 = v55 + (a3 & 1) + *v53;
        *uint64_t v53 = v56;
        if (v56 >= v54) {
          LODWORD(a3) = a3 & (v56 == v54);
        }
        else {
          LODWORD(a3) = 1;
        }
        ++v52;
        --v50;
      }
      while (v50);
      uint64_t v12 = v63;
      a1[v64] += a3;
      unsigned int v6 = v62;
      uint64_t v23 = v60;
      a3 = v61;
      LODWORD(result) = v65;
    }
    else
    {
LABEL_44:
      *(_DWORD *)(a3 + 4 * v24) = v32;
    }
    uint64_t result = (result - 1);
    BOOL v43 = v24-- <= 0;
  }
  while (!v43);
  if (v59)
  {
    if (v58)
    {
      if ((v12 & 0x80000000) == 0)
      {
        int v57 = 0;
        do
        {
          *(_DWORD *)(v59 + 4 * v12) = (a1[v12] >> v58) | v57;
          int v57 = a1[v12] << (32 - v58);
          BOOL v43 = v12-- <= 0;
        }
        while (!v43);
      }
    }
    else if ((v12 & 0x80000000) == 0)
    {
      do
      {
        *(_DWORD *)(v59 + 4 * v12) = a1[v12];
        BOOL v43 = v12-- <= 0;
      }
      while (!v43);
    }
  }
  return result;
}

uint64_t sub_2225C98D4@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v6 = sub_2225C3B84(a1);
  BOOL v7 = sub_2225C3B84(a2);
  if (v6)
  {
    if (v7)
    {
      sub_2225C3B90(a1, (uint64_t)v13);
      sub_2225C3B90(a2, (uint64_t)v12);
      sub_2225C8AA0(v13, (uint64_t)v12, a3);
      sub_2225C2F10(v12);
      unint64_t v8 = v13;
      return sub_2225C2F10(v8);
    }
    sub_2225C3B90(a1, (uint64_t)v12);
    uint64_t v10 = (unsigned int *)v12;
    unint64_t v9 = a2;
LABEL_7:
    sub_2225C8AA0(v10, (uint64_t)v9, (uint64_t)v13);
    sub_2225C3B90(v13, a3);
    sub_2225C2F10(v13);
    unint64_t v8 = (unsigned int *)v12;
    return sub_2225C2F10(v8);
  }
  if (v7)
  {
    sub_2225C3B90(a2, (uint64_t)v12);
    unint64_t v9 = (unsigned int *)v12;
    uint64_t v10 = a1;
    goto LABEL_7;
  }

  return sub_2225C8AA0(a1, (uint64_t)a2, a3);
}

uint64_t sub_2225C99E4@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v6 = sub_2225C3B84(a1);
  BOOL v7 = sub_2225C3B84(a2);
  if (v6)
  {
    if (v7)
    {
      sub_2225C3B90(a1, (uint64_t)v12);
      sub_2225C3B90(a2, (uint64_t)v11);
      sub_2225C8E50(v12, (uint64_t)v11, (uint64_t)v13);
      sub_2225C3B90(v13, a3);
      sub_2225C2F10(v13);
      unint64_t v8 = (unsigned int *)v11;
    }
    else
    {
      sub_2225C3B90(a1, (uint64_t)v12);
      sub_2225C8E50(v12, (uint64_t)a2, (uint64_t)v13);
      sub_2225C3B90(v13, a3);
      unint64_t v8 = v13;
    }
    sub_2225C2F10(v8);
    unint64_t v9 = v12;
    return sub_2225C2F10(v9);
  }
  if (v7)
  {
    sub_2225C3B90(a2, (uint64_t)v13);
    sub_2225C8E50(a1, (uint64_t)v13, a3);
    unint64_t v9 = v13;
    return sub_2225C2F10(v9);
  }

  return sub_2225C8E50(a1, (uint64_t)a2, a3);
}

BOOL sub_2225C9B04@<W0>(unsigned int *a1@<X0>, _DWORD *a2@<X1>, BOOL *a3@<X2>, _DWORD *a4@<X8>)
{
  sub_2225C7498(a1, (uint64_t)a2, (uint64_t)a4);
  BOOL v8 = sub_2225C9B84(a1);
  BOOL result = sub_2225C9B84(a2);
  if (v8 == result)
  {
    BOOL v11 = sub_2225C9B84(a4);
    BOOL result = sub_2225C9B84(a1);
    BOOL v10 = v11 ^ result;
  }
  else
  {
    BOOL v10 = 0;
  }
  *a3 = v10;
  return result;
}

BOOL sub_2225C9B84(_DWORD *a1)
{
  return !sub_2225C3B84(a1);
}

BOOL sub_2225C9BA0@<W0>(unsigned int *a1@<X0>, _DWORD *a2@<X1>, BOOL *a3@<X2>, _DWORD *a4@<X8>)
{
  sub_2225C7578(a1, (uint64_t)a2, (uint64_t)a4);
  BOOL v8 = sub_2225C9B84(a1);
  BOOL result = sub_2225C9B84(a2);
  if (v8 == result)
  {
    BOOL v11 = 0;
  }
  else
  {
    BOOL v10 = sub_2225C9B84(a4);
    BOOL result = sub_2225C9B84(a1);
    BOOL v11 = v10 ^ result;
  }
  *a3 = v11;
  return result;
}

uint64_t sub_2225C9C20@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v8 = sub_2225C9C84((uint64_t)a1);
  if (v8) {
    LOBYTE(v8) = sub_2225C9CEC((uint64_t)a2);
  }
  *a3 = v8;

  return sub_2225C98D4(a1, a2, a4);
}

BOOL sub_2225C9C84(uint64_t a1)
{
  if (*(_DWORD *)a1 == 1) {
    return *(void *)(a1 + 8) == 1;
  }
  BOOL result = sub_2225C3B84((_DWORD *)a1);
  if (result)
  {
    return sub_2225CAC78(a1);
  }
  return result;
}

BOOL sub_2225C9CEC(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1)) {
    return *(void *)(a1 + 8) == 0xFFFFFFFFFFFFFFFFLL >> -*(unsigned char *)a1;
  }
  else {
    return sub_2225C7CD8(a1) == *(_DWORD *)a1;
  }
}

uint64_t sub_2225C9D44@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, unsigned char *a3@<X2>, unsigned int *a4@<X8>)
{
  sub_2225C7408(a1, (uint64_t)a2, (uint64_t)a4);
  uint64_t result = sub_2225C54A0((uint64_t)a1, 0);
  if (result && (uint64_t result = sub_2225C54A0((uint64_t)a2, 0), result))
  {
    sub_2225C98D4(a4, a2, (uint64_t)v10);
    if (sub_2225C9E08((uint64_t)v10, (uint64_t)a1))
    {
      *a3 = 1;
    }
    else
    {
      sub_2225C98D4(a4, a1, (uint64_t)v9);
      *a3 = sub_2225C9E08((uint64_t)v9, (uint64_t)a2);
      sub_2225C2F10(v9);
    }
    return sub_2225C2F10(v10);
  }
  else
  {
    *a3 = 0;
  }
  return result;
}

uint64_t sub_2225C9E08(uint64_t a1, uint64_t a2)
{
  return sub_2225C900C(a1, a2) ^ 1;
}

uint64_t sub_2225C9E24@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v8 = sub_2225C3B40(a1);
  int v9 = sub_2225C9EEC(a2, v8);
  *a3 = v9;
  if (v9)
  {
    uint64_t v10 = *a1;
    return sub_2225C3A6C(a4, v10, 0, 0);
  }
  else
  {
    if (sub_2225C9B84(a1)) {
      unsigned int v12 = sub_2225C5C50((uint64_t)a1);
    }
    else {
      unsigned int v12 = sub_2225C7AD4((uint64_t)a1);
    }
    *a3 = sub_2225C9EEC(a2, v12);
    return sub_2225C9F4C(a1, a2);
  }
}

uint64_t sub_2225C9EEC(unsigned int *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3B40(a1);
  sub_2225C3A6C(v7, v4, a2, 0);
  uint64_t v5 = sub_2225C8FF0((uint64_t)a1, (uint64_t)v7);
  sub_2225C2F10(v7);
  return v5;
}

uint64_t sub_2225C9F50@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v8 = sub_2225C3B40(a1);
  int v9 = sub_2225C9EEC(a2, v8);
  *a3 = v9;
  if (v9)
  {
    uint64_t v10 = *a1;
    return sub_2225C3A6C(a4, v10, 0, 0);
  }
  else
  {
    unsigned int v12 = sub_2225C5C50((uint64_t)a1);
    *a3 = sub_2225CA000(a2, v12);
    return sub_2225C9F4C(a1, a2);
  }
}

uint64_t sub_2225CA000(unsigned int *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3B40(a1);
  sub_2225C3A6C(v7, v4, a2, 0);
  uint64_t v5 = sub_2225C79D8((uint64_t)a1, (uint64_t)v7);
  sub_2225C2F10(v7);
  return v5;
}

uint64_t sub_2225CA060(_DWORD *a1, const void **a2, unsigned int a3, int a4, int a5)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  if (a5)
  {
    HIDWORD(v9) = a3;
    LODWORD(v9) = a3 - 2;
    uint64_t v10 = off_264613168[(int)(v9 >> 1)];
  }
  else
  {
    uint64_t v10 = &byte_2226D1615;
  }
  if (sub_2225C5CC8((uint64_t)a1, 0))
  {
    if (*v10)
    {
      do
        sub_2225C52D8((uint64_t)a2, v10);
      while (*++v10);
    }
    LOBYTE(v33[0]) = 48;
    return sub_2225C52D8((uint64_t)a2, v33);
  }
  if (!sub_2225C5754(a1))
  {
    sub_2225C3B80(v33, a1);
    if (a4 && sub_2225C3B84(a1))
    {
      sub_2225C7958((uint64_t)v33);
      sub_2225C6DA8((uint64_t)v33);
      LOBYTE(v32[0]) = 45;
      sub_2225C52D8((uint64_t)a2, v32);
    }
    if (*v10)
    {
      do
        sub_2225C52D8((uint64_t)a2, v10);
      while (*++v10);
    }
    unsigned int v15 = sub_2225C5664((uint64_t)a2);
    if (a3 != 2)
    {
      if (a3 == 16)
      {
        unsigned int v16 = 4;
        goto LABEL_31;
      }
      if (a3 != 8)
      {
        if (a3 == 10) {
          uint64_t v22 = 4;
        }
        else {
          uint64_t v22 = 8;
        }
        sub_2225C3A6C(v32, v22, a3, 0);
        while (sub_2225C54A0((uint64_t)v33, 0))
        {
          sub_2225C3A6C(v31, 1, 0, 0);
          uint64_t v23 = sub_2225C3B40(v33);
          sub_2225C3A6C(v30, v23, 0, 0);
          sub_2225C3B80(v29, v33);
          unsigned int v24 = sub_2225C2A60(v33);
          unint64_t v25 = sub_2225C2A60(v32);
          sub_2225C906C((uint64_t)v29, v24, (uint64_t)v32, v25, (uint64_t)v30, (uint64_t)v31);
          sub_2225C2F10(v29);
          int v26 = sub_2225C54BC(v31);
          sub_2225C52D8((uint64_t)a2, &a0123456789abcd_0[v26]);
          sub_2225C7E1C((uint64_t)v33, (uint64_t)v30);
          sub_2225C2F10(v30);
          sub_2225C2F10(v31);
        }
        sub_2225C2F10(v32);
        goto LABEL_41;
      }
    }
    if (a3 == 8) {
      unsigned int v16 = 3;
    }
    else {
      unsigned int v16 = 1;
    }
LABEL_31:
    if (sub_2225C54A0((uint64_t)v33, 0))
    {
      unsigned int v20 = a3 - 1;
      do
      {
        uint64_t v21 = sub_2225C2A68(v33);
        sub_2225C52D8((uint64_t)a2, &a0123456789abcd_0[v20 & *v21]);
        sub_2225C84E8(v33, v16, (uint64_t)v32);
        sub_2225C3BE8((uint64_t)v33, (int *)v32);
        sub_2225C2F10(v32);
      }
      while (sub_2225C54A0((uint64_t)v33, 0));
    }
LABEL_41:
    uint64_t v27 = sub_2225C3C70((uint64_t)a2) + v15;
    uint64_t v28 = sub_2225C3D04((uint64_t)a2);
    sub_2225CA44C(v27, v28);
    return sub_2225C2F10(v33);
  }
  if (a4)
  {
    unint64_t v13 = sub_2225CA404((uint64_t)a1);
    if ((v13 & 0x8000000000000000) != 0)
    {
      LOBYTE(v32[0]) = 45;
      sub_2225C52D8((uint64_t)a2, v32);
      unint64_t v13 = -(uint64_t)v13;
    }
  }
  else
  {
    unint64_t v13 = sub_2225C54BC(a1);
  }
  if (*v10)
  {
    do
      sub_2225C52D8((uint64_t)a2, v10);
    while (*++v10);
  }
  unsigned int v18 = v34;
  if (v13)
  {
    unsigned int v18 = v34;
    do
    {
      *--unsigned int v18 = a0123456789abcd_0[v13 % a3];
      BOOL v19 = v13 >= a3;
      v13 /= a3;
    }
    while (v19);
  }
  return sub_2225C5A88(a2, v18, v34);
}

uint64_t sub_2225CA404(uint64_t a1)
{
  if (sub_2225C5754((_DWORD *)a1)) {
    return (uint64_t)(*(void *)(a1 + 8) << -*(unsigned char *)a1) >> -*(unsigned char *)a1;
  }
  else {
    return **(void **)(a1 + 8);
  }
}

uint64_t sub_2225CA450@<X0>(_DWORD *a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  sub_2225CA4CC(v11);
  sub_2225CA060(a1, v11, a2, a3, 0);
  v10[0] = sub_2225CA4D0((uint64_t)v11);
  v10[1] = v8;
  sub_2225CA51C(v10, a4);
  return sub_2225CA520(v11);
}

uint64_t sub_2225CA4D0(uint64_t a1)
{
  uint64_t v2 = sub_2225C3C70(a1);
  uint64_t v3 = sub_2225C5664(a1);
  sub_2225C3D0C(&v5, v2, v3);
  return v5;
}

void **sub_2225CA524(uint64_t a1, char *a2)
{
  sub_2225C3D00((int)v4, a2);
  return sub_2225CA568(a1, v4[0], v4[1]);
}

void **sub_2225CA560(void **a1, unsigned int a2)
{
  return sub_2225E7BAC(a1, a2);
}

void **sub_2225CA568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  size_t v4 = sub_2225C3D04((uint64_t)v9);
  uint64_t v5 = *(void **)(a1 + 24);
  size_t v6 = *(void *)(a1 + 16) - (void)v5;
  BOOL v7 = (unsigned char *)sub_2225C3C70((uint64_t)v9);
  if (v4 > v6) {
    return sub_2225E7C80((void **)a1, v7, v4);
  }
  memcpy(v5, v7, v4);
  *(void *)(a1 + 24) += v4;
  return (void **)a1;
}

uint64_t sub_2225CA5F4(_DWORD *a1, uint64_t a2, int a3)
{
  sub_2225CA4CC(v9);
  sub_2225CA060(a1, v9, 0xAu, a3, 0);
  uint64_t v6 = sub_2225CA4D0((uint64_t)v9);
  sub_2225CA568(a2, v6, v7);
  return sub_2225CA520(v9);
}

void sub_2225CA674(void *a1, uint64_t a2, unsigned int a3)
{
  *a1 = a2;
  if (a3 >= 2) {
    bzero(a1 + 1, 8 * (a3 - 2) + 8);
  }
}

void *sub_2225CA694(void *result, uint64_t *a2, unsigned int a3)
{
  if (a3)
  {
    uint64_t v3 = a3;
    do
    {
      uint64_t v4 = *a2++;
      *result++ = v4;
      --v3;
    }
    while (v3);
  }
  return result;
}

BOOL sub_2225CA6B0(void *a1, unsigned int a2)
{
  if (!a2) {
    return 1;
  }
  if (*a1) {
    return 0;
  }
  uint64_t v3 = 1;
  do
  {
    unint64_t v4 = v3;
    if (a2 == v3) {
      break;
    }
  }
  while (!a1[v3++]);
  return v4 >= a2;
}

uint64_t sub_2225CA6F8(uint64_t a1, unsigned int a2)
{
  return (*(void *)(a1 + 8 * (a2 >> 6)) >> a2) & 1;
}

uint64_t sub_2225CA70C(uint64_t result, unsigned int a2)
{
  *(void *)(result + 8 * (a2 >> 6)) |= 1 << a2;
  return result;
}

uint64_t sub_2225CA728(uint64_t result, unsigned int a2)
{
  *(void *)(result + 8 * (a2 >> 6)) &= ~(1 << a2);
  return result;
}

uint64_t sub_2225CA744(unint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v2 = 0;
  while (1)
  {
    unint64_t v4 = *a1++;
    unint64_t v3 = v4;
    if (v4) {
      break;
    }
    v2 -= 64;
    if (!(((unint64_t)a2 << 6) + v2)) {
      return 0xFFFFFFFFLL;
    }
  }
  return sub_2225CA7A0(v3) - v2;
}

uint64_t sub_2225CA7A0(unint64_t a1)
{
  return sub_2225CAE04(a1, 1);
}

uint64_t sub_2225CA7BC(uint64_t a1, int a2)
{
  int v2 = 64 - (a2 << 6);
  unsigned int v3 = a2 - 1;
  while (!*(void *)(a1 + 8 * v3))
  {
    v2 += 64;
    if (--v3 == -1) {
      return 0xFFFFFFFFLL;
    }
  }
  return sub_2225CA810(*(void *)(a1 + 8 * v3)) - v2;
}

uint64_t sub_2225CA810(unint64_t a1)
{
  return sub_2225CAE28(a1, 1);
}

unint64_t *sub_2225CA82C(unint64_t *result, unsigned int a2, unsigned int a3)
{
  if (a3 && a2)
  {
    unsigned int v3 = a3 >> 6;
    uint64_t v4 = a2;
    uint64_t v5 = result;
    do
    {
      if (v3 >= a2)
      {
        unint64_t v6 = 0;
      }
      else
      {
        unint64_t v6 = result[v3];
        if ((a3 & 0x3F) != 0)
        {
          v6 >>= a3 & 0x3F;
          if (v3 + 1 < a2) {
            v6 |= result[v3 + 1] << (64 - (a3 & 0x3F));
          }
        }
      }
      *v5++ = v6;
      ++v3;
      --v4;
    }
    while (v4);
  }
  return result;
}

BOOL sub_2225CA894(unint64_t *a1, uint64_t *a2, BOOL a3, unsigned int a4)
{
  if (a4)
  {
    uint64_t v4 = a4;
    do
    {
      unint64_t v5 = *a1;
      uint64_t v7 = *a2++;
      uint64_t v6 = v7;
      unint64_t v8 = v7 + *a1;
      BOOL v9 = __CFADD__(v7, *a1);
      uint64_t v10 = v5 + v6;
      BOOL v11 = v10 + 1 <= v5;
      if (a3) {
        unint64_t v12 = v10 + 1;
      }
      else {
        unint64_t v12 = v8;
      }
      if (a3) {
        a3 = v11;
      }
      else {
        a3 = v9;
      }
      *a1++ = v12;
      --v4;
    }
    while (v4);
  }
  return a3;
}

uint64_t sub_2225CA8DC(unint64_t *a1, unint64_t *a2, uint64_t a3, unsigned int a4)
{
  if (a4)
  {
    uint64_t v4 = a4;
    do
    {
      unint64_t v5 = *a2++;
      unint64_t v6 = *a1 - v5;
      BOOL v7 = *a1 < v5;
      unint64_t v8 = *a1 + ~v5;
      if (a3)
      {
        a3 = v8 >= *a1;
      }
      else
      {
        unint64_t v8 = v6;
        a3 = v7;
      }
      *a1++ = v8;
      --v4;
    }
    while (v4);
  }
  return a3;
}

BOOL sub_2225CA924(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(a1 + 8 * v2);
      *(void *)(a1 + 8 * v2) = v3 + 1;
      if (v3 != -1) {
        break;
      }
      if (a2 == ++v2)
      {
        LODWORD(v2) = a2;
        return v2 == a2;
      }
    }
  }
  else
  {
    LODWORD(v2) = 0;
  }
  return v2 == a2;
}

void sub_2225CA964(void *a1, unsigned int a2, unsigned int a3)
{
  if (a3)
  {
    unsigned int v3 = a3 >> 6;
    if (a3 >> 6 < a2)
    {
      unsigned int v4 = a2 - 1;
      unint64_t v5 = &a1[a2 - 1];
      do
      {
        uint64_t v6 = a1[v4 - v3];
        if ((a3 & 0x3F) != 0)
        {
          v6 <<= a3 & 0x3F;
          if (v3 < v4) {
            v6 |= a1[v4 - v3 - 1] >> (64 - (a3 & 0x3F));
          }
        }
        *v5-- = v6;
        unsigned int v7 = v4 - 1;
      }
      while (v3 < v4--);
      a2 = v7 + 1;
    }
    if (a2) {
      bzero(a1, 8 * a2);
    }
  }
}

uint64_t sub_2225CA9E0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3 = 8 * a3;
  do
  {
    if (!v3) {
      return 0;
    }
    unint64_t v4 = *(void *)(a1 - 8 + v3);
    unint64_t v5 = *(void *)(a2 - 8 + v3);
    v3 -= 8;
  }
  while (v4 == v5);
  if (v4 > v5) {
    return 1;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

void sub_2225CAA18(char *__b, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3;
  unsigned int v6 = a3 - 65;
  if (a3 < 0x41)
  {
    LODWORD(v9) = 0;
    if (!a3) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unsigned int v7 = v6 >> 6;
  memset(__b, 255, 8 * (v6 >> 6) + 8);
  uint64_t v8 = 0;
  uint64_t v9 = v7 + 1;
  uint64x2_t v10 = (uint64x2_t)vdupq_n_s64(v9 - 1);
  int32x4_t v11 = (int32x4_t)v3;
  v12.i64[0] = 0x3F0000003FLL;
  v12.i64[1] = 0x3F0000003FLL;
  do
  {
    int8x16_t v13 = (int8x16_t)v11;
    int32x4_t v11 = vaddq_s32(v11, v12);
    v8 += 4;
  }
  while (((v7 + 4) & 0x7FFFFFC) != v8);
  int8x16_t v14 = (int8x16_t)vdupq_n_s64(v8 - 4);
  int v15 = vaddvq_s32((int32x4_t)vbslq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_u64((uint64x2_t)vorrq_s8(v14, (int8x16_t)xmmword_2226C9EB0), v10), (int32x4_t)vcgtq_u64((uint64x2_t)vorrq_s8(v14, (int8x16_t)xmmword_2226C9EC0), v10)), v13, (int8x16_t)v11));
  LOBYTE(v3) = v15;
  if (v15)
  {
LABEL_7:
    *(void *)&__b[8 * v9] = 0xFFFFFFFFFFFFFFFFLL >> -(char)v3;
    LODWORD(v9) = v9 + 1;
  }
LABEL_8:
  if (v9 < a2)
  {
    bzero(&__b[8 * v9], 8 * (~v9 + a2) + 8);
  }
}

void *sub_2225CAB3C(void *a1, void *a2)
{
  if (sub_2225CAB7C((uint64_t)&v5, a2, a1)) {
    return a2;
  }
  else {
    return a1;
  }
}

BOOL sub_2225CAB7C(uint64_t a1, void *a2, void *a3)
{
  return *a2 < *a3;
}

unint64_t sub_2225CAB90(unint64_t *a1, unint64_t *a2, unsigned int a3, uint64_t a4)
{
  unint64_t v4 = 0;
  if (a3)
  {
    uint64_t v5 = a3;
    do
    {
      unint64_t v6 = *a2++;
      unsigned int v7 = v6;
      unint64_t v8 = HIDWORD(v6);
      unint64_t v9 = v6 * (unint64_t)a4;
      BOOL v10 = __CFADD__(v9, v4);
      if (__CFADD__(v9, v4)) {
        uint64_t v11 = 0x100000000;
      }
      else {
        uint64_t v11 = 0;
      }
      unint64_t v12 = ((v9 + v4) >> 32) + v8 * (unint64_t)a4 + v11;
      if (v12) {
        BOOL v10 = 0;
      }
      BOOL v13 = __CFADD__(v9, v4);
      unsigned int v14 = v9 + v4;
      unint64_t v15 = v7 * (unint64_t)HIDWORD(a4);
      unint64_t v16 = v12 + v15;
      *a1++ = v14 | ((unint64_t)v16 << 32);
      BOOL v17 = v13 || v12 != 0;
      if (v16) {
        BOOL v17 = 0;
      }
      if (v17 || v10) {
        uint64_t v18 = 0x100000000;
      }
      else {
        uint64_t v18 = 0;
      }
      unint64_t v4 = HIDWORD(v15) + v8 * (unint64_t)HIDWORD(a4) + HIDWORD(v16) + v18;
      --v5;
    }
    while (v5);
  }
  return v4;
}

uint64_t sub_2225CAC24(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)uint64_t result = a3;
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_2225CAC34(unsigned int a1)
{
  return bswap32(a1);
}

uint64_t sub_2225CAC3C(uint64_t result, uint64_t a2)
{
  *(_DWORD *)uint64_t result = *(_DWORD *)a2;
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(_DWORD *)a2 = 0;
  return result;
}

_DWORD *sub_2225CAC54(_DWORD *result)
{
  void *result = 1;
  return result;
}

uint64_t sub_2225CAC60(unsigned int a1, int a2)
{
  if (a2) {
    BOOL v2 = a1 == 0;
  }
  else {
    BOOL v2 = 0;
  }
  uint64_t v3 = __clz(a1);
  if (v2) {
    return 32;
  }
  else {
    return v3;
  }
}

BOOL sub_2225CAC78(uint64_t a1)
{
  if (!sub_2225C5754((_DWORD *)a1)) {
    return sub_2225C7CD8(a1) == 1;
  }
  uint64_t v2 = *(void *)(a1 + 8);

  return sub_2225CACD0(v2);
}

BOOL sub_2225CACD0(uint64_t a1)
{
  return a1 && (a1 & (a1 - 1)) == 0;
}

uint64_t sub_2225CACE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1) {
    return sub_2225CAD08(a2, *a1, a1[1]);
  }
  else {
    return sub_2225CAD04(a2);
  }
}

uint64_t sub_2225CAD0C(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD4C(a1, &v5, &v4);
  nullsub_1(v2, 0);
  return a1;
}

uint64_t sub_2225CAD50(void *a1)
{
  uint8x8_t v1 = sub_2225CAD78(a1);

  return j_j_nullsub_1(v1);
}

void *sub_2225CAD78(void *result)
{
  void *result = 0;
  result[1] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_2225CAD84(uint64_t a1, const std::string::value_type *a2, std::string::size_type a3)
{
  unint64_t v6 = (std::string *)sub_2225CADD8(a1, &v9, &v8);
  std::string::__init(v6, a2, a3);
  return a1;
}

uint64_t sub_2225CADDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = nullsub_1(a1, a2);

  return j_j_nullsub_1(v2);
}

uint64_t sub_2225CAE04(unint64_t a1, int a2)
{
  if (a1 || a2 != 1) {
    return sub_2225C7CBC(a1, 0);
  }
  else {
    return sub_2225CAE1C(0);
  }
}

uint64_t sub_2225CAE20()
{
  return -1;
}

uint64_t sub_2225CAE28(unint64_t a1, int a2)
{
  if (a1 || a2 != 1) {
    return sub_2225C5CB0(a1, 0) ^ 0x3F;
  }
  return sub_2225CAE1C(0);
}

_DWORD *sub_2225CAE64(_DWORD *a1, _DWORD *a2)
{
  if (sub_2225C608C((uint64_t)&v5, a1, a2)) {
    return a2;
  }
  else {
    return a1;
  }
}

unint64_t sub_2225CAEAC(unint64_t result, uint64_t a2)
{
  unint64_t v3 = result;
  if (result != a2)
  {
    unint64_t v2 = a2 - 1;
    if (a2 - 1 > result)
    {
      do
      {
        uint64_t result = sub_2225C69A0(&v3, &v2);
        --v2;
        ++v3;
      }
      while (v3 < v2);
    }
  }
  return result;
}

uint64_t sub_2225CAF0C()
{
  return sub_2225C69CC();
}

uint64_t sub_2225CAF14(uint64_t result, char a2)
{
  unint64_t v2 = *(char **)(result + 24);
  if ((unint64_t)v2 >= *(void *)(result + 16)) {
    return sub_2225E8268(result, a2);
  }
  *(void *)(result + 24) = v2 + 1;
  *unint64_t v2 = a2;
  return result;
}

uint64_t sub_2225CAF38(unsigned int **a1, unint64_t a2, uint64_t *a3, unint64_t a4, int a5)
{
  char v5 = *a1;
  unint64_t v6 = *a3;
  if ((unint64_t)*a1 >= a2)
  {
    uint64_t v7 = 0;
  }
  else
  {
    LODWORD(v7) = 0;
    char v8 = *a1;
    while (1)
    {
      unsigned int v10 = *v5++;
      unsigned int v9 = v10;
      if (!a5 && (v9 & 0xFFFFF800) == 0xD800)
      {
        uint64_t v7 = 3;
        goto LABEL_41;
      }
      if (v9 >= 0x110000) {
        int v11 = 65533;
      }
      else {
        int v11 = v9;
      }
      if (v9 >= 0x110000) {
        __int16 v12 = 3;
      }
      else {
        __int16 v12 = 4;
      }
      if (v9 >= 0x110000) {
        unsigned int v13 = 3;
      }
      else {
        unsigned int v13 = v7;
      }
      if (v9 < 0x10000)
      {
        int v11 = v9;
        __int16 v12 = 3;
        unsigned int v13 = v7;
      }
      if (v9 >= 0x800)
      {
        __int16 v14 = v12;
      }
      else
      {
        int v11 = v9;
        __int16 v14 = 2;
      }
      if (v9 < 0x800) {
        unsigned int v13 = v7;
      }
      unsigned int v15 = v9 >= 0x80 ? v11 : v9;
      unsigned __int16 v16 = v9 >= 0x80 ? v14 : 1;
      uint64_t v7 = v9 >= 0x80 ? v13 : v7;
      unint64_t v17 = v6 + v16;
      if (v17 > a4) {
        break;
      }
      switch(v16)
      {
        case 1u:
          goto LABEL_35;
        case 2u:
          goto LABEL_34;
        case 3u:
          goto LABEL_33;
        case 4u:
          *(unsigned char *)--unint64_t v17 = v15 & 0x3F | 0x80;
          v15 >>= 6;
LABEL_33:
          *(unsigned char *)--unint64_t v17 = v15 & 0x3F | 0x80;
          v15 >>= 6;
LABEL_34:
          *(unsigned char *)--unint64_t v17 = v15 & 0x3F | 0x80;
          v15 >>= 6;
LABEL_35:
          *(unsigned char *)--unint64_t v17 = byte_2226C9EF8[v16] | v15;
          break;
        default:
          break;
      }
      unint64_t v6 = v17 + v16;
      char v8 = v5;
      if ((unint64_t)v5 >= a2) {
        goto LABEL_42;
      }
    }
    uint64_t v7 = 2;
LABEL_41:
    char v5 = v8;
  }
LABEL_42:
  *a1 = v5;
  *a3 = v6;
  return v7;
}

BOOL sub_2225CB08C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = byte_2226C9EFF[*a1] + 1;
  return a2 - (uint64_t)a1 >= v3 && sub_2225CB0BC(a1, v3);
}

BOOL sub_2225CB0BC(unsigned __int8 *a1, int a2)
{
  unint64_t v2 = &a1[a2];
  switch(a2)
  {
    case 1:
      unsigned int v3 = *a1;
      goto LABEL_3;
    case 2:
      goto LABEL_7;
    case 3:
      goto LABEL_6;
    case 4:
      int v5 = (char)*--v2;
      if (v5 > -65) {
        return 0;
      }
LABEL_6:
      int v6 = (char)*--v2;
      if (v6 > -65) {
        return 0;
      }
LABEL_7:
      int v7 = (char)*(v2 - 1);
      if (v7 > -65) {
        return 0;
      }
      unsigned int v8 = v7;
      unsigned int v3 = *a1;
      if (v3 > 0xEF)
      {
        if (v3 == 240)
        {
          if (v8 >= 0x90)
          {
            unsigned int v3 = 240;
            return v3 < 0xF5;
          }
          return 0;
        }
        if (v3 == 244)
        {
          if (v8 <= 0x8F)
          {
            unsigned int v3 = 244;
            return v3 < 0xF5;
          }
          return 0;
        }
      }
      else
      {
        if (v3 == 224)
        {
          if (v8 >= 0xA0)
          {
            unsigned int v3 = 224;
            return v3 < 0xF5;
          }
          return 0;
        }
        if (v3 == 237)
        {
          if (v8 <= 0x9F)
          {
            unsigned int v3 = 237;
            return v3 < 0xF5;
          }
          return 0;
        }
      }
LABEL_3:
      if ((char)v3 >= -62) {
        return v3 < 0xF5;
      }
      return 0;
    default:
      return 0;
  }
}

uint64_t sub_2225CB1B4(int a1)
{
  return (byte_2226C9EFF[a1] + 1);
}

BOOL sub_2225CB1C8(unsigned __int8 **a1, unsigned __int8 *a2)
{
  unint64_t v2 = *a1;
  if (*a1 == a2) {
    return 1;
  }
  while (1)
  {
    uint64_t v5 = byte_2226C9EFF[*v2] + 1;
    if (a2 - v2 < v5) {
      break;
    }
    BOOL result = sub_2225CB0BC(v2, byte_2226C9EFF[*v2] + 1);
    if (!result) {
      return result;
    }
    v2 += v5;
    *a1 = v2;
    if (v2 == a2) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_2225CB254(unsigned __int8 **a1, unint64_t a2, _WORD **a3, unint64_t a4, int a5)
{
  int v7 = *a1;
  unsigned int v8 = *a3;
  if ((unint64_t)*a1 >= a2)
  {
LABEL_22:
    uint64_t result = 0;
    goto LABEL_27;
  }
  while (1)
  {
    int v12 = *v7;
    if ((uint64_t)(a2 - (void)v7) <= (unsigned __int16)byte_2226C9EFF[*v7])
    {
      uint64_t result = 1;
      goto LABEL_27;
    }
    uint64_t v13 = (unsigned __int16)byte_2226C9EFF[*v7];
    unsigned int v14 = (unsigned __int16)byte_2226C9EFF[*v7] + 1;
    if (!sub_2225CB0BC(v7, v14)) {
      goto LABEL_26;
    }
    int v15 = 0;
    int v16 = v13;
    switch((int)v13)
    {
      case 0:
        goto LABEL_10;
      case 1:
        goto LABEL_9;
      case 2:
        goto LABEL_8;
      case 3:
        goto LABEL_7;
      case 4:
        goto LABEL_6;
      case 5:
        int v15 = v12 << 6;
        int v17 = *++v7;
        int v12 = v17;
LABEL_6:
        int v18 = v15 + v12;
        int v19 = *++v7;
        int v12 = v19;
        int v15 = v18 << 6;
LABEL_7:
        int v20 = v15 + v12;
        int v21 = *++v7;
        int v12 = v21;
        int v15 = v20 << 6;
LABEL_8:
        int v22 = v15 + v12;
        int v23 = *++v7;
        int v12 = v23;
        int v15 = v22 << 6;
LABEL_9:
        int v24 = v15 + v12;
        int v25 = *++v7;
        int v12 = v25;
        int v16 = v24 << 6;
LABEL_10:
        ++v7;
        int v15 = v16 + v12;
        break;
      default:
        break;
    }
    if ((unint64_t)v8 >= a4)
    {
LABEL_23:
      v7 -= v14;
      uint64_t result = 2;
      goto LABEL_27;
    }
    unsigned int v26 = v15 - dword_2226CA000[v13];
    if (!HIWORD(v26)) {
      break;
    }
    if (v26 >= 0x110000) {
      goto LABEL_16;
    }
    if ((unint64_t)(v8 + 1) >= a4) {
      goto LABEL_23;
    }
    _WORD *v8 = ((v26 + 67043328) >> 10) - 10240;
    v8[1] = v26 & 0x3FF | 0xDC00;
    v8 += 2;
LABEL_21:
    if ((unint64_t)v7 >= a2) {
      goto LABEL_22;
    }
  }
  if (v26 >> 11 != 27)
  {
LABEL_18:
    *v8++ = v26;
    goto LABEL_21;
  }
LABEL_16:
  if (a5)
  {
    LOWORD(v26) = -3;
    goto LABEL_18;
  }
  v7 -= v14;
LABEL_26:
  uint64_t result = 3;
LABEL_27:
  *a1 = v7;
  *a3 = v8;
  return result;
}

uint64_t sub_2225CB420(unsigned __int8 **a1, unsigned __int8 *a2, unsigned int **a3, unint64_t a4, int a5, int a6)
{
  int v6 = *a1;
  int v7 = *a3;
  if (*a1 >= a2)
  {
    uint64_t v10 = 0;
    goto LABEL_33;
  }
  uint64_t v10 = 0;
  if (a5) {
    BOOL v11 = a6 == 0;
  }
  else {
    BOOL v11 = 0;
  }
  char v12 = !v11;
  while (1)
  {
    int v13 = *v6;
    if (a2 - v6 > (unsigned __int16)byte_2226C9EFF[*v6]) {
      break;
    }
    if (v12)
    {
      uint64_t v10 = 1;
      goto LABEL_33;
    }
LABEL_28:
    v6 += sub_2225CB610(v6, a2);
LABEL_29:
    uint64_t v10 = 3;
    unsigned int v27 = 65533;
LABEL_30:
    *v7++ = v27;
    if (v6 >= a2) {
      goto LABEL_33;
    }
  }
  if ((unint64_t)v7 >= a4)
  {
    uint64_t v10 = 2;
    goto LABEL_33;
  }
  uint64_t v14 = (unsigned __int16)byte_2226C9EFF[*v6];
  unsigned int v15 = (unsigned __int16)byte_2226C9EFF[*v6] + 1;
  if (!sub_2225CB0BC(v6, v15))
  {
    if (!a5) {
      goto LABEL_35;
    }
    goto LABEL_28;
  }
  int v16 = 0;
  int v17 = v14;
  switch((int)v14)
  {
    case 0:
      goto LABEL_17;
    case 1:
      goto LABEL_16;
    case 2:
      goto LABEL_15;
    case 3:
      goto LABEL_14;
    case 4:
      goto LABEL_13;
    case 5:
      int v16 = v13 << 6;
      int v18 = *++v6;
      int v13 = v18;
LABEL_13:
      int v19 = v16 + v13;
      int v20 = *++v6;
      int v13 = v20;
      int v16 = v19 << 6;
LABEL_14:
      int v21 = v16 + v13;
      int v22 = *++v6;
      int v13 = v22;
      int v16 = v21 << 6;
LABEL_15:
      int v23 = v16 + v13;
      int v24 = *++v6;
      int v13 = v24;
      int v16 = v23 << 6;
LABEL_16:
      int v25 = v16 + v13;
      int v26 = *++v6;
      int v13 = v26;
      int v17 = v25 << 6;
LABEL_17:
      ++v6;
      int v16 = v17 + v13;
      break;
    default:
      break;
  }
  unsigned int v27 = v16 - dword_2226CA000[v14];
  if (HIWORD(v27) > 0x10u) {
    goto LABEL_29;
  }
  if ((v27 & 0xFFFFF800) == 0xD800)
  {
    unsigned int v27 = 65533;
    BOOL v28 = a5 == 0;
  }
  else
  {
    BOOL v28 = 0;
  }
  if (!v28) {
    goto LABEL_30;
  }
  v6 -= v15;
LABEL_35:
  uint64_t v10 = 3;
LABEL_33:
  *a1 = v6;
  *a3 = v7;
  return v10;
}

uint64_t sub_2225CB608(unsigned __int8 **a1, unsigned __int8 *a2, unsigned int **a3, unint64_t a4, int a5)
{
  return sub_2225CB420(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_2225CB610(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return 0;
  }
  int v2 = *a1;
  if ((v2 + 62) < 0x1Eu || a1 + 1 == a2) {
    return 1;
  }
  int v5 = (char)a1[1];
  if (v2 == 224)
  {
    if ((v5 & 0xFFFFFFE0) == 0xFFFFFFA0) {
      return 2;
    }
    else {
      return 1;
    }
  }
  if ((v2 + 31) <= 0xBu) {
    goto LABEL_15;
  }
  if (v2 == 237)
  {
    BOOL v6 = v5 < -96;
LABEL_18:
    if (v6) {
      return 2;
    }
    else {
      return 1;
    }
  }
  if ((v2 & 0xFE) == 0xEE)
  {
LABEL_15:
    BOOL v6 = v5 < -64;
    goto LABEL_18;
  }
  int v7 = (char *)(a1 + 2);
  if (v2 == 240)
  {
    if ((v5 + 112) <= 0x2F) {
      goto LABEL_30;
    }
    return 1;
  }
  if ((v2 + 15) > 2u)
  {
    uint64_t result = 1;
    if (v2 != 244 || v5 > -113) {
      return result;
    }
    goto LABEL_30;
  }
  if (v5 > -65) {
    return 1;
  }
LABEL_30:
  uint64_t result = 2;
  if (v7 != (char *)a2)
  {
    if (*v7 >= -64) {
      return 2;
    }
    else {
      return 3;
    }
  }
  return result;
}

BOOL sub_2225CB708(int a1, uint64_t a2, uint64_t a3, _WORD **a4, void *a5)
{
  v23[0] = a2;
  v23[1] = a3;
  switch(a1)
  {
    case 4:
      uint64_t v14 = (unsigned __int8 *)sub_2225C3C70((uint64_t)v23);
      int v21 = *a4;
      int v22 = v14;
      unsigned int v15 = &v14[sub_2225C3D04((uint64_t)v23)];
      uint64_t v16 = sub_2225C3D04((uint64_t)v23);
      int v12 = sub_2225CB608(&v22, v15, (unsigned int **)&v21, (unint64_t)&v21[8 * v16], 0);
      if (!v12) {
        goto LABEL_9;
      }
      break;
    case 2:
      int v17 = (unsigned __int8 *)sub_2225C3C70((uint64_t)v23);
      int v21 = *a4;
      int v22 = v17;
      unint64_t v18 = (unint64_t)&v17[sub_2225C3D04((uint64_t)v23)];
      uint64_t v19 = sub_2225C3D04((uint64_t)v23);
      int v12 = sub_2225CB254(&v22, v18, &v21, (unint64_t)&v21[2 * v19], 0);
      if (!v12)
      {
LABEL_9:
        int v13 = v21;
LABEL_10:
        *a4 = v13;
        return v12 == 0;
      }
      break;
    case 1:
      int v22 = (unsigned __int8 *)sub_2225C3C70((uint64_t)v23);
      int v7 = (unsigned __int8 *)sub_2225C3C78(v23);
      if (!sub_2225CB1C8(&v22, v7))
      {
        *a5 = v22;
        int v12 = 3;
        return v12 == 0;
      }
      unsigned int v8 = *a4;
      unsigned int v9 = (const void *)sub_2225C3C70((uint64_t)v23);
      size_t v10 = sub_2225C3D04((uint64_t)v23);
      memcpy(v8, v9, v10);
      uint64_t v11 = sub_2225C3D04((uint64_t)v23);
      int v12 = 0;
      int v13 = (_WORD *)((char *)*a4 + v11);
      goto LABEL_10;
    default:
      int v12 = 0;
      return v12 == 0;
  }
  *a5 = v22;
  return v12 == 0;
}

BOOL sub_2225CB87C(int a1, uint64_t *a2)
{
  int v7 = a1;
  BOOL v6 = (unsigned int *)&v7;
  uint64_t v5 = *a2;
  int v3 = sub_2225CAF38(&v6, (unint64_t)&v8, &v5, v5 + 4, 0);
  if (!v3) {
    *a2 = v5;
  }
  return v3 == 0;
}

uint64_t sub_2225CB8E4(void *a1, uint64_t a2)
{
  return *a1 + a2;
}

void sub_2225CB8F0(std::string *a1, std::string::size_type a2)
{
}

uint64_t sub_2225CB8F8(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA9C(a1, a2) + a2;
}

uint64_t sub_2225CB920(uint64_t a1, uint64_t a2)
{
  if (sub_2225CBAF8(a1, a2))
  {
    return sub_2225CBB40(a1, v3);
  }
  else
  {
    return sub_2225CBB5C(a1, v3);
  }
}

uint64_t sub_2225CB97C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225CB920(a1, a2);
  if (sub_2225CBAF8(a1, v4))
  {
    BOOL v6 = (unsigned char *)sub_2225CBA80(a1, v5);
    char v10 = 0;
    sub_2225CBB7C(v6, &v10);
    sub_2225CBB88(a1, 0);
  }
  else
  {
    int v7 = (unsigned char *)sub_2225CBB18(a1, v5);
    char v9 = 0;
    sub_2225CBB7C(v7, &v9);
    sub_2225CBBB0(a1, 0);
  }
  return nullsub_1(a1, v3);
}

uint64_t sub_2225CBA1C()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

void sub_2225CBA24()
{
}

void *sub_2225CBA34(void *a1, void *a2)
{
  if (sub_2225CAB7C((uint64_t)&v5, a1, a2)) {
    return a2;
  }
  else {
    return a1;
  }
}

uint64_t sub_2225CBA80(uint64_t a1, uint64_t a2)
{
  return *(void *)j_nullsub_1(a1, a2);
}

uint64_t sub_2225CBA9C(uint64_t a1, uint64_t a2)
{
  if (sub_2225CBAF8(a1, a2))
  {
    return sub_2225CBA80(a1, v3);
  }
  else
  {
    return sub_2225CBB18(a1, v3);
  }
}

uint64_t sub_2225CBAF8(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(j_nullsub_1(a1, a2) + 23) >> 7;
}

uint64_t sub_2225CBB18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = j_nullsub_1(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_2225CBB40(uint64_t a1, uint64_t a2)
{
  return *(void *)(j_nullsub_1(a1, a2) + 8);
}

uint64_t sub_2225CBB5C(uint64_t a1, uint64_t a2)
{
  return *(unsigned char *)(j_nullsub_1(a1, a2) + 23) & 0x7F;
}

unsigned char *sub_2225CBB7C(unsigned char *result, unsigned char *a2)
{
  void *result = *a2;
  return result;
}

uint64_t sub_2225CBB88(uint64_t a1, uint64_t a2)
{
  uint64_t result = j_nullsub_1(a1, a2);
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_2225CBBB0(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  uint64_t v4 = j_nullsub_1(a1, a2);
  *(unsigned char *)(v4 + 23) = *(unsigned char *)(v4 + 23) & 0x80 | v2 & 0x7F;
  uint64_t result = j_nullsub_1(a1, v5);
  *(unsigned char *)(result + 23) &= ~0x80u;
  return result;
}

BOOL sub_2225CBBF8(uint64_t a1, uint64_t a2)
{
  return sub_2225CB920(a1, a2) == 0;
}

void *sub_2225CBC24()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E0B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267F7E0B8))
  {
    sub_2225CBCAC((pthread_mutex_t **)&unk_267F7E0A8, 1);
    __cxa_atexit((void (*)(void *))sub_2225CBCB0, &unk_267F7E0A8, &dword_2225BD000);
    __cxa_guard_release(&qword_267F7E0B8);
  }
  return &unk_267F7E0A8;
}

void sub_2225CBCBC(unsigned char *a1, uint64_t a2)
{
  sub_2225CBDE8((uint64_t)v3, a1);
  sub_2225CBCEC(v3, a2);
}

void sub_2225CBCEC(uint64_t *a1, uint64_t a2)
{
  sub_2225CBC24();
  sub_2225CBCB4(&v13, (uint64_t)&unk_267F7E0A8);
  uint64_t v4 = (void (*)(uint64_t, std::string *, uint64_t))off_267F7E0C0;
  uint64_t v5 = qword_267F7E0C8;
  sub_2225CBCB8(&v13);
  if (v4)
  {
    sub_2225DBA20((uint64_t)a1, &v13);
    v4(v5, &v13, a2);
    std::string::~string(&v13);
  }
  else
  {
    sub_2225CBDF4();
    sub_2225E8C04(v12);
    BOOL v6 = sub_2225CA524((uint64_t)v12, "LLVM ERROR: ");
    int v7 = sub_2225CBDF8(v6, a1);
    sub_2225CA524((uint64_t)v7, "\n");
    v11[0] = sub_2225E8D4C(v12);
    v11[1] = v8;
    char v9 = (const void *)sub_2225C3C70((uint64_t)v11);
    size_t v10 = sub_2225C3D04((uint64_t)v11);
    write(2, v9, v10);
    sub_2225E8C5C(v12);
    sub_2225C56C4(&v13);
  }
  sub_2225D2188();
  exit(1);
}

void **sub_2225CBDF8(void **a1, uint64_t *a2)
{
  return a1;
}

void *sub_2225CBE2C(void *a1, uint64_t a2)
{
  *a1 = a2;
  sub_2225CBE5C(a2);
  return a1;
}

void *sub_2225CBE60(void *a1)
{
  return a1;
}

uint64_t sub_2225CBE90(uint64_t result, unsigned char *a2)
{
  char v2 = 1;
  *(unsigned char *)(result + 17) = 1;
  if (*a2)
  {
    *(void *)uint64_t result = a2;
    char v2 = 3;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

uint64_t sub_2225CBEB0(uint64_t result, uint64_t a2)
{
  *(_WORD *)(result + 16) = 260;
  *(void *)uint64_t result = a2;
  return result;
}

uint64_t sub_2225CBEC0(uint64_t result, uint64_t a2)
{
  *(_WORD *)(result + 16) = 261;
  *(void *)uint64_t result = a2;
  return result;
}

uint64_t sub_2225CBED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225CBA9C(a1, a2);

  return nullsub_1(v2, v3);
}

pthread_mutex_t **sub_2225CBEFC(pthread_mutex_t **a1, int a2)
{
  char v2 = a2;
  uint64_t result = sub_2225CE2CC(a1, a2);
  *((_DWORD *)result + 2) = 0;
  *((unsigned char *)result + 12) = v2;
  return result;
}

uint64_t sub_2225CBF28()
{
  return sub_2225C69CC();
}

uint64_t sub_2225CBF30(uint64_t a1)
{
  uint64_t v2 = sub_2225CBF68(*(unsigned int **)a1, *(void *)a1 + 4 * *(void *)(a1 + 8));
  return sub_2225C3C70((uint64_t)&v2);
}

BOOL sub_2225CBF6C(uint64_t a1, const void *a2, uint64_t a3)
{
  return *(void *)(a1 + 8) == a3 && memcmp(*(const void **)a1, a2, 4 * a3) == 0;
}

uint64_t sub_2225CBFA8(const void **a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2225CBFD8(a1, (int *)&v3, (int *)&vars0);
}

uint64_t sub_2225CBFD8(const void **a1, int *a2, int *a3)
{
  unint64_t v6 = sub_2225CC470((uint64_t)a2, (uint64_t)a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > (v7 - sub_2225C3D04((uint64_t)a1)) >> 2)
  {
    uint64_t v8 = sub_2225CC184((uint64_t)a1);
    sub_2225CC474(a1, v8 + v6);
  }
  char v9 = (_DWORD *)sub_2225C3D04((uint64_t)a1);
  sub_2225CC480(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + 4 * v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_2225CC08C(uint64_t a1, _DWORD *a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2225CC474((const void **)a1, 0);
  }
  *(_DWORD *)sub_2225C3D04(a1) = *a2;
  uint64_t v4 = sub_2225C3D04(a1) + 4;

  return sub_2225C5B6C(a1, v4);
}

uint64_t sub_2225CC0FC(uint64_t a1, int a2)
{
  int v3 = a2;
  return sub_2225CC08C(a1, &v3);
}

uint64_t sub_2225CC124(void *a1, uint64_t a2)
{
  return *(char *)(*a1 + a2);
}

uint64_t sub_2225CC130(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  uint64_t v3 = sub_2225CC184(a1);
  sub_2225C3D0C(v5, v2, v3);
  return sub_2225CBF30((uint64_t)v5);
}

uint64_t sub_2225CC184(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return (v2 - sub_2225C3C70(a1)) >> 2;
}

BOOL sub_2225CC1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CC180(a2);
  uint64_t v5 = sub_2225CC184(a2);
  sub_2225C3D0C(v7, v4, v5);
  return sub_2225CC220(a1, v7[0], (uint64_t)v7[1]);
}

BOOL sub_2225CC220(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t v7 = sub_2225CC184(a1);
  sub_2225C3D0C(v9, v6, v7);
  return sub_2225CBF6C((uint64_t)v9, a2, a3);
}

uint64_t sub_2225CC288(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, 4 * a2, 4);
}

uint64_t sub_2225CC294(uint64_t a1, char a2)
{
  *(void *)a1 = &unk_26D4DB5A0;
  *(_DWORD *)(a1 + 16) = 1 << a2;
  *(void *)(a1 + 8) = sub_2225CC2EC(1 << a2);
  *(_DWORD *)(a1 + 20) = 0;
  return a1;
}

void *sub_2225CC2EC(int a1)
{
  uint64_t result = malloc_type_calloc((a1 + 1), 8uLL, 0x80040B8603338uLL);
  result[a1] = -1;
  return result;
}

uint64_t sub_2225CC330(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DB5A0;
  free(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_2225CC380(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 4 * a2);
}

uint64_t sub_2225CC388(unsigned int *a1, uint64_t a2)
{
  unint64_t v4 = sub_2225C60B0();
  unint64_t v5 = sub_2225C5B3C((uint64_t)a1, a2);
  unint64_t v6 = v5;
  if (v5 > 0x40)
  {
    unint64_t v8 = v5 & 0xFFFFFFFFFFFFFFC0;
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_2225C6134((uint64_t)a1, v4, (uint64_t *)v12);
    unint64_t v9 = v8 - 64;
    if (v8 != 64)
    {
      uint64_t v10 = (uint64_t)(a1 + 16);
      do
      {
        sub_2225C61DC((uint64_t *)v12, v10);
        v10 += 64;
        v9 -= 64;
      }
      while (v9);
    }
    if ((v6 & 0x3F) != 0) {
      sub_2225C61DC((uint64_t *)v12, a2 - 64);
    }
    unint64_t v7 = sub_2225C64BC(v12, v6);
  }
  else
  {
    unint64_t v7 = sub_2225C645C(a1, v5, v4);
  }
  sub_2225C64B8(&v14, v7);
  return v14;
}

char *sub_2225CC474(const void **a1, uint64_t a2)
{
  return sub_2225C5B7C(a1, 4 * a2, 4);
}

uint64_t sub_2225CC480(int *a1, int *a2, _DWORD *a3)
{
  sub_2225CC4A8(a1, a2, a3);
  return v3;
}

uint64_t sub_2225CC49C(uint64_t a1, uint64_t a2)
{
  return (a2 - a1) >> 2;
}

uint64_t sub_2225CC4A8(int *a1, int *a2, _DWORD *a3)
{
  unint64_t v8 = a3;
  unint64_t v9 = a1;
  if (a1 != a2)
  {
    unint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      int v5 = *v4++;
      unint64_t v6 = v8;
      _DWORD *v8 = v5;
      unint64_t v8 = v6 + 1;
      unint64_t v9 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v10, &v9, &v8);
  return v10;
}

uint64_t sub_2225CC520(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = *a1;
  if (!v6)
  {
    sub_2225CC608(a1);
    uint64_t v6 = *a1;
  }
  a1[15] += a2;
  if (a3 <= 1) {
    a3 = 1;
  }
  uint64_t result = sub_2225CC678(v6, a3);
  uint64_t v8 = result + a2;
  if (result + a2 > (unint64_t)a1[1])
  {
    size_t v9 = a2 + a3 - 1;
    size_t v13 = v9;
    if (v9 > 0x1000)
    {
      int v12 = sub_2225CC68C((int)a1 + 128, v9);
      *(void *)&long long v11 = sub_2225CC70C((uint64_t)&v12, (uint64_t)&v13);
      *((void *)&v11 + 1) = v10;
      sub_2225CC69C((uint64_t)(a1 + 9), &v11);
      return sub_2225CC678((uint64_t)v12, a3);
    }
    sub_2225CC608(a1);
    uint64_t result = sub_2225CC678(*a1, a3);
    uint64_t v8 = result + a2;
  }
  *a1 = v8;
  return result;
}

uint64_t sub_2225CC608(void *a1)
{
  uint64_t v2 = (uint64_t)(a1 + 2);
  unsigned int v3 = sub_2225CC780((uint64_t)(a1 + 2));
  size_t v4 = sub_2225CC73C(v3);
  unint64_t v7 = (char *)sub_2225CC68C((int)a1 + 128, v4);
  uint64_t result = sub_2225CC7B8(v2, &v7);
  uint64_t v6 = &v7[v4];
  *a1 = v7;
  a1[1] = v6;
  return result;
}

uint64_t sub_2225CC678(uint64_t a1, uint64_t a2)
{
  return (a2 + a1 - 1) & -a2;
}

void *sub_2225CC68C(int a1, size_t size)
{
  return malloc_type_malloc(size, 0x9BAEE824uLL);
}

uint64_t sub_2225CC69C(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2225CC834((const void **)a1, 0);
  }
  *(_OWORD *)sub_2225C3D04(a1) = *a2;
  uint64_t v4 = sub_2225C3D04(a1) + 16;

  return sub_2225C5B6C(a1, v4);
}

uint64_t sub_2225CC70C(uint64_t a1, uint64_t a2)
{
  sub_2225CC840(&v3, a1, a2);
  return v3;
}

uint64_t sub_2225CC73C(unsigned int a1)
{
  uint64_t v3 = 30;
  uint64_t v2 = a1 >> 7;
  return 4096 << *(void *)sub_2225CAB38(&v3, &v2);
}

uint64_t sub_2225CC780(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return (v2 - sub_2225C3C70(a1)) >> 3;
}

uint64_t sub_2225CC7B8(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2225CC828((const void **)a1, 0);
  }
  *(void *)sub_2225C3D04(a1) = *a2;
  uint64_t v4 = sub_2225C3D04(a1) + 8;

  return sub_2225C5B6C(a1, v4);
}

char *sub_2225CC828(const void **a1, uint64_t a2)
{
  return sub_2225C5B7C(a1, 8 * a2, 8);
}

char *sub_2225CC834(const void **a1, uint64_t a2)
{
  return sub_2225C5B7C(a1, 16 * a2, 16);
}

void *sub_2225CC844(void *result, void *a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  void *result = *a2;
  result[1] = v3;
  return result;
}

void sub_2225CC854(std::string *a1@<X8>)
{
  uint64_t v2 = (void *)sub_2225C3D00((int)&v10, "x86_64-apple-darwin19.0.0");
  sub_2225CC9A8(v2, 0x2Du, (uint64_t)v9);
  sub_2225CA51C(v9, (uint64_t)&__str);
  std::string::basic_string(&v7, &__str);
  sub_2225CCA44(&v7, 45);
  sub_2225CCA6C(&v7, v9[2], v9[3]);
  if (*(unsigned char *)sub_2225CB8F8((uint64_t)&v7, 0) == 105)
  {
    uint64_t v3 = (char *)sub_2225CB8F8((uint64_t)&v7, 1);
    if (sub_2225CCABC(*v3)
      && *(unsigned char *)sub_2225CB8F8((uint64_t)&v7, 2) == 56
      && *(unsigned char *)sub_2225CB8F8((uint64_t)&v7, 3) == 54)
    {
      *(unsigned char *)sub_2225CB8F8((uint64_t)&v7, 1) = 51;
    }
  }
  uint64_t v4 = sub_2225CCAC4((uint64_t)&v7, "-darwin", 0);
  if (v4 != -1)
  {
    sub_2225CB8F0(&v7, v4 + 7);
    sub_2225CCB34((uint64_t)&v6);
    sub_2225CCBF4(&v7, (uint64_t)&v6);
    std::string::~string(&v6);
  }
  sub_2225CCBF8(v5, &v7);
  sub_2225DA4D8(v5[0], v5[1], a1);
  std::string::~string(&v7);
  std::string::~string(&__str);
}

uint64_t sub_2225CC9A8@<X0>(void *a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>)
{
  unint64_t v5 = sub_2225CCC00(a1, a2, 0);
  if (v5 == -1)
  {
    sub_2225CCC70(v11);
    return sub_2225CCC60((uint64_t)a1, (uint64_t)v11, a3);
  }
  else
  {
    unint64_t v6 = v5;
    v11[0] = sub_2225CCC74(a1, 0, v5);
    v11[1] = v7;
    v10[0] = sub_2225CCC74(a1, v6 + 1, 0xFFFFFFFFFFFFFFFFLL);
    v10[1] = v8;
    return sub_2225CCC60((uint64_t)v11, (uint64_t)v10, a3);
  }
}

std::string *sub_2225CCA44(std::string *a1, std::string::value_type a2)
{
  return a1;
}

std::string *sub_2225CCA6C(std::string *a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v4 = (const std::string::value_type *)sub_2225C3C70((uint64_t)v7);
  std::string::size_type v5 = sub_2225C3D04((uint64_t)v7);
  return std::string::append(a1, v4, v5);
}

BOOL sub_2225CCABC(unsigned int a1)
{
  return sub_2225CCD1C(a1, 1024);
}

uint64_t sub_2225CCAC4(uint64_t a1, char *a2, unint64_t a3)
{
  uint64_t v6 = sub_2225CBED4(a1, (uint64_t)a2);
  unint64_t v8 = sub_2225CB920(a1, v7);
  uint64_t v9 = sub_2225CBC1C(a2);

  return sub_2225CCFB8(v6, v8, a2, a3, v9);
}

uint64_t sub_2225CCB34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (!uname(&v3)) {
    return sub_2225CCD48(a1, v3.release);
  }

  return sub_2225CCD48(a1, &byte_2226D1615);
}

unint64_t sub_2225CCC00(void *a1, unsigned __int8 a2, unint64_t a3)
{
  unint64_t result = sub_2225CCCE4(a3, a1[1]);
  uint64_t v6 = a1[1];
  if (result == v6) {
    return -1;
  }
  while (*(unsigned __int8 *)(*a1 + result) != a2)
  {
    if (v6 == ++result) {
      return -1;
    }
  }
  return result;
}

uint64_t sub_2225CCC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225CCCF0(a3, a1, a2);
}

uint64_t sub_2225CCC74(void *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5 = sub_2225CCCE4(a2, a1[1]);
  unint64_t v6 = sub_2225CCD10(v5, a3);
  unint64_t v7 = sub_2225CCCE4(v6, a1[1]);
  sub_2225C3D0C(&v9, *a1 + v5, v7 - v5);
  return v9;
}

unint64_t sub_2225CCCE4(unint64_t result, unint64_t a2)
{
  if (result >= a2) {
    return a2;
  }
  return result;
}

__n128 sub_2225CCCF4(_OWORD *a1, _OWORD *a2, __n128 *a3)
{
  *a1 = *a2;
  __n128 result = *a3;
  a1[1] = *a3;
  return result;
}

void *sub_2225CCD08(void *result)
{
  void *result = 0;
  result[1] = 0;
  return result;
}

unint64_t sub_2225CCD10(unint64_t result, unint64_t a2)
{
  if (result <= a2) {
    return a2;
  }
  return result;
}

BOOL sub_2225CCD1C(unsigned int a1, int a2)
{
  return a1 <= 0xFF && (*(_DWORD *)(MEMORY[0x263EF8318] + 4 * a1 + 60) & a2) != 0;
}

std::string *sub_2225CCD4C(std::string *a1, const std::string::value_type *a2)
{
  sub_2225CADD8(a1, &v7, &v6);
  std::string::size_type v4 = sub_2225CBC1C(a2);
  std::string::__init(a1, a2, v4);
  return a1;
}

uint64_t *sub_2225CCDA0(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CBED4(a2, a2);
  a1[1] = sub_2225CCDE0(a2, v4);
  return a1;
}

uint64_t sub_2225CCDE4(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_2225CCE0C(uint64_t a1, uint64_t a2)
{
  nullsub_1(a1, a2);
  if (sub_2225CBAF8(a1, v4))
  {
    uint64_t v6 = j_j_nullsub_1(a1);
    uint64_t v8 = sub_2225CBA80(a1, v7);
    uint64_t v10 = sub_2225CCF44(a1, v9);
    sub_2225CCF40(v6, v8, v10);
  }
  uint64_t v11 = sub_2225CB920(a2, v5);
  int v13 = sub_2225CBAF8(a2, v12);
  sub_2225CCF64(a1, a2);
  uint64_t v15 = j_nullsub_1(a2, v14);
  uint64_t v17 = j_nullsub_1(a1, v16);
  uint64_t v18 = *(void *)(v15 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v15;
  *(void *)(v17 + 16) = v18;
  sub_2225CBBB0(a2, 0);
  int v20 = (unsigned char *)sub_2225CBB18(a2, v19);
  char v25 = 0;
  sub_2225CBB7C(v20, &v25);
  if (a1 == a2 || v13) {
    nullsub_1(a2, 0);
  }
  else {
    nullsub_1(a2, v11);
  }
  uint64_t result = sub_2225CBAF8(a1, v21);
  if (a1 != a2 && !result)
  {
    uint64_t v24 = sub_2225CBB5C(a1, v23);
    return nullsub_1(a1, v24);
  }
  return result;
}

uint64_t sub_2225CCF44(uint64_t a1, uint64_t a2)
{
  return *(void *)(j_nullsub_1(a1, a2) + 16) & 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t sub_2225CCF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, a3, 1);
}

uint64_t sub_2225CCF78(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(a2);

  return j_j_nullsub_1(a1);
}

uint64_t sub_2225CCFB8(uint64_t a1, unint64_t a2, char *a3, unint64_t a4, uint64_t a5)
{
  if (a4 > a2) {
    return -1;
  }
  if (a5)
  {
    uint64_t v6 = (char *)(a1 + a2);
    uint64_t v7 = sub_2225CD014((char *)(a1 + a4), a1 + a2, a3, &a3[a5]);
    if (v7 == v6) {
      return -1;
    }
    else {
      return (uint64_t)&v7[-a1];
    }
  }
  return a4;
}

char *sub_2225CD014(char *a1, uint64_t a2, char *a3, char *a4)
{
  uint64_t v4 = a1;
  int64_t v5 = a4 - a3;
  if (a4 != a3)
  {
    uint64_t v7 = a2 - (void)a1;
    if (a2 - (uint64_t)a1 >= v5)
    {
      char v11 = *a3;
      do
      {
        uint64_t v9 = (char *)sub_2225CD0AC(v4, v7 - v5 + 1, &v11);
        if (!v9) {
          break;
        }
        uint64_t v4 = v9;
        if (!j__memcmp(v9, a3, v5)) {
          return v4;
        }
        uint64_t v7 = a2 - (void)++v4;
      }
      while (a2 - (uint64_t)v4 >= v5);
    }
    return (char *)a2;
  }
  return v4;
}

void *sub_2225CD0AC(void *a1, size_t __n, char *a3)
{
  if (__n) {
    return j__memchr(a1, *a3, __n);
  }
  else {
    return 0;
  }
}

std::string *sub_2225CD0D0(std::string *a1, uint64_t a2)
{
  uint64_t v4 = (const std::string::value_type *)sub_2225CBED4(a2, a2);
  std::string::size_type v6 = sub_2225CB920(a2, v5);

  return std::string::append(a1, v4, v6);
}

BOOL sub_2225CD12C(float a1)
{
  return sub_2225CD144(a1);
}

BOOL sub_2225CD144(float a1)
{
  return fabsf(a1) == INFINITY;
}

uint64_t sub_2225CD15C()
{
  return sub_2225CD174();
}

uint64_t sub_2225CD174()
{
  return 0;
}

uint64_t sub_2225CD190(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(result + 8) = a2;
  *(void *)(result + 16) = a3;
  return result;
}

uint64_t sub_2225CD198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2225C3D0C(v10, a3, a4);
  uint64_t v8 = sub_2225CD1FC(24, v10);
  return sub_2225CD250(v8, a1, a2, a5);
}

uint64_t sub_2225CD1FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_2225C3D04((uint64_t)a2);
  uint64_t v5 = sub_2225C26A4(a1 + v4 + 1);
  sub_2225CD38C((void *)(v5 + a1), *a2, a2[1]);
  return v5;
}

uint64_t sub_2225CD254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v13);
  uint64_t v7 = sub_2225CD2DC(v6, a3, a4);
  uint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = (void *)sub_2225C3D04(v7);
    uint64_t v10 = (const void *)sub_2225C3C70((uint64_t)v13);
    size_t v11 = sub_2225C3D04((uint64_t)v13);
    memcpy(v9, v10, v11);
  }
  return v8;
}

uint64_t sub_2225CD2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = a2;
  uint64_t v11 = a3;
  uint64_t v4 = sub_2225C3D04((uint64_t)&v10);
  unint64_t v5 = sub_2225CD378(v4 + 25, 0x10uLL);
  uint64_t v6 = sub_2225C26A4(a1 + v5 + 1);
  uint64_t v7 = v6;
  if (v6)
  {
    sub_2225CD38C((void *)(v6 + 24), v10, v11);
    *(unsigned char *)(v7 + v5 + a1) = 0;
    sub_2225C3D0C(v9, v7 + v5, a1);
    sub_2225CD250(v7, v9[0], v9[1], 1);
  }
  return v7;
}

unint64_t sub_2225CD378(uint64_t a1, unint64_t a2)
{
  return (a1 + a2 - 1) / a2 * a2;
}

uint64_t sub_2225CD38C(void *a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v4 = (const void *)sub_2225C3C70((uint64_t)v7);
  size_t v5 = sub_2225C3D04((uint64_t)v7);
  memcpy(a1, v4, v5);
  uint64_t result = sub_2225C3D04((uint64_t)v7);
  *((unsigned char *)a1 + result) = 0;
  return result;
}

uint64_t sub_2225CD3E8(size_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2225CD2DC(a1, a2, a3);
  uint64_t v5 = v4;
  if (v4)
  {
    uint64_t v6 = (void *)sub_2225C3D04(v4);
    bzero(v6, a1);
  }
  return v5;
}

uint64_t sub_2225CD428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v11[0] = a1;
  v11[1] = a2;
  sub_2225C3D00((int)v10, "-");
  if (sub_2225CD4BC(a1, a2, v10[0], (size_t)v10[1])) {
    return sub_2225CD4EC();
  }
  sub_2225CBDF0((uint64_t)v9, (uint64_t)v11);
  return sub_2225CD538(v9, a3, 1, 0, a4);
}

BOOL sub_2225CD4BC(uint64_t a1, uint64_t a2, const void *a3, size_t a4)
{
  v5[0] = a1;
  v5[1] = a2;
  return sub_2225C3CC8((uint64_t)v5, a3, a4);
}

uint64_t sub_2225CD4EC()
{
  sub_2225D1480();
  sub_2225C3D00((int)&v1, "<stdin>");
  return sub_2225CD978();
}

uint64_t sub_2225CD538@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  sub_2225CD5BC(v14);
  v13[0] = sub_2225DBCDC(a1, (uint64_t)v14);
  v13[1] = v10;
  uint64_t v11 = (char *)sub_2225C3C70((uint64_t)v13);
  sub_2225CD5C0(v11, a2, a3, a4, a5);
  return sub_2225CA520(v14);
}

uint64_t sub_2225CD5C0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int v15 = 0;
  sub_2225CBDE8((uint64_t)v12, a1);
  uint64_t v13 = sub_2225CF9FC(v12, &v15);
  uint64_t v14 = v10;
  if (sub_2225CDBBC(&v13)) {
    return sub_2225CDBCC(a5, v13, v14);
  }
  sub_2225CD684(v15, a1, a2, a2, 0, a3, a4, a5);
  return close(v15);
}

uint64_t sub_2225CD670@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  return sub_2225CD684(a1, a2, a3, a3, 0, a4, a5, a6);
}

uint64_t sub_2225CD684@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E0D8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v37 = a3;
    int v35 = __cxa_guard_acquire(&qword_267F7E0D8);
    a3 = v37;
    if (v35)
    {
      uint64_t v36 = sub_2225D0EB4();
      dword_267F7E0D0 = sub_2225C3D04(v36);
      __cxa_guard_release(&qword_267F7E0D8);
      a3 = v37;
    }
  }
  if (a4 == -1)
  {
    a4 = a3;
    if (a3 == -1)
    {
      sub_2225CDCE8((uint64_t)v47);
      uint64_t v45 = sub_2225CFF60(a1, v47);
      uint64_t v46 = v30;
      if (sub_2225CDBBC(&v45))
      {
        uint64_t v27 = v45;
        uint64_t v28 = v46;
        uint64_t v26 = a8;
        return sub_2225CDBCC(v26, v27, v28);
      }
      int v32 = sub_2225CDCEC((uint64_t)v47);
      if (v32 != 2 && v32 != 5)
      {
        sub_2225C3D00((int)&v44, a2);
        return sub_2225CD978();
      }
      a4 = sub_2225CDCF4((uint64_t)v47);
      a3 = a4;
    }
  }
  if (sub_2225CDCFC(a1, a3, a4, a5, a6, dword_267F7E0D0, a7))
  {
    sub_2225CDDC0(v47);
    sub_2225C3D00((int)v42, a2);
    sub_2225C3D0C(&v45, v42[0], v42[1]);
    int v15 = (void *)sub_2225CD1FC(48, &v45);
    sub_2225CDDC4(v15, a6, a1, a4, a5, *(uint64_t *)&v47[0], *((uint64_t *)&v47[0] + 1));
    sub_2225CDDC8((uint64_t)v43, (uint64_t)v15);
    if (!sub_2225CDBBC(v47))
    {
      sub_2225CDDCC(v41, v43);
      sub_2225CDDD0(a8, (uint64_t)v41);
      sub_2225CDC18(v41);
      unint64_t v29 = v43;
      return sub_2225CDC18(v29);
    }
    sub_2225CDC18(v43);
  }
  sub_2225C3D00((int)v40, a2);
  uint64_t v16 = sub_2225CD2DC(a4, v40[0], v40[1]);
  if (!v16)
  {
    uint64_t v23 = sub_2225CDDD4(12);
    uint64_t v25 = v24;
    uint64_t v26 = a8;
    uint64_t v27 = v23;
    uint64_t v28 = v25;
    return sub_2225CDBCC(v26, v27, v28);
  }
  sub_2225CDDC8((uint64_t)v47, v16);
  uint64_t v18 = sub_2225CBA80((uint64_t)v47, v17);
  uint64_t v19 = sub_2225C3D04(v18);
  if (!a4)
  {
LABEL_25:
    sub_2225CDDCC(v38, v47);
    sub_2225CDDD0(a8, (uint64_t)v38);
    sub_2225CDC18(v38);
    goto LABEL_26;
  }
  int v20 = (char *)v19;
  unint64_t v21 = a4 + a5;
  while (1)
  {
    ssize_t v22 = pread(a1, v20, a4, v21 - a4);
    if (v22 == -1) {
      break;
    }
    if (!v22)
    {
      bzero(v20, a4);
      goto LABEL_25;
    }
    a4 -= v22;
    v20 += v22;
LABEL_14:
    if (!a4) {
      goto LABEL_25;
    }
  }
  if (*__error() == 4) {
    goto LABEL_14;
  }
  int v33 = *__error();
  uint64_t v34 = std::generic_category();
  sub_2225CDE14((uint64_t)v39, v33, (uint64_t)v34);
  sub_2225CDBCC(a8, v39[0], v39[1]);
LABEL_26:
  unint64_t v29 = v47;
  return sub_2225CDC18(v29);
}

uint64_t sub_2225CD978()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  int v5 = v0;
  uint64_t v7 = v6;
  sub_2225CE1E4(v21);
  while (1)
  {
    int v8 = sub_2225C5664((uint64_t)v21);
    sub_2225CE1E8(v21, v8 + 0x4000);
    uint64_t v9 = (void *)sub_2225C3D04((uint64_t)v21);
    ssize_t v10 = read(v5, v9, 0x4000uLL);
    if (v10 == -1) {
      break;
    }
    int v11 = sub_2225C5664((uint64_t)v21);
    sub_2225CE23C((uint64_t)v21, v11 + v10);
LABEL_5:
    if (!v10)
    {
      uint64_t v12 = sub_2225CE27C((uint64_t)v21);
      uint64_t v14 = sub_2225CD254(v12, v13, v4, v2);
      sub_2225CDDC8((uint64_t)v19, v14);
      sub_2225CDDCC(v18, v19);
      sub_2225CDDD0(v7, (uint64_t)v18);
      sub_2225CDC18(v18);
      sub_2225CDC18(v19);
      return sub_2225CA520(v21);
    }
  }
  if (*__error() == 4) {
    goto LABEL_5;
  }
  int v15 = *__error();
  uint64_t v16 = std::generic_category();
  sub_2225CDE14((uint64_t)v20, v15, (uint64_t)v16);
  sub_2225CDBCC(v7, v20[0], v20[1]);
  return sub_2225CA520(v21);
}

uint64_t sub_2225CDAC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = sub_2225CE2C0(a1);
  sub_2225C3D0C(&v4, v1, v2);
  return v4;
}

const char *sub_2225CDB00()
{
  return "Unknown buffer";
}

void *sub_2225CDB0C(void *a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  *sub_2225CDB84(a1) = &unk_26D4DB608;
  uint64_t v4 = sub_2225C3C70((uint64_t)v7);
  uint64_t v5 = sub_2225C3C78(v7);
  sub_2225CD190((uint64_t)a1, v4, v5);
  return a1;
}

void *sub_2225CDB84(void *result)
{
  void *result = &unk_26D4DB5D8;
  return result;
}

uint64_t sub_2225CDBAC(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_2225CDBB4()
{
  return 0;
}

BOOL sub_2225CDBBC(_DWORD *a1)
{
  return *a1 != 0;
}

uint64_t sub_2225CDBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a1 + 16) |= 1u;
  uint64_t v6 = (void *)nullsub_1(a1, a2);
  *uint64_t v6 = a2;
  v6[1] = a3;
  return a1;
}

uint64_t sub_2225CDC1C(uint64_t a1)
{
  return a1;
}

void *sub_2225CDC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2225CDCB8(v8, v4);
  }
  return result;
}

uint64_t sub_2225CDCB8(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 8))(a2);
  }
  return result;
}

uint64_t sub_2225CDCEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_2225CDCF4(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

uint64_t sub_2225CDCFC(int a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5, unsigned int a6, char a7)
{
  if (a7) {
    return 0;
  }
  uint64_t v19 = v7;
  uint64_t v20 = v8;
  BOOL v13 = a3 < 0x4000 || a6 > a3;
  int v14 = v13;
  uint64_t result = v14 ^ 1u;
  if (!v13 && a5)
  {
    if (a2 == -1)
    {
      sub_2225CDCE8((uint64_t)v18);
      v17[0] = sub_2225CFF60(a1, v18);
      v17[1] = v16;
      if (sub_2225CDBBC(v17)) {
        return 0;
      }
      a2 = sub_2225CDCF4((uint64_t)v18);
    }
    return a4 + a3 == a2 && (a2 & (int)(a6 - 1)) != 0;
  }
  return result;
}

uint64_t sub_2225CDDD4(int a1)
{
  uint64_t v2 = std::generic_category();
  sub_2225CDE14((uint64_t)&v4, a1, (uint64_t)v2);
  return v4;
}

double sub_2225CDE18(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0xFFFF00000000;
  return result;
}

uint64_t sub_2225CDE34(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = std::system_category();
  return a1;
}

void *sub_2225CDE64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  v17[0] = a6;
  v17[1] = a7;
  int v11 = sub_2225CDB84(a1);
  void *v11 = &unk_26D4DB638;
  uint64_t v12 = v11 + 3;
  unint64_t v13 = sub_2225CDF38(a4, a5);
  unint64_t v14 = sub_2225CDF6C(a5);
  sub_2225D015C(v12, a3, 0, 0, v13, v14, v17);
  if (!sub_2225CDBBC(v17))
  {
    unint64_t v15 = sub_2225CDF9C((uint64_t)a1, a5);
    sub_2225CD190((uint64_t)a1, v15, v15 + a4);
  }
  return a1;
}

unint64_t sub_2225CDF38(uint64_t a1, unint64_t a2)
{
  return a2 + a1 - sub_2225CDF6C(a2);
}

unint64_t sub_2225CDF6C(unint64_t a1)
{
  return (int)-sub_2225D0198() & a1;
}

unint64_t sub_2225CDF9C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_2225C5B40(a1 + 24);
  return v3 + a2 - sub_2225CDF6C(a2);
}

void sub_2225CDFDC()
{
  int v0 = (void *)sub_2225CDFD8();

  j__free(v0);
}

uint64_t sub_2225CE004(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_2225CE00C()
{
  return 1;
}

void *sub_2225CE014(void *a1)
{
  *a1 = &unk_26D4DB638;
  sub_2225D0194(a1 + 3);
  return a1;
}

uint64_t sub_2225CE058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  return sub_2225CE084(a1, &v4, &v3);
}

uint64_t sub_2225CE088(void *a1, void *a2)
{
  uint64_t v2 = sub_2225CE0B0(a1, a2);

  return nullsub_1(v2, v3);
}

void *sub_2225CE0B0(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

uint64_t sub_2225CE0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_2225CE10C(a2, a2);
  uint64_t v4 = j_j_nullsub_1(a2);
  return sub_2225CE144(a1, &v6, v4);
}

uint64_t sub_2225CE10C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v4) = 0;
  return v3;
}

uint64_t sub_2225CE148(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = sub_2225CE0B0(a1, a2);

  return nullsub_1(v4, a3);
}

uint64_t sub_2225CE180(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 16) &= ~1u;
  uint64_t v4 = nullsub_1(a1, a2);
  uint64_t v6 = nullsub_1(a2, v5);
  sub_2225CDDCC(v4, v6);
  return a1;
}

uint64_t sub_2225CE1D8(uint64_t result, int a2, uint64_t a3)
{
  *(_DWORD *)double result = a2;
  *(void *)(result + 8) = a3;
  return result;
}

char *sub_2225CE1E8(const void **a1, unsigned int a2)
{
  double result = (char *)sub_2225CE28C((uint64_t)a1);
  if ((unint64_t)result < a2)
  {
    return sub_2225C5B48(a1, a2);
  }
  return result;
}

uint64_t sub_2225CE23C(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = sub_2225C3C70(a1) + a2;

  return sub_2225C5B6C(a1, v3);
}

uint64_t sub_2225CE284()
{
  return sub_2225C69CC();
}

uint64_t sub_2225CE28C(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return v2 - sub_2225C3C70(a1);
}

uint64_t sub_2225CE2C0(uint64_t a1)
{
  return *(void *)(a1 + 16) - *(void *)(a1 + 8);
}

pthread_mutex_t **sub_2225CE2CC(pthread_mutex_t **a1, int a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  *a1 = 0;
  uint64_t v4 = (pthread_mutex_t *)malloc_type_malloc(0x40uLL, 0x1000040FA0F61DDuLL);
  pthread_mutexattr_init(&v7);
  if (a2) {
    int v5 = 2;
  }
  else {
    int v5 = 0;
  }
  pthread_mutexattr_settype(&v7, v5);
  pthread_mutex_init(v4, &v7);
  pthread_mutexattr_destroy(&v7);
  *a1 = v4;
  return a1;
}

pthread_mutex_t **sub_2225CE384(pthread_mutex_t **a1)
{
  uint64_t v2 = *a1;
  pthread_mutex_destroy(*a1);
  free(v2);
  return a1;
}

BOOL sub_2225CE3BC(pthread_mutex_t **a1)
{
  return pthread_mutex_lock(*a1) == 0;
}

BOOL sub_2225CE3E0(pthread_mutex_t **a1)
{
  return pthread_mutex_unlock(*a1) == 0;
}

uint64_t sub_2225CE404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_2225CE454(a3);
  *a3 = a1;
  a3[1] = a2;
  uint64_t result = sub_2225CE458(a1, a2);
  a3[2] = result;
  a3[3] = v7;
  a3[4] = 0;
  return result;
}

uint64_t sub_2225CE458(uint64_t a1, uint64_t a2)
{
  v10[0] = a1;
  v10[1] = a2;
  if (sub_2225CF1E0((uint64_t)v10)) {
    return v10[0];
  }
  if ((unint64_t)sub_2225C3D04((uint64_t)v10) >= 3)
  {
    int v3 = sub_2225CC124(v10, 0);
    if (sub_2225CE760(v3))
    {
      int v4 = sub_2225CC124(v10, 0);
      if (v4 == sub_2225CC124(v10, 1))
      {
        int v5 = sub_2225CC124(v10, 2);
        if (!sub_2225CE760(v5))
        {
          uint64_t v8 = 2;
          goto LABEL_14;
        }
      }
    }
  }
  int v6 = sub_2225CC124(v10, 0);
  if (!sub_2225CE760(v6))
  {
    sub_2225C3D00((int)v9, "..");
    if (sub_2225D0520((uint64_t)v10, v9[0], (size_t)v9[1]))
    {
      unint64_t v7 = 2;
      return sub_2225CE76C(v10, 0, v7);
    }
    if (sub_2225CC124(v10, 0) != 46)
    {
      uint64_t v8 = 0;
LABEL_14:
      unint64_t v7 = sub_2225CE7D0(v10, 47, v8);
      return sub_2225CE76C(v10, 0, v7);
    }
  }
  unint64_t v7 = 1;
  return sub_2225CE76C(v10, 0, v7);
}

uint64_t sub_2225CE588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *(void *)&long long v5 = a1;
  *((void *)&v5 + 1) = a2;
  sub_2225CE454(a3);
  *(_OWORD *)a3 = v5;
  uint64_t result = sub_2225C3D04((uint64_t)&v5);
  a3[4] = result;
  return result;
}

void *sub_2225CE5D0(void *a1)
{
  uint64_t v2 = a1 + 2;
  uint64_t v3 = a1[4] + sub_2225C3D04((uint64_t)(a1 + 2));
  a1[4] = v3;
  if (v3 != sub_2225C3D04((uint64_t)a1))
  {
    if ((unint64_t)sub_2225C3D04((uint64_t)v2) >= 3
      && (int v4 = sub_2225CC124(v2, 0), sub_2225CE760(v4))
      && (int v5 = sub_2225CC124(v2, 1), v5 == sub_2225CC124(v2, 0)))
    {
      int v6 = sub_2225CC124(v2, 2);
      BOOL v7 = !sub_2225CE760(v6);
    }
    else
    {
      BOOL v7 = 0;
    }
    int v8 = sub_2225CC124(a1, a1[4]);
    if (sub_2225CE760(v8))
    {
      uint64_t v9 = a1[4];
      uint64_t v10 = (uint64_t)a1;
      if (v7)
      {
        uint64_t v11 = sub_2225CE76C(a1, a1[4], 1uLL);
LABEL_18:
        a1[2] = v11;
        a1[3] = v12;
        return a1;
      }
      while (v9 != sub_2225C3D04(v10))
      {
        int v13 = sub_2225CC124(a1, a1[4]);
        if (!sub_2225CE760(v13)) {
          break;
        }
        uint64_t v9 = a1[4] + 1;
        a1[4] = v9;
        uint64_t v10 = (uint64_t)a1;
      }
      uint64_t v14 = a1[4];
      if (v14 == sub_2225C3D04((uint64_t)a1))
      {
        --a1[4];
        sub_2225C3D00((int)&v17, ".");
        goto LABEL_3;
      }
    }
    unint64_t v15 = sub_2225CE7D0(a1, 47, a1[4]);
    uint64_t v11 = sub_2225CCC74(a1, a1[4], v15);
    goto LABEL_18;
  }
  sub_2225CCC70(&v17);
LABEL_3:
  *(_OWORD *)uint64_t v2 = v17;
  return a1;
}

BOOL sub_2225CE760(int a1)
{
  return a1 == 47;
}

uint64_t sub_2225CE76C(void *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5 = sub_2225CCCE4(a2, a1[1]);
  uint64_t v6 = a1[1];
  unint64_t v7 = *a1 + v5;
  unint64_t v8 = sub_2225CCCE4(a3, v6 - v5);
  sub_2225C3D0C(&v10, v7, v8);
  return v10;
}

BOOL sub_2225CE7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3C70(a1);
  return v4 == sub_2225C3C70(a2) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
}

double sub_2225CE830@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v8 = a1;
  *((void *)&v8 + 1) = a2;
  sub_2225CE454(v6);
  v6[0] = v8;
  uint64_t v7 = sub_2225C3D04((uint64_t)&v8);
  sub_2225CE890((uint64_t)v6);
  double result = *(double *)v6;
  long long v5 = v6[1];
  *(_OWORD *)a3 = v6[0];
  *(_OWORD *)(a3 + 16) = v5;
  *(void *)(a3 + 32) = v7;
  return result;
}

uint64_t sub_2225CE890(uint64_t a1)
{
  uint64_t v2 = sub_2225CE99C(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3 == sub_2225C3D04(a1)
    && sub_2225C3D04(a1) > (unint64_t)(v2 + 1)
    && (int v4 = sub_2225CC124((void *)a1, *(void *)(a1 + 32) - 1), sub_2225CE760(v4)))
  {
    --*(void *)(a1 + 32);
    sub_2225C3D00((int)&v14, ".");
    *(_OWORD *)(a1 + 16) = v14;
  }
  else
  {
    unint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = v2 + 1;
    do
    {
      unint64_t v7 = v5;
      if (!v5) {
        break;
      }
      if (v6 == v5) {
        break;
      }
      --v5;
      int v8 = sub_2225CC124((void *)a1, v7 - 1);
    }
    while (sub_2225CE760(v8));
    uint64_t v9 = sub_2225CE76C((void *)a1, 0, v7);
    unint64_t v11 = sub_2225CEAA8(v9, v10);
    *(void *)(a1 + 16) = sub_2225CCC74((void *)a1, v11, v7);
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v11;
  }
  return a1;
}

uint64_t sub_2225CE99C(uint64_t a1, uint64_t a2)
{
  v10[0] = a1;
  v10[1] = a2;
  if (sub_2225C3D04((uint64_t)v10) == 2)
  {
    int v2 = sub_2225CC124(v10, 0);
    if (sub_2225CE760(v2))
    {
      int v3 = sub_2225CC124(v10, 0);
      if (v3 == sub_2225CC124(v10, 1)) {
        return -1;
      }
    }
  }
  if ((unint64_t)sub_2225C3D04((uint64_t)v10) >= 4)
  {
    int v4 = sub_2225CC124(v10, 0);
    if (sub_2225CE760(v4))
    {
      int v5 = sub_2225CC124(v10, 0);
      if (v5 == sub_2225CC124(v10, 1))
      {
        int v6 = sub_2225CC124(v10, 2);
        if (!sub_2225CE760(v6)) {
          return sub_2225CE7D0(v10, 47, 2);
        }
      }
    }
  }
  if (!sub_2225C3D04((uint64_t)v10)) {
    return -1;
  }
  int v7 = sub_2225CC124(v10, 0);
  BOOL v8 = sub_2225CE760(v7);
  uint64_t result = 0;
  if (!v8) {
    return -1;
  }
  return result;
}

uint64_t sub_2225CEAA8(uint64_t a1, uint64_t a2)
{
  v13[0] = a1;
  v13[1] = a2;
  if (sub_2225C3D04((uint64_t)v13) != 2
    || (int v2 = sub_2225CC124(v13, 0), !sub_2225CE760(v2))
    || (int v3 = sub_2225CC124(v13, 0), v4 = sub_2225CC124(v13, 1), result = 0, v3 != v4))
  {
    if (sub_2225C3D04((uint64_t)v13)
      && (uint64_t v6 = sub_2225C3D04((uint64_t)v13), v7 = sub_2225CC124(v13, v6 - 1), sub_2225CE760(v7)))
    {
      return sub_2225C3D04((uint64_t)v13) - 1;
    }
    else
    {
      uint64_t v8 = sub_2225C3D04((uint64_t)v13);
      uint64_t v9 = sub_2225CF3BC(v13, 47, v8 - 1);
      if (v9 == -1)
      {
        return 0;
      }
      else
      {
        uint64_t v10 = v9;
        if (v9 != 1) {
          return v10 + 1;
        }
        int v11 = sub_2225CC124(v13, 0);
        BOOL v12 = sub_2225CE760(v11);
        uint64_t result = 0;
        if (!v12) {
          return v10 + 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_2225CEBAC(uint64_t a1, uint64_t a2)
{
  v25[0] = a1;
  v25[1] = a2;
  sub_2225CE404(a1, a2, (uint64_t *)v23);
  v21[0] = v23[0];
  v21[1] = v23[1];
  uint64_t v22 = v24;
  sub_2225CE588(a1, a2, v20);
  if (!sub_2225CED10((uint64_t)v23, (uint64_t)v20)) {
    goto LABEL_10;
  }
  uint64_t v4 = sub_2225CED2C((uint64_t)v23);
  if ((unint64_t)sub_2225C3D04(v4) < 3
    || (int v5 = (void *)sub_2225CED2C((uint64_t)v23), v6 = sub_2225CC124(v5, 0), !sub_2225CE760(v6))
    || (int v7 = (void *)sub_2225CED2C((uint64_t)v23),
        int v8 = sub_2225CC124(v7, 1),
        uint64_t v9 = (void *)sub_2225CED2C((uint64_t)v23),
        v8 != sub_2225CC124(v9, 0)))
  {
    long long v17 = (void *)sub_2225CED2C((uint64_t)v23);
    int v18 = sub_2225CC124(v17, 0);
    if (sub_2225CE760(v18)) {
      return *(_OWORD *)sub_2225CED2C((uint64_t)v23);
    }
LABEL_10:
    sub_2225CCC70(&v26);
    return v26;
  }
  sub_2225CE5D0(v21);
  if (!sub_2225CED10((uint64_t)v21, (uint64_t)v20)) {
    return *(_OWORD *)sub_2225CED2C((uint64_t)v23);
  }
  uint64_t v10 = (void *)sub_2225CED2C((uint64_t)v21);
  int v11 = sub_2225CC124(v10, 0);
  if (!sub_2225CE760(v11)) {
    return *(_OWORD *)sub_2225CED2C((uint64_t)v23);
  }
  uint64_t v12 = sub_2225CED2C((uint64_t)v23);
  uint64_t v13 = sub_2225C3D04(v12);
  uint64_t v14 = sub_2225CED2C((uint64_t)v21);
  uint64_t v15 = sub_2225C3D04(v14);
  *(void *)&long long v26 = sub_2225CE76C(v25, 0, v15 + v13);
  *((void *)&v26 + 1) = v16;
  return v26;
}

BOOL sub_2225CED10(uint64_t a1, uint64_t a2)
{
  return !sub_2225CE7D4(a1, a2);
}

uint64_t sub_2225CED2C(uint64_t a1)
{
  return a1 + 16;
}

uint64_t sub_2225CED34(uint64_t a1, uint64_t a2)
{
  sub_2225CE404(a1, a2, v12);
  sub_2225CE588(a1, a2, v11);
  if (sub_2225CED10((uint64_t)v12, (uint64_t)v11)
    && (uint64_t v4 = sub_2225CED2C((uint64_t)v12), (unint64_t)sub_2225C3D04(v4) >= 3)
    && (int v5 = (void *)sub_2225CED2C((uint64_t)v12), v6 = sub_2225CC124(v5, 0), sub_2225CE760(v6))
    && (int v7 = (void *)sub_2225CED2C((uint64_t)v12),
        int v8 = sub_2225CC124(v7, 1),
        uint64_t v9 = (void *)sub_2225CED2C((uint64_t)v12),
        v8 == sub_2225CC124(v9, 0)))
  {
    return *(_OWORD *)sub_2225CED2C((uint64_t)v12);
  }
  else
  {
    sub_2225CCC70(&v13);
  }
  return v13;
}

uint64_t sub_2225CEE00(uint64_t a1, uint64_t a2)
{
  sub_2225CE404(a1, a2, (uint64_t *)v19);
  v17[0] = v19[0];
  v17[1] = v19[1];
  uint64_t v18 = v20;
  sub_2225CE588(a1, a2, v16);
  if (!sub_2225CED10((uint64_t)v19, (uint64_t)v16)) {
    goto LABEL_11;
  }
  uint64_t v4 = sub_2225CED2C((uint64_t)v19);
  if ((unint64_t)sub_2225C3D04(v4) < 3
    || (int v5 = (void *)sub_2225CED2C((uint64_t)v19), v6 = sub_2225CC124(v5, 0), !sub_2225CE760(v6))
    || (int v7 = (void *)sub_2225CED2C((uint64_t)v19),
        int v8 = sub_2225CC124(v7, 1),
        uint64_t v9 = (void *)sub_2225CED2C((uint64_t)v19),
        v8 != sub_2225CC124(v9, 0)))
  {
    long long v13 = (void *)sub_2225CED2C((uint64_t)v19);
    int v14 = sub_2225CC124(v13, 0);
    if (sub_2225CE760(v14))
    {
      uint64_t v12 = v19;
      return *(_OWORD *)sub_2225CED2C((uint64_t)v12);
    }
LABEL_11:
    sub_2225CCC70(&v21);
    return v21;
  }
  sub_2225CE5D0(v17);
  if (!sub_2225CED10((uint64_t)v17, (uint64_t)v16)) {
    goto LABEL_11;
  }
  uint64_t v10 = (void *)sub_2225CED2C((uint64_t)v17);
  int v11 = sub_2225CC124(v10, 0);
  if (!sub_2225CE760(v11)) {
    goto LABEL_11;
  }
  uint64_t v12 = v17;
  return *(_OWORD *)sub_2225CED2C((uint64_t)v12);
}

uint64_t sub_2225CEF30(const void **a1, char **a2, char **a3, char **a4, char **a5)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  sub_2225CF1C4(v33);
  sub_2225CF1C4(v32);
  sub_2225CF1C4(v31);
  sub_2225CF1C4(v30);
  sub_2225CF1C8(v34);
  if ((sub_2225CF1CC(a2) & 1) == 0)
  {
    *(void *)&long long v29 = sub_2225DBAC4(a2, (uint64_t)v33);
    *((void *)&v29 + 1) = v10;
    sub_2225CC69C((uint64_t)v34, &v29);
  }
  if ((sub_2225CF1CC(a3) & 1) == 0)
  {
    *(void *)&long long v29 = sub_2225DBAC4(a3, (uint64_t)v32);
    *((void *)&v29 + 1) = v11;
    sub_2225CC69C((uint64_t)v34, &v29);
  }
  if ((sub_2225CF1CC(a4) & 1) == 0)
  {
    *(void *)&long long v29 = sub_2225DBAC4(a4, (uint64_t)v31);
    *((void *)&v29 + 1) = v12;
    sub_2225CC69C((uint64_t)v34, &v29);
  }
  if ((sub_2225CF1CC(a5) & 1) == 0)
  {
    *(void *)&long long v29 = sub_2225DBAC4(a5, (uint64_t)v30);
    *((void *)&v29 + 1) = v13;
    sub_2225CC69C((uint64_t)v34, &v29);
  }
  int v14 = (long long *)sub_2225C3C70((uint64_t)v34);
  uint64_t v15 = sub_2225C3D04((uint64_t)v34);
  if (v14 != (long long *)v15)
  {
    uint64_t v16 = (long long *)v15;
    do
    {
      if (sub_2225CF1D0(a1))
      {
        BOOL v17 = 0;
      }
      else
      {
        int v18 = sub_2225C5664((uint64_t)a1);
        uint64_t v19 = (char *)sub_2225C5698((uint64_t)a1, v18 - 1);
        BOOL v17 = sub_2225CE760(*v19);
      }
      if (sub_2225CF1E0((uint64_t)v14))
      {
        BOOL v20 = 0;
      }
      else
      {
        int v21 = sub_2225CC124(v14, 0);
        BOOL v20 = sub_2225CE760(v21);
      }
      sub_2225CBDF0((uint64_t)&v29, (uint64_t)v14);
      BOOL v22 = sub_2225CF1F0((char **)&v29);
      if (v17)
      {
        unint64_t v23 = sub_2225D88F0(v14, 0x2Fu, 0);
        *(void *)&long long v29 = sub_2225CE76C(v14, v23, 0xFFFFFFFFFFFFFFFFLL);
        *((void *)&v29 + 1) = v24;
        uint64_t v25 = (char *)sub_2225C3C70((uint64_t)&v29);
        long long v26 = &v29;
      }
      else
      {
        if (!v20 && !sub_2225CF1D0(a1) && !v22) {
          sub_2225C52D8((uint64_t)a1, byte_2226CA018);
        }
        uint64_t v25 = (char *)sub_2225C3C70((uint64_t)v14);
        long long v26 = v14;
      }
      uint64_t v27 = (char *)sub_2225C3C78(v26);
      sub_2225C5A88(a1, v25, v27);
      ++v14;
    }
    while (v14 != v16);
  }
  sub_2225C56C4(v34);
  sub_2225CA520(v30);
  sub_2225CA520(v31);
  sub_2225CA520(v32);
  return sub_2225CA520(v33);
}

BOOL sub_2225CF1D0(void *a1)
{
  return *a1 == a1[1];
}

BOOL sub_2225CF1E0(uint64_t a1)
{
  return *(void *)(a1 + 8) == 0;
}

BOOL sub_2225CF1F0(char **a1)
{
  sub_2225CF794(v8);
  uint64_t v2 = sub_2225DBAC4(a1, (uint64_t)v8);
  v7[0] = sub_2225CED34(v2, v3);
  v7[1] = v4;
  BOOL v5 = !sub_2225CF1E0((uint64_t)v7);
  sub_2225CA520(v8);
  return v5;
}

uint64_t sub_2225CF24C(uint64_t a1, uint64_t a2)
{
  v4[0] = a1;
  v4[1] = a2;
  unint64_t v2 = sub_2225CF298(a1, a2);
  if (v2 != -1) {
    return sub_2225CE76C(v4, 0, v2);
  }
  sub_2225CCC70(&v5);
  return v5;
}

uint64_t sub_2225CF298(uint64_t a1, uint64_t a2)
{
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v2 = sub_2225CEAA8(a1, a2);
  if (sub_2225C3D04((uint64_t)v13))
  {
    int v3 = sub_2225CC124(v13, v2);
    BOOL v4 = !sub_2225CE760(v3);
  }
  else
  {
    BOOL v4 = 1;
  }
  uint64_t v5 = sub_2225CE76C(v13, 0, v2);
  uint64_t v7 = sub_2225CE99C(v5, v6);
  do
  {
    uint64_t v8 = v2;
    if (!v2) {
      break;
    }
    if (v7 + 1 == v2) {
      break;
    }
    --v2;
    int v9 = sub_2225CC124(v13, v8 - 1);
  }
  while (sub_2225CE760(v9));
  if (v8 != 1 || v7 != 0 || v4) {
    return v8;
  }
  else {
    return -1;
  }
}

uint64_t sub_2225CF358(uint64_t a1)
{
  uint64_t v2 = sub_2225C3C70(a1);
  uint64_t v3 = sub_2225C5664(a1);
  sub_2225C3D0C(v5, v2, v3);
  uint64_t result = sub_2225CF298(v5[0], v5[1]);
  if (result != -1) {
    return sub_2225CE23C(a1, result);
  }
  return result;
}

unint64_t sub_2225CF3C0(uint64_t *a1, void *a2)
{
  sub_2225C5D90(a2);
  sub_2225DBB38(a1);

  return sub_2225CF40C((uint64_t)a2);
}

unint64_t sub_2225CF40C(uint64_t a1)
{
  uint64_t v2 = (unsigned char *)sub_2225C3C70(a1);
  unint64_t result = sub_2225C3D04(a1);
  if ((unint64_t)v2 < result)
  {
    do
    {
      if (*v2 == 92)
      {
        BOOL v4 = v2 + 1;
        if ((unint64_t)(v2 + 1) < result && *v4 == 92) {
          goto LABEL_7;
        }
        *uint64_t v2 = 47;
      }
      BOOL v4 = v2;
LABEL_7:
      uint64_t v2 = v4 + 1;
    }
    while ((unint64_t)(v4 + 1) < result);
  }
  return result;
}

uint64_t sub_2225CF480(uint64_t a1, uint64_t a2)
{
  sub_2225CE830(a1, a2, (uint64_t)v3);
  return *(void *)sub_2225CED2C((uint64_t)v3);
}

uint64_t sub_2225CF4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = sub_2225CF480(a1, a2);
  uint64_t v13 = v2;
  uint64_t v3 = sub_2225CF3BC(&v12, 46, -1);
  if (v3 == -1) {
    return v12;
  }
  unint64_t v4 = v3;
  if (sub_2225C3D04((uint64_t)&v12) == 1)
  {
    uint64_t v5 = v12;
    uint64_t v6 = v13;
    sub_2225C3D00((int)v11, ".");
    if (sub_2225CD4BC(v5, v6, v11[0], (size_t)v11[1])) {
      return v12;
    }
  }
  if (sub_2225C3D04((uint64_t)&v12) == 2
    && (uint64_t v7 = v12, v8 = v13, sub_2225C3D00((int)v10, ".."), sub_2225CD4BC(v7, v8, v10[0], (size_t)v10[1])))
  {
    return v12;
  }
  else
  {
    return sub_2225CE76C(&v12, 0, v4);
  }
}

uint64_t sub_2225CF58C(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = sub_2225CF480(a1, a2);
  uint64_t v14 = v2;
  uint64_t v3 = sub_2225CF3BC(&v13, 46, -1);
  if (v3 == -1
    || (unint64_t v4 = v3, sub_2225C3D04((uint64_t)&v13) == 1)
    && (uint64_t v5 = v13, v6 = v14, sub_2225C3D00((int)v12, "."), sub_2225CD4BC(v5, v6, v12[0], (size_t)v12[1]))
    || sub_2225C3D04((uint64_t)&v13) == 2
    && (uint64_t v7 = v13, v8 = v14, sub_2225C3D00((int)v11, ".."), sub_2225CD4BC(v7, v8, v11[0], (size_t)v11[1])))
  {
    sub_2225CCC70(v15);
  }
  else
  {
    v15[0] = sub_2225CE76C(&v13, v4, 0xFFFFFFFFFFFFFFFFLL);
    v15[1] = v9;
  }
  return v15[0];
}

unint64_t sub_2225CF670(const void **a1, unsigned int a2)
{
  unint64_t v3 = a2;
  if (sub_2225C5664((uint64_t)a1) <= (unint64_t)a2)
  {
    unint64_t result = sub_2225C5664((uint64_t)a1);
    if (result >= v3) {
      return result;
    }
    if (sub_2225CE28C((uint64_t)a1) < v3) {
      sub_2225C5B48(a1, v3);
    }
    uint64_t v7 = (unsigned char *)sub_2225C3D04((uint64_t)a1);
    uint64_t v8 = (unsigned char *)(sub_2225C3C70((uint64_t)a1) + v3);
    if (v7 != v8) {
      bzero(v7, v8 - v7);
    }
  }
  else
  {
    unint64_t v4 = sub_2225C3C70((uint64_t)a1) + v3;
    uint64_t v5 = sub_2225C3D04((uint64_t)a1);
    nullsub_1(v4, v5);
  }
  uint64_t v9 = sub_2225C3C70((uint64_t)a1) + v3;

  return sub_2225C5B6C((uint64_t)a1, v9);
}

uint64_t sub_2225CF758(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1) - 1;

  return sub_2225C5B6C(a1, v2);
}

BOOL sub_2225CF798(char **a1)
{
  sub_2225CF794(v8);
  uint64_t v2 = sub_2225DBAC4(a1, (uint64_t)v8);
  v7[0] = sub_2225CEE00(v2, v3);
  v7[1] = v4;
  BOOL v5 = !sub_2225CF1E0((uint64_t)v7);
  sub_2225CA520(v8);
  return v5;
}

BOOL sub_2225CF7F4(char **a1)
{
  sub_2225CF794(v8);
  uint64_t v2 = sub_2225DBAC4(a1, (uint64_t)v8);
  v7[0] = sub_2225CF24C(v2, v3);
  v7[1] = v4;
  BOOL v5 = !sub_2225CF1E0((uint64_t)v7);
  sub_2225CA520(v8);
  return v5;
}

BOOL sub_2225CF850(char **a1)
{
  sub_2225CF794(v7);
  v6[0] = sub_2225DBAC4(a1, (uint64_t)v7);
  v6[1] = v2;
  sub_2225CBDF0((uint64_t)v5, (uint64_t)v6);
  BOOL v3 = sub_2225CF798(v5);
  sub_2225CA520(v7);
  return v3;
}

BOOL sub_2225CF8B4(char **a1)
{
  return !sub_2225CF850(a1);
}

uint64_t sub_2225CF8D0(uint64_t *a1, uint64_t *a2)
{
  sub_2225CDCE8((uint64_t)v8);
  *(void *)&long long v7 = sub_2225CF944(a1, v8);
  *((void *)&v7 + 1) = v4;
  if (sub_2225CDBBC(&v7))
  {
    return v7;
  }
  else
  {
    *a2 = sub_2225CF9C4(v8);
    a2[1] = v5;
    sub_2225CDDC0(&v9);
  }
  return v9;
}

uint64_t sub_2225CF944(uint64_t *a1, _OWORD *a2)
{
  sub_2225CF794(v11);
  v10[0] = sub_2225DBCDC(a1, (uint64_t)v11);
  v10[1] = v4;
  uint64_t v5 = (const char *)sub_2225C3C70((uint64_t)v10);
  int v6 = stat(v5, &v9);
  uint64_t v7 = sub_2225CFE68(v6, (uint64_t)&v9, a2);
  sub_2225CA520(v11);
  return v7;
}

uint64_t sub_2225CF9C4(int *a1)
{
  sub_2225C3D0C(&v2, *a1, *((void *)a1 + 1));
  return v2;
}

uint64_t sub_2225CF9FC(uint64_t *a1, int *a2)
{
  sub_2225CF794(v11);
  v10[0] = sub_2225DBCDC(a1, (uint64_t)v11);
  v10[1] = v4;
  while (1)
  {
    uint64_t v5 = (const char *)sub_2225C3C70((uint64_t)v10);
    int v6 = open(v5, 0);
    *a2 = v6;
    if ((v6 & 0x80000000) == 0) {
      break;
    }
    if (*__error() != 4)
    {
      int v7 = *__error();
      uint64_t v8 = std::generic_category();
      sub_2225CDE14((uint64_t)&v12, v7, (uint64_t)v8);
      goto LABEL_6;
    }
  }
  sub_2225CDDC0(&v12);
LABEL_6:
  sub_2225CA520(v11);
  return v12;
}

uint64_t sub_2225CFA9C(uint64_t *a1, int *a2, char a3, uint64_t a4)
{
  if ((a3 & 8) != 0) {
    int v7 = 514;
  }
  else {
    int v7 = 513;
  }
  if ((a3 & 2) != 0) {
    int v8 = 8;
  }
  else {
    int v8 = 1024;
  }
  unsigned int v9 = v8 & 0xFFFFF7FF | ((a3 & 1) << 11) | v7;
  sub_2225CF794(v18);
  uint64_t v16 = sub_2225DBCDC(a1, (uint64_t)v18);
  uint64_t v17 = v10;
  while (1)
  {
    uint64_t v11 = (const char *)sub_2225C3C70((uint64_t)&v16);
    int v12 = open(v11, v9, a4, v16, v17);
    *a2 = v12;
    if ((v12 & 0x80000000) == 0) {
      break;
    }
    if (*__error() != 4)
    {
      int v13 = *__error();
      uint64_t v14 = std::generic_category();
      sub_2225CDE14((uint64_t)&v19, v13, (uint64_t)v14);
      goto LABEL_12;
    }
  }
  sub_2225CDDC0(&v19);
LABEL_12:
  sub_2225CA520(v18);
  return v19;
}

uint64_t sub_2225CFB70(uint64_t a1, char **a2, long long *a3)
{
  uint64_t v6 = sub_2225CFC64(a1, (uint64_t)a2);
  uint64_t v8 = sub_2225CFCA0(a1, v7);
  sub_2225CFCE8(v16, v6, v8);
  sub_2225CF358((uint64_t)v16);
  sub_2225CBDE8((uint64_t)&v15, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v14, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v13, &byte_2226D1615);
  sub_2225CEF30(v16, a2, &v15.__r_.__value_.__l.__data_, v14, v13);
  v14[0] = (char *)sub_2225CA4D0((uint64_t)v16);
  v14[1] = v9;
  sub_2225CA51C(v14, (uint64_t)&v15);
  sub_2225CCDE4(a1, (uint64_t)&v15);
  std::string::~string(&v15);
  long long v10 = *a3;
  long long v11 = a3[1];
  *(_OWORD *)(a1 + 56) = a3[2];
  *(_OWORD *)(a1 + 40) = v11;
  *(_OWORD *)(a1 + 24) = v10;
  return sub_2225CA520(v16);
}

uint64_t sub_2225CFC64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225CBA9C(a1, a2);

  return sub_2225D0BB0(a1, v3);
}

uint64_t sub_2225CFCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225CBA9C(a1, a2);
  uint64_t v5 = v3 + sub_2225CB920(a1, v4);

  return sub_2225D0BB0(a1, v5);
}

uint64_t sub_2225CFCEC(uint64_t a1, _OWORD *a2)
{
  sub_2225CBDEC((uint64_t)v4, a1);
  return sub_2225CF944(v4, a2);
}

uint64_t sub_2225CFD2C(uint64_t a1)
{
  sub_2225CFD6C((uint64_t)&v3);
  sub_2225CFD70((uint64_t)&v3, *(void *)(a1 + 16));
  return v3;
}

uint64_t sub_2225CFD70(uint64_t result, uint64_t a2)
{
  *(void *)unint64_t result = a2 - 946684800;
  *(_DWORD *)(result + 8) = 0;
  return sub_2225D91F4(result);
}

BOOL sub_2225CFD8C(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_2225CFDB8(uint64_t *a1, char *a2)
{
  sub_2225CF794(v11);
  v10[0] = sub_2225DBCDC(a1, (uint64_t)v11);
  v10[1] = v4;
  uint64_t v5 = (const char *)sub_2225C3C70((uint64_t)v10);
  if (access(v5, 0) == -1)
  {
    if (*__error() != 2)
    {
      int v7 = *__error();
      uint64_t v8 = std::generic_category();
      sub_2225CDE14((uint64_t)&v12, v7, (uint64_t)v8);
      goto LABEL_7;
    }
    char v6 = 0;
  }
  else
  {
    char v6 = 1;
  }
  *a2 = v6;
  sub_2225CDDC0(&v12);
LABEL_7:
  sub_2225CA520(v11);
  return v12;
}

uint64_t sub_2225CFE68(int a1, uint64_t a2, _OWORD *a3)
{
  if (a1)
  {
    int v4 = *__error();
    uint64_t v5 = std::generic_category();
    sub_2225CDE14((uint64_t)&v16, v4, (uint64_t)v5);
    sub_2225CF9F8((uint64_t *)&v13, 2);
    BOOL v6 = sub_2225D07DC((unsigned int *)&v16, (unsigned int *)&v13);
    sub_2225D0A18((uint64_t)&v13, v6);
    long long v10 = v14;
    *a3 = v13;
    a3[1] = v10;
    a3[2] = v15;
  }
  else
  {
    unint64_t v7 = *(unsigned __int16 *)(a2 + 4);
    uint64_t v8 = (v7 >> 12) ^ 8;
    if (v8 == 15) {
      int v9 = 9;
    }
    else {
      int v9 = dword_2226CA01C[v8];
    }
    sub_2225D0A1C((uint64_t)&v13, v9, v7, *(_DWORD *)a2, *(void *)(a2 + 8), *(void *)(a2 + 48), *(_DWORD *)(a2 + 16), *(_DWORD *)(a2 + 20), *(void *)(a2 + 96));
    long long v11 = v14;
    *a3 = v13;
    a3[1] = v11;
    a3[2] = v15;
    sub_2225CDDC0(&v16);
  }
  return v16;
}

uint64_t sub_2225CFF60(int a1, _OWORD *a2)
{
  int v3 = fstat(a1, &v5);
  return sub_2225CFE68(v3, (uint64_t)&v5, a2);
}

uint64_t sub_2225CFF9C(void *a1)
{
  return *a1 + 946684800;
}

uint64_t sub_2225CFFB4(uint64_t a1, int a2, char a3, off_t a4)
{
  uint64_t v8 = sub_2225D00B4(&v18, a2);
  if ((a3 & 1) == 0) {
    sub_2225D00B8(v8);
  }
  if (fstat(a2, &v17) == -1) {
    goto LABEL_17;
  }
  off_t st_size = v17.st_size;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    if (v17.st_size < v10)
    {
      if (ftruncate(a2, v10) == -1)
      {
LABEL_17:
        int v14 = *__error();
        long long v15 = std::generic_category();
        sub_2225CDE14((uint64_t)&v19, v14, (uint64_t)v15);
        goto LABEL_18;
      }
      unint64_t v10 = *(void *)(a1 + 8);
    }
  }
  else
  {
    *(void *)(a1 + 8) = v17.st_size;
    unint64_t v10 = st_size;
  }
  if (*(_DWORD *)a1 == 1) {
    int v11 = 1;
  }
  else {
    int v11 = 2;
  }
  if (*(_DWORD *)a1) {
    int v12 = 3;
  }
  else {
    int v12 = 1;
  }
  long long v13 = mmap(0, v10, v12, v11, a2, a4);
  *(void *)(a1 + 16) = v13;
  if (v13 == (void *)-1) {
    goto LABEL_17;
  }
  sub_2225CDDC0(&v19);
LABEL_18:
  sub_2225D00C4(&v18);
  return v19;
}

_DWORD *sub_2225D00B8(_DWORD *result)
{
  char *result = -1;
  return result;
}

uint64_t sub_2225D00C8(uint64_t a1, int a2, char a3, int a4, unint64_t a5, off_t a6, uint64_t a7)
{
  *(_DWORD *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(void *)(a1 + 16) = 0;
  if (sub_2225CAE1C(a1) >= a5)
  {
    *(void *)a7 = sub_2225CFFB4(a1, a2, a3, a6);
    *(void *)(a7 + 8) = v13;
    if (sub_2225CDBBC((_DWORD *)a7)) {
      *(void *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(void *)a7 = sub_2225CDDD4(22);
    *(void *)(a7 + 8) = v12;
  }
  return a1;
}

uint64_t sub_2225D0160(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2) {
    munmap(v2, *(void *)(a1 + 8));
  }
  return a1;
}

uint64_t sub_2225D0198()
{
  uint64_t v0 = sub_2225D0EB4();
  return sub_2225C3D04(v0);
}

uint64_t sub_2225D01B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225D02D0(v16, a2, a3);
  int v4 = (const char *)sub_2225D02D4((uint64_t)v16);
  stat v5 = opendir(v4);
  if (v5)
  {
    *(void *)(a1 + 8) = v5;
    sub_2225CBDE8((uint64_t)&v12, ".");
    sub_2225CBDE8((uint64_t)v15, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v14, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v13, &byte_2226D1615);
    sub_2225CEF30(v16, &v12.__r_.__value_.__l.__data_, v15, v14, v13);
    v14[0] = (char *)sub_2225CA4D0((uint64_t)v16);
    v14[1] = v6;
    sub_2225CBDF0((uint64_t)v15, (uint64_t)v14);
    sub_2225CDCE8((uint64_t)v11);
    sub_2225D0318((uint64_t)&v12, (uint64_t)v15, v11);
    sub_2225D031C(a1 + 16, (uint64_t)&v12);
    j_std::string::~string(&v12);
    v17[0] = sub_2225D0360(a1);
    v17[1] = v7;
  }
  else
  {
    int v8 = *__error();
    int v9 = std::generic_category();
    sub_2225CDE14((uint64_t)v17, v8, (uint64_t)v9);
  }
  sub_2225CA520(v16);
  return v17[0];
}

uint64_t sub_2225D02D4(uint64_t a1)
{
  char v3 = 0;
  sub_2225C52D8(a1, &v3);
  sub_2225CF758(a1);
  return sub_2225CC180(a1);
}

uint64_t sub_2225D031C(uint64_t a1, uint64_t a2)
{
  sub_2225CCDE4(a1, a2);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  return a1;
}

uint64_t sub_2225D0360(uint64_t a1)
{
  *__error() = 0;
  uint64_t v2 = readdir(*(DIR **)(a1 + 8));
  if (v2)
  {
    d_name = v2->d_name;
    size_t v4 = strlen(v2->d_name);
    uint64_t v5 = sub_2225C3D0C(v13, d_name, v4);
    if (sub_2225C3D04(v5) == 1 && sub_2225CC124(v13, 0) == 46
      || sub_2225C3D04((uint64_t)v13) == 2
      && sub_2225CC124(v13, 0) == 46
      && sub_2225CC124(v13, 1) == 46)
    {
      uint64_t v6 = sub_2225D0360(a1);
LABEL_12:
      v14[0] = v6;
      v14[1] = v7;
      return v14[0];
    }
    sub_2225CBDF0((uint64_t)v12, (uint64_t)v13);
    sub_2225CDCE8((uint64_t)v11);
    sub_2225CFB70(a1 + 16, v12, v11);
    sub_2225CDDC0(v14);
  }
  else
  {
    if (!*__error())
    {
      uint64_t v6 = sub_2225D048C(a1);
      goto LABEL_12;
    }
    int v8 = *__error();
    int v9 = std::generic_category();
    sub_2225CDE14((uint64_t)v14, v8, (uint64_t)v9);
  }
  return v14[0];
}

uint64_t sub_2225D048C(uint64_t a1)
{
  uint64_t v2 = *(DIR **)(a1 + 8);
  if (v2) {
    closedir(v2);
  }
  *(void *)(a1 + 8) = 0;
  sub_2225D04EC((uint64_t)&v4);
  sub_2225D031C(a1 + 16, (uint64_t)&v4);
  j_std::string::~string(&v4);
  sub_2225CDDC0(&v5);
  return v5;
}

void *sub_2225D04F0(void *a1)
{
  uint64_t v2 = sub_2225CCC70(a1);
  sub_2225CCC70(v2 + 2);
  return a1;
}

BOOL sub_2225D0520(uint64_t a1, const void *a2, size_t a3)
{
  return *(void *)(a1 + 8) >= a3 && sub_2225C5A30(*(const void **)a1, a2, a3) == 0;
}

BOOL sub_2225D0558(uint64_t a1)
{
  if (sub_2225D05A4(a1)) {
    return 1;
  }

  return sub_2225D05C4(a1);
}

BOOL sub_2225D05A4(uint64_t a1)
{
  return sub_2225D05E4(a1) == 0;
}

BOOL sub_2225D05C4(uint64_t a1)
{
  return sub_2225D05E4(a1) == 1;
}

uint64_t sub_2225D05E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2225D05EC(void *a1, unsigned __int8 a2, unint64_t a3)
{
  int v4 = a2;
  unint64_t v5 = sub_2225CCCE4(a3, a1[1]);
  while (v5)
  {
    uint64_t result = v5 - 1;
    int v7 = *(unsigned __int8 *)(*a1 + v5-- - 1);
    if (v7 == v4) {
      return result;
    }
  }
  return -1;
}

const void **sub_2225D0648(const void **a1, uint64_t a2)
{
  if (a1 != (const void **)a2)
  {
    unint64_t v4 = sub_2225C5664(a2);
    unint64_t v5 = sub_2225C5664((uint64_t)a1);
    if (v5 >= v4)
    {
      if (v4)
      {
        sub_2225C3C70(a2);
        sub_2225C3C70(a2);
        sub_2225C3C70((uint64_t)a1);
        uint64_t v10 = sub_2225C5DDC();
      }
      else
      {
        uint64_t v10 = sub_2225C3C70((uint64_t)a1);
      }
      uint64_t v16 = v10;
      uint64_t v17 = sub_2225C3D04((uint64_t)a1);
      nullsub_1(v16, v17);
      uint64_t v15 = (uint64_t)a1;
      uint64_t v14 = v16;
    }
    else
    {
      unint64_t v6 = v5;
      if (sub_2225CE28C((uint64_t)a1) >= v4)
      {
        if (v6)
        {
          sub_2225C3C70(a2);
          sub_2225C3C70(a2);
          sub_2225C3C70((uint64_t)a1);
          sub_2225C5DDC();
        }
      }
      else
      {
        uint64_t v7 = sub_2225C3C70((uint64_t)a1);
        uint64_t v8 = sub_2225C3D04((uint64_t)a1);
        nullsub_1(v7, v8);
        uint64_t v9 = sub_2225C3C70((uint64_t)a1);
        sub_2225C5B6C((uint64_t)a1, v9);
        sub_2225C5B48(a1, v4);
        unint64_t v6 = 0;
      }
      int v11 = (void *)(sub_2225C3C70(a2) + v6);
      uint64_t v12 = sub_2225C3D04(a2);
      uint64_t v13 = sub_2225C3C70((uint64_t)a1);
      sub_2225D0844(v11, v12, (void *)(v13 + v6));
      uint64_t v14 = sub_2225C3C70((uint64_t)a1) + v4;
      uint64_t v15 = (uint64_t)a1;
    }
    sub_2225C5B6C(v15, v14);
  }
  return a1;
}

BOOL sub_2225D07DC(unsigned int *a1, unsigned int *a2)
{
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  uint64_t v5 = sub_2225C3D04((uint64_t)a2);
  BOOL result = sub_2225D085C(v4, v5);
  if (result)
  {
    int v7 = sub_2225C3B40(a1);
    return v7 == sub_2225C3B40(a2);
  }
  return result;
}

void *sub_2225D0844(void *__src, uint64_t a2, void *__dst)
{
  return memcpy(__dst, __src, a2 - (void)__src);
}

BOOL sub_2225D085C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_2225D0868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  if (sub_2225D05A4(a1) || sub_2225D05A4(a2))
  {
    return sub_2225D099C(a3, 0);
  }
  uint64_t result = sub_2225D05C4(v4);
  if (result)
  {
    *(_OWORD *)a3 = *(_OWORD *)a2;
    uint64_t v7 = *(void *)(a2 + 16);
LABEL_10:
    *(void *)(a3 + 16) = v7;
    return result;
  }
  uint64_t result = sub_2225D05C4(a2);
  if (result)
  {
    *(_OWORD *)a3 = *(_OWORD *)v4;
    uint64_t v7 = *(void *)(v4 + 16);
    goto LABEL_10;
  }
  if (sub_2225D09A0(v4))
  {
    uint64_t v8 = *(void *)v4;
    char v9 = sub_2225D05E4(v4);
    uint64_t v4 = v8;
  }
  else
  {
    char v9 = 2;
  }
  if (sub_2225D09A0(a2))
  {
    uint64_t v10 = *(void *)a2;
    char v11 = sub_2225D05E4(a2);
    a2 = v10;
  }
  else
  {
    char v11 = 2;
  }

  return sub_2225D09E0(a3, v4, v9, a2, v11);
}

BOOL sub_2225D09A0(uint64_t a1)
{
  return sub_2225D09F4(a1) == 1 && !sub_2225D0558(a1);
}

uint64_t sub_2225D09E4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  *(unsigned char *)(result + 17) = 1;
  return result;
}

uint64_t sub_2225D09F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_2225D09FC(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a4;
  *(unsigned char *)(result + 16) = a3;
  *(unsigned char *)(result + 17) = a5;
  return result;
}

uint64_t sub_2225D0A0C(uint64_t result)
{
  *(void *)uint64_t result = 0;
  *(_DWORD *)(result + 8) = 0;
  return result;
}

uint64_t sub_2225D0A1C(uint64_t result, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9)
{
  return sub_2225D0A44(result, a2, a3, a4, a5, a6, a7, a8, a9);
}

double sub_2225D0A28(uint64_t a1, int a2)
{
  *(_DWORD *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 44) = 0xFFFF;
  return result;
}

uint64_t sub_2225D0A44(uint64_t result, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9)
{
  *(_DWORD *)double result = a4;
  *(void *)(result + 8) = a5;
  *(void *)(result + 16) = a6;
  *(_DWORD *)(result + 24) = a7;
  *(_DWORD *)(result + 28) = a8;
  *(void *)(result + 32) = a9;
  *(_DWORD *)(result + 40) = a2;
  *(_DWORD *)(result + 44) = a3;
  return result;
}

_DWORD *sub_2225D0A60(_DWORD *result, int a2)
{
  char *result = a2;
  return result;
}

int *sub_2225D0A68(int *a1)
{
  int v2 = *a1;
  if ((v2 & 0x80000000) == 0) {
    close(v2);
  }
  return a1;
}

uint64_t sub_2225D0A98(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_2225DBA20(a2, (std::string *)a1);
  long long v5 = *a3;
  long long v6 = a3[1];
  *(_OWORD *)(a1 + 56) = a3[2];
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_2225D0AE0(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD04(a1);
  sub_2225CDCE8(v2 + 24);
  return a1;
}

uint64_t sub_2225D0B14()
{
  return sub_2225C69CC();
}

uint64_t *sub_2225D0B1C(uint64_t *a1, int a2)
{
  *a1 = sub_2225CDDD4(a2);
  a1[1] = v3;
  return a1;
}

uint64_t sub_2225D0B50()
{
  return sub_2225C69CC();
}

uint64_t sub_2225D0B58(uint64_t a1)
{
  return sub_2225D0B60(a1, 4u);
}

uint64_t sub_2225D0B60(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 16 * a2);
}

uint64_t sub_2225D0B68(uint64_t a1, char *a2, char *a3)
{
  long long v6 = (const void **)sub_2225C69CC();
  sub_2225C5A88(v6, a2, a3);
  return a1;
}

uint64_t sub_2225D0BB0(uint64_t a1, uint64_t a2)
{
  sub_2225C64B8(&v3, a2);
  return v3;
}

uint64_t sub_2225D0BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = (const void **)sub_2225C69CC();
  sub_2225D0C24(v6, a2, a3);
  return a1;
}

uint64_t sub_2225D0C24(const void **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2225D0CD8(a2, a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > v7 - sub_2225C3D04((uint64_t)a1))
  {
    uint64_t v8 = sub_2225C5664((uint64_t)a1);
    sub_2225C5B48(a1, v8 + v6);
  }
  char v9 = (unsigned char *)sub_2225C3D04((uint64_t)a1);
  sub_2225D0CDC(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_2225D0CDC(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_2225D0D58(a1, a2, a3);
  return v3;
}

uint64_t sub_2225D0CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  return sub_2225D0D24((uint64_t)&v3, (uint64_t)&v4);
}

uint64_t sub_2225D0D24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return v3 - sub_2225C3C70(a2);
}

uint64_t sub_2225D0D58(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  for (i = a3; sub_2225D0DF0((uint64_t)&v6, (uint64_t)&v5); ++i)
  {
    if (sub_2225C5C08()) {
      break;
    }
    unsigned char *i = *(unsigned char *)sub_2225C3C70((uint64_t)&v6);
    sub_2225D0E0C(&v6);
  }
  sub_2225C5C10(&v7, &v6, &i);
  return v7;
}

BOOL sub_2225D0DF0(uint64_t a1, uint64_t a2)
{
  return !sub_2225D0E1C(a1, a2);
}

void *sub_2225D0E0C(void *result)
{
  return result;
}

BOOL sub_2225D0E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return v3 == sub_2225C3C70(a2);
}

uint64_t sub_2225D0E54(unsigned int *a1, uint64_t a2)
{
  return nullsub_1(*a1, a2);
}

uint64_t sub_2225D0E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v4 = (char *)sub_2225C3C70((uint64_t)v7);
  uint64_t v5 = (char *)sub_2225C3C78(v7);
  return sub_2225D0B68(a1, v4, v5);
}

uint64_t sub_2225D0EB4()
{
  unint64_t v0 = 0x267F7E000uLL;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E0E8, memory_order_acquire) & 1) == 0)
  {
    int v2 = __cxa_guard_acquire(&qword_267F7E0E8);
    unint64_t v0 = 0x267F7E000;
    if (v2)
    {
      uint64_t v3 = sub_2225C26A4(16);
      qword_267F7E0E0 = sub_2225D0F1C(v3);
      __cxa_guard_release(&qword_267F7E0E8);
      unint64_t v0 = 0x267F7E000;
    }
  }
  return *(void *)(v0 + 224);
}

uint64_t sub_2225D0F2C()
{
  unint64_t v0 = 0x267F7E000uLL;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E0F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267F7E0F8))
  {
    uint64_t v3 = (uint64_t *)sub_2225C26A4(16);
    *uint64_t v3 = sub_2225D92D8();
    v3[1] = v4;
    qword_267F7E0F0 = (uint64_t)v3;
    unint64_t v0 = 0x267F7E000;
    __cxa_guard_release(&qword_267F7E0F8);
  }
  v5[0] = sub_2225D92D8();
  v5[1] = v1;
  return sub_2225D12D4((uint64_t)v5, *(void *)(v0 + 240));
}

uint64_t sub_2225D0FB8(uint64_t *a1)
{
  char v5 = 0;
  v4[0] = sub_2225CFDB8(a1, &v5);
  v4[1] = v1;
  int v2 = sub_2225CDBBC(v4);
  return (v5 != 0) & ~v2;
}

uint64_t sub_2225D1000()
{
  sub_2225D1028((uint64_t)&v1);
  return v1;
}

uint64_t sub_2225D1028@<X0>(uint64_t a1@<X8>)
{
  getrusage(0, &v5);
  sub_2225D1320(v4, v5.ru_utime.tv_sec, (1000 * v5.ru_utime.tv_usec));
  sub_2225D1320(v3, v5.ru_stime.tv_sec, (1000 * v5.ru_stime.tv_usec));
  return sub_2225CCC60((uint64_t)v4, (uint64_t)v3, a1);
}

uint64_t sub_2225D1098()
{
  sub_2225D1028((uint64_t)v1);
  return v1[2];
}

void *sub_2225D10C0(void *a1)
{
  *sub_2225D1110(a1) = &unk_26D4DB668;
  a1[1] = j__getpagesize();
  return a1;
}

void *sub_2225D1110(void *result)
{
  char *result = &unk_26D4DB6A8;
  return result;
}

BOOL sub_2225D1134(int a1)
{
  return isatty(a1) != 0;
}

BOOL sub_2225D1154(int a1)
{
  BOOL result = sub_2225D1134(a1);
  if (result)
  {
    return sub_2225D119C(a1);
  }
  return result;
}

BOOL sub_2225D119C(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E110, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267F7E110))
  {
    sub_2225CBCAC((pthread_mutex_t **)&unk_267F7E100, 1);
    __cxa_atexit((void (*)(void *))sub_2225CBCB0, &unk_267F7E100, &dword_2225BD000);
    __cxa_guard_release(&qword_267F7E110);
  }
  sub_2225CBCB4(&v7, (uint64_t)&unk_267F7E100);
  int v6 = 0;
  int v2 = setupterm(0, a1, &v6);
  BOOL v3 = 0;
  if (!v2)
  {
    BOOL v3 = tigetnum("colors") > 0;
    uint64_t v4 = set_curterm(0);
    del_curterm(v4);
  }
  sub_2225CBCB8(&v7);
  return v3;
}

BOOL sub_2225D1280()
{
  return sub_2225D1154(2);
}

char *sub_2225D1288(char a1, int a2, int a3)
{
  return &a030m[160 * a3 + 80 * a2 + 10 * (a1 & 7)];
}

const char *sub_2225D12B0()
{
  return "\x1B[1m";
}

const char *sub_2225D12BC()
{
  return "\x1B[7m";
}

const char *sub_2225D12C8()
{
  return "\x1B[0m";
}

uint64_t sub_2225D12D4(uint64_t a1, uint64_t a2)
{
  sub_2225D1320(&v3, *(void *)a1 - *(void *)a2, (*(_DWORD *)(a1 + 8) - *(_DWORD *)(a2 + 8)));
  sub_2225D91F4((uint64_t)&v3);
  return v3;
}

uint64_t sub_2225D1324(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  sub_2225D91F4(a1);
  return a1;
}

uint64_t sub_2225D1358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D13DC((uint64_t)&v12, a2);
  uint64_t v5 = *(void *)(v4 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v7 = (void *)j_nullsub_1(a2, v6);
  v7[1] = 0;
  void v7[2] = 0;
  *uint64_t v7 = 0;
  nullsub_1(a2, 0);
  if ((sub_2225CBAF8(a1, v8) & 1) == 0)
  {
    uint64_t v10 = sub_2225CB920(a1, v9);
    nullsub_1(a1, v10);
  }
  return a1;
}

uint64_t sub_2225D13DC(uint64_t a1, uint64_t a2)
{
  if ((sub_2225CBAF8(a2, a2) & 1) == 0) {
    nullsub_1(a2, v3);
  }
  return a2;
}

uint64_t sub_2225D1414(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = (void *)j_j_nullsub_1(a1);
  uint64_t v7 = j_j_nullsub_1(a2);
  uint64_t v8 = sub_2225D1950(v6, v7, a3);
  return sub_2225C5F20(a1, (uint64_t)v8);
}

uint64_t sub_2225D1480()
{
  sub_2225CDDC0(&v1);
  return v1;
}

uint64_t sub_2225D14A8(uint64_t a1)
{
  uint64_t v1 = j_j_nullsub_1(a1);
  unint64_t v2 = sub_2225CAE1C(v1);
  return (v2 >> (v2 > (unint64_t)sub_2225CAE1C(v2) >> 1)) - 8;
}

void sub_2225D14E4()
{
}

BOOL sub_2225D14FC(unint64_t a1)
{
  return a1 < 0x17;
}

unint64_t sub_2225D1508(unint64_t a1)
{
  if (a1 < 0x17) {
    return 22;
  }
  unint64_t result = sub_2225D1630(a1 + 1);
  if (result != 24) {
    --result;
  }
  return result;
}

void *sub_2225D1544(uint64_t a1, uint64_t a2)
{
  unint64_t result = (void *)j_nullsub_1(a1, a2);
  void *result = a2;
  return result;
}

uint64_t sub_2225D156C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = j_nullsub_1(a1, a2);
  *(void *)(v4 + 16) = *(void *)(v4 + 16) & 0x8000000000000000 | a2 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t result = j_nullsub_1(a1, v5);
  *(void *)(result + 16) |= 0x8000000000000000;
  return result;
}

uint64_t sub_2225D15B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225D15E8(uint64_t a1, unint64_t a2)
{
  if (sub_2225CAE1C(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(a2, 1);
}

unint64_t sub_2225D1630(uint64_t a1)
{
  return (a1 + 7) & 0xFFFFFFFFFFFFFFF8;
}

uint64_t sub_2225D163C()
{
  return sub_2225C5DDC();
}

uint64_t sub_2225D1644@<X0>(std::string *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_2225CD0D0(a1, a2);

  return sub_2225D1354(a3, v4);
}

BOOL sub_2225D1680(uint64_t a1, uint64_t a2, const void *a3, size_t a4)
{
  return !sub_2225CD4BC(a1, a2, a3, a4);
}

uint64_t sub_2225D169C@<X0>(std::string *a1@<X0>, const std::string::value_type *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = std::string::append(a1, a2);

  return sub_2225D1354(a3, v4);
}

unsigned char *sub_2225D16D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_2225CB920(a1, a2);
  uint64_t v7 = sub_2225CBC1C(a2);
  j_j_j_nullsub_1(a1);
  nullsub_1(&v16, v8);
  uint64_t v9 = sub_2225D179C(a3, v7 + v6, &v17);
  uint64_t v11 = sub_2225CBA9C(v9, v10);
  uint64_t v13 = nullsub_1(v11, v12);
  sub_2225CBED4(a1, v14);
  sub_2225D15B4(v13);
  sub_2225D15B4(v13 + v6);
  return sub_2225D17A0((unsigned char *)(v13 + v6 + v7), 1, 0);
}

unsigned char *sub_2225D17A0(unsigned char *a1, uint64_t a2, char a3)
{
  char v5 = a3;
  sub_2225D18F0(a1, a2, &v5);
  return a1;
}

uint64_t sub_2225D17D8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225D18B0(a1, (uint64_t)&v12, a3);
  if (sub_2225D14A8(v5) < a2) {
    sub_2225D14E4();
  }
  if (sub_2225D14FC(a2))
  {
    uint64_t v7 = (void *)j_nullsub_1(a1, v6);
    v7[1] = 0;
    void v7[2] = 0;
    *uint64_t v7 = 0;
    sub_2225CBBB0(a1, a2);
  }
  else
  {
    uint64_t v8 = sub_2225D1508(a2) + 1;
    uint64_t v9 = j_j_nullsub_1(a1);
    uint64_t v10 = sub_2225D18B4(v9, v8);
    nullsub_1(v10, v8);
    sub_2225D156C(a1, v8);
    sub_2225D1544(a1, v10);
    sub_2225CBB88(a1, a2);
  }
  nullsub_1(a1, a2);
  return a1;
}

uint64_t sub_2225D18B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = nullsub_1(a1, a2);

  return nullsub_1(v4, a3);
}

unsigned char *sub_2225D18F0(unsigned char *a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = nullsub_1(a2, a2);

  return sub_2225D1938(a1, v5, a3);
}

unsigned char *sub_2225D1938(unsigned char *result, uint64_t a2, unsigned char *a3)
{
    *result++ = *a3;
  return result;
}

void *sub_2225D1950(void *a1, uint64_t a2, char *a3)
{
  uint64_t result = j__memchr(a1, *a3, a2 - (void)a1);
  if (!result) {
    return (void *)a2;
  }
  return result;
}

_DWORD *sub_2225D1984(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  v11[0] = a2;
  v11[1] = a3;
  uint64_t v6 = (_OWORD *)sub_2225C26A4(32);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *(void *)a1 = v6;
  uint64_t v7 = sub_2225C3C78(v11);
  uint64_t v8 = *(void *)a1;
  *(void *)(*(void *)a1 + 16) = v7;
  uint64_t v9 = (char *)sub_2225C3C70((uint64_t)v11);
  a1[2] = sub_2225E8EBC(v8, v9, ((4 * (_BYTE)a4) & 8 | (2 * (a4 & 1)) | (a4 >> 2) & 1) ^ 0x21);
  return a1;
}

void **sub_2225D1A18(void **a1)
{
  unint64_t v2 = *a1;
  if (v2)
  {
    sub_2225EE328((uint64_t)v2);
    if (*a1) {
      j__free(*a1);
    }
  }
  return a1;
}

BOOL sub_2225D1A58(uint64_t a1, std::string *a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  if (v2)
  {
    size_t v5 = sub_2225EB6B8(*(_DWORD *)(a1 + 8), *(void *)a1, 0, 0);
    sub_2225CB8F0(a2, v5 - 1);
    int v6 = *(_DWORD *)(a1 + 8);
    uint64_t v7 = *(void *)a1;
    uint64_t v8 = (unsigned char *)sub_2225CB8F8((uint64_t)a2, 0);
    sub_2225EB6B8(v6, v7, v8, v5);
  }
  return v2 == 0;
}

uint64_t sub_2225D1AE8(_DWORD *a1, uint64_t a2, uint64_t a3, void *a4)
{
  v22[19] = *(const void **)MEMORY[0x263EF8340];
  v21[0] = a2;
  v21[1] = a3;
  if (a4) {
    unsigned int v6 = *(_DWORD *)(*(void *)a1 + 8) + 1;
  }
  else {
    unsigned int v6 = 0;
  }
  sub_2225D1CB8((uint64_t)v22);
  if (v6 <= 1) {
    unsigned int v7 = 1;
  }
  else {
    unsigned int v7 = v6;
  }
  sub_2225D1CBC(v22, v7);
  *(void *)sub_2225D1DB0((uint64_t)v22, 0) = 0;
  uint64_t v8 = sub_2225C3D04((uint64_t)v21);
  *(void *)(sub_2225D1DB0((uint64_t)v22, 0) + 8) = v8;
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = (char *)sub_2225C3C70((uint64_t)v21);
  uint64_t v11 = (void *)sub_2225CC180((uint64_t)v22);
  int v12 = sub_2225EB860(v9, v10, v6, v11, 4);
  if (v12)
  {
    uint64_t v13 = 0;
    if (v12 != 1)
    {
      uint64_t v13 = 0;
      a1[2] = v12;
    }
  }
  else
  {
    if (a4)
    {
      sub_2225C5D90(a4);
      if (v6)
      {
        for (unsigned int i = 0; i != v6; ++i)
        {
          if (*(void *)sub_2225D1DB0((uint64_t)v22, i) == -1)
          {
            sub_2225CCC70(&v20);
          }
          else
          {
            uint64_t v15 = sub_2225C3C70((uint64_t)v21);
            uint64_t v16 = v15 + *(void *)sub_2225D1DB0((uint64_t)v22, i);
            uint64_t v17 = *(void *)(sub_2225D1DB0((uint64_t)v22, i) + 8);
            int v18 = (void *)sub_2225D1DB0((uint64_t)v22, i);
            sub_2225C3D0C(&v20, v16, v17 - *v18);
          }
          sub_2225CC69C((uint64_t)a4, &v20);
        }
      }
    }
    uint64_t v13 = 1;
  }
  sub_2225C56C4(v22);
  return v13;
}

unint64_t sub_2225D1CBC(const void **a1, unsigned int a2)
{
  unint64_t v3 = a2;
  if (sub_2225D1E3C((uint64_t)a1) <= (unint64_t)a2)
  {
    unint64_t result = sub_2225D1E3C((uint64_t)a1);
    if (result >= v3) {
      return result;
    }
    if (sub_2225D1F94((uint64_t)a1) < v3) {
      sub_2225CC834(a1, v3);
    }
    unsigned int v7 = (void *)sub_2225C3D04((uint64_t)a1);
    uint64_t v8 = sub_2225C3C70((uint64_t)a1) + 16 * v3;
    if (v7 != (void *)v8) {
      bzero(v7, ((v8 - (void)v7 - 16) & 0xFFFFFFFFFFFFFFF0) + 16);
    }
  }
  else
  {
    uint64_t v4 = sub_2225C3C70((uint64_t)a1) + 16 * v3;
    uint64_t v5 = sub_2225C3D04((uint64_t)a1);
    nullsub_1(v4, v5);
  }
  uint64_t v9 = sub_2225C3C70((uint64_t)a1) + 16 * v3;

  return sub_2225C5B6C((uint64_t)a1, v9);
}

uint64_t sub_2225D1DB0(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 16 * a2;
}

uint64_t sub_2225D1DDC(uint64_t *a1, unsigned int a2, _DWORD *a3)
{
  unint64_t v5 = 0;
  if ((sub_2225D8D24(*a1, a1[1], a2, &v5) & 1) != 0 || HIDWORD(v5)) {
    return 1;
  }
  uint64_t result = 0;
  *a3 = v5;
  return result;
}

uint64_t sub_2225D1E3C(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return (v2 - sub_2225C3C70(a1)) >> 4;
}

uint64_t sub_2225D1E74@<X0>(std::string::value_type *__s@<X0>, std::string *this@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = std::string::insert(this, 0, __s);

  return sub_2225D1354(a3, v4);
}

uint64_t sub_2225D1EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  v9[0] = a1;
  v9[1] = a2;
  sub_2225CAD04(a3);
  uint64_t result = sub_2225C3D04((uint64_t)v9);
  uint64_t v5 = result;
  if (result)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = sub_2225CC124(v9, v6);
      if (j__strchr("()^$|*+?.[]\\{}", v7)) {
        sub_2225CCA44(a3, 92);
      }
      std::string::value_type v8 = sub_2225CC124(v9, v6);
      uint64_t result = (uint64_t)sub_2225CCA44(a3, v8);
      ++v6;
    }
    while (v5 != v6);
  }
  return result;
}

uint64_t sub_2225D1F64(uint64_t a1, unint64_t a2)
{
  return sub_2225D15E8(a1, a2);
}

uint64_t sub_2225D1F8C(uint64_t a1)
{
  return sub_2225D0B60(a1, 8u);
}

uint64_t sub_2225D1F94(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return (v2 - sub_2225C3C70(a1)) >> 4;
}

uint64_t sub_2225D1FCC(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  uint64_t v6 = sub_2225CADD8(a1, &v9, &v8);
  sub_2225D2020(v6, a2, a3);
  return a1;
}

uint64_t sub_2225D2020(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  unint64_t v6 = sub_2225C5B3C((uint64_t)a2, (uint64_t)a3);

  return sub_2225D207C(a1, a2, a3, v6);
}

uint64_t sub_2225D207C(uint64_t a1, unsigned char *a2, unsigned char *a3, unint64_t a4)
{
  if (sub_2225D14A8(a1) < a4) {
    sub_2225D14E4();
  }
  if (sub_2225D14FC(a4))
  {
    sub_2225CBBB0(a1, a4);
    char v9 = (unsigned char *)sub_2225CBB18(a1, v8);
  }
  else
  {
    uint64_t v10 = j_j_nullsub_1(a1);
    unint64_t v11 = sub_2225D1508(a4);
    char v9 = (unsigned char *)sub_2225D1F64(v10, v11 + 1);
    uint64_t v13 = v12;
    nullsub_1(v9, v12);
    sub_2225D1544(a1, (uint64_t)v9);
    sub_2225D156C(a1, v13);
    sub_2225CBB88(a1, a4);
  }
  while (a2 != a3)
    sub_2225CBB7C(v9++, a2++);
  char v15 = 0;
  sub_2225CBB7C(v9, &v15);
  return nullsub_1(a1, a4);
}

BOOL sub_2225D2188()
{
  sub_2225D21D4();
  sub_2225D2268((uint64_t)&unk_267F7E118);
  sub_2225D22C0();
  sub_2225D21D4();

  return sub_2225D2358((uint64_t)&unk_267F7E118);
}

void sub_2225D21D4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E128, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267F7E128))
  {
    sub_2225CBCAC((pthread_mutex_t **)&unk_267F7E118, 1);
    __cxa_atexit((void (*)(void *))sub_2225CBCB0, &unk_267F7E118, &dword_2225BD000);
    __cxa_guard_release(&qword_267F7E128);
  }
}

BOOL sub_2225D2268(uint64_t a1)
{
  if (sub_2225D918C())
  {
    return sub_2225CE3BC((pthread_mutex_t **)a1);
  }
  else
  {
    ++*(_DWORD *)(a1 + 8);
    return 1;
  }
}

unint64_t sub_2225D22C0()
{
  sub_2225D23B0();
  unint64_t result = sub_2225D24AC(qword_267F7E130);
  uint64_t v1 = result;
  if (result)
  {
    uint64_t v2 = 0;
    do
    {
      sub_2225D23B0();
      uint64_t v3 = sub_2225D2440(qword_267F7E130, v2);
      uint64_t v4 = (const char *)sub_2225CBED0(v3);
      unint64_t result = stat(v4, &v5);
      if (!result && (v5.st_mode & 0xF000) == 0x8000) {
        unint64_t result = unlink(v4);
      }
      ++v2;
    }
    while (v1 != v2);
  }
  return result;
}

BOOL sub_2225D2358(uint64_t a1)
{
  if (sub_2225D918C())
  {
    return sub_2225CE3E0((pthread_mutex_t **)a1);
  }
  else
  {
    --*(_DWORD *)(a1 + 8);
    return 1;
  }
}

void sub_2225D23B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E148, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267F7E148))
  {
    sub_2225D250C(qword_267F7E130);
    __cxa_atexit((void (*)(void *))sub_2225D2510, qword_267F7E130, &dword_2225BD000);
    __cxa_guard_release(&qword_267F7E148);
  }
}

uint64_t sub_2225D2440(void *a1, uint64_t a2)
{
  return *a1 + 24 * a2;
}

uint64_t sub_2225D2450(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_2225D2794(a1, a2);
  }
  else
  {
    sub_2225D2720((uint64_t)a1, a2);
    uint64_t result = v4 + 24;
  }
  a1[1] = result;
  return result;
}

unint64_t sub_2225D24AC(void *a1)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3);
}

uint64_t sub_2225D24C8(uint64_t a1)
{
  return sub_2225D0BB0(a1, *(void *)(a1 + 8));
}

uint64_t sub_2225D24D4(int a1)
{
  uint64_t v2 = pthread_self();

  return pthread_kill(v2, a1);
}

void *sub_2225D2514(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  uint64_t v4 = 0;
  sub_2225D2558(a1 + 2, &v4, &v3);
  return a1;
}

uint64_t sub_2225D255C(void *a1)
{
  uint64_t v1 = sub_2225D2584(a1);

  return j_j_nullsub_1(v1);
}

void *sub_2225D2584(void *result)
{
  void *result = 0;
  return result;
}

uint64_t sub_2225D258C(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2225D25CC(&v3);
  return a1;
}

uint64_t *sub_2225D25CC(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2225D2644(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    unint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    unint64_t v9 = sub_2225D2658(v6, v8);
    return (uint64_t *)sub_2225D264C(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2225D2644(uint64_t *a1)
{
  return sub_2225D2698((uint64_t)a1, *a1);
}

uint64_t sub_2225D2650(uint64_t a1, uint64_t a2)
{
  return j_nullsub_1(a1 + 16, a2);
}

unint64_t sub_2225D2658(void *a1, uint64_t a2)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 3);
}

uint64_t sub_2225D2698(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_2225D2700(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 24;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

void sub_2225D2704(int a1, std::string *this)
{
}

uint64_t sub_2225D270C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 24 * a3, 8);
}

void *sub_2225D2720(uint64_t a1, uint64_t a2)
{
  sub_2225D2844(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_2225D2848(v5, v7, a2);
  v10 += 24;
  return sub_2225D284C(&v9);
}

uint64_t sub_2225D2794(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  unint64_t v5 = sub_2225D24AC(a1);
  unint64_t v6 = sub_2225D2880(a1, v5 + 1);
  unint64_t v7 = sub_2225D24AC(a1);
  sub_2225D28FC(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2225D2848(v4, v9, a2);
  v13 += 24;
  sub_2225D2900(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225D29F0(v12);
  return v10;
}

void *sub_2225D2850(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t *result = a2;
  uint64_t v3 = *(void *)(a2 + 8);
  result[1] = v3;
  result[2] = v3 + 24 * a3;
  return result;
}

uint64_t sub_2225D2868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225D1354(a2, a3);
}

void *sub_2225D2874(void *result)
{
  *(void *)(*result + 8) = result[1];
  return result;
}

unint64_t sub_2225D2880(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_2225D29F4((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_2225D2658(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_2225D2900(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_2225D2BB4(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  unint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  unint64_t v11 = sub_2225D24AC(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_2225D29F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_2225D2A4C(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

void sub_2225D2A34()
{
}

uint64_t sub_2225D2A50()
{
  return 0xAAAAAAAAAAAAAAALL;
}

uint64_t *sub_2225D2A5C(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_2225D2AF0(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 24 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 24 * v9;
  return a1;
}

uint64_t sub_2225D2AF0(uint64_t a1, unint64_t a2)
{
  return sub_2225D2B60(a1, a2);
}

uint64_t sub_2225D2B18(uint64_t a1)
{
  return sub_2225D2BAC(a1 + 24);
}

uint64_t sub_2225D2B20(uint64_t a1, uint64_t a2)
{
  return j_nullsub_1(a1 + 24, a2);
}

void *sub_2225D2B28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225D2584(a1);
  sub_2225C6954(v5 + 1, a3);
  return a1;
}

uint64_t sub_2225D2B60(uint64_t a1, unint64_t a2)
{
  if (sub_2225D2A4C(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(24 * a2, 8);
}

uint64_t sub_2225D2BAC(uint64_t a1)
{
  return sub_2225C3C70(a1 + 8);
}

uint64_t sub_2225D2BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_2225D2CF8((uint64_t)&v16);
    uint64_t v9 = sub_2225D2CFC((uint64_t)v18);
    sub_2225D2848(a1, v8, v9);
    sub_2225D2D08((uint64_t)v18);
    sub_2225D2D08((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_2225D2C84@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *a1;
  uint64_t v4 = *((void *)a1 + 2);
  return sub_2225D2D24(a2, &v3);
}

BOOL sub_2225D2CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3D04(a1);
  return v3 != sub_2225C3D04(a2);
}

uint64_t sub_2225D2CFC(uint64_t a1)
{
  return *(void *)(a1 + 8) - 24;
}

uint64_t sub_2225D2D08(uint64_t result)
{
  *(void *)(result + 8) -= 24;
  return result;
}

unsigned char *sub_2225D2D18(unsigned char *result)
{
  uint64_t *result = 1;
  return result;
}

unsigned char *sub_2225D2D28(unsigned char *result)
{
  uint64_t *result = 0;
  return result;
}

void *sub_2225D2D30(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *result = a2;
  result[1] = a3;
  result[2] = a4;
  return result;
}

uint64_t sub_2225D2D3C(uint64_t a1)
{
  uint64_t v1 = sub_2225D2D64(a1);

  return nullsub_1(v1, v2);
}

void *sub_2225D2D68(void *result, uint64_t a2)
{
  uint64_t *result = a2;
  result[1] = a2;
  return result;
}

uint64_t *sub_2225D2D70(uint64_t *a1)
{
  sub_2225D2DD0((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    unint64_t v5 = sub_2225D2DD8(a1, v4);
    sub_2225D264C(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_2225D2DD0(uint64_t a1)
{
  return sub_2225D2E18(a1, *(void *)(a1 + 8));
}

unint64_t sub_2225D2DD8(void *a1, uint64_t a2)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 3);
}

uint64_t sub_2225D2E1C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 24;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = sub_2225D2700(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_2225D2E88(uint64_t *a1)
{
  return sub_2225D0BB0((uint64_t)a1, *a1);
}

uint64_t sub_2225D2E90(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_2225D24AC(a1);
  sub_2225D2698((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

uint64_t *sub_2225D2EE8(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225C3C70(a2);
  return a1;
}

void *sub_2225D2F18(uint64_t a1)
{
  free(*(void **)(a1 + 8));
  unsigned int v2 = *(_DWORD *)(a1 + 20);
  if (v2 < 0x11) {
    unsigned int v3 = 32;
  }
  else {
    unsigned int v3 = 1 << (sub_2225D2FA4(v2) + 1);
  }
  *(_DWORD *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 16) = v3;
  unint64_t v4 = malloc_type_malloc(8 * v3, 0x80040B8603338uLL);
  *(void *)(a1 + 8) = v4;
  size_t v5 = 8 * *(unsigned int *)(a1 + 16);

  return memset(v4, 255, v5);
}

uint64_t sub_2225D2FA4(int a1)
{
  return 32 - sub_2225CAC60(a1 - 1, 2);
}

uint64_t sub_2225D2FCC(uint64_t a1, uint64_t a2)
{
  if (sub_2225D30D8((void *)a1))
  {
    unint64_t v4 = *(void **)a1;
    uint64_t v5 = *(unsigned int *)(a1 + 20);
    if (v5)
    {
      uint64_t v6 = 8 * v5;
      uint64_t v7 = *(void **)a1;
      while (*v7 != a2)
      {
        ++v7;
        v6 -= 8;
        if (!v6) {
          goto LABEL_6;
        }
      }
      return 0;
    }
LABEL_6:
    unsigned int v8 = *(_DWORD *)(a1 + 16);
    if (v5 < v8)
    {
      *(_DWORD *)(a1 + 20) = v5 + 1;
      v4[v5] = a2;
      return 1;
    }
  }
  else
  {
    unsigned int v8 = *(_DWORD *)(a1 + 16);
    LODWORD(v5) = *(_DWORD *)(a1 + 20);
  }
  if (3 * v8 <= 4 * (int)v5)
  {
    if (v8 >= 0x40) {
      v8 *= 2;
    }
    else {
      unsigned int v8 = 128;
    }
    goto LABEL_15;
  }
  if (v8 - v5 - *(_DWORD *)(a1 + 24) < v8 >> 3) {
LABEL_15:
  }
    sub_2225D30E8(a1, v8);
  uint64_t v9 = sub_2225D31DC(a1, a2);
  if (*v9 != a2)
  {
    uint64_t v11 = v9;
    uint64_t v10 = *v9;
    if (v10 == sub_2225D3294()) {
      --*(_DWORD *)(a1 + 24);
    }
    uint64_t *v11 = a2;
    ++*(_DWORD *)(a1 + 20);
    return 1;
  }
  return 0;
}

BOOL sub_2225D30D8(void *a1)
{
  return a1[1] == *a1;
}

void sub_2225D30E8(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  uint64_t v5 = *(uint64_t **)(a1 + 8);
  BOOL v6 = sub_2225D30D8((void *)a1);
  uint64_t v7 = malloc_type_malloc(8 * a2, 0x80040B8603338uLL);
  *(void *)(a1 + 8) = v7;
  *(_DWORD *)(a1 + 16) = a2;
  memset(v7, 255, 8 * a2);
  if (v6)
  {
    uint64_t v8 = *(unsigned int *)(a1 + 20);
    if (v8)
    {
      uint64_t v9 = 8 * v8;
      do
      {
        uint64_t v10 = *v5++;
        *sub_2225D31DC(a1, v10) = v10;
        v9 -= 8;
      }
      while (v9);
    }
  }
  else
  {
    if (v4)
    {
      uint64_t v11 = 8 * v4;
      uint64_t v12 = v5;
      do
      {
        uint64_t v13 = *v12;
        if (v13 != sub_2225D3294() && v13 != sub_2225CAE20()) {
          *sub_2225D31DC(a1, v13) = v13;
        }
        ++v12;
        v11 -= 8;
      }
      while (v11);
    }
    free(v5);
    *(_DWORD *)(a1 + 24) = 0;
  }
}

void *sub_2225D31DC(uint64_t a1, uint64_t a2)
{
  int v4 = sub_2225D3364(a2);
  int v5 = *(_DWORD *)(a1 + 16) - 1;
  uint64_t v6 = *(void *)(a1 + 8);
  int v7 = v4 & v5;
  uint64_t v8 = (void *)(v6 + 8 * (v4 & v5));
  uint64_t v9 = *v8;
  if (*v8 != a2)
  {
    uint64_t v10 = 0;
    int v11 = 1;
    while (v9 != sub_2225CAE20())
    {
      uint64_t v12 = *v8;
      uint64_t v13 = sub_2225D3294();
      if (v10) {
        BOOL v14 = 0;
      }
      else {
        BOOL v14 = v12 == v13;
      }
      if (v14) {
        uint64_t v10 = v8;
      }
      int v15 = v7 + v11++;
      int v7 = v15 & v5;
      uint64_t v8 = (void *)(v6 + 8 * (v15 & v5));
      uint64_t v9 = *v8;
      if (*v8 == a2) {
        return v8;
      }
    }
    if (v10) {
      return v10;
    }
  }
  return v8;
}

uint64_t sub_2225D3294()
{
  return -2;
}

uint64_t sub_2225D329C(uint64_t a1, uint64_t a2)
{
  if (sub_2225D30D8((void *)a1))
  {
    uint64_t v4 = *(unsigned int *)(a1 + 20);
    if (v4)
    {
      int v5 = *(void **)a1;
      uint64_t v6 = *(void *)a1 + 8 * v4;
      uint64_t v7 = 8 * v4;
      while (*v5 != a2)
      {
        ++v5;
        v7 -= 8;
        if (!v7) {
          return 0;
        }
      }
      *int v5 = *(void *)(v6 - 8);
      *(void *)(v6 - 8) = sub_2225CAE20();
      --*(_DWORD *)(a1 + 20);
      return 1;
    }
    return 0;
  }
  uint64_t v8 = sub_2225D31DC(a1, a2);
  if (*v8 != a2) {
    return 0;
  }
  void *v8 = sub_2225D3294();
  *(int32x2_t *)(a1 + 20) = vadd_s32(*(int32x2_t *)(a1 + 20), (int32x2_t)0x1FFFFFFFFLL);
  return 1;
}

uint64_t sub_2225D3364(unsigned int a1)
{
  return (a1 >> 4) ^ (a1 >> 9);
}

uint64_t sub_2225D3370(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 16) = a4[2];
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a4 + 6);
  if (sub_2225D30D8(a4))
  {
    uint64_t v7 = *(void **)a1;
    *(void *)(a1 + 8) = *(void *)a1;
    memcpy(v7, (const void *)a4[1], 8 * *(unsigned int *)(a1 + 16));
  }
  else
  {
    uint64_t v8 = *a4;
    *(void *)(a1 + 8) = a4[1];
    a4[1] = v8;
  }
  *((_DWORD *)a4 + 5) = 0;
  *((_DWORD *)a4 + 6) = 0;
  *((_DWORD *)a4 + 4) = a3;
  return a1;
}

int *sub_2225D33F4(int *result, int *a2)
{
  int v2 = *result;
  uint64_t *result = *a2;
  *a2 = v2;
  return result;
}

uint64_t sub_2225D3408(uint64_t a1)
{
  if (!sub_2225D30D8((void *)a1)) {
    free(*(void **)(a1 + 8));
  }
  return a1;
}

char *sub_2225D343C(const void **a1, const void *a2, unint64_t a3, uint64_t a4)
{
  size_t v8 = sub_2225D34E8(a1);
  uint64_t v9 = sub_2225D34F4(a1);
  if (a4 + 2 * v9 <= a3) {
    size_t v10 = a3;
  }
  else {
    size_t v10 = a4 + 2 * v9;
  }
  if (*a1 == a2)
  {
    uint64_t v12 = (char *)malloc_type_malloc(v10, 0x996D7F68uLL);
    uint64_t result = (char *)memcpy(v12, *a1, v8);
  }
  else
  {
    uint64_t result = (char *)malloc_type_realloc((void *)*a1, v10, 0x5F17287BuLL);
    uint64_t v12 = result;
  }
  *a1 = v12;
  a1[1] = &v12[v8];
  a1[2] = &v12[v10];
  return result;
}

uint64_t sub_2225D34E8(void *a1)
{
  return a1[1] - *a1;
}

uint64_t sub_2225D34F4(void *a1)
{
  return a1[2] - *a1;
}

uint64_t sub_2225D3504(void *a1)
{
  int v2 = (void *)a1[6];
  if (v2) {
    j__free(v2);
  }
  while (!sub_2225CF1D0(a1))
  {
    uint64_t v3 = *(void *)sub_2225D35A0((uint64_t)a1);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    sub_2225D35AC(a1);
  }
  sub_2225D2510(a1 + 3);

  return sub_2225D35B8(a1);
}

uint64_t sub_2225D35A0(uint64_t a1)
{
  return *(void *)(a1 + 8) - 16;
}

uint64_t sub_2225D35AC(void *a1)
{
  return sub_2225D5AA8(a1, a1[1] - 16);
}

BOOL sub_2225D35C0(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) == 0;
}

uint64_t sub_2225D35D4(uint64_t *a1, unint64_t a2, unint64_t a3)
{
  sub_2225D4C44((uint64_t)&v7);
  v7.n128_u64[0] = a2;
  v7.n128_u64[1] = a3;
  sub_2225D4C48(a1, &v7);
  return sub_2225D36D8(a1);
}

uint64_t sub_2225D362C(void *a1, uint64_t a2)
{
  uint64_t v10 = a2;
  uint64_t v3 = sub_2225D36D8(a1);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = 0;
  while (1)
  {
    unint64_t v5 = sub_2225C3C70((uint64_t)&v10);
    uint64_t v6 = (uint64_t *)sub_2225D36E8(a1, v4);
    if (v5 >= sub_2225C3D04(*v6))
    {
      unint64_t v7 = sub_2225C3C70((uint64_t)&v10);
      size_t v8 = (uint64_t *)sub_2225D36E8(a1, v4);
      if (v7 <= sub_2225C5B40(*v8)) {
        break;
      }
    }
    if (v3 == ++v4) {
      return 0;
    }
  }
  return (v4 + 1);
}

uint64_t sub_2225D36D8(void *a1)
{
  return (uint64_t)(a1[1] - *a1) >> 4;
}

uint64_t sub_2225D36E8(void *a1, uint64_t a2)
{
  return *a1 + 16 * a2;
}

uint64_t sub_2225D36F4(void *a1, uint64_t a2, int a3)
{
  int v3 = a3;
  uint64_t v18 = a2;
  if (!a3) {
    int v3 = sub_2225D362C(a1, a2);
  }
  uint64_t v5 = sub_2225D387C(a1, v3);
  int v17 = 1;
  uint64_t v6 = sub_2225C3D04(v5);
  uint64_t v7 = v6;
  uint64_t v8 = a1[6];
  uint64_t v9 = (unsigned char *)v6;
  if (v8)
  {
    uint64_t v9 = (unsigned char *)v6;
    if (*(_DWORD *)v8 == v3)
    {
      unint64_t v10 = *(void *)(v8 + 8);
      uint64_t v9 = (unsigned char *)v6;
      if (v10 <= sub_2225C3C70((uint64_t)&v18))
      {
        uint64_t v9 = *(unsigned char **)(v8 + 8);
        int v17 = *(_DWORD *)(v8 + 16);
      }
    }
  }
  for (v16[0] = sub_2225D389C((uint64_t)v9); sub_2225D38D0(v16, &v18); v16[0] = sub_2225D389C((uint64_t)++v9))
  {
    if (*v9 == 10) {
      ++v17;
    }
  }
  int v11 = (void *)a1[6];
  if (!v11)
  {
    int v11 = (void *)sub_2225C26A4(24);
    v11[1] = 0;
    void v11[2] = 0;
    void *v11 = 0;
    a1[6] = v11;
  }
  *(_DWORD *)int v11 = v3;
  v11[1] = v9;
  *((_DWORD *)v11 + 4) = v17;
  sub_2225C3D0C(v16, v7, &v9[-v7]);
  sub_2225C3D00((int)v15, "\n\r");
  uint64_t v14 = (uint64_t)&v9[-v7 - sub_2225D8A14(v16, v15[0], v15[1], 0xFFFFFFFFFFFFFFFFLL)];
  v16[0] = sub_2225D38E4((uint64_t)&v17, (uint64_t)&v14);
  v16[1] = v12;
  sub_2225D3914(&v19, (uint64_t)v16);
  return v19;
}

uint64_t sub_2225D387C(void *a1, int a2)
{
  return *(void *)sub_2225D36E8(a1, (a2 - 1));
}

uint64_t sub_2225D389C(uint64_t a1)
{
  sub_2225D3A34(&v3);
  return a1;
}

BOOL sub_2225D38D0(void *a1, void *a2)
{
  return *a2 != *a1;
}

uint64_t sub_2225D38E4(uint64_t a1, uint64_t a2)
{
  sub_2225D5B78(&v3, a1, a2);
  return v3;
}

void **sub_2225D3918(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  sub_2225D3A34(&v15);
  uint64_t result = (void **)sub_2225D3A20(&v16, &v15);
  if ((result & 1) == 0)
  {
    int v6 = sub_2225D362C(a1, v16);
    uint64_t v7 = sub_2225D3A38(a1, v6);
    sub_2225D3918(a1, *(void *)(v7 + 8), a3);
    uint64_t v8 = sub_2225CA524(a3, "Included from ");
    uint64_t v9 = (void *)sub_2225D3A38(a1, v6);
    unint64_t v10 = (char *)(*(uint64_t (**)(void))(*(void *)*v9 + 16))(*v9);
    int v11 = sub_2225CA524((uint64_t)v8, v10);
    uint64_t v12 = sub_2225CA524((uint64_t)v11, ":");
    unsigned int v13 = sub_2225D3A40(a1, v16, v6);
    uint64_t v14 = sub_2225CA560(v12, v13);
    return sub_2225CA524((uint64_t)v14, ":\n");
  }
  return result;
}

BOOL sub_2225D3A20(void *a1, void *a2)
{
  return *a2 == *a1;
}

uint64_t sub_2225D3A38(void *a1, int a2)
{
  return sub_2225D36E8(a1, (a2 - 1));
}

uint64_t sub_2225D3A40(void *a1, uint64_t a2, int a3)
{
  return sub_2225D36F4(a1, a2, a3);
}

uint64_t sub_2225D3A58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  v49[1] = a6;
  uint64_t v50 = a2;
  v49[0] = a5;
  sub_2225D3DAC(v51);
  sub_2225D3A34(&v48);
  sub_2225CAD04(&v47);
  if (sub_2225D3DB0(&v50))
  {
    uint64_t v35 = a7;
    int v15 = sub_2225D362C(a1, v50);
    uint64_t v16 = sub_2225D387C(a1, v15);
    int v17 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 16))(v16);
    uint64_t v18 = sub_2225C3C70((uint64_t)&v50);
    uint64_t v19 = sub_2225C3D04(v16);
    unint64_t v20 = v19;
    uint64_t v36 = a9;
    while (v18 != v19)
    {
      int v22 = *(unsigned __int8 *)--v18;
      int v21 = v22;
      if (v22 == 13 || v21 == 10)
      {
        unint64_t v20 = v18 + 1;
        break;
      }
    }
    uint64_t v24 = (unsigned __int8 *)sub_2225C3C70((uint64_t)&v50);
    uint64_t v25 = sub_2225C5B40(v16);
    int v37 = a3;
    if (v24 != (unsigned __int8 *)v25)
    {
      while (1)
      {
        int v26 = *v24;
        if (v26 == 10 || v26 == 13) {
          break;
        }
        if (++v24 == (unsigned __int8 *)v25)
        {
          uint64_t v24 = (unsigned __int8 *)v25;
          break;
        }
      }
    }
    sub_2225D1DD8(&v46, v20, v24);
    sub_2225CCDE4((uint64_t)&v47, (uint64_t)&v46);
    std::string::~string(&v46);
    uint64_t v28 = sub_2225C3D04((uint64_t)v49);
    if (v28)
    {
      for (uint64_t i = 0; i != v28; ++i)
      {
        *(_OWORD *)&v46.__r_.__value_.__l.__data_ = *(_OWORD *)sub_2225D36E8(v49, i);
        if (sub_2225D3DC0(&v46)
          && sub_2225C3C70((uint64_t)&v46) <= (unint64_t)v24
          && sub_2225C3C70((uint64_t)&v46.__r_.__value_.__l.__size_) >= v20)
        {
          if (sub_2225C3C70((uint64_t)&v46) < v20) {
            v46.__r_.__value_.__r.__words[0] = sub_2225D389C(v20);
          }
          if (sub_2225C3C70((uint64_t)&v46.__r_.__value_.__l.__size_) > (unint64_t)v24) {
            v46.__r_.__value_.__l.__size_ = sub_2225D389C((uint64_t)v24);
          }
          unint64_t v43 = sub_2225C3C70((uint64_t)&v46) - v20;
          unint64_t v42 = sub_2225C3C70((uint64_t)&v46.__r_.__value_.__l.__size_) - v20;
          v44.i64[0] = sub_2225C5EEC((uint64_t)&v43, (uint64_t)&v42);
          v44.i64[1] = v30;
          sub_2225D3DC4(&v45, &v44);
          sub_2225CC7B8((uint64_t)v51, &v45);
        }
      }
    }
    v46.__r_.__value_.__r.__words[0] = sub_2225D36F4(a1, v50, v15);
    sub_2225D3DC8(&v48, &v46);
    a3 = v37;
    a7 = v35;
    a9 = v36;
  }
  else
  {
    int v17 = "<unknown>";
  }
  uint64_t v31 = v50;
  sub_2225C3D00((int)v41, v17);
  int v32 = v48;
  int v33 = HIDWORD(v48) - 1;
  sub_2225DBA20(a4, &v46);
  sub_2225CCBF8(v40, &v46);
  sub_2225CCBF8(v39, &v47);
  sub_2225D3DDC(v38, v51);
  sub_2225D3DE0(a9, (uint64_t)a1, v31, v41[0], v41[1], v32, v33, a3, v40[0], v40[1], v39[0], v39[1], v38[0], v38[1], a7, a8);
  std::string::~string(&v46);
  std::string::~string(&v47);
  return sub_2225C56C4(v51);
}

BOOL sub_2225D3DB0(void *a1)
{
  return *a1 != 0;
}

_DWORD *sub_2225D3DC8(_DWORD *result, _DWORD *a2)
{
  char *result = *a2;
  result[1] = a2[1];
  return result;
}

uint64_t sub_2225D3DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return sub_2225D4668(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

void sub_2225D3E04(void *a1, void **a2, uint64_t a3, int a4)
{
  int v6 = (void (*)(uint64_t, uint64_t))a1[7];
  if (v6)
  {
    uint64_t v7 = a1[8];
    v6(a3, v7);
  }
  else
  {
    uint64_t v13 = sub_2225C3D04(a3);
    if (sub_2225D3DB0(&v13))
    {
      uint64_t v10 = sub_2225C3D04(a3);
      int v11 = sub_2225D362C(a1, v10);
      uint64_t v12 = sub_2225D3A38(a1, v11);
      sub_2225D3918(a1, *(void *)(v12 + 8), (uint64_t)a2);
    }
    sub_2225D3ED0(a3, 0, a2, a4);
  }
}

void sub_2225D3ED0(uint64_t a1, char *a2, void **a3, int a4)
{
  int v8 = (*((uint64_t (**)(void **))*a3 + 6))(a3) & a4;
  if (v8 == 1) {
    (*((void (**)(void **, uint64_t, uint64_t, void))*a3 + 2))(a3, 8, 1, 0);
  }
  if (a2 && *a2)
  {
    uint64_t v9 = sub_2225CA524((uint64_t)a3, a2);
    sub_2225CA524((uint64_t)v9, ": ");
  }
  if (!sub_2225CBBF8(a1 + 16, v7))
  {
    if (sub_2225D4774((const std::string *)(a1 + 16), "-")) {
      sub_2225CA524((uint64_t)a3, "<stdin>");
    }
    else {
      sub_2225D47E4(a3, a1 + 16);
    }
    if (*(_DWORD *)(a1 + 40) != -1)
    {
      uint64_t v10 = (void **)sub_2225CAF14((uint64_t)a3, 58);
      sub_2225D4840(v10, *(_DWORD *)(a1 + 40));
      if (*(_DWORD *)(a1 + 44) != -1)
      {
        int v11 = (void **)sub_2225CAF14((uint64_t)a3, 58);
        sub_2225D4840(v11, *(_DWORD *)(a1 + 44) + 1);
      }
    }
    sub_2225CA524((uint64_t)a3, ": ");
  }
  int v12 = *(_DWORD *)(a1 + 48);
  if (v12 == 2)
  {
    uint64_t v13 = "note: ";
    if (v8)
    {
      uint64_t v14 = 0;
      goto LABEL_23;
    }
  }
  else if (v12 == 1)
  {
    uint64_t v13 = "warning: ";
    if (v8)
    {
      uint64_t v14 = 5;
      goto LABEL_23;
    }
  }
  else
  {
    if (v12) {
      goto LABEL_25;
    }
    uint64_t v13 = "error: ";
    if (v8)
    {
      uint64_t v14 = 1;
LABEL_23:
      (*((void (**)(void **, uint64_t, uint64_t, void))*a3 + 2))(a3, v14, 1, 0);
    }
  }
  sub_2225CA524((uint64_t)a3, v13);
LABEL_25:
  if (v8)
  {
    (*((void (**)(void **))*a3 + 3))(a3);
    (*((void (**)(void **, uint64_t, uint64_t, void))*a3 + 2))(a3, 8, 1, 0);
    int v15 = sub_2225D47E4(a3, a1 + 56);
    sub_2225CAF14((uint64_t)v15, 10);
    (*((void (**)(void **))*a3 + 3))(a3);
  }
  else
  {
    int v17 = sub_2225D47E4(a3, a1 + 56);
    sub_2225CAF14((uint64_t)v17, 10);
  }
  if (*(_DWORD *)(a1 + 40) != -1 && *(_DWORD *)(a1 + 44) != -1)
  {
    uint64_t v18 = a1 + 80;
    std::string::size_type v19 = sub_2225CFC64(a1 + 80, v16);
    uint64_t v21 = sub_2225CFCA0(a1 + 80, v20);
    sub_2225D4848(v19, v21, (uint64_t (*)(void))sub_2225D48B4);
    v61.__r_.__value_.__r.__words[0] = v19;
    v58.__r_.__value_.__r.__words[0] = sub_2225CFCA0(a1 + 80, v22);
    if (sub_2225D0DF0((uint64_t)&v61, (uint64_t)&v58))
    {
      sub_2225CCBF8(v62, a1 + 80);
      sub_2225D48BC((uint64_t)a3, v62[0], v62[1]);
    }
    else
    {
      unint64_t v55 = sub_2225CB920(a1 + 80, v23);
      sub_2225D496C(&v61, v55 + 1, 32);
      uint64_t v24 = sub_2225D4970((void *)(a1 + 104));
      if (v24)
      {
        for (uint64_t i = 0; i != v24; ++i)
        {
          int v26 = (unsigned int *)sub_2225C6BC0((void *)(a1 + 104), i);
          std::string::size_type v27 = v26[1];
          uint64_t v28 = (unsigned char *)sub_2225CB8F8((uint64_t)&v61, *v26);
          v58.__r_.__value_.__r.__words[0] = v27;
          uint64_t v60 = sub_2225CB920((uint64_t)&v61, v29);
          uint64_t v30 = (uint64_t *)sub_2225CAB38(&v58, &v60);
          uint64_t v31 = sub_2225CB8F8((uint64_t)&v61, *v30);
          char v59 = 126;
          sub_2225D4980(v28, v31, &v59);
        }
      }
      sub_2225CAD04(&v58);
      sub_2225D4BB8(v57, a1 + 128);
      uint64_t v32 = sub_2225C3C70(a1 + 8) - *(int *)(a1 + 44);
      uint64_t v34 = sub_2225CB920(a1 + 80, v33);
      uint64_t v35 = sub_2225C3C40(v32, v34);
      sub_2225D4984((uint64_t)&v61, &v58, v57[0], v57[1], v35, v36);
      if (v55 >= *(unsigned int *)(a1 + 44)) {
        uint64_t v37 = *(int *)(a1 + 44);
      }
      else {
        uint64_t v37 = v55;
      }
      *(unsigned char *)sub_2225CB8F8((uint64_t)&v61, v37) = 94;
      uint64_t v38 = sub_2225D4BBC((uint64_t)&v61, 32, 0xFFFFFFFFFFFFFFFFLL);
      std::string::erase(&v61, v38 + 1, 0xFFFFFFFFFFFFFFFFLL);
      sub_2225CCBF8(v56, a1 + 80);
      sub_2225D48BC((uint64_t)a3, v56[0], v56[1]);
      if (v8) {
        (*((void (**)(void **, uint64_t, uint64_t, void))*a3 + 2))(a3, 2, 1, 0);
      }
      uint64_t v41 = sub_2225CB920((uint64_t)&v61, v39);
      if (v41)
      {
        unint64_t v42 = 0;
        int v43 = 0;
        do
        {
          if (sub_2225CB920(v18, v40) > v42 && *(unsigned char *)sub_2225D4C1C(v18, v42) == 9)
          {
            do
            {
              int64x2_t v44 = (char *)sub_2225CB8F8((uint64_t)&v61, v42);
              sub_2225CAF14((uint64_t)a3, *v44);
              ++v43;
            }
            while ((v43 & 7) != 0);
          }
          else
          {
            int32x2_t v45 = (char *)sub_2225CB8F8((uint64_t)&v61, v42);
            sub_2225CAF14((uint64_t)a3, *v45);
            ++v43;
          }
          ++v42;
        }
        while (v42 != v41);
      }
      sub_2225CAF14((uint64_t)a3, 10);
      if (v8) {
        (*((void (**)(void **))*a3 + 3))(a3);
      }
      if (!sub_2225CBBF8((uint64_t)&v58, v46))
      {
        uint64_t v48 = sub_2225CB920((uint64_t)&v58, v47);
        if (v48)
        {
          unint64_t v50 = v48;
          uint64_t v51 = 0;
          for (unint64_t j = 0; j < v50; ++j)
          {
            if (j < sub_2225CB920(v18, v49) && *(unsigned char *)sub_2225D4C1C(v18, j) == 9)
            {
              do
              {
                uint64_t v53 = (char *)sub_2225CB8F8((uint64_t)&v58, j);
                sub_2225CAF14((uint64_t)a3, *v53);
                if (*(unsigned char *)sub_2225CB8F8((uint64_t)&v58, j) != 32) {
                  ++j;
                }
                ++v51;
              }
              while ((v51 & 7) != 0 && j != v50);
            }
            else
            {
              unsigned int v54 = (char *)sub_2225CB8F8((uint64_t)&v58, j);
              sub_2225CAF14((uint64_t)a3, *v54);
              ++v51;
            }
          }
        }
        sub_2225CAF14((uint64_t)a3, 10);
      }
      std::string::~string(&v58);
      std::string::~string(&v61);
    }
  }
}

uint64_t sub_2225D452C(void *a1, void **a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  v14[39] = *MEMORY[0x263EF8340];
  sub_2225D3A58(a1, a3, a4, a5, a6, a7, a9, a10, (uint64_t)v14);
  sub_2225D3E04(a1, a2, (uint64_t)v14, a11);
  return sub_2225D45D0((uint64_t)v14);
}

uint64_t sub_2225D45D4(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  int v17 = (void **)sub_2225E8A38();
  return sub_2225D452C(a1, v17, a2, a3, a4, a5, a6, v18, a7, a8, a9);
}

uint64_t sub_2225D4668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  v30[0] = a4;
  v30[1] = a5;
  v29[0] = a9;
  v29[1] = a10;
  v28[0] = a11;
  v28[1] = a12;
  v27[0] = a13;
  v27[1] = a14;
  v26[0] = a15;
  v26[1] = a16;
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  sub_2225CA51C(v30, a1 + 16);
  *(_DWORD *)(a1 + 40) = a6;
  *(_DWORD *)(a1 + 44) = a7;
  *(_DWORD *)(a1 + 48) = a8;
  sub_2225CA51C(v29, a1 + 56);
  sub_2225CA51C(v28, a1 + 80);
  sub_2225D474C(v27, a1 + 104);
  uint64_t v20 = sub_2225C3C70((uint64_t)v26);
  uint64_t v21 = sub_2225D475C(v26);
  uint64_t v22 = sub_2225D476C(a1 + 128, v20, v21);
  uint64_t v23 = sub_2225C3C70(v22);
  uint64_t v24 = sub_2225C3D04(a1 + 128);
  sub_2225D4770(v23, v24);
  return a1;
}

uint64_t sub_2225D474C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2225D5C00(a2, *a1, *a1 + 8 * a1[1]);
}

uint64_t sub_2225D475C(void *a1)
{
  return *a1 + 40 * a1[1];
}

BOOL sub_2225D4774(const std::string *a1, const std::string::value_type *a2)
{
  std::string::size_type v4 = sub_2225CBC1C(a2);
  return v4 == sub_2225CB920((uint64_t)a1, v5) && std::string::compare(a1, 0, 0xFFFFFFFFFFFFFFFFLL, a2, v4) == 0;
}

void **sub_2225D47E4(void **a1, uint64_t a2)
{
  std::string::size_type v4 = (unsigned char *)sub_2225CBED4(a2, a2);
  size_t v6 = sub_2225CCDE0(a2, v5);

  return sub_2225E7C80(a1, v4, v6);
}

void **sub_2225D4840(void **a1, int a2)
{
  return sub_2225E7DD0(a1, a2);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2225D4848(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a2;
  while (sub_2225D0DF0((uint64_t)&v6, (uint64_t)&v5))
  {
    std::string::size_type v4 = (char *)sub_2225C3C70((uint64_t)&v6);
    if (a3(*v4)) {
      break;
    }
    sub_2225D0E0C(&v6);
  }
}

uint64_t sub_2225D48B4(unsigned int a1)
{
  return (a1 >> 7) & 1;
}

uint64_t sub_2225D48BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  uint64_t v4 = sub_2225C3D04((uint64_t)v9);
  if (v4)
  {
    uint64_t v5 = 0;
    int v6 = 0;
    do
    {
      if (sub_2225CC124(v9, v5) == 9)
      {
        do
        {
          sub_2225CAF14(a1, 32);
          ++v6;
        }
        while ((v6 & 7) != 0);
      }
      else
      {
        char v7 = sub_2225CC124(v9, v5);
        sub_2225CAF14(a1, v7);
        ++v6;
      }
      ++v5;
    }
    while (v5 != v4);
  }
  return sub_2225CAF14(a1, 10);
}

uint64_t sub_2225D4970(void *a1)
{
  return (uint64_t)(a1[1] - *a1) >> 3;
}

unint64_t sub_2225D4984(uint64_t a1, std::string *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v38[0] = a3;
  v38[1] = a4;
  v37[0] = a5;
  v37[1] = a6;
  unint64_t result = sub_2225CF1E0((uint64_t)v38);
  if ((result & 1) == 0)
  {
    unint64_t v9 = sub_2225C3C70((uint64_t)v37);
    unint64_t v10 = sub_2225C3C78(v37);
    uint64_t v11 = sub_2225C3C70((uint64_t)v38);
    unint64_t result = sub_2225D475C(v38);
    if (v11 != result)
    {
      unint64_t v12 = result;
      std::string::size_type v13 = 0;
      uint64_t v29 = a1;
      unint64_t v28 = v9;
      do
      {
        uint64_t v35 = sub_2225D5728(v11);
        uint64_t v36 = v14;
        sub_2225C3D00((int)v34, "\n\r\t");
        unint64_t result = sub_2225D8790(&v35, v34[0], v34[1], 0);
        if (result == -1)
        {
          uint64_t v35 = sub_2225D5754(v11);
          uint64_t v36 = v15;
          unint64_t result = sub_2225C3C70((uint64_t)&v35);
          if (result <= v10)
          {
            unint64_t result = sub_2225C3C70((uint64_t)&v36);
            if (result >= v9)
            {
              if (sub_2225C3C70((uint64_t)&v35) >= v9) {
                unsigned int v16 = sub_2225C3C70((uint64_t)&v35) - v9;
              }
              else {
                unsigned int v16 = 0;
              }
              if (v13 > v16) {
                uint64_t v17 = (v13 + 1);
              }
              else {
                uint64_t v17 = v16;
              }
              uint64_t v32 = sub_2225D5728(v11);
              uint64_t v33 = v18;
              std::string::size_type v13 = v17 + sub_2225C3D04((uint64_t)&v32);
              if (sub_2225CB920((uint64_t)a2, v19) < v13) {
                std::string::resize(a2, v13, 32);
              }
              uint64_t v32 = sub_2225D5728(v11);
              uint64_t v33 = v20;
              sub_2225C3C70((uint64_t)&v32);
              v31[0] = sub_2225D5728(v11);
              v31[1] = v21;
              sub_2225C3C78(v31);
              uint64_t v30 = sub_2225CFC64((uint64_t)a2, v22);
              sub_2225D577C(&v30, v17);
              sub_2225D5760();
              unint64_t v23 = sub_2225C3C70((uint64_t)&v36);
              int v24 = v10;
              if (v23 < v10) {
                int v24 = sub_2225C3C70((uint64_t)&v36);
              }
              unint64_t v9 = v28;
              uint64_t v25 = (v24 - v28);
              int v26 = (unsigned char *)sub_2225CB8F8(v29, v16);
              uint64_t v27 = sub_2225CB8F8(v29, v25);
              LOBYTE(v32) = 126;
              unint64_t result = (unint64_t)sub_2225D4980(v26, v27, &v32);
            }
          }
        }
        v11 += 40;
      }
      while (v11 != v12);
    }
  }
  return result;
}

uint64_t sub_2225D4BBC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v4 = a2;
  uint64_t v6 = sub_2225CBED4(a1, a2);
  unint64_t v8 = sub_2225CB920(a1, v7);

  return sub_2225D7C08(v6, v8, v4, a3);
}

uint64_t sub_2225D4C1C(uint64_t a1, uint64_t a2)
{
  return sub_2225CBED4(a1, a2) + a2;
}

uint64_t sub_2225D4C48(uint64_t *a1, __n128 *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, (uint64_t)a2))
  {
    uint64_t result = sub_2225D4D44(a1, a2);
  }
  else
  {
    sub_2225D4CD0((uint64_t)a1, a2);
    uint64_t result = v4 + 16;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2225D4CA4(uint64_t a1)
{
  return a1;
}

void *sub_2225D4CD0(uint64_t a1, __n128 *a2)
{
  sub_2225D4DF4(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = (__n128 *)nullsub_1(v10, v6);
  sub_2225D4DF8(v5, v7, a2);
  v10 += 16;
  return sub_2225D284C(&v9);
}

uint64_t sub_2225D4D44(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, (uint64_t)a2);
  uint64_t v5 = sub_2225D36D8(a1);
  unint64_t v6 = sub_2225D4E1C(a1, v5 + 1);
  uint64_t v7 = sub_2225D36D8(a1);
  sub_2225D4E98(v12, v6, v7, v4);
  uint64_t v9 = (__n128 *)nullsub_1(v13, v8);
  sub_2225D4DF8(v4, v9, a2);
  v13 += 16;
  sub_2225D4E9C(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225D4F8C(v12);
  return v10;
}

void *sub_2225D4DFC(void *result, uint64_t a2, uint64_t a3)
{
  char *result = a2;
  uint64_t v3 = *(void *)(a2 + 8);
  result[1] = v3;
  result[2] = v3 + 16 * a3;
  return result;
}

__n128 sub_2225D4E10(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  *a2 = *a3;
  return result;
}

unint64_t sub_2225D4E1C(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_2225D4F90((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_2225D4FD0(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_2225D4E9C(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2225D510C();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  unint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  uint64_t v10 = sub_2225D36D8(a1);
  return nullsub_1(a1, v10);
}

uint64_t sub_2225D4F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_2225D5004(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_2225D4FD0(void *a1, uint64_t a2)
{
  return (uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 4;
}

uint64_t sub_2225D5008()
{
  return 0xFFFFFFFFFFFFFFFLL;
}

uint64_t *sub_2225D5010(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_2225D509C(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 16 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 16 * v9;
  return a1;
}

uint64_t sub_2225D509C(uint64_t a1, unint64_t a2)
{
  return sub_2225D50C4(a1, a2);
}

uint64_t sub_2225D50C4(uint64_t a1, unint64_t a2)
{
  if (sub_2225D5004(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(16 * a2, 8);
}

uint64_t sub_2225D510C()
{
  return sub_2225D5128();
}

uint64_t sub_2225D5128()
{
  sub_2225D5150(v1);
  return v1[2];
}

uint64_t sub_2225D5158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_2225D5288(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225D5318(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_2225D5228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v12[0] = j_nullsub_1(a1, a2);
  v12[1] = v8;
  v11[0] = j_nullsub_1(a3, a4);
  v11[1] = v9;
  return sub_2225CCC60((uint64_t)v12, (uint64_t)v11, a5);
}

uint64_t sub_2225D5288@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v13[0] = a1;
  v13[1] = a2;
  v12[0] = a3;
  v12[1] = a4;
  v11[0] = a5;
  v11[1] = a6;
  while (sub_2225D2CC0((uint64_t)v13, (uint64_t)v12))
  {
    uint64_t v9 = (_OWORD *)sub_2225D5320((uint64_t)v13, v8);
    *(_OWORD *)sub_2225D35A0((uint64_t)v11) = *v9;
    sub_2225D5358((uint64_t)v13);
    sub_2225D5358((uint64_t)v11);
  }
  return sub_2225CCC60((uint64_t)v13, (uint64_t)v11, a7);
}

uint64_t sub_2225D5320(uint64_t a1, uint64_t a2)
{
  nullsub_1(a1, a2);

  return sub_2225D35A0(a1);
}

uint64_t sub_2225D5358(uint64_t result)
{
  *(void *)(result + 8) -= 16;
  return result;
}

uint64_t sub_2225D5368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t *sub_2225D5374(uint64_t *a1)
{
  sub_2225D53D4((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_2225D53E0(a1, v4);
    sub_2225D53DC(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_2225D53D4(uint64_t a1)
{
  return sub_2225D5414(a1, *(void *)(a1 + 8));
}

uint64_t sub_2225D53E0(void *a1, uint64_t a2)
{
  return (uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 4;
}

uint64_t sub_2225D5418(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 16;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      __n128 result = j_nullsub_1(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_2225D5484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 16 * a3, 8);
}

uint64_t sub_2225D5494(uint64_t a1)
{
  return a1;
}

void *sub_2225D54EC(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  sub_2225D5544(v2, v3);
  if (!sub_2225C603C(a1))
  {
    uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_2225D5544(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      v2 -= 40;
      __n128 result = sub_2225D5588(v2);
    }
    while (v2 != v3);
  }
  return result;
}

uint64_t sub_2225D558C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225D55B8(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2225D55F8(&v3);
  return a1;
}

uint64_t *sub_2225D55F8(uint64_t *a1)
{
  __n128 result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2225D5670(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2225D567C(v6, v8);
    return (uint64_t *)sub_2225D5678(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2225D5670(uint64_t *a1)
{
  return sub_2225D56B0((uint64_t)a1, *a1);
}

uint64_t sub_2225D567C(void *a1, uint64_t a2)
{
  return (uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 3;
}

uint64_t sub_2225D56B0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; __n128 result = j_nullsub_1(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 8;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_2225D5718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 8 * a3, 4);
}

uint64_t sub_2225D5728(uint64_t a1)
{
  sub_2225CCBF8(&v2, a1 + 16);
  return v2;
}

uint64_t sub_2225D5754(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_2225D5760()
{
  sub_2225D57AC();
  return v0;
}

uint64_t sub_2225D577C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_2225D58EC(&v3, a2);
  return v3;
}

uint64_t sub_2225D57B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)sub_2225D5844(a3);
  uint64_t v9 = sub_2225C5ED8((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225D5848(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2225D584C(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_2225D5874(&v2);
}

uint64_t sub_2225D5878(uint64_t *a1)
{
  return sub_2225D5880(*a1);
}

uint64_t sub_2225D5880(uint64_t a1)
{
  uint64_t v4 = a1;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v4);
  return nullsub_1(v1, v2);
}

uint64_t sub_2225D58AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1;
  uint64_t v3 = sub_2225D5874(&v5);
  return sub_2225D577C(&v5, a2 - v3);
}

void *sub_2225D58EC(void *result, uint64_t a2)
{
  *result += a2;
  return result;
}

uint64_t sub_2225D58FC(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2225D593C(&v3);
  return a1;
}

uint64_t *sub_2225D593C(uint64_t *a1)
{
  __n128 result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2225D59B4(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2225D4FD0(v6, v8);
    return (uint64_t *)sub_2225D53DC(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2225D59B4(uint64_t *a1)
{
  return sub_2225D59BC((uint64_t)a1, *a1);
}

uint64_t sub_2225D59BC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; __n128 result = j_nullsub_1(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 16;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t *sub_2225D5A24(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_2225D5A64(a2);
  return a1;
}

unint64_t sub_2225D5A64(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return 0xCCCCCCCCCCCCCCCDLL * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_2225D5AA8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D36D8(a1);
  sub_2225D59BC((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

uint64_t sub_2225D5B00(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v3 = nullsub_1(a1, a2);
    sub_2225CDC18(v3);
  }
  return a1;
}

uint64_t sub_2225D5B38(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16)) {
    return *(_OWORD *)j_nullsub_1(a1, a2);
  }
  else {
    sub_2225CDDC0(&v3);
  }
  return v3;
}

uint64_t sub_2225D5B7C(uint64_t result, _DWORD *a2, void *a3)
{
  *(_DWORD *)__n128 result = *a2;
  *(void *)(result + 8) = *a3;
  return result;
}

_DWORD *sub_2225D5B90(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  uint64_t *result = *(_DWORD *)a2;
  result[1] = v2;
  return result;
}

uint64_t sub_2225D5BA0(uint64_t a1)
{
  return sub_2225D5BA8(a1, 4u);
}

uint64_t sub_2225D5BA8(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 8 * a2);
}

int32x2_t sub_2225D5BB0(int32x2_t *a1, int64x2_t *a2)
{
  int32x2_t result = vmovn_s64(*a2);
  *a1 = result;
  return result;
}

uint64_t *sub_2225D5BC0(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_2225CC780(a2);
  return a1;
}

uint64_t *sub_2225D5C04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  uint64_t v9 = 0;
  sub_2225D2558(a1 + 2, &v9, &v8);
  unint64_t v6 = sub_2225D5C78(a2, a3);
  sub_2225D5C7C(a1, a2, a3, v6);
  return a1;
}

uint64_t sub_2225D5C7C(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_2225C64B8(&v10, (uint64_t)a1);
  sub_2225D5D10(v10, (uint64_t)&v11);
  if (a4)
  {
    sub_2225D5D1C(a1, a4);
    sub_2225D5D90((uint64_t)a1, a2, a3, a4);
  }
  sub_2225D2D18(&v11);
  return j_nullsub_1(&v11, v8);
}

uint64_t sub_2225D5D04(uint64_t a1, uint64_t a2)
{
  return (a2 - a1) >> 3;
}

uint64_t sub_2225D5D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2225D2D24(a2, a1);
}

uint64_t sub_2225D5D1C(uint64_t *a1, unint64_t a2)
{
  if (sub_2225D5DFC((uint64_t)a1, a2) < a2) {
    sub_2225D2A34();
  }
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  uint64_t v6 = sub_2225D5E3C(v5, a2);
  *a1 = v6;
  a1[1] = v6;
  *(void *)sub_2225D2650((uint64_t)a1, v7) = v6 + 8 * v7;

  return nullsub_1(a1, 0);
}

void *sub_2225D5D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2225D5EB8(&v10, a1, a4);
  uint64_t v8 = sub_2225D2650(a1, v7);
  uint64_t v11 = sub_2225D5EBC(v8, a2, a3, v11);
  return sub_2225D284C(&v10);
}

uint64_t sub_2225D5DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_2225D5E64(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_2225D5E3C(uint64_t a1, unint64_t a2)
{
  return sub_2225D5E70(a1, a2);
}

uint64_t sub_2225D5E68()
{
  return 0x1FFFFFFFFFFFFFFFLL;
}

uint64_t sub_2225D5E70(uint64_t a1, unint64_t a2)
{
  if (sub_2225D5E64(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(8 * a2, 4);
}

uint64_t sub_2225D5EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2225C5E90(a2, a3);
  uint64_t v8 = v7;
  uint64_t v9 = j_j_nullsub_1(a4);
  uint64_t v10 = sub_2225D5F44(a1, v6, v8, v9);

  return sub_2225C5F20(a4, v10);
}

void *sub_2225D5F30(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t *result = a2;
  uint64_t v3 = *(void *)(a2 + 8);
  result[1] = v3;
  result[2] = v3 + 8 * a3;
  return result;
}

uint64_t sub_2225D5F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v16 = a4;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  if (a2 != a3)
  {
    uint64_t v8 = v16;
    do
    {
      uint64_t v9 = nullsub_1(v8, v7);
      sub_2225D5FF0(a1, v9, a2);
      a2 += 8;
      uint64_t v8 = v16 + 8;
      v16 += 8;
    }
    while (a2 != a3);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

void sub_2225D5FF4(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

uint64_t sub_2225D6000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_2225D6048(a1, 4u);
  sub_2225D6054(v6, a2, a3);
  return a1;
}

uint64_t sub_2225D6048(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 40 * a2);
}

uint64_t sub_2225D6054(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2225D611C(a2, a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > 0xCCCCCCCCCCCCCCCDLL * ((v7 - sub_2225C3D04((uint64_t)a1)) >> 3))
  {
    unint64_t v8 = sub_2225D5A64((uint64_t)a1);
    sub_2225D6120(a1, v8 + v6);
  }
  uint64_t v9 = sub_2225C3D04((uint64_t)a1);
  sub_2225D6218(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + 40 * v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_2225D6120(void *a1, unint64_t a2)
{
  unint64_t v4 = sub_2225D624C((uint64_t)a1);
  unint64_t v5 = sub_2225D5A64((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  unint64_t v8 = malloc_type_malloc(40 * v7, 0x10520405FBB4089uLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_2225D6290(v9, v10, (uint64_t)v8);
  uint64_t v11 = sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  sub_2225D5544(v11, v12);
  if (!sub_2225C603C(a1))
  {
    long long v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 40 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 40 * v7;
  return result;
}

uint64_t sub_2225D6218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225D631C(a1, a2, a3);
  return v3;
}

unint64_t sub_2225D6234(uint64_t a1, uint64_t a2)
{
  return 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 3);
}

unint64_t sub_2225D624C(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return 0xCCCCCCCCCCCCCCCDLL * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_2225D6290(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D62E8(a3, v5);
      v5 += 40;
      a3 += 40;
    }
    while (v5 != a2);
  }
  return result;
}

_OWORD *sub_2225D62EC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  sub_2225D1354(a1 + 1, a2 + 1);
  return a1;
}

uint64_t sub_2225D631C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3;
  uint64_t v7 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      sub_2225D639C(v6, v4);
      v4 += 40;
      v6 += 40;
      uint64_t v7 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v8, &v7, &v6);
  return v8;
}

uint64_t sub_2225D63A0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  std::string::basic_string((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  return a1;
}

uint64_t sub_2225D63D0(uint64_t a1, uint64_t a2)
{
  return sub_2225D63F4(a1, a2, (uint64_t)&v3);
}

uint64_t sub_2225D63F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  nullsub_1(a1, a2);
  uint64_t v6 = j_j_nullsub_1(a1);
  uint64_t v7 = j_j_nullsub_1(a2);
  sub_2225D647C(v6, v7, a3);
  uint64_t v8 = j_j_nullsub_1(a1);
  uint64_t v9 = j_j_nullsub_1(a2);

  return nullsub_1(v8, v9);
}

uint64_t sub_2225D647C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 2 * sub_2225D64E8(0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 3));

  return sub_2225D6510(a1, a2, a3, v6, 1);
}

unint64_t sub_2225D64E8(unint64_t result)
{
  if (result) {
    return 63 - (int)sub_2225D6810(result);
  }
  return result;
}

uint64_t sub_2225D6510(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = (char *)a2;
  uint64_t v10 = (char *)result;
  uint64_t v25 = (char *)a2;
  unint64_t v26 = result;
LABEL_2:
  for (uint64_t i = 1 - a4; ; ++i)
  {
    uint64_t v12 = v9 - v10;
    unint64_t v13 = 0xCCCCCCCCCCCCCCCDLL * ((v9 - v10) >> 3);
    if (!(!v6 & v5)) {
      break;
    }
    if (v12 <= 959)
    {
      if (a5) {
        return sub_2225D683C((uint64_t)v10, (uint64_t)v9, a3);
      }
      else {
        return sub_2225D6928((uint64_t)v10, (uint64_t)v9, a3);
      }
    }
    if (i == 1) {
      return sub_2225D6A00(v10, (uint64_t)v9, (uint64_t)v9, a3);
    }
    unint64_t v14 = v13 >> 1;
    uint64_t v15 = (uint64_t)(v9 - 40);
    if ((unint64_t)v12 >= 0x1401)
    {
      sub_2225D6A98((uint64_t)v10, (uint64_t)&v10[40 * (v13 >> 1)], v15, a3);
      uint64_t v16 = (uint64_t)v25;
      uint64_t v17 = 5 * v14;
      uint64_t v18 = 40 * v14;
      uint64_t v19 = 40 * v14 - 40;
      sub_2225D6A98(v26 + 40, v26 + v19, (uint64_t)(v25 - 80), a3);
      v18 += 40;
      sub_2225D6A98(v26 + 80, v26 + v18, v16 - 120, a3);
      sub_2225D6A98(v26 + v19, v26 + 8 * v17, v26 + v18, a3);
      unint64_t v24 = v26 + 8 * v17;
      sub_2225D6824(&v26, &v24);
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_2225D6A98((uint64_t)&v10[40 * (v13 >> 1)], (uint64_t)v10, v15, a3);
      if (a5)
      {
LABEL_14:
        uint64_t v9 = v25;
        goto LABEL_15;
      }
    }
    char v20 = sub_2225D6818(a3, v26 - 40, v26);
    uint64_t v9 = v25;
    if ((v20 & 1) == 0)
    {
      uint64_t result = sub_2225D6B70(v26, (uint64_t)v25, a3);
      uint64_t v10 = (char *)result;
LABEL_23:
      a5 = 0;
      unint64_t v26 = (unint64_t)v10;
      a4 = -i;
      goto LABEL_2;
    }
LABEL_15:
    uint64_t v21 = (char *)sub_2225D6CE8(v26, (uint64_t)v9, a3);
    if ((v22 & 1) == 0) {
      goto LABEL_22;
    }
    int v23 = sub_2225D6E68(v26, v21, a3);
    uint64_t v10 = v21 + 40;
    uint64_t result = sub_2225D6E68((uint64_t)(v21 + 40), v9, a3);
    if (result)
    {
      if (v23) {
        return result;
      }
      uint64_t v25 = v21;
      uint64_t v10 = (char *)v26;
      uint64_t v9 = v21;
    }
    else
    {
      if (!v23)
      {
LABEL_22:
        uint64_t result = sub_2225D6510(v26, v21, a3, -i, a5 & 1);
        uint64_t v10 = v21 + 40;
        goto LABEL_23;
      }
      unint64_t v26 = (unint64_t)(v21 + 40);
    }
  }
  switch(v13)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v25 = v9 - 40;
      uint64_t result = sub_2225D6818(a3, (uint64_t)(v9 - 40), (uint64_t)v10);
      if (result) {
        uint64_t result = sub_2225D6824(&v26, &v25);
      }
      break;
    case 3uLL:
      uint64_t v25 = v9 - 40;
      uint64_t result = sub_2225D6830((uint64_t)v10, (uint64_t)(v10 + 40), (uint64_t)(v9 - 40), a3);
      break;
    case 4uLL:
      uint64_t v25 = v9 - 40;
      uint64_t result = sub_2225D6834(v10, v10 + 40, v10 + 80, v9 - 40, a3);
      break;
    case 5uLL:
      uint64_t v25 = v9 - 40;
      uint64_t result = sub_2225D6838(v10, v10 + 40, v10 + 80, v10 + 120, v9 - 40, a3);
      break;
    default:
      JUMPOUT(0);
  }
  return result;
}

unint64_t sub_2225D6810(unint64_t a1)
{
  return __clz(a1);
}

uint64_t sub_2225D6818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225D7074(a2, a3);
}

uint64_t sub_2225D6824(void *a1, void *a2)
{
  return sub_2225D7280(*a1, *a2);
}

uint64_t sub_2225D683C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    v17[5] = v3;
    v17[6] = v4;
    char v6 = (_OWORD *)result;
    uint64_t v7 = result + 40;
    v17[0] = result + 40;
    if (result + 40 != a2)
    {
      uint64_t v9 = result;
      do
      {
        uint64_t result = sub_2225D6818(a3, v7, v9);
        if (result)
        {
          uint64_t v11 = sub_2225D74A4((uint64_t)v17, v10);
          sub_2225D62E8(v16, v11);
          uint64_t v15 = (_OWORD *)v9;
          unint64_t v13 = (_OWORD *)v17[0];
          while (1)
          {
            unint64_t v14 = (_OWORD *)sub_2225D74A4((uint64_t)&v15, v12);
            sub_2225D72DC(v13, v14);
            unint64_t v13 = v15;
            if (v15 == v6) {
              break;
            }
            uint64_t v15 = (_OWORD *)((char *)v15 - 40);
            if ((sub_2225D6818(a3, (uint64_t)v16, (uint64_t)v15) & 1) == 0) {
              goto LABEL_10;
            }
          }
          unint64_t v13 = v6;
LABEL_10:
          sub_2225D72DC(v13, v16);
          uint64_t result = sub_2225D5588(v16);
        }
        uint64_t v9 = v17[0];
        uint64_t v7 = v17[0] + 40;
        v17[0] = v7;
      }
      while (v7 != a2);
    }
  }
  return result;
}

uint64_t sub_2225D6928(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    void v16[5] = v3;
    v16[6] = v4;
    uint64_t v6 = result;
    uint64_t v7 = result + 40;
    for (v16[0] = result + 40; v7 != a2; v16[0] = v7)
    {
      uint64_t result = sub_2225D6818(a3, v7, v6);
      if (result)
      {
        uint64_t v10 = sub_2225D74A4((uint64_t)v16, v9);
        sub_2225D62E8(v15, v10);
        unint64_t v14 = (_OWORD *)v6;
        uint64_t v12 = (_OWORD *)v16[0];
        do
        {
          unint64_t v13 = (_OWORD *)sub_2225D74A4((uint64_t)&v14, v11);
          sub_2225D72DC(v12, v13);
          uint64_t v12 = v14;
          unint64_t v14 = (_OWORD *)((char *)v14 - 40);
        }
        while ((sub_2225D6818(a3, (uint64_t)v15, (uint64_t)v14) & 1) != 0);
        sub_2225D72DC(v12, v15);
        uint64_t result = sub_2225D5588(v15);
      }
      uint64_t v6 = v16[0];
      uint64_t v7 = v16[0] + 40;
    }
  }
  return result;
}

uint64_t sub_2225D6A00(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == (char *)a2)
  {
    return sub_2225D74CC((uint64_t)a1, a3);
  }
  else
  {
    nullsub_1(a1, a3);
    uint64_t v8 = sub_2225D74D4(a1, a2, a3, a4);
    nullsub_1(a2, a3);
    return v8;
  }
}

uint64_t sub_2225D6A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  uint64_t v11 = a3;
  char v7 = sub_2225D6818(a4, a2, a1);
  uint64_t result = sub_2225D6818(a4, a3, a2);
  if ((v7 & 1) == 0)
  {
    if (!result) {
      return result;
    }
    sub_2225D6824(&v12, &v11);
    if (!sub_2225D6818(a4, v12, v13)) {
      return 1;
    }
    uint64_t v9 = &v13;
    uint64_t v10 = &v12;
    goto LABEL_9;
  }
  if (!result)
  {
    sub_2225D6824(&v13, &v12);
    if (!sub_2225D6818(a4, v11, v12)) {
      return 1;
    }
    uint64_t v9 = &v12;
    uint64_t v10 = &v11;
LABEL_9:
    sub_2225D6824(v9, v10);
    return 2;
  }
  sub_2225D6824(&v13, &v11);
  return 1;
}

unint64_t sub_2225D6B70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  char v5 = (_OWORD *)a1;
  unint64_t v16 = a1;
  unint64_t v15 = a2;
  uint64_t v6 = sub_2225D74A4((uint64_t)&v16, a2);
  sub_2225D62E8(v14, v6);
  if (sub_2225D6818(a3, (uint64_t)v14, v4 - 40))
  {
    do
      v16 += 40;
    while ((sub_2225D6818(a3, (uint64_t)v14, v16) & 1) == 0);
  }
  else
  {
    do
    {
      unint64_t v8 = v16 + 40;
      unint64_t v16 = v8;
    }
    while (v8 < v4 && !sub_2225D6818(a3, (uint64_t)v14, v8));
  }
  unint64_t v9 = v16;
  if (v16 < v4)
  {
    do
    {
      v4 -= 40;
      unint64_t v15 = v4;
    }
    while ((sub_2225D6818(a3, (uint64_t)v14, v4) & 1) != 0);
    unint64_t v9 = v16;
  }
  if (v9 < v4)
  {
    do
    {
      sub_2225D6824(&v16, &v15);
      do
        v16 += 40;
      while (!sub_2225D6818(a3, (uint64_t)v14, v16));
      do
        v15 -= 40;
      while ((sub_2225D6818(a3, (uint64_t)v14, v15) & 1) != 0);
      unint64_t v9 = v16;
    }
    while (v16 < v15);
  }
  uint64_t v13 = (_OWORD *)(v9 - 40);
  if ((_OWORD *)(v9 - 40) != v5)
  {
    uint64_t v10 = (_OWORD *)sub_2225D74A4((uint64_t)&v13, v7);
    sub_2225D72DC(v5, v10);
    char v5 = v13;
  }
  sub_2225D72DC(v5, v14);
  unint64_t v11 = v16;
  sub_2225D5588(v14);
  return v11;
}

uint64_t sub_2225D6CE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  char v5 = (_OWORD *)a1;
  unint64_t v15 = a2;
  unint64_t v16 = a1;
  uint64_t v6 = sub_2225D74A4((uint64_t)&v16, a2);
  sub_2225D62E8(v14, v6);
  do
    v16 += 40;
  while ((sub_2225D6818(a3, v16, (uint64_t)v14) & 1) != 0);
  if ((_OWORD *)(v16 - 40) == v5)
  {
    do
    {
      if (v16 >= v4) {
        break;
      }
      v4 -= 40;
      unint64_t v15 = v4;
    }
    while ((sub_2225D6818(a3, v4, (uint64_t)v14) & 1) == 0);
  }
  else
  {
    do
    {
      v4 -= 40;
      unint64_t v15 = v4;
    }
    while (!sub_2225D6818(a3, v4, (uint64_t)v14));
  }
  unint64_t v8 = v16;
  BOOL v13 = v16 >= v4;
  if (v16 < v4)
  {
    do
    {
      sub_2225D6824(&v16, &v15);
      do
        v16 += 40;
      while ((sub_2225D6818(a3, v16, (uint64_t)v14) & 1) != 0);
      do
        v15 -= 40;
      while (!sub_2225D6818(a3, v15, (uint64_t)v14));
      unint64_t v8 = v16;
    }
    while (v16 < v15);
  }
  uint64_t v12 = (_OWORD *)(v8 - 40);
  if ((_OWORD *)(v8 - 40) != v5)
  {
    unint64_t v9 = (_OWORD *)sub_2225D74A4((uint64_t)&v12, v7);
    sub_2225D72DC(v5, v9);
    char v5 = v12;
  }
  sub_2225D72DC(v5, v14);
  uint64_t v10 = sub_2225D7AF8((uint64_t)&v12, (uint64_t)&v13);
  sub_2225D5588(v14);
  return v10;
}

uint64_t sub_2225D6E68(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v20 = a1;
  BOOL v6 = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * (((uint64_t)a2 - a1) >> 3))
  {
    case 0uLL:
    case 1uLL:
      return v6;
    case 2uLL:
      uint64_t v19 = (uint64_t)a2 - 40;
      if (sub_2225D6818(a3, (uint64_t)a2 - 40, a1)) {
        sub_2225D6824(&v20, &v19);
      }
      return v6;
    case 3uLL:
      sub_2225D6830(a1, a1 + 40, (uint64_t)a2 - 40, a3);
      return v6;
    case 4uLL:
      sub_2225D6834(a1, a1 + 40, a1 + 80, (char *)a2 - 40, a3);
      return v6;
    case 5uLL:
      sub_2225D6838(a1, a1 + 40, a1 + 80, a1 + 120, (char *)a2 - 40, a3);
      return v6;
    default:
      uint64_t v7 = a1 + 80;
      sub_2225D6830(a1, a1 + 40, a1 + 80, a3);
      uint64_t v8 = a1 + 120;
      uint64_t v18 = (_OWORD *)(a1 + 120);
      if ((_OWORD *)(a1 + 120) == a2) {
        return 1;
      }
      int v9 = 0;
      break;
  }
  while (!sub_2225D6818(a3, v8, v7))
  {
LABEL_14:
    uint64_t v7 = (uint64_t)v18;
    uint64_t v8 = (uint64_t)v18 + 40;
    uint64_t v18 = (_OWORD *)v8;
    if ((_OWORD *)v8 == a2) {
      return 1;
    }
  }
  uint64_t v11 = sub_2225D74A4((uint64_t)&v18, v10);
  sub_2225D62E8(v17, v11);
  unint64_t v16 = (_OWORD *)v7;
  BOOL v13 = v18;
  while (1)
  {
    unint64_t v14 = (_OWORD *)sub_2225D74A4((uint64_t)&v16, v12);
    sub_2225D72DC(v13, v14);
    BOOL v13 = v16;
    if (v16 == (_OWORD *)a1) {
      break;
    }
    unint64_t v16 = (_OWORD *)((char *)v16 - 40);
    if ((sub_2225D6818(a3, (uint64_t)v17, (uint64_t)v16) & 1) == 0) {
      goto LABEL_12;
    }
  }
  BOOL v13 = (_OWORD *)a1;
LABEL_12:
  sub_2225D72DC(v13, v17);
  if (++v9 != 8)
  {
    sub_2225D5588(v17);
    goto LABEL_14;
  }
  uint64_t v18 = (_OWORD *)((char *)v18 + 40);
  BOOL v6 = v18 == a2;
  sub_2225D5588(v17);
  return v6;
}

uint64_t sub_2225D7074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3C70(a1);
  if (v4 != sub_2225C3C70(a2))
  {
    unint64_t v5 = sub_2225C3C70(a1);
    BOOL v6 = v5 >= sub_2225C3C70(a2);
    return !v6;
  }
  uint64_t v7 = sub_2225C3C70(a1 + 8);
  uint64_t v8 = a2 + 8;
  if (v7 != sub_2225C3C70(a2 + 8))
  {
    unint64_t v9 = sub_2225C3C70(a1 + 8);
    BOOL v6 = v9 >= sub_2225C3C70(v8);
    return !v6;
  }

  return sub_2225D7148(a1 + 16, a2 + 16);
}

uint64_t sub_2225D7148(uint64_t a1, uint64_t a2)
{
  return sub_2225D7164(a1, a2) >> 31;
}

uint64_t sub_2225D7164(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v5 = sub_2225D7234(a2, a2);
  *((void *)&v5 + 1) = v3;
  return sub_2225D71A4(a1, &v5);
}

uint64_t sub_2225D71A4(uint64_t a1, long long *a2)
{
  long long v10 = *a2;
  unint64_t v9 = sub_2225CB920(a1, (uint64_t)a2);
  unint64_t v8 = sub_2225C3D04((uint64_t)&v10);
  uint64_t v4 = (const void *)sub_2225CBED4(a1, v3);
  long long v5 = (const void *)sub_2225C3C70((uint64_t)&v10);
  BOOL v6 = (size_t *)sub_2225CAB38(&v9, &v8);
  uint64_t result = j__memcmp(v4, v5, *v6);
  if (!result)
  {
    if (v9 >= v8) {
      return v9 > v8;
    }
    else {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t sub_2225D7234(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225CBED4(a1, a2);
  uint64_t v5 = sub_2225CB920(a1, v4);
  sub_2225C3D0C(&v7, v3, v5);
  return v7;
}

uint64_t sub_2225D7284(_OWORD *a1, _OWORD *a2)
{
  sub_2225D62E8(v5, a1);
  sub_2225D72DC(a1, a2);
  sub_2225D72DC(a2, v5);
  return sub_2225D5588(v5);
}

_OWORD *sub_2225D72DC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  sub_2225CCDE4((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

uint64_t sub_2225D730C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  uint64_t v11 = a4;
  uint64_t v12 = a3;
  sub_2225D6A98(a1, a2, a3, a5);
  uint64_t result = sub_2225D6818(a5, a4, a3);
  if (result)
  {
    sub_2225D6824(&v12, &v11);
    uint64_t result = sub_2225D6818(a5, v12, a2);
    if (result)
    {
      sub_2225D6824(&v13, &v12);
      uint64_t result = sub_2225D6818(a5, v13, a1);
      if (result) {
        return sub_2225D6824(&v14, &v13);
      }
    }
  }
  return result;
}

uint64_t sub_2225D73C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  uint64_t v14 = a4;
  uint64_t v15 = a3;
  uint64_t v13 = a5;
  sub_2225D730C(a1, a2, a3, a4, a6);
  uint64_t result = sub_2225D6818(a6, a5, a4);
  if (result)
  {
    sub_2225D6824(&v14, &v13);
    uint64_t result = sub_2225D6818(a6, v14, a3);
    if (result)
    {
      sub_2225D6824(&v15, &v14);
      uint64_t result = sub_2225D6818(a6, v15, a2);
      if (result)
      {
        sub_2225D6824(&v16, &v15);
        uint64_t result = sub_2225D6818(a6, v16, a1);
        if (result) {
          return sub_2225D6824(&v17, &v16);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2225D74A4(uint64_t a1, uint64_t a2)
{
  return *(void *)a1;
}

uint64_t sub_2225D74CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2225D74D4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1;
  uint64_t v12 = a1;
  if (a1 == (char *)a2)
  {
    return sub_2225D74CC((uint64_t)a1, a3);
  }
  else
  {
    sub_2225D75D4((uint64_t)a1, a2, a4);
    uint64_t v11 = a2;
    if (a2 != a3)
    {
      uint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - (uint64_t)v5) >> 3);
      uint64_t v9 = a2;
      do
      {
        if (sub_2225D6818(a4, v9, (uint64_t)v12))
        {
          sub_2225D6824(&v11, &v12);
          sub_2225D7660((uint64_t)v12, a4, v8, v12);
        }
        uint64_t v9 = v11 + 40;
        uint64_t v11 = v9;
      }
      while (v9 != a3);
      uint64_t v5 = v12;
    }
    sub_2225D77E0(v5, a2, a4);
    return v11;
  }
}

uint64_t sub_2225D75D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 - result;
  if (a2 - result >= 41)
  {
    uint64_t v5 = result;
    uint64_t v6 = v3 / 40;
    unint64_t v7 = (unint64_t)(v3 / 40 - 2) >> 1;
    unint64_t v8 = v7 + 1;
    uint64_t v9 = (_OWORD *)(result + 40 * v7);
    do
    {
      uint64_t result = sub_2225D7660(v5, a3, v6, v9);
      uint64_t v9 = (_OWORD *)((char *)v9 - 40);
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_2225D7660(uint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  unint64_t v24 = a4;
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v6 = result;
    int64_t v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= (uint64_t)(0xCCCCCCCCCCCCCCCDLL * (((uint64_t)a4 - result) >> 3)))
    {
      int64_t v10 = (0x999999999999999ALL * (((uint64_t)a4 - result) >> 3)) | 1;
      uint64_t v11 = result + 40 * v10;
      int v23 = (_OWORD *)v11;
      int64_t v12 = 0x999999999999999ALL * (((uint64_t)a4 - result) >> 3) + 2;
      if (v12 < a3 && sub_2225D6818(a2, result + 40 * v10, v11 + 40))
      {
        int v23 = (_OWORD *)(v11 + 40);
        v11 += 40;
        int64_t v10 = v12;
      }
      uint64_t result = sub_2225D6818(a2, v11, (uint64_t)a4);
      if ((result & 1) == 0)
      {
        uint64_t v14 = sub_2225D74A4((uint64_t)&v24, v13);
        sub_2225D62E8(v22, v14);
        while (1)
        {
          uint64_t v16 = (_OWORD *)sub_2225D74A4((uint64_t)&v23, v15);
          sub_2225D72DC(v24, v16);
          uint64_t v17 = v23;
          unint64_t v24 = v23;
          if (v7 < v10) {
            break;
          }
          uint64_t v18 = 2 * v10;
          int64_t v10 = (2 * v10) | 1;
          uint64_t v19 = v6 + 40 * v10;
          int v23 = (_OWORD *)v19;
          int64_t v20 = v18 + 2;
          if (v18 + 2 < a3)
          {
            int v21 = sub_2225D6818(a2, v19, v19 + 40);
            uint64_t v19 = (uint64_t)v23;
            if (v21)
            {
              uint64_t v19 = (uint64_t)v23 + 40;
              int v23 = (_OWORD *)((char *)v23 + 40);
              int64_t v10 = v20;
            }
          }
          if (sub_2225D6818(a2, v19, (uint64_t)v22))
          {
            uint64_t v17 = v24;
            break;
          }
        }
        sub_2225D72DC(v17, v22);
        return sub_2225D5588(v22);
      }
    }
  }
  return result;
}

uint64_t sub_2225D77E0(char *a1, uint64_t a2, uint64_t a3)
{
  if (a2 - (uint64_t)a1 >= 41)
  {
    unint64_t v6 = (a2 - (uint64_t)a1) / 0x28uLL;
    uint64_t v7 = a2;
    do
    {
      sub_2225D787C(a1, v7, a3, v6);
      v7 -= 40;
    }
    while (v6-- > 2);
  }

  return nullsub_1(a1, a2);
}

char *sub_2225D787C(char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = result;
  if (a4 >= 2)
  {
    uint64_t v7 = sub_2225D74A4((uint64_t)&v14, a2);
    sub_2225D62E8(v12, v7);
    unint64_t v8 = sub_2225D7958(v14, a3, a4);
    int64_t v10 = v8;
    uint64_t v13 = (_OWORD *)(a2 - 40);
    if (v8 == (_OWORD *)(a2 - 40))
    {
      sub_2225D72DC(v8, v12);
    }
    else
    {
      uint64_t v11 = (_OWORD *)sub_2225D74A4((uint64_t)&v13, v9);
      sub_2225D72DC(v10, v11);
      sub_2225D72DC(v13, v12);
      sub_2225D7A24((uint64_t)v14, (uint64_t)v10 + 40, a3, 0xCCCCCCCCCCCCCCCDLL * (((char *)v10 + 40 - v14) >> 3));
    }
    return (char *)sub_2225D5588(v12);
  }
  return result;
}

_OWORD *sub_2225D7958(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = (uint64_t)a1 + 40 * v6 + 40;
    uint64_t v14 = (_OWORD *)v9;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && sub_2225D6818(a2, v9, v9 + 40))
    {
      uint64_t v14 = (_OWORD *)((char *)v14 + 40);
      uint64_t v6 = v11;
    }
    int64_t v12 = (_OWORD *)sub_2225D74A4((uint64_t)&v14, v9);
    sub_2225D72DC(a1, v12);
    a1 = v14;
  }
  while (v6 <= v8);
  return v14;
}

uint64_t sub_2225D7A24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a4 - 2;
  if (a4 >= 2)
  {
    v17[5] = v4;
    v17[6] = v5;
    uint64_t v8 = result;
    unint64_t v9 = v6 >> 1;
    uint64_t v16 = (_OWORD *)(result + 40 * (v6 >> 1));
    v17[0] = (_OWORD *)(a2 - 40);
    uint64_t result = sub_2225D6818(a3, (uint64_t)v16, a2 - 40);
    if (result)
    {
      uint64_t v11 = sub_2225D74A4((uint64_t)v17, v10);
      sub_2225D62E8(v15, v11);
      while (1)
      {
        uint64_t v13 = (_OWORD *)sub_2225D74A4((uint64_t)&v16, v12);
        sub_2225D72DC(v17[0], v13);
        uint64_t v14 = v16;
        v17[0] = v16;
        if (!v9) {
          break;
        }
        unint64_t v9 = (v9 - 1) >> 1;
        uint64_t v16 = (_OWORD *)(v8 + 40 * v9);
        if ((sub_2225D6818(a3, (uint64_t)v16, (uint64_t)v15) & 1) == 0)
        {
          uint64_t v14 = v17[0];
          break;
        }
      }
      sub_2225D72DC(v14, v15);
      return sub_2225D5588(v15);
    }
  }
  return result;
}

uint64_t sub_2225D7AF8(uint64_t a1, uint64_t a2)
{
  sub_2225D7B28(&v3, a1, a2);
  return v3;
}

uint64_t sub_2225D7B2C(uint64_t result, void *a2, unsigned char *a3)
{
  *(void *)uint64_t result = *a2;
  *(unsigned char *)(result + 8) = *a3;
  return result;
}

unsigned char *sub_2225D7B40(unsigned char *a1, uint64_t a2, unsigned char *a3)
{
  return sub_2225D7B48(a1, a2 - (void)a1, a3);
}

unsigned char *sub_2225D7B48(unsigned char *a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = nullsub_1(a2, a2);

  return sub_2225D7B90(a1, v5, a3);
}

unsigned char *sub_2225D7B90(unsigned char *result, uint64_t a2, unsigned char *a3)
{
  if (a2 >= 1)
  {
    unint64_t v3 = a2 + 1;
    do
    {
      *result++ = *a3;
      --v3;
    }
    while (v3 > 1);
  }
  return result;
}

uint64_t sub_2225D7BB4(uint64_t a1, std::string::size_type a2, std::string::value_type a3)
{
  unint64_t v6 = (std::string *)sub_2225CADD8(a1, &v9, &v8);
  std::string::__init(v6, a2, a3);
  return a1;
}

uint64_t sub_2225D7C08(uint64_t a1, unint64_t a2, int a3, unint64_t a4)
{
  if (a4 < a2) {
    unint64_t v5 = a4 + 1;
  }
  else {
    unint64_t v5 = a2;
  }
  uint64_t v6 = a1 - 1;
  while (v5)
  {
    if (!sub_2225D7C60(*(char *)(v6 + v5--), a3)) {
      return v5;
    }
  }
  return -1;
}

BOOL sub_2225D7C60(int a1, int a2)
{
  return a1 == a2;
}

BOOL sub_2225D7C6C(uint64_t a1, char *a2, unint64_t a3)
{
  return *(void *)(a1 + 8) == a3 && sub_2225D81FC(a1, a2, a3) == 0;
}

uint64_t sub_2225D7CA0(uint64_t a1, int a2, int a3)
{
  *(_DWORD *)(a1 + 20) = a3;
  if (a2)
  {
    sub_2225D7CE0(a1, a2);
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  return a1;
}

void *sub_2225D7CE0(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  if (a2) {
    int v3 = a2;
  }
  else {
    int v3 = 16;
  }
  *(_DWORD *)(a1 + 8) = v3;
  uint64_t result = malloc_type_calloc((v3 + 1), 0xCuLL, 0xE5F47F84uLL);
  *(void *)a1 = result;
  result[*(unsigned int *)(a1 + 8)] = 2;
  return result;
}

uint64_t sub_2225D7D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(_DWORD *)(a1 + 8);
  if (!v6)
  {
    sub_2225D7CE0(a1, 16);
    int v6 = *(_DWORD *)(a1 + 8);
  }
  int v7 = sub_2225D7E84(a2, a3);
  unsigned int v8 = v6 - 1;
  uint64_t v9 = *(void *)a1 + 8 * *(unsigned int *)(a1 + 8) + 8;
  uint64_t v10 = v7 & (v6 - 1);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned int **)(*(void *)a1 + 8 * v10);
  if (v12)
  {
    int v14 = 1;
    uint64_t v15 = 0xFFFFFFFFLL;
    do
    {
      uint64_t v20 = v15;
      if (v12 == (unsigned int *)sub_2225CAE20())
      {
        if (v20 == -1) {
          uint64_t v15 = v11;
        }
        else {
          uint64_t v15 = v20;
        }
      }
      else if (*(_DWORD *)(v9 + 4 * v10) == v7)
      {
        uint64_t v16 = (char *)v12 + *(unsigned int *)(a1 + 20);
        unsigned int v17 = sub_2225C3B40(v12);
        sub_2225C3D0C(v21, v16, v17);
        BOOL v18 = sub_2225CD4BC(a2, a3, v21[0], (size_t)v21[1]);
        uint64_t v15 = v20;
        if (v18) {
          return v11;
        }
      }
      else
      {
        uint64_t v15 = v20;
      }
      int v19 = v11 + v14++;
      uint64_t v10 = v19 & v8;
      uint64_t v12 = *(unsigned int **)(*(void *)a1 + 8 * v10);
      uint64_t v11 = v10;
    }
    while (v12);
    if (v15 == -1) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = v15;
    }
    if (v15 != -1) {
      uint64_t v10 = (int)v15;
    }
  }
  *(_DWORD *)(v9 + 4 * v10) = v7;
  return v11;
}

uint64_t sub_2225D7E84(uint64_t a1, uint64_t a2)
{
  v5[0] = a1;
  v5[1] = a2;
  uint64_t result = sub_2225C3D04((uint64_t)v5);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = 0;
    LODWORD(result) = 0;
    do
      uint64_t result = 33 * result + sub_2225CC124(v5, v4++);
    while (v3 != v4);
  }
  return result;
}

uint64_t sub_2225D7EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a1 + 8);
  if (!v3) {
    return 0xFFFFFFFFLL;
  }
  int v7 = sub_2225D7E84(a2, a3);
  unsigned int v8 = v3 - 1;
  uint64_t v9 = v7 & (v3 - 1);
  uint64_t v10 = *(unsigned int **)(*(void *)a1 + 8 * v9);
  if (!v10) {
    return 0xFFFFFFFFLL;
  }
  int v12 = v7;
  uint64_t v13 = *(void *)a1 + 8 * *(unsigned int *)(a1 + 8) + 8;
  int v14 = 1;
  while (1)
  {
    if (v10 != (unsigned int *)sub_2225CAE20() && *(_DWORD *)(v13 + 4 * v9) == v12)
    {
      uint64_t v15 = (char *)v10 + *(unsigned int *)(a1 + 20);
      unsigned int v16 = sub_2225C3B40(v10);
      sub_2225C3D0C(v18, v15, v16);
      if (sub_2225CD4BC(a2, a3, v18[0], (size_t)v18[1])) {
        break;
      }
    }
    int v17 = v9 + v14++;
    uint64_t v9 = v17 & v8;
    uint64_t v10 = *(unsigned int **)(*(void *)a1 + 8 * v9);
    uint64_t result = 0xFFFFFFFFLL;
    if (!v10) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_2225D7FF0(uint64_t a1, unsigned int *a2)
{
  int v3 = (char *)a2 + *(unsigned int *)(a1 + 20);
  unsigned int v4 = sub_2225C3B40(a2);
  sub_2225C3D0C(v6, v3, v4);
  return sub_2225D8044(a1, v6[0], v6[1]);
}

uint64_t sub_2225D8044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = sub_2225D7EEC(a1, a2, a3);
  if (v4 == -1) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)a1 + 8 * v4);
  *(void *)(*(void *)a1 + 8 * v4) = sub_2225CAE20();
  *(int32x2_t *)(a1 + 12) = vadd_s32(*(int32x2_t *)(a1 + 12), (int32x2_t)0x1FFFFFFFFLL);
  return v5;
}

uint64_t sub_2225D80B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  unsigned int v6 = *(_DWORD *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 12);
  if (3 * v6 >= 4 * v5)
  {
    if (v6 - (v5 + *(_DWORD *)(a1 + 16)) > v6 >> 3) {
      return a2;
    }
    uint64_t v7 = *(unsigned int *)(a1 + 8);
    int v8 = *(_DWORD *)(a1 + 8);
  }
  else
  {
    uint64_t v7 = 2 * v6;
    int v8 = 2 * v6;
  }
  uint64_t v9 = malloc_type_calloc((v8 + 1), 0xCuLL, 0xF0B62E6CuLL);
  uint64_t v10 = &v9[v7];
  void *v10 = 2;
  uint64_t v11 = v10 + 1;
  uint64_t v12 = *(unsigned int *)(a1 + 8);
  int v24 = v8;
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = (uint64_t)v4 + 8 * v6 + 8;
    int v15 = v8 - 1;
    uint64_t v16 = a2;
    do
    {
      uint64_t v17 = *(void *)(*(void *)a1 + 8 * v13);
      if (v17 && v17 != sub_2225CAE20())
      {
        int v18 = *(_DWORD *)(v14 + 4 * v13);
        uint64_t v19 = v18 & v15;
        uint64_t v20 = &v9[v19];
        if (*v20)
        {
          int v21 = 1;
          do
          {
            int v22 = v19 + v21++;
            uint64_t v19 = v22 & v15;
          }
          while (v9[v19]);
          uint64_t v20 = &v9[v19];
        }
        void *v20 = v17;
        *((_DWORD *)v11 + v19) = v18;
        if (v13 == v16) {
          a2 = v19;
        }
        else {
          a2 = a2;
        }
      }
      ++v13;
    }
    while (v13 != v12);
  }
  free(*(void **)a1);
  *(void *)a1 = v9;
  *(_DWORD *)(a1 + 8) = v24;
  *(_DWORD *)(a1 + 16) = 0;
  return a2;
}

uint64_t sub_2225D81FC(uint64_t a1, char *a2, unint64_t a3)
{
  unsigned int v6 = *(char **)a1;
  unint64_t v7 = sub_2225CCCE4(*(void *)(a1 + 8), a3);
  uint64_t result = sub_2225D8260(v6, a2, v7);
  if (!result)
  {
    unint64_t v9 = *(void *)(a1 + 8);
    BOOL v10 = v9 == a3;
    if (v9 < a3) {
      unsigned int v11 = -1;
    }
    else {
      unsigned int v11 = 1;
    }
    if (v10) {
      return 0;
    }
    else {
      return v11;
    }
  }
  return result;
}

uint64_t sub_2225D8260(char *a1, char *a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  uint64_t v3 = a3;
  while (1)
  {
    int v6 = *a1++;
    unsigned int v7 = sub_2225D85BC(v6);
    int v8 = *a2++;
    unsigned int v9 = sub_2225D85BC(v8);
    if (v7 != v9) {
      break;
    }
    if (!--v3) {
      return 0;
    }
  }
  if (v7 < v9) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 1;
  }
}

uint64_t sub_2225D82D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  v15[0] = a2;
  v15[1] = a3;
  uint64_t v8 = sub_2225C3C70(a1);
  uint64_t v9 = sub_2225C3D04(a1);
  sub_2225C3D0C(v14, v8, v9);
  uint64_t v10 = sub_2225C3C70((uint64_t)v15);
  uint64_t v11 = sub_2225C3D04((uint64_t)v15);
  sub_2225C3D0C(v13, v10, v11);
  return sub_2225D8368(v14[0], v14[1], v13[0], v13[1], a4, a5);
}

uint64_t sub_2225D8368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  v37[0] = a1;
  v37[1] = a2;
  v36[0] = a3;
  v36[1] = a4;
  unint64_t v30 = sub_2225C3D04((uint64_t)v37);
  unint64_t v8 = sub_2225C3D04((uint64_t)v36);
  sub_2225D8FA4((uint64_t)v35);
  unint64_t v9 = v8 + 1;
  unint64_t v10 = 2 * (v8 + 1);
  if (v10 < 0x41)
  {
    uint64_t v12 = &v38;
  }
  else
  {
    if (v10 >> 62) {
      uint64_t v11 = -1;
    }
    else {
      uint64_t v11 = 8 * v9;
    }
    uint64_t v12 = (char *)sub_2225C26A4(v11);
    sub_2225D8FA8((uint64_t)v35, (uint64_t)v12);
  }
  uint64_t v13 = 0;
  do
  {
    *(_DWORD *)&v12[4 * v13] = v13;
    ++v13;
  }
  while (v8 >= v13);
  if (v30)
  {
    uint64_t v14 = &v12[4 * v9];
    unint64_t v15 = 1;
    unsigned int v29 = a6;
    unint64_t v28 = v8;
    while (1)
    {
      uint64_t v16 = v14;
      *(_DWORD *)uint64_t v14 = v15;
      unsigned int v34 = 0;
      unsigned int v17 = *(_DWORD *)v14;
      unsigned int v34 = v17;
      if (v8)
      {
        uint64_t v18 = 0;
        uint64_t v31 = v16;
        uint64_t v19 = (int *)(v16 + 4);
        uint64_t v20 = v12 + 4;
        do
        {
          if (a5)
          {
            int v21 = *((_DWORD *)v20 - 1);
            int v22 = *(unsigned __int8 *)sub_2225CB8E4(v37, v15 - 1);
            if (v22 == *(unsigned __int8 *)sub_2225CB8E4(v36, v18)) {
              int v23 = v21;
            }
            else {
              int v23 = v21 + 1;
            }
            int v33 = v23;
            int v32 = *(_DWORD *)sub_2225C2A9C(v19 - 1, v20) + 1;
            int v24 = *(_DWORD *)sub_2225C2A9C(&v33, &v32);
          }
          else
          {
            int v25 = *(unsigned __int8 *)sub_2225CB8E4(v37, v15 - 1);
            if (v25 == *(unsigned __int8 *)sub_2225CB8E4(v36, v18)) {
              int v24 = *((_DWORD *)v20 - 1);
            }
            else {
              int v24 = *(_DWORD *)sub_2225C2A9C(v19 - 1, v20) + 1;
            }
          }
          *uint64_t v19 = v24;
          unsigned int v17 = *(_DWORD *)sub_2225C2A9C(&v34, v19);
          unsigned int v34 = v17;
          ++v19;
          v20 += 4;
          ++v18;
          --v8;
        }
        while (v8);
        a6 = v29;
        unint64_t v8 = v28;
        uint64_t v16 = v31;
      }
      if (a6 && v17 > a6) {
        break;
      }
      ++v15;
      uint64_t v14 = v12;
      uint64_t v12 = v16;
      if (v15 > v30) {
        goto LABEL_28;
      }
    }
    uint64_t v26 = a6 + 1;
  }
  else
  {
    uint64_t v16 = v12;
LABEL_28:
    uint64_t v26 = *(unsigned int *)&v16[4 * v8];
  }
  sub_2225D9018(v35);
  return v26;
}

uint64_t sub_2225D85BC(int a1)
{
  if ((a1 - 65) >= 0x1A) {
    return (char)a1;
  }
  else {
    return (char)(a1 + 32);
  }
}

uint64_t sub_2225D85D4(void *a1, const void *a2, size_t a3, unint64_t a4)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  int v22 = a2;
  size_t v23 = a3;
  unint64_t v6 = sub_2225C3D04((uint64_t)&v22);
  unint64_t v7 = a1[1];
  unint64_t v8 = v7 - v6;
  if (v7 < v6) {
    return -1;
  }
  unint64_t v9 = v6;
  if (v7 >= 0x10 && v6 - 256 > 0xFFFFFFFFFFFFFF00)
  {
    if (v7 > a4)
    {
      int8x16_t v25 = vdupq_n_s8(v6);
      int8x16_t v26 = v25;
      v24[12] = v25;
      v24[13] = v25;
      v24[10] = v25;
      v24[11] = v25;
      v24[8] = v25;
      v24[9] = v25;
      v24[6] = v25;
      v24[7] = v25;
      void v24[4] = v25;
      v24[5] = v25;
      v24[2] = v25;
      v24[3] = v25;
      v24[0] = v25;
      v24[1] = v25;
      unint64_t v10 = v6 - 1;
      if (v6 != 1)
      {
        uint64_t v11 = 0;
        unsigned int v12 = 1;
        do
        {
          *((unsigned char *)v24 + sub_2225CC124(&v22, v11)) = v10 - v11;
          uint64_t v11 = v12;
        }
        while (v10 != v12++);
        unint64_t v7 = a1[1];
      }
      unsigned int v14 = v7 - a4;
      if (v9 <= (v7 - a4))
      {
        while (1)
        {
          a4 = a4;
          v21[0] = sub_2225CE76C(a1, a4, v9);
          v21[1] = v15;
          if (sub_2225C3CC8((uint64_t)v21, v22, v23)) {
            break;
          }
          int v16 = *((unsigned __int8 *)v24 + sub_2225CC124(a1, v10 + a4));
          v14 -= v16;
          LODWORD(a4) = a4 + v16;
          if (v14 < v9) {
            return -1;
          }
        }
        return a4;
      }
    }
    return -1;
  }
  unint64_t v17 = v8 + 1;
  unint64_t v18 = sub_2225CCCE4(a4, v8 + 1);
  if (v18 == v17) {
    return -1;
  }
  a4 = v18;
  while (1)
  {
    *(void *)&v24[0] = sub_2225CE76C(a1, a4, v9);
    *((void *)&v24[0] + 1) = v19;
    if (sub_2225C3CC8((uint64_t)v24, v22, v23)) {
      break;
    }
    if (v17 == ++a4) {
      return -1;
    }
  }
  return a4;
}

uint64_t sub_2225D8790(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v13[0] = a2;
  v13[1] = a3;
  sub_2225D8854(v12);
  if (sub_2225C3D04((uint64_t)v13))
  {
    uint64_t v6 = 0;
    do
    {
      unsigned __int8 v7 = sub_2225CC124(v13, v6);
      sub_2225D8858((uint64_t)v12, v7, 1);
      ++v6;
    }
    while (v6 != sub_2225C3D04((uint64_t)v13));
  }
  unint64_t v8 = sub_2225CCCE4(a4, a1[1]);
  uint64_t v9 = a1[1];
  if (v8 == v9) {
    return -1;
  }
  unint64_t v10 = v8;
  while (!sub_2225D88B0((uint64_t)v12, *(unsigned __int8 *)(*a1 + v10)))
  {
    if (v9 == ++v10) {
      return -1;
    }
  }
  return v10;
}

uint64_t sub_2225D8858(uint64_t a1, unint64_t a2, int a3)
{
  if (a2 >= 0x100) {
    sub_2225CBA24();
  }
  v7[0] = sub_2225D910C(a1, a2);
  v7[1] = v5;
  sub_2225D9110((uint64_t)v7, a3);
  return a1;
}

BOOL sub_2225D88B0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x100) {
    sub_2225CBA24();
  }
  v4[0] = sub_2225D910C(a1, a2);
  v4[1] = v2;
  return sub_2225D9178((uint64_t)v4);
}

unint64_t sub_2225D88F0(void *a1, unsigned __int8 a2, unint64_t a3)
{
  unint64_t result = sub_2225CCCE4(a3, a1[1]);
  uint64_t v6 = a1[1];
  if (result == v6) {
    return -1;
  }
  while (*(unsigned __int8 *)(*a1 + result) == a2)
  {
    if (v6 == ++result) {
      return -1;
    }
  }
  return result;
}

uint64_t sub_2225D8950(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v13[0] = a2;
  v13[1] = a3;
  sub_2225D8854(v12);
  if (sub_2225C3D04((uint64_t)v13))
  {
    uint64_t v6 = 0;
    do
    {
      unsigned __int8 v7 = sub_2225CC124(v13, v6);
      sub_2225D8858((uint64_t)v12, v7, 1);
      ++v6;
    }
    while (v6 != sub_2225C3D04((uint64_t)v13));
  }
  unint64_t v8 = sub_2225CCCE4(a4, a1[1]);
  uint64_t v9 = a1[1];
  if (v8 == v9) {
    return -1;
  }
  unint64_t v10 = v8;
  while (sub_2225D88B0((uint64_t)v12, *(unsigned __int8 *)(*a1 + v10)))
  {
    if (v9 == ++v10) {
      return -1;
    }
  }
  return v10;
}

uint64_t sub_2225D8A14(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v13[0] = a2;
  v13[1] = a3;
  sub_2225D8854(v12);
  if (sub_2225C3D04((uint64_t)v13))
  {
    uint64_t v6 = 0;
    do
    {
      unsigned __int8 v7 = sub_2225CC124(v13, v6);
      sub_2225D8858((uint64_t)v12, v7, 1);
      ++v6;
    }
    while (v6 != sub_2225C3D04((uint64_t)v13));
  }
  unint64_t v8 = sub_2225CCCE4(a4, a1[1]);
  while (v8)
  {
    unint64_t v9 = v8 - 1;
    BOOL v10 = sub_2225D88B0((uint64_t)v12, *(unsigned __int8 *)(*a1 + v8 - 1));
    unint64_t v8 = v9;
    if (v10) {
      return v9;
    }
  }
  return -1;
}

uint64_t sub_2225D8AD4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v15[0] = a2;
  v15[1] = a3;
  sub_2225D8854(v14);
  uint64_t v6 = sub_2225C3D04((uint64_t)v15);
  if (v6)
  {
    uint64_t v7 = v6;
    for (uint64_t i = 0; i != v7; ++i)
    {
      unsigned __int8 v9 = sub_2225CC124(v15, i);
      sub_2225D8858((uint64_t)v14, v9, 1);
    }
  }
  unint64_t v10 = sub_2225CCCE4(a4, a1[1]);
  while (v10)
  {
    unint64_t v11 = v10 - 1;
    BOOL v12 = sub_2225D88B0((uint64_t)v14, *(unsigned __int8 *)(*a1 + v10 - 1));
    unint64_t v10 = v11;
    if (!v12) {
      return v11;
    }
  }
  return -1;
}

uint64_t sub_2225D8B90(long long *a1, uint64_t a2, const void *a3, size_t a4, int a5, int a6)
{
  long long v14 = *a1;
  if (sub_2225C3C70((uint64_t)&v14))
  {
    int v11 = 0;
    do
    {
      if ((a5 & 0x80000000) == 0 && v11 >= a5) {
        break;
      }
      sub_2225D8C7C(&v14, a3, a4, (uint64_t)v13);
      if ((a6 & 1) != 0 || sub_2225C3D04((uint64_t)v13)) {
        sub_2225CC69C(a2, v13);
      }
      long long v14 = v13[1];
      ++v11;
    }
    while (sub_2225C3C70((uint64_t)&v14));
  }
  uint64_t result = sub_2225C3C70((uint64_t)&v14);
  if (result)
  {
    uint64_t result = sub_2225C3D04((uint64_t)&v14);
    if (result || a6) {
      return sub_2225CC69C(a2, &v14);
    }
  }
  return result;
}

uint64_t sub_2225D8C7C@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X2>, uint64_t a4@<X8>)
{
  v14[0] = a2;
  v14[1] = a3;
  unint64_t v6 = sub_2225D85D4(a1, a2, a3, 0);
  if (v6 == -1)
  {
    sub_2225CCC70(v13);
    return sub_2225CCC60((uint64_t)a1, (uint64_t)v13, a4);
  }
  else
  {
    unint64_t v7 = v6;
    v13[0] = sub_2225CCC74(a1, 0, v6);
    v13[1] = v8;
    uint64_t v9 = sub_2225C3D04((uint64_t)v14);
    v12[0] = sub_2225CCC74(a1, v9 + v7, 0xFFFFFFFFFFFFFFFFLL);
    v12[1] = v10;
    return sub_2225CCC60((uint64_t)v13, (uint64_t)v12, a4);
  }
}

uint64_t sub_2225D8D24(uint64_t a1, uint64_t a2, unsigned int a3, unint64_t *a4)
{
  unsigned int v5 = a3;
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  if (!a3) {
    unsigned int v5 = sub_2225D8E7C(&v12);
  }
  if (sub_2225CF1E0((uint64_t)&v12)) {
    return 1;
  }
  for (*a4 = 0; !sub_2225CF1E0((uint64_t)&v12); uint64_t v13 = v11)
  {
    if ((int)sub_2225CC124(&v12, 0) < 48 || (int)sub_2225CC124(&v12, 0) >= 58)
    {
      if ((int)sub_2225CC124(&v12, 0) < 97 || (int)sub_2225CC124(&v12, 0) >= 123)
      {
        if ((int)sub_2225CC124(&v12, 0) < 65 || (int)sub_2225CC124(&v12, 0) > 90) {
          return 1;
        }
        int v7 = -55;
      }
      else
      {
        int v7 = -87;
      }
    }
    else
    {
      int v7 = -48;
    }
    unsigned int v8 = v7 + sub_2225CC124(&v12, 0);
    if (v8 >= v5) {
      return 1;
    }
    unint64_t v9 = *a4;
    unint64_t v10 = *a4 * v5 + v8;
    *a4 = v10;
    if (v10 / v5 < v9) {
      return 1;
    }
    uint64_t v12 = sub_2225CE76C(&v12, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
  }
  return 0;
}

uint64_t sub_2225D8E7C(uint64_t *a1)
{
  sub_2225C3D00((int)v10, "0x");
  if (sub_2225D0520((uint64_t)a1, v10[0], (size_t)v10[1]))
  {
    *a1 = sub_2225CE76C(a1, 2uLL, 0xFFFFFFFFFFFFFFFFLL);
    a1[1] = v2;
    return 16;
  }
  else
  {
    sub_2225C3D00((int)v9, "0b");
    if (sub_2225D0520((uint64_t)a1, v9[0], (size_t)v9[1]))
    {
      uint64_t v3 = 2;
      *a1 = sub_2225CE76C(a1, 2uLL, 0xFFFFFFFFFFFFFFFFLL);
      a1[1] = v4;
    }
    else
    {
      sub_2225C3D00((int)v8, "0o");
      if (sub_2225D0520((uint64_t)a1, v8[0], (size_t)v8[1]))
      {
        *a1 = sub_2225CE76C(a1, 2uLL, 0xFFFFFFFFFFFFFFFFLL);
        a1[1] = v5;
        return 8;
      }
      else
      {
        sub_2225C3D00((int)v7, "0");
        if (sub_2225D0520((uint64_t)a1, v7[0], (size_t)v7[1])) {
          return 8;
        }
        else {
          return 10;
        }
      }
    }
  }
  return v3;
}

uint64_t sub_2225D8F88(char **a1)
{
  return **a1;
}

double sub_2225D8F98(_OWORD *a1)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void sub_2225D8FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    int v7 = j_nullsub_1(a1, v6);
    sub_2225D9070(v7, v4);
  }
}

uint64_t sub_2225D901C(uint64_t a1)
{
  return sub_2225D9044(a1, &v3, &v2);
}

uint64_t sub_2225D9048(void *a1)
{
  uint64_t v1 = sub_2225D2584(a1);

  return nullsub_1(v1, v2);
}

void sub_2225D9070(int a1, void *a2)
{
  if (a2) {
    j__free(a2);
  }
}

uint64_t sub_2225D9080(uint64_t a1)
{
  return a1;
}

void sub_2225D90AC(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v4) = 0;
  if (v3)
  {
    int v6 = j_nullsub_1(a1, v5);
    sub_2225D9070(v6, v3);
  }
}

uint64_t sub_2225D9110(uint64_t result, int a2)
{
  uint64_t v2 = *(void *)(result + 8);
  if (a2) {
    uint64_t v3 = **(void **)result | v2;
  }
  else {
    uint64_t v3 = **(void **)result & ~v2;
  }
  **(void **)double result = v3;
  return result;
}

uint64_t sub_2225D913C(uint64_t a1, unint64_t a2)
{
  sub_2225C3D0C(&v3, a1 + 8 * (a2 >> 6), 1 << a2);
  return v3;
}

BOOL sub_2225D9178(uint64_t a1)
{
  return (*(void *)(a1 + 8) & **(void **)a1) != 0;
}

uint64_t sub_2225D918C()
{
  return 1;
}

long long *sub_2225D9194()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7E160, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267F7E160))
  {
    sub_2225D1320(&xmmword_267F7E150, 0x8000000000000000, 0);
    __cxa_guard_release(&qword_267F7E160);
  }
  return &xmmword_267F7E150;
}

uint64_t sub_2225D91F4(uint64_t result)
{
  int v1 = 1000000000;
  int v2 = *(_DWORD *)(result + 8);
  if (v2 <= 999999999)
  {
    uint64_t v4 = *(void *)result;
    if (v2 >= -999999999) {
      goto LABEL_16;
    }
    int v6 = -1999999999 - v2;
    if (v2 > 0x88CA6C01) {
      int v6 = 0;
    }
    LODWORD(v7) = ((__PAIR64__(v6, v2) - 2294967297u) >> 32) / 0x3B9ACA00;
    if (v2 >= 0x88CA6C01) {
      uint64_t v7 = v7;
    }
    else {
      uint64_t v7 = (v7 + 1);
    }
    v4 += ~v7;
    v2 += 1000000000 * v7 + 1000000000;
  }
  else
  {
    uint64_t v3 = *(void *)result;
    if (v2 > 0x773593FF) {
      ++v3;
    }
    uint64_t v4 = v3 + 1;
    if (v2 >= 0x77359400) {
      int v5 = -1000000000;
    }
    else {
      int v5 = 0;
    }
    int v2 = v5 + v2 - 1000000000;
  }
  *(void *)double result = v4;
  *(_DWORD *)(result + 8) = v2;
LABEL_16:
  if (v4 >= 1)
  {
    if ((v2 & 0x80000000) == 0) {
      return result;
    }
    uint64_t v8 = -1;
LABEL_23:
    *(void *)double result = v4 + v8;
    *(_DWORD *)(result + 8) = v2 + v1;
    return result;
  }
  if (v4 && v2 >= 1)
  {
    uint64_t v8 = 1;
    int v1 = -1000000000;
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_2225D92D8()
{
  v1.tv_usec = 0;
  v1.tv_sec = 0;
  if (gettimeofday(&v1, 0))
  {
    sub_2225D9194();
    return xmmword_267F7E150;
  }
  else
  {
    sub_2225D1320(&v2, v1.tv_sec - 946684800, (1000 * v1.tv_usec));
  }
  return v2;
}

uint64_t sub_2225D9350(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 7)
  {
    int v6 = (_DWORD *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *(_DWORD *)((char *)a2 + 3) == *(_DWORD *)((char *)v6 + 3)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225D93C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 10)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(unsigned __int16 *)(a2 + 8) == (unint64_t)*(unsigned __int16 *)(v6 + 8))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225D9438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 5)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(_DWORD *)a2 == *(_DWORD *)v6 && *(unsigned __int8 *)(a2 + 4) == *(unsigned __int8 *)(v6 + 4)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225D94AC(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 3)
  {
    uint64_t v6 = (unsigned __int16 *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *((unsigned __int8 *)a2 + 2) == *((unsigned __int8 *)v6 + 2)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225D9520(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 4 && *a2 == *(_DWORD *)sub_2225C3C70(a1)) {
    *(void *)(a1 + 16) = a3;
  }
  return a1;
}

uint64_t sub_2225D9588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 6)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(_DWORD *)a2 == *(_DWORD *)v6 && *(unsigned __int16 *)(a2 + 4) == *(unsigned __int16 *)(v6 + 4)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225D95FC(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 8 && *a2 == *(void *)sub_2225C3C70(a1)) {
    *(void *)(a1 + 16) = a3;
  }
  return a1;
}

uint64_t sub_2225D9664(uint64_t a1, unsigned int *a2)
{
  long long v2 = *(unsigned int **)(a1 + 16);
  if (!v2) {
    long long v2 = a2;
  }
  return *v2;
}

uint64_t sub_2225D9678(uint64_t a1, uint64_t a2)
{
  sub_2225DBA20(a2, (std::string *)a1);
  uint64_t v3 = sub_2225D9BE8(a1);
  *(_DWORD *)(a1 + 24) = sub_2225D9718(v3, v4);
  uint64_t v5 = sub_2225D9BE8(a1);
  *(_DWORD *)(a1 + 28) = sub_2225D9C24(v5, v6);
  uint64_t v7 = sub_2225D9F3C(a1);
  *(_DWORD *)(a1 + 32) = sub_2225D9DFC(v7, v8);
  uint64_t v9 = sub_2225DA1F4(a1);
  *(_DWORD *)(a1 + 36) = sub_2225D9F90(v9, v10);
  uint64_t v11 = sub_2225DA3A0(a1);
  *(_DWORD *)(a1 + 40) = sub_2225DA260(v11, v12);
  uint64_t v13 = sub_2225DA3A0(a1);
  int v15 = sub_2225DA40C(v13, v14);
  *(_DWORD *)(a1 + 44) = v15;
  if (!v15) {
    *(_DWORD *)(a1 + 44) = sub_2225DA490(a1);
  }
  return a1;
}

uint64_t sub_2225D9718(uint64_t a1, uint64_t a2)
{
  long long v2 = sub_2225D934C(v95, a1, a2);
  int v94 = 24;
  uint64_t v3 = sub_2225DAD94((uint64_t)v2, "i386", "i486", "i586", "i686", (uint64_t)&v94);
  int v93 = 24;
  uint64_t v4 = sub_2225DAE00(v3, "i786", "i886", "i986", (uint64_t)&v93);
  int v92 = 25;
  uint64_t v5 = sub_2225DAE5C(v4, (uint64_t)"amd64", (uint64_t)"x86_64", "x86_64h", (uint64_t)&v92);
  int v91 = 11;
  uint64_t v6 = sub_2225D9350(v5, "powerpc", (uint64_t)&v91);
  int v90 = 12;
  uint64_t v7 = sub_2225DAEB8(v6, (uint64_t)"powerpc64", (unsigned __int16 *)"ppu", (uint64_t)&v90);
  int v89 = 13;
  uint64_t v8 = sub_2225DAEFC(v7, "powerpc64le", (uint64_t)&v89);
  int v88 = 3;
  uint64_t v9 = sub_2225D9350(v8, "aarch64", (uint64_t)&v88);
  int v87 = 4;
  uint64_t v10 = sub_2225D93C4(v9, (uint64_t)"aarch64_be", (uint64_t)&v87);
  int v86 = 3;
  uint64_t v11 = sub_2225D9438(v10, (uint64_t)"arm64", (uint64_t)&v86);
  int v85 = 1;
  uint64_t v12 = sub_2225DAF70(v11, (unsigned __int16 *)"arm", (uint64_t)"xscale", (uint64_t)&v85);
  int v84 = 1;
  uint64_t v13 = sub_2225DAFB4(v12, "armv", (uint64_t)&v84);
  int v83 = 2;
  uint64_t v14 = sub_2225D9438(v13, (uint64_t)"armeb", (uint64_t)&v83);
  int v82 = 2;
  uint64_t v15 = sub_2225DB01C(v14, (uint64_t)"armebv", (uint64_t)&v82);
  int v81 = 22;
  uint64_t v16 = sub_2225D9438(v15, (uint64_t)"thumb", (uint64_t)&v81);
  int v80 = 22;
  uint64_t v17 = sub_2225DB01C(v16, (uint64_t)"thumbv", (uint64_t)&v80);
  int v79 = 23;
  uint64_t v18 = sub_2225D9350(v17, "thumbeb", (uint64_t)&v79);
  int v78 = 23;
  uint64_t v19 = sub_2225DB090(v18, "thumbebv", (uint64_t)&v78);
  int v77 = 10;
  uint64_t v20 = sub_2225D9588(v19, (uint64_t)"msp430", (uint64_t)&v77);
  int v76 = 6;
  uint64_t v21 = sub_2225DB0F8(v20, "mips", (uint64_t)"mipseb", (uint64_t)"mipsallegrex", (uint64_t)&v76);
  int v75 = 7;
  uint64_t v22 = sub_2225DB154(v21, (uint64_t)"mipsel", "mipsallegrexel", (uint64_t)&v75);
  int v74 = 8;
  uint64_t v23 = sub_2225DB198(v22, (uint64_t)"mips64", "mips64eb", (uint64_t)&v74);
  int v73 = 9;
  uint64_t v24 = sub_2225D95FC(v23, "mips64el", (uint64_t)&v73);
  int v72 = 14;
  uint64_t v25 = sub_2225D9520(v24, "r600", (uint64_t)&v72);
  int v71 = 5;
  uint64_t v26 = sub_2225D9350(v25, "hexagon", (uint64_t)&v71);
  int v70 = 20;
  uint64_t v27 = sub_2225D9438(v26, (uint64_t)"s390x", (uint64_t)&v70);
  int v69 = 18;
  uint64_t v28 = sub_2225D9438(v27, (uint64_t)"sparc", (uint64_t)&v69);
  int v68 = 19;
  uint64_t v29 = sub_2225DB1DC(v28, "sparcv9", "sparc64", (uint64_t)&v68);
  int v67 = 21;
  uint64_t v30 = sub_2225D94AC(v29, (unsigned __int16 *)"tce", (uint64_t)&v67);
  int v66 = 26;
  uint64_t v31 = sub_2225D9438(v30, (uint64_t)"xcore", (uint64_t)&v66);
  int v65 = 27;
  uint64_t v32 = sub_2225D9438(v31, (uint64_t)"nvptx", (uint64_t)&v65);
  int v64 = 28;
  uint64_t v33 = sub_2225D9350(v32, "nvptx64", (uint64_t)&v64);
  int v63 = 29;
  uint64_t v34 = sub_2225D9588(v33, (uint64_t)"igil32", (uint64_t)&v63);
  int v62 = 30;
  uint64_t v35 = sub_2225D9588(v34, (uint64_t)"igil64", (uint64_t)&v62);
  int v61 = 31;
  uint64_t v36 = sub_2225D9438(v35, (uint64_t)"air64", (uint64_t)&v61);
  int v60 = 32;
  uint64_t v37 = sub_2225D9350(v36, "amdil64", (uint64_t)&v60);
  int v59 = 33;
  uint64_t v38 = sub_2225D9588(v37, (uint64_t)"gpu_32", (uint64_t)&v59);
  int v58 = 34;
  uint64_t v39 = sub_2225D9588(v38, (uint64_t)"gpu_64", (uint64_t)&v58);
  int v57 = 35;
  uint64_t v40 = sub_2225D9520(v39, "le32", (uint64_t)&v57);
  int v56 = 36;
  uint64_t v41 = sub_2225D9438(v40, (uint64_t)"amdil", (uint64_t)&v56);
  int v55 = 37;
  uint64_t v42 = sub_2225D9520(v41, "spir", (uint64_t)&v55);
  int v54 = 38;
  uint64_t v43 = sub_2225D9588(v42, (uint64_t)"spir64", (uint64_t)&v54);
  int v53 = 39;
  uint64_t v44 = sub_2225D9350(v43, "kalimba", (uint64_t)&v53);
  int v52 = 15;
  uint64_t v45 = sub_2225D9520(v44, "agx0", (uint64_t)&v52);
  int v51 = 16;
  uint64_t v46 = sub_2225D9520(v45, "agx1", (uint64_t)&v51);
  int v50 = 17;
  uint64_t v47 = sub_2225D9520(v46, "agx2", (uint64_t)&v50);
  unsigned int v49 = 0;
  return sub_2225D9664(v47, &v49);
}

uint64_t sub_2225D9BE8(uint64_t a1)
{
  sub_2225CCBF8(v2, a1);
  sub_2225CC9A8(v2, 0x2Du, (uint64_t)&v3);
  return v3;
}

uint64_t sub_2225D9C24(uint64_t a1, uint64_t a2)
{
  long long v2 = sub_2225D934C(v41, a1, a2);
  int v40 = 1;
  uint64_t v3 = sub_2225DB37C((uint64_t)v2, (unsigned __int16 *)"v8", (uint64_t)&v40);
  int v39 = 1;
  uint64_t v4 = sub_2225DB3F4(v3, (unsigned __int16 *)"v8a", (uint64_t)&v39);
  int v38 = 2;
  uint64_t v5 = sub_2225DB37C(v4, (unsigned __int16 *)"v7", (uint64_t)&v38);
  int v37 = 2;
  uint64_t v6 = sub_2225DB3F4(v5, (unsigned __int16 *)"v7a", (uint64_t)&v37);
  int v36 = 3;
  uint64_t v7 = sub_2225DB478(v6, "v7em", (uint64_t)&v36);
  int v35 = 2;
  uint64_t v8 = sub_2225DB3F4(v7, (unsigned __int16 *)"v7l", (uint64_t)&v35);
  int v34 = 4;
  uint64_t v9 = sub_2225DB3F4(v8, (unsigned __int16 *)"v7m", (uint64_t)&v34);
  int v33 = 2;
  uint64_t v10 = sub_2225DB3F4(v9, (unsigned __int16 *)"v7r", (uint64_t)&v33);
  int v32 = 5;
  uint64_t v11 = sub_2225DB3F4(v10, (unsigned __int16 *)"v7s", (uint64_t)&v32);
  int v31 = 6;
  uint64_t v12 = sub_2225DB3F4(v11, (unsigned __int16 *)"v7k", (uint64_t)&v31);
  int v30 = 7;
  uint64_t v13 = sub_2225DB37C(v12, (unsigned __int16 *)"v6", (uint64_t)&v30);
  int v29 = 8;
  uint64_t v14 = sub_2225DB3F4(v13, (unsigned __int16 *)"v6m", (uint64_t)&v29);
  int v28 = 9;
  uint64_t v15 = sub_2225DB478(v14, "v6t2", (uint64_t)&v28);
  int v27 = 10;
  uint64_t v16 = sub_2225DB37C(v15, (unsigned __int16 *)"v5", (uint64_t)&v27);
  int v26 = 10;
  uint64_t v17 = sub_2225DB3F4(v16, (unsigned __int16 *)"v5e", (uint64_t)&v26);
  int v25 = 10;
  uint64_t v18 = sub_2225DB3F4(v17, (unsigned __int16 *)"v5t", (uint64_t)&v25);
  int v24 = 11;
  uint64_t v19 = sub_2225DB478(v18, "v5te", (uint64_t)&v24);
  int v23 = 12;
  uint64_t v20 = sub_2225DB3F4(v19, (unsigned __int16 *)"v4t", (uint64_t)&v23);
  unsigned int v22 = 0;
  return sub_2225D9664(v20, &v22);
}

uint64_t sub_2225D9DFC(uint64_t a1, uint64_t a2)
{
  long long v2 = sub_2225D934C(v27, a1, a2);
  int v26 = 1;
  uint64_t v3 = sub_2225D9438((uint64_t)v2, (uint64_t)"apple", (uint64_t)&v26);
  int v25 = 2;
  uint64_t v4 = sub_2225DB4FC(v3, (unsigned __int16 *)"pc", (uint64_t)&v25);
  int v24 = 3;
  uint64_t v5 = sub_2225D9520(v4, "scei", (uint64_t)&v24);
  int v23 = 4;
  uint64_t v6 = sub_2225D94AC(v5, (unsigned __int16 *)"bgp", (uint64_t)&v23);
  int v22 = 5;
  uint64_t v7 = sub_2225D94AC(v6, (unsigned __int16 *)"bgq", (uint64_t)&v22);
  int v21 = 6;
  uint64_t v8 = sub_2225D94AC(v7, (unsigned __int16 *)"fsl", (uint64_t)&v21);
  int v20 = 7;
  uint64_t v9 = sub_2225D94AC(v8, (unsigned __int16 *)"ibm", (uint64_t)&v20);
  int v19 = 8;
  uint64_t v10 = sub_2225D94AC(v9, (unsigned __int16 *)"img", (uint64_t)&v19);
  int v18 = 9;
  uint64_t v11 = sub_2225D94AC(v10, (unsigned __int16 *)"mti", (uint64_t)&v18);
  int v17 = 10;
  uint64_t v12 = sub_2225D9588(v11, (uint64_t)"nvidia", (uint64_t)&v17);
  int v16 = 11;
  uint64_t v13 = sub_2225D94AC(v12, (unsigned __int16 *)"csr", (uint64_t)&v16);
  unsigned int v15 = 0;
  return sub_2225D9664(v13, &v15);
}

uint64_t sub_2225D9F3C(uint64_t a1)
{
  sub_2225CCBF8(v2, a1);
  sub_2225CC9A8(v2, 0x2Du, (uint64_t)&v3);
  long long v5 = v4;
  sub_2225CC9A8(&v5, 0x2Du, (uint64_t)&v3);
  return v3;
}

uint64_t sub_2225D9F90(uint64_t a1, uint64_t a2)
{
  long long v2 = sub_2225D934C(v51, a1, a2);
  int v50 = 1;
  uint64_t v3 = sub_2225DB01C((uint64_t)v2, (uint64_t)"darwin", (uint64_t)&v50);
  int v49 = 2;
  uint64_t v4 = sub_2225DB564(v3, (uint64_t)"dragonfly", (uint64_t)&v49);
  int v48 = 3;
  uint64_t v5 = sub_2225DB5D8(v4, "freebsd", (uint64_t)&v48);
  int v47 = 4;
  uint64_t v6 = sub_2225DB64C(v5, (unsigned __int16 *)"ios", (uint64_t)&v47);
  int v46 = 5;
  uint64_t v7 = sub_2225DB090(v6, "kfreebsd", (uint64_t)&v46);
  int v45 = 6;
  uint64_t v8 = sub_2225DB6C0(v7, (uint64_t)"linux", (uint64_t)&v45);
  int v44 = 7;
  uint64_t v9 = sub_2225DB64C(v8, (unsigned __int16 *)"lv2", (uint64_t)&v44);
  int v43 = 8;
  uint64_t v10 = sub_2225DB01C(v9, (uint64_t)"macosx", (uint64_t)&v43);
  int v42 = 9;
  uint64_t v11 = sub_2225DB01C(v10, (uint64_t)"netbsd", (uint64_t)&v42);
  int v41 = 10;
  uint64_t v12 = sub_2225DB5D8(v11, "openbsd", (uint64_t)&v41);
  int v40 = 11;
  uint64_t v13 = sub_2225DB5D8(v12, "solaris", (uint64_t)&v40);
  int v39 = 12;
  uint64_t v14 = sub_2225DB6C0(v13, (uint64_t)"win32", (uint64_t)&v39);
  int v38 = 12;
  uint64_t v15 = sub_2225DB5D8(v14, "windows", (uint64_t)&v38);
  int v37 = 13;
  uint64_t v16 = sub_2225DB6C0(v15, (uint64_t)"haiku", (uint64_t)&v37);
  int v36 = 14;
  uint64_t v17 = sub_2225DB6C0(v16, (uint64_t)"minix", (uint64_t)&v36);
  int v35 = 15;
  uint64_t v18 = sub_2225DB6C0(v17, (uint64_t)"rtems", (uint64_t)&v35);
  int v34 = 16;
  uint64_t v19 = sub_2225DAFB4(v18, "nacl", (uint64_t)&v34);
  int v33 = 17;
  uint64_t v20 = sub_2225DB64C(v19, (unsigned __int16 *)"cnk", (uint64_t)&v33);
  int v32 = 18;
  uint64_t v21 = sub_2225DB01C(v20, (uint64_t)"bitrig", (uint64_t)&v32);
  int v31 = 19;
  uint64_t v22 = sub_2225DB64C(v21, (unsigned __int16 *)"aix", (uint64_t)&v31);
  int v30 = 20;
  uint64_t v23 = sub_2225DAFB4(v22, "cuda", (uint64_t)&v30);
  int v29 = 21;
  uint64_t v24 = sub_2225DAFB4(v23, "nvcl", (uint64_t)&v29);
  int v28 = 22;
  uint64_t v25 = sub_2225DAFB4(v24, "tvos", (uint64_t)&v28);
  unsigned int v27 = 0;
  return sub_2225D9664(v25, &v27);
}

uint64_t sub_2225DA1F4(uint64_t a1)
{
  sub_2225CCBF8(v2, a1);
  sub_2225CC9A8(v2, 0x2Du, (uint64_t)&v3);
  long long v5 = v4;
  sub_2225CC9A8(&v5, 0x2Du, (uint64_t)&v3);
  long long v5 = v4;
  sub_2225CC9A8(&v5, 0x2Du, (uint64_t)&v3);
  return v3;
}

uint64_t sub_2225DA260(uint64_t a1, uint64_t a2)
{
  long long v2 = sub_2225D934C(v27, a1, a2);
  int v26 = 7;
  uint64_t v3 = sub_2225DB01C((uint64_t)v2, (uint64_t)"eabihf", (uint64_t)&v26);
  int v25 = 6;
  uint64_t v4 = sub_2225DAFB4(v3, "eabi", (uint64_t)&v25);
  int v24 = 3;
  uint64_t v5 = sub_2225DB564(v4, (uint64_t)"gnueabihf", (uint64_t)&v24);
  int v23 = 2;
  uint64_t v6 = sub_2225DB5D8(v5, "gnueabi", (uint64_t)&v23);
  int v22 = 4;
  uint64_t v7 = sub_2225DB01C(v6, (uint64_t)"gnux32", (uint64_t)&v22);
  int v21 = 5;
  uint64_t v8 = sub_2225DB01C(v7, (uint64_t)"code16", (uint64_t)&v21);
  int v20 = 1;
  uint64_t v9 = sub_2225DB64C(v8, (unsigned __int16 *)"gnu", (uint64_t)&v20);
  int v19 = 8;
  uint64_t v10 = sub_2225DB5D8(v9, "android", (uint64_t)&v19);
  int v18 = 9;
  uint64_t v11 = sub_2225DAFB4(v10, "msvc", (uint64_t)&v18);
  int v17 = 10;
  uint64_t v12 = sub_2225DB5D8(v11, "itanium", (uint64_t)&v17);
  int v16 = 11;
  uint64_t v13 = sub_2225DB01C(v12, (uint64_t)"cygnus", (uint64_t)&v16);
  unsigned int v15 = 0;
  return sub_2225D9664(v13, &v15);
}

uint64_t sub_2225DA3A0(uint64_t a1)
{
  sub_2225CCBF8(v2, a1);
  sub_2225CC9A8(v2, 0x2Du, (uint64_t)v3);
  long long v5 = v4;
  sub_2225CC9A8(&v5, 0x2Du, (uint64_t)v3);
  long long v5 = v4;
  sub_2225CC9A8(&v5, 0x2Du, (uint64_t)v3);
  return v4;
}

uint64_t sub_2225DA40C(uint64_t a1, uint64_t a2)
{
  sub_2225D934C(v10, a1, a2);
  int v9 = 1;
  uint64_t v2 = sub_2225DB478((uint64_t)v10, "coff", (uint64_t)&v9);
  int v8 = 2;
  uint64_t v3 = sub_2225DB3F4(v2, (unsigned __int16 *)"elf", (uint64_t)&v8);
  int v7 = 3;
  uint64_t v4 = sub_2225DB734(v3, (uint64_t)"macho", (uint64_t)&v7);
  unsigned int v6 = 0;
  return sub_2225D9664(v4, &v6);
}

uint64_t sub_2225DA490(uint64_t a1)
{
  if (sub_2225DB7B8(a1)) {
    return 3;
  }
  if (sub_2225DB804(a1)) {
    return 1;
  }
  return 2;
}

uint64_t sub_2225DA4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  v63[11] = *(const void **)MEMORY[0x263EF8340];
  *(void *)&long long v62 = a1;
  *((void *)&v62 + 1) = a2;
  sub_2225CF1C8(v63);
  sub_2225C3D00((int)v61, "-");
  sub_2225D8B90(&v62, (uint64_t)v63, v61[0], (size_t)v61[1], -1, 1);
  if (sub_2225D1E3C((uint64_t)v63))
  {
    uint64_t v4 = (uint64_t *)sub_2225D1DB0((uint64_t)v63, 0);
    int v5 = sub_2225D9718(*v4, v4[1]);
  }
  else
  {
    int v5 = 0;
  }
  if ((unint64_t)sub_2225D1E3C((uint64_t)v63) < 2)
  {
    int v7 = 0;
  }
  else
  {
    unsigned int v6 = (uint64_t *)sub_2225D1DB0((uint64_t)v63, 1u);
    int v7 = sub_2225D9DFC(*v6, v6[1]);
  }
  if ((unint64_t)sub_2225D1E3C((uint64_t)v63) < 3)
  {
    int v9 = 0;
    BOOL v53 = 0;
    BOOL v12 = 0;
  }
  else
  {
    int v8 = (uint64_t *)sub_2225D1DB0((uint64_t)v63, 2u);
    int v9 = sub_2225D9F90(*v8, v8[1]);
    uint64_t v10 = sub_2225D1DB0((uint64_t)v63, 2u);
    sub_2225C3D00((int)v60, "cygwin");
    BOOL v53 = sub_2225D0520(v10, v60[0], (size_t)v60[1]);
    uint64_t v11 = sub_2225D1DB0((uint64_t)v63, 2u);
    sub_2225C3D00((int)v59, "mingw");
    BOOL v12 = sub_2225D0520(v11, v59[0], (size_t)v59[1]);
  }
  if ((unint64_t)sub_2225D1E3C((uint64_t)v63) < 4)
  {
    int v14 = 0;
  }
  else
  {
    uint64_t v13 = (uint64_t *)sub_2225D1DB0((uint64_t)v63, 3u);
    int v14 = sub_2225DA260(*v13, v13[1]);
  }
  if ((unint64_t)sub_2225D1E3C((uint64_t)v63) < 5)
  {
    unsigned int v16 = 0;
  }
  else
  {
    unsigned int v15 = (uint64_t *)sub_2225D1DB0((uint64_t)v63, 4u);
    unsigned int v16 = sub_2225DA40C(*v15, v15[1]);
  }
  int v52 = a3;
  v58[0] = v5 != 0;
  v58[1] = v7 != 0;
  int v17 = v9;
  void v58[2] = v9 != 0;
  v58[3] = v14 != 0;
  if (!sub_2225DABE8()) {
    goto LABEL_67;
  }
  uint64_t v18 = 0;
  unsigned int v19 = 0;
LABEL_18:
  if (v58[v18] || !sub_2225D1E3C((uint64_t)v63)) {
    goto LABEL_19;
  }
  unint64_t v20 = 0;
  unsigned int v21 = 0;
  while (2)
  {
    if (sub_2225DABE8() > v20 && v58[v20]) {
      goto LABEL_37;
    }
    long long v57 = *(_OWORD *)sub_2225D1DB0((uint64_t)v63, v21);
    switch(v19)
    {
      case 1u:
        if (!sub_2225D9DFC(v57, *((uint64_t *)&v57 + 1))) {
          goto LABEL_37;
        }
        goto LABEL_41;
      case 2u:
        int v22 = sub_2225D9F90(v57, *((uint64_t *)&v57 + 1));
        sub_2225C3D00((int)v56, "cygwin");
        BOOL v23 = sub_2225D0520((uint64_t)&v57, v56[0], (size_t)v56[1]);
        sub_2225C3D00((int)v55, "mingw");
        BOOL v24 = sub_2225D0520((uint64_t)&v57, v55[0], (size_t)v55[1]);
        BOOL v12 = v24;
        int v17 = v22;
        if (v22 || v23 || v24)
        {
          BOOL v53 = v23;
          goto LABEL_41;
        }
        BOOL v53 = 0;
        int v17 = 0;
        goto LABEL_37;
      case 3u:
        int v14 = sub_2225DA260(v57, *((uint64_t *)&v57 + 1));
        if (v14) {
          goto LABEL_41;
        }
        unsigned int v25 = sub_2225DA40C(v57, *((uint64_t *)&v57 + 1));
        if (!v25)
        {
          unsigned int v16 = 0;
LABEL_37:
          unint64_t v20 = ++v21;
          if (sub_2225D1E3C((uint64_t)v63) == v21) {
            goto LABEL_19;
          }
          continue;
        }
        unsigned int v16 = v25;
LABEL_41:
        if (v19 >= v21)
        {
          while (v21 < v19)
          {
            sub_2225C3D00((int)&v54, &byte_2226D1615);
            if (sub_2225D1E3C((uint64_t)v63) > (unint64_t)v21)
            {
              unsigned int v30 = v21;
              do
              {
                int v31 = (__n128 *)sub_2225D1DB0((uint64_t)v63, v30);
                sub_2225DABF0(&v54, v31);
                if (sub_2225CF1E0((uint64_t)&v54)) {
                  break;
                }
                unsigned int v32 = v30 + 1;
                do
                {
                  unsigned int v30 = v32;
                  unint64_t v33 = v32;
                  if (sub_2225DABE8() <= (unint64_t)v32) {
                    break;
                  }
                  unsigned int v32 = v30 + 1;
                }
                while (v58[v33]);
              }
              while (sub_2225D1E3C((uint64_t)v63) > v33);
            }
            if (!sub_2225CF1E0((uint64_t)&v54)) {
              sub_2225CC69C((uint64_t)v63, &v54);
            }
            unsigned int v34 = v21 + 1;
            do
            {
              unsigned int v21 = v34;
              if (sub_2225DABE8() <= (unint64_t)v34) {
                break;
              }
              unsigned int v34 = v21 + 1;
            }
            while (v58[v21]);
          }
        }
        else
        {
          sub_2225C3D00((int)&v54, &byte_2226D1615);
          int v26 = (__n128 *)sub_2225D1DB0((uint64_t)v63, v21);
          sub_2225DABF0(&v54, v26);
          if (!sub_2225CF1E0((uint64_t)&v54))
          {
            unsigned int v27 = v19;
            do
            {
              if (sub_2225DABE8() > (unint64_t)v27)
              {
                uint64_t v28 = v27;
                while (v58[v28])
                {
                  uint64_t v28 = ++v27;
                  if (sub_2225DABE8() <= (unint64_t)v27) {
                    goto LABEL_50;
                  }
                }
              }
              LODWORD(v28) = v27;
LABEL_50:
              int v29 = (__n128 *)sub_2225D1DB0((uint64_t)v63, v28);
              sub_2225DABF0(&v54, v29);
              unsigned int v27 = v28 + 1;
            }
            while (!sub_2225CF1E0((uint64_t)&v54));
          }
        }
        v58[v18] = 1;
LABEL_19:
        uint64_t v18 = ++v19;
        if (sub_2225DABE8() != v19) {
          goto LABEL_18;
        }
LABEL_67:
        if (v17 == 12)
        {
          sub_2225DAC0C(v63, 4u);
          sub_2225C3D00((int)&v57, "windows");
          int v35 = (_OWORD *)sub_2225D1DB0((uint64_t)v63, 2u);
          _OWORD *v35 = v57;
          int v36 = v52;
          BOOL v37 = v53;
          if (!v14)
          {
            if (v16 <= 1)
            {
              sub_2225C3D00((int)&v57, "msvc");
              unsigned int v38 = 3;
              goto LABEL_86;
            }
            int v40 = (char *)sub_2225DACF4(v16);
LABEL_76:
            sub_2225C3D00((int)&v57, v40);
            int v42 = (_OWORD *)sub_2225D1DB0((uint64_t)v63, 3u);
            *int v42 = v57;
            BOOL v37 = v53;
          }
        }
        else
        {
          int v36 = v52;
          if (v12)
          {
            sub_2225DAC0C(v63, 4u);
            sub_2225C3D00((int)&v57, "windows");
            int v39 = (_OWORD *)sub_2225D1DB0((uint64_t)v63, 2u);
            *int v39 = v57;
            int v40 = "gnu";
            goto LABEL_76;
          }
          BOOL v37 = v53;
          if (v53)
          {
            sub_2225DAC0C(v63, 4u);
            sub_2225C3D00((int)&v57, "windows");
            int v41 = (_OWORD *)sub_2225D1DB0((uint64_t)v63, 2u);
            _OWORD *v41 = v57;
            int v40 = "cygnus";
            goto LABEL_76;
          }
        }
        int v43 = v12 || v37;
        BOOL v45 = v17 == 12 && v14 != 0;
        if (((v43 | v45) & 1) != 0 && v16 >= 2)
        {
          sub_2225DAC0C(v63, 5u);
          int v46 = (char *)sub_2225DACF4(v16);
          sub_2225C3D00((int)&v57, v46);
          unsigned int v38 = 4;
LABEL_86:
          int v47 = (_OWORD *)sub_2225D1DB0((uint64_t)v63, v38);
          *int v47 = v57;
        }
        sub_2225CAD04(v36);
        int v48 = sub_2225D1E3C((uint64_t)v63);
        if (v48)
        {
          for (unsigned int i = 0; i != v48; ++i)
          {
            if (i) {
              sub_2225CCA44(v36, 45);
            }
            int v50 = (uint64_t *)sub_2225D1DB0((uint64_t)v63, i);
            sub_2225CCA6C(v36, *v50, v50[1]);
          }
        }
        return sub_2225C56C4(v63);
      default:
        if (!sub_2225D9718(v57, *((uint64_t *)&v57 + 1))) {
          goto LABEL_37;
        }
        goto LABEL_41;
    }
  }
}

uint64_t sub_2225DABE8()
{
  return 4;
}

__n128 sub_2225DABF0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a1 = *a2;
  *a2 = result;
  return result;
}

unint64_t sub_2225DAC0C(const void **a1, unsigned int a2)
{
  unint64_t v3 = a2;
  if (sub_2225D1E3C((uint64_t)a1) <= (unint64_t)a2)
  {
    unint64_t result = sub_2225D1E3C((uint64_t)a1);
    if (result >= v3) {
      return result;
    }
    if (sub_2225D1F94((uint64_t)a1) < v3) {
      sub_2225CC834(a1, v3);
    }
    int v8 = (void *)sub_2225C3D04((uint64_t)a1);
    uint64_t v9 = sub_2225C3C70((uint64_t)a1) + 16 * v3;
    while (v8 != (void *)v9)
    {
      sub_2225CCC70(v8);
      v8 += 2;
    }
  }
  else
  {
    uint64_t v4 = sub_2225C3C70((uint64_t)a1) + 16 * v3;
    uint64_t v5 = sub_2225C3D04((uint64_t)a1);
    nullsub_1(v4, v5);
  }
  uint64_t v6 = sub_2225C3C70((uint64_t)a1) + 16 * v3;

  return sub_2225C5B6C((uint64_t)a1, v6);
}

uint64_t sub_2225DACF4(int a1)
{
  return *((void *)&off_2646131A8 + a1);
}

uint64_t sub_2225DAD04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_2225DAD0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

const void **sub_2225DAD18(const void **a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v4 = (char *)sub_2225C3C70((uint64_t)v7);
  uint64_t v5 = (char *)sub_2225C3C78(v7);
  sub_2225DBA1C(a1, v4, v5);
  return a1;
}

uint64_t sub_2225DAD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225DB9D4(a3, a1, a2);
}

uint64_t sub_2225DAD80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    uint64_t v2 = a2;
  }
  return *(void *)v2;
}

uint64_t sub_2225DAD94(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, uint64_t a6)
{
  uint64_t v10 = sub_2225D9520(a1, a2, a6);
  uint64_t v11 = sub_2225D9520(v10, a3, a6);
  uint64_t v12 = sub_2225D9520(v11, a4, a6);

  return sub_2225D9520(v12, a5, a6);
}

uint64_t sub_2225DAE00(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, uint64_t a5)
{
  uint64_t v8 = sub_2225D9520(a1, a2, a5);
  uint64_t v9 = sub_2225D9520(v8, a3, a5);

  return sub_2225D9520(v9, a4, a5);
}

uint64_t sub_2225DAE5C(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5)
{
  uint64_t v8 = sub_2225D9438(a1, a2, a5);
  uint64_t v9 = sub_2225D9588(v8, a3, a5);

  return sub_2225D9350(v9, a4, a5);
}

uint64_t sub_2225DAEB8(uint64_t a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4)
{
  uint64_t v6 = sub_2225DB220(a1, a2, a4);

  return sub_2225D94AC(v6, a3, a4);
}

uint64_t sub_2225DAEFC(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 11)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *(void *)((char *)a2 + 3) == *(void *)((char *)v6 + 3)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DAF70(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2225D94AC(a1, a2, a4);

  return sub_2225D9588(v6, a3, a4);
}

uint64_t sub_2225DAFB4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 4 && *a2 == *(_DWORD *)sub_2225C3C70(a1)) {
    *(void *)(a1 + 16) = a3;
  }
  return a1;
}

uint64_t sub_2225DB01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 6)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(_DWORD *)a2 == *(_DWORD *)v6 && *(unsigned __int16 *)(a2 + 4) == *(unsigned __int16 *)(v6 + 4)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB090(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 8 && *a2 == *(void *)sub_2225C3C70(a1)) {
    *(void *)(a1 + 16) = a3;
  }
  return a1;
}

uint64_t sub_2225DB0F8(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_2225D9520(a1, a2, a5);
  uint64_t v9 = sub_2225D9588(v8, a3, a5);

  return sub_2225DB294(v9, a4, a5);
}

uint64_t sub_2225DB154(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = sub_2225D9588(a1, a2, a4);

  return sub_2225DB308(v6, a3, a4);
}

uint64_t sub_2225DB198(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = sub_2225D9588(a1, a2, a4);

  return sub_2225D95FC(v6, a3, a4);
}

uint64_t sub_2225DB1DC(uint64_t a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v6 = sub_2225D9350(a1, a2, a4);

  return sub_2225D9350(v6, a3, a4);
}

uint64_t sub_2225DB220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 9)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(unsigned __int8 *)(a2 + 8) == (unint64_t)*(unsigned __int8 *)(v6 + 8))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 12)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6 && *(_DWORD *)(a2 + 8) == (unint64_t)*(unsigned int *)(v6 + 8)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB308(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 14)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *(void *)((char *)a2 + 6) == *(void *)((char *)v6 + 6)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB37C(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 2)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*a2 == *(unsigned __int16 *)(v6 + sub_2225C3D04(a1) - 2)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB3F4(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 3)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    uint64_t v7 = sub_2225C3D04(a1);
    if (*a2 == *(unsigned __int16 *)(v6 + v7 - 3) && *((unsigned __int8 *)a2 + 2) == *(unsigned __int8 *)(v6 + v7 - 1)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB478(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 4)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*a2 == *(_DWORD *)(v6 + sub_2225C3D04(a1) - 4)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

void *sub_2225DB4F0(void *result, uint64_t a2, uint64_t a3)
{
  void *result = a2;
  result[1] = a3;
  result[2] = 0;
  return result;
}

uint64_t sub_2225DB4FC(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 2 && *a2 == *(unsigned __int16 *)sub_2225C3C70(a1)) {
    *(void *)(a1 + 16) = a3;
  }
  return a1;
}

uint64_t sub_2225DB564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 9)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(unsigned __int8 *)(a2 + 8) == (unint64_t)*(unsigned __int8 *)(v6 + 8))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB5D8(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 7)
  {
    uint64_t v6 = (_DWORD *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *(_DWORD *)((char *)a2 + 3) == *(_DWORD *)((char *)v6 + 3)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB64C(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 3)
  {
    uint64_t v6 = (unsigned __int16 *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *((unsigned __int8 *)a2 + 2) == *((unsigned __int8 *)v6 + 2)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 5)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(_DWORD *)a2 == *(_DWORD *)v6 && *(unsigned __int8 *)(a2 + 4) == *(unsigned __int8 *)(v6 + 4)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225DB734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && (unint64_t)sub_2225C3D04(a1) >= 5)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    uint64_t v7 = sub_2225C3D04(a1);
    if (*(_DWORD *)a2 == *(_DWORD *)(v6 + v7 - 5) && *(unsigned __int8 *)(a2 + 4) == *(unsigned __int8 *)(v6 + v7 - 1)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

BOOL sub_2225DB7B8(uint64_t a1)
{
  if (sub_2225DB854(a1)) {
    return 1;
  }

  return sub_2225DB890(a1);
}

BOOL sub_2225DB804(uint64_t a1)
{
  if (sub_2225DAD04(a1) == 12) {
    return 1;
  }

  return sub_2225DB900(a1);
}

uint64_t sub_2225DB854(uint64_t a1)
{
  uint64_t result = sub_2225DAD04(a1);
  if (result != 1) {
    return sub_2225DAD04(a1) == 8;
  }
  return result;
}

BOOL sub_2225DB890(uint64_t a1)
{
  if (sub_2225DAD04(a1) == 4) {
    return 1;
  }

  return sub_2225DB8E0(a1);
}

BOOL sub_2225DB8E0(uint64_t a1)
{
  return sub_2225DAD04(a1) == 22;
}

BOOL sub_2225DB900(uint64_t a1)
{
  if (sub_2225DB94C(a1)) {
    return 1;
  }

  return sub_2225DB990(a1);
}

BOOL sub_2225DB94C(uint64_t a1)
{
  return sub_2225DAD04(a1) == 12 && sub_2225CDCEC(a1) == 11;
}

BOOL sub_2225DB990(uint64_t a1)
{
  return sub_2225DAD04(a1) == 12 && sub_2225CDCEC(a1) == 1;
}

uint64_t sub_2225DB9D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(_WORD *)(result + 16) = 773;
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  return result;
}

__n128 sub_2225DB9E8(std::string *a1, uint64_t a2)
{
  unint64_t v3 = std::string::basic_string(a1, (const std::string *)a2);
  __n128 result = *(__n128 *)(a2 + 24);
  v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
  *(__n128 *)&v3[1].__r_.__value_.__l.__data_ = result;
  return result;
}

std::string *sub_2225DBA20@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 4 && *(unsigned char *)(a1 + 17) == 1)
  {
    uint64_t v4 = *(const std::string **)a1;
    return std::string::basic_string(a2, v4);
  }
  else
  {
    sub_2225CD5BC(v8);
    v7[0] = sub_2225DBAC4((char **)a1, (uint64_t)v8);
    v7[1] = v6;
    sub_2225CACE8(v7, (uint64_t)a2);
    return (std::string *)sub_2225CA520(v8);
  }
}

uint64_t sub_2225DBAC4(char **a1, uint64_t a2)
{
  if (sub_2225DBBE8((uint64_t)a1)) {
    return sub_2225DBC38(a1);
  }
  sub_2225DBB38((uint64_t *)a1);
  uint64_t v5 = sub_2225CC180(a2);
  uint64_t v6 = sub_2225C5664(a2);
  sub_2225C3D0C(&v7, v5, v6);
  return v7;
}

uint64_t sub_2225DBB38(uint64_t *a1)
{
  sub_2225E8C04(v3);
  sub_2225DBB7C(a1, v3);
  return sub_2225E8C5C(v3);
}

uint64_t sub_2225DBB7C(uint64_t *a1, void **a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_2225D05E4((uint64_t)a1);
  sub_2225DBDA0(v5, a2, v4, v5);
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_2225D09F4((uint64_t)a1);

  return sub_2225DBDA0(v7, a2, v6, v7);
}

uint64_t sub_2225DBBE8(uint64_t a1)
{
  if (sub_2225D09F4(a1) != 1) {
    return 0;
  }
  unsigned int v2 = sub_2225D05E4(a1);
  if (v2 <= 5) {
    return (0x3Au >> v2) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2225DBC38(char **a1)
{
  switch(sub_2225D05E4((uint64_t)a1))
  {
    case 2u:
      __break(1u);
      JUMPOUT(0x2225DBCC8);
    case 3u:
      sub_2225C3D00((int)&v3, *a1);
      break;
    case 4u:
      sub_2225CCBF8(&v3, *a1);
      break;
    case 5u:
      long long v3 = *(_OWORD *)*a1;
      break;
    default:
      sub_2225CCC70(&v3);
      break;
  }
  return v3;
}

uint64_t sub_2225DBCDC(uint64_t *a1, uint64_t a2)
{
  if (!sub_2225D09A0((uint64_t)a1)) {
    goto LABEL_5;
  }
  int v4 = sub_2225D05E4((uint64_t)a1);
  if (v4 == 4)
  {
    uint64_t v7 = *a1;
    uint64_t v5 = sub_2225CBED0(*a1);
    uint64_t v6 = sub_2225CB920(v7, v8);
    goto LABEL_7;
  }
  if (v4 != 3)
  {
LABEL_5:
    sub_2225DBB38(a1);
    char v10 = 0;
    sub_2225C52D8(a2, &v10);
    sub_2225CF758(a2);
    uint64_t v5 = sub_2225CC180(a2);
    uint64_t v6 = sub_2225C5664(a2);
LABEL_7:
    sub_2225C3D0C(&v11, v5, v6);
    return v11;
  }
  sub_2225C3D00((int)&v11, (char *)*a1);
  return v11;
}

uint64_t sub_2225DBDA0(uint64_t a1, void **a2, uint64_t a3, int a4)
{
  switch(a4)
  {
    case 2:
      uint64_t result = sub_2225DBB7C(a3);
      break;
    case 3:
      uint64_t result = (uint64_t)sub_2225CA524((uint64_t)a2, (char *)a3);
      break;
    case 4:
      uint64_t result = (uint64_t)sub_2225D47E4(a2, a3);
      break;
    case 5:
      uint64_t result = (uint64_t)sub_2225CA568((uint64_t)a2, *(void *)a3, *(void *)(a3 + 8));
      break;
    case 6:
      uint64_t result = sub_2225CAF14((uint64_t)a2, a3);
      break;
    case 7:
      uint64_t result = (uint64_t)sub_2225CA560(a2, a3);
      break;
    case 8:
      uint64_t result = (uint64_t)sub_2225D4840(a2, a3);
      break;
    case 9:
      uint64_t result = (uint64_t)sub_2225E7BAC(a2, *(void *)a3);
      break;
    case 10:
      uint64_t result = (uint64_t)sub_2225E7DD0(a2, *(void *)a3);
      break;
    case 11:
      uint64_t result = (uint64_t)sub_2225E7E20(a2, *(void *)a3);
      break;
    case 12:
      uint64_t result = (uint64_t)sub_2225E7E24(a2, *(void *)a3);
      break;
    case 13:
      uint64_t result = (uint64_t)sub_2225E7E74(a2, *(void *)a3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2225DBEA8(unsigned int a1)
{
  unsigned int v2 = (void **)off_26B5C78D0();
  long long v3 = *v2;
  if (!*v2)
  {
    int v4 = v2;
    long long v3 = (void *)sub_2225C26A4(16);
    sub_2225DBF44(v6, (uint64_t)&unk_2226CA1B8);
    sub_2225C3D0C(v3, v6[0], v6[1]);
    *int v4 = v3;
  }
  if (HIWORD(a1) > 0x10u) {
    return 0;
  }
  else {
    return sub_2225DBF48(v3, a1) ^ 1;
  }
}

uint64_t sub_2225DBF48(void *a1, int a2)
{
  int v6 = a2;
  uint64_t v3 = sub_2225C3C70((uint64_t)a1);
  uint64_t v4 = sub_2225DC1A0(a1);
  return sub_2225DC19C(v3, v4, &v6);
}

uint64_t sub_2225DBF94(uint64_t a1, uint64_t a2)
{
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v2 = sub_2225C3D04((uint64_t)v16);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = v2;
  uint64_t v4 = 0;
  LODWORD(v5) = 0;
  while (1)
  {
    unsigned __int8 v6 = sub_2225CC124(v16, v4);
    unsigned int v7 = sub_2225CB1B4(v6);
    if (!v7) {
      return 4294967294;
    }
    unsigned int v8 = v7;
    unint64_t v9 = v4 + v7;
    if (v9 > sub_2225C3D04((uint64_t)v16)) {
      return 4294967294;
    }
    int v14 = 0;
    uint64_t v10 = sub_2225C3C70((uint64_t)v16);
    uint64_t v13 = &v15;
    int v14 = (unsigned __int8 *)(v10 + v4);
    if (sub_2225CB608(&v14, (unsigned __int8 *)(v10 + v4 + v8), &v13, (unint64_t)v16, 0)) {
      return 4294967294;
    }
    int v11 = sub_2225DC090(v15);
    if (v11 < 0) {
      break;
    }
    uint64_t v5 = (v11 + v5);
    uint64_t v4 = v9;
    if (v9 >= v3) {
      return v5;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_2225DC090(unsigned int a1)
{
  if (!sub_2225DBEA8(a1)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v2 = (void **)off_26B5C78E8();
  unint64_t v3 = *v2;
  if (!*v2)
  {
    uint64_t v4 = v2;
    unint64_t v3 = (void *)sub_2225C26A4(16);
    sub_2225DC374(v10, (uint64_t)&unk_2226CB2D8);
    sub_2225C3D0C(v3, v10[0], v10[1]);
    *uint64_t v4 = v3;
  }
  if (sub_2225DBF48(v3, a1)) {
    return 0;
  }
  unsigned __int8 v6 = (void **)off_26B5C7900();
  unsigned int v7 = *v6;
  if (!*v6)
  {
    unsigned int v8 = v6;
    unsigned int v7 = (void *)sub_2225C26A4(16);
    sub_2225DC378(v9, (uint64_t)&unk_2226CB9A8);
    sub_2225C3D0C(v7, v9[0], v9[1]);
    void *v8 = v7;
  }
  if (sub_2225DBF48(v7, a1)) {
    return 2;
  }
  else {
    return 1;
  }
}

void *sub_2225DC190(void *result, uint64_t a2)
{
  void *result = a2;
  result[1] = 548;
  return result;
}

uint64_t sub_2225DC1A0(void *a1)
{
  return *a1 + 8 * a1[1];
}

BOOL sub_2225DC1AC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = (void *)sub_2225DC204(a1, a2, (uint64_t)a3, (uint64_t)&v7);
  return v5 != (void *)a2 && !sub_2225DC22C((uint64_t)&v7, a3, v5);
}

uint64_t sub_2225DC204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = 0;
  return sub_2225DC238(a1, a2, a3, a4, (uint64_t)&v5);
}

BOOL sub_2225DC22C(uint64_t a1, unsigned int *a2, void *a3)
{
  return sub_2225DC368(*a2, *a3);
}

uint64_t sub_2225DC238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_2225DC2E4();
  if (v9)
  {
    unint64_t v10 = v9;
    do
    {
      unint64_t v11 = sub_2225DC2E8(v10);
      uint64_t v15 = a1;
      sub_2225DC2F0(&v15, v11);
      uint64_t v12 = sub_2225DC2F8(a5, v15);
      int v13 = sub_2225DC2F4(a4, v12, a3);
      if (v13) {
        v10 += ~v11;
      }
      else {
        unint64_t v10 = v11;
      }
      if (v13) {
        a1 = v15 + 8;
      }
    }
    while (v10);
  }
  return a1;
}

unint64_t sub_2225DC2E8(unint64_t a1)
{
  return a1 >> 1;
}

void *sub_2225DC2FC(void *a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_2225DC33C(a1, v3);
}

void *sub_2225DC33C(void *result, uint64_t a2)
{
  *result += 8 * a2;
  return result;
}

BOOL sub_2225DC34C(uint64_t a1, uint64_t *a2, unsigned int *a3)
{
  return sub_2225DC358(*a2, *a3);
}

BOOL sub_2225DC358(uint64_t a1, unsigned int a2)
{
  return HIDWORD(a1) < a2;
}

BOOL sub_2225DC368(unsigned int a1, unsigned int a2)
{
  return a2 > a1;
}

void *sub_2225DC37C(void *result, uint64_t a2)
{
  void *result = a2;
  result[1] = 218;
  return result;
}

void *sub_2225DC388(void *result, uint64_t a2)
{
  void *result = a2;
  result[1] = 15;
  return result;
}

uint64_t sub_2225DC3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2225DC818(a1);
  long long v5 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v4;
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = *(void *)(v4 + 32);
  if (!sub_2225DC908(a1 + 56)) {
    sub_2225DD008(a1 + 56);
  }
  uint64_t result = sub_2225DC908(a1 + 56);
  if (result)
  {
    return sub_2225DD044((void *)(a1 + 96));
  }
  return result;
}

uint64_t sub_2225DC438(uint64_t a1, uint64_t a2)
{
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v2 = (char *)sub_2225C3C70((uint64_t)v16);
  uint64_t v3 = sub_2225C3C78(v16);
  char v4 = *v2;
  if (*v2 < 0)
  {
    long long v5 = v2 + 1;
    if (v2 + 1 != (char *)v3
      && (v4 & 0xE0) == 0xC0
      && (*v5 & 0xC0) == 0x80
      && (HIDWORD(v14) = *v5 & 0x3F | ((v4 & 0x1F) << 6), HIDWORD(v14) >= 0x80))
    {
      int v8 = 2;
    }
    else
    {
      unsigned __int8 v6 = v2 + 2;
      if (v2 + 2 != (char *)v3
        && (v4 & 0xF0) == 0xE0
        && (char v7 = *v5, (*v5 & 0xC0) == 0x80)
        && (*v6 & 0xC0) == 0x80
        && (HIDWORD(v14) = ((v4 & 0xF) << 12) | ((v7 & 0x3F) << 6) | *v6 & 0x3F, HIDWORD(v14) >= 0x800)
        && (((v4 & 0xF) << 12) | ((v7 & 0x3F) << 6)) - 57344 <= 0xFFFFF7FF)
      {
        int v8 = 3;
      }
      else
      {
        if (v2 + 3 == (char *)v3
          || (v4 & 0xF8) != 0xF0
          || (char v9 = *v5, (v9 & 0xC0) != 0x80)
          || (char v10 = *v6, (v10 & 0xC0) != 0x80)
          || (char v11 = v2[3], (v11 & 0xC0) != 0x80)
          || (int v12 = ((v4 & 7) << 18) | ((v9 & 0x3F) << 12),
              HIDWORD(v14) = v11 & 0x3F | ((v10 & 0x3F) << 6) | v12,
              (v12 - 1114112) < 0xFFF00000))
        {
          uint64_t v14 = 0;
          uint64_t v15 = sub_2225E15B0((uint64_t)&v14 + 4, (uint64_t)&v14);
          sub_2225E15E0(&v17, &v15);
          return v17;
        }
        int v8 = 4;
      }
    }
    LODWORD(v14) = v8;
    uint64_t v15 = sub_2225E15B0((uint64_t)&v14 + 4, (uint64_t)&v14);
    sub_2225E15E0(&v17, &v15);
    return v17;
  }
  HIDWORD(v14) = 1;
  uint64_t v15 = sub_2225E157C((uint64_t)v2, (uint64_t)&v14 + 4);
  sub_2225E15AC(&v17, (char *)&v15);
  return v17;
}

uint64_t sub_2225DC610(uint64_t result, uint64_t a2)
{
  if (result > 0x7F)
  {
    if (result > 0x7FF)
    {
      if (WORD1(result))
      {
        if (WORD1(result) > 0x10u) {
          return result;
        }
        unsigned int v7 = (result >> 12) & 0x3F | 0x80;
        unsigned int v8 = (result >> 6) & 0x3F | 0x80;
        char v9 = result & 0x3F | 0x80;
        char v13 = (result >> 18) | 0xF0;
        sub_2225C52D8(a2, &v13);
        char v12 = v7;
        sub_2225C52D8(a2, &v12);
        char v11 = v8;
        sub_2225C52D8(a2, &v11);
        char v10 = v9;
        uint64_t v3 = &v10;
      }
      else
      {
        unsigned int v5 = (result >> 6) & 0x3F | 0x80;
        char v6 = result & 0x3F | 0x80;
        char v16 = (result >> 12) | 0xE0;
        sub_2225C52D8(a2, &v16);
        char v15 = v5;
        sub_2225C52D8(a2, &v15);
        char v14 = v6;
        uint64_t v3 = &v14;
      }
    }
    else
    {
      char v4 = result & 0x3F | 0x80;
      char v18 = (result >> 6) | 0xC0;
      sub_2225C52D8(a2, &v18);
      char v17 = v4;
      uint64_t v3 = &v17;
    }
  }
  else
  {
    char v19 = result;
    uint64_t v3 = &v19;
  }
  return sub_2225C52D8(a2, v3);
}

uint64_t sub_2225DC73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = a4;
  *(_OWORD *)(a1 + 32) = xmmword_2226CBA20;
  *(_WORD *)(a1 + 48) = 257;
  *(unsigned char *)(a1 + 50) = 0;
  sub_2225DC80C(a1 + 56);
  sub_2225DC810(a1 + 240);
  sub_2225DC814(a1 + 280);
  sub_2225C3D00((int)v11, "YAML");
  unint64_t v7 = sub_2225CD198(a2, a3, v11[0], v11[1], 1);
  *(void *)(a1 + 8) = v7;
  unsigned int v8 = *(uint64_t **)a1;
  sub_2225D3A34(&v10);
  sub_2225D35D4(v8, v7, v10);
  *(void *)(a1 + 16) = sub_2225C3D04(*(void *)(a1 + 8));
  *(void *)(a1 + 24) = sub_2225C5B40(*(void *)(a1 + 8));
  return a1;
}

uint64_t sub_2225DC818(uint64_t a1)
{
  char v2 = 0;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = a1 + 280;
  while (1)
  {
    BOOL v5 = sub_2225DC908(v3);
    if (((v2 & 1) != 0 || v5) && (sub_2225DC940(a1) & 1) == 0) {
      break;
    }
    sub_2225DCEF4(a1);
    sub_2225DCFC8(v12);
    uint64_t v6 = sub_2225DCEEC(v3);
    sub_2225C64B8(&v11, v6);
    v12[0] = v11;
    unint64_t v7 = (void *)sub_2225C3C70(v4);
    unsigned int v8 = (void *)sub_2225C3D04(v4);
    uint64_t v9 = sub_2225DCFCC(v7, v8, v12);
    char v2 = 1;
    if (v9 == sub_2225C3D04(v4)) {
      return sub_2225DCEEC(v3);
    }
  }
  sub_2225DCE44(v3);
  sub_2225DCEE8(v12);
  sub_2225DCEA4(v3, (uint64_t)v12);
  return sub_2225DCEEC(v3);
}

BOOL sub_2225DC908(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 176);
  return !v1 || v1 == sub_2225E13F8(a1);
}

uint64_t sub_2225DC940(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    sub_2225DDA14(a1);
    return 1;
  }
  sub_2225DD958(a1);
  if (*(void *)(a1 + 16) == *(void *)(a1 + 24))
  {
    sub_2225DDD84(a1);
    return 1;
  }
  sub_2225DCEF4(a1);
  sub_2225DD794(a1, *(_DWORD *)(a1 + 36));
  uint64_t v4 = *(unsigned __int8 **)(a1 + 16);
  int v5 = *v4;
  if (*(_DWORD *)(a1 + 36)) {
    goto LABEL_7;
  }
  if (v5 == 37)
  {
    return sub_2225DDE1C(a1);
  }
  unint64_t v6 = *(void *)(a1 + 24);
  if ((unint64_t)(v4 + 4) > v6)
  {
LABEL_7:
    if (*v4 <= 0x39u)
    {
      switch(*v4)
      {
        case '!':
          goto LABEL_19;
        case '""':
          goto LABEL_29;
        case '&':
          goto LABEL_40;
        case '\'':
          goto LABEL_41;
        case '*':
          goto LABEL_45;
        case ',':
          goto LABEL_49;
        case '-':
          goto LABEL_62;
        default:
          goto LABEL_69;
      }
    }
  }
  else if (*v4 <= 0x39u)
  {
    switch(*v4)
    {
      case '!':
LABEL_19:
        return sub_2225DEDFC(a1);
      case '""':
LABEL_29:
        uint64_t v7 = a1;
        int v8 = 1;
        goto LABEL_42;
      case '&':
LABEL_40:
        uint64_t v9 = a1;
        int v10 = 0;
        goto LABEL_46;
      case '\'':
LABEL_41:
        uint64_t v7 = a1;
        int v8 = 0;
LABEL_42:
        return sub_2225DE67C(v7, v8);
      case '*':
LABEL_45:
        uint64_t v9 = a1;
        int v10 = 1;
LABEL_46:
        return sub_2225DEB84(v9, v10);
      case ',':
LABEL_49:
        sub_2225DE20C(a1);
        return 1;
      case '-':
        if (v4[1] == 45 && v4[2] == 45 && (v4 + 3 == (unsigned __int8 *)v6 || sub_2225DD508(a1, v4 + 3)))
        {
          uint64_t v2 = 1;
          sub_2225DDFF8(a1, 1);
          return v2;
        }
LABEL_62:
        if (!sub_2225DD508(a1, v4 + 1)) {
          goto LABEL_69;
        }
        sub_2225DE288(a1);
        break;
      case '.':
        if (v4[1] != 46 || v4[2] != 46 || v4 + 3 != (unsigned __int8 *)v6 && !sub_2225DD508(a1, v4 + 3)) {
          goto LABEL_69;
        }
        sub_2225DDFF8(a1, 0);
        return 1;
      default:
        goto LABEL_69;
    }
    return 1;
  }
  if (*v4 <= 0x5Cu)
  {
    if (*v4 > 0x3Eu)
    {
      if (v5 == 63)
      {
        if (*(_DWORD *)(a1 + 44) || sub_2225DD508(a1, v4 + 1))
        {
          sub_2225DE378(a1);
          return 1;
        }
      }
      else if (v5 == 91)
      {
        uint64_t v2 = 1;
        sub_2225DE084(a1, 1);
        return v2;
      }
    }
    else
    {
      if (v5 != 58)
      {
        if (v5 != 62) {
          goto LABEL_69;
        }
        goto LABEL_36;
      }
      if (*(_DWORD *)(a1 + 44) || sub_2225DD508(a1, v4 + 1))
      {
        sub_2225DE428(a1);
        return 1;
      }
    }
LABEL_69:
    sub_2225C3D0C(v15, v4, 1);
    uint64_t v11 = *(unsigned __int8 **)(a1 + 16);
    if ((sub_2225DD508(a1, v11) & 1) == 0)
    {
      if (sub_2225D8790(v15, v14[0], v14[1], 0) == -1) {
        return sub_2225DE8B0(a1);
      }
      uint64_t v11 = *(unsigned __int8 **)(a1 + 16);
    }
    int v12 = *v11;
    if ((v12 != 45 || sub_2225DD508(a1, v11 + 1))
      && (*(_DWORD *)(a1 + 44)
       || v12 != 63 && v12 != 58
       || (sub_2225DD508(a1, v11 + 1) & 1) == 0
       && (v12 != 58
        || (unint64_t)(v11 + 2) >= *(void *)(a1 + 24)
        || v11[1] != 58
        || (sub_2225DD508(a1, v11 + 2) & 1) != 0)))
    {
      sub_2225CBDE8((uint64_t)v13, "Unrecognized character while tokenizing.");
      sub_2225DEF24(a1, (uint64_t)v13);
      return 0;
    }
    return sub_2225DE8B0(a1);
  }
  if (*v4 <= 0x7Bu)
  {
    if (v5 == 93)
    {
      uint64_t v2 = 1;
      sub_2225DE174(a1, 1);
      return v2;
    }
    if (v5 == 123)
    {
      sub_2225DE084(a1, 0);
      return 1;
    }
    goto LABEL_69;
  }
  if (v5 != 124)
  {
    if (v5 == 125)
    {
      sub_2225DE174(a1, 0);
      return 1;
    }
    goto LABEL_69;
  }
LABEL_36:
  if (*(_DWORD *)(a1 + 44)) {
    goto LABEL_69;
  }

  return sub_2225DECEC(a1);
}

uint64_t sub_2225DCE44(uint64_t result)
{
  if (*(void *)(result + 176))
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_2225DE5E8(result);
    uint64_t v3 = sub_2225DE334(v1);
    return sub_2225E2020(v1, v2, v3);
  }
  return result;
}

uint64_t sub_2225DCEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225DE334(a1);

  return sub_2225DD90C(a1, v4, a2);
}

uint64_t sub_2225DCEEC(uint64_t a1)
{
  return *(void *)(a1 + 176);
}

uint64_t sub_2225DCEF4(uint64_t a1)
{
  uint64_t v2 = a1 + 280;
  uint64_t v3 = sub_2225C3C70(a1 + 280);
  for (uint64_t result = sub_2225C3D04(v2); v3 != result; uint64_t result = sub_2225C3D04(v2))
  {
    if (*(_DWORD *)(v3 + 12) == *(_DWORD *)(a1 + 40)
      && (*(_DWORD *)(v3 + 8) + 1024) >= *(_DWORD *)(a1 + 36))
    {
      v3 += 24;
    }
    else
    {
      if (*(unsigned char *)(v3 + 20))
      {
        sub_2225CBDE8((uint64_t)v6, "Could not find expected : for simple key");
        uint64_t v5 = sub_2225CC180(v3);
        sub_2225C3C70(v5 + 24);
        sub_2225DD61C(a1, (uint64_t)v6);
      }
      sub_2225DD6A4(v2, v3);
    }
  }
  return result;
}

uint64_t sub_2225DCFCC(void *a1, void *a2, void *a3)
{
  uint64_t v4 = sub_2225E217C(a1, a2, a3);

  return sub_2225DC2F8((uint64_t)a1, (uint64_t)v4);
}

uint64_t sub_2225DD008(uint64_t a1)
{
  uint64_t v2 = sub_2225DE5E8(a1);

  return sub_2225E2080(a1, v2);
}

uint64_t sub_2225DD044(void *a1)
{
  uint64_t v2 = (uint64_t)(a1 + 2);
  uint64_t result = sub_2225CF1D0(a1 + 2);
  if ((result & 1) == 0)
  {
    a1[15] = 0;
    uint64_t v4 = (void *)sub_2225CC180(v2);
    uint64_t v5 = *v4 + 4096;
    *a1 = *v4;
    a1[1] = v5;
    uint64_t v6 = sub_2225C3C70(v2);
    sub_2225E21DC(v6, 1);
    uint64_t v7 = (void **)v6;
    int v8 = (void **)sub_2225C3D04(v2);
    sub_2225E14A4((uint64_t)a1, v7, v8);
    uint64_t v9 = sub_2225C3C70(v2);
    sub_2225E21DC(v9, 1);
    uint64_t v10 = v9;
    uint64_t v11 = sub_2225C3D04(v2);
    sub_2225E2208(v2, v10, v11);
    sub_2225E1510((uint64_t)a1);
    return sub_2225C5D90(a1 + 9);
  }
  return result;
}

unsigned __int8 *sub_2225DD118(uint64_t a1, unsigned __int8 *a2)
{
  if (*(unsigned __int8 **)(a1 + 24) == a2) {
    return a2;
  }
  int v3 = *a2;
  if (v3 == 9 || (v3 - 127) >= 0xFFFFFFA1) {
    return a2 + 1;
  }
  if ((v3 & 0x80) == 0) {
    return a2;
  }
  unint64_t v5 = sub_2225DD1C8(a1, (uint64_t)a2);
  if (!HIDWORD(v5)) {
    return a2;
  }
  int v6 = v5;
  if (v5 == 65279) {
    return a2;
  }
  unsigned int v7 = v5 - 0x10000;
  uint64_t result = &a2[HIDWORD(v5)];
  if (v7 >= 0x100000 && (v6 - 57344) >> 1 >= 0xFFF && v6 != 133 && (v6 - 160) >> 5 >= 0x6BB) {
    return a2;
  }
  return result;
}

uint64_t sub_2225DD1C8(uint64_t a1, uint64_t a2)
{
  sub_2225C3D0C(v3, a2, *(void *)(a1 + 24) - a2);
  return sub_2225DC438(v3[0], v3[1]);
}

unsigned __int8 *sub_2225DD1FC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a1 + 24);
  if (v2 != a2)
  {
    int v3 = *a2;
    if (v3 == 10)
    {
      ++a2;
    }
    else if (v3 == 13)
    {
      if (a2 + 1 == v2)
      {
        return *(unsigned __int8 **)(a1 + 24);
      }
      else if (a2[1] == 10)
      {
        a2 += 2;
      }
      else
      {
        ++a2;
      }
    }
  }
  return a2;
}

unsigned __int8 *sub_2225DD250(uint64_t a1, unsigned __int8 *a2)
{
  if (*(unsigned __int8 **)(a1 + 24) != a2)
  {
    int v2 = *a2;
    if (v2 == 32 || v2 == 9) {
      ++a2;
    }
  }
  return a2;
}

unsigned __int8 *sub_2225DD274(uint64_t a1, unsigned __int8 *a2)
{
  if (*(unsigned __int8 **)(a1 + 24) == a2) {
    return a2;
  }
  int v2 = *a2;
  if (v2 == 9 || v2 == 32) {
    return a2;
  }
  else {
    return sub_2225DD118(a1, a2);
  }
}

uint64_t sub_2225DD2A0(uint64_t a1, uint64_t (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4)
{
  char v4 = a3;
  int v6 = (void *)(a1 + (a3 >> 1));
  uint64_t v7 = a2;
  do
  {
    uint64_t v8 = a4;
    if (v4) {
      uint64_t v9 = (*(uint64_t (**)(void *, uint64_t))(*v6 + v7))(v6, a4);
    }
    else {
      uint64_t v9 = a2(v6, a4);
    }
    a4 = v9;
  }
  while (v9 != v8);
  return v8;
}

uint64_t sub_2225DD318(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 16);
  int v2 = v1;
  if (v1 != *(unsigned __int8 **)(a1 + 24))
  {
    int v2 = *(unsigned __int8 **)(a1 + 24);
    char v4 = *(unsigned __int8 **)(a1 + 16);
    do
    {
      int v5 = *v4;
      int v6 = v4 + 2;
      BOOL v7 = v5 != 37 || v6 >= v2;
      if (v7 || (BOOL v9 = sub_2225DD428(v4[1]), !v9 || !sub_2225DD428(*v6)))
      {
        if ((sub_2225DD454((char)v5) & 1) == 0)
        {
          sub_2225C3D0C(v12, v4, 1);
          sub_2225C3D00((int)v11, "#;/?:@&=+$,_.!~*'()[]");
          uint64_t v8 = sub_2225D8790(v12, v11[0], v11[1], 0);
          char v4 = *(unsigned __int8 **)(a1 + 16);
          if (v8 == -1)
          {
            int v2 = *(unsigned __int8 **)(a1 + 16);
            break;
          }
          int v2 = *(unsigned __int8 **)(a1 + 24);
        }
      }
      *(void *)(a1 + 16) = ++v4;
      ++*(_DWORD *)(a1 + 36);
    }
    while (v4 != v2);
  }
  sub_2225C3D0C(&v13, v1, v2 - v1);
  return v13;
}

BOOL sub_2225DD428(unsigned __int8 a1)
{
  return a1 - 48 < 0xA || a1 - 97 < 0x1A || a1 - 65 < 0x1A;
}

uint64_t sub_2225DD454(int a1)
{
  BOOL v1 = a1 - 65 < 0x1A;
  if (a1 - 97 < 0x1A) {
    BOOL v1 = 1;
  }
  return a1 == 45 || v1;
}

uint64_t sub_2225DD480(uint64_t a1, unsigned int a2)
{
  if (a2 >= 0x80) {
    goto LABEL_8;
  }
  int v2 = *(unsigned __int8 **)(a1 + 16);
  if (v2 == *(unsigned __int8 **)(a1 + 24)) {
    return 0;
  }
  if ((char)*v2 < 0) {
LABEL_8:
  }
    sub_2225CBCBC("Not dealing with this yet", 1);
  if (*v2 == a2)
  {
    *(void *)(a1 + 16) = v2 + 1;
    ++*(_DWORD *)(a1 + 36);
    return 1;
  }
  return 0;
}

uint64_t sub_2225DD4EC(uint64_t result, unsigned int a2)
{
  *(void *)(result + 16) += a2;
  *(_DWORD *)(result + 36) += a2;
  return result;
}

uint64_t sub_2225DD508(uint64_t a1, unsigned __int8 *a2)
{
  if (*(unsigned __int8 **)(a1 + 24) == a2) {
    return 0;
  }
  unsigned int v2 = *a2;
  BOOL v3 = v2 > 0x20;
  unint64_t v4 = (0x100002600uLL >> v2) & 1;
  if (v3) {
    return 0;
  }
  else {
    return v4;
  }
}

uint64_t sub_2225DD53C(uint64_t result, uint64_t a2, int a3, char a4)
{
  if (*(unsigned char *)(result + 49))
  {
    uint64_t v7 = result;
    sub_2225DCFC8(&v8);
    uint64_t v8 = a2;
    int v9 = a3;
    char v11 = a4;
    uint64_t v10 = *(void *)(v7 + 40);
    return sub_2225DD5A8(v7 + 280, (uint64_t)&v8);
  }
  return result;
}

uint64_t sub_2225DD5A8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2225E23C8(a1);
  }
  uint64_t v4 = sub_2225C3D04(a1);
  uint64_t v5 = *(void *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(void *)(v4 + 16) = v5;
  uint64_t v6 = sub_2225C3D04(a1) + 24;

  return sub_2225C5B6C(a1, v6);
}

unint64_t sub_2225DD61C(uint64_t a1, uint64_t a2)
{
  unint64_t result = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  if (result >= v5)
  {
    unint64_t result = v5 - 1;
    *(void *)(a1 + 16) = v5 - 1;
  }
  if (!*(unsigned char *)(a1 + 50))
  {
    uint64_t v6 = sub_2225D389C(result);
    sub_2225CCC70(v7);
    unint64_t result = sub_2225DF0C8((void **)a1, v6, 0, a2, v7[0], v7[1]);
  }
  *(unsigned char *)(a1 + 50) = 1;
  return result;
}

uint64_t sub_2225DD6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 24;
  uint64_t v5 = sub_2225C3D04(a1);
  sub_2225E23DC(v4, v5, a2);
  sub_2225DD758(a1);
  return a2;
}

uint64_t sub_2225DD6F4(uint64_t a1, int a2)
{
  uint64_t v3 = a1 + 280;
  uint64_t result = sub_2225CF1D0((void *)(a1 + 280));
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2225C3D04(v3);
    if (*(_DWORD *)(result - 8) == a2)
    {
      return sub_2225DD758(v3);
    }
  }
  return result;
}

uint64_t sub_2225DD758(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1) - 24;

  return sub_2225C5B6C(a1, v2);
}

uint64_t sub_2225DD794(uint64_t a1, int a2)
{
  sub_2225DCEE8(v7);
  if (!*(_DWORD *)(a1 + 44) && *(_DWORD *)(a1 + 32) > a2)
  {
    do
    {
      int v8 = 8;
      sub_2225C3D0C(&v6, *(void *)(a1 + 16), 1);
      long long v9 = v6;
      sub_2225DCEA4(a1 + 56, (uint64_t)v7);
      int v4 = sub_2225DD840(a1 + 240);
      *(_DWORD *)(a1 + 32) = v4;
    }
    while (v4 > a2);
  }
  return 1;
}

uint64_t sub_2225DD840(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)sub_2225E254C(a1);
  sub_2225E2568(a1);
  return v2;
}

uint64_t sub_2225DD874(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (!*(_DWORD *)(a1 + 44) && *(_DWORD *)(a1 + 32) < a2)
  {
    sub_2225CC08C(a1 + 240, (_DWORD *)(a1 + 32));
    *(_DWORD *)(a1 + 32) = a2;
    sub_2225DCEE8(v10);
    int v11 = a3;
    sub_2225C3D0C(&v9, *(void *)(a1 + 16), 0);
    long long v12 = v9;
    sub_2225DD90C(a1 + 56, a4, (uint64_t)v10);
  }
  return 1;
}

uint64_t sub_2225DD90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225E2650(a1 + 40, a3);

  return sub_2225E25A4(a1, a2, v5);
}

unsigned __int8 *sub_2225DD958(uint64_t a1)
{
  while (1)
  {
    while (1)
    {
      uint64_t v2 = *(unsigned __int8 **)(a1 + 16);
      int v3 = *v2;
      if (v3 != 9 && v3 != 32) {
        break;
      }
      sub_2225DD4EC(a1, 1u);
    }
    if (v3 == 35)
    {
      while (1)
      {
        int v4 = sub_2225DD118(a1, v2);
        uint64_t v2 = v4;
        if (v4 == *(unsigned __int8 **)(a1 + 16)) {
          break;
        }
        *(void *)(a1 + 16) = v4;
        ++*(_DWORD *)(a1 + 36);
      }
    }
    uint64_t result = sub_2225DD1FC(a1, v2);
    if (result == v2) {
      break;
    }
    *(void *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a1 + 44);
    int v7 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0;
    *(_DWORD *)(a1 + 40) = v7;
    if (!v6) {
      *(unsigned char *)(a1 + 49) = 1;
    }
  }
  return result;
}

uint64_t sub_2225DDA14(uint64_t a1)
{
  *(unsigned char *)(a1 + 48) = 0;
  uint64_t v2 = sub_2225DDD54(a1);
  unint64_t v4 = (unint64_t)sub_2225DDA9C(v2, v3) >> 32;
  sub_2225DCEE8(v7);
  int v8 = 1;
  sub_2225C3D0C(&v6, *(void *)(a1 + 16), v4);
  long long v9 = v6;
  sub_2225DCEA4(a1 + 56, (uint64_t)v7);
  *(void *)(a1 + 16) += v4;
  return 1;
}

uint64_t sub_2225DDA9C(uint64_t a1, uint64_t a2)
{
  v9[0] = a1;
  v9[1] = a2;
  if (!sub_2225C3D04((uint64_t)v9)) {
    goto LABEL_29;
  }
  unsigned int v2 = sub_2225CC124(v9, 0);
  if (v2 <= 0xFD)
  {
    if (v2)
    {
      if (v2 == 239)
      {
        if ((unint64_t)sub_2225C3D04((uint64_t)v9) >= 3
          && sub_2225CC124(v9, 1) == -69
          && sub_2225CC124(v9, 2) == -65)
        {
          int v7 = 4;
          int v3 = 3;
LABEL_47:
          int v6 = v3;
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      goto LABEL_33;
    }
    if ((unint64_t)sub_2225C3D04((uint64_t)v9) < 4) {
      goto LABEL_24;
    }
    if (sub_2225CC124(v9, 1)
      || sub_2225CC124(v9, 2) != -2
      || sub_2225CC124(v9, 3) != -1)
    {
      if (!sub_2225CC124(v9, 1)
        && !sub_2225CC124(v9, 2)
        && sub_2225CC124(v9, 3))
      {
        int v4 = 1;
        goto LABEL_30;
      }
LABEL_24:
      if ((unint64_t)sub_2225C3D04((uint64_t)v9) >= 2 && sub_2225CC124(v9, 1))
      {
        int v4 = 3;
        goto LABEL_30;
      }
LABEL_29:
      int v4 = 5;
      goto LABEL_30;
    }
    int v7 = 1;
LABEL_46:
    int v3 = 4;
    goto LABEL_47;
  }
  if (v2 == 254)
  {
    if ((unint64_t)sub_2225C3D04((uint64_t)v9) >= 2 && sub_2225CC124(v9, 1) == -1)
    {
      int v7 = 3;
      int v3 = 2;
      goto LABEL_47;
    }
    goto LABEL_29;
  }
  if (v2 == 255)
  {
    if ((unint64_t)sub_2225C3D04((uint64_t)v9) < 4
      || sub_2225CC124(v9, 1) != -2
      || sub_2225CC124(v9, 2)
      || sub_2225CC124(v9, 3))
    {
      if ((unint64_t)sub_2225C3D04((uint64_t)v9) >= 2 && sub_2225CC124(v9, 1) == -2)
      {
        int v3 = 2;
        int v7 = 2;
        goto LABEL_47;
      }
      goto LABEL_29;
    }
    int v7 = 0;
    goto LABEL_46;
  }
LABEL_33:
  if ((unint64_t)sub_2225C3D04((uint64_t)v9) >= 4
    && !sub_2225CC124(v9, 1)
    && !sub_2225CC124(v9, 2)
    && !sub_2225CC124(v9, 3))
  {
    int v7 = 0;
    goto LABEL_31;
  }
  if ((unint64_t)sub_2225C3D04((uint64_t)v9) < 2 || sub_2225CC124(v9, 1)) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
LABEL_30:
  int v7 = v4;
LABEL_31:
  int v6 = 0;
LABEL_32:
  uint64_t v8 = sub_2225E167C((uint64_t)&v7, (uint64_t)&v6);
  sub_2225E16AC(&v10, (double *)&v8);
  return v10;
}

uint64_t sub_2225DDD54(uint64_t a1)
{
  sub_2225C3D0C(&v2, *(void *)(a1 + 16), *(void *)(a1 + 24) - *(void *)(a1 + 16));
  return v2;
}

uint64_t sub_2225DDD84(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 36))
  {
    int v2 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0;
    *(_DWORD *)(a1 + 40) = v2;
  }
  sub_2225DD794(a1, -1);
  sub_2225DDE10((void *)(a1 + 280));
  *(unsigned char *)(a1 + 49) = 0;
  sub_2225DCEE8(v5);
  int v6 = 2;
  sub_2225C3D0C(&v4, *(void *)(a1 + 16), 0);
  long long v7 = v4;
  sub_2225DCEA4(a1 + 56, (uint64_t)v5);
  return 1;
}

void *sub_2225DDE10(void *result)
{
  result[1] = *result;
  return result;
}

BOOL sub_2225DDE1C(uint64_t a1)
{
  sub_2225DD794(a1, -1);
  sub_2225DDE10((void *)(a1 + 280));
  *(unsigned char *)(a1 + 49) = 0;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2225DD480(a1, 0x25u);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_2225DD2A0(a1, (uint64_t (*)(void *, uint64_t))sub_2225DD274, 0, v3);
  *(void *)(a1 + 16) = v4;
  sub_2225C3D0C(&v20, v3, v4 - v3);
  *(void *)(a1 + 16) = sub_2225DD2A0(a1, (uint64_t (*)(void *, uint64_t))sub_2225DD250, 0, *(void *)(a1 + 16));
  sub_2225DCEE8(v17);
  uint64_t v5 = v20;
  uint64_t v6 = v21;
  sub_2225C3D00((int)v16, "YAML");
  if (sub_2225CD4BC(v5, v6, v16[0], (size_t)v16[1]))
  {
    uint64_t v7 = sub_2225DD2A0(a1, (uint64_t (*)(void *, uint64_t))sub_2225DD274, 0, *(void *)(a1 + 16));
    *(void *)(a1 + 16) = v7;
    int v8 = 3;
  }
  else
  {
    uint64_t v9 = v20;
    uint64_t v10 = v21;
    sub_2225C3D00((int)v14, "TAG");
    BOOL result = sub_2225CD4BC(v9, v10, v14[0], (size_t)v14[1]);
    if (!result) {
      return result;
    }
    uint64_t v12 = sub_2225DD2A0(a1, (uint64_t (*)(void *, uint64_t))sub_2225DD274, 0, *(void *)(a1 + 16));
    *(void *)(a1 + 16) = v12;
    uint64_t v13 = sub_2225DD2A0(a1, (uint64_t (*)(void *, uint64_t))sub_2225DD250, 0, v12);
    *(void *)(a1 + 16) = v13;
    uint64_t v7 = sub_2225DD2A0(a1, (uint64_t (*)(void *, uint64_t))sub_2225DD274, 0, v13);
    *(void *)(a1 + 16) = v7;
    int v8 = 4;
  }
  int v18 = v8;
  sub_2225C3D0C(&v15, v2, v7 - v2);
  long long v19 = v15;
  sub_2225DCEA4(a1 + 56, (uint64_t)v17);
  return 1;
}

uint64_t sub_2225DDFF8(uint64_t a1, int a2)
{
  sub_2225DD794(a1, -1);
  sub_2225DDE10((void *)(a1 + 280));
  *(unsigned char *)(a1 + 49) = 0;
  sub_2225DCEE8(v7);
  if (a2) {
    int v4 = 5;
  }
  else {
    int v4 = 6;
  }
  int v8 = v4;
  sub_2225C3D0C(&v6, *(void *)(a1 + 16), 3);
  long long v9 = v6;
  sub_2225DD4EC(a1, 3u);
  sub_2225DCEA4(a1 + 56, (uint64_t)v7);
  return 1;
}

uint64_t sub_2225DE084(uint64_t a1, int a2)
{
  sub_2225DCEE8(v9);
  if (a2) {
    int v4 = 12;
  }
  else {
    int v4 = 14;
  }
  int v10 = v4;
  sub_2225C3D0C(&v8, *(void *)(a1 + 16), 1);
  long long v11 = v8;
  sub_2225DD4EC(a1, 1u);
  sub_2225DCEA4(a1 + 56, (uint64_t)v9);
  uint64_t v5 = sub_2225DE14C(a1 + 56);
  sub_2225C64B8(&v7, v5);
  sub_2225DD53C(a1, v7, *(_DWORD *)(a1 + 36) - 1, 0);
  *(unsigned char *)(a1 + 49) = 1;
  ++*(_DWORD *)(a1 + 44);
  return 1;
}

uint64_t sub_2225DE14C(uint64_t a1)
{
  uint64_t v1 = sub_2225E13F8(a1);

  return sub_2225CC180(v1);
}

uint64_t sub_2225DE174(uint64_t a1, int a2)
{
  sub_2225DD6F4(a1, *(_DWORD *)(a1 + 44));
  *(unsigned char *)(a1 + 49) = 0;
  sub_2225DCEE8(v8);
  if (a2) {
    int v4 = 13;
  }
  else {
    int v4 = 15;
  }
  int v9 = v4;
  sub_2225C3D0C(&v7, *(void *)(a1 + 16), 1);
  long long v10 = v7;
  sub_2225DD4EC(a1, 1u);
  sub_2225DCEA4(a1 + 56, (uint64_t)v8);
  int v5 = *(_DWORD *)(a1 + 44);
  if (v5) {
    *(_DWORD *)(a1 + 44) = v5 - 1;
  }
  return 1;
}

uint64_t sub_2225DE20C(uint64_t a1)
{
  sub_2225DD6F4(a1, *(_DWORD *)(a1 + 44));
  *(unsigned char *)(a1 + 49) = 1;
  sub_2225DCEE8(v4);
  int v5 = 11;
  sub_2225C3D0C(&v3, *(void *)(a1 + 16), 1);
  long long v6 = v3;
  sub_2225DD4EC(a1, 1u);
  sub_2225DCEA4(a1 + 56, (uint64_t)v4);
  return 1;
}

uint64_t sub_2225DE288(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 36);
  uint64_t v3 = a1 + 56;
  uint64_t v4 = sub_2225DE334(a1 + 56);
  sub_2225DD874(a1, v2, 9, v4);
  sub_2225DD6F4(a1, *(_DWORD *)(a1 + 44));
  *(unsigned char *)(a1 + 49) = 1;
  sub_2225DCEE8(v7);
  int v8 = 7;
  sub_2225C3D0C(&v6, *(void *)(a1 + 16), 1);
  long long v9 = v6;
  sub_2225DD4EC(a1, 1u);
  sub_2225DCEA4(v3, (uint64_t)v7);
  return 1;
}

uint64_t sub_2225DE334(uint64_t a1)
{
  sub_2225E13F8(a1);
  uint64_t v2 = sub_2225E13F8(a1);
  sub_2225C64B8(&v4, v2);
  return v4;
}

uint64_t sub_2225DE378(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 44);
  if (!v2)
  {
    int v3 = *(_DWORD *)(a1 + 36);
    uint64_t v4 = sub_2225DE334(a1 + 56);
    sub_2225DD874(a1, v3, 10, v4);
    int v2 = *(_DWORD *)(a1 + 44);
  }
  sub_2225DD6F4(a1, v2);
  *(unsigned char *)(a1 + 49) = *(_DWORD *)(a1 + 44) == 0;
  sub_2225DCEE8(v7);
  int v8 = 16;
  sub_2225C3D0C(&v6, *(void *)(a1 + 16), 1);
  long long v9 = v6;
  sub_2225DD4EC(a1, 1u);
  sub_2225DCEA4(a1 + 56, (uint64_t)v7);
  return 1;
}

uint64_t sub_2225DE428(uint64_t a1)
{
  uint64_t v2 = a1 + 280;
  if (sub_2225CF1D0((void *)(a1 + 280)))
  {
    int v3 = *(_DWORD *)(a1 + 44);
    if (!v3)
    {
      int v4 = *(_DWORD *)(a1 + 36);
      uint64_t v5 = sub_2225DE334(a1 + 56);
      sub_2225DD874(a1, v4, 10, v5);
      int v3 = *(_DWORD *)(a1 + 44);
    }
    *(unsigned char *)(a1 + 49) = v3 == 0;
  }
  else
  {
    sub_2225DE59C(v2, (uint64_t)&v12);
    sub_2225DCEE8(v9);
    int v10 = 16;
    long long v11 = *(_OWORD *)(sub_2225CC180((uint64_t)&v12) + 24);
    sub_2225D3A34(&v8);
    sub_2225D3A34(&v7);
    uint64_t v8 = sub_2225DE5E8(a1 + 56);
    uint64_t v7 = sub_2225DE334(a1 + 56);
    while (sub_2225DE624(&v8, &v7))
    {
      if (sub_2225DE638(&v8, &v12)) {
        break;
      }
      sub_2225DE64C(&v8);
    }
    uint64_t v8 = sub_2225DD90C(a1 + 56, v8, (uint64_t)v9);
    sub_2225DD874(a1, SDWORD2(v12), 10, v8);
    *(unsigned char *)(a1 + 49) = 0;
  }
  sub_2225DCEE8(v9);
  int v10 = 17;
  sub_2225C3D0C(&v12, *(void *)(a1 + 16), 1);
  long long v11 = v12;
  sub_2225DD4EC(a1, 1u);
  sub_2225DCEA4(a1 + 56, (uint64_t)v9);
  return 1;
}

uint64_t sub_2225DE59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2225E2698(a1);
  *(_OWORD *)a2 = *(_OWORD *)v4;
  *(void *)(a2 + 16) = *(void *)(v4 + 16);

  return sub_2225DD758(a1);
}

uint64_t sub_2225DE5E8(uint64_t a1)
{
  sub_2225E13F8(a1);
  sub_2225C64B8(&v3, *(void *)(a1 + 176));
  return v3;
}

BOOL sub_2225DE624(void *a1, void *a2)
{
  return *a1 != *a2;
}

BOOL sub_2225DE638(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t *sub_2225DE64C(uint64_t *a1)
{
  *a1 = sub_2225E2174(*a1);
  return a1;
}

uint64_t sub_2225DE67C(uint64_t a1, int a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(_DWORD *)(a1 + 36);
  if (a2)
  {
    unint64_t v5 = *(void *)(a1 + 24);
    for (unsigned int i = (unsigned __int8 *)(v3 + 1); ; ++i)
    {
      *(void *)(v2 + 16) = i;
      if (i == (unsigned __int8 *)v5) {
        break;
      }
      if (*i == 34 && (*(i - 1) != 92 || !sub_2225DE874(v3 + 1, (uint64_t)i))) {
        goto LABEL_23;
      }
    }
LABEL_25:
    sub_2225CBDE8((uint64_t)v17, "Expected quote at end of scalar");
    sub_2225DD61C(v2, (uint64_t)v17);
    return 0;
  }
  unsigned int v7 = 1;
LABEL_9:
  sub_2225DD4EC(a1, v7);
  while (1)
  {
    while (1)
    {
      unsigned int i = *(unsigned __int8 **)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      int v8 = *i;
      if ((unint64_t)(i + 1) >= v5)
      {
        if (v8 == 39) {
          goto LABEL_23;
        }
      }
      else if (v8 == 39)
      {
        if (i[1] != 39) {
          goto LABEL_23;
        }
        a1 = v2;
        unsigned int v7 = 2;
        goto LABEL_9;
      }
      long long v9 = sub_2225DD118(v2, *(unsigned __int8 **)(v2 + 16));
      unsigned int i = v9;
      if (v9 == *(unsigned __int8 **)(v2 + 16)) {
        break;
      }
      if (v9 == *(unsigned __int8 **)(v2 + 24))
      {
        unint64_t v5 = (unint64_t)v9;
        unsigned int i = *(unsigned __int8 **)(v2 + 16);
        goto LABEL_23;
      }
      *(void *)(v2 + 16) = v9;
      ++*(_DWORD *)(v2 + 36);
    }
    int v10 = sub_2225DD1FC(v2, v9);
    if (v10 == i) {
      break;
    }
    *(void *)(v2 + 16) = v10;
    int v11 = *(_DWORD *)(v2 + 40) + 1;
    *(_DWORD *)(v2 + 36) = 0;
    *(_DWORD *)(v2 + 40) = v11;
  }
  unint64_t v5 = *(void *)(v2 + 24);
LABEL_23:
  if (i == (unsigned __int8 *)v5) {
    goto LABEL_25;
  }
  uint64_t v12 = 1;
  sub_2225DD4EC(v2, 1u);
  sub_2225DCEE8(v17);
  int v18 = 18;
  sub_2225C3D0C(&v16, v3, *(void *)(v2 + 16) - v3);
  long long v19 = v16;
  sub_2225DCEA4(v2 + 56, (uint64_t)v17);
  uint64_t v13 = sub_2225DE14C(v2 + 56);
  sub_2225C64B8(&v15, v13);
  sub_2225DD53C(v2, v15, v4, 0);
  *(unsigned char *)(v2 + 49) = 0;
  return v12;
}

BOOL sub_2225DE874(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)(a2 - 1);
  if (a2 - 1 >= a1)
  {
    do
    {
      if (*v2 != 92) {
        break;
      }
      --v2;
    }
    while ((unint64_t)v2 >= a1);
  }
  return ((a2 - 1 - (void)v2) & 0x8000000000000001) == 1;
}

uint64_t sub_2225DE8B0(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 **)(a1 + 16);
  if (*v2 == 35) {
    goto LABEL_2;
  }
  int v4 = 0;
  int v5 = *(_DWORD *)(a1 + 36);
  unsigned int v6 = *(_DWORD *)(a1 + 32) + 1;
  unsigned int v7 = *(unsigned __int8 **)(a1 + 16);
  while (1)
  {
    int v8 = v7;
    if ((sub_2225DD508(a1, v7) & 1) == 0) {
      break;
    }
LABEL_16:
    if (sub_2225DD508(a1, v8))
    {
      unsigned int v7 = v8;
      do
      {
        uint64_t v12 = sub_2225DD250(a1, v7);
        if (v12 == v7)
        {
          unsigned int v7 = sub_2225DD1FC(a1, v7);
          int v14 = *(_DWORD *)(a1 + 40) + 1;
          *(_DWORD *)(a1 + 36) = 0;
          *(_DWORD *)(a1 + 40) = v14;
          int v4 = 1;
        }
        else
        {
          unsigned int v13 = *(_DWORD *)(a1 + 36);
          if (v4 && v13 < v6 && *v7 == 9)
          {
            sub_2225CBDE8((uint64_t)v19, "Found invalid tab character in indentation");
            uint64_t v3 = a1;
            goto LABEL_31;
          }
          *(_DWORD *)(a1 + 36) = v13 + 1;
          unsigned int v7 = v12;
        }
      }
      while ((sub_2225DD508(a1, v7) & 1) != 0);
      if (*(_DWORD *)(a1 + 44) || *(_DWORD *)(a1 + 36) >= v6)
      {
        *(void *)(a1 + 16) = v7;
        int v8 = v7;
        if (*v7 != 35) {
          continue;
        }
      }
    }
    if (v2 != v8)
    {
      sub_2225DCEE8(v19);
      int v20 = 18;
      sub_2225C3D0C(&v18, v2, *(void *)(a1 + 16) - (void)v2);
      long long v21 = v18;
      sub_2225DCEA4(a1 + 56, (uint64_t)v19);
      uint64_t v15 = sub_2225DE14C(a1 + 56);
      sub_2225C64B8(&v17, v15);
      sub_2225DD53C(a1, v17, v5, 0);
      *(unsigned char *)(a1 + 49) = 0;
      return 1;
    }
LABEL_2:
    sub_2225CBDE8((uint64_t)v19, "Got empty plain scalar");
    uint64_t v3 = a1;
    goto LABEL_31;
  }
  while (1)
  {
    int v9 = *v8;
    if (*(_DWORD *)(a1 + 44)) {
      break;
    }
    if (v9 == 58 && (sub_2225DD508(a1, v8 + 1) & 1) != 0) {
      goto LABEL_16;
    }
LABEL_14:
    int v11 = sub_2225DD118(a1, v8);
    int v8 = v11;
    if (v11 != *(unsigned __int8 **)(a1 + 16))
    {
      *(void *)(a1 + 16) = v11;
      ++*(_DWORD *)(a1 + 36);
      if (!sub_2225DD508(a1, v11)) {
        continue;
      }
    }
    goto LABEL_16;
  }
  if (v9 != 58)
  {
LABEL_10:
    sub_2225C3D0C(v19, v8, 1);
    sub_2225C3D00((int)v22, ",:?[]{}");
    uint64_t v10 = sub_2225D8790(v19, v22[0], v22[1], 0);
    int v8 = *(unsigned __int8 **)(a1 + 16);
    if (v10 != -1) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (sub_2225DD508(a1, v8 + 1) || v8[1] == 44)
  {
    if (sub_2225DD508(a1, v8 + 1)) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  sub_2225CBDE8((uint64_t)v19, "Found unexpected ':' while scanning a plain scalar");
  uint64_t v3 = a1;
LABEL_31:
  sub_2225DD61C(v3, (uint64_t)v19);
  return 0;
}

BOOL sub_2225DEB84(uint64_t a1, int a2)
{
  int v4 = *(unsigned __int8 **)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 36);
  sub_2225DD4EC(a1, 1u);
  unsigned int v6 = *(unsigned __int8 **)(a1 + 16);
  while (1)
  {
    int v7 = *v6;
    if ((v7 - 44) <= 0x31 && ((1 << (v7 - 44)) & 0x2800000004001) != 0) {
      break;
    }
    if (v7 == 123) {
      break;
    }
    if (v7 == 125) {
      break;
    }
    int v9 = sub_2225DD274(a1, v6);
    unsigned int v6 = v9;
    if (v9 == *(unsigned __int8 **)(a1 + 16)) {
      break;
    }
    *(void *)(a1 + 16) = v9;
    ++*(_DWORD *)(a1 + 36);
  }
  if (v4 == v6)
  {
    sub_2225CBDE8((uint64_t)v15, "Got empty alias or anchor");
    sub_2225DD61C(a1, (uint64_t)v15);
  }
  else
  {
    sub_2225DCEE8(v15);
    if (a2) {
      int v10 = 19;
    }
    else {
      int v10 = 20;
    }
    int v16 = v10;
    sub_2225C3D0C(&v14, v4, *(void *)(a1 + 16) - (void)v4);
    long long v17 = v14;
    sub_2225DCEA4(a1 + 56, (uint64_t)v15);
    uint64_t v11 = sub_2225DE14C(a1 + 56);
    sub_2225C64B8(&v13, v11);
    sub_2225DD53C(a1, v13, v5, 0);
    *(unsigned char *)(a1 + 49) = 0;
  }
  return v4 != v6;
}

uint64_t sub_2225DECEC(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 **)(a1 + 16);
  sub_2225DD4EC(a1, 1u);
  for (unsigned int i = *(unsigned __int8 **)(a1 + 16); ; unsigned int i = v5)
  {
    while (1)
    {
      int v4 = sub_2225DD118(a1, i);
      unsigned int i = v4;
      if (v4 == *(unsigned __int8 **)(a1 + 16)) {
        break;
      }
      *(void *)(a1 + 16) = v4;
      ++*(_DWORD *)(a1 + 36);
    }
    if (!*(_DWORD *)(a1 + 36)) {
      break;
    }
    int v5 = sub_2225DD1FC(a1, v4);
    if (v5 == i) {
      return 0;
    }
    int v6 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0;
    *(_DWORD *)(a1 + 40) = v6;
    *(void *)(a1 + 16) = v5;
  }
  if (v2 != v4)
  {
    sub_2225DCEE8(v9);
    int v10 = 18;
    sub_2225C3D0C(&v8, v2, *(void *)(a1 + 16) - (void)v2);
    long long v11 = v8;
    sub_2225DCEA4(a1 + 56, (uint64_t)v9);
    return 1;
  }
  sub_2225CBDE8((uint64_t)v9, "Got empty block scalar");
  sub_2225DD61C(a1, (uint64_t)v9);
  return 0;
}

uint64_t sub_2225DEDFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 36);
  sub_2225DD4EC(a1, 1u);
  int v4 = *(unsigned char **)(a1 + 16);
  if (v4 != *(unsigned char **)(a1 + 24) && (sub_2225DD508(a1, *(unsigned __int8 **)(a1 + 16)) & 1) == 0)
  {
    if (*v4 == 60)
    {
      sub_2225DD4EC(a1, 1u);
      sub_2225DD318(a1);
      if ((sub_2225DD480(a1, 0x3Eu) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      *(void *)(a1 + 16) = sub_2225DD2A0(a1, (uint64_t (*)(void *, uint64_t))sub_2225DD274, 0, (uint64_t)v4);
    }
  }
  sub_2225DCEE8(v9);
  int v10 = 21;
  sub_2225C3D0C(&v8, v2, *(void *)(a1 + 16) - v2);
  long long v11 = v8;
  sub_2225DCEA4(a1 + 56, (uint64_t)v9);
  uint64_t v6 = sub_2225DE14C(a1 + 56);
  sub_2225C64B8(&v7, v6);
  sub_2225DD53C(a1, v7, v3, 0);
  *(unsigned char *)(a1 + 49) = 0;
  return 1;
}

unint64_t sub_2225DEF24(uint64_t a1, uint64_t a2)
{
  return sub_2225DD61C(a1, a2);
}

uint64_t sub_2225DEF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2225C26A4(400);
  sub_2225DC3B4(v8, a2, a3, a4);
  sub_2225CDDC8(a1, v8);
  sub_2225D8FA4(a1 + 8);
  return a1;
}

uint64_t sub_2225DEFA0(uint64_t a1)
{
  sub_2225DEFDC(a1 + 8);

  return sub_2225DEFE0(a1);
}

uint64_t sub_2225DEFE8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 50);
}

uint64_t sub_2225DEFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  sub_2225DF0B8((uint64_t)v13);
  *(void *)&long long v12 = sub_2225DF0BC(a2);
  *((void *)&v12 + 1) = v6;
  sub_2225CC69C((uint64_t)v13, &v12);
  uint64_t v8 = (void **)sub_2225CBA80(a1, v7);
  uint64_t v9 = sub_2225DF0BC(a2);
  sub_2225DF148(v11, v13);
  sub_2225DF0C8(v8, v9, 0, a3, v11[0], v11[1]);
  return sub_2225C56C4(v13);
}

uint64_t sub_2225DF0BC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2225DF0C8(void **a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v11 = *a1;
  sub_2225CCC70(v13);
  return sub_2225D45D4(v11, a2, a3, a4, a5, a6, v13[0], v13[1], 1u);
}

uint64_t sub_2225DF14C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  if (sub_2225DF1DC(a1 + 8, a2)) {
    sub_2225CBCBC("Can only iterate over the stream once", 1);
  }
  uint64_t v5 = sub_2225CBA80(a1, v4);
  sub_2225DC3B8(v5, (uint64_t)&v8);
  uint64_t v6 = (uint64_t *)sub_2225C26A4(176);
  sub_2225DF270(v6, a1);
  sub_2225DF200(v3, (uint64_t)v6);
  sub_2225C64B8(&v9, v3);
  return v9;
}

BOOL sub_2225DF1DC(uint64_t a1, uint64_t a2)
{
  return *(void *)j_nullsub_1(a1, a2) != 0;
}

void sub_2225DF200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2225E1CF4(v7, v4);
  }
}

uint64_t sub_2225DF274()
{
  sub_2225D3A34(&v1);
  return v1;
}

BOOL sub_2225DF29C(uint64_t *a1, uint64_t *a2)
{
  return !sub_2225E16D0(a1, a2);
}

BOOL sub_2225DF2B8(uint64_t *a1, uint64_t a2)
{
  for (uint64_t i = *a1; ; uint64_t i = *a1)
  {
    uint64_t v4 = sub_2225CBA80(i, a2);
    if (sub_2225DEFE8(v4)) {
      return 0;
    }
    uint64_t v6 = a1[18];
    if (!v6)
    {
      sub_2225E100C(a1, v5);
      uint64_t v6 = a1[18];
    }
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    int v9 = *(_DWORD *)(sub_2225DF8D8(a1, v7) + 16);
    if (v9 != 6) {
      break;
    }
    sub_2225DF940(a1, v8, (uint64_t)v11);
  }
  return v9 != 2;
}

uint64_t sub_2225DF364(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)sub_2225CBA80(*a1, a2);
  BOOL v6 = sub_2225DF2B8(v3, v4);
  uint64_t v7 = *a1;
  if (v6)
  {
    uint64_t v8 = *(void *)sub_2225CBA80(v7, v5);
    uint64_t v9 = *a1;
    int v10 = (uint64_t *)sub_2225C26A4(176);
    sub_2225DF270(v10, v8);
    uint64_t v7 = v9;
    uint64_t v11 = (uint64_t)v10;
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_2225DF200(v7, v11);
  return *a1;
}

uint64_t sub_2225DF3DC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)a1 = &unk_26D4DB6E8;
  *(void *)(a1 + 8) = a3;
  sub_2225DF484((void *)(a1 + 16));
  *(_DWORD *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = a4;
  *(void *)(a1 + 48) = a5;
  *(void *)(a1 + 56) = a6;
  *(void *)(a1 + 64) = a7;
  uint64_t v14 = sub_2225DF488(a1, v13);
  uint64_t v15 = sub_2225C3C70(v14 + 24);
  uint64_t v16 = sub_2225D389C(v15);
  sub_2225C3D0C(&v18, v16, v16);
  *(_OWORD *)(a1 + 16) = v18;
  return a1;
}

uint64_t sub_2225DF488(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)sub_2225CBA80(*(void *)(a1 + 8), a2);

  return sub_2225DF8D8(v2, v3);
}

void sub_2225DF4B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = sub_2225DF7E8(a1);
  uint64_t v39 = v4;
  if (sub_2225CF1E0((uint64_t)&v38)
    || (uint64_t v5 = v38, v6 = v39, sub_2225C3D00((int)v37, "!"), !sub_2225D1680(v5, v6, v37[0], (size_t)v37[1])))
  {
    switch(sub_2225DF8D0(a1))
    {
      case 0u:
        uint64_t v13 = "tag:yaml.org,2002:null";
        break;
      case 1u:
        uint64_t v13 = "tag:yaml.org,2002:str";
        break;
      case 3u:
        uint64_t v13 = "tag:yaml.org,2002:map";
        break;
      case 4u:
        uint64_t v13 = "tag:yaml.org,2002:seq";
        break;
      default:
        uint64_t v13 = &byte_2226D1615;
        break;
    }
    sub_2225CCD48(a2, v13);
  }
  else
  {
    sub_2225CAD04(&v36);
    if (sub_2225CF3BC(&v38, 33, -1))
    {
      sub_2225C3D00((int)v35, "!!");
      if (sub_2225D0520((uint64_t)&v38, v35[0], (size_t)v35[1]))
      {
        uint64_t v9 = sub_2225CBA80(*(void *)(a1 + 8), v8);
        uint64_t v10 = sub_2225DF7F4(v9);
        sub_2225C3D00((int)v30, "!!");
        v29[0] = sub_2225DF7FC(v10, v30);
        uint64_t v11 = sub_2225DF82C((uint64_t)v29);
        sub_2225CA51C((void *)(v11 + 16), (uint64_t)&v31);
        sub_2225CCDE4((uint64_t)&v36, (uint64_t)&v31);
        std::string::~string(&v31);
        unint64_t v12 = 2;
      }
      else
      {
        uint64_t v17 = sub_2225CF3BC(&v38, 33, -1);
        *(void *)&long long v34 = sub_2225CE76C(&v38, 0, v17 + 1);
        *((void *)&v34 + 1) = v18;
        uint64_t v19 = sub_2225CBA80(*(void *)(a1 + 8), v18);
        uint64_t v20 = sub_2225DF7F4(v19);
        uint64_t v33 = sub_2225DF7FC(v20, (uint64_t *)&v34);
        uint64_t v22 = sub_2225CBA80(*(void *)(a1 + 8), v21);
        uint64_t v23 = sub_2225DF7F4(v22);
        v31.__r_.__value_.__r.__words[0] = sub_2225DF85C(v23, v24);
        if (sub_2225DF858(&v33, &v31))
        {
          uint64_t v25 = sub_2225DF82C((uint64_t)&v33);
          sub_2225CA51C((void *)(v25 + 16), (uint64_t)&v31);
          sub_2225CCDE4((uint64_t)&v36, (uint64_t)&v31);
          std::string::~string(&v31);
        }
        else
        {
          sub_2225DCEE8(&v31);
          LODWORD(v31.__r_.__value_.__r.__words[2]) = 21;
          long long v32 = v34;
          sub_2225CBDE8((uint64_t)v29, "Unknown tag handle ");
          sub_2225CBDF0((uint64_t)v28, (uint64_t)&v34);
          sub_2225CF9F4(v30, v29, v28);
          sub_2225DF88C(a1, (uint64_t)v30, (uint64_t)&v31);
        }
        unint64_t v12 = sub_2225CF3BC(&v38, 33, -1) + 1;
      }
    }
    else
    {
      uint64_t v14 = sub_2225CBA80(*(void *)(a1 + 8), v7);
      uint64_t v15 = sub_2225DF7F4(v14);
      sub_2225C3D00((int)v30, "!");
      v29[0] = sub_2225DF7FC(v15, v30);
      uint64_t v16 = sub_2225DF82C((uint64_t)v29);
      sub_2225CA51C((void *)(v16 + 16), (uint64_t)&v31);
      sub_2225CCDE4((uint64_t)&v36, (uint64_t)&v31);
      std::string::~string(&v31);
      unint64_t v12 = 1;
    }
    uint64_t v26 = sub_2225CE76C(&v38, v12, 0xFFFFFFFFFFFFFFFFLL);
    sub_2225CCA6C(&v36, v26, v27);
    sub_2225D1354(a2, &v36);
    std::string::~string(&v36);
  }
}

uint64_t sub_2225DF7E8(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t sub_2225DF7F4(uint64_t a1)
{
  return a1 + 152;
}

uint64_t sub_2225DF7FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = sub_2225E27F8(a1, a2);
  sub_2225C64B8(&v4, v2);
  return v4;
}

uint64_t sub_2225DF82C(uint64_t a1)
{
  uint64_t v1 = sub_2225E2AD4(a1);
  uint64_t v3 = nullsub_1(v1, v2);

  return nullsub_1(v3, v4);
}

uint64_t sub_2225DF85C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225E2940(a1, a2);
  sub_2225C64B8(&v4, v2);
  return v4;
}

unint64_t sub_2225DF88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)sub_2225CBA80(*(void *)(a1 + 8), a2);

  return sub_2225DFE44(v5, a2, a3);
}

uint64_t sub_2225DF8D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_2225DF8D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = sub_2225CBA80(*a1, a2);

  return sub_2225DC818(v2);
}

uint64_t sub_2225DF904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (uint64_t *)sub_2225CBA80(*(void *)(a1 + 8), a2);

  return sub_2225DF940(v4, v5, a3);
}

uint64_t sub_2225DF940@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_2225CBA80(*a1, a2);

  return sub_2225DC3B8(v4, a3);
}

uint64_t sub_2225DF97C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)sub_2225CBA80(*(void *)(a1 + 8), a2);

  return sub_2225DF9A8(v2, v3);
}

uint64_t sub_2225DF9A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225DF8D8(a1, a2);
  uint64_t v4 = *(void *)(v3 + 32);
  long long v5 = *(_OWORD *)(v3 + 16);
  long long v56 = *(_OWORD *)v3;
  long long v57 = v5;
  uint64_t v58 = v4;
  sub_2225DCEE8(&v53);
  sub_2225DCEE8(&v50);
  while (2)
  {
    switch((int)v57)
    {
      case 0:
        return 0;
      case 7:
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (!v12) {
          return v12;
        }
        uint64_t v13 = *a1 + 8;
        uint64_t v14 = sub_2225CE76C((void *)&v54 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
        uint64_t v16 = v15;
        uint64_t v17 = *((void *)&v51 + 1);
        uint64_t v18 = v52;
        uint64_t v19 = v12;
        uint64_t v20 = v13;
        uint64_t v21 = 2;
        goto LABEL_18;
      case 9:
        sub_2225DF940(a1, v6, (uint64_t)&v47);
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (!v12) {
          return v12;
        }
        uint64_t v22 = *a1 + 8;
        uint64_t v14 = sub_2225CE76C((void *)&v54 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
        uint64_t v16 = v23;
        uint64_t v17 = *((void *)&v51 + 1);
        uint64_t v18 = v52;
        uint64_t v19 = v12;
        uint64_t v20 = v22;
        uint64_t v21 = 0;
        goto LABEL_18;
      case 10:
        sub_2225DF940(a1, v6, (uint64_t)&v47);
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (!v12) {
          return v12;
        }
        uint64_t v24 = *a1 + 8;
        uint64_t v25 = sub_2225CE76C((void *)&v54 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
        uint64_t v27 = v26;
        uint64_t v28 = *((void *)&v51 + 1);
        uint64_t v29 = v52;
        uint64_t v30 = v12;
        uint64_t v31 = v24;
        uint64_t v32 = 0;
        goto LABEL_23;
      case 12:
        sub_2225DF940(a1, v6, (uint64_t)&v47);
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (!v12) {
          return v12;
        }
        uint64_t v33 = *a1 + 8;
        uint64_t v14 = sub_2225CE76C((void *)&v54 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
        uint64_t v16 = v34;
        uint64_t v17 = *((void *)&v51 + 1);
        uint64_t v18 = v52;
        uint64_t v19 = v12;
        uint64_t v20 = v33;
        uint64_t v21 = 1;
LABEL_18:
        sub_2225E1044(v19, v20, v14, v16, v17, v18, v21);
        return v12;
      case 14:
        sub_2225DF940(a1, v6, (uint64_t)&v47);
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (!v12) {
          return v12;
        }
        uint64_t v35 = *a1 + 8;
        uint64_t v25 = sub_2225CE76C((void *)&v54 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
        uint64_t v27 = v36;
        uint64_t v28 = *((void *)&v51 + 1);
        uint64_t v29 = v52;
        uint64_t v30 = v12;
        uint64_t v31 = v35;
        uint64_t v32 = 1;
        goto LABEL_23;
      case 16:
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (!v12) {
          return v12;
        }
        uint64_t v37 = *a1 + 8;
        uint64_t v25 = sub_2225CE76C((void *)&v54 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
        uint64_t v27 = v38;
        uint64_t v28 = *((void *)&v51 + 1);
        uint64_t v29 = v52;
        uint64_t v30 = v12;
        uint64_t v31 = v37;
        uint64_t v32 = 2;
LABEL_23:
        sub_2225E1048(v30, v31, v25, v27, v28, v29, v32);
        return v12;
      case 18:
        sub_2225DF940(a1, v6, (uint64_t)&v47);
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (v12)
        {
          uint64_t v39 = *a1 + 8;
          uint64_t v40 = sub_2225CE76C((void *)&v54 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
          sub_2225E104C(v12, v39, v40, v41, *((void *)&v51 + 1), v52, *((void *)&v57 + 1), v58);
        }
        return v12;
      case 19:
        sub_2225DF940(a1, v6, (uint64_t)&v47);
        uint64_t v12 = sub_2225E0988(88, a1 + 1, 0x10uLL);
        if (v12)
        {
          uint64_t v42 = *a1 + 8;
          uint64_t v43 = sub_2225CE76C((void *)&v57 + 1, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
          sub_2225E1040(v12, v42, v43, v44);
        }
        return v12;
      case 20:
        if (v54 == 20)
        {
          BOOL v45 = "Already encountered an anchor for this node!";
          goto LABEL_30;
        }
        sub_2225DF940(a1, v6, (uint64_t)&v47);
        long long v53 = v47;
        long long v54 = v48;
        uint64_t v55 = v49;
        goto LABEL_7;
      case 21:
        if (v51 != 21)
        {
          sub_2225DF940(a1, v6, (uint64_t)&v47);
          long long v50 = v47;
          long long v51 = v48;
          uint64_t v52 = v49;
LABEL_7:
          uint64_t v8 = sub_2225DF8D8(a1, v7);
          uint64_t v9 = *(void *)(v8 + 32);
          long long v10 = *(_OWORD *)(v8 + 16);
          long long v56 = *(_OWORD *)v8;
          long long v57 = v10;
          uint64_t v58 = v9;
          continue;
        }
        BOOL v45 = "Already encountered a tag for this node!";
LABEL_30:
        sub_2225CBDE8((uint64_t)&v47, v45);
        sub_2225DFE44(a1, (uint64_t)&v47, (uint64_t)&v56);
        return 0;
      default:
        uint64_t v11 = sub_2225E0988(72, a1 + 1, 0x10uLL);
        uint64_t v12 = v11;
        if (v11) {
          sub_2225E0998(v11, *a1 + 8);
        }
        return v12;
    }
  }
}

uint64_t sub_2225DFE24(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA80(*(void *)(a1 + 8), a2) + 8;
}

unint64_t sub_2225DFE44(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225CBA80(*a1, a2);
  sub_2225C3C70(a3 + 24);

  return sub_2225DD61C(v5, a2);
}

uint64_t sub_2225DFEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)sub_2225CBA80(*(void *)(a1 + 8), a2);

  return sub_2225DFECC(v2, v3);
}

uint64_t sub_2225DFECC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = sub_2225CBA80(*a1, a2);

  return sub_2225DEFE8(v2);
}

uint64_t sub_2225DFEF8(uint64_t a1, const void **a2)
{
  uint64_t v4 = (void *)(a1 + 72);
  if (sub_2225CC124((void *)(a1 + 72), 0) == 34)
  {
    uint64_t v5 = sub_2225C3D04((uint64_t)v4);
    *(void *)&long long v30 = sub_2225CE76C(v4, 1uLL, v5 - 2);
    *((void *)&v30 + 1) = v6;
    sub_2225C3D00((int)v29, "\\\r\n");
    unint64_t v7 = sub_2225D8790(&v30, v29[0], v29[1], 0);
    if (v7 != -1)
    {
      uint64_t v8 = sub_2225E012C(a1, v30, *((uint64_t *)&v30 + 1), v7, a2);
LABEL_11:
      *(void *)&long long v31 = v8;
      *((void *)&v31 + 1) = v9;
      return v31;
    }
    return v30;
  }
  if (sub_2225CC124(v4, 0) != 39)
  {
    sub_2225C3D00((int)v26, " ");
    uint64_t v8 = sub_2225E0864(v4, v26[0], v26[1]);
    goto LABEL_11;
  }
  uint64_t v10 = sub_2225C3D04((uint64_t)v4);
  *(void *)&long long v30 = sub_2225CE76C(v4, 1uLL, v10 - 2);
  *((void *)&v30 + 1) = v11;
  unint64_t v12 = sub_2225CCC00(&v30, 0x27u, 0);
  if (v12 == -1) {
    return v30;
  }
  unint64_t v13 = v12;
  sub_2225C5D90(a2);
  unsigned int v14 = sub_2225C3D04((uint64_t)&v30);
  sub_2225CE1E8(a2, v14);
  do
  {
    uint64_t v15 = sub_2225C3C70((uint64_t)&v30);
    sub_2225C3D0C(v28, v15, v13);
    uint64_t v16 = sub_2225C3D04((uint64_t)a2);
    uint64_t v17 = (char *)sub_2225C3C70((uint64_t)v28);
    uint64_t v18 = (char *)sub_2225C3C78(v28);
    sub_2225E06C8(a2, v16, v17, v18);
    char v27 = 39;
    sub_2225C52D8((uint64_t)a2, &v27);
    *(void *)&long long v30 = sub_2225CE76C(&v30, v13 + 2, 0xFFFFFFFFFFFFFFFFLL);
    *((void *)&v30 + 1) = v19;
    unint64_t v13 = sub_2225CCC00(&v30, 0x27u, 0);
  }
  while (v13 != -1);
  uint64_t v20 = sub_2225C3D04((uint64_t)a2);
  uint64_t v21 = (char *)sub_2225C3C70((uint64_t)&v30);
  uint64_t v22 = (char *)sub_2225C3C78(&v30);
  sub_2225E06C8(a2, v20, v21, v22);
  uint64_t v23 = sub_2225C3C70((uint64_t)a2);
  uint64_t v24 = sub_2225C5664((uint64_t)a2);
  sub_2225C3D0C(&v31, v23, v24);
  return v31;
}

uint64_t sub_2225E012C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, const void **a5)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  sub_2225C5D90(a5);
  unsigned int v8 = sub_2225C3D04((uint64_t)&v41);
  sub_2225CE1E8(a5, v8);
  if (a4 != -1)
  {
    while (1)
    {
      uint64_t v9 = sub_2225C3C70((uint64_t)&v41);
      sub_2225C3D0C(v40, v9, a4);
      uint64_t v10 = sub_2225C3D04((uint64_t)a5);
      uint64_t v11 = (char *)sub_2225C3C70((uint64_t)v40);
      unint64_t v12 = (char *)sub_2225C3C78(v40);
      sub_2225E06C8(a5, v10, v11, v12);
      uint64_t v41 = sub_2225CE76C(&v41, a4, 0xFFFFFFFFFFFFFFFFLL);
      uint64_t v42 = v13;
      int v14 = sub_2225CC124(&v41, 0);
      if (v14 == 13 || v14 == 10) {
        break;
      }
      if (sub_2225C3D04((uint64_t)&v41) != 1)
      {
        uint64_t v41 = sub_2225CE76C(&v41, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
        uint64_t v42 = v17;
        int v18 = sub_2225CC124(&v41, 0);
        if (v18 > 91)
        {
          switch(v18)
          {
            case '\\':
              char v19 = 92;
              goto LABEL_51;
            case '_':
              uint64_t v20 = 160;
              goto LABEL_46;
            case 'a':
              char v19 = 7;
              goto LABEL_51;
            case 'b':
              LOBYTE(v37) = 8;
              goto LABEL_52;
            case 'e':
              char v19 = 27;
              goto LABEL_51;
            case 'f':
              char v19 = 12;
              goto LABEL_51;
            case 'n':
              LOBYTE(v37) = 10;
              goto LABEL_52;
            case 'r':
              char v19 = 13;
              goto LABEL_51;
            case 't':
              goto LABEL_25;
            case 'u':
              if ((unint64_t)sub_2225C3D04((uint64_t)&v41) < 5) {
                goto LABEL_53;
              }
              LODWORD(v36) = 0;
              uint64_t v37 = sub_2225CE76C(&v41, 1uLL, 4uLL);
              uint64_t v38 = v21;
              if (sub_2225D1DDC(&v37, 0x10u, &v36))
              {
                uint64_t v22 = 65533;
                LODWORD(v36) = 65533;
              }
              else
              {
                uint64_t v22 = v36;
              }
              sub_2225DC610(v22, (uint64_t)a5);
              unint64_t v15 = 4;
              break;
            case 'v':
              char v19 = 11;
              goto LABEL_51;
            case 'x':
              if ((unint64_t)sub_2225C3D04((uint64_t)&v41) < 3) {
                goto LABEL_53;
              }
              LODWORD(v36) = 0;
              uint64_t v37 = sub_2225CE76C(&v41, 1uLL, 2uLL);
              uint64_t v38 = v23;
              if (sub_2225D1DDC(&v37, 0x10u, &v36))
              {
                uint64_t v24 = 65533;
                LODWORD(v36) = 65533;
              }
              else
              {
                uint64_t v24 = v36;
              }
              sub_2225DC610(v24, (uint64_t)a5);
              unint64_t v15 = 2;
              break;
            default:
              goto LABEL_64;
          }
LABEL_9:
          uint64_t v41 = sub_2225CE76C(&v41, v15, 0xFFFFFFFFFFFFFFFFLL);
          uint64_t v42 = v16;
LABEL_53:
          uint64_t v41 = sub_2225CE76C(&v41, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
          uint64_t v42 = v27;
          goto LABEL_54;
        }
        if (v18 > 46)
        {
          switch(v18)
          {
            case 'L':
              uint64_t v20 = 8232;
              goto LABEL_46;
            case 'M':
            case 'O':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
              goto LABEL_64;
            case 'N':
              uint64_t v20 = 133;
              goto LABEL_46;
            case 'P':
              uint64_t v20 = 8233;
LABEL_46:
              sub_2225DC610(v20, (uint64_t)a5);
              goto LABEL_53;
            case 'U':
              if ((unint64_t)sub_2225C3D04((uint64_t)&v41) < 9) {
                goto LABEL_53;
              }
              LODWORD(v36) = 0;
              uint64_t v37 = sub_2225CE76C(&v41, 1uLL, 8uLL);
              uint64_t v38 = v25;
              if (sub_2225D1DDC(&v37, 0x10u, &v36))
              {
                uint64_t v26 = 65533;
                LODWORD(v36) = 65533;
              }
              else
              {
                uint64_t v26 = v36;
              }
              sub_2225DC610(v26, (uint64_t)a5);
              unint64_t v15 = 8;
              goto LABEL_9;
            default:
              if (v18 == 47)
              {
                char v19 = 47;
LABEL_51:
                LOBYTE(v37) = v19;
              }
              else
              {
                if (v18 != 48)
                {
LABEL_64:
                  sub_2225DCEE8(&v37);
                  uint64_t v34 = sub_2225C3C70((uint64_t)&v41);
                  sub_2225C3D0C(&v36, v34, 1);
                  long long v39 = v36;
                  sub_2225CBDE8((uint64_t)&v36, "Unrecognized escape code!");
                  sub_2225DF88C(a1, (uint64_t)&v36, (uint64_t)&v37);
                  sub_2225C3D00((int)&v43, &byte_2226D1615);
                  return v43;
                }
                LOBYTE(v37) = 0;
              }
              break;
          }
          goto LABEL_52;
        }
        if (v18 <= 12)
        {
          if (v18 == 9)
          {
LABEL_25:
            LOBYTE(v37) = 9;
LABEL_52:
            sub_2225C52D8((uint64_t)a5, &v37);
            goto LABEL_53;
          }
          if (v18 != 10) {
            goto LABEL_64;
          }
        }
        else if (v18 != 13)
        {
          if (v18 == 32)
          {
            LOBYTE(v37) = 32;
          }
          else
          {
            if (v18 != 34) {
              goto LABEL_64;
            }
            LOBYTE(v37) = 34;
          }
          goto LABEL_52;
        }
LABEL_5:
        if ((unint64_t)sub_2225C3D04((uint64_t)&v41) >= 2
          && (sub_2225CC124(&v41, 1) == 13 || sub_2225CC124(&v41, 1) == 10))
        {
          unint64_t v15 = 1;
          goto LABEL_9;
        }
        goto LABEL_53;
      }
LABEL_54:
      sub_2225C3D00((int)v35, "\\\r\n");
      a4 = sub_2225D8790(&v41, v35[0], v35[1], 0);
      if (a4 == -1) {
        goto LABEL_62;
      }
    }
    LOBYTE(v37) = 10;
    sub_2225C52D8((uint64_t)a5, &v37);
    goto LABEL_5;
  }
LABEL_62:
  uint64_t v28 = sub_2225C3D04((uint64_t)a5);
  uint64_t v29 = (char *)sub_2225C3C70((uint64_t)&v41);
  long long v30 = (char *)sub_2225C3C78(&v41);
  sub_2225E06C8(a5, v28, v29, v30);
  uint64_t v31 = sub_2225C3C70((uint64_t)a5);
  uint64_t v32 = sub_2225C5664((uint64_t)a5);
  sub_2225C3D0C(&v43, v31, v32);
  return v43;
}

unsigned char *sub_2225E06C8(const void **a1, uint64_t a2, char *a3, char *a4)
{
  uint64_t v8 = sub_2225C3C70((uint64_t)a1);
  uint64_t v9 = a2 - v8;
  if (sub_2225C3D04((uint64_t)a1) == a2)
  {
    sub_2225C5A88(a1, a3, a4);
    return (unsigned char *)(sub_2225C3C70((uint64_t)a1) + v9);
  }
  else
  {
    unint64_t v10 = sub_2225C5B3C((uint64_t)a3, (uint64_t)a4);
    int v11 = sub_2225C5664((uint64_t)a1);
    sub_2225CE1E8(a1, v11 + v10);
    uint64_t v12 = sub_2225C3C70((uint64_t)a1);
    uint64_t v13 = (unsigned char *)(v12 + v9);
    unint64_t v14 = sub_2225C3D04((uint64_t)a1) - (void)v13;
    unint64_t v15 = (unsigned char *)sub_2225C3D04((uint64_t)a1);
    uint64_t v16 = sub_2225C3D04((uint64_t)a1);
    if (v14 >= v10)
    {
      sub_2225C64B8(&v25, v16 - v10);
      uint64_t v22 = sub_2225C3D04((uint64_t)a1);
      sub_2225C64B8(&v24, v22);
      sub_2225E2B00(a1, v25, v24);
      sub_2225E2BB4();
      sub_2225C5DDC();
    }
    else
    {
      sub_2225C5B6C((uint64_t)a1, v16 + v10);
      uint64_t v17 = sub_2225C3D04((uint64_t)a1);
      sub_2225E2BB8(v13, (int)v15, (void *)(v17 - (v15 - v13)));
      if (v15 != v13)
      {
        uint64_t v18 = v12 + a2 - v8 - (void)v15;
        char v19 = v13;
        do
        {
          char v20 = *a3++;
          *v19++ = v20;
        }
        while (!__CFADD__(v18++, 1));
      }
      sub_2225D0844(a3, (uint64_t)a4, v15);
    }
  }
  return v13;
}

uint64_t sub_2225E0864(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + 1;
  uint64_t v5 = a1[1];
  uint64_t v8 = sub_2225D8AD4(a1, a2, a3, 0xFFFFFFFFFFFFFFFFLL) + 1;
  uint64_t v6 = (void *)sub_2225CAB38(v4, &v8);
  return sub_2225E17A0(a1, v5 - *v6);
}

uint64_t sub_2225E08C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 72);
  if (!result)
  {
    int v5 = *(_DWORD *)(sub_2225DF488(a1, a2) + 16);
    if (v5 > 15)
    {
      if (v5 == 16)
      {
        sub_2225DF904(a1, v4, (uint64_t)v11);
        goto LABEL_12;
      }
      if (v5 != 17) {
        goto LABEL_12;
      }
    }
    else
    {
      if (v5) {
        BOOL v6 = v5 == 8;
      }
      else {
        BOOL v6 = 1;
      }
      if (!v6)
      {
LABEL_12:
        int v8 = *(_DWORD *)(sub_2225DF488(a1, v4) + 16);
        uint64_t v7 = a1;
        if (v8 != 17 && v8 != 8)
        {
          uint64_t result = sub_2225DF97C(a1, v4);
LABEL_19:
          *(void *)(a1 + 72) = result;
          return result;
        }
LABEL_17:
        unint64_t v10 = (uint64_t *)sub_2225DFE24(v7, v4);
        uint64_t result = sub_2225E0988(72, v10, 0x10uLL);
        if (result) {
          uint64_t result = sub_2225E0998(result, *(void *)(a1 + 8));
        }
        goto LABEL_19;
      }
    }
    uint64_t v7 = a1;
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_2225E0988(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  return sub_2225CC520(a2, a1, a3);
}

uint64_t sub_2225E099C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 80);
  if (!result)
  {
    uint64_t v4 = sub_2225E08C8(a1, a2);
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    if (sub_2225DFEA0(a1, v5)) {
      goto LABEL_5;
    }
    uint64_t v7 = sub_2225DF488(a1, v6);
    unsigned int v8 = *(_DWORD *)(v7 + 16);
    if (v8 > 0x11) {
      goto LABEL_13;
    }
    if (((1 << v8) & 0x18901) != 0) {
      goto LABEL_5;
    }
    if (v8 == 17)
    {
      sub_2225DF904(a1, v6, (uint64_t)v12);
      int v11 = *(_DWORD *)(sub_2225DF488(a1, v10) + 16);
      if (v11 != 16 && v11 != 8)
      {
        uint64_t result = sub_2225DF97C(a1, v6);
LABEL_7:
        *(void *)(a1 + 80) = result;
        return result;
      }
    }
    else
    {
LABEL_13:
      sub_2225CBDE8((uint64_t)v12, "Unexpected token in Key Value.");
      sub_2225DF88C(a1, (uint64_t)v12, v7);
    }
LABEL_5:
    uint64_t v9 = (uint64_t *)sub_2225DFE24(a1, v6);
    uint64_t result = sub_2225E0988(72, v9, 0x10uLL);
    if (result) {
      uint64_t result = sub_2225E0998(result, *(void *)(a1 + 8));
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_2225E0ABC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225DFEA0(a1, a2);
  if (result) {
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)(a1 + 80);
  if (v5)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8))(v5);
    if (*(_DWORD *)(a1 + 72) == 2) {
      goto LABEL_19;
    }
  }
  uint64_t result = sub_2225DF488(a1, v4);
  uint64_t v7 = *(void *)(result + 32);
  long long v8 = *(_OWORD *)(result + 16);
  v12[0] = *(_OWORD *)result;
  v12[1] = v8;
  uint64_t v13 = v7;
  if ((v8 & 0xFFFFFFFD) != 0x10)
  {
    if (*(_DWORD *)(a1 + 72))
    {
      if (v8)
      {
        if (v8 != 15)
        {
          if (v8 == 11)
          {
            sub_2225DF904(a1, v6, (uint64_t)v11);
            return sub_2225E0ABC(a1);
          }
          uint64_t v10 = "Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.";
          goto LABEL_18;
        }
LABEL_15:
        uint64_t result = sub_2225DF904(a1, v6, (uint64_t)v11);
      }
    }
    else if (v8)
    {
      if (v8 != 8)
      {
        uint64_t v10 = "Unexpected token. Expected Key or Block End";
LABEL_18:
        sub_2225CBDE8((uint64_t)v11, v10);
        uint64_t result = sub_2225DF88C(a1, (uint64_t)v11, (uint64_t)v12);
        goto LABEL_19;
      }
      goto LABEL_15;
    }
LABEL_19:
    *(unsigned char *)(a1 + 77) = 1;
    *(void *)(a1 + 80) = 0;
    return result;
  }
  uint64_t v9 = (uint64_t *)sub_2225DFE24(a1, v6);
  uint64_t result = sub_2225E0988(88, v9, 0x10uLL);
  if (result) {
    uint64_t result = sub_2225E0C00((void *)result, *(void *)(a1 + 8));
  }
  *(void *)(a1 + 80) = result;
  return result;
}

uint64_t sub_2225E0C04(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225DFEA0(a1, a2);
  if (result) {
    goto LABEL_2;
  }
  uint64_t v5 = *(void *)(a1 + 80);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t result = sub_2225DF488(a1, v4);
  uint64_t v7 = *(void *)(result + 32);
  long long v8 = *(_OWORD *)(result + 16);
  long long v13 = *(_OWORD *)result;
  long long v14 = v8;
  uint64_t v15 = v7;
  int v9 = *(_DWORD *)(a1 + 72);
  if (v9 == 2)
  {
    if (v14 == 7) {
      goto LABEL_14;
    }
LABEL_2:
    *(unsigned char *)(a1 + 77) = 1;
    *(void *)(a1 + 80) = 0;
    return result;
  }
  if (v9 == 1)
  {
    switch((int)v14)
    {
      case 0:
        goto LABEL_2;
      case 2:
      case 5:
      case 6:
        uint64_t v10 = "Could not find closing ]!";
        goto LABEL_18;
      case 11:
        sub_2225DF904(a1, v6, (uint64_t)v12);
        *(unsigned char *)(a1 + 78) = 1;
        return sub_2225E0C04(a1);
      case 13:
        goto LABEL_19;
      default:
        if (!*(unsigned char *)(a1 + 78))
        {
          uint64_t v10 = "Expected , between entries!";
          goto LABEL_18;
        }
        uint64_t result = sub_2225DF97C(a1, v6);
        *(void *)(a1 + 80) = result;
        if (!result) {
          *(unsigned char *)(a1 + 77) = 1;
        }
        *(unsigned char *)(a1 + 78) = 0;
        break;
    }
    return result;
  }
  if (v9) {
    return result;
  }
  if (!v14) {
    goto LABEL_2;
  }
  if (v14 == 8)
  {
LABEL_19:
    uint64_t result = sub_2225DF904(a1, v6, (uint64_t)v12);
    goto LABEL_2;
  }
  if (v14 != 7)
  {
    uint64_t v10 = "Unexpected token. Expected Block Entry or Block End.";
LABEL_18:
    sub_2225CBDE8((uint64_t)v12, v10);
    uint64_t result = sub_2225DF88C(a1, (uint64_t)v12, (uint64_t)&v13);
    goto LABEL_2;
  }
LABEL_14:
  sub_2225DF904(a1, v6, (uint64_t)v12);
  uint64_t result = sub_2225DF97C(a1, v11);
  *(void *)(a1 + 80) = result;
  if (!result) {
    goto LABEL_2;
  }
  return result;
}

uint64_t *sub_2225E0DD8(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  sub_2225E0EC4(a1 + 1);
  a1[18] = 0;
  sub_2225E0EC8((uint64_t)(a1 + 19), v3);
  sub_2225C3D00((int)v10, "!");
  sub_2225C3D00((int)v11, "!");
  uint64_t v4 = (_OWORD *)sub_2225E0ECC((uint64_t)(a1 + 19), v11);
  *uint64_t v4 = v10[0];
  sub_2225C3D00((int)v10, "tag:yaml.org,2002:");
  sub_2225C3D00((int)v11, "!!");
  uint64_t v5 = (_OWORD *)sub_2225E0ECC((uint64_t)(a1 + 19), v11);
  *uint64_t v5 = v10[0];
  if (sub_2225E0F38(a1, v6)) {
    sub_2225E0F9C(a1, 5);
  }
  if (*(_DWORD *)(sub_2225DF8D8(a1, v7) + 16) == 5) {
    sub_2225DF940(a1, v8, (uint64_t)v10);
  }
  return a1;
}

uint64_t sub_2225E0ECC(uint64_t a1, uint64_t *a2)
{
  uint64_t v10 = sub_2225E2FA0((uint64_t)a2);
  nullsub_1(v10, v4);
  v11[0] = sub_2225E2ECC(a1, a2, (uint64_t)&unk_2226CBA30, (uint64_t)&v10, (uint64_t)&v9);
  v11[1] = v5;
  uint64_t v6 = sub_2225E2AD4((uint64_t)v11);
  return nullsub_1(v6, v7) + 16;
}

uint64_t sub_2225E0F38(uint64_t *a1, uint64_t a2)
{
  for (char i = 0; ; char i = 1)
  {
    while (1)
    {
      int v5 = *(_DWORD *)(sub_2225DF8D8(a1, a2) + 16);
      if (v5 != 3) {
        break;
      }
      sub_2225E115C(a1, v4);
      char i = 1;
    }
    if (v5 != 4) {
      break;
    }
    sub_2225E1050(a1, v4);
  }
  return i & 1;
}

BOOL sub_2225E0F9C(uint64_t *a1, uint64_t a2)
{
  int v2 = a2;
  sub_2225DF940(a1, a2, (uint64_t)v7);
  int v4 = v8;
  if (v8 != v2)
  {
    sub_2225CBDE8((uint64_t)v6, "Unexpected token");
    sub_2225DFE44(a1, (uint64_t)v6, (uint64_t)v7);
  }
  return v4 == v2;
}

uint64_t sub_2225E100C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = a1[18];
  if (!result)
  {
    uint64_t result = sub_2225DF9A8(a1, a2);
    a1[18] = result;
  }
  return result;
}

void *sub_2225E1050(uint64_t *a1, uint64_t a2)
{
  sub_2225DF940(a1, a2, (uint64_t)v21);
  long long v20 = v22;
  sub_2225C3D00((int)v17, " \t");
  unint64_t v3 = sub_2225D8790(&v20, v17[0], v17[1], 0);
  uint64_t v18 = sub_2225CE76C(&v20, v3, 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v19 = v4;
  sub_2225C3D00((int)v16, " \t");
  *(void *)&long long v20 = sub_2225E1180(&v18, v16[0], v16[1]);
  *((void *)&v20 + 1) = v5;
  sub_2225C3D00((int)v15, " \t");
  unint64_t v6 = sub_2225D8790(&v20, v15[0], v15[1], 0);
  uint64_t v18 = sub_2225CE76C(&v20, 0, v6);
  uint64_t v19 = v7;
  v14[0] = sub_2225CE76C(&v20, v6, 0xFFFFFFFFFFFFFFFFLL);
  v14[1] = v8;
  sub_2225C3D00((int)v13, " \t");
  uint64_t v9 = sub_2225E1180(v14, v13[0], v13[1]);
  uint64_t v11 = v10;
  uint64_t result = (void *)sub_2225E11D0((uint64_t)(a1 + 19), &v18);
  void *result = v9;
  result[1] = v11;
  return result;
}

uint64_t sub_2225E115C(uint64_t *a1, uint64_t a2)
{
  return sub_2225DF940(a1, a2, (uint64_t)v3);
}

uint64_t sub_2225E1180(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + 1;
  uint64_t v7 = sub_2225D8950(a1, a2, a3, 0);
  uint64_t v5 = (unint64_t *)sub_2225CAB38(v4, &v7);
  return sub_2225E1AC8(a1, *v5);
}

uint64_t sub_2225E11D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v10 = sub_2225E36E0((uint64_t)a2);
  nullsub_1(v10, v4);
  v11[0] = sub_2225E2ECC(a1, a2, (uint64_t)&unk_2226CBA30, (uint64_t)&v10, (uint64_t)&v9);
  v11[1] = v5;
  uint64_t v6 = sub_2225E2AD4((uint64_t)v11);
  return nullsub_1(v6, v7) + 16;
}

uint64_t sub_2225E123C(uint64_t a1)
{
  uint64_t v1 = j_j_nullsub_1(a1);

  return nullsub_1(v1, v2);
}

uint64_t sub_2225E1264(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E08C8(a1, a2);
  (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)sub_2225E099C(a1, v4) + 8);

  return v5();
}

void *sub_2225E12EC(void *a1)
{
  uint64_t v2 = sub_2225D250C(a1);
  sub_2225D250C(v2 + 3);
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0;
  return a1;
}

uint64_t sub_2225E1324(uint64_t a1)
{
  return a1;
}

void *sub_2225E136C(void *a1)
{
  if (!sub_2225C603C(a1))
  {
    uint64_t v2 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v2);
  }
  return a1;
}

uint64_t sub_2225E13A8(uint64_t a1)
{
  if (*(void *)(a1 + 176))
  {
    sub_2225DCE44(a1);
    uint64_t v2 = sub_2225E13F8(a1);
    nullsub_1(v2, v3);
  }

  return sub_2225E1400(a1);
}

uint64_t sub_2225E13F8(uint64_t a1)
{
  return j_nullsub_1(a1, *(void *)(a1 + 176));
}

uint64_t sub_2225E1404(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225E1438(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  uint64_t v3 = (void **)sub_2225C3C70(a1 + 16);
  uint64_t v4 = (void **)sub_2225C3D04(v2);
  sub_2225E14A4(a1, v3, v4);
  sub_2225E1510(a1);
  sub_2225C56C4(a1 + 72);
  sub_2225C56C4(v2);
  return a1;
}

void sub_2225E14A4(uint64_t a1, void **a2, void **a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = a1 + 16;
    int v6 = a1 + 128;
    do
    {
      uint64_t v7 = sub_2225C3C70(v5);
      unsigned int v8 = sub_2225D5C78(v7, (uint64_t)v4);
      sub_2225CC73C(v8);
      char v9 = *v4++;
      sub_2225E1574(v6, v9);
    }
    while (v4 != a3);
  }
}

void sub_2225E1510(uint64_t a1)
{
  int v1 = a1;
  uint64_t v2 = a1 + 72;
  uint64_t v3 = (void **)sub_2225C3C70(a1 + 72);
  uint64_t v4 = sub_2225C3D04(v2);
  if (v3 != (void **)v4)
  {
    uint64_t v5 = (void **)v4;
    int v6 = v1 + 128;
    do
    {
      uint64_t v7 = *v3;
      v3 += 2;
      sub_2225E1574(v6, v7);
    }
    while (v3 != v5);
  }
}

void sub_2225E1574(int a1, void *a2)
{
}

uint64_t sub_2225E157C(uint64_t a1, uint64_t a2)
{
  sub_2225E15E4(&v3, a1, a2);
  return v3;
}

uint64_t sub_2225E15B0(uint64_t a1, uint64_t a2)
{
  sub_2225E1610(&v3, a1, a2);
  return v3;
}

uint64_t sub_2225E15E8(uint64_t result, unsigned char *a2, _DWORD *a3)
{
  *(unsigned char *)uint64_t result = *a2;
  *(_DWORD *)(result + 4) = *a3;
  return result;
}

_DWORD *sub_2225E15FC(_DWORD *result, char *a2)
{
  void *result = *a2;
  result[1] = *((_DWORD *)a2 + 1);
  return result;
}

_DWORD *sub_2225E1614(_DWORD *result, _DWORD *a2, _DWORD *a3)
{
  void *result = *a2;
  result[1] = *a3;
  return result;
}

void *sub_2225E1628(void *a1)
{
  uint64_t v2 = sub_2225E165C(a1);
  *((_DWORD *)v2 + 4) = 0;
  sub_2225CCC70(v2 + 3);
  return a1;
}

void *sub_2225E165C(void *a1)
{
  uint64_t result = sub_2225D2584(a1);
  result[1] = 0;
  return result;
}

uint64_t sub_2225E167C(uint64_t a1, uint64_t a2)
{
  sub_2225E16B0(&v3, a1, a2);
  return v3;
}

_DWORD *sub_2225E16B4(_DWORD *result, _DWORD *a2, int *a3)
{
  int v3 = *a3;
  void *result = *a2;
  result[1] = v3;
  return result;
}

double sub_2225E16C4(void *a1, double *a2)
{
  double result = *a2;
  *a1 = *(void *)a2;
  return result;
}

BOOL sub_2225E16D0(uint64_t *a1, uint64_t *a2)
{
  if (!sub_2225E1744(a1, (uint64_t)a2) && !sub_2225E1744(a2, v4)) {
    return *a1 == *a2;
  }
  BOOL result = sub_2225E1744(a1, v4);
  if (result)
  {
    return sub_2225E1744(a2, v6);
  }
  return result;
}

BOOL sub_2225E1744(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  return !v2 || !sub_2225DF1DC(v2, a2);
}

void *sub_2225E1770(void *a1)
{
  uint64_t v2 = sub_2225D3A34(a1);
  sub_2225D3A34(v2 + 1);
  return a1;
}

uint64_t sub_2225E17A0(void *a1, uint64_t a2)
{
  unint64_t v3 = sub_2225C3D04((uint64_t)a1) - a2;

  return sub_2225CE76C(a1, 0, v3);
}

uint64_t sub_2225E17E4(void *a1, uint64_t a2)
{
  sub_2225CCC70(v6);
  sub_2225CCC70(v5);
  uint64_t result = sub_2225DF3DC((uint64_t)a1, 0, a2, v6[0], v6[1], v5[0], v5[1]);
  *a1 = &unk_26D4DB718;
  return result;
}

uint64_t sub_2225E1854(void *a1, uint64_t a2)
{
  sub_2225CCC70(v6);
  sub_2225CCC70(v5);
  uint64_t result = sub_2225DF3DC((uint64_t)a1, 2, a2, v6[0], v6[1], v5[0], v5[1]);
  *a1 = &unk_26D4DB778;
  a1[9] = 0;
  a1[10] = 0;
  return result;
}

uint64_t sub_2225E18C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2225CCC70(v10);
  sub_2225CCC70(v9);
  uint64_t result = sub_2225DF3DC((uint64_t)a1, 5, a2, v10[0], v10[1], v9[0], v9[1]);
  *a1 = &unk_26D4DB808;
  a1[9] = a3;
  a1[10] = a4;
  return result;
}

uint64_t sub_2225E194C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t result = sub_2225DF3DC(a1, 4, a2, a3, a4, a5, a6);
  *(void *)uint64_t result = &unk_26D4DB7D8;
  *(_DWORD *)(result + 72) = a7;
  *(_WORD *)(result + 76) = 1;
  *(unsigned char *)(result + 78) = 1;
  *(void *)(result + 80) = 0;
  return result;
}

uint64_t sub_2225E19B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t result = sub_2225DF3DC(a1, 3, a2, a3, a4, a5, a6);
  *(void *)uint64_t result = &unk_26D4DB7A8;
  *(_DWORD *)(result + 72) = a7;
  *(_WORD *)(result + 76) = 1;
  *(void *)(result + 80) = 0;
  return result;
}

uint64_t sub_2225E1A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)&long long v16 = a7;
  *((void *)&v16 + 1) = a8;
  uint64_t v9 = sub_2225DF3DC(a1, 1, a2, a3, a4, a5, a6);
  *(void *)uint64_t v9 = &unk_26D4DB748;
  *(_OWORD *)(v9 + 72) = v16;
  uint64_t v10 = sub_2225C3C70((uint64_t)&v16);
  uint64_t v11 = sub_2225D389C(v10);
  uint64_t v12 = sub_2225C3C78(&v16);
  uint64_t v13 = sub_2225D389C(v12);
  sub_2225C3D0C(&v15, v11, v13);
  *(_OWORD *)(a1 + 16) = v15;
  return a1;
}

uint64_t sub_2225E1AC8(void *a1, unint64_t a2)
{
  return sub_2225CE76C(a1, a2, 0xFFFFFFFFFFFFFFFFLL);
}

uint64_t sub_2225E1AD0(uint64_t result)
{
  if (*(unsigned char *)(result + 76))
  {
    uint64_t v4 = sub_2225E1B68(result);
    uint64_t v3 = sub_2225DF274();
    uint64_t result = sub_2225DE624(&v4, &v3);
    if (result)
    {
      do
      {
        uint64_t v1 = sub_2225E1BA0((uint64_t)&v4);
        (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
        sub_2225E1BAC(&v4, v2);
        uint64_t result = sub_2225DE624(&v4, &v3);
      }
      while ((result & 1) != 0);
    }
  }
  return result;
}

uint64_t sub_2225E1B68(uint64_t a1)
{
  *(unsigned char *)(a1 + 76) = 0;
  sub_2225C64B8(&v3, a1);
  sub_2225E1BAC(&v3, v1);
  return v3;
}

uint64_t sub_2225E1BA0(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 80);
}

uint64_t *sub_2225E1BAC(uint64_t *a1, uint64_t a2)
{
  if (!*(void *)(*a1 + 80)) {
    *a1 = 0;
  }
  return a1;
}

uint64_t sub_2225E1BE8(uint64_t result)
{
  if (*(unsigned char *)(result + 76))
  {
    uint64_t v4 = sub_2225E1C80(result);
    uint64_t v3 = sub_2225DF274();
    uint64_t result = sub_2225DE624(&v4, &v3);
    if (result)
    {
      do
      {
        uint64_t v1 = sub_2225E1BA0((uint64_t)&v4);
        (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
        sub_2225E1CB8(&v4, v2);
        uint64_t result = sub_2225DE624(&v4, &v3);
      }
      while ((result & 1) != 0);
    }
  }
  return result;
}

uint64_t sub_2225E1C80(uint64_t a1)
{
  *(unsigned char *)(a1 + 76) = 0;
  sub_2225C64B8(&v3, a1);
  sub_2225E1CB8(&v3, v1);
  return v3;
}

uint64_t *sub_2225E1CB8(uint64_t *a1, uint64_t a2)
{
  if (!*(void *)(*a1 + 80)) {
    *a1 = 0;
  }
  return a1;
}

void sub_2225E1CF4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2225E1D28(a2);
    j__free(v2);
  }
}

uint64_t sub_2225E1D2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225E1D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_2225E1DA0(a1, v3);
  return a1;
}

uint64_t sub_2225E1DA0(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_2225E1DA0(result, *a2);
    sub_2225E1DA0(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = j_nullsub_1(a2 + 4, v6);
    sub_2225E1E40(v5, v7);
    return sub_2225E1E48(v5, a2, 1);
  }
  return result;
}

uint64_t sub_2225E1E1C(uint64_t a1, uint64_t a2)
{
  return *(void *)sub_2225E1E5C(a1, a2);
}

uint64_t sub_2225E1E38(uint64_t a1, uint64_t a2)
{
  return j_nullsub_1(a1 + 8, a2);
}

uint64_t sub_2225E1E40(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a2, a2);
}

uint64_t sub_2225E1E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, a3 << 6, 8);
}

uint64_t sub_2225E1E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = j_nullsub_1(a1 + 8, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_2225E1E88(uint64_t a1, uint64_t a2)
{
  if (sub_2225CBAF8(a1, a2)) {
    return sub_2225CCF44(a1, v3) - 1;
  }
  else {
    return 22;
  }
}

uint64_t sub_2225E1EC4(std::string *a1, std::string::size_type a2, std::string::size_type a3, std::string::size_type a4, std::string::size_type a5, std::string::size_type a6, std::string::size_type a7)
{
  std::string::__grow_by(a1, a2, a3, a4, a5, a6, a7);
  uint64_t v11 = a4 - a6 + a7;
  sub_2225CBB88((uint64_t)a1, v11);

  return nullsub_1(a1, v11);
}

uint64_t sub_2225E1F28(uint64_t a1, uint64_t a2)
{
  if (sub_2225CBAF8(a1, a2))
  {
    return sub_2225CBB88(a1, a2);
  }
  else
  {
    return sub_2225CBBB0(a1, a2);
  }
}

uint64_t sub_2225E1F94(uint64_t a1)
{
  uint64_t v2 = sub_2225E1FC4();
  *(void *)(a1 + 176) = j_nullsub_1(v2, v3);
  return a1;
}

uint64_t sub_2225E1FC8(uint64_t a1)
{
  uint64_t v2 = sub_2225E1FF8();
  sub_2225E1FFC(v2 + 40);
  return a1;
}

uint64_t sub_2225E2000(uint64_t a1)
{
  return sub_2225CC380(a1, 4u);
}

void *sub_2225E2014(void *a1)
{
  return sub_2225C60A0(a1, (uint64_t)(a1 + 3), 96);
}

uint64_t sub_2225E2020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3;
  for (uint64_t i = a2; sub_2225DE624(&i, &v5); uint64_t i = sub_2225E2080(a1, i))
    ;
  return v5;
}

uint64_t sub_2225E2080(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v2 = sub_2225E20B0(a1, &v5);
  nullsub_1(v2, v3);
  return v5;
}

void *sub_2225E20B0(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a2);
  uint64_t v5 = (void *)sub_2225E2174((uint64_t)v4);
  uint64_t v6 = sub_2225CC180((uint64_t)v4);
  uint64_t v7 = v6;
  if (v4 == *(void **)(a1 + 176)) {
    *(void *)(a1 + 176) = v5;
  }
  else {
    sub_2225E2178(v6, (uint64_t)v5);
  }
  sub_2225C64B8(v5, v7);
  sub_2225C64B8(&v9, (uint64_t)v5);
  *a2 = v9;
  nullsub_1(a1 + 40, v4);
  sub_2225E2178((uint64_t)v4, 0);
  sub_2225C64B8(v4, 0);
  return v4;
}

void *sub_2225E217C(void *a1, void *a2, void *a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    while (!sub_2225E21D8(v3, a3))
    {
      v3 += 3;
      if (v3 == a2) {
        return a2;
      }
    }
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2225E21DC(uint64_t a1, uint64_t a2)
{
  sub_2225DC2FC(&v2, a2);
}

uint64_t sub_2225E2208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2225C3D04(a1);
  uint64_t v7 = sub_2225E2274(a3, v6, a2);
  uint64_t v8 = sub_2225C3D04(a1);
  nullsub_1(v7, v8);
  sub_2225C5B6C(a1, v7);
  return a2;
}

uint64_t sub_2225E2278()
{
  sub_2225E2294();
  return v0;
}

uint64_t sub_2225E229C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)j_j_nullsub_1(a3);
  uint64_t v9 = sub_2225E232C((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2225E232C(int a1, const void *a2, uint64_t a3, char *__dst)
{
  return sub_2225E233C(a2, a3, __dst);
}

uint64_t sub_2225E233C(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_2225E2394(__dst, a1, (a2 - (uint64_t)a1) >> 3);
  uint64_t v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

void *sub_2225E2394(void *__dst, const void *a2, uint64_t a3)
{
  if (a3) {
    memmove(__dst, a2, 8 * a3);
  }
  return __dst;
}

char *sub_2225E23CC(const void **a1)
{
  return sub_2225D343C(a1, a1 + 3, 0, 24);
}

uint64_t sub_2225E23E4()
{
  sub_2225E2400();
  return v0;
}

uint64_t sub_2225E2404(uint64_t a1, uint64_t a2, void *a3)
{
  int v5 = sub_2225E2478(a1, a2);
  uint64_t v7 = sub_2225E24A4(v5, v6, a3);
  uint64_t v9 = v8;
  uint64_t v12 = sub_2225E24A8(a1, v7);
  uint64_t v11 = sub_2225DC2F8((uint64_t)a3, v9);
  return sub_2225C5EEC((uint64_t)&v12, (uint64_t)&v11);
}

uint64_t sub_2225E2478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  return sub_2225C5EEC((uint64_t)&v4, (uint64_t)&v3);
}

uint64_t sub_2225E24AC(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_2225E2510(__dst, a1, 0xAAAAAAAAAAAAAAABLL * ((a2 - (uint64_t)a1) >> 3));
  int v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

void *sub_2225E2510(void *__dst, const void *a2, uint64_t a3)
{
  if (a3) {
    memmove(__dst, a2, 24 * a3 - 3);
  }
  return __dst;
}

uint64_t sub_2225E254C(uint64_t a1)
{
  return sub_2225C3D04(a1) - 4;
}

uint64_t sub_2225E2568(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1) - 4;

  return sub_2225C5B6C(a1, v2);
}

uint64_t sub_2225E25A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v8 = a2;
  int v5 = (void *)sub_2225C3C70((uint64_t)&v8);
  uint64_t v6 = sub_2225CC180((uint64_t)v5);
  sub_2225E2178((uint64_t)a3, (uint64_t)v5);
  sub_2225C64B8(a3, v6);
  if (v5 == *(void **)(a1 + 176)) {
    *(void *)(a1 + 176) = a3;
  }
  else {
    sub_2225E2178(v6, (uint64_t)a3);
  }
  sub_2225C64B8(v5, (uint64_t)a3);
  nullsub_1(a1 + 40, a3);
  sub_2225C64B8(&v9, (uint64_t)a3);
  return v9;
}

__n128 sub_2225E2650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E2688(a1, 1);
  uint64_t v4 = *(void *)(a2 + 32);
  __n128 result = *(__n128 *)(a2 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a2;
  *(__n128 *)(v3 + 16) = result;
  *(void *)(v3 + 32) = v4;
  return result;
}

uint64_t sub_2225E2688(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, 40 * a2, 8);
}

uint64_t sub_2225E2698(uint64_t a1)
{
  return sub_2225C3D04(a1) - 24;
}

uint64_t sub_2225E26B4(uint64_t a1)
{
  return a1;
}

void sub_2225E26E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2225E2750(v7, v4);
  }
}

void sub_2225E2750(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2225DC434(a2);
    j__free(v2);
  }
}

uint64_t sub_2225E2784(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225E27B0(uint64_t a1)
{
  return sub_2225D0B60(a1, 1u);
}

uint64_t *sub_2225E27B8(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_2225D1E3C(a2);
  return a1;
}

uint64_t sub_2225E27F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (void *)sub_2225E1E1C(a1, (uint64_t)a2);
  uint64_t v6 = sub_2225E1E5C(a1, v5);
  uint64_t v13 = sub_2225E28A8(a1, (uint64_t)a2, v4, v6);
  uint64_t v12 = sub_2225E2940(a1, v7);
  if (sub_2225E2924(&v13, &v12)
    && (uint64_t v9 = sub_2225D2650(a1, v8), v10 = sub_2225E29B8((uint64_t)&v13), !sub_2225E2970(v9, a2, v10)))
  {
    return v13;
  }
  else
  {
    return sub_2225E2940(a1, v8);
  }
}

uint64_t sub_2225E28A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v5 = a3;
    do
    {
      uint64_t v8 = sub_2225D2650(a1, a2);
      BOOL v9 = sub_2225E29D4(v8, (uint64_t)(v5 + 4), a2);
      uint64_t v10 = v5 + 1;
      if (!v9)
      {
        uint64_t v10 = v5;
        a4 = (uint64_t)v5;
      }
      uint64_t v5 = (void *)*v10;
    }
    while (*v10);
  }
  sub_2225C64B8(&v12, a4);
  return v12;
}

BOOL sub_2225E2924(void *a1, void *a2)
{
  return !sub_2225DE638(a1, a2);
}

uint64_t sub_2225E2940(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225E1E5C(a1, a2);
  sub_2225C64B8(&v4, v2);
  return v4;
}

BOOL sub_2225E2970(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = nullsub_1(a3, a2);

  return sub_2225E2A1C(a1, a2, v5);
}

uint64_t sub_2225E29B8(uint64_t a1)
{
  return sub_2225C3C70(a1) + 32;
}

BOOL sub_2225E29D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)nullsub_1(a2, a2);

  return sub_2225E2A1C(a1, v5, a3);
}

BOOL sub_2225E2A1C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_2225E2A2C(*a2, a2[1], *(const void **)a3, *(void *)(a3 + 8));
}

BOOL sub_2225E2A2C(uint64_t a1, uint64_t a2, const void *a3, unint64_t a4)
{
  v5[0] = a1;
  v5[1] = a2;
  return sub_2225E2A64((uint64_t)v5, a3, a4) == -1;
}

uint64_t sub_2225E2A64(uint64_t a1, const void *a2, unint64_t a3)
{
  uint64_t v6 = *(const void **)a1;
  size_t v7 = sub_2225CCCE4(*(void *)(a1 + 8), a3);
  int v8 = sub_2225C5A30(v6, a2, v7);
  if (v8) {
    return (v8 >> 31) | 1u;
  }
  unint64_t v10 = *(void *)(a1 + 8);
  BOOL v11 = v10 == a3;
  if (v10 < a3) {
    unsigned int v12 = -1;
  }
  else {
    unsigned int v12 = 1;
  }
  if (v11) {
    return 0;
  }
  else {
    return v12;
  }
}

uint64_t sub_2225E2AD4(uint64_t a1)
{
  uint64_t v1 = sub_2225C3C70(a1) + 32;

  return nullsub_1(v1, v2);
}

uint64_t sub_2225E2B00(const void **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2225D0CD8(a2, a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > v7 - sub_2225C3D04((uint64_t)a1))
  {
    uint64_t v8 = sub_2225C5664((uint64_t)a1);
    sub_2225C5B48(a1, v8 + v6);
  }
  BOOL v9 = (unsigned char *)sub_2225C3D04((uint64_t)a1);
  sub_2225E2BBC(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_2225E2BBC(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_2225E2BD8(a1, a2, a3);
  return v3;
}

uint64_t sub_2225E2BD8(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  for (uint64_t i = a3; sub_2225E2C70((uint64_t)&v6, (uint64_t)&v5); ++i)
  {
    if (sub_2225C5C08()) {
      break;
    }
    unsigned char *i = *(unsigned char *)sub_2225C3C70((uint64_t)&v6);
    sub_2225D0E0C(&v6);
  }
  sub_2225C5C10(&v7, &v6, &i);
  return v7;
}

BOOL sub_2225E2C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return v3 != sub_2225C3C70(a2);
}

uint64_t sub_2225E2CA8()
{
  sub_2225E2CC4();
  return v0;
}

uint64_t sub_2225E2CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = j_j_nullsub_1(a3);
  uint64_t v9 = sub_2225E2D5C((uint64_t)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2225E2D5C(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2225C695C(a2, a3, a4);
}

void *sub_2225E2D6C(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  sub_2225D3DAC(a1 + 2);
  sub_2225E2DA8(a1 + 9);
  a1[15] = 0;
  return a1;
}

uint64_t sub_2225E2DAC(uint64_t a1)
{
  return sub_2225D0B60(a1, 0);
}

uint64_t sub_2225E2DB4(uint64_t a1, uint64_t a2)
{
  j_nullsub_1(&v4, a2);
  return sub_2225E2DF0(a1, &v4);
}

uint64_t sub_2225E2DF4(uint64_t a1, uint64_t a2)
{
  sub_2225E2E58();
  int v8 = 0;
  sub_2225E2E5C(a1 + 16, &v8, a2);
  uint64_t v5 = sub_2225E1E5C(a1, v4);
  *(void *)nullsub_1(a1, v6) = v5;
  return a1;
}

uint64_t sub_2225E2E60()
{
  uint64_t v0 = sub_2225E1678();

  return j_j_nullsub_1(v0);
}

uint64_t sub_2225E2E88(void *a1, int *a2, uint64_t a3)
{
  uint64_t v4 = sub_2225E2EC0(a1, a2);

  return nullsub_1(v4, a3);
}

void *sub_2225E2EC0(void *result, int *a2)
{
  void *result = *a2;
  return result;
}

uint64_t sub_2225E2ECC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_2225E2FCC(a1, &v19, a2);
  uint64_t v10 = *v9;
  char v18 = 0;
  if (!v10)
  {
    uint64_t v11 = v9;
    sub_2225E308C(a1, a3, a4, a5, (uint64_t)v17);
    unsigned int v12 = v19;
    uint64_t v14 = (void *)sub_2225CBA80((uint64_t)v17, v13);
    sub_2225E3140(a1, (uint64_t)v12, v11, v14);
    uint64_t v10 = sub_2225CE10C((uint64_t)v17, v15);
    char v18 = 1;
    sub_2225E31CC(v17);
  }
  sub_2225C64B8(v17, v10);
  sub_2225D7B28(&v20, v17, &v18);
  return v20;
}

uint64_t sub_2225E2FA0(uint64_t a1)
{
  sub_2225E36D4(&v2, a1);
  return v2;
}

uint64_t *sub_2225E2FCC(uint64_t a1, uint64_t **a2, uint64_t *a3)
{
  uint64_t v6 = sub_2225E1E1C(a1, (uint64_t)a2);
  uint64_t v8 = sub_2225E31D0(a1, v7);
  if (v6)
  {
    uint64_t v10 = (uint64_t *)v8;
    do
    {
      while (1)
      {
        uint64_t v11 = (uint64_t *)v6;
        uint64_t v12 = sub_2225D2650(a1, v9);
        uint64_t v13 = v6 + 32;
        if (!sub_2225E2970(v12, a3, v13)) {
          break;
        }
        uint64_t v6 = *v11;
        uint64_t v10 = v11;
        if (!*v11) {
          goto LABEL_10;
        }
      }
      uint64_t v14 = sub_2225D2650(a1, v9);
      if (!sub_2225E29D4(v14, v13, (uint64_t)a3)) {
        break;
      }
      uint64_t v10 = v11 + 1;
      uint64_t v6 = v11[1];
    }
    while (v6);
  }
  else
  {
    uint64_t v11 = (uint64_t *)sub_2225E1E5C(a1, v9);
    uint64_t v10 = v11;
  }
LABEL_10:
  *a2 = v11;
  return v10;
}

uint64_t sub_2225E308C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = sub_2225E1E38(a1, a2);
  uint64_t v10 = sub_2225E31D4(v9, 1);
  sub_2225E31D8((uint64_t)&v18, v9, 0);
  uint64_t v11 = sub_2225E31DC(a5, v10);
  uint64_t v13 = sub_2225CBA80(v11, v12);
  uint64_t v15 = j_nullsub_1(v13 + 32, v14);
  sub_2225E31E0(v9, v15, a2, a3, a4);
  uint64_t result = sub_2225E31E4(a5, v16);
  *(unsigned char *)(result + 8) = 1;
  return result;
}

void *sub_2225E3140(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = (uint64_t)a4;
  if (**(void **)nullsub_1(a1, a2))
  {
    uint64_t v7 = **(void **)nullsub_1(a1, v6);
    *(void *)nullsub_1(a1, v8) = v7;
  }
  uint64_t v9 = (uint64_t *)sub_2225E1E5C(a1, v6);
  sub_2225E3338(*v9, *a3);
  uint64_t result = (void *)sub_2225D2650(a1, v10);
  ++*result;
  return result;
}

uint64_t sub_2225E31E8(uint64_t a1, unint64_t a2)
{
  if (sub_2225E3230() < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(a2 << 6, 8);
}

uint64_t sub_2225E3234()
{
  return 0x3FFFFFFFFFFFFFFLL;
}

uint64_t sub_2225E323C(uint64_t result, uint64_t a2, char a3)
{
  *(void *)uint64_t result = a2;
  *(unsigned char *)(result + 8) = a3;
  return result;
}

uint64_t sub_2225E3248(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2225E3270(a1, &v3);
}

void *sub_2225E3274(void *a1, void *a2, __n128 *a3)
{
  uint64_t v5 = sub_2225CE0B0(a1, a2);
  sub_2225E32AC((__n128 *)(v5 + 1), a3);
  return a1;
}

__n128 sub_2225E32AC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2225E32B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_2225E32C4(a2, *a4);
}

uint64_t sub_2225E32C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  return sub_2225E32F0(a1, &v4, &v3);
}

uint64_t sub_2225E32F4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)sub_2225CC180(a2);
  sub_2225CCC70((void *)(a1 + 16));
  return a1;
}

uint64_t sub_2225E3330(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_2225E3338(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(a2 + 24) = a2 == result;
  if (a2 != result)
  {
    uint64_t v2 = (uint64_t *)a2;
    uint64_t v3 = result;
    do
    {
      __n128 result = sub_2225C5B40((uint64_t)v2);
      if (*(unsigned char *)(result + 24)) {
        break;
      }
      uint64_t v4 = sub_2225C5B40((uint64_t)v2);
      BOOL v5 = sub_2225E34A0(v4);
      uint64_t v6 = sub_2225C5B40((uint64_t)v2);
      if (v5)
      {
        uint64_t v7 = *(void *)(sub_2225C5B40(v6) + 8);
        if (!v7 || (int v9 = *(unsigned __int8 *)(v7 + 24), v8 = (unsigned char *)(v7 + 24), v9))
        {
          if (!sub_2225E34A0((uint64_t)v2))
          {
            uint64_t v2 = (uint64_t *)sub_2225C5B40((uint64_t)v2);
            sub_2225E34B4((uint64_t)v2);
          }
          uint64_t v13 = sub_2225C5B40((uint64_t)v2);
          *(unsigned char *)(v13 + 24) = 1;
          uint64_t v14 = sub_2225C5B40(v13);
          *(unsigned char *)(v14 + 24) = 0;
          return sub_2225E3534((uint64_t *)v14);
        }
      }
      else
      {
        uint64_t v10 = **(void **)(v6 + 16);
        if (!v10 || (v11 = *(unsigned __int8 *)(v10 + 24), uint64_t v8 = (unsigned char *)(v10 + 24), v11))
        {
          if (sub_2225E34A0((uint64_t)v2))
          {
            uint64_t v2 = (uint64_t *)sub_2225C5B40((uint64_t)v2);
            sub_2225E3534(v2);
          }
          uint64_t v15 = sub_2225C5B40((uint64_t)v2);
          *(unsigned char *)(v15 + 24) = 1;
          uint64_t v16 = sub_2225C5B40(v15);
          *(unsigned char *)(v16 + 24) = 0;
          return sub_2225E34B4(v16);
        }
      }
      uint64_t v12 = sub_2225C5B40((uint64_t)v2);
      *(unsigned char *)(v12 + 24) = 1;
      __n128 result = sub_2225C5B40(v12);
      uint64_t v2 = (uint64_t *)result;
      *(unsigned char *)(result + 24) = result == v3;
      unsigned char *v8 = 1;
    }
    while (result != v3);
  }
  return result;
}

BOOL sub_2225E34A0(uint64_t a1)
{
  return **(void **)(a1 + 16) == a1;
}

uint64_t sub_2225E34B4(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 8);
  uint64_t v3 = *v2;
  *(void *)(a1 + 8) = *v2;
  if (v3) {
    sub_2225E35B4(v3, a1);
  }
  void v2[2] = *(void *)(a1 + 16);
  if (sub_2225E34A0(a1)) {
    uint64_t v4 = *(uint64_t ***)(a1 + 16);
  }
  else {
    uint64_t v4 = (uint64_t **)(sub_2225C5B40(a1) + 8);
  }
  *uint64_t v4 = v2;
  *uint64_t v2 = a1;

  return sub_2225E35B4(a1, (uint64_t)v2);
}

uint64_t sub_2225E3534(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 8);
  *a1 = v3;
  if (v3) {
    sub_2225E35B4(v3, (uint64_t)a1);
  }
  *(void *)(v2 + 16) = a1[2];
  if (sub_2225E34A0((uint64_t)a1)) {
    uint64_t v4 = (uint64_t *)a1[2];
  }
  else {
    uint64_t v4 = (uint64_t *)(sub_2225C5B40((uint64_t)a1) + 8);
  }
  *uint64_t v4 = v2;
  *(void *)(v2 + 8) = a1;

  return sub_2225E35B4((uint64_t)a1, v2);
}

uint64_t sub_2225E35B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  return result;
}

uint64_t sub_2225E35BC(uint64_t a1)
{
  return a1;
}

void *sub_2225E35E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  __n128 result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = sub_2225E3330(a1, v7);
    return (void *)sub_2225E3658(v8, v4);
  }
  return result;
}

uint64_t sub_2225E3658(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)result;
  if (*(unsigned char *)(result + 8))
  {
    uint64_t v4 = *(void *)result;
    uint64_t v5 = j_nullsub_1(a2 + 32, a2);
    __n128 result = sub_2225E1E40(v4, v5);
  }
  if (a2)
  {
    uint64_t v6 = *v3;
    return sub_2225E1E48(v6, a2, 1);
  }
  return result;
}

uint64_t sub_2225E36E0(uint64_t a1)
{
  sub_2225E370C(&v2, a1);
  return v2;
}

void *sub_2225E3714(void *result, uint64_t a2)
{
  void *result = &unk_26D4DB838;
  result[1] = a2;
  return result;
}

void *sub_2225E373C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v11 = sub_2225E3714(a1, a4);
  void *v11 = &unk_26D4DB910;
  uint64_t v12 = (uint64_t)(v11 + 2);
  sub_2225DC3B0(v11 + 2);
  uint64_t v13 = sub_2225C26A4(16);
  sub_2225DEF9C(v13, a2, a3, v12);
  sub_2225CDDC8((uint64_t)(a1 + 11), v13);
  sub_2225D8FA4((uint64_t)(a1 + 12));
  sub_2225CDDC0(a1 + 13);
  sub_2225E0EC4(a1 + 15);
  sub_2225D3A34(a1 + 32);
  sub_2225E3834(a1 + 33);
  a1[36] = 0;
  if (a5) {
    sub_2225E3838(v12, a5, a6);
  }
  uint64_t v15 = sub_2225CBA80((uint64_t)(a1 + 11), v14);
  a1[32] = sub_2225DF14C(v15, v16);
  return a1;
}

uint64_t sub_2225E3838(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(result + 56) = a2;
  *(void *)(result + 64) = a3;
  return result;
}

void *sub_2225E3844(void *a1)
{
  *a1 = &unk_26D4DB910;
  uint64_t v2 = a1 + 2;
  sub_2225E38B0(a1 + 33);
  sub_2225E1434(a1 + 15);
  sub_2225E38B4(a1 + 12);
  sub_2225E38B8(a1 + 11);
  sub_2225D35BC(v2);
  return a1;
}

void sub_2225E38C0(void *a1)
{
  uint64_t v1 = sub_2225E38BC(a1);

  j__free(v1);
}

uint64_t sub_2225E38E8(uint64_t a1)
{
  return *(void *)(a1 + 104);
}

uint64_t sub_2225E3900()
{
  return 0;
}

uint64_t sub_2225E3908(void *a1, uint64_t a2)
{
  uint64_t v3 = a1 + 32;
  sub_2225CBA80((uint64_t)(a1 + 11), a2);
  uint64_t v15 = sub_2225DF274();
  uint64_t result = sub_2225DF29C(v3, &v15);
  if (result)
  {
    uint64_t v5 = sub_2225C3C70((uint64_t)v3);
    uint64_t v7 = (uint64_t *)sub_2225CBA80(v5, v6);
    uint64_t v15 = sub_2225E100C(v7, v8);
    if (v15)
    {
      if (sub_2225E39D0((uint64_t)&v15, v9))
      {
        sub_2225DF364(v3, v10);
        return sub_2225E3908(a1);
      }
      else
      {
        uint64_t v13 = sub_2225E3A44((uint64_t)a1, v15);
        sub_2225E39D4((uint64_t)(a1 + 12), (uint64_t)v13);
        a1[36] = sub_2225CBA80((uint64_t)(a1 + 12), v14);
        return 1;
      }
    }
    else
    {
      uint64_t v11 = sub_2225CDDD4(22);
      uint64_t result = 0;
      a1[13] = v11;
      a1[14] = v12;
    }
  }
  return result;
}

void *sub_2225E39D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2225E5574(v8, v4);
  }
  return result;
}

void *sub_2225E3A44(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a2;
  sub_2225CF794(v42);
  uint64_t v4 = sub_2225E4B54(a2);
  if (v4)
  {
    uint64_t v5 = sub_2225DFEF8(v4, v42);
    uint64_t v7 = v6;
    if (!sub_2225CF1D0(v42))
    {
      unsigned int v8 = sub_2225C5664((uint64_t)v42);
      uint64_t v9 = a1 + 120;
      size_t v10 = v8;
      uint64_t v11 = (void *)sub_2225E4B90(v9, v8);
      uint64_t v12 = (const void *)sub_2225C5698((uint64_t)v42, 0);
      memcpy(v11, v12, v10);
      sub_2225C3D0C(&v38, v11, v10);
      uint64_t v5 = v38;
      uint64_t v7 = v39;
    }
    uint64_t v13 = (void *)sub_2225C26A4(32);
    sub_2225E4B98(v13, a2, v5, v7);
  }
  else
  {
    uint64_t v15 = sub_2225E4B9C(a2);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v13 = (void *)sub_2225C26A4(40);
      sub_2225E4BD8(v13, a2);
      uint64_t v38 = sub_2225E4BDC(v16);
      uint64_t v41 = sub_2225DF274();
      while (sub_2225DE624(&v38, &v41))
      {
        uint64_t v17 = sub_2225E1BA0((uint64_t)&v38);
        uint64_t v40 = 0;
        uint64_t v40 = sub_2225E3A44(a1, v17);
        if (sub_2225CDBBC((_DWORD *)(a1 + 104))) {
          break;
        }
        sub_2225E4BE0(v13 + 2, (uint64_t)&v40);
        sub_2225E1CB8(&v38, v18);
      }
    }
    else
    {
      uint64_t v19 = sub_2225E4C3C(a2);
      if (v19)
      {
        uint64_t v21 = v19;
        uint64_t v13 = (void *)sub_2225C26A4(120);
        sub_2225E4C78(v13, a2);
        uint64_t v41 = sub_2225E4C7C(v21);
        uint64_t v40 = sub_2225DF274();
        if (sub_2225DE624(&v41, &v40))
        {
          while (1)
          {
            uint64_t v22 = sub_2225E1BA0((uint64_t)&v41);
            uint64_t v24 = sub_2225E08C8(v22, v23);
            uint64_t v25 = sub_2225E4B54(v24);
            if (!v25) {
              break;
            }
            uint64_t v26 = v25;
            sub_2225C5D90(v42);
            uint64_t v27 = sub_2225DFEF8(v26, v42);
            uint64_t v29 = v28;
            if (!sub_2225CF1D0(v42))
            {
              size_t v31 = sub_2225C5664((uint64_t)v42);
              uint64_t v32 = (void *)sub_2225E4B90(a1 + 120, v31);
              uint64_t v33 = (const void *)sub_2225C5698((uint64_t)v42, 0);
              memcpy(v32, v33, v31);
              sub_2225C3D0C(&v38, v32, v31);
              uint64_t v27 = v38;
              uint64_t v29 = v39;
            }
            uint64_t v34 = sub_2225E099C(v22, v30);
            uint64_t v35 = sub_2225E3A44(a1, v34);
            if (!sub_2225CDBBC((_DWORD *)(a1 + 104)))
            {
              *(void *)sub_2225E4044((uint64_t)(v13 + 2), v27, v29) = v35;
              sub_2225E1BAC(&v41, v36);
              if (sub_2225DE624(&v41, &v40)) {
                continue;
              }
            }
            goto LABEL_5;
          }
          sub_2225CBDE8((uint64_t)&v38, "Map key must be a scalar");
          sub_2225E4B04(a1, v24, (uint64_t)&v38);
        }
      }
      else if (sub_2225E39D0((uint64_t)&v43, v20))
      {
        uint64_t v13 = (void *)sub_2225C26A4(16);
        sub_2225E4C80(v13, v43);
      }
      else
      {
        uint64_t v37 = v43;
        sub_2225CBDE8((uint64_t)&v38, "unknown node kind");
        sub_2225E4B04(a1, v37, (uint64_t)&v38);
        uint64_t v13 = 0;
      }
    }
  }
LABEL_5:
  sub_2225CA520(v42);
  return v13;
}

BOOL sub_2225E3D94(uint64_t a1, uint64_t a2, uint64_t a3, BOOL a4)
{
  v9[0] = a2;
  v9[1] = a3;
  sub_2225DF4B4(*(void *)(*(void *)(a1 + 288) + 8), (uint64_t)&v8);
  if (!sub_2225CBBF8((uint64_t)&v8, v5))
  {
    sub_2225CCBF8(v7, &v8);
    a4 = sub_2225C3CC8((uint64_t)v9, v7[0], (size_t)v7[1]);
  }
  std::string::~string(&v8);
  return a4;
}

uint64_t sub_2225E3E04(uint64_t a1)
{
  uint64_t result = sub_2225CDBBC((_DWORD *)(a1 + 104));
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2225E3E5C(*(void *)(a1 + 288));
    if (result)
    {
      uint64_t v3 = (void *)(result + 48);
      return sub_2225C5D90(v3);
    }
  }
  return result;
}

uint64_t sub_2225E3E5C(uint64_t result)
{
  uint64_t v1 = result;
  if (result)
  {
    if (sub_2225E55A4(&v1)) {
      return sub_2225E55A8(v1);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2225E3E9C(uint64_t a1, char *a2, int a3, uint64_t a4, unsigned char *a5, void *a6)
{
  uint64_t v25 = a2;
  *a5 = 0;
  BOOL v10 = sub_2225CDBBC((_DWORD *)(a1 + 104));
  uint64_t result = 0;
  if (!v10)
  {
    uint64_t v12 = *(void *)(a1 + 288);
    if (v12)
    {
      uint64_t v13 = sub_2225E4000(v12);
      if (v13)
      {
        uint64_t v14 = v13;
        sub_2225CC7B8(v13 + 48, &v25);
        sub_2225C3D00((int)v23, v25);
        uint64_t v15 = *(void *)sub_2225E4044(v14 + 16, v23[0], v23[1]);
        if (v15)
        {
          *a6 = *(void *)(a1 + 288);
          *(void *)(a1 + 288) = v15;
          return 1;
        }
        if (!a3)
        {
          uint64_t result = 0;
          *a5 = 1;
          return result;
        }
        uint64_t v18 = *(void *)(a1 + 288);
        sub_2225CBDE8((uint64_t)v21, "missing required key '");
        sub_2225CBDE8((uint64_t)v20, v25);
        sub_2225CF9F4(v22, v21, v20);
        sub_2225CBDE8((uint64_t)v19, "'");
        sub_2225CF9F4(v24, v22, v19);
      }
      else
      {
        uint64_t v18 = *(void *)(a1 + 288);
        sub_2225CBDE8((uint64_t)v24, "not a mapping");
      }
      sub_2225E403C(a1, v18, (uint64_t)v24);
    }
    else if (a3)
    {
      uint64_t v16 = sub_2225CDDD4(22);
      uint64_t result = 0;
      *(void *)(a1 + 104) = v16;
      *(void *)(a1 + 112) = v17;
      return result;
    }
    return 0;
  }
  return result;
}

uint64_t sub_2225E4000(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2225E55A4(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2225E403C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225E4B04(a1, *(void *)(a2 + 8), a3);
}

uint64_t sub_2225E4044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_2225E5634(a1, a2, a3);

  return sub_2225E563C(v3);
}

uint64_t sub_2225E406C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 288) = a2;
  return result;
}

uint64_t sub_2225E4074(uint64_t a1)
{
  uint64_t result = sub_2225CDBBC((_DWORD *)(a1 + 104));
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2225E3E5C(*(void *)(a1 + 288));
    if (result)
    {
      uint64_t v3 = result;
      uint64_t v4 = result + 16;
      uint64_t v17 = (void *)sub_2225E41A0(result + 16);
      uint64_t v16 = sub_2225E41D8(v4);
      uint64_t result = sub_2225DE624(&v17, &v16);
      if (result)
      {
        while (1)
        {
          uint64_t v5 = sub_2225E4210((uint64_t)&v17);
          uint64_t v6 = sub_2225E42A0((unsigned int *)v5);
          if (!sub_2225E421C(v3, v6, v7)) {
            break;
          }
          sub_2225E42EC(&v17);
          uint64_t result = sub_2225DE624(&v17, &v16);
          if ((result & 1) == 0) {
            return result;
          }
        }
        uint64_t v8 = *(void *)(v5 + 8);
        sub_2225CBDE8((uint64_t)v13, "unknown key '");
        v11[0] = sub_2225E42A0((unsigned int *)v5);
        v11[1] = v9;
        sub_2225CBDF0((uint64_t)v12, (uint64_t)v11);
        sub_2225CF9F4(v14, v13, v12);
        sub_2225CBDE8((uint64_t)v10, "'");
        sub_2225CF9F4(v15, v14, v10);
        return sub_2225E403C(a1, v8, (uint64_t)v15);
      }
    }
  }
  return result;
}

uint64_t sub_2225E41A0(uint64_t a1)
{
  sub_2225E579C(&v2, *(void *)a1, *(_DWORD *)(a1 + 8) == 0);
  return v2;
}

uint64_t sub_2225E41D8(uint64_t a1)
{
  sub_2225E579C(&v2, *(void *)a1 + 8 * *(unsigned int *)(a1 + 8), 1);
  return v2;
}

uint64_t sub_2225E4210(uint64_t a1)
{
  return **(void **)a1;
}

BOOL sub_2225E421C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[0] = a2;
  v11[1] = a3;
  uint64_t v3 = a1 + 48;
  uint64_t v4 = sub_2225C3C70(a1 + 48);
  uint64_t v5 = sub_2225C3D04(v3);
  if (v4 == v5) {
    return 0;
  }
  uint64_t v6 = v5;
  uint64_t v7 = v4 + 8;
  do
  {
    sub_2225C3D00((int)v10, *(char **)(v7 - 8));
    BOOL result = sub_2225C3CC8((uint64_t)v11, v10[0], (size_t)v10[1]);
    if (result) {
      break;
    }
    BOOL v9 = v7 == v6;
    v7 += 8;
  }
  while (!v9);
  return result;
}

uint64_t sub_2225E42A0(unsigned int *a1)
{
  uint64_t v2 = sub_2225CED2C((uint64_t)a1);
  unsigned int v3 = sub_2225C3B40(a1);
  sub_2225C3D0C(&v5, v2, v3);
  return v5;
}

void **sub_2225E42EC(void **a1)
{
  return a1;
}

uint64_t sub_2225E4320(uint64_t a1)
{
  uint64_t result = sub_2225E4348(*(void *)(a1 + 288));
  if (result) {
    return sub_2225D4970((void *)(result + 16));
  }
  return result;
}

uint64_t sub_2225E4348(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2225E5900(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2225E4388(uint64_t a1, unsigned int a2, void *a3)
{
  if (sub_2225CDBBC((_DWORD *)(a1 + 104))) {
    return 0;
  }
  uint64_t result = sub_2225E4348(*(void *)(a1 + 288));
  if (result)
  {
    *a3 = *(void *)(a1 + 288);
    *(void *)(a1 + 288) = *(void *)sub_2225C6BC0((void *)(result + 16), a2);
    return 1;
  }
  return result;
}

uint64_t sub_2225E43F8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 288) = a2;
  return result;
}

uint64_t sub_2225E4400(uint64_t a1)
{
  uint64_t result = sub_2225E4348(*(void *)(a1 + 288));
  if (result) {
    return sub_2225D4970((void *)(result + 16));
  }
  return result;
}

uint64_t sub_2225E4428(uint64_t a1, unsigned int a2, void *a3)
{
  if (sub_2225CDBBC((_DWORD *)(a1 + 104))) {
    return 0;
  }
  uint64_t result = sub_2225E4348(*(void *)(a1 + 288));
  if (result)
  {
    *a3 = *(void *)(a1 + 288);
    *(void *)(a1 + 288) = *(void *)sub_2225C6BC0((void *)(result + 16), a2);
    return 1;
  }
  return result;
}

uint64_t sub_2225E4498(uint64_t result, uint64_t a2)
{
  *(void *)(result + 288) = a2;
  return result;
}

uint64_t sub_2225E44A4(uint64_t result)
{
  *(unsigned char *)(result + 296) = 0;
  return result;
}

uint64_t sub_2225E44AC(uint64_t a1, char *a2)
{
  if (*(unsigned char *)(a1 + 296)) {
    return 0;
  }
  uint64_t result = sub_2225E4520(*(void *)(a1 + 288));
  if (result)
  {
    v7[0] = sub_2225DF0BC(result);
    v7[1] = v5;
    sub_2225C3D00((int)v6, a2);
    uint64_t result = sub_2225C3CC8((uint64_t)v7, v6[0], (size_t)v6[1]);
    if (result)
    {
      uint64_t result = 1;
      *(unsigned char *)(a1 + 296) = 1;
    }
  }
  return result;
}

uint64_t sub_2225E4520(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2225E5968(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2225E455C(uint64_t result)
{
  if (!*(unsigned char *)(result + 296))
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 288);
    sub_2225CBDE8((uint64_t)v3, "unknown enumerated scalar");
    return sub_2225E403C(v1, v2, (uint64_t)v3);
  }
  return result;
}

uint64_t sub_2225E45B0(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = (uint64_t *)(a1 + 264);
  sub_2225E4670(a1 + 264);
  uint64_t v5 = sub_2225E4348(*(void *)(a1 + 288));
  if (v5)
  {
    uint64_t v6 = v5;
    sub_2225E4850(v4, (uint64_t)v10);
    sub_2225E4858((uint64_t)v13, (uint64_t)v10);
    unint64_t v7 = sub_2225D4970((void *)(v6 + 16));
    unsigned __int8 v12 = 0;
    sub_2225E4678(v4, v13[0], v13[1], v7, &v12, (uint64_t)v11);
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 288);
    sub_2225CBDE8((uint64_t)v10, "expected sequence of bit values");
    sub_2225E403C(a1, v8, (uint64_t)v10);
  }
  *a2 = 1;
  return 1;
}

uint64_t sub_2225E4670(uint64_t result)
{
  *(void *)(result + 8) = 0;
  return result;
}

void *sub_2225E4678@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X8>)
{
  j_nullsub_1(a6, a2);
  unint64_t v13 = sub_2225E59FC((uint64_t)a1, v12);
  if (v13 >= a4 && sub_2225C3D04((uint64_t)a1) <= v13 - a4)
  {
    sub_2225E5A28(a1, (uint64_t)v31);
    sub_2225E4858((uint64_t)&v28, (uint64_t)v31);
    a1[1] += a4;
    uint64_t v22 = v28;
    uint64_t v23 = v29;
    sub_2225E5A28(a1, (uint64_t)v30);
    sub_2225E5A30(a2, a3, v22, v23, (uint64_t)v30, (uint64_t)v31);
    sub_2225E5AD8(a1, a2, a3, (uint64_t)v31);
    sub_2225E5B38(a6, (uint64_t)v31);
  }
  else
  {
    sub_2225E5B4C((uint64_t)a1, v14);
    sub_2225E5B78(&v28);
    unint64_t v15 = sub_2225E5C34((uint64_t)a1, a1[1] + a4);
    sub_2225E5B7C((uint64_t *)&v28, v15);
    uint64_t v29 = a1[1] + a4;
    uint64_t v16 = (unint64_t *)sub_2225E5D60(a1);
    uint64_t v18 = v17;
    sub_2225E4850(&v28, (uint64_t)v27);
    sub_2225E5CB8(v16, v18, a2, a3, (uint64_t)v27, (uint64_t)v31);
    sub_2225E5B38(a6, (uint64_t)v31);
    uint64_t v19 = (void *)sub_2225E5D68(a1);
    uint64_t v21 = v20;
    sub_2225E5A28(&v28, (uint64_t)v26);
    sub_2225E5A30(a2, a3, v19, v21, (uint64_t)v26, (uint64_t)v31);
    sub_2225E5D70(a1, (uint64_t *)&v28);
    sub_2225E38B0(&v28);
  }
  sub_2225E4858((uint64_t)v25, a6);
  return sub_2225E5DF8(v25, a4, *a5);
}

uint64_t sub_2225E4850@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2225E59D0(a1, 0, a2);
}

uint64_t sub_2225E485C(uint64_t a1, char *a2)
{
  if (sub_2225CDBBC((_DWORD *)(a1 + 104))) {
    return 0;
  }
  uint64_t v4 = sub_2225E4348(*(void *)(a1 + 288));
  if (!v4)
  {
    uint64_t v11 = *(void *)(a1 + 288);
    sub_2225CBDE8((uint64_t)&v15, "expected sequence of bit values");
    sub_2225E403C(a1, v11, (uint64_t)&v15);
    return 0;
  }
  uint64_t v5 = v4 + 16;
  uint64_t v19 = sub_2225D2E88((uint64_t *)(v4 + 16));
  uint64_t v18 = sub_2225D24C8(v5);
  if (!sub_2225D0DF0((uint64_t)&v19, (uint64_t)&v18)) {
    return 0;
  }
  for (unsigned int i = 0; ; ++i)
  {
    unint64_t v7 = (uint64_t *)sub_2225C3C70((uint64_t)&v19);
    uint64_t v8 = sub_2225E4520(*v7);
    if (!v8)
    {
      uint64_t v10 = *(void *)(a1 + 288);
      sub_2225CBDE8((uint64_t)&v15, "unexpected scalar in sequence of bit values");
      sub_2225E403C(a1, v10, (uint64_t)&v15);
      goto LABEL_9;
    }
    uint64_t v15 = sub_2225DF0BC(v8);
    uint64_t v16 = v9;
    sub_2225C3D00((int)v17, a2);
    if (sub_2225C3CC8((uint64_t)&v15, v17[0], (size_t)v17[1])) {
      break;
    }
LABEL_9:
    sub_2225E49B8(&v19);
    if (!sub_2225D0DF0((uint64_t)&v19, (uint64_t)&v18)) {
      return 0;
    }
  }
  uint64_t v15 = sub_2225E49B4((void *)(a1 + 264), i);
  uint64_t v16 = v13;
  uint64_t v14 = 1;
  sub_2225D9110((uint64_t)&v15, 1);
  return v14;
}

void *sub_2225E49B8(void *result)
{
  *result += 8;
  return result;
}

unint64_t sub_2225E49C8(uint64_t a1)
{
  unint64_t result = sub_2225CDBBC((_DWORD *)(a1 + 104));
  if ((result & 1) == 0)
  {
    unint64_t result = sub_2225E4348(*(void *)(a1 + 288));
    if (result)
    {
      unsigned int v3 = (void *)(result + 16);
      unint64_t result = sub_2225D4970((void *)(result + 16));
      if (result)
      {
        unint64_t v4 = 0;
        unsigned int v5 = 1;
        while (1)
        {
          v9[0] = sub_2225E49B4((void *)(a1 + 264), v4);
          v9[1] = v6;
          if (!sub_2225D9178((uint64_t)v9)) {
            break;
          }
          unint64_t v4 = v5;
          unint64_t result = sub_2225D4970(v3);
          if (result <= v5++) {
            return result;
          }
        }
        uint64_t v8 = *(void *)sub_2225C6BC0(v3, v4);
        sub_2225CBDE8((uint64_t)v9, "unknown bit value");
        return sub_2225E403C(a1, v8, (uint64_t)v9);
      }
    }
  }
  return result;
}

uint64_t sub_2225E4A9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_2225E4520(*(void *)(a1 + 288));
  if (v4)
  {
    uint64_t result = sub_2225DF0BC(v4);
    *a2 = result;
    a2[1] = v6;
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 288);
    sub_2225CBDE8((uint64_t)v8, "unexpected scalar");
    return sub_2225E403C(a1, v7, (uint64_t)v8);
  }
  return result;
}

uint64_t sub_2225E4B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2225CBA80(a1 + 88, a2);
  sub_2225DEFF0(v6, a2, a3);
  uint64_t result = sub_2225CDDD4(22);
  *(void *)(a1 + 104) = result;
  *(void *)(a1 + 112) = v8;
  return result;
}

uint64_t sub_2225E4B54(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2225E723C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2225E4B90(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, a2, 1);
}

uint64_t sub_2225E4B9C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2225E727C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2225E4BE0(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_2225E7330(a1, a2);
  }
  else
  {
    sub_2225E72BC((uint64_t)a1, a2);
    uint64_t result = v4 + 8;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2225E4C3C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2225E78EC(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2225E4C84(uint64_t a1, uint64_t a2)
{
  return sub_2225E403C(a1, *(void *)(a1 + 288), a2);
}

uint64_t sub_2225E4C90()
{
  return 0;
}

uint64_t sub_2225E4C98(void *a1)
{
  *a1 = &unk_26D4DB9E8;
  uint64_t v2 = (uint64_t)(a1 + 2);
  uint64_t v7 = (void *)sub_2225E41A0((uint64_t)(a1 + 2));
  uint64_t v6 = sub_2225E41D8(v2);
  while (sub_2225DE624(&v7, &v6))
  {
    uint64_t v3 = *(void *)(sub_2225E4210((uint64_t)&v7) + 8);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
    sub_2225E42EC(&v7);
  }
  sub_2225C56C4(a1 + 6);
  sub_2225E4D6C(v2);
  return nullsub_1(a1, v4);
}

void sub_2225E4D74()
{
  uint64_t v0 = (void *)sub_2225E4D70();

  j__free(v0);
}

uint64_t sub_2225E4D9C(void *a1)
{
  *a1 = &unk_26D4DBA10;
  uint64_t v2 = (uint64_t)(a1 + 2);
  uint64_t v7 = sub_2225D2E88(a1 + 2);
  uint64_t v6 = sub_2225D24C8(v2);
  while (sub_2225D0DF0((uint64_t)&v7, (uint64_t)&v6))
  {
    uint64_t v3 = *(void *)sub_2225C3C70((uint64_t)&v7);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
    sub_2225E49B8(&v7);
  }
  sub_2225E4E68(v2);
  return nullsub_1(a1, v4);
}

void sub_2225E4E70()
{
  uint64_t v0 = (void *)sub_2225E4E6C();

  j__free(v0);
}

void **sub_2225E4E98(uint64_t a1, uint64_t a2, void **a3)
{
  return sub_2225D47E4(a3, a1);
}

uint64_t sub_2225E4EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[0] = a1;
  v7[1] = a2;
  sub_2225CACE8(v7, (uint64_t)&v6);
  sub_2225CCDE4(a4, (uint64_t)&v6);
  std::string::~string(&v6);
  sub_2225CCC70(&v8);
  return v8;
}

void **sub_2225E4EFC(unsigned int *a1, uint64_t a2, void **a3)
{
  return sub_2225CA560(a3, *a1);
}

uint64_t sub_2225E4F08(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  unint64_t v7 = 0;
  if (sub_2225D8D24(a1, a2, 0, &v7))
  {
    unsigned int v5 = "invalid number";
  }
  else
  {
    if (!HIDWORD(v7))
    {
      *a4 = v7;
      sub_2225CCC70(&v8);
      return v8;
    }
    unsigned int v5 = "out of range number";
  }
  sub_2225C3D00((int)&v8, v5);
  return v8;
}

uint64_t sub_2225E4F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225E792C(a3, a1, a2);
}

void sub_2225E4F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)j_nullsub_1(a1, a2);

  j__free(v2);
}

void sub_2225E4FB8(uint64_t a1)
{
  uint64_t v1 = (void *)j_j_nullsub_1(a1);

  j__free(v1);
}

void *sub_2225E4FE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_2225E5028(a1, a2);
  void *result = &unk_26D4DBA88;
  result[2] = a3;
  result[3] = a4;
  return result;
}

void *sub_2225E5028(void *result, uint64_t a2)
{
  void *result = &unk_26D4DBA38;
  result[1] = a2;
  return result;
}

void *sub_2225E5048(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5028(a1, a2);
  *uint64_t v3 = &unk_26D4DBA10;
  sub_2225D250C(v3 + 2);
  return a1;
}

void *sub_2225E5090(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5028(a1, a2);
  *uint64_t v3 = &unk_26D4DB9E8;
  uint64_t v4 = v3 + 6;
  sub_2225E50E8(v3 + 2);
  sub_2225E50EC(v4);
  return a1;
}

uint64_t sub_2225E50F0(uint64_t a1)
{
  return sub_2225E50F8(a1, 16);
}

uint64_t sub_2225E50F8(uint64_t result, int a2)
{
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 20) = a2;
  return result;
}

uint64_t sub_2225E5104(uint64_t a1)
{
  return sub_2225D5BA8(a1, 6u);
}

void *sub_2225E510C(void *a1, uint64_t a2)
{
  uint64_t result = sub_2225E5028(a1, a2);
  void *result = &unk_26D4DBA60;
  return result;
}

uint64_t sub_2225E5140(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        unsigned int v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_2225E51D8(v5, a1 + 24);
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  return a1;
}

BOOL sub_2225E51C8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 12) == 0;
}

void sub_2225E51D8(unsigned int *a1, int a2)
{
  sub_2225C3B40(a1);

  sub_2225E1574(a2, a1);
}

uint64_t sub_2225E521C(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2225E525C(&v3);
  return a1;
}

uint64_t *sub_2225E525C(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2225D5670(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    std::string v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2225D567C(v6, v8);
    return (uint64_t *)sub_2225E52D4(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2225E52D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 8 * a3, 8);
}

void *sub_2225E52E8(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  int v4 = 0;
  sub_2225E532C(a1 + 2, &v4, &v3);
  return a1;
}

uint64_t sub_2225E5330(void *a1, int *a2)
{
  uint64_t v2 = sub_2225E2EC0(a1, a2);

  return j_j_nullsub_1(v2);
}

uint64_t sub_2225E5358(uint64_t a1)
{
  return a1;
}

void sub_2225E5384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2225E53F4(v7, v4);
  }
}

void sub_2225E53F4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2225DEFE4(a2);
    j__free(v2);
  }
}

uint64_t sub_2225E5428(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225E5454(uint64_t a1)
{
  sub_2225C64B8(&v4, a1);
  sub_2225E5494(&v4, v2);
  return a1;
}

void *sub_2225E5494(uint64_t *a1, uint64_t a2)
{
  uint64_t result = (void *)*a1;
  if (*result)
  {
    uint64_t v4 = sub_2225D2650((uint64_t)result, a2);
    uint64_t v5 = *a1;
    uint64_t v6 = *(void *)*a1;
    uint64_t v8 = *(void *)sub_2225D2650(v5, v7);
    return (void *)sub_2225E52D4(v4, v6, v8);
  }
  return result;
}

uint64_t sub_2225E54FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2225E5528(&v3);
}

uint64_t sub_2225E5528(void *a1)
{
  return sub_2225E554C(*a1);
}

uint64_t sub_2225E5530(uint64_t a1, uint64_t a2)
{
  return *(void *)nullsub_1(a1, a2);
}

BOOL sub_2225E5554(uint64_t a1)
{
  return sub_2225DF8D0(a1) == 0;
}

uint64_t sub_2225E5574(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  }
  return result;
}

uint64_t sub_2225E55A8(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_2225C3C70((uint64_t)&v2);
}

uint64_t sub_2225E55D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2225E55FC(&v3);
}

uint64_t sub_2225E55FC(void *a1)
{
  return sub_2225E5604(*a1);
}

BOOL sub_2225E560C(uint64_t a1)
{
  return sub_2225E5614(*(void *)(a1 + 8));
}

BOOL sub_2225E5614(uint64_t a1)
{
  return sub_2225DF8D0(a1) == 3;
}

uint64_t sub_2225E5634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225E5644(a1, a2, a3, 0);
}

uint64_t sub_2225E563C(uint64_t a1)
{
  return a1 + 8;
}

uint64_t sub_2225E5644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[0] = a2;
  v10[1] = a3;
  uint64_t v9 = a4;
  sub_2225E578C((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_2225E569C(a1, v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_2225E569C(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *a2, a2[1]);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_2225E57A0(*a2, a2[1], (int)a1 + 24, a2[2]);
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_2225E578C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225E58E8(a3, a1, a2);
}

void *sub_2225E57A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  v12[0] = a1;
  v12[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v12);
  sub_2225E58B4();
  uint64_t v7 = sub_2225CC68C(a3, (v6 + 17));
  uint64_t v8 = sub_2225E58BC(v7, v6, a4);
  uint64_t v9 = (void *)sub_2225CED2C(v8);
  char v10 = (const void *)sub_2225C3C70((uint64_t)v12);
  memcpy(v9, v10, v6);
  *((unsigned char *)v9 + v6) = 0;
  return v7;
}

void **sub_2225E5838(void **a1, void *a2, char a3)
{
  *a1 = a2;
  if ((a3 & 1) == 0) {
    sub_2225E586C(a1);
  }
  return a1;
}

uint64_t sub_2225E586C(void **a1)
{
  for (unsigned int i = *a1; ; *a1 = i)
  {
    uint64_t v3 = *i;
    if (!*i) {
      goto LABEL_5;
    }
    uint64_t result = sub_2225CAE20();
    if (v3 != result) {
      break;
    }
    unsigned int i = *a1;
LABEL_5:
    ++i;
  }
  return result;
}

uint64_t sub_2225E58B4()
{
  return 8;
}

_DWORD *sub_2225E58C0(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t result = sub_2225D0A60(a1, a2);
  *((void *)result + 1) = a3;
  return result;
}

__n128 sub_2225E58EC(__n128 *a1, __n128 *a2, unint64_t *a3)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u64[0] = *a3;
  return result;
}

uint64_t sub_2225E5904(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2225E5930(&v3);
}

uint64_t sub_2225E5930(void *a1)
{
  return sub_2225E5938(*a1);
}

BOOL sub_2225E5940(uint64_t a1)
{
  return sub_2225E5948(*(void *)(a1 + 8));
}

BOOL sub_2225E5948(uint64_t a1)
{
  return sub_2225DF8D0(a1) == 4;
}

uint64_t sub_2225E596C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2225E5998(&v3);
}

uint64_t sub_2225E5998(void *a1)
{
  return sub_2225E59A0(*a1);
}

BOOL sub_2225E59A8(uint64_t a1)
{
  return sub_2225E59B0(*(void *)(a1 + 8));
}

BOOL sub_2225E59B0(uint64_t a1)
{
  return sub_2225DF8D0(a1) == 1;
}

uint64_t sub_2225E59D0@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225E59EC(a3, *a1 + 8 * (a2 >> 6), a2 & 0x3F);
}

uint64_t sub_2225E59F0(uint64_t result, uint64_t a2, int a3)
{
  *(void *)__n128 result = a2;
  *(_DWORD *)(result + 8) = a3;
  return result;
}

uint64_t sub_2225E59FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)sub_2225D2650(a1, a2);

  return sub_2225E5E58(v2);
}

uint64_t sub_2225E5A28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2225E59D0(a1, a1[1], a2);
}

uint64_t sub_2225E5A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  if (*(_DWORD *)(a5 + 8) == a4)
  {
    sub_2225E4858((uint64_t)v13, a5);
    return sub_2225E5E60(a1, a2, a3, a4, (uint64_t)v13, a6);
  }
  else
  {
    sub_2225E4858((uint64_t)v12, a5);
    return sub_2225E5FE8(a1, a2, a3, a4, (uint64_t)v12, a6);
  }
}

uint64_t sub_2225E5AD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v11[0] = a2;
  v11[1] = a3;
  sub_2225E4850(a1, (uint64_t)v10);
  v9[0] = sub_2225E5D60(a1);
  v9[1] = v6;
  uint64_t v7 = sub_2225E62A4((uint64_t)v11, (uint64_t)v9);
  return sub_2225E6344((uint64_t)v10, v7, a4);
}

uint64_t sub_2225E5B38(uint64_t result, uint64_t a2)
{
  *(void *)__n128 result = *(void *)a2;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a2 + 8);
  return result;
}

uint64_t sub_2225E5B4C(uint64_t a1, uint64_t a2)
{
  sub_2225D2650(a1, a2);
  return j_j_nullsub_1(&v3);
}

unint64_t sub_2225E5B7C(uint64_t *a1, unint64_t a2)
{
  unint64_t result = sub_2225E59FC((uint64_t)a1, a2);
  if (result < a2)
  {
    if (sub_2225E6418((uint64_t)a1, v5) < a2) {
      sub_2225D2A34();
    }
    sub_2225E5B4C((uint64_t)a1, v6);
    sub_2225E5B78(v10);
    sub_2225E6470(v10, a2);
    sub_2225E4850(a1, (uint64_t)v9);
    sub_2225E5A28(a1, (uint64_t)v8);
    uint64_t v7 = sub_2225C3D04((uint64_t)a1);
    sub_2225E64E4(v10, (uint64_t)v9, (uint64_t)v8, v7);
    sub_2225E5D70(a1, v10);
    return sub_2225E38B0(v10);
  }
  return result;
}

unint64_t sub_2225E5C34(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = sub_2225E6418(a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_2225E59FC(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v10 = 2 * v7;
    unint64_t v9 = sub_2225E6B3C(a2);
    return *(void *)sub_2225CBA14(&v10, &v9);
  }
  return v6;
}

uint64_t sub_2225E5CB8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  if (*(_DWORD *)(a5 + 8) == a2)
  {
    sub_2225E4858((uint64_t)v13, a5);
    return sub_2225E6B48(a1, a2, a3, a4, (uint64_t)v13, a6);
  }
  else
  {
    sub_2225E4858((uint64_t)v12, a5);
    return sub_2225E6CDC(a1, a2, a3, a4, (uint64_t)v12, a6);
  }
}

uint64_t sub_2225E5D60(void *a1)
{
  return sub_2225E6F80(a1, 0);
}

uint64_t sub_2225E5D68(void *a1)
{
  return sub_2225E6F80(a1, a1[1]);
}

uint64_t sub_2225E5D70(uint64_t *a1, uint64_t *a2)
{
  sub_2225C6448(a1, a2);
  sub_2225C6448(a1 + 1, a2 + 1);
  uint64_t v5 = (uint64_t *)sub_2225D2650((uint64_t)a1, v4);
  unint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a2, v6);
  sub_2225C6448(v5, v7);
  uint64_t v9 = sub_2225D2650((uint64_t)a1, v8);
  uint64_t v11 = sub_2225D2650((uint64_t)a2, v10);

  return nullsub_1(v9, v11);
}

void *sub_2225E5DF8(void *result, unint64_t a2, int a3)
{
  if (a2)
  {
    if (a3)
    {
      sub_2225E4858((uint64_t)v5, (uint64_t)result);
      return sub_2225E6FBC((uint64_t)v5, a2);
    }
    else
    {
      sub_2225E4858((uint64_t)v4, (uint64_t)result);
      return sub_2225E70AC((uint64_t)v4, a2);
    }
  }
  return result;
}

uint64_t sub_2225E5E58(uint64_t a1)
{
  return a1 << 6;
}

uint64_t sub_2225E5E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v8 = sub_2225E62A4((uint64_t)&v26, (uint64_t)v28);
  uint64_t v25 = v8;
  if (v8 >= 1)
  {
    if (v27)
    {
      uint64_t v24 = v27;
      uint64_t v10 = (uint64_t *)sub_2225E62C4(&v24, &v25);
      uint64_t v11 = *v10;
      v25 -= *v10;
      unint64_t v12 = (-1 << (v27 - v11)) & (0xFFFFFFFFFFFFFFFFLL >> -(char)v27);
      uint64_t v13 = v26;
      uint64_t v14 = *(void **)a5;
      **(void **)a5 = **(void **)a5 & ~v12 | v12 & *v26;
      *(_DWORD *)(a5 + 8) = (*(_DWORD *)(a5 + 8) - (_BYTE)v11) & 0x3F;
      uint64_t v8 = v25;
    }
    else
    {
      uint64_t v14 = *(void **)a5;
      uint64_t v13 = v26;
    }
    if (v8 >= 0) {
      uint64_t v15 = v8;
    }
    else {
      uint64_t v15 = v8 + 63;
    }
    *(void *)a5 = &v14[-(v15 >> 6)];
    uint64_t v26 = &v13[-(v15 >> 6)];
    nullsub_1(v26, v9);
    nullsub_1(*(void *)a5, v16);
    sub_2225E62C8();
    uint64_t v17 = v25 - (v15 & 0xFFFFFFFFFFFFFFC0);
    uint64_t v25 = v17;
    if (v17 >= 1)
    {
      uint64_t v18 = -1 << -(char)v17;
      uint64_t v19 = *--v26;
      uint64_t v20 = v19 & v18;
      uint64_t v21 = (uint64_t *)(*(void *)a5 - 8);
      uint64_t v22 = *v21;
      *(void *)a5 = v21;
      uint64_t *v21 = v22 & ~v18 | v20;
      *(_DWORD *)(a5 + 8) = -(int)v25 & 0x3F;
    }
  }
  return sub_2225E4858(a6, a5);
}

uint64_t sub_2225E5FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v48[0] = a1;
  v48[1] = a2;
  int v46 = a3;
  uint64_t v47 = a4;
  uint64_t v8 = sub_2225E62A4((uint64_t)&v46, (uint64_t)v48);
  uint64_t v45 = v8;
  if (v8 >= 1)
  {
    if (v47)
    {
      uint64_t v44 = v47;
      uint64_t v9 = (uint64_t *)sub_2225E62C4(&v44, &v45);
      uint64_t v10 = v45 - *v9;
      uint64_t v44 = *v9;
      uint64_t v45 = v10;
      unint64_t v11 = (0xFFFFFFFFFFFFFFFFLL >> -(char)v47) & *v46 & (-1 << (v47 - v44));
      unsigned int v12 = *(_DWORD *)(a5 + 8);
      uint64_t v43 = v12;
      uint64_t v13 = *(void *)sub_2225E62C4(&v44, &v43);
      if (v13)
      {
        unsigned int v14 = *(_DWORD *)(a5 + 8);
        unint64_t v15 = v11 << (v14 - v47);
        if (v14 <= v47) {
          unint64_t v15 = v11 >> (v47 - v14);
        }
        **(void **)a5 = v15 | **(void **)a5 & ~((-1 << (v14 - v13)) & (0xFFFFFFFFFFFFFFFFLL >> -(char)v12));
        *(_DWORD *)(a5 + 8) = ((_BYTE)v14 - (_BYTE)v13) & 0x3F;
        uint64_t v16 = v44 - v13;
        v44 -= v13;
      }
      else
      {
        uint64_t v16 = v44;
      }
      if (v16 >= 1)
      {
        uint64_t v17 = (uint64_t *)(*(void *)a5 - 8);
        uint64_t v18 = *v17;
        *(void *)a5 = v17;
        int v19 = -(int)v16;
        char v20 = v19 & 0x3F;
        *(_DWORD *)(a5 + 8) = v19 & 0x3F;
        uint64_t v21 = v18 & ~(-1 << v19);
        *uint64_t v17 = v21;
        LOBYTE(v18) = v47 - v44;
        LODWORD(v47) = v47 - v44 - v13;
        *uint64_t v17 = (v11 << (v20 - (v18 - v13))) | v21;
      }
      uint64_t v8 = v45;
    }
    uint64_t v22 = *(unsigned int *)(a5 + 8);
    unint64_t v23 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v22;
    if (v8 >= 64)
    {
      uint64_t v24 = v46;
      uint64_t v25 = *(unint64_t **)a5;
      do
      {
        unint64_t v27 = *--v24;
        unint64_t v26 = v27;
        *uint64_t v25 = *v25 & ~v23 | (v27 >> (64 - v22));
        uint64_t v28 = *--v25;
        *uint64_t v25 = v28 & v23 | (v26 << v22);
        uint64_t v29 = v45;
        uint64_t v8 = v45 - 64;
        v45 -= 64;
      }
      while (v29 > 127);
      int v46 = v24;
      *(void *)a5 = v25;
    }
    if (v8 >= 1)
    {
      uint64_t v30 = *--v46;
      unint64_t v31 = v30 & (-1 << -(char)v8);
      uint64_t v44 = v22;
      uint64_t v32 = (uint64_t *)sub_2225E62C4(&v45, &v44);
      uint64_t v33 = *v32;
      int v34 = *(_DWORD *)(a5 + 8);
      uint64_t v35 = *(unint64_t **)a5;
      **(void **)a5 = **(void **)a5 & ~((-1 << (v34 - *v32)) & v23) | (v31 >> -(char)v34);
      *(_DWORD *)(a5 + 8) = ((_BYTE)v34 - (_BYTE)v33) & 0x3F;
      uint64_t v36 = v45 - v33;
      uint64_t v45 = v36;
      if (v36 >= 1)
      {
        uint64_t v38 = *(v35 - 1);
        uint64_t v37 = v35 - 1;
        *(void *)a5 = v37;
        int v39 = -(int)v36;
        char v40 = v39 & 0x3F;
        *(_DWORD *)(a5 + 8) = v39 & 0x3F;
        uint64_t v41 = v38 & ~(-1 << v39);
        *uint64_t v37 = v41;
        *uint64_t v37 = (v31 << (v33 + v45 + v40)) | v41;
      }
    }
  }
  return sub_2225E4858(a6, a5);
}

uint64_t sub_2225E62A4(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a1 + 8) + 8 * (*(void *)a1 - *(void *)a2) - *(unsigned int *)(a2 + 8);
}

uint64_t sub_2225E62C8()
{
  return sub_2225E6324();
}

void *sub_2225E62D0(void *a1, void *a2)
{
  if (sub_2225E6310((uint64_t)&v5, a2, a1)) {
    return a2;
  }
  else {
    return a1;
  }
}

BOOL sub_2225E6310(uint64_t a1, void *a2, void *a3)
{
  return *a2 < *a3;
}

uint64_t sub_2225E6324()
{
  sub_2225E6340();
  return v0;
}

uint64_t sub_2225E6344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_2225E4858(a3, a1);

  return sub_2225E6384(v4, a2);
}

uint64_t sub_2225E6384(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  uint64_t v3 = a2 + v2;
  if (a2 + v2 - 63 >= 0) {
    uint64_t v3 = a2 + v2 - 63;
  }
  uint64_t v4 = v3 >> 6;
  if (a2 >= 0) {
    uint64_t v4 = (unint64_t)(v2 + a2) >> 6;
  }
  *(void *)result += 8 * v4;
  *(_DWORD *)(result + 8) = ((_BYTE)v2 + (_BYTE)a2) & 0x3F;
  return result;
}

void *sub_2225E63C8(void *a1)
{
  uint64_t v2 = a1 + 2;
  *a1 = 0;
  a1[1] = 0;
  int v5 = 0;
  j_j_nullsub_1(&v4);
  sub_2225E2E5C(v2, &v5, &v4);
  return a1;
}

uint64_t sub_2225E6418(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  unint64_t v3 = sub_2225D5E64(v2);
  unint64_t v4 = sub_2225CAE1C(v3);
  if (v3 >= v4 >> 7) {
    return v4 >> 1;
  }

  return sub_2225E5E58(v3);
}

void *sub_2225E6470(uint64_t *a1, unint64_t a2)
{
  if (sub_2225E6418((uint64_t)a1, a2) < a2) {
    sub_2225D2A34();
  }
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  unint64_t v6 = sub_2225E65B4(a2);
  uint64_t v7 = sub_2225E658C(v5, v6);
  uint64_t v9 = v8;
  *a1 = v7;
  a1[1] = 0;
  unint64_t result = (void *)sub_2225D2650((uint64_t)a1, v8);
  void *result = v9;
  return result;
}

uint64_t sub_2225E64E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a1[1];
  unint64_t v7 = v6 + a4;
  a1[1] = v6 + a4;
  if (!v6 || ((v7 - 1) ^ (v6 - 1)) >= 0x40)
  {
    if (v7 >= 0x41) {
      unint64_t v8 = (v7 - 1) >> 6;
    }
    else {
      unint64_t v8 = 0;
    }
    *(void *)(*a1 + 8 * v8) = 0;
  }
  sub_2225E4858((uint64_t)v13, a2);
  sub_2225E4858((uint64_t)v12, a3);
  sub_2225E59D0(a1, v6, (uint64_t)v11);
  return sub_2225E660C((uint64_t)v13, (uint64_t)v12, (uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_2225E658C(uint64_t a1, unint64_t a2)
{
  return sub_2225E65C4(a1, a2);
}

unint64_t sub_2225E65B4(uint64_t a1)
{
  return ((unint64_t)(a1 - 1) >> 6) + 1;
}

uint64_t sub_2225E65C4(uint64_t a1, unint64_t a2)
{
  if (sub_2225D5E64(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(8 * a2, 8);
}

uint64_t sub_2225E660C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2225E4858((uint64_t)v10, a1);
  sub_2225E4858((uint64_t)v9, a2);
  sub_2225E4858((uint64_t)v8, a3);
  return sub_2225E667C((uint64_t)v10, (uint64_t)v9, (uint64_t)v8, a4);
}

uint64_t sub_2225E667C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2225E4858((uint64_t)v10, a1);
  sub_2225E4858((uint64_t)v9, a2);
  sub_2225E4858((uint64_t)v8, a3);
  return sub_2225E66EC((uint64_t)v10, (uint64_t)v9, (uint64_t)v8, a4);
}

uint64_t sub_2225E66EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2225E4858((uint64_t)v22, a1);
  sub_2225E4858((uint64_t)v21, a2);
  sub_2225E6808((uint64_t)v22, (uint64_t)v21, (uint64_t)v23);
  sub_2225E4858((uint64_t)v18, (uint64_t)v23);
  sub_2225E4858((uint64_t)v17, (uint64_t)&v24);
  sub_2225E4858((uint64_t)v15, a3);
  sub_2225E6914((uint64_t)v15, (uint64_t)v16);
  sub_2225E6874((uint64_t)v18, (uint64_t)v17, (uint64_t)v16, (uint64_t)v19);
  sub_2225E4858((uint64_t)v13, a1);
  sub_2225E4858((uint64_t)v12, (uint64_t)v19);
  sub_2225E6964((uint64_t)v13, (uint64_t)v12, (uint64_t)v14);
  sub_2225E4858((uint64_t)v10, a3);
  sub_2225E4858((uint64_t)v9, (uint64_t)&v20);
  sub_2225E69B8((uint64_t)v10, (uint64_t)v9, (uint64_t)v11);
  return sub_2225E6954((uint64_t)v14, (uint64_t)v11, a4);
}

uint64_t sub_2225E6808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225E4858((uint64_t)v8, a1);
  sub_2225E6914((uint64_t)v8, (uint64_t)v9);
  sub_2225E4858((uint64_t)v6, a2);
  sub_2225E6914((uint64_t)v6, (uint64_t)v7);
  return sub_2225E6954((uint64_t)v9, (uint64_t)v7, a3);
}

uint64_t sub_2225E6874@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  while (sub_2225E6A0C(a1, a2))
  {
    v12[0] = sub_2225E6A28(a1);
    v12[1] = v8;
    v11[0] = sub_2225E6A28(a3);
    v11[1] = v9;
    sub_2225E6A60((uint64_t)v11, (uint64_t)v12);
    sub_2225E6AA0(a1);
    sub_2225E6AA0(a3);
  }
  return sub_2225E6954(a1, a3, a4);
}

uint64_t sub_2225E6914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2225E4858((uint64_t)v4, a1);
  return sub_2225E6AEC((uint64_t)v4, a2);
}

uint64_t sub_2225E6954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225E6AF8(a3, a1, a2);
}

uint64_t sub_2225E6964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225E4858((uint64_t)v7, a1);
  sub_2225E4858((uint64_t)v6, a2);
  return sub_2225E69B8((uint64_t)v7, (uint64_t)v6, a3);
}

uint64_t sub_2225E69B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225E4858((uint64_t)v7, a1);
  sub_2225E4858((uint64_t)v6, a2);
  return sub_2225E6B34((uint64_t)v6, a3);
}

BOOL sub_2225E6A0C(uint64_t a1, uint64_t a2)
{
  return !sub_2225E6ACC(a1, a2);
}

uint64_t sub_2225E6A28(uint64_t a1)
{
  sub_2225C3D0C(&v2, *(void *)a1, 1 << *(_DWORD *)(a1 + 8));
  return v2;
}

uint64_t sub_2225E6A60(uint64_t a1, uint64_t a2)
{
  BOOL v3 = sub_2225D9178(a2);

  return sub_2225D9110(a1, v3);
}

uint64_t sub_2225E6AA0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 8);
  if (v1 == 63)
  {
    int v2 = 0;
    *(void *)result += 8;
  }
  else
  {
    int v2 = v1 + 1;
  }
  *(_DWORD *)(result + 8) = v2;
  return result;
}

BOOL sub_2225E6ACC(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8);
}

uint64_t sub_2225E6AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2225E4858(a2, a1);
}

uint64_t sub_2225E6AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225E4858(a1, a2);
  sub_2225E4858(v5 + 16, a3);
  return a1;
}

uint64_t sub_2225E6B34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2225E4858(a2, a1);
}

unint64_t sub_2225E6B3C(uint64_t a1)
{
  return (a1 + 63) & 0xFFFFFFFFFFFFFFC0;
}

uint64_t sub_2225E6B48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  v28[0] = a3;
  v28[1] = a4;
  uint64_t v8 = sub_2225E62A4((uint64_t)v28, (uint64_t)&v29);
  uint64_t v27 = v8;
  if (v8 >= 1)
  {
    if (v30)
    {
      char v10 = 64 - v30;
      uint64_t v26 = (64 - v30);
      unint64_t v11 = (uint64_t *)sub_2225E62C4(&v26, &v27);
      uint64_t v12 = *v11;
      v27 -= *v11;
      uint64_t v13 = v29 + 1;
      unsigned int v14 = *(void **)a5;
      **(void **)a5 = **(void **)a5 & ~((-1 << v30) & (0xFFFFFFFFFFFFFFFFLL >> (v10 - v12))) | (-1 << v30) & (0xFFFFFFFFFFFFFFFFLL >> (v10 - v12)) & *v29;
      uint64_t v15 = *(unsigned int *)(a5 + 8);
      BOOL v16 = __OFADD__(v12, v15);
      uint64_t v17 = v12 + v15;
      uint64_t v18 = v17 + 63;
      if (v17 < 0 == v16) {
        uint64_t v18 = v17;
      }
      uint64_t v19 = v18 >> 6;
      *(void *)a5 = &v14[v19];
      *(_DWORD *)(a5 + 8) = v17 - (v19 << 6);
      uint64_t v29 = v13;
      uint64_t v20 = v27;
    }
    else
    {
      uint64_t v20 = v8;
      uint64_t v13 = v29;
    }
    if (v20 >= 0) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = v20 + 63;
    }
    nullsub_1(v13, v9);
    nullsub_1(*(void *)a5, v22);
    sub_2225E62C8();
    v27 -= v21 & 0xFFFFFFFFFFFFFFC0;
    uint64_t v23 = v27;
    uint64_t v24 = (unint64_t *)(*(void *)a5 + 8 * (v21 >> 6));
    *(void *)a5 = v24;
    if (v23 >= 1)
    {
      v29 += v21 >> 6;
      unint64_t *v24 = *v24 & ~(0xFFFFFFFFFFFFFFFFLL >> -(char)v23) | *v29 & (0xFFFFFFFFFFFFFFFFLL >> -(char)v23);
      *(_DWORD *)(a5 + 8) = v27;
    }
  }
  return sub_2225E4858(a6, a5);
}

uint64_t sub_2225E6CDC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  v43[0] = a3;
  v43[1] = a4;
  uint64_t v8 = sub_2225E62A4((uint64_t)v43, (uint64_t)&v44);
  uint64_t v42 = v8;
  if (v8 >= 1)
  {
    if (v45)
    {
      char v9 = 64 - v45;
      uint64_t v41 = (64 - v45);
      char v10 = (uint64_t *)sub_2225E62C4(&v41, &v42);
      uint64_t v11 = *v10;
      v42 -= *v10;
      unint64_t v12 = (-1 << v45) & *v44 & (0xFFFFFFFFFFFFFFFFLL >> (v9 - v11));
      unsigned int v13 = 64 - *(_DWORD *)(a5 + 8);
      uint64_t v40 = v13;
      uint64_t v41 = v11;
      unsigned int v14 = (uint64_t *)sub_2225CAB38(&v41, &v40);
      uint64_t v15 = *v14;
      uint64_t v16 = *(unsigned int *)(a5 + 8);
      uint64_t v17 = *(uint64_t **)a5;
      char v18 = v45;
      unint64_t v19 = v12 >> (v45 - v16);
      if (v16 > v45) {
        unint64_t v19 = v12 << (v16 - v45);
      }
      *uint64_t v17 = v19 | **(void **)a5 & ~((-1 << v16) & (0xFFFFFFFFFFFFFFFFLL >> (v13
                                                                               - *v14)));
      uint64_t v20 = (unint64_t *)&v17[(unint64_t)(v15 + v16) >> 6];
      *(void *)a5 = v20;
      int v21 = ((_BYTE)v16 + (_BYTE)v15) & 0x3F;
      *(_DWORD *)(a5 + 8) = v21;
      if (v11 - v15 >= 1)
      {
        unint64_t *v20 = *v20 & ~(0xFFFFFFFFFFFFFFFFLL >> (v15 - v11)) | (v12 >> (v15 + v18));
        *(_DWORD *)(a5 + 8) = v11 - v15;
        int v21 = v11 - v15;
      }
      ++v44;
      uint64_t v8 = v42;
    }
    else
    {
      int v21 = *(_DWORD *)(a5 + 8);
    }
    uint64_t v22 = (64 - v21);
    if (v8 >= 64)
    {
      char v23 = v21;
      uint64_t v24 = -1 << v21;
      uint64_t v25 = v44;
      uint64_t v26 = *(uint64_t **)a5;
      uint64_t v27 = **(void **)a5;
      do
      {
        unint64_t v29 = *v25++;
        unint64_t v28 = v29;
        *uint64_t v26 = v27 & ~v24 | (v29 << v23);
        uint64_t v30 = v26[1];
        ++v26;
        uint64_t v27 = v30 & v24 | (v28 >> v22);
        *uint64_t v26 = v27;
        uint64_t v31 = v42;
        uint64_t v8 = v42 - 64;
        v42 -= 64;
      }
      while (v31 > 127);
      *(void *)a5 = v26;
      uint64_t v44 = v25;
    }
    if (v8 >= 1)
    {
      unint64_t v32 = *v44 & (0xFFFFFFFFFFFFFFFFLL >> -(char)v8);
      uint64_t v41 = v22;
      uint64_t v33 = (uint64_t *)sub_2225E62C4(&v42, &v41);
      uint64_t v34 = *v33;
      uint64_t v35 = *(unsigned int *)(a5 + 8);
      uint64_t v36 = *(unint64_t **)a5;
      *uint64_t v36 = **(void **)a5 & ~((-1 << v35) & (0xFFFFFFFFFFFFFFFFLL >> (v22 - *v33))) | (v32 << v35);
      uint64_t v37 = &v36[(unint64_t)(v34 + v35) >> 6];
      *(void *)a5 = v37;
      *(_DWORD *)(a5 + 8) = ((_BYTE)v35 + (_BYTE)v34) & 0x3F;
      uint64_t v38 = v42 - v34;
      uint64_t v42 = v38;
      if (v38 >= 1)
      {
        *uint64_t v37 = *v37 & ~(0xFFFFFFFFFFFFFFFFLL >> -(char)v38) | (v32 >> v34);
        *(_DWORD *)(a5 + 8) = v42;
      }
    }
  }
  return sub_2225E4858(a6, a5);
}

uint64_t sub_2225E6F80(void *a1, unint64_t a2)
{
  sub_2225E59EC(&v3, *a1 + 8 * (a2 >> 6), a2 & 0x3F);
  return v3;
}

void *sub_2225E6FBC(uint64_t a1, unint64_t a2)
{
  unint64_t v17 = a2;
  int v3 = *(_DWORD *)(a1 + 8);
  if (v3)
  {
    uint64_t v16 = (64 - v3);
    uint64_t v4 = (uint64_t *)sub_2225CAB38(&v16, &v17);
    uint64_t v5 = *v4;
    uint64_t v6 = v16 - *v4;
    unint64_t v7 = *(unint64_t **)a1;
    *unint64_t v7 = (0xFFFFFFFFFFFFFFFFLL >> v6) & (-1 << *(_DWORD *)(a1 + 8)) | **(void **)a1;
    uint64_t v8 = v7 + 1;
    unint64_t v9 = v17 - v5;
    v17 -= v5;
    *(void *)a1 = v8;
  }
  else
  {
    unint64_t v9 = a2;
    uint64_t v8 = *(unint64_t **)a1;
  }
  unint64_t v10 = v9 >> 6;
  uint64_t v11 = (void *)nullsub_1(v8, a2);
  uint64_t v16 = -1;
  unint64_t result = sub_2225E719C(v11, v9 >> 6, &v16);
  char v13 = v17 - (v9 & 0xC0);
  v17 -= v9 & 0xFFFFFFFFFFFFFFC0;
  if (v17)
  {
    unsigned int v14 = *(unint64_t **)a1;
    uint64_t v15 = (void *)(*(void *)a1 + 8 * v10);
    *(void *)a1 = v15;
    v14[v10] = *v15 | (0xFFFFFFFFFFFFFFFFLL >> -v13);
  }
  return result;
}

void *sub_2225E70AC(uint64_t a1, unint64_t a2)
{
  unint64_t v17 = a2;
  int v3 = *(_DWORD *)(a1 + 8);
  if (v3)
  {
    uint64_t v16 = (64 - v3);
    uint64_t v4 = (uint64_t *)sub_2225CAB38(&v16, &v17);
    uint64_t v5 = *v4;
    uint64_t v6 = v16 - *v4;
    unint64_t v7 = *(unint64_t **)a1;
    *unint64_t v7 = **(void **)a1 & ~((0xFFFFFFFFFFFFFFFFLL >> v6) & (-1 << *(_DWORD *)(a1 + 8)));
    uint64_t v8 = v7 + 1;
    unint64_t v9 = v17 - v5;
    v17 -= v5;
    *(void *)a1 = v8;
  }
  else
  {
    unint64_t v9 = a2;
    uint64_t v8 = *(unint64_t **)a1;
  }
  unint64_t v10 = v9 >> 6;
  uint64_t v11 = (void *)nullsub_1(v8, a2);
  uint64_t v16 = 0;
  unint64_t result = sub_2225E719C(v11, v9 >> 6, &v16);
  char v13 = v17 - (v9 & 0xC0);
  v17 -= v9 & 0xFFFFFFFFFFFFFFC0;
  if (v17)
  {
    unsigned int v14 = *(unint64_t **)a1;
    uint64_t v15 = (void *)(*(void *)a1 + 8 * v10);
    *(void *)a1 = v15;
    v14[v10] = *v15 & ~(0xFFFFFFFFFFFFFFFFLL >> -v13);
  }
  return result;
}

void *sub_2225E719C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = nullsub_1(a2, a2);

  return sub_2225E71E4(a1, v5, a3);
}

void *sub_2225E71E4(void *result, uint64_t a2, void *a3)
{
    *result++ = *a3;
  return result;
}

uint64_t sub_2225E71FC(void *a1, unint64_t a2)
{
  sub_2225C3D0C(&v3, *a1 + 8 * (a2 >> 6), 1 << a2);
  return v3;
}

uint64_t sub_2225E7240(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2225E726C(&v3);
}

uint64_t sub_2225E726C(void *a1)
{
  return sub_2225E7274(*a1);
}

uint64_t sub_2225E7280(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2225E72AC(&v3);
}

uint64_t sub_2225E72AC(void *a1)
{
  return sub_2225E72B4(*a1);
}

void *sub_2225E72BC(uint64_t a1, uint64_t a2)
{
  sub_2225D5EB8(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_2225D5FF0(v5, v7, a2);
  v10 += 8;
  return sub_2225D284C(&v9);
}

uint64_t sub_2225E7330(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_2225D4970(a1);
  unint64_t v6 = sub_2225E73E0(a1, v5 + 1);
  uint64_t v7 = sub_2225D4970(a1);
  sub_2225E745C(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2225D5FF0(v4, v9, a2);
  v13 += 8;
  sub_2225E7460(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225E7550(v12);
  return v10;
}

unint64_t sub_2225E73E0(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_2225D5DFC((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_2225D567C(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_2225E7460(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2225E75E0();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  unint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  uint64_t v10 = sub_2225D4970(a1);
  return nullsub_1(a1, v10);
}

uint64_t *sub_2225E7554(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_2225E658C(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 8 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 8 * v9;
  return a1;
}

uint64_t sub_2225E75E0()
{
  return sub_2225E75FC();
}

uint64_t sub_2225E75FC()
{
  sub_2225E7624(v1);
  return v1[2];
}

uint64_t sub_2225E762C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_2225E76FC(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_2225E76FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v13[0] = a1;
  v13[1] = a2;
  v12[0] = a3;
  v12[1] = a4;
  v11[0] = a5;
  v11[1] = a6;
  while (sub_2225D2CC0((uint64_t)v13, (uint64_t)v12))
  {
    uint64_t v9 = *(void *)sub_2225E778C((uint64_t)v13, v8);
    *(void *)sub_2225E77C4((uint64_t)v11) = v9;
    sub_2225E77D0((uint64_t)v13);
    sub_2225E77D0((uint64_t)v11);
  }
  return sub_2225CCC60((uint64_t)v13, (uint64_t)v11, a7);
}

uint64_t sub_2225E778C(uint64_t a1, uint64_t a2)
{
  nullsub_1(a1, a2);

  return sub_2225E77C4(a1);
}

uint64_t sub_2225E77C4(uint64_t a1)
{
  return *(void *)(a1 + 8) - 8;
}

uint64_t sub_2225E77D0(uint64_t result)
{
  *(void *)(result + 8) -= 8;
  return result;
}

uint64_t *sub_2225E77E0(uint64_t *a1)
{
  sub_2225E7840((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_2225E7848(a1, v4);
    sub_2225E52D4(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_2225E7840(uint64_t a1)
{
  return sub_2225E787C(a1, *(void *)(a1 + 8));
}

uint64_t sub_2225E7848(void *a1, uint64_t a2)
{
  return (uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 3;
}

uint64_t sub_2225E7880(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 8;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      unint64_t result = j_nullsub_1(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_2225E78F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2225E791C(&v3);
}

uint64_t sub_2225E791C(void *a1)
{
  return sub_2225E7924(*a1);
}

double sub_2225E7930(void *a1, uint64_t a2, double *a3)
{
  uint64_t v4 = sub_2225E7978(a1, a2);
  *uint64_t v4 = &unk_26D4DBAB0;
  double result = *a3;
  void v4[2] = *(void *)a3;
  return result;
}

void *sub_2225E7978(void *result, uint64_t a2)
{
  void *result = &unk_26D4DBC80;
  result[1] = a2;
  return result;
}

uint64_t sub_2225E7998(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, *(const char **)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t sub_2225E79D0(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DBAE0;
  if (*(_DWORD *)(a1 + 32) == 1)
  {
    uint64_t v2 = *(void **)(a1 + 8);
    if (v2) {
      j__free(v2);
    }
  }
  return a1;
}

uint64_t sub_2225E7A34()
{
  return 1024;
}

void sub_2225E7A3C(uint64_t *a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t *))(*a1 + 80))(a1);
  if (v2)
  {
    sub_2225E7ABC(a1, v2);
  }
  else
  {
    sub_2225E7B0C(a1);
  }
}

void sub_2225E7ABC(uint64_t *a1, uint64_t a2)
{
  sub_2225E86DC(a1);
  uint64_t v4 = sub_2225C26A4(a2);

  sub_2225E7B50((uint64_t)a1, v4, a2, 1);
}

void sub_2225E7B0C(uint64_t *a1)
{
  sub_2225E86DC(a1);

  sub_2225E7B50((uint64_t)a1, 0, 0, 0);
}

void sub_2225E7B50(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (*(_DWORD *)(a1 + 32) == 1)
  {
    uint64_t v8 = *(void **)(a1 + 8);
    if (v8) {
      j__free(v8);
    }
  }
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2 + a3;
  *(void *)(a1 + 24) = a2;
  *(_DWORD *)(a1 + 32) = a4;
}

void **sub_2225E7BAC(void **a1, unint64_t a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (a2)
  {
    uint64_t v2 = 0;
    do
    {
      v5[v2-- + 19] = (a2 % 0xA) | 0x30;
      BOOL v3 = a2 > 9;
      a2 /= 0xAuLL;
    }
    while (v3);
    return sub_2225E7C80(a1, &v5[v2 + 20], -v2);
  }
  else
  {
    return (void **)sub_2225CAF14((uint64_t)a1, 48);
  }
}

void **sub_2225E7C80(void **a1, unsigned char *a2, size_t __n)
{
  size_t v3 = __n;
  uint64_t v6 = a1[3];
  size_t v7 = (unsigned char *)a1[2] - v6;
  if (v7 < __n)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v12 = a1[1];
        if (!v12) {
          break;
        }
        if (v6 == v12)
        {
          v7 *= v3 / v7;
          v3 -= v7;
          (*((void (**)(void **, unsigned char *, size_t))*a1 + 7))(a1, a2, v7);
          uint64_t v6 = a1[3];
          size_t v11 = (unsigned char *)a1[2] - v6;
          if (v3 <= v11)
          {
            uint64_t v9 = &a2[v7];
            uint64_t v8 = a1;
            goto LABEL_3;
          }
        }
        else
        {
          sub_2225E8314(a1, a2, v7);
          sub_2225E8238((uint64_t *)a1);
          v3 -= v7;
          uint64_t v6 = a1[3];
          size_t v11 = (unsigned char *)a1[2] - v6;
        }
        a2 += v7;
        size_t v7 = v11;
        if (v11 >= v3) {
          goto LABEL_2;
        }
      }
      if (!*((_DWORD *)a1 + 8)) {
        break;
      }
      sub_2225E7A3C((uint64_t *)a1);
      uint64_t v6 = a1[3];
      size_t v7 = (unsigned char *)a1[2] - v6;
      if (v7 >= v3) {
        goto LABEL_2;
      }
    }
    (*((void (**)(void **, unsigned char *, size_t))*a1 + 7))(a1, a2, v3);
  }
  else
  {
LABEL_2:
    uint64_t v8 = a1;
    uint64_t v9 = a2;
LABEL_3:
    sub_2225E8314(v8, v9, v3);
  }
  return a1;
}

void **sub_2225E7DD0(void **a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    sub_2225CAF14((uint64_t)a1, 45);
    unint64_t v2 = -(uint64_t)v2;
  }

  return sub_2225E7BAC(a1, v2);
}

void **sub_2225E7E24(void **a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    sub_2225CAF14((uint64_t)a1, 45);
    unint64_t v2 = -(uint64_t)v2;
  }

  return sub_2225E7E20(a1, v2);
}

void **sub_2225E7E74(void **a1, unint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2)
  {
    uint64_t v2 = 0;
    do
    {
      if ((a2 & 0xF) >= 0xA) {
        char v3 = (a2 & 0xF) + 87;
      }
      else {
        char v3 = a2 & 0xF | 0x30;
      }
      v6[v2-- + 19] = v3;
      BOOL v4 = a2 > 0xF;
      a2 >>= 4;
    }
    while (v4);
    return sub_2225E7C80(a1, &v6[v2 + 20], -v2);
  }
  else
  {
    return (void **)sub_2225CAF14((uint64_t)a1, 48);
  }
}

uint64_t sub_2225E7F44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v15[0] = a2;
  v15[1] = a3;
  uint64_t v6 = sub_2225C3D04((uint64_t)v15);
  if (v6)
  {
    for (uint64_t i = 0; v6 != i; ++i)
    {
      unsigned __int8 v8 = sub_2225CC124(v15, i);
      unsigned int v9 = v8;
      if (v8 > 0x21u)
      {
        if (v8 == 34)
        {
          uint64_t v10 = sub_2225CAF14(a1, 92);
          char v11 = 34;
          goto LABEL_18;
        }
        if (v8 == 92)
        {
          uint64_t v10 = sub_2225CAF14(a1, 92);
          char v11 = 92;
          goto LABEL_18;
        }
      }
      else
      {
        if (v8 == 9)
        {
          uint64_t v10 = sub_2225CAF14(a1, 92);
          char v11 = 116;
          goto LABEL_18;
        }
        if (v8 == 10)
        {
          uint64_t v10 = sub_2225CAF14(a1, 92);
          char v11 = 110;
LABEL_18:
          sub_2225CAF14(v10, v11);
          continue;
        }
      }
      if (!sub_2225E80B8(v8))
      {
        uint64_t v12 = sub_2225CAF14(a1, 92);
        if (a4)
        {
          sub_2225CAF14(v12, 120);
          char v13 = sub_2225E80F4(v9 >> 4);
          sub_2225CAF14(a1, v13);
          char v11 = sub_2225E80F4(v9 & 0xF);
        }
        else
        {
          sub_2225CAF14(a1, (v9 >> 6) | 0x30);
          sub_2225CAF14(a1, (v9 >> 3) & 7 | 0x30);
          char v11 = v9 & 7 | 0x30;
        }
        uint64_t v10 = a1;
        goto LABEL_18;
      }
      sub_2225E80C0(a1, v9);
    }
  }
  return a1;
}

BOOL sub_2225E80B8(signed int a1)
{
  return sub_2225E8DD8(a1, 0x40000uLL);
}

uint64_t sub_2225E80C0(uint64_t result, char a2)
{
  uint64_t v2 = *(char **)(result + 24);
  if ((unint64_t)v2 >= *(void *)(result + 16)) {
    return sub_2225E8268(result, a2);
  }
  *(void *)(result + 24) = v2 + 1;
  *uint64_t v2 = a2;
  return result;
}

uint64_t sub_2225E80F4(unsigned int a1)
{
  if (a1 >= 0xA) {
    char v1 = 55;
  }
  else {
    char v1 = 48;
  }
  return (char)(v1 + a1);
}

uint64_t sub_2225E8110(uint64_t a1, double a2)
{
  double v5 = a2;
  sub_2225E4F80((uint64_t)"%e", (uint64_t)&v5, (uint64_t)v4);
  sub_2225E8168(a1, (uint64_t)v4);
  j_j_nullsub_1(v4);
  return a1;
}

uint64_t sub_2225E8168(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v6 = v5 - v4;
  if ((unint64_t)(v5 - v4) < 4)
  {
    size_t v8 = 127;
  }
  else
  {
    unsigned int v7 = sub_2225E83C4(a2, v4, (int)v5 - (int)v4);
    size_t v8 = v7;
    if (v6 >= v7)
    {
      *(void *)(a1 + 24) += v7;
      return a1;
    }
  }
  sub_2225D0B10(v13);
  do
  {
    size_t v9 = v8;
    sub_2225CF670(v13, v8);
    uint64_t v10 = sub_2225CC180((uint64_t)v13);
    size_t v8 = sub_2225E83C4(a2, v10, v8);
  }
  while (v9 < v8);
  char v11 = (unsigned char *)sub_2225CC180((uint64_t)v13);
  sub_2225E7C80((void **)a1, v11, v8);
  sub_2225C56C4(v13);
  return a1;
}

uint64_t sub_2225E8238(uint64_t *a1)
{
  uint64_t v1 = *a1;
  a1[3] = a1[1];
  return (*(uint64_t (**)(void))(v1 + 56))();
}

uint64_t sub_2225E8268(uint64_t a1, char a2)
{
  unint64_t v5 = *(void *)(a1 + 16);
  for (uint64_t i = *(unsigned char **)(a1 + 24); ; uint64_t i = *(unsigned char **)(a1 + 24))
  {
    if ((unint64_t)i < v5) {
      goto LABEL_7;
    }
    if (*(void *)(a1 + 8))
    {
      sub_2225E8238((uint64_t *)a1);
      uint64_t i = *(unsigned char **)(a1 + 24);
LABEL_7:
      *(void *)(a1 + 24) = i + 1;
      unsigned char *i = a2;
      return a1;
    }
    if (!*(_DWORD *)(a1 + 32)) {
      break;
    }
    sub_2225E7A3C((uint64_t *)a1);
    unint64_t v5 = *(void *)(a1 + 16);
  }
  char v7 = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)a1 + 56))(a1, &v7, 1);
  return a1;
}

void **sub_2225E8314(void **result, unsigned char *a2, size_t __n)
{
  uint64_t v4 = result;
  switch(__n)
  {
    case 0uLL:
      break;
    case 1uLL:
      goto LABEL_5;
    case 2uLL:
      goto LABEL_4;
    case 3uLL:
      goto LABEL_3;
    case 4uLL:
      *((unsigned char *)result[3] + 3) = a2[3];
LABEL_3:
      *((unsigned char *)result[3] + 2) = a2[2];
LABEL_4:
      *((unsigned char *)result[3] + 1) = a2[1];
LABEL_5:
      *(unsigned char *)result[3] = *a2;
      break;
    default:
      double result = (void **)memcpy(result[3], a2, __n);
      break;
  }
  uint64_t v4[3] = (char *)v4[3] + __n;
  return result;
}

uint64_t sub_2225E83C4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 8))(a1);
  if (v4 < a3) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v4 + 1;
  }
  if (v4 >= 0) {
    return v5;
  }
  else {
    return 2 * a3;
  }
}

uint64_t sub_2225E8420(uint64_t a1, unsigned char *a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_2225E8580(a1, 0);
  *(void *)uint64_t v8 = &unk_26D4DBB48;
  *(_WORD *)(v8 + 41) = 0;
  *(void *)(v8 + 48) = 0;
  sub_2225CB97C(a3, v9);
  if (*a2 == 45 && !a2[1])
  {
    *(_DWORD *)(a1 + 36) = 1;
    if ((a4 & 4) == 0) {
      sub_2225D1480();
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  else
  {
    uint64_t v10 = (uint64_t *)sub_2225CBDE8((uint64_t)&v18, a2);
    *(void *)&v19.__val_ = sub_2225CFA9C(v10, (int *)(a1 + 36), a4, 438);
    v19.__cat_ = v11;
    if (sub_2225CDBBC(&v19))
    {
      sub_2225CCD48(&v15, a2);
      sub_2225D1E74("Error opening output file '", &v15, (uint64_t)&v16);
      sub_2225D169C(&v16, "': ", (uint64_t)&v17);
      std::error_code::message(&v14, &v19);
      sub_2225D1644(&v17, (uint64_t)&v14, (uint64_t)&v18);
      sub_2225CCDE4(a3, (uint64_t)&v18);
      std::string::~string(&v18);
      std::string::~string(&v14);
      std::string::~string(&v17);
      std::string::~string(&v16);
      std::string::~string(&v15);
      char v12 = 0;
    }
    else
    {
      char v12 = 1;
    }
    *(unsigned char *)(a1 + 40) = v12;
  }
  return a1;
}

uint64_t sub_2225E8580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2 ^ 1;
  *(void *)double result = &unk_26D4DBAE0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t sub_2225E85B0(uint64_t a1, int a2, char a3, int a4)
{
  uint64_t v7 = sub_2225E8580(a1, a4);
  *(void *)uint64_t v7 = &unk_26D4DBB48;
  *(_DWORD *)(v7 + 36) = a2;
  *(unsigned char *)(v7 + 40) = a3;
  *(_WORD *)(v7 + 41) = 0;
  off_t v8 = lseek(a2, 0, 1);
  if (v8 == -1) {
    off_t v9 = 0;
  }
  else {
    off_t v9 = v8;
  }
  *(void *)(a1 + 48) = v9;
  return a1;
}

uint64_t sub_2225E8634(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DBB48;
  if ((*(_DWORD *)(a1 + 36) & 0x80000000) == 0)
  {
    sub_2225E86DC((uint64_t *)a1);
    if (*(unsigned char *)(a1 + 40))
    {
      while (close(*(_DWORD *)(a1 + 36)))
      {
        if (*__error() != 4)
        {
          sub_2225E86F4(a1);
          break;
        }
      }
    }
  }
  if (sub_2225E8700(a1)) {
    sub_2225CBCBC("IO failure on output stream.", 0);
  }

  return sub_2225E79D0(a1);
}

uint64_t *sub_2225E86DC(uint64_t *a1)
{
  if (a1[3] != a1[1]) {
    return (uint64_t *)sub_2225E8238(a1);
  }
  return a1;
}

uint64_t sub_2225E86F4(uint64_t result)
{
  *(unsigned char *)(result + 41) = 1;
  return result;
}

uint64_t sub_2225E8700(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 41);
}

void sub_2225E870C()
{
  uint64_t v0 = (void *)sub_2225E8708();

  j__free(v0);
}

uint64_t sub_2225E8734(uint64_t a1, char *__buf, size_t __nbyte)
{
  size_t v3 = __nbyte;
  *(void *)(a1 + 48) += __nbyte;
  while (!*(unsigned char *)(a1 + 42))
  {
    uint64_t result = write(*(_DWORD *)(a1 + 36), __buf, v3);
    if (result < 0) {
      goto LABEL_6;
    }
LABEL_4:
    __buf += result;
    v3 -= result;
LABEL_9:
    if (!v3) {
      return result;
    }
  }
  v7.iov_base = __buf;
  v7.iov_len = v3;
  uint64_t result = writev(*(_DWORD *)(a1 + 36), &v7, 1);
  if ((result & 0x8000000000000000) == 0) {
    goto LABEL_4;
  }
LABEL_6:
  uint64_t result = (uint64_t)__error();
  if (*(_DWORD *)result == 4) {
    goto LABEL_9;
  }
  uint64_t result = (uint64_t)__error();
  if (*(_DWORD *)result == 35) {
    goto LABEL_9;
  }
  uint64_t result = (uint64_t)__error();
  if (*(_DWORD *)result == 35) {
    goto LABEL_9;
  }
  return sub_2225E86F4(a1);
}

uint64_t sub_2225E87F8(uint64_t a1)
{
  *(unsigned char *)(a1 + 40) = 0;
  sub_2225E86DC((uint64_t *)a1);
  while (1)
  {
    uint64_t result = close(*(_DWORD *)(a1 + 36));
    if (!result) {
      break;
    }
    if (*__error() != 4)
    {
      uint64_t result = sub_2225E86F4(a1);
      break;
    }
  }
  *(_DWORD *)(a1 + 36) = -1;
  return result;
}

uint64_t sub_2225E884C(uint64_t a1)
{
  if (fstat(*(_DWORD *)(a1 + 36), &v3) || (v3.st_mode & 0xF000) == 0x2000 && isatty(*(_DWORD *)(a1 + 36))) {
    return 0;
  }
  else {
    return v3.st_blksize;
  }
}

uint64_t *sub_2225E88AC(uint64_t *a1, int a2, int a3, int a4)
{
  if (sub_2225C5C08()) {
    sub_2225E86DC(a1);
  }
  if (a2 == 8) {
    off_t v8 = sub_2225D12B0();
  }
  else {
    off_t v8 = sub_2225D1288(a2, a3, a4);
  }
  off_t v9 = (char *)v8;
  if (v8)
  {
    size_t v10 = strlen(v8);
    sub_2225E7C80((void **)a1, v9, v10);
    a1[6] -= v10;
  }
  return a1;
}

uint64_t *sub_2225E8948(uint64_t *a1)
{
  if (sub_2225C5C08()) {
    sub_2225E86DC(a1);
  }
  uint64_t v2 = sub_2225D12C8();
  if (v2)
  {
    stat v3 = (char *)v2;
    size_t v4 = strlen(v2);
    sub_2225E7C80((void **)a1, v3, v4);
    a1[6] -= v4;
  }
  return a1;
}

uint64_t *sub_2225E89B4(uint64_t *a1)
{
  if (sub_2225C5C08()) {
    sub_2225E86DC(a1);
  }
  uint64_t v2 = sub_2225D12BC();
  if (v2)
  {
    stat v3 = (char *)v2;
    size_t v4 = strlen(v2);
    sub_2225E7C80((void **)a1, v3, v4);
    a1[6] -= v4;
  }
  return a1;
}

BOOL sub_2225E8A20(uint64_t a1)
{
  return sub_2225D1134(*(_DWORD *)(a1 + 36));
}

BOOL sub_2225E8A28(uint64_t a1)
{
  return sub_2225D1154(*(_DWORD *)(a1 + 36));
}

uint64_t sub_2225E8A38()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AA7F3B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AA7F3B0))
  {
    sub_2225E8A30(&qword_26AA7F3C0, 2, 0, 1);
    __cxa_atexit((void (*)(void *))sub_2225E8A34, &qword_26AA7F3C0, &dword_2225BD000);
    __cxa_guard_release(&qword_26AA7F3B0);
  }

  return sub_2225C3C70((uint64_t)&qword_26AA7F3C0);
}

uint64_t sub_2225E8AD8(uint64_t *a1)
{
  *a1 = (uint64_t)&unk_26D4DBBB0;
  sub_2225E86DC(a1);

  return sub_2225E79D0((uint64_t)a1);
}

void sub_2225E8B30()
{
  uint64_t v0 = (void *)sub_2225E8B2C();

  j__free(v0);
}

std::string *sub_2225E8B58(uint64_t a1, const std::string::value_type *a2, std::string::size_type a3)
{
  return std::string::append(*(std::string **)(a1 + 40), a2, a3);
}

uint64_t sub_2225E8B60(uint64_t a1, const void **a2)
{
  size_t v4 = (void *)sub_2225E8580(a1, 0);
  *size_t v4 = &unk_26D4DBC18;
  v4[5] = a2;
  int v5 = sub_2225C5664((uint64_t)a2);
  sub_2225CE1E8(a2, v5 + 128);
  uint64_t v6 = sub_2225C3D04(*(void *)(a1 + 40));
  uint64_t v7 = sub_2225CE28C(*(void *)(a1 + 40));
  uint64_t v8 = sub_2225C5664(*(void *)(a1 + 40));
  sub_2225E8BFC(a1, v6, v7 - v8);
  return a1;
}

void sub_2225E8BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_2225E8C08(uint64_t *a1)
{
  *a1 = (uint64_t)&unk_26D4DBC18;
  sub_2225E86DC(a1);

  return sub_2225E79D0((uint64_t)a1);
}

void sub_2225E8C60()
{
  uint64_t v0 = (void *)sub_2225E8C5C();

  j__free(v0);
}

void sub_2225E8C88(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_2225C3D04(*(void *)(a1 + 40));
  uint64_t v7 = *(const void ***)(a1 + 40);
  if ((char *)v6 == a2)
  {
    int v8 = sub_2225C5664((uint64_t)v7);
    sub_2225CE23C(*(void *)(a1 + 40), v8 + a3);
  }
  else
  {
    sub_2225C5A88(v7, a2, &a2[a3]);
  }
  off_t v9 = *(const void ***)(a1 + 40);
  int v10 = sub_2225C5664((uint64_t)v9);
  sub_2225CE1E8(v9, v10 + 64);
  uint64_t v11 = sub_2225C3D04(*(void *)(a1 + 40));
  uint64_t v12 = sub_2225CE28C(*(void *)(a1 + 40));
  uint64_t v13 = v12 - sub_2225C5664(*(void *)(a1 + 40));

  sub_2225E8BFC(a1, v11, v13);
}

uint64_t sub_2225E8D44(uint64_t a1)
{
  return sub_2225C5664(*(void *)(a1 + 40));
}

uint64_t sub_2225E8D4C(uint64_t *a1)
{
  sub_2225E86DC(a1);
  uint64_t v2 = sub_2225C3C70(a1[5]);
  uint64_t v3 = sub_2225C5664(a1[5]);
  sub_2225C3D0C(&v5, v2, v3);
  return v5;
}

uint64_t sub_2225E8DA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 40))();
}

uint64_t sub_2225E8DC4(uint64_t a1, uint64_t a2)
{
  return sub_2225CB920(*(void *)(a1 + 40), a2);
}

uint64_t sub_2225E8DD0(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

BOOL sub_2225E8DD8(signed int a1, unint64_t a2)
{
  if (sub_2225E8E30(a1)) {
    BOOL v4 = (*(_DWORD *)(MEMORY[0x263EF8318] + 4 * a1 + 60) & a2) == 0;
  }
  else {
    BOOL v4 = __maskrune(a1, a2) == 0;
  }
  return !v4;
}

BOOL sub_2225E8E30(unsigned int a1)
{
  return a1 < 0x80;
}

void *sub_2225E8E3C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2225C26A4(56);
  *a1 = sub_2225E8630(v8, a2, a3, a4);
  return a1;
}

uint64_t **sub_2225E8E90(uint64_t **a1)
{
  return a1;
}

uint64_t sub_2225E8EBC(uint64_t a1, char *__s, int a3)
{
  if ((~a3 & 0x11) == 0) {
    return 16;
  }
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  if ((a3 & 0x20) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    size_t v9 = v10 - (void)__s;
    if (v10 < (unint64_t)__s) {
      return 16;
    }
  }
  else
  {
    size_t v9 = strlen(__s);
  }
  uint64_t v11 = malloc_type_malloc(0x18FuLL, 0xF976916uLL);
  if (!v11) {
    return 12;
  }
  uint64_t v12 = v11;
  uint64_t v18 = 0;
  uint64_t v14 = 0;
  size_t v16 = 3 * (v9 >> 1) + 1;
  std::string v15 = malloc_type_calloc(v16, 8uLL, 0x100004000313F17uLL);
  uint64_t v17 = 0;
  if (!v15)
  {
    free(v12);
    return 12;
  }
  std::error_code v19 = v12;
  v13.n128_u64[0] = (unint64_t)__s;
  v13.n128_u64[1] = (unint64_t)&__s[v9];
  LODWORD(v14) = 0;
  LODWORD(v18) = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  unsigned int v12[4] = 256;
  *(void *)(v12 + 7) = 0;
  *(void *)(v12 + 5) = 0;
  *(_OWORD *)(v12 + 34) = 0u;
  *(_OWORD *)(v12 + 66) = 0u;
  v12[9] = 0;
  v12[10] = a3 & 0xFFFFFF7F;
  v12[26] = 0;
  *((void *)v12 + 14) = 0;
  *(_OWORD *)(v12 + 18) = xmmword_2226CBA40;
  *((void *)v12 + 11) = v12 + 66;
  *((void *)v12 + 12) = 0;
  *(_OWORD *)(v12 + 38) = 0u;
  *(_OWORD *)(v12 + 42) = 0u;
  *(_OWORD *)(v12 + 46) = 0u;
  *(_OWORD *)(v12 + 50) = 0u;
  *(_OWORD *)(v12 + 54) = 0u;
  *(_OWORD *)(v12 + 58) = 0u;
  *(_OWORD *)(v12 + 62) = 0u;
  *(_OWORD *)(v12 + 70) = 0u;
  *(_OWORD *)(v12 + 74) = 0u;
  *(_OWORD *)(v12 + 78) = 0u;
  *(_OWORD *)(v12 + 82) = 0u;
  *(_OWORD *)(v12 + 86) = 0u;
  *(_OWORD *)(v12 + 90) = 0u;
  *(_OWORD *)(v12 + 94) = 0u;
  v12[30] = 0;
  sub_2225E9124((void **)&v13, 0x8000000, 0);
  *((void *)v12 + 7) = v17 - 1;
  if (a3)
  {
    sub_2225E919C((void **)&v13, 128);
  }
  else if ((a3 & 0x10) != 0)
  {
    sub_2225E9304(&v13);
  }
  else
  {
    sub_2225E9360((void **)&v13, 128, 128);
  }
  sub_2225E9124((void **)&v13, 0x8000000, 0);
  *((void *)v12 + 8) = v17 - 1;
  sub_2225E94A0((uint64_t)&v13, (uint64_t)v12);
  sub_2225E955C((uint64_t)&v13, (uint64_t)v12);
  sub_2225E95C0(&v13, (uint64_t)v12);
  *((void *)v12 + 16) = sub_2225E9724((uint64_t)&v13, (uint64_t)v12);
  *uint64_t v12 = 53829;
  *(void *)(a1 + 8) = *((void *)v12 + 14);
  *(void *)(a1 + 24) = v12;
  *(_DWORD *)a1 = 62053;
  if ((v12[18] & 4) != 0) {
    sub_2225E9794((uint64_t)&v13, 15);
  }
  if (!v14) {
    return 0;
  }
  sub_2225EE328(a1);
  return v14;
}

void **sub_2225E9124(void **result, uint64_t a2, uint64_t a3)
{
  if (!*((_DWORD *)result + 4))
  {
    uint64_t v5 = result;
    uint64_t v7 = (uint64_t)result[4];
    uint64_t v6 = (uint64_t)result[5];
    if (v6 >= v7)
    {
      uint64_t v8 = v7 + 2;
      if (v7 >= -1) {
        uint64_t v8 = v7 + 1;
      }
      uint64_t result = sub_2225EB104(result, (v8 & 0xFFFFFFFFFFFFFFFELL) + (v8 >> 1));
      uint64_t v6 = (uint64_t)v5[5];
    }
    size_t v9 = v5[3];
    v5[5] = (void *)(v6 + 1);
    v9[v6] = a3 | a2;
  }
  return result;
}

void sub_2225E919C(void **a1, int a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  for (char i = 0; ; char i = 1)
  {
    uint64_t v7 = (uint64_t)a1[5];
    uint64_t v8 = *a1;
    unint64_t v9 = (unint64_t)a1[1];
    if ((unint64_t)*a1 >= v9) {
      goto LABEL_9;
    }
    do
    {
      int v10 = (char)*v8;
      if (v10 == 124 || v10 == a2) {
        break;
      }
      sub_2225E97B0((uint64_t)a1);
      uint64_t v8 = *a1;
      unint64_t v9 = (unint64_t)a1[1];
    }
    while ((unint64_t)*a1 < v9);
    if (a1[5] == (void *)v7)
    {
LABEL_9:
      sub_2225E9794((uint64_t)a1, 14);
      uint64_t v8 = *a1;
      unint64_t v9 = (unint64_t)a1[1];
    }
    if ((unint64_t)v8 >= v9 || *v8 != 124) {
      break;
    }
    *a1 = v8 + 1;
    uint64_t v12 = a1[5];
    if ((i & 1) == 0)
    {
      sub_2225E9DB4(a1, 2013265920, (uint64_t)v12 - v7 + 1, v7);
      uint64_t v12 = a1[5];
      uint64_t v4 = v7;
      uint64_t v5 = v7;
    }
    sub_2225E9124(a1, 0x80000000, (uint64_t)v12 - v4);
    __n128 v13 = a1[5];
    uint64_t v4 = (uint64_t)v13 - 1;
    sub_2225E9E58((uint64_t)a1, v5, (uint64_t)v13 - v5);
    uint64_t v5 = (uint64_t)a1[5];
    sub_2225E9124(a1, 2281701376, 0);
  }
  if (i)
  {
    sub_2225E9E58((uint64_t)a1, v5, (uint64_t)a1[5] - v5);
    uint64_t v14 = (uint64_t)a1[5] - v4;
    sub_2225E9124(a1, 2415919104, v14);
  }
}

void sub_2225E9304(__n128 *a1)
{
  uint64_t v2 = (char *)a1->n128_u64[0];
  unint64_t v3 = a1->n128_u64[1];
  if (a1->n128_u64[0] < v3) {
    goto LABEL_5;
  }
  sub_2225E9794((uint64_t)a1, 14);
  while (1)
  {
    uint64_t v2 = (char *)a1->n128_u64[0];
    unint64_t v3 = a1->n128_u64[1];
LABEL_5:
    if ((unint64_t)v2 >= v3) {
      break;
    }
    a1->n128_u64[0] = (unint64_t)(v2 + 1);
    sub_2225EA2B4(a1, *v2);
  }
}

void **sub_2225E9360(void **result, int a2, int a3)
{
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = (char *)result[5];
  uint64_t v7 = (char *)*result;
  unint64_t v8 = (unint64_t)result[1];
  if ((unint64_t)*result < v8 && *v7 == 94)
  {
    void *result = v7 + 1;
    uint64_t result = sub_2225E9124(result, 402653184, 0);
    unint64_t v9 = *(int32x2_t **)(v5 + 56);
    int32x2_t v10 = v9[9];
    int32x2_t v11 = vadd_s32(v10, (int32x2_t)0x100000001);
    v10.i32[0] |= 1u;
    v10.i32[1] = v11.i32[1];
    v9[9] = v10;
    uint64_t v7 = *(char **)v5;
    unint64_t v8 = *(void *)(v5 + 8);
  }
  if ((unint64_t)v7 < v8)
  {
    uint64_t result = 0;
    int v12 = 1;
    do
    {
      if ((unint64_t)(v7 + 1) < v8 && *v7 == a2 && v7[1] == a3) {
        break;
      }
      uint64_t result = (void **)sub_2225EB1D0(v5, v12);
      int v12 = 0;
      uint64_t v7 = *(char **)v5;
      unint64_t v8 = *(void *)(v5 + 8);
    }
    while (*(void *)v5 < v8);
    __n128 v13 = *(char **)(v5 + 40);
    if (!result) {
      goto LABEL_13;
    }
    *(void *)(v5 + 40) = v13 - 1;
    uint64_t result = sub_2225E9124((void **)v5, 0x20000000, 0);
    uint64_t v14 = *(void *)(v5 + 56);
    *(_DWORD *)(v14 + 72) |= 2u;
    ++*(_DWORD *)(v14 + 80);
  }
  __n128 v13 = *(char **)(v5 + 40);
LABEL_13:
  if (v13 == v6)
  {
    return (void **)sub_2225E9794(v5, 14);
  }
  return result;
}

uint64_t sub_2225E94A0(uint64_t result, uint64_t a2)
{
  if (!*(_DWORD *)(result + 16))
  {
    uint64_t v3 = *(void *)(a2 + 88);
    uint64_t v4 = -128;
    uint64_t v5 = -127;
    do
    {
      if (!*(unsigned char *)(v3 + v4))
      {
        uint64_t result = sub_2225EB624(a2, v4);
        if (result)
        {
          int v6 = *(_DWORD *)(a2 + 84);
          *(_DWORD *)(a2 + 84) = v6 + 1;
          *(unsigned char *)(v3 + v4) = v6;
          if (v4 <= 126)
          {
            uint64_t v7 = v5;
            do
            {
              if (!*(unsigned char *)(v3 + v7))
              {
                uint64_t result = sub_2225EB668(a2, v4, v7);
                if (result) {
                  *(unsigned char *)(v3 + v7) = v6;
                }
              }
              ++v7;
            }
            while (v7 != 128);
          }
        }
      }
      ++v4;
      ++v5;
    }
    while (v4 != 128);
  }
  return result;
}

uint64_t sub_2225E955C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  *(void *)(a2 + 48) = v4;
  uint64_t result = (uint64_t)malloc_type_realloc(*(void **)(a1 + 24), 8 * v4, 0x100004000313F17uLL);
  *(void *)(a2 + 8) = result;
  if (!result)
  {
    uint64_t result = sub_2225E9794(a1, 12);
    *(void *)(a2 + 8) = *(void *)(a1 + 24);
  }
  return result;
}

unsigned char *sub_2225E95C0(unsigned char *result, uint64_t a2)
{
  if (*((_DWORD *)result + 4)) {
    return result;
  }
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)(a2 + 8) + 8;
  uint64_t result = (unsigned char *)v6;
  do
  {
    uint64_t v8 = *(void *)result;
    result += 8;
    LODWORD(v7) = v8;
    unint64_t v9 = ((unint64_t)(v8 & 0xF8000000) - 0x10000000) >> 27;
    if (v9 > 0xD) {
      goto LABEL_15;
    }
    if (((1 << v9) & 0x1880) != 0) {
      goto LABEL_18;
    }
    if (((1 << v9) & 0x2200) != 0)
    {
      uint64_t result = (unsigned char *)v6;
      while (1)
      {
        result += 8 * (v7 & 0x7FFFFFF);
        uint64_t v7 = *(void *)result;
        uint64_t v10 = *(void *)result & 0xF8000000;
        if (v10 == 1610612736) {
          break;
        }
        if (v10 != -2013265920)
        {
          if (v10 == -1879048192) {
            break;
          }
          *(_DWORD *)(a2 + 72) |= 4u;
          return result;
        }
      }
LABEL_15:
      if (v5 > *(int *)(a2 + 104))
      {
        *(_DWORD *)(a2 + 104) = v5;
        uint64_t v3 = v4;
      }
      uint64_t v5 = 0;
      goto LABEL_18;
    }
    if (v9) {
      goto LABEL_15;
    }
    if (!v5) {
      uint64_t v4 = (uint64_t *)v6;
    }
    ++v5;
LABEL_18:
    uint64_t v6 = (uint64_t)result;
  }
  while ((v7 & 0xF8000000) != 0x8000000);
  uint64_t v11 = *(int *)(a2 + 104);
  if (v11)
  {
    uint64_t result = malloc_type_malloc(v11 + 1, 0xC6A26501uLL);
    *(void *)(a2 + 96) = result;
    if (result)
    {
      uint64_t v12 = *(unsigned int *)(a2 + 104);
      if ((int)v12 >= 1)
      {
        do
        {
          do
          {
            uint64_t v14 = *v3++;
            char v13 = v14;
          }
          while ((v14 & 0xF8000000) != 0x10000000);
          *result++ = v13;
        }
        while (v12-- > 1);
      }
      void *result = 0;
    }
    else
    {
      *(_DWORD *)(a2 + 104) = 0;
    }
  }
  return result;
}

uint64_t sub_2225E9724(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 16)) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(*(void *)(a2 + 8) + 8);
  do
  {
    uint64_t v5 = *v4++;
    uint64_t v6 = v5 & 0xF8000000;
    if (v3 <= result) {
      uint64_t v7 = result;
    }
    else {
      uint64_t v7 = v3;
    }
    uint64_t v8 = v3 - 1;
    if (v6 == 1207959552) {
      ++v3;
    }
    if (v6 == 1342177280)
    {
      uint64_t v3 = v8;
      uint64_t result = v7;
    }
  }
  while (v6 != 0x8000000);
  if (v3) {
    *(_DWORD *)(a2 + 72) |= 4u;
  }
  return result;
}

uint64_t sub_2225E9794(uint64_t result, int a2)
{
  if (!*(_DWORD *)(result + 16)) {
    *(_DWORD *)(result + 16) = a2;
  }
  *(void *)uint64_t result = &unk_267F7E168;
  *(void *)(result + 8) = &unk_267F7E168;
  return result;
}

void sub_2225E97B0(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(unsigned char **)a1;
  uint64_t v3 = (char *)(*(void *)a1 + 1);
  *(void *)a1 = v3;
  int v4 = (char)*v2;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v4 <= 62)
  {
    switch(*v2)
    {
      case '$':
        sub_2225E9124((void **)a1, 0x20000000, 0);
        uint64_t v6 = *(void *)(v1 + 56);
        *(_DWORD *)(v6 + 72) |= 2u;
        ++*(_DWORD *)(v6 + 80);
        goto LABEL_42;
      case '(':
        if ((unint64_t)v3 >= *(void *)(a1 + 8)) {
          sub_2225E9794(a1, 8);
        }
        uint64_t v14 = *(void *)(v1 + 56);
        uint64_t v15 = *(void *)(v14 + 112) + 1;
        *(void *)(v14 + 112) = v15;
        if (v15 <= 9) {
          *(void *)(v1 + 8 * v15 + 64) = *(void *)(v1 + 40);
        }
        sub_2225E9124((void **)v1, 1744830464, v15);
        if (*(void *)v1 >= *(void *)(v1 + 8) || **(unsigned char **)v1 != 41) {
          sub_2225E919C(v1, 41);
        }
        if (v15 <= 9) {
          *(void *)(v1 + 8 * v15 + 144) = *(void *)(v1 + 40);
        }
        sub_2225E9124((void **)v1, 1879048192, v15);
        size_t v16 = *(char **)v1;
        if (*(void *)v1 >= *(void *)(v1 + 8)) {
          goto LABEL_29;
        }
        *(void *)uint64_t v1 = v16 + 1;
        if (*v16 != 41) {
          goto LABEL_29;
        }
        goto LABEL_42;
      case ')':
LABEL_29:
        a1 = v1;
        int v13 = 8;
        goto LABEL_30;
      case '*':
      case '+':
        goto LABEL_17;
      case '.':
        if ((*(unsigned char *)(*(void *)(a1 + 56) + 40) & 8) != 0) {
          sub_2225E9E7C(a1);
        }
        else {
          sub_2225E9124((void **)a1, 671088640, 0);
        }
        goto LABEL_42;
      default:
        goto LABEL_38;
    }
  }
  if (v4 > 93)
  {
    switch(v4)
    {
      case '^':
        sub_2225E9124((void **)a1, 402653184, 0);
        char v12 = 0;
        uint64_t v17 = *(int32x2_t **)(v1 + 56);
        int32x2_t v18 = v17[9];
        int32x2_t v19 = vadd_s32(v18, (int32x2_t)0x100000001);
        v18.i32[0] |= 1u;
        v18.i32[1] = v19.i32[1];
        v17[9] = v18;
        goto LABEL_43;
      case '{':
        if ((unint64_t)v3 < *(void *)(a1 + 8) && *v3 - 48 <= 9) {
          sub_2225E9794(a1, 13);
        }
        break;
      case '|':
        int v13 = 14;
LABEL_30:
        sub_2225E9794(a1, v13);
LABEL_42:
        char v12 = 1;
        goto LABEL_43;
    }
LABEL_38:
    long long v20 = (__n128 *)v1;
    int v7 = v4;
LABEL_41:
    sub_2225EA2B4(v20, v7);
    goto LABEL_42;
  }
  if (v4 == 63)
  {
LABEL_17:
    int v13 = 13;
    goto LABEL_30;
  }
  if (v4 == 91)
  {
    sub_2225E9ED0(a1);
    goto LABEL_42;
  }
  if (v4 != 92) {
    goto LABEL_38;
  }
  if ((unint64_t)v3 >= *(void *)(a1 + 8))
  {
    sub_2225E9794(a1, 5);
    uint64_t v3 = *(char **)v1;
  }
  *(void *)uint64_t v1 = v3 + 1;
  int v7 = *v3;
  if ((v7 - 49) > 8)
  {
    long long v20 = (__n128 *)v1;
    goto LABEL_41;
  }
  uint64_t v8 = (v7 - 48);
  uint64_t v9 = v1 + 8 * v8;
  uint64_t v11 = *(void *)(v9 + 144);
  uint64_t v10 = (uint64_t *)(v9 + 144);
  if (!v11)
  {
    a1 = v1;
    int v13 = 6;
    goto LABEL_30;
  }
  sub_2225E9124((void **)v1, 939524096, v8);
  sub_2225EA248(v1, *(void *)(v1 + 8 * v8 + 64) + 1, *v10);
  sub_2225E9124((void **)v1, 0x40000000, v8);
  char v12 = 1;
  *(_DWORD *)(*(void *)(v1 + 56) + 120) = 1;
LABEL_43:
  long long v21 = *(char **)v1;
  unint64_t v22 = *(void *)(v1 + 8);
  if (*(void *)v1 >= v22) {
    return;
  }
  int v23 = *v21;
  if ((v23 - 42) >= 2 && v23 != 63)
  {
    long long v24 = (unsigned __int8 *)(v21 + 1);
    BOOL v25 = v23 != 123 || (unint64_t)v24 >= v22;
    if (v25 || *v24 - 48 > 9) {
      return;
    }
  }
  int v26 = (char)v23;
  *(void *)uint64_t v1 = v21 + 1;
  if ((v12 & 1) == 0) {
    sub_2225E9794(v1, 13);
  }
  if (v26 > 62)
  {
    if (v26 == 63)
    {
      sub_2225E9DB4((void *)v1, 2013265920, *(void *)(v1 + 40) - v5 + 1, v5);
      sub_2225E9124((void **)v1, 0x80000000, *(void *)(v1 + 40) - v5);
      sub_2225E9E58(v1, v5, *(void *)(v1 + 40) - v5);
      sub_2225E9124((void **)v1, 2281701376, 0);
      sub_2225E9E58(v1, *(void *)(v1 + 40) - 1, 1);
      long long v28 = (void **)v1;
      uint64_t v29 = 2415919104;
      uint64_t v27 = 2;
      goto LABEL_66;
    }
    if (v26 == 123)
    {
      uint64_t v30 = sub_2225EA368((uint64_t *)v1);
      int v31 = v30;
      unint64_t v32 = *(char **)v1;
      uint64_t v33 = v30;
      if (*(void *)v1 < *(void *)(v1 + 8))
      {
        uint64_t v33 = v30;
        if (*v32 == 44)
        {
          *(void *)uint64_t v1 = v32 + 1;
          if (v32[1] - 48 > 9)
          {
            uint64_t v33 = 256;
          }
          else
          {
            uint64_t v33 = sub_2225EA368((uint64_t *)v1);
            if (v31 > (int)v33) {
              sub_2225E9794(v1, 10);
            }
          }
        }
      }
      sub_2225EA3FC((void **)v1, v5, v31, v33);
      uint64_t v40 = *(char **)v1;
      unint64_t v39 = *(void *)(v1 + 8);
      if (*(void *)v1 >= v39)
      {
LABEL_88:
        sub_2225E9794(v1, 9);
      }
      else
      {
        if (*v40 == 125)
        {
          *(void *)uint64_t v1 = v40 + 1;
          goto LABEL_67;
        }
        unint64_t v41 = v39 - (void)v40;
        uint64_t v42 = v40 + 1;
        while (*(v42 - 1) != 125)
        {
          *(void *)uint64_t v1 = v42++;
          if (!--v41) {
            goto LABEL_88;
          }
        }
      }
      sub_2225E9794(v1, 10);
    }
  }
  else
  {
    if (v26 == 42)
    {
      sub_2225E9DB4((void *)v1, 1207959552, *(void *)(v1 + 40) - v5 + 1, v5);
      sub_2225E9124((void **)v1, 1342177280, *(void *)(v1 + 40) - v5);
      sub_2225E9DB4((void *)v1, 1476395008, *(void *)(v1 + 40) - v5 + 1, v5);
      uint64_t v27 = *(void *)(v1 + 40) - v5;
      long long v28 = (void **)v1;
      uint64_t v29 = 1610612736;
      goto LABEL_66;
    }
    if (v26 == 43)
    {
      sub_2225E9DB4((void *)v1, 1207959552, *(void *)(v1 + 40) - v5 + 1, v5);
      uint64_t v27 = *(void *)(v1 + 40) - v5;
      long long v28 = (void **)v1;
      uint64_t v29 = 1342177280;
LABEL_66:
      sub_2225E9124(v28, v29, v27);
    }
  }
LABEL_67:
  uint64_t v34 = *(char **)v1;
  unint64_t v35 = *(void *)(v1 + 8);
  if (*(void *)v1 < v35)
  {
    if ((int v36 = *v34, (v36 - 42) < 2)
      || v36 == 63
      || ((uint64_t v37 = (unsigned __int8 *)(v34 + 1), v36 == 123) ? (v38 = (unint64_t)v37 >= v35) : (v38 = 1),
          !v38 && *v37 - 48 <= 9))
    {
      sub_2225E9794(v1, 13);
    }
  }
}

void *sub_2225E9DB4(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*((_DWORD *)result + 4))
  {
    uint64_t v5 = result;
    uint64_t v6 = result[5];
    sub_2225E9124((void **)result, a2, a3);
    uint64_t v7 = 0;
    uint64_t v8 = v5[3];
    uint64_t v9 = *(void *)(v8 + 8 * v6);
    do
    {
      uint64_t v10 = &v5[v7];
      uint64_t v11 = v5[v7 + 9];
      if (v11 >= a4) {
        v10[9] = v11 + 1;
      }
      uint64_t v12 = v10[19];
      if (v12 >= a4) {
        v10[19] = v12 + 1;
      }
      ++v7;
    }
    while (v7 != 9);
    uint64_t result = memmove((void *)(v8 + 8 * a4 + 8), (const void *)(v8 + 8 * a4), 8 * (v5[5] + ~a4));
    *(void *)(v5[3] + 8 * a4) = v9;
  }
  return result;
}

uint64_t sub_2225E9E58(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!*(_DWORD *)(result + 16)) {
    *(void *)(*(void *)(result + 24) + 8 * a2) = *(void *)(*(void *)(result + 24) + 8 * a2) & 0xF8000000 | a3;
  }
  return result;
}

__n128 sub_2225E9E7C(uint64_t a1)
{
  int v4 = 6097502;
  __n128 v3 = *(__n128 *)a1;
  *(void *)a1 = &v4;
  *(void *)(a1 + 8) = (char *)&v4 + 3;
  sub_2225E9ED0(a1);
  __n128 result = v3;
  *(__n128 *)a1 = v3;
  return result;
}

void **sub_2225E9ED0(uint64_t a1)
{
  uint64_t v2 = *(const char **)a1;
  if ((unint64_t)(*(void *)a1 + 5) < *(void *)(a1 + 8))
  {
    if (!strncmp(*(const char **)a1, "[:<:]]", 6uLL))
    {
      uint64_t v30 = (void **)a1;
      uint64_t v31 = 2550136832;
    }
    else
    {
      if (strncmp(v2, "[:>:]]", 6uLL)) {
        goto LABEL_4;
      }
      uint64_t v30 = (void **)a1;
      uint64_t v31 = 2684354560;
    }
    __n128 result = sub_2225E9124(v30, v31, 0);
    *(void *)a1 += 6;
    return result;
  }
LABEL_4:
  __n128 result = (void **)sub_2225EA6DC(a1);
  if (!result) {
    return result;
  }
  int v4 = result;
  uint64_t v5 = *(const char **)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  if (*(void *)a1 < v6 && *v5 == 94)
  {
    char v7 = 0;
    *(void *)a1 = ++v5;
  }
  else
  {
    char v7 = 1;
  }
  if ((unint64_t)v5 < v6)
  {
    uint64_t v8 = *(unsigned __int8 *)v5;
    uint64_t v9 = v8;
    if (v8 != 93)
    {
      if (v8 != 45) {
        goto LABEL_19;
      }
      uint64_t v9 = 45;
    }
    *(void *)a1 = v5 + 1;
    *((unsigned char *)*result + v9) |= *((unsigned char *)result + 8);
    *((unsigned char *)result + 9) += v8;
  }
LABEL_19:
  while (1)
  {
    uint64_t v12 = *(const char **)a1;
    unint64_t v13 = *(void *)(a1 + 8);
    if (*(void *)a1 >= v13) {
      break;
    }
    int v10 = *(unsigned __int8 *)v12;
    if (v10 == 93) {
      break;
    }
    uint64_t v11 = v12 + 1;
    if ((unint64_t)v11 < v13 && v10 == 45 && *v11 == 93)
    {
      *(void *)a1 = v11;
      *((unsigned char *)*v4 + 45) |= *((unsigned char *)v4 + 8);
      *((unsigned char *)v4 + 9) += 45;
      uint64_t v12 = *(const char **)a1;
      unint64_t v13 = *(void *)(a1 + 8);
      break;
    }
    sub_2225EA834(a1, (uint64_t)v4);
  }
  if ((unint64_t)v12 >= v13 || (*(void *)a1 = v12 + 1, *v12 != 93)) {
    sub_2225E9794(a1, 7);
  }
  if (*(_DWORD *)(a1 + 16)) {
    goto LABEL_44;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  if ((*(unsigned char *)(v14 + 40) & 2) != 0)
  {
    int v15 = *(_DWORD *)(v14 + 16);
    if (v15 >= 1)
    {
      unsigned int v16 = v15 + 1;
      do
      {
        uint64_t v17 = *v4;
        unsigned __int8 v18 = *((unsigned char *)v4 + 8);
        if ((v18 & *((unsigned char *)*v4 + (v16 - 2))) != 0)
        {
          if (isalpha(v16 - 2))
          {
            int v19 = sub_2225EAB20(v16 - 2);
            if (v16 - 2 != v19)
            {
              v17[v19] |= v18;
              *((unsigned char *)v4 + 9) += v19;
            }
          }
        }
        --v16;
      }
      while (v16 > 1);
    }
  }
  if ((v7 & 1) == 0)
  {
    uint64_t v20 = *(void *)(a1 + 56);
    int v21 = *(_DWORD *)(v20 + 16);
    if (v21 >= 1)
    {
      unsigned int v22 = v21 + 1;
      do
      {
        char v23 = v22 - 2;
        long long v24 = *v4;
        uint64_t v25 = (v22 - 2);
        int v26 = *((unsigned __int8 *)*v4 + v25);
        int v27 = *((unsigned __int8 *)v4 + 8);
        if ((v27 & v26) != 0)
        {
          v24[v25] = v26 & ~(_BYTE)v27;
          char v28 = *((unsigned char *)v4 + 9) - v23;
        }
        else
        {
          v24[v25] = v27 | v26;
          char v28 = *((unsigned char *)v4 + 9) + v23;
        }
        *((unsigned char *)v4 + 9) = v28;
        --v22;
      }
      while (v22 > 1);
      uint64_t v20 = *(void *)(a1 + 56);
    }
    if ((*(unsigned char *)(v20 + 40) & 8) != 0)
    {
      *((unsigned char *)*v4 + 10) &= ~*((unsigned char *)v4 + 8);
      *((unsigned char *)v4 + 9) -= 10;
    }
  }
  if (sub_2225EAB78(a1, (uint64_t)v4) == 1)
  {
    int v29 = sub_2225EABBC(a1, (uint64_t)v4);
    sub_2225EA2B4((__n128 *)a1, v29);
LABEL_44:
    return (void **)sub_2225EAAB4(a1, (uint64_t)v4);
  }
  uint64_t v32 = (int)sub_2225EAC0C(a1, (uint64_t)v4);

  return sub_2225E9124((void **)a1, 805306368, v32);
}

uint64_t sub_2225EA248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = a3 - a2;
  if (a3 != a2)
  {
    sub_2225EB104((void **)a1, *(void *)(a1 + 32) + v4);
    memmove((void *)(*(void *)(a1 + 24) + 8 * *(void *)(a1 + 40)), (const void *)(*(void *)(a1 + 24) + 8 * a2), 8 * v4);
    *(void *)(a1 + 40) += v4;
  }
  return v3;
}

double sub_2225EA2B4(__n128 *a1, int a2)
{
  unint64_t v4 = a1[3].n128_u64[1];
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t v6 = a2;
  if ((*(unsigned char *)(v4 + 40) & 2) != 0 && isalpha(a2) && sub_2225EAB20(a2) != a2)
  {
    *(void *)&double result = sub_2225EB17C(a1, a2).n128_u64[0];
  }
  else
  {
    sub_2225E9124((void **)a1, 0x10000000, v6);
    if (!*(unsigned char *)(v5 + a2))
    {
      unint64_t v8 = a1[3].n128_u64[1];
      int v9 = *(_DWORD *)(v8 + 84);
      *(_DWORD *)(v8 + 84) = v9 + 1;
      *(unsigned char *)(v5 + a2) = v9;
    }
  }
  return result;
}

uint64_t sub_2225EA368(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = (char *)a1[1];
  if (*a1 >= (unint64_t)v1)
  {
    uint64_t v4 = 0;
LABEL_11:
    sub_2225E9794((uint64_t)a1, 10);
    return v4;
  }
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  while (1)
  {
    uint64_t v5 = (char *)(v2 + v3);
    if (*(unsigned __int8 *)(v2 + v3) - 48 > 9 || (int)v4 > 255) {
      break;
    }
    *a1 = (uint64_t)(v5 + 1);
    uint64_t v4 = (*v5 + 10 * v4 - 48);
    ++v3;
    if (v5 + 1 == v1)
    {
      LODWORD(v3) = 1;
      break;
    }
  }
  if (!v3 || (int)v4 >= 256) {
    goto LABEL_11;
  }
  return v4;
}

void **sub_2225EA3FC(void **result, uint64_t a2, int a3, uint64_t a4)
{
  if (!*((_DWORD *)result + 4))
  {
    uint64_t v7 = (uint64_t)result;
LABEL_4:
    if (a4 == 256) {
      int v8 = 3;
    }
    else {
      int v8 = 2;
    }
    if ((int)a4 >= 2) {
      int v9 = v8;
    }
    else {
      int v9 = a4;
    }
    do
    {
      uint64_t v10 = *(void *)(v7 + 40);
      if (a3 == 256) {
        int v11 = 3;
      }
      else {
        int v11 = 2;
      }
      if (a3 < 2) {
        int v11 = a3;
      }
      int v12 = v9 + 8 * v11;
      if (v12 != 19)
      {
        switch(v12)
        {
          case 0:
            *(void *)(v7 + 40) = a2;
            return result;
          case 1:
          case 2:
          case 3:
            sub_2225E9DB4((void *)v7, 2013265920, v10 - a2 + 1, a2);
            sub_2225EA3FC(v7, a2 + 1, 1, a4);
            sub_2225E9124((void **)v7, 0x80000000, *(void *)(v7 + 40) - a2);
            sub_2225E9E58(v7, a2, *(void *)(v7 + 40) - a2);
            sub_2225E9124((void **)v7, 2281701376, 0);
            sub_2225E9E58(v7, *(void *)(v7 + 40) - 1, 1);
            unint64_t v13 = (void **)v7;
            uint64_t v14 = 2415919104;
            uint64_t v15 = 2;
            goto LABEL_29;
          case 9:
            return result;
          case 10:
            sub_2225E9DB4((void *)v7, 2013265920, v10 - a2 + 1, a2);
            sub_2225E9124((void **)v7, 0x80000000, *(void *)(v7 + 40) - a2);
            sub_2225E9E58(v7, a2, *(void *)(v7 + 40) - a2);
            sub_2225E9124((void **)v7, 2281701376, 0);
            a3 = 1;
            sub_2225E9E58(v7, *(void *)(v7 + 40) - 1, 1);
            sub_2225E9124((void **)v7, 2415919104, 2);
            double result = (void **)sub_2225EA248(v7, a2 + 1, v10 + 1);
            a2 = (uint64_t)result;
            goto LABEL_21;
          case 11:
            sub_2225E9DB4((void *)v7, 1207959552, v10 - a2 + 1, a2);
            uint64_t v15 = *(void *)(v7 + 40) - a2;
            unint64_t v13 = (void **)v7;
            uint64_t v14 = 1342177280;
LABEL_29:
            return sub_2225E9124(v13, v14, v15);
          case 18:
            double result = (void **)sub_2225EA248(v7, a2, *(void *)(v7 + 40));
            a2 = (uint64_t)result;
            --a3;
LABEL_21:
            a4 = (a4 - 1);
            if (*(_DWORD *)(v7 + 16)) {
              return result;
            }
            goto LABEL_4;
          default:
            return (void **)sub_2225E9794(v7, 15);
        }
      }
      double result = (void **)sub_2225EA248(v7, a2, *(void *)(v7 + 40));
      a2 = (uint64_t)result;
      --a3;
    }
    while (!*(_DWORD *)(v7 + 16));
  }
  return result;
}

uint64_t sub_2225EA6DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(unsigned int *)(v2 + 20);
  size_t v4 = *(int *)(v2 + 16);
  *(_DWORD *)(v2 + 20) = v3 + 1;
  uint64_t v5 = *(int *)(a1 + 48);
  if ((int)v3 >= (int)v5)
  {
    unint64_t v6 = v5 + 8;
    *(_DWORD *)(a1 + 48) = v5 + 8;
    uint64_t v7 = malloc_type_realloc(*(void **)(v2 + 24), 32 * (v5 + 8), 0x1010040FE74B554uLL);
    uint64_t v2 = *(void *)(a1 + 56);
    if (!v7) {
      goto LABEL_11;
    }
    size_t v8 = (v6 >> 3) * v4;
    *(void *)(v2 + 24) = v7;
    int v9 = (char *)malloc_type_realloc(*(void **)(v2 + 32), v8, 0xC063401DuLL);
    uint64_t v2 = *(void *)(a1 + 56);
    if (!v9) {
      goto LABEL_11;
    }
    *(void *)(v2 + 32) = v9;
    if ((int)v3 >= 1)
    {
      uint64_t v10 = 0;
      int v11 = *(void **)(v2 + 24);
      do
      {
        void *v11 = &v9[(v10 >> 3) * (uint64_t)(int)v4];
        v11 += 4;
        ++v10;
      }
      while (v3 != v10);
    }
    bzero(&v9[v8 - v4], v4);
    uint64_t v2 = *(void *)(a1 + 56);
  }
  uint64_t v12 = *(void *)(v2 + 24);
  if (v12)
  {
    uint64_t v13 = *(void *)(v2 + 32);
    if (v13)
    {
      uint64_t result = v12 + 32 * (int)v3;
      *(void *)uint64_t result = v13 + (int)v4 * (uint64_t)((int)v3 / 8);
      *(_WORD *)(result + 8) = (1 << (v3 & 7));
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      return result;
    }
  }
LABEL_11:
  free(*(void **)(v2 + 24));
  uint64_t v15 = *(void *)(a1 + 56);
  *(void *)(v15 + 24) = 0;
  free(*(void **)(v15 + 32));
  *(void *)(*(void *)(a1 + 56) + 32) = 0;
  sub_2225E9794(a1, 12);
  return 0;
}

uint64_t sub_2225EA834(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(const char **)a1;
  unint64_t v4 = *(void *)(a1 + 8);
  if (*(void *)a1 >= v4) {
    goto LABEL_8;
  }
  int v6 = *v5;
  if (v6 == 45)
  {
LABEL_48:
    uint64_t v21 = a1;
    int v22 = 11;
    goto LABEL_49;
  }
  BOOL v7 = v6 == 91;
  size_t v8 = (char *)(v5 + 1);
  if (!v7 || (unint64_t)v8 >= v4) {
    goto LABEL_8;
  }
  int v16 = *v8;
  if (v16 == 61)
  {
    char v23 = v5 + 2;
    *(void *)a1 = v23;
    if ((unint64_t)v23 >= v4)
    {
      sub_2225E9794(a1, 7);
      char v23 = *(const char **)a1;
    }
    int v24 = *(unsigned __int8 *)v23;
    if (v24 == 93 || v24 == 45) {
      sub_2225E9794(a1, 3);
    }
    uint64_t result = sub_2225EAE2C((const char **)a1, a2);
    int v19 = *(const char **)a1;
    unint64_t v25 = *(void *)(a1 + 8);
    if (*(void *)a1 >= v25)
    {
      uint64_t result = sub_2225E9794(a1, 7);
      int v19 = *(const char **)a1;
      unint64_t v25 = *(void *)(a1 + 8);
    }
    if ((unint64_t)v19 >= v25 || (unint64_t)(v19 + 1) >= v25 || *v19 != 61 || v19[1] != 93)
    {
      uint64_t v21 = a1;
      int v22 = 3;
      goto LABEL_49;
    }
LABEL_44:
    *(void *)a1 = v19 + 2;
    return result;
  }
  if (v16 != 58)
  {
LABEL_8:
    uint64_t result = sub_2225EAE78(a1);
    int v11 = result;
    uint64_t v12 = *(const char **)a1;
    unint64_t v13 = *(void *)(a1 + 8);
    if (*(void *)a1 >= v13
      || ((uint64_t v14 = v12 + 1, *v12 == 45) ? (v15 = (unint64_t)v14 >= v13) : (v15 = 1),
          v15
       || *v14 == 93
       || ((*(void *)a1 = v14, *v14 != 45) ? (uint64_t result = sub_2225EAE78(a1)) : (*(void *)a1 = v12 + 2, uint64_t result = 45),
           v11 <= (int)result)))
    {
      do
      {
        *(unsigned char *)(*(void *)a2 + v11) |= *(unsigned char *)(a2 + 8);
        *(unsigned char *)(a2 + 9) += v11++;
      }
      while (result + 1 != v11);
      return result;
    }
    goto LABEL_48;
  }
  uint64_t v17 = v5 + 2;
  *(void *)a1 = v17;
  if ((unint64_t)v17 >= v4)
  {
    sub_2225E9794(a1, 7);
    uint64_t v17 = *(const char **)a1;
  }
  int v18 = *(unsigned __int8 *)v17;
  if (v18 == 93 || v18 == 45) {
    sub_2225E9794(a1, 4);
  }
  uint64_t result = sub_2225EACEC((const char **)a1, a2);
  int v19 = *(const char **)a1;
  unint64_t v20 = *(void *)(a1 + 8);
  if (*(void *)a1 >= v20)
  {
    uint64_t result = sub_2225E9794(a1, 7);
    int v19 = *(const char **)a1;
    unint64_t v20 = *(void *)(a1 + 8);
  }
  if ((unint64_t)v19 < v20 && (unint64_t)(v19 + 1) < v20 && *v19 == 58 && v19[1] == 93) {
    goto LABEL_44;
  }
  uint64_t v21 = a1;
  int v22 = 4;
LABEL_49:

  return sub_2225E9794(v21, v22);
}

uint64_t sub_2225EAAB4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 56);
  uint64_t v3 = *(int *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24) + 32 * *(int *)(v2 + 20);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      *(unsigned char *)(*(void *)a2 + i) &= ~*(unsigned char *)(a2 + 8);
      *(unsigned char *)(a2 + 9) -= i;
    }
  }
  if (v4 - 32 == a2) {
    --*(_DWORD *)(*(void *)(result + 56) + 20);
  }
  return result;
}

uint64_t sub_2225EAB20(unsigned __int8 a1)
{
  unsigned __int8 v1 = a1;
  int v2 = a1;
  if (isupper(a1))
  {
    unsigned __int8 v3 = tolower(v2);
LABEL_5:
    unsigned __int8 v1 = v3;
    return (char)v1;
  }
  if (islower(v2))
  {
    unsigned __int8 v3 = toupper(v2);
    goto LABEL_5;
  }
  return (char)v1;
}

uint64_t sub_2225EAB78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(int *)(*(void *)(a1 + 56) + 16);
  if (!v2) {
    return 0;
  }
  LODWORD(result) = 0;
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((*(unsigned char *)(a2 + 8) & *(unsigned char *)(*(void *)a2 + i)) != 0) {
      uint64_t result = (result + 1);
    }
    else {
      uint64_t result = result;
    }
  }
  return result;
}

uint64_t sub_2225EABBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(int *)(*(void *)(a1 + 56) + 16);
  if (!v2) {
    return 0;
  }
  int v3 = 0;
  uint64_t v4 = 0;
  while ((*(unsigned char *)(a2 + 8) & *(unsigned char *)(*(void *)a2 + v4)) == 0)
  {
    ++v4;
    v3 += 0x1000000;
    if (v2 == v4) {
      return 0;
    }
  }
  return (v3 >> 24);
}

unint64_t sub_2225EAC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 56);
  unint64_t v3 = *(void *)(v2 + 24);
  uint64_t v4 = *(int *)(v2 + 20);
  if ((int)v4 < 1)
  {
LABEL_14:
    unint64_t v9 = a2;
  }
  else
  {
    unint64_t v6 = v3 + 32 * v4;
    unint64_t v7 = *(int *)(v2 + 16);
    if (v7 <= 1) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = v7;
    }
    unint64_t v9 = v3;
    while (1)
    {
      if (v9 != a2 && *(unsigned __int8 *)(v9 + 9) == *(unsigned __int8 *)(a2 + 9))
      {
        uint64_t v10 = 0;
        if (v7)
        {
          while (((*(unsigned char *)(v9 + 8) & *(unsigned char *)(*(void *)v9 + v10)) == 0) != ((*(unsigned char *)(a2 + 8) & *(unsigned char *)(*(void *)a2 + v10)) != 0))
          {
            if (v8 == ++v10)
            {
              uint64_t v10 = v8;
              break;
            }
          }
        }
        if (v10 == v7) {
          break;
        }
      }
      v9 += 32;
      if (v9 >= v6) {
        goto LABEL_14;
      }
    }
    sub_2225EAAB4(a1, a2);
    unint64_t v3 = *(void *)(*(void *)(a1 + 56) + 24);
  }
  return (v9 - v3) >> 5;
}

uint64_t sub_2225EACEC(const char **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  unint64_t v6 = *a1;
  if (*a1 < v5)
  {
    int64_t v7 = v5 - v4;
    unint64_t v6 = *a1;
    while (isalpha(*(unsigned __int8 *)v6))
    {
      *a1 = ++v6;
      if (!--v7)
      {
        unint64_t v6 = v5;
        break;
      }
    }
  }
  size_t v8 = v6 - v4;
  unint64_t v9 = "alnum";
  for (uint64_t i = (char *)&off_2646131D8; ; i += 24)
  {
    uint64_t result = strncmp(v9, v4, v8);
    if (!result && !v9[v8]) {
      break;
    }
    unint64_t v9 = (const char *)*((void *)i + 1);
    if (!v9)
    {
      return sub_2225E9794((uint64_t)a1, 4);
    }
  }
  uint64_t v12 = (unsigned __int8 *)*((void *)i - 1);
  unsigned __int8 v13 = *v12;
  if (*v12)
  {
    uint64_t v14 = v12 + 1;
    do
    {
      *(unsigned char *)(*(void *)a2 + v13) |= *(unsigned char *)(a2 + 8);
      *(unsigned char *)(a2 + 9) += v13;
      int v15 = *v14++;
      unsigned __int8 v13 = v15;
    }
    while (v15);
  }
  int v16 = *(char **)i;
  if (**(unsigned char **)i)
  {
    do
    {
      sub_2225EAF4C((uint64_t)a1, a2, v16);
      uint64_t result = strlen(v16);
      uint64_t v17 = &v16[result];
      int v18 = v17[1];
      int v16 = v17 + 1;
    }
    while (v18);
  }
  return result;
}

uint64_t sub_2225EAE2C(const char **a1, uint64_t a2)
{
  uint64_t result = sub_2225EB00C(a1, 61);
  *(unsigned char *)(*(void *)a2 + result) |= *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a2 + 9) += result;
  return result;
}

uint64_t sub_2225EAE78(uint64_t a1)
{
  uint64_t v2 = *(const char **)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  if (*(void *)a1 >= v3)
  {
    sub_2225E9794(a1, 7);
    uint64_t v2 = *(const char **)a1;
    unint64_t v3 = *(void *)(a1 + 8);
  }
  uint64_t v4 = v2 + 1;
  BOOL v5 = (unint64_t)v2 >= v3 || (unint64_t)v4 >= v3;
  if (!v5 && *v2 == 91 && *v4 == 46)
  {
    *(void *)a1 = v2 + 2;
    char v6 = sub_2225EB00C((const char **)a1, 46);
    size_t v8 = *(const char **)a1;
    unint64_t v9 = *(void *)(a1 + 8);
    if (*(void *)a1 < v9 && (unint64_t)(v8 + 1) < v9 && *v8 == 46 && v8[1] == 93) {
      *(void *)a1 = v8 + 2;
    }
    else {
      sub_2225E9794(a1, 3);
    }
  }
  else
  {
    *(void *)a1 = v4;
    return *v2;
  }
  return v6;
}

unsigned __int8 *sub_2225EAF4C(uint64_t a1, uint64_t a2, char *__s)
{
  uint64_t v6 = *(void *)(a2 + 16);
  size_t v7 = v6 + strlen(__s) + 1;
  *(void *)(a2 + 16) = v7;
  size_t v8 = (char *)malloc_type_realloc(*(void **)(a2 + 24), v7, 0xEFDA1DBDuLL);
  if (v8)
  {
    *(void *)(a2 + 24) = v8;
    unint64_t v9 = &v8[v6 - 1];
    uint64_t v10 = *(void *)(a2 + 16) - v6 + 1;
    return sub_2225EE3C4(v9, (unint64_t)__s, v10);
  }
  else
  {
    uint64_t v12 = *(void **)(a2 + 24);
    if (v12) {
      free(v12);
    }
    *(void *)(a2 + 24) = 0;
    return (unsigned __int8 *)sub_2225E9794(a1, 12);
  }
}

uint64_t sub_2225EB00C(const char **a1, int a2)
{
  uint64_t v2 = a1;
  uint64_t v4 = *a1;
  unint64_t v3 = (unint64_t)a1[1];
  if ((unint64_t)*a1 >= v3)
  {
LABEL_7:
    int v8 = 7;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      size_t v7 = &v4[v6 + 1];
      if ((unint64_t)v7 < v3 && v4[v6] == a2 && *v7 == 93) {
        break;
      }
      *a1 = v7;
      ++v6;
      v5 += 0x100000000;
      if (v3 - (void)v4 == v6) {
        goto LABEL_7;
      }
    }
    size_t v11 = v5 >> 32;
    uint64_t v12 = "NUL";
    unsigned __int8 v13 = &off_264613310;
    do
    {
      if (!strncmp(v12, v4, v11) && !v12[v11]) {
        return (char)*((unsigned char *)v13 - 8);
      }
      uint64_t v14 = *v13;
      v13 += 2;
      uint64_t v12 = v14;
    }
    while (v14);
    if (v6 == 1) {
      return *v4;
    }
    a1 = v2;
    int v8 = 3;
  }
  sub_2225E9794((uint64_t)a1, v8);
  return 0;
}

void **sub_2225EB104(void **result, uint64_t a2)
{
  if ((uint64_t)result[4] < a2)
  {
    uint64_t v3 = (uint64_t)result;
    uint64_t result = (void **)malloc_type_realloc(result[3], 8 * a2, 0x100004000313F17uLL);
    if (result)
    {
      *(void *)(v3 + 24) = result;
      *(void *)(v3 + 32) = a2;
    }
    else
    {
      return (void **)sub_2225E9794(v3, 12);
    }
  }
  return result;
}

__n128 sub_2225EB17C(__n128 *a1, char a2)
{
  char v5 = a2;
  __int16 v6 = 93;
  __n128 v4 = *a1;
  a1->n128_u64[0] = (unint64_t)&v5;
  a1->n128_u64[1] = (unint64_t)&v6 + 1;
  sub_2225E9ED0();
  __n128 result = v4;
  *a1 = v4;
  return result;
}

BOOL sub_2225EB1D0(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  char v5 = *(char **)a1;
  __int16 v6 = (char *)(*(void *)a1 + 1);
  *(void *)a1 = v6;
  int v7 = *v5;
  if (v7 == 92)
  {
    if ((unint64_t)v6 >= *(void *)(a1 + 8))
    {
      sub_2225E9794(a1, 5);
      __int16 v6 = *(char **)a1;
    }
    *(void *)a1 = v6 + 1;
    int v7 = *v6 | 0x100;
  }
  if (v7 <= 304)
  {
    if (v7 <= 90)
    {
      if (v7 == 42)
      {
        if (!a2) {
          sub_2225E9794(a1, 13);
        }
      }
      else if (v7 == 46)
      {
        if ((*(unsigned char *)(*(void *)(a1 + 56) + 40) & 8) != 0) {
          sub_2225E9E7C(a1);
        }
        else {
          sub_2225E9124((void **)a1, 671088640, 0);
        }
        goto LABEL_44;
      }
    }
    else
    {
      switch(v7)
      {
        case 91:
          sub_2225E9ED0(a1);
          goto LABEL_44;
        case 296:
          uint64_t v12 = *(void *)(a1 + 56);
          uint64_t v13 = *(void *)(v12 + 112) + 1;
          *(void *)(v12 + 112) = v13;
          if (v13 <= 9) {
            *(void *)(a1 + 8 * v13 + 64) = *(void *)(a1 + 40);
          }
          sub_2225E9124((void **)a1, 1744830464, v13);
          uint64_t v14 = *(unsigned char **)a1;
          unint64_t v15 = *(void *)(a1 + 8);
          if (*(void *)a1 < v15 && ((unint64_t)(v14 + 1) >= v15 || *v14 != 92 || v14[1] != 41)) {
            sub_2225E9360(a1, 92, 41);
          }
          if (v13 <= 9) {
            *(void *)(a1 + 8 * v13 + 144) = *(void *)(a1 + 40);
          }
          sub_2225E9124((void **)a1, 1879048192, v13);
          int v16 = *(unsigned char **)a1;
          unint64_t v17 = *(void *)(a1 + 8);
          if (*(void *)a1 < v17 && (unint64_t)(v16 + 1) < v17 && *v16 == 92 && v16[1] == 41)
          {
            *(void *)a1 = v16 + 2;
            goto LABEL_44;
          }
          goto LABEL_38;
        case 297:
LABEL_38:
          uint64_t v18 = a1;
          int v19 = 8;
LABEL_40:
          sub_2225E9794(v18, v19);
          goto LABEL_44;
      }
    }
LABEL_43:
    sub_2225EA2B4((__n128 *)a1, (char)v7);
    goto LABEL_44;
  }
  if ((v7 - 305) >= 9)
  {
    if (v7 == 379)
    {
      uint64_t v18 = a1;
      int v19 = 13;
      goto LABEL_40;
    }
    if (v7 != 381) {
      goto LABEL_43;
    }
    goto LABEL_38;
  }
  uint64_t v8 = (v7 & 0xFFFFFEFF) - 48;
  uint64_t v9 = a1 + 8 * v8;
  uint64_t v11 = *(void *)(v9 + 144);
  uint64_t v10 = (uint64_t *)(v9 + 144);
  if (v11)
  {
    sub_2225E9124((void **)a1, 939524096, (v7 & 0xFFFFFEFF) - 48);
    sub_2225EA248(a1, *(void *)(a1 + 8 * v8 + 64) + 1, *v10);
    sub_2225E9124((void **)a1, 0x40000000, (v7 & 0xFFFFFEFF) - 48);
  }
  else
  {
    sub_2225E9794(a1, 6);
  }
  *(_DWORD *)(*(void *)(a1 + 56) + 120) = 1;
LABEL_44:
  unint64_t v20 = *(unsigned __int8 **)a1;
  unint64_t v21 = *(void *)(a1 + 8);
  if (*(void *)a1 < v21)
  {
    int v22 = v20 + 1;
    int v23 = *v20;
    if (v23 == 42)
    {
      *(void *)a1 = v22;
      sub_2225E9DB4((void *)a1, 1207959552, *(void *)(a1 + 40) - v4 + 1, v4);
      sub_2225E9124((void **)a1, 1342177280, *(void *)(a1 + 40) - v4);
      sub_2225E9DB4((void *)a1, 1476395008, *(void *)(a1 + 40) - v4 + 1, v4);
      sub_2225E9124((void **)a1, 1610612736, *(void *)(a1 + 40) - v4);
      return 0;
    }
    if ((unint64_t)v22 < v21 && v23 == 92 && *v22 == 123)
    {
      *(void *)a1 = v20 + 2;
      uint64_t v24 = sub_2225EA368((uint64_t *)a1);
      int v25 = v24;
      int v27 = *(unsigned char **)a1;
      unint64_t v26 = *(void *)(a1 + 8);
      uint64_t v28 = v24;
      if (*(void *)a1 < v26)
      {
        uint64_t v28 = v24;
        if (*v27 == 44)
        {
          int v29 = v27 + 1;
          *(void *)a1 = v29;
          if ((unint64_t)v29 >= v26 || *v29 - 48 > 9)
          {
            uint64_t v28 = 256;
          }
          else
          {
            uint64_t v28 = sub_2225EA368((uint64_t *)a1);
            if (v25 > (int)v28) {
              sub_2225E9794(a1, 10);
            }
          }
        }
      }
      sub_2225EA3FC((void **)a1, v4, v25, v28);
      uint64_t v32 = *(unsigned char **)a1;
      unint64_t v31 = *(void *)(a1 + 8);
      if (*(void *)a1 >= v31)
      {
LABEL_70:
        sub_2225E9794(a1, 9);
      }
      else
      {
        uint64_t v33 = v32 + 1;
        if ((unint64_t)(v32 + 1) < v31 && *v32 == 92 && *v33 == 125)
        {
          *(void *)a1 = v32 + 2;
          return 0;
        }
        unint64_t v34 = v31 - (void)v32;
        while ((unint64_t)v33 >= v31 || *(v33 - 1) != 92 || *v33 != 125)
        {
          *(void *)a1 = v33++;
          if (!--v34) {
            goto LABEL_70;
          }
        }
      }
      sub_2225E9794(a1, 10);
      return 0;
    }
  }
  return v7 == 36;
}

uint64_t sub_2225EB624(uint64_t a1, unsigned __int8 a2)
{
  int v2 = *(_DWORD *)(a1 + 20);
  if (v2 < 1) {
    return 0;
  }
  unsigned int v3 = (v2 + 7) >> 3;
  uint64_t v4 = *(void *)(a1 + 32);
  while (!*(unsigned char *)(v4 + a2))
  {
    v4 += *(int *)(a1 + 16);
    if (!--v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_2225EB668(uint64_t a1, unsigned __int8 a2, unsigned __int8 a3)
{
  int v3 = *(_DWORD *)(a1 + 20);
  if (v3 < 1) {
    return 1;
  }
  unsigned int v4 = (v3 + 7) >> 3;
  uint64_t v5 = *(void *)(a1 + 32);
  while (*(unsigned __int8 *)(v5 + a2) == *(unsigned __int8 *)(v5 + a3))
  {
    v5 += *(int *)(a1 + 16);
    if (!--v4) {
      return 1;
    }
  }
  return 0;
}

size_t sub_2225EB6B8(int a1, uint64_t a2, unsigned char *a3, uint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (a1 == 255)
  {
    __int16 v6 = sub_2225EB7BC(a2, __str);
  }
  else
  {
    int v7 = &dword_264613900;
    do
    {
      int v9 = *v7;
      v7 += 6;
      int v8 = v9;
      if (v9) {
        BOOL v10 = v8 == (a1 & 0xFFFFFEFF);
      }
      else {
        BOOL v10 = 1;
      }
    }
    while (!v10);
    if ((a1 & 0x100) != 0)
    {
      __int16 v6 = __str;
      if (v8) {
        sub_2225EE3C4(__str, *((void *)v7 - 2), 50);
      }
      else {
        snprintf(__str, 0x32uLL, "REG_0x%x", a1 & 0xFFFFFEFF);
      }
    }
    else
    {
      __int16 v6 = (const char *)*((void *)v7 - 1);
    }
  }
  size_t v11 = strlen(v6);
  if (a4) {
    sub_2225EE3C4(a3, (unint64_t)v6, a4);
  }
  return v11 + 1;
}

const char *sub_2225EB7BC(uint64_t a1, char *a2)
{
  int v3 = *(const char **)(a1 + 16);
  if (!strcmp("REG_NOMATCH", v3))
  {
    int v5 = 1;
LABEL_7:
    snprintf(a2, 0x32uLL, "%d", v5);
  }
  else
  {
    unsigned int v4 = (const char **)off_264613920;
    while (1)
    {
      int v5 = *((_DWORD *)v4 - 2);
      if (!v5) {
        return "0";
      }
      __int16 v6 = *v4;
      v4 += 3;
      if (!strcmp(v6, v3)) {
        goto LABEL_7;
      }
    }
  }
  return a2;
}

uint64_t sub_2225EB860(uint64_t a1, char *a2, unint64_t a3, void *a4, char a5)
{
  if (*(_DWORD *)a1 != 62053) {
    return 2;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  if (*(_DWORD *)v5 != 53829 || (*(unsigned char *)(v5 + 72) & 4) != 0) {
    return 2;
  }
  int v6 = a5 & 7;
  if (*(uint64_t *)(v5 + 48) > 64) {
    return sub_2225EBC84(v5, a2, a3, a4, v6);
  }
  else {
    return sub_2225EB8AC(v5, a2, a3, a4, v6);
  }
}

uint64_t sub_2225EB8AC(uint64_t a1, char *__s, uint64_t a3, void *a4, int a5)
{
  int v5 = a5;
  int v6 = a4;
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  if ((*(unsigned char *)(a1 + 40) & 4) != 0) {
    a3 = 0;
  }
  if ((a5 & 4) != 0)
  {
    size_t v12 = a4[1];
    uint64_t v13 = &__s[*a4];
  }
  else
  {
    size_t v12 = strlen(__s);
    uint64_t v13 = __s;
  }
  uint64_t v14 = &__s[v12];
  if (&__s[v12] < v13) {
    return 16;
  }
  long long v49 = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  int v16 = *(unsigned __int8 **)(a1 + 96);
  if (v16)
  {
    uint64_t v45 = v10;
    unint64_t v17 = v13;
    if (v13 < v14)
    {
      int v42 = v5;
      uint64_t v43 = v6;
      uint64_t v44 = a3;
      int v18 = *v16;
      int v19 = (char *)(&__s[v12] - v13);
      unint64_t v41 = &__s[v12];
      unint64_t v20 = v19;
      unint64_t v17 = v13;
      while (1)
      {
        if (*v17 == v18)
        {
          int64_t v21 = *(int *)(a1 + 104);
          if ((uint64_t)v20 >= v21 && !memcmp(v17, v16, v21)) {
            break;
          }
        }
        ++v17;
        --v20;
        if (!--v19)
        {
          unint64_t v17 = v41;
          break;
        }
      }
      int v6 = v43;
      a3 = v44;
      int v5 = v42;
    }
    BOOL v22 = v17 == v14;
    uint64_t v10 = v45;
    if (v22) {
      return 1;
    }
  }
  uint64_t v46 = a1;
  LODWORD(v47) = v5;
  *(void *)&long long v48 = __s;
  *((void *)&v48 + 1) = v13;
  *(void *)&long long v50 = 0;
  *(void *)&long long v49 = v14;
  long long v51 = 0u;
  long long v52 = 0u;
  if (!sub_2225EC0B0((uint64_t)&v46, v13, v14, v10 + 1, v9))
  {
LABEL_62:
    free(*((void **)&v47 + 1));
    free((void *)v50);
    return 1;
  }
  while (2)
  {
    if (a3 || *(_DWORD *)(a1 + 120))
    {
      for (uint64_t i = (char *)*((void *)&v49 + 1); ; *((void *)&v49 + 1) = i)
      {
        uint64_t v24 = sub_2225EC354((uint64_t)&v46, i, v14, v10 + 1, v9);
        if (v24) {
          break;
        }
        ++i;
      }
      int v25 = v24;
      if (a3 != 1 || *(_DWORD *)(a1 + 120))
      {
        unint64_t v26 = (char *)*((void *)&v47 + 1);
        if (*((void *)&v47 + 1)
          || (unint64_t v26 = (char *)malloc_type_malloc(16 * *(void *)(v46 + 112) + 16, 0x1000040451B5BE8uLL),
              (*((void *)&v47 + 1) = v26) != 0))
        {
          uint64_t v27 = *(void *)(v46 + 112);
          if (v27)
          {
            uint64_t v28 = v26 + 16;
            if ((unint64_t)(v27 + 1) > 2) {
              uint64_t v29 = v27 + 1;
            }
            else {
              uint64_t v29 = 2;
            }
            memset(v28, 255, 16 * v29 - 16);
          }
          if (!*(_DWORD *)(a1 + 120) && (BYTE1(v47) & 4) == 0)
          {
            uint64_t v30 = (uint64_t)sub_2225EC5FC(&v46, *((char **)&v49 + 1), v25, v10 + 1, v9);
            goto LABEL_46;
          }
          uint64_t v31 = *(void *)(a1 + 128);
          uint64_t v32 = (void *)v50;
          if (v31 >= 1 && !(void)v50)
          {
            uint64_t v32 = malloc_type_malloc(8 * v31 + 8, 0x10040436913F5uLL);
            *(void *)&long long v50 = v32;
            uint64_t v31 = *(void *)(a1 + 128);
          }
          if (v31 < 1 || v32)
          {
            for (unint64_t j = (unsigned __int8 *)*((void *)&v49 + 1); ; unint64_t j = (unsigned __int8 *)v34)
            {
              uint64_t v30 = sub_2225EC99C(&v46, j, (unsigned __int8 *)v25, v10 + 1, v9, 0, 0);
LABEL_46:
              if (v30) {
                goto LABEL_51;
              }
              uint64_t v34 = *((void *)&v49 + 1);
              if ((unint64_t)v25 > *((void *)&v49 + 1))
              {
                int v25 = sub_2225EC354((uint64_t)&v46, *((char **)&v49 + 1), v25 - 1, v10 + 1, v9);
                if (v25) {
                  continue;
                }
              }
              break;
            }
            if ((char *)v34 == v14)
            {
LABEL_51:
              if (a3)
              {
                unint64_t v35 = &v25[-v48];
                *int v6 = *((void *)&v49 + 1) - v48;
                v6[1] = v35;
                if (a3 != 1)
                {
                  uint64_t v36 = v46;
                  uint64_t v37 = (_OWORD *)(*((void *)&v47 + 1) + 16);
                  BOOL v38 = v6 + 2;
                  unint64_t v39 = 1;
                  do
                  {
                    if (v39 <= *(void *)(v36 + 112))
                    {
                      *(_OWORD *)BOOL v38 = *v37;
                    }
                    else
                    {
                      *BOOL v38 = -1;
                      v38[1] = -1;
                    }
                    ++v39;
                    ++v37;
                    v38 += 2;
                  }
                  while (a3 != v39);
                }
              }
              break;
            }
            if (sub_2225EC0B0((uint64_t)&v46, (char *)(v34 + 1), v14, v10 + 1, v9)) {
              continue;
            }
            goto LABEL_62;
          }
          free(*((void **)&v47 + 1));
        }
        return 12;
      }
      uint64_t v40 = &v24[-v48];
      *int v6 = &i[-v48];
      v6[1] = v40;
    }
    break;
  }
  if (*((void *)&v47 + 1)) {
    free(*((void **)&v47 + 1));
  }
  uint64_t result = v50;
  if ((void)v50)
  {
    free((void *)v50);
    return 0;
  }
  return result;
}

uint64_t sub_2225EBC84(uint64_t a1, char *__s, unint64_t a3, void *a4, int a5)
{
  int v5 = a5;
  int v6 = a4;
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  if ((*(unsigned char *)(a1 + 40) & 4) != 0) {
    a3 = 0;
  }
  if ((a5 & 4) != 0)
  {
    size_t v12 = a4[1];
    uint64_t v13 = &__s[*a4];
  }
  else
  {
    size_t v12 = strlen(__s);
    uint64_t v13 = __s;
  }
  uint64_t v14 = &__s[v12];
  if (&__s[v12] >= v13)
  {
    long long v49 = 0u;
    long long v50 = 0u;
    long long v48 = 0u;
    int v16 = *(unsigned __int8 **)(a1 + 96);
    if (v16)
    {
      int v46 = v5;
      unint64_t v17 = v13;
      if (v13 < v14)
      {
        uint64_t v43 = v10;
        uint64_t v44 = v6;
        unint64_t v45 = a3;
        int v18 = *v16;
        int v19 = (char *)(&__s[v12] - v13);
        int v42 = &__s[v12];
        unint64_t v20 = v19;
        unint64_t v17 = v13;
        while (1)
        {
          if (*v17 == v18)
          {
            int64_t v21 = *(int *)(a1 + 104);
            if ((uint64_t)v20 >= v21 && !memcmp(v17, v16, v21)) {
              break;
            }
          }
          ++v17;
          --v20;
          if (!--v19)
          {
            unint64_t v17 = v42;
            break;
          }
        }
        int v6 = v44;
        a3 = v45;
        uint64_t v10 = v43;
      }
      BOOL v22 = v17 == v14;
      int v5 = v46;
      if (v22) {
        return 1;
      }
    }
    uint64_t v47 = a1;
    LODWORD(v48) = v5;
    *(void *)&long long v49 = __s;
    *((void *)&v49 + 1) = v13;
    long long v51 = 0;
    *(void *)&long long v50 = v14;
    int v23 = (char *)malloc_type_malloc(4 * *(void *)(a1 + 48), 0xEC0DA500uLL);
    long long v53 = v23;
    if (!v23) {
      return 12;
    }
    uint64_t v24 = v10 + 1;
    size_t v25 = *(void *)(a1 + 48);
    uint64_t v55 = &v23[v25];
    long long v56 = &v23[2 * v25];
    long long v54 = v23;
    uint64_t v52 = 4;
    long long v57 = &v23[3 * v25];
    bzero(v57, v25);
    if (sub_2225ED17C(&v47, v13, v14, v10 + 1, v9))
    {
LABEL_21:
      if (!a3 && !*(_DWORD *)(a1 + 120))
      {
LABEL_58:
        if (*((void *)&v48 + 1)) {
          free(*((void **)&v48 + 1));
        }
        if (v51) {
          free(v51);
        }
        uint64_t v15 = 0;
        goto LABEL_66;
      }
      unint64_t v26 = sub_2225ED464(&v47, *((char **)&v50 + 1), v14, v24, v9);
      if (!v26)
      {
        do
        {
          ++*((void *)&v50 + 1);
          uint64_t v27 = sub_2225ED464(&v47, *((char **)&v50 + 1), v14, v24, v9);
        }
        while (!v27);
        unint64_t v26 = v27;
      }
      if (a3 == 1 && !*(_DWORD *)(a1 + 120))
      {
LABEL_52:
        uint64_t v36 = &v26[-v49];
        *int v6 = *((void *)&v50 + 1) - v49;
        v6[1] = v36;
        if (a3 >= 2)
        {
          uint64_t v37 = v47;
          BOOL v38 = (_OWORD *)(*((void *)&v48 + 1) + 16);
          unint64_t v39 = v6 + 2;
          unint64_t v40 = 1;
          do
          {
            if (v40 <= *(void *)(v37 + 112))
            {
              *(_OWORD *)unint64_t v39 = *v38;
            }
            else
            {
              *unint64_t v39 = -1;
              v39[1] = -1;
            }
            ++v40;
            ++v38;
            v39 += 2;
          }
          while (a3 != v40);
        }
        goto LABEL_58;
      }
      uint64_t v28 = (char *)*((void *)&v48 + 1);
      if (*((void *)&v48 + 1)
        || (uint64_t v28 = (char *)malloc_type_malloc(16 * *(void *)(v47 + 112) + 16, 0x1000040451B5BE8uLL),
            (*((void *)&v48 + 1) = v28) != 0))
      {
        uint64_t v29 = *(void *)(v47 + 112);
        if (v29)
        {
          uint64_t v30 = v28 + 16;
          if ((unint64_t)(v29 + 1) > 2) {
            uint64_t v31 = v29 + 1;
          }
          else {
            uint64_t v31 = 2;
          }
          memset(v30, 255, 16 * v31 - 16);
        }
        if (!*(_DWORD *)(a1 + 120) && (BYTE1(v48) & 4) == 0)
        {
          uint64_t v32 = (uint64_t)sub_2225ED748(&v47, *((char **)&v50 + 1), v26, v24, v9);
          goto LABEL_47;
        }
        uint64_t v33 = *(void *)(a1 + 128);
        uint64_t v34 = v51;
        if (v33 >= 1 && !v51)
        {
          uint64_t v34 = malloc_type_malloc(8 * v33 + 8, 0x10040436913F5uLL);
          long long v51 = v34;
          uint64_t v33 = *(void *)(a1 + 128);
        }
        if (v33 < 1 || v34)
        {
          uint64_t v35 = *((void *)&v50 + 1);
          while (1)
          {
            uint64_t v32 = sub_2225EDAF8(&v47, (unsigned __int8 *)v35, (unsigned __int8 *)v26, v24, v9, 0, 0);
LABEL_47:
            if (v32) {
              break;
            }
            uint64_t v35 = *((void *)&v50 + 1);
            if ((unint64_t)v26 > *((void *)&v50 + 1))
            {
              unint64_t v26 = sub_2225ED464(&v47, *((char **)&v50 + 1), v26 - 1, v24, v9);
              uint64_t v35 = *((void *)&v50 + 1);
              if (v26) {
                continue;
              }
            }
            if ((char *)v35 != v14)
            {
              if (sub_2225ED17C(&v47, (char *)(v35 + 1), v14, v24, v9)) {
                goto LABEL_21;
              }
              goto LABEL_65;
            }
            break;
          }
          if (!a3) {
            goto LABEL_58;
          }
          goto LABEL_52;
        }
        free(*((void **)&v48 + 1));
      }
      uint64_t v15 = 12;
    }
    else
    {
LABEL_65:
      free(*((void **)&v48 + 1));
      free(v51);
      uint64_t v15 = 1;
    }
LABEL_66:
    free(v53);
    return v15;
  }
  return 16;
}

char *sub_2225EC0B0(uint64_t a1, char *a2, char *a3, uint64_t a4, uint64_t a5)
{
  int v7 = a2;
  if (*(char **)(a1 + 32) == a2) {
    int v8 = 128;
  }
  else {
    int v8 = *(a2 - 1);
  }
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = sub_2225ECF5C(*(void *)a1, a4, a5, 1 << a4, 132, 1 << a4);
  size_t v11 = 0;
  size_t v25 = *(char **)(a1 + 40);
  unint64_t v12 = v10;
  unint64_t v24 = v10;
  while (1)
  {
    if (v7 == v25) {
      int v13 = 128;
    }
    else {
      int v13 = *v7;
    }
    if (v12 == v10) {
      size_t v11 = v7;
    }
    if (v8 == 128)
    {
      if (*(unsigned char *)(a1 + 8)) {
        goto LABEL_13;
      }
    }
    else if (v8 != 10 || (*(unsigned char *)(v9 + 40) & 8) == 0)
    {
LABEL_13:
      int v14 = 0;
      int v15 = 0;
      int v16 = 130;
      goto LABEL_16;
    }
    int v15 = *(_DWORD *)(v9 + 76);
    int v14 = 129;
    int v16 = 131;
LABEL_16:
    if (v13 == 128)
    {
      if ((*(unsigned char *)(a1 + 8) & 2) != 0) {
        goto LABEL_19;
      }
    }
    else if (v13 != 10 || (*(unsigned char *)(v9 + 40) & 8) == 0)
    {
LABEL_19:
      int v16 = v14;
      goto LABEL_22;
    }
    v15 += *(_DWORD *)(v9 + 80);
LABEL_22:
    if (v15 >= 1)
    {
      unsigned int v17 = v15 + 1;
      do
      {
        unint64_t v12 = sub_2225ECF5C(v9, a4, a5, v12, v16, v12);
        --v17;
      }
      while (v17 > 1);
    }
    if (v16 != 129)
    {
      if (v8 == 128) {
        goto LABEL_46;
      }
      int v18 = v8;
      if (isalnum(v8) || v8 == 95 || v13 == 128) {
        goto LABEL_39;
      }
LABEL_32:
      int v19 = isalnum(v13);
      if (v13 == 95 || v19 != 0) {
        int v16 = 133;
      }
      goto LABEL_37;
    }
    if (v13 != 128) {
      goto LABEL_32;
    }
    int v16 = 129;
LABEL_37:
    if (v8 == 128) {
      goto LABEL_46;
    }
    int v18 = v8;
LABEL_39:
    if ((isalnum(v18) || v8 == 95) && (v16 == 130 || v13 != 128 && !isalnum(v13) && v13 != 95))
    {
      int v16 = 134;
LABEL_47:
      unint64_t v12 = sub_2225ECF5C(v9, a4, a5, v12, v16, v12);
      goto LABEL_48;
    }
LABEL_46:
    if ((v16 - 133) <= 1) {
      goto LABEL_47;
    }
LABEL_48:
    unint64_t v10 = v24;
    uint64_t v21 = v12 & (1 << a5);
    if (v7 == a3 || v21) {
      break;
    }
    unint64_t v12 = sub_2225ECF5C(v9, a4, a5, v12, v13, v24);
    ++v7;
    int v8 = v13;
  }
  *(void *)(a1 + 48) = v11;
  if (v21) {
    return v7 + 1;
  }
  else {
    return 0;
  }
}

char *sub_2225EC354(uint64_t a1, char *a2, char *a3, uint64_t a4, uint64_t a5)
{
  int v7 = a2;
  unint64_t v23 = *(void *)(a1 + 96);
  if (*(char **)(a1 + 32) == a2) {
    int v8 = 128;
  }
  else {
    int v8 = *(a2 - 1);
  }
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = sub_2225ECF5C(*(void *)a1, a4, a5, 1 << a4, 132, 1 << a4);
  size_t v11 = 0;
  unint64_t v24 = *(char **)(a1 + 40);
  while (1)
  {
    int v12 = v7 == v24 ? 128 : *v7;
    if (v8 == 128)
    {
      if (*(unsigned char *)(a1 + 8)) {
        goto LABEL_11;
      }
    }
    else if (v8 != 10 || (*(unsigned char *)(v9 + 40) & 8) == 0)
    {
LABEL_11:
      int v13 = 0;
      int v14 = 0;
      int v15 = 130;
      goto LABEL_14;
    }
    int v14 = *(_DWORD *)(v9 + 76);
    int v13 = 129;
    int v15 = 131;
LABEL_14:
    if (v12 == 128)
    {
      if ((*(unsigned char *)(a1 + 8) & 2) != 0) {
        goto LABEL_17;
      }
    }
    else if (v12 != 10 || (*(unsigned char *)(v9 + 40) & 8) == 0)
    {
LABEL_17:
      int v15 = v13;
      goto LABEL_20;
    }
    v14 += *(_DWORD *)(v9 + 80);
LABEL_20:
    if (v14 >= 1)
    {
      unsigned int v16 = v14 + 1;
      do
      {
        unint64_t v10 = sub_2225ECF5C(v9, a4, a5, v10, v15, v10);
        --v16;
      }
      while (v16 > 1);
    }
    if (v15 != 129)
    {
      if (v8 == 128) {
        goto LABEL_42;
      }
      int v17 = v8;
      if (isalnum(v8) || v8 == 95 || v12 == 128) {
        goto LABEL_37;
      }
LABEL_30:
      int v18 = isalnum(v12);
      if (v12 == 95 || v18 != 0) {
        int v15 = 133;
      }
      goto LABEL_35;
    }
    if (v12 != 128) {
      goto LABEL_30;
    }
    int v15 = 129;
LABEL_35:
    if (v8 == 128) {
      goto LABEL_42;
    }
    int v17 = v8;
LABEL_37:
    if (!isalnum(v17) && v8 != 95)
    {
LABEL_42:
      unint64_t v20 = v23;
LABEL_43:
      if ((v15 - 133) > 1) {
        goto LABEL_45;
      }
      goto LABEL_44;
    }
    if (v15 == 130)
    {
      int v15 = 134;
      unint64_t v20 = v23;
    }
    else
    {
      if (v12 == 128) {
        goto LABEL_42;
      }
      unint64_t v20 = v23;
      if (isalnum(v12) || v12 == 95) {
        goto LABEL_43;
      }
      int v15 = 134;
    }
LABEL_44:
    unint64_t v10 = sub_2225ECF5C(v9, a4, a5, v10, v15, v10);
LABEL_45:
    if ((v10 & (1 << a5)) != 0) {
      size_t v11 = v7;
    }
    if (v7 == a3 || v10 == v20) {
      return v11;
    }
    unint64_t v10 = sub_2225ECF5C(v9, a4, a5, v10, v12, v20);
    ++v7;
    int v8 = v12;
  }
}

char *sub_2225EC5FC(void *a1, char *a2, char *a3, uint64_t a4, uint64_t a5)
{
  if (a4 < a5)
  {
    uint64_t v7 = a4;
    do
    {
      uint64_t v10 = v7;
      uint64_t v11 = *(void *)(*a1 + 8);
      uint64_t v12 = *(void *)(v11 + 8 * v7);
      int v13 = v12 & 0xF8000000;
      if ((v12 & 0xF8000000) == 0x48000000 || v13 == 1476395008)
      {
        uint64_t v15 = (v12 & 0x7FFFFFF) + v7;
      }
      else
      {
        BOOL v16 = v13 != 2013265920 || (v12 & 0xF8000000) == 2415919104;
        uint64_t v15 = v7;
        if (!v16)
        {
          uint64_t v17 = *(void *)(v11 + 8 * v7);
          uint64_t v15 = v7;
          do
          {
            v15 += v17 & 0x7FFFFFF;
            uint64_t v17 = *(void *)(v11 + 8 * v15);
          }
          while ((v17 & 0xF8000000) != 0x90000000);
        }
      }
      uint64_t v7 = v15 + 1;
      switch(((unint64_t)(v12 & 0xF8000000) - 0x8000000) >> 27)
      {
        case 1uLL:
        case 4uLL:
        case 5uLL:
          ++a2;
          break;
        case 8uLL:
          int v18 = a3;
          do
          {
            int v19 = sub_2225EC354((uint64_t)a1, a2, v18, v10, v15 + 1);
            unint64_t v20 = sub_2225EC354((uint64_t)a1, v19, a3, v15 + 1, a5);
            int v18 = v19 - 1;
          }
          while (v20 != a3);
          uint64_t v21 = v10 + 1;
          BOOL v22 = a2;
          do
          {
            unint64_t v23 = v22;
            BOOL v22 = a2;
            unint64_t v24 = sub_2225EC354((uint64_t)a1, a2, v19, v21, v15);
            a2 = v24;
          }
          while (v24 && v24 != v22);
          if (v24) {
            size_t v25 = v22;
          }
          else {
            size_t v25 = v23;
          }
          if (v24) {
            unint64_t v26 = v24;
          }
          else {
            unint64_t v26 = v22;
          }
          sub_2225EC5FC(a1, v25, v26, v21, v15);
          a2 = v19;
          break;
        case 0xAuLL:
          uint64_t v27 = a3;
          do
          {
            uint64_t v28 = sub_2225EC354((uint64_t)a1, a2, v27, v10, v15 + 1);
            uint64_t v29 = sub_2225EC354((uint64_t)a1, v28, a3, v15 + 1, a5);
            uint64_t v27 = v28 - 1;
          }
          while (v29 != a3);
          uint64_t v30 = v10 + 1;
          if (sub_2225EC354((uint64_t)a1, a2, v28, v30, v15)) {
            sub_2225EC5FC(a1, a2, v28, v30, v15);
          }
          a2 = v28;
          break;
        case 0xCuLL:
          *(void *)(a1[2] + 16 * (v12 & 0x7FFFFFF)) = &a2[-a1[3]];
          break;
        case 0xDuLL:
          *(void *)(a1[2] + 16 * (v12 & 0x7FFFFFF) + 8) = &a2[-a1[3]];
          break;
        case 0xEuLL:
          uint64_t v31 = a3;
          do
          {
            uint64_t v32 = sub_2225EC354((uint64_t)a1, a2, v31, v10, v7);
            uint64_t v33 = sub_2225EC354((uint64_t)a1, v32, a3, v7, a5);
            uint64_t v31 = v32 - 1;
          }
          while (v33 != a3);
          uint64_t v34 = v10 + (v12 & 0x7FFFFFF) - 1;
          uint64_t v35 = v10 + 1;
          while (sub_2225EC354((uint64_t)a1, a2, v32, v35, v34) != v32)
          {
            uint64_t v36 = *(void *)(v11 + 8 * (v34 + 1)) & 0x7FFFFFFLL;
            uint64_t v37 = v36 + v34 + 1;
            uint64_t v38 = v36 + v34;
            uint64_t v35 = v34 + 2;
            if ((*(void *)(v11 + 8 * v37) & 0xF8000000) == 0x88000000) {
              uint64_t v34 = v38;
            }
            else {
              uint64_t v34 = v37;
            }
          }
          sub_2225EC5FC(a1, a2, v32, v35, v34);
          a2 = v32;
          break;
        default:
          break;
      }
    }
    while (v7 < a5);
  }
  return a2;
}

uint64_t sub_2225EC99C(uint64_t *a1, unsigned __int8 *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7 = a3;
  if (a4 < a5)
  {
    uint64_t v10 = a4;
LABEL_3:
    uint64_t v12 = v10;
LABEL_4:
    uint64_t v13 = *a1;
    uint64_t v14 = *(void *)(*a1 + 8);
    while (1)
    {
      uint64_t v15 = *(void *)(v14 + 8 * v12);
      switch(((unint64_t)(v15 & 0xF8000000) - 0x10000000) >> 27)
      {
        case 0uLL:
          if (a2 == v7) {
            return 0;
          }
          int v16 = (char)*a2++;
          if (v16 != (char)v15) {
            return 0;
          }
          goto LABEL_52;
        case 1uLL:
          if (a2 == (unsigned __int8 *)a1[4] && (a1[1] & 1) == 0) {
            goto LABEL_52;
          }
          if ((unint64_t)a2 >= a1[5]) {
            return 0;
          }
          int v17 = *(a2 - 1);
          goto LABEL_17;
        case 2uLL:
          int v18 = (unsigned __int8 *)a1[5];
          if (a2 == v18 && (a1[1] & 2) == 0) {
            goto LABEL_52;
          }
          if (a2 >= v18) {
            return 0;
          }
          int v17 = *a2;
LABEL_17:
          if (v17 != 10 || (*(unsigned char *)(v13 + 40) & 8) == 0) {
            return 0;
          }
          goto LABEL_52;
        case 3uLL:
          if (a2 == v7) {
            return 0;
          }
          ++a2;
          goto LABEL_52;
        case 4uLL:
          if (a2 == v7) {
            return 0;
          }
          uint64_t v19 = *(void *)(v13 + 24) + 32 * (v15 & 0x7FFFFFF);
          unsigned int v20 = *a2++;
          if ((*(unsigned char *)(v19 + 8) & *(unsigned char *)(*(void *)v19 + v20)) == 0) {
            return 0;
          }
          goto LABEL_52;
        case 0xAuLL:
          goto LABEL_52;
        case 0xEuLL:
          ++v12;
          uint64_t v21 = *(void *)(v14 + 8 * v12);
          do
          {
            v12 += v21 & 0x7FFFFFF;
            uint64_t v21 = *(void *)(v14 + 8 * v12);
          }
          while ((v21 & 0xF8000000) != 0x90000000);
          goto LABEL_52;
        case 0x11uLL:
          BOOL v22 = (unsigned __int8 *)a1[4];
          if (a2 == v22)
          {
            unint64_t v23 = a1[5];
            if ((a1[1] & 1) == 0) {
              goto LABEL_46;
            }
          }
          else
          {
            unint64_t v23 = a1[5];
          }
          if ((unint64_t)a2 >= v23 || *(a2 - 1) != 10 || (*(unsigned char *)(v13 + 40) & 8) == 0)
          {
            if (a2 <= v22) {
              return 0;
            }
            int v29 = *(a2 - 1);
            int v30 = isalnum(v29);
            uint64_t result = 0;
            if (v29 == 95 || v30) {
              return result;
            }
          }
LABEL_46:
          if ((unint64_t)a2 >= v23) {
            return 0;
          }
          int v28 = *a2;
LABEL_48:
          int v31 = isalnum(v28);
          if (v28 == 95)
          {
            uint64_t v7 = a3;
          }
          else
          {
            uint64_t v7 = a3;
            if (!v31) {
              return 0;
            }
          }
LABEL_52:
          if (++v12 >= a5) {
            goto LABEL_76;
          }
          break;
        case 0x12uLL:
          unint64_t v24 = (unsigned __int8 *)a1[5];
          if (a2 == v24 && (a1[1] & 2) == 0) {
            goto LABEL_37;
          }
          if (a2 >= v24) {
            return 0;
          }
          int v25 = *a2;
          if (v25 != 10 || (*(unsigned char *)(v13 + 40) & 8) == 0)
          {
            int v26 = isalnum(*a2);
            uint64_t result = 0;
            if (v25 == 95 || v26) {
              return result;
            }
          }
LABEL_37:
          if ((unint64_t)a2 <= a1[4]) {
            return 0;
          }
          int v28 = *(a2 - 1);
          goto LABEL_48;
        default:
          uint64_t v10 = v12 + 1;
          uint64_t v32 = *(void *)(*a1 + 8);
          uint64_t v33 = *(void *)(v32 + 8 * v12);
          unint64_t v34 = (v33 & 0xF8000000) - 939524096;
          if (v34 >> 27 != 4)
          {
            uint64_t result = 0;
            switch(v34 >> 27)
            {
              case 0uLL:
                uint64_t v35 = v33 & 0x7FFFFFF;
                uint64_t v36 = a1[2];
                uint64_t v37 = *(void *)(v36 + 16 * v35 + 8);
                if (v37 == -1) {
                  return 0;
                }
                uint64_t v38 = *(void *)(v36 + 16 * v35);
                size_t v39 = v37 - v38;
                if (v37 == v38)
                {
                  uint64_t v7 = a3;
                  if ((int)a7 > 100) {
                    return 0;
                  }
                  ++a7;
                }
                else
                {
                  uint64_t v7 = a3;
                }
                if (a2 > &v7[-v39] || memcmp(a2, (const void *)(a1[3] + v38), v39)) {
                  return 0;
                }
                do
                  uint64_t v40 = *(void *)(v32 + 8 * v12++);
                while (v40 != (v35 | 0x40000000));
                a2 += v39;
                goto LABEL_57;
              case 2uLL:
                ++a6;
                *(void *)(a1[7] + 8 * a6) = a2;
                goto LABEL_74;
              case 3uLL:
                uint64_t v41 = a1[7];
                if (a2 == *(unsigned __int8 **)(v41 + 8 * a6))
                {
                  --a6;
LABEL_74:
                  uint64_t v7 = a3;
                }
                else
                {
                  *(void *)(v41 + 8 * a6) = a2;
                  uint64_t v7 = a3;
                  uint64_t result = sub_2225EC99C(a1, a2, a3, v10 - (v33 & 0x7FFFFFF), a5, a6, a7);
                  if (result) {
                    return result;
                  }
                  --a6;
                }
                if (v10 >= a5) {
                  goto LABEL_76;
                }
                goto LABEL_3;
              case 6uLL:
                uint64_t v42 = 16 * (v33 & 0x7FFFFFF);
                uint64_t v43 = a1[2];
                uint64_t v44 = *(void *)(v43 + v42);
                *(void *)(v43 + v42) = &a2[-a1[3]];
                uint64_t result = sub_2225EC99C(a1, a2, a3, v12 + 1, a5, a6, a7);
                if (!result) {
                  *(void *)(a1[2] + v42) = v44;
                }
                return result;
              case 7uLL:
                uint64_t v45 = v33 & 0x7FFFFFF;
                uint64_t v46 = a1[2] + 16 * v45;
                uint64_t v47 = *(void *)(v46 + 8);
                *(void *)(v46 + 8) = &a2[-a1[3]];
                uint64_t result = sub_2225EC99C(a1, a2, a3, v12 + 1, a5, a6, a7);
                if (!result) {
                  *(void *)(a1[2] + 16 * v45 + 8) = v47;
                }
                return result;
              case 8uLL:
                uint64_t v48 = v12 + (v33 & 0x7FFFFFF) - 1;
                uint64_t result = sub_2225EC99C(a1, a2, a3, v12 + 1, v48, a6, a7);
                if (result) {
                  return result;
                }
                while (1)
                {
                  uint64_t v49 = *(void *)(*a1 + 8);
                  if ((*(void *)(v49 + 8 * v48) & 0xF8000000) == 0x90000000) {
                    break;
                  }
                  uint64_t v50 = v48 + 2;
                  uint64_t v51 = *(void *)(v49 + 8 * (v48 + 1)) & 0x7FFFFFFLL;
                  uint64_t v52 = v51 + v48 + 1;
                  uint64_t v53 = v51 + v48;
                  if ((*(void *)(v49 + 8 * v52) & 0xF8000000) == 0x88000000) {
                    uint64_t v48 = v53;
                  }
                  else {
                    uint64_t v48 = v52;
                  }
                  uint64_t result = sub_2225EC99C(a1, a2, a3, v50, v48, a6, a7);
                  if (result) {
                    return result;
                  }
                }
                return 0;
              default:
                return result;
            }
          }
          uint64_t result = sub_2225EC99C(a1, a2, v7, v12 + 1, a5, a6, a7);
          if (result) {
            return result;
          }
          uint64_t v12 = (v33 & 0x7FFFFFF) + v10;
LABEL_57:
          if (v12 >= a5) {
            goto LABEL_76;
          }
          goto LABEL_4;
      }
    }
  }
LABEL_76:
  if (a2 == v7) {
    return (uint64_t)a2;
  }
  else {
    return 0;
  }
}

unint64_t sub_2225ECF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t a6)
{
  if (a2 != a3)
  {
    unint64_t v7 = 1 << a2;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      uint64_t v9 = *(void *)(v8 + 8 * a2);
      switch(((unint64_t)(v9 & 0xF8000000) - 0x8000000) >> 27)
      {
        case 1uLL:
          BOOL v11 = a5 == (char)v9;
          goto LABEL_29;
        case 2uLL:
          BOOL v11 = (a5 & 0xFFFFFFFD) == 129;
          goto LABEL_29;
        case 3uLL:
          BOOL v11 = (a5 & 0xFFFFFFFE) == 130;
          goto LABEL_29;
        case 4uLL:
          if (a5 <= 127) {
            a6 |= 2 * (v7 & a4);
          }
          break;
        case 5uLL:
          if (a5 > 127) {
            break;
          }
          uint64_t v12 = *(void *)(a1 + 24) + 32 * (v9 & 0x7FFFFFF);
          if ((*(unsigned char *)(v12 + 8) & *(unsigned char *)(*(void *)v12 + a5)) == 0) {
            break;
          }
          unint64_t v10 = v7 & a4;
LABEL_6:
          a6 |= 2 * v10;
          break;
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0x11uLL:
          unint64_t v10 = v7 & a6;
          goto LABEL_6;
        case 9uLL:
          uint64_t v13 = a6 | (2 * (v7 & a6));
          a6 = ((v13 & v7) >> v9) | v13;
          if (((v7 >> v9) & v13) == 0 && (a6 & (v7 >> v9)) != 0)
          {
            a2 += ~(unint64_t)(v9 & 0x7FFFFFF);
            unint64_t v7 = 1 << a2;
          }
          break;
        case 0xAuLL:
        case 0xEuLL:
          a6 |= (((a6 | (2 * (v7 & a6))) & v7) << v9) | (2 * (v7 & a6));
          break;
        case 0xFuLL:
          if ((v7 & a6) == 0) {
            break;
          }
          uint64_t v15 = *(void *)(v8 + 8 * a2 + 8);
          if ((v15 & 0xF8000000) == 0x90000000)
          {
            LOBYTE(v16) = 1;
          }
          else
          {
            uint64_t v16 = 1;
            do
            {
              v16 += v15 & 0x7FFFFFF;
              uint64_t v15 = *(void *)(v8 + 8 * (v16 + a2));
            }
            while ((v15 & 0xF8000000) != 0x90000000);
          }
          unint64_t v17 = (v7 & a6) << v16;
          goto LABEL_37;
        case 0x10uLL:
          a6 |= 2 * (v7 & a6);
          if ((*(void *)(v8 + 8 * ((v9 & 0x7FFFFFF) + a2)) & 0xF8000000) == 0x90000000) {
            break;
          }
          unint64_t v17 = (a6 & v7) << v9;
LABEL_37:
          a6 |= v17;
          break;
        case 0x12uLL:
          BOOL v11 = a5 == 133;
          goto LABEL_29;
        case 0x13uLL:
          BOOL v11 = a5 == 134;
LABEL_29:
          if (v11) {
            a6 |= 2 * (v7 & a4);
          }
          break;
        default:
          break;
      }
      ++a2;
      v7 *= 2;
    }
    while (a2 != a3);
  }
  return a6;
}

char *sub_2225ED17C(uint64_t *a1, char *a2, char *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = a2;
  uint64_t v9 = (void *)a1[10];
  unint64_t v10 = (void *)a1[11];
  __dst = (void *)a1[12];
  if ((char *)a1[4] == a2) {
    int v11 = 128;
  }
  else {
    int v11 = *(a2 - 1);
  }
  bzero(v9, *(void *)(*a1 + 48));
  *((unsigned char *)v9 + a4) = 1;
  sub_2225EE0B8(*a1, a4, a5, (uint64_t)v9, 132, (uint64_t)v9);
  memmove(v10, v9, *(void *)(*a1 + 48));
  uint64_t v12 = 0;
  __src = v10;
  while (1)
  {
    if (v7 == (char *)a1[5]) {
      int v13 = 128;
    }
    else {
      int v13 = *v7;
    }
    uint64_t v14 = *a1;
    if (!memcmp(v9, v10, *(void *)(*a1 + 48))) {
      uint64_t v12 = v7;
    }
    if (v11 == 128)
    {
      if (a1[1]) {
        goto LABEL_13;
      }
    }
    else if (v11 != 10 || (*(unsigned char *)(v14 + 40) & 8) == 0)
    {
LABEL_13:
      int v15 = 0;
      int v16 = 0;
      int v17 = 130;
      goto LABEL_16;
    }
    int v16 = *(_DWORD *)(v14 + 76);
    int v15 = 129;
    int v17 = 131;
LABEL_16:
    if (v13 == 128)
    {
      if ((a1[1] & 2) != 0) {
        goto LABEL_19;
      }
    }
    else if (v13 != 10 || (*(unsigned char *)(v14 + 40) & 8) == 0)
    {
LABEL_19:
      int v17 = v15;
      goto LABEL_22;
    }
    v16 += *(_DWORD *)(v14 + 80);
LABEL_22:
    if (v16 >= 1)
    {
      unsigned int v18 = v16 + 1;
      do
      {
        sub_2225EE0B8(*a1, a4, a5, (uint64_t)v9, v17, (uint64_t)v9);
        --v18;
      }
      while (v18 > 1);
    }
    if (v17 != 129)
    {
      if (v11 == 128) {
        goto LABEL_46;
      }
      int v19 = v11;
      if (isalnum(v11) || v11 == 95 || v13 == 128) {
        goto LABEL_39;
      }
LABEL_32:
      int v20 = isalnum(v13);
      if (v13 == 95 || v20 != 0) {
        int v17 = 133;
      }
      goto LABEL_37;
    }
    if (v13 != 128) {
      goto LABEL_32;
    }
    int v17 = 129;
LABEL_37:
    if (v11 == 128) {
      goto LABEL_46;
    }
    int v19 = v11;
LABEL_39:
    if ((isalnum(v19) || v11 == 95) && (v17 == 130 || v13 != 128 && !isalnum(v13) && v13 != 95))
    {
      int v17 = 134;
LABEL_47:
      sub_2225EE0B8(*a1, a4, a5, (uint64_t)v9, v17, (uint64_t)v9);
      goto LABEL_48;
    }
LABEL_46:
    if ((v17 - 133) <= 1) {
      goto LABEL_47;
    }
LABEL_48:
    if (v7 == a3 || *((unsigned char *)v9 + a5)) {
      break;
    }
    memmove(__dst, v9, *(void *)(*a1 + 48));
    unint64_t v10 = __src;
    memmove(v9, __src, *(void *)(*a1 + 48));
    sub_2225EE0B8(*a1, a4, a5, (uint64_t)__dst, v13, (uint64_t)v9);
    ++v7;
    int v11 = v13;
  }
  a1[6] = (uint64_t)v12;
  if (*((unsigned char *)v9 + a5)) {
    return v7 + 1;
  }
  else {
    return 0;
  }
}

char *sub_2225ED464(uint64_t *a1, char *a2, char *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = a2;
  uint64_t v9 = (void *)a1[10];
  unint64_t v10 = (void *)a1[13];
  __dst = (void *)a1[12];
  if ((char *)a1[4] == a2) {
    int v11 = 128;
  }
  else {
    int v11 = *(a2 - 1);
  }
  bzero(v9, *(void *)(*a1 + 48));
  *((unsigned char *)v9 + a4) = 1;
  sub_2225EE0B8(*a1, a4, a5, (uint64_t)v9, 132, (uint64_t)v9);
  uint64_t v12 = 0;
  __s2 = v10;
  while (1)
  {
    int v13 = v7 == (char *)a1[5] ? 128 : *v7;
    if (v11 == 128)
    {
      if ((a1[1] & 1) == 0)
      {
        uint64_t v14 = *a1;
LABEL_14:
        int v15 = *(_DWORD *)(v14 + 76);
        int v16 = 129;
        int v17 = 131;
        goto LABEL_16;
      }
    }
    else if (v11 == 10)
    {
      uint64_t v14 = *a1;
      if ((*(unsigned char *)(*a1 + 40) & 8) != 0) {
        goto LABEL_14;
      }
    }
    int v16 = 0;
    int v15 = 0;
    int v17 = 130;
LABEL_16:
    if (v13 == 128)
    {
      if ((a1[1] & 2) == 0)
      {
        uint64_t v18 = *a1;
LABEL_22:
        v15 += *(_DWORD *)(v18 + 80);
        goto LABEL_24;
      }
    }
    else if (v13 == 10)
    {
      uint64_t v18 = *a1;
      if ((*(unsigned char *)(*a1 + 40) & 8) != 0) {
        goto LABEL_22;
      }
    }
    int v17 = v16;
LABEL_24:
    if (v15 >= 1)
    {
      unsigned int v19 = v15 + 1;
      do
      {
        sub_2225EE0B8(*a1, a4, a5, (uint64_t)v9, v17, (uint64_t)v9);
        --v19;
      }
      while (v19 > 1);
    }
    if (v17 == 129)
    {
      if (v13 == 128)
      {
        int v17 = 129;
      }
      else
      {
LABEL_34:
        int v21 = isalnum(v13);
        if (v13 == 95 || v21 != 0) {
          int v17 = 133;
        }
      }
      if (v11 == 128) {
        goto LABEL_43;
      }
      int v20 = v11;
      goto LABEL_41;
    }
    if (v11 == 128) {
      goto LABEL_43;
    }
    int v20 = v11;
    if (!isalnum(v11) && v11 != 95 && v13 != 128) {
      goto LABEL_34;
    }
LABEL_41:
    if (!isalnum(v20) && v11 != 95)
    {
LABEL_43:
      unint64_t v23 = __s2;
      goto LABEL_44;
    }
    unint64_t v23 = __s2;
    if (v17 == 130 || v13 != 128 && !isalnum(v13) && v13 != 95)
    {
      int v17 = 134;
LABEL_51:
      sub_2225EE0B8(*a1, a4, a5, (uint64_t)v9, v17, (uint64_t)v9);
      goto LABEL_52;
    }
LABEL_44:
    if ((v17 - 133) <= 1) {
      goto LABEL_51;
    }
LABEL_52:
    if (*((unsigned char *)v9 + a5)) {
      uint64_t v12 = v7;
    }
    size_t v24 = *(void *)(*a1 + 48);
    int v25 = memcmp(v9, v23, v24);
    if (v7 == a3 || !v25) {
      return v12;
    }
    memmove(__dst, v9, v24);
    memmove(v9, v23, *(void *)(*a1 + 48));
    sub_2225EE0B8(*a1, a4, a5, (uint64_t)__dst, v13, (uint64_t)v9);
    ++v7;
    int v11 = v13;
  }
}

char *sub_2225ED748(uint64_t *a1, char *a2, char *a3, uint64_t a4, uint64_t a5)
{
  if (a4 < a5)
  {
    uint64_t v7 = a4;
    do
    {
      uint64_t v10 = v7;
      uint64_t v11 = *(void *)(*a1 + 8);
      uint64_t v12 = *(void *)(v11 + 8 * v7);
      int v13 = v12 & 0xF8000000;
      if ((v12 & 0xF8000000) == 0x48000000 || v13 == 1476395008)
      {
        uint64_t v15 = (v12 & 0x7FFFFFF) + v7;
      }
      else
      {
        BOOL v16 = v13 != 2013265920 || (v12 & 0xF8000000) == 2415919104;
        uint64_t v15 = v7;
        if (!v16)
        {
          uint64_t v17 = *(void *)(v11 + 8 * v7);
          uint64_t v15 = v7;
          do
          {
            v15 += v17 & 0x7FFFFFF;
            uint64_t v17 = *(void *)(v11 + 8 * v15);
          }
          while ((v17 & 0xF8000000) != 0x90000000);
        }
      }
      uint64_t v7 = v15 + 1;
      switch(((unint64_t)(v12 & 0xF8000000) - 0x8000000) >> 27)
      {
        case 1uLL:
        case 4uLL:
        case 5uLL:
          ++a2;
          break;
        case 8uLL:
          uint64_t v18 = a3;
          do
          {
            unsigned int v19 = sub_2225ED464(a1, a2, v18, v10, v15 + 1);
            int v20 = sub_2225ED464(a1, v19, a3, v15 + 1, a5);
            uint64_t v18 = v19 - 1;
          }
          while (v20 != a3);
          uint64_t v21 = v10 + 1;
          BOOL v22 = a2;
          do
          {
            unint64_t v23 = v22;
            BOOL v22 = a2;
            size_t v24 = sub_2225ED464(a1, a2, v19, v21, v15);
            a2 = v24;
          }
          while (v24 && v24 != v22);
          if (v24) {
            int v25 = v22;
          }
          else {
            int v25 = v23;
          }
          if (v24) {
            int v26 = v24;
          }
          else {
            int v26 = v22;
          }
          sub_2225ED748(a1, v25, v26, v21, v15);
          a2 = v19;
          break;
        case 0xAuLL:
          uint64_t v27 = a3;
          do
          {
            int v28 = sub_2225ED464(a1, a2, v27, v10, v15 + 1);
            int v29 = sub_2225ED464(a1, v28, a3, v15 + 1, a5);
            uint64_t v27 = v28 - 1;
          }
          while (v29 != a3);
          uint64_t v30 = v10 + 1;
          if (sub_2225ED464(a1, a2, v28, v30, v15)) {
            sub_2225ED748(a1, a2, v28, v30, v15);
          }
          a2 = v28;
          break;
        case 0xCuLL:
          *(void *)(a1[2] + 16 * (v12 & 0x7FFFFFF)) = &a2[-a1[3]];
          break;
        case 0xDuLL:
          *(void *)(a1[2] + 16 * (v12 & 0x7FFFFFF) + 8) = &a2[-a1[3]];
          break;
        case 0xEuLL:
          int v31 = a3;
          do
          {
            uint64_t v32 = sub_2225ED464(a1, a2, v31, v10, v7);
            uint64_t v33 = sub_2225ED464(a1, v32, a3, v7, a5);
            int v31 = v32 - 1;
          }
          while (v33 != a3);
          uint64_t v34 = v10 + (*(void *)(*(void *)(*a1 + 8) + 8 * v10) & 0x7FFFFFFLL) - 1;
          uint64_t v35 = v10 + 1;
          while (sub_2225ED464(a1, a2, v32, v35, v34) != v32)
          {
            uint64_t v36 = *(void *)(*a1 + 8);
            uint64_t v37 = *(void *)(v36 + 8 * (v34 + 1)) & 0x7FFFFFFLL;
            uint64_t v38 = v37 + v34 + 1;
            uint64_t v39 = v37 + v34;
            uint64_t v35 = v34 + 2;
            if ((*(void *)(v36 + 8 * v38) & 0xF8000000) == 0x88000000) {
              uint64_t v34 = v39;
            }
            else {
              uint64_t v34 = v38;
            }
          }
          sub_2225ED748(a1, a2, v32, v35, v34);
          a2 = v32;
          break;
        default:
          break;
      }
    }
    while (v7 < a5);
  }
  return a2;
}

uint64_t sub_2225EDAF8(uint64_t *a1, unsigned __int8 *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7 = a3;
  if (a4 < a5)
  {
    uint64_t v10 = a4;
LABEL_3:
    uint64_t v12 = v10;
LABEL_4:
    uint64_t v13 = *a1;
    uint64_t v14 = *(void *)(*a1 + 8);
    while (1)
    {
      uint64_t v15 = *(void *)(v14 + 8 * v12);
      switch(((unint64_t)(v15 & 0xF8000000) - 0x10000000) >> 27)
      {
        case 0uLL:
          if (a2 == v7) {
            return 0;
          }
          int v16 = (char)*a2++;
          if (v16 != (char)v15) {
            return 0;
          }
          goto LABEL_52;
        case 1uLL:
          if (a2 == (unsigned __int8 *)a1[4] && (a1[1] & 1) == 0) {
            goto LABEL_52;
          }
          if ((unint64_t)a2 >= a1[5]) {
            return 0;
          }
          int v17 = *(a2 - 1);
          goto LABEL_17;
        case 2uLL:
          uint64_t v18 = (unsigned __int8 *)a1[5];
          if (a2 == v18 && (a1[1] & 2) == 0) {
            goto LABEL_52;
          }
          if (a2 >= v18) {
            return 0;
          }
          int v17 = *a2;
LABEL_17:
          if (v17 != 10 || (*(unsigned char *)(v13 + 40) & 8) == 0) {
            return 0;
          }
          goto LABEL_52;
        case 3uLL:
          if (a2 == v7) {
            return 0;
          }
          ++a2;
          goto LABEL_52;
        case 4uLL:
          if (a2 == v7) {
            return 0;
          }
          uint64_t v19 = *(void *)(v13 + 24) + 32 * (v15 & 0x7FFFFFF);
          unsigned int v20 = *a2++;
          if ((*(unsigned char *)(v19 + 8) & *(unsigned char *)(*(void *)v19 + v20)) == 0) {
            return 0;
          }
          goto LABEL_52;
        case 0xAuLL:
          goto LABEL_52;
        case 0xEuLL:
          ++v12;
          uint64_t v21 = *(void *)(v14 + 8 * v12);
          do
          {
            v12 += v21 & 0x7FFFFFF;
            uint64_t v21 = *(void *)(v14 + 8 * v12);
          }
          while ((v21 & 0xF8000000) != 0x90000000);
          goto LABEL_52;
        case 0x11uLL:
          BOOL v22 = (unsigned __int8 *)a1[4];
          if (a2 == v22)
          {
            unint64_t v23 = a1[5];
            if ((a1[1] & 1) == 0) {
              goto LABEL_46;
            }
          }
          else
          {
            unint64_t v23 = a1[5];
          }
          if ((unint64_t)a2 >= v23 || *(a2 - 1) != 10 || (*(unsigned char *)(v13 + 40) & 8) == 0)
          {
            if (a2 <= v22) {
              return 0;
            }
            int v29 = *(a2 - 1);
            int v30 = isalnum(v29);
            uint64_t result = 0;
            if (v29 == 95 || v30) {
              return result;
            }
          }
LABEL_46:
          if ((unint64_t)a2 >= v23) {
            return 0;
          }
          int v28 = *a2;
LABEL_48:
          int v31 = isalnum(v28);
          if (v28 == 95)
          {
            uint64_t v7 = a3;
          }
          else
          {
            uint64_t v7 = a3;
            if (!v31) {
              return 0;
            }
          }
LABEL_52:
          if (++v12 >= a5) {
            goto LABEL_76;
          }
          break;
        case 0x12uLL:
          size_t v24 = (unsigned __int8 *)a1[5];
          if (a2 == v24 && (a1[1] & 2) == 0) {
            goto LABEL_37;
          }
          if (a2 >= v24) {
            return 0;
          }
          int v25 = *a2;
          if (v25 != 10 || (*(unsigned char *)(v13 + 40) & 8) == 0)
          {
            int v26 = isalnum(*a2);
            uint64_t result = 0;
            if (v25 == 95 || v26) {
              return result;
            }
          }
LABEL_37:
          if ((unint64_t)a2 <= a1[4]) {
            return 0;
          }
          int v28 = *(a2 - 1);
          goto LABEL_48;
        default:
          uint64_t v10 = v12 + 1;
          uint64_t v32 = *(void *)(*a1 + 8);
          uint64_t v33 = *(void *)(v32 + 8 * v12);
          unint64_t v34 = (v33 & 0xF8000000) - 939524096;
          if (v34 >> 27 != 4)
          {
            uint64_t result = 0;
            switch(v34 >> 27)
            {
              case 0uLL:
                uint64_t v35 = v33 & 0x7FFFFFF;
                uint64_t v36 = a1[2];
                uint64_t v37 = *(void *)(v36 + 16 * v35 + 8);
                if (v37 == -1) {
                  return 0;
                }
                uint64_t v38 = *(void *)(v36 + 16 * v35);
                size_t v39 = v37 - v38;
                if (v37 == v38)
                {
                  uint64_t v7 = a3;
                  if ((int)a7 > 100) {
                    return 0;
                  }
                  ++a7;
                }
                else
                {
                  uint64_t v7 = a3;
                }
                if (a2 > &v7[-v39] || memcmp(a2, (const void *)(a1[3] + v38), v39)) {
                  return 0;
                }
                do
                  uint64_t v40 = *(void *)(v32 + 8 * v12++);
                while (v40 != (v35 | 0x40000000));
                a2 += v39;
                goto LABEL_57;
              case 2uLL:
                ++a6;
                *(void *)(a1[7] + 8 * a6) = a2;
                goto LABEL_74;
              case 3uLL:
                uint64_t v41 = a1[7];
                if (a2 == *(unsigned __int8 **)(v41 + 8 * a6))
                {
                  --a6;
LABEL_74:
                  uint64_t v7 = a3;
                }
                else
                {
                  *(void *)(v41 + 8 * a6) = a2;
                  uint64_t v7 = a3;
                  uint64_t result = sub_2225EDAF8(a1, a2, a3, v10 - (v33 & 0x7FFFFFF), a5, a6, a7);
                  if (result) {
                    return result;
                  }
                  --a6;
                }
                if (v10 >= a5) {
                  goto LABEL_76;
                }
                goto LABEL_3;
              case 6uLL:
                uint64_t v42 = 16 * (v33 & 0x7FFFFFF);
                uint64_t v43 = a1[2];
                uint64_t v44 = *(void *)(v43 + v42);
                *(void *)(v43 + v42) = &a2[-a1[3]];
                uint64_t result = sub_2225EDAF8(a1, a2, a3, v12 + 1, a5, a6, a7);
                if (!result) {
                  *(void *)(a1[2] + v42) = v44;
                }
                return result;
              case 7uLL:
                uint64_t v45 = v33 & 0x7FFFFFF;
                uint64_t v46 = a1[2] + 16 * v45;
                uint64_t v47 = *(void *)(v46 + 8);
                *(void *)(v46 + 8) = &a2[-a1[3]];
                uint64_t result = sub_2225EDAF8(a1, a2, a3, v12 + 1, a5, a6, a7);
                if (!result) {
                  *(void *)(a1[2] + 16 * v45 + 8) = v47;
                }
                return result;
              case 8uLL:
                uint64_t v48 = v12 + (v33 & 0x7FFFFFF) - 1;
                uint64_t result = sub_2225EDAF8(a1, a2, a3, v12 + 1, v48, a6, a7);
                if (result) {
                  return result;
                }
                while (1)
                {
                  uint64_t v49 = *(void *)(*a1 + 8);
                  if ((*(void *)(v49 + 8 * v48) & 0xF8000000) == 0x90000000) {
                    break;
                  }
                  uint64_t v50 = v48 + 2;
                  uint64_t v51 = *(void *)(v49 + 8 * (v48 + 1)) & 0x7FFFFFFLL;
                  uint64_t v52 = v51 + v48 + 1;
                  uint64_t v53 = v51 + v48;
                  if ((*(void *)(v49 + 8 * v52) & 0xF8000000) == 0x88000000) {
                    uint64_t v48 = v53;
                  }
                  else {
                    uint64_t v48 = v52;
                  }
                  uint64_t result = sub_2225EDAF8(a1, a2, a3, v50, v48, a6, a7);
                  if (result) {
                    return result;
                  }
                }
                return 0;
              default:
                return result;
            }
          }
          uint64_t result = sub_2225EDAF8(a1, a2, v7, v12 + 1, a5, a6, a7);
          if (result) {
            return result;
          }
          uint64_t v12 = (v33 & 0x7FFFFFF) + v10;
LABEL_57:
          if (v12 >= a5) {
            goto LABEL_76;
          }
          goto LABEL_4;
      }
    }
  }
LABEL_76:
  if (a2 == v7) {
    return (uint64_t)a2;
  }
  else {
    return 0;
  }
}

uint64_t sub_2225EE0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  if (a2 != a3)
  {
    uint64_t v7 = a2;
    do
    {
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = *(void *)(v8 + 8 * v7);
      switch(((unint64_t)(v9 & 0xF8000000) - 0x8000000) >> 27)
      {
        case 1uLL:
          if (a5 == (char)v9) {
            goto LABEL_32;
          }
          break;
        case 2uLL:
          if ((a5 & 0xFFFFFFFD) == 0x81) {
            goto LABEL_32;
          }
          break;
        case 3uLL:
          if ((a5 & 0xFFFFFFFE) == 0x82) {
            goto LABEL_32;
          }
          break;
        case 4uLL:
          if (a5 <= 127) {
            goto LABEL_32;
          }
          break;
        case 5uLL:
          if (a5 <= 127)
          {
            uint64_t v13 = *(void *)(a1 + 24) + 32 * (v9 & 0x7FFFFFF);
            if ((*(unsigned char *)(v13 + 8) & *(unsigned char *)(*(void *)v13 + a5)) != 0) {
              goto LABEL_32;
            }
          }
          break;
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0x11uLL:
          *(unsigned char *)(a6 + a2 + 1) |= *(unsigned char *)(a6 + a2);
          break;
        case 9uLL:
          char v14 = *(unsigned char *)(a6 + a2);
          *(unsigned char *)(a6 + a2 + 1) |= v14;
          uint64_t v15 = v9 & 0x7FFFFFF;
          int v16 = *(unsigned __int8 *)(a6 + a2 - v15);
          char v17 = v16 | v14;
          *(unsigned char *)(a6 + a2 - v15) = v17;
          if (v16) {
            BOOL v18 = 1;
          }
          else {
            BOOL v18 = v17 == 0;
          }
          if (!v18)
          {
            v7 += ~v15;
            a2 = v7;
          }
          break;
        case 0xAuLL:
        case 0xEuLL:
          char v10 = *(unsigned char *)(a6 + a2);
          *(unsigned char *)(a6 + a2 + 1) |= v10;
          uint64_t v11 = (v9 & 0x7FFFFFF) + a2;
          char v12 = *(unsigned char *)(a6 + v11) | v10;
          goto LABEL_7;
        case 0xFuLL:
          if (*(unsigned char *)(a6 + a2))
          {
            uint64_t v19 = *(void *)(v8 + 8 * v7 + 8);
            if ((v19 & 0xF8000000) == 0x90000000)
            {
              uint64_t v20 = 1;
            }
            else
            {
              uint64_t v20 = 1;
              do
              {
                v20 += v19 & 0x7FFFFFF;
                uint64_t v19 = *(void *)(v8 + 8 * (v20 + v7));
              }
              while ((v19 & 0xF8000000) != 0x90000000);
            }
            *(unsigned char *)(a6 + v20 + a2) |= *(unsigned char *)(a6 + a2);
          }
          break;
        case 0x10uLL:
          char v21 = *(unsigned char *)(a6 + a2);
          *(unsigned char *)(a6 + a2 + 1) |= v21;
          uint64_t v22 = v9 & 0x7FFFFFF;
          if ((*(void *)(*(void *)(a1 + 8) + 8 * (v22 + v7)) & 0xF8000000) != 0x90000000)
          {
            uint64_t v11 = v22 + a2;
            char v12 = *(unsigned char *)(a6 + v11) | v21;
LABEL_7:
            *(unsigned char *)(a6 + v11) = v12;
          }
          break;
        case 0x12uLL:
          if (a5 != 133) {
            break;
          }
          goto LABEL_32;
        case 0x13uLL:
          if (a5 == 134) {
LABEL_32:
          }
            *(unsigned char *)(a2 + a6 + 1) |= *(unsigned char *)(a4 + a2);
          break;
        default:
          break;
      }
      ++v7;
      ++a2;
    }
    while (v7 != a3);
  }
  return a6;
}

void sub_2225EE328(uint64_t a1)
{
  if (*(_DWORD *)a1 == 62053)
  {
    unsigned __int8 v1 = *(void **)(a1 + 24);
    if (v1)
    {
      if (*(_DWORD *)v1 == 53829)
      {
        *(_DWORD *)a1 = 0;
        *(_DWORD *)unsigned __int8 v1 = 0;
        int v2 = (void *)v1[1];
        if (v2) {
          free(v2);
        }
        int v3 = (void *)v1[3];
        if (v3) {
          free(v3);
        }
        unsigned int v4 = (void *)v1[4];
        if (v4) {
          free(v4);
        }
        int v5 = (void *)v1[12];
        if (v5) {
          free(v5);
        }
        free(v1);
      }
    }
  }
}

unsigned __int8 *sub_2225EE3C4(unsigned char *a1, unint64_t a2, uint64_t a3)
{
  int v3 = (unsigned __int8 *)a2;
  if (a3)
  {
    uint64_t v4 = a3 - 1;
    int v3 = (unsigned __int8 *)a2;
    while (v4)
    {
      int v5 = *v3++;
      *a1++ = v5;
      --v4;
      if (!v5) {
        return &v3[~a2];
      }
    }
    *a1 = 0;
  }
  while (*v3++)
    ;
  return &v3[~a2];
}

uint64_t sub_2225EE404(int a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  uint64_t v1049 = sub_2225F2418(a3);
  uint64_t v1050 = v9;
  if ((unint64_t)sub_2225C3D04((uint64_t)&v1049) >= 4)
  {
    sub_2225C3D00((int)v1048, "__");
    if (sub_2225D0520((uint64_t)&v1049, v1048[0], (size_t)v1048[1]))
    {
      sub_2225C3D00((int)v1047, "__");
      if (sub_2225F2464(&v1049, v1047[0], (size_t)v1047[1]))
      {
        uint64_t v10 = sub_2225C3D04((uint64_t)&v1049);
        uint64_t v1049 = sub_2225CE76C(&v1049, 2uLL, v10 - 4);
        uint64_t v1050 = v11;
      }
    }
  }
  switch(a1)
  {
    case 0:
      sub_2225D934C(v1046, v1049, v1050);
      int v12 = sub_2225DAD0C(a4);
      BOOL v13 = 1;
      BOOL v14 = 1;
      if (v12 != 1) {
        BOOL v14 = sub_2225DAD0C(a4) == 22;
      }
      BOOL v1045 = v14;
      uint64_t v15 = sub_2225DB220((uint64_t)v1046, (uint64_t)"interrupt", (uint64_t)&v1045);
      BOOL v1044 = 1;
      uint64_t v16 = sub_2225F24B8(v15, (uint64_t)"acquire_capability", (uint64_t)&v1044);
      BOOL v1043 = 1;
      uint64_t v17 = sub_2225F24B8(v16, (uint64_t)"acquire_capability", (uint64_t)&v1043);
      BOOL v1042 = 1;
      uint64_t v18 = sub_2225F2530(v17, (uint64_t)"acquire_shared_capability", (uint64_t)&v1042);
      BOOL v1041 = 1;
      uint64_t v19 = sub_2225F2530(v18, (uint64_t)"acquire_shared_capability", (uint64_t)&v1041);
      BOOL v1040 = 1;
      uint64_t v20 = sub_2225F25B4(v19, "exclusive_lock_function", (uint64_t)&v1040);
      BOOL v1039 = 1;
      uint64_t v21 = sub_2225F262C(v20, (uint64_t)"shared_lock_function", (uint64_t)&v1039);
      BOOL v1038 = 1;
      uint64_t v22 = sub_2225DB308(v21, "acquired_after", (uint64_t)&v1038);
      BOOL v1037 = 1;
      uint64_t v23 = sub_2225F26A4(v22, "acquired_before", (uint64_t)&v1037);
      BOOL v1036 = 1;
      uint64_t v24 = sub_2225F2718(v23, "address_space", (uint64_t)&v1036);
      BOOL v1035 = 1;
      uint64_t v25 = sub_2225D9438(v24, (uint64_t)"alias", (uint64_t)&v1035);
      BOOL v1034 = 1;
      uint64_t v26 = sub_2225D9438(v25, (uint64_t)"alias", (uint64_t)&v1034);
      BOOL v1033 = 1;
      uint64_t v27 = sub_2225D9350(v26, "aligned", (uint64_t)&v1033);
      BOOL v1032 = 1;
      uint64_t v28 = sub_2225D9350(v27, "aligned", (uint64_t)&v1032);
      BOOL v1031 = 1;
      uint64_t v29 = sub_2225D9438(v28, (uint64_t)"align", (uint64_t)&v1031);
      BOOL v1030 = 1;
      uint64_t v30 = sub_2225D9350(v29, "alignas", (uint64_t)&v1030);
      BOOL v1029 = 1;
      uint64_t v31 = sub_2225D95FC(v30, "_Alignas", (uint64_t)&v1029);
      BOOL v1028 = 1;
      uint64_t v32 = sub_2225F2718(v31, "always_inline", (uint64_t)&v1028);
      BOOL v1027 = 1;
      uint64_t v33 = sub_2225F2718(v32, "always_inline", (uint64_t)&v1027);
      BOOL v1026 = 1;
      uint64_t v34 = sub_2225F2718(v33, "__forceinline", (uint64_t)&v1026);
      BOOL v1025 = 1;
      uint64_t v35 = sub_2225F278C(v34, (uint64_t)"analyzer_noreturn", (uint64_t)&v1025);
      BOOL v1024 = 1;
      uint64_t v36 = sub_2225D95FC(v35, "annotate", (uint64_t)&v1024);
      BOOL v1023 = 1;
      uint64_t v37 = sub_2225F2804(v36, "objc_arc_weak_reference_unavailable", (uint64_t)&v1023);
      BOOL v1022 = 1;
      uint64_t v38 = sub_2225F2870(v37, "argument_with_type_tag", (uint64_t)&v1022);
      BOOL v1021 = 1;
      uint64_t v39 = sub_2225F28E8(v38, "pointer_with_type_tag", (uint64_t)&v1021);
      BOOL v1020 = 1;
      uint64_t v40 = sub_2225D94AC(v39, (unsigned __int16 *)"asm", (uint64_t)&v1020);
      BOOL v1019 = 1;
      uint64_t v41 = sub_2225D9350(v40, "__asm__", (uint64_t)&v1019);
      BOOL v1018 = 1;
      uint64_t v42 = sub_2225F278C(v41, (uint64_t)"assert_capability", (uint64_t)&v1018);
      BOOL v1017 = 1;
      uint64_t v43 = sub_2225F278C(v42, (uint64_t)"assert_capability", (uint64_t)&v1017);
      BOOL v1016 = 1;
      uint64_t v44 = sub_2225F2960(v43, "assert_shared_capability", (uint64_t)&v1016);
      BOOL v1015 = 1;
      uint64_t v45 = sub_2225F2960(v44, "assert_shared_capability", (uint64_t)&v1015);
      BOOL v1014 = 1;
      uint64_t v46 = sub_2225F28E8(v45, "assert_exclusive_lock", (uint64_t)&v1014);
      BOOL v1013 = 1;
      uint64_t v47 = sub_2225F24B8(v46, (uint64_t)"assert_shared_lock", (uint64_t)&v1013);
      BOOL v1012 = 1;
      uint64_t v48 = sub_2225DB294(v47, (uint64_t)"availability", (uint64_t)&v1012);
      BOOL v1011 = 1;
      uint64_t v49 = sub_2225D9588(v48, (uint64_t)"blocks", (uint64_t)&v1011);
      BOOL v1010 = 1;
      uint64_t v50 = sub_2225D9350(v49, "bounded", (uint64_t)&v1010);
      BOOL v1009 = 1;
      uint64_t v51 = sub_2225DB220(v50, (uint64_t)"_Noreturn", (uint64_t)&v1009);
      BOOL v1008 = 1;
      uint64_t v52 = sub_2225D9438(v51, (uint64_t)"cdecl", (uint64_t)&v1008);
      BOOL v1007 = 1;
      uint64_t v53 = sub_2225D9438(v52, (uint64_t)"cdecl", (uint64_t)&v1007);
      BOOL v1006 = 1;
      uint64_t v54 = sub_2225D9350(v53, "__cdecl", (uint64_t)&v1006);
      BOOL v1005 = 1;
      uint64_t v55 = sub_2225D9588(v54, (uint64_t)"_cdecl", (uint64_t)&v1005);
      BOOL v1004 = 1;
      uint64_t v56 = sub_2225F29D8(v55, "cf_audited_transfer", (uint64_t)&v1004);
      BOOL v1003 = 1;
      uint64_t v57 = sub_2225DAEFC(v56, "cf_consumed", (uint64_t)&v1003);
      BOOL v1002 = 1;
      uint64_t v58 = sub_2225F25B4(v57, "cf_returns_not_retained", (uint64_t)&v1002);
      BOOL v1001 = 1;
      uint64_t v59 = sub_2225F29D8(v58, "cf_returns_retained", (uint64_t)&v1001);
      BOOL v1000 = 1;
      uint64_t v60 = sub_2225F29D8(v59, "cf_unknown_transfer", (uint64_t)&v1000);
      BOOL v999 = 1;
      uint64_t v61 = sub_2225D95FC(v60, "constant", (uint64_t)&v999);
      BOOL v998 = 1;
      uint64_t v62 = sub_2225D9588(v61, (uint64_t)"device", (uint64_t)&v998);
      BOOL v997 = 1;
      uint64_t v63 = sub_2225D9588(v62, (uint64_t)"global", (uint64_t)&v997);
      BOOL v996 = 1;
      uint64_t v64 = sub_2225D9520(v63, "host", (uint64_t)&v996);
      BOOL v995 = 1;
      uint64_t v65 = sub_2225F2718(v64, "launch_bounds", (uint64_t)&v995);
      BOOL v994 = 1;
      uint64_t v66 = sub_2225D9588(v65, (uint64_t)"shared", (uint64_t)&v994);
      BOOL v993 = 1;
      uint64_t v67 = sub_2225D95FC(v66, "noreturn", (uint64_t)&v993);
      BOOL v992 = 1;
      uint64_t v68 = sub_2225F2718(v67, "callable_when", (uint64_t)&v992);
      BOOL v991 = 1;
      uint64_t v69 = sub_2225D93C4(v68, (uint64_t)"capability", (uint64_t)&v991);
      BOOL v990 = 1;
      uint64_t v70 = sub_2225D93C4(v69, (uint64_t)"capability", (uint64_t)&v990);
      BOOL v989 = 1;
      uint64_t v71 = sub_2225F278C(v70, (uint64_t)"shared_capability", (uint64_t)&v989);
      BOOL v988 = 1;
      uint64_t v72 = sub_2225F278C(v71, (uint64_t)"shared_capability", (uint64_t)&v988);
      BOOL v987 = 1;
      uint64_t v73 = sub_2225F24B8(v72, (uint64_t)"carries_dependency", (uint64_t)&v987);
      BOOL v986 = 1;
      uint64_t v74 = sub_2225F24B8(v73, (uint64_t)"carries_dependency", (uint64_t)&v986);
      BOOL v985 = 1;
      uint64_t v75 = sub_2225D9350(v74, "cleanup", (uint64_t)&v985);
      BOOL v984 = 1;
      uint64_t v76 = sub_2225D9350(v75, "cleanup", (uint64_t)&v984);
      char v983 = 1;
      uint64_t v77 = sub_2225D9520(v76, "cold", (uint64_t)&v983);
      char v982 = 1;
      uint64_t v78 = sub_2225D9520(v77, "cold", (uint64_t)&v982);
      char v981 = 1;
      uint64_t v79 = sub_2225D9588(v78, (uint64_t)"common", (uint64_t)&v981);
      char v980 = 1;
      uint64_t v80 = sub_2225D9588(v79, (uint64_t)"common", (uint64_t)&v980);
      char v979 = 1;
      uint64_t v81 = sub_2225D9438(v80, (uint64_t)"const", (uint64_t)&v979);
      char v978 = 1;
      uint64_t v82 = sub_2225D9438(v81, (uint64_t)"const", (uint64_t)&v978);
      char v977 = 1;
      uint64_t v83 = sub_2225D9350(v82, "__const", (uint64_t)&v977);
      char v976 = 1;
      uint64_t v84 = sub_2225D9350(v83, "__const", (uint64_t)&v976);
      char v975 = 1;
      uint64_t v85 = sub_2225DAEFC(v84, "constructor", (uint64_t)&v975);
      char v974 = 1;
      uint64_t v86 = sub_2225DAEFC(v85, "constructor", (uint64_t)&v974);
      char v973 = 1;
      uint64_t v87 = sub_2225D93C4(v86, (uint64_t)"consumable", (uint64_t)&v973);
      char v972 = 1;
      uint64_t v88 = sub_2225F2A50(v87, (uint64_t)"consumable_auto_cast_state", (uint64_t)&v972);
      char v971 = 1;
      uint64_t v89 = sub_2225F2AD4(v88, (uint64_t)"consumable_set_state_on_read", (uint64_t)&v971);
      BOOL v90 = (sub_2225DAD0C(a4) == 24
          || sub_2225DAD0C(a4) == 25
          || sub_2225DAD0C(a4) == 1
          || sub_2225DAD0C(a4) == 22)
         && sub_2225DAD04(a4) == 12;
      char v970 = v90;
      uint64_t v91 = sub_2225DB220(v89, (uint64_t)"dllexport", (uint64_t)&v970);
      BOOL v92 = (sub_2225DAD0C(a4) == 24
          || sub_2225DAD0C(a4) == 25
          || sub_2225DAD0C(a4) == 1
          || sub_2225DAD0C(a4) == 22)
         && sub_2225DAD04(a4) == 12;
      char v969 = v92;
      uint64_t v93 = sub_2225DB220(v91, (uint64_t)"dllexport", (uint64_t)&v969);
      BOOL v94 = (sub_2225DAD0C(a4) == 24
          || sub_2225DAD0C(a4) == 25
          || sub_2225DAD0C(a4) == 1
          || sub_2225DAD0C(a4) == 22)
         && sub_2225DAD04(a4) == 12;
      char v968 = v94;
      uint64_t v95 = sub_2225DB220(v93, (uint64_t)"dllexport", (uint64_t)&v968);
      BOOL v96 = (sub_2225DAD0C(a4) == 24
          || sub_2225DAD0C(a4) == 25
          || sub_2225DAD0C(a4) == 1
          || sub_2225DAD0C(a4) == 22)
         && sub_2225DAD04(a4) == 12;
      char v967 = v96;
      uint64_t v97 = sub_2225DB220(v95, (uint64_t)"dllimport", (uint64_t)&v967);
      BOOL v98 = (sub_2225DAD0C(a4) == 24
          || sub_2225DAD0C(a4) == 25
          || sub_2225DAD0C(a4) == 1
          || sub_2225DAD0C(a4) == 22)
         && sub_2225DAD04(a4) == 12;
      char v966 = v98;
      uint64_t v99 = sub_2225DB220(v97, (uint64_t)"dllimport", (uint64_t)&v966);
      BOOL v100 = (sub_2225DAD0C(a4) == 24
           || sub_2225DAD0C(a4) == 25
           || sub_2225DAD0C(a4) == 1
           || sub_2225DAD0C(a4) == 22)
          && sub_2225DAD04(a4) == 12;
      char v965 = v100;
      uint64_t v101 = sub_2225DB220(v99, (uint64_t)"dllimport", (uint64_t)&v965);
      char v964 = 1;
      uint64_t v102 = sub_2225D93C4(v101, (uint64_t)"deprecated", (uint64_t)&v964);
      char v963 = 1;
      uint64_t v103 = sub_2225D93C4(v102, (uint64_t)"deprecated", (uint64_t)&v963);
      char v962 = 1;
      uint64_t v104 = sub_2225D93C4(v103, (uint64_t)"deprecated", (uint64_t)&v962);
      char v961 = 1;
      uint64_t v105 = sub_2225D93C4(v104, (uint64_t)"deprecated", (uint64_t)&v961);
      char v960 = 1;
      uint64_t v106 = sub_2225D93C4(v105, (uint64_t)"destructor", (uint64_t)&v960);
      char v959 = 1;
      uint64_t v107 = sub_2225D93C4(v106, (uint64_t)"destructor", (uint64_t)&v959);
      char v958 = 1;
      uint64_t v108 = sub_2225DB220(v107, (uint64_t)"enable_if", (uint64_t)&v958);
      char v957 = 1;
      uint64_t v109 = sub_2225F2A50(v108, (uint64_t)"exclusive_trylock_function", (uint64_t)&v957);
      char v956 = 1;
      uint64_t v110 = sub_2225F26A4(v109, "ext_vector_type", (uint64_t)&v956);
      char v955 = 1;
      uint64_t v111 = sub_2225DAEFC(v110, "fallthrough", (uint64_t)&v955);
      char v954 = 1;
      uint64_t v112 = sub_2225D95FC(v111, "fastcall", (uint64_t)&v954);
      BOOL v953 = 1;
      uint64_t v113 = sub_2225D95FC(v112, "fastcall", (uint64_t)&v953);
      char v952 = 1;
      uint64_t v114 = sub_2225D93C4(v113, (uint64_t)"__fastcall", (uint64_t)&v952);
      char v951 = 1;
      uint64_t v115 = sub_2225DB220(v114, (uint64_t)"_fastcall", (uint64_t)&v951);
      char v950 = 1;
      uint64_t v116 = sub_2225D9438(v115, (uint64_t)"final", (uint64_t)&v950);
      char v949 = 1;
      uint64_t v117 = sub_2225D9588(v116, (uint64_t)"sealed", (uint64_t)&v949);
      char v948 = 1;
      uint64_t v118 = sub_2225D9350(v117, "flatten", (uint64_t)&v948);
      char v947 = 1;
      uint64_t v119 = sub_2225D9350(v118, "flatten", (uint64_t)&v947);
      char v946 = 1;
      uint64_t v120 = sub_2225D9588(v119, (uint64_t)"format", (uint64_t)&v946);
      char v945 = 1;
      uint64_t v121 = sub_2225D9588(v120, (uint64_t)"format", (uint64_t)&v945);
      char v944 = 1;
      uint64_t v122 = sub_2225D93C4(v121, (uint64_t)"format_arg", (uint64_t)&v944);
      char v943 = 1;
      uint64_t v123 = sub_2225D93C4(v122, (uint64_t)"format_arg", (uint64_t)&v943);
      char v942 = 1;
      uint64_t v124 = sub_2225D93C4(v123, (uint64_t)"gnu_inline", (uint64_t)&v942);
      char v941 = 1;
      uint64_t v125 = sub_2225D93C4(v124, (uint64_t)"gnu_inline", (uint64_t)&v941);
      char v940 = 1;
      uint64_t v126 = sub_2225D93C4(v125, (uint64_t)"guarded_by", (uint64_t)&v940);
      char v939 = 1;
      uint64_t v127 = sub_2225DAEFC(v126, "guarded_var", (uint64_t)&v939);
      char v938 = 1;
      uint64_t v128 = sub_2225D94AC(v127, (unsigned __int16 *)"hot", (uint64_t)&v938);
      char v937 = 1;
      uint64_t v129 = sub_2225D94AC(v128, (unsigned __int16 *)"hot", (uint64_t)&v937);
      char v936 = 1;
      uint64_t v130 = sub_2225D95FC(v129, "ibaction", (uint64_t)&v936);
      char v935 = 1;
      uint64_t v131 = sub_2225D95FC(v130, "iboutlet", (uint64_t)&v935);
      char v934 = 1;
      uint64_t v132 = sub_2225F24B8(v131, (uint64_t)"iboutletcollection", (uint64_t)&v934);
      char v933 = 1;
      uint64_t v133 = sub_2225F2718(v132, "init_priority", (uint64_t)&v933);
      char v932 = 1;
      uint64_t v134 = sub_2225D95FC(v133, "init_seg", (uint64_t)&v932);
      char v931 = 1;
      uint64_t v135 = sub_2225DB308(v134, "intel_ocl_bicc", (uint64_t)&v931);
      char v930 = 1;
      uint64_t v136 = sub_2225F2718(v135, "lock_returned", (uint64_t)&v930);
      char v929 = 1;
      uint64_t v137 = sub_2225D95FC(v136, "lockable", (uint64_t)&v929);
      char v928 = 1;
      uint64_t v138 = sub_2225DB308(v137, "locks_excluded", (uint64_t)&v928);
      char v927 = 1;
      uint64_t v139 = sub_2225D9520(v138, "loop", (uint64_t)&v927);
      char v926 = 1;
      uint64_t v140 = sub_2225D9588(v139, (uint64_t)"unroll", (uint64_t)&v926);
      char v925 = 1;
      uint64_t v141 = sub_2225D95FC(v140, "nounroll", (uint64_t)&v925);
      char v924 = 1;
      uint64_t v142 = sub_2225D9588(v141, (uint64_t)"ms_abi", (uint64_t)&v924);
      char v923 = 1;
      uint64_t v143 = sub_2225D9588(v142, (uint64_t)"ms_abi", (uint64_t)&v923);
      char v922 = 1;
      uint64_t v144 = sub_2225F262C(v143, (uint64_t)"__single_inheritance", (uint64_t)&v922);
      char v921 = 1;
      uint64_t v145 = sub_2225F2870(v144, "__multiple_inheritance", (uint64_t)&v921);
      char v920 = 1;
      uint64_t v146 = sub_2225F28E8(v145, "__virtual_inheritance", (uint64_t)&v920);
      char v919 = 1;
      uint64_t v147 = sub_2225F2530(v146, (uint64_t)"__unspecified_inheritance", (uint64_t)&v919);
      BOOL v918 = sub_2225DAD0C(a4) == 10;
      uint64_t v148 = sub_2225DB220(v147, (uint64_t)"interrupt", (uint64_t)&v918);
      char v917 = 1;
      uint64_t v149 = sub_2225D9588(v148, (uint64_t)"malloc", (uint64_t)&v917);
      char v916 = 1;
      uint64_t v150 = sub_2225D9588(v149, (uint64_t)"malloc", (uint64_t)&v916);
      char v915 = 1;
      uint64_t v151 = sub_2225DB220(v150, (uint64_t)"may_alias", (uint64_t)&v915);
      char v914 = 1;
      uint64_t v152 = sub_2225DB220(v151, (uint64_t)"may_alias", (uint64_t)&v914);
      char v913 = 1;
      uint64_t v153 = sub_2225D9350(v152, "minsize", (uint64_t)&v913);
      if (sub_2225DAD0C(a4) != 6) {
        BOOL v13 = sub_2225DAD0C(a4) == 7;
      }
      char v912 = v13;
      uint64_t v154 = sub_2225D9588(v153, (uint64_t)"mips16", (uint64_t)&v912);
      int v155 = sub_2225DAD0C(a4);
      BOOL v156 = 1;
      BOOL v157 = 1;
      if (v155 != 6) {
        BOOL v157 = sub_2225DAD0C(a4) == 7;
      }
      char v911 = v157;
      uint64_t v158 = sub_2225D9588(v154, (uint64_t)"mips16", (uint64_t)&v911);
      char v910 = 1;
      uint64_t v159 = sub_2225D9520(v158, "mode", (uint64_t)&v910);
      char v909 = 1;
      uint64_t v160 = sub_2225D9520(v159, "mode", (uint64_t)&v909);
      char v908 = 1;
      uint64_t v161 = sub_2225D95FC(v160, "property", (uint64_t)&v908);
      char v907 = 1;
      uint64_t v162 = sub_2225DB220(v161, (uint64_t)"ms_struct", (uint64_t)&v907);
      char v906 = 1;
      uint64_t v163 = sub_2225DB220(v162, (uint64_t)"ms_struct", (uint64_t)&v906);
      char v905 = 1;
      uint64_t v164 = sub_2225DAEFC(v163, "ns_consumed", (uint64_t)&v905);
      char v904 = 1;
      uint64_t v165 = sub_2225F2B58(v164, "ns_consumes_self", (uint64_t)&v904);
      char v903 = 1;
      uint64_t v166 = sub_2225F25B4(v165, "ns_returns_autoreleased", (uint64_t)&v903);
      char v902 = 1;
      uint64_t v167 = sub_2225F25B4(v166, "ns_returns_not_retained", (uint64_t)&v902);
      char v901 = 1;
      uint64_t v168 = sub_2225F29D8(v167, "ns_returns_retained", (uint64_t)&v901);
      char v900 = 1;
      uint64_t v169 = sub_2225D9438(v168, (uint64_t)"naked", (uint64_t)&v900);
      char v899 = 1;
      uint64_t v170 = sub_2225D9438(v169, (uint64_t)"naked", (uint64_t)&v899);
      char v898 = 1;
      uint64_t v171 = sub_2225D9438(v170, (uint64_t)"naked", (uint64_t)&v898);
      char v897 = 1;
      uint64_t v172 = sub_2225F262C(v171, (uint64_t)"neon_polyvector_type", (uint64_t)&v897);
      char v896 = 1;
      uint64_t v173 = sub_2225F2B58(v172, "neon_vector_type", (uint64_t)&v896);
      char v895 = 1;
      uint64_t v174 = sub_2225D95FC(v173, "nocommon", (uint64_t)&v895);
      char v894 = 1;
      uint64_t v175 = sub_2225D95FC(v174, "nocommon", (uint64_t)&v894);
      char v893 = 1;
      uint64_t v176 = sub_2225D9350(v175, "nodebug", (uint64_t)&v893);
      char v892 = 1;
      uint64_t v177 = sub_2225DAEFC(v176, "noduplicate", (uint64_t)&v892);
      char v891 = 1;
      uint64_t v178 = sub_2225DAEFC(v177, "noduplicate", (uint64_t)&v891);
      char v890 = 1;
      uint64_t v179 = sub_2225D95FC(v178, "noescape", (uint64_t)&v890);
      char v889 = 1;
      uint64_t v180 = sub_2225D95FC(v179, "noescape", (uint64_t)&v889);
      char v888 = 1;
      uint64_t v181 = sub_2225D95FC(v180, "noinline", (uint64_t)&v888);
      char v887 = 1;
      uint64_t v182 = sub_2225D95FC(v181, "noinline", (uint64_t)&v887);
      char v886 = 1;
      uint64_t v183 = sub_2225D95FC(v182, "noinline", (uint64_t)&v886);
      char v885 = 1;
      uint64_t v184 = sub_2225F2870(v183, "no_instrument_function", (uint64_t)&v885);
      char v884 = 1;
      uint64_t v185 = sub_2225F2870(v184, "no_instrument_function", (uint64_t)&v884);
      if (sub_2225DAD0C(a4) != 6) {
        BOOL v156 = sub_2225DAD0C(a4) == 7;
      }
      char v883 = v156;
      uint64_t v186 = sub_2225D95FC(v185, "nomips16", (uint64_t)&v883);
      int v187 = sub_2225DAD0C(a4);
      BOOL v188 = 1;
      if (v187 != 6) {
        BOOL v188 = sub_2225DAD0C(a4) == 7;
      }
      char v882 = v188;
      uint64_t v189 = sub_2225D95FC(v186, "nomips16", (uint64_t)&v882);
      char v881 = 1;
      uint64_t v190 = sub_2225D95FC(v189, "noreturn", (uint64_t)&v881);
      char v880 = 1;
      uint64_t v191 = sub_2225D95FC(v190, "noreturn", (uint64_t)&v880);
      char v879 = 1;
      uint64_t v192 = sub_2225D95FC(v191, "noreturn", (uint64_t)&v879);
      char v878 = 1;
      uint64_t v193 = sub_2225F2A50(v192, (uint64_t)"no_address_safety_analysis", (uint64_t)&v878);
      char v877 = 1;
      uint64_t v194 = sub_2225F2A50(v193, (uint64_t)"no_address_safety_analysis", (uint64_t)&v877);
      char v876 = 1;
      uint64_t v195 = sub_2225F29D8(v194, "no_sanitize_address", (uint64_t)&v876);
      char v875 = 1;
      uint64_t v196 = sub_2225F29D8(v195, "no_sanitize_address", (uint64_t)&v875);
      char v874 = 1;
      uint64_t v197 = sub_2225F24B8(v196, (uint64_t)"no_sanitize_memory", (uint64_t)&v874);
      char v873 = 1;
      uint64_t v198 = sub_2225F24B8(v197, (uint64_t)"no_sanitize_thread", (uint64_t)&v873);
      char v872 = 1;
      uint64_t v199 = sub_2225DB308(v198, "no_split_stack", (uint64_t)&v872);
      char v871 = 1;
      uint64_t v200 = sub_2225DB308(v199, "no_split_stack", (uint64_t)&v871);
      char v870 = 1;
      uint64_t v201 = sub_2225F2530(v200, (uint64_t)"no_thread_safety_analysis", (uint64_t)&v870);
      char v869 = 1;
      uint64_t v202 = sub_2225D9350(v201, "nothrow", (uint64_t)&v869);
      char v868 = 1;
      uint64_t v203 = sub_2225D9350(v202, "nothrow", (uint64_t)&v868);
      char v867 = 1;
      uint64_t v204 = sub_2225D9350(v203, "nothrow", (uint64_t)&v867);
      char v866 = 1;
      uint64_t v205 = sub_2225D9350(v204, "nonnull", (uint64_t)&v866);
      char v865 = 1;
      uint64_t v206 = sub_2225D9350(v205, "nonnull", (uint64_t)&v865);
      char v864 = 1;
      uint64_t v207 = sub_2225DAEFC(v206, "objc_bridge", (uint64_t)&v864);
      char v863 = 1;
      uint64_t v208 = sub_2225F29D8(v207, "objc_bridge_mutable", (uint64_t)&v863);
      char v862 = 1;
      uint64_t v209 = sub_2225F29D8(v208, "objc_bridge_related", (uint64_t)&v862);
      char v861 = 1;
      uint64_t v210 = sub_2225F2960(v209, "objc_complete_definition", (uint64_t)&v861);
      char v860 = 1;
      uint64_t v211 = sub_2225F2BC4(v210, "objc_designated_initializer", (uint64_t)&v860);
      char v859 = 1;
      uint64_t v212 = sub_2225DB308(v211, "objc_exception", (uint64_t)&v859);
      char v858 = 1;
      uint64_t v213 = sub_2225F2C48(v212, "objc_protocol_requires_explicit_implementation", (uint64_t)&v858);
      char v857 = 1;
      uint64_t v214 = sub_2225D9350(v213, "objc_gc", (uint64_t)&v857);
      char v856 = 1;
      uint64_t v215 = sub_2225F24B8(v214, (uint64_t)"objc_method_family", (uint64_t)&v856);
      char v855 = 1;
      uint64_t v216 = sub_2225D95FC(v215, "NSObject", (uint64_t)&v855);
      char v854 = 1;
      uint64_t v217 = sub_2225DB308(v216, "objc_ownership", (uint64_t)&v854);
      char v853 = 1;
      uint64_t v218 = sub_2225F28E8(v217, "objc_precise_lifetime", (uint64_t)&v853);
      char v852 = 1;
      uint64_t v219 = sub_2225F2CB4(v218, "objc_requires_property_definitions", (uint64_t)&v852);
      char v851 = 1;
      uint64_t v220 = sub_2225F29D8(v219, "objc_requires_super", (uint64_t)&v851);
      char v850 = 1;
      uint64_t v221 = sub_2225F2A50(v220, (uint64_t)"objc_returns_inner_pointer", (uint64_t)&v850);
      char v849 = 1;
      uint64_t v222 = sub_2225F26A4(v221, "objc_root_class", (uint64_t)&v849);
      char v848 = 1;
      uint64_t v223 = sub_2225F278C(v222, (uint64_t)"objc_runtime_name", (uint64_t)&v848);
      char v847 = 1;
      uint64_t v224 = sub_2225F2BC4(v223, "objc_subclassing_restricted", (uint64_t)&v847);
      char v846 = 1;
      uint64_t v225 = sub_2225D93C4(v224, (uint64_t)"__constant", (uint64_t)&v846);
      char v845 = 1;
      uint64_t v226 = sub_2225D95FC(v225, "constant", (uint64_t)&v845);
      char v844 = 1;
      uint64_t v227 = sub_2225D95FC(v226, "__global", (uint64_t)&v844);
      char v843 = 1;
      uint64_t v228 = sub_2225D9588(v227, (uint64_t)"global", (uint64_t)&v843);
      char v842 = 1;
      uint64_t v229 = sub_2225DAEFC(v228, "__read_only", (uint64_t)&v842);
      char v841 = 1;
      uint64_t v230 = sub_2225DB220(v229, (uint64_t)"read_only", (uint64_t)&v841);
      char v840 = 1;
      uint64_t v231 = sub_2225DB294(v230, (uint64_t)"__write_only", (uint64_t)&v840);
      char v839 = 1;
      uint64_t v232 = sub_2225D93C4(v231, (uint64_t)"write_only", (uint64_t)&v839);
      char v838 = 1;
      uint64_t v233 = sub_2225DB294(v232, (uint64_t)"__read_write", (uint64_t)&v838);
      char v837 = 1;
      uint64_t v234 = sub_2225D93C4(v233, (uint64_t)"read_write", (uint64_t)&v837);
      char v836 = 1;
      uint64_t v235 = sub_2225D95FC(v234, "__kernel", (uint64_t)&v836);
      char v835 = 1;
      uint64_t v236 = sub_2225D9588(v235, (uint64_t)"kernel", (uint64_t)&v835);
      char v834 = 1;
      uint64_t v237 = sub_2225D9350(v236, "__local", (uint64_t)&v834);
      char v833 = 1;
      uint64_t v238 = sub_2225D9438(v237, (uint64_t)"local", (uint64_t)&v833);
      char v832 = 1;
      uint64_t v239 = sub_2225DB220(v238, (uint64_t)"__private", (uint64_t)&v832);
      char v831 = 1;
      uint64_t v240 = sub_2225D9350(v239, "private", (uint64_t)&v831);
      char v830 = 1;
      uint64_t v241 = sub_2225D9350(v240, "optnone", (uint64_t)&v830);
      char v829 = 1;
      uint64_t v242 = sub_2225D9350(v241, "optnone", (uint64_t)&v829);
      char v828 = 1;
      uint64_t v243 = sub_2225DB294(v242, (uint64_t)"overloadable", (uint64_t)&v828);
      char v827 = 1;
      uint64_t v244 = sub_2225D95FC(v243, "override", (uint64_t)&v827);
      char v826 = 1;
      uint64_t v245 = sub_2225F26A4(v244, "ownership_holds", (uint64_t)&v826);
      char v825 = 1;
      uint64_t v246 = sub_2225F278C(v245, (uint64_t)"ownership_returns", (uint64_t)&v825);
      char v824 = 1;
      uint64_t v247 = sub_2225F26A4(v246, "ownership_takes", (uint64_t)&v824);
      char v823 = 1;
      uint64_t v248 = sub_2225D9588(v247, (uint64_t)"packed", (uint64_t)&v823);
      char v822 = 1;
      uint64_t v249 = sub_2225D9588(v248, (uint64_t)"packed", (uint64_t)&v822);
      char v821 = 1;
      uint64_t v250 = sub_2225F26A4(v249, "param_typestate", (uint64_t)&v821);
      char v820 = 1;
      uint64_t v251 = sub_2225D9588(v250, (uint64_t)"pascal", (uint64_t)&v820);
      char v819 = 1;
      uint64_t v252 = sub_2225D95FC(v251, "__pascal", (uint64_t)&v819);
      char v818 = 1;
      uint64_t v253 = sub_2225D9350(v252, "_pascal", (uint64_t)&v818);
      char v817 = 1;
      uint64_t v254 = sub_2225D94AC(v253, (unsigned __int16 *)"pcs", (uint64_t)&v817);
      BOOL v816 = 1;
      uint64_t v255 = sub_2225D94AC(v254, (unsigned __int16 *)"pcs", (uint64_t)&v816);
      char v815 = 1;
      uint64_t v256 = sub_2225DB220(v255, (uint64_t)"pnaclcall", (uint64_t)&v815);
      char v814 = 1;
      uint64_t v257 = sub_2225F2718(v256, "pt_guarded_by", (uint64_t)&v814);
      char v813 = 1;
      uint64_t v258 = sub_2225DB308(v257, "pt_guarded_var", (uint64_t)&v813);
      char v812 = 1;
      uint64_t v259 = sub_2225D9350(v258, "__ptr32", (uint64_t)&v812);
      char v811 = 1;
      uint64_t v260 = sub_2225D9350(v259, "__ptr64", (uint64_t)&v811);
      char v810 = 1;
      uint64_t v261 = sub_2225D9520(v260, "pure", (uint64_t)&v810);
      char v809 = 1;
      uint64_t v262 = sub_2225D9520(v261, "pure", (uint64_t)&v809);
      char v808 = 1;
      uint64_t v263 = sub_2225D9350(v262, "regparm", (uint64_t)&v808);
      char v807 = 1;
      uint64_t v264 = sub_2225D9350(v263, "regparm", (uint64_t)&v807);
      char v806 = 1;
      uint64_t v265 = sub_2225F24B8(v264, (uint64_t)"release_capability", (uint64_t)&v806);
      char v805 = 1;
      uint64_t v266 = sub_2225F24B8(v265, (uint64_t)"release_capability", (uint64_t)&v805);
      char v804 = 1;
      uint64_t v267 = sub_2225F2530(v266, (uint64_t)"release_shared_capability", (uint64_t)&v804);
      char v803 = 1;
      uint64_t v268 = sub_2225F2530(v267, (uint64_t)"release_shared_capability", (uint64_t)&v803);
      char v802 = 1;
      uint64_t v269 = sub_2225F2A50(v268, (uint64_t)"release_generic_capability", (uint64_t)&v802);
      char v801 = 1;
      uint64_t v270 = sub_2225F2A50(v269, (uint64_t)"release_generic_capability", (uint64_t)&v801);
      char v800 = 1;
      uint64_t v271 = sub_2225F26A4(v270, "unlock_function", (uint64_t)&v800);
      char v799 = 1;
      uint64_t v272 = sub_2225F262C(v271, (uint64_t)"reqd_work_group_size", (uint64_t)&v799);
      char v798 = 1;
      uint64_t v273 = sub_2225F29D8(v272, "requires_capability", (uint64_t)&v798);
      char v797 = 1;
      uint64_t v274 = sub_2225F29D8(v273, "requires_capability", (uint64_t)&v797);
      char v796 = 1;
      uint64_t v275 = sub_2225F2960(v274, "exclusive_locks_required", (uint64_t)&v796);
      char v795 = 1;
      uint64_t v276 = sub_2225F2A50(v275, (uint64_t)"requires_shared_capability", (uint64_t)&v795);
      char v794 = 1;
      uint64_t v277 = sub_2225F2A50(v276, (uint64_t)"requires_shared_capability", (uint64_t)&v794);
      char v793 = 1;
      uint64_t v278 = sub_2225F28E8(v277, "shared_locks_required", (uint64_t)&v793);
      char v792 = 1;
      uint64_t v279 = sub_2225F2B58(v278, "return_typestate", (uint64_t)&v792);
      char v791 = 1;
      uint64_t v280 = sub_2225F26A4(v279, "returns_nonnull", (uint64_t)&v791);
      char v790 = 1;
      uint64_t v281 = sub_2225F26A4(v280, "returns_nonnull", (uint64_t)&v790);
      char v789 = 1;
      uint64_t v282 = sub_2225F2718(v281, "returns_twice", (uint64_t)&v789);
      char v788 = 1;
      uint64_t v283 = sub_2225F2718(v282, "returns_twice", (uint64_t)&v788);
      char v787 = 1;
      uint64_t v284 = sub_2225D9588(v283, (uint64_t)"__sptr", (uint64_t)&v787);
      char v786 = 1;
      uint64_t v285 = sub_2225F26A4(v284, "scoped_lockable", (uint64_t)&v786);
      char v785 = 1;
      uint64_t v286 = sub_2225D9350(v285, "section", (uint64_t)&v785);
      char v784 = 1;
      uint64_t v287 = sub_2225D9350(v286, "section", (uint64_t)&v784);
      char v783 = 1;
      uint64_t v288 = sub_2225D95FC(v287, "allocate", (uint64_t)&v783);
      char v782 = 1;
      uint64_t v289 = sub_2225DB220(v288, (uint64_t)"selectany", (uint64_t)&v782);
      char v781 = 1;
      uint64_t v290 = sub_2225D95FC(v289, "sentinel", (uint64_t)&v781);
      char v780 = 1;
      uint64_t v291 = sub_2225D95FC(v290, "sentinel", (uint64_t)&v780);
      char v779 = 1;
      uint64_t v292 = sub_2225F2718(v291, "set_typestate", (uint64_t)&v779);
      char v778 = 1;
      uint64_t v293 = sub_2225F25B4(v292, "shared_trylock_function", (uint64_t)&v778);
      char v777 = 1;
      uint64_t v294 = sub_2225D9350(v293, "stdcall", (uint64_t)&v777);
      char v776 = 1;
      uint64_t v295 = sub_2225D9350(v294, "stdcall", (uint64_t)&v776);
      char v775 = 1;
      uint64_t v296 = sub_2225DB220(v295, (uint64_t)"__stdcall", (uint64_t)&v775);
      char v774 = 1;
      uint64_t v297 = sub_2225D95FC(v296, "_stdcall", (uint64_t)&v774);
      char v773 = 1;
      uint64_t v298 = sub_2225D95FC(v297, "sysv_abi", (uint64_t)&v773);
      char v772 = 1;
      uint64_t v299 = sub_2225D95FC(v298, "sysv_abi", (uint64_t)&v772);
      char v771 = 1;
      uint64_t v300 = sub_2225DB220(v299, (uint64_t)"tls_model", (uint64_t)&v771);
      char v770 = 1;
      uint64_t v301 = sub_2225DB220(v300, (uint64_t)"tls_model", (uint64_t)&v770);
      char v769 = 1;
      uint64_t v302 = sub_2225DB308(v301, "test_typestate", (uint64_t)&v769);
      char v768 = 1;
      uint64_t v303 = sub_2225D95FC(v302, "thiscall", (uint64_t)&v768);
      char v767 = 1;
      uint64_t v304 = sub_2225D95FC(v303, "thiscall", (uint64_t)&v767);
      char v766 = 1;
      uint64_t v305 = sub_2225D93C4(v304, (uint64_t)"__thiscall", (uint64_t)&v766);
      char v765 = 1;
      uint64_t v306 = sub_2225DB220(v305, (uint64_t)"_thiscall", (uint64_t)&v765);
      char v764 = 1;
      uint64_t v307 = sub_2225D9588(v306, (uint64_t)"thread", (uint64_t)&v764);
      char v763 = 1;
      uint64_t v308 = sub_2225F278C(v307, (uint64_t)"transparent_union", (uint64_t)&v763);
      char v762 = 1;
      uint64_t v309 = sub_2225F278C(v308, (uint64_t)"transparent_union", (uint64_t)&v762);
      char v761 = 1;
      uint64_t v310 = sub_2225F2870(v309, "try_acquire_capability", (uint64_t)&v761);
      char v760 = 1;
      uint64_t v311 = sub_2225F2870(v310, "try_acquire_capability", (uint64_t)&v760);
      char v759 = 1;
      uint64_t v312 = sub_2225F2D20(v311, "try_acquire_shared_capability", (uint64_t)&v759);
      char v758 = 1;
      uint64_t v313 = sub_2225F2D20(v312, "try_acquire_shared_capability", (uint64_t)&v758);
      char v757 = 1;
      uint64_t v314 = sub_2225DB220(v313, (uint64_t)"__nonnull", (uint64_t)&v757);
      char v756 = 1;
      uint64_t v315 = sub_2225F24B8(v314, (uint64_t)"__null_unspecified", (uint64_t)&v756);
      char v755 = 1;
      uint64_t v316 = sub_2225D93C4(v315, (uint64_t)"__nullable", (uint64_t)&v755);
      char v754 = 1;
      uint64_t v317 = sub_2225F28E8(v316, "type_tag_for_datatype", (uint64_t)&v754);
      char v753 = 1;
      uint64_t v318 = sub_2225F26A4(v317, "type_visibility", (uint64_t)&v753);
      char v752 = 1;
      uint64_t v319 = sub_2225F26A4(v318, "type_visibility", (uint64_t)&v752);
      char v751 = 1;
      uint64_t v320 = sub_2225D9588(v319, (uint64_t)"__uptr", (uint64_t)&v751);
      char v750 = 1;
      uint64_t v321 = sub_2225DAEFC(v320, "__unaligned", (uint64_t)&v750);
      char v749 = 1;
      uint64_t v322 = sub_2225DAEFC(v321, "unavailable", (uint64_t)&v749);
      char v748 = 1;
      uint64_t v323 = sub_2225D9588(v322, (uint64_t)"unused", (uint64_t)&v748);
      char v747 = 1;
      uint64_t v324 = sub_2225D9588(v323, (uint64_t)"unused", (uint64_t)&v747);
      char v746 = 1;
      uint64_t v325 = sub_2225D9520(v324, "used", (uint64_t)&v746);
      char v745 = 1;
      uint64_t v326 = sub_2225D9520(v325, "used", (uint64_t)&v745);
      char v744 = 1;
      uint64_t v327 = sub_2225D9520(v326, "uuid", (uint64_t)&v744);
      char v743 = 1;
      uint64_t v328 = sub_2225DB220(v327, (uint64_t)"vecreturn", (uint64_t)&v743);
      char v742 = 1;
      uint64_t v329 = sub_2225F2718(v328, "vec_type_hint", (uint64_t)&v742);
      char v741 = 1;
      uint64_t v330 = sub_2225DAEFC(v329, "vector_size", (uint64_t)&v741);
      char v740 = 1;
      uint64_t v331 = sub_2225DAEFC(v330, "vector_size", (uint64_t)&v740);
      char v739 = 1;
      uint64_t v332 = sub_2225D93C4(v331, (uint64_t)"visibility", (uint64_t)&v739);
      char v738 = 1;
      uint64_t v333 = sub_2225D93C4(v332, (uint64_t)"visibility", (uint64_t)&v738);
      char v737 = 1;
      uint64_t v334 = sub_2225DAEFC(v333, "warn_unused", (uint64_t)&v737);
      char v736 = 1;
      uint64_t v335 = sub_2225F24B8(v334, (uint64_t)"warn_unused_result", (uint64_t)&v736);
      char v735 = 1;
      uint64_t v336 = sub_2225F24B8(v335, (uint64_t)"warn_unused_result", (uint64_t)&v735);
      char v734 = 1;
      uint64_t v337 = sub_2225F24B8(v336, (uint64_t)"warn_unused_result", (uint64_t)&v734);
      char v733 = 1;
      uint64_t v338 = sub_2225D9520(v337, "weak", (uint64_t)&v733);
      char v732 = 1;
      uint64_t v339 = sub_2225D9520(v338, "weak", (uint64_t)&v732);
      char v731 = 1;
      uint64_t v340 = sub_2225DAEFC(v339, "weak_import", (uint64_t)&v731);
      char v730 = 1;
      uint64_t v341 = sub_2225D9350(v340, "weakref", (uint64_t)&v730);
      char v729 = 1;
      uint64_t v342 = sub_2225D9350(v341, "weakref", (uint64_t)&v729);
      char v728 = 1;
      uint64_t v343 = sub_2225D9438(v342, (uint64_t)"__w64", (uint64_t)&v728);
      char v727 = 1;
      uint64_t v344 = sub_2225F262C(v343, (uint64_t)"work_group_size_hint", (uint64_t)&v727);
      BOOL v726 = sub_2225DAD0C(a4) == 24;
      uint64_t v345 = sub_2225F25B4(v344, "force_align_arg_pointer", (uint64_t)&v726);
      char v725 = 0;
      v346 = (BOOL *)&v725;
      return sub_2225F2DA4(v345, (unsigned __int8 *)v346);
    case 1:
      sub_2225D934C(v1046, v1049, v1050);
      int v348 = sub_2225DAD0C(a4);
      BOOL v349 = 1;
      if (v348 != 1) {
        BOOL v349 = sub_2225DAD0C(a4) == 22;
      }
      BOOL v1045 = v349;
      uint64_t v350 = sub_2225DB220((uint64_t)v1046, (uint64_t)"interrupt", (uint64_t)&v1045);
      BOOL v1044 = 1;
      uint64_t v351 = sub_2225F24B8(v350, (uint64_t)"acquire_capability", (uint64_t)&v1044);
      BOOL v1043 = 1;
      uint64_t v352 = sub_2225F2530(v351, (uint64_t)"acquire_shared_capability", (uint64_t)&v1043);
      BOOL v1042 = 1;
      uint64_t v353 = sub_2225F25B4(v352, "exclusive_lock_function", (uint64_t)&v1042);
      BOOL v1041 = 1;
      uint64_t v354 = sub_2225F262C(v353, (uint64_t)"shared_lock_function", (uint64_t)&v1041);
      BOOL v1040 = 1;
      uint64_t v355 = sub_2225F24B8(v354, (uint64_t)"acquire_capability", (uint64_t)&v1040);
      BOOL v1039 = 1;
      uint64_t v356 = sub_2225F2530(v355, (uint64_t)"acquire_shared_capability", (uint64_t)&v1039);
      BOOL v1038 = 1;
      uint64_t v357 = sub_2225F25B4(v356, "exclusive_lock_function", (uint64_t)&v1038);
      BOOL v1037 = 1;
      uint64_t v358 = sub_2225F262C(v357, (uint64_t)"shared_lock_function", (uint64_t)&v1037);
      BOOL v1036 = 1;
      uint64_t v359 = sub_2225F24B8(v358, (uint64_t)"acquire_capability", (uint64_t)&v1036);
      BOOL v1035 = 1;
      uint64_t v360 = sub_2225F2530(v359, (uint64_t)"acquire_shared_capability", (uint64_t)&v1035);
      BOOL v1034 = 1;
      uint64_t v361 = sub_2225F25B4(v360, "exclusive_lock_function", (uint64_t)&v1034);
      BOOL v1033 = 1;
      uint64_t v362 = sub_2225F262C(v361, (uint64_t)"shared_lock_function", (uint64_t)&v1033);
      BOOL v1032 = 1;
      uint64_t v363 = sub_2225F24B8(v362, (uint64_t)"acquire_capability", (uint64_t)&v1032);
      BOOL v1031 = 1;
      uint64_t v364 = sub_2225F2530(v363, (uint64_t)"acquire_shared_capability", (uint64_t)&v1031);
      BOOL v1030 = 1;
      uint64_t v365 = sub_2225F25B4(v364, "exclusive_lock_function", (uint64_t)&v1030);
      BOOL v1029 = 1;
      uint64_t v366 = sub_2225F262C(v365, (uint64_t)"shared_lock_function", (uint64_t)&v1029);
      BOOL v1028 = 1;
      uint64_t v367 = sub_2225DB308(v366, "acquired_after", (uint64_t)&v1028);
      BOOL v1027 = 1;
      uint64_t v368 = sub_2225F26A4(v367, "acquired_before", (uint64_t)&v1027);
      BOOL v1026 = 1;
      uint64_t v369 = sub_2225F2718(v368, "address_space", (uint64_t)&v1026);
      BOOL v1025 = 1;
      uint64_t v370 = sub_2225D9438(v369, (uint64_t)"alias", (uint64_t)&v1025);
      BOOL v1024 = 1;
      uint64_t v371 = sub_2225D9350(v370, "aligned", (uint64_t)&v1024);
      BOOL v1023 = 1;
      uint64_t v372 = sub_2225F2718(v371, "always_inline", (uint64_t)&v1023);
      BOOL v1022 = 1;
      uint64_t v373 = sub_2225F278C(v372, (uint64_t)"analyzer_noreturn", (uint64_t)&v1022);
      BOOL v1021 = 1;
      uint64_t v374 = sub_2225D95FC(v373, "annotate", (uint64_t)&v1021);
      BOOL v1020 = 1;
      uint64_t v375 = sub_2225F2804(v374, "objc_arc_weak_reference_unavailable", (uint64_t)&v1020);
      BOOL v1019 = 1;
      uint64_t v376 = sub_2225F2870(v375, "argument_with_type_tag", (uint64_t)&v1019);
      BOOL v1018 = 1;
      uint64_t v377 = sub_2225F28E8(v376, "pointer_with_type_tag", (uint64_t)&v1018);
      BOOL v1017 = 1;
      uint64_t v378 = sub_2225F2870(v377, "argument_with_type_tag", (uint64_t)&v1017);
      BOOL v1016 = 1;
      uint64_t v379 = sub_2225F28E8(v378, "pointer_with_type_tag", (uint64_t)&v1016);
      BOOL v1015 = 1;
      uint64_t v380 = sub_2225F278C(v379, (uint64_t)"assert_capability", (uint64_t)&v1015);
      BOOL v1014 = 1;
      uint64_t v381 = sub_2225F2960(v380, "assert_shared_capability", (uint64_t)&v1014);
      BOOL v1013 = 1;
      uint64_t v382 = sub_2225F278C(v381, (uint64_t)"assert_capability", (uint64_t)&v1013);
      BOOL v1012 = 1;
      uint64_t v383 = sub_2225F2960(v382, "assert_shared_capability", (uint64_t)&v1012);
      BOOL v1011 = 1;
      uint64_t v384 = sub_2225F28E8(v383, "assert_exclusive_lock", (uint64_t)&v1011);
      BOOL v1010 = 1;
      uint64_t v385 = sub_2225F24B8(v384, (uint64_t)"assert_shared_lock", (uint64_t)&v1010);
      BOOL v1009 = 1;
      uint64_t v386 = sub_2225DB294(v385, (uint64_t)"availability", (uint64_t)&v1009);
      BOOL v1008 = 1;
      uint64_t v387 = sub_2225D9588(v386, (uint64_t)"blocks", (uint64_t)&v1008);
      BOOL v1007 = 1;
      uint64_t v388 = sub_2225D9350(v387, "bounded", (uint64_t)&v1007);
      BOOL v1006 = 1;
      uint64_t v389 = sub_2225D9438(v388, (uint64_t)"cdecl", (uint64_t)&v1006);
      BOOL v1005 = 1;
      uint64_t v390 = sub_2225F29D8(v389, "cf_audited_transfer", (uint64_t)&v1005);
      BOOL v1004 = 1;
      uint64_t v391 = sub_2225DAEFC(v390, "cf_consumed", (uint64_t)&v1004);
      BOOL v1003 = 1;
      uint64_t v392 = sub_2225F25B4(v391, "cf_returns_not_retained", (uint64_t)&v1003);
      BOOL v1002 = 1;
      uint64_t v393 = sub_2225F29D8(v392, "cf_returns_retained", (uint64_t)&v1002);
      BOOL v1001 = 1;
      uint64_t v394 = sub_2225F29D8(v393, "cf_unknown_transfer", (uint64_t)&v1001);
      BOOL v1000 = 1;
      uint64_t v395 = sub_2225D95FC(v394, "constant", (uint64_t)&v1000);
      BOOL v999 = 1;
      uint64_t v396 = sub_2225D9588(v395, (uint64_t)"device", (uint64_t)&v999);
      BOOL v998 = 1;
      uint64_t v397 = sub_2225D9588(v396, (uint64_t)"global", (uint64_t)&v998);
      BOOL v997 = 1;
      uint64_t v398 = sub_2225D9520(v397, "host", (uint64_t)&v997);
      BOOL v996 = 1;
      uint64_t v399 = sub_2225F2718(v398, "launch_bounds", (uint64_t)&v996);
      BOOL v995 = 1;
      uint64_t v400 = sub_2225D9588(v399, (uint64_t)"shared", (uint64_t)&v995);
      BOOL v994 = 1;
      uint64_t v401 = sub_2225F2718(v400, "callable_when", (uint64_t)&v994);
      BOOL v993 = 1;
      uint64_t v402 = sub_2225D93C4(v401, (uint64_t)"capability", (uint64_t)&v993);
      BOOL v992 = 1;
      uint64_t v403 = sub_2225F278C(v402, (uint64_t)"shared_capability", (uint64_t)&v992);
      BOOL v991 = 1;
      uint64_t v404 = sub_2225D93C4(v403, (uint64_t)"capability", (uint64_t)&v991);
      BOOL v990 = 1;
      uint64_t v405 = sub_2225F278C(v404, (uint64_t)"shared_capability", (uint64_t)&v990);
      BOOL v989 = 1;
      uint64_t v406 = sub_2225F24B8(v405, (uint64_t)"carries_dependency", (uint64_t)&v989);
      BOOL v988 = 1;
      uint64_t v407 = sub_2225D9350(v406, "cleanup", (uint64_t)&v988);
      BOOL v987 = 1;
      uint64_t v408 = sub_2225D9520(v407, "cold", (uint64_t)&v987);
      BOOL v986 = 1;
      uint64_t v409 = sub_2225D9588(v408, (uint64_t)"common", (uint64_t)&v986);
      BOOL v985 = 1;
      uint64_t v410 = sub_2225D9438(v409, (uint64_t)"const", (uint64_t)&v985);
      BOOL v984 = 1;
      uint64_t v411 = sub_2225D9350(v410, "__const", (uint64_t)&v984);
      char v983 = 1;
      uint64_t v412 = sub_2225D9438(v411, (uint64_t)"const", (uint64_t)&v983);
      char v982 = 1;
      uint64_t v413 = sub_2225D9350(v412, "__const", (uint64_t)&v982);
      char v981 = 1;
      uint64_t v414 = sub_2225DAEFC(v413, "constructor", (uint64_t)&v981);
      char v980 = 1;
      uint64_t v415 = sub_2225D93C4(v414, (uint64_t)"consumable", (uint64_t)&v980);
      char v979 = 1;
      uint64_t v416 = sub_2225F2A50(v415, (uint64_t)"consumable_auto_cast_state", (uint64_t)&v979);
      char v978 = 1;
      uint64_t v417 = sub_2225F2AD4(v416, (uint64_t)"consumable_set_state_on_read", (uint64_t)&v978);
      BOOL v418 = (sub_2225DAD0C(a4) == 24
           || sub_2225DAD0C(a4) == 25
           || sub_2225DAD0C(a4) == 1
           || sub_2225DAD0C(a4) == 22)
          && sub_2225DAD04(a4) == 12;
      char v977 = v418;
      uint64_t v419 = sub_2225DB220(v417, (uint64_t)"dllexport", (uint64_t)&v977);
      BOOL v420 = (sub_2225DAD0C(a4) == 24
           || sub_2225DAD0C(a4) == 25
           || sub_2225DAD0C(a4) == 1
           || sub_2225DAD0C(a4) == 22)
          && sub_2225DAD04(a4) == 12;
      char v976 = v420;
      uint64_t v421 = sub_2225DB220(v419, (uint64_t)"dllimport", (uint64_t)&v976);
      BOOL v422 = 1;
      char v975 = 1;
      uint64_t v423 = sub_2225D93C4(v421, (uint64_t)"deprecated", (uint64_t)&v975);
      char v974 = 1;
      uint64_t v424 = sub_2225D93C4(v423, (uint64_t)"destructor", (uint64_t)&v974);
      char v973 = 1;
      uint64_t v425 = sub_2225DB220(v424, (uint64_t)"enable_if", (uint64_t)&v973);
      char v972 = 1;
      uint64_t v426 = sub_2225F2A50(v425, (uint64_t)"exclusive_trylock_function", (uint64_t)&v972);
      char v971 = 1;
      uint64_t v427 = sub_2225F26A4(v426, "ext_vector_type", (uint64_t)&v971);
      char v970 = 1;
      uint64_t v428 = sub_2225D95FC(v427, "fastcall", (uint64_t)&v970);
      char v969 = 1;
      uint64_t v429 = sub_2225D9350(v428, "flatten", (uint64_t)&v969);
      char v968 = 1;
      uint64_t v430 = sub_2225D9588(v429, (uint64_t)"format", (uint64_t)&v968);
      char v967 = 1;
      uint64_t v431 = sub_2225D93C4(v430, (uint64_t)"format_arg", (uint64_t)&v967);
      char v966 = 1;
      uint64_t v432 = sub_2225D93C4(v431, (uint64_t)"gnu_inline", (uint64_t)&v966);
      char v965 = 1;
      uint64_t v433 = sub_2225D93C4(v432, (uint64_t)"guarded_by", (uint64_t)&v965);
      char v964 = 1;
      uint64_t v434 = sub_2225DAEFC(v433, "guarded_var", (uint64_t)&v964);
      char v963 = 1;
      uint64_t v435 = sub_2225D94AC(v434, (unsigned __int16 *)"hot", (uint64_t)&v963);
      char v962 = 1;
      uint64_t v436 = sub_2225D95FC(v435, "ibaction", (uint64_t)&v962);
      char v961 = 1;
      uint64_t v437 = sub_2225D95FC(v436, "iboutlet", (uint64_t)&v961);
      char v960 = 1;
      uint64_t v438 = sub_2225F24B8(v437, (uint64_t)"iboutletcollection", (uint64_t)&v960);
      char v959 = 1;
      uint64_t v439 = sub_2225F2718(v438, "init_priority", (uint64_t)&v959);
      char v958 = 1;
      uint64_t v440 = sub_2225DB308(v439, "intel_ocl_bicc", (uint64_t)&v958);
      char v957 = 1;
      uint64_t v441 = sub_2225F2718(v440, "lock_returned", (uint64_t)&v957);
      char v956 = 1;
      uint64_t v442 = sub_2225D95FC(v441, "lockable", (uint64_t)&v956);
      char v955 = 1;
      uint64_t v443 = sub_2225DB308(v442, "locks_excluded", (uint64_t)&v955);
      char v954 = 1;
      uint64_t v444 = sub_2225D9588(v443, (uint64_t)"ms_abi", (uint64_t)&v954);
      BOOL v953 = sub_2225DAD0C(a4) == 10;
      uint64_t v445 = sub_2225DB220(v444, (uint64_t)"interrupt", (uint64_t)&v953);
      char v952 = 1;
      uint64_t v446 = sub_2225D9588(v445, (uint64_t)"malloc", (uint64_t)&v952);
      char v951 = 1;
      uint64_t v447 = sub_2225DB220(v446, (uint64_t)"may_alias", (uint64_t)&v951);
      char v950 = 1;
      uint64_t v448 = sub_2225D9350(v447, "minsize", (uint64_t)&v950);
      int v449 = sub_2225DAD0C(a4);
      BOOL v450 = 1;
      if (v449 != 6) {
        BOOL v450 = sub_2225DAD0C(a4) == 7;
      }
      char v949 = v450;
      uint64_t v451 = sub_2225D9588(v448, (uint64_t)"mips16", (uint64_t)&v949);
      char v948 = 1;
      uint64_t v452 = sub_2225D9520(v451, "mode", (uint64_t)&v948);
      char v947 = 1;
      uint64_t v453 = sub_2225DB220(v452, (uint64_t)"ms_struct", (uint64_t)&v947);
      char v946 = 1;
      uint64_t v454 = sub_2225DAEFC(v453, "ns_consumed", (uint64_t)&v946);
      char v945 = 1;
      uint64_t v455 = sub_2225F2B58(v454, "ns_consumes_self", (uint64_t)&v945);
      char v944 = 1;
      uint64_t v456 = sub_2225F25B4(v455, "ns_returns_autoreleased", (uint64_t)&v944);
      char v943 = 1;
      uint64_t v457 = sub_2225F25B4(v456, "ns_returns_not_retained", (uint64_t)&v943);
      char v942 = 1;
      uint64_t v458 = sub_2225F29D8(v457, "ns_returns_retained", (uint64_t)&v942);
      char v941 = 1;
      uint64_t v459 = sub_2225D9438(v458, (uint64_t)"naked", (uint64_t)&v941);
      char v940 = 1;
      uint64_t v460 = sub_2225F262C(v459, (uint64_t)"neon_polyvector_type", (uint64_t)&v940);
      char v939 = 1;
      uint64_t v461 = sub_2225F2B58(v460, "neon_vector_type", (uint64_t)&v939);
      char v938 = 1;
      uint64_t v462 = sub_2225D95FC(v461, "nocommon", (uint64_t)&v938);
      char v937 = 1;
      uint64_t v463 = sub_2225D9350(v462, "nodebug", (uint64_t)&v937);
      char v936 = 1;
      uint64_t v464 = sub_2225DAEFC(v463, "noduplicate", (uint64_t)&v936);
      char v935 = 1;
      uint64_t v465 = sub_2225D95FC(v464, "noescape", (uint64_t)&v935);
      char v934 = 1;
      uint64_t v466 = sub_2225D95FC(v465, "noinline", (uint64_t)&v934);
      char v933 = 1;
      uint64_t v467 = sub_2225F2870(v466, "no_instrument_function", (uint64_t)&v933);
      if (sub_2225DAD0C(a4) != 6) {
        BOOL v422 = sub_2225DAD0C(a4) == 7;
      }
      char v932 = v422;
      uint64_t v468 = sub_2225D95FC(v467, "nomips16", (uint64_t)&v932);
      char v931 = 1;
      uint64_t v469 = sub_2225D95FC(v468, "noreturn", (uint64_t)&v931);
      char v930 = 1;
      uint64_t v470 = sub_2225F2A50(v469, (uint64_t)"no_address_safety_analysis", (uint64_t)&v930);
      char v929 = 1;
      uint64_t v471 = sub_2225F29D8(v470, "no_sanitize_address", (uint64_t)&v929);
      char v928 = 1;
      uint64_t v472 = sub_2225F2A50(v471, (uint64_t)"no_address_safety_analysis", (uint64_t)&v928);
      char v927 = 1;
      uint64_t v473 = sub_2225F29D8(v472, "no_sanitize_address", (uint64_t)&v927);
      char v926 = 1;
      uint64_t v474 = sub_2225F24B8(v473, (uint64_t)"no_sanitize_memory", (uint64_t)&v926);
      char v925 = 1;
      uint64_t v475 = sub_2225F24B8(v474, (uint64_t)"no_sanitize_thread", (uint64_t)&v925);
      char v924 = 1;
      uint64_t v476 = sub_2225DB308(v475, "no_split_stack", (uint64_t)&v924);
      char v923 = 1;
      uint64_t v477 = sub_2225F2530(v476, (uint64_t)"no_thread_safety_analysis", (uint64_t)&v923);
      char v922 = 1;
      uint64_t v478 = sub_2225D9350(v477, "nothrow", (uint64_t)&v922);
      char v921 = 1;
      uint64_t v479 = sub_2225D9350(v478, "nonnull", (uint64_t)&v921);
      char v920 = 1;
      uint64_t v480 = sub_2225DAEFC(v479, "objc_bridge", (uint64_t)&v920);
      char v919 = 1;
      uint64_t v481 = sub_2225F29D8(v480, "objc_bridge_mutable", (uint64_t)&v919);
      BOOL v918 = 1;
      uint64_t v482 = sub_2225F29D8(v481, "objc_bridge_related", (uint64_t)&v918);
      char v917 = 1;
      uint64_t v483 = sub_2225F2960(v482, "objc_complete_definition", (uint64_t)&v917);
      char v916 = 1;
      uint64_t v484 = sub_2225F2BC4(v483, "objc_designated_initializer", (uint64_t)&v916);
      char v915 = 1;
      uint64_t v485 = sub_2225DB308(v484, "objc_exception", (uint64_t)&v915);
      char v914 = 1;
      uint64_t v486 = sub_2225F2C48(v485, "objc_protocol_requires_explicit_implementation", (uint64_t)&v914);
      char v913 = 1;
      uint64_t v487 = sub_2225D9350(v486, "objc_gc", (uint64_t)&v913);
      char v912 = 1;
      uint64_t v488 = sub_2225F24B8(v487, (uint64_t)"objc_method_family", (uint64_t)&v912);
      char v911 = 1;
      uint64_t v489 = sub_2225D95FC(v488, "NSObject", (uint64_t)&v911);
      char v910 = 1;
      uint64_t v490 = sub_2225DB308(v489, "objc_ownership", (uint64_t)&v910);
      char v909 = 1;
      uint64_t v491 = sub_2225F28E8(v490, "objc_precise_lifetime", (uint64_t)&v909);
      char v908 = 1;
      uint64_t v492 = sub_2225F2CB4(v491, "objc_requires_property_definitions", (uint64_t)&v908);
      char v907 = 1;
      uint64_t v493 = sub_2225F29D8(v492, "objc_requires_super", (uint64_t)&v907);
      char v906 = 1;
      uint64_t v494 = sub_2225F2A50(v493, (uint64_t)"objc_returns_inner_pointer", (uint64_t)&v906);
      char v905 = 1;
      uint64_t v495 = sub_2225F26A4(v494, "objc_root_class", (uint64_t)&v905);
      char v904 = 1;
      uint64_t v496 = sub_2225F278C(v495, (uint64_t)"objc_runtime_name", (uint64_t)&v904);
      char v903 = 1;
      uint64_t v497 = sub_2225F2BC4(v496, "objc_subclassing_restricted", (uint64_t)&v903);
      char v902 = 1;
      uint64_t v498 = sub_2225D9350(v497, "optnone", (uint64_t)&v902);
      char v901 = 1;
      uint64_t v499 = sub_2225DB294(v498, (uint64_t)"overloadable", (uint64_t)&v901);
      char v900 = 1;
      uint64_t v500 = sub_2225F26A4(v499, "ownership_holds", (uint64_t)&v900);
      char v899 = 1;
      uint64_t v501 = sub_2225F278C(v500, (uint64_t)"ownership_returns", (uint64_t)&v899);
      char v898 = 1;
      uint64_t v502 = sub_2225F26A4(v501, "ownership_takes", (uint64_t)&v898);
      char v897 = 1;
      uint64_t v503 = sub_2225F26A4(v502, "ownership_holds", (uint64_t)&v897);
      char v896 = 1;
      uint64_t v504 = sub_2225F278C(v503, (uint64_t)"ownership_returns", (uint64_t)&v896);
      char v895 = 1;
      uint64_t v505 = sub_2225F26A4(v504, "ownership_takes", (uint64_t)&v895);
      char v894 = 1;
      uint64_t v506 = sub_2225F26A4(v505, "ownership_holds", (uint64_t)&v894);
      char v893 = 1;
      uint64_t v507 = sub_2225F278C(v506, (uint64_t)"ownership_returns", (uint64_t)&v893);
      char v892 = 1;
      uint64_t v508 = sub_2225F26A4(v507, "ownership_takes", (uint64_t)&v892);
      char v891 = 1;
      uint64_t v509 = sub_2225D9588(v508, (uint64_t)"packed", (uint64_t)&v891);
      char v890 = 1;
      uint64_t v510 = sub_2225F26A4(v509, "param_typestate", (uint64_t)&v890);
      char v889 = 1;
      uint64_t v511 = sub_2225D9588(v510, (uint64_t)"pascal", (uint64_t)&v889);
      char v888 = 1;
      uint64_t v512 = sub_2225D94AC(v511, (unsigned __int16 *)"pcs", (uint64_t)&v888);
      char v887 = 1;
      uint64_t v513 = sub_2225DB220(v512, (uint64_t)"pnaclcall", (uint64_t)&v887);
      char v886 = 1;
      uint64_t v514 = sub_2225F2718(v513, "pt_guarded_by", (uint64_t)&v886);
      char v885 = 1;
      uint64_t v515 = sub_2225DB308(v514, "pt_guarded_var", (uint64_t)&v885);
      char v884 = 1;
      uint64_t v516 = sub_2225D9520(v515, "pure", (uint64_t)&v884);
      char v883 = 1;
      uint64_t v517 = sub_2225D9350(v516, "regparm", (uint64_t)&v883);
      char v882 = 1;
      uint64_t v518 = sub_2225F24B8(v517, (uint64_t)"release_capability", (uint64_t)&v882);
      char v881 = 1;
      uint64_t v519 = sub_2225F2530(v518, (uint64_t)"release_shared_capability", (uint64_t)&v881);
      char v880 = 1;
      uint64_t v520 = sub_2225F2A50(v519, (uint64_t)"release_generic_capability", (uint64_t)&v880);
      char v879 = 1;
      uint64_t v521 = sub_2225F26A4(v520, "unlock_function", (uint64_t)&v879);
      char v878 = 1;
      uint64_t v522 = sub_2225F24B8(v521, (uint64_t)"release_capability", (uint64_t)&v878);
      char v877 = 1;
      uint64_t v523 = sub_2225F2530(v522, (uint64_t)"release_shared_capability", (uint64_t)&v877);
      char v876 = 1;
      uint64_t v524 = sub_2225F2A50(v523, (uint64_t)"release_generic_capability", (uint64_t)&v876);
      char v875 = 1;
      uint64_t v525 = sub_2225F26A4(v524, "unlock_function", (uint64_t)&v875);
      char v874 = 1;
      uint64_t v526 = sub_2225F24B8(v525, (uint64_t)"release_capability", (uint64_t)&v874);
      char v873 = 1;
      uint64_t v527 = sub_2225F2530(v526, (uint64_t)"release_shared_capability", (uint64_t)&v873);
      char v872 = 1;
      uint64_t v528 = sub_2225F2A50(v527, (uint64_t)"release_generic_capability", (uint64_t)&v872);
      char v871 = 1;
      uint64_t v529 = sub_2225F26A4(v528, "unlock_function", (uint64_t)&v871);
      char v870 = 1;
      uint64_t v530 = sub_2225F24B8(v529, (uint64_t)"release_capability", (uint64_t)&v870);
      char v869 = 1;
      uint64_t v531 = sub_2225F2530(v530, (uint64_t)"release_shared_capability", (uint64_t)&v869);
      char v868 = 1;
      uint64_t v532 = sub_2225F2A50(v531, (uint64_t)"release_generic_capability", (uint64_t)&v868);
      char v867 = 1;
      uint64_t v533 = sub_2225F26A4(v532, "unlock_function", (uint64_t)&v867);
      char v866 = 1;
      uint64_t v534 = sub_2225F262C(v533, (uint64_t)"reqd_work_group_size", (uint64_t)&v866);
      char v865 = 1;
      uint64_t v535 = sub_2225F29D8(v534, "requires_capability", (uint64_t)&v865);
      char v864 = 1;
      uint64_t v536 = sub_2225F2960(v535, "exclusive_locks_required", (uint64_t)&v864);
      char v863 = 1;
      uint64_t v537 = sub_2225F2A50(v536, (uint64_t)"requires_shared_capability", (uint64_t)&v863);
      char v862 = 1;
      uint64_t v538 = sub_2225F28E8(v537, "shared_locks_required", (uint64_t)&v862);
      char v861 = 1;
      uint64_t v539 = sub_2225F29D8(v538, "requires_capability", (uint64_t)&v861);
      char v860 = 1;
      uint64_t v540 = sub_2225F2960(v539, "exclusive_locks_required", (uint64_t)&v860);
      char v859 = 1;
      uint64_t v541 = sub_2225F2A50(v540, (uint64_t)"requires_shared_capability", (uint64_t)&v859);
      char v858 = 1;
      uint64_t v542 = sub_2225F28E8(v541, "shared_locks_required", (uint64_t)&v858);
      char v857 = 1;
      uint64_t v543 = sub_2225F29D8(v542, "requires_capability", (uint64_t)&v857);
      char v856 = 1;
      uint64_t v544 = sub_2225F2960(v543, "exclusive_locks_required", (uint64_t)&v856);
      char v855 = 1;
      uint64_t v545 = sub_2225F2A50(v544, (uint64_t)"requires_shared_capability", (uint64_t)&v855);
      char v854 = 1;
      uint64_t v546 = sub_2225F28E8(v545, "shared_locks_required", (uint64_t)&v854);
      char v853 = 1;
      uint64_t v547 = sub_2225F29D8(v546, "requires_capability", (uint64_t)&v853);
      char v852 = 1;
      uint64_t v548 = sub_2225F2960(v547, "exclusive_locks_required", (uint64_t)&v852);
      char v851 = 1;
      uint64_t v549 = sub_2225F2A50(v548, (uint64_t)"requires_shared_capability", (uint64_t)&v851);
      char v850 = 1;
      uint64_t v550 = sub_2225F28E8(v549, "shared_locks_required", (uint64_t)&v850);
      char v849 = 1;
      uint64_t v551 = sub_2225F2B58(v550, "return_typestate", (uint64_t)&v849);
      char v848 = 1;
      uint64_t v552 = sub_2225F26A4(v551, "returns_nonnull", (uint64_t)&v848);
      char v847 = 1;
      uint64_t v553 = sub_2225F2718(v552, "returns_twice", (uint64_t)&v847);
      char v846 = 1;
      uint64_t v554 = sub_2225F26A4(v553, "scoped_lockable", (uint64_t)&v846);
      char v845 = 1;
      uint64_t v555 = sub_2225D9350(v554, "section", (uint64_t)&v845);
      char v844 = 1;
      uint64_t v556 = sub_2225D95FC(v555, "sentinel", (uint64_t)&v844);
      char v843 = 1;
      uint64_t v557 = sub_2225F2718(v556, "set_typestate", (uint64_t)&v843);
      char v842 = 1;
      uint64_t v558 = sub_2225F25B4(v557, "shared_trylock_function", (uint64_t)&v842);
      char v841 = 1;
      uint64_t v559 = sub_2225D9350(v558, "stdcall", (uint64_t)&v841);
      char v840 = 1;
      uint64_t v560 = sub_2225D95FC(v559, "sysv_abi", (uint64_t)&v840);
      char v839 = 1;
      uint64_t v561 = sub_2225DB220(v560, (uint64_t)"tls_model", (uint64_t)&v839);
      char v838 = 1;
      uint64_t v562 = sub_2225DB308(v561, "test_typestate", (uint64_t)&v838);
      char v837 = 1;
      uint64_t v563 = sub_2225D95FC(v562, "thiscall", (uint64_t)&v837);
      char v836 = 1;
      uint64_t v564 = sub_2225F278C(v563, (uint64_t)"transparent_union", (uint64_t)&v836);
      char v835 = 1;
      uint64_t v565 = sub_2225F2870(v564, "try_acquire_capability", (uint64_t)&v835);
      char v834 = 1;
      uint64_t v566 = sub_2225F2D20(v565, "try_acquire_shared_capability", (uint64_t)&v834);
      char v833 = 1;
      uint64_t v567 = sub_2225F2870(v566, "try_acquire_capability", (uint64_t)&v833);
      char v832 = 1;
      uint64_t v568 = sub_2225F2D20(v567, "try_acquire_shared_capability", (uint64_t)&v832);
      char v831 = 1;
      uint64_t v569 = sub_2225F28E8(v568, "type_tag_for_datatype", (uint64_t)&v831);
      char v830 = 1;
      uint64_t v570 = sub_2225F26A4(v569, "type_visibility", (uint64_t)&v830);
      char v829 = 1;
      uint64_t v571 = sub_2225DAEFC(v570, "unavailable", (uint64_t)&v829);
      char v828 = 1;
      uint64_t v572 = sub_2225D9588(v571, (uint64_t)"unused", (uint64_t)&v828);
      char v827 = 1;
      uint64_t v573 = sub_2225D9520(v572, "used", (uint64_t)&v827);
      char v826 = 1;
      uint64_t v574 = sub_2225DB220(v573, (uint64_t)"vecreturn", (uint64_t)&v826);
      char v825 = 1;
      uint64_t v575 = sub_2225F2718(v574, "vec_type_hint", (uint64_t)&v825);
      char v824 = 1;
      uint64_t v576 = sub_2225DAEFC(v575, "vector_size", (uint64_t)&v824);
      char v823 = 1;
      uint64_t v577 = sub_2225D93C4(v576, (uint64_t)"visibility", (uint64_t)&v823);
      char v822 = 1;
      uint64_t v578 = sub_2225DAEFC(v577, "warn_unused", (uint64_t)&v822);
      char v821 = 1;
      uint64_t v579 = sub_2225F24B8(v578, (uint64_t)"warn_unused_result", (uint64_t)&v821);
      char v820 = 1;
      uint64_t v580 = sub_2225D9520(v579, "weak", (uint64_t)&v820);
      char v819 = 1;
      uint64_t v581 = sub_2225DAEFC(v580, "weak_import", (uint64_t)&v819);
      char v818 = 1;
      uint64_t v582 = sub_2225D9350(v581, "weakref", (uint64_t)&v818);
      char v817 = 1;
      uint64_t v583 = sub_2225F262C(v582, (uint64_t)"work_group_size_hint", (uint64_t)&v817);
      BOOL v816 = sub_2225DAD0C(a4) == 24;
      uint64_t v345 = sub_2225F25B4(v583, "force_align_arg_pointer", (uint64_t)&v816);
      char v815 = 0;
      v346 = (BOOL *)&v815;
      return sub_2225F2DA4(v345, (unsigned __int8 *)v346);
    case 2:
      v584 = sub_2225D934C(v1046, v1049, v1050);
      BOOL v1045 = 1;
      uint64_t v585 = sub_2225D9438((uint64_t)v584, (uint64_t)"align", (uint64_t)&v1045);
      BOOL v586 = (sub_2225DAD0C(a4) == 24
           || sub_2225DAD0C(a4) == 25
           || sub_2225DAD0C(a4) == 1
           || sub_2225DAD0C(a4) == 22)
          && sub_2225DAD04(a4) == 12;
      BOOL v1044 = v586;
      uint64_t v587 = sub_2225DB220(v585, (uint64_t)"dllexport", (uint64_t)&v1044);
      BOOL v588 = (sub_2225DAD0C(a4) == 24
           || sub_2225DAD0C(a4) == 25
           || sub_2225DAD0C(a4) == 1
           || sub_2225DAD0C(a4) == 22)
          && sub_2225DAD04(a4) == 12;
      BOOL v1043 = v588;
      uint64_t v589 = sub_2225DB220(v587, (uint64_t)"dllimport", (uint64_t)&v1043);
      BOOL v1042 = 1;
      uint64_t v590 = sub_2225D93C4(v589, (uint64_t)"deprecated", (uint64_t)&v1042);
      BOOL v1041 = 1;
      uint64_t v591 = sub_2225D95FC(v590, "property", (uint64_t)&v1041);
      BOOL v1040 = 1;
      uint64_t v592 = sub_2225D9438(v591, (uint64_t)"naked", (uint64_t)&v1040);
      BOOL v1039 = 1;
      uint64_t v593 = sub_2225D95FC(v592, "noinline", (uint64_t)&v1039);
      BOOL v1038 = 1;
      uint64_t v594 = sub_2225D95FC(v593, "noreturn", (uint64_t)&v1038);
      BOOL v1037 = 1;
      uint64_t v595 = sub_2225D9350(v594, "nothrow", (uint64_t)&v1037);
      BOOL v1036 = 1;
      uint64_t v596 = sub_2225D95FC(v595, "allocate", (uint64_t)&v1036);
      BOOL v1035 = 1;
      uint64_t v597 = sub_2225DB220(v596, (uint64_t)"selectany", (uint64_t)&v1035);
      BOOL v1034 = 1;
      uint64_t v598 = sub_2225D9588(v597, (uint64_t)"thread", (uint64_t)&v1034);
      BOOL v1033 = 1;
      uint64_t v345 = sub_2225D9520(v598, "uuid", (uint64_t)&v1033);
      BOOL v1032 = 0;
      v346 = &v1032;
      return sub_2225F2DA4(v345, (unsigned __int8 *)v346);
    case 3:
      if (!a2
        || (uint64_t v599 = sub_2225F2418(a2),
            uint64_t v601 = v600,
            sub_2225C3D00((int)v724, &byte_2226D1615),
            sub_2225CD4BC(v599, v601, v724[0], (size_t)v724[1])))
      {
        v602 = sub_2225D934C(v1046, v1049, v1050);
        BOOL v1045 = (*a5 & 0x80) != 0;
        uint64_t v603 = sub_2225D95FC((uint64_t)v602, "noreturn", (uint64_t)&v1045);
        BOOL v1044 = (*a5 & 0x80) != 0;
        uint64_t v604 = sub_2225F24B8(v603, (uint64_t)"carries_dependency", (uint64_t)&v1044);
        BOOL v1043 = (*a5 & 0x80) != 0;
        uint64_t v605 = sub_2225D93C4(v604, (uint64_t)"deprecated", (uint64_t)&v1043);
        BOOL v1042 = (*a5 & 0x80) != 0;
        uint64_t v345 = sub_2225D93C4(v605, (uint64_t)"deprecated", (uint64_t)&v1042);
        BOOL v1041 = 0;
        v346 = &v1041;
        return sub_2225F2DA4(v345, (unsigned __int8 *)v346);
      }
      uint64_t v616 = sub_2225F2418(a2);
      uint64_t v618 = v617;
      sub_2225C3D00((int)v723, "clang");
      if (sub_2225CD4BC(v616, v618, v723[0], (size_t)v723[1]))
      {
        v619 = sub_2225D934C(v1046, v1049, v1050);
        BOOL v1045 = (*a5 & 0x80) != 0;
        uint64_t v620 = sub_2225F24B8((uint64_t)v619, (uint64_t)"acquire_capability", (uint64_t)&v1045);
        BOOL v1044 = (*a5 & 0x80) != 0;
        uint64_t v621 = sub_2225F2530(v620, (uint64_t)"acquire_shared_capability", (uint64_t)&v1044);
        BOOL v1043 = (*a5 & 0x80) != 0;
        uint64_t v622 = sub_2225F24B8(v621, (uint64_t)"acquire_capability", (uint64_t)&v1043);
        BOOL v1042 = (*a5 & 0x80) != 0;
        uint64_t v623 = sub_2225F2530(v622, (uint64_t)"acquire_shared_capability", (uint64_t)&v1042);
        BOOL v1041 = (*a5 & 0x80) != 0;
        uint64_t v624 = sub_2225F278C(v623, (uint64_t)"assert_capability", (uint64_t)&v1041);
        BOOL v1040 = (*a5 & 0x80) != 0;
        uint64_t v625 = sub_2225F2960(v624, "assert_shared_capability", (uint64_t)&v1040);
        BOOL v1039 = (*a5 & 0x80) != 0;
        uint64_t v626 = sub_2225F278C(v625, (uint64_t)"assert_capability", (uint64_t)&v1039);
        BOOL v1038 = (*a5 & 0x80) != 0;
        uint64_t v627 = sub_2225F2960(v626, "assert_shared_capability", (uint64_t)&v1038);
        BOOL v1037 = (*a5 & 0x80) != 0;
        uint64_t v628 = sub_2225D93C4(v627, (uint64_t)"capability", (uint64_t)&v1037);
        BOOL v1036 = (*a5 & 0x80) != 0;
        uint64_t v629 = sub_2225F278C(v628, (uint64_t)"shared_capability", (uint64_t)&v1036);
        BOOL v1035 = (*a5 & 0x80) != 0;
        uint64_t v630 = sub_2225D93C4(v629, (uint64_t)"capability", (uint64_t)&v1035);
        BOOL v1034 = (*a5 & 0x80) != 0;
        uint64_t v631 = sub_2225F278C(v630, (uint64_t)"shared_capability", (uint64_t)&v1034);
        BOOL v1033 = (*a5 & 0x80) != 0;
        uint64_t v632 = sub_2225DAEFC(v631, "fallthrough", (uint64_t)&v1033);
        BOOL v1032 = (*a5 & 0x80) != 0;
        uint64_t v633 = sub_2225DAEFC(v632, "noduplicate", (uint64_t)&v1032);
        BOOL v1031 = (*a5 & 0x80) != 0;
        uint64_t v634 = sub_2225D9350(v633, "optnone", (uint64_t)&v1031);
        BOOL v1030 = (*a5 & 0x80) != 0;
        uint64_t v635 = sub_2225F24B8(v634, (uint64_t)"release_capability", (uint64_t)&v1030);
        BOOL v1029 = (*a5 & 0x80) != 0;
        uint64_t v636 = sub_2225F2530(v635, (uint64_t)"release_shared_capability", (uint64_t)&v1029);
        BOOL v1028 = (*a5 & 0x80) != 0;
        uint64_t v637 = sub_2225F2A50(v636, (uint64_t)"release_generic_capability", (uint64_t)&v1028);
        BOOL v1027 = (*a5 & 0x80) != 0;
        uint64_t v638 = sub_2225F24B8(v637, (uint64_t)"release_capability", (uint64_t)&v1027);
        BOOL v1026 = (*a5 & 0x80) != 0;
        uint64_t v639 = sub_2225F2530(v638, (uint64_t)"release_shared_capability", (uint64_t)&v1026);
        BOOL v1025 = (*a5 & 0x80) != 0;
        uint64_t v640 = sub_2225F2A50(v639, (uint64_t)"release_generic_capability", (uint64_t)&v1025);
        BOOL v1024 = (*a5 & 0x80) != 0;
        uint64_t v641 = sub_2225F24B8(v640, (uint64_t)"release_capability", (uint64_t)&v1024);
        BOOL v1023 = (*a5 & 0x80) != 0;
        uint64_t v642 = sub_2225F2530(v641, (uint64_t)"release_shared_capability", (uint64_t)&v1023);
        BOOL v1022 = (*a5 & 0x80) != 0;
        uint64_t v643 = sub_2225F2A50(v642, (uint64_t)"release_generic_capability", (uint64_t)&v1022);
        BOOL v1021 = (*a5 & 0x80) != 0;
        uint64_t v644 = sub_2225F29D8(v643, "requires_capability", (uint64_t)&v1021);
        BOOL v1020 = (*a5 & 0x80) != 0;
        uint64_t v645 = sub_2225F2A50(v644, (uint64_t)"requires_shared_capability", (uint64_t)&v1020);
        BOOL v1019 = (*a5 & 0x80) != 0;
        uint64_t v646 = sub_2225F29D8(v645, "requires_capability", (uint64_t)&v1019);
        BOOL v1018 = (*a5 & 0x80) != 0;
        uint64_t v647 = sub_2225F2A50(v646, (uint64_t)"requires_shared_capability", (uint64_t)&v1018);
        BOOL v1017 = (*a5 & 0x80) != 0;
        uint64_t v648 = sub_2225F2870(v647, "try_acquire_capability", (uint64_t)&v1017);
        BOOL v1016 = (*a5 & 0x80) != 0;
        uint64_t v649 = sub_2225F2D20(v648, "try_acquire_shared_capability", (uint64_t)&v1016);
        BOOL v1015 = (*a5 & 0x80) != 0;
        uint64_t v650 = sub_2225F2870(v649, "try_acquire_capability", (uint64_t)&v1015);
        BOOL v1014 = (*a5 & 0x80) != 0;
        uint64_t v651 = sub_2225F2D20(v650, "try_acquire_shared_capability", (uint64_t)&v1014);
        BOOL v1013 = (*a5 & 0x80) != 0;
        uint64_t v652 = sub_2225F26A4(v651, "type_visibility", (uint64_t)&v1013);
        BOOL v1012 = (*a5 & 0x80) != 0;
        uint64_t v345 = sub_2225F24B8(v652, (uint64_t)"warn_unused_result", (uint64_t)&v1012);
        BOOL v1011 = 0;
        v346 = &v1011;
        return sub_2225F2DA4(v345, (unsigned __int8 *)v346);
      }
      uint64_t v653 = sub_2225F2418(a2);
      uint64_t v655 = v654;
      sub_2225C3D00((int)v722, "gnu");
      uint64_t result = sub_2225CD4BC(v653, v655, v722[0], (size_t)v722[1]);
      if (result)
      {
        v656 = sub_2225D934C(v1046, v1049, v1050);
        BOOL v1045 = (*a5 & 0x80) != 0;
        uint64_t v657 = sub_2225D9438((uint64_t)v656, (uint64_t)"alias", (uint64_t)&v1045);
        BOOL v1044 = (*a5 & 0x80) != 0;
        uint64_t v658 = sub_2225D9350(v657, "aligned", (uint64_t)&v1044);
        BOOL v1043 = (*a5 & 0x80) != 0;
        uint64_t v659 = sub_2225F2718(v658, "always_inline", (uint64_t)&v1043);
        BOOL v1042 = (*a5 & 0x80) != 0;
        uint64_t v660 = sub_2225D9438(v659, (uint64_t)"cdecl", (uint64_t)&v1042);
        BOOL v1041 = (*a5 & 0x80) != 0;
        uint64_t v661 = sub_2225D9350(v660, "cleanup", (uint64_t)&v1041);
        BOOL v1040 = (*a5 & 0x80) != 0;
        uint64_t v662 = sub_2225D9520(v661, "cold", (uint64_t)&v1040);
        BOOL v1039 = (*a5 & 0x80) != 0;
        uint64_t v663 = sub_2225D9588(v662, (uint64_t)"common", (uint64_t)&v1039);
        BOOL v1038 = (*a5 & 0x80) != 0;
        uint64_t v664 = sub_2225D9438(v663, (uint64_t)"const", (uint64_t)&v1038);
        BOOL v1037 = (*a5 & 0x80) != 0;
        uint64_t v665 = sub_2225D9350(v664, "__const", (uint64_t)&v1037);
        BOOL v1036 = (*a5 & 0x80) != 0;
        uint64_t v666 = sub_2225D9438(v665, (uint64_t)"const", (uint64_t)&v1036);
        BOOL v1035 = (*a5 & 0x80) != 0;
        uint64_t v667 = sub_2225D9350(v666, "__const", (uint64_t)&v1035);
        BOOL v1034 = (*a5 & 0x80) != 0;
        uint64_t v668 = sub_2225DAEFC(v667, "constructor", (uint64_t)&v1034);
        if ((sub_2225DAD0C(a4) == 24
           || sub_2225DAD0C(a4) == 25
           || sub_2225DAD0C(a4) == 1
           || sub_2225DAD0C(a4) == 22)
          && sub_2225DAD04(a4) == 12)
        {
          int v669 = *(unsigned __int8 *)a5 >> 7;
        }
        else
        {
          LOBYTE(v669) = 0;
        }
        BOOL v1033 = v669;
        uint64_t v670 = sub_2225DB220(v668, (uint64_t)"dllexport", (uint64_t)&v1033);
        if ((sub_2225DAD0C(a4) == 24
           || sub_2225DAD0C(a4) == 25
           || sub_2225DAD0C(a4) == 1
           || sub_2225DAD0C(a4) == 22)
          && sub_2225DAD04(a4) == 12)
        {
          int v671 = *(unsigned __int8 *)a5 >> 7;
        }
        else
        {
          LOBYTE(v671) = 0;
        }
        BOOL v1032 = v671;
        uint64_t v672 = sub_2225DB220(v670, (uint64_t)"dllimport", (uint64_t)&v1032);
        BOOL v1031 = (*a5 & 0x80) != 0;
        uint64_t v673 = sub_2225D93C4(v672, (uint64_t)"deprecated", (uint64_t)&v1031);
        BOOL v1030 = (*a5 & 0x80) != 0;
        uint64_t v674 = sub_2225D93C4(v673, (uint64_t)"destructor", (uint64_t)&v1030);
        BOOL v1029 = (*a5 & 0x80) != 0;
        uint64_t v675 = sub_2225D95FC(v674, "fastcall", (uint64_t)&v1029);
        BOOL v1028 = (*a5 & 0x80) != 0;
        uint64_t v676 = sub_2225D9350(v675, "flatten", (uint64_t)&v1028);
        BOOL v1027 = (*a5 & 0x80) != 0;
        uint64_t v677 = sub_2225D9588(v676, (uint64_t)"format", (uint64_t)&v1027);
        BOOL v1026 = (*a5 & 0x80) != 0;
        uint64_t v678 = sub_2225D93C4(v677, (uint64_t)"format_arg", (uint64_t)&v1026);
        BOOL v1025 = (*a5 & 0x80) != 0;
        uint64_t v679 = sub_2225D93C4(v678, (uint64_t)"gnu_inline", (uint64_t)&v1025);
        BOOL v1024 = (*a5 & 0x80) != 0;
        uint64_t v680 = sub_2225D94AC(v679, (unsigned __int16 *)"hot", (uint64_t)&v1024);
        BOOL v1023 = (*a5 & 0x80) != 0;
        uint64_t v681 = sub_2225D9588(v680, (uint64_t)"ms_abi", (uint64_t)&v1023);
        BOOL v1022 = (*a5 & 0x80) != 0;
        uint64_t v682 = sub_2225D9588(v681, (uint64_t)"malloc", (uint64_t)&v1022);
        BOOL v1021 = (*a5 & 0x80) != 0;
        uint64_t v683 = sub_2225DB220(v682, (uint64_t)"may_alias", (uint64_t)&v1021);
        if (sub_2225DAD0C(a4) == 6 || sub_2225DAD0C(a4) == 7) {
          int v684 = *(unsigned __int8 *)a5 >> 7;
        }
        else {
          LOBYTE(v684) = 0;
        }
        BOOL v1020 = v684;
        uint64_t v685 = sub_2225D9588(v683, (uint64_t)"mips16", (uint64_t)&v1020);
        BOOL v1019 = (*a5 & 0x80) != 0;
        uint64_t v686 = sub_2225D9520(v685, "mode", (uint64_t)&v1019);
        BOOL v1018 = (*a5 & 0x80) != 0;
        uint64_t v687 = sub_2225DB220(v686, (uint64_t)"ms_struct", (uint64_t)&v1018);
        BOOL v1017 = (*a5 & 0x80) != 0;
        uint64_t v688 = sub_2225D9438(v687, (uint64_t)"naked", (uint64_t)&v1017);
        BOOL v1016 = (*a5 & 0x80) != 0;
        uint64_t v689 = sub_2225D95FC(v688, "nocommon", (uint64_t)&v1016);
        BOOL v1015 = (*a5 & 0x80) != 0;
        uint64_t v690 = sub_2225D95FC(v689, "noescape", (uint64_t)&v1015);
        BOOL v1014 = (*a5 & 0x80) != 0;
        uint64_t v691 = sub_2225D95FC(v690, "noinline", (uint64_t)&v1014);
        BOOL v1013 = (*a5 & 0x80) != 0;
        uint64_t v692 = sub_2225F2870(v691, "no_instrument_function", (uint64_t)&v1013);
        if (sub_2225DAD0C(a4) == 6 || sub_2225DAD0C(a4) == 7) {
          int v693 = *(unsigned __int8 *)a5 >> 7;
        }
        else {
          LOBYTE(v693) = 0;
        }
        BOOL v1012 = v693;
        uint64_t v694 = sub_2225D95FC(v692, "nomips16", (uint64_t)&v1012);
        BOOL v1011 = (*a5 & 0x80) != 0;
        uint64_t v695 = sub_2225D95FC(v694, "noreturn", (uint64_t)&v1011);
        BOOL v1010 = (*a5 & 0x80) != 0;
        uint64_t v696 = sub_2225F2A50(v695, (uint64_t)"no_address_safety_analysis", (uint64_t)&v1010);
        BOOL v1009 = (*a5 & 0x80) != 0;
        uint64_t v697 = sub_2225F29D8(v696, "no_sanitize_address", (uint64_t)&v1009);
        BOOL v1008 = (*a5 & 0x80) != 0;
        uint64_t v698 = sub_2225F2A50(v697, (uint64_t)"no_address_safety_analysis", (uint64_t)&v1008);
        BOOL v1007 = (*a5 & 0x80) != 0;
        uint64_t v699 = sub_2225F29D8(v698, "no_sanitize_address", (uint64_t)&v1007);
        BOOL v1006 = (*a5 & 0x80) != 0;
        uint64_t v700 = sub_2225DB308(v699, "no_split_stack", (uint64_t)&v1006);
        BOOL v1005 = (*a5 & 0x80) != 0;
        uint64_t v701 = sub_2225D9350(v700, "nothrow", (uint64_t)&v1005);
        BOOL v1004 = (*a5 & 0x80) != 0;
        uint64_t v702 = sub_2225D9350(v701, "nonnull", (uint64_t)&v1004);
        BOOL v1003 = (*a5 & 0x80) != 0;
        uint64_t v703 = sub_2225D9588(v702, (uint64_t)"packed", (uint64_t)&v1003);
        BOOL v1002 = (*a5 & 0x80) != 0;
        uint64_t v704 = sub_2225D94AC(v703, (unsigned __int16 *)"pcs", (uint64_t)&v1002);
        BOOL v1001 = (*a5 & 0x80) != 0;
        uint64_t v705 = sub_2225D9520(v704, "pure", (uint64_t)&v1001);
        BOOL v1000 = (*a5 & 0x80) != 0;
        uint64_t v706 = sub_2225D9350(v705, "regparm", (uint64_t)&v1000);
        BOOL v999 = (*a5 & 0x80) != 0;
        uint64_t v707 = sub_2225F26A4(v706, "returns_nonnull", (uint64_t)&v999);
        BOOL v998 = (*a5 & 0x80) != 0;
        uint64_t v708 = sub_2225F2718(v707, "returns_twice", (uint64_t)&v998);
        BOOL v997 = (*a5 & 0x80) != 0;
        uint64_t v709 = sub_2225D9350(v708, "section", (uint64_t)&v997);
        BOOL v996 = (*a5 & 0x80) != 0;
        uint64_t v710 = sub_2225D95FC(v709, "sentinel", (uint64_t)&v996);
        BOOL v995 = (*a5 & 0x80) != 0;
        uint64_t v711 = sub_2225D9350(v710, "stdcall", (uint64_t)&v995);
        BOOL v994 = (*a5 & 0x80) != 0;
        uint64_t v712 = sub_2225D95FC(v711, "sysv_abi", (uint64_t)&v994);
        BOOL v993 = (*a5 & 0x80) != 0;
        uint64_t v713 = sub_2225DB220(v712, (uint64_t)"tls_model", (uint64_t)&v993);
        BOOL v992 = (*a5 & 0x80) != 0;
        uint64_t v714 = sub_2225D95FC(v713, "thiscall", (uint64_t)&v992);
        BOOL v991 = (*a5 & 0x80) != 0;
        uint64_t v715 = sub_2225F278C(v714, (uint64_t)"transparent_union", (uint64_t)&v991);
        BOOL v990 = (*a5 & 0x80) != 0;
        uint64_t v716 = sub_2225D9588(v715, (uint64_t)"unused", (uint64_t)&v990);
        BOOL v989 = (*a5 & 0x80) != 0;
        uint64_t v717 = sub_2225D9520(v716, "used", (uint64_t)&v989);
        BOOL v988 = (*a5 & 0x80) != 0;
        uint64_t v718 = sub_2225DAEFC(v717, "vector_size", (uint64_t)&v988);
        BOOL v987 = (*a5 & 0x80) != 0;
        uint64_t v719 = sub_2225D93C4(v718, (uint64_t)"visibility", (uint64_t)&v987);
        BOOL v986 = (*a5 & 0x80) != 0;
        uint64_t v720 = sub_2225F24B8(v719, (uint64_t)"warn_unused_result", (uint64_t)&v986);
        BOOL v985 = (*a5 & 0x80) != 0;
        uint64_t v721 = sub_2225D9520(v720, "weak", (uint64_t)&v985);
        BOOL v984 = (*a5 & 0x80) != 0;
        uint64_t v345 = sub_2225D9350(v721, "weakref", (uint64_t)&v984);
        char v983 = 0;
        v346 = (BOOL *)&v983;
        return sub_2225F2DA4(v345, (unsigned __int8 *)v346);
      }
      return result;
    case 4:
      v606 = sub_2225D934C(v1046, v1049, v1050);
      BOOL v1045 = 1;
      uint64_t v607 = sub_2225D95FC((uint64_t)v606, "init_seg", (uint64_t)&v1045);
      BOOL v1044 = 1;
      uint64_t v608 = sub_2225D9520(v607, "loop", (uint64_t)&v1044);
      BOOL v1043 = 1;
      uint64_t v609 = sub_2225D9588(v608, (uint64_t)"unroll", (uint64_t)&v1043);
      BOOL v1042 = 1;
      uint64_t v610 = sub_2225D95FC(v609, "nounroll", (uint64_t)&v1042);
      BOOL v1041 = 1;
      uint64_t v611 = sub_2225D9520(v610, "loop", (uint64_t)&v1041);
      BOOL v1040 = 1;
      uint64_t v612 = sub_2225D9588(v611, (uint64_t)"unroll", (uint64_t)&v1040);
      BOOL v1039 = 1;
      uint64_t v613 = sub_2225D95FC(v612, "nounroll", (uint64_t)&v1039);
      BOOL v1038 = 1;
      uint64_t v614 = sub_2225D9520(v613, "loop", (uint64_t)&v1038);
      BOOL v1037 = 1;
      uint64_t v615 = sub_2225D9588(v614, (uint64_t)"unroll", (uint64_t)&v1037);
      BOOL v1036 = 1;
      uint64_t v345 = sub_2225D95FC(v615, "nounroll", (uint64_t)&v1036);
      BOOL v1035 = 0;
      v346 = &v1035;
      return sub_2225F2DA4(v345, (unsigned __int8 *)v346);
    default:
      return 0;
  }
}

uint64_t sub_2225F2418(uint64_t a1)
{
  uint64_t v2 = sub_2225F2DB8(a1);
  unsigned int v3 = sub_2225F2DD0(a1);
  sub_2225C3D0C(&v5, v2, v3);
  return v5;
}

BOOL sub_2225F2464(void *a1, const void *a2, size_t a3)
{
  if (a1[1] < a3) {
    return 0;
  }
  uint64_t v6 = sub_2225C3C78(a1);
  return sub_2225C5A30((const void *)(v6 - a3), a2, a3) == 0;
}

uint64_t sub_2225F24B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 18)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(void *)(a2 + 8) == *(void *)(v6 + 8)
      && *(unsigned __int16 *)(a2 + 16) == (unint64_t)*(unsigned __int16 *)(v6 + 16))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 25)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(void *)(a2 + 8) == *(void *)(v6 + 8)
      && *(void *)(a2 + 16) == *(void *)(v6 + 16)
      && *(unsigned __int8 *)(a2 + 24) == (unint64_t)*(unsigned __int8 *)(v6 + 24))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F25B4(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 23)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && *(void *)((char *)a2 + 15) == *(void *)((char *)v6 + 15)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F262C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 20)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(void *)(a2 + 8) == *(void *)(v6 + 8)
      && *(_DWORD *)(a2 + 16) == (unint64_t)*(unsigned int *)(v6 + 16))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F26A4(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 15)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *(void *)((char *)a2 + 7) == *(void *)((char *)v6 + 7)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2718(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 13)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && *(void *)((char *)a2 + 5) == *(void *)((char *)v6 + 5)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 17)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(void *)(a2 + 8) == *(void *)(v6 + 8)
      && *(unsigned __int8 *)(a2 + 16) == (unint64_t)*(unsigned __int8 *)(v6 + 16))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2804(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 35)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x23uLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2870(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 22)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && *(void *)((char *)a2 + 14) == *(void *)((char *)v6 + 14)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F28E8(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 21)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && *(void *)((char *)a2 + 13) == *(void *)((char *)v6 + 13)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2960(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 24)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && a2[2] == v6[2]) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F29D8(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 19)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && *(void *)((char *)a2 + 11) == *(void *)((char *)v6 + 11)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 26)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(void *)(a2 + 8) == *(void *)(v6 + 8)
      && *(void *)(a2 + 16) == *(void *)(v6 + 16)
      && *(unsigned __int16 *)(a2 + 24) == (unint64_t)*(unsigned __int16 *)(v6 + 24))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 28)
  {
    uint64_t v6 = sub_2225C3C70(a1);
    if (*(void *)a2 == *(void *)v6
      && *(void *)(a2 + 8) == *(void *)(v6 + 8)
      && *(void *)(a2 + 16) == *(void *)(v6 + 16)
      && *(_DWORD *)(a2 + 24) == (unint64_t)*(unsigned int *)(v6 + 24))
    {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2B58(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 16)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1]) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2BC4(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 27)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && a2[2] == v6[2] && *(void *)((char *)a2 + 19) == *(void *)((char *)v6 + 19)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2C48(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 46)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x2EuLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2CB4(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 34)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x22uLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2D20(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 29)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && a2[2] == v6[2] && *(void *)((char *)a2 + 21) == *(void *)((char *)v6 + 21)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_2225F2DA4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a1 + 16);
  if (!v2) {
    uint64_t v2 = a2;
  }
  return *v2;
}

uint64_t sub_2225F2DB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2) {
    return sub_2225CED2C(v2);
  }
  else {
    return *(void *)(a1 + 24);
  }
}

uint64_t sub_2225F2DD0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int **)(a1 + 16);
  if (v2) {
    return sub_2225C3B40(v2);
  }
  else {
    return (*(char *)(*(void *)(a1 + 24) - 2) | (*(char *)(*(void *)(a1 + 24) - 1) << 8)) - 1;
  }
}

uint64_t sub_2225F2DF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1, a1 + 8);
}

uint64_t sub_2225F2E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  while (1)
  {
    uint64_t v3 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    uint64_t v6 = sub_2225F2F58(a1, a2, a3);
    uint64_t result = *(void *)sub_2225E563C(v6);
    if (result) {
      break;
    }
    uint64_t v8 = *(void *)(v5 + 160);
    if (v8)
    {
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8 + 16))(v8, v4, v3);
      if (v11)
      {
        sub_2225F2F60(v6, &v11);
        return v11;
      }
    }
    if (!sub_2225FC970())
    {
      uint64_t v9 = sub_2225F2F6C(v5);
      uint64_t v10 = sub_2225F2F70(v9, 1);
      uint64_t v11 = sub_2225FB794(v10);
      sub_2225F2F60(v6, &v11);
      uint64_t result = v11;
      *(void *)(v11 + 16) = v6;
      return result;
    }
    a1 = v5;
    a2 = v4;
    a3 = v3;
  }
  return result;
}

unsigned int *sub_2225F2F3C(unsigned int *result, int a2)
{
  void *result = *result & 0xFFF001FF | (((((a2 << 9) + 13824) >> 9) & 0x7FF) << 9);
  return result;
}

uint64_t sub_2225F2F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225F2F80(a1, a2, a3, 0);
}

uint64_t sub_2225F2F60(uint64_t result, void *a2)
{
  *(void *)(result + 8) = *a2;
  return result;
}

uint64_t sub_2225F2F70(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, 24 * a2, 8);
}

uint64_t sub_2225F2F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[0] = a2;
  v10[1] = a3;
  uint64_t v9 = a4;
  sub_2225E578C((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_2225F2FD8(a1, v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_2225F2FD8(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *a2, a2[1]);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_2225F30C8(*a2, a2[1], (uint64_t *)(a1 + 24), a2[2]);
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_2225F30C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v13);
  unsigned int v7 = sub_2225E58B4();
  uint64_t v8 = sub_2225CC520(a3, (v6 + 17), v7);
  uint64_t v9 = sub_2225E58BC(v8, v6, a4);
  char v10 = (void *)sub_2225CED2C(v9);
  uint64_t v11 = (const void *)sub_2225C3C70((uint64_t)v13);
  memcpy(v10, v11, v6);
  *((unsigned char *)v10 + v6) = 0;
  return v8;
}

uint64_t sub_2225F315C(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_2225F3164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v10 = sub_2225F3264((_DWORD *)a1);
  sub_2225F326C(v10 + 10, a2);
  sub_2225F3270(a1 + 48, a3);
  *(void *)(a1 + 56) = a4;
  *(unsigned char *)(a1 + 64) = a5;
  *(void *)(a1 + 72) = 0;
  sub_2225F3274(a1 + 80);
  sub_2225D250C((void *)(a1 + 104));
  sub_2225D250C((void *)(a1 + 128));
  sub_2225CAD04(a1 + 208);
  sub_2225CAD04(a1 + 232);
  sub_2225CAD04(a1 + 256);
  sub_2225F3278((_DWORD *)(a1 + 280));
  for (uint64_t i = 304; i != 544; i += 24)
    sub_2225CAD04(a1 + i);
  sub_2225F327C(a1 + 624);
  sub_2225F3280(a1 + 744);
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = sub_2225F3284;
  *(_DWORD *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 7) = 0;
  *(_WORD *)(a1 + 11) = 1;
  *(unsigned char *)(a1 + 13) = 0;
  *(_DWORD *)(a1 + 32) = 1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  sub_2225F32E0(a1);
  return a1;
}

_DWORD *sub_2225F3264(_DWORD *result)
{
  void *result = 0;
  return result;
}

uint64_t sub_2225F3284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void **a9)
{
  sub_2225C3D00((int)v12, "<can't format argument>");
  uint64_t v9 = (char *)sub_2225C3C70((uint64_t)v12);
  char v10 = (char *)sub_2225C3C78(v12);
  return sub_2225C5A88(a9, v9, v10);
}

uint64_t sub_2225F32E0(uint64_t a1)
{
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 284) = -1;
  *(_DWORD *)(a1 + 176) = 0;
  *(void *)(a1 + 168) = 0;
  uint64_t v2 = (uint64_t *)(a1 + 80);
  *(_DWORD *)(a1 + 200) = 0;
  sub_2225F34E4(a1 + 80);
  uint64_t v3 = (uint64_t *)(a1 + 104);
  sub_2225F34E8((uint64_t *)(a1 + 104));
  sub_2225F3530((uint64_t *)(a1 + 128));
  __n128 v7 = 0uLL;
  uint64_t v8 = 0;
  sub_2225F35D0((uint64_t)&v7);
  sub_2225F3578(v2, (uint64_t)&v7);
  sub_2225F35D4(&v7);
  uint64_t v4 = sub_2225F3634(v2);
  sub_2225F3660(v6);
  sub_2225D2CBC(&v7, v4, v6[0], v6[1]);
  return sub_2225F35D8(v3, &v7);
}

uint64_t sub_2225F33A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v2 = *(void *)(a1 + 56);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
    }
  }
  sub_2225F3460(a1 + 744);
  sub_2225C56C4(a1 + 624);
  for (uint64_t i = 520; i != 280; i -= 24)
    std::string::~string((std::string *)(a1 + i));
  std::string::~string((std::string *)(a1 + 256));
  std::string::~string((std::string *)(a1 + 232));
  std::string::~string((std::string *)(a1 + 208));
  sub_2225E4E68(a1 + 128);
  sub_2225F3464(a1 + 104);
  sub_2225F3468(a1 + 80);
  sub_2225F346C(a1 + 48);
  sub_2225F3470(a1 + 40);
  return a1;
}

uint64_t sub_2225F3478(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 64))
  {
    uint64_t result = *(void *)(result + 56);
    if (result) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
    }
  }
  *(void *)(v5 + 56) = a2;
  *(unsigned char *)(v5 + 64) = a3;
  return result;
}

uint64_t sub_2225F34E8(uint64_t *a1)
{
  unint64_t v2 = sub_2225D24AC(a1);
  sub_2225F65BC(a1);

  return nullsub_1(a1, v2);
}

uint64_t sub_2225F3530(uint64_t *a1)
{
  uint64_t v2 = sub_2225D4970(a1);
  sub_2225D5670(a1);

  return nullsub_1(a1, v2);
}

void *sub_2225F3578(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225F662C((uint64_t)a1, 0, 0, a2);
  uint64_t v4 = (uint64_t *)j_j_nullsub_1(v3);
  sub_2225F66B8(a1, v4, (uint64_t)v4);
  uint64_t result = (void *)sub_2225D2650((uint64_t)a1, v5);
  ++*result;
  return result;
}

uint64_t sub_2225F35D8(uint64_t *a1, __n128 *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, (uint64_t)a2))
  {
    uint64_t result = sub_2225F5BB4(a1, a2);
  }
  else
  {
    sub_2225F5B40((uint64_t)a1, a2);
    uint64_t result = v4 + 24;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2225F3634(void *a1)
{
  uint64_t v1 = j_j_nullsub_1(*a1);

  return sub_2225CED2C(v1);
}

void sub_2225F3664(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v9[0] = a3;
  v9[1] = a4;
  v8[0] = a5;
  v8[1] = a6;
  if (!*(_DWORD *)(a1 + 200))
  {
    *(_DWORD *)(a1 + 200) = a2;
    sub_2225CACE8(v9, (uint64_t)&v7);
    sub_2225CCDE4(a1 + 208, (uint64_t)&v7);
    std::string::~string(&v7);
    sub_2225CACE8(v8, (uint64_t)&v7);
    sub_2225CCDE4(a1 + 232, (uint64_t)&v7);
    std::string::~string(&v7);
  }
}

uint64_t sub_2225F36E0(uint64_t a1)
{
  sub_2225F379C(a1, *(_DWORD *)(a1 + 200), (uint64_t)v8);
  sub_2225CCBF8(v7, a1 + 208);
  uint64_t v2 = sub_2225F3774(v8, v7[0], v7[1]);
  sub_2225CCBF8(v6, a1 + 232);
  sub_2225F3774(v2, v6[0], v6[1]);
  sub_2225F37F0(v8);
  *(_DWORD *)(a1 + 200) = 0;
  sub_2225CB97C(a1 + 208, v3);
  return sub_2225CB97C(a1 + 232, v4);
}

uint64_t *sub_2225F3774(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2225F379C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  sub_2225F3278(&v7);
  return sub_2225F52C4(a1, v7, a2, a3);
}

uint64_t sub_2225F37F4(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 && (uint64_t v4 = (_DWORD *)sub_2225F38E0((uint64_t)v11, a2, v3), !sub_2225F38E8(v4)))
  {
    uint64_t v6 = (uint64_t *)(a1 + 104);
    uint64_t v12 = sub_2225D24C8((uint64_t)v6);
    long long v10 = *(_OWORD *)(sub_2225D2CFC((uint64_t)v6) + 8);
    if (sub_2225CDBBC(&v10) && sub_2225F38F8((uint64_t)v11, v10))
    {
      uint64_t v7 = sub_2225D2E88(v6);
      uint64_t v8 = sub_2225D24C8((uint64_t)v6);
      sub_2225D2CBC(v9, 0, v11[0], v11[1]);
      uint64_t v12 = sub_2225F3900(v7, v8, v9);
    }
    sub_2225F3904(&v12);
    return v12;
  }
  else
  {
    v9[0] = sub_2225D24C8(a1 + 104);
    return sub_2225F38D8(v9, 1);
  }
}

uint64_t sub_2225F38D8(uint64_t *a1, uint64_t a2)
{
  return sub_2225F3920(a1, -a2);
}

uint64_t sub_2225F38E0(uint64_t a1, int a2, uint64_t a3)
{
  return sub_2225CE1D8(a1, a2, a3);
}

BOOL sub_2225F38E8(_DWORD *a1)
{
  return *a1 == 0;
}

BOOL sub_2225F38F8(uint64_t a1, int a2)
{
  return sub_222609B58(a1, a2);
}

void *sub_2225F3904(void *result)
{
  *result -= 24;
  return result;
}

uint64_t sub_2225F3914(unsigned char *a1)
{
  return *a1 & 7;
}

uint64_t sub_2225F3920(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_2225F6A84(&v3, a2);
  return v3;
}

void *sub_2225F3950(void *result)
{
  *result += 24;
  return result;
}

uint64_t sub_2225F3960(void *a1, uint64_t a2)
{
  return nullsub_1(*a1, a2);
}

uint64_t sub_2225F396C(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 4 * a2;
}

unsigned char *sub_2225F3994(unsigned char *result, char a2)
{
  void *result = *result & 0xF8 | a2 & 7;
  return result;
}

unsigned char *sub_2225F39A4(unsigned char *result, int a2)
{
  if (a2) {
    char v2 = 32;
  }
  else {
    char v2 = 0;
  }
  void *result = *result & 0xDF | v2;
  return result;
}

uint64_t sub_2225F39C4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2225F6058((const void **)a1, 0);
  }
  uint64_t v4 = sub_2225C3D04(a1);
  int v5 = *(_DWORD *)(a2 + 8);
  *(void *)uint64_t v4 = *(void *)a2;
  *(_DWORD *)(v4 + 8) = v5;
  uint64_t v6 = sub_2225C3D04(a1) + 12;

  return sub_2225C5B6C(a1, v6);
}

uint64_t sub_2225F3A3C(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  uint64_t result = sub_2225F4DC8(v2, v3);
  a1[1] = *a1;
  return result;
}

uint64_t sub_2225F3A80(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_2225F6068(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_2225F6160(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 56;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_2225F3AF0(uint64_t a1, int a2)
{
  if (a2)
  {
    sub_2225F3BCC(v14, a1);
    uint64_t v3 = sub_2225C3C70(a1 + 40);
    unsigned int v4 = sub_2225F3BD0((uint64_t)v14);
    uint64_t v5 = (int *)sub_2225F3BDC(v14);
    uint64_t v6 = sub_2225F7274(v3, v4, *v5, (unsigned char *)a1);
    uint64_t v7 = v6 != 0;
    if (v6)
    {
      uint64_t v8 = v6;
      uint64_t v9 = sub_2225C3C70(a1 + 40);
      sub_2225F7B4C(v9, a1, v8);
    }
    sub_2225F3C24(a1);
  }
  else
  {
    uint64_t v7 = sub_2225F3BE8(a1);
    int v10 = *(_DWORD *)(a1 + 284);
    sub_2225F3C24(a1);
    int v11 = *(_DWORD *)(a1 + 200);
    if (v11) {
      BOOL v12 = v11 == v10;
    }
    else {
      BOOL v12 = 1;
    }
    if (!v12) {
      sub_2225F36E0(a1);
    }
  }
  return v7;
}

uint64_t sub_2225F3BD0(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 284);
}

uint64_t sub_2225F3BDC(void *a1)
{
  return *a1 + 280;
}

uint64_t sub_2225F3BE8(uint64_t a1)
{
  uint64_t v2 = sub_2225C3C70(a1 + 40);

  return sub_2225F78B0(v2, a1);
}

uint64_t sub_2225F3C24(uint64_t result)
{
  *(_DWORD *)(result + 284) = -1;
  return result;
}

uint64_t sub_2225F3C38(_DWORD *a1, int a2)
{
  uint64_t result = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 48))(a1);
  if (result)
  {
    if (a2 == 3)
    {
      ++a1[2];
    }
    else if (a2 >= 4)
    {
      ++a1[3];
    }
  }
  return result;
}

uint64_t sub_2225F3CB0(void *a1, const void **a2)
{
  unsigned int v4 = a1 + 1;
  if (sub_2225CF1E0((uint64_t)(a1 + 1)))
  {
    uint64_t v5 = sub_2225C3C70((uint64_t)a1);
    uint64_t v6 = sub_2225F3D8C(v5);
    uint64_t v7 = sub_2225C3C70(v6);
    unsigned int v8 = sub_2225F3BD0((uint64_t)a1);
    v15[0] = sub_2225F71A8(v7, v8);
    v15[1] = v9;
    int v10 = (char *)sub_2225C3C70((uint64_t)v15);
    int v11 = (char *)sub_2225C3C78(v15);
    return sub_2225F3D94(a1, v10, v11, a2);
  }
  else
  {
    BOOL v13 = (char *)sub_2225C3C70((uint64_t)v4);
    BOOL v14 = (char *)sub_2225C3C78(v4);
    return sub_2225C5A88(a2, v13, v14);
  }
}

uint64_t sub_2225F3D8C(uint64_t a1)
{
  return a1 + 40;
}

uint64_t sub_2225F3D94(void *a1, char *a2, char *a3, const void **a4)
{
  uint64_t v121 = *MEMORY[0x263EF8340];
  sub_2225D1CB8((uint64_t)v120);
  sub_2225F48E0(v119);
  sub_2225CBDF4();
  int v8 = sub_2225F48E4((uint64_t)a1);
  if (v8)
  {
    int v9 = v8;
    for (unsigned int i = 0; i != v9; ++i)
    {
      if (sub_2225F48F0(a1, i) == 6)
      {
        *(void *)&long long v115 = sub_2225F4900(a1, i);
        sub_2225CC7B8((uint64_t)v119, &v115);
      }
    }
  }
  if (a2 != a3)
  {
    uint64_t v95 = a4;
    while (1)
    {
      if (*a2 != 37)
      {
        LOBYTE(v115) = 37;
        BOOL v13 = (char *)sub_2225D1414((uint64_t)a2, (uint64_t)a3, (char *)&v115);
        sub_2225C5A88(a4, a2, v13);
        a2 = v13;
        goto LABEL_12;
      }
      BOOL v12 = a2 + 1;
      int v11 = a2[1];
      if (sub_2225F4910(v11))
      {
        sub_2225C52D8((uint64_t)a4, a2 + 1);
        a2 += 2;
        goto LABEL_12;
      }
      if (sub_2225F4928(v11))
      {
        unsigned int v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
      }
      else
      {
        if (v11 == 45 || (uint64_t v18 = a2 + 1, (v11 - 97) <= 0x19u))
        {
          uint64_t v18 = a2 + 1;
          do
          {
            int v19 = *++v18;
            int v11 = v19;
            unsigned int v20 = (v19 - 97);
          }
          while (v19 == 45 || v20 < 0x1A);
        }
        unsigned int v15 = v18 - v12;
        if (v11 == 123)
        {
          uint64_t v16 = (unsigned __int8 *)(v18 + 1);
          uint64_t v22 = sub_2225F493C((unsigned __int8 *)v18 + 1, a3, 0x7Du);
          uint64_t v17 = (unsigned __int8 *)(a2 + 1);
          unsigned int v14 = v22 - v16;
          LOBYTE(v11) = v22[1];
          BOOL v12 = v22 + 1;
        }
        else
        {
          unsigned int v14 = 0;
          uint64_t v16 = 0;
          uint64_t v17 = (unsigned __int8 *)(a2 + 1);
          BOOL v12 = v18;
        }
      }
      unsigned int v117 = 0;
      unsigned int v96 = (char)v11 - 48;
      unsigned int v23 = sub_2225F48F0(a1, v96);
      unsigned int v117 = v23;
      if (sub_2225F4A28(v17, v15))
      {
        a2 = v12 + 3;
        int v24 = v12[2];
        unsigned int v25 = v24 - 48;
        int v26 = sub_2225F48F0(a1, v24 - 48);
        if (v117 != 6 || v26 != 6)
        {
          char v52 = v24;
          uint64_t v53 = sub_2225F493C(v16, (char *)&v16[v14], 0x7Cu);
          uint64_t v54 = sub_2225F493C(v16, v53, 0x24u);
          uint64_t v55 = sub_2225F493C((unsigned __int8 *)v54 + 1, v53, 0x24u);
          LOBYTE(v115) = 37;
          BYTE1(v115) = v11;
          LOBYTE(v102) = 37;
          BYTE1(v102) = v52;
          uint64_t v56 = v16;
          a4 = v95;
          sub_2225F3D94(a1, v56, v54, v95);
          sub_2225F3D94(a1, &v115, (char *)&v115 + 2, v95);
          sub_2225F3D94(a1, v54 + 1, v55, v95);
          sub_2225F3D94(a1, &v102, (char *)&v102 + 2, v95);
          sub_2225F3D94(a1, v55 + 1, v53, v95);
          goto LABEL_12;
        }
        unsigned int v117 = 11;
        unsigned int v27 = (char)v11 - 48;
LABEL_31:
        *(void *)&long long v115 = sub_2225F4900(a1, v27);
        *((void *)&v115 + 1) = sub_2225F4900(a1, v25);
        uint64_t v28 = sub_2225C3C70((uint64_t)a1);
        char v116 = v116 & 0xFB | (4 * *(unsigned char *)(v28 + 11));
        uint64_t v29 = sub_2225C3C70((uint64_t)a1);
        char v116 = v116 & 0xE7 | (8 * *(unsigned char *)(v29 + 13));
        uint64_t v94 = v14;
        uint64_t v30 = (char *)&v16[v14];
        uint64_t v93 = sub_2225F493C(v16, v30, 0x7Cu);
        if (!*(unsigned char *)(sub_2225C3C70((uint64_t)a1) + 12)) {
          goto LABEL_34;
        }
        if (!sub_2225CF1D0(v118)) {
          goto LABEL_34;
        }
        v116 |= 3u;
        uint64_t v31 = sub_2225C3C70((uint64_t)a1);
        uint64_t v32 = v117;
        sub_2225C3D0C(v110, v17, v15);
        sub_2225C3D0C(v109, v16, v94);
        sub_2225DF148(v108, v120);
        sub_2225D3DDC(v107, v119);
        sub_2225F4D00(v31, v32, (uint64_t)&v115, v110[0], v110[1], v109[0], v109[1], v33, v108[0], v108[1], (uint64_t)v118, v107[0], v107[1]);
        if (!sub_2225CF1D0(v118))
        {
          uint64_t v46 = v30;
          uint64_t v40 = v93;
          a4 = v95;
        }
        else
        {
LABEL_34:
          uint64_t v34 = sub_2225F493C(v16, v30, 0x24u);
          uint64_t v35 = v34 + 1;
          BOOL v92 = sub_2225F493C((unsigned __int8 *)v34 + 1, v30, 0x24u);
          sub_2225F3D94(a1, v16, v34, v95);
          char v116 = v116 & 0xFC | 2;
          uint64_t v36 = sub_2225C3C70((uint64_t)a1);
          uint64_t v37 = v117;
          sub_2225C3D0C(v106, v17, v15);
          sub_2225C3D0C(v105, v16, v94);
          sub_2225DF148(v104, v120);
          sub_2225D3DDC(v103, v119);
          sub_2225F4D00(v36, v37, (uint64_t)&v115, v106[0], v106[1], v105[0], v105[1], v38, v104[0], v104[1], (uint64_t)v95, v103[0], v103[1]);
          if ((v116 & 0x10) == 0)
          {
            int v101 = 6;
            *(void *)&long long v102 = sub_2225D38E4((uint64_t)&v101, (uint64_t)&v115);
            *((void *)&v102 + 1) = v39;
            sub_2225CC69C((uint64_t)v120, &v102);
          }
          uint64_t v40 = v92;
          sub_2225F3D94(a1, v35, v92, v95);
          v116 &= ~2u;
          uint64_t v41 = sub_2225C3C70((uint64_t)a1);
          uint64_t v42 = v117;
          sub_2225C3D0C(v100, v17, v15);
          uint64_t v43 = v16;
          a4 = v95;
          sub_2225C3D0C(v99, v43, v94);
          sub_2225DF148(v98, v120);
          sub_2225D3DDC(v97, v119);
          sub_2225F4D00(v41, v42, (uint64_t)&v115, v100[0], v100[1], v99[0], v99[1], v44, v98[0], v98[1], (uint64_t)v95, v97[0], v97[1]);
          if ((v116 & 0x10) == 0)
          {
            int v101 = 6;
            *(void *)&long long v102 = sub_2225D38E4((uint64_t)&v101, (uint64_t)&v115 + 8);
            *((void *)&v102 + 1) = v45;
            sub_2225CC69C((uint64_t)v120, &v102);
          }
          unsigned int v27 = v96;
          uint64_t v46 = v93;
        }
        sub_2225F3D94(a1, v40 + 1, v46, a4);
        goto LABEL_80;
      }
      a2 = v12 + 1;
      unsigned int v27 = (char)v11 - 48;
      unsigned int v25 = v96;
      switch(v23)
      {
        case 0u:
          uint64_t v60 = sub_2225F4A50(a1, v96);
          uint64_t v62 = sub_2225CFC64(v60, v61);
          uint64_t v64 = sub_2225CFCA0(v60, v63);
          a4 = v95;
          sub_2225D0C24(v95, v62, v64);
          goto LABEL_80;
        case 1u:
          uint64_t v65 = sub_2225F4900(a1, v96);
          if (v65) {
            uint64_t v66 = (char *)v65;
          }
          else {
            uint64_t v66 = "(null)";
          }
          size_t v67 = strlen(v66);
          a4 = v95;
          sub_2225C5A88(v95, v66, &v66[v67]);
          goto LABEL_80;
        case 2u:
          uint64_t v68 = sub_2225F4A64(a1, v96);
          if (sub_2225F4A74((uint64_t)v17, v15, (uint64_t)"select")) {
            goto LABEL_57;
          }
          if (sub_2225F4B34(v17, v15)) {
            goto LABEL_64;
          }
          if (sub_2225F4A74((uint64_t)v17, v15, (uint64_t)"plural")) {
            goto LABEL_71;
          }
          if (sub_2225F4C4C(v17, v15)) {
            goto LABEL_76;
          }
          a4 = v95;
          sub_2225E8C04(&v115);
          sub_2225D4840((void **)&v115, v68);
          goto LABEL_78;
        case 3u:
          uint64_t v68 = sub_2225F4A64(a1, v96);
          if (sub_2225F4A74((uint64_t)v17, v15, (uint64_t)"select"))
          {
LABEL_57:
            uint64_t v69 = v16;
            a4 = v95;
            sub_2225F4AA4((uint64_t)a1, v68, v69, v14, (uint64_t)v95);
          }
          else if (sub_2225F4B34(v17, v15))
          {
LABEL_64:
            a4 = v95;
            sub_2225F4B54(v68, (uint64_t)v95);
          }
          else if (sub_2225F4A74((uint64_t)v17, v15, (uint64_t)"plural"))
          {
LABEL_71:
            uint64_t v83 = v16;
            a4 = v95;
            sub_2225F4B94((uint64_t)a1, v68, v83, v14, (uint64_t)v95);
          }
          else if (sub_2225F4C4C(v17, v15))
          {
LABEL_76:
            a4 = v95;
            sub_2225F4C84(v68);
          }
          else
          {
            a4 = v95;
            sub_2225E8C04(&v115);
            sub_2225CA560((void **)&v115, v68);
LABEL_78:
            sub_2225E8C5C(&v115);
          }
          unsigned int v27 = v96;
          goto LABEL_80;
        case 4u:
          unsigned __int16 v70 = sub_2225F4900(a1, v96);
          a4 = v95;
          sub_2225E8C04(&v115);
          uint64_t v71 = sub_222613AC8(v70);
          if (v71)
          {
            uint64_t v72 = v71;
            uint64_t v73 = sub_2225CAF14((uint64_t)&v115, 39);
            uint64_t v74 = sub_2225CA524(v73, v72);
            sub_2225CAF14((uint64_t)v74, 39);
LABEL_67:
            unsigned int v27 = v96;
            goto LABEL_68;
          }
          uint64_t v82 = sub_222613AF0(v70);
          if (v82)
          {
            sub_2225CA524((uint64_t)&v115, v82);
            goto LABEL_67;
          }
          uint64_t v84 = sub_2225F4CEC(v70);
          unsigned int v27 = v96;
          if (v84)
          {
            uint64_t v85 = (char *)v84;
          }
          else
          {
            uint64_t v86 = sub_222613AB8(v70);
            if (v86)
            {
              uint64_t v87 = v86;
              uint64_t v88 = sub_2225CAF14((uint64_t)&v115, 60);
              uint64_t v80 = sub_2225CA524(v88, v87);
              char v81 = 62;
LABEL_62:
              sub_2225CAF14((uint64_t)v80, v81);
              goto LABEL_68;
            }
            uint64_t v85 = "(null)";
          }
          sub_2225CA524((uint64_t)&v115, v85);
LABEL_68:
          sub_2225E8C5C(&v115);
LABEL_80:
          unsigned int v23 = v117;
          if (!v117)
          {
LABEL_45:
            int v101 = 1;
            uint64_t v57 = sub_2225F4A50(a1, v27);
            *(void *)&long long v102 = sub_2225CBED0(v57);
            uint64_t v58 = sub_2225D38E4((uint64_t)&v101, (uint64_t)&v102);
LABEL_83:
            *(void *)&long long v115 = v58;
            *((void *)&v115 + 1) = v59;
            sub_2225CC69C((uint64_t)v120, &v115);
            goto LABEL_12;
          }
LABEL_81:
          if (v23 != 11)
          {
            *(void *)&long long v102 = sub_2225F4900(a1, v27);
            uint64_t v58 = sub_2225D38E4((uint64_t)&v117, (uint64_t)&v102);
            goto LABEL_83;
          }
LABEL_12:
          if (a2 == a3) {
            goto LABEL_87;
          }
          break;
        case 5u:
          uint64_t v75 = sub_2225F4900(a1, v96);
          if (v75)
          {
            uint64_t v76 = v75;
            a4 = v95;
            sub_2225E8C04(&v115);
            uint64_t v77 = sub_2225CAF14((uint64_t)&v115, 39);
            uint64_t v78 = sub_2225F2418(v76);
            uint64_t v80 = sub_2225CA568(v77, v78, v79);
            char v81 = 39;
            goto LABEL_62;
          }
          a4 = v95;
          sub_2225C5A88(v95, "(null)", "");
          goto LABEL_12;
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xCu:
          uint64_t v47 = sub_2225C3C70((uint64_t)a1);
          uint64_t v48 = v117;
          uint64_t v49 = sub_2225F4900(a1, v96);
          sub_2225C3D0C(v114, v17, v15);
          sub_2225C3D0C(v113, v16, v14);
          sub_2225DF148(v112, v120);
          sub_2225D3DDC(v111, v119);
          a4 = v95;
          uint64_t v50 = v48;
          unsigned int v27 = v96;
          sub_2225F4D00(v47, v50, v49, v114[0], v114[1], v113[0], v113[1], v51, v112[0], v112[1], (uint64_t)v95, v111[0], v111[1]);
          goto LABEL_80;
        case 0xBu:
          goto LABEL_31;
        default:
          a4 = v95;
          unsigned int v27 = v96;
          if (!v23) {
            goto LABEL_45;
          }
          goto LABEL_81;
      }
    }
  }
LABEL_87:
  uint64_t v89 = (char *)sub_2225C3C70((uint64_t)v118);
  BOOL v90 = (char *)sub_2225C3D04((uint64_t)v118);
  sub_2225C5A88(a4, v89, v90);
  sub_2225C56C4(v118);
  sub_2225C56C4(v119);
  return sub_2225C56C4(v120);
}

uint64_t sub_2225F48E4(uint64_t a1)
{
  return *(char *)(*(void *)a1 + 288);
}

uint64_t sub_2225F48F0(void *a1, unsigned int a2)
{
  return *(unsigned __int8 *)(*a1 + a2 + 289);
}

uint64_t sub_2225F4900(void *a1, unsigned int a2)
{
  return *(void *)(*a1 + 8 * a2 + 544);
}

BOOL sub_2225F4910(int a1)
{
  return (word_2226CBA58[a1] & 0x780) != 0;
}

uint64_t sub_2225F4928(int a1)
{
  return ((unsigned __int16)word_2226CBA58[a1] >> 3) & 1;
}

char *sub_2225F493C(unsigned __int8 *a1, char *a2, unsigned __int8 a3)
{
  uint64_t v3 = a1;
  if (a1 == (unsigned __int8 *)a2) {
    return (char *)v3;
  }
  int v5 = 0;
  int v6 = a3;
  while (1)
  {
    int v7 = (char)*v3;
    if (v5)
    {
      v5 -= v7 == 125;
    }
    else
    {
      if (v7 == v6) {
        return (char *)v3;
      }
      int v5 = 0;
    }
    if (v7 != 37) {
      goto LABEL_12;
    }
    if (v3 + 1 == (unsigned __int8 *)a2) {
      return a2;
    }
    int v8 = v3[1];
    if ((sub_2225F4928(v8) & 1) == 0 && !sub_2225F4910(v8)) {
      break;
    }
    ++v3;
LABEL_12:
    if (++v3 == (unsigned __int8 *)a2) {
      return a2;
    }
  }
  for (v3 += 2; v3 != (unsigned __int8 *)a2; ++v3)
  {
    int v9 = *v3;
    if ((sub_2225F4928(v9) & 1) != 0 || v9 == 123)
    {
      if (v9 == 123) {
        ++v5;
      }
      goto LABEL_12;
    }
  }
  return a2;
}

BOOL sub_2225F4A28(_DWORD *a1, int a2)
{
  return a2 == 4 && *a1 == 1717987684;
}

uint64_t sub_2225F4A50(void *a1, unsigned int a2)
{
  return *a1 + 24 * a2 + 304;
}

uint64_t sub_2225F4A64(void *a1, unsigned int a2)
{
  return *(unsigned int *)(*a1 + 8 * a2 + 544);
}

BOOL sub_2225F4A74(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 != 6) {
    return 0;
  }
  return *(_DWORD *)a1 == *(_DWORD *)a3 && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(a3 + 4);
}

uint64_t sub_2225F4AA4(uint64_t a1, int a2, unsigned __int8 *a3, int a4, uint64_t a5)
{
  int v6 = a3;
  int v8 = (char *)&a3[a4];
  if (a2)
  {
    int v9 = a2;
    do
    {
      int v6 = (unsigned __int8 *)(sub_2225F493C(v6, v8, 0x7Cu) + 1);
      --v9;
    }
    while (v9);
  }
  int v10 = sub_2225F493C(v6, v8, 0x7Cu);

  return sub_2225F3D94(a1, v6, v10, a5);
}

BOOL sub_2225F4B34(unsigned __int8 *a1, int a2)
{
  return a2 == 1 && *a1 == 115;
}

uint64_t sub_2225F4B54(uint64_t result, uint64_t a2)
{
  if (result != 1)
  {
    uint64_t v5 = v2;
    uint64_t v6 = v3;
    char v4 = 115;
    return sub_2225C52D8(a2, &v4);
  }
  return result;
}

uint64_t sub_2225F4B94(uint64_t a1, unsigned int a2, unsigned __int8 *a3, int a4, uint64_t a5)
{
  uint64_t v6 = a3;
  for (i = (char *)&a3[a4]; ; uint64_t v6 = (unsigned __int8 *)(sub_2225F493C(v6, i - 1, 0x7Cu) + 1))
  {
    int v10 = v6;
    do
      int v11 = *v10++;
    while (v11 != 58);
    if (sub_2225F5864(a2, v6, v10 - 1)) {
      break;
    }
  }
  BOOL v12 = sub_2225F493C(v10, i, 0x7Cu);

  return sub_2225F3D94(a1, v10, v12, a5);
}

BOOL sub_2225F4C4C(_DWORD *a1, int a2)
{
  if (a2 != 7) {
    return 0;
  }
  return *a1 == 1768190575 && *(_DWORD *)((char *)a1 + 3) == 1818324585;
}

uint64_t sub_2225F4C84(unsigned int a1)
{
  sub_2225E8C04(v6);
  uint64_t v2 = sub_2225CA560(v6, a1);
  uint64_t v3 = sub_2225F5A1C(a1);
  sub_2225CA568((uint64_t)v2, v3, v4);
  return sub_2225E8C5C(v6);
}

const char *sub_2225F4CEC(int a1)
{
  if (a1 == 6) {
    return "identifier";
  }
  else {
    return 0;
  }
}

uint64_t sub_2225F4D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a1 + 192))(a2, a3, a4, a5, a6, a7, a9, a10, a11, *(void *)(a1 + 184), a12, a13);
}

uint64_t sub_2225F4D3C(uint64_t *a1)
{
  return sub_2225F4FA8(*a1);
}

uint64_t sub_2225F4D44(void *a1)
{
  return *a1 + 12 * a1[1];
}

uint64_t sub_2225F4D54(void *a1)
{
  return *a1 + 56 * a1[1];
}

uint64_t sub_2225F4D64()
{
  return 1;
}

void *sub_2225F4D70(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  sub_2225F4DC8(v2, v3);
  if (!sub_2225C603C(a1))
  {
    uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_2225F4DC8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      v2 -= 56;
      uint64_t result = sub_2225F4E0C(v2);
    }
    while (v2 != v3);
  }
  return result;
}

std::string *sub_2225F4E10(std::string *a1)
{
  return a1;
}

uint64_t sub_2225F4E40(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_2225F4E68(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225F4EE4(a1, a2);
  if ((result & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = (uint64_t *)sub_2225CBB18(a1, v4);
    sub_2225F4F08(v5, *v6);
    uint64_t result = sub_2225D2650(a1, v7);
    *(void *)uint64_t result = 0;
    while ((uint64_t *)v5 != v6)
    {
      uint64_t v8 = j_j_nullsub_1(v5);
      uint64_t v5 = *(void *)(v5 + 8);
      uint64_t result = sub_2225F4F24(a1, v8);
    }
  }
  return result;
}

BOOL sub_2225F4EE4(uint64_t a1, uint64_t a2)
{
  return *(void *)sub_2225D2650(a1, a2) == 0;
}

uint64_t sub_2225F4F08(uint64_t result, uint64_t a2)
{
  *(void *)(*(void *)result + 8) = *(void *)(a2 + 8);
  **(void **)(a2 + 8) = *(void *)result;
  return result;
}

uint64_t sub_2225F4F24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225D2650(a1, a2);
  uint64_t v4 = sub_2225CED2C(a2);
  sub_2225F4F84(v3, v4);
  j_j_nullsub_1(a2);

  return sub_2225F4F8C(v3, a2, 1);
}

uint64_t sub_2225F4F84(uint64_t a1, uint64_t a2)
{
  return sub_2225F4F90(a2);
}

uint64_t sub_2225F4F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 40 * a3, 8);
}

uint64_t sub_2225F4FA8(uint64_t a1)
{
  return *(void *)(a1 + 72);
}

uint64_t sub_2225F4FB0(uint64_t a1)
{
  return sub_2225F4FB8(a1, 0);
}

uint64_t sub_2225F4FBC(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_2225F4FF0(v4, v2);
  return a1;
}

uint64_t sub_2225F4FF0(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_2225F503C(a1, a2);
  if (result)
  {
    return sub_2225F5088(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

BOOL sub_2225F503C(uint64_t a1, unsigned int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  if (a2) {
    uint64_t v4 = sub_2225C26A4(8 * a2);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4;
  return a2 != 0;
}

uint64_t sub_2225F5088(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  int v2 = sub_2225F50F8();
  uint64_t v3 = (_DWORD *)sub_2225CC180(a1);
  uint64_t result = sub_2225F50FC(a1);
  while (v3 != (_DWORD *)result)
  {
    *uint64_t v3 = v2;
    v3 += 2;
  }
  return result;
}

uint64_t sub_2225F50FC(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_2225F5148(a1);
}

uint64_t sub_2225F5130(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8) = a2;
  return result;
}

uint64_t sub_2225F5138(uint64_t result, int a2)
{
  *(_DWORD *)(result + 12) = a2;
  return result;
}

uint64_t sub_2225F5140()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_2225F514C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void **sub_2225F515C(void **a1)
{
  return a1;
}

uint64_t sub_2225F518C(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v6 = sub_2225F50F8();
    int v5 = sub_2225F5214();
    uint64_t v3 = (_DWORD *)sub_2225CC180(a1);
    uint64_t result = sub_2225F50FC(a1);
    if (v3 != (_DWORD *)result)
    {
      uint64_t v4 = (_DWORD *)result;
      do
      {
        uint64_t result = sub_2225F5218(v3, &v6);
        if ((result & 1) == 0) {
          uint64_t result = sub_2225F5218(v3, &v5);
        }
        v3 += 2;
      }
      while (v3 != v4);
    }
  }
  return result;
}

BOOL sub_2225F5218(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2225F522C()
{
  return 4294967294;
}

_DWORD *sub_2225F5234(_DWORD *a1)
{
  uint64_t result = sub_2225F3264(a1);
  *((void *)result + 1) = 0;
  return result;
}

void sub_2225F5250(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  *(unsigned char *)(*a1 + *((unsigned int *)a1 + 2) + 289) = 0;
  sub_2225CA51C(v7, (uint64_t)&v6);
  uint64_t v4 = *a1;
  unsigned int v5 = *((_DWORD *)a1 + 2);
  *((_DWORD *)a1 + 2) = v5 + 1;
  sub_2225CCDE4(v4 + 24 * v5 + 304, (uint64_t)&v6);
  std::string::~string(&v6);
}

uint64_t sub_2225F52C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(_DWORD *)(a1 + 280) = a2;
  *(_DWORD *)(a1 + 284) = a3;
  sub_2225CB97C(a1 + 256, a2);

  return sub_2225F5310(a4, a1);
}

uint64_t sub_2225F5314(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 12) = 1;
  sub_2225C5D90((void *)(a2 + 624));
  sub_2225F3A3C((void *)(a2 + 744));
  return a1;
}

uint64_t sub_2225F535C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225F5384(uint64_t a1)
{
  uint64_t result = sub_2225F53D0(a1);
  if (result)
  {
    sub_2225F53D8((_DWORD *)a1);
    uint64_t v3 = sub_2225F3AF0(*(void *)a1, *(unsigned __int8 *)(a1 + 13));
    sub_2225F53E8(a1);
    return v3;
  }
  return result;
}

uint64_t sub_2225F53D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12);
}

_DWORD *sub_2225F53D8(_DWORD *result)
{
  *(unsigned char *)(*(void *)result + 288) = result[2];
  return result;
}

uint64_t sub_2225F53E8(uint64_t result)
{
  *(void *)uint64_t result = 0;
  *(_WORD *)(result + 12) = 0;
  return result;
}

uint64_t sub_2225F53F4(char a1, int a2, int a3)
{
  if (a2) {
    int v3 = 8;
  }
  else {
    int v3 = 0;
  }
  unsigned int v4 = v3 & 0xFFFFFFF8 | a1 & 7;
  if (a3) {
    int v5 = 16;
  }
  else {
    int v5 = 0;
  }
  return v4 | v5;
}

uint64_t sub_2225F5418(uint64_t a1, _DWORD *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_2225F5454(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_2225F5454(uint64_t a1, _DWORD *a2, void *a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    int v15 = sub_2225F50F8();
    int v14 = sub_2225F5214();
    int v9 = v8 - 1;
    unsigned int v10 = sub_2225F5568(a2) & (v8 - 1);
    int v11 = (_DWORD *)(v6 + 8 * v10);
    if (sub_2225F5218(a2, v11))
    {
LABEL_8:
      uint64_t result = 1;
    }
    else
    {
      BOOL v12 = 0;
      int v13 = 1;
      while (!sub_2225F5218(v11, &v15))
      {
        if (sub_2225F5218(v11, &v14) && v12 == 0) {
          BOOL v12 = v11;
        }
        unsigned int v10 = (v10 + v13) & v9;
        int v11 = (_DWORD *)(v6 + 8 * v10);
        ++v13;
        if (sub_2225F5218(a2, v11)) {
          goto LABEL_8;
        }
      }
      uint64_t result = 0;
      if (v12) {
        int v11 = v12;
      }
    }
    *a3 = v11;
  }
  else
  {
    *a3 = 0;
  }
  return result;
}

uint64_t sub_2225F556C(_DWORD *a1)
{
  return (37 * *a1);
}

_DWORD *sub_2225F557C(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  unsigned int v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2225F566C(a1, (2 * v6));
    sub_2225F5418(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_2225F566C(a1, v7);
    sub_2225F5418(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  int v9 = sub_2225F50F8();
  if (!sub_2225F5218(v10, &v9)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

uint64_t sub_2225F5674(uint64_t a1)
{
  int v2 = sub_2225F5668() + 1;

  return sub_2225F50F0(a1, v2);
}

uint64_t sub_2225F56B0(uint64_t a1)
{
  int v2 = sub_2225F5670() - 1;

  return sub_2225F50F4(a1, v2);
}

uint64_t sub_2225F56EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

void sub_2225F56F4(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  unsigned int v4 = *(_DWORD **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_2225F503C(a1, *v5);
  if (v4)
  {
    sub_2225F5780(a1, v4, &v4[2 * v3]);
    j__free(v4);
  }
  else
  {
    sub_2225F5088(a1);
  }
}

uint64_t sub_2225F5780(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  sub_2225F5088(a1);
  int v9 = sub_2225F50F8();
  uint64_t result = sub_2225F5214();
  int v8 = result;
  while (a2 != a3)
  {
    uint64_t result = sub_2225F5218(a2, &v9);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_2225F5218(a2, &v8);
      if ((result & 1) == 0)
      {
        int v7 = 0;
        sub_2225F5418(a1, a2, &v7);
        *int v7 = *a2;
        v7[1] = a2[1];
        uint64_t result = sub_2225F5674(a1);
      }
    }
    a2 += 2;
  }
  return result;
}

uint64_t sub_2225F5830(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

void *sub_2225F5838(void *a1, uint64_t a2)
{
  *a1 = a2;
  sub_2225CCC70(a1 + 1);
  return a1;
}

uint64_t sub_2225F5864(unsigned int a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  int v11 = a2;
  int v3 = *a2;
  if (v3 != 58)
  {
    while (1)
    {
      if (v3 == 37)
      {
        int v11 = a2 + 1;
        unsigned int v7 = sub_2225F5930(&v11, a3);
        ++v11;
        unsigned int v8 = a1 % v7;
      }
      else
      {
        unsigned int v8 = a1;
      }
      if (sub_2225F597C(v8, &v11, a3)) {
        break;
      }
      char v10 = 44;
      uint64_t v9 = sub_2225D1414((uint64_t)v11, (uint64_t)a3, &v10);
      if ((unsigned __int8 *)v9 == a3) {
        return 0;
      }
      a2 = (unsigned __int8 *)(v9 + 1);
      int v3 = *(unsigned __int8 *)(v9 + 1);
      int v11 = (unsigned __int8 *)(v9 + 1);
    }
  }
  return 1;
}

uint64_t sub_2225F5930(unsigned __int8 **a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  if (*a1 == a2) {
    return 0;
  }
  uint64_t result = 0;
  do
  {
    int v5 = *v2;
    if ((v5 - 48) > 9) {
      break;
    }
    uint64_t result = (v5 + 10 * result - 48);
    *a1 = ++v2;
  }
  while (v2 != a2);
  return result;
}

BOOL sub_2225F597C(unsigned int a1, unsigned __int8 **a2, unsigned __int8 *a3)
{
  if (**a2 != 91) {
    return sub_2225F5930(a2, a3) == a1;
  }
  ++*a2;
  unsigned int v6 = sub_2225F5930(a2, a3);
  ++*a2;
  unsigned int v7 = sub_2225F5930(a2, a3);
  ++*a2;
  return v6 <= a1 && v7 >= a1;
}

uint64_t sub_2225F5A1C(unsigned int a1)
{
  if (a1 % 0x64 - 11 < 3 || (uint64_t v1 = a1 % 0xA - 1, v1 > 2)) {
    int v2 = "th";
  }
  else {
    int v2 = off_264613A98[v1];
  }
  sub_2225C3D00((int)&v4, v2);
  return v4;
}

unint64_t sub_2225F5AA4(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return 0xAAAAAAAAAAAAAAABLL * ((v2 - sub_2225C3C70(a1)) >> 2);
}

uint64_t sub_2225F5AE8(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return 0x6DB6DB6DB6DB6DB7 * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_2225F5B34(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 56 * a2);
}

void *sub_2225F5B40(uint64_t a1, __n128 *a2)
{
  sub_2225F5C64(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  unsigned int v7 = (__n128 *)nullsub_1(v10, v6);
  sub_2225F5C68(v5, v7, a2);
  v10 += 24;
  return sub_2225D284C(&v9);
}

uint64_t sub_2225F5BB4(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, (uint64_t)a2);
  unint64_t v5 = sub_2225D24AC(a1);
  unint64_t v6 = sub_2225D2880(a1, v5 + 1);
  unint64_t v7 = sub_2225D24AC(a1);
  sub_2225D28FC(v12, v6, v7, v4);
  uint64_t v9 = (__n128 *)nullsub_1(v13, v8);
  sub_2225F5C68(v4, v9, a2);
  v13 += 24;
  sub_2225F5CA0(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225F5D90(v12);
  return v10;
}

void *sub_2225F5C6C(void *result, uint64_t a2, uint64_t a3)
{
  _DWORD *result = a2;
  result[1] = *(void *)(a2 + 8);
  result[2] = *(void *)(a2 + 8) + 24 * a3;
  return result;
}

__n128 sub_2225F5C8C(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2225F5CA0(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2225F5D94();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  unint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  unint64_t v10 = sub_2225D24AC(a1);
  return nullsub_1(a1, v10);
}

uint64_t sub_2225F5D94()
{
  return sub_2225F5DB0();
}

uint64_t sub_2225F5DB0()
{
  sub_2225F5DD8(v1);
  return v1[2];
}

uint64_t sub_2225F5DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_2225F5EB0(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_2225F5EB0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v15[0] = a1;
  v15[1] = a2;
  v14[0] = a3;
  v14[1] = a4;
  v13[0] = a5;
  v13[1] = a6;
  while (sub_2225D2CC0((uint64_t)v15, (uint64_t)v14))
  {
    uint64_t v9 = sub_2225F5F48((uint64_t)v15, v8);
    uint64_t v10 = sub_2225D2CFC((uint64_t)v13);
    uint64_t v11 = *(void *)(v9 + 16);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v9;
    *(void *)(v10 + 16) = v11;
    sub_2225D2D08((uint64_t)v15);
    sub_2225D2D08((uint64_t)v13);
  }
  return sub_2225CCC60((uint64_t)v15, (uint64_t)v13, a7);
}

uint64_t sub_2225F5F48(uint64_t a1, uint64_t a2)
{
  nullsub_1(a1, a2);

  return sub_2225D2CFC(a1);
}

uint64_t *sub_2225F5F80(uint64_t *a1)
{
  sub_2225F5FE0((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    unint64_t v5 = sub_2225D2DD8(a1, v4);
    sub_2225D264C(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_2225F5FE0(uint64_t a1)
{
  return sub_2225F5FE8(a1, *(void *)(a1 + 8));
}

uint64_t sub_2225F5FEC(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 24;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      __n128 result = j_nullsub_1(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

char *sub_2225F6058(const void **a1, uint64_t a2)
{
  return sub_2225C5B7C(a1, 12 * a2, 12);
}

uint64_t sub_2225F6068(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_2225F6164((uint64_t)a1);
  uint64_t v5 = sub_2225F5AE8((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(56 * v7, 0x1012040998C4DBDuLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_2225F61B0(v9, v10, (uint64_t)v8);
  uint64_t v11 = sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  sub_2225F4DC8(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 56 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 56 * v7;
  return result;
}

uint64_t sub_2225F6164(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return 0x6DB6DB6DB6DB6DB7 * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_2225F61B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225F6208(a3, v5);
      v5 += 56;
      a3 += 56;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_2225F620C(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 13) = *(void *)((char *)a2 + 13);
  *(_OWORD *)a1 = v4;
  sub_2225D1354(a1 + 24, (char *)a2 + 24);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t sub_2225F6254(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 13) = *(void *)((char *)a2 + 13);
  *(_OWORD *)a1 = v4;
  std::string::basic_string((std::string *)(a1 + 24), (const std::string *)a2 + 1);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t sub_2225F629C(uint64_t a1)
{
  return sub_2225F62A4(a1, 8u);
}

uint64_t sub_2225F62A4(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 12 * a2);
}

uint64_t *sub_2225F62B0(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  sub_2225F62E0(a1);
  return a1;
}

uint64_t sub_2225F62E0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_2225F62F0();
  }
  return result;
}

_DWORD *sub_2225F62F4(_DWORD *result)
{
  return result;
}

uint64_t *sub_2225F6304(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  sub_2225F62E0(a1);
  return a1;
}

uint64_t sub_2225F6334(uint64_t a1)
{
  uint64_t v2 = sub_2225F6378();
  int v5 = 0;
  sub_2225E532C(v2 + 16, &v5, &v4);
  return a1;
}

void *sub_2225F637C(void *a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);
  *a1 = nullsub_1(v3, v4);
  uint64_t v6 = j_nullsub_1(a1, v5);
  a1[1] = nullsub_1(v6, v7);
  return a1;
}

uint64_t sub_2225F63BC(uint64_t a1)
{
  return sub_2225F5B34(a1, 8u);
}

uint64_t *sub_2225F63C4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2225F63EC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_2225F63FC();
  }
  return result;
}

void sub_2225F6400(_DWORD *a1)
{
  if ((*a1)-- == 1)
  {
    uint64_t v2 = (void *)sub_2225F7078();
    j__free(v2);
  }
}

uint64_t *sub_2225F6440(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2225F6468(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_2225F6478();
  }
  return result;
}

void sub_2225F647C(_DWORD *a1)
{
  if ((*a1)-- == 1)
  {
    uint64_t v2 = (void *)sub_2225F64BC();
    j__free(v2);
  }
}

uint64_t sub_2225F64C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225F6504(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2225F6544(&v3);
  return a1;
}

uint64_t *sub_2225F6544(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2225F65BC(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    unint64_t v9 = sub_2225D2658(v6, v8);
    return (uint64_t *)sub_2225D264C(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2225F65BC(uint64_t *a1)
{
  return sub_2225F65C4((uint64_t)a1, *a1);
}

uint64_t sub_2225F65C4(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = j_nullsub_1(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 24;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_2225F662C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a2;
  uint64_t v12 = a3;
  uint64_t v5 = sub_2225D2650(a1, a2);
  sub_2225F6700((uint64_t)v11, 1);
  uint64_t v6 = sub_2225C5B40((uint64_t)v11);
  sub_2225F6704(v6, &v13, &v12);
  uint64_t v7 = sub_2225C5B40((uint64_t)v11);
  uint64_t v8 = sub_2225CED2C(v7);
  sub_2225F6710(v5, v8, a4);
  uint64_t v9 = sub_2225F6714((uint64_t)v11);
  sub_2225F6724(v11);
  return v9;
}

uint64_t sub_2225F66B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = sub_2225CBB18((uint64_t)a1, (uint64_t)a2);
  *(void *)(a3 + 8) = result;
  uint64_t v7 = *a1;
  *a2 = *a1;
  *(void *)(v7 + 8) = a2;
  *a1 = a3;
  return result;
}

uint64_t sub_2225F6704(uint64_t a1, void *a2, void *a3)
{
  return sub_2225F67B8(a1, *a2, *a3);
}

uint64_t sub_2225F6714(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  return v1;
}

uint64_t sub_2225F6728(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = sub_2225F6758();
  return a1;
}

uint64_t sub_2225F675C(uint64_t a1, unint64_t a2)
{
  if (sub_2225F67A8() < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(40 * a2, 8);
}

uint64_t sub_2225F67AC()
{
  return 0x666666666666666;
}

uint64_t sub_2225F67BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225F67C8(a2, a3);
}

uint64_t sub_2225F67D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = nullsub_1(a1, a2);
  sub_2225F4FF0(v4, 0);
  sub_2225F6814(a1, a2);
  return a1;
}

int *sub_2225F6814(uint64_t a1, uint64_t a2)
{
  sub_2225C6448((uint64_t *)a1, (uint64_t *)a2);
  sub_2225D33F4((int *)(a1 + 8), (int *)(a2 + 8));
  sub_2225D33F4((int *)(a1 + 12), (int *)(a2 + 12));

  return sub_2225D33F4((int *)(a1 + 16), (int *)(a2 + 16));
}

uint64_t sub_2225F686C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225F6894(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1) {
    return sub_2225F4F8C(result, v1, *(void *)(result + 8));
  }
  return result;
}

uint64_t sub_2225F68A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225F68D0(a1, a2, a3, (uint64_t)&v5, (uint64_t)&v4);
}

uint64_t sub_2225F68D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a1;
  uint64_t v17 = a1;
  uint64_t v9 = sub_2225F6990(a1, a2);
  if (v9)
  {
    unint64_t v10 = v9;
    do
    {
      unint64_t v11 = sub_2225DC2E8(v10);
      sub_2225F6994(&v17, v11);
      uint64_t v16 = v12;
      uint64_t v13 = sub_2225C3C70((uint64_t)&v16);
      uint64_t v14 = sub_2225DC2F8(a5, v13);
      if ((sub_2225F699C(a4, a3, v14) & 1) == 0)
      {
        uint64_t v17 = *sub_2225F3950(&v16);
        unint64_t v11 = v10 + ~v11;
      }
      unint64_t v10 = v11;
    }
    while (v11);
    return v17;
  }
  return v8;
}

void sub_2225F6994(uint64_t *a1, uint64_t a2)
{
}

unint64_t sub_2225F69A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  return sub_2225F69D0((uint64_t)&v3, (uint64_t)&v4);
}

unint64_t sub_2225F69D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return 0xAAAAAAAAAAAAAAABLL * ((v3 - sub_2225C3C70(a2)) >> 3);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2225F6A14(uint64_t a1, uint64_t a2)
{
  sub_2225F6A40((uint64_t)&v2, a2);
}

uint64_t sub_2225F6A40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_2225F6A80(a1, v3);
}

void *sub_2225F6A84(void *result, uint64_t a2)
{
  *result += 24 * a2;
  return result;
}

BOOL sub_2225F6A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225F6AA4(a2, a3);
}

BOOL sub_2225F6AA4(uint64_t a1, uint64_t a2)
{
  if (sub_2225F38E8((_DWORD *)(a2 + 8))) {
    return 0;
  }
  char v5 = (_DWORD *)(a1 + 8);
  if (sub_2225F38E8(v5)) {
    return 1;
  }
  uint64_t v6 = *(void *)(a2 + 8);

  return sub_2225F38F8((uint64_t)v5, v6);
}

uint64_t sub_2225F6B14(uint64_t a1)
{
  return sub_2225CC380(a1, 0x100u);
}

unint64_t sub_2225F6B1C(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return 0xAAAAAAAAAAAAAAABLL * ((v2 - sub_2225C3C70(a1)) >> 2);
}

uint64_t sub_2225F6B60(uint64_t a1)
{
  return sub_2225D5BA8(a1, 2u);
}

unint64_t sub_2225F6B6C(uint64_t a1, uint64_t a2)
{
  return 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 2);
}

uint64_t sub_2225F6B84()
{
  sub_2225F6BA0();
  return v0;
}

uint64_t sub_2225F6BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)j_j_nullsub_1(a3);
  uint64_t v9 = sub_2225F6C38((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2225F6C38(int a1, const void *a2, uint64_t a3, char *__dst)
{
  return sub_2225F6C48(a2, a3, __dst);
}

uint64_t sub_2225F6C48(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_2225F6CAC(__dst, a1, 0xAAAAAAAAAAAAAAABLL * ((a2 - (uint64_t)a1) >> 2));
  uint64_t v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

void *sub_2225F6CAC(void *__dst, const void *a2, uint64_t a3)
{
  if (a3) {
    memmove(__dst, a2, 12 * a3 - 3);
  }
  return __dst;
}

unsigned __int16 *sub_2225F6CE8(unsigned int a1)
{
  uint64_t result = sub_2225F6D0C(a1);
  if (result) {
    return (unsigned __int16 *)((result[1] >> 10) & 0x1F);
  }
  return result;
}

unsigned __int16 *sub_2225F6D0C(unsigned int a1)
{
  if (a1 - 5720 < 0xFFFFE9A9) {
    return 0;
  }
  if (a1 <= 0x12C) {
    int v1 = 0;
  }
  else {
    int v1 = 68;
  }
  if (a1 <= 0x12C) {
    int v2 = -1;
  }
  else {
    int v2 = -301;
  }
  unsigned int v3 = v2 + a1;
  if (a1 > 0x190)
  {
    v1 += 84;
    v3 -= 100;
  }
  if (a1 > 0x1F4)
  {
    v1 += 93;
    v3 -= 100;
  }
  if (a1 > 0x26C)
  {
    v1 += 34;
    v3 -= 120;
  }
  if (a1 > 0x398)
  {
    v1 += 294;
    v3 -= 300;
  }
  if (a1 > 0x58C)
  {
    v1 += 416;
    v3 -= 500;
  }
  if (a1 > 0x5F0)
  {
    v1 += 98;
    v3 -= 100;
  }
  if (a1 > 0x654)
  {
    v1 += 34;
    v3 -= 100;
  }
  if (a1 > 0x120C)
  {
    v1 += 2807;
    v3 -= 3000;
  }
  if (a1 > 0x1270) {
    v3 -= 100;
  }
  unsigned int v4 = v3 + v1;
  if (v4 > 0xF6E) {
    return 0;
  }
  uint64_t v6 = (unsigned __int16 *)((char *)&unk_264613CE0 + 16 * v4);
  if (*v6 == a1) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t sub_2225F6E1C(uint64_t a1, unsigned int a2)
{
  unsigned int v8 = a2;
  int v5 = 0;
  uint64_t v6 = sub_2225E15B0((uint64_t)&v8, (uint64_t)&v5);
  sub_2225F6E98(a1, &v6, (uint64_t)v7);
  if (v7[16])
  {
    int v3 = sub_2225F6F58(v8);
    *(_DWORD *)(sub_2225C3C70((uint64_t)v7) + 4) = v3;
  }
  return sub_2225C3C70((uint64_t)v7) + 4;
}

uint64_t sub_2225F6E98@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v13 = 0;
  if (sub_2225F5418(a1, a2, &v13))
  {
    uint64_t v6 = v13;
    uint64_t v7 = sub_2225F50FC(a1);
    sub_2225F7FF8(v12, v6, v7, 1);
    char v11 = 0;
  }
  else
  {
    unsigned int v8 = sub_2225F7FFC(a1, a2, a2 + 1, v13);
    uint64_t v13 = v8;
    uint64_t v9 = sub_2225F50FC(a1);
    sub_2225F7FF8(v12, v8, v9, 1);
    char v11 = 1;
  }
  return sub_2225F7FE8((uint64_t)v12, (uint64_t)&v11, a3);
}

uint64_t sub_2225F6F58(unsigned int a1)
{
  unsigned int v5 = sub_2225F53F4(5, 0, 0);
  int v2 = sub_2225F6D0C(a1);
  if (v2)
  {
    int v3 = v2;
    sub_2225F3994(&v5, v2[1] & 7);
    if ((v3[1] & 0x100) != 0) {
      sub_2225F39A4(&v5, 1);
    }
  }
  return v5;
}

uint64_t sub_2225F6FCC(unsigned int a1)
{
  if (a1 < 0x22) {
    return sub_2225F7010((uint64_t)&(&off_264613AB0)[2 * a1]);
  }
  sub_2225CCC70(&v2);
  return v2;
}

uint64_t sub_2225F7010(uint64_t a1)
{
  sub_2225C3D0C(&v2, *(void *)a1, *(unsigned __int8 *)(a1 + 8));
  return v2;
}

uint64_t sub_2225F7040(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v2 = (void *)sub_2225F7074();
    j__free(v2);
  }
  return a1;
}

BOOL sub_2225F707C(unsigned int a1)
{
  return a1 >> 3 <= 0x2CA && sub_2225F70B4(a1) != 5;
}

uint64_t sub_2225F70B4(unsigned int a1)
{
  int v1 = sub_2225F6D0C(a1);
  if (v1) {
    return (v1[1] >> 3) & 7;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_2225F70E0(unsigned int a1, BOOL *a2)
{
  if (a1 >> 3 > 0x2CA) {
    return 0;
  }
  uint64_t v8 = v2;
  uint64_t v9 = v3;
  if (sub_2225F70B4(a1) != 4) {
    return 0;
  }
  int v7 = sub_2225F6F58(a1);
  *a2 = sub_2225F3914(&v7) != 1;
  return 1;
}

BOOL sub_2225F715C(unsigned int a1)
{
  if (a1 >> 3 > 0x2CA) {
    return 0;
  }
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  int v4 = sub_2225F6F58(a1);
  return sub_2225F3914(&v4) == 4;
}

uint64_t sub_2225F71A8(uint64_t a1, unsigned int a2)
{
  int v4 = sub_2225F6D0C(a2);
  if (v4)
  {
    return sub_2225F720C((uint64_t)v4);
  }
  else
  {
    uint64_t v6 = *(void **)(a1 + 8);
    return sub_2225F723C(v6, a2);
  }
}

uint64_t sub_2225F720C(uint64_t a1)
{
  sub_2225C3D0C(&v2, *(void *)(a1 + 8), *(unsigned __int16 *)(a1 + 6));
  return v2;
}

uint64_t sub_2225F723C(void *a1, int a2)
{
  uint64_t v2 = sub_2225F7FCC(a1, (a2 - 5720));
  sub_2225CCBF8(&v4, v2 + 8);
  return v4;
}

uint64_t sub_2225F7274(uint64_t a1, unsigned int a2, int a3, unsigned char *a4)
{
  if (a2 >> 3 < 0x2CB)
  {
    uint64_t result = sub_2225F70B4(a2);
    if (result != 1)
    {
      int v9 = sub_2225F7350(result, a2, a3, a4);
      return sub_2225F733C(v9);
    }
  }
  else
  {
    uint64_t v5 = *(void **)(a1 + 8);
    return sub_2225F7318(v5, a2);
  }
  return result;
}

uint64_t sub_2225F7318(void *a1, int a2)
{
  return *(unsigned int *)sub_2225F7FCC(a1, (a2 - 5720));
}

uint64_t sub_2225F733C(int a1)
{
  return dword_2226D00C8[a1 - 1];
}

uint64_t sub_2225F7350(uint64_t a1, unsigned int a2, int a3, unsigned char *a4)
{
  uint64_t v6 = 5;
  unsigned int v20 = 5;
  unsigned int v21 = a3;
  uint64_t v19 = sub_2225F37F4((uint64_t)a4, a3);
  uint64_t v8 = (uint64_t *)sub_2225F3960(&v19, v7);
  int v9 = (unsigned __int8 *)sub_2225F6E1C(*v8, a2);
  if (sub_2225F3914(v9))
  {
    uint64_t v10 = sub_2225F3914(v9);
    uint64_t v6 = v10;
    unsigned int v20 = v10;
    if (a4[7] && v10 == 1)
    {
      if (sub_2225F7530(v9))
      {
        uint64_t v6 = 1;
        goto LABEL_12;
      }
      unsigned int v20 = 3;
    }
    else if (v10 != 3)
    {
      goto LABEL_12;
    }
    if (sub_2225F70B4(a2) == 2)
    {
      uint64_t v6 = 2;
      unsigned int v20 = 2;
    }
    else
    {
      uint64_t v6 = 3;
    }
  }
LABEL_12:
  BOOL v18 = 0;
  int v11 = sub_2225F70E0(a2, &v18);
  if (a4[4] && v11 && !v18) {
    return 1;
  }
  if (v11 && (sub_2225F7530(v9) & 1) == 0)
  {
    uint64_t v12 = (unsigned int *)sub_2225F753C(&v20, a4 + 32);
    uint64_t v6 = *v12;
    unsigned int v20 = *v12;
  }
  if (v6 != 1)
  {
    if (v6 == 3)
    {
      if (a4[5]) {
        return 1;
      }
      if (!a4[6])
      {
LABEL_30:
        uint64_t v13 = sub_2225F6D0C(a2);
        if (!v13) {
          return v20;
        }
        if (!a4[9]) {
          return v20;
        }
        if ((v13[1] & 0x200) != 0) {
          return v20;
        }
        if (!sub_2225CDBBC(&v21)) {
          return v20;
        }
        uint64_t v14 = sub_2225F4FA8((uint64_t)a4);
        uint64_t v15 = (_DWORD *)sub_2225F4FA8((uint64_t)a4);
        int v16 = sub_2225F757C(v15, v21);
        if (!sub_2225F7558(v14, v16)) {
          return v20;
        }
        return 1;
      }
      if (sub_2225F7540(v9))
      {
        LODWORD(v6) = v20;
      }
      else
      {
        LODWORD(v6) = 4;
        unsigned int v20 = 4;
      }
    }
    if (v6 == 4 && a4[8] && (sub_2225F754C(v9) & 1) == 0) {
      unsigned int v20 = 5;
    }
    goto LABEL_30;
  }
  return v6;
}

uint64_t sub_2225F7530(unsigned __int8 *a1)
{
  return (*a1 >> 3) & 1;
}

uint64_t sub_2225F7540(unsigned __int8 *a1)
{
  return (*a1 >> 5) & 1;
}

uint64_t sub_2225F754C(unsigned __int8 *a1)
{
  return (*a1 >> 6) & 1;
}

BOOL sub_2225F7558(uint64_t a1, int a2)
{
  return sub_22260D888(a1, a2) != 0;
}

uint64_t sub_2225F757C(_DWORD *a1, unsigned int a2)
{
  unsigned int v6 = a2;
  BOOL v3 = sub_2225F7FD8(&v6);
  uint64_t v4 = v6;
  if (!v3) {
    return sub_22260C558(a1, v6);
  }
  return v4;
}

uint64_t sub_2225F75C8(unsigned int a1)
{
  uint64_t v1 = sub_2225F6D0C(a1);
  if (v1)
  {
    int v2 = sub_2225F7614((uint64_t)v1);
    return sub_2225F761C(&word_2226CBC58[3 * v2]);
  }
  else
  {
    sub_2225CCC70(&v4);
    return v4;
  }
}

uint64_t sub_2225F7614(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 4);
}

uint64_t sub_2225F761C(unsigned __int16 *a1)
{
  sub_2225C3D0C(&v2, &byte_2226CC8D6[*a1 + 1], byte_2226CC8D6[*a1]);
  return v2;
}

uint64_t sub_2225F7658(uint64_t a1, uint64_t a2, const void *a3, size_t a4, uint64_t a5)
{
  v14[0] = a3;
  v14[1] = a4;
  int v9 = (char *)sub_2225F7708(v14);
  if (v9 == byte_2226CC8D6) {
    return 1;
  }
  uint64_t v10 = (uint64_t)v9;
  uint64_t v11 = sub_2225F761C((unsigned __int16 *)v9);
  if (sub_2225D1680(v11, v12, a3, a4)) {
    return 1;
  }

  return sub_2225F777C(a2, v10, a5);
}

void *sub_2225F7708(void *a1)
{
  uint64_t v2 = sub_2225F773C;
  return sub_2225F8180(a1, (uint64_t (**)(uint64_t, void, void))&v2);
}

BOOL sub_2225F773C(unsigned __int16 *a1, const void *a2, unint64_t a3)
{
  uint64_t v5 = sub_2225F761C(a1);

  return sub_2225E2A2C(v5, v6, a2, a3);
}

uint64_t sub_2225F777C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(unsigned __int16 *)(a2 + 2);
  if (*(_WORD *)(a2 + 2) || *(_WORD *)(a2 + 4))
  {
    int v7 = word_2226CF278[v6];
    if (v7 == 0xFFFF)
    {
      int v9 = 1;
    }
    else
    {
      uint64_t v8 = &word_2226CF278[v6 + 1];
      int v9 = 1;
      do
      {
        int v10 = (__int16)v7;
        uint64_t v11 = sub_2225F6D0C((__int16)v7);
        if (sub_2225F789C((uint64_t)v11) == a1)
        {
          int v18 = v10;
          sub_2225CC08C(a3, &v18);
          int v9 = 0;
        }
        int v12 = *v8++;
        LOWORD(v7) = v12;
      }
      while (v12 != 0xFFFF);
    }
    uint64_t v13 = *(unsigned __int16 *)(a2 + 4);
    int v14 = word_2226CFE3E[v13];
    if (v14 != 0xFFFF)
    {
      uint64_t v15 = &word_2226CFE3E[v13 + 1];
      do
      {
        v9 &= sub_2225F777C(a1, (char *)&unk_2226CBC58 + 6 * (__int16)v14, a3);
        int v16 = *v15++;
        LOWORD(v14) = v16;
      }
      while (v16 != 0xFFFF);
    }
  }
  else
  {
    LOBYTE(v9) = a1 == 1;
  }
  return v9 & 1;
}

BOOL sub_2225F789C(uint64_t a1)
{
  return (*(_WORD *)(a1 + 2) & 0x38) == 16;
}

uint64_t sub_2225F78B0(uint64_t a1, uint64_t a2)
{
  sub_2225F3BCC(v12, a2);
  if (*(unsigned char *)(a2 + 10)) {
    return 0;
  }
  unsigned int v5 = sub_2225F3BD0((uint64_t)v12);
  uint64_t v6 = (int *)sub_2225F3BDC(v12);
  uint64_t result = sub_2225F7274(a1, v5, *v6, (unsigned char *)a2);
  uint64_t v7 = result;
  if (result != 1)
  {
    if (*(_DWORD *)(a2 + 164) == 5) {
      *(unsigned char *)(a2 + 154) = 1;
    }
    *(_DWORD *)(a2 + 164) = result;
    BOOL v8 = (int)result > 3;
    if ((int)result < 4)
    {
      if (*(unsigned char *)(a2 + 154)) {
        return 0;
      }
    }
    else
    {
      ++*(_DWORD *)(a2 + 156);
      uint64_t result = sub_2225F7AD8(a1, v5);
      if (result) {
        ++*(_DWORD *)(a2 + 160);
      }
      if (*(unsigned char *)(a2 + 154))
      {
        uint64_t result = (*(uint64_t (**)(void))(**(void **)(a2 + 56) + 48))(*(void *)(a2 + 56));
        if (result)
        {
          uint64_t result = 0;
          *(int32x2_t *)(a2 + 172) = vadd_s32(*(int32x2_t *)(a2 + 172), (int32x2_t)0x100000001);
        }
        return result;
      }
    }
    if (!v7) {
      return 0;
    }
    if (v7 != 1) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  BOOL v8 = 0;
  uint64_t result = 0;
  if (!*(unsigned char *)(a2 + 154))
  {
LABEL_18:
    if (*(_DWORD *)(a2 + 164))
    {
LABEL_19:
      if (!v8) {
        goto LABEL_30;
      }
      if (sub_2225F7AD8(a1, v5)) {
        *(unsigned char *)(a2 + 155) = 1;
      }
      if (sub_2225F715C(v5)) {
        *(unsigned char *)(a2 + 153) = 1;
      }
      *(unsigned char *)(a2 + 152) = 1;
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(a2 + 56) + 48))(*(void *)(a2 + 56));
      if (result) {
        ++*(_DWORD *)(a2 + 172);
      }
      unsigned int v9 = *(_DWORD *)(a2 + 20);
      if (!v9 || v7 != 4 || *(_DWORD *)(a2 + 172) <= v9)
      {
LABEL_30:
        sub_2225F7B4C(result, a2, v7);
        return 1;
      }
      sub_2225C3D00((int)v11, &byte_2226D1615);
      sub_2225C3D00((int)v10, &byte_2226D1615);
      sub_2225F3664(a2, 42, v11[0], v11[1], v10[0], v10[1]);
    }
    return 0;
  }
  return result;
}

BOOL sub_2225F7AD8(uint64_t a1, unsigned int a2)
{
  if (a2 >> 3 >= 0x2CB) {
    return (int)sub_2225F7318(*(void **)(a1 + 8), a2) > 3;
  }
  unsigned int v4 = sub_2225F70B4(a2);
  BOOL result = 0;
  if (a2 - 3093 >= 2 && v4 >= 5) {
    return !sub_2225F7BF8(a2);
  }
  return result;
}

uint64_t sub_2225F7B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225F3BCC(v6, a2);
  (*(void (**)(void, uint64_t, void *))(**(void **)(a2 + 56) + 56))(*(void *)(a2 + 56), a3, v6);
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a2 + 56) + 48))(*(void *)(a2 + 56));
  if (a3 == 3 && result) {
    ++*(_DWORD *)(a2 + 168);
  }
  *(_DWORD *)(a2 + 284) = -1;
  return result;
}

BOOL sub_2225F7BF8(unsigned int a1)
{
  unsigned int v1 = sub_2225F6CE8(a1);
  v5[0] = sub_2225F6FCC(v1);
  v5[1] = v2;
  sub_2225C3D00((int)v4, "ARC ");
  return sub_2225D0520((uint64_t)v5, v4[0], (size_t)v4[1]);
}

uint64_t sub_2225F7C3C(uint64_t a1)
{
  sub_2225F7C78(a1 + 24);

  return sub_2225F7C7C(a1);
}

uint64_t sub_2225F7C88(uint64_t a1, uint64_t a2)
{
  BOOL v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_2225F7CBC(a1, v3);
  return a1;
}

uint64_t sub_2225F7CBC(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_2225F7CBC(result, *a2);
    sub_2225F7CBC(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = j_nullsub_1(a2 + 4, v6);
    sub_2225F7D38(v5, v7);
    return sub_2225F7D40(v5, (uint64_t)a2, 1);
  }
  return result;
}

uint64_t sub_2225F7D38(uint64_t a1, uint64_t a2)
{
  return sub_2225F7D44(a2);
}

uint64_t sub_2225F7D54(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225F7D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 72 * a3, 8);
}

uint64_t sub_2225F7D94(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2225F7DD4(&v3);
  return a1;
}

uint64_t *sub_2225F7DD4(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2225F7E4C(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2225F7E58(v6, v8);
    return (uint64_t *)sub_2225F7E54(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2225F7E4C(uint64_t *a1)
{
  return sub_2225F7E8C((uint64_t)a1, *a1);
}

uint64_t sub_2225F7E58(void *a1, uint64_t a2)
{
  return (uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 5;
}

uint64_t sub_2225F7E8C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_2225F7EF4(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 32;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_2225F7EF8(uint64_t a1, uint64_t a2)
{
  return sub_2225F7D50(a2);
}

uint64_t sub_2225F7F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 32 * a3, 8);
}

uint64_t sub_2225F7F10(uint64_t a1, uint64_t a2)
{
  size_t v4 = sub_2225CB920(a1, a2);
  if (v4 != sub_2225CB920(a2, v5)) {
    return 0;
  }
  uint64_t v7 = (unsigned __int8 *)sub_2225CBED4(a1, v6);
  uint64_t v9 = (unsigned __int8 *)sub_2225CBED4(a2, v8);
  if (sub_2225CBAF8(a1, v10)) {
    return j__memcmp(v7, v9, v4) == 0;
  }
  if (!v4) {
    return 1;
  }
  size_t v12 = v4 - 1;
  do
  {
    int v14 = *v7++;
    int v13 = v14;
    int v16 = *v9++;
    int v15 = v16;
    BOOL v18 = v12-- != 0;
    uint64_t result = v13 == v15;
  }
  while (v13 == v15 && v18);
  return result;
}

uint64_t sub_2225F7FCC(void *a1, uint64_t a2)
{
  return *a1 + 32 * a2;
}

BOOL sub_2225F7FD8(_DWORD *a1)
{
  return *a1 >= 0;
}

uint64_t sub_2225F7FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225F8038(a3, a1, a2);
}

_DWORD *sub_2225F7FFC(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  uint64_t result = sub_2225F557C(a1, a2, a4);
  _DWORD *result = *a2;
  result[1] = *a3;
  return result;
}

uint64_t sub_2225F803C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t result = sub_2225F8068();
  *(unsigned char *)(result + 16) = *a3;
  return result;
}

void *sub_2225F806C(void *result, void *a2)
{
  _DWORD *result = *a2;
  result[1] = a2[1];
  return result;
}

uint64_t *sub_2225F8080(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  *a1 = a2;
  a1[1] = a3;
  if ((a4 & 1) == 0) {
    sub_2225F80B4(a1);
  }
  return a1;
}

uint64_t sub_2225F80B4(uint64_t *a1)
{
  int v5 = sub_2225F5140();
  int v4 = sub_2225F522C();
  uint64_t result = *a1;
  if (*a1 != a1[1])
  {
    do
    {
      if (!sub_2225F5218((_DWORD *)result, &v5))
      {
        uint64_t result = sub_2225F5218((_DWORD *)*a1, &v4);
        if (!result) {
          break;
        }
      }
      uint64_t v3 = a1[1];
      uint64_t result = *a1 + 8;
      *a1 = result;
    }
    while (result != v3);
  }
  return result;
}

_DWORD *sub_2225F8128(_DWORD *a1, _DWORD *a2)
{
  if (sub_2225F816C((uint64_t)&v5, a1, a2)) {
    return a2;
  }
  else {
    return a1;
  }
}

BOOL sub_2225F816C(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  return *a2 < *a3;
}

void *sub_2225F8180(void *a1, uint64_t (**a2)(uint64_t, void, void))
{
  unint64_t v4 = 533;
  char v5 = &unk_2226CBC58;
  do
  {
    unint64_t v6 = sub_2225DC2E8(v4);
    uint64_t v10 = (uint64_t)v5;
    sub_2225F8218(&v10, v6);
    uint64_t v7 = v10;
    int v8 = sub_2225F821C(a2, v10, a1);
    if (v8) {
      v4 += ~v6;
    }
    else {
      unint64_t v4 = v6;
    }
    if (v8) {
      char v5 = (void *)(v7 + 6);
    }
  }
  while (v4);
  return v5;
}

uint64_t sub_2225F821C(uint64_t (**a1)(uint64_t, void, void), uint64_t a2, void *a3)
{
  return (*a1)(a2, *a3, a3[1]);
}

void *sub_2225F8230(void *a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_2225F8270(a1, v3);
}

void *sub_2225F8270(void *result, uint64_t a2)
{
  *result += 6 * a2;
  return result;
}

uint64_t sub_2225F8284(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v6 = (uint64_t *)(sub_2225F3264((_DWORD *)a1) + 2);
  sub_2225F836C(v6, a3);
  sub_2225F8370(a1 + 24, a2);
  sub_2225E0EC8(a1 + 72, v7);
  sub_2225E0EC8(a1 + 96, v8);
  sub_2225D3DAC(a1 + 120);
  sub_2225D3DAC(a1 + 176);
  sub_2225F8374(a1 + 232, 64);
  sub_2225F8374(a1 + 392, 64);
  sub_2225F8378(a1 + 552, 0);
  sub_2225E0EC4((void *)(a1 + 576));
  *(_DWORD *)(a1 + 712) = 0;
  sub_2225D8FA4(a1 + 736);
  *(_OWORD *)(a1 + 716) = 0u;
  if (!sub_2225F837C((uint64_t)a3))
  {
    sub_222613D0C(v10);
    sub_2225F839C(v6, v10);
    sub_2225F83E4(v10);
  }
  return a1;
}

BOOL sub_2225F837C(uint64_t a1)
{
  return sub_2225C3C70(a1) != 0;
}

uint64_t *sub_2225F839C(uint64_t *a1, void *a2)
{
  sub_2225F9EC4(v4, a2);
  sub_2225F9EC8(v4, a1);
  sub_2225F83E4(v4);
  return a1;
}

uint64_t sub_2225F83EC(uint64_t a1)
{
  uint64_t v2 = a1 + 176;
  int v3 = sub_2225CC780(a1 + 176);
  if (v3)
  {
    unsigned int v4 = 0;
    do
    {
      uint64_t v5 = *(void *)sub_2225F84F4(v2, v4);
      if (v5)
      {
        unint64_t v6 = (void *)sub_2225F851C(v5);
        j__free(v6);
      }
      ++v4;
    }
    while (v3 != v4);
  }
  int v7 = sub_2225CC780(a1 + 120);
  if (v7)
  {
    unsigned int v8 = 0;
    do
    {
      uint64_t v9 = *(void **)sub_2225F84F4(a1 + 120, v8);
      if (v9) {
        j__free(v9);
      }
      ++v8;
    }
    while (v7 != v8);
  }
  sub_2225F8520(a1 + 736);
  sub_2225E1434(a1 + 576);
  sub_2225F8524(a1 + 552);
  sub_2225F8528(a1 + 392);
  sub_2225F8528(a1 + 232);
  sub_2225C56C4(v2);
  sub_2225C56C4(a1 + 120);
  sub_2225F852C(a1 + 96);
  sub_2225F8530(a1 + 72);
  sub_2225F8534(a1 + 24);
  sub_2225F83E4(a1 + 8);
  return a1;
}

uint64_t sub_2225F84F4(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 8 * a2;
}

void *sub_2225F853C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2225F9F20(v8, v4);
  }
  return result;
}

uint64_t sub_2225F85AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = sub_2225CF24C(a2, a3);
  uint64_t v10 = v4;
  uint64_t result = sub_2225CF1E0((uint64_t)&v9);
  if ((result & 1) == 0)
  {
    uint64_t v6 = sub_2225F2F58(a1 + 232, v9, v10);
    uint64_t result = sub_2225E563C(v6);
    if (!*(void *)result)
    {
      uint64_t v7 = (uint64_t *)sub_2225C26A4(8);
      uint64_t v8 = sub_2225D3A34(v7);
      *uint64_t v7 = sub_2225CED2C(v6);
      sub_2225F2F60(v6, &v8);
      sub_2225CC7B8(a1 + 120, &v8);
      return sub_2225F85AC(a1, v9, v10);
    }
  }
  return result;
}

void *sub_2225F8658(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  if ((unint64_t)sub_2225C3D04((uint64_t)&v20) >= 2)
  {
    uint64_t v6 = v20;
    uint64_t v7 = v21;
    uint64_t v8 = (const void *)sub_2225CEBAC(v20, v21);
    if (sub_2225D1680(v6, v7, v8, v9))
    {
      int v10 = sub_2225F87FC(&v20);
      if (sub_2225CE760(v10))
      {
        uint64_t v11 = sub_2225C3D04((uint64_t)&v20);
        uint64_t v20 = sub_2225CE76C(&v20, 0, v11 - 1);
        uint64_t v21 = v12;
      }
    }
  }
  ++*(_DWORD *)(a1 + 716);
  uint64_t v13 = sub_2225F2F58(a1 + 232, v20, v21);
  if (*(void *)sub_2225E563C(v13))
  {
    if (*(void *)sub_2225E563C(v13) == -1) {
      return 0;
    }
    else {
      return *(void **)sub_2225E563C(v13);
    }
  }
  else
  {
    ++*(_DWORD *)(a1 + 724);
    v18.__r_.__value_.__r.__words[0] = -1;
    sub_2225F2F60(v13, &v18);
    int v15 = (char *)sub_2225CED2C(v13);
    sub_2225F880C((uint64_t)&v18);
    if (sub_2225F8810(a1, v15, (uint64_t)&v18, 0, 0))
    {
      if ((a4 & 1) == 0) {
        sub_2225F8928((void *)(a1 + 232), v20, v21);
      }
      int v14 = 0;
    }
    else
    {
      int v14 = (void *)sub_2225F8988(a1 + 72, (uint64_t)&v19);
      uint64_t v17 = v14;
      sub_2225F2F60(v13, &v17);
      if (!sub_2225C3C70((uint64_t)v14)) {
        *int v14 = v15;
      }
    }
    j_std::string::~string(&v18);
  }
  return v14;
}

uint64_t sub_2225F87FC(void *a1)
{
  return *(char *)(a1[1] + *a1 - 1);
}

uint64_t sub_2225F8810(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_2225CBBF8(a1 + 24, (uint64_t)a2))
  {
    uint64_t v11 = sub_2225CBA80(a1 + 736, v10);
    uint64_t v12 = sub_2225C3C70(a1 + 8);
    return sub_2225FB43C(a2, a3, a4, a5, v11, v12);
  }
  else
  {
    sub_2225C3D00((int)v19, a2);
    sub_2225D02D0(v20, v19[0], v19[1]);
    sub_2225F902C(a1, v20);
    int v14 = (unsigned char *)sub_2225D02D4((uint64_t)v20);
    uint64_t v16 = sub_2225CBA80(a1 + 736, v15);
    uint64_t v17 = sub_2225C3C70(a1 + 8);
    uint64_t v18 = sub_2225FB43C(v14, a3, a4, a5, v16, v17);
    sub_2225CA520(v20);
    return v18;
  }
}

BOOL sub_2225F8928(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2225F9F50(a1, a2, a3);
  uint64_t v6 = sub_2225E41D8((uint64_t)a1);
  BOOL v4 = sub_2225DE638(&v7, &v6);
  if (!v4) {
    sub_2225F9FC0((uint64_t)a1, v7);
  }
  return !v4;
}

uint64_t sub_2225F8988(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = sub_2225FA0E8(a2);
  nullsub_1(v10, v4);
  v11[0] = sub_2225FA014(a1, a2, (uint64_t)&unk_2226D00DC, (uint64_t)&v10, (uint64_t)&v9);
  v11[1] = v5;
  uint64_t v6 = sub_2225E2AD4((uint64_t)v11);
  return nullsub_1(v6, v7) + 16;
}

uint64_t sub_2225F89F4(_DWORD *a1, const void *a2, size_t a3, int a4, char a5)
{
  ++a1[180];
  uint64_t v10 = a1 + 98;
  uint64_t v11 = sub_2225F2F58((uint64_t)(a1 + 98), (uint64_t)a2, a3);
  if (*(void *)sub_2225E563C(v11))
  {
    if (*(void *)sub_2225E563C(v11) != -1) {
      return *(void *)sub_2225E563C(v11);
    }
    return 0;
  }
  ++a1[182];
  v23.__r_.__value_.__r.__words[0] = -1;
  sub_2225F2F60(v11, &v23);
  uint64_t v13 = (char *)sub_2225CED2C(v11);
  int v14 = sub_2225F8C5C((uint64_t)a1, (uint64_t)a2, a3, a5);
  if (!v14)
  {
    if ((a5 & 1) == 0) {
      sub_2225F8928(v10, (uint64_t)a2, a3);
    }
    return 0;
  }
  uint64_t v15 = v14;
  sub_2225D8FA4((uint64_t)v28);
  sub_2225F880C((uint64_t)&v23);
  if (a4) {
    uint64_t v16 = v28;
  }
  else {
    uint64_t v16 = 0;
  }
  if (sub_2225F8810((uint64_t)a1, v13, (uint64_t)&v23, 1, (uint64_t)v16))
  {
    if ((a5 & 1) == 0) {
      sub_2225F8928(v10, (uint64_t)a2, a3);
    }
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = sub_2225F8CFC((uint64_t)(a1 + 24), (uint64_t)&v25);
    uint64_t v22 = v12;
    sub_2225F2F60(v11, &v22);
    sub_2225CCBF8(v21, &v23);
    if (sub_2225D1680(v21[0], v21[1], a2, a3))
    {
      sub_2225CCBF8(v20, &v23);
      uint64_t v17 = sub_2225F2F58((uint64_t)v10, v20[0], v20[1]);
      if (!*(void *)sub_2225E563C(v17))
      {
        uint64_t v22 = v12;
        sub_2225F2F60(v17, &v22);
      }
      uint64_t v13 = (char *)sub_2225CED2C(v17);
    }
    if (sub_2225F8D68(v12))
    {
      if (v15 != *(void **)(v12 + 24) && v27) {
        *(void *)(v12 + 24) = v15;
      }
      *(void *)uint64_t v12 = v13;
    }
    else
    {
      *(void *)uint64_t v12 = v13;
      *(_OWORD *)(v12 + 8) = v24;
      *(void *)(v12 + 24) = v15;
      int v18 = a1[178];
      a1[178] = v18 + 1;
      *(_DWORD *)(v12 + 32) = v18;
      *(_OWORD *)(v12 + 40) = v25;
      *(_WORD *)(v12 + 56) = v26;
      sub_2225F8D70(v12 + 64, (uint64_t)v28);
      *(unsigned char *)(v12 + 58) = 1;
    }
  }
  j_std::string::~string(&v23);
  sub_2225F8DBC(v28);
  return v12;
}

void *sub_2225F8C5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  if (sub_2225CF1E0((uint64_t)&v12)) {
    return 0;
  }
  uint64_t v6 = sub_2225C3D04((uint64_t)&v12);
  int v7 = sub_2225CC124(&v12, v6 - 1);
  if (sub_2225CE760(v7)) {
    return 0;
  }
  *(void *)&long long v11 = sub_2225CF24C(v12, v13);
  *((void *)&v11 + 1) = v9;
  if (sub_2225CF1E0((uint64_t)&v11))
  {
    sub_2225C3D00((int)&v10, ".");
    long long v11 = v10;
  }
  return sub_2225F8658(a1, v11, *((uint64_t *)&v11 + 1), a4);
}

uint64_t sub_2225F8CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = sub_2225FA0E8(a2);
  nullsub_1(v10, v4);
  v11[0] = sub_2225FA744(a1, a2, (uint64_t)&unk_2226D00DC, (uint64_t)&v10, (uint64_t)&v9);
  v11[1] = v5;
  uint64_t v6 = sub_2225E2AD4((uint64_t)v11);
  return nullsub_1(v6, v7) + 16;
}

uint64_t sub_2225F8D68(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 58);
}

uint64_t sub_2225F8D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CE10C(a2, a2);
  sub_2225F8FBC(a1, v4);
  j_j_nullsub_1(a2);
  j_nullsub_1(a1, v5);
  return a1;
}

uint64_t sub_2225F8DC0(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  ++a1[180];
  uint64_t v10 = sub_2225F2F58((uint64_t)(a1 + 98), a2, a3);
  if (!*(void *)sub_2225E563C(v10) || *(void *)sub_2225E563C(v10) == -1)
  {
    ++a1[182];
    v20.__r_.__value_.__r.__words[0] = -1;
    sub_2225F2F60(v10, &v20);
    sub_2225F85AC((uint64_t)a1, a2, a3);
    uint64_t v26 = 0;
    uint64_t v12 = sub_2225F8C5C((uint64_t)a1, a2, a3, 1);
    sub_2225F880C((uint64_t)&v20);
    uint64_t v13 = (char *)sub_2225CED2C(v10);
    if (sub_2225F8810((uint64_t)a1, v13, (uint64_t)&v20, 1, 0)) {
      goto LABEL_5;
    }
    uint64_t v21 = a4;
    uint64_t v22 = a5;
    uint64_t v26 = sub_2225F8CFC((uint64_t)(a1 + 24), (uint64_t)&v23);
    sub_2225F2F60(v10, &v26);
    if (sub_2225DF1DC(v26 + 64, v16)) {
      sub_2225F8FAC(v26);
    }
    if (sub_2225F8D68(v26)) {
      goto LABEL_11;
    }
    uint64_t v15 = v26;
    *(_OWORD *)(v26 + 40) = v23;
    *(unsigned char *)(v15 + 56) = v24;
    *(unsigned char *)(v15 + 57) = v25;
    if (!v15)
    {
LABEL_5:
      uint64_t v14 = sub_2225C26A4(72);
      uint64_t v26 = sub_2225F8FB8(v14);
      sub_2225CC7B8((uint64_t)(a1 + 44), &v26);
      sub_2225F2F60(v10, &v26);
      uint64_t v15 = v26;
    }
    *(void *)uint64_t v15 = v13;
    uint64_t v17 = v26;
    *(void *)(v26 + 8) = a4;
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = v12;
    int v18 = a1[178];
    a1[178] = v18 + 1;
    *(_DWORD *)(v17 + 32) = v18;
    sub_2225F8FBC(v17 + 64, 0);
LABEL_11:
    uint64_t v11 = v26;
    j_std::string::~string(&v20);
    return v11;
  }
  return *(void *)sub_2225E563C(v10);
}

void *sub_2225F8FAC(uint64_t a1)
{
  return sub_2225F8FBC(a1 + 64, 0);
}

void *sub_2225F8FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2225F97FC(v8, v4);
  }
  return result;
}

uint64_t sub_2225F902C(uint64_t a1, const void **a2)
{
  uint64_t v4 = sub_2225CC180((uint64_t)a2);
  uint64_t v5 = sub_2225C5664((uint64_t)a2);
  sub_2225C3D0C(v15, v4, v5);
  uint64_t v6 = a1 + 24;
  uint64_t result = sub_2225CBBF8(v6, v7);
  if ((result & 1) == 0)
  {
    sub_2225CBDF0((uint64_t)v14, (uint64_t)v15);
    uint64_t result = sub_2225CF850(v14);
    if ((result & 1) == 0)
    {
      sub_2225CCBF8(v13, v6);
      sub_2225D02D0(v14, v13[0], v13[1]);
      sub_2225CBDF0((uint64_t)v12, (uint64_t)v15);
      sub_2225CBDE8((uint64_t)v11, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v10, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v9, &byte_2226D1615);
      sub_2225CEF30((const void **)v14, v12, v11, v10, v9);
      sub_2225D0648(a2, (uint64_t)v14);
      return sub_2225CA520(v14);
    }
  }
  return result;
}

uint64_t sub_2225F9128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  sub_2225D8FA4((uint64_t)v33);
  sub_2225CDDC0(&v32);
  uint64_t v10 = sub_2225C3D04(a2);
  if (a4) {
    uint64_t v11 = -1;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = (unsigned char *)sub_2225C3C70(a2);
  if (sub_2225DF1DC(a2 + 64, v13))
  {
    uint64_t v15 = sub_2225CBA80(a2 + 64, v14);
    sub_2225CBDE8((uint64_t)&v31, v12);
    *(void *)&v32.__val_ = (*(uint64_t (**)(uint64_t, std::string *, unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)v15 + 24))(v15, &v31, v33, v11, 1, a4);
    v32.__cat_ = v16;
    if (a3)
    {
      std::error_code::message(&v31, &v32);
      sub_2225CCDE4(a3, (uint64_t)&v31);
      std::string::~string(&v31);
    }
    if (a5) {
      sub_2225F8FAC(a2);
    }
LABEL_13:
    uint64_t v20 = sub_2225CE10C((uint64_t)v33, (uint64_t)v16);
    goto LABEL_18;
  }
  if (sub_2225CBBF8(a1 + 24, v14))
  {
    uint64_t v17 = sub_2225C3C70(a1 + 8);
    sub_2225CBDE8((uint64_t)&v31, v12);
    *(void *)&v32.__val_ = sub_222613C28(v17, (uint64_t)&v31, (uint64_t)v33, v11, 1, a4);
    v32.__cat_ = v18;
    BOOL v19 = sub_2225CDBBC(&v32);
    if (a3 && v19)
    {
      std::error_code::message(&v31, &v32);
      sub_2225CCDE4(a3, (uint64_t)&v31);
      std::string::~string(&v31);
    }
    goto LABEL_13;
  }
  uint64_t v21 = (char *)sub_2225C3C70(a2);
  sub_2225C3D00((int)v30, v21);
  sub_2225D02D0(&v31, v30[0], v30[1]);
  sub_2225F902C(a1, (const void **)&v31.__r_.__value_.__l.__data_);
  uint64_t v22 = sub_2225C3C70(a1 + 8);
  v28[0] = sub_2225CA4D0((uint64_t)&v31);
  v28[1] = v23;
  sub_2225CBDF0((uint64_t)&v29, (uint64_t)v28);
  *(void *)&v32.__val_ = sub_222613C28(v22, (uint64_t)&v29, (uint64_t)v33, v11, 1, a4);
  v32.__cat_ = v24;
  BOOL v25 = sub_2225CDBBC(&v32);
  if (a3 && v25)
  {
    std::error_code::message(&v29, &v32);
    sub_2225CCDE4(a3, (uint64_t)&v29);
    std::string::~string(&v29);
  }
  uint64_t v20 = sub_2225CE10C((uint64_t)v33, v26);
  sub_2225CA520(&v31);
LABEL_18:
  sub_2225CDC18(v33);
  return v20;
}

BOOL sub_2225F938C(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 88) & 1) == 0;
}

uint64_t sub_2225F93A0(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v14 = a2;
  uint64_t v3 = a1 + 552;
  sub_2225F94E4(a1 + 552, &v14, (uint64_t)v13);
  sub_2225F9588(v3, (uint64_t)&v12);
  sub_2225F8068(__s, &v12);
  if (sub_2225F9558(v13, (uint64_t)__s))
  {
    return *(_OWORD *)(sub_2225C3C70((uint64_t)v13) + 8);
  }
  else
  {
    uint64_t v4 = (char *)sub_2225C3C70(v14);
    sub_2225C3D00((int)&v15, v4);
    uint64_t v5 = (const char *)sub_2225C3C70(v14);
    if (realpath_DARWIN_EXTSN(v5, __s))
    {
      unsigned int v6 = strlen(__s);
      uint64_t v7 = (uint64_t *)(a1 + 576);
      size_t v8 = v6;
      char v9 = (void *)sub_2225CC520(v7, v6, 1uLL);
      memcpy(v9, __s, v8);
      sub_2225C3D0C(&v12, v9, v8);
      long long v15 = v12;
    }
    sub_2225F96A4((uint64_t)&v14, (uint64_t)&v15, (uint64_t)&v12);
    sub_2225F95E4(v3, (uint64_t)&v12, (uint64_t)v11);
  }
  return v15;
}

uint64_t sub_2225F94E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_2225FAF88(a1, a2, &v8)) {
    return sub_2225F9588(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_2225F9A20(a1);
  return sub_2225FAFC4(a3, v5, v6, 1);
}

BOOL sub_2225F9558(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  return v2 != sub_2225C3C70(a2);
}

uint64_t sub_2225F9588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2225F9A20(a1);
  uint64_t v5 = sub_2225F9A20(a1);

  return sub_2225FAFC4(a2, v4, v5, 1);
}

uint64_t sub_2225F95E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v14 = 0;
  if (sub_2225FAF88(a1, (uint64_t *)a2, &v14))
  {
    uint64_t v6 = v14;
    uint64_t v7 = sub_2225F9A20(a1);
    sub_2225FAFC4(v13, v6, v7, 1);
    char v12 = 0;
  }
  else
  {
    sub_2225FB1C4(a1, (uint64_t *)a2, (__n128 *)(a2 + 8), v14);
    char v9 = v8;
    uint64_t v14 = v8;
    uint64_t v10 = sub_2225F9A20(a1);
    sub_2225FAFC4(v13, v9, v10, 1);
    char v12 = 1;
  }
  return sub_2225F7FE8((uint64_t)v13, (uint64_t)&v12, a3);
}

uint64_t sub_2225F96A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2225FB1AC(a3, a1, a2);
}

std::string *sub_2225F96B4(std::string *a1, const std::string *a2)
{
  uint64_t v4 = std::string::basic_string(a1, a2);
  std::string::basic_string(v4 + 1, a2 + 1);
  return a1;
}

uint64_t sub_2225F96EC(uint64_t a1)
{
  return a1;
}

void sub_2225F9718(std::string *a1)
{
  std::string::~string(a1 + 1);

  std::string::~string(a1);
}

uint64_t sub_2225F9754(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD04(a1);
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  j_nullsub_1(v2 + 40, v3);
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

uint64_t sub_2225F978C(uint64_t a1)
{
  *(_WORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 58) = 0;
  sub_2225D8FA4(a1 + 64);
  return a1;
}

uint64_t sub_2225F97D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225F97FC(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 8))(a2);
  }
  return result;
}

void *sub_2225F982C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  a1[1] = v3;
  if (v3) {
    sub_2225F9868();
  }
  return a1;
}

unint64_t sub_2225F986C(uint64_t a1)
{
  return sub_2225F9874((atomic_ullong *)(a1 + 8));
}

unint64_t sub_2225F9874(atomic_ullong *a1)
{
  return atomic_fetch_add_explicit(a1, 1uLL, memory_order_relaxed) + 1;
}

uint64_t sub_2225F9884(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225F98B0(uint64_t a1, int a2)
{
  uint64_t v3 = sub_2225D7CA0(a1, a2, 16);
  sub_2225E0EC4((void *)(v3 + 24));
  return a1;
}

uint64_t sub_2225F98E4(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_2225F9918(v4, v2);
  return a1;
}

uint64_t sub_2225F9918(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_2225F9964(a1, a2);
  if (result)
  {
    return sub_2225F99B4(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

BOOL sub_2225F9964(uint64_t a1, unsigned int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  if (a2) {
    uint64_t v4 = sub_2225C26A4(24 * a2);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4;
  return a2 != 0;
}

uint64_t sub_2225F99B4(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  uint64_t v2 = sub_2225F9A1C();
  uint64_t v3 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_2225F9A20(a1);
  while (v3 != (void *)result)
  {
    *uint64_t v3 = v2;
    v3 += 3;
  }
  return result;
}

uint64_t sub_2225F9A20(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 24 * sub_2225F5148(a1);
}

uint64_t sub_2225F9A58()
{
  return -4;
}

uint64_t sub_2225F9A60(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    sub_2225F9A90(v2);
  }
  return a1;
}

void sub_2225F9A90(std::__shared_weak_count *a1)
{
  if (sub_2225F9AD8((atomic_ullong *)a1))
  {
    std::__shared_weak_count::__release_weak(a1);
  }
}

BOOL sub_2225F9AD8(atomic_ullong *a1)
{
  unint64_t v2 = sub_2225F9B3C(a1 + 1);
  if (v2 == -1) {
    (*(void (**)(atomic_ullong *))(*a1 + 16))(a1);
  }
  return v2 == -1;
}

unint64_t sub_2225F9B3C(atomic_ullong *a1)
{
  return atomic_fetch_add(a1, 0xFFFFFFFFFFFFFFFFLL) - 1;
}

uint64_t sub_2225F9B54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_2225F9B88(a1, v3);
  return a1;
}

uint64_t sub_2225F9B88(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_2225F9B88(result, *a2);
    sub_2225F9B88(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = j_nullsub_1(a2 + 4, v6);
    sub_2225E1E40(v5, v7);
    return sub_2225F9C04(v5, a2, 1);
  }
  return result;
}

uint64_t sub_2225F9C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 56 * a3, 8);
}

uint64_t sub_2225F9C24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_2225F9C58(a1, v3);
  return a1;
}

uint64_t sub_2225F9C58(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_2225F9C58(result, *a2);
    sub_2225F9C58(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = j_nullsub_1(a2 + 4, v6);
    sub_2225F9CD4(v5, v7);
    return sub_2225F9CDC(v5, (uint64_t)a2, 1);
  }
  return result;
}

uint64_t sub_2225F9CD4(uint64_t a1, uint64_t a2)
{
  return sub_2225F9CE0(a2);
}

uint64_t sub_2225F9CE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_2225F9D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 120 * a3, 8);
}

uint64_t sub_2225F9D28(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_2225F9DBC(v5, a1 + 24);
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  sub_2225E1434(a1 + 24);
  return a1;
}

uint64_t sub_2225F9DBC(unsigned int *a1, uint64_t a2)
{
  sub_2225C3B40(a1);

  return nullsub_1(a2, a1);
}

void **sub_2225F9E00(void **a1)
{
  return a1;
}

uint64_t sub_2225F9E30(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_2225F9A1C();
    uint64_t v4 = sub_2225F9EB8();
    uint64_t v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_2225F9A20(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_2225D085C(*v5, v4);
        }
        v5 += 3;
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t sub_2225F9EBC()
{
  return -8;
}

uint64_t *sub_2225F9EC8(uint64_t *a1, uint64_t *a2)
{
  sub_2225C6448(a1, a2);

  return sub_2225C6448(a1 + 1, a2 + 1);
}

void *sub_2225F9F08(void *result, void *a2)
{
  void *result = *a2;
  result[1] = a2[1];
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t sub_2225F9F20(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  }
  return result;
}

uint64_t sub_2225F9F50(void *a1, uint64_t a2, uint64_t a3)
{
  int v4 = sub_2225D7EEC((uint64_t)a1, a2, a3);
  if (v4 == -1)
  {
    return sub_2225E41D8((uint64_t)a1);
  }
  else
  {
    sub_2225E579C(&v6, *a1 + 8 * v4, 1);
    return v6;
  }
}

uint64_t sub_2225F9FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v3 = (unsigned int *)sub_2225E4210((uint64_t)&v5);
  sub_2225FA010(a1, v3);
  return sub_2225F9DBC(v3, a1 + 24);
}

uint64_t sub_2225FA014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = sub_2225FA114(a1, &v19, a2);
  uint64_t v10 = *v9;
  char v18 = 0;
  if (!v10)
  {
    uint64_t v11 = v9;
    sub_2225FA1D4(a1, a3, a4, a5, (uint64_t)v17);
    char v12 = v19;
    uint64_t v14 = (void *)sub_2225CBA80((uint64_t)v17, v13);
    sub_2225E3140(a1, (uint64_t)v12, v11, v14);
    uint64_t v10 = sub_2225CE10C((uint64_t)v17, v15);
    char v18 = 1;
    sub_2225FA288(v17);
  }
  sub_2225C64B8(v17, v10);
  sub_2225D7B28(&v20, v17, &v18);
  return v20;
}

uint64_t sub_2225FA0E8(uint64_t a1)
{
  sub_2225FA73C(&v2, a1);
  return v2;
}

uint64_t *sub_2225FA114(uint64_t a1, uint64_t **a2, uint64_t a3)
{
  uint64_t v6 = sub_2225E1E1C(a1, (uint64_t)a2);
  uint64_t v8 = sub_2225E31D0(a1, v7);
  if (v6)
  {
    uint64_t v10 = (uint64_t *)v8;
    do
    {
      while (1)
      {
        uint64_t v11 = (uint64_t *)v6;
        uint64_t v12 = sub_2225D2650(a1, v9);
        uint64_t v13 = v6 + 32;
        if (!sub_2225FA28C(v12, a3, v13)) {
          break;
        }
        uint64_t v6 = *v11;
        uint64_t v10 = v11;
        if (!*v11) {
          goto LABEL_10;
        }
      }
      uint64_t v14 = sub_2225D2650(a1, v9);
      if (!sub_2225FA2D4(v14, v13, a3)) {
        break;
      }
      uint64_t v10 = v11 + 1;
      uint64_t v6 = v11[1];
    }
    while (v6);
  }
  else
  {
    uint64_t v11 = (uint64_t *)sub_2225E1E5C(a1, v9);
    uint64_t v10 = v11;
  }
LABEL_10:
  *a2 = v11;
  return v10;
}

uint64_t sub_2225FA1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = sub_2225E1E38(a1, a2);
  uint64_t v10 = sub_2225FA540(v9, 1);
  sub_2225E31D8((uint64_t)&v18, v9, 0);
  uint64_t v11 = sub_2225E31DC(a5, v10);
  uint64_t v13 = sub_2225CBA80(v11, v12);
  uint64_t v15 = j_nullsub_1(v13 + 32, v14);
  sub_2225FA544(v9, v15, a2, a3, a4);
  uint64_t result = sub_2225E31E4(a5, v16);
  *(unsigned char *)(result + 8) = 1;
  return result;
}

uint64_t sub_2225FA28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = nullsub_1(a3, a2);

  return sub_2225FA31C(a1, a2, v5);
}

uint64_t sub_2225FA2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = nullsub_1(a2, a2);

  return sub_2225FA31C(a1, v5, a3);
}

uint64_t sub_2225FA31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225FA328(a2, a3);
}

uint64_t sub_2225FA328(uint64_t a1, uint64_t a2)
{
  v7[0] = sub_2225FA3A4(a1, a1 + 8);
  v7[1] = v3;
  v6[0] = sub_2225FA3A4(a2, a2 + 8);
  v6[1] = v4;
  return sub_2225FA378((uint64_t)v7, (uint64_t)v6);
}

uint64_t sub_2225FA378(uint64_t a1, uint64_t a2)
{
  return sub_2225FA3D4((uint64_t)&v3, a1, a2);
}

uint64_t sub_2225FA3A4(uint64_t a1, uint64_t a2)
{
  sub_2225FA4FC(&v3, a1, a2);
  return v3;
}

uint64_t sub_2225FA3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *(void *)sub_2225CC180(a2);
  if (v5 < *(void *)sub_2225CC180(a3)) {
    return 1;
  }
  unint64_t v7 = *(void *)sub_2225CC180(a3);
  if (v7 >= *(void *)sub_2225CC180(a2)) {
    return sub_2225FA468((uint64_t)&v8, a2, a3);
  }
  else {
    return 0;
  }
}

uint64_t sub_2225FA468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *(void *)sub_2225D2BAC(a2);
  if (v5 < *(void *)sub_2225D2BAC(a3)) {
    return 1;
  }
  unint64_t v7 = *(void *)sub_2225D2BAC(a3);
  if (v7 >= *(void *)sub_2225D2BAC(a2)) {
    return sub_2225C5C08();
  }
  else {
    return 0;
  }
}

void *sub_2225FA508(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = sub_2225C6954(a1, a2);
  sub_2225C6954(v5 + 1, a3);
  return a1;
}

uint64_t sub_2225FA548(uint64_t a1, unint64_t a2)
{
  if (sub_2225FA594(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(56 * a2, 8);
}

uint64_t sub_2225FA598()
{
  return 0x492492492492492;
}

uint64_t sub_2225FA5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_2225FA5B8(a2, *a4);
}

uint64_t sub_2225FA5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  return sub_2225FA5E4(a1, &v4, &v3);
}

uint64_t sub_2225FA5E8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)sub_2225CC180(a2);
  sub_2225D3A34((void *)(a1 + 16));
  return a1;
}

uint64_t sub_2225FA624(uint64_t a1)
{
  return a1;
}

void *sub_2225FA650(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = sub_2225E3330(a1, v7);
    return (void *)sub_2225FA6C0(v8, v4);
  }
  return result;
}

uint64_t sub_2225FA6C0(uint64_t result, uint64_t a2)
{
  char v3 = (uint64_t *)result;
  if (*(unsigned char *)(result + 8))
  {
    uint64_t v4 = *(void *)result;
    uint64_t v5 = j_nullsub_1(a2 + 32, a2);
    uint64_t result = sub_2225E1E40(v4, v5);
  }
  if (a2)
  {
    uint64_t v6 = *v3;
    return sub_2225F9C04(v6, a2, 1);
  }
  return result;
}

uint64_t sub_2225FA744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_2225FA114(a1, &v19, a2);
  uint64_t v10 = *v9;
  char v18 = 0;
  if (!v10)
  {
    uint64_t v11 = v9;
    sub_2225FA818(a1, a3, a4, a5, (uint64_t)v17);
    uint64_t v12 = v19;
    uint64_t v14 = (void *)sub_2225CBA80((uint64_t)v17, v13);
    sub_2225E3140(a1, (uint64_t)v12, v11, v14);
    uint64_t v10 = sub_2225CE10C((uint64_t)v17, v15);
    char v18 = 1;
    sub_2225FA8CC(v17);
  }
  sub_2225C64B8(v17, v10);
  sub_2225D7B28(&v20, v17, &v18);
  return v20;
}

uint64_t sub_2225FA818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = sub_2225E1E38(a1, a2);
  uint64_t v10 = sub_2225FA8D0(v9, 1);
  sub_2225E31D8((uint64_t)&v18, v9, 0);
  uint64_t v11 = sub_2225E31DC(a5, v10);
  uint64_t v13 = sub_2225CBA80(v11, v12);
  uint64_t v15 = j_nullsub_1(v13 + 32, v14);
  sub_2225FA8D4(v9, v15, a2, a3, a4);
  uint64_t result = sub_2225E31E4(a5, v16);
  *(unsigned char *)(result + 8) = 1;
  return result;
}

uint64_t sub_2225FA8D8(uint64_t a1, unint64_t a2)
{
  if (sub_2225FA924() < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(120 * a2, 8);
}

uint64_t sub_2225FA928()
{
  return 0x222222222222222;
}

uint64_t sub_2225FA934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_2225FA940(a2, *a4);
}

uint64_t sub_2225FA940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  return sub_2225FA96C(a1, &v4, &v3);
}

_OWORD *sub_2225FA970(_OWORD *a1, uint64_t a2)
{
  *a1 = *(_OWORD *)sub_2225CC180(a2);
  sub_2225F8FB8((uint64_t)(a1 + 1));
  return a1;
}

uint64_t sub_2225FA9AC(uint64_t a1)
{
  return a1;
}

void *sub_2225FA9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = sub_2225E3330(a1, v7);
    return (void *)sub_2225FAA48(v8, v4);
  }
  return result;
}

uint64_t sub_2225FAA48(uint64_t result, uint64_t a2)
{
  char v3 = (uint64_t *)result;
  if (*(unsigned char *)(result + 8))
  {
    uint64_t v4 = *(void *)result;
    uint64_t v5 = j_nullsub_1(a2 + 32, a2);
    uint64_t result = sub_2225F9CD4(v4, v5);
  }
  if (a2)
  {
    uint64_t v6 = *v3;
    return sub_2225F9CDC(v6, a2, 1);
  }
  return result;
}

uint64_t sub_2225FAAC4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 88) & 1) == 0)
  {
    char v3 = (std::string *)nullsub_1(a1, a2);
    j_std::string::~string(v3);
  }
  return a1;
}

uint64_t sub_2225FAAFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = (uint64_t *)a2;
  if (!*(void *)a2) {
    goto LABEL_4;
  }
  if (!*(void *)(a2 + 8))
  {
    uint64_t v5 = (uint64_t *)a2;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2225FAF10(a2);
  uint64_t v4 = *v5;
  if (!*v5)
  {
LABEL_4:
    uint64_t v4 = v5[1];
    if (!v4)
    {
      int v6 = 1;
      goto LABEL_8;
    }
  }
LABEL_7:
  int v6 = 0;
  *(void *)(v4 + 16) = v5[2];
LABEL_8:
  uint64_t result = sub_2225E34A0((uint64_t)v5);
  if (result)
  {
    *(void *)void v5[2] = v4;
    if (v5 == a1)
    {
      uint64_t v9 = 0;
      a1 = (uint64_t *)v4;
      goto LABEL_13;
    }
    uint64_t result = sub_2225C5B40((uint64_t)v5);
    uint64_t v8 = (uint64_t *)(result + 8);
  }
  else
  {
    uint64_t result = sub_2225C5B40((uint64_t)v5);
    *(void *)(result + 8) = v4;
    uint64_t v8 = (uint64_t *)v5[2];
  }
  uint64_t v9 = *v8;
LABEL_13:
  int v10 = *((unsigned __int8 *)v5 + 24);
  if (v5 != (uint64_t *)a2)
  {
    void v5[2] = *(void *)(a2 + 16);
    if (sub_2225E34A0(a2)) {
      uint64_t v11 = (uint64_t **)v5[2];
    }
    else {
      uint64_t v11 = (uint64_t **)(sub_2225C5B40((uint64_t)v5) + 8);
    }
    uint64_t *v11 = v5;
    uint64_t v12 = *(void *)a2;
    *uint64_t v5 = *(void *)a2;
    sub_2225E35B4(v12, (uint64_t)v5);
    uint64_t result = *(void *)(a2 + 8);
    v5[1] = result;
    if (result) {
      uint64_t result = sub_2225E35B4(result, (uint64_t)v5);
    }
    *((unsigned char *)v5 + 24) = *(unsigned char *)(a2 + 24);
    if (a1 == (uint64_t *)a2) {
      a1 = v5;
    }
  }
  if (!v10 || !a1) {
    return result;
  }
  if (!v6)
  {
    *(unsigned char *)(v4 + 24) = 1;
    return result;
  }
  while (sub_2225E34A0(v9))
  {
    if (!*(unsigned char *)(v9 + 24))
    {
      *(unsigned char *)(v9 + 24) = 1;
      *(unsigned char *)(sub_2225C5B40(v9) + 24) = 0;
      uint64_t v13 = (uint64_t *)sub_2225C5B40(v9);
      sub_2225E3534(v13);
      uint64_t v14 = *(uint64_t **)(v9 + 8);
      if (a1 == v14) {
        a1 = (uint64_t *)v9;
      }
      uint64_t v9 = *v14;
    }
    uint64_t v15 = *(void *)v9;
    if (*(void *)v9 && !*(unsigned char *)(v15 + 24)) {
      goto LABEL_65;
    }
    uint64_t v16 = *(void *)(v9 + 8);
    if (v16 && !*(unsigned char *)(v16 + 24))
    {
      if (!v15 || *(unsigned char *)(v15 + 24))
      {
        *(unsigned char *)(v16 + 24) = 1;
        *(unsigned char *)(v9 + 24) = 0;
        sub_2225E34B4(v9);
        uint64_t v9 = sub_2225C5B40(v9);
      }
LABEL_65:
      *(unsigned char *)(v9 + 24) = *(unsigned char *)(sub_2225C5B40(v9) + 24);
      *(unsigned char *)(sub_2225C5B40(v9) + 24) = 1;
      *(unsigned char *)(*(void *)v9 + 24) = 1;
      uint64_t v23 = (uint64_t *)sub_2225C5B40(v9);
      return sub_2225E3534(v23);
    }
    *(unsigned char *)(v9 + 24) = 0;
    uint64_t result = sub_2225C5B40(v9);
    uint64_t v17 = result;
    if (!*(unsigned char *)(result + 24) || (uint64_t *)result == a1)
    {
      *(unsigned char *)(result + 24) = 1;
      return result;
    }
LABEL_46:
    if (sub_2225E34A0(v17)) {
      uint64_t v21 = (uint64_t *)(sub_2225C5B40(v17) + 8);
    }
    else {
      uint64_t v21 = *(uint64_t **)(v17 + 16);
    }
    uint64_t v9 = *v21;
  }
  if (!*(unsigned char *)(v9 + 24))
  {
    *(unsigned char *)(v9 + 24) = 1;
    *(unsigned char *)(sub_2225C5B40(v9) + 24) = 0;
    uint64_t v18 = sub_2225C5B40(v9);
    sub_2225E34B4(v18);
    if (a1 == *(uint64_t **)v9) {
      a1 = (uint64_t *)v9;
    }
    uint64_t v9 = *(void *)(*(void *)v9 + 8);
  }
  uint64_t v19 = *(void *)v9;
  if (!*(void *)v9 || *(unsigned char *)(v19 + 24))
  {
    uint64_t v20 = *(void *)(v9 + 8);
    if (v20 && !*(unsigned char *)(v20 + 24)) {
      goto LABEL_57;
    }
    *(unsigned char *)(v9 + 24) = 0;
    uint64_t result = sub_2225C5B40(v9);
    if ((uint64_t *)result == a1) {
      goto LABEL_54;
    }
    uint64_t v17 = result;
    if (!*(unsigned char *)(result + 24))
    {
      a1 = (uint64_t *)result;
LABEL_54:
      *((unsigned char *)a1 + 24) = 1;
      return result;
    }
    goto LABEL_46;
  }
  uint64_t v20 = *(void *)(v9 + 8);
  if (!v20) {
    goto LABEL_58;
  }
LABEL_57:
  if (*(unsigned char *)(v20 + 24))
  {
LABEL_58:
    *(unsigned char *)(v19 + 24) = 1;
    *(unsigned char *)(v9 + 24) = 0;
    sub_2225E3534((uint64_t *)v9);
    uint64_t v9 = sub_2225C5B40(v9);
  }
  *(unsigned char *)(v9 + 24) = *(unsigned char *)(sub_2225C5B40(v9) + 24);
  *(unsigned char *)(sub_2225C5B40(v9) + 24) = 1;
  *(unsigned char *)(*(void *)(v9 + 8) + 24) = 1;
  uint64_t v22 = sub_2225C5B40(v9);

  return sub_2225E34B4(v22);
}

void *sub_2225FAE94(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    return sub_2225FAEFC(v2);
  }
  else
  {
    for (; !sub_2225E34A0(v1); uint64_t v1 = sub_2225C5B40(v1))
      ;
    return *(void **)(v1 + 16);
  }
}

void *sub_2225FAEFC(void *a1)
{
  do
  {
    uint64_t v1 = a1;
    a1 = (void *)*a1;
  }
  while (a1);
  return v1;
}

void *sub_2225FAF10(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    return sub_2225FAEFC(v2);
  }
  else
  {
    for (; !sub_2225E34A0(v1); uint64_t v1 = sub_2225C5B40(v1))
      ;
    return (void *)sub_2225C5B40(v1);
  }
}

uint64_t sub_2225FAF88(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_2225FAFC8(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_2225FAFC8(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    uint64_t v9 = sub_2225F9A1C();
    uint64_t v10 = sub_2225F9EB8();
    int v11 = v8 - 1;
    unsigned int v12 = sub_2225FB0F4(a2) & (v8 - 1);
    uint64_t v13 = (uint64_t *)(v6 + 24 * v12);
    if (sub_2225D085C(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v16 = a3;
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_2225D085C(*v13, v9))
      {
        if (sub_2225D085C(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        uint64_t v13 = (uint64_t *)(v6 + 24 * v12);
        ++v15;
        if (sub_2225D085C(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        uint64_t v13 = v14;
      }
LABEL_13:
      a3 = v16;
    }
  }
  else
  {
    uint64_t v13 = 0;
  }
  *a3 = v13;
  return result;
}

uint64_t sub_2225FB0F4(void *a1)
{
  return sub_2225D3364(*a1);
}

uint64_t sub_2225FB0FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_2225FB130((uint64_t **)a1);
  }
  return a1;
}

uint64_t sub_2225FB130(uint64_t **a1)
{
  uint64_t v2 = sub_2225F9A58();
  uint64_t result = sub_2225F9EBC();
  uint64_t v4 = *a1;
  if (*a1 != a1[1])
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D085C(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      uint64_t v4 = *a1 + 3;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

__n128 sub_2225FB1B0(uint64_t a1, void *a2, __n128 *a3)
{
  *(void *)a1 = *a2;
  __n128 result = *a3;
  *(__n128 *)(a1 + 8) = *a3;
  return result;
}

__n128 sub_2225FB1C4(uint64_t a1, uint64_t *a2, __n128 *a3, uint64_t *a4)
{
  uint64_t v6 = sub_2225FB200(a1, a2, a4);
  *uint64_t v6 = *a2;
  __n128 result = *a3;
  *(__n128 *)(v6 + 1) = *a3;
  return result;
}

uint64_t *sub_2225FB200(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2225FB2EC(a1, (2 * v6));
    sub_2225FAF88(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_2225FB2EC(a1, v7);
    sub_2225FAF88(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_2225F9A1C();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_2225FB2F0(uint64_t a1, int a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  uint64_t v4 = *(void **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_2225F9964(a1, *v5);
  if (v4)
  {
    sub_2225FB380(a1, (uint64_t)v4, (uint64_t)v4 + 24 * v3);
    j__free(v4);
  }
  else
  {
    sub_2225F99B4(a1);
  }
}

uint64_t sub_2225FB380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225F99B4(a1);
  uint64_t v6 = sub_2225F9A1C();
  uint64_t result = sub_2225F9EB8();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*(void *)a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*(void *)a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_2225FAF88(a1, (uint64_t *)a2, &v9);
          *(void *)uint64_t v9 = *(void *)a2;
          *(_OWORD *)(v9 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 24;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_2225FB43C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8 = a3;
  v23[12] = *MEMORY[0x263EF8340];
  if (a5)
  {
    int v11 = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a5 + 24))(a5, a1, a2, a3, a4, a6);
  }
  else if (a4 && (a3 & 1) != 0)
  {
    sub_2225D8FA4((uint64_t)v21);
    sub_2225CBDE8((uint64_t)v23, a1);
    v22[0] = (*(uint64_t (**)(uint64_t, void *, unsigned char *))(*(void *)a6 + 24))(a6, v23, v21);
    v22[1] = v12;
    if (sub_2225CDBBC(v22))
    {
      int v11 = 1;
    }
    else
    {
      uint64_t v16 = sub_2225CBA80((uint64_t)v21, v13);
      (*(void (**)(void *__return_ptr))(*(void *)v16 + 16))(v23);
      if (sub_2225F938C((uint64_t)v23))
      {
        uint64_t v18 = j_nullsub_1(v23, v17);
        sub_2225FB680(v18, a2);
        sub_2225F8D70(a4, (uint64_t)v21);
        int v11 = 0;
      }
      else
      {
        sub_2225F97D0(a4);
        int v11 = 1;
      }
      sub_2225F939C((uint64_t)v23, v19);
    }
    sub_2225F8DBC(v21);
  }
  else
  {
    sub_2225CBDE8((uint64_t)v22, a1);
    (*(void (**)(void *__return_ptr, uint64_t, void *))(*(void *)a6 + 16))(v23, a6, v22);
    if (sub_2225F938C((uint64_t)v23))
    {
      uint64_t v15 = j_nullsub_1(v23, v14);
      sub_2225FB680(v15, a2);
      int v11 = 0;
    }
    else
    {
      int v11 = 1;
    }
    sub_2225F939C((uint64_t)v23, v14);
  }
  if (v11 != 1)
  {
    if (*(unsigned __int8 *)(a2 + 56) == (v8 ^ 1)) {
      return 0;
    }
    if (a4) {
      sub_2225F97D0(a4);
    }
  }
  return 1;
}

uint64_t sub_2225FB680(uint64_t a1, uint64_t a2)
{
  v8[0] = sub_2225FB730(a1);
  v8[1] = v4;
  sub_2225CA51C(v8, (uint64_t)&v9);
  sub_2225CCDE4(a2, (uint64_t)&v9);
  std::string::~string(&v9);
  *(void *)(a2 + 24) = sub_2225FB75C(a1);
  v9.__r_.__value_.__r.__words[0] = sub_2225FB764(a1);
  v9.__r_.__value_.__l.__size_ = v5;
  *(void *)(a2 + 32) = sub_2225CFF9C(&v9);
  *(void *)(a2 + 40) = sub_2225FB770(a1);
  *(void *)(a2 + 48) = v6;
  *(unsigned char *)(a2 + 56) = sub_222613BF8(a1);
  uint64_t result = sub_2225FB77C(a1);
  *(unsigned char *)(a2 + 57) = result == 7;
  *(unsigned char *)(a2 + 58) = 0;
  *(unsigned char *)(a2 + 59) = *(unsigned char *)(a1 + 80);
  return result;
}

uint64_t sub_2225FB730(uint64_t a1)
{
  sub_2225CCBF8(&v2, a1);
  return v2;
}

uint64_t sub_2225FB75C(uint64_t a1)
{
  return *(void *)(a1 + 64);
}

uint64_t sub_2225FB764(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

uint64_t sub_2225FB770(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

uint64_t sub_2225FB77C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_2225FB784(uint64_t result)
{
  *(_DWORD *)uint64_t result = 6;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_2225FB7A8()
{
  *(void *)sub_2225C26A4(8) = 0;

  return sub_2225FB7D8();
}

uint64_t sub_2225FB7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2225F8374(a1, 0x2000);
  *(void *)(v6 + 160) = a3;
  *(void *)(v6 + 168) = a2;
  sub_2225FB850(v6, a2);
  sub_2225C3D00((int)v9, "import");
  int v7 = (unsigned int *)sub_2225F2E2C(a1, v9[0], v9[1]);
  sub_2225FC940(v7, 1);
  return a1;
}

uint64_t sub_2225FB850(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
  {
    sub_2225C3D00((int)v93, "and");
    sub_222606BB8(v93[0], v93[1], 28, a1);
    if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
    {
      sub_2225C3D00((int)v92, "and_eq");
      sub_222606BB8(v92[0], v92[1], 29, a1);
      if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
      {
        sub_2225C3D00((int)v91, "bitand");
        sub_222606BB8(v91[0], v91[1], 27, a1);
        if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
        {
          sub_2225C3D00((int)v90, "bitor");
          sub_222606BB8(v90[0], v90[1], 56, a1);
          if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
          {
            sub_2225C3D00((int)v89, "compl");
            sub_222606BB8(v89[0], v89[1], 39, a1);
            if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
            {
              sub_2225C3D00((int)v88, "not");
              sub_222606BB8(v88[0], v88[1], 40, a1);
              if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
              {
                sub_2225C3D00((int)v87, "not_eq");
                sub_222606BB8(v87[0], v87[1], 41, a1);
                if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
                {
                  sub_2225C3D00((int)v86, "or");
                  sub_222606BB8(v86[0], v86[1], 57, a1);
                  if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
                  {
                    sub_2225C3D00((int)v85, "or_eq");
                    sub_222606BB8(v85[0], v85[1], 58, a1);
                    if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
                    {
                      sub_2225C3D00((int)v84, "xor");
                      sub_222606BB8(v84[0], v84[1], 54, a1);
                      if ((*(unsigned char *)(a2 + 3) & 0x10) != 0)
                      {
                        sub_2225C3D00((int)v83, "xor_eq");
                        sub_222606BB8(v83[0], v83[1], 55, a1);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v82, "__is_literal_type");
    sub_222606A20(v82[0], v82[1], 209, 2u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v81, "global");
    sub_222606A20(v81[0], v81[1], 256, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v80, "local");
    sub_222606A20(v80[0], v80[1], 257, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v79, "constant");
    sub_222606A20(v79[0], v79[1], 258, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v78, "private");
    sub_222606A20(v78[0], v78[1], 259, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v77, "kernel");
    sub_222606A20(v77[0], v77[1], 260, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v76, "read_only");
    sub_222606A20(v76[0], v76[1], 261, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v75, "write_only");
    sub_222606A20(v75[0], v75[1], 262, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v74, "read_write");
    sub_222606A20(v74[0], v74[1], 263, 0x200u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v73, "__fp16");
    sub_222606A20(v73[0], v73[1], 269, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v72, "__alignof__");
    sub_222606A20(v72[0], v72[1], 166, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v71, "__asm");
    sub_222606A20(v71[0], v71[1], 122, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v70, "__asm__");
    sub_222606A20(v70[0], v70[1], 122, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v69, "__attribute__");
    sub_222606A20(v69[0], v69[1], 167, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v68, "__complex");
    sub_222606A20(v68[0], v68[1], 113, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v67, "__complex__");
    sub_222606A20(v67[0], v67[1], 113, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v66, "__const");
    sub_222606A20(v66[0], v66[1], 79, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v65, "__const__");
    sub_222606A20(v65[0], v65[1], 79, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v64, "__decltype");
    sub_222606A20(v64[0], v64[1], 157, 2u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v63, "__imag__");
    sub_222606A20(v63[0], v63[1], 173, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v62, "__inline");
    sub_222606A20(v62[0], v62[1], 91, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v61, "__inline__");
    sub_222606A20(v61[0], v61[1], 91, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v60, "__nullptr");
    sub_222606A20(v60[0], v60[1], 159, 2u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v59, "__real__");
    sub_222606A20(v59[0], v59[1], 176, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v58, "__restrict");
    sub_222606A20(v58[0], v58[1], 95, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v57, "__restrict__");
    sub_222606A20(v57[0], v57[1], 95, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v56, "__signed");
    sub_222606A20(v56[0], v56[1], 98, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v55, "__signed__");
    sub_222606A20(v55[0], v55[1], 98, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v54, "__typeof");
    sub_222606A20(v54[0], v54[1], 180, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v53, "__typeof__");
    sub_222606A20(v53[0], v53[1], 180, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v52, "__volatile");
    sub_222606A20(v52[0], v52[1], 107, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v51, "__volatile__");
    sub_222606A20(v51[0], v51[1], 107, 0xEFFFu, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v50, "__int8");
    sub_222606A20(v50[0], v50[1], 78, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v49, "__int16");
    sub_222606A20(v49[0], v49[1], 97, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v48, "__int32");
    sub_222606A20(v48[0], v48[1], 92, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v47, "__wchar_t");
    sub_222606A20(v47[0], v47[1], 151, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v46, "_asm");
    sub_222606A20(v46[0], v46[1], 122, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v45, "_alignof");
    sub_222606A20(v45[0], v45[1], 166, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v44, "__builtin_alignof");
    sub_222606A20(v44[0], v44[1], 166, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v43, "_cdecl");
    sub_222606A20(v43[0], v43[1], 250, 0x110u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v42, "_fastcall");
    sub_222606A20(v42[0], v42[1], 252, 0x110u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v41, "_stdcall");
    sub_222606A20(v41[0], v41[1], 251, 0x110u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v40, "_thiscall");
    sub_222606A20(v40[0], v40[1], 253, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v39, "_uuidof");
    sub_222606A20(v39[0], v39[1], 282, 0x110u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v38, "_inline");
    sub_222606A20(v38[0], v38[1], 91, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v37, "_declspec");
    sub_222606A20(v37[0], v37[1], 249, 0x10u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v36, "_pascal");
    sub_222606A20(v36[0], v36[1], 266, 0x100u, a2, a1);
  }
  if (!sub_222606BF8(a2))
  {
    sub_2225C3D00((int)v35, "__char16_t");
    sub_222606A20(v35[0], v35[1], 154, 2u, a2, a1);
  }
  uint64_t result = sub_222606BF8(a2);
  if (!result)
  {
    sub_2225C3D00((int)v34, "__char32_t");
    uint64_t result = sub_222606A20(v34[0], v34[1], 155, 2u, a2, a1);
  }
  uint64_t v5 = *(void *)a2;
  if ((*(void *)a2 & 0x400) != 0)
  {
    sub_2225C3D00((int)v33, "not_keyword");
    uint64_t result = (uint64_t)sub_222606C04(v33[0], v33[1], 0, a1);
    uint64_t v5 = *(void *)a2;
    if ((*(void *)a2 & 0x400) != 0)
    {
      sub_2225C3D00((int)v32, "class");
      uint64_t result = (uint64_t)sub_222606C04(v32[0], v32[1], 1, a1);
      uint64_t v5 = *(void *)a2;
      if ((*(void *)a2 & 0x400) != 0)
      {
        sub_2225C3D00((int)v31, "compatibility_alias");
        uint64_t result = (uint64_t)sub_222606C04(v31[0], v31[1], 2, a1);
        uint64_t v5 = *(void *)a2;
        if ((*(void *)a2 & 0x400) != 0)
        {
          sub_2225C3D00((int)v30, "defs");
          uint64_t result = (uint64_t)sub_222606C04(v30[0], v30[1], 3, a1);
          uint64_t v5 = *(void *)a2;
          if ((*(void *)a2 & 0x400) != 0)
          {
            sub_2225C3D00((int)v29, "encode");
            uint64_t result = (uint64_t)sub_222606C04(v29[0], v29[1], 4, a1);
            uint64_t v5 = *(void *)a2;
            if ((*(void *)a2 & 0x400) != 0)
            {
              sub_2225C3D00((int)v28, "end");
              uint64_t result = (uint64_t)sub_222606C04(v28[0], v28[1], 5, a1);
              uint64_t v5 = *(void *)a2;
              if ((*(void *)a2 & 0x400) != 0)
              {
                sub_2225C3D00((int)v27, "implementation");
                uint64_t result = (uint64_t)sub_222606C04(v27[0], v27[1], 6, a1);
                uint64_t v5 = *(void *)a2;
                if ((*(void *)a2 & 0x400) != 0)
                {
                  sub_2225C3D00((int)v26, "interface");
                  uint64_t result = (uint64_t)sub_222606C04(v26[0], v26[1], 7, a1);
                  uint64_t v5 = *(void *)a2;
                  if ((*(void *)a2 & 0x400) != 0)
                  {
                    sub_2225C3D00((int)v25, "private");
                    uint64_t result = (uint64_t)sub_222606C04(v25[0], v25[1], 8, a1);
                    uint64_t v5 = *(void *)a2;
                    if ((*(void *)a2 & 0x400) != 0)
                    {
                      sub_2225C3D00((int)v24, "protected");
                      uint64_t result = (uint64_t)sub_222606C04(v24[0], v24[1], 9, a1);
                      uint64_t v5 = *(void *)a2;
                      if ((*(void *)a2 & 0x400) != 0)
                      {
                        sub_2225C3D00((int)v23, "protocol");
                        uint64_t result = (uint64_t)sub_222606C04(v23[0], v23[1], 10, a1);
                        uint64_t v5 = *(void *)a2;
                        if ((*(void *)a2 & 0x400) != 0)
                        {
                          sub_2225C3D00((int)v22, "public");
                          uint64_t result = (uint64_t)sub_222606C04(v22[0], v22[1], 11, a1);
                          uint64_t v5 = *(void *)a2;
                          if ((*(void *)a2 & 0x400) != 0)
                          {
                            sub_2225C3D00((int)v21, "selector");
                            uint64_t result = (uint64_t)sub_222606C04(v21[0], v21[1], 12, a1);
                            uint64_t v5 = *(void *)a2;
                            if ((*(void *)a2 & 0x400) != 0)
                            {
                              sub_2225C3D00((int)v20, "throw");
                              uint64_t result = (uint64_t)sub_222606C04(v20[0], v20[1], 13, a1);
                              uint64_t v5 = *(void *)a2;
                              if ((*(void *)a2 & 0x400) != 0)
                              {
                                sub_2225C3D00((int)v19, "try");
                                uint64_t result = (uint64_t)sub_222606C04(v19[0], v19[1], 14, a1);
                                uint64_t v5 = *(void *)a2;
                                if ((*(void *)a2 & 0x400) != 0)
                                {
                                  sub_2225C3D00((int)v18, "catch");
                                  uint64_t result = (uint64_t)sub_222606C04(v18[0], v18[1], 15, a1);
                                  uint64_t v5 = *(void *)a2;
                                  if ((*(void *)a2 & 0x400) != 0)
                                  {
                                    sub_2225C3D00((int)v17, "finally");
                                    uint64_t result = (uint64_t)sub_222606C04(v17[0], v17[1], 16, a1);
                                    uint64_t v5 = *(void *)a2;
                                    if ((*(void *)a2 & 0x400) != 0)
                                    {
                                      sub_2225C3D00((int)v16, "synchronized");
                                      uint64_t result = (uint64_t)sub_222606C04(v16[0], v16[1], 17, a1);
                                      uint64_t v5 = *(void *)a2;
                                      if ((*(void *)a2 & 0x400) != 0)
                                      {
                                        sub_2225C3D00((int)v15, "autoreleasepool");
                                        uint64_t result = (uint64_t)sub_222606C04(v15[0], v15[1], 18, a1);
                                        uint64_t v5 = *(void *)a2;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if ((v5 & 0x800) != 0)
  {
    sub_2225C3D00((int)v14, "property");
    uint64_t result = (uint64_t)sub_222606C04(v14[0], v14[1], 19, a1);
    if ((*(unsigned char *)(a2 + 1) & 8) != 0)
    {
      sub_2225C3D00((int)v13, "package");
      uint64_t result = (uint64_t)sub_222606C04(v13[0], v13[1], 20, a1);
      if ((*(unsigned char *)(a2 + 1) & 8) != 0)
      {
        sub_2225C3D00((int)v12, "required");
        uint64_t result = (uint64_t)sub_222606C04(v12[0], v12[1], 21, a1);
        if ((*(unsigned char *)(a2 + 1) & 8) != 0)
        {
          sub_2225C3D00((int)v11, "optional");
          uint64_t result = (uint64_t)sub_222606C04(v11[0], v11[1], 22, a1);
          if ((*(unsigned char *)(a2 + 1) & 8) != 0)
          {
            sub_2225C3D00((int)v10, "synthesize");
            uint64_t result = (uint64_t)sub_222606C04(v10[0], v10[1], 23, a1);
            if ((*(unsigned char *)(a2 + 1) & 8) != 0)
            {
              sub_2225C3D00((int)v9, "dynamic");
              uint64_t result = (uint64_t)sub_222606C04(v9[0], v9[1], 24, a1);
              if ((*(unsigned char *)(a2 + 1) & 8) != 0)
              {
                sub_2225C3D00((int)v8, "import");
                uint64_t result = (uint64_t)sub_222606C04(v8[0], v8[1], 25, a1);
                if ((*(unsigned char *)(a2 + 1) & 8) != 0)
                {
                  sub_2225C3D00((int)v7, "partial_interface");
                  uint64_t result = (uint64_t)sub_222606C04(v7[0], v7[1], 26, a1);
                }
              }
            }
          }
        }
      }
    }
  }
  if ((*(unsigned char *)(a2 + 25) & 8) != 0)
  {
    sub_2225C3D00((int)v6, "__unknown_anytype");
    return sub_222606A20(v6[0], v6[1], 494, 0xEFFFu, a2, a1);
  }
  return result;
}

unsigned int *sub_2225FC940(unsigned int *a1, int a2)
{
  if (a2) {
    unsigned int v2 = 0x80000000;
  }
  else {
    unsigned int v2 = 0;
  }
  unsigned int v3 = v2 & 0x80000000 | *a1 & 0x7FFFFFFF;
  *a1 = v3;
  if (!a2) {
    return (unsigned int *)sub_22260740C(a1);
  }
  *a1 = v3 | 0x4000000;
  return a1;
}

uint64_t sub_2225FC970()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  v1210[0] = v1;
  v1210[1] = v2;
  uint64_t v3 = sub_2225C3D04((uint64_t)v1210);
  uint64_t result = 0;
  switch(v3)
  {
    case 2:
      int v5 = sub_2225CC124(v1210, 0);
      if (v5 != 105)
      {
        if (v5 == 100 && sub_2225CC124(v1210, 1) == 111)
        {
          sub_2225C3D00((int)v1209, "do");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1209[0];
          uint64_t v8 = v1209[1];
          __int16 v9 = 82;
          goto LABEL_2448;
        }
        return 0;
      }
      int v150 = sub_2225CC124(v1210, 1);
      if (v150 == 110)
      {
        sub_2225C3D00((int)v1207, "in");
        uint64_t v6 = *(void *)(v0 + 168);
        uint64_t v7 = v1207[0];
        uint64_t v8 = v1207[1];
        __int16 v9 = 357;
        goto LABEL_2558;
      }
      if (v150 != 102) {
        return 0;
      }
      sub_2225C3D00((int)v1208, "if");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v1208[0];
      uint64_t v8 = v1208[1];
      __int16 v9 = 90;
      goto LABEL_2448;
    case 3:
      int v10 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      switch(v10)
      {
        case 'f':
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 29295) {
            return 0;
          }
          sub_2225C3D00((int)v1205, "for");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1205[0];
          uint64_t v8 = v1205[1];
          __int16 v9 = 88;
          goto LABEL_2448;
        case 'g':
        case 'h':
        case 'j':
        case 'k':
        case 'l':
        case 'm':
          return result;
        case 'i':
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 29806) {
            return 0;
          }
          sub_2225C3D00((int)v1204, "int");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1204[0];
          uint64_t v8 = v1204[1];
          __int16 v9 = 92;
          goto LABEL_2448;
        case 'n':
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 30565) {
            return 0;
          }
          sub_2225C3D00((int)v1203, "new");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1203[0];
          uint64_t v8 = v1203[1];
          __int16 v9 = 135;
          goto LABEL_312;
        case 'o':
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 29813) {
            return 0;
          }
          sub_2225C3D00((int)v1202, "out");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1202[0];
          uint64_t v8 = v1202[1];
          __int16 v9 = 395;
          goto LABEL_2558;
        default:
          if (v10 != 116)
          {
            if (v10 != 97) {
              return result;
            }
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) == 28019)
            {
              sub_2225C3D00((int)v1206, "asm");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1206[0];
              uint64_t v8 = v1206[1];
              __int16 v9 = 122;
              unsigned int v26 = 32778;
              return sub_222606A20(v7, v8, v9, v26, v6, v0);
            }
            return 0;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 31090) {
            return 0;
          }
          sub_2225C3D00((int)v1201, "try");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1201[0];
          uint64_t v8 = v1201[1];
          __int16 v9 = 146;
          break;
      }
      goto LABEL_312;
    case 4:
      int v11 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      switch(v11)
      {
        case 'a':
          uint64_t v12 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v12 + 1) != 29813 || *(unsigned char *)(v12 + 3) != 111) {
            return 0;
          }
          sub_2225C3D00((int)v1200, "auto");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1200[0];
          uint64_t v8 = v1200[1];
          __int16 v9 = 75;
          goto LABEL_2448;
        case 'b':
          uint64_t v276 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v276 + 1) != 28527 || *(unsigned char *)(v276 + 3) != 108) {
            return 0;
          }
          sub_2225C3D00((int)v1199, "BOOL");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1199[0];
          uint64_t v8 = v1199[1];
          __int16 v9 = 123;
          goto LABEL_1757;
        case 'c':
          int v278 = sub_2225CC124(v1210, 1);
          if (v278 == 104)
          {
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 29281) {
              return 0;
            }
            sub_2225C3D00((int)v1196, "char");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1196[0];
            uint64_t v8 = v1196[1];
            __int16 v9 = 78;
          }
          else
          {
            if (v278 != 97 || sub_2225CC124(v1210, 2) != 115) {
              return 0;
            }
            int v279 = sub_2225CC124(v1210, 3);
            if (v279 == 116)
            {
              sub_2225C3D00((int)v1197, "cast");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1197[0];
              uint64_t v8 = v1197[1];
              __int16 v9 = 301;
              goto LABEL_2558;
            }
            if (v279 != 101) {
              return 0;
            }
            sub_2225C3D00((int)v1198, "case");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1198[0];
            uint64_t v8 = v1198[1];
            __int16 v9 = 77;
          }
          goto LABEL_2448;
        case 'e':
          int v280 = sub_2225CC124(v1210, 1);
          if (v280 != 110)
          {
            if (v280 == 108 && *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 25971)
            {
              sub_2225C3D00((int)v1195, "else");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1195[0];
              uint64_t v8 = v1195[1];
              __int16 v9 = 84;
              goto LABEL_2448;
            }
            return 0;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 28021) {
            return 0;
          }
          sub_2225C3D00((int)v1194, "enum");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1194[0];
          uint64_t v8 = v1194[1];
          __int16 v9 = 85;
          goto LABEL_2448;
        case 'f':
          uint64_t v281 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v281 + 1) != 24940 || *(unsigned char *)(v281 + 3) != 116) {
            return 0;
          }
          sub_2225C3D00((int)v1193, "flat");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1193[0];
          uint64_t v8 = v1193[1];
          __int16 v9 = 323;
          goto LABEL_2558;
        case 'g':
          uint64_t v283 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v283 + 1) != 29807 || *(unsigned char *)(v283 + 3) != 111) {
            return 0;
          }
          sub_2225C3D00((int)v1192, "goto");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1192[0];
          uint64_t v8 = v1192[1];
          __int16 v9 = 89;
          goto LABEL_2448;
        case 'h':
          uint64_t v285 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v285 + 1) != 27745 || *(unsigned char *)(v285 + 3) != 102) {
            return 0;
          }
          sub_2225C3D00((int)v1191, "half");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1191[0];
          uint64_t v8 = v1191[1];
          __int16 v9 = 269;
          unsigned int v26 = 49152;
          return sub_222606A20(v7, v8, v9, v26, v6, v0);
        case 'l':
          if (sub_2225CC124(v1210, 1) != 111) {
            return 0;
          }
          int v287 = sub_2225CC124(v1210, 2);
          if (v287 != 119)
          {
            if (v287 == 110 && sub_2225CC124(v1210, 3) == 103)
            {
              sub_2225C3D00((int)v1190, "long");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1190[0];
              uint64_t v8 = v1190[1];
              __int16 v9 = 93;
              goto LABEL_2448;
            }
            return 0;
          }
          if (sub_2225CC124(v1210, 3) != 112) {
            return 0;
          }
          sub_2225C3D00((int)v1189, "lowp");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1189[0];
          uint64_t v8 = v1189[1];
          __int16 v9 = 379;
          goto LABEL_2558;
        case 'm':
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 29793) {
            return 0;
          }
          int v288 = sub_2225CC124(v1210, 3);
          switch(v288)
          {
            case '4':
              sub_2225C3D00((int)v1186, "mat4");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1186[0];
              uint64_t v8 = v1186[1];
              __int16 v9 = 388;
              break;
            case '3':
              sub_2225C3D00((int)v1187, "mat3");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1187[0];
              uint64_t v8 = v1187[1];
              __int16 v9 = 384;
              break;
            case '2':
              sub_2225C3D00((int)v1188, "mat2");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1188[0];
              uint64_t v8 = v1188[1];
              __int16 v9 = 380;
              break;
            default:
              return 0;
          }
          goto LABEL_2558;
        case 't':
          int v289 = sub_2225CC124(v1210, 1);
          if (v289 != 114)
          {
            if (v289 == 104 && *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 29545)
            {
              sub_2225C3D00((int)v1185, "this");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1185[0];
              uint64_t v8 = v1185[1];
              __int16 v9 = 143;
              goto LABEL_1660;
            }
            return 0;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25973) {
            return 0;
          }
          sub_2225C3D00((int)v1184, "true");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1184[0];
          uint64_t v8 = v1184[1];
          __int16 v9 = 145;
          goto LABEL_1757;
        case 'u':
          uint64_t v290 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v290 + 1) != 28265 || *(unsigned char *)(v290 + 3) != 116) {
            return 0;
          }
          sub_2225C3D00((int)v1183, "uint");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1183[0];
          uint64_t v8 = v1183[1];
          __int16 v9 = 437;
          goto LABEL_2558;
        case 'v':
          int v292 = sub_2225CC124(v1210, 1);
          if (v292 == 111)
          {
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25705) {
              return 0;
            }
            sub_2225C3D00((int)v1179, "void");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1179[0];
            uint64_t v8 = v1179[1];
            __int16 v9 = 106;
            goto LABEL_2448;
          }
          if (v292 != 101 || sub_2225CC124(v1210, 2) != 99) {
            return 0;
          }
          int v293 = sub_2225CC124(v1210, 3);
          switch(v293)
          {
            case '4':
              sub_2225C3D00((int)v1180, "vec4");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1180[0];
              uint64_t v8 = v1180[1];
              __int16 v9 = 457;
              break;
            case '3':
              sub_2225C3D00((int)v1181, "vec3");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1181[0];
              uint64_t v8 = v1181[1];
              __int16 v9 = 456;
              break;
            case '2':
              sub_2225C3D00((int)v1182, "vec2");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1182[0];
              uint64_t v8 = v1182[1];
              __int16 v9 = 455;
              break;
            default:
              return 0;
          }
          break;
        default:
          return result;
      }
      goto LABEL_2558;
    case 5:
      int v14 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      switch(v14)
      {
        case '_':
          int v15 = sub_2225CC124(v1210, 1);
          if (v15 != 95)
          {
            if (v15 == 66)
            {
              uint64_t v16 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v16 + 2) == 28527 && *(unsigned char *)(v16 + 4) == 108)
              {
                sub_2225C3D00((int)v1178, "_Bool");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1178[0];
                uint64_t v8 = v1178[1];
                __int16 v9 = 112;
                goto LABEL_299;
              }
            }
            return 0;
          }
          int v485 = sub_2225CC124(v1210, 2);
          if (v485 != 119)
          {
            if (v485 == 116 && *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) == 31090)
            {
              sub_2225C3D00((int)v1177, "__try");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1177[0];
              uint64_t v8 = v1177[1];
              __int16 v9 = 283;
              goto LABEL_2053;
            }
            return 0;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 13366) {
            return 0;
          }
          sub_2225C3D00((int)v1176, "__w64");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1176[0];
          uint64_t v8 = v1176[1];
          __int16 v9 = 281;
          goto LABEL_2297;
        case 'b':
          int v294 = sub_2225CC124(v1210, 1);
          if (v294 != 118)
          {
            if (v294 == 114)
            {
              uint64_t v295 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v295 + 2) == 24933 && *(unsigned char *)(v295 + 4) == 107)
              {
                sub_2225C3D00((int)v1175, "break");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1175[0];
                uint64_t v8 = v1175[1];
                __int16 v9 = 76;
                goto LABEL_2448;
              }
            }
            return 0;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25445) {
            return 0;
          }
          int v486 = sub_2225CC124(v1210, 4);
          switch(v486)
          {
            case '4':
              sub_2225C3D00((int)v1172, "bvec4");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1172[0];
              uint64_t v8 = v1172[1];
              __int16 v9 = 299;
              break;
            case '3':
              sub_2225C3D00((int)v1173, "bvec3");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1173[0];
              uint64_t v8 = v1173[1];
              __int16 v9 = 298;
              break;
            case '2':
              sub_2225C3D00((int)v1174, "bvec2");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1174[0];
              uint64_t v8 = v1174[1];
              __int16 v9 = 297;
              break;
            default:
              return 0;
          }
          goto LABEL_2558;
        case 'c':
          int v297 = sub_2225CC124(v1210, 1);
          switch(v297)
          {
            case 'o':
              uint64_t v533 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v533 + 2) == 29550 && *(unsigned char *)(v533 + 4) == 116)
              {
                sub_2225C3D00((int)v1169, "const");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1169[0];
                uint64_t v8 = v1169[1];
                __int16 v9 = 79;
                goto LABEL_2448;
              }
              break;
            case 'l':
              uint64_t v535 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v535 + 2) == 29537 && *(unsigned char *)(v535 + 4) == 115)
              {
                sub_2225C3D00((int)v1170, "class");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1170[0];
                uint64_t v8 = v1170[1];
                __int16 v9 = 125;
                goto LABEL_1660;
              }
              break;
            case 'a':
              uint64_t v298 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v298 + 2) == 25460 && *(unsigned char *)(v298 + 4) == 104)
              {
                sub_2225C3D00((int)v1171, "catch");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1171[0];
                uint64_t v8 = v1171[1];
                __int16 v9 = 124;
                goto LABEL_312;
              }
              break;
          }
          return 0;
        case 'd':
          int v300 = sub_2225CC124(v1210, 1);
          if (v300 == 118)
          {
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25445) {
              return 0;
            }
            int v487 = sub_2225CC124(v1210, 4);
            switch(v487)
            {
              case '4':
                sub_2225C3D00((int)v1163, "dvec4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1163[0];
                uint64_t v8 = v1163[1];
                __int16 v9 = 320;
                break;
              case '3':
                sub_2225C3D00((int)v1164, "dvec3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1164[0];
                uint64_t v8 = v1164[1];
                __int16 v9 = 319;
                break;
              case '2':
                sub_2225C3D00((int)v1165, "dvec2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1165[0];
                uint64_t v8 = v1165[1];
                __int16 v9 = 318;
                break;
              default:
                return 0;
            }
            goto LABEL_2558;
          }
          if (v300 != 109 || *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 29793) {
            return 0;
          }
          int v301 = sub_2225CC124(v1210, 4);
          switch(v301)
          {
            case '4':
              sub_2225C3D00((int)v1166, "dmat4");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1166[0];
              uint64_t v8 = v1166[1];
              __int16 v9 = 314;
              break;
            case '3':
              sub_2225C3D00((int)v1167, "dmat3");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1167[0];
              uint64_t v8 = v1167[1];
              __int16 v9 = 310;
              break;
            case '2':
              sub_2225C3D00((int)v1168, "dmat2");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1168[0];
              uint64_t v8 = v1168[1];
              __int16 v9 = 306;
              break;
            default:
              return 0;
          }
          goto LABEL_464;
        case 'f':
          int v302 = sub_2225CC124(v1210, 1);
          uint64_t result = 0;
          if (v302 <= 107)
          {
            if (v302 != 97)
            {
              if (v302 != 105) {
                return result;
              }
              uint64_t v303 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v303 + 2) == 25976 && *(unsigned char *)(v303 + 4) == 100)
              {
                sub_2225C3D00((int)v1161, "fixed");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1161[0];
                uint64_t v8 = v1161[1];
                __int16 v9 = 322;
                goto LABEL_2558;
              }
              return 0;
            }
            uint64_t v570 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v570 + 2) != 29548 || *(unsigned char *)(v570 + 4) != 101) {
              return 0;
            }
            sub_2225C3D00((int)v1162, "false");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1162[0];
            uint64_t v8 = v1162[1];
            __int16 v9 = 131;
LABEL_1757:
            unsigned int v26 = 32800;
            return sub_222606A20(v7, v8, v9, v26, v6, v0);
          }
          if (v302 == 108)
          {
            uint64_t v573 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v573 + 2) == 24943 && *(unsigned char *)(v573 + 4) == 116)
            {
              sub_2225C3D00((int)v1160, "float");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1160[0];
              uint64_t v8 = v1160[1];
              __int16 v9 = 87;
              goto LABEL_2448;
            }
            return 0;
          }
          if (v302 != 118) {
            return result;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25445) {
            return 0;
          }
          int v466 = sub_2225CC124(v1210, 4);
          switch(v466)
          {
            case '4':
              sub_2225C3D00((int)v1157, "fvec4");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1157[0];
              uint64_t v8 = v1157[1];
              __int16 v9 = 326;
              break;
            case '3':
              sub_2225C3D00((int)v1158, "fvec3");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1158[0];
              uint64_t v8 = v1158[1];
              __int16 v9 = 325;
              break;
            case '2':
              sub_2225C3D00((int)v1159, "fvec2");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1159[0];
              uint64_t v8 = v1159[1];
              __int16 v9 = 324;
              break;
            default:
              return 0;
          }
          goto LABEL_2558;
        case 'h':
          int v305 = sub_2225CC124(v1210, 1);
          uint64_t result = 0;
          if (v305 > 108)
          {
            if (v305 == 109)
            {
              if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 29793) {
                return 0;
              }
              int v575 = sub_2225CC124(v1210, 4);
              switch(v575)
              {
                case '4':
                  sub_2225C3D00((int)v1150, "hmat4");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1150[0];
                  uint64_t v8 = v1150[1];
                  __int16 v9 = 473;
                  break;
                case '3':
                  sub_2225C3D00((int)v1151, "hmat3");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1151[0];
                  uint64_t v8 = v1151[1];
                  __int16 v9 = 469;
                  break;
                case '2':
                  sub_2225C3D00((int)v1152, "hmat2");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1152[0];
                  uint64_t v8 = v1152[1];
                  __int16 v9 = 465;
                  break;
                default:
                  return 0;
              }
            }
            else
            {
              if (v305 != 118) {
                return result;
              }
              if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25445) {
                return 0;
              }
              int v467 = sub_2225CC124(v1210, 4);
              switch(v467)
              {
                case '4':
                  sub_2225C3D00((int)v1147, "hvec4");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1147[0];
                  uint64_t v8 = v1147[1];
                  __int16 v9 = 330;
                  break;
                case '3':
                  sub_2225C3D00((int)v1148, "hvec3");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1148[0];
                  uint64_t v8 = v1148[1];
                  __int16 v9 = 329;
                  break;
                case '2':
                  sub_2225C3D00((int)v1149, "hvec2");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1149[0];
                  uint64_t v8 = v1149[1];
                  __int16 v9 = 328;
                  break;
                default:
                  return 0;
              }
            }
          }
          else
          {
            if (v305 != 97)
            {
              if (v305 != 105) {
                return result;
              }
              uint64_t v306 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v306 + 2) == 26727 && *(unsigned char *)(v306 + 4) == 112)
              {
                sub_2225C3D00((int)v1153, "highp");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1153[0];
                uint64_t v8 = v1153[1];
                __int16 v9 = 327;
                goto LABEL_2558;
              }
              return 0;
            }
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 26220) {
              return 0;
            }
            int v572 = sub_2225CC124(v1210, 4);
            switch(v572)
            {
              case '4':
                sub_2225C3D00((int)v1154, "half4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1154[0];
                uint64_t v8 = v1154[1];
                __int16 v9 = 482;
                break;
              case '3':
                sub_2225C3D00((int)v1155, "half3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1155[0];
                uint64_t v8 = v1155[1];
                __int16 v9 = 481;
                break;
              case '2':
                sub_2225C3D00((int)v1156, "half2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1156[0];
                uint64_t v8 = v1156[1];
                __int16 v9 = 480;
                break;
              default:
                return 0;
            }
          }
          goto LABEL_2558;
        case 'i':
          int v308 = sub_2225CC124(v1210, 1);
          if (v308 == 118)
          {
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25445) {
              return 0;
            }
            int v488 = sub_2225CC124(v1210, 4);
            switch(v488)
            {
              case '4':
                sub_2225C3D00((int)v1142, "ivec4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1142[0];
                uint64_t v8 = v1142[1];
                __int16 v9 = 377;
                break;
              case '3':
                sub_2225C3D00((int)v1143, "ivec3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1143[0];
                uint64_t v8 = v1143[1];
                __int16 v9 = 376;
                break;
              case '2':
                sub_2225C3D00((int)v1144, "ivec2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1144[0];
                uint64_t v8 = v1144[1];
                __int16 v9 = 375;
                break;
              default:
                return 0;
            }
          }
          else
          {
            if (v308 != 110) {
              return 0;
            }
            int v309 = sub_2225CC124(v1210, 2);
            if (v309 != 112)
            {
              if (v309 == 111 && *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) == 29813)
              {
                sub_2225C3D00((int)v1146, "inout");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1146[0];
                uint64_t v8 = v1146[1];
                __int16 v9 = 358;
                goto LABEL_2558;
              }
              return 0;
            }
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 29813) {
              return 0;
            }
            sub_2225C3D00((int)v1145, "input");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1145[0];
            uint64_t v8 = v1145[1];
            __int16 v9 = 359;
          }
          goto LABEL_2558;
        case 'p':
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1751348321) {
            return 0;
          }
          sub_2225C3D00((int)v1141, "patch");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1141[0];
          uint64_t v8 = v1141[1];
          __int16 v9 = 398;
          goto LABEL_2558;
        case 's':
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1953656680) {
            return 0;
          }
          sub_2225C3D00((int)v1140, "short");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1140[0];
          uint64_t v8 = v1140[1];
          __int16 v9 = 97;
          goto LABEL_2448;
        case 't':
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 2003792488) {
            return 0;
          }
          sub_2225C3D00((int)v1139, "throw");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1139[0];
          uint64_t v8 = v1139[1];
          __int16 v9 = 144;
          goto LABEL_312;
        case 'u':
          int v310 = sub_2225CC124(v1210, 1);
          switch(v310)
          {
            case 'v':
              if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 25445) {
                return 0;
              }
              int v537 = sub_2225CC124(v1210, 4);
              switch(v537)
              {
                case '4':
                  sub_2225C3D00((int)v1134, "uvec4");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1134[0];
                  uint64_t v8 = v1134[1];
                  __int16 v9 = 453;
                  break;
                case '3':
                  sub_2225C3D00((int)v1135, "uvec3");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1135[0];
                  uint64_t v8 = v1135[1];
                  __int16 v9 = 452;
                  break;
                case '2':
                  sub_2225C3D00((int)v1136, "uvec2");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1136[0];
                  uint64_t v8 = v1136[1];
                  __int16 v9 = 451;
                  break;
                default:
                  return 0;
              }
              goto LABEL_2558;
            case 's':
              uint64_t v538 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v538 + 2) == 28265 && *(unsigned char *)(v538 + 4) == 103)
              {
                sub_2225C3D00((int)v1137, "using");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1137[0];
                uint64_t v8 = v1137[1];
                __int16 v9 = 149;
                goto LABEL_1660;
              }
              break;
            case 'n':
              uint64_t v311 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v311 + 2) == 28521 && *(unsigned char *)(v311 + 4) == 110)
              {
                sub_2225C3D00((int)v1138, "union");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1138[0];
                uint64_t v8 = v1138[1];
                __int16 v9 = 104;
                goto LABEL_2448;
              }
              break;
          }
          break;
        case 'w':
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1701603688) {
            return 0;
          }
          sub_2225C3D00((int)v1133, "while");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1133[0];
          uint64_t v8 = v1133[1];
          __int16 v9 = 108;
          goto LABEL_2448;
        default:
          return result;
      }
      return 0;
    case 6:
      int v18 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      switch(v18)
      {
        case '_':
          if (sub_2225CC124(v1210, 1) != 95) {
            return 0;
          }
          int v19 = sub_2225CC124(v1210, 2);
          uint64_t result = 0;
          switch(v19)
          {
            case 'n':
              uint64_t v20 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v20 + 3) != 27765 || *(unsigned char *)(v20 + 5) != 108) {
                return 0;
              }
              sub_2225C3D00((int)v1131, "__null");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1131[0];
              uint64_t v8 = v1131[1];
              __int16 v9 = 165;
              goto LABEL_312;
            case 'o':
            case 'p':
            case 'q':
            case 't':
              return result;
            case 'r':
              uint64_t v682 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v682 + 3) != 24933 || *(unsigned char *)(v682 + 5) != 108) {
                return 0;
              }
              sub_2225C3D00((int)v1130, "__real");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1130[0];
              uint64_t v8 = v1130[1];
              __int16 v9 = 176;
              goto LABEL_2448;
            case 's':
              uint64_t v684 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v684 + 3) != 29808 || *(unsigned char *)(v684 + 5) != 114) {
                return 0;
              }
              sub_2225C3D00((int)v1129, "__sptr");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1129[0];
              uint64_t v8 = v1129[1];
              __int16 v9 = 279;
              goto LABEL_2297;
            case 'u':
              uint64_t v686 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v686 + 3) != 29808 || *(unsigned char *)(v686 + 5) != 114) {
                return 0;
              }
              sub_2225C3D00((int)v1128, "__uptr");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1128[0];
              uint64_t v8 = v1128[1];
              __int16 v9 = 280;
              goto LABEL_2297;
            default:
              if (v19 != 105) {
                return result;
              }
              uint64_t v631 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v631 + 3) != 24941 || *(unsigned char *)(v631 + 5) != 103) {
                return 0;
              }
              sub_2225C3D00((int)v1132, "__imag");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1132[0];
              uint64_t v8 = v1132[1];
              __int16 v9 = 173;
              break;
          }
          goto LABEL_2448;
        case 'a':
          uint64_t v390 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v390 + 1) != 1986622563 || *(unsigned char *)(v390 + 5) != 101) {
            return 0;
          }
          sub_2225C3D00((int)v1127, "active");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1127[0];
          uint64_t v8 = v1127[1];
          __int16 v9 = 294;
          goto LABEL_2558;
        case 'b':
          uint64_t v392 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v392 + 1) != 1701209717 || *(unsigned char *)(v392 + 5) != 114) {
            return 0;
          }
          sub_2225C3D00((int)v1126, "buffer");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1126[0];
          uint64_t v8 = v1126[1];
          __int16 v9 = 300;
          goto LABEL_464;
        case 'c':
          uint64_t v394 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v394 + 1) != 1869442415 || *(unsigned char *)(v394 + 5) != 110) {
            return 0;
          }
          sub_2225C3D00((int)v1125, "common");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1125[0];
          uint64_t v8 = v1125[1];
          __int16 v9 = 304;
          goto LABEL_2558;
        case 'd':
          int v396 = sub_2225CC124(v1210, 1);
          if (v396 != 111)
          {
            if (v396 == 101 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1702126956)
            {
              sub_2225C3D00((int)v1124, "delete");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1124[0];
              uint64_t v8 = v1124[1];
              __int16 v9 = 127;
              goto LABEL_312;
            }
            return 0;
          }
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1701601909) {
            return 0;
          }
          sub_2225C3D00((int)v1123, "double");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1123[0];
          uint64_t v8 = v1123[1];
          __int16 v9 = 83;
          goto LABEL_2448;
        case 'e':
          if (sub_2225CC124(v1210, 1) != 120) {
            return 0;
          }
          int v397 = sub_2225CC124(v1210, 2);
          if (v397 == 116)
          {
            uint64_t v603 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v603 + 3) == 29285 && *(unsigned char *)(v603 + 5) == 110)
            {
              sub_2225C3D00((int)v1121, "extern");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1121[0];
              uint64_t v8 = v1121[1];
              __int16 v9 = 86;
              goto LABEL_2448;
            }
          }
          else if (v397 == 112)
          {
            uint64_t v398 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v398 + 3) == 29295 && *(unsigned char *)(v398 + 5) == 116)
            {
              sub_2225C3D00((int)v1122, "export");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1122[0];
              uint64_t v8 = v1122[1];
              __int16 v9 = 130;
              goto LABEL_312;
            }
          }
          return 0;
        case 'f':
          int v400 = sub_2225CC124(v1210, 1);
          if (v400 == 114)
          {
            if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1684956521) {
              return 0;
            }
            sub_2225C3D00((int)v1116, "friend");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1116[0];
            uint64_t v8 = v1116[1];
            __int16 v9 = 132;
            goto LABEL_312;
          }
          if (v400 != 108)
          {
            if (v400 == 105 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1919251564)
            {
              sub_2225C3D00((int)v1120, "filter");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1120[0];
              uint64_t v8 = v1120[1];
              __int16 v9 = 321;
              goto LABEL_2558;
            }
            return 0;
          }
          uint64_t v576 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v576 + 2) != 24943 || *(unsigned char *)(v576 + 4) != 116) {
            return 0;
          }
          int v578 = sub_2225CC124(v1210, 5);
          switch(v578)
          {
            case '4':
              sub_2225C3D00((int)v1117, "float4");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1117[0];
              uint64_t v8 = v1117[1];
              __int16 v9 = 479;
              break;
            case '3':
              sub_2225C3D00((int)v1118, "float3");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1118[0];
              uint64_t v8 = v1118[1];
              __int16 v9 = 478;
              break;
            case '2':
              sub_2225C3D00((int)v1119, "float2");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1119[0];
              uint64_t v8 = v1119[1];
              __int16 v9 = 477;
              break;
            default:
              return 0;
          }
          goto LABEL_2558;
        case 'i':
          uint64_t v401 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v401 + 1) != 1852402798 || *(unsigned char *)(v401 + 5) != 101) {
            return 0;
          }
          sub_2225C3D00((int)v1115, "inline");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1115[0];
          uint64_t v8 = v1115[1];
          __int16 v9 = 91;
          unsigned int v26 = 32779;
          return sub_222606A20(v7, v8, v9, v26, v6, v0);
        case 'k':
          uint64_t v403 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v403 + 1) != 1701737061 || *(unsigned char *)(v403 + 5) != 108) {
            return 0;
          }
          sub_2225C3D00((int)v1114, "kernel");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1114[0];
          uint64_t v8 = v1114[1];
          __int16 v9 = 459;
          goto LABEL_2558;
        case 'l':
          uint64_t v405 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v405 + 1) != 1970239841 || *(unsigned char *)(v405 + 5) != 116) {
            return 0;
          }
          sub_2225C3D00((int)v1113, "layout");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1113[0];
          uint64_t v8 = v1113[1];
          __int16 v9 = 378;
          goto LABEL_2558;
        case 'm':
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 29793) {
            return 0;
          }
          int v407 = sub_2225CC124(v1210, 3);
          if (v407 == 52)
          {
            if (sub_2225CC124(v1210, 4) != 120) {
              return 0;
            }
            int v649 = sub_2225CC124(v1210, 5);
            switch(v649)
            {
              case '4':
                sub_2225C3D00((int)v1104, "mat4x4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1104[0];
                uint64_t v8 = v1104[1];
                __int16 v9 = 391;
                break;
              case '3':
                sub_2225C3D00((int)v1105, "mat4x3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1105[0];
                uint64_t v8 = v1105[1];
                __int16 v9 = 390;
                break;
              case '2':
                sub_2225C3D00((int)v1106, "mat4x2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1106[0];
                uint64_t v8 = v1106[1];
                __int16 v9 = 389;
                break;
              default:
                return 0;
            }
          }
          else if (v407 == 51)
          {
            if (sub_2225CC124(v1210, 4) != 120) {
              return 0;
            }
            int v650 = sub_2225CC124(v1210, 5);
            switch(v650)
            {
              case '4':
                sub_2225C3D00((int)v1107, "mat3x4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1107[0];
                uint64_t v8 = v1107[1];
                __int16 v9 = 387;
                break;
              case '3':
                sub_2225C3D00((int)v1108, "mat3x3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1108[0];
                uint64_t v8 = v1108[1];
                __int16 v9 = 386;
                break;
              case '2':
                sub_2225C3D00((int)v1109, "mat3x2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1109[0];
                uint64_t v8 = v1109[1];
                __int16 v9 = 385;
                break;
              default:
                return 0;
            }
          }
          else
          {
            if (v407 != 50 || sub_2225CC124(v1210, 4) != 120) {
              return 0;
            }
            int v408 = sub_2225CC124(v1210, 5);
            switch(v408)
            {
              case '4':
                sub_2225C3D00((int)v1110, "mat2x4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1110[0];
                uint64_t v8 = v1110[1];
                __int16 v9 = 383;
                break;
              case '3':
                sub_2225C3D00((int)v1111, "mat2x3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1111[0];
                uint64_t v8 = v1111[1];
                __int16 v9 = 382;
                break;
              case '2':
                sub_2225C3D00((int)v1112, "mat2x2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1112[0];
                uint64_t v8 = v1112[1];
                __int16 v9 = 381;
                break;
              default:
                return 0;
            }
          }
          goto LABEL_2558;
        case 'o':
          uint64_t v409 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v409 + 1) != 1970304117 || *(unsigned char *)(v409 + 5) != 116) {
            return 0;
          }
          sub_2225C3D00((int)v1103, "output");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1103[0];
          uint64_t v8 = v1103[1];
          __int16 v9 = 396;
          goto LABEL_2558;
        case 'p':
          uint64_t v411 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v411 + 1) != 1768710773 || *(unsigned char *)(v411 + 5) != 99) {
            return 0;
          }
          sub_2225C3D00((int)v1102, "public");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1102[0];
          uint64_t v8 = v1102[1];
          __int16 v9 = 139;
          goto LABEL_1660;
        case 'r':
          uint64_t v413 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v413 + 1) != 1920300133 || *(unsigned char *)(v413 + 5) != 110) {
            return 0;
          }
          sub_2225C3D00((int)v1101, "return");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1101[0];
          uint64_t v8 = v1101[1];
          __int16 v9 = 96;
          goto LABEL_2448;
        case 's':
          int v415 = sub_2225CC124(v1210, 1);
          uint64_t result = 0;
          if (v415 <= 115)
          {
            switch(v415)
            {
              case 'a':
                if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1701605485) {
                  return 0;
                }
                sub_2225C3D00((int)v1100, "sample");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1100[0];
                uint64_t v8 = v1100[1];
                __int16 v9 = 402;
                goto LABEL_2558;
              case 'i':
                int v607 = sub_2225CC124(v1210, 2);
                if (v607 == 122)
                {
                  uint64_t v720 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v720 + 3) == 28517 && *(unsigned char *)(v720 + 5) == 102)
                  {
                    sub_2225C3D00((int)v1098, "sizeof");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v1098[0];
                    uint64_t v8 = v1098[1];
                    __int16 v9 = 99;
                    goto LABEL_2448;
                  }
                }
                else if (v607 == 103)
                {
                  uint64_t v608 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v608 + 3) == 25966 && *(unsigned char *)(v608 + 5) == 100)
                  {
                    sub_2225C3D00((int)v1099, "signed");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v1099[0];
                    uint64_t v8 = v1099[1];
                    __int16 v9 = 98;
                    goto LABEL_2448;
                  }
                }
                break;
              case 'm':
                if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1752461167)
                {
                  sub_2225C3D00((int)v1097, "smooth");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1097[0];
                  uint64_t v8 = v1097[1];
                  __int16 v9 = 423;
                  goto LABEL_2558;
                }
                break;
              default:
                return result;
            }
            return 0;
          }
          if (v415 == 116)
          {
            int v610 = sub_2225CC124(v1210, 2);
            if (v610 == 114)
            {
              uint64_t v722 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v722 + 3) == 25461 && *(unsigned char *)(v722 + 5) == 116)
              {
                sub_2225C3D00((int)v1095, "struct");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1095[0];
                uint64_t v8 = v1095[1];
                __int16 v9 = 101;
                goto LABEL_2448;
              }
            }
            else if (v610 == 97)
            {
              uint64_t v611 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v611 + 3) == 26996 && *(unsigned char *)(v611 + 5) == 99)
              {
                sub_2225C3D00((int)v1096, "static");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1096[0];
                uint64_t v8 = v1096[1];
                __int16 v9 = 100;
                goto LABEL_2448;
              }
            }
            return 0;
          }
          if (v415 != 117)
          {
            if (v415 != 119) {
              return result;
            }
            if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1751348329)
            {
              sub_2225C3D00((int)v1093, "switch");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1093[0];
              uint64_t v8 = v1093[1];
              __int16 v9 = 102;
              goto LABEL_2448;
            }
            return 0;
          }
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1886545264) {
            return 0;
          }
          sub_2225C3D00((int)v1094, "superp");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1094[0];
          uint64_t v8 = v1094[1];
          __int16 v9 = 425;
          goto LABEL_2558;
        case 't':
          uint64_t v416 = sub_2225C3C70((uint64_t)v1210);
          if (*(_WORD *)(v416 + 1) != 28793 || *(unsigned char *)(v416 + 3) != 101) {
            return 0;
          }
          int v418 = sub_2225CC124(v1210, 4);
          if (v418 != 111)
          {
            if (v418 == 105 && sub_2225CC124(v1210, 5) == 100)
            {
              sub_2225C3D00((int)v1092, "typeid");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1092[0];
              uint64_t v8 = v1092[1];
              __int16 v9 = 148;
              goto LABEL_312;
            }
            return 0;
          }
          if (sub_2225CC124(v1210, 5) != 102) {
            return 0;
          }
          sub_2225C3D00((int)v1091, "typeof");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1091[0];
          uint64_t v8 = v1091[1];
          __int16 v9 = 180;
          unsigned int v26 = 8;
          break;
        default:
          return result;
      }
      return sub_222606A20(v7, v8, v9, v26, v6, v0);
    case 7:
      int v22 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      switch(v22)
      {
        case '_':
          int v23 = sub_2225CC124(v1210, 1);
          if (v23 != 95)
          {
            if (v23 == 65)
            {
              uint64_t v24 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v24 + 2) == 1768779636 && *(unsigned char *)(v24 + 6) == 99)
              {
                sub_2225C3D00((int)v1090, "_Atomic");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1090[0];
                uint64_t v8 = v1090[1];
                __int16 v9 = 111;
                unsigned int v26 = 0xFFFF;
                return sub_222606A20(v7, v8, v9, v26, v6, v0);
              }
            }
            return 0;
          }
          int v504 = sub_2225CC124(v1210, 2);
          uint64_t result = 0;
          if (v504 <= 107)
          {
            if (v504 == 99)
            {
              int v709 = sub_2225CC124(v1210, 3);
              if (v709 == 111)
              {
                uint64_t v748 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v748 + 4) == 28524 && *(unsigned char *)(v748 + 6) == 114)
                {
                  sub_2225C3D00((int)v1088, "__color");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1088[0];
                  uint64_t v8 = v1088[1];
                  __int16 v9 = 492;
                  goto LABEL_2558;
                }
              }
              else if (v709 == 100)
              {
                uint64_t v710 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v710 + 4) == 25445 && *(unsigned char *)(v710 + 6) == 108)
                {
                  sub_2225C3D00((int)v1089, "__cdecl");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1089[0];
                  uint64_t v8 = v1089[1];
                  __int16 v9 = 250;
                  goto LABEL_2448;
                }
              }
            }
            else
            {
              if (v504 != 105) {
                return result;
              }
              if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 3) == 875983982)
              {
                sub_2225C3D00((int)v1087, "uint64_t");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1087[0];
                uint64_t v8 = v1087[1];
                __int16 v9 = 286;
                goto LABEL_2297;
              }
            }
            return 0;
          }
          if (v504 == 108)
          {
            int v703 = sub_2225CC124(v1210, 3);
            if (v703 == 111)
            {
              uint64_t v745 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v745 + 4) == 24931 && *(unsigned char *)(v745 + 6) == 108)
              {
                sub_2225C3D00((int)v1085, "__local");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1085[0];
                uint64_t v8 = v1085[1];
                __int16 v9 = 257;
                goto LABEL_2088;
              }
            }
            else if (v703 == 101)
            {
              uint64_t v704 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v704 + 4) == 30305 && *(unsigned char *)(v704 + 6) == 101)
              {
                sub_2225C3D00((int)v1086, "__leave");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1086[0];
                uint64_t v8 = v1086[1];
                __int16 v9 = 285;
                goto LABEL_2053;
              }
            }
            return 0;
          }
          if (v504 != 112)
          {
            if (v504 != 116) {
              return result;
            }
            if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 3) == 1701601889)
            {
              sub_2225C3D00((int)v1081, "__table");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1081[0];
              uint64_t v8 = v1081[1];
              __int16 v9 = 493;
              goto LABEL_2558;
            }
            return 0;
          }
          int v706 = sub_2225CC124(v1210, 3);
          if (v706 != 116)
          {
            if (v706 == 105)
            {
              uint64_t v707 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v707 + 4) == 25976 && *(unsigned char *)(v707 + 6) == 108)
              {
                sub_2225C3D00((int)v1084, "__pixel");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1084[0];
                uint64_t v8 = v1084[1];
                __int16 v9 = 268;
                goto LABEL_2461;
              }
            }
            return 0;
          }
          if (sub_2225CC124(v1210, 4) != 114) {
            return 0;
          }
          int v747 = sub_2225CC124(v1210, 5);
          if (v747 != 54)
          {
            if (v747 == 51 && sub_2225CC124(v1210, 6) == 50)
            {
              sub_2225C3D00((int)v1083, "__ptr32");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1083[0];
              uint64_t v8 = v1083[1];
              __int16 v9 = 278;
              goto LABEL_2297;
            }
            return 0;
          }
          if (sub_2225CC124(v1210, 6) != 52) {
            return 0;
          }
          sub_2225C3D00((int)v1082, "__ptr64");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1082[0];
          uint64_t v8 = v1082[1];
          __int16 v9 = 277;
          goto LABEL_2297;
        case 'a':
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1852270956) {
            return 0;
          }
          int v313 = sub_2225CC124(v1210, 5);
          if (v313 != 111)
          {
            if (v313 == 97 && sub_2225CC124(v1210, 6) == 115)
            {
              sub_2225C3D00((int)v1080, "alignas");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1080[0];
              uint64_t v8 = v1080[1];
              __int16 v9 = 152;
              goto LABEL_1334;
            }
            return 0;
          }
          if (sub_2225CC124(v1210, 6) != 102) {
            return 0;
          }
          sub_2225C3D00((int)v1079, "alignof");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1079[0];
          uint64_t v8 = v1079[1];
          __int16 v9 = 153;
          goto LABEL_1334;
        case 'd':
          int v314 = sub_2225CC124(v1210, 1);
          if (v314 != 109)
          {
            if (v314 == 105)
            {
              uint64_t v544 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v544 + 2) == 1918985075 && *(unsigned char *)(v544 + 6) == 100)
              {
                sub_2225C3D00((int)v1077, "discard");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1077[0];
                uint64_t v8 = v1077[1];
                __int16 v9 = 305;
                goto LABEL_2558;
              }
            }
            else if (v314 == 101)
            {
              uint64_t v315 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v315 + 2) == 1819631974 && *(unsigned char *)(v315 + 6) == 116)
              {
                sub_2225C3D00((int)v1078, "default");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1078[0];
                uint64_t v8 = v1078[1];
                __int16 v9 = 81;
                goto LABEL_2448;
              }
            }
            return 0;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 29793) {
            return 0;
          }
          int v542 = sub_2225CC124(v1210, 4);
          if (v542 == 52)
          {
            if (sub_2225CC124(v1210, 5) != 120) {
              return 0;
            }
            int v743 = sub_2225CC124(v1210, 6);
            switch(v743)
            {
              case '4':
                sub_2225C3D00((int)v1068, "dmat4x4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1068[0];
                uint64_t v8 = v1068[1];
                __int16 v9 = 317;
                break;
              case '3':
                sub_2225C3D00((int)v1069, "dmat4x3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1069[0];
                uint64_t v8 = v1069[1];
                __int16 v9 = 316;
                break;
              case '2':
                sub_2225C3D00((int)v1070, "dmat4x2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1070[0];
                uint64_t v8 = v1070[1];
                __int16 v9 = 315;
                break;
              default:
                return 0;
            }
          }
          else if (v542 == 51)
          {
            if (sub_2225CC124(v1210, 5) != 120) {
              return 0;
            }
            int v744 = sub_2225CC124(v1210, 6);
            switch(v744)
            {
              case '4':
                sub_2225C3D00((int)v1071, "dmat3x4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1071[0];
                uint64_t v8 = v1071[1];
                __int16 v9 = 313;
                break;
              case '3':
                sub_2225C3D00((int)v1072, "dmat3x3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1072[0];
                uint64_t v8 = v1072[1];
                __int16 v9 = 312;
                break;
              case '2':
                sub_2225C3D00((int)v1073, "dmat3x2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1073[0];
                uint64_t v8 = v1073[1];
                __int16 v9 = 311;
                break;
              default:
                return 0;
            }
          }
          else
          {
            if (v542 != 50 || sub_2225CC124(v1210, 5) != 120) {
              return 0;
            }
            int v543 = sub_2225CC124(v1210, 6);
            switch(v543)
            {
              case '4':
                sub_2225C3D00((int)v1074, "dmat2x4");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1074[0];
                uint64_t v8 = v1074[1];
                __int16 v9 = 309;
                break;
              case '3':
                sub_2225C3D00((int)v1075, "dmat2x3");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1075[0];
                uint64_t v8 = v1075[1];
                __int16 v9 = 308;
                break;
              case '2':
                sub_2225C3D00((int)v1076, "dmat2x2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1076[0];
                uint64_t v8 = v1076[1];
                __int16 v9 = 307;
                break;
              default:
                return 0;
            }
          }
          goto LABEL_464;
        case 'h':
          int v317 = sub_2225CC124(v1210, 1);
          if (v317 == 109)
          {
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 29793) {
              return 0;
            }
            int v519 = sub_2225CC124(v1210, 4);
            if (v519 == 52)
            {
              if (sub_2225CC124(v1210, 5) != 120) {
                return 0;
              }
              int v729 = sub_2225CC124(v1210, 6);
              switch(v729)
              {
                case '4':
                  sub_2225C3D00((int)v1056, "hmat4x4");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1056[0];
                  uint64_t v8 = v1056[1];
                  __int16 v9 = 476;
                  break;
                case '3':
                  sub_2225C3D00((int)v1057, "hmat4x3");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1057[0];
                  uint64_t v8 = v1057[1];
                  __int16 v9 = 475;
                  break;
                case '2':
                  sub_2225C3D00((int)v1058, "hmat4x2");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1058[0];
                  uint64_t v8 = v1058[1];
                  __int16 v9 = 474;
                  break;
                default:
                  return 0;
              }
            }
            else if (v519 == 51)
            {
              if (sub_2225CC124(v1210, 5) != 120) {
                return 0;
              }
              int v730 = sub_2225CC124(v1210, 6);
              switch(v730)
              {
                case '4':
                  sub_2225C3D00((int)v1059, "hmat3x4");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1059[0];
                  uint64_t v8 = v1059[1];
                  __int16 v9 = 472;
                  break;
                case '3':
                  sub_2225C3D00((int)v1060, "hmat3x3");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1060[0];
                  uint64_t v8 = v1060[1];
                  __int16 v9 = 471;
                  break;
                case '2':
                  sub_2225C3D00((int)v1061, "hmat3x2");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1061[0];
                  uint64_t v8 = v1061[1];
                  __int16 v9 = 470;
                  break;
                default:
                  return 0;
              }
            }
            else
            {
              if (v519 != 50 || sub_2225CC124(v1210, 5) != 120) {
                return 0;
              }
              int v520 = sub_2225CC124(v1210, 6);
              switch(v520)
              {
                case '4':
                  sub_2225C3D00((int)v1062, "hmat2x4");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1062[0];
                  uint64_t v8 = v1062[1];
                  __int16 v9 = 468;
                  break;
                case '3':
                  sub_2225C3D00((int)v1063, "hmat2x3");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1063[0];
                  uint64_t v8 = v1063[1];
                  __int16 v9 = 467;
                  break;
                case '2':
                  sub_2225C3D00((int)v1064, "hmat2x2");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1064[0];
                  uint64_t v8 = v1064[1];
                  __int16 v9 = 466;
                  break;
                default:
                  return 0;
              }
            }
          }
          else
          {
            if (v317 != 97 || *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 26220) {
              return 0;
            }
            int v318 = sub_2225CC124(v1210, 4);
            if (v318 == 52)
            {
              if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 5) != 13432) {
                return 0;
              }
              sub_2225C3D00((int)v1065, "half4x4");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1065[0];
              uint64_t v8 = v1065[1];
              __int16 v9 = 488;
            }
            else
            {
              if (v318 != 51)
              {
                if (v318 == 50 && *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 5) == 12920)
                {
                  sub_2225C3D00((int)v1067, "half2x2");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1067[0];
                  uint64_t v8 = v1067[1];
                  __int16 v9 = 486;
                  goto LABEL_2558;
                }
                return 0;
              }
              if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 5) != 13176) {
                return 0;
              }
              sub_2225C3D00((int)v1066, "half3x3");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1066[0];
              uint64_t v8 = v1066[1];
              __int16 v9 = 487;
            }
          }
          goto LABEL_2558;
        case 'i':
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1701273965) {
            return 0;
          }
          int v319 = sub_2225CC124(v1210, 5);
          if (v319 == 51)
          {
            if (sub_2225CC124(v1210, 6) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v1053, "image3D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1053[0];
            uint64_t v8 = v1053[1];
            __int16 v9 = 353;
          }
          else
          {
            if (v319 != 50)
            {
              if (v319 == 49 && sub_2225CC124(v1210, 6) == 68)
              {
                sub_2225C3D00((int)v1055, "image1D");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1055[0];
                uint64_t v8 = v1055[1];
                __int16 v9 = 342;
                goto LABEL_2558;
              }
              return 0;
            }
            if (sub_2225CC124(v1210, 6) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v1054, "image2D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1054[0];
            uint64_t v8 = v1054[1];
            __int16 v9 = 346;
          }
          goto LABEL_2558;
        case 'm':
          int v320 = sub_2225CC124(v1210, 1);
          if (v320 == 117)
          {
            uint64_t v521 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v521 + 2) == 1818386804 && *(unsigned char *)(v521 + 6) == 101)
            {
              sub_2225C3D00((int)v1051, "mutable");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1051[0];
              uint64_t v8 = v1051[1];
              __int16 v9 = 133;
              goto LABEL_312;
            }
          }
          else if (v320 == 101)
          {
            uint64_t v321 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v321 + 2) == 1836411236 && *(unsigned char *)(v321 + 6) == 112)
            {
              sub_2225C3D00((int)v1052, "mediump");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1052[0];
              uint64_t v8 = v1052[1];
              __int16 v9 = 392;
              goto LABEL_2558;
            }
          }
          return 0;
        case 'n':
          uint64_t v323 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v323 + 1) != 1886153845 || *(_WORD *)(v323 + 5) != 29300) {
            return 0;
          }
          sub_2225C3D00((int)v1050, "nullptr");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1050[0];
          uint64_t v8 = v1050[1];
          __int16 v9 = 159;
          goto LABEL_1334;
        case 'p':
          uint64_t v325 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v325 + 1) != 1635150194 || *(_WORD *)(v325 + 5) != 25972) {
            return 0;
          }
          sub_2225C3D00((int)v1049, "private");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1049[0];
          uint64_t v8 = v1049[1];
          __int16 v9 = 137;
          goto LABEL_312;
        case 's':
          uint64_t v327 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v327 + 1) != 1819307361 || *(_WORD *)(v327 + 5) != 29285) {
            return 0;
          }
          sub_2225C3D00((int)v1048, "sampler");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1048[0];
          uint64_t v8 = v1048[1];
          __int16 v9 = 403;
          goto LABEL_2558;
        case 't':
          uint64_t v329 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v329 + 1) != 1684369529 || *(_WORD *)(v329 + 5) != 26213) {
            return 0;
          }
          sub_2225C3D00((int)v1047, "typedef");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1047[0];
          uint64_t v8 = v1047[1];
          __int16 v9 = 103;
          goto LABEL_2448;
        case 'u':
          uint64_t v331 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v331 + 1) != 1868982638 || *(_WORD *)(v331 + 5) != 28018) {
            return 0;
          }
          sub_2225C3D00((int)v1046, "uniform");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1046[0];
          uint64_t v8 = v1046[1];
          __int16 v9 = 438;
          goto LABEL_2558;
        case 'v':
          int v333 = sub_2225CC124(v1210, 1);
          if (v333 == 105)
          {
            uint64_t v523 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v523 + 2) == 1635087474 && *(unsigned char *)(v523 + 6) == 108)
            {
              sub_2225C3D00((int)v1044, "virtual");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1044[0];
              uint64_t v8 = v1044[1];
              __int16 v9 = 150;
              goto LABEL_312;
            }
          }
          else if (v333 == 97)
          {
            uint64_t v334 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v334 + 2) == 1852406130 && *(unsigned char *)(v334 + 6) == 103)
            {
              sub_2225C3D00((int)v1045, "varying");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1045[0];
              uint64_t v8 = v1045[1];
              __int16 v9 = 454;
              goto LABEL_2558;
            }
          }
          break;
        case 'w':
          uint64_t v336 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v336 + 1) != 1918986339 || *(_WORD *)(v336 + 5) != 29791) {
            return 0;
          }
          sub_2225C3D00((int)v1043, "wchar_t");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1043[0];
          uint64_t v8 = v1043[1];
          __int16 v9 = 151;
          unsigned int v26 = 0x2000;
          return sub_222606A20(v7, v8, v9, v26, v6, v0);
        default:
          return result;
      }
      return 0;
    case 8:
      int v27 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      switch(v27)
      {
        case '_':
          int v28 = sub_2225CC124(v1210, 1);
          uint64_t result = 0;
          if (v28 > 70)
          {
            if (v28 != 71)
            {
              if (v28 != 95) {
                return result;
              }
              int v473 = sub_2225CC124(v1210, 2);
              uint64_t result = 0;
              switch(v473)
              {
                case 'b':
                  uint64_t v474 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v474 + 3) != 1734633842 || *(unsigned char *)(v474 + 7) != 101) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1038, "__bridge");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1038[0];
                  uint64_t v8 = v1038[1];
                  __int16 v9 = 270;
                  goto LABEL_490;
                case 'f':
                  uint64_t v750 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v750 + 3) != 1600351861 || *(unsigned char *)(v750 + 7) != 95) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1037, "__func__");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1037[0];
                  uint64_t v8 = v1037[1];
                  __int16 v9 = 119;
                  goto LABEL_2448;
                case 'g':
                  uint64_t v752 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v752 + 3) != 1633841004 || *(unsigned char *)(v752 + 7) != 108) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1036, "__global");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1036[0];
                  uint64_t v8 = v1036[1];
                  __int16 v9 = 256;
                  goto LABEL_2088;
                case 'i':
                  int v754 = sub_2225CC124(v1210, 3);
                  if (v754 != 115)
                  {
                    if (v754 == 110 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 4) == 942813556)
                    {
                      sub_2225C3D00((int)v1035, "__int128");
                      uint64_t v6 = *(void *)(v0 + 168);
                      uint64_t v7 = v1035[0];
                      uint64_t v8 = v1035[1];
                      __int16 v9 = 174;
                      goto LABEL_2448;
                    }
                    return 0;
                  }
                  if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 4) != 1685024863) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1034, "__is_pod");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1034[0];
                  uint64_t v8 = v1034[1];
                  __int16 v9 = 210;
                  break;
                case 'k':
                  uint64_t v755 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v755 + 3) != 1701737061 || *(unsigned char *)(v755 + 7) != 108) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1033, "__kernel");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1033[0];
                  uint64_t v8 = v1033[1];
                  __int16 v9 = 260;
                  goto LABEL_2088;
                case 'p':
                  uint64_t v757 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v757 + 3) != 1633907553 || *(unsigned char *)(v757 + 7) != 108) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1032, "__pascal");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1032[0];
                  uint64_t v8 = v1032[1];
                  __int16 v9 = 266;
                  goto LABEL_2448;
                case 's':
                  uint64_t v759 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v759 + 3) != 1819307361 || *(unsigned char *)(v759 + 7) != 101) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1031, "__sample");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1031[0];
                  uint64_t v8 = v1031[1];
                  __int16 v9 = 491;
                  goto LABEL_2558;
                case 't':
                  uint64_t v761 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v761 + 3) != 1634038376 || *(unsigned char *)(v761 + 7) != 100) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1030, "__thread");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1030[0];
                  uint64_t v8 = v1030[1];
                  __int16 v9 = 177;
                  goto LABEL_2448;
                case 'u':
                  uint64_t v763 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v763 + 3) != 1868851573 || *(unsigned char *)(v763 + 7) != 102) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1029, "__uuidof");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1029[0];
                  uint64_t v8 = v1029[1];
                  __int16 v9 = 282;
                  goto LABEL_2053;
                case 'v':
                  uint64_t v765 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v765 + 3) != 1869898597 || *(unsigned char *)(v765 + 7) != 114) {
                    return 0;
                  }
                  sub_2225C3D00((int)v1028, "__vector");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v1028[0];
                  uint64_t v8 = v1028[1];
                  __int16 v9 = 267;
LABEL_2461:
                  unsigned int v26 = 64;
                  return sub_222606A20(v7, v8, v9, v26, v6, v0);
                default:
                  return result;
              }
              goto LABEL_312;
            }
            uint64_t v588 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v588 + 2) == 1919250021 && *(_WORD *)(v588 + 6) == 25449)
            {
              sub_2225C3D00((int)v1039, "_Generic");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1039[0];
              uint64_t v8 = v1039[1];
              __int16 v9 = 114;
              goto LABEL_2448;
            }
            return 0;
          }
          if (v28 != 65)
          {
            if (v28 != 67) {
              return result;
            }
            uint64_t v29 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v29 + 2) == 1819307375 && *(_WORD *)(v29 + 6) == 30821)
            {
              sub_2225C3D00((int)v1040, "_Complex");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1040[0];
              uint64_t v8 = v1040[1];
              __int16 v9 = 113;
              goto LABEL_2448;
            }
            return 0;
          }
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1852270956) {
            return 0;
          }
          int v587 = sub_2225CC124(v1210, 6);
          if (v587 != 111)
          {
            if (v587 == 97 && sub_2225CC124(v1210, 7) == 115)
            {
              sub_2225C3D00((int)v1042, "_Alignas");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1042[0];
              uint64_t v8 = v1042[1];
              __int16 v9 = 109;
              goto LABEL_2448;
            }
            return 0;
          }
          if (sub_2225CC124(v1210, 7) != 102) {
            return 0;
          }
          sub_2225C3D00((int)v1041, "_Alignof");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1041[0];
          uint64_t v8 = v1041[1];
          __int16 v9 = 110;
          goto LABEL_2448;
        case 'c':
          int v338 = sub_2225CC124(v1210, 1);
          if (v338 == 111)
          {
            int v546 = sub_2225CC124(v1210, 2);
            if (v546 == 110)
            {
              uint64_t v647 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v647 + 3) == 1970170228 && *(unsigned char *)(v647 + 7) == 101)
              {
                sub_2225C3D00((int)v1023, "continue");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1023[0];
                uint64_t v8 = v1023[1];
                __int16 v9 = 80;
                goto LABEL_2448;
              }
            }
            else if (v546 == 104)
            {
              uint64_t v547 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v547 + 3) == 1852142181 && *(unsigned char *)(v547 + 7) == 116)
              {
                sub_2225C3D00((int)v1024, "coherent");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1024[0];
                uint64_t v8 = v1024[1];
                __int16 v9 = 303;
                goto LABEL_2558;
              }
            }
            return 0;
          }
          if (v338 != 104)
          {
            if (v338 == 101)
            {
              uint64_t v339 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v339 + 2) == 1869771886 && *(_WORD *)(v339 + 6) == 25705)
              {
                sub_2225C3D00((int)v1027, "centroid");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1027[0];
                uint64_t v8 = v1027[1];
                __int16 v9 = 302;
                goto LABEL_2558;
              }
            }
            return 0;
          }
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 29281) {
            return 0;
          }
          int v549 = sub_2225CC124(v1210, 4);
          if (v549 == 51)
          {
            uint64_t v735 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v735 + 5) != 24370 || *(unsigned char *)(v735 + 7) != 116) {
              return 0;
            }
            sub_2225C3D00((int)v1025, "char32_t");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1025[0];
            uint64_t v8 = v1025[1];
            __int16 v9 = 155;
          }
          else
          {
            if (v549 != 49) {
              return 0;
            }
            uint64_t v550 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v550 + 5) != 24374 || *(unsigned char *)(v550 + 7) != 116) {
              return 0;
            }
            sub_2225C3D00((int)v1026, "char16_t");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1026[0];
            uint64_t v8 = v1026[1];
            __int16 v9 = 154;
          }
          unsigned int v26 = 4100;
          return sub_222606A20(v7, v8, v9, v26, v6, v0);
        case 'd':
          uint64_t v341 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v341 + 1) != 1953260389 || *(_DWORD *)(v341 + 4) != 1701869940) {
            return 0;
          }
          sub_2225C3D00((int)v1022, "decltype");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1022[0];
          uint64_t v8 = v1022[1];
          __int16 v9 = 157;
          goto LABEL_1334;
        case 'e':
          uint64_t v343 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v343 + 1) != 1768714360 || *(_DWORD *)(v343 + 4) != 1953063785) {
            return 0;
          }
          sub_2225C3D00((int)v1021, "explicit");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1021[0];
          uint64_t v8 = v1021[1];
          __int16 v9 = 129;
          goto LABEL_312;
        case 'f':
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1952542572) {
            return 0;
          }
          int v345 = sub_2225CC124(v1210, 5);
          if (v345 == 52)
          {
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 6) != 13432) {
              return 0;
            }
            sub_2225C3D00((int)v1018, "float4x4");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1018[0];
            uint64_t v8 = v1018[1];
            __int16 v9 = 485;
          }
          else
          {
            if (v345 != 51)
            {
              if (v345 == 50 && *(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 6) == 12920)
              {
                sub_2225C3D00((int)v1020, "float2x2");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1020[0];
                uint64_t v8 = v1020[1];
                __int16 v9 = 483;
                goto LABEL_2558;
              }
              return 0;
            }
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 6) != 13176) {
              return 0;
            }
            sub_2225C3D00((int)v1019, "float3x3");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1019[0];
            uint64_t v8 = v1019[1];
            __int16 v9 = 484;
          }
          goto LABEL_2558;
        case 'h':
          uint64_t v346 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v346 + 1) != 1886216563 || *(_DWORD *)(v346 + 4) != 1919249520) {
            return 0;
          }
          sub_2225C3D00((int)v1017, "hsampler");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1017[0];
          uint64_t v8 = v1017[1];
          __int16 v9 = 489;
          goto LABEL_2558;
        case 'i':
          int v348 = sub_2225CC124(v1210, 1);
          if (v348 == 115)
          {
            uint64_t v525 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v525 + 2) == 1819307361 && *(_WORD *)(v525 + 6) == 29285)
            {
              sub_2225C3D00((int)v1013, "isampler");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1013[0];
              uint64_t v8 = v1013[1];
              __int16 v9 = 362;
              goto LABEL_2558;
            }
            return 0;
          }
          if (v348 != 105 || *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1701273965) {
            return 0;
          }
          int v349 = sub_2225CC124(v1210, 6);
          if (v349 == 51)
          {
            if (sub_2225CC124(v1210, 7) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v1014, "iimage3D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1014[0];
            uint64_t v8 = v1014[1];
            __int16 v9 = 338;
          }
          else
          {
            if (v349 != 50)
            {
              if (v349 == 49 && sub_2225CC124(v1210, 7) == 68)
              {
                sub_2225C3D00((int)v1016, "iimage1D");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1016[0];
                uint64_t v8 = v1016[1];
                __int16 v9 = 331;
                goto LABEL_2558;
              }
              return 0;
            }
            if (sub_2225CC124(v1210, 7) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v1015, "iimage2D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1015[0];
            uint64_t v8 = v1015[1];
            __int16 v9 = 333;
          }
          goto LABEL_2558;
        case 'n':
          if (sub_2225CC124(v1210, 1) != 111) {
            return 0;
          }
          int v350 = sub_2225CC124(v1210, 2);
          if (v350 == 105)
          {
            uint64_t v594 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v594 + 3) == 1852402798 && *(unsigned char *)(v594 + 7) == 101)
            {
              sub_2225C3D00((int)v1011, "noinline");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1011[0];
              uint64_t v8 = v1011[1];
              __int16 v9 = 393;
              goto LABEL_2558;
            }
          }
          else if (v350 == 101)
          {
            uint64_t v351 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v351 + 3) == 1885692792 && *(unsigned char *)(v351 + 7) == 116)
            {
              sub_2225C3D00((int)v1012, "noexcept");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1012[0];
              uint64_t v8 = v1012[1];
              __int16 v9 = 158;
              goto LABEL_1334;
            }
          }
          return 0;
        case 'o':
          uint64_t v353 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v353 + 1) != 1634887024 || *(_DWORD *)(v353 + 4) != 1919906913) {
            return 0;
          }
          sub_2225C3D00((int)v1010, "operator");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1010[0];
          uint64_t v8 = v1010[1];
          __int16 v9 = 136;
          goto LABEL_312;
        case 'r':
          if (sub_2225CC124(v1210, 1) != 101) {
            return 0;
          }
          int v355 = sub_2225CC124(v1210, 2);
          if (v355 != 115)
          {
            if (v355 == 103)
            {
              uint64_t v616 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v616 + 3) == 1702130537 && *(unsigned char *)(v616 + 7) == 114)
              {
                sub_2225C3D00((int)v1008, "register");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1008[0];
                uint64_t v8 = v1008[1];
                __int16 v9 = 94;
                goto LABEL_2448;
              }
            }
            else if (v355 == 97)
            {
              uint64_t v356 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v356 + 3) == 1819176804 && *(unsigned char *)(v356 + 7) == 121)
              {
                sub_2225C3D00((int)v1009, "readonly");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1009[0];
                uint64_t v8 = v1009[1];
                __int16 v9 = 400;
                goto LABEL_2558;
              }
            }
            return 0;
          }
          int v615 = sub_2225CC124(v1210, 3);
          if (v615 != 116)
          {
            if (v615 == 111 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 4) == 1701016181)
            {
              sub_2225C3D00((int)v1007, "resource");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1007[0];
              uint64_t v8 = v1007[1];
              __int16 v9 = 401;
              goto LABEL_2558;
            }
            return 0;
          }
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 4) != 1952672114) {
            return 0;
          }
          sub_2225C3D00((int)v1006, "restrict");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v1006[0];
          uint64_t v8 = v1006[1];
          __int16 v9 = 95;
          unsigned int v26 = 32769;
          return sub_222606A20(v7, v8, v9, v26, v6, v0);
        case 's':
          uint64_t v358 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v358 + 1) != 1819307361 || *(_WORD *)(v358 + 5) != 24421) {
            return 0;
          }
          int v360 = sub_2225CC124(v1210, 7);
          if (v360 == 104)
          {
            sub_2225C3D00((int)v1004, "sample_h");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1004[0];
            uint64_t v8 = v1004[1];
            __int16 v9 = 462;
          }
          else
          {
            if (v360 != 102) {
              return 0;
            }
            sub_2225C3D00((int)v1005, "sample_f");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1005[0];
            uint64_t v8 = v1005[1];
            __int16 v9 = 461;
          }
          goto LABEL_2558;
        case 't':
          int v361 = sub_2225CC124(v1210, 1);
          if (v361 == 121)
          {
            uint64_t v527 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v527 + 2) == 1634624880 && *(_WORD *)(v527 + 6) == 25965)
            {
              sub_2225C3D00((int)v1002, "typename");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1002[0];
              uint64_t v8 = v1002[1];
              __int16 v9 = 147;
              goto LABEL_312;
            }
          }
          else if (v361 == 101)
          {
            uint64_t v362 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v362 + 2) == 1634496621 && *(_WORD *)(v362 + 6) == 25972)
            {
              sub_2225C3D00((int)v1003, "template");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v1003[0];
              uint64_t v8 = v1003[1];
              __int16 v9 = 142;
              goto LABEL_1660;
            }
          }
          return 0;
        case 'u':
          int v364 = sub_2225CC124(v1210, 1);
          if (v364 == 115)
          {
            uint64_t v552 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v552 + 2) == 1819307361 && *(_WORD *)(v552 + 6) == 29285)
            {
              sub_2225C3D00((int)v997, "usampler");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v997[0];
              uint64_t v8 = v997[1];
              __int16 v9 = 439;
              goto LABEL_2558;
            }
            return 0;
          }
          if (v364 == 110)
          {
            uint64_t v554 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v554 + 2) == 1852270963 && *(_WORD *)(v554 + 6) == 25701)
            {
              sub_2225C3D00((int)v998, "unsigned");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v998[0];
              uint64_t v8 = v998[1];
              __int16 v9 = 105;
              goto LABEL_2448;
            }
            return 0;
          }
          if (v364 != 105 || *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1701273965) {
            return 0;
          }
          int v365 = sub_2225CC124(v1210, 6);
          if (v365 == 51)
          {
            if (sub_2225CC124(v1210, 7) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v999, "uimage3D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v999[0];
            uint64_t v8 = v999[1];
            __int16 v9 = 433;
          }
          else
          {
            if (v365 != 50)
            {
              if (v365 == 49 && sub_2225CC124(v1210, 7) == 68)
              {
                sub_2225C3D00((int)v1001, "uimage1D");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v1001[0];
                uint64_t v8 = v1001[1];
                __int16 v9 = 426;
                goto LABEL_2558;
              }
              return 0;
            }
            if (sub_2225CC124(v1210, 7) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v1000, "uimage2D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v1000[0];
            uint64_t v8 = v1000[1];
            __int16 v9 = 428;
          }
          goto LABEL_2558;
        case 'v':
          int v366 = sub_2225CC124(v1210, 1);
          if (v366 == 111)
          {
            uint64_t v529 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v529 + 2) == 1769234796 && *(_WORD *)(v529 + 6) == 25964)
            {
              sub_2225C3D00((int)v995, "volatile");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v995[0];
              uint64_t v8 = v995[1];
              __int16 v9 = 107;
              goto LABEL_2448;
            }
          }
          else if (v366 == 101)
          {
            uint64_t v367 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v367 + 2) == 1953718115 && *(_WORD *)(v367 + 6) == 28773)
            {
              sub_2225C3D00((int)v996, "vec_step");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v996[0];
              uint64_t v8 = v996[1];
              __int16 v9 = 265;
              unsigned int v26 = 576;
              return sub_222606A20(v7, v8, v9, v26, v6, v0);
            }
          }
          return 0;
        default:
          return result;
      }
    case 9:
      int v31 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v31 > 104)
      {
        switch(v31)
        {
          case 'n':
            if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 1) != 0x6563617073656D61) {
              return 0;
            }
            sub_2225C3D00((int)v977, "namespace");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v977[0];
            uint64_t v8 = v977[1];
            __int16 v9 = 134;
LABEL_1660:
            unsigned int v26 = 32770;
            return sub_222606A20(v7, v8, v9, v26, v6, v0);
          case 'o':
          case 'q':
          case 'r':
          case 't':
          case 'u':
          case 'v':
            return result;
          case 'p':
            int v270 = sub_2225CC124(v1210, 1);
            if (v270 == 114)
            {
              int v482 = sub_2225CC124(v1210, 2);
              if (v482 == 111)
              {
                uint64_t v601 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v601 + 3) == 1952671092 && *(_WORD *)(v601 + 7) == 25701)
                {
                  sub_2225C3D00((int)v974, "protected");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v974[0];
                  uint64_t v8 = v974[1];
                  __int16 v9 = 138;
                  goto LABEL_312;
                }
              }
              else if (v482 == 101)
              {
                uint64_t v483 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v483 + 3) == 1769171299 && *(_WORD *)(v483 + 7) == 28271)
                {
                  sub_2225C3D00((int)v975, "precision");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v975[0];
                  uint64_t v8 = v975[1];
                  __int16 v9 = 399;
                  goto LABEL_2558;
                }
              }
            }
            else if (v270 == 97)
            {
              uint64_t v271 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v271 + 2) == 1953068146 && *(_DWORD *)(v271 + 5) == 1852795252)
              {
                sub_2225C3D00((int)v976, "partition");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v976[0];
                uint64_t v8 = v976[1];
                __int16 v9 = 397;
                goto LABEL_2558;
              }
            }
            return 0;
          case 's':
            uint64_t v273 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v273 + 1) != 1819307361 || *(_WORD *)(v273 + 5) != 29285) {
              return 0;
            }
            int v275 = sub_2225CC124(v1210, 7);
            if (v275 == 51)
            {
              if (sub_2225CC124(v1210, 8) != 68) {
                return 0;
              }
              sub_2225C3D00((int)v971, "sampler3D");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v971[0];
              uint64_t v8 = v971[1];
              __int16 v9 = 416;
            }
            else
            {
              if (v275 != 50)
              {
                if (v275 == 49 && sub_2225CC124(v1210, 8) == 68)
                {
                  sub_2225C3D00((int)v973, "sampler1D");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v973[0];
                  uint64_t v8 = v973[1];
                  __int16 v9 = 404;
                  goto LABEL_2558;
                }
                return 0;
              }
              if (sub_2225CC124(v1210, 8) != 68) {
                return 0;
              }
              sub_2225C3D00((int)v972, "sampler2D");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v972[0];
              uint64_t v8 = v972[1];
              __int16 v9 = 408;
            }
            goto LABEL_2558;
          case 'w':
            if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 1) != 0x796C6E6F65746972) {
              return 0;
            }
            sub_2225C3D00((int)v970, "writeonly");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v970[0];
            uint64_t v8 = v970[1];
            __int16 v9 = 458;
            goto LABEL_2558;
          default:
            if (v31 != 105) {
              return result;
            }
            int v258 = sub_2225CC124(v1210, 1);
            if (v258 == 110)
            {
              int v489 = sub_2225CC124(v1210, 2);
              if (v489 == 118)
              {
                uint64_t v605 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v605 + 3) == 1634300513 && *(_WORD *)(v605 + 7) == 29806)
                {
                  sub_2225C3D00((int)v978, "invariant");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v978[0];
                  uint64_t v8 = v978[1];
                  __int16 v9 = 361;
                  goto LABEL_2558;
                }
              }
              else if (v489 == 116)
              {
                uint64_t v490 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v490 + 3) == 1634103909 && *(_WORD *)(v490 + 7) == 25955)
                {
                  sub_2225C3D00((int)v979, "interface");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v979[0];
                  uint64_t v8 = v979[1];
                  __int16 v9 = 360;
                  goto LABEL_2558;
                }
              }
            }
            else if (v258 == 109)
            {
              uint64_t v259 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v259 + 2) == 26465 && *(unsigned char *)(v259 + 4) == 101)
              {
                int v261 = sub_2225CC124(v1210, 5);
                if (v261 == 67)
                {
                  uint64_t v712 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v712 + 6) == 25205 && *(unsigned char *)(v712 + 8) == 101)
                  {
                    sub_2225C3D00((int)v980, "imageCube");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v980[0];
                    uint64_t v8 = v980[1];
                    __int16 v9 = 355;
                    goto LABEL_2558;
                  }
                }
                else if (v261 == 50)
                {
                  uint64_t v262 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v262 + 6) == 19780 && *(unsigned char *)(v262 + 8) == 83)
                  {
                    sub_2225C3D00((int)v981, "image2DMS");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v981[0];
                    uint64_t v8 = v981[1];
                    __int16 v9 = 349;
                    goto LABEL_464;
                  }
                }
              }
            }
            break;
        }
        return 0;
      }
      if (v31 == 95)
      {
        int v212 = sub_2225CC124(v1210, 1);
        if (v212 == 95)
        {
          int v435 = sub_2225CC124(v1210, 2);
          uint64_t result = 0;
          switch(v435)
          {
            case 'a':
              uint64_t v436 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v436 + 3) != 1852270956 || *(_WORD *)(v436 + 7) != 26223) {
                return 0;
              }
              sub_2225C3D00((int)v993, "__alignof");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v993[0];
              uint64_t v8 = v993[1];
              __int16 v9 = 166;
              goto LABEL_2448;
            case 'f':
              uint64_t v651 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v651 + 3) != 1818324585 || *(_WORD *)(v651 + 7) != 31084) {
                return 0;
              }
              sub_2225C3D00((int)v992, "__finally");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v992[0];
              uint64_t v8 = v992[1];
              __int16 v9 = 284;
LABEL_2053:
              unsigned int v26 = 272;
              return sub_222606A20(v7, v8, v9, v26, v6, v0);
            case 'i':
              if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
                return 0;
              }
              int v653 = sub_2225CC124(v1210, 5);
              switch(v653)
              {
                case 'v':
                  uint64_t v775 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v775 + 6) == 26991 && *(unsigned char *)(v775 + 8) == 100)
                  {
                    sub_2225C3D00((int)v989, "__is_void");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v989[0];
                    uint64_t v8 = v989[1];
                    __int16 v9 = 224;
                    goto LABEL_312;
                  }
                  break;
                case 's':
                  uint64_t v777 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v777 + 6) == 28001 && *(unsigned char *)(v777 + 8) == 101)
                  {
                    sub_2225C3D00((int)v990, "__is_same");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v990[0];
                    uint64_t v8 = v990[1];
                    __int16 v9 = 243;
                    goto LABEL_312;
                  }
                  break;
                case 'e':
                  uint64_t v654 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v654 + 6) == 30062 && *(unsigned char *)(v654 + 8) == 109)
                  {
                    sub_2225C3D00((int)v991, "__is_enum");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v991[0];
                    uint64_t v8 = v991[1];
                    __int16 v9 = 207;
                    goto LABEL_312;
                  }
                  break;
              }
              break;
            case 'l':
              uint64_t v656 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v656 + 3) != 1818583649 || *(_WORD *)(v656 + 7) != 24415) {
                return 0;
              }
              sub_2225C3D00((int)v988, "__label__");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v988[0];
              uint64_t v8 = v988[1];
              __int16 v9 = 175;
              goto LABEL_2448;
            case 'n':
              uint64_t v658 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v658 + 3) != 1970171503 || *(_WORD *)(v658 + 7) != 27756) {
                return 0;
              }
              sub_2225C3D00((int)v987, "__nonnull");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v987[0];
              uint64_t v8 = v987[1];
              __int16 v9 = 274;
              goto LABEL_2448;
            case 'o':
              uint64_t v660 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v660 + 3) != 1600350818 || *(_WORD *)(v660 + 7) != 28526) {
                return 0;
              }
              sub_2225C3D00((int)v986, "__objc_no");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v986[0];
              uint64_t v8 = v986[1];
              __int16 v9 = 121;
              goto LABEL_2448;
            case 'p':
              uint64_t v662 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v662 + 3) != 1635150194 || *(_WORD *)(v662 + 7) != 25972) {
                return 0;
              }
              sub_2225C3D00((int)v985, "__private");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v985[0];
              uint64_t v8 = v985[1];
              __int16 v9 = 259;
              goto LABEL_2088;
            case 's':
              uint64_t v664 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v664 + 3) != 1633903732 || *(_WORD *)(v664 + 7) != 27756) {
                return 0;
              }
              sub_2225C3D00((int)v984, "__stdcall");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v984[0];
              uint64_t v8 = v984[1];
              __int16 v9 = 251;
              goto LABEL_2448;
            default:
              return result;
          }
        }
        else if (v212 == 78)
        {
          uint64_t v213 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v213 + 2) == 1952805487 && *(_DWORD *)(v213 + 5) == 1852994932)
          {
            sub_2225C3D00((int)v994, "_Noreturn");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v994[0];
            uint64_t v8 = v994[1];
            __int16 v9 = 116;
            goto LABEL_2448;
          }
        }
        return 0;
      }
      if (v31 != 97)
      {
        if (v31 != 99) {
          return result;
        }
        if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 1) == 0x7270786574736E6FLL)
        {
          sub_2225C3D00((int)v982, "constexpr");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v982[0];
          uint64_t v8 = v982[1];
          __int16 v9 = 156;
          goto LABEL_1334;
        }
        return 0;
      }
      if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 1) != 0x6574756269727474) {
        return 0;
      }
      sub_2225C3D00((int)v983, "attribute");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v983[0];
      uint64_t v8 = v983[1];
      __int16 v9 = 296;
      goto LABEL_2558;
    case 10:
      int v32 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v32 <= 104)
      {
        if (v32 != 95)
        {
          if (v32 == 99)
          {
            uint64_t v219 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v219 + 1) == 0x7361635F74736E6FLL && *(unsigned char *)(v219 + 9) == 116)
            {
              sub_2225C3D00((int)v954, "const_cast");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v954[0];
              uint64_t v8 = v954[1];
              __int16 v9 = 126;
              goto LABEL_312;
            }
          }
          else
          {
            if (v32 != 104) {
              return result;
            }
            uint64_t v33 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v33 + 1) == 0x3272656C706D6173 && *(unsigned char *)(v33 + 9) == 68)
            {
              sub_2225C3D00((int)v953, "hsampler2D");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v953[0];
              uint64_t v8 = v953[1];
              __int16 v9 = 490;
              goto LABEL_2558;
            }
          }
          return 0;
        }
        int v215 = sub_2225CC124(v1210, 1);
        switch(v215)
        {
          case '_':
            int v468 = sub_2225CC124(v1210, 2);
            uint64_t result = 0;
            switch(v468)
            {
              case 'c':
                uint64_t v469 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v469 + 3) != 1953721967 || *(_DWORD *)(v469 + 6) != 1953390964) {
                  return 0;
                }
                sub_2225C3D00((int)v966, "__constant");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v966[0];
                uint64_t v8 = v966[1];
                __int16 v9 = 258;
                goto LABEL_2088;
              case 'd':
                uint64_t v688 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v688 + 3) != 1936483173 || *(_DWORD *)(v688 + 6) != 1667592307) {
                  return 0;
                }
                sub_2225C3D00((int)v965, "__declspec");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v965[0];
                uint64_t v8 = v965[1];
                __int16 v9 = 249;
                goto LABEL_2448;
              case 'e':
              case 'g':
              case 'h':
              case 'j':
              case 'k':
              case 'l':
              case 'm':
                return result;
              case 'f':
                uint64_t v690 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v690 + 3) != 1668576097 || *(_DWORD *)(v690 + 6) != 1819042147) {
                  return 0;
                }
                sub_2225C3D00((int)v964, "__fastcall");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v964[0];
                uint64_t v8 = v964[1];
                __int16 v9 = 252;
                goto LABEL_2448;
              case 'i':
                if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) == 24435)
                {
                  int v692 = sub_2225CC124(v1210, 5);
                  uint64_t result = 0;
                  switch(v692)
                  {
                    case 'a':
                      if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 6) != 2036429426) {
                        return 0;
                      }
                      sub_2225C3D00((int)v963, "__is_array");
                      uint64_t v6 = *(void *)(v0 + 168);
                      uint64_t v7 = v963[0];
                      uint64_t v8 = v963[1];
                      __int16 v9 = 225;
                      goto LABEL_312;
                    case 'b':
                    case 'd':
                      return result;
                    case 'c':
                      int v788 = sub_2225CC124(v1210, 6);
                      if (v788 == 111)
                      {
                        uint64_t v791 = sub_2225C3C70((uint64_t)v1210);
                        if (*(_WORD *)(v791 + 7) == 29550 && *(unsigned char *)(v791 + 9) == 116)
                        {
                          sub_2225C3D00((int)v961, "__is_const");
                          uint64_t v6 = *(void *)(v0 + 168);
                          uint64_t v7 = v961[0];
                          uint64_t v8 = v961[1];
                          __int16 v9 = 238;
                          goto LABEL_312;
                        }
                      }
                      else if (v788 == 108)
                      {
                        uint64_t v789 = sub_2225C3C70((uint64_t)v1210);
                        if (*(_WORD *)(v789 + 7) == 29537 && *(unsigned char *)(v789 + 9) == 115)
                        {
                          sub_2225C3D00((int)v962, "__is_class");
                          uint64_t v6 = *(void *)(v0 + 168);
                          uint64_t v7 = v962[0];
                          uint64_t v8 = v962[1];
                          __int16 v9 = 204;
                          goto LABEL_312;
                        }
                      }
                      break;
                    case 'e':
                      if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 6) != 2037674093) {
                        return 0;
                      }
                      sub_2225C3D00((int)v960, "__is_empty");
                      uint64_t v6 = *(void *)(v0 + 168);
                      uint64_t v7 = v960[0];
                      uint64_t v8 = v960[1];
                      __int16 v9 = 206;
                      goto LABEL_312;
                    case 'f':
                      if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 6) != 1818324585) {
                        return 0;
                      }
                      sub_2225C3D00((int)v959, "__is_final");
                      uint64_t v6 = *(void *)(v0 + 168);
                      uint64_t v7 = v959[0];
                      uint64_t v8 = v959[1];
                      __int16 v9 = 208;
                      goto LABEL_312;
                    default:
                      if (v692 != 117) {
                        return result;
                      }
                      if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 6) != 1852795246) {
                        return 0;
                      }
                      sub_2225C3D00((int)v958, "__is_union");
                      uint64_t v6 = *(void *)(v0 + 168);
                      uint64_t v7 = v958[0];
                      uint64_t v8 = v958[1];
                      __int16 v9 = 213;
                      goto LABEL_312;
                  }
                }
                return 0;
              case 'n':
                uint64_t v693 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v693 + 3) != 1634495605 || *(_DWORD *)(v693 + 6) != 1701601889) {
                  return 0;
                }
                sub_2225C3D00((int)v957, "__nullable");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v957[0];
                uint64_t v8 = v957[1];
                __int16 v9 = 275;
                goto LABEL_2448;
              case 'o':
                uint64_t v695 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v695 + 3) != 1600350818 || *(_DWORD *)(v695 + 6) != 1936030047) {
                  return 0;
                }
                sub_2225C3D00((int)v956, "__objc_yes");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v956[0];
                uint64_t v8 = v956[1];
                __int16 v9 = 120;
                goto LABEL_2448;
              default:
                if (v468 != 116) {
                  return result;
                }
                uint64_t v637 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v637 + 3) != 1668508008 || *(_DWORD *)(v637 + 6) != 1819042147) {
                  return 0;
                }
                sub_2225C3D00((int)v955, "__thiscall");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v955[0];
                uint64_t v8 = v955[1];
                __int16 v9 = 253;
                break;
            }
            goto LABEL_2448;
          case 'I':
            if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 2) != 0x7972616E6967616DLL) {
              return 0;
            }
            sub_2225C3D00((int)v967, "_Imaginary");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v967[0];
            uint64_t v8 = v967[1];
            __int16 v9 = 115;
            break;
          case 'D':
            uint64_t v216 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v216 + 2) != 1835623269 || *(_WORD *)(v216 + 6) != 27745) {
              return 0;
            }
            int v218 = sub_2225CC124(v1210, 8);
            if (v218 != 54)
            {
              if (v218 == 51 && sub_2225CC124(v1210, 9) == 50)
              {
                sub_2225C3D00((int)v969, "_Decimal32");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v969[0];
                uint64_t v8 = v969[1];
                __int16 v9 = 162;
                goto LABEL_2448;
              }
              return 0;
            }
            if (sub_2225CC124(v1210, 9) != 52) {
              return 0;
            }
            sub_2225C3D00((int)v968, "_Decimal64");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v968[0];
            uint64_t v8 = v968[1];
            __int16 v9 = 163;
            break;
          default:
            return 0;
        }
        goto LABEL_2448;
      }
      switch(v32)
      {
        case 'i':
          int v226 = sub_2225CC124(v1210, 1);
          if (v226 != 115)
          {
            if (v226 == 105 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1701273965)
            {
              int v227 = sub_2225CC124(v1210, 6);
              if (v227 == 67)
              {
                uint64_t v643 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v643 + 7) == 25205 && *(unsigned char *)(v643 + 9) == 101)
                {
                  sub_2225C3D00((int)v951, "iimageCube");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v951[0];
                  uint64_t v8 = v951[1];
                  __int16 v9 = 340;
                  goto LABEL_2558;
                }
              }
              else if (v227 == 50)
              {
                uint64_t v228 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v228 + 7) == 19780 && *(unsigned char *)(v228 + 9) == 83)
                {
                  sub_2225C3D00((int)v952, "iimage2DMS");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v952[0];
                  uint64_t v8 = v952[1];
                  __int16 v9 = 335;
                  goto LABEL_464;
                }
              }
            }
            return 0;
          }
          uint64_t v441 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v441 + 2) != 1819307361 || *(_WORD *)(v441 + 6) != 29285) {
            return 0;
          }
          int v443 = sub_2225CC124(v1210, 8);
          if (v443 == 51)
          {
            if (sub_2225CC124(v1210, 9) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v948, "isampler3D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v948[0];
            uint64_t v8 = v948[1];
            __int16 v9 = 371;
          }
          else
          {
            if (v443 != 50)
            {
              if (v443 == 49 && sub_2225CC124(v1210, 9) == 68)
              {
                sub_2225C3D00((int)v950, "isampler1D");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v950[0];
                uint64_t v8 = v950[1];
                __int16 v9 = 363;
                goto LABEL_2558;
              }
              return 0;
            }
            if (sub_2225CC124(v1210, 9) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v949, "isampler2D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v949[0];
            uint64_t v8 = v949[1];
            __int16 v9 = 365;
          }
          break;
        case 's':
          uint64_t v230 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v230 + 1) == 0x6E6974756F726275 && *(unsigned char *)(v230 + 9) == 101)
          {
            sub_2225C3D00((int)v947, "subroutine");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v947[0];
            uint64_t v8 = v947[1];
            __int16 v9 = 424;
            goto LABEL_2558;
          }
          return 0;
        case 'u':
          int v120 = sub_2225CC124(v1210, 1);
          if (v120 != 115)
          {
            if (v120 == 105 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1701273965)
            {
              int v121 = sub_2225CC124(v1210, 6);
              if (v121 == 67)
              {
                uint64_t v641 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v641 + 7) == 25205 && *(unsigned char *)(v641 + 9) == 101)
                {
                  sub_2225C3D00((int)v945, "uimageCube");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v945[0];
                  uint64_t v8 = v945[1];
                  __int16 v9 = 435;
                  goto LABEL_2558;
                }
              }
              else if (v121 == 50)
              {
                uint64_t v122 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v122 + 7) == 19780 && *(unsigned char *)(v122 + 9) == 83)
                {
                  sub_2225C3D00((int)v946, "uimage2DMS");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v946[0];
                  uint64_t v8 = v946[1];
                  __int16 v9 = 430;
                  goto LABEL_464;
                }
              }
            }
            return 0;
          }
          uint64_t v432 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v432 + 2) != 1819307361 || *(_WORD *)(v432 + 6) != 29285) {
            return 0;
          }
          int v434 = sub_2225CC124(v1210, 8);
          if (v434 == 51)
          {
            if (sub_2225CC124(v1210, 9) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v942, "usampler3D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v942[0];
            uint64_t v8 = v942[1];
            __int16 v9 = 447;
          }
          else
          {
            if (v434 != 50)
            {
              if (v434 == 49 && sub_2225CC124(v1210, 9) == 68)
              {
                sub_2225C3D00((int)v944, "usampler1D");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v944[0];
                uint64_t v8 = v944[1];
                __int16 v9 = 440;
                goto LABEL_2558;
              }
              return 0;
            }
            if (sub_2225CC124(v1210, 9) != 68) {
              return 0;
            }
            sub_2225C3D00((int)v943, "usampler2D");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v943[0];
            uint64_t v8 = v943[1];
            __int16 v9 = 442;
          }
          break;
        default:
          return result;
      }
      goto LABEL_2558;
    case 11:
      int v35 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v35 > 104)
      {
        if (v35 == 105)
        {
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1701273965) {
            return 0;
          }
          int v186 = sub_2225CC124(v1210, 5);
          if (v186 == 66)
          {
            uint64_t v498 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v498 + 6) == 1701209717 && *(unsigned char *)(v498 + 10) == 114)
            {
              sub_2225C3D00((int)v928, "imageBuffer");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v928[0];
              uint64_t v8 = v928[1];
              __int16 v9 = 354;
              goto LABEL_2558;
            }
          }
          else if (v186 == 50)
          {
            uint64_t v187 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v187 + 6) == 1667584580 && *(unsigned char *)(v187 + 10) == 116)
            {
              sub_2225C3D00((int)v929, "image2DRect");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v929[0];
              uint64_t v8 = v929[1];
              __int16 v9 = 351;
              goto LABEL_464;
            }
          }
        }
        else
        {
          if (v35 != 115) {
            return result;
          }
          int v124 = sub_2225CC124(v1210, 1);
          if (v124 == 116)
          {
            uint64_t v379 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v379 + 2) == 0x7361635F63697461 && *(unsigned char *)(v379 + 10) == 116)
            {
              sub_2225C3D00((int)v925, "static_cast");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v925[0];
              uint64_t v8 = v925[1];
              __int16 v9 = 141;
              goto LABEL_312;
            }
          }
          else if (v124 == 97)
          {
            uint64_t v125 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v125 + 2) == 1701605485 && *(unsigned char *)(v125 + 6) == 114)
            {
              int v127 = sub_2225CC124(v1210, 7);
              if (v127 == 67)
              {
                uint64_t v613 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v613 + 8) == 25205 && *(unsigned char *)(v613 + 10) == 101)
                {
                  sub_2225C3D00((int)v926, "samplerCube");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v926[0];
                  uint64_t v8 = v926[1];
                  __int16 v9 = 419;
                  goto LABEL_2558;
                }
              }
              else if (v127 == 50)
              {
                uint64_t v128 = sub_2225C3C70((uint64_t)v1210);
                if (*(_WORD *)(v128 + 8) == 19780 && *(unsigned char *)(v128 + 10) == 83)
                {
                  sub_2225C3D00((int)v927, "sampler2DMS");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v927[0];
                  uint64_t v8 = v927[1];
                  __int16 v9 = 411;
                  goto LABEL_2558;
                }
              }
            }
          }
        }
        return 0;
      }
      if (v35 != 95)
      {
        if (v35 != 97) {
          return result;
        }
        uint64_t v36 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v36 + 1) == 0x69755F63696D6F74 && *(_WORD *)(v36 + 9) == 29806)
        {
          sub_2225C3D00((int)v930, "atomic_uint");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v930[0];
          uint64_t v8 = v930[1];
          __int16 v9 = 295;
          goto LABEL_2558;
        }
        return 0;
      }
      int v165 = sub_2225CC124(v1210, 1);
      if (v165 != 95)
      {
        if (v165 == 68)
        {
          uint64_t v166 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v166 + 2) == 0x32316C616D696365 && *(unsigned char *)(v166 + 10) == 56)
          {
            sub_2225C3D00((int)v941, "_Decimal128");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v941[0];
            uint64_t v8 = v941[1];
            __int16 v9 = 164;
            goto LABEL_2448;
          }
        }
        return 0;
      }
      int v386 = sub_2225CC124(v1210, 2);
      uint64_t result = 0;
      if (v386 <= 104)
      {
        if (v386 != 70)
        {
          if (v386 != 97) {
            return result;
          }
          if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 3) == 0x6574756269727474)
          {
            sub_2225C3D00((int)v939, "__attribute");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v939[0];
            uint64_t v8 = v939[1];
            __int16 v9 = 167;
            goto LABEL_2448;
          }
          return 0;
        }
        if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 3) != 0x5F5F474953434E55) {
          return 0;
        }
        sub_2225C3D00((int)v940, "__FUNCSIG__");
        uint64_t v6 = *(void *)(v0 + 168);
        uint64_t v7 = v940[0];
        uint64_t v8 = v940[1];
        __int16 v9 = 182;
      }
      else
      {
        if (v386 != 105)
        {
          if (v386 != 114)
          {
            if (v386 != 117) {
              return result;
            }
            if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 3) == 0x64656E67696C616ELL)
            {
              sub_2225C3D00((int)v931, "__unaligned");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v931[0];
              uint64_t v8 = v931[1];
              __int16 v9 = 255;
              goto LABEL_2297;
            }
            return 0;
          }
          if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 3) != 0x796C6E6F5F646165) {
            return 0;
          }
          sub_2225C3D00((int)v932, "__read_only");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v932[0];
          uint64_t v8 = v932[1];
          __int16 v9 = 261;
          goto LABEL_2088;
        }
        int v596 = sub_2225CC124(v1210, 3);
        if (v596 != 115)
        {
          if (v596 == 110)
          {
            uint64_t v727 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v727 + 4) == 1718773108 && *(_DWORD *)(v727 + 7) == 1701011814)
            {
              sub_2225C3D00((int)v937, "__interface");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v937[0];
              uint64_t v8 = v937[1];
              __int16 v9 = 292;
              goto LABEL_2297;
            }
          }
          else if (v596 == 102)
          {
            uint64_t v597 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v597 + 4) == 1769497951 && *(_DWORD *)(v597 + 7) == 1937011561)
            {
              sub_2225C3D00((int)v938, "__if_exists");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v938[0];
              uint64_t v8 = v938[1];
              __int16 v9 = 287;
              goto LABEL_2297;
            }
          }
          return 0;
        }
        if (sub_2225CC124(v1210, 4) != 95) {
          return 0;
        }
        int v724 = sub_2225CC124(v1210, 5);
        if (v724 != 115)
        {
          if (v724 == 111)
          {
            uint64_t v725 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v725 + 6) == 1667590754 && *(unsigned char *)(v725 + 10) == 116)
            {
              sub_2225C3D00((int)v936, "__is_object");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v936[0];
              uint64_t v8 = v936[1];
              __int16 v9 = 231;
              goto LABEL_312;
            }
          }
          return 0;
        }
        int v779 = sub_2225CC124(v1210, 6);
        if (v779 == 105)
        {
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 7) != 1684368999) {
            return 0;
          }
          sub_2225C3D00((int)v933, "__is_signed");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v933[0];
          uint64_t v8 = v933[1];
          __int16 v9 = 241;
          goto LABEL_312;
        }
        if (v779 != 101)
        {
          if (v779 == 99 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 7) == 1918987361)
          {
            sub_2225C3D00((int)v935, "__is_scalar");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v935[0];
            uint64_t v8 = v935[1];
            __int16 v9 = 232;
            goto LABEL_312;
          }
          return 0;
        }
        if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 7) != 1684368481) {
          return 0;
        }
        sub_2225C3D00((int)v934, "__is_sealed");
        uint64_t v6 = *(void *)(v0 + 168);
        uint64_t v7 = v934[0];
        uint64_t v8 = v934[1];
        __int16 v9 = 185;
      }
      goto LABEL_2297;
    case 12:
      int v38 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v38 <= 104)
      {
        if (v38 != 95)
        {
          if (v38 != 100) {
            return result;
          }
          uint64_t v148 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v148 + 1) == 0x635F63696D616E79 && *(void *)(v148 + 4) == 0x747361635F63696DLL)
          {
            sub_2225C3D00((int)v916, "dynamic_cast");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v916[0];
            uint64_t v8 = v916[1];
            __int16 v9 = 128;
            goto LABEL_312;
          }
          return 0;
        }
        if (sub_2225CC124(v1210, 1) != 95) {
          return 0;
        }
        int v209 = sub_2225CC124(v1210, 2);
        uint64_t result = 0;
        if (v209 <= 104)
        {
          if (v209 == 70)
          {
            uint64_t v585 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v585 + 3) == 0x5F4E4F4954434E55 && *(unsigned char *)(v585 + 11) == 95)
            {
              sub_2225C3D00((int)v924, "__FUNCTION__");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v924[0];
              uint64_t v8 = v924[1];
              __int16 v9 = 178;
              goto LABEL_2448;
            }
          }
          else
          {
            if (v209 != 97) {
              return result;
            }
            uint64_t v471 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v471 + 3) == 0x6E61725F79617272 && *(unsigned char *)(v471 + 11) == 107)
            {
              sub_2225C3D00((int)v923, "__array_rank");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v923[0];
              uint64_t v8 = v923[1];
              __int16 v9 = 245;
              goto LABEL_312;
            }
          }
        }
        else
        {
          switch(v209)
          {
            case 'i':
              if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
                return 0;
              }
              int v579 = sub_2225CC124(v1210, 5);
              uint64_t result = 0;
              HIDWORD(v580) = v579;
              LODWORD(v580) = v579 - 98;
              switch((v580 >> 1))
              {
                case 0u:
                  uint64_t v581 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v581 + 6) != 1600484193 || *(_WORD *)(v581 + 10) != 26223) {
                    return 0;
                  }
                  sub_2225C3D00((int)v922, "__is_base_of");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v922[0];
                  uint64_t v8 = v922[1];
                  __int16 v9 = 203;
                  goto LABEL_312;
                case 5u:
                  uint64_t v769 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v769 + 6) != 1919251561 || *(_WORD *)(v769 + 10) != 27745) {
                    return 0;
                  }
                  sub_2225C3D00((int)v921, "__is_literal");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v921[0];
                  uint64_t v8 = v921[1];
                  __int16 v9 = 209;
                  goto LABEL_312;
                case 7u:
                  uint64_t v771 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v771 + 6) != 1953393007 || *(_WORD *)(v771 + 10) != 29285) {
                    return 0;
                  }
                  sub_2225C3D00((int)v920, "__is_pointer");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v920[0];
                  uint64_t v8 = v920[1];
                  __int16 v9 = 234;
                  goto LABEL_312;
                case 9u:
                  uint64_t v773 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v773 + 6) != 1769367922 || *(_WORD *)(v773 + 10) != 27745) {
                    return 0;
                  }
                  sub_2225C3D00((int)v919, "__is_trivial");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v919[0];
                  uint64_t v8 = v919[1];
                  __int16 v9 = 212;
                  goto LABEL_312;
                default:
                  return result;
              }
              return result;
            case 'r':
              uint64_t v583 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v583 + 3) == 0x746972775F646165 && *(unsigned char *)(v583 + 11) == 101)
              {
                sub_2225C3D00((int)v918, "__read_write");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v918[0];
                uint64_t v8 = v918[1];
                __int16 v9 = 263;
                goto LABEL_2088;
              }
              break;
            case 'w':
              uint64_t v210 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v210 + 3) == 0x6C6E6F5F65746972 && *(unsigned char *)(v210 + 11) == 121)
              {
                sub_2225C3D00((int)v917, "__write_only");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v917[0];
                uint64_t v8 = v917[1];
                __int16 v9 = 262;
                goto LABEL_2088;
              }
              break;
            default:
              return result;
          }
        }
      }
      else
      {
        switch(v38)
        {
          case 'i':
            int v203 = sub_2225CC124(v1210, 1);
            if (v203 == 115)
            {
              uint64_t v456 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v456 + 2) == 1819307361 && *(_WORD *)(v456 + 6) == 29285)
              {
                int v458 = sub_2225CC124(v1210, 8);
                if (v458 == 67)
                {
                  uint64_t v676 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v676 + 9) == 25205 && *(unsigned char *)(v676 + 11) == 101)
                  {
                    sub_2225C3D00((int)v910, "isamplerCube");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v910[0];
                    uint64_t v8 = v910[1];
                    __int16 v9 = 373;
                    goto LABEL_2558;
                  }
                }
                else if (v458 == 50)
                {
                  uint64_t v459 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v459 + 9) == 19780 && *(unsigned char *)(v459 + 11) == 83)
                  {
                    sub_2225C3D00((int)v911, "isampler2DMS");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v911[0];
                    uint64_t v8 = v911[1];
                    __int16 v9 = 367;
                    goto LABEL_2558;
                  }
                }
              }
            }
            else if (v203 == 109)
            {
              uint64_t v461 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v461 + 2) == 26465 && *(unsigned char *)(v461 + 4) == 101)
              {
                int v463 = sub_2225CC124(v1210, 5);
                if (v463 == 50)
                {
                  uint64_t v678 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v678 + 6) == 1920090436 && *(_WORD *)(v678 + 10) == 31073)
                  {
                    sub_2225C3D00((int)v912, "image2DArray");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v912[0];
                    uint64_t v8 = v912[1];
                    __int16 v9 = 347;
                    goto LABEL_2558;
                  }
                }
                else if (v463 == 49)
                {
                  uint64_t v464 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v464 + 6) == 1920090436 && *(_WORD *)(v464 + 10) == 31073)
                  {
                    sub_2225C3D00((int)v913, "image1DArray");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v913[0];
                    uint64_t v8 = v913[1];
                    __int16 v9 = 343;
                    goto LABEL_2558;
                  }
                }
              }
            }
            else if (v203 == 105 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1701273965)
            {
              int v204 = sub_2225CC124(v1210, 6);
              if (v204 == 66)
              {
                uint64_t v668 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v668 + 7) == 1701209717 && *(unsigned char *)(v668 + 11) == 114)
                {
                  sub_2225C3D00((int)v914, "iimageBuffer");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v914[0];
                  uint64_t v8 = v914[1];
                  __int16 v9 = 339;
                  goto LABEL_2558;
                }
              }
              else if (v204 == 50)
              {
                uint64_t v205 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v205 + 7) == 1667584580 && *(unsigned char *)(v205 + 11) == 116)
                {
                  sub_2225C3D00((int)v915, "iimage2DRect");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v915[0];
                  uint64_t v8 = v915[1];
                  __int16 v9 = 337;
                  goto LABEL_464;
                }
              }
            }
            break;
          case 't':
            uint64_t v207 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v207 + 1) == 0x6F6C5F6461657268 && *(void *)(v207 + 4) == 0x6C61636F6C5F6461)
            {
              sub_2225C3D00((int)v909, "thread_local");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v909[0];
              uint64_t v8 = v909[1];
              __int16 v9 = 161;
              goto LABEL_1334;
            }
            break;
          case 'u':
            int v39 = sub_2225CC124(v1210, 1);
            if (v39 == 115)
            {
              uint64_t v419 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v419 + 2) == 1819307361 && *(_WORD *)(v419 + 6) == 29285)
              {
                int v421 = sub_2225CC124(v1210, 8);
                if (v421 == 67)
                {
                  uint64_t v635 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v635 + 9) == 25205 && *(unsigned char *)(v635 + 11) == 101)
                  {
                    sub_2225C3D00((int)v905, "usamplerCube");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v905[0];
                    uint64_t v8 = v905[1];
                    __int16 v9 = 449;
                    goto LABEL_2558;
                  }
                }
                else if (v421 == 50)
                {
                  uint64_t v422 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_WORD *)(v422 + 9) == 19780 && *(unsigned char *)(v422 + 11) == 83)
                  {
                    sub_2225C3D00((int)v906, "usampler2DMS");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v906[0];
                    uint64_t v8 = v906[1];
                    __int16 v9 = 444;
                    goto LABEL_2558;
                  }
                }
              }
            }
            else if (v39 == 105 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1701273965)
            {
              int v40 = sub_2225CC124(v1210, 6);
              if (v40 == 66)
              {
                uint64_t v633 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v633 + 7) == 1701209717 && *(unsigned char *)(v633 + 11) == 114)
                {
                  sub_2225C3D00((int)v907, "uimageBuffer");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v907[0];
                  uint64_t v8 = v907[1];
                  __int16 v9 = 434;
                  goto LABEL_2558;
                }
              }
              else if (v40 == 50)
              {
                uint64_t v41 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v41 + 7) == 1667584580 && *(unsigned char *)(v41 + 11) == 116)
                {
                  sub_2225C3D00((int)v908, "uimage2DRect");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v908[0];
                  uint64_t v8 = v908[1];
                  __int16 v9 = 432;
                  goto LABEL_464;
                }
              }
            }
            break;
          default:
            return result;
        }
      }
      return 0;
    case 13:
      int v43 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v43 <= 109)
      {
        switch(v43)
        {
          case 'L':
            uint64_t v221 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v221 + 1) == 0x4954434E55465F5FLL && *(_DWORD *)(v221 + 9) == 1600081487)
            {
              sub_2225C3D00((int)v904, "L__FUNCTION__");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v904[0];
              uint64_t v8 = v904[1];
              __int16 v9 = 183;
              goto LABEL_2297;
            }
            break;
          case '_':
            int v223 = sub_2225CC124(v1210, 1);
            if (v223 == 95)
            {
              int v438 = sub_2225CC124(v1210, 2);
              uint64_t result = 0;
              switch(v438)
              {
                case 'a':
                  uint64_t v439 = sub_2225C3C70((uint64_t)v1210);
                  if (*(void *)(v439 + 3) != 0x6574756269727474 || *(_WORD *)(v439 + 11) != 24415) {
                    return 0;
                  }
                  sub_2225C3D00((int)v901, "__attribute__");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v901[0];
                  uint64_t v8 = v901[1];
                  __int16 v9 = 460;
                  goto LABEL_2558;
                case 'b':
                case 'c':
                case 'd':
                case 'g':
                case 'h':
                  return result;
                case 'e':
                  uint64_t v624 = sub_2225C3C70((uint64_t)v1210);
                  if (*(void *)(v624 + 3) != 0x6E6F69736E657478 || *(_WORD *)(v624 + 11) != 24415) {
                    return 0;
                  }
                  sub_2225C3D00((int)v900, "__extension__");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v900[0];
                  uint64_t v8 = v900[1];
                  __int16 v9 = 172;
                  goto LABEL_2448;
                case 'f':
                  uint64_t v626 = sub_2225C3C70((uint64_t)v1210);
                  if (*(void *)(v626 + 3) != 0x696C6E696563726FLL || *(_WORD *)(v626 + 11) != 25966) {
                    return 0;
                  }
                  sub_2225C3D00((int)v899, "__forceinline");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v899[0];
                  uint64_t v8 = v899[1];
                  __int16 v9 = 254;
                  goto LABEL_2297;
                case 'i':
                  if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) == 24435)
                  {
                    int v628 = sub_2225CC124(v1210, 5);
                    uint64_t result = 0;
                    switch(v628)
                    {
                      case 'a':
                        uint64_t v629 = sub_2225C3C70((uint64_t)v1210);
                        if (*(_DWORD *)(v629 + 6) != 1920234338 || *(_DWORD *)(v629 + 9) != 1952670066) {
                          return 0;
                        }
                        sub_2225C3D00((int)v898, "__is_abstract");
                        uint64_t v6 = *(void *)(v0 + 168);
                        uint64_t v7 = v898[0];
                        uint64_t v8 = v898[1];
                        __int16 v9 = 202;
                        goto LABEL_312;
                      case 'b':
                      case 'd':
                      case 'e':
                      case 'g':
                      case 'h':
                        return result;
                      case 'c':
                        uint64_t v780 = sub_2225C3C70((uint64_t)v1210);
                        if (*(_DWORD *)(v780 + 6) != 1869639023 || *(_DWORD *)(v780 + 9) != 1684960623) {
                          return 0;
                        }
                        sub_2225C3D00((int)v897, "__is_compound");
                        uint64_t v6 = *(void *)(v0 + 168);
                        uint64_t v7 = v897[0];
                        uint64_t v8 = v897[1];
                        __int16 v9 = 233;
                        goto LABEL_312;
                      case 'f':
                        uint64_t v782 = sub_2225C3C70((uint64_t)v1210);
                        if (*(_DWORD *)(v782 + 6) != 1952673397 || *(_DWORD *)(v782 + 9) != 1852795252) {
                          return 0;
                        }
                        sub_2225C3D00((int)v896, "__is_function");
                        uint64_t v6 = *(void *)(v0 + 168);
                        uint64_t v7 = v896[0];
                        uint64_t v8 = v896[1];
                        __int16 v9 = 226;
                        goto LABEL_312;
                      case 'i':
                        uint64_t v784 = sub_2225C3C70((uint64_t)v1210);
                        if (*(_DWORD *)(v784 + 6) != 1734702190 || *(_DWORD *)(v784 + 9) != 1818325607) {
                          return 0;
                        }
                        sub_2225C3D00((int)v895, "__is_integral");
                        uint64_t v6 = *(void *)(v0 + 168);
                        uint64_t v7 = v895[0];
                        uint64_t v8 = v895[1];
                        __int16 v9 = 222;
                        goto LABEL_312;
                      default:
                        if (v628 == 117)
                        {
                          uint64_t v786 = sub_2225C3C70((uint64_t)v1210);
                          if (*(_DWORD *)(v786 + 6) == 1734964078 && *(_DWORD *)(v786 + 9) == 1684368999)
                          {
                            sub_2225C3D00((int)v894, "__is_unsigned");
                            uint64_t v6 = *(void *)(v0 + 168);
                            uint64_t v7 = v894[0];
                            uint64_t v8 = v894[1];
                            __int16 v9 = 242;
                            goto LABEL_312;
                          }
                        }
                        else
                        {
                          if (v628 != 118) {
                            return result;
                          }
                          uint64_t v767 = sub_2225C3C70((uint64_t)v1210);
                          if (*(_DWORD *)(v767 + 6) == 1952541807 && *(_DWORD *)(v767 + 9) == 1701603700)
                          {
                            sub_2225C3D00((int)v893, "__is_volatile");
                            uint64_t v6 = *(void *)(v0 + 168);
                            uint64_t v7 = v893[0];
                            uint64_t v8 = v893[1];
                            __int16 v9 = 239;
                            goto LABEL_312;
                          }
                        }
                        break;
                    }
                  }
                  return 0;
                default:
                  if (v438 != 70) {
                    return result;
                  }
                  uint64_t v590 = sub_2225C3C70((uint64_t)v1210);
                  if (*(void *)(v590 + 3) != 0x454D414E44434E55 || *(_WORD *)(v590 + 11) != 24415) {
                    return 0;
                  }
                  sub_2225C3D00((int)v902, "__FUNCDNAME__");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v902[0];
                  uint64_t v8 = v902[1];
                  __int16 v9 = 181;
                  break;
              }
              goto LABEL_2297;
            }
            if (v223 == 84)
            {
              uint64_t v224 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v224 + 2) == 0x6F6C5F6461657268 && *(void *)(v224 + 5) == 0x6C61636F6C5F6461)
              {
                sub_2225C3D00((int)v903, "_Thread_local");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v903[0];
                uint64_t v8 = v903[1];
                __int16 v9 = 118;
                goto LABEL_2448;
              }
            }
            break;
          case 'i':
            int v44 = sub_2225CC124(v1210, 1);
            if (v44 == 109)
            {
              uint64_t v427 = sub_2225C3C70((uint64_t)v1210);
              if (*(_WORD *)(v427 + 2) == 26465 && *(unsigned char *)(v427 + 4) == 101)
              {
                int v429 = sub_2225CC124(v1210, 5);
                if (v429 == 50)
                {
                  uint64_t v645 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v645 + 6) == 1634227012 && *(_DWORD *)(v645 + 9) == 2003788897)
                  {
                    sub_2225C3D00((int)v889, "image2DShadow");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v889[0];
                    uint64_t v8 = v889[1];
                    __int16 v9 = 352;
                    goto LABEL_2558;
                  }
                }
                else if (v429 == 49)
                {
                  uint64_t v430 = sub_2225C3C70((uint64_t)v1210);
                  if (*(_DWORD *)(v430 + 6) == 1634227012 && *(_DWORD *)(v430 + 9) == 2003788897)
                  {
                    sub_2225C3D00((int)v890, "image1DShadow");
                    uint64_t v6 = *(void *)(v0 + 168);
                    uint64_t v7 = v890[0];
                    uint64_t v8 = v890[1];
                    __int16 v9 = 345;
                    goto LABEL_2558;
                  }
                }
              }
            }
            else if (v44 == 105 && *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) == 1701273965)
            {
              int v45 = sub_2225CC124(v1210, 6);
              if (v45 == 50)
              {
                uint64_t v639 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v639 + 7) == 1920090436 && *(_WORD *)(v639 + 11) == 31073)
                {
                  sub_2225C3D00((int)v891, "iimage2DArray");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v891[0];
                  uint64_t v8 = v891[1];
                  __int16 v9 = 334;
                  goto LABEL_2558;
                }
              }
              else if (v45 == 49)
              {
                uint64_t v46 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v46 + 7) == 1920090436 && *(_WORD *)(v46 + 11) == 31073)
                {
                  sub_2225C3D00((int)v892, "iimage1DArray");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v892[0];
                  uint64_t v8 = v892[1];
                  __int16 v9 = 332;
                  goto LABEL_2558;
                }
              }
            }
            break;
          default:
            return result;
        }
        return 0;
      }
      if (v43 == 110)
      {
        uint64_t v232 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v232 + 1) == 0x636570737265706FLL && *(_DWORD *)(v232 + 9) == 1702259060)
        {
          sub_2225C3D00((int)v888, "noperspective");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v888[0];
          uint64_t v8 = v888[1];
          __int16 v9 = 394;
          goto LABEL_2558;
        }
        return 0;
      }
      if (v43 != 115)
      {
        if (v43 != 117) {
          return result;
        }
        uint64_t v130 = sub_2225C3C70((uint64_t)v1210);
        if (*(_DWORD *)(v130 + 1) == 1734438249 && *(unsigned char *)(v130 + 5) == 101)
        {
          int v132 = sub_2225CC124(v1210, 6);
          if (v132 == 50)
          {
            uint64_t v540 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v540 + 7) == 1920090436 && *(_WORD *)(v540 + 11) == 31073)
            {
              sub_2225C3D00((int)v882, "uimage2DArray");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v882[0];
              uint64_t v8 = v882[1];
              __int16 v9 = 429;
              goto LABEL_2558;
            }
          }
          else if (v132 == 49)
          {
            uint64_t v133 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v133 + 7) == 1920090436 && *(_WORD *)(v133 + 11) == 31073)
            {
              sub_2225C3D00((int)v883, "uimage1DArray");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v883[0];
              uint64_t v8 = v883[1];
              __int16 v9 = 427;
              goto LABEL_2558;
            }
          }
        }
        return 0;
      }
      int v234 = sub_2225CC124(v1210, 1);
      if (v234 != 116)
      {
        if (v234 == 97)
        {
          uint64_t v235 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v235 + 2) == 1701605485 && *(unsigned char *)(v235 + 6) == 114)
          {
            int v237 = sub_2225CC124(v1210, 7);
            switch(v237)
            {
              case 'B':
                uint64_t v697 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v697 + 8) == 1701209717 && *(unsigned char *)(v697 + 12) == 114)
                {
                  sub_2225C3D00((int)v885, "samplerBuffer");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v885[0];
                  uint64_t v8 = v885[1];
                  __int16 v9 = 418;
                  goto LABEL_2558;
                }
                break;
              case '3':
                uint64_t v699 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v699 + 8) == 1667584580 && *(unsigned char *)(v699 + 12) == 116)
                {
                  sub_2225C3D00((int)v886, "sampler3DRect");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v886[0];
                  uint64_t v8 = v886[1];
                  __int16 v9 = 417;
                  goto LABEL_2558;
                }
                break;
              case '2':
                uint64_t v238 = sub_2225C3C70((uint64_t)v1210);
                if (*(_DWORD *)(v238 + 8) == 1667584580 && *(unsigned char *)(v238 + 12) == 116)
                {
                  sub_2225C3D00((int)v887, "sampler2DRect");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v887[0];
                  uint64_t v8 = v887[1];
                  __int16 v9 = 413;
                  goto LABEL_2558;
                }
                break;
            }
          }
        }
        return 0;
      }
      uint64_t v444 = sub_2225C3C70((uint64_t)v1210);
      if (*(void *)(v444 + 2) != 0x7373615F63697461 || *(void *)(v444 + 5) != 0x7472657373615F63) {
        return 0;
      }
      sub_2225C3D00((int)v884, "static_assert");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v884[0];
      uint64_t v8 = v884[1];
      __int16 v9 = 160;
LABEL_1334:
      unsigned int v26 = 4;
      return sub_222606A20(v7, v8, v9, v26, v6, v0);
    case 14:
      int v48 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v48 > 114)
      {
        if (v48 == 115)
        {
          uint64_t v189 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v189 + 1) == 1819307361 && *(_WORD *)(v189 + 5) == 29285)
          {
            int v191 = sub_2225CC124(v1210, 7);
            if (v191 == 50)
            {
              uint64_t v500 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v500 + 8) == 1920090436 && *(_WORD *)(v500 + 12) == 31073)
              {
                sub_2225C3D00((int)v873, "sampler2DArray");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v873[0];
                uint64_t v8 = v873[1];
                __int16 v9 = 409;
                goto LABEL_2558;
              }
            }
            else if (v191 == 49)
            {
              uint64_t v192 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v192 + 8) == 1920090436 && *(_WORD *)(v192 + 12) == 31073)
              {
                sub_2225C3D00((int)v874, "sampler1DArray");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v874[0];
                uint64_t v8 = v874[1];
                __int16 v9 = 405;
                goto LABEL_2558;
              }
            }
          }
        }
        else
        {
          if (v48 != 117) {
            return result;
          }
          uint64_t v135 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v135 + 1) == 1886216563 && *(_DWORD *)(v135 + 4) == 1919249520)
          {
            int v137 = sub_2225CC124(v1210, 8);
            if (v137 == 66)
            {
              uint64_t v492 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v492 + 9) == 1701209717 && *(unsigned char *)(v492 + 13) == 114)
              {
                sub_2225C3D00((int)v871, "usamplerBuffer");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v871[0];
                uint64_t v8 = v871[1];
                __int16 v9 = 448;
                goto LABEL_2558;
              }
            }
            else if (v137 == 50)
            {
              uint64_t v138 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v138 + 9) == 1667584580 && *(unsigned char *)(v138 + 13) == 116)
              {
                sub_2225C3D00((int)v872, "usampler2DRect");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v872[0];
                uint64_t v8 = v872[1];
                __int16 v9 = 446;
                goto LABEL_2558;
              }
            }
          }
        }
        return 0;
      }
      if (v48 == 95)
      {
        int v168 = sub_2225CC124(v1210, 1);
        if (v168 == 95)
        {
          int v387 = sub_2225CC124(v1210, 2);
          if (v387 == 105)
          {
            uint64_t v531 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v531 + 3) == 0x6572656665725F73 && *(void *)(v531 + 6) == 0x65636E6572656665)
            {
              sub_2225C3D00((int)v879, "__is_reference");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v879[0];
              uint64_t v8 = v879[1];
              __int16 v9 = 227;
              goto LABEL_312;
            }
          }
          else if (v387 == 97)
          {
            uint64_t v388 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v388 + 3) == 0x7478655F79617272 && *(void *)(v388 + 6) == 0x746E657478655F79)
            {
              sub_2225C3D00((int)v880, "__array_extent");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v880[0];
              uint64_t v8 = v880[1];
              __int16 v9 = 246;
              goto LABEL_312;
            }
          }
        }
        else if (v168 == 83)
        {
          uint64_t v169 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v169 + 2) == 0x73615F6369746174 && *(_DWORD *)(v169 + 10) == 1953654131)
          {
            sub_2225C3D00((int)v881, "_Static_assert");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v881[0];
            uint64_t v8 = v881[1];
            __int16 v9 = 117;
            goto LABEL_2448;
          }
        }
        return 0;
      }
      if (v48 != 105) {
        return result;
      }
      int v49 = sub_2225CC124(v1210, 1);
      if (v49 == 115)
      {
        uint64_t v369 = sub_2225C3C70((uint64_t)v1210);
        if (*(_DWORD *)(v369 + 2) == 1819307361 && *(_WORD *)(v369 + 6) == 29285)
        {
          int v371 = sub_2225CC124(v1210, 8);
          if (v371 == 66)
          {
            uint64_t v618 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v618 + 9) == 1701209717 && *(unsigned char *)(v618 + 13) == 114)
            {
              sub_2225C3D00((int)v875, "isamplerBuffer");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v875[0];
              uint64_t v8 = v875[1];
              __int16 v9 = 372;
              goto LABEL_2558;
            }
          }
          else if (v371 == 50)
          {
            uint64_t v372 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v372 + 9) == 1667584580 && *(unsigned char *)(v372 + 13) == 116)
            {
              sub_2225C3D00((int)v876, "isampler2DRect");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v876[0];
              uint64_t v8 = v876[1];
              __int16 v9 = 369;
              goto LABEL_2558;
            }
          }
        }
        return 0;
      }
      if (v49 != 109) {
        return 0;
      }
      uint64_t v50 = sub_2225C3C70((uint64_t)v1210);
      if (*(_WORD *)(v50 + 2) != 26465 || *(unsigned char *)(v50 + 4) != 101) {
        return 0;
      }
      int v52 = sub_2225CC124(v1210, 5);
      if (v52 != 67)
      {
        if (v52 == 50 && *(void *)(sub_2225C3C70((uint64_t)v1210) + 6) == 0x7961727241534D44)
        {
          sub_2225C3D00((int)v878, "image2DMSArray");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v878[0];
          uint64_t v8 = v878[1];
          __int16 v9 = 350;
          goto LABEL_464;
        }
        return 0;
      }
      if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 6) != 0x7961727241656275) {
        return 0;
      }
      sub_2225C3D00((int)v877, "imageCubeArray");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v877[0];
      uint64_t v8 = v877[1];
      __int16 v9 = 356;
      goto LABEL_464;
    case 15:
      int v53 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v53 > 114)
      {
        if (v53 == 115)
        {
          uint64_t v194 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v194 + 1) == 1819307361 && *(_WORD *)(v194 + 5) == 29285)
          {
            int v196 = sub_2225CC124(v1210, 7);
            if (v196 == 50)
            {
              uint64_t v502 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v502 + 8) == 1634227012 && *(_DWORD *)(v502 + 11) == 2003788897)
              {
                sub_2225C3D00((int)v862, "sampler2DShadow");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v862[0];
                uint64_t v8 = v862[1];
                __int16 v9 = 415;
                goto LABEL_2558;
              }
            }
            else if (v196 == 49)
            {
              uint64_t v197 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v197 + 8) == 1634227012 && *(_DWORD *)(v197 + 11) == 2003788897)
              {
                sub_2225C3D00((int)v863, "sampler1DShadow");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v863[0];
                uint64_t v8 = v863[1];
                __int16 v9 = 407;
                goto LABEL_2558;
              }
            }
          }
          return 0;
        }
        if (v53 != 117) {
          return result;
        }
        int v140 = sub_2225CC124(v1210, 1);
        if (v140 == 115)
        {
          uint64_t v381 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v381 + 2) == 1819307361 && *(_WORD *)(v381 + 6) == 29285)
          {
            int v383 = sub_2225CC124(v1210, 8);
            if (v383 == 50)
            {
              uint64_t v622 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v622 + 9) == 1920090436 && *(_WORD *)(v622 + 13) == 31073)
              {
                sub_2225C3D00((int)v858, "usampler2DArray");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v858[0];
                uint64_t v8 = v858[1];
                __int16 v9 = 443;
                goto LABEL_2558;
              }
            }
            else if (v383 == 49)
            {
              uint64_t v384 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v384 + 9) == 1920090436 && *(_WORD *)(v384 + 13) == 31073)
              {
                sub_2225C3D00((int)v859, "usampler1DArray");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v859[0];
                uint64_t v8 = v859[1];
                __int16 v9 = 441;
                goto LABEL_2558;
              }
            }
          }
          return 0;
        }
        if (v140 != 105 || *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1701273965) {
          return 0;
        }
        int v141 = sub_2225CC124(v1210, 6);
        if (v141 != 67)
        {
          if (v141 == 50 && *(void *)(sub_2225C3C70((uint64_t)v1210) + 7) == 0x7961727241534D44)
          {
            sub_2225C3D00((int)v861, "uimage2DMSArray");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v861[0];
            uint64_t v8 = v861[1];
            __int16 v9 = 431;
            goto LABEL_464;
          }
          return 0;
        }
        if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 7) != 0x7961727241656275) {
          return 0;
        }
        sub_2225C3D00((int)v860, "uimageCubeArray");
        uint64_t v6 = *(void *)(v0 + 168);
        uint64_t v7 = v860[0];
        uint64_t v8 = v860[1];
        __int16 v9 = 436;
      }
      else
      {
        if (v53 == 95)
        {
          if (sub_2225CC124(v1210, 1) != 95) {
            return 0;
          }
          int v171 = sub_2225CC124(v1210, 2);
          if (v171 == 105)
          {
            int v476 = sub_2225CC124(v1210, 3);
            if (v476 == 115)
            {
              uint64_t v599 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v599 + 4) == 0x656D68746972615FLL && *(void *)(v599 + 7) == 0x636974656D687469)
              {
                sub_2225C3D00((int)v868, "__is_arithmetic");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v868[0];
                uint64_t v8 = v868[1];
                __int16 v9 = 220;
                goto LABEL_312;
              }
            }
            else if (v476 == 102)
            {
              uint64_t v477 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v477 + 4) == 0x6978655F746F6E5FLL && *(void *)(v477 + 7) == 0x7374736978655F74)
              {
                sub_2225C3D00((int)v869, "__if_not_exists");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v869[0];
                uint64_t v8 = v869[1];
                __int16 v9 = 288;
                goto LABEL_2297;
              }
            }
          }
          else if (v171 == 98)
          {
            uint64_t v172 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v172 + 3) == 0x65725F6567646972 && *(_DWORD *)(v172 + 11) == 1852399988)
            {
              sub_2225C3D00((int)v870, "__bridge_retain");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v870[0];
              uint64_t v8 = v870[1];
              __int16 v9 = 273;
              goto LABEL_490;
            }
          }
          return 0;
        }
        if (v53 != 105) {
          return result;
        }
        int v54 = sub_2225CC124(v1210, 1);
        if (v54 == 115)
        {
          uint64_t v374 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v374 + 2) == 1819307361 && *(_WORD *)(v374 + 6) == 29285)
          {
            int v376 = sub_2225CC124(v1210, 8);
            if (v376 == 50)
            {
              uint64_t v620 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v620 + 9) == 1920090436 && *(_WORD *)(v620 + 13) == 31073)
              {
                sub_2225C3D00((int)v864, "isampler2DArray");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v864[0];
                uint64_t v8 = v864[1];
                __int16 v9 = 366;
                goto LABEL_2558;
              }
            }
            else if (v376 == 49)
            {
              uint64_t v377 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v377 + 9) == 1920090436 && *(_WORD *)(v377 + 13) == 31073)
              {
                sub_2225C3D00((int)v865, "isampler1DArray");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v865[0];
                uint64_t v8 = v865[1];
                __int16 v9 = 364;
                goto LABEL_2558;
              }
            }
          }
          return 0;
        }
        if (v54 != 105 || *(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 2) != 1701273965) {
          return 0;
        }
        int v55 = sub_2225CC124(v1210, 6);
        if (v55 != 67)
        {
          if (v55 == 50 && *(void *)(sub_2225C3C70((uint64_t)v1210) + 7) == 0x7961727241534D44)
          {
            sub_2225C3D00((int)v867, "iimage2DMSArray");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v867[0];
            uint64_t v8 = v867[1];
            __int16 v9 = 336;
            goto LABEL_464;
          }
          return 0;
        }
        if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 7) != 0x7961727241656275) {
          return 0;
        }
        sub_2225C3D00((int)v866, "iimageCubeArray");
        uint64_t v6 = *(void *)(v0 + 168);
        uint64_t v7 = v866[0];
        uint64_t v8 = v866[1];
        __int16 v9 = 341;
      }
      goto LABEL_464;
    case 16:
      int v56 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v56 > 113)
      {
        if (v56 == 114)
        {
          uint64_t v199 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v199 + 1) == 0x72707265746E6965 && *(void *)(v199 + 8) == 0x747361635F746572)
          {
            sub_2225C3D00((int)v849, "reinterpret_cast");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v849[0];
            uint64_t v8 = v849[1];
            __int16 v9 = 140;
            goto LABEL_312;
          }
          return 0;
        }
        if (v56 != 115) {
          return result;
        }
        uint64_t v142 = sub_2225C3C70((uint64_t)v1210);
        if (*(_DWORD *)(v142 + 1) != 1819307361 || *(_WORD *)(v142 + 5) != 29285) {
          return 0;
        }
        int v144 = sub_2225CC124(v1210, 7);
        if (v144 != 67)
        {
          if (v144 == 50 && *(void *)(sub_2225C3C70((uint64_t)v1210) + 8) == 0x7961727241534D44)
          {
            sub_2225C3D00((int)v848, "sampler2DMSArray");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v848[0];
            uint64_t v8 = v848[1];
            __int16 v9 = 412;
            goto LABEL_2558;
          }
          return 0;
        }
        if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 8) != 0x7961727241656275) {
          return 0;
        }
        sub_2225C3D00((int)v847, "samplerCubeArray");
        uint64_t v6 = *(void *)(v0 + 168);
        uint64_t v7 = v847[0];
        uint64_t v8 = v847[1];
        __int16 v9 = 420;
        goto LABEL_464;
      }
      if (v56 != 95)
      {
        if (v56 != 105) {
          return result;
        }
        uint64_t v57 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v57 + 1) == 0x3272656C706D6173 && *(void *)(v57 + 8) == 0x776F646168534432)
        {
          sub_2225C3D00((int)v850, "isampler2DShadow");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v850[0];
          uint64_t v8 = v850[1];
          __int16 v9 = 370;
          goto LABEL_2558;
        }
        return 0;
      }
      if (sub_2225CC124(v1210, 1) != 95) {
        return 0;
      }
      int v174 = sub_2225CC124(v1210, 2);
      if (v174 == 105)
      {
        if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
          return 0;
        }
        int v479 = sub_2225CC124(v1210, 5);
        uint64_t result = 0;
        if (v479 <= 107)
        {
          if (v479 == 99)
          {
            uint64_t v737 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v737 + 6) == 0x6269747265766E6FLL && *(_WORD *)(v737 + 14) == 25964)
            {
              sub_2225C3D00((int)v855, "__is_convertible");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v855[0];
              uint64_t v8 = v855[1];
              __int16 v9 = 244;
              goto LABEL_312;
            }
          }
          else
          {
            if (v479 != 102) {
              return result;
            }
            uint64_t v680 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v680 + 6) == 0x746E656D61646E75 && *(_WORD *)(v680 + 14) == 27745)
            {
              sub_2225C3D00((int)v854, "__is_fundamental");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v854[0];
              uint64_t v8 = v854[1];
              __int16 v9 = 230;
              goto LABEL_312;
            }
          }
        }
        else
        {
          switch(v479)
          {
            case 'l':
              uint64_t v731 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v731 + 6) == 0x78655F65756C6176 && *(_WORD *)(v731 + 14) == 29296)
              {
                sub_2225C3D00((int)v853, "__is_lvalue_expr");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v853[0];
                uint64_t v8 = v853[1];
                __int16 v9 = 218;
                goto LABEL_312;
              }
              break;
            case 'p':
              uint64_t v733 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v733 + 6) == 0x6870726F6D796C6FLL && *(_WORD *)(v733 + 14) == 25449)
              {
                sub_2225C3D00((int)v852, "__is_polymorphic");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v852[0];
                uint64_t v8 = v852[1];
                __int16 v9 = 211;
                goto LABEL_312;
              }
              break;
            case 'r':
              uint64_t v480 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v480 + 6) == 0x78655F65756C6176 && *(_WORD *)(v480 + 14) == 29296)
              {
                sub_2225C3D00((int)v851, "__is_rvalue_expr");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v851[0];
                uint64_t v8 = v851[1];
                __int16 v9 = 219;
                goto LABEL_312;
              }
              break;
            default:
              return result;
          }
        }
        return 0;
      }
      if (v174 != 98) {
        return 0;
      }
      uint64_t v175 = sub_2225C3C70((uint64_t)v1210);
      if (*(_DWORD *)(v175 + 3) != 1953261941 || *(_DWORD *)(v175 + 6) != 1601071476) {
        return 0;
      }
      int v177 = sub_2225CC124(v1210, 10);
      if (v177 == 118)
      {
        uint64_t v701 = sub_2225C3C70((uint64_t)v1210);
        if (*(_DWORD *)(v701 + 11) == 1918984033 && *(unsigned char *)(v701 + 15) == 103)
        {
          sub_2225C3D00((int)v856, "__builtin_va_arg");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v856[0];
          uint64_t v8 = v856[1];
          __int16 v9 = 171;
          goto LABEL_2448;
        }
        return 0;
      }
      if (v177 != 97) {
        return 0;
      }
      uint64_t v178 = sub_2225C3C70((uint64_t)v1210);
      if (*(_DWORD *)(v178 + 11) != 1887007859 || *(unsigned char *)(v178 + 15) != 101) {
        return 0;
      }
      sub_2225C3D00((int)v857, "__builtin_astype");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v857[0];
      uint64_t v8 = v857[1];
      __int16 v9 = 264;
LABEL_2088:
      unsigned int v26 = 512;
      return sub_222606A20(v7, v8, v9, v26, v6, v0);
    case 17:
      int v59 = sub_2225CC124(v1210, 0);
      uint64_t result = 0;
      if (v59 <= 114)
      {
        if (v59 != 95)
        {
          if (v59 != 105) {
            return result;
          }
          uint64_t v60 = sub_2225C3C70((uint64_t)v1210);
          if (*(_DWORD *)(v60 + 1) == 1886216563 && *(_DWORD *)(v60 + 4) == 1919249520)
          {
            int v62 = sub_2225CC124(v1210, 8);
            if (v62 != 67)
            {
              if (v62 == 50 && *(void *)(sub_2225C3C70((uint64_t)v1210) + 9) == 0x7961727241534D44)
              {
                sub_2225C3D00((int)v842, "isampler2DMSArray");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v842[0];
                uint64_t v8 = v842[1];
                __int16 v9 = 368;
                goto LABEL_2558;
              }
              return 0;
            }
            if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 9) == 0x7961727241656275)
            {
              sub_2225C3D00((int)v841, "isamplerCubeArray");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v841[0];
              uint64_t v8 = v841[1];
              __int16 v9 = 374;
LABEL_464:
              unsigned int v26 = 0x100000;
              return sub_222606A20(v7, v8, v9, v26, v6, v0);
            }
          }
          return 0;
        }
        if (sub_2225CC124(v1210, 1) != 95) {
          return 0;
        }
        int v180 = sub_2225CC124(v1210, 2);
        switch(v180)
        {
          case 'u':
            uint64_t v494 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v494 + 3) != 0x6E69796C7265646ELL || *(void *)(v494 + 9) != 0x657079745F676E69) {
              return 0;
            }
            sub_2225C3D00((int)v843, "__underlying_type");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v843[0];
            uint64_t v8 = v843[1];
            __int16 v9 = 217;
LABEL_312:
            unsigned int v26 = 2;
            break;
          case 'i':
            uint64_t v496 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v496 + 3) != 0x7572747365645F73 || *(void *)(v496 + 9) != 0x656C626974637572) {
              return 0;
            }
            sub_2225C3D00((int)v844, "__is_destructible");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v844[0];
            uint64_t v8 = v844[1];
            __int16 v9 = 186;
LABEL_2297:
            unsigned int v26 = 16;
            break;
          case 'b':
            uint64_t v181 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v181 + 3) != 1734633842 || *(_WORD *)(v181 + 7) != 24421) {
              return 0;
            }
            int v183 = sub_2225CC124(v1210, 9);
            if (v183 == 116)
            {
              uint64_t v714 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v714 + 10) != 1936613746 || *(_DWORD *)(v714 + 13) != 1919247987) {
                return 0;
              }
              sub_2225C3D00((int)v845, "__bridge_transfer");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v845[0];
              uint64_t v8 = v845[1];
              __int16 v9 = 271;
            }
            else
            {
              if (v183 != 114) {
                return 0;
              }
              uint64_t v184 = sub_2225C3C70((uint64_t)v1210);
              if (*(_DWORD *)(v184 + 10) != 1767994469 || *(_DWORD *)(v184 + 13) != 1684369001) {
                return 0;
              }
              sub_2225C3D00((int)v846, "__bridge_retained");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v846[0];
              uint64_t v8 = v846[1];
              __int16 v9 = 272;
            }
LABEL_490:
            unsigned int v26 = 2048;
            return sub_222606A20(v7, v8, v9, v26, v6, v0);
          default:
            return 0;
        }
        return sub_222606A20(v7, v8, v9, v26, v6, v0);
      }
      if (v59 == 115)
      {
        uint64_t v201 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v201 + 1) != 0x754372656C706D61 || *(void *)(v201 + 9) != 0x776F646168536562) {
          return 0;
        }
        sub_2225C3D00((int)v840, "samplerCubeShadow");
        uint64_t v6 = *(void *)(v0 + 168);
        uint64_t v7 = v840[0];
        uint64_t v8 = v840[1];
        __int16 v9 = 422;
LABEL_2558:
        unsigned int v26 = 0x8000;
        return sub_222606A20(v7, v8, v9, v26, v6, v0);
      }
      if (v59 != 117) {
        return result;
      }
      uint64_t v145 = sub_2225C3C70((uint64_t)v1210);
      if (*(_DWORD *)(v145 + 1) == 1886216563 && *(_DWORD *)(v145 + 4) == 1919249520)
      {
        int v147 = sub_2225CC124(v1210, 8);
        if (v147 != 67)
        {
          if (v147 == 50 && *(void *)(sub_2225C3C70((uint64_t)v1210) + 9) == 0x7961727241534D44)
          {
            sub_2225C3D00((int)v839, "usampler2DMSArray");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v839[0];
            uint64_t v8 = v839[1];
            __int16 v9 = 445;
            goto LABEL_2558;
          }
          return 0;
        }
        if (*(void *)(sub_2225C3C70((uint64_t)v1210) + 9) == 0x7961727241656275)
        {
          sub_2225C3D00((int)v838, "usamplerCubeArray");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v838[0];
          uint64_t v8 = v838[1];
          __int16 v9 = 450;
          goto LABEL_464;
        }
      }
      return 0;
    case 18:
      int v63 = sub_2225CC124(v1210, 0);
      if (v63 == 105)
      {
        if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 1) != 1701273965) {
          return 0;
        }
        int v151 = sub_2225CC124(v1210, 5);
        if (v151 == 50)
        {
          uint64_t v452 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v452 + 6) == 0x6853796172724144 && *(_DWORD *)(v452 + 14) == 2003788897)
          {
            sub_2225C3D00((int)v828, "image2DArrayShadow");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v828[0];
            uint64_t v8 = v828[1];
            __int16 v9 = 348;
            goto LABEL_2558;
          }
        }
        else if (v151 == 49)
        {
          uint64_t v152 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v152 + 6) == 0x6853796172724144 && *(_DWORD *)(v152 + 14) == 2003788897)
          {
            sub_2225C3D00((int)v829, "image1DArrayShadow");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v829[0];
            uint64_t v8 = v829[1];
            __int16 v9 = 344;
            goto LABEL_2558;
          }
        }
      }
      else if (v63 == 95 && sub_2225CC124(v1210, 1) == 95)
      {
        int v64 = sub_2225CC124(v1210, 2);
        uint64_t result = 0;
        switch(v64)
        {
          case 'b':
            uint64_t v65 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v65 + 3) != 0x6F5F6E69746C6975 || *(void *)(v65 + 10) != 0x666F74657366666FLL) {
              return 0;
            }
            sub_2225C3D00((int)v837, "__builtin_offsetof");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v837[0];
            uint64_t v8 = v837[1];
            __int16 v9 = 169;
            goto LABEL_2448;
          case 'h':
            uint64_t v505 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v505 + 3) != 29537 || *(unsigned char *)(v505 + 5) != 95) {
              return 0;
            }
            int v507 = sub_2225CC124(v1210, 6);
            if (v507 == 116)
            {
              uint64_t v716 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v716 + 7) == 0x635F6C6169766972 && *(void *)(v716 + 10) == 0x79706F635F6C6169)
              {
                sub_2225C3D00((int)v835, "__has_trivial_copy");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v835[0];
                uint64_t v8 = v835[1];
                __int16 v9 = 197;
                goto LABEL_312;
              }
            }
            else if (v507 == 110)
            {
              uint64_t v508 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v508 + 7) == 0x635F776F7268746FLL && *(void *)(v508 + 10) == 0x79706F635F776F72)
              {
                sub_2225C3D00((int)v836, "__has_nothrow_copy");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v836[0];
                uint64_t v8 = v836[1];
                __int16 v9 = 193;
                goto LABEL_312;
              }
            }
            return 0;
          case 'i':
            if (*(_DWORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 1868783475) {
              return 0;
            }
            int v510 = sub_2225CC124(v1210, 7);
            if (v510 == 110)
            {
              uint64_t v718 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v718 + 8) == 0x6269746375727473 && *(_WORD *)(v718 + 16) == 25964)
              {
                sub_2225C3D00((int)v833, "__is_constructible");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v833[0];
                uint64_t v8 = v833[1];
                __int16 v9 = 189;
                goto LABEL_312;
              }
            }
            else if (v510 == 109)
            {
              uint64_t v511 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v511 + 8) == 0x79745F6574656C70 && *(_WORD *)(v511 + 16) == 25968)
              {
                sub_2225C3D00((int)v834, "__is_complete_type");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v834[0];
                uint64_t v8 = v834[1];
                __int16 v9 = 223;
                goto LABEL_312;
              }
            }
            break;
          case 'm':
            uint64_t v513 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v513 + 3) != 0x72705F656C75646FLL || *(void *)(v513 + 10) != 0x5F5F657461766972) {
              return 0;
            }
            sub_2225C3D00((int)v832, "__module_private__");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v832[0];
            uint64_t v8 = v832[1];
            __int16 v9 = 248;
            goto LABEL_2448;
          case 'n':
            uint64_t v515 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v515 + 3) != 0x70736E755F6C6C75 || *(void *)(v515 + 10) != 0x6465696669636570) {
              return 0;
            }
            sub_2225C3D00((int)v831, "__null_unspecified");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v831[0];
            uint64_t v8 = v831[1];
            __int16 v9 = 276;
            goto LABEL_2448;
          case 'p':
            uint64_t v517 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v517 + 3) != 0x655F657461766972 || *(void *)(v517 + 10) != 0x5F5F6E7265747865) {
              return 0;
            }
            sub_2225C3D00((int)v830, "__private_extern__");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v830[0];
            uint64_t v8 = v830[1];
            __int16 v9 = 247;
            goto LABEL_2448;
          default:
            return result;
        }
      }
      return 0;
    case 19:
      int v67 = sub_2225CC124(v1210, 0);
      if (v67 == 115)
      {
        uint64_t v154 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v154 + 1) == 0x443272656C706D61
          && *(void *)(v154 + 9) == 0x6461685374636552
          && *(_WORD *)(v154 + 17) == 30575)
        {
          sub_2225C3D00((int)v823, "sampler2DRectShadow");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v823[0];
          uint64_t v8 = v823[1];
          __int16 v9 = 414;
          goto LABEL_2558;
        }
      }
      else if (v67 == 95 && sub_2225CC124(v1210, 1) == 95)
      {
        int v68 = sub_2225CC124(v1210, 2);
        if (v68 == 105)
        {
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
            return 0;
          }
          int v424 = sub_2225CC124(v1210, 5);
          switch(v424)
          {
            case 'm':
              uint64_t v670 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v670 + 6) == 0x6F705F7265626D65 && *(void *)(v670 + 11) == 0x7265746E696F705FLL)
              {
                sub_2225C3D00((int)v824, "__is_member_pointer");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v824[0];
                uint64_t v8 = v824[1];
                __int16 v9 = 237;
                goto LABEL_312;
              }
              break;
            case 'f':
              uint64_t v672 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v672 + 6) == 0x5F676E6974616F6CLL && *(void *)(v672 + 11) == 0x746E696F705F676ELL)
              {
                sub_2225C3D00((int)v825, "__is_floating_point");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v825[0];
                uint64_t v8 = v825[1];
                __int16 v9 = 221;
                goto LABEL_312;
              }
              break;
            case 'c':
              uint64_t v425 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v425 + 6) == 0x6269747265766E6FLL && *(void *)(v425 + 11) == 0x6F745F656C626974)
              {
                sub_2225C3D00((int)v826, "__is_convertible_to");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v826[0];
                uint64_t v8 = v826[1];
                __int16 v9 = 205;
                goto LABEL_312;
              }
              break;
          }
        }
        else if (v68 == 80)
        {
          uint64_t v69 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v69 + 3) == 0x55465F5954544552 && *(void *)(v69 + 11) == 0x5F5F4E4F4954434ELL)
          {
            sub_2225C3D00((int)v827, "__PRETTY_FUNCTION__");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v827[0];
            uint64_t v8 = v827[1];
            __int16 v9 = 179;
            goto LABEL_2448;
          }
        }
      }
      return 0;
    case 20:
      int v71 = sub_2225CC124(v1210, 0);
      if (v71 == 115)
      {
        uint64_t v157 = sub_2225C3C70((uint64_t)v1210);
        if (*(_DWORD *)(v157 + 1) == 1819307361 && *(_WORD *)(v157 + 5) == 29285)
        {
          int v159 = sub_2225CC124(v1210, 7);
          if (v159 == 50)
          {
            uint64_t v454 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v454 + 8) == 0x6853796172724144 && *(_DWORD *)(v454 + 16) == 2003788897)
            {
              sub_2225C3D00((int)v816, "sampler2DArrayShadow");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v816[0];
              uint64_t v8 = v816[1];
              __int16 v9 = 410;
              goto LABEL_2558;
            }
          }
          else if (v159 == 49)
          {
            uint64_t v160 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v160 + 8) == 0x6853796172724144 && *(_DWORD *)(v160 + 16) == 2003788897)
            {
              sub_2225C3D00((int)v817, "sampler1DArrayShadow");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v817[0];
              uint64_t v8 = v817[1];
              __int16 v9 = 406;
              goto LABEL_2558;
            }
          }
        }
      }
      else if (v71 == 95 && sub_2225CC124(v1210, 1) == 95)
      {
        int v72 = sub_2225CC124(v1210, 2);
        switch(v72)
        {
          case 's':
            uint64_t v446 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v446 + 3) == 0x6E695F656C676E69
              && *(void *)(v446 + 11) == 0x636E617469726568
              && *(unsigned char *)(v446 + 19) == 101)
            {
              sub_2225C3D00((int)v818, "__single_inheritance");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v818[0];
              uint64_t v8 = v818[1];
              __int16 v9 = 289;
              goto LABEL_2297;
            }
            break;
          case 'i':
            if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
              return 0;
            }
            int v449 = sub_2225CC124(v1210, 5);
            if (v449 == 115)
            {
              uint64_t v674 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v674 + 6) == 0x5F647261646E6174 && *(void *)(v674 + 12) == 0x74756F79616C5F64)
              {
                sub_2225C3D00((int)v819, "__is_standard_layout");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v819[0];
                uint64_t v8 = v819[1];
                __int16 v9 = 240;
                goto LABEL_312;
              }
            }
            else if (v449 == 105)
            {
              uint64_t v450 = sub_2225C3C70((uint64_t)v1210);
              if (*(void *)(v450 + 6) == 0x656361667265746ELL && *(void *)(v450 + 12) == 0x7373616C635F6563)
              {
                sub_2225C3D00((int)v820, "__is_interface_class");
                uint64_t v6 = *(void *)(v0 + 168);
                uint64_t v7 = v820[0];
                uint64_t v8 = v820[1];
                __int16 v9 = 184;
                goto LABEL_2297;
              }
            }
            break;
          case 'h':
            uint64_t v73 = sub_2225C3C70((uint64_t)v1210);
            if (*(_WORD *)(v73 + 3) == 29537 && *(unsigned char *)(v73 + 5) == 95)
            {
              int v75 = sub_2225CC124(v1210, 6);
              if (v75 == 116)
              {
                uint64_t v666 = sub_2225C3C70((uint64_t)v1210);
                if (*(void *)(v666 + 7) == 0x615F6C6169766972 && *(void *)(v666 + 12) == 0x6E67697373615F6CLL)
                {
                  sub_2225C3D00((int)v821, "__has_trivial_assign");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v821[0];
                  uint64_t v8 = v821[1];
                  __int16 v9 = 195;
                  goto LABEL_312;
                }
              }
              else if (v75 == 110)
              {
                uint64_t v76 = sub_2225C3C70((uint64_t)v1210);
                if (*(void *)(v76 + 7) == 0x615F776F7268746FLL && *(void *)(v76 + 12) == 0x6E67697373615F77)
                {
                  sub_2225C3D00((int)v822, "__has_nothrow_assign");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v822[0];
                  uint64_t v8 = v822[1];
                  __int16 v9 = 191;
                  goto LABEL_312;
                }
              }
            }
            break;
        }
      }
      return 0;
    case 21:
      if (*(_WORD *)sub_2225C3C70((uint64_t)v1210) != 24415) {
        return 0;
      }
      int v78 = sub_2225CC124(v1210, 2);
      switch(v78)
      {
        case 'v':
          uint64_t v264 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v264 + 3) == 0x695F6C6175747269
            && *(void *)(v264 + 11) == 0x6E6174697265686ELL
            && *(_WORD *)(v264 + 19) == 25955)
          {
            sub_2225C3D00((int)v812, "__virtual_inheritance");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v812[0];
            uint64_t v8 = v812[1];
            __int16 v9 = 291;
            goto LABEL_2297;
          }
          break;
        case 'i':
          if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
            return 0;
          }
          int v267 = sub_2225CC124(v1210, 5);
          if (v267 == 114)
          {
            uint64_t v592 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v592 + 6) == 0x65725F65756C6176 && *(void *)(v592 + 13) == 0x65636E6572656665)
            {
              sub_2225C3D00((int)v813, "__is_rvalue_reference");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v813[0];
              uint64_t v8 = v813[1];
              __int16 v9 = 229;
              goto LABEL_312;
            }
          }
          else if (v267 == 108)
          {
            uint64_t v268 = sub_2225C3C70((uint64_t)v1210);
            if (*(void *)(v268 + 6) == 0x65725F65756C6176 && *(void *)(v268 + 13) == 0x65636E6572656665)
            {
              sub_2225C3D00((int)v814, "__is_lvalue_reference");
              uint64_t v6 = *(void *)(v0 + 168);
              uint64_t v7 = v814[0];
              uint64_t v8 = v814[1];
              __int16 v9 = 228;
              goto LABEL_312;
            }
          }
          break;
        case 'b':
          uint64_t v79 = sub_2225C3C70((uint64_t)v1210);
          BOOL v80 = *(void *)(v79 + 3) == 0x635F6E69746C6975 && *(void *)(v79 + 11) == 0x78655F65736F6F68;
          if (v80 && *(_WORD *)(v79 + 19) == 29296)
          {
            sub_2225C3D00((int)v815, "__builtin_choose_expr");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v815[0];
            uint64_t v8 = v815[1];
            __int16 v9 = 168;
            goto LABEL_2448;
          }
          break;
      }
      return 0;
    case 22:
      int v82 = sub_2225CC124(v1210, 0);
      if (v82 == 115)
      {
        uint64_t v162 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v162 + 1) == 0x754372656C706D61
          && *(void *)(v162 + 9) == 0x5379617272416562
          && *(void *)(v162 + 14) == 0x776F646168537961)
        {
          sub_2225C3D00((int)v810, "samplerCubeArrayShadow");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v810[0];
          uint64_t v8 = v810[1];
          __int16 v9 = 421;
          goto LABEL_464;
        }
      }
      else if (v82 == 95)
      {
        uint64_t v83 = sub_2225C3C70((uint64_t)v1210);
        BOOL v84 = *(void *)(v83 + 1) == 0x6C7069746C756D5FLL && *(void *)(v83 + 9) == 0x697265686E695F65;
        if (v84 && *(void *)(v83 + 14) == 0x65636E6174697265)
        {
          sub_2225C3D00((int)v811, "__multiple_inheritance");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v811[0];
          uint64_t v8 = v811[1];
          __int16 v9 = 290;
          goto LABEL_2297;
        }
      }
      return 0;
    case 23:
      if (*(_WORD *)sub_2225C3C70((uint64_t)v1210) != 24415) {
        return 0;
      }
      int v86 = sub_2225CC124(v1210, 2);
      if (v86 == 105)
      {
        if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
          return 0;
        }
        int v240 = sub_2225CC124(v1210, 5);
        if (v240 == 116)
        {
          uint64_t v561 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v561 + 6) == 0x796C6C6169766972
            && *(void *)(v561 + 14) == 0x6C626179706F635FLL
            && *(unsigned char *)(v561 + 22) == 101)
          {
            sub_2225C3D00((int)v807, "__is_trivially_copyable");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v807[0];
            uint64_t v8 = v807[1];
            __int16 v9 = 215;
            goto LABEL_312;
          }
        }
        else if (v240 == 110)
        {
          uint64_t v241 = sub_2225C3C70((uint64_t)v1210);
          BOOL v242 = *(void *)(v241 + 6) == 0x615F776F7268746FLL && *(void *)(v241 + 14) == 0x6C62616E67697373;
          if (v242 && *(unsigned char *)(v241 + 22) == 101)
          {
            sub_2225C3D00((int)v808, "__is_nothrow_assignable");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v808[0];
            uint64_t v8 = v808[1];
            __int16 v9 = 188;
            goto LABEL_312;
          }
        }
        return 0;
      }
      if (v86 != 98) {
        return 0;
      }
      uint64_t v87 = sub_2225C3C70((uint64_t)v1210);
      BOOL v88 = *(void *)(v87 + 3) == 0x635F6E69746C6975 && *(void *)(v87 + 11) == 0x6576747265766E6FLL;
      if (!v88 || *(_DWORD *)(v87 + 19) != 1919906915) {
        return 0;
      }
      sub_2225C3D00((int)v809, "__builtin_convertvector");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v809[0];
      uint64_t v8 = v809[1];
      __int16 v9 = 293;
LABEL_2448:
      unsigned int v26 = 61439;
      return sub_222606A20(v7, v8, v9, v26, v6, v0);
    case 24:
      uint64_t v90 = sub_2225C3C70((uint64_t)v1210);
      if (*(_DWORD *)v90 != 1634230111 || *(_WORD *)(v90 + 4) != 24435) {
        return 0;
      }
      int v92 = sub_2225CC124(v1210, 6);
      if (v92 == 118)
      {
        uint64_t v244 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v244 + 7) == 0x645F6C6175747269
          && *(void *)(v244 + 15) == 0x6F74637572747365
          && *(unsigned char *)(v244 + 23) == 114)
        {
          sub_2225C3D00((int)v805, "__has_virtual_destructor");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v805[0];
          uint64_t v8 = v805[1];
          __int16 v9 = 201;
          goto LABEL_312;
        }
      }
      else if (v92 == 116)
      {
        uint64_t v93 = sub_2225C3C70((uint64_t)v1210);
        BOOL v94 = *(void *)(v93 + 7) == 0x645F6C6169766972 && *(void *)(v93 + 15) == 0x6F74637572747365;
        if (v94 && *(unsigned char *)(v93 + 23) == 114)
        {
          sub_2225C3D00((int)v806, "__has_trivial_destructor");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v806[0];
          uint64_t v8 = v806[1];
          __int16 v9 = 200;
          goto LABEL_312;
        }
      }
      return 0;
    case 25:
      if (*(_WORD *)sub_2225C3C70((uint64_t)v1210) != 24415) {
        return 0;
      }
      int v96 = sub_2225CC124(v1210, 2);
      if (v96 == 105)
      {
        if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
          return 0;
        }
        int v247 = sub_2225CC124(v1210, 5);
        if (v247 == 116)
        {
          uint64_t v564 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v564 + 6) == 0x796C6C6169766972
            && *(void *)(v564 + 14) == 0x616E67697373615FLL
            && *(void *)(v564 + 17) == 0x656C62616E676973)
          {
            sub_2225C3D00((int)v799, "__is_trivially_assignable");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v799[0];
            uint64_t v8 = v799[1];
            __int16 v9 = 216;
            goto LABEL_312;
          }
        }
        else if (v247 == 110)
        {
          uint64_t v248 = sub_2225C3C70((uint64_t)v1210);
          BOOL v249 = *(void *)(v248 + 6) == 0x645F776F7268746FLL && *(void *)(v248 + 14) == 0x6974637572747365;
          if (v249 && *(void *)(v248 + 17) == 0x656C626974637572)
          {
            sub_2225C3D00((int)v800, "__is_nothrow_destructible");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v800[0];
            uint64_t v8 = v800[1];
            __int16 v9 = 187;
            goto LABEL_2297;
          }
        }
      }
      else if (v96 == 104)
      {
        uint64_t v97 = sub_2225C3C70((uint64_t)v1210);
        if (*(_WORD *)(v97 + 3) == 29537 && *(unsigned char *)(v97 + 5) == 95)
        {
          int v99 = sub_2225CC124(v1210, 6);
          if (v99 == 116)
          {
            uint64_t v556 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v556 + 7) == 1769367922 && *(_DWORD *)(v556 + 10) == 1600938345)
            {
              int v558 = sub_2225CC124(v1210, 14);
              if (v558 == 109)
              {
                uint64_t v741 = sub_2225C3C70((uint64_t)v1210);
                if (*(void *)(v741 + 15) == 0x697373615F65766FLL && *(_WORD *)(v741 + 23) == 28263)
                {
                  sub_2225C3D00((int)v801, "__has_trivial_move_assign");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v801[0];
                  uint64_t v8 = v801[1];
                  __int16 v9 = 196;
                  goto LABEL_312;
                }
              }
              else if (v558 == 99)
              {
                uint64_t v559 = sub_2225C3C70((uint64_t)v1210);
                if (*(void *)(v559 + 15) == 0x7463757274736E6FLL && *(_WORD *)(v559 + 23) == 29295)
                {
                  sub_2225C3D00((int)v802, "__has_trivial_constructor");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v802[0];
                  uint64_t v8 = v802[1];
                  __int16 v9 = 198;
                  goto LABEL_312;
                }
              }
            }
          }
          else if (v99 == 110)
          {
            uint64_t v100 = sub_2225C3C70((uint64_t)v1210);
            if (*(_DWORD *)(v100 + 7) == 1919448175 && *(_DWORD *)(v100 + 10) == 1601662834)
            {
              int v102 = sub_2225CC124(v1210, 14);
              if (v102 == 109)
              {
                uint64_t v739 = sub_2225C3C70((uint64_t)v1210);
                if (*(void *)(v739 + 15) == 0x697373615F65766FLL && *(_WORD *)(v739 + 23) == 28263)
                {
                  sub_2225C3D00((int)v803, "__has_nothrow_move_assign");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v803[0];
                  uint64_t v8 = v803[1];
                  __int16 v9 = 192;
                  goto LABEL_312;
                }
              }
              else if (v102 == 99)
              {
                uint64_t v103 = sub_2225C3C70((uint64_t)v1210);
                if (*(void *)(v103 + 15) == 0x7463757274736E6FLL && *(_WORD *)(v103 + 23) == 29295)
                {
                  sub_2225C3D00((int)v804, "__has_nothrow_constructor");
                  uint64_t v6 = *(void *)(v0 + 168);
                  uint64_t v7 = v804[0];
                  uint64_t v8 = v804[1];
                  __int16 v9 = 194;
                  goto LABEL_312;
                }
              }
            }
          }
        }
      }
      return 0;
    case 26:
      uint64_t v105 = sub_2225C3C70((uint64_t)v1210);
      if (*(_DWORD *)v105 != 1936285535 || *(unsigned char *)(v105 + 4) != 95) {
        return 0;
      }
      int v107 = sub_2225CC124(v1210, 5);
      if (v107 == 110)
      {
        uint64_t v251 = sub_2225C3C70((uint64_t)v1210);
        if (*(void *)(v251 + 6) == 0x635F776F7268746FLL
          && *(void *)(v251 + 14) == 0x7463757274736E6FLL
          && *(_DWORD *)(v251 + 22) == 1701601897)
        {
          sub_2225C3D00((int)v797, "__is_nothrow_constructible");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v797[0];
          uint64_t v8 = v797[1];
          __int16 v9 = 190;
          goto LABEL_312;
        }
      }
      else if (v107 == 109)
      {
        uint64_t v108 = sub_2225C3C70((uint64_t)v1210);
        BOOL v109 = *(void *)(v108 + 6) == 0x626F5F7265626D65 && *(void *)(v108 + 14) == 0x696F705F7463656ALL;
        if (v109 && *(_DWORD *)(v108 + 22) == 1919251566)
        {
          sub_2225C3D00((int)v798, "__is_member_object_pointer");
          uint64_t v6 = *(void *)(v0 + 168);
          uint64_t v7 = v798[0];
          uint64_t v8 = v798[1];
          __int16 v9 = 235;
          goto LABEL_312;
        }
      }
      return 0;
    case 28:
      if (*(_WORD *)sub_2225C3C70((uint64_t)v1210) != 24415) {
        return 0;
      }
      int v111 = sub_2225CC124(v1210, 2);
      if (v111 == 105)
      {
        if (*(_WORD *)(sub_2225C3C70((uint64_t)v1210) + 3) != 24435) {
          return 0;
        }
        int v254 = sub_2225CC124(v1210, 5);
        if (v254 == 116)
        {
          uint64_t v567 = sub_2225C3C70((uint64_t)v1210);
          if (*(void *)(v567 + 6) == 0x796C6C6169766972
            && *(void *)(v567 + 14) == 0x757274736E6F635FLL
            && *(void *)(v567 + 20) == 0x656C626974637572)
          {
            sub_2225C3D00((int)v794, "__is_trivially_constructible");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v794[0];
            uint64_t v8 = v794[1];
            __int16 v9 = 214;
            goto LABEL_312;
          }
        }
        else if (v254 == 109)
        {
          uint64_t v255 = sub_2225C3C70((uint64_t)v1210);
          BOOL v256 = *(void *)(v255 + 6) == 0x75665F7265626D65 && *(void *)(v255 + 14) == 0x705F6E6F6974636ELL;
          if (v256 && *(void *)(v255 + 20) == 0x7265746E696F705FLL)
          {
            sub_2225C3D00((int)v795, "__is_member_function_pointer");
            uint64_t v6 = *(void *)(v0 + 168);
            uint64_t v7 = v795[0];
            uint64_t v8 = v795[1];
            __int16 v9 = 236;
            goto LABEL_312;
          }
        }
        return 0;
      }
      if (v111 != 98) {
        return 0;
      }
      uint64_t v112 = sub_2225C3C70((uint64_t)v1210);
      BOOL v113 = *(void *)(v112 + 3) == 0x745F6E69746C6975 && *(void *)(v112 + 11) == 0x6D6F635F73657079;
      BOOL v114 = v113 && *(void *)(v112 + 19) == 0x5F656C6269746170;
      if (!v114 || *(unsigned char *)(v112 + 27) != 112) {
        return 0;
      }
      sub_2225C3D00((int)v796, "__builtin_types_compatible_p");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v796[0];
      uint64_t v8 = v796[1];
      __int16 v9 = 170;
LABEL_299:
      unsigned int v26 = 128;
      return sub_222606A20(v7, v8, v9, v26, v6, v0);
    case 30:
      char v116 = (void *)sub_2225C3C70((uint64_t)v1210);
      if (*v116 != 0x72745F7361685F5FLL
        || v116[1] != 0x6F6D5F6C61697669
        || v116[2] != 0x74736E6F635F6576
        || *(void *)((char *)v116 + 22) != 0x726F746375727473)
      {
        return 0;
      }
      sub_2225C3D00((int)v793, "__has_trivial_move_constructor");
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = v793[0];
      uint64_t v8 = v793[1];
      __int16 v9 = 199;
      goto LABEL_312;
    default:
      return result;
  }
}

uint64_t sub_222606A20(uint64_t a1, uint64_t a2, __int16 a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  if (sub_222606BF8(a5))
  {
    if ((a4 & 0x8000) == 0)
    {
      int v12 = sub_222606BF8(a5);
      int v13 = 0;
      int v14 = 0;
      BOOL v16 = (a4 & 0x100000) == 0 || v12 != 2;
      goto LABEL_17;
    }
LABEL_16:
    BOOL v16 = 0;
    int v13 = 0;
    int v14 = 0;
    goto LABEL_17;
  }
  if (a4 == 61439) {
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)a5;
  if ((a4 & 2) != 0 && (v17 & 0x40) != 0) {
    goto LABEL_16;
  }
  if (a4 & 4) != 0 && (v17 & 0x80) != 0 || (a4 & 1) != 0 && (v17) {
    goto LABEL_16;
  }
  if ((a4 & 8) != 0 && (v17 & 0x1000000) != 0
    || (a4 & 0x10) != 0 && (v17 & 8) != 0
    || (a4 & 0x100) != 0 && (v17 & 0x20) != 0)
  {
    BOOL v16 = 0;
    int v13 = 0;
    int v14 = 1;
    goto LABEL_17;
  }
  if ((a4 & 0x20) != 0 && (v17 & 0x40000) != 0
    || (a4 & 0x4000) != 0 && (v17 & 0x80000) != 0
    || (a4 & 0x2000) != 0 && (v17 & 0x100000) != 0
    || (a4 & 0x40) != 0 && (v17 & 0x400000000) != 0
    || (a4 & 0x200) != 0 && (*(_WORD *)(a5 + 16) & 0x4000) != 0
    || (a4 & 0x80) != 0 && (v17 & 0x40) == 0
    || (a4 & 0x400) != 0 && (v17 & 2) != 0
    || (a4 & 0x800) != 0 && (v17 & 0x800) != 0)
  {
    goto LABEL_16;
  }
  int v14 = 0;
  BOOL v16 = (v17 & 0x40) == 0 || (a4 & 4) == 0;
  int v13 = !v16;
LABEL_17:
  int v18 = v16 | (a4 >> 12) & ((*(unsigned char *)a5 & 4) >> 2);
  if ((v18 & 1) == 0)
  {
    sub_222607508(a6, a1, a2);
    if (v13) {
      __int16 v19 = 6;
    }
    else {
      __int16 v19 = a3;
    }
    uint64_t v20 = sub_2226075A8(a6, a1, a2, v19);
    sub_2226075D8(v20, v14);
    sub_222607608(v20, v13);
  }
  return v18 ^ 1u;
}

unsigned int *sub_222606BB8(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4 = sub_2226075A8(a4, a1, a2, a3);

  return sub_222607638(v4, 1);
}

uint64_t sub_222606BF8(uint64_t a1)
{
  return *(unsigned char *)(a1 + 66) & 3;
}

unsigned int *sub_222606C04(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  int v5 = (unsigned int *)sub_2225F2E2C(a4, a1, a2);

  return sub_222607668(v5, a3);
}

uint64_t sub_222606C48(uint64_t a1)
{
  unsigned int v2 = sub_2225F2DD0(a1);
  if (v2 < 2) {
    return 0;
  }
  unsigned int v4 = v2;
  int v5 = (unsigned __int16 *)sub_2225F2DB8(a1);
  uint64_t result = 0;
  int v6 = (*(unsigned char *)v5 + *((unsigned char *)v5 + 2) + 30) & 0x1F | (32 * v4);
  if (v6 > 206)
  {
    if (v6 <= 275)
    {
      switch(v6)
      {
        case 207:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x67617270 | v5[2] ^ 0x616D) == 0;
          unsigned int v8 = 14;
          goto LABEL_60;
        case 208:
        case 209:
        case 211:
        case 212:
        case 214:
          return result;
        case 210:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x65737361 | v5[2] ^ 0x7472) == 0;
          unsigned int v8 = 20;
          goto LABEL_60;
        case 213:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x646E6669 | v5[2] ^ 0x6665) == 0;
          unsigned int v8 = 3;
          goto LABEL_60;
        case 215:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x6F706D69 | v5[2] ^ 0x7472) == 0;
          unsigned int v8 = 15;
          goto LABEL_60;
        default:
          JUMPOUT(0);
      }
    }
    if (v6 > 460)
    {
      switch(v6)
      {
        case 461:
          BOOL v7 = (*(void *)v5 ^ 0x63696C6275705F5FLL | *(void *)(v5 + 3) ^ 0x6F7263616D5F6369) == 0;
          unsigned int v8 = 22;
          break;
        case 493:
          BOOL v7 = (*(void *)v5 ^ 0x7461766972705F5FLL | *(void *)((char *)v5 + 7) ^ 0x6F7263616D5F6574) == 0;
          unsigned int v8 = 23;
          break;
        case 518:
          BOOL v7 = (*(void *)v5 ^ 0x64756C636E695F5FLL | *((void *)v5 + 1) ^ 0x736F7263616D5F65) == 0;
          unsigned int v8 = 9;
          break;
        default:
          return result;
      }
    }
    else
    {
      switch(v6)
      {
        case 276:
          BOOL v7 = *(void *)v5 == 0x7472657373616E75;
          unsigned int v8 = 21;
          break;
        case 311:
          BOOL v7 = (*(void *)v5 ^ 0x6F69736E65747865 | *((unsigned __int8 *)v5 + 8) ^ 0x6ELL) == 0;
          unsigned int v8 = 25;
          break;
        case 394:
          uint64_t v9 = *(void *)v5;
          int v10 = *((_DWORD *)v5 + 2);
          BOOL v12 = v9 == 0x5F6564756C636E69 && v10 == 1954047342;
          return (16 * v12);
        default:
          return result;
      }
    }
LABEL_60:
    if (v7) {
      return v8;
    }
    else {
      return 0;
    }
  }
  if (v6 > 166)
  {
    if (v6 > 180)
    {
      switch(v6)
      {
        case 181:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x6F727265 | *((unsigned __int8 *)v5 + 4) ^ 0x72) == 0;
          unsigned int v8 = 13;
          break;
        case 183:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x65646E75 | *((unsigned __int8 *)v5 + 4) ^ 0x66) == 0;
          unsigned int v8 = 11;
          break;
        case 200:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x69666564 | v5[2] ^ 0x656E) == 0;
          unsigned int v8 = 10;
          break;
        default:
          return result;
      }
    }
    else
    {
      switch(v6)
      {
        case 167:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x69646E65 | *((unsigned __int8 *)v5 + 4) ^ 0x66) == 0;
          unsigned int v8 = 6;
          break;
        case 171:
          int v13 = *(_DWORD *)v5;
          int v14 = *((unsigned __int8 *)v5 + 4);
          BOOL v16 = v13 == 1701078633 && v14 == 102;
          return (2 * v16);
        case 172:
          BOOL v7 = (*(_DWORD *)v5 ^ 0x6E656469 | *((unsigned __int8 *)v5 + 4) ^ 0x74) == 0;
          unsigned int v8 = 18;
          break;
        default:
          return result;
      }
    }
    goto LABEL_60;
  }
  if (v6 > 147)
  {
    switch(v6)
    {
      case 148:
        BOOL v7 = *(_DWORD *)v5 == 1935893363;
        unsigned int v8 = 19;
        break;
      case 150:
        BOOL v7 = *(_DWORD *)v5 == 1702063205;
        unsigned int v8 = 5;
        break;
      case 152:
        BOOL v7 = *(_DWORD *)v5 == 1701734764;
        unsigned int v8 = 12;
        break;
      default:
        return result;
    }
    goto LABEL_60;
  }
  if (v6 == 71) {
    return *v5 == 26217;
  }
  if (v6 == 140) {
    return 4 * (*(_DWORD *)v5 == 1718185061);
  }
  return result;
}

uint64_t sub_22260722C(uint64_t a1)
{
  sub_2225E5834(&v2, *(void *)a1, *(_DWORD *)(a1 + 8) == 0);
  return v2;
}

uint64_t sub_222607264(uint64_t a1)
{
  sub_2225E5834(&v2, *(void *)a1 + 8 * *(unsigned int *)(a1 + 8), 1);
  return v2;
}

uint64_t sub_22260729C(_DWORD *a1)
{
  return (*a1 - 48);
}

uint64_t sub_2226072A8(const void **a1, uint64_t *a2, int a3)
{
  LODWORD(v3) = a3;
  uint64_t result = sub_2225CC0FC((uint64_t)a1, a3);
  if (v3)
  {
    uint64_t v3 = v3;
    do
    {
      uint64_t v7 = *a2++;
      uint64_t result = sub_2225CBFA8(a1, v7);
      --v3;
    }
    while (v3);
  }
  return result;
}

void *sub_2226072FC(void *a1)
{
  uint64_t v2 = (_OWORD *)sub_2225C26A4(160);
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  void v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[6] = 0u;
  v2[7] = 0u;
  v2[8] = 0u;
  v2[9] = 0u;
  *a1 = sub_222607348();
  return a1;
}

void *sub_222607350(void *a1)
{
  uint64_t v2 = (void *)sub_222607380(*a1);
  j__free(v2);
  return a1;
}

void *sub_222607388(void *a1)
{
  uint64_t result = sub_2226073BC(a1);
  void *result = &unk_26D4DBD58;
  return result;
}

void *sub_2226073BC(void *result)
{
  void *result = &unk_26D4DBD00;
  return result;
}

uint64_t sub_2226073E4()
{
  sub_2225CCC70(&v1);
  return v1;
}

uint64_t sub_22260740C(unsigned int *a1)
{
  char v2 = sub_2226074B4((uint64_t)a1);
  char v3 = sub_2226074C0((uint64_t)a1);
  char v4 = sub_2226074CC((uint64_t)a1);
  char v5 = sub_2226074D8((uint64_t)a1);
  uint64_t result = sub_2226074E4((uint64_t)a1);
  int v7 = 0x4000000;
  if ((v2 & 1) == 0 && (v3 & 1) == 0 && (v4 & 1) == 0 && (v5 & 1) == 0 && (result & 1) == 0)
  {
    uint64_t result = sub_2226074F0((uint64_t)a1);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_2226074FC(a1);
      if (result) {
        int v7 = 0x4000000;
      }
      else {
        int v7 = 0;
      }
    }
  }
  *a1 = *a1 & 0xFBFFFFFF | v7;
  return result;
}

uint64_t sub_2226074B4(uint64_t a1)
{
  return *(unsigned char *)(a1 + 3) & 1;
}

uint64_t sub_2226074C0(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 2) >> 4) & 1;
}

uint64_t sub_2226074CC(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 3) >> 1) & 1;
}

uint64_t sub_2226074D8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 2) >> 6) & 1;
}

uint64_t sub_2226074E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 2) >> 7;
}

uint64_t sub_2226074F0(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 3) >> 6) & 1;
}

uint64_t sub_2226074FC(_DWORD *a1)
{
  return *a1 >> 31;
}

unsigned int *sub_222607508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[0] = a2;
  v11[1] = a3;
  uint64_t v4 = sub_2225F2F58(a1, a2, a3);
  uint64_t result = *(unsigned int **)sub_2225E563C(v4);
  if (!result)
  {
    uint64_t v6 = sub_2225F2F6C(a1);
    uint64_t v7 = sub_2225F2F70(v6, 1);
    int v10 = (unsigned int *)sub_2225FB794(v7);
    sub_2225F2F60(v4, &v10);
    *((void *)v10 + 2) = v4;
    sub_2225C3D00((int)v9, "import");
    BOOL v8 = sub_2225C3CC8((uint64_t)v11, v9[0], (size_t)v9[1]);
    uint64_t result = v10;
    if (v8)
    {
      sub_2225FC940(v10, 1);
      return v10;
    }
  }
  return result;
}

unsigned int *sub_2226075A8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t result = (unsigned int *)sub_2225F2E2C();
  unsigned int *result = *result & 0xFFFFFE00 | a4 & 0x1FF;
  return result;
}

unsigned int *sub_2226075D8(unsigned int *a1, int a2)
{
  if (a2) {
    int v2 = 0x400000;
  }
  else {
    int v2 = 0;
  }
  unsigned int v3 = *a1 & 0xFFBFFFFF | v2;
  *a1 = v3;
  if (!a2) {
    return (unsigned int *)sub_22260740C(a1);
  }
  *a1 = v3 | 0x4000000;
  return a1;
}

unsigned int *sub_222607608(unsigned int *a1, int a2)
{
  if (a2) {
    int v2 = 0x800000;
  }
  else {
    int v2 = 0;
  }
  unsigned int v3 = *a1 & 0xFF7FFFFF | v2;
  *a1 = v3;
  if (!a2) {
    return (unsigned int *)sub_22260740C(a1);
  }
  *a1 = v3 | 0x4000000;
  return a1;
}

unsigned int *sub_222607638(unsigned int *a1, int a2)
{
  if (a2) {
    int v2 = 0x2000000;
  }
  else {
    int v2 = 0;
  }
  unsigned int v3 = *a1 & 0xFDFFFFFF | v2;
  *a1 = v3;
  if (!a2) {
    return (unsigned int *)sub_22260740C(a1);
  }
  *a1 = v3 | 0x4000000;
  return a1;
}

unsigned int *sub_222607668(unsigned int *result, __int16 a2)
{
  unsigned int *result = *result & 0xFFF001FF | ((a2 & 0x7FF) << 9);
  return result;
}

uint64_t sub_222607678(uint64_t a1)
{
  uint64_t v2 = sub_2226076AC(a1, 6);
  sub_2225E0EC4((void *)(v2 + 24));
  return a1;
}

void *sub_2226076B0(uint64_t a1, char a2)
{
  uint64_t result = (void *)sub_2225CC294(a1, a2);
  void *result = &unk_26D4DBD80;
  return result;
}

void sub_2226076E8()
{
  uint64_t v0 = (void *)sub_2226076E4();

  j__free(v0);
}

uint64_t sub_222607710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v3 = a2 - 8;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_222607758(v3, a3);
}

BOOL sub_222607724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2) {
    uint64_t v5 = a2 - 8;
  }
  else {
    uint64_t v5 = 0;
  }
  return sub_2226077B4(v5, a3, a4, a5);
}

uint64_t sub_222607740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v3 = a2 - 8;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_2226077F8(v3, a3);
}

uint64_t sub_22260775C(_DWORD *a1, const void **a2)
{
  uint64_t v4 = (uint64_t *)sub_2225CED2C((uint64_t)a1);
  int v5 = sub_22260729C(a1);

  return sub_2226072A8(a2, v4, v5);
}

BOOL sub_2226077B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_222607758(a1, a4);

  return sub_2225CC1BC(a4, a2);
}

uint64_t sub_2226077F8(uint64_t a1, uint64_t a2)
{
  sub_222607758(a1, a2);

  return sub_2225CC130(a2);
}

uint64_t sub_222607830(uint64_t a1)
{
  sub_2225E1434(a1 + 24);

  return sub_2226076E4(a1);
}

uint64_t sub_22260786C(uint64_t a1)
{
  sub_2226079B8((_DWORD *)(a1 + 68));
  sub_2225CAD04(a1 + 88);
  sub_2225CAD04(a1 + 112);
  sub_2225CAD04(a1 + 136);
  sub_2225CAD04(a1 + 160);
  sub_2225D250C((void *)(a1 + 184));
  sub_2226079BC((void *)(a1 + 208));
  __int16 v2 = *(_WORD *)(a1 + 16) & 0xE000 | 0xC00;
  *(void *)a1 = *(void *)a1 & 0xF000000000000000 | 0x144430203A04000;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = v2;
  sub_2226079C0(a1, 0);
  *(_WORD *)(a1 + 16) &= 0x9FFFu;
  *(void *)(a1 + 20) = *(void *)(a1 + 20) & 0xFE00000000000000 | 0x802800000000;
  sub_2226079D0(a1, 0);
  *(void *)(a1 + 20) &= 0xF1FFFFFFFFFFFFFFLL;
  sub_2226079F8(a1, 0);
  sub_222607A20(a1, 2);
  sub_222607A48(a1, 2);
  sub_222607A70(a1, 0);
  sub_222607A98(a1, 0);
  unint64_t v3 = *(void *)(a1 + 52) & 0xFFFFFFF800000000 | 0x100000000;
  *(void *)(a1 + 44) = 256;
  *(void *)(a1 + 28) = 0x10000000100;
  *(void *)(a1 + 36) = 0x10000000000200;
  *(void *)(a1 + 52) = v3;
  sub_222607ABC(a1, 0);
  *(void *)(a1 + 52) &= 0xFFFFFFE7FFFFFFFFLL;
  *(_DWORD *)(a1 + 60) = 0;
  return a1;
}

_WORD *sub_2226079C0(uint64_t a1, char a2)
{
  __int16 v3 = *(_WORD *)(a1 + 64);
  uint64_t result = (_WORD *)(a1 + 64);
  _WORD *result = v3 & 0xFFFC | a2 & 3;
  return result;
}

uint64_t sub_2226079D0(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 64);
  uint64_t result = a1 + 64;
  unsigned int v4 = v3 & 0xFFFFFFF3 | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xFFF3 | (4 * (a2 & 3));
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_2226079F8(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 64);
  uint64_t result = a1 + 64;
  unsigned int v4 = v3 & 0xFFFFFFCF | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xFFCF | (16 * (a2 & 3));
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_222607A20(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 64);
  uint64_t result = a1 + 64;
  unsigned int v4 = v3 & 0xFFFFFE3F | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xFE3F | ((a2 & 7) << 6);
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_222607A48(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 64);
  uint64_t result = a1 + 64;
  unsigned int v4 = v3 & 0xFFFFF1FF | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xF1FF | ((a2 & 7) << 9);
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_222607A70(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 64);
  uint64_t result = a1 + 64;
  unsigned int v4 = v3 & 0xFFFFCFFF | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xCFFF | ((a2 & 3) << 12);
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_222607A98(uint64_t a1, __int16 a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 64);
  uint64_t result = a1 + 64;
  unsigned int v4 = v3 & 0xFFFF3FFF | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0x3FFF | (a2 << 14);
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_222607ABC(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 64);
  uint64_t result = a1 + 64;
  unsigned int v4 = (v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xFFFCFFFF | ((a2 & 3) << 16);
  *(_WORD *)uint64_t result = v3;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

_DWORD *sub_222607AE8(_DWORD *a1)
{
  *a1 = 0;
  sub_222607B14(a1 + 1);
  return a1;
}

int8x8_t sub_222607B18(int8x8_t *a1)
{
  int8x8_t result = vand_s8(*a1, (int8x8_t)0x8000000080000000);
  *a1 = result;
  __int8 v2 = a1[1].i8[4];
  a1[1].i32[0] = 0;
  a1[1].i8[4] = v2 & 0xFC;
  return result;
}

void *sub_222607B3C(void *a1)
{
  int8x8_t result = sub_2225D250C(a1);
  *((unsigned char *)result + 24) = 0;
  return result;
}

uint64_t sub_222607B58(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  sub_2225CA51C(&v20, a1);
  *(_DWORD *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  sub_222607D20(a1 + 40);
  sub_2225D250C((void *)(a1 + 48));
  sub_222607D24(a1 + 72);
  *(void *)(a1 + 104) = 0;
  sub_222607D28(a1 + 112);
  sub_2225D250C((void *)(a1 + 200));
  sub_222607D2C(a1 + 224, 0);
  sub_2225F48E0(a1 + 248);
  sub_2225F48E0(a1 + 288);
  sub_2225F48E0(a1 + 328);
  sub_222607D30(a1 + 368);
  sub_222607D34(a1 + 440);
  if (a7) {
    __int16 v12 = 16;
  }
  else {
    __int16 v12 = 0;
  }
  if (a6) {
    __int16 v13 = 10;
  }
  else {
    __int16 v13 = 2;
  }
  *(_WORD *)(a1 + 528) = v13 | v12 | *(_WORD *)(a1 + 528) & 0xF000;
  *(_DWORD *)(a1 + 532) = 0;
  sub_2225F3278((_DWORD *)(a1 + 536));
  sub_2225F3278((_DWORD *)(a1 + 540));
  sub_2225F48E0(a1 + 544);
  sub_2225F48E0(a1 + 584);
  sub_222607D38(a1 + 624);
  sub_2225F48E0(a1 + 856);
  sub_222607D3C(a1 + 896);
  sub_222607D34(a1 + 1096);
  sub_2225D250C((void *)(a1 + 1184));
  sub_2225D250C((void *)(a1 + 1208));
  sub_2225D250C((void *)(a1 + 1232));
  if (a5)
  {
    char v14 = sub_222607D40(a5);
    __int16 v15 = *(_WORD *)(a1 + 528);
    if ((v14 & 1) == 0)
    {
      v15 &= ~2u;
      *(_WORD *)(a1 + 528) = v15;
    }
    __int16 v16 = *(_WORD *)(a5 + 528);
    if ((v16 & 0x20) != 0)
    {
      v15 |= 0x20u;
      *(_WORD *)(a1 + 528) = v15;
      __int16 v16 = *(_WORD *)(a5 + 528);
    }
    if ((v16 & 0x40) != 0)
    {
      v15 |= 0x40u;
      *(_WORD *)(a1 + 528) = v15;
      __int16 v16 = *(_WORD *)(a5 + 528);
    }
    *(_WORD *)(a1 + 528) = v15 & 0xFFFE | v16 & 1;
    int v17 = sub_2225D4970((void *)(a5 + 48));
    *(_DWORD *)sub_222607D4C(a5 + 72, v20, v21) = v17;
    uint64_t v19 = a1;
    sub_222607D74((uint64_t *)(a5 + 48), (uint64_t)&v19);
  }
  return a1;
}

uint64_t sub_222607D40(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 528) >> 1) & 1;
}

uint64_t sub_222607D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_2226093AC(a1, a2, a3);

  return sub_222608788(v3);
}

uint64_t sub_222607D74(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_222609658(a1, a2);
  }
  else
  {
    sub_2226095E4((uint64_t)a1, a2);
    uint64_t result = v4 + 8;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_222607DD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  return sub_222607B58(a1, a2, a3, a4, a5, a6, a7);
}

void sub_222607DD8(std::string *a1)
{
  uint64_t v4 = sub_222607EF4((uint64_t)a1);
  uint64_t v3 = sub_222607EFC((uint64_t)a1);
  while (sub_2225D0DF0((uint64_t)&v4, (uint64_t)&v3))
  {
    if (*(void *)sub_2225C3C70((uint64_t)&v4))
    {
      __int8 v2 = (void *)sub_222607F04();
      j__free(v2);
    }
    sub_2225E49B8(&v4);
  }
  sub_2225F7C7C(&a1[51].__r_.__value_.__r.__words[1]);
  sub_222607F08(&a1[50].__r_.__value_.__r.__words[1]);
  sub_2225D2510(&a1[49].__r_.__value_.__r.__words[1]);
  sub_222607F0C(&a1[45].__r_.__value_.__r.__words[2]);
  sub_222607F10(&a1[37].__r_.__value_.__r.__words[1]);
  sub_2225C56C4(&a1[35].__r_.__value_.__r.__words[2]);
  sub_222607F14(&a1[26]);
  sub_2225C56C4(&a1[24].__r_.__value_.__r.__words[1]);
  sub_2225C56C4(&a1[22].__r_.__value_.__r.__words[2]);
  sub_222607F0C(&a1[18].__r_.__value_.__r.__words[1]);
  sub_222607F18(&a1[15].__r_.__value_.__r.__words[1]);
  sub_2225C56C4(&a1[13].__r_.__value_.__r.__words[2]);
  sub_2225C56C4(&a1[12]);
  sub_2225C56C4(&a1[10].__r_.__value_.__r.__words[1]);
  sub_222607F1C(&a1[9].__r_.__value_.__r.__words[1]);
  sub_2225D2510(&a1[8].__r_.__value_.__r.__words[1]);
  sub_222607F20(&a1[4].__r_.__value_.__r.__words[2]);
  sub_222607F24(&a1[3]);
  sub_2225E4E68(&a1[2]);
  std::string::~string(a1);
}

uint64_t sub_222607EF4(uint64_t a1)
{
  return sub_2225D2E88((uint64_t *)(a1 + 48));
}

uint64_t sub_222607EFC(uint64_t a1)
{
  return sub_2225D24C8(a1 + 48);
}

uint64_t sub_222607F28(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return (v2 - sub_2225C3C70(a1)) >> 5;
}

BOOL sub_222607F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v30[0] = a1;
  v30[1] = a2;
  sub_2225D934C(v29, a1, a2);
  LOBYTE(v20) = (*(void *)a3 & 0x400000000) != 0;
  uint64_t v8 = sub_2225D9350((uint64_t)v29, "altivec", (uint64_t)&v20);
  char v28 = *(unsigned char *)(a3 + 6) & 1;
  uint64_t v9 = sub_2225D9588(v8, (uint64_t)"blocks", (uint64_t)&v28);
  BOOL v27 = (*(unsigned char *)a3 & 0x40) != 0;
  uint64_t v10 = sub_2225DB220(v9, (uint64_t)"cplusplus", (uint64_t)&v27);
  BOOL v26 = (*(_DWORD *)a3 & 0x80) != 0;
  uint64_t v11 = sub_2225DAEFC(v10, "cplusplus11", (uint64_t)&v26);
  BOOL v25 = (*(_DWORD *)a3 & 0x400) != 0;
  uint64_t v12 = sub_2225D9520(v11, "objc", (uint64_t)&v25);
  BOOL v24 = (*(void *)(a3 + 20) & 0x20000000000000) != 0;
  uint64_t v13 = sub_2225D95FC(v12, "objc_arc", (uint64_t)&v24);
  BOOL v23 = (*(_WORD *)(a3 + 16) & 0x4000) != 0;
  uint64_t v14 = sub_2225D9588(v13, (uint64_t)"opencl", (uint64_t)&v23);
  char v22 = sub_222608C58(a4);
  uint64_t v15 = sub_2225D94AC(v14, (unsigned __int16 *)"tls", (uint64_t)&v22);
  unsigned __int8 v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a4 + 192))(a4, a1, a2);
  if (sub_2225F2DA4(v15, &v21)) {
    return 1;
  }
  int v17 = (uint64_t *)(a3 + 184);
  uint64_t v18 = sub_2225D2E88(v17);
  uint64_t v19 = sub_2225D24C8((uint64_t)v17);
  v29[0] = sub_222608C60(v18, v19, (uint64_t)v30);
  uint64_t v20 = sub_2225D24C8((uint64_t)v17);
  return sub_2225D0DF0((uint64_t)v29, (uint64_t)&v20);
}

BOOL sub_222608138(uint64_t a1, uint64_t a2)
{
  do
  {
    uint64_t v2 = a1;
    if (a1 == a2) {
      break;
    }
    a1 = *(void *)(a1 + 32);
  }
  while (a1);
  return v2 == a2;
}

uint64_t sub_222608158(uint64_t a1)
{
  do
  {
    uint64_t v1 = a1;
    a1 = *(void *)(a1 + 32);
  }
  while (a1);
  return v1;
}

uint64_t sub_22260816C@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  sub_22260826C(v11);
  for (; a1; a1 = *(void *)(a1 + 32))
  {
    sub_2225CCBF8(&v10, a1);
    sub_2225CC69C((uint64_t)v11, &v10);
  }
  sub_2225CAD04(a2);
  *(void *)&long long v10 = sub_222608270((uint64_t)v11);
  *((void *)&v10 + 1) = v4;
  v9[0] = sub_2226082A0((uint64_t)v11);
  v9[1] = v5;
  while (sub_2225D2CC0((uint64_t)&v10, (uint64_t)v9))
  {
    if (!sub_2225CBBF8((uint64_t)a2, v6)) {
      sub_2225CCA44(a2, 46);
    }
    uint64_t v7 = (uint64_t *)sub_2225D35A0((uint64_t)&v10);
    sub_2225CCA6C(a2, *v7, v7[1]);
    sub_2225D5358((uint64_t)&v10);
  }
  return sub_2225C56C4(v11);
}

uint64_t sub_222608270(uint64_t a1)
{
  uint64_t v1 = sub_2225C3D04(a1);
  sub_2225D2C80(&v3, v1);
  return v3;
}

uint64_t sub_2226082A0(uint64_t a1)
{
  uint64_t v1 = sub_2225C3C70(a1);
  sub_2225D2C80(&v3, v1);
  return v3;
}

uint64_t sub_2226082D0(uint64_t a1)
{
  uint64_t v2 = sub_222608328(a1);
  if (v2)
  {
    return sub_222608330(v2);
  }
  else
  {
    return sub_222608338((unsigned __int8 *)(a1 + 40));
  }
}

uint64_t sub_222608328(uint64_t a1)
{
  return sub_222608D9C((unsigned __int8 *)(a1 + 40));
}

uint64_t sub_222608330(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

uint64_t sub_222608338(unsigned __int8 *a1)
{
  if (!sub_222609868(a1)) {
    return 0;
  }

  return sub_222608E00(a1, v2);
}

uint64_t sub_222608384(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_222608E54(a1, *a2);
  if (v4) {
    sub_2225CC7B8(a1 + 48, a2);
  }
  return v4;
}

uint64_t sub_2226083D0(uint64_t *a1)
{
  unint64_t v2 = sub_2225D24AC(a1);
  sub_2225D2644(a1);

  return nullsub_1(a1, v2);
}

uint64_t sub_222608418(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  unsigned __int8 v12 = a4;
  uint64_t v9 = (void *)(a1 + 440);
  sub_222608518((uint64_t)&v11, &v13, &v12);
  sub_2226084A8(v9, (uint64_t)&v11);
  j_std::string::~string(&v11);
  uint64_t result = sub_222607F60(v13, v14, a5, a6);
  if (v12 != result) {
    return sub_22260851C(a1, 1);
  }
  return result;
}

uint64_t sub_2226084A8(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_2226098C0(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_2226099B0(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 32;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_22260851C(uint64_t result, __int16 a2)
{
  v9[5] = *MEMORY[0x263EF8340];
  if ((*(_WORD *)(result + 528) & 2) != 0)
  {
    uint64_t v3 = result;
    sub_2225F48E0(v9);
    uint64_t v8 = v3;
    sub_2225CC7B8((uint64_t)v9, &v8);
    while (!sub_2225CF1D0(v9))
    {
      uint64_t v4 = *(void *)sub_222608644((uint64_t)v9);
      sub_222608660((uint64_t)v9);
      __int16 v5 = *(_WORD *)(v4 + 528);
      if ((v5 & 2) != 0)
      {
        *(_WORD *)(v4 + 528) = (v5 | a2) & 0xFFFD;
        uint64_t v8 = sub_222607EF4(v4);
        uint64_t v7 = sub_222607EFC(v4);
        while (sub_2225D0DF0((uint64_t)&v8, (uint64_t)&v7))
        {
          if ((*(_WORD *)(*(void *)sub_2225C3C70((uint64_t)&v8) + 528) & 2) != 0)
          {
            uint64_t v6 = (void *)sub_2225C3C70((uint64_t)&v8);
            sub_2225CC7B8((uint64_t)v9, v6);
          }
          sub_2225E49B8(&v8);
        }
      }
    }
    return sub_2225C56C4(v9);
  }
  return result;
}

uint64_t sub_222608644(uint64_t a1)
{
  return sub_2225C3D04(a1) - 8;
}

uint64_t sub_222608660(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1) - 8;

  return sub_2225C5B6C(a1, v2);
}

uint64_t sub_22260869C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + 72;
  uint64_t v9 = sub_222608718((void *)(a1 + 72), a2, a3);
  uint64_t v8 = sub_222607264(v4);
  if (sub_2225DE638(&v9, &v8)) {
    return 0;
  }
  uint64_t v6 = sub_2225E4210((uint64_t)&v9);
  uint64_t v7 = (unsigned int *)sub_222608788(v6);
  return *(void *)sub_2225C6BC0((void *)(a1 + 48), *v7);
}

uint64_t sub_222608718(void *a1, uint64_t a2, uint64_t a3)
{
  int v4 = sub_2225D7EEC((uint64_t)a1, a2, a3);
  if (v4 == -1)
  {
    return sub_222607264((uint64_t)a1);
  }
  else
  {
    sub_2225E5834(&v6, *a1 + 8 * v4, 1);
    return v6;
  }
}

uint64_t sub_222608788(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_222608790(void *a1, uint64_t a2)
{
  return nullsub_1(*a1 & 0xFFFFFFFFFFFFFFFCLL, a2);
}

uint64_t sub_22260879C(unsigned __int8 *a1)
{
  return (*a1 >> 1) & 1;
}

uint64_t sub_2226087A8(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return 0x4EC4EC4EC4EC4EC5 * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_2226087F4(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return 0x2E8BA2E8BA2E8BA3 * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_222608840(void *a1)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 4);
}

void *sub_222608868(void *a1)
{
  uint64_t v2 = (std::string *)sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_2226088C0(v2, v3);
  if (!sub_2225C603C(a1))
  {
    int v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

void sub_2226088C0(std::string *a1, std::string *a2)
{
  if (a2 != a1)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v2 = (std::string *)((char *)v2 - 32);
      j_std::string::~string(v2);
    }
    while (v2 != a1);
  }
}

void *sub_222608908(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  sub_222608960(v2, v3);
  if (!sub_2225C603C(a1))
  {
    int v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_222608960(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      v2 -= 88;
      uint64_t result = sub_222607F0C(v2);
    }
    while (v2 != v3);
  }
  return result;
}

void *sub_2226089A8(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  sub_222608A00(v2, v3);
  if (!sub_2225C603C(a1))
  {
    int v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_222608A00(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      v2 -= 104;
      uint64_t result = sub_222608A44(v2);
    }
    while (v2 != v3);
  }
  return result;
}

uint64_t sub_222608A48(uint64_t a1)
{
  return a1;
}

void *sub_222608A78(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  sub_222608AD0(v2, v3);
  if (!sub_2225C603C(a1))
  {
    int v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_222608AD0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      v2 -= 40;
      uint64_t result = sub_2225F7D50(v2);
    }
    while (v2 != v3);
  }
  return result;
}

void **sub_222608B1C(void **a1)
{
  return a1;
}

uint64_t sub_222608B4C(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_2225F9A1C();
    uint64_t v4 = sub_2225F9EB8();
    __int16 v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_222608BD4(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_2225D085C(*v5, v4);
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t sub_222608BD4(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 16 * sub_2225F5148(a1);
}

uint64_t sub_222608C0C(uint64_t a1)
{
  sub_2225C56C4(a1 + 48);

  return sub_222608C48(a1);
}

uint64_t sub_222608C58(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 81);
}

uint64_t sub_222608C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2225D5844(a1);
  uint64_t v7 = sub_2225D5844(a2);
  uint64_t v8 = sub_222608CCC(v6, v7, a3, (uint64_t)&v10);
  return sub_222608CC8(a1, v8);
}

uint64_t sub_222608CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    while (1)
    {
      uint64_t v8 = sub_2225DC2F8(a4, v4);
      sub_2225CCBF8(v10, v8);
      if (sub_2225CD4BC(v10[0], v10[1], *(const void **)a3, *(void *)(a3 + 8))) {
        break;
      }
      v4 += 24;
      if (v4 == a2) {
        return a2;
      }
    }
  }
  return v4;
}

uint64_t sub_222608D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1;
  uint64_t v3 = sub_2225D5874(&v5);
  return sub_2225F3920(&v5, 0xAAAAAAAAAAAAAAABLL * ((a2 - v3) >> 3));
}

uint64_t sub_222608D9C(unsigned __int8 *a1)
{
  if (!sub_222608DE8(a1)) {
    return 0;
  }

  return sub_222608E00(a1, v2);
}

uint64_t sub_222608DE8(unsigned __int8 *a1)
{
  return sub_22260879C(a1);
}

uint64_t sub_222608E00(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_222608790(a1, a2);

  return j_nullsub_1(v2, v3);
}

uint64_t sub_222608E28(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 32 * a2;
}

uint64_t sub_222608E54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a2, a2);

  return sub_2225D2FCC(a1, v3);
}

uint64_t sub_222608E94(uint64_t a1)
{
  return sub_2225E50F8(a1, 8);
}

uint64_t sub_222608EA0(uint64_t a1)
{
  uint64_t v2 = sub_222608ED0();
  sub_2225F48E0(v2 + 48);
  return a1;
}

uint64_t sub_222608ED8(uint64_t a1)
{
  return sub_222608EE4(a1, a1 + 32, 2);
}

uint64_t sub_222608EE8(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  sub_222608F18(a1);
  return a1;
}

void *sub_222608F18(uint64_t a1)
{
  if (sub_2225D30D8((void *)a1))
  {
    unsigned int v2 = *(_DWORD *)(a1 + 16);
LABEL_8:
    uint64_t result = memset(*(void **)(a1 + 8), 255, 8 * v2);
    *(_DWORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 24) = 0;
    return result;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 16);
  if (v2 <= 4 * *(_DWORD *)(a1 + 20) || v2 < 0x21) {
    goto LABEL_8;
  }

  return sub_2225D2F18(a1);
}

uint64_t sub_222608F98(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222608FCC(v4, v2);
  return a1;
}

uint64_t sub_222608FCC(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222609018(a1, a2);
  if (result)
  {
    return sub_222609064(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

BOOL sub_222609018(uint64_t a1, unsigned int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  if (a2) {
    uint64_t v4 = sub_2225C26A4(16 * a2);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4;
  return a2 != 0;
}

uint64_t sub_222609064(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  uint64_t v2 = sub_2225F9A1C();
  uint64_t v3 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_222608BD4(a1);
  while (v3 != (void *)result)
  {
    *uint64_t v3 = v2;
    v3 += 2;
  }
  return result;
}

uint64_t sub_2226090CC(uint64_t a1)
{
  return sub_2225D6048(a1, 1u);
}

uint64_t sub_2226090D4(uint64_t a1)
{
  return sub_2226090DC(a1, 2u);
}

uint64_t sub_2226090DC(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 32 * a2);
}

uint64_t sub_2226090E4(uint64_t a1)
{
  return sub_2226090EC(a1, 2u);
}

uint64_t sub_2226090EC(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 104 * a2);
}

uint64_t sub_2226090F8(uint64_t a1)
{
  return sub_222609100(a1, 2u);
}

uint64_t sub_222609100(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 88 * a2);
}

uint64_t sub_22260910C(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_222609194(v5, a1 + 24);
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  return a1;
}

void sub_222609194(unsigned int *a1, int a2)
{
  sub_2225C3B40(a1);

  sub_2225E1574(a2, a1);
}

uint64_t sub_2226091D8(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_222609218(&v3);
  return a1;
}

uint64_t *sub_222609218(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_222609290(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_22260929C(v6, v8);
    return (uint64_t *)sub_222609298(v5, v7, v9);
  }
  return result;
}

uint64_t sub_222609290(uint64_t *a1)
{
  return sub_2226092E4((uint64_t)a1, *a1);
}

uint64_t sub_22260929C(void *a1, uint64_t a2)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 4);
}

uint64_t sub_2226092E4(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_22260934C(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 112;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_222609350(uint64_t a1, uint64_t a2)
{
  return sub_222609358(a2);
}

uint64_t sub_22260935C(uint64_t a1)
{
  std::string::~string((std::string *)(a1 + 88));

  return sub_222607F0C(a1);
}

uint64_t sub_222609398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 112 * a3, 8);
}

uint64_t sub_2226093AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226093B4(a1, a2, a3, 0);
}

uint64_t sub_2226093B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v10[0] = a2;
  v10[1] = a3;
  int v9 = a4;
  sub_2226094FC((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_22260940C(a1, (uint64_t)v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_22260940C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *(void *)a2, *(void *)(a2 + 8));
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_22260950C(*(void *)a2, *(void *)(a2 + 8), (int)a1 + 24, *(unsigned int *)(a2 + 16));
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_2226094FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226095CC(a3, a1, a2);
}

void *sub_22260950C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  v12[0] = a1;
  v12[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v12);
  sub_2225DABE8();
  uint64_t v7 = sub_2225CC68C(a3, (v6 + 9));
  uint64_t v8 = sub_2226095A0(v7, v6, a4);
  int v9 = (void *)sub_2225E563C(v8);
  char v10 = (const void *)sub_2225C3C70((uint64_t)v12);
  memcpy(v9, v10, v6);
  *((unsigned char *)v9 + v6) = 0;
  return v7;
}

_DWORD *sub_2226095A4(_DWORD *a1, int a2, int a3)
{
  uint64_t result = sub_2225D0A60(a1, a2);
  result[1] = a3;
  return result;
}

__n128 sub_2226095D0(__n128 *a1, __n128 *a2, unsigned __int32 *a3)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u32[0] = *a3;
  return result;
}

void *sub_2226095E4(uint64_t a1, uint64_t a2)
{
  sub_222609708(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_2225D5FF0(v5, v7, a2);
  v10 += 8;
  return sub_2225D284C(&v9);
}

uint64_t sub_222609658(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_2225D4970(a1);
  unint64_t v6 = sub_2225E73E0(a1, v5 + 1);
  uint64_t v7 = sub_2225D4970(a1);
  sub_2225E745C(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2225D5FF0(v4, v9, a2);
  v13 += 8;
  sub_222609728(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225E7550(v12);
  return v10;
}

void *sub_22260970C(void *result, uint64_t a2, uint64_t a3)
{
  _DWORD *result = a2;
  result[1] = *(void *)(a2 + 8);
  result[2] = *(void *)(a2 + 8) + 8 * a3;
  return result;
}

uint64_t sub_222609728(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_222609818();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  uint64_t v10 = sub_2225D4970(a1);
  return nullsub_1(a1, v10);
}

uint64_t sub_222609818()
{
  return sub_222609834();
}

uint64_t sub_222609834()
{
  sub_22260985C(v1);
  return v1[2];
}

uint64_t sub_222609860(uint64_t a1)
{
  return sub_2225D0B60(a1, 2u);
}

uint64_t sub_222609868(unsigned __int8 *a1)
{
  return sub_22260879C(a1) ^ 1;
}

uint64_t sub_222609884(uint64_t a1, void *a2, unsigned char *a3)
{
  *(unsigned char *)(a1 + 24) = *a3;
  return a1;
}

uint64_t sub_2226098C0(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_2226099B4((uint64_t)a1);
  uint64_t v5 = sub_222607F28((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(32 * v7, 0x101204042049022uLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_2226099EC(v9, v10, (uint64_t)v8);
  std::string v11 = (std::string *)sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_2226088C0(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 32 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 32 * v7;
  return result;
}

uint64_t sub_2226099B4(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return (v2 - sub_2225C3C70(a1)) >> 5;
}

uint64_t sub_2226099EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2226099B0(a3, v5);
      v5 += 32;
      a3 += 32;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_222609A44(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225D1354(a1, a2);
  *(unsigned char *)(result + 24) = *(unsigned char *)(a2 + 24);
  return result;
}

BOOL sub_222609A70(void *a1)
{
  return *a1 == 0;
}

uint64_t sub_222609A80(_DWORD *a1, unsigned int a2)
{
  unsigned int v6 = a2;
  BOOL v3 = sub_2225F7FD8(&v6);
  uint64_t v4 = v6;
  if (!v3) {
    return sub_22260C5C4(a1, v6);
  }
  return v4;
}

uint64_t sub_222609AD0(uint64_t *a1)
{
  return a1[5];
}

uint64_t sub_222609AF8(_DWORD *a1, int a2)
{
  int v5 = a2;
  unsigned int v3 = sub_222609D0C(&v5);
  if (sub_222609D18((uint64_t)a1, a1[134], v3)) {
    return a1[134];
  }
  else {
    return sub_22260C160(a1, v3);
  }
}

BOOL sub_222609B58(uint64_t a1, int a2)
{
  return sub_22260E7CC(*(_DWORD **)(a1 + 8), *(_DWORD *)a1, a2);
}

uint64_t sub_222609B70(uint64_t a1, unsigned int a2, unsigned char *a3)
{
  char v13 = 0;
  int v5 = (_DWORD *)sub_222609DB4(a1, a2, &v13);
  if (v13 || (uint64_t v7 = (uint64_t)v5, (sub_222609EEC(v5) & 1) == 0))
  {
    if (a3) {
      *a3 = 1;
    }
    return sub_22260B8DC(a1, v6);
  }
  else
  {
    uint64_t v8 = sub_2225E563C(v7);
    unint64_t v9 = sub_222609F08(v8);
    uint64_t v10 = *(void *)(a1 + 8);
    sub_2225F3278(&v12);
    return sub_22260A0F0(v9, v10, a1, v12, a3);
  }
}

uint64_t sub_222609C14(_DWORD *a1, int a2)
{
  int v12 = a2;
  unsigned int v11 = sub_222609AF8(a1, a2);
  char v10 = 0;
  uint64_t v3 = sub_222609DB4((uint64_t)a1, v11, &v10);
  if (v10)
  {
    sub_2225F3278(&v8);
    int v7 = 0;
    uint64_t v9 = sub_2225E15B0((uint64_t)&v8, (uint64_t)&v7);
    sub_2225E15E0(&v13, &v9);
    return v13;
  }
  else
  {
    int v5 = (_DWORD *)v3;
    int v6 = sub_222609D0C(&v12);
    LODWORD(v9) = v6 - sub_222609DDC(v5);
    return sub_2225E15B0((uint64_t)&v11, (uint64_t)&v9);
  }
}

void *sub_222609CC4(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)sub_2225E8580(a1, 0);
  void *result = &unk_26D4DBBB0;
  result[5] = a2;
  return result;
}

uint64_t sub_222609D0C(_DWORD *a1)
{
  return *a1 & 0x7FFFFFFF;
}

BOOL sub_222609D18(uint64_t a1, unsigned int a2, unsigned int a3)
{
  int v6 = (_DWORD *)sub_222609DB4(a1, a2, 0);
  if (sub_222609DDC(v6) > a3) {
    return 0;
  }
  if (a2 == -2) {
    return 1;
  }
  unsigned int v8 = a2 + 1;
  if (v8 == sub_222609DE8(a1 + 224))
  {
    return *(_DWORD *)(a1 + 496) > a3;
  }
  else
  {
    char v10 = (_DWORD *)sub_222609E2C(a1, v8, 0);
    return sub_222609DDC(v10) > a3;
  }
}

uint64_t sub_222609DB4(uint64_t a1, unsigned int a2, unsigned char *a3)
{
  if (a2 + 1 > 1) {
    return sub_222609E2C(a1, a2, a3);
  }
  if (a3) {
    *a3 = 1;
  }
  return sub_222609E38(a1 + 224, 0);
}

uint64_t sub_222609DDC(_DWORD *a1)
{
  return *a1 >> 1;
}

unint64_t sub_222609DE8(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  return 0xAAAAAAAAAAAAAAABLL * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_222609E2C(uint64_t a1, unsigned int a2, unsigned char *a3)
{
  if ((a2 & 0x80000000) != 0) {
    return sub_222609E64(a1, a2, a3);
  }
  else {
    return sub_222609E70(a1, a2);
  }
}

uint64_t sub_222609E38(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 24 * a2;
}

uint64_t sub_222609E64(uint64_t a1, int a2, unsigned char *a3)
{
  return sub_222609E78(a1, -2 - a2, a3);
}

uint64_t sub_222609E70(uint64_t a1, unsigned int a2)
{
  return sub_222609E38(a1 + 224, a2);
}

uint64_t sub_222609E78(uint64_t a1, unsigned int a2, unsigned char *a3)
{
  v8[0] = sub_2225E49B4((void *)(a1 + 504), a2);
  v8[1] = v6;
  if (sub_2225D9178((uint64_t)v8)) {
    return sub_222609E38(a1 + 440, a2);
  }
  else {
    return sub_22260B70C(a1, a2, a3);
  }
}

uint64_t sub_222609EEC(_DWORD *a1)
{
  return sub_222609F14(a1) ^ 1;
}

unint64_t sub_222609F08(uint64_t a1)
{
  return *(void *)(a1 + 8) & 0xFFFFFFFFFFFFFFF8;
}

uint64_t sub_222609F14(_DWORD *a1)
{
  return *a1 & 1;
}

uint64_t sub_222609F20(uint64_t a1)
{
  if (sub_222609F7C(a1))
  {
    uint64_t v3 = sub_222608790((void *)(a1 + 8), v2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  return a1;
}

BOOL sub_222609F7C(uint64_t a1)
{
  return (sub_22260A614((_DWORD *)(a1 + 8)) & 2) == 0;
}

uint64_t sub_222609FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + 8);
  if (!sub_222608790((void *)(a1 + 8), a2)) {
    return sub_2225C3D04(*(void *)(a1 + 24));
  }
  uint64_t v5 = sub_222608790(v3, v4);
  return sub_2225CE2C0(v5);
}

unint64_t *sub_222609FEC(uint64_t a1, uint64_t a2, int a3)
{
  if (!a2 || (uint64_t v6 = (unint64_t *)(a1 + 8), sub_222608790((void *)(a1 + 8), a2) != a2))
  {
    if (sub_222609F7C(a1))
    {
      uint64_t v8 = sub_222608790((void *)(a1 + 8), v7);
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
      }
    }
    uint64_t v6 = (unint64_t *)(a1 + 8);
    sub_22260A0B8((uint64_t *)(a1 + 8), a2);
  }
  if (a3) {
    unsigned int v9 = 2;
  }
  else {
    unsigned int v9 = 0;
  }

  return sub_22260A0A0(v6, v9);
}

unint64_t *sub_22260A0A0(unint64_t *result, unsigned int a2)
{
  void *result = *result & 0xFFFFFFFFFFFFFFFCLL | a2;
  return result;
}

uint64_t sub_22260A0B8(uint64_t *a1, uint64_t a2)
{
  uint64_t result = nullsub_1(a2, a2);
  *a1 = *a1 & 3 | result;
  return result;
}

uint64_t sub_22260A0F0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned char *a5)
{
  char v10 = (uint64_t *)(a1 + 8);
  if (!sub_222608790((void *)(a1 + 8), a2) && *(void *)(a1 + 24))
  {
    sub_2225CAD04(&v80);
    if (sub_22260A5D0(a3)) {
      BOOL v13 = ((*(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32)) & 0x100000000) == 0;
    }
    else {
      BOOL v13 = 0;
    }
    uint64_t v14 = sub_2225C5B40(a3);
    uint64_t v15 = sub_2225F9128(v14, *(void *)(a1 + 24), (uint64_t)&v80, v13, 1);
    sub_22260A0B8(v10, v15);
    if (sub_222608790(v10, v16))
    {
      uint64_t v18 = sub_22260A620(a1, v17);
      uint64_t v19 = sub_2225CE2C0(v18);
      if (v19 == sub_2225C3D04(*(void *)(a1 + 24)))
      {
        uint64_t v21 = sub_222608790(v10, v20);
        uint64_t v22 = sub_2225CDAC0(v21);
        sub_2225D934C(v72, v22, v23);
        v76[0] = (uint64_t)"UTF-16 (BE)";
        uint64_t v24 = sub_22260A628((uint64_t)v72, (unsigned __int16 *)"\xFE\xFF", (uint64_t)v76);
        int v71 = "UTF-16 (LE)";
        uint64_t v25 = sub_22260A628(v24, (unsigned __int16 *)"\xFF\xFE", (uint64_t)&v71);
        unsigned __int16 v70 = "UTF-32 (BE)";
        uint64_t v26 = sub_2225DAFB4(v25, &dword_2226D00E8, (uint64_t)&v70);
        uint64_t v69 = "UTF-32 (LE)";
        uint64_t v27 = sub_2225DAFB4(v26, &dword_2226D00ED, (uint64_t)&v69);
        int v68 = "UTF-7";
        uint64_t v28 = sub_2225DB64C(v27, (unsigned __int16 *)"+/v", (uint64_t)&v68);
        int v67 = "UTF-1";
        uint64_t v29 = sub_2225DB64C(v28, (unsigned __int16 *)"\xF7\x64\x4CUTF-1", (uint64_t)&v67);
        uint64_t v66 = "UTF-EBCDIC";
        uint64_t v30 = sub_2225DAFB4(v29, "\xDD\x73fs", (uint64_t)&v66);
        uint64_t v65 = "SDSU";
        uint64_t v31 = sub_2225DB64C(v30, (unsigned __int16 *)"\x0E\xFE\xFF", (uint64_t)&v65);
        int v64 = "BOCU-1";
        uint64_t v32 = sub_2225DB64C(v31, (unsigned __int16 *)"\xFB\xEE\x28BOCU-1", (uint64_t)&v64);
        int v63 = "GB-18030";
        uint64_t v33 = sub_2225DAFB4(v32, "\x841\x953", (uint64_t)&v63);
        uint64_t v62 = 0;
        uint64_t v34 = sub_2225DAD80(v33, (uint64_t)&v62);
        if (v34)
        {
          uint64_t v36 = v34;
          sub_2225F52C4(a2, a4, 37, (uint64_t)v72);
          uint64_t v37 = sub_22260A5E8(v72, v36);
          uint64_t v38 = sub_2225C3C70(*(void *)(a1 + 24));
          sub_22260A5E8(v37, v38);
          sub_2225F37F0(v72);
          int v39 = sub_22260A614(v10);
          sub_22260A0A0((unint64_t *)v10, v39 | 1);
        }
        if (a5) {
          *a5 = sub_22260A5B0(a1);
        }
LABEL_30:
        uint64_t v61 = sub_222608790(v10, v35);
        std::string::~string(&v80);
        return v61;
      }
      if (sub_22260A5D8(a2))
      {
        int v55 = (char *)sub_2225C3C70(*(void *)(a1 + 24));
        sub_2225C3D00((int)v74, v55);
        sub_2225C3D00((int)v73, &byte_2226D1615);
        uint64_t v49 = v74[0];
        uint64_t v50 = v74[1];
        uint64_t v51 = v73[0];
        uint64_t v52 = v73[1];
        uint64_t v53 = a2;
        int v54 = 14;
        goto LABEL_24;
      }
      sub_2225F52C4(a2, a4, 14, (uint64_t)v72);
      uint64_t v59 = sub_2225C3C70(*(void *)(a1 + 24));
      sub_22260A5E8(v72, v59);
      uint64_t v58 = v72;
    }
    else
    {
      sub_2225C3D00((int)v72, "<<<MISSING SOURCE FILE>>>\n");
      size_t v40 = sub_2225C3D04(*(void *)(a1 + 24));
      sub_2225C3D00((int)v79, "<invalid>");
      uint64_t v41 = sub_2225CD3E8(v40, v79[0], v79[1]);
      sub_22260A0B8(v10, v41);
      uint64_t v43 = sub_222608790(v10, v42);
      uint64_t v44 = sub_2225C3D04(v43);
      uint64_t v45 = sub_2225C3D04(*(void *)(a1 + 24));
      if (v45)
      {
        for (unint64_t i = 0; i != v45; ++i)
        {
          unint64_t v47 = sub_2225C3D04((uint64_t)v72);
          *(unsigned char *)(v44 + i) = sub_2225CC124(v72, i % v47);
        }
      }
      if (sub_22260A5D8(a2))
      {
        int v48 = (char *)sub_2225C3C70(*(void *)(a1 + 24));
        sub_2225C3D00((int)v78, v48);
        sub_2225CCBF8(v77, &v80);
        uint64_t v49 = v78[0];
        uint64_t v50 = v78[1];
        uint64_t v51 = v77[0];
        uint64_t v52 = v77[1];
        uint64_t v53 = a2;
        int v54 = 4;
LABEL_24:
        sub_2225F3664(v53, v54, v49, v50, v51, v52);
        goto LABEL_28;
      }
      sub_2225F52C4(a2, a4, 4, (uint64_t)v76);
      uint64_t v56 = sub_2225C3C70(*(void *)(a1 + 24));
      uint64_t v57 = sub_22260A5E8(v76, v56);
      sub_2225CCBF8(v75, &v80);
      sub_2225F3774(v57, v75[0], v75[1]);
      uint64_t v58 = v76;
    }
    sub_2225F37F0(v58);
LABEL_28:
    int v60 = sub_22260A614(v10);
    sub_22260A0A0((unint64_t *)v10, v60 | 1);
    if (a5) {
      *a5 = 1;
    }
    goto LABEL_30;
  }
  if (a5) {
    *a5 = sub_22260A5B0(a1);
  }

  return sub_222608790(v10, v11);
}

uint64_t sub_22260A5B0(uint64_t a1)
{
  return sub_22260A614((_DWORD *)(a1 + 8)) & 1;
}

uint64_t sub_22260A5D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 185);
}

BOOL sub_22260A5D8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 284) != -1;
}

uint64_t *sub_22260A5E8(uint64_t *a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_22260A614(_DWORD *a1)
{
  return *a1 & 3;
}

uint64_t sub_22260A620(uint64_t a1, uint64_t a2)
{
  return sub_222608790((void *)(a1 + 8), a2);
}

uint64_t sub_22260A628(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16)
    && (unint64_t)sub_2225C3D04(a1) >= 2
    && *a2 == *(unsigned __int16 *)sub_2225C3C70(a1))
  {
    *(void *)(a1 + 16) = a3;
  }
  return a1;
}

uint64_t sub_22260A690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_22260A71C(a1, a2, a3, -1);
  if (*(_DWORD *)sub_222608788(v4) != -1) {
    return *(unsigned int *)sub_222608788(v4);
  }
  uint64_t v6 = (uint64_t *)(a1 + 160);
  int v8 = sub_2225D4970(v6);
  sub_22260A774(v4, &v8);
  uint64_t v7 = v4;
  sub_222607D74(v6, (uint64_t)&v7);
  return sub_2225D4970(v6) - 1;
}

uint64_t sub_22260A71C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v10[0] = a2;
  v10[1] = a3;
  int v9 = a4;
  sub_2226094FC((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_22260FA7C(a1, (uint64_t)v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_22260A774(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)(result + 4) = *a2;
  return result;
}

uint64_t sub_22260A780(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  int v13 = a2;
  int v8 = (uint64_t *)sub_22260A838(a1 + 184, &v13);
  if (sub_2225CF1D0(v8))
  {
    int v9 = 0;
    int v10 = 0;
  }
  else
  {
    if (a5 == -1) {
      a5 = *(_DWORD *)(sub_22260A8A4((uint64_t)v8) + 8);
    }
    int v9 = *(_DWORD *)(sub_22260A8A4((uint64_t)v8) + 12);
    int v10 = *(_DWORD *)(sub_22260A8A4((uint64_t)v8) + 16);
  }
  sub_22260A90C(a3, a4, a5, v9, v10, &v12);
  return sub_22260A8B0(v8, &v12);
}

uint64_t sub_22260A838(uint64_t a1, _DWORD *a2)
{
  uint64_t v10 = sub_2225FA0E8((uint64_t)a2);
  nullsub_1(v10, v4);
  v11[0] = sub_22260FC00(a1, a2, (uint64_t)&unk_2226D00F2, (uint64_t)&v10, (uint64_t)&v9);
  v11[1] = v5;
  uint64_t v6 = sub_2225E2AD4((uint64_t)v11);
  return nullsub_1(v6, v7) + 8;
}

uint64_t sub_22260A8A4(uint64_t a1)
{
  return *(void *)(a1 + 8) - 20;
}

uint64_t sub_22260A8B0(uint64_t *a1, __n128 *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, (uint64_t)a2))
  {
    uint64_t result = sub_2226100F0(a1, a2);
  }
  else
  {
    sub_22261007C((uint64_t)a1, a2);
    uint64_t result = v4 + 20;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_22260A90C@<X0>(uint64_t result@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, _DWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_22260A91C(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6, int a7)
{
  int v21 = a2;
  int v13 = (uint64_t *)sub_22260A838(a1 + 184, &v21);
  uint64_t v14 = v13;
  if (a6 == 2)
  {
    int v16 = v21;
    uint64_t v17 = sub_22260A8A4((uint64_t)v13);
    uint64_t v15 = sub_22260AA08(a1, v16, *(_DWORD *)(v17 + 16));
    if (v15) {
      goto LABEL_7;
    }
LABEL_8:
    int v18 = 0;
    goto LABEL_10;
  }
  if (a6 == 1)
  {
    int v18 = a3 - 1;
    goto LABEL_10;
  }
  if (a6 || sub_2225CF1D0(v13)) {
    goto LABEL_8;
  }
  uint64_t v15 = sub_22260A8A4((uint64_t)v14);
LABEL_7:
  int v18 = *(_DWORD *)(v15 + 16);
LABEL_10:
  sub_22260A90C(a3, a4, a5, a7, v18, &v20);
  return sub_22260A8B0(v14, &v20);
}

uint64_t sub_22260AA08(uint64_t a1, int a2, unsigned int a3)
{
  int v12 = a2;
  unsigned int v11 = a3;
  unint64_t v4 = (uint64_t *)sub_22260A838(a1 + 184, &v12);
  if (*(_DWORD *)sub_22260A8A4((uint64_t)v4) <= a3) {
    return sub_22260A8A4((uint64_t)v4);
  }
  uint64_t v5 = sub_2225D2E88(v4);
  uint64_t v6 = sub_2225D24C8((uint64_t)v4);
  uint64_t v10 = sub_22260AABC(v5, v6, &v11);
  uint64_t v9 = sub_2225D2E88(v4);
  if (sub_2225D0E1C((uint64_t)&v10, (uint64_t)&v9)) {
    return 0;
  }
  int v8 = sub_22260AAC0(&v10);
  return sub_2225C3C70((uint64_t)v8);
}

void *sub_22260AAC0(void *result)
{
  *result -= 20;
  return result;
}

uint64_t sub_22260AAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 544);
  if (!v6)
  {
    uint64_t v7 = sub_2225C26A4(208);
    uint64_t v6 = sub_22260AB30(v7);
    *(void *)(a1 + 544) = v6;
  }

  return sub_22260A690(v6, a2, a3);
}

uint64_t sub_22260AB34(uint64_t a1, int a2, int a3, int a4)
{
  unint64_t v7 = sub_22260ABEC((_DWORD *)a1, a2);
  char v16 = 0;
  int v8 = v7;
  uint64_t v9 = (_DWORD *)sub_222609DB4(a1, v7, &v16);
  uint64_t result = sub_222609EEC(v9);
  if (result) {
    BOOL v11 = v16 == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11)
  {
    uint64_t v12 = HIDWORD(v7);
    uint64_t v13 = sub_2225E563C((uint64_t)v9);
    sub_22260ACC0(v13);
    uint64_t v14 = *(void *)(a1 + 544);
    if (!v14)
    {
      uint64_t v15 = sub_2225C26A4(208);
      uint64_t v14 = sub_22260AB30(v15);
      *(void *)(a1 + 544) = v14;
    }
    return sub_22260A780(v14, v8, v12, a3, a4);
  }
  return result;
}

uint64_t sub_22260ABEC(_DWORD *a1, int a2)
{
  int v12 = a2;
  unsigned int v11 = sub_222609AF8(a1, a2);
  char v10 = 0;
  uint64_t v3 = sub_222609DB4((uint64_t)a1, v11, &v10);
  if (v10)
  {
    sub_2225F3278(&v8);
    int v7 = 0;
    uint64_t v9 = sub_2225E15B0((uint64_t)&v8, (uint64_t)&v7);
    sub_2225E15E0(&v13, &v9);
    return v13;
  }
  else
  {
    uint64_t v5 = (_DWORD *)v3;
    int v6 = sub_222609D0C(&v12);
    LODWORD(v9) = v6 - sub_222609DDC(v5);
    if (sub_2225F7FD8(&v12)) {
      return sub_2225E15B0((uint64_t)&v11, (uint64_t)&v9);
    }
    else {
      return sub_22260C808(a1, v5);
    }
  }
}

uint64_t sub_22260ACC0(uint64_t result)
{
  *(void *)(result + 8) |= 4uLL;
  return result;
}

uint64_t sub_22260ACD0(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  if (a4 == -1)
  {
    return sub_22260AB34(a1, a2, a3, -1);
  }
  else
  {
    unint64_t v15 = sub_22260ABEC((_DWORD *)a1, a2);
    char v27 = 0;
    int v16 = v15;
    uint64_t v17 = (_DWORD *)sub_222609DB4(a1, v15, &v27);
    uint64_t result = sub_222609EEC(v17);
    if (result) {
      BOOL v19 = v27 == 0;
    }
    else {
      BOOL v19 = 0;
    }
    if (v19)
    {
      uint64_t v20 = HIDWORD(v15);
      uint64_t v21 = sub_2225E563C((uint64_t)v17);
      sub_22260ACC0(v21);
      uint64_t v22 = *(void *)(a1 + 544);
      if (!v22)
      {
        uint64_t v23 = sub_2225C26A4(208);
        uint64_t v22 = sub_22260AB30(v23);
        *(void *)(a1 + 544) = v22;
      }
      if (a8) {
        int v24 = 2;
      }
      else {
        int v24 = a7;
      }
      if (a6) {
        int v25 = 2;
      }
      else {
        int v25 = 0;
      }
      if (a5) {
        int v26 = 1;
      }
      else {
        int v26 = v25;
      }
      return sub_22260A91C(v22, v16, v20, a3, a4, v26, v24);
    }
  }
  return result;
}

uint64_t sub_22260AE08(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v8 = sub_2225F3264((_DWORD *)a1);
  v8[1] = a2;
  void v8[2] = a3;
  sub_2225E0EC4(v8 + 3);
  sub_222608F94(a1 + 160, 0);
  *(unsigned char *)(a1 + 184) = 1;
  *(unsigned char *)(a1 + 185) = a4;
  sub_2225D8FA4(a1 + 192);
  sub_2225D250C((void *)(a1 + 200));
  sub_22260AF18(a1 + 224);
  sub_22260AF1C(a1 + 440);
  sub_2225E3834((void *)(a1 + 504));
  *(void *)(a1 + 528) = 0;
  sub_2225F3278((_DWORD *)(a1 + 536));
  *(void *)(a1 + 544) = 0;
  sub_2225F3278((_DWORD *)(a1 + 552));
  sub_2225F3278((_DWORD *)(a1 + 576));
  sub_2225F3278((_DWORD *)(a1 + 580));
  *(void *)(a1 + 584) = 0;
  sub_22260AF20(a1 + 592, 0);
  sub_22260AF24(a1 + 616, 0);
  sub_22260AF28((_DWORD *)(a1 + 640));
  sub_2225D8FA4(a1 + 664);
  sub_2225D8FA4(a1 + 672);
  sub_22260AF2C(a1 + 680, 0);
  sub_22260AF30(a1 + 704);
  sub_22260AF34(a1);
  sub_22260AFF4(a2, a1);
  return a1;
}

uint64_t sub_22260AF34(uint64_t a1)
{
  sub_2225F3278(&v7);
  *(_DWORD *)(a1 + 576) = v7;
  sub_2225C5D90((void *)(a1 + 224));
  sub_2225C5D90((void *)(a1 + 440));
  sub_2225E4670(a1 + 504);
  sub_2225F3278(&v7);
  *(_DWORD *)(a1 + 552) = v7;
  *(void *)(a1 + 560) = 0;
  sub_2225F3278(&v7);
  *(_DWORD *)(a1 + 536) = v7;
  uint64_t v2 = *(void *)(a1 + 544);
  if (v2) {
    sub_22260B3AC(v2);
  }
  *(void *)(a1 + 496) = 0x8000000000000000;
  sub_2225F3278(&v6);
  sub_2225F3278(&v5);
  sub_2225F3278(&v4);
  return sub_22260B3EC(a1, v6, v5, v4, 1, 0, 0);
}

uint64_t sub_22260AFF4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 72) = a2;
  return result;
}

uint64_t sub_22260B000(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 544);
  if (v2)
  {
    uint64_t v3 = (void *)sub_22260B1C4(v2);
    j__free(v3);
  }
  uint64_t v4 = sub_2225D4970((void *)(a1 + 200));
  if (v4)
  {
    uint64_t v5 = 0;
    do
    {
      if (*(void *)sub_2225C6BC0((void *)(a1 + 200), v5))
      {
        unsigned int v6 = (void *)sub_2225C6BC0((void *)(a1 + 200), v5);
        sub_222609FA0(*v6);
        int v7 = (uint64_t *)sub_2225C6BC0((void *)(a1 + 200), v5);
        sub_22260B1C8(a1 + 24, *v7);
      }
      ++v5;
    }
    while (v4 != v5);
  }
  sub_22260B1D4(a1 + 160, (uint64_t)v13);
  sub_22260B264(a1 + 160, (uint64_t)v12);
  sub_2225F8068(v11, v12);
  while (sub_2225F9558((uint64_t *)v13, (uint64_t)v11))
  {
    if (*(void *)(sub_2225C3C70((uint64_t)v13) + 8))
    {
      uint64_t v8 = sub_2225C3C70((uint64_t)v13);
      sub_222609FA0(*(void *)(v8 + 8));
      uint64_t v9 = sub_2225C3C70((uint64_t)v13);
      sub_22260B1C8(a1 + 24, *(void *)(v9 + 8));
    }
    sub_22260B2C0(v13);
    sub_2225F8068(v11, v12);
  }
  sub_22260B2F4(a1 + 680);
  sub_22260B390(a1 + 704);
  sub_22260B394(a1 + 680);
  sub_22260B398(a1 + 672);
  sub_2225CDC18(a1 + 664);
  sub_22260B39C(a1 + 616);
  sub_22260B3A0(a1 + 592);
  sub_2225E38B0(a1 + 504);
  sub_2225C56C4(a1 + 440);
  sub_2225C56C4(a1 + 224);
  sub_2225E4E68(a1 + 200);
  sub_22260B3A4(a1 + 192);
  sub_222608B18(a1 + 160);
  sub_2225E1434(a1 + 24);
  return a1;
}

uint64_t sub_22260B1C8(uint64_t a1, uint64_t a2)
{
  return j_nullsub_1(a1, a2);
}

uint64_t sub_22260B1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_22260F91C())
  {
    return sub_22260B264(a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225CC180(a1);
    uint64_t v6 = sub_222608BD4(a1);
    return sub_22260F98C(a2, v5, v6, 0);
  }
}

uint64_t sub_22260B264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_222608BD4(a1);
  uint64_t v5 = sub_222608BD4(a1);

  return sub_22260F98C(a2, v4, v5, 1);
}

uint64_t **sub_22260B2C0(uint64_t **a1)
{
  *a1 += 2;
  sub_22260F9C4(a1);
  return a1;
}

uint64_t sub_22260B2F4(uint64_t a1)
{
  sub_222611248(a1, (uint64_t)v6);
  sub_2226112D8(a1, (uint64_t)v5);
  sub_2225F8068(v4, v5);
  while (sub_2225F9558((uint64_t *)v6, (uint64_t)v4))
  {
    if (*(void *)(sub_2225C3C70((uint64_t)v6) + 8))
    {
      uint64_t v2 = (void *)sub_222611334();
      j__free(v2);
    }
    sub_222611338(v6);
    sub_2225F8068(v4, v5);
  }
  return sub_22261136C(a1);
}

uint64_t sub_22260B3AC(uint64_t a1)
{
  sub_22260F318(a1);
  sub_2225F3530((uint64_t *)(a1 + 160));

  return sub_22260F39C(a1 + 184);
}

uint64_t sub_22260B3EC(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, int a5, int a6, uint64_t a7)
{
  unint64_t v13 = sub_22260BE3C(a2, a3, a4);
  int v14 = v11;
  return sub_22260BD7C(a1, (uint64_t)&v13, a5, a6, a7);
}

uint64_t sub_22260B458(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v25 = a2;
  uint64_t v5 = sub_22260B594(a1 + 160, &v25);
  uint64_t result = *v5;
  if (*v5) {
    return result;
  }
  *uint64_t v5 = sub_22260B5B0(a1 + 24, 1);
  if (sub_2225DF1DC(a1 + 192, v7))
  {
    uint64_t v9 = sub_2225CBA80(a1 + 192, v8);
    sub_22260B5C0(v9, &v25, (uint64_t)v24);
    uint64_t v11 = sub_2225CBA80(a1 + 192, v10);
    sub_22260B264(v11, (uint64_t)v22);
    sub_2225F8068(v23, v22);
    BOOL v12 = sub_22260B634(v24, (uint64_t)v23);
    uint64_t v13 = *v5;
    if (!v12)
    {
      if (*(unsigned char *)(a1 + 184)) {
        int v16 = &v25;
      }
      else {
        int v16 = (uint64_t *)(sub_2225C3C70((uint64_t)v24) + 8);
      }
      uint64_t v17 = *v16;
      uint64_t v18 = sub_2225C3C70((uint64_t)v24);
      sub_22260B668(v13, v17, *(void *)(v18 + 8));
      goto LABEL_11;
    }
    uint64_t v14 = v25;
    uint64_t v15 = *v5;
  }
  else
  {
    uint64_t v15 = *v5;
    uint64_t v14 = v25;
  }
  sub_22260B664(v15, v14);
LABEL_11:
  uint64_t v19 = *v5 + 40;
  uint64_t v20 = 0x100000000;
  if (!a3) {
    uint64_t v20 = 0;
  }
  unint64_t v21 = (*(unsigned int *)(*v5 + 40) | ((unint64_t)*(unsigned __int8 *)(*v5 + 44) << 32)) & 0xFFFFFFFEFFFFFFFFLL | v20;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)(*v5 + 40);
  *(unsigned char *)(v19 + 4) = BYTE4(v21);
  return *v5;
}

uint64_t *sub_22260B594(uint64_t a1, uint64_t *a2)
{
  return sub_2226116E0(a1, a2) + 1;
}

uint64_t sub_22260B5B0(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, 48 * a2, 8);
}

uint64_t sub_22260B5C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_22260FA40(a1, a2, &v8)) {
    return sub_22260B264(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_222608BD4(a1);
  return sub_22260F98C(a3, v5, v6, 1);
}

BOOL sub_22260B634(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  return v2 == sub_2225C3C70(a2);
}

uint64_t sub_22260B66C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_22260B5B0(a1 + 24, 1);
  sub_22260B664(v5, 0);
  sub_222607D74((uint64_t *)(a1 + 200), (uint64_t)&v5);
  sub_22260B6CC(v5, a2);
  return v5;
}

unint64_t *sub_22260B6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (unint64_t *)(a1 + 8);
  sub_22260A0B8((uint64_t *)(a1 + 8), a2);

  return sub_22260A0A0(v2, 0);
}

uint64_t sub_22260B70C(uint64_t a1, unsigned int a2, unsigned char *a3)
{
  if ((*(unsigned int (**)(void, void))(**(void **)(a1 + 528) + 16))(*(void *)(a1 + 528), -2 - a2))
  {
    if (a3) {
      *a3 = 1;
    }
    *(void *)&long long v14 = sub_2225E49B4((void *)(a1 + 504), a2);
    *((void *)&v14 + 1) = v6;
    if (!sub_2225D9178((uint64_t)&v14))
    {
      sub_2225F3278(&v12);
      sub_22260B854(a1, v7);
      v13.n128_u64[0] = sub_22260B810(v12);
      v13.n128_u64[1] = v8;
      sub_22260B7FC(0, &v13, (uint64_t)&v14);
      uint64_t v9 = sub_222609E38(a1 + 440, a2);
      uint64_t v10 = v15;
      *(_OWORD *)uint64_t v9 = v14;
      *(void *)(v9 + 16) = v10;
    }
  }
  return sub_222609E38(a1 + 440, a2);
}

__n128 sub_22260B7FC@<Q0>(int a1@<W0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  *(_DWORD *)a3 = 2 * a1;
  __n128 result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  return result;
}

uint64_t sub_22260B810(unsigned int a1)
{
  unsigned int v2 = a1;
  return sub_2225C3B40(&v2);
}

uint64_t sub_22260B854(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 672;
  if (!sub_2225DF1DC(a1 + 672, a2))
  {
    sub_22260B954((uint64_t)v10);
    sub_22260B9A0(v3, (uint64_t)v10);
    sub_22260B398(v10);
    uint64_t v6 = sub_2225CBA80(v3, v5);
    uint64_t v8 = sub_22260B8DC(a1, v7);
    sub_222609FEC(v6, v8, 1);
  }
  return sub_2225CBA80(v3, v4);
}

uint64_t sub_22260B8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 664;
  if (!sub_2225DF1DC(a1 + 664, a2))
  {
    sub_2225C3D00((int)v7, "<<<INVALID BUFFER>>");
    sub_2225C3D00((int)v6, &byte_2226D1615);
    uint64_t v4 = sub_2225CD198(v7[0], v7[1], v6[0], v6[1], 1);
    sub_2225CDC48(v2, v4);
  }
  return sub_2225CBA80(v2, v3);
}

uint64_t sub_22260B954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2225C26A4(48);
  sub_22260B664(v2, 0);

  return sub_2225CDDC8(a1, v2);
}

uint64_t sub_22260B9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CE10C(a2, a2);
  sub_2226110E4(a1, v4);
  j_j_nullsub_1(a2);
  j_nullsub_1(a1, v5);
  return a1;
}

uint64_t sub_22260B9EC(uint64_t a1, int a2)
{
  int v6 = a2;
  if (sub_2225F38E8(&v6) || v6 == -1) {
    goto LABEL_5;
  }
  uint64_t v3 = (v6 - 1);
  if (v6 < 1)
  {
    unint64_t v5 = ~v6;
    if (sub_222609DE8(a1 + 440) <= v5) {
      goto LABEL_5;
    }
    return sub_22260BA74(v3);
  }
  if (v6 != 1) {
    return sub_22260BA74(v3);
  }
LABEL_5:
  sub_2225F3278(&v7);
  return v7;
}

uint64_t sub_22260BA74(uint64_t a1)
{
  sub_2225F3278(&v3);
  return a1;
}

uint64_t sub_22260BAA8(uint64_t a1, int a2)
{
  int v5 = a2;
  if (!sub_2225F38E8(&v5))
  {
    if (v5 < 1)
    {
      if (v5 <= -3)
      {
        uint64_t v3 = (v5 + 1);
        return sub_22260BA74(v3);
      }
    }
    else
    {
      uint64_t v3 = (v5 + 1);
      if (v3 < sub_22260BB2C(a1)) {
        return sub_22260BA74(v3);
      }
    }
  }
  sub_2225F3278(&v6);
  return v6;
}

unint64_t sub_22260BB2C(uint64_t a1)
{
  return sub_222609DE8(a1 + 224);
}

uint64_t sub_22260BB48(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  if ((a5 & 0x80000000) != 0)
  {
    unint64_t v15 = (-2 - a5);
    v20.n128_u64[0] = sub_22260B810(a3);
    v20.n128_u64[1] = v16;
    sub_22260B7FC(a6, &v20, (uint64_t)&v21);
    uint64_t v17 = sub_222609E38(a1 + 440, v15);
    uint64_t v18 = v22;
    *(_OWORD *)uint64_t v17 = v21;
    *(void *)(v17 + 16) = v18;
    *(void *)&long long v21 = sub_2225E49B4((void *)(a1 + 504), v15);
    *((void *)&v21 + 1) = v19;
    sub_2225D9110((uint64_t)&v21, 1);
    return sub_22260BA74(a5);
  }
  else
  {
    int v8 = *(_DWORD *)(a1 + 496);
    v20.n128_u64[0] = sub_22260B810(a3);
    v20.n128_u64[1] = v9;
    sub_22260B7FC(v8, &v20, (uint64_t)&v21);
    sub_22260BC64(a1 + 224, (uint64_t)&v21);
    *(_DWORD *)(a1 + 496) += sub_222609FA4(a2, v10) + 1;
    int v11 = sub_222609DE8(a1 + 224);
    uint64_t result = sub_22260BA74((v11 - 1));
    *(_DWORD *)(a1 + 536) = result;
  }
  return result;
}

uint64_t sub_22260BC64(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2226119B0((const void **)a1, 0);
  }
  uint64_t v4 = sub_2225C3D04(a1);
  uint64_t v5 = *(void *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(void *)(v4 + 16) = v5;
  uint64_t v6 = sub_2225C3D04(a1) + 24;

  return sub_2225C5B6C(a1, v6);
}

uint64_t sub_22260BCDC(uint64_t a1, unsigned int a2, unsigned int a3, int a4)
{
  unint64_t v8 = sub_22260BD34(a2, a3);
  int v9 = v6;
  return sub_22260BD7C(a1, (uint64_t)&v8, a4, 0, 0);
}

unint64_t sub_22260BD34(unsigned int a1, unsigned int a2)
{
  sub_2225F3278(&v5);
  return sub_22260BE3C(a1, a2, v5);
}

uint64_t sub_22260BD7C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  if (a4 < 0)
  {
    int v7 = a5;
    unint64_t v8 = (-2 - a4);
    sub_22260BE98(a5, a2, (uint64_t)&v13);
    uint64_t v9 = sub_222609E38(a1 + 440, v8);
    uint64_t v10 = v14;
    *(_OWORD *)uint64_t v9 = v13;
    *(void *)(v9 + 16) = v10;
    *(void *)&long long v13 = sub_2225E49B4((void *)(a1 + 504), v8);
    *((void *)&v13 + 1) = v11;
    sub_2225D9110((uint64_t)&v13, 1);
  }
  else
  {
    sub_22260BE98(*(unsigned int *)(a1 + 496), a2, (uint64_t)&v13);
    sub_22260BC64(a1 + 224, (uint64_t)&v13);
    int v7 = *(_DWORD *)(a1 + 496);
    *(_DWORD *)(a1 + 496) = a3 + v7 + 1;
  }
  return sub_22260BEB8(v7);
}

unint64_t sub_22260BE3C(unsigned int a1, unsigned int a2, unsigned int a3)
{
  unsigned int v7 = a2;
  unsigned int v8 = a1;
  unsigned int v6 = a3;
  unsigned int v3 = sub_2225C3B40(&v8);
  uint64_t v4 = sub_2225C3B40(&v7);
  sub_2225C3B40(&v6);
  return v3 | (unint64_t)(v4 << 32);
}

uint64_t sub_22260BE98@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_DWORD *)a3 = (2 * result) | 1;
  *(void *)(a3 + 8) = *(void *)a2;
  *(_DWORD *)(a3 + 16) = *(_DWORD *)(a2 + 8);
  return result;
}

uint64_t sub_22260BEB8(int a1)
{
  sub_2225F3278(&v3);
  return a1 | 0x80000000;
}

uint64_t sub_22260BEEC(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = sub_22260B458(a1, a2, 0);
  uint64_t v6 = *(void *)(a1 + 8);
  sub_2225F3278(&v8);
  return sub_22260A0F0(v5, v6, a1, v8, a3);
}

uint64_t sub_22260BF50(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v12 = a2;
  uint64_t v7 = sub_22260B458(a1, a2, 0);
  sub_222609FEC(v7, a3, a4);
  *(_DWORD *)(v7 + 40) |= 0x80000000;
  uint64_t v9 = sub_22260BFC8(a1, v8);
  return sub_22260C024(v9 + 24, (uint64_t)&v12, (uint64_t)&v11);
}

uint64_t sub_22260BFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 192;
  if (!sub_2225DF1DC(a1 + 192, a2))
  {
    uint64_t v4 = sub_2225C26A4(48);
    sub_22260F580(v4);
    sub_22260F510(v2, v4);
  }

  return sub_2225CBA80(v2, v3);
}

uint64_t sub_22260C024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v7 = 0;
  v8[0] = sub_222611A80(a2, (uint64_t)&v7);
  v8[1] = v5;
  sub_222611AB0((uint64_t)v9, (uint64_t)v8);
  sub_2226119C0(a1, (uint64_t)v9, (uint64_t)v10);
  return sub_222611AB4(a3, (uint64_t)v10);
}

uint64_t sub_22260C090(uint64_t a1, unsigned int a2, unsigned __int8 *a3)
{
  unsigned __int8 v15 = 0;
  uint64_t v5 = (_DWORD *)sub_222609DB4(a1, a2, &v15);
  if (sub_222609EEC(v5)) {
    BOOL v6 = v15 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    uint64_t v7 = sub_2225E563C((uint64_t)v5);
    unint64_t v8 = sub_222609F08(v7);
    uint64_t v9 = *(void *)(a1 + 8);
    sub_2225F3278(&v14);
    uint64_t v10 = sub_22260A0F0(v8, v9, a1, v14, &v15);
    int v11 = v15;
    if (a3) {
      *a3 = v15;
    }
    if (!v11)
    {
      v16[0] = sub_2225CDAC0(v10);
      v16[1] = v12;
      return v16[0];
    }
  }
  else if (a3)
  {
    *a3 = 1;
  }
  sub_2225C3D00((int)v16, "<<<<<INVALID SOURCE LOCATION>>>>>");
  return v16[0];
}

uint64_t sub_22260C160(_DWORD *a1, unsigned int a2)
{
  if (!a2) {
    return sub_22260BA74(0);
  }
  if (a1[124] <= a2) {
    return sub_22260C370(a1, a2);
  }
  return sub_22260C180(a1, a2);
}

uint64_t sub_22260C180(_DWORD *a1, unsigned int a2)
{
  unsigned int v4 = a1[134];
  if ((v4 & 0x80000000) != 0
    || (uint64_t v5 = (_DWORD *)sub_222609E38((uint64_t)(a1 + 56), v4), sub_222609DDC(v5) < a2))
  {
    uint64_t v6 = sub_2225C3D04((uint64_t)(a1 + 56));
  }
  else
  {
    uint64_t v6 = sub_2225C3C70((uint64_t)(a1 + 56)) + 24 * (int)a1[134];
  }
  uint64_t v7 = -v6;
  unint64_t v8 = (_DWORD *)(v6 - 24);
  int v9 = -1;
  while (sub_222609DDC(v8) > a2)
  {
    v7 += 24;
    v8 -= 6;
    if (--v9 == -9)
    {
      unsigned int v10 = -1431655765 * ((unint64_t)-(sub_2225C3C70((uint64_t)(a1 + 56)) + v7) >> 3);
      uint64_t v11 = v10 >> 1;
      uint64_t v12 = (_DWORD *)sub_222609E70((uint64_t)a1, v10 >> 1);
      unsigned int v13 = sub_222609DDC(v12);
      int v14 = 0;
      for (int i = 1; ; ++i)
      {
        if (v13 <= a2)
        {
          unsigned int v16 = sub_22260BA74(v11);
          if (sub_222609D18((uint64_t)a1, v16, a2))
          {
            uint64_t v19 = sub_22260BA74(v11);
            long long v21 = (_DWORD *)sub_222609E38((uint64_t)(a1 + 56), v11);
            if ((sub_222609F14(v21) & 1) == 0) {
              a1[134] = v19;
            }
            a1[147] += i;
            return v19;
          }
          int v14 = v11;
        }
        else
        {
          unsigned int v10 = v11;
        }
        uint64_t v11 = v14 + ((v10 - v14) >> 1);
        uint64_t v17 = (_DWORD *)sub_222609E70((uint64_t)a1, v14 + ((v10 - v14) >> 1));
        unsigned int v13 = sub_222609DDC(v17);
      }
    }
  }
  uint64_t v18 = sub_2225C3C70((uint64_t)(a1 + 56));
  uint64_t v19 = sub_22260BA74(-1431655765 * ((unint64_t)(-24 - v7 - v18) >> 3));
  if ((sub_222609F14(v8) & 1) == 0) {
    a1[134] = v19;
  }
  a1[146] -= v9;
  return v19;
}

uint64_t sub_22260C370(_DWORD *a1, unsigned int a2)
{
  if (a1[125] > a2) {
    goto LABEL_2;
  }
  int v4 = a1[134];
  if (v4 < 0)
  {
    uint64_t v6 = (_DWORD *)sub_222609E64((uint64_t)a1, a1[134], 0);
    if (sub_222609DDC(v6) >= a2) {
      unsigned int v5 = ~v4;
    }
    else {
      unsigned int v5 = 0;
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  int v7 = 0;
  int v8 = -v5;
  while (1)
  {
    int v9 = (_DWORD *)sub_222609E78((uint64_t)a1, v5, 0);
    if (sub_222609DDC(v9) <= a2) {
      break;
    }
    ++v5;
    --v8;
    if (--v7 == -8)
    {
      int v10 = sub_222609DE8((uint64_t)(a1 + 110));
      unsigned int v11 = v5 + ((v10 + v8) >> 1);
      uint64_t v12 = (_DWORD *)sub_222609E78((uint64_t)a1, v11, 0);
      if (sub_222609DDC(v12))
      {
        unsigned int v13 = v10 - v5;
        int v14 = 2;
        do
        {
          if (sub_222609DDC(v12) <= a2)
          {
            unsigned int v15 = sub_22260BA74(-2 - v11);
            if (sub_222609D18((uint64_t)a1, v15, a2))
            {
              unsigned int v19 = sub_22260BA74(-2 - v11);
              unsigned int v20 = v19;
              if ((sub_222609F14(v12) & 1) == 0) {
                a1[134] = v19;
              }
              a1[147] += v14;
              return v20;
            }
            BOOL v16 = v10 == v11;
            int v10 = v11;
            if (v16) {
              break;
            }
          }
          else
          {
            unsigned int v5 = v11;
            if (v13 <= 1) {
              break;
            }
          }
          unsigned int v13 = v10 - v5;
          unsigned int v11 = v5 + ((v10 - v5) >> 1);
          uint64_t v12 = (_DWORD *)sub_222609E78((uint64_t)a1, v11, 0);
          v14 += 2;
        }
        while (sub_222609DDC(v12));
      }
LABEL_2:
      sub_2225F3278(&v20);
      return v20;
    }
  }
  unsigned int v17 = sub_22260BA74(-2 - v5);
  unsigned int v20 = v17;
  if ((sub_222609F14(v9) & 1) == 0) {
    a1[134] = v17;
  }
  a1[146] = a1[146] - v7 + 1;
  return v20;
}

uint64_t sub_22260C558(_DWORD *a1, unsigned int a2)
{
  unsigned int v7 = a2;
  do
  {
    unsigned int v3 = sub_222609AF8(a1, v7);
    uint64_t v4 = sub_222609DB4((uint64_t)a1, v3, 0);
    uint64_t v5 = sub_2225E563C(v4);
    unsigned int v7 = sub_22260C5BC(v5);
  }
  while (!sub_2225F7FD8(&v7));
  return v7;
}

uint64_t sub_22260C5BC(uint64_t a1)
{
  return sub_22260BA74(*(unsigned int *)(a1 + 4));
}

uint64_t sub_22260C5C4(_DWORD *a1, unsigned int a2)
{
  unsigned int v8 = a2;
  do
  {
    unint64_t v3 = sub_222609C14(a1, v8);
    unint64_t v4 = HIDWORD(v3);
    uint64_t v5 = sub_222609DB4((uint64_t)a1, v3, 0);
    uint64_t v6 = (unsigned int *)sub_2225E563C(v5);
    unsigned int v8 = sub_22260C63C(v6);
    unsigned int v8 = sub_22260C644(&v8, v4);
  }
  while (!sub_2225F7FD8(&v8));
  return v8;
}

uint64_t sub_22260C63C(unsigned int *a1)
{
  return sub_22260BA74(*a1);
}

uint64_t sub_22260C644(_DWORD *a1, int a2)
{
  sub_2225F3278(&v5);
  return (*a1 + a2);
}

uint64_t sub_22260C680(_DWORD *a1, unsigned int a2)
{
  unsigned int v5 = a2;
  do
  {
    if (sub_22260C6E8(a1, v5)) {
      unsigned int v3 = sub_22260C744(a1, v5);
    }
    else {
      unsigned int v3 = sub_22260C7BC(a1, v5);
    }
    unsigned int v5 = v3;
  }
  while (!sub_2225F7FD8(&v5));
  return v5;
}

uint64_t sub_22260C6E8(_DWORD *a1, int a2)
{
  int v7 = a2;
  uint64_t result = sub_2226074FC(&v7);
  if (result)
  {
    unsigned int v4 = sub_222609AF8(a1, v7);
    uint64_t v5 = sub_222609DB4((uint64_t)a1, v4, 0);
    uint64_t v6 = sub_2225E563C(v5);
    return sub_22260CA70(v6);
  }
  return result;
}

uint64_t sub_22260C744(_DWORD *a1, unsigned int a2)
{
  unsigned int v10 = a2;
  BOOL v3 = sub_2225F7FD8(&v10);
  uint64_t v4 = v10;
  if (!v3)
  {
    unint64_t v5 = sub_222609C14(a1, v10);
    unint64_t v6 = HIDWORD(v5);
    uint64_t v7 = sub_222609DB4((uint64_t)a1, v5, 0);
    unsigned int v8 = (unsigned int *)sub_2225E563C(v7);
    unsigned int v10 = sub_22260C63C(v8);
    return sub_22260C644(&v10, v6);
  }
  return v4;
}

uint64_t sub_22260C7BC(_DWORD *a1, int a2)
{
  unsigned int v3 = sub_222609AF8(a1, a2);
  uint64_t v4 = sub_222609DB4((uint64_t)a1, v3, 0);
  uint64_t v5 = sub_2225E563C(v4);

  return sub_22260C974(v5);
}

uint64_t sub_22260C808(_DWORD *a1, _DWORD *a2)
{
  sub_2225F3278(&v9);
  sub_2225F3278(&v8);
  do
  {
    uint64_t v4 = sub_2225E563C((uint64_t)a2);
    int v8 = sub_22260C5BC(v4);
    unsigned int v9 = sub_222609AF8(a1, v8);
    a2 = (_DWORD *)sub_222609DB4((uint64_t)a1, v9, 0);
    int v5 = sub_222609D0C(&v8);
    int v7 = v5 - sub_222609DDC(a2);
  }
  while (!sub_2225F7FD8(&v8));
  return sub_2225E15B0((uint64_t)&v9, (uint64_t)&v7);
}

uint64_t sub_22260C8B4(_DWORD *a1, _DWORD *a2, int a3)
{
  sub_2225F3278(&v10);
  sub_2225F3278(&v9);
  do
  {
    unint64_t v6 = (unsigned int *)sub_2225E563C((uint64_t)a2);
    int v9 = sub_22260C63C(v6);
    int v9 = sub_22260C644(&v9, a3);
    unsigned int v10 = sub_222609AF8(a1, v9);
    a2 = (_DWORD *)sub_222609DB4((uint64_t)a1, v10, 0);
    int v7 = sub_222609D0C(&v9);
    a3 = v7 - sub_222609DDC(a2);
    int v11 = a3;
  }
  while (!sub_2225F7FD8(&v9));
  return sub_2225E15B0((uint64_t)&v10, (uint64_t)&v11);
}

uint64_t sub_22260C974(uint64_t a1)
{
  int v4 = sub_22260C5BC(a1);
  int v3 = sub_22260CDB8(a1);
  return sub_2225E15B0((uint64_t)&v4, (uint64_t)&v3);
}

uint64_t sub_22260C9BC(_DWORD *a1, int a2)
{
  int v4 = a2;
  if (sub_2225F7FD8(&v4)) {
    return sub_2225E15B0((uint64_t)&v4, (uint64_t)&v4);
  }
  for (uint64_t i = sub_22260C7BC(a1, v4); !sub_2225F7FD8(&i); LODWORD(i) = sub_22260C7BC(a1, i))
    ;
  for (; !sub_2225F7FD8((_DWORD *)&i + 1); HIDWORD(i) = (unint64_t)sub_22260C7BC(a1, SHIDWORD(i)) >> 32)
    ;
  return i;
}

BOOL sub_22260CA70(uint64_t a1)
{
  int v4 = sub_22260C5BC(a1);
  BOOL result = sub_2225CDBBC(&v4);
  if (result)
  {
    int v3 = sub_22260BA74(*(unsigned int *)(a1 + 8));
    return sub_2225F38E8(&v3);
  }
  return result;
}

uint64_t sub_22260CAC0(_DWORD *a1, int a2, _DWORD *a3)
{
  unint64_t v5 = sub_222609C14(a1, a2);
  if (HIDWORD(v5)) {
    return 0;
  }
  int v6 = v5;
  char v16 = 0;
  uint64_t v7 = sub_222609DB4((uint64_t)a1, v5, &v16);
  uint64_t v8 = sub_2225E563C(v7);
  uint64_t result = 0;
  if (v16) {
    return result;
  }
  unsigned int v15 = sub_22260C5BC(v8);
  if (sub_22260CA70(v8))
  {
    unsigned int v14 = sub_22260B9EC((uint64_t)a1, v6);
    if (!sub_2225F38E8(&v14))
    {
      unsigned int v10 = (_DWORD *)sub_222609DB4((uint64_t)a1, v14, &v16);
      if (v16) {
        return 0;
      }
      uint64_t v11 = (uint64_t)v10;
      if (sub_222609F14(v10))
      {
        uint64_t v12 = sub_2225E563C(v11);
        unsigned int v13 = sub_22260C5BC(v12);
        if (sub_22260CBC4(&v13, &v15)) {
          return 0;
        }
      }
    }
  }
  if (a3) {
    *a3 = v15;
  }
  return 1;
}

BOOL sub_22260CBC4(unsigned int *a1, unsigned int *a2)
{
  int v3 = sub_2225C3B40(a1);
  return v3 == sub_2225C3B40(a2);
}

uint64_t sub_22260CBFC(_DWORD *a1, int a2, _DWORD *a3)
{
  int v18 = a2;
  unsigned int v5 = sub_222609AF8(a1, a2);
  int v6 = sub_22260C644(&v18, 1);
  int v7 = v5;
  if (sub_22260CD28((uint64_t)a1, v6, v5, 0)) {
    return 0;
  }
  char v17 = 0;
  uint64_t v9 = sub_222609DB4((uint64_t)a1, v5, &v17);
  uint64_t v10 = sub_2225E563C(v9);
  uint64_t result = 0;
  if (!v17)
  {
    if (sub_22260CA70(v10))
    {
      unsigned int v16 = sub_22260BAA8((uint64_t)a1, v7);
      if (!sub_2225F38E8(&v16))
      {
        uint64_t v11 = (_DWORD *)sub_222609DB4((uint64_t)a1, v16, &v17);
        if (v17) {
          return 0;
        }
        uint64_t v12 = (uint64_t)v11;
        if (sub_222609F14(v11))
        {
          uint64_t v13 = sub_2225E563C(v12);
          unsigned int v15 = sub_22260C5BC(v13);
          unsigned int v14 = sub_22260C5BC(v10);
          if (sub_22260CBC4(&v15, &v14)) {
            return 0;
          }
        }
      }
    }
    if (a3) {
      *a3 = sub_22260CDB8(v10);
    }
    return 1;
  }
  return result;
}

BOOL sub_22260CD28(uint64_t a1, int a2, unsigned int a3, _DWORD *a4)
{
  int v13 = a2;
  unsigned int v7 = sub_222609D0C(&v13);
  unsigned int v8 = a3;
  BOOL v9 = sub_222609D18(a1, a3, v7);
  BOOL v10 = v9;
  if (a4 && v9)
  {
    uint64_t v11 = (_DWORD *)sub_222609DB4(a1, v8, 0);
    *a4 = v7 - sub_222609DDC(v11);
  }
  return v10;
}

uint64_t sub_22260CDB8(uint64_t a1)
{
  unsigned int v3 = sub_22260BA74(*(unsigned int *)(a1 + 8));
  if (sub_2225F38E8(&v3)) {
    return sub_22260C5BC(a1);
  }
  else {
    return v3;
  }
}

const char *sub_22260CE08(uint64_t a1, int a2, unsigned char *a3)
{
  unint64_t v5 = sub_22260CEE8((_DWORD *)a1, a2);
  char v17 = 0;
  int v6 = (_DWORD *)sub_222609DB4(a1, v5, &v17);
  if (v17 || (uint64_t v7 = (uint64_t)v6, (sub_222609EEC(v6) & 1) == 0))
  {
    if (a3) {
      *a3 = 1;
    }
    return "<<<<INVALID BUFFER>>>>";
  }
  else
  {
    unint64_t v8 = HIDWORD(v5);
    uint64_t v9 = sub_2225E563C(v7);
    unint64_t v10 = sub_222609F08(v9);
    uint64_t v11 = *(void *)(a1 + 8);
    sub_2225F3278(&v16);
    uint64_t v12 = sub_22260A0F0(v10, v11, a1, v16, &v17);
    if (a3) {
      *a3 = v17;
    }
    uint64_t v13 = sub_2225C3D04(v12);
    if (v17) {
      unint64_t v14 = 0;
    }
    else {
      unint64_t v14 = v8;
    }
    return (const char *)(v13 + v14);
  }
}

uint64_t sub_22260CEE8(_DWORD *a1, int a2)
{
  int v13 = a2;
  unsigned int v12 = sub_222609AF8(a1, a2);
  char v11 = 0;
  uint64_t v3 = sub_222609DB4((uint64_t)a1, v12, &v11);
  if (v11)
  {
    sub_2225F3278(&v9);
    int v8 = 0;
    uint64_t v10 = sub_2225E15B0((uint64_t)&v9, (uint64_t)&v8);
    sub_2225E15E0(&v14, &v10);
    return v14;
  }
  else
  {
    unint64_t v5 = (_DWORD *)v3;
    int v6 = sub_222609D0C(&v13);
    int v7 = v6 - sub_222609DDC(v5);
    LODWORD(v10) = v7;
    if (sub_2225F7FD8(&v13)) {
      return sub_2225E15B0((uint64_t)&v12, (uint64_t)&v10);
    }
    else {
      return sub_22260C8B4(a1, v5, v7);
    }
  }
}

uint64_t sub_22260CFC0(uint64_t a1, unsigned int a2, unsigned int a3, unsigned __int8 *a4)
{
  unsigned int v22 = a2;
  unsigned __int8 v21 = 0;
  uint64_t v7 = sub_222609B70(a1, a2, &v21);
  uint64_t v8 = v7;
  int v9 = v21;
  if (a4) {
    *a4 = v21;
  }
  if (v9) {
    return 1;
  }
  if (sub_2225CE2C0(v7) >= (unint64_t)a3)
  {
    if (sub_2225F5218((_DWORD *)(a1 + 552), &v22)
      && (v11 = *(void *)(a1 + 560), (uint64_t v12 = *(void *)(v11 + 32)) != 0)
      && (uint64_t v13 = *(unsigned int *)(a1 + 572), v13 < (*(_DWORD *)(v11 + 40) & 0x7FFFFFFFu))
      && (unsigned int v14 = *(_DWORD *)(v12 + 4 * (v13 - 1)), v14 <= a3)
      && *(_DWORD *)(v12 + 4 * v13) > a3)
    {
      unsigned int v15 = a3 - v14;
    }
    else
    {
      uint64_t v16 = a3;
      uint64_t v17 = sub_2225C3D04(v8);
      unsigned int v18 = a3 + 1;
      while (v16)
      {
        int v19 = *(unsigned __int8 *)(v17 - 1 + v16--);
        --v18;
        if (v19 == 13 || v19 == 10) {
          goto LABEL_23;
        }
      }
      unsigned int v18 = 0;
LABEL_23:
      unsigned int v15 = a3 - v18;
    }
    return v15 + 1;
  }
  else
  {
    uint64_t result = 1;
    if (a4) {
      *a4 = 1;
    }
  }
  return result;
}

BOOL sub_22260D0DC(int a1, unsigned char *a2)
{
  int v4 = a1;
  BOOL result = sub_2225F38E8(&v4);
  if (a2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_22260D118(_DWORD *a1, int a2, unsigned __int8 *a3)
{
  if (sub_22260D0DC(a2, a3)) {
    return 0;
  }
  uint64_t v7 = sub_22260ABEC(a1, a2);

  return sub_22260CFC0((uint64_t)a1, v7, HIDWORD(v7), a3);
}

uint64_t sub_22260D198@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v31 = a2;
  if (sub_2225F38E8(&v31)) {
    return sub_22260D9EC(a4);
  }
  unint64_t v7 = sub_22260ABEC((_DWORD *)a1, v31);
  unsigned __int8 v30 = 0;
  unsigned int v8 = v7;
  int v9 = (_DWORD *)sub_222609DB4(a1, v7, &v30);
  if (v30) {
    return sub_22260D9EC(a4);
  }
  uint64_t v10 = (uint64_t)v9;
  if ((sub_222609EEC(v9) & 1) == 0) {
    return sub_22260D9EC(a4);
  }
  unint64_t v11 = HIDWORD(v7);
  uint64_t v12 = (unsigned int *)sub_2225E563C(v10);
  unint64_t v13 = sub_222609F08((uint64_t)v12);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = sub_2225C3C70(v14);
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 8);
    sub_2225F3278(&v29);
    uint64_t v17 = sub_22260A0F0(v13, v16, a1, v29, 0);
    uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 16))(v17);
  }
  uint64_t v18 = v15;
  int v19 = sub_22260D3AC(a1, v8, v11, &v30);
  if (v30) {
    return sub_22260D9EC(a4);
  }
  int v20 = v19;
  int v21 = sub_22260CFC0(a1, v8, v11, &v30);
  if (v30) {
    return sub_22260D9EC(a4);
  }
  int v23 = v21;
  int v24 = sub_22260C63C(v12);
  int v28 = v24;
  if (a3)
  {
    if (sub_22260D930((uint64_t)v12))
    {
      uint64_t v25 = sub_22260AA08(*(void *)(a1 + 544), v8, v11);
      if (v25)
      {
        int v26 = (int *)v25;
        unsigned int v27 = *(_DWORD *)(v25 + 8);
        if (v27 != -1) {
          uint64_t v18 = sub_22260D9F0(*(void *)(a1 + 544), v27);
        }
        v20 += v26[1] + ~sub_22260D3AC(a1, v8, *v26, 0);
        if (v26[4])
        {
          int v28 = sub_22260DA24(a1, v8);
          int v24 = sub_22260C644(&v28, v26[4]);
          int v28 = v24;
        }
      }
    }
  }
  return sub_22260DA88(a4, v18, v20, v23, v24);
}

unint64_t sub_22260D3AC(uint64_t a1, unsigned int a2, int a3, unsigned __int8 *a4)
{
  unsigned int v26 = a2;
  if (!sub_2225F38E8(&v26))
  {
    if (sub_2225F5218((_DWORD *)(a1 + 552), &v26))
    {
      unint64_t v8 = *(void *)(a1 + 560);
    }
    else
    {
      char v25 = 0;
      int v9 = (_DWORD *)sub_222609DB4(a1, v26, &v25);
      if (v25 || (uint64_t v10 = (uint64_t)v9, (sub_222609EEC(v9) & 1) == 0))
      {
        if (a4) {
          *a4 = 1;
        }
        return 1;
      }
      uint64_t v11 = sub_2225E563C(v10);
      unint64_t v8 = sub_222609F08(v11);
    }
    if (*(void *)(v8 + 32))
    {
      if (a4) {
        *a4 = 0;
      }
      goto LABEL_18;
    }
    unsigned __int8 v24 = 0;
    sub_22260D594(*(void *)(a1 + 8), v8, a1 + 24, a1, &v24);
    int v12 = v24;
    if (a4) {
      *a4 = v24;
    }
    if (!v12)
    {
LABEL_18:
      unint64_t v13 = *(unsigned int **)(v8 + 32);
      unint64_t v14 = (unint64_t)&v13[*(_DWORD *)(v8 + 40) & 0x7FFFFFFF];
      unsigned int v15 = a3 + 1;
      unsigned int v23 = v15;
      if (sub_2225F5218((_DWORD *)(a1 + 552), &v26))
      {
        uint64_t v16 = *(unsigned int *)(a1 + 572);
        if (v15 >= *(_DWORD *)(a1 + 568))
        {
          int v20 = &v13[v16];
          int v19 = v20 - 1;
          int v21 = v20 + 4;
          if ((unint64_t)(v20 + 4) < v14)
          {
            if (*v21 <= v15)
            {
              int v21 = v20 + 9;
              if ((unint64_t)(v20 + 9) >= v14) {
                goto LABEL_23;
              }
              if (*v21 <= v15)
              {
                unsigned int v22 = v20 + 19;
                if ((unint64_t)v22 < v14 && *v22 > v15) {
                  unint64_t v14 = (unint64_t)v22;
                }
                goto LABEL_23;
              }
            }
            unint64_t v14 = (unint64_t)v21;
          }
LABEL_23:
          unint64_t result = (unint64_t)(sub_22260D744(v19, v14, &v23) - (void)v13) >> 2;
          *(_DWORD *)(a1 + 552) = v26;
          *(void *)(a1 + 560) = v8;
          *(_DWORD *)(a1 + 568) = v23;
          *(_DWORD *)(a1 + 572) = result;
          return result;
        }
        BOOL v17 = v16 >= (*(_DWORD *)(v8 + 40) & 0x7FFFFFFFu);
        uint64_t v18 = (uint64_t)&v13[v16 + 1];
        if (!v17) {
          unint64_t v14 = v18;
        }
      }
      int v19 = v13;
      goto LABEL_23;
    }
    return 1;
  }
  unint64_t result = 1;
  if (a4) {
    *a4 = 1;
  }
  return result;
}

uint64_t sub_22260D594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  sub_2225F3278(&v34);
  uint64_t result = sub_22260A0F0(a2, a1, a4, v34, a5);
  if (!*a5)
  {
    uint64_t v11 = result;
    sub_2225F3968(v33);
    int v32 = 0;
    sub_2225CC08C((uint64_t)v33, &v32);
    uint64_t v12 = sub_2225C3D04(v11);
    uint64_t v13 = sub_2225C5B40(v11);
    int v32 = 0;
    while (1)
    {
      for (uint64_t i = 0; ; ++i)
      {
        unsigned int v15 = *(unsigned __int8 *)(v12 + i);
        BOOL v16 = v15 > 0xD;
        int v17 = (1 << v15) & 0x2401;
        if (!v16 && v17 != 0) {
          break;
        }
      }
      int v19 = v32;
      int v20 = v32 + i;
      v32 += i;
      int v21 = (unsigned __int8 *)(v12 + i);
      int v22 = *v21;
      if (v22 == 13 || v22 == 10)
      {
        int v24 = v21[1];
        if (v22 != v24) {
          ++v19;
        }
        int v25 = v19 + i;
        if (v22 == v24) {
          unsigned int v26 = v21;
        }
        else {
          unsigned int v26 = v21 + 1;
        }
        if (v24 == 10 || v24 == 13) {
          int v21 = v26;
        }
        else {
          int v25 = v20;
        }
        int v32 = v25 + 1;
        sub_2225CC08C((uint64_t)v33, &v32);
      }
      else
      {
        if (v21 == (unsigned __int8 *)v13)
        {
          int v28 = sub_2225CC184((uint64_t)v33);
          int v30 = *(_DWORD *)(a2 + 40);
          unsigned int v29 = (unsigned int *)(a2 + 40);
          *unsigned int v29 = v30 & 0x80000000 | v28 & 0x7FFFFFFF;
          uint64_t v31 = sub_2225CC184((uint64_t)v33);
          *((void *)v29 - 1) = sub_2225CC288(a3, v31);
          sub_2225C3C70((uint64_t)v33);
          sub_2225C3D04((uint64_t)v33);
          sub_22260F754();
          return sub_2225C56C4(v33);
        }
        int v32 = v19 + i + 1;
      }
      uint64_t v12 = (uint64_t)(v21 + 1);
    }
  }
  return result;
}

unint64_t sub_22260D748(_DWORD *a1, int a2, unsigned char *a3)
{
  if (sub_22260D0DC(a2, a3)) {
    return 0;
  }
  uint64_t v6 = sub_22260CEE8(a1, a2);

  return sub_22260D3AC((uint64_t)a1, v6, SHIDWORD(v6), 0);
}

unint64_t sub_22260D7B8(_DWORD *a1, int a2, unsigned char *a3)
{
  if (sub_22260D0DC(a2, a3)) {
    return 0;
  }
  uint64_t v6 = sub_22260ABEC(a1, a2);

  return sub_22260D3AC((uint64_t)a1, v6, SHIDWORD(v6), 0);
}

uint64_t sub_22260D828(uint64_t a1, int a2, unsigned char *a3)
{
  if (sub_22260D0DC(a2, a3)) {
    return 0;
  }
  sub_22260D198(a1, a2, 1, (uint64_t)v6);
  return sub_2225F56EC((uint64_t)v6);
}

uint64_t sub_22260D888(uint64_t a1, int a2)
{
  uint64_t v3 = sub_22260ABEC((_DWORD *)a1, a2);
  unsigned int v4 = HIDWORD(v3);
  char v10 = 0;
  int v5 = v3;
  uint64_t v6 = (_DWORD *)sub_222609DB4(a1, v3, &v10);
  uint64_t result = 0;
  if (!v10)
  {
    uint64_t result = sub_222609EEC(v6);
    if (result)
    {
      uint64_t v8 = sub_2225E563C((uint64_t)v6);
      if ((sub_22260D930(v8) & 1) != 0 && (uint64_t v9 = sub_22260AA08(*(void *)(a1 + 544), v5, v4)) != 0) {
        return *(unsigned int *)(v9 + 12);
      }
      else {
        return sub_22260D93C(v8);
      }
    }
  }
  return result;
}

uint64_t sub_22260D930(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 8) >> 2) & 1;
}

uint64_t sub_22260D93C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) & 3;
}

const char *sub_22260D948(_DWORD *a1, int a2, unsigned char *a3)
{
  if (sub_22260D0DC(a2, a3)) {
    return "<invalid loc>";
  }
  unsigned int v7 = sub_222609AF8(a1, a2);
  uint64_t v8 = *(uint64_t (**)(void))(*(void *)sub_222609B70((uint64_t)a1, v7, a3) + 16);

  return (const char *)v8();
}

uint64_t sub_22260D9F0(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)sub_2225C6BC0((void *)(a1 + 160), a2);

  return sub_2225E563C(v2);
}

uint64_t sub_22260DA24(uint64_t a1, unsigned int a2)
{
  char v6 = 0;
  uint64_t v2 = (_DWORD *)sub_222609DB4(a1, a2, &v6);
  if (v6 || (uint64_t v3 = v2, (sub_222609EEC(v2) & 1) == 0))
  {
    sub_2225F3278(&v7);
    return v7;
  }
  else
  {
    uint64_t v4 = sub_222609DDC(v3);
    return sub_22260BA74(v4);
  }
}

uint64_t sub_22260DA88(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  return sub_22260F8D0(a1, a2, a3, a4, a5);
}

uint64_t sub_22260DA90(uint64_t a1, int a2)
{
  int v12 = a2;
  if (sub_2225F38E8(&v12)) {
    return 0;
  }
  uint64_t v4 = sub_22260ABEC((_DWORD *)a1, v12);
  unsigned int v5 = HIDWORD(v4);
  char v11 = 0;
  int v6 = v4;
  unsigned int v7 = (_DWORD *)sub_222609DB4(a1, v4, &v11);
  uint64_t result = 0;
  if (!v11)
  {
    uint64_t result = sub_222609EEC(v7);
    if (result)
    {
      uint64_t v8 = (unsigned int *)sub_2225E563C((uint64_t)v7);
      if (sub_22260D930((uint64_t)v8))
      {
        uint64_t v9 = sub_22260AA08(*(void *)(a1 + 544), v6, v5);
        if (v9)
        {
          if (*(_DWORD *)(v9 + 16)) {
            return 0;
          }
        }
      }
      int v10 = sub_22260C63C(v8);
      return sub_2225F38E8(&v10);
    }
  }
  return result;
}

uint64_t sub_22260DB60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 496);
}

uint64_t sub_22260DB68(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  unsigned int v7 = sub_22260DBBC(a1, a2);

  return sub_22260E04C(a1, v7, a3, a4);
}

uint64_t sub_22260DBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  sub_2225F3278(&v74);
  sub_22260E218((uint64_t)v78);
  sub_22260E218((uint64_t)v77);
  uint64_t v4 = (unsigned int *)(a1 + 576);
  if (!sub_2225F38E8((_DWORD *)(a1 + 576)))
  {
    LOBYTE(v71) = 0;
    int v12 = (_DWORD *)sub_222609DB4(a1, *(_DWORD *)(a1 + 576), &v71);
    if ((_BYTE)v71) {
      goto LABEL_12;
    }
    uint64_t v14 = (uint64_t)v12;
    if (sub_222609EEC(v12))
    {
      uint64_t v15 = sub_2225E563C(v14);
      unint64_t v16 = sub_222609F08(v15);
      if (v16)
      {
        uint64_t v17 = *(void *)(v16 + 16);
        if (v17 == a2)
        {
          unsigned int v74 = *v4;
        }
        else
        {
          uint64_t v18 = (char *)sub_2225C3C70(a2);
          sub_2225C3D00((int)v73, v18);
          v76.n128_u64[0] = sub_2225CF480(v73[0], v73[1]);
          v76.n128_u64[1] = v19;
          sub_22260E21C((uint64_t)v77, &v76);
          int v21 = (uint64_t *)j_nullsub_1(v77, v20);
          uint64_t v22 = *v21;
          uint64_t v23 = v21[1];
          int v24 = (char *)sub_2225C3C70(v17);
          sub_2225C3D00((int)v72, v24);
          int v25 = (const void *)sub_2225CF480(v72[0], v72[1]);
          if (sub_2225CD4BC(v22, v23, v25, v26))
          {
            sub_22260E270(a2, v27, &v76);
            sub_22260E31C((uint64_t)v78, (uint64_t)&v76);
            sub_22260E374((uint64_t)&v76, v28);
            if (sub_2225D05E4((uint64_t)v78))
            {
              sub_22260E270(v17, v29, &v76);
              if (sub_2225D05E4((uint64_t)&v76))
              {
                uint64_t v31 = (void *)j_nullsub_1(v78, v30);
                uint64_t v33 = (void *)j_nullsub_1(&v76, v32);
                if (sub_2225CFD8C(v31, v33))
                {
                  unsigned int v74 = *v4;
                  a2 = v17;
                }
              }
              sub_22260E374((uint64_t)&v76, v30);
            }
          }
        }
      }
    }
  }
  if (sub_2225F38E8(&v74))
  {
    int v5 = sub_22260BB2C(a1);
    if (v5)
    {
      int v6 = v5;
      uint64_t v7 = 0;
      do
      {
        v76.n128_u8[0] = 0;
        uint64_t v8 = (_DWORD *)sub_222609E70(a1, v7);
        if (v76.n128_u8[0]) {
          goto LABEL_12;
        }
        uint64_t v9 = (uint64_t)v8;
        if (sub_222609EEC(v8))
        {
          uint64_t v10 = sub_2225E563C(v9);
          if (sub_222609F08(v10))
          {
            uint64_t v11 = sub_2225E563C(v9);
            if (*(void *)(sub_222609F08(v11) + 16) == a2)
            {
              unsigned int v74 = sub_22260BA74(v7);
              break;
            }
          }
        }
        uint64_t v7 = (v7 + 1);
      }
      while (v6 != v7);
    }
    if (sub_2225F38E8(&v74))
    {
      int v34 = sub_22260E378(a1);
      if (v34)
      {
        int v35 = -v34;
        int v36 = 2;
        while (1)
        {
          uint64_t v37 = (_DWORD *)sub_222609E78(a1, v36 - 2, 0);
          if (sub_222609EEC(v37))
          {
            uint64_t v38 = sub_2225E563C((uint64_t)v37);
            if (sub_222609F08(v38))
            {
              uint64_t v39 = sub_2225E563C((uint64_t)v37);
              if (*(void *)(sub_222609F08(v39) + 16) == a2) {
                break;
              }
            }
          }
          ++v36;
          if (v35 + v36 == 2) {
            goto LABEL_33;
          }
        }
        unsigned int v74 = sub_22260BA74(-v36);
      }
    }
  }
LABEL_33:
  if (!sub_2225F38E8(&v74)) {
    goto LABEL_49;
  }
  if ((sub_2225D05E4((uint64_t)v77) & 1) == 0)
  {
    size_t v40 = (char *)sub_2225C3C70(a2);
    sub_2225C3D00((int)v70, v40);
    *(void *)&long long v71 = sub_2225CF480(v70[0], v70[1]);
    *((void *)&v71 + 1) = v41;
    uint64_t v42 = sub_22260E21C((uint64_t)v77, &v71);
    if (!sub_2225D05E4(v42)) {
      goto LABEL_49;
    }
  }
  if ((sub_2225D05E4((uint64_t)v78) & 1) == 0
    && (sub_22260E270(a2, v43, &v76),
        uint64_t v44 = sub_22260E31C((uint64_t)v78, (uint64_t)&v76),
        int v45 = sub_2225D05E4(v44),
        sub_22260E374((uint64_t)&v76, v46),
        !v45)
    || (v69 = 0, (unsigned int v47 = sub_22260BB2C(a1)) == 0))
  {
LABEL_49:
    unsigned int v75 = v74;
    goto LABEL_50;
  }
  uint64_t v48 = 0;
  uint64_t v49 = v47;
  while (1)
  {
    sub_2225F3278(&v71);
    LODWORD(v71) = v48;
    uint64_t v50 = (_DWORD *)sub_222609DB4(a1, v48, &v69);
    if (v69) {
      break;
    }
    uint64_t v51 = (uint64_t)v50;
    if (sub_222609EEC(v50))
    {
      uint64_t v52 = sub_2225E563C(v51);
      unint64_t v53 = sub_222609F08(v52);
      if (v53)
      {
        uint64_t v54 = *(void *)(v53 + 16);
        if (v54)
        {
          int v55 = (uint64_t *)j_nullsub_1(v77, v13);
          uint64_t v56 = *v55;
          uint64_t v57 = v55[1];
          uint64_t v58 = (char *)sub_2225C3C70(v54);
          sub_2225C3D00((int)v68, v58);
          uint64_t v59 = (const void *)sub_2225CF480(v68[0], v68[1]);
          if (sub_2225CD4BC(v56, v57, v59, v60))
          {
            sub_22260E270(v54, v13, &v76);
            if (sub_2225D05E4((uint64_t)&v76))
            {
              uint64_t v62 = (void *)j_nullsub_1(v78, v61);
              int v64 = (void *)j_nullsub_1(&v76, v63);
              if (sub_2225CFD8C(v62, v64))
              {
                unsigned int v74 = sub_22260BA74(v48);
                sub_22260E374((uint64_t)&v76, v67);
                goto LABEL_49;
              }
            }
            sub_22260E374((uint64_t)&v76, v61);
          }
        }
      }
    }
    if (v49 == ++v48) {
      goto LABEL_49;
    }
  }
LABEL_12:
  sub_2225F3278(&v75);
LABEL_50:
  sub_22260E374((uint64_t)v77, v13);
  sub_22260E374((uint64_t)v78, v65);
  return v75;
}

uint64_t sub_22260E04C(uint64_t a1, unsigned int a2, unsigned int a3, int a4)
{
  unsigned int v32 = a2;
  if (sub_2225F38E8(&v32)) {
    goto LABEL_25;
  }
  char v31 = 0;
  uint64_t v7 = (_DWORD *)sub_222609DB4(a1, v32, &v31);
  if (v31) {
    goto LABEL_25;
  }
  uint64_t v8 = v7;
  if ((sub_222609EEC(v7) & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v9 = sub_222609DDC(v8);
  unsigned int v10 = sub_22260BA74(v9);
  unsigned int v30 = v10;
  if (a3 == 1 && a4 == 1) {
    return v10;
  }
  uint64_t v11 = sub_2225E563C((uint64_t)v8);
  unint64_t v12 = sub_222609F08(v11);
  if (v12)
  {
    uint64_t v13 = v12;
    if (*(void *)(v12 + 32) || (char v29 = 0, sub_22260D594(*(void *)(a1 + 8), v12, a1 + 24, a1, &v29), !v29))
    {
      uint64_t v14 = *(void *)(a1 + 8);
      if ((*(_DWORD *)(v13 + 40) & 0x7FFFFFFFu) >= a3)
      {
        sub_2225F3278(&v27);
        uint64_t v18 = sub_22260A0F0(v13, v14, a1, v27, 0);
        uint64_t v19 = *(unsigned int *)(*(void *)(v13 + 32) + 4 * (a3 - 1));
        uint64_t v20 = sub_2225C3D04(v18);
        int v21 = sub_2225CE2C0(v18);
        if (v19 != v21)
        {
          LODWORD(v22) = v21 + ~v19;
          if (v22 >= a4 - 1) {
            uint64_t v22 = (a4 - 1);
          }
          else {
            uint64_t v22 = v22;
          }
          if (v22)
          {
            uint64_t v23 = 0;
            while (1)
            {
              int v24 = *(unsigned __int8 *)(v20 + v19 + v23);
              if (v24 == 10 || v24 == 13) {
                break;
              }
              if (v22 == ++v23) {
                goto LABEL_28;
              }
            }
            LODWORD(v22) = v23;
          }
LABEL_28:
          LODWORD(v19) = v22 + v19;
        }
        int v17 = v19;
      }
      else
      {
        sub_2225F3278(&v28);
        uint64_t v15 = sub_22260A0F0(v13, v14, a1, v28, 0);
        int v16 = sub_2225CE2C0(v15);
        if (v16) {
          int v17 = v16 - 1;
        }
        else {
          int v17 = 0;
        }
      }
      return sub_22260C644(&v30, v17);
    }
  }
LABEL_25:
  sub_2225F3278(&v33);
  return v33;
}

uint64_t sub_22260E21C(uint64_t a1, _OWORD *a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    *(_OWORD *)j_nullsub_1(a1, a2) = *a2;
  }
  else
  {
    *(_OWORD *)a1 = *a2;
    *(unsigned char *)(a1 + 16) = 1;
  }
  return a1;
}

double sub_22260E270@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  if (a1)
  {
    j_nullsub_1(&v10, a2);
    int v5 = (unsigned char *)sub_2225C3C70(a1);
    sub_2225CBDE8((uint64_t)v8, v5);
    v9[0] = sub_2225CF8D0(v8, (uint64_t *)&v10);
    v9[1] = v6;
    if (sub_2225CDBBC(v9)) {
      sub_22260E218((uint64_t)a3);
    }
    else {
      *(void *)&double result = sub_22260F8E0(a3, &v10).n128_u64[0];
    }
  }
  else
  {
    sub_22260E218((uint64_t)a3);
  }
  return result;
}

uint64_t sub_22260E31C(uint64_t a1, uint64_t a2)
{
  if (sub_2225D05E4(a2))
  {
    int v5 = (_OWORD *)j_nullsub_1(a2, v4);
    sub_22260E21C(a1, v5);
    uint64_t v6 = a2;
  }
  else
  {
    uint64_t v6 = a1;
  }
  sub_222611EE8(v6, v4);
  return a1;
}

unint64_t sub_22260E378(uint64_t a1)
{
  return sub_222609DE8(a1 + 440);
}

uint64_t sub_22260E394(uint64_t a1, uint64_t a2)
{
  sub_222611F18(&v3, a1, a2);
  return v3;
}

uint64_t sub_22260E3C4(uint64_t a1, _DWORD *a2)
{
  uint64_t v2 = a2;
  *(_DWORD *)sub_2225CC180(a1) = *a2;
  LODWORD(v2) = v2[1];
  *(_DWORD *)sub_2225D2BAC(a1) = v2;
  return a1;
}

uint64_t sub_22260E408(_DWORD *a1, unsigned int a2)
{
  unsigned int v17 = a2;
  if (sub_2225F38E8(&v17))
  {
    sub_2225F3278(&v13);
    int v12 = 0;
    v15[0] = sub_2225E15B0((uint64_t)&v13, (uint64_t)&v12);
    sub_2225E15E0(&v18, v15);
    return v18;
  }
  else
  {
    sub_22260E62C(&v12);
    uint64_t v13 = sub_22260E5F8((uint64_t)&v17, (uint64_t)&v12);
    int v14 = v4;
    sub_22260E538((uint64_t)(a1 + 148), (uint64_t)&v13, (uint64_t)v15);
    int v5 = (_DWORD *)(sub_2225C3C70((uint64_t)v15) + 4);
    if (v16)
    {
      sub_2225F3278(&v12);
      char v11 = 0;
      uint64_t v6 = (_DWORD *)sub_222609DB4((uint64_t)a1, v17, &v11);
      if (!v11)
      {
        uint64_t v7 = (uint64_t)v6;
        if (sub_222609F14(v6))
        {
          uint64_t v8 = sub_2225E563C(v7);
          int v9 = sub_22260C5BC(v8);
        }
        else
        {
          __n128 v10 = (unsigned int *)sub_2225E563C(v7);
          int v9 = sub_22260C63C(v10);
        }
        int v12 = v9;
      }
      if (sub_2225CDBBC(&v12))
      {
        uint64_t v13 = sub_222609C14(a1, v12);
        sub_2225D3DC8(v5, &v13);
      }
    }
    return *(void *)v5;
  }
}

uint64_t sub_22260E538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v13 = 0;
  if (sub_222611FE8(a1, (unsigned int *)a2, &v13))
  {
    uint64_t v6 = v13;
    uint64_t v7 = sub_222610B48(a1);
    sub_222612024(v12, v6, v7, 1);
    char v11 = 0;
  }
  else
  {
    uint64_t v8 = sub_222612028(a1, (unsigned int *)a2, (void *)(a2 + 4), v13);
    uint64_t v13 = v8;
    uint64_t v9 = sub_222610B48(a1);
    sub_222612024(v12, v8, v9, 1);
    char v11 = 1;
  }
  return sub_2225F7FE8((uint64_t)v12, (uint64_t)&v11, a3);
}

uint64_t sub_22260E5F8(uint64_t a1, uint64_t a2)
{
  sub_222611FD0(&v3, a1, a2);
  return v3;
}

int *sub_22260E630(uint64_t a1, int a2, int a3)
{
  int v9 = a3;
  int v10 = a2;
  sub_2225E1610(&v8, &v10, &v9);
  if (sub_22260E6DC(a1 + 616) <= 0x12B) {
    return sub_22260E6E0(a1 + 616, &v8);
  }
  sub_22260E6FC(a1 + 616, &v8, (uint64_t)v7);
  sub_22260E770(a1 + 616, (uint64_t)v5);
  sub_2225F8068(v6, v5);
  if (sub_2225F9558(v7, (uint64_t)v6)) {
    return (int *)(sub_2225C3C70((uint64_t)v7) + 8);
  }
  else {
    return (int *)(a1 + 640);
  }
}

int *sub_22260E6E0(uint64_t a1, int *a2)
{
  return sub_222612498(a1, a2) + 2;
}

uint64_t sub_22260E6FC@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_222612500(a1, a2, &v8)) {
    return sub_22260E770(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_222610CE0(a1);
  return sub_222612968(a3, v5, v6, 1);
}

uint64_t sub_22260E770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_222610CE0(a1);
  uint64_t v5 = sub_222610CE0(a1);

  return sub_222612968(a2, v4, v5, 1);
}

BOOL sub_22260E7CC(_DWORD *a1, int a2, int a3)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  int v19 = a3;
  int v20 = a2;
  if (sub_22260CBC4((unsigned int *)&v20, (unsigned int *)&v19)) {
    return 0;
  }
  uint64_t v18 = sub_222609C14(a1, v20);
  uint64_t v17 = sub_222609C14(a1, v19);
  if (!sub_2225F38E8(&v18) && !sub_2225F38E8(&v17))
  {
    if (sub_2225F5218(&v18, &v17)) {
      return HIDWORD(v18) < HIDWORD(v17);
    }
    uint64_t v6 = sub_22260E630((uint64_t)a1, v18, v17);
    if (sub_22260EAD8(v6, v18, v17)) {
      return sub_22260EB1C((uint64_t)v6, HIDWORD(v18), HIDWORD(v17));
    }
    sub_22260EB90((uint64_t)v6, v18, v17, (int)v18 < (int)v17);
    sub_22260EB9C(v21, 0);
    do
      sub_22260EBA0(v21, (uint64_t)&v18, (uint64_t)v16);
    while (sub_22260EC60(&v18, &v17) && !sub_22260EC7C((unsigned int *)&v18, a1));
    sub_2225CCC70(v16);
    do
    {
      sub_22260ECD8((uint64_t)v21, (unsigned int *)&v17, (uint64_t)&v15);
      *(_OWORD *)char v16 = v15;
      sub_22260ED4C((uint64_t)v21, (uint64_t)v13);
      sub_2225F8068(v14, v13);
    }
    while (sub_22260B634(v16, (uint64_t)v14) && !sub_22260EC7C((unsigned int *)&v17, a1));
    sub_22260ED4C((uint64_t)v21, (uint64_t)v14);
    sub_2225F8068(&v15, v14);
    if (sub_2225F9558(v16, (uint64_t)&v15))
    {
      uint64_t v7 = (_DWORD *)sub_2225C3C70((uint64_t)v16);
      sub_2225D3DC8(&v18, v7);
    }
    if (sub_2225F5218(&v18, &v17))
    {
      sub_22260EDA8(v6, v18, SHIDWORD(v18), SHIDWORD(v17));
      BOOL v8 = sub_22260EB1C((uint64_t)v6, HIDWORD(v18), HIDWORD(v17));
    }
    else
    {
      sub_22260EDB4((uint64_t)v6);
      uint64_t v9 = sub_222609B70((uint64_t)a1, v18, 0);
      int v10 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 16))(v9);
      BOOL v4 = strcmp("<built-in>", v10) == 0;
      uint64_t v11 = sub_222609B70((uint64_t)a1, v17, 0);
      int v12 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v11 + 16))(v11);
      if (v4 == (strcmp("<built-in>", v12) != 0))
      {
LABEL_25:
        sub_22260EE04(v21);
        return v4;
      }
      BOOL v8 = sub_22260EDF0(&v18, &v17);
    }
    BOOL v4 = v8;
    goto LABEL_25;
  }
  if (!sub_2225F38E8(&v18)) {
    return 0;
  }
  return !sub_2225F38E8(&v17);
}

BOOL sub_22260EAD8(_DWORD *a1, int a2, int a3)
{
  int v5 = a3;
  int v6 = a2;
  BOOL result = sub_2225F5218(a1, &v6);
  if (result) {
    return sub_2225F5218(a1 + 1, &v5);
  }
  return result;
}

BOOL sub_22260EB1C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  int v6 = (_DWORD *)(a1 + 12);
  if (sub_22260EC60((_DWORD *)a1, (_DWORD *)(a1 + 12))) {
    a2 = *(_DWORD *)(a1 + 16);
  }
  if (sub_22260EC60((_DWORD *)(a1 + 4), v6)) {
    a3 = *(_DWORD *)(a1 + 20);
  }
  if (a2 == a3) {
    return *(unsigned char *)(a1 + 8) != 0;
  }
  else {
    return a2 < a3;
  }
}

uint64_t sub_22260EB90(uint64_t result, int a2, int a3, char a4)
{
  *(_DWORD *)BOOL result = a2;
  *(_DWORD *)(result + 4) = a3;
  *(unsigned char *)(result + 8) = a4;
  return result;
}

uint64_t sub_22260EBA0@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v13 = 0;
  if (sub_222612D34((uint64_t)a1, (unsigned int *)a2, &v13))
  {
    int v6 = v13;
    uint64_t v7 = sub_222612B64((uint64_t)a1);
    sub_222612D70(v12, v6, v7, 1);
    char v11 = 0;
  }
  else
  {
    BOOL v8 = sub_222612D74(a1, (unsigned int *)a2, (int *)(a2 + 4), v13);
    uint64_t v13 = v8;
    uint64_t v9 = sub_222612B64((uint64_t)a1);
    sub_222612D70(v12, v8, v9, 1);
    char v11 = 1;
  }
  return sub_2225F7FE8((uint64_t)v12, (uint64_t)&v11, a3);
}

BOOL sub_22260EC60(_DWORD *a1, _DWORD *a2)
{
  return !sub_2225F5218(a1, a2);
}

BOOL sub_22260EC7C(unsigned int *a1, _DWORD *a2)
{
  uint64_t v5 = sub_22260E408(a2, *a1);
  BOOL v3 = sub_2225F38E8(&v5);
  if (!v3) {
    sub_2225D3DC8(a1, &v5);
  }
  return v3;
}

uint64_t sub_22260ECD8@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_222612D34(a1, a2, &v8)) {
    return sub_22260ED4C(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_222612B64(a1);
  return sub_222612D70(a3, v5, v6, 1);
}

uint64_t sub_22260ED4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_222612B64(a1);
  uint64_t v5 = sub_222612B64(a1);

  return sub_222612D70(a2, v4, v5, 1);
}

_DWORD *sub_22260EDA8(_DWORD *result, int a2, int a3, int a4)
{
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_DWORD *sub_22260EDB4(uint64_t a1)
{
  BOOL result = sub_2225F3278(&v4);
  int v3 = v4;
  *(_DWORD *)a1 = v4;
  *(_DWORD *)(a1 + 4) = v3;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

BOOL sub_22260EDF0(_DWORD *a1, _DWORD *a2)
{
  return *a1 < *a2;
}

uint64_t *sub_22260EE08(uint64_t *result, uint64_t a2, char a3)
{
  *(unsigned char *)(*result + *((unsigned int *)result + 2) + 289) = a3;
  uint64_t v3 = *result;
  uint64_t v4 = *((unsigned int *)result + 2);
  *((_DWORD *)result + 2) = v4 + 1;
  *(void *)(v3 + 8 * v4 + 544) = a2;
  return result;
}

uint64_t sub_22260EE34(uint64_t a1)
{
  uint64_t v2 = sub_22260EE6C();
  sub_2225D250C((void *)(v2 + 160));
  sub_2225E0EC8(a1 + 184, v3);
  return a1;
}

uint64_t sub_22260EE70(uint64_t a1)
{
  uint64_t v2 = sub_2225E50F8(a1, 8);
  sub_2225E0EC4((void *)(v2 + 24));
  return a1;
}

_DWORD *sub_22260EEA4(_DWORD *a1)
{
  uint64_t v2 = sub_2225F3278(a1);
  sub_2225F3278(v2 + 1);
  sub_2225F3278(a1 + 3);
  return a1;
}

uint64_t sub_22260EEDC(uint64_t a1)
{
  sub_22260EF20(a1 + 184);
  sub_2225E4E68(a1 + 160);

  return sub_22260EF24(a1);
}

uint64_t sub_22260EF30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_22260EF64(a1, v3);
  return a1;
}

uint64_t sub_22260EF64(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_22260EF64(result, *a2);
    sub_22260EF64(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = j_nullsub_1(a2 + 4, v6);
    sub_22260EFE0(v5, v7);
    return sub_2225E1E48(v5, a2, 1);
  }
  return result;
}

uint64_t sub_22260EFE0(uint64_t a1, uint64_t a2)
{
  return sub_22260EFE8(a2);
}

uint64_t sub_22260EFF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_22260F020(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_22260F060(&v3);
  return a1;
}

uint64_t *sub_22260F060(uint64_t *a1)
{
  BOOL result = (uint64_t *)*a1;
  if (*result)
  {
    sub_22260F0D8(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    unint64_t v9 = sub_22260F0E4(v6, v8);
    return (uint64_t *)sub_22260F0E0(v5, v7, v9);
  }
  return result;
}

uint64_t sub_22260F0D8(uint64_t *a1)
{
  return sub_22260F124((uint64_t)a1, *a1);
}

unint64_t sub_22260F0E4(void *a1, uint64_t a2)
{
  return 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 2);
}

uint64_t sub_22260F124(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; BOOL result = j_nullsub_1(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 20;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_22260F18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 20 * a3, 4);
}

uint64_t sub_22260F1A0(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_22260F234(v5, a1 + 24);
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  sub_2225E1434(a1 + 24);
  return a1;
}

uint64_t sub_22260F234(unsigned int *a1, uint64_t a2)
{
  sub_2225C3B40(a1);

  return nullsub_1(a2, a1);
}

void *sub_22260F27C(void *a1)
{
  uint64_t v2 = (std::string *)sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_22260F2D4(v2, v3);
  if (!sub_2225C603C(a1))
  {
    uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

void sub_22260F2D4(std::string *a1, std::string *a2)
{
  if (a2 != a1)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v2 = (std::string *)((char *)v2 - 40);
      j_std::string::~string(v2);
    }
    while (v2 != a1);
  }
}

uint64_t sub_22260F318(uint64_t a1)
{
  uint64_t result = sub_2225E51C8(a1);
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 8 * v3;
      do
      {
        uint64_t v6 = *(void *)a1;
        uint64_t v7 = *(void *)(*(void *)a1 + v4);
        if (v7)
        {
          uint64_t result = sub_2225CAE20();
          if (v7 != result) {
            uint64_t result = sub_22260F234(*(unsigned int **)(v6 + v4), a1 + 24);
          }
        }
        *(void *)(v6 + v4) = 0;
        v4 += 8;
      }
      while (v5 != v4);
    }
    *(_DWORD *)(a1 + 12) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  return result;
}

void *sub_22260F3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_22260EF64(a1, v3);
  *(void *)sub_2225D2650(a1, v4) = 0;
  uint64_t v6 = sub_2225E1E5C(a1, v5);
  *(void *)nullsub_1(a1, v7) = v6;
  uint64_t result = (void *)sub_2225E1E5C(a1, v8);
  void *result = 0;
  return result;
}

uint64_t sub_22260F400(uint64_t a1, uint64_t a2)
{
  sub_22260F450(a1 + 8, 0, 0);
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  char v4 = *(unsigned char *)(a1 + 44);
  *(_DWORD *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 44) = v4 & 0xFE;
  return a1;
}

uint64_t *sub_22260F454(uint64_t *a1, uint64_t a2, unsigned int a3)
{
  return a1;
}

uint64_t sub_22260F47C(uint64_t *a1, uint64_t a2, unsigned int a3)
{
  uint64_t result = nullsub_1(a2, a2);
  *a1 = result | a3;
  return result;
}

uint64_t sub_22260F4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22260F450(a1 + 8, 0, 0);
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = a3;
  *(void *)(a1 + 32) = 0;
  char v6 = *(unsigned char *)(a1 + 44);
  *(_DWORD *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 44) = v6 & 0xFE;
  return a1;
}

void sub_22260F510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_22260F584(v7, v4);
  }
}

void sub_22260F584(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_22260F5B8(a2);
    j__free(v2);
  }
}

uint64_t sub_22260F5BC(uint64_t a1)
{
  sub_222607F1C(a1 + 24);

  return sub_222608B18(a1);
}

uint64_t sub_22260F5F8(uint64_t a1)
{
  uint64_t v2 = sub_222608F94(a1, 0);
  sub_222607D2C(v2 + 24, 0);
  return a1;
}

uint64_t sub_22260F630(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    uint64_t v9 = sub_2225F9A1C();
    uint64_t v10 = sub_2225F9EB8();
    int v11 = v8 - 1;
    unsigned int v12 = sub_2225FB0F4(a2) & (v8 - 1);
    uint64_t v13 = (uint64_t *)(v6 + 16 * v12);
    if (sub_2225D085C(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      int v14 = 0;
      int v15 = 1;
      while (!sub_2225D085C(*v13, v9))
      {
        if (sub_2225D085C(*v13, v10) && v14 == 0) {
          int v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        uint64_t v13 = (uint64_t *)(v6 + 16 * v12);
        ++v15;
        if (sub_2225D085C(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        uint64_t v13 = v14;
      }
    }
  }
  else
  {
    uint64_t v13 = 0;
  }
LABEL_13:
  *a3 = v13;
  return result;
}

uint64_t sub_22260F754()
{
  sub_22260F770();
  return v0;
}

uint64_t sub_22260F778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  int v8 = (char *)j_j_nullsub_1(a3);
  uint64_t v9 = sub_22260F808((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_22260F808(int a1, const void *a2, uint64_t a3, char *__dst)
{
  return sub_22260F818(a2, a3, __dst);
}

uint64_t sub_22260F818(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_22260F870(__dst, a1, (a2 - (uint64_t)a1) >> 2);
  uint64_t v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

void *sub_22260F870(void *__dst, const void *a2, uint64_t a3)
{
  if (a3) {
    memmove(__dst, a2, 4 * a3);
  }
  return __dst;
}

uint64_t sub_22260F8A4(uint64_t a1)
{
  *(void *)a1 = 0;
  sub_2225F3278((_DWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_22260F8D0(uint64_t result, uint64_t a2, int a3, int a4, int a5)
{
  *(void *)uint64_t result = a2;
  *(_DWORD *)(result + 8) = a3;
  *(_DWORD *)(result + 12) = a4;
  *(_DWORD *)(result + 16) = a5;
  return result;
}

uint64_t sub_22260F8E4(uint64_t result)
{
  *(unsigned char *)(result + 16) = 0;
  return result;
}

__n128 sub_22260F8EC(__n128 *a1, __n128 *a2)
{
  a1[1].n128_u8[0] = 1;
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_DWORD *sub_22260F900(_DWORD *a1)
{
  __n128 result = sub_2225F3278(a1);
  result[1] = 0;
  return result;
}

BOOL sub_22260F91C()
{
  return sub_2225F5668() == 0;
}

uint64_t sub_22260F93C(uint64_t a1)
{
  uint64_t v2 = sub_222608BD4(a1);
  uint64_t v3 = sub_222608BD4(a1);
  sub_22260F98C(&v5, v2, v3, 1);
  return v5;
}

uint64_t sub_22260F990(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_22260F9C4((uint64_t **)a1);
  }
  return a1;
}

uint64_t sub_22260F9C4(uint64_t **a1)
{
  uint64_t v2 = sub_2225F9A58();
  uint64_t result = sub_2225F9EBC();
  uint64_t v4 = *a1;
  if (*a1 != a1[1])
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D085C(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      uint64_t v4 = *a1 + 2;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

uint64_t sub_22260FA40(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_22260F630(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_22260FA7C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *(void *)a2, *(void *)(a2 + 8));
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_22260FB6C(*(void *)a2, *(void *)(a2 + 8), (uint64_t *)(a1 + 24), *(unsigned int *)(a2 + 16));
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_22260FB6C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v13);
  unsigned int v7 = sub_2225DABE8();
  uint64_t v8 = sub_2225CC520(a3, (v6 + 9), v7);
  uint64_t v9 = sub_2226095A0(v8, v6, a4);
  char v10 = (void *)sub_2225E563C(v9);
  uint64_t v11 = (const void *)sub_2225C3C70((uint64_t)v13);
  memcpy(v10, v11, v6);
  *((unsigned char *)v10 + v6) = 0;
  return v8;
}

uint64_t sub_22260FC00(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_22260FCD4(a1, &v19, a2);
  uint64_t v10 = *v9;
  char v18 = 0;
  if (!v10)
  {
    uint64_t v11 = v9;
    sub_22260FD94(a1, a3, a4, a5, (uint64_t)v17);
    unsigned int v12 = v19;
    uint64_t v14 = (void *)sub_2225CBA80((uint64_t)v17, v13);
    sub_2225E3140(a1, (uint64_t)v12, v11, v14);
    uint64_t v10 = sub_2225CE10C((uint64_t)v17, v15);
    char v18 = 1;
    sub_22260FE48(v17);
  }
  sub_2225C64B8(v17, v10);
  sub_2225D7B28(&v20, v17, &v18);
  return v20;
}

uint64_t *sub_22260FCD4(uint64_t a1, uint64_t **a2, _DWORD *a3)
{
  uint64_t v6 = sub_2225E1E1C(a1, (uint64_t)a2);
  uint64_t v8 = sub_2225E31D0(a1, v7);
  if (v6)
  {
    uint64_t v10 = (uint64_t *)v8;
    do
    {
      while (1)
      {
        uint64_t v11 = (uint64_t *)v6;
        uint64_t v12 = sub_2225D2650(a1, v9);
        uint64_t v13 = v6 + 32;
        if (!sub_22260FE4C(v12, a3, v13)) {
          break;
        }
        uint64_t v6 = *v11;
        uint64_t v10 = v11;
        if (!*v11) {
          goto LABEL_10;
        }
      }
      uint64_t v14 = sub_2225D2650(a1, v9);
      if (!sub_22260FE94(v14, v13, a3)) {
        break;
      }
      uint64_t v10 = v11 + 1;
      uint64_t v6 = v11[1];
    }
    while (v6);
  }
  else
  {
    uint64_t v11 = (uint64_t *)sub_2225E1E5C(a1, v9);
    uint64_t v10 = v11;
  }
LABEL_10:
  *a2 = v11;
  return v10;
}

uint64_t sub_22260FD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = sub_2225E1E38(a1, a2);
  uint64_t v10 = sub_2225E31D4(v9, 1);
  sub_2225E31D8((uint64_t)&v18, v9, 0);
  uint64_t v11 = sub_2225E31DC(a5, v10);
  uint64_t v13 = sub_2225CBA80(v11, v12);
  uint64_t v15 = j_nullsub_1(v13 + 32, v14);
  sub_22260FEE8(v9, v15, a2, a3, a4);
  uint64_t result = sub_2225E31E4(a5, v16);
  *(unsigned char *)(result + 8) = 1;
  return result;
}

BOOL sub_22260FE4C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5 = (_DWORD *)nullsub_1(a3, a2);

  return sub_22260FEDC(a1, a2, v5);
}

BOOL sub_22260FE94(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v5 = (_DWORD *)nullsub_1(a2, a2);

  return sub_22260FEDC(a1, v5, a3);
}

BOOL sub_22260FEDC(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  return sub_22260EDF0(a2, a3);
}

uint64_t sub_22260FEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_22260FEF8(a2, *a4);
}

uint64_t sub_22260FEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  return sub_22260FF24(a1, &v4, &v3);
}

uint64_t sub_22260FF28(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)sub_2225CC180(a2);
  sub_2225D250C((void *)(a1 + 8));
  return a1;
}

uint64_t sub_22260FF64(uint64_t a1)
{
  return a1;
}

void *sub_22260FF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = sub_2225E3330(a1, v7);
    return (void *)sub_222610000(v8, v4);
  }
  return result;
}

uint64_t sub_222610000(uint64_t result, uint64_t a2)
{
  char v3 = (uint64_t *)result;
  if (*(unsigned char *)(result + 8))
  {
    uint64_t v4 = *(void *)result;
    uint64_t v5 = j_nullsub_1(a2 + 32, a2);
    uint64_t result = sub_22260EFE0(v4, v5);
  }
  if (a2)
  {
    uint64_t v6 = *v3;
    return sub_2225E1E48(v6, a2, 1);
  }
  return result;
}

void *sub_22261007C(uint64_t a1, __n128 *a2)
{
  sub_2226101A0(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = (__n128 *)nullsub_1(v10, v6);
  sub_2226101A4(v5, v7, a2);
  v10 += 20;
  return sub_2225D284C(&v9);
}

uint64_t sub_2226100F0(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, (uint64_t)a2);
  unint64_t v5 = sub_222610258(a1);
  unint64_t v6 = sub_2226101DC(a1, v5 + 1);
  unint64_t v7 = sub_222610258(a1);
  sub_222610274(v12, v6, v7, v4);
  uint64_t v9 = (__n128 *)nullsub_1(v13, v8);
  sub_2226101A4(v4, v9, a2);
  v13 += 20;
  sub_222610278(a1, v12);
  uint64_t v10 = a1[1];
  sub_222610368(v12);
  return v10;
}

void *sub_2226101A8(void *result, uint64_t a2, uint64_t a3)
{
  void *result = a2;
  result[1] = *(void *)(a2 + 8);
  result[2] = *(void *)(a2 + 8) + 20 * a3;
  return result;
}

__n128 sub_2226101C8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u32[0] = a3[1].n128_u32[0];
  *a2 = result;
  return result;
}

unint64_t sub_2226101DC(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_22261036C((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_22260F0E4(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

unint64_t sub_222610258(void *a1)
{
  return 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 2);
}

uint64_t sub_222610278(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2226104C0();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  unint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  unint64_t v10 = sub_222610258(a1);
  return nullsub_1(a1, v10);
}

uint64_t sub_22261036C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_2226103AC(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_2226103B0()
{
  return 0xCCCCCCCCCCCCCCCLL;
}

uint64_t *sub_2226103BC(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_22261044C(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 20 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 20 * v9;
  return a1;
}

uint64_t sub_22261044C(uint64_t a1, unint64_t a2)
{
  return sub_222610474(a1, a2);
}

uint64_t sub_222610474(uint64_t a1, unint64_t a2)
{
  if (sub_2226103AC(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(20 * a2, 4);
}

uint64_t sub_2226104C0()
{
  return sub_2226104DC();
}

uint64_t sub_2226104DC()
{
  sub_222610504(v1);
  return v1[2];
}

uint64_t sub_22261050C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_2226105DC(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_2226105DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v15[0] = a1;
  v15[1] = a2;
  v14[0] = a3;
  v14[1] = a4;
  v13[0] = a5;
  v13[1] = a6;
  while (sub_2225D2CC0((uint64_t)v15, (uint64_t)v14))
  {
    uint64_t v9 = sub_222610674((uint64_t)v15, v8);
    uint64_t v10 = sub_22260A8A4((uint64_t)v13);
    int v11 = *(_DWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v9;
    *(_DWORD *)(v10 + 16) = v11;
    sub_2226106AC((uint64_t)v15);
    sub_2226106AC((uint64_t)v13);
  }
  return sub_2225CCC60((uint64_t)v15, (uint64_t)v13, a7);
}

uint64_t sub_222610674(uint64_t a1, uint64_t a2)
{
  nullsub_1(a1, a2);

  return sub_22260A8A4(a1);
}

uint64_t sub_2226106AC(uint64_t result)
{
  *(void *)(result + 8) -= 20;
  return result;
}

uint64_t *sub_2226106BC(uint64_t *a1)
{
  sub_22261071C((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    unint64_t v5 = sub_222610724(a1, v4);
    sub_22260F0E0(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_22261071C(uint64_t a1)
{
  return sub_222610764(a1, *(void *)(a1 + 8));
}

unint64_t sub_222610724(void *a1, uint64_t a2)
{
  return 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 2);
}

uint64_t sub_222610768(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 20;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      __n128 result = j_nullsub_1(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_2226107D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226107FC(a1, a2, a3, (uint64_t)&v5, (uint64_t)&v4);
}

uint64_t sub_2226107FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a1;
  uint64_t v17 = a1;
  uint64_t v9 = sub_2226108BC();
  if (v9)
  {
    unint64_t v10 = v9;
    do
    {
      unint64_t v11 = sub_2225DC2E8(v10);
      sub_2226108C0(&v17, v11);
      uint64_t v16 = v12;
      uint64_t v13 = sub_2225C3C70((uint64_t)&v16);
      uint64_t v14 = sub_2225DC2F8(a5, v13);
      if ((sub_2226108C8(a4, a3, v14) & 1) == 0)
      {
        uint64_t v17 = *sub_2226108CC(&v16);
        unint64_t v11 = v10 + ~v11;
      }
      unint64_t v10 = v11;
    }
    while (v11);
    return v17;
  }
  return v8;
}

void sub_2226108C0(uint64_t *a1, uint64_t a2)
{
}

void *sub_2226108CC(void *result)
{
  *result += 20;
  return result;
}

unint64_t sub_2226108E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  return sub_22261090C((uint64_t)&v3, (uint64_t)&v4);
}

unint64_t sub_22261090C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return 0xCCCCCCCCCCCCCCCDLL * ((v3 - sub_2225C3C70(a2)) >> 2);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_222610950(uint64_t a1, uint64_t a2)
{
  sub_22261097C((uint64_t)&v2, a2);
}

uint64_t sub_22261097C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_2226109BC(a1, v3);
}

void *sub_2226109C0(void *result, uint64_t a2)
{
  *result += 20 * a2;
  return result;
}

BOOL sub_2226109D4(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  return sub_2226109E0(*a2, a3);
}

BOOL sub_2226109E0(unsigned int a1, unsigned int *a2)
{
  return *a2 > a1;
}

uint64_t sub_2226109F0(uint64_t a1)
{
  return sub_2226109F8(a1, 8u);
}

uint64_t sub_2226109F8(uint64_t a1, unsigned int a2)
{
  return sub_2225C69D4(a1, 24 * a2);
}

uint64_t sub_222610A04(uint64_t a1)
{
  return sub_2226109F8(a1, 0);
}

uint64_t sub_222610A0C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222610A40(v4, v2);
  return a1;
}

uint64_t sub_222610A40(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222610A8C(a1, a2);
  if (result)
  {
    return sub_222610ADC(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

BOOL sub_222610A8C(uint64_t a1, unsigned int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  if (a2) {
    uint64_t v4 = sub_2225C26A4(12 * a2);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4;
  return a2 != 0;
}

uint64_t sub_222610ADC(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  int v2 = sub_222610B44();
  uint64_t v3 = (_DWORD *)sub_2225CC180(a1);
  uint64_t result = sub_222610B48(a1);
  while (v3 != (_DWORD *)result)
  {
    *uint64_t v3 = v2;
    v3 += 3;
  }
  return result;
}

uint64_t sub_222610B48(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 12 * sub_2225F5148(a1);
}

uint64_t sub_222610B80()
{
  sub_2225F3278(&v1);
  return v1;
}

uint64_t sub_222610BA8(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222610BDC(v4, v2);
  return a1;
}

uint64_t sub_222610BDC(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222610C28(a1, a2);
  if (result)
  {
    return sub_222610C74(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

BOOL sub_222610C28(uint64_t a1, unsigned int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  if (a2) {
    uint64_t v4 = sub_2225C26A4(32 * a2);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4;
  return a2 != 0;
}

uint64_t sub_222610C74(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  uint64_t v2 = sub_2225F50F4(a1, 0);
  uint64_t v3 = sub_222610CDC(v2);
  uint64_t v4 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_222610CE0(a1);
  while (v4 != (void *)result)
  {
    *uint64_t v4 = v3;
    v4 += 4;
  }
  return result;
}

uint64_t sub_222610CE0(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 32 * sub_2225F5148(a1);
}

uint64_t sub_222610D18()
{
  int v2 = sub_222610B80();
  int v1 = sub_222610B80();
  return sub_2225E15B0((uint64_t)&v2, (uint64_t)&v1);
}

uint64_t sub_222610D50(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222610D84(v4, v2);
  return a1;
}

uint64_t sub_222610D84(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222609018(a1, a2);
  if (result)
  {
    return sub_222610DD0(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_222610DD0(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  int v2 = sub_222610B44();
  uint64_t v3 = (_DWORD *)sub_2225CC180(a1);
  uint64_t result = sub_222608BD4(a1);
  while (v3 != (_DWORD *)result)
  {
    *uint64_t v3 = v2;
    v3 += 4;
  }
  return result;
}

uint64_t sub_222610E38(uint64_t a1)
{
  return sub_2225D6048(a1, 2u);
}

uint64_t sub_222610E40(uint64_t a1)
{
  return a1;
}

void **sub_222610E6C(void **a1)
{
  return a1;
}

uint64_t sub_222610E9C(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v3 = sub_222610B44();
    int v4 = sub_222610F2C();
    char v5 = (int *)sub_2225CC180(a1);
    uint64_t result = sub_222610B48(a1);
    if (v5 != (int *)result)
    {
      uint64_t v6 = (int *)result;
      do
      {
        uint64_t result = sub_222610F30(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_222610F30(*v5, v4);
        }
        v5 += 3;
      }
      while (v5 != v6);
    }
  }
  return result;
}

BOOL sub_222610F30(int a1, int a2)
{
  int v4 = a1;
  int v3 = a2;
  return sub_2225F5218(&v4, &v3);
}

uint64_t sub_222610F64()
{
  return sub_22260BA74(0xFFFFFFFFLL);
}

void **sub_222610F6C(void **a1)
{
  return a1;
}

uint64_t sub_222610F9C(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v6 = sub_222610CDC(result);
    uint64_t v5 = sub_222611024();
    int v3 = (int *)sub_2225CC180(a1);
    uint64_t result = sub_222610CE0(a1);
    if (v3 != (int *)result)
    {
      int v4 = (int *)result;
      do
      {
        uint64_t result = sub_222611028(v3, (int *)&v6);
        if ((result & 1) == 0) {
          uint64_t result = sub_222611028(v3, (int *)&v5);
        }
        v3 += 8;
      }
      while (v3 != v4);
    }
  }
  return result;
}

BOOL sub_222611028(int *a1, int *a2)
{
  BOOL result = sub_222610F30(*a1, *a2);
  if (result)
  {
    int v5 = a1[1];
    int v6 = a2[1];
    return sub_222610F30(v5, v6);
  }
  return result;
}

uint64_t sub_222611080()
{
  int v2 = sub_222610F60();
  int v1 = sub_222610F60();
  return sub_2225E15B0((uint64_t)&v2, (uint64_t)&v1);
}

uint64_t sub_2226110B8(uint64_t a1)
{
  return a1;
}

void sub_2226110E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_222611154(v7, v4);
  }
}

void sub_222611154(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    int v2 = (void *)sub_222609FA0(a2);
    j__free(v2);
  }
}

void **sub_222611188(void **a1)
{
  return a1;
}

uint64_t sub_2226111B8(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v3 = sub_222610B44();
    int v4 = sub_222610F2C();
    uint64_t v5 = (int *)sub_2225CC180(a1);
    uint64_t result = sub_222608BD4(a1);
    if (v5 != (int *)result)
    {
      uint64_t v6 = (int *)result;
      do
      {
        uint64_t result = sub_222610F30(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_222610F30(*v5, v4);
        }
        v5 += 4;
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t sub_222611248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_22260F91C())
  {
    return sub_2226112D8(a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225CC180(a1);
    uint64_t v6 = sub_222608BD4(a1);
    return sub_2226114A0(a2, v5, v6, 0);
  }
}

uint64_t sub_2226112D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_222608BD4(a1);
  uint64_t v5 = sub_222608BD4(a1);

  return sub_2226114A0(a2, v4, v5, 1);
}

int **sub_222611338(int **a1)
{
  *a1 += 4;
  sub_2226114D8(a1);
  return a1;
}

uint64_t sub_22261136C(uint64_t a1)
{
  if (((uint64_t (*)(void))sub_2225F5668)() || (uint64_t result = sub_2225F5670(a1), result))
  {
    int v3 = sub_2225F5668(a1);
    if (sub_2225F5148(a1) <= 4 * v3 || sub_2225F5148(a1) < 0x41)
    {
      int v4 = sub_222610B44();
      int v5 = sub_222610F2C();
      uint64_t v6 = (int *)sub_2225CC180(a1);
      uint64_t v7 = sub_222608BD4(a1);
      if (v6 != (int *)v7)
      {
        uint64_t v8 = (int *)v7;
        do
        {
          if (!sub_222610F30(*v6, v4))
          {
            if (!sub_222610F30(*v6, v5)) {
              sub_222611614(a1);
            }
            *uint64_t v6 = v4;
          }
          v6 += 4;
        }
        while (v6 != v8);
      }
      return sub_2225F50F4(a1, 0);
    }
    else
    {
      return sub_222611610(a1);
    }
  }
  return result;
}

uint64_t sub_2226114A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_2226114D8((int **)a1);
  }
  return a1;
}

uint64_t sub_2226114D8(int **a1)
{
  int v2 = sub_222610B80();
  uint64_t result = sub_222610F60();
  int v4 = *a1;
  if (*a1 != a1[1])
  {
    int v5 = result;
    do
    {
      uint64_t result = sub_222610F30(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_222610F30(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      int v4 = *a1 + 4;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

uint64_t sub_222611560(uint64_t a1, uint64_t a2)
{
  int v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_222611594(a1, v3);
  return a1;
}

uint64_t sub_222611594(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_222611594(result, *a2);
    sub_222611594(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = j_nullsub_1((char *)a2 + 28, v6);
    sub_2225E1E40(v5, v7);
    return sub_2225F4F8C(v5, (uint64_t)a2, 1);
  }
  return result;
}

uint64_t sub_222611614(uint64_t a1)
{
  int v2 = sub_2225F5668() - 1;

  return sub_2225F50F0(a1, v2);
}

uint64_t sub_222611650(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 8);
  sub_2226111B8(a1);
  if (v2)
  {
    int v5 = 64;
    int v4 = 1 << (sub_2225D2FA4(v2) + 1);
    unsigned int v2 = *(_DWORD *)sub_2225F753C(&v5, &v4);
  }
  if (v2 == *(_DWORD *)(a1 + 16)) {
    return sub_222610DD0(a1);
  }
  j__free(*(void **)a1);
  return sub_222610D84(a1, v2);
}

uint64_t *sub_2226116E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (sub_22260FA40(a1, a2, &v6)) {
    return v6;
  }
  uint64_t v5 = 0;
  return sub_22261173C(a1, a2, &v5, v6);
}

uint64_t *sub_22261173C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t result = sub_222611778(a1, a2, a4);
  uint64_t *result = *a2;
  result[1] = *a3;
  return result;
}

uint64_t *sub_222611778(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222611864(a1, (2 * v6));
    sub_22260FA40(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_222611864(a1, v7);
    sub_22260FA40(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_2225F9A1C();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_222611868(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  int v4 = *(uint64_t **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222609018(a1, *v5);
  if (v4)
  {
    sub_2226118F4(a1, v4, &v4[2 * v3]);
    j__free(v4);
  }
  else
  {
    sub_222609064(a1);
  }
}

uint64_t sub_2226118F4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_222609064(a1);
  uint64_t v6 = sub_2225F9A1C();
  uint64_t result = sub_2225F9EB8();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_22260FA40(a1, a2, &v9);
          *uint64_t v9 = *a2;
          v9[1] = a2[1];
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 2;
    }
    while (a2 != a3);
  }
  return result;
}

char *sub_2226119B0(const void **a1, uint64_t a2)
{
  return sub_2225C5B7C(a1, 24 * a2, 24);
}

uint64_t sub_2226119C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v13 = 0;
  if (sub_22260FA40(a1, (uint64_t *)a2, &v13))
  {
    uint64_t v6 = v13;
    uint64_t v7 = sub_222608BD4(a1);
    sub_22260F98C(v12, v6, v7, 1);
    char v11 = 0;
  }
  else
  {
    uint64_t v8 = sub_222611AB8(a1, (uint64_t *)a2, (unsigned char *)(a2 + 8), v13);
    uint64_t v13 = v8;
    uint64_t v9 = sub_222608BD4(a1);
    sub_22260F98C(v12, v8, v9, 1);
    char v11 = 1;
  }
  return sub_2225F7FE8((uint64_t)v12, (uint64_t)&v11, a3);
}

uint64_t sub_222611A80(uint64_t a1, uint64_t a2)
{
  sub_222611D2C(&v3, a1, a2);
  return v3;
}

uint64_t *sub_222611AB8(uint64_t a1, uint64_t *a2, unsigned char *a3, uint64_t *a4)
{
  uint64_t result = sub_222611AF4(a1, a2, a4);
  uint64_t *result = *a2;
  *((unsigned char *)result + 8) = *a3;
  return result;
}

uint64_t *sub_222611AF4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222611BE0(a1, (2 * v6));
    sub_22260FA40(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_222611BE0(a1, v7);
    sub_22260FA40(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_2225F9A1C();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_222611BE4(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  int v4 = *(void **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222609018(a1, *v5);
  if (v4)
  {
    sub_222611C70(a1, (uint64_t)v4, (uint64_t)v4 + 16 * v3);
    j__free(v4);
  }
  else
  {
    sub_222609064(a1);
  }
}

uint64_t sub_222611C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_222609064(a1);
  uint64_t v6 = sub_2225F9A1C();
  uint64_t result = sub_2225F9EB8();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*(void *)a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*(void *)a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_22260FA40(a1, (uint64_t *)a2, &v9);
          *(void *)uint64_t v9 = *(void *)a2;
          *(unsigned char *)(v9 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 16;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_222611D30(uint64_t result, void *a2, _DWORD *a3)
{
  *(void *)uint64_t result = *a2;
  *(_DWORD *)(result + 8) = *a3;
  return result;
}

uint64_t sub_222611D44(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = *(void *)a2;
  *(unsigned char *)(result + 8) = *(_DWORD *)(a2 + 8);
  return result;
}

uint64_t sub_222611D58(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_222611D84();
  *(unsigned char *)(result + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

uint64_t sub_222611D8C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  char v4 = 0;
  return sub_222611DB8(a1, a2, a3, (uint64_t)&v5, (uint64_t)&v4);
}

uint64_t sub_222611DB8(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_222611E64();
  if (v9)
  {
    unint64_t v10 = v9;
    do
    {
      unint64_t v11 = sub_2225DC2E8(v10);
      uint64_t v15 = a1;
      sub_222611E68(&v15, v11);
      uint64_t v12 = (_DWORD *)sub_2225DC2F8(a5, v15);
      BOOL v13 = sub_222611E6C(a4, v12, a3);
      if (v13) {
        v10 += ~v11;
      }
      else {
        unint64_t v10 = v11;
      }
      if (v13) {
        a1 = v15 + 4;
      }
    }
    while (v10);
  }
  return a1;
}

void *sub_222611E70(void *a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_222611EB0(a1, v3);
}

void *sub_222611EB0(void *result, uint64_t a2)
{
  *result += 4 * a2;
  return result;
}

uint64_t sub_222611EC0(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_222611EE8(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v2 = result;
    uint64_t result = j_nullsub_1(result, a2);
    *(unsigned char *)(v2 + 16) = 0;
  }
  return result;
}

uint64_t sub_222611F1C(uint64_t *a1)
{
  uint64_t v1 = (uint64_t)a1;
  uint64_t v2 = *a1;
  if (v2)
  {
    return sub_222611F94(v2);
  }
  else
  {
    for (; sub_2225E34A0(v1); uint64_t v1 = sub_2225C5B40(v1))
      ;
    return sub_2225C5B40(v1);
  }
}

uint64_t sub_222611F94(uint64_t a1)
{
  do
  {
    uint64_t v1 = a1;
    a1 = *(void *)(a1 + 8);
  }
  while (a1);
  return v1;
}

uint64_t sub_222611FA8(unsigned int a1)
{
  unsigned int v2 = a1;
  return sub_2225C3B40(&v2);
}

uint64_t sub_222611FD4(uint64_t result, _DWORD *a2, void *a3)
{
  *(_DWORD *)uint64_t result = *a2;
  *(void *)(result + 4) = *a3;
  return result;
}

uint64_t sub_222611FE8(uint64_t a1, unsigned int *a2, void *a3)
{
  char v5 = 0;
  uint64_t result = sub_222612064(a1, a2, &v5);
  *a3 = v5;
  return result;
}

int *sub_222612028(uint64_t a1, unsigned int *a2, void *a3, int *a4)
{
  uint64_t result = sub_222612254(a1, a2, a4);
  int *result = *a2;
  *(void *)(result + 1) = *a3;
  return result;
}

uint64_t sub_222612064(uint64_t a1, unsigned int *a2, int **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    int v9 = sub_222610B44();
    int v10 = sub_222610F2C();
    int v11 = v8 - 1;
    unsigned int v12 = sub_222612198(a2) & (v8 - 1);
    BOOL v13 = (int *)(v6 + 12 * v12);
    if (sub_222610F30(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v16 = a3;
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_222610F30(*v13, v9))
      {
        if (sub_222610F30(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        BOOL v13 = (int *)(v6 + 12 * v12);
        ++v15;
        if (sub_222610F30(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        BOOL v13 = v14;
      }
LABEL_13:
      a3 = v16;
    }
  }
  else
  {
    BOOL v13 = 0;
  }
  *a3 = v13;
  return result;
}

uint64_t sub_222612198(unsigned int *a1)
{
  return sub_222611FA8(*a1);
}

uint64_t sub_2226121A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_2226121D4((int **)a1);
  }
  return a1;
}

uint64_t sub_2226121D4(int **a1)
{
  int v2 = sub_222610B80();
  uint64_t result = sub_222610F60();
  char v4 = *a1;
  if (*a1 != a1[1])
  {
    int v5 = result;
    do
    {
      uint64_t result = sub_222610F30(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_222610F30(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      char v4 = *a1 + 3;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

int *sub_222612254(uint64_t a1, unsigned int *a2, int *a3)
{
  int v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222612344(a1, (2 * v6));
    sub_222611FE8(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_222612344(a1, v7);
    sub_222611FE8(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  int v8 = sub_222610B44();
  if (!sub_222610F30(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_222612348(uint64_t a1, int a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  char v4 = *(void **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222610A8C(a1, *v5);
  if (v4)
  {
    sub_2226123D8(a1, (uint64_t)v4, (uint64_t)v4 + 12 * v3);
    j__free(v4);
  }
  else
  {
    sub_222610ADC(a1);
  }
}

uint64_t sub_2226123D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_222610ADC(a1);
  int v6 = sub_222610B44();
  uint64_t result = sub_222610F2C();
  if (a2 != a3)
  {
    int v8 = result;
    do
    {
      uint64_t result = sub_222610F30(*(_DWORD *)a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_222610F30(*(_DWORD *)a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_222611FE8(a1, (unsigned int *)a2, &v9);
          *(_DWORD *)uint64_t v9 = *(_DWORD *)a2;
          *(void *)(v9 + 4) = *(void *)(a2 + 4);
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 12;
    }
    while (a2 != a3);
  }
  return result;
}

int *sub_222612498(uint64_t a1, int *a2)
{
  int v6 = 0;
  if (sub_222612500(a1, a2, &v6)) {
    return v6;
  }
  memset(v5, 0, sizeof(v5));
  sub_22260AF28(v5);
  return sub_22261253C(a1, a2, (uint64_t)v5, v6);
}

uint64_t sub_222612500(uint64_t a1, int *a2, void *a3)
{
  int v5 = 0;
  uint64_t result = sub_222612590(a1, a2, &v5);
  *a3 = v5;
  return result;
}

int *sub_22261253C(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  int v6 = sub_222612734(a1, a2, a4);
  sub_2225D3DC8(v6, a2);
  uint64_t v7 = *(void *)(a3 + 16);
  *(_OWORD *)(v6 + 2) = *(_OWORD *)a3;
  *((void *)v6 + 3) = v7;
  return v6;
}

uint64_t sub_222612590(uint64_t a1, int *a2, int **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    uint64_t v15 = sub_222610CDC();
    uint64_t v14 = sub_222611024();
    unsigned int v9 = v8 - 1;
    uint64_t v10 = sub_2226126A4(a2) & (v8 - 1);
    int v11 = (int *)(v6 + 32 * v10);
    if (sub_222611028(a2, v11))
    {
LABEL_8:
      uint64_t result = 1;
    }
    else
    {
      unsigned int v12 = 0;
      int v13 = 1;
      while (!sub_222611028(v11, (int *)&v15))
      {
        if (sub_222611028(v11, (int *)&v14) && v12 == 0) {
          unsigned int v12 = v11;
        }
        uint64_t v10 = (v10 + v13) & v9;
        int v11 = (int *)(v6 + 32 * v10);
        ++v13;
        if (sub_222611028(a2, v11)) {
          goto LABEL_8;
        }
      }
      uint64_t result = 0;
      if (v12) {
        int v11 = v12;
      }
    }
    *a3 = v11;
  }
  else
  {
    *a3 = 0;
  }
  return result;
}

uint64_t sub_2226126A8(unsigned int *a1)
{
  uint64_t v2 = sub_222611FA8(*a1);
  unsigned int v3 = sub_222611FA8(a1[1]);

  return sub_2226126F4(v2, v3);
}

uint64_t sub_2226126F4(uint64_t a1, unsigned int a2)
{
  unint64_t v2 = (a2 | (unint64_t)(a1 << 32)) + ~((unint64_t)a2 << 32);
  unint64_t v3 = (v2 ^ (v2 >> 22)) + ~((v2 ^ (v2 >> 22)) << 13);
  unint64_t v4 = (9 * (v3 ^ (v3 >> 8))) ^ ((9 * (v3 ^ (v3 >> 8))) >> 15);
  return ((v4 + ~(v4 << 27)) >> 31) ^ (v4 + ~(v4 << 27));
}

int *sub_222612734(uint64_t a1, int *a2, int *a3)
{
  int v11 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222612820(a1, (2 * v6));
    sub_222612500(a1, a2, &v11);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_222612820(a1, v7);
    sub_222612500(a1, a2, &v11);
  }
  uint64_t v8 = sub_2225F5674(a1);
  uint64_t v10 = sub_222610CDC(v8);
  if (!sub_222611028(v11, (int *)&v10)) {
    sub_2225F56B0(a1);
  }
  return v11;
}

void sub_222612824(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  unint64_t v4 = *(void **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222610C28(a1, *v5);
  if (v4)
  {
    sub_2226128B0(a1, (uint64_t)v4, (uint64_t)v4 + 32 * v3);
    j__free(v4);
  }
  else
  {
    sub_222610C74(a1);
  }
}

uint64_t sub_2226128B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222610C74(a1);
  uint64_t v12 = sub_222610CDC(v6);
  uint64_t result = sub_222611024();
  uint64_t v11 = result;
  while (a2 != a3)
  {
    uint64_t result = sub_222611028((int *)a2, (int *)&v12);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_222611028((int *)a2, (int *)&v11);
      if ((result & 1) == 0)
      {
        uint64_t v10 = 0;
        sub_222612500(a1, (int *)a2, &v10);
        sub_2225D3DC8(v10, (_DWORD *)a2);
        uint64_t v8 = v10;
        uint64_t v9 = *(void *)(a2 + 24);
        *(_OWORD *)(v10 + 2) = *(_OWORD *)(a2 + 8);
        *((void *)v8 + 3) = v9;
        uint64_t result = sub_2225F5674(a1);
      }
    }
    a2 += 32;
  }
  return result;
}

uint64_t sub_22261296C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_2226129A0((int **)a1);
  }
  return a1;
}

int *sub_2226129A0(int **a1)
{
  uint64_t v5 = sub_222610D18();
  uint64_t v4 = sub_222611080();
  uint64_t result = *a1;
  if (*a1 != a1[1])
  {
    do
    {
      if (!sub_222611028(result, (int *)&v5))
      {
        uint64_t result = (int *)sub_222611028(*a1, (int *)&v4);
        if (!result) {
          break;
        }
      }
      uint64_t v3 = a1[1];
      uint64_t result = *a1 + 8;
      *a1 = result;
    }
    while (result != v3);
  }
  return result;
}

uint64_t sub_222612A14(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = (int *)nullsub_1(a1, a2);
  sub_222612A48(v4, v2);
  return a1;
}

uint64_t sub_222612A48(int *a1, unsigned int a2)
{
  int v3 = *a1;
  *a1 |= 1u;
  if (a2 >= 0x11)
  {
    *a1 = v3 & 0xFFFFFFFE;
    uint64_t v5 = (void *)sub_222612AC0((uint64_t)a1);
    *uint64_t v5 = sub_222612AC4((uint64_t)a1, a2);
    v5[1] = v6;
  }

  return sub_222612AF0(a1);
}

uint64_t sub_222612AC4(uint64_t a1, unsigned int a2)
{
  return sub_2225C26A4(8 * a2);
}

uint64_t sub_222612AF0(int *a1)
{
  sub_222612B58(a1, 0);
  sub_222612B5C((uint64_t)a1, 0);
  int v2 = sub_222610B44();
  int v3 = (_DWORD *)sub_222612B60(a1);
  uint64_t result = sub_222612B64((uint64_t)a1);
  while (v3 != (_DWORD *)result)
  {
    *int v3 = v2;
    v3 += 2;
  }
  return result;
}

uint64_t sub_222612B64(uint64_t a1)
{
  uint64_t v2 = sub_222612B60();
  return v2 + 8 * sub_222612BF0(a1);
}

int *sub_222612B98(int *result, int a2)
{
  int *result = *result & 1 | (2 * a2);
  return result;
}

uint64_t sub_222612BA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = a2;
  return result;
}

uint64_t sub_222612BB4(unsigned char *a1)
{
  if ((*a1 & 1) == 0) {
    return *(void *)sub_2225E563C((uint64_t)a1);
  }

  return sub_2225E563C((uint64_t)a1);
}

uint64_t sub_222612BF4(unsigned char *a1)
{
  if (*a1) {
    return 16;
  }
  else {
    return *(unsigned int *)(sub_2225E563C((uint64_t)a1) + 8);
  }
}

unsigned char *sub_222612C20(unsigned char *a1)
{
  return a1;
}

uint64_t sub_222612C50(uint64_t a1)
{
  uint64_t result = sub_222612BF0(a1);
  if (result)
  {
    int v3 = sub_222610B44();
    int v4 = sub_222610F2C();
    uint64_t v5 = (int *)sub_222612B60(a1);
    uint64_t result = sub_222612B64(a1);
    if (v5 != (int *)result)
    {
      uint64_t v6 = (int *)result;
      do
      {
        uint64_t result = sub_222610F30(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_222610F30(*v5, v4);
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
  }
  return result;
}

unsigned char *sub_222612CE0(unsigned char *result)
{
  if ((*result & 1) == 0)
  {
    uint64_t v1 = (uint64_t)result;
    uint64_t v2 = (void **)sub_222612AC0((uint64_t)result);
    j__free(*v2);
    return (unsigned char *)sub_222612AC0(v1);
  }
  return result;
}

uint64_t sub_222612D34(uint64_t a1, unsigned int *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_222612DB0(a1, a2, &v5);
  *a3 = v5;
  return result;
}

int *sub_222612D74(int *a1, unsigned int *a2, int *a3, int *a4)
{
  uint64_t result = sub_222612F90(a1, a2, a4);
  int *result = *a2;
  result[1] = *a3;
  return result;
}

uint64_t sub_222612DB0(uint64_t a1, unsigned int *a2, int **a3)
{
  uint64_t v6 = sub_222612BB0();
  uint64_t result = sub_222612BF0(a1);
  if (result)
  {
    int v8 = result;
    int v9 = sub_222610B44();
    int v10 = sub_222610F2C();
    int v11 = v8 - 1;
    unsigned int v12 = sub_222612198(a2) & (v8 - 1);
    int v13 = (int *)(v6 + 8 * v12);
    if (sub_222610F30(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_222610F30(*v13, v9))
      {
        if (sub_222610F30(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        int v13 = (int *)(v6 + 8 * v12);
        ++v15;
        if (sub_222610F30(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        int v13 = v14;
      }
    }
  }
  else
  {
    int v13 = 0;
  }
LABEL_13:
  *a3 = v13;
  return result;
}

uint64_t sub_222612EDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_222612F10((int **)a1);
  }
  return a1;
}

uint64_t sub_222612F10(int **a1)
{
  int v2 = sub_222610B80();
  uint64_t result = sub_222610F60();
  int v4 = *a1;
  if (*a1 != a1[1])
  {
    int v5 = result;
    do
    {
      uint64_t result = sub_222610F30(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_222610F30(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      int v4 = *a1 + 2;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

int *sub_222612F90(int *a1, unsigned int *a2, int *a3)
{
  int v10 = a3;
  int v5 = sub_222613080(a1);
  uint64_t v6 = sub_222612BF0(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222613084(a1, (2 * v6));
    sub_222612D34((uint64_t)a1, a2, &v10);
    sub_222612BF0(a1);
  }
  else if (v6 + ~v5 - sub_222613088(a1) <= v6 >> 3)
  {
    sub_222613084(a1, v7);
    sub_222612D34((uint64_t)a1, a2, &v10);
  }
  sub_22261308C(a1);
  int v8 = sub_222610B44();
  if (!sub_222610F30(*v10, v8)) {
    sub_2226130C8((uint64_t)a1);
  }
  return v10;
}

int *sub_22261308C(int *a1)
{
  int v2 = sub_222613080(a1) + 1;

  return sub_222612B58(a1, v2);
}

uint64_t sub_2226130C8(uint64_t a1)
{
  int v2 = sub_222613088() - 1;

  return sub_222612B5C(a1, v2);
}

void sub_222613104(int *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if (a2 >= 0x10)
  {
    v17[0] = 64;
    int v16 = sub_2225C3A4C(a2 - 1);
    unsigned int v2 = *(_DWORD *)sub_2225C7858(v17, &v16);
  }
  if (*(unsigned char *)a1)
  {
    if (v2 >= 0x10)
    {
      int v7 = sub_222610B44();
      int v8 = sub_222610F2C();
      uint64_t v9 = sub_222612BB0(a1);
      uint64_t v10 = 0;
      int v11 = v17;
      do
      {
        if (!sub_222610F30(*(_DWORD *)(v9 + v10), v7) && !sub_222610F30(*(_DWORD *)(v9 + v10), v8))
        {
          int *v11 = *(_DWORD *)(v9 + v10);
          v11[1] = *(_DWORD *)(v9 + v10 + 4);
          v11 += 2;
        }
        v10 += 8;
      }
      while (v10 != 128);
      *a1 &= ~1u;
      unsigned int v12 = (void *)sub_222612AC0((uint64_t)a1);
      *unsigned int v12 = sub_222612AC4((uint64_t)a1, v2);
      v12[1] = v13;
      sub_2226132C0(a1, v17, v11);
    }
  }
  else
  {
    uint64_t v4 = sub_222612AC0((uint64_t)a1);
    int v5 = *(int **)v4;
    uint64_t v6 = *(unsigned int *)(v4 + 8);
    sub_222612AC0((uint64_t)a1);
    if (v2 > 0x10)
    {
      uint64_t v14 = (void *)sub_222612AC0((uint64_t)a1);
      *uint64_t v14 = sub_222612AC4((uint64_t)a1, v2);
      v14[1] = v15;
    }
    else
    {
      *a1 |= 1u;
    }
    sub_2226132C0(a1, v5, &v5[2 * v6]);
    j__free(v5);
  }
}

int *sub_2226132C0(int *a1, int *a2, int *a3)
{
  sub_222612AF0(a1);
  int v6 = sub_222610B44();
  uint64_t result = (int *)sub_222610F2C();
  if (a2 != a3)
  {
    int v8 = (int)result;
    do
    {
      uint64_t result = (int *)sub_222610F30(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = (int *)sub_222610F30(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_222612D34((uint64_t)a1, (unsigned int *)a2, &v9);
          *uint64_t v9 = *a2;
          v9[1] = a2[1];
          uint64_t result = sub_22261308C(a1);
        }
      }
      a2 += 2;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_222613380(uint64_t a1)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t sub_222613388(uint64_t a1, uint64_t a2)
{
  sub_2225F3264((_DWORD *)(a1 + 8));
  *(void *)a1 = &unk_26D4DBDB8;
  sub_2225CCC70((void *)(a1 + 16));
  sub_2225DAD7C((std::string *)(a1 + 32), a2);
  sub_2225F3278((_DWORD *)(a1 + 172));
  sub_2225CCC70((void *)(a1 + 184));
  sub_222607B14(a1 + 200);
  *(void *)(a1 + 80) = 0x2008082020000101;
  *(_DWORD *)(a1 + 88) = 537923616;
  *(unsigned char *)(a1 + 92) = 32;
  *(_DWORD *)(a1 + 93) = 1077952576;
  *(void *)(a1 + 97) = 0x40404020200000;
  *(_WORD *)(a1 + 105) = 0;
  *(_WORD *)(a1 + 108) = 0;
  *(_OWORD *)(a1 + 220) = xmmword_2226D0130;
  *(_OWORD *)(a1 + 236) = xmmword_2226D0140;
  *(void *)(a1 + 252) = 0x500000009;
  *(_DWORD *)(a1 + 260) = 5;
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a1 + 264) & 0xF8 | 3;
  *(_DWORD *)(a1 + 268) = 0;
  *(void *)(a1 + 144) = &unk_2226C9E78;
  *(void *)(a1 + 152) = &unk_2226C9E80;
  *(void *)(a1 + 160) = &unk_2226C9E80;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = "_";
  *(void *)(a1 + 128) = "mcount";
  *(void *)(a1 + 136) = &unk_2226C9E70;
  *(_WORD *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 216) &= 0xE0u;
  if (sub_222613534(a1 + 32)) {
    int v4 = 5;
  }
  else {
    int v4 = 0;
  }
  sub_2225D0A60((_DWORD *)(a1 + 172), v4);
  *(void *)(a1 + 176) = &unk_2226D0150;
  *(unsigned char *)(a1 + 272) = 0;
  sub_2225C3D00((int)&v6, "unknown");
  *(_OWORD *)(a1 + 184) = v6;
  sub_222607B14(&v6);
  *(void *)(a1 + 200) = v6;
  *(void *)(a1 + 205) = *(void *)((char *)&v6 + 5);
  return a1;
}

BOOL sub_222613534(uint64_t a1)
{
  return sub_2225DAD04(a1) == 12 && sub_2225CDCEC(a1) == 9;
}

uint64_t sub_222613578(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DBDB8;
  uint64_t v2 = a1 + 16;
  j_std::string::~string((std::string *)(a1 + 32));
  sub_2226135CC(v2);
  return a1;
}

uint64_t sub_2226135D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 87);
}

uint64_t sub_2226135E0()
{
  return 16;
}

uint64_t sub_2226135E8(uint64_t a1, int a2)
{
  switch(a2)
  {
    case 3:
    case 4:
      uint64_t result = sub_2226135E0();
      break;
    case 5:
    case 6:
      uint64_t result = sub_2226135D8(a1);
      break;
    case 7:
    case 8:
      uint64_t result = sub_222613648(a1);
      break;
    case 9:
    case 10:
      uint64_t result = sub_222613650(a1);
      break;
    default:
      uint64_t result = sub_2225E58B4();
      break;
  }
  return result;
}

uint64_t sub_222613648(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 99);
}

uint64_t sub_222613650(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 101);
}

uint64_t sub_222613658(uint64_t result, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 26) & 8) != 0) {
    *(unsigned char *)(result + 264) &= ~2u;
  }
  if ((*(_WORD *)(a2 + 16) & 0x1000) != 0)
  {
    *(_DWORD *)(result + 236) = 4;
    if ((*(_WORD *)(a2 + 16) & 0x4000) == 0) {
      return result;
    }
  }
  else if ((*(_WORD *)(a2 + 16) & 0x4000) == 0)
  {
    return result;
  }
  *(_DWORD *)(result + 99) = -2139078592;
  *(_DWORD *)(result + 87) = 269492256;
  *(_WORD *)(result + 91) = 8224;
  if (*(unsigned char *)(result + 93) != 32)
  {
    *(_WORD *)(result + 93) = 16448;
    *(void *)(result + 152) = &unk_2226C9E80;
  }
  *(_WORD *)(result + 95) = -32640;
  if (*(unsigned char *)(result + 83) == 32) {
    int v2 = 6;
  }
  else {
    int v2 = 8;
  }
  if (*(unsigned char *)(result + 83) == 32) {
    int v3 = 5;
  }
  else {
    int v3 = 7;
  }
  *(_DWORD *)(result + 228) = v3;
  *(_DWORD *)(result + 232) = v3;
  *(_DWORD *)(result + 220) = v2;
  *(_DWORD *)(result + 224) = 9;
  *(_DWORD *)(result + 252) = 7;
  *(void *)(result + 136) = &unk_2226C9E70;
  *(void *)(result + 144) = &unk_2226C9E78;
  *(void *)(result + 160) = &unk_2226C9E88;
  return result;
}

BOOL sub_222613728(unsigned __int8 *a1)
{
  return (unint64_t)sub_222613828(a1, 0) > 0x3F;
}

uint64_t sub_22261374C@<X0>(unsigned __int8 **a1@<X1>, uint64_t a2@<X8>)
{
  int v3 = **a1;
  if (v3 == 112) {
    return sub_2225CCD48(a2, "r");
  }
  else {
    return sub_2225D496C(a2, 1, (char)v3);
  }
}

uint64_t sub_222613778@<X0>(uint64_t a1@<X8>)
{
  return sub_2225CCD48(a1, &byte_2226D1615);
}

uint64_t sub_222613788()
{
  sub_2225CCC70(&v1);
  return v1;
}

uint64_t sub_2226137B0(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 172) = a2;
  return 1;
}

unsigned char *sub_2226137BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = (unsigned char *)sub_222613858(a2, a3, a4);
  unsigned char *result = a5;
  return result;
}

uint64_t sub_2226137F0()
{
  return 0;
}

BOOL sub_2226137F8(uint64_t a1, int a2)
{
  return a2 != 0;
}

uint64_t sub_222613804(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 83);
}

uint64_t sub_22261380C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 84);
}

uint64_t sub_222613814(uint64_t a1)
{
  return *(unsigned int *)(a1 + 228);
}

void sub_22261381C(uint64_t a1, void *a2, _DWORD *a3)
{
  *a2 = 0;
  *a3 = 0;
}

uint64_t sub_222613828(unsigned __int8 *a1, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)a1 + 232))();
  }
  else {
    return a1[83];
  }
}

uint64_t sub_222613858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_222613880(a1, a2, a3);

  return sub_222608788(v3);
}

uint64_t sub_222613880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222613888(a1, a2, a3, 0);
}

uint64_t sub_222613888(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  v10[0] = a2;
  v10[1] = a3;
  char v9 = a4;
  sub_2226139D0((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_2226138E0(a1, (uint64_t)v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_2226138E0(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *(void *)a2, *(void *)(a2 + 8));
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_2226139E0(*(void *)a2, *(void *)(a2 + 8), (int)a1 + 24, *(unsigned __int8 *)(a2 + 16));
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_2226139D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_222613AA0(a3, a1, a2);
}

void *sub_2226139E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  v12[0] = a1;
  v12[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v12);
  sub_2225DABE8();
  uint64_t v7 = sub_2225CC68C(a3, (v6 + 9));
  uint64_t v8 = sub_222613A74(v7, v6, a4);
  char v9 = (void *)sub_2225E563C(v8);
  char v10 = (const void *)sub_2225C3C70((uint64_t)v12);
  memcpy(v9, v10, v6);
  *((unsigned char *)v9 + v6) = 0;
  return v7;
}

_DWORD *sub_222613A78(_DWORD *a1, int a2, char a3)
{
  uint64_t result = sub_2225D0A60(a1, a2);
  *((unsigned char *)result + 4) = a3;
  return result;
}

__n128 sub_222613AA4(__n128 *a1, __n128 *a2, unsigned __int8 *a3)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u8[0] = *a3;
  return result;
}

char *sub_222613AB8(int a1)
{
  return off_2646233D0[a1];
}

char *sub_222613AC8(int a1)
{
  if ((a1 - 19) > 0x37) {
    return 0;
  }
  else {
    return off_264624448[(__int16)(a1 - 19)];
  }
}

char *sub_222613AF0(int a1)
{
  if ((a1 - 75) > 0x1A3) {
    return 0;
  }
  else {
    return off_264624608[(__int16)(a1 - 75)];
  }
}

uint64_t sub_222613B18(uint64_t a1, int *a2)
{
  sub_2225CAD04(a1);
  *(void *)(a1 + 24) = sub_2225CF9C4(a2);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = sub_2225CFD2C((uint64_t)a2);
  *(void *)(a1 + 48) = v5;
  *(_DWORD *)(a1 + 56) = sub_2225DAD0C((uint64_t)a2);
  *(_DWORD *)(a1 + 60) = sub_222613B9C((uint64_t)a2);
  *(void *)(a1 + 64) = sub_2225CDCF4((uint64_t)a2);
  *(_DWORD *)(a1 + 72) = sub_2225CDCEC((uint64_t)a2);
  *(_DWORD *)(a1 + 76) = sub_222613BA4((uint64_t)a2);
  *(unsigned char *)(a1 + 80) = 0;
  return a1;
}

uint64_t sub_222613B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_222613BA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

BOOL sub_222613BB0(uint64_t a1, uint64_t a2)
{
  v7[0] = sub_2225FB770(a1);
  v7[1] = v3;
  v6[0] = sub_2225FB770(a2);
  v6[1] = v4;
  return sub_2225CFD8C(v7, v6);
}

BOOL sub_222613BF8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 72) == 3;
}

BOOL sub_222613C08(uint64_t a1)
{
  return *(_DWORD *)(a1 + 72) != 0;
}

uint64_t sub_222613C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_2225D8FA4((uint64_t)v17);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 24))(a1, a2, v17);
  uint64_t v19 = v12;
  if (!sub_2225CDBBC(&v18))
  {
    uint64_t v14 = sub_2225CBA80((uint64_t)v17, v13);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v14 + 24))(v14, a2, a3, a4, a5, a6);
    uint64_t v19 = v15;
  }
  sub_2225F8DBC(v17);
  return v18;
}

void *sub_222613D0C@<X0>(void *a1@<X8>)
{
  int v2 = off_26B5C7930;
  if ((*(unsigned char *)off_26B5C7930(&off_26B5C7930) & 1) == 0)
  {
    uint64_t v6 = (void *)off_26B5C7918(&off_26B5C7918);
    sub_2225CCC70(v6);
    _tlv_atexit((void (__cdecl *)(void *))sub_2225F83E4, v6);
    *(unsigned char *)v2(&off_26B5C7930) = 1;
  }
  uint64_t v3 = (uint64_t *)off_26B5C7918(&off_26B5C7918);
  if (!sub_2225F837C((uint64_t)v3))
  {
    uint64_t v4 = (void *)sub_2225C26A4(8);
    *uint64_t v4 = 0;
    sub_222613E0C();
    sub_222613E10(v7, v4);
    sub_2225F839C(v3, v7);
    sub_2225F83E4(v7);
  }
  return sub_2225F836C(a1, v3);
}

void *sub_222613E14(void *result)
{
  _DWORD *result = &unk_26D4DBF50;
  return result;
}

uint64_t sub_222613E38(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DBEE8;
  j_std::string::~string((std::string *)(a1 + 8));
  return a1;
}

uint64_t *sub_222613E8C(uint64_t *a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  *a1 = a2;
  uint64_t v6 = a1 + 1;
  sub_2225CCC70(a1 + 1);
  (*(void (**)(void *__return_ptr))(*(void *)*a1 + 32))(v11);
  if (!sub_2225CDBBC(a4))
  {
    sub_222613F8C(v10);
    BOOL v7 = sub_222613F70((uint64_t)v11, (uint64_t)v10);
    sub_222613F90(v10);
    if (v7)
    {
      sub_222613F94(v10);
      sub_222613FD0(v6, v10);
      sub_2226135CC(v10);
      uint64_t v8 = sub_2225C3C70((uint64_t)v6);
      sub_222614018(v8, v11);
    }
  }
  sub_222613F90(v11);
  return a1;
}

BOOL sub_222613F70(uint64_t a1, uint64_t a2)
{
  return !sub_222614224(a1, a2);
}

uint64_t sub_222613F94@<X0>(void *a1@<X8>)
{
  j_j_nullsub_1(&v3);
  return sub_222615634(a1);
}

uint64_t *sub_222613FD0(uint64_t *a1, void *a2)
{
  sub_2225F9EC4(v4, a2);
  sub_2225F9EC8(v4, a1);
  sub_2226135CC(v4);
  return a1;
}

uint64_t *sub_222614020(uint64_t *a1, _DWORD *a2)
{
  sub_222613F8C(v24);
  uint64_t v4 = sub_2225C3C70((uint64_t)(a1 + 1));
  uint64_t v5 = sub_222614184(v4);
  uint64_t v6 = sub_222614188(v5);
  if (sub_222613BF8(v6))
  {
    uint64_t v7 = *a1;
    uint64_t v8 = sub_2225C3C70((uint64_t)(a1 + 1));
    uint64_t v9 = sub_222614184(v8);
    uint64_t v10 = sub_222614188(v9);
    v21[0] = sub_2225FB730(v10);
    v21[1] = v11;
    sub_2225CBDF0((uint64_t)v22, (uint64_t)v21);
    (*(void (**)(void *__return_ptr, uint64_t, unsigned char *, _DWORD *))(*(void *)v7 + 32))(v23, v7, v22, a2);
    if (sub_2225CDBBC(a2))
    {
LABEL_5:
      sub_222613F90(v23);
      goto LABEL_12;
    }
    if (sub_222613F70((uint64_t)v23, (uint64_t)v24))
    {
      uint64_t v12 = sub_2225C3C70((uint64_t)(a1 + 1));
      sub_222614018(v12, v23);
      goto LABEL_5;
    }
    sub_222613F90(v23);
  }
  uint64_t v13 = (void *)sub_2225C3C70((uint64_t)(a1 + 1));
  if (!sub_2226141A4(v13))
  {
    do
    {
      uint64_t v14 = sub_2225C3C70((uint64_t)(a1 + 1));
      uint64_t v15 = (uint64_t *)sub_222614184(v14);
      int v16 = sub_2226141A8(v15, (uint64_t)a2);
      if (!sub_222614224((uint64_t)v16, (uint64_t)v24)) {
        break;
      }
      uint64_t v17 = sub_2225C3C70((uint64_t)(a1 + 1));
      sub_2226142B4(v17);
      uint64_t v18 = (void *)sub_2225C3C70((uint64_t)(a1 + 1));
    }
    while (!sub_2226141A4(v18));
  }
  uint64_t v19 = (void *)sub_2225C3C70((uint64_t)(a1 + 1));
  if (sub_2226141A4(v19)) {
    sub_2226142B8(a1 + 1);
  }
LABEL_12:
  sub_222613F90(v24);
  return a1;
}

uint64_t sub_222614188(uint64_t a1)
{
  return sub_2225C3C70(a1) + 8;
}

uint64_t *sub_2226141A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3C70((uint64_t)a1);
  *(void *)a2 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 16))(v4);
  *(void *)(a2 + 8) = v5;
  if (sub_2225CDBBC((_DWORD *)a2) || (uint64_t v6 = sub_2225C3C70((uint64_t)a1), !sub_222613C08(v6 + 8))) {
    sub_2226142B8(a1);
  }
  return a1;
}

BOOL sub_222614224(uint64_t a1, uint64_t a2)
{
  if (sub_2225F837C(a1) && sub_2225F837C(a2))
  {
    uint64_t v4 = sub_2225C3C70(a1) + 8;
    uint64_t v5 = sub_2225C3C70(a2) + 8;
    return sub_222613BB0(v4, v5);
  }
  else
  {
    return !sub_2225F837C(a1) && !sub_2225F837C(a2);
  }
}

uint64_t sub_2226142B8(uint64_t *a1)
{
  sub_2225CCC70(v3);
  sub_2225F9EC8(v3, a1);
  return sub_2226135CC(v3);
}

void *sub_2226142FC(void *a1)
{
  __n128 result = sub_222613E14(a1);
  void *result = &unk_26D4DBF88;
  return result;
}

void sub_222614338(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_2225CDCE8((uint64_t)v9);
  v8.__r_.__value_.__r.__words[0] = sub_2225CF944(a1, v9);
  v8.__r_.__value_.__l.__size_ = v4;
  if (sub_2225CDBBC(&v8))
  {
    sub_222613E34(a2, (uint64_t)v8.__r_.__value_.__l.__data_, v8.__r_.__value_.__l.__size_);
  }
  else
  {
    sub_222613BAC((uint64_t)&v8, v9);
    sub_2225DBA20((uint64_t)a1, &v6);
    sub_2225CCBF8(v7, &v6);
    sub_222614538((uint64_t)&v8, v7[0], v7[1]);
    std::string::~string(&v6);
    sub_222614584((uint64_t)&v5, (uint64_t)&v8);
    sub_222614588(a2, (uint64_t)&v5);
    j_std::string::~string(&v5);
    j_std::string::~string(&v8);
  }
}

uint64_t sub_222614400(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v12 = 0;
  v13[0] = sub_2225CF9FC(a2, (int *)&v12);
  v13[1] = v5;
  if (!sub_2225CDBBC(v13))
  {
    uint64_t v6 = sub_2225C26A4(104);
    sub_222614628(v6, v12);
    sub_2225F8FBC(a3, v6);
    uint64_t v8 = sub_2225CBA80(a3, v7);
    sub_2225DBA20((uint64_t)a2, &v10);
    sub_2225CCBF8(v11, &v10);
    (*(void (**)(uint64_t, void, void))(*(void *)v8 + 40))(v8, v11[0], v11[1]);
    std::string::~string(&v10);
    sub_2225CDDC0(v13);
  }
  return v13[0];
}

uint64_t sub_2226144D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_222614A70(v5, a1, a2);
  sub_2225F9EC4(v6, v5);
  sub_222613E84(a3, v6);
  sub_2226135CC(v6);
  return sub_2226135CC(v5);
}

void sub_222614538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  sub_2225CA51C(v5, (uint64_t)&v4);
  sub_2225CCDE4(a1, (uint64_t)&v4);
  std::string::~string(&v4);
}

__n128 sub_22261458C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225D1354(a1, a2);
  __n128 result = *(__n128 *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 65) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(v3 + 56) = v6;
  *(_OWORD *)(v3 + 40) = v5;
  *(__n128 *)(v3 + 24) = result;
  return result;
}

uint64_t sub_2226145D0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) &= ~1u;
  uint64_t v4 = nullsub_1(a1, a2);
  uint64_t v6 = nullsub_1(a2, v5);
  sub_222614584(v4, v6);
  return a1;
}

void *sub_22261462C(void *a1, int a2)
{
  uint64_t v4 = sub_222614680(a1);
  *uint64_t v4 = &unk_26D4DBFC0;
  *((_DWORD *)v4 + 2) = a2;
  sub_2226146A0((uint64_t)(v4 + 2));
  return a1;
}

void *sub_222614680(void *result)
{
  void *result = &unk_26D4DBF10;
  return result;
}

void sub_2226146A8()
{
  uint64_t v0 = (void *)sub_2226146A4();

  j__free(v0);
}

void sub_2226146D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 16;
  if (!sub_222613C08(a1 + 16))
  {
    sub_2225CDCE8((uint64_t)v10);
    v9.__r_.__value_.__r.__words[0] = sub_2225CFF60(*(_DWORD *)(a1 + 8), v10);
    v9.__r_.__value_.__l.__size_ = v5;
    if (sub_2225CDBBC(&v9))
    {
      sub_222613E34(a2, (uint64_t)v9.__r_.__value_.__l.__data_, v9.__r_.__value_.__l.__size_);
      return;
    }
    sub_222613BAC((uint64_t)&v9, v10);
    uint64_t v6 = sub_2225FB730(v4);
    sub_222614538((uint64_t)&v9, v6, v7);
    sub_222614990(v4, (uint64_t)&v9);
    j_std::string::~string(&v9);
  }
  sub_2226149DC(v8, v4);
  sub_222614588(a2, (uint64_t)v8);
  j_std::string::~string(v8);
}

uint64_t sub_2226147A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(unsigned int *)(a1 + 8);
  sub_2225DBA20(a2, &v17);
  uint64_t v11 = (char *)sub_2225CBED0(&v17);
  sub_2225CD670(v10, v11, a4, a5, a6, (uint64_t)v19);
  std::string::~string(&v17);
  v18[0] = sub_2225D5B38((uint64_t)v19, v12);
  v18[1] = v13;
  if (!sub_2225CDBBC(v18))
  {
    uint64_t v15 = j_nullsub_1(v19, v14);
    sub_222614A24(a3, v15);
    sub_2225CDDC0(v18);
  }
  sub_2225D35D0((uint64_t)v19, v14);
  return v18[0];
}

uint64_t sub_222614894(uint64_t a1)
{
  if (close(*(_DWORD *)(a1 + 8)))
  {
    int v2 = *__error();
    uint64_t v3 = std::generic_category();
    sub_2225CDE14((uint64_t)&v5, v2, (uint64_t)v3);
  }
  else
  {
    *(_DWORD *)(a1 + 8) = -1;
    sub_2225CDDC0(&v5);
  }
  return v5;
}

void sub_2226148FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_222614904(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD04(a1);
  j_nullsub_1(v2 + 24, v3);
  sub_2225CFD6C(a1 + 40);
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

void *sub_222614940(void *a1)
{
  *a1 = &unk_26D4DBFC0;
  uint64_t v2 = (std::string *)(a1 + 2);
  sub_222614894((uint64_t)a1);
  j_std::string::~string(v2);
  return a1;
}

uint64_t sub_222614990(uint64_t a1, uint64_t a2)
{
  sub_2225CCDE4(a1, a2);
  long long v4 = *(_OWORD *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 65) = v6;
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  return a1;
}

__n128 sub_2226149E0(std::string *a1, uint64_t a2)
{
  uint64_t v3 = std::string::basic_string(a1, (const std::string *)a2);
  __n128 result = *(__n128 *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)((char *)&v3[2].__r_.__value_.__r.__words[2] + 1) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)&v3[2].__r_.__value_.__r.__words[1] = v6;
  *(_OWORD *)&v3[1].__r_.__value_.__r.__words[2] = v5;
  *(__n128 *)&v3[1].__r_.__value_.__l.__data_ = result;
  return result;
}

uint64_t sub_222614A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CE10C(a2, a2);
  sub_2225CDC48(a1, v4);
  j_j_nullsub_1(a2);
  j_nullsub_1(a1, v5);
  return a1;
}

uint64_t sub_222614A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_222614AEC((uint64_t)v10);
  uint64_t v6 = sub_2225C5B40((uint64_t)v10);
  sub_222614AF0(v6, a1, a2);
  uint64_t v7 = sub_2225F6714((uint64_t)v10);
  uint64_t v8 = sub_2225F315C(v7);
  sub_222614AF4(v8, v7, a3);
  return sub_222614B24(v10);
}

void *sub_222614AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __n128 result = sub_2225CCC70(a3);
  void *result = a1;
  result[1] = a2;
  return result;
}

uint64_t sub_222614B28(uint64_t a1)
{
  *(void *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = sub_222614B5C();
  return a1;
}

uint64_t sub_222614B60()
{
  return sub_2225CBA78(152, 8);
}

void *sub_222614B6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222614BD4(a1, 0);
  *uint64_t v6 = &unk_26D4DC000;
  uint64_t v7 = sub_2225F315C((uint64_t)v6);
  sub_222614C18(v7, a2, a3);
  return a1;
}

void *sub_222614BD4(void *a1, uint64_t a2)
{
  __n128 result = sub_222614C54(a1, a2);
  void *result = MEMORY[0x263F8C330] + 16;
  result[2] = a2;
  return result;
}

void sub_222614C20()
{
  uint64_t v0 = (void *)sub_222614C1C();

  j__free(v0);
}

uint64_t sub_222614C4C(uint64_t a1)
{
  return sub_222615320(a1, 1);
}

void *sub_222614C54(void *result, uint64_t a2)
{
  void *result = MEMORY[0x263F8C300] + 16;
  result[1] = a2;
  return result;
}

void *sub_222614C7C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (std::string *)sub_222614DB0(a1);
  v6->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D4DC038;
  uint64_t v7 = (std::string::__raw *)&v6[5];
  uint64_t v8 = (uint64_t)&v6[4];
  sub_2225DBA20(a2, v6 + 4);
  sub_2225CBDEC((uint64_t)&v17, v8);
  sub_222614DF4(v7, &v17, a3);
  if (!sub_2225CDBBC((_DWORD *)a3))
  {
    sub_222614E14((uint64_t)&v17);
    int v9 = sub_222614DF8(v7, &v17);
    sub_222614E18(&v17);
    if (v9)
    {
      sub_2225CDCE8((uint64_t)v18);
      uint64_t v10 = sub_222614E1C((uint64_t)v7);
      *(void *)a3 = sub_2225CFCEC(v10, v18);
      *(void *)(a3 + 8) = v11;
      if (!sub_2225CDBBC((_DWORD *)a3))
      {
        sub_222613BAC((uint64_t)&v17, v18);
        sub_222614990((uint64_t)(a1 + 1), (uint64_t)&v17);
        j_std::string::~string(&v17);
        uint64_t v12 = sub_222614E1C((uint64_t)v7);
        uint64_t v14 = nullsub_1(v12, v13);
        sub_2225CCBF8(v16, v14);
        sub_222614538((uint64_t)(a1 + 1), v16[0], v16[1]);
      }
    }
  }
  return a1;
}

void *sub_222614DB0(void *a1)
{
  *a1 = &unk_26D4DBEE8;
  sub_2226146A0((uint64_t)(a1 + 1));
  return a1;
}

uint64_t sub_222614DF8(void *a1, void *a2)
{
  return sub_222615140(a1, a2) ^ 1;
}

uint64_t sub_222614E1C(uint64_t a1)
{
  return sub_2225C3C70(a1) + 16;
}

void sub_222614E3C()
{
  uint64_t v0 = (void *)sub_222614E38();

  j__free(v0);
}

uint64_t sub_222614E64(uint64_t a1)
{
  sub_2225CDDC0(v14);
  uint64_t v2 = a1 + 120;
  sub_22261527C(a1 + 120, v14);
  if (!sub_2225CDBBC(v14))
  {
    sub_222614E14((uint64_t)&v13);
    int v3 = sub_222615140((void *)(a1 + 120), &v13);
    sub_222614E18(&v13);
    if (v3)
    {
      sub_2226146A0((uint64_t)&v13);
      sub_222614990(a1 + 8, (uint64_t)&v13);
      j_std::string::~string(&v13);
    }
    else
    {
      sub_2225CDCE8((uint64_t)v12);
      uint64_t v4 = sub_222614E1C(a1 + 120);
      v14[0] = sub_2225CFCEC(v4, v12);
      v14[1] = v5;
      sub_222613BAC((uint64_t)&v13, v12);
      uint64_t v6 = a1 + 8;
      sub_222614990(v6, (uint64_t)&v13);
      j_std::string::~string(&v13);
      uint64_t v7 = sub_222614E1C(v2);
      uint64_t v9 = nullsub_1(v7, v8);
      sub_2225CCBF8(v11, v9);
      sub_222614538(v6, v11[0], v11[1]);
    }
  }
  return v14[0];
}

uint64_t *sub_222614F64(uint64_t *a1, char **a2, uint64_t *a3)
{
  sub_2225D3A34(a1);
  uint64_t v6 = sub_2225C26A4(88);
  sub_222615018();
  sub_2225F3270(&v13, v6);
  sub_22261501C(a1, &v13);
  sub_222615044(&v13);
  sub_2225CF794(v12);
  uint64_t v7 = sub_2225C3C70((uint64_t)a1);
  uint64_t v8 = sub_2225DBAC4(a2, (uint64_t)v12);
  *a3 = sub_2225D01B4(v7, v8, v9);
  a3[1] = v10;
  sub_2225CA520(v12);
  return a1;
}

uint64_t *sub_22261501C(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

_DWORD *sub_222615048(_DWORD *a1)
{
  uint64_t v2 = sub_2225F3264(a1);
  *((void *)v2 + 1) = 0;
  sub_2225D04EC((uint64_t)(v2 + 4));
  return a1;
}

uint64_t *sub_22261507C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = *result;
  void *result = v2;
  return result;
}

uint64_t *sub_222615090(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2226150B8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_2226150C8();
  }
  return result;
}

void sub_2226150CC(_DWORD *a1)
{
  if ((*a1)-- == 1)
  {
    uint64_t v2 = (void *)sub_22261510C();
    j__free(v2);
  }
}

uint64_t sub_222615110(uint64_t a1)
{
  return a1;
}

uint64_t sub_222615140(void *a1, void *a2)
{
  if (sub_2225D0E1C((uint64_t)a1, (uint64_t)a2)) {
    return 1;
  }
  if (!sub_2225D3DB0(a2))
  {
    uint64_t v8 = (uint64_t)a1;
LABEL_10:
    uint64_t v9 = sub_2225C3C70(v8) + 16;
    sub_2225D04EC((uint64_t)&v10);
    uint64_t v4 = sub_222615208(v9, &v10);
    j_std::string::~string(&v10);
    return v4;
  }
  if (!sub_2225D3DB0(a1))
  {
    uint64_t v8 = (uint64_t)a2;
    goto LABEL_10;
  }
  uint64_t v5 = sub_2225C3C70((uint64_t)a1) + 16;
  uint64_t v6 = sub_2225C3C70((uint64_t)a2) + 16;

  return sub_222615208(v5, v6);
}

uint64_t sub_22261520C(uint64_t a1)
{
  return sub_2225F3270(a1, 0);
}

uint64_t sub_222615218(std::string *a1)
{
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26D4DC038;
  uint64_t v2 = a1 + 4;
  sub_222614E18(&a1[5]);
  std::string::~string(v2);

  return sub_222613E38((uint64_t)a1);
}

uint64_t sub_22261527C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_2225C3C70(a1);
  *a2 = sub_2225D0360(v4);
  a2[1] = v5;
  return a1;
}

void sub_2226152B0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D4DC000;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t sub_2226152D0(uint64_t a1)
{
  uint64_t v1 = sub_2225F315C(a1);

  return sub_2226152F8(v1);
}

uint64_t sub_2226152FC(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t sub_222615324(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA08(a1, 152 * a2, 8);
}

uint64_t sub_222615334(uint64_t a1)
{
  return a1;
}

uint64_t sub_22261535C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return sub_222615320(result, *(void *)(a1 + 8));
  }
  return result;
}

uint64_t *sub_222615374(uint64_t *a1, void *a2)
{
  int v3 = sub_2225F836C(a1, a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)v3);
  if (!sub_222613C08(v4 + 8)) {
    sub_2226142B8(a1);
  }
  return a1;
}

uint64_t sub_2226153B4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1);
}

uint64_t sub_2226153C4(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_2226153EC(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + 1))
  {
    uint64_t v2 = result;
    uint64_t result = j_nullsub_1(result, a2);
    *(unsigned char *)(v2 + 1) = 0;
  }
  return result;
}

uint64_t sub_22261541C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a1 + 88) |= 1u;
  uint64_t v6 = (void *)nullsub_1(a1, a2);
  *uint64_t v6 = a2;
  v6[1] = a3;
  return a1;
}

uint64_t *sub_222615464(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  sub_2226154D0((uint64_t)&v7, a2);
  uint64_t v4 = sub_2225C26A4(32);
  a1[1] = sub_2226154D4(v4, a2);
  sub_2225D2584(&v7);
  nullsub_1(a1, v5);
  sub_2226154D8(&v7);
  return a1;
}

uint64_t sub_2226154DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_222615504(a1, &v3);
}

void *sub_22261550C(void *a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v3 = sub_222614BD4(a1, 0);
  *uint64_t v3 = &unk_26D4DC060;
  uint64_t v4 = v3 + 3;
  sub_222615504(&v6, &v7);
  sub_222615504(v4, &v6);
  return a1;
}

void sub_222615580(std::__shared_weak_count *a1)
{
  j_std::__shared_weak_count::~__shared_weak_count(a1);

  j__free(v1);
}

uint64_t sub_2226155A8(uint64_t a1)
{
  return sub_2226155B8(*(void *)(a1 + 24));
}

uint64_t sub_2226155B8(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_2226155E4(uint64_t a1)
{
  return sub_2225CBA08(a1, 32, 8);
}

uint64_t *sub_2226155F0(uint64_t *a1)
{
  return a1;
}

uint64_t sub_222615618(uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result) {
    return sub_2226155B8(result);
  }
  return result;
}

uint64_t sub_222615634@<X0>(void *a1@<X8>)
{
  sub_222615698((uint64_t)v7, 1);
  uint64_t v2 = sub_2225C5B40((uint64_t)v7);
  sub_22261569C(v2);
  uint64_t v3 = sub_2225F6714((uint64_t)v7);
  uint64_t v5 = sub_2225D2B20(v3, v4);
  sub_2226156A0(v5, v3, a1);
  return sub_2226156E0(v7);
}

uint64_t sub_2226156A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = sub_2225CCC70(a3);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return nullsub_1(v5, v6);
}

uint64_t sub_2226156E4(uint64_t a1, uint64_t a2)
{
  *(void *)(j_j_nullsub_1(a1) + 8) = a2;
  *(void *)(a1 + 16) = sub_22261572C();
  return a1;
}

uint64_t sub_222615730(uint64_t a1, unint64_t a2)
{
  if (sub_22261577C() < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(48 * a2, 8);
}

uint64_t sub_222615780()
{
  return 0x555555555555555;
}

void *sub_22261578C(void *a1)
{
  uint64_t v2 = sub_222614BD4(a1, 0);
  *uint64_t v2 = &unk_26D4DC098;
  sub_222615800((uint64_t)(v2 + 3), (uint64_t)&v8);
  sub_2225D2B20((uint64_t)a1, v3);
  uint64_t v5 = sub_2225D2B20((uint64_t)a1, v4);
  sub_222615804((uint64_t)&v7, v5);
  return a1;
}

void sub_22261580C()
{
  uint64_t v0 = (void *)sub_222615808();

  j__free(v0);
}

uint64_t sub_222615838(uint64_t a1, uint64_t a2)
{
  sub_2225D2B20(a1, a2);
  j_j_nullsub_1(&v7);
  sub_222615800(a1 + 24, v3);
  uint64_t v5 = nullsub_1(a1, v4);
  return sub_222615AA8(&v7, v5, 1);
}

uint64_t sub_222615890(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_2226158B8(uint64_t a1, uint64_t a2)
{
  return sub_2226158C0(a2);
}

void sub_2226158C8(std::__shared_weak_count *a1, uint64_t a2)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D4DC098;
  sub_222615800((uint64_t)&a1[1], a2);

  std::__shared_weak_count::~__shared_weak_count(a1);
}

uint64_t sub_22261591C(uint64_t a1, uint64_t a2)
{
  sub_2225D2B20(a1, a2);
  uint64_t v4 = sub_2225D2B20(a1, v3);
  return sub_22261595C(&v6, v4);
}

uint64_t sub_222615960(uint64_t a1, uint64_t a2)
{
  return sub_222615968(a2);
}

uint64_t sub_222615974(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2226159B4(&v3);
  return a1;
}

uint64_t *sub_2226159B4(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_222615A2C(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    char v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2225D4FD0(v6, v8);
    return (uint64_t *)sub_2225D53DC(v5, v7, v9);
  }
  return result;
}

uint64_t sub_222615A2C(uint64_t *a1)
{
  return sub_222615A34((uint64_t)a1, *a1);
}

uint64_t sub_222615A34(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_222615A9C(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 16;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_222615AA0(uint64_t a1, uint64_t a2)
{
  return sub_222613F90(a2);
}

uint64_t sub_222615AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 48 * a3, 8);
}

uint64_t sub_222615AC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_222615AE8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1) {
    return sub_222615AA8(result, v1, *(void *)(result + 8));
  }
  return result;
}

uint64_t sub_222615AFC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_222615BCC(a1, a2);
  }
  else
  {
    sub_222615B58((uint64_t)a1, a2);
    uint64_t result = v4 + 16;
  }
  a1[1] = result;
  return result;
}

void *sub_222615B58(uint64_t a1, uint64_t a2)
{
  sub_222615C7C(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_222615C80(v5, v7, a2);
  v10 += 16;
  return sub_2225D284C(&v9);
}

uint64_t sub_222615BCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_2225D36D8(a1);
  unint64_t v6 = sub_2225D4E1C(a1, v5 + 1);
  uint64_t v7 = sub_2225D36D8(a1);
  sub_2225D4E98(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_222615C80(v4, v9, a2);
  v13 += 16;
  sub_222615CB4(a1, v12);
  uint64_t v10 = a1[1];
  sub_222615DA4(v12);
  return v10;
}

void *sub_222615C84(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t *result = a2;
  result[1] = *(void *)(a2 + 8);
  result[2] = *(void *)(a2 + 8) + 16 * a3;
  return result;
}

uint64_t sub_222615CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222615CAC(a2, a3);
}

uint64_t sub_222615CB4(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_222615DA8(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  uint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  uint64_t v11 = sub_2225D36D8(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_222615DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_222615E78((uint64_t)&v16);
    uint64_t v9 = sub_2225D35A0((uint64_t)v18);
    sub_222615E74(a1, v8, v9);
    sub_2225D5358((uint64_t)v18);
    sub_2225D5358((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_222615E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222615E88(a2, a3);
}

uint64_t sub_222615E90(uint64_t a1)
{
  uint64_t v1 = sub_222614184(a1);

  return nullsub_1(v1, v2);
}

uint64_t *sub_222615EB8(uint64_t *a1)
{
  sub_222615F18((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_2225D53E0(a1, v4);
    sub_2225D53DC(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_222615F18(uint64_t a1)
{
  return sub_222615F20(a1, *(void *)(a1 + 8));
}

uint64_t sub_222615F24(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 16;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = sub_222615A9C(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_222615F90(void *a1)
{
  return sub_222615F9C(a1, a1[1] - 16);
}

uint64_t sub_222615F9C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D36D8(a1);
  sub_222615A34((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

uint64_t *sub_222615FFC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

uint64_t sub_222616050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 16))();
}

uint64_t sub_222616078(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8)) {
    return sub_2225C7D54(a2);
  }
  else {
    return a2;
  }
}

uint64_t sub_222616090(uint64_t *a1)
{
  return sub_2225C3D04(*a1);
}

unint64_t sub_222616098(uint64_t *a1, unsigned int a2)
{
  uint64_t v4 = sub_2225C3D04(*a1) + 24;
  uint64_t v5 = (unsigned int *)(v4 + 12 * a2);
  if ((unint64_t)(v5 + 3) > sub_2225C5B40(*a1)) {
    return 0;
  }
  unsigned int v7 = a2;
  unsigned int v8 = sub_222616078((uint64_t)a1, *v5);
  uint64_t v9 = v4 + 12 * v7;
  uint64_t v10 = sub_222616078((uint64_t)a1, *(unsigned int *)(v9 + 4));
  sub_222616078((uint64_t)a1, *(unsigned int *)(v9 + 8));
  return v8 | (unint64_t)(v10 << 32);
}

unint64_t sub_222616148(uint64_t *a1, int a2)
{
  uint64_t v4 = sub_222616090(a1);
  unint64_t v5 = sub_222616078((uint64_t)a1, *(unsigned int *)(v4 + 8)) + a2;
  if (sub_2225CE2C0(*a1) <= v5) {
    return 0;
  }
  else {
    return sub_2225C3D04(*a1) + v5;
  }
}

uint64_t sub_2226161A4(uint64_t *a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  sub_222616240(v13);
  uint64_t v11 = (const void *)sub_222616244(a1, a2, a3, v13);
  size_t v12 = v8;
  if (sub_2225CF1E0((uint64_t)&v11)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = sub_2225F89F4(a4, v11, v12, 0, 1);
  }
  sub_2225CA520(v13);
  return v9;
}

uint64_t sub_222616244(uint64_t *a1, uint64_t a2, uint64_t a3, const void **a4)
{
  v32[0] = a2;
  v32[1] = a3;
  uint64_t v8 = sub_222616090(a1);
  int v9 = sub_222616078((uint64_t)a1, *(unsigned int *)(v8 + 16));
  unsigned int v10 = v9 - 1;
  if ((v9 & (v9 - 1)) != 0 || (v11 = sub_2226163F4(a2, a3), unint64_t v13 = sub_222616098(a1, v11 & v10), !v13))
  {
LABEL_8:
    sub_2225CCC70(&v33);
    return v33;
  }
  int v14 = v12;
  long long v15 = (char *)sub_222616148(a1, v13);
  sub_2225C3D00((int)&v30, v15);
  if (!sub_2225D7C6C((uint64_t)v32, v30, v31))
  {
    int v16 = v11 + 1;
    do
    {
      unint64_t v13 = sub_222616098(a1, v16 & v10);
      if (!v13) {
        goto LABEL_8;
      }
      int v14 = v17;
      uint64_t v18 = (char *)sub_222616148(a1, v13);
      sub_2225C3D00((int)&v30, v18);
      ++v16;
    }
    while (!sub_2225D7C6C((uint64_t)v32, v30, v31));
  }
  uint64_t v19 = (char *)sub_222616148(a1, SHIDWORD(v13));
  sub_2225C3D00((int)v29, v19);
  uint64_t v20 = (char *)sub_222616148(a1, v14);
  sub_2225C3D00((int)v28, v20);
  sub_2225C5D90(a4);
  int v21 = (char *)sub_2225C3C70((uint64_t)v29);
  uint64_t v22 = (char *)sub_2225C3C78(v29);
  sub_2225C5A88(a4, v21, v22);
  uint64_t v23 = (char *)sub_2225C3C70((uint64_t)v28);
  int v24 = (char *)sub_2225C3C78(v28);
  sub_2225C5A88(a4, v23, v24);
  uint64_t v25 = sub_2225C3C70((uint64_t)a4);
  uint64_t v26 = sub_2225C5664((uint64_t)a4);
  sub_2225C3D0C(&v33, v25, v26);
  return v33;
}

uint64_t sub_2226163F4(uint64_t a1, uint64_t a2)
{
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = (unsigned __int8 *)sub_2225C3C70((uint64_t)v8);
  uint64_t v3 = sub_2225C3C78(v8);
  if (v2 == (unsigned __int8 *)v3) {
    return 0;
  }
  uint64_t v4 = (unsigned __int8 *)v3;
  LODWORD(v5) = 0;
  do
  {
    unsigned __int8 v6 = *v2++;
    uint64_t v5 = v5 + 13 * sub_22261646C(v6);
  }
  while (v2 != v4);
  return v5;
}

uint64_t sub_22261646C(unsigned __int8 a1)
{
  int v2 = sub_2226164A4(a1);
  char v3 = a1 + 32;
  if (!v2) {
    return (char)a1;
  }
  return v3;
}

uint64_t sub_2226164A4(int a1)
{
  return ((unsigned __int16)word_2226CBA58[a1] >> 5) & 1;
}

uint64_t sub_2226164BC()
{
  return sub_2225C69CC();
}

uint64_t sub_2226164C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 8);
  if (!result && a2)
  {
    if (*(_DWORD *)(a1 + 4))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 16))(a2, *(unsigned int *)(a1 + 4));
      *(void *)(a1 + 8) = result;
    }
  }
  return result;
}

uint64_t sub_222616528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  *(void *)(sub_2225F326C(a1, a2) + 8) = a4;
  *(void *)(a1 + 16) = sub_2225C5B40(a3);
  sub_2225D250C((void *)(a1 + 24));
  sub_2225D250C((void *)(a1 + 64));
  sub_2225CAD04(a1 + 88);
  sub_2225D250C((void *)(a1 + 112));
  sub_222616614(a1 + 136);
  sub_222616618(a1 + 296, 64);
  sub_2225D8FA4(a1 + 456);
  sub_2225D250C((void *)(a1 + 464));
  sub_22262822C((void *)(a1 + 488), a3, a4, (uint64_t)a5, a6, a1);
  sub_222608F94(a1 + 992, 0);
  sub_22261661C(a1 + 1016);
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 1176) = 0u;
  *(_OWORD *)(a1 + 1192) = 0u;
  *(unsigned char *)(a1 + 1208) = (*a5 & 0x10000000000000) != 0;
  return a1;
}

uint64_t sub_222616624(uint64_t a1)
{
  int v2 = (void *)(a1 + 464);
  uint64_t v3 = sub_2225D36D8((void *)(a1 + 464));
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(uint64_t **)(sub_2225D36E8(v2, i) + 8);
      if (v5)
      {
        unsigned __int8 v6 = sub_22261604C(v5);
        j__free(v6);
      }
    }
  }
  sub_2226166F8(a1 + 1016);
  sub_222608B18(a1 + 992);
  sub_222628310(a1 + 488);
  sub_2225D35B8(v2);
  sub_2226166FC(a1 + 456);
  sub_222616700(a1 + 296);
  sub_222616700(a1 + 136);
  sub_222616704(a1 + 112);
  std::string::~string((std::string *)(a1 + 88));
  sub_222616708(a1 + 64);
  sub_2225D35B8(a1 + 24);

  return sub_22261670C(a1);
}

uint64_t sub_222616714(void *a1)
{
  return (uint64_t)(a1[1] - *a1) >> 5;
}

uint64_t sub_222616724(uint64_t a1)
{
  return a1 + 488;
}

uint64_t sub_22261672C(uint64_t a1, const void *a2, uint64_t a3, int a4)
{
  uint64_t v43 = a2;
  size_t v44 = a3;
  uint64_t v6 = a1 + 488;
  uint64_t v7 = sub_22262BD98(a1 + 488, (uint64_t)a2, a3);
  if (!v7 && a4)
  {
    uint64_t v8 = sub_2225D36D8((void *)(a1 + 24));
    if (v8)
    {
      for (uint64_t i = 0; v8 != i; ++i)
      {
        uint64_t v10 = sub_2225D36E8((void *)(a1 + 24), i);
        if (sub_222616A44(v10))
        {
          sub_2225CF794(v42);
          uint64_t v11 = sub_2225D36E8((void *)(a1 + 24), i);
          uint64_t v12 = sub_222616A64(v11);
          unint64_t v13 = (char *)sub_2225C3C70(v12);
          sub_2225C3D00((int)v41, v13);
          sub_2225DAD18(v42, v41[0], v41[1]);
          sub_2225DAD6C((uint64_t)&v43, (uint64_t)".framework", (uint64_t)v40);
          sub_2225CBDE8((uint64_t)v39, &byte_2226D1615);
          sub_2225CBDE8((uint64_t)v38, &byte_2226D1615);
          sub_2225CBDE8((uint64_t)v37, &byte_2226D1615);
          sub_2225CEF30(v42, v40, v39, v38, v37);
          uint64_t v14 = *(void *)(a1 + 16);
          uint64_t v15 = sub_2225CE27C((uint64_t)v42);
          int v17 = sub_2225F8658(v14, v15, v16, 1);
          if (v17)
          {
            uint64_t v18 = v17;
            uint64_t v19 = sub_2225D36E8((void *)(a1 + 24), i);
            BOOL v20 = sub_222616A98(v19) != 0;
            uint64_t v21 = sub_222616AA4(a1, v43, v44, v18, v20);
            if (v21) {
              goto LABEL_19;
            }
          }
          sub_2225CA520(v42);
        }
        uint64_t v22 = sub_2225D36E8((void *)(a1 + 24), i);
        if (sub_222616B84(v22))
        {
          uint64_t v23 = sub_2225D36E8((void *)(a1 + 24), i);
          BOOL v24 = sub_222616BA4(v23);
          uint64_t v25 = sub_2225D36E8((void *)(a1 + 24), i);
          uint64_t v26 = sub_222616CA4(v25);
          if (sub_222616BC4(a1, v26, v24, 0) == 1)
          {
            uint64_t v27 = sub_22262BD98(v6, (uint64_t)v43, v44);
            if (v27) {
              return v27;
            }
          }
          sub_2225CF794(v42);
          uint64_t v28 = sub_2225D36E8((void *)(a1 + 24), i);
          uint64_t v29 = sub_222616CA4(v28);
          unsigned int v30 = (char *)sub_2225C3C70(v29);
          sub_2225C3D00((int)v36, v30);
          sub_222616CD8(v42, v36[0], v36[1]);
          sub_2225CBDF0((uint64_t)v40, (uint64_t)&v43);
          sub_2225CBDE8((uint64_t)v39, &byte_2226D1615);
          sub_2225CBDE8((uint64_t)v38, &byte_2226D1615);
          sub_2225CBDE8((uint64_t)v37, &byte_2226D1615);
          sub_2225CEF30(v42, v40, v39, v38, v37);
          uint64_t v31 = sub_2225CE27C((uint64_t)v42);
          if (sub_222616D28(a1, v31, v32, v24, 0) == 1
            && (uint64_t v21 = sub_22262BD98(v6, (uint64_t)v43, v44)) != 0
            || (uint64_t v33 = sub_2225D36E8((void *)(a1 + 24), i), (sub_222616D9C(v33) & 1) == 0)
            && (uint64_t v34 = sub_2225D36E8((void *)(a1 + 24), i),
                sub_222616DA8(a1, v34),
                (uint64_t v21 = sub_22262BD98(v6, (uint64_t)v43, v44)) != 0))
          {
LABEL_19:
            uint64_t v7 = v21;
            sub_2225CA520(v42);
            return v7;
          }
          sub_2225CA520(v42);
        }
      }
    }
    return 0;
  }
  return v7;
}

BOOL sub_222616A44(uint64_t a1)
{
  return sub_222619640(a1) == 1;
}

uint64_t sub_222616A64(uint64_t a1)
{
  if (sub_222616A44(a1)) {
    return *(void *)a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_222616A98(uint64_t a1)
{
  return *(unsigned char *)(a1 + 8) & 3;
}

uint64_t sub_222616AA4(uint64_t a1, const void *a2, size_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = (uint64_t *)(a1 + 488);
  uint64_t result = sub_22262BD98(a1 + 488, (uint64_t)a2, a3);
  if (!result)
  {
    int v12 = sub_222616BC4(a1, (uint64_t)a4, a5, 1);
    uint64_t result = 0;
    if (v12)
    {
      if (v12 != 2)
      {
        if (v12 == 1)
        {
          return sub_22262BD98((uint64_t)v10, (uint64_t)a2, a3);
        }
        else
        {
          return sub_22262BE00(v10, a2, a3, a4, a5, 0);
        }
      }
    }
  }
  return result;
}

BOOL sub_222616B84(uint64_t a1)
{
  return sub_222619640(a1) == 0;
}

BOOL sub_222616BA4(uint64_t a1)
{
  return sub_222616A98(a1) != 0;
}

uint64_t sub_222616BC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v14 = a2;
  uint64_t v7 = a1 + 992;
  sub_22260B5C0(a1 + 992, &v14, (uint64_t)v13);
  sub_22260B264(v7, (uint64_t)v11);
  sub_2225F8068(v12, v11);
  if (sub_2225F9558(v13, (uint64_t)v12))
  {
    if (*(unsigned char *)(sub_2225C3C70((uint64_t)v13) + 8)) {
      return 0;
    }
    else {
      return 3;
    }
  }
  else
  {
    uint64_t v9 = sub_222619364(a1, v14, a4);
    if (v9)
    {
      uint64_t result = sub_2226190EC(a1, v9, a3);
      if (result == 1)
      {
        uint64_t v10 = sub_2226190CC(v7, &v14);
        uint64_t result = 1;
        *(unsigned char *)uint64_t v10 = 1;
      }
    }
    else
    {
      return 3;
    }
  }
  return result;
}

uint64_t sub_222616CA4(uint64_t a1)
{
  if (sub_222616B84(a1)) {
    return *(void *)a1;
  }
  else {
    return 0;
  }
}

const void **sub_222616CD8(const void **a1, uint64_t a2, uint64_t a3)
{
  sub_2225C5D90(a1);

  return sub_2225DAD18(a1, a2, a3);
}

uint64_t sub_222616D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8 = sub_2225F8658(*(void *)(a1 + 16), a2, a3, 1);
  if (!v8) {
    return 2;
  }

  return sub_222616BC4(a1, (uint64_t)v8, a4, a5);
}

uint64_t sub_222616D9C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 8) >> 5) & 1;
}

uint64_t sub_222616DA8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_222616D9C(a2);
  if ((result & 1) == 0)
  {
    sub_2225CDDC0(v18);
    sub_2225CF794(v17);
    uint64_t v5 = sub_222616CA4(a2);
    uint64_t v6 = (unsigned char *)sub_2225C3C70(v5);
    sub_2225CBDE8((uint64_t)v16, v6);
    sub_2225CF3C0(v16, v17);
    v14[0] = sub_2225CA4D0((uint64_t)v17);
    v14[1] = v7;
    sub_2225CBDF0((uint64_t)v16, (uint64_t)v14);
    sub_222614DF4(&v15, v16, v18);
    sub_222614E14((uint64_t)v16);
    if (sub_222614DF8(&v15, v16))
    {
      do
      {
        if (sub_2225CDBBC(v18)) {
          break;
        }
        uint64_t v8 = sub_222614E1C((uint64_t)&v15);
        uint64_t v10 = nullsub_1(v8, v9);
        sub_2225CCBF8(v13, v10);
        BOOL v11 = sub_222616BA4(a2);
        BOOL v12 = sub_222616A44(a2);
        sub_222616D28(a1, v13[0], v13[1], v11, v12);
        sub_22261527C((uint64_t)&v15, v18);
      }
      while ((sub_222614DF8(&v15, v16) & 1) != 0);
    }
    sub_222614E18(v16);
    sub_222614E18(&v15);
    sub_222619620(a2, 1);
    return sub_2225CA520(v17);
  }
  return result;
}

uint64_t sub_222616EE8(uint64_t a1)
{
  if (sub_222616B84(a1))
  {
    uint64_t v2 = sub_222616CA4(a1);
LABEL_5:
    return sub_2225C3C70(v2);
  }
  if (sub_222616A44(a1))
  {
    uint64_t v2 = sub_222616A64(a1);
    goto LABEL_5;
  }
  uint64_t v4 = sub_222616F64(a1);

  return sub_222616050(v4);
}

uint64_t sub_222616F64(uint64_t a1)
{
  if (sub_22261954C(a1)) {
    return *(void *)a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_222616F98(uint64_t a1, uint64_t *a2, uint64_t a3, const void **a4, const void **a5, const void **a6, unsigned char *a7, unsigned char *a8, const void **a9)
{
  *a7 = 0;
  *a8 = 0;
  sub_222616240(v55);
  if (sub_222616B84(a1))
  {
    uint64_t v17 = sub_222616CA4(a1);
    uint64_t v18 = (char *)sub_2225C3C70(v17);
    sub_2225C3D00((int)v54, v18);
    sub_222616CD8(v55, v54[0], v54[1]);
    sub_2225CBDF0((uint64_t)v49, (uint64_t)a2);
    sub_2225CBDE8((uint64_t)&v53, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)&v51, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v50, &byte_2226D1615);
    sub_2225CEF30(v55, v49, (char **)&v53, &v51, v50);
    if (a4)
    {
      uint64_t v19 = sub_222616CA4(a1);
      BOOL v20 = (char *)sub_2225C3C70(v19);
      sub_2225C3D00((int)v49, v20);
      sub_2225C5D90(a4);
      uint64_t v21 = (char *)sub_2225C3C70((uint64_t)v49);
      uint64_t v22 = (char *)sub_2225C3C78(v49);
      sub_2225C5A88(a4, v21, v22);
    }
    if (a5)
    {
      sub_2225C5D90(a5);
      uint64_t v23 = (char *)sub_2225C3C70((uint64_t)a2);
      BOOL v24 = (char *)sub_2225C3C78(a2);
      sub_2225C5A88(a5, v23, v24);
    }
    uint64_t v25 = (const void *)sub_2225CA4D0((uint64_t)v55);
    size_t v27 = v26;
    uint64_t v28 = (void *)sub_222616CA4(a1);
    BOOL v29 = sub_222616BA4(a1);
    uint64_t v30 = sub_22261730C(a3, v25, v27, v28, v29, a6);
    goto LABEL_9;
  }
  if (sub_222616A44(a1))
  {
    uint64_t v30 = sub_222617408(a1, *a2, a2[1], a3, a4, a5, a6, a7);
LABEL_9:
    uint64_t v31 = v30;
    goto LABEL_21;
  }
  uint64_t v32 = (uint64_t *)sub_222616F64(a1);
  sub_222616240(v49);
  uint64_t v51 = (char *)sub_222616244(v32, *a2, a2[1], (const void **)v49);
  size_t v52 = v33;
  if (sub_2225CF1E0((uint64_t)&v51))
  {
    uint64_t v31 = 0;
  }
  else
  {
    sub_2225CBDF0((uint64_t)&v53, (uint64_t)&v51);
    if (sub_2225CF8B4((char **)&v53))
    {
      sub_2225C5D90(a9);
      uint64_t v34 = (char *)sub_2225C3C70((uint64_t)&v51);
      int v35 = (char *)sub_2225C3C78(&v51);
      sub_2225C5A88(a9, v34, v35);
      uint64_t v36 = sub_2225C3C70((uint64_t)a9);
      uint64_t v37 = sub_2225C5664((uint64_t)a9);
      sub_2225C3D0C(&v53, v36, v37);
      *(_OWORD *)a2 = v53;
      *a8 = 1;
      uint64_t v38 = *a2;
      uint64_t v39 = a2[1];
      size_t v40 = (_DWORD *)sub_2225C5B40(a3);
      uint64_t v41 = sub_2226161A4(v32, v38, v39, v40);
    }
    else
    {
      uint64_t v42 = (_DWORD *)sub_2225C5B40(a3);
      uint64_t v41 = sub_2225F89F4(v42, v51, v52, 0, 1);
    }
    uint64_t v31 = v41;
    if (v41)
    {
      if (a4)
      {
        uint64_t v43 = (char *)sub_222616EE8(a1);
        sub_2225C3D00((int)&v53, v43);
        sub_2225C5D90(a4);
        size_t v44 = (char *)sub_2225C3C70((uint64_t)&v53);
        int v45 = (char *)sub_2225C3C78(&v53);
        sub_2225C5A88(a4, v44, v45);
      }
      if (a5)
      {
        sub_2225C5D90(a5);
        uint64_t v46 = (char *)sub_2225C3C70((uint64_t)a2);
        unsigned int v47 = (char *)sub_2225C3C78(a2);
        sub_2225C5A88(a5, v46, v47);
      }
    }
  }
  sub_2225CA520(v49);
LABEL_21:
  sub_2225CA520(v55);
  return v31;
}

uint64_t sub_22261730C(uint64_t a1, const void *a2, size_t a3, void *a4, uint64_t a5, const void **a6)
{
  sub_222618F50(a1, (uint64_t)a2, a3, a4, a5);
  BOOL v12 = (_DWORD *)sub_2225C5B40(a1);
  if (a6)
  {
    uint64_t v13 = sub_2225F89F4(v12, a2, a3, 0, 1);
    if (v13)
    {
      *a6 = sub_222617A5C(a1, v13);
      if (!sub_22261964C(a6, v14))
      {
        if (sub_222618F50(a1, (uint64_t)a2, a3, a4, a5)) {
          *a6 = sub_222617A5C(a1, v13);
        }
      }
    }
    return v13;
  }
  else
  {
    return sub_2225F89F4(v12, a2, a3, 1, 1);
  }
}

uint64_t sub_222617408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void **a5, const void **a6, const void **a7, unsigned char *a8)
{
  v66[131] = *(const void **)MEMORY[0x263EF8340];
  v65[0] = a2;
  v65[1] = a3;
  uint64_t v14 = (_DWORD *)sub_2225C5B40(a4);
  unint64_t v15 = sub_2225CCC00(v65, 0x2Fu, 0);
  if (v15 != -1)
  {
    unint64_t v16 = v15;
    uint64_t v17 = sub_2225CE76C(v65, 0, v15);
    uint64_t v19 = sub_2226178F0(a4, v17, v18);
    if (!*(void *)v19 || (uint64_t v20 = *(void *)v19, v20 == sub_222616A64(a1)))
    {
      sub_222616240(v64);
      uint64_t v22 = sub_222616A64(a1);
      uint64_t v23 = (char *)sub_2225C3C70(v22);
      sub_2225C3D00((int)v63, v23);
      sub_2225DAD18(v64, v63[0], v63[1]);
      if (sub_2225CF1D0(v64) || *(unsigned char *)sub_22261791C((uint64_t)v64) != 47)
      {
        LOBYTE(v66[0]) = 47;
        sub_2225C52D8((uint64_t)v64, v66);
      }
      uint64_t v24 = sub_2225C3C70((uint64_t)v65);
      sub_2225C3D0C(v62, v24, v16);
      sub_2225DAD18(v64, v62[0], v62[1]);
      sub_2225C3D00((int)v61, ".framework/");
      sub_2225DAD18(v64, v61[0], v61[1]);
      if (!*(void *)v19)
      {
        sub_222617938(a4);
        uint64_t v44 = sub_2225CA4D0((uint64_t)v64);
        if (!sub_2225F8658((uint64_t)v14, v44, v45, 1))
        {
          uint64_t v21 = 0;
LABEL_33:
          sub_2225CA520(v64);
          return v21;
        }
        *(void *)uint64_t v19 = sub_222616A64(a1);
        if (!sub_222616A98(a1))
        {
          sub_222617948(v66, v64);
          sub_2225C3D00((int)v60, ".system_framework");
          sub_2225DAD18(v66, v60[0], v60[1]);
          v57[0] = sub_2225CA4D0((uint64_t)v66);
          v57[1] = v46;
          sub_2225CBDF0((uint64_t)&v58, (uint64_t)v57);
          if (sub_2225D0FB8(&v58)) {
            *(unsigned char *)(v19 + 8) = 1;
          }
          sub_2225CA520(v66);
        }
      }
      *a8 = *(unsigned char *)(v19 + 8);
      if (a6)
      {
        sub_2225C5D90(a6);
        uint64_t v25 = (char *)(sub_2225C3C70((uint64_t)v65) + v16 + 1);
        size_t v26 = (char *)sub_2225C3C78(v65);
        sub_2225C5A88(a6, v25, v26);
      }
      unsigned int v27 = sub_2225C5664((uint64_t)v64);
      sub_2225C3D00((int)v56, "Headers/");
      sub_2225DAD18(v64, v56[0], v56[1]);
      if (a5)
      {
        sub_2225C5D90(a5);
        uint64_t v28 = (char *)sub_2225C3C70((uint64_t)v64);
        uint64_t v29 = sub_2225C3D04((uint64_t)v64);
        sub_2225C5A88(a5, v28, (char *)(v29 - 1));
      }
      uint64_t v30 = (char *)(sub_2225C3C70((uint64_t)v65) + v16 + 1);
      uint64_t v31 = (char *)sub_2225C3C78(v65);
      sub_2225DBA1C(v64, v30, v31);
      uint64_t v32 = (const void *)sub_2225CA4D0((uint64_t)v64);
      uint64_t v21 = sub_2225F89F4(v14, v32, v33, a7 == 0, 1);
      if (!v21)
      {
        uint64_t v34 = sub_2225C3C70((uint64_t)v64);
        sub_2225E06C8(v64, v34 + v27, "Private", "");
        if (a5)
        {
          uint64_t v35 = sub_2225C3C70((uint64_t)a5);
          sub_2225E06C8(a5, v35 + v27, "Private", "");
        }
        uint64_t v36 = (const void *)sub_2225CA4D0((uint64_t)v64);
        uint64_t v21 = sub_2225F89F4(v14, v36, v37, a7 == 0, 1);
      }
      if (a7 && v21)
      {
        uint64_t v38 = sub_222608330(v21);
        uint64_t v39 = (char *)sub_2225C3C70(v38);
        sub_2225C3D00((int)&v58, v39);
        while (1)
        {
          if (!sub_2225F8658((uint64_t)v14, v58, v59, 1))
          {
LABEL_23:
            *a7 = sub_222617A5C(a4, v21);
            goto LABEL_33;
          }
          uint64_t v40 = sub_2225CF58C(v58, v59);
          uint64_t v42 = v41;
          sub_2225C3D00((int)v55, ".framework");
          if (sub_2225CD4BC(v40, v42, v55[0], (size_t)v55[1])) {
            break;
          }
          uint64_t v58 = sub_2225CF24C(v58, v59);
          uint64_t v59 = v43;
          if (sub_2225CF1E0((uint64_t)&v58)) {
            goto LABEL_23;
          }
        }
        sub_22261794C(v66);
        unsigned int v47 = sub_222617950((uint64_t)v14, v58, v59, v66);
        uint64_t v48 = (char *)sub_2225C3C70((uint64_t)v47);
        sub_2225C3D00((int)v54, v48);
        uint64_t v49 = (const void *)sub_2225CF4B4(v54[0], v54[1]);
        size_t v51 = v50;
        BOOL v52 = sub_222616A98(a1) != 0;
        if (sub_222616AA4(a4, v49, v51, v47, v52)) {
          *a7 = sub_222617A5C(a4, v21);
        }
        sub_222617AB0(v66);
      }
      goto LABEL_33;
    }
  }
  return 0;
}

uint64_t sub_2226178F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_222618BD4(a1 + 296, a2, a3);

  return sub_2225E563C(v3);
}

uint64_t sub_22261791C(uint64_t a1)
{
  return sub_2225C3D04(a1) - 1;
}

uint64_t sub_222617938(uint64_t result)
{
  return result;
}

void *sub_222617950(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_2225F8658(a1, a2, a3, 1);
  uint64_t v7 = sub_2225F93A0(a1, (uint64_t)v6);
  uint64_t v21 = sub_2225CF24C(v7, v8);
  for (uint64_t i = v9; !sub_2225CF1E0((uint64_t)&v21); uint64_t i = v16)
  {
    uint64_t v10 = sub_2225F8658(a1, v21, i, 1);
    if (!v10) {
      break;
    }
    BOOL v11 = v10;
    uint64_t v12 = sub_2225CF58C(v21, i);
    uint64_t v14 = v13;
    sub_2225C3D00((int)v20, ".framework");
    if (sub_2225CD4BC(v12, v14, v20[0], (size_t)v20[1]))
    {
      v18[0] = sub_2225CF4B4(v21, i);
      v18[1] = v15;
      sub_2225CA51C(v18, (uint64_t)&v19);
      sub_22261969C(a4, (uint64_t)&v19);
      std::string::~string(&v19);
      uint64_t v6 = v11;
    }
    uint64_t v21 = sub_2225CF24C(v21, i);
  }
  return v6;
}

const void *sub_222617A5C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 1184)) {
    sub_2226190E8(a1, a2);
  }

  return sub_222628BA8((uint64_t *)(a1 + 488), a2, 0);
}

uint64_t sub_222617AB4(uint64_t a1, uint64_t a2)
{
  return sub_222628314(a1 + 488, a2);
}

uint64_t sub_222617ABC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, const void **a11, const void **a12, const void **a13, char a14)
{
  LODWORD(v16) = a5;
  std::string v19 = a13;
  *(void *)&v109[0] = a2;
  *((void *)&v109[0] + 1) = a3;
  v108[0] = a9;
  v108[1] = a10;
  uint64_t v20 = sub_2225C3C70(a1);
  if (!sub_222618330(v20 + 632))
  {
    uint64_t v21 = sub_2225C3C70(a1);
    *(void *)&v105[0] = sub_222618338(v21 + 632);
    uint64_t v22 = sub_2225C3C70(a1);
    *(void *)&v102[0] = sub_222618370(v22 + 632);
    while (sub_2225D0DF0((uint64_t)v105, (uint64_t)v102))
    {
      uint64_t v23 = *(_DWORD **)(a1 + 16);
      uint64_t v24 = sub_2225C3C70((uint64_t)v105);
      sub_2225CCBF8(v107, v24);
      uint64_t v25 = sub_2225F89F4(v23, v107[0], (size_t)v107[1], 0, 1);
      if (v25) {
        sub_2226183A8(a1, v25, 0);
      }
      sub_2225F3950(v105);
    }
    uint64_t v26 = sub_2225C3C70(a1);
    sub_2226183C8((void *)(v26 + 632));
  }
  if (a13)
  {
    sub_222618400((uint64_t)v105);
    *a13 = *(const void **)&v105[0];
  }
  unsigned int v27 = a12;
  sub_2225CBDF0((uint64_t)v105, (uint64_t)v109);
  if (!sub_2225CF850((char **)v105))
  {
    sub_222618400((uint64_t)&v106);
    uint64_t v28 = 0;
    BOOL v94 = a7;
    unsigned int v96 = a4;
    uint64_t v92 = a6;
    char v93 = v16;
    if (!sub_2225CF1E0((uint64_t)v108) && (v16 & 1) == 0)
    {
      if (*(unsigned char *)(a1 + 56))
      {
        uint64_t v28 = 0;
      }
      else
      {
        sub_222616240(v105);
        uint64_t v31 = sub_2225C3C70((uint64_t)v108);
        uint64_t v32 = sub_222618404(v108);
        if (v31 == v32)
        {
LABEL_24:
          sub_2225CA520(v105);
          uint64_t v28 = 0;
          std::string v19 = a13;
          a7 = v94;
          a6 = v92;
        }
        else
        {
          uint64_t v33 = v32;
          uint64_t v34 = (uint64_t *)(v31 + 8);
          char v35 = 1;
          while (1)
          {
            size_t v37 = v34 - 1;
            uint64_t v36 = *(v34 - 1);
            uint64_t v38 = (char *)sub_2225C3C70(*v34);
            sub_2225C3D00((int)v104, v38);
            sub_222616CD8((const void **)v105, v104[0], v104[1]);
            LOBYTE(v102[0]) = 47;
            sub_2225C52D8((uint64_t)v105, v102);
            uint64_t v39 = (char *)sub_2225C3C70((uint64_t)v109);
            uint64_t v40 = (char *)sub_2225C3C78(v109);
            sub_2225DBA1C((const void **)v105, v39, v40);
            BOOL v41 = (*sub_222618410(a1, v36) & 0xC) != 0;
            uint64_t v42 = (const void *)sub_2225CA4D0((uint64_t)v105);
            uint64_t v44 = sub_22261730C(a1, v42, v43, (void *)*v34, v41, a13);
            if (v44) {
              break;
            }
            char v35 = 0;
            v34 += 2;
            if (v37 + 2 == (uint64_t *)v33) {
              goto LABEL_24;
            }
          }
          uint64_t v28 = v44;
          __n128 v76 = sub_222618410(a1, v36);
          __int16 v77 = *v76;
          v102[0] = *((_OWORD *)v76 + 1);
          int v78 = sub_222618410(a1, v28);
          *int v78 = *v78 & 0xFBF3 | v77 & 0x40C;
          *((_OWORD *)v78 + 1) = v102[0];
          if (a11)
          {
            uint64_t v79 = (char *)sub_2225C3C70(*v34);
            sub_2225C3D00((int)v103, v79);
            sub_2225C5D90(a11);
            std::string v80 = (char *)sub_2225C3C70((uint64_t)v103);
            char v81 = (char *)sub_2225C3C78(v103);
            sub_2225C5A88(a11, v80, v81);
          }
          std::string v19 = a13;
          a7 = v94;
          a6 = v92;
          if (a12)
          {
            sub_2225C5D90(a12);
            int v82 = (char *)sub_2225C3C70((uint64_t)v109);
            uint64_t v83 = (char *)sub_2225C3C78(v109);
            sub_2225C5A88(a12, v82, v83);
          }
          if (v35)
          {
            sub_2225CA520(v105);
            return v28;
          }
          BOOL v90 = sub_2226184E8(*(unsigned char **)(a1 + 8), 0x323u, v96);
          BOOL v91 = v90;
          if (!a13 || v90)
          {
            sub_2225CA520(v105);
            if (v91) {
              return v28;
            }
          }
          else
          {
            uint64_t v106 = *a13;
            sub_222618400((uint64_t)v103);
            *a13 = (const void *)v103[0];
            sub_2225CA520(v105);
          }
        }
      }
    }
    *a7 = 0;
    if (v16) {
      LODWORD(v16) = *(_DWORD *)(a1 + 48);
    }
    if (a6) {
      unint64_t v16 = (unint64_t)(a6 - sub_2225D36E8((void *)(a1 + 24), 0)) >> 4;
    }
    uint64_t v97 = a1 + 136;
    uint64_t v45 = sub_222618538(a1 + 136, *(uint64_t *)&v109[0], *((uint64_t *)&v109[0] + 1));
    uint64_t v46 = sub_2225E563C(v45);
    unsigned int v47 = a11;
    uint64_t v95 = v28;
    uint64_t v98 = v46;
    if (a14)
    {
      int v48 = v16 + 1;
    }
    else
    {
      int v48 = v16 + 1;
      if (*(_DWORD *)v46 == v16 + 1)
      {
        LODWORD(v16) = *(_DWORD *)(v46 + 4);
        uint64_t v49 = *(char **)(v46 + 8);
        if (v49)
        {
          sub_2225C3D00((int)v105, v49);
          v109[0] = v105[0];
        }
LABEL_35:
        sub_2225DAD14(v102);
        if (sub_2225D36D8((void *)(a1 + 24)) == v16)
        {
LABEL_41:
          if (!sub_2225CF1E0((uint64_t)v108) && (v93 & 1) == 0 && sub_2225CCC00(v109, 0x2Fu, 0) == -1)
          {
            uint64_t v59 = (uint64_t *)sub_2225C3C70((uint64_t)v108);
            size_t v60 = sub_222618410(a1, *v59);
            if ((*v60 & 0x400) != 0)
            {
              unsigned __int16 v70 = v60;
              sub_2225CF794(v105);
              sub_2225DAD18((const void **)v105, *((void *)v70 + 2), *((void *)v70 + 3));
              sub_2226186D4((uint64_t)v105, 47);
              sub_2225DAD18((const void **)v105, *(uint64_t *)&v109[0], *((uint64_t *)&v109[0] + 1));
              uint64_t v71 = sub_2225CE27C((uint64_t)v105);
              uint64_t v73 = v72;
              uint64_t v74 = sub_2225C3C70((uint64_t)v108);
              sub_22261870C(&v99, v74);
              uint64_t v75 = sub_222617ABC(a1, v71, v73, v96, 1, v92, v94);
              uint64_t v28 = v95;
              if (sub_22261866C(*(void *)(a1 + 8), v95, v75, v96))
              {
                if (v19) {
                  *std::string v19 = v106;
                }
              }
              else
              {
                uint64_t v84 = sub_222618538(v97, *(uint64_t *)&v109[0], *((uint64_t *)&v109[0] + 1));
                uint64_t v85 = sub_2225E563C(v84);
                uint64_t v86 = sub_2225CE27C((uint64_t)v105);
                uint64_t v88 = sub_222618538(v97, v86, v87);
                *(_DWORD *)(v85 + 4) = *(_DWORD *)(sub_2225E563C(v88) + 4);
                uint64_t v28 = v75;
              }
              sub_2225CA520(v105);
              goto LABEL_72;
            }
          }
          uint64_t v28 = v95;
          if (sub_22261866C(*(void *)(a1 + 8), v95, 0, v96)) {
            goto LABEL_58;
          }
          uint64_t v28 = 0;
          *(_DWORD *)(v98 + 4) = sub_2225D36D8((void *)(a1 + 24));
        }
        else
        {
          uint64_t v50 = v16;
          while (1)
          {
            LOBYTE(v105[0]) = 0;
            LOBYTE(v103[0]) = 0;
            uint64_t v51 = sub_2225D36E8((void *)(a1 + 24), v50);
            uint64_t v52 = sub_222616F98(v51, (uint64_t *)v109, a1, v47, v27, v19, v105, v103, (const void **)v102);
            if (LOBYTE(v103[0]))
            {
              long long v53 = v27;
              uint64_t v54 = v19;
              uint64_t v56 = *((void *)&v109[0] + 1);
              uint64_t v55 = *(void *)&v109[0];
              uint64_t v57 = sub_2225F315C(v97);
              uint64_t v58 = v56;
              std::string v19 = v54;
              unsigned int v27 = v53;
              unsigned int v47 = a11;
              *(void *)(v98 + 8) = sub_222618598(v55, v58, v57);
            }
            if (v52) {
              break;
            }
            LODWORD(v16) = v16 + 1;
            uint64_t v50 = v16;
            if (sub_2225D36D8((void *)(a1 + 24)) == v16) {
              goto LABEL_41;
            }
          }
          *BOOL v94 = sub_2225D36E8((void *)(a1 + 24), v50);
          uint64_t v61 = sub_222618410(a1, v52);
          char v62 = sub_222616A98(*v94);
          __int16 v63 = *v61;
          __int16 *v61 = *v61 & 0xFFF3 | (4 * (v62 & 3));
          if ((v62 & 3) == 0 && LOBYTE(v105[0])) {
            __int16 *v61 = v63 & 0xFFF3 | 4;
          }
          uint64_t v64 = sub_222616714((void *)(a1 + 64));
          while (v64)
          {
            uint64_t v65 = sub_2225F7FCC((void *)(a1 + 64), --v64);
            sub_2225CCBF8(v101, v65);
            if (sub_2225D0520((uint64_t)v109, v101[0], (size_t)v101[1]))
            {
              __int16 *v61 = *v61 & 0xFFF3 | (4 * (*(unsigned char *)(sub_2225F7FCC((void *)(a1 + 64), v64) + 24) & 0x3F));
              break;
            }
          }
          if (sub_222618610(*v94))
          {
            unint64_t v66 = sub_2225CCC00(v109, 0x2Fu, 0);
            if (v66 != -1)
            {
              unint64_t v67 = v66;
              *v61 |= 0x400u;
              uint64_t v68 = sub_2225C3C70((uint64_t)v109);
              sub_2225C3D0C(v100, v68, v67);
              *((void *)v61 + 2) = sub_222618640(a1, v100[0], v100[1]);
              *((void *)v61 + 3) = v69;
            }
          }
          uint64_t v28 = v95;
          if (sub_22261866C(*(void *)(a1 + 8), v95, v52, v96))
          {
LABEL_58:
            if (v19) {
              *std::string v19 = v106;
            }
            goto LABEL_72;
          }
          *(_DWORD *)(v98 + 4) = v16;
          uint64_t v28 = v52;
        }
LABEL_72:
        sub_2225CA520(v102);
        return v28;
      }
    }
    sub_22261858C(v46, v48);
    goto LABEL_35;
  }
  uint64_t v28 = 0;
  *a7 = 0;
  if (!a6)
  {
    if (a11) {
      sub_2225C5D90(a11);
    }
    if (a12)
    {
      sub_2225C5D90(a12);
      uint64_t v29 = (char *)sub_2225C3C70((uint64_t)v109);
      uint64_t v30 = (char *)sub_2225C3C78(v109);
      sub_2225C5A88(a12, v29, v30);
    }
    return sub_2225F89F4(*(_DWORD **)(a1 + 16), *(const void **)&v109[0], *((size_t *)&v109[0] + 1), 1, 1);
  }
  return v28;
}

BOOL sub_222618330(uint64_t a1)
{
  return sub_2225CF1D0((void *)(a1 + 432));
}

uint64_t sub_222618338(uint64_t a1)
{
  uint64_t v2 = sub_2225D2E88((uint64_t *)(a1 + 432));
  sub_2225D24D0(&v3, &v2);
  return v3;
}

uint64_t sub_222618370(uint64_t a1)
{
  uint64_t v2 = sub_2225D24C8(a1 + 432);
  sub_2225D24D0(&v3, &v2);
  return v3;
}

BOOL sub_2226183A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226190EC(a1, a2, a3) > 1;
}

uint64_t sub_2226183C8(void *a1)
{
  sub_22261A380(a1);

  return sub_2226083D0(a1 + 54);
}

uint64_t sub_222618404(void *a1)
{
  return *a1 + 16 * a1[1];
}

__int16 *sub_222618410(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225DF8D0(a2);
  if (sub_222616714((void *)(a1 + 112)) <= (unint64_t)v4)
  {
    int v5 = sub_2225DF8D0(a2);
    sub_222618C08((uint64_t *)(a1 + 112), (v5 + 1));
  }
  unsigned int v6 = sub_2225DF8D0(a2);
  uint64_t v7 = (__int16 *)sub_2225F7FCC((void *)(a1 + 112), v6);
  uint64_t v8 = *(void *)(a1 + 1184);
  __int16 v9 = *v7;
  if (v8 && (*v7 & 0x200) == 0)
  {
    (*(void (**)(void *__return_ptr))(*(void *)v8 + 16))(v11);
    sub_222618C84(v7, (uint64_t)v11);
    __int16 v9 = *v7;
  }
  *uint64_t v7 = v9 | 0x800;
  return v7;
}

BOOL sub_2226184E8(unsigned char *a1, unsigned int a2, int a3)
{
  uint64_t v6 = sub_2225C3C70((uint64_t)(a1 + 40));
  return sub_2225F7350(v6, a2, a3, a1) == 1;
}

uint64_t sub_222618538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225CCC70(v7);
  return sub_2226199D0(a1, a2, a3, v7[0], v7[1]);
}

uint64_t sub_22261858C(uint64_t result, int a2)
{
  *(_DWORD *)uint64_t result = a2;
  *(void *)(result + 8) = 0;
  return result;
}

uint64_t sub_222618598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a1;
  v7[1] = a2;
  uint64_t v4 = sub_2225C3D04((uint64_t)v7);
  uint64_t v5 = sub_2225E4B90(a3, v4 + 1);
  sub_2225C3C70((uint64_t)v7);
  sub_2225C3C78(v7);
  sub_2225C5DDC();
  *(unsigned char *)(v5 + sub_2225C3D04((uint64_t)v7)) = 0;
  return v5;
}

BOOL sub_222618610(uint64_t a1)
{
  BOOL result = sub_22261954C(a1);
  if (result) {
    return (*(unsigned __int8 *)(a1 + 8) >> 4) & 1;
  }
  return result;
}

uint64_t sub_222618640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (unsigned int *)sub_222618EFC(a1 + 1016, a2, a3);

  return sub_222618F04(v3);
}

uint64_t sub_22261866C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (a2) {
    BOOL v4 = a3 == a2;
  }
  else {
    BOOL v4 = 1;
  }
  uint64_t v5 = !v4;
  if (!v4)
  {
    sub_2225F52C4(a1, a4, 803, (uint64_t)v9);
    uint64_t v7 = sub_2225C3C70(a2);
    sub_22260A5E8(v9, v7);
    sub_2225F37F0(v9);
  }
  return v5;
}

uint64_t sub_2226186D4(uint64_t a1, char a2)
{
  char v4 = a2;
  sub_2225C52D8(a1, &v4);
  return a1;
}

uint64_t sub_222618710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void **a5, const void **a6, const void **a7)
{
  v65[15] = *MEMORY[0x263EF8340];
  v64[0] = a2;
  v64[1] = a3;
  unint64_t v12 = sub_2225CCC00(v64, 0x2Fu, 0);
  if (v12 != -1)
  {
    unint64_t v13 = v12;
    uint64_t v14 = (char *)sub_2225C3C70(a4);
    uint64_t v15 = j__strstr(v14, ".framework");
    if (v15)
    {
      int v16 = v15[10];
      if (v16 == 92 || v16 == 47)
      {
        sub_222618BD0(v63, v14, v15 + 11);
        sub_2225C3D00((int)v62, "Frameworks/");
        sub_2225DAD18(v63, v62[0], v62[1]);
        uint64_t v17 = (char *)sub_2225C3C70((uint64_t)v64);
        uint64_t v18 = sub_2225C3C70((uint64_t)v64);
        sub_2225DBA1C(v63, v17, (char *)(v18 + v13));
        sub_2225C3D00((int)v61, ".framework/");
        sub_2225DAD18(v63, v61[0], v61[1]);
        uint64_t v19 = sub_2225CE76C(v64, 0, v13);
        uint64_t v21 = (unsigned int *)sub_222618BD4(a1 + 296, v19, v20);
        if (!*(void *)sub_2225E563C((uint64_t)v21)
          || (int v22 = sub_2225C3B40(v21), sub_2225C5664((uint64_t)v63) != v22)
          || (uint64_t v23 = (const void *)sub_2225F315C((uint64_t)v21),
              uint64_t v24 = (const void *)sub_2225C5698((uint64_t)v63, 0),
              unsigned int v25 = sub_2225C3B40(v21),
              !memcmp(v23, v24, v25)))
        {
          if (*(void *)sub_2225E563C((uint64_t)v21))
          {
            if (!a6)
            {
LABEL_11:
              sub_222617948(v60, v63);
              sub_2225C3D00((int)v59, "Headers/");
              sub_2225DAD18(v60, v59[0], v59[1]);
              if (a5)
              {
                sub_2225C5D90(a5);
                uint64_t v28 = (char *)sub_2225C3C70((uint64_t)v60);
                uint64_t v29 = sub_2225C3D04((uint64_t)v60);
                sub_2225C5A88(a5, v28, (char *)(v29 - 1));
              }
              uint64_t v30 = (char *)(sub_2225C3C70((uint64_t)v64) + v13 + 1);
              uint64_t v31 = (char *)sub_2225C3C78(v64);
              sub_2225DBA1C(v60, v30, v31);
              uint64_t v32 = *(_DWORD **)(a1 + 16);
              uint64_t v33 = (const void *)sub_2225CA4D0((uint64_t)v60);
              uint64_t v35 = sub_2225F89F4(v32, v33, v34, 1, 1);
              if (v35) {
                goto LABEL_17;
              }
              sub_222618BE0(v60, (uint64_t)v63);
              sub_2225C3D00((int)v58, "PrivateHeaders/");
              sub_2225DAD18(v60, v58[0], v58[1]);
              if (a5)
              {
                sub_2225C5D90(a5);
                uint64_t v36 = (char *)sub_2225C3C70((uint64_t)v60);
                uint64_t v37 = sub_2225C3D04((uint64_t)v60);
                sub_2225C5A88(a5, v36, (char *)(v37 - 1));
              }
              uint64_t v38 = (char *)(sub_2225C3C70((uint64_t)v64) + v13 + 1);
              uint64_t v39 = (char *)sub_2225C3C78(v64);
              sub_2225DBA1C(v60, v38, v39);
              uint64_t v40 = *(_DWORD **)(a1 + 16);
              BOOL v41 = (const void *)sub_2225CA4D0((uint64_t)v60);
              uint64_t v35 = sub_2225F89F4(v40, v41, v42, 1, 1);
              if (v35)
              {
LABEL_17:
                __int16 v43 = *sub_222618410(a1, a4) & 0xC;
                uint64_t v44 = sub_222618410(a1, v35);
                *uint64_t v44 = *v44 & 0xFFF3 | v43;
                if (a7)
                {
                  sub_2225CF758((uint64_t)v63);
                  sub_22261794C(v65);
                  uint64_t v45 = *(void *)(a1 + 16);
                  uint64_t v46 = sub_2225CE27C((uint64_t)v63);
                  int v48 = sub_222617950(v45, v46, v47, v65);
                  uint64_t v49 = (char *)sub_2225C3C70((uint64_t)v48);
                  sub_2225C3D00((int)v57, v49);
                  uint64_t v50 = (const void *)sub_2225CF4B4(v57[0], v57[1]);
                  if (sub_222616AA4(a1, v50, v51, v48, 0)) {
                    *a7 = sub_222617A5C(a1, v35);
                  }
                  sub_222617AB0(v65);
                }
              }
              sub_2225CA520(v60);
              goto LABEL_27;
            }
LABEL_10:
            sub_2225C5D90(a6);
            uint64_t v26 = (char *)(sub_2225C3C70((uint64_t)v64) + v13 + 1);
            unsigned int v27 = (char *)sub_2225C3C78(v64);
            sub_2225C5A88(a6, v26, v27);
            goto LABEL_11;
          }
          ++*(_DWORD *)(a1 + 1204);
          uint64_t v52 = *(void *)(a1 + 16);
          uint64_t v53 = sub_2225CA4D0((uint64_t)v63);
          uint64_t v55 = sub_2225F8658(v52, v53, v54, 1);
          if (v55)
          {
            *(void *)sub_2225E563C((uint64_t)v21) = v55;
            if (!a6) {
              goto LABEL_11;
            }
            goto LABEL_10;
          }
        }
        uint64_t v35 = 0;
LABEL_27:
        sub_2225CA520(v63);
        return v35;
      }
    }
  }
  return 0;
}

uint64_t sub_222618BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226199D0(a1, a2, a3, 0, 0);
}

const void **sub_222618BE0(const void **a1, uint64_t a2)
{
  return a1;
}

void *sub_222618C08(uint64_t *a1, unint64_t a2)
{
  BOOL result = (void *)sub_222616714(a1);
  if (a2 <= (unint64_t)result)
  {
    if (a2 < (unint64_t)result)
    {
      uint64_t v5 = *a1 + 32 * a2;
      return (void *)sub_22261A590(a1, v5);
    }
  }
  else
  {
    return sub_22261A4B8(a1, a2 - (void)result);
  }
  return result;
}

BOOL sub_222618C84(__int16 *a1, uint64_t a2)
{
  __int16 v4 = *a1;
  __int16 v5 = *(_WORD *)a2 & 1 | *a1;
  *a1 = v5;
  __int16 v6 = (*(_WORD *)a2 | v4) & 2 | v5 & 0xFFFD;
  *a1 = v6;
  __int16 v7 = v6 & 0xFFDF | (*(_WORD *)a2 | v4) & 0x20;
  *a1 = v7;
  a1[1] += *(_WORD *)(a2 + 2);
  if (!*((void *)a1 + 1) && !*((_DWORD *)a1 + 1))
  {
    *((void *)a1 + 1) = *(void *)(a2 + 8);
    *((_DWORD *)a1 + 1) = *(_DWORD *)(a2 + 4);
  }
  if ((*(_WORD *)a2 & 0x10) != 0)
  {
    __int16 v8 = *(_WORD *)a2 & 0xC | v7 & 0xFFF3;
    *a1 = v8;
    __int16 v9 = *(_WORD *)a2 & 0x10 | v8 & 0xFFEF;
    *a1 = v9;
    *a1 = v9 & 0xFBFF | *(_WORD *)a2 & 0x400;
  }
  BOOL result = sub_2225CF1E0((uint64_t)(a1 + 8));
  if (result) {
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  }
  *a1 |= 0x200u;
  return result;
}

_WORD *sub_222618D8C(uint64_t a1, uint64_t a2, char a3, int a4)
{
  unsigned int v8 = sub_2225DF8D0(a2);
  __int16 v9 = (uint64_t *)(a1 + 112);
  if (sub_222616714(v9) <= (unint64_t)v8)
  {
    int v10 = sub_2225DF8D0(a2);
    sub_222618C08(v9, (v10 + 1));
  }
  unsigned int v11 = sub_2225DF8D0(a2);
  unint64_t v12 = (_WORD *)sub_2225F7FCC(v9, v11);
  if (a4) {
    __int16 v13 = 96;
  }
  else {
    __int16 v13 = 32;
  }
  *unint64_t v12 = v13 | *v12 & 0xFF9F;

  return sub_222618E44(v12, a3);
}

_WORD *sub_222618E44(_WORD *result, char a2)
{
  void *result = *result & 0xFE7F | ((a2 & 3) << 7);
  return result;
}

uint64_t sub_222618E5C(uint64_t a1, uint64_t a2, int a3)
{
  ++*(_DWORD *)(a1 + 1192);
  __int16 v5 = sub_222618410(a1, a2);
  __int16 v6 = v5;
  __int16 v7 = *v5;
  if (a3)
  {
    *__int16 v5 = v7 | 1;
    if (v5[1]) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  uint64_t v9 = sub_2226164C4((uint64_t)v5, *(void *)(a1 + 1176));
  if (v9 && sub_2226074C0(v9))
  {
    uint64_t result = 0;
    ++*(_DWORD *)(a1 + 1196);
  }
  else
  {
    ++v6[1];
    return 1;
  }
  return result;
}

uint64_t sub_222618EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22261AD50(a1, a2, a3, 0);
}

uint64_t sub_222618F04(unsigned int *a1)
{
  uint64_t v2 = sub_2225E563C((uint64_t)a1);
  unsigned int v3 = sub_2225C3B40(a1);
  sub_2225C3D0C(&v5, v2, v3);
  return v5;
}

uint64_t sub_222618F50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  if (!sub_2226190C4(a1)) {
    return 0;
  }
  sub_2225F48E0(v22);
  uint64_t v20 = sub_2225CF24C(a2, a3);
  uint64_t v21 = v10;
  if (!sub_2225CF1E0((uint64_t)&v20))
  {
    while (1)
    {
      uint64_t v19 = 0;
      unint64_t v12 = sub_2225F8658(*(void *)(a1 + 16), v20, v21, 1);
      uint64_t v19 = v12;
      if (!v12) {
        break;
      }
      if (sub_222616BC4(a1, (uint64_t)v12, a5, 0) <= 1)
      {
        int v15 = sub_2225CC780((uint64_t)v22);
        if (v15)
        {
          unsigned int v16 = 0;
          uint64_t v17 = a1 + 992;
          uint64_t v11 = 1;
          do
          {
            uint64_t v18 = (uint64_t *)sub_2225F84F4((uint64_t)v22, v16);
            *(unsigned char *)sub_2226190CC(v17, v18) = 1;
            ++v16;
          }
          while (v15 != v16);
        }
        else
        {
          uint64_t v11 = 1;
        }
        goto LABEL_4;
      }
      if (v19 != a4)
      {
        sub_2225CC7B8((uint64_t)v22, &v19);
        uint64_t v20 = sub_2225CF24C(v20, v21);
        uint64_t v21 = v13;
        if (!sub_2225CF1E0((uint64_t)&v20)) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v11 = 0;
LABEL_4:
  sub_2225C56C4(v22);
  return v11;
}

uint64_t sub_2226190C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1208);
}

uint64_t *sub_2226190CC(uint64_t a1, uint64_t *a2)
{
  return sub_222619974(a1, a2) + 1;
}

uint64_t sub_2226190EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = sub_222608330(a2);
  sub_22260B5C0(a1 + 992, &v14, (uint64_t)v13);
  sub_22260B264(a1 + 992, (uint64_t)v11);
  sub_2225F8068(v12, v11);
  if (sub_2225F9558(v13, (uint64_t)v12))
  {
    if (*(unsigned char *)(sub_2225C3C70((uint64_t)v13) + 8)) {
      return 0;
    }
    else {
      return 3;
    }
  }
  else if (sub_22262C6E4((uint64_t *)(a1 + 488), a2, a3) {
         || (__int16 v7 = (char *)sub_2225C3C70(a2),
  }
             sub_2225C3D00((int)v10, v7),
             (uint64_t v8 = sub_222619214(v10[0], v10[1], v14, *(_DWORD **)(a1 + 16))) != 0)
         && sub_22262C6E4((uint64_t *)(a1 + 488), v8, a3))
  {
    *(unsigned char *)sub_2226190CC(a1 + 992, &v14) = 0;
    return 3;
  }
  else
  {
    uint64_t v9 = sub_2226190CC(a1 + 992, &v14);
    uint64_t result = 1;
    *(unsigned char *)uint64_t v9 = 1;
  }
  return result;
}

uint64_t sub_222619214(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  uint64_t v6 = sub_2225CF480(a1, a2);
  uint64_t v8 = v7;
  uint64_t v9 = (char *)sub_2225C3C70(a3);
  sub_2225C3D00((int)v21, v9);
  sub_2225D02D0(v22, v21[0], v21[1]);
  sub_2225C3D00((int)v20, "module.map");
  if (sub_2225CD4BC(v6, v8, v20[0], (size_t)v20[1]))
  {
    uint64_t v10 = "module_private.map";
  }
  else
  {
    sub_2225C3D00((int)v15, "module.modulemap");
    if (!sub_2225CD4BC(v6, v8, v15[0], (size_t)v15[1]))
    {
      uint64_t v13 = 0;
      goto LABEL_7;
    }
    uint64_t v10 = "module.private.modulemap";
  }
  sub_2225CBDE8((uint64_t)v19, v10);
  sub_2225CBDE8((uint64_t)v18, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v17, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v16, &byte_2226D1615);
  sub_2225CEF30(v22, v19, v18, v17, v16);
  uint64_t v11 = (const void *)sub_2225CE27C((uint64_t)v22);
  uint64_t v13 = sub_2225F89F4(a4, v11, v12, 0, 1);
LABEL_7:
  sub_2225CA520(v22);
  return v13;
}

uint64_t sub_222619364(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = (char *)sub_2225C3C70(a2);
  sub_2225C3D00((int)v21, v6);
  sub_2225D02D0(v22, v21[0], v21[1]);
  if (a3)
  {
    sub_2225CBDE8((uint64_t)v20, "Modules");
    sub_2225CBDE8((uint64_t)v19, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v18, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v17, &byte_2226D1615);
    sub_2225CEF30(v22, v20, v19, v18, v17);
  }
  sub_2225CBDE8((uint64_t)v20, "module.modulemap");
  sub_2225CBDE8((uint64_t)v19, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v18, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v17, &byte_2226D1615);
  sub_2225CEF30(v22, v20, v19, v18, v17);
  uint64_t v7 = *(_DWORD **)(a1 + 16);
  uint64_t v8 = (const void *)sub_2225CE27C((uint64_t)v22);
  uint64_t v10 = sub_2225F89F4(v7, v8, v9, 0, 1);
  if (!v10)
  {
    uint64_t v11 = (char *)sub_2225C3C70(a2);
    sub_2225C3D00((int)v16, v11);
    sub_222616CD8(v22, v16[0], v16[1]);
    sub_2225CBDE8((uint64_t)v20, "module.map");
    sub_2225CBDE8((uint64_t)v19, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v18, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v17, &byte_2226D1615);
    sub_2225CEF30(v22, v20, v19, v18, v17);
    size_t v12 = *(_DWORD **)(a1 + 16);
    uint64_t v13 = (const void *)sub_2225CE27C((uint64_t)v22);
    uint64_t v10 = sub_2225F89F4(v12, v13, v14, 0, 1);
  }
  sub_2225CA520(v22);
  return v10;
}

BOOL sub_22261954C(uint64_t a1)
{
  return sub_222619640(a1) == 2;
}

uint64_t sub_22261956C(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 24);
  uint64_t result = sub_2225D36D8((void *)(a1 + 24));
  uint64_t v4 = result;
  if (result)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = sub_2225D36E8(v2, v5);
      uint64_t result = sub_222616B84(v6);
      if (result)
      {
        uint64_t v7 = sub_2225D36E8(v2, v5);
        uint64_t v8 = sub_222616CA4(v7);
        uint64_t v9 = sub_2225D36E8(v2, v5);
        BOOL v10 = sub_222616BA4(v9);
        uint64_t v11 = sub_2225D36E8(v2, v5);
        BOOL v12 = sub_222616A44(v11);
        uint64_t result = sub_222616BC4(a1, v8, v10, v12);
      }
      ++v5;
    }
    while (v4 != v5);
  }
  return result;
}

uint64_t sub_222619620(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 32;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 0xDF | v2;
  return result;
}

uint64_t sub_222619640(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 8) >> 2) & 3;
}

const void **sub_222619654(const void **a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2225D0648(a1, (uint64_t)a2);
  }
  return a1;
}

uint64_t sub_22261969C(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_22261970C(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_2225D1354(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 24;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_22261970C(void *a1, unint64_t a2)
{
  unint64_t v4 = sub_222619804((uint64_t)a1);
  unint64_t v5 = sub_222609DE8((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(24 * v7, 0x1012040EC159624uLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_222619848(v9, v10, (uint64_t)v8);
  uint64_t v11 = (std::string *)sub_2225C3C70((uint64_t)a1);
  BOOL v12 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_2226198A0(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 24 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 24 * v7;
  return result;
}

unint64_t sub_222619804(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return 0xAAAAAAAAAAAAAAABLL * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_222619848(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D1354(a3, v5);
      v5 += 24;
      a3 += 24;
    }
    while (v5 != a2);
  }
  return result;
}

void sub_2226198A0(std::string *a1, std::string *a2)
{
  if (a2 != a1)
  {
    uint64_t v2 = a2;
    do
      std::string::~string(--v2);
    while (v2 != a1);
  }
}

void *sub_2226198E8(void *a1)
{
  uint64_t v2 = (std::string *)sub_2225C3C70((uint64_t)a1);
  unsigned int v3 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_2226198A0(v2, v3);
  if (!sub_2225C603C(a1))
  {
    unint64_t v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_222619940(uint64_t a1)
{
  return sub_22260F450(a1, 0, 0);
}

const void **sub_22261994C(const void **a1, uint64_t a2)
{
  return a1;
}

uint64_t *sub_222619974(uint64_t a1, uint64_t *a2)
{
  unint64_t v6 = 0;
  if (sub_22260FA40(a1, a2, &v6)) {
    return v6;
  }
  char v5 = 0;
  return sub_222611AB8(a1, a2, &v5, v6);
}

uint64_t sub_2226199D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v11[0] = a2;
  v11[1] = a3;
  v10[0] = a4;
  v10[1] = a5;
  sub_2225CCC60((uint64_t)v11, (uint64_t)v10, (uint64_t)v8);
  v9[0] = sub_222619A28(a1, v8);
  v9[1] = v6;
  return sub_2225E4210((uint64_t)v9);
}

uint64_t sub_222619A28(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *a2, a2[1]);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_222619B18(*a2, a2[1], (uint64_t *)(a1 + 24), a2[2], a2[3]);
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_222619B18(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  v15[0] = a1;
  v15[1] = a2;
  uint64_t v8 = sub_2225C3D04((uint64_t)v15);
  unsigned int v9 = sub_2225E58B4();
  uint64_t v10 = sub_2225CC520(a3, (v8 + 25), v9);
  uint64_t v11 = sub_222619BBC(v10, v8, a4, a5);
  BOOL v12 = (void *)sub_2225F315C(v11);
  uint64_t v13 = (const void *)sub_2225C3C70((uint64_t)v15);
  memcpy(v12, v13, v8);
  *((unsigned char *)v12 + v8) = 0;
  return v10;
}

_DWORD *sub_222619BC0(_DWORD *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_2225D0A60(a1, a2);
  *((void *)result + 1) = a3;
  *((void *)result + 2) = a4;
  return result;
}

uint64_t sub_222619BEC(uint64_t a1, int a2)
{
  uint64_t v3 = sub_2225D7CA0(a1, a2, 24);
  sub_2225E0EC4((void *)(v3 + 24));
  return a1;
}

uint64_t sub_222619C20(uint64_t a1)
{
  uint64_t v2 = sub_2225E50F8(a1, 24);
  sub_2225E0EC4((void *)(v2 + 24));
  return a1;
}

uint64_t *sub_222619C54(uint64_t *a1)
{
  return a1;
}

uint64_t sub_222619C7C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_222619C8C();
  }
  return result;
}

void sub_222619C90(_DWORD *a1)
{
  if ((*a1)-- == 1)
  {
    uint64_t v2 = (void *)sub_222619CD0();
    j__free(v2);
  }
}

uint64_t sub_222619CD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_222619D44(uint64_t a1)
{
  sub_2225D2510(a1 + 432);

  return sub_222619D80(a1);
}

uint64_t sub_222619D84(uint64_t a1)
{
  sub_222619DC0(a1 + 408);

  return sub_222617AB0(a1);
}

uint64_t sub_222619DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_222619E00(a1, v3);
  return a1;
}

uint64_t sub_222619E00(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_222619E00(result, *a2);
    sub_222619E00(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = (std::string *)nullsub_1(a2 + 4, v6);
    sub_222619E7C(v5, v7);
    return sub_2225F9C04(v5, a2, 1);
  }
  return result;
}

void sub_222619E7C(int a1, std::string *this)
{
}

uint64_t sub_222619E84(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_222619EC4(&v3);
  return a1;
}

uint64_t *sub_222619EC4(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_222619F3C(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2225F7E58(v6, v8);
    return (uint64_t *)sub_2225F7E54(v5, v7, v9);
  }
  return result;
}

uint64_t sub_222619F3C(uint64_t *a1)
{
  return sub_222619F44((uint64_t)a1, *a1);
}

uint64_t sub_222619F44(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_222619FAC(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 32;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

void sub_222619FB0(int a1, std::string *this)
{
}

uint64_t sub_222619FB8(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_222619FF8(&v3);
  return a1;
}

uint64_t *sub_222619FF8(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_22261A070(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2225F7E58(v6, v8);
    return (uint64_t *)sub_2225F7E54(v5, v7, v9);
  }
  return result;
}

uint64_t sub_22261A070(uint64_t *a1)
{
  return sub_22261A078((uint64_t)a1, *a1);
}

uint64_t sub_22261A078(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = j_nullsub_1(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 32;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_22261A0E0(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_22261A174(v5, a1 + 24);
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  sub_2225E1434(a1 + 24);
  return a1;
}

uint64_t sub_22261A174(unsigned int *a1, uint64_t a2)
{
  sub_2225C3B40(a1);

  return nullsub_1(a2, a1);
}

uint64_t sub_22261A1B8(uint64_t a1)
{
  return a1;
}

void sub_22261A1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_22261A254(v7, v4);
  }
}

void sub_22261A254(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_22261A288(a2);
    j__free(v2);
  }
}

uint64_t sub_22261A28C(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_22261A320(v5, a1 + 24);
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  sub_2225E1434(a1 + 24);
  return a1;
}

uint64_t sub_22261A320(unsigned int *a1, uint64_t a2)
{
  sub_2225C3B40(a1);
  sub_2225F7D50(a1);

  return nullsub_1(a2, a1);
}

uint64_t sub_22261A378(uint64_t a1)
{
  return sub_2226109F8(a1, 4u);
}

uint64_t sub_22261A380(void *a1)
{
  sub_22261A3B8(a1);

  return sub_22261A3FC(a1 + 51);
}

void sub_22261A3B8(void *a1)
{
  uint64_t v2 = (std::string *)sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_2226198A0(v2, v3);
  a1[1] = *a1;
}

void *sub_22261A400(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_222619E00(a1, v3);
  *(void *)sub_2225D2650(a1, v4) = 0;
  uint64_t v6 = sub_2225E1E5C(a1, v5);
  *(void *)nullsub_1(a1, v7) = v6;
  uint64_t result = (void *)sub_2225E1E5C(a1, v8);
  void *result = 0;
  return result;
}

void *sub_22261A460(void *result, uint64_t a2)
{
  void *result = a2;
  result[1] = 1;
  return result;
}

uint64_t sub_22261A470(uint64_t a1, char *a2, char *a3)
{
  uint64_t v6 = (const void **)sub_2225C69CC();
  sub_2225C5A88(v6, a2, a3);
  return a1;
}

void *sub_22261A4B8(uint64_t *a1, unint64_t a2)
{
  if (a2 <= (*(void *)sub_2225D2650((uint64_t)a1, a2) - a1[1]) >> 5)
  {
    return sub_22261A5E8((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
    uint64_t v6 = sub_222616714(a1);
    unint64_t v7 = sub_22261A668(a1, v6 + a2);
    uint64_t v8 = sub_222616714(a1);
    sub_22261A6E4(v10, v7, v8, v5);
    sub_22261A6E8((uint64_t)v10, a2);
    sub_22261A764(a1, v10);
    return (void *)sub_22261A854(v10);
  }
}

uint64_t sub_22261A590(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_222616714(a1);
  sub_22261A078((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

void *sub_22261A5E8(uint64_t a1, uint64_t a2)
{
  sub_22261A858(&v10, a1, a2);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  while (v4 != v5)
  {
    uint64_t v6 = sub_2225D2650(a1, v3);
    uint64_t v8 = nullsub_1(v4, v7);
    sub_22261A85C(v6, v8);
    v4 += 32;
    uint64_t v11 = v4;
  }
  return sub_2225D284C(&v10);
}

unint64_t sub_22261A668(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_22261A8CC((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_2225F7E58(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_22261A6E8(uint64_t a1, uint64_t a2)
{
  sub_22261AA14(&v9, (void *)(a1 + 16), a2);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  while (v3 != v4)
  {
    uint64_t v5 = sub_2225D2B18(a1);
    uint64_t v7 = nullsub_1(v9, v6);
    sub_22261A85C(v5, v7);
    uint64_t v4 = v10;
    uint64_t v3 = v9 + 32;
    v9 += 32;
  }
  return sub_22261AA18((uint64_t)&v9);
}

uint64_t sub_22261A764(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_22261AA44();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  uint64_t v10 = sub_222616714(a1);
  return nullsub_1(a1, v10);
}

void *sub_22261A860(void *result, uint64_t a2, uint64_t a3)
{
  void *result = a2;
  result[1] = *(void *)(a2 + 8);
  result[2] = *(void *)(a2 + 8) + 32 * a3;
  return result;
}

uint64_t sub_22261A87C(uint64_t a1, uint64_t a2)
{
  return sub_22261A884(a2);
}

uint64_t sub_22261A888(uint64_t a1)
{
  *(_DWORD *)a1 = *(_WORD *)a1 & 0xF000;
  *(_DWORD *)(a1 + 4) = 0;
  *(void *)(a1 + 8) = 0;
  sub_2225CCC70((void *)(a1 + 16));
  return a1;
}

uint64_t sub_22261A8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_22261A90C(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_22261A910()
{
  return 0x7FFFFFFFFFFFFFFLL;
}

uint64_t *sub_22261A918(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_22261A9A4(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 32 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 32 * v9;
  return a1;
}

uint64_t sub_22261A9A4(uint64_t a1, unint64_t a2)
{
  return sub_22261A9CC(a1, a2);
}

uint64_t sub_22261A9CC(uint64_t a1, unint64_t a2)
{
  if (sub_22261A90C(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(32 * a2, 8);
}

void *sub_22261AA1C(void *result, void *a2, uint64_t a3)
{
  void *result = *a2;
  result[1] = *a2 + 32 * a3;
  result[2] = a2;
  return result;
}

uint64_t sub_22261AA34(uint64_t result)
{
  **(void **)(result + 16) = *(void *)result;
  return result;
}

uint64_t sub_22261AA44()
{
  return sub_22261AA60();
}

uint64_t sub_22261AA60()
{
  sub_22261AA88(v1);
  return v1[2];
}

uint64_t sub_22261AA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_22261AB60(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_22261AB60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v15[0] = a1;
  v15[1] = a2;
  v14[0] = a3;
  v14[1] = a4;
  v13[0] = a5;
  v13[1] = a6;
  while (sub_2225D2CC0((uint64_t)v15, (uint64_t)v14))
  {
    uint64_t v9 = (_OWORD *)sub_22261ABF0((uint64_t)v15, v8);
    uint64_t v10 = (_OWORD *)sub_22261AC28((uint64_t)v13);
    long long v11 = v9[1];
    _OWORD *v10 = *v9;
    v10[1] = v11;
    sub_22261AC34((uint64_t)v15);
    sub_22261AC34((uint64_t)v13);
  }
  return sub_2225CCC60((uint64_t)v15, (uint64_t)v13, a7);
}

uint64_t sub_22261ABF0(uint64_t a1, uint64_t a2)
{
  nullsub_1(a1, a2);

  return sub_22261AC28(a1);
}

uint64_t sub_22261AC28(uint64_t a1)
{
  return *(void *)(a1 + 8) - 32;
}

uint64_t sub_22261AC34(uint64_t result)
{
  *(void *)(result + 8) -= 32;
  return result;
}

uint64_t *sub_22261AC44(uint64_t *a1)
{
  sub_22261ACA4((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_22261ACAC(a1, v4);
    sub_2225F7E54(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_22261ACA4(uint64_t a1)
{
  return sub_22261ACE0(a1, *(void *)(a1 + 8));
}

uint64_t sub_22261ACAC(void *a1, uint64_t a2)
{
  return (uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 5;
}

uint64_t sub_22261ACE4(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 32;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = j_nullsub_1(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_22261AD50(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  v10[0] = a2;
  v10[1] = a3;
  char v9 = a4;
  sub_2226139D0((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_22261ADA8(a1, (uint64_t)v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_22261ADA8(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *(void *)a2, *(void *)(a2 + 8));
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_22261AE98(*(void *)a2, *(void *)(a2 + 8), (uint64_t *)(a1 + 24), *(char *)(a2 + 16));
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_22261AE98(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v13);
  unsigned int v7 = sub_2225DABE8();
  uint64_t v8 = sub_2225CC520(a3, (v6 + 9), v7);
  uint64_t v9 = sub_222613A74(v8, v6, a4);
  char v10 = (void *)sub_2225E563C(v9);
  long long v11 = (const void *)sub_2225C3C70((uint64_t)v13);
  memcpy(v10, v11, v6);
  *((unsigned char *)v10 + v6) = 0;
  return v8;
}

uint64_t sub_22261AF2C(uint64_t a1)
{
  if (sub_22261BB18(a1)) {
    return 0;
  }
  else {
    return *(void *)(a1 + 8);
  }
}

double sub_22261AF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a1 + 392) = a3;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = a4;
  if (a2 == a3)
  {
    sub_2225C3D0C(v10, a2, a4 - a2);
    sub_2225D934C(v9, v10[0], v10[1]);
    uint64_t v8 = 3;
    uint64_t v5 = sub_2225DB64C((uint64_t)v9, (unsigned __int16 *)"﻿", (uint64_t)&v8);
    uint64_t v7 = 0;
    *(void *)(a1 + 392) += sub_2225DAD80(v5, (uint64_t)&v7);
  }
  *(_WORD *)(a1 + 384) = 0;
  *(_DWORD *)(a1 + 404) = 0;
  *(void *)&double result = 257;
  *(_DWORD *)(a1 + 400) = 257;
  *(_WORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 26) = 0;
  return result;
}

uint64_t sub_22261B004(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  *(void *)sub_22264A9A8(a1, a4, a2) = &unk_26D4DC0F8;
  uint64_t v8 = sub_2225E8DD0(a4);
  *(_DWORD *)(a1 + 136) = sub_22260DA24(v8, a2);
  uint64_t v9 = sub_222608330(a4);
  sub_22261B0CC(a1 + 144, v9);
  uint64_t v10 = sub_2225C3D04(a3);
  uint64_t v11 = sub_2225C3D04(a3);
  uint64_t v12 = sub_2225C5B40(a3);
  sub_22261AF64(a1, v10, v11, v12);
  sub_22261B0D0(a1);
  return a1;
}

uint64_t sub_22261B0D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 148) & 0x80) != 0)
  {
    return sub_22261B144(a1, 1);
  }
  else
  {
    char v2 = sub_22261B160(*(void *)(a1 + 8));
    return sub_22261B158(a1, v2);
  }
}

uint64_t sub_22261B13C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  return sub_22261B004(a1, a2, a3, a4);
}

uint64_t sub_22261B144(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 2;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 385) = v2;
  return result;
}

uint64_t sub_22261B158(uint64_t result, char a2)
{
  *(unsigned char *)(result + 385) = a2;
  return result;
}

uint64_t sub_22261B160(uint64_t a1)
{
  return *(_WORD *)(a1 + 436) & 1;
}

uint64_t sub_22261B16C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_22261B200(a1);
  *(void *)uint64_t v12 = &unk_26D4DC0F8;
  *(_DWORD *)(v12 + 136) = a2;
  sub_22261B0CC(v12 + 144, a3);
  sub_22261AF64(a1, a4, a5, a6);
  *(unsigned char *)(a1 + 26) = 1;
  return a1;
}

uint64_t sub_22261B200(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DC4B8;
  *(void *)(a1 + 8) = 0;
  sub_2225F3278((_DWORD *)(a1 + 16));
  *(_DWORD *)(a1 + 23) = 0;
  *(_DWORD *)(a1 + 20) = 0;
  sub_22262201C(a1 + 32);
  sub_2225D3DAC(a1 + 64);
  return a1;
}

uint64_t sub_22261B25C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_22261B16C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22261B264(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)sub_22261B200(a1) = &unk_26D4DC0F8;
  *(_DWORD *)(a1 + 136) = sub_22260DA24(a4, a2);
  sub_22261B0CC(a1 + 144, a5);
  uint64_t v10 = sub_2225C3D04(a3);
  uint64_t v11 = sub_2225C3D04(a3);
  uint64_t v12 = sub_2225C5B40(a3);
  sub_22261AF64(a1, v10, v11, v12);
  *(unsigned char *)(a1 + 26) = 1;
  return a1;
}

uint64_t sub_22261B320(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22261B264(a1, a2, a3, a4, a5);
}

uint64_t sub_22261B328(int a1, unsigned int a2, unsigned int a3, unsigned int a4, uint64_t a5)
{
  uint64_t v10 = (_DWORD *)sub_2225E8DD0(a5);
  unsigned int v11 = sub_222609AF8(v10, a1);
  uint64_t v12 = sub_222609B70((uint64_t)v10, v11, 0);
  uint64_t v13 = sub_2225C26A4(408);
  sub_22261B13C(v13, v11, v12, a5);
  uint64_t v14 = sub_22260CE08((uint64_t)v10, a1, 0);
  *(void *)(v13 + 392) = v14;
  *(void *)(v13 + 128) = &v14[a4];
  unsigned int v15 = sub_22260DA24((uint64_t)v10, v11);
  *(_DWORD *)(v13 + 136) = sub_22260B3EC((uint64_t)v10, v15, a2, a3, a4, 0, 0);
  *(unsigned char *)(v13 + 24) = 1;
  *(unsigned char *)(v13 + 384) = 1;
  return v13;
}

char *sub_22261B420@<X0>(std::string *__str@<X0>, int a2@<W1>, std::string *a3@<X8>)
{
  std::string::basic_string(a3, __str);
  double result = (char *)sub_2225CB920((uint64_t)a3, v5);
  int v7 = (int)result;
  if (result)
  {
    unsigned int v8 = 0;
    if (a2) {
      int v9 = 39;
    }
    else {
      int v9 = 34;
    }
    do
    {
      if (*(unsigned char *)sub_2225CB8F8((uint64_t)a3, v8) == 92
        || (double result = (char *)sub_2225CB8F8((uint64_t)a3, v8), v9 == *result))
      {
        uint64_t v12 = sub_2225CFC64((uint64_t)a3, v10);
        uint64_t v13 = sub_2225D577C(&v12, v8);
        sub_2225D24D0(&__pos, &v13);
        v11.__i_ = __pos.__i_;
        double result = std::string::insert(a3, v11, 92).__i_;
        ++v8;
        ++v7;
      }
      ++v8;
    }
    while (v8 != v7);
  }
  return result;
}

unsigned char *sub_22261B50C(uint64_t a1)
{
  double result = (unsigned char *)sub_2225C5664(a1);
  int v3 = (int)result;
  if (result)
  {
    unsigned int v4 = 0;
    do
    {
      if (*(unsigned char *)sub_2225C5698(a1, v4) == 92 || (double result = (unsigned char *)sub_2225C5698(a1, v4), *result == 34))
      {
        uint64_t v5 = sub_2225C3C70(a1);
        char v6 = 92;
        double result = (unsigned char *)sub_22261B5B0(a1, (unsigned char *)(v5 + v4++), &v6);
        ++v3;
      }
      ++v4;
    }
    while (v4 != v3);
  }
  return result;
}

uint64_t sub_22261B5B0(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  unsigned int v4 = a2;
  if ((unsigned char *)sub_2225C3D04(a1) == a2)
  {
    sub_2225C52D8(a1, a3);
    return sub_2225C3D04(a1) - 1;
  }
  else
  {
    if (*(void *)(a1 + 8) >= *(void *)(a1 + 16))
    {
      char v6 = &v4[-sub_2225C3C70(a1)];
      sub_2225C5B48((const void **)a1, 0);
      unsigned int v4 = &v6[sub_2225C3C70(a1)];
    }
    int v7 = (unsigned char *)sub_2225C3D04(a1);
    *int v7 = *(unsigned char *)sub_22261791C(a1);
    sub_2225C3D04(a1);
    sub_2225C3D04(a1);
    sub_2225E2BB4();
    uint64_t v8 = sub_2225C3D04(a1);
    sub_2225C5B6C(a1, v8 + 1);
    if (v4 <= a3 && *(void *)(a1 + 8) > (unint64_t)a3) {
      ++a3;
    }
    *unsigned int v4 = *a3;
  }
  return (uint64_t)v4;
}

BOOL sub_22261B6B0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 392) == *(void *)(a1 + 128);
}

unint64_t sub_22261B6E4(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  unsigned int v8 = sub_222613380(a1);
  int v9 = &a2[v8];
  if (sub_22261BABC(a1, 13))
  {
    unint64_t v10 = 0;
    uint64_t v11 = v8;
    uint64_t v12 = a2;
    while (v12 < v9)
    {
      unsigned int v23 = 0;
      int v13 = sub_22261C0FC(v12, (int *)&v23, a3);
      unint64_t v14 = v10 + 1;
      *(unsigned char *)(a4 + v10) = v13;
      v12 += v23;
      ++v10;
      if (v13 == 34) {
        goto LABEL_8;
      }
    }
    unint64_t v14 = v10;
LABEL_8:
    if (v14 >= 2 && *(unsigned char *)(v14 + a4 - 2) == 82 && *(unsigned char *)(v14 + a4 - 1) == 34)
    {
      unsigned int v15 = a2 + 1;
      int64_t v16 = a2 + 1 - v12;
      uint64_t v17 = &a2[v14] - v12 + 1;
      uint64_t v18 = a2 - 1;
      do
      {
        int v19 = v18[v11];
        --v16;
        --v17;
        --v15;
        --v18;
      }
      while (v19 != 34);
      memcpy((void *)(a4 + v14), v12, v11 + v16);
      unint64_t v14 = v11 + v17;
      a2 = &v15[v11];
    }
    else
    {
      a2 = v12;
    }
  }
  else
  {
    unint64_t v14 = 0;
  }
  if (a2 >= v9) {
    return v14;
  }
  do
  {
    unsigned int v22 = 0;
    char v20 = sub_22261C0FC(a2, (int *)&v22, a3);
    unint64_t result = v14 + 1;
    *(unsigned char *)(a4 + v14) = v20;
    a2 += v22;
    ++v14;
  }
  while (a2 < v9);
  return result;
}

void sub_22261B868(unsigned int *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned __int8 *a4@<X3>, std::string *a5@<X8>)
{
  unsigned __int8 v19 = 0;
  int v10 = sub_2225C3B40(a1);
  uint64_t v11 = (unsigned __int8 *)sub_22260CE08(a2, v10, &v19);
  int v12 = v19;
  if (a4) {
    *a4 = v19;
  }
  if (v12)
  {
    sub_2225CAD04(a5);
  }
  else if (sub_2225C3AB8((uint64_t)a1))
  {
    sub_2225CAD04(a5);
    unsigned int v13 = sub_222613380((uint64_t)a1);
    sub_2225CB8F0(a5, v13);
    uint64_t v18 = sub_2225CFC64((uint64_t)a5, v14);
    uint64_t v15 = sub_2225C3C70((uint64_t)&v18);
    std::string::size_type v16 = sub_22261B6E4((uint64_t)a1, v11, a3, v15);
    sub_2225CB8F0(a5, v16);
  }
  else
  {
    int v17 = sub_222613380((uint64_t)a1);
    sub_2225D1DD8(a5, v11, &v11[v17]);
  }
}

unint64_t sub_22261B960(unsigned int *a1, uint64_t *a2, uint64_t a3, void *a4, unsigned char *a5)
{
  if (sub_22261BABC((uint64_t)a1, 7))
  {
    v16[0] = sub_22261BACC((uint64_t)a1);
    v16[1] = v10;
    uint64_t v11 = (unsigned __int8 *)sub_2225C3C70((uint64_t)v16);
LABEL_9:
    if (sub_22261BB18((uint64_t)a1)) {
      uint64_t v11 = (unsigned __int8 *)sub_2225C3D04((uint64_t)a1);
    }
    if (v11) {
      goto LABEL_12;
    }
    LOBYTE(v16[0]) = 0;
    int v14 = sub_2225C3B40(a1);
    uint64_t v11 = (unsigned __int8 *)sub_22260CE08(a3, v14, v16);
    int v15 = LOBYTE(v16[0]);
    if (a5) {
      *a5 = v16[0];
    }
    if (!v15)
    {
LABEL_12:
      if (sub_2225C3AB8((uint64_t)a1))
      {
        return sub_22261B6E4((uint64_t)a1, v11, a4, *a2);
      }
      else
      {
        *a2 = (uint64_t)v11;
        return sub_222613380((uint64_t)a1);
      }
    }
    else
    {
      unint64_t result = 0;
      *a2 = (uint64_t)&byte_2226D1615;
    }
    return result;
  }
  if (sub_22261BB0C((uint64_t)a1))
  {
    uint64_t v11 = 0;
    goto LABEL_9;
  }
  uint64_t v12 = sub_22261AF2C((uint64_t)a1);
  uint64_t v11 = (unsigned __int8 *)v12;
  if (!v12) {
    goto LABEL_9;
  }
  *a2 = sub_2225F2DB8(v12);

  return sub_2225F2DD0((uint64_t)v11);
}

BOOL sub_22261BABC(uint64_t a1, int a2)
{
  return *(unsigned __int16 *)(a1 + 16) == a2;
}

uint64_t sub_22261BACC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unsigned int v2 = sub_222613380(a1);
  sub_2225C3D0C(&v4, v1, v2);
  return v4;
}

uint64_t sub_22261BB0C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 18) >> 6) & 1;
}

uint64_t sub_22261BB18(uint64_t a1)
{
  unsigned int v1 = sub_22261BFB4(a1);

  return sub_22262215C(v1);
}

uint64_t sub_22261BB40(unsigned int a1, _DWORD *a2, uint64_t a3)
{
  sub_22261B6AC(v8);
  char v6 = sub_22261BBAC(a1, (uint64_t)v8, a2, a3, 0);
  uint64_t result = 0;
  if ((v6 & 1) == 0) {
    return sub_222613380((uint64_t)v8);
  }
  return result;
}

uint64_t sub_22261BBAC(unsigned int a1, uint64_t a2, _DWORD *a3, uint64_t a4, char a5)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  int v9 = sub_2225F757C(a3, a1);
  unint64_t v10 = sub_222609C14(a3, v9);
  unsigned __int8 v19 = 0;
  unsigned int v11 = v10;
  v18[0] = sub_22260C090((uint64_t)a3, v10, &v19);
  v18[1] = v12;
  if (v19) {
    return 1;
  }
  int v14 = (unsigned __int8 *)(sub_2225C3C70((uint64_t)v18) + HIDWORD(v10));
  if ((a5 & 1) == 0 && sub_22261BCEC(*v14)) {
    return 1;
  }
  int v15 = sub_22260DA24((uint64_t)a3, v11);
  uint64_t v16 = sub_2225C3C70((uint64_t)v18);
  uint64_t v17 = sub_2225C3C78(v18);
  sub_22261B25C((uint64_t)v20, v15, a4, v16, (uint64_t)v14, v17);
  sub_22261B158((uint64_t)v20, 1);
  sub_22261B6B0((uint64_t)v20, a2);
  sub_22261B864(v20);
  return 0;
}

BOOL sub_22261BCEC(int a1)
{
  return (word_2226CBA58[a1] & 7) != 0;
}

uint64_t sub_22261BD04(unsigned int a1, _DWORD *a2, uint64_t a3)
{
  unsigned int v13 = a1;
  if (sub_2225F7FD8(&v13)) {
    return sub_22261BDC4(v13, a2, a3);
  }
  int v6 = sub_22260C6E8(a2, v13);
  uint64_t v7 = v13;
  if (v6)
  {
    unsigned int v8 = sub_222609A80(a2, v13);
    int v9 = sub_22261BDC4(v8, a2, a3);
    unint64_t v10 = (unint64_t)sub_222609C14(a2, v8) >> 32;
    uint64_t v11 = sub_222609C14(a2, v9);
    return sub_22260C644(&v13, HIDWORD(v11) - (int)v10);
  }
  return v7;
}

uint64_t sub_22261BDC4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v25 = *MEMORY[0x263EF8340];
  unsigned int v23 = a1;
  uint64_t v22 = sub_222609C14(a2, a1);
  if (!sub_2225F38E8(&v22))
  {
    unsigned __int8 v21 = 0;
    v20[0] = sub_22260C090((uint64_t)a2, v22, &v21);
    v20[1] = v6;
    if (!v21)
    {
      uint64_t v7 = sub_2225C3C70((uint64_t)v20);
      unint64_t v8 = HIDWORD(v22);
      if (sub_2225C3D04((uint64_t)v20) > v8)
      {
        int v9 = (unsigned __int8 *)(v7 + HIDWORD(v22));
        int v10 = *v9;
        if (v10 != 10 && v10 != 13)
        {
          if (HIDWORD(v22))
          {
            for (uint64_t i = HIDWORD(v22); ; --i)
            {
              if (v10 == 13 || v10 == 10)
              {
                uint64_t v14 = v7 + i + 1;
                goto LABEL_19;
              }
              if (i == 1) {
                break;
              }
              LOBYTE(v10) = *(unsigned char *)(v7 + i - 1);
            }
            uint64_t v14 = v7;
          }
          else
          {
            uint64_t v14 = v7;
          }
LABEL_19:
          int v15 = sub_22260C644(&v23, -HIDWORD(v22));
          uint64_t v16 = sub_2225C3C78(v20);
          sub_22261B25C((uint64_t)v24, v15, a3, v7, v14, v16);
          sub_22261B158((uint64_t)v24, 1);
          sub_22261B6AC(v19);
          while (1)
          {
            sub_22261B6B0((uint64_t)v24, (uint64_t)v19);
            if (sub_2226221BC((uint64_t)v24) > (unint64_t)v9) {
              break;
            }
            if (sub_22261BFB4((uint64_t)v19) == 1) {
              goto LABEL_24;
            }
          }
          uint64_t v17 = sub_2226221BC((uint64_t)v24);
          if (v17 - (unint64_t)sub_222613380((uint64_t)v19) > (unint64_t)v9)
          {
LABEL_24:
            uint64_t v5 = v23;
            goto LABEL_26;
          }
          uint64_t v5 = sub_2225C3B40(v19);
LABEL_26:
          sub_22261B864(v24);
        }
      }
    }
  }
  return v5;
}

uint64_t sub_22261BFA8(uint64_t a1)
{
  return sub_22261C94C(a1, *(void *)(a1 + 392), 1);
}

uint64_t sub_22261BFB4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 16);
}

uint64_t sub_22261BFBC(uint64_t a1)
{
  return *(unsigned char *)(a1 + 18) & 1;
}

uint64_t sub_22261BFC8(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a1;
  int v14 = a1;
  char v13 = 0;
  uint64_t v7 = sub_22260CE08(a3, a1, &v13);
  if (!v13)
  {
    unint64_t v8 = (unsigned __int8 *)v7;
    if (a2 || !sub_22261C0E8(*v7))
    {
      if (sub_22261C0E8((char)*v8))
      {
        uint64_t v9 = 0;
        do
        {
          if (a2 == v9)
          {
            LODWORD(v9) = a2;
            return sub_22260C644(&v14, v9);
          }
        }
        while (sub_22261C0E8((char)v8[++v9]));
        v8 += v9;
        a2 -= v9;
        if (a2) {
          goto LABEL_11;
        }
      }
      else
      {
        for (LODWORD(v9) = 0; a2; --a2)
        {
LABEL_11:
          unsigned int v12 = 0;
          sub_22261C0FC(v8, (int *)&v12, a4);
          v8 += v12;
          LODWORD(v9) = v12 + v9;
        }
      }
      if (!sub_22261C0E8((char)*v8)) {
        LODWORD(v9) = v9 + sub_22261C174(v8) - v8;
      }
      return sub_22260C644(&v14, v9);
    }
  }
  return v6;
}

BOOL sub_22261C0E8(int a1)
{
  return a1 != 63 && a1 != 92;
}

uint64_t sub_22261C0FC(unsigned __int8 *a1, int *a2, void *a3)
{
  if (sub_22261C0E8((char)*a1))
  {
    *a2 = 1;
    return (char)*a1;
  }
  else
  {
    *a2 = 0;
    return sub_22261CDD4(a1, a2, a3);
  }
}

unsigned __int8 *sub_22261C174(unsigned __int8 *a1)
{
  do
  {
    unsigned int v1 = a1;
    int v2 = *a1;
    if (v2 == 92)
    {
      uint64_t v3 = 1;
      goto LABEL_7;
    }
    if (v2 != 63 || a1[1] != 63 || a1[2] != 47) {
      break;
    }
    uint64_t v3 = 3;
LABEL_7:
    uint64_t v4 = &a1[v3];
    int v5 = sub_22261CAC8((uint64_t)&a1[v3]);
    a1 = &v4[v5];
  }
  while (v5);
  return v1;
}

uint64_t sub_22261C1E8(unsigned int a1, unsigned int a2, _DWORD *a3, uint64_t a4)
{
  int v10 = a1;
  if (sub_2225F38E8(&v10)
    || sub_2226074FC(&v10) && (a2 || (sub_22261C294(v10, a3, a4, (unsigned int *)&v10) & 1) == 0))
  {
    sub_2225F3278(&v11);
  }
  else
  {
    unsigned int v7 = sub_22261BB40(v10, a3, a4);
    if (v7 <= a2) {
      return v10;
    }
    else {
      return sub_22260C644(&v10, v7 - a2);
    }
  }
  return v11;
}

uint64_t sub_22261C294(unsigned int a1, _DWORD *a2, uint64_t a3, unsigned int *a4)
{
  unsigned int v11 = a1;
  unsigned int v7 = sub_222609A80(a2, a1);
  uint64_t result = sub_22261BB40(v7, a2, a3);
  if (result)
  {
    int v9 = sub_22260C644(&v11, result);
    sub_2225F3278(&v10);
    uint64_t result = sub_22260CBFC(a2, v9, &v10);
    if (result)
    {
      if (sub_2225F7FD8(&v10))
      {
        if (a4) {
          *a4 = v10;
        }
        return 1;
      }
      else
      {
        return sub_22261C294(v10, a2, a3, a4);
      }
    }
  }
  return result;
}

uint64_t sub_22261C350(int a1, _DWORD *a2, uint64_t a3, unsigned int *a4)
{
  sub_2225F3278(&v9);
  uint64_t result = sub_22260CAC0(a2, a1, &v9);
  if (result)
  {
    if (sub_2225F7FD8(&v9))
    {
      if (a4) {
        *a4 = v9;
      }
      return 1;
    }
    else
    {
      return sub_22261C350(v9, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_22261C3DC(uint64_t a1, unsigned int a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v29 = a1;
  unsigned int v30 = a2;
  unsigned int v28 = sub_22261C6A4((unsigned int *)&v29);
  unsigned int v27 = sub_222613088(&v29);
  if (sub_2225F38E8(&v28) || sub_2225F38E8(&v27)) {
    goto LABEL_3;
  }
  if (sub_2225F7FD8(&v28) && sub_2225F7FD8(&v27)) {
    goto LABEL_25;
  }
  if (!sub_2226074FC(&v28) || !sub_2225F7FD8(&v27))
  {
    if (sub_2225F7FD8(&v28) && sub_2226074FC(&v27))
    {
      if (sub_22261C7D4((uint64_t)&v29) && !sub_22261C294(v27, a3, a4, &v27)
        || sub_22261C7DC((uint64_t)&v29) && (sub_22261C350(v27, a3, a4, &v27) & 1) == 0)
      {
        goto LABEL_3;
      }
      int v7 = v27;
    }
    else
    {
      sub_2225F3278(&v26);
      sub_2225F3278(&v25);
      if (!sub_22261C350(v28, a3, a4, (unsigned int *)&v26)
        || (!sub_22261C7D4((uint64_t)&v29) || (sub_22261C294(v27, a3, a4, (unsigned int *)&v25) & 1) == 0)
        && (!sub_22261C7DC((uint64_t)&v29) || !sub_22261C350(v27, a3, a4, (unsigned int *)&v25)))
      {
        char v24 = 0;
        unsigned int v10 = sub_222609AF8(a3, v28);
        uint64_t v11 = sub_222609DB4((uint64_t)a3, v10, &v24);
        if (!v24)
        {
          uint64_t v12 = v11;
          uint64_t v13 = sub_2225E563C(v11);
          if (sub_22260CA70(v13))
          {
            unsigned int v14 = sub_222609AF8(a3, v27);
            uint64_t v15 = sub_222609DB4((uint64_t)a3, v14, &v24);
            if (!v24)
            {
              uint64_t v16 = v15;
              uint64_t v17 = sub_2225E563C(v15);
              if (sub_22260CA70(v17))
              {
                uint64_t v18 = sub_2225E563C(v12);
                unsigned int v23 = sub_22260C5BC(v18);
                uint64_t v19 = sub_2225E563C(v16);
                unsigned int v22 = sub_22260C5BC(v19);
                if (sub_22260CBC4(&v23, &v22))
                {
                  int v20 = sub_22260C744(a3, v28);
                  sub_22261C7CC(&v29, v20);
                  int v21 = sub_22260C744(a3, v27);
                  sub_22261C7EC((uint64_t)&v29, v21);
                  uint64_t v8 = sub_22261C3DC(v29, v30, a3, a4);
                  goto LABEL_26;
                }
              }
            }
          }
        }
        goto LABEL_3;
      }
      sub_22261C7CC(&v29, v26);
      int v7 = v25;
    }
    sub_22261C7EC((uint64_t)&v29, v7);
    goto LABEL_25;
  }
  if (sub_22261C350(v28, a3, a4, &v28))
  {
    sub_22261C7CC(&v29, v28);
LABEL_25:
    uint64_t v8 = sub_22261C6AC(v29, v30, a3, a4);
LABEL_26:
    uint64_t v31 = v8;
    int v32 = v9;
    return v31;
  }
LABEL_3:
  sub_22261C6A8();
  return v31;
}

uint64_t sub_22261C6AC(uint64_t a1, int a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v16 = a1;
  int v17 = a2;
  int v6 = sub_22261C6A4((unsigned int *)&v16);
  unsigned int v7 = sub_222613088(&v16);
  int v15 = v7;
  if (sub_22261C7D4((uint64_t)&v16))
  {
    int v15 = sub_22261C1E8(v7, 0, a3, a4);
    if (sub_2225F38E8(&v15)) {
      goto LABEL_6;
    }
  }
  sub_2225F3278(&v14);
  unsigned int v13 = 0;
  uint64_t v12 = sub_222609C14(a3, v6);
  v11[0] = sub_22260E394((uint64_t)&v14, (uint64_t)&v13);
  v11[1] = v8;
  sub_22260E3C4((uint64_t)v11, &v12);
  if (sub_2225F38E8(&v14) || (LODWORD(v11[0]) = 0, !sub_22260CD28((uint64_t)a3, v15, v14, v11)) || v13 > LODWORD(v11[0]))
  {
LABEL_6:
    sub_22261C6A8();
  }
  else
  {
    uint64_t v18 = sub_222622214(v6, v15);
    int v19 = v10;
  }
  return v18;
}

_DWORD *sub_22261C7CC(_DWORD *a1, int a2)
{
  return sub_2225D0A60(a1, a2);
}

uint64_t sub_22261C7D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

BOOL sub_22261C7DC(uint64_t a1)
{
  return *(unsigned char *)(a1 + 8) == 0;
}

uint64_t sub_22261C7EC(uint64_t a1, int a2)
{
  return sub_222612BA8(a1, a2);
}

uint64_t sub_22261C7F4(uint64_t a1, unsigned int a2, _DWORD *a3, uint64_t a4, unsigned char *a5)
{
  unsigned int v18 = a2;
  uint64_t v17 = sub_22261C3DC(a1, a2, a3, a4);
  LOBYTE(v18) = v7;
  if (sub_22261C8F4()
    || (v8 = sub_22261C6A4((unsigned int *)&v17), uint64_t v16 = sub_222609C14(a3, v8), sub_2225F38E8(&v16))
    || (v15 = 0, int v9 = sub_222613088(&v17), !sub_22260CD28((uint64_t)a3, v9, v16, &v15))
    || HIDWORD(v16) > v15
    || (unsigned __int8 v14 = 0, v13[0] = sub_22260C090((uint64_t)a3, v16, &v14), v13[1] = v10, v14))
  {
    if (a5) {
      *a5 = 1;
    }
    sub_2225CCC70(v19);
  }
  else
  {
    if (a5) {
      *a5 = 0;
    }
    v19[0] = sub_2225CE76C(v13, HIDWORD(v16), v15 - HIDWORD(v16));
    v19[1] = v12;
  }
  return v19[0];
}

uint64_t sub_22261C8F4()
{
  return sub_222622284() ^ 1;
}

uint64_t sub_22261C910(unsigned __int8 a1, void *a2)
{
  return sub_22261C920(a1, (*a2 >> 21) & 1);
}

uint64_t sub_22261C920(int a1, unsigned int a2)
{
  if ((word_2226CBA58[a1] & 0xE8) != 0) {
    return 1;
  }
  if (a1 == 36) {
    return a2;
  }
  return 0;
}

uint64_t sub_22261C94C(uint64_t a1, int a2, int a3)
{
  int v5 = a2 - *(_DWORD *)(a1 + 120);
  int v6 = (_DWORD *)(a1 + 136);
  if (sub_2225F7FD8((_DWORD *)(a1 + 136)))
  {
    return sub_22260C644(v6, v5);
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 8);
    unsigned int v9 = *(_DWORD *)(a1 + 136);
    return sub_22261C9D8(v8, v9, v5, a3);
  }
}

uint64_t sub_22261C9D8(uint64_t a1, unsigned int a2, int a3, int a4)
{
  char v7 = (_DWORD *)sub_2225E8DD0(a1);
  unsigned int v10 = sub_222609A80(v7, a2);
  unsigned int v10 = sub_22260C644(&v10, a3);
  uint64_t v8 = sub_22260C7BC(v7, a2);
  return sub_22260B3EC((uint64_t)v7, v10, v8, HIDWORD(v8), a4, 0, 0);
}

uint64_t sub_22261CA64@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unsigned int v7 = sub_22261C94C(a1, a2, 1);

  return sub_22261CABC(v6, v7, a3, a4);
}

uint64_t sub_22261CABC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  return sub_2225F52C4(*(void *)(a1 + 16), a2, a3, a4);
}

uint64_t sub_22261CAC8(uint64_t a1)
{
  unsigned int v2 = 1;
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a1 + v2 - 1);
    uint64_t result = sub_22261BCEC(v3);
    if (!result) {
      break;
    }
    ++v2;
    if (v3 == 13 || v3 == 10)
    {
      uint64_t result = v2 - 1;
      int v6 = *(unsigned __int8 *)(a1 + result);
      if (v6 == 10 || v6 == 13)
      {
        if (v3 == v6) {
          return result;
        }
        else {
          return v2;
        }
      }
      return result;
    }
  }
  return result;
}

BOOL sub_22261CB34(uint64_t a1, int a2)
{
  return *(unsigned __int16 *)(a1 + 16) != a2;
}

BOOL sub_22261CB44(int a1)
{
  return (word_2226CBA58[a1] & 5) != 0;
}

uint64_t sub_22261CB60(uint64_t a1, unsigned __int8 *a2, _DWORD *a3, uint64_t a4)
{
  int v8 = *a2;
  if (v8 != 63)
  {
    if (v8 == 92)
    {
      ++*a3;
      unsigned int v9 = a2 + 1;
LABEL_4:
      if (sub_22261BCEC(*v9) && (int v10 = sub_22261CAC8((uint64_t)v9)) != 0)
      {
        int v11 = v10;
        if (a4)
        {
          sub_22261CCEC(a4, 8);
          int v12 = *v9;
          if (v12 != 10 && v12 != 13 && (sub_22261CCFC(a1) & 1) == 0)
          {
            sub_22261CA64(a1, (int)v9, 621, (uint64_t)v22);
            sub_2225F37F0(v22);
          }
        }
        *a3 += v11;
        unsigned int v13 = v9[v11];
        BOOL v14 = v13 > 0xD;
        int v15 = (1 << v13) & 0x2401;
        if (v14 || v15 == 0) {
          LOBYTE(v17) = sub_22261CB60(a1);
        }
        else {
          LOBYTE(v17) = 32;
        }
      }
      else
      {
        LOBYTE(v17) = 92;
      }
      return (char)v17;
    }
LABEL_25:
    ++*a3;
    LOBYTE(v17) = *a2;
    return (char)v17;
  }
  if (a2[1] != 63) {
    goto LABEL_25;
  }
  unsigned int v18 = (char *)(a2 + 2);
  uint64_t v19 = a4 ? a1 : 0;
  int v20 = sub_22261CD04(v18, v19);
  if (!v20) {
    goto LABEL_25;
  }
  int v17 = v20;
  if (a4) {
    sub_22261CCEC(a4, 8);
  }
  *a3 += 3;
  if (v17 == 92)
  {
    unsigned int v9 = a2 + 3;
    goto LABEL_4;
  }
  return (char)v17;
}

uint64_t sub_22261CCEC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 18) |= a2;
  return result;
}

uint64_t sub_22261CCFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 26);
}

uint64_t sub_22261CD04(char *a1, uint64_t a2)
{
  int v3 = (int)a1;
  int v4 = sub_22261CED8(*a1);
  char v5 = v4;
  char v12 = v4;
  if (a2 && v4)
  {
    uint64_t v6 = *(void *)sub_22261E040(a2);
    char v7 = sub_22261CCFC(a2);
    if ((v6 & 0x10000) != 0)
    {
      if ((v7 & 1) == 0)
      {
        sub_22261CA64(a2, v3 - 2, 849, (uint64_t)v10);
        sub_2225C3D0C(v9, &v12, 1);
        sub_2225F3774(v10, v9[0], v9[1]);
        sub_2225F37F0(v10);
        return v12;
      }
    }
    else
    {
      if ((v7 & 1) == 0)
      {
        sub_22261CA64(a2, v3 - 2, 851, (uint64_t)v11);
        sub_2225F37F0(v11);
      }
      return 0;
    }
  }
  return v5;
}

uint64_t sub_22261CDD4(unsigned __int8 *a1, int *a2, void *a3)
{
  while (1)
  {
    int v6 = *a1;
    if (v6 == 92)
    {
      int v7 = *a2 + 1;
      *a2 = v7;
      int v8 = a1 + 1;
      goto LABEL_11;
    }
    if (v6 != 63 || (*a3 & 0x10000) == 0) {
      break;
    }
    if (a1[1] != 63) {
      break;
    }
    int v10 = sub_22261CED8((char)a1[2]);
    if (!v10) {
      break;
    }
    int v7 = *a2 + 3;
    *a2 = v7;
    if (v10 != 92) {
      return (char)v10;
    }
    int v8 = a1 + 3;
LABEL_11:
    if (!sub_22261BCEC(*v8) || (int v11 = sub_22261CAC8((uint64_t)v8)) == 0)
    {
      LOBYTE(v10) = 92;
      return (char)v10;
    }
    *a2 = v7 + v11;
    a1 = &v8[v11];
    unsigned int v12 = *a1;
    BOOL v13 = v12 > 0xD;
    int v14 = (1 << v12) & 0x2401;
    if (!v13 && v14 != 0)
    {
      LOBYTE(v10) = 32;
      return (char)v10;
    }
  }
  ++*a2;
  LOBYTE(v10) = *a1;
  return (char)v10;
}

uint64_t sub_22261CED8(int a1)
{
  uint64_t result = 0;
  if (a1 > 59)
  {
    if (a1 == 61) {
      int v3 = 35;
    }
    else {
      int v3 = 0;
    }
    if (a1 == 62) {
      unsigned int v4 = 125;
    }
    else {
      unsigned int v4 = v3;
    }
    if (a1 == 60) {
      return 123;
    }
    else {
      return v4;
    }
  }
  else
  {
    switch(a1)
    {
      case '!':
        uint64_t result = 124;
        break;
      case '\'':
        uint64_t result = 94;
        break;
      case '(':
        uint64_t result = 91;
        break;
      case ')':
        uint64_t result = 93;
        break;
      case '-':
        uint64_t result = 126;
        break;
      case '/':
        uint64_t result = 92;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_22261CFA8(uint64_t result, unsigned int a2, char a3)
{
  unint64_t v3 = *(void *)(result + 392) + a2;
  if (v3 > *(void *)(result + 128)) {
    unint64_t v3 = *(void *)(result + 128);
  }
  *(void *)(result + 392) = v3;
  *(unsigned char *)(result + 400) = a3;
  *(unsigned char *)(result + 401) = a3;
  return result;
}

uint64_t sub_22261CFCC(void *a1, unsigned __int8 **a2, int a3, uint64_t a4)
{
  int v7 = *a2;
  int v15 = &(*a2)[a3];
  uint64_t result = sub_22261D0F0(a1, &v15, (int)v7, 0);
  if (result)
  {
    int v9 = result;
    uint64_t result = sub_22261D434(result, a1 + 18);
    if (result)
    {
      if ((sub_22261CCFC((uint64_t)a1) & 1) == 0)
      {
        int v10 = (unsigned char *)sub_2225C5B40(a1[1]);
        uint64_t v11 = sub_22261D774((uint64_t)a1, (int)*a2, (int)v15);
        sub_22261D54C(v10, v9, v11, v12, 0);
      }
      sub_22261CCEC(a4, 64);
      BOOL v13 = *a2;
      int v14 = (unsigned __int8 *)(v15 - *a2);
      if (v14 == (unsigned __int8 *)10)
      {
        if (v13[1] != 85) {
          goto LABEL_8;
        }
      }
      else if (v14 != (unsigned __int8 *)6 || v13[1] != 117)
      {
LABEL_8:
        if (v13 != v15)
        {
          do
            sub_22261D7D0((uint64_t)a1, a2, a4);
          while (*a2 != v15);
        }
        return 1;
      }
      *a2 = v15;
      return 1;
    }
  }
  return result;
}

uint64_t sub_22261D0F0(void *a1, unsigned __int8 **a2, int a3, uint64_t a4)
{
  v37[0] = 0;
  int v8 = sub_22261DC60((uint64_t)a1, *a2, v37);
  int v9 = v8;
  if (v8 == 117)
  {
    int v10 = 4;
  }
  else
  {
    if (v8 != 85) {
      return 0;
    }
    int v10 = 8;
  }
  if ((a1[18] & 0x41) != 0)
  {
    LODWORD(v11) = 0;
    int v12 = 0;
    BOOL v13 = &(*a2)[v37[0]];
    int v14 = v13;
    do
    {
      int v15 = sub_22261DC60((uint64_t)a1, v14, v37);
      int v16 = sub_22261FF8C(v15);
      if (v16 == -1)
      {
        if (!a4 || (sub_22261CCFC((uint64_t)a1) & 1) != 0) {
          return 0;
        }
        if (!v12)
        {
          sub_22261CA64((uint64_t)a1, a1[49], 910, (uint64_t)v32);
          sub_2225C3D0C(v35, v13 - 1, 1);
          uint64_t v24 = v35[0];
          uint64_t v25 = v35[1];
LABEL_40:
          sub_2225F3774(v32, v24, v25);
          unsigned int v18 = v32;
          goto LABEL_42;
        }
        sub_22261CA64((uint64_t)a1, a1[49], 909, (uint64_t)v34);
        sub_2225F37F0(v34);
        uint64_t v11 = 0;
        if (v9 != 117 && v12 == 4)
        {
          uint64_t v19 = sub_22261D774((uint64_t)a1, (int)v13 - 1, (int)v13);
          char v21 = v20;
          sub_22261CA64((uint64_t)a1, v13 - 1, 830, (uint64_t)v33);
          sub_2225C3D00((int)v31, "u");
          sub_22261FFBC(v19, v21, v31[0], v31[1], (uint64_t)v32);
          sub_22261E3BC((uint64_t)v33, (uint64_t)v32);
          sub_2225F4E0C(v32);
          unsigned int v18 = (uint64_t *)v33;
          goto LABEL_42;
        }
        return v11;
      }
      uint64_t v11 = (v16 + 16 * v11);
      v14 += v37[0];
      ++v12;
    }
    while (v10 != v12);
    if (a4 && (sub_22261CCEC(a4, 64), int v17 = *a2, v14 - *a2 != (v10 | 2)))
    {
      while (v17 != v14)
      {
        sub_22261D7D0((uint64_t)a1, a2, a4);
        int v17 = *a2;
      }
    }
    else
    {
      *a2 = v14;
    }
    if ((a1[18] & 0x400000) != 0) {
      return v11;
    }
    if (v11 <= 0x9F)
    {
      if ((v11 - 36) <= 0x3C && ((1 << (v11 - 36)) & 0x1000000010000001) != 0) {
        return v11;
      }
      if (a4 && a1[1])
      {
        if ((v11 - 127) <= 0xFFFFFFA0)
        {
          sub_22261CA64((uint64_t)a1, a1[49], 761, (uint64_t)v30);
          unsigned int v18 = (uint64_t *)v30;
          goto LABEL_42;
        }
        v33[0] = v11;
        sub_22261CA64((uint64_t)a1, a1[49], 762, (uint64_t)v32);
        sub_2225C3D0C(v29, v33, 1);
        uint64_t v24 = v29[0];
        uint64_t v25 = v29[1];
        goto LABEL_40;
      }
      return 0;
    }
    int v22 = v11 & 0xFFFFF800;
    if ((v11 & 0xFFFFF800) == 0xD800) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = v11;
    }
    if (!a4 || v22 != 55296) {
      return v11;
    }
    if (!a1[1]) {
      return 0;
    }
    uint64_t v23 = a1[49];
    if ((a1[18] & 0xC0) == 0x40)
    {
      sub_22261CA64((uint64_t)a1, v23, 911, (uint64_t)v28);
      unsigned int v18 = (uint64_t *)v28;
    }
    else
    {
      sub_22261CA64((uint64_t)a1, v23, 764, (uint64_t)v27);
      unsigned int v18 = (uint64_t *)v27;
    }
  }
  else
  {
    if (!a4 || (sub_22261CCFC((uint64_t)a1) & 1) != 0) {
      return 0;
    }
    sub_22261CA64((uint64_t)a1, a3, 912, (uint64_t)v36);
    unsigned int v18 = (uint64_t *)v36;
  }
LABEL_42:
  sub_2225F37F0(v18);
  return 0;
}

uint64_t sub_22261D434(int a1, void *a2)
{
  if ((*a2 & 0x82) != 0)
  {
    unint64_t v3 = (void **)off_26B5C7960();
    unsigned int v4 = *v3;
    if (!*v3)
    {
      char v5 = v3;
      unsigned int v4 = (void *)sub_2225C26A4(16);
      sub_2226222D0(v13, (uint64_t)&unk_2226D01B8);
      uint64_t v6 = v13[0];
      uint64_t v7 = v13[1];
LABEL_9:
      sub_2225C3D0C(v4, v6, v7);
      *char v5 = v4;
    }
  }
  else if ((*a2 & 0x40) != 0)
  {
    int v9 = (void **)off_26B5C7978();
    unsigned int v4 = *v9;
    if (!*v9)
    {
      char v5 = v9;
      unsigned int v4 = (void *)sub_2225C26A4(16);
      sub_2226222D4(v12, (uint64_t)&unk_2226D0320);
      uint64_t v6 = v12[0];
      uint64_t v7 = v12[1];
      goto LABEL_9;
    }
  }
  else
  {
    int v8 = (void **)off_26B5C7990();
    unsigned int v4 = *v8;
    if (!*v8)
    {
      char v5 = v8;
      unsigned int v4 = (void *)sub_2225C26A4(16);
      sub_2226222D8(v11, (uint64_t)&unk_2226D0888);
      uint64_t v6 = v11[0];
      uint64_t v7 = v11[1];
      goto LABEL_9;
    }
  }
  return sub_2225DBF48(v4, a1);
}

uint64_t sub_22261D54C(unsigned char *a1, int a2, uint64_t a3, int a4, int a5)
{
  uint64_t v27 = a3;
  int v28 = a4;
  int v8 = sub_22261C6A4((unsigned int *)&v27);
  if (!sub_2226184E8(a1, 0x358u, v8))
  {
    int v9 = (void **)off_26B5C79A8();
    int v10 = *v9;
    if (!*v9)
    {
      int v10 = (void *)sub_2225C26A4(16);
      sub_2226222D8(v26, (uint64_t)&unk_2226D0888);
      sub_2225C3D0C(v10, v26[0], v26[1]);
      *int v9 = v10;
    }
    uint64_t v11 = (uint64_t *)off_26B5C79C0();
    if (!*v11)
    {
      uint64_t v12 = sub_2225C26A4(16);
      sub_222622300(v25, (uint64_t)&unk_2226D1038);
      sub_2225C3D0C(v12, v25[0], v25[1]);
      uint64_t *v11 = v12;
      int v10 = *v9;
    }
    if ((sub_2225DBF48(v10, a2) & 1) == 0)
    {
      unsigned int v16 = sub_22261C6A4((unsigned int *)&v27);
      sub_2225F52C4((uint64_t)a1, v16, 856, (uint64_t)v24);
      int v14 = sub_222620144(v24, (uint64_t)&v27);
      int v15 = 0;
      goto LABEL_11;
    }
    if (a5 && sub_2225DBF48((void *)*v11, a2))
    {
      unsigned int v13 = sub_22261C6A4((unsigned int *)&v27);
      sub_2225F52C4((uint64_t)a1, v13, 856, (uint64_t)v24);
      int v14 = sub_222620144(v24, (uint64_t)&v27);
      int v15 = 1;
LABEL_11:
      sub_222622304(v14, v15);
      sub_2225F37F0(v24);
    }
  }
  int v17 = sub_22261C6A4((unsigned int *)&v27);
  uint64_t result = sub_2226184E8(a1, 0x367u, v17);
  if ((result & 1) == 0)
  {
    uint64_t v19 = (void **)off_26B5C79D8();
    char v20 = *v19;
    if (!*v19)
    {
      char v21 = v19;
      char v20 = (void *)sub_2225C26A4(16);
      sub_2226222D4(v23, (uint64_t)&unk_2226D0320);
      sub_2225C3D0C(v20, v23[0], v23[1]);
      void *v21 = v20;
    }
    uint64_t result = sub_2225DBF48(v20, a2);
    if ((result & 1) == 0)
    {
      unsigned int v22 = sub_22261C6A4((unsigned int *)&v27);
      sub_2225F52C4((uint64_t)a1, v22, 871, (uint64_t)v24);
      sub_222620144(v24, (uint64_t)&v27);
      return sub_2225F37F0(v24);
    }
  }
  return result;
}

uint64_t sub_22261D774(uint64_t a1, int a2, int a3)
{
  int v5 = sub_22261C94C(a1, a2, 1);
  int v6 = sub_22261C94C(a1, a3, 1);
  return sub_222622214(v5, v6);
}

uint64_t sub_22261D7D0(uint64_t a1, unsigned __int8 **a2, uint64_t a3)
{
  if (sub_22261C0E8((char)**a2))
  {
    int v6 = (*a2)++;
    return (char)*v6;
  }
  else
  {
    unsigned int v9 = 0;
    char v7 = sub_22261CB60(a1, *a2, &v9, a3);
    *a2 += v9;
  }
  return v7;
}

uint64_t sub_22261D858(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v11 = *a2;
  int v10 = 0;
  int v4 = sub_22261D914(&v11, *(unsigned __int8 **)(a1 + 128), (unsigned int *)&v10);
  uint64_t result = 0;
  if (!v4)
  {
    uint64_t result = sub_22261D434(v10, (void *)(a1 + 144));
    if (result)
    {
      if ((sub_22261CCFC(a1) & 1) == 0)
      {
        int v6 = (unsigned char *)sub_2225C5B40(*(void *)(a1 + 8));
        int v7 = v10;
        uint64_t v8 = sub_22261D774(a1, (int)*a2, (int)v11);
        sub_22261D54C(v6, v7, v8, v9, 0);
      }
      *a2 = v11;
      return 1;
    }
  }
  return result;
}

uint64_t sub_22261D914(unsigned __int8 **a1, unsigned __int8 *a2, unsigned int *a3)
{
  uint64_t v8 = a3;
  if (*a1 == a2) {
    return 1;
  }
  unsigned int v6 = sub_2225CB1B4(**a1);
  if (a2 - *a1 < v6) {
    return 1;
  }
  else {
    return sub_2225CB608(a1, &(*a1)[v6], &v8, (unint64_t)(a3 + 1), 0);
  }
}

uint64_t sub_22261D998(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v5 = (unsigned __int8 *)(a3 - 1);
  do
  {
    int v7 = *++v5;
    int v6 = v7;
  }
  while ((sub_22261C920(v7, 0) & 1) != 0);
  int v16 = 0;
  int v17 = v5;
  if (sub_22261DBCC(v6))
  {
    if (v6 == 36)
    {
      if ((*(unsigned char *)(a1 + 146) & 0x20) == 0) {
        goto LABEL_29;
      }
    }
    else if (v6 != 63 && v6 != 92)
    {
      goto LABEL_29;
    }
  }
LABEL_9:
  uint64_t v8 = a1;
  int v9 = v5;
LABEL_10:
  unsigned __int8 v10 = sub_22261DC60(v8, v9, &v16);
  while (v10 == 92)
  {
    if (sub_22261CFCC((void *)a1, &v17, v16, (uint64_t)a2))
    {
      int v9 = v17;
LABEL_27:
      uint64_t v8 = a1;
      goto LABEL_10;
    }
LABEL_15:
    if (sub_22261DBCC(v10))
    {
      int v5 = v17;
    }
    else
    {
      int v11 = sub_22261D858(a1, &v17);
      int v5 = v17;
      if (v11) {
        goto LABEL_9;
      }
    }
    if (!sub_22261C920(v10, 0)) {
      goto LABEL_29;
    }
    int v17 = sub_22261DCDC(a1, v5, v16, (uint64_t)a2);
    unsigned __int8 v10 = sub_22261DC60(a1, v17, &v16);
    if (sub_22261C920(v10, 0))
    {
      do
      {
        int v17 = sub_22261DCDC(a1, v17, v16, (uint64_t)a2);
        unsigned __int8 v10 = sub_22261DC60(a1, v17, &v16);
      }
      while ((sub_22261C920(v10, 0) & 1) != 0);
    }
  }
  if (v10 != 36) {
    goto LABEL_15;
  }
  if ((*(unsigned char *)(a1 + 146) & 0x20) != 0)
  {
    if ((sub_22261CCFC(a1) & 1) == 0)
    {
      sub_22261CA64(a1, (int)v17, 778, (uint64_t)v15);
      sub_2225F37F0(v15);
    }
    int v9 = sub_22261DCDC(a1, v17, v16, (uint64_t)a2);
    int v17 = v9;
    goto LABEL_27;
  }
  int v5 = v17;
LABEL_29:
  uint64_t v12 = *(void *)(a1 + 392);
  sub_22261DBD8(a1, a2, (uint64_t)v5, 7);
  sub_2225C5B6C((uint64_t)a2, v12);
  if (*(unsigned char *)(a1 + 26)) {
    return 1;
  }
  unsigned int v13 = sub_222649194(*(void *)(a1 + 8), a2);
  if (!sub_22261DC54((uint64_t)v13)) {
    return 1;
  }
  else {
    return sub_222649488(*(void *)(a1 + 8), a2);
  }
}

BOOL sub_22261DBCC(char a1)
{
  return (a1 & 0x80) == 0;
}

uint64_t sub_22261DBD8(uint64_t a1, _DWORD *a2, uint64_t a3, __int16 a4)
{
  int v8 = a3 - *(_DWORD *)(a1 + 392);
  sub_222612BA8((uint64_t)a2, v8);
  int v9 = sub_22261C94C(a1, *(void *)(a1 + 392), v8);
  sub_2225D0A60(a2, v9);
  uint64_t result = sub_22261F2AC((uint64_t)a2, a4);
  *(void *)(a1 + 392) = a3;
  return result;
}

uint64_t sub_22261DC54(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 3) >> 2) & 1;
}

uint64_t sub_22261DC60(uint64_t a1, unsigned __int8 *a2, _DWORD *a3)
{
  if (sub_22261C0E8((char)*a2))
  {
    *a3 = 1;
    return (char)*a2;
  }
  else
  {
    *a3 = 0;
    return sub_22261CB60(a1, a2, a3, 0);
  }
}

unsigned __int8 *sub_22261DCDC(uint64_t a1, unsigned __int8 *a2, int a3, uint64_t a4)
{
  if (a3 == 1)
  {
    uint64_t v5 = 1;
  }
  else
  {
    unsigned int v7 = 0;
    sub_22261CB60(a1, a2, &v7, a4);
    uint64_t v5 = v7;
  }
  return &a2[v5];
}

BOOL sub_22261DD2C(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  unsigned int v7 = 0;
  int v5 = sub_22261C0FC(a2, (int *)&v7, a3);
  BOOL result = 0;
  if (v5 == 48) {
    return (sub_22261C0FC(&a2[v7], (int *)&v7, a3) & 0xFFFFFFDF) == 88;
  }
  return result;
}

uint64_t sub_22261DD98(uint64_t a1, _DWORD *a2, unsigned __int8 *a3)
{
  unint64_t v3 = a3;
  uint64_t v25 = a3;
  unsigned int v24 = 0;
  int v6 = sub_22261DC60(a1, a3, &v24);
  BOOL v7 = sub_22261E024(v6);
  if (v7)
  {
    do
    {
      char v8 = v6;
      unint64_t v3 = sub_22261DCDC(a1, v3, v24, (uint64_t)a2);
      uint64_t v25 = v3;
      int v6 = sub_22261DC60(a1, v3, &v24);
      BOOL v7 = sub_22261E024(v6);
    }
    while (v7);
  }
  else
  {
    char v8 = 0;
  }
  if (v6 <= 0x2Cu)
  {
    if (v6 == 39)
    {
      if ((*(unsigned char *)(sub_22261E040(a1) + 1) & 1) == 0) {
        goto LABEL_29;
      }
      int v23 = 0;
      unsigned int v13 = &v3[v24];
      int v14 = (void *)sub_22261E040(a1);
      unsigned __int8 v15 = sub_22261C0FC(v13, &v23, v14);
      if (!sub_22261C920(v15, 0)) {
        goto LABEL_29;
      }
      char v16 = sub_22261CCFC(a1);
      int v17 = v25;
      if ((v16 & 1) == 0)
      {
        sub_22261CA64(a1, (int)v25, 860, (uint64_t)v22);
        sub_2225F37F0(v22);
      }
      uint64_t v12 = sub_22261DCDC(a1, v17, v24, (uint64_t)a2);
      int v10 = v23;
      uint64_t v11 = a1;
LABEL_26:
      unsigned int v18 = sub_22261DCDC(v11, v12, v10, (uint64_t)a2);
      goto LABEL_32;
    }
    if (v6 != 43) {
      goto LABEL_29;
    }
LABEL_11:
    if ((v8 & 0xDF) != 0x45
      || (*(unsigned char *)(a1 + 144) & 8) != 0
      && (BOOL v7 = sub_22261DD2C(v7, *(unsigned __int8 **)(a1 + 392), (void *)(a1 + 144))))
    {
      if (v6 != 45 && v6 != 43) {
        goto LABEL_29;
      }
      if ((v8 & 0xDF) != 0x50) {
        goto LABEL_29;
      }
      if ((*(unsigned char *)(a1 + 144) & 1) == 0)
      {
        if (!sub_22261DD2C(v7, *(unsigned __int8 **)(a1 + 392), (void *)(a1 + 144))) {
          goto LABEL_29;
        }
        uint64_t v9 = *(void *)(a1 + 392);
        LOBYTE(v23) = 95;
        if ((unsigned __int8 *)sub_2225D1414(v9, (uint64_t)v3, (char *)&v23) != v3) {
          goto LABEL_29;
        }
      }
    }
    int v10 = v24;
    uint64_t v11 = a1;
    uint64_t v12 = v3;
    goto LABEL_26;
  }
  if (v6 == 92)
  {
    if (sub_22261CFCC((void *)a1, &v25, v24, (uint64_t)a2))
    {
      unsigned int v18 = v25;
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  if (v6 == 45) {
    goto LABEL_11;
  }
LABEL_29:
  if (sub_22261DBCC(v6))
  {
    unsigned int v18 = v25;
LABEL_33:
    uint64_t v20 = *(void *)(a1 + 392);
    sub_22261DBD8(a1, a2, (uint64_t)v18, 8);
    sub_2225C5B6C((uint64_t)a2, v20);
    return 1;
  }
  int v19 = sub_22261D858(a1, &v25);
  unsigned int v18 = v25;
  if (!v19) {
    goto LABEL_33;
  }
LABEL_32:
  sub_22261DD98(a1, a2, v18);
  return 1;
}

BOOL sub_22261E024(int a1)
{
  return (word_2226CBA58[a1] & 0x1E8) != 0;
}

uint64_t sub_22261E040(uint64_t a1)
{
  return a1 + 144;
}

unsigned __int8 *sub_22261E048(void *a1, uint64_t a2, unsigned __int8 *a3, int a4)
{
  uint64_t v36 = a3;
  int v35 = 0;
  int v7 = sub_22261DC60((uint64_t)a1, a3, &v35);
  BOOL v8 = sub_22261E3A4(v7);
  if (!v8
    && (v7 != 92 || (sub_22261CFCC(a1, &v36, v35, a2) & 1) == 0)
    && (sub_22261DBCC(v7) || !sub_22261D858((uint64_t)a1, &v36)))
  {
    return v36;
  }
  if ((*(unsigned char *)sub_22261E040((uint64_t)a1) & 0x80) == 0)
  {
    if ((sub_22261CCFC((uint64_t)a1) & 1) == 0)
    {
      if (v7 == 95) {
        int v9 = 862;
      }
      else {
        int v9 = 861;
      }
      sub_22261CA64((uint64_t)a1, (int)v36, v9, (uint64_t)&v33);
      int v10 = sub_22261C94C((uint64_t)a1, (int)v36, 1);
      sub_2225C3D00((int)v31, " ");
      int v11 = v10;
      uint64_t v12 = v31[0];
      uint64_t v13 = v31[1];
LABEL_27:
      sub_22261E3FC(v11, v12, v13, 0, (uint64_t)v32);
      sub_22261E3BC((uint64_t)&v33, (uint64_t)v32);
      sub_2225F4E0C(v32);
      sub_2225F37F0(&v33);
      return v36;
    }
    return v36;
  }
  if (!v8)
  {
LABEL_33:
    sub_22261CCEC(a2, 32);
    do
    {
      while (1)
      {
        int v27 = sub_22261DC60((uint64_t)a1, v36, &v35);
        if (!sub_22261C920(v27, 0)) {
          break;
        }
        uint64_t v36 = sub_22261DCDC((uint64_t)a1, v36, v35, a2);
      }
    }
    while (v27 == 92 && (sub_22261CFCC(a1, &v36, v35, a2) & 1) != 0
         || !sub_22261DBCC(v27) && (sub_22261D858((uint64_t)a1, &v36) & 1) != 0);
    return v36;
  }
  if (v7 == 95 || !a4)
  {
    if (v7 != 95) {
      goto LABEL_22;
    }
LABEL_32:
    uint64_t v36 = sub_22261DCDC((uint64_t)a1, v36, v35, a2);
    goto LABEL_33;
  }
  if ((*(unsigned char *)(sub_22261E040((uint64_t)a1) + 1) & 1) == 0) {
    goto LABEL_22;
  }
  char v33 = v7;
  __int16 v34 = 0;
  LODWORD(v14) = v35;
  v32[0] = 0;
  unsigned __int8 v15 = &v36[v35];
  char v16 = (void *)sub_22261E040((uint64_t)a1);
  unsigned __int8 v17 = sub_22261C0FC(v15, v32, v16);
  if (sub_22261C920(v17, 0))
  {
    uint64_t v18 = 1;
    while (v18 != 3)
    {
      *(&v33 + v18) = v17;
      uint64_t v19 = v18 + 1;
      uint64_t v14 = (v32[0] + v14);
      v32[0] = 0;
      uint64_t v20 = &v36[v14];
      char v21 = (void *)sub_22261E040((uint64_t)a1);
      unsigned __int8 v17 = sub_22261C0FC(v20, v32, v21);
      char v22 = sub_22261C920(v17, 0);
      uint64_t v18 = v19;
      if ((v22 & 1) == 0) {
        goto LABEL_29;
      }
    }
    goto LABEL_22;
  }
  LODWORD(v19) = 1;
LABEL_29:
  if (v19 == 1 && v7 == 115) {
    goto LABEL_32;
  }
  int v26 = (unsigned char *)sub_22261E040((uint64_t)a1);
  sub_2225C3D0C(v30, &v33, v19);
  if (sub_222623268(v26, v30[0], v30[1])) {
    goto LABEL_32;
  }
LABEL_22:
  if ((sub_22261CCFC((uint64_t)a1) & 1) == 0)
  {
    int v23 = (int)v36;
    if ((*(void *)sub_22261E040((uint64_t)a1) & 4) != 0) {
      int v24 = 788;
    }
    else {
      int v24 = 812;
    }
    sub_22261CA64((uint64_t)a1, v23, v24, (uint64_t)&v33);
    int v25 = sub_22261C94C((uint64_t)a1, (int)v36, 1);
    sub_2225C3D00((int)v29, " ");
    int v11 = v25;
    uint64_t v12 = v29[0];
    uint64_t v13 = v29[1];
    goto LABEL_27;
  }
  return v36;
}

BOOL sub_22261E3A4(int a1)
{
  return (word_2226CBA58[a1] & 0xE0) != 0;
}

uint64_t sub_22261E3BC(uint64_t a1, uint64_t a2)
{
  if ((sub_22261C8F4() & 1) == 0) {
    sub_222622340(a1, a2);
  }
  return a1;
}

void sub_22261E3FC(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v10[0] = a2;
  v10[1] = a3;
  sub_22262234C(a5);
  *(void *)a5 = sub_222622214(a1, a1);
  *(unsigned char *)(a5 + 8) = v8;
  sub_2225CA51C(v10, (uint64_t)&v9);
  sub_2225CCDE4(a5 + 24, (uint64_t)&v9);
  std::string::~string(&v9);
  *(unsigned char *)(a5 + 48) = a4;
}

uint64_t sub_22261E478(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, __int16 a4)
{
  unsigned __int8 v17 = a3;
  char v7 = sub_22261CCFC(a1);
  if ((unsigned __int16)(a4 - 19) >= 0xFFFDu && (v7 & 1) == 0)
  {
    uint64_t v8 = *(void *)(a1 + 392);
    if ((*(void *)sub_22261E040(a1) & 0x40) != 0) {
      int v9 = 872;
    }
    else {
      int v9 = 857;
    }
    sub_22261CA64(a1, v8, v9, (uint64_t)v16);
    sub_2225F37F0(v16);
  }
  char v10 = sub_22261D7D0(a1, &v17, (uint64_t)a2);
  int v11 = 0;
  while (1)
  {
    if (v10 == 92)
    {
      char v10 = sub_22261D7D0(a1, &v17, (uint64_t)a2);
    }
    else if (v10 == 34)
    {
      if ((*(unsigned char *)sub_22261E040(a1) & 0x40) != 0) {
        unsigned __int8 v17 = sub_22261E048((void *)a1, (uint64_t)a2, v17, 1);
      }
      if (v11 && (sub_22261CCFC(a1) & 1) == 0)
      {
        sub_22261CA64(a1, (int)v11, 833, (uint64_t)v14);
        sub_2225F37F0(v14);
      }
      uint64_t v12 = *(void *)(a1 + 392);
      sub_22261DBD8(a1, a2, (uint64_t)v17, a4);
      sub_2225C5B6C((uint64_t)a2, v12);
      return 1;
    }
    if (v10) {
      break;
    }
    if (v17 - 1 == *(unsigned __int8 **)(a1 + 128)) {
      goto LABEL_20;
    }
    if (sub_22261E68C(a1, (int)v17 - 1))
    {
      sub_222648CFC(*(void *)(a1 + 8));
      sub_22261DBD8(a1, a2, (uint64_t)(v17 - 1), 0);
      sub_22261E6F4(a1);
      return 1;
    }
    int v11 = v17 - 1;
LABEL_19:
    char v10 = sub_22261D7D0(a1, &v17, (uint64_t)a2);
  }
  if (v10 != 10 && v10 != 13) {
    goto LABEL_19;
  }
LABEL_20:
  if ((sub_22261CCFC(a1) & 1) == 0 && (*(unsigned char *)(a1 + 146) & 0x40) == 0)
  {
    sub_22261CA64(a1, *(void *)(a1 + 392), 819, (uint64_t)v15);
    sub_2225F37F0(v15);
  }
  sub_22261DBD8(a1, a2, (uint64_t)(v17 - 1), 0);
  return 1;
}

uint64_t sub_22261E68C(uint64_t a1, int a2)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result)
  {
    uint64_t result = sub_22261FF74(result);
    if (result)
    {
      unsigned int v6 = sub_22260C644((_DWORD *)(a1 + 136), a2 - *(_DWORD *)(a1 + 120));
      unsigned int v5 = sub_22261FF84(*(void *)(a1 + 8));
      return sub_22260CBC4(&v6, &v5);
    }
  }
  return result;
}

uint64_t sub_22261E6F4(uint64_t result)
{
  *(void *)(result + 392) = *(void *)(result + 128);
  return result;
}

uint64_t sub_22261E700(void *a1, _DWORD *a2, const char *a3, __int16 a4)
{
  if ((sub_22261CCFC((uint64_t)a1) & 1) == 0)
  {
    sub_22261CA64((uint64_t)a1, a1[49], 870, (uint64_t)v26);
    sub_2225F37F0(v26);
  }
  for (uint64_t i = 0; i != 16; ++i)
  {
    BOOL v9 = sub_22261E954(a3[i]);
    if (!v9) {
      break;
    }
  }
  if (a3[i] == 40)
  {
    size_t v10 = i;
    uint64_t v11 = 2 * i;
    for (size_t j = v10; ; ++j)
    {
      if (a3[j + 1])
      {
        if (a3[j + 1] == 41 && !strncmp(&a3[j + 2], a3, v10) && a3[v11 + 2] == 34)
        {
          unsigned __int8 v17 = (unsigned __int8 *)&a3[v11 + 3];
          if ((*(unsigned char *)sub_22261E040((uint64_t)a1) & 0x40) != 0) {
            unsigned __int8 v17 = sub_22261E048(a1, (uint64_t)a2, v17, 1);
          }
          uint64_t v18 = a1[49];
          sub_22261DBD8((uint64_t)a1, a2, (uint64_t)v17, a4);
          sub_2225C5B6C((uint64_t)a2, v18);
          return 1;
        }
      }
      else if (&a3[j + 1] == (const char *)a1[16])
      {
        if ((sub_22261CCFC((uint64_t)a1) & 1) == 0)
        {
          sub_22261CA64((uint64_t)a1, a1[49], 769, (uint64_t)v24);
          sub_2225C3D0C(v22, a3, v10);
          sub_2225F3774(v24, v22[0], v22[1]);
          sub_2225F37F0(v24);
        }
        uint64_t v14 = (uint64_t)a1;
        unsigned __int8 v15 = a2;
        uint64_t v16 = (uint64_t)&a3[j + 1];
        goto LABEL_31;
      }
      ++v11;
    }
  }
  if ((sub_22261CCFC((uint64_t)a1) & 1) == 0)
  {
    if (v9)
    {
      sub_22261CA64((uint64_t)a1, a3 + i, 757, (uint64_t)v25);
      uint64_t v13 = (uint64_t *)v25;
    }
    else
    {
      sub_22261CA64((uint64_t)a1, a3 + i, 647, (uint64_t)v24);
      sub_2225C3D0C(v23, &a3[i], 1);
      sub_2225F3774(v24, v23[0], v23[1]);
      uint64_t v13 = v24;
    }
    sub_2225F37F0(v13);
  }
  do
  {
    while (1)
    {
      uint64_t v16 = (uint64_t)a3;
      int v20 = *(unsigned __int8 *)a3++;
      int v19 = v20;
      if (v20) {
        break;
      }
      if (v16 == a1[16]) {
        goto LABEL_30;
      }
    }
  }
  while (v19 != 34);
  ++v16;
LABEL_30:
  uint64_t v14 = (uint64_t)a1;
  unsigned __int8 v15 = a2;
LABEL_31:
  sub_22261DBD8(v14, v15, v16, 0);
  return 1;
}

BOOL sub_22261E954(int a1)
{
  return (word_2226CBA58[a1] & 0x3E8) != 0;
}

uint64_t sub_22261E970(uint64_t a1, _DWORD *a2, unsigned __int8 *a3)
{
  uint64_t v11 = a3;
  unsigned __int8 v6 = sub_22261D7D0(a1, &v11, (uint64_t)a2);
  char v7 = 0;
  while (1)
  {
    if (v6 <= 0xCu)
    {
      if (v6)
      {
        if (v6 == 10) {
          goto LABEL_14;
        }
      }
      else
      {
        if (v11 - 1 == *(unsigned __int8 **)(a1 + 128) || sub_22261E68C(a1, (int)v11 - 1))
        {
LABEL_14:
          sub_22261DBD8(a1, a2, (uint64_t)a3, 46);
          return 1;
        }
        char v7 = v11 - 1;
      }
      goto LABEL_13;
    }
    if (v6 == 92)
    {
      sub_22261D7D0(a1, &v11, (uint64_t)a2);
      goto LABEL_13;
    }
    if (v6 == 13) {
      goto LABEL_14;
    }
    if (v6 == 62) {
      break;
    }
LABEL_13:
    unsigned __int8 v6 = sub_22261D7D0(a1, &v11, (uint64_t)a2);
  }
  if (v7 && (sub_22261CCFC(a1) & 1) == 0)
  {
    sub_22261CA64(a1, (int)v7, 833, (uint64_t)v10);
    sub_2225F37F0(v10);
  }
  uint64_t v9 = *(void *)(a1 + 392);
  sub_22261DBD8(a1, a2, (uint64_t)v11, 15);
  sub_2225C5B6C((uint64_t)a2, v9);
  return 1;
}

uint64_t sub_22261EAB0(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, __int16 a4)
{
  int v19 = a3;
  char v7 = sub_22261CCFC(a1);
  if (((unsigned __int16)(a4 - 13) == 65534 || (unsigned __int16)(a4 - 13) == 0xFFFF) && (v7 & 1) == 0)
  {
    uint64_t v8 = *(void *)(a1 + 392);
    if ((*(void *)sub_22261E040(a1) & 0x40) != 0) {
      int v9 = 872;
    }
    else {
      int v9 = 857;
    }
    sub_22261CA64(a1, v8, v9, (uint64_t)v18);
    sub_2225F37F0(v18);
  }
  int v10 = sub_22261D7D0(a1, &v19, (uint64_t)a2);
  if (v10 != 39)
  {
    uint64_t v12 = 0;
    while (1)
    {
      if (v10 == 92)
      {
        LOBYTE(v10) = sub_22261D7D0(a1, &v19, (uint64_t)a2);
      }
      else if (v10 == 39)
      {
        if ((*(unsigned char *)sub_22261E040(a1) & 0x40) != 0) {
          int v19 = sub_22261E048((void *)a1, (uint64_t)a2, v19, 0);
        }
        if (v12 && (sub_22261CCFC(a1) & 1) == 0)
        {
          sub_22261CA64(a1, (int)v12, 831, (uint64_t)v15);
          sub_2225F37F0(v15);
        }
        uint64_t v14 = *(void *)(a1 + 392);
        sub_22261DBD8(a1, a2, (uint64_t)v19, a4);
        sub_2225C5B6C((uint64_t)a2, v14);
        return 1;
      }
      if ((_BYTE)v10)
      {
        if (v10 == 10 || v10 == 13)
        {
LABEL_25:
          if ((sub_22261CCFC(a1) & 1) == 0 && (*(unsigned char *)(a1 + 146) & 0x40) == 0)
          {
            sub_22261CA64(a1, *(void *)(a1 + 392), 818, (uint64_t)v16);
            sub_2225F37F0(v16);
          }
          uint64_t v11 = v19 - 1;
          goto LABEL_29;
        }
      }
      else
      {
        if (v19 - 1 == *(unsigned __int8 **)(a1 + 128)) {
          goto LABEL_25;
        }
        if (sub_22261E68C(a1, (int)v19 - 1))
        {
          sub_222648CFC(*(void *)(a1 + 8));
          sub_22261DBD8(a1, a2, (uint64_t)(v19 - 1), 0);
          sub_22261E6F4(a1);
          return 1;
        }
        uint64_t v12 = v19 - 1;
      }
      LOBYTE(v10) = sub_22261D7D0(a1, &v19, (uint64_t)a2);
    }
  }
  if ((sub_22261CCFC(a1) & 1) == 0 && (*(unsigned char *)(a1 + 146) & 0x40) == 0)
  {
    sub_22261CA64(a1, *(void *)(a1 + 392), 780, (uint64_t)v17);
    sub_2225F37F0(v17);
  }
  uint64_t v11 = v19;
LABEL_29:
  sub_22261DBD8(a1, a2, (uint64_t)v11, 0);
  return 1;
}

uint64_t sub_22261ED04(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, unsigned char *a4)
{
  unsigned int v5 = a3;
  for (char i = sub_22261EDF4(*(a3 - 1)); ; char i = 1)
  {
    do
    {
      int v10 = *v5++;
      int v9 = v10;
    }
    while (sub_22261CB44(v10));
    if (!sub_22261EDF4(v9)) {
      break;
    }
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t result = 0;
      *(void *)(a1 + 392) = v5 - 1;
      return result;
    }
  }
  if (sub_22261EE08(a1))
  {
    sub_22261DBD8(a1, a2, (uint64_t)(v5 - 1), 0);
    if (i) {
      *(_WORD *)(a1 + 400) = 257;
    }
    return 1;
  }
  else
  {
    int v12 = sub_22261EDF4(*(v5 - 2));
    sub_22261EE18((uint64_t)a2, 2, v12 ^ 1);
    if (i)
    {
      sub_22261CCEC((uint64_t)a2, 1);
      *a4 = 1;
    }
    uint64_t result = 0;
    *(void *)(a1 + 392) = v5 - 1;
  }
  return result;
}

uint64_t sub_22261EDF4(int a1)
{
  return ((unsigned __int16)word_2226CBA58[a1] >> 1) & 1;
}

BOOL sub_22261EE08(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 385) > 1u;
}

uint64_t sub_22261EE18(uint64_t result, char a2, int a3)
{
  if (a3) {
    return sub_22261CCEC(result, a2);
  }
  else {
    return sub_22261F284(result, a2);
  }
}

uint64_t sub_22261EE24(uint64_t a1, unsigned int *a2, unsigned __int8 *a3, unsigned char *a4)
{
  uint64_t v37 = a3;
  if ((*(unsigned char *)(a1 + 146) & 2) == 0 && (sub_22261CCFC(a1) & 1) == 0)
  {
    sub_22261CA64(a1, *(void *)(a1 + 392), 785, (uint64_t)v36);
    sub_2225F37F0(v36);
    *(void *)(a1 + 144) |= 0x20000uLL;
  }
  while (1)
  {
LABEL_4:
    for (i = v37; ; uint64_t v37 = i)
    {
      int v8 = *i;
      if (!*i) {
        goto LABEL_21;
      }
      if (v8 == 13 || v8 == 10) {
        break;
      }
      ++i;
    }
    char v10 = 0;
    uint64_t v11 = i;
    do
    {
      char v12 = v10;
      int v14 = *--v11;
      int v13 = v14;
      BOOL v15 = sub_22261CB44(v14);
      char v10 = 1;
    }
    while (v15);
    if (v13 == 47)
    {
      if (*(v11 - 1) != 63) {
        goto LABEL_50;
      }
      uint64_t v16 = v11 - 2;
      if (*(v11 - 2) != 63) {
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v16 = v11;
      if (v13 != 92) {
        goto LABEL_50;
      }
    }
    uint64_t v37 = v16;
    if ((v12 & 1) != 0 && (sub_22261CCFC(a1) & 1) == 0)
    {
      sub_22261CA64(a1, (int)v11, 621, (uint64_t)v35);
      sub_2225F37F0(v35);
    }
LABEL_21:
    unsigned __int8 v17 = v37;
    char v18 = sub_22261CCFC(a1);
    *(unsigned char *)(a1 + 26) = 1;
    int v19 = sub_22261D7D0(a1, &v37, (uint64_t)a2);
    int v20 = v19;
    *(unsigned char *)(a1 + 26) = v18;
    char v21 = v37;
    char v22 = v17 + 1;
    if (v19 && v37 == v22)
    {
      uint64_t v37 = i;
LABEL_50:
      if (*(void *)(a1 + 8)
        && (sub_22261CCFC(a1) & 1) == 0
        && (uint64_t v29 = *(void *)(a1 + 8),
            int v30 = sub_22261C94C(a1, *(void *)(a1 + 392), 1),
            int v31 = sub_22261C94C(a1, (int)v37, 1),
            sub_22261F184(&v33, v30, v31),
            sub_222649D70(v29, (uint64_t)a2, v33)))
      {
        *(void *)(a1 + 392) = v37;
      }
      else
      {
        if (!sub_22261F190(a1))
        {
          int v32 = v37;
          if (*(unsigned char *)(a1 + 24) || v37 == *(unsigned __int8 **)(a1 + 128))
          {
            uint64_t result = 0;
          }
          else
          {
            ++v37;
            sub_22261CCEC((uint64_t)a2, 1);
            *a4 = 1;
            sub_22261F284((uint64_t)a2, 2);
            uint64_t result = 0;
            int v32 = v37;
          }
          *(void *)(a1 + 392) = v32;
          return result;
        }
        sub_22261F1A0(a1, a2, (uint64_t)v37);
      }
      return 1;
    }
    if (v19 != 47 && v37 != v22 && *v37 != 47 && v17 != v37)
    {
      while (1)
      {
        int v24 = *v17;
        if (v24 == 13 || v24 == 10) {
          break;
        }
        if (++v17 == v37) {
          goto LABEL_41;
        }
      }
      if (!sub_22261BCEC(v19)) {
        goto LABEL_39;
      }
      do
      {
        int v27 = *v21++;
        int v26 = v27;
      }
      while (sub_22261BCEC(v27));
      if (v26 != 47 || *v21 != 47)
      {
LABEL_39:
        if ((sub_22261CCFC(a1) & 1) == 0)
        {
          sub_22261CA64(a1, v17 - 1, 789, (uint64_t)v34);
          sub_2225F37F0(v34);
        }
      }
    }
LABEL_41:
    if (v37 == (unsigned __int8 *)(*(void *)(a1 + 128) + 1))
    {
      --v37;
      goto LABEL_50;
    }
    if (!v20) {
      break;
    }
    if (v20 == 10 || v20 == 13) {
      goto LABEL_50;
    }
  }
  if (!sub_22261E68C(a1, (int)v37 - 1)) {
    goto LABEL_4;
  }
  sub_222648CFC(*(void *)(a1 + 8));
  sub_22261E6F4(a1);
  return 0;
}

_DWORD *sub_22261F184(_DWORD *a1, int a2, int a3)
{
  return sub_22262238C(a1, a2, a3);
}

BOOL sub_22261F190(uint64_t a1)
{
  return *(unsigned char *)(a1 + 385) != 0;
}

uint64_t sub_22261F1A0(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  sub_22261DBD8(a1, a2, a3, 5);
  if (*(unsigned char *)(a1 + 24) && !*(unsigned char *)(a1 + 26))
  {
    unsigned __int8 v11 = 0;
    sub_22261F294(*(void *)(a1 + 8), a2, &v11, &v10);
    if (!v11)
    {
      *(unsigned char *)sub_2225CB8F8((uint64_t)&v10, 1) = 42;
      std::string::append(&v10, "*/");
      sub_22261F2AC((uint64_t)a2, 5);
      uint64_t v5 = *(void *)(a1 + 8);
      sub_2225CCBF8(v9, &v10);
      unsigned int v6 = sub_2225C3B40(a2);
      unsigned int v7 = sub_2225C3B40(a2);
      sub_222648E1C(v5, v9[0], v9[1], a2, v6, v7);
    }
    std::string::~string(&v10);
  }
  return 1;
}

uint64_t sub_22261F284(uint64_t result, char a2)
{
  *(unsigned char *)(result + 18) &= ~a2;
  return result;
}

void sub_22261F294(uint64_t a1@<X0>, unsigned int *a2@<X1>, unsigned __int8 *a3@<X2>, std::string *a4@<X8>)
{
}

uint64_t sub_22261F2AC(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 16) = a2;
  return result;
}

BOOL sub_22261F2B4(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, unsigned char *a4)
{
  int v38 = 0;
  int v8 = sub_22261DC60(a1, a3, &v38);
  int v9 = &a3[v38];
  if (v8 == 47)
  {
    char v11 = *v9++;
    LOBYTE(v10) = v11;
    goto LABEL_6;
  }
  LOBYTE(v10) = v8;
  if (!(_BYTE)v8)
  {
    if (v9 != (unsigned __int8 *)(*(void *)(a1 + 128) + 1))
    {
      LOBYTE(v10) = 0;
      goto LABEL_6;
    }
    if ((sub_22261CCFC(a1) & 1) == 0)
    {
      sub_22261CA64(a1, *(void *)(a1 + 392), 768, (uint64_t)v37);
      int v30 = v37;
      goto LABEL_56;
    }
    goto LABEL_57;
  }
  while (1)
  {
LABEL_6:
    if ((unint64_t)(v9 + 24) >= *(void *)(a1 + 128)) {
      goto LABEL_9;
    }
    uint64_t v12 = *(void *)(a1 + 8);
    if (v12)
    {
      unsigned int v36 = sub_22261F60C(v12);
      if (sub_22260CBC4(&v36, (unsigned int *)(a1 + 136))) {
        goto LABEL_9;
      }
    }
    if (v10 != 47 && (v9 & 0xF) != 0)
    {
      int v14 = v9 + 1;
      do
      {
        int v15 = *v9++;
        LOBYTE(v10) = v15;
        uint64_t v16 = v14++ & 0xF;
      }
      while (v15 != 47 && v16 != 0);
    }
    if (v10 != 47) {
      break;
    }
LABEL_24:
    int v18 = *(v9 - 2);
    if (v18 == 10 || v18 == 13)
    {
      if (sub_22261F614(v9 - 2, a1)) {
        goto LABEL_44;
      }
    }
    else if (v18 == 42)
    {
LABEL_44:
      if (*(void *)(a1 + 8))
      {
        if ((sub_22261CCFC(a1) & 1) == 0)
        {
          uint64_t v23 = *(void *)(a1 + 8);
          int v24 = sub_22261C94C(a1, *(void *)(a1 + 392), 1);
          int v25 = sub_22261C94C(a1, (int)v9, 1);
          sub_22261F184(&v33, v24, v25);
          if (sub_222649D70(v23, (uint64_t)a2, v33))
          {
            *(void *)(a1 + 392) = v9;
            return 1;
          }
        }
      }
      if (sub_22261F190(a1))
      {
        uint64_t v26 = a1;
        int v27 = a2;
        uint64_t v28 = (uint64_t)v9;
        __int16 v29 = 5;
        goto LABEL_59;
      }
      if (sub_22261CB44(*v9))
      {
        sub_22261ED04(a1, a2, v9 + 1, a4);
      }
      else
      {
        *(void *)(a1 + 392) = v9;
        sub_22261CCEC((uint64_t)a2, 2);
      }
      return 0;
    }
    if (*v9 == 42 && v9[1] != 47 && (sub_22261CCFC(a1) & 1) == 0)
    {
      sub_22261CA64(a1, v9 - 1, 880, (uint64_t)v35);
      sub_2225F37F0(v35);
    }
LABEL_36:
    char v20 = *v9++;
    LOBYTE(v10) = v20;
  }
  char v21 = v9 + 1;
  do
  {
    int v9 = v21;
    char v22 = v21 - 1;
    int v10 = *(v21 - 1);
    if (v10 == 47) {
      break;
    }
    if (*v21 == 47) {
      break;
    }
    if (v21[1] == 47) {
      break;
    }
    if (v21[2] == 47) {
      break;
    }
    v21 += 4;
  }
  while ((unint64_t)(v22 + 4) < *(void *)(a1 + 128));
LABEL_9:
  while ((_BYTE)v10)
  {
    if (v10 == 47) {
      goto LABEL_24;
    }
    char v13 = *v9++;
    LOBYTE(v10) = v13;
  }
  if (v9 != (unsigned __int8 *)(*(void *)(a1 + 128) + 1))
  {
    if (!sub_22261E68C(a1, (int)v9 - 1)) {
      goto LABEL_36;
    }
    sub_222648CFC(*(void *)(a1 + 8));
    sub_22261E6F4(a1);
    return 0;
  }
  if (sub_22261CCFC(a1)) {
    goto LABEL_57;
  }
  sub_22261CA64(a1, *(void *)(a1 + 392), 768, (uint64_t)v34);
  int v30 = v34;
LABEL_56:
  sub_2225F37F0(v30);
LABEL_57:
  int v31 = v9 - 1;
  BOOL result = sub_22261EE08(a1);
  if (result)
  {
    uint64_t v26 = a1;
    int v27 = a2;
    uint64_t v28 = (uint64_t)v31;
    __int16 v29 = 0;
LABEL_59:
    sub_22261DBD8(v26, v27, v28, v29);
    return 1;
  }
  else
  {
    *(void *)(a1 + 392) = v31;
  }
  return result;
}

uint64_t sub_22261F60C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 704);
}

uint64_t sub_22261F614(unsigned __int8 *a1, uint64_t a2)
{
  int v4 = a1 - 1;
  int v3 = *(a1 - 1);
  if (v3 == 13 || v3 == 10)
  {
    if (v3 == *a1) {
      return 0;
    }
    int v4 = a1 - 2;
  }
  char v6 = 0;
  unsigned int v7 = v4 + 1;
  do
  {
    do
    {
      char v8 = v6;
      int v10 = *--v7;
      int v9 = v10;
      BOOL v11 = sub_22261CB44(v10);
      char v6 = 1;
    }
    while (v11);
  }
  while (!v9);
  if (v9 != 47)
  {
    if (v9 == 92 && *(v7 - 1) == 42) {
      goto LABEL_14;
    }
    return 0;
  }
  if (*(v7 - 1) != 63) {
    return 0;
  }
  int v13 = v7 - 2;
  if (*(v7 - 2) != 63 || *(v7 - 3) != 42) {
    return 0;
  }
  uint64_t v14 = *(void *)sub_22261E040(a2);
  char v15 = sub_22261CCFC(a2);
  if ((v14 & 0x10000) == 0)
  {
    if ((v15 & 1) == 0)
    {
      unsigned __int8 v17 = v21;
      sub_22261CA64(a2, v13, 852, (uint64_t)v21);
      uint64_t v12 = 0;
      goto LABEL_27;
    }
    return 0;
  }
  LODWORD(v7) = v13;
  if ((v15 & 1) == 0)
  {
    sub_22261CA64(a2, v13, 850, (uint64_t)v20);
    sub_2225F37F0(v20);
    LODWORD(v7) = v13;
  }
LABEL_14:
  if ((sub_22261CCFC(a2) & 1) == 0)
  {
    sub_22261CA64(a2, (int)v7, 773, (uint64_t)v19);
    sub_2225F37F0(v19);
  }
  if ((v8 & 1) != 0 && (sub_22261CCFC(a2) & 1) == 0)
  {
    unsigned __int8 v17 = v18;
    sub_22261CA64(a2, (int)v7, 621, (uint64_t)v18);
    uint64_t v12 = 1;
LABEL_27:
    sub_2225F37F0(v17);
    return v12;
  }
  return 1;
}

uint64_t sub_22261F7A8(uint64_t a1, uint64_t a2)
{
  sub_22261B6AC(v9);
  char v8 = *(unsigned __int8 **)(a1 + 392);
  while (1)
  {
    char v7 = 0;
    int v4 = sub_22261D7D0(a1, &v8, (uint64_t)v9);
    char v7 = v4;
    if (v4) {
      break;
    }
    if (v8 - 1 == *(unsigned __int8 **)(a1 + 128)) {
      goto LABEL_10;
    }
    if (sub_22261E68C(a1, (int)v8 - 1))
    {
      sub_222648CFC(*(void *)(a1 + 8));
      return sub_22261E6F4(a1);
    }
LABEL_8:
    if (a2) {
      sub_2225C52D8(a2, &v7);
    }
  }
  if (v4 != 10 && v4 != 13) {
    goto LABEL_8;
  }
LABEL_10:
  *(void *)(a1 + 392) = v8 - 1;
  sub_22261F89C(a1, v9);
  uint64_t result = sub_22261BABC((uint64_t)v9, 3);
  if (result)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (v6) {
      sub_222648CFC(v6);
    }
    return sub_22261F89C(a1, v9);
  }
  return result;
}

uint64_t sub_22261F89C(unsigned char *a1, _DWORD *a2)
{
  sub_22261FB44((uint64_t)a2);
  if (a1[400])
  {
    sub_22261CCEC((uint64_t)a2, 1);
    a1[400] = 0;
  }
  if (a1[402])
  {
    sub_22261CCEC((uint64_t)a2, 2);
    a1[402] = 0;
  }
  if (a1[403])
  {
    sub_22261CCEC((uint64_t)a2, 16);
    a1[403] = 0;
  }
  char v4 = a1[401];
  a1[401] = 0;
  sub_22261CCFC((uint64_t)a1);

  return sub_2226204A0((uint64_t)a1, a2, v4);
}

uint64_t sub_22261F944(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 24))
  {
    *(unsigned char *)(a1 + 24) = 0;
    sub_22261DBD8(a1, a2, a3, 2);
    if (*(void *)(a1 + 8)) {
      sub_22261B0D0(a1);
    }
    return 1;
  }
  else if (sub_22261CCFC(a1))
  {
    sub_22261FB44((uint64_t)a2);
    uint64_t v7 = *(void *)(a1 + 128);
    *(void *)(a1 + 392) = v7;
    uint64_t v6 = 1;
    sub_22261DBD8(a1, a2, v7, 1);
  }
  else
  {
    while (!sub_2225CF1D0((void *)(a1 + 64)))
    {
      v18[0] = sub_22261F60C(*(void *)(a1 + 8));
      if (sub_22261FB84(v18, (unsigned int *)(a1 + 136)))
      {
        uint64_t v8 = *(void *)(a1 + 8);
        int v9 = (unsigned int *)sub_222608644(a1 + 64);
        sub_22261CABC(v8, *v9, 751, (uint64_t)v20);
        sub_2225F37F0(v20);
      }
      sub_222608660(a1 + 64);
    }
    if (*(void *)(a1 + 120) != a3)
    {
      int v10 = *(unsigned __int8 *)(a3 - 1);
      if (v10 != 10 && v10 != 13)
      {
        BOOL v11 = (unsigned char *)sub_2225C5B40(*(void *)(a1 + 8));
        int v12 = sub_22261C94C(a1, *(void *)(a1 + 128), 1);
        if ((*(unsigned char *)(a1 + 144) & 0x80) != 0)
        {
          if (sub_2226184E8(v11, 0x364u, v12)) {
            int v13 = 881;
          }
          else {
            int v13 = 868;
          }
        }
        else
        {
          int v13 = 792;
        }
        sub_22261CA64(a1, *(void *)(a1 + 128), v13, (uint64_t)v19);
        sub_2225C3D00((int)v17, "\n");
        sub_22261E3FC(v12, v17[0], v17[1], 0, (uint64_t)v18);
        sub_22261E3BC((uint64_t)v19, (uint64_t)v18);
        sub_2225F4E0C(v18);
        sub_2225F37F0(v19);
      }
    }
    *(void *)(a1 + 392) = a3;
    uint64_t v14 = *(void *)(a1 + 8);
    char v15 = sub_22261FBA0(a1);
    return sub_22263F918(v14, a2, v15);
  }
  return v6;
}

_DWORD *sub_22261FB44(uint64_t a1)
{
  *(void *)(a1 + 11) = 0;
  *(void *)(a1 + 4) = 0;
  uint64_t result = sub_2225F3278(&v3);
  *(_DWORD *)a1 = v3;
  return result;
}

BOOL sub_22261FB84(unsigned int *a1, unsigned int *a2)
{
  return !sub_22260CBC4(a1, a2);
}

uint64_t sub_22261FBA0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 384);
}

uint64_t sub_22261FBA8(uint64_t a1)
{
  *(unsigned char *)(a1 + 26) = 1;
  uint64_t v2 = *(void *)(a1 + 392);
  char v3 = *(unsigned char *)(a1 + 24);
  __int16 v4 = *(_WORD *)(a1 + 400);
  char v5 = *(unsigned char *)(a1 + 402);
  sub_22261B6AC(v7);
  sub_22261F89C(a1, v7);
  *(void *)(a1 + 392) = v2;
  *(unsigned char *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 402) = v5;
  *(_WORD *)(a1 + 400) = v4;
  *(unsigned char *)(a1 + 26) = 0;
  if (sub_22261BABC((uint64_t)v7, 1)) {
    return 2;
  }
  else {
    return sub_22261BABC((uint64_t)v7, 21);
  }
}

uint64_t sub_22261FC44(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = a2;
  if (*(unsigned char **)(a1 + 120) != a2)
  {
    int v4 = *(a2 - 1);
    if (v4 != 13 && v4 != 10) {
      return 0;
    }
  }
  uint64_t v6 = *(void *)(a1 + 128) - (void)a2;
  if (v6 >= 8)
  {
    sub_2225C3D0C(v15, a2, 7);
    sub_2225C3D00((int)v14, "<<<<<<<");
    if (!sub_2225D1680(v15[0], v15[1], v14[0], (size_t)v14[1])) {
      goto LABEL_12;
    }
    uint64_t v6 = *(void *)(a1 + 128) - (void)v2;
  }
  if (v6 < 6) {
    return 0;
  }
  sub_2225C3D0C(v13, v2, 5);
  sub_2225C3D00((int)v12, ">>>> ");
  if (sub_2225D1680(v13[0], v13[1], v12[0], (size_t)v12[1])) {
    return 0;
  }
LABEL_12:
  if (*(_DWORD *)(a1 + 404) || (sub_22261CCFC(a1) & 1) != 0) {
    return 0;
  }
  if (*v2 == 60) {
    int v8 = 1;
  }
  else {
    int v8 = 2;
  }
  uint64_t result = sub_22261FD94((uint64_t)v2, *(void *)(a1 + 128), v8);
  if (result)
  {
    sub_22261CA64(a1, (int)v2, 626, (uint64_t)v11);
    sub_2225F37F0(v11);
    *(_DWORD *)(a1 + 404) = v8;
    while (1)
    {
      int v9 = *v2;
      if (v9 == 10 || v9 == 13) {
        break;
      }
      ++v2;
    }
    *(void *)(a1 + 392) = v2;
    return 1;
  }
  return result;
}

uint64_t sub_22261FD94(uint64_t a1, uint64_t a2, int a3)
{
  if (a3 == 2) {
    char v3 = "<<<<\n";
  }
  else {
    char v3 = ">>>>>>>";
  }
  uint64_t v4 = -5;
  if (a3 == 2)
  {
    uint64_t v5 = 5;
  }
  else
  {
    uint64_t v4 = -7;
    uint64_t v5 = 7;
  }
  sub_2225C3D0C(v12, a1 + v5, a2 - a1 + v4);
  sub_2225C3D00((int)v11, v3);
  uint64_t v6 = sub_2225D85D4(v12, v11[0], (size_t)v11[1], 0);
  if (v6 == -1) {
    return 0;
  }
  uint64_t v7 = v6;
  while (sub_2225CC124(v12, v7 - 1) != 13 && sub_2225CC124(v12, v7 - 1) != 10)
  {
    v12[0] = sub_2225CE76C(v12, v7 + v5, 0xFFFFFFFFFFFFFFFFLL);
    v12[1] = v8;
    sub_2225C3D00((int)v10, v3);
    uint64_t v7 = sub_2225D85D4(v12, v10[0], (size_t)v10[1], 0);
    if (v7 == -1) {
      return 0;
    }
  }
  return sub_2225C3C70((uint64_t)v12) + v7;
}

uint64_t sub_22261FEAC(uint64_t a1, unsigned __int8 *a2)
{
  if (*(unsigned __int8 **)(a1 + 120) == a2 || ((v4 = *(a2 - 1), v4 != 13) ? (BOOL v5 = v4 == 10) : (BOOL v5 = 1), v5))
  {
    if (*(_DWORD *)(a1 + 404) && (sub_22261CCFC(a1) & 1) == 0)
    {
      uint64_t v7 = 1;
      while (a2[v7] == *a2)
      {
        if (++v7 == 4)
        {
          uint64_t result = sub_22261FD94((uint64_t)a2, *(void *)(a1 + 128), *(_DWORD *)(a1 + 404));
          if (result)
          {
            uint64_t v8 = *(void *)(a1 + 128);
            if (result != v8)
            {
              while (1)
              {
                int v9 = *(unsigned __int8 *)result;
                if (v9 == 10 || v9 == 13) {
                  break;
                }
                if (++result == v8)
                {
                  uint64_t result = *(void *)(a1 + 128);
                  break;
                }
              }
            }
            *(void *)(a1 + 392) = result;
            *(_DWORD *)(a1 + 404) = 0;
            return 1;
          }
          return result;
        }
      }
    }
  }
  return 0;
}

BOOL sub_22261FF74(uint64_t a1)
{
  return *(void *)(a1 + 688) != 0;
}

uint64_t sub_22261FF84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 700);
}

uint64_t sub_22261FF8C(int a1)
{
  unsigned int v1 = a1 - 48;
  if ((a1 - 65) >= 6) {
    int v2 = -1;
  }
  else {
    int v2 = a1 - 55;
  }
  if ((a1 - 97) <= 5) {
    unsigned int v3 = a1 - 87;
  }
  else {
    unsigned int v3 = v2;
  }
  if (v1 <= 9) {
    return v1;
  }
  else {
    return v3;
  }
}

void sub_22261FFBC(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v9[0] = a3;
  v9[1] = a4;
  sub_22262234C(a5);
  *(void *)a5 = a1;
  *(unsigned char *)(a5 + 8) = a2;
  sub_2225CA51C(v9, (uint64_t)&v8);
  sub_2225CCDE4(a5 + 24, (uint64_t)&v8);
  std::string::~string(&v8);
}

uint64_t sub_222620028(uint64_t a1, uint64_t a2, int a3, int a4)
{
  std::string v8 = (uint64_t *)off_26B5C7948();
  if (!*v8)
  {
    uint64_t v9 = sub_2225C26A4(16);
    sub_222620134(v15, (uint64_t)&unk_2226D0170);
    sub_2225C3D0C(v9, v15[0], v15[1]);
    uint64_t *v8 = v9;
  }
  if (sub_22261CCFC(a1) & 1) != 0 || (sub_222620138(*(void *)(a1 + 8))) {
    return 0;
  }
  uint64_t result = sub_2225DBF48((void *)*v8, a3);
  if (result)
  {
    sub_22261CA64(a1, *(void *)(a1 + 392), 816, (uint64_t)v14);
    uint64_t v12 = sub_22261D774(a1, *(void *)(a1 + 392), a4);
    int v13 = v11;
    sub_222620144(v14, (uint64_t)&v12);
    sub_2225F37F0(v14);
    sub_22261CCEC(a2, 2);
    return 1;
  }
  return result;
}

uint64_t sub_222620138(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 436) >> 9) & 1;
}

void *sub_222620144(void *a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_22262016C(uint64_t a1, unsigned int *a2, int a3, uint64_t a4)
{
  std::string v8 = (void *)(a1 + 144);
  if (sub_22261D434(a3, (void *)(a1 + 144)) && sub_22262031C(a3, v8))
  {
    if ((sub_22261CCFC(a1) & 1) == 0 && !*(unsigned char *)(a1 + 24) && (sub_222620138(*(void *)(a1 + 8)) & 1) == 0)
    {
      uint64_t v9 = (unsigned char *)sub_2225C5B40(*(void *)(a1 + 8));
      uint64_t v10 = sub_22261D774(a1, *(void *)(a1 + 392), a4);
      sub_22261D54C(v9, a3, v10, v11, 1);
    }
    sub_222620400((_WORD *)(a1 + 32));
    return sub_22261D998(a1, a2, a4);
  }
  else if ((sub_22261CCFC(a1) & 1) != 0 {
         || *(unsigned char *)(a1 + 24)
  }
         || (sub_222620138(*(void *)(a1 + 8)) & 1) != 0
         || sub_22261DBCC(**(unsigned char **)(a1 + 392))
         || (sub_22261D434(a3, v8) & 1) != 0)
  {
    sub_222620400((_WORD *)(a1 + 32));
    sub_22261DBD8(a1, a2, a4, 0);
    return 1;
  }
  else
  {
    sub_22261CA64(a1, *(void *)(a1 + 392), 693, (uint64_t)v16);
    uint64_t v13 = sub_22261D774(a1, *(void *)(a1 + 392), a4);
    sub_22262040C(v13, v14, (uint64_t)v15);
    sub_22261E3BC((uint64_t)v16, (uint64_t)v15);
    sub_2225F4E0C(v15);
    sub_2225F37F0(v16);
    uint64_t result = 0;
    *(void *)(a1 + 392) = a4;
  }
  return result;
}

uint64_t sub_22262031C(int a1, void *a2)
{
  if ((*a2 & 0x82) != 0)
  {
    unsigned int v3 = (void **)off_26B5C79F0();
    int v4 = *v3;
    if (!*v3)
    {
      BOOL v5 = v3;
      int v4 = (void *)sub_2225C26A4(16);
      sub_2226223AC(v11, &unk_2226D10A8);
      uint64_t v6 = v11[0];
      uint64_t v7 = v11[1];
LABEL_7:
      sub_2225C3D0C(v4, v6, v7);
      *BOOL v5 = v4;
    }
  }
  else
  {
    if ((*a2 & 0x40) != 0) {
      return 1;
    }
    std::string v8 = (void **)off_26B5C7A08();
    int v4 = *v8;
    if (!*v8)
    {
      BOOL v5 = v8;
      int v4 = (void *)sub_2225C26A4(16);
      sub_222622300(v10, (uint64_t)&unk_2226D1038);
      uint64_t v6 = v10[0];
      uint64_t v7 = v10[1];
      goto LABEL_7;
    }
  }
  return sub_2225DBF48(v4, a1) ^ 1;
}

_WORD *sub_222620400(_WORD *result)
{
  _DWORD *result = 1;
  return result;
}

uint64_t sub_22262040C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_22262234C(a3);
  *(void *)uint64_t result = a1;
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t sub_222620440(unsigned char *a1, uint64_t a2)
{
  a1[400] = sub_22261BFBC(a2);
  a1[402] = sub_222620488(a2);
  uint64_t result = sub_222620494(a2);
  a1[403] = result;
  return result;
}

uint64_t sub_222620488(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 18) >> 1) & 1;
}

uint64_t sub_222620494(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 18) >> 4) & 1;
}

uint64_t sub_2226204A0(uint64_t a1, _DWORD *a2, char a3)
{
  char v91 = a3;
  uint64_t v6 = (unsigned char *)(a1 + 144);
  while (2)
  {
    sub_22261F284((uint64_t)a2, 8);
    sub_2225C5B6C((uint64_t)a2, 0);
    uint64_t v7 = *(unsigned __int8 **)(a1 + 392);
    BOOL v90 = v7;
    int v8 = *v7;
    if (v8 == 32 || v8 == 9)
    {
      do
      {
        BOOL v90 = ++v7;
        int v10 = *v7;
      }
      while (v10 == 32 || v10 == 9);
      BOOL v12 = sub_22261EE08(a1);
      uint64_t v13 = v90;
      if (v12)
      {
        uint64_t v32 = a1;
        uint64_t v33 = a2;
        __int16 v34 = 0;
LABEL_267:
        sub_22261DBD8(v32, v33, (uint64_t)v13, v34);
        goto LABEL_268;
      }
      *(void *)(a1 + 392) = v90;
      sub_22261CCEC((uint64_t)a2, 2);
    }
    uint64_t v89 = 0;
    int v14 = sub_22261D7D0(a1, &v90, (uint64_t)a2);
    LOWORD(v15) = 59;
    switch(v14)
    {
      case 0:
        unsigned __int8 v17 = v90 - 1;
        if (v90 - 1 == *(unsigned __int8 **)(a1 + 128)) {
          goto LABEL_197;
        }
        if (sub_22261E68C(a1, (int)v90 - 1))
        {
          sub_22261FB44((uint64_t)a2);
          uint64_t v13 = v90;
          uint64_t v32 = a1;
          uint64_t v33 = a2;
          __int16 v34 = 3;
          goto LABEL_267;
        }
        if ((sub_22261CCFC(a1) & 1) == 0)
        {
          sub_22261CA64(a1, v90 - 1, 832, (uint64_t)v88);
          sub_2225F37F0(v88);
        }
        int v16 = 2;
        sub_22261CCEC((uint64_t)a2, 2);
        goto LABEL_21;
      case 9:
      case 11:
      case 12:
      case 32:
        goto LABEL_69;
      case 10:
      case 13:
        if (*(unsigned char *)(a1 + 24))
        {
          *(unsigned char *)(a1 + 24) = 0;
          if (*(void *)(a1 + 8)) {
            sub_22261B0D0(a1);
          }
          *(_WORD *)(a1 + 400) = 257;
          LOWORD(v15) = 2;
          goto LABEL_266;
        }
        int v16 = 2;
        sub_22261F284((uint64_t)a2, 2);
LABEL_21:
        if (sub_22261ED04(a1, a2, v90, &v91)) {
          goto LABEL_268;
        }
        goto LABEL_88;
      case 26:
        if ((*v6 & 8) == 0) {
          goto LABEL_145;
        }
        unsigned __int8 v17 = v90 - 1;
LABEL_197:
        char v64 = sub_22261F944(a1, a2, (uint64_t)v17);
        goto LABEL_235;
      case 33:
        if (sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1) == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 41;
        }
        else
        {
          LOWORD(v15) = 40;
        }
        goto LABEL_266;
      case 34:
        sub_222620400((_WORD *)(a1 + 32));
        uint64_t v45 = v90;
        uint64_t v46 = a1;
        uint64_t v47 = a2;
        __int16 v48 = 13;
        goto LABEL_147;
      case 35:
        int v38 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v38 != 64)
        {
          if (v38 != 35) {
            goto LABEL_215;
          }
          uint64_t v39 = v90;
          int v40 = HIDWORD(v89);
          goto LABEL_112;
        }
        if ((*v6 & 8) == 0) {
          goto LABEL_215;
        }
        if ((sub_22261CCFC(a1) & 1) == 0)
        {
          sub_22261CA64(a1, *(void *)(a1 + 392), 777, (uint64_t)v83);
          sub_2225F37F0(v83);
        }
        BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
        goto LABEL_254;
      case 36:
        if ((v6[2] & 0x20) == 0) {
          goto LABEL_145;
        }
        if ((sub_22261CCFC(a1) & 1) == 0)
        {
          sub_22261CA64(a1, v90 - 1, 778, (uint64_t)v86);
          sub_2225F37F0(v86);
        }
        goto LABEL_233;
      case 37:
        int v56 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v56 == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 45;
          goto LABEL_266;
        }
        uint64_t v69 = *(void *)v6 & 0x4000000;
        if (v56 == 62 && v69)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
LABEL_201:
          LOWORD(v15) = 24;
          goto LABEL_266;
        }
        LOWORD(v15) = 44;
        if (v56 != 58 || !v69) {
          goto LABEL_266;
        }
        BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
        int v73 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v73 == 64)
        {
          if ((*v6 & 8) != 0)
          {
            BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            if ((sub_22261CCFC(a1) & 1) == 0)
            {
              sub_22261CA64(a1, *(void *)(a1 + 392), 777, (uint64_t)v85);
              sub_2225F37F0(v85);
            }
LABEL_254:
            LOWORD(v15) = 67;
            goto LABEL_266;
          }
        }
        else if (v73 == 37 && sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 58)
        {
          uint64_t v39 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          int v40 = v89;
LABEL_112:
          BOOL v90 = sub_22261DCDC(a1, v39, v40, (uint64_t)a2);
          LOWORD(v15) = 66;
          goto LABEL_266;
        }
LABEL_215:
        if (!v91 || *(unsigned char *)(a1 + 26) || *(unsigned char *)(a1 + 384))
        {
          LOWORD(v15) = 65;
          goto LABEL_266;
        }
        sub_22261DBD8(a1, a2, (uint64_t)v90, 65);
        sub_22263716C(*(void *)(a1 + 8), (uint64_t)a2);
        char v64 = sub_222621BB8(*(void *)(a1 + 8));
        goto LABEL_235;
      case 38:
        int v41 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v41 == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 29;
        }
        else if (v41 == 38)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 28;
        }
        else
        {
          LOWORD(v15) = 27;
        }
        goto LABEL_266;
      case 39:
        sub_222620400((_WORD *)(a1 + 32));
        uint64_t v52 = v90;
        uint64_t v53 = a1;
        uint64_t v54 = a2;
        __int16 v55 = 9;
        goto LABEL_151;
      case 40:
        LOWORD(v15) = 21;
        goto LABEL_266;
      case 41:
        LOWORD(v15) = 22;
        goto LABEL_266;
      case 42:
        if (sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1) == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 31;
        }
        else
        {
          LOWORD(v15) = 30;
        }
        goto LABEL_266;
      case 43:
        int v42 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v42 == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 34;
        }
        else if (v42 == 43)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 33;
        }
        else
        {
          LOWORD(v15) = 32;
        }
        goto LABEL_266;
      case 44:
        LOWORD(v15) = 64;
        goto LABEL_266;
      case 45:
        int v57 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v57 == 62)
        {
          if ((*v6 & 0x40) != 0 && sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 42)
          {
            uint64_t v72 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            BOOL v90 = sub_22261DCDC(a1, v72, v89, (uint64_t)a2);
            LOWORD(v15) = 69;
          }
          else
          {
            BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            LOWORD(v15) = 36;
          }
        }
        else if (v57 == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 38;
        }
        else if (v57 == 45)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 37;
        }
        else
        {
          LOWORD(v15) = 35;
        }
        goto LABEL_266;
      case 46:
        int v43 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if ((v43 - 48) > 9)
        {
          if (v43 == 42 && (*(void *)v6 & 0x40) != 0)
          {
            v90 += HIDWORD(v89);
            LOWORD(v15) = 68;
          }
          else if (v43 == 46 && sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 46)
          {
            uint64_t v71 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            BOOL v90 = sub_22261DCDC(a1, v71, v89, (uint64_t)a2);
            LOWORD(v15) = 26;
          }
          else
          {
            LOWORD(v15) = 25;
          }
          goto LABEL_266;
        }
        sub_222620400((_WORD *)(a1 + 32));
        int v35 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
LABEL_92:
        sub_22261DD98(a1, a2, v35);
        goto LABEL_268;
      case 47:
        int v18 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v18 == 42)
        {
          uint64_t v28 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          if (!sub_22261F2B4(a1, a2, v28, &v91)) {
            goto LABEL_87;
          }
          goto LABEL_268;
        }
        if (v18 != 47)
        {
          if (v18 == 61)
          {
            BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            LOWORD(v15) = 43;
            goto LABEL_266;
          }
          goto LABEL_184;
        }
        if (((*(void *)v6 & 0x20000) == 0 || (*(void *)v6 & 0x8000000040) == 0x8000000000)
          && ((uint64_t v19 = *(void *)(a1 + 8)) != 0 && (sub_222620138(v19) & 1) != 0
           || sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 42))
        {
LABEL_184:
          LOWORD(v15) = 42;
          goto LABEL_266;
        }
        char v20 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
        if (sub_22261EE24(a1, a2, v20, &v91)) {
          goto LABEL_268;
        }
        while (2)
        {
          int v30 = *(unsigned __int8 **)(a1 + 392);
          BOOL v90 = v30;
          int v31 = *v30;
          if (v31 != 47) {
            goto LABEL_86;
          }
          while (v30[1] == 47)
          {
            if (sub_22261F190(a1))
            {
              int v30 = v90;
              break;
            }
            int v30 = v90;
            if ((*(void *)v6 & 0x20000) == 0 || (*(void *)v6 & 0x8000000040) == 0x8000000000) {
              break;
            }
            if (sub_22261EE24(a1, a2, v90 + 2, &v91)) {
              goto LABEL_268;
            }
LABEL_78:
            int v30 = *(unsigned __int8 **)(a1 + 392);
            BOOL v90 = v30;
            int v31 = *v30;
            if (v31 != 47) {
              goto LABEL_86;
            }
          }
          int v31 = *v30;
          if (v31 != 47) {
            goto LABEL_86;
          }
          if (v30[1] != 42)
          {
            int v31 = 47;
            goto LABEL_86;
          }
          if (!sub_22261F190(a1))
          {
            if (sub_22261F2B4(a1, a2, v90 + 2, &v91)) {
              break;
            }
            goto LABEL_78;
          }
          int v31 = *v90;
LABEL_86:
          if (!sub_22261CB44(v31))
          {
LABEL_87:
            int v16 = 2;
            goto LABEL_88;
          }
LABEL_69:
          sub_22261CCEC((uint64_t)a2, 2);
          if ((sub_22261ED04(a1, a2, v90, &v91) & 1) == 0) {
            continue;
          }
          break;
        }
LABEL_268:
        char v3 = 1;
        return v3 & 1;
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        sub_222620400((_WORD *)(a1 + 32));
        int v35 = v90;
        goto LABEL_92;
      case 58:
        int v58 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        uint64_t v59 = *(void *)(a1 + 144);
        if ((v59 & 0x4000000) != 0 && v58 == 62)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
LABEL_163:
          LOWORD(v15) = 20;
        }
        else
        {
          LOWORD(v15) = 60;
          if ((v59 & 0x40) != 0 && v58 == 58)
          {
            BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            LOWORD(v15) = 70;
          }
        }
        goto LABEL_266;
      case 59:
        LOWORD(v15) = 61;
        goto LABEL_266;
      case 60:
        int v21 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (*(unsigned char *)(a1 + 25))
        {
          sub_22261E970(a1, a2, v90);
          goto LABEL_268;
        }
        if (v21 != 60)
        {
          if (v21 == 61)
          {
            BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            LOWORD(v15) = 48;
          }
          else
          {
            uint64_t v65 = *(void *)v6;
            if ((*(void *)v6 & 0x4000000) != 0 && v21 == 58)
            {
              if ((v65 & 0x80) != 0
                && sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 58
                && (int v87 = 0, (sub_22261DC60(a1, &v90[HIDWORD(v89) + v89], &v87) & 0xFFFFFFFB) != 0x3A))
              {
                if ((sub_22261CCFC(a1) & 1) == 0)
                {
                  sub_22261CA64(a1, *(void *)(a1 + 392), 865, (uint64_t)v84);
                  sub_2225F37F0(v84);
                }
                LOWORD(v15) = 46;
              }
              else
              {
                BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
LABEL_182:
                LOWORD(v15) = 19;
              }
            }
            else
            {
              LOWORD(v15) = 46;
              if ((v65 & 0x4000000) != 0 && v21 == 37)
              {
                BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
LABEL_209:
                LOWORD(v15) = 23;
              }
            }
          }
          goto LABEL_266;
        }
        int v22 = sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89);
        if (v22 == 60)
        {
          if (sub_22261FC44(a1, v90 - 1) & 1) != 0 || (sub_22261FEAC(a1, v90 - 1)) {
            goto LABEL_87;
          }
          if ((*(unsigned char *)(a1 + 168) & 2) != 0)
          {
            uint64_t v75 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            BOOL v90 = sub_22261DCDC(a1, v75, v89, (uint64_t)a2);
            LOWORD(v15) = 72;
            goto LABEL_266;
          }
        }
        else if (v22 == 61)
        {
          uint64_t v37 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          BOOL v90 = sub_22261DCDC(a1, v37, v89, (uint64_t)a2);
          LOWORD(v15) = 49;
          goto LABEL_266;
        }
        BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
        LOWORD(v15) = 47;
        goto LABEL_266;
      case 61:
        if (sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1) == 61)
        {
          uint64_t v23 = v90;
          if (v90[1] == 61)
          {
            if (sub_22261FEAC(a1, v90 - 1)) {
              goto LABEL_87;
            }
            uint64_t v23 = v90;
          }
          BOOL v90 = sub_22261DCDC(a1, v23, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 63;
        }
        else
        {
          LOWORD(v15) = 62;
        }
        goto LABEL_266;
      case 62:
        int v24 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v24 != 62)
        {
          if (v24 == 61)
          {
            BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            LOWORD(v15) = 52;
          }
          else
          {
            LOWORD(v15) = 50;
          }
          goto LABEL_266;
        }
        int v25 = sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89);
        if (v25 == 62)
        {
          if (sub_22261FC44(a1, v90 - 1) & 1) != 0 || (sub_22261FEAC(a1, v90 - 1)) {
            goto LABEL_87;
          }
          if ((*(unsigned char *)(a1 + 168) & 2) != 0)
          {
            uint64_t v74 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            BOOL v90 = sub_22261DCDC(a1, v74, v89, (uint64_t)a2);
            LOWORD(v15) = 73;
            goto LABEL_266;
          }
        }
        else if (v25 == 61)
        {
          unsigned int v36 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          BOOL v90 = sub_22261DCDC(a1, v36, v89, (uint64_t)a2);
          LOWORD(v15) = 53;
          goto LABEL_266;
        }
        BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
        LOWORD(v15) = 51;
        goto LABEL_266;
      case 63:
        goto LABEL_266;
      case 64:
        if (*(v90 - 1) != 64 || (v6[1] & 4) == 0) {
          goto LABEL_145;
        }
        LOWORD(v15) = 71;
        goto LABEL_266;
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 83:
      case 84:
      case 86:
      case 87:
      case 88:
      case 89:
      case 90:
      case 95:
      case 97:
      case 98:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 113:
      case 114:
      case 115:
      case 116:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
        goto LABEL_233;
      case 76:
        sub_222620400((_WORD *)(a1 + 32));
        int v44 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v44 == 34)
        {
          uint64_t v45 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          uint64_t v46 = a1;
          uint64_t v47 = a2;
          __int16 v48 = 14;
          goto LABEL_147;
        }
        if (v44 == 82 && (*(void *)v6 & 0x80) != 0)
        {
          if (sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 34)
          {
            unint64_t v66 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            size_t v60 = sub_22261DCDC(a1, v66, v89, (uint64_t)a2);
            uint64_t v61 = (void *)a1;
            char v62 = a2;
            __int16 v63 = 14;
            goto LABEL_277;
          }
        }
        else if (v44 == 39)
        {
          uint64_t v52 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          uint64_t v53 = a1;
          uint64_t v54 = a2;
          __int16 v55 = 10;
          goto LABEL_151;
        }
LABEL_233:
        sub_222620400((_WORD *)(a1 + 32));
        goto LABEL_234;
      case 82:
        sub_222620400((_WORD *)(a1 + 32));
        if ((*(unsigned char *)(a1 + 144) & 0x80) == 0 || sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1) != 34) {
          goto LABEL_234;
        }
        size_t v60 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
        uint64_t v61 = (void *)a1;
        char v62 = a2;
        __int16 v63 = 13;
        goto LABEL_277;
      case 85:
        sub_222620400((_WORD *)(a1 + 32));
        if ((*(unsigned char *)(a1 + 144) & 0x82) == 0) {
          goto LABEL_234;
        }
        int v49 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v49 == 82)
        {
          if ((*v6 & 0x80) != 0 && sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 34)
          {
            __n128 v76 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            size_t v60 = sub_22261DCDC(a1, v76, v89, (uint64_t)a2);
            uint64_t v61 = (void *)a1;
            char v62 = a2;
            __int16 v63 = 18;
            goto LABEL_277;
          }
          goto LABEL_234;
        }
        if (v49 == 39)
        {
          uint64_t v52 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          uint64_t v53 = a1;
          uint64_t v54 = a2;
          __int16 v55 = 12;
          goto LABEL_151;
        }
        if (v49 != 34) {
          goto LABEL_234;
        }
        uint64_t v45 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
        uint64_t v46 = a1;
        uint64_t v47 = a2;
        __int16 v48 = 18;
        goto LABEL_147;
      case 91:
        goto LABEL_182;
      case 92:
        int v15 = sub_22261D0F0((void *)a1, &v90, *(void *)(a1 + 392), (uint64_t)a2);
        if (!v15) {
          goto LABEL_266;
        }
        if (!sub_222620028(a1, (uint64_t)a2, v15, (int)v90))
        {
          char v64 = sub_22262016C(a1, a2, v15, (uint64_t)v90);
          goto LABEL_235;
        }
        if ((sub_22261ED04(a1, a2, v90, &v91) & 1) == 0) {
          goto LABEL_87;
        }
        goto LABEL_268;
      case 93:
        goto LABEL_163;
      case 94:
        int v50 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v50 == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 55;
        }
        else
        {
          int v67 = v50;
          int v68 = sub_222606BF8((uint64_t)v6);
          LOWORD(v15) = 54;
          if (v67 == 94 && v68)
          {
            BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            LOWORD(v15) = 74;
          }
        }
        goto LABEL_266;
      case 117:
        sub_222620400((_WORD *)(a1 + 32));
        if ((*(unsigned char *)(a1 + 144) & 0x82) == 0) {
          goto LABEL_234;
        }
        unsigned int v51 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v51 <= 0x37)
        {
          if (v51 != 34)
          {
            if (v51 == 39)
            {
              uint64_t v52 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
              uint64_t v53 = a1;
              uint64_t v54 = a2;
              __int16 v55 = 11;
LABEL_151:
              sub_22261EAB0(v53, v54, v52, v55);
              goto LABEL_268;
            }
            goto LABEL_234;
          }
          uint64_t v45 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          uint64_t v46 = a1;
          uint64_t v47 = a2;
          __int16 v48 = 17;
LABEL_147:
          sub_22261E478(v46, v47, v45, v48);
          goto LABEL_268;
        }
        if (v51 == 56)
        {
          int v77 = sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89);
          if (v77 == 82)
          {
            if ((*v6 & 0x80) != 0)
            {
              int v87 = 0;
              if (sub_22261DC60(a1, &v90[HIDWORD(v89) + v89], &v87) == 34)
              {
                std::string v80 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
                char v81 = sub_22261DCDC(a1, v80, v89, (uint64_t)a2);
                size_t v60 = sub_22261DCDC(a1, v81, v87, (uint64_t)a2);
                uint64_t v61 = (void *)a1;
                char v62 = a2;
                __int16 v63 = 16;
                goto LABEL_277;
              }
            }
          }
          else if (v77 == 34)
          {
            int v78 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
            uint64_t v45 = sub_22261DCDC(a1, v78, v89, (uint64_t)a2);
            uint64_t v46 = a1;
            uint64_t v47 = a2;
            __int16 v48 = 16;
            goto LABEL_147;
          }
        }
        else if (v51 == 82 && (*v6 & 0x80) != 0 && sub_22261DC60(a1, &v90[HIDWORD(v89)], &v89) == 34)
        {
          unsigned __int16 v70 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          size_t v60 = sub_22261DCDC(a1, v70, v89, (uint64_t)a2);
          uint64_t v61 = (void *)a1;
          char v62 = a2;
          __int16 v63 = 17;
LABEL_277:
          sub_22261E700(v61, v62, (const char *)v60, v63);
          goto LABEL_268;
        }
LABEL_234:
        char v64 = sub_22261D998(a1, a2, (uint64_t)v90);
LABEL_235:
        char v3 = v64;
        return v3 & 1;
      case 123:
        goto LABEL_209;
      case 124:
        int v26 = sub_22261DC60(a1, v90, (_DWORD *)&v89 + 1);
        if (v26 == 124)
        {
          int v27 = v90;
          if (v90[1] == 124)
          {
            if (sub_22261FEAC(a1, v90 - 1)) {
              goto LABEL_87;
            }
            int v27 = v90;
          }
          BOOL v90 = sub_22261DCDC(a1, v27, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 57;
        }
        else if (v26 == 61)
        {
          BOOL v90 = sub_22261DCDC(a1, v90, SHIDWORD(v89), (uint64_t)a2);
          LOWORD(v15) = 58;
        }
        else
        {
          LOWORD(v15) = 56;
        }
        goto LABEL_266;
      case 125:
        goto LABEL_201;
      case 126:
        LOWORD(v15) = 39;
        goto LABEL_266;
      default:
        if (sub_22261DBCC(v14))
        {
LABEL_145:
          LOWORD(v15) = 0;
LABEL_266:
          sub_222620400((_WORD *)(a1 + 32));
          uint64_t v13 = v90;
          uint64_t v32 = a1;
          uint64_t v33 = a2;
          __int16 v34 = v15;
          goto LABEL_267;
        }
        int v87 = 0;
        --v90;
        if (sub_22261D914(&v90, *(unsigned __int8 **)(a1 + 128), (unsigned int *)&v87))
        {
          if ((sub_22261CCFC(a1) & 1) == 0 && !*(unsigned char *)(a1 + 24) && (sub_222620138(*(void *)(a1 + 8)) & 1) == 0)
          {
            sub_22261CA64(a1, (int)v90, 654, (uint64_t)v82);
            sub_2225F37F0(v82);
            *(void *)(a1 + 392) = v90 + 1;
            goto LABEL_87;
          }
          LOWORD(v15) = 0;
          ++v90;
          goto LABEL_266;
        }
        if (sub_222620028(a1, (uint64_t)a2, v87, (int)v90))
        {
          int v29 = sub_22261ED04(a1, a2, v90, &v91);
          if (v29) {
            int v16 = 1;
          }
          else {
            int v16 = 2;
          }
          v3 |= v29;
        }
        else
        {
          char v3 = sub_22262016C(a1, a2, v87, (uint64_t)v90);
          int v16 = 1;
        }
LABEL_88:
        if (v16 == 1) {
          return v3 & 1;
        }
        continue;
    }
  }
}

uint64_t sub_222621BB8(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(a1 + 72) + 9);
}

void sub_222621BC4()
{
  uint64_t v0 = (void *)sub_22261B864();

  j__free(v0);
}

uint64_t sub_222621BF0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  long long v7 = *(_OWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_OWORD *)(a1 + 68) = v7;
  std::string::basic_string((std::string *)(a1 + 88), (const std::string *)(a2 + 88));
  std::string::basic_string((std::string *)(a1 + 112), (const std::string *)(a2 + 112));
  std::string::basic_string((std::string *)(a1 + 136), (const std::string *)(a2 + 136));
  std::string::basic_string((std::string *)(a1 + 160), (const std::string *)(a2 + 160));
  sub_222621C90(a1 + 184, a2 + 184);
  sub_222621C94(a1 + 208, a2 + 208);
  return a1;
}

uint64_t *sub_222621C98(uint64_t *a1, uint64_t *a2)
{
  long long v4 = a1 + 2;
  *a1 = 0;
  a1[1] = 0;
  uint64_t v12 = 0;
  uint64_t v5 = sub_2225D2650((uint64_t)a2, (uint64_t)a2);
  nullsub_1(v5, v6);
  sub_222621D18(v4, &v12, &v11);
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  unint64_t v9 = sub_2225D24AC(a2);
  sub_222621D1C(a1, v7, v8, v9);
  return a1;
}

uint64_t sub_222621D1C(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_2225C64B8(&v10, (uint64_t)a1);
  sub_2225D5D10(v10, (uint64_t)&v11);
  if (a4)
  {
    sub_222621DDC(a1, a4);
    sub_222621E54((uint64_t)a1, a2, a3, a4);
  }
  sub_2225D2D18(&v11);
  return j_nullsub_1(&v11, v8);
}

uint64_t sub_222621DA4(void *a1, uint64_t a2, uint64_t a3)
{
  long long v4 = sub_2225D2584(a1);

  return nullsub_1(v4, a3);
}

uint64_t sub_222621DDC(uint64_t *a1, unint64_t a2)
{
  if (sub_2225D29F4((uint64_t)a1, a2) < a2) {
    sub_2225D2A34();
  }
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  uint64_t v6 = sub_2225D2AF0(v5, a2);
  *a1 = v6;
  a1[1] = v6;
  *(void *)sub_2225D2650((uint64_t)a1, v7) = v6 + 24 * v7;

  return nullsub_1(a1, 0);
}

void *sub_222621E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2225D2844(&v10, a1, a4);
  uint64_t v8 = sub_2225D2650(a1, v7);
  uint64_t v11 = sub_222621EC0(v8, a2, a3, v11);
  return sub_2225D284C(&v10);
}

uint64_t sub_222621EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2225C5E90(a2, a3);
  uint64_t v8 = v7;
  uint64_t v9 = j_j_nullsub_1(a4);
  uint64_t v10 = sub_222621F34(a1, v6, v8, v9);

  return sub_2225C5F20(a4, v10);
}

uint64_t sub_222621F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v16 = a4;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  if (a2 != a3)
  {
    uint64_t v8 = v16;
    do
    {
      uint64_t v9 = nullsub_1(v8, v7);
      sub_222621FE0(a1, v9, a2);
      a2 += 24;
      uint64_t v8 = v16 + 24;
      v16 += 24;
    }
    while (a2 != a3);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

std::string *sub_222621FE4(int a1, std::string *this, std::string *__str)
{
  return std::string::basic_string(this, __str);
}

uint64_t sub_222621FF0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_222621C90();
  *(unsigned char *)(result + 24) = *(unsigned char *)(a2 + 24);
  return result;
}

uint64_t sub_222622020(uint64_t a1)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void *sub_222622064(void *a1)
{
  *a1 = &unk_26D4DC0F8;
  sub_2226220B8(a1 + 18);

  return sub_2226220BC(a1);
}

void *sub_2226220BC(void *a1)
{
  *a1 = &unk_26D4DC4B8;
  sub_2225C56C4(a1 + 8);
  return a1;
}

uint64_t sub_222622100(uint64_t a1)
{
  return a1;
}

uint64_t sub_22262215C(unsigned int a1)
{
  if (a1 - 8 < 5) {
    return 1;
  }
  LODWORD(result) = sub_2226221A0(a1);
  if (a1 == 15) {
    return 1;
  }
  else {
    return result;
  }
}

uint64_t sub_2226221A0(unsigned int a1)
{
  return (a1 < 0x13) & (0x76000u >> a1);
}

uint64_t sub_2226221BC(uint64_t a1)
{
  return *(void *)(a1 + 392);
}

uint64_t sub_2226221C4()
{
  uint64_t result = sub_2226221E0();
  *(unsigned char *)(result + 8) = 0;
  return result;
}

_DWORD *sub_2226221E4(_DWORD *a1)
{
  int v2 = sub_2225F3278(a1);
  sub_2225F3278(v2 + 1);
  return a1;
}

uint64_t sub_222622214(int a1, int a2)
{
  sub_22261F184(&v3, a1, a2);
  return sub_222622250(v3);
}

uint64_t sub_222622250(uint64_t a1)
{
  sub_2225E31D8((uint64_t)&v2, a1, 0);
  return v2;
}

BOOL sub_222622288(_DWORD *a1)
{
  BOOL result = sub_2225CDBBC(a1);
  if (result)
  {
    return sub_2225CDBBC(a1 + 1);
  }
  return result;
}

void *sub_2226222DC(void *result, uint64_t a2)
{
  _DWORD *result = a2;
  result[1] = 45;
  return result;
}

void *sub_2226222E8(void *result, uint64_t a2)
{
  _DWORD *result = a2;
  result[1] = 173;
  return result;
}

void *sub_2226222F4(void *result, uint64_t a2)
{
  _DWORD *result = a2;
  result[1] = 246;
  return result;
}

uint64_t *sub_222622304(uint64_t *a1, int a2)
{
  return a1;
}

void *sub_222622334(void *result, uint64_t a2)
{
  _DWORD *result = a2;
  result[1] = 14;
  return result;
}

uint64_t sub_222622340(uint64_t a1, uint64_t a2)
{
  return sub_2225F3A80((void *)(*(void *)a1 + 744), a2);
}

uint64_t sub_222622350(uint64_t a1)
{
  *(unsigned char *)(a1 + 48) = 0;
  return a1;
}

_DWORD *sub_22262238C(_DWORD *result, int a2, int a3)
{
  _DWORD *result = a2;
  result[1] = a3;
  return result;
}

void *sub_222622394(void *result, uint64_t a2)
{
  _DWORD *result = a2;
  result[1] = 9;
  return result;
}

uint64_t sub_2226223A0(void *a1, uint64_t a2)
{
  return sub_2225F39C4(*a1 + 624, a2);
}

void *sub_2226223B0(void *result, uint64_t a2)
{
  _DWORD *result = a2;
  result[1] = 4;
  return result;
}

uint64_t sub_2226223BC(const void **a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a2;
  v12[1] = a3;
  uint64_t v4 = (unsigned char *)sub_2225C3C70((uint64_t)v12);
  uint64_t result = sub_2225C3C78(v12);
  if (v4 != (unsigned char *)result)
  {
    uint64_t v6 = (unsigned char *)result;
    do
    {
      if (*v4 == 92)
      {
        int v7 = 0;
        if (v4[1] == 117) {
          int v8 = 4;
        }
        else {
          int v8 = 8;
        }
        uint64_t v9 = v4 + 2;
        uint64_t v10 = (v8 - 4);
        do
        {
          int v11 = *v9++;
          int v7 = sub_22261FF8C(v11) + 16 * v7;
          --v8;
        }
        while (v8);
        v4 += v10 + 5;
        uint64_t result = sub_222622498(v7, a1);
      }
      else
      {
        uint64_t result = sub_2225C52D8((uint64_t)a1, v4);
      }
      ++v4;
    }
    while (v4 != v6);
  }
  return result;
}

uint64_t sub_222622498(int a1, const void **a2)
{
  uint64_t v4 = v5;
  sub_2225CB87C(a1, (uint64_t *)&v4);
  return sub_2225C5A88(a2, v5, v4);
}

uint64_t sub_2226224E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  v45[0] = a2;
  v45[1] = a3;
  *(void *)a1 = a5;
  *(void *)(a1 + 8) = sub_2225C3C70((uint64_t)v45);
  *(void *)(a1 + 16) = sub_2225C3C78(v45);
  sub_2225CF1C4(a1 + 56);
  int v8 = *(unsigned __int8 **)(a1 + 8);
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 52) = 0;
  *(unsigned char *)(a1 + 54) = 0;
  *(void *)(a1 + 112) = 0;
  if (*v8 != 48)
  {
    *(_DWORD *)(a1 + 48) = 10;
    uint64_t v10 = sub_2226230F0(a1, v8);
    uint64_t v9 = v10;
    *(void *)(a1 + 40) = v10;
    if (v10 != *(unsigned __int8 **)(a1 + 16))
    {
      int v11 = *v10;
      if (sub_222623160(v11))
      {
        if ((v11 | 0x20) != 0x65)
        {
          unsigned int v12 = sub_222623178(a5, a4, (int)v9 - *(_DWORD *)(a1 + 8));
          sub_22261CABC(a5, v12, 649, (uint64_t)v44);
          sub_2225C3D0C(v43, *(void *)(a1 + 40), 1);
          sub_2225F3774(v44, v43[0], v43[1]);
          sub_2225F37F0(v44);
          *(unsigned char *)(a1 + 112) = 1;
          return a1;
        }
        goto LABEL_11;
      }
      if (v11 != 46)
      {
LABEL_11:
        if ((v11 | 0x20) == 0x65)
        {
          sub_222623190(a1, a4, (char *)v9, 1);
          uint64_t v14 = *(void *)(a1 + 40);
          uint64_t v15 = (char *)(v14 + 1);
          *(void *)(a1 + 40) = v14 + 1;
          *(unsigned char *)(a1 + 52) = 1;
          int v16 = *(unsigned __int8 *)(v14 + 1);
          if (v16 == 45 || v16 == 43)
          {
            uint64_t v15 = (char *)(v14 + 2);
            *(void *)(a1 + 40) = v14 + 2;
          }
          sub_222623190(a1, a4, v15, 0);
          unsigned __int8 v17 = sub_2226230F0(a1, *(unsigned __int8 **)(a1 + 40));
          if (v17 == *(unsigned __int8 **)(a1 + 40))
          {
            unsigned int v32 = sub_222623178(a5, a4, (int)v14 - *(_DWORD *)(a1 + 8));
            sub_22261CABC(a5, v32, 631, (uint64_t)v42);
            uint64_t v33 = (uint64_t *)v42;
            goto LABEL_85;
          }
          uint64_t v9 = v17;
          *(void *)(a1 + 40) = v17;
        }
        goto LABEL_17;
      }
      sub_222623190(a1, a4, (char *)v9, 1);
      long long v13 = (char *)(*(void *)(a1 + 40) + 1);
      *(void *)(a1 + 40) = v13;
      *(unsigned char *)(a1 + 53) = 1;
      sub_222623190(a1, a4, v13, 0);
      uint64_t v9 = sub_2226230F0(a1, *(unsigned __int8 **)(a1 + 40));
      *(void *)(a1 + 40) = v9;
    }
    int v11 = *v9;
    goto LABEL_11;
  }
  sub_222622B90(a1, a4);
  if (*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  uint64_t v9 = *(unsigned __int8 **)(a1 + 40);
LABEL_17:
  *(void *)(a1 + 32) = v9;
  sub_222623190(a1, a4, (char *)v9, 1);
  BOOL v18 = sub_222623248(a1);
  uint64_t v19 = *(char **)(a1 + 40);
  char v20 = *(char **)(a1 + 16);
  if (v19 == v20)
  {
    int v22 = 0;
    goto LABEL_78;
  }
  BOOL v21 = v18;
  int v22 = 0;
  uint64_t v23 = (unsigned char *)(a1 + 113);
  while (2)
  {
    int v24 = *v19;
    if (v24 <= 101)
    {
      switch(*v19)
      {
        case 'F':
          goto LABEL_22;
        case 'G':
        case 'K':
          goto LABEL_73;
        case 'H':
          goto LABEL_26;
        case 'I':
          goto LABEL_30;
        case 'J':
          goto LABEL_66;
        case 'L':
          goto LABEL_41;
        default:
          if (v24 != 85) {
            goto LABEL_73;
          }
          goto LABEL_52;
      }
    }
    switch(*v19)
    {
      case 'f':
LABEL_22:
        if (!v21 || *(unsigned char *)(a1 + 116) || *(unsigned char *)(a1 + 114)) {
          goto LABEL_73;
        }
        *(unsigned char *)(a1 + 116) = 1;
        goto LABEL_68;
      case 'g':
      case 'k':
        goto LABEL_73;
      case 'h':
LABEL_26:
        if (!v21 || *(unsigned char *)(a1 + 117) || *(unsigned char *)(a1 + 114)) {
          goto LABEL_73;
        }
        *(unsigned char *)(a1 + 117) = 1;
        goto LABEL_68;
      case 'i':
LABEL_30:
        if ((*(unsigned char *)sub_222608330(a5) & 8) == 0) {
          goto LABEL_64;
        }
        if (*(unsigned char *)(a1 + 114) || *(unsigned char *)(a1 + 115) || *(unsigned char *)(a1 + 119)) {
          goto LABEL_73;
        }
        int v25 = *(unsigned char **)(a1 + 40);
        int v26 = *(unsigned char **)(a1 + 16);
        if (v25 + 1 == v26) {
          goto LABEL_64;
        }
        break;
      case 'j':
        goto LABEL_66;
      case 'l':
LABEL_41:
        if (*(unsigned char *)(a1 + 114) || *(unsigned char *)(a1 + 115) || *(unsigned char *)(a1 + 116)) {
          goto LABEL_73;
        }
        if (v19 + 1 == v20 || v19[1] != *v19)
        {
          *(unsigned char *)(a1 + 114) = 1;
        }
        else
        {
          if (v21) {
            goto LABEL_73;
          }
          *(unsigned char *)(a1 + 115) = 1;
          ++v19;
        }
        goto LABEL_68;
      default:
        if (v24 != 117) {
          goto LABEL_73;
        }
LABEL_52:
        if (v21 || *v23) {
          goto LABEL_73;
        }
        *uint64_t v23 = 1;
        goto LABEL_68;
    }
    switch(v25[1])
    {
      case '1':
        if (v21 || v25 + 2 == v26) {
          goto LABEL_64;
        }
        int v27 = v25[2];
        if (v27 == 50)
        {
          if (v25 + 3 != v26 && v25[3] == 56)
          {
            uint64_t v37 = v25 + 4;
            *(void *)(a1 + 40) = v37;
            char v38 = 0x80;
            goto LABEL_88;
          }
LABEL_64:
          if ((*(unsigned char *)(sub_222608330(a5) + 1) & 1) != 0 && **(unsigned char **)(a1 + 40) == 105) {
            goto LABEL_73;
          }
LABEL_66:
          if (*(unsigned char *)(a1 + 118)) {
            goto LABEL_73;
          }
          *(unsigned char *)(a1 + 118) = 1;
          uint64_t v19 = *(char **)(a1 + 40);
          char v20 = *(char **)(a1 + 16);
          int v22 = (int)v19;
LABEL_68:
          *(void *)(a1 + 40) = ++v19;
          if (v19 == v20)
          {
LABEL_73:
            int v26 = *(unsigned char **)(a1 + 16);
            uint64_t v37 = *(unsigned char **)(a1 + 40);
            goto LABEL_74;
          }
          continue;
        }
        if (v27 != 54) {
          goto LABEL_64;
        }
        uint64_t v37 = v25 + 3;
        *(void *)(a1 + 40) = v37;
        char v38 = 16;
LABEL_88:
        *(unsigned char *)(a1 + 119) = v38;
LABEL_74:
        if (v37 != v26)
        {
          sub_2225C3D0C(v41, *(void *)(a1 + 32), &v26[-*(void *)(a1 + 32)]);
          sub_2226223BC((const void **)(a1 + 56), v41[0], v41[1]);
          uint64_t v28 = (unsigned char *)sub_222608330(a5);
          uint64_t v29 = sub_2225CE27C(a1 + 56);
          if (sub_222623268(v28, v29, v30))
          {
            *(_DWORD *)(a1 + 116) = 0;
            *(_DWORD *)uint64_t v23 = 0;
            *(unsigned char *)(a1 + 54) = 1;
            return a1;
          }
          unsigned int v34 = sub_222623178(a5, a4, *(_DWORD *)(a1 + 32) - *(_DWORD *)(a1 + 8));
          if (v21) {
            int v35 = 652;
          }
          else {
            int v35 = 653;
          }
          sub_22261CABC(a5, v34, v35, (uint64_t)v44);
          sub_2225C3D0C(v40, *(void *)(a1 + 32), *(void *)(a1 + 16) - *(void *)(a1 + 32));
          sub_2225F3774(v44, v40[0], v40[1]);
          uint64_t v33 = v44;
LABEL_85:
          sub_2225F37F0(v33);
          *(unsigned char *)(a1 + 112) = 1;
          return a1;
        }
LABEL_78:
        if (*(unsigned char *)(a1 + 118))
        {
          unsigned int v31 = sub_222623178(a5, a4, v22 - *(_DWORD *)(a1 + 8));
          sub_22261CABC(a5, v31, 784, (uint64_t)v39);
          sub_2225F37F0(v39);
        }
        return a1;
      case '3':
        if (v21 || v25 + 2 == v26 || v25[2] != 50) {
          goto LABEL_64;
        }
        uint64_t v37 = v25 + 3;
        *(void *)(a1 + 40) = v37;
        char v38 = 32;
        goto LABEL_88;
      case '6':
        if (v21 || v25 + 2 == v26 || v25[2] != 52) {
          goto LABEL_64;
        }
        uint64_t v37 = v25 + 3;
        *(void *)(a1 + 40) = v37;
        char v38 = 64;
        goto LABEL_88;
      case '8':
        if (v21) {
          goto LABEL_64;
        }
        uint64_t v37 = v25 + 2;
        *(void *)(a1 + 40) = v37;
        char v38 = 8;
        goto LABEL_88;
      default:
        goto LABEL_64;
    }
  }
}

uint64_t sub_222622B90(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = (unsigned char *)(v4 + 1);
  *(void *)(a1 + 40) = v4 + 1;
  int v6 = *(unsigned __int8 *)(v4 + 1);
  int v9 = *(unsigned __int8 *)(v4 + 2);
  int v7 = (unsigned __int8 *)(v4 + 2);
  int v8 = v9;
  unsigned int v10 = v6 & 0xFFFFFFDF;
  if (v10 != 88)
  {
    if (v10 == 66 && (v8 & 0xFE) == 0x30)
    {
      uint64_t v17 = *(void *)a1;
      if (*(unsigned char *)(sub_222608330(*(void *)a1) + 1))
      {
        int v18 = 859;
      }
      else if ((*(unsigned char *)sub_222608330(*(void *)a1) & 0x40) != 0)
      {
        int v18 = 775;
      }
      else
      {
        int v18 = 774;
      }
      sub_22261CABC(v17, a2, v18, (uint64_t)v59);
      sub_2225F37F0(v59);
      unsigned int v32 = (unsigned char *)(*(void *)(a1 + 40) + 1);
      *(void *)(a1 + 40) = v32;
      *(_DWORD *)(a1 + 48) = 2;
      *(void *)(a1 + 24) = v32;
      uint64_t result = (uint64_t)sub_2226234F8(a1, v32);
      *(void *)(a1 + 40) = result;
      if (result == *(void *)(a1 + 16)) {
        return result;
      }
      int v33 = result;
      uint64_t result = sub_222623160(*(unsigned __int8 *)result);
      if (!result) {
        return result;
      }
      uint64_t v34 = *(void *)a1;
      unsigned int v35 = sub_222623178(*(void *)a1, a2, v33 - *(_DWORD *)(a1 + 8));
      sub_22261CABC(v34, v35, 646, (uint64_t)v58);
      sub_2225C3D0C(v57, *(void *)(a1 + 40), 1);
      uint64_t v36 = v57[0];
      uint64_t v37 = v57[1];
LABEL_44:
      sub_2225F3774(v58, v36, v37);
      uint64_t result = sub_2225F37F0(v58);
      *(unsigned char *)(a1 + 112) = 1;
      return result;
    }
LABEL_15:
    *(_DWORD *)(a1 + 48) = 8;
    *(void *)(a1 + 24) = v5;
    uint64_t result = (uint64_t)sub_22262355C(a1, v5);
    *(void *)(a1 + 40) = result;
    if (result == *(void *)(a1 + 16)) {
      return result;
    }
    uint64_t v19 = (unsigned __int8 *)result;
    int v20 = *(unsigned __int8 *)result;
    if (sub_2225F4928(v20))
    {
      BOOL v21 = sub_2226230F0(a1, v19);
      unsigned int v22 = *v21 - 46;
      BOOL v23 = v22 > 0x37;
      uint64_t v24 = (1 << v22) & 0x80000000800001;
      if (v23 || v24 == 0)
      {
        uint64_t v19 = *(unsigned __int8 **)(a1 + 40);
      }
      else
      {
        uint64_t v19 = v21;
        *(void *)(a1 + 40) = v21;
        *(_DWORD *)(a1 + 48) = 10;
      }
      int v20 = *v19;
    }
    uint64_t result = sub_222623160(v20);
    if (result)
    {
      if ((v20 | 0x20) != 0x65)
      {
        uint64_t v43 = *(void *)a1;
        unsigned int v44 = sub_222623178(*(void *)a1, a2, (int)v19 - *(_DWORD *)(a1 + 8));
        sub_22261CABC(v43, v44, 650, (uint64_t)v58);
        sub_2225C3D0C(v56, *(void *)(a1 + 40), 1);
        uint64_t v36 = v56[0];
        uint64_t v37 = v56[1];
        goto LABEL_44;
      }
    }
    else if (v20 == 46)
    {
      *(void *)(a1 + 40) = v19 + 1;
      *(_DWORD *)(a1 + 48) = 10;
      *(unsigned char *)(a1 + 53) = 1;
      sub_222623190(a1, a2, (char *)v19 + 1, 0);
      uint64_t result = (uint64_t)sub_2226230F0(a1, *(unsigned __int8 **)(a1 + 40));
      uint64_t v19 = (unsigned __int8 *)result;
      *(void *)(a1 + 40) = result;
      int v20 = *(unsigned __int8 *)result;
    }
    if ((v20 | 0x20) != 0x65) {
      return result;
    }
    sub_222623190(a1, a2, (char *)v19, 1);
    uint64_t v45 = *(void *)(a1 + 40);
    uint64_t v46 = (unsigned __int8 *)(v45 + 1);
    *(void *)(a1 + 40) = v45 + 1;
    *(_DWORD *)(a1 + 48) = 10;
    *(unsigned char *)(a1 + 52) = 1;
    int v47 = *(unsigned __int8 *)(v45 + 1);
    if (v47 == 45 || v47 == 43)
    {
      uint64_t v46 = (unsigned __int8 *)(v45 + 2);
      *(void *)(a1 + 40) = v45 + 2;
    }
    __int16 v48 = sub_2226230F0(a1, v46);
    int v49 = *(char **)(a1 + 40);
    if (v48 != (unsigned __int8 *)v49)
    {
      int v50 = v48;
      uint64_t result = sub_222623190(a1, a2, v49, 0);
      *(void *)(a1 + 40) = v50;
      return result;
    }
    uint64_t v51 = *(void *)a1;
    unsigned int v52 = sub_222623178(*(void *)a1, a2, (int)v45 - *(_DWORD *)(a1 + 8));
    sub_22261CABC(v51, v52, 631, (uint64_t)v55);
    int v40 = v55;
    goto LABEL_55;
  }
  if (!sub_222623160(v8) && v8 != 46) {
    goto LABEL_15;
  }
  *(void *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = 16;
  *(void *)(a1 + 24) = v7;
  uint64_t result = (uint64_t)sub_222623488(a1, v7);
  uint64_t v12 = result;
  *(void *)(a1 + 40) = result;
  uint64_t v13 = *(void *)(a1 + 24);
  if (result == *(void *)(a1 + 16) || *(unsigned char *)result != 46)
  {
    if (result == v13)
    {
      unsigned int v15 = a2;
      goto LABEL_36;
    }
    int v16 = (char *)result;
  }
  else
  {
    uint64_t v14 = result + 1;
    *(void *)(a1 + 40) = result + 1;
    *(unsigned char *)(a1 + 53) = 1;
    unsigned int v15 = a2;
    sub_222623190(a1, a2, (char *)(result + 1), 0);
    uint64_t result = (uint64_t)sub_222623488(a1, *(unsigned __int8 **)(a1 + 40));
    int v16 = (char *)result;
    *(void *)(a1 + 40) = result;
    if (v12 == v13 && v14 == result)
    {
      LODWORD(v12) = v12 + 1;
LABEL_36:
      uint64_t v38 = *(void *)a1;
      unsigned int v39 = sub_222623178(*(void *)a1, v15, (int)v12 - *(_DWORD *)(a1 + 8));
      sub_22261CABC(v38, v39, 644, (uint64_t)v63);
      int v40 = v63;
LABEL_55:
      uint64_t result = sub_2225F37F0(v40);
      *(unsigned char *)(a1 + 112) = 1;
      return result;
    }
  }
  if ((*v16 | 0x20) != 0x70)
  {
    if (!*(unsigned char *)(a1 + 53)) {
      return result;
    }
    uint64_t v41 = *(void *)a1;
    unsigned int v42 = sub_222623178(*(void *)a1, a2, (int)v16 - *(_DWORD *)(a1 + 8));
    sub_22261CABC(v41, v42, 645, (uint64_t)v60);
    int v40 = v60;
    goto LABEL_55;
  }
  sub_222623190(a1, a2, v16, 1);
  uint64_t v26 = *(void *)(a1 + 40);
  int v27 = (unsigned __int8 *)(v26 + 1);
  *(void *)(a1 + 40) = v26 + 1;
  *(unsigned char *)(a1 + 52) = 1;
  int v28 = *(unsigned __int8 *)(v26 + 1);
  if (v28 == 45 || v28 == 43)
  {
    int v27 = (unsigned __int8 *)(v26 + 2);
    *(void *)(a1 + 40) = v26 + 2;
  }
  uint64_t v29 = sub_2226230F0(a1, v27);
  uint64_t v30 = *(char **)(a1 + 40);
  if (v29 == (unsigned __int8 *)v30)
  {
    uint64_t v53 = *(void *)a1;
    unsigned int v54 = sub_222623178(*(void *)a1, a2, (int)v26 - *(_DWORD *)(a1 + 8));
    sub_22261CABC(v53, v54, 631, (uint64_t)v62);
    int v40 = v62;
    goto LABEL_55;
  }
  unsigned int v31 = v29;
  sub_222623190(a1, a2, v30, 0);
  *(void *)(a1 + 40) = v31;
  uint64_t result = sub_222608330(*(void *)a1);
  if ((*(unsigned char *)(result + 3) & 8) == 0)
  {
    sub_22261CABC(*(void *)a1, a2, 783, (uint64_t)v61);
    return sub_2225F37F0(v61);
  }
  return result;
}

unsigned __int8 *sub_2226230F0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(unsigned __int8 **)(a1 + 16);
  if (v3 == a2) {
    return v2;
  }
  do
  {
    signed __int8 v5 = *v2;
    if ((sub_2225F4928(*v2) & 1) == 0)
    {
      if (!sub_22262347C(v5)) {
        return v2;
      }
      uint64_t v3 = *(unsigned __int8 **)(a1 + 16);
    }
    ++v2;
  }
  while (v2 != v3);
  return v3;
}

BOOL sub_222623160(int a1)
{
  return (word_2226CBA58[a1] & 0x18) != 0;
}

uint64_t sub_222623178(uint64_t a1, unsigned int a2, int a3)
{
  return sub_22261BFC8(a2, a3, *(void *)(a1 + 48), *(void **)(a1 + 24));
}

uint64_t sub_222623190(uint64_t result, unsigned int a2, char *a3, int a4)
{
  signed __int8 v5 = a3;
  uint64_t v7 = result;
  if (a4 == 1)
  {
    if (*(char **)(result + 8) == a3) {
      return result;
    }
    signed __int8 v5 = a3 - 1;
  }
  else if (*(char **)(result + 16) == a3)
  {
    return result;
  }
  uint64_t result = sub_22262347C(*v5);
  if (result)
  {
    uint64_t v8 = *(void *)v7;
    unsigned int v9 = sub_222623178(*(void *)v7, a2, (int)v5 - *(_DWORD *)(v7 + 8));
    sub_22261CABC(v8, v9, 628, (uint64_t)v10);
    sub_222622304(v10, a4);
    return sub_2225F37F0(v10);
  }
  return result;
}

BOOL sub_222623248(uint64_t a1)
{
  return *(unsigned char *)(a1 + 53) || *(unsigned char *)(a1 + 52) != 0;
}

uint64_t sub_222623268(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  if ((*a1 & 0x80) == 0 || sub_2225CF1E0((uint64_t)&v13)) {
    return 0;
  }
  if (sub_2225CC124(&v13, 0) == 95) {
    return 1;
  }
  if ((a1[1] & 1) == 0) {
    return 0;
  }
  sub_2225D934C(v12, v13, v14);
  char v11 = 1;
  uint64_t v5 = sub_222623368((uint64_t)v12, "h", (unsigned __int16 *)"min", "s", (uint64_t)&v11);
  char v10 = 1;
  uint64_t v6 = sub_2226233C4(v5, (unsigned __int16 *)"ms", (unsigned __int16 *)"us", (unsigned __int16 *)"ns", (uint64_t)&v10);
  char v9 = 1;
  uint64_t v7 = sub_222623420(v6, (unsigned __int16 *)"il", "i", (unsigned __int16 *)"if", (uint64_t)&v9);
  unsigned __int8 v8 = 0;
  return sub_2225F2DA4(v7, &v8);
}

uint64_t sub_222623360(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  return sub_2226224E0(a1, a2, a3, a4, a5);
}

uint64_t sub_222623368(uint64_t a1, unsigned __int8 *a2, unsigned __int16 *a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v8 = sub_222625A78(a1, a2, a5);
  uint64_t v9 = sub_2225D94AC(v8, a3, a5);

  return sub_222625A78(v9, a4, a5);
}

uint64_t sub_2226233C4(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3, unsigned __int16 *a4, uint64_t a5)
{
  uint64_t v8 = sub_2225DB4FC(a1, a2, a5);
  uint64_t v9 = sub_2225DB4FC(v8, a3, a5);

  return sub_2225DB4FC(v9, a4, a5);
}

uint64_t sub_222623420(uint64_t a1, unsigned __int16 *a2, unsigned __int8 *a3, unsigned __int16 *a4, uint64_t a5)
{
  uint64_t v8 = sub_2225DB4FC(a1, a2, a5);
  uint64_t v9 = sub_222625A78(v8, a3, a5);

  return sub_2225DB4FC(v9, a4, a5);
}

BOOL sub_22262347C(int a1)
{
  return a1 == 39;
}

unsigned __int8 *sub_222623488(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(unsigned __int8 **)(a1 + 16);
  if (v3 == a2) {
    return v2;
  }
  do
  {
    signed __int8 v5 = *v2;
    if (!sub_222623160(*v2))
    {
      if (!sub_22262347C(v5)) {
        return v2;
      }
      uint64_t v3 = *(unsigned __int8 **)(a1 + 16);
    }
    ++v2;
  }
  while (v2 != v3);
  return v3;
}

unsigned char *sub_2226234F8(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = a2;
  uint64_t result = *(unsigned char **)(a1 + 16);
  if (result == a2) {
    return v2;
  }
  do
  {
    if ((*v2 & 0xFE) != 0x30)
    {
      if (!sub_22262347C((char)*v2)) {
        return v2;
      }
      uint64_t result = *(unsigned char **)(a1 + 16);
    }
    ++v2;
  }
  while (v2 != result);
  return result;
}

unsigned char *sub_22262355C(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = a2;
  uint64_t result = *(unsigned char **)(a1 + 16);
  if (result == a2) {
    return v2;
  }
  do
  {
    if ((*v2 & 0xF8) != 0x30)
    {
      if (!sub_22262347C((char)*v2)) {
        return v2;
      }
      uint64_t result = *(unsigned char **)(a1 + 16);
    }
    ++v2;
  }
  while (v2 != result);
  return result;
}

uint64_t sub_2226235C0(uint64_t a1, unsigned int *a2)
{
  signed __int8 v5 = *(char **)(a1 + 24);
  uint64_t v4 = *(char **)(a1 + 32);
  if (sub_22262379C(*(_DWORD *)(a1 + 48), v4 - v5))
  {
    if (v5 == v4)
    {
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = 0;
      do
      {
        if (!sub_22262347C(*v5))
        {
          uint64_t v7 = v6 * *(unsigned int *)(a1 + 48);
          uint64_t v6 = v7 + sub_22261FF8C(*v5);
        }
        ++v5;
      }
      while (v5 != *(char **)(a1 + 32));
    }
    sub_2225C6D38((uint64_t)a2, v6);
    LOBYTE(v11) = sub_2225C54BC(a2) != v6;
  }
  else
  {
    sub_2225C6D38((uint64_t)a2, 0);
    uint64_t v8 = *(char **)(a1 + 24);
    uint64_t v9 = sub_2225C3B40(a2);
    sub_2225C3A6C(v21, v9, *(unsigned int *)(a1 + 48), 0);
    uint64_t v10 = sub_2225C3B40(a2);
    sub_2225C3A6C(v20, v10, 0, 0);
    sub_2225C3B80(v19, a2);
    LOBYTE(v11) = 0;
    if ((unint64_t)v8 < *(void *)(a1 + 32))
    {
      int v11 = 0;
      do
      {
        uint64_t v12 = v8;
        while (1)
        {
          int v13 = *v12++;
          if (!sub_22262347C(v13)) {
            break;
          }
          uint64_t v8 = v12;
          if ((unint64_t)v12 >= *(void *)(a1 + 32)) {
            goto LABEL_15;
          }
        }
        int v14 = *v8++;
        unsigned int v15 = sub_22261FF8C(v14);
        sub_2225C6D38((uint64_t)v20, v15);
        sub_2225C7E1C((uint64_t)v19, (uint64_t)a2);
        sub_2225C6FA4((uint64_t)a2, (uint64_t)v21);
        sub_2225C8AA0(a2, (uint64_t)v21, (uint64_t)v18);
        int v16 = sub_2225C9E08((uint64_t)v18, (uint64_t)v19);
        sub_2225C2F10(v18);
        sub_2225C6E3C((uint64_t)a2, (uint64_t)v20);
        v11 |= v16 | sub_2225C7750((uint64_t)a2, (uint64_t)v20);
      }
      while ((unint64_t)v8 < *(void *)(a1 + 32));
    }
LABEL_15:
    sub_2225C2F10(v19);
    sub_2225C2F10(v20);
    sub_2225C2F10(v21);
  }
  return v11 & 1;
}

BOOL sub_22262379C(int a1, unsigned int a2)
{
  HIDWORD(v2) = a1;
  LODWORD(v2) = a1 - 2;
  return dword_2226D10D0[(int)(v2 >> 1)] > a2;
}

char *sub_2226237C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6)
{
  int v11 = (const void **)(a1 + 16);
  sub_2225CF1C4(a1 + 16);
  *(unsigned char *)(a1 + 11) = 0;
  uint64_t v12 = (unsigned char *)(a1 + 11);
  *(_WORD *)(a1 + 8) = a6;
  int v69 = a2;
  if (a6 == 9) {
    uint64_t v13 = a2;
  }
  else {
    uint64_t v13 = a2 + 1;
  }
  int v14 = (unsigned __int8 *)(v13 + 1);
  v86[0] = (char *)(v13 + 1);
  if (*(unsigned char *)(a3 - 1) != 39)
  {
    uint64_t v15 = 0;
    do
      int v16 = *(unsigned __int8 *)(a3 + v15-- - 2);
    while (v16 != 39);
    uint64_t v17 = a3 + v15;
    sub_2225C3D0C(v85, a3 + v15, -v15);
    sub_2226223BC(v11, v85[0], v85[1]);
    *(_DWORD *)(a1 + 72) = a3 - v69 + v15;
    int v14 = (unsigned __int8 *)v86[0];
    a3 = v17;
  }
  int v18 = (unsigned __int8 *)(a3 - 1);
  uint64_t v19 = (const void **)sub_2225DC810(v84);
  sub_222623DDC(v19, a3 - 1 - v14);
  int v20 = (unsigned int *)sub_2225CC180((uint64_t)v84);
  uint64_t v83 = v20;
  uint64_t v21 = sub_2225CC184((uint64_t)v84);
  uint64_t v70 = a1;
  int v22 = *(unsigned __int16 *)(a1 + 8);
  switch(v22)
  {
    case 12:
      unsigned int v24 = 1114111;
      break;
    case 11:
      unsigned int v24 = 0xFFFF;
      break;
    case 10:
      uint64_t v23 = sub_2225CDCF4(a5);
      unsigned int v24 = 0xFFFFFFFF >> -(char)sub_222623ED0(v23);
      break;
    default:
      unsigned int v24 = 127;
      break;
  }
  if (v14 != v18)
  {
    int v67 = (unsigned __int8 *)(a3 - 2);
    unint64_t v68 = (unint64_t)&v20[v21];
    do
    {
      if (*v14 == 92)
      {
        if ((v14[1] | 0x20) == 0x75)
        {
          LOWORD(v73[0]) = 0;
          int v25 = (int *)v83;
          uint64_t v26 = sub_2225E8DD0(a5);
          sub_2225F38E0((uint64_t)v80, a4, v26);
          uint64_t v27 = sub_2225C5B40(a5);
          int v28 = (uint64_t *)sub_222608330(a5);
          if (sub_222623EE8(v69, v86, v18, v25, (__int16 *)v73, v80[0], v80[1], v27, v28))
          {
            if (*v83 > v24)
            {
              *uint64_t v12 = 1;
              sub_22261CABC(a5, a4, 625, (uint64_t)v79);
              sub_2225F37F0(v79);
            }
          }
          else
          {
            *uint64_t v12 = 1;
          }
          ++v83;
        }
        else
        {
          int v38 = *(unsigned __int16 *)(v70 + 8);
          uint64_t v39 = sub_2225CDCF4(a5);
          int v40 = sub_2226241E8(v38, v39);
          uint64_t v41 = sub_2225E8DD0(a5);
          sub_2225F38E0((uint64_t)v78, a4, v41);
          uint64_t v42 = sub_2225C5B40(a5);
          uint64_t v43 = (void *)sub_222608330(a5);
          unsigned int v44 = sub_222624258(v69, v86, (char *)v18, v12, v78[0], v78[1], v40, v42, v43);
          uint64_t v45 = v83++;
          unsigned int *v45 = v44;
        }
      }
      else
      {
        v73[0] = v14;
        uint64_t v29 = v14 + 1;
        while (v29 != v18)
        {
          int v30 = *v29++;
          if (v30 == 92)
          {
            unsigned int v31 = v29 - 2;
            unsigned int v32 = (char *)(v29 - 1);
            goto LABEL_27;
          }
        }
        unsigned int v31 = v67;
        unsigned int v32 = (char *)v18;
LABEL_27:
        v86[0] = v32;
        int v33 = v83;
        if (sub_2225CB608(v73, (unsigned __int8 *)v32, &v83, v68, 0))
        {
          BOOL v34 = sub_222623ED8(v70);
          if (v34) {
            int v35 = 854;
          }
          else {
            int v35 = 623;
          }
          sub_22261CABC(a5, a4, v35, (uint64_t)v82);
          sub_2225F37F0(v82);
          if (v34)
          {
            v73[0] = v14;
            uint64_t v83 = v33;
            if (v14 != (unsigned __int8 *)v32)
            {
              do
              {
                *int v33 = *v14;
                uint64_t v36 = v73[0];
                int v14 = ++v73[0];
                int v33 = ++v83;
              }
              while (v36 != v31);
            }
          }
          else
          {
            *uint64_t v12 = 1;
          }
        }
        else
        {
          uint64_t v37 = v83;
          while (v33 < v37)
          {
            if (*v33 > v24)
            {
              *uint64_t v12 = 1;
              sub_22261CABC(a5, a4, 625, (uint64_t)v81);
              sub_2225F37F0(v81);
              uint64_t v37 = v83;
            }
            ++v33;
          }
        }
      }
      int v14 = (unsigned __int8 *)v86[0];
    }
    while ((unsigned __int8 *)v86[0] != v18);
  }
  uint64_t v46 = v83;
  unint64_t v47 = (unint64_t)v46 - sub_2225CC180((uint64_t)v84);
  unint64_t v48 = v47 >> 2;
  if ((v47 >> 2) < 2)
  {
    char v55 = 0;
    int v49 = (char *)v70;
  }
  else
  {
    int v49 = (char *)v70;
    if (sub_222624778(v70))
    {
      unsigned int v50 = a4;
      uint64_t v51 = v77;
      unsigned int v52 = v77;
      uint64_t v53 = a5;
      int v54 = 874;
    }
    else
    {
      BOOL v56 = sub_222623ED8(v70);
      if (v48 == 4 && v56)
      {
        unsigned int v50 = a4;
        uint64_t v51 = v76;
        unsigned int v52 = v76;
        uint64_t v53 = a5;
        int v54 = 782;
      }
      else
      {
        BOOL v57 = sub_222623ED8(v70);
        unsigned int v50 = a4;
        if (v57)
        {
          uint64_t v51 = v75;
          unsigned int v52 = v75;
          uint64_t v53 = a5;
          int v54 = 790;
        }
        else
        {
          uint64_t v51 = v74;
          unsigned int v52 = v74;
          uint64_t v53 = a5;
          int v54 = 690;
        }
      }
    }
    sub_22261CABC(v53, v50, v54, (uint64_t)v52);
    sub_2225F37F0(v51);
    char v55 = 1;
  }
  v49[10] = v55;
  uint64_t v58 = sub_2225CDCF4(a5);
  uint64_t v59 = sub_2226135D8(v58);
  sub_2225C3A6C(v73, v59, 0, 0);
  if (sub_222623ED8((uint64_t)v49) && sub_222624788((uint64_t)v49))
  {
    sub_2225C6D38((uint64_t)v73, 0);
    uint64_t v60 = (v47 >> 2);
    if (v60)
    {
      uint64_t v61 = 0;
      unsigned __int8 v62 = 0;
      do
      {
        v62 |= sub_2225C5C50((uint64_t)v73) < 8;
        sub_2225C3A70((unsigned int *)v73, 8);
        __int16 v63 = (unsigned __int8 *)sub_2225F396C((uint64_t)v84, v61);
        sub_2225C8C18((unsigned int *)v73, *v63, (uint64_t)v72);
        sub_2225C3BE8((uint64_t)v73, v72);
        sub_2225C2F10(v72);
        ++v61;
      }
      while (v60 != v61);
      if (((*v12 == 0) & v62) == 1)
      {
        sub_22261CABC(a5, a4, 858, (uint64_t)v71);
        sub_2225F37F0(v71);
      }
    }
  }
  else if (v48)
  {
    sub_2225C6D38((uint64_t)v73, *(v83 - 1));
  }
  *(void *)int v49 = sub_2225C54BC(v73);
  BOOL v64 = sub_222623ED8((uint64_t)v49);
  if (v48 == 1 && v64 && *v49 < 0 && (*(_WORD *)(sub_222608330(a5) + 16) & 0x800) != 0) {
    *(void *)int v49 = *v49;
  }
  sub_2225C2F10(v73);
  sub_2225C56C4(v84);
  return v49;
}

unint64_t sub_222623DDC(const void **a1, unsigned int a2)
{
  unint64_t v3 = a2;
  if (sub_2225CC184((uint64_t)a1) <= (unint64_t)a2)
  {
    unint64_t result = sub_2225CC184((uint64_t)a1);
    if (result >= v3) {
      return result;
    }
    if (sub_222625AEC((uint64_t)a1) < v3) {
      sub_2225CC474(a1, v3);
    }
    uint64_t v7 = (void *)sub_2225C3D04((uint64_t)a1);
    uint64_t v8 = sub_2225C3C70((uint64_t)a1) + 4 * v3;
    if (v7 != (void *)v8) {
      bzero(v7, ((v8 - (void)v7 - 4) & 0xFFFFFFFFFFFFFFFCLL) + 4);
    }
  }
  else
  {
    uint64_t v4 = sub_2225C3C70((uint64_t)a1) + 4 * v3;
    uint64_t v5 = sub_2225C3D04((uint64_t)a1);
    nullsub_1(v4, v5);
  }
  uint64_t v9 = sub_2225C3C70((uint64_t)a1) + 4 * v3;

  return sub_2225C5B6C((uint64_t)a1, v9);
}

uint64_t sub_222623ED0(uint64_t a1)
{
  return sub_2226135E8(a1, *(_DWORD *)(a1 + 236));
}

BOOL sub_222623ED8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 8) == 9;
}

uint64_t sub_222623EE8(int a1, char **a2, unsigned __int8 *a3, int *a4, __int16 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v13 = *a2;
  int v14 = (unsigned __int8 *)(*a2 + 2);
  *a2 = (char *)v14;
  if (v14 == a3 || !sub_222623160(*v14))
  {
    if (!a8) {
      return 0;
    }
    sub_2226256F4(a8, a9, a6, a7, a1, (int)v13, (int)v14, 642, (uint64_t)v37);
    sub_2225C3D0C(v36, *a2 - 1, 1);
    sub_2225F3774(v37, v36[0], v36[1]);
    unsigned int v24 = v37;
LABEL_29:
    sub_2225F37F0(v24);
    return 0;
  }
  if (v13[1] == 117) {
    __int16 v18 = 4;
  }
  else {
    __int16 v18 = 8;
  }
  *a5 = v18;
  uint64_t v19 = *a2;
  if (*a2 == (char *)a3)
  {
    LODWORD(v19) = a3;
LABEL_27:
    if (!a8) {
      return 0;
    }
    sub_2226256F4(a8, a9, a6, a7, a1, (int)v13, (int)v19, 763, (uint64_t)v35);
    unsigned int v24 = (uint64_t *)v35;
    goto LABEL_29;
  }
  do
  {
    int v20 = sub_22261FF8C(*v19);
    if (v20 == -1) {
      goto LABEL_27;
    }
    *a4 = v20 | (16 * *a4);
    uint64_t v19 = *a2 + 1;
    *a2 = v19;
    --v18;
  }
  while (v19 != (char *)a3 && v18 != 0);
  if (v18) {
    goto LABEL_27;
  }
  unsigned int v22 = *a4;
  if (HIWORD(*a4) > 0x10u || (v22 & 0xFFFFF800) == 0xD800)
  {
    if (!a8) {
      return 0;
    }
    sub_2226256F4(a8, a9, a6, a7, a1, (int)v13, (int)v19, 764, (uint64_t)v34);
    unsigned int v24 = (uint64_t *)v34;
    goto LABEL_29;
  }
  if (v22 <= 0x9F && (v22 - 36 > 0x3C || ((1 << (v22 - 36)) & 0x1000000010000001) == 0))
  {
    uint64_t v25 = *a9;
    if (a8)
    {
      char v33 = *a4;
      if (v22 - 32 > 0x5E)
      {
        if ((v25 & 0x80) != 0) {
          int v28 = 866;
        }
        else {
          int v28 = 761;
        }
        sub_2226256F4(a8, a9, a6, a7, a1, (int)v13, (int)v19, v28, (uint64_t)v31);
        uint64_t v27 = (uint64_t *)v31;
      }
      else
      {
        if ((v25 & 0x80) != 0) {
          int v26 = 867;
        }
        else {
          int v26 = 762;
        }
        sub_2226256F4(a8, a9, a6, a7, a1, (int)v13, (int)v19, v26, (uint64_t)v37);
        sub_2225C3D0C(v32, &v33, 1);
        sub_2225F3774(v37, v32[0], v32[1]);
        uint64_t v27 = v37;
      }
      sub_2225F37F0(v27);
    }
    if ((v25 & 0x80) == 0) {
      return 0;
    }
  }
  if ((*a9 & 0x40) != 0) {
    return 1;
  }
  uint64_t result = 1;
  if (a8 && (*a9 & 1) == 0)
  {
    sub_2226256F4(a8, a9, a6, a7, a1, (int)v13, (int)*a2, 913, (uint64_t)v30);
    sub_2225F37F0(v30);
    return 1;
  }
  return result;
}

uint64_t sub_2226241E8(int a1, uint64_t a2)
{
  switch(a1)
  {
    case 10:
    case 14:
      uint64_t result = sub_222623ED0(a2);
      break;
    case 11:
    case 17:
      uint64_t result = sub_2226258F0(a2);
      break;
    case 12:
    case 18:
      uint64_t result = sub_2226258F8(a2);
      break;
    case 15:
      __break(1u);
      JUMPOUT(0x222624230);
    default:
      uint64_t result = sub_2225E58B4();
      break;
  }
  return result;
}

uint64_t sub_222624258(int a1, char **a2, char *a3, unsigned char *a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, void *a9)
{
  int v14 = a1;
  uint64_t v15 = *a2;
  int v16 = *a2 + 2;
  *a2 = v16;
  unint64_t v17 = v15[1];
  if ((int)v17 <= 68)
  {
    if ((int)v17 <= 39)
    {
      if (v17 == 34) {
        return v17;
      }
      if (v17 != 37)
      {
        if (v17 == 39) {
          return v17;
        }
        goto LABEL_31;
      }
    }
    else
    {
      if ((v17 - 48) < 8)
      {
        uint64_t v18 = 0;
        LODWORD(v17) = 0;
        do
        {
          uint64_t v19 = &v15[v18 + 2];
          *a2 = v19;
          unint64_t v17 = (v15[v18 + 1] - 48) | (8 * v17);
          if (v19 == a3 || v18 > 1) {
            break;
          }
          ++v18;
        }
        while ((*v19 & 0xF8) == 0x30);
        if (a7 != 32 && v17 >> a7)
        {
          if (a8)
          {
            sub_2226256F4(a8, a9, a5, a6, a1, (int)v15, (int)v19, 694, (uint64_t)v43);
            sub_2225F37F0(v43);
          }
          return v17 & (0xFFFFFFFF >> -(char)a7);
        }
        return v17;
      }
      if (v17 != 40)
      {
        if (v17 == 63) {
          return v17;
        }
LABEL_31:
        if (!a8) {
          return v17;
        }
        uint64_t v24 = a6;
        if (!sub_222625900(v15[1]))
        {
          sub_2226256F4(a8, a9, a5, v24, a1, (int)v15, (int)v16, 817, (uint64_t)v39);
          sub_22262591C(v17, (uint64_t)&v37);
          sub_2225D1E74("x", &v37, (uint64_t)&v41);
          sub_2225CCBF8(v38, &v41);
          sub_2225F3774(v39, v38[0], v38[1]);
          std::string::~string(&v41);
          std::string::~string(&v37);
          uint64_t v23 = (std::string *)v39;
          goto LABEL_27;
        }
        sub_2226256F4(a8, a9, a5, v24, a1, (int)v15, (int)v16, 817, (uint64_t)&v37);
        sub_2225D496C(&v41, 1, v17);
        sub_2225CCBF8(v40, &v41);
        uint64_t v21 = v40[0];
        uint64_t v22 = v40[1];
LABEL_26:
        sub_2225F3774((uint64_t *)&v37, v21, v22);
        std::string::~string(&v41);
        uint64_t v23 = &v37;
LABEL_27:
        sub_2225F37F0(v23);
        return v17;
      }
    }
LABEL_24:
    if (!a8) {
      return v17;
    }
    sub_2226256F4(a8, a9, a5, a6, a1, (int)v15, (int)v16, 793, (uint64_t)&v37);
    sub_2225D496C(&v41, 1, v17);
    sub_2225CCBF8(v42, &v41);
    uint64_t v21 = v42[0];
    uint64_t v22 = v42[1];
    goto LABEL_26;
  }
  switch(v15[1])
  {
    case 'n':
      return 10;
    case 'o':
    case 'p':
    case 'q':
    case 's':
    case 'u':
    case 'w':
    case 'y':
    case 'z':
      goto LABEL_31;
    case 'r':
      return 13;
    case 't':
      return 9;
    case 'v':
      return 11;
    case 'x':
      if (v16 == a3 || (v35 = a6, v27 = sub_222623160(*v16), a6 = v35, int v14 = a1, !v27))
      {
        if (a8)
        {
          sub_2226256F4(a8, a9, a5, a6, v14, (int)v15, (int)v16, 642, (uint64_t)&v41);
          sub_22260A5E8((uint64_t *)&v41, (uint64_t)"x");
          sub_2225F37F0(&v41);
        }
        unint64_t v17 = 0;
        *a4 = 1;
        return v17;
      }
      unsigned int v28 = 0;
      char v29 = 0;
      break;
    case '{':
      goto LABEL_24;
    default:
      if (v17 != 69) {
        goto LABEL_31;
      }
      if (a8)
      {
        sub_2226256F4(a8, a9, a5, a6, a1, (int)v15, (int)v16, 793, (uint64_t)&v41);
        sub_22260A5E8((uint64_t *)&v41, (uint64_t)"E");
        sub_2225F37F0(&v41);
      }
      return 27;
  }
  while (1)
  {
    int v30 = sub_22261FF8C(*v16);
    if (v30 == -1) {
      break;
    }
    int v31 = v30 | (16 * v28);
    v29 |= (v28 & 0xF0000000) != 0;
    *a2 = ++v16;
    unsigned int v28 = v31;
    if (v16 == a3)
    {
      unsigned int v28 = v31;
      LODWORD(v16) = a3;
      break;
    }
  }
  unsigned int v32 = v28 & (0xFFFFFFFF >> -(char)a7);
  if (v28 >> a7) {
    char v33 = 1;
  }
  else {
    char v33 = v29;
  }
  if (!(v28 >> a7)) {
    unsigned int v32 = v28;
  }
  if (a7 == 32)
  {
    char v33 = v29;
    unint64_t v17 = v28;
  }
  else
  {
    unint64_t v17 = v32;
  }
  if (a8 && (v33 & 1) != 0)
  {
    sub_2226256F4(a8, a9, a5, v35, a1, (int)v15, (int)v16, 643, (uint64_t)v44);
    uint64_t v23 = (std::string *)v44;
    goto LABEL_27;
  }
  return v17;
}

BOOL sub_222624778(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 8) == 10;
}

uint64_t sub_222624788(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 10);
}

char *sub_222624790(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6)
{
  return sub_2226237C0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_222624798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)a1 = sub_2225E8DD0(a4);
  *(void *)(a1 + 8) = sub_222608330(a4);
  *(void *)(a1 + 16) = sub_2225CDCF4(a4);
  if (a5) {
    uint64_t v10 = sub_2225C5B40(a4);
  }
  else {
    uint64_t v10 = 0;
  }
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 38) = 0;
  uint64_t v11 = sub_22262484C(a1 + 48);
  *(void *)(a1 + 584) = sub_2225CC180(v11);
  sub_2225CF1C4(a1 + 592);
  *(_WORD *)(a1 + 656) = 0;
  sub_222624850(a1, a2, a3);
  return a1;
}

uint64_t sub_222624850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v115[0] = a2;
  v115[1] = a3;
  if (sub_2225CF1E0((uint64_t)v115) || (uint64_t v4 = sub_2225D2440(v115, 0), sub_222613380(v4) <= 1))
  {
    sub_2225F3278(&v114);
    unsigned int v5 = v114;
    return sub_22262516C(a1, v5);
  }
  uint64_t v7 = sub_2225D2440(v115, 0);
  *(_DWORD *)(a1 + 32) = sub_222613380(v7);
  uint64_t v8 = sub_2225D2440(v115, 0);
  *(_DWORD *)(a1 + 36) = sub_222613380(v8) - 2;
  uint64_t v9 = sub_2225D2440(v115, 0);
  *(_WORD *)(a1 + 44) = sub_22261BFB4(v9);
  uint64_t v10 = (unsigned char *)(a1 + 656);
  *(unsigned char *)(a1 + 656) = 0;
  if (sub_2225C3D04((uint64_t)v115) != 1)
  {
    unsigned int v11 = 2;
    uint64_t v12 = 1;
    while (1)
    {
      uint64_t v13 = sub_2225D2440(v115, v12);
      unsigned int v14 = sub_222613380(v13);
      uint64_t v15 = (unsigned int *)sub_2225D2440(v115, v12);
      if (v14 < 2) {
        break;
      }
      *(_DWORD *)(a1 + 36) = sub_222613380((uint64_t)v15) + *(_DWORD *)(a1 + 36) - 2;
      uint64_t v16 = sub_2225D2440(v115, v12);
      if (sub_222613380(v16) > *(_DWORD *)(a1 + 32))
      {
        uint64_t v17 = sub_2225D2440(v115, v12);
        *(_DWORD *)(a1 + 32) = sub_222613380(v17);
      }
      uint64_t v18 = sub_2225D2440(v115, v12);
      if (sub_22261CB34(v18, *(unsigned __int16 *)(a1 + 44)))
      {
        uint64_t v19 = sub_2225D2440(v115, v12);
        if (sub_22261CB34(v19, 13))
        {
          if (sub_2226251B0(a1))
          {
            uint64_t v20 = sub_2225D2440(v115, v12);
            *(_WORD *)(a1 + 44) = sub_22261BFB4(v20);
          }
          else
          {
            uint64_t v21 = *(void *)(a1 + 24);
            if (v21)
            {
              uint64_t v22 = (unsigned int *)sub_2225D2440(v115, v12);
              unsigned int v23 = sub_2225C3B40(v22);
              sub_2225F52C4(v21, v23, 765, (uint64_t)v113);
              sub_2225F37F0(v113);
            }
            unsigned char *v10 = 1;
          }
        }
      }
      uint64_t v12 = v11;
      BOOL v50 = sub_2225C3D04((uint64_t)v115) == v11++;
      if (v50) {
        goto LABEL_20;
      }
    }
    unsigned int v5 = sub_2225C3B40(v15);
    return sub_22262516C(a1, v5);
  }
LABEL_20:
  ++*(_DWORD *)(a1 + 36);
  unsigned int v24 = sub_2226241E8(*(unsigned __int16 *)(a1 + 44), *(void *)(a1 + 16));
  unsigned int v25 = *(_DWORD *)(a1 + 36) * (v24 >> 3);
  *(_DWORD *)(a1 + 36) = v25;
  *(_DWORD *)(a1 + 40) = v24 >> 3;
  sub_2225CF670((const void **)(a1 + 48), v25);
  sub_22262484C(v112);
  sub_2225CF670(v112, *(_DWORD *)(a1 + 32));
  uint64_t v97 = a1 + 48;
  *(void *)(a1 + 584) = sub_2225C5698(a1 + 48, 0);
  *(unsigned char *)(a1 + 657) = 0;
  sub_2225F3278(&v111);
  uint64_t v98 = sub_2225C3D04((uint64_t)v115);
  if (v98)
  {
    uint64_t v26 = 0;
    BOOL v27 = (uint64_t *)(a1 + 584);
    while (1)
    {
      uint64_t v110 = 0;
      uint64_t v110 = (char *)sub_2225C5698((uint64_t)v112, 0);
      char v109 = 0;
      unsigned int v28 = (unsigned int *)sub_2225D2440(v115, v26);
      int v29 = sub_22261B960(v28, (uint64_t *)&v110, *(void *)a1, *(void **)(a1 + 8), &v109);
      if (v109) {
        break;
      }
      int v30 = v29;
      int v31 = (int)v110;
      unsigned int v32 = &v110[v29];
      char v33 = v110;
      if (*(v32 - 1) != 34)
      {
        uint64_t v34 = 0;
        do
          int v35 = v32[v34-- - 2];
        while (v35 != 34);
        v32 += v34;
        sub_2225C3D0C(&v107, v32, -v34);
        if (sub_2225CF1D0((void *)(a1 + 592)))
        {
          uint64_t v36 = sub_2225D2440(v115, v26);
          if (sub_22261BB0C(v36)) {
            sub_2226223BC((const void **)(a1 + 592), (uint64_t)v107, v108);
          }
          else {
            sub_2226251C0((const void **)(a1 + 592), (uint64_t)v107, v108);
          }
          *(_DWORD *)(a1 + 648) = v26;
          *(_DWORD *)(a1 + 652) = v30 + v31 - v110 + v34;
          unint64_t v48 = (unsigned int *)sub_2225D2440(v115, v26);
          int v111 = sub_2225C3B40(v48);
        }
        else
        {
          sub_2225CF1C4(v106);
          uint64_t v37 = sub_2225D2440(v115, v26);
          if (sub_22261BB0C(v37))
          {
            sub_2226223BC(v106, (uint64_t)v107, v108);
            int v107 = (const void *)sub_2225CE27C((uint64_t)v106);
            size_t v108 = v38;
          }
          uint64_t v39 = sub_2225CE27C(a1 + 592);
          if (sub_2225D1680(v39, v40, v107, v108))
          {
            if (*(void *)(a1 + 24))
            {
              std::string v41 = (unsigned int *)sub_2225D2440(v115, v26);
              unsigned int v42 = sub_2225C3B40(v41);
              sub_2225F52C4(*(void *)(a1 + 24), v42, 758, (uint64_t)v105);
              uint64_t v43 = sub_2225CE27C(a1 + 592);
              uint64_t v45 = sub_2225F3774(v105, v43, v44);
              uint64_t v46 = sub_2225F3774(v45, (uint64_t)v107, v108);
              sub_22261F184(&v104, v111, v111);
              unint64_t v47 = sub_222625214(v46, &v104);
              sub_22261F184(&v103, v42, v42);
              sub_222625214(v47, &v103);
              sub_2225F37F0(v105);
            }
            unsigned char *v10 = 1;
          }
          sub_2225CA520(v106);
        }
        char v33 = v110;
      }
      int v49 = *v33;
      BOOL v50 = (v49 - 76) > 0x29 || ((1 << (v49 - 76)) & 0x20000000201) == 0;
      if (!v50)
      {
        uint64_t v51 = v33 + 1;
        uint64_t v110 = v33 + 1;
        int v49 = v33[1];
        if (v49 == 56)
        {
          uint64_t v51 = v33 + 2;
          uint64_t v110 = v33 + 2;
          int v49 = v33[2];
        }
        char v33 = v51;
      }
      if (v49 == 34)
      {
        BOOL v56 = (unsigned __int8 *)(v32 - 1);
        BOOL v57 = v33 + 1;
        uint64_t v110 = v33 + 1;
        if ((*(unsigned char *)(*(void *)(a1 + 8) + 3) & 0x40) != 0
          && v33 + 2 != (char *)v56
          && *v57 == 92
          && v33[2] == 112)
        {
          if (v26)
          {
            if (*(unsigned char *)(a1 + 657))
            {
              BOOL v57 = v33 + 3;
              uint64_t v110 = v33 + 3;
            }
          }
          else
          {
            uint64_t v110 = v33 + 2;
            *(unsigned char *)(a1 + 657) = 1;
            BOOL v57 = v33 + 2;
          }
        }
        while (2)
        {
          if (v57 == (char *)v56) {
            goto LABEL_76;
          }
          if (*v57 != 92)
          {
            uint64_t v60 = v57 + 1;
            do
            {
              uint64_t v110 = v60;
              if (v60 == (char *)v56) {
                break;
              }
              int v61 = *v60++;
            }
            while (v61 != 92);
            unsigned __int8 v62 = (unsigned int *)sub_2225D2440(v115, v26);
            sub_2225C3D0C(v101, v57, v110 - v57);
            if (sub_22262525C(a1, v62, v31, v101[0], v101[1])) {
              unsigned char *v10 = 1;
            }
            goto LABEL_74;
          }
          if ((v57[1] | 0x20) == 0x75)
          {
            uint64_t v58 = (unsigned int *)sub_2225D2440(v115, v26);
            int v59 = sub_2225C3B40(v58);
            sub_2225F38E0((uint64_t)v100, v59, *(void *)a1);
            sub_2226254AC(v31, &v110, v56, (uint64_t *)(a1 + 584), (unsigned char *)(a1 + 656), v100[0], v100[1], *(_DWORD *)(a1 + 40), *(void *)(a1 + 24), *(uint64_t **)(a1 + 8));
          }
          else
          {
            __int16 v63 = (unsigned int *)sub_2225D2440(v115, v26);
            int v64 = sub_2225C3B40(v63);
            sub_2225F38E0((uint64_t)v99, v64, *(void *)a1);
            int v65 = sub_222624258(v31, &v110, (char *)v56, (unsigned char *)(a1 + 656), v99[0], v99[1], 8 * *(_DWORD *)(a1 + 40), *(void *)(a1 + 24), *(void **)(a1 + 8));
            int v66 = *(_DWORD *)(a1 + 40);
            if (v66 == 2)
            {
              *(_WORD *)*BOOL v27 = v65;
              uint64_t v67 = *v27 + 2;
            }
            else
            {
              if (v66 != 4)
              {
                unint64_t v68 = (unsigned char *)(*v27)++;
                *unint64_t v68 = v65;
                goto LABEL_74;
              }
              *(_DWORD *)*BOOL v27 = v65;
              uint64_t v67 = *v27 + 4;
            }
            *BOOL v27 = v67;
          }
LABEL_74:
          BOOL v57 = v110;
          continue;
        }
      }
      if (v49 != 82) {
        break;
      }
      unsigned int v52 = v33 + 2;
      uint64_t v53 = 1 - (void)v32;
      do
      {
        uint64_t v110 = v52;
        int v54 = *v52++;
        ++v53;
      }
      while (v54 != 40);
      uint64_t v110 = v52;
      char v55 = (unsigned int *)sub_2225D2440(v115, v26);
      sub_2225C3D0C(v102, v110, -v53 - (void)v110);
      if (sub_22262525C(a1, v55, v31, v102[0], v102[1])) {
        unsigned char *v10 = 1;
      }
LABEL_76:
      if (++v26 == v98) {
        goto LABEL_77;
      }
    }
    uint64_t v71 = (unsigned int *)sub_2225D2440(v115, v26);
    unsigned int v72 = sub_2225C3B40(v71);
    sub_22262516C(a1, v72);
  }
  else
  {
LABEL_77:
    if (*(unsigned char *)(a1 + 657))
    {
      int v69 = *(_DWORD *)(a1 + 40);
      if (v69 == 2)
      {
        uint64_t v88 = (_WORD *)sub_2225CC180(v97);
        *uint64_t v88 = sub_222625658(a1) - 1;
      }
      else if (v69 == 4)
      {
        uint64_t v70 = (_DWORD *)sub_2225CC180(v97);
        *uint64_t v70 = sub_222625658(a1) - 1;
      }
      else
      {
        char v89 = sub_222625658(a1) - 1;
        *(unsigned char *)sub_2225C5698(v97, 0) = v89;
      }
      if (sub_222625684(a1) >= 0x101)
      {
        uint64_t v90 = *(void *)(a1 + 24);
        if (v90)
        {
          char v91 = (unsigned int *)sub_2225C3C70((uint64_t)v115);
          unsigned int v92 = sub_2225C3B40(v91);
          sub_2225F52C4(v90, v92, 695, (uint64_t)v106);
          char v93 = (unsigned int *)sub_2225C3C70((uint64_t)v115);
          int v94 = sub_2225C3B40(v93);
          uint64_t v95 = (unsigned int *)sub_2226256B0(v115);
          int v96 = sub_2225C3B40(v95);
          sub_22261F184(&v107, v94, v96);
          sub_222625214(v106, (uint64_t *)&v107);
          sub_2225F37F0(v106);
        }
        unsigned char *v10 = 1;
      }
    }
    else if (*(void *)(a1 + 24))
    {
      uint64_t v73 = **(void **)(a1 + 8);
      int v74 = (v73 & 1) != 0 ? 4095 : 509;
      unsigned int v75 = (v73 & 0x40) != 0 ? 0x10000 : v74;
      if (sub_222625658(a1) > v75)
      {
        uint64_t v76 = *(void *)(a1 + 24);
        int v77 = (unsigned int *)sub_2225C3C70((uint64_t)v115);
        unsigned int v78 = sub_2225C3B40(v77);
        sub_2225F52C4(v76, v78, 814, (uint64_t)v106);
        unsigned int v79 = sub_222625658(a1);
        std::string v80 = sub_2226256C4((uint64_t *)v106, v79);
        char v81 = sub_2226256C4(v80, v75);
        if ((**(void **)(a1 + 8) & 0x40) != 0) {
          int v82 = 2;
        }
        else {
          int v82 = **(_DWORD **)(a1 + 8) & 1;
        }
        uint64_t v83 = sub_222622304(v81, v82);
        uint64_t v84 = (unsigned int *)sub_2225C3C70((uint64_t)v115);
        int v85 = sub_2225C3B40(v84);
        uint64_t v86 = (unsigned int *)sub_2226256B0(v115);
        int v87 = sub_2225C3B40(v86);
        sub_22261F184(&v107, v85, v87);
        sub_222625214(v83, (uint64_t *)&v107);
        sub_2225F37F0(v106);
      }
    }
  }
  return sub_2225CA520(v112);
}

uint64_t sub_22262516C(uint64_t a1, unsigned int a2)
{
  *(unsigned char *)(a1 + 656) = 1;
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_2225F52C4(result, a2, 655, (uint64_t)v3);
    return sub_2225F37F0(v3);
  }
  return result;
}

BOOL sub_2226251B0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 44) == 13;
}

uint64_t sub_2226251C0(const void **a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  sub_2225C5D90(a1);
  uint64_t v4 = (char *)sub_2225C3C70((uint64_t)v7);
  unsigned int v5 = (char *)sub_2225C3C78(v7);
  return sub_2225C5A88(a1, v4, v5);
}

void *sub_222625214(void *a1, uint64_t *a2)
{
  uint64_t v5 = sub_2226259E4(*a2);
  int v6 = v3;
  sub_2226223A0(a1, (uint64_t)&v5);
  return a1;
}

BOOL sub_22262525C(uint64_t a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5)
{
  v40[0] = a4;
  v40[1] = a5;
  uint64_t v39 = 0;
  uint64_t v8 = (void **)(a1 + 584);
  if (sub_2225CB708(*(_DWORD *)(a1 + 40), a4, a5, (_WORD **)(a1 + 584), &v39)) {
    return 0;
  }
  BOOL v10 = sub_2226251B0(a1);
  if (v10)
  {
    unsigned int v11 = *v8;
    uint64_t v12 = (const void *)sub_2225C3C70((uint64_t)v40);
    size_t v13 = sub_2225C3D04((uint64_t)v40);
    memcpy(v11, v12, v13);
    char *v8 = (char *)*v8 + sub_2225C3D04((uint64_t)v40);
  }
  if (*(void *)(a1 + 24))
  {
    unsigned int v14 = v39;
    int v15 = sub_2225C3B40(a2);
    sub_2225F38E0((uint64_t)&v37, v15, *(void *)a1);
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t v17 = *(void **)(a1 + 8);
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    uint64_t v20 = (unsigned __int8 *)sub_2225C3C78(v40);
    int v21 = sub_2226257D0(v14, v20);
    if (v10) {
      int v22 = 855;
    }
    else {
      int v22 = 624;
    }
    sub_2226256F4(v16, v17, v18, v19, a3, (int)v14, v21, v22, (uint64_t)v36);
    unsigned int v23 = (unsigned __int8 *)sub_2225C3C78(v40);
    unsigned int v24 = sub_2226257D0(v14, v23);
    uint64_t v25 = sub_2225C3C78(v40);
    sub_2225C3D0C(&v35, v24, v25 - (void)v24);
    sub_22262484C(v34);
    int v26 = sub_2225C3D04((uint64_t)v40);
    sub_2225CE1E8(v34, *(_DWORD *)(a1 + 40) * v26);
    char v33 = (_WORD *)sub_2225CC180((uint64_t)v34);
    if (!sub_2225CB708(*(_DWORD *)(a1 + 40), v35, *((uint64_t *)&v35 + 1), &v33, &v39))
    {
      do
      {
        BOOL v27 = v39;
        unsigned int v28 = (unsigned __int8 *)sub_2225C3C78(v40);
        int v29 = sub_2226257D0(v27, v28);
        *(void *)&long long v32 = sub_222625850(*(void **)(a1 + 8), v37, v38, a3, (int)v27, (int)v29);
        DWORD2(v32) = v30;
        sub_222620144(v36, (uint64_t)&v32);
        uint64_t v31 = sub_2225C3C78(v40);
        sub_2225C3D0C(&v32, v29, v31 - (void)v29);
        long long v35 = v32;
      }
      while (!sub_2225CB708(*(_DWORD *)(a1 + 40), v32, *((uint64_t *)&v32 + 1), &v33, &v39));
    }
    sub_2225CA520(v34);
    sub_2225F37F0(v36);
  }
  return !v10;
}

uint64_t sub_2226254AC(int a1, char **a2, unsigned __int8 *a3, uint64_t *a4, unsigned char *a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t *a10)
{
  unsigned int v26 = 0;
  uint64_t result = sub_222623EE8(a1, a2, a3, (int *)&v26, &v25, a6, a7, a9, a10);
  if (result)
  {
    if (a8 == 2)
    {
      int v15 = (_WORD *)*a4;
      __int16 v16 = v26;
      if (HIWORD(v26))
      {
        *int v15 = ((v26 + 67043328) >> 10) - 10240;
        v15[1] = v16 & 0x3FF | 0xDC00;
        uint64_t v17 = 4;
      }
      else
      {
        *int v15 = v26;
        uint64_t v17 = 2;
      }
      uint64_t v14 = *a4 + v17;
    }
    else if (a8 == 4)
    {
      *(_DWORD *)*a4 = v26;
      uint64_t v14 = *a4 + 4;
    }
    else
    {
      unsigned int v18 = v26;
      if (v26 > 0x7F)
      {
        if (v26 > 0x7FF)
        {
          uint64_t v20 = 3;
          if (v26 < 0x10000) {
            int v22 = 3;
          }
          else {
            int v22 = 4;
          }
          if (v26 >= 0x10000) {
            uint64_t v20 = 4;
          }
          unsigned int v23 = (_WORD *)(*a4 + v20);
          if (v22 != 3)
          {
            *a4 = (uint64_t)v23 - 1;
            *((unsigned char *)v23 - 1) = v18 & 0x3F | 0x80;
            v18 >>= 6;
            unsigned int v23 = (_WORD *)*a4;
          }
          *a4 = (uint64_t)v23 - 1;
          *((unsigned char *)v23 - 1) = v18 & 0x3F | 0x80;
          v18 >>= 6;
          uint64_t v21 = *a4;
        }
        else
        {
          uint64_t v21 = *a4 + 2;
          uint64_t v20 = 2u;
        }
        *a4 = v21 - 1;
        *(unsigned char *)(v21 - 1) = v18 & 0x3F | 0x80;
        v18 >>= 6;
        uint64_t v19 = *a4;
      }
      else
      {
        uint64_t v19 = *a4 + 1;
        uint64_t v20 = 1u;
      }
      char v24 = *((unsigned char *)&unk_2226D10C8 + v20) | v18;
      *a4 = v19 - 1;
      *(unsigned char *)(v19 - 1) = v24;
      uint64_t v14 = *a4 + v20;
    }
    *a4 = v14;
  }
  else
  {
    *a5 = 1;
  }
  return result;
}

uint64_t sub_222625658(uint64_t a1)
{
  return sub_222625684(a1) / *(_DWORD *)(a1 + 40);
}

uint64_t sub_222625684(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 584);
  return v1 - sub_2225CC180(a1 + 48);
}

uint64_t sub_2226256B0(void *a1)
{
  return *a1 + 24 * a1[1] - 24;
}

uint64_t *sub_2226256C4(uint64_t *a1, unsigned int a2)
{
  return a1;
}

uint64_t sub_2226256F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>)
{
  unsigned int v13 = a3;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  int v17 = a6 - a5;
  uint64_t v18 = sub_2225C3D04((uint64_t)&v26);
  unsigned int v19 = sub_22261BFC8(v13, v17, v18, a2);
  sub_2225F52C4(a1, v19, a8, (uint64_t)v25);
  uint64_t v23 = sub_222625850(a2, v26, v27, a5, a6, a7);
  int v24 = v20;
  uint64_t v21 = sub_222620144(v25, (uint64_t)&v23);
  sub_222625A18(a9, v21);
  return sub_2225F37F0(v25);
}

unsigned __int8 *sub_2226257D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v2 = a1;
  if (a1 != a2)
  {
    int v3 = (int)a2;
    int v4 = sub_2225CB1B4(*a1);
    int v10 = v3 - v2;
    int v11 = v4;
    uint64_t v5 = *(unsigned int *)sub_2225C2A9C(&v11, &v10);
    int v6 = &v2[v5];
    for (uint64_t i = v5 - 1; i; --i)
    {
      char v8 = *++v2;
      if ((v8 & 0xC0) != 0x80) {
        return v2;
      }
    }
    return v6;
  }
  return v2;
}

uint64_t sub_222625850(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  unsigned int v8 = a2;
  v16[0] = a2;
  v16[1] = a3;
  int v10 = a5 - a4;
  uint64_t v11 = sub_2225C3D04((uint64_t)v16);
  unsigned int v12 = sub_22261BFC8(v8, v10, v11, a1);
  uint64_t v13 = sub_2225C3D04((uint64_t)v16);
  int v14 = sub_22261BFC8(v12, a6 - a5, v13, a1);
  return sub_222622214(v12, v14);
}

uint64_t sub_2226258F0(uint64_t a1)
{
  return sub_2226135E8(a1, *(_DWORD *)(a1 + 244));
}

uint64_t sub_2226258F8(uint64_t a1)
{
  return sub_2226135E8(a1, *(_DWORD *)(a1 + 248));
}

BOOL sub_222625900(int a1)
{
  return (word_2226CBA58[a1] & 0x7EC) != 0;
}

uint64_t sub_22262591C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_222625988(a1, (uint64_t)&v5);
  return sub_2225CCD48(a2, v3);
}

uint64_t sub_222625988(unint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 - 1) = 0;
  uint64_t v2 = a2 - 1;
  if (a1)
  {
    unint64_t v3 = a1;
    do
    {
      *(unsigned char *)--uint64_t v2 = sub_2225E80F4(v3 & 0xF);
      BOOL v4 = v3 > 0xF;
      v3 >>= 4;
    }
    while (v4);
  }
  else
  {
    *(unsigned char *)(a2 - 2) = 48;
    return a2 - 2;
  }
  return v2;
}

uint64_t sub_2226259E4(uint64_t a1)
{
  sub_2225E31D8((uint64_t)&v2, a1, 1);
  return v2;
}

uint64_t sub_222625A1C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  sub_2225F53E8(a2);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_222625A70()
{
  return sub_2225C69CC();
}

uint64_t sub_222625A78(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 1 && *a2 == *(unsigned __int8 *)sub_2225C3C70(a1)) {
    *(void *)(a1 + 16) = a3;
  }
  return a1;
}

uint64_t sub_222625AE4()
{
  return sub_2225C69CC();
}

uint64_t sub_222625AEC(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return (v2 - sub_2225C3C70(a1)) >> 2;
}

unsigned char *sub_222625B24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  v18[0] = a2;
  v18[1] = a3;
  int v6 = *(unsigned int **)(a5 + 1296);
  if (v6)
  {
    uint64_t v7 = 0;
    unsigned int v8 = (unsigned int **)(a5 + 1296);
    unsigned int v9 = -1;
    do
    {
      unint64_t v10 = *v6;
      unint64_t v11 = sub_2225C3D04((uint64_t)v18);
      unsigned int v12 = *v8;
      if (v11 <= v10)
      {
        uint64_t v13 = *v12;
        if (v13 < v9)
        {
          if (sub_2225C3D04((uint64_t)v18) == v13)
          {
            uint64_t v7 = v8;
            goto LABEL_11;
          }
          unsigned int v12 = *v8;
          unsigned int v9 = **v8;
          uint64_t v7 = v8;
        }
      }
      int v6 = (unsigned int *)*((void *)v12 + 7);
      unsigned int v8 = (unsigned int **)(v12 + 14);
    }
    while (v6);
    if (!v7) {
      goto LABEL_9;
    }
LABEL_11:
    int v15 = *v7;
    *uint64_t v7 = (unsigned int *)*((void *)*v7 + 7);
    *(_DWORD *)int v15 = sub_2225C3D04((uint64_t)v18);
    int v15[4] = a4;
  }
  else
  {
LABEL_9:
    uint64_t v14 = sub_2225C3D04((uint64_t)v18);
    int v15 = malloc_type_malloc(24 * v14 + 64, 0x6CD35A13uLL);
    int v16 = sub_2225C3D04((uint64_t)v18);
    sub_222625C68((uint64_t)v15, v16, a4);
  }
  if (!sub_2225CF1E0((uint64_t)v18))
  {
    sub_2225C3C70((uint64_t)v18);
    sub_222625C88(v18);
    sub_222625C98((uint64_t)v15, 0);
    sub_222625C6C();
  }
  return v15;
}

uint64_t sub_222625C6C()
{
  sub_222626A14();
  return v0;
}

uint64_t sub_222625C88(void *a1)
{
  return *a1 + 24 * a1[1];
}

uint64_t sub_222625C98(uint64_t a1, int a2)
{
  uint64_t v2 = a1 + 64;
  if (a2)
  {
    int v3 = a2;
    do
    {
      int v4 = sub_22261BABC(v2, 1);
      v2 += 24;
      v3 -= v4;
    }
    while (v3);
  }
  return v2;
}

unint64_t sub_222625CDC(void *a1, uint64_t a2)
{
  sub_2225F34E8(a1 + 4);
  unint64_t result = sub_2225D24AC(a1 + 1);
  uint64_t v5 = result;
  if (result)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = (uint64_t *)sub_2225D2440(a1 + 1, v6);
      unint64_t result = sub_2225F34E8(v7);
      ++v6;
    }
    while (v5 != v6);
  }
  a1[7] = *(void *)(a2 + 1296);
  *(void *)(a2 + 1296) = a1;
  return result;
}

uint64_t sub_222625D58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  uint64_t v2 = (void *)sub_222625D84(a1);
  free(v2);
  return v1;
}

uint64_t sub_222625D88(uint64_t a1)
{
  uint64_t v2 = 0;
  if (sub_22261CB34(a1, 1))
  {
    uint64_t v3 = a1 + 24;
    do
    {
      uint64_t v2 = (v2 + 1);
      BOOL v4 = sub_22261CB34(v3, 1);
      v3 += 24;
    }
    while (v4);
  }
  return v2;
}

BOOL sub_222625DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  BOOL result = sub_22261CB34(a2, 1);
  if (result)
  {
    while (1)
    {
      uint64_t v6 = sub_22261AF2C(v4);
      if (v6)
      {
        uint64_t v7 = v6;
        if (sub_2226074C0(v6))
        {
          uint64_t v8 = sub_222625E60(a3, v7);
          if (sub_222625E94(v8)) {
            break;
          }
        }
      }
      v4 += 24;
      if (!sub_22261CB34(v4, 1)) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_222625E60(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_222626928(a1, a2);
  if (result)
  {
    return sub_222626980(result);
  }
  return result;
}

BOOL sub_222625E94(uint64_t a1)
{
  return (*(_WORD *)(a1 + 244) & 0x40) == 0;
}

uint64_t *sub_222625EA4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (uint64_t *)(a1 + 8);
  unint64_t v9 = sub_2225D24AC((void *)(a1 + 8));
  if (v9 < sub_2225F514C(a3))
  {
    unsigned int v10 = sub_2225F514C(a3);
    sub_222625FE4(v8, v10);
  }
  unint64_t v11 = (uint64_t *)sub_2225D2440(v8, a2);
  if (sub_2225CF1D0(v11))
  {
    v19.n128_u8[0] = 1;
    sub_222626064((uint64_t)v21, (unsigned char *)(a4 + 439), &v19);
    uint64_t v12 = sub_222625C98(a1, a2);
    int v13 = sub_222625D88(v12);
    sub_22263F714(a4, v12, (v13 + 1), 0, 0);
    do
    {
      __n128 v19 = 0uLL;
      uint64_t v20 = 0;
      sub_22261B6AC(&v19);
      sub_222626068(v11, &v19);
      uint64_t v14 = sub_2225D2CFC((uint64_t)v11);
      sub_222649758(a4, v14);
      uint64_t v15 = sub_2225D2CFC((uint64_t)v11);
    }
    while (sub_22261CB34(v15, 1));
    if (sub_2226260C4(a4, v16)) {
      sub_222626118(a4, v17);
    }
    sub_22264034C(a4, v17);
    sub_222626160((uint64_t)v21);
  }
  return v11;
}

void *sub_222625FE4(uint64_t *a1, unint64_t a2)
{
  uint64_t result = (void *)sub_2225D24AC(a1);
  if (a2 <= (unint64_t)result)
  {
    if (a2 < (unint64_t)result)
    {
      uint64_t v5 = *a1 + 24 * a2;
      return (void *)sub_222626C44(a1, v5);
    }
  }
  else
  {
    return sub_222626B5C(a1, a2 - (void)result);
  }
  return result;
}

uint64_t sub_222626068(uint64_t *a1, __n128 *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, (uint64_t)a2))
  {
    uint64_t result = sub_22262712C(a1, a2);
  }
  else
  {
    sub_2225F5B40((uint64_t)a1, a2);
    uint64_t result = v4 + 24;
  }
  a1[1] = result;
  return result;
}

BOOL sub_2226260C4(uint64_t a1, uint64_t a2)
{
  return !*(void *)(a1 + 808)
      && !sub_2225DF1DC(a1 + 824, a2)
      && !sub_2225DF1DC(a1 + 800, v3)
      && !sub_2225CF1D0((void *)(a1 + 848));
}

uint64_t sub_222626118(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2226260C4(a1, a2);
  if (result)
  {
    return sub_22264034C(a1, v4);
  }
  return result;
}

uint64_t sub_222626164@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned int a4@<W3>, unsigned int a5@<W4>, _DWORD *a6@<X8>)
{
  sub_22261B6AC(a6);
  sub_22261FB44((uint64_t)a6);
  if (a3) {
    __int16 v12 = 9;
  }
  else {
    __int16 v12 = 13;
  }
  sub_22261F2AC((uint64_t)a6, v12);
  uint64_t v13 = sub_222608330(a2);
  if (sub_222606BF8(v13))
  {
    sub_22261CABC(a2, a4, 692, (uint64_t)v41);
    sub_2225F37F0(v41);
  }
  sub_2225CF794(v40);
  sub_2225C3D00((int)v39, "\"");
  sub_2225DAD18(v40, v39[0], v39[1]);
  uint64_t v14 = a1;
  if (sub_22261CB34((uint64_t)a1, 1))
  {
    char v15 = 1;
    uint64_t v14 = a1;
    do
    {
      if ((v15 & 1) == 0 && ((sub_222620488((uint64_t)v14) & 1) != 0 || sub_22261BFBC((uint64_t)v14))) {
        sub_2226186D4((uint64_t)v40, 32);
      }
      unsigned int v16 = sub_22261BFB4((uint64_t)v14);
      if ((sub_2226221A0(v16) & 1) != 0
        || sub_22261BABC((uint64_t)v14, 9)
        || sub_22261BABC((uint64_t)v14, 10)
        || sub_22261BABC((uint64_t)v14, 11)
        || sub_22261BABC((uint64_t)v14, 12))
      {
        unsigned __int8 v38 = 0;
        sub_22261F294(a2, v14, &v38, &__str);
        if (!v38)
        {
          sub_22261B420(&__str, 0, &v36);
          uint64_t v18 = sub_2225CFC64((uint64_t)&v36, v17);
          uint64_t v20 = sub_2225CFCA0((uint64_t)&v36, v19);
          sub_222626580(v40, v18, v20);
          std::string::~string(&v36);
        }
        std::string::~string(&__str);
      }
      else if (sub_22261BABC((uint64_t)v14, 3))
      {
        sub_222648CFC(a2);
      }
      else
      {
        unsigned int v22 = sub_2225C5664((uint64_t)v40);
        int v23 = sub_222613380((uint64_t)v14);
        sub_2225CF670(v40, v23 + v22);
        __str.__r_.__value_.__r.__words[0] = 0;
        __str.__r_.__value_.__r.__words[0] = sub_2225C5698((uint64_t)v40, v22);
        v36.__r_.__value_.__s.__data_[0] = 0;
        unsigned int v24 = sub_222626584(a2, v14, (uint64_t *)&__str, &v36);
        if (!v36.__r_.__value_.__s.__data_[0])
        {
          unsigned int v25 = v24;
          std::string::size_type v26 = __str.__r_.__value_.__r.__words[0];
          if (v26 != sub_2225C5698((uint64_t)v40, v22))
          {
            uint64_t v27 = (void *)sub_2225C5698((uint64_t)v40, v22);
            memcpy(v27, __str.__r_.__value_.__l.__data_, v25);
          }
          if (v25 != sub_222613380((uint64_t)v14)) {
            sub_2225CF670(v40, v25 + v22);
          }
        }
      }
      v14 += 6;
      BOOL v21 = sub_22261CB34((uint64_t)v14, 1);
      char v15 = 0;
    }
    while (v21);
  }
  if (*(unsigned char *)sub_22261791C((uint64_t)v40) == 92)
  {
    unsigned int v28 = sub_2225C5664((uint64_t)v40) - 1;
    do
      --v28;
    while (*(unsigned char *)sub_2225C5698((uint64_t)v40, v28) == 92);
    if ((sub_2225C5664((uint64_t)v40) + ~v28))
    {
      sub_2226265A0(a2, v14 - 6, 843, (uint64_t)v35);
      sub_2225F37F0(v35);
      sub_2225CF758((uint64_t)v40);
    }
  }
  sub_2226186D4((uint64_t)v40, 34);
  if (a3)
  {
    *(unsigned char *)sub_2225C5698((uint64_t)v40, 0) = 39;
    int v29 = sub_2225C5664((uint64_t)v40);
    *(unsigned char *)sub_2225C5698((uint64_t)v40, v29 - 1) = 39;
    if (sub_2225C5664((uint64_t)v40) == 3)
    {
      if (*(unsigned char *)sub_2225C5698((uint64_t)v40, 1u) != 39) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
    if (sub_2225C5664((uint64_t)v40) != 4 || *(unsigned char *)sub_2225C5698((uint64_t)v40, 1u) != 92)
    {
LABEL_40:
      sub_2226265A0(a2, a1, 648, (uint64_t)v34);
      sub_2225F37F0(v34);
      sub_2225C3D00((int)v33, "' '");
      sub_222616CD8(v40, v33[0], v33[1]);
    }
  }
LABEL_41:
  uint64_t v30 = sub_2225CE27C((uint64_t)v40);
  sub_222648E1C(a2, v30, v31, a6, a4, a5);
  return sub_2225CA520(v40);
}

unint64_t sub_222626584(uint64_t a1, unsigned int *a2, uint64_t *a3, unsigned char *a4)
{
  return sub_22261B960(a2, a3, *(void *)(a1 + 48), *(void **)(a1 + 24), a4);
}

uint64_t sub_2226265A0@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = sub_2225C3B40(a2);

  return sub_2225F52C4(v6, v7, a3, a4);
}

uint64_t sub_2226265F8(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, unsigned int a5)
{
  unsigned int v10 = (uint64_t *)(a1 + 32);
  if (sub_2225CF1D0((void *)(a1 + 32)))
  {
    unsigned int v11 = sub_2225C3B40((unsigned int *)a1);
    sub_2226266FC(v10, v11);
    __int16 v12 = (void *)sub_2225D2440(v10, 0);
    unsigned int v13 = sub_2225C3B40((unsigned int *)a1);
    bzero(v12, 24 * v13);
  }
  uint64_t v14 = sub_2225D2440(v10, a2);
  if (sub_22261CB34(v14, 13))
  {
    char v15 = (unsigned int *)sub_222625C98(a1, a2);
    sub_222626164(v15, a3, 0, a4, a5, v19);
    uint64_t v16 = sub_2225D2440(v10, a2);
    int v17 = *(_DWORD *)&v19[15];
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v19;
    *(_DWORD *)(v16 + 15) = v17;
  }
  return sub_2225D2440(v10, a2);
}

void *sub_2226266FC(uint64_t *a1, unint64_t a2)
{
  uint64_t result = (void *)sub_2225D24AC(a1);
  if (a2 <= (unint64_t)result)
  {
    if (a2 < (unint64_t)result)
    {
      uint64_t v5 = *a1 + 24 * a2;
      return (void *)sub_222627568(a1, v5);
    }
  }
  else
  {
    return sub_222627480(a1, a2 - (void)result);
  }
  return result;
}

uint64_t sub_22262677C(uint64_t a1, int a2, char a3)
{
  *(_DWORD *)a1 = a2;
  *(unsigned char *)(a1 + 4) = a3;
  sub_2225D250C((void *)(a1 + 8));
  sub_2225D250C((void *)(a1 + 32));
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t sub_2226267BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226267F4(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_222626834(&v3);
  return a1;
}

uint64_t *sub_222626834(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2226268AC(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    unint64_t v9 = sub_2225D2658(v6, v8);
    return (uint64_t *)sub_2225D264C(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2226268AC(uint64_t *a1)
{
  return sub_2226268B4((uint64_t)a1, *a1);
}

uint64_t sub_2226268B4(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_22262691C(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 24;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_222626920(uint64_t a1, uint64_t a2)
{
  return sub_2225F3464(a2);
}

uint64_t sub_222626928(uint64_t a1, uint64_t a2)
{
  if (!sub_2226074C0(a2)) {
    return 0;
  }

  return sub_222640D7C(a1, a2);
}

uint64_t sub_222626980(uint64_t a1)
{
  v3[0] = sub_222627B68(a1);
  v3[1] = v1;
  return sub_2226269AC(v3);
}

uint64_t sub_2226269AC(uint64_t *a1)
{
  if (sub_2226269F8(a1)) {
    return 0;
  }
  uint64_t v3 = *a1;

  return sub_2225C5B40(v3);
}

BOOL sub_2226269F8(void *a1)
{
  return !sub_2225D3DB0(a1);
}

uint64_t sub_222626A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)j_j_nullsub_1(a3);
  uint64_t v9 = sub_222626AAC((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_222626AAC(int a1, const void *a2, uint64_t a3, char *__dst)
{
  return sub_222626ABC(a2, a3, __dst);
}

uint64_t sub_222626ABC(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_222626B20(__dst, a1, 0xAAAAAAAAAAAAAAABLL * ((a2 - (uint64_t)a1) >> 3));
  uint64_t v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

void *sub_222626B20(void *__dst, const void *a2, uint64_t a3)
{
  if (a3) {
    memmove(__dst, a2, 24 * a3 - 5);
  }
  return __dst;
}

void *sub_222626B5C(uint64_t *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)sub_2225D2650((uint64_t)a1, a2) - a1[1]) >> 3) >= a2)
  {
    return sub_222626C9C((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
    unint64_t v6 = sub_2225D24AC(a1);
    unint64_t v7 = sub_2225D2880(a1, v6 + a2);
    unint64_t v8 = sub_2225D24AC(a1);
    sub_2225D28FC(v10, v7, v8, v5);
    sub_222626D1C((uint64_t)v10, a2);
    sub_222626D98(a1, v10);
    return (void *)sub_222626E88(v10);
  }
}

uint64_t sub_222626C44(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_2225D24AC(a1);
  sub_2226268B4((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

void *sub_222626C9C(uint64_t a1, uint64_t a2)
{
  sub_2225F5C64(&v10, a1, a2);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  while (v4 != v5)
  {
    uint64_t v6 = sub_2225D2650(a1, v3);
    uint64_t v8 = nullsub_1(v4, v7);
    sub_222626E8C(v6, v8);
    v4 += 24;
    uint64_t v11 = v4;
  }
  return sub_2225D284C(&v10);
}

uint64_t sub_222626D1C(uint64_t a1, uint64_t a2)
{
  sub_222626E98(&v9, a1 + 16, a2);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  while (v3 != v4)
  {
    uint64_t v5 = sub_2225D2B18(a1);
    uint64_t v7 = nullsub_1(v9, v6);
    sub_222626E8C(v5, v7);
    uint64_t v4 = v10;
    uint64_t v3 = v9 + 24;
    v9 += 24;
  }
  return sub_22261AA18((uint64_t)&v9);
}

uint64_t sub_222626D98(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_222626EB8(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  uint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  unint64_t v11 = sub_2225D24AC(a1);
  return nullsub_1(a1, v11);
}

void *sub_222626E90(uint64_t a1, void *a2)
{
  return sub_2225D250C(a2);
}

void *sub_222626E9C(void *result, void *a2, uint64_t a3)
{
  uint64_t *result = *a2;
  result[1] = *a2 + 24 * a3;
  result[2] = a2;
  return result;
}

uint64_t sub_222626EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_2225D2CF8((uint64_t)&v16);
    uint64_t v9 = sub_2225D2CFC((uint64_t)v18);
    sub_222626F84(a1, v8, v9);
    sub_2225D2D08((uint64_t)v18);
    sub_2225D2D08((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_222626F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222626F94(a2, a3);
}

void *sub_222626F98(void *a1, void *a2)
{
  uint64_t v4 = a1 + 2;
  *a1 = 0;
  a1[1] = 0;
  uint64_t v11 = 0;
  uint64_t v5 = sub_2225D2650((uint64_t)a2, (uint64_t)a2);
  sub_222621D18(v4, &v11, v5);
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v7 = *(void *)sub_2225D2650((uint64_t)a2, v6);
  *(void *)sub_2225D2650((uint64_t)a1, v8) = v7;
  *(void *)sub_2225D2650((uint64_t)a2, v9) = 0;
  *a2 = 0;
  a2[1] = 0;
  return a1;
}

uint64_t *sub_22262702C(uint64_t *a1)
{
  sub_22262708C((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    unint64_t v5 = sub_2225D2DD8(a1, v4);
    sub_2225D264C(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_22262708C(uint64_t a1)
{
  return sub_222627094(a1, *(void *)(a1 + 8));
}

uint64_t sub_222627098(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 24;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = sub_22262691C(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_222627104(uint64_t result, unsigned char *a2, unsigned char *a3)
{
  *(void *)uint64_t result = a2;
  *(unsigned char *)(result + 8) = *a2;
  *a2 = *a3;
  return result;
}

uint64_t sub_22262711C(uint64_t result)
{
  **(unsigned char **)uint64_t result = *(unsigned char *)(result + 8);
  return result;
}

uint64_t sub_22262712C(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, (uint64_t)a2);
  unint64_t v5 = sub_2225D24AC(a1);
  unint64_t v6 = sub_2225D2880(a1, v5 + 1);
  unint64_t v7 = sub_2225D24AC(a1);
  sub_2225D28FC(v12, v6, v7, v4);
  uint64_t v9 = (__n128 *)nullsub_1(v13, v8);
  sub_2225F5C68(v4, v9, a2);
  v13 += 24;
  sub_2226271DC(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225F5D90(v12);
  return v10;
}

uint64_t sub_2226271DC(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2226272CC();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  unint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  unint64_t v10 = sub_2225D24AC(a1);
  return nullsub_1(a1, v10);
}

uint64_t sub_2226272CC()
{
  return sub_2226272E8();
}

uint64_t sub_2226272E8()
{
  sub_222627310(v1);
  return v1[2];
}

uint64_t sub_222627318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_2226273E8(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_2226273E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v15[0] = a1;
  v15[1] = a2;
  v14[0] = a3;
  v14[1] = a4;
  v13[0] = a5;
  v13[1] = a6;
  while (sub_2225D2CC0((uint64_t)v15, (uint64_t)v14))
  {
    uint64_t v9 = sub_2225F5F48((uint64_t)v15, v8);
    uint64_t v10 = sub_2225D2CFC((uint64_t)v13);
    int v11 = *(_DWORD *)(v9 + 15);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v9;
    *(_DWORD *)(v10 + 15) = v11;
    sub_2225D2D08((uint64_t)v15);
    sub_2225D2D08((uint64_t)v13);
  }
  return sub_2225CCC60((uint64_t)v15, (uint64_t)v13, a7);
}

void *sub_222627480(uint64_t *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)sub_2225D2650((uint64_t)a1, a2) - a1[1]) >> 3) >= a2)
  {
    return sub_2226275C0((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
    unint64_t v6 = sub_2225D24AC(a1);
    unint64_t v7 = sub_2225D2880(a1, v6 + a2);
    unint64_t v8 = sub_2225D24AC(a1);
    sub_2225D28FC(v10, v7, v8, v5);
    sub_222627640((uint64_t)v10, a2);
    sub_2226271DC(a1, v10);
    return (void *)sub_2225F5D90(v10);
  }
}

uint64_t sub_222627568(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_2225D24AC(a1);
  sub_2225F65C4((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

void *sub_2226275C0(uint64_t a1, uint64_t a2)
{
  sub_2225F5C64(&v10, a1, a2);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  while (v4 != v5)
  {
    uint64_t v6 = sub_2225D2650(a1, v3);
    uint64_t v8 = nullsub_1(v4, v7);
    sub_2226276BC(v6, v8);
    v4 += 24;
    uint64_t v11 = v4;
  }
  return sub_2225D284C(&v10);
}

uint64_t sub_222627640(uint64_t a1, uint64_t a2)
{
  sub_222626E98(&v9, a1 + 16, a2);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  while (v3 != v4)
  {
    uint64_t v5 = sub_2225D2B18(a1);
    uint64_t v7 = nullsub_1(v9, v6);
    sub_2226276BC(v5, v7);
    uint64_t v4 = v10;
    uint64_t v3 = v9 + 24;
    v9 += 24;
  }
  return sub_22261AA18((uint64_t)&v9);
}

uint64_t sub_2226276C0(uint64_t a1, void *a2)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_22261B6AC(a2);
}

uint64_t sub_2226276D0(uint64_t a1, int a2)
{
  *(_DWORD *)a1 = a2;
  sub_2225F3278((_DWORD *)(a1 + 4));
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  sub_22260AF18(a1 + 24);
  *(_WORD *)(a1 + 244) &= 0xF000u;
  return a1;
}

uint64_t sub_222627718(uint64_t a1, int a2)
{
  return sub_2226276D0(a1, a2);
}

uint64_t sub_222627720(uint64_t a1, _DWORD *a2)
{
  *(_WORD *)(a1 + 244) |= 1u;
  uint64_t v4 = a1 + 24;
  if (sub_2225CF1D0((void *)(a1 + 24)))
  {
    uint64_t result = 0;
    *(_DWORD *)(a1 + 240) = 0;
  }
  else
  {
    uint64_t v6 = (unsigned int *)sub_2225CC180(v4);
    uint64_t v7 = (unsigned int *)sub_2225E2698(v4);
    LODWORD(v6) = sub_2225C3B40(v6);
    int v8 = sub_2225C3B40(v7);
    unint64_t v9 = (unint64_t)sub_22260ABEC(a2, (int)v6) >> 32;
    *(_DWORD *)(a1 + 240) = ((unint64_t)sub_22260ABEC(a2, v8) >> 32) - v9;
    uint64_t result = *(_DWORD *)(a1 + 240) + sub_222613380((uint64_t)v7);
    *(_DWORD *)(a1 + 240) = result;
  }
  return result;
}

uint64_t sub_2226277E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = a1 + 24;
  unint64_t v9 = sub_222609DE8(a1 + 24);
  if (v9 == sub_222609DE8(a2 + 24))
  {
    int v10 = sub_2225F514C(a1);
    if (v10 == sub_2225F514C(a2))
    {
      int v11 = sub_222627A98(a1);
      if (v11 == sub_222627A98(a2))
      {
        int v12 = sub_222627AA4(a1);
        if (v12 == sub_222627AA4(a2))
        {
          int v13 = sub_222627AB0(a1);
          if (v13 == sub_222627AB0(a2))
          {
            if ((a4 & 1) == 0)
            {
              unsigned int v28 = (void *)sub_2225C3D04(a1);
              int v29 = (void *)sub_2225C3D04(a2);
              uint64_t v30 = sub_222627ABC(a1);
              while (v28 != (void *)v30)
              {
                if (*v28 != *v29) {
                  return 0;
                }
                ++v28;
                ++v29;
              }
            }
            int v31 = sub_222609DE8(v8);
            if (!v31) {
              return 1;
            }
            unsigned int v15 = 0;
            while (1)
            {
              uint64_t v16 = (unsigned int *)sub_222609E38(v8, v15);
              uint64_t v17 = (unsigned int *)sub_222609E38(a2 + 24, v15);
              int v18 = sub_22261BFB4((uint64_t)v16);
              if (v18 != sub_22261BFB4((uint64_t)v17)) {
                break;
              }
              if (v15)
              {
                int v19 = sub_22261BFBC((uint64_t)v16);
                if (v19 != sub_22261BFBC((uint64_t)v17)) {
                  break;
                }
                int v20 = sub_222620488((uint64_t)v16);
                if (v20 != sub_222620488((uint64_t)v17)) {
                  break;
                }
              }
              if (sub_22261AF2C((uint64_t)v16) || sub_22261AF2C((uint64_t)v17))
              {
                uint64_t v21 = sub_22261AF2C((uint64_t)v16);
                uint64_t v22 = sub_22261AF2C((uint64_t)v17);
                if (v21 == v22 || !a4)
                {
                  if (v21 != v22) {
                    return 0;
                  }
                }
                else
                {
                  uint64_t v23 = sub_22261AF2C((uint64_t)v16);
                  int v24 = sub_222627ACC(a1, v23);
                  if (v24 == -1) {
                    return 0;
                  }
                  int v25 = v24;
                  uint64_t v26 = sub_22261AF2C((uint64_t)v17);
                  if (v25 != sub_222627ACC(a2, v26)) {
                    return 0;
                  }
                }
              }
              else
              {
                sub_22261F294(a3, v16, 0, &v33);
                sub_22261F294(a3, v17, 0, &v32);
                char v27 = sub_222627B4C((uint64_t)&v33, (uint64_t)&v32);
                std::string::~string(&v32);
                std::string::~string(&v33);
                if (v27) {
                  return 0;
                }
              }
              ++v15;
              uint64_t result = 1;
              if (v31 == v15) {
                return result;
              }
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_222627A98(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 244) >> 1) & 1;
}

uint64_t sub_222627AA4(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 244) >> 2) & 1;
}

uint64_t sub_222627AB0(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 244) >> 3) & 1;
}

uint64_t sub_222627ABC(uint64_t a1)
{
  return *(void *)(a1 + 8) + 8 * *(unsigned int *)(a1 + 16);
}

unint64_t sub_222627ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a1);
  uint64_t v5 = sub_222627ABC(a1);
  if (v4 == v5) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v6 = -v4;
  while (*(void *)v4 != a2)
  {
    v4 += 8;
    v6 -= 8;
    if (v4 == v5) {
      return 0xFFFFFFFFLL;
    }
  }
  return (unint64_t)(-v6 - sub_2225C3D04(a1)) >> 3;
}

uint64_t sub_222627B4C(uint64_t a1, uint64_t a2)
{
  return sub_2225F7F10(a1, a2) ^ 1;
}

uint64_t sub_222627B68(uint64_t a1)
{
  sub_2225F3278(&v14);
  sub_222627C8C((uint64_t)v13);
  if (a1)
  {
    while (1)
    {
      uint64_t v2 = sub_222627C90(a1);
      if (v2) {
        break;
      }
      uint64_t v3 = sub_222627CD4(a1);
      if (v3)
      {
        int v14 = sub_2225F56EC(v3);
      }
      else
      {
        uint64_t v4 = sub_2225E55A8(a1);
        if ((sub_2226153B4((uint64_t)v13) & 1) == 0)
        {
          char v12 = sub_222627D10(v4);
          sub_222627D1C(v13, &v12);
        }
      }
      a1 = sub_2225C3C70(a1);
      if (!a1) {
        goto LABEL_8;
      }
    }
    uint64_t v9 = v2;
    int v5 = v14;
    if (sub_2226153B4((uint64_t)v13)) {
      char v7 = *(unsigned char *)j_nullsub_1(v13, v10) != 0;
    }
    else {
      char v7 = 1;
    }
    uint64_t v8 = v9;
  }
  else
  {
LABEL_8:
    int v5 = v14;
    if (sub_2226153B4((uint64_t)v13)) {
      char v7 = *(unsigned char *)j_nullsub_1(v13, v6) != 0;
    }
    else {
      char v7 = 1;
    }
    uint64_t v8 = 0;
  }
  sub_222627CCC((uint64_t)&v15, v8, v5, v7);
  sub_222613E88(v13);
  return v15;
}

uint64_t sub_222627C90(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222627E18(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222627CCC(uint64_t a1, uint64_t a2, int a3, char a4)
{
  return sub_222627DDC(a1, a2, a3, a4);
}

uint64_t sub_222627CD4(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222627E80(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222627D10(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 12) >> 4) & 1;
}

unsigned char *sub_222627D1C(unsigned char *a1, char *a2)
{
  char v3 = *a2;
  if (a1[1])
  {
    *(unsigned char *)j_nullsub_1(a1, a2) = v3;
  }
  else
  {
    *a1 = v3;
    a1[1] = 1;
  }
  return a1;
}

BOOL sub_222627D6C(uint64_t a1)
{
  return sub_2225CDBBC((_DWORD *)(a1 + 8));
}

uint64_t sub_222627D78(uint64_t *a1)
{
  if (sub_2226269F8(a1) || !sub_2225C3C70(*a1))
  {
    sub_222627D74((uint64_t)&v4);
    return v4;
  }
  else
  {
    uint64_t v2 = sub_2225C3C70(*a1);
    return sub_222627B68(v2);
  }
}

uint64_t sub_222627DD0(uint64_t a1)
{
  return *(_DWORD *)(a1 + 12) & 3;
}

uint64_t sub_222627DDC(uint64_t result, uint64_t a2, int a3, char a4)
{
  *(void *)uint64_t result = a2;
  *(_DWORD *)(result + 8) = a3;
  *(unsigned char *)(result + 12) = a4;
  return result;
}

uint64_t sub_222627DEC(uint64_t a1)
{
  *(void *)a1 = 0;
  sub_2225F3278((_DWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_222627E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222627E48(&v3);
}

uint64_t sub_222627E48(void *a1)
{
  return sub_222627E50(*a1);
}

BOOL sub_222627E58(uint64_t a1)
{
  return sub_222627DD0(a1) == 0;
}

uint64_t sub_222627E78(uint64_t result)
{
  *(unsigned char *)(result + 1) = 0;
  return result;
}

uint64_t sub_222627E84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222627EB0(&v3);
}

uint64_t sub_222627EB0(void *a1)
{
  return sub_222627EB8(*a1);
}

BOOL sub_222627EC0(uint64_t a1)
{
  return sub_222627DD0(a1) == 1;
}

uint64_t sub_222627EE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = sub_222608E28(a2, 0);
  sub_2225CCBF8(v34, v8);
  uint64_t v9 = sub_2226280FC(a1, v34[0], v34[1], a3);
  if (v9)
  {
    uint64_t v10 = v9;
    int v11 = sub_222607F28(a2);
    if (v11 == 1) {
      return v10;
    }
    unsigned int v17 = 1;
    while (1)
    {
      uint64_t v18 = sub_222608E28(a2, v17);
      sub_2225CCBF8(v29, v18);
      uint64_t result = sub_222628180(a1, v29[0], v29[1], v10);
      if (!result && a4 != 0) {
        break;
      }
      if (result)
      {
        ++v17;
        uint64_t v10 = result;
        if (v11 != v17) {
          continue;
        }
      }
      return result;
    }
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = sub_222608E28(a2, v17);
    sub_2225F52C4(v20, *(unsigned int *)(v21 + 24), 681, (uint64_t)v33);
    uint64_t v22 = sub_222608E28(a2, v17);
    sub_2225CCBF8(v28, v22);
    uint64_t v23 = sub_2225F3774(v33, v28[0], v28[1]);
    sub_22260816C(v10, &v30);
    sub_2225CCBF8(v27, &v30);
    int v24 = sub_2225F3774(v23, v27[0], v27[1]);
    LODWORD(v23) = *(_DWORD *)(sub_222608E28(a2, 0) + 24);
    uint64_t v25 = sub_222608E28(a2, v17 - 1);
    sub_22261F184(&v26, (int)v23, *(_DWORD *)(v25 + 24));
    sub_222625214(v24, &v26);
    goto LABEL_15;
  }
  if (a4)
  {
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = sub_222608E28(a2, 0);
    sub_2225F52C4(v13, *(unsigned int *)(v14 + 24), 682, (uint64_t)v33);
    uint64_t v15 = sub_222608E28(a2, 0);
    sub_2225CCBF8(v32, v15);
    uint64_t v16 = sub_2225F3774(v33, v32[0], v32[1]);
    sub_22260816C(a3, &v30);
    sub_2225CCBF8(v31, &v30);
    sub_2225F3774(v16, v31[0], v31[1]);
LABEL_15:
    std::string::~string(&v30);
    sub_2225F37F0(v33);
  }
  return 0;
}

uint64_t sub_2226280FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v7 = a4;
    while (1)
    {
      uint64_t result = sub_222628180(a1, a2, a3, v7);
      if (result) {
        break;
      }
      uint64_t v7 = *(void *)(v7 + 32);
      if (!v7) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    return sub_22262BD98(a1, a2, a3);
  }
  return result;
}

uint64_t sub_222628180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4) {
    return sub_22260869C(a4, a2, a3);
  }
  else {
    return sub_22262BD98(a1, a2, a3);
  }
}

void *sub_222628190(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = 0;
  sub_222607AE4(a1 + 6);
  a1[36] = 0;
  a1[37] = 0;
  sub_2225CAD04(a1 + 38);
  sub_2225E50E8(a1 + 41);
  sub_222628224(a1 + 45, 0);
  sub_222608F94(a1 + 48, 0);
  sub_222628228(a1 + 51, 0);
  sub_222608F94(a1 + 54, 0);
  sub_222628224(a1 + 57, 0);
  sub_222608F94(a1 + 60, 0);
  return a1;
}

uint64_t sub_222628230(uint64_t a1)
{
  uint64_t v2 = a1 + 328;
  uint64_t v7 = (void *)sub_2225E41A0(a1 + 328);
  uint64_t v6 = sub_2225E41D8(v2);
  while (sub_2225DE624(&v7, &v6))
  {
    uint64_t v3 = sub_2225E4210((uint64_t)&v7);
    if (*(void *)sub_2225E563C(v3))
    {
      uint64_t v4 = (void *)sub_222607F04();
      j__free(v4);
    }
    sub_2225E42EC(&v7);
  }
  sub_222608B18(a1 + 480);
  sub_222628304(a1 + 456);
  sub_222608B18(a1 + 432);
  sub_222628308(a1 + 408);
  sub_222608B18(a1 + 384);
  sub_22262830C(a1 + 360);
  sub_2225E4D6C(v2);
  std::string::~string((std::string *)(a1 + 304));
  sub_2226220B8(a1 + 48);
  return a1;
}

uint64_t sub_222628314(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_22262831C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v5 = a1 + 360;
  sub_2226283F0(a1 + 360, &v14, (uint64_t)v13);
  sub_222628464(v5, (uint64_t)v11);
  sub_2225F8068(v12, v11);
  if (!sub_22260B634(v13, (uint64_t)v12)) {
    return sub_2225F8068(a3, v13);
  }
  if (sub_222608330(v14) != *(void *)(a1 + 40)) {
    return sub_2225F8068(a3, v13);
  }
  uint64_t v6 = (char *)sub_2225C3C70(v14);
  sub_2225C3D00((int)v10, v6);
  uint64_t v7 = sub_2225CF480(v10[0], v10[1]);
  if (!sub_2226284C0(v7, v8)) {
    return sub_2225F8068(a3, v13);
  }
  sub_22261956C(*(void *)(a1 + 32));
  return sub_2226283F0(v5, &v14, a3);
}

uint64_t sub_2226283F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_2226304EC(a1, a2, &v8)) {
    return sub_222628464(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_2226309B0(a1);
  return sub_222630FEC(a3, v5, v6, 1);
}

uint64_t sub_222628464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2226309B0(a1);
  uint64_t v5 = sub_2226309B0(a1);

  return sub_222630FEC(a2, v4, v5, 1);
}

uint64_t sub_2226284C0(uint64_t a1, uint64_t a2)
{
  sub_2225D934C(v24, a1, a2);
  char v23 = 1;
  uint64_t v2 = sub_2225D9350((uint64_t)v24, "float.h", (uint64_t)&v23);
  char v22 = 1;
  uint64_t v3 = sub_2225D95FC(v2, "iso646.h", (uint64_t)&v22);
  char v21 = 1;
  uint64_t v4 = sub_2225D95FC(v3, "limits.h", (uint64_t)&v21);
  char v20 = 1;
  uint64_t v5 = sub_2225D93C4(v4, (uint64_t)"stdalign.h", (uint64_t)&v20);
  char v19 = 1;
  uint64_t v6 = sub_2225D95FC(v5, "stdarg.h", (uint64_t)&v19);
  char v18 = 1;
  uint64_t v7 = sub_2225DB220(v6, (uint64_t)"stdBOOL.h", (uint64_t)&v18);
  char v17 = 1;
  uint64_t v8 = sub_2225D95FC(v7, "stddef.h", (uint64_t)&v17);
  char v16 = 1;
  uint64_t v9 = sub_2225D95FC(v8, "stdint.h", (uint64_t)&v16);
  char v15 = 1;
  uint64_t v10 = sub_2225D95FC(v9, "tgmath.h", (uint64_t)&v15);
  char v14 = 1;
  uint64_t v11 = sub_2225D95FC(v10, "unwind.h", (uint64_t)&v14);
  unsigned __int8 v13 = 0;
  return sub_2225F2DA4(v11, &v13);
}

uint64_t sub_2226285D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = sub_222608330(a2);
  uint64_t v5 = sub_2225C5B40(*a1);
  uint64_t v14 = sub_2225F93A0(v5, v16);
  uint64_t v15 = v6;
  while (1)
  {
    sub_22260B5C0((uint64_t)(a1 + 48), &v16, (uint64_t)v13);
    sub_22260B264((uint64_t)(a1 + 48), (uint64_t)v11);
    sub_2225F8068(v12, v11);
    if (sub_2225F9558(v13, (uint64_t)v12)) {
      break;
    }
    sub_2225CC7B8(a3, &v16);
    uint64_t v14 = sub_2225CF24C(v14, v15);
    uint64_t v15 = v7;
    if (!sub_2225CF1E0((uint64_t)&v14))
    {
      uint64_t v8 = sub_2225C5B40(*a1);
      uint64_t v16 = (uint64_t)sub_2225F8658(v8, v14, v15, 1);
      if (v16) {
        continue;
      }
    }
    sub_222618400((uint64_t)&v17);
    return v17;
  }
  uint64_t v9 = sub_2225C3C70((uint64_t)v13);
  sub_2226286CC(&v17, *(void *)(v9 + 8), 0);
  return v17;
}

uint64_t sub_2226286D0(uint64_t *a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_222628998(a2);
  uint64_t result = sub_222628998(a1[37]);
  if (v12 == result)
  {
    uint64_t v35 = a4;
    uint64_t v36 = a5;
    if (a2) {
      sub_2226289A4((uint64_t)a1, a2, 0);
    }
    sub_22262831C((uint64_t)a1, a6, (uint64_t)v42);
    sub_222628464((uint64_t)(a1 + 45), (uint64_t)v41);
    sub_2225F8068(&v39, v41);
    if (sub_2225F9558(v42, (uint64_t)&v39))
    {
      uint64_t v14 = sub_2225C3C70((uint64_t)v42) + 8;
      uint64_t v15 = (_DWORD *)sub_2225C3C70(v14);
      uint64_t v16 = sub_2225C3D04(v14);
      if (v15 != (_DWORD *)v16)
      {
        uint64_t v17 = (_DWORD *)v16;
        char v18 = 0;
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        do
        {
          uint64_t result = sub_222628A6C(v15);
          if (result == 2)
          {
            char v18 = 1;
          }
          else
          {
            uint64_t result = sub_22261964C(v15, v21);
            if (result == a2) {
              return result;
            }
            int v22 = sub_222628A6C(v15);
            uint64_t v24 = sub_22261964C(v15, v23);
            uint64_t result = sub_222628A70(a2, v22, v24);
            if (result)
            {
              uint64_t result = sub_22261964C(v15, v25);
              uint64_t v19 = result;
            }
            else
            {
              if (!a2) {
                return result;
              }
              if ((*(unsigned char *)(a1[2] + 6) & 0x20) == 0) {
                return result;
              }
              uint64_t v26 = sub_22261964C(v15, v25);
              uint64_t result = sub_222628AB4(a2, v26);
              if (result) {
                return result;
              }
              uint64_t result = sub_22261964C(v15, v27);
              uint64_t v20 = result;
            }
          }
          v15 += 2;
        }
        while (v15 != v17);
        if (v19)
        {
          sub_2225F52C4(a1[1], a3, 772, (uint64_t)&v39);
          sub_2225F3774((uint64_t *)&v39, v35, v36);
          unsigned int v28 = &v39;
          return sub_2225F37F0(v28);
        }
        if (v20)
        {
          sub_2225F52C4(a1[1], a3, 771, (uint64_t)v41);
          sub_22260816C(a2, &v39);
          sub_2225CCBF8(v40, &v39);
          uint64_t v29 = v40[0];
          uint64_t v30 = v40[1];
          goto LABEL_31;
        }
        if (v18) {
          return result;
        }
      }
    }
    uint64_t result = sub_222628B18(a1, a6);
    if (result) {
      return result;
    }
    if ((*(unsigned char *)(a1[2] + 6) & 0x80) == 0)
    {
      if (!a2) {
        return result;
      }
      if ((*(_WORD *)(sub_222628BA4(a2) + 528) & 8) != 0) {
        int v31 = 882;
      }
      else {
        int v31 = 883;
      }
      sub_2225F52C4(a1[1], a3, v31, (uint64_t)v41);
      sub_22260816C(a2, &v39);
      sub_2225CCBF8(v37, &v39);
      uint64_t v32 = v37[0];
      uint64_t v33 = v37[1];
      uint64_t v34 = v41;
      goto LABEL_32;
    }
    sub_2225F52C4(a1[1], a3, 771, (uint64_t)v41);
    sub_22260816C(a2, &v39);
    sub_2225CCBF8(v38, &v39);
    uint64_t v29 = v38[0];
    uint64_t v30 = v38[1];
LABEL_31:
    uint64_t v34 = sub_2225F3774(v41, v29, v30);
    uint64_t v32 = v35;
    uint64_t v33 = v36;
LABEL_32:
    sub_2225F3774(v34, v32, v33);
    std::string::~string(&v39);
    unsigned int v28 = (std::string *)v41;
    return sub_2225F37F0(v28);
  }
  return result;
}

uint64_t sub_222628998(uint64_t result)
{
  if (result) {
    return sub_222628BA4(result);
  }
  return result;
}

uint64_t sub_2226289A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = (void *)(a2 + 896);
  int v7 = sub_2226087F4(a2 + 896);
  if (v7)
  {
    unsigned int v8 = 0;
    char v9 = 0;
    do
    {
      uint64_t v12 = 0;
      uint64_t v10 = sub_22262CE6C((uint64_t)v6, v8);
      uint64_t v12 = sub_222627EE4(a1, v10, a2, a3);
      if (v12) {
        sub_2225CC7B8(a2 + 856, &v12);
      }
      else {
        char v9 = 1;
      }
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    char v9 = 0;
  }
  sub_22262CE98(v6);
  return v9 & 1;
}

BOOL sub_222628A70(uint64_t a1, int a2, uint64_t a3)
{
  return a2 == 1 && sub_222628BA4(a3) != a1;
}

BOOL sub_222628AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v2 = a1 + 856;
  uint64_t v3 = sub_2225C3C70(a1 + 856);
  uint64_t v4 = sub_2225C3D04(v2);
  uint64_t v5 = sub_2226300FC(v3, v4, &v7);
  return v5 != sub_2225C3D04(v2);
}

BOOL sub_222628B18(uint64_t *a1, uint64_t a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  sub_2225F48E0(v8);
  uint64_t v7 = sub_2226285D0(a1, a2, (uint64_t)v8);
  BOOL v5 = sub_222629020(&v7, v4);
  sub_2225C56C4(v8);
  return v5;
}

const void *sub_222628BA8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = *MEMORY[0x263EF8340];
  uint64_t v57 = a2;
  sub_22262831C((uint64_t)a1, a2, (uint64_t)v56);
  uint64_t v6 = (uint64_t)(a1 + 45);
  sub_222628464((uint64_t)(a1 + 45), (uint64_t)v59);
  sub_2225F8068(v53, v59);
  if (!sub_2225F9558(v56, (uint64_t)v53))
  {
    sub_2225F48E0(v59);
    uint64_t v55 = sub_2226285D0(a1, a2, (uint64_t)v59);
    if (!sub_222629020(&v55, v19)) {
      goto LABEL_36;
    }
    uint64_t v21 = sub_22261964C(&v55, v20);
    uint64_t v54 = v21;
    uint64_t v22 = v21;
    do
    {
      uint64_t v23 = v22;
      if (sub_2226082D0(v22)) {
        break;
      }
      uint64_t v22 = *(void *)(v23 + 32);
    }
    while (v22);
    if ((*(_WORD *)(v23 + 528) & 0x100) != 0)
    {
      unint64_t v28 = sub_222629040((_DWORD **)a1, v23);
      unsigned int v29 = *(unsigned __int16 *)(v23 + 528);
      int v30 = sub_2225CC780((uint64_t)v59);
      int v31 = (v29 >> 9) & 1;
      if (v30)
      {
        unsigned int v32 = v30 - 1;
        do
        {
          sub_2225CF1C4(v53);
          uint64_t v33 = (uint64_t *)sub_2225F84F4((uint64_t)v59, v32);
          uint64_t v34 = (char *)sub_2225C3C70(*v33);
          sub_2225C3D00((int)v52, v34);
          uint64_t v35 = (const void *)sub_2225CF4B4(v52[0], v52[1]);
          sub_2226290A0((uint64_t)v35, v36, v53);
          uint64_t v54 = sub_22262B6F8(a1, v35, v37, v54, 0, v31);
          *sub_22260B594((uint64_t)(a1 + 54), &v54) = v28;
          uint64_t v38 = v54;
          *(_WORD *)(v54 + 528) |= 0x80u;
          std::string v39 = (uint64_t *)sub_2225F84F4((uint64_t)v59, v32);
          *sub_22260B594((uint64_t)(a1 + 48), v39) = v38;
          if ((*(_WORD *)(v23 + 528) & 0x400) != 0 && sub_2225CF1D0((void *)(v54 + 584)))
          {
            uint64_t v40 = v54 + 584;
            sub_222627EE0(&v51, 0, 1);
            sub_2225CC7B8(v40, &v51);
          }
          sub_2225CA520(v53);
          --v32;
        }
        while (v32 != -1);
      }
      sub_2225CF1C4(v53);
      std::string v41 = (char *)sub_2225C3C70(a2);
      sub_2225C3D00((int)v50, v41);
      unsigned int v42 = (const void *)sub_2225CF4B4(v50[0], v50[1]);
      sub_2226290A0((uint64_t)v42, v43, v53);
      uint64_t v54 = sub_22262B6F8(a1, v42, v44, v54, 0, v31);
      *sub_22260B594((uint64_t)(a1 + 54), &v54) = v28;
      uint64_t v45 = v54;
      *(_WORD *)(v54 + 528) |= 0x80u;
      sub_22262B858(v45, a2);
      if ((*(_WORD *)(v23 + 528) & 0x400) != 0 && sub_2225CF1D0((void *)(v54 + 584)))
      {
        uint64_t v46 = v54 + 584;
        sub_222627EE0(&v51, 0, 1);
        sub_2225CC7B8(v46, &v51);
      }
      sub_2225CA520(v53);
    }
    else
    {
      int v24 = sub_2225CC780((uint64_t)v59);
      if (v24)
      {
        unsigned int v25 = 0;
        uint64_t v26 = (uint64_t)(a1 + 48);
        do
        {
          uint64_t v27 = (uint64_t *)sub_2225F84F4((uint64_t)v59, v25);
          *sub_22260B594(v26, v27) = v21;
          ++v25;
        }
        while (v24 != v25);
      }
    }
    unint64_t v47 = sub_22262B884(v6, &v57);
    sub_2226286CC(v53, v54, 0);
    sub_2225CC7B8((uint64_t)v47, v53);
    if (sub_222607D40(v54))
    {
      unint64_t v48 = sub_22262B884(v6, &v57);
      uint64_t v58 = *(void *)sub_222608644((uint64_t)v48);
    }
    else
    {
LABEL_36:
      sub_222618400((uint64_t)&v58);
    }
    sub_2225C56C4(v59);
    return (const void *)v58;
  }
  uint64_t v7 = v53;
  sub_222618400((uint64_t)v53);
  uint64_t v8 = sub_2225C3C70((uint64_t)v56);
  uint64_t v9 = (const void **)sub_2225C3C70(v8 + 8);
  uint64_t v10 = sub_2225C3C70((uint64_t)v56);
  uint64_t v11 = sub_2225C3D04(v10 + 8);
  if (v9 == (const void **)v11) {
    return *v7;
  }
  uint64_t v12 = (const void **)v11;
  while (1)
  {
    if (sub_222628A6C(v9) == 2) {
      goto LABEL_13;
    }
    uint64_t v14 = sub_22261964C(v9, v13);
    if (!sub_222607D40(v14)) {
      goto LABEL_13;
    }
    if (sub_22261964C(v9, v15) == a3) {
      break;
    }
    if (a3 && (*(unsigned char *)(a1[2] + 6) & 0x20) != 0 && (uint64_t v17 = sub_22261964C(v9, v16), !sub_222628AB4(a3, v17)))
    {
LABEL_13:
      if (++v9 == v12)
      {
        uint64_t v7 = v53;
        return *v7;
      }
    }
    else
    {
      char v18 = v9 + 1;
      v53[0] = *v9;
      uint64_t v7 = v53;
      if (!sub_222628A6C(v9)) {
        return *v7;
      }
      ++v9;
      if (v18 == v12) {
        return *v7;
      }
    }
  }
  uint64_t v7 = v9;
  return *v7;
}

BOOL sub_222629020(void *a1, uint64_t a2)
{
  return sub_222608790(a1, a2) != 0;
}

unint64_t sub_222629040(_DWORD **a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if ((*(_WORD *)(a2 + 528) & 0x80) != 0)
  {
    v4[0] = sub_22262BCC8((uint64_t)(a1 + 54), &v5);
    v4[1] = v3;
    return *(void *)(sub_2225C3C70((uint64_t)v4) + 8);
  }
  else
  {
    return sub_22262CDA0(a1, a2);
  }
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2226290A0(uint64_t a1, uint64_t a2, const void **a3)
{
  *((void *)&v956 + 1) = a2;
  if (!sub_2225CF1E0((uint64_t)&v956))
  {
    if (sub_2226301D0(v956, *((uint64_t *)&v956 + 1))) {
      goto LABEL_12;
    }
    sub_2225C5D90(a3);
    unsigned __int8 v4 = sub_2225CC124(&v956, 0);
    if (sub_2225F4928(v4))
    {
      LOBYTE(v955) = 95;
      sub_2225C52D8((uint64_t)a3, &v955);
    }
    int v5 = sub_2225C5664((uint64_t)a3);
    int v6 = sub_2225C3D04((uint64_t)&v956);
    sub_2225CE1E8(a3, v6 + v5);
    uint64_t v7 = sub_2225C3D04((uint64_t)&v956);
    if (v7)
    {
      uint64_t v8 = 0;
      do
      {
        unsigned __int8 v9 = sub_2225CC124(&v956, v8);
        if (sub_222630268(v9)) {
          LOBYTE(v955) = sub_2225CC124(&v956, v8);
        }
        else {
          LOBYTE(v955) = 95;
        }
        sub_2225C52D8((uint64_t)a3, &v955);
        ++v8;
      }
      while (v7 != v8);
    }
    while (1)
    {
      uint64_t v10 = sub_2225CC180((uint64_t)a3);
      uint64_t v11 = sub_2225C5664((uint64_t)a3);
      sub_2225C3D0C(&v955, v10, v11);
      long long v956 = v955;
LABEL_12:
      uint64_t v12 = sub_2225D934C(&v955, v956, *((uint64_t *)&v956 + 1));
      char v954 = 1;
      uint64_t v13 = sub_2225D9520((uint64_t)v12, "auto", (uint64_t)&v954);
      char v953 = 1;
      uint64_t v14 = sub_2225D9438(v13, (uint64_t)"break", (uint64_t)&v953);
      char v952 = 1;
      uint64_t v15 = sub_2225D9520(v14, "case", (uint64_t)&v952);
      char v951 = 1;
      uint64_t v16 = sub_2225D9520(v15, "char", (uint64_t)&v951);
      char v950 = 1;
      uint64_t v17 = sub_2225D9438(v16, (uint64_t)"const", (uint64_t)&v950);
      char v949 = 1;
      uint64_t v18 = sub_2225D95FC(v17, "continue", (uint64_t)&v949);
      char v948 = 1;
      uint64_t v19 = sub_2225D9350(v18, "default", (uint64_t)&v948);
      char v947 = 1;
      uint64_t v20 = sub_2225DB4FC(v19, (unsigned __int16 *)"do", (uint64_t)&v947);
      char v946 = 1;
      uint64_t v21 = sub_2225D9588(v20, (uint64_t)"double", (uint64_t)&v946);
      char v945 = 1;
      uint64_t v22 = sub_2225D9520(v21, "else", (uint64_t)&v945);
      char v944 = 1;
      uint64_t v23 = sub_2225D9520(v22, "enum", (uint64_t)&v944);
      char v943 = 1;
      uint64_t v24 = sub_2225D9588(v23, (uint64_t)"extern", (uint64_t)&v943);
      char v942 = 1;
      uint64_t v25 = sub_2225D9438(v24, (uint64_t)"float", (uint64_t)&v942);
      char v941 = 1;
      uint64_t v26 = sub_2225D94AC(v25, (unsigned __int16 *)"for", (uint64_t)&v941);
      char v940 = 1;
      uint64_t v27 = sub_2225D9520(v26, "goto", (uint64_t)&v940);
      char v939 = 1;
      uint64_t v28 = sub_2225DB4FC(v27, (unsigned __int16 *)"if", (uint64_t)&v939);
      char v938 = 1;
      uint64_t v29 = sub_2225D9588(v28, (uint64_t)"inline", (uint64_t)&v938);
      char v937 = 1;
      uint64_t v30 = sub_2225D94AC(v29, (unsigned __int16 *)"int", (uint64_t)&v937);
      char v936 = 1;
      uint64_t v31 = sub_2225D9520(v30, "long", (uint64_t)&v936);
      char v935 = 1;
      uint64_t v32 = sub_2225D95FC(v31, "register", (uint64_t)&v935);
      char v934 = 1;
      uint64_t v33 = sub_2225D95FC(v32, "restrict", (uint64_t)&v934);
      char v933 = 1;
      uint64_t v34 = sub_2225D9588(v33, (uint64_t)"return", (uint64_t)&v933);
      char v932 = 1;
      uint64_t v35 = sub_2225D9438(v34, (uint64_t)"short", (uint64_t)&v932);
      char v931 = 1;
      uint64_t v36 = sub_2225D9588(v35, (uint64_t)"signed", (uint64_t)&v931);
      char v930 = 1;
      uint64_t v37 = sub_2225D9588(v36, (uint64_t)"sizeof", (uint64_t)&v930);
      char v929 = 1;
      uint64_t v38 = sub_2225D9588(v37, (uint64_t)"static", (uint64_t)&v929);
      char v928 = 1;
      uint64_t v39 = sub_2225D9588(v38, (uint64_t)"struct", (uint64_t)&v928);
      char v927 = 1;
      uint64_t v40 = sub_2225D9588(v39, (uint64_t)"switch", (uint64_t)&v927);
      char v926 = 1;
      uint64_t v41 = sub_2225D9350(v40, "typedef", (uint64_t)&v926);
      char v925 = 1;
      uint64_t v42 = sub_2225D9438(v41, (uint64_t)"union", (uint64_t)&v925);
      char v924 = 1;
      uint64_t v43 = sub_2225D95FC(v42, "unsigned", (uint64_t)&v924);
      char v923 = 1;
      uint64_t v44 = sub_2225D9520(v43, "void", (uint64_t)&v923);
      char v922 = 1;
      uint64_t v45 = sub_2225D95FC(v44, "volatile", (uint64_t)&v922);
      char v921 = 1;
      uint64_t v46 = sub_2225D9438(v45, (uint64_t)"while", (uint64_t)&v921);
      char v920 = 1;
      uint64_t v47 = sub_2225D95FC(v46, "_Alignas", (uint64_t)&v920);
      char v919 = 1;
      uint64_t v48 = sub_2225D95FC(v47, "_Alignof", (uint64_t)&v919);
      char v918 = 1;
      uint64_t v49 = sub_2225D9350(v48, "_Atomic", (uint64_t)&v918);
      char v917 = 1;
      uint64_t v50 = sub_2225D9438(v49, (uint64_t)"_Bool", (uint64_t)&v917);
      char v916 = 1;
      uint64_t v51 = sub_2225D95FC(v50, "_Complex", (uint64_t)&v916);
      char v915 = 1;
      uint64_t v52 = sub_2225D95FC(v51, "_Generic", (uint64_t)&v915);
      char v914 = 1;
      uint64_t v53 = sub_2225D93C4(v52, (uint64_t)"_Imaginary", (uint64_t)&v914);
      char v913 = 1;
      uint64_t v54 = sub_2225DB220(v53, (uint64_t)"_Noreturn", (uint64_t)&v913);
      char v912 = 1;
      uint64_t v55 = sub_2225DB308(v54, "_Static_assert", (uint64_t)&v912);
      char v911 = 1;
      uint64_t v56 = sub_2225F2718(v55, "_Thread_local", (uint64_t)&v911);
      char v910 = 1;
      uint64_t v57 = sub_2225D95FC(v56, "__func__", (uint64_t)&v910);
      char v909 = 1;
      uint64_t v58 = sub_2225D93C4(v57, (uint64_t)"__objc_yes", (uint64_t)&v909);
      char v908 = 1;
      uint64_t v59 = sub_2225DB220(v58, (uint64_t)"__objc_no", (uint64_t)&v908);
      char v907 = 1;
      uint64_t v60 = sub_2225D94AC(v59, (unsigned __int16 *)"asm", (uint64_t)&v907);
      char v906 = 1;
      uint64_t v61 = sub_2225D9520(v60, "BOOL", (uint64_t)&v906);
      char v905 = 1;
      uint64_t v62 = sub_2225D9438(v61, (uint64_t)"catch", (uint64_t)&v905);
      char v904 = 1;
      uint64_t v63 = sub_2225D9438(v62, (uint64_t)"class", (uint64_t)&v904);
      char v903 = 1;
      uint64_t v64 = sub_2225D93C4(v63, (uint64_t)"const_cast", (uint64_t)&v903);
      char v902 = 1;
      uint64_t v65 = sub_2225D9588(v64, (uint64_t)"delete", (uint64_t)&v902);
      char v901 = 1;
      uint64_t v66 = sub_2225DB294(v65, (uint64_t)"dynamic_cast", (uint64_t)&v901);
      char v900 = 1;
      uint64_t v67 = sub_2225D95FC(v66, "explicit", (uint64_t)&v900);
      char v899 = 1;
      uint64_t v68 = sub_2225D9588(v67, (uint64_t)"export", (uint64_t)&v899);
      char v898 = 1;
      uint64_t v69 = sub_2225D9438(v68, (uint64_t)"false", (uint64_t)&v898);
      char v897 = 1;
      uint64_t v70 = sub_2225D9588(v69, (uint64_t)"friend", (uint64_t)&v897);
      char v896 = 1;
      uint64_t v71 = sub_2225D9350(v70, "mutable", (uint64_t)&v896);
      char v895 = 1;
      uint64_t v72 = sub_2225DB220(v71, (uint64_t)"namespace", (uint64_t)&v895);
      char v894 = 1;
      uint64_t v73 = sub_2225D94AC(v72, (unsigned __int16 *)"new", (uint64_t)&v894);
      char v893 = 1;
      uint64_t v74 = sub_2225D95FC(v73, "operator", (uint64_t)&v893);
      char v892 = 1;
      uint64_t v75 = sub_2225D9350(v74, "private", (uint64_t)&v892);
      char v891 = 1;
      uint64_t v76 = sub_2225DB220(v75, (uint64_t)"protected", (uint64_t)&v891);
      char v890 = 1;
      uint64_t v77 = sub_2225D9588(v76, (uint64_t)"public", (uint64_t)&v890);
      char v889 = 1;
      uint64_t v78 = sub_2225F2B58(v77, "reinterpret_cast", (uint64_t)&v889);
      char v888 = 1;
      uint64_t v79 = sub_2225DAEFC(v78, "static_cast", (uint64_t)&v888);
      char v887 = 1;
      uint64_t v80 = sub_2225D95FC(v79, "template", (uint64_t)&v887);
      char v886 = 1;
      uint64_t v81 = sub_2225D9520(v80, "this", (uint64_t)&v886);
      char v885 = 1;
      uint64_t v82 = sub_2225D9438(v81, (uint64_t)"throw", (uint64_t)&v885);
      char v884 = 1;
      uint64_t v83 = sub_2225D9520(v82, "true", (uint64_t)&v884);
      char v883 = 1;
      uint64_t v84 = sub_2225D94AC(v83, (unsigned __int16 *)"try", (uint64_t)&v883);
      char v882 = 1;
      uint64_t v85 = sub_2225D95FC(v84, "typename", (uint64_t)&v882);
      char v881 = 1;
      uint64_t v86 = sub_2225D9588(v85, (uint64_t)"typeid", (uint64_t)&v881);
      char v880 = 1;
      uint64_t v87 = sub_2225D9438(v86, (uint64_t)"using", (uint64_t)&v880);
      char v879 = 1;
      uint64_t v88 = sub_2225D9350(v87, "virtual", (uint64_t)&v879);
      char v878 = 1;
      uint64_t v89 = sub_2225D9350(v88, "wchar_t", (uint64_t)&v878);
      char v877 = 1;
      uint64_t v90 = sub_2225D9350(v89, "alignas", (uint64_t)&v877);
      char v876 = 1;
      uint64_t v91 = sub_2225D9350(v90, "alignof", (uint64_t)&v876);
      char v875 = 1;
      uint64_t v92 = sub_2225D95FC(v91, "char16_t", (uint64_t)&v875);
      char v874 = 1;
      uint64_t v93 = sub_2225D95FC(v92, "char32_t", (uint64_t)&v874);
      char v873 = 1;
      uint64_t v94 = sub_2225DB220(v93, (uint64_t)"constexpr", (uint64_t)&v873);
      char v872 = 1;
      uint64_t v95 = sub_2225D95FC(v94, "decltype", (uint64_t)&v872);
      char v871 = 1;
      uint64_t v96 = sub_2225D95FC(v95, "noexcept", (uint64_t)&v871);
      char v870 = 1;
      uint64_t v97 = sub_2225D9350(v96, "nullptr", (uint64_t)&v870);
      char v869 = 1;
      uint64_t v98 = sub_2225F2718(v97, "static_assert", (uint64_t)&v869);
      char v868 = 1;
      uint64_t v99 = sub_2225DB294(v98, (uint64_t)"thread_local", (uint64_t)&v868);
      char v867 = 1;
      uint64_t v100 = sub_2225D93C4(v99, (uint64_t)"_Decimal32", (uint64_t)&v867);
      char v866 = 1;
      uint64_t v101 = sub_2225D93C4(v100, (uint64_t)"_Decimal64", (uint64_t)&v866);
      char v865 = 1;
      uint64_t v102 = sub_2225DAEFC(v101, "_Decimal128", (uint64_t)&v865);
      char v864 = 1;
      uint64_t v103 = sub_2225D9588(v102, (uint64_t)"__null", (uint64_t)&v864);
      char v863 = 1;
      uint64_t v104 = sub_2225DB220(v103, (uint64_t)"__alignof", (uint64_t)&v863);
      char v862 = 1;
      uint64_t v105 = sub_2225DAEFC(v104, "__attribute", (uint64_t)&v862);
      char v861 = 1;
      uint64_t v106 = sub_2225F28E8(v105, "__builtin_choose_expr", (uint64_t)&v861);
      char v860 = 1;
      uint64_t v107 = sub_2225F24B8(v106, (uint64_t)"__builtin_offsetof", (uint64_t)&v860);
      char v859 = 1;
      uint64_t v108 = sub_2225F2AD4(v107, (uint64_t)"__builtin_types_compatible_p", (uint64_t)&v859);
      char v858 = 1;
      uint64_t v109 = sub_2225F2B58(v108, "__builtin_va_arg", (uint64_t)&v858);
      char v857 = 1;
      uint64_t v110 = sub_2225F2718(v109, "__extension__", (uint64_t)&v857);
      char v856 = 1;
      uint64_t v111 = sub_2225D9588(v110, (uint64_t)"__imag", (uint64_t)&v856);
      char v855 = 1;
      uint64_t v112 = sub_2225D95FC(v111, "__int128", (uint64_t)&v855);
      char v854 = 1;
      uint64_t v113 = sub_2225DB220(v112, (uint64_t)"__label__", (uint64_t)&v854);
      char v853 = 1;
      uint64_t v114 = sub_2225D9588(v113, (uint64_t)"__real", (uint64_t)&v853);
      char v852 = 1;
      uint64_t v115 = sub_2225D95FC(v114, "__thread", (uint64_t)&v852);
      char v851 = 1;
      uint64_t v116 = sub_2225DB294(v115, (uint64_t)"__FUNCTION__", (uint64_t)&v851);
      char v850 = 1;
      uint64_t v117 = sub_2225F29D8(v116, "__PRETTY_FUNCTION__", (uint64_t)&v850);
      char v849 = 1;
      uint64_t v118 = sub_2225D9588(v117, (uint64_t)"typeof", (uint64_t)&v849);
      char v848 = 1;
      uint64_t v119 = sub_2225F2718(v118, "__FUNCDNAME__", (uint64_t)&v848);
      char v847 = 1;
      uint64_t v120 = sub_2225DAEFC(v119, "__FUNCSIG__", (uint64_t)&v847);
      char v846 = 1;
      uint64_t v121 = sub_2225F2718(v120, "L__FUNCTION__", (uint64_t)&v846);
      char v845 = 1;
      uint64_t v122 = sub_2225F262C(v121, (uint64_t)"__is_interface_class", (uint64_t)&v845);
      char v844 = 1;
      uint64_t v123 = sub_2225DAEFC(v122, "__is_sealed", (uint64_t)&v844);
      char v843 = 1;
      uint64_t v124 = sub_2225F278C(v123, (uint64_t)"__is_destructible", (uint64_t)&v843);
      char v842 = 1;
      uint64_t v125 = sub_2225F2530(v124, (uint64_t)"__is_nothrow_destructible", (uint64_t)&v842);
      char v841 = 1;
      uint64_t v126 = sub_2225F25B4(v125, "__is_nothrow_assignable", (uint64_t)&v841);
      char v840 = 1;
      uint64_t v127 = sub_2225F24B8(v126, (uint64_t)"__is_constructible", (uint64_t)&v840);
      char v839 = 1;
      uint64_t v128 = sub_2225F2A50(v127, (uint64_t)"__is_nothrow_constructible", (uint64_t)&v839);
      char v838 = 1;
      uint64_t v129 = sub_2225F262C(v128, (uint64_t)"__has_nothrow_assign", (uint64_t)&v838);
      char v837 = 1;
      uint64_t v130 = sub_2225F2530(v129, (uint64_t)"__has_nothrow_move_assign", (uint64_t)&v837);
      char v836 = 1;
      uint64_t v131 = sub_2225F24B8(v130, (uint64_t)"__has_nothrow_copy", (uint64_t)&v836);
      char v835 = 1;
      uint64_t v132 = sub_2225F2530(v131, (uint64_t)"__has_nothrow_constructor", (uint64_t)&v835);
      char v834 = 1;
      uint64_t v133 = sub_2225F262C(v132, (uint64_t)"__has_trivial_assign", (uint64_t)&v834);
      char v833 = 1;
      uint64_t v134 = sub_2225F2530(v133, (uint64_t)"__has_trivial_move_assign", (uint64_t)&v833);
      char v832 = 1;
      uint64_t v135 = sub_2225F24B8(v134, (uint64_t)"__has_trivial_copy", (uint64_t)&v832);
      char v831 = 1;
      uint64_t v136 = sub_2225F2530(v135, (uint64_t)"__has_trivial_constructor", (uint64_t)&v831);
      char v830 = 1;
      uint64_t v137 = sub_222630284(v136, "__has_trivial_move_constructor", (uint64_t)&v830);
      char v829 = 1;
      uint64_t v138 = sub_2225F2960(v137, "__has_trivial_destructor", (uint64_t)&v829);
      char v828 = 1;
      uint64_t v139 = sub_2225F2960(v138, "__has_virtual_destructor", (uint64_t)&v828);
      char v827 = 1;
      uint64_t v140 = sub_2225F2718(v139, "__is_abstract", (uint64_t)&v827);
      char v826 = 1;
      uint64_t v141 = sub_2225DB294(v140, (uint64_t)"__is_base_of", (uint64_t)&v826);
      char v825 = 1;
      uint64_t v142 = sub_2225D93C4(v141, (uint64_t)"__is_class", (uint64_t)&v825);
      char v824 = 1;
      uint64_t v143 = sub_2225F29D8(v142, "__is_convertible_to", (uint64_t)&v824);
      char v823 = 1;
      uint64_t v144 = sub_2225D93C4(v143, (uint64_t)"__is_empty", (uint64_t)&v823);
      char v822 = 1;
      uint64_t v145 = sub_2225DB220(v144, (uint64_t)"__is_enum", (uint64_t)&v822);
      char v821 = 1;
      uint64_t v146 = sub_2225D93C4(v145, (uint64_t)"__is_final", (uint64_t)&v821);
      char v820 = 1;
      uint64_t v147 = sub_2225DB294(v146, (uint64_t)"__is_literal", (uint64_t)&v820);
      char v819 = 1;
      uint64_t v148 = sub_2225F278C(v147, (uint64_t)"__is_literal_type", (uint64_t)&v819);
      char v818 = 1;
      uint64_t v149 = sub_2225D95FC(v148, "__is_pod", (uint64_t)&v818);
      char v817 = 1;
      uint64_t v150 = sub_2225F2B58(v149, "__is_polymorphic", (uint64_t)&v817);
      char v816 = 1;
      uint64_t v151 = sub_2225DB294(v150, (uint64_t)"__is_trivial", (uint64_t)&v816);
      char v815 = 1;
      uint64_t v152 = sub_2225D93C4(v151, (uint64_t)"__is_union", (uint64_t)&v815);
      char v814 = 1;
      uint64_t v153 = sub_2225F2AD4(v152, (uint64_t)"__is_trivially_constructible", (uint64_t)&v814);
      char v813 = 1;
      uint64_t v154 = sub_2225F25B4(v153, "__is_trivially_copyable", (uint64_t)&v813);
      char v812 = 1;
      uint64_t v155 = sub_2225F2530(v154, (uint64_t)"__is_trivially_assignable", (uint64_t)&v812);
      char v811 = 1;
      uint64_t v156 = sub_2225F278C(v155, (uint64_t)"__underlying_type", (uint64_t)&v811);
      char v810 = 1;
      uint64_t v157 = sub_2225F2B58(v156, "__is_lvalue_expr", (uint64_t)&v810);
      char v809 = 1;
      uint64_t v158 = sub_2225F2B58(v157, "__is_rvalue_expr", (uint64_t)&v809);
      char v808 = 1;
      uint64_t v159 = sub_2225F26A4(v158, "__is_arithmetic", (uint64_t)&v808);
      char v807 = 1;
      uint64_t v160 = sub_2225F29D8(v159, "__is_floating_point", (uint64_t)&v807);
      char v806 = 1;
      uint64_t v161 = sub_2225F2718(v160, "__is_integral", (uint64_t)&v806);
      char v805 = 1;
      uint64_t v162 = sub_2225F24B8(v161, (uint64_t)"__is_complete_type", (uint64_t)&v805);
      char v804 = 1;
      uint64_t v163 = sub_2225DB220(v162, (uint64_t)"__is_void", (uint64_t)&v804);
      char v803 = 1;
      uint64_t v164 = sub_2225D93C4(v163, (uint64_t)"__is_array", (uint64_t)&v803);
      char v802 = 1;
      uint64_t v165 = sub_2225F2718(v164, "__is_function", (uint64_t)&v802);
      char v801 = 1;
      uint64_t v166 = sub_2225DB308(v165, "__is_reference", (uint64_t)&v801);
      char v800 = 1;
      uint64_t v167 = sub_2225F28E8(v166, "__is_lvalue_reference", (uint64_t)&v800);
      char v799 = 1;
      uint64_t v168 = sub_2225F28E8(v167, "__is_rvalue_reference", (uint64_t)&v799);
      char v798 = 1;
      uint64_t v169 = sub_2225F2B58(v168, "__is_fundamental", (uint64_t)&v798);
      char v797 = 1;
      uint64_t v170 = sub_2225DAEFC(v169, "__is_object", (uint64_t)&v797);
      char v796 = 1;
      uint64_t v171 = sub_2225DAEFC(v170, "__is_scalar", (uint64_t)&v796);
      char v795 = 1;
      uint64_t v172 = sub_2225F2718(v171, "__is_compound", (uint64_t)&v795);
      char v794 = 1;
      uint64_t v173 = sub_2225DB294(v172, (uint64_t)"__is_pointer", (uint64_t)&v794);
      char v793 = 1;
      uint64_t v174 = sub_2225F2A50(v173, (uint64_t)"__is_member_object_pointer", (uint64_t)&v793);
      char v792 = 1;
      uint64_t v175 = sub_2225F2AD4(v174, (uint64_t)"__is_member_function_pointer", (uint64_t)&v792);
      char v791 = 1;
      uint64_t v176 = sub_2225F29D8(v175, "__is_member_pointer", (uint64_t)&v791);
      char v790 = 1;
      uint64_t v177 = sub_2225D93C4(v176, (uint64_t)"__is_const", (uint64_t)&v790);
      char v789 = 1;
      uint64_t v178 = sub_2225F2718(v177, "__is_volatile", (uint64_t)&v789);
      char v788 = 1;
      uint64_t v179 = sub_2225F262C(v178, (uint64_t)"__is_standard_layout", (uint64_t)&v788);
      char v787 = 1;
      uint64_t v180 = sub_2225DAEFC(v179, "__is_signed", (uint64_t)&v787);
      char v786 = 1;
      uint64_t v181 = sub_2225F2718(v180, "__is_unsigned", (uint64_t)&v786);
      char v785 = 1;
      uint64_t v182 = sub_2225DB220(v181, (uint64_t)"__is_same", (uint64_t)&v785);
      char v784 = 1;
      uint64_t v183 = sub_2225F2B58(v182, "__is_convertible", (uint64_t)&v784);
      char v783 = 1;
      uint64_t v184 = sub_2225DB294(v183, (uint64_t)"__array_rank", (uint64_t)&v783);
      char v782 = 1;
      uint64_t v185 = sub_2225DB308(v184, "__array_extent", (uint64_t)&v782);
      char v781 = 1;
      uint64_t v186 = sub_2225F24B8(v185, (uint64_t)"__private_extern__", (uint64_t)&v781);
      char v780 = 1;
      uint64_t v187 = sub_2225F24B8(v186, (uint64_t)"__module_private__", (uint64_t)&v780);
      char v779 = 1;
      uint64_t v188 = sub_2225D93C4(v187, (uint64_t)"__declspec", (uint64_t)&v779);
      char v778 = 1;
      uint64_t v189 = sub_2225D9350(v188, "__cdecl", (uint64_t)&v778);
      char v777 = 1;
      uint64_t v190 = sub_2225DB220(v189, (uint64_t)"__stdcall", (uint64_t)&v777);
      char v776 = 1;
      uint64_t v191 = sub_2225D93C4(v190, (uint64_t)"__fastcall", (uint64_t)&v776);
      char v775 = 1;
      uint64_t v192 = sub_2225D93C4(v191, (uint64_t)"__thiscall", (uint64_t)&v775);
      char v774 = 1;
      uint64_t v193 = sub_2225F2718(v192, "__forceinline", (uint64_t)&v774);
      char v773 = 1;
      uint64_t v194 = sub_2225DAEFC(v193, "__unaligned", (uint64_t)&v773);
      char v772 = 1;
      uint64_t v195 = sub_2225D95FC(v194, "__global", (uint64_t)&v772);
      char v771 = 1;
      uint64_t v196 = sub_2225D9350(v195, "__local", (uint64_t)&v771);
      char v770 = 1;
      uint64_t v197 = sub_2225D93C4(v196, (uint64_t)"__constant", (uint64_t)&v770);
      char v769 = 1;
      uint64_t v198 = sub_2225DB220(v197, (uint64_t)"__private", (uint64_t)&v769);
      char v768 = 1;
      uint64_t v199 = sub_2225D9588(v198, (uint64_t)"global", (uint64_t)&v768);
      char v767 = 1;
      uint64_t v200 = sub_2225D9438(v199, (uint64_t)"local", (uint64_t)&v767);
      char v766 = 1;
      uint64_t v201 = sub_2225D95FC(v200, "constant", (uint64_t)&v766);
      char v765 = 1;
      uint64_t v202 = sub_2225D9350(v201, "private", (uint64_t)&v765);
      char v764 = 1;
      uint64_t v203 = sub_2225D95FC(v202, "__kernel", (uint64_t)&v764);
      char v763 = 1;
      uint64_t v204 = sub_2225D9588(v203, (uint64_t)"kernel", (uint64_t)&v763);
      char v762 = 1;
      uint64_t v205 = sub_2225DAEFC(v204, "__read_only", (uint64_t)&v762);
      char v761 = 1;
      uint64_t v206 = sub_2225DB294(v205, (uint64_t)"__write_only", (uint64_t)&v761);
      char v760 = 1;
      uint64_t v207 = sub_2225DB294(v206, (uint64_t)"__read_write", (uint64_t)&v760);
      char v759 = 1;
      uint64_t v208 = sub_2225DB220(v207, (uint64_t)"read_only", (uint64_t)&v759);
      char v758 = 1;
      uint64_t v209 = sub_2225D93C4(v208, (uint64_t)"write_only", (uint64_t)&v758);
      char v757 = 1;
      uint64_t v210 = sub_2225D93C4(v209, (uint64_t)"read_write", (uint64_t)&v757);
      char v756 = 1;
      uint64_t v211 = sub_2225F2B58(v210, "__builtin_astype", (uint64_t)&v756);
      char v755 = 1;
      uint64_t v212 = sub_2225D95FC(v211, "vec_step", (uint64_t)&v755);
      char v754 = 1;
      uint64_t v213 = sub_2225D95FC(v212, "__pascal", (uint64_t)&v754);
      char v753 = 1;
      uint64_t v214 = sub_2225D95FC(v213, "__vector", (uint64_t)&v753);
      char v752 = 1;
      uint64_t v215 = sub_2225D9350(v214, "__pixel", (uint64_t)&v752);
      char v751 = 1;
      uint64_t v216 = sub_2225D9588(v215, (uint64_t)"__fp16", (uint64_t)&v751);
      char v750 = 1;
      uint64_t v217 = sub_2225D9520(v216, "half", (uint64_t)&v750);
      char v749 = 1;
      uint64_t v218 = sub_2225D95FC(v217, "__bridge", (uint64_t)&v749);
      char v748 = 1;
      uint64_t v219 = sub_2225F278C(v218, (uint64_t)"__bridge_transfer", (uint64_t)&v748);
      char v747 = 1;
      uint64_t v220 = sub_2225F278C(v219, (uint64_t)"__bridge_retained", (uint64_t)&v747);
      char v746 = 1;
      uint64_t v221 = sub_2225F26A4(v220, "__bridge_retain", (uint64_t)&v746);
      char v745 = 1;
      uint64_t v222 = sub_2225DAEFC(v221, "__alignof__", (uint64_t)&v745);
      char v744 = 1;
      uint64_t v223 = sub_2225D9438(v222, (uint64_t)"__asm", (uint64_t)&v744);
      char v743 = 1;
      uint64_t v224 = sub_2225D9350(v223, "__asm__", (uint64_t)&v743);
      char v742 = 1;
      uint64_t v225 = sub_2225F2718(v224, "__attribute__", (uint64_t)&v742);
      char v741 = 1;
      uint64_t v226 = sub_2225DB220(v225, (uint64_t)"__complex", (uint64_t)&v741);
      char v740 = 1;
      uint64_t v227 = sub_2225DAEFC(v226, "__complex__", (uint64_t)&v740);
      char v739 = 1;
      uint64_t v228 = sub_2225D9350(v227, "__const", (uint64_t)&v739);
      char v738 = 1;
      uint64_t v229 = sub_2225DB220(v228, (uint64_t)"__const__", (uint64_t)&v738);
      char v737 = 1;
      uint64_t v230 = sub_2225D93C4(v229, (uint64_t)"__decltype", (uint64_t)&v737);
      char v736 = 1;
      uint64_t v231 = sub_2225D95FC(v230, "__imag__", (uint64_t)&v736);
      char v735 = 1;
      uint64_t v232 = sub_2225D95FC(v231, "__inline", (uint64_t)&v735);
      char v734 = 1;
      uint64_t v233 = sub_2225D93C4(v232, (uint64_t)"__inline__", (uint64_t)&v734);
      char v733 = 1;
      uint64_t v234 = sub_2225DB220(v233, (uint64_t)"__nullptr", (uint64_t)&v733);
      char v732 = 1;
      uint64_t v235 = sub_2225D95FC(v234, "__real__", (uint64_t)&v732);
      char v731 = 1;
      uint64_t v236 = sub_2225D93C4(v235, (uint64_t)"__restrict", (uint64_t)&v731);
      char v730 = 1;
      uint64_t v237 = sub_2225DB294(v236, (uint64_t)"__restrict__", (uint64_t)&v730);
      char v729 = 1;
      uint64_t v238 = sub_2225D95FC(v237, "__signed", (uint64_t)&v729);
      char v728 = 1;
      uint64_t v239 = sub_2225D93C4(v238, (uint64_t)"__signed__", (uint64_t)&v728);
      char v727 = 1;
      uint64_t v240 = sub_2225D95FC(v239, "__typeof", (uint64_t)&v727);
      char v726 = 1;
      uint64_t v241 = sub_2225D93C4(v240, (uint64_t)"__typeof__", (uint64_t)&v726);
      char v725 = 1;
      uint64_t v242 = sub_2225D93C4(v241, (uint64_t)"__volatile", (uint64_t)&v725);
      char v724 = 1;
      uint64_t v243 = sub_2225DB294(v242, (uint64_t)"__volatile__", (uint64_t)&v724);
      char v723 = 1;
      uint64_t v244 = sub_2225DB220(v243, (uint64_t)"__nonnull", (uint64_t)&v723);
      char v722 = 1;
      uint64_t v245 = sub_2225D93C4(v244, (uint64_t)"__nullable", (uint64_t)&v722);
      char v721 = 1;
      uint64_t v246 = sub_2225F24B8(v245, (uint64_t)"__null_unspecified", (uint64_t)&v721);
      char v720 = 1;
      uint64_t v247 = sub_2225D9350(v246, "__ptr64", (uint64_t)&v720);
      char v719 = 1;
      uint64_t v248 = sub_2225D9350(v247, "__ptr32", (uint64_t)&v719);
      char v718 = 1;
      uint64_t v249 = sub_2225D9588(v248, (uint64_t)"__sptr", (uint64_t)&v718);
      char v717 = 1;
      uint64_t v250 = sub_2225D9588(v249, (uint64_t)"__uptr", (uint64_t)&v717);
      char v716 = 1;
      uint64_t v251 = sub_2225D9438(v250, (uint64_t)"__w64", (uint64_t)&v716);
      char v715 = 1;
      uint64_t v252 = sub_2225D95FC(v251, "__uuidof", (uint64_t)&v715);
      char v714 = 1;
      uint64_t v253 = sub_2225D9438(v252, (uint64_t)"__try", (uint64_t)&v714);
      char v713 = 1;
      uint64_t v254 = sub_2225DB220(v253, (uint64_t)"__finally", (uint64_t)&v713);
      char v712 = 1;
      uint64_t v255 = sub_2225D9350(v254, "__leave", (uint64_t)&v712);
      char v711 = 1;
      uint64_t v256 = sub_2225D9350(v255, "uint64_t", (uint64_t)&v711);
      char v710 = 1;
      uint64_t v257 = sub_2225DAEFC(v256, "__if_exists", (uint64_t)&v710);
      char v709 = 1;
      uint64_t v258 = sub_2225F26A4(v257, "__if_not_exists", (uint64_t)&v709);
      char v708 = 1;
      uint64_t v259 = sub_2225F262C(v258, (uint64_t)"__single_inheritance", (uint64_t)&v708);
      char v707 = 1;
      uint64_t v260 = sub_2225F2870(v259, "__multiple_inheritance", (uint64_t)&v707);
      char v706 = 1;
      uint64_t v261 = sub_2225F28E8(v260, "__virtual_inheritance", (uint64_t)&v706);
      char v705 = 1;
      uint64_t v262 = sub_2225DAEFC(v261, "__interface", (uint64_t)&v705);
      char v704 = 1;
      uint64_t v263 = sub_2225D9588(v262, (uint64_t)"__int8", (uint64_t)&v704);
      char v703 = 1;
      uint64_t v264 = sub_2225D9350(v263, "__int16", (uint64_t)&v703);
      char v702 = 1;
      uint64_t v265 = sub_2225D9350(v264, "__int32", (uint64_t)&v702);
      char v701 = 1;
      uint64_t v266 = sub_2225DB220(v265, (uint64_t)"__wchar_t", (uint64_t)&v701);
      char v700 = 1;
      uint64_t v267 = sub_2225D9520(v266, "_asm", (uint64_t)&v700);
      char v699 = 1;
      uint64_t v268 = sub_2225D95FC(v267, "_alignof", (uint64_t)&v699);
      char v698 = 1;
      uint64_t v269 = sub_2225F278C(v268, (uint64_t)"__builtin_alignof", (uint64_t)&v698);
      char v697 = 1;
      uint64_t v270 = sub_2225D9588(v269, (uint64_t)"_cdecl", (uint64_t)&v697);
      char v696 = 1;
      uint64_t v271 = sub_2225DB220(v270, (uint64_t)"_fastcall", (uint64_t)&v696);
      char v695 = 1;
      uint64_t v272 = sub_2225D95FC(v271, "_stdcall", (uint64_t)&v695);
      char v694 = 1;
      uint64_t v273 = sub_2225DB220(v272, (uint64_t)"_thiscall", (uint64_t)&v694);
      char v693 = 1;
      uint64_t v274 = sub_2225D9350(v273, "_uuidof", (uint64_t)&v693);
      char v692 = 1;
      uint64_t v275 = sub_2225D9350(v274, "_inline", (uint64_t)&v692);
      char v691 = 1;
      uint64_t v276 = sub_2225DB220(v275, (uint64_t)"_declspec", (uint64_t)&v691);
      char v690 = 1;
      uint64_t v277 = sub_2225D9350(v276, "_pascal", (uint64_t)&v690);
      char v689 = 1;
      uint64_t v278 = sub_2225F25B4(v277, "__builtin_convertvector", (uint64_t)&v689);
      char v688 = 1;
      uint64_t v279 = sub_2225D93C4(v278, (uint64_t)"__char16_t", (uint64_t)&v688);
      char v687 = 1;
      uint64_t v280 = sub_2225D93C4(v279, (uint64_t)"__char32_t", (uint64_t)&v687);
      char v686 = 1;
      uint64_t v281 = sub_2225D9588(v280, (uint64_t)"active", (uint64_t)&v686);
      char v685 = 1;
      uint64_t v282 = sub_2225DAEFC(v281, "atomic_uint", (uint64_t)&v685);
      char v684 = 1;
      uint64_t v283 = sub_2225DB220(v282, (uint64_t)"attribute", (uint64_t)&v684);
      char v683 = 1;
      uint64_t v284 = sub_2225D9438(v283, (uint64_t)"bvec2", (uint64_t)&v683);
      char v682 = 1;
      uint64_t v285 = sub_2225D9438(v284, (uint64_t)"bvec3", (uint64_t)&v682);
      char v681 = 1;
      uint64_t v286 = sub_2225D9438(v285, (uint64_t)"bvec4", (uint64_t)&v681);
      char v680 = 1;
      uint64_t v287 = sub_2225D9588(v286, (uint64_t)"buffer", (uint64_t)&v680);
      char v679 = 1;
      uint64_t v288 = sub_2225D9520(v287, "cast", (uint64_t)&v679);
      char v678 = 1;
      uint64_t v289 = sub_2225D95FC(v288, "centroid", (uint64_t)&v678);
      char v677 = 1;
      uint64_t v290 = sub_2225D95FC(v289, "coherent", (uint64_t)&v677);
      char v676 = 1;
      uint64_t v291 = sub_2225D9588(v290, (uint64_t)"common", (uint64_t)&v676);
      char v675 = 1;
      uint64_t v292 = sub_2225D9350(v291, "discard", (uint64_t)&v675);
      char v674 = 1;
      uint64_t v293 = sub_2225D9438(v292, (uint64_t)"dmat2", (uint64_t)&v674);
      char v673 = 1;
      uint64_t v294 = sub_2225D9350(v293, "dmat2x2", (uint64_t)&v673);
      char v672 = 1;
      uint64_t v295 = sub_2225D9350(v294, "dmat2x3", (uint64_t)&v672);
      char v671 = 1;
      uint64_t v296 = sub_2225D9350(v295, "dmat2x4", (uint64_t)&v671);
      char v670 = 1;
      uint64_t v297 = sub_2225D9438(v296, (uint64_t)"dmat3", (uint64_t)&v670);
      char v669 = 1;
      uint64_t v298 = sub_2225D9350(v297, "dmat3x2", (uint64_t)&v669);
      char v668 = 1;
      uint64_t v299 = sub_2225D9350(v298, "dmat3x3", (uint64_t)&v668);
      char v667 = 1;
      uint64_t v300 = sub_2225D9350(v299, "dmat3x4", (uint64_t)&v667);
      char v666 = 1;
      uint64_t v301 = sub_2225D9438(v300, (uint64_t)"dmat4", (uint64_t)&v666);
      char v665 = 1;
      uint64_t v302 = sub_2225D9350(v301, "dmat4x2", (uint64_t)&v665);
      char v664 = 1;
      uint64_t v303 = sub_2225D9350(v302, "dmat4x3", (uint64_t)&v664);
      char v663 = 1;
      uint64_t v304 = sub_2225D9350(v303, "dmat4x4", (uint64_t)&v663);
      char v662 = 1;
      uint64_t v305 = sub_2225D9438(v304, (uint64_t)"dvec2", (uint64_t)&v662);
      char v661 = 1;
      uint64_t v306 = sub_2225D9438(v305, (uint64_t)"dvec3", (uint64_t)&v661);
      char v660 = 1;
      uint64_t v307 = sub_2225D9438(v306, (uint64_t)"dvec4", (uint64_t)&v660);
      char v659 = 1;
      uint64_t v308 = sub_2225D9588(v307, (uint64_t)"filter", (uint64_t)&v659);
      char v658 = 1;
      uint64_t v309 = sub_2225D9438(v308, (uint64_t)"fixed", (uint64_t)&v658);
      char v657 = 1;
      uint64_t v310 = sub_2225D9520(v309, "flat", (uint64_t)&v657);
      char v656 = 1;
      uint64_t v311 = sub_2225D9438(v310, (uint64_t)"fvec2", (uint64_t)&v656);
      char v655 = 1;
      uint64_t v312 = sub_2225D9438(v311, (uint64_t)"fvec3", (uint64_t)&v655);
      char v654 = 1;
      uint64_t v313 = sub_2225D9438(v312, (uint64_t)"fvec4", (uint64_t)&v654);
      char v653 = 1;
      uint64_t v314 = sub_2225D9438(v313, (uint64_t)"highp", (uint64_t)&v653);
      char v652 = 1;
      uint64_t v315 = sub_2225D9438(v314, (uint64_t)"hvec2", (uint64_t)&v652);
      char v651 = 1;
      uint64_t v316 = sub_2225D9438(v315, (uint64_t)"hvec3", (uint64_t)&v651);
      char v650 = 1;
      uint64_t v317 = sub_2225D9438(v316, (uint64_t)"hvec4", (uint64_t)&v650);
      char v649 = 1;
      uint64_t v318 = sub_2225D95FC(v317, "iimage1D", (uint64_t)&v649);
      char v648 = 1;
      uint64_t v319 = sub_2225F2718(v318, "iimage1DArray", (uint64_t)&v648);
      char v647 = 1;
      uint64_t v320 = sub_2225D95FC(v319, "iimage2D", (uint64_t)&v647);
      char v646 = 1;
      uint64_t v321 = sub_2225F2718(v320, "iimage2DArray", (uint64_t)&v646);
      char v645 = 1;
      uint64_t v322 = sub_2225D93C4(v321, (uint64_t)"iimage2DMS", (uint64_t)&v645);
      char v644 = 1;
      uint64_t v323 = sub_2225F26A4(v322, "iimage2DMSArray", (uint64_t)&v644);
      char v643 = 1;
      uint64_t v324 = sub_2225DB294(v323, (uint64_t)"iimage2DRect", (uint64_t)&v643);
      char v642 = 1;
      uint64_t v325 = sub_2225D95FC(v324, "iimage3D", (uint64_t)&v642);
      char v641 = 1;
      uint64_t v326 = sub_2225DB294(v325, (uint64_t)"iimageBuffer", (uint64_t)&v641);
      char v640 = 1;
      uint64_t v327 = sub_2225D93C4(v326, (uint64_t)"iimageCube", (uint64_t)&v640);
      char v639 = 1;
      uint64_t v328 = sub_2225F26A4(v327, "iimageCubeArray", (uint64_t)&v639);
      char v638 = 1;
      uint64_t v329 = sub_2225D9350(v328, "image1D", (uint64_t)&v638);
      char v637 = 1;
      uint64_t v330 = sub_2225DB294(v329, (uint64_t)"image1DArray", (uint64_t)&v637);
      char v636 = 1;
      uint64_t v331 = sub_2225F24B8(v330, (uint64_t)"image1DArrayShadow", (uint64_t)&v636);
      char v635 = 1;
      uint64_t v332 = sub_2225F2718(v331, "image1DShadow", (uint64_t)&v635);
      char v634 = 1;
      uint64_t v333 = sub_2225D9350(v332, "image2D", (uint64_t)&v634);
      char v633 = 1;
      uint64_t v334 = sub_2225DB294(v333, (uint64_t)"image2DArray", (uint64_t)&v633);
      char v632 = 1;
      uint64_t v335 = sub_2225F24B8(v334, (uint64_t)"image2DArrayShadow", (uint64_t)&v632);
      char v631 = 1;
      uint64_t v336 = sub_2225DB220(v335, (uint64_t)"image2DMS", (uint64_t)&v631);
      char v630 = 1;
      uint64_t v337 = sub_2225DB308(v336, "image2DMSArray", (uint64_t)&v630);
      char v629 = 1;
      uint64_t v338 = sub_2225DAEFC(v337, "image2DRect", (uint64_t)&v629);
      char v628 = 1;
      uint64_t v339 = sub_2225F2718(v338, "image2DShadow", (uint64_t)&v628);
      char v627 = 1;
      uint64_t v340 = sub_2225D9350(v339, "image3D", (uint64_t)&v627);
      char v626 = 1;
      uint64_t v341 = sub_2225DAEFC(v340, "imageBuffer", (uint64_t)&v626);
      char v625 = 1;
      uint64_t v342 = sub_2225DB220(v341, (uint64_t)"imageCube", (uint64_t)&v625);
      char v624 = 1;
      uint64_t v343 = sub_2225DB308(v342, "imageCubeArray", (uint64_t)&v624);
      char v623 = 1;
      uint64_t v344 = sub_2225DB4FC(v343, (unsigned __int16 *)"in", (uint64_t)&v623);
      char v622 = 1;
      uint64_t v345 = sub_2225D9438(v344, (uint64_t)"inout", (uint64_t)&v622);
      char v621 = 1;
      uint64_t v346 = sub_2225D9438(v345, (uint64_t)"input", (uint64_t)&v621);
      char v620 = 1;
      uint64_t v347 = sub_2225DB220(v346, (uint64_t)"interface", (uint64_t)&v620);
      char v619 = 1;
      uint64_t v348 = sub_2225DB220(v347, (uint64_t)"invariant", (uint64_t)&v619);
      char v618 = 1;
      uint64_t v349 = sub_2225D95FC(v348, "isampler", (uint64_t)&v618);
      char v617 = 1;
      uint64_t v350 = sub_2225D93C4(v349, (uint64_t)"isampler1D", (uint64_t)&v617);
      char v616 = 1;
      uint64_t v351 = sub_2225F26A4(v350, "isampler1DArray", (uint64_t)&v616);
      char v615 = 1;
      uint64_t v352 = sub_2225D93C4(v351, (uint64_t)"isampler2D", (uint64_t)&v615);
      char v614 = 1;
      uint64_t v353 = sub_2225F26A4(v352, "isampler2DArray", (uint64_t)&v614);
      char v613 = 1;
      uint64_t v354 = sub_2225DB294(v353, (uint64_t)"isampler2DMS", (uint64_t)&v613);
      char v612 = 1;
      uint64_t v355 = sub_2225F278C(v354, (uint64_t)"isampler2DMSArray", (uint64_t)&v612);
      char v611 = 1;
      uint64_t v356 = sub_2225DB308(v355, "isampler2DRect", (uint64_t)&v611);
      char v610 = 1;
      uint64_t v357 = sub_2225F2B58(v356, "isampler2DShadow", (uint64_t)&v610);
      char v609 = 1;
      uint64_t v358 = sub_2225D93C4(v357, (uint64_t)"isampler3D", (uint64_t)&v609);
      char v608 = 1;
      uint64_t v359 = sub_2225DB308(v358, "isamplerBuffer", (uint64_t)&v608);
      char v607 = 1;
      uint64_t v360 = sub_2225DB294(v359, (uint64_t)"isamplerCube", (uint64_t)&v607);
      char v606 = 1;
      uint64_t v361 = sub_2225F278C(v360, (uint64_t)"isamplerCubeArray", (uint64_t)&v606);
      char v605 = 1;
      uint64_t v362 = sub_2225D9438(v361, (uint64_t)"ivec2", (uint64_t)&v605);
      char v604 = 1;
      uint64_t v363 = sub_2225D9438(v362, (uint64_t)"ivec3", (uint64_t)&v604);
      char v603 = 1;
      uint64_t v364 = sub_2225D9438(v363, (uint64_t)"ivec4", (uint64_t)&v603);
      char v602 = 1;
      uint64_t v365 = sub_2225D9588(v364, (uint64_t)"layout", (uint64_t)&v602);
      char v601 = 1;
      uint64_t v366 = sub_2225D9520(v365, "lowp", (uint64_t)&v601);
      char v600 = 1;
      uint64_t v367 = sub_2225D9520(v366, "mat2", (uint64_t)&v600);
      char v599 = 1;
      uint64_t v368 = sub_2225D9588(v367, (uint64_t)"mat2x2", (uint64_t)&v599);
      char v598 = 1;
      uint64_t v369 = sub_2225D9588(v368, (uint64_t)"mat2x3", (uint64_t)&v598);
      char v597 = 1;
      uint64_t v370 = sub_2225D9588(v369, (uint64_t)"mat2x4", (uint64_t)&v597);
      char v596 = 1;
      uint64_t v371 = sub_2225D9520(v370, "mat3", (uint64_t)&v596);
      char v595 = 1;
      uint64_t v372 = sub_2225D9588(v371, (uint64_t)"mat3x2", (uint64_t)&v595);
      char v594 = 1;
      uint64_t v373 = sub_2225D9588(v372, (uint64_t)"mat3x3", (uint64_t)&v594);
      char v593 = 1;
      uint64_t v374 = sub_2225D9588(v373, (uint64_t)"mat3x4", (uint64_t)&v593);
      char v592 = 1;
      uint64_t v375 = sub_2225D9520(v374, "mat4", (uint64_t)&v592);
      char v591 = 1;
      uint64_t v376 = sub_2225D9588(v375, (uint64_t)"mat4x2", (uint64_t)&v591);
      char v590 = 1;
      uint64_t v377 = sub_2225D9588(v376, (uint64_t)"mat4x3", (uint64_t)&v590);
      char v589 = 1;
      uint64_t v378 = sub_2225D9588(v377, (uint64_t)"mat4x4", (uint64_t)&v589);
      char v588 = 1;
      uint64_t v379 = sub_2225D9350(v378, "mediump", (uint64_t)&v588);
      char v587 = 1;
      uint64_t v380 = sub_2225D95FC(v379, "noinline", (uint64_t)&v587);
      char v586 = 1;
      uint64_t v381 = sub_2225F2718(v380, "noperspective", (uint64_t)&v586);
      char v585 = 1;
      uint64_t v382 = sub_2225D94AC(v381, (unsigned __int16 *)"out", (uint64_t)&v585);
      char v584 = 1;
      uint64_t v383 = sub_2225D9588(v382, (uint64_t)"output", (uint64_t)&v584);
      char v583 = 1;
      uint64_t v384 = sub_2225DB220(v383, (uint64_t)"partition", (uint64_t)&v583);
      char v582 = 1;
      uint64_t v385 = sub_2225D9438(v384, (uint64_t)"patch", (uint64_t)&v582);
      char v581 = 1;
      uint64_t v386 = sub_2225DB220(v385, (uint64_t)"precision", (uint64_t)&v581);
      char v580 = 1;
      uint64_t v387 = sub_2225D95FC(v386, "readonly", (uint64_t)&v580);
      char v579 = 1;
      uint64_t v388 = sub_2225D95FC(v387, "resource", (uint64_t)&v579);
      char v578 = 1;
      uint64_t v389 = sub_2225D9588(v388, (uint64_t)"sample", (uint64_t)&v578);
      char v577 = 1;
      uint64_t v390 = sub_2225D9350(v389, "sampler", (uint64_t)&v577);
      char v576 = 1;
      uint64_t v391 = sub_2225DB220(v390, (uint64_t)"sampler1D", (uint64_t)&v576);
      char v575 = 1;
      uint64_t v392 = sub_2225DB308(v391, "sampler1DArray", (uint64_t)&v575);
      char v574 = 1;
      uint64_t v393 = sub_2225F262C(v392, (uint64_t)"sampler1DArrayShadow", (uint64_t)&v574);
      char v573 = 1;
      uint64_t v394 = sub_2225F26A4(v393, "sampler1DShadow", (uint64_t)&v573);
      char v572 = 1;
      uint64_t v395 = sub_2225DB220(v394, (uint64_t)"sampler2D", (uint64_t)&v572);
      char v571 = 1;
      uint64_t v396 = sub_2225DB308(v395, "sampler2DArray", (uint64_t)&v571);
      char v570 = 1;
      uint64_t v397 = sub_2225F262C(v396, (uint64_t)"sampler2DArrayShadow", (uint64_t)&v570);
      char v569 = 1;
      uint64_t v398 = sub_2225DAEFC(v397, "sampler2DMS", (uint64_t)&v569);
      char v568 = 1;
      uint64_t v399 = sub_2225F2B58(v398, "sampler2DMSArray", (uint64_t)&v568);
      char v567 = 1;
      uint64_t v400 = sub_2225F2718(v399, "sampler2DRect", (uint64_t)&v567);
      char v566 = 1;
      uint64_t v401 = sub_2225F29D8(v400, "sampler2DRectShadow", (uint64_t)&v566);
      char v565 = 1;
      uint64_t v402 = sub_2225F26A4(v401, "sampler2DShadow", (uint64_t)&v565);
      char v564 = 1;
      uint64_t v403 = sub_2225DB220(v402, (uint64_t)"sampler3D", (uint64_t)&v564);
      char v563 = 1;
      uint64_t v404 = sub_2225F2718(v403, "sampler3DRect", (uint64_t)&v563);
      char v562 = 1;
      uint64_t v405 = sub_2225F2718(v404, "samplerBuffer", (uint64_t)&v562);
      char v561 = 1;
      uint64_t v406 = sub_2225DAEFC(v405, "samplerCube", (uint64_t)&v561);
      char v560 = 1;
      uint64_t v407 = sub_2225F2B58(v406, "samplerCubeArray", (uint64_t)&v560);
      char v559 = 1;
      uint64_t v408 = sub_2225F2870(v407, "samplerCubeArrayShadow", (uint64_t)&v559);
      char v558 = 1;
      uint64_t v409 = sub_2225F278C(v408, (uint64_t)"samplerCubeShadow", (uint64_t)&v558);
      char v557 = 1;
      uint64_t v410 = sub_2225D9588(v409, (uint64_t)"smooth", (uint64_t)&v557);
      char v556 = 1;
      uint64_t v411 = sub_2225D93C4(v410, (uint64_t)"subroutine", (uint64_t)&v556);
      char v555 = 1;
      uint64_t v412 = sub_2225D9588(v411, (uint64_t)"superp", (uint64_t)&v555);
      char v554 = 1;
      uint64_t v413 = sub_2225D95FC(v412, "uimage1D", (uint64_t)&v554);
      char v553 = 1;
      uint64_t v414 = sub_2225F2718(v413, "uimage1DArray", (uint64_t)&v553);
      char v552 = 1;
      uint64_t v415 = sub_2225D95FC(v414, "uimage2D", (uint64_t)&v552);
      char v551 = 1;
      uint64_t v416 = sub_2225F2718(v415, "uimage2DArray", (uint64_t)&v551);
      char v550 = 1;
      uint64_t v417 = sub_2225D93C4(v416, (uint64_t)"uimage2DMS", (uint64_t)&v550);
      char v549 = 1;
      uint64_t v418 = sub_2225F26A4(v417, "uimage2DMSArray", (uint64_t)&v549);
      char v548 = 1;
      uint64_t v419 = sub_2225DB294(v418, (uint64_t)"uimage2DRect", (uint64_t)&v548);
      char v547 = 1;
      uint64_t v420 = sub_2225D95FC(v419, "uimage3D", (uint64_t)&v547);
      char v546 = 1;
      uint64_t v421 = sub_2225DB294(v420, (uint64_t)"uimageBuffer", (uint64_t)&v546);
      char v545 = 1;
      uint64_t v422 = sub_2225D93C4(v421, (uint64_t)"uimageCube", (uint64_t)&v545);
      char v544 = 1;
      uint64_t v423 = sub_2225F26A4(v422, "uimageCubeArray", (uint64_t)&v544);
      char v543 = 1;
      uint64_t v424 = sub_2225D9520(v423, "uint", (uint64_t)&v543);
      char v542 = 1;
      uint64_t v425 = sub_2225D9350(v424, "uniform", (uint64_t)&v542);
      char v541 = 1;
      uint64_t v426 = sub_2225D95FC(v425, "usampler", (uint64_t)&v541);
      char v540 = 1;
      uint64_t v427 = sub_2225D93C4(v426, (uint64_t)"usampler1D", (uint64_t)&v540);
      char v539 = 1;
      uint64_t v428 = sub_2225F26A4(v427, "usampler1DArray", (uint64_t)&v539);
      char v538 = 1;
      uint64_t v429 = sub_2225D93C4(v428, (uint64_t)"usampler2D", (uint64_t)&v538);
      char v537 = 1;
      uint64_t v430 = sub_2225F26A4(v429, "usampler2DArray", (uint64_t)&v537);
      char v536 = 1;
      uint64_t v431 = sub_2225DB294(v430, (uint64_t)"usampler2DMS", (uint64_t)&v536);
      char v535 = 1;
      uint64_t v432 = sub_2225F278C(v431, (uint64_t)"usampler2DMSArray", (uint64_t)&v535);
      char v534 = 1;
      uint64_t v433 = sub_2225DB308(v432, "usampler2DRect", (uint64_t)&v534);
      char v533 = 1;
      uint64_t v434 = sub_2225D93C4(v433, (uint64_t)"usampler3D", (uint64_t)&v533);
      char v532 = 1;
      uint64_t v435 = sub_2225DB308(v434, "usamplerBuffer", (uint64_t)&v532);
      char v531 = 1;
      uint64_t v436 = sub_2225DB294(v435, (uint64_t)"usamplerCube", (uint64_t)&v531);
      char v530 = 1;
      uint64_t v437 = sub_2225F278C(v436, (uint64_t)"usamplerCubeArray", (uint64_t)&v530);
      char v529 = 1;
      uint64_t v438 = sub_2225D9438(v437, (uint64_t)"uvec2", (uint64_t)&v529);
      char v528 = 1;
      uint64_t v439 = sub_2225D9438(v438, (uint64_t)"uvec3", (uint64_t)&v528);
      char v527 = 1;
      uint64_t v440 = sub_2225D9438(v439, (uint64_t)"uvec4", (uint64_t)&v527);
      char v526 = 1;
      uint64_t v441 = sub_2225D9350(v440, "varying", (uint64_t)&v526);
      char v525 = 1;
      uint64_t v442 = sub_2225D9520(v441, "vec2", (uint64_t)&v525);
      char v524 = 1;
      uint64_t v443 = sub_2225D9520(v442, "vec3", (uint64_t)&v524);
      char v523 = 1;
      uint64_t v444 = sub_2225D9520(v443, "vec4", (uint64_t)&v523);
      char v522 = 1;
      uint64_t v445 = sub_2225DB220(v444, (uint64_t)"writeonly", (uint64_t)&v522);
      char v521 = 1;
      uint64_t v446 = sub_2225D9588(v445, (uint64_t)"kernel", (uint64_t)&v521);
      char v520 = 1;
      uint64_t v447 = sub_2225F2718(v446, "__attribute__", (uint64_t)&v520);
      char v519 = 1;
      uint64_t v448 = sub_2225D95FC(v447, "sample_f", (uint64_t)&v519);
      char v518 = 1;
      uint64_t v449 = sub_2225D95FC(v448, "sample_h", (uint64_t)&v518);
      char v517 = 1;
      uint64_t v450 = sub_2225DB220(v449, (uint64_t)"sampler_f", (uint64_t)&v517);
      char v516 = 1;
      uint64_t v451 = sub_2225DB220(v450, (uint64_t)"sampler_h", (uint64_t)&v516);
      char v515 = 1;
      uint64_t v452 = sub_2225D9438(v451, (uint64_t)"hmat2", (uint64_t)&v515);
      char v514 = 1;
      uint64_t v453 = sub_2225D9350(v452, "hmat2x2", (uint64_t)&v514);
      char v513 = 1;
      uint64_t v454 = sub_2225D9350(v453, "hmat2x3", (uint64_t)&v513);
      char v512 = 1;
      uint64_t v455 = sub_2225D9350(v454, "hmat2x4", (uint64_t)&v512);
      char v511 = 1;
      uint64_t v456 = sub_2225D9438(v455, (uint64_t)"hmat3", (uint64_t)&v511);
      char v510 = 1;
      uint64_t v457 = sub_2225D9350(v456, "hmat3x2", (uint64_t)&v510);
      char v509 = 1;
      uint64_t v458 = sub_2225D9350(v457, "hmat3x3", (uint64_t)&v509);
      char v508 = 1;
      uint64_t v459 = sub_2225D9350(v458, "hmat3x4", (uint64_t)&v508);
      char v507 = 1;
      uint64_t v460 = sub_2225D9438(v459, (uint64_t)"hmat4", (uint64_t)&v507);
      char v506 = 1;
      uint64_t v461 = sub_2225D9350(v460, "hmat4x2", (uint64_t)&v506);
      char v505 = 1;
      uint64_t v462 = sub_2225D9350(v461, "hmat4x3", (uint64_t)&v505);
      char v504 = 1;
      uint64_t v463 = sub_2225D9350(v462, "hmat4x4", (uint64_t)&v504);
      char v503 = 1;
      uint64_t v464 = sub_2225D9588(v463, (uint64_t)"float2", (uint64_t)&v503);
      char v502 = 1;
      uint64_t v465 = sub_2225D9588(v464, (uint64_t)"float3", (uint64_t)&v502);
      char v501 = 1;
      uint64_t v466 = sub_2225D9588(v465, (uint64_t)"float4", (uint64_t)&v501);
      char v500 = 1;
      uint64_t v467 = sub_2225D9438(v466, (uint64_t)"half2", (uint64_t)&v500);
      char v499 = 1;
      uint64_t v468 = sub_2225D9438(v467, (uint64_t)"half3", (uint64_t)&v499);
      char v498 = 1;
      uint64_t v469 = sub_2225D9438(v468, (uint64_t)"half4", (uint64_t)&v498);
      char v497 = 1;
      uint64_t v470 = sub_2225D95FC(v469, "float2x2", (uint64_t)&v497);
      char v496 = 1;
      uint64_t v471 = sub_2225D95FC(v470, "float3x3", (uint64_t)&v496);
      char v495 = 1;
      uint64_t v472 = sub_2225D95FC(v471, "float4x4", (uint64_t)&v495);
      char v494 = 1;
      uint64_t v473 = sub_2225D9350(v472, "half2x2", (uint64_t)&v494);
      char v493 = 1;
      uint64_t v474 = sub_2225D9350(v473, "half3x3", (uint64_t)&v493);
      char v492 = 1;
      uint64_t v475 = sub_2225D9350(v474, "half4x4", (uint64_t)&v492);
      char v491 = 1;
      uint64_t v476 = sub_2225D95FC(v475, "hsampler", (uint64_t)&v491);
      char v490 = 1;
      uint64_t v477 = sub_2225D93C4(v476, (uint64_t)"hsampler2D", (uint64_t)&v490);
      char v489 = 1;
      uint64_t v478 = sub_2225D95FC(v477, "__sample", (uint64_t)&v489);
      char v488 = 1;
      uint64_t v479 = sub_2225D9350(v478, "__color", (uint64_t)&v488);
      char v487 = 1;
      uint64_t v480 = sub_2225D9350(v479, "__table", (uint64_t)&v487);
      char v486 = 1;
      uint64_t v481 = sub_2225F278C(v480, (uint64_t)"__unknown_anytype", (uint64_t)&v486);
      unsigned __int8 v485 = 0;
      if (!sub_2225F2DA4(v481, &v485)) {
        break;
      }
      uint64_t v482 = sub_2225C3C70((uint64_t)&v956);
      if (v482 != sub_2225CC180((uint64_t)a3))
      {
        uint64_t v483 = (char *)sub_2225C3C70((uint64_t)&v956);
        uint64_t v484 = (char *)sub_2225C3C78(&v956);
        sub_2225C5A88(a3, v483, v484);
      }
      LOBYTE(v955) = 95;
      sub_2225C52D8((uint64_t)a3, &v955);
    }
  }
}

uint64_t sub_22262B6F8(void *a1, const void *a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v24 = (uint64_t)a2;
  uint64_t v25 = a3;
  v20.__r_.__value_.__r.__words[0] = sub_222628180((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (v20.__r_.__value_.__r.__words[0])
  {
    LOBYTE(v23) = 0;
    uint64_t v12 = &v20;
    uint64_t v13 = (std::string *)&v23;
  }
  else
  {
    uint64_t v14 = sub_2225C26A4(1256);
    sub_2225F3278(&v22);
    sub_222607DD0(v14, (uint64_t)a2, a3, v22, a4, a5, a6);
    uint64_t v23 = v14;
    sub_2225CCBF8(v21, a1[2] + 136);
    if (sub_2225CD4BC(v21[0], v21[1], a2, a3))
    {
      a1[37] = v14;
      sub_2225CA51C(&v24, (uint64_t)&v20);
      sub_2225CCDE4((uint64_t)(a1 + 38), (uint64_t)&v20);
      std::string::~string(&v20);
    }
    if (!a4)
    {
      *(void *)sub_2225E4044((uint64_t)(a1 + 41), v24, v25) = v14;
      if (!sub_2225CBBF8(a1[2] + 136, v15) && !a1[36])
      {
        uint64_t v16 = v24;
        uint64_t v17 = v25;
        sub_2225CCBF8(v19, a1[2] + 136);
        if (sub_2225CD4BC(v16, v17, v19[0], (size_t)v19[1])) {
          a1[36] = v14;
        }
      }
    }
    v20.__r_.__value_.__s.__data_[0] = 1;
    uint64_t v12 = (std::string *)&v23;
    uint64_t v13 = &v20;
  }
  return sub_2225D7AF8((uint64_t)v12, (uint64_t)v13);
}

uint64_t sub_22262B858(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_222608384(a1 + 112, &v3);
}

uint64_t *sub_22262B884(uint64_t a1, uint64_t *a2)
{
  return sub_2226310A0(a1, a2) + 1;
}

uint64_t sub_22262B8A0(uint64_t *a1, uint64_t a2)
{
  return sub_22262B8A8(a1, a2, 0);
}

uint64_t sub_22262B8A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v5 = (uint64_t)(a1 + 45);
  v47[0] = sub_22262BBBC((uint64_t)(a1 + 45), &v49);
  v47[1] = v6;
  uint64_t v40 = sub_22262BC24(v5);
  uint64_t v41 = v7;
  if (sub_2225F9558(v47, (uint64_t)&v40))
  {
    uint64_t v8 = sub_2225C3C70((uint64_t)v47);
    unsigned __int8 v9 = (void *)sub_2225C3C70(v8 + 8);
    uint64_t v10 = sub_2225C3C70((uint64_t)v47);
    uint64_t v11 = sub_2225C3D04(v10 + 8);
    if (v9 == (void *)v11)
    {
      return 1;
    }
    else
    {
      uint64_t v12 = (void *)v11;
      while (1)
      {
        if (sub_22262BC74(v9))
        {
          if (!a3) {
            break;
          }
          uint64_t v14 = sub_22261964C(v9, v13);
          if (sub_222608138(v14, a3)) {
            break;
          }
        }
        if (++v9 == v12) {
          return 1;
        }
      }
      return 0;
    }
  }
  else
  {
    uint64_t v16 = sub_222608330(v49);
    uint64_t v46 = (void *)v16;
    sub_2225F48E0(v50);
    uint64_t v17 = (char *)sub_2225C3C70(v16);
    sub_2225C3D00((int)&v44, v17);
    uint64_t v43 = &v48;
    while (1)
    {
      v42[0] = sub_22262BCC8((uint64_t)(a1 + 48), (uint64_t *)&v46);
      v42[1] = v18;
      uint64_t v40 = sub_22260F93C((uint64_t)(a1 + 48));
      uint64_t v41 = v19;
      if (sub_2225F9558(v42, (uint64_t)&v40)) {
        break;
      }
      sub_2225CC7B8((uint64_t)v50, &v46);
      uint64_t v44 = sub_2225CF24C(v44, v45);
      uint64_t v45 = v20;
      if (!sub_2225CF1E0((uint64_t)&v44))
      {
        uint64_t v21 = sub_2225C5B40(*a1);
        uint64_t v46 = sub_2225F8658(v21, v44, v45, 1);
        if (v46) {
          continue;
        }
      }
      goto LABEL_13;
    }
    uint64_t v22 = *(void *)(sub_2225C3C70((uint64_t)v42) + 8);
    if (sub_22262BD30(&v43, v22))
    {
LABEL_15:
      BOOL v15 = 1;
    }
    else
    {
      uint64_t v23 = v22;
      do
      {
        uint64_t v24 = v23;
        if (sub_2226082D0(v23)) {
          break;
        }
        uint64_t v23 = *(void *)(v24 + 32);
      }
      while (v23);
      if ((*(_WORD *)(v24 + 528) & 0x100) != 0)
      {
        unsigned int v26 = sub_2225CC780((uint64_t)v50) - 1;
        while (v26 != -1)
        {
          sub_2225CF1C4(&v40);
          uint64_t v27 = (uint64_t *)sub_2225F84F4((uint64_t)v50, v26);
          uint64_t v28 = (char *)sub_2225C3C70(*v27);
          sub_2225C3D00((int)v39, v28);
          uint64_t v29 = sub_2225CF4B4(v39[0], v39[1]);
          sub_2226290A0(v29, v30, (const void **)&v40);
          uint64_t v32 = sub_222628180((uint64_t)a1, v29, v31, v22);
          if (!v32)
          {
            sub_2225CA520(&v40);
            goto LABEL_13;
          }
          uint64_t v22 = v32;
          BOOL v33 = sub_22262BD30(&v43, v32);
          sub_2225CA520(&v40);
          --v26;
          if (v33) {
            goto LABEL_15;
          }
        }
        sub_2225CF1C4(&v40);
        uint64_t v34 = (char *)sub_2225C3C70(v49);
        sub_2225C3D00((int)v38, v34);
        uint64_t v35 = sub_2225CF4B4(v38[0], v38[1]);
        sub_2226290A0(v35, v36, (const void **)&v40);
        uint64_t v22 = sub_222628180((uint64_t)a1, v35, v37, v22);
        sub_2225CA520(&v40);
        if (v22) {
          goto LABEL_21;
        }
LABEL_13:
        BOOL v15 = 0;
        goto LABEL_22;
      }
LABEL_21:
      BOOL v15 = sub_22262BD30(&v43, v22);
    }
LABEL_22:
    sub_2225C56C4(v50);
  }
  return v15;
}

uint64_t sub_22262BBBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (!sub_22263057C(a1, a2, &v6)) {
    return sub_22262BC24(a1);
  }
  uint64_t v3 = v6;
  uint64_t v4 = sub_2226309B0(a1);
  sub_222630FEC(&v7, v3, v4, 1);
  return v7;
}

uint64_t sub_22262BC24(uint64_t a1)
{
  uint64_t v2 = sub_2226309B0(a1);
  uint64_t v3 = sub_2226309B0(a1);
  sub_222630FEC(&v5, v2, v3, 1);
  return v5;
}

uint64_t sub_22262BC74(_DWORD *a1)
{
  if (sub_222628A6C(a1) == 2) {
    return 0;
  }
  uint64_t v4 = sub_22261964C(a1, v2);

  return sub_222607D40(v4);
}

uint64_t sub_22262BCC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (!sub_22260F630(a1, a2, &v6)) {
    return sub_22260F93C(a1);
  }
  uint64_t v3 = v6;
  uint64_t v4 = sub_222608BD4(a1);
  sub_22260F98C(&v7, v3, v4, 1);
  return v7;
}

BOOL sub_22262BD30(uint64_t **a1, uint64_t a2)
{
  if (sub_222607D40(a2)) {
    return 0;
  }
  uint64_t v5 = **a1;
  if (!v5) {
    return 1;
  }

  return sub_222608138(a2, v5);
}

uint64_t sub_22262BD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1 + 328;
  uint64_t v7 = sub_222608718((void *)(a1 + 328), a2, a3);
  uint64_t v6 = sub_222607264(v3);
  if (!sub_2225DE624(&v7, &v6)) {
    return 0;
  }
  uint64_t v4 = sub_2225E4210((uint64_t)&v7);
  return *(void *)sub_2225E563C(v4);
}

uint64_t sub_22262BE00(uint64_t *a1, const void *a2, size_t a3, void *a4, char a5, uint64_t a6)
{
  sub_22262BE80(&v13);
  LOBYTE(v13) = v13 & 0xFE | a5;
  return sub_22262BE84(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_22262BE84(uint64_t *a1, const void *a2, size_t a3, void *a4, int a5, uint64_t a6)
{
  uint64_t v86 = *MEMORY[0x263EF8340];
  uint64_t v82 = a2;
  size_t v83 = a3;
  uint64_t v12 = sub_222628180((uint64_t)a1, (uint64_t)a2, a3, a6);
  if (!v12)
  {
    unsigned int v13 = a5;
    uint64_t v14 = (_DWORD *)sub_2225C5B40(*a1);
    if (a6)
    {
      unint64_t v15 = sub_222629040((_DWORD **)a1, a6);
    }
    else
    {
      uint64_t v45 = sub_2225C5B40(*a1);
      uint64_t v76 = (char *)sub_2225F93A0(v45, (uint64_t)a4);
      uint64_t v77 = v46;
      uint64_t v47 = sub_2225CF4B4((uint64_t)v76, v46);
      if (sub_2225D1680(v47, v48, a2, a3)) {
        return 0;
      }
      uint64_t v49 = (char **)sub_2225CBDF0((uint64_t)v85, (uint64_t)&v76);
      if (!sub_2225CF7F4(v49)) {
        return 0;
      }
      v75[0] = (char *)sub_2225CF24C((uint64_t)v76, v77);
      v75[1] = v50;
      uint64_t v81 = (uint64_t)sub_2225F8658((uint64_t)v14, (uint64_t)v75[0], (uint64_t)v50, 1);
      if (!v81) {
        return 0;
      }
      sub_22262C614((uint64_t)(a1 + 51), &v81, (uint64_t)v85);
      sub_2225F8068(v70, v85);
      sub_22262C688((uint64_t)(a1 + 51), (uint64_t)&v84);
      sub_2225F8068(v85, &v84);
      if (sub_22260B634((uint64_t *)v70, (uint64_t)v85))
      {
        sub_2225C3D00((int)v80, ".framework");
        BOOL v51 = sub_2225F2464(v75, v80[0], (size_t)v80[1]);
        uint64_t v52 = sub_222619364(a1[4], v81, v51);
        if (v52)
        {
          sub_22262C6E4(a1, v52, a5 & 1);
          sub_22262C614((uint64_t)(a1 + 51), &v81, (uint64_t)&v84);
          sub_2225F8068(v85, &v84);
          v70[0] = v85[0];
        }
        sub_22262C688((uint64_t)(a1 + 51), (uint64_t)&v84);
        sub_2225F8068(v85, &v84);
        if (sub_22260B634((uint64_t *)v70, (uint64_t)v85))
        {
          sub_22262C9F4(&v84);
          sub_22262C9E4((uint64_t)&v81, (uint64_t)&v84, (uint64_t)v85);
          sub_22262C924((uint64_t)(a1 + 51), (uint64_t *)v85, (uint64_t)v67);
          sub_2225F8068(&v79, v67);
          v70[0] = v79;
          sub_22262C9F8((uint64_t)v85);
          sub_22262C9FC(&v84);
        }
      }
      if ((*(unsigned char *)(sub_2225C3C70((uint64_t)v70) + 8) & 1) == 0) {
        return 0;
      }
      *(void *)&v85[0] = sub_2225CF4B4((uint64_t)v76, v77);
      *((void *)&v85[0] + 1) = v53;
      uint64_t v54 = sub_2225C3C70((uint64_t)v70);
      uint64_t v55 = sub_2225C3C70(v54 + 24);
      uint64_t v56 = sub_2225C3C70((uint64_t)v70);
      uint64_t v57 = sub_2225C3D04(v56 + 24);
      uint64_t v58 = sub_22262CA00(v55, v57, (uint64_t)v85);
      uint64_t v59 = sub_2225C3C70((uint64_t)v70);
      uint64_t v60 = sub_2225C3D04(v59 + 24);
      char v65 = *(unsigned char *)(sub_2225C3C70((uint64_t)v70) + 12);
      unsigned __int8 v61 = *(unsigned char *)(sub_2225C3C70((uint64_t)v70) + 12);
      unsigned __int8 v62 = *(unsigned char *)(sub_2225C3C70((uint64_t)v70) + 12);
      uint64_t v63 = sub_2225C3C70((uint64_t)v70);
      if (v58 != v60) {
        return 0;
      }
      unint64_t v15 = *(void *)(v63 + 16);
      unsigned int v13 = v65 & 1 | a5 & 0xF9 | (v61 | a5) & 2 | (v62 | a5) & 4;
    }
    uint64_t v16 = (char *)sub_2225C3C70((uint64_t)a4);
    sub_2225C3D00((int)v78, v16);
    sub_2225D02D0(v85, v78[0], v78[1]);
    sub_2225CBDE8((uint64_t)&v84, "Headers");
    sub_2225DAD6C((uint64_t)&v82, (uint64_t)".h", (uint64_t)v67);
    sub_2225CBDE8((uint64_t)&v76, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v75, &byte_2226D1615);
    sub_2225CEF30((const void **)v85, &v84.__r_.__value_.__l.__data_, v67, &v76, v75);
    uint64_t v17 = (const void *)sub_2225CE27C((uint64_t)v85);
    uint64_t v81 = sub_2225F89F4(v14, v17, v18, 0, 1);
    if (v81)
    {
      uint64_t v19 = sub_2225C26A4(1256);
      uint64_t v20 = (uint64_t)v82;
      uint64_t v21 = v83;
      sub_2225F3278(&v73);
      sub_222607DD0(v19, v20, v21, v73, a6, 1, 0);
      uint64_t v74 = v19;
      *sub_22260B594((uint64_t)(a1 + 54), &v74) = v15;
      *(_WORD *)(v74 + 528) |= 0x80u;
      sub_2225CCBF8(v72, a1[2] + 136);
      if (sub_2225CD4BC(v72[0], v72[1], v82, v83))
      {
        a1[37] = v74;
        sub_2225CA51C(&v82, (uint64_t)&v84);
        sub_2225CCDE4((uint64_t)(a1 + 38), (uint64_t)&v84);
        std::string::~string(&v84);
      }
      uint64_t v22 = v74;
      *(_WORD *)(v74 + 528) |= ((_WORD)v13 << 9) & 0x800 | (unsigned __int16)(32 * (v13 & 3));
      if (!a6)
      {
        *(void *)sub_2225E4044((uint64_t)(a1 + 41), (uint64_t)v82, v83) = v22;
        uint64_t v22 = v74;
      }
      sub_22262CA68((uint64_t *)(v22 + 40), &v81);
      uint64_t v23 = sub_22262B884((uint64_t)(a1 + 45), &v81);
      sub_2226286CC(&v84, v74, 0);
      sub_2225CC7B8((uint64_t)v23, &v84);
      uint64_t v24 = v74;
      v84.__r_.__value_.__r.__words[0] = sub_222608330(v81);
      *sub_22260B594((uint64_t)(a1 + 48), (uint64_t *)&v84) = v24;
      uint64_t v25 = v74 + 584;
      sub_222627EE0(&v84, 0, 1);
      sub_2225CC7B8(v25, &v84);
      *(_WORD *)(v74 + 528) |= 0x500u;
      sub_2225CDDC0(&v79);
      unsigned int v26 = (char *)sub_2225C3C70((uint64_t)a4);
      sub_2225C3D00((int)v71, v26);
      sub_2225D02D0(&v84, v71[0], v71[1]);
      sub_2225CBDE8((uint64_t)v67, "Frameworks");
      unint64_t v27 = (unint64_t)&byte_2226D1615;
      sub_2225CBDE8((uint64_t)&v76, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v75, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v70, &byte_2226D1615);
      sub_2225CEF30((const void **)&v84.__r_.__value_.__l.__data_, v67, &v76, v75, (char **)v70);
      sub_2225CF40C((uint64_t)&v84);
      uint64_t v76 = (char *)sub_2225CA4D0((uint64_t)&v84);
      uint64_t v77 = v28;
      sub_2225CBDF0((uint64_t)v67, (uint64_t)&v76);
      sub_222614DF4(v75, v67, &v79);
      sub_222614E14((uint64_t)v70);
      if (sub_222614DF8(v75, v70))
      {
        do
        {
          if (sub_2225CDBBC(&v79)) {
            break;
          }
          uint64_t v29 = sub_222614E1C((uint64_t)v75);
          uint64_t v31 = nullsub_1(v29, v30);
          sub_2225CCBF8(v67, v31);
          sub_2225C3D00((int)v69, ".framework");
          if (sub_2225F2464(v67, v69[0], (size_t)v69[1]))
          {
            uint64_t v32 = sub_222614E1C((uint64_t)v75);
            uint64_t v34 = nullsub_1(v32, v33);
            sub_2225CCBF8(v68, v34);
            uint64_t v35 = sub_2225F8658((uint64_t)v14, v68[0], v68[1], 1);
            if (v35)
            {
              uint64_t v36 = v35;
              uint64_t v76 = (char *)sub_2225F93A0((uint64_t)v14, (uint64_t)v35);
              uint64_t v77 = v37;
              while (1)
              {
                uint64_t v76 = (char *)sub_2225CF24C((uint64_t)v76, v77);
                uint64_t v77 = v38;
                if (sub_2225CF1E0((uint64_t)&v76)) {
                  break;
                }
                if (sub_2225F8658((uint64_t)v14, (uint64_t)v76, v77, 1) == a4)
                {
                  sub_2225CF1C4(v67);
                  uint64_t v39 = sub_222614E1C((uint64_t)v75);
                  uint64_t v41 = nullsub_1(v39, v40);
                  sub_2225CCBF8(v66, v41);
                  uint64_t v42 = sub_2225CF4B4(v66[0], v66[1]);
                  sub_2226290A0(v42, v43, (const void **)v67);
                  unint64_t v27 = a5 & 0xFFFFFF00 | (unint64_t)v13 | v27 & 0xFFFFFFFF00000000;
                  sub_22262BE84(a1, v42, v44, v36, v27, v74);
                  sub_2225CA520(v67);
                  break;
                }
              }
            }
          }
          sub_22261527C((uint64_t)v75, (uint64_t *)&v79);
        }
        while ((sub_222614DF8(v75, v70) & 1) != 0);
      }
      sub_222614E18(v70);
      sub_222614E18(v75);
      if ((sub_22262CAA4(v74) & 1) == 0) {
        sub_22262CAC0(v74, (uint64_t)a4, v14);
      }
      uint64_t v12 = v74;
      sub_2225CA520(&v84);
    }
    else
    {
      uint64_t v12 = 0;
    }
    sub_2225CA520(v85);
  }
  return v12;
}

uint64_t sub_22262C614@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_222631690(a1, a2, &v8)) {
    return sub_22262C688(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_222630D68(a1);
  return sub_2226316CC(a3, v5, v6, 1);
}

uint64_t sub_22262C688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_222630D68(a1);
  uint64_t v5 = sub_222630D68(a1);

  return sub_2226316CC(a2, v4, v5, 1);
}

BOOL sub_22262C6E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v25 = a2;
  uint64_t v5 = (uint64_t)(a1 + 60);
  sub_22260B5C0((uint64_t)(a1 + 60), &v25, (uint64_t)v24);
  sub_22260B264(v5, (uint64_t)v26);
  sub_2225F8068(v27, v26);
  if (sub_2225F9558(v24, (uint64_t)v27)) {
    return *(unsigned char *)(sub_2225C3C70((uint64_t)v24) + 8) != 0;
  }
  uint64_t v7 = *a1;
  uint64_t v8 = v25;
  sub_2225F3278(&v23);
  unsigned int v9 = sub_22263006C(v7, v8, v23, a3, 0, 0);
  if (sub_222609B70(*a1, v9, 0))
  {
    uint64_t v10 = sub_222608330(v25);
    uint64_t v11 = (char *)sub_2225C3C70(v10);
    sub_2225C3D00((int)&v21, v11);
    uint64_t v12 = sub_2225CF480(v21, v22);
    uint64_t v14 = v13;
    sub_2225C3D00((int)v20, "Modules");
    if (sub_2225CD4BC(v12, v14, v20[0], (size_t)v20[1]))
    {
      uint64_t v21 = sub_2225CF24C(v21, v22);
      uint64_t v22 = v15;
      sub_2225C3D00((int)v19, ".framework");
      if (sub_2225F2464(&v21, v19[0], (size_t)v19[1]))
      {
        uint64_t v16 = sub_2225C5B40(*a1);
        uint64_t v10 = (uint64_t)sub_2225F8658(v16, v21, v22, 1);
      }
    }
    uint64_t v17 = sub_222609B70(*a1, v9, 0);
    sub_22261B320((uint64_t)v27, v9, v17, *a1, (uint64_t)(a1 + 6));
    sub_2226300E0((uint64_t)v26, (uint64_t)v27, *a1, a1[3], a1[1], (uint64_t)a1, v25, v10, a1[5], a3);
    uint64_t v6 = sub_22262FFB8((uint64_t)v26);
    *(unsigned char *)sub_2226190CC(v5, &v25) = v6;
    sub_2226300F4((uint64_t)v26);
    sub_22261B864(v27);
  }
  else
  {
    uint64_t v6 = 1;
    *(unsigned char *)sub_2226190CC(v5, &v25) = 1;
  }
  return v6;
}

uint64_t sub_22262C924@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v13 = 0;
  if (sub_222631690(a1, a2, &v13))
  {
    uint64_t v6 = v13;
    uint64_t v7 = sub_222630D68(a1);
    sub_2226316CC(v12, v6, v7, 1);
    char v11 = 0;
  }
  else
  {
    uint64_t v8 = sub_222631BC0(a1, a2, (uint64_t)(a2 + 1), v13);
    uint64_t v13 = v8;
    uint64_t v9 = sub_222630D68(a1);
    sub_2226316CC(v12, v8, v9, 1);
    char v11 = 1;
  }
  return sub_2225F7FE8((uint64_t)v12, (uint64_t)&v11, a3);
}

uint64_t sub_22262C9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226318AC(a3, a1, a2);
}

uint64_t sub_22262CA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = j_j_nullsub_1(a1);
  uint64_t v7 = j_j_nullsub_1(a2);
  uint64_t v8 = sub_222608CCC(v6, v7, a3, (uint64_t)&v10);
  return sub_2225C5F20(a1, v8);
}

uint64_t *sub_22262CA68(uint64_t *a1, void *a2)
{
  uint64_t v3 = j_nullsub_1(*a2, a2);
  sub_222630B70(a1, v3, 1);
  return a1;
}

uint64_t sub_22262CAA4(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 528) & 8) != 0 && (uint64_t v1 = *(void *)(a1 + 32)) != 0) {
    return sub_22262FA60(v1);
  }
  else {
    return 0;
  }
}

uint64_t sub_22262CAC0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  sub_2225CF794(v15);
  uint64_t v6 = (char *)sub_2225C3C70(a2);
  sub_2225C3D00((int)v14, v6);
  sub_2225DAD18(v15, v14[0], v14[1]);
  sub_2225CBDEC((uint64_t)&v10, a1);
  sub_2225CBDE8((uint64_t)v13, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v12, &byte_2226D1615);
  sub_2225CBDE8((uint64_t)v11, &byte_2226D1615);
  sub_2225CEF30(v15, &v10.__r_.__value_.__l.__data_, v13, v12, v11);
  uint64_t v7 = (const void *)sub_2225CE27C((uint64_t)v15);
  if (sub_2225F89F4(a3, v7, v8, 0, 1))
  {
    sub_22262FD50(&v10, a1, 1);
    sub_2226084A8((void *)(a1 + 1096), (uint64_t)&v10);
    j_std::string::~string(&v10);
  }
  return sub_2225CA520(v15);
}

uint64_t *sub_22262CBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a3;
  uint64_t v5 = sub_22262B884(a1 + 360, &v8);
  sub_2226286CC(&v7, a2, 0);
  sub_2225CC7B8((uint64_t)v5, &v7);
  sub_22262CA68((uint64_t *)(a2 + 40), &v8);
  uint64_t v7 = sub_222608330(v8);
  uint64_t result = sub_22260B594(a1 + 384, &v7);
  uint64_t *result = a2;
  return result;
}

uint64_t *sub_22262CC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3;
  sub_22262CCA8((uint64_t *)(a2 + 40), &v6);
  uint64_t result = sub_22260B594(a1 + 384, &v6);
  uint64_t *result = a2;
  return result;
}

uint64_t *sub_22262CCA8(uint64_t *a1, void *a2)
{
  uint64_t v3 = j_nullsub_1(*a2, a2);
  sub_222631E58(a1, v3);
  return a1;
}

uint64_t sub_22262CCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a3;
  if (a4 == 1)
  {
    uint64_t v7 = a2 + 328;
LABEL_6:
    sub_2225CC7B8(v7, &v12);
    BOOL v8 = sub_222628BA4(a2) == *(void *)(a1 + 288);
    sub_222618D8C(*(void *)(a1 + 32), v12, a4, v8);
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    uint64_t v7 = a2 + 248;
    goto LABEL_6;
  }
  sub_2225CC7B8(a2 + 288, &v12);
LABEL_7:
  uint64_t v9 = sub_22262B884(a1 + 360, &v12);
  sub_2226286CC(&v11, a2, a4);
  return sub_2225CC7B8((uint64_t)v9, &v11);
}

unint64_t sub_22262CDA0(_DWORD **a1, uint64_t a2)
{
  uint64_t v3 = (int *)(a2 + 24);
  if (sub_2225F38E8((_DWORD *)(a2 + 24))) {
    return 0;
  }
  uint64_t v5 = *a1;
  unsigned int v6 = sub_222609AF8(v5, *v3);

  return sub_22262CE08((uint64_t)v5, v6);
}

unint64_t sub_22262CE08(uint64_t a1, unsigned int a2)
{
  char v6 = 0;
  uint64_t v2 = (_DWORD *)sub_222609DB4(a1, a2, &v6);
  if (v6) {
    return 0;
  }
  uint64_t v3 = (uint64_t)v2;
  if (!sub_222609EEC(v2)) {
    return 0;
  }
  uint64_t v4 = sub_2225E563C(v3);
  unint64_t result = sub_222609F08(v4);
  if (result) {
    return *(void *)(result + 16);
  }
  return result;
}

uint64_t sub_22262CE6C(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 88 * a2;
}

uint64_t sub_22262CE98(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  uint64_t result = sub_222608960(v2, v3);
  a1[1] = *a1;
  return result;
}

uint64_t sub_22262CEDC(uint64_t a1, unsigned int a2)
{
  char v6 = 0;
  uint64_t v2 = (_DWORD *)sub_222609DB4(a1, a2, &v6);
  if (v6 || (uint64_t v3 = (uint64_t)v2, (sub_222609EEC(v2) & 1) == 0))
  {
    sub_2225F3278(&v7);
    return v7;
  }
  else
  {
    uint64_t v4 = (unsigned int *)sub_2225E563C(v3);
    return sub_22260C63C(v4);
  }
}

uint64_t sub_22262CF40(uint64_t a1)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  uint64_t v2 = (int *)(a1 + 208);
  while (1)
  {
    while (1)
    {
      uint64_t v3 = sub_22260C5BC((uint64_t)v2);
      sub_22262D398((uint64_t)v2);
      sub_22261B6AC(v51);
      sub_22261B6B0(*(void *)a1, (uint64_t)v51);
      LODWORD(v34[0]) = sub_2225C3B40(v51);
      *(_DWORD *)(a1 + 212) = sub_2225C3B40((unsigned int *)v34);
      int v4 = sub_22261BFB4((uint64_t)v51);
      if (v4 > 12) {
        break;
      }
      if (v4 != 5)
      {
        if (v4 == 1)
        {
          int v10 = 3;
          goto LABEL_26;
        }
        if (v4 == 7)
        {
          uint64_t v52 = sub_22261BACC((uint64_t)v51);
          uint64_t v53 = v11;
          *(void *)(a1 + 224) = sub_2225C3C70((uint64_t)&v52);
          *(_DWORD *)(a1 + 216) = sub_2225C3D04((uint64_t)&v52);
          sub_2225D934C(v34, v52, v53);
          LODWORD(v32[0]) = 1;
          uint64_t v12 = sub_2225F2718((uint64_t)v34, "config_macros", (uint64_t)v32);
          int v50 = 2;
          uint64_t v13 = sub_2225D95FC(v12, "conflict", (uint64_t)&v50);
          int v49 = 7;
          uint64_t v14 = sub_2225D9350(v13, "exclude", (uint64_t)&v49);
          int v48 = 8;
          uint64_t v15 = sub_2225D95FC(v14, "explicit", (uint64_t)&v48);
          int v47 = 9;
          uint64_t v16 = sub_2225D9588(v15, (uint64_t)"export", (uint64_t)&v47);
          int v46 = 10;
          uint64_t v17 = sub_2225D9588(v16, (uint64_t)"extern", (uint64_t)&v46);
          int v45 = 11;
          uint64_t v18 = sub_2225DB220(v17, (uint64_t)"framework", (uint64_t)&v45);
          int v44 = 4;
          uint64_t v19 = sub_2225D9588(v18, (uint64_t)"header", (uint64_t)&v44);
          int v43 = 12;
          uint64_t v20 = sub_2225D9520(v19, "link", (uint64_t)&v43);
          int v42 = 13;
          uint64_t v21 = sub_2225D9588(v20, (uint64_t)"module", (uint64_t)&v42);
          int v41 = 15;
          uint64_t v22 = sub_2225D9350(v21, "private", (uint64_t)&v41);
          int v40 = 18;
          uint64_t v23 = sub_2225D95FC(v22, "requires", (uint64_t)&v40);
          int v39 = 16;
          uint64_t v24 = sub_2225D95FC(v23, "umbrella", (uint64_t)&v39);
          int v38 = 17;
          uint64_t v25 = sub_2225D94AC(v24, (unsigned __int16 *)"use", (uint64_t)&v38);
          unsigned int v37 = 5;
          *(_DWORD *)(a1 + 208) = sub_2225D9664(v25, &v37);
          return v3;
        }
        goto LABEL_16;
      }
    }
    if (v4 > 18) {
      break;
    }
    if (v4 == 13)
    {
      if (sub_22262D3B0((uint64_t)v51))
      {
        uint64_t v5 = *(void *)(a1 + 24);
        unsigned int v6 = sub_2225C3B40(v51);
        sub_2225F52C4(v5, v6, 19, (uint64_t)v36);
        unsigned int v7 = v36;
        goto LABEL_17;
      }
      sub_222607AE4(&v52);
      sub_22261870C(v33, (uint64_t)v51);
      sub_22262D3BC(v34, v33[0], v33[1], *(void *)(a1 + 8), &v52, *(void *)(a1 + 16), 0);
      if (!v35)
      {
        unsigned int v27 = sub_222625684((uint64_t)v34);
        uint64_t v28 = (void *)sub_2225E4B90(a1 + 72, v27 + 1);
        v32[0] = sub_22262D3C0((uint64_t)v34);
        v32[1] = v29;
        uint64_t v30 = (const void *)sub_2225C3C70((uint64_t)v32);
        memcpy(v28, v30, v27);
        *((unsigned char *)v28 + v27) = 0;
        *(_DWORD *)(a1 + 208) = 20;
        *(void *)(a1 + 224) = v28;
        *(_DWORD *)(a1 + 216) = v27;
        sub_22262D410((uint64_t)v34);
        sub_2226220B8(&v52);
        return v3;
      }
      sub_22262D410((uint64_t)v34);
      sub_2226220B8(&v52);
    }
    else
    {
LABEL_16:
      uint64_t v8 = *(void *)(a1 + 24);
      unsigned int v9 = sub_2225C3B40(v51);
      sub_2225F52C4(v8, v9, 689, (uint64_t)v31);
      unsigned int v7 = v31;
LABEL_17:
      sub_2225F37F0(v7);
      *(unsigned char *)(a1 + 65) = 1;
    }
  }
  switch(v4)
  {
    case 19:
      int v10 = 23;
      goto LABEL_26;
    case 20:
      int v10 = 24;
      goto LABEL_26;
    case 21:
    case 22:
    case 26:
    case 27:
    case 28:
    case 29:
      goto LABEL_16;
    case 23:
      int v10 = 21;
      goto LABEL_26;
    case 24:
      int v10 = 22;
      goto LABEL_26;
    case 25:
      int v10 = 14;
      goto LABEL_26;
    case 30:
      int v10 = 19;
      goto LABEL_26;
    default:
      if (v4 != 40)
      {
        if (v4 == 64)
        {
          *uint64_t v2 = 0;
          return v3;
        }
        goto LABEL_16;
      }
      int v10 = 6;
LABEL_26:
      *uint64_t v2 = v10;
      return v3;
  }
}

double sub_22262D398(uint64_t a1)
{
  *(void *)&double result = 3;
  *(void *)a1 = 3;
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_22262D3B0(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 18) >> 5) & 1;
}

uint64_t sub_22262D3C0(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1 + 48);
  unsigned int v3 = sub_222625684(a1);
  sub_2225C3D0C(&v5, v2, v3);
  return v5;
}

uint64_t sub_22262D414(uint64_t result, int a2)
{
  uint64_t v3 = result;
  int v4 = 0;
  int v5 = 0;
  unsigned int v6 = (_DWORD *)(result + 208);
  while (2)
  {
    switch(*v6)
    {
      case 0x15:
        double result = sub_22262D54C(v6, a2);
        if (!result || v5 || v4)
        {
          ++v5;
          goto LABEL_23;
        }
        return result;
      case 0x16:
        if (v5)
        {
          --v5;
          goto LABEL_23;
        }
        double result = sub_22262D54C(v6, a2);
        if ((result & 1) == 0) {
          goto LABEL_20;
        }
        return result;
      case 0x17:
        double result = sub_22262D54C(v6, a2);
        if (!result || v5 || v4)
        {
          ++v4;
          goto LABEL_23;
        }
        return result;
      case 0x18:
        if (v4)
        {
          --v4;
          goto LABEL_23;
        }
        double result = sub_22262D54C(v6, a2);
        if ((result & 1) == 0)
        {
          int v4 = 0;
          goto LABEL_23;
        }
        return result;
      default:
        if (*v6 == 3) {
          return result;
        }
        if (v5 | v4) {
          goto LABEL_23;
        }
        double result = sub_22262D54C(v6, a2);
        if ((result & 1) == 0)
        {
          int v4 = 0;
LABEL_20:
          int v5 = 0;
LABEL_23:
          double result = sub_22262CF40(v3);
          continue;
        }
        return result;
    }
  }
}

BOOL sub_22262D54C(_DWORD *a1, int a2)
{
  return *a1 == a2;
}

uint64_t sub_22262D55C(uint64_t a1, void *a2)
{
  sub_22262D65C(a2);
  uint64_t v4 = a1 + 208;
  while (sub_22262D54C((_DWORD *)(a1 + 208), 5) || sub_22262D54C((_DWORD *)(a1 + 208), 20))
  {
    v11[0] = sub_22262D710(a1 + 208);
    v11[1] = v5;
    int v10 = sub_22260C5BC(a1 + 208);
    sub_2226094FC((uint64_t)v11, (uint64_t)&v10, (uint64_t)v12);
    sub_22262D740((uint64_t)&v13, (uint64_t)v12);
    sub_22262D6A0(a2, (uint64_t)&v13);
    j_std::string::~string(&v13);
    sub_22262CF40(a1);
    if (!sub_22262D54C((_DWORD *)(a1 + 208), 14)) {
      return 0;
    }
    sub_22262CF40(a1);
  }
  uint64_t v7 = *(void *)(a1 + 24);
  unsigned int v8 = sub_22260C5BC(v4);
  sub_2225F52C4(v7, v8, 672, (uint64_t)v9);
  sub_2225F37F0(v9);
  return 1;
}

void sub_22262D65C(void *a1)
{
  uint64_t v2 = (std::string *)sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_2226088C0(v2, v3);
  a1[1] = *a1;
}

uint64_t sub_22262D6A0(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_222631E84(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_222631F74(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 32;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_22262D710(uint64_t a1)
{
  sub_2225C3D0C(&v2, *(void *)(a1 + 16), *(unsigned int *)(a1 + 8));
  return v2;
}

uint64_t sub_22262D744(uint64_t a1)
{
  v80[11] = *MEMORY[0x263EF8340];
  uint64_t v2 = (_DWORD *)(a1 + 208);
  if (!sub_22262D54C((_DWORD *)(a1 + 208), 10))
  {
    sub_2225F3278(&data);
    BOOL v4 = sub_22262D54C(v2, 8);
    if (v4) {
      unsigned int data = sub_22262CF40(a1);
    }
    BOOL v5 = sub_22262D54C(v2, 11);
    if (v5) {
      sub_22262CF40(a1);
    }
    if (!sub_22262D54C(v2, 13))
    {
      uint64_t v6 = *(void *)(a1 + 24);
      unsigned int v7 = sub_22260C5BC((uint64_t)v2);
      sub_2225F52C4(v6, v7, 671, (uint64_t)v78);
      sub_2225F37F0(v78);
      uint64_t result = sub_22262CF40(a1);
      *(unsigned char *)(a1 + 65) = 1;
      return result;
    }
    sub_22262CF40(a1);
    if (sub_22262D54C(v2, 19)) {
      return sub_22262E254(a1, v5, v4);
    }
    sub_222607D34(v80);
    if (sub_22262D55C(a1, v80)) {
      goto LABEL_39;
    }
    uint64_t v8 = *(void *)(a1 + 232);
    unint64_t v9 = sub_222607F28((uint64_t)v80);
    if (v8)
    {
      if (v9 >= 2)
      {
        uint64_t v10 = *(void *)(a1 + 24);
        uint64_t v11 = sub_2225CC180((uint64_t)v80);
        sub_2225F52C4(v10, *(unsigned int *)(v11 + 24), 685, (uint64_t)&v72);
        LODWORD(v10) = *(_DWORD *)(sub_2225CC180((uint64_t)v80) + 24);
        uint64_t v12 = sub_22262E6C0((uint64_t)v80);
        sub_22261F184(v75, v10, *(_DWORD *)(v12 + 24));
        sub_222625214(&v72, v75);
        std::string v13 = &v72;
        goto LABEL_38;
      }
    }
    else
    {
      char v14 = !v4;
      if (v9 != 1) {
        char v14 = 1;
      }
      if ((v14 & 1) == 0)
      {
        sub_2225F52C4(*(void *)(a1 + 24), data, 676, (uint64_t)v77);
        sub_2225F37F0(v77);
        sub_2225F3278(&v72);
        BOOL v4 = 0;
        unsigned int data = v72.__r_.__value_.__l.__data_;
        *(unsigned char *)(a1 + 65) = 1;
      }
    }
    uint64_t v15 = *(void *)(a1 + 232);
    if ((unint64_t)sub_222607F28((uint64_t)v80) >= 2)
    {
      *(void *)(a1 + 232) = 0;
      int v16 = sub_222607F28((uint64_t)v80);
      uint64_t v17 = 0;
      int v18 = v16 - 1;
      if (v16 != 1)
      {
        unsigned int v19 = 0;
        while (1)
        {
          uint64_t v20 = *(void *)(a1 + 32);
          uint64_t v21 = sub_222608E28((uint64_t)v80, v19);
          sub_2225CCBF8(v76, v21);
          uint64_t v22 = sub_222628180(v20, v76[0], v76[1], *(void *)(a1 + 232));
          if (!v22) {
            break;
          }
          if (!v19) {
            uint64_t v17 = v22;
          }
          *(void *)(a1 + 232) = v22;
          if (v18 == ++v19) {
            goto LABEL_28;
          }
        }
        if (!*(void *)(a1 + 232))
        {
          uint64_t v59 = *(void *)(a1 + 24);
          uint64_t v60 = sub_222608E28((uint64_t)v80, v19);
          sub_2225F52C4(v59, *(unsigned int *)(v60 + 24), 672, (uint64_t)v71);
          std::string v13 = (std::string *)v71;
          goto LABEL_38;
        }
        uint64_t v31 = *(void *)(a1 + 24);
        uint64_t v32 = sub_222608E28((uint64_t)v80, v19);
        sub_2225F52C4(v31, *(unsigned int *)(v32 + 24), 681, (uint64_t)v75);
        uint64_t v33 = sub_222608E28((uint64_t)v80, v19);
        sub_2225CCBF8(v74, v33);
        uint64_t v34 = sub_2225F3774(v75, v74[0], v74[1]);
        uint64_t v35 = sub_222628BA4(*(void *)(a1 + 232));
        sub_22260816C(v35, &v72);
        sub_2225CCBF8(v73, &v72);
        sub_2225F3774(v34, v73[0], v73[1]);
        std::string::~string(&v72);
        goto LABEL_37;
      }
LABEL_28:
      uint64_t v23 = *(void *)(a1 + 40);
      if (v23 != sub_22262CDA0(*(_DWORD ***)(a1 + 32), v17)) {
        sub_22262E6DC(*(void *)(a1 + 32), v17, *(void *)(a1 + 40));
      }
    }
    uint64_t v24 = sub_22262E6C0((uint64_t)v80);
    sub_2225CCBF8(&v72, v24);
    uint64_t v25 = *(unsigned int *)(sub_22262E6C0((uint64_t)v80) + 24);
    sub_22262BE80(v70);
    sub_22262E71C(a1, v70);
    if (!sub_22262D54C(v2, 21))
    {
      uint64_t v29 = *(void *)(a1 + 24);
      unsigned int v30 = sub_22260C5BC((uint64_t)v2);
      sub_2225F52C4(v29, v30, 666, (uint64_t)v75);
      sub_2225F3774(v75, (uint64_t)v72.__r_.__value_.__l.__data_, v72.__r_.__value_.__l.__size_);
LABEL_37:
      std::string v13 = (std::string *)v75;
      goto LABEL_38;
    }
    unsigned int v26 = sub_22262CF40(a1);
    uint64_t v27 = sub_222628180(*(void *)(a1 + 32), (uint64_t)v72.__r_.__value_.__l.__data_, v72.__r_.__value_.__l.__size_, *(void *)(a1 + 232));
    if (v27)
    {
      uint64_t v28 = (unsigned int *)(v27 + 24);
      if (!sub_2225F38E8((_DWORD *)(v27 + 24)) || *(void *)(a1 + 232))
      {
        sub_2225F52C4(*(void *)(a1 + 24), v25, 684, (uint64_t)v75);
        sub_2225F3774(v75, (uint64_t)v72.__r_.__value_.__l.__data_, v72.__r_.__value_.__l.__size_);
        sub_2225F37F0(v75);
        sub_2225F52C4(*(void *)(a1 + 24), *v28, 826, (uint64_t)v67);
        sub_2225F37F0(v67);
        sub_22262D414(a1, 22);
        if (sub_22262D54C(v2, 22)) {
          sub_22262CF40(a1);
        }
        goto LABEL_39;
      }
      sub_22262D414(a1, 22);
      if (sub_22262D54C(v2, 22))
      {
        sub_22262CF40(a1);
        return sub_222607F0C(v80);
      }
      uint64_t v61 = *(void *)(a1 + 24);
      unsigned int v62 = sub_22260C5BC((uint64_t)v2);
      sub_2225F52C4(v61, v62, 673, (uint64_t)v69);
      sub_2225F37F0(v69);
      sub_2225F52C4(*(void *)(a1 + 24), v26, 824, (uint64_t)v68);
      std::string v13 = (std::string *)v68;
LABEL_38:
      sub_2225F37F0(v13);
LABEL_39:
      *(unsigned char *)(a1 + 65) = 1;
      return sub_222607F0C(v80);
    }
    uint64_t v36 = sub_22262B6F8(*(void **)(a1 + 32), v72.__r_.__value_.__l.__data_, v72.__r_.__value_.__l.__size_, *(void *)(a1 + 232), v5, v4);
    *(void *)(a1 + 232) = v36;
    *(_DWORD *)(v36 + 24) = v25;
    char v37 = v70[0];
    if ((v70[0] & 1) != 0 || *(unsigned char *)(a1 + 64)) {
      *(_WORD *)(*(void *)(a1 + 232) + 528) |= 0x20u;
    }
    if ((v37 & 2) != 0) {
      *(_WORD *)(*(void *)(a1 + 232) + 528) |= 0x40u;
    }
    while (1)
    {
      switch(*v2)
      {
        case 1:
          sub_22262E99C(a1);
          continue;
        case 2:
          sub_22262EB30(a1);
          continue;
        case 3:
        case 0x16:
          if (sub_22262D54C(v2, 22))
          {
            sub_22262CF40(a1);
          }
          else
          {
            uint64_t v48 = *(void *)(a1 + 24);
            unsigned int v49 = sub_22260C5BC((uint64_t)v2);
            sub_2225F52C4(v48, v49, 673, (uint64_t)v64);
            sub_2225F37F0(v64);
            sub_2225F52C4(*(void *)(a1 + 24), v26, 824, (uint64_t)v63);
            sub_2225F37F0(v63);
            *(unsigned char *)(a1 + 65) = 1;
          }
          uint64_t v50 = *(void *)(a1 + 232);
          if ((*(_WORD *)(v50 + 528) & 8) != 0)
          {
            char v51 = sub_22262CAA4(*(void *)(a1 + 232));
            uint64_t v50 = *(void *)(a1 + 232);
            if ((v51 & 1) == 0)
            {
              BOOL v52 = sub_2225CF1D0((void *)(v50 + 1096));
              uint64_t v50 = *(void *)(a1 + 232);
              if (v52)
              {
                uint64_t v53 = *(void *)(a1 + 48);
                uint64_t v54 = (_DWORD *)sub_2225C5B40(*(void *)(a1 + 8));
                sub_22262CAC0(v50, v53, v54);
                uint64_t v50 = *(void *)(a1 + 232);
              }
            }
          }
          if ((*(_WORD *)(v50 + 528) & 3) == 0 && *(void *)(v50 + 32))
          {
            uint64_t v55 = sub_222628BA4(v50);
            sub_22260851C(v55, 0);
            uint64_t v56 = (void *)(sub_222628BA4(*(void *)(a1 + 232)) + 368);
            uint64_t v57 = sub_2225C3C70(*(void *)(a1 + 232) + 368);
            uint64_t v58 = sub_2225C3D04(*(void *)(a1 + 232) + 368);
            sub_22262F978(v56, v57, v58);
          }
          *(void *)(a1 + 232) = v15;
          return sub_222607F0C(v80);
        case 4:
          sub_2225F3278(&v66);
          sub_22262EFDC(a1, 4, v66);
          continue;
        case 7:
          unsigned int v40 = sub_22262CF40(a1);
          if (!sub_22262D54C(v2, 4))
          {
            uint64_t v43 = *(void *)(a1 + 24);
            unsigned int v44 = sub_22260C5BC((uint64_t)v2);
            sub_2225F52C4(v43, v44, 664, (uint64_t)v75);
            int v45 = "exclude";
            goto LABEL_66;
          }
          sub_22262EFDC(a1, 7, v40);
          break;
        case 8:
        case 0xA:
        case 0xB:
        case 0xD:
          sub_22262D744(a1);
          continue;
        case 9:
          sub_22262ECC0(a1);
          continue;
        case 0xC:
          sub_22262F858(a1);
          continue;
        case 0xF:
          unsigned int v41 = sub_22262CF40(a1);
          if (sub_22262D54C(v2, 4))
          {
            sub_22262EFDC(a1, 15, v41);
          }
          else
          {
            uint64_t v46 = *(void *)(a1 + 24);
            unsigned int v47 = sub_22260C5BC((uint64_t)v2);
            sub_2225F52C4(v46, v47, 664, (uint64_t)v75);
            int v45 = "private";
LABEL_66:
            sub_22260A5E8(v75, (uint64_t)v45);
            sub_2225F37F0(v75);
          }
          break;
        case 0x10:
          unsigned int v42 = sub_22262CF40(a1);
          if (sub_22262D54C(v2, 4)) {
            sub_22262EFDC(a1, 16, v42);
          }
          else {
            sub_22262F59C(a1, v42);
          }
          continue;
        case 0x11:
          sub_22262EE48(a1);
          continue;
        case 0x12:
          sub_22262EECC(a1);
          continue;
        default:
          uint64_t v38 = *(void *)(a1 + 24);
          unsigned int v39 = sub_22260C5BC((uint64_t)v2);
          sub_2225F52C4(v38, v39, 669, (uint64_t)v65);
          sub_2225F37F0(v65);
          sub_22262CF40(a1);
          continue;
      }
    }
  }

  return sub_22262E034(a1);
}

uint64_t sub_22262E034(uint64_t a1)
{
  v23[11] = *MEMORY[0x263EF8340];
  sub_22262CF40(a1);
  if (!sub_22262D54C((_DWORD *)(a1 + 208), 13))
  {
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned int v8 = sub_22260C5BC(a1 + 208);
    sub_2225F52C4(v7, v8, 671, (uint64_t)v22);
    sub_2225F37F0(v22);
    uint64_t result = sub_22262CF40(a1);
    *(unsigned char *)(a1 + 65) = 1;
    return result;
  }
  sub_22262CF40(a1);
  sub_222607D34(v23);
  if (!sub_22262D55C(a1, v23))
  {
    if (sub_22262D54C((_DWORD *)(a1 + 208), 20))
    {
      v17[0] = (const void *)sub_22262D710(a1 + 208);
      v17[1] = v2;
      sub_2225CA51C(v17, (uint64_t)&v20);
      sub_22262CF40(a1);
      sub_2225CCBF8(&v18, &v20);
      sub_2225CF794(v17);
      sub_2225CBDF0((uint64_t)v16, (uint64_t)&v18);
      if (sub_2225CF8B4(v16))
      {
        uint64_t v3 = (char *)sub_2225C3C70(*(void *)(a1 + 48));
        sub_2225C3D00((int)v15, v3);
        sub_2225DAD18(v17, v15[0], v15[1]);
        sub_2225CBDEC((uint64_t)v16, (uint64_t)&v20);
        sub_2225CBDE8((uint64_t)v14, &byte_2226D1615);
        sub_2225CBDE8((uint64_t)v13, &byte_2226D1615);
        sub_2225CBDE8((uint64_t)v12, &byte_2226D1615);
        sub_2225CEF30(v17, v16, v14, v13, v12);
        int v18 = (const void *)sub_2225CA4D0((uint64_t)v17);
        size_t v19 = v4;
      }
      BOOL v5 = (_DWORD *)sub_2225C5B40(*(void *)(a1 + 8));
      uint64_t v6 = sub_2225F89F4(v5, v18, v19, 0, 1);
      if (v6) {
        sub_22262C6E4(*(void *)(a1 + 32), v6, 0);
      }
      sub_2225CA520(v17);
      std::string::~string(&v20);
      return sub_222607F0C(v23);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned int v11 = sub_22260C5BC(a1 + 208);
    sub_2225F52C4(v10, v11, 670, (uint64_t)v21);
    sub_2225F37F0(v21);
  }
  *(unsigned char *)(a1 + 65) = 1;
  return sub_222607F0C(v23);
}

uint64_t sub_22262E254(uint64_t a1, int a2, int a3)
{
  unsigned int v6 = sub_22262CF40(a1);
  uint64_t v7 = *(void *)(a1 + 232);
  if (v7) {
    int v8 = 1;
  }
  else {
    int v8 = a2;
  }
  if (v8)
  {
    if (v7)
    {
      __int16 v9 = *(_WORD *)(v7 + 528);
      if ((v9 & 2) != 0)
      {
        if (!sub_2226082D0(v7))
        {
          uint64_t v11 = *(void *)(a1 + 24);
          uint64_t v12 = v6;
          std::string v13 = v51;
          char v14 = v51;
          int v15 = 678;
          goto LABEL_20;
        }
        __int16 v9 = *(_WORD *)(*(void *)(a1 + 232) + 528);
      }
      if ((v9 & 0x100) == 0)
      {
        int v10 = 0;
        if (!a2)
        {
LABEL_28:
          if (v10)
          {
LABEL_29:
            uint64_t result = sub_22262D54C((_DWORD *)(a1 + 208), 21);
            if (result)
            {
              sub_22262CF40(a1);
              sub_22262D414(a1, 22);
              uint64_t result = sub_22262D54C((_DWORD *)(a1 + 208), 22);
              if (result) {
                uint64_t result = sub_22262CF40(a1);
              }
            }
            goto LABEL_57;
          }
          goto LABEL_23;
        }
        goto LABEL_22;
      }
      sub_2225F52C4(*(void *)(a1 + 24), v6, 679, (uint64_t)v50);
      sub_2225F37F0(v50);
      if (!sub_2225CDBBC((_DWORD *)(*(void *)(a1 + 232) + 540)))
      {
LABEL_21:
        int v10 = 1;
        if (!a2) {
          goto LABEL_28;
        }
LABEL_22:
        sub_2225F52C4(*(void *)(a1 + 24), v6, 677, (uint64_t)v48);
        sub_2225F37F0(v48);
        if (v10) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v12 = *(unsigned int *)(*(void *)(a1 + 232) + 540);
      std::string v13 = v49;
      char v14 = v49;
      int v15 = 826;
LABEL_20:
      sub_2225F52C4(v11, v12, v15, (uint64_t)v14);
      sub_2225F37F0(v13);
      goto LABEL_21;
    }
  }
  else
  {
    sub_2225F52C4(*(void *)(a1 + 24), v6, 686, (uint64_t)v52);
    sub_2225F37F0(v52);
    if (*(void *)(a1 + 232)) {
      goto LABEL_21;
    }
  }
  if (!a3)
  {
    int v10 = v8 ^ 1;
    goto LABEL_28;
  }
  sub_2225F52C4(*(void *)(a1 + 24), v6, 675, (uint64_t)v47);
  sub_2225F37F0(v47);
  if ((v8 & 1) == 0) {
    goto LABEL_29;
  }
  a3 = 0;
LABEL_23:
  sub_22262BE80(v46);
  sub_22262E71C(a1, v46);
  uint64_t v16 = *(void *)(a1 + 232);
  if (v16)
  {
    *(_WORD *)(v16 + 528) |= 0x100u;
    *(_DWORD *)(*(void *)(a1 + 232) + 540) = v6;
    if (a3) {
      __int16 v17 = 512;
    }
    else {
      __int16 v17 = 0;
    }
    *(_WORD *)(*(void *)(a1 + 232) + 528) = *(_WORD *)(*(void *)(a1 + 232) + 528) & 0xFDFF | v17;
  }
  else
  {
    size_t v19 = sub_22262FE54(*(void *)(a1 + 32) + 408, (uint64_t *)(a1 + 48));
    *(unsigned char *)v19 |= 1u;
    std::string v20 = sub_22262FE54(*(void *)(a1 + 32) + 408, (uint64_t *)(a1 + 48));
    *((unsigned char *)v20 + 4) = v46[0];
    uint64_t v21 = *(void *)(a1 + 40);
    sub_22262FE54(*(void *)(a1 + 32) + 408, (uint64_t *)(a1 + 48))[1] = v21;
  }
  uint64_t v22 = (int *)(a1 + 208);
  if (!sub_22262D54C((_DWORD *)(a1 + 208), 21))
  {
    uint64_t v34 = *(void *)(a1 + 24);
    unsigned int v35 = sub_22260C5BC(a1 + 208);
    sub_2225F52C4(v34, v35, 667, (uint64_t)v45);
    uint64_t v36 = v45;
    goto LABEL_56;
  }
  unsigned int v23 = sub_22262CF40(a1);
  while (1)
  {
    while (1)
    {
      int v24 = *v22;
      if (*v22 > 8) {
        break;
      }
      if (v24 != 7)
      {
        if (v24 == 3) {
          goto LABEL_53;
        }
        goto LABEL_47;
      }
      if (*(void *)(a1 + 232)) {
        goto LABEL_47;
      }
      sub_22262CF40(a1);
      if (sub_22262D54C((_DWORD *)(a1 + 208), 5))
      {
        uint64_t v25 = sub_22262FE54(*(void *)(a1 + 32) + 408, (uint64_t *)(a1 + 48)) + 2;
        v42[0] = sub_22262D710(a1 + 208);
        v42[1] = v26;
        sub_2225CA51C(v42, (uint64_t)&v43);
        sub_22261969C(v25, (uint64_t)&v43);
        std::string::~string(&v43);
        goto LABEL_49;
      }
      uint64_t v32 = *(void *)(a1 + 24);
      unsigned int v33 = sub_22260C5BC(a1 + 208);
      sub_2225F52C4(v32, v33, 680, (uint64_t)v44);
      sub_2225F37F0(v44);
    }
    if (v24 != 9) {
      break;
    }
    if (!*(void *)(a1 + 232)) {
      goto LABEL_47;
    }
    sub_22262CF40(a1);
    if (sub_22262D54C((_DWORD *)(a1 + 208), 19))
    {
      *(_WORD *)(*(void *)(a1 + 232) + 528) |= 0x400u;
      goto LABEL_49;
    }
    uint64_t v30 = *(void *)(a1 + 24);
    unsigned int v31 = sub_22260C5BC(a1 + 208);
    sub_2225F52C4(v30, v31, 662, (uint64_t)v41);
    uint64_t v29 = (std::string *)v41;
LABEL_48:
    sub_2225F37F0(v29);
LABEL_49:
    sub_22262CF40(a1);
  }
  if (v24 != 22)
  {
LABEL_47:
    uint64_t v27 = *(void *)(a1 + 24);
    unsigned int v28 = sub_22260C5BC(a1 + 208);
    sub_2225F52C4(v27, v28, 665, (uint64_t)&v43);
    sub_22262FD18((uint64_t *)&v43, *(void *)(a1 + 232) != 0);
    uint64_t v29 = &v43;
    goto LABEL_48;
  }
LABEL_53:
  if (sub_22262D54C((_DWORD *)(a1 + 208), 22)) {
    return sub_22262CF40(a1);
  }
  uint64_t v37 = *(void *)(a1 + 24);
  unsigned int v38 = sub_22260C5BC(a1 + 208);
  sub_2225F52C4(v37, v38, 673, (uint64_t)v40);
  sub_2225F37F0(v40);
  sub_2225F52C4(*(void *)(a1 + 24), v23, 824, (uint64_t)v39);
  uint64_t v36 = v39;
LABEL_56:
  uint64_t result = sub_2225F37F0(v36);
LABEL_57:
  *(unsigned char *)(a1 + 65) = 1;
  return result;
}

uint64_t sub_22262E6C0(uint64_t a1)
{
  return sub_2225C3D04(a1) - 32;
}

uint64_t sub_22262E6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  size_t v4 = sub_222630460(a1 + 456, &v6);
  return sub_222608E54((uint64_t)v4, a3);
}

uint64_t sub_22262E71C(uint64_t a1, unsigned char *a2)
{
  size_t v4 = (_DWORD *)(a1 + 208);
  char v5 = 0;
  while (sub_22262D54C(v4, 23))
  {
    unsigned int v6 = sub_22262CF40(a1);
    if (!sub_22262D54C(v4, 5))
    {
      uint64_t v7 = *(void *)(a1 + 24);
      unsigned int v8 = sub_22260C5BC((uint64_t)v4);
      sub_2225F52C4(v7, v8, 658, (uint64_t)v26);
      sub_2225F37F0(v26);
      sub_22262D414(a1, 24);
      if (sub_22262D54C(v4, 24)) {
        sub_22262CF40(a1);
      }
      char v5 = 1;
    }
    uint64_t v9 = sub_22262D710((uint64_t)v4);
    sub_2225D934C(v25, v9, v10);
    int v24 = 3;
    sub_22262FE70((uint64_t)v25, (uint64_t)&v24);
    int v23 = 2;
    sub_22262FEE4((uint64_t)v25, (uint64_t)&v23);
    int v22 = 1;
    sub_22262FF4C((uint64_t)v25, (uint64_t)&v22);
    unsigned int v21 = 0;
    switch(sub_2225D9664((uint64_t)v25, &v21))
    {
      case 0u:
        uint64_t v11 = *(void *)(a1 + 24);
        unsigned int v12 = sub_22260C5BC((uint64_t)v4);
        sub_2225F52C4(v11, v12, 879, (uint64_t)v25);
        uint64_t v13 = sub_22262D710((uint64_t)v4);
        sub_2225F3774(v25, v13, v14);
        sub_2225F37F0(v25);
        break;
      case 1u:
        char v15 = *a2 | 1;
        goto LABEL_11;
      case 2u:
        char v15 = *a2 | 2;
        goto LABEL_11;
      case 3u:
        char v15 = *a2 | 4;
LABEL_11:
        *a2 = v15;
        break;
      default:
        break;
    }
    sub_22262CF40(a1);
    if (!sub_22262D54C(v4, 24))
    {
      uint64_t v16 = *(void *)(a1 + 24);
      unsigned int v17 = sub_22260C5BC((uint64_t)v4);
      sub_2225F52C4(v16, v17, 674, (uint64_t)v20);
      sub_2225F37F0(v20);
      sub_2225F52C4(*(void *)(a1 + 24), v6, 825, (uint64_t)v19);
      sub_2225F37F0(v19);
      sub_22262D414(a1, 24);
      char v5 = 1;
    }
    if (sub_22262D54C(v4, 24)) {
      sub_22262CF40(a1);
    }
  }
  return v5 & 1;
}

uint64_t sub_22262E99C(uint64_t a1)
{
  unsigned int v2 = sub_22262CF40(a1);
  if (*(void *)(*(void *)(a1 + 232) + 32))
  {
    sub_2225F52C4(*(void *)(a1 + 24), v2, 657, (uint64_t)v19);
    sub_2225F37F0(v19);
  }
  sub_22262BE80(v18);
  sub_22262E71C(a1, v18);
  if ((v18[0] & 4) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 232);
    if (!*(void *)(v3 + 32)) {
      *(_WORD *)(v3 + 528) |= 0x800u;
    }
  }
  uint64_t v4 = a1 + 208;
  uint64_t result = sub_22262D54C((_DWORD *)(a1 + 208), 5);
  if (result)
  {
    uint64_t v6 = *(void *)(a1 + 232);
    if (!*(void *)(v6 + 32))
    {
      uint64_t v7 = (uint64_t *)(v6 + 1184);
      uint64_t v15 = sub_22262D710(a1 + 208);
      uint64_t v16 = v8;
      sub_2225CACE8(&v15, (uint64_t)&v17);
      sub_2225D2450(v7, (uint64_t)&v17);
      std::string::~string(&v17);
    }
    sub_22262CF40(a1);
    uint64_t result = sub_22262D54C((_DWORD *)(a1 + 208), 0);
    if (result)
    {
      while (1)
      {
        sub_22262CF40(a1);
        if (!sub_22262D54C((_DWORD *)(a1 + 208), 5)) {
          break;
        }
        uint64_t v9 = *(void *)(a1 + 232);
        if (!*(void *)(v9 + 32))
        {
          uint64_t v10 = (uint64_t *)(v9 + 1184);
          uint64_t v15 = sub_22262D710(a1 + 208);
          uint64_t v16 = v11;
          sub_2225CACE8(&v15, (uint64_t)&v17);
          sub_2225D2450(v10, (uint64_t)&v17);
          std::string::~string(&v17);
        }
        sub_22262CF40(a1);
        uint64_t result = sub_22262D54C((_DWORD *)(a1 + 208), 0);
        if ((result & 1) == 0) {
          return result;
        }
      }
      uint64_t v12 = *(void *)(a1 + 24);
      unsigned int v13 = sub_22260C5BC(v4);
      sub_2225F52C4(v12, v13, 659, (uint64_t)v14);
      return sub_2225F37F0(v14);
    }
  }
  return result;
}

uint64_t sub_22262EB30(uint64_t a1)
{
  void v15[3] = *MEMORY[0x263EF8340];
  int v2 = sub_22262CF40(a1);
  sub_22262FD54((uint64_t)v14);
  if ((sub_22262D55C(a1, v14) & 1) == 0)
  {
    uint64_t v3 = a1 + 208;
    if (sub_22262D54C((_DWORD *)(a1 + 208), 0))
    {
      sub_22262CF40(a1);
      if (sub_22262D54C((_DWORD *)(a1 + 208), 20))
      {
        v13[0] = sub_22262D710(a1 + 208);
        v13[1] = v4;
        sub_2225CACE8(v13, (uint64_t)&v11);
        sub_2225CCDE4((uint64_t)v15, (uint64_t)&v11);
        std::string::~string(&v11);
        sub_22262CF40(a1);
        sub_22262FDF8((uint64_t *)(*(void *)(a1 + 232) + 1208), (uint64_t)v14);
        return sub_222609358(v14);
      }
      uint64_t v8 = *(void *)(a1 + 24);
      unsigned int v9 = sub_22260C5BC(v3);
      sub_2225F52C4(v8, v9, 661, (uint64_t)v13);
      sub_22262FD58((uint64_t)v14, (uint64_t)&v11);
      sub_2225CCBF8(v12, &v11);
      sub_2225F3774(v13, v12[0], v12[1]);
      std::string::~string(&v11);
      uint64_t v7 = (std::string *)v13;
    }
    else
    {
      uint64_t v5 = *(void *)(a1 + 24);
      unsigned int v6 = sub_22260C5BC(v3);
      sub_2225F52C4(v5, v6, 660, (uint64_t)&v11);
      sub_22262FD48(v13, v2);
      sub_222625214(&v11, v13);
      uint64_t v7 = &v11;
    }
    sub_2225F37F0(v7);
  }
  return sub_222609358(v14);
}

uint64_t sub_22262ECC0(uint64_t a1)
{
  void v14[11] = *MEMORY[0x263EF8340];
  int v2 = sub_22262CF40(a1);
  sub_222607D34(v14);
  if (sub_22262D54C((_DWORD *)(a1 + 208), 5))
  {
    while (1)
    {
      v10[0] = sub_22262D710(a1 + 208);
      v10[1] = v3;
      int v9 = sub_22260C5BC(a1 + 208);
      sub_2226094FC((uint64_t)v10, (uint64_t)&v9, (uint64_t)v11);
      sub_22262D740((uint64_t)&v12, (uint64_t)v11);
      sub_22262D6A0(v14, (uint64_t)&v12);
      j_std::string::~string(&v12);
      sub_22262CF40(a1);
      if (!sub_22262D54C((_DWORD *)(a1 + 208), 14)) {
        break;
      }
      sub_22262CF40(a1);
      if (!sub_22262D54C((_DWORD *)(a1 + 208), 5)) {
        goto LABEL_4;
      }
    }
    char v4 = 0;
    goto LABEL_8;
  }
LABEL_4:
  if (sub_22262D54C((_DWORD *)(a1 + 208), 19))
  {
    sub_22262CF40(a1);
    char v4 = 1;
LABEL_8:
    LODWORD(v12.__r_.__value_.__l.__data_) = v2;
    sub_22262FC34(&v12.__r_.__value_.__r.__words[1], v14);
    char v13 = v4;
    sub_22262FC38((void *)(*(void *)(a1 + 232) + 624), (uint64_t)&v12);
    sub_222608A44(&v12);
    return sub_222607F0C(v14);
  }
  uint64_t v5 = *(void *)(a1 + 24);
  unsigned int v6 = sub_22260C5BC(a1 + 208);
  sub_2225F52C4(v5, v6, 683, (uint64_t)v8);
  sub_2225F37F0(v8);
  *(unsigned char *)(a1 + 65) = 1;
  return sub_222607F0C(v14);
}

uint64_t sub_22262EE48(uint64_t a1)
{
  v3[11] = *MEMORY[0x263EF8340];
  sub_22262CF40(a1);
  sub_222607D34(v3);
  sub_22262D55C(a1, v3);
  sub_22262FCA8((void *)(*(void *)(a1 + 232) + 896), (uint64_t)v3);
  return sub_222607F0C(v3);
}

void sub_22262EECC(uint64_t a1)
{
  sub_22262CF40(a1);
  while (1)
  {
    BOOL v2 = sub_22262D54C((_DWORD *)(a1 + 208), 6);
    BOOL v3 = v2;
    if (v2) {
      sub_22262CF40(a1);
    }
    if (!sub_22262D54C((_DWORD *)(a1 + 208), 5))
    {
      uint64_t v6 = *(void *)(a1 + 24);
      unsigned int v7 = sub_22260C5BC(a1 + 208);
      sub_2225F52C4(v6, v7, 663, (uint64_t)v11);
      sub_2225F37F0(v11);
      *(unsigned char *)(a1 + 65) = 1;
      return;
    }
    v9[0] = sub_22262D710(a1 + 208);
    v9[1] = v4;
    sub_2225CA51C(v9, (uint64_t)&v10);
    sub_22262CF40(a1);
    uint64_t v5 = *(void *)(a1 + 232);
    sub_2225CCBF8(v8, &v10);
    sub_222608418(v5, v8[0], v8[1], !v3, *(void *)(*(void *)(a1 + 32) + 16), *(void *)(*(void *)(a1 + 32) + 24));
    if (!sub_22262D54C((_DWORD *)(a1 + 208), 0)) {
      break;
    }
    sub_22262CF40(a1);
    std::string::~string(&v10);
  }
  std::string::~string(&v10);
}

uint64_t sub_22262EFDC(uint64_t a1, int a2, unsigned int a3)
{
  sub_22262CF40(a1);
  if (!sub_22262D54C((_DWORD *)(a1 + 208), 20))
  {
    uint64_t v8 = *(void *)(a1 + 24);
    unsigned int v9 = sub_22260C5BC(a1 + 208);
    sub_2225F52C4(v8, v9, 664, (uint64_t)&v45);
    sub_22260A5E8((uint64_t *)&v45, (uint64_t)"header");
    uint64_t result = sub_2225F37F0(&v45);
    *(unsigned char *)(a1 + 65) = 1;
    return result;
  }
  sub_22262FA40(&v47);
  v38.__r_.__value_.__r.__words[0] = sub_22262D710(a1 + 208);
  v38.__r_.__value_.__l.__size_ = v6;
  sub_2225CA51C(&v38, (uint64_t)&v45);
  sub_2225CCDE4((uint64_t)v48, (uint64_t)&v45);
  std::string::~string(&v45);
  unsigned int v47 = sub_22262CF40(a1);
  if (a2 != 16 || !sub_22262FA44((void *)(*(void *)(a1 + 232) + 40), v7))
  {
    sub_2225CF794(&v45);
    sub_2225CBDEC((uint64_t)&v38, (uint64_t)v48);
    if (sub_2225CF850(&v38.__r_.__value_.__l.__data_))
    {
      sub_2225CCBF8(v44, v48);
      sub_222616CD8((const void **)&v45.__r_.__value_.__l.__data_, v44[0], v44[1]);
    }
    else
    {
      uint64_t v16 = (char *)sub_2225C3C70(*(void *)(a1 + 48));
      sub_2225C3D00((int)v43, v16);
      sub_222616CD8((const void **)&v45.__r_.__value_.__l.__data_, v43[0], v43[1]);
      unsigned int v17 = sub_2225C5664((uint64_t)&v45);
      if (!sub_22262FA60(*(void *)(a1 + 232)))
      {
        sub_2225CBDEC((uint64_t)&v38, (uint64_t)v48);
        sub_2225CBDE8((uint64_t)v42, &byte_2226D1615);
        sub_2225CBDE8((uint64_t)v41, &byte_2226D1615);
        sub_2225CBDE8((uint64_t)v40, &byte_2226D1615);
        sub_2225CEF30((const void **)&v45.__r_.__value_.__l.__data_, &v38.__r_.__value_.__l.__data_, v42, v41, v40);
        int v24 = (_DWORD *)sub_2225C5B40(*(void *)(a1 + 8));
        uint64_t v25 = (const void *)sub_2225CE27C((uint64_t)&v45);
        uint64_t v14 = sub_2225F89F4(v24, v25, v26, 0, 1);
        uint64_t v15 = 0;
        if (a2 != 16 && (*(_WORD *)(*(void *)(a1 + 232) + 528) & 0x20) != 0)
        {
          uint64_t v27 = *(void *)(a1 + 56);
          if (!v27) {
            goto LABEL_9;
          }
          if (v27 == *(void *)(a1 + 48)) {
            goto LABEL_9;
          }
          sub_2225CCBF8(v39, v48);
          if (!sub_2226284C0(v39[0], v39[1])) {
            goto LABEL_9;
          }
          unsigned int v28 = (char *)sub_2225C3C70(*(void *)(a1 + 56));
          sub_2225C3D00((int)v37, v28);
          sub_2225D02D0(&v38, v37[0], v37[1]);
          sub_2225CBDEC((uint64_t)v42, (uint64_t)v48);
          sub_2225CBDE8((uint64_t)v41, &byte_2226D1615);
          sub_2225CBDE8((uint64_t)v40, &byte_2226D1615);
          sub_2225CBDE8((uint64_t)v36, &byte_2226D1615);
          sub_2225CEF30((const void **)&v38.__r_.__value_.__l.__data_, v42, v41, v40, v36);
          uint64_t v29 = (_DWORD *)sub_2225C5B40(*(void *)(a1 + 8));
          uint64_t v30 = (const void *)sub_2225CE27C((uint64_t)&v38);
          uint64_t v32 = sub_2225F89F4(v29, v30, v31, 0, 1);
          BOOL v33 = v14 == 0;
          BOOL v34 = v32 != 0;
          if (v33 && v34) {
            uint64_t v15 = 0;
          }
          else {
            uint64_t v15 = v32;
          }
          if (v33 && v34) {
            uint64_t v14 = v32;
          }
          sub_2225CA520(&v38);
        }
LABEL_10:
        if (!v14)
        {
          if (a2 != 7)
          {
            v48[24] = a2 == 16;
            sub_22260851C(*(void *)(a1 + 232), 0);
            sub_22262FBC4((void *)(*(void *)(a1 + 232) + 368), (uint64_t)&v47);
          }
LABEL_36:
          sub_2225CA520(&v45);
          return sub_2225F7D50(&v47);
        }
LABEL_16:
        if (a2 == 16)
        {
          v41[0] = 0;
          v41[0] = (char *)sub_222608330(v14);
          uint64_t v22 = *sub_22260B594(*(void *)(a1 + 32) + 384, (uint64_t *)v41);
          if (v22)
          {
            sub_2225F52C4(*(void *)(a1 + 24), a3, 687, (uint64_t)v42);
            sub_22260816C(v22, &v38);
            sub_2225CCBF8(v35, &v38);
            sub_2225F3774((uint64_t *)v42, v35[0], v35[1]);
            std::string::~string(&v38);
            sub_2225F37F0(v42);
            *(unsigned char *)(a1 + 65) = 1;
          }
          else
          {
            sub_22262CBCC(*(void *)(a1 + 32), *(void *)(a1 + 232), v14);
          }
        }
        else
        {
          if (a2 == 7) {
            uint64_t v23 = 2;
          }
          else {
            uint64_t v23 = a2 == 15;
          }
          sub_22262CCE0(*(void *)(a1 + 32), *(void *)(a1 + 232), v14, v23);
          if (v15) {
            sub_22262CCE0(*(void *)(a1 + 32), *(void *)(a1 + 232), v15, v23);
          }
        }
        goto LABEL_36;
      }
      sub_22262FA88(*(void *)(a1 + 232), (const void **)&v45.__r_.__value_.__l.__data_);
      sub_2225CBDE8((uint64_t)&v38, "Headers");
      sub_2225CBDEC((uint64_t)v42, (uint64_t)v48);
      sub_2225CBDE8((uint64_t)v41, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v40, &byte_2226D1615);
      sub_2225CEF30((const void **)&v45.__r_.__value_.__l.__data_, &v38.__r_.__value_.__l.__data_, v42, v41, v40);
      int v18 = (_DWORD *)sub_2225C5B40(*(void *)(a1 + 8));
      size_t v19 = (const void *)sub_2225CE27C((uint64_t)&v45);
      uint64_t v21 = sub_2225F89F4(v18, v19, v20, 0, 1);
      if (v21)
      {
        uint64_t v14 = v21;
        uint64_t v15 = 0;
        goto LABEL_16;
      }
      sub_2225CF670((const void **)&v45.__r_.__value_.__l.__data_, v17);
      sub_2225CBDE8((uint64_t)&v38, "PrivateHeaders");
      sub_2225CBDEC((uint64_t)v42, (uint64_t)v48);
      sub_2225CBDE8((uint64_t)v41, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v40, &byte_2226D1615);
      sub_2225CEF30((const void **)&v45.__r_.__value_.__l.__data_, &v38.__r_.__value_.__l.__data_, v42, v41, v40);
    }
    std::string v11 = (_DWORD *)sub_2225C5B40(*(void *)(a1 + 8));
    std::string v12 = (const void *)sub_2225CE27C((uint64_t)&v45);
    uint64_t v14 = sub_2225F89F4(v11, v12, v13, 0, 1);
LABEL_9:
    uint64_t v15 = 0;
    goto LABEL_10;
  }
  sub_2225F52C4(*(void *)(a1 + 24), v47, 687, (uint64_t)&v38);
  sub_22260816C(*(void *)(a1 + 232), &v45);
  sub_2225CCBF8(v46, &v45);
  sub_2225F3774((uint64_t *)&v38, v46[0], v46[1]);
  std::string::~string(&v45);
  sub_2225F37F0(&v38);
  *(unsigned char *)(a1 + 65) = 1;
  return sub_2225F7D50(&v47);
}

void sub_22262F59C(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a1 + 208;
  if (!sub_22262D54C((_DWORD *)(a1 + 208), 20))
  {
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned int v11 = sub_22260C5BC(v4);
    sub_2225F52C4(v10, v11, 664, (uint64_t)&v27);
    sub_22260A5E8((uint64_t *)&v27, (uint64_t)"umbrella");
    sub_2225F37F0(&v27);
    *(unsigned char *)(a1 + 65) = 1;
    return;
  }
  v27.__r_.__value_.__r.__words[0] = sub_22262D710(v4);
  v27.__r_.__value_.__l.__size_ = v5;
  sub_2225CA51C(&v27, (uint64_t)&v30);
  unsigned int v6 = sub_22262CF40(a1);
  if (!sub_22262FA44((void *)(*(void *)(a1 + 232) + 40), v7))
  {
    sub_2225CBDEC((uint64_t)&v27, (uint64_t)&v30);
    if (sub_2225CF850(&v27.__r_.__value_.__l.__data_))
    {
      uint64_t v12 = sub_2225C5B40(*(void *)(a1 + 8));
      sub_2225CCBF8(v28, &v30);
      v24[0] = (char *)sub_2225F8658(v12, v28[0], v28[1], 1);
      if (v24[0])
      {
LABEL_7:
        uint64_t v13 = *sub_22260B594(*(void *)(a1 + 32) + 384, (uint64_t *)v24);
        if (!v13)
        {
          sub_22262CC5C(*(void *)(a1 + 32), *(void *)(a1 + 232), (uint64_t)v24[0]);
          goto LABEL_13;
        }
        sub_2225F52C4(*(void *)(a1 + 24), a2, 687, (uint64_t)v25);
        sub_22260816C(v13, &v27);
        sub_2225CCBF8(v20, &v27);
        uint64_t v8 = v20[0];
        uint64_t v9 = v20[1];
        goto LABEL_9;
      }
    }
    else
    {
      sub_2225CF794(&v27);
      uint64_t v15 = (char *)sub_2225C3C70(*(void *)(a1 + 48));
      sub_2225C3D00((int)v26, v15);
      sub_222616CD8((const void **)&v27.__r_.__value_.__l.__data_, v26[0], v26[1]);
      sub_2225CBDEC((uint64_t)v25, (uint64_t)&v30);
      sub_2225CBDE8((uint64_t)v24, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v23, &byte_2226D1615);
      sub_2225CBDE8((uint64_t)v22, &byte_2226D1615);
      sub_2225CEF30((const void **)&v27.__r_.__value_.__l.__data_, v25, v24, v23, v22);
      uint64_t v16 = sub_2225C5B40(*(void *)(a1 + 8));
      uint64_t v17 = sub_2225CE27C((uint64_t)&v27);
      size_t v19 = (char *)sub_2225F8658(v16, v17, v18, 1);
      v24[0] = v19;
      sub_2225CA520(&v27);
      if (v19) {
        goto LABEL_7;
      }
    }
    sub_2225F52C4(*(void *)(a1 + 24), v6, 688, (uint64_t)&v27);
    sub_2225CCBF8(v21, &v30);
    sub_2225F3774((uint64_t *)&v27, v21[0], v21[1]);
    uint64_t v14 = &v27;
    goto LABEL_12;
  }
  sub_2225F52C4(*(void *)(a1 + 24), v6, 687, (uint64_t)v25);
  sub_22260816C(*(void *)(a1 + 232), &v27);
  sub_2225CCBF8(v29, &v27);
  uint64_t v8 = v29[0];
  uint64_t v9 = v29[1];
LABEL_9:
  sub_2225F3774((uint64_t *)v25, v8, v9);
  std::string::~string(&v27);
  uint64_t v14 = (std::string *)v25;
LABEL_12:
  sub_2225F37F0(v14);
  *(unsigned char *)(a1 + 65) = 1;
LABEL_13:
  std::string::~string(&v30);
}

void sub_22262F858(uint64_t a1)
{
  int v2 = sub_22262CF40(a1);
  BOOL v3 = sub_22262D54C((_DWORD *)(a1 + 208), 11);
  if (v3) {
    sub_22262CF40(a1);
  }
  if (sub_22262D54C((_DWORD *)(a1 + 208), 20))
  {
    v9.__r_.__value_.__r.__words[0] = sub_22262D710(a1 + 208);
    v9.__r_.__value_.__l.__size_ = v4;
    sub_2225CA51C(&v9, (uint64_t)&v10);
    sub_22262CF40(a1);
    std::string::size_type v5 = (void *)(*(void *)(a1 + 232) + 1096);
    sub_22262FD50(&v9, &v10, v3);
    sub_2226084A8(v5, (uint64_t)&v9);
    j_std::string::~string(&v9);
    std::string::~string(&v10);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned int v7 = sub_22260C5BC(a1 + 208);
    sub_2225F52C4(v6, v7, 668, (uint64_t)&v9);
    uint64_t v8 = sub_22262FD18((uint64_t *)&v9, v3);
    sub_22262FD48(&v10, v2);
    sub_222625214(v8, (uint64_t *)&v10);
    sub_2225F37F0(&v9);
    *(unsigned char *)(a1 + 65) = 1;
  }
}

uint64_t sub_22262F978(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2225D611C(a2, a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > 0xCCCCCCCCCCCCCCCDLL * ((v7 - sub_2225C3D04((uint64_t)a1)) >> 3))
  {
    unint64_t v8 = sub_2225D5A64((uint64_t)a1);
    sub_222632038(a1, v8 + v6);
  }
  uint64_t v9 = sub_2225C3D04((uint64_t)a1);
  sub_222632130(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + 40 * v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

BOOL sub_22262FA44(void *a1, uint64_t a2)
{
  return !sub_222630B24(a1, a2);
}

uint64_t sub_22262FA60(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  do
  {
    unsigned int v1 = *(unsigned __int16 *)(a1 + 528);
    uint64_t v2 = (v1 >> 3) & 1;
    if ((v1 & 8) != 0) {
      break;
    }
    a1 = *(void *)(a1 + 32);
  }
  while (a1);
  return v2;
}

uint64_t sub_22262FA88(uint64_t a1, const void **a2)
{
  v12[7] = *MEMORY[0x263EF8340];
  sub_22260826C(v12);
  for (; a1; a1 = *(void *)(a1 + 32))
  {
    if ((*(_WORD *)(a1 + 528) & 8) != 0)
    {
      sub_2225CCBF8(&v11, a1);
      sub_2225CC69C((uint64_t)v12, &v11);
    }
  }
  if (!sub_2225CF1D0(v12))
  {
    int v4 = sub_2225D1E3C((uint64_t)v12);
    if (v4 != 1)
    {
      unsigned int v5 = v4 - 2;
      do
      {
        sub_2225CBDE8((uint64_t)&v11, "Frameworks");
        uint64_t v6 = sub_2225D1DB0((uint64_t)v12, v5);
        sub_2225DAD6C(v6, (uint64_t)".framework", (uint64_t)v10);
        sub_2225CBDE8((uint64_t)v9, &byte_2226D1615);
        sub_2225CBDE8((uint64_t)v8, &byte_2226D1615);
        sub_2225CEF30(a2, (char **)&v11, v10, v9, v8);
        --v5;
      }
      while (v5 != -1);
    }
  }
  return sub_2225C56C4(v12);
}

uint64_t sub_22262FBC4(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_222632038(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_222632264(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 40;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_22262FC38(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_2226326A8(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_2226327A0(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 104;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_22262FCA8(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_222632B94(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_22262FC34(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 88;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t *sub_22262FD18(uint64_t *a1, unsigned int a2)
{
  return a1;
}

_DWORD *sub_22262FD48(_DWORD *a1, int a2)
{
  return sub_222630A38(a1, a2);
}

uint64_t sub_22262FD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2225CAD04(a2);
  sub_222609ACC(v8, a2);
  int v4 = sub_222607F28(a1);
  if (v4)
  {
    unsigned int v5 = 0;
    do
    {
      if (v5) {
        sub_2225CA524((uint64_t)v8, ".");
      }
      uint64_t v6 = sub_222608E28(a1, v5);
      sub_2225D47E4(v8, v6);
      ++v5;
    }
    while (v4 != v5);
  }
  return sub_2225E8B2C(v8);
}

uint64_t sub_22262FDF8(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_222632DA4(a1, a2);
  }
  else
  {
    sub_222632D30((uint64_t)a1, a2);
    uint64_t result = v4 + 112;
  }
  a1[1] = result;
  return result;
}

uint64_t *sub_22262FE54(uint64_t a1, uint64_t *a2)
{
  return sub_222633418(a1, a2) + 1;
}

uint64_t sub_22262FE70(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 10)
  {
    uint64_t v4 = sub_2225C3C70(a1);
    if (*(void *)v4 == 0x6974737561687865 && *(_WORD *)(v4 + 8) == 25974) {
      *(void *)(a1 + 16) = a2;
    }
  }
  return a1;
}

uint64_t sub_22262FEE4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 8 && *(void *)sub_2225C3C70(a1) == 0x635F6E7265747865) {
    *(void *)(a1 + 16) = a2;
  }
  return a1;
}

uint64_t sub_22262FF4C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 6)
  {
    uint64_t v4 = sub_2225C3C70(a1);
    if (*(_DWORD *)v4 == 1953724787 && *(_WORD *)(v4 + 4) == 28005) {
      *(void *)(a1 + 16) = a2;
    }
  }
  return a1;
}

uint64_t sub_22262FFB8(uint64_t a1)
{
  uint64_t v2 = (_DWORD *)(a1 + 208);
  while (1)
  {
    while (1)
    {
      while (*v2 > 0x18u)
        ;
      int v3 = 1 << *v2;
      if ((v3 & 0x1FFD2F7) == 0) {
        break;
      }
      uint64_t v4 = *(void *)(a1 + 24);
      unsigned int v5 = sub_22260C5BC((uint64_t)v2);
      sub_2225F52C4(v4, v5, 671, (uint64_t)v7);
      sub_2225F37F0(v7);
      *(unsigned char *)(a1 + 65) = 1;
      sub_22262CF40(a1);
    }
    if ((v3 & 0x2D00) == 0) {
      break;
    }
    sub_22262D744(a1);
  }
  return *(unsigned __int8 *)(a1 + 65);
}

uint64_t sub_22263006C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11 = sub_22260B458(a1, a2, a4 != 0);

  return sub_22260BB48(a1, v11, a3, a4, a5, a6);
}

uint64_t sub_2226300E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return sub_222630A98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_2226300FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = j_j_nullsub_1(a1);
  uint64_t v7 = j_j_nullsub_1(a2);
  uint64_t v8 = sub_222630164(v6, v7, a3, (uint64_t)&v10);
  return sub_2225C5F20(a1, v8);
}

uint64_t sub_222630164(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    while (*(void *)sub_2225DC2F8(a4, v4) != *a3)
    {
      v4 += 8;
      if (v4 == a2) {
        return a2;
      }
    }
  }
  return v4;
}

BOOL sub_2226301D0(uint64_t a1, uint64_t a2)
{
  v9[0] = a1;
  v9[1] = a2;
  if (sub_2225CF1E0((uint64_t)v9)) {
    return 0;
  }
  unsigned __int8 v3 = sub_2225CC124(v9, 0);
  BOOL result = sub_22261E3A4(v3);
  if (result)
  {
    uint64_t v4 = sub_2225C3C70((uint64_t)v9);
    uint64_t v5 = sub_2225C3C78(v9);
    if (v4 == v5)
    {
      return 1;
    }
    else
    {
      uint64_t v6 = v5;
      uint64_t v7 = v4 + 1;
      do
        BOOL result = sub_222630268(*(unsigned __int8 *)(v7 - 1));
      while (result && v7++ != v6);
    }
  }
  return result;
}

BOOL sub_222630268(int a1)
{
  return (word_2226CBA58[a1] & 0xE8) != 0;
}

uint64_t sub_222630284(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 30)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && a2[2] == v6[2] && *(void *)((char *)a2 + 22) == *(void *)((char *)v6 + 22)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

unsigned char *sub_222630308(unsigned char *result)
{
  *result &= 0xF8u;
  return result;
}

unsigned char *sub_222630318(unsigned char *a1)
{
  *a1 &= ~1u;
  sub_22262BE80(a1 + 4);
  sub_222630358(a1 + 16);
  return a1;
}

uint64_t sub_22263035C(uint64_t a1)
{
  return sub_2226109F8(a1, 2u);
}

uint64_t sub_222630364(uint64_t a1)
{
  return a1;
}

uint64_t sub_222630390(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226303BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(void *)(a1 + 16) = a6;
  *(void *)(a1 + 24) = a7;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 38) = 0;
  uint64_t v10 = sub_22262484C(a1 + 48);
  *(void *)(a1 + 584) = sub_2225CC180(v10);
  sub_2225CF1C4(a1 + 592);
  *(_WORD *)(a1 + 656) = 0;
  sub_222624850(a1, a2, a3);
  return a1;
}

uint64_t sub_22263042C(uint64_t a1)
{
  return a1;
}

uint64_t *sub_222630460(uint64_t a1, uint64_t *a2)
{
  return sub_22263047C(a1, a2) + 1;
}

uint64_t *sub_22263047C(uint64_t a1, uint64_t *a2)
{
  uint64_t v7 = 0;
  if (sub_2226304EC(a1, a2, &v7)) {
    return v7;
  }
  sub_222630574((uint64_t)v6);
  uint64_t v4 = sub_222630528(a1, a2, (uint64_t)v6, v7);
  sub_222630578(v6);
  return v4;
}

uint64_t sub_2226304EC(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_22263057C(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t *sub_222630528(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_2226306A8(a1, a2, a4);
  *uint64_t v6 = *a2;
  sub_222630794((uint64_t)(v6 + 1), a3);
  return v6;
}

uint64_t sub_22263057C(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    uint64_t v9 = sub_2225F9A1C();
    uint64_t v10 = sub_2225F9EB8();
    int v11 = v8 - 1;
    unsigned int v12 = sub_2225FB0F4(a2) & (v8 - 1);
    uint64_t v13 = (uint64_t *)(v6 + 48 * v12);
    if (sub_2225D085C(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v16 = a3;
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_2225D085C(*v13, v9))
      {
        if (sub_2225D085C(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        uint64_t v13 = (uint64_t *)(v6 + 48 * v12);
        ++v15;
        if (sub_2225D085C(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        uint64_t v13 = v14;
      }
LABEL_13:
      a3 = v16;
    }
  }
  else
  {
    uint64_t v13 = 0;
  }
  *a3 = v13;
  return result;
}

uint64_t *sub_2226306A8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222630798(a1, (2 * v6));
    sub_2226304EC(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_222630798(a1, v7);
    sub_2226304EC(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_2225F9A1C();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_22263079C(uint64_t a1, int a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  uint64_t v4 = *(uint64_t **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_22263082C(a1, *v5);
  if (v4)
  {
    sub_2226308E4(a1, v4, &v4[6 * v3]);
    j__free(v4);
  }
  else
  {
    sub_22263087C(a1);
  }
}

BOOL sub_22263082C(uint64_t a1, unsigned int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  if (a2) {
    uint64_t v4 = sub_2225C26A4(48 * a2);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4;
  return a2 != 0;
}

uint64_t sub_22263087C(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  uint64_t v2 = sub_2225F9A1C();
  unsigned int v3 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_2226309B0(a1);
  while (v3 != (void *)result)
  {
    *unsigned int v3 = v2;
    v3 += 6;
  }
  return result;
}

uint64_t sub_2226308E4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_22263087C(a1);
  uint64_t v6 = sub_2225F9A1C();
  uint64_t result = sub_2225F9EB8();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_2226304EC(a1, a2, &v9);
          *uint64_t v9 = *a2;
          sub_222630794((uint64_t)(v9 + 1), (uint64_t)(a2 + 1));
          sub_2225F5674(a1);
          uint64_t result = sub_222630578(a2 + 1);
        }
      }
      a2 += 6;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_2226309B0(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 48 * sub_2225F5148(a1);
}

uint64_t sub_2226309E8(uint64_t a1, uint64_t a2)
{
  return sub_2226309F8(a1, a1 + 32, 1, a2);
}

uint64_t sub_2226309FC(uint64_t a1)
{
  return sub_222608EE4(a1, a1 + 32, 1);
}

_DWORD *sub_222630A08(_DWORD *a1)
{
  uint64_t v2 = sub_2225F3278(a1);
  sub_2225CAD04(v2 + 2);
  return a1;
}

_DWORD *sub_222630A38(_DWORD *result, int a2)
{
  uint64_t *result = a2;
  result[1] = a2;
  return result;
}

std::string *sub_222630A40(std::string *a1, const std::string *a2, std::string::value_type a3)
{
  uint64_t result = std::string::basic_string(a1, a2);
  result[1].__r_.__value_.__s.__data_[0] = a3;
  return result;
}

uint64_t sub_222630A68(uint64_t a1)
{
  uint64_t v2 = sub_222607D34();
  sub_2225CAD04(v2 + 88);
  return a1;
}

uint64_t sub_222630A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  *(void *)(a1 + 40) = a7;
  *(void *)(a1 + 48) = a8;
  *(void *)(a1 + 56) = a9;
  *(unsigned char *)(a1 + 64) = a10;
  *(unsigned char *)(a1 + 65) = 0;
  sub_2225E0EC4((void *)(a1 + 72));
  *(void *)(a1 + 232) = 0;
  sub_22262D398(a1 + 208);
  sub_22262CF40(a1);
  return a1;
}

uint64_t sub_222630AF8(uint64_t a1)
{
  return a1;
}

BOOL sub_222630B24(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_222608790(a1, a2);
  return j_nullsub_1(v2, v3) == 0;
}

uint64_t *sub_222630B48(uint64_t *a1, uint64_t a2, int a3)
{
  return a1;
}

uint64_t sub_222630B70(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t result = nullsub_1(a2, a2);
  uint64_t v6 = 2;
  if (!a3) {
    uint64_t v6 = 0;
  }
  *a1 = v6 | result;
  return result;
}

uint64_t sub_222630BB0(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222630BE4(v4, v2);
  return a1;
}

uint64_t sub_222630BE4(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_22263082C(a1, a2);
  if (result)
  {
    return sub_22263087C(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_222630C30(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222630C64(v4, v2);
  return a1;
}

uint64_t sub_222630C64(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222630CB0(a1, a2);
  if (result)
  {
    return sub_222630D00(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

BOOL sub_222630CB0(uint64_t a1, unsigned int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  if (a2) {
    uint64_t v4 = sub_2225C26A4(96 * a2);
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)a1 = v4;
  return a2 != 0;
}

uint64_t sub_222630D00(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  uint64_t v2 = sub_2225F9A1C();
  uint64_t v3 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_222630D68(a1);
  while (v3 != (void *)result)
  {
    *uint64_t v3 = v2;
    v3 += 12;
  }
  return result;
}

uint64_t sub_222630D68(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 96 * sub_2225F5148(a1);
}

void **sub_222630DA0(void **a1)
{
  return a1;
}

uint64_t sub_222630DD0(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_2225F9A1C();
    uint64_t v4 = sub_2225F9EB8();
    int v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_2226309B0(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0)
        {
          uint64_t result = sub_2225D085C(*v5, v4);
          if ((result & 1) == 0) {
            uint64_t result = sub_2225C56C4(v5 + 1);
          }
        }
        v5 += 6;
      }
      while (v5 != v6);
    }
  }
  return result;
}

void **sub_222630E64(void **a1)
{
  return a1;
}

uint64_t sub_222630E94(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_2225F9A1C();
    uint64_t v4 = sub_2225F9EB8();
    int v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_222630D68(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0)
        {
          uint64_t result = sub_2225D085C(*v5, v4);
          if ((result & 1) == 0) {
            uint64_t result = sub_22262C9FC(v5 + 1);
          }
        }
        v5 += 12;
      }
      while (v5 != v6);
    }
  }
  return result;
}

void **sub_222630F28(void **a1)
{
  return a1;
}

uint64_t sub_222630F58(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_2225F9A1C();
    uint64_t v4 = sub_2225F9EB8();
    int v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_2226309B0(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0)
        {
          uint64_t result = sub_2225D085C(*v5, v4);
          if ((result & 1) == 0) {
            uint64_t result = sub_222630578(v5 + 1);
          }
        }
        v5 += 6;
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t sub_222630FF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_222631024((uint64_t **)a1);
  }
  return a1;
}

uint64_t sub_222631024(uint64_t **a1)
{
  uint64_t v2 = sub_2225F9A58();
  uint64_t result = sub_2225F9EBC();
  uint64_t v4 = *a1;
  if (*a1 != a1[1])
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D085C(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      uint64_t v4 = *a1 + 6;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

uint64_t *sub_2226310A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v6 = 0;
  if (sub_2226304EC(a1, a2, &v6)) {
    return v6;
  }
  sub_222631188(v7);
  uint64_t v4 = sub_22263113C(a1, a2, (uint64_t)v7, v6);
  sub_2225C56C4(v7);
  return v4;
}

uint64_t *sub_22263113C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_22263118C(a1, a2, a4);
  *uint64_t v6 = *a2;
  sub_222631278(v6 + 1, a3);
  return v6;
}

uint64_t *sub_22263118C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_22263127C(a1, (2 * v6));
    sub_2226304EC(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_22263127C(a1, v7);
    sub_2226304EC(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_2225F9A1C();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_222631280(uint64_t a1, int a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  uint64_t v4 = *(uint64_t **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_22263082C(a1, *v5);
  if (v4)
  {
    sub_222631310(a1, v4, &v4[6 * v3]);
    j__free(v4);
  }
  else
  {
    sub_22263087C(a1);
  }
}

uint64_t sub_222631310(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_22263087C(a1);
  uint64_t v6 = sub_2225F9A1C();
  uint64_t result = sub_2225F9EB8();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_2226304EC(a1, a2, &v9);
          *uint64_t v9 = *a2;
          sub_222631278(v9 + 1, a2 + 1);
          sub_2225F5674(a1);
          uint64_t result = sub_2225C56C4(a2 + 1);
        }
      }
      a2 += 6;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_2226313DC(uint64_t a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_222631424(a1, a2);
  }
  return a1;
}

uint64_t sub_222631424(uint64_t a1, void *a2)
{
  if ((void *)a1 != a2)
  {
    if (sub_2225C603C(a2))
    {
      unint64_t v4 = sub_2225CC780((uint64_t)a2);
      unint64_t v5 = sub_2225CC780(a1);
      if (v5 >= v4)
      {
        uint64_t v13 = sub_2225C3C70(a1);
        if (v4)
        {
          sub_2225C3C70((uint64_t)a2);
          sub_2225C3D04((uint64_t)a2);
          uint64_t v13 = sub_22263162C();
        }
        uint64_t v14 = sub_2225C3D04(a1);
        nullsub_1(v13, v14);
        uint64_t v15 = a1;
        uint64_t v16 = v13;
      }
      else
      {
        unint64_t v6 = v5;
        if (sub_222631630(a1) >= v4)
        {
          if (v6)
          {
            sub_2225C3C70((uint64_t)a2);
            sub_2225C3C70((uint64_t)a2);
            sub_2225C3C70(a1);
            sub_22263162C();
          }
        }
        else
        {
          uint64_t v7 = sub_2225C3C70(a1);
          uint64_t v8 = sub_2225C3D04(a1);
          nullsub_1(v7, v8);
          uint64_t v9 = sub_2225C3C70(a1);
          sub_2225C5B6C(a1, v9);
          sub_2225CC828((const void **)a1, v4);
          unint64_t v6 = 0;
        }
        uint64_t v17 = (void *)(sub_2225C3C70((uint64_t)a2) + 8 * v6);
        int v18 = sub_2225C3D04((uint64_t)a2);
        uint64_t v19 = sub_2225C3C70(a1);
        sub_2225E2BB8(v17, v18, (void *)(v19 + 8 * v6));
        uint64_t v16 = sub_2225C3C70(a1) + 8 * v4;
        uint64_t v15 = a1;
      }
      sub_2225C5B6C(v15, v16);
      sub_2225C5D90(a2);
    }
    else
    {
      uint64_t v10 = sub_2225C3C70(a1);
      uint64_t v11 = sub_2225C3D04(a1);
      nullsub_1(v10, v11);
      if (!sub_2225C603C((void *)a1))
      {
        unsigned int v12 = (void *)sub_2225C3C70(a1);
        free(v12);
      }
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = a2[2];
      sub_22263161C(a2);
    }
  }
  return a1;
}

void *sub_22263161C(void *result)
{
  result[1] = result + 3;
  result[2] = result + 3;
  std::string *result = result + 3;
  return result;
}

uint64_t sub_222631630(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return (v2 - sub_2225C3C70(a1)) >> 3;
}

uint64_t sub_222631668()
{
  sub_222631684();
  return v0;
}

uint64_t sub_222631688(uint64_t a1)
{
  return sub_2225D5BA8(a1, 1u);
}

uint64_t sub_222631690(uint64_t a1, uint64_t *a2, void *a3)
{
  unint64_t v5 = 0;
  uint64_t result = sub_2226316D0(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_2226316D0(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    uint64_t v9 = sub_2225F9A1C();
    uint64_t v10 = sub_2225F9EB8();
    int v11 = v8 - 1;
    unsigned int v12 = sub_2225FB0F4(a2) & (v8 - 1);
    uint64_t v13 = (uint64_t *)(v6 + 96 * v12);
    if (sub_2225D085C(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v16 = a3;
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_2225D085C(*v13, v9))
      {
        if (sub_2225D085C(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        uint64_t v13 = (uint64_t *)(v6 + 96 * v12);
        ++v15;
        if (sub_2225D085C(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        uint64_t v13 = v14;
      }
LABEL_13:
      a3 = v16;
    }
  }
  else
  {
    uint64_t v13 = 0;
  }
  *a3 = v13;
  return result;
}

uint64_t sub_2226317FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_222631830((uint64_t **)a1);
  }
  return a1;
}

uint64_t sub_222631830(uint64_t **a1)
{
  uint64_t v2 = sub_2225F9A58();
  uint64_t result = sub_2225F9EBC();
  unint64_t v4 = *a1;
  if (*a1 != a1[1])
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D085C(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      unint64_t v4 = *a1 + 12;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

void *sub_2226318B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_2226318E4(a1 + 1, a3);
  return a1;
}

_OWORD *sub_2226318E8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  sub_222631918(a1 + 1, a2 + 1);
  return a1;
}

void *sub_22263191C(void *a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_222631964(a1, a2);
  }
  return a1;
}

void *sub_222631964(void *a1, void *a2)
{
  if (a1 != a2)
  {
    if (sub_2225C603C(a2))
    {
      unint64_t v4 = sub_222609DE8((uint64_t)a2);
      unint64_t v5 = sub_222609DE8((uint64_t)a1);
      if (v5 >= v4)
      {
        uint64_t v13 = (std::string *)sub_2225C3C70((uint64_t)a1);
        if (v4)
        {
          uint64_t v14 = sub_2225C3C70((uint64_t)a2);
          uint64_t v15 = sub_2225C3D04((uint64_t)a2);
          uint64_t v13 = (std::string *)sub_222631B68(v14, v15, (uint64_t)v13);
        }
        uint64_t v16 = (std::string *)sub_2225C3D04((uint64_t)a1);
        sub_2226198A0(v13, v16);
        uint64_t v17 = (uint64_t)a1;
        uint64_t v18 = (uint64_t)v13;
      }
      else
      {
        unint64_t v6 = v5;
        if (sub_222619804((uint64_t)a1) >= v4)
        {
          if (v6)
          {
            uint64_t v19 = sub_2225C3C70((uint64_t)a2);
            uint64_t v20 = sub_2225C3C70((uint64_t)a2) + 24 * v6;
            uint64_t v21 = sub_2225C3C70((uint64_t)a1);
            sub_222631B68(v19, v20, v21);
          }
        }
        else
        {
          uint64_t v7 = (std::string *)sub_2225C3C70((uint64_t)a1);
          int v8 = (std::string *)sub_2225C3D04((uint64_t)a1);
          sub_2226198A0(v7, v8);
          uint64_t v9 = sub_2225C3C70((uint64_t)a1);
          sub_2225C5B6C((uint64_t)a1, v9);
          sub_22261970C(a1, v4);
          unint64_t v6 = 0;
        }
        uint64_t v22 = 3 * v6;
        uint64_t v23 = sub_2225C3C70((uint64_t)a2) + 24 * v6;
        uint64_t v24 = sub_2225C3D04((uint64_t)a2);
        uint64_t v25 = sub_2225C3C70((uint64_t)a1);
        sub_222619848(v23, v24, v25 + 8 * v22);
        uint64_t v18 = sub_2225C3C70((uint64_t)a1) + 24 * v4;
        uint64_t v17 = (uint64_t)a1;
      }
      sub_2225C5B6C(v17, v18);
      sub_22261A3B8(a2);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_2225C3C70((uint64_t)a1);
      int v11 = (std::string *)sub_2225C3D04((uint64_t)a1);
      sub_2226198A0(v10, v11);
      if (!sub_2225C603C(a1))
      {
        unsigned int v12 = (void *)sub_2225C3C70((uint64_t)a1);
        free(v12);
      }
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      sub_22263161C(a2);
    }
  }
  return a1;
}

uint64_t sub_222631B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      sub_2225CCDE4(a3, v5);
      v5 += 24;
      a3 += 24;
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t *sub_222631BC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v6 = sub_222631C0C(a1, a2, a4);
  *unint64_t v6 = *a2;
  sub_2226318E4(v6 + 1, a3);
  return v6;
}

uint64_t *sub_222631C0C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222631CF8(a1, (2 * v6));
    sub_222631690(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_222631CF8(a1, v7);
    sub_222631690(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_2225F9A1C();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_222631CFC(uint64_t a1, int a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  unint64_t v4 = *(uint64_t **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222630CB0(a1, *v5);
  if (v4)
  {
    sub_222631D8C(a1, v4, &v4[12 * v3]);
    j__free(v4);
  }
  else
  {
    sub_222630D00(a1);
  }
}

uint64_t sub_222631D8C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_222630D00(a1);
  uint64_t v6 = sub_2225F9A1C();
  uint64_t result = sub_2225F9EB8();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_222631690(a1, a2, &v9);
          *uint64_t v9 = *a2;
          sub_2226318E4(v9 + 1, a2 + 1);
          sub_2225F5674(a1);
          uint64_t result = sub_22262C9FC(a2 + 1);
        }
      }
      a2 += 12;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_222631E58(uint64_t *a1, uint64_t a2)
{
  uint64_t result = nullsub_1(a2, a2);
  *a1 = result;
  return result;
}

uint64_t sub_222631E84(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_2226099B4((uint64_t)a1);
  uint64_t v5 = sub_222607F28((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(32 * v7, 0x10120405C87E9CEuLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_222631F78(v9, v10, (uint64_t)v8);
  int v11 = (std::string *)sub_2225C3C70((uint64_t)a1);
  unsigned int v12 = (std::string *)sub_2225C3D04((uint64_t)a1);
  sub_2226088C0(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 32 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 32 * v7;
  return result;
}

uint64_t sub_222631F78(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_222631F74(a3, v5);
      v5 += 32;
      a3 += 32;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_222631FD0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225D1354(a1, a2);
  *(_DWORD *)(result + 24) = *(_DWORD *)(a2 + 24);
  return result;
}

uint64_t sub_222631FFC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t sub_222632038(void *a1, unint64_t a2)
{
  unint64_t v4 = sub_2225D624C((uint64_t)a1);
  unint64_t v5 = sub_2225D5A64((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(40 * v7, 0x1012040ABBA4411uLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_22263214C(v9, v10, (uint64_t)v8);
  uint64_t v11 = sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  sub_222608AD0(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 40 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 40 * v7;
  return result;
}

uint64_t sub_222632130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2226321E4(a1, a2, a3);
  return v3;
}

uint64_t sub_22263214C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2226321A4(a3, v5);
      v5 += 40;
      a3 += 40;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_2226321A8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  sub_2225D1354(a1 + 8, a2 + 8);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_2226321E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3;
  uint64_t v7 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      sub_222632264(v6, v4);
      v4 += 40;
      v6 += 40;
      uint64_t v7 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v8, &v7, &v6);
  return v8;
}

uint64_t sub_222632268(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  std::string::basic_string((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

void *sub_2226322A4(void *a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226322EC(a1, (uint64_t)a2);
  }
  return a1;
}

void *sub_2226322EC(void *a1, uint64_t a2)
{
  if (a1 != (void *)a2)
  {
    unint64_t v4 = sub_222607F28(a2);
    unint64_t v5 = sub_222607F28((uint64_t)a1);
    if (v5 >= v4)
    {
      if (v4)
      {
        sub_2225C3C70(a2);
        sub_2225C3C70(a2);
        sub_2225C3C70((uint64_t)a1);
        uint64_t v10 = sub_222632480();
      }
      else
      {
        uint64_t v10 = sub_2225C3C70((uint64_t)a1);
      }
      uint64_t v16 = (std::string *)v10;
      uint64_t v17 = (std::string *)sub_2225C3D04((uint64_t)a1);
      sub_2226088C0(v16, v17);
      uint64_t v15 = (uint64_t)a1;
      uint64_t v14 = (uint64_t)v16;
    }
    else
    {
      unint64_t v6 = v5;
      if (sub_2226099B4((uint64_t)a1) >= v4)
      {
        if (v6)
        {
          sub_2225C3C70(a2);
          sub_2225C3C70(a2);
          sub_2225C3C70((uint64_t)a1);
          sub_222632480();
        }
      }
      else
      {
        uint64_t v7 = (std::string *)sub_2225C3C70((uint64_t)a1);
        uint64_t v8 = (std::string *)sub_2225C3D04((uint64_t)a1);
        sub_2226088C0(v7, v8);
        uint64_t v9 = sub_2225C3C70((uint64_t)a1);
        sub_2225C5B6C((uint64_t)a1, v9);
        sub_222631E84(a1, v4);
        unint64_t v6 = 0;
      }
      uint64_t v11 = sub_2225C3C70(a2) + 32 * v6;
      uint64_t v12 = sub_2225C3D04(a2);
      uint64_t v13 = sub_2225C3C70((uint64_t)a1);
      sub_22263249C(v11, v12, v13 + 32 * v6);
      uint64_t v14 = sub_2225C3C70((uint64_t)a1) + 32 * v4;
      uint64_t v15 = (uint64_t)a1;
    }
    sub_2225C5B6C(v15, v14);
  }
  return a1;
}

uint64_t sub_222632480()
{
  sub_2226324A0();
  return v0;
}

uint64_t sub_2226324A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = j_j_nullsub_1(a3);
  uint64_t v9 = sub_222632538((uint64_t)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_222632538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      sub_2226325A8(a4, v5);
      v5 += 32;
      a4 += 32;
    }
    while (v5 != a3);
    uint64_t v5 = a3;
  }
  uint64_t v8 = a4;
  uint64_t v9 = v5;
  return sub_2225C5EEC((uint64_t)&v9, (uint64_t)&v8);
}

uint64_t sub_2226325A8(uint64_t a1, uint64_t a2)
{
  std::string::operator=((std::string *)a1, (const std::string *)a2);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t sub_2226325DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2226325F8(a1, a2, a3);
  return v3;
}

uint64_t sub_2226325F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3;
  uint64_t v7 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      sub_222632678(v6, v4);
      v4 += 32;
      v6 += 32;
      uint64_t v7 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v8, &v7, &v6);
  return v8;
}

std::string *sub_22263267C(std::string *a1, uint64_t a2)
{
  uint64_t result = std::string::basic_string(a1, (const std::string *)a2);
  LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
  return result;
}

uint64_t sub_2226326A8(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_2226327A4((uint64_t)a1);
  uint64_t v5 = sub_2226087A8((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(104 * v7, 0x1080040D6D0946FuLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_2226327F0(v9, v10, (uint64_t)v8);
  uint64_t v11 = sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  sub_222608A00(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 104 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 104 * v7;
  return result;
}

uint64_t sub_2226327A4(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return 0x4EC4EC4EC4EC4EC5 * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_2226327F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_222632848(a3, v5);
      v5 += 104;
      a3 += 104;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_22263284C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  sub_222632888(a1 + 8, a2 + 8);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

void *sub_22263288C(void *a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226328D4(a1, a2);
  }
  return a1;
}

void *sub_2226328D4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    if (sub_2225C603C(a2))
    {
      unint64_t v4 = sub_222607F28((uint64_t)a2);
      unint64_t v5 = sub_222607F28((uint64_t)a1);
      if (v5 >= v4)
      {
        uint64_t v13 = (std::string *)sub_2225C3C70((uint64_t)a1);
        if (v4)
        {
          uint64_t v14 = sub_2225C3C70((uint64_t)a2);
          uint64_t v15 = sub_2225C3D04((uint64_t)a2);
          uint64_t v13 = (std::string *)sub_222632ACC(v14, v15, (uint64_t)v13);
        }
        uint64_t v16 = (std::string *)sub_2225C3D04((uint64_t)a1);
        sub_2226088C0(v13, v16);
        uint64_t v17 = (uint64_t)a1;
        uint64_t v18 = (uint64_t)v13;
      }
      else
      {
        unint64_t v6 = v5;
        if (sub_2226099B4((uint64_t)a1) >= v4)
        {
          if (v6)
          {
            uint64_t v19 = sub_2225C3C70((uint64_t)a2);
            uint64_t v20 = sub_2225C3C70((uint64_t)a2) + 32 * v6;
            uint64_t v21 = sub_2225C3C70((uint64_t)a1);
            sub_222632ACC(v19, v20, v21);
          }
        }
        else
        {
          unint64_t v7 = (std::string *)sub_2225C3C70((uint64_t)a1);
          uint64_t v8 = (std::string *)sub_2225C3D04((uint64_t)a1);
          sub_2226088C0(v7, v8);
          uint64_t v9 = sub_2225C3C70((uint64_t)a1);
          sub_2225C5B6C((uint64_t)a1, v9);
          sub_222631E84(a1, v4);
          unint64_t v6 = 0;
        }
        uint64_t v22 = sub_2225C3C70((uint64_t)a2) + 32 * v6;
        uint64_t v23 = sub_2225C3D04((uint64_t)a2);
        uint64_t v24 = sub_2225C3C70((uint64_t)a1);
        sub_222631F78(v22, v23, v24 + 32 * v6);
        uint64_t v18 = sub_2225C3C70((uint64_t)a1) + 32 * v4;
        uint64_t v17 = (uint64_t)a1;
      }
      sub_2225C5B6C(v17, v18);
      sub_22262D65C(a2);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_2225C3C70((uint64_t)a1);
      uint64_t v11 = (std::string *)sub_2225C3D04((uint64_t)a1);
      sub_2226088C0(v10, v11);
      if (!sub_2225C603C(a1))
      {
        uint64_t v12 = (void *)sub_2225C3C70((uint64_t)a1);
        free(v12);
      }
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      sub_22263161C(a2);
    }
  }
  return a1;
}

uint64_t sub_222632ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      sub_222632B24(a3, v5);
      v5 += 32;
      a3 += 32;
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t sub_222632B24(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t sub_222632B58(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  sub_22262FC34(a1 + 8, a2 + 8);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t sub_222632B94(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_222632C8C((uint64_t)a1);
  uint64_t v5 = sub_2226087F4((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(88 * v7, 0x10800404030E7B3uLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_222632CD8(v9, v10, (uint64_t)v8);
  uint64_t v11 = sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  sub_222608960(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 88 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 88 * v7;
  return result;
}

uint64_t sub_222632C8C(uint64_t a1)
{
  uint64_t v2 = sub_2225C5B40(a1);
  return 0x2E8BA2E8BA2E8BA3 * ((v2 - sub_2225C3C70(a1)) >> 3);
}

uint64_t sub_222632CD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_222632888(a3, v5);
      v5 += 88;
      a3 += 88;
    }
    while (v5 != a2);
  }
  return result;
}

void *sub_222632D30(uint64_t a1, uint64_t a2)
{
  sub_222632E54(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_222632E58(v5, v7, a2);
  v10 += 112;
  return sub_2225D284C(&v9);
}

uint64_t sub_222632DA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_222608840(a1);
  unint64_t v6 = sub_222632EC4(a1, v5 + 1);
  uint64_t v7 = sub_222608840(a1);
  sub_222632F40(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_222632E58(v4, v9, a2);
  v13 += 112;
  sub_222632F44(a1, v12);
  uint64_t v10 = a1[1];
  sub_222633034(v12);
  return v10;
}

void *sub_222632E5C(void *result, uint64_t a2, uint64_t a3)
{
  std::string *result = a2;
  result[1] = *(void *)(a2 + 8);
  result[2] = *(void *)(a2 + 8) + 112 * a3;
  return result;
}

uint64_t sub_222632E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222632E88(a2, a3);
}

uint64_t sub_222632E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22262FC34(a1, a2);
  std::string::basic_string((std::string *)(v4 + 88), (const std::string *)(a2 + 88));
  return a1;
}

unint64_t sub_222632EC4(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_222633038((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_22260929C(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_222632F44(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_222633194(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  unint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  uint64_t v11 = sub_222608840(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_222633038(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_222633078(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_22263307C()
{
  return 0x249249249249249;
}

uint64_t *sub_222633090(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_222633120(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 112 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 112 * v9;
  return a1;
}

uint64_t sub_222633120(uint64_t a1, unint64_t a2)
{
  return sub_222633148(a1, a2);
}

uint64_t sub_222633148(uint64_t a1, unint64_t a2)
{
  if (sub_222633078(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(112 * a2, 8);
}

uint64_t sub_222633194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_222633264((uint64_t)&v16);
    uint64_t v9 = sub_222633268((uint64_t)v18);
    sub_222633260(a1, v8, v9);
    sub_222633274((uint64_t)v18);
    sub_222633274((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_222633268(uint64_t a1)
{
  return *(void *)(a1 + 8) - 112;
}

uint64_t sub_222633274(uint64_t result)
{
  *(void *)(result + 8) -= 112;
  return result;
}

uint64_t sub_222633284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222633290(a2, a3);
}

uint64_t sub_222633294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222632888(a1, a2);
  sub_2225D1354(v4 + 88, a2 + 88);
  return a1;
}

uint64_t sub_2226332CC(uint64_t a1)
{
  uint64_t v1 = sub_2226332F4(a1);

  return nullsub_1(v1, v2);
}

uint64_t *sub_2226332F8(uint64_t *a1)
{
  sub_222633358((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_222633360(a1, v4);
    sub_222609298(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_222633358(uint64_t a1)
{
  return sub_2226333A8(a1, *(void *)(a1 + 8));
}

uint64_t sub_222633360(void *a1, uint64_t a2)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 4);
}

uint64_t sub_2226333AC(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 112;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = sub_22260934C(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t *sub_222633418(uint64_t a1, uint64_t *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v6 = 0;
  if (sub_222631690(a1, a2, &v6)) {
    return v6;
  }
  sub_22262C9F4(v7);
  uint64_t v4 = sub_222631BC0(a1, a2, (uint64_t)v7, v6);
  sub_22262C9FC(v7);
  return v4;
}

uint64_t sub_2226334B4(uint64_t a1)
{
  sub_222607D74((uint64_t *)(a1 + 1992), a1 + 1984);

  return sub_2226334F4(a1, v2);
}

uint64_t sub_2226334F4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2226260C4(a1, a2);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2226336AC(a1);
    *(_DWORD *)(a1 + 832) = 3;
  }
  return result;
}

uint64_t sub_22263352C(uint64_t a1)
{
  return sub_222633534((void *)(a1 + 1992));
}

uint64_t sub_222633534(void *a1)
{
  return sub_2226340E0(a1, a1[1] - 8);
}

BOOL sub_222633540(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 1992);
  *(void *)(a1 + 1984) = *(void *)sub_2225E77C4(a1 + 1992);
  sub_222633534(v2);

  return sub_222648A9C(a1, v3);
}

uint64_t sub_222633590(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2226260C4(a1, a2);
  if (result)
  {
    unint64_t v5 = *(void *)(a1 + 1984);
    if (v5 >= sub_222609DE8(a1 + 1928))
    {
      sub_222626118(a1, v6);
      sub_222649758(a1, a2);
      if (sub_22263368C(a1))
      {
        sub_2226334F4(a1, v9);
        uint64_t result = sub_22260BC64(a1 + 1928, a2);
        ++*(void *)(a1 + 1984);
      }
      else
      {
        unint64_t v10 = *(void *)(a1 + 1984);
        if (v10 >= sub_222609DE8(a1 + 1928))
        {
          uint64_t result = sub_2225C5D90((void *)(a1 + 1928));
          *(void *)(a1 + 1984) = 0;
        }
        else
        {
          return sub_2226334F4(a1, v11);
        }
      }
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 1984);
      *(void *)(a1 + 1984) = v7 + 1;
      uint64_t result = sub_222609E38(a1 + 1928, v7);
      int v8 = *(_DWORD *)(result + 15);
      *(_OWORD *)a2 = *(_OWORD *)result;
      *(_DWORD *)(a2 + 15) = v8;
    }
  }
  return result;
}

BOOL sub_22263368C(uint64_t a1)
{
  return !sub_2225CF1D0((void *)(a1 + 1992));
}

uint64_t sub_2226336AC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 848);
  sub_222633770((uint64_t)v4, *(_DWORD *)(a1 + 832), *(void *)(a1 + 840), a1 + 792, a1 + 800, *(void *)(a1 + 808), a1 + 824, *(void *)(a1 + 816));
  sub_222633714(v2, (uint64_t)v4);
  uint64_t result = sub_222633774(v4);
  *(void *)(a1 + 808) = 0;
  return result;
}

uint64_t sub_222633714(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_2226337EC(a1, a2);
  }
  else
  {
    sub_222633778((uint64_t)a1, a2);
    uint64_t result = v4 + 56;
  }
  a1[1] = result;
  return result;
}

void *sub_222633778(uint64_t a1, uint64_t a2)
{
  sub_22263389C(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_2226338A0(v5, v7, a2);
  v10 += 56;
  return sub_2225D284C(&v9);
}

uint64_t sub_2226337EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_2226339BC(a1);
  unint64_t v6 = sub_222633940(a1, v5 + 1);
  uint64_t v7 = sub_2226339BC(a1);
  sub_2226339E0(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2226338A0(v4, v9, a2);
  v13 += 56;
  sub_2226339E4(a1, v12);
  uint64_t v10 = a1[1];
  sub_222633AD4(v12);
  return v10;
}

void *sub_2226338A4(void *result, uint64_t a2, uint64_t a3)
{
  std::string *result = a2;
  result[1] = *(void *)(a2 + 8);
  result[2] = *(void *)(a2 + 8) + 56 * a3;
  return result;
}

uint64_t sub_2226338C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226338D0(a2, a3);
}

uint64_t sub_2226338D4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_2225CDDCC(a1 + 16, a2 + 16);
  sub_2225CDDCC(a1 + 24, a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_2225CDDCC(a1 + 40, a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

unint64_t sub_222633940(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_222633AD8((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_222633B18(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_2226339BC(void *a1)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 3);
}

uint64_t sub_2226339E4(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_222633C18(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  unint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  uint64_t v11 = sub_2226339BC(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_222633AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_2225FA594(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_222633B18(void *a1, uint64_t a2)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 3);
}

uint64_t *sub_222633B60(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_222633BF0(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 56 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 56 * v9;
  return a1;
}

uint64_t sub_222633BF0(uint64_t a1, unint64_t a2)
{
  return sub_2225FA548(a1, a2);
}

uint64_t sub_222633C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_222633CE4((uint64_t)&v16);
    uint64_t v9 = sub_222633CE8((uint64_t)v18);
    sub_2226338A0(a1, v8, v9);
    sub_222633CF4((uint64_t)v18);
    sub_222633CF4((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_222633CE8(uint64_t a1)
{
  return *(void *)(a1 + 8) - 56;
}

uint64_t sub_222633CF4(uint64_t result)
{
  *(void *)(result + 8) -= 56;
  return result;
}

uint64_t sub_222633D04(uint64_t a1)
{
  uint64_t v1 = sub_222633D2C(a1);

  return nullsub_1(v1, v2);
}

uint64_t *sub_222633D30(uint64_t *a1)
{
  sub_222633D90((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_222633D98(a1, v4);
    sub_2225F9C04(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_222633D90(uint64_t a1)
{
  return sub_222633DE0(a1, *(void *)(a1 + 8));
}

uint64_t sub_222633D98(void *a1, uint64_t a2)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 3);
}

uint64_t sub_222633DE4(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 56;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = sub_222633E50(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_222633E54(uint64_t a1, uint64_t a2)
{
  return sub_222633774(a2);
}

uint64_t sub_222633E5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  sub_2225CDDCC(a1 + 16, a4);
  sub_2225CDDCC(a1 + 24, a5);
  *(void *)(a1 + 32) = a6;
  sub_2225CDDCC(a1 + 40, a7);
  *(void *)(a1 + 48) = a8;
  return a1;
}

uint64_t sub_222633ED4(uint64_t a1)
{
  return a1;
}

uint64_t sub_222633F18(uint64_t a1)
{
  return a1;
}

void sub_222633F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_222633FB4(v7, v4);
  }
}

void sub_222633FB4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_222633FE8(a2);
    j__free(v2);
  }
}

uint64_t sub_222633FEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_222634014(uint64_t a1)
{
  return a1;
}

void *sub_222634040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  void *result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2226340B0(v8, v4);
  }
  return result;
}

uint64_t sub_2226340B0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  }
  return result;
}

uint64_t sub_2226340E0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D4970(a1);
  sub_2225D56B0((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

void sub_222634140()
{
  uint64_t v0 = (void *)sub_22263413C();

  j__free(v0);
}

uint64_t sub_222634168(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  (*(void (**)(void, void, uint64_t, uint64_t, void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8), a2, a3, a4, a5);
  uint64_t v6 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 16);

  return v6();
}

uint64_t sub_22263421C(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  uint64_t v2 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 24);

  return v2();
}

uint64_t sub_2226342B8(uint64_t a1)
{
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8))) {
    return 1;
  }
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 32);

  return v3();
}

uint64_t sub_22263436C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v22 = a6;
  uint64_t v15 = a2;
  (*(void (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v16 + 40);

  return v17(v16, v15, a3, a4, a5, v22);
}

uint64_t sub_222634470(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 48);

  return v3();
}

uint64_t sub_222634520(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 56))(*(void *)(a1 + 8));
  uint64_t v2 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 56);

  return v2();
}

uint64_t sub_22263459C(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 64))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 64);

  return v3();
}

uint64_t sub_222634634(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 80))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 80);

  return v3();
}

uint64_t sub_2226346D4(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 88))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 88);

  return v3();
}

uint64_t sub_222634774(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 104);

  return v3();
}

uint64_t sub_22263483C(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 112);

  return v3();
}

uint64_t sub_2226348DC(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 120))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 120);

  return v3();
}

uint64_t sub_22263497C(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 128))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 128);

  return v3();
}

uint64_t sub_222634A44(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  (*(void (**)(void, void, uint64_t, void))(**(void **)(a1 + 8) + 136))(*(void *)(a1 + 8), a2, a3, a4);
  uint64_t v5 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 136);

  return v5();
}

uint64_t sub_222634AF8(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 144))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 144);

  return v3();
}

uint64_t sub_222634BB0(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 152))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 152);

  return v3();
}

uint64_t sub_222634C48(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 160))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 160);

  return v3();
}

uint64_t sub_222634CD0(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 168))(*(void *)(a1 + 8));
  uint64_t v2 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 168);

  return v2();
}

uint64_t sub_222634D7C(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 176))(*(void *)(a1 + 8));
  uint64_t v2 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 176);

  return v2();
}

uint64_t sub_222634E10(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 184))(*(void *)(a1 + 8));
  uint64_t v2 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 184);

  return v2();
}

uint64_t sub_222634EA4(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 192))(*(void *)(a1 + 8));
  uint64_t v2 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 192);

  return v2();
}

uint64_t sub_222634F40(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 200))(*(void *)(a1 + 8));
  uint64_t v2 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 200);

  return v2();
}

uint64_t sub_222634FC4(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 208))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 208);

  return v3();
}

uint64_t sub_222635064(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  (*(void (**)(void, void, uint64_t, uint64_t, void))(**(void **)(a1 + 8) + 216))(*(void *)(a1 + 8), a2, a3, a4, a5);
  uint64_t v6 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 216);

  return v6();
}

uint64_t sub_222635118(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 224))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 224);

  return v3();
}

uint64_t sub_2226351B8(uint64_t a1, unsigned int a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 8) + 232))(*(void *)(a1 + 8), a2);
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 232);

  return v3();
}

uint64_t sub_222635258(uint64_t a1, unsigned int a2, unsigned int a3)
{
  (*(void (**)(void, void, void))(**(void **)(a1 + 8) + 240))(*(void *)(a1 + 8), a2, a3);
  uint64_t v4 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 240);

  return v4();
}

uint64_t sub_2226352F4(uint64_t a1, unsigned int a2, unsigned int a3)
{
  (*(void (**)(void, void, void))(**(void **)(a1 + 8) + 248))(*(void *)(a1 + 8), a2, a3);
  uint64_t v4 = *(uint64_t (**)(void))(**(void **)(a1 + 16) + 248);

  return v4();
}

uint64_t sub_222635390(void *a1, uint64_t a2)
{
  *a1 = &unk_26D4DC130;
  uint64_t v3 = a1[2];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = a1[1];
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  return nullsub_1(a1, a2);
}

void *sub_222635438(void *result)
{
  void *result = &unk_26D4DC248;
  return result;
}

BOOL sub_222635458(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  if (sub_2226355C8(&v22)) {
    return 0;
  }
  uint64_t v3 = sub_2225D2E88((uint64_t *)(a1 + 64));
  uint64_t v4 = sub_2225D24C8(a1 + 64);
  LODWORD(v19) = sub_2225C3B40((unsigned int *)&v22);
  sub_2225C64B8(&v20, *(void *)(a1 + 8));
  uint64_t v21 = sub_2226355E4(v3, v4, (int *)&v19, v20);
  uint64_t v19 = sub_2225D24C8(a1 + 64);
  if (sub_2225D0E1C((uint64_t)&v21, (uint64_t)&v19)) {
    return 0;
  }
  uint64_t v5 = *(_DWORD **)(a1 + 8);
  int v6 = sub_222613380((uint64_t)&v22);
  uint64_t v8 = (unsigned int *)sub_2225F3960(&v21, v7);
  int v9 = sub_2225C3B40(v8);
  if (sub_22260E7CC(v5, v6, v9)) {
    return 0;
  }
  uint64_t v11 = v21;
  uint64_t v12 = sub_2225D24C8(a1 + 64);
  LODWORD(v16) = sub_222613380((uint64_t)&v22);
  sub_2225C64B8(&v18, *(void *)(a1 + 8));
  uint64_t v19 = sub_222635614(v11, v12, (int *)&v16, v18);
  sub_2225F3278(&v17);
  uint64_t v16 = sub_2225D24C8(a1 + 64);
  if (sub_2225D0DF0((uint64_t)&v19, (uint64_t)&v16))
  {
    uint64_t v14 = sub_2225F3960(&v19, v13);
    unsigned int v17 = sub_222613380(v14);
  }
  uint64_t v15 = sub_2225F3960(&v21, v13);
  LODWORD(v16) = sub_222613380(v15);
  return sub_22261FB84((unsigned int *)&v16, &v17);
}

BOOL sub_2226355C8(_DWORD *a1)
{
  return !sub_222622288(a1);
}

uint64_t sub_2226355E4(uint64_t a1, uint64_t a2, int *a3, _DWORD *a4)
{
  int v6 = a4;
  char v5 = 0;
  return sub_222635724(a1, a2, a3, &v6, (uint64_t)&v5);
}

uint64_t sub_222635614(uint64_t a1, uint64_t a2, int *a3, _DWORD *a4)
{
  int v6 = a4;
  return sub_2226358DC(a1, a2, a3, &v6, (uint64_t)&v5);
}

uint64_t sub_222635640(uint64_t a1, int a2)
{
  int v13 = a2;
  if (sub_2225F38E8(&v13) || sub_2225CF1D0((void *)(a1 + 64)))
  {
    sub_2225F3278(&v14);
  }
  else
  {
    uint64_t v4 = *(_DWORD **)(a1 + 8);
    char v5 = (unsigned int *)sub_2225E77C4(a1 + 64);
    int v6 = sub_2225C3B40(v5);
    if (sub_22260E7CC(v4, v6, v13))
    {
      return *(unsigned int *)sub_2225E254C(a1 + 16);
    }
    else
    {
      uint64_t v7 = sub_2225D2E88((uint64_t *)(a1 + 64));
      uint64_t v8 = sub_2225D24C8(a1 + 64);
      sub_2225C64B8(&v11, *(void *)(a1 + 8));
      uint64_t v12 = sub_2226355E4(v7, v8, &v13, v11);
      uint64_t v10 = sub_2225F3960(&v12, v9);
      return sub_222613380(v10);
    }
  }
  return v14;
}

uint64_t sub_222635724(uint64_t a1, uint64_t a2, int *a3, _DWORD **a4, uint64_t a5)
{
  uint64_t v9 = sub_2226357D8();
  if (v9)
  {
    unint64_t v10 = v9;
    do
    {
      unint64_t v11 = sub_2225DC2E8(v10);
      uint64_t v15 = a1;
      sub_2226357DC(&v15, v11);
      uint64_t v12 = sub_2225C3C70((uint64_t)&v15);
      int v13 = (unsigned int *)sub_2225DC2F8(a5, v12);
      if (sub_2226357E0(a4, v13, a3))
      {
        a1 = *sub_2225E49B8(&v15);
        unint64_t v11 = v10 + ~v11;
      }
      unint64_t v10 = v11;
    }
    while (v11);
  }
  return a1;
}

BOOL sub_2226357E0(_DWORD **a1, unsigned int *a2, int *a3)
{
  return sub_222635894(a1, a2, *a3);
}

uint64_t sub_2226357EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  return sub_222635818((uint64_t)&v3, (uint64_t)&v4);
}

uint64_t sub_222635818(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return (v3 - sub_2225C3C70(a2)) >> 3;
}

void *sub_222635850(void *a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_222635890(a1, v3);
}

BOOL sub_222635894(_DWORD **a1, unsigned int *a2, int a3)
{
  uint64_t v4 = *a1;
  int v5 = sub_2225C3B40(a2);

  return sub_22260E7CC(v4, v5, a3);
}

uint64_t sub_2226358DC(uint64_t a1, uint64_t a2, int *a3, _DWORD **a4, uint64_t a5)
{
  uint64_t v8 = a1;
  uint64_t v17 = a1;
  uint64_t v9 = sub_2226357D8();
  if (v9)
  {
    unint64_t v10 = v9;
    do
    {
      unint64_t v11 = sub_2225DC2E8(v10);
      sub_22263599C(&v17, v11);
      uint64_t v16 = v12;
      uint64_t v13 = sub_2225C3C70((uint64_t)&v16);
      unsigned int v14 = (unsigned int *)sub_2225DC2F8(a5, v13);
      if (!sub_2226359A4(a4, a3, v14))
      {
        uint64_t v17 = *sub_2225E49B8(&v16);
        unint64_t v11 = v10 + ~v11;
      }
      unint64_t v10 = v11;
    }
    while (v11);
    return v17;
  }
  return v8;
}

void sub_22263599C(uint64_t *a1, uint64_t a2)
{
}

BOOL sub_2226359A4(_DWORD **a1, int *a2, unsigned int *a3)
{
  return sub_2226359D8(a1, *a2, a3);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2226359AC(uint64_t a1, uint64_t a2)
{
  sub_222635850(&v2, a2);
}

BOOL sub_2226359D8(_DWORD **a1, int a2, unsigned int *a3)
{
  uint64_t v4 = *a1;
  int v5 = sub_2225C3B40(a3);

  return sub_22260E7CC(v4, a2, v5);
}

uint64_t sub_222635A20(uint64_t a1)
{
  uint64_t result = sub_222635A58(a1 + 104, 1);
  *(void *)(result + 248) = *(void *)(a1 + 2016);
  *(void *)(a1 + 2016) = result;
  return result;
}

uint64_t sub_222635A58(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, a2 << 8, 8);
}

uint64_t sub_222635A64(uint64_t a1, int a2)
{
  uint64_t v3 = sub_222635A20(a1);

  return sub_222627718(v3, a2);
}

uint64_t sub_222635A9C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = a5;
  uint64_t v17 = a6;
  unsigned int v10 = sub_2225C3D04((uint64_t)&v16);
  if (a4) {
    unsigned int v11 = v10 + 1;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = 4 * v11 + 24;
  unsigned int v13 = sub_2225E58B4();
  uint64_t v14 = sub_2225CC520((uint64_t *)(a1 + 104), v12, v13);
  return sub_222635B28(v14, a2, a3, a4, v16, v17);
}

uint64_t sub_222635B28(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_22263B9A8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_222635B30(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  unsigned int v8 = sub_2225C3D04((uint64_t)&v14);
  if (a3) {
    unsigned int v9 = v8 + 1;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = 4 * v9 + 16;
  unsigned int v11 = sub_2225E58B4();
  uint64_t v12 = sub_2225CC520((uint64_t *)(a1 + 104), v10, v11);
  return sub_222635BAC(v12, a2, a3, v14, v15);
}

uint64_t sub_222635BAC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_22263BAF4(a1, a2, a3, a4, a5);
}

uint64_t sub_222635BB4(uint64_t a1, int a2, int a3)
{
  uint64_t v5 = sub_222635BFC(0x10uLL, (uint64_t *)(a1 + 104));

  return sub_222635C50(v5, a2, a3);
}

uint64_t sub_222635BFC(unint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 8;
  uint64_t v7 = sub_2225C3A4C(a1);
  uint64_t v4 = (unint64_t *)sub_2225CAB38(&v7, &v6);
  return sub_2225CC520(a2, a1, *v4);
}

uint64_t sub_222635C50(uint64_t a1, int a2, int a3)
{
  return sub_22263BB0C(a1, a2, a3);
}

BOOL sub_222635C58(uint64_t a1)
{
  sub_22261B6AC(v3);
  do
  {
    sub_222635CA4(a1, (uint64_t)v3);
    BOOL result = sub_22261CB34((uint64_t)v3, 2);
  }
  while (result);
  return result;
}

uint64_t sub_222635CA4(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a1 + 436);
  *(_WORD *)(a1 + 436) = v3 | 0x20;
  uint64_t result = sub_222649758(a1, a2);
  *(_WORD *)(a1 + 436) = *(_WORD *)(a1 + 436) & 0xFFDF | v3 & 0x20;
  return result;
}

uint64_t sub_222635CE8(uint64_t a1, unsigned int *a2, int a3)
{
  if (!sub_22261BABC((uint64_t)a2, 2))
  {
    uint64_t v11 = sub_22261AF2C((uint64_t)a2);
    if (v11)
    {
      if (!a3) {
        goto LABEL_21;
      }
    }
    else
    {
      unsigned __int8 v21 = 0;
      sub_22261F294(a1, a2, &v21, &v20);
      if (v21 || (sub_2225CCBF8(v18, &v20), uint64_t v11 = sub_222635F10(a1, v18[0], v18[1]), (sub_2226074CC(v11) & 1) == 0))
      {
        sub_2226265A0(a1, a2, 741, (uint64_t)v19);
        uint64_t v9 = sub_2225D918C();
        sub_2225F37F0(v19);
        std::string::~string(&v20);
        return v9;
      }
      if ((*(void *)sub_222608330(a1) & 8) != 0) {
        int v12 = 807;
      }
      else {
        int v12 = 746;
      }
      sub_2226265A0(a1, a2, v12, (uint64_t)v19);
      unsigned int v13 = sub_222635F48(v19, v11);
      unsigned int v14 = sub_22261BFB4((uint64_t)a2);
      sub_222635F18(v13, v14);
      sub_2225F37F0(v19);
      sub_2225C5B6C((uint64_t)a2, v11);
      std::string::~string(&v20);
      if (!a3) {
        goto LABEL_21;
      }
    }
    if (sub_222606C48(v11) == 7)
    {
      uint64_t v6 = a1;
      uint64_t v7 = a2;
      int v8 = 627;
      goto LABEL_3;
    }
    if (a3 == 2)
    {
      if (sub_2226074C0(v11))
      {
        uint64_t v15 = sub_222625E60(a1, v11);
        if (sub_222635F74(v15))
        {
          sub_2226265A0(a1, a2, 809, (uint64_t)v17);
          sub_2225F37F0(v17);
        }
      }
    }
LABEL_21:
    if (!sub_222606BF8(*(void *)(a1 + 24))) {
      return 0;
    }
    v20.__r_.__value_.__r.__words[0] = sub_2225F2418(v11);
    v20.__r_.__value_.__l.__size_ = v16;
    if ((unint64_t)sub_2225C3D04((uint64_t)&v20) < 0x401) {
      return 0;
    }
    uint64_t v6 = a1;
    uint64_t v7 = a2;
    int v8 = 656;
    goto LABEL_3;
  }
  uint64_t v6 = a1;
  uint64_t v7 = a2;
  int v8 = 743;
LABEL_3:
  sub_2226265A0(v6, v7, v8, (uint64_t)&v20);
  uint64_t v9 = sub_2225D918C();
  sub_2225F37F0(&v20);
  return v9;
}

uint64_t sub_222635F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225F2E2C(a1 + 440, a2, a3);
}

uint64_t *sub_222635F18(uint64_t *a1, unsigned int a2)
{
  return a1;
}

uint64_t *sub_222635F48(uint64_t *a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_222635F74(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 244) >> 4) & 1;
}

uint64_t sub_222635F80(uint64_t a1, unsigned int *a2, int a3)
{
  sub_222635CA4(a1, (uint64_t)a2);
  if (sub_22261BABC((uint64_t)a2, 3))
  {
    uint64_t v6 = *(void *)(a1 + 680);
    if (v6) {
      (*(void (**)(uint64_t, BOOL))(*(void *)v6 + 32))(v6, a3 == 1);
    }
    sub_222636060(a1);
    sub_222635CA4(a1, (uint64_t)a2);
  }
  uint64_t result = sub_222635CE8(a1, a2, a3);
  if (result)
  {
    uint64_t result = sub_22261CB34((uint64_t)a2, 2);
    if (result)
    {
      sub_22261F2AC((uint64_t)a2, 2);
      return sub_222635C58(a1);
    }
  }
  return result;
}

uint64_t sub_222636060(uint64_t a1)
{
  *(unsigned char *)(a1 + 780) = 1;
  uint64_t v1 = sub_2225C5B40(a1);

  return sub_22263BB84(v1, 1);
}

uint64_t sub_222636094(uint64_t a1, uint64_t a2, int a3)
{
  sub_22261B6AC(v13);
  if (a3) {
    sub_222649758(a1, v13);
  }
  else {
    sub_222635CA4(a1, (uint64_t)v13);
  }
  while (sub_22261BABC((uint64_t)v13, 5))
    sub_222635CA4(a1, (uint64_t)v13);
  uint64_t result = sub_22261CB34((uint64_t)v13, 2);
  if (result)
  {
    sub_22262234C(v12);
    if ((**(_DWORD **)(a1 + 24) & 0x800041) != 0 && !sub_2225DF1DC(a1 + 824, v7))
    {
      int v8 = sub_2225C3B40(v13);
      sub_2225C3D00((int)v10, "//");
      sub_22261E3FC(v8, v10[0], v10[1], 0, (uint64_t)v11);
      sub_2226361D8((uint64_t)v12, v11);
      sub_2225F4E0C(v11);
    }
    sub_2226265A0(a1, v13, 799, (uint64_t)v11);
    uint64_t v9 = sub_22260A5E8((uint64_t *)v11, a2);
    sub_22261E3BC((uint64_t)v9, (uint64_t)v12);
    sub_2225F37F0(v11);
    sub_222635C58(a1);
    return sub_2225F4E0C(v12);
  }
  return result;
}

uint64_t sub_2226361D8(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 13) = *(void *)((char *)a2 + 13);
  *(_OWORD *)a1 = v4;
  sub_2225CCDE4(a1 + 24, (uint64_t)a2 + 24);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t sub_222636220(uint64_t a1, int a2, char a3, char a4, int a5)
{
  int v5 = a2;
  uint64_t v72 = *MEMORY[0x263EF8340];
  int v70 = a5;
  ++*(_DWORD *)(a1 + 1388);
  sub_222636A0C(*(void *)(a1 + 808), a2, 0, a3, a4);
  if (sub_2225DF1DC(a1 + 800, v7))
  {
    return (uint64_t)sub_222636A78(a1, v8);
  }
  *(unsigned char *)(*(void *)(a1 + 808) + 26) = 1;
  sub_22261B6AC(v69);
  uint64_t v11 = "def";
  while (1)
  {
    while (1)
    {
      uint64_t v12 = sub_2225CBA80(a1 + 792, v10);
      sub_22261F89C(v12, v69);
      if (!sub_22261BABC((uint64_t)v69, 3)) {
        break;
      }
      uint64_t v13 = *(void *)(a1 + 680);
      if (v13) {
        (*(void (**)(uint64_t))(*(void *)v13 + 24))(v13);
      }
      sub_222636060(a1);
    }
    if (sub_22261BABC((uint64_t)v69, 1)) {
      break;
    }
    if (!sub_22261CB34((uint64_t)v69, 65) && sub_22261BFBC((uint64_t)v69))
    {
      *(unsigned char *)(*(void *)(a1 + 808) + 24) = 1;
      if (sub_2225DF1DC(a1 + 792, v10))
      {
        uint64_t v15 = sub_2225CBA80(a1 + 792, v14);
        sub_22261B144(v15, 0);
      }
      sub_222635CA4(a1, (uint64_t)v69);
      if (sub_22261CB34((uint64_t)v69, 7)) {
        goto LABEL_16;
      }
      *(void *)&long long v67 = sub_22261BACC((uint64_t)v69);
      *((void *)&v67 + 1) = v18;
      int v19 = sub_2225CC124(&v67, 0);
      if ((v19 - 97) <= 0x19 && v19 != 101 && v19 != 105) {
        goto LABEL_16;
      }
      sub_2225CCC70(&v66);
      if ((sub_2225C3AB8((uint64_t)v69) & 1) == 0 && (unint64_t)sub_2225C3D04((uint64_t)&v67) <= 0x13)
      {
        long long v66 = v67;
        goto LABEL_26;
      }
      sub_22261F294(a1, v69, 0, &v65);
      unsigned int v22 = sub_2225CB920((uint64_t)&v65, v20);
      if (v22 >= 0x14)
      {
        *(unsigned char *)(*(void *)(a1 + 808) + 24) = 0;
        if (sub_2225DF1DC(a1 + 792, v21))
        {
          uint64_t v30 = sub_2225CBA80(a1 + 792, v29);
          sub_22261B0D0(v30);
        }
        std::string::~string(&v65);
      }
      else
      {
        uint64_t v23 = (const void *)sub_2225CB8F8((uint64_t)&v65, 0);
        memcpy(__dst, v23, v22);
        sub_2225C3D0C(&v64, __dst, v22);
        long long v66 = v64;
        std::string::~string(&v65);
LABEL_26:
        sub_2225C3D00((int)v63, "if");
        if (sub_2225D0520((uint64_t)&v66, v63[0], (size_t)v63[1]))
        {
          v65.__r_.__value_.__r.__words[0] = sub_2225CE76C(&v66, 2uLL, 0xFFFFFFFFFFFFFFFFLL);
          v65.__r_.__value_.__l.__size_ = v24;
          if (sub_2225CF1E0((uint64_t)&v65)
            || (long long v25 = *(_OWORD *)&v65.__r_.__value_.__l.__data_,
                sub_2225C3D00((int)v62, v11),
                sub_2225CD4BC(v25, *((uint64_t *)&v25 + 1), v62[0], (size_t)v62[1]))
            || (long long v26 = *(_OWORD *)&v65.__r_.__value_.__l.__data_,
                sub_2225C3D00((int)v61, "ndef"),
                sub_2225CD4BC(v26, *((uint64_t *)&v26 + 1), v61[0], (size_t)v61[1])))
          {
            sub_222635C58(a1);
            uint64_t v27 = *(void *)(a1 + 808);
            int v28 = sub_2225C3B40(v69);
            sub_222636A0C(v27, v28, 1, 0, 0);
          }
        }
        else if (sub_2225CC124(&v66, 0) == 101)
        {
          uint64_t v31 = sub_2225CE76C(&v66, 1uLL, 0xFFFFFFFFFFFFFFFFLL);
          uint64_t v33 = v32;
          sub_2225C3D00((int)v60, "ndif");
          if (sub_2225CD4BC(v31, v33, v60[0], (size_t)v60[1]))
          {
            sub_22261B6AC(&v65);
            v65.__r_.__value_.__s.__data_[4] = 1;
            sub_222636BD8(*(void *)(a1 + 808), (uint64_t)&v65);
            if (!v65.__r_.__value_.__s.__data_[4])
            {
              *(unsigned char *)(*(void *)(a1 + 808) + 26) = 0;
              uint64_t result = sub_222636094(a1, (uint64_t)"endif", 0);
              *(unsigned char *)(*(void *)(a1 + 808) + 26) = 1;
              uint64_t v47 = *(void *)(a1 + 872);
              if (v47)
              {
                unsigned int v48 = sub_2225C3B40(v69);
                uint64_t result = (*(uint64_t (**)(uint64_t, void, void))(*(void *)v47 + 248))(v47, v48, LODWORD(v65.__r_.__value_.__l.__data_));
              }
              goto LABEL_59;
            }
LABEL_54:
            sub_222635C58(a1);
            goto LABEL_16;
          }
          sub_2225C3D00((int)v59, "lse");
          if (sub_2225CD4BC(v31, v33, v59[0], (size_t)v59[1]))
          {
            BOOL v34 = (unsigned __int8 *)sub_222636C34(*(void *)(a1 + 808));
            if (v34[6])
            {
              sub_2226265A0(a1, v69, 837, (uint64_t)v58);
              sub_2225F37F0(v58);
            }
            v34[6] = 1;
            if (!(v34[4] | v34[5]))
            {
              v34[5] = 1;
              *(unsigned char *)(*(void *)(a1 + 808) + 26) = 0;
              uint64_t result = sub_222636094(a1, (uint64_t)"else", 0);
              *(unsigned char *)(*(void *)(a1 + 808) + 26) = 1;
              uint64_t v49 = *(void *)(a1 + 872);
              if (v49)
              {
                unsigned int v50 = sub_2225C3B40(v69);
                uint64_t result = (*(uint64_t (**)(uint64_t, void, void))(*(void *)v49 + 240))(v49, v50, *(unsigned int *)v34);
              }
              goto LABEL_59;
            }
            goto LABEL_54;
          }
          sub_2225C3D00((int)v57, "lif");
          if (sub_2225CD4BC(v31, v33, v57[0], (size_t)v57[1]))
          {
            unsigned int v35 = (unsigned __int8 *)sub_222636C34(*(void *)(a1 + 808));
            if (v35[6])
            {
              sub_2226265A0(a1, v69, 835, (uint64_t)v56);
              sub_2225F37F0(v56);
            }
            if (v35[4] | v35[5]) {
              goto LABEL_54;
            }
            int v53 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
            *(unsigned char *)(*(void *)(a1 + 808) + 26) = 0;
            v65.__r_.__value_.__r.__words[0] = 0;
            uint64_t result = sub_22263C938(a1, &v65);
            char v36 = result;
            *(unsigned char *)(*(void *)(a1 + 808) + 26) = 1;
            if (*(void *)(a1 + 872))
            {
              int v52 = result;
              uint64_t v37 = v11;
              int v38 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
              uint64_t v39 = *(void *)(a1 + 872);
              unsigned int v51 = sub_2225C3B40(v69);
              int v40 = v38;
              uint64_t v11 = v37;
              char v36 = v52;
              sub_22261F184(&v55, v53, v40);
              if (v52) {
                uint64_t v41 = 2;
              }
              else {
                uint64_t v41 = 1;
              }
              uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)v39 + 216))(v39, v51, v55, v41, *(unsigned int *)v35);
            }
            if (v36)
            {
              v35[5] = 1;
              goto LABEL_59;
            }
          }
        }
LABEL_16:
        *(unsigned char *)(*(void *)(a1 + 808) + 24) = 0;
        if (sub_2225DF1DC(a1 + 792, v16))
        {
          uint64_t v17 = sub_2225CBA80(a1 + 792, v10);
          sub_22261B0D0(v17);
        }
      }
    }
  }
  for (uint64_t result = sub_2225CF1D0((void *)(*(void *)(a1 + 808) + 64));
        (result & 1) == 0;
        uint64_t result = sub_2225CF1D0((void *)(*(void *)(a1 + 808) + 64)))
  {
    uint64_t v43 = sub_2225CBA80(a1 + 792, v42);
    LODWORD(v65.__r_.__value_.__l.__data_) = sub_222636BD0(v43);
    if (sub_22261FB84((unsigned int *)&v65, (unsigned int *)(a1 + 704)))
    {
      unsigned int v44 = (unsigned int *)sub_222608644(*(void *)(a1 + 808) + 64);
      sub_22261CABC(a1, *v44, 751, (uint64_t)v68);
      sub_2225F37F0(v68);
    }
    sub_222608660(*(void *)(a1 + 808) + 64);
  }
LABEL_59:
  *(unsigned char *)(*(void *)(a1 + 808) + 26) = 0;
  if (*(void *)(a1 + 872))
  {
    if (sub_2225CDBBC(&v70)) {
      int v5 = v70;
    }
    uint64_t v45 = *(void *)(a1 + 872);
    int v46 = sub_2225C3B40(v69);
    sub_22261F184(&v54, v5, v46);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v45 + 200))(v45, v54);
  }
  return result;
}

uint64_t sub_222636A0C(uint64_t a1, int a2, char a3, char a4, char a5)
{
  sub_22261B6AC(&v11);
  LODWORD(v11) = a2;
  BYTE4(v11) = a3;
  BYTE5(v11) = a4;
  BYTE6(v11) = a5;
  return sub_2225CC7B8(a1 + 64, &v11);
}

unsigned char *sub_222636A78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 800;
  while (1)
  {
    long long v4 = (void *)sub_2225CBA80(v3, a2);
    if (sub_222646B14(v4, v5)) {
      break;
    }
    sub_22261B6AC(v20);
    sub_222635CA4(a1, (uint64_t)v20);
    uint64_t v6 = sub_22261AF2C((uint64_t)v20);
    int v7 = sub_222606C48(v6);
    uint64_t v9 = sub_2225CBA80(v3, v8);
    uint64_t result = (unsigned char *)sub_222636C34(v9);
    uint64_t v11 = result;
    if (v7 == 5)
    {
      result[6] = 1;
      if (!result[5])
      {
        result[5] = 1;
        *(unsigned char *)(sub_2225CBA80(v3, a2) + 24) = 1;
        sub_222635C58(a1);
        uint64_t result = (unsigned char *)sub_2225CBA80(v3, v17);
        result[24] = 0;
        return result;
      }
LABEL_11:
      int v14 = 2;
      goto LABEL_12;
    }
    if (result[6])
    {
      sub_2226265A0(a1, v20, 835, (uint64_t)v19);
      uint64_t result = (unsigned char *)sub_2225F37F0(v19);
    }
    if (v11[5]) {
      goto LABEL_11;
    }
    uint64_t v18 = 0;
    *(unsigned char *)(sub_2225CBA80(v3, a2) + 24) = 1;
    int v12 = sub_22263C938(a1, &v18);
    uint64_t result = (unsigned char *)sub_2225CBA80(v3, v13);
    result[24] = 0;
    if (!v12) {
      goto LABEL_11;
    }
    void v11[5] = 1;
    int v14 = 3;
LABEL_12:
    if (v14 == 3) {
      return result;
    }
  }
  sub_22261B6AC(v20);
  uint64_t v16 = sub_2225CBA80(v3, v15);
  return (unsigned char *)sub_222636BD8(v16, (uint64_t)v20);
}

uint64_t sub_222636BD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 136);
}

BOOL sub_222636BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 64;
  BOOL v4 = sub_2225CF1D0((void *)(a1 + 64));
  if (!v4)
  {
    uint64_t v5 = sub_22263BB8C(v3);
    *(_DWORD *)a2 = v5;
    *(unsigned char *)(a2 + 6) = BYTE6(v5);
    *(_WORD *)(a2 + 4) = WORD2(v5);
  }
  return v4;
}

uint64_t sub_222636C34(uint64_t a1)
{
  return sub_222608644(a1 + 64);
}

uint64_t sub_222636C3C(uint64_t a1, unsigned int a2)
{
  BOOL v4 = (uint64_t *)sub_222616724(*(void *)(a1 + 64));
  if (sub_22260DA90(*(void *)(a1 + 48), a2))
  {
    uint64_t result = sub_222648F30(a1);
    if (!result) {
      return *(void *)(sub_222616724(*(void *)(a1 + 64)) + 296);
    }
  }
  else
  {
    uint64_t v6 = *(_DWORD **)(a1 + 48);
    int v7 = sub_2225F757C(v6, a2);
    unsigned int v8 = sub_222609AF8(v6, v7);
    unint64_t v9 = sub_22262CE08(*(void *)(a1 + 48), v8);
    if (v9)
    {
      uint64_t v11 = sub_222628BA8(v4, v9, 0);
      return sub_22261964C(&v11, v10);
    }
    else
    {
      return sub_222648F30(a1);
    }
  }
  return result;
}

uint64_t sub_222636D20(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t *a7, const void **a8, const void **a9, const void **a10, char a11)
{
  int v19 = a9;
  uint64_t v18 = a10;
  uint64_t v77 = *MEMORY[0x263EF8340];
  sub_2226370D8(v76);
  if (a6) {
    goto LABEL_16;
  }
  unsigned int v66 = a2;
  uint64_t v21 = a8;
  uint64_t v22 = sub_22263F148(a1, v20);
  unsigned int v23 = sub_2225F514C(v22);
  unint64_t v24 = sub_22262CE08(*(void *)(a1 + 48), v23);
  unint64_t v75 = v24;
  uint64_t v25 = a3;
  if (v24)
  {
    uint64_t v26 = sub_222608330(v24);
  }
  else
  {
    uint64_t v27 = *(void *)(a1 + 48);
    unsigned int v28 = sub_2226370DC(v27);
    unint64_t v75 = sub_22262CE08(v27, v28);
    if (!v75) {
      goto LABEL_7;
    }
    uint64_t v29 = *(void *)(a1 + 40);
    sub_2225C3D00((int)v72, ".");
    uint64_t v26 = (uint64_t)sub_2225F8658(v29, v72[0], v72[1], 1);
  }
  uint64_t v73 = v26;
  *(void *)&long long v74 = sub_2225C5EEC((uint64_t)&v75, (uint64_t)&v73);
  *((void *)&v74 + 1) = v30;
  sub_2225CC69C((uint64_t)v76, &v74);
LABEL_7:
  if ((**(unsigned char **)(a1 + 24) & 4) != 0 && (a5 & 1) == 0)
  {
    unsigned int v31 = sub_2226339BC((void *)(a1 + 848));
    uint64_t v32 = v31;
    if (v31)
    {
      unsigned int v33 = v31 - 1;
      do
      {
        uint64_t v34 = sub_2226370E4((void *)(a1 + 848), v33);
        if (sub_2226370F4(v34, v35))
        {
          uint64_t v36 = *(void *)(a1 + 48);
          unsigned int v37 = sub_2225F514C(*(void *)(v34 + 32));
          unint64_t v38 = sub_22262CE08(v36, v37);
          unint64_t v75 = v38;
          if (v38)
          {
            uint64_t v73 = sub_222608330(v38);
            *(void *)&long long v74 = sub_2225C5EEC((uint64_t)&v75, (uint64_t)&v73);
            *((void *)&v74 + 1) = v39;
            sub_2225CC69C((uint64_t)v76, &v74);
          }
        }
        --v33;
        --v32;
      }
      while (v32);
    }
  }
  a3 = v25;
  a8 = v21;
  uint64_t v18 = a10;
  int v19 = a9;
  a6 = 0;
  a2 = v66;
LABEL_16:
  uint64_t v68 = a7;
  *a7 = *(void *)(a1 + 816);
  uint64_t v40 = *(void *)(a1 + 64);
  sub_2225DF148(v71, v76);
  unsigned int v41 = a2;
  uint64_t v42 = v19;
  unsigned int v67 = v41;
  uint64_t v44 = sub_222617ABC(v40, a3, a4, v41, a5, a6, v68, v43, v71[0], v71[1], a8, v19, v18, a11);
  if (v44) {
    goto LABEL_17;
  }
  unsigned int v50 = a8;
  if (sub_222637130(a1, v45))
  {
    uint64_t v51 = a3;
    uint64_t v52 = *(void *)(a1 + 48);
    unsigned int v53 = sub_2225F514C(*(void *)(a1 + 808));
    uint64_t v54 = v52;
    a3 = v51;
    unint64_t v55 = sub_22262CE08(v54, v53);
    if (v55)
    {
      uint64_t v44 = sub_222618710(*(void *)(a1 + 64), v51, a4, v55, v50, v42, v18);
      if (v44)
      {
LABEL_17:
        uint64_t v46 = v44;
        if (!v18 || (*(unsigned char *)(*(void *)(a1 + 24) + 2) & 0x40) != 0) {
          goto LABEL_30;
        }
LABEL_19:
        uint64_t v47 = a3;
        unsigned int v48 = (uint64_t *)sub_222616724(*(void *)(a1 + 64));
        uint64_t v49 = sub_222636C3C(a1, v67);
        sub_2226286D0(v48, v49, v67, v47, a4, v46);
        goto LABEL_30;
      }
    }
  }
  unsigned int v56 = sub_2226339BC((void *)(a1 + 848));
  uint64_t v57 = v56;
  if (!v56)
  {
LABEL_29:
    uint64_t v46 = 0;
    goto LABEL_30;
  }
  uint64_t v70 = a3;
  unsigned int v58 = v56 - 1;
  while (1)
  {
    uint64_t v59 = sub_2226370E4((void *)(a1 + 848), v58);
    if (sub_2226370F4(v59, v60))
    {
      uint64_t v61 = *(void *)(a1 + 48);
      unsigned int v62 = sub_2225F514C(*(void *)(v59 + 32));
      unint64_t v63 = sub_22262CE08(v61, v62);
      if (v63)
      {
        uint64_t v64 = sub_222618710(*(void *)(a1 + 64), v70, a4, v63, v50, v42, v18);
        if (v64) {
          break;
        }
      }
    }
    --v58;
    if (!--v57) {
      goto LABEL_29;
    }
  }
  uint64_t v46 = v64;
  if (v18)
  {
    a3 = v70;
    if ((*(unsigned char *)(*(void *)(a1 + 24) + 2) & 0x40) == 0) {
      goto LABEL_19;
    }
  }
LABEL_30:
  sub_2225C56C4(v76);
  return v46;
}

uint64_t sub_2226370DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 576);
}

uint64_t sub_2226370E4(void *a1, uint64_t a2)
{
  return *a1 + 56 * a2;
}

uint64_t sub_2226370F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225CBA80(a1 + 16, a2);
  uint64_t v4 = *(void *)(a1 + 32);

  return sub_22263BBC0(v3, v4);
}

uint64_t sub_222637130(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225CBA80(a1 + 792, a2);
  uint64_t v4 = *(void *)(a1 + 808);

  return sub_22263BBC0(v3, v4);
}

unsigned char *sub_22263716C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(*(void *)(a1 + 808) + 24) = 1;
  uint64_t v4 = a1 + 792;
  if (sub_2225DF1DC(a1 + 792, a2))
  {
    uint64_t v6 = sub_2225CBA80(v4, v5);
    sub_22261B144(v6, 0);
  }
  int v7 = sub_2226153B4(*(void *)(a1 + 808) + 32);
  sub_222627E78(*(void *)(a1 + 808) + 32);
  ++*(_DWORD *)(a1 + 1328);
  char v8 = sub_2226376DC((unsigned __int8 *)(*(void *)(a1 + 808) + 32));
  *(_OWORD *)unint64_t v38 = *(_OWORD *)a2;
  *(void *)&v38[16] = *(void *)(a2 + 16);
  sub_222635CA4(a1, a2);
  if (sub_222606BF8(*(void *)(a1 + 24)) && sub_2226376E4(a2))
  {
    sub_2226265A0(a1, (unsigned int *)a2, 633, (uint64_t)v37);
    uint64_t v9 = sub_22261AF2C(a2);
    sub_222635F48(v37, v9);
    return (unsigned char *)sub_2225F37F0(v37);
  }
  if ((*(_WORD *)(a1 + 436) & 8) != 0)
  {
    uint64_t v11 = sub_22261AF2C(a2);
    if (v11)
    {
      uint64_t v12 = v11;
      unsigned int v13 = sub_222606C48(v11);
      if (v13 <= 0x10 && ((1 << v13) & 0x18300) != 0)
      {
        sub_2226265A0(a1, (unsigned int *)a2, 629, (uint64_t)v37);
        uint64_t v14 = sub_2225F2418(v12);
        sub_2225F3774(v37, v14, v15);
        sub_2225F37F0(v37);
        return (unsigned char *)sub_222635C58(a1);
      }
    }
    sub_2226265A0(a1, (unsigned int *)a2, 779, (uint64_t)v36);
    sub_2225F37F0(v36);
  }
  sub_22263775C((uint64_t)v37, a1);
  int v16 = sub_22261BFB4(a2);
  if (v16 != 2)
  {
    if (v16 != 8)
    {
      if (v16 == 3)
      {
        uint64_t v17 = *(void *)(a1 + 680);
        if (v17)
        {
          BOOL v18 = sub_222637760(*(void *)(a1 + 808)) != 0;
          (*(void (**)(uint64_t, BOOL))(*(void *)v17 + 16))(v17, v18);
        }
        sub_222636060(a1);
        return sub_22263A870(v37);
      }
      uint64_t v19 = sub_22261AF2C(a2);
      if (v19)
      {
        switch(sub_222606C48(v19))
        {
          case 1u:
            sub_222637A20(a1, (unsigned int *)a2, v8);
            return sub_22263A870(v37);
          case 2u:
            uint64_t v22 = a1;
            unsigned int v23 = (long long *)a2;
            int v24 = 0;
            char v25 = 1;
            goto LABEL_32;
          case 3u:
            uint64_t v22 = a1;
            unsigned int v23 = (long long *)a2;
            int v24 = 1;
            char v25 = v8;
LABEL_32:
            sub_222637BE4(v22, v23, v24, v25);
            return sub_22263A870(v37);
          case 4u:
            sub_222637E20(a1, (unsigned int *)a2);
            return sub_22263A870(v37);
          case 5u:
            sub_222637FC0(a1, (unsigned int *)a2);
            return sub_22263A870(v37);
          case 6u:
            sub_2226380E8(a1, (unsigned int *)a2);
            return sub_22263A870(v37);
          case 8u:
            unsigned int v26 = sub_2225C3B40((unsigned int *)v38);
            sub_2226381C0(a1, v26, (unsigned int *)a2, 0, 0);
            return sub_22263A870(v37);
          case 9u:
            unsigned int v27 = sub_2225C3B40((unsigned int *)v38);
            sub_2226390D0(a1, v27, (unsigned int *)a2);
            return sub_22263A870(v37);
          case 0xAu:
            sub_2226391A0(a1, (unsigned int *)a2, v7);
            return sub_22263A870(v37);
          case 0xBu:
            sub_2226399EC(a1);
            return sub_22263A870(v37);
          case 0xCu:
            sub_222639B74(a1);
            return sub_22263A870(v37);
          case 0xDu:
            uint64_t v28 = a1;
            uint64_t v29 = (unsigned int *)a2;
            int v30 = 0;
            goto LABEL_43;
          case 0xEu:
            unsigned int v20 = sub_2225C3B40((unsigned int *)v38);
            sub_2226475AC(a1, v20, 0);
            return sub_22263A870(v37);
          case 0xFu:
            unsigned int v21 = sub_2225C3B40((unsigned int *)v38);
            sub_222639F44(a1, v21, (unsigned int *)a2);
            return sub_22263A870(v37);
          case 0x10u:
            unsigned int v31 = sub_2225C3B40((unsigned int *)v38);
            sub_222639FEC(a1, v31, (unsigned int *)a2);
            return sub_22263A870(v37);
          case 0x11u:
            sub_2226265A0(a1, (unsigned int *)a2, 810, (uint64_t)v35);
            sub_2225F37F0(v35);
            uint64_t v28 = a1;
            uint64_t v29 = (unsigned int *)a2;
            int v30 = 1;
LABEL_43:
            sub_222639E3C(v28, v29, v30);
            break;
          case 0x12u:
          case 0x13u:
            sub_22263A0A8(a1, (unsigned int *)a2);
            break;
          case 0x16u:
            if ((*(unsigned char *)(sub_222608330(a1) + 6) & 0x10) == 0) {
              goto LABEL_45;
            }
            sub_22263A6C8(a1);
            break;
          case 0x17u:
            if ((*(unsigned char *)(sub_222608330(a1) + 6) & 0x10) == 0) {
              goto LABEL_45;
            }
            sub_22263A79C(a1);
            break;
          case 0x18u:
            sub_22263A200((uint64_t *)a1, (unsigned int *)a2);
            break;
          case 0x19u:
            sub_22263A430(a1, (unsigned int *)a2);
            break;
          default:
            goto LABEL_45;
        }
        return sub_22263A870(v37);
      }
LABEL_45:
      if ((*(unsigned char *)(sub_222608330(a1) + 2) & 0x40) != 0)
      {
        uint64_t v32 = sub_2225C26A4(48);
        for (uint64_t i = 0; i != 48; i += 24)
          sub_22261B6AC(v32 + i);
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v38;
        *(_DWORD *)(v32 + 15) = *(_DWORD *)&v38[15];
        *(_OWORD *)(v32 + 24) = *(_OWORD *)a2;
        *(_DWORD *)(v32 + 39) = *(_DWORD *)(a2 + 15);
        if (sub_22261BABC(a2, 66)) {
          sub_22261F2AC(v32 + 24, 0);
        }
        sub_22263F714(a1, v32, 2, 0, 1);
      }
      else
      {
        sub_2226265A0(a1, (unsigned int *)a2, 730, (uint64_t)v34);
        sub_2225F37F0(v34);
        sub_222635C58(a1);
      }
      return sub_22263A870(v37);
    }
    if ((*(unsigned char *)(sub_222608330(a1) + 2) & 0x40) != 0) {
      goto LABEL_45;
    }
    sub_22263777C(a1, (unsigned int *)a2);
  }
  return sub_22263A870(v37);
}

uint64_t sub_2226376DC(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_2226376E4(uint64_t a1)
{
  int v2 = sub_22261BFB4(a1);
  switch(v2)
  {
    case 2:
      return 0;
    case 8:
      return 1;
    case 3:
      return 1;
  }
  uint64_t v3 = sub_22261AF2C(a1);
  if (!v3) {
    return 1;
  }
  unsigned int v4 = sub_222606C48(v3);
  if (v4 <= 0x19) {
    return (0xFF8381u >> v4) & 1;
  }
  else {
    return 1;
  }
}

uint64_t sub_222637760(uint64_t a1)
{
  return sub_2225CC780(a1 + 64);
}

uint64_t sub_22263777C(uint64_t a1, unsigned int *a2)
{
  int v31 = 0;
  uint64_t result = sub_22263A874(a2, (unsigned int *)&v31, 740, a1, 1u);
  if (result) {
    return result;
  }
  sub_22261B6AC(v30);
  sub_222649758(a1, v30);
  __int16 v29 = 0;
  __int16 v28 = 0;
  if (!sub_22261BABC((uint64_t)v30, 2))
  {
    if (sub_22261CB34((uint64_t)v30, 13))
    {
      sub_2226265A0(a1, v30, 737, (uint64_t)v27);
      uint64_t v17 = v27;
    }
    else
    {
      if (!sub_22262D3B0((uint64_t)v30))
      {
        sub_22261870C(v24, (uint64_t)v30);
        sub_222625168(v25, v24[0], v24[1], a1, 1);
        if (!v25[656])
        {
          if (!v25[657])
          {
            uint64_t v18 = *(void *)(a1 + 48);
            uint64_t v19 = sub_22262D3C0((uint64_t)v25);
            int v9 = sub_22260AAD0(v18, v19, v20);
            char v21 = sub_22263AA84((unsigned char *)&v29 + 1, &v29, (unsigned char *)&v28 + 1, &v28, a1);
            uint64_t result = sub_22262D410((uint64_t)v25);
            if (v21) {
              return result;
            }
            int v8 = HIBYTE(v29);
            int v7 = v29;
            unsigned int v6 = HIBYTE(v28);
            int v5 = v28;
            goto LABEL_4;
          }
          sub_2226265A0(a1, v30, 737, (uint64_t)v23);
          sub_2225F37F0(v23);
        }
        sub_222635C58(a1);
        return sub_22262D410((uint64_t)v25);
      }
      sub_2226265A0(a1, v30, 19, (uint64_t)v26);
      uint64_t v17 = v26;
    }
    sub_2225F37F0(v17);
    return sub_222635C58(a1);
  }
  int v5 = 0;
  unsigned int v6 = 0;
  int v7 = 0;
  int v8 = 0;
  int v9 = -1;
LABEL_4:
  uint64_t v10 = *(void *)(a1 + 48);
  int v11 = sub_2225C3B40(a2);
  uint64_t result = sub_22260ACD0(v10, v11, v31, v9, v8 != 0, v7 != 0, v6 != 0, v5 != 0);
  uint64_t v12 = *(void *)(a1 + 872);
  if (v12)
  {
    if (v7) {
      unsigned int v13 = 1;
    }
    else {
      unsigned int v13 = 3;
    }
    if (v8) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v13;
    }
    if (v5) {
      uint64_t v15 = 2;
    }
    else {
      uint64_t v15 = v6;
    }
    unsigned int v16 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
    sub_2225F3278(&v22);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)v12 + 16))(v12, v16, v14, v15, v22);
  }
  return result;
}