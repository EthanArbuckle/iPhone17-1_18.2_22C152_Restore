uint64_t sub_222637A20(uint64_t a1, unsigned int *a2, char a3)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  ++*(_DWORD *)(a1 + 1344);
  v21 = 0;
  v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
  v7 = sub_22263C938(a1, &v21);
  v8 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
  if (!sub_222637760(*(void *)(a1 + 808)))
  {
    v9 = *(void *)(a1 + 808) + 32;
    if (a3 & 1) != 0 || (v10 = v21) == 0 || ((v7 ^ 1))
    {
      sub_22263B990(v9);
    }
    else
    {
      v11 = sub_2225C3B40(a2);
      sub_22263B968(v9, v10, v11);
    }
  }
  v12 = *(void *)(a1 + 872);
  if (v12)
  {
    v13 = sub_2225C3B40(a2);
    sub_22261F184(&v20, v6, v8);
    if (v7) {
      v14 = 2;
    }
    else {
      v14 = 1;
    }
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)v12 + 208))(v12, v13, v20, v14);
  }
  if (v7)
  {
    v15 = *(void *)(a1 + 808);
    v16 = sub_2225C3B40(a2);
    return sub_222636A0C(v15, v16, 0, 1, 0);
  }
  else
  {
    v18 = sub_2225C3B40(a2);
    sub_2225F3278(&v19);
    return sub_222636220(a1, v18, 0, 0, v19);
  }
}

uint64_t sub_222637BE4(uint64_t a1, long long *a2, int a3, char a4)
{
  ++*(_DWORD *)(a1 + 1344);
  long long v29 = *a2;
  uint64_t v30 = *((void *)a2 + 2);
  sub_22261B6AC(v28);
  sub_222635F80(a1, v28, 0);
  if (sub_22261BABC((uint64_t)v28, 2))
  {
    int v7 = sub_2225C3B40((unsigned int *)&v29);
    sub_2225F3278(&v27);
    int v8 = v7;
    int v9 = v27;
    return sub_222636220(a1, v8, 0, 0, v9);
  }
  if (a3) {
    v10 = "ifndef";
  }
  else {
    v10 = "ifdef";
  }
  sub_222636094(a1, (uint64_t)v10, 0);
  uint64_t v11 = sub_22261AF2C((uint64_t)v28);
  uint64_t v12 = sub_222626928(a1, v11);
  uint64_t v13 = v12;
  if (v12) {
    v14 = (unsigned int *)sub_222626980(v12);
  }
  else {
    v14 = 0;
  }
  if (sub_222637760(*(void *)(a1 + 808)))
  {
    if (v14)
    {
LABEL_11:
      sub_222642E08(a1, v14);
      int v15 = 0;
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 808);
    uint64_t v17 = v16 + 32;
    if ((a4 & 1) != 0 || v14)
    {
      sub_22263B990(v16 + 32);
      if (v14) {
        goto LABEL_11;
      }
    }
    else
    {
      int v18 = sub_2225C3B40(v28);
      sub_22263B968(v17, v11, v18);
    }
  }
  int v15 = 1;
LABEL_17:
  v19 = *(uint64_t **)(a1 + 872);
  if (v19)
  {
    uint64_t v20 = sub_2225C3B40((unsigned int *)&v29);
    uint64_t v21 = *v19;
    if (a3) {
      (*(void (**)(uint64_t *, uint64_t, unsigned int *, uint64_t))(v21 + 232))(v19, v20, v28, v13);
    }
    else {
      (*(void (**)(uint64_t *, uint64_t, unsigned int *, uint64_t))(v21 + 224))(v19, v20, v28, v13);
    }
  }
  if (v15 != a3)
  {
    int v22 = sub_2225C3B40((unsigned int *)&v29);
    sub_2225F3278(&v26);
    int v8 = v22;
    int v9 = v26;
    return sub_222636220(a1, v8, 0, 0, v9);
  }
  uint64_t v24 = *(void *)(a1 + 808);
  int v25 = sub_2225C3B40((unsigned int *)&v29);
  return sub_222636A0C(v24, v25, 0, 1, 0);
}

uint64_t sub_222637E20(uint64_t a1, unsigned int *a2)
{
  ++*(_DWORD *)(a1 + 1348);
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
  sub_222635C58(a1);
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
  sub_22261B6AC(&v15);
  if (sub_222636BD8(*(void *)(a1 + 808), (uint64_t)&v15))
  {
    sub_2226265A0(a1, a2, 836, (uint64_t)v14);
    return sub_2225F37F0(v14);
  }
  else
  {
    if (!sub_222637760(*(void *)(a1 + 808))) {
      sub_22263B990(*(void *)(a1 + 808) + 32);
    }
    if (v16)
    {
      sub_2226265A0(a1, a2, 835, (uint64_t)v13);
      sub_2225F37F0(v13);
    }
    uint64_t v7 = *(void *)(a1 + 872);
    if (v7)
    {
      unsigned int v8 = sub_2225C3B40(a2);
      sub_22261F184(&v12, v4, v5);
      (*(void (**)(uint64_t, void, uint64_t, void, void))(*(void *)v7 + 216))(v7, v8, v12, 0, v15);
    }
    int v9 = v15;
    char v10 = v16;
    int v11 = sub_2225C3B40(a2);
    return sub_222636220(a1, v9, 1, v10, v11);
  }
}

uint64_t sub_222637FC0(uint64_t a1, unsigned int *a2)
{
  ++*(_DWORD *)(a1 + 1348);
  sub_222636094(a1, (uint64_t)"else", 0);
  sub_22261B6AC(&v11);
  if (sub_222636BD8(*(void *)(a1 + 808), (uint64_t)&v11))
  {
    sub_2226265A0(a1, a2, 838, (uint64_t)v10);
    return sub_2225F37F0(v10);
  }
  else
  {
    if (!sub_222637760(*(void *)(a1 + 808))) {
      sub_22263B990(*(void *)(a1 + 808) + 32);
    }
    if (v12)
    {
      sub_2226265A0(a1, a2, 837, (uint64_t)v9);
      sub_2225F37F0(v9);
    }
    uint64_t v5 = *(void *)(a1 + 872);
    if (v5)
    {
      unsigned int v6 = sub_2225C3B40(a2);
      (*(void (**)(uint64_t, void, void))(*(void *)v5 + 240))(v5, v6, v11);
    }
    int v7 = v11;
    int v8 = sub_2225C3B40(a2);
    return sub_222636220(a1, v7, 1, 1, v8);
  }
}

uint64_t sub_2226380E8(uint64_t a1, unsigned int *a2)
{
  ++*(_DWORD *)(a1 + 1352);
  sub_222636094(a1, (uint64_t)"endif", 0);
  sub_22261B6AC(&v8);
  if (sub_222636BD8(*(void *)(a1 + 808), (uint64_t)&v8))
  {
    sub_2226265A0(a1, a2, 708, (uint64_t)v7);
    return sub_2225F37F0(v7);
  }
  else
  {
    uint64_t result = sub_222637760(*(void *)(a1 + 808));
    if (!result) {
      uint64_t result = sub_22263B994(*(void *)(a1 + 808) + 32);
    }
    uint64_t v5 = *(void *)(a1 + 872);
    if (v5)
    {
      unsigned int v6 = sub_2225C3B40(a2);
      return (*(uint64_t (**)(uint64_t, void, void))(*(void *)v5 + 248))(v5, v6, v8);
    }
  }
  return result;
}

uint64_t sub_2226381C0(uint64_t a1, unsigned int a2, unsigned int *a3, uint64_t a4, int a5)
{
  uint64_t v200 = *MEMORY[0x263EF8340];
  sub_22261B6AC(v198);
  sub_22264AA28(*(void *)(a1 + 808), v198);
  sub_2225CF794(v197);
  sub_2225CCC70(&v196);
  sub_2225F3278(&v195);
  sub_2225F3278(&v194);
  int v10 = sub_22261BFB4((uint64_t)v198);
  if (v10 > 14)
  {
    if (v10 == 46)
    {
      LOBYTE(v186[0]) = 60;
      sub_2225C52D8((uint64_t)v197, v186);
      if (sub_22263AF68(a1, v197, &v195)) {
        return sub_2225CA520(v197);
      }
      *(void *)&long long v196 = sub_2225CA4D0((uint64_t)v197);
      *((void *)&v196 + 1) = v23;
      int v13 = 1;
LABEL_8:
      int v194 = sub_22260C644(&v195, v13);
      int v14 = sub_2225C3B40(v198);
      uint64_t v15 = sub_222622214(v14, v194);
      unsigned int v17 = v16;
      long long v18 = v196;
      unsigned int v19 = sub_2225C3B40(v198);
      unsigned int v20 = sub_22263AE30(a1, v19, (uint64_t *)&v196);
      if (sub_2225CF1E0((uint64_t)&v196)) {
        goto LABEL_9;
      }
      uint64_t v21 = sub_22261AF2C((uint64_t)a3);
      uint64_t v22 = sub_2225F2DB8(v21);
      sub_222636094(a1, v22, 1);
      if (sub_2226339BC((void *)(a1 + 848)) == 199)
      {
        sub_2226265A0(a1, v198, 729, (uint64_t)v192);
        sub_2225F37F0(v192);
        return sub_2225CA520(v197);
      }
      if (sub_2225CDBBC((_DWORD *)(a1 + 772)))
      {
        sub_22261CABC(a1, a2, 727, (uint64_t)v191);
        sub_2225F37F0(v191);
        sub_22261CABC(a1, *(_DWORD *)(a1 + 772), 54, (uint64_t)v190);
        sub_2225F37F0(v190);
        sub_2225F3278(v186);
        *(_DWORD *)(a1 + 772) = v186[0];
      }
      unsigned int v160 = v17;
      if (sub_2225CDBBC((_DWORD *)(a1 + 776)))
      {
        sub_22261CABC(a1, a2, 728, (uint64_t)v189);
        sub_2225F37F0(v189);
        sub_22261CABC(a1, *(_DWORD *)(a1 + 776), 54, (uint64_t)v188);
        sub_2225F37F0(v188);
        sub_2225F3278(v186);
        *(_DWORD *)(a1 + 776) = v186[0];
      }
      if (sub_22263B110(*(void *)(a1 + 64), v24))
      {
        *(void *)&v186[0] = sub_22263B118(*(void *)(a1 + 64), v18, *((uint64_t *)&v18 + 1));
        *((void *)&v186[0] + 1) = v25;
        if (!sub_2225CF1E0((uint64_t)v186)) {
          long long v196 = v186[0];
        }
      }
      int v158 = a5;
      uint64_t v187 = 0;
      sub_222616240(v186);
      sub_222616240(v185);
      sub_222618400((uint64_t)&v184);
      unsigned int v26 = sub_2225C3B40(v198);
      sub_2225CF794(v183);
      uint64_t v27 = **(void **)(a1 + 24);
      if ((v27 & 4) != 0)
      {
        sub_2225CACE8(&v196, (uint64_t)&v180);
        sub_2225CCBF8(v182, &v180);
        sub_222616CD8(v183, v182[0], v182[1]);
        std::string::~string(&v180);
        sub_2225CF40C((uint64_t)v183);
        uint64_t v27 = **(void **)(a1 + 24);
      }
      unsigned int v161 = v20;
      if ((v27 & 4) != 0)
      {
        v28 = (char *)sub_2225D02D4((uint64_t)v183);
        sub_2225C3D00((int)&v181, v28);
      }
      else
      {
        long long v181 = v196;
      }
      if (*(void *)(a1 + 872)) {
        long long v29 = (const void **)v186;
      }
      else {
        long long v29 = 0;
      }
      if (*(void *)(a1 + 872)) {
        uint64_t v30 = (const void **)v185;
      }
      else {
        uint64_t v30 = 0;
      }
      uint64_t v31 = sub_2225CC180(*(void *)(a1 + 64));
      v32 = (const void **)&v184;
      if ((*(unsigned char *)(v31 + 152) & 2) == 0) {
        v32 = 0;
      }
      v151 = v30;
      unsigned int v156 = v26;
      unsigned int v33 = v161;
      uint64_t v34 = sub_222636D20(a1, v26, v181, *((uint64_t *)&v181 + 1), v161, a4, &v187, v29, v151, v32, 0);
      uint64_t v36 = v34;
      if (*(void *)(a1 + 872))
      {
        if (!v34)
        {
          sub_2225CF794(&v180);
          if ((*(unsigned int (**)(void, void, void, std::string *))(**(void **)(a1 + 872) + 32))(*(void *)(a1 + 872), v196, *((void *)&v196 + 1), &v180)&& (uint64_t v37 = *(void *)(a1 + 40), v38 = sub_2225CE27C((uint64_t)&v180), (v40 = sub_2225F8658(v37, v38, v39, 1)) != 0))
          {
            sub_22263B1AC((uint64_t)&v199, (uint64_t)v40, 0, 0);
            sub_22263B1B0(*(void *)(a1 + 64), (__n128 *)&v199, v161);
            if ((**(unsigned char **)(a1 + 24) & 4) != 0)
            {
              v41 = (char *)sub_2225D02D4((uint64_t)v183);
              sub_2225C3D00((int)&v179, v41);
            }
            else
            {
              long long v179 = v196;
            }
            uint64_t v42 = sub_2225CC180(*(void *)(a1 + 64));
            v43 = (const void **)&v184;
            if ((*(unsigned char *)(v42 + 152) & 2) == 0) {
              v43 = 0;
            }
            uint64_t v36 = sub_222636D20(a1, v156, v179, *((uint64_t *)&v179 + 1), v161, a4, &v187, 0, 0, v43, 1);
          }
          else
          {
            uint64_t v36 = 0;
          }
          sub_2225CA520(&v180);
        }
        if (!sub_222629020(&v184, v35) || (*(unsigned char *)(sub_222608330(a1) + 6) & 0x10) == 0)
        {
          uint64_t v44 = v36;
          uint64_t v45 = *(void *)(a1 + 872);
          uint64_t v46 = v15;
          if ((**(unsigned char **)(a1 + 24) & 4) != 0)
          {
            v47 = (char *)sub_2225D02D4((uint64_t)v183);
            sub_2225C3D00((int)&v178, v47);
          }
          else
          {
            long long v178 = v196;
          }
          uint64_t v48 = sub_2225CE27C((uint64_t)v186);
          uint64_t v50 = v49;
          uint64_t v51 = sub_2225CE27C((uint64_t)v185);
          v52 = *(void (**)(uint64_t, void, unsigned int *, void, void, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v45 + 40);
          uint64_t v153 = v50;
          uint64_t v154 = v51;
          uint64_t v152 = v48;
          uint64_t v53 = v45;
          uint64_t v36 = v44;
          unsigned int v33 = v161;
          uint64_t v15 = v46;
          v52(v53, a2, a3, v178, *((void *)&v178 + 1), v161, v46, v17, v44, v152, v153, v154, v54, 0);
        }
      }
      if (v36)
      {
LABEL_53:
        if (sub_222629020(&v184, v35) && (*(unsigned char *)(sub_222608330(a1) + 6) & 0x10) != 0)
        {
          uint64_t v56 = sub_22261964C(&v184, v55);
          uint64_t v57 = sub_22263B2B0(v56);
          uint64_t v58 = v15;
          uint64_t v60 = v59;
          uint64_t v61 = sub_222608330(a1);
          sub_2225CCBF8(v174, v61 + 160);
          uint64_t v62 = v60;
          uint64_t v15 = v58;
          if (sub_2225D1680(v57, v62, v174[0], (size_t)v174[1]))
          {
            uint64_t v155 = v36;
            sub_22260826C(&v199);
            uint64_t v64 = sub_22261964C(&v184, v63);
            if (v64)
            {
              uint64_t v65 = v64;
              do
              {
                sub_2225CCBF8(v173, v65);
                v167.__r_.__value_.__r.__words[0] = sub_222635F10(a1, v173[0], v173[1]);
                LODWORD(v175.__r_.__value_.__l.__data_) = sub_2225C3B40(v198);
                v180.__r_.__value_.__r.__words[0] = sub_222611A80((uint64_t)&v167, (uint64_t)&v175);
                v180.__r_.__value_.__l.__size_ = v66;
                sub_2225CC69C((uint64_t)&v199, &v180);
                uint64_t v65 = *(void *)(v65 + 32);
              }
              while (v65);
            }
            uint64_t v67 = sub_2225C3C70((uint64_t)&v199);
            uint64_t v68 = sub_2225C3D04((uint64_t)&v199);
            sub_22263B2E0(v67, v68);
            sub_2225CF794(&v180);
            int v69 = sub_2225D1E3C((uint64_t)&v199);
            if (v69)
            {
              for (unsigned int i = 0; i != v69; ++i)
              {
                if (i) {
                  sub_2226186D4((uint64_t)&v180, 46);
                }
                v71 = (uint64_t *)sub_2225D1DB0((uint64_t)&v199, i);
                uint64_t v72 = sub_2225F2418(*v71);
                sub_2225DAD18((const void **)&v180.__r_.__value_.__l.__data_, v72, v73);
              }
            }
            uint64_t v74 = sub_22261AF2C((uint64_t)a3);
            char v75 = 0;
            int v76 = 0;
            uint64_t v36 = v155;
            switch(sub_222606C48(v74))
            {
              case 9u:
                int v76 = 3;
                char v75 = 1;
                break;
              case 0xAu:
              case 0xBu:
              case 0xCu:
              case 0xDu:
              case 0xEu:
                __break(1u);
                JUMPOUT(0x2226390ACLL);
              case 0xFu:
                char v75 = 0;
                int v76 = 1;
                break;
              case 0x10u:
                char v75 = 0;
                int v76 = 2;
                break;
              default:
                break;
            }
            v88 = (uint64_t *)sub_2225D1DB0((uint64_t)&v199, 0);
            uint64_t v89 = sub_2225F2418(*v88);
            uint64_t v91 = v90;
            uint64_t v92 = sub_222608330(a1);
            sub_2225CCBF8(v172, v92 + 136);
            BOOL v93 = sub_2225CD4BC(v89, v91, v172[0], (size_t)v172[1]);
            if (!v93 && (*(unsigned char *)(sub_222608330(a1) + 1) & 8) != 0)
            {
              sub_22261F184(&v169, a2, v194);
              sub_2225E31D8((uint64_t)&v170, v169, 0);
              sub_22261CABC(a1, a2, 853, (uint64_t)v168);
              v94 = sub_222622304(v168, v76);
              uint64_t v95 = sub_2225CE27C((uint64_t)&v180);
              v97 = sub_2225F3774(v94, v95, v96);
              uint64_t v98 = v170;
              char v99 = v171;
              v163[0] = sub_2225CA4D0((uint64_t)&v180);
              v163[1] = v100;
              sub_2225CACE8(v163, (uint64_t)&v164);
              sub_2225D1E74("@import ", &v164, (uint64_t)&v165);
              sub_2225D169C(&v165, ";", (uint64_t)&v175);
              sub_2225CCBF8(v166, &v175);
              char v101 = v99;
              uint64_t v36 = v155;
              sub_22261FFBC(v98, v101, v166[0], v166[1], (uint64_t)&v167);
              sub_22261E3BC((uint64_t)v97, (uint64_t)&v167);
              sub_2225F4E0C(&v167);
              std::string::~string(&v175);
              std::string::~string(&v165);
              std::string::~string(&v164);
              sub_2225F37F0(v168);
            }
            uint64_t v102 = *(void *)(a1 + 72);
            unsigned int v103 = sub_2225C3B40(a3);
            sub_2225DF148(v162, &v199);
            v167.__r_.__value_.__r.__words[0] = (*(uint64_t (**)(uint64_t, void, void, void, uint64_t, uint64_t))(*(void *)v102 + 16))(v102, v103, v162[0], v162[1], 1, 1);
            if (!sub_22261964C(&v167, v104) && sub_222621BB8(a1))
            {
              uint64_t v106 = a1 + 792;
              if (sub_2225DF1DC(a1 + 792, v105))
              {
                sub_22261FB44((uint64_t)a3);
                uint64_t v109 = sub_2225CBA80(a1 + 792, v108);
                uint64_t v111 = sub_2225CBA80(v106, v110);
                sub_22261DBD8(v109, a3, *(void *)(v111 + 128), 1);
                uint64_t v113 = sub_2225CBA80(v106, v112);
                sub_22261E6F4(v113);
              }
              else
              {
                uint64_t v150 = sub_2225CBA80(a1 + 800, v107);
                sub_222646AD4(v150, (uint64_t)a3);
              }
              goto LABEL_117;
            }
            uint64_t v15 = v58;
            if (!v93)
            {
              if (sub_22261964C(&v167, v105))
              {
                uint64_t v140 = *(void *)(a1 + 872);
                if (v140)
                {
                  uint64_t v157 = *((void *)&v196 + 1);
                  uint64_t v159 = v196;
                  uint64_t v141 = sub_2225CE27C((uint64_t)v186);
                  uint64_t v143 = v142;
                  uint64_t v144 = sub_2225CE27C((uint64_t)v185);
                  uint64_t v146 = v145;
                  uint64_t v147 = sub_22261964C(&v167, v145);
                  (*(void (**)(uint64_t, void, unsigned int *, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v140 + 40))(v140, a2, a3, v159, v157, v161, v58, v160, v155, v141, v143, v144, v146, v147);
                }
                if ((v75 & 1) == 0)
                {
                  unsigned int v148 = v195;
                  uint64_t v149 = sub_22261964C(&v167, v139);
                  sub_22263B2E4(a1, a2, v148, 518, v149);
                }
                goto LABEL_117;
              }
              if (!sub_22263B38C((unsigned __int8 *)&v167))
              {
LABEL_117:
                sub_2225CA520(&v180);
                sub_2225C56C4(&v199);
                goto LABEL_107;
              }
            }
            sub_2225CA520(&v180);
            sub_2225C56C4(&v199);
          }
        }
        if (*(void *)(a1 + 872) && sub_222629020(&v184, v55))
        {
          uint64_t v114 = *(void *)(a1 + 872);
          long long v115 = v196;
          uint64_t v116 = sub_2225CE27C((uint64_t)v186);
          uint64_t v118 = v117;
          uint64_t v119 = sub_2225CE27C((uint64_t)v185);
          (*(void (**)(uint64_t, void, unsigned int *, void, void, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v114 + 40))(v114, a2, a3, v115, *((void *)&v115 + 1), v161, v15, v160, v36, v116, v118, v119, v120, 0);
        }
        LODWORD(v180.__r_.__value_.__l.__data_) = sub_22263B390(*(void *)(a1 + 64), v36);
        uint64_t v121 = *(void *)(a1 + 48);
        int v122 = sub_2225C3B40(v198);
        LODWORD(v199.__r_.__value_.__l.__data_) = sub_22260D888(v121, v122);
        uint64_t v123 = *(unsigned int *)sub_2225F753C(&v180, &v199);
        if (sub_222618E5C(*(void *)(a1 + 64), v36, v158))
        {
          LODWORD(v199.__r_.__value_.__l.__data_) = v195;
          int v124 = sub_2226074FC(&v199);
          LODWORD(v125) = v199.__r_.__value_.__l.__data_;
          if (v124)
          {
            unint64_t v126 = sub_22260C9BC(*(_DWORD **)(a1 + 48), (int)v199.__r_.__value_.__l.__data_);
            unint64_t v125 = HIDWORD(v126);
            LODWORD(v199.__r_.__value_.__l.__data_) = HIDWORD(v126);
          }
          unsigned int v127 = sub_22263006C(*(void *)(a1 + 48), v36, v125, v123, 0, 0);
          sub_222618400((uint64_t)&v180);
          if ((*(unsigned char *)(sub_222608330(a1) + 6) & 0x10) != 0)
          {
            uint64_t v128 = sub_222608330(a1);
            if (!sub_2225CBBF8(v128 + 136, v129))
            {
              uint64_t v130 = sub_222636C3C(a1, v156);
              v131 = (uint64_t *)sub_222616724(*(void *)(a1 + 64));
              v180.__r_.__value_.__r.__words[0] = (std::string::size_type)sub_222628BA8(v131, v36, v130);
            }
          }
          uint64_t v132 = v187;
          unsigned int v133 = sub_2225C3B40(v198);
          if (!sub_22263F1C8(a1, v127, v132, v133) && sub_222629020(&v180, v134))
          {
            uint64_t v136 = sub_22261964C(&v180, v135);
            *(void *)(a1 + 840) = v136;
            sub_22263B2E4(a1, a2, v195, 519, v136);
          }
        }
        else
        {
          uint64_t v137 = *(void *)(a1 + 872);
          if (v137) {
            (*(void (**)(uint64_t, uint64_t, unsigned int *, uint64_t))(*(void *)v137 + 24))(v137, v36, v198, v123);
          }
        }
        goto LABEL_107;
      }
      if ((*(_WORD *)(a1 + 436) & 4) == 0)
      {
        if (v33)
        {
          if ((**(unsigned char **)(a1 + 24) & 4) != 0)
          {
            v77 = (char *)sub_2225D02D4((uint64_t)v183);
            sub_2225C3D00((int)&v177, v77);
          }
          else
          {
            long long v177 = v196;
          }
          if (*(void *)(a1 + 872)) {
            v78 = (const void **)v186;
          }
          else {
            v78 = 0;
          }
          if (*(void *)(a1 + 872)) {
            v79 = (const void **)v185;
          }
          else {
            v79 = 0;
          }
          uint64_t v80 = sub_2225CC180(*(void *)(a1 + 64));
          v81 = (const void **)&v184;
          if ((*(unsigned char *)(v80 + 152) & 2) == 0) {
            v81 = 0;
          }
          uint64_t v82 = sub_222636D20(a1, v156, v177, *((uint64_t *)&v177 + 1), 0, a4, &v187, v78, v79, v81, 0);
          if (v82)
          {
            uint64_t v36 = v82;
            int v83 = sub_2225C3B40(v198);
            sub_22261F184(&v164, v83, v194);
            sub_2226265A0(a1, v198, 722, (uint64_t)&v165);
            v84 = sub_2225F3774((uint64_t *)&v165, v196, *((uint64_t *)&v196 + 1));
            uint64_t v85 = v15;
            std::string::size_type v86 = v164.__r_.__value_.__r.__words[0];
            sub_2225CACE8(&v196, (uint64_t)&v175);
            sub_2225D1E74("\"", &v175, (uint64_t)&v167);
            sub_2225D169C(&v167, "\"", (uint64_t)&v199);
            sub_2225CCBF8(v176, &v199);
            uint64_t v87 = v86;
            uint64_t v15 = v85;
            sub_22263B25C(v87, v176[0], v176[1], (uint64_t)&v180);
            sub_22261E3BC((uint64_t)v84, (uint64_t)&v180);
            sub_2225F4E0C(&v180);
            std::string::~string(&v199);
            std::string::~string(&v167);
            std::string::~string(&v175);
            sub_2225F37F0(&v165);
            goto LABEL_53;
          }
        }
        sub_2226265A0(a1, v198, 721, (uint64_t)&v180);
        sub_2225F3774((uint64_t *)&v180, v196, *((uint64_t *)&v196 + 1));
        sub_2225F37F0(&v180);
      }
LABEL_107:
      sub_2225CA520(v183);
      sub_2225CA520(v185);
      sub_2225CA520(v186);
      return sub_2225CA520(v197);
    }
    if (v10 != 15) {
      goto LABEL_4;
    }
LABEL_7:
    *(void *)&long long v196 = sub_222648D5C(a1, v198, v197, 0);
    *((void *)&v196 + 1) = v12;
    unsigned int v195 = sub_2225C3B40(v198);
    int v13 = sub_222613380((uint64_t)v198);
    goto LABEL_8;
  }
  if (v10 != 2)
  {
    if (v10 != 13)
    {
LABEL_4:
      unsigned int v11 = sub_2225C3B40(v198);
      sub_22261CABC(a1, v11, 718, (uint64_t)v193);
      sub_2225F37F0(v193);
LABEL_9:
      sub_222635C58(a1);
      return sub_2225CA520(v197);
    }
    goto LABEL_7;
  }
  return sub_2225CA520(v197);
}

BOOL sub_2226390D0(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  int v6 = sub_2225C3B40(a3);
  int v7 = sub_22260D948(*(_DWORD **)(a1 + 48), v6, 0);
  if (!strcmp(v7, "<built-in>"))
  {
    sub_2226381C0(a1, a2, a3, 0, 0);
    sub_22261B6AC(v10);
    do
    {
      sub_222649758(a1, v10);
      BOOL result = sub_22261CB34((uint64_t)v10, 66);
    }
    while (result);
  }
  else
  {
    unsigned int v8 = sub_2225C3B40(a3);
    sub_22261CABC(a1, v8, 840, (uint64_t)v11);
    sub_2225F37F0(v11);
    return sub_222635C58(a1);
  }
  return result;
}

uint64_t sub_2226391A0(uint64_t a1, unsigned int *a2, int a3)
{
  ++*(_DWORD *)(a1 + 1332);
  sub_22261B6AC(&v72);
  sub_222635F80(a1, (unsigned int *)&v72, 1);
  if (sub_222606BF8(*(void *)(a1 + 24)))
  {
    int v6 = *(_DWORD **)(a1 + 48);
    int v7 = sub_2225C3B40(a2);
    *(_DWORD *)v70 = sub_222609AF8(v6, v7);
    if (sub_22260EC60(v70, (_DWORD *)(a1 + 1416)))
    {
      uint64_t v8 = sub_22261AF2C((uint64_t)&v72);
      if (v8)
      {
        uint64_t v9 = v8;
        *(void *)v70 = sub_2225F2418(v8);
        *(void *)&v70[8] = v10;
        sub_2225C3D00((int)v71, "GL_");
        if (sub_2225D0520((uint64_t)v70, v71[0], (size_t)v71[1]))
        {
          sub_2226265A0(a1, a2, 634, (uint64_t)v69);
          sub_222635F48(v69, v9);
          sub_2225F37F0(v69);
        }
        if ((unint64_t)sub_2225C3D04((uint64_t)v70) >= 2)
        {
          unsigned int v11 = 2;
          uint64_t v12 = 1;
          while (sub_2225CC124(v70, v12) != 95 || sub_2225CC124(v70, v11 - 2) != 95)
          {
            uint64_t v12 = v11;
            if (sub_2225C3D04((uint64_t)v70) <= (unint64_t)v11++) {
              goto LABEL_13;
            }
          }
          sub_2226265A0(a1, a2, 634, (uint64_t)v69);
          sub_222635F48(v69, v9);
          sub_2225F37F0(v69);
        }
      }
    }
  }
LABEL_13:
  uint64_t result = sub_22261BABC((uint64_t)&v72, 2);
  if ((result & 1) == 0)
  {
    *(_OWORD *)v70 = v72;
    *(void *)&v70[16] = v73;
    if (sub_2225DF1DC(a1 + 792, v15))
    {
      uint64_t v17 = sub_2225CBA80(a1 + 792, v16);
      sub_22261B158(v17, (*(_WORD *)(a1 + 436) & 2) != 0);
    }
    int v18 = sub_2225C3B40((unsigned int *)&v72);
    unsigned int v19 = (unsigned int *)sub_222635A64(a1, v18);
    sub_22261B6AC(v69);
    sub_222635CA4(a1, (uint64_t)v69);
    if (sub_22261BABC((uint64_t)v69, 2))
    {
      if (a3)
      {
        uint64_t v20 = *(void *)(a1 + 808) + 32;
        uint64_t v21 = sub_22261AF2C((uint64_t)&v72);
        int v22 = sub_2225C3B40((unsigned int *)&v72);
        sub_22263B798(v20, v21, v22);
      }
      goto LABEL_35;
    }
    if (sub_222620488((uint64_t)v69))
    {
      sub_22261F284((uint64_t)v69, 2);
LABEL_35:
      if (!sub_22261BABC((uint64_t)v69, 2))
      {
        *(_OWORD *)v70 = *(_OWORD *)v69;
        *(_DWORD *)&v70[15] = *(_DWORD *)((char *)&v69[1] + 7);
      }
      BOOL v24 = sub_22263B7E4((uint64_t)v19);
      BOOL v25 = sub_22261CB34((uint64_t)v69, 2);
      if (v24)
      {
        if (v25)
        {
          do
          {
            *(_OWORD *)v70 = *(_OWORD *)v69;
            *(_DWORD *)&v70[15] = *(_DWORD *)((char *)&v69[1] + 7);
            sub_22263B7F4((uint64_t)v19, (uint64_t)v69);
            sub_222635CA4(a1, (uint64_t)v69);
          }
          while (sub_22261CB34((uint64_t)v69, 2));
        }
LABEL_62:
        sub_22263B7B4(*(unsigned int **)(a1 + 328), 1);
        int v31 = sub_22263B7FC((uint64_t)v19);
        if (v31)
        {
          int v32 = v31;
          uint64_t v33 = sub_22263B818((uint64_t)v19, 0);
          if (sub_22261BABC(v33, 66))
          {
            uint64_t v34 = (unsigned int *)sub_22263B818((uint64_t)v19, 0);
            sub_2226265A0(a1, v34, 697, (uint64_t)v64);
            uint64_t v35 = v64;
            return sub_2225F37F0(v35);
          }
          unsigned int v36 = v32 - 1;
          uint64_t v37 = sub_22263B818((uint64_t)v19, v36);
          if (sub_22261BABC(v37, 66))
          {
            uint64_t v38 = (unsigned int *)sub_22263B818((uint64_t)v19, v36);
            sub_2226265A0(a1, v38, 696, (uint64_t)v63);
            uint64_t v35 = v63;
            return sub_2225F37F0(v35);
          }
        }
        int v39 = sub_2225C3B40((unsigned int *)v70);
        sub_222612BA8((uint64_t)v19, v39);
        uint64_t v40 = sub_22261AF2C((uint64_t)&v72);
        uint64_t v41 = sub_222625E60(a1, v40);
        if (!v41) {
          goto LABEL_82;
        }
        uint64_t v42 = (unsigned int *)v41;
        uint64_t v43 = sub_2225C5B40(a1);
        if (!sub_22263B830(v43)
          || (uint64_t v44 = *(void *)(a1 + 48), v45 = sub_2225C3B40(a2), !sub_2225F7558(v44, v45)))
        {
          if ((sub_22263B838((uint64_t)v42) & 1) == 0 && sub_22263B844((uint64_t)v42))
          {
            unsigned int v46 = sub_2225C3B40(v42);
            sub_22261CABC(a1, v46, 844, (uint64_t)v62);
            sub_2225F37F0(v62);
          }
          if (sub_222635F74((uint64_t)v42))
          {
            v47 = v61;
            sub_2226265A0(a1, (unsigned int *)&v72, 808, (uint64_t)v61);
LABEL_79:
            sub_2225F37F0(v47);
            goto LABEL_80;
          }
          if ((sub_22263B850((uint64_t)v42) & 1) == 0
            && (sub_2226277E8((uint64_t)v19, (uint64_t)v42, a1, (**(void **)(a1 + 24) >> 3) & 1) & 1) == 0)
          {
            unsigned int v48 = sub_2225C3B40(v19);
            sub_22261CABC(a1, v48, 806, (uint64_t)v60);
            uint64_t v49 = sub_22261AF2C((uint64_t)&v72);
            sub_222635F48(v60, v49);
            sub_2225F37F0(v60);
            unsigned int v50 = sub_2225C3B40(v42);
            v47 = v59;
            sub_22261CABC(a1, v50, 56, (uint64_t)v59);
            goto LABEL_79;
          }
        }
LABEL_80:
        if (sub_22263B844((uint64_t)v42))
        {
          unsigned int v51 = sub_2225C3B40(v42);
          sub_22263B85C(a1 + 1008, v51);
        }
LABEL_82:
        v52 = (unsigned int *)sub_22261AF2C((uint64_t)&v72);
        uint64_t v53 = sub_22263B89C(a1, v52, v19);
        uint64_t v54 = sub_2225E8DD0(a1);
        int v55 = sub_2225C3B40(v19);
        if (sub_22260DA90(v54, v55))
        {
          uint64_t v56 = *(unsigned char **)(a1 + 16);
          int v57 = sub_2225C3B40(v19);
          if (!sub_2226184E8(v56, 0x34Cu, v57))
          {
            sub_22263B908((uint64_t)v19, 1);
            unsigned int v58 = sub_2225C3B40(v19);
            sub_22263B928(a1 + 1008, v58);
          }
        }
        uint64_t result = *(void *)(a1 + 872);
        if (result) {
          return (*(uint64_t (**)(uint64_t, long long *, void *))(*(void *)result + 176))(result, &v72, v53);
        }
        return result;
      }
      if (!v25) {
        goto LABEL_62;
      }
      while (1)
      {
        *(_OWORD *)v70 = *(_OWORD *)v69;
        *(_DWORD *)&v70[15] = *(_DWORD *)((char *)&v69[1] + 7);
        if (sub_22261CB34((uint64_t)v69, 65) && sub_22261CB34((uint64_t)v69, 66)) {
          goto LABEL_52;
        }
        if ((*(unsigned char *)(sub_222608330(a1) + 4) & 0x80) != 0) {
          break;
        }
        BOOL v26 = sub_22261BABC((uint64_t)v69, 66);
        sub_222635CA4(a1, (uint64_t)v69);
        if (v26)
        {
          if (sub_22261BABC((uint64_t)v69, 2))
          {
            sub_22263B7F4((uint64_t)v19, (uint64_t)v70);
            goto LABEL_62;
          }
          int v27 = sub_22263B7FC((uint64_t)v19);
          if (v27)
          {
            int v28 = v27;
            if (sub_22261AF2C((uint64_t)v69) == *(void *)(a1 + 328))
            {
              uint64_t v29 = sub_22263B818((uint64_t)v19, v28 - 1);
              if (sub_22261BABC(v29, 64)) {
                sub_22263B820((uint64_t)v19);
              }
            }
          }
          goto LABEL_60;
        }
        if (!sub_22261AF2C((uint64_t)v69)
          || (uint64_t v30 = sub_22261AF2C((uint64_t)v69), sub_222627ACC((uint64_t)v19, v30) == -1))
        {
          if ((*(unsigned char *)(sub_222608330(a1) + 2) & 0x40) == 0 || !sub_22261CB34((uint64_t)v69, 2))
          {
            sub_2226265A0(a1, (unsigned int *)v69, 748, (uint64_t)v65);
            sub_2225F37F0(v65);
            return (uint64_t)sub_22263B7B4(*(unsigned int **)(a1 + 328), 1);
          }
          sub_22261F2AC((uint64_t)v70, 0);
LABEL_60:
          sub_22263B7F4((uint64_t)v19, (uint64_t)v70);
          goto LABEL_61;
        }
        sub_22263B7F4((uint64_t)v19, (uint64_t)v70);
        sub_22263B7F4((uint64_t)v19, (uint64_t)v69);
        *(_OWORD *)v70 = *(_OWORD *)v69;
        *(_DWORD *)&v70[15] = *(_DWORD *)((char *)&v69[1] + 7);
LABEL_53:
        sub_222635CA4(a1, (uint64_t)v69);
LABEL_61:
        if (!sub_22261CB34((uint64_t)v69, 2)) {
          goto LABEL_62;
        }
      }
      sub_22261F2AC((uint64_t)v69, 0);
LABEL_52:
      sub_22263B7F4((uint64_t)v19, (uint64_t)v69);
      goto LABEL_53;
    }
    if (!sub_22261BABC((uint64_t)v69, 21))
    {
      if ((**(unsigned char **)(a1 + 24) & 0x81) != 0)
      {
        sub_2226265A0(a1, (unsigned int *)v69, 776, (uint64_t)v68);
        uint64_t v23 = v68;
      }
      else if (sub_22261BABC((uint64_t)v69, 71) || sub_22261BABC((uint64_t)v69, 0))
      {
        sub_2226265A0(a1, (unsigned int *)v69, 787, (uint64_t)v67);
        uint64_t v23 = v67;
      }
      else
      {
        sub_2226265A0(a1, (unsigned int *)v69, 878, (uint64_t)v66);
        uint64_t v23 = v66;
      }
      sub_2225F37F0(v23);
      goto LABEL_35;
    }
    sub_22263B7A4((uint64_t)v19);
    uint64_t result = sub_22263B3F4(a1, (uint64_t)v19, (unsigned int *)v70);
    if (!result)
    {
      if (sub_222627AA4((uint64_t)v19)) {
        sub_22263B7B4(*(unsigned int **)(a1 + 328), 0);
      }
      sub_222635CA4(a1, (uint64_t)v69);
      goto LABEL_35;
    }
    if (*(unsigned char *)(*(void *)(a1 + 808) + 24)) {
      return sub_222635C58(a1);
    }
  }
  return result;
}

uint64_t sub_2226399EC(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 1336);
  sub_22261B6AC(v14);
  sub_222635F80(a1, v14, 2);
  uint64_t result = sub_22261BABC((uint64_t)v14, 2);
  if ((result & 1) == 0)
  {
    sub_222636094(a1, (uint64_t)"undef", 0);
    uint64_t v3 = sub_22261AF2C((uint64_t)v14);
    uint64_t v4 = sub_222626928(a1, v3);
    uint64_t v5 = v4;
    if (v4) {
      int v6 = (unsigned int *)sub_222626980(v4);
    }
    else {
      int v6 = 0;
    }
    uint64_t result = *(void *)(a1 + 872);
    if (result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, unsigned int *, uint64_t))(*(void *)result + 184))(result, v14, v5);
    }
    if (v6)
    {
      if ((sub_22263B838((uint64_t)v6) & 1) == 0 && sub_22263B844((uint64_t)v6))
      {
        unsigned int v7 = sub_2225C3B40(v6);
        sub_22261CABC(a1, v7, 844, (uint64_t)v13);
        sub_2225F37F0(v13);
      }
      if (sub_22263B844((uint64_t)v6))
      {
        unsigned int v8 = sub_2225C3B40(v6);
        sub_22263B85C(a1 + 1008, v8);
      }
      uint64_t v9 = (unsigned int *)sub_22261AF2C((uint64_t)v14);
      int v10 = sub_2225C3B40(v14);
      sub_2225CCC70(v12);
      unsigned int v11 = (void *)sub_222635B30(a1, v10, 0, v12[0], v12[1]);
      return (uint64_t)sub_222640E20(a1, v9, v11);
    }
  }
  return result;
}

uint64_t sub_222639B74(uint64_t a1)
{
  sub_22261B6AC(v28);
  sub_222649758(a1, v28);
  unsigned int v27 = 0;
  uint64_t result = sub_22263A874(v28, &v27, 736, a1, 0);
  if ((result & 1) == 0)
  {
    unsigned int v3 = v27;
    if (!v27)
    {
      sub_2226265A0(a1, v28, 805, (uint64_t)v26);
      sub_2225F37F0(v26);
    }
    uint64_t v4 = **(void **)(a1 + 24);
    if ((v4 & 0x81) != 0) {
      unsigned int v5 = 0x80000000;
    }
    else {
      unsigned int v5 = 0x8000;
    }
    if (v3 >= v5)
    {
      sub_2226265A0(a1, v28, 804, (uint64_t)v19);
      sub_2226256C4(v19, v5);
      int v6 = v19;
    }
    else
    {
      if (v3 < 0x8000 || (v4 & 0x80) == 0)
      {
LABEL_13:
        sub_22261B6AC(v24);
        sub_222649758(a1, v24);
        if (sub_22261BABC((uint64_t)v24, 2))
        {
          int v7 = -1;
          goto LABEL_15;
        }
        if (sub_22261CB34((uint64_t)v24, 13))
        {
          sub_2226265A0(a1, v24, 735, (uint64_t)v23);
          uint64_t v12 = v23;
        }
        else
        {
          if (!sub_22262D3B0((uint64_t)v24))
          {
            sub_22261870C(v18, (uint64_t)v24);
            sub_222625168(v19, v18[0], v18[1], a1, 1);
            if (!v20)
            {
              if (!v21)
              {
                uint64_t v13 = *(void *)(a1 + 48);
                uint64_t v14 = sub_22262D3C0((uint64_t)v19);
                int v7 = sub_22260AAD0(v13, v14, v15);
                sub_222636094(a1, (uint64_t)"line", 1);
                sub_22262D410((uint64_t)v19);
LABEL_15:
                uint64_t v8 = *(void *)(a1 + 48);
                int v9 = sub_2225C3B40(v28);
                uint64_t result = sub_22260AB34(v8, v9, v3, v7);
                uint64_t v10 = *(void *)(a1 + 872);
                if (v10)
                {
                  unsigned int v11 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
                  sub_2225F3278(&v16);
                  return (*(uint64_t (**)(uint64_t, void, uint64_t, void, void))(*(void *)v10 + 16))(v10, v11, 3, 0, v16);
                }
                return result;
              }
              sub_2226265A0(a1, v24, 737, (uint64_t)v17);
              sub_2225F37F0(v17);
            }
            sub_222635C58(a1);
            return sub_22262D410((uint64_t)v19);
          }
          sub_2226265A0(a1, v24, 19, (uint64_t)v22);
          uint64_t v12 = v22;
        }
        sub_2225F37F0(v12);
        return sub_222635C58(a1);
      }
      sub_2226265A0(a1, v28, 869, (uint64_t)v25);
      int v6 = (uint64_t *)v25;
    }
    sub_2225F37F0(v6);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_222639E3C(uint64_t a1, unsigned int *a2, int a3)
{
  uint64_t v6 = a1 + 800;
  if (sub_2225DF1DC(a1 + 800, (uint64_t)a2))
  {
    uint64_t v8 = sub_2225CBA80(v6, v7);
    return sub_222646AE8(v8);
  }
  else
  {
    sub_2225CF794(v19);
    uint64_t v11 = sub_2225CBA80(a1 + 792, v10);
    sub_22261F7A8(v11, (uint64_t)v19);
    v18[0] = sub_2225CA4D0((uint64_t)v19);
    v18[1] = v12;
    sub_2225C3D00((int)v17, " ");
    uint64_t v13 = sub_2225E1180(v18, v17[0], v17[1]);
    uint64_t v15 = v14;
    if (a3) {
      int v16 = 839;
    }
    else {
      int v16 = 723;
    }
    sub_2226265A0(a1, a2, v16, (uint64_t)v18);
    sub_2225F3774(v18, v13, v15);
    sub_2225F37F0(v18);
    return sub_2225CA520(v19);
  }
}

uint64_t sub_222639F44(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  uint64_t v6 = **(void **)(a1 + 24);
  if ((v6 & 0x400) != 0) {
    return sub_2226381C0(a1, a2, a3, 0, 1);
  }
  if ((v6 & 4) == 0)
  {
    sub_2226265A0(a1, a3, 801, (uint64_t)v8);
    sub_2225F37F0(v8);
    return sub_2226381C0(a1, a2, a3, 0, 1);
  }

  return sub_22263B3B0(a1, a3);
}

uint64_t sub_222639FEC(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  sub_2226265A0(a1, a3, 802, (uint64_t)v13);
  sub_2225F37F0(v13);
  uint64_t v6 = *(void *)(a1 + 816);
  if (sub_22263F0AC(a1, v7))
  {
    sub_2226265A0(a1, a3, 842, (uint64_t)v12);
    uint64_t v8 = v12;
LABEL_6:
    sub_2225F37F0(v8);
    uint64_t v9 = 0;
    return sub_2226381C0(a1, a2, a3, v9, 0);
  }
  if (!v6)
  {
    sub_2226265A0(a1, a3, 841, (uint64_t)v11);
    uint64_t v8 = v11;
    goto LABEL_6;
  }
  uint64_t v9 = v6 + 16;
  return sub_2226381C0(a1, a2, a3, v9, 0);
}

void sub_22263A0A8(uint64_t a1, unsigned int *a2)
{
  sub_2226265A0(a1, a2, 800, (uint64_t)v11);
  sub_2225F37F0(v11);
  sub_22261B6AC(v10);
  sub_222649758(a1, v10);
  if (sub_22261CB34((uint64_t)v10, 13) && sub_22261CB34((uint64_t)v10, 14))
  {
    sub_2226265A0(a1, v10, 742, (uint64_t)v9);
    sub_2225F37F0(v9);
    if (!sub_22261CB34((uint64_t)v10, 2)) {
      return;
    }
LABEL_7:
    sub_222635C58(a1);
    return;
  }
  if (sub_22262D3B0((uint64_t)v10))
  {
    sub_2226265A0(a1, v10, 19, (uint64_t)v8);
    sub_2225F37F0(v8);
    goto LABEL_7;
  }
  sub_222636094(a1, (uint64_t)"ident", 0);
  if (*(void *)(a1 + 872))
  {
    unsigned __int8 v7 = 0;
    sub_22261F294(a1, v10, &v7, &v6);
    if (!v7)
    {
      uint64_t v4 = *(void *)(a1 + 872);
      unsigned int v5 = sub_2225C3B40(a2);
      (*(void (**)(uint64_t, void, std::string *))(*(void *)v4 + 64))(v4, v5, &v6);
    }
    std::string::~string(&v6);
  }
}

uint64_t sub_22263A200(uint64_t *a1, unsigned int *a2)
{
  v22[12] = *MEMORY[0x263EF8340];
  if (sub_222606BF8(a1[3]))
  {
    sub_22261B6AC(v21);
    sub_222635CA4((uint64_t)a1, (uint64_t)v21);
    unsigned int v20 = 0;
    uint64_t result = sub_22263A874(v21, &v20, 641, (uint64_t)a1, 2u);
    if ((result & 1) == 0)
    {
      unsigned int v5 = (_DWORD *)a1[6];
      int v6 = sub_2225C3B40(a2);
      uint64_t v7 = sub_222609C14(v5, v6);
      if (sub_22260D3AC(a1[6], v7, SHIDWORD(v7), 0) >= 2 && (sub_22263AD28(a1[2]) & 1) == 0)
      {
        sub_2226265A0((uint64_t)a1, a2, 635, (uint64_t)v19);
        sub_2225F37F0(v19);
      }
      sub_22263AD30(v22);
      v18[0] = (uint64_t)v22;
      v18[1] = (uint64_t)a1;
      memset(v17, 0, sizeof(v17));
      sub_22261B6AC(v17);
      sub_22260BC64((uint64_t)v22, (uint64_t)v17);
      uint64_t v8 = sub_2225E2698((uint64_t)v22);
      sub_22261FB44(v8);
      uint64_t v9 = sub_2225E2698((uint64_t)v22);
      sub_22261F2AC(v9, 523);
      uint64_t v10 = (_DWORD *)sub_2225E2698((uint64_t)v22);
      int v11 = sub_2225C3B40(v21);
      sub_2225D0A60(v10, v11);
      sub_22260BC64((uint64_t)v22, (uint64_t)v21);
      uint64_t v12 = v20;
      uint64_t v13 = sub_2225E2698((uint64_t)v22);
      sub_2225C5B6C(v13, v12);
      sub_22261B6AC(v17);
      sub_222635CA4((uint64_t)a1, (uint64_t)v17);
      if (!sub_22261BABC((uint64_t)v17, 2))
      {
        sub_22261AF2C((uint64_t)v17);
        sub_22260BC64((uint64_t)v22, (uint64_t)v17);
        sub_222636094((uint64_t)a1, (uint64_t)"version", 0);
      }
      sub_22263AD34(v18);
      return sub_2225C56C4(v22);
    }
  }
  else
  {
    sub_2226265A0((uint64_t)a1, a2, 638, (uint64_t)v22);
    uint64_t v14 = sub_22261AF2C((uint64_t)a2);
    uint64_t v15 = sub_2225F2418(v14);
    sub_2225F3774(v22, v15, v16);
    sub_2225F37F0(v22);
    return sub_222635C58((uint64_t)a1);
  }
  return result;
}

void sub_22263A430(uint64_t a1, unsigned int *a2)
{
  if (!sub_222606BF8(*(void *)(a1 + 24)))
  {
    sub_2226265A0(a1, a2, 638, (uint64_t)v20);
    uint64_t v5 = sub_22261AF2C((uint64_t)a2);
    uint64_t v6 = sub_2225F2418(v5);
    sub_2225F3774(v20, v6, v7);
    sub_2225F37F0(v20);
    goto LABEL_5;
  }
  sub_22261B6AC(v20);
  sub_222635CA4(a1, (uint64_t)v20);
  if (sub_22261BABC((uint64_t)v20, 2))
  {
    sub_2226265A0(a1, (unsigned int *)v20, 637, (uint64_t)v19);
    sub_222622304(v19, 0);
    uint64_t v4 = v19;
LABEL_11:
    sub_2225F37F0(v4);
    return;
  }
  sub_22261B6AC(v19);
  sub_222635CA4(a1, (uint64_t)v19);
  if (sub_22261CB34((uint64_t)v19, 60))
  {
    sub_2226265A0(a1, (unsigned int *)v19, 9, (uint64_t)v18);
    uint64_t v8 = sub_22261AF2C((uint64_t)v20);
    uint64_t v9 = sub_2225F2418(v8);
    int v11 = sub_2225F3774(v18, v9, v10);
    sub_222635F18(v11, 0x3Cu);
    sub_2225F37F0(v18);
    if (!sub_22261CB34((uint64_t)v19, 2)) {
      return;
    }
LABEL_5:
    sub_222635C58(a1);
    return;
  }
  sub_22261B6AC(v18);
  sub_222635CA4(a1, (uint64_t)v18);
  if (sub_22261BABC((uint64_t)v18, 2))
  {
    sub_2226265A0(a1, (unsigned int *)v18, 637, (uint64_t)v17);
    sub_222622304(v17, 1);
    uint64_t v4 = v17;
    goto LABEL_11;
  }
  sub_222636094(a1, (uint64_t)"extension", 0);
  sub_22261B6AC(v17);
  sub_22261FB44((uint64_t)v17);
  sub_22261F2AC((uint64_t)v17, 524);
  int v12 = sub_2225C3B40((unsigned int *)v20);
  sub_2225D0A60(v17, v12);
  sub_22261B6AC(v16);
  sub_22261FB44((uint64_t)v16);
  sub_22261F2AC((uint64_t)v16, 2);
  int v13 = sub_2225C3B40((unsigned int *)v18);
  sub_2225D0A60(v16, v13);
  uint64_t v14 = sub_2225C26A4(96);
  for (uint64_t i = 0; i != 96; i += 24)
    sub_22261B6AC(v14 + i);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v17;
  *(_DWORD *)(v14 + 15) = *(_DWORD *)((char *)&v17[1] + 7);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)v20;
  *(_DWORD *)(v14 + 39) = *(_DWORD *)((char *)&v20[1] + 7);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)v18;
  *(_DWORD *)(v14 + 63) = *(_DWORD *)((char *)&v18[1] + 7);
  *(_DWORD *)(v14 + 87) = *(_DWORD *)&v16[15];
  *(_OWORD *)(v14 + 72) = *(_OWORD *)v16;
  sub_22263F714(a1, v14, 4, 1, 1);
}

uint64_t sub_22263A6C8(uint64_t a1)
{
  sub_22261B6AC(v7);
  sub_222635F80(a1, v7, 2);
  uint64_t result = sub_22261BABC((uint64_t)v7, 2);
  if ((result & 1) == 0)
  {
    sub_222636094(a1, (uint64_t)"__public_macro", 0);
    unsigned int v3 = (unsigned int *)sub_22261AF2C((uint64_t)v7);
    if (sub_222626928(a1, (uint64_t)v3))
    {
      int v4 = sub_2225C3B40(v7);
      uint64_t v5 = (void *)sub_222635BB4(a1, v4, 1);
      return (uint64_t)sub_222640E20(a1, v3, v5);
    }
    else
    {
      sub_2226265A0(a1, v7, 753, (uint64_t)v6);
      sub_222635F48(v6, (uint64_t)v3);
      return sub_2225F37F0(v6);
    }
  }
  return result;
}

uint64_t sub_22263A79C(uint64_t a1)
{
  sub_22261B6AC(v7);
  sub_222635F80(a1, v7, 2);
  uint64_t result = sub_22261BABC((uint64_t)v7, 2);
  if ((result & 1) == 0)
  {
    sub_222636094(a1, (uint64_t)"__private_macro", 0);
    unsigned int v3 = (unsigned int *)sub_22261AF2C((uint64_t)v7);
    if (sub_222626928(a1, (uint64_t)v3))
    {
      int v4 = sub_2225C3B40(v7);
      uint64_t v5 = (void *)sub_222635BB4(a1, v4, 0);
      return (uint64_t)sub_222640E20(a1, v3, v5);
    }
    else
    {
      sub_2226265A0(a1, v7, 753, (uint64_t)v6);
      sub_222635F48(v6, (uint64_t)v3);
      return sub_2225F37F0(v6);
    }
  }
  return result;
}

uint64_t sub_22263A874(unsigned int *a1, unsigned int *a2, int a3, uint64_t a4, unsigned __int8 a5)
{
  if (sub_22261CB34((uint64_t)a1, 8))
  {
    sub_2226265A0(a4, a1, a3, (uint64_t)v31);
    sub_2225F37F0(v31);
    if (sub_22261CB34((uint64_t)a1, 2)) {
      sub_222635C58(a4);
    }
    return 1;
  }
  sub_2225DAD14(v30);
  unsigned int v11 = sub_222613380((uint64_t)a1);
  sub_2225CF670(v30, v11);
  uint64_t v29 = (unsigned char *)sub_2225C5698((uint64_t)v30, 0);
  char v28 = 0;
  unsigned int v12 = sub_222626584(a4, a1, (uint64_t *)&v29, &v28);
  if (v28)
  {
LABEL_6:
    uint64_t v10 = 1;
    goto LABEL_20;
  }
  *a2 = 0;
  if (!v12) {
    goto LABEL_19;
  }
  unsigned __int8 v25 = a5;
  uint64_t v13 = 0;
  unsigned int v14 = 0;
  uint64_t v15 = v29;
  uint64_t v16 = v12;
  do
  {
    int v17 = (char)v15[v13];
    if (v17 == 39) {
      goto LABEL_13;
    }
    if ((sub_2225F4928(v15[v13]) & 1) == 0)
    {
      unsigned int v22 = sub_2225C3B40(a1);
      unsigned int v23 = sub_222623178(a4, v22, v13);
      sub_22261CABC(a4, v23, 734, (uint64_t)v27);
      sub_222622304(v27, v25);
      BOOL v24 = v27;
LABEL_24:
      sub_2225F37F0(v24);
      sub_222635C58(a4);
      goto LABEL_6;
    }
    unsigned int v18 = v17 + 10 * v14 - 48;
    if (v18 < v14)
    {
      sub_2226265A0(a4, a1, a3, (uint64_t)v26);
      BOOL v24 = (uint64_t *)v26;
      goto LABEL_24;
    }
    *a2 = v18;
    unsigned int v14 = v17 + 10 * v14 - 48;
LABEL_13:
    ++v13;
  }
  while (v16 != v13);
  if (*v15 == 48 && v14 != 0)
  {
    unsigned int v20 = sub_2225C3B40(a1);
    sub_22261CABC(a4, v20, 889, (uint64_t)v27);
    sub_222622304(v27, v25);
    sub_2225F37F0(v27);
  }
LABEL_19:
  uint64_t v10 = 0;
LABEL_20:
  sub_2225CA520(v30);
  return v10;
}

uint64_t sub_22263AA84(unsigned char *a1, unsigned char *a2, unsigned char *a3, unsigned char *a4, uint64_t a5)
{
  sub_22261B6AC(v24);
  sub_222649758(a5, v24);
  if (sub_22261BABC((uint64_t)v24, 2)) {
    return 0;
  }
  unsigned int v25 = 0;
  if (sub_22263A874(v24, &v25, 738, a5, 0)) {
    return 1;
  }
  unsigned int v11 = v25;
  if (v25 == 2)
  {
    *a2 = 1;
    uint64_t v13 = (_DWORD *)sub_2225E8DD0(a5);
    int v14 = sub_2225C3B40(v24);
    int v23 = sub_22260ABEC(v13, v14);
    int v15 = sub_2225C3B40(v24);
    sub_22260D198((uint64_t)v13, v15, 1, (uint64_t)v22);
    if (sub_222609A70(v22)) {
      return 1;
    }
    int v21 = sub_2225F514C((uint64_t)v22);
    if (sub_2225F38E8(&v21) || (uint64_t v20 = sub_22260ABEC(v13, v21), sub_22260EC60(&v20, &v23)))
    {
      sub_2226265A0(a5, v24, 739, (uint64_t)v19);
      unsigned int v12 = v19;
      goto LABEL_20;
    }
    sub_222649758(a5, v24);
    if (sub_22261BABC((uint64_t)v24, 2)) {
      return 0;
    }
    if (sub_22263A874(v24, &v25, 738, a5, 0)) {
      return 1;
    }
  }
  else
  {
    if (v25 != 1) {
      goto LABEL_9;
    }
    *a1 = 1;
    sub_222649758(a5, v24);
    if (sub_22261BABC((uint64_t)v24, 2)) {
      return 0;
    }
    if (sub_22263A874(v24, &v25, 738, a5, 0)) {
      return 1;
    }
  }
  unsigned int v11 = v25;
LABEL_9:
  if (v11 != 3)
  {
    sub_2226265A0(a5, v24, 738, (uint64_t)v18);
    unsigned int v12 = v18;
    goto LABEL_20;
  }
  *a3 = 1;
  sub_222649758(a5, v24);
  if (sub_22261BABC((uint64_t)v24, 2)) {
    return 0;
  }
  if ((sub_22263A874(v24, &v25, 738, a5, 0) & 1) == 0)
  {
    if (v25 != 4)
    {
      sub_2226265A0(a5, v24, 738, (uint64_t)v17);
      unsigned int v12 = v17;
      goto LABEL_20;
    }
    *a4 = 1;
    sub_222649758(a5, v24);
    if (!sub_22261BABC((uint64_t)v24, 2))
    {
      sub_2226265A0(a5, v24, 738, (uint64_t)v16);
      unsigned int v12 = v16;
LABEL_20:
      sub_2225F37F0(v12);
      sub_222635C58(a5);
      return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_22263AD28(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 152);
}

void sub_22263AD34(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  memset(v13, 0, sizeof(v13));
  sub_22261B6AC(v13);
  sub_22260BC64(v3, (uint64_t)v13);
  uint64_t v4 = sub_2225E2698(*a1);
  sub_22261FB44(v4);
  uint64_t v5 = sub_2225E2698(*a1);
  sub_22261F2AC(v5, 2);
  unint64_t v6 = sub_222609DE8(*a1);
  unint64_t v7 = v6;
  uint64_t v8 = 24 * v6;
  if (is_mul_ok(v6, 0x18uLL)) {
    uint64_t v9 = 24 * v6;
  }
  else {
    uint64_t v9 = -1;
  }
  uint64_t v10 = sub_2225C26A4(v9);
  uint64_t v11 = v10;
  if (v7)
  {
    do
    {
      uint64_t v10 = sub_22261B6AC(v10) + 24;
      v8 -= 24;
    }
    while (v8);
  }
  sub_2225C3C70(*a1);
  sub_2225C3D04(*a1);
  sub_222625C6C();
  unint64_t v12 = sub_222609DE8(*a1);
  sub_22263F714(v2, v11, v12, 1, 1);
}

uint64_t sub_22263AE30(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  BOOL v6 = sub_2225CC124(a3, 0) == 60;
  BOOL v7 = v6;
  if (v6)
  {
    if (sub_2225F87FC(a3) != 62)
    {
      sub_22261CABC(a1, a2, 718, (uint64_t)v17);
      uint64_t v8 = v17;
LABEL_12:
      sub_2225F37F0(v8);
      sub_2225CCC70(&v16);
      *(_OWORD *)a3 = v16;
      return 1;
    }
  }
  else
  {
    int v9 = sub_2225CC124(a3, 0);
    if (v9 != 34)
    {
      sub_22261CABC(a1, a2, 718, (uint64_t)v14);
      uint64_t v8 = v14;
      goto LABEL_12;
    }
    if (sub_2225F87FC(a3) != 34)
    {
      sub_22261CABC(a1, a2, 718, (uint64_t)v15);
      uint64_t v8 = v15;
      goto LABEL_12;
    }
  }
  if ((unint64_t)sub_2225C3D04((uint64_t)a3) <= 2)
  {
    sub_22261CABC(a1, a2, 707, (uint64_t)v13);
    uint64_t v8 = v13;
    goto LABEL_12;
  }
  uint64_t v10 = sub_2225C3D04((uint64_t)a3);
  *a3 = sub_2225CE76C(a3, 1uLL, v10 - 2);
  a3[1] = v11;
  return v7;
}

uint64_t sub_22263AF68(uint64_t a1, const void **a2, _DWORD *a3)
{
  sub_22261B6AC(v15);
  sub_222649758(a1, v15);
  while (sub_22261CB34((uint64_t)v15, 2))
  {
    *a3 = sub_2225C3B40(v15);
    if (sub_22261BABC((uint64_t)v15, 3))
    {
      sub_222636060(a1);
    }
    else
    {
      if (sub_222620488((uint64_t)v15))
      {
        LOBYTE(__src) = 32;
        sub_2225C52D8((uint64_t)a2, &__src);
      }
      unsigned int v6 = sub_2225C5664((uint64_t)a2);
      int v7 = sub_222613380((uint64_t)v15);
      sub_2225CF670(a2, v7 + v6);
      __src = 0;
      __src = (void *)sub_2225C5698((uint64_t)a2, v6);
      unsigned int v8 = sub_222626584(a1, v15, (uint64_t *)&__src, 0);
      int v9 = __src;
      if (v9 != (void *)sub_2225C5698((uint64_t)a2, v6))
      {
        uint64_t v10 = (void *)sub_2225C5698((uint64_t)a2, v6);
        memcpy(v10, __src, v8);
      }
      if (sub_222613380((uint64_t)v15) != v8) {
        sub_2225CF670(a2, v8 + v6);
      }
      if (sub_22261BABC((uint64_t)v15, 50)) {
        return 0;
      }
    }
    sub_222649758(a1, v15);
  }
  unsigned int v11 = sub_2225C3B40(v15);
  sub_22261CABC(a1, v11, 718, (uint64_t)v13);
  sub_2225F37F0(v13);
  return 1;
}

BOOL sub_22263B110(uint64_t a1, uint64_t a2)
{
  return sub_2225DF1DC(a1 + 456, a2);
}

uint64_t sub_22263B118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 456;
  unsigned int v6 = (void *)sub_2225CBA80(a1 + 456, a2);
  uint64_t v12 = sub_2225F9F50(v6, a2, a3);
  uint64_t v8 = sub_2225CBA80(v5, v7);
  uint64_t v11 = sub_2225E41D8(v8);
  if (sub_2225DE624(&v12, &v11))
  {
    uint64_t v9 = sub_2225E4210((uint64_t)&v12);
    sub_2225CCBF8(&v13, v9 + 8);
  }
  else
  {
    sub_2225CCC70(&v13);
  }
  return v13;
}

uint64_t sub_22263B1B0(uint64_t a1, __n128 *a2, int a3)
{
  char v3 = a3;
  uint64_t v6 = 48;
  if (a3) {
    uint64_t v6 = 52;
  }
  uint64_t v7 = *(unsigned int *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a1 + 24);
  uint64_t v10 = sub_2225D2E88((uint64_t *)(a1 + 24));
  uint64_t v11 = sub_22263BD98(&v10, v7);
  sub_2225D24D0(&v12, &v11);
  uint64_t result = sub_22263BC5C(v8, v12, a2);
  if ((v3 & 1) == 0) {
    ++*(_DWORD *)(a1 + 48);
  }
  ++*(_DWORD *)(a1 + 52);
  return result;
}

void sub_22263B25C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = sub_2226259E4(a1);

  sub_22261FFBC(v7, v8, a2, a3, a4);
}

uint64_t sub_22263B2B0(uint64_t a1)
{
  uint64_t v1 = sub_222608158(a1);
  sub_2225CCBF8(&v3, v1);
  return v3;
}

void sub_22263B2E4(uint64_t a1, int a2, unsigned int a3, __int16 a4, uint64_t a5)
{
  uint64_t v10 = (_DWORD *)sub_2225C26A4(24);
  uint64_t v11 = sub_22261B6AC(v10);
  sub_22261FB44(v11);
  sub_22261F2AC((uint64_t)v10, a4);
  sub_2225D0A60(v10, a2);
  sub_22263C774((uint64_t)v10, a3);
  sub_2225C5B6C((uint64_t)v10, a5);

  sub_22263F714(a1, (uint64_t)v10, 1, 1, 1);
}

uint64_t sub_22263B390(uint64_t a1, uint64_t a2)
{
  return ((unsigned __int16)*sub_222618410(a1, a2) >> 2) & 3;
}

BOOL sub_22263B3B0(uint64_t a1, unsigned int *a2)
{
  sub_2226265A0(a1, a2, 726, (uint64_t)v4);
  sub_2225F37F0(v4);
  return sub_222635C58(a1);
}

uint64_t sub_22263B3F4(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  v29[35] = *MEMORY[0x263EF8340];
  sub_22263B708(v29);
  while (1)
  {
    sub_222635CA4(a1, (uint64_t)a3);
    int v6 = sub_22261BFB4((uint64_t)a3);
    if (v6 == 2)
    {
      sub_2226265A0(a1, a3, 744, (uint64_t)v24);
      uint64_t v11 = (uint64_t *)v24;
      goto LABEL_27;
    }
    if (v6 == 26)
    {
      uint64_t v12 = *(void *)(a1 + 24);
      if ((*(void *)v12 & 1) == 0)
      {
        if ((*(void *)v12 & 0x80) != 0) {
          int v13 = 873;
        }
        else {
          int v13 = 820;
        }
        sub_2226265A0(a1, a3, v13, (uint64_t)v27);
        sub_2225F37F0(v27);
        uint64_t v12 = *(void *)(a1 + 24);
      }
      if ((*(_WORD *)(v12 + 16) & 0x4000) != 0)
      {
        sub_2226265A0(a1, a3, 745, (uint64_t)v26);
        uint64_t v11 = (uint64_t *)v26;
        goto LABEL_27;
      }
      sub_222635CA4(a1, (uint64_t)a3);
      if (sub_22261CB34((uint64_t)a3, 22))
      {
        sub_2226265A0(a1, a3, 744, (uint64_t)v25);
        uint64_t v11 = (uint64_t *)v25;
        goto LABEL_27;
      }
      sub_2225CC7B8((uint64_t)v29, (void *)(a1 + 328));
      sub_22263B70C(a2);
LABEL_30:
      uint64_t v15 = sub_2225F84F4((uint64_t)v29, 0);
      unsigned int v16 = sub_2225CC780((uint64_t)v29);
      sub_22263B71C(a2, v15, v16, a1 + 104);
      goto LABEL_31;
    }
    if (v6 == 22) {
      break;
    }
    uint64_t v23 = 0;
    uint64_t v23 = sub_22261AF2C((uint64_t)a3);
    if (!v23)
    {
      sub_2226265A0(a1, a3, 732, (uint64_t)v22);
      uint64_t v11 = (uint64_t *)v22;
      goto LABEL_27;
    }
    uint64_t v7 = sub_2225C3C70((uint64_t)v29);
    uint64_t v8 = sub_2225C3D04((uint64_t)v29);
    uint64_t v9 = sub_2226300FC(v7, v8, &v23);
    if (v9 != sub_2225C3D04((uint64_t)v29))
    {
      sub_2226265A0(a1, a3, 706, (uint64_t)v21);
      sub_222635F48(v21, v23);
      uint64_t v11 = v21;
      goto LABEL_27;
    }
    sub_2225CC7B8((uint64_t)v29, &v23);
    sub_222635CA4(a1, (uint64_t)a3);
    int v10 = sub_22261BFB4((uint64_t)a3);
    if (v10 != 64)
    {
      if (v10 != 22)
      {
        if (v10 != 26)
        {
          sub_2226265A0(a1, a3, 713, (uint64_t)v20);
          uint64_t v11 = (uint64_t *)v20;
          goto LABEL_27;
        }
        sub_2226265A0(a1, a3, 791, (uint64_t)v19);
        sub_2225F37F0(v19);
        sub_222635CA4(a1, (uint64_t)a3);
        if (sub_22261CB34((uint64_t)a3, 22))
        {
          sub_2226265A0(a1, a3, 744, (uint64_t)v18);
          uint64_t v11 = (uint64_t *)v18;
LABEL_27:
          sub_2225F37F0(v11);
          uint64_t v14 = 1;
          goto LABEL_32;
        }
        sub_22263B788(a2);
      }
      goto LABEL_30;
    }
  }
  if (!sub_2225CF1D0(v29))
  {
    sub_2226265A0(a1, a3, 715, (uint64_t)v28);
    uint64_t v11 = (uint64_t *)v28;
    goto LABEL_27;
  }
LABEL_31:
  uint64_t v14 = 0;
LABEL_32:
  sub_2225C56C4(v29);
  return v14;
}

uint64_t sub_22263B70C(uint64_t result)
{
  *(_WORD *)(result + 244) |= 4u;
  return result;
}

uint64_t sub_22263B71C(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v6 = result;
    *(_DWORD *)(result + 16) = a3;
    uint64_t result = sub_22263C7AC(a4, a3);
    uint64_t v7 = 0;
    *(void *)(v6 + 8) = result;
    do
    {
      *(void *)(*(void *)(v6 + 8) + v7) = *(void *)(a2 + v7);
      v7 += 8;
    }
    while (8 * a3 != v7);
  }
  return result;
}

uint64_t sub_22263B788(uint64_t result)
{
  *(_WORD *)(result + 244) |= 8u;
  return result;
}

uint64_t sub_22263B798(uint64_t result, uint64_t a2, int a3)
{
  *(void *)(result + 16) = a2;
  *(_DWORD *)(result + 28) = a3;
  return result;
}

uint64_t sub_22263B7A4(uint64_t result)
{
  *(_WORD *)(result + 244) |= 2u;
  return result;
}

unsigned int *sub_22263B7B4(unsigned int *a1, int a2)
{
  if (a2) {
    int v2 = 0x1000000;
  }
  else {
    int v2 = 0;
  }
  unsigned int v3 = *a1 & 0xFEFFFFFF | v2;
  *a1 = v3;
  if (!a2) {
    return (unsigned int *)sub_22260740C(a1);
  }
  *a1 = v3 | 0x4000000;
  return a1;
}

BOOL sub_22263B7E4(uint64_t a1)
{
  return (*(_WORD *)(a1 + 244) & 2) == 0;
}

uint64_t sub_22263B7F4(uint64_t a1, uint64_t a2)
{
  return sub_22260BC64(a1 + 24, a2);
}

unint64_t sub_22263B7FC(uint64_t a1)
{
  return sub_222609DE8(a1 + 24);
}

uint64_t sub_22263B818(uint64_t a1, unsigned int a2)
{
  return sub_222609E38(a1 + 24, a2);
}

uint64_t sub_22263B820(uint64_t result)
{
  *(_WORD *)(result + 244) |= 0x20u;
  return result;
}

uint64_t sub_22263B830(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 9);
}

uint64_t sub_22263B838(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 244) >> 7) & 1;
}

uint64_t sub_22263B844(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 244) >> 9) & 1;
}

uint64_t sub_22263B850(uint64_t a1)
{
  return HIBYTE(*(unsigned __int16 *)(a1 + 244)) & 1;
}

uint64_t sub_22263B85C(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = sub_22263C8F4(a2);

  return sub_2225D329C(a1, v3);
}

void *sub_22263B89C(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  int v6 = sub_2225C3B40(a3);
  sub_2225CCC70(v8);
  return sub_22263C7B8(a1, a2, (uint64_t)a3, v6, 0, v8[0], v8[1]);
}

uint64_t sub_22263B908(uint64_t result, int a2)
{
  if (a2) {
    __int16 v2 = 512;
  }
  else {
    __int16 v2 = 0;
  }
  *(_WORD *)(result + 244) = *(_WORD *)(result + 244) & 0xFDFF | v2;
  return result;
}

uint64_t sub_22263B928(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = sub_22263C8F4(a2);

  return sub_2225D2FCC(a1, v3);
}

uint64_t sub_22263B968(uint64_t result, uint64_t a2, int a3)
{
  if (*(void *)(result + 8) || *(unsigned char *)(result + 2)) {
    return sub_22263C818(result);
  }
  *(_WORD *)uint64_t result = 257;
  *(void *)(result + 8) = a2;
  *(_DWORD *)(result + 24) = a3;
  return result;
}

uint64_t sub_22263B994(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    return sub_22263C818(result);
  }
  *(_WORD *)uint64_t result = 0;
  return result;
}

uint64_t sub_22263B9A8(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_22263B9D8(a1, 0, a3, a4, a5, a6);
  *(void *)(result + 16) = a2;
  return result;
}

uint64_t sub_22263B9D8(uint64_t a1, char a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  v12[0] = a5;
  v12[1] = a6;
  *(void *)a1 = 0;
  unsigned int v8 = a2 & 3 | (32 * (a4 != 0)) | *(_DWORD *)(a1 + 12) & 0xFFFFFFC0 | 0x10;
  *(_DWORD *)(a1 + 8) = a3;
  *(_DWORD *)(a1 + 12) = v8;
  int v9 = sub_2225C3D04((uint64_t)v12);
  int v10 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 12) = v10 & 0x3F | (v9 << 6);
  if ((v10 & 0x20) != 0)
  {
    *(_DWORD *)sub_22263BA8C(a1) = a4;
    sub_2225C3C70((uint64_t)v12);
    sub_22263BAE4(v12);
    sub_22263BAC8();
  }
  return a1;
}

uint64_t sub_22263BA8C(uint64_t a1)
{
  uint64_t v2 = sub_222627C90(a1);
  if (v2) {
    return v2 + 24;
  }
  else {
    return sub_2225E55A8(a1) + 16;
  }
}

uint64_t sub_22263BAC8()
{
  sub_22263BAF0();
  return v0;
}

uint64_t sub_22263BAE4(void *a1)
{
  return *a1 + 4 * a1[1];
}

uint64_t sub_22263BAF4(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_22263B9D8(a1, 1, a2, a3, a4, a5);
}

uint64_t sub_22263BB0C(uint64_t a1, int a2, int a3)
{
  sub_2225CCC70(v8);
  uint64_t result = sub_22263B9D8(a1, 2, a2, 0, v8[0], v8[1]);
  if (a3) {
    int v7 = 16;
  }
  else {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a1 + 12) & 0xFFFFFFEF | v7;
  return result;
}

uint64_t sub_22263BB84(uint64_t result, char a2)
{
  *(unsigned char *)(result + 10) = a2;
  return result;
}

uint64_t sub_22263BB8C(uint64_t a1)
{
  uint64_t v2 = *(void *)sub_222608644(a1);
  sub_222608660(a1);
  return v2;
}

uint64_t sub_22263BBC0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    return sub_22261FBA0(a1) ^ 1;
  }
  else {
    return a2 != 0;
  }
}

uint64_t sub_22263BBF0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = a2;
  *(unsigned char *)(result + 8) = (*(unsigned char *)(a2 + 436) & 0x20) != 0;
  __int16 v2 = *(_WORD *)(a2 + 436);
  if ((v2 & 0x40) != 0) {
    *(_WORD *)(a2 + 436) = v2 & 0xFFDF;
  }
  return result;
}

unsigned char *sub_22263BC14(unsigned char *result)
{
  *(_WORD *)(*(void *)result + 436) = *(_WORD *)(*(void *)result + 436) & 0xFFDF | (32 * (result[8] & 7));
  return result;
}

uint64_t sub_22263BC34(uint64_t result, uint64_t a2, char a3, int a4)
{
  if (a4) {
    char v4 = 4;
  }
  else {
    char v4 = 0;
  }
  *(unsigned char *)(result + 8) = v4 & 0xFC | a3 & 3 | *(unsigned char *)(result + 8) & 0xC0;
  *(void *)uint64_t result = a2;
  return result;
}

uint64_t sub_22263BC5C(uint64_t *a1, uint64_t a2, __n128 *a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = *a1;
  v18[0] = sub_2225D2E88(a1);
  unint64_t v6 = v5 + 16 * sub_22263BDC8((uint64_t)&v19, (uint64_t)v18);
  unint64_t v7 = a1[1];
  if (v7 >= *(void *)sub_2225D2650((uint64_t)a1, v8))
  {
    uint64_t v14 = sub_2225D2650((uint64_t)a1, v9);
    uint64_t v15 = sub_2225D36D8(a1);
    unint64_t v16 = sub_2225D4E1C(a1, v15 + 1);
    sub_2225D4E98(v18, v16, (uint64_t)(v6 - *a1) >> 4, v14);
    sub_22263BF3C(v18, a3);
    unint64_t v6 = sub_22263C0D8(a1, v18, v6);
    sub_2225D4F8C(v18);
  }
  else
  {
    unint64_t v10 = a1[1];
    if (v6 == v10)
    {
      sub_22263BE00((uint64_t)a1, a3);
    }
    else
    {
      sub_22263BE74((uint64_t)a1, v6, v10, v6 + 16);
      unint64_t v12 = nullsub_1(a3, v11);
      if (v6 <= v12) {
        v12 += 16 * (v12 < a1[1]);
      }
      uint64_t v13 = *(void *)v12;
      *(unsigned char *)(v6 + 8) = *(unsigned char *)(v12 + 8);
      *(void *)unint64_t v6 = v13;
    }
  }
  return sub_2225D0BB0((uint64_t)a1, v6);
}

uint64_t sub_22263BD98(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_22263C764(&v3, a2);
  return v3;
}

uint64_t sub_22263BDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return (v3 - sub_2225C3C70(a2)) >> 4;
}

void *sub_22263BE00(uint64_t a1, __n128 *a2)
{
  sub_222615C7C(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  unint64_t v7 = (__n128 *)nullsub_1(v10, v6);
  sub_2225D4DF8(v5, v7, a2);
  v10 += 16;
  return sub_2225D284C(&v9);
}

uint64_t sub_22263BE74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = (__n128 *)(a2 + *(void *)(a1 + 8) - a4);
  sub_222615C7C(&v14, a1, (uint64_t)(a3 - (void)v6) >> 4);
  if (a3 > (unint64_t)v6)
  {
    uint64_t v8 = v15;
    uint64_t v9 = v6;
    do
    {
      uint64_t v10 = sub_2225D2650(a1, v7);
      unint64_t v12 = (__n128 *)nullsub_1(v8, v11);
      sub_2225D4DF8(v10, v12, v9++);
      v8 += 16;
      uint64_t v15 = v8;
    }
    while ((unint64_t)v9 < a3);
  }
  sub_2225D284C(&v14);
  return sub_22263C1FC();
}

void sub_22263BF3C(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a1[2];
  if (v5 == *(void *)sub_2225D2B20((uint64_t)a1, (uint64_t)a2))
  {
    unint64_t v7 = a1[1];
    if (v7 <= *a1)
    {
      uint64_t v22 = (*(void *)sub_2225D2B20((uint64_t)a1, v6) - *a1) >> 3;
      uint64_t v25 = 1;
      unint64_t v11 = *(void *)sub_2225CBA14(&v22, &v25);
      uint64_t v12 = sub_2225D2B18((uint64_t)a1);
      sub_2225D4E98(&v22, v11, v11 >> 2, v12);
      sub_2225C64B8(&v21, a1[1]);
      sub_2225C64B8(&v20, a1[2]);
      sub_22263C35C((uint64_t)&v22, v21, v20);
      sub_2225C6448(a1, &v22);
      sub_2225C6448(a1 + 1, &v23);
      sub_2225C6448(v4, v24);
      uint64_t v14 = (uint64_t *)sub_2225D2B20((uint64_t)a1, v13);
      unint64_t v16 = (uint64_t *)sub_2225D2B20((uint64_t)&v22, v15);
      sub_2225C6448(v14, v16);
      sub_2225D4F8C(&v22);
    }
    else
    {
      uint64_t v8 = (uint64_t)(v7 - *a1) >> 4;
      if (v8 >= -1) {
        unint64_t v9 = v8 + 1;
      }
      else {
        unint64_t v9 = v8 + 2;
      }
      unint64_t v10 = v9 >> 1;
      *uint64_t v4 = sub_22263C340();
      a1[1] -= 16 * v10;
    }
  }
  uint64_t v17 = sub_2225D2B18((uint64_t)a1);
  uint64_t v19 = (__n128 *)nullsub_1(a1[2], v18);
  sub_2225D4DF8(v17, v19, a2);
  a1[2] += 16;
}

uint64_t sub_22263C0D8(uint64_t *a1, void *a2, uint64_t a3)
{
  nullsub_1(a1, a2);
  uint64_t v6 = a2[1];
  sub_2225D2650((uint64_t)a1, v7);
  sub_2225D2C80(&v18, a3);
  sub_2225D2C80(&v17, *a1);
  sub_2225D2C80(&v16, a2[1]);
  v19[0] = sub_22263C5A0();
  v19[1] = v8;
  a2[1] = sub_2225C3D04((uint64_t)v19);
  sub_2225D2650((uint64_t)a1, v9);
  a2[2] = sub_22263C5BC();
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  unint64_t v11 = (uint64_t *)sub_2225D2650((uint64_t)a1, v10);
  uint64_t v13 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v12);
  sub_2225C6448(v11, v13);
  *a2 = a2[1];
  uint64_t v14 = sub_2225D36D8(a1);
  nullsub_1(a1, v14);
  return v6;
}

uint64_t sub_22263C1FC()
{
  sub_22263C218();
  return v0;
}

uint64_t sub_22263C220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = j_j_nullsub_1(a3);
  uint64_t v9 = sub_22263C2B0((uint64_t)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_22263C2B0(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  return sub_22263C2C0(a2, a3, a4);
}

uint64_t sub_22263C2C0(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a3 - (a2 - (void)a1));
  uint64_t v5 = a2;
  sub_22263C308(v4, a1, (a2 - (uint64_t)a1) >> 4);
  return sub_2225C5EEC((uint64_t)&v5, (uint64_t)&v4);
}

void *sub_22263C308(void *__dst, const void *a2, uint64_t a3)
{
  if (a3) {
    memmove(__dst, a2, 16 * a3 - 7);
  }
  return __dst;
}

uint64_t sub_22263C340()
{
  sub_22263C3A8();
  return v0;
}

uint64_t sub_22263C35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_22263C544(a2, a3);

  return sub_22263C4A8(a1, a2, v5);
}

uint64_t sub_22263C3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)j_j_nullsub_1(a3);
  uint64_t v9 = sub_22263C440((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_22263C440(int a1, const void *a2, uint64_t a3, char *__dst)
{
  return sub_22263C450(a2, a3, __dst);
}

uint64_t sub_22263C450(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_22263C308(__dst, a1, (a2 - (uint64_t)a1) >> 4);
  uint64_t v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

uint64_t sub_22263C4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = a2;
  sub_22263C548(v9, (void *)(a1 + 16), a3);
  while (v9[0] != v9[1])
  {
    uint64_t v4 = sub_2225D2B18(a1);
    uint64_t v6 = (__n128 *)nullsub_1(v9[0], v5);
    uint64_t v7 = (__n128 *)sub_2225C3C70((uint64_t)&v10);
    sub_2225D4DF8(v4, v6, v7);
    v9[0] += 16;
    sub_22263C54C(&v10);
  }
  return sub_22261AA18((uint64_t)v9);
}

void *sub_22263C54C(void *result)
{
  *result += 16;
  return result;
}

void *sub_22263C55C(void *result, void *a2, uint64_t a3)
{
  *uint64_t result = *a2;
  result[1] = *a2 + 16 * a3;
  result[2] = a2;
  return result;
}

uint64_t sub_22263C574(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  return sub_22263BDC8((uint64_t)&v3, (uint64_t)&v4);
}

uint64_t sub_22263C5A0()
{
  return sub_22263C5CC();
}

uint64_t sub_22263C5BC()
{
  return sub_22263C340();
}

uint64_t sub_22263C5CC()
{
  sub_22263C5F4(v1);
  return v1[2];
}

uint64_t sub_22263C5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_22263C6CC(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_22263C6CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v15[0] = a1;
  v15[1] = a2;
  v14[0] = a3;
  v14[1] = a4;
  v13[0] = a5;
  v13[1] = a6;
  while (sub_2225D2CC0((uint64_t)v15, (uint64_t)v14))
  {
    uint64_t v9 = sub_2225D5320((uint64_t)v15, v8);
    uint64_t v10 = sub_2225D35A0((uint64_t)v13);
    char v11 = *(unsigned char *)(v9 + 8);
    *(void *)uint64_t v10 = *(void *)v9;
    *(unsigned char *)(v10 + 8) = v11;
    sub_2225D5358((uint64_t)v15);
    sub_2225D5358((uint64_t)v13);
  }
  return sub_2225CCC60((uint64_t)v15, (uint64_t)v13, a7);
}

void *sub_22263C764(void *result, uint64_t a2)
{
  *result += 16 * a2;
  return result;
}

uint64_t sub_22263C774(uint64_t a1, unsigned int a2)
{
  unsigned int v4 = a2;
  uint64_t result = sub_2225C3B40(&v4);
  *(_DWORD *)(a1 + 4) = result;
  return result;
}

uint64_t sub_22263C7AC(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, 8 * a2, 8);
}

void *sub_22263C7B8(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (void *)sub_222635A9C(a1, a3, a4, a5, a6, a7);
  sub_222640E20(a1, a2, v9);
  return v9;
}

uint64_t sub_22263C818(uint64_t result)
{
  *(_WORD *)uint64_t result = 1;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_22263C828(uint64_t a1)
{
  return sub_2225D0B60(a1, 0x10u);
}

uint64_t sub_22263C830(uint64_t a1)
{
  return sub_2226109F8(a1, 3u);
}

unint64_t sub_22263C83C(unint64_t result, uint64_t a2)
{
  unint64_t v3 = result;
  if (result != a2)
  {
    unint64_t v2 = a2 - 16;
    if (a2 - 16 > result)
    {
      do
      {
        uint64_t result = sub_22263C898(&v3, &v2);
        v2 -= 16;
        v3 += 16;
      }
      while (v3 < v2);
    }
  }
  return result;
}

uint64_t sub_22263C898(void *a1, void *a2)
{
  return sub_22263C8A4(*a1, *a2);
}

int *sub_22263C8AC(uint64_t a1, uint64_t a2)
{
  sub_2225C6448((uint64_t *)a1, (uint64_t *)a2);

  return sub_2225D33F4((int *)(a1 + 8), (int *)(a2 + 8));
}

uint64_t sub_22263C8EC(uint64_t a1)
{
  return sub_2225D5BA8(a1, 0x20u);
}

uint64_t sub_22263C8F4(unsigned int a1)
{
  unsigned int v2 = a1;
  return sub_22263C91C(&v2);
}

uint64_t sub_22263C91C(unsigned int *a1)
{
  return sub_2225C3B40(a1);
}

uint64_t sub_22263C938(uint64_t a1, void *a2)
{
  LOBYTE(v15) = 1;
  sub_222626064((uint64_t)v18, (unsigned char *)(a1 + 438), &v15);
  __int16 v4 = *(_WORD *)(a1 + 436) & 0x20;
  *(_WORD *)(a1 + 436) &= ~0x20u;
  sub_22261B6AC(v17);
  sub_22263CACC(a1, (uint64_t)v17);
  uint64_t v5 = sub_2225CDCF4(a1);
  uint64_t v6 = sub_22263CB0C(v5);
  sub_22263CB14((uint64_t)&v15, v6);
  if (!sub_22263CB18(&v15, v17, &v13, 1, a1))
  {
    if (sub_22261BABC((uint64_t)v17, 2))
    {
      if (v13 == 1) {
        *a2 = v14;
      }
    }
    else
    {
      unsigned int v8 = sub_22263E03C(59);
      int v9 = sub_22263D518((uint64_t)&v15, v8, v17, 1u, a1);
      BOOL v7 = sub_22261CB34((uint64_t)v17, 2);
      if (v9) {
        goto LABEL_7;
      }
      if (v7)
      {
        sub_2226265A0(a1, v17, 714, (uint64_t)v12);
        sub_2225F37F0(v12);
        sub_222635C58(a1);
      }
    }
    *(_WORD *)(a1 + 436) = *(_WORD *)(a1 + 436) & 0xFFDF | v4;
    uint64_t v10 = sub_22263D4FC(v16, 0);
    goto LABEL_13;
  }
  BOOL v7 = sub_22261CB34((uint64_t)v17, 2);
LABEL_7:
  if (v7) {
    sub_222635C58(a1);
  }
  uint64_t v10 = 0;
  *(_WORD *)(a1 + 436) = *(_WORD *)(a1 + 436) & 0xFFDF | v4;
LABEL_13:
  sub_22263E198((uint64_t)&v15);
  sub_222626160((uint64_t)v18);
  return v10;
}

uint64_t sub_22263CACC(uint64_t a1, uint64_t a2)
{
  do
  {
    sub_222649758(a1, a2);
    uint64_t result = sub_22261BFB4(a2);
  }
  while (result == 5);
  return result;
}

uint64_t sub_22263CB0C(uint64_t a1)
{
  return sub_2226135E8(a1, *(_DWORD *)(a1 + 224));
}

uint64_t sub_22263CB18(_DWORD *a1, unsigned int *a2, int *a3, uint64_t a4, uint64_t a5)
{
  *a3 = 2;
  if (sub_22261BABC((uint64_t)a2, 3))
  {
    if (sub_22263E20C(a5))
    {
      uint64_t v10 = sub_22263E20C(a5);
      (*(void (**)(uint64_t))(*(void *)v10 + 40))(v10);
    }
    sub_222636060(a5);
    sub_22263CACC(a5, (uint64_t)a2);
  }
  uint64_t v11 = sub_22261AF2C((uint64_t)a2);
  if (!v11)
  {
    int v14 = sub_22261BFB4((uint64_t)a2);
    switch(v14)
    {
      case 8:
        sub_2225DAD14(v65);
        v52[0] = 0;
        uint64_t v27 = sub_222648D5C(a5, a2, v65, v52);
        if (v52[0])
        {
          uint64_t v16 = 1;
          goto LABEL_83;
        }
        uint64_t v36 = v27;
        uint64_t v37 = v28;
        unsigned int v38 = sub_2225C3B40(a2);
        sub_222623360((uint64_t)v60, v36, v37, v38, a5);
        if (v61) {
          goto LABEL_70;
        }
        if (sub_222623248((uint64_t)v60) || v64)
        {
          sub_2226265A0(a5, a2, 725, (uint64_t)v59);
          sub_2225F37F0(v59);
LABEL_70:
          uint64_t v16 = 1;
LABEL_71:
          sub_22263E5F0((uint64_t)v60);
          goto LABEL_83;
        }
        if (sub_22263E5E0((uint64_t)v60))
        {
          sub_2226265A0(a5, a2, 733, (uint64_t)v53);
          sub_222622304(v53, 1);
          sub_2225F37F0(v53);
        }
        if ((*(unsigned char *)sub_222608330(a5) & 1) == 0 && v63)
        {
          if ((*(unsigned char *)sub_222608330(a5) & 0x40) != 0)
          {
            if ((*(void *)sub_222608330(a5) & 0x80) != 0) {
              int v43 = 63;
            }
            else {
              int v43 = 39;
            }
            int v39 = v58;
            uint64_t v40 = v58;
            uint64_t v41 = a5;
            uint64_t v42 = a2;
          }
          else
          {
            int v39 = v57;
            uint64_t v40 = v57;
            uint64_t v41 = a5;
            uint64_t v42 = a2;
            int v43 = 38;
          }
          sub_2226265A0(v41, v42, v43, (uint64_t)v40);
          sub_2225F37F0(v39);
        }
        if (sub_2226235C0((uint64_t)v60, a1 + 2))
        {
          if (a4)
          {
            sub_2226265A0(a5, a2, 15, (uint64_t)v53);
            sub_222622304(v53, 1);
            unsigned int v50 = v53;
LABEL_93:
            sub_2225F37F0(v50);
          }
        }
        else
        {
          sub_22263E594((uint64_t)(a1 + 2), v62);
          if (v62 || !sub_2225C3B84(a1 + 2)) {
            goto LABEL_100;
          }
          if (a4 && sub_22263E5E8((uint64_t)v60) == 10)
          {
            sub_2226265A0(a5, a2, 40, (uint64_t)v56);
            unsigned int v50 = (uint64_t *)v56;
            goto LABEL_93;
          }
        }
        sub_22263E594((uint64_t)(a1 + 2), 1);
LABEL_100:
        int v51 = sub_2225C3B40(a2);
        sub_22263E59C(a1, v51);
        sub_22263CACC(a5, (uint64_t)a2);
        uint64_t v16 = 0;
        goto LABEL_71;
      case 9:
      case 10:
      case 11:
      case 12:
        if (sub_22262D3B0((uint64_t)a2))
        {
          sub_2226265A0(a5, a2, 733, (uint64_t)v60);
          sub_222622304(v60, 0);
          sub_2225F37F0(v60);
        }
        sub_2225CF1C4(v65);
        char v55 = 0;
        v54[0] = sub_222648D5C(a5, a2, v65, &v55);
        v54[1] = v15;
        if (v55)
        {
          uint64_t v16 = 1;
        }
        else
        {
          uint64_t v20 = sub_2225C3C70((uint64_t)v54);
          uint64_t v21 = sub_2225C3C78(v54);
          unsigned int v22 = sub_2225C3B40(a2);
          int v23 = sub_22261BFB4((uint64_t)a2);
          sub_222624790((uint64_t)v60, v20, v21, v22, a5, v23);
          uint64_t v16 = sub_22263E5F4((uint64_t)v60);
          if ((v16 & 1) == 0)
          {
            uint64_t v24 = sub_2225CDCF4(a5);
            if (sub_222624788((uint64_t)v60))
            {
              uint64_t v25 = sub_2226135D8(v24);
            }
            else if (sub_222624778((uint64_t)v60))
            {
              uint64_t v25 = sub_222623ED0(v24);
            }
            else if (sub_22263E5FC((uint64_t)v60))
            {
              uint64_t v25 = sub_2226258F0(v24);
            }
            else if (sub_22263E60C((uint64_t)v60))
            {
              uint64_t v25 = sub_2226258F8(v24);
            }
            else
            {
              uint64_t v25 = sub_2225E58B4();
            }
            sub_22263E1D8(v53, v25, 1);
            uint64_t v45 = sub_2225C3C70((uint64_t)v60);
            sub_22263E56C((uint64_t)v53, v45);
            if (!sub_22263E5FC((uint64_t)v60) && !sub_22263E60C((uint64_t)v60))
            {
              char v46 = (*(_WORD *)(sub_222608330(a5) + 16) & 0x800) == 0;
              sub_22263E594((uint64_t)v53, v46);
            }
            unsigned int v47 = sub_2225C3B40(a1 + 2);
            if (v47 <= sub_2225C3B40((unsigned int *)v53))
            {
              sub_22263E6CC((uint64_t)(a1 + 2), (uint64_t)v53);
            }
            else
            {
              uint64_t v48 = sub_2225C3B40(a1 + 2);
              sub_22263E61C((uint64_t)v53, v48, (uint64_t)v52);
              sub_22263E694((uint64_t)(a1 + 2), (uint64_t)v52);
              sub_22263E6C8(v52);
            }
            int v49 = sub_2225C3B40(a2);
            sub_22263E59C(a1, v49);
            sub_22263CACC(a5, (uint64_t)a2);
            sub_22263E6C8(v53);
          }
          sub_22263E700((uint64_t)v60);
        }
LABEL_83:
        sub_2225CA520(v65);
        return v16;
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
LABEL_30:
        sub_2226265A0(a5, a2, 720, (uint64_t)v67);
        BOOL v26 = v67;
        goto LABEL_31;
      case 21:
        unsigned int v29 = sub_2225C3B40(a2);
        sub_22263CACC(a5, (uint64_t)a2);
        if (sub_22263CB18(a1, a2, a3, a4, a5)) {
          return 1;
        }
        if (sub_22261BABC((uint64_t)a2, 22)) {
          goto LABEL_73;
        }
        uint64_t v16 = 1;
        if (sub_22263D518((uint64_t)a1, 1u, a2, a4, a5)) {
          return v16;
        }
        if (sub_22261CB34((uint64_t)a2, 22))
        {
          unsigned int v30 = sub_2225C3B40(a2);
          sub_22261CABC(a5, v30, 716, (uint64_t)v60);
          sub_222625214(v60, (uint64_t *)a1);
          sub_2225F37F0(v60);
          sub_22261CABC(a5, v29, 50, (uint64_t)v60);
          sub_222635F18(v60, 0x15u);
          sub_2225F37F0(v60);
          return v16;
        }
        *a3 = 2;
LABEL_73:
        int v44 = sub_2225C3B40(a2);
        sub_22263E704(a1, v29, v44);
        goto LABEL_20;
      case 22:
LABEL_29:
        sub_2226265A0(a5, a2, 717, (uint64_t)v66);
        BOOL v26 = v66;
LABEL_31:
        sub_2225F37F0(v26);
        return 1;
      default:
        switch(v14)
        {
          case ' ':
            int v19 = sub_2225C3B40(a2);
            sub_22263CACC(a5, (uint64_t)a2);
            if (sub_22263CB18(a1, a2, a3, a4, a5)) {
              return 1;
            }
            sub_22261C7CC(a1, v19);
            return 0;
          case '!':
          case '""':
          case '$':
          case '%':
          case '&':
            goto LABEL_30;
          case '#':
            unsigned int v31 = sub_2225C3B40(a2);
            sub_22263CACC(a5, (uint64_t)a2);
            if (sub_22263CB18(a1, a2, a3, a4, a5)) {
              return 1;
            }
            sub_22261C7CC(a1, v31);
            sub_22263E748((uint64_t)(a1 + 2), (uint64_t)v60);
            sub_22263E694((uint64_t)(a1 + 2), (uint64_t)v60);
            sub_22263E6C8(v60);
            if ((sub_22263E794((uint64_t)a1) & 1) == 0 && sub_2225C9C84((uint64_t)(a1 + 2)) && a4)
            {
              sub_22261CABC(a5, v31, 888, (uint64_t)v60);
              sub_222625214(v60, (uint64_t *)a1);
              sub_2225F37F0(v60);
            }
            goto LABEL_47;
          case '\'':
            int v32 = sub_2225C3B40(a2);
            sub_22263CACC(a5, (uint64_t)a2);
            if (sub_22263CB18(a1, a2, a3, a4, a5)) {
              return 1;
            }
            sub_22261C7CC(a1, v32);
            sub_22263E79C((uint64_t)(a1 + 2), (uint64_t)v60);
            sub_22263E694((uint64_t)(a1 + 2), (uint64_t)v60);
            sub_22263E6C8(v60);
LABEL_47:
            uint64_t v16 = 0;
            int v33 = 2;
            goto LABEL_48;
          case '(':
            int v34 = sub_2225C3B40(a2);
            sub_22263CACC(a5, (uint64_t)a2);
            if (sub_22263CB18(a1, a2, a3, a4, a5)) {
              return 1;
            }
            sub_22261C7CC(a1, v34);
            BOOL v35 = sub_2225C7D98((uint64_t)(a1 + 2));
            sub_22263E56C((uint64_t)(a1 + 2), v35);
            sub_22263E594((uint64_t)(a1 + 2), 0);
            if (*a3 == 1)
            {
              uint64_t v16 = 0;
              *a3 = 0;
            }
            else
            {
              uint64_t v16 = 0;
              if (!*a3)
              {
                uint64_t v16 = 0;
                int v33 = 1;
LABEL_48:
                *a3 = v33;
              }
            }
            break;
          default:
            if (v14 == 2) {
              goto LABEL_29;
            }
            goto LABEL_30;
        }
        return v16;
    }
  }
  uint64_t v12 = (_DWORD *)v11;
  if (sub_22263E214(v11, "defined"))
  {
    return sub_22263E270(a1, (uint64_t)a2, (uint64_t)a3, a4, a5);
  }
  else
  {
    if (a4 && sub_22263E560(v12) != 145 && sub_22263E560(v12) != 131)
    {
      sub_2226265A0(a5, a2, 890, (uint64_t)v60);
      sub_222635F48(v60, (uint64_t)v12);
      sub_2225F37F0(v60);
    }
    BOOL v17 = sub_22263E560(v12) == 145;
    sub_22263E56C((uint64_t)(a1 + 2), v17);
    sub_22263E594((uint64_t)(a1 + 2), 0);
    int v18 = sub_2225C3B40(a2);
    sub_22263E59C(a1, v18);
LABEL_20:
    sub_22263CACC(a5, (uint64_t)a2);
    return 0;
  }
}

uint64_t sub_22263D4FC(unsigned int *a1, uint64_t a2)
{
  return sub_22263E8E8(a1, a2) ^ 1;
}

uint64_t sub_22263D518(uint64_t a1, unsigned int a2, unsigned int *a3, unsigned int a4, uint64_t a5)
{
  int v8 = sub_22261BFB4((uint64_t)a3);
  unsigned int v9 = sub_22263E03C(v8);
  if (v9 != -1)
  {
    unsigned int v10 = v9;
    while (1)
    {
      BOOL v11 = v10 >= a2;
      if (v10 < a2) {
        return v11;
      }
      int v12 = sub_22261BFB4((uint64_t)a3);
      int v13 = v12;
      if (v12 == 59) {
        goto LABEL_7;
      }
      if (v12 != 57) {
        break;
      }
      if ((sub_22263D4FC((unsigned int *)(a1 + 8), 0) & 1) == 0)
      {
LABEL_10:
        uint64_t v14 = a4;
        goto LABEL_11;
      }
LABEL_8:
      uint64_t v14 = 0;
LABEL_11:
      unsigned int v15 = sub_2225C3B40(a3);
      sub_22263CACC(a5, (uint64_t)a3);
      uint64_t v16 = sub_22263EB28(a1);
      uint64_t v17 = sub_22263CB14((uint64_t)&v73, v16);
      if (sub_22263CB18(v17, a3, v72, v14, a5)) {
        goto LABEL_101;
      }
      int v18 = sub_22261BFB4((uint64_t)a3);
      unsigned int v19 = sub_22263E03C(v18);
      if (v19 == -1)
      {
        unsigned int v54 = sub_2225C3B40(a3);
        sub_22261CABC(a5, v54, 719, (uint64_t)&v58);
        sub_222625214(&v58, &v73);
        sub_2225F37F0(&v58);
LABEL_101:
        sub_22263E198((uint64_t)&v73);
        return 1;
      }
      unsigned int v20 = v19;
      if (v13 == 59) {
        unsigned int v21 = sub_22263E03C(64);
      }
      else {
        unsigned int v21 = v10 + 1;
      }
      if (v20 >= v21)
      {
        if (sub_22263D518(&v73)) {
          goto LABEL_101;
        }
        int v22 = sub_22261BFB4((uint64_t)a3);
        unsigned int v20 = sub_22263E03C(v22);
      }
      uint64_t v23 = sub_22263EB28(a1);
      sub_22263E1D8(v71, v23, 1);
      if ((v13 - 28) > 0x24 || ((1 << (v13 - 28)) & 0x10A0880001) == 0)
      {
        char v24 = sub_22263E794(a1);
        char v25 = sub_22263E794((uint64_t)&v73);
        sub_22263E594((uint64_t)v71, v24 | v25);
        if (a4 && sub_2225D05E4((uint64_t)v71))
        {
          if ((sub_22263E794(a1) & 1) == 0 && sub_2225C3B84((_DWORD *)(a1 + 8)))
          {
            sub_22261CABC(a5, v15, 885, (uint64_t)v70);
            sub_2225CA450((_DWORD *)(a1 + 8), 0xAu, 1, (uint64_t)&v67);
            sub_2225D169C(&v67, " to ", (uint64_t)&v68);
            sub_2225CA450((_DWORD *)(a1 + 8), 0xAu, 0, (uint64_t)&v66);
            sub_2225D1644(&v68, (uint64_t)&v66, (uint64_t)&v58);
            sub_2225CCBF8(v69, &v58);
            BOOL v26 = sub_2225F3774(v70, v69[0], v69[1]);
            uint64_t v27 = sub_222625214(v26, (uint64_t *)a1);
            sub_222625214(v27, &v73);
            std::string::~string(&v58);
            std::string::~string(&v66);
            std::string::~string(&v68);
            std::string::~string(&v67);
            sub_2225F37F0(v70);
          }
          if ((sub_22263E794((uint64_t)&v73) & 1) == 0 && sub_2225C3B84(v74))
          {
            sub_22261CABC(a5, v15, 886, (uint64_t)v70);
            sub_2225CA450(v74, 0xAu, 1, (uint64_t)&v67);
            sub_2225D169C(&v67, " to ", (uint64_t)&v68);
            sub_2225CA450(v74, 0xAu, 0, (uint64_t)&v66);
            sub_2225D1644(&v68, (uint64_t)&v66, (uint64_t)&v58);
            sub_2225CCBF8(v65, &v58);
            uint64_t v28 = sub_2225F3774(v70, v65[0], v65[1]);
            unsigned int v29 = sub_222625214(v28, (uint64_t *)a1);
            sub_222625214(v29, &v73);
            std::string::~string(&v58);
            std::string::~string(&v66);
            std::string::~string(&v68);
            std::string::~string(&v67);
            sub_2225F37F0(v70);
          }
        }
        char v30 = sub_2225D05E4((uint64_t)v71);
        sub_22263E594(a1 + 8, v30);
        char v31 = sub_2225D05E4((uint64_t)v71);
        sub_22263E594((uint64_t)v74, v31);
      }
      v67.__r_.__value_.__s.__data_[0] = 0;
      switch(v13)
      {
        case 28:
          unsigned int v32 = sub_22263D4FC((unsigned int *)(a1 + 8), 0);
          if (v32) {
            goto LABEL_66;
          }
          goto LABEL_68;
        case 29:
        case 31:
        case 33:
        case 34:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 43:
        case 45:
        case 49:
        case 53:
        case 55:
        case 58:
        case 61:
        case 62:
          __break(1u);
          JUMPOUT(0x22263DFA4);
        case 30:
          if (sub_2225C3B48((uint64_t)v71))
          {
            sub_2225C9D44((unsigned int *)(a1 + 8), (unsigned int *)v74, &v67, v63);
            sub_22263E85C(&v58, v63, 0);
            sub_22263E694((uint64_t)v71, (uint64_t)&v58);
            sub_22263E6C8(&v58);
            int v34 = (int *)v63;
            goto LABEL_74;
          }
          sub_22263EC10(a1 + 8, (uint64_t)v74, (uint64_t)&v58);
          goto LABEL_84;
        case 32:
          if (sub_22263E794(a1))
          {
            sub_22263ECCC(a1 + 8, (uint64_t)v74, (uint64_t)&v58);
            goto LABEL_84;
          }
          sub_2225C9B04((unsigned int *)(a1 + 8), v74, (BOOL *)&v67, v60);
          sub_22263E85C(&v58, v60, 0);
          sub_22263E694((uint64_t)v71, (uint64_t)&v58);
          sub_22263E6C8(&v58);
          int v34 = v60;
          goto LABEL_74;
        case 35:
          if (sub_22263E794(a1))
          {
            sub_22263ED18(a1 + 8, (uint64_t)v74, (uint64_t)&v58);
            goto LABEL_84;
          }
          sub_2225C9BA0((unsigned int *)(a1 + 8), v74, (BOOL *)&v67, v59);
          sub_22263E85C(&v58, v59, 0);
          sub_22263E694((uint64_t)v71, (uint64_t)&v58);
          sub_22263E6C8(&v58);
          int v34 = v59;
          goto LABEL_74;
        case 41:
          unsigned int v32 = sub_22263EDA4();
          goto LABEL_68;
        case 42:
          if (!sub_22263D4FC((unsigned int *)v74, 0))
          {
            if (!a4) {
              goto LABEL_88;
            }
            unsigned int v38 = v15;
            uint64_t v39 = a5;
            int v40 = 703;
            goto LABEL_77;
          }
          if (!sub_2225C3B48(a1 + 8))
          {
            sub_22263EBA0(a1 + 8, (unsigned int *)v74, (uint64_t)&v58);
            goto LABEL_84;
          }
          sub_2225C9C20((unsigned int *)(a1 + 8), (unsigned int *)v74, &v67, (uint64_t)v64);
          sub_22263E85C(&v58, v64, 0);
          sub_22263E694((uint64_t)v71, (uint64_t)&v58);
          sub_22263E6C8(&v58);
          int v34 = (int *)v64;
LABEL_74:
          sub_2225C2F10(v34);
          goto LABEL_85;
        case 44:
          if (sub_22263D4FC((unsigned int *)v74, 0))
          {
            sub_22263EB30(a1 + 8, (unsigned int *)v74, (uint64_t)&v58);
LABEL_84:
            sub_22263E694((uint64_t)v71, (uint64_t)&v58);
            sub_22263E6C8(&v58);
            goto LABEL_85;
          }
          if (!a4) {
            goto LABEL_88;
          }
          unsigned int v38 = v15;
          uint64_t v39 = a5;
          int v40 = 747;
LABEL_77:
          sub_22261CABC(v39, v38, v40, (uint64_t)&v58);
          uint64_t v42 = sub_222625214(&v58, (uint64_t *)a1);
          sub_222625214(v42, &v73);
          goto LABEL_78;
        case 46:
          unsigned int v32 = sub_22263ED74(a1 + 8, (uint64_t)v74);
          goto LABEL_68;
        case 47:
          if (sub_22263E794(a1))
          {
            sub_2225C9F50((unsigned int *)(a1 + 8), (unsigned int *)v74, &v67, (uint64_t)v62);
            sub_2225C3B58((uint64_t)v71, v62);
            int v34 = v62;
          }
          else
          {
            sub_2225C9E24((unsigned int *)(a1 + 8), (unsigned int *)v74, &v67, (uint64_t)v61);
            sub_22263E85C(&v58, v61, 0);
            sub_22263E694((uint64_t)v71, (uint64_t)&v58);
            sub_22263E6C8(&v58);
            int v34 = (int *)v61;
          }
          goto LABEL_74;
        case 48:
          unsigned int v32 = sub_22263ED64(a1 + 8, (uint64_t)v74);
          goto LABEL_68;
        case 50:
          unsigned int v32 = sub_22263ED94(a1 + 8, (uint64_t)v74);
          goto LABEL_68;
        case 51:
          uint64_t v33 = sub_2225C8484(v74, 0xFFFFFFFFFFFFFFFFLL);
          if (sub_22263EB28(a1) <= v33)
          {
            v67.__r_.__value_.__s.__data_[0] = 1;
            uint64_t v33 = sub_22263EB28(a1) - 1;
          }
          sub_22263EC5C(a1 + 8, v33, (uint64_t)&v58);
          goto LABEL_84;
        case 52:
          unsigned int v32 = sub_22263ED84(a1 + 8, (uint64_t)v74);
          goto LABEL_68;
        case 54:
          sub_22263EE0C(a1 + 8, (uint64_t)v74, (uint64_t)&v58);
          goto LABEL_84;
        case 56:
          sub_22263EE58(a1 + 8, (uint64_t)v74, (uint64_t)&v58);
          goto LABEL_84;
        case 57:
          if (sub_22263D4FC((unsigned int *)(a1 + 8), 0)) {
            unsigned int v32 = 1;
          }
          else {
LABEL_66:
          }
            unsigned int v32 = sub_22263D4FC((unsigned int *)v74, 0);
          goto LABEL_68;
        case 59:
          if (sub_22261CB34((uint64_t)a3, 60))
          {
            unsigned int v35 = sub_2225C3B40(a3);
            sub_22261CABC(a5, v35, 8, (uint64_t)&v58);
            uint64_t v36 = sub_222635F18((uint64_t *)&v58, 0x3Cu);
            uint64_t v37 = sub_222625214(v36, (uint64_t *)a1);
            sub_222625214(v37, &v73);
            sub_2225F37F0(&v58);
            sub_22261CABC(a5, v15, 50, (uint64_t)&v58);
            sub_222635F18((uint64_t *)&v58, 0x3Bu);
LABEL_78:
            sub_2225F37F0(&v58);
            goto LABEL_79;
          }
          sub_22263CACC(a5, (uint64_t)a3);
          if (a4) {
            uint64_t v44 = sub_22263E8E8((unsigned int *)(a1 + 8), 0);
          }
          else {
            uint64_t v44 = 0;
          }
          uint64_t v47 = sub_22263EB28(a1);
          sub_22263CB14((uint64_t)&v58, v47);
          if ((sub_22263CB18(&v58, a3, &v68, v44, a5) & 1) != 0 || sub_22263D518(&v58))
          {
            sub_22263E198((uint64_t)&v58);
LABEL_79:
            char v43 = 0;
            goto LABEL_89;
          }
          if (sub_22263D4FC((unsigned int *)(a1 + 8), 0)) {
            p_size = (std::string::size_type *)v74;
          }
          else {
            p_size = &v58.__r_.__value_.__l.__size_;
          }
          sub_22263E6CC((uint64_t)v71, (uint64_t)p_size);
          int v49 = sub_222613380((uint64_t)&v58);
          sub_22261C7EC((uint64_t)&v73, v49);
          char v50 = sub_22263E794((uint64_t)&v73);
          char v51 = sub_22263E794((uint64_t)&v58);
          sub_22263E594((uint64_t)v71, v50 | v51);
          int v52 = sub_22261BFB4((uint64_t)a3);
          unsigned int v20 = sub_22263E03C(v52);
          sub_22263E198((uint64_t)&v58);
LABEL_85:
          if (v67.__r_.__value_.__s.__data_[0] && a4)
          {
            sub_22261CABC(a5, v15, 888, (uint64_t)&v58);
            uint64_t v45 = sub_222625214(&v58, (uint64_t *)a1);
            sub_222625214(v45, &v73);
            sub_2225F37F0(&v58);
          }
LABEL_88:
          sub_22263E6CC(a1 + 8, (uint64_t)v71);
          int v46 = sub_222613380((uint64_t)&v73);
          sub_22261C7EC(a1, v46);
          char v43 = 1;
LABEL_89:
          sub_22263E6C8(v71);
          sub_22263E198((uint64_t)&v73);
          unsigned int v10 = v20;
          if ((v43 & 1) == 0) {
            return v11;
          }
          break;
        case 60:
          unsigned int v38 = v15;
          uint64_t v39 = a5;
          int v40 = 701;
          goto LABEL_77;
        case 63:
          unsigned int v32 = sub_22263EB24(a1 + 8, v74);
LABEL_68:
          sub_22263E56C((uint64_t)v71, v32);
          sub_22263E594((uint64_t)v71, 0);
          goto LABEL_85;
        case 64:
          if ((*(unsigned char *)sub_222608330(a5) & 1) == 0 || a4)
          {
            sub_22261CABC(a5, v15, 798, (uint64_t)&v58);
            uint64_t v41 = sub_222625214(&v58, (uint64_t *)a1);
            sub_222625214(v41, &v73);
            sub_2225F37F0(&v58);
          }
          sub_22263E6CC((uint64_t)v71, (uint64_t)v74);
          goto LABEL_85;
        default:
          sub_22263EDC0(a1 + 8, (uint64_t)v74, (uint64_t)&v58);
          goto LABEL_84;
      }
    }
    if (v12 != 28) {
      goto LABEL_10;
    }
LABEL_7:
    if ((sub_22263E8E8((unsigned int *)(a1 + 8), 0) & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  unsigned int v53 = sub_2225C3B40(a3);
  sub_22261CABC(a5, v53, 719, (uint64_t)&v73);
  sub_222625214(&v73, (uint64_t *)a1);
  sub_2225F37F0(&v73);
  return 1;
}

uint64_t sub_22263E03C(int a1)
{
  uint64_t result = 0xFFFFFFFFLL;
  switch(a1)
  {
    case 22:
      uint64_t result = 0;
      break;
    case 23:
    case 24:
    case 25:
    case 26:
    case 29:
    case 31:
    case 33:
    case 34:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 43:
    case 45:
    case 49:
    case 53:
    case 55:
    case 58:
    case 61:
    case 62:
      return result;
    case 27:
      uint64_t result = 9;
      break;
    case 28:
      uint64_t result = 6;
      break;
    case 30:
    case 42:
    case 44:
      uint64_t result = 14;
      break;
    case 32:
    case 35:
      uint64_t result = 13;
      break;
    case 41:
    case 63:
      uint64_t result = 10;
      break;
    case 46:
    case 48:
    case 50:
    case 52:
      uint64_t result = 11;
      break;
    case 47:
    case 51:
      uint64_t result = 12;
      break;
    case 54:
      uint64_t result = 8;
      break;
    case 56:
      uint64_t result = 7;
      break;
    case 57:
      uint64_t result = 5;
      break;
    case 59:
      uint64_t result = 4;
      break;
    case 60:
      uint64_t result = 2;
      break;
    case 64:
      uint64_t result = 3;
      break;
    default:
      if (a1 == 2) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = 0xFFFFFFFFLL;
      }
      break;
  }
  return result;
}

uint64_t sub_22263E19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226221E0();
  sub_22263E1D8(v4 + 8, a2, 1);
  return a1;
}

uint64_t sub_22263E1DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = sub_2225C57C8(a1, a2, 0, 0);
  *(unsigned char *)(result + 16) = a3;
  return result;
}

uint64_t sub_22263E20C(uint64_t a1)
{
  return *(void *)(a1 + 680);
}

BOOL sub_22263E214(uint64_t a1, _DWORD *a2)
{
  if (sub_2225F2DD0(a1) != 7) {
    return 0;
  }
  uint64_t v4 = (_DWORD *)sub_2225F2DB8(a1);
  return *v4 == *a2 && *(_DWORD *)((char *)v4 + 3) == *(_DWORD *)((char *)a2 + 3);
}

uint64_t sub_22263E270(_DWORD *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v10 = sub_2225C3B40((unsigned int *)a2);
  sub_22261C7CC(a1, v10);
  sub_22263E7E8(a5, a2);
  sub_2225F3278(&v30);
  if (sub_22261BABC(a2, 21))
  {
    unsigned int v30 = sub_2225C3B40((unsigned int *)a2);
    sub_22263E7E8(a5, a2);
  }
  if (sub_22261BABC(a2, 3))
  {
    if (sub_22263E20C(a5))
    {
      uint64_t v11 = sub_22263E20C(a5);
      (*(void (**)(uint64_t, void))(*(void *)v11 + 32))(v11, 0);
    }
    sub_222636060(a5);
    sub_22263E7E8(a5, a2);
  }
  if (sub_222635CE8(a5, (unsigned int *)a2, 0)) {
    return 1;
  }
  uint64_t v13 = sub_22261AF2C(a2);
  unsigned int v14 = sub_2226074C0(v13);
  unsigned int v15 = a1 + 2;
  sub_22263E56C((uint64_t)(a1 + 2), v14);
  sub_22263E594((uint64_t)(a1 + 2), 0);
  uint64_t v16 = 0;
  if (sub_22263D4FC(a1 + 2, 0) && a4)
  {
    uint64_t v16 = sub_222626928(a5, v13);
    uint64_t v17 = (unsigned int *)sub_222626980(v16);
    sub_222642E08(a5, v17);
  }
  long long v28 = *(_OWORD *)a2;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v18 = sub_2225CDBBC(&v30);
  int v19 = sub_2225C3B40((unsigned int *)a2);
  sub_22261C7EC((uint64_t)a1, v19);
  if (v18)
  {
    sub_22263E7E8(a5, a2);
    if (sub_22261CB34(a2, 22))
    {
      unsigned int v20 = sub_2225C3B40((unsigned int *)a2);
      sub_22261CABC(a5, v20, 712, (uint64_t)v27);
      unsigned int v21 = sub_22260A5E8(v27, (uint64_t)"'defined'");
      sub_222635F18(v21, 0x16u);
      sub_2225F37F0(v27);
      sub_22261CABC(a5, v30, 50, (uint64_t)v27);
      sub_222635F18(v27, 0x15u);
      sub_2225F37F0(v27);
      return 1;
    }
    int v22 = sub_2225C3B40((unsigned int *)a2);
    sub_22261C7EC((uint64_t)a1, v22);
  }
  sub_22263CACC(a5, a2);
  uint64_t v23 = sub_22263E828(a5);
  if (v23)
  {
    uint64_t v24 = v23;
    if (!v16)
    {
      if (sub_22263D4FC(v15, 0)) {
        uint64_t v16 = sub_222626928(a5, v13);
      }
    }
    int v25 = sub_2225C3B40((unsigned int *)a2);
    sub_22261F184(&v26, v10, v25);
    (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(*(void *)v24 + 192))(v24, &v28, v16, v26);
  }
  uint64_t result = 0;
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 8) = v13;
  return result;
}

uint64_t sub_22263E560(_DWORD *a1)
{
  return *a1 & 0x1FF;
}

uint64_t sub_22263E56C(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_22263E594(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_22263E59C(_DWORD *a1, int a2)
{
  sub_2225D0A60(a1, a2);

  return sub_222612BA8((uint64_t)a1, a2);
}

uint64_t sub_22263E5E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 54);
}

uint64_t sub_22263E5E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_22263E5F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 11);
}

BOOL sub_22263E5FC(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 8) == 11;
}

BOOL sub_22263E60C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 8) == 12;
}

uint64_t sub_22263E61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v5 = v8;
    sub_2225C80D0(a1, a2, (uint64_t)v8);
  }
  else
  {
    uint64_t v5 = v7;
    sub_2225C7F78((unsigned int *)a1, a2, (uint64_t)v7);
  }
  sub_22263E85C(a3, v5, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v5);
}

uint64_t sub_22263E694(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_22263E6CC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_22263E704(_DWORD *a1, int a2, int a3)
{
  sub_2225D0A60(a1, a2);

  return sub_222612BA8((uint64_t)a1, a3);
}

uint64_t sub_22263E748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2225C3B90((unsigned int *)a1, (uint64_t)v5);
  sub_22263E85C(a2, v5, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v5);
}

uint64_t sub_22263E794(uint64_t a1)
{
  return sub_2225D05E4(a1 + 8);
}

uint64_t sub_22263E79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22263E8B8(a1, (uint64_t)v5);
  sub_22263E85C(a2, v5, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v5);
}

uint64_t sub_22263E7E8(uint64_t a1, uint64_t a2)
{
  do
  {
    sub_222635CA4(a1, a2);
    uint64_t result = sub_22261BFB4(a2);
  }
  while (result == 5);
  return result;
}

uint64_t sub_22263E828(uint64_t a1)
{
  return *(void *)(a1 + 872);
}

uint64_t sub_22263E830(uint64_t a1)
{
  return a1;
}

uint64_t sub_22263E860(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = sub_2225CAC3C(a1, a2);
  *(unsigned char *)(result + 16) = a3;
  return result;
}

uint64_t sub_22263E88C(uint64_t a1)
{
  return a1;
}

uint64_t sub_22263E8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = sub_2225C3B80(a2, a1);

  return sub_2225C7958(v2);
}

uint64_t sub_22263E8E8(unsigned int *a1, uint64_t a2)
{
  sub_2225C3A6C(v5, 64, a2, 0);
  sub_22263E85C(v6, v5, 1);
  uint64_t v3 = sub_22263E958(a1, v6);
  sub_22263E6C8(v6);
  sub_2225C2F10(v5);
  return v3;
}

uint64_t sub_22263E958(unsigned int *a1, unsigned int *a2)
{
  int v4 = sub_2225C3B40(a1);
  if (v4 != sub_2225C3B40(a2) || (BOOL v5 = sub_2225C3B48((uint64_t)a1), v5 != sub_2225C3B48((uint64_t)a2)))
  {
    unsigned int v6 = sub_2225C3B40(a1);
    if (v6 > sub_2225C3B40(a2))
    {
      uint64_t v7 = sub_2225C3B40(a1);
      sub_22263E61C((uint64_t)a2, v7, (uint64_t)v17);
      int v8 = (unsigned int *)v17;
      unsigned int v9 = a1;
LABEL_7:
      uint64_t v12 = sub_22263E958(v9, v8);
      sub_22263E6C8(v17);
      return v12;
    }
    unsigned int v10 = sub_2225C3B40(a2);
    if (v10 > sub_2225C3B40(a1))
    {
      uint64_t v11 = sub_2225C3B40(a2);
      sub_22263E61C((uint64_t)a1, v11, (uint64_t)v17);
      unsigned int v9 = (unsigned int *)v17;
      int v8 = a2;
      goto LABEL_7;
    }
    if (sub_2225C3B48((uint64_t)a1))
    {
      if (!sub_2225C3B84(a1))
      {
        sub_2225C3B80(v16, a1);
        sub_22263E85C(v17, v16, 1);
        uint64_t v12 = sub_22263EB24(v17, a2);
        sub_22263E6C8(v17);
        unsigned int v14 = v16;
LABEL_18:
        sub_2225C2F10(v14);
        return v12;
      }
    }
    else if (!sub_2225C3B84(a2))
    {
      sub_2225C3B80(v15, a2);
      sub_22263E85C(v17, v15, 1);
      uint64_t v12 = sub_22263EB24(a1, v17);
      sub_22263E6C8(v17);
      unsigned int v14 = v15;
      goto LABEL_18;
    }
    return 0;
  }

  return sub_22263EB24(a1, a2);
}

uint64_t sub_22263EB28(uint64_t a1)
{
  return sub_2225C3B40((unsigned int *)(a1 + 8));
}

uint64_t sub_22263EB30@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v4 = v10;
    sub_2225C8E50((unsigned int *)a1, (uint64_t)a2, (uint64_t)v10);
    BOOL v5 = v10;
    uint64_t v6 = a3;
    uint64_t v7 = 1;
  }
  else
  {
    int v4 = v9;
    sub_2225C99E4((unsigned int *)a1, a2, (uint64_t)v9);
    BOOL v5 = v9;
    uint64_t v6 = a3;
    uint64_t v7 = 0;
  }
  sub_22263E85C(v6, v5, v7);
  return sub_2225C2F10(v4);
}

uint64_t sub_22263EBA0@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v4 = v10;
    sub_2225C8AA0((unsigned int *)a1, (uint64_t)a2, (uint64_t)v10);
    BOOL v5 = v10;
    uint64_t v6 = a3;
    uint64_t v7 = 1;
  }
  else
  {
    int v4 = v9;
    sub_2225C98D4((unsigned int *)a1, a2, (uint64_t)v9);
    BOOL v5 = v9;
    uint64_t v6 = a3;
    uint64_t v7 = 0;
  }
  sub_22263E85C(v6, v5, v7);
  return sub_2225C2F10(v4);
}

uint64_t sub_22263EC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225C7408((unsigned int *)a1, a2, (uint64_t)v6);
  sub_22263E85C(a3, v6, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v6);
}

uint64_t sub_22263EC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v4 = v10;
    sub_2225C84E8((unsigned int *)a1, a2, (uint64_t)v10);
    BOOL v5 = v10;
    uint64_t v6 = a3;
    uint64_t v7 = 1;
  }
  else
  {
    int v4 = v9;
    sub_2225C81B8((unsigned int *)a1, a2, (uint64_t)v9);
    BOOL v5 = v9;
    uint64_t v6 = a3;
    uint64_t v7 = 0;
  }
  sub_22263E85C(v6, v5, v7);
  return sub_2225C2F10(v4);
}

uint64_t sub_22263ECCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225C7498((unsigned int *)a1, a2, (uint64_t)v6);
  sub_22263E85C(a3, v6, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v6);
}

uint64_t sub_22263ED18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225C7578((unsigned int *)a1, a2, (uint64_t)v6);
  sub_22263E85C(a3, v6, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v6);
}

uint64_t sub_22263ED64(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16)) {
    return sub_2225C8A4C(a1, a2);
  }
  else {
    return sub_22263EEA4(a1, a2);
  }
}

uint64_t sub_22263ED74(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16)) {
    return sub_2225C7750(a1, a2);
  }
  else {
    return sub_2225C785C(a1, a2);
  }
}

uint64_t sub_22263ED84(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16)) {
    return sub_2225C8FF0(a1, a2);
  }
  else {
    return sub_22263EEF8(a1, a2);
  }
}

uint64_t sub_22263ED94(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16)) {
    return sub_2225C79D8(a1, a2);
  }
  else {
    return sub_22263EF14(a1, a2);
  }
}

uint64_t sub_22263EDA4()
{
  return sub_22263EB24() ^ 1;
}

uint64_t sub_22263EDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22263EF58(a1, a2, (uint64_t)v6);
  sub_22263E85C(a3, v6, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v6);
}

uint64_t sub_22263EE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22263EFEC((unsigned int *)a1, a2, (uint64_t)v6);
  sub_22263E85C(a3, v6, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v6);
}

uint64_t sub_22263EE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2225C89B8(a1, a2, (uint64_t)v6);
  sub_22263E85C(a3, v6, *(unsigned __int8 *)(a1 + 16));
  return sub_2225C2F10(v6);
}

uint64_t sub_22263EEA4(uint64_t a1, uint64_t a2)
{
  if (sub_2225C785C(a1, a2)) {
    return 1;
  }

  return sub_2225CAC30(a1, a2);
}

BOOL sub_22263EEF8(uint64_t a1, uint64_t a2)
{
  return !sub_2225C785C(a1, a2);
}

uint64_t sub_22263EF14(uint64_t a1, uint64_t a2)
{
  if (sub_2225C785C(a1, a2)) {
    return 0;
  }
  else {
    return sub_2225CAC30(a1, a2) ^ 1;
  }
}

uint64_t sub_22263EF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754((_DWORD *)a1))
  {
    uint64_t v6 = sub_2225C3B40((unsigned int *)a1);
    uint64_t v7 = *(void *)(a2 + 8) & *(void *)(a1 + 8);
    return sub_2225C3A6C(a3, v6, v7, 0);
  }
  else
  {
    return sub_2225C7224(a1, a2, a3);
  }
}

uint64_t sub_22263EFEC@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_2225C5754(a1))
  {
    uint64_t v6 = *a1;
    uint64_t v7 = *(void *)(a2 + 8) ^ *((void *)a1 + 1);
    return sub_2225C3A6C(a3, v6, v7, 0);
  }
  else
  {
    return sub_2225C7358((uint64_t)a1, a2, a3);
  }
}

uint64_t sub_22263F078(uint64_t a1)
{
  return a1;
}

uint64_t sub_22263F0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 848);
  if (sub_222637130(a1, a2))
  {
    return sub_2225CF1D0(v2);
  }
  else
  {
    int v4 = sub_2226339BC(v2);
    if (v4 == 1)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = 1;
      do
      {
        uint64_t v6 = sub_2226370E4(v2, v5);
        int v8 = sub_2226370F4(v6, v7);
        if (v8) {
          break;
        }
        ++v5;
      }
      while (v4 != v5);
      return v8 ^ 1u;
    }
  }
}

uint64_t sub_22263F148(uint64_t a1, uint64_t a2)
{
  if (sub_222637130(a1, a2))
  {
    uint64_t v3 = a1 + 808;
    return *(void *)v3;
  }
  else
  {
    int v4 = (void *)(a1 + 848);
    for (uint64_t i = sub_2226339BC(v4) - 1; i != -1; --i)
    {
      uint64_t v6 = sub_2226370E4(v4, i);
      if (sub_2226370F4(v6, v7))
      {
        uint64_t v3 = v6 + 32;
        return *(void *)v3;
      }
    }
    return 0;
  }
}

BOOL sub_22263F1C8(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  ++*(_DWORD *)(a1 + 1356);
  unint64_t v8 = *(unsigned int *)(a1 + 1360);
  unsigned int v9 = (void *)(a1 + 848);
  if (sub_2226339BC((void *)(a1 + 848)) > v8) {
    *(_DWORD *)(a1 + 1360) = sub_2226339BC(v9);
  }
  if (sub_2225DF1DC(a1 + 96, v10)
    && (uint64_t v12 = (uint64_t *)sub_2225CBA80(a1 + 96, v11), (v13 = sub_222646D50(v12, a2)) != 0))
  {
    sub_22263F3A4(a1, v13, a3);
    return 0;
  }
  else
  {
    char v27 = 0;
    uint64_t v15 = sub_2225E8DD0(a1);
    unsigned int v16 = a4;
    uint64_t v17 = sub_22263F4A8(v15, a2, a4, &v27);
    BOOL v14 = v27 != 0;
    if (v27)
    {
      int v18 = sub_22260DA24(*(void *)(a1 + 48), a2);
      sub_22261CABC(a1, v16, 711, (uint64_t)v26);
      int v19 = sub_22260D948(*(_DWORD **)(a1 + 48), v18, 0);
      sub_2225CCD48(&v24, v19);
      sub_2225CCBF8(v25, &v24);
      unsigned int v20 = sub_2225F3774(v26, v25[0], v25[1]);
      sub_22260A5E8(v20, (uint64_t)&byte_2226D1615);
      std::string::~string(&v24);
      sub_2225F37F0(v26);
    }
    else
    {
      uint64_t v21 = v17;
      if (sub_22261FF74(a1) && sub_22262CE08(*(void *)(a1 + 48), a2) == *(void *)(a1 + 688))
      {
        *(_DWORD *)(a1 + 704) = sub_22260DA24(*(void *)(a1 + 48), a2);
        *(_DWORD *)(a1 + 700) = sub_22260C644((_DWORD *)(a1 + 704), *(_DWORD *)(a1 + 696));
      }
      uint64_t v22 = sub_2225C26A4(408);
      sub_22261B13C(v22, a2, v21, a1);
      sub_22263F53C(a1, v22, a3);
    }
  }
  return v14;
}

uint64_t sub_22263F3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 808) || sub_2225DF1DC(a1 + 824, a2)) {
    sub_2226336AC(a1);
  }
  *(void *)(a1 + 816) = a3;
  sub_222634040(a1 + 800, a2);
  uint64_t result = sub_2225CBA80(a1 + 800, v6);
  *(void *)(a1 + 808) = result;
  *(void *)(a1 + 840) = 0;
  if (*(_DWORD *)(a1 + 832) != 4) {
    *(_DWORD *)(a1 + 832) = 1;
  }
  if (*(void *)(a1 + 872))
  {
    unsigned int v8 = sub_2225F514C(result);
    unsigned int v9 = sub_22260DA24(*(void *)(a1 + 48), v8);
    uint64_t v10 = v9;
    uint64_t v11 = sub_22260D888(*(void *)(a1 + 48), v9);
    uint64_t v12 = *(void *)(a1 + 872);
    sub_2225F3278(&v13);
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)v12 + 16))(v12, v10, 0, v11, v13);
  }
  return result;
}

uint64_t sub_22263F4A8(uint64_t a1, unsigned int a2, unsigned int a3, unsigned char *a4)
{
  char v13 = 0;
  uint64_t v7 = (_DWORD *)sub_222609DB4(a1, a2, &v13);
  if (v13 || (uint64_t v9 = (uint64_t)v7, (sub_222609EEC(v7) & 1) == 0))
  {
    if (a4) {
      *a4 = 1;
    }
    return sub_22260B8DC(a1, v8);
  }
  else
  {
    uint64_t v10 = sub_2225E563C(v9);
    unint64_t v11 = sub_222609F08(v10);
    return sub_22260A0F0(v11, *(void *)(a1 + 8), a1, a3, a4);
  }
}

uint64_t sub_22263F53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 808) || sub_2225DF1DC(a1 + 824, a2)) {
    sub_2226336AC(a1);
  }
  uint64_t v6 = a1 + 792;
  uint64_t result = (uint64_t)sub_222634040(a1 + 792, a2);
  *(void *)(a1 + 808) = a2;
  *(void *)(a1 + 816) = a3;
  *(void *)(a1 + 840) = 0;
  if (*(_DWORD *)(a1 + 832) != 4) {
    *(_DWORD *)(a1 + 832) = 0;
  }
  if (*(void *)(a1 + 872))
  {
    uint64_t result = sub_2225CBA80(a1 + 792, v8);
    if (!*(unsigned char *)(result + 384))
    {
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v11 = sub_2225CBA80(a1 + 792, v9);
      int v12 = sub_222636BD0(v11);
      uint64_t v13 = sub_22260D888(v10, v12);
      uint64_t v14 = *(void *)(a1 + 872);
      uint64_t v16 = sub_2225CBA80(v6, v15);
      unsigned int v17 = sub_222636BD0(v16);
      sub_2225F3278(&v18);
      return (*(uint64_t (**)(uint64_t, void, void, uint64_t, void))(*(void *)v14 + 16))(v14, v17, 0, v13, v18);
    }
  }
  return result;
}

void sub_22263F648(uint64_t a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5)
{
  int v10 = *(_DWORD *)(a1 + 1420);
  if (v10)
  {
    unsigned int v11 = v10 - 1;
    *(_DWORD *)(a1 + 1420) = v11;
    uint64_t v12 = *(void *)(a1 + 8 * v11 + 1424);
    sub_22264AC94(v12, a2, a3, a4, a5);
  }
  else
  {
    uint64_t v12 = sub_2225C26A4(72);
    sub_22263F70C(v12, a2, a3, a4, a5, a1);
  }
  sub_2226336AC(a1);
  *(void *)(a1 + 816) = 0;
  sub_222633F44(a1 + 824, v12);
  if (*(_DWORD *)(a1 + 832) != 4) {
    *(_DWORD *)(a1 + 832) = 2;
  }
}

uint64_t sub_22263F70C(uint64_t a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2226409B4(a1, a2, a3, a4, a5, a6);
}

void sub_22263F714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = *(_DWORD *)(a1 + 1420);
  if (v10)
  {
    unsigned int v11 = v10 - 1;
    *(_DWORD *)(a1 + 1420) = v11;
    uint64_t v12 = *(void *)(a1 + 8 * v11 + 1424);
    sub_22264B550(v12, a2, a3, a4, a5);
  }
  else
  {
    uint64_t v12 = sub_2225C26A4(72);
    sub_22263F7D8(v12, a2, a3, a4, a5, a1);
  }
  sub_2226336AC(a1);
  *(void *)(a1 + 816) = 0;
  sub_222633F44(a1 + 824, v12);
  if (*(_DWORD *)(a1 + 832) != 4) {
    *(_DWORD *)(a1 + 832) = 2;
  }
}

uint64_t sub_22263F7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 824;
  if (sub_2225DF1DC(a1 + 824, a2))
  {
    uint64_t v6 = sub_2225CBA80(v4, v5);
    return sub_22264C568(v6, a2);
  }
  else
  {
    uint64_t result = sub_2225DF1DC(a1 + 792, v5);
    if (result)
    {
      uint64_t v9 = (unsigned char *)sub_2225CBA80(a1 + 792, v8);
      return sub_222620440(v9, a2);
    }
  }
  return result;
}

unsigned __int8 *sub_22263F880(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 792;
  uint64_t v3 = *(void *)(sub_2225CBA80(a1 + 792, a2) + 128);
  if (v3 != *(void *)(sub_2225CBA80(v2, v4) + 120))
  {
    uint64_t v7 = (unsigned __int8 *)(v3 - 1);
    int v6 = *(unsigned __int8 *)(v3 - 1);
    if (v6 == 13 || v6 == 10)
    {
      if (v7 != *(unsigned __int8 **)(sub_2225CBA80(v2, v5) + 120)
        && ((v10 = *(unsigned __int8 *)(v3 - 2), v3 -= 2, int v9 = v10, v10 != 13) ? (v11 = v9 == 10) : (v11 = 1), v11))
      {
        if (v9 == *v7) {
          return v7;
        }
      }
      else
      {
        return v7;
      }
    }
  }
  return (unsigned __int8 *)v3;
}

uint64_t sub_22263F918(uint64_t a1, unsigned int *a2, char a3)
{
  uint64_t v6 = *(void *)(a1 + 808);
  if (v6)
  {
    uint64_t v7 = sub_222640288(v6 + 32);
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)(a1 + 48);
      unsigned int v10 = sub_2225F514C(*(void *)(a1 + 808));
      unint64_t v11 = sub_22262CE08(v9, v10);
      if (v11)
      {
        uint64_t v12 = v11;
        sub_2226402A0(*(void *)(a1 + 64), v11, v8);
        uint64_t v13 = sub_222625E60(a1, v8);
        if (v13) {
          *(_WORD *)(v13 + 244) |= 0x800u;
        }
        uint64_t v14 = sub_2225C5B40(*(void *)(a1 + 808) + 32);
        if (v14)
        {
          uint64_t v15 = v14;
          char v16 = sub_2226074C0(v8);
          if (v15 != v8 && (v16 & 1) == 0 && sub_2226402C8(*(void *)(a1 + 64), v12))
          {
            uint64_t v113 = sub_2225F2418(v8);
            uint64_t v114 = v17;
            uint64_t v111 = sub_2225F2418(v15);
            uint64_t v112 = v18;
            v110[0] = (uint64_t *)sub_2225C3D04((uint64_t)&v113);
            v107.__r_.__value_.__r.__words[0] = sub_2225C3D04((uint64_t)&v111);
            unint64_t v19 = *(void *)sub_2225CBA14(v110, &v107) >> 1;
            if (v19 >= sub_2225D82D4((uint64_t)&v113, v111, v112, 1, v19))
            {
              unsigned int v20 = sub_2225DAD0C(*(void *)(a1 + 808) + 32);
              sub_22261CABC(a1, v20, 877, (uint64_t)v110);
              int v21 = sub_2225DAD0C(*(void *)(a1 + 808) + 32);
              sub_22262FD48(&v107, v21);
              uint64_t v22 = sub_222625214(v110, (uint64_t *)&v107);
              sub_222635F48(v22, v8);
              sub_2225F37F0(v110);
              unsigned int v23 = sub_222613B9C(*(void *)(a1 + 808) + 32);
              sub_22261CABC(a1, v23, 821, (uint64_t)&v107);
              int v24 = sub_222613B9C(*(void *)(a1 + 808) + 32);
              sub_22262FD48(v115, v24);
              int v25 = sub_222625214(&v107, v115);
              uint64_t v26 = sub_222635F48(v25, v15);
              char v27 = sub_222635F48(v26, v8);
              int v28 = sub_222613B9C(*(void *)(a1 + 808) + 32);
              sub_22262FD48(&v119, v28);
              uint64_t v29 = sub_2225F2418(v8);
              sub_22263B25C(v119, v29, v30, (uint64_t)v110);
              sub_22261E3BC((uint64_t)v27, (uint64_t)v110);
              sub_2225F4E0C(v110);
              sub_2225F37F0(&v107);
            }
          }
        }
      }
    }
  }
  if (sub_2225CDBBC((_DWORD *)(a1 + 772))
    && (a3 & 1) == 0
    && (!sub_2225DF1DC(a1 + 792, v31) || !*(unsigned char *)(sub_2225CBA80(a1 + 792, v32) + 384)))
  {
    sub_22261CABC(a1, *(_DWORD *)(a1 + 772), 709, (uint64_t)v118);
    sub_2225F37F0(v118);
    sub_2225F3278(v110);
    *(_DWORD *)(a1 + 772) = v110[0];
  }
  if (sub_2225CDBBC((_DWORD *)(a1 + 776))
    && (a3 & 1) == 0
    && (!sub_2225DF1DC(a1 + 792, v33) || !*(unsigned char *)(sub_2225CBA80(a1 + 792, v34) + 384)))
  {
    sub_22261CABC(a1, *(_DWORD *)(a1 + 776), 710, (uint64_t)v117);
    sub_2225F37F0(v117);
    sub_2225F3278(v110);
    *(_DWORD *)(a1 + 776) = v110[0];
  }
  if (sub_2225CF1D0((void *)(a1 + 848)))
  {
    if (sub_2225DF1DC(a1 + 792, v35))
    {
      uint64_t v37 = sub_22263F880(a1, v36);
      sub_22261FB44((uint64_t)a2);
      *(void *)(sub_2225CBA80(a1 + 792, v38) + 392) = v37;
      uint64_t v40 = sub_2225CBA80(a1 + 792, v39);
      sub_22261DBD8(v40, a2, (uint64_t)v37, 1);
      if (sub_22261FF74(a1))
      {
        uint64_t v42 = sub_2225CBA80(a1 + 792, v41);
        LODWORD(v110[0]) = sub_222636BD0(v42);
        if (sub_22260CBC4((unsigned int *)v110, (unsigned int *)(a1 + 704)))
        {
          LODWORD(v110[0]) = sub_2225C3B40(a2);
          int v43 = sub_22260C644(v110, -1);
          sub_2225D0A60(a2, v43);
        }
      }
      if ((sub_2226403C4(a1) & 1) == 0) {
        sub_222634040(a1 + 792, 0);
      }
    }
    else
    {
      uint64_t v74 = sub_2225CBA80(a1 + 800, v36);
      sub_222646AD4(v74, (uint64_t)a2);
      sub_222634040(a1 + 800, 0);
    }
    if ((sub_2226403C4(a1) & 1) == 0) {
      *(void *)(a1 + 808) = 0;
    }
    if (!*(_DWORD *)(a1 + 676))
    {
      v110[0] = (uint64_t *)sub_2226403CC(a1 + 1008);
      v110[1] = v75;
      uint64_t v113 = sub_222640400(a1 + 1008);
      uint64_t v114 = v76;
      while (sub_2225DE624(v110, &v113))
      {
        unsigned int v77 = sub_222640438(v110);
        sub_22261CABC(a1, v77, 844, (uint64_t)v116);
        sub_2225F37F0(v116);
        sub_222640444(v110);
      }
    }
    uint64_t v78 = sub_222648F30(a1);
    if (v78)
    {
      uint64_t v79 = v78;
      if (sub_222608328(v78))
      {
        uint64_t v80 = *(void *)(a1 + 48);
        unsigned int v81 = sub_2226370DC(v80);
        unsigned int v82 = sub_22260DA24(v80, v81);
        int v83 = (unsigned char *)sub_2225C5B40(a1);
        if (!sub_2226184E8(v83, 0x392u, v82))
        {
          uint64_t v84 = sub_2225FB75C(a1);
          uint64_t v106 = (uint64_t *)sub_222616724(v84);
          uint64_t v85 = (void *)sub_2226082D0(v79);
          sub_222640478(*(void *)(a1 + 40), v110);
          uint64_t v86 = sub_2225C3C70((uint64_t)v110);
          sub_2225F83E4(v110);
          sub_2225CDDC0(v115);
          uint64_t v87 = (unsigned char *)sub_2225C3C70((uint64_t)v85);
          sub_2225CBDE8((uint64_t)v110, v87);
          sub_22261401C(&v113, v86, v110, v115);
          sub_222640484((uint64_t)&v111);
          while (sub_222640488((uint64_t)&v113, (uint64_t)&v111))
          {
            if (sub_2225CDBBC(v115)) {
              break;
            }
            uint64_t v88 = sub_2226404A4((uint64_t)&v113);
            uint64_t v89 = sub_2225FB730(v88);
            uint64_t v91 = sub_2225CF58C(v89, v90);
            sub_2225D934C(v110, v91, v92);
            v107.__r_.__value_.__s.__data_[0] = 1;
            uint64_t v93 = sub_2226404D4((uint64_t)v110, (unsigned __int16 *)".h", (unsigned __int16 *)".H", (unsigned __int16 *)".hh", ".hpp", (uint64_t)&v107);
            LOBYTE(v109[0]) = 0;
            if (sub_2225F2DA4(v93, (unsigned __int8 *)v109))
            {
              v94 = (_DWORD *)sub_222640540(a1);
              uint64_t v95 = sub_2226404A4((uint64_t)&v113);
              uint64_t v96 = (const void *)sub_2225FB730(v95);
              uint64_t v98 = sub_2225F89F4(v94, v96, v97, 0, 1);
              if (v98)
              {
                uint64_t v99 = v98;
                uint64_t v100 = sub_2225E8DD0(a1);
                if (!sub_222640548(v100, v99) && (sub_22262B8A0(v106, v99) & 1) == 0)
                {
                  sub_2225CF794(v110);
                  sub_22264059C(*(void *)(a1 + 40), v85, v99, (const void **)v110);
                  sub_22261CABC(a1, v82, 914, (uint64_t)v109);
                  sub_22260816C(v79, &v107);
                  sub_2225CCBF8(v108, &v107);
                  char v101 = sub_2225F3774(v109, v108[0], v108[1]);
                  uint64_t v102 = sub_2225CE27C((uint64_t)v110);
                  sub_2225F3774(v101, v102, v103);
                  std::string::~string(&v107);
                  sub_2225F37F0(v109);
                  sub_2225CA520(v110);
                }
              }
            }
            sub_222614020(&v113, v115);
          }
          sub_222640704((uint64_t)&v111);
          sub_222640704((uint64_t)&v113);
        }
      }
    }
    return 1;
  }
  if (sub_22261FF74(a1))
  {
    uint64_t v44 = *(void *)(a1 + 808);
    if (v44)
    {
      uint64_t v45 = *(void *)(a1 + 48);
      unsigned int v46 = sub_2225F514C(v44);
      LODWORD(v110[0]) = sub_22260DA24(v45, v46);
      if (sub_22260CBC4((unsigned int *)v110, (unsigned int *)(a1 + 704)))
      {
        if (sub_2225DF1DC(a1 + 792, v47))
        {
          sub_22261FB44((uint64_t)a2);
          uint64_t v50 = sub_2225CBA80(a1 + 792, v49);
          uint64_t v52 = sub_2225CBA80(a1 + 792, v51);
          sub_22261DBD8(v50, a2, *(void *)(v52 + 128), 1);
          sub_222634040(a1 + 792, 0);
        }
        else
        {
          uint64_t v104 = sub_2225CBA80(a1 + 800, v48);
          sub_222646AD4(v104, (uint64_t)a2);
          sub_222634040(a1 + 800, 0);
        }
        *(void *)(a1 + 808) = 0;
        return 1;
      }
    }
  }
  if ((a3 & 1) == 0)
  {
    uint64_t v53 = *(void *)(a1 + 808);
    if (v53)
    {
      uint64_t v54 = *(void *)(a1 + 48);
      unsigned int v55 = sub_2225F514C(v53);
      LODWORD(v110[0]) = sub_22262CEDC(v54, v55);
      if (sub_2225CDBBC(v110))
      {
        int v56 = sub_22260BB2C(*(void *)(a1 + 48));
        int v57 = v56 - sub_2226402EC(*(void *)(a1 + 808)) + 1;
        uint64_t v58 = *(void *)(a1 + 48);
        unsigned int v59 = sub_2225F514C(*(void *)(a1 + 808));
        sub_2226402F4(v58, v59, v57);
      }
    }
  }
  sub_2225F3278(v110);
  if (*(void *)(a1 + 872))
  {
    if ((a3 & 1) == 0)
    {
      uint64_t v61 = *(void *)(a1 + 808);
      if (v61) {
        LODWORD(v110[0]) = sub_2225F514C(v61);
      }
    }
  }
  if (*(void *)(a1 + 840) && sub_2225DF1DC(a1 + 792, v60))
  {
    char v62 = sub_22263F880(a1, v60);
    sub_22261FB44((uint64_t)a2);
    *(void *)(sub_2225CBA80(a1 + 792, v63) + 392) = v62;
    uint64_t v65 = sub_2225CBA80(a1 + 792, v64);
    sub_22261DBD8(v65, a2, (uint64_t)v62, 520);
    unsigned int v66 = sub_2225C3B40(a2);
    sub_22263C774((uint64_t)a2, v66);
    sub_2225C5B6C((uint64_t)a2, *(void *)(a1 + 840));
    uint64_t v67 = 1;
  }
  else
  {
    uint64_t v67 = 0;
  }
  sub_22264034C(a1, v60);
  sub_22263F7DC(a1, (uint64_t)a2);
  if (*(void *)(a1 + 872))
  {
    if ((a3 & 1) == 0)
    {
      uint64_t v68 = *(void *)(a1 + 808);
      if (v68)
      {
        uint64_t v69 = *(void *)(a1 + 48);
        int v70 = (*(uint64_t (**)(uint64_t))(*(void *)v68 + 32))(v68);
        uint64_t v71 = sub_22260D888(v69, v70);
        uint64_t v72 = *(void *)(a1 + 872);
        unsigned int v73 = (*(uint64_t (**)(void))(**(void **)(a1 + 808) + 32))(*(void *)(a1 + 808));
        (*(void (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)v72 + 16))(v72, v73, 1, v71, LODWORD(v110[0]));
      }
    }
  }
  return v67;
}

uint64_t sub_222640288(uint64_t a1)
{
  if (*(unsigned char *)a1) {
    return 0;
  }
  else {
    return *(void *)(a1 + 8);
  }
}

__int16 *sub_2226402A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_222618410(a1, a2);
  *((void *)result + 1) = a3;
  return result;
}

BOOL sub_2226402C8(uint64_t a1, uint64_t a2)
{
  return sub_222618410(a1, a2)[1] == 1;
}

uint64_t sub_2226402EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

_DWORD *sub_2226402F4(uint64_t a1, unsigned int a2, int a3)
{
  char v6 = 0;
  uint64_t result = (_DWORD *)sub_222609DB4(a1, a2, &v6);
  if (!v6)
  {
    uint64_t v5 = (uint64_t)result;
    uint64_t result = (_DWORD *)sub_222609EEC(result);
    if (result)
    {
      uint64_t result = (_DWORD *)sub_2225E563C(v5);
      result[1] = a3;
    }
  }
  return result;
}

uint64_t sub_22264034C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 824;
  if (sub_2225DF1DC(a1 + 824, a2))
  {
    if (*(_DWORD *)(a1 + 1420) == 8)
    {
      sub_222633F44(v3, 0);
    }
    else
    {
      uint64_t v5 = sub_2225CE10C(v3, v4);
      uint64_t v6 = *(unsigned int *)(a1 + 1420);
      *(_DWORD *)(a1 + 1420) = v6 + 1;
      *(void *)(a1 + 8 * v6 + 1424) = v5;
    }
  }

  return sub_2226407B8(a1);
}

uint64_t sub_2226403C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 672);
}

uint64_t sub_2226403CC(uint64_t a1)
{
  sub_222640C9C(&v2, *(void *)(a1 + 8), *(void *)(a1 + 8) + 8 * *(unsigned int *)(a1 + 16));
  return v2;
}

uint64_t sub_222640400(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) + 8 * *(unsigned int *)(a1 + 16);
  sub_222640C9C(&v3, v1, v1);
  return v3;
}

uint64_t sub_222640438(uint64_t **a1)
{
  return sub_222640D34(**a1);
}

void *sub_222640444(void *a1)
{
  *a1 += 8;
  sub_222640CD0((uint64_t)a1);
  return a1;
}

void *sub_222640478@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2225F836C(a2, (void *)(a1 + 8));
}

BOOL sub_222640488(uint64_t a1, uint64_t a2)
{
  return !sub_222640B00(a1, a2);
}

uint64_t sub_2226404A4(uint64_t a1)
{
  uint64_t v1 = sub_2225C3C70(a1 + 8);
  uint64_t v2 = sub_222614184(v1);

  return sub_222614188(v2);
}

uint64_t sub_2226404D4(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3, unsigned __int16 *a4, _DWORD *a5, uint64_t a6)
{
  uint64_t v10 = sub_2225DB4FC(a1, a2, a6);
  uint64_t v11 = sub_2225DB4FC(v10, a3, a6);
  uint64_t v12 = sub_2225D94AC(v11, a4, a6);

  return sub_2225D9520(v12, a5, a6);
}

uint64_t sub_222640540(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

BOOL sub_222640548(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = a1 + 160;
  v7[0] = sub_22262BCC8(a1 + 160, &v8);
  v7[1] = v3;
  v6[0] = sub_22260F93C(v2);
  v6[1] = v4;
  return sub_2225F9558(v7, (uint64_t)v6);
}

const void **sub_22264059C(uint64_t a1, void *a2, uint64_t a3, const void **a4)
{
  sub_2225C5D90(a4);
  uint64_t v8 = sub_222608330(a3);
  uint64_t v9 = (char *)sub_2225C3C70(v8);
  sub_2225C3D00((int)&v28, v9);
  long long v27 = v28;
  if (sub_2225CF1E0((uint64_t)&v27))
  {
LABEL_7:
    uint64_t v13 = (char *)sub_2225C3C70(a3);
    sub_2225C3D00((int)v20, v13);
    return sub_222616CD8(a4, v20[0], v20[1]);
  }
  else
  {
    while (1)
    {
      uint64_t v10 = sub_2225F8658(a1, v27, *((uint64_t *)&v27 + 1), 1);
      if (v10 && v10 == a2) {
        break;
      }
      *(void *)&long long v27 = sub_2225CF24C(v27, *((uint64_t *)&v27 + 1));
      *((void *)&v27 + 1) = v12;
      if (sub_2225CF1E0((uint64_t)&v27)) {
        goto LABEL_7;
      }
    }
    unint64_t v15 = sub_2225C3D04((uint64_t)&v27);
    uint64_t v16 = sub_2225CE76C(&v28, v15, 0xFFFFFFFFFFFFFFFFLL);
    sub_222616CD8(a4, v16, v17);
    uint64_t v18 = (char *)sub_2225C3C70(a3);
    sub_2225C3D00((int)v24, v18);
    v25[0] = sub_2225CF480(v24[0], v24[1]);
    v25[1] = v19;
    sub_2225CBDF0((uint64_t)v26, (uint64_t)v25);
    sub_2225CBDE8((uint64_t)v23, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v22, &byte_2226D1615);
    sub_2225CBDE8((uint64_t)v21, &byte_2226D1615);
    return (const void **)sub_2225CEF30(a4, v26, v23, v22, v21);
  }
}

uint64_t sub_222640708(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = a1 + 1896;
  if (!sub_2225CF1D0((void *)(a1 + 1896)))
  {
    uint64_t v6 = *(void *)sub_2225D35A0(v4);
    if (v6 == sub_2225CBA80(a1 + 824, v7)) {
      sub_2226438FC(a1);
    }
  }
  uint64_t v8 = a1 + 824;
  if (*(_DWORD *)(a1 + 1420) == 8)
  {
    sub_222633F44(v8, 0);
  }
  else
  {
    uint64_t v9 = sub_2225CE10C(v8, v5);
    uint64_t v10 = *(unsigned int *)(a1 + 1420);
    *(_DWORD *)(a1 + 1420) = v10 + 1;
    *(void *)(a1 + 8 * v10 + 1424) = v9;
  }

  return sub_22263F918(a1, a2, 1);
}

uint64_t sub_2226407B8(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 848);
  uint64_t v3 = sub_222633CE8(a1 + 848);
  sub_222640B38(a1 + 792, v3 + 16);
  uint64_t v4 = sub_222633CE8((uint64_t)v2);
  sub_222640B38(a1 + 800, v4 + 24);
  *(void *)(a1 + 808) = *(void *)(sub_222633CE8((uint64_t)v2) + 32);
  uint64_t v5 = sub_222633CE8((uint64_t)v2);
  sub_222640B84(a1 + 824, v5 + 40);
  *(void *)(a1 + 816) = *(void *)(sub_222633CE8((uint64_t)v2) + 48);
  *(void *)(a1 + 840) = *(void *)(sub_222633CE8((uint64_t)v2) + 8);
  *(_DWORD *)(a1 + 832) = *(_DWORD *)sub_222633CE8((uint64_t)v2);

  return sub_222640BD0(v2);
}

uint64_t sub_22264086C(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = a1 + 848;
  uint64_t v5 = sub_2226339BC((void *)(a1 + 848));
  if (v5)
  {
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v10 = sub_2225D24C8(v4);
      uint64_t v11 = sub_2226409AC(&v10, v6);
      uint64_t v12 = sub_2226409AC(&v11, 1);
      uint64_t v7 = *(void *)(sub_2225C3C70((uint64_t)&v12) + 32);
      if (v7) {
        break;
      }
      if (v5 == ++v6) {
        goto LABEL_5;
      }
    }
    *(unsigned char *)(v7 + 26) = 1;
    BOOL v8 = *(unsigned char *)(v7 + 24) != 0;
    *(unsigned char *)(v7 + 24) = 1;
  }
  else
  {
LABEL_5:
    BOOL v8 = 0;
    uint64_t v7 = 0;
  }
  if ((sub_222640708(a1, a2) & 1) == 0) {
    sub_222649758(a1, a2);
  }
  while (sub_22261CB34((uint64_t)a2, 2))
  {
    if (!sub_22261CB34((uint64_t)a2, 1)) {
      break;
    }
    sub_222649758(a1, a2);
  }
  uint64_t result = sub_22261BABC((uint64_t)a2, 2);
  if (result)
  {
    *(unsigned char *)(v7 + 26) = 0;
    if (!v8)
    {
      *(unsigned char *)(v7 + 24) = 0;
      return sub_222649758(a1, a2);
    }
  }
  return result;
}

uint64_t sub_2226409AC(uint64_t *a1, uint64_t a2)
{
  return sub_222640D38(a1, -a2);
}

uint64_t sub_2226409B4(uint64_t a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = a6;
  sub_2225F3278((_DWORD *)(a1 + 40));
  sub_2225F3278((_DWORD *)(a1 + 44));
  sub_2225F3278((_DWORD *)(a1 + 48));
  sub_2225F3278((_DWORD *)(a1 + 56));
  *(unsigned char *)(a1 + 64) &= ~8u;
  sub_22264AC94(a1, a2, a3, a4, a5);
  return a1;
}

uint64_t sub_222640A44(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = a6;
  sub_2225F3278((_DWORD *)(a1 + 40));
  sub_2225F3278((_DWORD *)(a1 + 44));
  sub_2225F3278((_DWORD *)(a1 + 48));
  sub_2225F3278((_DWORD *)(a1 + 56));
  *(unsigned char *)(a1 + 64) &= ~8u;
  sub_22264B550(a1, a2, a3, a4, a5);
  return a1;
}

uint64_t sub_222640AD4(uint64_t a1)
{
  return a1;
}

BOOL sub_222640B00(uint64_t a1, uint64_t a2)
{
  return sub_2225D0E1C(a1 + 8, a2 + 8);
}

uint64_t sub_222640B0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_222640B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CE10C(a2, a2);
  sub_222634040(a1, v4);
  j_j_nullsub_1(a2);
  j_nullsub_1(a1, v5);
  return a1;
}

uint64_t sub_222640B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CE10C(a2, a2);
  sub_222633F44(a1, v4);
  j_j_nullsub_1(a2);
  j_nullsub_1(a1, v5);
  return a1;
}

uint64_t sub_222640BD0(void *a1)
{
  return sub_222640BDC(a1, a1[1] - 56);
}

uint64_t sub_222640BDC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2226339BC(a1);
  sub_222640C34((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

uint64_t sub_222640C34(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_222633E50(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 56;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

void *sub_222640CA4(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  a1[1] = a3;
  sub_222640CD0((uint64_t)a1);
  return a1;
}

uint64_t sub_222640CD0(uint64_t result)
{
  uint64_t v1 = *(uint64_t **)result;
  if (*(void *)result != *(void *)(result + 8))
  {
    uint64_t v2 = result;
    do
    {
      uint64_t v3 = *v1;
      uint64_t result = sub_2225CAE20();
      if (v3 != result)
      {
        uint64_t v4 = **(void **)v2;
        uint64_t result = sub_2225D3294();
        if (v4 != result) {
          break;
        }
      }
      uint64_t v5 = *(uint64_t **)(v2 + 8);
      uint64_t v1 = (uint64_t *)(*(void *)v2 + 8);
      *(void *)uint64_t v2 = v1;
    }
    while (v1 != v5);
  }
  return result;
}

uint64_t sub_222640D38(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_222640D68(&v3, a2);
  return v3;
}

void *sub_222640D68(void *result, uint64_t a2)
{
  *result += 56 * a2;
  return result;
}

uint64_t sub_222640D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  v4[0] = sub_222640DB8(a1 + 984, &v5);
  v4[1] = v2;
  return *(void *)(sub_2225C3C70((uint64_t)v4) + 8);
}

uint64_t sub_222640DB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (!sub_222645EBC(a1, a2, &v6)) {
    return sub_222645FE4(a1);
  }
  uint64_t v3 = v6;
  uint64_t v4 = sub_222608BD4(a1);
  sub_222645FE0(&v7, v3, v4, 1);
  return v7;
}

_DWORD *sub_222640E20(uint64_t a1, unsigned int *a2, void *a3)
{
  BOOL v8 = a3;
  uint64_t v9 = a2;
  uint64_t v4 = sub_222640ECC(a1 + 984, (uint64_t *)&v9);
  sub_2225C6954(a3, *v4);
  *uint64_t v4 = (uint64_t)a3;
  sub_222640EE8(v9, 1);
  if (!sub_222640F2C((uint64_t)a3)) {
    sub_222640EE8(v9, 0);
  }
  if (sub_222627E18(&v8))
  {
    uint64_t v5 = sub_2225E55A8((uint64_t)v8);
    char v6 = sub_222640F68(v5);
  }
  else
  {
    char v6 = 0;
  }
  uint64_t result = (_DWORD *)sub_222640F74((uint64_t)v9);
  if (result)
  {
    if ((v6 & 1) == 0) {
      return sub_222640F80(v9);
    }
  }
  return result;
}

uint64_t *sub_222640ECC(uint64_t a1, uint64_t *a2)
{
  return sub_2226460E8(a1, a2) + 1;
}

unsigned int *sub_222640EE8(unsigned int *a1, int a2)
{
  if (((((*a1 & 0x100000) == 0) ^ a2) & 1) == 0)
  {
    if (a2) {
      int v2 = 0x100000;
    }
    else {
      int v2 = 0;
    }
    unsigned int v3 = *a1 & 0xFFEFFFFF | v2;
    *a1 = v3;
    if (a2) {
      *a1 = v3 | 0x4200000;
    }
    else {
      return (unsigned int *)sub_22260740C(a1);
    }
  }
  return a1;
}

BOOL sub_222640F2C(uint64_t a1)
{
  v3[0] = sub_222627D68(a1);
  v3[1] = v1;
  BOOL result = sub_2225D3DC0(v3);
  if (result) {
    return !sub_222627D6C((uint64_t)v3);
  }
  return result;
}

uint64_t sub_222640F68(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 12) >> 5) & 1;
}

uint64_t sub_222640F74(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 3) >> 3) & 1;
}

_DWORD *sub_222640F80(_DWORD *result)
{
  *result |= 0x10000000u;
  return result;
}

unsigned int *sub_222640F90(uint64_t *a1)
{
  a1[30] = (uint64_t)sub_2226411BC((uint64_t)a1, "__LINE__");
  a1[31] = (uint64_t)sub_2226411BC((uint64_t)a1, "__FILE__");
  if (sub_222606BF8(a1[3]))
  {
    BOOL result = sub_2226411BC((uint64_t)a1, "__VERSION__");
    a1[52] = (uint64_t)result;
  }
  else
  {
    a1[52] = 0;
    a1[32] = (uint64_t)sub_2226411BC((uint64_t)a1, "__DATE__");
    a1[33] = (uint64_t)sub_2226411BC((uint64_t)a1, "__TIME__");
    a1[37] = (uint64_t)sub_2226411BC((uint64_t)a1, "__COUNTER__");
    a1[38] = (uint64_t)sub_2226411BC((uint64_t)a1, "_Pragma");
    a1[35] = (uint64_t)sub_2226411BC((uint64_t)a1, "__BASE_FILE__");
    a1[34] = (uint64_t)sub_2226411BC((uint64_t)a1, "__INCLUDE_LEVEL__");
    a1[36] = (uint64_t)sub_2226411BC((uint64_t)a1, "__TIMESTAMP__");
    if ((*(unsigned char *)a1[3] & 8) != 0)
    {
      a1[40] = (uint64_t)sub_2226411BC((uint64_t)a1, "__identifier");
      unsigned int v3 = sub_2226411BC((uint64_t)a1, "__pragma");
    }
    else
    {
      unsigned int v3 = 0;
      a1[40] = 0;
    }
    a1[39] = (uint64_t)v3;
    a1[42] = (uint64_t)sub_2226411BC((uint64_t)a1, "__has_feature");
    a1[43] = (uint64_t)sub_2226411BC((uint64_t)a1, "__has_extension");
    a1[44] = (uint64_t)sub_2226411BC((uint64_t)a1, "__has_builtin");
    a1[45] = (uint64_t)sub_2226411BC((uint64_t)a1, "__has_attribute");
    a1[46] = (uint64_t)sub_2226411BC((uint64_t)a1, "__has_include");
    a1[47] = (uint64_t)sub_2226411BC((uint64_t)a1, "__has_include_next");
    a1[48] = (uint64_t)sub_2226411BC((uint64_t)a1, "__has_warning");
    BOOL result = sub_2226411BC((uint64_t)a1, "__is_identifier");
    a1[49] = (uint64_t)result;
    if ((*(unsigned char *)(a1[3] + 6) & 0x10) != 0)
    {
      a1[50] = (uint64_t)sub_2226411BC((uint64_t)a1, "__building_module");
      BOOL result = (unsigned int *)sub_2225CBBF8(a1[3] + 136, v4);
      if (result)
      {
        a1[51] = 0;
      }
      else
      {
        BOOL result = sub_2226411BC((uint64_t)a1, "__MODULE__");
        a1[51] = (uint64_t)result;
      }
    }
    else
    {
      a1[50] = 0;
      a1[51] = 0;
    }
  }
  return result;
}

unsigned int *sub_2226411BC(uint64_t a1, char *a2)
{
  sub_2225C3D00((int)v7, a2);
  unsigned int v3 = (unsigned int *)sub_222635F10(a1, v7[0], v7[1]);
  sub_2225F3278(&v6);
  uint64_t v4 = (unsigned int *)sub_222635A64(a1, v6);
  sub_22264512C((uint64_t)v4, 1);
  sub_22263B89C(a1, v3, v4);
  return v3;
}

BOOL sub_222641238(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 792;
  if (sub_2225DF1DC(a1 + 792, a2))
  {
    uint64_t v5 = sub_2225CBA80(v3, v4);
    int v6 = sub_22261FBA8(v5);
  }
  else if (sub_2225DF1DC(a1 + 800, v4))
  {
    uint64_t v8 = sub_2225CBA80(a1 + 800, v7);
    int v6 = sub_222641360(v8);
  }
  else
  {
    uint64_t v9 = sub_2225CBA80(a1 + 824, v7);
    int v6 = sub_22264C2E8(v9);
  }
  if (v6 == 2)
  {
    if (*(void *)(a1 + 808)) {
      return 0;
    }
    uint64_t v11 = (void *)(a1 + 848);
    for (uint64_t i = sub_2226339BC(v11) - 1; i != -1; --i)
    {
      uint64_t v13 = sub_2226370E4(v11, i);
      if (sub_2225DF1DC(v13 + 16, v14))
      {
        uint64_t v16 = sub_2225CBA80(v13 + 16, v15);
        int v6 = sub_22261FBA8(v16);
      }
      else if (sub_2225DF1DC(v13 + 24, v15))
      {
        uint64_t v18 = sub_2225CBA80(v13 + 24, v17);
        int v6 = sub_222641360(v18);
      }
      else
      {
        uint64_t v19 = sub_2225CBA80(v13 + 40, v17);
        int v6 = sub_22264C2E8(v19);
      }
      if (v6 != 2) {
        return v6 == 1;
      }
      if (*(void *)(v13 + 32)) {
        return 0;
      }
    }
    int v6 = 2;
  }
  return v6 == 1;
}

uint64_t sub_222641360(uint64_t a1)
{
  int v1 = **(unsigned __int8 **)(a1 + 136);
  if (v1 == 1) {
    return 2;
  }
  else {
    return v1 == 21;
  }
}

uint64_t sub_222641380(uint64_t a1, uint64_t a2, unint64_t a3)
{
  v51[0] = sub_222627B68(a3);
  v51[1] = v6;
  uint64_t v7 = (unsigned int *)sub_2226269AC(v51);
  uint64_t v8 = *(void *)(a1 + 808);
  if (v8) {
    sub_2226418C0(v8 + 32);
  }
  if (sub_222635F74((uint64_t)v7))
  {
    uint64_t v9 = *(void *)(a1 + 872);
    if (v9)
    {
      int v10 = sub_2225C3B40((unsigned int *)a2);
      sub_22262FD48(&v50, v10);
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, void))(*(void *)v9 + 168))(v9, a2, a3, v50, 0);
    }
    sub_2226418CC(a1, (unsigned int *)a2);
    return 1;
  }
  unsigned int v12 = sub_2225C3B40((unsigned int *)a2);
  unsigned int v49 = v12;
  if (sub_222627A98((uint64_t)v7))
  {
    *(_WORD *)(a1 + 436) |= 8u;
    uint64_t v13 = sub_22264251C(a1, (unsigned int *)a2, (uint64_t)v7, &v49);
    *(_WORD *)(a1 + 436) &= ~8u;
    if (!v13) {
      return 1;
    }
    uint64_t v14 = v13;
    ++*(_DWORD *)(a1 + 1368);
    unsigned int v12 = v49;
  }
  else
  {
    uint64_t v14 = 0;
    ++*(_DWORD *)(a1 + 1364);
  }
  sub_222642E08(a1, v7);
  unsigned int v15 = sub_2225C3B40((unsigned int *)a2);
  sub_22261F184(&v48, v15, v12);
  uint64_t v16 = *(void *)(a1 + 872);
  if (v16)
  {
    if ((*(_WORD *)(a1 + 436) & 8) != 0)
    {
      __n128 v45 = *(__n128 *)a2;
      uint64_t v46 = *(void *)(a2 + 16);
      sub_222642EEC(v47, &v45, a3, v48);
      sub_222642E74(a1 + 880, (uint64_t)v47);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, unint64_t, unint64_t, void *))(*(void *)v16 + 168))(v16, a2, a3, v48, v14);
      if (!sub_2225CF1D0((void *)(a1 + 880)))
      {
        int v17 = sub_2225D5A64(a1 + 880);
        if (v17)
        {
          unsigned int v18 = 0;
          do
          {
            uint64_t v19 = sub_222642EF0(a1 + 880, v18);
            (*(void (**)(void, uint64_t, void, void, void))(**(void **)(a1 + 872) + 168))(*(void *)(a1 + 872), v19, *(void *)(v19 + 24), *(void *)(v19 + 32), 0);
            ++v18;
          }
          while (v17 != v18);
        }
        sub_2225C5D90((void *)(a1 + 880));
      }
    }
  }
  uint64_t v20 = sub_2225C3C70((uint64_t)v51);
  if (sub_222642F1C(v20))
  {
    sub_2226265A0(a1, (unsigned int *)a2, 884, (uint64_t)v47);
    uint64_t v21 = sub_22261AF2C(a2);
    sub_222635F48((uint64_t *)v47, v21);
    sub_2225F37F0(v47);
    unsigned int v22 = sub_2225C3B40(v7);
    sub_22261CABC(a1, v22, 827, (uint64_t)v47);
    uint64_t v23 = sub_22261AF2C(a2);
    sub_222635F48((uint64_t *)v47, v23);
    sub_2225F37F0(v47);
    v47[0].n128_u64[0] = sub_222627D78(v51);
    for (v47[0].n128_u64[1] = v24; sub_2225D3DC0(v47); v47[0].n128_u8[12] = v30)
    {
      if (sub_222627D6C((uint64_t)v47)) {
        break;
      }
      int v25 = (unsigned int *)sub_2226269AC((uint64_t *)v47);
      unsigned int v26 = sub_2225C3B40(v25);
      sub_22261CABC(a1, v26, 828, (uint64_t)v44);
      uint64_t v27 = sub_22261AF2C(a2);
      sub_222635F48(v44, v27);
      sub_2225F37F0(v44);
      uint64_t v28 = sub_2225C3C70((uint64_t)v47);
      if (!sub_222642F1C(v28)) {
        break;
      }
      v47[0].n128_u64[0] = sub_222627D78((uint64_t *)v47);
      v47[0].n128_u32[2] = v29;
    }
  }
  if (sub_22263B7FC((uint64_t)v7))
  {
    if (sub_22263B7FC((uint64_t)v7) == 1)
    {
      uint64_t v31 = sub_22261AF2C(a2);
      if (sub_222642F28((uint64_t)v7, v31, a1))
      {
        if (v14) {
          sub_222625CDC(v14, a1);
        }
        int v32 = sub_22261BFBC(a2);
        int v33 = sub_222620488(a2);
        uint64_t v34 = sub_22263B818((uint64_t)v7, 0);
        int v35 = *(_DWORD *)(v34 + 15);
        *(_OWORD *)a2 = *(_OWORD *)v34;
        *(_DWORD *)(a2 + 15) = v35;
        sub_22261EE18(a2, 1, v32);
        sub_22261EE18(a2, 2, v33);
        uint64_t v36 = *(void *)(a1 + 48);
        unsigned int v37 = sub_2225C3B40((unsigned int *)a2);
        int v38 = sub_222613380(a2);
        int v39 = sub_22260B3EC(v36, v37, v15, v12, v38, 0, 0);
        sub_2225D0A60((_DWORD *)a2, v39);
        uint64_t v40 = sub_22261AF2C(a2);
        if (v40)
        {
          uint64_t v41 = sub_222625E60(a1, v40);
          if (v41)
          {
            uint64_t v42 = (unsigned int *)v41;
            if (!sub_222625E94(v41) || v42 == v7)
            {
              sub_22261CCEC(a2, 4);
              if (v42 != v7 || sub_222627A98((uint64_t)v7))
              {
                sub_2226265A0(a1, (unsigned int *)a2, 834, (uint64_t)v43);
                sub_2225F37F0(v43);
              }
            }
          }
        }
        ++*(_DWORD *)(a1 + 1376);
        return 1;
      }
    }
    sub_22263F648(a1, (unsigned int *)a2, v12, (uint64_t)v7, (uint64_t)v14);
    return 0;
  }
  else
  {
    if (v14) {
      sub_222625CDC(v14, a1);
    }
    sub_22261CCEC(a2, 16);
    sub_22263F7DC(a1, a2);
    uint64_t result = 0;
    ++*(_DWORD *)(a1 + 1376);
  }
  return result;
}

uint64_t sub_2226418C0(uint64_t result)
{
  *(unsigned char *)(result + 2) = 1;
  return result;
}

uint64_t sub_2226418CC(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = sub_22261AF2C((uint64_t)a2);
  if (v4 == *(void *)(a1 + 304))
  {
    return sub_222647694(a1, (uint64_t)a2);
  }
  else
  {
    uint64_t v5 = v4;
    if (v4 != *(void *)(a1 + 312))
    {
      ++*(_DWORD *)(a1 + 1372);
      sub_2225CF794(v100);
      sub_2225E8C04(v99);
      sub_2225C5B6C((uint64_t)a2, 0);
      sub_22261F284((uint64_t)a2, 8);
      if (v5 != *(void *)(a1 + 240))
      {
        if (v5 == *(void *)(a1 + 248) || v5 == *(void *)(a1 + 280))
        {
          uint64_t v8 = *(void *)(a1 + 48);
          int v9 = sub_2225C3B40(a2);
          sub_22260D198(v8, v9, 1, (uint64_t)&v98);
          if (v5 == *(void *)(a1 + 280) && sub_2225D3DB0(&v98))
          {
            for (LODWORD(v86.__r_.__value_.__l.__data_) = sub_2225F514C((uint64_t)&v98);
                  sub_2225CDBBC(&v86);
                  LODWORD(v86.__r_.__value_.__l.__data_) = sub_2225F514C((uint64_t)&v98))
            {
              sub_22260D198(*(void *)(a1 + 48), (int)v86.__r_.__value_.__l.__data_, 1, (uint64_t)&v96);
              *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v96;
              LODWORD(v98.__r_.__value_.__r.__words[2]) = v97;
              if (sub_222609A70(&v98)) {
                break;
              }
            }
          }
          sub_2225CF794(&v96);
          if (sub_2225D3DB0(&v98))
          {
            int v10 = (char *)sub_2225C3C70((uint64_t)&v98);
            sub_2225C3D00((int)v95, v10);
            sub_2225DAD18((const void **)&v96, v95[0], v95[1]);
            sub_22261B50C((uint64_t)&v96);
            uint64_t v11 = sub_2225CAF14((uint64_t)v99, 34);
            uint64_t v12 = sub_2225CA4D0((uint64_t)&v96);
            uint64_t v14 = sub_2225CA568(v11, v12, v13);
            sub_2225CAF14((uint64_t)v14, 34);
          }
          sub_22261F2AC((uint64_t)a2, 13);
          sub_2225CA520(&v96);
          goto LABEL_43;
        }
        if (v5 == *(void *)(a1 + 256))
        {
          unsigned int v26 = sub_2225C3B40(a2);
          sub_22261CABC(a1, v26, 887, (uint64_t)v94);
          sub_2225F37F0(v94);
          if (!sub_2225CDBBC((_DWORD *)(a1 + 424))) {
            sub_222643A54((_DWORD *)(a1 + 424), (_DWORD *)(a1 + 428), a1);
          }
          sub_22261F2AC((uint64_t)a2, 13);
          sub_222612BA8((uint64_t)a2, 13);
          uint64_t v27 = *(void *)(a1 + 48);
          unsigned int v28 = *(_DWORD *)(a1 + 424);
        }
        else
        {
          if (v5 != *(void *)(a1 + 264))
          {
            if (v5 != *(void *)(a1 + 272))
            {
              if (v5 == *(void *)(a1 + 288))
              {
                unsigned int v40 = sub_2225C3B40(a2);
                sub_22261CABC(a1, v40, 887, (uint64_t)v92);
                sub_2225F37F0(v92);
                uint64_t v42 = sub_22263F148(a1, v41);
                if (v42 && (v43 = *(void *)(a1 + 48), unsigned int v44 = sub_2225F514C(v42), (v45 = sub_22262CE08(v43, v44)) != 0))
                {
                  *(void *)&long long v96 = sub_2225C5B40(v45);
                  uint64_t v46 = localtime((const time_t *)&v96);
                  uint64_t v47 = asctime(v46);
                }
                else
                {
                  uint64_t v47 = "??? ??? ?? ??:??:?? ????\n";
                }
                uint64_t v53 = sub_2225CAF14((uint64_t)v99, 34);
                sub_2225C3D00((int)&v96, v47);
                uint64_t v54 = sub_2225E17A0(&v96, 1);
                int v56 = sub_2225CA568(v53, v54, v55);
                sub_2225CAF14((uint64_t)v56, 34);
                uint64_t v19 = (uint64_t)a2;
                __int16 v20 = 13;
                goto LABEL_42;
              }
              if (v5 != *(void *)(a1 + 296))
              {
                if (v5 == *(void *)(a1 + 336)
                  || v5 == *(void *)(a1 + 344)
                  || v5 == *(void *)(a1 + 352)
                  || v5 == *(void *)(a1 + 392)
                  || v5 == *(void *)(a1 + 360))
                {
                  unsigned int v48 = sub_2225C3B40(a2);
                  sub_222635CA4(a1, (uint64_t)a2);
                  if (sub_22261BABC((uint64_t)a2, 21))
                  {
                    sub_222635CA4(a1, (uint64_t)a2);
                    uint64_t v49 = sub_22261AF2C((uint64_t)a2);
                    if (v49)
                    {
                      uint64_t v50 = (_DWORD *)v49;
                      sub_222635CA4(a1, (uint64_t)a2);
                      if (sub_22261BABC((uint64_t)a2, 22))
                      {
                        if (v5 == *(void *)(a1 + 392))
                        {
                          BOOL v57 = sub_22263E560(v50) == 6;
                        }
                        else
                        {
                          if (v5 != *(void *)(a1 + 352))
                          {
                            if (v5 == *(void *)(a1 + 360))
                            {
                              uint64_t v59 = sub_2225CDCF4(a1);
                              uint64_t v60 = sub_222643C2C(v59);
                              uint64_t v61 = (_DWORD *)sub_222608330(a1);
                              int v51 = sub_2225EE404(0, 0, (uint64_t)v50, v60, v61);
                            }
                            else if (v5 == *(void *)(a1 + 344))
                            {
                              int v51 = sub_222643C34(a1, (uint64_t)v50);
                            }
                            else
                            {
                              int v51 = sub_222643F28(a1, (uint64_t)v50);
                            }
LABEL_86:
                            BOOL v57 = v51;
                            goto LABEL_87;
                          }
                          BOOL v57 = sub_222643C14(v50) != 0;
                        }
LABEL_87:
                        sub_2225D4840(v99, v57);
                        goto LABEL_41;
                      }
                    }
                  }
                  sub_22261CABC(a1, v48, 632, (uint64_t)v91);
                  uint64_t v52 = v91;
                  goto LABEL_70;
                }
                if (v5 == *(void *)(a1 + 368))
                {
                  BOOL v58 = sub_222644E28(a2, v5, a1);
                }
                else
                {
                  if (v5 != *(void *)(a1 + 376))
                  {
                    if (v5 != *(void *)(a1 + 384))
                    {
                      if (v5 != *(void *)(a1 + 400))
                      {
                        if (v5 == *(void *)(a1 + 408))
                        {
                          uint64_t v71 = sub_222608330(a1);
                          sub_2225D47E4(v99, v71 + 136);
                          uint64_t v72 = sub_222608330(a1);
                          sub_2225CCBF8(v85, v72 + 136);
                          unsigned int v73 = (_DWORD *)sub_222635F10(a1, v85[0], v85[1]);
                          sub_2225C5B6C((uint64_t)a2, (uint64_t)v73);
                          __int16 v20 = sub_22263E560(v73);
                          uint64_t v19 = (uint64_t)a2;
                          goto LABEL_42;
                        }
                        if (v5 == *(void *)(a1 + 320))
                        {
                          unsigned int v74 = sub_2225C3B40(a2);
                          sub_22263CACC(a1, (uint64_t)a2);
                          if (sub_22261CB34((uint64_t)a2, 21))
                          {
                            unsigned int v75 = sub_2226450CC(a1, v74, 0);
                            sub_22261CABC(a1, v75, 712, (uint64_t)&v96);
                            uint64_t v76 = sub_222635F48((uint64_t *)&v96, v5);
                            sub_222635F18(v76, 0x15u);
                            sub_2225F37F0(&v96);
                            if (!sub_2226450E4((uint64_t)a2))
                            {
                              if (sub_22261AF2C((uint64_t)a2)) {
                                sub_22261F2AC((uint64_t)a2, 6);
                              }
                            }
                            goto LABEL_44;
                          }
                          unsigned int v78 = sub_2225C3B40(a2);
                          sub_22263CACC(a1, (uint64_t)a2);
                          if (sub_2226450E4((uint64_t)a2) || !sub_22261AF2C((uint64_t)a2))
                          {
                            unsigned int v79 = sub_2225C3B40(a2);
                            sub_22261CABC(a1, v79, 724, (uint64_t)&v96);
                            unsigned int v80 = sub_22261BFB4((uint64_t)a2);
                            sub_222635F18((uint64_t *)&v96, v80);
                            sub_2225F37F0(&v96);
                            if (sub_22261BABC((uint64_t)a2, 1)
                              || sub_22261BABC((uint64_t)a2, 2)
                              || sub_2226450E4((uint64_t)a2))
                            {
                              goto LABEL_44;
                            }
                          }
                          else
                          {
                            sub_22261F2AC((uint64_t)a2, 6);
                          }
                          sub_22261B6AC(&v96);
                          sub_22263CACC(a1, (uint64_t)&v96);
                          if (sub_22261CB34((uint64_t)&v96, 22))
                          {
                            unsigned int v81 = sub_2225C3B40(a2);
                            unsigned int v82 = sub_2226450CC(a1, v81, 0);
                            sub_22261CABC(a1, v82, 712, (uint64_t)&v98);
                            unsigned int v83 = sub_22261BFB4((uint64_t)a2);
                            uint64_t v84 = sub_222635F18((uint64_t *)&v98, v83);
                            sub_222635F18(v84, 0x16u);
                            sub_2225F37F0(&v98);
                            sub_22261CABC(a1, v78, 50, (uint64_t)&v98);
                            sub_222635F18((uint64_t *)&v98, 0x15u);
                            sub_2225F37F0(&v98);
                          }
                          goto LABEL_44;
                        }
                        unsigned int v6 = (***(uint64_t (****)(void))(a1 + 80))(*(void *)(a1 + 80));
                        goto LABEL_40;
                      }
                      int v51 = sub_222644F38(a2, v5, a1);
                      goto LABEL_86;
                    }
                    unsigned int v62 = sub_2225C3B40(a2);
                    sub_222635CA4(a1, (uint64_t)a2);
                    if (sub_22261CB34((uint64_t)a2, 21))
                    {
                      sub_22261CABC(a1, v62, 770, (uint64_t)v90);
                      uint64_t v52 = v90;
LABEL_70:
                      sub_2225F37F0(v52);
LABEL_71:
                      sub_2225D4840(v99, 0);
                      goto LABEL_43;
                    }
                    unsigned int v63 = v62;
                    sub_222635CA4(a1, (uint64_t)a2);
                    sub_2225CAD04(&v98);
                    unsigned int v64 = sub_2225C3B40(a2);
                    if ((sub_222649A08(a1, a2, (uint64_t)&v98, (uint64_t)"'__has_warning'", 0) & 1) == 0)
                    {
                      while (sub_22261CB34((uint64_t)a2, 22))
                      {
                        if (!sub_22261CB34((uint64_t)a2, 2)) {
                          break;
                        }
                        if (!sub_22261CB34((uint64_t)a2, 1)) {
                          break;
                        }
                        sub_222635CA4(a1, (uint64_t)a2);
                      }
                      std::string::~string(&v98);
                      goto LABEL_71;
                    }
                    BOOL v66 = sub_22261BABC((uint64_t)a2, 22);
                    if (v66)
                    {
                      if ((unint64_t)sub_2225CB920((uint64_t)&v98, v65) >= 3
                        && *(unsigned char *)sub_2225CB8F8((uint64_t)&v98, 0) == 45
                        && *(unsigned char *)sub_2225CB8F8((uint64_t)&v98, 1) == 87)
                      {
                        sub_222644ED8(&v96);
                        uint64_t v67 = sub_2225C5B40(a1);
                        uint64_t v68 = sub_2225F3D8C(v67);
                        uint64_t v69 = sub_2225C3C70(v68);
                        sub_222644EDC((uint64_t)&v98, 2, -1, (uint64_t)&v86);
                        sub_2225CCBF8(v87, &v86);
                        int v70 = sub_2225F7658(v69, 0, v87[0], (size_t)v87[1], (uint64_t)&v96) ^ 1;
                        std::string::~string(&v86);
                        sub_2225C56C4(&v96);
                        goto LABEL_110;
                      }
                      sub_22261CABC(a1, v64, 876, (uint64_t)v88);
                      unsigned int v77 = v88;
                    }
                    else
                    {
                      sub_22261CABC(a1, v63, 770, (uint64_t)v89);
                      unsigned int v77 = v89;
                    }
                    sub_2225F37F0(v77);
                    int v70 = 0;
LABEL_110:
                    std::string::~string(&v98);
                    sub_2225D4840(v99, v70);
                    if (!v66) {
                      goto LABEL_43;
                    }
                    goto LABEL_41;
                  }
                  BOOL v58 = sub_222644E30(a2, v5, a1);
                }
                sub_2225D4840(v99, v58);
                if (!sub_22261BABC((uint64_t)a2, 22)) {
                  goto LABEL_43;
                }
                goto LABEL_41;
              }
              unsigned int v6 = *(_DWORD *)(a1 + 432);
              *(_DWORD *)(a1 + 432) = v6 + 1;
LABEL_40:
              sub_2225CA560(v99, v6);
LABEL_41:
              uint64_t v19 = (uint64_t)a2;
              __int16 v20 = 8;
LABEL_42:
              sub_22261F2AC(v19, v20);
LABEL_43:
              uint64_t v21 = sub_2225E8D4C((uint64_t *)v99);
              uint64_t v23 = v22;
              unsigned int v24 = sub_2225C3B40(a2);
              unsigned int v25 = sub_2225C3B40(a2);
              sub_222648E1C(a1, v21, v23, a2, v24, v25);
LABEL_44:
              sub_2225E8C5C(v99);
              return sub_2225CA520(v100);
            }
            uint64_t v34 = *(void *)(a1 + 48);
            int v35 = sub_2225C3B40(a2);
            sub_22260D198(v34, v35, 1, (uint64_t)&v96);
            if (sub_2225D3DB0(&v96)
              && (uint64_t v36 = *(void *)(a1 + 48),
                  int v37 = sub_2225F514C((uint64_t)&v96),
                  sub_22260D198(v36, v37, 1, (uint64_t)&v98),
                  long long v96 = *(_OWORD *)&v98.__r_.__value_.__l.__data_,
                  int v97 = v98.__r_.__value_.__r.__words[2],
                  sub_2225D3DB0(&v96)))
            {
              int v18 = 0;
              do
              {
                uint64_t v38 = *(void *)(a1 + 48);
                int v39 = sub_2225F514C((uint64_t)&v96);
                sub_22260D198(v38, v39, 1, (uint64_t)&v98);
                long long v96 = *(_OWORD *)&v98.__r_.__value_.__l.__data_;
                int v97 = v98.__r_.__value_.__r.__words[2];
                ++v18;
              }
              while (sub_2225D3DB0(&v96));
            }
            else
            {
              int v18 = 0;
            }
LABEL_39:
            unsigned int v6 = v18;
            goto LABEL_40;
          }
          unsigned int v29 = sub_2225C3B40(a2);
          sub_22261CABC(a1, v29, 887, (uint64_t)v93);
          sub_2225F37F0(v93);
          if (!sub_2225CDBBC((_DWORD *)(a1 + 428))) {
            sub_222643A54((_DWORD *)(a1 + 424), (_DWORD *)(a1 + 428), a1);
          }
          sub_22261F2AC((uint64_t)a2, 13);
          sub_222612BA8((uint64_t)a2, 10);
          uint64_t v27 = *(void *)(a1 + 48);
          unsigned int v28 = *(_DWORD *)(a1 + 428);
        }
        unsigned int v30 = sub_2225C3B40(a2);
        unsigned int v31 = sub_2225C3B40(a2);
        int v32 = sub_222613380((uint64_t)a2);
        int v33 = sub_22260B3EC(v27, v28, v30, v31, v32, 0, 0);
        sub_2225D0A60(a2, v33);
        goto LABEL_44;
      }
      unsigned int v15 = sub_2225C3B40(a2);
      int v16 = sub_222623178(a1, v15, 0);
      uint64_t v17 = sub_22260C9BC(*(_DWORD **)(a1 + 48), v16);
      int v18 = 1;
      sub_22260D198(*(void *)(a1 + 48), SHIDWORD(v17), 1, (uint64_t)&v96);
      if (sub_2225D3DB0(&v96)) {
        int v18 = sub_2225F56EC((uint64_t)&v96);
      }
      goto LABEL_39;
    }
    return sub_222647C94(a1, a2);
  }
}

unsigned char *sub_22264251C(uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD *a4)
{
  v77[195] = *MEMORY[0x263EF8340];
  unsigned int v7 = sub_2225F514C(a3);
  uint64_t v59 = (unsigned int *)a3;
  BOOL v8 = sub_222643024(a3);
  sub_22261B6AC(v73);
  sub_222635CA4(a1, (uint64_t)v73);
  sub_222643034(v77);
  sub_2225F3278(&v72);
  if (!sub_22261CB34((uint64_t)v73, 22))
  {
    LODWORD(v10) = 0;
    int v9 = 0;
    goto LABEL_55;
  }
  BOOL v57 = a4;
  int v9 = 0;
  uint64_t v10 = 0;
  do
  {
    if ((v9 & 1) != 0 && (sub_22261BABC((uint64_t)v73, 1) || sub_22261BABC((uint64_t)v73, 2)))
    {
      int v9 = 1;
      break;
    }
    unsigned int v11 = sub_222609DE8((uint64_t)v77);
    unsigned int v12 = sub_2225C3B40(v73);
    int v13 = 0;
    BOOL v14 = v7 < 2 && v8;
    while (1)
    {
      sub_222635CA4(a1, (uint64_t)v73);
      if (sub_22261BABC((uint64_t)v73, 1) || sub_22261BABC((uint64_t)v73, 2)) {
        break;
      }
      if (sub_22261BABC((uint64_t)v73, 22))
      {
        if (!v13)
        {
          *BOOL v57 = sub_2225C3B40(v73);
          goto LABEL_34;
        }
        --v13;
LABEL_31:
        sub_22260BC64((uint64_t)v77, (uint64_t)v73);
      }
      else
      {
        if (sub_22261BABC((uint64_t)v73, 21))
        {
          ++v13;
          goto LABEL_31;
        }
        if (sub_22261BABC((uint64_t)v73, 64) && !v13 && (sub_222643038((uint64_t)v73) & 0x80) == 0)
        {
          if (!v14) {
            goto LABEL_34;
          }
          int v13 = 0;
          goto LABEL_31;
        }
        if (!sub_22261BABC((uint64_t)v73, 5) || (*(_WORD *)(a1 + 436) & 2) != 0)
        {
          if (sub_22261AF2C((uint64_t)v73))
          {
            uint64_t v15 = sub_22261AF2C((uint64_t)v73);
            uint64_t v16 = sub_222625E60(a1, v15);
            if (v16)
            {
              if (!sub_222625E94(v16)) {
                sub_22261CCEC((uint64_t)v73, 4);
              }
            }
          }
          else if (sub_22261BABC((uint64_t)v73, 3))
          {
            uint64_t v17 = *(void *)(a1 + 680);
            if (v17)
            {
              uint64_t v18 = sub_22261AF2C((uint64_t)a2);
              (*(void (**)(uint64_t, uint64_t, unsigned int *, uint64_t))(*(void *)v17 + 48))(v17, v18, v59, v10);
            }
            int v9 = 1;
          }
          goto LABEL_31;
        }
      }
    }
    if ((v9 & 1) == 0)
    {
      sub_2226265A0(a1, a2, 766, (uint64_t)v71);
      sub_2225F37F0(v71);
      unsigned int v37 = sub_2225C3B40(v59);
      sub_22261CABC(a1, v37, 823, (uint64_t)v76);
      uint64_t v38 = sub_22261AF2C((uint64_t)a2);
      sub_222635F48((uint64_t *)v76, v38);
      sub_2225F37F0(v76);
      int v39 = 0;
      *(_OWORD *)a2 = *(_OWORD *)v73;
      *(unsigned int *)((char *)a2 + 15) = *(unsigned int *)((char *)&v73[3] + 3);
      goto LABEL_107;
    }
    uint64_t v19 = sub_2225C26A4(24);
    uint64_t v20 = sub_22261B6AC(v19);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v73;
    *(_DWORD *)(v20 + 15) = *(unsigned int *)((char *)&v73[3] + 3);
    int v9 = 1;
    sub_22263F714(a1, v19, 1, 1, 1);
LABEL_34:
    if (sub_2225CF1D0(v77) && sub_22261BFB4((uint64_t)v73) == 22) {
      break;
    }
    if (v7) {
      char v21 = 1;
    }
    else {
      char v21 = v8;
    }
    if ((v21 & 1) == 0 && sub_2225F38E8(&v72))
    {
      if (sub_222609DE8((uint64_t)v77) == v11)
      {
        unsigned int v72 = v12;
      }
      else
      {
        uint64_t v22 = (unsigned int *)sub_222609E38((uint64_t)v77, v11);
        unsigned int v72 = sub_2225C3B40(v22);
      }
    }
    if (sub_222609DE8((uint64_t)v77) == v11)
    {
      uint64_t v23 = **(void **)(a1 + 24);
      if ((v23 & 1) == 0)
      {
        if ((v23 & 0x80) != 0) {
          int v24 = 864;
        }
        else {
          int v24 = 781;
        }
        sub_2226265A0(a1, v73, v24, (uint64_t)v70);
        sub_2225F37F0(v70);
      }
    }
    sub_22261B6AC(v76);
    sub_22261FB44((uint64_t)v76);
    sub_22261F2AC((uint64_t)v76, 1);
    int v25 = sub_2225C3B40(v73);
    sub_2225D0A60(v76, v25);
    sub_222612BA8((uint64_t)v76, 0);
    sub_22260BC64((uint64_t)v77, (uint64_t)v76);
    uint64_t v10 = (v10 + 1);
    v7 -= (v7 != 0) & ~v9;
  }
  while (sub_22261CB34((uint64_t)v73, 22));
LABEL_55:
  unsigned int v26 = v59;
  unsigned int v27 = sub_2225F514C((uint64_t)v59);
  char v28 = v10 <= v27 || v8;
  if ((v28 & 1) == 0 && (v9 & 1) == 0)
  {
    sub_22261CABC(a1, v72, 760, (uint64_t)v69);
    sub_2225F37F0(v69);
    unsigned int v29 = sub_2225C3B40(v59);
    sub_22261CABC(a1, v29, 823, (uint64_t)v76);
    uint64_t v30 = sub_22261AF2C((uint64_t)a2);
    sub_222635F48((uint64_t *)v76, v30);
    sub_2225F37F0(v76);
    sub_22261794C(v76);
    int v68 = 0;
    sub_2225D3DAC(v75);
    sub_2225D3DAC(v74);
    if (sub_222643040(a1, (uint64_t)v77, v76, &v68, v75, v74))
    {
      if (v68 == v27)
      {
        sub_2226265A0(a1, a2, 829, (uint64_t)v67);
        unsigned int v31 = (unsigned int *)sub_2225C3C70((uint64_t)v75);
        uint64_t v32 = sub_2225C3D04((uint64_t)v75);
        if (v31 != (unsigned int *)v32)
        {
          int v33 = (unsigned int *)v32;
          do
          {
            int v34 = sub_2225C3B40(v31);
            sub_2225C3D00((int)v65, "(");
            sub_22261E3FC(v34, v65[0], v65[1], 0, (uint64_t)v66);
            sub_22261E3BC((uint64_t)v67, (uint64_t)v66);
            sub_2225F4E0C(v66);
            int v35 = sub_222613380((uint64_t)v31);
            sub_2225C3D00((int)v64, ")");
            sub_22261E3FC(v35, v64[0], v64[1], 0, (uint64_t)v66);
            sub_22261E3BC((uint64_t)v67, (uint64_t)v66);
            sub_2225F4E0C(v66);
            v31 += 2;
          }
          while (v31 != v33);
        }
        sub_222643310(v77, (uint64_t)v76);
        sub_2225F37F0(v67);
        int v36 = 1;
        LODWORD(v10) = v27;
        goto LABEL_73;
      }
LABEL_67:
      int v36 = 0;
    }
    else
    {
      if (sub_2225CF1D0(v74)) {
        goto LABEL_67;
      }
      sub_2226265A0(a1, a2, 822, (uint64_t)v66);
      unsigned int v40 = (uint64_t *)sub_2225C3C70((uint64_t)v74);
      uint64_t v41 = sub_2225C3D04((uint64_t)v74);
      if (v40 != (uint64_t *)v41)
      {
        uint64_t v42 = (uint64_t *)v41;
        do
          sub_222625214(v66, v40++);
        while (v40 != v42);
      }
      sub_2225F37F0(v66);
      int v36 = 0;
LABEL_73:
      unsigned int v26 = v59;
    }
    sub_2225C56C4(v74);
    sub_2225C56C4(v75);
    sub_2225C56C4(v76);
    if (!v36) {
      goto LABEL_99;
    }
  }
  if (v9)
  {
    sub_22261B6AC(v76);
    sub_22261FB44((uint64_t)v76);
    sub_22261F2AC((uint64_t)v76, 1);
    int v43 = sub_2225C3B40(v73);
    sub_2225D0A60(v76, v43);
    sub_222612BA8((uint64_t)v76, 0);
    int v44 = v27 - v10;
    if (v27 > v10)
    {
      do
      {
        sub_22260BC64((uint64_t)v77, (uint64_t)v76);
        --v44;
      }
      while (v44);
      LODWORD(v10) = v27;
    }
  }
  if (v10 >= v27)
  {
    if (v10 > v27 && ((sub_222643024((uint64_t)v26) | v9) & 1) == 0)
    {
      sub_2226265A0(a1, a2, 760, (uint64_t)v61);
      sub_2225F37F0(v61);
      unsigned int v49 = sub_2225C3B40(v26);
      sub_22261CABC(a1, v49, 823, (uint64_t)v76);
      uint64_t v50 = (uint64_t)a2;
      goto LABEL_98;
    }
    char v46 = 0;
    goto LABEL_106;
  }
  BOOL v45 = sub_222643024((uint64_t)v26);
  char v46 = v45;
  if (!v10 && v27 == 1) {
    goto LABEL_103;
  }
  if (v45)
  {
    BOOL v47 = !v10 && v27 == 2;
    BOOL v48 = v47;
    if (v10 + 1 == v27 || v48)
    {
      if ((sub_2226435F0((uint64_t)v26) & 1) == 0)
      {
        sub_2226265A0(a1, v73, 786, (uint64_t)v63);
        sub_2225F37F0(v63);
        unsigned int v53 = sub_2225C3B40(v26);
        sub_22261CABC(a1, v53, 823, (uint64_t)v76);
        uint64_t v54 = sub_22261AF2C((uint64_t)a2);
        sub_222635F48((uint64_t *)v76, v54);
        sub_2225F37F0(v76);
      }
      char v46 = 1;
LABEL_103:
      int v55 = sub_2225C3B40(v73);
      sub_22261FB44((uint64_t)v73);
      sub_22261F2AC((uint64_t)v73, 1);
      sub_2225D0A60(v73, v55);
      sub_222612BA8((uint64_t)v73, 0);
      sub_22260BC64((uint64_t)v77, (uint64_t)v73);
      if (!v10 && v27 == 2) {
        sub_22260BC64((uint64_t)v77, (uint64_t)v73);
      }
LABEL_106:
      sub_2226435FC(v60, v77);
      int v39 = sub_222625B24((uint64_t)v26, v60[0], v60[1], v46, a1);
      goto LABEL_107;
    }
  }
  if (v9)
  {
    char v46 = 0;
    goto LABEL_103;
  }
  sub_2226265A0(a1, v73, 759, (uint64_t)v62);
  sub_2225F37F0(v62);
  unsigned int v51 = sub_2225C3B40(v26);
  sub_22261CABC(a1, v51, 823, (uint64_t)v76);
  uint64_t v50 = (uint64_t)a2;
LABEL_98:
  uint64_t v52 = sub_22261AF2C(v50);
  sub_222635F48((uint64_t *)v76, v52);
  sub_2225F37F0(v76);
LABEL_99:
  int v39 = 0;
LABEL_107:
  sub_2225C56C4(v77);
  return v39;
}

uint64_t sub_222642E08(uint64_t a1, unsigned int *a2)
{
  if (sub_22263B844((uint64_t)a2) && (sub_22263B838((uint64_t)a2) & 1) == 0)
  {
    unsigned int v4 = sub_2225C3B40(a2);
    sub_22263B85C(a1 + 1008, v4);
  }

  return sub_22264510C((uint64_t)a2, 1);
}

uint64_t sub_222642E74(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_22264645C((const void **)a1, 0);
  }
  uint64_t v4 = sub_2225C3D04(a1);
  uint64_t v5 = *(void *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = v5;
  uint64_t v7 = sub_2225C3D04(a1) + 40;

  return sub_2225C5B6C(a1, v7);
}

uint64_t sub_222642EF0(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 40 * a2;
}

uint64_t sub_222642F1C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 12) >> 3) & 1;
}

BOOL sub_222642F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22263B818(a1, 0);
  uint64_t v7 = sub_22261AF2C(v6);
  if (!v7) {
    return 1;
  }
  uint64_t v8 = v7;
  if (sub_2226074F0(v7))
  {
    uint64_t v9 = sub_222645164(a3);
    (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 24))(v9, v8);
  }
  if (sub_2226074C0(v8))
  {
    uint64_t v10 = sub_222625E60(a3, v8);
    BOOL v11 = sub_222625E94(v10);
    if (v8 != a2 && v11) {
      return 0;
    }
  }
  if (sub_22263B7E4(a1)) {
    return 1;
  }
  uint64_t v13 = sub_2225C3D04(a1);
  uint64_t v14 = sub_222627ABC(a1);
  if (v13 == v14) {
    return 1;
  }
  uint64_t v15 = v14;
  uint64_t v16 = v13 + 8;
  do
  {
    uint64_t v17 = *(void *)(v16 - 8);
    BOOL result = v17 != v8;
    BOOL v18 = v17 == v8 || v16 == v15;
    v16 += 8;
  }
  while (!v18);
  return result;
}

BOOL sub_222643024(uint64_t a1)
{
  return (*(_WORD *)(a1 + 244) & 0xC) != 0;
}

uint64_t sub_222643038(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 18);
}

BOOL sub_222643040(uint64_t a1, uint64_t a2, const void **a3, _DWORD *a4, void *a5, void *a6)
{
  BOOL result = sub_22264516C(a2);
  if (result)
  {
    uint64_t v30 = a6;
    uint64_t v13 = (unsigned int *)sub_2225C3C70(a2);
    uint64_t v14 = (unsigned int *)sub_2225C3D04(a2);
    *a4 = 0;
    sub_22261B6AC(v32);
    uint64_t v15 = (long long *)sub_2225C3C70(a2);
    uint64_t v16 = sub_2225C3D04(a2);
    if (v15 != (long long *)v16)
    {
      uint64_t v17 = (unsigned int *)v16;
      int v18 = 0;
      char v19 = 0;
      do
      {
        if (sub_22261BABC((uint64_t)v15, 23))
        {
          ++v18;
        }
        else if (sub_22261BABC((uint64_t)v15, 24))
        {
          if (((v14 == v17) & v19) != 0) {
            uint64_t v20 = (unsigned int *)v15;
          }
          else {
            uint64_t v20 = v14;
          }
          if (v18 == 1)
          {
            uint64_t v14 = v20;
            int v18 = 0;
          }
          else
          {
            --v18;
          }
        }
        else if (sub_22261BABC((uint64_t)v15, 1))
        {
          if (v18)
          {
            sub_22261F2AC((uint64_t)v15, 64);
            char v19 = 1;
            sub_222612BA8((uint64_t)v15, 1);
          }
          else
          {
            ++*a4;
            if (v19)
            {
              if (sub_22261BABC((uint64_t)v13, 23))
              {
                int v21 = sub_2225C3B40(v13);
                unsigned int v22 = sub_2225C3B40(v14);
                int v23 = sub_2226450CC(a1, v22, 0);
                sub_22261F184(&v31, v21, v23);
                sub_2225CC7B8((uint64_t)v30, &v31);
                uint64_t v14 = v17;
              }
              sub_22261FB44((uint64_t)v32);
              sub_22261F2AC((uint64_t)v32, 21);
              int v24 = sub_2225C3B40(v13);
              sub_2225D0A60(v32, v24);
              sub_222612BA8((uint64_t)v32, 0);
              sub_22260BC64((uint64_t)a3, (uint64_t)v32);
              uint64_t v25 = sub_2225C3D04((uint64_t)a3);
              sub_222645298(a3, v25, (uint64_t)v13, v15);
              unsigned int v26 = sub_2225C3B40((unsigned int *)v15 - 6);
              int v27 = sub_2226450CC(a1, v26, 0);
              sub_22261FB44((uint64_t)v32);
              sub_22261F2AC((uint64_t)v32, 22);
              sub_2225D0A60(v32, v27);
              sub_222612BA8((uint64_t)v32, 0);
              sub_22260BC64((uint64_t)a3, (uint64_t)v32);
              int v28 = sub_2225C3B40(v13);
              sub_22261F184(&v31, v28, v27);
              sub_2225CC7B8((uint64_t)a5, &v31);
            }
            else
            {
              uint64_t v29 = sub_2225C3D04((uint64_t)a3);
              sub_222645298(a3, v29, (uint64_t)v13, v15);
            }
            sub_22260BC64((uint64_t)a3, (uint64_t)v15);
            char v19 = 0;
            int v18 = 0;
            uint64_t v13 = (unsigned int *)v15 + 6;
          }
        }
        uint64_t v15 = (long long *)((char *)v15 + 24);
      }
      while (v15 != (long long *)v17);
    }
    return !sub_2225CF1D0(a5) && sub_2225CF1D0(v30);
  }
  return result;
}

uint64_t *sub_222643310(uint64_t *result, uint64_t a2)
{
  if (result != (uint64_t *)a2)
  {
    uint64_t v3 = (uint64_t)result;
    if (sub_2225C603C(result) || sub_2225C603C((void *)a2))
    {
      unint64_t v4 = sub_222609DE8(a2);
      if (v4 > sub_222619804(v3))
      {
        unint64_t v5 = sub_222609DE8(a2);
        sub_2226119B0((const void **)v3, v5);
      }
      unint64_t v6 = sub_222609DE8(v3);
      if (v6 > sub_222619804(a2))
      {
        unint64_t v7 = sub_222609DE8(v3);
        sub_2226119B0((const void **)a2, v7);
      }
      unint64_t v8 = sub_222609DE8(v3);
      if (v8 > sub_222609DE8(a2)) {
        unint64_t v8 = sub_222609DE8(a2);
      }
      if (v8)
      {
        unsigned int v9 = 0;
        do
        {
          uint64_t v10 = sub_222609E38(v3, v9);
          uint64_t v11 = sub_222609E38(a2, v9);
          sub_222646474(v10, v11);
          ++v9;
        }
        while (v8 != v9);
      }
      unint64_t v12 = sub_222609DE8(v3);
      if (v12 <= sub_222609DE8(a2))
      {
        unint64_t v24 = sub_222609DE8(a2);
        BOOL result = (uint64_t *)sub_222609DE8(v3);
        if (v24 <= (unint64_t)result) {
          return result;
        }
        unint64_t v25 = sub_222609DE8(a2);
        unint64_t v26 = v25 - sub_222609DE8(v3);
        uint64_t v27 = 3 * v8;
        int v28 = (void *)(sub_2225C3C70(a2) + 24 * v8);
        uint64_t v29 = sub_2225C3D04(a2);
        uint64_t v30 = (void *)sub_2225C3D04(v3);
        sub_2225D0844(v28, v29, v30);
        uint64_t v31 = sub_2225C3D04(v3);
        sub_2225C5B6C(v3, v31 + 24 * v26);
        uint64_t v32 = sub_2225C3C70(a2) + 8 * v27;
        uint64_t v33 = sub_2225C3D04(a2);
        nullsub_1(v32, v33);
        uint64_t v22 = sub_2225C3C70(a2) + 8 * v27;
        uint64_t v23 = a2;
      }
      else
      {
        unint64_t v13 = sub_222609DE8(v3);
        unint64_t v14 = v13 - sub_222609DE8(a2);
        uint64_t v15 = 3 * v8;
        uint64_t v16 = (void *)(sub_2225C3C70(v3) + 24 * v8);
        uint64_t v17 = sub_2225C3D04(v3);
        int v18 = (void *)sub_2225C3D04(a2);
        sub_2225D0844(v16, v17, v18);
        uint64_t v19 = sub_2225C3D04(a2);
        sub_2225C5B6C(a2, v19 + 24 * v14);
        uint64_t v20 = sub_2225C3C70(v3) + 8 * v15;
        uint64_t v21 = sub_2225C3D04(v3);
        nullsub_1(v20, v21);
        uint64_t v22 = sub_2225C3C70(v3) + 8 * v15;
        uint64_t v23 = v3;
      }
      return (uint64_t *)sub_2225C5B6C(v23, v22);
    }
    else
    {
      sub_2225C6448((uint64_t *)v3, (uint64_t *)a2);
      sub_2225C6448((uint64_t *)(v3 + 8), (uint64_t *)(a2 + 8));
      return sub_2225C6448((uint64_t *)(v3 + 16), (uint64_t *)(a2 + 16));
    }
  }
  return result;
}

uint64_t sub_2226435F0(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 244) >> 5) & 1;
}

unint64_t sub_222643600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v23[0] = a3;
  v23[1] = a4;
  uint64_t v22 = a2;
  if (sub_2225CF1E0((uint64_t)v23)) {
    return 0;
  }
  unint64_t v21 = sub_222609DE8(a1 + 1488);
  unint64_t v6 = sub_2225C3D04((uint64_t)v23);
  unint64_t v7 = sub_222619804(a1 + 1488);
  unint64_t v8 = v7 - sub_222609DE8(a1 + 1488);
  unsigned int v9 = (long long *)sub_2225C3C70((uint64_t)v23);
  uint64_t v10 = (long long *)sub_222625C88(v23);
  sub_22264375C((const void **)(a1 + 1488), v9, v10);
  if (v6 > v8)
  {
    uint64_t v11 = sub_2225D36D8((void *)(a1 + 1896));
    if (v11)
    {
      uint64_t v12 = 0;
      do
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        unint64_t v13 = (uint64_t *)sub_2225D36E8((void *)(a1 + 1896), v12);
        v18.n128_u64[0] = sub_222643824((uint64_t)&v20, (uint64_t)&v19);
        v18.n128_u64[1] = v14;
        sub_222643854((uint64_t)&v18, v13);
        uint64_t v15 = sub_2225CC180(a1 + 1488);
        *(void *)(v20 + 24) = v15 + 24 * v19;
        ++v12;
      }
      while (v11 != v12);
    }
  }
  v18.n128_u64[0] = sub_2225C5EEC((uint64_t)&v22, (uint64_t)&v21);
  v18.n128_u64[1] = v16;
  sub_2226438A0((uint64_t *)(a1 + 1896), &v18);
  uint64_t v17 = sub_2225CC180(a1 + 1488);
  return v17 + 24 * v21;
}

uint64_t sub_22264375C(const void **a1, long long *a2, long long *a3)
{
  unint64_t v6 = sub_222645478((uint64_t)a2, (uint64_t)a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > 0xAAAAAAAAAAAAAAABLL * ((v7 - sub_2225C3D04((uint64_t)a1)) >> 3))
  {
    unint64_t v8 = sub_222609DE8((uint64_t)a1);
    sub_2226119B0(a1, v8 + v6);
  }
  unsigned int v9 = (_OWORD *)sub_2225C3D04((uint64_t)a1);
  sub_22264559C(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + 24 * v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_222643824(uint64_t a1, uint64_t a2)
{
  sub_2226464E8(&v3, a1, a2);
  return v3;
}

uint64_t sub_222643854(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)sub_2225CC180(a1) = v4;
  uint64_t v5 = a2[1];
  *(void *)sub_2225D2BAC(a1) = v5;
  return a1;
}

uint64_t sub_2226438A0(uint64_t *a1, __n128 *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, (uint64_t)a2))
  {
    uint64_t result = sub_2226464EC(a1, a2);
  }
  else
  {
    sub_22263BE00((uint64_t)a1, a2);
    uint64_t result = v4 + 16;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2226438FC(uint64_t a1)
{
  int v2 = (void *)(a1 + 1896);
  uint64_t v3 = sub_2225D35A0(a1 + 1896);
  sub_222643948((const void **)(a1 + 1488), *(_DWORD *)(v3 + 8));

  return sub_2225D35AC(v2);
}

unint64_t sub_222643948(const void **a1, unsigned int a2)
{
  unint64_t v3 = a2;
  if (sub_222609DE8((uint64_t)a1) <= a2)
  {
    unint64_t result = sub_222609DE8((uint64_t)a1);
    if (result >= v3) {
      return result;
    }
    if (sub_222619804((uint64_t)a1) < v3) {
      sub_2226119B0(a1, v3);
    }
    unsigned int v9 = (void *)sub_2225C3D04((uint64_t)a1);
    uint64_t v10 = sub_2225C3C70((uint64_t)a1) + 24 * v3;
    while (v9 != (void *)v10)
    {
      *unsigned int v9 = 0;
      v9[1] = 0;
      v9[2] = 0;
      sub_22261B6AC(v9);
      v9 += 3;
    }
    uint64_t v7 = sub_2225C3C70((uint64_t)a1) + 24 * v3;
  }
  else
  {
    uint64_t v4 = 3 * v3;
    uint64_t v5 = sub_2225C3C70((uint64_t)a1) + 24 * v3;
    uint64_t v6 = sub_2225C3D04((uint64_t)a1);
    nullsub_1(v5, v6);
    uint64_t v7 = sub_2225C3C70((uint64_t)a1) + 8 * v4;
  }

  return sub_2225C5B6C((uint64_t)a1, v7);
}

uint64_t sub_222643A54(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  time_t v23 = time(0);
  uint64_t v6 = localtime(&v23);
  sub_2225CF1C4(v22);
  sub_2225E8C04(v21);
  uint64_t v7 = &off_264625328[v6->tm_mon];
  int v19 = v6->tm_year + 1900;
  sub_22264582C((uint64_t)"\"%s %2d %4d\"", (uint64_t)v7, (uint64_t)&v6->tm_mday, (uint64_t)&v19, (uint64_t)v20);
  sub_2225E8168((uint64_t)v21, (uint64_t)v20);
  j_j_nullsub_1(v20);
  sub_22261B6AC(v20);
  sub_22261FB44((uint64_t)v20);
  uint64_t v8 = sub_2225E8D4C(v21);
  uint64_t v10 = v9;
  sub_2225F3278(&v18);
  sub_2225F3278(&v17);
  sub_222648E1C(a3, v8, v10, v20, v18, v17);
  *a1 = sub_2225C3B40(v20);
  sub_2225E8C5C(v21);
  sub_2225CA520(v22);
  sub_2225CF1C4(v22);
  sub_2225E8C04(v21);
  sub_222645844((uint64_t)"\"%02d:%02d:%02d\"", (uint64_t)&v6->tm_hour, (uint64_t)&v6->tm_min, (uint64_t)v6, (uint64_t)v20);
  sub_2225E8168((uint64_t)v21, (uint64_t)v20);
  j_j_nullsub_1(v20);
  sub_22261B6AC(v20);
  sub_22261FB44((uint64_t)v20);
  uint64_t v11 = sub_2225E8D4C(v21);
  uint64_t v13 = v12;
  sub_2225F3278(&v16);
  sub_2225F3278(&v15);
  sub_222648E1C(a3, v11, v13, v20, v16, v15);
  *a2 = sub_2225C3B40(v20);
  sub_2225E8C5C(v21);
  return sub_2225CA520(v22);
}

uint64_t sub_222643C14(_DWORD *a1)
{
  unsigned int v1 = (*a1 >> 9) & 0x7FF;
  if (v1 <= 0x1A) {
    return 0;
  }
  else {
    return v1 - 27;
  }
}

uint64_t sub_222643C2C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_222643C34(uint64_t a1, uint64_t a2)
{
  if (sub_222643F28(a1, a2)) {
    return 1;
  }
  uint64_t v5 = sub_2225C5B40(a1);
  if ((int)sub_2225DF8D0(v5) > 3) {
    return 0;
  }
  uint64_t v6 = (unsigned char *)sub_222608330(a1);
  uint64_t v53 = sub_2225F2418(a2);
  uint64_t v54 = v7;
  sub_2225C3D00((int)v52, "__");
  if (sub_2225D0520((uint64_t)&v53, v52[0], (size_t)v52[1]))
  {
    sub_2225C3D00((int)v51, "__");
    if (sub_2225F2464(&v53, v51[0], (size_t)v51[1]) && (unint64_t)sub_2225C3D04((uint64_t)&v53) >= 4)
    {
      uint64_t v8 = sub_2225C3D04((uint64_t)&v53);
      uint64_t v53 = sub_2225CE76C(&v53, 2uLL, v8 - 4);
      uint64_t v54 = v9;
    }
  }
  sub_2225D934C(v50, v53, v54);
  char v49 = 1;
  uint64_t v10 = sub_2225DAEFC((uint64_t)v50, "nullability", (uint64_t)&v49);
  char v48 = 1;
  uint64_t v11 = sub_2225DB220(v10, (uint64_t)"c_alignas", (uint64_t)&v48);
  char v47 = 1;
  uint64_t v12 = sub_2225D95FC(v11, "c_atomic", (uint64_t)&v47);
  char v46 = 1;
  uint64_t v13 = sub_2225F262C(v12, (uint64_t)"c_generic_selections", (uint64_t)&v46);
  char v45 = 1;
  uint64_t v14 = sub_2225F26A4(v13, "c_static_assert", (uint64_t)&v45);
  uint64_t v15 = sub_2225CDCF4(a1);
  char v44 = sub_222608C58(v15);
  uint64_t v16 = sub_2225DB308(v14, "c_thread_local", (uint64_t)&v44);
  BOOL v43 = (*v6 & 0x40) != 0;
  uint64_t v17 = sub_2225D93C4(v16, (uint64_t)"cxx_atomic", (uint64_t)&v43);
  BOOL v42 = (*v6 & 0x40) != 0;
  uint64_t v18 = sub_2225F28E8(v17, "cxx_deleted_functions", (uint64_t)&v42);
  BOOL v41 = (*v6 & 0x40) != 0;
  uint64_t v19 = sub_2225F2960(v18, "cxx_explicit_conversions", (uint64_t)&v41);
  BOOL v40 = (*v6 & 0x40) != 0;
  uint64_t v20 = sub_2225F28E8(v19, "cxx_inline_namespaces", (uint64_t)&v40);
  BOOL v39 = (*v6 & 0x40) != 0;
  uint64_t v21 = sub_2225F2AD4(v20, (uint64_t)"cxx_local_type_template_args", (uint64_t)&v39);
  BOOL v38 = (*v6 & 0x40) != 0;
  uint64_t v22 = sub_2225F2530(v21, (uint64_t)"cxx_nonstatic_member_init", (uint64_t)&v38);
  BOOL v37 = (*v6 & 0x40) != 0;
  uint64_t v23 = sub_2225F262C(v22, (uint64_t)"cxx_override_control", (uint64_t)&v37);
  BOOL v36 = (*v6 & 0x40) != 0;
  uint64_t v24 = sub_2225F2718(v23, "cxx_range_for", (uint64_t)&v36);
  BOOL v35 = (*v6 & 0x40) != 0;
  uint64_t v25 = sub_2226459B0(v24, "cxx_reference_qualified_functions", (uint64_t)&v35);
  BOOL v34 = (*v6 & 0x40) != 0;
  uint64_t v26 = sub_2225F28E8(v25, "cxx_rvalue_references", (uint64_t)&v34);
  char v33 = 1;
  uint64_t v27 = sub_2225F29D8(v26, "cxx_binary_literals", (uint64_t)&v33);
  BOOL v32 = (*(_DWORD *)v6 & 0x80) != 0;
  uint64_t v28 = sub_2225F278C(v27, (uint64_t)"cxx_init_captures", (uint64_t)&v32);
  BOOL v31 = (*v6 & 0x40) != 0;
  uint64_t v29 = sub_2225F2870(v28, "cxx_variable_templates", (uint64_t)&v31);
  unsigned __int8 v30 = 0;
  return sub_2225F2DA4(v29, &v30);
}

uint64_t sub_222643F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222608330(a1);
  uint64_t v285 = sub_2225F2418(a2);
  uint64_t v286 = v5;
  sub_2225C3D00((int)v284, "__");
  if (sub_2225D0520((uint64_t)&v285, v284[0], (size_t)v284[1]))
  {
    sub_2225C3D00((int)v283, "__");
    if (sub_2225F2464(&v285, v283[0], (size_t)v283[1]) && (unint64_t)sub_2225C3D04((uint64_t)&v285) >= 4)
    {
      uint64_t v6 = sub_2225C3D04((uint64_t)&v285);
      uint64_t v285 = sub_2225CE76C(&v285, 2uLL, v6 - 4);
      uint64_t v286 = v7;
    }
  }
  uint64_t v8 = sub_2225D934C(v282, v285, v286);
  char v281 = *(unsigned char *)(v4 + 60) & 1;
  uint64_t v9 = sub_2225F278C((uint64_t)v8, (uint64_t)"address_sanitizer", (uint64_t)&v281);
  BOOL v280 = (*(void *)v4 & 0x800400) != 0;
  uint64_t v10 = sub_2225DB308(v9, "assume_nonnull", (uint64_t)&v280);
  char v279 = 1;
  uint64_t v11 = sub_2225F2BC4(v10, "attribute_analyzer_noreturn", (uint64_t)&v279);
  char v278 = 1;
  uint64_t v12 = sub_2225F2870(v11, "attribute_availability", (uint64_t)&v278);
  char v277 = 1;
  uint64_t v13 = sub_2225F2804(v12, "attribute_availability_with_message", (uint64_t)&v277);
  char v276 = 1;
  uint64_t v14 = sub_222645A1C(v13, "attribute_availability_app_extension", (uint64_t)&v276);
  char v275 = 1;
  uint64_t v15 = sub_2225F2BC4(v14, "attribute_availability_tvos", (uint64_t)&v275);
  char v274 = 1;
  uint64_t v16 = sub_2226459B0(v15, "attribute_cf_returns_not_retained", (uint64_t)&v274);
  char v273 = 1;
  uint64_t v17 = sub_2225F2D20(v16, "attribute_cf_returns_retained", (uint64_t)&v273);
  char v272 = 1;
  uint64_t v18 = sub_2226459B0(v17, "attribute_deprecated_with_message", (uint64_t)&v272);
  char v271 = 1;
  uint64_t v19 = sub_2225F2530(v18, (uint64_t)"attribute_ext_vector_type", (uint64_t)&v271);
  char v270 = 1;
  uint64_t v20 = sub_2226459B0(v19, "attribute_ns_returns_not_retained", (uint64_t)&v270);
  char v269 = 1;
  uint64_t v21 = sub_2225F2D20(v20, "attribute_ns_returns_retained", (uint64_t)&v269);
  char v268 = 1;
  uint64_t v22 = sub_2225F2A50(v21, (uint64_t)"attribute_ns_consumes_self", (uint64_t)&v268);
  char v267 = 1;
  uint64_t v23 = sub_2225F28E8(v22, "attribute_ns_consumed", (uint64_t)&v267);
  char v266 = 1;
  uint64_t v24 = sub_2225F28E8(v23, "attribute_cf_consumed", (uint64_t)&v266);
  char v265 = 1;
  uint64_t v25 = sub_2225F2A50(v24, (uint64_t)"attribute_objc_ivar_unused", (uint64_t)&v265);
  char v264 = 1;
  uint64_t v26 = sub_2225F2AD4(v25, (uint64_t)"attribute_objc_method_family", (uint64_t)&v264);
  char v263 = 1;
  uint64_t v27 = sub_2225F2870(v26, "attribute_overloadable", (uint64_t)&v263);
  char v262 = 1;
  uint64_t v28 = sub_2225F2CB4(v27, "attribute_unavailable_with_message", (uint64_t)&v262);
  char v261 = 1;
  uint64_t v29 = sub_2225F2A50(v28, (uint64_t)"attribute_unused_on_fields", (uint64_t)&v261);
  char v260 = *(unsigned char *)(v4 + 6) & 1;
  uint64_t v30 = sub_2225D9588(v29, (uint64_t)"blocks", (uint64_t)&v260);
  char v259 = 1;
  uint64_t v31 = sub_2225F2A50(v30, (uint64_t)"c_thread_safety_attributes", (uint64_t)&v259);
  BOOL v258 = (*(void *)v4 & 0x2000000000) != 0;
  uint64_t v32 = sub_2225DB308(v31, "cxx_exceptions", (uint64_t)&v258);
  char v257 = *(unsigned char *)(v4 + 5) & 1;
  uint64_t v33 = sub_2225D95FC(v32, "cxx_rtti", (uint64_t)&v257);
  char v256 = 1;
  uint64_t v34 = sub_2225F28E8(v33, "enumerator_attributes", (uint64_t)&v256);
  BOOL v255 = (*(void *)v4 & 0x800400) != 0;
  uint64_t v35 = sub_2225DAEFC(v34, "nullability", (uint64_t)&v255);
  BOOL v254 = (*(unsigned char *)(v4 + 60) & 2) != 0;
  uint64_t v36 = sub_2225F2B58(v35, "memory_sanitizer", (uint64_t)&v254);
  BOOL v253 = (*(unsigned char *)(v4 + 60) & 4) != 0;
  uint64_t v37 = sub_2225F2B58(v36, "thread_sanitizer", (uint64_t)&v253);
  BOOL v252 = (*(_DWORD *)(v4 + 60) & 0x400000) != 0;
  uint64_t v38 = sub_2225F24B8(v37, (uint64_t)"dataflow_sanitizer", (uint64_t)&v252);
  BOOL v251 = (*(void *)(v4 + 20) & 0x20000000000000) != 0;
  uint64_t v39 = sub_2225D95FC(v38, "objc_arr", (uint64_t)&v251);
  BOOL v250 = (*(void *)(v4 + 20) & 0x20000000000000) != 0;
  uint64_t v40 = sub_2225D95FC(v39, "objc_arc", (uint64_t)&v250);
  BOOL v249 = (*(void *)(v4 + 20) & 0x40000000000000) != 0;
  uint64_t v41 = sub_2225F2718(v40, "objc_arc_weak", (uint64_t)&v249);
  BOOL v248 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v42 = sub_2225F2CB4(v41, "objc_default_synthesize_properties", (uint64_t)&v248);
  BOOL v247 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v43 = sub_2225F26A4(v42, "objc_fixed_enum", (uint64_t)&v247);
  BOOL v246 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v44 = sub_2225F278C(v43, (uint64_t)"objc_instancetype", (uint64_t)&v246);
  BOOL v245 = (~*(void *)v4 & 0x10000000000800) == 0;
  uint64_t v45 = sub_2225DB294(v44, (uint64_t)"objc_modules", (uint64_t)&v245);
  char v244 = sub_222645A88((unsigned int *)(v4 + 68));
  uint64_t v46 = sub_2225F29D8(v45, "objc_nonfragile_abi", (uint64_t)&v244);
  char v243 = 1;
  uint64_t v47 = sub_2225F2D20(v46, "objc_property_explicit_atomic", (uint64_t)&v243);
  char v242 = 1;
  uint64_t v48 = sub_222645AAC(v47, "objc_protocol_qualifier_mangling", (uint64_t)&v242);
  BOOL v241 = sub_222645B28((unsigned int *)(v4 + 68));
  uint64_t v49 = sub_2225F26A4(v48, "objc_weak_class", (uint64_t)&v241);
  char v240 = 1;
  uint64_t v50 = sub_2225F26A4(v49, "ownership_holds", (uint64_t)&v240);
  char v239 = 1;
  uint64_t v51 = sub_2225F278C(v50, (uint64_t)"ownership_returns", (uint64_t)&v239);
  char v238 = 1;
  uint64_t v52 = sub_2225F26A4(v51, "ownership_takes", (uint64_t)&v238);
  char v237 = 1;
  uint64_t v53 = sub_2225DB220(v52, (uint64_t)"objc_BOOL", (uint64_t)&v237);
  char v236 = sub_222645A88((unsigned int *)(v4 + 68));
  uint64_t v54 = sub_2225F278C(v53, (uint64_t)"objc_subscripting", (uint64_t)&v236);
  BOOL v235 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v55 = sub_2225F29D8(v54, "objc_array_literals", (uint64_t)&v235);
  BOOL v234 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v56 = sub_2225F2960(v55, "objc_dictionary_literals", (uint64_t)&v234);
  BOOL v233 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v57 = sub_2225F2870(v56, "objc_boxed_expressions", (uint64_t)&v233);
  char v232 = 1;
  uint64_t v58 = sub_2225F29D8(v57, "arc_cf_code_audited", (uint64_t)&v232);
  BOOL v231 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v59 = sub_2225DB308(v58, "objc_bridge_id", (uint64_t)&v231);
  BOOL v230 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v60 = sub_2225F2A50(v59, (uint64_t)"objc_bridge_id_on_typedefs", (uint64_t)&v230);
  BOOL v229 = (*(_DWORD *)v4 & 0x800) != 0;
  uint64_t v61 = sub_2225F2718(v60, "objc_generics", (uint64_t)&v229);
  BOOL v228 = (*(unsigned char *)v4 & 2) != 0;
  uint64_t v62 = sub_2225DB220(v61, (uint64_t)"c_alignas", (uint64_t)&v228);
  BOOL v227 = (*(unsigned char *)v4 & 2) != 0;
  uint64_t v63 = sub_2225D95FC(v62, "c_atomic", (uint64_t)&v227);
  BOOL v226 = (*(unsigned char *)v4 & 2) != 0;
  uint64_t v64 = sub_2225F262C(v63, (uint64_t)"c_generic_selections", (uint64_t)&v226);
  BOOL v225 = (*(unsigned char *)v4 & 2) != 0;
  uint64_t v65 = sub_2225F26A4(v64, "c_static_assert", (uint64_t)&v225);
  if ((*(unsigned char *)v4 & 2) != 0)
  {
    uint64_t v67 = sub_2225CDCF4(a1);
    char v66 = sub_222608C58(v67);
  }
  else
  {
    char v66 = 0;
  }
  char v224 = v66;
  uint64_t v68 = sub_2225DB308(v65, "c_thread_local", (uint64_t)&v224);
  BOOL v223 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v69 = sub_2225F2530(v68, (uint64_t)"cxx_access_control_sfinae", (uint64_t)&v223);
  BOOL v222 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v70 = sub_2225F29D8(v69, "cxx_alias_templates", (uint64_t)&v222);
  BOOL v221 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v71 = sub_2225DAEFC(v70, "cxx_alignas", (uint64_t)&v221);
  BOOL v220 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v72 = sub_2225D93C4(v71, (uint64_t)"cxx_atomic", (uint64_t)&v220);
  BOOL v219 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v73 = sub_2225DB308(v72, "cxx_attributes", (uint64_t)&v219);
  BOOL v218 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v74 = sub_2225F2718(v73, "cxx_auto_type", (uint64_t)&v218);
  BOOL v217 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v75 = sub_2225F2718(v74, "cxx_constexpr", (uint64_t)&v217);
  BOOL v216 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v76 = sub_2225DB294(v75, (uint64_t)"cxx_decltype", (uint64_t)&v216);
  BOOL v215 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v77 = sub_222645A1C(v76, "cxx_decltype_incomplete_return_types", (uint64_t)&v215);
  BOOL v214 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v78 = sub_2225F2CB4(v77, "cxx_default_function_template_args", (uint64_t)&v214);
  BOOL v213 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v79 = sub_2225F25B4(v78, "cxx_defaulted_functions", (uint64_t)&v213);
  BOOL v212 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v80 = sub_2225F2BC4(v79, "cxx_delegating_constructors", (uint64_t)&v212);
  BOOL v211 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v81 = sub_2225F28E8(v80, "cxx_deleted_functions", (uint64_t)&v211);
  BOOL v210 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v82 = sub_2225F2960(v81, "cxx_explicit_conversions", (uint64_t)&v210);
  BOOL v209 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v83 = sub_2225F2AD4(v82, (uint64_t)"cxx_generalized_initializers", (uint64_t)&v209);
  BOOL v208 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v84 = sub_2225F24B8(v83, (uint64_t)"cxx_implicit_moves", (uint64_t)&v208);
  BOOL v207 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v85 = sub_2225F2BC4(v84, "cxx_inheriting_constructors", (uint64_t)&v207);
  BOOL v206 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v86 = sub_2225F28E8(v85, "cxx_inline_namespaces", (uint64_t)&v206);
  BOOL v205 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v87 = sub_2225DAEFC(v86, "cxx_lambdas", (uint64_t)&v205);
  BOOL v204 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v88 = sub_2225F2AD4(v87, (uint64_t)"cxx_local_type_template_args", (uint64_t)&v204);
  BOOL v203 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v89 = sub_2225F2530(v88, (uint64_t)"cxx_nonstatic_member_init", (uint64_t)&v203);
  BOOL v202 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v90 = sub_2225DB294(v89, (uint64_t)"cxx_noexcept", (uint64_t)&v202);
  BOOL v201 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v91 = sub_2225DAEFC(v90, "cxx_nullptr", (uint64_t)&v201);
  BOOL v200 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v92 = sub_2225F262C(v91, (uint64_t)"cxx_override_control", (uint64_t)&v200);
  BOOL v199 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v93 = sub_2225F2718(v92, "cxx_range_for", (uint64_t)&v199);
  BOOL v198 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v94 = sub_2225F25B4(v93, "cxx_raw_string_literals", (uint64_t)&v198);
  BOOL v197 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v95 = sub_2226459B0(v94, "cxx_reference_qualified_functions", (uint64_t)&v197);
  BOOL v196 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v96 = sub_2225F28E8(v95, "cxx_rvalue_references", (uint64_t)&v196);
  BOOL v195 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v97 = sub_2225F2B58(v96, "cxx_strong_enums", (uint64_t)&v195);
  BOOL v194 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v98 = sub_2225F278C(v97, (uint64_t)"cxx_static_assert", (uint64_t)&v194);
  if ((*(unsigned char *)v4 & 0x80) != 0 && (uint64_t v99 = sub_2225CDCF4(a1), sub_222608C58(v99)))
  {
    uint64_t v100 = sub_2225CDCF4(a1);
    uint64_t v101 = sub_222643C2C(v100);
    BOOL v102 = !sub_2225DB7B8(v101);
  }
  else
  {
    BOOL v102 = 0;
  }
  BOOL v193 = v102;
  uint64_t v103 = sub_2225F2B58(v98, "cxx_thread_local", (uint64_t)&v193);
  BOOL v192 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v104 = sub_2225F29D8(v103, "cxx_trailing_return", (uint64_t)&v192);
  BOOL v191 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v105 = sub_2225F262C(v104, (uint64_t)"cxx_unicode_literals", (uint64_t)&v191);
  BOOL v190 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v106 = sub_2225F25B4(v105, "cxx_unrestricted_unions", (uint64_t)&v190);
  BOOL v189 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v107 = sub_2225F278C(v106, (uint64_t)"cxx_user_literals", (uint64_t)&v189);
  BOOL v188 = (*(_DWORD *)v4 & 0x80) != 0;
  uint64_t v108 = sub_2225F2870(v107, "cxx_variadic_templates", (uint64_t)&v188);
  char v187 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v109 = sub_2225F29D8(v108, "cxx_aggregate_nsdmi", (uint64_t)&v187);
  char v186 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v110 = sub_2225F29D8(v109, "cxx_binary_literals", (uint64_t)&v186);
  char v185 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v111 = sub_2225F2A50(v110, (uint64_t)"cxx_contextual_conversions", (uint64_t)&v185);
  char v184 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v112 = sub_2225F278C(v111, (uint64_t)"cxx_decltype_auto", (uint64_t)&v184);
  char v183 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v113 = sub_2225F29D8(v112, "cxx_generic_lambdas", (uint64_t)&v183);
  char v182 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v114 = sub_2225F278C(v113, (uint64_t)"cxx_init_captures", (uint64_t)&v182);
  char v181 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v115 = sub_2225F28E8(v114, "cxx_relaxed_constexpr", (uint64_t)&v181);
  char v180 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v116 = sub_2225F2530(v115, (uint64_t)"cxx_return_type_deduction", (uint64_t)&v180);
  char v179 = *(unsigned char *)(v4 + 1) & 1;
  uint64_t v117 = sub_2225F2870(v116, "cxx_variable_templates", (uint64_t)&v179);
  BOOL v178 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v118 = sub_2225F24B8(v117, (uint64_t)"has_nothrow_assign", (uint64_t)&v178);
  BOOL v177 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v119 = sub_2225F2B58(v118, "has_nothrow_copy", (uint64_t)&v177);
  BOOL v176 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v120 = sub_2225F25B4(v119, "has_nothrow_constructor", (uint64_t)&v176);
  BOOL v175 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v121 = sub_2225F24B8(v120, (uint64_t)"has_trivial_assign", (uint64_t)&v175);
  BOOL v174 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v122 = sub_2225F2B58(v121, "has_trivial_copy", (uint64_t)&v174);
  BOOL v173 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v123 = sub_2225F25B4(v122, "has_trivial_constructor", (uint64_t)&v173);
  BOOL v172 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v124 = sub_2225F2870(v123, "has_trivial_destructor", (uint64_t)&v172);
  BOOL v171 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v125 = sub_2225F2870(v124, "has_virtual_destructor", (uint64_t)&v171);
  BOOL v170 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v126 = sub_2225DAEFC(v125, "is_abstract", (uint64_t)&v170);
  BOOL v169 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v127 = sub_2225D93C4(v126, (uint64_t)"is_base_of", (uint64_t)&v169);
  BOOL v168 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v128 = sub_2225D95FC(v127, "is_class", (uint64_t)&v168);
  BOOL v167 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v129 = sub_2225F2B58(v128, "is_constructible", (uint64_t)&v167);
  BOOL v166 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v130 = sub_2225F278C(v129, (uint64_t)"is_convertible_to", (uint64_t)&v166);
  BOOL v165 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v131 = sub_2225D95FC(v130, "is_empty", (uint64_t)&v165);
  BOOL v164 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v132 = sub_2225D9350(v131, "is_enum", (uint64_t)&v164);
  BOOL v163 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v133 = sub_2225D95FC(v132, "is_final", (uint64_t)&v163);
  BOOL v162 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v134 = sub_2225D93C4(v133, (uint64_t)"is_literal", (uint64_t)&v162);
  BOOL v161 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v135 = sub_2225F24B8(v134, (uint64_t)"is_standard_layout", (uint64_t)&v161);
  BOOL v160 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v136 = sub_2225D9588(v135, (uint64_t)"is_pod", (uint64_t)&v160);
  BOOL v159 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v137 = sub_2225DB308(v136, "is_polymorphic", (uint64_t)&v159);
  BOOL v158 = (*(unsigned char *)v4 & 8) != 0;
  uint64_t v138 = sub_2225DB220(v137, (uint64_t)"is_sealed", (uint64_t)&v158);
  BOOL v157 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v139 = sub_2225D93C4(v138, (uint64_t)"is_trivial", (uint64_t)&v157);
  BOOL v156 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v140 = sub_2225F25B4(v139, "is_trivially_assignable", (uint64_t)&v156);
  BOOL v155 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v141 = sub_2225F2A50(v140, (uint64_t)"is_trivially_constructible", (uint64_t)&v155);
  BOOL v154 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v142 = sub_2225F28E8(v141, "is_trivially_copyable", (uint64_t)&v154);
  BOOL v153 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v143 = sub_2225D95FC(v142, "is_union", (uint64_t)&v153);
  BOOL v152 = (*(void *)v4 & 0x10000000000000) != 0;
  uint64_t v144 = sub_2225D9350(v143, "modules", (uint64_t)&v152);
  uint64_t v145 = sub_2225CDCF4(a1);
  char v151 = sub_222608C58(v145);
  uint64_t v146 = sub_2225D94AC(v144, (unsigned __int16 *)"tls", (uint64_t)&v151);
  BOOL v150 = (*(unsigned char *)v4 & 0x40) != 0;
  uint64_t v147 = sub_2225F26A4(v146, "underlying_type", (uint64_t)&v150);
  unsigned __int8 v149 = 0;
  return sub_2225F2DA4(v147, &v149);
}

BOOL sub_222644E28(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  return sub_222645B48(a1, a2, a3, 0);
}

BOOL sub_222644E30(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222645EA4(a3);
  if (sub_22263F0AC(a3, v7))
  {
    sub_2226265A0(a3, a1, 842, (uint64_t)v12);
    uint64_t v8 = v12;
LABEL_6:
    sub_2225F37F0(v8);
    uint64_t v9 = 0;
    return sub_222645B48(a1, a2, a3, v9);
  }
  if (!v6)
  {
    sub_2226265A0(a3, a1, 841, (uint64_t)v11);
    uint64_t v8 = v11;
    goto LABEL_6;
  }
  uint64_t v9 = v6 + 16;
  return sub_222645B48(a1, a2, a3, v9);
}

uint64_t sub_222644EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  j_j_nullsub_1(&v9);
  return MEMORY[0x223C9B260](a4, a1, a2, a3, &v9);
}

BOOL sub_222644F38(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  sub_22263CACC(a3, (uint64_t)a1);
  if (sub_22261CB34((uint64_t)a1, 21))
  {
    unsigned int v6 = sub_2225C3B40(a1);
    sub_22261CABC(a3, v6, 712, (uint64_t)v22);
    uint64_t v7 = sub_222635F48(v22, a2);
LABEL_7:
    sub_222635F18(v7, 0x15u);
    uint64_t v10 = v22;
    goto LABEL_8;
  }
  unsigned int v8 = sub_2225C3B40(a1);
  sub_22263CACC(a3, (uint64_t)a1);
  if (sub_22261CB34((uint64_t)a1, 6))
  {
    unsigned int v9 = sub_2225C3B40(a1);
    sub_22261CABC(a3, v9, 630, (uint64_t)v21);
    uint64_t v10 = (uint64_t *)v21;
LABEL_8:
    sub_2225F37F0(v10);
    return 0;
  }
  uint64_t v11 = sub_22261AF2C((uint64_t)a1);
  uint64_t v12 = sub_2225F2418(v11);
  uint64_t v14 = v13;
  uint64_t v15 = sub_222608330(a3);
  sub_2225CCBF8(v20, v15 + 136);
  BOOL v16 = sub_2225CD4BC(v12, v14, v20[0], (size_t)v20[1]);
  sub_22263CACC(a3, (uint64_t)a1);
  if (sub_22261CB34((uint64_t)a1, 22))
  {
    unsigned int v17 = sub_2225C3B40(a1);
    sub_22261CABC(a3, v17, 712, (uint64_t)v22);
    uint64_t v18 = sub_222635F48(v22, a2);
    sub_222635F18(v18, 0x16u);
    sub_2225F37F0(v22);
    sub_22261CABC(a3, v8, 50, (uint64_t)v22);
    uint64_t v7 = v22;
    goto LABEL_7;
  }
  return v16;
}

uint64_t sub_2226450CC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  return sub_22261C1E8(a2, a3, *(_DWORD **)(a1 + 48), *(void *)(a1 + 24));
}

BOOL sub_2226450E4(uint64_t a1)
{
  int v1 = sub_22261BFB4(a1);

  return sub_222645EAC(v1);
}

uint64_t sub_22264510C(uint64_t result, int a2)
{
  if (a2) {
    __int16 v2 = 128;
  }
  else {
    __int16 v2 = 0;
  }
  *(_WORD *)(result + 244) = *(_WORD *)(result + 244) & 0xFF7F | v2;
  return result;
}

uint64_t sub_22264512C(uint64_t result, int a2)
{
  if (a2) {
    __int16 v2 = 16;
  }
  else {
    __int16 v2 = 0;
  }
  *(_WORD *)(result + 244) = *(_WORD *)(result + 244) & 0xFFEF | v2;
  return result;
}

__n128 sub_22264514C(__n128 *a1, __n128 *a2, unint64_t a3, unint64_t a4)
{
  __n128 result = *a2;
  unint64_t v5 = a2[1].n128_u64[0];
  *a1 = *a2;
  a1[1].n128_u64[0] = v5;
  a1[1].n128_u64[1] = a3;
  a1[2].n128_u64[0] = a4;
  return result;
}

uint64_t sub_222645164(uint64_t a1)
{
  return *(void *)(a1 + 88);
}

BOOL sub_22264516C(uint64_t a1)
{
  sub_22264546C(v8);
  uint64_t v2 = sub_2225C3C70(a1);
  uint64_t v3 = sub_2225C3D04(a1);
  if (v2 != v3)
  {
    uint64_t v4 = v3;
    while (!sub_22261BABC(v2, 21))
    {
      if (sub_22261BABC(v2, 22))
      {
        if (sub_2225CF1D0(v8) || !*(_DWORD *)sub_2225E254C((uint64_t)v8)) {
          goto LABEL_18;
        }
LABEL_15:
        sub_2225E2568((uint64_t)v8);
        goto LABEL_16;
      }
      if (sub_22261BABC(v2, 23))
      {
        int v7 = 0;
        goto LABEL_11;
      }
      if (sub_22261BABC(v2, 24))
      {
        if (sub_2225CF1D0(v8) || *(_DWORD *)sub_2225E254C((uint64_t)v8) == 1)
        {
LABEL_18:
          BOOL v5 = 0;
          goto LABEL_19;
        }
        goto LABEL_15;
      }
LABEL_16:
      v2 += 24;
      if (v2 == v4) {
        goto LABEL_17;
      }
    }
    int v7 = 1;
LABEL_11:
    sub_2225CC08C((uint64_t)v8, &v7);
    goto LABEL_16;
  }
LABEL_17:
  BOOL v5 = sub_2225CF1D0(v8);
LABEL_19:
  sub_2225C56C4(v8);
  return v5;
}

uint64_t sub_222645298(const void **a1, uint64_t a2, uint64_t a3, long long *a4)
{
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a2 - sub_2225C3C70((uint64_t)a1)) >> 3);
  if (sub_2225C3D04((uint64_t)a1) == a2)
  {
    sub_22264375C(a1, (long long *)a3, a4);
    return sub_2225C3C70((uint64_t)a1) + 24 * v8;
  }
  else
  {
    unint64_t v9 = sub_222645478(a3, (uint64_t)a4);
    int v10 = sub_222609DE8((uint64_t)a1);
    sub_22264547C(a1, v10 + v9);
    uint64_t v11 = (unsigned char *)(sub_2225C3C70((uint64_t)a1) + 24 * v8);
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((sub_2225C3D04((uint64_t)a1) - (uint64_t)v11) >> 3);
    uint64_t v13 = (unsigned char *)sub_2225C3D04((uint64_t)a1);
    uint64_t v14 = sub_2225C3D04((uint64_t)a1);
    if (v12 >= v9)
    {
      sub_2225C64B8(&v22, v14 - 24 * v9);
      uint64_t v19 = sub_2225C3D04((uint64_t)a1);
      sub_2225C64B8(&v21, v19);
      sub_2226454D0(a1, v22, v21);
      sub_222645598();
      sub_222625C6C();
    }
    else
    {
      sub_2225C5B6C((uint64_t)a1, v14 + 24 * v9);
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((v13 - v11) >> 3);
      uint64_t v16 = sub_2225C3D04((uint64_t)a1);
      sub_2225E2BB8(v11, (int)v13, (void *)(v16 - 8 * ((v13 - v11) >> 3)));
      if (v13 != v11)
      {
        unsigned int v17 = v11;
        do
        {
          long long v18 = *(_OWORD *)a3;
          *(_DWORD *)(v17 + 15) = *(_DWORD *)(a3 + 15);
          *(_OWORD *)unsigned int v17 = v18;
          v17 += 24;
          a3 += 24;
          --v15;
        }
        while (v15);
      }
      sub_2225D0844((void *)a3, (uint64_t)a4, v13);
    }
  }
  return (uint64_t)v11;
}

uint64_t sub_222645470(uint64_t a1)
{
  return sub_2225CC380(a1, 8u);
}

char *sub_22264547C(const void **a1, unsigned int a2)
{
  __n128 result = (char *)sub_222619804((uint64_t)a1);
  if ((unint64_t)result < a2)
  {
    return sub_2226119B0(a1, a2);
  }
  return result;
}

uint64_t sub_2226454D0(const void **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2225F69A0(a2, a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > 0xAAAAAAAAAAAAAAABLL * ((v7 - sub_2225C3D04((uint64_t)a1)) >> 3))
  {
    unint64_t v8 = sub_222609DE8((uint64_t)a1);
    sub_2226119B0(a1, v8 + v6);
  }
  unint64_t v9 = (_OWORD *)sub_2225C3D04((uint64_t)a1);
  sub_222645650(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + 24 * v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_22264559C(long long *a1, long long *a2, _OWORD *a3)
{
  sub_2226455B8(a1, a2, a3);
  return v3;
}

uint64_t sub_2226455B8(long long *a1, long long *a2, _OWORD *a3)
{
  unint64_t v9 = a3;
  uint64_t v10 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      BOOL v5 = v9;
      uint64_t v6 = *((void *)v4 + 2);
      long long v7 = *v4;
      uint64_t v4 = (long long *)((char *)v4 + 24);
      *unint64_t v9 = v7;
      *((void *)v5 + 2) = v6;
      unint64_t v9 = (_OWORD *)((char *)v5 + 24);
      uint64_t v10 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v11, &v10, &v9);
  return v11;
}

unint64_t sub_222645638(uint64_t a1, uint64_t a2)
{
  return 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
}

uint64_t sub_222645650(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  sub_22264566C(a1, a2, a3);
  return v3;
}

uint64_t sub_22264566C(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v8 = a2;
  uint64_t v9 = a1;
  for (uint64_t i = a3; sub_2225E2C70((uint64_t)&v9, (uint64_t)&v8); uint64_t i = (_OWORD *)((char *)i + 24))
  {
    if (sub_2225C5C08()) {
      break;
    }
    uint64_t v3 = i;
    uint64_t v4 = sub_2225C3C70((uint64_t)&v9);
    uint64_t v5 = *(void *)(v4 + 16);
    *uint64_t i = *(_OWORD *)v4;
    *((void *)v3 + 2) = v5;
    sub_2225F3950(&v9);
  }
  sub_2225C5C10(&v10, &v9, &i);
  return v10;
}

uint64_t sub_22264570C()
{
  sub_222645728();
  return v0;
}

uint64_t sub_222645730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = j_j_nullsub_1(a3);
  uint64_t v9 = sub_2226457C0((uint64_t)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2226457C0(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2226457D0(a2, a3, a4);
}

uint64_t sub_2226457D0(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a3 - 8 * ((a2 - (uint64_t)a1) >> 3));
  uint64_t v5 = a2;
  sub_222626B20(v4, a1, 0xAAAAAAAAAAAAAAABLL * ((a2 - (uint64_t)a1) >> 3));
  return sub_2225C5EEC((uint64_t)&v5, (uint64_t)&v4);
}

uint64_t sub_22264582C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_22264585C(a5, a1, a2, a3, a4);
}

uint64_t sub_222645844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_222645904(a5, a1, a2, a3, a4);
}

void *sub_222645860(void *a1, uint64_t a2, void *a3, _DWORD *a4, _DWORD *a5)
{
  __n128 result = sub_2225E7978(a1, a2);
  *__n128 result = &unk_26D4DC358;
  result[2] = *a3;
  *((_DWORD *)result + 6) = *a4;
  *((_DWORD *)result + 7) = *a5;
  return result;
}

uint64_t sub_2226458C8(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, *(const char **)(a1 + 8), *(void *)(a1 + 16), *(unsigned int *)(a1 + 24), *(unsigned int *)(a1 + 28));
}

void *sub_222645908(void *a1, uint64_t a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  __n128 result = sub_2225E7978(a1, a2);
  *__n128 result = &unk_26D4DC388;
  *((_DWORD *)result + 4) = *a3;
  *((_DWORD *)result + 5) = *a4;
  *((_DWORD *)result + 6) = *a5;
  return result;
}

uint64_t sub_222645970(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, *(const char **)(a1 + 8), *(unsigned int *)(a1 + 16), *(unsigned int *)(a1 + 20), *(unsigned int *)(a1 + 24));
}

uint64_t sub_2226459B0(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 33)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x21uLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_222645A1C(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 36)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x24uLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_222645A88(unsigned int *a1)
{
  return (0x35u >> sub_2225C3B40(a1)) & 1;
}

uint64_t sub_222645AAC(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 32)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && a2[2] == v6[2] && a2[3] == v6[3]) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

BOOL sub_222645B28(unsigned int *a1)
{
  return sub_2225C3B40(a1) != 1;
}

BOOL sub_222645B48(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v8 = sub_2225C3B40(a1);
  if (sub_222645E94(a3))
  {
    sub_22263CACC(a3, (uint64_t)a1);
    if (!sub_22261CB34((uint64_t)a1, 21))
    {
      unsigned int v9 = sub_2225C3B40(a1);
      if (sub_222645E9C(a3))
      {
        uint64_t v14 = sub_222645E9C(a3);
        sub_22264AA28(v14, a1);
      }
      else
      {
        sub_222649758(a3, a1);
      }
LABEL_12:
      sub_2225CF794(v31);
      sub_2225CCC70(&v29);
      sub_2225F3278(&v28);
      int v15 = sub_22261BFB4((uint64_t)a1);
      if (v15 > 14)
      {
        if (v15 != 46)
        {
          if (v15 != 15) {
            goto LABEL_15;
          }
LABEL_18:
          LOBYTE(v26[0]) = 0;
          BOOL v13 = 0;
          uint64_t v29 = sub_222648D5C(a3, a1, v31, v26);
          uint64_t v30 = v18;
          if (LOBYTE(v26[0]))
          {
LABEL_27:
            sub_2225CA520(v31);
            return v13;
          }
          goto LABEL_23;
        }
        LOBYTE(v26[0]) = 60;
        sub_2225C52D8((uint64_t)v31, v26);
        if (!sub_22263AF68(a3, v31, &v28))
        {
          uint64_t v29 = sub_2225CA4D0((uint64_t)v31);
          uint64_t v30 = v19;
LABEL_23:
          unsigned int v20 = sub_2225C3B40(a1);
          sub_22263CACC(a3, (uint64_t)a1);
          if (!sub_22261CB34((uint64_t)a1, 22))
          {
            unsigned int v24 = sub_2225C3B40(a1);
            int v25 = sub_22263AE30(a3, v24, &v29);
            if (!sub_2225CF1E0((uint64_t)&v29))
            {
              v26[0] = 0;
              BOOL v13 = sub_222636D20(a3, v20, v29, v30, v25, a4, v26, 0, 0, 0, 0) != 0;
              goto LABEL_27;
            }
            goto LABEL_26;
          }
          unsigned int v21 = sub_2226450CC(a3, v20, 0);
          sub_22261CABC(a3, v21, 712, (uint64_t)v26);
          uint64_t v22 = sub_222635F48(v26, a2);
          sub_222635F18(v22, 0x16u);
          sub_2225F37F0(v26);
          sub_22261CABC(a3, v9, 50, (uint64_t)v26);
          sub_222635F18(v26, 0x15u);
          unsigned int v17 = v26;
          goto LABEL_25;
        }
        sub_22261F2AC((uint64_t)a1, 2);
      }
      else if (v15 != 2)
      {
        if (v15 != 13)
        {
LABEL_15:
          unsigned int v16 = sub_2225C3B40(a1);
          sub_22261CABC(a3, v16, 718, (uint64_t)v27);
          unsigned int v17 = (uint64_t *)v27;
LABEL_25:
          sub_2225F37F0(v17);
          goto LABEL_26;
        }
        goto LABEL_18;
      }
LABEL_26:
      BOOL v13 = 0;
      goto LABEL_27;
    }
    unsigned int v9 = sub_2226450CC(a3, v8, 0);
    sub_22261CABC(a3, v9, 712, (uint64_t)v31);
    uint64_t v10 = sub_222635F48((uint64_t *)v31, a2);
    sub_222635F18(v10, 0x15u);
    sub_2225F37F0(v31);
    if (sub_22261BABC((uint64_t)a1, 15) || sub_22261BABC((uint64_t)a1, 13) || sub_22261BABC((uint64_t)a1, 46)) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_22261CABC(a3, v8, 702, (uint64_t)v31);
    uint64_t v11 = sub_2225F2418(a2);
    sub_2225F3774((uint64_t *)v31, v11, v12);
    sub_2225F37F0(v31);
  }
  return 0;
}

uint64_t sub_222645E94(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 438);
}

uint64_t sub_222645E9C(uint64_t a1)
{
  return *(void *)(a1 + 808);
}

uint64_t sub_222645EA4(uint64_t a1)
{
  return *(void *)(a1 + 816);
}

BOOL sub_222645EAC(int a1)
{
  return (a1 - 495) < 0x1F;
}

uint64_t sub_222645EBC(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    uint64_t v9 = sub_222646034();
    uint64_t v10 = sub_2225F9A1C();
    int v11 = v8 - 1;
    unsigned int v12 = sub_2225FB0F4(a2) & (v8 - 1);
    BOOL v13 = (uint64_t *)(v6 + 16 * v12);
    if (sub_2225D085C(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_2225D085C(*v13, v9))
      {
        if (sub_2225D085C(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        BOOL v13 = (uint64_t *)(v6 + 16 * v12);
        ++v15;
        if (sub_2225D085C(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        BOOL v13 = v14;
      }
    }
  }
  else
  {
    BOOL v13 = 0;
  }
LABEL_13:
  *a3 = v13;
  return result;
}

uint64_t sub_222645FE4(uint64_t a1)
{
  uint64_t v2 = sub_222608BD4(a1);
  uint64_t v3 = sub_222608BD4(a1);
  sub_222645FE0(&v5, v2, v3, 1);
  return v5;
}

uint64_t sub_222646038(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_22264606C((uint64_t **)a1);
  }
  return a1;
}

uint64_t sub_22264606C(uint64_t **a1)
{
  uint64_t v2 = sub_2225D3294();
  uint64_t result = sub_2225F9A58();
  uint64_t v4 = *a1;
  if (*a1 != a1[1])
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D085C(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      uint64_t v4 = *a1 + 2;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

uint64_t *sub_2226460E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (sub_222646144(a1, a2, &v6)) {
    return v6;
  }
  uint64_t v5 = 0;
  return sub_222646180(a1, a2, &v5, v6);
}

uint64_t sub_222646144(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_222645EBC(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t *sub_222646180(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t result = sub_2226461BC(a1, a2, a4);
  *uint64_t result = *a2;
  result[1] = *a3;
  return result;
}

uint64_t *sub_2226461BC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2226462A8(a1, (2 * v6));
    sub_222646144(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_2226462A8(a1, v7);
    sub_222646144(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_222646034();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_2226462AC(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = *(uint64_t **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222609018(a1, *v5);
  if (v4)
  {
    sub_2226463A0(a1, v4, &v4[2 * v3]);
    j__free(v4);
  }
  else
  {
    sub_222646338(a1);
  }
}

uint64_t sub_222646338(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  uint64_t v2 = sub_222646034();
  uint64_t v3 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_222608BD4(a1);
  while (v3 != (void *)result)
  {
    *uint64_t v3 = v2;
    v3 += 2;
  }
  return result;
}

uint64_t sub_2226463A0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_222646338(a1);
  uint64_t v6 = sub_222646034();
  uint64_t result = sub_2225F9A1C();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_222646144(a1, a2, &v9);
          *uint64_t v9 = *a2;
          v9[1] = a2[1];
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 2;
    }
    while (a2 != a3);
  }
  return result;
}

char *sub_22264645C(const void **a1, uint64_t a2)
{
  return sub_2225C5B7C(a1, 40 * a2, 40);
}

uint64_t sub_22264646C(uint64_t a1)
{
  return sub_2226109F8(a1, 0x40u);
}

__n128 sub_222646474(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  *(void *)&v4[1] = *(void *)(a1 + 16);
  int v3 = *(_DWORD *)(a2 + 15);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = v3;
  *(__n128 *)a2 = result;
  *(_DWORD *)(a2 + 15) = *(_DWORD *)v4;
  return result;
}

uint64_t *sub_2226464A8(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_222609DE8(a2);
  return a1;
}

uint64_t sub_2226464EC(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, (uint64_t)a2);
  uint64_t v5 = sub_2225D36D8(a1);
  unint64_t v6 = sub_2225D4E1C(a1, v5 + 1);
  uint64_t v7 = sub_2225D36D8(a1);
  sub_2225D4E98(v12, v6, v7, v4);
  uint64_t v9 = (__n128 *)nullsub_1(v13, v8);
  sub_2225D4DF8(v4, v9, a2);
  v13 += 16;
  sub_22264659C(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225D4F8C(v12);
  return v10;
}

uint64_t sub_22264659C(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_22264668C(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  uint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  uint64_t v11 = sub_2225D36D8(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_22264668C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = (__n128 *)sub_222615E78((uint64_t)&v16);
    uint64_t v9 = (__n128 *)sub_2225D35A0((uint64_t)v18);
    sub_2225D4DF8(a1, v8, v9);
    sub_2225D5358((uint64_t)v18);
    sub_2225D5358((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_222646758(uint64_t a1)
{
  return sub_2225CC380(a1, 0xAu);
}

uint64_t sub_222646760(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_22264A9A8(a1, a2, a3);
  *(void *)uint64_t v12 = &unk_26D4DC3B8;
  sub_2225F3278((_DWORD *)(v12 + 120));
  *(void *)(a1 + 128) = a4;
  *(void *)(a1 + 136) = a4;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a5;
  *(void *)(a1 + 160) = a5;
  *(void *)(a1 + 168) = a6;
  sub_22261B6AC(a1 + 176);
  uint64_t v13 = sub_2225E8DD0(a2);
  *(_DWORD *)(a1 + 120) = sub_22260DA24(v13, a3);
  return a1;
}

uint64_t sub_2226467F8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_222646760(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_222646800(uint64_t a1, unsigned int *a2)
{
  char v14 = *(unsigned int **)(a1 + 136);
  unsigned int v4 = sub_2226469BC(&v14, (uint64_t)a2);
  unsigned int v6 = sub_2226469BC(&v14, v5);
  int v8 = sub_2226469BC(&v14, v7);
  *(void *)(a1 + 136) = v14;
  sub_22261FB44((uint64_t)a2);
  sub_22261F2AC((uint64_t)a2, v4);
  sub_22261CCEC((uint64_t)a2, SBYTE1(v4));
  int v9 = sub_22260C644((_DWORD *)(a1 + 120), v8);
  sub_2225D0A60(a2, v9);
  sub_222612BA8((uint64_t)a2, HIWORD(v4));
  if (sub_22261BB18((uint64_t)a2))
  {
    sub_2225C5B6C((uint64_t)a2, *(void *)(*(void *)(a1 + 168) + 200) + v6);
  }
  else if (v6)
  {
    sub_222620400((_WORD *)(a1 + 32));
    uint64_t v10 = (_DWORD *)sub_2226469F0(*(uint64_t **)(a1 + 168), v6 - 1);
    sub_2225C5B6C((uint64_t)a2, (uint64_t)v10);
    __int16 v11 = sub_22263E560(v10);
    sub_22261F2AC((uint64_t)a2, v11);
    if (sub_22261DC54((uint64_t)v10)) {
      return sub_222649488(*(void *)(a1 + 8), a2);
    }
    return 1;
  }
  if (v4 == 65)
  {
    if (sub_22261BFBC((uint64_t)a2))
    {
      *(void *)(a1 + 144) = *(void *)(a1 + 136) - 12;
      sub_22263716C(*(void *)(a1 + 8), (uint64_t)a2);
      return 0;
    }
    goto LABEL_13;
  }
  if (v4 != 2)
  {
    if (v4 == 1)
    {
      long long v13 = *(_OWORD *)a2;
      *(_DWORD *)(a1 + 191) = *(unsigned int *)((char *)a2 + 15);
      *(_OWORD *)(a1 + 176) = v13;
      return sub_222646A08(a1, a2);
    }
LABEL_13:
    sub_222620400((_WORD *)(a1 + 32));
    return 1;
  }
  *(unsigned char *)(a1 + 24) = 0;
  return 1;
}

uint64_t sub_2226469BC(unsigned int **a1, uint64_t a2)
{
  uint64_t result = sub_2225D0E54(*a1, a2);
  ++*a1;
  return result;
}

uint64_t sub_2226469F0(uint64_t *a1, unsigned int a2)
{
  if (*(void *)(a1[19] + 8 * a2)) {
    return *(void *)(a1[19] + 8 * a2);
  }
  else {
    return sub_222646CD0(a1, a2);
  }
}

uint64_t sub_222646A08(uint64_t a1, unsigned int *a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    *(unsigned char *)(a1 + 24) = 0;
    return 1;
  }
  else
  {
    while (!sub_2225CF1D0((void *)(a1 + 64)))
    {
      unsigned int v8 = sub_22261F60C(*(void *)(a1 + 8));
      if (sub_22261FB84(&v8, (unsigned int *)(a1 + 120)))
      {
        uint64_t v5 = *(void *)(a1 + 8);
        unsigned int v6 = (unsigned int *)sub_222608644(a1 + 64);
        sub_22261CABC(v5, *v6, 751, (uint64_t)v7);
        sub_2225F37F0(v7);
      }
      sub_222608660(a1 + 64);
    }
    return sub_22263F918(*(void *)(a1 + 8), a2, 0);
  }
}

__n128 sub_222646AD4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a1 + 176);
  *(_DWORD *)(a2 + 15) = *(_DWORD *)(a1 + 191);
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_222646AE8(uint64_t result)
{
  *(unsigned char *)(result + 24) = 0;
  int v1 = *(unsigned char **)(result + 136);
  do
  {
    uint64_t v2 = v1;
    if (*v1 == 1) {
      break;
    }
    v1 += 12;
  }
  while ((v2[1] & 1) == 0);
  *(void *)(result + 136) = v2;
  return result;
}

BOOL sub_222646B14(void *a1, uint64_t a2)
{
  int v3 = (unsigned int **)(a1 + 20);
  do
  {
    unsigned int v4 = sub_2226469BC(v3, a2);
    unsigned int v6 = sub_2226469BC(v3, v5);
    unsigned int v7 = v6;
    uint64_t v8 = a1[16];
    unint64_t v9 = v8 + v4;
    unint64_t v10 = a1[18];
    if (v9 < v10 && v6 != 0)
    {
      unsigned int v21 = (unsigned int *)(a1[19] + 8 * v6);
      unint64_t v12 = v8 + sub_2226469BC(&v21, a2);
      unint64_t v10 = a1[18];
      if (v12 <= v10)
      {
        unsigned int v7 = sub_2226469BC(&v21, a2);
        a1[20] = v21;
        unint64_t v10 = a1[18];
        unint64_t v9 = v12;
      }
    }
  }
  while (v9 < v10);
  unsigned int v21 = (unsigned int *)(a1[19] + 8 * v7);
  a1[20] = v21;
  uint64_t v13 = a1[16];
  unint64_t v14 = v13 + sub_2226469BC(&v21, a2);
  int v16 = sub_2226469BC(&v21, v15);
  unint64_t v17 = a1[17];
  if (v17 <= v14)
  {
    uint64_t v18 = 12;
    if (!v16) {
      uint64_t v18 = 36;
    }
    unint64_t v19 = v14 + v18;
    a1[18] = v14;
    goto LABEL_16;
  }
  if (!v16)
  {
    unint64_t v19 = v17 + 24;
LABEL_16:
    a1[17] = v19;
    return v16 == 0;
  }
  a1[18] = v14;
  return v16 == 0;
}

uint64_t sub_222646C34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (unsigned int *)(*(void *)(a1 + 136) + 8);
  int v3 = sub_2226469BC(&v5, a2);
  return sub_22260C644((_DWORD *)(a1 + 120), v3);
}

void *sub_222646C7C(void *result)
{
  *__n128 result = &unk_26D4DBD28;
  return result;
}

uint64_t sub_222646C9C(unsigned __int16 **a1, uint64_t a2)
{
  uint64_t result = sub_222646FC4(*a1, a2);
  ++*a1;
  return result;
}

uint64_t sub_222646CD0(uint64_t *a1, unsigned int a2)
{
  unint64_t v9 = (unsigned int *)(a1[21] + 4 * a2);
  uint64_t v4 = sub_2225C3D04(a1[1]);
  uint64_t v6 = v4 + sub_2226469BC(&v9, v5);
  uint64_t v7 = sub_222646D44((uint64_t)(a1 + 2), 1);
  *(void *)(v7 + 24) = v6;
  uint64_t result = sub_2225FB794(v7);
  *(void *)(a1[19] + 8 * a2) = result;
  return result;
}

uint64_t sub_222646D44(uint64_t a1, uint64_t a2)
{
  return sub_2225CC51C(a1, 32 * a2, 8);
}

unint64_t sub_222646D50(uint64_t *a1, unsigned int a2)
{
  uint64_t v4 = sub_2225E8DD0(a1[24]);
  unint64_t result = sub_22262CE08(v4, a2);
  unint64_t v15 = result;
  if (result)
  {
    sub_222646E40(a1[20], (uint64_t *)&v15, (uint64_t)v14);
    sub_222646F80((uint64_t)v13);
    if (sub_222646F6C((uint64_t)v14, (uint64_t)v13))
    {
      return 0;
    }
    else
    {
      *(void *)uint64_t v13 = sub_222646F88((uint64_t)v14, v6);
      uint64_t v7 = sub_2225C3D04(a1[1]);
      uint64_t v8 = v7 + sub_2225C3B40(v13);
      unint64_t v12 = (unsigned int *)(v7 + sub_222613380((uint64_t)v13));
      if (sub_2226469BC(&v12, v9))
      {
        unint64_t v10 = v12;
      }
      else
      {
        unint64_t v10 = 0;
        unint64_t v12 = 0;
      }
      uint64_t v11 = sub_2225C26A4(200);
      return sub_2226467F8(v11, a1[24], a2, v8, (uint64_t)v10, (uint64_t)a1);
    }
  }
  return result;
}

uint64_t sub_222646E40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_222646FCC(*a2);
  char v6 = v5;
  uint64_t v8 = v7;
  unsigned int v9 = sub_222647004(v5, v7);
  uint64_t v26 = (unsigned int *)(*(void *)(a1 + 8) + 4 * ((*(_DWORD *)a1 - 1) & v9));
  unsigned int v11 = sub_2226469BC(&v26, v10);
  if (!v11) {
    return sub_222647030(a3);
  }
  int v25 = (char *)(*(void *)(a1 + 16) + v11);
  int v13 = sub_222646C9C((unsigned __int16 **)&v25, v12);
  if (!v13) {
    return sub_222647030(a3);
  }
  int v15 = v13;
  uint64_t v16 = a1 + 24;
  while (1)
  {
    int v17 = sub_2226469BC((unsigned int **)&v25, v14);
    uint64_t v19 = sub_222647034((unsigned __int16 **)&v25, v18);
    unsigned int v20 = v25;
    if (v17 == v9) {
      break;
    }
LABEL_7:
    int v25 = &v20[(v19 + HIDWORD(v19))];
    if (!--v15) {
      return sub_222647030(a3);
    }
  }
  uint64_t v21 = sub_222647084(v25);
  uint64_t v23 = (uint64_t)v22;
  if (!sub_2226470B8(v21, v22, v6, v8))
  {
    unsigned int v20 = v25;
    goto LABEL_7;
  }
  return sub_2226470F8(a3, v21, v23, (uint64_t)&v25[v19], SHIDWORD(v19), v16);
}

BOOL sub_222646F6C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16) == *(void *)(a1 + 16);
}

uint64_t sub_222646F80@<X0>(uint64_t a1@<X8>)
{
  return sub_222647030(a1);
}

uint64_t sub_222646F88(uint64_t a1, uint64_t a2)
{
  return sub_222647188(*(unsigned int **)(a1 + 16), a2);
}

void sub_222646F94()
{
  uint64_t v0 = (void *)sub_222646F90();

  j__free(v0);
}

uint64_t sub_222646FC4(unsigned __int16 *a1, uint64_t a2)
{
  return nullsub_1(*a1, a2);
}

uint64_t sub_222646FCC(uint64_t a1)
{
  char v3 = 1;
  uint64_t v2 = sub_2225C3C70(a1);
  return sub_2226470FC((uint64_t)&v3, (uint64_t)&v2);
}

uint64_t sub_222647004(uint64_t a1, char *a2)
{
  sub_2225C3D00((int)v3, a2);
  return sub_2225D7E84(v3[0], v3[1]);
}

uint64_t sub_222647034(unsigned __int16 **a1, uint64_t a2)
{
  int v6 = sub_222646C9C(a1, a2);
  char v3 = *a1;
  *a1 = (unsigned __int16 *)((char *)*a1 + 1);
  int v5 = *(unsigned __int8 *)v3;
  return sub_2225E15B0((uint64_t)&v6, (uint64_t)&v5);
}

uint64_t sub_222647084(char *a1)
{
  char v3 = *a1;
  uint64_t v2 = a1 + 1;
  return sub_2226470FC((uint64_t)&v3, (uint64_t)&v2);
}

BOOL sub_2226470B8(char a1, char *__s1, char a3, char *__s2)
{
  return a3 == a1 && strcmp(__s1, __s2) == 0;
}

uint64_t sub_2226470FC(uint64_t a1, uint64_t a2)
{
  sub_22264712C(&v3, a1, a2);
  return v3;
}

uint64_t sub_222647130(uint64_t result, unsigned char *a2, void *a3)
{
  *(unsigned char *)unint64_t result = *a2;
  *(void *)(result + 8) = *a3;
  return result;
}

uint64_t sub_222647144()
{
  uint64_t result = sub_222647164();
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_222647168(uint64_t result)
{
  *(unsigned char *)uint64_t result = 0;
  *(void *)(result + 8) = 0;
  return result;
}

uint64_t sub_222647174(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(void *)(result + 16) = a4;
  *(_DWORD *)(result + 24) = a5;
  *(void *)(result + 32) = a6;
  return result;
}

uint64_t sub_222647188(unsigned int *a1, uint64_t a2)
{
  int v6 = a1;
  int v2 = sub_2226469BC(&v6, a2);
  int v4 = sub_2226469BC(&v6, v3);
  sub_2226471D8(&v7, v2, v4);
  return v7;
}

uint64_t sub_2226471DC(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DC3F0;
  std::string::~string((std::string *)(a1 + 8));
  return a1;
}

void *sub_222647228(void *a1)
{
  *a1 = &unk_26D4DC3F0;
  sub_2225CAD04(a1 + 1);
  return a1;
}

uint64_t sub_22264726C(void *a1)
{
  *a1 = &unk_26D4DC420;
  int v2 = a1 + 4;
  sub_2226472D0((uint64_t)(a1 + 4));
  sub_2225E4D6C(v2);

  return sub_2226471DC((uint64_t)a1);
}

void sub_2226472D0(uint64_t a1)
{
  int v4 = (void *)sub_2225E41A0(a1);
  uint64_t v3 = sub_2225E41D8(a1);
  while (sub_2225DE624(&v4, &v3))
  {
    uint64_t v2 = *(void *)(sub_2225E4210((uint64_t)&v4) + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    sub_2225E42EC(&v4);
  }
  sub_2226481D8(a1);
}

void sub_222647374()
{
  uint64_t v0 = (void *)sub_222647370();

  j__free(v0);
}

uint64_t sub_22264739C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v5 = (void *)(a1 + 32);
  uint64_t result = sub_2226473EC((void *)(a1 + 32), a2, a3);
  if (!result && (a4 & 1) == 0)
  {
    sub_2225CCC70(v7);
    return sub_2226473EC(v5, v7[0], v7[1]);
  }
  return result;
}

uint64_t sub_2226473EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222608718(a1, a2, a3);
  uint64_t v5 = sub_222607264((uint64_t)a1);
  if (sub_2225DE624(&v6, &v5)) {
    return *(void *)(sub_2225E4210((uint64_t)&v6) + 8);
  }
  else {
    return 0;
  }
}

uint64_t sub_22264744C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v2 = a1 + 32;
  uint64_t v3 = sub_2226474A0(a2);
  uint64_t v5 = sub_2225E5634(v2, v3, v4);
  return sub_2225F2F60(v5, &v7);
}

uint64_t sub_2226474A0(uint64_t a1)
{
  sub_2225CCBF8(&v2, a1 + 8);
  return v2;
}

uint64_t sub_2226474CC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  sub_222635CA4(a2, (uint64_t)a4);
  if (sub_22261AF2C((uint64_t)a4))
  {
    uint64_t v8 = sub_22261AF2C((uint64_t)a4);
    uint64_t v9 = sub_2225F2418(v8);
    uint64_t v11 = v10;
    uint64_t v15 = v9;
    uint64_t v16 = v10;
  }
  else
  {
    sub_2225CCC70(&v15);
    uint64_t v9 = v15;
    uint64_t v11 = v16;
  }
  uint64_t v12 = sub_22264739C(a1, v9, v11, 0);
  if (v12) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unsigned int *))(*(void *)v12 + 16))(v12, a2, a3, a4);
  }
  sub_2226265A0(a2, a4, 897, (uint64_t)v14);
  return sub_2225F37F0(v14);
}

uint64_t sub_2226475AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 872);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)result + 72))(result, a2, a3);
  }
  if ((*(_WORD *)(a1 + 436) & 0x100) != 0)
  {
    ++*(_DWORD *)(a1 + 1340);
    sub_22261B6AC(v10);
    (*(void (**)(void, uint64_t, uint64_t, unsigned char *))(**(void **)(a1 + 640) + 16))(*(void *)(a1 + 640), a1, a3, v10);
    uint64_t result = sub_2225DF1DC(a1 + 824, v6);
    if (result)
    {
      uint64_t v8 = sub_2225CBA80(a1 + 824, v7);
      uint64_t result = sub_22264C330(v8);
      if (result) {
        return sub_222635C58(a1);
      }
    }
    uint64_t v9 = *(void *)(a1 + 808);
    if (v9)
    {
      if (*(unsigned char *)(v9 + 24)) {
        return sub_222635C58(a1);
      }
    }
  }
  return result;
}

uint64_t sub_222647694(uint64_t a1, uint64_t a2)
{
  sub_222647BAC(v52, a1, *(unsigned __int8 *)(a1 + 439), a2);
  unsigned int v4 = sub_2225C3B40((unsigned int *)a2);
  sub_222649758(a1, a2);
  if (sub_22261CB34(a2, 21))
  {
    sub_22261CABC(a1, v4, 622, (uint64_t)v51);
    uint64_t v5 = v51;
LABEL_3:
    sub_2225F37F0(v5);
LABEL_12:
    sub_222647BB0((uint64_t)v52);
    return sub_222647C90(v52);
  }
  sub_222649758(a1, a2);
  unsigned int v6 = sub_22261BFB4(a2);
  if ((sub_2226221A0(v6) & 1) == 0)
  {
    sub_22261CABC(a1, v4, 622, (uint64_t)v50);
    sub_2225F37F0(v50);
    if (!sub_22261CB34(a2, 22) || !sub_22261CB34(a2, 1))
    {
LABEL_10:
      if (sub_22261BABC(a2, 22)) {
        sub_222649758(a1, a2);
      }
      goto LABEL_12;
    }
LABEL_9:
    sub_222649758(a1, a2);
    goto LABEL_10;
  }
  if (sub_22262D3B0(a2))
  {
    sub_2226265A0(a1, (unsigned int *)a2, 19, (uint64_t)v49);
    sub_2225F37F0(v49);
    goto LABEL_9;
  }
  long long v47 = *(_OWORD *)a2;
  uint64_t v48 = *(void *)(a2 + 16);
  sub_222649758(a1, a2);
  if (sub_22261CB34(a2, 22))
  {
    sub_22261CABC(a1, v4, 622, (uint64_t)v46);
    uint64_t v5 = v46;
    goto LABEL_3;
  }
  if (!*(unsigned char *)(a1 + 439))
  {
    unsigned int v8 = sub_2225C3B40((unsigned int *)a2);
    sub_22261F294(a1, (unsigned int *)&v47, 0, &v45);
    if (*(unsigned char *)sub_2225CB8F8((uint64_t)&v45, 0) == 76
      || *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, 0) == 85
      || *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, 0) == 117 && *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, 1) != 56)
    {
      *(void *)uint64_t v36 = sub_2225CFC64((uint64_t)&v45, v9);
      sub_2225D24D0(&v44, v36);
      sub_222647BBC(&v45, v44);
    }
    else if (*(unsigned char *)sub_2225CB8F8((uint64_t)&v45, 0) == 117)
    {
      *(void *)uint64_t v36 = sub_2225CFC64((uint64_t)&v45, v26);
      sub_2225D24D0(&v43, v36);
      uint64_t v40 = sub_2225CFC64((uint64_t)&v45, v27);
      uint64_t v41 = sub_2225D577C(&v40, 2);
      sub_2225D24D0(&v42, &v41);
      sub_222647C1C(&v45, v43, v42);
    }
    if (*(unsigned char *)sub_2225CB8F8((uint64_t)&v45, 0) == 82)
    {
      LODWORD(v11) = -1;
      do
      {
        std::string::size_type v12 = (v11 + 3);
        uint64_t v11 = (v11 + 1);
      }
      while (*(unsigned char *)sub_2225CB8F8((uint64_t)&v45, v12) != 40);
      std::string::erase(&v45, 0, v12);
      uint64_t v14 = sub_2225CB920((uint64_t)&v45, v13);
      std::string::erase(&v45, v14 + ~v11, 0xFFFFFFFFFFFFFFFFLL);
    }
    else
    {
      int v15 = sub_2225CB920((uint64_t)&v45, v10);
      unsigned int v17 = v15 - 1;
      if (v15 == 2)
      {
        uint64_t v18 = 1;
      }
      else
      {
        unsigned int v28 = 1;
        unsigned int v29 = 1;
        do
        {
          uint64_t v30 = v29;
          BOOL v31 = *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, v29) != 92 || v29 + 1 >= v17;
          if (!v31
            && (*(unsigned char *)sub_2225CB8F8((uint64_t)&v45, v29 + 1) == 92
             || *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, v29 + 1) == 34))
          {
            uint64_t v30 = ++v29;
          }
          char v32 = *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, v30);
          uint64_t v18 = v28 + 1;
          *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, v28) = v32;
          ++v29;
          ++v28;
        }
        while (v29 != v17);
      }
      uint64_t v41 = sub_2225CFC64((uint64_t)&v45, v16);
      *(void *)uint64_t v36 = sub_2225D577C(&v41, v18);
      sub_2225D24D0(&v39, v36);
      uint64_t v37 = sub_2225CFCA0((uint64_t)&v45, v19);
      uint64_t v40 = sub_222647C88(&v37, 1);
      sub_2225D24D0(&v38, &v40);
      sub_222647C1C(&v45, v39, v38);
    }
    *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, 0) = 32;
    uint64_t v21 = sub_2225CB920((uint64_t)&v45, v20);
    *(unsigned char *)sub_2225CB8F8((uint64_t)&v45, v21 - 1) = 10;
    sub_22261B6AC(v36);
    sub_22261FB44((uint64_t)v36);
    sub_2225CCBF8(v35, &v45);
    sub_2225F3278(&v34);
    sub_2225F3278(&v33);
    sub_222648E1C(a1, v35[0], v35[1], v36, v34, v33);
    int v22 = sub_2225C3B40(v36);
    unsigned int v24 = sub_2225CB920((uint64_t)&v45, v23);
    uint64_t v25 = sub_22261B328(v22, v4, v8, v24, a1);
    sub_22263F53C(a1, v25, 0);
    sub_2226475AC(a1, v4, 1);
    sub_222649758(a1, a2);
    std::string::~string(&v45);
  }
  return sub_222647C90(v52);
}

uint64_t sub_222647BB0(uint64_t result)
{
  *(unsigned char *)(result + 9) = 1;
  return result;
}

uint64_t sub_222647BBC(std::string *a1, uint64_t a2)
{
  uint64_t v6 = a2;
  uint64_t v5 = sub_2225CFC64((uint64_t)a1, a2);
  uint64_t v3 = sub_2225D0D24((uint64_t)&v6, (uint64_t)&v5);
  std::string::erase(a1, v3, 1uLL);
  return sub_2225D577C(&v5, v3);
}

uint64_t sub_222647C1C(std::string *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a3;
  uint64_t v9 = a2;
  uint64_t v7 = sub_2225CFC64((uint64_t)a1, a2);
  uint64_t v4 = sub_2225D0D24((uint64_t)&v9, (uint64_t)&v7);
  std::string::size_type v5 = sub_2225D0D24((uint64_t)&v8, (uint64_t)&v9);
  std::string::erase(a1, v4, v5);
  return sub_2225D577C(&v7, v4);
}

uint64_t sub_222647C88(uint64_t *a1, uint64_t a2)
{
  return sub_2225D577C(a1, -a2);
}

uint64_t sub_222647C94(uint64_t a1, unsigned int *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  unsigned int v4 = sub_2225C3B40(a2);
  sub_222649758(a1, a2);
  if (sub_22261CB34((uint64_t)a2, 21))
  {
    sub_22261CABC(a1, v4, 622, (uint64_t)v17);
    return sub_2225F37F0(v17);
  }
  else
  {
    sub_222647EC8(v18);
    sub_222649758(a1, a2);
    if (sub_22261CB34((uint64_t)a2, 1))
    {
      int v6 = 0;
      do
      {
        sub_22260BC64((uint64_t)v18, (uint64_t)a2);
        if (sub_22261BABC((uint64_t)a2, 21))
        {
          ++v6;
        }
        else if (sub_22261BABC((uint64_t)a2, 22))
        {
          if (!v6) {
            break;
          }
          --v6;
        }
        sub_222649758(a1, a2);
      }
      while (sub_22261CB34((uint64_t)a2, 1));
    }
    if (sub_22261BABC((uint64_t)a2, 1))
    {
      sub_22261CABC(a1, v4, 767, (uint64_t)v16);
      sub_2225F37F0(v16);
    }
    else
    {
      uint64_t v7 = sub_2225CC180((uint64_t)v18);
      sub_22261CCEC(v7, 2);
      uint64_t v8 = sub_2225E2698((uint64_t)v18);
      sub_22261F2AC(v8, 2);
      unint64_t v9 = sub_222609DE8((uint64_t)v18);
      unint64_t v10 = v9;
      uint64_t v11 = 24 * v9;
      if (is_mul_ok(v9, 0x18uLL)) {
        uint64_t v12 = 24 * v9;
      }
      else {
        uint64_t v12 = -1;
      }
      uint64_t v13 = sub_2225C26A4(v12);
      uint64_t v14 = v13;
      if (v10)
      {
        do
        {
          uint64_t v13 = sub_22261B6AC(v13) + 24;
          v11 -= 24;
        }
        while (v11);
      }
      sub_2225C3C70((uint64_t)v18);
      sub_2225C3D04((uint64_t)v18);
      sub_222625C6C();
      unint64_t v15 = sub_222609DE8((uint64_t)v18);
      sub_22263F714(a1, v14, v15, 1, 1);
      sub_2226475AC(a1, v4, 2);
      sub_222649758(a1, a2);
    }
    return sub_2225C56C4(v18);
  }
}

uint64_t sub_222647ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = a2;
  uint64_t v10 = a3;
  int v6 = *(void **)(a1 + 640);
  if (!sub_2225CF1E0((uint64_t)&v9))
  {
    uint64_t v7 = sub_22264739C(*(void *)(a1 + 640), v9, v10, 1);
    if (v7)
    {
      int v6 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 24))(v7);
    }
    else
    {
      int v6 = (void *)sub_2225C26A4(64);
      sub_222647F80(v6, v9, v10);
      sub_22264744C(*(void *)(a1 + 640), (uint64_t)v6);
    }
  }
  return sub_22264744C((uint64_t)v6, a4);
}

BOOL sub_222647F84(uint64_t a1, unsigned __int16 *a2)
{
  return sub_2225F2DD0(a1) == 2 && *(unsigned __int16 *)sub_2225F2DB8(a1) == *a2;
}

BOOL sub_222647FD4(uint64_t a1, unsigned __int16 *a2)
{
  if (sub_2225F2DD0(a1) != 3) {
    return 0;
  }
  unsigned int v4 = (unsigned __int16 *)sub_2225F2DB8(a1);
  return *v4 == *a2 && *((unsigned __int8 *)v4 + 2) == *((unsigned __int8 *)a2 + 2);
}

uint64_t sub_222648030(uint64_t a1, uint64_t a2)
{
  sub_2225CCC70(v5);
  return sub_222647ECC(a1, v5[0], v5[1], a2);
}

uint64_t sub_222648074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = a3;
  *(unsigned char *)(a1 + 9) = 0;
  *(void *)(a1 + 16) = a4;
  uint64_t v7 = sub_22261B6AC(a1 + 24);
  if (a3)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    int v9 = *(_DWORD *)(v8 + 15);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_DWORD *)(v7 + 15) = v9;
    sub_2226334B4(a2);
  }
  return a1;
}

uint64_t sub_2226480E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v2 = *(void *)a1;
    if (*(unsigned char *)(a1 + 9))
    {
      sub_22263352C(v2);
    }
    else
    {
      sub_222633540(v2);
      uint64_t v3 = *(void *)(a1 + 16);
      long long v4 = *(_OWORD *)(a1 + 24);
      *(_DWORD *)(v3 + 15) = *(_DWORD *)(a1 + 39);
      *(_OWORD *)uint64_t v3 = v4;
    }
  }
  return a1;
}

void *sub_222648138(void *a1, uint64_t a2, uint64_t a3)
{
  long long v4 = sub_222648180(a1, a2, a3);
  *long long v4 = &unk_26D4DC420;
  sub_2225E50E8(v4 + 4);
  return a1;
}

void *sub_222648180(void *a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  *a1 = &unk_26D4DC3F0;
  sub_2225CA51C(v5, (uint64_t)(a1 + 1));
  return a1;
}

void sub_2226481D8(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(void *)a1;
        uint64_t v6 = *(void *)(*(void *)a1 + v3);
        if (v6)
        {
          if (v6 != sub_2225CAE20()) {
            sub_2225E51D8(*(unsigned int **)(v5 + v3), a1 + 24);
          }
        }
        *(void *)(v5 + v3) = 0;
        v3 += 8;
      }
      while (v4 != v3);
    }
    *(_DWORD *)(a1 + 12) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
}

uint64_t sub_22264825C(uint64_t a1)
{
  return sub_2226109F8(a1, 0x20u);
}

uint64_t sub_222648264(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  sub_2225F50F4(a1, 0);
  uint64_t v2 = sub_222646034();
  uint64_t v3 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_222610CE0(a1);
  while (v3 != (void *)result)
  {
    *uint64_t v3 = v2;
    v3 += 4;
  }
  return result;
}

uint64_t sub_2226482CC(_DWORD *a1, unsigned int a2)
{
  unsigned int v6 = a2;
  BOOL v3 = sub_2225F7FD8(&v6);
  uint64_t v4 = v6;
  if (!v3) {
    return sub_22260C680(a1, v6);
  }
  return v4;
}

uint64_t sub_222648318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, int a10)
{
  uint64_t v18 = sub_2225F3264((_DWORD *)a1);
  sub_2225F326C(v18 + 2, a2);
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = sub_2225C5B40(a6);
  *(void *)(a1 + 48) = a5;
  *(void *)(a1 + 64) = a6;
  *(void *)(a1 + 72) = a7;
  *(_OWORD *)(a1 + 80) = 0u;
  sub_2225D8FA4(a1 + 96);
  sub_2225E0EC4((void *)(a1 + 104));
  sub_2225F3278((_DWORD *)(a1 + 424));
  sub_2225F3278((_DWORD *)(a1 + 428));
  sub_2225FC96C(a1 + 440, a4, a8);
  sub_22260734C((void *)(a1 + 616));
  sub_2225CFD6C(a1 + 624);
  sub_2225D250C((void *)(a1 + 648));
  *(unsigned char *)(a1 + 672) = 0;
  *(_DWORD *)(a1 + 676) = a10;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_DWORD *)(a1 + 696) = 0;
  sub_2225F3278((_DWORD *)(a1 + 700));
  sub_2225F3278((_DWORD *)(a1 + 704));
  sub_2225F3278((_DWORD *)(a1 + 708));
  sub_22260826C(a1 + 712);
  *(_WORD *)(a1 + 768) = 0;
  sub_2225F3278((_DWORD *)(a1 + 772));
  sub_2225F3278((_DWORD *)(a1 + 776));
  *(unsigned char *)(a1 + 780) = 0;
  v39[0] = 0;
  char v38 = 1;
  sub_222648730(a1 + 784, v39, &v38);
  sub_2225D8FA4(a1 + 792);
  sub_2225D8FA4(a1 + 800);
  *(_OWORD *)(a1 + 808) = 0u;
  sub_2225D8FA4(a1 + 824);
  *(_DWORD *)(a1 + 832) = 0;
  *(void *)(a1 + 840) = 0;
  sub_2225D250C((void *)(a1 + 848));
  *(void *)(a1 + 872) = 0;
  sub_22260AF30(a1 + 880);
  sub_222648734(a1 + 984, 0);
  sub_222648738(a1 + 1008);
  *(void *)(a1 + 1296) = 0;
  sub_22264873C(a1 + 1304, 0);
  sub_2225CAD04(a1 + 1392);
  sub_2225F3278((_DWORD *)(a1 + 1416));
  sub_222648740(a1 + 1488);
  sub_2225D250C((void *)(a1 + 1896));
  *(void *)(a1 + 1920) = 0;
  sub_222648744(a1 + 1928);
  sub_2225D250C((void *)(a1 + 1992));
  *(_OWORD *)(a1 + 2016) = 0u;
  sub_222648734(a1 + 2032, 0);
  if (a9) {
    __int16 v19 = 16;
  }
  else {
    __int16 v19 = 0;
  }
  *(_WORD *)(a1 + 436) = *(_WORD *)(a1 + 436) & 0xFFEF | v19;
  uint64_t v20 = sub_2225C26A4(24);
  *(void *)(a1 + 56) = sub_22264AB10(v20, *(void *)(a1 + 48));
  *(_DWORD *)(a1 + 432) = 0;
  *(_OWORD *)(a1 + 1328) = 0u;
  *(_OWORD *)(a1 + 1344) = 0u;
  *(_OWORD *)(a1 + 1360) = 0u;
  *(_OWORD *)(a1 + 1376) = 0u;
  __int16 v21 = *(_WORD *)(a1 + 436);
  *(_DWORD *)(a1 + 1420) = 0;
  *(_WORD *)(a1 + 438) = 0;
  *(void *)(a1 + 1984) = 0;
  *(_WORD *)(a1 + 436) = v21 & 0xFC10 | 0x100;
  sub_2225C3D00((int)v37, "__VA_ARGS__");
  int v22 = (unsigned int *)sub_222635F10(a1, v37[0], v37[1]);
  *(void *)(a1 + 328) = v22;
  sub_22263B7B4(v22, 1);
  sub_222648748(a1, *(void *)(a1 + 328), 797);
  uint64_t v23 = (void *)sub_2225C26A4(64);
  sub_2225CCC70(v36);
  sub_222647F80(v23, v36[0], v36[1]);
  *(void *)(a1 + 640) = v23;
  nullsub_1(a1, v24);
  sub_222640F90((uint64_t *)a1);
  if ((**(unsigned char **)(a1 + 24) & 0x20) != 0)
  {
    sub_2225C3D00((int)v35, "_exception_info");
    *(void *)(a1 + 2080) = sub_222635F10(a1, v35[0], v35[1]);
    sub_2225C3D00((int)v34, "__exception_info");
    *(void *)(a1 + 2088) = sub_222635F10(a1, v34[0], v34[1]);
    sub_2225C3D00((int)v33, "GetExceptionInformation");
    *(void *)(a1 + 2096) = sub_222635F10(a1, v33[0], v33[1]);
    sub_2225C3D00((int)v32, "_exception_code");
    *(void *)(a1 + 2056) = sub_222635F10(a1, v32[0], v32[1]);
    sub_2225C3D00((int)v31, "__exception_code");
    *(void *)(a1 + 2064) = sub_222635F10(a1, v31[0], v31[1]);
    sub_2225C3D00((int)v30, "GetExceptionCode");
    *(void *)(a1 + 2072) = sub_222635F10(a1, v30[0], v30[1]);
    sub_2225C3D00((int)v29, "_abnormal_termination");
    *(void *)(a1 + 2104) = sub_222635F10(a1, v29[0], v29[1]);
    sub_2225C3D00((int)v28, "__abnormal_termination");
    *(void *)(a1 + 2112) = sub_222635F10(a1, v28[0], v28[1]);
    sub_2225C3D00((int)v27, "AbnormalTermination");
    uint64_t v25 = sub_222635F10(a1, v27[0], v27[1]);
  }
  else
  {
    uint64_t v25 = 0;
    *(_OWORD *)(a1 + 2088) = 0u;
    *(_OWORD *)(a1 + 2104) = 0u;
    *(_OWORD *)(a1 + 2056) = 0u;
    *(_OWORD *)(a1 + 2072) = 0u;
  }
  *(void *)(a1 + 2120) = v25;
  return a1;
}

uint64_t *sub_222648748(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2;
  uint64_t result = sub_2226492C0(a1 + 2032, &v5);
  *(_DWORD *)uint64_t result = a3;
  return result;
}

uint64_t sub_222648784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, int a10)
{
  return sub_222648318(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_222648798(uint64_t a1)
{
  uint64_t v2 = a1 + 848;
  sub_22264896C((uint64_t *)(a1 + 848));
  while (1)
  {
    uint64_t v3 = *(void *)(a1 + 2016);
    if (!v3) {
      break;
    }
    *(void *)(a1 + 2016) = *(void *)(v3 + 248);
    sub_2226489B4();
  }
  uint64_t v4 = *(unsigned int *)(a1 + 1420);
  if (v4)
  {
    uint64_t v5 = (void *)(a1 + 1424);
    do
    {
      if (*v5)
      {
        unsigned int v6 = (void *)sub_222633FE8(*v5);
        j__free(v6);
      }
      ++v5;
      --v4;
    }
    while (v4);
  }
  sub_222633F44(a1 + 824, 0);
  while (1)
  {
    uint64_t v7 = *(void *)(a1 + 2024);
    if (!v7) {
      break;
    }
    *(void *)(a1 + 2024) = *(void *)(v7 + 256);
    sub_2226489B4();
  }
  for (uint64_t i = *(void *)(a1 + 1296); i; uint64_t i = sub_222625D58(i))
    ;
  uint64_t v9 = *(void *)(a1 + 640);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = *(void **)(a1 + 56);
  if (v10) {
    j__free(v10);
  }
  if ((*(_WORD *)(a1 + 436) & 0x10) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 64);
    if (v11)
    {
      uint64_t v12 = (void *)sub_222616710(v11);
      j__free(v12);
    }
  }
  uint64_t v13 = *(void *)(a1 + 872);
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  sub_2226489B8(a1 + 2032);
  sub_2225E4E68(a1 + 1992);
  sub_2225C56C4(a1 + 1928);
  sub_2225D35B8(a1 + 1896);
  sub_2225C56C4(a1 + 1488);
  std::string::~string((std::string *)(a1 + 1392));
  sub_2226489BC(a1 + 1304);
  sub_2226489C0(a1 + 1008);
  sub_2226489B8(a1 + 984);
  sub_2225C56C4(a1 + 880);
  sub_2226489C4(v2);
  sub_222633F10(a1 + 824);
  sub_222633F14(a1 + 800);
  sub_222633F14(a1 + 792);
  sub_2225C56C4(a1 + 712);
  sub_2225E4E68(a1 + 648);
  sub_222607384((void *)(a1 + 616));
  sub_2226489C8(a1 + 440);
  sub_2225E1434(a1 + 104);
  sub_2226489CC(a1 + 96);
  sub_2226489D0(a1 + 8);
  return a1;
}

uint64_t sub_22264896C(uint64_t *a1)
{
  uint64_t v2 = sub_2226339BC(a1);
  sub_22264A484(a1);

  return nullsub_1(a1, v2);
}

uint64_t sub_2226489D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = a2;
  sub_2225F2DF8(a1 + 624, a2);
  uint64_t v4 = *(void *)(a1 + 64);

  return sub_222617AB4(v4, a2);
}

void *sub_222648A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  *uint64_t result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_22264A608(v8, v4);
  }
  return result;
}

uint64_t sub_222648A90(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 18) >> 2) & 1;
}

BOOL sub_222648A9C(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_2225DF1DC(a1 + 792, a2);
  if (result)
  {
    *(_DWORD *)(a1 + 832) = 0;
  }
  else
  {
    BOOL result = sub_2225DF1DC(a1 + 800, v4);
    if (result)
    {
      int v6 = 1;
    }
    else
    {
      BOOL result = sub_2225DF1DC(a1 + 824, v5);
      if (result) {
        int v6 = 2;
      }
      else {
        int v6 = 3;
      }
    }
    *(_DWORD *)(a1 + 832) = v6;
  }
  return result;
}

BOOL sub_222648B00(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  unsigned __int8 v27 = 0;
  uint64_t v8 = sub_22260BEEC(*(void *)(a1 + 48), a2, &v27);
  int v9 = v27;
  if (!v27)
  {
    uint64_t v10 = v8;
    uint64_t v11 = sub_2225C3D04(v8);
    if (a3 >= 2)
    {
      int v12 = 1;
      do
      {
        for (uint64_t i = (unsigned __int8 *)(v11 + 1); ; ++i)
        {
          int v14 = *(i - 1);
          if (!*(i - 1))
          {
            uint64_t v11 = (uint64_t)(i - 1);
            goto LABEL_20;
          }
          if (v14 == 13 || v14 == 10) {
            break;
          }
        }
        uint64_t v16 = i - 1;
        int v17 = *i;
        if (v14 == v17) {
          --i;
        }
        if (v17 != 10 && v17 != 13) {
          uint64_t i = v16;
        }
        uint64_t v11 = (uint64_t)(i + 1);
LABEL_20:
        ++v12;
      }
      while (v12 != a3);
    }
    unint64_t v19 = v11 + (a4 - 1);
    if (*(_DWORD *)(a1 + 784))
    {
      uint64_t v20 = *(void *)(a1 + 48);
      unsigned int v21 = sub_2226370DC(v20);
      if (sub_22262CE08(v20, v21) == a2 && (uint64_t)(v19 - sub_2225C3D04(v10)) < *(unsigned int *)(a1 + 784)) {
        unint64_t v19 = sub_2225C3D04(v10) + *(unsigned int *)(a1 + 784);
      }
    }
    if (v19 > sub_2225C5B40(v10)) {
      LODWORD(v19) = sub_2225C5B40(v10);
    }
    *(void *)(a1 + 688) = a2;
    *(_DWORD *)(a1 + 696) = v19 - sub_2225C3D04(v10);
    uint64_t v22 = sub_2225CE2C0(v10) + 1;
    uint64_t v23 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
    sub_2225C3D00((int)v26, v23);
    uint64_t v24 = sub_2225CD2DC(v22, v26[0], v26[1]);
    sub_2225C3D04(v24);
    sub_2225C3D04(v10);
    *(unsigned char *)sub_2225C5DDC() = 0;
    sub_2225C5B40(v10);
    sub_2225C5DDC();
    sub_22260BF50(*(void *)(a1 + 48), a2, v24, 0);
  }
  return v9 != 0;
}

uint64_t sub_222648CFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 680);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 56))(v2);
  }

  return sub_222636060(a1);
}

uint64_t sub_222648D5C(uint64_t a1, unsigned int *a2, const void **a3, unsigned char *a4)
{
  if (sub_22261CB34((uint64_t)a2, 7) && (sub_22261BB0C((uint64_t)a2) & 1) == 0)
  {
    uint64_t v8 = sub_22261AF2C((uint64_t)a2);
    if (v8) {
      return sub_2225F2418(v8);
    }
  }
  if (sub_2225C3AB8((uint64_t)a2))
  {
    unsigned int v10 = sub_222613380((uint64_t)a2);
    sub_2225CF670(a3, v10);
  }
  uint64_t v12 = sub_2225CC180((uint64_t)a3);
  unsigned int v11 = sub_222626584(a1, a2, &v12, a4);
  sub_2225C3D0C(&v13, v12, v11);
  return v13;
}

uint64_t sub_222648E1C(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, unsigned int a5, unsigned int a6)
{
  v20[0] = a2;
  v20[1] = a3;
  unsigned int v19 = a5;
  int v9 = sub_2225C3D04((uint64_t)v20);
  sub_222612BA8((uint64_t)a4, v9);
  uint64_t v18 = 0;
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned int v11 = (void *)sub_2225C3C70((uint64_t)v20);
  size_t v12 = sub_2225C3D04((uint64_t)v20);
  unsigned int v13 = sub_22264AB14(v10, v11, v12, &v18);
  if (sub_2225CDBBC(&v19))
  {
    uint64_t v14 = *(void *)(a1 + 48);
    unsigned int v15 = v19;
    int v16 = sub_2225C3D04((uint64_t)v20);
    unsigned int v13 = sub_22260B3EC(v14, v13, v15, a6, v16, 0, 0);
  }
  sub_2225D0A60(a4, v13);
  if (sub_22261BABC((uint64_t)a4, 7)) {
    return sub_2225C5B6C((uint64_t)a4, v18);
  }
  uint64_t result = sub_22261BB18((uint64_t)a4);
  if (result) {
    return sub_2225C5B6C((uint64_t)a4, v18);
  }
  return result;
}

uint64_t sub_222648F30(uint64_t a1)
{
  uint64_t v2 = sub_222608330(a1);
  if (sub_2225CBBF8(v2 + 136, v3)) {
    return 0;
  }
  uint64_t v5 = sub_2225FB75C(a1);
  uint64_t v6 = sub_222608330(a1);
  sub_2225CCBF8(v7, v6 + 136);
  return sub_22261672C(v5, v7[0], (uint64_t)v7[1], 1);
}

BOOL sub_222648FA0(uint64_t a1)
{
  unsigned int v2 = sub_2226370DC(*(void *)(a1 + 48));
  if ((sub_2226490C4(*(void *)(a1 + 48), v2) & 1) == 0)
  {
    sub_2225F3278(&v13);
    sub_22263F1C8(a1, v2, 0, v13);
    if (*(_DWORD *)(a1 + 784))
    {
      uint64_t v4 = sub_2225CBA80(a1 + 792, v3);
      sub_22261CFA8(v4, *(_DWORD *)(a1 + 784), *(unsigned char *)(a1 + 788));
    }
    unint64_t v5 = sub_22262CE08(*(void *)(a1 + 48), v2);
    if (v5) {
      sub_2226490CC(*(void *)(a1 + 64), v5);
    }
  }
  sub_2225CCBF8(v12, a1 + 1392);
  sub_2225C3D00((int)v11, "<built-in>");
  uint64_t v6 = sub_2225CD254(v12[0], v12[1], v11[0], v11[1]);
  uint64_t v7 = *(void *)(a1 + 48);
  sub_2225F3278(&v10);
  LODWORD(v6) = sub_2226490F0(v7, v6, 0, 0, 0, v10);
  sub_22264915C(a1, v6);
  sub_2225F3278(&v9);
  return sub_22263F1C8(a1, v6, 0, v9);
}

uint64_t sub_2226490C4(uint64_t a1, unint64_t a2)
{
  return (a2 >> 31) & 1;
}

__int16 *sub_2226490CC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_222618410(a1, a2);
  ++result[1];
  return result;
}

uint64_t sub_2226490F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  uint64_t v11 = sub_22260B66C(a1, a2);

  return sub_22260BB48(a1, v11, a6, a3, a4, a5);
}

uint64_t sub_22264915C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1416) = a2;
  return result;
}

uint64_t sub_222649164(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 872);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 56))();
  }
  return result;
}

_DWORD *sub_222649194(uint64_t a1, unsigned int *a2)
{
  if (sub_2225C3AB8((uint64_t)a2) & 1) != 0 || (sub_22261BB0C((uint64_t)a2))
  {
    sub_2225DAD14(v15);
    uint64_t v4 = sub_222648D5C(a1, a2, v15, 0);
    uint64_t v6 = v5;
    if (sub_22261BB0C((uint64_t)a2))
    {
      sub_2225DAD14(v14);
      sub_2226223BC(v14, v4, v6);
      uint64_t v7 = sub_2225CE27C((uint64_t)v14);
      unsigned int v9 = (_DWORD *)sub_222635F10(a1, v7, v8);
      sub_2225CA520(v14);
    }
    else
    {
      unsigned int v9 = (_DWORD *)sub_222635F10(a1, v4, v6);
    }
    sub_2225CA520(v15);
  }
  else
  {
    uint64_t v10 = sub_22261BACC((uint64_t)a2);
    unsigned int v9 = (_DWORD *)sub_222635F10(a1, v10, v11);
  }
  sub_2225C5B6C((uint64_t)a2, (uint64_t)v9);
  __int16 v12 = sub_22263E560(v9);
  sub_22261F2AC((uint64_t)a2, v12);
  return v9;
}

uint64_t *sub_2226492C0(uint64_t a1, uint64_t *a2)
{
  return sub_22264A638(a1, a2) + 1;
}

uint64_t sub_2226492DC(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = a1 + 2032;
  v10[0] = sub_22261AF2C((uint64_t)a2);
  sub_2226493B8(v4, v10, (uint64_t)v11);
  sub_2225F8068(v12, v11);
  sub_22264942C(v4, (uint64_t)v10);
  sub_2225F8068(v11, v10);
  if (sub_22260B634(v12, (uint64_t)v11))
  {
    sub_2226265A0(a1, a2, 752, (uint64_t)v9);
    uint64_t v5 = (uint64_t *)v9;
  }
  else
  {
    uint64_t v6 = sub_2225C3C70((uint64_t)v12);
    sub_2226265A0(a1, a2, *(_DWORD *)(v6 + 8), (uint64_t)v11);
    uint64_t v7 = sub_22261AF2C((uint64_t)a2);
    sub_222635F48(v11, v7);
    uint64_t v5 = v11;
  }
  return sub_2225F37F0(v5);
}

uint64_t sub_2226493B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_222646144(a1, a2, &v8)) {
    return sub_22264942C(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_222608BD4(a1);
  return sub_222645FE0(a3, v5, v6, 1);
}

uint64_t sub_22264942C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_222608BD4(a1);
  uint64_t v5 = sub_222608BD4(a1);

  return sub_222645FE0(a2, v4, v5, 1);
}

uint64_t sub_222649488(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = (unsigned int *)sub_22261AF2C((uint64_t)a2);
  if (sub_2226074F0((uint64_t)v4))
  {
    int v5 = v4 == *(unsigned int **)(a1 + 328) ? sub_2226074B4((uint64_t)v4) : 0;
    (*(void (**)(void, unsigned int *))(**(void **)(a1 + 88) + 24))(*(void *)(a1 + 88), v4);
    __int16 v6 = sub_22263E560(v4);
    sub_22261F2AC((uint64_t)a2, v6);
    if (v4 == *(unsigned int **)(a1 + 328)) {
      sub_22263B7B4(v4, v5);
    }
  }
  if (sub_2226074B4((uint64_t)v4) && *(void *)(a1 + 808)) {
    sub_2226492DC(a1, a2);
  }
  uint64_t v7 = sub_222626928(a1, (uint64_t)v4);
  if (v7)
  {
    unint64_t v8 = v7;
    uint64_t v9 = sub_222626980(v7);
    if ((*(_WORD *)(a1 + 436) & 0x20) == 0)
    {
      uint64_t v10 = v9;
      if ((sub_222648A90((uint64_t)a2) & 1) != 0 || !sub_222625E94(v10))
      {
        sub_22261CCEC((uint64_t)a2, 4);
        if (sub_22263B7E4(v10) || sub_222641238(a1, v13))
        {
          sub_2226265A0(a1, a2, 834, (uint64_t)v18);
          sub_2225F37F0(v18);
        }
      }
      else if (!sub_222627A98(v10) || sub_222641238(a1, v11))
      {
        return sub_222641380(a1, (uint64_t)a2, v8);
      }
    }
  }
  if (sub_2226074E4((uint64_t)v4) && (*(_WORD *)(a1 + 436) & 0x20) == 0)
  {
    sub_2226265A0(a1, a2, 863, (uint64_t)v17);
    uint64_t v14 = sub_2225F2418((uint64_t)v4);
    sub_2225F3774(v17, v14, v15);
    sub_2225F37F0(v17);
    sub_222607608(v4, 0);
  }
  if (sub_2226074CC((uint64_t)v4)) {
    sub_2225C5B6C((uint64_t)a2, 0);
  }
  if (sub_2226074D8((uint64_t)v4) && (*(_WORD *)(a1 + 436) & 0x20) == 0)
  {
    sub_2226265A0(a1, a2, 815, (uint64_t)v16);
    sub_2225F37F0(v16);
  }
  if (*(unsigned char *)(a1 + 768)
    && sub_2226074FC(v4)
    && (*(_WORD *)(a1 + 436) & 0x28) == 0
    && ((*(unsigned char *)(sub_222608330(a1) + 6) & 0x10) != 0 || (*(unsigned char *)(sub_222608330(a1) + 25) & 0x10) != 0)
    && *(_DWORD *)(a1 + 832) != 3)
  {
    *(_DWORD *)(a1 + 708) = sub_2225C3B40(a2);
    sub_2225C5D90((void *)(a1 + 712));
    *(unsigned char *)(a1 + 769) = 1;
    *(_DWORD *)(a1 + 832) = 4;
  }
  return 1;
}

BOOL sub_222649758(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = a1 + 824;
  uint64_t v5 = a1 + 800;
  uint64_t v6 = a1 + 792;
  while (2)
  {
    switch(*(_DWORD *)(a1 + 832))
    {
      case 0:
        uint64_t v7 = (unsigned char *)sub_2225CBA80(v6, (uint64_t)a2);
        if ((sub_22261F89C(v7, a2) & 1) == 0) {
          continue;
        }
        break;
      case 1:
        uint64_t v8 = sub_2225CBA80(v5, (uint64_t)a2);
        if ((sub_222646800(v8, a2) & 1) == 0) {
          continue;
        }
        break;
      case 2:
        uint64_t v9 = sub_2225CBA80(v4, (uint64_t)a2);
        if ((sub_22264B8D4(v9, a2) & 1) == 0) {
          continue;
        }
        break;
      case 3:
        sub_222633590(a1, (uint64_t)a2);
        break;
      case 4:
        sub_22264984C(a1, a2);
        break;
      default:
        continue;
    }
    break;
  }
  BOOL result = sub_22261BABC((uint64_t)a2, 71);
  *(unsigned char *)(a1 + 768) = result;
  return result;
}

uint64_t sub_22264984C(uint64_t a1, unsigned int *a2)
{
  sub_222648A9C(a1, (uint64_t)a2);
  sub_222649758(a1, a2);
  if (!*(unsigned char *)(a1 + 769)) {
    goto LABEL_5;
  }
  if (sub_22261BFB4((uint64_t)a2) == 6)
  {
    uint64_t v16 = sub_22261AF2C((uint64_t)a2);
    int v15 = sub_2225C3B40(a2);
    *(void *)&long long v17 = sub_222611A80((uint64_t)&v16, (uint64_t)&v15);
    *((void *)&v17 + 1) = v4;
    uint64_t result = sub_2225CC69C(a1 + 712, &v17);
    *(unsigned char *)(a1 + 769) = 0;
LABEL_7:
    *(_DWORD *)(a1 + 832) = 4;
    return result;
  }
  if (!*(unsigned char *)(a1 + 769))
  {
LABEL_5:
    uint64_t result = sub_22261BFB4((uint64_t)a2);
    if (result == 25)
    {
      *(unsigned char *)(a1 + 769) = 1;
      goto LABEL_7;
    }
  }
  uint64_t v6 = a1 + 712;
  uint64_t result = sub_2225CF1D0((void *)(a1 + 712));
  if ((result & 1) == 0)
  {
    uint64_t result = sub_222608330(a1);
    if ((*(unsigned char *)(result + 6) & 0x10) != 0)
    {
      uint64_t v8 = *(void *)(a1 + 72);
      uint64_t v9 = *(unsigned int *)(a1 + 708);
      sub_2225DF148(v14, a1 + 712);
      *(void *)&long long v17 = (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, void))(*(void *)v8 + 16))(v8, v9, v14[0], v14[1], 1, 0);
      uint64_t result = sub_22261964C(&v17, v10);
      uint64_t v7 = result;
    }
    else
    {
      uint64_t v7 = 0;
    }
    if (*(void *)(a1 + 872))
    {
      if ((*(unsigned char *)(sub_222608330(a1) + 6) & 0x10) != 0
        || (uint64_t result = sub_222608330(a1), (*(unsigned char *)(result + 25) & 0x10) != 0))
      {
        uint64_t v11 = *(void *)(a1 + 872);
        uint64_t v12 = *(unsigned int *)(a1 + 708);
        sub_2225DF148(v13, v6);
        return (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t))(*(void *)v11 + 48))(v11, v12, v13[0], v13[1], v7);
      }
    }
  }
  return result;
}

uint64_t sub_222649A08(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  if (!sub_22261CB34((uint64_t)a2, 13))
  {
    sub_22261794C(v24);
    do
    {
      sub_22260BC64((uint64_t)v24, (uint64_t)a2);
      if (sub_22262D3B0((uint64_t)a2))
      {
        sub_2226265A0(a1, a2, 19, (uint64_t)v23);
        sub_2225F37F0(v23);
      }
      if (a5) {
        sub_222649758(a1, a2);
      }
      else {
        sub_222635CA4(a1, (uint64_t)a2);
      }
    }
    while (sub_22261BABC((uint64_t)a2, 13));
    sub_2226435FC(v19, v24);
    sub_222625168(v20, v19[0], v19[1], a1, 1);
    if (!v21)
    {
      if (!v22)
      {
        v17[0] = sub_22262D3C0((uint64_t)v20);
        v17[1] = v16;
        sub_2225CA51C(v17, (uint64_t)&v18);
        sub_2225CCDE4(a3, (uint64_t)&v18);
        std::string::~string(&v18);
        uint64_t v11 = 1;
        goto LABEL_14;
      }
      uint64_t v12 = (unsigned int *)sub_222609E38((uint64_t)v24, 0);
      unsigned int v13 = sub_2225C3B40(v12);
      sub_22261CABC(a1, v13, 13, (uint64_t)&v18);
      uint64_t v14 = sub_222622304((uint64_t *)&v18, 0);
      sub_22260A5E8(v14, a4);
      sub_2225F37F0(&v18);
    }
    uint64_t v11 = 0;
LABEL_14:
    sub_22262D410((uint64_t)v20);
    sub_2225C56C4(v24);
    return v11;
  }
  sub_2226265A0(a1, a2, 13, (uint64_t)v20);
  uint64_t v10 = sub_222622304(v20, 0);
  sub_22260A5E8(v10, a4);
  sub_2225F37F0(v20);
  return 0;
}

BOOL sub_222649BE4(uint64_t a1)
{
  return !*(unsigned char *)(a1 + 53) && *(unsigned char *)(a1 + 52) == 0;
}

uint64_t sub_222649C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_222607D74((uint64_t *)(a1 + 648), (uint64_t)&v3);
}

uint64_t sub_222649C30(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  unsigned int v2 = (uint64_t *)(a1 + 648);
  uint64_t v3 = sub_2225D2E88((uint64_t *)(a1 + 648));
  uint64_t v4 = sub_2225D24C8((uint64_t)v2);
  uint64_t v7 = sub_222649C9C(v3, v4, &v8);
  sub_2225D24D0(&v6, &v7);
  return sub_222649D04(v2, v6);
}

uint64_t sub_222649C9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_2225D5844(a1);
  uint64_t v7 = sub_2225D5844(a2);
  uint64_t v8 = sub_222630164(v6, v7, a3, (uint64_t)&v10);
  return sub_22264A908(a1, v8);
}

uint64_t sub_222649D04(uint64_t *a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v6 = sub_22264A980(a1);
  uint64_t v3 = *a1 + 8 * sub_222635818((uint64_t)&v7, (uint64_t)&v6);
  uint64_t v4 = sub_22264A984();
  sub_2226340E0(a1, v4);
  return sub_2225D0BB0((uint64_t)a1, v3);
}

BOOL sub_222649D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1 + 648;
  uint64_t v11 = sub_2225D2E88((uint64_t *)(a1 + 648));
  uint64_t v10 = sub_2225D24C8(v6);
  BOOL result = sub_2225D0DF0((uint64_t)&v11, (uint64_t)&v10);
  if (result)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = (void *)sub_2225C3C70((uint64_t)&v11);
      v8 |= (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)*v9 + 16))(*v9, a1, a3);
      sub_2225E49B8(&v11);
    }
    while (sub_2225D0DF0((uint64_t)&v11, (uint64_t)&v10));
    if ((v8 & 1) != 0 && (sub_22261B160(a1) & 1) == 0)
    {
      sub_222649758(a1, a2);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_222649E64(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 872);
  if (v4)
  {
    uint64_t v5 = sub_2225C26A4(24);
    BOOL result = sub_222649EFC(v5, a2, v4);
    a2 = result;
  }
  *(void *)(v3 + 872) = a2;
  return result;
}

uint64_t sub_222649EBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_222649EF4(uint64_t a1)
{
  return sub_2225C3C70(a1 + 24);
}

void *sub_222649F00(void *a1, uint64_t a2, uint64_t a3)
{
  BOOL result = sub_222635438(a1);
  *BOOL result = &unk_26D4DC130;
  result[1] = a2;
  result[2] = a3;
  return result;
}

uint64_t sub_222649F48(uint64_t result, _DWORD *a2, unsigned char *a3)
{
  *(_DWORD *)BOOL result = *a2;
  *(unsigned char *)(result + 4) = *a3;
  return result;
}

uint64_t sub_222649F5C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222649F90(v4, v2);
  return a1;
}

uint64_t sub_222649F90(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222609018(a1, a2);
  if (result)
  {
    return sub_222646338(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_222649FDC(uint64_t a1)
{
  return sub_222649FE8(a1, a1 + 32, 32);
}

uint64_t sub_222649FEC(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_22264A020(v4, v2);
  return a1;
}

uint64_t sub_22264A020(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222610C28(a1, a2);
  if (result)
  {
    return sub_222648264(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_22264A06C(uint64_t a1)
{
  return sub_2226109F8(a1, 0x10u);
}

uint64_t sub_22264A074(uint64_t a1)
{
  return sub_2226109F8(a1, 1u);
}

uint64_t *sub_22264A07C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_22264A0A4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_22264A0B4();
  }
  return result;
}

void sub_22264A0B8(_DWORD *a1)
{
  if ((*a1)-- == 1)
  {
    unsigned int v2 = (void *)sub_22264A0F8();
    j__free(v2);
  }
}

uint64_t sub_22264A0FC(uint64_t a1)
{
  return a1;
}

uint64_t *sub_22264A180(uint64_t *a1)
{
  return a1;
}

uint64_t sub_22264A1A8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_22264A1B8();
  }
  return result;
}

void sub_22264A1BC(_DWORD *a1)
{
  if ((*a1)-- == 1)
  {
    unsigned int v2 = (void *)sub_22264A1FC();
    j__free(v2);
  }
}

uint64_t sub_22264A200(uint64_t a1)
{
  return a1;
}

uint64_t sub_22264A22C(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_22264A26C(&v3);
  return a1;
}

uint64_t *sub_22264A26C(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_22264A2E4(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    unint64_t v9 = sub_22264A2EC(v6, v8);
    return (uint64_t *)sub_222615AA8(v5, v7, v9);
  }
  return result;
}

uint64_t sub_22264A2E4(uint64_t *a1)
{
  return sub_22264A32C((uint64_t)a1, *a1);
}

unint64_t sub_22264A2EC(void *a1, uint64_t a2)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 4);
}

uint64_t sub_22264A32C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_22264A394(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 48;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_22264A398(uint64_t a1, uint64_t a2)
{
  return sub_2225F8534(a2);
}

uint64_t sub_22264A3A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_22264A3CC(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_22264A40C(&v3);
  return a1;
}

uint64_t *sub_22264A40C(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_22264A484(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_222633B18(v6, v8);
    return (uint64_t *)sub_2225F9C04(v5, v7, v9);
  }
  return result;
}

uint64_t sub_22264A484(uint64_t *a1)
{
  return sub_222640C34((uint64_t)a1, *a1);
}

void **sub_22264A48C(void **a1)
{
  return a1;
}

uint64_t sub_22264A4BC(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_222646034();
    uint64_t v4 = sub_2225F9A1C();
    uint64_t v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_222608BD4(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_2225D085C(*v5, v4);
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
  }
  return result;
}

void **sub_22264A544(void **a1)
{
  return a1;
}

uint64_t sub_22264A574(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_222646034();
    uint64_t v4 = sub_2225F9A1C();
    uint64_t v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_222610CE0(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0)
        {
          uint64_t result = sub_2225D085C(*v5, v4);
          if ((result & 1) == 0) {
            uint64_t result = sub_2225E4E68(v5 + 1);
          }
        }
        v5 += 4;
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t sub_22264A608(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 8))(a2);
  }
  return result;
}

uint64_t *sub_22264A638(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (sub_222646144(a1, a2, &v6)) {
    return v6;
  }
  int v5 = 0;
  return sub_22264A694(a1, a2, &v5, v6);
}

uint64_t *sub_22264A694(uint64_t a1, uint64_t *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t result = sub_22264A6D0(a1, a2, a4);
  *uint64_t result = *a2;
  *((_DWORD *)result + 2) = *a3;
  return result;
}

uint64_t *sub_22264A6D0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_22264A7BC(a1, (2 * v6));
    sub_222646144(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_22264A7BC(a1, v7);
    sub_222646144(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_222646034();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_22264A7C0(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = *(void **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222609018(a1, *v5);
  if (v4)
  {
    sub_22264A84C(a1, (uint64_t)v4, (uint64_t)v4 + 16 * v3);
    j__free(v4);
  }
  else
  {
    sub_222646338(a1);
  }
}

uint64_t sub_22264A84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_222646338(a1);
  uint64_t v6 = sub_222646034();
  uint64_t result = sub_2225F9A1C();
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*(void *)a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*(void *)a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_222646144(a1, (uint64_t *)a2, &v9);
          *(void *)uint64_t v9 = *(void *)a2;
          *(_DWORD *)(v9 + 8) = *(_DWORD *)(a2 + 8);
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 16;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_22264A90C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1;
  uint64_t v3 = sub_2225D5874(&v5);
  return sub_22264A950(&v5, (a2 - v3) >> 3);
}

uint64_t sub_22264A950(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_2225DC33C(&v3, a2);
  return v3;
}

uint64_t sub_22264A984()
{
  sub_22264A9A0();
  return v0;
}

uint64_t sub_22264A9A8(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = &unk_26D4DC4B8;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = (_DWORD *)(a1 + 20);
  *(_DWORD *)(a1 + 23) = 0;
  sub_22262201C(a1 + 32);
  sub_2225D3DAC(a1 + 64);
  if (a2)
  {
    uint64_t v6 = sub_2225E8DD0(a2);
    *uint64_t v5 = sub_22260BB2C(v6);
  }
  return a1;
}

uint64_t sub_22264AA28(uint64_t a1, unsigned int *a2)
{
  *(unsigned char *)(a1 + 25) = 1;
  if (*(unsigned char *)(a1 + 26)) {
    (*(void (**)(uint64_t, unsigned int *))(*(void *)a1 + 24))(a1, a2);
  }
  else {
    sub_222649758(*(void *)(a1 + 8), a2);
  }
  *(unsigned char *)(a1 + 25) = 0;
  uint64_t result = sub_22261BABC((uint64_t)a2, 2);
  if (result)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    unsigned int v6 = sub_2225C3B40(a2);
    sub_22261CABC(v5, v6, 718, (uint64_t)v7);
    return sub_2225F37F0(v7);
  }
  return result;
}

uint64_t sub_22264AADC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  sub_2225F3278((_DWORD *)(a1 + 16));
  *(_DWORD *)(a1 + 20) = 4060;
  return a1;
}

uint64_t sub_22264AB14(uint64_t a1, void *__src, size_t __n, void *a4)
{
  unsigned int v5 = __n;
  unsigned int v8 = *(_DWORD *)(a1 + 20);
  if (__n + v8 - 4059 <= 0xFFFFF022)
  {
    sub_22264ABE0(a1, __n + 2);
    unsigned int v8 = *(_DWORD *)(a1 + 20);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  *(_DWORD *)(a1 + 20) = v8 + 1;
  *(unsigned char *)(v9 + v8) = 10;
  *a4 = *(void *)(a1 + 8) + *(unsigned int *)(a1 + 20);
  memcpy((void *)(*(void *)(a1 + 8) + *(unsigned int *)(a1 + 20)), __src, v5);
  unsigned int v10 = *(_DWORD *)(a1 + 20) + v5;
  *(_DWORD *)(a1 + 20) = v10 + 1;
  *(unsigned char *)(*(void *)(a1 + 8) + v10) = 0;
  int v11 = *(_DWORD *)(a1 + 20) + ~v5;

  return sub_22260C644((_DWORD *)(a1 + 16), v11);
}

unsigned char *sub_22264ABE0(uint64_t a1, unsigned int a2)
{
  if (a2 <= 0xFDC) {
    size_t v3 = 4060;
  }
  else {
    size_t v3 = a2;
  }
  sub_2225C3D00((int)v9, "<scratch space>");
  uint64_t v4 = sub_2225CD3E8(v3, v9[0], v9[1]);
  uint64_t v5 = *(void *)a1;
  sub_2225F3278(&v8);
  unsigned int v6 = sub_2226490F0(v5, v4, 0, 0, 0, v8);
  *(_DWORD *)(a1 + 16) = sub_22260DA24(*(void *)a1, v6);
  uint64_t result = (unsigned char *)sub_2225C3D04(v4);
  *(void *)(a1 + 8) = result;
  *(_DWORD *)(a1 + 20) = 1;
  *uint64_t result = 48;
  return result;
}

uint64_t sub_22264AC94(uint64_t a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5)
{
  sub_22264AE10(a1);
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = sub_2225C3B40(a2);
  *(_DWORD *)(a1 + 44) = a3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) & 0xFE | sub_22261BFBC((uint64_t)a2);
  if (sub_222620488((uint64_t)a2)) {
    char v10 = 2;
  }
  else {
    char v10 = 0;
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) & 0xF9 | v10;
  *(void *)(a1 + 24) = sub_222649EF4(*(void *)a1);
  *(unsigned char *)(a1 + 64) &= 0xE7u;
  uint64_t v11 = sub_22264AE7C(*(void *)a1);
  *(_DWORD *)(a1 + 32) = -1431655765 * ((unint64_t)(v11 - sub_222649EF4(*(void *)a1)) >> 3);
  sub_2225F3278(&v16);
  *(_DWORD *)(a1 + 48) = v16;
  uint64_t v12 = (_DWORD *)sub_2225E8DD0(*(void *)(a1 + 16));
  *(_DWORD *)(a1 + 52) = sub_22260DB60((uint64_t)v12);
  if (*(_DWORD *)(a1 + 32))
  {
    unsigned int v13 = sub_2225C3B40(*(unsigned int **)(a1 + 24));
    *(_DWORD *)(a1 + 56) = sub_2225F757C(v12, v13);
    int v14 = sub_22264AE84(*(void *)a1, v12);
    *(_DWORD *)(a1 + 60) = v14;
    *(_DWORD *)(a1 + 48) = sub_22260B3EC((uint64_t)v12, *(_DWORD *)(a1 + 56), *(_DWORD *)(a1 + 40), *(_DWORD *)(a1 + 44), v14, 0, 0);
  }
  if (sub_222627A98(*(void *)a1) && sub_2225F514C(*(void *)a1)) {
    sub_22264AE98(a1);
  }
  return sub_22264B540(*(void *)a1);
}

void *sub_22264AE10(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 64);
  if ((v2 & 8) != 0)
  {
    size_t v3 = *(void **)(a1 + 24);
    if (v3)
    {
      j__free(v3);
      char v2 = *(unsigned char *)(a1 + 64);
    }
    *(void *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 64) = v2 & 0xF7;
  }
  uint64_t result = *(void **)(a1 + 8);
  if (result)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    return (void *)sub_222625CDC(result, v5);
  }
  return result;
}

uint64_t sub_22264AE7C(uint64_t a1)
{
  return sub_2225C3D04(a1 + 24);
}

uint64_t sub_22264AE84(uint64_t a1, _DWORD *a2)
{
  if (*(_WORD *)(a1 + 244)) {
    return *(unsigned int *)(a1 + 240);
  }
  else {
    return sub_222627720(a1, a2);
  }
}

uint64_t sub_22264AE98(uint64_t a1)
{
  v64[387] = *(const void **)MEMORY[0x263EF8340];
  sub_22264B784(v64);
  int i = *(_DWORD *)(a1 + 32);
  if (!i) {
    return sub_2225C56C4(v64);
  }
  char v3 = 0;
  unsigned int v4 = 0;
  uint64_t v58 = (_DWORD *)(a1 + 40);
  int v59 = *(_DWORD *)(a1 + 32);
  do
  {
    uint64_t v5 = *(void *)(a1 + 24);
    unsigned int v6 = (unsigned int *)(v5 + 24 * v4);
    if (v4 && !sub_22261BABC(v5 + 24 * (v4 - 1), 66) && sub_222620488((uint64_t)v6)) {
      *(unsigned char *)(a1 + 64) |= 4u;
    }
    if (sub_22261BABC((uint64_t)v6, 65) || sub_22261BABC((uint64_t)v6, 67))
    {
      uint64_t v7 = *(void *)a1;
      uint64_t v8 = sub_22261AF2C(*(void *)(a1 + 24) + 24 * ++v4);
      unsigned int v9 = sub_222627ACC(v7, v8);
      int v10 = sub_2225C3B40(v6);
      unsigned int v11 = sub_22264B788(a1, v10);
      int v12 = sub_2225C3B40((unsigned int *)(*(void *)(a1 + 24) + 24 * v4));
      unsigned int v13 = sub_22264B788(a1, v12);
      sub_22261B6AC(v63);
      if (sub_22261BABC((uint64_t)v6, 65))
      {
        uint64_t v14 = sub_2226265F8(*(void *)(a1 + 8), v9, *(void *)(a1 + 16), v11, v13);
        unsigned int v15 = *(_DWORD *)(v14 + 15);
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v14;
      }
      else
      {
        int v16 = (unsigned int *)sub_222625C98(*(void *)(a1 + 8), v9);
        sub_222626164(v16, *(void *)(a1 + 16), 1, v11, v13, v62);
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v62;
        unsigned int v15 = *(_DWORD *)&v62[15];
      }
      *(unsigned int *)((char *)&v63[3] + 3) = v15;
      if ((*(unsigned char *)(a1 + 64) & 4) != 0) {
        sub_22261CCEC((uint64_t)v63, 2);
      }
      sub_22260BC64((uint64_t)v64, (uint64_t)v63);
      goto LABEL_15;
    }
    if (sub_2225CF1D0(v64))
    {
      BOOL v18 = 0;
      if (v4) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v20 = sub_2225E2698((uint64_t)v64);
      BOOL v18 = sub_22261BABC(v20, 66);
      if (v4)
      {
LABEL_22:
        BOOL v19 = sub_22261BABC(*(void *)(a1 + 24) + 24 * (v4 - 1), 66);
        goto LABEL_25;
      }
    }
    BOOL v19 = 0;
LABEL_25:
    BOOL v21 = v4 + 1 != i && sub_22261BABC(*(void *)(a1 + 24) + 24 * (v4 + 1), 66);
    uint64_t v22 = sub_22261AF2C((uint64_t)v6);
    if (!v22 || (unsigned int v23 = sub_222627ACC(*(void *)a1, v22), v23 == -1))
    {
      sub_22260BC64((uint64_t)v64, (uint64_t)v6);
      if ((*(unsigned char *)(a1 + 64) & 4) != 0)
      {
        uint64_t v26 = sub_2225E2698((uint64_t)v64);
        sub_22261CCEC(v26, 2);
        *(unsigned char *)(a1 + 64) &= ~4u;
        goto LABEL_38;
      }
      int i = v59;
      if (v19 && !v18)
      {
        uint64_t v25 = sub_2225E2698((uint64_t)v64);
        sub_22261F284(v25, 2);
      }
    }
    else
    {
      unsigned int v24 = v23;
      if (v19) {
        goto LABEL_40;
      }
      if (sub_22264B7DC(*(void *)(a1 + 8))
        && sub_22264B640(a1, v64, 0, *(void *)a1, v24, *(void *)(a1 + 16)))
      {
        char v3 = 1;
LABEL_38:
        int i = v59;
        goto LABEL_18;
      }
      if (v21)
      {
LABEL_40:
        unsigned __int8 v27 = (long long *)sub_222625C98(*(void *)(a1 + 8), v24);
        unsigned int v28 = sub_222625D88((uint64_t)v27);
        if (v28)
        {
          unsigned int v29 = v28;
          if (v18 && sub_222609DE8((uint64_t)v64) >= 2)
          {
            int v30 = sub_222609DE8((uint64_t)v64);
            uint64_t v31 = sub_222609E38((uint64_t)v64, v30 - 2);
            if (sub_22261BABC(v31, 64)
              && v24 == sub_2225F514C(*(void *)a1) - 1
              && sub_222643024(*(void *)a1))
            {
              uint64_t v32 = *(void *)(a1 + 16);
              sub_2225DE59C((uint64_t)v64, (uint64_t)v63);
              unsigned int v33 = sub_2225C3B40(v63);
              sub_22261CABC(v32, v33, 795, (uint64_t)v61);
              sub_2225F37F0(v61);
            }
          }
          sub_22264375C(v64, v27, (long long *)((char *)v27 + 24 * v29));
          unsigned int v34 = sub_222609DE8((uint64_t)v64) - v29;
          int v35 = sub_222609DE8((uint64_t)v64);
          for (int i = v59; v35 != v34; ++v34)
          {
            uint64_t v36 = sub_222609E38((uint64_t)v64, v34);
            if (sub_22261BABC(v36, 66)) {
              sub_22261F2AC(v36, 0);
            }
          }
          if (sub_2225CDBBC(v58))
          {
            int v37 = sub_2225C3B40(v6);
            char v38 = (unsigned int *)(sub_2225C3D04((uint64_t)v64) - 24 * v29);
            unint64_t v39 = sub_2225C3D04((uint64_t)v64);
            sub_22264B7E4(a1, v37, v38, v39);
          }
          char v17 = *(unsigned char *)(a1 + 64);
          if ((v17 & 4) != 0)
          {
            int v40 = sub_222609DE8((uint64_t)v64);
            uint64_t v41 = sub_222609E38((uint64_t)v64, v40 - v29);
            sub_22261CCEC(v41, 2);
            goto LABEL_15;
          }
          goto LABEL_16;
        }
        if (v21)
        {
          char v3 = 1;
          ++v4;
          goto LABEL_38;
        }
        if (v18) {
          sub_2225DD758((uint64_t)v64);
        }
        int i = v59;
        if (!sub_22264B7DC(*(void *)(a1 + 8))) {
          goto LABEL_17;
        }
        char v3 = 1;
        sub_22264B640(a1, v64, 1, *(void *)a1, v24, *(void *)(a1 + 16));
      }
      else
      {
        uint64_t v42 = (long long *)sub_222625C98(*(void *)(a1 + 8), v24);
        if (sub_222625DD8(*(void *)(a1 + 8), (uint64_t)v42, *(void *)(a1 + 16)))
        {
          uint64_t v43 = sub_222625EA4(*(void *)(a1 + 8), v24, *(void *)a1, *(void *)(a1 + 16));
          uint64_t v42 = (long long *)sub_2225D2440(v43, 0);
        }
        char v3 = 1;
        int i = v59;
        if (sub_22261CB34((uint64_t)v42, 1))
        {
          unsigned int v44 = sub_222609DE8((uint64_t)v64);
          unsigned int v45 = sub_222625D88((uint64_t)v42);
          sub_22264375C(v64, v42, (long long *)((char *)v42 + 24 * v45));
          uint64_t v46 = (void *)sub_222608330(*(void *)(a1 + 16));
          if (v45 == 1 && (*v46 & 4) != 0)
          {
            uint64_t v47 = sub_2225E2698((uint64_t)v64);
            if (sub_22261BABC(v47, 64))
            {
              uint64_t v48 = sub_2225E2698((uint64_t)v64);
              sub_22261CCEC(v48, 128);
            }
          }
          int v49 = sub_222609DE8((uint64_t)v64);
          for (unsigned int j = v44; v49 != j; ++j)
          {
            uint64_t v51 = sub_222609E38((uint64_t)v64, j);
            if (sub_22261BABC(v51, 66)) {
              sub_22261F2AC(v51, 0);
            }
          }
          if (sub_2225CDBBC(v58))
          {
            int v52 = sub_2225C3B40(v6);
            uint64_t v53 = (unsigned int *)(sub_2225C3C70((uint64_t)v64) + 24 * v44);
            unint64_t v54 = sub_2225C3D04((uint64_t)v64);
            sub_22264B7E4(a1, v52, v53, v54);
          }
          uint64_t v55 = sub_222609E38((uint64_t)v64, v44);
          sub_22261EE18(v55, 2, (*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
LABEL_15:
          char v17 = *(unsigned char *)(a1 + 64);
LABEL_16:
          *(unsigned char *)(a1 + 64) = v17 & 0xFB;
LABEL_17:
          char v3 = 1;
        }
      }
    }
LABEL_18:
    ++v4;
  }
  while (v4 != i);
  if (v3)
  {
    *(_DWORD *)(a1 + 32) = sub_222609DE8((uint64_t)v64);
    uint64_t v56 = *(void *)(a1 + 16);
    sub_2226435FC(v60, v64);
    *(void *)(a1 + 24) = sub_222643600(v56, a1, v60[0], v60[1]);
    *(unsigned char *)(a1 + 64) &= ~8u;
  }
  return sub_2225C56C4(v64);
}

uint64_t sub_22264B540(uint64_t result)
{
  *(_WORD *)(result + 244) |= 0x40u;
  return result;
}

uint64_t sub_22264B550(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  sub_22264AE10(a1);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = a2;
  if (a5) {
    char v10 = 8;
  }
  else {
    char v10 = 0;
  }
  if (a4) {
    char v11 = 16;
  }
  else {
    char v11 = 0;
  }
  *(unsigned char *)(a1 + 64) = v10 | v11 | *(unsigned char *)(a1 + 64) & 0xE7;
  *(_DWORD *)(a1 + 32) = a3;
  *(_DWORD *)(a1 + 36) = 0;
  sub_2225F3278(&v16);
  int v12 = v16;
  *(_DWORD *)(a1 + 40) = v16;
  *(_DWORD *)(a1 + 44) = v12;
  *(unsigned char *)(a1 + 64) &= 0xF8u;
  uint64_t result = (uint64_t)sub_2225F3278(&v15);
  *(_DWORD *)(a1 + 48) = v15;
  if (a3)
  {
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) & 0xFE | sub_22261BFBC(a2);
    uint64_t result = sub_222620488(a2);
    if (result) {
      char v14 = 2;
    }
    else {
      char v14 = 0;
    }
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) & 0xFD | v14;
  }
  return result;
}

BOOL sub_22264B640(uint64_t a1, void *a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  BOOL result = sub_222643024(a4);
  if (result)
  {
    if (sub_2225F514C(a4) - 1 == a5
      && ((a3 & 1) != 0 || (*(unsigned char *)sub_222608330(a6) & 4) != 0)
      && ((*(unsigned char *)sub_222608330(a6) & 1) == 0
       || (*(unsigned char *)(sub_222608330(a6) + 2) & 0x80) != 0
       || sub_2225F514C(a4) >= 2)
      && !sub_2225CF1D0(a2))
    {
      uint64_t v13 = sub_2225E2698((uint64_t)a2);
      BOOL result = sub_22261BABC(v13, 64);
      if (result)
      {
        if (a3)
        {
          char v14 = (unsigned int *)sub_2225E2698((uint64_t)a2);
          unsigned int v15 = sub_2225C3B40(v14);
          sub_22261CABC(a6, v15, 795, (uint64_t)v17);
          sub_2225F37F0(v17);
        }
        sub_2225DD758((uint64_t)a2);
        if (!sub_2225CF1D0(a2))
        {
          uint64_t v16 = sub_2225E2698((uint64_t)a2);
          if (sub_22261BABC(v16, 66)) {
            sub_2225DD758((uint64_t)a2);
          }
        }
        *(unsigned char *)(a1 + 64) &= ~4u;
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22264B788(uint64_t a1, int a2)
{
  uint64_t v4 = sub_2225E8DD0(*(void *)(a1 + 16));
  int v6 = 0;
  sub_22264C37C(v4, a2, *(_DWORD *)(a1 + 56), *(_DWORD *)(a1 + 60), &v6);
  return sub_22260C644((_DWORD *)(a1 + 48), v6);
}

uint64_t sub_22264B7DC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

_DWORD *sub_22264B7E4(uint64_t a1, int a2, unsigned int *a3, unint64_t a4)
{
  uint64_t v5 = a3;
  char v14 = a3;
  uint64_t v8 = sub_2225E8DD0(*(void *)(a1 + 16));
  BOOL result = (_DWORD *)sub_22264B788(a1, a2);
  if ((unint64_t)v5 < a4)
  {
    unsigned int v10 = result;
    while (a4 - (void)v5 != 24)
    {
      BOOL result = (_DWORD *)sub_22264C3E4(v8, v10, &v14, a4);
      uint64_t v5 = v14;
      if ((unint64_t)v14 >= a4) {
        return result;
      }
    }
    unsigned int v11 = sub_2225C3B40(v5);
    int v12 = sub_222613380((uint64_t)v5);
    int v13 = sub_22260BCDC(v8, v11, v10, v12);
    return sub_2225D0A60(v5, v13);
  }
  return result;
}

uint64_t sub_22264B8D4(uint64_t a1, unsigned int *a2)
{
  if (!sub_22264BBA0(a1))
  {
    uint64_t v6 = sub_2225E8DD0(*(void *)(a1 + 16));
    unsigned int v7 = *(_DWORD *)(a1 + 36);
    uint64_t v8 = *(void *)(a1 + 24);
    *(_DWORD *)(a1 + 36) = v7 + 1;
    uint64_t v9 = v8 + 24 * v7;
    unsigned int v10 = *(_DWORD *)(v9 + 15);
    *(_OWORD *)a2 = *(_OWORD *)v9;
    *(unsigned int *)((char *)a2 + 15) = v10;
    if (!sub_22264BBA0(a1)
      && sub_22261BABC(*(void *)(a1 + 24) + 24 * *(unsigned int *)(a1 + 36), 66)
      && *(void *)a1)
    {
      if (sub_22264BBC0(a1, a2)) {
        return 1;
      }
      int v11 = 0;
    }
    else
    {
      int v11 = 1;
    }
    if (sub_2225CDBBC((_DWORD *)(a1 + 40)))
    {
      int v12 = sub_2225C3B40(a2);
      if (sub_22264C1F8(v6, v12, *(_DWORD *)(a1 + 52)))
      {
        sub_2225F3278(&v23);
        BOOL v13 = sub_22261BABC((uint64_t)a2, 5);
        int v14 = sub_2225C3B40(a2);
        unsigned int v15 = v14;
        if (v13)
        {
          unsigned int v16 = *(_DWORD *)(a1 + 40);
          unsigned int v17 = *(_DWORD *)(a1 + 44);
          int v18 = sub_222613380((uint64_t)a2);
          int v19 = sub_22260B3EC(v6, v15, v16, v17, v18, 0, 0);
        }
        else
        {
          int v19 = sub_22264B788(a1, v14);
        }
        int v23 = v19;
        sub_2225D0A60(a2, v19);
      }
    }
    char v20 = *(unsigned char *)(a1 + 64);
    if (v7)
    {
      if (*(unsigned char *)(a1 + 64))
      {
        sub_22261CCEC((uint64_t)a2, 1);
        char v20 = *(unsigned char *)(a1 + 64);
      }
      if ((v20 & 2) != 0) {
        sub_22261CCEC((uint64_t)a2, 2);
      }
    }
    else
    {
      sub_22261EE18((uint64_t)a2, 1, v20 & 1);
      sub_22261EE18((uint64_t)a2, 2, (*(unsigned __int8 *)(a1 + 64) >> 1) & 1);
    }
    *(unsigned char *)(a1 + 64) &= 0xFCu;
    if (!sub_2226450E4((uint64_t)a2) && sub_22261AF2C((uint64_t)a2))
    {
      BOOL v21 = (_DWORD *)sub_22261AF2C((uint64_t)a2);
      __int16 v22 = sub_22263E560(v21);
      sub_22261F2AC((uint64_t)a2, v22);
      if (((v11 | sub_2226074B4((uint64_t)v21) ^ 1) & 1) == 0) {
        sub_2226492DC(*(void *)(a1 + 16), a2);
      }
      if ((*(unsigned char *)(a1 + 64) & 0x10) == 0 && sub_22261DC54((uint64_t)v21)) {
        return sub_222649488(*(void *)(a1 + 16), a2);
      }
    }
    return 1;
  }
  if (*(void *)a1) {
    sub_22264BBB0(*(void *)a1);
  }
  sub_22261FB44((uint64_t)a2);
  sub_22261EE18((uint64_t)a2, 1, *(unsigned char *)(a1 + 64) & 1);
  sub_22261EE18((uint64_t)a2, 2, (*(unsigned char *)(a1 + 64) & 6) != 0);
  if (!*(_DWORD *)(a1 + 36)) {
    sub_22261CCEC((uint64_t)a2, 16);
  }
  uint64_t v4 = *(void *)(a1 + 16);

  return sub_222640708(v4, a2);
}

BOOL sub_22264BBA0(uint64_t a1)
{
  return *(_DWORD *)(a1 + 36) == *(_DWORD *)(a1 + 32);
}

uint64_t sub_22264BBB0(uint64_t result)
{
  *(_WORD *)(result + 244) &= ~0x40u;
  return result;
}

uint64_t sub_22264BBC0(uint64_t a1, unsigned int *a2)
{
  v57[51] = *MEMORY[0x263EF8340];
  sub_2225CF794(v56);
  unsigned int v55 = sub_2225C3B40(a2);
  sub_2225F3278(&v54);
  while (1)
  {
    unsigned int v54 = sub_2225C3B40((unsigned int *)(*(void *)(a1 + 24) + 24 * *(unsigned int *)(a1 + 36)));
    unsigned int v4 = *(_DWORD *)(a1 + 36) + 1;
    *(_DWORD *)(a1 + 36) = v4;
    uint64_t v5 = (unsigned int *)(*(void *)(a1 + 24) + 24 * v4);
    int v6 = sub_222613380((uint64_t)a2);
    int v7 = sub_222613380((uint64_t)v5);
    sub_2225CF670(v56, v7 + v6);
    __src = 0;
    __src = (void *)sub_2225C5698((uint64_t)v56, 0);
    char v52 = 0;
    unsigned int v8 = sub_222626584(*(void *)(a1 + 16), a2, (uint64_t *)&__src, &v52);
    uint64_t v9 = __src;
    if (v9 != (void *)sub_2225C5698((uint64_t)v56, 0))
    {
      unsigned int v10 = (void *)sub_2225C5698((uint64_t)v56, 0);
      memcpy(v10, __src, v8);
    }
    if (v52) {
      goto LABEL_24;
    }
    __src = (void *)sub_2225C5698((uint64_t)v56, v8);
    unsigned int v11 = sub_222626584(*(void *)(a1 + 16), v5, (uint64_t *)&__src, &v52);
    if (v52) {
      goto LABEL_24;
    }
    unsigned int v12 = v11;
    BOOL v13 = __src;
    if (v13 != (void *)sub_2225C5698((uint64_t)v56, v8))
    {
      int v14 = (void *)sub_2225C5698((uint64_t)v56, v8);
      memcpy(v14, __src, v12);
    }
    sub_2225CF670(v56, v12 + v8);
    sub_22261B6AC(v51);
    sub_22261FB44((uint64_t)v51);
    sub_22261F2AC((uint64_t)v51, 13);
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v16 = sub_2225CE27C((uint64_t)v56);
    uint64_t v18 = v17;
    sub_2225F3278(&v50);
    sub_2225F3278(&v49);
    sub_222648E1C(v15, v16, v18, v51, v50, v49);
    int v19 = sub_2225C3B40(v51);
    uint64_t v20 = sub_2225C3D04((uint64_t)v51);
    sub_22261B6AC(v48);
    if (!sub_22264C258((uint64_t)a2) || !sub_22264C258((uint64_t)v5)) {
      break;
    }
    sub_22264C280(*(void *)(a1 + 16), 1);
    sub_22261FB44((uint64_t)v48);
    sub_22261F2AC((uint64_t)v48, 7);
    sub_2225C5B6C((uint64_t)v48, v20);
    sub_2225D0A60(v48, v19);
    sub_222612BA8((uint64_t)v48, v12 + v8);
LABEL_17:
    int v30 = sub_22261BFBC((uint64_t)a2);
    sub_22261EE18((uint64_t)v48, 1, v30);
    int v31 = sub_222620488((uint64_t)a2);
    sub_22261EE18((uint64_t)v48, 2, v31);
    ++*(_DWORD *)(a1 + 36);
    *(_OWORD *)a2 = *(_OWORD *)v48;
    *(unsigned int *)((char *)a2 + 15) = *(_DWORD *)&v48[15];
    if (sub_22264BBA0(a1) || !sub_22261BABC(*(void *)(a1 + 24) + 24 * *(unsigned int *)(a1 + 36), 66)) {
      goto LABEL_31;
    }
  }
  sub_22264C280(*(void *)(a1 + 16), 0);
  BOOL v21 = (_DWORD *)sub_2225E8DD0(*(void *)(a1 + 16));
  unsigned int v22 = sub_222609AF8(v21, v19);
  unsigned __int8 v47 = 0;
  unsigned int v23 = v22;
  v57[0] = sub_22260C090((uint64_t)v21, v22, &v47);
  v57[1] = v24;
  uint64_t v25 = sub_2225C3C70((uint64_t)v57);
  if (v47) {
    goto LABEL_41;
  }
  uint64_t v26 = v25;
  int v27 = sub_22260DA24((uint64_t)v21, v23);
  uint64_t v28 = sub_222608330(*(void *)(a1 + 16));
  sub_22261B25C((uint64_t)v57, v27, v28, v26, v20, v20 + v8 + v12);
  BOOL v29 = sub_22261B6B0((uint64_t)v57, (uint64_t)v48);
  if (!sub_22261BABC((uint64_t)v48, 1) && v29)
  {
    if (sub_22261BABC((uint64_t)v48, 66)) {
      sub_22261F2AC((uint64_t)v48, 0);
    }
    sub_22261B864(v57);
    goto LABEL_17;
  }
  if ((*(unsigned char *)sub_222608330(*(void *)(a1 + 16)) & 8) != 0
    && sub_22261BABC((uint64_t)a2, 42)
    && sub_22261BABC((uint64_t)v5, 42))
  {
    sub_22264C2A4((uint64_t *)a1, a2);
    sub_22261B864(v57);
LABEL_24:
    uint64_t v32 = 1;
    goto LABEL_42;
  }
  if ((*(unsigned char *)(sub_222608330(*(void *)(a1 + 16)) + 2) & 0x40) == 0)
  {
    uint64_t v33 = sub_2225E8DD0(*(void *)(a1 + 16));
    unsigned int v34 = sub_22260B3EC(v33, v54, *(_DWORD *)(a1 + 40), *(_DWORD *)(a1 + 44), 2, 0, 0);
    uint64_t v35 = *(void *)(a1 + 16);
    if ((*(void *)sub_222608330(v35) & 8) != 0) {
      int v36 = 796;
    }
    else {
      int v36 = 700;
    }
    sub_22261CABC(v35, v34, v36, (uint64_t)v46);
    uint64_t v37 = sub_2225CA4D0((uint64_t)v56);
    sub_2225F3774(v46, v37, v38);
    sub_2225F37F0(v46);
  }
  sub_22261B864(v57);
LABEL_31:
  LODWORD(v57[0]) = sub_2225C3B40((unsigned int *)(*(void *)(a1 + 24) + 24
                                                                        * (*(_DWORD *)(a1 + 36) - 1)));
  unint64_t v39 = (_DWORD *)sub_2225E8DD0(*(void *)(a1 + 16));
  if (sub_2225F7FD8(&v55)) {
    unsigned int v55 = sub_22264B788(a1, v55);
  }
  if (sub_2225F7FD8(v57)) {
    LODWORD(v57[0]) = sub_22264B788(a1, v57[0]);
  }
  v51[0] = sub_222609AF8(v39, *(_DWORD *)(a1 + 48));
  for (*(_DWORD *)uint64_t v48 = sub_222609AF8(v39, v55); sub_22260EC60(v48, v51); *(_DWORD *)uint64_t v48 = sub_222609AF8(v39, v55))
    unsigned int v55 = sub_22260C7BC(v39, v55);
  for (*(_DWORD *)uint64_t v48 = sub_222609AF8(v39, v57[0]); sub_22260EC60(v48, v51); *(_DWORD *)uint64_t v48 = sub_222609AF8(v39, v57[0]))LODWORD(v57[0]) = (unint64_t)sub_22260C7BC(v39, v57[0]) >> 32;
  unsigned int v40 = sub_2225C3B40(a2);
  unsigned int v41 = v55;
  unsigned int v42 = v57[0];
  int v43 = sub_222613380((uint64_t)a2);
  int v44 = sub_22260B3EC((uint64_t)v39, v40, v41, v42, v43, 0, 0);
  sub_2225D0A60(a2, v44);
  if (sub_22261BABC((uint64_t)a2, 7)) {
    sub_222649194(*(void *)(a1 + 16), a2);
  }
LABEL_41:
  uint64_t v32 = 0;
LABEL_42:
  sub_2225CA520(v56);
  return v32;
}

BOOL sub_22264C1F8(uint64_t a1, int a2, unsigned int a3)
{
  int v8 = a2;
  unsigned int v5 = sub_222609D0C(&v8);
  unsigned int v6 = *(_DWORD *)(a1 + 500);
  if (v6 > a3 != v5 >= v6) {
    return v5 < a3;
  }
  else {
    return v5 >= v6;
  }
}

BOOL sub_22264C258(uint64_t a1)
{
  __int16 v1 = sub_22261BFB4(a1);

  return sub_22264C5C8(v1);
}

uint64_t sub_22264C280(uint64_t result, int a2)
{
  if (a2) {
    ++*(_DWORD *)(result + 1384);
  }
  else {
    ++*(_DWORD *)(result + 1380);
  }
  return result;
}

uint64_t sub_22264C2A4(uint64_t *a1, unsigned int *a2)
{
  sub_22264BBB0(*a1);
  uint64_t v4 = a1[2];

  return sub_22264086C(v4, a2);
}

uint64_t sub_22264C2E8(uint64_t a1)
{
  if (sub_22264BBA0(a1)) {
    return 2;
  }
  else {
    return sub_22261BABC(*(void *)(a1 + 24) + 24 * *(unsigned int *)(a1 + 36), 21);
  }
}

BOOL sub_22264C330(uint64_t a1)
{
  BOOL result = sub_22261BABC(*(void *)(a1 + 24) + 24 * (*(_DWORD *)(a1 + 32) - 1), 2);
  if (result) {
    return !sub_22264BBA0(a1);
  }
  return result;
}

BOOL sub_22264C37C(uint64_t a1, int a2, int a3, int a4, _DWORD *a5)
{
  int v12 = a3;
  int v13 = a2;
  unsigned int v7 = sub_222609D0C(&v13);
  unsigned int v8 = sub_222609D0C(&v12);
  int v9 = v7 - v8;
  BOOL result = v7 >= v8 && v7 < v8 + a4;
  if (a5)
  {
    if (result) {
      *a5 = v9;
    }
  }
  return result;
}

uint64_t sub_22264C3E4(uint64_t a1, unsigned int a2, unsigned int **a3, unint64_t a4)
{
  int v8 = sub_2225C3B40(*a3);
  int v24 = v8;
  int v9 = *a3;
  unint64_t v10 = (unint64_t)(*a3 + 6);
  if (v10 < a4)
  {
    while (1)
    {
      unint64_t v10 = (unint64_t)(v9 + 6);
      int v23 = sub_2225C3B40(v9 + 6);
      BOOL v11 = sub_2225F7FD8(&v24);
      if (v11 != sub_2225F7FD8(&v23)) {
        break;
      }
      unsigned int v22 = 0;
      if (!sub_22264C5D8(a1, v24, v23, &v22) || v22 >= 0x33)
      {
        unint64_t v10 = (unint64_t)(v9 + 6);
        break;
      }
      int v24 = v23;
      int v12 = v9 + 6;
      int v13 = v9 + 12;
      v9 += 6;
      if ((unint64_t)v13 >= a4)
      {
        unint64_t v10 = (unint64_t)(v12 + 6);
        int v9 = v12;
        break;
      }
    }
  }
  int v23 = 0;
  int v14 = sub_2225C3B40(v9);
  sub_22264C5D8(a1, v8, v14, &v23);
  int v15 = v23;
  int v16 = sub_222613380((uint64_t)v9);
  uint64_t result = sub_22260BCDC(a1, v8, a2, v16 + v15);
  unsigned int v22 = result;
  for (int i = *a3; (unint64_t)i < v10; *a3 = i)
  {
    int v21 = 0;
    int v19 = sub_2225C3B40(i);
    sub_22264C5D8(a1, v8, v19, &v21);
    int v20 = sub_22260C644(&v22, v21);
    uint64_t result = (uint64_t)sub_2225D0A60(i, v20);
    int i = *a3 + 6;
  }
  return result;
}

uint64_t sub_22264C568(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) & 0xFE | sub_22261BFBC(a2);
  uint64_t result = sub_222620488(a2);
  if (result) {
    char v5 = 2;
  }
  else {
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) & 0xFD | v5;
  return result;
}

BOOL sub_22264C5C8(__int16 a1)
{
  return (a1 & 0xFFFE) == 6;
}

uint64_t sub_22264C5D8(uint64_t a1, int a2, int a3, _DWORD *a4)
{
  int v10 = a3;
  int v11 = a2;
  unsigned int v6 = sub_222609D0C(&v11);
  unsigned int v7 = sub_222609D0C(&v10);
  uint64_t v8 = (v6 < *(_DWORD *)(a1 + 500)) ^ (v7 >= *(_DWORD *)(a1 + 500));
  if (a4 && v8) {
    *a4 = v7 - v6;
  }
  return v8;
}

uint64_t sub_22264C650(uint64_t a1)
{
  return sub_2226109F8(a1, 0x80u);
}

uint64_t sub_22264C658()
{
  uint64_t v0 = off_26B5C7A38;
  if ((*(unsigned char *)off_26B5C7A38(&off_26B5C7A38) & 1) == 0)
  {
    uint64_t v8 = (void *)sub_2225C26A4(136);
    sub_2225E0EC4(v8);
    int v9 = (void *)off_26B5C7A20();
    sub_2225CDDC8((uint64_t)v9, (uint64_t)v8);
    _tlv_atexit((void (__cdecl *)(void *))sub_22264C80C, v9);
    *(unsigned char *)v0(&off_26B5C7A38) = 1;
  }
  __int16 v1 = off_26B5C7A68;
  if ((*(unsigned char *)off_26B5C7A68(&off_26B5C7A68) & 1) == 0)
  {
    uint64_t v10 = sub_2225C26A4(32);
    int v11 = sub_2225C3A4C(0x52uLL);
    uint64_t v12 = off_26B5C7A20();
    uint64_t v14 = sub_2225CBA80(v12, v13);
    sub_22264C810(v10, v11, v14);
    int v15 = (void *)off_26B5C7A50(&off_26B5C7A50);
    sub_2225CDDC8((uint64_t)v15, v10);
    _tlv_atexit((void (__cdecl *)(void *))sub_22264C814, v15);
    *(unsigned char *)v1(&off_26B5C7A68) = 1;
  }
  char v2 = (unsigned char *)off_26B5C7A80();
  int v3 = *v2;
  uint64_t v4 = off_26B5C7A50(&off_26B5C7A50);
  uint64_t result = sub_2225CBA80(v4, v5);
  if (v3)
  {
    sub_22264C818(result);
    *char v2 = 0;
    return sub_2225CBA80(v4, v7);
  }
  return result;
}

_WORD *sub_22264C818(uint64_t a1)
{
  sub_2225C3D00((int)v81, "ci_outColorF");
  *(_WORD *)sub_22264D714(a1, v81[0], v81[1]) = 1;
  sub_2225C3D00((int)v80, "ci_outColorH");
  *(_WORD *)sub_22264D714(a1, v80[0], v80[1]) = 2;
  sub_2225C3D00((int)v79, "radians");
  *(_WORD *)sub_22264D714(a1, v79[0], v79[1]) = 3;
  sub_2225C3D00((int)v78, "degrees");
  *(_WORD *)sub_22264D714(a1, v78[0], v78[1]) = 4;
  sub_2225C3D00((int)v77, "sin");
  *(_WORD *)sub_22264D714(a1, v77[0], v77[1]) = 5;
  sub_2225C3D00((int)v76, "cos");
  *(_WORD *)sub_22264D714(a1, v76[0], v76[1]) = 6;
  sub_2225C3D00((int)v75, "tan");
  *(_WORD *)sub_22264D714(a1, v75[0], v75[1]) = 7;
  sub_2225C3D00((int)v74, "asin");
  *(_WORD *)sub_22264D714(a1, v74[0], v74[1]) = 8;
  sub_2225C3D00((int)v73, "acos");
  *(_WORD *)sub_22264D714(a1, v73[0], v73[1]) = 9;
  sub_2225C3D00((int)v72, "atan");
  *(_WORD *)sub_22264D714(a1, v72[0], v72[1]) = 10;
  sub_2225C3D00((int)v71, "sinh");
  *(_WORD *)sub_22264D714(a1, v71[0], v71[1]) = 12;
  sub_2225C3D00((int)v70, "cosh");
  *(_WORD *)sub_22264D714(a1, v70[0], v70[1]) = 13;
  sub_2225C3D00((int)v69, "tanh");
  *(_WORD *)sub_22264D714(a1, v69[0], v69[1]) = 14;
  sub_2225C3D00((int)v68, "asinh");
  *(_WORD *)sub_22264D714(a1, v68[0], v68[1]) = 15;
  sub_2225C3D00((int)v67, "acosh");
  *(_WORD *)sub_22264D714(a1, v67[0], v67[1]) = 16;
  sub_2225C3D00((int)v66, "atanh");
  *(_WORD *)sub_22264D714(a1, v66[0], v66[1]) = 17;
  sub_2225C3D00((int)v65, "pow");
  *(_WORD *)sub_22264D714(a1, v65[0], v65[1]) = 18;
  sub_2225C3D00((int)v64, "exp");
  *(_WORD *)sub_22264D714(a1, v64[0], v64[1]) = 19;
  sub_2225C3D00((int)v63, "log");
  *(_WORD *)sub_22264D714(a1, v63[0], v63[1]) = 20;
  sub_2225C3D00((int)v62, "exp2");
  *(_WORD *)sub_22264D714(a1, v62[0], v62[1]) = 21;
  sub_2225C3D00((int)v61, "log2");
  *(_WORD *)sub_22264D714(a1, v61[0], v61[1]) = 22;
  sub_2225C3D00((int)v60, "sqrt");
  *(_WORD *)sub_22264D714(a1, v60[0], v60[1]) = 23;
  sub_2225C3D00((int)v59, "inversesqrt");
  *(_WORD *)sub_22264D714(a1, v59[0], v59[1]) = 24;
  sub_2225C3D00((int)v58, "abs");
  *(_WORD *)sub_22264D714(a1, v58[0], v58[1]) = 25;
  sub_2225C3D00((int)v57, "sign");
  *(_WORD *)sub_22264D714(a1, v57[0], v57[1]) = 26;
  sub_2225C3D00((int)v56, "floor");
  *(_WORD *)sub_22264D714(a1, v56[0], v56[1]) = 27;
  sub_2225C3D00((int)v55, "trunc");
  *(_WORD *)sub_22264D714(a1, v55[0], v55[1]) = 28;
  sub_2225C3D00((int)v54, "round");
  *(_WORD *)sub_22264D714(a1, v54[0], v54[1]) = 29;
  sub_2225C3D00((int)v53, "roundEven");
  *(_WORD *)sub_22264D714(a1, v53[0], v53[1]) = 30;
  sub_2225C3D00((int)v52, "ceil");
  *(_WORD *)sub_22264D714(a1, v52[0], v52[1]) = 31;
  sub_2225C3D00((int)v51, "fract");
  *(_WORD *)sub_22264D714(a1, v51[0], v51[1]) = 32;
  sub_2225C3D00((int)v50, "mod");
  *(_WORD *)sub_22264D714(a1, v50[0], v50[1]) = 33;
  sub_2225C3D00((int)v49, "modf");
  *(_WORD *)sub_22264D714(a1, v49[0], v49[1]) = 34;
  sub_2225C3D00((int)v48, "min");
  *(_WORD *)sub_22264D714(a1, v48[0], v48[1]) = 35;
  sub_2225C3D00((int)v47, "max");
  *(_WORD *)sub_22264D714(a1, v47[0], v47[1]) = 36;
  sub_2225C3D00((int)v46, "clamp");
  *(_WORD *)sub_22264D714(a1, v46[0], v46[1]) = 37;
  sub_2225C3D00((int)v45, "mix");
  *(_WORD *)sub_22264D714(a1, v45[0], v45[1]) = 38;
  sub_2225C3D00((int)v44, "step");
  *(_WORD *)sub_22264D714(a1, v44[0], v44[1]) = 40;
  sub_2225C3D00((int)v43, "smoothstep");
  *(_WORD *)sub_22264D714(a1, v43[0], v43[1]) = 41;
  sub_2225C3D00((int)v42, "isnan");
  *(_WORD *)sub_22264D714(a1, v42[0], v42[1]) = 42;
  sub_2225C3D00((int)v41, "isinf");
  *(_WORD *)sub_22264D714(a1, v41[0], v41[1]) = 43;
  sub_2225C3D00((int)v40, "floatBitsToInt");
  *(_WORD *)sub_22264D714(a1, v40[0], v40[1]) = 44;
  sub_2225C3D00((int)v39, "floatBitsToUint");
  *(_WORD *)sub_22264D714(a1, v39[0], v39[1]) = 45;
  sub_2225C3D00((int)v38, "intBitsToFloat");
  *(_WORD *)sub_22264D714(a1, v38[0], v38[1]) = 46;
  sub_2225C3D00((int)v37, "uintBitsToFloat");
  *(_WORD *)sub_22264D714(a1, v37[0], v37[1]) = 47;
  sub_2225C3D00((int)v36, "packSnorm2x16");
  *(_WORD *)sub_22264D714(a1, v36[0], v36[1]) = 48;
  sub_2225C3D00((int)v35, "unpackSnorm2x16");
  *(_WORD *)sub_22264D714(a1, v35[0], v35[1]) = 49;
  sub_2225C3D00((int)v34, "packUnorm2x16");
  *(_WORD *)sub_22264D714(a1, v34[0], v34[1]) = 50;
  sub_2225C3D00((int)v33, "unpackUnorm2x16");
  *(_WORD *)sub_22264D714(a1, v33[0], v33[1]) = 51;
  sub_2225C3D00((int)v32, "packHalf2x16");
  *(_WORD *)sub_22264D714(a1, v32[0], v32[1]) = 52;
  sub_2225C3D00((int)v31, "unpackHalf2x16");
  *(_WORD *)sub_22264D714(a1, v31[0], v31[1]) = 53;
  sub_2225C3D00((int)v30, "length");
  *(_WORD *)sub_22264D714(a1, v30[0], v30[1]) = 54;
  sub_2225C3D00((int)v29, "distance");
  *(_WORD *)sub_22264D714(a1, v29[0], v29[1]) = 55;
  sub_2225C3D00((int)v28, "dot");
  *(_WORD *)sub_22264D714(a1, v28[0], v28[1]) = 56;
  sub_2225C3D00((int)v27, "cross");
  *(_WORD *)sub_22264D714(a1, v27[0], v27[1]) = 57;
  sub_2225C3D00((int)v26, "normalize");
  *(_WORD *)sub_22264D714(a1, v26[0], v26[1]) = 58;
  sub_2225C3D00((int)v25, "faceforward");
  *(_WORD *)sub_22264D714(a1, v25[0], v25[1]) = 59;
  sub_2225C3D00((int)v24, "reflect");
  *(_WORD *)sub_22264D714(a1, v24[0], v24[1]) = 60;
  sub_2225C3D00((int)v23, "refract");
  *(_WORD *)sub_22264D714(a1, v23[0], v23[1]) = 61;
  sub_2225C3D00((int)v22, "matrixCompMult");
  *(_WORD *)sub_22264D714(a1, v22[0], v22[1]) = 62;
  sub_2225C3D00((int)v21, "outerProduct");
  *(_WORD *)sub_22264D714(a1, v21[0], v21[1]) = 63;
  sub_2225C3D00((int)v20, "transpose");
  *(_WORD *)sub_22264D714(a1, v20[0], v20[1]) = 64;
  sub_2225C3D00((int)v19, "determinant");
  *(_WORD *)sub_22264D714(a1, v19[0], v19[1]) = 65;
  sub_2225C3D00((int)v18, "inverse");
  *(_WORD *)sub_22264D714(a1, v18[0], v18[1]) = 66;
  sub_2225C3D00((int)v17, "lessThan");
  *(_WORD *)sub_22264D714(a1, v17[0], v17[1]) = 67;
  sub_2225C3D00((int)v16, "lessThanEqual");
  *(_WORD *)sub_22264D714(a1, v16[0], v16[1]) = 68;
  sub_2225C3D00((int)v15, "greaterThan");
  *(_WORD *)sub_22264D714(a1, v15[0], v15[1]) = 69;
  sub_2225C3D00((int)v14, "greaterThanEqual");
  *(_WORD *)sub_22264D714(a1, v14[0], v14[1]) = 70;
  sub_2225C3D00((int)v13, "equal");
  *(_WORD *)sub_22264D714(a1, v13[0], v13[1]) = 71;
  sub_2225C3D00((int)v12, "notEqual");
  *(_WORD *)sub_22264D714(a1, v12[0], v12[1]) = 72;
  sub_2225C3D00((int)v11, "any");
  *(_WORD *)sub_22264D714(a1, v11[0], v11[1]) = 73;
  sub_2225C3D00((int)v10, "all");
  *(_WORD *)sub_22264D714(a1, v10[0], v10[1]) = 74;
  sub_2225C3D00((int)v9, "not");
  *(_WORD *)sub_22264D714(a1, v9[0], v9[1]) = 75;
  sub_2225C3D00((int)v8, "$assert");
  *(_WORD *)sub_22264D714(a1, v8[0], v8[1]) = 76;
  sub_2225C3D00((int)v7, "sample");
  *(_WORD *)sub_22264D714(a1, v7[0], v7[1]) = 77;
  sub_2225C3D00((int)v6, "samplerTransform");
  *(_WORD *)sub_22264D714(a1, v6[0], v6[1]) = 78;
  sub_2225C3D00((int)v5, "samplerExtent");
  *(_WORD *)sub_22264D714(a1, v5[0], v5[1]) = 79;
  sub_2225C3D00((int)v4, "samplerCoord");
  *(_WORD *)sub_22264D714(a1, v4[0], v4[1]) = 80;
  sub_2225C3D00((int)v3, "texture2D");
  uint64_t result = (_WORD *)sub_22264D714(a1, v3[0], v3[1]);
  *uint64_t result = 81;
  return result;
}

void sub_22264D3E0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_0();

  j__free(v0);
}

unsigned int *sub_22264D408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = sub_22264D470(*(void **)(a1 + 24), a2, a3);
  if (!v6) {
    return 0;
  }
  int v7 = v6;
  uint64_t v8 = sub_222607508(*(void *)(a1 + 16), a2, a3);
  sub_2225F2F3C(v8, v7);
  return v8;
}

uint64_t sub_22264D470(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222608718(a1, a2, a3);
  uint64_t v5 = sub_222607264((uint64_t)a1);
  uint64_t result = sub_2225DE624(&v6, &v5);
  if (result) {
    return *(unsigned __int16 *)(sub_2225E4210((uint64_t)&v6) + 4);
  }
  return result;
}

uint64_t sub_22264D4C8(uint64_t a1)
{
  return a1;
}

void sub_22264D4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_22264D564(v7, v4);
  }
}

void sub_22264D564(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    char v2 = (void *)sub_2225E1434(a2);
    j__free(v2);
  }
}

uint64_t sub_22264D598(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t result = sub_2225D7CA0(a1, a2, 8);
  *(void *)(result + 24) = a3;
  return result;
}

uint64_t sub_22264D5C4(uint64_t a1)
{
  return a1;
}

void sub_22264D5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_22264D660(v7, v4);
  }
}

void sub_22264D660(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    char v2 = (void *)sub_22264D694(a2);
    j__free(v2);
  }
}

uint64_t sub_22264D698(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_22260F234(v5, *(void *)(a1 + 24));
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  return a1;
}

uint64_t sub_22264D714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_22264D73C(a1, a2, a3);

  return sub_222608788(v3);
}

uint64_t sub_22264D73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22264D744(a1, a2, a3, 0);
}

uint64_t sub_22264D744(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  v10[0] = a2;
  v10[1] = a3;
  __int16 v9 = a4;
  sub_22264D88C((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_22264D79C(a1, (uint64_t)v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_22264D79C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *(void *)a2, *(void *)(a2 + 8));
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_22264D89C(*(void *)a2, *(void *)(a2 + 8), *(uint64_t **)(a1 + 24), *(unsigned __int16 *)(a2 + 16));
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_22264D88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22264D95C(a3, a1, a2);
}

uint64_t sub_22264D89C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v6 = sub_2225C3D04((uint64_t)v13);
  unsigned int v7 = sub_2225DABE8();
  uint64_t v8 = sub_2225CC520(a3, (v6 + 9), v7);
  uint64_t v9 = sub_22264D930(v8, v6, a4);
  char v10 = (void *)sub_2225E563C(v9);
  int v11 = (const void *)sub_2225C3C70((uint64_t)v13);
  memcpy(v10, v11, v6);
  *((unsigned char *)v10 + v6) = 0;
  return v8;
}

_DWORD *sub_22264D934(_DWORD *a1, int a2, __int16 a3)
{
  uint64_t result = sub_2225D0A60(a1, a2);
  *((_WORD *)result + 2) = a3;
  return result;
}

__n128 sub_22264D960(__n128 *a1, __n128 *a2, unsigned __int16 *a3)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u16[0] = *a3;
  return result;
}

uint64_t sub_22264D974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = sub_22264D9C4(a2, a3);

  return sub_22264D9B8(a1, v4);
}

uint64_t sub_22264D9B8(uint64_t a1, unsigned int a2)
{
  return *(void *)(a1 + 16) + 4 * a2;
}

uint64_t sub_22264D9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D934C(v365, a1, a2);
  int v364 = 1;
  uint64_t v3 = sub_2225F28E8((uint64_t)v2, "GL_ARB_shader_objects", (uint64_t)&v364);
  int v363 = 2;
  uint64_t v4 = sub_2225F262C(v3, (uint64_t)"GL_ARB_vertex_shader", (uint64_t)&v363);
  int v362 = 3;
  uint64_t v5 = sub_2225F2870(v4, "GL_ARB_fragment_shader", (uint64_t)&v362);
  int v361 = 4;
  uint64_t v6 = sub_2225F2BC4(v5, "GL_ARB_shading_language_100", (uint64_t)&v361);
  int v360 = 5;
  uint64_t v7 = sub_222630284(v6, "GL_ARB_fragment_program_shadow", (uint64_t)&v360);
  int v359 = 6;
  uint64_t v8 = sub_2225F29D8(v7, "GL_ARB_draw_buffers", (uint64_t)&v359);
  int v358 = 7;
  uint64_t v9 = sub_2225F2960(v8, "GL_ARB_texture_rectangle", (uint64_t)&v358);
  int v357 = 8;
  uint64_t v10 = sub_2225F2530(v9, (uint64_t)"GL_ARB_depth_buffer_float", (uint64_t)&v357);
  int v356 = 9;
  uint64_t v11 = sub_2225F28E8(v10, "GL_ARB_draw_instanced", (uint64_t)&v356);
  int v355 = 10;
  uint64_t v12 = sub_2225F25B4(v11, "GL_ARB_framebuffer_sRGB", (uint64_t)&v355);
  int v354 = 11;
  uint64_t v13 = sub_2225F25B4(v12, "GL_ARB_geometry_shader4", (uint64_t)&v354);
  int v353 = 12;
  uint64_t v14 = sub_22264FC78(v13, "GL_ARB_texture_compression_rgtc", (uint64_t)&v353);
  int v352 = 13;
  uint64_t v15 = sub_2225F2AD4(v14, (uint64_t)"GL_ARB_uniform_buffer_object", (uint64_t)&v352);
  int v351 = 14;
  uint64_t v16 = sub_2225F2530(v15, (uint64_t)"GL_ARB_shader_texture_lod", (uint64_t)&v351);
  int v350 = 15;
  uint64_t v17 = sub_2226459B0(v16, "GL_ARB_fragment_coord_conventions", (uint64_t)&v350);
  int v349 = 16;
  uint64_t v18 = sub_2225F25B4(v17, "GL_ARB_provoking_vertex", (uint64_t)&v349);
  int v348 = 17;
  uint64_t v19 = sub_2225F2A50(v18, (uint64_t)"GL_ARB_texture_multisample", (uint64_t)&v348);
  int v347 = 18;
  uint64_t v20 = sub_2225F2960(v19, "GL_ARB_vertex_array_bgra", (uint64_t)&v347);
  int v346 = 19;
  uint64_t v21 = sub_2225F28E8(v20, "GL_ARB_sample_shading", (uint64_t)&v346);
  int v345 = 20;
  uint64_t v22 = sub_2225F2D20(v21, "GL_ARB_texture_cube_map_array", (uint64_t)&v345);
  int v344 = 21;
  uint64_t v23 = sub_2225F28E8(v22, "GL_ARB_texture_gather", (uint64_t)&v344);
  int v343 = 22;
  uint64_t v24 = sub_2225F2960(v23, "GL_ARB_texture_query_lod", (uint64_t)&v343);
  int v342 = 23;
  uint64_t v25 = sub_22264FC78(v24, "GL_ARB_shading_language_include", (uint64_t)&v342);
  int v341 = 24;
  uint64_t v26 = sub_22264FC78(v25, "GL_ARB_explicit_attrib_location", (uint64_t)&v341);
  int v340 = 25;
  uint64_t v27 = sub_2225F2A50(v26, (uint64_t)"GL_ARB_shader_bit_encoding", (uint64_t)&v340);
  int v339 = 26;
  uint64_t v28 = sub_2225F24B8(v27, (uint64_t)"GL_ARB_gpu_shader5", (uint64_t)&v339);
  int v338 = 27;
  uint64_t v29 = sub_2225F2870(v28, "GL_ARB_gpu_shader_fp64", (uint64_t)&v338);
  int v337 = 28;
  uint64_t v30 = sub_2225F2960(v29, "GL_ARB_shader_subroutine", (uint64_t)&v337);
  int v336 = 29;
  uint64_t v31 = sub_2225F2A50(v30, (uint64_t)"GL_ARB_tessellation_shader", (uint64_t)&v336);
  int v335 = 30;
  uint64_t v32 = sub_2225F2A50(v31, (uint64_t)"GL_ARB_transform_feedback2", (uint64_t)&v335);
  int v334 = 31;
  uint64_t v33 = sub_2225F2960(v32, "GL_ARB_ES2_compatibility", (uint64_t)&v334);
  int v333 = 32;
  uint64_t v34 = sub_2225F2530(v33, (uint64_t)"GL_ARB_get_program_binary", (uint64_t)&v333);
  int v332 = 33;
  uint64_t v35 = sub_222630284(v34, "GL_ARB_separate_shader_objects", (uint64_t)&v332);
  int v331 = 34;
  uint64_t v36 = sub_2225F25B4(v35, "GL_ARB_shader_precision", (uint64_t)&v331);
  int v330 = 35;
  uint64_t v37 = sub_2225F2A50(v36, (uint64_t)"GL_ARB_vertex_attrib_64bit", (uint64_t)&v330);
  int v329 = 36;
  uint64_t v38 = sub_2225F28E8(v37, "GL_ARB_viewport_array", (uint64_t)&v329);
  int v328 = 37;
  uint64_t v39 = sub_2225F278C(v38, (uint64_t)"GL_ARB_robustness", (uint64_t)&v328);
  int v327 = 38;
  uint64_t v40 = sub_2225F2AD4(v39, (uint64_t)"GL_ARB_shader_stencil_export", (uint64_t)&v327);
  int v326 = 39;
  uint64_t v41 = sub_22264FC78(v40, "GL_ARB_shading_language_420pack", (uint64_t)&v326);
  int v325 = 40;
  uint64_t v42 = sub_2225F2530(v41, (uint64_t)"GL_ARB_conservative_depth", (uint64_t)&v325);
  int v324 = 41;
  uint64_t v43 = sub_2225F2D20(v42, "GL_ARB_shader_atomic_counters", (uint64_t)&v324);
  int v323 = 42;
  uint64_t v44 = sub_222630284(v43, "GL_ARB_shader_image_load_store", (uint64_t)&v323);
  int v322 = 43;
  uint64_t v45 = sub_22264FC78(v44, "GL_ARB_shading_language_packing", (uint64_t)&v322);
  int v321 = 44;
  uint64_t v46 = sub_2225F25B4(v45, "GL_ARB_arrays_of_arrays", (uint64_t)&v321);
  int v320 = 45;
  uint64_t v47 = sub_2225F28E8(v46, "GL_ARB_compute_shader", (uint64_t)&v320);
  int v319 = 46;
  uint64_t v48 = sub_2225F2960(v47, "GL_ARB_ES3_compatibility", (uint64_t)&v319);
  int v318 = 47;
  uint64_t v49 = sub_222645AAC(v48, "GL_ARB_explicit_uniform_location", (uint64_t)&v318);
  int v317 = 48;
  uint64_t v50 = sub_222630284(v49, "GL_ARB_fragment_layer_viewport", (uint64_t)&v317);
  int v316 = 49;
  uint64_t v51 = sub_2225F2530(v50, (uint64_t)"GL_ARB_invalidate_subdata", (uint64_t)&v316);
  int v315 = 50;
  uint64_t v52 = sub_222645A1C(v51, "GL_ARB_robust_buffer_access_behavior", (uint64_t)&v315);
  int v314 = 51;
  uint64_t v53 = sub_2225F2960(v52, "GL_ARB_shader_image_size", (uint64_t)&v314);
  int v313 = 52;
  uint64_t v54 = sub_2225F2804(v53, "GL_ARB_shader_storage_buffer_object", (uint64_t)&v313);
  int v312 = 53;
  uint64_t v55 = sub_2225F2960(v54, "GL_ARB_stencil_texturing", (uint64_t)&v312);
  int v311 = 54;
  uint64_t v56 = sub_2225F2BC4(v55, "GL_ARB_texture_query_levels", (uint64_t)&v311);
  int v310 = 55;
  uint64_t v57 = sub_2225F25B4(v56, "GL_ARB_enhanced_layouts", (uint64_t)&v310);
  int v309 = 56;
  uint64_t v58 = sub_2225F25B4(v57, "GL_ARB_texture_stencil8", (uint64_t)&v309);
  int v308 = 57;
  uint64_t v59 = sub_2225F25B4(v58, "GL_ARB_bindless_texture", (uint64_t)&v308);
  int v307 = 58;
  uint64_t v60 = sub_2225F2CB4(v59, "GL_ARB_compute_variable_group_size", (uint64_t)&v307);
  int v306 = 59;
  uint64_t v61 = sub_2225F2D20(v60, "GL_ARB_shader_draw_parameters", (uint64_t)&v306);
  int v305 = 60;
  uint64_t v62 = sub_2225F2960(v61, "GL_ARB_shader_group_vote", (uint64_t)&v305);
  int v304 = 61;
  uint64_t v63 = sub_2225F2A50(v62, (uint64_t)"GL_ARB_ES3_1_compatibility", (uint64_t)&v304);
  int v303 = 62;
  uint64_t v64 = sub_2225F262C(v63, (uint64_t)"GL_ARB_cull_distance", (uint64_t)&v303);
  int v302 = 63;
  uint64_t v65 = sub_2225F2530(v64, (uint64_t)"GL_ARB_derivative_control", (uint64_t)&v302);
  int v301 = 64;
  uint64_t v66 = sub_2225F2804(v65, "GL_ARB_shader_texture_image_samples", (uint64_t)&v301);
  int v300 = 65;
  uint64_t v67 = sub_2225F29D8(v66, "GL_EXT_texture_sRGB", (uint64_t)&v300);
  int v299 = 66;
  uint64_t v68 = sub_2225F24B8(v67, (uint64_t)"GL_NV_gpu_program4", (uint64_t)&v299);
  int v298 = 67;
  uint64_t v69 = sub_2225F25B4(v68, "GL_EXT_geometry_shader4", (uint64_t)&v298);
  int v297 = 68;
  uint64_t v70 = sub_2225F24B8(v69, (uint64_t)"GL_EXT_gpu_shader4", (uint64_t)&v297);
  int v296 = 69;
  uint64_t v71 = sub_2225F28E8(v70, "GL_EXT_draw_instanced", (uint64_t)&v296);
  int v295 = 70;
  uint64_t v72 = sub_2225F29D8(v71, "GL_EXT_packed_float", (uint64_t)&v295);
  int v294 = 71;
  uint64_t v73 = sub_2225F262C(v72, (uint64_t)"GL_EXT_texture_array", (uint64_t)&v294);
  int v293 = 72;
  uint64_t v74 = sub_22264FC78(v73, "GL_EXT_texture_compression_latc", (uint64_t)&v293);
  int v292 = 73;
  uint64_t v75 = sub_22264FC78(v74, "GL_EXT_texture_compression_rgtc", (uint64_t)&v292);
  int v291 = 74;
  uint64_t v76 = sub_222630284(v75, "GL_EXT_texture_shared_exponent", (uint64_t)&v291);
  int v290 = 75;
  uint64_t v77 = sub_2225F2960(v76, "GL_NV_depth_buffer_float", (uint64_t)&v290);
  int v289 = 76;
  uint64_t v78 = sub_2225F25B4(v77, "GL_EXT_framebuffer_sRGB", (uint64_t)&v289);
  int v288 = 77;
  uint64_t v79 = sub_2225F2960(v78, "GL_NV_transform_feedback", (uint64_t)&v288);
  int v287 = 78;
  uint64_t v80 = sub_2225F25B4(v79, "GL_EXT_bindable_uniform", (uint64_t)&v287);
  int v286 = 79;
  uint64_t v81 = sub_2225F2530(v80, (uint64_t)"GL_EXT_transform_feedback", (uint64_t)&v286);
  int v285 = 80;
  uint64_t v82 = sub_2225F2960(v81, "GL_EXT_vertex_array_bgra", (uint64_t)&v285);
  int v284 = 81;
  uint64_t v83 = sub_2225F2A50(v82, (uint64_t)"GL_NV_explicit_multisample", (uint64_t)&v284);
  int v283 = 82;
  uint64_t v84 = sub_2225DB308(v83, "GL_ATI_meminfo", (uint64_t)&v283);
  int v282 = 83;
  uint64_t v85 = sub_2225F25B4(v84, "GL_AMD_texture_texture4", (uint64_t)&v282);
  int v281 = 84;
  uint64_t v86 = sub_222645AAC(v85, "GL_AMD_vertex_shader_tessellator", (uint64_t)&v281);
  int v280 = 85;
  uint64_t v87 = sub_2225F25B4(v86, "GL_EXT_provoking_vertex", (uint64_t)&v280);
  int v279 = 86;
  uint64_t v88 = sub_2225F262C(v87, (uint64_t)"GL_EXT_texture_snorm", (uint64_t)&v279);
  int v278 = 87;
  uint64_t v89 = sub_222630284(v88, "GL_EXT_separate_shader_objects", (uint64_t)&v278);
  int v277 = 88;
  uint64_t v90 = sub_2225F2960(v89, "GL_NV_shader_buffer_load", (uint64_t)&v277);
  int v276 = 89;
  uint64_t v91 = sub_2225F2AD4(v90, (uint64_t)"GL_AMD_shader_stencil_export", (uint64_t)&v276);
  int v275 = 90;
  uint64_t v92 = sub_2225F2530(v91, (uint64_t)"GL_AMD_conservative_depth", (uint64_t)&v275);
  int v274 = 91;
  uint64_t v93 = sub_222630284(v92, "GL_EXT_shader_image_load_store", (uint64_t)&v274);
  int v273 = 92;
  uint64_t v94 = sub_2225F2A50(v93, (uint64_t)"GL_EXT_vertex_attrib_64bit", (uint64_t)&v273);
  int v272 = 93;
  uint64_t v95 = sub_2225F24B8(v94, (uint64_t)"GL_NV_gpu_program5", (uint64_t)&v272);
  int v271 = 94;
  uint64_t v96 = sub_2225F278C(v95, (uint64_t)"GL_NV_gpu_shader5", (uint64_t)&v271);
  int v270 = 95;
  uint64_t v97 = sub_2225F2530(v96, (uint64_t)"GL_NV_shader_buffer_store", (uint64_t)&v270);
  int v269 = 96;
  uint64_t v98 = sub_2225F2BC4(v97, "GL_NV_tessellation_program5", (uint64_t)&v269);
  int v268 = 97;
  uint64_t v99 = sub_2225F29D8(v98, "GL_NV_vdpau_interop", (uint64_t)&v268);
  int v267 = 98;
  uint64_t v100 = sub_2225F262C(v99, (uint64_t)"GL_NV_path_rendering", (uint64_t)&v267);
  int v266 = 99;
  uint64_t v101 = sub_2225F2804(v100, "GL_AMD_vertex_shader_viewport_index", (uint64_t)&v266);
  int v265 = 100;
  uint64_t v102 = sub_2225F2A50(v101, (uint64_t)"GL_AMD_vertex_shader_layer", (uint64_t)&v265);
  int v264 = 101;
  uint64_t v103 = sub_2225F2870(v102, "GL_NV_bindless_texture", (uint64_t)&v264);
  int v263 = 102;
  uint64_t v104 = sub_2225F2530(v103, (uint64_t)"GL_NV_shader_atomic_float", (uint64_t)&v263);
  int v262 = 103;
  uint64_t v105 = sub_2225F28E8(v104, "GL_AMD_sparse_texture", (uint64_t)&v262);
  int v261 = 104;
  uint64_t v106 = sub_2225F2AD4(v105, (uint64_t)"GL_AMD_shader_trinary_minmax", (uint64_t)&v261);
  int v260 = 105;
  uint64_t v107 = sub_2225F262C(v106, (uint64_t)"GL_INTEL_map_texture", (uint64_t)&v260);
  int v259 = 106;
  uint64_t v108 = sub_2225F2530(v107, (uint64_t)"GL_EXT_shader_integer_mix", (uint64_t)&v259);
  int v258 = 107;
  uint64_t v109 = sub_2226459B0(v108, "GL_INTEL_fragment_shader_ordering", (uint64_t)&v258);
  int v257 = 108;
  uint64_t v110 = sub_2225F2CB4(v109, "GL_AMD_shader_stencil_value_export", (uint64_t)&v257);
  int v256 = 109;
  uint64_t v111 = sub_2225F2530(v110, (uint64_t)"GL_NV_shader_thread_group", (uint64_t)&v256);
  int v255 = 110;
  uint64_t v112 = sub_2225F2BC4(v111, "GL_NV_shader_thread_shuffle", (uint64_t)&v255);
  int v254 = 111;
  uint64_t v113 = sub_2225F2CB4(v112, "GL_EXT_shader_image_load_formatted", (uint64_t)&v254);
  int v253 = 112;
  uint64_t v114 = sub_2225F2A50(v113, (uint64_t)"GL_AMD_transform_feedback4", (uint64_t)&v253);
  int v252 = 113;
  uint64_t v115 = sub_2225F25B4(v114, "GL_AMD_gpu_shader_int64", (uint64_t)&v252);
  int v251 = 114;
  uint64_t v116 = sub_2225F278C(v115, (uint64_t)"GL_AMD_gcn_shader", (uint64_t)&v251);
  int v250 = 115;
  uint64_t v117 = sub_2225F2530(v116, (uint64_t)"GL_NV_shader_atomic_int64", (uint64_t)&v250);
  int v249 = 116;
  uint64_t v118 = sub_222630284(v117, "GL_KHR_blend_equation_advanced", (uint64_t)&v249);
  int v248 = 117;
  uint64_t v119 = sub_2225F2A50(v118, (uint64_t)"GL_EXT_post_depth_coverage", (uint64_t)&v248);
  int v247 = 118;
  uint64_t v120 = sub_2225F2530(v119, (uint64_t)"GL_EXT_raster_multisample", (uint64_t)&v247);
  int v246 = 119;
  uint64_t v121 = sub_2225F2870(v120, "GL_EXT_sparse_texture2", (uint64_t)&v246);
  int v245 = 120;
  uint64_t v122 = sub_2225F2530(v121, (uint64_t)"GL_NV_conservative_raster", (uint64_t)&v245);
  int v244 = 121;
  uint64_t v123 = sub_2225F262C(v122, (uint64_t)"GL_NV_fill_rectangle", (uint64_t)&v244);
  int v243 = 122;
  uint64_t v124 = sub_222645AAC(v123, "GL_NV_fragment_coverage_to_color", (uint64_t)&v243);
  int v242 = 123;
  uint64_t v125 = sub_22264FC78(v124, "GL_NV_fragment_shader_interlock", (uint64_t)&v242);
  int v241 = 124;
  uint64_t v126 = sub_22264FC78(v125, "GL_NV_framebuffer_mixed_samples", (uint64_t)&v241);
  int v240 = 125;
  uint64_t v127 = sub_2226459B0(v126, "GL_NV_geometry_shader_passthrough", (uint64_t)&v240);
  int v239 = 126;
  uint64_t v128 = sub_222645AAC(v127, "GL_NV_path_rendering_shared_edge", (uint64_t)&v239);
  int v238 = 127;
  uint64_t v129 = sub_2225F2870(v128, "GL_NV_sample_locations", (uint64_t)&v238);
  int v237 = 128;
  uint64_t v130 = sub_2225F2804(v129, "GL_NV_sample_mask_override_coverage", (uint64_t)&v237);
  int v236 = 129;
  uint64_t v131 = sub_22264FC78(v130, "GL_NV_shader_atomic_fp16_vector", (uint64_t)&v236);
  int v235 = 130;
  uint64_t v132 = sub_2225F278C(v131, (uint64_t)"GL_OES_texture_3D", (uint64_t)&v235);
  int v234 = 131;
  uint64_t v133 = sub_2225F2BC4(v132, "GL_OES_standard_derivatives", (uint64_t)&v234);
  int v233 = 132;
  uint64_t v134 = sub_2225F2530(v133, (uint64_t)"GL_OES_get_program_binary", (uint64_t)&v233);
  int v232 = 133;
  uint64_t v135 = sub_2225F2A50(v134, (uint64_t)"GL_AMD_program_binary_Z400", (uint64_t)&v232);
  int v231 = 134;
  uint64_t v136 = sub_2225F2530(v135, (uint64_t)"GL_EXT_shader_texture_lod", (uint64_t)&v231);
  int v230 = 135;
  uint64_t v137 = sub_2225F278C(v136, (uint64_t)"GL_EXT_frag_depth", (uint64_t)&v230);
  int v229 = 136;
  uint64_t v138 = sub_2225F2530(v137, (uint64_t)"GL_OES_EGL_image_external", (uint64_t)&v229);
  int v228 = 137;
  uint64_t v139 = sub_2225F24B8(v138, (uint64_t)"GL_NV_draw_buffers", (uint64_t)&v228);
  int v227 = 138;
  uint64_t v140 = sub_222630284(v139, "GL_EXT_separate_shader_objects", (uint64_t)&v227);
  int v226 = 139;
  uint64_t v141 = sub_2225F2870(v140, "GL_EXT_shadow_samplers", (uint64_t)&v226);
  int v225 = 140;
  uint64_t v142 = sub_2225F2CB4(v141, "GL_NV_EGL_stream_consumer_external", (uint64_t)&v225);
  int v224 = 141;
  uint64_t v143 = sub_2225DAEFC(v142, "GL_EXT_sRGB", (uint64_t)&v224);
  int v223 = 142;
  uint64_t v144 = sub_2225F278C(v143, (uint64_t)"GL_EXT_robustness", (uint64_t)&v223);
  int v222 = 143;
  uint64_t v145 = sub_22264FC78(v144, "GL_EXT_shader_framebuffer_fetch", (uint64_t)&v222);
  int v221 = 144;
  uint64_t v146 = sub_2225F2D20(v145, "GL_EXT_multiview_draw_buffers", (uint64_t)&v221);
  int v220 = 145;
  uint64_t v147 = sub_2225F29D8(v146, "GL_NV_texture_array", (uint64_t)&v220);
  int v219 = 146;
  uint64_t v148 = sub_2225F262C(v147, (uint64_t)"GL_NV_draw_instanced", (uint64_t)&v219);
  int v218 = 147;
  uint64_t v149 = sub_2225F2BC4(v148, "GL_NV_shadow_samplers_array", (uint64_t)&v218);
  int v217 = 148;
  uint64_t v150 = sub_2225F2A50(v149, (uint64_t)"GL_NV_shadow_samplers_cube", (uint64_t)&v217);
  int v216 = 149;
  uint64_t v151 = sub_2225F29D8(v150, "GL_EXT_draw_buffers", (uint64_t)&v216);
  int v215 = 150;
  uint64_t v152 = sub_2225F278C(v151, (uint64_t)"GL_EXT_pvrtc_sRGB", (uint64_t)&v215);
  int v214 = 151;
  uint64_t v153 = sub_2225F28E8(v152, "GL_EXT_draw_instanced", (uint64_t)&v214);
  int v213 = 152;
  uint64_t v154 = sub_222630284(v153, "GL_NV_explicit_attrib_location", (uint64_t)&v213);
  int v212 = 153;
  uint64_t v155 = sub_2225F2530(v154, (uint64_t)"GL_NV_non_square_matrices", (uint64_t)&v212);
  int v211 = 154;
  uint64_t v156 = sub_2225F2530(v155, (uint64_t)"GL_EXT_shader_integer_mix", (uint64_t)&v211);
  int v210 = 155;
  uint64_t v157 = sub_22264FC78(v156, "GL_ARM_shader_framebuffer_fetch", (uint64_t)&v210);
  int v209 = 156;
  uint64_t v158 = sub_22264FCFC(v157, "GL_ARM_shader_framebuffer_fetch_depth_stencil", (uint64_t)&v209);
  int v208 = 157;
  uint64_t v159 = sub_2226459B0(v158, "GL_EXT_shader_pixel_local_storage", (uint64_t)&v208);
  int v207 = 158;
  uint64_t v160 = sub_222630284(v159, "GL_KHR_blend_equation_advanced", (uint64_t)&v207);
  int v206 = 159;
  uint64_t v161 = sub_2225F28E8(v160, "GL_OES_sample_shading", (uint64_t)&v206);
  int v205 = 160;
  uint64_t v162 = sub_2225F25B4(v161, "GL_OES_sample_variables", (uint64_t)&v205);
  int v204 = 161;
  uint64_t v163 = sub_2225F2A50(v162, (uint64_t)"GL_OES_shader_image_atomic", (uint64_t)&v204);
  int v203 = 162;
  uint64_t v164 = sub_22264FD68(v163, "GL_OES_shader_multisample_interpolation", (uint64_t)&v203);
  int v202 = 163;
  uint64_t v165 = sub_2225F25B4(v164, "GL_OES_texture_stencil8", (uint64_t)&v202);
  int v201 = 164;
  uint64_t v166 = sub_22264FDD4(v165, "GL_OES_texture_storage_multisample_2d_array", (uint64_t)&v201);
  int v200 = 165;
  uint64_t v167 = sub_2225F2870(v166, "GL_EXT_geometry_shader", (uint64_t)&v200);
  int v199 = 166;
  uint64_t v168 = sub_2225F24B8(v167, (uint64_t)"GL_EXT_gpu_shader5", (uint64_t)&v199);
  int v198 = 167;
  uint64_t v169 = sub_2225F2CB4(v168, "GL_EXT_shader_implicit_conversions", (uint64_t)&v198);
  int v197 = 168;
  uint64_t v170 = sub_2225F25B4(v169, "GL_EXT_shader_io_blocks", (uint64_t)&v197);
  int v196 = 169;
  uint64_t v171 = sub_2225F2A50(v170, (uint64_t)"GL_EXT_tessellation_shader", (uint64_t)&v196);
  int v195 = 170;
  uint64_t v172 = sub_2225F28E8(v171, "GL_EXT_texture_buffer", (uint64_t)&v195);
  int v194 = 171;
  uint64_t v173 = sub_2225F2D20(v172, "GL_EXT_texture_cube_map_array", (uint64_t)&v194);
  int v193 = 172;
  uint64_t v174 = sub_2225F29D8(v173, "GL_EXT_texture_view", (uint64_t)&v193);
  int v192 = 173;
  uint64_t v175 = sub_2225F2D20(v174, "GL_EXT_primitive_bounding_box", (uint64_t)&v192);
  int v191 = 174;
  uint64_t v176 = sub_22264FC78(v175, "GL_ANDROID_extension_pack_es31a", (uint64_t)&v191);
  int v190 = 175;
  uint64_t v177 = sub_222645A1C(v176, "GL_KHR_robust_buffer_access_behavior", (uint64_t)&v190);
  int v189 = 176;
  uint64_t v178 = sub_2225F278C(v177, (uint64_t)"GL_KHR_robustness", (uint64_t)&v189);
  int v188 = 177;
  uint64_t v179 = sub_2225F2870(v178, "GL_APPLE_clip_distance", (uint64_t)&v188);
  int v187 = 178;
  uint64_t v180 = sub_2225D94AC(v179, (unsigned __int16 *)"all", (uint64_t)&v187);
  int v186 = 179;
  uint64_t v181 = sub_2225F2870(v180, "GL_APPLE_sa_assertions", (uint64_t)&v186);
  int v185 = 180;
  uint64_t v182 = sub_2225F2960(v181, "FOSL_cruft_compatibility", (uint64_t)&v185);
  unsigned int v184 = 0;
  return sub_2225D9664(v182, &v184);
}

uint64_t sub_22264EAF4(unsigned int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267F7ECC8, memory_order_acquire) & 1) == 0)
  {
    unsigned int v2 = a1;
    int v3 = __cxa_guard_acquire(&qword_267F7ECC8);
    a1 = v2;
    if (v3)
    {
      sub_2225C3D00((int)qword_267F7E178, &byte_2226D1615);
      sub_2225C3D00((int)&qword_267F7E178[2], "GL_ARB_shader_objects");
      sub_2225C3D00((int)&qword_267F7E178[4], "GL_ARB_vertex_shader");
      sub_2225C3D00((int)&qword_267F7E178[6], "GL_ARB_fragment_shader");
      sub_2225C3D00((int)&qword_267F7E178[8], "GL_ARB_shading_language_100");
      sub_2225C3D00((int)&qword_267F7E178[10], "GL_ARB_fragment_program_shadow");
      sub_2225C3D00((int)&qword_267F7E178[12], "GL_ARB_draw_buffers");
      sub_2225C3D00((int)&qword_267F7E178[14], "GL_ARB_texture_rectangle");
      sub_2225C3D00((int)&qword_267F7E178[16], "GL_ARB_depth_buffer_float");
      sub_2225C3D00((int)&qword_267F7E178[18], "GL_ARB_draw_instanced");
      sub_2225C3D00((int)&qword_267F7E178[20], "GL_ARB_framebuffer_sRGB");
      sub_2225C3D00((int)&qword_267F7E178[22], "GL_ARB_geometry_shader4");
      sub_2225C3D00((int)&qword_267F7E178[24], "GL_ARB_texture_compression_rgtc");
      sub_2225C3D00((int)&qword_267F7E178[26], "GL_ARB_uniform_buffer_object");
      sub_2225C3D00((int)&qword_267F7E178[28], "GL_ARB_shader_texture_lod");
      sub_2225C3D00((int)&qword_267F7E178[30], "GL_ARB_fragment_coord_conventions");
      sub_2225C3D00((int)&qword_267F7E178[32], "GL_ARB_provoking_vertex");
      sub_2225C3D00((int)&qword_267F7E178[34], "GL_ARB_texture_multisample");
      sub_2225C3D00((int)&qword_267F7E178[36], "GL_ARB_vertex_array_bgra");
      sub_2225C3D00((int)&qword_267F7E178[38], "GL_ARB_sample_shading");
      sub_2225C3D00((int)&qword_267F7E178[40], "GL_ARB_texture_cube_map_array");
      sub_2225C3D00((int)&qword_267F7E178[42], "GL_ARB_texture_gather");
      sub_2225C3D00((int)&qword_267F7E178[44], "GL_ARB_texture_query_lod");
      sub_2225C3D00((int)&qword_267F7E178[46], "GL_ARB_shading_language_include");
      sub_2225C3D00((int)&qword_267F7E178[48], "GL_ARB_explicit_attrib_location");
      sub_2225C3D00((int)&qword_267F7E178[50], "GL_ARB_shader_bit_encoding");
      sub_2225C3D00((int)&qword_267F7E178[52], "GL_ARB_gpu_shader5");
      sub_2225C3D00((int)&qword_267F7E178[54], "GL_ARB_gpu_shader_fp64");
      sub_2225C3D00((int)&qword_267F7E178[56], "GL_ARB_shader_subroutine");
      sub_2225C3D00((int)&qword_267F7E178[58], "GL_ARB_tessellation_shader");
      sub_2225C3D00((int)&qword_267F7E178[60], "GL_ARB_transform_feedback2");
      sub_2225C3D00((int)&qword_267F7E178[62], "GL_ARB_ES2_compatibility");
      sub_2225C3D00((int)&qword_267F7E178[64], "GL_ARB_get_program_binary");
      sub_2225C3D00((int)&qword_267F7E178[66], "GL_ARB_separate_shader_objects");
      sub_2225C3D00((int)&qword_267F7E178[68], "GL_ARB_shader_precision");
      sub_2225C3D00((int)&qword_267F7E178[70], "GL_ARB_vertex_attrib_64bit");
      sub_2225C3D00((int)&qword_267F7E178[72], "GL_ARB_viewport_array");
      sub_2225C3D00((int)&qword_267F7E178[74], "GL_ARB_robustness");
      sub_2225C3D00((int)&qword_267F7E178[76], "GL_ARB_shader_stencil_export");
      sub_2225C3D00((int)&qword_267F7E178[78], "GL_ARB_shading_language_420pack");
      sub_2225C3D00((int)&qword_267F7E178[80], "GL_ARB_conservative_depth");
      sub_2225C3D00((int)&qword_267F7E178[82], "GL_ARB_shader_atomic_counters");
      sub_2225C3D00((int)&qword_267F7E178[84], "GL_ARB_shader_image_load_store");
      sub_2225C3D00((int)&qword_267F7E178[86], "GL_ARB_shading_language_packing");
      sub_2225C3D00((int)&qword_267F7E178[88], "GL_ARB_arrays_of_arrays");
      sub_2225C3D00((int)&qword_267F7E178[90], "GL_ARB_compute_shader");
      sub_2225C3D00((int)&qword_267F7E178[92], "GL_ARB_ES3_compatibility");
      sub_2225C3D00((int)&qword_267F7E178[94], "GL_ARB_explicit_uniform_location");
      sub_2225C3D00((int)&qword_267F7E178[96], "GL_ARB_fragment_layer_viewport");
      sub_2225C3D00((int)&qword_267F7E178[98], "GL_ARB_invalidate_subdata");
      sub_2225C3D00((int)&qword_267F7E178[100], "GL_ARB_robust_buffer_access_behavior");
      sub_2225C3D00((int)&qword_267F7E178[102], "GL_ARB_shader_image_size");
      sub_2225C3D00((int)&qword_267F7E178[104], "GL_ARB_shader_storage_buffer_object");
      sub_2225C3D00((int)&qword_267F7E178[106], "GL_ARB_stencil_texturing");
      sub_2225C3D00((int)&qword_267F7E178[108], "GL_ARB_texture_query_levels");
      sub_2225C3D00((int)&qword_267F7E178[110], "GL_ARB_enhanced_layouts");
      sub_2225C3D00((int)&qword_267F7E178[112], "GL_ARB_texture_stencil8");
      sub_2225C3D00((int)&qword_267F7E178[114], "GL_ARB_bindless_texture");
      sub_2225C3D00((int)&qword_267F7E178[116], "GL_ARB_compute_variable_group_size");
      sub_2225C3D00((int)&qword_267F7E178[118], "GL_ARB_shader_draw_parameters");
      sub_2225C3D00((int)&qword_267F7E178[120], "GL_ARB_shader_group_vote");
      sub_2225C3D00((int)&qword_267F7E178[122], "GL_ARB_ES3_1_compatibility");
      sub_2225C3D00((int)&qword_267F7E178[124], "GL_ARB_cull_distance");
      sub_2225C3D00((int)&qword_267F7E178[126], "GL_ARB_derivative_control");
      sub_2225C3D00((int)&qword_267F7E178[128], "GL_ARB_shader_texture_image_samples");
      sub_2225C3D00((int)&qword_267F7E178[130], "GL_EXT_texture_sRGB");
      sub_2225C3D00((int)&qword_267F7E178[132], "GL_NV_gpu_program4");
      sub_2225C3D00((int)&qword_267F7E178[134], "GL_EXT_geometry_shader4");
      sub_2225C3D00((int)&qword_267F7E178[136], "GL_EXT_gpu_shader4");
      sub_2225C3D00((int)&qword_267F7E178[138], "GL_EXT_draw_instanced");
      sub_2225C3D00((int)&qword_267F7E178[140], "GL_EXT_packed_float");
      sub_2225C3D00((int)&qword_267F7E178[142], "GL_EXT_texture_array");
      sub_2225C3D00((int)&qword_267F7E178[144], "GL_EXT_texture_compression_latc");
      sub_2225C3D00((int)&qword_267F7E178[146], "GL_EXT_texture_compression_rgtc");
      sub_2225C3D00((int)&qword_267F7E178[148], "GL_EXT_texture_shared_exponent");
      sub_2225C3D00((int)&qword_267F7E178[150], "GL_NV_depth_buffer_float");
      sub_2225C3D00((int)&qword_267F7E178[152], "GL_EXT_framebuffer_sRGB");
      sub_2225C3D00((int)&qword_267F7E178[154], "GL_NV_transform_feedback");
      sub_2225C3D00((int)&qword_267F7E178[156], "GL_EXT_bindable_uniform");
      sub_2225C3D00((int)&qword_267F7E178[158], "GL_EXT_transform_feedback");
      sub_2225C3D00((int)&qword_267F7E178[160], "GL_EXT_vertex_array_bgra");
      sub_2225C3D00((int)&qword_267F7E178[162], "GL_NV_explicit_multisample");
      sub_2225C3D00((int)&qword_267F7E178[164], "GL_ATI_meminfo");
      sub_2225C3D00((int)&qword_267F7E178[166], "GL_AMD_texture_texture4");
      sub_2225C3D00((int)&qword_267F7E178[168], "GL_AMD_vertex_shader_tessellator");
      sub_2225C3D00((int)&qword_267F7E178[170], "GL_EXT_provoking_vertex");
      sub_2225C3D00((int)&qword_267F7E178[172], "GL_EXT_texture_snorm");
      sub_2225C3D00((int)&qword_267F7E178[174], "GL_EXT_separate_shader_objects");
      sub_2225C3D00((int)&qword_267F7E178[176], "GL_NV_shader_buffer_load");
      sub_2225C3D00((int)&qword_267F7E178[178], "GL_AMD_shader_stencil_export");
      sub_2225C3D00((int)&qword_267F7E178[180], "GL_AMD_conservative_depth");
      sub_2225C3D00((int)&qword_267F7E178[182], "GL_EXT_shader_image_load_store");
      sub_2225C3D00((int)&qword_267F7E178[184], "GL_EXT_vertex_attrib_64bit");
      sub_2225C3D00((int)&qword_267F7E178[186], "GL_NV_gpu_program5");
      sub_2225C3D00((int)&qword_267F7E178[188], "GL_NV_gpu_shader5");
      sub_2225C3D00((int)&qword_267F7E178[190], "GL_NV_shader_buffer_store");
      sub_2225C3D00((int)&qword_267F7E178[192], "GL_NV_tessellation_program5");
      sub_2225C3D00((int)&qword_267F7E178[194], "GL_NV_vdpau_interop");
      sub_2225C3D00((int)&qword_267F7E178[196], "GL_NV_path_rendering");
      sub_2225C3D00((int)&qword_267F7E178[198], "GL_AMD_vertex_shader_viewport_index");
      sub_2225C3D00((int)&qword_267F7E178[200], "GL_AMD_vertex_shader_layer");
      sub_2225C3D00((int)&qword_267F7E178[202], "GL_NV_bindless_texture");
      sub_2225C3D00((int)&qword_267F7E178[204], "GL_NV_shader_atomic_float");
      sub_2225C3D00((int)&qword_267F7E178[206], "GL_AMD_sparse_texture");
      sub_2225C3D00((int)&qword_267F7E178[208], "GL_AMD_shader_trinary_minmax");
      sub_2225C3D00((int)&qword_267F7E178[210], "GL_INTEL_map_texture");
      sub_2225C3D00((int)&qword_267F7E178[212], "GL_EXT_shader_integer_mix");
      sub_2225C3D00((int)&qword_267F7E178[214], "GL_INTEL_fragment_shader_ordering");
      sub_2225C3D00((int)&qword_267F7E178[216], "GL_AMD_shader_stencil_value_export");
      sub_2225C3D00((int)&qword_267F7E178[218], "GL_NV_shader_thread_group");
      sub_2225C3D00((int)&qword_267F7E178[220], "GL_NV_shader_thread_shuffle");
      sub_2225C3D00((int)&qword_267F7E178[222], "GL_EXT_shader_image_load_formatted");
      sub_2225C3D00((int)&qword_267F7E178[224], "GL_AMD_transform_feedback4");
      sub_2225C3D00((int)&qword_267F7E178[226], "GL_AMD_gpu_shader_int64");
      sub_2225C3D00((int)&qword_267F7E178[228], "GL_AMD_gcn_shader");
      sub_2225C3D00((int)&qword_267F7E178[230], "GL_NV_shader_atomic_int64");
      sub_2225C3D00((int)&qword_267F7E178[232], "GL_KHR_blend_equation_advanced");
      sub_2225C3D00((int)&qword_267F7E178[234], "GL_EXT_post_depth_coverage");
      sub_2225C3D00((int)&qword_267F7E178[236], "GL_EXT_raster_multisample");
      sub_2225C3D00((int)&qword_267F7E178[238], "GL_EXT_sparse_texture2");
      sub_2225C3D00((int)&qword_267F7E178[240], "GL_NV_conservative_raster");
      sub_2225C3D00((int)&qword_267F7E178[242], "GL_NV_fill_rectangle");
      sub_2225C3D00((int)&qword_267F7E178[244], "GL_NV_fragment_coverage_to_color");
      sub_2225C3D00((int)&qword_267F7E178[246], "GL_NV_fragment_shader_interlock");
      sub_2225C3D00((int)&qword_267F7E178[248], "GL_NV_framebuffer_mixed_samples");
      sub_2225C3D00((int)&qword_267F7E178[250], "GL_NV_geometry_shader_passthrough");
      sub_2225C3D00((int)&qword_267F7E178[252], "GL_NV_path_rendering_shared_edge");
      sub_2225C3D00((int)&qword_267F7E178[254], "GL_NV_sample_locations");
      sub_2225C3D00((int)&qword_267F7E178[256], "GL_NV_sample_mask_override_coverage");
      sub_2225C3D00((int)&qword_267F7E178[258], "GL_NV_shader_atomic_fp16_vector");
      sub_2225C3D00((int)&qword_267F7E178[260], "GL_OES_texture_3D");
      sub_2225C3D00((int)&qword_267F7E178[262], "GL_OES_standard_derivatives");
      sub_2225C3D00((int)&qword_267F7E178[264], "GL_OES_get_program_binary");
      sub_2225C3D00((int)&qword_267F7E178[266], "GL_AMD_program_binary_Z400");
      sub_2225C3D00((int)&qword_267F7E178[268], "GL_EXT_shader_texture_lod");
      sub_2225C3D00((int)&qword_267F7E178[270], "GL_EXT_frag_depth");
      sub_2225C3D00((int)&qword_267F7E178[272], "GL_OES_EGL_image_external");
      sub_2225C3D00((int)&qword_267F7E178[274], "GL_NV_draw_buffers");
      sub_2225C3D00((int)&qword_267F7E178[276], "GL_EXT_separate_shader_objects");
      sub_2225C3D00((int)&qword_267F7E178[278], "GL_EXT_shadow_samplers");
      sub_2225C3D00((int)&qword_267F7E178[280], "GL_NV_EGL_stream_consumer_external");
      sub_2225C3D00((int)&qword_267F7E178[282], "GL_EXT_sRGB");
      sub_2225C3D00((int)&qword_267F7E178[284], "GL_EXT_robustness");
      sub_2225C3D00((int)&qword_267F7E178[286], "GL_EXT_shader_framebuffer_fetch");
      sub_2225C3D00((int)&qword_267F7E178[288], "GL_EXT_multiview_draw_buffers");
      sub_2225C3D00((int)&qword_267F7E178[290], "GL_NV_texture_array");
      sub_2225C3D00((int)&qword_267F7E178[292], "GL_NV_draw_instanced");
      sub_2225C3D00((int)&qword_267F7E178[294], "GL_NV_shadow_samplers_array");
      sub_2225C3D00((int)&qword_267F7E178[296], "GL_NV_shadow_samplers_cube");
      sub_2225C3D00((int)&qword_267F7E178[298], "GL_EXT_draw_buffers");
      sub_2225C3D00((int)&qword_267F7E178[300], "GL_EXT_pvrtc_sRGB");
      sub_2225C3D00((int)&qword_267F7E178[302], "GL_EXT_draw_instanced");
      sub_2225C3D00((int)&qword_267F7E178[304], "GL_NV_explicit_attrib_location");
      sub_2225C3D00((int)&qword_267F7E178[306], "GL_NV_non_square_matrices");
      sub_2225C3D00((int)&qword_267F7E178[308], "GL_EXT_shader_integer_mix");
      sub_2225C3D00((int)&qword_267F7E178[310], "GL_ARM_shader_framebuffer_fetch");
      sub_2225C3D00((int)&qword_267F7E178[312], "GL_ARM_shader_framebuffer_fetch_depth_stencil");
      sub_2225C3D00((int)&qword_267F7E178[314], "GL_EXT_shader_pixel_local_storage");
      sub_2225C3D00((int)&qword_267F7E178[316], "GL_KHR_blend_equation_advanced");
      sub_2225C3D00((int)&qword_267F7E178[318], "GL_OES_sample_shading");
      sub_2225C3D00((int)&qword_267F7E178[320], "GL_OES_sample_variables");
      sub_2225C3D00((int)&qword_267F7E178[322], "GL_OES_shader_image_atomic");
      sub_2225C3D00((int)&qword_267F7E178[324], "GL_OES_shader_multisample_interpolation");
      sub_2225C3D00((int)&qword_267F7E178[326], "GL_OES_texture_stencil8");
      sub_2225C3D00((int)&qword_267F7E178[328], "GL_OES_texture_storage_multisample_2d_array");
      sub_2225C3D00((int)&qword_267F7E178[330], "GL_EXT_geometry_shader");
      sub_2225C3D00((int)&qword_267F7E178[332], "GL_EXT_gpu_shader5");
      sub_2225C3D00((int)&qword_267F7E178[334], "GL_EXT_shader_implicit_conversions");
      sub_2225C3D00((int)&qword_267F7E178[336], "GL_EXT_shader_io_blocks");
      sub_2225C3D00((int)&qword_267F7E178[338], "GL_EXT_tessellation_shader");
      sub_2225C3D00((int)&qword_267F7E178[340], "GL_EXT_texture_buffer");
      sub_2225C3D00((int)&qword_267F7E178[342], "GL_EXT_texture_cube_map_array");
      sub_2225C3D00((int)&qword_267F7E178[344], "GL_EXT_texture_view");
      sub_2225C3D00((int)&qword_267F7E178[346], "GL_EXT_primitive_bounding_box");
      sub_2225C3D00((int)&qword_267F7E178[348], "GL_ANDROID_extension_pack_es31a");
      sub_2225C3D00((int)&qword_267F7E178[350], "GL_KHR_robust_buffer_access_behavior");
      sub_2225C3D00((int)&qword_267F7E178[352], "GL_KHR_robustness");
      sub_2225C3D00((int)&qword_267F7E178[354], "GL_APPLE_clip_distance");
      sub_2225C3D00((int)&qword_267F7E178[356], "all");
      sub_2225C3D00((int)&qword_267F7E178[358], "GL_APPLE_sa_assertions");
      sub_2225C3D00((int)&qword_267F7E178[360], "FOSL_cruft_compatibility");
      __cxa_guard_release(&qword_267F7ECC8);
      a1 = v2;
    }
  }
  return qword_267F7E178[2 * a1];
}

uint64_t sub_22264FC78(uint64_t a1, void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 31)
  {
    uint64_t v6 = (void *)sub_2225C3C70(a1);
    if (*a2 == *v6 && a2[1] == v6[1] && a2[2] == v6[2] && *(void *)((char *)a2 + 23) == *(void *)((char *)v6 + 23)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_22264FCFC(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 45)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x2DuLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_22264FD68(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 39)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x27uLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

uint64_t sub_22264FDD4(uint64_t a1, const void *a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16) && sub_2225C3D04(a1) == 43)
  {
    uint64_t v6 = (const void *)sub_2225C3C70(a1);
    if (!memcmp(a2, v6, 0x2BuLL)) {
      *(void *)(a1 + 16) = a3;
    }
  }
  return a1;
}

BOOL sub_22264FE40(int a1, uint64_t a2)
{
  char v4 = sub_22264FEFC(a2);
  if ((byte_26AA7F3B8 & 1) == 0)
  {
    sub_222650510(v6, byte_26AA7F1A0);
    sub_22264FF08(v6[0], v6[1]);
    byte_26AA7F3B8 = 1;
  }
  if (((byte_26AA7F1A0[a1] >> v4) & 1) != 0 || (a1 - 491) < 2 || a1 == 403) {
    return 1;
  }
  if (a1 == 415) {
    return sub_222650514(a2);
  }
  return 0;
}

uint64_t sub_22264FEFC(uint64_t a1)
{
  return *(unsigned char *)(a1 + 24) & 0x1F;
}

unsigned char *sub_22264FF08(uint64_t a1, uint64_t a2)
{
  v65[0] = a1;
  v65[1] = a2;
  unsigned int v2 = (unsigned char *)sub_22265053C((uint64_t)v65, 296);
  *v2 |= 2u;
  int v3 = (unsigned char *)sub_22265053C((uint64_t)v65, 79);
  *v3 |= 2u;
  char v4 = (unsigned char *)sub_22265053C((uint64_t)v65, 438);
  *v4 |= 2u;
  uint64_t v5 = (unsigned char *)sub_22265053C((uint64_t)v65, 454);
  *v5 |= 2u;
  uint64_t v6 = (unsigned char *)sub_22265053C((uint64_t)v65, 76);
  *v6 |= 2u;
  uint64_t v7 = (unsigned char *)sub_22265053C((uint64_t)v65, 80);
  *v7 |= 2u;
  uint64_t v8 = (unsigned char *)sub_22265053C((uint64_t)v65, 82);
  *v8 |= 2u;
  uint64_t v9 = (unsigned char *)sub_22265053C((uint64_t)v65, 88);
  *v9 |= 2u;
  uint64_t v10 = (unsigned char *)sub_22265053C((uint64_t)v65, 108);
  *v10 |= 2u;
  uint64_t v11 = (unsigned char *)sub_22265053C((uint64_t)v65, 90);
  *v11 |= 2u;
  uint64_t v12 = (unsigned char *)sub_22265053C((uint64_t)v65, 84);
  *v12 |= 2u;
  uint64_t v13 = (unsigned char *)sub_22265053C((uint64_t)v65, 357);
  *v13 |= 2u;
  uint64_t v14 = (unsigned char *)sub_22265053C((uint64_t)v65, 395);
  *v14 |= 2u;
  uint64_t v15 = (unsigned char *)sub_22265053C((uint64_t)v65, 358);
  *v15 |= 2u;
  uint64_t v16 = (unsigned char *)sub_22265053C((uint64_t)v65, 87);
  *v16 |= 2u;
  uint64_t v17 = (unsigned char *)sub_22265053C((uint64_t)v65, 269);
  *v17 |= 2u;
  uint64_t v18 = (unsigned char *)sub_22265053C((uint64_t)v65, 92);
  *v18 |= 2u;
  uint64_t v19 = (unsigned char *)sub_22265053C((uint64_t)v65, 106);
  *v19 |= 2u;
  uint64_t v20 = (unsigned char *)sub_22265053C((uint64_t)v65, 123);
  *v20 |= 2u;
  uint64_t v21 = (unsigned char *)sub_22265053C((uint64_t)v65, 145);
  *v21 |= 2u;
  uint64_t v22 = (unsigned char *)sub_22265053C((uint64_t)v65, 131);
  *v22 |= 2u;
  uint64_t v23 = (unsigned char *)sub_22265053C((uint64_t)v65, 379);
  *v23 |= 2u;
  uint64_t v24 = (unsigned char *)sub_22265053C((uint64_t)v65, 392);
  *v24 |= 2u;
  uint64_t v25 = (unsigned char *)sub_22265053C((uint64_t)v65, 327);
  *v25 |= 2u;
  uint64_t v26 = (unsigned char *)sub_22265053C((uint64_t)v65, 399);
  *v26 |= 2u;
  uint64_t v27 = (unsigned char *)sub_22265053C((uint64_t)v65, 361);
  *v27 |= 2u;
  uint64_t v28 = (unsigned char *)sub_22265053C((uint64_t)v65, 305);
  *v28 |= 2u;
  uint64_t v29 = (unsigned char *)sub_22265053C((uint64_t)v65, 96);
  *v29 |= 2u;
  uint64_t v30 = (unsigned char *)sub_22265053C((uint64_t)v65, 455);
  *v30 |= 2u;
  uint64_t v31 = (unsigned char *)sub_22265053C((uint64_t)v65, 456);
  *v31 |= 2u;
  uint64_t v32 = (unsigned char *)sub_22265053C((uint64_t)v65, 457);
  *v32 |= 2u;
  uint64_t v33 = (unsigned char *)sub_22265053C((uint64_t)v65, 477);
  *v33 |= 2u;
  uint64_t v34 = (unsigned char *)sub_22265053C((uint64_t)v65, 478);
  *v34 |= 2u;
  uint64_t v35 = (unsigned char *)sub_22265053C((uint64_t)v65, 479);
  *v35 |= 2u;
  uint64_t v36 = (unsigned char *)sub_22265053C((uint64_t)v65, 328);
  *v36 |= 2u;
  uint64_t v37 = (unsigned char *)sub_22265053C((uint64_t)v65, 329);
  *v37 |= 2u;
  uint64_t v38 = (unsigned char *)sub_22265053C((uint64_t)v65, 330);
  *v38 |= 2u;
  uint64_t v39 = (unsigned char *)sub_22265053C((uint64_t)v65, 480);
  *v39 |= 2u;
  uint64_t v40 = (unsigned char *)sub_22265053C((uint64_t)v65, 481);
  *v40 |= 2u;
  uint64_t v41 = (unsigned char *)sub_22265053C((uint64_t)v65, 482);
  *v41 |= 2u;
  uint64_t v42 = (unsigned char *)sub_22265053C((uint64_t)v65, 375);
  *v42 |= 2u;
  uint64_t v43 = (unsigned char *)sub_22265053C((uint64_t)v65, 376);
  *v43 |= 2u;
  uint64_t v44 = (unsigned char *)sub_22265053C((uint64_t)v65, 377);
  *v44 |= 2u;
  uint64_t v45 = (unsigned char *)sub_22265053C((uint64_t)v65, 297);
  *v45 |= 2u;
  uint64_t v46 = (unsigned char *)sub_22265053C((uint64_t)v65, 298);
  *v46 |= 2u;
  uint64_t v47 = (unsigned char *)sub_22265053C((uint64_t)v65, 299);
  *v47 |= 2u;
  uint64_t v48 = (unsigned char *)sub_22265053C((uint64_t)v65, 380);
  *v48 |= 2u;
  uint64_t v49 = (unsigned char *)sub_22265053C((uint64_t)v65, 384);
  *v49 |= 2u;
  uint64_t v50 = (unsigned char *)sub_22265053C((uint64_t)v65, 388);
  *v50 |= 2u;
  uint64_t v51 = (unsigned char *)sub_22265053C((uint64_t)v65, 483);
  *v51 |= 2u;
  uint64_t v52 = (unsigned char *)sub_22265053C((uint64_t)v65, 484);
  *v52 |= 2u;
  uint64_t v53 = (unsigned char *)sub_22265053C((uint64_t)v65, 485);
  *v53 |= 2u;
  uint64_t v54 = (unsigned char *)sub_22265053C((uint64_t)v65, 465);
  *v54 |= 2u;
  uint64_t v55 = (unsigned char *)sub_22265053C((uint64_t)v65, 469);
  *v55 |= 2u;
  uint64_t v56 = (unsigned char *)sub_22265053C((uint64_t)v65, 473);
  *v56 |= 2u;
  uint64_t v57 = (unsigned char *)sub_22265053C((uint64_t)v65, 486);
  *v57 |= 2u;
  uint64_t v58 = (unsigned char *)sub_22265053C((uint64_t)v65, 487);
  *v58 |= 2u;
  uint64_t v59 = (unsigned char *)sub_22265053C((uint64_t)v65, 488);
  *v59 |= 2u;
  uint64_t v60 = (unsigned char *)sub_22265053C((uint64_t)v65, 403);
  *v60 |= 2u;
  uint64_t v61 = (unsigned char *)sub_22265053C((uint64_t)v65, 489);
  *v61 |= 2u;
  uint64_t v62 = (unsigned char *)sub_22265053C((uint64_t)v65, 408);
  *v62 |= 2u;
  uint64_t v63 = (unsigned char *)sub_22265053C((uint64_t)v65, 490);
  *v63 |= 2u;
  __n128 result = (unsigned char *)sub_22265053C((uint64_t)v65, 101);
  *result |= 2u;
  return result;
}

BOOL sub_222650514(uint64_t a1)
{
  __int16 v1 = (_WORD *)sub_222650574(a1);

  return sub_22265057C(v1);
}

uint64_t sub_22265053C(uint64_t a1, uint64_t a2)
{
  return sub_2225CC180(a1) + a2;
}

void *sub_222650568(void *result, uint64_t a2)
{
  *__n128 result = a2;
  result[1] = 526;
  return result;
}

uint64_t sub_222650574(uint64_t a1)
{
  return sub_22264D9B8(a1, 0x8Bu);
}

BOOL sub_22265057C(_WORD *a1)
{
  return (*a1 & 0x700) != 0x300 && (*a1 & 0x700) != 0;
}

uint64_t sub_222650594(uint64_t a1)
{
  unsigned int v2 = sub_222650600((void *)a1);
  sub_2225F3264((_DWORD *)v2 + 2);
  *(void *)a1 = &unk_26D4DC520;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a1 + 24) & 0xE0 | 1;
  uint64_t v3 = sub_2225C26A4(724);
  *(void *)(a1 + 16) = sub_222650620(v3);
  return a1;
}

void *sub_222650600(void *result)
{
  *__n128 result = &unk_26D4DC0D0;
  return result;
}

BOOL sub_222650628(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a1;
  if (a2 < 4) {
    return 0;
  }
  if (a2 == 6) {
    return sub_222650670(&v3);
  }
  return 1;
}

BOOL sub_222650670(uint64_t *a1)
{
  __int16 v1 = (_WORD *)sub_222651010(*a1);

  return sub_22265057C(v1);
}

uint64_t sub_22265069C(void *a1, uint64_t a2)
{
  *a1 = &unk_26D4DC520;
  uint64_t v3 = (void *)a1[2];
  if (v3) {
    j__free(v3);
  }

  return nullsub_1(a1, a2);
}

void sub_2226506FC(void *a1, uint64_t a2)
{
  unsigned int v2 = (void *)sub_2226506F8(a1, a2);

  j__free(v2);
}

uint64_t sub_222650724(uint64_t a1)
{
  unsigned int v1 = sub_22264FEFC(a1);

  return sub_222651018(v1);
}

uint64_t sub_22265074C(uint64_t a1)
{
  uint64_t v2 = sub_222650FE4();
  sub_222650FE8(v2 + 4, 1);
  sub_222650FE8(a1 + 8, 2);
  sub_222650FE8(a1 + 12, 3);
  sub_222650FE8(a1 + 16, 4);
  sub_222650FE8(a1 + 20, 5);
  sub_222650FE8(a1 + 24, 6);
  sub_222650FE8(a1 + 28, 7);
  sub_222650FE8(a1 + 32, 8);
  sub_222650FE8(a1 + 36, 9);
  sub_222650FE8(a1 + 40, 10);
  sub_222650FE8(a1 + 44, 11);
  sub_222650FE8(a1 + 48, 12);
  sub_222650FE8(a1 + 52, 13);
  sub_222650FE8(a1 + 56, 14);
  sub_222650FE8(a1 + 60, 15);
  sub_222650FE8(a1 + 64, 16);
  sub_222650FE8(a1 + 68, 17);
  sub_222650FE8(a1 + 72, 18);
  sub_222650FE8(a1 + 76, 19);
  sub_222650FE8(a1 + 80, 20);
  sub_222650FE8(a1 + 84, 21);
  sub_222650FE8(a1 + 88, 22);
  sub_222650FE8(a1 + 92, 23);
  sub_222650FE8(a1 + 96, 24);
  sub_222650FE8(a1 + 100, 25);
  sub_222650FE8(a1 + 104, 26);
  sub_222650FE8(a1 + 108, 27);
  sub_222650FE8(a1 + 112, 28);
  sub_222650FE8(a1 + 116, 29);
  sub_222650FE8(a1 + 120, 30);
  sub_222650FE8(a1 + 124, 31);
  sub_222650FE8(a1 + 128, 32);
  sub_222650FE8(a1 + 132, 33);
  sub_222650FE8(a1 + 136, 34);
  sub_222650FE8(a1 + 140, 35);
  sub_222650FE8(a1 + 144, 36);
  sub_222650FE8(a1 + 148, 37);
  sub_222650FE8(a1 + 152, 38);
  sub_222650FE8(a1 + 156, 39);
  sub_222650FE8(a1 + 160, 40);
  sub_222650FE8(a1 + 164, 41);
  sub_222650FE8(a1 + 168, 42);
  sub_222650FE8(a1 + 172, 43);
  sub_222650FE8(a1 + 176, 44);
  sub_222650FE8(a1 + 180, 45);
  sub_222650FE8(a1 + 184, 46);
  sub_222650FE8(a1 + 188, 47);
  sub_222650FE8(a1 + 192, 48);
  sub_222650FE8(a1 + 196, 49);
  sub_222650FE8(a1 + 200, 50);
  sub_222650FE8(a1 + 204, 51);
  sub_222650FE8(a1 + 208, 52);
  sub_222650FE8(a1 + 212, 53);
  sub_222650FE8(a1 + 216, 54);
  sub_222650FE8(a1 + 220, 55);
  sub_222650FE8(a1 + 224, 56);
  sub_222650FE8(a1 + 228, 57);
  sub_222650FE8(a1 + 232, 58);
  sub_222650FE8(a1 + 236, 59);
  sub_222650FE8(a1 + 240, 60);
  sub_222650FE8(a1 + 244, 61);
  sub_222650FE8(a1 + 248, 62);
  sub_222650FE8(a1 + 252, 63);
  sub_222650FE8(a1 + 256, 64);
  sub_222650FE8(a1 + 260, 65);
  sub_222650FE8(a1 + 264, 66);
  sub_222650FE8(a1 + 268, 67);
  sub_222650FE8(a1 + 272, 68);
  sub_222650FE8(a1 + 276, 69);
  sub_222650FE8(a1 + 280, 70);
  sub_222650FE8(a1 + 284, 71);
  sub_222650FE8(a1 + 288, 72);
  sub_222650FE8(a1 + 292, 73);
  sub_222650FE8(a1 + 296, 74);
  sub_222650FE8(a1 + 300, 75);
  sub_222650FE8(a1 + 304, 76);
  sub_222650FE8(a1 + 308, 77);
  sub_222650FE8(a1 + 312, 78);
  sub_222650FE8(a1 + 316, 79);
  sub_222650FE8(a1 + 320, 80);
  sub_222650FE8(a1 + 324, 81);
  sub_222650FE8(a1 + 328, 82);
  sub_222650FE8(a1 + 332, 83);
  sub_222650FE8(a1 + 336, 84);
  sub_222650FE8(a1 + 340, 85);
  sub_222650FE8(a1 + 344, 86);
  sub_222650FE8(a1 + 348, 87);
  sub_222650FE8(a1 + 352, 88);
  sub_222650FE8(a1 + 356, 89);
  sub_222650FE8(a1 + 360, 90);
  sub_222650FE8(a1 + 364, 91);
  sub_222650FE8(a1 + 368, 92);
  sub_222650FE8(a1 + 372, 93);
  sub_222650FE8(a1 + 376, 94);
  sub_222650FE8(a1 + 380, 95);
  sub_222650FE8(a1 + 384, 96);
  sub_222650FE8(a1 + 388, 97);
  sub_222650FE8(a1 + 392, 98);
  sub_222650FE8(a1 + 396, 99);
  sub_222650FE8(a1 + 400, 100);
  sub_222650FE8(a1 + 404, 101);
  sub_222650FE8(a1 + 408, 102);
  sub_222650FE8(a1 + 412, 103);
  sub_222650FE8(a1 + 416, 104);
  sub_222650FE8(a1 + 420, 105);
  sub_222650FE8(a1 + 424, 106);
  sub_222650FE8(a1 + 428, 107);
  sub_222650FE8(a1 + 432, 108);
  sub_222650FE8(a1 + 436, 109);
  sub_222650FE8(a1 + 440, 110);
  sub_222650FE8(a1 + 444, 111);
  sub_222650FE8(a1 + 448, 112);
  sub_222650FE8(a1 + 452, 113);
  sub_222650FE8(a1 + 456, 114);
  sub_222650FE8(a1 + 460, 115);
  sub_222650FE8(a1 + 464, 116);
  sub_222650FE8(a1 + 468, 117);
  sub_222650FE8(a1 + 472, 118);
  sub_222650FE8(a1 + 476, 119);
  sub_222650FE8(a1 + 480, 120);
  sub_222650FE8(a1 + 484, 121);
  sub_222650FE8(a1 + 488, 122);
  sub_222650FE8(a1 + 492, 123);
  sub_222650FE8(a1 + 496, 124);
  sub_222650FE8(a1 + 500, 125);
  sub_222650FE8(a1 + 504, 126);
  sub_222650FE8(a1 + 508, 127);
  sub_222650FE8(a1 + 512, 128);
  sub_222650FE8(a1 + 516, 129);
  sub_222650FE8(a1 + 520, 130);
  sub_222650FE8(a1 + 524, 131);
  sub_222650FE8(a1 + 528, 132);
  sub_222650FE8(a1 + 532, 133);
  sub_222650FE8(a1 + 536, 134);
  sub_222650FE8(a1 + 540, 135);
  sub_222650FE8(a1 + 544, 136);
  sub_222650FE8(a1 + 548, 137);
  sub_222650FE8(a1 + 552, 138);
  sub_222650FE8(a1 + 556, 139);
  sub_222650FE8(a1 + 560, 140);
  sub_222650FE8(a1 + 564, 141);
  sub_222650FE8(a1 + 568, 142);
  sub_222650FE8(a1 + 572, 143);
  sub_222650FE8(a1 + 576, 144);
  sub_222650FE8(a1 + 580, 145);
  sub_222650FE8(a1 + 584, 146);
  sub_222650FE8(a1 + 588, 147);
  sub_222650FE8(a1 + 592, 148);
  sub_222650FE8(a1 + 596, 149);
  sub_222650FE8(a1 + 600, 150);
  sub_222650FE8(a1 + 604, 151);
  sub_222650FE8(a1 + 608, 152);
  sub_222650FE8(a1 + 612, 153);
  sub_222650FE8(a1 + 616, 154);
  sub_222650FE8(a1 + 620, 155);
  sub_222650FE8(a1 + 624, 156);
  sub_222650FE8(a1 + 628, 157);
  sub_222650FE8(a1 + 632, 158);
  sub_222650FE8(a1 + 636, 159);
  sub_222650FE8(a1 + 640, 160);
  sub_222650FE8(a1 + 644, 161);
  sub_222650FE8(a1 + 648, 162);
  sub_222650FE8(a1 + 652, 163);
  sub_222650FE8(a1 + 656, 164);
  sub_222650FE8(a1 + 660, 165);
  sub_222650FE8(a1 + 664, 166);
  sub_222650FE8(a1 + 668, 167);
  sub_222650FE8(a1 + 672, 168);
  sub_222650FE8(a1 + 676, 169);
  sub_222650FE8(a1 + 680, 170);
  sub_222650FE8(a1 + 684, 171);
  sub_222650FE8(a1 + 688, 172);
  sub_222650FE8(a1 + 692, 173);
  sub_222650FE8(a1 + 696, 174);
  sub_222650FE8(a1 + 700, 175);
  sub_222650FE8(a1 + 704, 176);
  sub_222650FE8(a1 + 708, 177);
  sub_222650FE8(a1 + 712, 178);
  sub_222650FE8(a1 + 716, 179);
  sub_222650FE8(a1 + 720, 180);
  return a1;
}

_WORD *sub_222650FEC(_WORD *result)
{
  *result &= 0xF800u;
  return result;
}

_WORD *sub_222650FFC(_WORD *result, unsigned __int8 a2)
{
  *__n128 result = *result & 0xF800 | a2;
  return result;
}

uint64_t sub_222651010(uint64_t a1)
{
  return sub_22264D9B8(a1, 0xB4u);
}

uint64_t sub_222651018(unsigned int a1)
{
  return *((unsigned int *)&unk_2226D10F8 + a1);
}

BOOL sub_222651028(int a1)
{
  return a1 == 100;
}

uint64_t sub_222651034(uint64_t a1)
{
  uint64_t v2 = sub_2225F3264((_DWORD *)a1);
  sub_2225E0EC4((void *)v2 + 1);
  sub_2225F48E0(a1 + 144);
  memset(v6, 0, sizeof(v6));
  sub_2226510CC((uint64_t)v6);
  sub_2225CCC70(v5);
  sub_2225F83E8(a1 + 184, (uint64_t)v6, v5);
  sub_2225F83E4(v5);
  sub_2225F8534(v6);
  *(void *)(a1 + 928) = 0;
  uint64_t v3 = sub_2225C26A4(1776);
  *(void *)(a1 + 928) = sub_2226510D0(v3);
  return a1;
}

uint64_t sub_2226510D8(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 144);
  uint64_t v3 = (uint64_t *)sub_2225C3C70(a1 + 144);
  uint64_t v4 = sub_2225C3D04((uint64_t)v2);
  if (v3 != (uint64_t *)v4)
  {
    uint64_t v5 = (uint64_t *)v4;
    do
    {
      if (*v3)
      {
        uint64_t v6 = (void *)sub_222651174(*v3);
        j__free(v6);
      }
      ++v3;
    }
    while (v3 != v5);
  }
  sub_2225C5D90(v2);
  uint64_t v7 = *(void *)(a1 + 928);
  if (v7)
  {
    uint64_t v8 = (void *)sub_222651178(v7);
    j__free(v8);
  }
  sub_2225F8538(a1 + 184);
  sub_2225C56C4(v2);
  sub_2225E1434(a1 + 8);
  return a1;
}

void *sub_222651180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_2225C26A4(512);
  uint64_t v8 = sub_2226511E4(v6, a1, a2, a3);
  sub_2225CC7B8(a1 + 144, &v8);
  return v8;
}

uint64_t sub_2226511E8(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD04(a1);
  sub_2225CAD04(v2 + 24);
  return a1;
}

uint64_t sub_222651218(uint64_t a1)
{
  uint64_t v2 = sub_2226523F0() + 4;
  sub_2226523F4(v2, 3);
  sub_2226523F4(a1 + 8, 4);
  sub_2226523F4(a1 + 12, 5);
  sub_2226523F4(a1 + 16, 6);
  sub_2226523F4(a1 + 20, 7);
  sub_2226523F8(a1 + 24, v2, 2, 8);
  sub_2226523F8(a1 + 40, v2, 3, 9);
  sub_2226523F8(a1 + 56, v2, 4, 10);
  sub_2226523F8(a1 + 72, a1 + 8, 2, 11);
  sub_2226523F8(a1 + 88, a1 + 8, 3, 12);
  sub_2226523F8(a1 + 104, a1 + 8, 4, 13);
  sub_2226523F8(a1 + 120, a1 + 12, 2, 14);
  sub_2226523F8(a1 + 136, a1 + 12, 3, 15);
  sub_2226523F8(a1 + 152, a1 + 12, 4, 16);
  sub_2226523F8(a1 + 168, a1 + 16, 2, 17);
  sub_2226523F8(a1 + 184, a1 + 16, 3, 18);
  sub_2226523F8(a1 + 200, a1 + 16, 4, 19);
  sub_2226523F8(a1 + 216, a1 + 20, 2, 20);
  sub_2226523F8(a1 + 232, a1 + 20, 3, 21);
  sub_2226523F8(a1 + 248, a1 + 20, 4, 22);
  sub_2226523FC(a1 + 264, v2, 2, 2, 23);
  sub_2226523FC(a1 + 280, v2, 3, 3, 24);
  sub_2226523FC(a1 + 296, v2, 4, 4, 25);
  sub_2226523FC(a1 + 312, v2, 2, 3, 26);
  sub_2226523FC(a1 + 328, v2, 2, 4, 27);
  sub_2226523FC(a1 + 344, v2, 3, 2, 28);
  sub_2226523FC(a1 + 360, v2, 3, 4, 29);
  sub_2226523FC(a1 + 376, v2, 4, 2, 30);
  sub_2226523FC(a1 + 392, v2, 4, 3, 31);
  sub_2226523FC(a1 + 408, a1 + 8, 2, 2, 32);
  sub_2226523FC(a1 + 424, a1 + 8, 3, 3, 33);
  sub_2226523FC(a1 + 440, a1 + 8, 4, 4, 34);
  sub_2226523FC(a1 + 456, a1 + 8, 2, 3, 35);
  sub_2226523FC(a1 + 472, a1 + 8, 2, 4, 36);
  sub_2226523FC(a1 + 488, a1 + 8, 3, 2, 37);
  sub_2226523FC(a1 + 504, a1 + 8, 3, 4, 38);
  sub_2226523FC(a1 + 520, a1 + 8, 4, 2, 39);
  sub_2226523FC(a1 + 536, a1 + 8, 4, 3, 40);
  sub_222652400(a1 + 552, 41, 0, 0);
  sub_222652400(a1 + 556, 42, 1, 0);
  sub_222652400(a1 + 560, 43, 0, 1);
  sub_222652400(a1 + 564, 44, 1, 1);
  sub_222652404(a1 + 568, 0);
  sub_222652408();
  sub_22265240C(&v84, 1);
  sub_222652410(a1 + 968, v84, 1, 10, 0, 2);
  sub_22265240C(&v83, 2);
  sub_222652410(a1 + 976, v83, 2, 13, 0, 2);
  sub_222652418(&v82, 1);
  sub_222652410(a1 + 984, v82, 3, 0, 0, 0);
  sub_222652418(&v81, 2);
  sub_222652410(a1 + 992, v81, 4, 0, 0, 0);
  sub_222652418(&v80, 3);
  sub_222652410(a1 + 1000, v80, 5, 0, 0, 0);
  sub_222652418(&v79, 4);
  sub_222652410(a1 + 1008, v79, 6, 0, 0, 0);
  sub_222652418(&v78, 5);
  sub_222652410(a1 + 1016, v78, 7, 0, 0, 0);
  sub_222652418(&v77, 6);
  sub_222652410(a1 + 1024, v77, 8, 0, 0, 0);
  sub_222652418(&v76, 7);
  sub_222652410(a1 + 1032, v76, 9, 0, 0, 0);
  sub_222652418(&v75, 8);
  sub_222652410(a1 + 1040, v75, 10, 0, 0, 0);
  sub_222652418(&v74, 9);
  sub_222652410(a1 + 1048, v74, 11, 0, 0, 0);
  sub_222652418(&v73, 10);
  sub_222652410(a1 + 1056, v73, 12, 0, 0, 0);
  sub_222652418(&v72, 11);
  sub_222652410(a1 + 1064, v72, 13, 0, 0, 0);
  sub_222652418(&v71, 12);
  sub_222652410(a1 + 1072, v71, 14, 0, 0, 0);
  sub_222652418(&v70, 13);
  sub_222652410(a1 + 1080, v70, 15, 0, 0, 0);
  sub_222652418(&v69, 14);
  sub_222652410(a1 + 1088, v69, 16, 0, 0, 0);
  sub_222652418(&v68, 15);
  sub_222652410(a1 + 1096, v68, 17, 0, 0, 0);
  sub_222652418(&v67, 16);
  sub_222652410(a1 + 1104, v67, 18, 0, 0, 0);
  sub_222652418(&v66, 17);
  sub_222652410(a1 + 1112, v66, 19, 0, 0, 0);
  sub_222652418(&v65, 18);
  sub_222652410(a1 + 1120, v65, 20, 0, 0, 0);
  sub_222652418(&v64, 19);
  sub_222652410(a1 + 1128, v64, 21, 0, 0, 0);
  sub_222652418(&v63, 20);
  sub_222652410(a1 + 1136, v63, 22, 0, 0, 0);
  sub_222652418(&v62, 21);
  sub_222652410(a1 + 1144, v62, 23, 0, 0, 0);
  sub_222652418(&v61, 22);
  sub_222652410(a1 + 1152, v61, 24, 0, 0, 0);
  sub_222652418(&v60, 23);
  sub_222652410(a1 + 1160, v60, 25, 0, 0, 0);
  sub_222652418(&v59, 24);
  sub_222652410(a1 + 1168, v59, 26, 0, 0, 0);
  sub_222652418(&v58, 25);
  sub_222652410(a1 + 1176, v58, 27, 0, 0, 0);
  sub_222652418(&v57, 26);
  sub_222652410(a1 + 1184, v57, 28, 0, 0, 0);
  sub_222652418(&v56, 27);
  sub_222652410(a1 + 1192, v56, 29, 0, 0, 0);
  sub_222652418(&v55, 28);
  sub_222652410(a1 + 1200, v55, 30, 0, 0, 0);
  sub_222652418(&v54, 29);
  sub_222652410(a1 + 1208, v54, 31, 0, 0, 0);
  sub_222652418(&v53, 30);
  sub_222652410(a1 + 1216, v53, 32, 0, 0, 0);
  sub_222652418(&v52, 31);
  sub_222652410(a1 + 1224, v52, 33, 0, 0, 0);
  sub_222652418(&v51, 32);
  sub_222652410(a1 + 1232, v51, 34, 0, 0, 0);
  sub_222652418(&v50, 33);
  sub_222652410(a1 + 1240, v50, 35, 0, 0, 0);
  sub_222652418(&v49, 34);
  sub_222652410(a1 + 1248, v49, 36, 0, 0, 0);
  sub_222652418(&v48, 35);
  sub_222652410(a1 + 1256, v48, 37, 0, 0, 0);
  sub_222652418(&v47, 36);
  sub_222652410(a1 + 1264, v47, 38, 0, 0, 0);
  sub_222652418(&v46, 37);
  sub_222652410(a1 + 1272, v46, 39, 0, 0, 0);
  sub_222652418(&v45, 38);
  sub_222652410(a1 + 1280, v45, 40, 0, 0, 0);
  sub_222652418(&v44, 39);
  sub_222652410(a1 + 1288, v44, 41, 0, 0, 0);
  sub_222652418(&v43, 40);
  sub_222652410(a1 + 1296, v43, 42, 0, 0, 0);
  sub_222652418(&v42, 41);
  sub_222652410(a1 + 1304, v42, 43, 0, 0, 0);
  sub_222652418(&v41, 42);
  sub_222652410(a1 + 1312, v41, 44, 0, 0, 0);
  sub_222652418(&v40, 43);
  sub_222652410(a1 + 1320, v40, 45, 0, 0, 0);
  sub_222652418(&v39, 44);
  sub_222652410(a1 + 1328, v39, 46, 0, 0, 0);
  sub_222652418(&v38, 45);
  sub_222652410(a1 + 1336, v38, 47, 0, 0, 0);
  sub_222652418(&v37, 46);
  sub_222652410(a1 + 1344, v37, 48, 0, 0, 0);
  sub_222652418(&v36, 47);
  sub_222652410(a1 + 1352, v36, 49, 0, 0, 0);
  sub_222652418(&v35, 48);
  sub_222652410(a1 + 1360, v35, 50, 0, 0, 0);
  sub_222652418(&v34, 49);
  sub_222652410(a1 + 1368, v34, 51, 0, 0, 0);
  sub_222652418(&v33, 50);
  sub_222652410(a1 + 1376, v33, 52, 0, 0, 0);
  sub_222652418(&v32, 51);
  sub_222652410(a1 + 1384, v32, 53, 0, 0, 0);
  sub_222652418(&v31, 52);
  sub_222652410(a1 + 1392, v31, 54, 0, 0, 0);
  sub_222652418(&v30, 53);
  sub_222652410(a1 + 1400, v30, 55, 0, 0, 0);
  sub_222652418(&v29, 54);
  sub_222652410(a1 + 1408, v29, 56, 0, 0, 0);
  sub_222652418(&v28, 55);
  sub_222652410(a1 + 1416, v28, 57, 0, 0, 0);
  sub_222652418(&v27, 56);
  sub_222652410(a1 + 1424, v27, 58, 0, 0, 0);
  sub_222652418(&v26, 57);
  sub_222652410(a1 + 1432, v26, 59, 0, 0, 0);
  sub_222652418(&v25, 58);
  sub_222652410(a1 + 1440, v25, 60, 0, 0, 0);
  sub_222652418(&v24, 59);
  sub_222652410(a1 + 1448, v24, 61, 0, 0, 0);
  sub_222652418(&v23, 60);
  sub_222652410(a1 + 1456, v23, 62, 0, 0, 0);
  sub_222652418(&v22, 61);
  sub_222652410(a1 + 1464, v22, 63, 0, 0, 0);
  sub_222652418(&v21, 62);
  sub_222652410(a1 + 1472, v21, 64, 0, 0, 0);
  sub_222652418(&v20, 63);
  sub_222652410(a1 + 1480, v20, 65, 0, 0, 0);
  sub_222652418(&v19, 64);
  sub_222652410(a1 + 1488, v19, 66, 0, 0, 0);
  sub_222652418(&v18, 65);
  sub_222652410(a1 + 1496, v18, 67, 0, 0, 0);
  sub_222652418(&v17, 66);
  sub_222652410(a1 + 1504, v17, 68, 0, 0, 0);
  sub_222652418(&v16, 67);
  sub_222652410(a1 + 1512, v16, 69, 0, 0, 0);
  sub_222652418(&v15, 68);
  sub_222652410(a1 + 1520, v15, 70, 0, 0, 0);
  sub_222652418(&v14, 69);
  sub_222652410(a1 + 1528, v14, 71, 0, 0, 0);
  sub_222652418(&v13, 70);
  sub_222652410(a1 + 1536, v13, 72, 0, 0, 0);
  sub_222652418(&v12, 71);
  sub_222652410(a1 + 1544, v12, 73, 0, 0, 0);
  sub_222652418(&v11, 72);
  sub_222652410(a1 + 1552, v11, 74, 0, 0, 0);
  sub_222652418(&v10, 73);
  sub_222652410(a1 + 1560, v10, 75, 0, 0, 0);
  sub_222652418(&v9, 74);
  sub_222652410(a1 + 1568, v9, 76, 0, 0, 0);
  sub_22265241C(&v8, 1);
  sub_222652410(a1 + 1576, v8, 77, 0, 0, 0);
  sub_22265241C(&v7, 2);
  sub_222652410(a1 + 1584, v7, 78, 0, 0, 0);
  sub_22265241C(&v6, 3);
  sub_222652410(a1 + 1592, v6, 79, 0, 0, 0);
  sub_22265241C(&v5, 4);
  sub_222652410(a1 + 1600, v5, 80, 0, 0, 0);
  sub_22265241C(&v4, 5);
  sub_222652410(a1 + 1608, v4, 81, 0, 0, 0);
  sub_2225E0EC4((void *)(a1 + 1616));
  sub_222608F94(a1 + 1752, 0);
  return a1;
}

uint64_t sub_222652410(uint64_t a1, int a2, __int16 a3, __int16 a4, char a5, char a6)
{
  return sub_2226527C0(a1, a2, a3, a4, a5, a6);
}

unsigned char *sub_222652420(unsigned char *a1)
{
  return sub_22265242C(a1, 4, 2);
}

unsigned char *sub_22265242C(unsigned char *a1, char a2, char a3)
{
  __n128 result = sub_22265245C(a1, a2);
  result[1] = result[1] & 0x80 | a3 & 0x7F;
  return result;
}

unsigned char *sub_22265245C(unsigned char *result, char a2)
{
  *__n128 result = *result & 0xF0 | a2 & 0xF;
  return result;
}

unsigned char *sub_22265246C(unsigned char *a1, char a2)
{
  return sub_22265242C(a1, 0, a2);
}

unsigned char *sub_222652478(unsigned char *a1, uint64_t a2, char a3, char a4)
{
  __n128 result = sub_22265242C(a1, 1, a4);
  result[2] = result[2] & 0xF8 | a3 & 7;
  *((void *)result + 1) = a2;
  return result;
}

unsigned char *sub_2226524B8(unsigned char *a1, uint64_t a2, char a3, char a4, char a5)
{
  __n128 result = sub_22265242C(a1, 2, a5);
  result[2] = a3 & 7 | (8 * (a4 & 7)) | result[2] & 0xC0;
  *((void *)result + 1) = a2;
  return result;
}

unsigned char *sub_222652510(unsigned char *a1, char a2, char a3, char a4)
{
  __n128 result = sub_22265242C(a1, 3, a2);
  result[2] = a3 & 3 | (4 * (a4 & 1)) | result[2] & 0xF8;
  return result;
}

uint64_t sub_222652558(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  int v4 = (int *)nullsub_1(a1, a2);
  sub_22265258C(v4, v2);
  return a1;
}

uint64_t sub_22265258C(int *a1, unsigned int a2)
{
  int v3 = *a1;
  *a1 |= 1u;
  if (a2 >= 0x11)
  {
    *a1 = v3 & 0xFFFFFFFE;
    int v5 = (void *)sub_222612AC0((uint64_t)a1);
    *int v5 = sub_222652604((uint64_t)a1, a2);
    v5[1] = v6;
  }

  return sub_222652638(a1);
}

uint64_t sub_222652604(uint64_t a1, unsigned int a2)
{
  return sub_2225C26A4(24 * a2);
}

uint64_t sub_222652638(int *a1)
{
  sub_222612B58(a1, 0);
  uint64_t v2 = sub_222612B5C((uint64_t)a1, 0);
  uint64_t v3 = sub_2226526A4(v2);
  uint64_t v5 = v4;
  uint64_t v6 = (uint64_t *)sub_2226526A8(a1);
  uint64_t result = sub_2226526AC((uint64_t)a1);
  while (v6 != (uint64_t *)result)
  {
    *uint64_t v6 = v3;
    v6[1] = v5;
    v6 += 3;
  }
  return result;
}

uint64_t sub_2226526AC(uint64_t a1)
{
  uint64_t v2 = sub_2226526A8();
  return v2 + 24 * sub_222612BF0(a1);
}

uint64_t sub_2226526E4()
{
  uint64_t v2 = sub_2225F9A58();
  int v1 = sub_2225F5140();
  return sub_222611A80((uint64_t)&v2, (uint64_t)&v1);
}

uint64_t sub_22265271C()
{
  uint64_t result = sub_22265274C();
  int v1 = (*(unsigned __int8 *)(result + 6) << 16) & 0xE00000;
  *(_WORD *)(result + 4) = 0;
  *(unsigned char *)(result + 6) = BYTE2(v1);
  return result;
}

_DWORD *sub_222652750(_DWORD *a1)
{
  return a1;
}

_DWORD *sub_222652778(_DWORD *result)
{
  *result &= 0xFF800000;
  return result;
}

unsigned int *sub_222652788(unsigned int *a1, char a2)
{
  *a1 = *a1 & 0xFFFE0FFF | ((a2 & 0x1F) << 12);
  return a1;
}

uint64_t sub_2226527C0(uint64_t result, int a2, __int16 a3, __int16 a4, char a5, char a6)
{
  *(_DWORD *)uint64_t result = a2;
  unsigned int v6 = ((a4 & 0x7F) << 10) & 0xFF01FFFF | ((a5 & 3) << 17) & 0xFF07FFFF | ((a6 & 3) << 19) & 0xFF1FFFFF | (((*(unsigned __int8 *)(result + 6) >> 5) & 7) << 21);
  *(_WORD *)(result + 4) = a3 & 0x3FF | (a4 << 10);
  *(unsigned char *)(result + 6) = BYTE2(v6);
  return result;
}

unsigned int *sub_2226527F0(unsigned int *a1, char a2)
{
  *a1 = *a1 & 0xFFFFFF80 | a2 & 0x7F;
  return a1;
}

unsigned int *sub_222652828(unsigned int *a1, char a2)
{
  *a1 = *a1 & 0xFFFFF07F | ((a2 & 0x1F) << 7);
  return a1;
}

uint64_t sub_222652860(uint64_t a1)
{
  sub_2226528D4(a1 + 176);
  sub_2226528D8(a1 + 168);
  sub_2226528DC(a1 + 160);
  sub_2226528E0(a1 + 128);
  sub_2225E4E68(a1 + 96);
  sub_2225E4E68(a1 + 72);
  sub_2225E4E68(a1 + 48);
  sub_2225E4E68(a1 + 24);

  return sub_2225E4E68(a1);
}

uint64_t sub_2226528E4(uint64_t a1)
{
  return a1;
}

void **sub_222652920(void **a1)
{
  return a1;
}

uint64_t sub_22265294C(uint64_t a1)
{
  sub_222652990(a1 + 184);
  sub_2226489C0(a1 + 88);

  return sub_2225C56C4(a1);
}

uint64_t sub_222652994(uint64_t a1)
{
  sub_2226529E0(a1 + 96);
  sub_2226529E4(a1 + 64);
  sub_2226529E8(a1 + 32);

  return sub_2226529EC(a1);
}

void *sub_2226529FC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_222652A88(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_222652B14(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t *sub_222652B98(uint64_t *a1)
{
  return a1;
}

uint64_t sub_222652BC0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_222652BD0();
  }
  return result;
}

void sub_222652BD4(_DWORD *a1)
{
  if ((*a1)-- == 1)
  {
    uint64_t v2 = (void *)sub_22260B3A8();
    j__free(v2);
  }
}

_DWORD **sub_222652C14(_DWORD **a1)
{
  return a1;
}

_DWORD *sub_222652C3C(_DWORD **a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_222652C4C((uint64_t)result);
  }
  return result;
}

_DWORD *sub_222652C4C(uint64_t a1)
{
  return sub_222652C54((_DWORD *)(a1 + 8));
}

_DWORD *sub_222652C54(_DWORD *result)
{
  if ((*result)-- == 1) {
    return (_DWORD *)(*(uint64_t (**)(void))(*((void *)result - 1) + 16))();
  }
  return result;
}

void **sub_222652C8C(void **a1)
{
  return a1;
}

uint64_t sub_222652CBC(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_2225F9EB8();
    uint64_t v4 = sub_222652D44();
    uint64_t v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_222608BD4(a1);
    if (v5 != (uint64_t *)result)
    {
      unsigned int v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_2225D085C(*v5, v4);
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t sub_222652D48()
{
  return -16;
}

uint64_t sub_222652D50(uint64_t a1)
{
  return a1;
}

unsigned char *sub_222652D90(unsigned char *a1)
{
  return a1;
}

uint64_t sub_222652DC0(uint64_t a1)
{
  uint64_t result = sub_222612BF0(a1);
  if (result)
  {
    v8[0] = sub_2226526A4(result);
    v8[1] = v3;
    v7[0] = sub_222652E48();
    v7[1] = v4;
    uint64_t v5 = sub_2226526A8(a1);
    uint64_t result = sub_2226526AC(a1);
    if (v5 != result)
    {
      uint64_t v6 = result;
      do
      {
        uint64_t result = sub_222652E4C(v5, (uint64_t)v8);
        if ((result & 1) == 0) {
          uint64_t result = sub_222652E4C(v5, (uint64_t)v7);
        }
        v5 += 24;
      }
      while (v5 != v6);
    }
  }
  return result;
}

BOOL sub_222652E4C(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_2225D085C(*(void *)a1, *(void *)a2);
  if (result)
  {
    return sub_2225F5218((_DWORD *)(a1 + 8), (_DWORD *)(a2 + 8));
  }
  return result;
}

uint64_t sub_222652EA4()
{
  uint64_t v2 = sub_2225F9EBC();
  int v1 = sub_2225F522C();
  return sub_222611A80((uint64_t)&v2, (uint64_t)&v1);
}

void *sub_222652EDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = sub_2225D250C(a1);
  sub_2225D250C(v8 + 3);
  sub_2225D250C(a1 + 6);
  sub_2225D250C(a1 + 9);
  sub_2225D250C(a1 + 12);
  sub_222652F74(a1 + 15);
  sub_222652F78(a1 + 16, 0);
  a1[19] = a2;
  sub_222652F7C(a1 + 20, a3);
  sub_2225F3270(a1 + 21, a4);
  sub_22265B7C4(a1 + 22, a1[19]);
  return a1;
}

uint64_t sub_222652F80(uint64_t a1)
{
  for (uint64_t i = 0; i != 3; ++i)
    sub_222652FBC(a1 + i);
  return a1;
}

unsigned char *sub_222652FC0(unsigned char *result)
{
  *result &= 0xFCu;
  return result;
}

uint64_t sub_222652FD0(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = nullsub_1(a1, a2);
  sub_222653004(v4, v2);
  return a1;
}

uint64_t sub_222653004(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_222609018(a1, a2);
  if (result)
  {
    return sub_222653050(a1);
  }
  else
  {
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_222653050(uint64_t a1)
{
  sub_2225F50F0(a1, 0);
  uint64_t v2 = sub_2225F50F4(a1, 0);
  uint64_t v3 = sub_2225F9EB8(v2);
  uint64_t v4 = (void *)sub_2225CC180(a1);
  uint64_t result = sub_222608BD4(a1);
  while (v4 != (void *)result)
  {
    *uint64_t v4 = v3;
    v4 += 2;
  }
  return result;
}

_DWORD **sub_2226530B8(_DWORD **a1, _DWORD *a2)
{
  *a1 = a2;
  sub_2226530E4(a1);
  return a1;
}

_DWORD *sub_2226530E4(_DWORD **a1)
{
  uint64_t result = *a1;
  if (result) {
    return sub_2226530F4((uint64_t)result);
  }
  return result;
}

_DWORD *sub_2226530F4(uint64_t a1)
{
  return sub_2225F62F4((_DWORD *)(a1 + 8));
}

void **sub_2226530FC(unsigned __int16 *a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_222653138(a1, v2);
}

void **sub_222653138(unsigned __int16 *a1, uint64_t a2)
{
  sub_222653270((uint64_t)v4, a2, 0);
  return sub_222653274(v4, a1);
}

void **sub_222653178(unsigned __int8 *a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_2226531B4(a1, v2);
}

void **sub_2226531B4(unsigned __int8 *a1, uint64_t a2)
{
  sub_222653270((uint64_t)v4, a2, 0);
  return sub_22265328C(v4, a1);
}

void **sub_2226531F4(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_222653230(a1, v2);
}

void **sub_222653230(uint64_t a1, uint64_t a2)
{
  sub_222653270((uint64_t)v4, a2, 0);
  return sub_2226532A4(v4, a1);
}

void **sub_222653274(uint64_t *a1, unsigned __int16 *a2)
{
  if (a2) {
    return (void **)sub_222653AF4(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

void **sub_22265328C(uint64_t *a1, unsigned __int8 *a2)
{
  if (a2) {
    return (void **)sub_2226560B0(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

void **sub_2226532A4(uint64_t *a1, uint64_t a2)
{
  if (a2) {
    return sub_222656B0C(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

uint64_t sub_2226532BC(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_2226532F8(a1, v2);
}

uint64_t sub_2226532FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226533CC(a1);
  sub_222653270((uint64_t)v17, a2, v4);
  uint64_t v15 = sub_2226533D4(a1);
  uint64_t v16 = v5;
  uint64_t v6 = (uint64_t *)sub_2225C3C70((uint64_t)&v15);
  uint64_t v7 = sub_2225DC1A0(&v15);
  if (v6 != (uint64_t *)v7)
  {
    int v8 = (uint64_t *)v7;
    do
    {
      uint64_t v9 = *v6++;
      sub_222653400(v17, v9, 1);
    }
    while (v6 != v8);
  }
  uint64_t v15 = sub_2226534D8(a1);
  uint64_t v16 = v10;
  int v11 = (uint64_t *)sub_2225C3C70((uint64_t)&v15);
  uint64_t result = sub_2225DC1A0(&v15);
  if (v11 != (uint64_t *)result)
  {
    int v13 = (uint64_t *)result;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t result = sub_222653400(v17, v14, 1);
    }
    while (v11 != v13);
  }
  return result;
}

uint64_t sub_2226533CC(uint64_t a1)
{
  return a1 + 128;
}

uint64_t sub_2226533D4(uint64_t a1)
{
  sub_222657E80(&v2, a1 + 24);
  return v2;
}

uint64_t sub_222653400(uint64_t *a1, uint64_t a2, char a3)
{
  v13[5] = *MEMORY[0x263EF8340];
  sub_222631188(v13);
  uint64_t v6 = (uint64_t *)sub_222657EC4(a2);
  uint64_t v7 = sub_222657EC8(a2);
  if (v6 != (uint64_t *)v7)
  {
    int v8 = (uint64_t *)v7;
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v12 = v9;
      sub_2225CC7B8((uint64_t)v13, &v12);
    }
    while (v6 != v8);
  }
  if (!sub_2225CF1D0(v13))
  {
    sub_2225D3DDC(v11, v13);
    sub_2226537E8(a1, v11[0], v11[1], a3);
  }
  return sub_2225C56C4(v13);
}

uint64_t sub_2226534D8(uint64_t a1)
{
  sub_222657E80(&v2, a1);
  return v2;
}

uint64_t sub_222653504(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2226533CC(a1);
  sub_222653270((uint64_t)v25, a2, v4);
  uint64_t v5 = sub_22265372C(a1);
  uint64_t v23 = sub_2226533D4(a1);
  uint64_t v24 = v6;
  uint64_t v7 = (uint64_t *)sub_2225C3C70((uint64_t)&v23);
  uint64_t v8 = sub_2225DC1A0(&v23);
  if (v7 != (uint64_t *)v8)
  {
    uint64_t v9 = (uint64_t *)v8;
    do
    {
      uint64_t v10 = *v7;
      sub_2225D3DAC(v26);
      int v11 = (uint64_t *)sub_222653754(v10);
      for (uint64_t i = sub_222653758(v10); v11 != (uint64_t *)i; ++v11)
      {
        uint64_t v22 = 0;
        uint64_t v22 = *v11;
        if ((sub_22265378C(v22) & 1) != 0 || sub_2226537E0(v5, v22)) {
          sub_2225CC7B8((uint64_t)v26, &v22);
        }
      }
      if (sub_2225CC780((uint64_t)v26))
      {
        sub_2225D3DDC(v21, v26);
        sub_2226537E8(v25, v21[0], v21[1], 1);
      }
      sub_2225C56C4(v26);
      ++v7;
    }
    while (v7 != v9);
  }
  uint64_t v23 = sub_2226534D8(a1);
  uint64_t v24 = v13;
  uint64_t v14 = (uint64_t *)sub_2225C3C70((uint64_t)&v23);
  uint64_t result = sub_2225DC1A0(&v23);
  if (v14 != (uint64_t *)result)
  {
    uint64_t v16 = (uint64_t *)result;
    do
    {
      uint64_t v17 = *v14;
      sub_2225D3DAC(v26);
      int v18 = (uint64_t *)sub_222653754(v17);
      for (uint64_t j = sub_222653758(v17); v18 != (uint64_t *)j; ++v18)
      {
        uint64_t v22 = 0;
        uint64_t v22 = *v18;
        if ((sub_22265378C(v22) & 1) != 0 || sub_2226537E0(v5, v22)) {
          sub_2225CC7B8((uint64_t)v26, &v22);
        }
      }
      if (sub_2225CC780((uint64_t)v26))
      {
        sub_2225D3DDC(v20, v26);
        sub_2226537E8(v25, v20[0], v20[1], 1);
      }
      uint64_t result = sub_2225C56C4(v26);
      ++v14;
    }
    while (v14 != v16);
  }
  return result;
}

uint64_t sub_22265372C(uint64_t a1)
{
  return a1 + 176;
}

uint64_t sub_222653758(uint64_t a1)
{
  uint64_t v2 = sub_222653754();
  return v2 + 8 * sub_222656A94(a1);
}

uint64_t sub_22265378C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226580EC(&v2) & 1) != 0 || (sub_2226580F0(&v2) & 1) != 0 || (sub_2226580F4(&v2)) {
    return 1;
  }
  else {
    return sub_2226580F8(&v2);
  }
}

BOOL sub_2226537E0(uint64_t a1, uint64_t a2)
{
  return sub_22265826C(a1 + 8, a2);
}

uint64_t sub_2226537E8(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  v42[0] = a2;
  v42[1] = a3;
  char v41 = a4;
  v40[0] = v42;
  v40[1] = a1;
  uint64_t v40[2] = &v41;
  uint64_t v5 = sub_2225C3D04((uint64_t)v42);
  uint64_t v6 = (void *)sub_2225C3C70((uint64_t)v42);
  if (v5 == 1)
  {
    sub_222653274(a1, *v6);
    return sub_222658340((uint64_t)v40);
  }
  if (!sub_2226583D0(v6))
  {
    uint64_t v21 = sub_2225C3C70((uint64_t)v42);
    if (sub_2226583D4(v21))
    {
      sub_2225CA524(*a1, "invariant");
      uint64_t v22 = (uint64_t *)sub_2225C3C70((uint64_t)v42);
      uint64_t v23 = sub_2225DC1A0(v42);
      if (v22 != (uint64_t *)v23)
      {
        uint64_t v24 = (uint64_t *)v23;
        char v25 = 1;
        do
        {
          uint64_t v26 = *v22;
          if ((v25 & 1) == 0) {
            sub_2225CA524(*a1, ",");
          }
          sub_2225CA524(*a1, " ");
          uint64_t v27 = (unsigned __int16 *)sub_2225E55A8(v26);
          if (sub_2225C5B40((uint64_t)v27))
          {
            uint64_t v28 = *a1;
            uint64_t v29 = sub_2225C5B40((uint64_t)v27);
            uint64_t v30 = sub_222654540(v29);
            sub_2225CA568(v28, v30, v31);
          }
          else
          {
            int v32 = sub_222656050(v27);
            sub_222656030(a1, v32);
          }
          char v25 = 0;
          ++v22;
        }
        while (v22 != v24);
      }
    }
    else
    {
      int v33 = (uint64_t *)sub_2225C3C70((uint64_t)v42);
      uint64_t v34 = sub_2225DC1A0(v42);
      if (v33 != (uint64_t *)v34)
      {
        int v35 = (uint64_t *)v34;
        do
        {
          uint64_t v36 = *v33++;
          sub_222653274(a1, v36);
        }
        while (v33 != v35);
      }
    }
    return sub_222658340((uint64_t)v40);
  }
  uint64_t v8 = (uint64_t *)sub_2225C3C70((uint64_t)v42);
  uint64_t result = sub_2225DC1A0(v42);
  if (v8 != (uint64_t *)result)
  {
    uint64_t v9 = (uint64_t *)result;
    char v10 = 1;
    do
    {
      uint64_t v11 = *v8;
      int v39 = 0;
      int v39 = (_DWORD *)sub_2225E55A8(v11);
      uint64_t v12 = a1[2];
      if (v12
        && (v38[0] = sub_222654394(v12, (uint64_t *)&v39),
            v38[1] = v13,
            v37[0] = sub_2226543FC(a1[2]),
            v37[1] = v14,
            sub_2225F9558(v38, (uint64_t)v37)))
      {
        uint64_t v15 = v39;
        uint64_t v16 = sub_2225C3C70((uint64_t)v38);
        sub_22265444C(a1, (uint64_t)v15, *(float **)(v16 + 8));
        uint64_t result = sub_222658340((uint64_t)v40);
      }
      else
      {
        if (v10)
        {
          sub_222654548(a1, v39);
          sub_2226546D4(a1, (uint64_t)v39);
        }
        else
        {
          sub_2225CA524(*a1, ",");
        }
        uint64_t v17 = sub_2225CA524(*a1, " ");
        uint64_t v18 = sub_222654540((uint64_t)v39);
        sub_2225CA568((uint64_t)v17, v18, v19);
        sub_2226547A8(a1, (uint64_t)v39);
        uint64_t result = sub_222608330((uint64_t)v39);
        if (result)
        {
          sub_2225CA524(*a1, " = ");
          uint64_t v20 = sub_222608330((uint64_t)v39);
          uint64_t result = sub_2226532A4(a1, v20);
        }
        char v10 = 0;
      }
      ++v8;
    }
    while (v8 != v9);
    if ((v10 & 1) == 0) {
      return sub_222658340((uint64_t)v40);
    }
  }
  return result;
}

uint64_t sub_222653ADC(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)uint64_t result = a2;
  *(_DWORD *)(result + 8) = 0;
  *(unsigned char *)(result + 12) = 1;
  *(void *)(result + 16) = a3;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t sub_222653AF4(uint64_t *a1, unsigned __int16 *a2)
{
  switch(sub_2226376DC((unsigned __int8 *)a2))
  {
    case 1u:
      uint64_t result = sub_222653E2C(a1, a2);
      break;
    case 2u:
      uint64_t result = (uint64_t)sub_222653F68(a1, a2);
      break;
    case 3u:
      uint64_t result = sub_22265412C(a1, a2);
      break;
    case 4u:
      uint64_t result = (uint64_t)sub_222654130(a1, (uint64_t)a2);
      break;
    case 5u:
      uint64_t result = (uint64_t)sub_222654180(a1, a2);
      break;
    case 6u:
      uint64_t result = (uint64_t)sub_2226541FC(a1, a2);
      break;
    case 7u:
      uint64_t result = (uint64_t)sub_22265429C(a1, a2);
      break;
    case 8u:
      uint64_t result = (uint64_t)sub_2226542F4(a1, a2);
      break;
    case 9u:
      uint64_t result = (uint64_t)sub_22265438C((uint64_t)a1, (uint64_t)a2);
      break;
    case 0xAu:
      uint64_t result = (uint64_t)sub_222654390((uint64_t)a1, a2);
      break;
    default:
      uint64_t result = (uint64_t)sub_222653CF0(a1, a2);
      break;
  }
  return result;
}

void **sub_222653CF0(uint64_t *a1, _DWORD *a2)
{
  uint64_t v18 = a2;
  uint64_t v3 = a1[2];
  if (v3)
  {
    v17[0] = sub_222654394(v3, (uint64_t *)&v18);
    v17[1] = v4;
    v16[0] = sub_2226543FC(a1[2]);
    v16[1] = v5;
    if (sub_2225F9558(v17, (uint64_t)v16))
    {
      uint64_t v6 = v18;
      uint64_t v7 = sub_2225C3C70((uint64_t)v17);
      return sub_22265444C(a1, (uint64_t)v6, *(float **)(v7 + 8));
    }
    a2 = v18;
  }
  if (sub_2226074E4((uint64_t)a2))
  {
    uint64_t v9 = *a1;
    uint64_t v10 = sub_222654540((uint64_t)v18);
    sub_2225CA568(v9, v10, v11);
  }
  else
  {
    sub_222654548(a1, v18);
    sub_2226546D4(a1, (uint64_t)v18);
    uint64_t v12 = sub_2225CA524(*a1, " ");
    uint64_t v13 = sub_222654540((uint64_t)v18);
    sub_2225CA568((uint64_t)v12, v13, v14);
    sub_2226547A8(a1, (uint64_t)v18);
  }
  uint64_t result = (void **)sub_222608330((uint64_t)v18);
  if (result)
  {
    sub_2225CA524(*a1, " = ");
    uint64_t v15 = sub_222608330((uint64_t)v18);
    return sub_2226532A4(a1, v15);
  }
  return result;
}

uint64_t sub_222653E2C(uint64_t *a1, _DWORD *a2)
{
  if (sub_222655E50((uint64_t)a2)) {
    sub_2225CA524(*a1, "const ");
  }
  sub_222655E5C(a1, a2);
  if (sub_22265517C((uint64_t)a2))
  {
    int v4 = sub_222655EBC(a2);
    sub_2226551AC(a1, v4);
  }
  unsigned int v12 = -1;
  uint64_t v5 = sub_2225C5B40((uint64_t)a2);
  sub_222655404(a1, v5);
  uint64_t v6 = sub_2225C5B40((uint64_t)a2);
  if (sub_2226556A8(v6, &v12) && (sub_222655708((uint64_t)a2) & 1) == 0) {
    sub_222655714(a1, v12);
  }
  uint64_t result = sub_22265592C((uint64_t)a2);
  if (result)
  {
    uint64_t v8 = sub_2225CA524(*a1, " ");
    uint64_t v9 = sub_222654540((uint64_t)a2);
    sub_2225CA568((uint64_t)v8, v9, v10);
    uint64_t result = sub_222655708((uint64_t)a2);
    if (result)
    {
      unsigned int v11 = v12;
      return (uint64_t)sub_222655714(a1, v11);
    }
  }
  return result;
}

void **sub_222653F68(uint64_t *a1, _DWORD *a2)
{
  a1[3] = (uint64_t)a2;
  if (sub_222655ED4((uint64_t)a2))
  {
    int v4 = sub_222655EE0(a2);
    sub_2226551AC(a1, v4);
  }
  unsigned int v18 = 0;
  uint64_t v5 = sub_222640540((uint64_t)a2);
  sub_222655404(a1, v5);
  uint64_t v6 = sub_222640540((uint64_t)a2);
  if (sub_2226556A8(v6, &v18)) {
    sub_222655714(a1, v18);
  }
  uint64_t v7 = sub_2225CA524(*a1, " ");
  uint64_t v8 = sub_222654540((uint64_t)a2);
  uint64_t v10 = sub_2225CA568((uint64_t)v7, v8, v9);
  sub_2225CA524((uint64_t)v10, "(");
  unsigned int v11 = (void *)sub_2225CC180((uint64_t)(a2 + 4));
  uint64_t v12 = sub_222655EEC((uint64_t)(a2 + 4));
  if (v11 != (void *)v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v14 = v12 - (void)v11;
    do
    {
      sub_222653274(a1, *v11);
      if (v14 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v11;
      v14 -= 8;
    }
    while (v11 != v13);
  }
  sub_2225CA524(*a1, ")");
  if (sub_222655F20((uint64_t)a2))
  {
    sub_2225CA524(*a1, " ");
    uint64_t v15 = (unsigned __int8 *)sub_222655F20((uint64_t)a2);
    sub_22265328C(a1, v15);
    uint64_t v16 = *a1;
    return sub_2225CA524(v16, "\n");
  }
  else
  {
    return sub_222655F28(a1, 0);
  }
}

void **sub_222654130(uint64_t *a1, uint64_t a2)
{
  int v3 = sub_2225F514C(a2);
  sub_222655080(a1, v3);
  uint64_t v4 = *a1;

  return sub_2225CA524(v4, "uniform");
}

void **sub_222654180(uint64_t *a1, _DWORD *a2)
{
  sub_2225CA524(*a1, "precision ");
  int v4 = sub_222656018(a2);
  sub_2226551AC(a1, v4);
  uint64_t v5 = *a1;
  int v6 = sub_222656024(a2);
  uint64_t v8 = sub_22268807C(v6);

  return sub_2225CA568(v5, v8, v7);
}

void **sub_2226541FC(uint64_t *a1, unsigned __int16 *a2)
{
  sub_2225CA524(*a1, "invariant ");
  if (sub_2225C5B40((uint64_t)a2))
  {
    uint64_t v4 = *a1;
    uint64_t v5 = sub_2225C5B40((uint64_t)a2);
    uint64_t v7 = sub_222654540(v5);
    return sub_2225CA568(v4, v7, v6);
  }
  else
  {
    int v9 = sub_222656050(a2);
    return sub_222656030(a1, v9);
  }
}

void **sub_22265429C(uint64_t *a1, unsigned __int16 *a2)
{
  int v3 = sub_2225CA524(*a1, "#version ");
  unsigned int v4 = sub_222656050(a2);
  unsigned int v5 = sub_222651018(v4);

  return sub_2225CA560(v3, v5);
}

void **sub_2226542F4(uint64_t *a1, _DWORD *a2)
{
  int v3 = sub_2225CA524(*a1, "#extension ");
  unsigned int v4 = sub_22265605C(a2);
  uint64_t v5 = sub_22264EAF4(v4);
  uint64_t v7 = sub_2225CA568((uint64_t)v3, v5, v6);
  uint64_t v8 = sub_2225CA524((uint64_t)v7, " : ");
  unsigned int v9 = sub_2226560A4(a2);
  uint64_t v11 = sub_222656068(v9);

  return sub_2225CA568((uint64_t)v8, v11, v10);
}

uint64_t sub_222654394(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (!sub_222654820(a1, a2, &v6)) {
    return sub_2226543FC(a1);
  }
  int v3 = v6;
  uint64_t v4 = sub_222608BD4(a1);
  sub_222654944(&v7, v3, v4, 1);
  return v7;
}

uint64_t sub_2226543FC(uint64_t a1)
{
  uint64_t v2 = sub_222608BD4(a1);
  uint64_t v3 = sub_222608BD4(a1);
  sub_222654944(&v5, v2, v3, 1);
  return v5;
}

void **sub_22265444C(uint64_t *a1, uint64_t a2, float *a3)
{
  int v6 = sub_2226074E4(a2);
  uint64_t v7 = *a1;
  if (v6)
  {
    uint64_t v8 = sub_222654540(a2);
    uint64_t v10 = sub_2225CA568(v7, v8, v9);
  }
  else
  {
    sub_2225CA524(*a1, "const ");
    sub_2226546D4(a1, a2);
    uint64_t v11 = sub_2225CA524(*a1, " ");
    uint64_t v12 = sub_222654540(a2);
    sub_2225CA568((uint64_t)v11, v12, v13);
    sub_2226547A8(a1, a2);
    uint64_t v10 = (void **)*a1;
  }
  sub_2225CA524((uint64_t)v10, " = ");
  uint64_t v14 = sub_2225C5B40(a2);
  uint64_t v15 = (void **)*a1;

  return sub_2226549F8(a3, v14, v15);
}

uint64_t sub_222654540(uint64_t a1)
{
  return sub_222654FC8(a1 + 8);
}

uint64_t *sub_222654548(uint64_t *a1, _DWORD *a2)
{
  int v4 = sub_2225DF8D0((uint64_t)a2);
  sub_222655080(a1, v4);
  if (sub_22265517C((uint64_t)a2) && (sub_222655188((uint64_t)a2) & 1) == 0) {
    sub_2225CA524(*a1, "invariant ");
  }
  int v5 = sub_222655194(a2);
  if (v5 == 1)
  {
    int v6 = "smooth ";
    goto LABEL_8;
  }
  if (v5 == 2)
  {
    int v6 = "flat ";
LABEL_8:
    sub_2225CA524(*a1, v6);
  }
  int v7 = sub_2226551A0(a2) - 1;
  uint64_t v8 = "in ";
  switch(v7)
  {
    case 0:
      uint64_t v8 = "attribute ";
      goto LABEL_18;
    case 1:
      if (sub_2226074B4((uint64_t)a2)) {
        goto LABEL_19;
      }
      uint64_t v8 = "const ";
LABEL_18:
      sub_2225CA524(*a1, v8);
LABEL_19:
      uint64_t result = (uint64_t *)sub_2226074D8((uint64_t)a2);
      if (result)
      {
        int v10 = sub_2226551D0(a2);
        return sub_2226551AC(a1, v10);
      }
      return result;
    case 2:
      goto LABEL_18;
    case 3:
      uint64_t v8 = "out ";
      goto LABEL_18;
    case 4:
      uint64_t v8 = "centroid in ";
      goto LABEL_18;
    case 5:
      uint64_t v8 = "centroid out ";
      goto LABEL_18;
    case 6:
      uint64_t v8 = "uniform ";
      goto LABEL_18;
    case 7:
      uint64_t v8 = "varying ";
      goto LABEL_18;
    default:
      goto LABEL_19;
  }
}

uint64_t sub_2226546D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v13 = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v13);
  uint64_t v5 = sub_222655268(v4);
  if (v5)
  {
    uint64_t v6 = sub_2225C3D04(v5);
    sub_22265526C(a1, v6, a2);
  }
  else
  {
    uint64_t v13 = sub_2225C5B40(a2);
    uint64_t v7 = sub_2225C3C70((uint64_t)&v13);
    uint64_t v8 = sub_2226552F0(v7);
    if (v8)
    {
      uint64_t v9 = sub_2225C3D04(v8);
      sub_2226552F4(a1, v9);
    }
    else
    {
      uint64_t v10 = sub_2225C5B40(a2);
      sub_222655404(a1, v10);
    }
  }
  LODWORD(v13) = 0;
  uint64_t v11 = sub_2225C5B40(a2);
  uint64_t result = sub_2226556A8(v11, &v13);
  if (result)
  {
    uint64_t result = sub_222655708(a2);
    if ((result & 1) == 0) {
      return (uint64_t)sub_222655714(a1, v13);
    }
  }
  return result;
}

void **sub_2226547A8(uint64_t *a1, uint64_t a2)
{
  unsigned int v7 = 0;
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t result = (void **)sub_2226556A8(v4, &v7);
  if (result)
  {
    uint64_t result = (void **)sub_222655708(a2);
    if (result)
    {
      unsigned int v6 = v7;
      return sub_222655714(a1, v6);
    }
  }
  return result;
}

uint64_t sub_222654820(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    uint64_t v9 = sub_2225F9EB8();
    uint64_t v10 = sub_222652D44();
    int v11 = v8 - 1;
    unsigned int v12 = sub_2225FB0F4(a2) & (v8 - 1);
    uint64_t v13 = (uint64_t *)(v6 + 16 * v12);
    if (sub_2225D085C(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_2225D085C(*v13, v9))
      {
        if (sub_2225D085C(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        uint64_t v13 = (uint64_t *)(v6 + 16 * v12);
        ++v15;
        if (sub_2225D085C(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        uint64_t v13 = v14;
      }
    }
  }
  else
  {
    uint64_t v13 = 0;
  }
LABEL_13:
  *a3 = v13;
  return result;
}

uint64_t sub_222654948(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  if ((a4 & 1) == 0) {
    sub_22265497C((uint64_t **)a1);
  }
  return a1;
}

uint64_t sub_22265497C(uint64_t **a1)
{
  uint64_t v2 = sub_2225F9EBC();
  uint64_t result = sub_222652D48();
  uint64_t v4 = *a1;
  if (*a1 != a1[1])
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_2225D085C(*v4, v2);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(**a1, v5);
        if (!result) {
          break;
        }
      }
      uint64_t v6 = a1[1];
      uint64_t v4 = *a1 + 2;
      *a1 = v4;
    }
    while (v4 != v6);
  }
  return result;
}

void **sub_2226549F8(float *a1, uint64_t a2, void **a3)
{
  uint64_t v11 = a2;
  uint64_t v5 = sub_2225C3C70((uint64_t)&v11);
  uint64_t v6 = sub_222654A90(v5);
  if (v6) {
    return sub_222654A94(a1, v6, a3);
  }
  uint64_t v8 = sub_2225C3C70((uint64_t)&v11);
  uint64_t v9 = sub_222654B7C(v8);
  if (v9) {
    return sub_222654B80((uint64_t)a1, v9, a3);
  }
  uint64_t v10 = sub_2225C3C70((uint64_t)&v11);
  uint64_t result = (void **)sub_222654C5C(v10);
  if (result) {
    return sub_222654C60((uint64_t)a1, (uint64_t)result, a3);
  }
  return result;
}

void **sub_222654A94(float *a1, uint64_t a2, void **a3)
{
  if ((sub_222687F08(a2) & 1) != 0 || sub_222687F2C(a2))
  {
    double v6 = *a1;
    return (void **)sub_2225E8110((uint64_t)a3, v6);
  }
  else
  {
    char v11 = 0;
    if (sub_222687F50(a2, &v11))
    {
      unsigned int v8 = *(_DWORD *)a1;
      if (v11) {
        return sub_2225D4840(a3, v8);
      }
      uint64_t v10 = sub_2225CA560(a3, v8);
      uint64_t v9 = "U";
    }
    else
    {
      sub_222687F90(a2);
      if (*(unsigned char *)a1) {
        uint64_t v9 = "true";
      }
      else {
        uint64_t v9 = "false";
      }
      uint64_t v10 = a3;
    }
    return sub_2225CA524((uint64_t)v10, v9);
  }
}

void **sub_222654B80(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v6 = sub_222688054(a2);
  unsigned int v8 = sub_2225CA568((uint64_t)a3, v6, v7);
  sub_2225CA524((uint64_t)v8, "(");
  if (sub_222654EC8(a2))
  {
    unint64_t v9 = 0;
    char v10 = 1;
    do
    {
      if ((v10 & 1) == 0) {
        sub_2225CA524((uint64_t)a3, ", ");
      }
      char v11 = (float *)sub_222654ED4(a1, v9);
      sub_222654A94(v11, a2, a3);
      ++v9;
      unsigned int v12 = sub_222654EC8(a2);
      char v10 = 0;
    }
    while (v9 < v12);
  }

  return sub_2225CA524((uint64_t)a3, ")");
}

void **sub_222654C60(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v6 = sub_222688054(a2);
  unsigned int v8 = sub_2225CA568((uint64_t)a3, v6, v7);
  sub_2225CA524((uint64_t)v8, "(");
  if (sub_222654EC8(a2))
  {
    unint64_t v9 = 0;
    uint64_t v10 = 1;
    do
    {
      if (sub_222654FBC(a2))
      {
        unint64_t v11 = 0;
        do
        {
          if ((v10 & 1) == 0) {
            sub_2225CA524((uint64_t)a3, ", ");
          }
          unsigned int v12 = (float *)sub_222654ED4(a1 + 16 * v9, v11);
          sub_222654A94(v12, a2, a3);
          ++v11;
          uint64_t v13 = 0;
          LOBYTE(v10) = 0;
        }
        while (v11 < sub_222654FBC(a2));
      }
      else
      {
        uint64_t v13 = v10;
      }
      ++v9;
      uint64_t v10 = v13;
    }
    while (v9 < sub_222654EC8(a2));
  }

  return sub_2225CA524((uint64_t)a3, ")");
}

uint64_t sub_222654D84(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222654DC0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222654DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222654DF0(&v3);
}

uint64_t sub_222654DF0(void *a1)
{
  return sub_222654DF8(*a1);
}

BOOL sub_222654E00(unsigned char *a1)
{
  return sub_222654E20(a1) == 0;
}

uint64_t sub_222654E20(unsigned char *a1)
{
  return *a1 & 0xF;
}

uint64_t sub_222654E2C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222654E68(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222654E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222654E98(&v3);
}

uint64_t sub_222654E98(void *a1)
{
  return sub_222654EA0(*a1);
}

BOOL sub_222654EA8(unsigned char *a1)
{
  return sub_222654E20(a1) == 1;
}

uint64_t sub_222654EC8(uint64_t a1)
{
  return *(unsigned char *)(a1 + 2) & 7;
}

uint64_t sub_222654ED4(uint64_t result, uint64_t a2)
{
  switch(a2)
  {
    case 1:
      result += 4;
      break;
    case 2:
      result += 8;
      break;
    case 3:
      result += 12;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_222654F20(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222654F5C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222654F60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222654F8C(&v3);
}

uint64_t sub_222654F8C(void *a1)
{
  return sub_222654F94(*a1);
}

BOOL sub_222654F9C(unsigned char *a1)
{
  return sub_222654E20(a1) == 2;
}

uint64_t sub_222654FBC(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 2) >> 3) & 7;
}

uint64_t sub_222654FCC(void *a1)
{
  if (sub_222609A70(a1))
  {
    sub_2225C3D00((int)&v5, &byte_2226D1615);
  }
  else
  {
    uint64_t v2 = sub_222655038(a1);
    unsigned int v3 = sub_22265503C(a1);
    sub_2225C3D0C(&v5, v2, v3);
  }
  return v5;
}

uint64_t sub_22265503C(void *a1)
{
  if (sub_222609A70(a1)) {
    return 0;
  }
  else {
    return *(unsigned int *)*a1;
  }
}

uint64_t sub_222655074(void *a1)
{
  return *a1 + 4;
}

void **sub_222655080(uint64_t *a1, int a2)
{
  int v8 = a2;
  if (sub_2226551DC((unsigned __int16 *)&v8)
    || (uint64_t result = (void **)sub_2226551F4((unsigned __int16 *)&v8), result))
  {
    sub_2225CA524(*a1, "layout(");
    if (sub_2226551DC((unsigned __int16 *)&v8))
    {
      if (sub_222655200((unsigned __int16 *)&v8))
      {
        char v4 = sub_222655224((unsigned __int16 *)&v8);
        sub_22265520C(a1, v4);
        if (sub_222655230((unsigned __int16 *)&v8))
        {
          sub_2225CA524(*a1, ", ");
LABEL_9:
          char v7 = sub_22265523C((unsigned __int16 *)&v8);
          sub_22265520C(a1, v7);
        }
      }
      else if (sub_222655230((unsigned __int16 *)&v8))
      {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v5 = sub_2225CA524(*a1, "location = ");
      unsigned int v6 = sub_2226376DC((unsigned __int8 *)&v8);
      sub_2225CA560(v5, v6);
    }
    return sub_2225CA524(*a1, ") ");
  }
  return result;
}

uint64_t sub_22265517C(uint64_t a1)
{
  return *(unsigned char *)(a1 + 2) & 1;
}

uint64_t sub_222655188(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 2) >> 1) & 1;
}

uint64_t sub_222655194(_DWORD *a1)
{
  return (*a1 >> 18) & 3;
}

uint64_t sub_2226551A0(_DWORD *a1)
{
  return (unsigned __int16)*a1 >> 12;
}

uint64_t *sub_2226551AC(uint64_t *result, int a2)
{
  if ((a2 - 1) <= 2) {
    return (uint64_t *)sub_2225CA524(*result, off_264625388[a2 - 1]);
  }
  return result;
}

uint64_t sub_2226551D0(_DWORD *a1)
{
  return (*a1 >> 20) & 3;
}

BOOL sub_2226551DC(unsigned __int16 *a1)
{
  return (((*a1 >> 9) ^ (*a1 >> 12)) & 7) != 0;
}

uint64_t sub_2226551F4(unsigned __int16 *a1)
{
  return HIBYTE(*a1) & 1;
}

BOOL sub_222655200(unsigned __int16 *a1)
{
  return sub_222655248((*a1 >> 9) & 7);
}

void **sub_22265520C(uint64_t *a1, char a2)
{
  return sub_2225CA524(*a1, off_2646253A0[a2 - 1]);
}

uint64_t sub_222655224(unsigned __int16 *a1)
{
  return (*a1 >> 9) & 7;
}

BOOL sub_222655230(unsigned __int16 *a1)
{
  return sub_222655258((*a1 >> 12) & 7);
}

uint64_t sub_22265523C(unsigned __int16 *a1)
{
  return (*a1 >> 12) & 7;
}

BOOL sub_222655248(int a1)
{
  return (a1 - 1) < 4;
}

BOOL sub_222655258(int a1)
{
  return (a1 - 5) < 2;
}

void **sub_22265526C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (sub_222655810(a3))
  {
    return sub_22265581C((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v6 = *a1;
    uint64_t v8 = sub_222654540(a2);
    return sub_2225CA568(v6, v8, v7);
  }
}

void **sub_2226552F4(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_2225DAD04((uint64_t)a2);
  sub_222655080((uint64_t *)a1, v4);
  sub_222655A8C(a2);
  sub_2225CA524(*(void *)a1, "uniform ");
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = sub_222654540((uint64_t)a2);
  sub_2225CA568(v5, v6, v7);
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v8 = (uint64_t)(a2 + 4);
  unint64_t v9 = (uint64_t *)sub_2225CC180((uint64_t)(a2 + 4));
  uint64_t v10 = sub_222655A98(v8);
  if (v9 != (uint64_t *)v10)
  {
    unint64_t v11 = (uint64_t *)v10;
    do
    {
      uint64_t v12 = *v9++;
      sub_222655980((void **)a1);
      sub_222653400((uint64_t *)a1, v12, 1);
    }
    while (v9 != v11);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v13 = *(void *)a1;

  return sub_2225CA524(v13, "}");
}

void **sub_222655404(uint64_t *a1, uint64_t a2)
{
  uint64_t v42 = a2;
  if (!sub_2225C3C70((uint64_t)&v42))
  {
    uint64_t v12 = *a1;
    uint64_t v13 = " /* <> */ ";
    return sub_2225CA524(v12, v13);
  }
  uint64_t v3 = sub_2225C3C70((uint64_t)&v42);
  uint64_t v4 = sub_222654E2C(v3);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_2225C3D04(v4);
    unsigned int v7 = sub_222655AE4(v6) - 4;
    if (v7 <= 3) {
      sub_2225CA524(*a1, off_2646253D0[v7]);
    }
    uint64_t v8 = sub_2225CA524(*a1, "vec");
    unsigned int v9 = sub_222654EC8(v5);
    uint64_t v10 = v8;
    return sub_2225CA560(v10, v9);
  }
  uint64_t v14 = sub_2225C3C70((uint64_t)&v42);
  uint64_t v15 = sub_222654C5C(v14);
  if (!v15)
  {
    uint64_t v21 = sub_2225C3C70((uint64_t)&v42);
    uint64_t v22 = sub_222655AF0(v21);
    if (v22)
    {
      uint64_t v23 = v22;
      unsigned int v24 = sub_222655AF4(v22) - 1;
      if (v24 <= 2) {
        sub_2225CA524(*a1, off_2646253F0[v24]);
      }
      uint64_t result = (void **)sub_222655B00(v23);
      if (result == 1)
      {
        uint64_t v12 = *a1;
        uint64_t v13 = "sampler2D";
      }
      else
      {
        if (result) {
          return result;
        }
        uint64_t v25 = *a1;
        if (sub_22263AD28(a1[3])) {
          uint64_t v13 = "vec4";
        }
        else {
          uint64_t v13 = "sampler";
        }
        uint64_t v12 = v25;
      }
      return sub_2225CA524(v12, v13);
    }
    uint64_t v26 = sub_2225C3C70((uint64_t)&v42);
    if (sub_222655B0C(v26))
    {
      uint64_t v12 = *a1;
      uint64_t v13 = "void";
      return sub_2225CA524(v12, v13);
    }
    uint64_t v27 = sub_2225C3C70((uint64_t)&v42);
    uint64_t v28 = sub_222655B10(v27);
    if (v28)
    {
      uint64_t v29 = *a1;
      uint64_t v30 = sub_222688054(v28);
      return sub_2225CA568(v29, v30, v31);
    }
    uint64_t v32 = sub_2225C3C70((uint64_t)&v42);
    uint64_t v33 = sub_222655B14(v32);
    if (v33)
    {
      uint64_t v34 = sub_2225C3D04(v33);
    }
    else
    {
      uint64_t v35 = sub_2225C3C70((uint64_t)&v42);
      uint64_t v36 = sub_222655268(v35);
      if (v36)
      {
        uint64_t v29 = *a1;
        uint64_t v30 = sub_2226877C8(v36);
        return sub_2225CA568(v29, v30, v31);
      }
      uint64_t v37 = sub_2225C3C70((uint64_t)&v42);
      uint64_t v38 = sub_2226552F0(v37);
      if (v38)
      {
        int v39 = (_DWORD *)sub_2225C3D04(v38);
        return sub_2226552F4((uint64_t)a1, v39);
      }
      uint64_t v40 = sub_2225C3C70((uint64_t)&v42);
      uint64_t v41 = sub_222655B18(v40);
      if (!v41)
      {
        uint64_t v12 = *a1;
        uint64_t v13 = " /* <unknown> */ ";
        return sub_2225CA524(v12, v13);
      }
      uint64_t v34 = sub_2225C5B40(v41);
    }
    return (void **)sub_222655404(a1, v34);
  }
  uint64_t v16 = v15;
  uint64_t v17 = sub_2225C3D04(v15);
  if (sub_222655AE4(v17) == 4) {
    sub_2225CA524(*a1, "h");
  }
  unsigned int v18 = sub_222654FBC(v16);
  unsigned int v19 = sub_222654EC8(v16);
  uint64_t v20 = sub_2225CA524(*a1, "mat");
  uint64_t result = sub_2225CA560(v20, v19);
  if (v18 != v19)
  {
    uint64_t v10 = sub_2225CA524(*a1, "x");
    unsigned int v9 = v18;
    return sub_2225CA560(v10, v9);
  }
  return result;
}

uint64_t sub_2226556A8(uint64_t a1, _DWORD *a2)
{
  uint64_t v7 = a1;
  uint64_t v3 = sub_2225C3C70((uint64_t)&v7);
  if (sub_222655E28(v3))
  {
    int v4 = 0;
  }
  else
  {
    uint64_t v5 = sub_2225C3C70((uint64_t)&v7);
    uint64_t result = sub_222655B14(v5);
    if (!result) {
      return result;
    }
    int v4 = sub_2225F514C(result);
  }
  *a2 = v4;
  return 1;
}

uint64_t sub_222655708(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 1) >> 2) & 1;
}

void **sub_222655714(uint64_t *a1, unsigned int a2)
{
  sub_2225CA524(*a1, "[");
  if (a2) {
    sub_2225CA560((void **)*a1, a2);
  }
  uint64_t v4 = *a1;

  return sub_2225CA524(v4, "]");
}

uint64_t sub_222655774(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226557B0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226557B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226557E0(&v3);
}

uint64_t sub_2226557E0(void *a1)
{
  return sub_2226557E8(*a1);
}

BOOL sub_2226557F0(unsigned char *a1)
{
  return sub_222654E20(a1) == 5;
}

uint64_t sub_222655810(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 1) >> 3) & 1;
}

void **sub_22265581C(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "struct");
  if (sub_22265592C(a2))
  {
    uint64_t v4 = sub_2225CA524(*(void *)a1, " ");
    uint64_t v5 = sub_222654540(a2);
    sub_2225CA568((uint64_t)v4, v5, v6);
  }
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v7 = a2 + 16;
  uint64_t v8 = (uint64_t *)sub_2225CC180(a2 + 16);
  uint64_t v9 = sub_22265594C(v7);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = *v8++;
      sub_222655980((void **)a1);
      sub_222653400(a1, v11, 1);
    }
    while (v8 != v10);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v12 = *(void *)a1;

  return sub_2225CA524(v12, "}");
}

BOOL sub_22265592C(uint64_t a1)
{
  return !sub_222609A70((void *)(a1 + 8));
}

uint64_t sub_22265594C(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_2226559D8(a1);
}

void **sub_222655980(void **result)
{
  if (*((_DWORD *)result + 2))
  {
    int v1 = result;
    unsigned int v2 = 0;
    do
    {
      uint64_t result = sub_2225CA524((uint64_t)*v1, "  ");
      ++v2;
    }
    while (v2 < *((_DWORD *)v1 + 2));
  }
  return result;
}

uint64_t sub_2226559DC(uint64_t a1)
{
  return sub_2226559E4((_DWORD *)(a1 - 16));
}

uint64_t sub_2226559E4(_DWORD *a1)
{
  return *a1 >> 10;
}

uint64_t sub_2226559F0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222655A2C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222655A30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222655A5C(&v3);
}

uint64_t sub_222655A5C(void *a1)
{
  return sub_222655A64(*a1);
}

BOOL sub_222655A6C(unsigned char *a1)
{
  return sub_222654E20(a1) == 6;
}

uint64_t sub_222655A8C(_DWORD *a1)
{
  return (*a1 >> 10) & 7;
}

uint64_t sub_222655A98(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_222655ACC(a1);
}

uint64_t sub_222655AD0(uint64_t a1)
{
  return sub_222655AD8((_DWORD *)(a1 - 16));
}

uint64_t sub_222655AD8(_DWORD *a1)
{
  return *a1 >> 13;
}

uint64_t sub_222655AE4(uint64_t a1)
{
  return *(unsigned char *)(a1 + 1) & 0x7F;
}

uint64_t sub_222655AF4(uint64_t a1)
{
  return *(unsigned char *)(a1 + 2) & 3;
}

uint64_t sub_222655B00(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 2) >> 2) & 1;
}

uint64_t sub_222655B1C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222655B58(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222655B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222655B88(&v3);
}

uint64_t sub_222655B88(void *a1)
{
  return sub_222655B90(*a1);
}

BOOL sub_222655B98(unsigned char *a1)
{
  return sub_222654E20(a1) == 3;
}

uint64_t sub_222655BB8(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222655BF4(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222655BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222655C24(&v3);
}

uint64_t sub_222655C24(void *a1)
{
  return sub_222655C2C(*a1);
}

BOOL sub_222655C34(unsigned char *a1)
{
  return sub_222654E20(a1) == 4;
}

uint64_t sub_222655C54(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222655C90(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222655C94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222655CC0(&v3);
}

uint64_t sub_222655CC0(void *a1)
{
  return sub_222655CC8(*a1);
}

BOOL sub_222655CD0(unsigned char *a1)
{
  return sub_222654E20(a1) < 5;
}

uint64_t sub_222655CF0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222655D2C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222655D30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222655D5C(&v3);
}

uint64_t sub_222655D5C(void *a1)
{
  return sub_222655D64(*a1);
}

BOOL sub_222655D6C(unsigned char *a1)
{
  return sub_222654E20(a1) == 7;
}

uint64_t sub_222655D8C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222655DC8(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222655DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222655DF8(&v3);
}

uint64_t sub_222655DF8(void *a1)
{
  return sub_222655E00(*a1);
}

BOOL sub_222655E08(unsigned char *a1)
{
  return sub_222654E20(a1) == 8;
}

uint64_t sub_222655E28(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222655DC8(&v2);
}

uint64_t sub_222655E50(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 1) >> 5) & 1;
}

void **sub_222655E5C(uint64_t *a1, _DWORD *a2)
{
  uint64_t result = (void **)sub_222655EC8(a2);
  if ((result - 1) <= 2)
  {
    uint64_t v4 = off_264625408[(int)result - 1];
    uint64_t v5 = *a1;
    return sub_2225CA524(v5, v4);
  }
  return result;
}

uint64_t sub_222655EBC(_DWORD *a1)
{
  return (unsigned __int16)*a1 >> 14;
}

uint64_t sub_222655EC8(_DWORD *a1)
{
  return (*a1 >> 11) & 3;
}

uint64_t sub_222655ED4(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 1) >> 4) & 1;
}

uint64_t sub_222655EE0(_DWORD *a1)
{
  return (*a1 >> 10) & 3;
}

uint64_t sub_222655EEC(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_222655F48(a1);
}

uint64_t sub_222655F20(uint64_t a1)
{
  return *(void *)(a1 + 144);
}

void **sub_222655F28(uint64_t *a1, int a2)
{
  uint64_t v2 = *a1;
  if (a2) {
    uint64_t v3 = "; ";
  }
  else {
    uint64_t v3 = ";";
  }
  return sub_2225CA524(v2, v3);
}

uint64_t sub_222655F4C(uint64_t a1)
{
  return sub_222655F54(a1 - 16);
}

uint64_t sub_222655F54(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 2);
}

void **sub_222655F5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_2225DF0BC(a2);
  sub_2225CA568(v4, v5, v6);
  uint64_t result = (void **)sub_222656008(a2);
  if (result)
  {
    uint64_t v8 = sub_2225CA524(*a1, "(");
    uint64_t v9 = (char *)sub_2225CDCF4(a2);
    uint64_t v10 = sub_2225CA524((uint64_t)v8, v9);
    return sub_2225CA524((uint64_t)v10, ")");
  }
  return result;
}

BOOL sub_222656008(uint64_t a1)
{
  return *(void *)(a1 + 32) != 0;
}

uint64_t sub_222656018(_DWORD *a1)
{
  return (*a1 >> 17) & 3;
}

uint64_t sub_222656024(_DWORD *a1)
{
  return (*a1 >> 10) & 0x7F;
}

void **sub_222656030(uint64_t *a1, int a2)
{
  uint64_t v2 = *a1;
  if (a2 == 1) {
    uint64_t v3 = "ci_outColorF";
  }
  else {
    uint64_t v3 = "ci_outColorH";
  }
  return sub_2225CA524(v2, v3);
}

uint64_t sub_222656050(unsigned __int16 *a1)
{
  return (*a1 >> 10) & 0x1F;
}

uint64_t sub_22265605C(_DWORD *a1)
{
  return (*a1 >> 10);
}

uint64_t sub_222656068(unsigned int a1)
{
  if (a1 <= 4) {
    sub_2225C3D00((int)&v2, *((char **)&off_264625420 + (int)a1));
  }
  return v2;
}

uint64_t sub_2226560A4(_DWORD *a1)
{
  return ((int)(*a1 << 11) >> 29);
}

uint64_t sub_2226560B0(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t result = sub_2226376DC(a2);
  switch((int)result)
  {
    case 0:
      uint64_t result = (uint64_t)sub_22265634C((uint64_t)a1, (uint64_t)a2);
      break;
    case 1:
      uint64_t result = (uint64_t)sub_222656430(a1);
      break;
    case 2:
      uint64_t result = sub_222656440(a1, (uint64_t)a2);
      break;
    case 3:
      uint64_t result = (uint64_t)sub_22265644C(a1, (uint64_t)a2);
      break;
    case 4:
      uint64_t result = sub_222656550(a1, (uint64_t)a2);
      break;
    case 5:
      uint64_t result = (uint64_t)sub_2226565C8(a1, (uint64_t)a2);
      break;
    case 6:
      uint64_t result = (uint64_t)sub_22265662C(a1);
      break;
    case 7:
      uint64_t result = (uint64_t)sub_22265663C(a1, (uint64_t)a2);
      break;
    case 8:
      uint64_t result = (uint64_t)sub_222656754(a1, (uint64_t)a2);
      break;
    case 9:
      uint64_t result = (uint64_t)sub_2226567E0(a1, (uint64_t)a2);
      break;
    case 10:
      uint64_t result = (uint64_t)sub_222656888(a1);
      break;
    case 11:
      uint64_t result = (uint64_t)sub_2226568D0(a1);
      break;
    case 12:
      uint64_t result = (uint64_t)sub_222656918(a1);
      break;
    case 13:
      uint64_t result = (uint64_t)sub_222656960(a1, (uint64_t)a2);
      break;
    case 14:
      uint64_t result = sub_2226569DC((uint64_t)a1, (uint64_t)a2);
      break;
    default:
      return result;
  }
  return result;
}

void **sub_22265634C(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "{\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v4 = a2 + 8;
  uint64_t v5 = (uint64_t *)sub_2225CC180(a2 + 8);
  uint64_t v6 = sub_222656A1C(v4);
  if (v5 != (uint64_t *)v6)
  {
    uint64_t v7 = (uint64_t *)v6;
    do
    {
      uint64_t v8 = *v5++;
      sub_222655980((void **)a1);
      sub_22265328C(a1, v8);
      sub_222656A50((uint64_t *)a1, v8);
      sub_2225CA524(*(void *)a1, "\n");
    }
    while (v5 != v7);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v9 = *(void *)a1;

  return sub_2225CA524(v9, "}");
}

void **sub_222656430(uint64_t *a1)
{
  return sub_2225CA524(*a1, "/* empty */;");
}

uint64_t sub_222656440(uint64_t *a1, uint64_t a2)
{
  return sub_222653400(a1, a2 + 8, 0);
}

void **sub_22265644C(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "if (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_2226532A4(a1, v4);
  }
  sub_2225CA524(*a1, ") ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v5 = sub_2225C5B40(a2);
    sub_22265328C(a1, v5);
    uint64_t v6 = sub_2225C5B40(a2);
    sub_222656A50(a1, v6);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  uint64_t result = (void **)sub_222608330(a2);
  if (result)
  {
    sub_2225CA524(*a1, " else ");
    uint64_t v8 = sub_222608330(a2);
    sub_22265328C(a1, v8);
    uint64_t v9 = sub_222608330(a2);
    return sub_222656A50(a1, v9);
  }
  return result;
}

uint64_t sub_222656550(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "switch (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_2226532A4(a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);

  return sub_22265328C(a1, v5);
}

void **sub_2226565C8(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "case ");
  uint64_t v4 = sub_222608330(a2);
  sub_2226532A4(a1, v4);
  uint64_t v5 = *a1;

  return sub_2225CA524(v5, ": ");
}

void **sub_22265662C(uint64_t *a1)
{
  return sub_2225CA524(*a1, "default: ");
}

void **sub_22265663C(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "for (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_22265328C(a1, v4);
    uint64_t v5 = sub_2225C3D04(a2);
    sub_222656A50(a1, v5);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  sub_2225CA524(*a1, " ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v6 = sub_2225C5B40(a2);
    sub_22265328C(a1, v6);
  }
  sub_222655F28(a1, 1);
  if (sub_222608330(a2))
  {
    uint64_t v7 = sub_222608330(a2);
    sub_2226532A4(a1, v7);
  }
  sub_2225CA524(*a1, ") ");
  uint64_t v8 = sub_2225CDCF4(a2);
  sub_22265328C(a1, v8);
  uint64_t v9 = sub_2225CDCF4(a2);

  return sub_222656A50(a1, v9);
}

void **sub_222656754(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "while (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_22265328C(a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);
  sub_22265328C(a1, v5);
  uint64_t v6 = sub_2225C5B40(a2);

  return sub_222656A50(a1, v6);
}

void **sub_2226567E0(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "do ");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_22265328C(a1, v4);
  uint64_t v5 = sub_2225C3D04(a2);
  sub_222656A50(a1, v5);
  sub_2225CA524(*a1, " while (");
  uint64_t v6 = sub_2225C5B40(a2);
  sub_2226532A4(a1, v6);
  sub_2225CA524(*a1, ")");

  return sub_222655F28(a1, 0);
}

void **sub_222656888(uint64_t *a1)
{
  sub_2225CA524(*a1, "break");

  return sub_222655F28(a1, 0);
}

void **sub_2226568D0(uint64_t *a1)
{
  sub_2225CA524(*a1, "continue");

  return sub_222655F28(a1, 0);
}

void **sub_222656918(uint64_t *a1)
{
  sub_2225CA524(*a1, "discard");

  return sub_222655F28(a1, 0);
}

void **sub_222656960(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "return");
  if (sub_2225C3D04(a2))
  {
    sub_2225CA524(*a1, " ");
    uint64_t v4 = sub_2225C3D04(a2);
    sub_2226532A4(a1, v4);
  }

  return sub_222655F28(a1, 0);
}

uint64_t sub_2226569DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3D04(a2);

  return sub_2226532A4(a1, v3);
}

uint64_t sub_222656A1C(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_222656A94(a1);
}

void **sub_222656A50(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t result = (void **)sub_222656AAC(&v4);
  if (result) {
    return sub_222655F28(a1, 0);
  }
  return result;
}

uint64_t sub_222656A98(uint64_t a1)
{
  return sub_222656AA0((_DWORD *)(a1 - 8));
}

uint64_t sub_222656AA0(_DWORD *a1)
{
  return *a1 >> 8;
}

uint64_t sub_222656AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222656ADC(&v3);
}

uint64_t sub_222656ADC(void *a1)
{
  return sub_222656AE4(*a1);
}

BOOL sub_222656AEC(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 14;
}

void **sub_222656B0C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = (void **)sub_22264B7DC(a2);
  switch((int)result)
  {
    case 0:
      return (void **)sub_222656EF8(a1, a2);
    case 1:
      return (void **)sub_222656F40(a1, a2);
    case 2:
      return sub_222656F94(a1, a2);
    case 3:
      return (void **)sub_222656FE8(a1, a2);
    case 4:
      return (void **)sub_22265703C(a1, a2);
    case 5:
      return (void **)sub_22265709C(a1, a2);
    case 6:
      return sub_22265713C(a1, a2);
    case 7:
      return sub_2226571D8(a1, a2);
    case 8:
      return (void **)sub_222657264(a1, a2);
    case 9:
      return sub_222657300(a1, a2);
    case 10:
      return (void **)sub_222657340(a2);
    case 11:
      return sub_222657344(a1, a2);
    case 12:
      return sub_222657394(a1, a2);
    case 13:
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      return sub_222657494(v5, v6);
    case 14:
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      return sub_222657494(v5, v6);
    case 15:
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      return sub_222657494(v5, v6);
    case 16:
      return sub_22265750C(a1, a2);
    case 17:
      return sub_222657584(a1, a2);
    case 18:
      return sub_2226575D4(a1, a2);
    case 19:
      return sub_222657704(a1, a2);
    case 20:
      return sub_2226577D4(a1, a2);
    case 21:
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = a2;
      goto LABEL_67;
    case 22:
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = a2;
LABEL_67:
      uint64_t result = (void **)sub_2226569DC(v7, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_222656EF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  sub_2226578EC(a2, (uint64_t)v4);
  sub_2226578B8(v2, v4);
  return sub_2225C2F10(v4);
}

uint64_t sub_222656F40(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  sub_2226578EC(a2, (uint64_t)v5);
  uint64_t v3 = sub_2226578B8(v2, v5);
  sub_2225CA524(v3, "u");
  return sub_2225C2F10(v5);
}

void **sub_222656F94(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (sub_2225D05E4(a2)) {
    uint64_t v3 = "true";
  }
  else {
    uint64_t v3 = "false";
  }

  return sub_2225CA524(v2, v3);
}

uint64_t sub_222656FE8(uint64_t *a1, uint64_t a2)
{
  sub_2226578F8(a2, (uint64_t)v6);
  uint64_t v3 = *a1;
  float v4 = sub_2225C42E4((uint64_t)v6);
  sub_2225E8110(v3, v4);
  return sub_2225C2AA4(v6);
}

uint64_t sub_22265703C(uint64_t *a1, uint64_t a2)
{
  sub_2226578F8(a2, (uint64_t)v7);
  uint64_t v3 = *a1;
  float v4 = sub_2225C42E4((uint64_t)v7);
  uint64_t v5 = sub_2225E8110(v3, v4);
  sub_2225CA524(v5, "h");
  return sub_2225C2AA4(v7);
}

uint64_t sub_22265709C(uint64_t *a1, uint64_t a2)
{
  if (sub_222657904(a2))
  {
    uint64_t v4 = sub_2225C5B40(a2);
    sub_222657910((uint64_t)a1, v4);
  }
  unsigned int v5 = sub_2226579A0(a2);
  if (v5 <= 6) {
    sub_2225CA524(*a1, (&off_264625448)[v5]);
  }
  uint64_t result = sub_222657904(a2);
  if ((result & 1) == 0)
  {
    uint64_t v7 = sub_2225C5B40(a2);
    return (uint64_t)sub_222657910((uint64_t)a1, v7);
  }
  return result;
}

void **sub_22265713C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222657910((uint64_t)a1, v4);
  sub_2225CA524(*a1, " ");
  unsigned int v5 = sub_222657CE8(a2);
  if (v5 <= 0x14) {
    sub_2225CA524(*a1, (&off_264625480)[v5]);
  }
  sub_2225CA524(*a1, " ");
  uint64_t v6 = sub_222608330(a2);

  return sub_222657910((uint64_t)a1, v6);
}

void **sub_2226571D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222657910((uint64_t)a1, v4);
  sub_2225CA524(*a1, " ? ");
  uint64_t v5 = sub_222608330(a2);
  sub_222657910((uint64_t)a1, v5);
  sub_2225CA524(*a1, " : ");
  uint64_t v6 = sub_2225CDCF4(a2);

  return sub_222657910((uint64_t)a1, v6);
}

uint64_t sub_222657264(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  sub_2226532A4(a1, v4);
  sub_2225CA524(*a1, " ");
  unsigned int v5 = sub_222657CF4(a2);
  if (v5 <= 0xB) {
    sub_2225CA524(*a1, (&off_264625528)[v5]);
  }
  sub_2225CA524(*a1, " ");
  uint64_t v6 = sub_2225C5B40(a2);

  return sub_2226532A4(a1, v6);
}

void **sub_222657300(uint64_t *a1, uint64_t a2)
{
  int v3 = sub_222657D00(a2);

  return sub_222656030(a1, v3);
}

void **sub_222657344(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = sub_2225C3D04(a2);
  uint64_t v5 = sub_222654540(v3);

  return sub_2225CA568(v2, v5, v4);
}

void **sub_222657394(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222655404(a1, v4);
  unsigned int v13 = 0;
  uint64_t v5 = sub_2225C5B40(a2);
  if (sub_2226556A8(v5, &v13)) {
    sub_222655714(a1, v13);
  }
  sub_2225CA524(*a1, "(");
  uint64_t v6 = a2 + 8;
  uint64_t v7 = (void *)sub_2225CC180(a2 + 8);
  uint64_t v8 = sub_222657D18(v6);
  if (v7 != (void *)v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = v8 - (void)v7;
    do
    {
      sub_2226532A4(a1, *v7);
      if (v10 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v7;
      v10 -= 8;
    }
    while (v7 != v9);
  }
  uint64_t v11 = *a1;

  return sub_2225CA524(v11, ")");
}

void **sub_222657494(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222657910((uint64_t)a1, v4);
  uint64_t v5 = sub_2225CA524(*a1, ".");
  uint64_t v7 = sub_222657D64(a2);

  return sub_2225CA568((uint64_t)v5, v7, v6);
}

void **sub_22265750C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222657910((uint64_t)a1, v4);
  sub_2225CA524(*a1, "[");
  uint64_t v5 = sub_222608330(a2);
  sub_2226532A4(a1, v5);
  uint64_t v6 = *a1;

  return sub_2225CA524(v6, "]");
}

void **sub_222657584(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C5B40(a2);
  sub_222657910((uint64_t)a1, v3);
  uint64_t v4 = *a1;

  return sub_2225CA524(v4, ".length()");
}

void **sub_2226575D4(uint64_t *a1, uint64_t a2)
{
  if (sub_22263AD28(a1[3]) && sub_222657D00(a2) == 1)
  {
    uint64_t v4 = *(void *)sub_222657D6C(a2 + 8, 0);
    return (void **)sub_2226532A4(a1, v4);
  }
  else
  {
    int v6 = sub_222657D00(a2);
    uint64_t v7 = sub_2225CA524(*a1, (&off_264625588)[v6 - 1]);
    sub_2225CA524((uint64_t)v7, "(");
    uint64_t v8 = a2 + 8;
    uint64_t v9 = (void *)sub_2225CC180(a2 + 8);
    uint64_t v10 = sub_222657D94(v8);
    if (v9 != (void *)v10)
    {
      uint64_t v11 = (void *)v10;
      uint64_t v12 = v10 - (void)v9;
      do
      {
        sub_2226532A4(a1, *v9);
        if (v12 >= 9) {
          sub_2225CA524(*a1, ", ");
        }
        ++v9;
        v12 -= 8;
      }
      while (v9 != v11);
    }
    uint64_t v13 = *a1;
    return sub_2225CA524(v13, ")");
  }
}

void **sub_222657704(uint64_t *a1, uint64_t a2)
{
  int v4 = sub_222657DDC(a2);
  sub_2225CA524(*a1, (&off_2646255B0)[v4 - 1]);
  uint64_t v5 = a2 + 8;
  int v6 = (void *)sub_2225CC180(a2 + 8);
  uint64_t v7 = sub_222657DE8(v5);
  if (v6 != (void *)v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = v7 - (void)v6;
    do
    {
      sub_2226532A4(a1, *v6);
      if (v9 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v6;
      v9 -= 8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *a1;

  return sub_2225CA524(v10, ")");
}

void **sub_2226577D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_2225C5B40(a2);
  uint64_t v6 = sub_222654540(v5);
  uint64_t v8 = sub_2225CA568(v4, v6, v7);
  sub_2225CA524((uint64_t)v8, "(");
  uint64_t v9 = a2 + 8;
  uint64_t v10 = (void *)sub_2225CC180(a2 + 8);
  uint64_t v11 = sub_222657E34(v9);
  if (v10 != (void *)v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = v11 - (void)v10;
    do
    {
      sub_2226532A4(a1, *v10);
      if (v13 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v10;
      v13 -= 8;
    }
    while (v10 != v12);
  }
  uint64_t v14 = *a1;

  return sub_2225CA524(v14, ")");
}

uint64_t sub_2226578B8(uint64_t a1, _DWORD *a2)
{
  return a1;
}

uint64_t sub_2226578EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2225C3B80(a2, a1 + 16);
}

uint64_t sub_2226578F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2225C2E64(a2, a1 + 16);
}

uint64_t sub_222657904(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 4) >> 14) & 1;
}

void **sub_222657910(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 12) && sub_2226579AC(a2)) {
    sub_2225CA524(*(void *)a1, "(");
  }
  uint64_t result = (void **)sub_2226532A4(a1, a2);
  if (*(unsigned char *)(a1 + 12))
  {
    uint64_t result = (void **)sub_2226579AC(a2);
    if (result)
    {
      uint64_t v5 = *(void *)a1;
      return sub_2225CA524(v5, ")");
    }
  }
  return result;
}

uint64_t sub_2226579A0(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 4) >> 11) & 7;
}

uint64_t sub_2226579AC(uint64_t a1)
{
  while (1)
  {
    uint64_t v1 = a1;
    uint64_t v2 = sub_222657A30(a1);
    if (!v2)
    {
      uint64_t v2 = sub_222657A6C(v1);
      if (!v2) {
        break;
      }
    }
    a1 = sub_2225C3D04(v2);
  }
  uint64_t v4 = v1;
  if (sub_222657AA8(&v4) & 1) != 0 || (sub_222657AAC(&v4) & 1) != 0 || (sub_222657AB0(&v4)) {
    return 1;
  }
  else {
    return sub_222657AB4(&v4);
  }
}

uint64_t sub_222657A30(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222657AB8(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222657A6C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222657B18(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222657ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657AE8(&v3);
}

uint64_t sub_222657AE8(void *a1)
{
  return sub_222657AF0(*a1);
}

BOOL sub_222657AF8(uint64_t a1)
{
  return sub_22264B7DC(a1) == 21;
}

uint64_t sub_222657B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657B48(&v3);
}

uint64_t sub_222657B48(void *a1)
{
  return sub_222657B50(*a1);
}

BOOL sub_222657B58(uint64_t a1)
{
  return sub_22264B7DC(a1) == 22;
}

uint64_t sub_222657B78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657BA4(&v3);
}

uint64_t sub_222657BA4(void *a1)
{
  return sub_222657BAC(*a1);
}

BOOL sub_222657BB4(uint64_t a1)
{
  return sub_22264B7DC(a1) == 6;
}

uint64_t sub_222657BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657C00(&v3);
}

uint64_t sub_222657C00(void *a1)
{
  return sub_222657C08(*a1);
}

BOOL sub_222657C10(uint64_t a1)
{
  return sub_22264B7DC(a1) == 5;
}

uint64_t sub_222657C30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657C5C(&v3);
}

uint64_t sub_222657C5C(void *a1)
{
  return sub_222657C64(*a1);
}

BOOL sub_222657C6C(uint64_t a1)
{
  return sub_22264B7DC(a1) == 7;
}

uint64_t sub_222657C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657CB8(&v3);
}

uint64_t sub_222657CB8(void *a1)
{
  return sub_222657CC0(*a1);
}

BOOL sub_222657CC8(uint64_t a1)
{
  return sub_22264B7DC(a1) == 8;
}

uint64_t sub_222657CE8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 4) >> 11;
}

uint64_t sub_222657CF4(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 4) >> 11) & 0xF;
}

uint64_t sub_222657D00(uint64_t a1)
{
  return (unsigned __int16)*(_DWORD *)(a1 + 4) >> 11;
}

uint64_t sub_222657D0C(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 4) >> 11) & 0x3F;
}

uint64_t sub_222657D18(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_222657D4C(a1);
}

uint64_t sub_222657D50(uint64_t a1)
{
  return sub_222657D58(a1 - 8);
}

uint64_t sub_222657D58(uint64_t a1)
{
  return *(_DWORD *)(a1 + 4) >> 13;
}

uint64_t sub_222657D64(uint64_t a1)
{
  return sub_222654FC8(a1 + 24);
}

uint64_t sub_222657D6C(uint64_t a1, unsigned int a2)
{
  return sub_2225CC180(a1) + 8 * a2;
}

uint64_t sub_222657D94(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_222657DC8(a1);
}

uint64_t sub_222657DCC(uint64_t a1)
{
  return sub_222657DD4(a1 - 8);
}

uint64_t sub_222657DD4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 6);
}

uint64_t sub_222657DDC(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 4) >> 11) & 0x7F;
}

uint64_t sub_222657DE8(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_222657E1C(a1);
}

uint64_t sub_222657E20(uint64_t a1)
{
  return sub_222657E28(a1 - 8);
}

uint64_t sub_222657E28(uint64_t a1)
{
  return *(_DWORD *)(a1 + 4) >> 18;
}

uint64_t sub_222657E34(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_222657E68(a1);
}

uint64_t sub_222657E6C(uint64_t a1)
{
  return sub_222657E74(a1 - 8);
}

uint64_t sub_222657E74(uint64_t a1)
{
  return *(_DWORD *)(a1 + 4) >> 11;
}

uint64_t *sub_222657E84(uint64_t *a1, void *a2)
{
  *a1 = sub_2225F3960(a2, (uint64_t)a2);
  a1[1] = sub_2225D4970(a2);
  return a1;
}

uint64_t sub_222657EC8(uint64_t a1)
{
  uint64_t v2 = sub_222657EC4();
  return v2 + 8 * sub_222656A94(a1);
}

uint64_t sub_222657EFC(unsigned __int8 *a1)
{
  if (sub_222608DE8(a1))
  {
    return sub_222657F58(a1, v2);
  }
  else
  {
    return j_nullsub_1(a1, v2);
  }
}

uint64_t sub_222657F58(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_222608790(a1, a2);

  return nullsub_1(v2, v3);
}

BOOL sub_222657F80(uint64_t a1)
{
  uint64_t v2 = sub_222657FBC(a1);

  return sub_22265B7C8(a1 + 176, v2);
}

uint64_t sub_222657FBC(uint64_t a1)
{
  v12[0] = sub_2226534D8(a1);
  v12[1] = v1;
  uint64_t v2 = (uint64_t *)sub_2225C3C70((uint64_t)v12);
  uint64_t v3 = sub_2225DC1A0(v12);
  if (v2 == (uint64_t *)v3) {
    return 0;
  }
  uint64_t v4 = (uint64_t *)v3;
  while (1)
  {
    uint64_t v5 = *v2;
    uint64_t v6 = (uint64_t *)sub_222653754(*v2);
    uint64_t v7 = sub_222653758(v5);
    if (v6 != (uint64_t *)v7) {
      break;
    }
LABEL_8:
    if (++v2 == v4) {
      return 0;
    }
  }
  uint64_t v8 = (uint64_t *)v7;
  while (1)
  {
    uint64_t v11 = 0;
    uint64_t v11 = *v6;
    if (sub_222658084(&v11))
    {
      uint64_t v9 = sub_2225E55A8(v11);
      if (sub_222658088(v9)) {
        return sub_2225E55A8(v11);
      }
    }
    if (++v6 == v8) {
      goto LABEL_8;
    }
  }
}

uint64_t sub_222658088(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_222658090(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226580BC(&v3);
}

uint64_t sub_2226580BC(void *a1)
{
  return sub_2226580C4(*a1);
}

BOOL sub_2226580CC(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 2;
}

uint64_t sub_2226580FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222658128(&v3);
}

uint64_t sub_222658128(void *a1)
{
  return sub_222658130(*a1);
}

BOOL sub_222658138(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 5;
}

uint64_t sub_222658158(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222658184(&v3);
}

uint64_t sub_222658184(void *a1)
{
  return sub_22265818C(*a1);
}

BOOL sub_222658194(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 7;
}

uint64_t sub_2226581B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226581E0(&v3);
}

uint64_t sub_2226581E0(void *a1)
{
  return sub_2226581E8(*a1);
}

BOOL sub_2226581F0(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 8;
}

uint64_t sub_222658210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_22265823C(&v3);
}

uint64_t sub_22265823C(void *a1)
{
  return sub_222658244(*a1);
}

BOOL sub_22265824C(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 4;
}

BOOL sub_22265826C(uint64_t a1, uint64_t a2)
{
  return sub_222658290(a1 + 88, a2);
}

BOOL sub_222658290(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a2, a2);
  return sub_2226582C4(a1, v3);
}

BOOL sub_2226582C4(uint64_t a1, uint64_t a2)
{
  if (!sub_2225D30D8((void *)a1)) {
    return *sub_2225D31DC(a1, a2) == a2;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 20);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(uint64_t **)a1;
  uint64_t v6 = 8 * v4 - 8;
  do
  {
    uint64_t v7 = *v5++;
    BOOL result = v7 == a2;
    BOOL v9 = v7 == a2 || v6 == 0;
    v6 -= 8;
  }
  while (!v9);
  return result;
}

uint64_t sub_222658340(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 8);
  uint64_t v3 = sub_2225C3C70(*(void *)a1);
  uint64_t result = sub_222658084(v3);
  if ((result & 1) == 0)
  {
    uint64_t v5 = sub_2225C3C70(*(void *)a1);
    uint64_t result = sub_2226580F0(v5);
    if ((result & 1) == 0)
    {
      uint64_t v6 = sub_2225C3C70(*(void *)a1);
      uint64_t result = sub_2226580F4(v6);
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_222655F28(v2, 0);
      }
    }
  }
  if (**(unsigned char **)(a1 + 16))
  {
    uint64_t v7 = *v2;
    return (uint64_t)sub_2225CA524(v7, "\n");
  }
  return result;
}

uint64_t sub_2226583D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222658404(&v3);
}

uint64_t sub_222658404(void *a1)
{
  return sub_22265840C(*a1);
}

BOOL sub_222658414(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 0;
}

uint64_t sub_222658434(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222658460(&v3);
}

uint64_t sub_222658460(void *a1)
{
  return sub_222658468(*a1);
}

BOOL sub_222658470(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 6;
}

BOOL sub_222658490(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_2226584CC(a1, v2);
}

BOOL sub_2226584CC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  sub_222658608((uint64_t)v5, a2);
  sub_22265860C(v5, a1);
  BOOL v3 = sub_222658610((uint64_t)v5);
  sub_222658620(v5);
  return v3;
}

BOOL sub_22265854C(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_222658588(a1, v2);
}

BOOL sub_222658588(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  sub_222658608((uint64_t)v5, a2);
  sub_222658624(v5, a1);
  BOOL v3 = sub_222658610((uint64_t)v5);
  sub_222658620(v5);
  return v3;
}

BOOL sub_222658610(uint64_t a1)
{
  return *(unsigned char *)(a1 + 128) == 0;
}

BOOL sub_222658628(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  sub_222658608((uint64_t)v4, a2);
  sub_2226586A8((uint64_t)v4);
  BOOL v2 = sub_222658610((uint64_t)v4);
  sub_222658620(v4);
  return v2;
}

BOOL sub_2226586AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  sub_222658608((uint64_t)v5, a2);
  sub_22265872C((uint64_t)v5, a1);
  BOOL v3 = sub_222658610((uint64_t)v5);
  sub_222658620(v5);
  return v3;
}

uint64_t sub_22265872C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t *)sub_222653754(a2);
  uint64_t result = sub_222653758(a2);
  if (v4 != (uint64_t *)result)
  {
    uint64_t v6 = (uint64_t *)result;
    do
    {
      uint64_t v7 = *v4++;
      uint64_t result = sub_22265860C(a1, v7);
    }
    while (v4 != v6);
  }
  return result;
}

uint64_t sub_22265878C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  sub_222658840(v7, a1);
  sub_222658844(v6, a1);
  sub_222658848(v5, a1);
  sub_22265884C(a1, v7, v6, v5);
  sub_2226529E4(v5);
  sub_2226529E8(v6);
  sub_2226529EC(v7);
  *(unsigned char *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  return a1;
}

uint64_t sub_222658850(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_222658878(a1, &v3);
}

uint64_t sub_222658880(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226588AC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226588B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658910(a1);
  *uint64_t v6 = &unk_26D4DC548;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void *sub_222658910(void *result)
{
  *uint64_t result = &unk_26D4DC590;
  return result;
}

void sub_222658938()
{
  uint64_t v0 = (void *)j_j_nullsub_1_1();

  j__free(v0);
}

uint64_t sub_222658960(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226588AC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226589D8(uint64_t a1, uint64_t a2)
{
  return sub_2226588AC(a2, a1 + 8);
}

uint64_t sub_2226589EC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226589F4(uint64_t a1)
{
  return sub_222658B80(a1 + 8);
}

uint64_t sub_222658A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  sub_222658A5C(a3);

  return sub_222658A84(a1, v5);
}

uint64_t sub_222658A5C(uint64_t a1)
{
  return sub_2225FA73C(v2, a1);
}

void *sub_222658A8C(void *a1, uint64_t a2)
{
  uint64_t v4 = a2;
  *a1 = *(void *)sub_2225CC180((uint64_t)&v4);
  return a1;
}

uint64_t sub_222658ACC()
{
  return sub_2225CBA78(16, 8);
}

uint64_t sub_222658AD8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  return v1;
}

uint64_t *sub_222658AEC(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_222658B14(uint64_t *result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    uint64_t v2 = sub_2225E563C((uint64_t)result);
    return (uint64_t *)sub_222658B60(v2, v1);
  }
  return result;
}

uint64_t sub_222658B60(uint64_t a1, uint64_t a2)
{
  return sub_222658B70(a2, *(void *)(a1 + 8));
}

uint64_t sub_222658B74(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA08(a1, 16 * a2, 8);
}

BOOL sub_222658B8C(uint64_t *a1)
{
  return sub_222658610(*a1);
}

uint64_t sub_222658B94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_222658BBC(a1, &v3);
}

uint64_t sub_222658BC4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222658BF0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222658BF4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658C54(a1);
  *uint64_t v6 = &unk_26D4DC5D8;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void *sub_222658C54(void *result)
{
  *uint64_t result = &unk_26D4DC620;
  return result;
}

void sub_222658C78()
{
  uint64_t v0 = (void *)j_j_nullsub_1_2();

  j__free(v0);
}

uint64_t sub_222658CA0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222658BF0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222658D18(uint64_t a1, uint64_t a2)
{
  return sub_222658BF0(a2, a1 + 8);
}

uint64_t sub_222658D2C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222658D34(uint64_t a1)
{
  return sub_222658D44(a1 + 8);
}

uint64_t sub_222658D4C(uint64_t *a1, uint64_t *a2)
{
  return sub_222658D54(a1, *a2);
}

uint64_t sub_222658D54(uint64_t *a1, uint64_t a2)
{
  uint64_t result = sub_222658610(*a1);
  if (result)
  {
    return sub_222658DA0(a2);
  }
  return result;
}

uint64_t sub_222658DA0(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_2226580EC(&v2) ^ 1;
}

uint64_t sub_222658DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_222658DF4(a1, &v3);
}

uint64_t sub_222658DFC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222658E28();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222658E2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658E8C(a1);
  *uint64_t v6 = &unk_26D4DC668;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void *sub_222658E8C(void *result)
{
  *uint64_t result = &unk_26D4DC6B0;
  return result;
}

void sub_222658EB0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_3();

  j__free(v0);
}

uint64_t sub_222658ED8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222658E28(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222658F50(uint64_t a1, uint64_t a2)
{
  return sub_222658E28(a2, a1 + 8);
}

uint64_t sub_222658F64(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222658F6C(uint64_t a1)
{
  return sub_222658F7C(a1 + 8);
}

unint64_t sub_222658F84(uint64_t *a1, uint64_t *a2)
{
  return sub_222658F8C(a1, *a2);
}

unint64_t sub_222658F8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t result = sub_222658610(*a1);
  if (result)
  {
    return sub_222658FE0(v3, a2);
  }
  return result;
}

unint64_t sub_222658FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222657A30(a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = sub_222659320(v4);
    uint64_t v7 = sub_2225C3D04(v5);
    if (v6 == sub_222659320(v7))
    {
      sub_2225C3D00((int)v49, "precision convert to same precision");
      sub_22265932C(a1, v49[0], v49[1], v5);
    }
  }
  uint64_t v8 = sub_2226593B8(a2);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_2225C3D04(v8);
    if (sub_2226593F4(v10) != 1)
    {
      sub_2225C3D00((int)v48, "non-lvalue in assignment node");
      sub_22265932C(a1, v48[0], v48[1], v9);
    }
    if (!sub_222657CF4(v9))
    {
      sub_2225C3D00((int)v47, "unspecified assignment operator");
      sub_22265932C(a1, v47[0], v47[1], v9);
    }
    int v11 = sub_222657CF4(v9);
    uint64_t v12 = sub_2225C3D04(v9);
    if (v11 == 4)
    {
      uint64_t v13 = sub_2225C5B40(v9);
      sub_222659400(a1, v9, v12, v13);
    }
    else
    {
      sub_222659450(a1, v9, v12);
      int v14 = sub_222659568(v9);
      uint64_t v15 = sub_2225C5B40(v9);
      sub_2226594EC(a1, v14, v15);
    }
  }
  uint64_t v16 = sub_222659574(a2);
  if (v16)
  {
    uint64_t v17 = v16;
    if (sub_2226595B0(v16))
    {
      uint64_t v18 = sub_2225C5B40(v17);
      uint64_t v19 = sub_222608330(v17);
      sub_222659400(a1, v17, v18, v19);
    }
    if (!sub_222657CE8(v17))
    {
      sub_2225C3D00((int)v46, "No opcode");
      sub_22265932C(a1, v46[0], v46[1], v17);
    }
  }
  uint64_t v20 = sub_2226595E0(a2);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_2225C5B40(v20);
    sub_222659450(a1, v21, v22);
    if (!sub_2226579A0(v21))
    {
      sub_2225C3D00((int)v45, "No opcode");
      sub_22265932C(a1, v45[0], v45[1], v21);
    }
  }
  uint64_t v23 = sub_22265961C(a2);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = sub_222608330(v23);
    uint64_t v26 = sub_2225CDCF4(v24);
    sub_222659400(a1, v24, v25, v26);
  }
  uint64_t v27 = sub_222659658(a2);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = v27 + 8;
    uint64_t v30 = (uint64_t *)sub_2225CC180(v27 + 8);
    uint64_t v31 = sub_222657D18(v29);
    if (v30 != (uint64_t *)v31)
    {
      uint64_t v32 = (uint64_t *)v31;
      do
      {
        uint64_t v33 = *v30++;
        sub_222659450(a1, v28, v33);
      }
      while (v30 != v32);
    }
  }
  uint64_t v34 = sub_222659694(a2);
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = (unsigned __int16 *)sub_2225C3D04(v34);
    if ((sub_2226551F4(v36) & 1) == 0)
    {
      sub_2225C3D00((int)v44, "variable marked unused in AST");
      uint64_t v37 = (unsigned __int16 *)sub_2225C3D04(v35);
      sub_2226596D0(a1, v44[0], v44[1], v37);
    }
  }
  uint64_t v38 = sub_22265975C(a2);
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = (unsigned __int16 *)sub_2225C5B40(v38);
    if ((sub_2226551F4(v40) & 1) == 0)
    {
      sub_2225C3D00((int)v43, "function marked unused in AST");
      uint64_t v41 = (unsigned __int16 *)sub_2225C5B40(v39);
      sub_2226596D0(a1, v43[0], v43[1], v41);
    }
  }
  unint64_t result = sub_222658610(a1);
  if (result) {
    return sub_2226595B0(a2);
  }
  return result;
}

uint64_t sub_222659320(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 4) >> 9) & 3;
}

void **sub_22265932C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a1 + 128) = 1;
  uint64_t v8 = sub_2225CA524(*(void *)(a1 + 136), " * Verify error: ");
  sub_2225CA568((uint64_t)v8, a2, a3);
  sub_2225CA524(*(void *)(a1 + 136), "\n  ");
  sub_2226531F4(a4);
  uint64_t v9 = *(void *)(a1 + 136);

  return sub_2225CA524(v9, "\n");
}

uint64_t sub_2226593B8(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222657AB4(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226593F4(uint64_t a1)
{
  return HIBYTE(*(unsigned __int16 *)(a1 + 4)) & 1;
}

void **sub_222659400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_222659450(a1, a2, a3);

  return sub_222659450(a1, a2, a4);
}

void **sub_222659450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_222659798(a1, a2);
  sub_222659798(a1, a3);
  unint64_t result = (void **)sub_2226595B0(a2);
  if (result)
  {
    unint64_t result = (void **)sub_2226595B0(a3);
    if (result)
    {
      int v7 = sub_222659320(a2);
      unint64_t result = (void **)sub_222659320(a3);
      if (v7 != result)
      {
        sub_2225C3D00((int)v8, "precision mismatch");
        return sub_22265932C(a1, v8[0], v8[1], a2);
      }
    }
  }
  return result;
}

void **sub_2226594EC(uint64_t a1, int a2, uint64_t a3)
{
  sub_222659798(a1, a3);
  unint64_t result = (void **)sub_2226595B0(a3);
  if (result)
  {
    unint64_t result = (void **)sub_222659320(a3);
    if (result != a2)
    {
      sub_2225C3D00((int)v7, "precision mismatch");
      return sub_22265932C(a1, v7[0], v7[1], a3);
    }
  }
  return result;
}

uint64_t sub_222659568(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 4) >> 15) & 3;
}

uint64_t sub_222659574(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222657AA8(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

unint64_t sub_2226595B0(uint64_t a1)
{
  uint64_t v3 = sub_222659834(a1);
  uint64_t v1 = sub_2225C3C70((uint64_t)&v3);
  return sub_222687720(v1);
}

uint64_t sub_2226595E0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222657AAC(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_22265961C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222657AB0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222659658(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222659DC0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222659694(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222659E20(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

void **sub_2226596D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4)
{
  *(unsigned char *)(a1 + 128) = 1;
  uint64_t v8 = sub_2225CA524(*(void *)(a1 + 136), " * Verify error: ");
  sub_2225CA568((uint64_t)v8, a2, a3);
  sub_2225CA524(*(void *)(a1 + 136), "\n  ");
  sub_2226530FC(a4);
  uint64_t v9 = *(void *)(a1 + 136);

  return sub_2225CA524(v9, "\n");
}

uint64_t sub_22265975C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222659E80(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

void **sub_222659798(uint64_t a1, uint64_t a2)
{
  if ((sub_2226595B0(a2) & 1) == 0 && sub_222659320(a2))
  {
    sub_2225C3D00((int)v6, "precision set on invalid expression");
    sub_22265932C(a1, v6[0], v6[1], a2);
  }
  unint64_t result = (void **)sub_2226595B0(a2);
  if (result)
  {
    unint64_t result = (void **)sub_222659320(a2);
    if (!result)
    {
      sub_2225C3D00((int)v5, "precision not set on expression");
      return sub_22265932C(a1, v5[0], v5[1], a2);
    }
  }
  return result;
}

uint64_t sub_222659834(uint64_t a1)
{
  uint64_t result = sub_22264B7DC(a1);
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 1:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 2:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 3:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 4:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 5:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 6:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 7:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 8:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222659C1C(v4);
    case 9:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 10:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 11:
      uint64_t v5 = sub_2225E55A8(a1);
      return sub_222659C24(v5);
    case 12:
      uint64_t v6 = sub_2225E55A8(a1);
      goto LABEL_40;
    case 13:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 14:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 15:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 16:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 17:
      uint64_t v3 = sub_2225E55A8(a1);
      return sub_2225C3D04(v3);
    case 18:
      uint64_t v6 = sub_2225E55A8(a1);
      goto LABEL_40;
    case 19:
      uint64_t v6 = sub_2225E55A8(a1);
      goto LABEL_40;
    case 20:
      uint64_t v7 = sub_2225E55A8(a1);
      return sub_222659C2C(v7);
    case 21:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222659C1C(v4);
    case 22:
      uint64_t v6 = sub_2225E55A8(a1);
LABEL_40:
      uint64_t result = sub_2225C5B40(v6);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_222659C1C(uint64_t a1)
{
  return sub_222659834(*(void *)(a1 + 8));
}

uint64_t sub_222659C24(uint64_t a1)
{
  return sub_222659C34(*(unsigned __int8 **)(a1 + 8));
}

uint64_t sub_222659C2C(uint64_t a1)
{
  return sub_222640540(*(void *)(a1 + 16));
}

uint64_t sub_222659C34(unsigned __int8 *a1)
{
  while (2)
  {
    uint64_t v1 = (uint64_t)a1;
    uint64_t result = sub_2226376DC(a1);
    switch((int)result)
    {
      case 0:
        uint64_t v3 = sub_2225E55A8(v1);
        return sub_2225C5B40(v3);
      case 1:
        uint64_t v3 = sub_2225E55A8(v1);
        return sub_2225C5B40(v3);
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
        a1 = (unsigned __int8 *)sub_2225E55A8(v1);
        continue;
      case 9:
        uint64_t v4 = sub_2225E55A8(v1);
        goto LABEL_11;
      case 10:
        uint64_t v4 = sub_2225E55A8(v1);
LABEL_11:
        uint64_t result = sub_222659D94(v4);
        break;
      default:
        return result;
    }
    return result;
  }
}

uint64_t sub_222659D94(uint64_t a1)
{
  sub_2225C64B8(&v2, a1 + 40);
  return v2;
}

uint64_t sub_222659DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222659DF0(&v3);
}

uint64_t sub_222659DF0(void *a1)
{
  return sub_222659DF8(*a1);
}

BOOL sub_222659E00(uint64_t a1)
{
  return sub_22264B7DC(a1) == 12;
}

uint64_t sub_222659E24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222659E50(&v3);
}

uint64_t sub_222659E50(void *a1)
{
  return sub_222659E58(*a1);
}

BOOL sub_222659E60(uint64_t a1)
{
  return sub_22264B7DC(a1) == 11;
}

uint64_t sub_222659E84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222659EB0(&v3);
}

uint64_t sub_222659EB0(void *a1)
{
  return sub_222659EB8(*a1);
}

BOOL sub_222659EC0(uint64_t a1)
{
  return sub_22264B7DC(a1) == 20;
}

uint64_t sub_222659EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_222659F8C();
  sub_222659F90(v7 + 32, a3);
  sub_222659F94(a1 + 64, a4);
  sub_222659F94(v9, a1 + 64);
  sub_222659F98(a1 + 96, v9);
  sub_2226529E4(v9);
  return a1;
}

uint64_t sub_222659FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      uint64_t v5 = nullsub_1(a1, a2);
      *(void *)(a1 + 24) = v5;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v5);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_22265A050(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      uint64_t v5 = nullsub_1(a1, a2);
      *(void *)(a1 + 24) = v5;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v5);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_22265A0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      uint64_t v5 = nullsub_1(a1, a2);
      *(void *)(a1 + 24) = v5;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v5);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_22265A1A8(uint64_t a1, unsigned __int8 *a2)
{
  switch(sub_2226376DC(a2))
  {
    case 1u:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 2u:
      return sub_22265A40C(a1, (uint64_t)a2);
    case 3u:
      sub_22265A4B4(a1, a2);
    case 4u:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 5u:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 6u:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 7u:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 8u:
      uint64_t v5 = a1;
LABEL_7:
      uint64_t result = sub_22265A408(v5);
      break;
    case 9u:
      uint64_t result = sub_22265A4B8(a1, (uint64_t)a2);
      break;
    case 0xAu:
      uint64_t result = sub_22265A55C(a1, (uint64_t)a2);
      break;
    default:
      uint64_t result = sub_22265A3A4(a1, (uint64_t)a2);
      break;
  }
  return result;
}

uint64_t sub_22265A3A4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265A600(a1);
  if (result)
  {
    uint64_t result = sub_222608330(a2);
    if (result)
    {
      sub_222608330(a2);
      return sub_22265A628(a1);
    }
  }
  return result;
}

uint64_t sub_22265A40C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265A600(a1);
  if (result)
  {
    uint64_t v5 = (uint64_t *)sub_2225CC180(a2 + 16);
    uint64_t v6 = sub_222655EEC(a2 + 16);
    if (v5 != (uint64_t *)v6)
    {
      uint64_t v7 = (uint64_t *)v6;
      do
      {
        uint64_t v8 = *v5++;
        sub_22265A1A4(a1, v8);
      }
      while (v5 != v7);
    }
    uint64_t result = sub_222655F20(a2);
    if (result)
    {
      uint64_t v9 = sub_222655F20(a2);
      return sub_22265AEC0(a1, v9);
    }
  }
  return result;
}

uint64_t sub_22265A4B8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265A600(a1);
  if (result)
  {
    uint64_t v5 = a2 + 16;
    uint64_t v6 = (uint64_t *)sub_2225CC180(a2 + 16);
    uint64_t result = sub_22265594C(v5);
    if (v6 != (uint64_t *)result)
    {
      uint64_t v7 = (uint64_t *)result;
      do
      {
        uint64_t v8 = *v6;
        uint64_t v9 = (uint64_t *)sub_222653754(*v6);
        uint64_t result = sub_222653758(v8);
        for (i = (uint64_t *)result; v9 != i; uint64_t result = sub_22265A1A4(a1, v11))
          uint64_t v11 = *v9++;
        ++v6;
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265A55C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265A600(a1);
  if (result)
  {
    uint64_t v5 = a2 + 16;
    uint64_t v6 = (uint64_t *)sub_2225CC180(a2 + 16);
    uint64_t result = sub_222655A98(v5);
    if (v6 != (uint64_t *)result)
    {
      uint64_t v7 = (uint64_t *)result;
      do
      {
        uint64_t v8 = *v6;
        uint64_t v9 = (uint64_t *)sub_222653754(*v6);
        uint64_t result = sub_222653758(v8);
        for (i = (uint64_t *)result; v9 != i; uint64_t result = sub_22265A1A4(a1, v11))
          uint64_t v11 = *v9++;
        ++v6;
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265A600(uint64_t a1)
{
  return sub_22265A630(a1);
}

uint64_t sub_22265A628(uint64_t a1)
{
  return sub_22265A698(a1 + 96);
}

uint64_t sub_22265A630(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    sub_22265A680();
    return sub_22265A680();
  }
}

uint64_t sub_22265A680()
{
  std::__libcpp_verbose_abort("bad_function_call was thrown in -fno-exceptions mode");
  return sub_22265A698(v0);
}

uint64_t sub_22265A69C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22264B7DC(a2);
  switch((int)result)
  {
    case 0:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 1:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 2:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 3:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 4:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 5:
      uint64_t v6 = a1;
      uint64_t v7 = a2;
      return sub_22265AA90(v6, v7);
    case 6:
      uint64_t v8 = a1;
      uint64_t v9 = a2;
      return sub_22265AAE8(v8, v9);
    case 7:
      return sub_22265AB54(a1, a2);
    case 8:
      return sub_22265ABD4(a1, a2);
    case 9:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 10:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 11:
      uint64_t v5 = a1;
      return sub_22265AA8C(v5);
    case 12:
      return sub_22265AC40(a1, a2);
    case 13:
      uint64_t v6 = a1;
      uint64_t v7 = a2;
      return sub_22265AA90(v6, v7);
    case 14:
      uint64_t v6 = a1;
      uint64_t v7 = a2;
      return sub_22265AA90(v6, v7);
    case 15:
      uint64_t v6 = a1;
      uint64_t v7 = a2;
      return sub_22265AA90(v6, v7);
    case 16:
      uint64_t v8 = a1;
      uint64_t v9 = a2;
      return sub_22265AAE8(v8, v9);
    case 17:
      uint64_t v6 = a1;
      uint64_t v7 = a2;
      return sub_22265AA90(v6, v7);
    case 18:
      return sub_22265ACAC(a1, a2);
    case 19:
      return sub_22265AD18(a1, a2);
    case 20:
      return sub_22265AD84(a1, a2);
    case 21:
      uint64_t v10 = a1;
      uint64_t v11 = a2;
      goto LABEL_67;
    case 22:
      uint64_t v10 = a1;
      uint64_t v11 = a2;
LABEL_67:
      uint64_t result = sub_22265ADF0(v10, v11);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22265AA90(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    sub_2225C5B40(a2);
    return sub_22265A698(a1);
  }
  return result;
}

uint64_t sub_22265AAE8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    sub_2225C5B40(a2);
    sub_22265A698(a1);
    sub_222608330(a2);
    return sub_22265A698(a1);
  }
  return result;
}

uint64_t sub_22265AB54(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    sub_2225C5B40(a2);
    sub_22265A698(a1);
    sub_222608330(a2);
    sub_22265A698(a1);
    sub_2225CDCF4(a2);
    return sub_22265A698(a1);
  }
  return result;
}

uint64_t sub_22265ABD4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    sub_2225C3D04(a2);
    sub_22265A698(a1);
    sub_2225C5B40(a2);
    return sub_22265A698(a1);
  }
  return result;
}

uint64_t sub_22265AC40(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    uint64_t v5 = a2 + 8;
    uint64_t v6 = sub_2225CC180(a2 + 8);
    uint64_t result = sub_222657D18(v5);
    if (v6 != result)
    {
      uint64_t v7 = result;
      do
      {
        v6 += 8;
        uint64_t result = sub_22265A698(a1);
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265ACAC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    uint64_t v5 = a2 + 8;
    uint64_t v6 = sub_2225CC180(a2 + 8);
    uint64_t result = sub_222657D94(v5);
    if (v6 != result)
    {
      uint64_t v7 = result;
      do
      {
        v6 += 8;
        uint64_t result = sub_22265A698(a1);
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265AD18(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    uint64_t v5 = a2 + 8;
    uint64_t v6 = sub_2225CC180(a2 + 8);
    uint64_t result = sub_222657DE8(v5);
    if (v6 != result)
    {
      uint64_t v7 = result;
      do
      {
        v6 += 8;
        uint64_t result = sub_22265A698(a1);
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265AD84(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    uint64_t v5 = a2 + 8;
    uint64_t v6 = sub_2225CC180(a2 + 8);
    uint64_t result = sub_222657E34(v5);
    if (v6 != result)
    {
      uint64_t v7 = result;
      do
      {
        v6 += 8;
        uint64_t result = sub_22265A698(a1);
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265ADF0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265AE48(a1);
  if (result)
  {
    sub_2225C3D04(a2);
    return sub_22265A698(a1);
  }
  return result;
}

uint64_t sub_22265AE48(uint64_t a1)
{
  return sub_22265AE70(a1);
}

uint64_t sub_22265AE70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_22265AEC0(v4, v5);
  }
}

uint64_t sub_22265AEC4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t result = sub_2226376DC(a2);
  switch((int)result)
  {
    case 0:
      return sub_22265B174(a1, (uint64_t)a2);
    case 1:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 2:
      return sub_22265B1EC(a1, (uint64_t)a2);
    case 3:
      return sub_22265B25C(a1, (uint64_t)a2);
    case 4:
      return sub_22265B2F8(a1, (uint64_t)a2);
    case 5:
      return sub_22265B354(a1, (uint64_t)a2);
    case 6:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 7:
      return sub_22265B3B0(a1, (uint64_t)a2);
    case 8:
      return sub_22265B478(a1, (uint64_t)a2);
    case 9:
      return sub_22265B500(a1, (uint64_t)a2);
    case 10:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 11:
      uint64_t v5 = a1;
      goto LABEL_7;
    case 12:
      uint64_t v5 = a1;
LABEL_7:
      uint64_t result = sub_22265B1E4(v5);
      break;
    case 13:
      uint64_t result = sub_22265B588(a1, (uint64_t)a2);
      break;
    case 14:
      uint64_t result = sub_22265B5F0(a1, (uint64_t)a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22265B174(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    uint64_t v5 = a2 + 8;
    uint64_t v6 = (uint64_t *)sub_2225CC180(a2 + 8);
    uint64_t result = sub_222656A1C(v5);
    if (v6 != (uint64_t *)result)
    {
      uint64_t v7 = (uint64_t *)result;
      do
      {
        uint64_t v8 = *v6++;
        uint64_t result = sub_22265AEC0(a1, v8);
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265B1E4(uint64_t a1)
{
  return sub_22265B64C(a1 + 32);
}

uint64_t sub_22265B1EC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    uint64_t v5 = a2 + 8;
    uint64_t v6 = (uint64_t *)sub_222653754(a2 + 8);
    uint64_t result = sub_222653758(v5);
    if (v6 != (uint64_t *)result)
    {
      uint64_t v7 = (uint64_t *)result;
      do
      {
        uint64_t v8 = *v6++;
        uint64_t result = sub_22265A1A4(a1, v8);
      }
      while (v6 != v7);
    }
  }
  return result;
}

uint64_t sub_22265B25C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    if (sub_2225C3D04(a2))
    {
      sub_2225C3D04(a2);
      sub_22265A628(a1);
    }
    uint64_t v5 = sub_2225C5B40(a2);
    sub_22265AEC0(a1, v5);
    uint64_t result = sub_222608330(a2);
    if (result)
    {
      uint64_t v6 = sub_222608330(a2);
      return sub_22265AEC0(a1, v6);
    }
  }
  return result;
}

uint64_t sub_22265B2F8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    uint64_t v5 = sub_2225C5B40(a2);
    return sub_22265AEC0(a1, v5);
  }
  return result;
}

uint64_t sub_22265B354(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    sub_222608330(a2);
    return sub_22265A628(a1);
  }
  return result;
}

uint64_t sub_22265B3B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    if (sub_2225C5B40(a2))
    {
      uint64_t v5 = sub_2225C5B40(a2);
      sub_22265AEC0(a1, v5);
    }
    if (sub_2225C3D04(a2))
    {
      uint64_t v6 = sub_2225C3D04(a2);
      sub_22265AEC0(a1, v6);
    }
    if (sub_222608330(a2))
    {
      sub_222608330(a2);
      sub_22265A628(a1);
    }
    uint64_t result = sub_2225CDCF4(a2);
    if (result)
    {
      uint64_t v7 = sub_2225CDCF4(a2);
      return sub_22265AEC0(a1, v7);
    }
  }
  return result;
}

uint64_t sub_22265B478(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    if (sub_2225C3D04(a2))
    {
      uint64_t v5 = sub_2225C3D04(a2);
      sub_22265AEC0(a1, v5);
    }
    uint64_t result = sub_2225C5B40(a2);
    if (result)
    {
      uint64_t v6 = sub_2225C5B40(a2);
      return sub_22265AEC0(a1, v6);
    }
  }
  return result;
}

uint64_t sub_22265B500(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    if (sub_2225C3D04(a2))
    {
      uint64_t v5 = sub_2225C3D04(a2);
      sub_22265AEC0(a1, v5);
    }
    uint64_t result = sub_2225C5B40(a2);
    if (result)
    {
      sub_2225C5B40(a2);
      return sub_22265A628(a1);
    }
  }
  return result;
}

uint64_t sub_22265B588(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    uint64_t result = sub_2225C3D04(a2);
    if (result)
    {
      sub_2225C3D04(a2);
      return sub_22265A628(a1);
    }
  }
  return result;
}

uint64_t sub_22265B5F0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265B64C(a1 + 32);
  if (result)
  {
    sub_2225C3D04(a2);
    return sub_22265A628(a1);
  }
  return result;
}

uint64_t sub_22265B64C(uint64_t a1)
{
  return sub_22265B674(a1);
}

uint64_t sub_22265B674(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_22265B6C4(v4);
  }
}

void *sub_22265B6C8(void *a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  *a1 = a2;
  uint64_t v3 = (uint64_t)(a1 + 1);
  sub_22265B7A8(v7, sub_22265B7A0);
  sub_22265B7B4(v6, sub_22265B7AC);
  sub_22265B7B8((uint64_t)v5, (uint64_t)a1);
  sub_22265B7BC(v3, (uint64_t)v7, (uint64_t)v6, (uint64_t)v5);
  sub_2226529E4(v5);
  sub_2226529E8(v6);
  sub_2226529EC(v7);
  sub_22265B7C0(a1 + 40, 82, 0);
  return a1;
}

uint64_t sub_22265B7A0()
{
  return 1;
}

uint64_t sub_22265B7AC()
{
  return 1;
}

BOOL sub_22265B7C8(uint64_t a1, uint64_t a2)
{
  return sub_22265B7D0((void *)(a1 + 8), a2);
}

BOOL sub_22265B7D0(void *a1, uint64_t a2)
{
  sub_22265A1A4(a1 + 23, a2);

  return sub_22265CBC8(a1);
}

uint64_t sub_22265B80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_22265B918();
  sub_22265B91C(v8 + 88);
  uint64_t v14 = a1;
  sub_222659F8C(&v15, a2);
  sub_22265B920(v16, &v14);
  sub_222659F90(v13, a3);
  uint64_t v10 = a1;
  sub_222659F94(&v11, a4);
  sub_22265B924(v12, &v10);
  sub_22265884C(a1 + 184, v16, v13, v12);
  sub_2226529E4(v12);
  sub_22265B928(&v10);
  sub_2226529E8(v13);
  sub_2226529EC(v16);
  sub_22265B92C(&v14);
  return a1;
}

uint64_t sub_22265B930(uint64_t a1)
{
  return sub_2225D5BA8(a1, 8u);
}

uint64_t sub_22265B938(uint64_t a1)
{
  return sub_222649FE8(a1, a1 + 32, 8);
}

uint64_t sub_22265B948(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_22265B98C(a1, a2, &v5);
}

uint64_t sub_22265B990(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_2225D918C())
  {
    uint64_t v4 = j_j_nullsub_1(&v12);
    uint64_t v5 = sub_222615730(v4, 1uLL);
    sub_2225C3D0C(v10, &v12, 1);
    sub_2225E31DC((uint64_t)v11, v5);
    uint64_t v7 = sub_2225CBA80((uint64_t)v11, v6);
    sub_22265BA3C(v7, a2, v10);
    *(void *)(a1 + 24) = sub_2225CE10C((uint64_t)v11, v8);
    sub_22265BA40(v11);
  }
  return a1;
}

void *sub_22265BA44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658910(a1);
  *uint64_t v6 = &unk_26D4DC6F8;
  sub_22265BAA4(v6 + 1, a2, a3);
  return a1;
}

void sub_22265BAAC()
{
  uint64_t v0 = (void *)sub_22265BAA8();

  j__free(v0);
}

uint64_t sub_22265BAD4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_222615730(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_22265BE88(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265BA40(v11);
  return v8;
}

uint64_t sub_22265BB88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_22265BE88(a2, v4, v5);
}

uint64_t sub_22265BBE4(uint64_t a1)
{
  return sub_22265BE78(a1 + 8);
}

uint64_t sub_22265BBEC(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v4);
  sub_22265BE78(v2);
  return sub_222615AAC((uint64_t)&v4, a1, 1);
}

uint64_t sub_22265BC44(uint64_t a1, uint64_t a2)
{
  return sub_22265C0A4(a1 + 8, a2);
}

uint64_t sub_22265BC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  uint64_t v6 = sub_2225FA0E8(a3);

  return sub_22265BCA8(a1, v5, v6);
}

uint64_t sub_22265BCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_22265BCE4(a1, a2);

  return sub_22265BD24(v4, a3);
}

uint64_t sub_22265BCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v3 = sub_2225CC180((uint64_t)&v5);
  return sub_22265BD5C(a1, v3);
}

uint64_t sub_22265BD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  sub_2225CC180((uint64_t)&v4);
  return a1;
}

void *sub_22265BD60(void *a1, void *a2)
{
  *a1 = *a2;
  sub_22265BD90(a1 + 1, a2 + 1);
  return a1;
}

uint64_t sub_22265BD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      uint64_t v5 = nullsub_1(a1, a2);
      *(void *)(a1 + 24) = v5;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v5);
    }
    else
    {
      *(void *)(a1 + 24) = v3;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_22265BE20(void *a1)
{
  *a1 = &unk_26D4DC6F8;
  sub_22265BE74(a1 + 1);

  return nullsub_1(a1, v2);
}

void *sub_22265BE8C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658910(a1);
  *uint64_t v6 = &unk_26D4DC6F8;
  sub_22265BEEC(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_22265BEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  uint64_t v6 = sub_2225FA0E8(a3);

  return sub_22265BF4C(a1, v5, v6);
}

uint64_t sub_22265BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_22265BF88(a1, a2);

  return sub_22265BD24(v4, a3);
}

uint64_t sub_22265BF88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v3 = sub_2225CC180((uint64_t)&v5);
  return sub_22265BFC8(a1, v3);
}

void *sub_22265BFCC(void *a1, void *a2)
{
  *a1 = *a2;
  sub_222659F8C(a1 + 1, a2 + 1);
  return a1;
}

uint64_t sub_22265BFFC(uint64_t a1)
{
  return a1;
}

void *sub_22265C028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  *uint64_t result = a2;
  if (v4)
  {
    uint64_t v8 = (void *)sub_2225E3330(a1, v7);
    return (void *)sub_22265C098(v8, v4);
  }
  return result;
}

uint64_t sub_22265C098(void *a1, uint64_t a2)
{
  return sub_222615AA8(*a1, a2, a1[1]);
}

uint64_t sub_22265C0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_22265C0DC(v3, a2);
}

uint64_t sub_22265C0E0(uint64_t *a1, unsigned __int8 **a2)
{
  return sub_22265C0E8(a1, *a2);
}

uint64_t sub_22265C0E8(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a1 + 88;
  if (sub_222658290(v5, (uint64_t)a2)) {
    return 0;
  }
  sub_22265C16C(v4, a2);
  sub_222608E54(v5, (uint64_t)a2);

  return sub_22265A600((uint64_t)(a1 + 1));
}

uint64_t sub_22265C16C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t result = sub_22265C1C8(a2);
  if (result)
  {
    uint64_t v5 = sub_222659C34(a2);
    return sub_22265C1F8(a1, v5);
  }
  return result;
}

uint64_t sub_22265C1C8(unsigned __int8 *a1)
{
  unsigned int v1 = sub_2226376DC(a1);
  return (v1 > 6) | (0xBu >> v1) & 1;
}

uint64_t sub_22265C1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = a2;
  uint64_t v3 = sub_2225C3C70((uint64_t)&v10);
  uint64_t v9 = sub_22268742C(v3);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v9);
  uint64_t result = sub_222655268(v4);
  if (result
    || (uint64_t v6 = sub_2225C3C70((uint64_t)&v10),
        uint64_t v9 = sub_22268742C(v6),
        uint64_t v7 = sub_2225C3C70((uint64_t)&v9),
        (uint64_t result = sub_2226552F0(v7)) != 0))
  {
    uint64_t v8 = sub_2225C3D04(result);
    return sub_22265C27C(a1, v8);
  }
  return result;
}

uint64_t sub_22265C27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t result = sub_222658290(a1 + 88, a2);
  if (!result) {
    return sub_2225CC7B8(a1, &v4);
  }
  return result;
}

uint64_t sub_22265C2C4(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_22265C308(a1, a2, &v5);
}

uint64_t sub_22265C30C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_2225D918C())
  {
    uint64_t v4 = j_j_nullsub_1(&v12);
    uint64_t v5 = sub_222615730(v4, 1uLL);
    sub_2225C3D0C(v10, &v12, 1);
    sub_2225E31DC((uint64_t)v11, v5);
    uint64_t v7 = sub_2225CBA80((uint64_t)v11, v6);
    sub_22265C3B8(v7, a2, v10);
    *(void *)(a1 + 24) = sub_2225CE10C((uint64_t)v11, v8);
    sub_22265BA40(v11);
  }
  return a1;
}

void *sub_22265C3BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658E8C(a1);
  *uint64_t v6 = &unk_26D4DC740;
  sub_22265C41C(v6 + 1, a2, a3);
  return a1;
}

void sub_22265C424()
{
  uint64_t v0 = (void *)sub_22265C420();

  j__free(v0);
}

uint64_t sub_22265C44C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_222615730(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_22265C7C8(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265BA40(v11);
  return v8;
}

uint64_t sub_22265C500(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_22265C7C8(a2, v4, v5);
}

uint64_t sub_22265C55C(uint64_t a1)
{
  return sub_22265C7B8(a1 + 8);
}

uint64_t sub_22265C564(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v4);
  sub_22265C7B8(v2);
  return sub_222615AAC((uint64_t)&v4, a1, 1);
}

uint64_t sub_22265C5BC(uint64_t a1, uint64_t a2)
{
  return sub_22265C93C(a1 + 8, a2);
}

uint64_t sub_22265C5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  uint64_t v6 = sub_2225FA0E8(a3);

  return sub_22265C620(a1, v5, v6);
}

uint64_t sub_22265C624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_22265C65C(a1, a2);

  return sub_22265BD24(v4, a3);
}

uint64_t sub_22265C65C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v3 = sub_2225CC180((uint64_t)&v5);
  return sub_22265C69C(a1, v3);
}

void *sub_22265C6A0(void *a1, void *a2)
{
  *a1 = *a2;
  sub_22265C6D0(a1 + 1, a2 + 1);
  return a1;
}

uint64_t sub_22265C6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      uint64_t v5 = nullsub_1(a1, a2);
      *(void *)(a1 + 24) = v5;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v5);
    }
    else
    {
      *(void *)(a1 + 24) = v3;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_22265C760(void *a1)
{
  *a1 = &unk_26D4DC740;
  sub_22265C7B4(a1 + 1);

  return nullsub_1(a1, v2);
}

void *sub_22265C7CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658E8C(a1);
  *uint64_t v6 = &unk_26D4DC740;
  sub_22265C82C(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_22265C830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  uint64_t v6 = sub_2225FA0E8(a3);

  return sub_22265C88C(a1, v5, v6);
}

uint64_t sub_22265C890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_22265C8C8(a1, a2);

  return sub_22265BD24(v4, a3);
}

uint64_t sub_22265C8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v3 = sub_2225CC180((uint64_t)&v5);
  return sub_22265C908(a1, v3);
}

void *sub_22265C90C(void *a1, void *a2)
{
  *a1 = *a2;
  sub_222659F94(a1 + 1, a2 + 1);
  return a1;
}

uint64_t sub_22265C93C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_22265C974(v3, a2);
}

uint64_t sub_22265C978(uint64_t *a1, uint64_t *a2)
{
  return sub_22265C980(a1, *a2);
}

uint64_t sub_22265C980(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t)(a1 + 1);
  sub_22265C9C4(*a1, a2);

  return sub_22265AE48(v2);
}

uint64_t sub_22265C9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222659834(a2);
  sub_22265C1F8(a1, v4);
  uint64_t v5 = sub_222659694(a2);
  if (v5)
  {
    uint64_t v6 = sub_2225C3D04(v5);
  }
  else
  {
    uint64_t result = sub_22265975C(a2);
    if (!result) {
      return result;
    }
    uint64_t v6 = sub_2225C5B40(result);
  }

  return sub_22265C27C(a1, v6);
}

uint64_t sub_22265CA44(uint64_t a1)
{
  return a1;
}

uint64_t sub_22265CA70(uint64_t a1)
{
  return a1;
}

uint64_t sub_22265CA9C(uint64_t a1, int a2, int a3)
{
  *(_DWORD *)(a1 + 8) = a2;
  unsigned int v5 = sub_22265CB0C(a1, a2);
  *(_DWORD *)(a1 + 12) = v5;
  uint64_t v6 = malloc_type_malloc(8 * v5, 0x100004000313F17uLL);
  *(void *)a1 = v6;
  sub_22265CB18(a1, v6, *(_DWORD *)(a1 + 12), a3);
  if (a3) {
    sub_22265CB28(a1);
  }
  return a1;
}

uint64_t sub_22265CB0C(uint64_t a1, int a2)
{
  return (a2 + 63) >> 6;
}

void *sub_22265CB18(int a1, void *__b, unsigned int a3, int a4)
{
  return memset(__b, a4 << 31 >> 31, 8 * a3);
}

uint64_t sub_22265CB28(uint64_t a1)
{
  return sub_22265CB30(a1, 0);
}

uint64_t sub_22265CB30(uint64_t a1, int a2)
{
  uint64_t result = sub_22265CB0C(a1, *(_DWORD *)(a1 + 8));
  int v5 = result;
  unsigned int v6 = *(_DWORD *)(a1 + 12);
  if (v6 > result) {
    uint64_t result = (uint64_t)sub_22265CB18(a1, (void *)(*(void *)a1 + 8 * result), v6 - result, a2);
  }
  if ((*(_DWORD *)(a1 + 8) & 0x3F) != 0)
  {
    uint64_t v7 = -1 << (*(_DWORD *)(a1 + 8) & 0x3F);
    if (a2) {
      uint64_t v8 = *(void *)(*(void *)a1 + 8 * (v5 - 1)) | v7;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)a1 + 8 * (v5 - 1)) & ~v7;
    }
    *(void *)(*(void *)a1 + 8 * (v5 - 1)) = v8;
  }
  return result;
}

BOOL sub_22265CBC8(void *a1)
{
  for (BOOL result = sub_2225CF1D0(a1); !result; BOOL result = sub_2225CF1D0(a1))
  {
    uint64_t v3 = sub_22263BB8C((uint64_t)a1);
    sub_22265A1A4(a1 + 23, v3);
  }
  return result;
}

uint64_t sub_22265CC14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22265CC3C(a1, (uint64_t)&v3);
}

uint64_t sub_22265CC3C(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_22265CC80(a1, a2, &v5);
}

uint64_t sub_22265CC84(uint64_t a1, uint64_t *a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_22265CCFC(*a2))
  {
    j_j_nullsub_1(&v6);
    j_j_nullsub_1(&v5);
    sub_22265CD08(a1, a2, &v5);
    *(void *)(a1 + 24) = a1;
  }
  return a1;
}

BOOL sub_22265CCFC(uint64_t a1)
{
  return a1 != 0;
}

void *sub_22265CD0C(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658910(a1);
  *char v6 = &unk_26D4DC788;
  sub_22265CD6C(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_22265CD70(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_2225D50C4(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_22265CD08(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265CF80(v11);
  return v8;
}

uint64_t sub_22265CE24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_22265CD08(a2, v4, v5);
}

uint64_t sub_22265CE80(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_22265CE88(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v5);
  nullsub_1(v2, v3);
  return sub_2225D5484((uint64_t)&v5, a1, 1);
}

uint64_t sub_22265CEE0(uint64_t a1, uint64_t a2)
{
  return sub_22265D02C(a1 + 8, a2);
}

uint64_t sub_22265CEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  uint64_t v6 = sub_2225FA0E8(a3);

  return sub_22265CF44(a1, v5, v6);
}

uint64_t sub_22265CF48(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_222658A8C(a1, a2);

  return sub_22265BD24((uint64_t)v4, a3);
}

uint64_t sub_22265CF84(uint64_t a1)
{
  return a1;
}

void *sub_22265CFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  BOOL result = (void *)j_nullsub_1(a1, v5);
  *BOOL result = a2;
  if (v4)
  {
    uint64_t v8 = (uint64_t *)sub_2225E3330(a1, v7);
    return (void *)sub_22265D020(v8, v4);
  }
  return result;
}

uint64_t sub_22265D020(uint64_t *a1, uint64_t a2)
{
  return sub_2225D53DC(*a1, a2, a1[1]);
}

uint64_t sub_22265D02C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_22265D064(v3, a2);
}

uint64_t sub_22265D068(uint64_t (**a1)(void), void *a2)
{
  return (*a1)(*a2);
}

uint64_t sub_22265D074(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22265D09C(a1, (uint64_t)&v3);
}

uint64_t sub_22265D09C(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_22265D0E0(a1, a2, &v5);
}

uint64_t sub_22265D0E4(uint64_t a1, uint64_t *a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_22265CCFC(*a2))
  {
    j_j_nullsub_1(&v6);
    j_j_nullsub_1(&v5);
    sub_22265D15C(a1, a2, &v5);
    *(void *)(a1 + 24) = a1;
  }
  return a1;
}

void *sub_22265D160(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658C54(a1);
  *char v6 = &unk_26D4DC7D0;
  sub_22265CD6C(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_22265D1C0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_2225D50C4(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_22265D15C(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265CF80(v11);
  return v8;
}

uint64_t sub_22265D274(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_22265D15C(a2, v4, v5);
}

uint64_t sub_22265D2D0(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_22265D2D8(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v5);
  nullsub_1(v2, v3);
  return sub_2225D5484((uint64_t)&v5, a1, 1);
}

uint64_t sub_22265D330(uint64_t a1, uint64_t a2)
{
  return sub_22265D02C(a1 + 8, a2);
}

uint64_t sub_22265D338(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22265D360(a1, &v3);
}

uint64_t sub_22265D368(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22265D394();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22265D398(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658E8C(a1);
  *uint64_t v6 = &unk_26D4DC818;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void sub_22265D3FC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_4();

  j__free(v0);
}

uint64_t sub_22265D424(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22265D394(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22265D49C(uint64_t a1, uint64_t a2)
{
  return sub_22265D394(a2, a1 + 8);
}

uint64_t sub_22265D4B0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22265D4B8(uint64_t a1)
{
  return 1;
}

void *sub_22265D4E0(uint64_t **a1, uint64_t *a2)
{
  return sub_22265D4E8(a1, *a2);
}

void *sub_22265D4E8(uint64_t **a1, uint64_t a2)
{
  return sub_22265D4F0(*a1, a2);
}

void *sub_22265D4F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v14 = a1;
  uint64_t v4 = sub_22265D594(a2);
  if (v4)
  {
    uint64_t v5 = *a1;
    int v6 = sub_222657DDC(v4);
    unsigned int v7 = sub_22265D5DC(v5, v6);
  }
  else
  {
    uint64_t v8 = sub_22265D604(a2);
    if (v8)
    {
      uint64_t v9 = *a1;
      int v10 = sub_222657D00(v8);
      unsigned int v7 = sub_22265D640(v9, v10);
    }
    else
    {
      uint64_t result = (void *)sub_22265D668(a2);
      if (!result) {
        return result;
      }
      uint64_t v12 = *a1;
      int v13 = sub_222657D00((uint64_t)result);
      unsigned int v7 = sub_22265D6A4(v12, v13);
    }
  }
  return sub_22265D5D0((uint64_t)&v14, v7);
}

uint64_t sub_22265D594(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_22265D6CC(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

void *sub_22265D5D0(uint64_t a1, unsigned int a2)
{
  return sub_22265D72C((void *)(*(void *)a1 + 320), a2);
}

uint64_t sub_22265D5DC(uint64_t a1, int a2)
{
  uint64_t v2 = sub_22265D840(a1, a2);

  return sub_22265D74C(v2);
}

uint64_t sub_22265D604(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_22265D758(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_22265D640(uint64_t a1, int a2)
{
  uint64_t v2 = sub_22265D850(a1, a2);

  return sub_22265D74C(v2);
}

uint64_t sub_22265D668(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_22265D7B8(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_22265D6A4(uint64_t a1, int a2)
{
  uint64_t v2 = sub_22265D818(a1, a2);

  return sub_22265D74C(v2);
}

uint64_t sub_22265D6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_22265D6FC(&v3);
}

uint64_t sub_22265D6FC(void *a1)
{
  return sub_22265D704(*a1);
}

BOOL sub_22265D70C(uint64_t a1)
{
  return sub_22264B7DC(a1) == 19;
}

void *sub_22265D72C(void *result, unsigned int a2)
{
  *(void *)(*result + 8 * (a2 >> 6)) |= 1 << a2;
  return result;
}

uint64_t sub_22265D74C(uint64_t a1)
{
  return *(_WORD *)(a1 + 4) & 0x3FF;
}

uint64_t sub_22265D75C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_22265D788(&v3);
}

uint64_t sub_22265D788(void *a1)
{
  return sub_22265D790(*a1);
}

BOOL sub_22265D798(uint64_t a1)
{
  return sub_22264B7DC(a1) == 18;
}

uint64_t sub_22265D7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_22265D7E8(&v3);
}

uint64_t sub_22265D7E8(void *a1)
{
  return sub_22265D7F0(*a1);
}

BOOL sub_22265D7F8(uint64_t a1)
{
  return sub_22264B7DC(a1) == 9;
}

uint64_t sub_22265D818(uint64_t a1, int a2)
{
  return sub_22265D828(a1, word_2226D1100[a2]);
}

uint64_t sub_22265D828(uint64_t a1, unsigned int a2)
{
  return *(void *)(a1 + 928) + 8 * a2 + 960;
}

uint64_t sub_22265D838(uint64_t a1)
{
  return sub_22265D828(a1, 0);
}

uint64_t sub_22265D840(uint64_t a1, int a2)
{
  return sub_22265D828(a1, word_2226D1106[a2]);
}

uint64_t sub_22265D850(uint64_t a1, int a2)
{
  return sub_22265D828(a1, word_2226D119C[a2]);
}

uint64_t sub_22265D860(_DWORD *a1)
{
  unsigned __int8 v1 = sub_22265D8C8(a1);
  if ((byte_267F7ECD0 & 1) == 0)
  {
    sub_22265D8D4(&v3, dword_267F7ECD4);
    byte_267F7ECD0 = 1;
  }
  return dword_267F7ECD4[v1];
}

uint64_t sub_22265D8C8(_DWORD *a1)
{
  return (*a1 >> 17) & 0x3F;
}

uint64_t sub_22265D8D8(uint64_t a1, uint64_t a2)
{
  char v3 = sub_22264FEFC(a2);
  if ((byte_26AA7F41A & 1) == 0)
  {
    sub_22265DE74(v5, byte_26AA7F3C8);
    sub_22265D95C(v5[0], v5[1]);
    byte_26AA7F41A = 1;
  }
  return (byte_26AA7F3C8[*(_WORD *)(a1 + 4) & 0x3FF] >> v3) & 1;
}

unsigned char *sub_22265D95C(uint64_t a1, uint64_t a2)
{
  v55[0] = a1;
  v55[1] = a2;
  uint64_t v2 = (unsigned char *)sub_22265053C((uint64_t)v55, 1);
  *v2 |= 2u;
  char v3 = (unsigned char *)sub_22265053C((uint64_t)v55, 2);
  *v3 |= 2u;
  uint64_t v4 = (unsigned char *)sub_22265053C((uint64_t)v55, 3);
  *v4 |= 2u;
  uint64_t v5 = (unsigned char *)sub_22265053C((uint64_t)v55, 4);
  *v5 |= 2u;
  int v6 = (unsigned char *)sub_22265053C((uint64_t)v55, 5);
  *v6 |= 2u;
  unsigned int v7 = (unsigned char *)sub_22265053C((uint64_t)v55, 6);
  *v7 |= 2u;
  uint64_t v8 = (unsigned char *)sub_22265053C((uint64_t)v55, 7);
  *v8 |= 2u;
  uint64_t v9 = (unsigned char *)sub_22265053C((uint64_t)v55, 8);
  *v9 |= 2u;
  int v10 = (unsigned char *)sub_22265053C((uint64_t)v55, 9);
  *v10 |= 2u;
  uint64_t v11 = (unsigned char *)sub_22265053C((uint64_t)v55, 10);
  *v11 |= 2u;
  uint64_t v12 = (unsigned char *)sub_22265053C((uint64_t)v55, 18);
  *v12 |= 2u;
  int v13 = (unsigned char *)sub_22265053C((uint64_t)v55, 19);
  *v13 |= 2u;
  uint64_t v14 = (unsigned char *)sub_22265053C((uint64_t)v55, 20);
  *v14 |= 2u;
  uint64_t v15 = (unsigned char *)sub_22265053C((uint64_t)v55, 21);
  *v15 |= 2u;
  uint64_t v16 = (unsigned char *)sub_22265053C((uint64_t)v55, 22);
  *v16 |= 2u;
  uint64_t v17 = (unsigned char *)sub_22265053C((uint64_t)v55, 23);
  *v17 |= 2u;
  uint64_t v18 = (unsigned char *)sub_22265053C((uint64_t)v55, 24);
  *v18 |= 2u;
  uint64_t v19 = (unsigned char *)sub_22265053C((uint64_t)v55, 25);
  *v19 |= 2u;
  uint64_t v20 = (unsigned char *)sub_22265053C((uint64_t)v55, 26);
  *v20 |= 2u;
  uint64_t v21 = (unsigned char *)sub_22265053C((uint64_t)v55, 27);
  *v21 |= 2u;
  uint64_t v22 = (unsigned char *)sub_22265053C((uint64_t)v55, 31);
  *v22 |= 2u;
  uint64_t v23 = (unsigned char *)sub_22265053C((uint64_t)v55, 32);
  *v23 |= 2u;
  uint64_t v24 = (unsigned char *)sub_22265053C((uint64_t)v55, 33);
  *v24 |= 2u;
  uint64_t v25 = (unsigned char *)sub_22265053C((uint64_t)v55, 35);
  *v25 |= 2u;
  uint64_t v26 = (unsigned char *)sub_22265053C((uint64_t)v55, 36);
  *v26 |= 2u;
  uint64_t v27 = (unsigned char *)sub_22265053C((uint64_t)v55, 37);
  *v27 |= 2u;
  uint64_t v28 = (unsigned char *)sub_22265053C((uint64_t)v55, 38);
  *v28 |= 2u;
  uint64_t v29 = (unsigned char *)sub_22265053C((uint64_t)v55, 40);
  *v29 |= 2u;
  uint64_t v30 = (unsigned char *)sub_22265053C((uint64_t)v55, 41);
  *v30 |= 2u;
  uint64_t v31 = (unsigned char *)sub_22265053C((uint64_t)v55, 54);
  *v31 |= 2u;
  uint64_t v32 = (unsigned char *)sub_22265053C((uint64_t)v55, 55);
  *v32 |= 2u;
  uint64_t v33 = (unsigned char *)sub_22265053C((uint64_t)v55, 56);
  *v33 |= 2u;
  uint64_t v34 = (unsigned char *)sub_22265053C((uint64_t)v55, 57);
  *v34 |= 2u;
  uint64_t v35 = (unsigned char *)sub_22265053C((uint64_t)v55, 58);
  *v35 |= 2u;
  uint64_t v36 = (unsigned char *)sub_22265053C((uint64_t)v55, 59);
  *v36 |= 2u;
  uint64_t v37 = (unsigned char *)sub_22265053C((uint64_t)v55, 60);
  *v37 |= 2u;
  uint64_t v38 = (unsigned char *)sub_22265053C((uint64_t)v55, 61);
  *v38 |= 2u;
  uint64_t v39 = (unsigned char *)sub_22265053C((uint64_t)v55, 62);
  *v39 |= 2u;
  uint64_t v40 = (unsigned char *)sub_22265053C((uint64_t)v55, 67);
  *v40 |= 2u;
  uint64_t v41 = (unsigned char *)sub_22265053C((uint64_t)v55, 68);
  *v41 |= 2u;
  uint64_t v42 = (unsigned char *)sub_22265053C((uint64_t)v55, 69);
  *v42 |= 2u;
  int v43 = (unsigned char *)sub_22265053C((uint64_t)v55, 70);
  *v43 |= 2u;
  int v44 = (unsigned char *)sub_22265053C((uint64_t)v55, 71);
  *v44 |= 2u;
  int v45 = (unsigned char *)sub_22265053C((uint64_t)v55, 72);
  *v45 |= 2u;
  int v46 = (unsigned char *)sub_22265053C((uint64_t)v55, 73);
  *v46 |= 2u;
  int v47 = (unsigned char *)sub_22265053C((uint64_t)v55, 74);
  *v47 |= 2u;
  int v48 = (unsigned char *)sub_22265053C((uint64_t)v55, 75);
  *v48 |= 2u;
  int v49 = (unsigned char *)sub_22265053C((uint64_t)v55, 77);
  *v49 |= 2u;
  int v50 = (unsigned char *)sub_22265053C((uint64_t)v55, 78);
  *v50 |= 2u;
  int v51 = (unsigned char *)sub_22265053C((uint64_t)v55, 79);
  *v51 |= 2u;
  int v52 = (unsigned char *)sub_22265053C((uint64_t)v55, 80);
  *v52 |= 2u;
  int v53 = (unsigned char *)sub_22265053C((uint64_t)v55, 81);
  *v53 |= 2u;
  uint64_t result = (unsigned char *)sub_22265053C((uint64_t)v55, 76);
  *result |= 2u;
  return result;
}

uint64_t sub_22265DE78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22265DEB4();
  return (*(unsigned __int8 *)sub_22265DEB0(a2, v3) >> 1) & 1;
}

uint64_t sub_22265DEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22265DEB4();
  return *(unsigned char *)sub_22265DEB0(a2, v3) & 1;
}

unsigned char *sub_22265DEF0(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = sub_22265DEB4();
  uint64_t result = (unsigned char *)sub_22265DF2C(a2, v3);
  *result |= 2u;
  return result;
}

uint64_t sub_22265DF2C(uint64_t a1, unsigned int a2)
{
  return sub_22265DF90(a1 + 120, a2);
}

unsigned char *sub_22265DF38(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = sub_22265DEB4();
  uint64_t result = (unsigned char *)sub_22265DF2C(a2, v3);
  *result |= 1u;
  return result;
}

void *sub_22265DF78(void *result, uint64_t a2)
{
  *uint64_t result = a2;
  result[1] = 82;
  return result;
}

uint64_t sub_22265DF84(_DWORD *a1)
{
  return (*a1 >> 12) & 0x1F;
}

uint64_t sub_22265DF90(uint64_t a1, uint64_t a2)
{
  return a1 + a2;
}

unsigned int *sub_22265DF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = (unsigned int *)sub_22265E160(a1, a3);
  uint64_t v13 = sub_22265E160(a1, a4);
  if (!sub_22265E1FC((uint64_t)v12))
  {
    if (sub_22265E1FC(v13))
    {
      return (unsigned int *)v13;
    }
    else
    {
      uint64_t v14 = sub_22265E20C(a1, 4);
      uint64_t v37 = sub_222659834(a3);
      uint64_t v15 = sub_2225C3C70((uint64_t)&v37);
      char v36 = sub_22265E240(v15);
      uint64_t v37 = sub_222659834(a4);
      uint64_t v16 = sub_2225C3C70((uint64_t)&v37);
      char v17 = sub_22265E240(v16);
      unsigned int v18 = sub_222654EC8(a2);
      if (v18)
      {
        uint64_t v19 = a5;
        uint64_t v20 = 0;
        uint64_t v30 = v14;
        uint64_t v31 = v18;
        uint64_t v32 = a2;
        do
        {
          unsigned int v21 = sub_222654FBC(a2);
          uint64_t v33 = v20;
          if (v21)
          {
            uint64_t v22 = 0;
            uint64_t v34 = v13 + 16 * v20;
            uint64_t v35 = (uint64_t)&v12[4 * v20];
            uint64_t v23 = v30 + 16 * v20;
            uint64_t v24 = v21;
            do
            {
              uint64_t v25 = v12;
              if ((v36 & 1) == 0) {
                uint64_t v12 = (unsigned int *)sub_222654ED4(v35, v22);
              }
              uint64_t v26 = *v12;
              uint64_t v27 = (unsigned int *)v13;
              if ((v17 & 1) == 0) {
                uint64_t v27 = (unsigned int *)sub_222654ED4(v34, v22);
              }
              unint64_t v6 = v6 & 0xFFFFFFFF00000000 | v26;
              unint64_t v5 = v5 & 0xFFFFFFFF00000000 | *v27;
              int v28 = sub_22265E268(v19);
              *(_DWORD *)sub_22265E298(v23, v22++) = v28;
              uint64_t v12 = v25;
            }
            while (v24 != v22);
          }
          a2 = v32;
          uint64_t v20 = v33 + 1;
        }
        while (v33 + 1 != v31);
        return (unsigned int *)v30;
      }
      else
      {
        return (unsigned int *)v14;
      }
    }
  }
  return v12;
}

uint64_t sub_22265E160(uint64_t *a1, unint64_t a2)
{
  unint64_t v5 = a2;
  if (a2)
  {
    if (sub_2226650C0(a1[2], (uint64_t *)&v5)) {
      return *sub_22260B594(a1[2], (uint64_t *)&v5);
    }
    unsigned int v3 = sub_2226650E8(a1, v5);
    *sub_22260B594(a1[2], (uint64_t *)&v5) = (uint64_t)v3;
    return (uint64_t)v3;
  }
  else
  {
    return sub_222664F44((uint64_t)a1);
  }
}

BOOL sub_22265E1FC(uint64_t a1)
{
  return *(unsigned char *)(a1 + 64) == 0;
}

uint64_t sub_22265E20C(uint64_t a1, char a2)
{
  uint64_t v3 = sub_222635BFC(0x48uLL, *(uint64_t **)(a1 + 8));
  uint64_t result = sub_22266551C(v3);
  *(unsigned char *)(result + 64) = a2;
  return result;
}

uint64_t sub_22265E240(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222654DC0(&v2);
}

uint64_t sub_22265E268(uint64_t a1)
{
  return sub_222665930(a1);
}

uint64_t sub_22265E298(uint64_t result, uint64_t a2)
{
  switch(a2)
  {
    case 1:
      result += 4;
      break;
    case 2:
      result += 8;
      break;
    case 3:
      result += 12;
      break;
    default:
      return result;
  }
  return result;
}

unsigned int *sub_22265E2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v10 = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v10);
  uint64_t v5 = sub_22265E3C0(v4);
  v2 += 8;
  uint64_t v6 = *(void *)sub_22265E3C4(v2);
  uint64_t v7 = *(void *)sub_222657D6C(v2, 1u);
  sub_22265E3C8(v11);
  uint64_t v8 = sub_22265DF98(a1, v5, v6, v7, (uint64_t)v11);
  sub_22265E3CC(v11);
  return v8;
}

unsigned int *sub_22265E3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v11 = sub_2225C3D04(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v11);
  uint64_t v5 = sub_22265E3C0(v4);
  uint64_t v6 = sub_2225C5B40(a2);
  uint64_t v7 = sub_222608330(a2);
  uint64_t v8 = sub_2225E55A8(v7);
  sub_22265E3C8(v12);
  uint64_t v9 = sub_22265DF98(a1, v5, v6, v8, (uint64_t)v12);
  sub_22265E3CC(v12);
  return v9;
}

uint64_t sub_22265E4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v68[0] = a3;
  v68[1] = a4;
  uint64_t v67 = sub_2225C5B40(a2);
  uint64_t v8 = sub_2225C3C70((uint64_t)&v67);
  uint64_t v9 = sub_222654B7C(v8);
  uint64_t v10 = sub_22265E20C(a1, 3);
  uint64_t v64 = a5;
  if (sub_2225C3D04((uint64_t)v68) != 1) {
    goto LABEL_12;
  }
  uint64_t v11 = (uint64_t *)sub_22265E3C4(a2 + 8);
  uint64_t v67 = sub_222659834(*v11);
  uint64_t v12 = sub_2225C3C70((uint64_t)&v67);
  uint64_t v13 = sub_22265E3C0(v12);
  uint64_t v14 = sub_222654A90(v13);
  if (v14)
  {
    sub_222655AE4(v14);
    sub_2225C3C70((uint64_t)v68);
    int v15 = sub_22265E8C8(a5);
    unsigned int v16 = sub_222654EC8(v9);
    if (v16)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v16;
      do
        *(_DWORD *)sub_22265E298(v10, v17++) = v15;
      while (v18 != v17);
    }
    return v10;
  }
  uint64_t v19 = sub_222654B7C(v13);
  if (v19)
  {
    uint64_t v20 = sub_2225C3D04(v19);
    unsigned int v21 = sub_222654EC8(v9);
    if (v21)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v21;
      do
      {
        sub_222655AE4(v20);
        uint64_t v24 = (uint64_t *)sub_2225C3C70((uint64_t)v68);
        sub_222654ED4(*v24, v22);
        int v25 = sub_22265E8C8(a5);
        *(_DWORD *)sub_22265E298(v10, v22++) = v25;
      }
      while (v23 != v22);
    }
  }
  else
  {
LABEL_12:
    uint64_t v26 = (uint64_t *)sub_2225C3C70((uint64_t)v68);
    uint64_t v27 = (uint64_t *)sub_2225CC180(a2 + 8);
    uint64_t v28 = sub_222657D18(a2 + 8);
    if (v27 != (uint64_t *)v28)
    {
      uint64_t v29 = (uint64_t *)v28;
      unsigned int v30 = 0;
      uint64_t v57 = v28;
      do
      {
        uint64_t v67 = sub_222659834(*v27);
        uint64_t v31 = sub_2225C3C70((uint64_t)&v67);
        uint64_t v32 = sub_22265E3C0(v31);
        uint64_t v33 = sub_222654A90(v32);
        if (v33)
        {
          sub_222655AE4(v33);
          unint64_t v62 = v62 & 0xFFFFFFFF00000000 | *(unsigned int *)*v26;
          int v34 = sub_22265E8C8(v64);
          *(_DWORD *)sub_22265E298(v10, v30++) = v34;
        }
        else
        {
          uint64_t v35 = sub_222654B7C(v32);
          if (v35)
          {
            uint64_t v36 = v35;
            uint64_t v37 = sub_2225C3D04(v35);
            unsigned int v38 = sub_222654EC8(v36);
            if (v38)
            {
              int v59 = v27;
              uint64_t v39 = v37;
              uint64_t v40 = 0;
              uint64_t v66 = v38;
              unsigned int v65 = v30;
              unsigned int v41 = v30;
              uint64_t v42 = v26;
              uint64_t v43 = v10;
              unint64_t v44 = v58;
              do
              {
                sub_222655AE4(v39);
                unint64_t v44 = v44 & 0xFFFFFFFF00000000 | *(unsigned int *)sub_222654ED4(*v42, v40);
                int v45 = sub_22265E8C8(v64);
                *(_DWORD *)sub_22265E298(v43, v41 + v40++) = v45;
              }
              while (v66 != v40);
              unint64_t v58 = v44;
              unsigned int v30 = v65 + v40;
              uint64_t v27 = v59;
              uint64_t v29 = (uint64_t *)v57;
              uint64_t v10 = v43;
              uint64_t v26 = v42;
            }
          }
          else
          {
            uint64_t v46 = sub_222654C5C(v32);
            if (v46)
            {
              uint64_t v47 = v46;
              uint64_t v48 = sub_2225C3D04(v46);
              unsigned int v49 = sub_222654EC8(v47);
              if (v49)
              {
                int v60 = v27;
                uint64_t v61 = v47;
                uint64_t v50 = 0;
                uint64_t v63 = v49;
                do
                {
                  unsigned int v51 = sub_222654FBC(v47);
                  if (v51)
                  {
                    uint64_t v52 = 0;
                    uint64_t v53 = v51;
                    do
                    {
                      sub_222655AE4(v48);
                      uint64_t v54 = v48;
                      sub_222654ED4(*v26 + 16 * v50, v52);
                      int v55 = sub_22265E8C8(v64);
                      *(_DWORD *)sub_22265E298(v10, v30 + v52) = v55;
                      uint64_t v48 = v54;
                      ++v52;
                    }
                    while (v53 != v52);
                    v30 += v52;
                    uint64_t v47 = v61;
                  }
                  ++v50;
                }
                while (v50 != v63);
                uint64_t v27 = v60;
                uint64_t v29 = (uint64_t *)v57;
              }
            }
          }
        }
        ++v27;
        ++v26;
      }
      while (v27 != v29);
    }
  }
  return v10;
}

uint64_t sub_22265E8C8(uint64_t a1)
{
  return sub_222665AB8(a1);
}

uint64_t sub_22265E8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = sub_22265E160(a1, a3);
  uint64_t v13 = sub_22265E160(a1, a4);
  if (!sub_22265E1FC(v12))
  {
    if (sub_22265E1FC(v13))
    {
      return v13;
    }
    else
    {
      uint64_t v14 = sub_22265E20C(a1, 3);
      uint64_t v29 = sub_222659834(a3);
      uint64_t v15 = sub_2225C3C70((uint64_t)&v29);
      char v28 = sub_22265E240(v15);
      uint64_t v29 = sub_222659834(a4);
      uint64_t v16 = sub_2225C3C70((uint64_t)&v29);
      char v17 = sub_22265E240(v16);
      unsigned int v18 = sub_222654EC8(a2);
      if (v18)
      {
        uint64_t v19 = v14;
        uint64_t v20 = a5;
        uint64_t v21 = 0;
        uint64_t v22 = v18;
        do
        {
          uint64_t v23 = (unsigned int *)v12;
          if ((v28 & 1) == 0) {
            uint64_t v23 = (unsigned int *)sub_222654ED4(v12, v21);
          }
          uint64_t v24 = *v23;
          int v25 = (unsigned int *)v13;
          if ((v17 & 1) == 0) {
            int v25 = (unsigned int *)sub_222654ED4(v13, v21);
          }
          unint64_t v6 = v6 & 0xFFFFFFFF00000000 | v24;
          unint64_t v5 = v5 & 0xFFFFFFFF00000000 | *v25;
          int v26 = sub_22265E268(v20);
          *(_DWORD *)sub_22265E298(v19, v21++) = v26;
        }
        while (v22 != v21);
        return v19;
      }
      else
      {
        return v14;
      }
    }
  }
  return v12;
}

uint64_t sub_22265EA74(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v11 = sub_2225C3D04(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v11);
  uint64_t v5 = sub_22265E3C0(v4);
  uint64_t v6 = sub_2225C5B40(a2);
  uint64_t v7 = sub_222608330(a2);
  uint64_t v8 = sub_2225E55A8(v7);
  sub_22265E3C8(v12);
  uint64_t v9 = sub_22265E8F8(a1, v5, v6, v8, (uint64_t)v12);
  sub_22265E3CC(v12);
  return v9;
}

uint64_t sub_22265EB4C(uint64_t a1, uint64_t a2)
{
  sub_2226578F8(a2, (uint64_t)v6);
  float v3 = sub_2225C42E4((uint64_t)v6);
  uint64_t v4 = sub_22265EBA0(a1, v3);
  sub_2225C2AA4(v6);
  return v4;
}

uint64_t sub_22265EBA0(uint64_t a1, float a2)
{
  uint64_t v3 = sub_222635BFC(0x48uLL, *(uint64_t **)(a1 + 8));
  v4.n128_f32[0] = a2;

  return sub_222665558(v3, v4);
}

uint64_t sub_22265EBE0(uint64_t a1, uint64_t a2)
{
  sub_2226578EC(a2, (uint64_t)v6);
  uint64_t v3 = sub_2225CA404((uint64_t)v6);
  uint64_t v4 = sub_22265EC38(a1, v3);
  sub_2225C2F10(v6);
  return v4;
}

uint64_t sub_22265EC38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_222635BFC(0x48uLL, *(uint64_t **)(a1 + 8));

  return sub_22266556C(v3, a2);
}

uint64_t sub_22265EC78(uint64_t a1, uint64_t a2)
{
  sub_2226578EC(a2, (uint64_t)v6);
  uint64_t v3 = sub_2225C54BC(v6);
  uint64_t v4 = sub_22265EC38(a1, v3);
  sub_2225C2F10(v6);
  return v4;
}

uint64_t sub_22265ECD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225D05E4(a2);

  return sub_22265ED10(a1, v3);
}

uint64_t sub_22265ED10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_222635BFC(0x48uLL, *(uint64_t **)(a1 + 8));

  return sub_222665580(v3, a2);
}

uint64_t sub_22265ED50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = (unsigned char *)sub_22265E160(a1, v4);
  if (sub_22265E1FC((uint64_t)v5)) {
    return (uint64_t)v5;
  }
  switch(sub_2226579A0(a2))
  {
    case 1u:
      BOOL v7 = *v5 == 0;
      uint64_t result = sub_22265ED10(a1, v7);
      break;
    case 2u:
      uint64_t v61 = sub_2225C3D04(a2);
      uint64_t v8 = sub_2225C3C70((uint64_t)&v61);
      uint64_t v9 = sub_22265E3C0(v8);
      uint64_t v10 = sub_222654C5C(v9);
      if (!v10)
      {
        switch(sub_222655AE4(v9))
        {
          case 5u:
            uint64_t v41 = -*(_DWORD *)v5;
            goto LABEL_33;
          case 6u:
            uint64_t v41 = -*(_DWORD *)v5;
            goto LABEL_33;
          case 7u:
            goto LABEL_52;
          case 8u:
          case 9u:
          case 0xAu:
            uint64_t v22 = sub_22265E20C(a1, 3);
            uint64_t v61 = sub_2225C3D04(a2);
            uint64_t v29 = sub_2225C3C70((uint64_t)&v61);
            uint64_t v30 = sub_22265E3C0(v29);
            unsigned int v31 = sub_222654EC8(v30);
            if (v31)
            {
              uint64_t v32 = 0;
              uint64_t v33 = v31;
              do
              {
                float v34 = -*(float *)sub_222654ED4((uint64_t)v5, v32);
                *(float *)sub_22265E298(v22, v32++) = v34;
              }
              while (v33 != v32);
            }
            goto LABEL_31;
          case 0xBu:
          case 0xCu:
          case 0xDu:
            uint64_t v22 = sub_22265E20C(a1, 3);
            uint64_t v61 = sub_2225C3D04(a2);
            uint64_t v43 = sub_2225C3C70((uint64_t)&v61);
            uint64_t v44 = sub_22265E3C0(v43);
            unsigned int v45 = sub_222654EC8(v44);
            if (v45)
            {
              uint64_t v46 = 0;
              uint64_t v47 = v45;
              do
              {
                float v48 = -*(float *)sub_222654ED4((uint64_t)v5, v46);
                *(float *)sub_22265E298(v22, v46++) = v48;
              }
              while (v47 != v46);
            }
            goto LABEL_31;
          case 0xEu:
          case 0xFu:
          case 0x10u:
            uint64_t v22 = sub_22265E20C(a1, 3);
            uint64_t v61 = sub_2225C3D04(a2);
            uint64_t v55 = sub_2225C3C70((uint64_t)&v61);
            uint64_t v56 = sub_22265E3C0(v55);
            unsigned int v57 = sub_222654EC8(v56);
            if (v57)
            {
              uint64_t v58 = 0;
              uint64_t v59 = v57;
              do
              {
                int v60 = -*(_DWORD *)sub_222654ED4((uint64_t)v5, v58);
                *(_DWORD *)sub_22265E298(v22, v58++) = v60;
              }
              while (v59 != v58);
            }
            goto LABEL_31;
          case 0x11u:
          case 0x12u:
          case 0x13u:
            uint64_t v22 = sub_22265E20C(a1, 3);
            uint64_t v61 = sub_2225C3D04(a2);
            uint64_t v49 = sub_2225C3C70((uint64_t)&v61);
            uint64_t v50 = sub_22265E3C0(v49);
            unsigned int v51 = sub_222654EC8(v50);
            if (v51)
            {
              uint64_t v52 = 0;
              uint64_t v53 = v51;
              do
              {
                int v54 = -*(_DWORD *)sub_222654ED4((uint64_t)v5, v52);
                *(_DWORD *)sub_22265E298(v22, v52++) = v54;
              }
              while (v53 != v52);
            }
            goto LABEL_31;
          default:
            uint64_t v42 = sub_22265EBA0(a1, -*(float *)v5);
            goto LABEL_49;
        }
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_22265E20C(a1, 4);
      unsigned int v13 = sub_222654EC8(v11);
      if (v13)
      {
        uint64_t v14 = 0;
        uint64_t v15 = v13;
        do
        {
          unsigned int v16 = sub_222654FBC(v11);
          if (v16)
          {
            uint64_t v17 = 0;
            uint64_t v18 = v16;
            do
            {
              float v19 = -*(float *)sub_222654ED4((uint64_t)&v5[16 * v14], v17);
              *(float *)sub_22265E298(v12 + 16 * v14, v17++) = v19;
            }
            while (v18 != v17);
          }
          ++v14;
        }
        while (v14 != v15);
      }
      return v12;
    case 3u:
    case 5u:
      uint64_t result = sub_22265F314(a1, a2);
      break;
    case 6u:
      uint64_t v61 = sub_2225C3D04(a2);
      uint64_t v20 = sub_2225C3C70((uint64_t)&v61);
      uint64_t v21 = sub_22265E3C0(v20);
      switch(sub_222655AE4(v21))
      {
        case 6u:
          uint64_t v41 = ~*(_DWORD *)v5;
          goto LABEL_33;
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
LABEL_52:
          __break(1u);
          JUMPOUT(0x22265F27CLL);
        case 0xEu:
        case 0xFu:
        case 0x10u:
          uint64_t v22 = sub_22265E20C(a1, 3);
          uint64_t v61 = sub_2225C3D04(a2);
          uint64_t v23 = sub_2225C3C70((uint64_t)&v61);
          uint64_t v24 = sub_22265E3C0(v23);
          unsigned int v25 = sub_222654EC8(v24);
          if (v25)
          {
            uint64_t v26 = 0;
            uint64_t v27 = v25;
            do
            {
              int v28 = ~*(_DWORD *)sub_222654ED4((uint64_t)v5, v26);
              *(_DWORD *)sub_22265E298(v22, v26++) = v28;
            }
            while (v27 != v26);
          }
          goto LABEL_31;
        case 0x11u:
        case 0x12u:
        case 0x13u:
          uint64_t v22 = sub_22265E20C(a1, 3);
          uint64_t v61 = sub_2225C3D04(a2);
          uint64_t v35 = sub_2225C3C70((uint64_t)&v61);
          uint64_t v36 = sub_22265E3C0(v35);
          unsigned int v37 = sub_222654EC8(v36);
          if (v37)
          {
            uint64_t v38 = 0;
            uint64_t v39 = v37;
            do
            {
              int v40 = ~*(_DWORD *)sub_222654ED4((uint64_t)v5, v38);
              *(_DWORD *)sub_22265E298(v22, v38++) = v40;
            }
            while (v39 != v38);
          }
LABEL_31:
          uint64_t v5 = (unsigned char *)v22;
          break;
        default:
          uint64_t v41 = ~*(_DWORD *)v5;
LABEL_33:
          uint64_t v42 = sub_22265EC38(a1, v41);
LABEL_49:
          uint64_t v5 = (unsigned char *)v42;
          break;
      }
      return (uint64_t)v5;
    default:
      return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_22265F314(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_222665594(a1);
  sub_22266554C(v3, a2);
  return v3;
}

uint64_t sub_22265F348(uint64_t a1)
{
  uint64_t v2 = sub_2225C3C70(a1);
  uint64_t result = sub_222655B14(v2);
  if (!result)
  {
    uint64_t v4 = sub_2225C3C70(a1);
    uint64_t v5 = sub_222655B18(v4);
    if (!v5) {
      return 0;
    }
    uint64_t v7 = sub_2225C3D04(v5);
    uint64_t v6 = sub_2225C3C70((uint64_t)&v7);
    uint64_t result = sub_222655B14(v6);
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22265F3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v208 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = (float *)sub_22265E160(a1, v4);
  uint64_t v6 = sub_222608330(a2);
  uint64_t v7 = (float *)sub_22265E160(a1, v6);
  if (!sub_22265E1FC((uint64_t)v5))
  {
    if (sub_22265E1FC((uint64_t)v7))
    {
      return (uint64_t)v7;
    }
    else
    {
      switch(sub_222657CE8(a2))
      {
        case 1u:
          return sub_22265F314(a1, a2);
        case 2u:
          if (!*(unsigned char *)v5) {
            goto LABEL_33;
          }
          uint64_t v33 = 1;
          goto LABEL_48;
        case 3u:
          uint64_t v32 = *(unsigned __int8 *)v7 ^ *(unsigned __int8 *)v5;
          return sub_22265EC38(a1, v32);
        case 4u:
          if (*(unsigned char *)v5) {
LABEL_33:
          }
            uint64_t v33 = *(unsigned char *)v7 != 0;
          else {
            uint64_t v33 = 0;
          }
          goto LABEL_48;
        case 5u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v22 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v23 = sub_22265E3C0(v22);
          switch(sub_222655AE4(v23))
          {
            case 6u:
              uint64_t v90 = (*(_DWORD *)v7 | *(_DWORD *)v5);
              goto LABEL_198;
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
            case 0xCu:
            case 0xDu:
              goto LABEL_203;
            case 0xEu:
            case 0xFu:
            case 0x10u:
              sub_222660A8C((uint64_t)v206);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v206;
              goto LABEL_83;
            case 0x11u:
            case 0x12u:
            case 0x13u:
              sub_222660A88((uint64_t)v207);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v207;
              goto LABEL_83;
            default:
              uint64_t v90 = (*(_DWORD *)v7 | *(_DWORD *)v5);
              goto LABEL_126;
          }
        case 6u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v43 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v44 = sub_22265E3C0(v43);
          switch(sub_222655AE4(v44))
          {
            case 6u:
              uint64_t v90 = (*(_DWORD *)v7 ^ *(_DWORD *)v5);
              goto LABEL_198;
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
            case 0xCu:
            case 0xDu:
              goto LABEL_203;
            case 0xEu:
            case 0xFu:
            case 0x10u:
              sub_222660A94((uint64_t)v204);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v204;
              goto LABEL_83;
            case 0x11u:
            case 0x12u:
            case 0x13u:
              sub_222660A90((uint64_t)v205);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v205;
              goto LABEL_83;
            default:
              uint64_t v90 = (*(_DWORD *)v7 ^ *(_DWORD *)v5);
              goto LABEL_126;
          }
        case 7u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v45 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v46 = sub_22265E3C0(v45);
          switch(sub_222655AE4(v46))
          {
            case 6u:
              uint64_t v90 = (*(_DWORD *)v7 & *(_DWORD *)v5);
              goto LABEL_198;
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
            case 0xCu:
            case 0xDu:
              goto LABEL_203;
            case 0xEu:
            case 0xFu:
            case 0x10u:
              sub_222660A9C((uint64_t)v202);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v202;
              goto LABEL_83;
            case 0x11u:
            case 0x12u:
            case 0x13u:
              sub_222660A98((uint64_t)v203);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v203;
              goto LABEL_83;
            default:
              uint64_t v90 = (*(_DWORD *)v7 & *(_DWORD *)v5);
              goto LABEL_126;
          }
        case 8u:
          uint64_t v39 = sub_2225C5B40(a2);
          uint64_t v40 = sub_222659834(v39);
          uint64_t v33 = sub_222660AA0(v40, v5, v7) ^ 1;
          goto LABEL_48;
        case 9u:
          uint64_t v58 = sub_2225C5B40(a2);
          uint64_t v59 = sub_222659834(v58);
          uint64_t v33 = sub_222660AA0(v59, v5, v7);
LABEL_48:
          return sub_22265ED10(a1, v33);
        case 0xAu:
          uint64_t v24 = sub_2225C5B40(a2);
          uint64_t v173 = sub_222659834(v24);
          uint64_t v25 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v26 = sub_22265E3C0(v25);
          switch(sub_222655AE4(v26))
          {
            case 5u:
              BOOL v50 = *(_DWORD *)v5 <= *(_DWORD *)v7;
              break;
            case 6u:
              BOOL v27 = *(_DWORD *)v5 > *(_DWORD *)v7;
              goto LABEL_92;
            default:
              BOOL v27 = *v5 > *v7;
LABEL_92:
              BOOL v50 = !v27;
              break;
          }
          return sub_22265ED10(a1, v50);
        case 0xBu:
          uint64_t v47 = sub_2225C5B40(a2);
          uint64_t v173 = sub_222659834(v47);
          uint64_t v48 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v49 = sub_22265E3C0(v48);
          switch(sub_222655AE4(v49))
          {
            case 5u:
              BOOL v50 = *(_DWORD *)v5 < *(_DWORD *)v7;
              break;
            case 6u:
              BOOL v50 = *(_DWORD *)v5 < *(_DWORD *)v7;
              break;
            default:
              BOOL v50 = *v5 < *v7;
              break;
          }
          return sub_22265ED10(a1, v50);
        case 0xCu:
          uint64_t v18 = sub_2225C5B40(a2);
          uint64_t v173 = sub_222659834(v18);
          uint64_t v19 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v20 = sub_22265E3C0(v19);
          switch(sub_222655AE4(v20))
          {
            case 5u:
              BOOL v21 = *(_DWORD *)v5 <= *(_DWORD *)v7;
              goto LABEL_86;
            case 6u:
              BOOL v50 = *(_DWORD *)v5 > *(_DWORD *)v7;
              break;
            default:
              BOOL v21 = *v5 <= *v7;
LABEL_86:
              BOOL v50 = !v21;
              break;
          }
          return sub_22265ED10(a1, v50);
        case 0xDu:
          uint64_t v28 = sub_2225C5B40(a2);
          uint64_t v173 = sub_222659834(v28);
          uint64_t v29 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v30 = sub_22265E3C0(v29);
          switch(sub_222655AE4(v30))
          {
            case 5u:
              BOOL v31 = *(_DWORD *)v5 < *(_DWORD *)v7;
              goto LABEL_96;
            case 6u:
              BOOL v50 = *(_DWORD *)v5 >= *(_DWORD *)v7;
              break;
            default:
              BOOL v31 = *v5 < *v7;
LABEL_96:
              BOOL v50 = !v31;
              break;
          }
          return sub_22265ED10(a1, v50);
        case 0xEu:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v51 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v52 = sub_22265E3C0(v51);
          switch(sub_222655AE4(v52))
          {
            case 6u:
              uint64_t v90 = (*(_DWORD *)v5 >> *(_DWORD *)v7);
              goto LABEL_198;
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
            case 0xCu:
            case 0xDu:
              goto LABEL_203;
            case 0xEu:
            case 0xFu:
            case 0x10u:
              sub_222660F14((uint64_t)v200);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v200;
              goto LABEL_83;
            case 0x11u:
            case 0x12u:
            case 0x13u:
              sub_222660F10((uint64_t)v201);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v201;
              goto LABEL_83;
            default:
              uint64_t v90 = (*(int *)v5 >> *(_DWORD *)v7);
              goto LABEL_126;
          }
        case 0xFu:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v15 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v16 = sub_22265E3C0(v15);
          int v17 = 1 << sub_222655AE4(v16);
          if ((v17 & 0x1C000) != 0)
          {
            sub_222660F1C((uint64_t)v198);
            uint64_t v5 = (float *)sub_22265EA74(a1, a2);
            uint64_t v14 = v198;
            goto LABEL_83;
          }
          if ((v17 & 0xE0000) != 0)
          {
            sub_222660F18((uint64_t)v199);
            uint64_t v5 = (float *)sub_22265EA74(a1, a2);
            uint64_t v14 = v199;
            goto LABEL_83;
          }
          uint64_t v90 = (*(_DWORD *)v5 << *(_DWORD *)v7);
LABEL_198:
          uint64_t v106 = a1;
          return sub_22265EC38(v106, v90);
        case 0x10u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v34 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v35 = sub_22265E3C0(v34);
          uint64_t v36 = sub_222654C5C(v35);
          if (!v36)
          {
            switch(sub_222655AE4(v35))
            {
              case 5u:
              case 6u:
                uint64_t v90 = (*(_DWORD *)v7 + *(_DWORD *)v5);
                goto LABEL_198;
              case 7u:
                goto LABEL_203;
              case 8u:
              case 9u:
              case 0xAu:
                sub_222660F7C((uint64_t)v195);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v195;
                goto LABEL_83;
              case 0xBu:
              case 0xCu:
              case 0xDu:
                sub_222660F80((uint64_t)v194);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v194;
                goto LABEL_83;
              case 0xEu:
              case 0xFu:
              case 0x10u:
              case 0x11u:
              case 0x12u:
              case 0x13u:
                sub_222660F84((uint64_t)v193);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v193;
                goto LABEL_83;
              default:
                float v134 = *v5 + *v7;
                return sub_22265EBA0(a1, v134);
            }
          }
          uint64_t v37 = v36;
          uint64_t v38 = sub_2225C3D04(v36);
          sub_2225C64B8(&v172, v38);
          if (sub_222660F20(v172, 3))
          {
            sub_222660F74((uint64_t)v197);
            uint64_t v5 = (float *)sub_22265E3D0(a1, a2);
            uint64_t v14 = v197;
          }
          else
          {
            uint64_t v88 = sub_2225C3D04(v37);
            sub_2225C64B8(&v171, v88);
            sub_222660F20(v171, 4);
            sub_222660F78((uint64_t)v196);
            uint64_t v5 = (float *)sub_22265E3D0(a1, a2);
            uint64_t v14 = v196;
          }
          goto LABEL_83;
        case 0x11u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v9 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v10 = sub_22265E3C0(v9);
          uint64_t v11 = sub_222654C5C(v10);
          if (!v11)
          {
            switch(sub_222655AE4(v10))
            {
              case 5u:
              case 6u:
                uint64_t v90 = (*(_DWORD *)v5 - *(_DWORD *)v7);
                goto LABEL_198;
              case 7u:
                goto LABEL_203;
              case 8u:
              case 9u:
              case 0xAu:
                sub_222660F90((uint64_t)v190);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v190;
                goto LABEL_83;
              case 0xBu:
              case 0xCu:
              case 0xDu:
                sub_222660F94((uint64_t)v189);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v189;
                goto LABEL_83;
              case 0xEu:
              case 0xFu:
              case 0x10u:
                sub_222660F98((uint64_t)v188);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v188;
                goto LABEL_83;
              case 0x11u:
              case 0x12u:
              case 0x13u:
                sub_222660F9C((uint64_t)v187);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v187;
                goto LABEL_83;
              default:
                float v134 = *v5 - *v7;
                return sub_22265EBA0(a1, v134);
            }
          }
          uint64_t v12 = v11;
          uint64_t v13 = sub_2225C3D04(v11);
          sub_2225C64B8(&v170, v13);
          if (sub_222660F20(v170, 3))
          {
            sub_222660F88((uint64_t)v192);
            uint64_t v5 = (float *)sub_22265E3D0(a1, a2);
            uint64_t v14 = v192;
          }
          else
          {
            uint64_t v87 = sub_2225C3D04(v12);
            sub_2225C64B8(&v169, v87);
            sub_222660F20(v169, 4);
            sub_222660F8C((uint64_t)v191);
            uint64_t v5 = (float *)sub_22265E3D0(a1, a2);
            uint64_t v14 = v191;
          }
          goto LABEL_83;
        case 0x12u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v41 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v42 = sub_22265E3C0(v41);
          switch(sub_222655AE4(v42))
          {
            case 6u:
              uint64_t v90 = (*(_DWORD *)v5 % *(_DWORD *)v7);
              goto LABEL_198;
            case 7u:
            case 8u:
            case 9u:
            case 0xAu:
            case 0xBu:
            case 0xCu:
            case 0xDu:
              goto LABEL_203;
            case 0xEu:
            case 0xFu:
            case 0x10u:
              sub_222660FA4((uint64_t)v185);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v185;
              goto LABEL_83;
            case 0x11u:
            case 0x12u:
            case 0x13u:
              sub_222660FA0((uint64_t)v186);
              uint64_t v5 = (float *)sub_22265EA74(a1, a2);
              uint64_t v14 = v186;
              goto LABEL_83;
            default:
              uint64_t v90 = (*(_DWORD *)v5 % *(_DWORD *)v7);
              goto LABEL_126;
          }
        case 0x13u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v53 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v54 = sub_22265E3C0(v53);
          uint64_t v55 = sub_222654C5C(v54);
          if (v55)
          {
            uint64_t v56 = v55;
            uint64_t v57 = sub_2225C3D04(v55);
            sub_2225C64B8(&v168, v57);
            if (sub_222660F20(v168, 3))
            {
              sub_222660FA8((uint64_t)v184);
              uint64_t v5 = (float *)sub_22265E3D0(a1, a2);
              uint64_t v14 = v184;
            }
            else
            {
              uint64_t v89 = sub_2225C3D04(v56);
              sub_2225C64B8(&v167, v89);
              sub_222660F20(v167, 4);
              sub_222660FAC((uint64_t)v183);
              uint64_t v5 = (float *)sub_22265E3D0(a1, a2);
              uint64_t v14 = v183;
            }
LABEL_83:
            sub_22265E3CC(v14);
          }
          else
          {
            switch(sub_222655AE4(v54))
            {
              case 5u:
              case 6u:
                if (!*(_DWORD *)v7)
                {
                  uint64_t v106 = a1;
                  uint64_t v90 = 0;
                  return sub_22265EC38(v106, v90);
                }
                int v135 = sub_222655AE4(v54);
                float v136 = *v5;
                if (v135 != 5)
                {
                  uint64_t v90 = (LODWORD(v136) / *(_DWORD *)v7);
                  goto LABEL_198;
                }
                float v137 = *v7;
                if (v136 == -0.0 && v137 == NAN)
                {
                  uint64_t v106 = a1;
                  uint64_t v90 = 0;
                }
                else
                {
                  uint64_t v90 = (SLODWORD(v136) / SLODWORD(v137));
LABEL_126:
                  uint64_t v106 = a1;
                }
                break;
              case 7u:
                goto LABEL_203;
              case 8u:
              case 9u:
              case 0xAu:
                sub_222660FB0((uint64_t)v182);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v182;
                goto LABEL_83;
              case 0xBu:
              case 0xCu:
              case 0xDu:
                sub_222660FB4((uint64_t)v181);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v181;
                goto LABEL_83;
              case 0xEu:
              case 0xFu:
              case 0x10u:
                sub_222660FB8((uint64_t)v180);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v180;
                goto LABEL_83;
              case 0x11u:
              case 0x12u:
              case 0x13u:
                sub_222660FBC((uint64_t)v179);
                uint64_t v5 = (float *)sub_22265EA74(a1, a2);
                uint64_t v14 = v179;
                goto LABEL_83;
              default:
                float v134 = *v5 / *v7;
                return sub_22265EBA0(a1, v134);
            }
            return sub_22265EC38(v106, v90);
          }
          return (uint64_t)v5;
        case 0x14u:
          uint64_t v173 = sub_2225C3D04(a2);
          uint64_t v60 = sub_2225C3C70((uint64_t)&v173);
          uint64_t v61 = sub_22265E3C0(v60);
          uint64_t v62 = sub_2225C5B40(a2);
          uint64_t v173 = sub_222659834(v62);
          uint64_t v63 = sub_222608330(a2);
          uint64_t v64 = sub_2225E55A8(v63);
          uint64_t v166 = sub_222659834(v64);
          uint64_t v65 = sub_222654C5C(v61);
          if (v65)
          {
            uint64_t v66 = v65;
            uint64_t v67 = sub_2225C3C70((uint64_t)&v173);
            if ((sub_22265E240(v67) & 1) != 0
              || (uint64_t v68 = sub_2225C3C70((uint64_t)&v166), sub_22265E240(v68)))
            {
              uint64_t v69 = sub_2225C3D04(v66);
              sub_2225C64B8(&v165, v69);
              if (sub_222660F20(v165, 3))
              {
                sub_222660FC0((uint64_t)v178);
                uint64_t v70 = (uint64_t)sub_22265E3D0(a1, a2);
                int v71 = v178;
              }
              else
              {
                uint64_t v92 = sub_2225C3D04(v66);
                sub_2225C64B8(&v164, v92);
                sub_222660F20(v164, 4);
                sub_222660FC4((uint64_t)v177);
                uint64_t v70 = (uint64_t)sub_22265E3D0(a1, a2);
                int v71 = v177;
              }
LABEL_185:
              sub_22265E3CC(v71);
            }
            else
            {
              uint64_t v70 = sub_22265E20C(a1, 4);
              uint64_t v93 = sub_2225C3C70((uint64_t)&v173);
              uint64_t v94 = sub_22265E3C0(v93);
              uint64_t v95 = sub_2225C3D04(v66);
              sub_2225C64B8(&v163, v95);
              uint64_t v157 = v66;
              if (sub_222660F20(v163, 3))
              {
                unsigned int v96 = sub_222654EC8(v66);
                if (!v96) {
                  goto LABEL_186;
                }
                uint64_t v158 = 0;
                uint64_t v154 = v96;
                uint64_t v156 = v70;
                do
                {
                  unsigned int v97 = sub_222654FBC(v66);
                  if (v97)
                  {
                    uint64_t v98 = 0;
                    uint64_t v99 = v97;
                    do
                    {
                      unsigned int v100 = sub_222654EC8(v94);
                      if (v100)
                      {
                        uint64_t v101 = 0;
                        uint64_t v102 = v100;
                        float v103 = 0.0;
                        uint64_t v104 = (uint64_t)v5;
                        do
                        {
                          float v105 = *(float *)sub_222654ED4(v104, v98);
                          float v103 = v103 + (float)(v105 * *(float *)sub_222654ED4((uint64_t)&v7[4 * v158], v101++));
                          v104 += 16;
                        }
                        while (v102 != v101);
                      }
                      else
                      {
                        float v103 = 0.0;
                      }
                      *(float *)sub_22265E298(v156 + 16 * v158, v98++) = v103;
                    }
                    while (v98 != v99);
                  }
                  uint64_t v66 = v157;
                  ++v158;
                }
                while (v158 != v154);
              }
              else
              {
                uint64_t v107 = sub_2225C3D04(v66);
                sub_2225C64B8(&v162, v107);
                sub_222660F20(v162, 4);
                unsigned int v108 = sub_222654EC8(v66);
                if (!v108) {
                  goto LABEL_186;
                }
                uint64_t v159 = 0;
                uint64_t v155 = v108;
                uint64_t v156 = v70;
                do
                {
                  unsigned int v109 = sub_222654FBC(v66);
                  if (v109)
                  {
                    uint64_t v110 = 0;
                    uint64_t v111 = v109;
                    do
                    {
                      unsigned int v112 = sub_222654EC8(v94);
                      if (v112)
                      {
                        uint64_t v113 = 0;
                        uint64_t v114 = v112;
                        float v115 = 0.0;
                        uint64_t v116 = (uint64_t)v5;
                        do
                        {
                          float v117 = *(float *)sub_222654ED4(v116, v110);
                          float v115 = v115 + (float)(v117 * *(float *)sub_222654ED4((uint64_t)&v7[4 * v159], v113++));
                          v116 += 16;
                        }
                        while (v114 != v113);
                      }
                      else
                      {
                        float v115 = 0.0;
                      }
                      *(float *)sub_22265E298(v156 + 16 * v159, v110++) = v115;
                    }
                    while (v110 != v111);
                  }
                  uint64_t v66 = v157;
                  ++v159;
                }
                while (v159 != v155);
              }
              uint64_t v70 = v156;
            }
          }
          else
          {
            switch(sub_222655AE4(v61))
            {
              case 5u:
              case 6u:
                uint64_t v138 = sub_22265EC38(a1, (*(_DWORD *)v7 * *(_DWORD *)v5));
                goto LABEL_174;
              case 7u:
LABEL_203:
                __break(1u);
                JUMPOUT(0x2226607BCLL);
              case 8u:
              case 9u:
              case 0xAu:
              case 0xBu:
              case 0xCu:
              case 0xDu:
                uint64_t v72 = sub_2225C3C70((uint64_t)&v166);
                uint64_t v73 = sub_222654C5C(v72);
                if (v73)
                {
                  uint64_t v74 = v73;
                  uint64_t v70 = sub_22265E20C(a1, 4);
                  uint64_t v75 = sub_2225C3C70((uint64_t)&v173);
                  uint64_t v76 = sub_22265E3C0(v75);
                  uint64_t v77 = sub_2225C3D04(v74);
                  sub_2225C64B8(&v161, v77);
                  int v78 = sub_222660F20(v161, 3);
                  unsigned int v79 = sub_222654EC8(v74);
                  if (v78)
                  {
                    if (v79)
                    {
                      uint64_t v80 = 0;
                      uint64_t v81 = v79;
                      do
                      {
                        unsigned int v82 = sub_222654EC8(v76);
                        if (v82)
                        {
                          uint64_t v83 = 0;
                          float v84 = 0.0;
                          uint64_t v85 = v82;
                          do
                          {
                            float v86 = *(float *)sub_222654ED4((uint64_t)v5, v83);
                            float v84 = v84 + (float)(v86 * *(float *)sub_222654ED4((uint64_t)&v7[4 * v80], v83++));
                          }
                          while (v85 != v83);
                        }
                        else
                        {
                          float v84 = 0.0;
                        }
                        *(float *)sub_22265E298(v70, v80++) = v84;
                      }
                      while (v80 != v81);
                    }
                  }
                  else if (v79)
                  {
                    uint64_t v139 = 0;
                    uint64_t v140 = v79;
                    do
                    {
                      unsigned int v141 = sub_222654EC8(v76);
                      if (v141)
                      {
                        uint64_t v142 = 0;
                        float v143 = 0.0;
                        uint64_t v144 = v141;
                        do
                        {
                          float v145 = *(float *)sub_222654ED4((uint64_t)v5, v142);
                          float v143 = v143 + (float)(v145 * *(float *)sub_222654ED4((uint64_t)&v7[4 * v139], v142++));
                        }
                        while (v144 != v142);
                      }
                      else
                      {
                        float v143 = 0.0;
                      }
                      *(float *)sub_22265E298(v70, v139++) = v143;
                    }
                    while (v139 != v140);
                  }
                }
                else
                {
                  uint64_t v118 = sub_2225C3C70((uint64_t)&v173);
                  uint64_t v119 = sub_222654C5C(v118);
                  if (!v119)
                  {
                    sub_222660FC8((uint64_t)v176);
                    uint64_t v70 = sub_22265EA74(a1, a2);
                    int v71 = v176;
                    goto LABEL_185;
                  }
                  uint64_t v120 = v119;
                  uint64_t v70 = sub_22265E20C(a1, 4);
                  uint64_t v121 = sub_2225C3C70((uint64_t)&v166);
                  uint64_t v122 = sub_22265E3C0(v121);
                  uint64_t v123 = sub_2225C3D04(v120);
                  sub_2225C64B8(&v160, v123);
                  int v124 = sub_222660F20(v160, 3);
                  unsigned int v125 = sub_222654FBC(v120);
                  if (v124)
                  {
                    if (v125)
                    {
                      uint64_t v126 = 0;
                      uint64_t v127 = v125;
                      do
                      {
                        unsigned int v128 = sub_222654EC8(v122);
                        if (v128)
                        {
                          uint64_t v129 = 0;
                          uint64_t v130 = v128;
                          float v131 = 0.0;
                          uint64_t v132 = (uint64_t)v5;
                          do
                          {
                            float v133 = *(float *)sub_222654ED4(v132, v126);
                            float v131 = v131 + (float)(v133 * *(float *)sub_222654ED4((uint64_t)v7, v129++));
                            v132 += 16;
                          }
                          while (v130 != v129);
                        }
                        else
                        {
                          float v131 = 0.0;
                        }
                        *(float *)sub_22265E298(v70, v126++) = v131;
                      }
                      while (v126 != v127);
                    }
                  }
                  else if (v125)
                  {
                    uint64_t v146 = 0;
                    uint64_t v147 = v125;
                    do
                    {
                      unsigned int v148 = sub_222654EC8(v122);
                      if (v148)
                      {
                        uint64_t v149 = 0;
                        uint64_t v150 = v148;
                        float v151 = 0.0;
                        uint64_t v152 = (uint64_t)v5;
                        do
                        {
                          float v153 = *(float *)sub_222654ED4(v152, v146);
                          float v151 = v151 + (float)(v153 * *(float *)sub_222654ED4((uint64_t)v7, v149++));
                          v152 += 16;
                        }
                        while (v150 != v149);
                      }
                      else
                      {
                        float v151 = 0.0;
                      }
                      *(float *)sub_22265E298(v70, v146++) = v151;
                    }
                    while (v146 != v147);
                  }
                }
                break;
              case 0xEu:
              case 0xFu:
              case 0x10u:
                sub_222660FCC((uint64_t)v175);
                uint64_t v70 = sub_22265EA74(a1, a2);
                int v71 = v175;
                goto LABEL_185;
              case 0x11u:
              case 0x12u:
              case 0x13u:
                sub_222660FD0((uint64_t)v174);
                uint64_t v70 = sub_22265EA74(a1, a2);
                int v71 = v174;
                goto LABEL_185;
              default:
                uint64_t v138 = sub_22265EBA0(a1, *v5 * *v7);
LABEL_174:
                uint64_t v70 = v138;
                break;
            }
          }
LABEL_186:
          uint64_t v5 = (float *)v70;
          break;
        default:
          return (uint64_t)v5;
      }
    }
  }
  return (uint64_t)v5;
}

uint64_t sub_222660AA0(uint64_t a1, float *a2, float *a3)
{
  uint64_t v77 = a1;
  uint64_t v5 = sub_2225C3C70((uint64_t)&v77);
  uint64_t v6 = sub_222655B10(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_222654C5C(v6);
    if (!v8)
    {
      switch(sub_222655AE4(v7))
      {
        case 5u:
        case 6u:
          float v75 = *a2;
          float v76 = *a3;
          goto LABEL_75;
        case 7u:
          LODWORD(v75) = *(unsigned __int8 *)a2;
          LODWORD(v76) = *(unsigned __int8 *)a3;
LABEL_75:
          BOOL v74 = LODWORD(v75) == LODWORD(v76);
          goto LABEL_76;
        case 8u:
        case 9u:
        case 0xAu:
          uint64_t v27 = sub_22265E3C0(v7);
          unsigned int v28 = sub_222654EC8(v27);
          if (!v28) {
            return 1;
          }
          uint64_t v29 = 0;
          uint64_t v30 = v28 - 1;
          do
          {
            float v31 = *(float *)sub_222654ED4((uint64_t)a2, v29);
            BOOL v26 = v31 == *(float *)sub_222654ED4((uint64_t)a3, v29);
            uint64_t result = v26;
          }
          while (v26 && v30 != v29++);
          return result;
        case 0xBu:
        case 0xCu:
        case 0xDu:
          uint64_t v47 = sub_22265E3C0(v7);
          unsigned int v48 = sub_222654EC8(v47);
          if (!v48) {
            return 1;
          }
          uint64_t v49 = 0;
          uint64_t v50 = v48 - 1;
          do
          {
            float v51 = *(float *)sub_222654ED4((uint64_t)a2, v49);
            BOOL v26 = v51 == *(float *)sub_222654ED4((uint64_t)a3, v49);
            uint64_t result = v26;
          }
          while (v26 && v50 != v49++);
          return result;
        case 0xEu:
        case 0xFu:
        case 0x10u:
          uint64_t v53 = sub_22265E3C0(v7);
          unsigned int v54 = sub_222654EC8(v53);
          if (!v54) {
            return 1;
          }
          uint64_t v55 = 0;
          uint64_t v56 = v54 - 1;
          do
          {
            int v57 = *(_DWORD *)sub_222654ED4((uint64_t)a2, v55);
            int v58 = *(_DWORD *)sub_222654ED4((uint64_t)a3, v55);
            uint64_t result = v57 == v58;
          }
          while (v57 == v58 && v56 != v55++);
          return result;
        case 0x11u:
        case 0x12u:
        case 0x13u:
          uint64_t v60 = sub_22265E3C0(v7);
          unsigned int v61 = sub_222654EC8(v60);
          if (!v61) {
            return 1;
          }
          uint64_t v62 = 0;
          uint64_t v63 = v61 - 1;
          do
          {
            int v64 = *(_DWORD *)sub_222654ED4((uint64_t)a2, v62);
            int v65 = *(_DWORD *)sub_222654ED4((uint64_t)a3, v62);
            uint64_t result = v64 == v65;
          }
          while (v64 == v65 && v63 != v62++);
          return result;
        case 0x14u:
        case 0x15u:
        case 0x16u:
          uint64_t v67 = sub_22265E3C0(v7);
          unsigned int v68 = sub_222654EC8(v67);
          if (!v68) {
            return 1;
          }
          uint64_t v69 = 0;
          uint64_t v70 = v68 - 1;
          do
          {
            int v71 = *(unsigned __int8 *)sub_222654ED4((uint64_t)a2, v69);
            int v72 = *(unsigned __int8 *)sub_222654ED4((uint64_t)a3, v69);
            uint64_t result = v71 == v72;
          }
          while (v71 == v72 && v70 != v69++);
          return result;
        default:
          BOOL v74 = *a2 == *a3;
LABEL_76:
          uint64_t result = v74;
          break;
      }
      return result;
    }
    uint64_t v9 = v8;
    unsigned int v10 = sub_222654EC8(v8);
    if (v10)
    {
      uint64_t v11 = 0;
      uint64_t v12 = v10;
      while (1)
      {
        unsigned int v13 = sub_222654FBC(v9);
        if (v13) {
          break;
        }
LABEL_9:
        ++v11;
        uint64_t result = 1;
        if (v11 == v12) {
          return result;
        }
      }
      uint64_t v14 = 0;
      uint64_t v15 = v13;
      while (1)
      {
        float v16 = *(float *)sub_222654ED4((uint64_t)&a2[4 * v11], v14);
        if (v16 != *(float *)sub_222654ED4((uint64_t)&a3[4 * v11], v14)) {
          return 0;
        }
        if (v15 == ++v14) {
          goto LABEL_9;
        }
      }
    }
    return 1;
  }
  uint64_t v18 = sub_22265F348((uint64_t)&v77);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_2225C3D04(v18);
    int v21 = sub_2225F514C(v19);
    if (v21)
    {
      unsigned int v22 = 0;
      int v23 = v21 - 1;
      do
      {
        uint64_t v24 = *(void *)sub_2225F84F4((uint64_t)a2, v22);
        uint64_t v25 = (void *)sub_2225F84F4((uint64_t)a3, v22);
        uint64_t result = sub_222660AA0(v20, v24, *v25);
        if (result) {
          BOOL v26 = v23 == v22;
        }
        else {
          BOOL v26 = 1;
        }
        ++v22;
      }
      while (!v26);
      return result;
    }
    return 1;
  }
  uint64_t v33 = sub_2225C3C70((uint64_t)&v77);
  uint64_t v34 = sub_22265E3C0(v33);
  uint64_t v35 = sub_2225C3D04(v34) + 16;
  uint64_t v36 = (uint64_t *)sub_2225CC180(v35);
  uint64_t v37 = sub_22265594C(v35);
  if (v36 == (uint64_t *)v37) {
    return 1;
  }
  uint64_t v38 = (uint64_t *)v37;
  unsigned int v39 = 0;
  while (1)
  {
    uint64_t v40 = *v36;
    uint64_t v41 = (unsigned __int8 **)sub_222653754(*v36);
    uint64_t v42 = sub_222653758(v40);
    if (v41 != (unsigned __int8 **)v42) {
      break;
    }
LABEL_36:
    ++v36;
    uint64_t result = 1;
    if (v36 == v38) {
      return result;
    }
  }
  uint64_t v43 = (unsigned __int8 **)v42;
  while (1)
  {
    uint64_t v44 = sub_222659C34(*v41);
    uint64_t v45 = *(void *)sub_2225F84F4((uint64_t)a2, v39);
    uint64_t v46 = (void *)sub_2225F84F4((uint64_t)a3, v39);
    uint64_t result = sub_222660AA0(v44, v45, *v46);
    if (!result) {
      return result;
    }
    ++v39;
    if (++v41 == v43) {
      goto LABEL_36;
    }
  }
}

uint64_t sub_222660F20(uint64_t a1, int a2)
{
  uint64_t v7 = a1;
  uint64_t v3 = sub_2225C3C70((uint64_t)&v7);
  uint64_t result = sub_2226655C4(v3);
  if (result)
  {
    uint64_t v5 = sub_2225C3C70((uint64_t)&v7);
    uint64_t v6 = sub_22265E3C0(v5);
    return sub_222655AE4(v6) == a2;
  }
  return result;
}

unsigned char *sub_222660FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = (unsigned char *)sub_22265E160(a1, v4);
  uint64_t v6 = sub_222608330(a2);
  uint64_t v7 = sub_22265E160(a1, v6);
  uint64_t v8 = sub_2225CDCF4(a2);
  uint64_t v9 = sub_22265E160(a1, v8);
  if (sub_22265E1FC((uint64_t)v5)) {
    return v5;
  }
  BOOL v11 = sub_22265E1FC(v7);
  uint64_t result = (unsigned char *)v7;
  if (!v11)
  {
    BOOL v12 = sub_22265E1FC(v9);
    uint64_t result = (unsigned char *)v9;
    if (!v12)
    {
      if (*v5) {
        return (unsigned char *)v7;
      }
      else {
        return (unsigned char *)v9;
      }
    }
  }
  return result;
}

uint64_t sub_222661090(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  if (sub_22266111C(v4))
  {
    sub_222657D0C(a2);
    uint64_t v5 = (_DWORD *)sub_22265D838(*a1);
    uint64_t v6 = sub_22265D860(v5);
    return sub_22265EC38((uint64_t)a1, v6);
  }
  else
  {
    return sub_22265F314((uint64_t)a1, a2);
  }
}

uint64_t sub_22266111C(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v3);
  uint64_t result = sub_222654A90(v1);
  if (result) {
    return sub_222655AE4(result) - 5 < 2;
  }
  return result;
}

uint64_t sub_22266115C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  uint64_t v5 = (_DWORD *)sub_2226611F0(v4);
  if (v5 && (uint64_t v6 = (uint64_t)v5, sub_2226551A0(v5) == 2))
  {
    uint64_t v7 = sub_222608330(v6);
    return sub_22265E160(a1, v7);
  }
  else
  {
    return sub_22265F314(a1, a2);
  }
}

uint64_t sub_2226611F0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222669188(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_22266122C(uint64_t a1, unint64_t a2)
{
  uint64_t v155 = *MEMORY[0x263EF8340];
  sub_222661D14(v154);
  uint64_t v6 = (uint64_t *)sub_2225CC180(a2 + 8);
  uint64_t v7 = sub_222657D18(a2 + 8);
  if (v6 != (uint64_t *)v7)
  {
    uint64_t v8 = (uint64_t *)v7;
    while (1)
    {
      uint64_t v9 = *v6;
      uint64_t v148 = 0;
      uint64_t v148 = sub_22265E160(a1, v9);
      if (sub_22265E1FC(v148)) {
        break;
      }
      sub_2225CC7B8((uint64_t)v154, &v148);
      if (++v6 == v8) {
        goto LABEL_5;
      }
    }
    uint64_t v134 = v148;
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v148 = sub_2225C5B40(a2);
  if (sub_22265F348((uint64_t)&v148))
  {
    sub_2225D3DDC(v147, v154);
    uint64_t v10 = v147[0];
    uint64_t v11 = v147[1];
    uint64_t v12 = a1;
    char v13 = 5;
    goto LABEL_10;
  }
  uint64_t v148 = sub_2225C5B40(a2);
  uint64_t v14 = sub_2225C3C70((uint64_t)&v148);
  if (sub_222661D68(v14))
  {
    sub_2225D3DDC(v146, v154);
    uint64_t v10 = v146[0];
    uint64_t v11 = v146[1];
    uint64_t v12 = a1;
    char v13 = 2;
LABEL_10:
    uint64_t v15 = (uint64_t)sub_222661D18(v12, v10, v11, v13);
LABEL_11:
    uint64_t v134 = v15;
    goto LABEL_12;
  }
  uint64_t v148 = sub_2225C5B40(a2);
  uint64_t v17 = sub_2225C3C70((uint64_t)&v148);
  unint64_t v18 = sub_22265E3C0(v17);
  uint64_t v19 = sub_222654C5C(v18);
  if (!v19)
  {
    switch(sub_222655AE4(v18))
    {
      case 4u:
        uint64_t v87 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v148 = sub_222659834(*v87);
        uint64_t v88 = sub_2225C3C70((uint64_t)&v148);
        uint64_t v89 = sub_22265E3C0(v88);
        uint64_t v90 = sub_222654A90(v89);
        if (v90)
        {
          int v91 = sub_222655AE4(v90);
          uint64_t v92 = *(int **)sub_2225CC180((uint64_t)v154);
        }
        else
        {
          uint64_t v113 = sub_222654B7C(v89);
          if (!v113) {
            uint64_t v113 = sub_222654C5C(v89);
          }
          uint64_t v114 = sub_2225C3D04(v113);
          int v91 = sub_222655AE4(v114);
          uint64_t v123 = (uint64_t *)sub_2225CC180((uint64_t)v154);
          uint64_t v92 = (int *)sub_222654ED4(*v123, 0);
        }
        float v122 = sub_222661DF4(v91, *v92);
        goto LABEL_103;
      case 5u:
        uint64_t v93 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v148 = sub_222659834(*v93);
        uint64_t v94 = sub_2225C3C70((uint64_t)&v148);
        uint64_t v95 = sub_22265E3C0(v94);
        uint64_t v96 = sub_222654A90(v95);
        if (v96)
        {
          int v97 = sub_222655AE4(v96);
          uint64_t v98 = *(unsigned int **)sub_2225CC180((uint64_t)v154);
        }
        else
        {
          uint64_t v115 = sub_222654B7C(v95);
          if (!v115) {
            uint64_t v115 = sub_222654C5C(v95);
          }
          uint64_t v116 = sub_2225C3D04(v115);
          int v97 = sub_222655AE4(v116);
          int v124 = (uint64_t *)sub_2225CC180((uint64_t)v154);
          uint64_t v98 = (unsigned int *)sub_222654ED4(*v124, 0);
        }
        uint64_t v125 = sub_222661E58(v97, *v98);
        uint64_t v15 = sub_22265EC38(a1, v125);
        goto LABEL_11;
      case 6u:
        uint64_t v99 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v148 = sub_222659834(*v99);
        uint64_t v100 = sub_2225C3C70((uint64_t)&v148);
        uint64_t v101 = sub_22265E3C0(v100);
        uint64_t v102 = sub_222654A90(v101);
        if (v102)
        {
          int v103 = sub_222655AE4(v102);
          uint64_t v104 = *(unsigned int **)sub_2225CC180((uint64_t)v154);
        }
        else
        {
          uint64_t v117 = sub_222654B7C(v101);
          if (!v117) {
            uint64_t v117 = sub_222654C5C(v101);
          }
          uint64_t v118 = sub_2225C3D04(v117);
          int v103 = sub_222655AE4(v118);
          uint64_t v126 = (uint64_t *)sub_2225CC180((uint64_t)v154);
          uint64_t v104 = (unsigned int *)sub_222654ED4(*v126, 0);
        }
        uint64_t v127 = sub_222661EA8(v103, *v104);
        uint64_t v15 = sub_22265EC38(a1, v127);
        goto LABEL_11;
      case 7u:
        float v105 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v148 = sub_222659834(*v105);
        uint64_t v106 = sub_2225C3C70((uint64_t)&v148);
        uint64_t v107 = sub_22265E3C0(v106);
        uint64_t v108 = sub_222654A90(v107);
        if (v108)
        {
          int v109 = sub_222655AE4(v108);
          uint64_t v110 = *(int **)sub_2225CC180((uint64_t)v154);
        }
        else
        {
          uint64_t v119 = sub_222654B7C(v107);
          if (!v119) {
            uint64_t v119 = sub_222654C5C(v107);
          }
          uint64_t v120 = sub_2225C3D04(v119);
          int v109 = sub_222655AE4(v120);
          unsigned int v128 = (uint64_t *)sub_2225CC180((uint64_t)v154);
          uint64_t v110 = (int *)sub_222654ED4(*v128, 0);
        }
        uint64_t v129 = sub_222661EF8(v109, *v110);
        uint64_t v15 = sub_22265ED10(a1, v129);
        goto LABEL_11;
      case 8u:
      case 9u:
      case 0xAu:
        sub_2225D3DDC(v141, v154);
        sub_222661F50((uint64_t)v153);
        uint64_t v134 = sub_22265E4A8(a1, a2, v141[0], v141[1], (uint64_t)v153);
        unsigned int v39 = v153;
        goto LABEL_76;
      case 0xBu:
      case 0xCu:
      case 0xDu:
        sub_2225D3DDC(v140, v154);
        sub_222661F58((uint64_t)v152);
        uint64_t v134 = sub_22265E4A8(a1, a2, v140[0], v140[1], (uint64_t)v152);
        unsigned int v39 = v152;
        goto LABEL_76;
      case 0xEu:
      case 0xFu:
      case 0x10u:
        sub_2225D3DDC(v139, v154);
        sub_222661F5C((uint64_t)v151);
        uint64_t v134 = sub_22265E4A8(a1, a2, v139[0], v139[1], (uint64_t)v151);
        unsigned int v39 = v151;
        goto LABEL_76;
      case 0x11u:
      case 0x12u:
      case 0x13u:
        sub_2225D3DDC(v138, v154);
        sub_222661F60((uint64_t)v150);
        uint64_t v134 = sub_22265E4A8(a1, a2, v138[0], v138[1], (uint64_t)v150);
        unsigned int v39 = v150;
        goto LABEL_76;
      case 0x14u:
      case 0x15u:
      case 0x16u:
        sub_2225D3DDC(v137, v154);
        sub_222661F64((uint64_t)v149);
        uint64_t v134 = sub_22265E4A8(a1, a2, v137[0], v137[1], (uint64_t)v149);
        unsigned int v39 = v149;
LABEL_76:
        sub_222661F54(v39);
        goto LABEL_12;
      default:
        uint64_t v81 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v148 = sub_222659834(*v81);
        uint64_t v82 = sub_2225C3C70((uint64_t)&v148);
        uint64_t v83 = sub_22265E3C0(v82);
        uint64_t v84 = sub_222654A90(v83);
        if (v84)
        {
          int v85 = sub_222655AE4(v84);
          float v86 = *(int **)sub_2225CC180((uint64_t)v154);
        }
        else
        {
          uint64_t v111 = sub_222654B7C(v83);
          if (!v111) {
            uint64_t v111 = sub_222654C5C(v83);
          }
          uint64_t v112 = sub_2225C3D04(v111);
          int v85 = sub_222655AE4(v112);
          uint64_t v121 = (uint64_t *)sub_2225CC180((uint64_t)v154);
          float v86 = (int *)sub_222654ED4(*v121, 0);
        }
        float v122 = sub_222661D90(v85, *v86);
LABEL_103:
        uint64_t v15 = sub_22265EBA0(a1, v122);
        goto LABEL_11;
    }
  }
  uint64_t v20 = v19;
  uint64_t v134 = sub_22265E20C(a1, 4);
  uint64_t v21 = sub_2225C3D04(v20);
  sub_2225C64B8(&v145, v21);
  int v135 = sub_222660F20(v145, 3);
  uint64_t v22 = sub_2225C3D04(v20);
  sub_2225C64B8(&v144, v22);
  int v136 = sub_222660F20(v144, 4);
  unsigned int v23 = sub_222654EC8(v20);
  unsigned int v143 = v23;
  unsigned int v133 = sub_222654FBC(v20);
  unsigned int v142 = v133;
  if (sub_2225CC780((uint64_t)v154) != 1) {
    goto LABEL_53;
  }
  uint64_t v24 = (uint64_t *)sub_22265E3C4(a2 + 8);
  uint64_t v148 = sub_222659834(*v24);
  uint64_t v25 = sub_2225C3C70((uint64_t)&v148);
  uint64_t v26 = sub_22265E3C0(v25);
  uint64_t v27 = sub_222654A90(v26);
  if (v27)
  {
    uint64_t v29 = v27;
    if (v135)
    {
      int v30 = sub_222655AE4(v27);
      float v31 = (int **)sub_2225CC180((uint64_t)v154);
      float v28 = sub_222661D90(v30, **v31);
    }
    if (v136)
    {
      int v32 = sub_222655AE4(v29);
      uint64_t v33 = (int **)sub_2225CC180((uint64_t)v154);
      float v28 = sub_222661DF4(v32, **v33);
    }
    if (v23)
    {
      uint64_t v34 = 0;
      float v35 = v28;
      do
      {
        if (v133)
        {
          for (uint64_t i = 0; i != v133; ++i)
          {
            uint64_t v37 = (float *)sub_22265E298(v134 + 16 * v34, i);
            if (v34 == i) {
              float v38 = v35;
            }
            else {
              float v38 = 0.0;
            }
            *uint64_t v37 = v38;
          }
        }
        ++v34;
      }
      while (v34 != v23);
    }
    goto LABEL_12;
  }
  uint64_t v40 = sub_222654C5C(v26);
  if (v40)
  {
    uint64_t v41 = v40;
    if (v23)
    {
      uint64_t v42 = 0;
      uint64_t v43 = v23;
      do
      {
        if (v133)
        {
          for (uint64_t j = 0; j != v133; ++j)
          {
            uint64_t v45 = (_DWORD *)sub_22265E298(v134 + 16 * v42, j);
            if (v42 == j) {
              int v46 = 1065353216;
            }
            else {
              int v46 = 0;
            }
            *uint64_t v45 = v46;
          }
        }
        ++v42;
      }
      while (v42 != v43);
    }
    uint64_t v47 = v41;
    uint64_t v48 = sub_2225C3D04(v41);
    LODWORD(v148) = sub_222654EC8(v41);
    uint64_t v49 = *(unsigned int *)sub_2225C2A9C(&v148, &v143);
    if (v49)
    {
      for (uint64_t k = 0; k != v49; ++k)
      {
        LODWORD(v148) = sub_222654FBC(v47);
        uint64_t v51 = *(unsigned int *)sub_2225C2A9C(&v148, &v142);
        if (v51)
        {
          for (uint64_t m = 0; m != v51; ++m)
          {
            if (v135)
            {
              int v53 = sub_222655AE4(v48);
              unsigned int v54 = (void *)sub_2225CC180((uint64_t)v154);
              int v55 = *(_DWORD *)sub_222654ED4(*v54 + 16 * k, m);
              float v2 = sub_222661D90(v53, v55);
            }
            if (v136)
            {
              int v56 = sub_222655AE4(v48);
              int v57 = (void *)sub_2225CC180((uint64_t)v154);
              int v58 = *(_DWORD *)sub_222654ED4(*v57 + 16 * k, m);
              float v2 = sub_222661DF4(v56, v58);
            }
            *(float *)sub_22265E298(v134 + 16 * k, m) = v2;
          }
        }
      }
    }
  }
  else
  {
LABEL_53:
    uint64_t v59 = (uint64_t *)sub_2225C3C70((uint64_t)v154);
    uint64_t v60 = (uint64_t *)sub_2225CC180(a2 + 8);
    uint64_t v61 = sub_222657D18(a2 + 8);
    if (v60 != (uint64_t *)v61)
    {
      uint64_t v62 = (uint64_t *)v61;
      unsigned int v63 = 0;
      uint64_t v130 = v61;
      do
      {
        uint64_t v148 = sub_222659834(*v60);
        uint64_t v64 = sub_2225C3C70((uint64_t)&v148);
        uint64_t v65 = sub_22265E3C0(v64);
        uint64_t v66 = sub_222654A90(v65);
        if (v66)
        {
          uint64_t v67 = v66;
          if (v135)
          {
            int v68 = sub_222655AE4(v66);
            unint64_t v18 = v18 & 0xFFFFFFFF00000000 | *(unsigned int *)*v59;
            float v2 = sub_222661D90(v68, v18);
          }
          if (v136)
          {
            int v69 = sub_222655AE4(v67);
            a2 = a2 & 0xFFFFFFFF00000000 | *(unsigned int *)*v59;
            float v2 = sub_222661DF4(v69, a2);
          }
          *(float *)sub_22265E298(v134 + 16 * (v63 / v133), v63 % v133) = v2;
          ++v63;
        }
        else
        {
          uint64_t v70 = sub_222654B7C(v65);
          if (v70)
          {
            uint64_t v71 = v70;
            uint64_t v72 = sub_2225C3D04(v70);
            unsigned int v73 = sub_222654EC8(v71);
            if (v73)
            {
              unint64_t v131 = v18;
              unint64_t v132 = a2;
              uint64_t v74 = 0;
              uint64_t v75 = v73;
              unsigned int v76 = v63;
              do
              {
                if (v135)
                {
                  int v77 = sub_222655AE4(v72);
                  int v78 = *(_DWORD *)sub_222654ED4(*v59, v74);
                  float v3 = sub_222661D90(v77, v78);
                }
                if (v136)
                {
                  int v79 = sub_222655AE4(v72);
                  int v80 = *(_DWORD *)sub_222654ED4(*v59, v74);
                  float v3 = sub_222661DF4(v79, v80);
                }
                *(float *)sub_22265E298(v134 + 16 * ((v63 + v74) / v133), v76 - (v63 + v74) / v133 * v133) = v3;
                ++v76;
                ++v74;
              }
              while (v75 != v74);
              v63 += v74;
              uint64_t v62 = (uint64_t *)v130;
              unint64_t v18 = v131;
              a2 = v132;
            }
          }
        }
        ++v60;
        ++v59;
      }
      while (v60 != v62);
    }
  }
LABEL_12:
  sub_2225C56C4(v154);
  return v134;
}

uint64_t *sub_222661D18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = (uint64_t *)sub_22265E20C(a1, a4);
  sub_2226655EC(v7, *(uint64_t **)(a1 + 8), a2, a3);
  return v7;
}

uint64_t sub_222661D68(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_2226557B0(&v2);
}

float sub_222661D90(int a1, int a2)
{
  float result = *(float *)&a2;
  switch(a1)
  {
    case 5:
      float result = (float)a2;
      break;
    case 6:
      float result = (float)a2;
      break;
    case 7:
      float result = 1.0;
      if ((a2 & 1) == 0) {
        float result = 0.0;
      }
      break;
    default:
      return result;
  }
  return result;
}

float sub_222661DF4(int a1, int a2)
{
  float result = *(float *)&a2;
  switch(a1)
  {
    case 5:
      float result = (float)a2;
      break;
    case 6:
      float result = (float)a2;
      break;
    case 7:
      float result = 1.0;
      if ((a2 & 1) == 0) {
        float result = 0.0;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_222661E58(int a1, uint64_t a2)
{
  switch(a1)
  {
    case 5:
    case 6:
      return a2;
    case 7:
      a2 &= 1u;
      break;
    default:
      a2 = (int)*(float *)&a2;
      break;
  }
  return a2;
}

uint64_t sub_222661EA8(int a1, uint64_t a2)
{
  switch(a1)
  {
    case 5:
    case 6:
      return a2;
    case 7:
      a2 &= 1u;
      break;
    default:
      a2 = *(float *)&a2;
      break;
  }
  return a2;
}

uint64_t sub_222661EF8(int a1, int a2)
{
  switch(a1)
  {
    case 5:
    case 6:
      BOOL v2 = a2 == 0;
      goto LABEL_4;
    case 7:
      uint64_t result = a2 & 1;
      break;
    default:
      BOOL v2 = *(float *)&a2 == 0.0;
LABEL_4:
      uint64_t result = !v2;
      break;
  }
  return result;
}

uint64_t sub_222661F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = sub_22265E160(a1, v4);
  if (!sub_22265E1FC(v5))
  {
    uint64_t v6 = sub_2225C5B40(a2);
    uint64_t v24 = sub_222659834(v6);
    uint64_t v7 = sub_2225C3C70((uint64_t)&v24);
    uint64_t v8 = sub_22265E3C0(v7);
    uint64_t v9 = sub_2225C3D04(v8) + 16;
    uint64_t v10 = (uint64_t *)sub_2225CC180(v9);
    uint64_t v11 = sub_22265594C(v9);
    if (v10 != (uint64_t *)v11)
    {
      uint64_t v12 = (uint64_t *)v11;
      unsigned int v13 = 0;
      while (1)
      {
        uint64_t v14 = *v10;
        uint64_t v15 = (uint64_t *)sub_222653754(*v10);
        uint64_t v16 = sub_222653758(v14);
        if (v15 != (uint64_t *)v16) {
          break;
        }
LABEL_8:
        if (++v10 == v12) {
          return v5;
        }
      }
      uint64_t v17 = (uint64_t *)v16;
      while (1)
      {
        uint64_t v18 = sub_222654540(*v15);
        uint64_t v20 = v19;
        uint64_t v21 = (const void *)sub_222657D64(a2);
        if (sub_2225CD4BC(v18, v20, v21, v22)) {
          return *(void *)sub_2225F84F4(v5, v13);
        }
        ++v13;
        if (++v15 == v17) {
          goto LABEL_8;
        }
      }
    }
  }
  return v5;
}

_DWORD *sub_2226620A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = sub_22265E160(a1, v4);
  if (!sub_22265E1FC(v5))
  {
    v18[0] = sub_222657D64(a2);
    v18[1] = v6;
    if (sub_2225C3D04((uint64_t)v18) == 1)
    {
      int v7 = sub_2225CC124(v18, 0);
      unsigned int v8 = sub_222675458(v7);
      uint64_t v9 = (int *)sub_222654ED4(v5, v8);
      return sub_2226621C8(a1, *v9);
    }
    else
    {
      uint64_t v10 = sub_22265E20C(a1, 3);
      uint64_t v11 = sub_2225C3C70((uint64_t)v18);
      uint64_t v12 = sub_2225C3C78(v18);
      if (v11 != v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = 0;
        do
        {
          unsigned int v15 = sub_222675458(*(char *)(v11 + v14));
          uint64_t v16 = (_DWORD *)sub_222654ED4(v5, v15);
          *(_DWORD *)sub_22265E298(v10, v14++) = *v16;
        }
        while (v11 + v14 != v13);
      }
    }
    return (_DWORD *)v10;
  }
  return (_DWORD *)v5;
}

_DWORD *sub_2226621C8(uint64_t a1, int a2)
{
  uint64_t result = (_DWORD *)sub_22265E20C(a1, 1);
  *uint64_t result = a2;
  return result;
}

unsigned int *sub_2226621F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = sub_22265E160(a1, v4);
  uint64_t v6 = sub_222608330(a2);
  int v7 = (unsigned int *)sub_22265E160(a1, v6);
  if (!sub_22265E1FC(v5))
  {
    if (sub_22265E1FC((uint64_t)v7)) {
      return v7;
    }
    uint64_t v8 = sub_2225C5B40(a2);
    uint64_t v36 = sub_222659834(v8);
    uint64_t v9 = sub_2225C3C70((uint64_t)&v36);
    if (sub_222654B7C(v9))
    {
      uint64_t v10 = sub_222608330(a2);
      uint64_t v36 = sub_222659834(v10);
      uint64_t v11 = sub_2225C3C70((uint64_t)&v36);
      uint64_t v12 = sub_222654A90(v11);
      sub_222655AE4(v12);
      uint64_t v13 = (int *)sub_222654ED4(v5, *v7);
      return sub_2226621C8(a1, *v13);
    }
    uint64_t v15 = sub_2225C5B40(a2);
    uint64_t v36 = sub_222659834(v15);
    uint64_t v16 = sub_2225C3C70((uint64_t)&v36);
    uint64_t v17 = sub_222654C5C(v16);
    if (!v17)
    {
      uint64_t v29 = sub_2225C5B40(a2);
      uint64_t v36 = sub_222659834(v29);
      uint64_t v30 = sub_22265F348((uint64_t)&v36);
      uint64_t v31 = sub_222608330(a2);
      uint64_t v36 = sub_222659834(v31);
      uint64_t v32 = sub_2225C3C70((uint64_t)&v36);
      uint64_t v33 = sub_222654A90(v32);
      sub_222655AE4(v33);
      unsigned int v34 = *v7;
      if (v34 < sub_2225F514C(v30)) {
        return *(unsigned int **)sub_2225F84F4(v5, v34);
      }
      return (unsigned int *)sub_22265F314(a1, a2);
    }
    uint64_t v18 = v17;
    uint64_t v19 = sub_22265E20C(a1, 3);
    uint64_t v20 = sub_222608330(a2);
    uint64_t v36 = sub_222659834(v20);
    uint64_t v21 = sub_2225C3C70((uint64_t)&v36);
    uint64_t v22 = sub_222654A90(v21);
    sub_222655AE4(v22);
    uint64_t v23 = *v7;
    unsigned int v24 = sub_222654FBC(v18);
    if (v24)
    {
      uint64_t v25 = 0;
      uint64_t v26 = v5 + 16 * v23;
      uint64_t v27 = v24;
      do
      {
        float v28 = (_DWORD *)sub_222654ED4(v26, v25);
        *(_DWORD *)sub_22265E298(v19, v25++) = *v28;
      }
      while (v27 != v25);
    }
    return (unsigned int *)v19;
  }
  return (unsigned int *)v5;
}

uint64_t sub_2226623FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C5B40(a2);
  uint64_t v14 = sub_222659834(v3);
  uint64_t v4 = sub_22265F348((uint64_t)&v14);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v6 = sub_2225C3C70((uint64_t)&v14);
  uint64_t result = sub_222654B7C(v6);
  if (result) {
    goto LABEL_6;
  }
  uint64_t v8 = sub_2225C3C70((uint64_t)&v14);
  uint64_t result = sub_222654C5C(v8);
  if (result) {
    goto LABEL_6;
  }
  uint64_t v9 = sub_2225C3C70((uint64_t)&v14);
  uint64_t result = sub_222655B18(v9);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v13 = sub_2225C3D04(result);
    uint64_t v4 = sub_22265F348((uint64_t)&v13);
    if (v4)
    {
LABEL_2:
      uint64_t v5 = sub_2225F514C(v4);
      return sub_22265EC38(a1, v5);
    }
    uint64_t v13 = sub_2225C3D04(v10);
    uint64_t v11 = sub_2225C3C70((uint64_t)&v13);
    uint64_t result = sub_222654B7C(v11);
    if (result || (v13 = sub_2225C3D04(v10), uint64_t v12 = sub_2225C3C70((uint64_t)&v13), (result = sub_222654C5C(v12)) != 0))
    {
LABEL_6:
      uint64_t v5 = sub_222654EC8(result);
      return sub_22265EC38(a1, v5);
    }
  }
  return result;
}

uint64_t sub_2226624E4(uint64_t a1, uint64_t a2)
{
  uint64_t v275 = *MEMORY[0x263EF8340];
  switch(sub_222657DDC(a2))
  {
    case 1u:
      sub_222664284((uint64_t)v274);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v274);
      uint64_t v5 = v274;
      goto LABEL_156;
    case 2u:
      sub_22266428C((uint64_t)v273);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v273);
      uint64_t v5 = v273;
      goto LABEL_156;
    case 3u:
      sub_222664290((uint64_t)v272);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v272);
      uint64_t v5 = v272;
      goto LABEL_156;
    case 4u:
      sub_222664294((uint64_t)v271);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v271);
      uint64_t v5 = v271;
      goto LABEL_156;
    case 5u:
      sub_222664298((uint64_t)v270);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v270);
      uint64_t v5 = v270;
      goto LABEL_156;
    case 6u:
      sub_22266429C((uint64_t)v269);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v269);
      uint64_t v5 = v269;
      goto LABEL_156;
    case 7u:
      sub_2226642A0((uint64_t)v268);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v268);
      uint64_t v5 = v268;
      goto LABEL_156;
    case 8u:
      sub_2226643AC((uint64_t)v267);
      BOOL v2 = (float *)sub_2226642A4(a1, a2);
      uint64_t v6 = v267;
      goto LABEL_227;
    case 9u:
      sub_2226643B0((uint64_t)v266);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v266);
      uint64_t v5 = v266;
      goto LABEL_156;
    case 0xAu:
      sub_2226643B4((uint64_t)v265);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v265);
      uint64_t v5 = v265;
      goto LABEL_156;
    case 0xBu:
      sub_2226643B8((uint64_t)v264);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v264);
      uint64_t v5 = v264;
      goto LABEL_156;
    case 0xCu:
      sub_2226643BC((uint64_t)v263);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v263);
      uint64_t v5 = v263;
      goto LABEL_156;
    case 0xDu:
      sub_2226643C0((uint64_t)v262);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v262);
      uint64_t v5 = v262;
      goto LABEL_156;
    case 0xEu:
      sub_2226643C4((uint64_t)v261);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v261);
      uint64_t v5 = v261;
      goto LABEL_156;
    case 0xFu:
      sub_2226643C8((uint64_t)v260);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v260);
      uint64_t v5 = v260;
      goto LABEL_156;
    case 0x10u:
      sub_2226643CC((uint64_t)v259);
      BOOL v2 = (float *)sub_2226642A4(a1, a2);
      uint64_t v6 = v259;
      goto LABEL_227;
    case 0x11u:
      sub_2226643D0((uint64_t)v258);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v258);
      uint64_t v5 = v258;
      goto LABEL_156;
    case 0x12u:
      sub_2226643D4((uint64_t)v257);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v257);
      uint64_t v5 = v257;
      goto LABEL_156;
    case 0x13u:
      sub_2226643D8((uint64_t)v256);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v256);
      uint64_t v5 = v256;
      goto LABEL_156;
    case 0x14u:
      sub_2226643DC((uint64_t)v255);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v255);
      uint64_t v5 = v255;
      goto LABEL_156;
    case 0x15u:
      sub_2226643E0((uint64_t)v254);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v254);
      uint64_t v5 = v254;
      goto LABEL_156;
    case 0x16u:
      sub_2226643E4((uint64_t)v253);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v253);
      uint64_t v5 = v253;
      goto LABEL_156;
    case 0x17u:
      uint64_t v7 = sub_2225C5B40(a2);
      if (sub_2226643E8(v7))
      {
        sub_222664430((uint64_t)v252);
        BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v252);
        uint64_t v5 = v252;
      }
      else
      {
        sub_222664434((uint64_t)v251);
        BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v251);
        uint64_t v5 = v251;
      }
      goto LABEL_156;
    case 0x18u:
      uint64_t v8 = sub_2225C5B40(a2);
      if (sub_2226643E8(v8))
      {
        sub_222664438((uint64_t)v250);
        BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v250);
        uint64_t v5 = v250;
      }
      else
      {
        sub_22266443C((uint64_t)v249);
        BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v249);
        uint64_t v5 = v249;
      }
      goto LABEL_156;
    case 0x19u:
      sub_222664440((uint64_t)v248);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v248);
      uint64_t v5 = v248;
      goto LABEL_156;
    case 0x1Au:
      sub_222664444((uint64_t)v247);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v247);
      uint64_t v5 = v247;
      goto LABEL_156;
    case 0x1Bu:
      sub_222664448((uint64_t)v246);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v246);
      uint64_t v5 = v246;
      goto LABEL_156;
    case 0x1Cu:
      sub_22266444C((uint64_t)v245);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v245);
      uint64_t v5 = v245;
      goto LABEL_156;
    case 0x1Du:
      sub_222664450((uint64_t)v244);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v244);
      uint64_t v5 = v244;
      goto LABEL_156;
    case 0x1Eu:
      sub_222664454((uint64_t)v243);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v243);
      uint64_t v5 = v243;
      goto LABEL_156;
    case 0x1Fu:
      sub_222664458((uint64_t)v242);
      BOOL v2 = (float *)sub_2226642A4(a1, a2);
      uint64_t v6 = v242;
      goto LABEL_227;
    case 0x20u:
      uint64_t v9 = *(void *)sub_222657D6C(a2 + 8, 1u);
      return sub_22265F314(a1, v9);
    case 0x21u:
      uint64_t v11 = sub_2225C5B40(a2);
      if (sub_2226643E8(v11))
      {
        sub_22266445C((uint64_t)v241);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v241;
      }
      else
      {
        uint64_t v135 = sub_2225C5B40(a2);
        if (sub_222664460(v135))
        {
          sub_2226644A8((uint64_t)v240);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v240;
        }
        else
        {
          sub_2226644AC((uint64_t)v239);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v239;
        }
      }
      goto LABEL_227;
    case 0x22u:
      uint64_t v12 = sub_2225C5B40(a2);
      if (sub_2226643E8(v12))
      {
        sub_2226644B0((uint64_t)v238);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v238;
      }
      else
      {
        uint64_t v136 = sub_2225C5B40(a2);
        if (sub_222664460(v136))
        {
          sub_2226644B4((uint64_t)v237);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v237;
        }
        else
        {
          sub_2226644B8((uint64_t)v236);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v236;
        }
      }
      goto LABEL_227;
    case 0x23u:
      uint64_t v13 = sub_2225C5B40(a2);
      if (sub_2226643E8(v13))
      {
        sub_22266487C((uint64_t)v235);
        BOOL v2 = (float *)sub_2226644BC(a1, a2, (uint64_t)v235);
        uint64_t v14 = v235;
      }
      else
      {
        uint64_t v137 = sub_2225C5B40(a2);
        if (sub_222664460(v137))
        {
          sub_222664884((uint64_t)v234);
          BOOL v2 = (float *)sub_2226644BC(a1, a2, (uint64_t)v234);
          uint64_t v14 = v234;
        }
        else
        {
          sub_222664888((uint64_t)v233);
          BOOL v2 = (float *)sub_2226644BC(a1, a2, (uint64_t)v233);
          uint64_t v14 = v233;
        }
      }
      goto LABEL_198;
    case 0x24u:
      sub_22266488C((uint64_t)v232);
      BOOL v2 = (float *)sub_2226644BC(a1, a2, (uint64_t)v232);
      uint64_t v14 = v232;
      goto LABEL_198;
    case 0x25u:
      uint64_t v15 = (void *)sub_222657D6C(a2 + 8, 0);
      uint64_t v16 = sub_22265E160(a1, *v15);
      uint64_t v17 = (void *)sub_222657D6C(a2 + 8, 1u);
      uint64_t v18 = sub_22265E160(a1, *v17);
      uint64_t v19 = (void *)sub_222657D6C(a2 + 8, 2u);
      uint64_t v20 = (unsigned char *)sub_22265E160(a1, *v19);
      BOOL v2 = (float *)v16;
      if (!sub_22265E1FC(v16))
      {
        BOOL v2 = (float *)v18;
        if (!sub_22265E1FC(v18))
        {
          if (sub_22265E1FC((uint64_t)v20))
          {
            return (uint64_t)v20;
          }
          else
          {
            v195[0] = sub_2225C5B40(a2);
            uint64_t v179 = sub_2225C3C70((uint64_t)v195);
            if (sub_22265E240(v179))
            {
              if (*v20) {
                return v18;
              }
              else {
                return v16;
              }
            }
            else
            {
              uint64_t v183 = sub_2225C3C70((uint64_t)v195);
              uint64_t v184 = sub_22265E3C0(v183);
              BOOL v2 = (float *)sub_22265E20C(a1, 3);
              unsigned int v185 = sub_222654EC8(v184);
              if (v185)
              {
                uint64_t v186 = 0;
                uint64_t v187 = v185;
                do
                {
                  if (*(unsigned char *)sub_222654ED4((uint64_t)v20, v186)) {
                    uint64_t v188 = v18;
                  }
                  else {
                    uint64_t v188 = v16;
                  }
                  int v189 = (_DWORD *)sub_222654ED4(v188, v186);
                  *(_DWORD *)sub_22265E298((uint64_t)v2, v186++) = *v189;
                }
                while (v187 != v186);
              }
            }
          }
        }
      }
      return (uint64_t)v2;
    case 0x26u:
      sub_222664890((uint64_t)v231);
      BOOL v2 = (float *)sub_2226642A4(a1, a2);
      uint64_t v6 = v231;
      goto LABEL_227;
    case 0x27u:
      sub_222664894((uint64_t)v230);
      BOOL v2 = (float *)sub_2226644BC(a1, a2, (uint64_t)v230);
      uint64_t v14 = v230;
LABEL_198:
      sub_222664880(v14);
      return (uint64_t)v2;
    case 0x28u:
      sub_222664898((uint64_t)v229);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v229);
      uint64_t v5 = v229;
      goto LABEL_156;
    case 0x29u:
      sub_22266489C((uint64_t)v228);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v228);
      uint64_t v5 = v228;
      goto LABEL_156;
    case 0x2Au:
    case 0x2Bu:
      sub_2226648A0((uint64_t)v227);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v227);
      uint64_t v5 = v227;
      goto LABEL_156;
    case 0x2Cu:
    case 0x2Du:
      sub_2226648A4((uint64_t)v226);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v226);
      uint64_t v5 = v226;
      goto LABEL_156;
    case 0x2Eu:
      uint64_t v21 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v21);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      for (uint64_t i = 0; i != 2; ++i)
      {
        uint64_t v23 = (float *)sub_222654ED4((uint64_t)v2, i);
        *((_WORD *)v195 + i) = llroundf(sub_2226648A8(*v23, -1.0, 1.0) * 32767.0);
      }
      goto LABEL_66;
    case 0x2Fu:
      unsigned int v24 = (unsigned int *)sub_22265E20C(a1, 3);
      uint64_t v25 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v25);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v26 = 0;
      *(float *)int v195 = *v2;
      do
      {
        float v27 = sub_2226648A8((float)*((__int16 *)v195 + v26) / 32767.0, -1.0, 1.0);
        *(float *)sub_22265E298((uint64_t)v24, v26++) = v27;
      }
      while (v26 != 2);
      return (uint64_t)v24;
    case 0x30u:
      float v28 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v28);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      for (uint64_t j = 0; j != 2; ++j)
      {
        uint64_t v30 = (float *)sub_222654ED4((uint64_t)v2, j);
        *((_WORD *)v195 + j) = llroundf(sub_2226648A8(*v30, 0.0, 1.0) * 65535.0);
      }
LABEL_66:
      uint64_t v31 = LODWORD(v195[0]);
      return sub_22265EC38(a1, v31);
    case 0x31u:
      unsigned int v24 = (unsigned int *)sub_22265E20C(a1, 3);
      uint64_t v32 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v32);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v34 = 0;
      *(float *)int v195 = *v2;
      do
      {
        LOWORD(v33) = *((_WORD *)v195 + v34);
        *(float *)sub_22265E298((uint64_t)v24, v34++) = (float)v33 / 65535.0;
      }
      while (v34 != 2);
      return (uint64_t)v24;
    case 0x32u:
      float v35 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v35);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      for (uint64_t k = 0; k != 2; ++k)
      {
        uint64_t v37 = (float *)sub_222654ED4((uint64_t)v2, k);
        sub_2225C4C0C(v195, *v37);
        char v194 = 0;
        sub_2225C303C((uint64_t)v195, (uint64_t)&unk_2226C9E70, 0, &v194);
        sub_2225C2EA4((uint64_t)v195, (uint64_t)v193);
        *(_WORD *)&v197[2 * k - 4] = sub_2225C54BC(v193);
        sub_2225C2F10(v193);
        sub_2225C2AA4(v195);
      }
      uint64_t v31 = LODWORD(v196);
      return sub_22265EC38(a1, v31);
    case 0x33u:
      unsigned int v24 = (unsigned int *)sub_22265E20C(a1, 3);
      unsigned int v39 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v39);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v40 = 0;
      float v196 = *v2;
      do
      {
        sub_2225C3A6C(v193, 16, *(unsigned __int16 *)&v197[2 * v40 - 4], 0);
        sub_2225C464C(v195, &unk_2226C9E70, v193);
        sub_2225C2F10(v193);
        LOBYTE(v193[0]) = 0;
        sub_2225C303C((uint64_t)v195, (uint64_t)&unk_2226C9E78, 0, v193);
        float v41 = sub_2225C42E4((uint64_t)v195);
        *(float *)sub_22265E298((uint64_t)v24, v40) = v41;
        sub_2225C2AA4(v195);
        ++v40;
      }
      while (v40 != 2);
      return (uint64_t)v24;
    case 0x34u:
      uint64_t v42 = a2 + 8;
      uint64_t v43 = (void *)sub_22265E3C4(v42);
      BOOL v2 = (float *)sub_22265E160(a1, *v43);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v44 = (uint64_t *)sub_22265E3C4(v42);
      uint64_t v45 = sub_222659834(*v44);
      float v46 = sub_2226648E0(v45, v2);
      goto LABEL_89;
    case 0x35u:
      uint64_t v47 = a2 + 8;
      uint64_t v48 = (void *)sub_22265E3C4(v47);
      BOOL v2 = (float *)sub_22265E160(a1, *v48);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v49 = (void *)sub_222657D6C(v47, 1u);
      unsigned int v24 = (unsigned int *)sub_22265E160(a1, *v49);
      if (sub_22265E1FC((uint64_t)v24)) {
        return (uint64_t)v24;
      }
      uint64_t v50 = (uint64_t *)sub_22265E3C4(v47);
      uint64_t v51 = sub_222659834(*v50);
      sub_222664A94((uint64_t)v225);
      BOOL v2 = (float *)sub_222664900(a1, v51, (uint64_t)v2, v24, (uint64_t)v225);
      sub_22265E3CC(v225);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v52 = (uint64_t *)sub_2225CC180(v47);
      uint64_t v53 = sub_222659834(*v52);
      float v54 = sub_2226648E0(v53, v2);
      return sub_22265EBA0(a1, v54);
    case 0x36u:
      uint64_t v55 = a2 + 8;
      int v56 = (void *)sub_22265E3C4(v55);
      BOOL v2 = (float *)sub_22265E160(a1, *v56);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      int v57 = (void *)sub_222657D6C(v55, 1u);
      unsigned int v24 = (unsigned int *)sub_22265E160(a1, *v57);
      if (sub_22265E1FC((uint64_t)v24)) {
        return (uint64_t)v24;
      }
      int v58 = (uint64_t *)sub_22265E3C4(v55);
      uint64_t v59 = sub_222659834(*v58);
      float v46 = sub_222664A98(v59, v2, (float *)v24);
LABEL_89:
      return sub_22265EBA0(a1, v46);
    case 0x37u:
      uint64_t v60 = a2 + 8;
      uint64_t v61 = (void *)sub_22265E3C4(v60);
      BOOL v2 = (float *)sub_22265E160(a1, *v61);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v62 = (void *)sub_222657D6C(v60, 1u);
      uint64_t v63 = sub_22265E160(a1, *v62);
      if (sub_22265E1FC(v63)) {
        return v63;
      }
      uint64_t v86 = sub_22265E20C(a1, 3);
      uint64_t v151 = 0;
      unint64_t v152 = 2;
      do
      {
        uint64_t v153 = v151 + 1;
        if (v151 == 2) {
          uint64_t v154 = 0;
        }
        else {
          uint64_t v154 = v151 + 1;
        }
        float v155 = *(float *)sub_222654ED4((uint64_t)v2, v154);
        float v156 = *(float *)sub_222654ED4(v63, v152 % 3);
        float v157 = *(float *)sub_222654ED4(v63, v154);
        float v158 = (float)(v155 * v156) - (float)(v157 * *(float *)sub_222654ED4((uint64_t)v2, v152 % 3));
        *(float *)sub_22265E298(v86, v151) = v158;
        ++v152;
        ++v151;
      }
      while (v153 != 3);
      return v86;
    case 0x38u:
      uint64_t v64 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v64);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v65 = sub_2225C5B40(a2);
      LODWORD(v195[0]) = sub_2226648E0(v65, v2);
      uint64_t v66 = sub_2225C5B40(a2);
      sub_222664C54((uint64_t)v224, (uint64_t)v195);
      BOOL v2 = (float *)sub_222664B5C(a1, v66, (uint64_t)v2, (uint64_t)v224);
      uint64_t v5 = v224;
      goto LABEL_156;
    case 0x39u:
      uint64_t v67 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v67);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      int v68 = (void *)sub_222657D6C(a2 + 8, 1u);
      int v69 = (float *)sub_22265E160(a1, *v68);
      if (sub_22265E1FC((uint64_t)v69)) {
        return (uint64_t)v69;
      }
      uint64_t v70 = (void *)sub_222657D6C(a2 + 8, 2u);
      unsigned int v24 = (unsigned int *)sub_22265E160(a1, *v70);
      if (!sub_22265E1FC((uint64_t)v24))
      {
        uint64_t v71 = sub_2225C5B40(a2);
        LOBYTE(v195[0]) = sub_222664A98(v71, (float *)v24, v69) < 0.0;
        uint64_t v72 = sub_2225C5B40(a2);
        sub_222664C58((uint64_t)v223, (uint64_t)v195);
        BOOL v2 = (float *)sub_222664B5C(a1, v72, (uint64_t)v2, (uint64_t)v223);
        uint64_t v5 = v223;
        goto LABEL_156;
      }
      return (uint64_t)v24;
    case 0x3Au:
      unsigned int v73 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v73);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v74 = (void *)sub_222657D6C(a2 + 8, 1u);
      unsigned int v24 = (unsigned int *)sub_22265E160(a1, *v74);
      if (sub_22265E1FC((uint64_t)v24)) {
        return (uint64_t)v24;
      }
      uint64_t v75 = sub_2225C5B40(a2);
      float v76 = sub_222664A98(v75, (float *)v24, v2);
      *(float *)int v195 = v76 + v76;
      sub_222664C5C((uint64_t)v222, (uint64_t)v195);
      BOOL v2 = (float *)sub_2226642A4(a1, a2);
      uint64_t v6 = v222;
      goto LABEL_227;
    case 0x3Bu:
      int v77 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v77);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      int v78 = (void *)sub_222657D6C(a2 + 8, 1u);
      unsigned int v24 = (unsigned int *)sub_22265E160(a1, *v78);
      if (sub_22265E1FC((uint64_t)v24)) {
        return (uint64_t)v24;
      }
      int v79 = (void *)sub_222657D6C(a2 + 8, 2u);
      int v69 = (float *)sub_22265E160(a1, *v79);
      if (sub_22265E1FC((uint64_t)v69)) {
        return (uint64_t)v69;
      }
      *(float *)int v195 = *v69;
      uint64_t v180 = sub_2225C5B40(a2);
      v193[0] = sub_222664A98(v180, (float *)v24, v2);
      float v181 = 1.0 - (float)(*(float *)v195 * *(float *)v195) * (1.0 - (float)(v193[0] * v193[0]));
      float v196 = v181;
      uint64_t v182 = sub_2225C5B40(a2);
      if (v181 >= 0.0)
      {
        v192[0] = &v196;
        v192[1] = v195;
        v192[2] = v193;
        sub_222664C64(v220, v192);
        BOOL v2 = (float *)sub_222664900(a1, v182, (uint64_t)v2, v24, (uint64_t)v220);
        uint64_t v6 = v220;
LABEL_227:
        sub_22265E3CC(v6);
      }
      else
      {
        sub_222664C60((uint64_t)v221);
        BOOL v2 = (float *)sub_222664B5C(a1, v182, (uint64_t)v2, (uint64_t)v221);
        uint64_t v5 = v221;
LABEL_156:
        sub_222664288(v5);
      }
      return (uint64_t)v2;
    case 0x3Cu:
      v195[0] = sub_2225C5B40(a2);
      uint64_t v80 = sub_2225C3C70((uint64_t)v195);
      uint64_t v81 = sub_22265E3C0(v80);
      uint64_t v82 = sub_2225C3D04(v81);
      sub_2225C64B8(&v191, v82);
      if (sub_222660F20(v191, 3))
      {
        sub_222664C68((uint64_t)v219);
        BOOL v2 = (float *)sub_22265E2E4(a1, a2);
        uint64_t v6 = v219;
      }
      else
      {
        uint64_t v138 = sub_2225C3D04(v81);
        sub_2225C64B8(&v190, v138);
        sub_222660F20(v190, 4);
        sub_222664C6C((uint64_t)v218);
        BOOL v2 = (float *)sub_22265E2E4(a1, a2);
        uint64_t v6 = v218;
      }
      goto LABEL_227;
    case 0x3Du:
      uint64_t v83 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v83);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v84 = (void *)sub_222657D6C(a2 + 8, 1u);
      unsigned int v24 = (unsigned int *)sub_22265E160(a1, *v84);
      if (sub_22265E1FC((uint64_t)v24)) {
        return (uint64_t)v24;
      }
      uint64_t v86 = sub_22265E20C(a1, 4);
      v195[0] = sub_2225C5B40(a2);
      uint64_t v159 = sub_2225C3C70((uint64_t)v195);
      uint64_t v160 = sub_22265E3C0(v159);
      unsigned int v161 = sub_222654EC8(v160);
      if (v161)
      {
        uint64_t v162 = 0;
        uint64_t v163 = v161;
        do
        {
          unsigned int v164 = sub_222654FBC(v160);
          if (v164)
          {
            uint64_t v165 = 0;
            uint64_t v166 = v164;
            do
            {
              float v167 = *(float *)sub_222654ED4((uint64_t)v2, v165);
              float v168 = v167 * *(float *)sub_222654ED4((uint64_t)v24, v162);
              *(float *)sub_22265E298(v86 + 16 * v162, v165++) = v168;
            }
            while (v166 != v165);
          }
          ++v162;
        }
        while (v162 != v163);
      }
      return v86;
    case 0x3Eu:
      int v85 = (void *)sub_22265E3C4(a2 + 8);
      BOOL v2 = (float *)sub_22265E160(a1, *v85);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v86 = sub_22265E20C(a1, 4);
      v195[0] = sub_2225C5B40(a2);
      uint64_t v87 = sub_2225C3C70((uint64_t)v195);
      uint64_t v88 = sub_22265E3C0(v87);
      unsigned int v89 = sub_222654EC8(v88);
      if (v89)
      {
        uint64_t v90 = 0;
        uint64_t v91 = v89;
        do
        {
          unsigned int v92 = sub_222654FBC(v88);
          if (v92)
          {
            uint64_t v93 = 0;
            uint64_t v94 = (uint64_t)v2;
            uint64_t v95 = v92;
            do
            {
              int v96 = *(_DWORD *)sub_222654ED4(v94, v90);
              *(_DWORD *)sub_22265E298(v86 + 16 * v90, v93++) = v96;
              v94 += 16;
            }
            while (v95 != v93);
          }
          ++v90;
        }
        while (v90 != v91);
      }
      return v86;
    case 0x3Fu:
      uint64_t v97 = a2 + 8;
      uint64_t v98 = (void *)sub_22265E3C4(v97);
      BOOL v2 = (float *)sub_22265E160(a1, *v98);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v99 = (uint64_t *)sub_22265E3C4(v97);
      v195[0] = sub_222659834(*v99);
      uint64_t v100 = sub_2225C3C70((uint64_t)v195);
      uint64_t v101 = sub_22265E3C0(v100);
      int v102 = sub_222654EC8(v101);
      uint64_t v103 = (uint64_t)(v2 + 4);
      if (v102 == 2)
      {
        float v54 = sub_222664C70((uint64_t)v2, v103, 0);
      }
      else
      {
        uint64_t v104 = (uint64_t)(v2 + 8);
        if (v102 == 3) {
          float v54 = sub_222664CFC((uint64_t)v2, v103, v104, 0);
        }
        else {
          float v54 = sub_222664DBC((uint64_t)v2, v103, v104, (uint64_t)(v2 + 12));
        }
      }
      return sub_22265EBA0(a1, v54);
    case 0x40u:
      float v105 = (void *)sub_22265E3C4(a2 + 8);
      uint64_t v106 = sub_22265E160(a1, *v105);
      if (sub_22265E1FC(v106)) {
        return v106;
      }
      else {
        return 0;
      }
    case 0x41u:
      uint64_t v107 = (uint64_t *)sub_22265E3C4(a2 + 8);
      uint64_t v108 = sub_222659834(*v107);
      if (sub_2226643E8(v108))
      {
        sub_222664EA8((uint64_t)v217);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v217;
      }
      else
      {
        uint64_t v139 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v140 = sub_222659834(*v139);
        if (sub_222664460(v140))
        {
          sub_222664EAC((uint64_t)v216);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v216;
        }
        else
        {
          sub_222664EB0((uint64_t)v215);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v215;
        }
      }
      goto LABEL_227;
    case 0x42u:
      int v109 = (uint64_t *)sub_22265E3C4(a2 + 8);
      uint64_t v110 = sub_222659834(*v109);
      if (sub_2226643E8(v110))
      {
        sub_222664EB4((uint64_t)v214);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v214;
      }
      else
      {
        unsigned int v141 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v142 = sub_222659834(*v141);
        if (sub_222664460(v142))
        {
          sub_222664EB8((uint64_t)v213);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v213;
        }
        else
        {
          sub_222664EBC((uint64_t)v212);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v212;
        }
      }
      goto LABEL_227;
    case 0x43u:
      uint64_t v111 = (uint64_t *)sub_22265E3C4(a2 + 8);
      uint64_t v112 = sub_222659834(*v111);
      if (sub_2226643E8(v112))
      {
        sub_222664EC0((uint64_t)v211);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v211;
      }
      else
      {
        unsigned int v143 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v144 = sub_222659834(*v143);
        if (sub_222664460(v144))
        {
          sub_222664EC4((uint64_t)v210);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v210;
        }
        else
        {
          sub_222664EC8((uint64_t)v209);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v209;
        }
      }
      goto LABEL_227;
    case 0x44u:
      uint64_t v113 = (uint64_t *)sub_22265E3C4(a2 + 8);
      uint64_t v114 = sub_222659834(*v113);
      if (sub_2226643E8(v114))
      {
        sub_222664ECC((uint64_t)v208);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v208;
      }
      else
      {
        uint64_t v145 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v146 = sub_222659834(*v145);
        if (sub_222664460(v146))
        {
          sub_222664ED0((uint64_t)v207);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v207;
        }
        else
        {
          sub_222664ED4((uint64_t)v206);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v206;
        }
      }
      goto LABEL_227;
    case 0x45u:
      uint64_t v115 = (uint64_t *)sub_22265E3C4(a2 + 8);
      uint64_t v116 = sub_222659834(*v115);
      if (sub_2226643E8(v116))
      {
        sub_222664ED8((uint64_t)v205);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v205;
      }
      else
      {
        uint64_t v147 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v148 = sub_222659834(*v147);
        if (sub_222664460(v148))
        {
          sub_222664EDC((uint64_t)v204);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v204;
        }
        else
        {
          uint64_t v175 = (uint64_t *)sub_22265E3C4(a2 + 8);
          uint64_t v176 = sub_222659834(*v175);
          if (sub_222664EE0(v176))
          {
            sub_222664F28((uint64_t)v203);
            BOOL v2 = (float *)sub_2226642A4(a1, a2);
            uint64_t v6 = v203;
          }
          else
          {
            sub_222664F2C((uint64_t)v202);
            BOOL v2 = (float *)sub_2226642A4(a1, a2);
            uint64_t v6 = v202;
          }
        }
      }
      goto LABEL_227;
    case 0x46u:
      uint64_t v117 = (uint64_t *)sub_22265E3C4(a2 + 8);
      uint64_t v118 = sub_222659834(*v117);
      if (sub_2226643E8(v118))
      {
        sub_222664F30((uint64_t)v201);
        BOOL v2 = (float *)sub_2226642A4(a1, a2);
        uint64_t v6 = v201;
      }
      else
      {
        uint64_t v149 = (uint64_t *)sub_22265E3C4(a2 + 8);
        uint64_t v150 = sub_222659834(*v149);
        if (sub_222664460(v150))
        {
          sub_222664F34((uint64_t)v200);
          BOOL v2 = (float *)sub_2226642A4(a1, a2);
          uint64_t v6 = v200;
        }
        else
        {
          uint64_t v177 = (uint64_t *)sub_22265E3C4(a2 + 8);
          uint64_t v178 = sub_222659834(*v177);
          if (sub_222664EE0(v178))
          {
            sub_222664F38((uint64_t)v199);
            BOOL v2 = (float *)sub_2226642A4(a1, a2);
            uint64_t v6 = v199;
          }
          else
          {
            sub_222664F3C((uint64_t)v198);
            BOOL v2 = (float *)sub_2226642A4(a1, a2);
            uint64_t v6 = v198;
          }
        }
      }
      goto LABEL_227;
    case 0x47u:
      uint64_t v119 = a2 + 8;
      uint64_t v120 = (void *)sub_22265E3C4(v119);
      BOOL v2 = (float *)sub_22265E160(a1, *v120);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      uint64_t v121 = (uint64_t *)sub_22265E3C4(v119);
      v195[0] = sub_222659834(*v121);
      uint64_t v122 = sub_2225C3C70((uint64_t)v195);
      if (sub_22265E240(v122)) {
        goto LABEL_149;
      }
      uint64_t v123 = (uint64_t *)sub_22265E3C4(v119);
      v195[0] = sub_222659834(*v123);
      uint64_t v124 = sub_2225C3C70((uint64_t)v195);
      uint64_t v125 = sub_22265E3C0(v124);
      unsigned int v126 = sub_222654EC8(v125);
      if (!v126) {
        goto LABEL_146;
      }
      uint64_t v127 = 0;
      uint64_t v128 = v126;
      while (!*(unsigned char *)sub_222654ED4((uint64_t)v2, v127))
      {
        if (v128 == ++v127) {
          goto LABEL_146;
        }
      }
      goto LABEL_193;
    case 0x48u:
      uint64_t v131 = a2 + 8;
      unint64_t v132 = (void *)sub_22265E3C4(v131);
      BOOL v2 = (float *)sub_22265E160(a1, *v132);
      if (sub_22265E1FC((uint64_t)v2)) {
        return (uint64_t)v2;
      }
      unsigned int v133 = (uint64_t *)sub_22265E3C4(v131);
      v195[0] = sub_222659834(*v133);
      uint64_t v134 = sub_2225C3C70((uint64_t)v195);
      if (sub_22265E240(v134))
      {
LABEL_149:
        uint64_t v130 = *(unsigned __int8 *)v2;
        uint64_t v129 = a1;
        return sub_22265ED10(v129, v130);
      }
      uint64_t v169 = (uint64_t *)sub_22265E3C4(v131);
      v195[0] = sub_222659834(*v169);
      uint64_t v170 = sub_2225C3C70((uint64_t)v195);
      uint64_t v171 = sub_22265E3C0(v170);
      unsigned int v172 = sub_222654EC8(v171);
      if (!v172) {
        goto LABEL_193;
      }
      uint64_t v173 = 0;
      uint64_t v174 = v172;
      break;
    case 0x49u:
      sub_222664F40((uint64_t)v197);
      BOOL v2 = (float *)sub_2226641C4(a1, a2, (uint64_t)v197);
      uint64_t v5 = v197;
      goto LABEL_156;
    case 0x4Au:
      return sub_222664F44(a1);
    default:
      return (uint64_t)v2;
  }
  do
  {
    if (!*(unsigned char *)sub_222654ED4((uint64_t)v2, v173))
    {
LABEL_146:
      uint64_t v129 = a1;
      uint64_t v130 = 0;
      return sub_22265ED10(v129, v130);
    }
    ++v173;
  }
  while (v174 != v173);
LABEL_193:
  uint64_t v129 = a1;
  uint64_t v130 = 1;
  return sub_22265ED10(v129, v130);
}

_DWORD *sub_2226641C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v6 = (void *)sub_22265E3C4(a2 + 8);
  uint64_t v7 = (_DWORD *)sub_22265E160(a1, *v6);
  if (!sub_22265E1FC((uint64_t)v7))
  {
    uint64_t v8 = sub_2225C5B40(a2);
    sub_22266568C(v10, a3);
    uint64_t v7 = sub_222664B5C(a1, v8, (uint64_t)v7, (uint64_t)v10);
    sub_222664288(v10);
  }
  return v7;
}

unsigned int *sub_2226642A4(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v4 = a2 + 8;
  uint64_t v5 = (void *)sub_222657D6C(a2 + 8, 0);
  uint64_t v6 = (_DWORD *)sub_22265E160(a1, *v5);
  uint64_t v7 = (void *)sub_222657D6C(v4, 1u);
  uint64_t v8 = (unsigned int *)sub_22265E160(a1, *v7);
  if (!sub_22265E1FC((uint64_t)v6))
  {
    if (sub_22265E1FC((uint64_t)v8))
    {
      return v8;
    }
    else
    {
      uint64_t v9 = sub_2225C5B40(a2);
      sub_22265E3C8(v11);
      uint64_t v6 = sub_222664900(a1, v9, (uint64_t)v6, v8, (uint64_t)v11);
      sub_22265E3CC(v11);
    }
  }
  return v6;
}

uint64_t sub_2226643E8(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v5);
  uint64_t v2 = sub_22265E3C0(v1);
  unsigned int v3 = sub_222655AE4(v2);
  return (v3 < 0x11) & (0x1C020u >> v3);
}

uint64_t sub_222664460(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v5);
  uint64_t v2 = sub_22265E3C0(v1);
  unsigned int v3 = sub_222655AE4(v2);
  return (v3 < 0x14) & (0xE0040u >> v3);
}

unsigned int *sub_2226644BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = sub_2225C5B40(a2);
  uint64_t v8 = a2 + 8;
  uint64_t v9 = (void *)sub_222657D6C(a2 + 8, 0);
  uint64_t v10 = (unsigned int *)sub_22265E160(a1, *v9);
  uint64_t v11 = (void *)sub_222657D6C(v8, 1u);
  uint64_t v12 = sub_22265E160(a1, *v11);
  uint64_t v13 = (void *)sub_222657D6C(v8, 2u);
  uint64_t v14 = (unsigned int *)sub_22265E160(a1, *v13);
  if (!sub_22265E1FC((uint64_t)v10))
  {
    if (sub_22265E1FC(v12)) {
      return (unsigned int *)v12;
    }
    if (sub_22265E1FC((uint64_t)v14)) {
      return v14;
    }
    uint64_t v15 = sub_2225C3C70((uint64_t)&v41);
    if (sub_22265E240(v15))
    {
      int v16 = sub_22266573C(a3);
      return sub_2226621C8(a1, v16);
    }
    uint64_t v17 = sub_2225C3C70((uint64_t)&v41);
    uint64_t v18 = sub_22265E3C0(v17);
    uint64_t v19 = sub_22265E20C(a1, 3);
    if (*((unsigned char *)v10 + 64) == 1)
    {
      unsigned int v20 = sub_222654EC8(v18);
      if (v20)
      {
        uint64_t v21 = 0;
        float v35 = (unsigned int *)v12;
        uint64_t v38 = v20;
        uint64_t v12 = v19;
        do
        {
          unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v10;
          unint64_t v3 = v3 & 0xFFFFFFFF00000000 | *v35;
          sub_222654ED4((uint64_t)v14, v21);
          int v22 = sub_22266573C(a3);
          *(_DWORD *)sub_22265E298(v19, v21++) = v22;
        }
        while (v38 != v21);
        return (unsigned int *)v12;
      }
    }
    else
    {
      if (*(unsigned char *)(v12 + 64) != 1)
      {
        uint64_t v27 = a3;
        int v28 = *((unsigned __int8 *)v14 + 64);
        unsigned int v29 = sub_222654EC8(v18);
        if (v28 == 1)
        {
          if (!v29) {
            return (unsigned int *)v19;
          }
          uint64_t v30 = 0;
          uint64_t v36 = v29;
          uint64_t v40 = v19;
          do
          {
            sub_222654ED4((uint64_t)v10, v30);
            sub_222654ED4(v12, v30);
            uint64_t v19 = v19 & 0xFFFFFFFF00000000 | *v14;
            int v31 = sub_22266573C(v27);
            *(_DWORD *)sub_22265E298(v40, v30++) = v31;
          }
          while (v36 != v30);
        }
        else
        {
          if (!v29) {
            return (unsigned int *)v19;
          }
          uint64_t v32 = 0;
          uint64_t v37 = v29;
          uint64_t v40 = v19;
          do
          {
            sub_222654ED4((uint64_t)v10, v32);
            sub_222654ED4(v12, v32);
            sub_222654ED4((uint64_t)v14, v32);
            int v33 = sub_22266573C(v27);
            *(_DWORD *)sub_22265E298(v19, v32++) = v33;
          }
          while (v37 != v32);
        }
        return (unsigned int *)v40;
      }
      unsigned int v23 = sub_222654EC8(v18);
      if (v23)
      {
        uint64_t v24 = 0;
        uint64_t v39 = v23;
        uint64_t v25 = (unsigned int *)v12;
        uint64_t v12 = v19;
        do
        {
          sub_222654ED4((uint64_t)v10, v24);
          unint64_t v3 = v3 & 0xFFFFFFFF00000000 | *v25;
          uint64_t v19 = v19 & 0xFFFFFFFF00000000 | *v14;
          int v26 = sub_22266573C(a3);
          *(_DWORD *)sub_22265E298(v12, v24++) = v26;
        }
        while (v39 != v24);
        return (unsigned int *)v12;
      }
    }
    return (unsigned int *)v19;
  }
  return v10;
}

float sub_2226648A8(float a1, float a2, float a3)
{
  float v4 = sub_22266DF64(a1, a2);

  return sub_22266D9EC(v4, a3);
}

float sub_2226648E0(uint64_t a1, float *a2)
{
  return sqrtf(sub_222664A98(a1, a2, a2));
}

_DWORD *sub_222664900(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  uint64_t v23 = a2;
  uint64_t v9 = sub_2225C3C70((uint64_t)&v23);
  if (sub_22265E240(v9))
  {
    int v10 = sub_22265E268(a5);
    return sub_2226621C8(a1, v10);
  }
  else
  {
    uint64_t v12 = sub_2225C3C70((uint64_t)&v23);
    uint64_t v13 = sub_22265E3C0(v12);
    uint64_t v11 = sub_22265E20C(a1, 3);
    unint64_t v14 = *((unsigned __int8 *)a4 + 64);
    unsigned int v15 = sub_222654EC8(v13);
    if (v14 == 1)
    {
      if (v15)
      {
        uint64_t v16 = 0;
        uint64_t v17 = v15;
        do
        {
          sub_222654ED4(a3, v16);
          unint64_t v14 = v14 & 0xFFFFFFFF00000000 | *a4;
          int v18 = sub_22265E268(a5);
          *(_DWORD *)sub_22265E298(v11, v16++) = v18;
        }
        while (v17 != v16);
      }
    }
    else if (v15)
    {
      uint64_t v19 = 0;
      uint64_t v20 = v15;
      do
      {
        sub_222654ED4(a3, v19);
        sub_222654ED4((uint64_t)a4, v19);
        int v21 = sub_22265E268(a5);
        *(_DWORD *)sub_22265E298(v11, v19++) = v21;
      }
      while (v20 != v19);
    }
  }
  return (_DWORD *)v11;
}

float sub_222664A98(uint64_t a1, float *a2, float *a3)
{
  uint64_t v14 = a1;
  uint64_t v6 = sub_2225C3C70((uint64_t)&v14);
  if (sub_22265E240(v6)) {
    return *a2 * *a3;
  }
  uint64_t v7 = sub_2225C3C70((uint64_t)&v14);
  uint64_t v8 = sub_222654B7C(v7);
  if (v8)
  {
    unsigned int v9 = sub_222654EC8(v8);
    if (v9)
    {
      uint64_t v10 = 0;
      uint64_t v11 = v9;
      float v3 = 0.0;
      do
      {
        float v12 = *(float *)sub_222654ED4((uint64_t)a2, v10);
        float v3 = v3 + (float)(v12 * *(float *)sub_222654ED4((uint64_t)a3, v10++));
      }
      while (v11 != v10);
    }
    else
    {
      return 0.0;
    }
  }
  return v3;
}

_DWORD *sub_222664B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a2;
  uint64_t v7 = sub_2225C3C70((uint64_t)&v17);
  if (sub_22265E240(v7))
  {
    int v8 = sub_2226657C0(a4);
    return sub_2226621C8(a1, v8);
  }
  else
  {
    uint64_t v10 = sub_2225C3C70((uint64_t)&v17);
    uint64_t v11 = sub_22265E3C0(v10);
    uint64_t v9 = sub_22265E20C(a1, 3);
    unsigned int v12 = sub_222654EC8(v11);
    if (v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = v12;
      do
      {
        sub_222654ED4(a3, v13);
        int v15 = sub_2226657C0(a4);
        *(_DWORD *)sub_22265E298(v9, v13++) = v15;
      }
      while (v14 != v13);
    }
  }
  return (_DWORD *)v9;
}

float sub_222664C70(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = a3;
  float v7 = *(float *)sub_222654ED4(a1, a3);
  float v8 = *(float *)sub_222654ED4(a2, v6);
  uint64_t v9 = a3 + 1;
  float v10 = *(float *)sub_222654ED4(a1, v9);
  return (float)(v7 * *(float *)sub_222654ED4(a2, v9)) - (float)(v8 * v10);
}

float sub_222664CFC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4 = a4;
  uint64_t v8 = a4;
  float v9 = *(float *)sub_222654ED4(a1, a4);
  float v10 = *(float *)sub_222654ED4(a2, v8);
  float v11 = *(float *)sub_222654ED4(a3, v8);
  float v12 = sub_222664C70(a2, a3, ++v4);
  float v13 = (float)(v9 * v12) - (float)(v10 * sub_222664C70(a1, a3, v4));
  return v13 + (float)(v11 * sub_222664C70(a1, a2, v4));
}

float sub_222664DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float v8 = *(float *)sub_222654ED4(a1, 0);
  float v9 = *(float *)sub_222654ED4(a2, 0);
  float v10 = *(float *)sub_222654ED4(a3, 0);
  float v11 = *(float *)sub_222654ED4(a4, 0);
  float v12 = sub_222664CFC(a2, a3, a4, 1u);
  float v13 = (float)(v8 * v12) - (float)(v9 * sub_222664CFC(a1, a3, a4, 1u));
  float v14 = v13 + (float)(v10 * sub_222664CFC(a1, a2, a4, 1u));
  return v14 - (float)(v11 * sub_222664CFC(a1, a2, a3, 1u));
}

uint64_t sub_222664EE0(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v5);
  uint64_t v2 = sub_22265E3C0(v1);
  unsigned int v3 = sub_222655AE4(v2);
  return (v3 < 0x17) & (0x700080u >> v3);
}

uint64_t sub_222664F44(uint64_t a1)
{
  return sub_22265F314(a1, 0);
}

uint64_t sub_222664F4C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *a4 = 0;
  uint64_t v7 = sub_222659834(a1);
  uint64_t v8 = sub_222660F20(v7, 5);
  if ((v8 & 1) != 0 || (uint64_t v9 = sub_222659834(a1), result = sub_222660F20(v9, 6), result))
  {
    sub_222665054(v14);
    float v11 = (unsigned int *)sub_22265E160(v14, a1);
    j_nullsub_1(v14, v12);
    if (sub_22265E1FC((uint64_t)v11))
    {
      uint64_t result = 0;
      *a4 = *(void *)v11;
    }
    else if (*((unsigned char *)v11 + 64) == 1)
    {
      sub_2225C3A6C(v13, 32, *v11, v8);
      sub_22263E85C(v14, v13, v8 ^ 1);
      sub_22263E694(a3, (uint64_t)v14);
      sub_22263E6C8(v14);
      sub_2225C2F10(v13);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL sub_222665058(unint64_t a1, uint64_t a2, void *a3)
{
  *a3 = 0;
  sub_222665054(v9);
  uint64_t v5 = (void *)sub_22265E160(v9, a1);
  j_nullsub_1(v9, v6);
  BOOL v7 = sub_22265E1FC((uint64_t)v5);
  if (v7) {
    *a3 = *v5;
  }
  return !v7;
}

uint64_t sub_2226650C0(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = 0;
  return sub_22260F630(a1, a2, &v3);
}

unsigned int *sub_2226650E8(uint64_t *a1, unint64_t a2)
{
  uint64_t result = (unsigned int *)sub_22264B7DC(a2);
  switch((int)result)
  {
    case 0:
      return (unsigned int *)sub_22265EBE0((uint64_t)a1, a2);
    case 1:
      return (unsigned int *)sub_22265EC78((uint64_t)a1, a2);
    case 2:
      return (unsigned int *)sub_22265ECD0((uint64_t)a1, a2);
    case 3:
      uint64_t v5 = (uint64_t)a1;
      uint64_t v6 = a2;
      return (unsigned int *)sub_22265EB4C(v5, v6);
    case 4:
      uint64_t v5 = (uint64_t)a1;
      uint64_t v6 = a2;
      return (unsigned int *)sub_22265EB4C(v5, v6);
    case 5:
      return (unsigned int *)sub_22265ED50((uint64_t)a1, a2);
    case 6:
      return (unsigned int *)sub_22265F3A8((uint64_t)a1, a2);
    case 7:
      return (unsigned int *)sub_222660FD4((uint64_t)a1, a2);
    case 8:
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = a2;
      return (unsigned int *)sub_2226654D8(v7, v8);
    case 9:
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = a2;
      return (unsigned int *)sub_2226654D8(v7, v8);
    case 10:
      return (unsigned int *)sub_222661090(a1, a2);
    case 11:
      return (unsigned int *)sub_22266115C((uint64_t)a1, a2);
    case 12:
      return (unsigned int *)sub_22266122C((uint64_t)a1, a2);
    case 13:
      return (unsigned int *)sub_222661F68((uint64_t)a1, a2);
    case 14:
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = a2;
      return (unsigned int *)sub_2226654D8(v7, v8);
    case 15:
      return sub_2226620A8((uint64_t)a1, a2);
    case 16:
      return sub_2226621F4((uint64_t)a1, a2);
    case 17:
      return (unsigned int *)sub_2226623FC((uint64_t)a1, a2);
    case 18:
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = a2;
      return (unsigned int *)sub_2226654D8(v7, v8);
    case 19:
      return (unsigned int *)sub_2226624E4((uint64_t)a1, a2);
    case 20:
      uint64_t v7 = (uint64_t)a1;
      uint64_t v8 = a2;
      return (unsigned int *)sub_2226654D8(v7, v8);
    case 21:
      uint64_t v9 = (uint64_t)a1;
      uint64_t v10 = a2;
      goto LABEL_67;
    case 22:
      uint64_t v9 = (uint64_t)a1;
      uint64_t v10 = a2;
LABEL_67:
      uint64_t result = (unsigned int *)sub_2226654DC(v9, v10);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2226654DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3D04(a2);

  return sub_22265E160(a1, v3);
}

uint64_t sub_222665520(uint64_t a1)
{
  return a1;
}

uint64_t sub_22266554C(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(result + 64) = 0;
  *(void *)uint64_t result = a2;
  return result;
}

uint64_t sub_22266555C(uint64_t result, float a2)
{
  *(float *)uint64_t result = a2;
  *(unsigned char *)(result + 64) = 1;
  return result;
}

uint64_t sub_222665570(uint64_t result, int a2)
{
  *(_DWORD *)uint64_t result = a2;
  *(unsigned char *)(result + 64) = 1;
  return result;
}

unsigned char *sub_222665584(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  result[64] = 1;
  return result;
}

uint64_t sub_222665594(uint64_t a1)
{
  uint64_t v1 = sub_222635BFC(0x48uLL, *(uint64_t **)(a1 + 8));

  return sub_22266551C(v1);
}

uint64_t sub_2226655C4(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222655C90(&v2);
}

void *sub_2226655EC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a3;
  v11[1] = a4;
  sub_222665684((uint64_t)a2, *a1);
  uint64_t result = (void *)sub_2225C3D04((uint64_t)v11);
  if (result)
  {
    uint64_t v7 = sub_2225C3D04((uint64_t)v11);
    uint64_t v8 = (void *)sub_2225CC520(a2, 8 * v7, 8uLL);
    *a1 = (uint64_t)v8;
    uint64_t v9 = (const void *)sub_2225C3C70((uint64_t)v11);
    uint64_t v10 = sub_2225C3D04((uint64_t)v11);
    return memcpy(v8, v9, 8 * v10);
  }
  else
  {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_222665684(uint64_t a1, uint64_t a2)
{
  return j_nullsub_1(a1, a2);
}

uint64_t sub_222665698(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      uint64_t v5 = nullsub_1(a1, a2);
      *(void *)(a1 + 24) = v5;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v5);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_22266573C(uint64_t a1)
{
  return sub_222665770(a1);
}

uint64_t sub_222665770(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_2226657C0(v4);
  }
}

uint64_t sub_2226657C0(uint64_t a1)
{
  return sub_2226657E8(a1);
}

uint64_t sub_2226657E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_222665838(v4);
  }
}

uint64_t sub_222665838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222665894(a2);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = *(void *)(v4 + 928) + 1616;
  *(void *)(a1 + 16) = *(void *)(v4 + 928) + 1752;
  uint64_t v5 = sub_22266589C(a2);
  *(unsigned char *)(a1 + 24) = sub_22264FEFC(v5);
  return a1;
}

uint64_t sub_222665894(uint64_t a1)
{
  return *(void *)(a1 + 152);
}

uint64_t sub_22266589C(uint64_t a1)
{
  return sub_2225C3C70(a1 + 160);
}

void *sub_2226658AC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_222665930(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_222665980(v4);
  }
}

uint64_t sub_222665988(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      uint64_t v5 = nullsub_1(a1, a2);
      *(void *)(a1 + 24) = v5;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v5);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_222665A34(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_222665AB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_222665B08(v4);
  }
}

uint64_t sub_222665B08(uint64_t a1)
{
  return sub_222665B2C(a1, &v2);
}

uint64_t sub_222665B34(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222665B60();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222665B64(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DC860;
  sub_222665BE4(a2, a3);
  return a1;
}

void *sub_222665BC4(void *result)
{
  *uint64_t result = &unk_26D4DC8A8;
  return result;
}

void sub_222665BEC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_5();

  j__free(v0);
}

uint64_t sub_222665C14(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222665B60(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222665C8C(uint64_t a1, uint64_t a2)
{
  return sub_222665B60(a2, a1 + 8);
}

uint64_t sub_222665CA0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222665CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222665CF4(a2, a3);
}

uint64_t sub_222665CBC(uint64_t a1, uint64_t a2)
{
  sub_222658A5C(a1);

  return sub_222658A5C(a2);
}

uint64_t sub_222665CFC(int *a1, unsigned int *a2)
{
  return sub_222665D08(*a1, *a2);
}

uint64_t sub_222665D08(int a1, uint64_t a2)
{
  return nullsub_1(a2 | a1, a2);
}

uint64_t sub_222665D10(uint64_t a1)
{
  return sub_222665D34(a1, &v2);
}

uint64_t sub_222665D3C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222665D68();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222665D6C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DC8F0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222665DD0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_6();

  j__free(v0);
}

uint64_t sub_222665DF8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222665D68(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222665E70(uint64_t a1, uint64_t a2)
{
  return sub_222665D68(a2, a1 + 8);
}

uint64_t sub_222665E84(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222665E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222665CF4(a2, a3);
}

uint64_t sub_222665E98(uint64_t a1)
{
  return sub_222665EBC(a1, &v2);
}

uint64_t sub_222665EC4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222665EF0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222665EF4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DC938;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222665F58()
{
  uint64_t v0 = (void *)j_j_nullsub_1_7();

  j__free(v0);
}

uint64_t sub_222665F80(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222665EF0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222665FF8(uint64_t a1, uint64_t a2)
{
  return sub_222665EF0(a2, a1 + 8);
}

uint64_t sub_22266600C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222666014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222666020(a2, a3);
}

uint64_t sub_222666028(int *a1, unsigned int *a2)
{
  return sub_222666034(*a1, *a2);
}

uint64_t sub_222666034(int a1, uint64_t a2)
{
  return nullsub_1(a2 ^ a1, a2);
}

uint64_t sub_22266603C(uint64_t a1)
{
  return sub_222666060(a1, &v2);
}

uint64_t sub_222666068(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222666094();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222666098(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DC980;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226660FC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_8();

  j__free(v0);
}

uint64_t sub_222666124(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222666094(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266619C(uint64_t a1, uint64_t a2)
{
  return sub_222666094(a2, a1 + 8);
}

uint64_t sub_2226661B0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226661B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222666020(a2, a3);
}

uint64_t sub_2226661C4(uint64_t a1)
{
  return sub_2226661E8(a1, &v2);
}

uint64_t sub_2226661F0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266621C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222666220(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DC9C8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222666284()
{
  uint64_t v0 = (void *)j_j_nullsub_1_9();

  j__free(v0);
}

uint64_t sub_2226662AC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266621C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222666324(uint64_t a1, uint64_t a2)
{
  return sub_22266621C(a2, a1 + 8);
}

uint64_t sub_222666338(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222666340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266634C(a2, a3);
}

uint64_t sub_222666354(int *a1, unsigned int *a2)
{
  return sub_222666360(*a1, *a2);
}

uint64_t sub_222666360(int a1, uint64_t a2)
{
  return nullsub_1(a2 & a1, a2);
}

uint64_t sub_222666368(uint64_t a1)
{
  return sub_22266638C(a1, &v2);
}

uint64_t sub_222666394(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226663C0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226663C4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCA10;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222666428()
{
  uint64_t v0 = (void *)j_j_nullsub_1_10();

  j__free(v0);
}

uint64_t sub_222666450(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226663C0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226664C8(uint64_t a1, uint64_t a2)
{
  return sub_2226663C0(a2, a1 + 8);
}

uint64_t sub_2226664DC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226664E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266634C(a2, a3);
}

uint64_t sub_2226664F0(uint64_t a1)
{
  return sub_222666514(a1, &v2);
}

uint64_t sub_22266651C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222666548();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266654C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCA58;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226665B0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_11();

  j__free(v0);
}

uint64_t sub_2226665D8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222666548(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222666650(uint64_t a1, uint64_t a2)
{
  return sub_222666548(a2, a1 + 8);
}

uint64_t sub_222666664(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266666C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222666678(a2, a3);
}

uint64_t sub_222666680(unsigned int *a1, unsigned int *a2)
{
  return sub_22266668C(*a1, *a2);
}

uint64_t sub_22266668C(unsigned int a1, uint64_t a2)
{
  return nullsub_1(a1 >> a2, a2);
}

uint64_t sub_222666694(uint64_t a1)
{
  return sub_2226666B8(a1, &v2);
}

uint64_t sub_2226666C0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226666EC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226666F0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCAA0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222666754()
{
  uint64_t v0 = (void *)j_j_nullsub_1_12();

  j__free(v0);
}

uint64_t sub_22266677C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226666EC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226667F4(uint64_t a1, uint64_t a2)
{
  return sub_2226666EC(a2, a1 + 8);
}

uint64_t sub_222666808(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222666810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266681C(a2, a3);
}

uint64_t sub_222666824(int *a1, unsigned int *a2)
{
  return sub_222666830(*a1, *a2);
}

uint64_t sub_222666830(int a1, uint64_t a2)
{
  return nullsub_1((a1 >> a2), a2);
}

uint64_t sub_222666838(uint64_t a1)
{
  return sub_22266685C(a1, &v2);
}

uint64_t sub_222666864(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222666890();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222666894(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCAE8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226668F8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_13();

  j__free(v0);
}

uint64_t sub_222666920(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222666890(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222666998(uint64_t a1, uint64_t a2)
{
  return sub_222666890(a2, a1 + 8);
}

uint64_t sub_2226669AC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226669B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226669C0(a2, a3);
}

uint64_t sub_2226669C8(int *a1, unsigned int *a2)
{
  return sub_2226669D4(*a1, *a2);
}

uint64_t sub_2226669D4(int a1, uint64_t a2)
{
  return nullsub_1((a1 << a2), a2);
}

uint64_t sub_2226669DC(uint64_t a1)
{
  return sub_222666A00(a1, &v2);
}

uint64_t sub_222666A08(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222666A34();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222666A38(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCB30;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222666A9C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_14();

  j__free(v0);
}

uint64_t sub_222666AC4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222666A34(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222666B3C(uint64_t a1, uint64_t a2)
{
  return sub_222666A34(a2, a1 + 8);
}

uint64_t sub_222666B50(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222666B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226669C0(a2, a3);
}

uint64_t sub_222666B64(uint64_t a1)
{
  return sub_222666B88(a1, &v2);
}

uint64_t sub_222666B90(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222666BBC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222666BC0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCB78;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222666C24()
{
  uint64_t v0 = (void *)j_j_nullsub_1_15();

  j__free(v0);
}

uint64_t sub_222666C4C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222666BBC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222666CC4(uint64_t a1, uint64_t a2)
{
  return sub_222666BBC(a2, a1 + 8);
}

uint64_t sub_222666CD8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222666CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222666CEC(a2, a3);
}

void sub_222666CF4()
{
}

void sub_222666D00()
{
}

uint64_t sub_222666D18(uint64_t a1)
{
  return sub_222666D3C(a1, &v2);
}

uint64_t sub_222666D44(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222666D70();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222666D74(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCBC0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222666DD8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_16();

  j__free(v0);
}

uint64_t sub_222666E00(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222666D70(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222666E78(uint64_t a1, uint64_t a2)
{
  return sub_222666D70(a2, a1 + 8);
}

uint64_t sub_222666E8C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222666E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222666CEC(a2, a3);
}

uint64_t sub_222666EA0(uint64_t a1)
{
  return sub_222666EC4(a1, &v2);
}

uint64_t sub_222666ECC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222666EF8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222666EFC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCC08;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222666F60()
{
  uint64_t v0 = (void *)j_j_nullsub_1_17();

  j__free(v0);
}

uint64_t sub_222666F88(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222666EF8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667000(uint64_t a1, uint64_t a2)
{
  return sub_222666EF8(a2, a1 + 8);
}

uint64_t sub_222667014(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266701C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222666CEC(a2, a3);
}

uint64_t sub_222667028(uint64_t a1)
{
  return sub_22266704C(a1, &v2);
}

uint64_t sub_222667054(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222667080();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222667084(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCC50;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226670E8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_18();

  j__free(v0);
}

uint64_t sub_222667110(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222667080(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667188(uint64_t a1, uint64_t a2)
{
  return sub_222667080(a2, a1 + 8);
}

uint64_t sub_22266719C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226671A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222666CEC(a2, a3);
}

uint64_t sub_2226671B0(uint64_t a1)
{
  return sub_2226671D4(a1, &v2);
}

uint64_t sub_2226671DC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222667208();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266720C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCC98;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222667270()
{
  uint64_t v0 = (void *)j_j_nullsub_1_19();

  j__free(v0);
}

uint64_t sub_222667298(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222667208(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667310(uint64_t a1, uint64_t a2)
{
  return sub_222667208(a2, a1 + 8);
}

uint64_t sub_222667324(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266732C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222667338(a2, a3);
}

uint64_t sub_222667340(int *a1, unsigned int *a2)
{
  return sub_22266734C(*a1, *a2);
}

uint64_t sub_22266734C(int a1, uint64_t a2)
{
  return nullsub_1((a2 + a1), a2);
}

uint64_t sub_222667354(uint64_t a1)
{
  return sub_222667378(a1, &v2);
}

uint64_t sub_222667380(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226673AC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226673B0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCCE0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222667414()
{
  uint64_t v0 = (void *)j_j_nullsub_1_20();

  j__free(v0);
}

uint64_t sub_22266743C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226673AC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226674B4(uint64_t a1, uint64_t a2)
{
  return sub_2226673AC(a2, a1 + 8);
}

uint64_t sub_2226674C8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226674D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226674DC(a2, a3);
}

void sub_2226674E4()
{
}

void sub_2226674F0()
{
}

uint64_t sub_222667500(uint64_t a1)
{
  return sub_222667524(a1, &v2);
}

uint64_t sub_22266752C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222667558();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266755C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCD28;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226675C0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_21();

  j__free(v0);
}

uint64_t sub_2226675E8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222667558(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667660(uint64_t a1, uint64_t a2)
{
  return sub_222667558(a2, a1 + 8);
}

uint64_t sub_222667674(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266767C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226674DC(a2, a3);
}

uint64_t sub_222667688(uint64_t a1)
{
  return sub_2226676AC(a1, &v2);
}

uint64_t sub_2226676B4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226676E0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226676E4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCD70;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222667748()
{
  uint64_t v0 = (void *)j_j_nullsub_1_22();

  j__free(v0);
}

uint64_t sub_222667770(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226676E0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226677E8(uint64_t a1, uint64_t a2)
{
  return sub_2226676E0(a2, a1 + 8);
}

uint64_t sub_2226677FC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222667804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226674DC(a2, a3);
}

uint64_t sub_222667810(uint64_t a1)
{
  return sub_222667834(a1, &v2);
}

uint64_t sub_22266783C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222667868();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266786C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCDB8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226678D0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_23();

  j__free(v0);
}

uint64_t sub_2226678F8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222667868(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667970(uint64_t a1, uint64_t a2)
{
  return sub_222667868(a2, a1 + 8);
}

uint64_t sub_222667984(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226674DC(a2, a3);
}

uint64_t sub_222667998(uint64_t a1)
{
  return sub_2226679BC(a1, &v2);
}

uint64_t sub_2226679C4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226679F0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226679F4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCE00;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222667A58()
{
  uint64_t v0 = (void *)j_j_nullsub_1_24();

  j__free(v0);
}

uint64_t sub_222667A80(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226679F0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667AF8(uint64_t a1, uint64_t a2)
{
  return sub_2226679F0(a2, a1 + 8);
}

uint64_t sub_222667B0C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222667B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222667B20(a2, a3);
}

uint64_t sub_222667B28(int *a1, unsigned int *a2)
{
  return sub_222667B34(*a1, *a2);
}

uint64_t sub_222667B34(int a1, uint64_t a2)
{
  return nullsub_1((a1 - a2), a2);
}

uint64_t sub_222667B3C(uint64_t a1)
{
  return sub_222667B60(a1, &v2);
}

uint64_t sub_222667B68(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222667B94();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222667B98(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCE48;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222667BFC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_25();

  j__free(v0);
}

uint64_t sub_222667C24(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222667B94(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667C9C(uint64_t a1, uint64_t a2)
{
  return sub_222667B94(a2, a1 + 8);
}

uint64_t sub_222667CB0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222667CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222667B20(a2, a3);
}

uint64_t sub_222667CC4(uint64_t a1)
{
  return sub_222667CE8(a1, &v2);
}

uint64_t sub_222667CF0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222667D1C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222667D20(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCE90;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222667D84()
{
  uint64_t v0 = (void *)j_j_nullsub_1_26();

  j__free(v0);
}

uint64_t sub_222667DAC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222667D1C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667E24(uint64_t a1, uint64_t a2)
{
  return sub_222667D1C(a2, a1 + 8);
}

uint64_t sub_222667E38(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222667E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222667E4C(a2, a3);
}

uint64_t sub_222667E54(unsigned int *a1, unsigned int *a2)
{
  return sub_222667E60(*a1, *a2);
}

uint64_t sub_222667E60(unsigned int a1, uint64_t a2)
{
  return nullsub_1(a1 % a2, a2);
}

uint64_t sub_222667E6C(uint64_t a1)
{
  return sub_222667E90(a1, &v2);
}

uint64_t sub_222667E98(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222667EC4();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222667EC8(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCED8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222667F2C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_27();

  j__free(v0);
}

uint64_t sub_222667F54(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222667EC4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222667FCC(uint64_t a1, uint64_t a2)
{
  return sub_222667EC4(a2, a1 + 8);
}

uint64_t sub_222667FE0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222667FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222667FF4(a2, a3);
}

uint64_t sub_222667FFC(int *a1, unsigned int *a2)
{
  return sub_222668008(*a1, *a2);
}

uint64_t sub_222668008(int a1, uint64_t a2)
{
  return nullsub_1((a1 % (int)a2), a2);
}

uint64_t sub_222668014(uint64_t a1)
{
  return sub_222668038(a1, &v2);
}

uint64_t sub_222668040(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266806C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222668070(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCF20;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226680D4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_28();

  j__free(v0);
}

uint64_t sub_2226680FC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266806C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222668174(uint64_t a1, uint64_t a2)
{
  return sub_22266806C(a2, a1 + 8);
}

uint64_t sub_222668188(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222668190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266819C(a2, a3);
}

void sub_2226681A4()
{
}

void sub_2226681B0()
{
}

uint64_t sub_2226681C0(uint64_t a1)
{
  return sub_2226681E4(a1, &v2);
}

uint64_t sub_2226681EC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222668218();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266821C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCF68;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668280()
{
  uint64_t v0 = (void *)j_j_nullsub_1_29();

  j__free(v0);
}

uint64_t sub_2226682A8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222668218(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222668320(uint64_t a1, uint64_t a2)
{
  return sub_222668218(a2, a1 + 8);
}

uint64_t sub_222668334(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266833C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266819C(a2, a3);
}

uint64_t sub_222668348(uint64_t a1)
{
  return sub_22266836C(a1, &v2);
}

uint64_t sub_222668374(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226683A0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226683A4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCFB0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668408()
{
  uint64_t v0 = (void *)j_j_nullsub_1_30();

  j__free(v0);
}

uint64_t sub_222668430(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226683A0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226684A8(uint64_t a1, uint64_t a2)
{
  return sub_2226683A0(a2, a1 + 8);
}

uint64_t sub_2226684BC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226684C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266819C(a2, a3);
}

uint64_t sub_2226684D0(uint64_t a1)
{
  return sub_2226684F4(a1, &v2);
}

uint64_t sub_2226684FC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222668528();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266852C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DCFF8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668590()
{
  uint64_t v0 = (void *)j_j_nullsub_1_31();

  j__free(v0);
}

uint64_t sub_2226685B8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222668528(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222668630(uint64_t a1, uint64_t a2)
{
  return sub_222668528(a2, a1 + 8);
}

uint64_t sub_222668644(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266864C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266819C(a2, a3);
}

uint64_t sub_222668658(uint64_t a1)
{
  return sub_22266867C(a1, &v2);
}

uint64_t sub_222668684(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226686B0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226686B4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD040;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668718()
{
  uint64_t v0 = (void *)j_j_nullsub_1_32();

  j__free(v0);
}

uint64_t sub_222668740(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226686B0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226687B8(uint64_t a1, uint64_t a2)
{
  return sub_2226686B0(a2, a1 + 8);
}

uint64_t sub_2226687CC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226687D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226687E0(a2, a3);
}

uint64_t sub_2226687E8(int *a1, unsigned int *a2)
{
  return sub_2226687F4(*a1, *a2);
}

uint64_t sub_2226687F4(int a1, uint64_t a2)
{
  return nullsub_1((a1 / (int)a2), a2);
}

uint64_t sub_2226687FC(uint64_t a1)
{
  return sub_222668820(a1, &v2);
}

uint64_t sub_222668828(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222668854();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222668858(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD088;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226688BC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_33();

  j__free(v0);
}

uint64_t sub_2226688E4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222668854(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266895C(uint64_t a1, uint64_t a2)
{
  return sub_222668854(a2, a1 + 8);
}

uint64_t sub_222668970(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222668978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668984(a2, a3);
}

uint64_t sub_22266898C(unsigned int *a1, unsigned int *a2)
{
  return sub_222668998(*a1, *a2);
}

uint64_t sub_222668998(unsigned int a1, uint64_t a2)
{
  return nullsub_1(a1 / a2, a2);
}

uint64_t sub_2226689A0(uint64_t a1)
{
  return sub_2226689C4(a1, &v2);
}

uint64_t sub_2226689CC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226689F8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226689FC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD0D0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668A60()
{
  uint64_t v0 = (void *)j_j_nullsub_1_34();

  j__free(v0);
}

uint64_t sub_222668A88(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226689F8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222668B00(uint64_t a1, uint64_t a2)
{
  return sub_2226689F8(a2, a1 + 8);
}

uint64_t sub_222668B14(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222668B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668B28(a2, a3);
}

void sub_222668B30()
{
}

void sub_222668B3C()
{
}

uint64_t sub_222668B4C(uint64_t a1)
{
  return sub_222668B70(a1, &v2);
}

uint64_t sub_222668B78(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222668BA4();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222668BA8(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD118;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668C0C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_35();

  j__free(v0);
}

uint64_t sub_222668C34(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222668BA4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222668CAC(uint64_t a1, uint64_t a2)
{
  return sub_222668BA4(a2, a1 + 8);
}

uint64_t sub_222668CC0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222668CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668B28(a2, a3);
}

uint64_t sub_222668CD4(uint64_t a1)
{
  return sub_222668CF8(a1, &v2);
}

uint64_t sub_222668D00(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222668D2C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222668D30(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD160;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668D94()
{
  uint64_t v0 = (void *)j_j_nullsub_1_36();

  j__free(v0);
}

uint64_t sub_222668DBC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222668D2C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222668E34(uint64_t a1, uint64_t a2)
{
  return sub_222668D2C(a2, a1 + 8);
}

uint64_t sub_222668E48(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222668E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668B28(a2, a3);
}

uint64_t sub_222668E5C(uint64_t a1)
{
  return sub_222668E80(a1, &v2);
}

uint64_t sub_222668E88(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222668EB4();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222668EB8(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD1A8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222668F1C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_37();

  j__free(v0);
}

uint64_t sub_222668F44(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222668EB4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222668FBC(uint64_t a1, uint64_t a2)
{
  return sub_222668EB4(a2, a1 + 8);
}

uint64_t sub_222668FD0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222668FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668FE4(a2, a3);
}

uint64_t sub_222668FEC(int *a1, unsigned int *a2)
{
  return sub_222668FF8(*a1, *a2);
}

uint64_t sub_222668FF8(int a1, uint64_t a2)
{
  return nullsub_1((a2 * a1), a2);
}

uint64_t sub_222669000(uint64_t a1)
{
  return sub_222669024(a1, &v2);
}

uint64_t sub_22266902C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222669058();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266905C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD1F0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226690C0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_38();

  j__free(v0);
}

uint64_t sub_2226690E8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222669058(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222669160(uint64_t a1, uint64_t a2)
{
  return sub_222669058(a2, a1 + 8);
}

uint64_t sub_222669174(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266917C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668FE4(a2, a3);
}

uint64_t sub_22266918C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222658404(&v3);
}

uint64_t sub_2226691B8(uint64_t a1)
{
  return sub_2225D5BA8(a1, 0x10u);
}

uint64_t sub_2226691C0(uint64_t a1)
{
  return sub_2226691E4(a1, &v2);
}

uint64_t sub_2226691EC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222669218();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266921C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266927C(a1) = &unk_26D4DD238;
  sub_222665BE4(a2, a3);
  return a1;
}

void *sub_22266927C(void *result)
{
  *uint64_t result = &unk_26D4DD280;
  return result;
}

void sub_2226692A0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_39();

  j__free(v0);
}

uint64_t sub_2226692C8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222669218(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222669340(uint64_t a1, uint64_t a2)
{
  return sub_222669218(a2, a1 + 8);
}

uint64_t sub_222669354(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266935C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222669370(a2, a3);
}

void sub_222669378(int *a1, int *a2)
{
}

void sub_222669384(int a1, int a2)
{
  sub_222661D90(a1, a2);

  sub_222666D10();
}

void *sub_2226693B8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_22266943C(uint64_t a1)
{
  return sub_222669460(a1, &v2);
}

uint64_t sub_222669468(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222669494();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222669498(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266927C(a1) = &unk_26D4DD2C8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226694FC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_40();

  j__free(v0);
}

uint64_t sub_222669524(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222669494(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266959C(uint64_t a1, uint64_t a2)
{
  return sub_222669494(a2, a1 + 8);
}

uint64_t sub_2226695B0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226695B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226695C4(a2, a3);
}

void sub_2226695CC(int *a1, int *a2)
{
}

void sub_2226695D8(int a1, int a2)
{
  sub_222661DF4(a1, a2);

  sub_222666D10();
}

uint64_t sub_222669604(uint64_t a1)
{
  return sub_222669628(a1, &v2);
}

uint64_t sub_222669630(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266965C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222669660(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266927C(a1) = &unk_26D4DD310;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226696C4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_41();

  j__free(v0);
}

uint64_t sub_2226696EC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266965C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222669764(uint64_t a1, uint64_t a2)
{
  return sub_22266965C(a2, a1 + 8);
}

uint64_t sub_222669778(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222669780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266978C(a2, a3);
}

uint64_t sub_222669794(int *a1, unsigned int *a2)
{
  return sub_2226697A0(*a1, *a2);
}

uint64_t sub_2226697A0(int a1, unsigned int a2)
{
  uint64_t v2 = sub_222661E58(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_2226697CC(uint64_t a1)
{
  return sub_2226697F0(a1, &v2);
}

uint64_t sub_2226697F8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222669824();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222669828(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266927C(a1) = &unk_26D4DD358;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266988C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_42();

  j__free(v0);
}

uint64_t sub_2226698B4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222669824(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266992C(uint64_t a1, uint64_t a2)
{
  return sub_222669824(a2, a1 + 8);
}

uint64_t sub_222669940(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222669948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222669954(a2, a3);
}

uint64_t sub_22266995C(int *a1, unsigned int *a2)
{
  return sub_222669968(*a1, *a2);
}

uint64_t sub_222669968(int a1, unsigned int a2)
{
  uint64_t v2 = sub_222661EA8(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_222669994(uint64_t a1)
{
  return sub_2226699B8(a1, &v2);
}

uint64_t sub_2226699C0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226699EC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226699F0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266927C(a1) = &unk_26D4DD3A0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222669A54()
{
  uint64_t v0 = (void *)j_j_nullsub_1_43();

  j__free(v0);
}

uint64_t sub_222669A7C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226699EC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222669AF4(uint64_t a1, uint64_t a2)
{
  return sub_2226699EC(a2, a1 + 8);
}

uint64_t sub_222669B08(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222669B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222669B1C(a2, a3);
}

uint64_t sub_222669B24(int *a1, int *a2)
{
  return sub_222669B30(*a1, *a2);
}

uint64_t sub_222669B30(int a1, int a2)
{
  uint64_t v2 = sub_222661EF8(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_222669B5C(uint64_t a1)
{
  return sub_222669B80(a1, &v2);
}

uint64_t sub_222669B88(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222669BB4();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222669BB8(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD3E8;
  sub_222665BE4(a2, a3);
  return a1;
}

void *sub_222669C18(void *result)
{
  *uint64_t result = &unk_26D4DD430;
  return result;
}

void sub_222669C3C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_44();

  j__free(v0);
}

uint64_t sub_222669C64(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222669BB4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222669CDC(uint64_t a1, uint64_t a2)
{
  return sub_222669BB4(a2, a1 + 8);
}

uint64_t sub_222669CF0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222669CF8(uint64_t a1, uint64_t a2)
{
  return sub_222669D08(a2);
}

void sub_222669D10()
{
}

void sub_222669D18()
{
}

uint64_t sub_222669D2C(uint64_t a1)
{
  return sub_222669D50(a1, &v2);
}

uint64_t sub_222669D58(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222669D84();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222669D88(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD478;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222669DEC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_45();

  j__free(v0);
}

uint64_t sub_222669E14(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222669D84(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222669E8C(uint64_t a1, uint64_t a2)
{
  return sub_222669D84(a2, a1 + 8);
}

uint64_t sub_222669EA0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222669EA8(uint64_t a1, uint64_t a2)
{
  return sub_222669EB0(a2);
}

void sub_222669EB8()
{
}

void sub_222669EC0()
{
}

uint64_t sub_222669ED4(uint64_t a1)
{
  return sub_222669EF8(a1, &v2);
}

uint64_t sub_222669F00(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222669F2C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222669F30(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD4C0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222669F94()
{
  uint64_t v0 = (void *)j_j_nullsub_1_46();

  j__free(v0);
}

uint64_t sub_222669FBC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222669F2C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266A034(uint64_t a1, uint64_t a2)
{
  return sub_222669F2C(a2, a1 + 8);
}

uint64_t sub_22266A048(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266A050(uint64_t a1, uint64_t a2)
{
  return sub_22266A058(a2);
}

void sub_22266A060(int *a1)
{
}

void sub_22266A068(int a1)
{
  sinf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266A094(uint64_t a1)
{
  return sub_22266A0B8(a1, &v2);
}

uint64_t sub_22266A0C0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266A0EC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266A0F0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD508;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266A154()
{
  uint64_t v0 = (void *)j_j_nullsub_1_47();

  j__free(v0);
}

uint64_t sub_22266A17C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266A0EC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266A1F4(uint64_t a1, uint64_t a2)
{
  return sub_22266A0EC(a2, a1 + 8);
}

uint64_t sub_22266A208(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266A210(uint64_t a1, uint64_t a2)
{
  return sub_22266A218(a2);
}

void sub_22266A220(int *a1)
{
}

void sub_22266A228(int a1)
{
  cosf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266A254(uint64_t a1)
{
  return sub_22266A278(a1, &v2);
}

uint64_t sub_22266A280(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266A2AC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266A2B0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD550;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266A314()
{
  uint64_t v0 = (void *)j_j_nullsub_1_48();

  j__free(v0);
}

uint64_t sub_22266A33C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266A2AC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266A3B4(uint64_t a1, uint64_t a2)
{
  return sub_22266A2AC(a2, a1 + 8);
}

uint64_t sub_22266A3C8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266A3D0(uint64_t a1, uint64_t a2)
{
  return sub_22266A3D8(a2);
}

void sub_22266A3E0(int *a1)
{
}

void sub_22266A3E8(int a1)
{
  tanf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266A414(uint64_t a1)
{
  return sub_22266A438(a1, &v2);
}

uint64_t sub_22266A440(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266A46C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266A470(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD598;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266A4D4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_49();

  j__free(v0);
}

uint64_t sub_22266A4FC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266A46C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266A574(uint64_t a1, uint64_t a2)
{
  return sub_22266A46C(a2, a1 + 8);
}

uint64_t sub_22266A588(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266A590(uint64_t a1, uint64_t a2)
{
  return sub_22266A598(a2);
}

void sub_22266A5A0(int *a1)
{
}

void sub_22266A5A8(int a1)
{
  asinf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266A5D4(uint64_t a1)
{
  return sub_22266A5F8(a1, &v2);
}

uint64_t sub_22266A600(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266A62C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266A630(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD5E0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266A694()
{
  uint64_t v0 = (void *)j_j_nullsub_1_50();

  j__free(v0);
}

uint64_t sub_22266A6BC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266A62C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266A734(uint64_t a1, uint64_t a2)
{
  return sub_22266A62C(a2, a1 + 8);
}

uint64_t sub_22266A748(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266A750(uint64_t a1, uint64_t a2)
{
  return sub_22266A758(a2);
}

void sub_22266A760(int *a1)
{
}

void sub_22266A768(int a1)
{
  acosf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266A794(uint64_t a1)
{
  return sub_22266A7B8(a1, &v2);
}

uint64_t sub_22266A7C0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266A7EC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266A7F0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD628;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266A854()
{
  uint64_t v0 = (void *)j_j_nullsub_1_51();

  j__free(v0);
}

uint64_t sub_22266A87C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266A7EC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266A8F4(uint64_t a1, uint64_t a2)
{
  return sub_22266A7EC(a2, a1 + 8);
}

uint64_t sub_22266A908(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266A910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266A91C(a2, a3);
}

void sub_22266A924(int *a1, int *a2)
{
}

void sub_22266A930(int a1, int a2)
{
  atanf(*(float *)&a1 / *(float *)&a2);

  sub_222666D10();
}

uint64_t sub_22266A964(uint64_t a1)
{
  return sub_22266A988(a1, &v2);
}

uint64_t sub_22266A990(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266A9BC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266A9C0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD670;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266AA24()
{
  uint64_t v0 = (void *)j_j_nullsub_1_52();

  j__free(v0);
}

uint64_t sub_22266AA4C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266A9BC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266AAC4(uint64_t a1, uint64_t a2)
{
  return sub_22266A9BC(a2, a1 + 8);
}

uint64_t sub_22266AAD8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266AAE0(uint64_t a1, uint64_t a2)
{
  return sub_22266AAE8(a2);
}

void sub_22266AAF0(int *a1)
{
}

void sub_22266AAF8(int a1)
{
  atanf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266AB24(uint64_t a1)
{
  return sub_22266AB48(a1, &v2);
}

uint64_t sub_22266AB50(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266AB7C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266AB80(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD6B8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266ABE4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_53();

  j__free(v0);
}

uint64_t sub_22266AC0C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266AB7C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266AC84(uint64_t a1, uint64_t a2)
{
  return sub_22266AB7C(a2, a1 + 8);
}

uint64_t sub_22266AC98(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266ACA0(uint64_t a1, uint64_t a2)
{
  return sub_22266ACA8(a2);
}

void sub_22266ACB0(int *a1)
{
}

void sub_22266ACB8(int a1)
{
  sinhf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266ACE4(uint64_t a1)
{
  return sub_22266AD08(a1, &v2);
}

uint64_t sub_22266AD10(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266AD3C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266AD40(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD700;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266ADA4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_54();

  j__free(v0);
}

uint64_t sub_22266ADCC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266AD3C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266AE44(uint64_t a1, uint64_t a2)
{
  return sub_22266AD3C(a2, a1 + 8);
}

uint64_t sub_22266AE58(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266AE60(uint64_t a1, uint64_t a2)
{
  return sub_22266AE68(a2);
}

void sub_22266AE70(int *a1)
{
}

void sub_22266AE78(int a1)
{
  coshf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266AEA4(uint64_t a1)
{
  return sub_22266AEC8(a1, &v2);
}

uint64_t sub_22266AED0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266AEFC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266AF00(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD748;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266AF64()
{
  uint64_t v0 = (void *)j_j_nullsub_1_55();

  j__free(v0);
}

uint64_t sub_22266AF8C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266AEFC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266B004(uint64_t a1, uint64_t a2)
{
  return sub_22266AEFC(a2, a1 + 8);
}

uint64_t sub_22266B018(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266B020(uint64_t a1, uint64_t a2)
{
  return sub_22266B028(a2);
}

void sub_22266B030(int *a1)
{
}

void sub_22266B038(int a1)
{
  tanhf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266B064(uint64_t a1)
{
  return sub_22266B088(a1, &v2);
}

uint64_t sub_22266B090(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266B0BC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266B0C0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD790;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266B124()
{
  uint64_t v0 = (void *)j_j_nullsub_1_56();

  j__free(v0);
}

uint64_t sub_22266B14C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266B0BC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266B1C4(uint64_t a1, uint64_t a2)
{
  return sub_22266B0BC(a2, a1 + 8);
}

uint64_t sub_22266B1D8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266B1E0(uint64_t a1, uint64_t a2)
{
  return sub_22266B1E8(a2);
}

void sub_22266B1F0(int *a1)
{
}

void sub_22266B1F8(int a1)
{
  asinhf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266B224(uint64_t a1)
{
  return sub_22266B248(a1, &v2);
}

uint64_t sub_22266B250(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266B27C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266B280(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD7D8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266B2E4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_57();

  j__free(v0);
}

uint64_t sub_22266B30C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266B27C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266B384(uint64_t a1, uint64_t a2)
{
  return sub_22266B27C(a2, a1 + 8);
}

uint64_t sub_22266B398(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266B3A0(uint64_t a1, uint64_t a2)
{
  return sub_22266B3A8(a2);
}

void sub_22266B3B0(int *a1)
{
}

void sub_22266B3B8(int a1)
{
  acoshf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266B3E4(uint64_t a1)
{
  return sub_22266B408(a1, &v2);
}

uint64_t sub_22266B410(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266B43C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266B440(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD820;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266B4A4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_58();

  j__free(v0);
}

uint64_t sub_22266B4CC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266B43C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266B544(uint64_t a1, uint64_t a2)
{
  return sub_22266B43C(a2, a1 + 8);
}

uint64_t sub_22266B558(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266B560(uint64_t a1, uint64_t a2)
{
  return sub_22266B568(a2);
}

void sub_22266B570(int *a1)
{
}

void sub_22266B578(int a1)
{
  atanhf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266B5A4(uint64_t a1)
{
  return sub_22266B5C8(a1, &v2);
}

uint64_t sub_22266B5D0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266B5FC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266B600(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DD868;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266B664()
{
  uint64_t v0 = (void *)j_j_nullsub_1_59();

  j__free(v0);
}

uint64_t sub_22266B68C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266B5FC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266B704(uint64_t a1, uint64_t a2)
{
  return sub_22266B5FC(a2, a1 + 8);
}

uint64_t sub_22266B718(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266B72C(a2, a3);
}

void sub_22266B734(int *a1, int *a2)
{
}

void sub_22266B740(int a1, int a2)
{
  powf(*(float *)&a1, *(float *)&a2);

  sub_222666D10();
}

uint64_t sub_22266B770(uint64_t a1)
{
  return sub_22266B794(a1, &v2);
}

uint64_t sub_22266B79C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266B7C8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266B7CC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD8B0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266B830()
{
  uint64_t v0 = (void *)j_j_nullsub_1_60();

  j__free(v0);
}

uint64_t sub_22266B858(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266B7C8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266B8D0(uint64_t a1, uint64_t a2)
{
  return sub_22266B7C8(a2, a1 + 8);
}

uint64_t sub_22266B8E4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266B8EC(uint64_t a1, uint64_t a2)
{
  return sub_22266B8F4(a2);
}

void sub_22266B8FC(int *a1)
{
}

void sub_22266B904(int a1)
{
  expf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266B930(uint64_t a1)
{
  return sub_22266B954(a1, &v2);
}

uint64_t sub_22266B95C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266B988();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266B98C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD8F8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266B9F0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_61();

  j__free(v0);
}

uint64_t sub_22266BA18(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266B988(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266BA90(uint64_t a1, uint64_t a2)
{
  return sub_22266B988(a2, a1 + 8);
}

uint64_t sub_22266BAA4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266BAAC(uint64_t a1, uint64_t a2)
{
  return sub_22266BAB4(a2);
}

void sub_22266BABC(int *a1)
{
}

void sub_22266BAC4(int a1)
{
  logf(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266BAF0(uint64_t a1)
{
  return sub_22266BB14(a1, &v2);
}

uint64_t sub_22266BB1C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266BB48();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266BB4C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD940;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266BBB0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_62();

  j__free(v0);
}

uint64_t sub_22266BBD8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266BB48(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266BC50(uint64_t a1, uint64_t a2)
{
  return sub_22266BB48(a2, a1 + 8);
}

uint64_t sub_22266BC64(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266BC6C(uint64_t a1, uint64_t a2)
{
  return sub_22266BC74(a2);
}

void sub_22266BC7C(int *a1)
{
}

void sub_22266BC84(int a1)
{
  exp2f(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266BCB0(uint64_t a1)
{
  return sub_22266BCD4(a1, &v2);
}

uint64_t sub_22266BCDC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266BD08();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266BD0C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD988;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266BD70()
{
  uint64_t v0 = (void *)j_j_nullsub_1_63();

  j__free(v0);
}

uint64_t sub_22266BD98(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266BD08(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266BE10(uint64_t a1, uint64_t a2)
{
  return sub_22266BD08(a2, a1 + 8);
}

uint64_t sub_22266BE24(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266BE2C(uint64_t a1, uint64_t a2)
{
  return sub_22266BE34(a2);
}

void sub_22266BE3C(int *a1)
{
}

void sub_22266BE44(int a1)
{
  log2f(*(float *)&a1);

  sub_222666D10();
}

uint64_t sub_22266BE70(uint64_t a1)
{
  return sub_22266BE94(a1, &v2);
}

uint64_t sub_22266BE9C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266BEC8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266BECC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DD9D0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266BF30()
{
  uint64_t v0 = (void *)j_j_nullsub_1_64();

  j__free(v0);
}

uint64_t sub_22266BF58(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266BEC8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266BFD0(uint64_t a1, uint64_t a2)
{
  return sub_22266BEC8(a2, a1 + 8);
}

uint64_t sub_22266BFE4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266BFEC(uint64_t a1, uint64_t a2)
{
  return sub_22266BFF4(a2);
}

void sub_22266BFFC()
{
}

void sub_22266C004()
{
}

uint64_t sub_22266C010(uint64_t a1)
{
  return sub_22266C034(a1, &v2);
}

uint64_t sub_22266C03C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266C068();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266C06C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDA18;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266C0D0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_65();

  j__free(v0);
}

uint64_t sub_22266C0F8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266C068(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266C170(uint64_t a1, uint64_t a2)
{
  return sub_22266C068(a2, a1 + 8);
}

uint64_t sub_22266C184(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266C18C(uint64_t a1, uint64_t a2)
{
  return sub_22266C194(a2);
}

void sub_22266C19C()
{
}

void sub_22266C1A4()
{
}

uint64_t sub_22266C1B8(uint64_t a1)
{
  return sub_22266C1DC(a1, &v2);
}

uint64_t sub_22266C1E4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266C210();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266C214(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDA60;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266C278()
{
  uint64_t v0 = (void *)j_j_nullsub_1_66();

  j__free(v0);
}

uint64_t sub_22266C2A0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266C210(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266C318(uint64_t a1, uint64_t a2)
{
  return sub_22266C210(a2, a1 + 8);
}

uint64_t sub_22266C32C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266C334(uint64_t a1, uint64_t a2)
{
  return sub_22266C33C(a2);
}

uint64_t sub_22266C344(unsigned int *a1, uint64_t a2)
{
  return sub_22266C34C(*a1, a2);
}

uint64_t sub_22266C34C(uint64_t a1, uint64_t a2)
{
  if ((int)a1 >= 0) {
    a1 = a1;
  }
  else {
    a1 = -(int)a1;
  }
  return nullsub_1(a1, a2);
}

uint64_t sub_22266C358(uint64_t a1)
{
  return sub_22266C37C(a1, &v2);
}

uint64_t sub_22266C384(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266C3B0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266C3B4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDAA8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266C418()
{
  uint64_t v0 = (void *)j_j_nullsub_1_67();

  j__free(v0);
}

uint64_t sub_22266C440(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266C3B0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266C4B8(uint64_t a1, uint64_t a2)
{
  return sub_22266C3B0(a2, a1 + 8);
}

uint64_t sub_22266C4CC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266C4D4(uint64_t a1, uint64_t a2)
{
  return sub_22266C4DC(a2);
}

void sub_22266C4E4()
{
}

void sub_22266C4EC()
{
}

uint64_t sub_22266C4F8(uint64_t a1)
{
  return sub_22266C51C(a1, &v2);
}

uint64_t sub_22266C524(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266C550();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266C554(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDAF0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266C5B8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_68();

  j__free(v0);
}

uint64_t sub_22266C5E0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266C550(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266C658(uint64_t a1, uint64_t a2)
{
  return sub_22266C550(a2, a1 + 8);
}

uint64_t sub_22266C66C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266C674(uint64_t a1, uint64_t a2)
{
  return sub_22266C67C(a2);
}

uint64_t sub_22266C684(int *a1, uint64_t a2)
{
  return sub_22266C68C(*a1, a2);
}

uint64_t sub_22266C68C(int a1, uint64_t a2)
{
  if (a1 < 0) {
    uint64_t v2 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v2 = a1 != 0;
  }
  return nullsub_1(v2, a2);
}

uint64_t sub_22266C69C(uint64_t a1)
{
  return sub_22266C6C0(a1, &v2);
}

uint64_t sub_22266C6C8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266C6F4();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266C6F8(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDB38;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266C75C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_69();

  j__free(v0);
}

uint64_t sub_22266C784(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266C6F4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266C7FC(uint64_t a1, uint64_t a2)
{
  return sub_22266C6F4(a2, a1 + 8);
}

uint64_t sub_22266C810(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266C818(uint64_t a1, uint64_t a2)
{
  return sub_22266C820(a2);
}

void sub_22266C828(int *a1)
{
}

void sub_22266C830(int a1)
{
  sub_22266C85C(*(float *)&a1);

  sub_222666D10();
}

float sub_22266C85C(float a1)
{
  BOOL v1 = a1 == 0.0;
  BOOL v2 = a1 < 0.0;
  float result = 1.0;
  if (v1) {
    float result = 0.0;
  }
  if (v2) {
    return -1.0;
  }
  return result;
}

uint64_t sub_22266C878(uint64_t a1)
{
  return sub_22266C89C(a1, &v2);
}

uint64_t sub_22266C8A4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266C8D0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266C8D4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDB80;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266C938()
{
  uint64_t v0 = (void *)j_j_nullsub_1_70();

  j__free(v0);
}

uint64_t sub_22266C960(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266C8D0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266C9D8(uint64_t a1, uint64_t a2)
{
  return sub_22266C8D0(a2, a1 + 8);
}

uint64_t sub_22266C9EC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266C9F4(uint64_t a1, uint64_t a2)
{
  return sub_22266C9FC(a2);
}

void sub_22266CA04()
{
}

void sub_22266CA0C()
{
}

uint64_t sub_22266CA18(uint64_t a1)
{
  return sub_22266CA3C(a1, &v2);
}

uint64_t sub_22266CA44(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266CA70();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266CA74(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDBC8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266CAD8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_71();

  j__free(v0);
}

uint64_t sub_22266CB00(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266CA70(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266CB78(uint64_t a1, uint64_t a2)
{
  return sub_22266CA70(a2, a1 + 8);
}

uint64_t sub_22266CB8C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266CB94(uint64_t a1, uint64_t a2)
{
  return sub_22266CB9C(a2);
}

void sub_22266CBA4()
{
}

void sub_22266CBAC()
{
}

uint64_t sub_22266CBB8(uint64_t a1)
{
  return sub_22266CBDC(a1, &v2);
}

uint64_t sub_22266CBE4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266CC10();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266CC14(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDC10;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266CC78()
{
  uint64_t v0 = (void *)j_j_nullsub_1_72();

  j__free(v0);
}

uint64_t sub_22266CCA0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266CC10(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266CD18(uint64_t a1, uint64_t a2)
{
  return sub_22266CC10(a2, a1 + 8);
}

uint64_t sub_22266CD2C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266CD34(uint64_t a1, uint64_t a2)
{
  return sub_22266CD3C(a2);
}

void sub_22266CD44()
{
}

void sub_22266CD4C()
{
}

uint64_t sub_22266CD58(uint64_t a1)
{
  return sub_22266CD7C(a1, &v2);
}

uint64_t sub_22266CD84(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266CDB0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266CDB4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDC58;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266CE18()
{
  uint64_t v0 = (void *)j_j_nullsub_1_73();

  j__free(v0);
}

uint64_t sub_22266CE40(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266CDB0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266CEB8(uint64_t a1, uint64_t a2)
{
  return sub_22266CDB0(a2, a1 + 8);
}

uint64_t sub_22266CECC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266CED4(uint64_t a1, uint64_t a2)
{
  return sub_22266CEDC(a2);
}

void sub_22266CEE4(int *a1)
{
}

void sub_22266CEEC(int a1)
{
  sub_22266CF18(*(float *)&a1);

  sub_222666D10();
}

void sub_22266CF18(float a1)
{
  float v1 = fabsf(a1);
  float v2 = floorf(v1);
  if ((float)(v1 - v2) == 0.5) {
    fmodf(v2, 2.0);
  }
}

uint64_t sub_22266CF88(uint64_t a1)
{
  return sub_22266CFAC(a1, &v2);
}

uint64_t sub_22266CFB4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266CFE0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266CFE4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDCA0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266D048()
{
  uint64_t v0 = (void *)j_j_nullsub_1_74();

  j__free(v0);
}

uint64_t sub_22266D070(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266CFE0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266D0E8(uint64_t a1, uint64_t a2)
{
  return sub_22266CFE0(a2, a1 + 8);
}

uint64_t sub_22266D0FC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266D104(uint64_t a1, uint64_t a2)
{
  return sub_22266D10C(a2);
}

void sub_22266D114()
{
}

void sub_22266D11C()
{
}

uint64_t sub_22266D128(uint64_t a1)
{
  return sub_22266D14C(a1, &v2);
}

uint64_t sub_22266D154(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266D180();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266D184(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DDCE8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266D1E8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_75();

  j__free(v0);
}

uint64_t sub_22266D210(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266D180(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266D288(uint64_t a1, uint64_t a2)
{
  return sub_22266D180(a2, a1 + 8);
}

uint64_t sub_22266D29C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266D2A4(uint64_t a1, uint64_t a2)
{
  return sub_22266D2AC(a2);
}

void sub_22266D2B4()
{
}

void sub_22266D2BC()
{
}

uint64_t sub_22266D2CC(uint64_t a1)
{
  return sub_22266D2F0(a1, &v2);
}

uint64_t sub_22266D2F8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266D324();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266D328(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DDD30;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266D38C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_76();

  j__free(v0);
}

uint64_t sub_22266D3B4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266D324(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266D42C(uint64_t a1, uint64_t a2)
{
  return sub_22266D324(a2, a1 + 8);
}

uint64_t sub_22266D440(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266D448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266D454(a2, a3);
}

void sub_22266D45C()
{
}

void sub_22266D468()
{
}

uint64_t sub_22266D480(uint64_t a1)
{
  return sub_22266D4A4(a1, &v2);
}

uint64_t sub_22266D4AC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266D4D8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266D4DC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DDD78;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266D540()
{
  uint64_t v0 = (void *)j_j_nullsub_1_77();

  j__free(v0);
}

uint64_t sub_22266D568(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266D4D8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266D5E0(uint64_t a1, uint64_t a2)
{
  return sub_22266D4D8(a2, a1 + 8);
}

uint64_t sub_22266D5F4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266D5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266D608(a2, a3);
}

uint64_t sub_22266D610(unsigned int *a1, int *a2)
{
  return sub_22266D61C(*a1, *a2);
}

uint64_t sub_22266D61C(uint64_t a1, int a2)
{
  uint64_t v2 = sub_22266D644(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_22266D644(uint64_t result, int a2)
{
  if ((int)result >= a2) {
    return a2;
  }
  else {
    return result;
  }
}

uint64_t sub_22266D650(uint64_t a1)
{
  return sub_22266D674(a1, &v2);
}

uint64_t sub_22266D67C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266D6A8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266D6AC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DDDC0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266D710()
{
  uint64_t v0 = (void *)j_j_nullsub_1_78();

  j__free(v0);
}

uint64_t sub_22266D738(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266D6A8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266D7B0(uint64_t a1, uint64_t a2)
{
  return sub_22266D6A8(a2, a1 + 8);
}

uint64_t sub_22266D7C4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266D7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266D7D8(a2, a3);
}

uint64_t sub_22266D7E0(unsigned int *a1, unsigned int *a2)
{
  return sub_22266D7EC(*a1, *a2);
}

uint64_t sub_22266D7EC(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = sub_22266D814(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_22266D814(uint64_t result, unsigned int a2)
{
  if (result >= a2) {
    return a2;
  }
  else {
    return result;
  }
}

uint64_t sub_22266D820(uint64_t a1)
{
  return sub_22266D844(a1, &v2);
}

uint64_t sub_22266D84C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266D878();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266D87C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DDE08;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266D8E0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_79();

  j__free(v0);
}

uint64_t sub_22266D908(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266D878(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266D980(uint64_t a1, uint64_t a2)
{
  return sub_22266D878(a2, a1 + 8);
}

uint64_t sub_22266D994(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266D99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266D9A8(a2, a3);
}

void sub_22266D9B0(int *a1, int *a2)
{
}

void sub_22266D9BC(int a1, int a2)
{
  sub_22266D9EC(*(float *)&a1, *(float *)&a2);

  sub_222666D10();
}

float sub_22266D9EC(float result, float a2)
{
  if (result >= a2) {
    return a2;
  }
  return result;
}

uint64_t sub_22266D9F8(uint64_t a1)
{
  return sub_22266DA1C(a1, &v2);
}

uint64_t sub_22266DA24(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266DA50();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266DA54(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DDE50;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266DAB8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_80();

  j__free(v0);
}

uint64_t sub_22266DAE0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266DA50(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266DB58(uint64_t a1, uint64_t a2)
{
  return sub_22266DA50(a2, a1 + 8);
}

uint64_t sub_22266DB6C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266DB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266DB80(a2, a3);
}

uint64_t sub_22266DB88(unsigned int *a1, int *a2)
{
  return sub_22266DB94(*a1, *a2);
}

uint64_t sub_22266DB94(uint64_t a1, int a2)
{
  uint64_t v2 = sub_22266DBBC(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_22266DBBC(uint64_t result, int a2)
{
  if ((int)result <= a2) {
    return a2;
  }
  else {
    return result;
  }
}

uint64_t sub_22266DBC8(uint64_t a1)
{
  return sub_22266DBEC(a1, &v2);
}

uint64_t sub_22266DBF4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266DC20();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266DC24(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DDE98;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266DC88()
{
  uint64_t v0 = (void *)j_j_nullsub_1_81();

  j__free(v0);
}

uint64_t sub_22266DCB0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266DC20(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266DD28(uint64_t a1, uint64_t a2)
{
  return sub_22266DC20(a2, a1 + 8);
}

uint64_t sub_22266DD3C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266DD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266DD50(a2, a3);
}

uint64_t sub_22266DD58(unsigned int *a1, unsigned int *a2)
{
  return sub_22266DD64(*a1, *a2);
}

uint64_t sub_22266DD64(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = sub_22266DD8C(a1, a2);

  return nullsub_1(v2, v3);
}

uint64_t sub_22266DD8C(uint64_t result, unsigned int a2)
{
  if (result <= a2) {
    return a2;
  }
  else {
    return result;
  }
}

uint64_t sub_22266DD98(uint64_t a1)
{
  return sub_22266DDBC(a1, &v2);
}

uint64_t sub_22266DDC4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266DDF0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266DDF4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DDEE0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266DE58()
{
  uint64_t v0 = (void *)j_j_nullsub_1_82();

  j__free(v0);
}

uint64_t sub_22266DE80(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266DDF0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266DEF8(uint64_t a1, uint64_t a2)
{
  return sub_22266DDF0(a2, a1 + 8);
}

uint64_t sub_22266DF0C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266DF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266DF20(a2, a3);
}

void sub_22266DF28(int *a1, int *a2)
{
}

void sub_22266DF34(int a1, int a2)
{
  sub_22266DF64(*(float *)&a1, *(float *)&a2);

  sub_222666D10();
}

float sub_22266DF64(float result, float a2)
{
  if (result <= a2) {
    return a2;
  }
  return result;
}

uint64_t sub_22266DF70(uint64_t a1)
{
  return sub_22266DF94(a1, &v2);
}

uint64_t sub_22266DF9C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266DFC8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266DFCC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266E02C(a1) = &unk_26D4DDF28;
  sub_222665BE4(a2, a3);
  return a1;
}

void *sub_22266E02C(void *result)
{
  *uint64_t result = &unk_26D4DDF70;
  return result;
}

void sub_22266E050()
{
  uint64_t v0 = (void *)j_j_nullsub_1_83();

  j__free(v0);
}

uint64_t sub_22266E078(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266DFC8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266E0F0(uint64_t a1, uint64_t a2)
{
  return sub_22266DFC8(a2, a1 + 8);
}

uint64_t sub_22266E104(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266E10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22266E124(a2, a3, a4);
}

uint64_t sub_22266E12C(unsigned int *a1, int *a2, int *a3)
{
  return sub_22266E13C(*a1, *a2, *a3);
}

uint64_t sub_22266E13C(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = sub_22266E164(a1, a2, a3);

  return nullsub_1(v3, v4);
}

uint64_t sub_22266E164(uint64_t a1, int a2, int a3)
{
  uint64_t v4 = sub_22266DBBC(a1, a2);

  return sub_22266D644(v4, a3);
}

void *sub_22266E1A4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_22266E228(uint64_t a1)
{
  return sub_22266E24C(a1, &v2);
}

uint64_t sub_22266E254(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266E280();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266E284(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266E02C(a1) = &unk_26D4DDFB8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266E2E8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_84();

  j__free(v0);
}

uint64_t sub_22266E310(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266E280(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266E388(uint64_t a1, uint64_t a2)
{
  return sub_22266E280(a2, a1 + 8);
}

uint64_t sub_22266E39C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266E3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22266E3B4(a2, a3, a4);
}

uint64_t sub_22266E3BC(unsigned int *a1, unsigned int *a2, unsigned int *a3)
{
  return sub_22266E3CC(*a1, *a2, *a3);
}

uint64_t sub_22266E3CC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = sub_22266E3F4(a1, a2, a3);

  return nullsub_1(v3, v4);
}

uint64_t sub_22266E3F4(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4 = sub_22266DD8C(a1, a2);

  return sub_22266D814(v4, a3);
}

uint64_t sub_22266E42C(uint64_t a1)
{
  return sub_22266E450(a1, &v2);
}

uint64_t sub_22266E458(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266E484();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266E488(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266E02C(a1) = &unk_26D4DE000;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266E4EC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_85();

  j__free(v0);
}

uint64_t sub_22266E514(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266E484(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266E58C(uint64_t a1, uint64_t a2)
{
  return sub_22266E484(a2, a1 + 8);
}

uint64_t sub_22266E5A0(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266E5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22266E5B8(a2, a3, a4);
}

void sub_22266E5C0(int *a1, int *a2, int *a3)
{
}

void sub_22266E5D0(int a1, int a2, int a3)
{
  sub_2226648A8(*(float *)&a1, *(float *)&a2, *(float *)&a3);

  sub_222666D10();
}

uint64_t sub_22266E604(uint64_t a1)
{
  return sub_22266E628(a1, &v2);
}

uint64_t sub_22266E630(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266E65C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266E660(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266E02C(a1) = &unk_26D4DE048;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266E6C4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_86();

  j__free(v0);
}

uint64_t sub_22266E6EC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266E65C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266E764(uint64_t a1, uint64_t a2)
{
  return sub_22266E65C(a2, a1 + 8);
}

uint64_t sub_22266E778(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266E780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22266E790(a2, a3, a4);
}

void sub_22266E798()
{
}

void sub_22266E7A8()
{
}

uint64_t sub_22266E7C8(uint64_t a1)
{
  return sub_22266E7EC(a1, &v2);
}

uint64_t sub_22266E7F4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266E820();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266E824(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE090;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266E888()
{
  uint64_t v0 = (void *)j_j_nullsub_1_87();

  j__free(v0);
}

uint64_t sub_22266E8B0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266E820(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266E928(uint64_t a1, uint64_t a2)
{
  return sub_22266E820(a2, a1 + 8);
}

uint64_t sub_22266E93C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266E944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22266E950(a2, a3);
}

void sub_22266E958()
{
}

void sub_22266E964()
{
}

uint64_t sub_22266E980(uint64_t a1)
{
  return sub_22266E9A4(a1, &v2);
}

uint64_t sub_22266E9AC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266E9D8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266E9DC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_22266E02C(a1) = &unk_26D4DE0D8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266EA40()
{
  uint64_t v0 = (void *)j_j_nullsub_1_88();

  j__free(v0);
}

uint64_t sub_22266EA68(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266E9D8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266EAE0(uint64_t a1, uint64_t a2)
{
  return sub_22266E9D8(a2, a1 + 8);
}

uint64_t sub_22266EAF4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266EAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22266EB0C(a2, a3, a4);
}

void sub_22266EB14(int *a1, int *a2, int *a3)
{
}

void sub_22266EB24(int a1, int a2, int a3)
{
  sub_2226648A8((float)(*(float *)&a3 - *(float *)&a1) / (float)(*(float *)&a2 - *(float *)&a1), 0.0, 1.0);

  sub_222666D10();
}

uint64_t sub_22266EB80(uint64_t a1)
{
  return sub_22266EBA4(a1, &v2);
}

uint64_t sub_22266EBAC(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266EBD8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266EBDC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DE120;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266EC40()
{
  uint64_t v0 = (void *)j_j_nullsub_1_89();

  j__free(v0);
}

uint64_t sub_22266EC68(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266EBD8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266ECE0(uint64_t a1, uint64_t a2)
{
  return sub_22266EBD8(a2, a1 + 8);
}

uint64_t sub_22266ECF4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266ECFC(uint64_t a1, uint64_t a2)
{
  return sub_22266ED04(a2);
}

uint64_t sub_22266ED0C()
{
  return sub_22266ED14();
}

uint64_t sub_22266ED14()
{
  uint64_t v0 = sub_2225CD15C();

  return nullsub_1(v0, v1);
}

uint64_t sub_22266ED40(uint64_t a1)
{
  return sub_22266ED64(a1, &v2);
}

uint64_t sub_22266ED6C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266ED98();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266ED9C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DE168;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266EE00()
{
  uint64_t v0 = (void *)j_j_nullsub_1_90();

  j__free(v0);
}

uint64_t sub_22266EE28(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266ED98(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266EEA0(uint64_t a1, uint64_t a2)
{
  return sub_22266ED98(a2, a1 + 8);
}

uint64_t sub_22266EEB4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266EEBC(uint64_t a1, uint64_t a2)
{
  return sub_22266EEC4(a2);
}

uint64_t sub_22266EECC(int *a1)
{
  return sub_22266EED4(*a1);
}

uint64_t sub_22266EED4(int a1)
{
  BOOL v1 = sub_2225CD12C(*(float *)&a1);

  return nullsub_1(v1, v2);
}

uint64_t sub_22266EF00(uint64_t a1)
{
  return sub_22266EF24(a1, &v2);
}

uint64_t sub_22266EF2C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266EF58();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266EF5C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DE1B0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266EFC0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_91();

  j__free(v0);
}

uint64_t sub_22266EFE8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266EF58(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266F060(uint64_t a1, uint64_t a2)
{
  return sub_22266EF58(a2, a1 + 8);
}

uint64_t sub_22266F074(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266F07C(uint64_t a1, uint64_t a2)
{
  return sub_22266F084(a2);
}

uint64_t sub_22266F08C(uint64_t a1)
{
  return sub_22266F0B0(a1, &v2);
}

uint64_t sub_22266F0B8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266F0E4();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266F0E8(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DE1F8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266F14C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_92();

  j__free(v0);
}

uint64_t sub_22266F174(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266F0E4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266F1EC(uint64_t a1, uint64_t a2)
{
  return sub_22266F0E4(a2, a1 + 8);
}

uint64_t sub_22266F200(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266F208(uint64_t a1, uint64_t a2)
{
  return sub_22266F084(a2);
}

uint64_t sub_22266F210(uint64_t a1)
{
  return sub_22266F234(a1, &v2);
}

uint64_t sub_22266F23C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266F268();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266F26C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE240;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266F2D0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_93();

  j__free(v0);
}

uint64_t sub_22266F2F8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266F268(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266F370(uint64_t a1, uint64_t a2)
{
  return sub_22266F268(a2, a1 + 8);
}

uint64_t sub_22266F384(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266F38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226674DC(a2, a3);
}

uint64_t sub_22266F398(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22266F3C0(a1, &v3);
}

uint64_t sub_22266F3C8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266F3F4();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266F3F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222669C18(a1);
  *uint64_t v6 = &unk_26D4DE288;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void sub_22266F45C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_94();

  j__free(v0);
}

uint64_t sub_22266F484(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266F3F4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266F4FC(uint64_t a1, uint64_t a2)
{
  return sub_22266F3F4(a2, a1 + 8);
}

uint64_t sub_22266F510(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266F518(uint64_t a1)
{
  return sub_22266F520(a1 + 8);
}

void sub_22266F528()
{
}

void sub_22266F530()
{
}

uint64_t sub_22266F544(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22266F56C(a1, &v3);
}

uint64_t sub_22266F574(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266F5A0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266F5A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222669C18(a1);
  *uint64_t v6 = &unk_26D4DE2D0;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void sub_22266F608()
{
  uint64_t v0 = (void *)j_j_nullsub_1_95();

  j__free(v0);
}

uint64_t sub_22266F630(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266F5A0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266F6A8(uint64_t a1, uint64_t a2)
{
  return sub_22266F5A0(a2, a1 + 8);
}

uint64_t sub_22266F6BC(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266F6C4(uint64_t a1)
{
  return sub_22266F6CC(a1 + 8);
}

void sub_22266F6D4()
{
}

void sub_22266F6DC()
{
}

uint64_t sub_22266F6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22266F720(a1, &v3);
}

uint64_t sub_22266F728(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266F754();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266F758(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222665BC4(a1);
  *uint64_t v6 = &unk_26D4DE318;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void sub_22266F7BC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_96();

  j__free(v0);
}

uint64_t sub_22266F7E4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266F754(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266F85C(uint64_t a1, uint64_t a2)
{
  return sub_22266F754(a2, a1 + 8);
}

uint64_t sub_22266F870(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266F878(uint64_t a1)
{
  return sub_22266F880(a1 + 8);
}

void sub_22266F888()
{
}

void sub_22266F894()
{
}

uint64_t sub_22266F8AC(uint64_t a1)
{
  return sub_22266F8D0(a1, &v2);
}

uint64_t sub_22266F8D8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266F904();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266F908(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DE360;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266F96C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_97();

  j__free(v0);
}

uint64_t sub_22266F994(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266F904(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266FA0C(uint64_t a1, uint64_t a2)
{
  return sub_22266F904(a2, a1 + 8);
}

uint64_t sub_22266FA20(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266FA28(uint64_t a1, uint64_t a2)
{
  return sub_22266FA30(a2);
}

void sub_22266FA3C()
{
}

uint64_t sub_22266FA50(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  uint64_t v4 = sub_22266FAD8();
  sub_22261870C(&v7, (uint64_t)&v9);
  sub_2225E31DC((uint64_t)v8, v4);
  uint64_t v5 = sub_2225C3C70((uint64_t)v8);
  sub_22266FAE4(v5, a2);
  *(void *)(a1 + 24) = sub_222658AD8(v8);
  sub_22266FAE8(v8);
  return a1;
}

uint64_t sub_22266FAD8()
{
  return sub_2225CBA78(32, 8);
}

void *sub_22266FAEC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222665BC4(a1);
  *uint64_t v6 = &unk_26D4DE3A8;
  sub_22266FB4C(v6 + 1, a2, a3);
  return a1;
}

void sub_22266FB54()
{
  uint64_t v0 = (void *)j_j_nullsub_1_98();

  j__free(v0);
}

uint64_t sub_22266FB7C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_22266FAD8();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266FAE4(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_22266FAE8(v7);
  return v4;
}

uint64_t sub_22266FBF4(uint64_t a1, uint64_t a2)
{
  return sub_22266FAE4(a2, a1 + 8);
}

uint64_t sub_22266FC08(uint64_t a1)
{
  return sub_22266FD48(a1, 1);
}

uint64_t sub_22266FC10(uint64_t a1)
{
  return sub_22266FD54(a1 + 8);
}

uint64_t sub_22266FC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  sub_222658A5C(a3);

  return sub_22266FC70(a1, v5);
}

uint64_t sub_22266FC78(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a2;
  uint64_t v3 = sub_2225CC180((uint64_t)&v6);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t *sub_22266FCC0(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_22266FCE8(uint64_t *result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    uint64_t v2 = sub_2225E563C((uint64_t)result);
    return (uint64_t *)sub_22266FD34(v2, v1);
  }
  return result;
}

uint64_t sub_22266FD34(uint64_t a1, uint64_t a2)
{
  return sub_22266FD44(a2, *(void *)(a1 + 8));
}

uint64_t sub_22266FD48(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA08(a1, 32 * a2, 8);
}

void sub_22266FD5C()
{
}

void sub_22266FD68()
{
}

uint64_t sub_22266FD98(uint64_t a1)
{
  return sub_22266FDBC(a1, &v2);
}

uint64_t sub_22266FDC4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266FDF0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266FDF4(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE3F0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266FE58()
{
  uint64_t v0 = (void *)j_j_nullsub_1_99();

  j__free(v0);
}

uint64_t sub_22266FE80(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266FDF0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22266FEF8(uint64_t a1, uint64_t a2)
{
  return sub_22266FDF0(a2, a1 + 8);
}

uint64_t sub_22266FF0C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22266FF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668B28(a2, a3);
}

uint64_t sub_22266FF20(uint64_t a1)
{
  return sub_22266FF44(a1, &v2);
}

uint64_t sub_22266FF4C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22266FF78();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22266FF7C(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE438;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22266FFE0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_100();

  j__free(v0);
}

uint64_t sub_222670008(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22266FF78(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670080(uint64_t a1, uint64_t a2)
{
  return sub_22266FF78(a2, a1 + 8);
}

uint64_t sub_222670094(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_22267009C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222668B28(a2, a3);
}

uint64_t sub_2226700A8(uint64_t a1)
{
  return sub_2226700CC(a1, &v2);
}

uint64_t sub_2226700D4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222670100();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222670104(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE480;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222670168()
{
  uint64_t v0 = (void *)j_j_nullsub_1_101();

  j__free(v0);
}

uint64_t sub_222670190(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222670100(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670208(uint64_t a1, uint64_t a2)
{
  return sub_222670100(a2, a1 + 8);
}

uint64_t sub_22267021C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222670224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222670230(a2, a3);
}

uint64_t sub_222670238(int *a1, unsigned int *a2)
{
  return sub_222670244(*a1, *a2);
}

uint64_t sub_222670244(int a1, uint64_t a2)
{
  return nullsub_1(a1 < (int)a2, a2);
}

uint64_t sub_222670250(uint64_t a1)
{
  return sub_222670274(a1, &v2);
}

uint64_t sub_22267027C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226702A8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226702AC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE4C8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222670310()
{
  uint64_t v0 = (void *)j_j_nullsub_1_102();

  j__free(v0);
}

uint64_t sub_222670338(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226702A8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226703B0(uint64_t a1, uint64_t a2)
{
  return sub_2226702A8(a2, a1 + 8);
}

uint64_t sub_2226703C4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226703CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226703D8(a2, a3);
}

uint64_t sub_2226703E0(unsigned int *a1, unsigned int *a2)
{
  return sub_2226703EC(*a1, *a2);
}

uint64_t sub_2226703EC(unsigned int a1, uint64_t a2)
{
  return nullsub_1(a1 < a2, a2);
}

uint64_t sub_2226703F8(uint64_t a1)
{
  return sub_22267041C(a1, &v2);
}

uint64_t sub_222670424(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222670450();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222670454(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE510;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226704B8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_103();

  j__free(v0);
}

uint64_t sub_2226704E0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222670450(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670558(uint64_t a1, uint64_t a2)
{
  return sub_222670450(a2, a1 + 8);
}

uint64_t sub_22267056C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222670574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222670580(a2, a3);
}

uint64_t sub_222670588(int *a1, unsigned int *a2)
{
  return sub_222670594(*a1, *a2);
}

uint64_t sub_222670594(int a1, uint64_t a2)
{
  return nullsub_1(*(float *)&a1 < *(float *)&a2, a2);
}

uint64_t sub_2226705A8(uint64_t a1)
{
  return sub_2226705CC(a1, &v2);
}

uint64_t sub_2226705D4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222670600();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222670604(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE558;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222670668()
{
  uint64_t v0 = (void *)j_j_nullsub_1_104();

  j__free(v0);
}

uint64_t sub_222670690(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222670600(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670708(uint64_t a1, uint64_t a2)
{
  return sub_222670600(a2, a1 + 8);
}

uint64_t sub_22267071C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222670724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222670730(a2, a3);
}

uint64_t sub_222670738(int *a1, unsigned int *a2)
{
  return sub_222670744(*a1, *a2);
}

uint64_t sub_222670744(int a1, uint64_t a2)
{
  return nullsub_1(a1 <= (int)a2, a2);
}

uint64_t sub_222670750(uint64_t a1)
{
  return sub_222670774(a1, &v2);
}

uint64_t sub_22267077C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226707A8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226707AC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE5A0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222670810()
{
  uint64_t v0 = (void *)j_j_nullsub_1_105();

  j__free(v0);
}

uint64_t sub_222670838(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226707A8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226708B0(uint64_t a1, uint64_t a2)
{
  return sub_2226707A8(a2, a1 + 8);
}

uint64_t sub_2226708C4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226708CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226708D8(a2, a3);
}

uint64_t sub_2226708E0(unsigned int *a1, unsigned int *a2)
{
  return sub_2226708EC(*a1, *a2);
}

uint64_t sub_2226708EC(unsigned int a1, uint64_t a2)
{
  return nullsub_1(a1 <= a2, a2);
}

uint64_t sub_2226708F8(uint64_t a1)
{
  return sub_22267091C(a1, &v2);
}

uint64_t sub_222670924(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222670950();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222670954(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE5E8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226709B8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_106();

  j__free(v0);
}

uint64_t sub_2226709E0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222670950(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670A58(uint64_t a1, uint64_t a2)
{
  return sub_222670950(a2, a1 + 8);
}

uint64_t sub_222670A6C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222670A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222670A80(a2, a3);
}

uint64_t sub_222670A88(int *a1, unsigned int *a2)
{
  return sub_222670A94(*a1, *a2);
}

uint64_t sub_222670A94(int a1, uint64_t a2)
{
  return nullsub_1(*(float *)&a1 <= *(float *)&a2, a2);
}

uint64_t sub_222670AA8(uint64_t a1)
{
  return sub_222670ACC(a1, &v2);
}

uint64_t sub_222670AD4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222670B00();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222670B04(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE630;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222670B68()
{
  uint64_t v0 = (void *)j_j_nullsub_1_107();

  j__free(v0);
}

uint64_t sub_222670B90(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222670B00(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670C08(uint64_t a1, uint64_t a2)
{
  return sub_222670B00(a2, a1 + 8);
}

uint64_t sub_222670C1C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222670C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222670C30(a2, a3);
}

uint64_t sub_222670C38(int *a1, unsigned int *a2)
{
  return sub_222670C44(*a1, *a2);
}

uint64_t sub_222670C44(int a1, uint64_t a2)
{
  return nullsub_1(a1 > (int)a2, a2);
}

uint64_t sub_222670C50(uint64_t a1)
{
  return sub_222670C74(a1, &v2);
}

uint64_t sub_222670C7C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222670CA8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222670CAC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE678;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222670D10()
{
  uint64_t v0 = (void *)j_j_nullsub_1_108();

  j__free(v0);
}

uint64_t sub_222670D38(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222670CA8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670DB0(uint64_t a1, uint64_t a2)
{
  return sub_222670CA8(a2, a1 + 8);
}

uint64_t sub_222670DC4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222670DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222670DD8(a2, a3);
}

uint64_t sub_222670DE0(unsigned int *a1, unsigned int *a2)
{
  return sub_222670DEC(*a1, *a2);
}

uint64_t sub_222670DEC(unsigned int a1, uint64_t a2)
{
  return nullsub_1(a1 > a2, a2);
}

uint64_t sub_222670DF8(uint64_t a1)
{
  return sub_222670E1C(a1, &v2);
}

uint64_t sub_222670E24(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222670E50();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222670E54(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE6C0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222670EB8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_109();

  j__free(v0);
}

uint64_t sub_222670EE0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222670E50(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222670F58(uint64_t a1, uint64_t a2)
{
  return sub_222670E50(a2, a1 + 8);
}

uint64_t sub_222670F6C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222670F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222670F80(a2, a3);
}

uint64_t sub_222670F88(int *a1, unsigned int *a2)
{
  return sub_222670F94(*a1, *a2);
}

uint64_t sub_222670F94(int a1, uint64_t a2)
{
  return nullsub_1(*(float *)&a1 > *(float *)&a2, a2);
}

uint64_t sub_222670FA8(uint64_t a1)
{
  return sub_222670FCC(a1, &v2);
}

uint64_t sub_222670FD4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222671000();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222671004(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE708;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671068()
{
  uint64_t v0 = (void *)j_j_nullsub_1_110();

  j__free(v0);
}

uint64_t sub_222671090(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222671000(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671108(uint64_t a1, uint64_t a2)
{
  return sub_222671000(a2, a1 + 8);
}

uint64_t sub_22267111C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671130(a2, a3);
}

uint64_t sub_222671138(int *a1, unsigned int *a2)
{
  return sub_222671144(*a1, *a2);
}

uint64_t sub_222671144(int a1, uint64_t a2)
{
  return nullsub_1(a1 >= (int)a2, a2);
}

uint64_t sub_222671150(uint64_t a1)
{
  return sub_222671174(a1, &v2);
}

uint64_t sub_22267117C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226711A8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226711AC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE750;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671210()
{
  uint64_t v0 = (void *)j_j_nullsub_1_111();

  j__free(v0);
}

uint64_t sub_222671238(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226711A8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226712B0(uint64_t a1, uint64_t a2)
{
  return sub_2226711A8(a2, a1 + 8);
}

uint64_t sub_2226712C4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226712CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226712D8(a2, a3);
}

uint64_t sub_2226712E0(unsigned int *a1, unsigned int *a2)
{
  return sub_2226712EC(*a1, *a2);
}

uint64_t sub_2226712EC(unsigned int a1, uint64_t a2)
{
  return nullsub_1(a1 >= a2, a2);
}

uint64_t sub_2226712F8(uint64_t a1)
{
  return sub_22267131C(a1, &v2);
}

uint64_t sub_222671324(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222671350();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222671354(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE798;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226713B8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_112();

  j__free(v0);
}

uint64_t sub_2226713E0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222671350(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671458(uint64_t a1, uint64_t a2)
{
  return sub_222671350(a2, a1 + 8);
}

uint64_t sub_22267146C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671480(a2, a3);
}

uint64_t sub_222671488(int *a1, unsigned int *a2)
{
  return sub_222671494(*a1, *a2);
}

uint64_t sub_222671494(int a1, uint64_t a2)
{
  return nullsub_1(*(float *)&a1 >= *(float *)&a2, a2);
}

uint64_t sub_2226714A8(uint64_t a1)
{
  return sub_2226714CC(a1, &v2);
}

uint64_t sub_2226714D4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222671500();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222671504(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE7E0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671568()
{
  uint64_t v0 = (void *)j_j_nullsub_1_113();

  j__free(v0);
}

uint64_t sub_222671590(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222671500(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671608(uint64_t a1, uint64_t a2)
{
  return sub_222671500(a2, a1 + 8);
}

uint64_t sub_22267161C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671630(a2, a3);
}

uint64_t sub_222671638(int *a1, unsigned int *a2)
{
  return sub_222671644(*a1, *a2);
}

uint64_t sub_222671644(int a1, uint64_t a2)
{
  return nullsub_1(a1 == a2, a2);
}

uint64_t sub_222671650(uint64_t a1)
{
  return sub_222671674(a1, &v2);
}

uint64_t sub_22267167C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226716A8();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226716AC(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE828;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671710()
{
  uint64_t v0 = (void *)j_j_nullsub_1_114();

  j__free(v0);
}

uint64_t sub_222671738(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226716A8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226717B0(uint64_t a1, uint64_t a2)
{
  return sub_2226716A8(a2, a1 + 8);
}

uint64_t sub_2226717C4(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226717CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671630(a2, a3);
}

uint64_t sub_2226717D8(uint64_t a1)
{
  return sub_2226717FC(a1, &v2);
}

uint64_t sub_222671804(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222671830();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222671834(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE870;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671898()
{
  uint64_t v0 = (void *)j_j_nullsub_1_115();

  j__free(v0);
}

uint64_t sub_2226718C0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222671830(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671938(uint64_t a1, uint64_t a2)
{
  return sub_222671830(a2, a1 + 8);
}

uint64_t sub_22267194C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671960(a2, a3);
}

uint64_t sub_222671968(int *a1, unsigned int *a2)
{
  return sub_222671974(*a1, *a2);
}

uint64_t sub_222671974(int a1, uint64_t a2)
{
  return nullsub_1(((a2 ^ a1) & 1) == 0, a2);
}

uint64_t sub_222671984(uint64_t a1)
{
  return sub_2226719A8(a1, &v2);
}

uint64_t sub_2226719B0(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226719DC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226719E0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE8B8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671A44()
{
  uint64_t v0 = (void *)j_j_nullsub_1_116();

  j__free(v0);
}

uint64_t sub_222671A6C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226719DC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671AE4(uint64_t a1, uint64_t a2)
{
  return sub_2226719DC(a2, a1 + 8);
}

uint64_t sub_222671AF8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671B0C(a2, a3);
}

uint64_t sub_222671B14(int *a1, unsigned int *a2)
{
  return sub_222671B20(*a1, *a2);
}

uint64_t sub_222671B20(int a1, uint64_t a2)
{
  return nullsub_1(*(float *)&a1 == *(float *)&a2, a2);
}

uint64_t sub_222671B34(uint64_t a1)
{
  return sub_222671B58(a1, &v2);
}

uint64_t sub_222671B60(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222671B8C();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222671B90(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE900;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671BF4()
{
  uint64_t v0 = (void *)j_j_nullsub_1_117();

  j__free(v0);
}

uint64_t sub_222671C1C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222671B8C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671C94(uint64_t a1, uint64_t a2)
{
  return sub_222671B8C(a2, a1 + 8);
}

uint64_t sub_222671CA8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671CBC(a2, a3);
}

uint64_t sub_222671CC4(int *a1, unsigned int *a2)
{
  return sub_222671CD0(*a1, *a2);
}

uint64_t sub_222671CD0(int a1, uint64_t a2)
{
  return nullsub_1(a1 != a2, a2);
}

uint64_t sub_222671CDC(uint64_t a1)
{
  return sub_222671D00(a1, &v2);
}

uint64_t sub_222671D08(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222671D34();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222671D38(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE948;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671D9C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_118();

  j__free(v0);
}

uint64_t sub_222671DC4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222671D34(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671E3C(uint64_t a1, uint64_t a2)
{
  return sub_222671D34(a2, a1 + 8);
}

uint64_t sub_222671E50(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671CBC(a2, a3);
}

uint64_t sub_222671E64(uint64_t a1)
{
  return sub_222671E88(a1, &v2);
}

uint64_t sub_222671E90(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222671EBC();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222671EC0(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE990;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_222671F24()
{
  uint64_t v0 = (void *)j_j_nullsub_1_119();

  j__free(v0);
}

uint64_t sub_222671F4C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222671EBC(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222671FC4(uint64_t a1, uint64_t a2)
{
  return sub_222671EBC(a2, a1 + 8);
}

uint64_t sub_222671FD8(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222671FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222671FEC(a2, a3);
}

uint64_t sub_222671FF4(_DWORD *a1, unsigned int *a2)
{
  return sub_222672000(*a1, *a2);
}

uint64_t sub_222672000(unsigned __int8 a1, uint64_t a2)
{
  return nullsub_1((a2 ^ a1) & 1, a2);
}

uint64_t sub_22267200C(uint64_t a1)
{
  return sub_222672030(a1, &v2);
}

uint64_t sub_222672038(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222672064();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222672068(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222665BC4(a1) = &unk_26D4DE9D8;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226720CC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_120();

  j__free(v0);
}

uint64_t sub_2226720F4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222672064(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22267216C(uint64_t a1, uint64_t a2)
{
  return sub_222672064(a2, a1 + 8);
}

uint64_t sub_222672180(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222672188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222672194(a2, a3);
}

uint64_t sub_22267219C(int *a1, unsigned int *a2)
{
  return sub_2226721A8(*a1, *a2);
}

uint64_t sub_2226721A8(int a1, uint64_t a2)
{
  return nullsub_1(*(float *)&a1 != *(float *)&a2, a2);
}

uint64_t sub_2226721BC(uint64_t a1)
{
  return sub_2226721E0(a1, &v2);
}

uint64_t sub_2226721E8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222672214();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222672218(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_222669C18(a1) = &unk_26D4DEA20;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_22267227C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_121();

  j__free(v0);
}

uint64_t sub_2226722A4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222672214(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_22267231C(uint64_t a1, uint64_t a2)
{
  return sub_222672214(a2, a1 + 8);
}

uint64_t sub_222672330(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222672338(uint64_t a1, uint64_t a2)
{
  return sub_222672340(a2);
}

uint64_t sub_222672348(_DWORD *a1, uint64_t a2)
{
  return sub_222672350(*a1, a2);
}

uint64_t sub_222672350(char a1, uint64_t a2)
{
  return nullsub_1((a1 & 1) == 0, a2);
}

uint64_t sub_22267235C(unsigned int a1, uint64_t a2, unsigned int a3)
{
  return sub_22267236C(a2, a1, a3);
}

uint64_t sub_22267236C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  return sub_2225CC520((uint64_t *)(a1 + 8), a2, a3);
}

uint64_t sub_22267237C(unsigned __int8 *a1)
{
  switch(sub_2226376DC(a1))
  {
    case 1u:
      uint64_t v4 = sub_2225E55A8((uint64_t)a1);
      return sub_222672570(v4);
    case 2u:
      uint64_t v5 = sub_2225E55A8((uint64_t)a1);
      return sub_2225DF8D0(v5);
    case 3u:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_4;
    case 4u:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_4;
    case 5u:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_4;
    case 6u:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_4;
    case 7u:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_4;
    case 8u:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_4;
    case 9u:
      uint64_t v6 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_28;
    case 0xAu:
      uint64_t v6 = sub_2225E55A8((uint64_t)a1);
LABEL_28:
      uint64_t result = sub_2225DAD0C(v6);
      break;
    default:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
LABEL_4:
      uint64_t result = sub_222613088(v2);
      break;
  }
  return result;
}

unsigned int *sub_222672574(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = a5;
  if (sub_2225D3DB0(&v16))
  {
    uint64_t v9 = sub_2225C3C70((uint64_t)&v16);
    if (sub_222661D68(v9))
    {
      uint64_t v10 = sub_2225C3C70((uint64_t)&v16);
      uint64_t v11 = sub_22265E3C0(v10);
      uint64_t v12 = (_WORD *)sub_2225C3D04(v11);
      sub_222672624(v12);
    }
  }
  float v13 = (unsigned int *)sub_22267235C(0x28u, a1, 8u);
  sub_222672634(&v15, a1, a3, a4);
  return sub_222672638(v13, a2, v15, v16);
}

_WORD *sub_222672624(_WORD *result)
{
  *result |= 0x100u;
  return result;
}

unsigned int *sub_222672638(unsigned int *a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_2226730C8(a1, a2, a3, a4);
}

unsigned int *sub_222672640(uint64_t a1, int a2, char a3, char a4)
{
  uint64_t v7 = (unsigned int *)sub_22267235C(0x10u, a1, 8u);

  return sub_22267269C(v7, a2, a3, a4);
}

unsigned int *sub_22267269C(unsigned int *a1, int a2, char a3, char a4)
{
  return sub_222673168(a1, a2, a3, a4);
}

uint64_t sub_2226726A4(uint64_t a1, int a2, int a3)
{
  uint64_t v5 = sub_22267235C(0x18u, a1, 8u);

  return sub_2226726F0(v5, a2, a3);
}

uint64_t sub_2226726F0(uint64_t a1, int a2, int a3)
{
  return sub_2226731E0(a1, a2, a3);
}

uint64_t sub_2226726FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7)
{
  uint64_t v14 = sub_22267235C(0x20u, a1, 8u);
  sub_222672634(&v16, a1, a3, a4);
  return sub_222672798(v14, a2, v16, a5, a6, a7);
}

uint64_t sub_222672798(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  return sub_222673240(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2226727A4(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = sub_22267235C(0x38u, a1, 8u);
  sub_222672634(&v19, a1, a4, a5);
  sub_222672864((_DWORD *)v17, a2, a3, v19, a6, a7);
  sub_222672878((void *)(v17 + 16), a1, a9, a10);
  return v17;
}

_DWORD *sub_222672864(_DWORD *a1, int a2, int a3, uint64_t a4, int a5, int a6)
{
  return sub_222673298(a1, a2, a3, a4, a5, a6);
}

void *sub_222672878(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  int v6 = sub_2225C3D04((uint64_t)&v8);
  sub_22267393C((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

uint64_t sub_2226728CC(uint64_t a1, char a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v18 = sub_22267235C(0x38u, a1, 8u);
  sub_222672634(&v20, a1, a5, a6);
  sub_22267299C(v18, a2, a3, a4, v20, a7, a8);
  sub_2226729B0((void *)(v18 + 16), a1, a9, a10);
  return v18;
}

uint64_t sub_22267299C(uint64_t a1, char a2, int a3, int a4, uint64_t a5, int a6, int a7)
{
  return sub_222673360(a1, a2, a3, a4, a5, a6, a7);
}

void *sub_2226729B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  int v6 = sub_2225C3D04((uint64_t)&v8);
  sub_2226739E8((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

uint64_t sub_222672A04(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_22267235C(0x28u, a1, 8u);

  return sub_222672A60(v7, a2, a3, a4);
}

uint64_t sub_222672A60(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_222673414(a1, a2, a3, a4);
}

uint64_t sub_222672A68(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, char a8, uint64_t a9)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v17 = sub_22267235C(0xB0u, a1, 8u);
  sub_222672634(&v19, a1, a3, a4);
  sub_222672B60(v20, a9);
  sub_222672B64(v17, a2, v19, a5, a6, a7, a8, (uint64_t)v20);
  sub_2225C56C4(v20);
  return v17;
}

uint64_t sub_222672B64(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  return sub_222673474(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_222672B74(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  sub_222672B60(v21, a9);
  uint64_t v19 = sub_222672A68(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v21);
  sub_2225C56C4(v21);
  sub_222672C64((void *)(v19 + 16), a1, a10, a11);
  return v19;
}

void *sub_222672C64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  __int16 v6 = sub_2225C3D04((uint64_t)&v8);
  sub_222673A00((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

uint64_t sub_222672CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222654540(a1);
  uint64_t v6 = v5;
  uint64_t v7 = (const void *)sub_222654540(a2);
  if (sub_2225D1680(v4, v6, v7, v8)) {
    return 0;
  }
  uint64_t v9 = sub_222640540(a1);
  uint64_t v10 = sub_222640540(a2);
  if (!sub_222672E28(v9, v10)) {
    return 0;
  }
  uint64_t v11 = a1 + 16;
  uint64_t v12 = sub_2225CC180(v11);
  uint64_t v13 = sub_222655EEC(v11);
  sub_222672FC0(v28, v12, v13);
  uint64_t v14 = a2 + 16;
  uint64_t v15 = sub_2225CC180(v14);
  uint64_t v16 = sub_222655EEC(v14);
  sub_222672FC0(v27, v15, v16);
  uint64_t v17 = sub_2225C3D04((uint64_t)v28);
  if (v17 != sub_2225C3D04((uint64_t)v27)) {
    return 0;
  }
  if (!sub_2225C3D04((uint64_t)v28)) {
    return 1;
  }
  uint64_t v18 = 0;
  unsigned int v19 = 1;
  do
  {
    uint64_t v20 = (uint64_t *)sub_2225C6BC0(v28, v18);
    uint64_t v21 = sub_2225C5B40(*v20);
    uint64_t v22 = (uint64_t *)sub_2225C6BC0(v27, v18);
    uint64_t v23 = sub_2225C5B40(*v22);
    uint64_t v24 = sub_222672E28(v21, v23);
    if ((v24 & 1) == 0) {
      break;
    }
    uint64_t v18 = v19;
  }
  while (sub_2225C3D04((uint64_t)v28) > (unint64_t)v19++);
  return v24;
}

uint64_t sub_222672E28(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t v2 = (unsigned char *)sub_2225C3C70((uint64_t)&v27);
  int v3 = sub_222654E20(v2);
  uint64_t v4 = (unsigned char *)sub_2225C3C70((uint64_t)&v26);
  if (v3 != sub_222654E20(v4)) {
    return 0;
  }
  uint64_t v5 = sub_2225C3C70((uint64_t)&v27);
  uint64_t v6 = sub_222654B7C(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_2225C3C70((uint64_t)&v26);
    uint64_t v9 = sub_222654B7C(v8);
    LODWORD(v7) = sub_222654EC8(v7);
    if (v7 != sub_222654EC8(v9)) {
      return 0;
    }
  }
  uint64_t v10 = sub_2225C3C70((uint64_t)&v27);
  uint64_t v11 = sub_222654C5C(v10);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_2225C3C70((uint64_t)&v26);
    uint64_t v14 = sub_222654C5C(v13);
    LODWORD(v12) = sub_22267350C(v12);
    if (v12 != sub_22267350C(v14)) {
      return 0;
    }
  }
  uint64_t v15 = sub_2225C3C70((uint64_t)&v27);
  uint64_t v16 = sub_222655B10(v15);
  uint64_t v17 = sub_2225C3C70((uint64_t)&v26);
  uint64_t v18 = sub_222655B10(v17);
  uint64_t result = 0;
  if (!v16 || !v18) {
    return result;
  }
  if (v16 == v18
    || sub_222687F08(v16) && (sub_222687F2C(v18) & 1) != 0
    || sub_222687F2C(v16) && (sub_222687F08(v18) & 1) != 0)
  {
    return 1;
  }
  uint64_t v20 = sub_2225C3C70((uint64_t)&v27);
  uint64_t v21 = sub_222655AF0(v20);
  uint64_t v22 = sub_2225C3C70((uint64_t)&v26);
  uint64_t v23 = sub_222655AF0(v22);
  if (!v21) {
    return 0;
  }
  uint64_t v24 = v23;
  if (!v23) {
    return 0;
  }
  int v25 = sub_222655AF4(v21);
  uint64_t result = sub_222655AF4(v24);
  if (v25 == result) {
    return 1;
  }
  if (v25 || result != 1) {
    return v25 == 1 && !result;
  }
  return result;
}

uint64_t sub_222672FC4(uint64_t a1, int a2)
{
  uint64_t v3 = sub_22267235C(0x18u, a1, 8u);

  return sub_222673008(v3, a2);
}

uint64_t sub_222673008(uint64_t a1, int a2)
{
  return sub_222673520(a1, a2);
}

_WORD *sub_222673010(uint64_t a1, int a2, char a3)
{
  uint64_t v5 = (_WORD *)sub_22267235C(0x10u, a1, 8u);

  return sub_22267305C(v5, a2, a3);
}

_WORD *sub_22267305C(_WORD *a1, int a2, char a3)
{
  return sub_222673578(a1, a2, a3);
}

unsigned int *sub_222673064(uint64_t a1, int a2, unsigned __int8 a3, char a4)
{
  uint64_t v7 = (unsigned int *)sub_22267235C(0x10u, a1, 8u);

  return sub_2226730C0(v7, a2, a3, a4);
}

unsigned int *sub_2226730C0(unsigned int *a1, int a2, unsigned __int8 a3, char a4)
{
  return sub_2226735E8(a1, a2, a3, a4);
}

unsigned int *sub_2226730C8(unsigned int *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_222673124((uint64_t)a1, 0, a2, a3);
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = 0;
  sub_222673134((_WORD *)(v6 + 32));
  sub_222673138(a1, 0);
  sub_222673148(a1, 0);
  return a1;
}

uint64_t sub_222673124(uint64_t result, __int16 a2, int a3, uint64_t a4)
{
  *(void *)(result + 8) = a4;
  *(_DWORD *)uint64_t result = 0;
  *(_DWORD *)(result + 4) = a3;
  *(_WORD *)uint64_t result = a2;
  return result;
}

unsigned int *sub_222673138(unsigned int *result, char a2)
{
  *uint64_t result = *result & 0xFFFF0FFF | ((a2 & 0xF) << 12);
  return result;
}

unsigned int *sub_222673148(unsigned int *result, char a2)
{
  *uint64_t result = *result & 0xFFCFFFFF | ((a2 & 3) << 20);
  return result;
}

_WORD *sub_222673158(_WORD *result)
{
  *result &= 0x8000u;
  return result;
}

unsigned int *sub_222673168(unsigned int *a1, int a2, char a3, char a4)
{
  sub_2225D3A34(&v10);
  uint64_t v8 = (_WORD *)sub_222673124((uint64_t)a1, 5, a2, v10);
  *a1 = ((a3 & 3) << 17) | ((a4 & 0x7F) << 10) | *a1 & 0xFFF803FF;
  sub_222672624(v8);
  return a1;
}

uint64_t sub_2226731E0(uint64_t a1, int a2, int a3)
{
  sub_2225D3A34(&v8);
  uint64_t v6 = (_WORD *)sub_222673124(a1, 4, a2, v8);
  *(_DWORD *)(a1 + 16) = a3;
  sub_222672624(v6);
  return a1;
}

uint64_t sub_222673240(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  uint64_t result = sub_222673124(a1, 1, a2, a3);
  *(void *)(result + 16) = a4;
  *(_DWORD *)(result + 24) = a5;
  *(_DWORD *)uint64_t result = *(_DWORD *)result & 0xFFFE07FF | ((a6 & 3) << 14);
  return result;
}

_DWORD *sub_222673298(_DWORD *a1, int a2, int a3, uint64_t a4, int a5, int a6)
{
  int v13 = a3;
  if (sub_2225F38E8(&v13)) {
    int v11 = a2;
  }
  else {
    int v11 = v13;
  }
  sub_222673328((uint64_t)a1, 9, v11, a4);
  sub_2225E1678(a1 + 4);
  a1[6] = a2;
  a1[7] = a5;
  a1[8] = a6;
  sub_222673330(a1 + 10, a1);
  return a1;
}

uint64_t sub_222673328(uint64_t a1, __int16 a2, int a3, uint64_t a4)
{
  return sub_222673124(a1, a2, a3, a4);
}

unsigned char *sub_222673334(unsigned char *a1, uint64_t a2)
{
  uint64_t result = sub_22265245C(a1, 5);
  *((void *)result + 1) = a2;
  return result;
}

uint64_t sub_222673360(uint64_t a1, char a2, int a3, int a4, uint64_t a5, int a6, int a7)
{
  uint64_t v12 = sub_222673328(a1, 10, a4, a5);
  sub_2225E1678(v12 + 16);
  *(_DWORD *)(a1 + 24) = a3;
  *(_DWORD *)(a1 + 28) = a6;
  *(_DWORD *)(a1 + 32) = a7;
  sub_222673134((_WORD *)(a1 + 36));
  sub_2226733E4(a1 + 40, a1);
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFFE3FF | ((a2 & 7) << 10);
  return a1;
}

unsigned char *sub_2226733E8(unsigned char *a1, uint64_t a2)
{
  uint64_t result = sub_22265245C(a1, 6);
  *((void *)result + 1) = a2;
  return result;
}

uint64_t sub_222673414(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  sub_2225D3A34(&v9);
  uint64_t result = sub_222673124((uint64_t)a1, 3, a2, v9);
  a1[2] = a3;
  a1[3] = a4;
  a1[4] = 0;
  return result;
}

uint64_t sub_222673474(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  uint64_t v14 = sub_222673124(a1, 2, a2, a3);
  sub_2225E1678(v14 + 16);
  *(unsigned char *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = a4;
  *(_DWORD *)(a1 + 36) = a6;
  *(void *)(a1 + 40) = a5;
  *(void *)(a1 + 48) = 0;
  sub_222672B60(a1 + 56, a8);
  *(void *)(a1 + 144) = 0;
  *(_WORD *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFF63FF | ((a7 & 3) << 10);
  return a1;
}

uint64_t sub_22267350C(uint64_t a1)
{
  return ((*(unsigned __int8 *)(a1 + 2) >> 3) & 7) * (*(unsigned char *)(a1 + 2) & 7u);
}

uint64_t sub_222673520(uint64_t a1, int a2)
{
  sub_2225D3A34(&v5);
  uint64_t result = sub_222673124(a1, 6, a2, v5);
  *(void *)(a1 + 16) = 0;
  *(_WORD *)a1 &= 0x83FFu;
  return result;
}

_WORD *sub_222673578(_WORD *a1, int a2, char a3)
{
  sub_2225D3A34(&v8);
  uint64_t v6 = (_WORD *)sub_222673124((uint64_t)a1, 7, a2, v8);
  *a1 = *a1 & 0x83FF | ((a3 & 0x1F) << 10);
  sub_222672624(v6);
  return a1;
}

unsigned int *sub_2226735E8(unsigned int *a1, int a2, unsigned __int8 a3, char a4)
{
  sub_2225D3A34(&v10);
  uint64_t v8 = (_WORD *)sub_222673124((uint64_t)a1, 8, a2, v10);
  *a1 = (a3 << 10) & 0xFFE3FFFF | ((a4 & 7) << 18) | *a1 & 0xFFE003FF;
  sub_222672624(v8);
  return a1;
}

const void **sub_222673660(const void **a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226736A8(a1, (uint64_t)a2);
  }
  return a1;
}

const void **sub_2226736A8(const void **a1, uint64_t a2)
{
  if (a1 != (const void **)a2)
  {
    unint64_t v4 = sub_2225CC780(a2);
    unint64_t v5 = sub_2225CC780((uint64_t)a1);
    if (v5 >= v4)
    {
      if (v4)
      {
        sub_2225C3C70(a2);
        sub_2225C3C70(a2);
        sub_2225C3C70((uint64_t)a1);
        uint64_t v10 = sub_22267383C();
      }
      else
      {
        uint64_t v10 = sub_2225C3C70((uint64_t)a1);
      }
      uint64_t v16 = v10;
      uint64_t v17 = sub_2225C3D04((uint64_t)a1);
      nullsub_1(v16, v17);
      uint64_t v15 = (uint64_t)a1;
      uint64_t v14 = v16;
    }
    else
    {
      unint64_t v6 = v5;
      if (sub_222631630((uint64_t)a1) >= v4)
      {
        if (v6)
        {
          sub_2225C3C70(a2);
          sub_2225C3C70(a2);
          sub_2225C3C70((uint64_t)a1);
          sub_22267383C();
        }
      }
      else
      {
        uint64_t v7 = sub_2225C3C70((uint64_t)a1);
        uint64_t v8 = sub_2225C3D04((uint64_t)a1);
        nullsub_1(v7, v8);
        uint64_t v9 = sub_2225C3C70((uint64_t)a1);
        sub_2225C5B6C((uint64_t)a1, v9);
        sub_2225CC828(a1, v4);
        unint64_t v6 = 0;
      }
      int v11 = (void *)(sub_2225C3C70(a2) + 8 * v6);
      uint64_t v12 = sub_2225C3D04(a2);
      uint64_t v13 = sub_2225C3C70((uint64_t)a1);
      sub_2225D0844(v11, v12, (void *)(v13 + 8 * v6));
      uint64_t v14 = sub_2225C3C70((uint64_t)a1) + 8 * v4;
      uint64_t v15 = (uint64_t)a1;
    }
    sub_2225C5B6C(v15, v14);
  }
  return a1;
}

uint64_t sub_22267383C()
{
  sub_222673858();
  return v0;
}

uint64_t *sub_22267385C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[0] = a3;
  v15[1] = a4;
  *a1 = 0;
  sub_2225C3D00((int)v14, &byte_2226D1615);
  if (!sub_2225CD4BC(a3, a4, v14[0], (size_t)v14[1]))
  {
    int v8 = sub_2225C3D04((uint64_t)v15);
    *a1 = sub_22267236C(a2, v8 + 5, 4u);
    *(_DWORD *)*a1 = sub_2225C3D04((uint64_t)v15);
    uint64_t v9 = (void *)sub_222655074(a1);
    uint64_t v10 = (const void *)sub_2225C3C70((uint64_t)v15);
    size_t v11 = sub_2225C3D04((uint64_t)v15);
    memcpy(v9, v10, v11);
    uint64_t v12 = sub_222655074(a1);
    *(unsigned char *)(v12 + sub_2225C3D04((uint64_t)v15)) = 0;
  }
  return a1;
}

int *sub_22267393C(uint64_t a1, int a2)
{
  return sub_2226739D8((int *)(a1 - 16), a2);
}

void *sub_222673944(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a3;
  v11[1] = a4;
  nullsub_1(a2, *a1);
  uint64_t result = (void *)sub_2225C3D04((uint64_t)v11);
  if (result)
  {
    int v7 = sub_2225C3D04((uint64_t)v11);
    int v8 = (void *)sub_22267236C(a2, 8 * v7, 8u);
    *a1 = v8;
    uint64_t v9 = (const void *)sub_2225C3C70((uint64_t)v11);
    uint64_t v10 = sub_2225C3D04((uint64_t)v11);
    return memcpy(v8, v9, 8 * v10);
  }
  else
  {
    *a1 = 0;
  }
  return result;
}

int *sub_2226739D8(int *result, int a2)
{
  *uint64_t result = *result & 0x3FF | (a2 << 10);
  return result;
}

int *sub_2226739E8(uint64_t a1, int a2)
{
  return sub_2226739F0((int *)(a1 - 16), a2);
}

int *sub_2226739F0(int *result, int a2)
{
  *uint64_t result = *result & 0x1FFF | (a2 << 13);
  return result;
}

uint64_t sub_222673A00(uint64_t a1, __int16 a2)
{
  return sub_222673A08(a1 - 16, a2);
}

uint64_t sub_222673A08(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 2) = a2;
  return result;
}

void *sub_222673A10(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = a2;
  result[1] = (a3 - a2) >> 3;
  return result;
}

uint64_t sub_222673A20(uint64_t a1)
{
  switch(sub_22264B7DC(a1))
  {
    case 1u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 2u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 3u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 4u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 5u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 6u:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222673DF4(v4);
    case 7u:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222673DF4(v4);
    case 8u:
      uint64_t v5 = sub_2225E55A8(a1);
      return sub_222673DFC(v5);
    case 9u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0xAu:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0xBu:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0xCu:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0xDu:
      uint64_t v6 = sub_2225E55A8(a1);
      return sub_222673E04(v6);
    case 0xEu:
      uint64_t v6 = sub_2225E55A8(a1);
      return sub_222673E04(v6);
    case 0xFu:
      uint64_t v6 = sub_2225E55A8(a1);
      return sub_222673E04(v6);
    case 0x10u:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222673DF4(v4);
    case 0x11u:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222673DF4(v4);
    case 0x12u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0x13u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0x14u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0x15u:
      uint64_t v7 = sub_2225E55A8(a1);
      goto LABEL_64;
    case 0x16u:
      uint64_t v7 = sub_2225E55A8(a1);
LABEL_64:
      uint64_t result = sub_222673E2C(v7);
      break;
    default:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
LABEL_4:
      uint64_t result = sub_22261C6A4(v2);
      break;
  }
  return result;
}

uint64_t sub_222673DF4(uint64_t a1)
{
  return sub_222673A20(*(void *)(a1 + 16));
}

uint64_t sub_222673DFC(uint64_t a1)
{
  return sub_222673A20(*(void *)(a1 + 8));
}

uint64_t sub_222673E04(uint64_t a1)
{
  uint64_t v1 = sub_2225C5B40(a1);

  return sub_222673A20(v1);
}

uint64_t sub_222673E2C(uint64_t a1)
{
  return sub_2225C3B40(*(unsigned int **)(a1 + 8));
}

uint64_t sub_222673E34(uint64_t a1)
{
  switch(sub_22264B7DC(a1))
  {
    case 1u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 2u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 3u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 4u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 5u:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222674208(v4);
    case 6u:
      uint64_t v5 = sub_2225E55A8(a1);
      return sub_222674210(v5);
    case 7u:
      uint64_t v6 = sub_2225E55A8(a1);
      return sub_222674218(v6);
    case 8u:
      uint64_t v4 = sub_2225E55A8(a1);
      return sub_222674208(v4);
    case 9u:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0xAu:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0xBu:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      goto LABEL_4;
    case 0xCu:
      uint64_t v7 = sub_2225E55A8(a1);
      return sub_2225DAD0C(v7);
    case 0xDu:
      int v8 = (unsigned int *)sub_2225E55A8(a1);
      return sub_222674220(v8);
    case 0xEu:
      int v8 = (unsigned int *)sub_2225E55A8(a1);
      return sub_222674220(v8);
    case 0xFu:
      int v8 = (unsigned int *)sub_2225E55A8(a1);
      return sub_222674220(v8);
    case 0x10u:
      uint64_t v9 = sub_2225E55A8(a1);
      return sub_2225DF8D0(v9);
    case 0x11u:
      uint64_t v7 = sub_2225E55A8(a1);
      return sub_2225DAD0C(v7);
    case 0x12u:
      uint64_t v7 = sub_2225E55A8(a1);
      return sub_2225DAD0C(v7);
    case 0x13u:
      uint64_t v7 = sub_2225E55A8(a1);
      return sub_2225DAD0C(v7);
    case 0x14u:
      uint64_t v7 = sub_2225E55A8(a1);
      return sub_2225DAD0C(v7);
    case 0x15u:
      uint64_t v10 = sub_2225E55A8(a1);
      goto LABEL_64;
    case 0x16u:
      uint64_t v10 = sub_2225E55A8(a1);
LABEL_64:
      uint64_t result = sub_222673E2C(v10);
      break;
    default:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
LABEL_4:
      uint64_t result = sub_22261C6A4(v2);
      break;
  }
  return result;
}

uint64_t sub_222674208(uint64_t a1)
{
  return sub_222673E34(*(void *)(a1 + 16));
}

uint64_t sub_222674210(uint64_t a1)
{
  return sub_222673E34(*(void *)(a1 + 24));
}

uint64_t sub_222674218(uint64_t a1)
{
  return sub_222673E34(*(void *)(a1 + 32));
}

uint64_t sub_222674220(unsigned int *a1)
{
  unsigned int v4 = sub_2225C3B40(a1);
  if (!sub_2225F38E8(&v4)) {
    return v4;
  }
  uint64_t v2 = sub_2225C5B40((uint64_t)a1);
  return sub_222673E34(v2);
}

uint64_t sub_222674270(uint64_t a1)
{
  switch(sub_22264B7DC(a1))
  {
    case 5u:
      uint64_t v6 = (unsigned int *)sub_2225E55A8(a1);
      int v3 = sub_22261C6A4(v6);
      uint64_t v7 = sub_2225E55A8(a1);
      int v5 = sub_222674208(v7);
      break;
    case 6u:
      uint64_t v8 = sub_2225E55A8(a1);
      int v3 = sub_222673DF4(v8);
      uint64_t v9 = sub_2225E55A8(a1);
      int v5 = sub_222674210(v9);
      break;
    case 7u:
      uint64_t v10 = sub_2225E55A8(a1);
      int v3 = sub_222673DF4(v10);
      uint64_t v11 = sub_2225E55A8(a1);
      int v5 = sub_222674218(v11);
      break;
    case 8u:
      uint64_t v12 = sub_2225E55A8(a1);
      int v3 = sub_222673DFC(v12);
      uint64_t v13 = sub_2225E55A8(a1);
      int v5 = sub_222674208(v13);
      break;
    case 0xCu:
    case 0x12u:
    case 0x13u:
    case 0x14u:
      uint64_t v22 = (unsigned int *)sub_2225E55A8(a1);
      int v3 = sub_22261C6A4(v22);
      uint64_t v23 = sub_2225E55A8(a1);
      int v5 = sub_2225DAD0C(v23);
      break;
    case 0xDu:
    case 0xEu:
    case 0xFu:
      uint64_t v14 = sub_2225E55A8(a1);
      int v3 = sub_222673E04(v14);
      uint64_t v15 = (unsigned int *)sub_2225E55A8(a1);
      int v5 = sub_222674220(v15);
      break;
    case 0x10u:
      uint64_t v16 = sub_2225E55A8(a1);
      int v3 = sub_222673DF4(v16);
      uint64_t v17 = sub_2225E55A8(a1);
      int v5 = sub_2225DF8D0(v17);
      break;
    case 0x11u:
      uint64_t v18 = sub_2225E55A8(a1);
      int v3 = sub_222673DF4(v18);
      uint64_t v19 = sub_2225E55A8(a1);
      int v5 = sub_2225DAD0C(v19);
      break;
    case 0x15u:
    case 0x16u:
      uint64_t v20 = sub_2225E55A8(a1);
      int v3 = sub_222673E2C(v20);
      uint64_t v21 = sub_2225E55A8(a1);
      int v5 = sub_222673E2C(v21);
      break;
    default:
      uint64_t v2 = (unsigned int *)sub_2225E55A8(a1);
      int v3 = sub_22261C6A4(v2);
      unsigned int v4 = (unsigned int *)sub_2225E55A8(a1);
      int v5 = sub_22261C6A4(v4);
      break;
  }
  sub_22261F184(&v25, v3, v5);
  return v25;
}

uint64_t sub_22267460C(uint64_t a1, int a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  sub_222674694((uint64_t)v3, a2);
  sub_222659F98(v4, v3);
  sub_2226529E4(v3);
  sub_22265A698(v4);
  return sub_2226529E0(v4);
}

uint64_t sub_222674694(uint64_t a1, int a2)
{
  return sub_222675AD4(a1, a2);
}

uint64_t sub_22267469C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v11 = sub_22267235C(0x18u, a1, 8u);

  return sub_222674710(v11, a2, a3, a4, a5, a6);
}

uint64_t sub_222674710(uint64_t a1, int a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  return sub_22267546C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_222674718(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t result = sub_222659E20(&v5);
  if ((result & 1) == 0)
  {
    while (1)
    {
      uint64_t result = sub_22265D7B8(&v5);
      if (result) {
        return result;
      }
      uint64_t v2 = sub_2226747AC(v5);
      if (v2) {
        break;
      }
      uint64_t v2 = sub_2226747E8(v5);
      if (v2) {
        break;
      }
      uint64_t v2 = sub_222674824(v5);
      if (v2) {
        break;
      }
      uint64_t v4 = sub_222674860(v5);
      if (v4)
      {
        uint64_t v3 = sub_2225C3D04(v4);
        goto LABEL_10;
      }
LABEL_11:
      uint64_t result = sub_222659E20(&v5);
      if (result) {
        return result;
      }
    }
    uint64_t v3 = sub_2225C5B40(v2);
LABEL_10:
    uint64_t v5 = v3;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_2226747AC(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222675D7C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226747E8(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222675DDC(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222674824(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222675E3C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222674860(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222675E9C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

_DWORD *sub_22267489C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  uint64_t v11 = sub_22267235C(0x20u, a1, 8u);

  return sub_222674910(v11, a2, a3, a4, a5, a6);
}

_DWORD *sub_222674910(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  return sub_222675514(a1, a2, a3, a4, a5, a6);
}

_DWORD *sub_222674918(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_22267235C(0x28u, a1, 8u);

  return sub_22267498C(v11, a2, a3, a4, a5, a6);
}

_DWORD *sub_22267498C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2226755B0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_222674994(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v11 = sub_22267235C(0x18u, a1, 8u);

  return sub_222674A08(v11, a2, a3, a4, a5, a6);
}

uint64_t sub_222674A08(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return sub_22267561C(a1, a2, a3, a4, a5, a6);
}

_DWORD *sub_222674A10(uint64_t a1, char a2, char a3, int a4, _WORD *a5)
{
  sub_222672624(a5);
  uint64_t v10 = (_DWORD *)sub_22267235C(0x10u, a1, 8u);

  return sub_222674A88(v10, a2, a3, a4, (uint64_t)a5);
}

_DWORD *sub_222674A88(_DWORD *a1, char a2, char a3, int a4, uint64_t a5)
{
  return sub_2226756C0(a1, a2, a3, a4, a5);
}

uint64_t sub_222674A90(uint64_t a1, uint64_t a2, int a3, char a4, uint64_t a5, uint64_t a6, int a7)
{
  v20[1] = a6;
  uint64_t v21 = a2;
  v20[0] = a5;
  uint64_t v14 = sub_22267235C(0x20u, a1, 8u);
  uint64_t v15 = sub_222674B70(v14, a2, a3, a7);
  *(_DWORD *)(v15 + 4) = *(_DWORD *)(v15 + 4) & 0xFFFFE7FF | ((a4 & 3) << 11);
  sub_222674B7C((void *)(v15 + 8), a1, a5, a6);
  if (sub_2225C3D04((uint64_t)v20))
  {
    uint64_t v16 = sub_2225C3C70((uint64_t)&v21);
    if (sub_222687720(v16))
    {
      uint64_t v17 = (uint64_t *)sub_2225C3C70((uint64_t)v20);
      char v18 = sub_222659320(*v17);
      sub_222674BD0(v14, v18);
    }
  }
  return v14;
}

uint64_t sub_222674B70(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return sub_2226756FC(a1, a2, a3, a4);
}

void *sub_222674B7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  int v6 = sub_2225C3D04((uint64_t)&v8);
  sub_222675ECC((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

uint64_t sub_222674BD0(uint64_t result, char a2)
{
  *(_WORD *)(result + 4) = *(_WORD *)(result + 4) & 0xF9FF | ((a2 & 3) << 9);
  return result;
}

_DWORD *sub_222674BE8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v13 = sub_22267235C(0x28u, a1, 8u);

  return sub_222674C64(v13, a2, a3, a6, a4, a5, a7);
}

_DWORD *sub_222674C64(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_222675754(a1, a2, a3, a4, a5, a6, a7);
}

_DWORD *sub_222674C70(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v11 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);

  return sub_222674CE4(v11, a2, a3, a4, a5, a6);
}

_DWORD *sub_222674CE4(_DWORD *a1, char a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return sub_2226757D0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_222674CF0(uint64_t a1, _WORD *a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  sub_222672624(a2);
  uint64_t v12 = sub_22267235C(0x20u, a1, 8u);
  uint64_t v13 = sub_222674D88(v12, a2, a3, a6);
  sub_222674D94((void *)(v13 + 8), a1, a4, a5);
  sub_222674DE8(v12);
  return v12;
}

uint64_t sub_222674D88(uint64_t a1, _DWORD *a2, int a3, int a4)
{
  return sub_22267581C(a1, a2, a3, a4);
}

void *sub_222674D94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  int v6 = sub_2225C3D04((uint64_t)&v8);
  sub_222675EE4((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

uint64_t sub_222674DE8(uint64_t a1)
{
  uint64_t result = sub_222655F48(*(void *)(a1 + 16) + 16);
  if (result)
  {
    unsigned int v3 = 0;
    do
    {
      uint64_t v4 = (_DWORD **)sub_222657D6C(*(void *)(a1 + 16) + 16, v3);
      if (sub_222674E70(*v4))
      {
        uint64_t v5 = (uint64_t *)sub_222657D6C(a1 + 8, v3);
        sub_222674718(*v5);
      }
      ++v3;
      uint64_t result = sub_222655F48(*(void *)(a1 + 16) + 16);
    }
    while (v3 < result);
  }
  return result;
}

BOOL sub_222674E70(_DWORD *a1)
{
  return sub_222655EC8(a1) == 2 || sub_222655EC8(a1) == 3;
}

uint64_t sub_222674EB4(uint64_t a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v16 = sub_22267235C(0x20u, a1, 8u);
  uint64_t v17 = sub_222674F54(v16, a2, a3, a4, a5, a8);
  sub_222674F60((void *)(v17 + 8), a1, a6, a7);
  return v16;
}

uint64_t sub_222674F54(uint64_t a1, char a2, uint64_t a3, char a4, int a5, int a6)
{
  return sub_222675884(a1, a2, a3, a4, a5, a6);
}

void *sub_222674F60(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  unsigned __int16 v6 = sub_2225C3D04((uint64_t)&v8);
  sub_222675EFC((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

uint64_t sub_222674FB4(uint64_t a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v16 = sub_22267235C(0x20u, a1, 8u);
  uint64_t v17 = sub_222675054(v16, a2, a3, a4, a5, a8);
  sub_222675060((void *)(v17 + 8), a1, a6, a7);
  return v16;
}

uint64_t sub_222675054(uint64_t a1, char a2, uint64_t a3, char a4, int a5, int a6)
{
  return sub_2226758E8(a1, a2, a3, a4, a5, a6);
}

void *sub_222675060(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  __int16 v6 = sub_2225C3D04((uint64_t)&v8);
  sub_222675F14((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

_DWORD *sub_2226750B4(uint64_t a1, int a2, char a3, uint64_t a4, int a5, char a6)
{
  char v7 = a5;
  char v11 = a5 != 1;
  uint64_t v12 = (_DWORD *)sub_22267235C(0x10u, a1, 8u);

  return sub_222675134(v12, a2, a3, a4, v7, v11, a6);
}

_DWORD *sub_222675134(_DWORD *a1, int a2, char a3, uint64_t a4, char a5, char a6, char a7)
{
  return sub_22267594C(a1, a2, a3, a4, a5, a6, a7);
}

_DWORD *sub_22267513C(uint64_t a1, int a2, char a3, uint64_t a4, char a5)
{
  uint64_t v9 = (_DWORD *)sub_22267235C(0x10u, a1, 8u);

  return sub_2226751A0(v9, a2, a3, a4, a5);
}

_DWORD *sub_2226751A0(_DWORD *a1, int a2, char a3, uint64_t a4, char a5)
{
  return sub_2226759AC(a1, a2, a3, a4, a5);
}

uint64_t sub_2226751A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_22267235C(0x10u, a1, 8u);

  return sub_2226751F4(v5, a2, a3);
}

uint64_t sub_2226751F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_22267235C(0x18u, a1, 8u);

  return sub_222675244(v5, a2, a3);
}

void *sub_222675248(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);
  uint64_t v15 = sub_2225F2418(a6);
  sub_222672634(&v18, a1, v15, v16);
  return sub_2226752F0(v14, a2, a3, a4, a7, a5, v18);
}

void *sub_2226752F0(_DWORD *a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_222675F24(a1, a2, a3, a4, a5, a6, a7);
}

void *sub_2226752F8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);
  uint64_t v15 = sub_2225F2418(a6);
  sub_222672634(&v18, a1, v15, v16);
  return sub_2226753A0(v14, a2, a3, a4, a7, a5, v18);
}

void *sub_2226753A0(_DWORD *a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_222675F6C(a1, a2, a3, a4, a5, a6, a7);
}

void *sub_2226753A8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);
  uint64_t v15 = sub_2225F2418(a6);
  sub_222672634(&v18, a1, v15, v16);
  return sub_222675450(v14, a2, a3, a4, a7, a5, v18);
}

void *sub_222675450(_DWORD *a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_222675FB4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_222675458(int a1)
{
  return byte_2226D11B8[a1 - 97];
}

uint64_t sub_22267546C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  char v12 = sub_222659320(a3);
  sub_222675500((_DWORD *)a1, 8, 0, v12, a2);
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  sub_222659320(a3);
  *(_DWORD *)(a1 + 4) = ((a5 & 0xF) << 11) & 0x7FFF | ((a6 & 3) << 15) | *(_DWORD *)(a1 + 4) & 0xFFFE07FF;
  sub_222674718(*(void *)(a1 + 8));
  return a1;
}

_DWORD *sub_222675500(_DWORD *result, __int16 a2, char a3, char a4, int a5)
{
  *uint64_t result = a5;
  result[1] = 0;
  *((_WORD *)result + 2) = a2 & 0xF8FF | ((a3 & 1) << 8) & 0xF9FF | ((a4 & 3) << 9);
  return result;
}

_DWORD *sub_222675514(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  uint64_t v14 = a5;
  uint64_t v11 = sub_2225C3C70((uint64_t)&v14);
  if (sub_222687720(v11)) {
    char v12 = sub_222659320(a3);
  }
  else {
    char v12 = 0;
  }
  uint64_t result = sub_222675500((_DWORD *)a1, 6, 0, v12, a2);
  *(void *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = a4;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a1 + 4) & 0x7FF | (a6 << 11);
  return result;
}

_DWORD *sub_2226755B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v12 = sub_222659320(a4);
  uint64_t result = sub_222675500((_DWORD *)a1, 7, 0, v12, a3);
  *(void *)(a1 + 8) = a6;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  return result;
}

uint64_t sub_22267561C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  char v12 = sub_222659320(a3);
  sub_222675500((_DWORD *)a1, 5, 0, v12, a2);
  *(void *)(a1 + 8) = a4;
  *(void *)(a1 + 16) = a3;
  if (a6) {
    __int16 v13 = 0x4000;
  }
  else {
    __int16 v13 = 0;
  }
  *(_WORD *)(a1 + 4) = v13 & 0xC7FF | ((a5 & 7) << 11) | *(_WORD *)(a1 + 4) & 0x87FF;
  if (a5 == 5 || a5 == 3) {
    sub_222674718(a3);
  }
  return a1;
}

_DWORD *sub_2226756C0(_DWORD *a1, char a2, char a3, int a4, uint64_t a5)
{
  uint64_t result = sub_222675500(a1, 11, a2, a3, a4);
  *((void *)result + 1) = a5;
  return result;
}

uint64_t sub_2226756FC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  char v7 = sub_222675500((_DWORD *)a1, 12, 0, 0, a3);
  sub_2225E1678(v7 + 2);
  *(void *)(a1 + 16) = a2;
  *(_DWORD *)(a1 + 24) = a4;
  return a1;
}

_DWORD *sub_222675754(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  char v14 = sub_222659320(a5);
  uint64_t result = sub_222675500((_DWORD *)a1, 16, a2, v14, a4);
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a5;
  *(void *)(a1 + 24) = a6;
  *(_DWORD *)(a1 + 32) = a7;
  return result;
}

_DWORD *sub_2226757D0(_DWORD *a1, char a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t result = sub_222675500(a1, 17, a2, 0, a5);
  *((void *)result + 1) = a3;
  *((void *)result + 2) = a4;
  result[6] = a6;
  return result;
}

uint64_t sub_22267581C(uint64_t a1, _DWORD *a2, int a3, int a4)
{
  char v8 = sub_222655EE0(a2);
  sub_222675500((_DWORD *)a1, 20, 0, v8, a3);
  sub_2225E1678(a1 + 8);
  *(void *)(a1 + 16) = a2;
  *(_DWORD *)(a1 + 24) = a4;
  return a1;
}

uint64_t sub_222675884(uint64_t a1, char a2, uint64_t a3, char a4, int a5, int a6)
{
  uint64_t v10 = sub_222675500((_DWORD *)a1, 19, 0, a4, a5);
  sub_2225E1678(v10 + 2);
  *(void *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 24) = a6;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a1 + 4) & 0xFFFC07FF | ((a2 & 0x7F) << 11);
  return a1;
}

uint64_t sub_2226758E8(uint64_t a1, char a2, uint64_t a3, char a4, int a5, int a6)
{
  uint64_t v10 = sub_222675500((_DWORD *)a1, 18, 0, a4, a5);
  sub_2225E1678(v10 + 2);
  *(void *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 24) = a6;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a1 + 4) & 0xFFFF07FF | ((a2 & 0x1F) << 11);
  return a1;
}

_DWORD *sub_22267594C(_DWORD *a1, int a2, char a3, uint64_t a4, char a5, char a6, char a7)
{
  uint64_t result = sub_222675500(a1, 9, a6, a7, a2);
  *((void *)result + 1) = a4;
  result[1] = ((a3 & 0x1F) << 11) | ((a5 & 3) << 16) | result[1] & 0xFFFC07FF;
  return result;
}

_DWORD *sub_2226759AC(_DWORD *a1, int a2, char a3, uint64_t a4, char a5)
{
  uint64_t result = sub_222675500(a1, 10, 0, a5, a2);
  *((void *)result + 1) = a4;
  result[1] = result[1] & 0xFFFE07FF | ((a3 & 0x3F) << 11);
  return result;
}

uint64_t sub_2226759F8(uint64_t a1, char a2, unsigned int *a3)
{
  char v6 = sub_2226593F4((uint64_t)a3);
  int v7 = sub_2225C3B40(a3);
  sub_222675500((_DWORD *)a1, 21, v6, a2, v7);
  *(void *)(a1 + 8) = a3;
  return a1;
}

uint64_t sub_222675A5C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  char v6 = sub_2226593F4((uint64_t)a3);
  char v7 = sub_222659320((uint64_t)a3);
  int v8 = sub_2225C3B40(a3);
  sub_222675500((_DWORD *)a1, 22, v6, v7, v8);
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a2;
  return a1;
}

uint64_t sub_222675AD4(uint64_t a1, int a2)
{
  int v3 = a2;
  return sub_222675AFC(a1, &v3);
}

uint64_t sub_222675B04(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_222675B30();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_222675B34(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658E8C(a1);
  *char v6 = &unk_26D4DEA68;
  sub_222675B94(v6 + 1, a2, a3);
  return a1;
}

void sub_222675B9C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_122();

  j__free(v0);
}

uint64_t sub_222675BC4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_222675B30(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_222675C3C(uint64_t a1, uint64_t a2)
{
  return sub_222675B30(a2, a1 + 8);
}

uint64_t sub_222675C50(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_222675C58(uint64_t a1)
{
  return sub_222675D00(a1 + 8);
}

uint64_t sub_222675C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  sub_222658A5C(a3);

  return sub_222675CB8(a1, v5);
}

_DWORD *sub_222675CC0(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = a2;
  *a1 = *(_DWORD *)sub_2225CC180((uint64_t)&v4);
  return a1;
}

unint64_t sub_222675D08(_DWORD *a1, uint64_t *a2)
{
  return sub_222675D10(a1, *a2);
}

unint64_t sub_222675D10(_DWORD *a1, uint64_t a2)
{
  if (sub_222659320(a2)) {
    return 0;
  }
  uint64_t v6 = sub_222659834(a2);
  uint64_t v5 = sub_2225C3C70((uint64_t)&v6);
  unint64_t result = sub_222687720(v5);
  if (result)
  {
    sub_222674BD0(a2, *a1);
    return 1;
  }
  return result;
}

uint64_t sub_222675D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222675DAC(&v3);
}

uint64_t sub_222675DAC(void *a1)
{
  return sub_222675DB4(*a1);
}

BOOL sub_222675DBC(uint64_t a1)
{
  return sub_22264B7DC(a1) == 16;
}

uint64_t sub_222675DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222675E0C(&v3);
}

uint64_t sub_222675E0C(void *a1)
{
  return sub_222675E14(*a1);
}

BOOL sub_222675E1C(uint64_t a1)
{
  return sub_22264B7DC(a1) == 13;
}

uint64_t sub_222675E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222675E6C(&v3);
}

uint64_t sub_222675E6C(void *a1)
{
  return sub_222675E74(*a1);
}

BOOL sub_222675E7C(uint64_t a1)
{
  return sub_22264B7DC(a1) == 15;
}

uint64_t sub_222675EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657AE8(&v3);
}

uint64_t sub_222675ECC(uint64_t a1, int a2)
{
  return sub_222675ED4(a1 - 8, a2);
}

uint64_t sub_222675ED4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = *(_DWORD *)(result + 4) & 0x1FFF | (a2 << 13);
  return result;
}

uint64_t sub_222675EE4(uint64_t a1, int a2)
{
  return sub_222675EEC(a1 - 8, a2);
}

uint64_t sub_222675EEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = *(_DWORD *)(result + 4) & 0x7FF | (a2 << 11);
  return result;
}

uint64_t sub_222675EFC(uint64_t a1, unsigned __int16 a2)
{
  return sub_222675F04(a1 - 8, a2);
}

uint64_t sub_222675F04(uint64_t result, unsigned __int16 a2)
{
  *(_DWORD *)(result + 4) = *(_DWORD *)(result + 4) & 0x3FFFF | (a2 << 18);
  return result;
}

uint64_t sub_222675F14(uint64_t a1, __int16 a2)
{
  return sub_222675F1C(a1 - 8, a2);
}

uint64_t sub_222675F1C(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 6) = a2;
  return result;
}

void *sub_222675F24(_DWORD *a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  unint64_t result = sub_222675500(a1, 13, a2, a4, a5);
  result[1] = a3;
  result[2] = a6;
  result[3] = a7;
  return result;
}

void *sub_222675F6C(_DWORD *a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  unint64_t result = sub_222675500(a1, 14, a2, a4, a5);
  result[1] = a3;
  result[2] = a6;
  result[3] = a7;
  return result;
}

void *sub_222675FB4(_DWORD *a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  unint64_t result = sub_222675500(a1, 15, a2, a4, a5);
  result[1] = a3;
  result[2] = a6;
  result[3] = a7;
  return result;
}

uint64_t sub_222676000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226533CC(a1);
  sub_2226760F8((uint64_t)v19, a2, v4);
  v19[71] = sub_2226760FC(a1);
  v19[72] = v5;
  sub_222676128(v19);
  sub_2226761D0(v19);
  uint64_t v17 = sub_2226533D4(a1);
  uint64_t v18 = v6;
  char v7 = (uint64_t *)sub_2225C3C70((uint64_t)&v17);
  uint64_t v8 = sub_2225DC1A0(&v17);
  if (v7 != (uint64_t *)v8)
  {
    uint64_t v9 = (uint64_t *)v8;
    do
    {
      uint64_t v10 = *v7++;
      sub_222676308(v19, v10, 1);
    }
    while (v7 != v9);
  }
  uint64_t v17 = sub_2226534D8(a1);
  uint64_t v18 = v11;
  char v12 = (uint64_t *)sub_2225C3C70((uint64_t)&v17);
  uint64_t v13 = sub_2225DC1A0(&v17);
  if (v12 != (uint64_t *)v13)
  {
    char v14 = (uint64_t *)v13;
    do
    {
      uint64_t v15 = *v12++;
      sub_222676308(v19, v15, 1);
    }
    while (v12 != v14);
  }
  return sub_2226763E0((uint64_t)v19);
}

uint64_t sub_2226760FC(uint64_t a1)
{
  sub_222657E80(&v2, a1 + 48);
  return v2;
}

void **sub_222676128(uint64_t *a1)
{
  sub_2225CA524(*a1, "precision highp float;\n\n");
  uint64_t v2 = (uint64_t *)sub_2225C3C70((uint64_t)(a1 + 71));
  unint64_t result = (void **)sub_2225DC1A0(a1 + 71);
  if (v2 != (uint64_t *)result)
  {
    uint64_t v4 = (uint64_t *)result;
    while (1)
    {
      uint64_t v6 = sub_2225C5B40(*v2);
      uint64_t v5 = sub_2225C3C70((uint64_t)&v6);
      unint64_t result = (void **)sub_222655AF0(v5);
      if (result)
      {
        unint64_t result = (void **)sub_222655B00((uint64_t)result);
        if (!result) {
          break;
        }
      }
      if (++v2 == v4) {
        return result;
      }
    }
    return sub_2225CA524(*a1, "#define sample(s,p) texture2D(_samplers[s], p)\n#define samplerTransform(s,p) (vec3(p, 1.0) * _transforms[s]).xy\n#define samplerExtent(s) _extents[s]\n\n");
  }
  return result;
}

void **sub_2226761D0(uint64_t *a1)
{
  uint64_t v2 = a1 + 71;
  uint64_t v3 = (uint64_t *)sub_2225C3C70((uint64_t)(a1 + 71));
  unint64_t result = (void **)sub_2225DC1A0(v2);
  if (v3 != (uint64_t *)result)
  {
    uint64_t v5 = (uint64_t *)result;
    unint64_t v6 = 0;
    do
    {
      uint64_t v17 = sub_2225C5B40(*v3);
      uint64_t v7 = sub_2225C3C70((uint64_t)&v17);
      unint64_t result = (void **)sub_222655AF0(v7);
      if (result)
      {
        unint64_t result = (void **)sub_222655B00((uint64_t)result);
        if (!result) {
          ++v6;
        }
      }
      ++v3;
    }
    while (v3 != v5);
    if (v6)
    {
      uint64_t v8 = sub_2225CA524(*a1, "uniform highp sampler2D _samplers [");
      uint64_t v9 = sub_2225E7BAC(v8, v6);
      uint64_t v10 = sub_2225CA524((uint64_t)v9, "];\nuniform highp mat3 _transforms [");
      uint64_t v11 = sub_2225E7BAC(v10, v6);
      char v12 = sub_2225CA524((uint64_t)v11, "];\nuniform highp vec4 _extents [");
      uint64_t v13 = sub_2225E7BAC(v12, v6);
      sub_2225CA524((uint64_t)v13, "];\n\n");
      if (sub_222676A44(a1[74])) {
        sub_2225CA524(*a1, "vec4 _sampler_srgb_to_linear (vec4 s) {\n  s.rgb = sign(s.rgb) * mix(abs(s.rgb) * 0.077399380804954, pow(abs(s.rgb) * 0.947867298578199 + 0.052132701421801, vec3(2.4)), step(0.04045, abs(s.rgb)));\n"
      }
          "  return s;\n"
          "}\n"
          "\n");
      unint64_t result = (void **)sub_222676A4C(a1[74]);
      if (result)
      {
        char v14 = sub_2225CA524(*a1, "vec4 _sampler_swizzle(vec4 s) {\n  return ");
        uint64_t v15 = (char *)sub_222676A4C(a1[74]);
        uint64_t v16 = sub_2225CA524((uint64_t)v14, v15);
        return sub_2225CA524((uint64_t)v16, ";\n}\n\n");
      }
    }
  }
  return result;
}

uint64_t sub_222676308(uint64_t *a1, uint64_t a2, char a3)
{
  v13[5] = *MEMORY[0x263EF8340];
  sub_222631188(v13);
  unint64_t v6 = (uint64_t *)sub_222657EC4(a2);
  uint64_t v7 = sub_222657EC8(a2);
  if (v6 != (uint64_t *)v7)
  {
    uint64_t v8 = (uint64_t *)v7;
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v12 = v9;
      sub_2225CC7B8((uint64_t)v13, &v12);
    }
    while (v6 != v8);
  }
  if (!sub_2225CF1D0(v13))
  {
    sub_2225D3DDC(v11, v13);
    sub_222676690(a1, v11[0], v11[1], a3);
  }
  return sub_2225C56C4(v13);
}

uint64_t sub_2226763E4(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2226533CC(a1);
  sub_2226760F8((uint64_t)v27, a2, v4);
  uint64_t v5 = sub_22265372C(a1);
  v27[74] = sub_222657FBC(a1);
  v27[71] = sub_2226760FC(a1);
  v27[72] = v6;
  sub_222676128(v27);
  sub_2226761D0(v27);
  uint64_t v25 = sub_2226533D4(a1);
  uint64_t v26 = v7;
  uint64_t v8 = (uint64_t *)sub_2225C3C70((uint64_t)&v25);
  uint64_t v9 = sub_2225DC1A0(&v25);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = *v8;
      sub_2225D3DAC(v28);
      uint64_t v12 = (uint64_t *)sub_222653754(v11);
      for (uint64_t i = sub_222653758(v11); v12 != (uint64_t *)i; ++v12)
      {
        uint64_t v24 = 0;
        uint64_t v24 = *v12;
        if ((sub_222676648(v24) & 1) != 0 || sub_2226537E0(v5, v24)) {
          sub_2225CC7B8((uint64_t)v28, &v24);
        }
      }
      if (sub_2225CC780((uint64_t)v28))
      {
        sub_2225D3DDC(v23, v28);
        sub_222676690(v27, v23[0], v23[1], 1);
      }
      sub_2225C56C4(v28);
      ++v8;
    }
    while (v8 != v10);
  }
  uint64_t v25 = sub_2226534D8(a1);
  uint64_t v26 = v14;
  uint64_t v15 = (uint64_t *)sub_2225C3C70((uint64_t)&v25);
  uint64_t v16 = sub_2225DC1A0(&v25);
  if (v15 != (uint64_t *)v16)
  {
    uint64_t v17 = (uint64_t *)v16;
    do
    {
      uint64_t v18 = *v15;
      sub_2225D3DAC(v28);
      uint64_t v19 = (uint64_t *)sub_222653754(v18);
      for (uint64_t j = sub_222653758(v18); v19 != (uint64_t *)j; ++v19)
      {
        uint64_t v24 = 0;
        uint64_t v24 = *v19;
        if ((sub_222676648(v24) & 1) != 0 || sub_2226537E0(v5, v24)) {
          sub_2225CC7B8((uint64_t)v28, &v24);
        }
      }
      if (sub_2225CC780((uint64_t)v28))
      {
        sub_2225D3DDC(v22, v28);
        sub_222676690(v27, v22[0], v22[1], 1);
      }
      sub_2225C56C4(v28);
      ++v15;
    }
    while (v15 != v17);
  }
  return sub_2226763E0((uint64_t)v27);
}

uint64_t sub_222676648(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226580F0(&v2) & 1) != 0 || (sub_2226580F4(&v2)) {
    return 1;
  }
  else {
    return sub_2226580F8(&v2);
  }
}

uint64_t sub_222676690(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  v49[0] = a2;
  v49[1] = a3;
  char v48 = a4;
  v47[0] = v49;
  v47[1] = a1;
  uint64_t v47[2] = &v48;
  uint64_t v5 = sub_2225C3D04((uint64_t)v49);
  uint64_t v6 = sub_2225C3C70((uint64_t)v49);
  int v7 = sub_2226583D0(v6);
  if (v5 == 1)
  {
    if (!v7
      || (uint64_t v8 = (unsigned __int8 **)sub_2225C3C70((uint64_t)v49),
          v45[0] = sub_222659C34(*v8),
          uint64_t v9 = sub_2225C3C70((uint64_t)v45),
          (uint64_t v10 = sub_222655AF0(v9)) == 0)
      || (uint64_t result = sub_222655B00(v10), result))
    {
      uint64_t v12 = (unsigned __int16 **)sub_2225C3C70((uint64_t)v49);
      sub_222676A84(a1, *v12);
      return sub_222658340((uint64_t)v47);
    }
  }
  else
  {
    if (!v7)
    {
      uint64_t v28 = sub_2225C3C70((uint64_t)v49);
      if (sub_2226583D4(v28))
      {
        sub_2225CA524(*a1, "invariant");
        uint64_t v29 = (uint64_t *)sub_2225C3C70((uint64_t)v49);
        uint64_t v30 = sub_2225DC1A0(v49);
        if (v29 != (uint64_t *)v30)
        {
          int v31 = (uint64_t *)v30;
          char v32 = 1;
          do
          {
            uint64_t v33 = *v29;
            if ((v32 & 1) == 0) {
              sub_2225CA524(*a1, ",");
            }
            sub_2225CA524(*a1, " ");
            uint64_t v34 = (unsigned __int16 *)sub_2225E55A8(v33);
            if (sub_2225C5B40((uint64_t)v34))
            {
              uint64_t v35 = *a1;
              uint64_t v36 = sub_2225C5B40((uint64_t)v34);
              uint64_t v37 = sub_222654540(v36);
              sub_2225CA568(v35, v37, v38);
            }
            else
            {
              int v39 = sub_222656050(v34);
              sub_222656030(a1, v39);
            }
            char v32 = 0;
            ++v29;
          }
          while (v29 != v31);
        }
      }
      else
      {
        uint64_t v40 = (unsigned __int16 **)sub_2225C3C70((uint64_t)v49);
        uint64_t v41 = sub_2225DC1A0(v49);
        if (v40 != (unsigned __int16 **)v41)
        {
          uint64_t v42 = (unsigned __int16 **)v41;
          do
          {
            uint64_t v43 = *v40++;
            sub_222676A84(a1, v43);
          }
          while (v40 != v42);
        }
      }
      return sub_222658340((uint64_t)v47);
    }
    uint64_t v13 = (uint64_t *)sub_2225C3C70((uint64_t)v49);
    uint64_t result = sub_2225DC1A0(v49);
    if (v13 != (uint64_t *)result)
    {
      uint64_t v14 = (uint64_t *)result;
      char v15 = 1;
      while (1)
      {
        uint64_t v16 = *v13;
        float v46 = 0;
        float v46 = (_DWORD *)sub_2225E55A8(v16);
        v45[0] = sub_2225C5B40((uint64_t)v46);
        uint64_t v17 = sub_2225C3C70((uint64_t)v45);
        uint64_t v18 = sub_222655AF0(v17);
        if (v18)
        {
          uint64_t result = sub_222655B00(v18);
          if (!result) {
            break;
          }
        }
        uint64_t v19 = a1[2];
        if (v19
          && (v45[0] = sub_222654394(v19, (uint64_t *)&v46),
              v45[1] = v20,
              v44[0] = sub_2226543FC(a1[2]),
              v44[1] = v21,
              sub_2225F9558(v45, (uint64_t)v44)))
        {
          uint64_t v22 = v46;
          uint64_t v23 = sub_2225C3C70((uint64_t)v45);
          sub_222676A9C(a1, (uint64_t)v22, *(float **)(v23 + 8));
          uint64_t result = sub_222658340((uint64_t)v47);
        }
        else
        {
          if (v15)
          {
            sub_222676B90(a1, v46);
            sub_222676D1C(a1, (uint64_t)v46);
          }
          else
          {
            sub_2225CA524(*a1, ",");
          }
          uint64_t v24 = sub_2225CA524(*a1, " ");
          uint64_t v25 = sub_222654540((uint64_t)v46);
          sub_2225CA568((uint64_t)v24, v25, v26);
          sub_2226547A8(a1, (uint64_t)v46);
          uint64_t result = sub_222608330((uint64_t)v46);
          if (result)
          {
            sub_2225CA524(*a1, " = ");
            uint64_t v27 = sub_222608330((uint64_t)v46);
            uint64_t result = (uint64_t)sub_222676DF0(a1, v27);
          }
          char v15 = 0;
        }
        if (++v13 == v14)
        {
          if ((v15 & 1) == 0) {
            return sub_222658340((uint64_t)v47);
          }
          return result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_2226769DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 1;
  *(void *)(a1 + 16) = a3;
  sub_222676A30(a1 + 24);
  sub_2225CCC70((void *)(a1 + 568));
  *(_OWORD *)(a1 + 584) = 0u;
  return a1;
}

uint64_t sub_222676A38(uint64_t a1)
{
  return sub_222649FE8(a1, a1 + 32, 64);
}

uint64_t sub_222676A44(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 153);
}

uint64_t sub_222676A4C(uint64_t a1)
{
  return *(void *)(a1 + 168);
}

uint64_t sub_222676A54(uint64_t a1)
{
  return a1;
}

void **sub_222676A84(uint64_t *a1, unsigned __int16 *a2)
{
  if (a2) {
    return (void **)sub_222676E08(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

void **sub_222676A9C(uint64_t *a1, uint64_t a2, float *a3)
{
  int v6 = sub_2226074E4(a2);
  uint64_t v7 = *a1;
  if (v6)
  {
    uint64_t v8 = sub_222654540(a2);
    uint64_t v10 = sub_2225CA568(v7, v8, v9);
  }
  else
  {
    sub_2225CA524(*a1, "const ");
    sub_222676D1C(a1, a2);
    uint64_t v11 = sub_2225CA524(*a1, " ");
    uint64_t v12 = sub_222654540(a2);
    sub_2225CA568((uint64_t)v11, v12, v13);
    sub_2226547A8(a1, a2);
    uint64_t v10 = (void **)*a1;
  }
  sub_2225CA524((uint64_t)v10, " = ");
  uint64_t v14 = sub_2225C5B40(a2);
  char v15 = (void **)*a1;

  return sub_2226549F8(a3, v14, v15);
}

uint64_t *sub_222676B90(uint64_t *a1, _DWORD *a2)
{
  int v4 = sub_2225DF8D0((uint64_t)a2);
  sub_222677A10(a1, v4);
  if (sub_22265517C((uint64_t)a2) && (sub_222655188((uint64_t)a2) & 1) == 0) {
    sub_2225CA524(*a1, "invariant ");
  }
  int v5 = sub_222655194(a2);
  if (v5 == 1)
  {
    int v6 = "smooth ";
    goto LABEL_8;
  }
  if (v5 == 2)
  {
    int v6 = "flat ";
LABEL_8:
    sub_2225CA524(*a1, v6);
  }
  int v7 = sub_2226551A0(a2) - 1;
  uint64_t v8 = "in ";
  switch(v7)
  {
    case 0:
      uint64_t v8 = "attribute ";
      goto LABEL_18;
    case 1:
      if (sub_2226074B4((uint64_t)a2)) {
        goto LABEL_19;
      }
      uint64_t v8 = "const ";
LABEL_18:
      sub_2225CA524(*a1, v8);
LABEL_19:
      uint64_t result = (uint64_t *)sub_2226074D8((uint64_t)a2);
      if (result)
      {
        int v10 = sub_2226551D0(a2);
        return sub_22267762C(a1, v10);
      }
      return result;
    case 2:
      goto LABEL_18;
    case 3:
      uint64_t v8 = "out ";
      goto LABEL_18;
    case 4:
      uint64_t v8 = "centroid in ";
      goto LABEL_18;
    case 5:
      uint64_t v8 = "centroid out ";
      goto LABEL_18;
    case 6:
      uint64_t v8 = "uniform ";
      goto LABEL_18;
    case 7:
      uint64_t v8 = "varying ";
      goto LABEL_18;
    default:
      goto LABEL_19;
  }
}

uint64_t sub_222676D1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v13 = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v13);
  uint64_t v5 = sub_222655268(v4);
  if (v5)
  {
    uint64_t v6 = sub_2225C3D04(v5);
    sub_222678604(a1, v6, a2);
  }
  else
  {
    uint64_t v13 = sub_2225C5B40(a2);
    uint64_t v7 = sub_2225C3C70((uint64_t)&v13);
    uint64_t v8 = sub_2226552F0(v7);
    if (v8)
    {
      uint64_t v9 = (_DWORD *)sub_2225C3D04(v8);
      sub_222677900((uint64_t)a1, v9);
    }
    else
    {
      uint64_t v10 = sub_2225C5B40(a2);
      sub_222677650(a1, v10);
    }
  }
  LODWORD(v13) = 0;
  uint64_t v11 = sub_2225C5B40(a2);
  uint64_t result = sub_2226556A8(v11, &v13);
  if (result)
  {
    uint64_t result = sub_222655708(a2);
    if ((result & 1) == 0) {
      return (uint64_t)sub_222655714(a1, v13);
    }
  }
  return result;
}

void **sub_222676DF0(uint64_t *a1, uint64_t a2)
{
  if (a2) {
    return sub_222678688(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

uint64_t sub_222676E08(uint64_t *a1, unsigned __int16 *a2)
{
  switch(sub_2226376DC((unsigned __int8 *)a2))
  {
    case 1u:
      uint64_t result = sub_222677140(a1, a2);
      break;
    case 2u:
      uint64_t result = sub_22267727C(a1, a2);
      break;
    case 3u:
      uint64_t result = sub_22265412C(a1, a2);
      break;
    case 4u:
      uint64_t result = (uint64_t)sub_2226774F8(a1, (uint64_t)a2);
      break;
    case 5u:
      uint64_t result = (uint64_t)sub_222677548(a1, a2);
      break;
    case 6u:
      uint64_t result = (uint64_t)sub_2226541FC(a1, a2);
      break;
    case 7u:
      uint64_t result = (uint64_t)sub_22265429C(a1, a2);
      break;
    case 8u:
      uint64_t result = (uint64_t)sub_2226542F4(a1, a2);
      break;
    case 9u:
      uint64_t result = (uint64_t)sub_2226775C4((uint64_t)a1, (uint64_t)a2);
      break;
    case 0xAu:
      uint64_t result = (uint64_t)sub_2226775C8((uint64_t)a1, a2);
      break;
    default:
      uint64_t result = (uint64_t)sub_222677004(a1, a2);
      break;
  }
  return result;
}

void **sub_222677004(uint64_t *a1, _DWORD *a2)
{
  uint64_t v18 = a2;
  uint64_t v3 = a1[2];
  if (v3)
  {
    v17[0] = sub_222654394(v3, (uint64_t *)&v18);
    v17[1] = v4;
    v16[0] = sub_2226543FC(a1[2]);
    v16[1] = v5;
    if (sub_2225F9558(v17, (uint64_t)v16))
    {
      uint64_t v6 = v18;
      uint64_t v7 = sub_2225C3C70((uint64_t)v17);
      return sub_222676A9C(a1, (uint64_t)v6, *(float **)(v7 + 8));
    }
    a2 = v18;
  }
  if (sub_2226074E4((uint64_t)a2))
  {
    uint64_t v9 = *a1;
    uint64_t v10 = sub_222654540((uint64_t)v18);
    sub_2225CA568(v9, v10, v11);
  }
  else
  {
    sub_222676B90(a1, v18);
    sub_222676D1C(a1, (uint64_t)v18);
    uint64_t v12 = sub_2225CA524(*a1, " ");
    uint64_t v13 = sub_222654540((uint64_t)v18);
    sub_2225CA568((uint64_t)v12, v13, v14);
    sub_2226547A8(a1, (uint64_t)v18);
  }
  uint64_t result = (void **)sub_222608330((uint64_t)v18);
  if (result)
  {
    sub_2225CA524(*a1, " = ");
    uint64_t v15 = sub_222608330((uint64_t)v18);
    return sub_222676DF0(a1, v15);
  }
  return result;
}

uint64_t sub_222677140(uint64_t *a1, _DWORD *a2)
{
  if (sub_222655E50((uint64_t)a2)) {
    sub_2225CA524(*a1, "const ");
  }
  sub_2226775CC(a1, a2);
  if (sub_22265517C((uint64_t)a2))
  {
    int v4 = sub_222655EBC(a2);
    sub_22267762C(a1, v4);
  }
  unsigned int v12 = -1;
  uint64_t v5 = sub_2225C5B40((uint64_t)a2);
  sub_222677650(a1, v5);
  uint64_t v6 = sub_2225C5B40((uint64_t)a2);
  if (sub_2226556A8(v6, &v12) && (sub_222655708((uint64_t)a2) & 1) == 0) {
    sub_222655714(a1, v12);
  }
  uint64_t result = sub_22265592C((uint64_t)a2);
  if (result)
  {
    uint64_t v8 = sub_2225CA524(*a1, " ");
    uint64_t v9 = sub_222654540((uint64_t)a2);
    sub_2225CA568((uint64_t)v8, v9, v10);
    uint64_t result = sub_222655708((uint64_t)a2);
    if (result)
    {
      unsigned int v11 = v12;
      return (uint64_t)sub_222655714(a1, v11);
    }
  }
  return result;
}

uint64_t sub_22267727C(uint64_t *a1, _DWORD *a2)
{
  a1[73] = (uint64_t)a2;
  if (sub_222658088((uint64_t)a2))
  {
    return (uint64_t)sub_222677B24(a1, (uint64_t)a2);
  }
  else
  {
    uint64_t v5 = sub_222654540((uint64_t)a2);
    uint64_t v7 = v6;
    sub_2225C3D00((int)v26, "destCoord");
    uint64_t result = sub_2225CD4BC(v5, v7, v26[0], (size_t)v26[1]);
    if ((result & 1) == 0)
    {
      if (sub_222677C50((uint64_t)a2)
        && (v25[0] = (void *)sub_2226403CC((uint64_t)(a1 + 3)),
            v25[1] = v8,
            v24[0] = sub_222640400((uint64_t)(a1 + 3)),
            v24[1] = v9,
            sub_2225DE624(v25, v24)))
      {
        while (1)
        {
          uint64_t v11 = sub_222677C5C(v25, v10);
          uint64_t result = sub_222672CB8((uint64_t)a2, v11);
          if (result) {
            break;
          }
          sub_222640444(v25);
          if (!sub_2225DE624(v25, v24)) {
            goto LABEL_10;
          }
        }
      }
      else
      {
LABEL_10:
        if (sub_222655ED4((uint64_t)a2))
        {
          int v12 = sub_222655EE0(a2);
          sub_22267762C(a1, v12);
        }
        uint64_t v13 = sub_222640540((uint64_t)a2);
        sub_222677650(a1, v13);
        LODWORD(v25[0]) = 0;
        uint64_t v14 = sub_222640540((uint64_t)a2);
        if (sub_2226556A8(v14, v25)) {
          sub_222655714(a1, v25[0]);
        }
        uint64_t v15 = sub_2225CA524(*a1, " ");
        uint64_t v16 = sub_222654540((uint64_t)a2);
        uint64_t v18 = sub_2225CA568((uint64_t)v15, v16, v17);
        sub_2225CA524((uint64_t)v18, "(");
        uint64_t v19 = (void *)sub_2225CC180((uint64_t)(a2 + 4));
        uint64_t v20 = sub_222655EEC((uint64_t)(a2 + 4));
        if (v19 != (void *)v20)
        {
          uint64_t v21 = (void *)v20;
          uint64_t v22 = v20 - (void)v19;
          do
          {
            sub_222676A84(a1, *v19);
            if (v22 >= 9) {
              sub_2225CA524(*a1, ", ");
            }
            ++v19;
            v22 -= 8;
          }
          while (v19 != v21);
        }
        sub_2225CA524(*a1, ")");
        if (sub_222655F20((uint64_t)a2))
        {
          sub_2225CA524(*a1, " ");
          uint64_t v23 = (unsigned __int8 *)sub_222655F20((uint64_t)a2);
          sub_222677C68(a1, v23);
          sub_2225CA524(*a1, "\n");
        }
        else
        {
          sub_222655F28(a1, 0);
        }
        return sub_222608E54((uint64_t)(a1 + 3), (uint64_t)a2);
      }
    }
  }
  return result;
}

void **sub_2226774F8(uint64_t *a1, uint64_t a2)
{
  int v3 = sub_2225F514C(a2);
  sub_222677A10(a1, v3);
  uint64_t v4 = *a1;

  return sub_2225CA524(v4, "uniform");
}

void **sub_222677548(uint64_t *a1, _DWORD *a2)
{
  sub_2225CA524(*a1, "precision ");
  int v4 = sub_222656018(a2);
  sub_22267762C(a1, v4);
  uint64_t v5 = *a1;
  int v6 = sub_222656024(a2);
  uint64_t v8 = sub_22268807C(v6);

  return sub_2225CA568(v5, v8, v7);
}

void **sub_2226775CC(uint64_t *a1, _DWORD *a2)
{
  uint64_t result = (void **)sub_222655EC8(a2);
  if ((result - 1) <= 2)
  {
    int v4 = (&off_264625800)[(int)result - 1];
    uint64_t v5 = *a1;
    return sub_2225CA524(v5, v4);
  }
  return result;
}

uint64_t *sub_22267762C(uint64_t *result, int a2)
{
  if ((a2 - 1) <= 2) {
    return (uint64_t *)sub_2225CA524(*result, (&off_264625818)[a2 - 1]);
  }
  return result;
}

void **sub_222677650(uint64_t *a1, uint64_t a2)
{
  uint64_t v42 = a2;
  if (!sub_2225C3C70((uint64_t)&v42))
  {
    uint64_t v9 = *a1;
    uint64_t v8 = " /* <> */ ";
    return sub_2225CA524(v9, v8);
  }
  uint64_t v3 = sub_2225C3C70((uint64_t)&v42);
  uint64_t v4 = sub_222654D84(v3);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = sub_222655AE4(v4);
    uint64_t v7 = *a1;
    if (v6 == 4)
    {
      uint64_t v8 = "float";
      uint64_t v9 = v7;
      return sub_2225CA524(v9, v8);
    }
    uint64_t v17 = v5;
    goto LABEL_11;
  }
  uint64_t v11 = sub_2225C3C70((uint64_t)&v42);
  uint64_t v12 = sub_222654E2C(v11);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_2225C3D04(v12);
    int v15 = sub_222655AE4(v14);
    uint64_t v16 = "i";
    switch(v15)
    {
      case 5:
        goto LABEL_21;
      case 6:
        uint64_t v16 = "u";
        goto LABEL_21;
      case 7:
        uint64_t v16 = "b";
LABEL_21:
        sub_2225CA524(*a1, v16);
        break;
      default:
        break;
    }
    uint64_t v29 = sub_2225CA524(*a1, "vec");
    unsigned int v26 = sub_222654EC8(v13);
    uint64_t v25 = v29;
    return sub_2225CA560(v25, v26);
  }
  uint64_t v20 = sub_2225C3C70((uint64_t)&v42);
  uint64_t v21 = sub_222654C5C(v20);
  if (v21)
  {
    uint64_t v22 = v21;
    unsigned int v23 = sub_222654FBC(v21);
    LODWORD(v22) = sub_222654EC8(v22);
    uint64_t v24 = sub_2225CA524(*a1, "mat");
    uint64_t result = sub_2225CA560(v24, v22);
    if (v23 == v22) {
      return result;
    }
    uint64_t v25 = sub_2225CA524(*a1, "x");
    unsigned int v26 = v23;
    return sub_2225CA560(v25, v26);
  }
  uint64_t v27 = sub_2225C3C70((uint64_t)&v42);
  uint64_t v28 = sub_222655AF0(v27);
  if (!v28)
  {
    uint64_t v30 = sub_2225C3C70((uint64_t)&v42);
    if (sub_222655B0C(v30))
    {
      uint64_t v9 = *a1;
      uint64_t v8 = "void";
      return sub_2225CA524(v9, v8);
    }
    uint64_t v31 = sub_2225C3C70((uint64_t)&v42);
    uint64_t v17 = sub_222655B10(v31);
    if (v17)
    {
      uint64_t v7 = *a1;
LABEL_11:
      uint64_t v18 = sub_222688054(v17);
      return sub_2225CA568(v7, v18, v19);
    }
    uint64_t v32 = sub_2225C3C70((uint64_t)&v42);
    uint64_t v33 = sub_222655B14(v32);
    if (v33)
    {
      uint64_t v34 = sub_2225C3D04(v33);
    }
    else
    {
      uint64_t v35 = sub_2225C3C70((uint64_t)&v42);
      uint64_t v36 = sub_222655268(v35);
      if (v36)
      {
        uint64_t v7 = *a1;
        uint64_t v18 = sub_2226877C8(v36);
        return sub_2225CA568(v7, v18, v19);
      }
      uint64_t v37 = sub_2225C3C70((uint64_t)&v42);
      uint64_t v38 = sub_2226552F0(v37);
      if (v38)
      {
        int v39 = (_DWORD *)sub_2225C3D04(v38);
        return sub_222677900((uint64_t)a1, v39);
      }
      uint64_t v40 = sub_2225C3C70((uint64_t)&v42);
      uint64_t v41 = sub_222655B18(v40);
      if (!v41)
      {
        uint64_t v9 = *a1;
        uint64_t v8 = " /* <unknown> */ ";
        return sub_2225CA524(v9, v8);
      }
      uint64_t v34 = sub_2225C5B40(v41);
    }
    return (void **)sub_222677650(a1, v34);
  }
  uint64_t result = (void **)sub_222655B00(v28);
  if (result == 1)
  {
    uint64_t v9 = *a1;
    uint64_t v8 = "sampler2D";
    return sub_2225CA524(v9, v8);
  }
  if (!result)
  {
    uint64_t v9 = *a1;
    uint64_t v8 = "int";
    return sub_2225CA524(v9, v8);
  }
  return result;
}

void **sub_222677900(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_2225DAD04((uint64_t)a2);
  sub_222677A10((uint64_t *)a1, v4);
  sub_222655A8C(a2);
  sub_2225CA524(*(void *)a1, "uniform ");
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = sub_222654540((uint64_t)a2);
  sub_2225CA568(v5, v6, v7);
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v8 = (uint64_t)(a2 + 4);
  uint64_t v9 = (uint64_t *)sub_2225CC180((uint64_t)(a2 + 4));
  uint64_t v10 = sub_222655A98(v8);
  if (v9 != (uint64_t *)v10)
  {
    uint64_t v11 = (uint64_t *)v10;
    do
    {
      uint64_t v12 = *v9++;
      sub_222655980((void **)a1);
      sub_222676308(a1, v12, 1);
    }
    while (v9 != v11);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v13 = *(void *)a1;

  return sub_2225CA524(v13, "}");
}

void **sub_222677A10(uint64_t *a1, int a2)
{
  int v8 = a2;
  if (sub_2226551DC((unsigned __int16 *)&v8)
    || (uint64_t result = (void **)sub_2226551F4((unsigned __int16 *)&v8), result))
  {
    sub_2225CA524(*a1, "layout(");
    if (sub_2226551DC((unsigned __int16 *)&v8))
    {
      if (sub_222655200((unsigned __int16 *)&v8))
      {
        char v4 = sub_222655224((unsigned __int16 *)&v8);
        sub_222677B0C(a1, v4);
        if (sub_222655230((unsigned __int16 *)&v8))
        {
          sub_2225CA524(*a1, ", ");
LABEL_9:
          char v7 = sub_22265523C((unsigned __int16 *)&v8);
          sub_222677B0C(a1, v7);
        }
      }
      else if (sub_222655230((unsigned __int16 *)&v8))
      {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v5 = sub_2225CA524(*a1, "location = ");
      unsigned int v6 = sub_2226376DC((unsigned __int8 *)&v8);
      sub_2225CA560(v5, v6);
    }
    return sub_2225CA524(*a1, ") ");
  }
  return result;
}

void **sub_222677B0C(uint64_t *a1, char a2)
{
  return sub_2225CA524(*a1, (&off_264625830)[a2 - 1]);
}

void **sub_222677B24(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "void main (");
  char v4 = (void *)sub_2225CC180(a2 + 16);
  uint64_t v5 = sub_222655EEC(a2 + 16);
  if (v4 != (void *)v5)
  {
    unsigned int v6 = (void *)v5;
    uint64_t v7 = v5 - (void)v4;
    do
    {
      sub_222676A84(a1, *v4);
      if (v7 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v4;
      v7 -= 8;
    }
    while (v4 != v6);
  }
  sub_2225CA524(*a1, ")");
  if (sub_222655F20(a2))
  {
    sub_2225CA524(*a1, " ");
    int v8 = (unsigned __int8 *)sub_222655F20(a2);
    sub_222677C68(a1, v8);
    uint64_t v9 = *a1;
    return sub_2225CA524(v9, "\n");
  }
  else
  {
    return sub_222655F28(a1, 0);
  }
}

uint64_t sub_222677C50(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1) >> 7;
}

uint64_t sub_222677C5C(void **a1, uint64_t a2)
{
  return j_nullsub_1(**a1, a2);
}

void **sub_222677C68(uint64_t *a1, unsigned __int8 *a2)
{
  if (a2) {
    return (void **)sub_222677C80(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

uint64_t sub_222677C80(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t result = sub_2226376DC(a2);
  switch((int)result)
  {
    case 0:
      uint64_t result = (uint64_t)sub_222677F1C((uint64_t)a1, (uint64_t)a2);
      break;
    case 1:
      uint64_t result = (uint64_t)sub_222656430(a1);
      break;
    case 2:
      uint64_t result = sub_222678000((uint64_t)a1, (uint64_t)a2);
      break;
    case 3:
      uint64_t result = (uint64_t)sub_22267800C(a1, (uint64_t)a2);
      break;
    case 4:
      uint64_t result = sub_222678110(a1, (uint64_t)a2);
      break;
    case 5:
      uint64_t result = (uint64_t)sub_222678188(a1, (uint64_t)a2);
      break;
    case 6:
      uint64_t result = (uint64_t)sub_22265662C(a1);
      break;
    case 7:
      uint64_t result = (uint64_t)sub_2226781EC(a1, (uint64_t)a2);
      break;
    case 8:
      uint64_t result = (uint64_t)sub_222678304(a1, (uint64_t)a2);
      break;
    case 9:
      uint64_t result = (uint64_t)sub_222678390(a1, (uint64_t)a2);
      break;
    case 10:
      uint64_t result = (uint64_t)sub_222656888(a1);
      break;
    case 11:
      uint64_t result = (uint64_t)sub_2226568D0(a1);
      break;
    case 12:
      uint64_t result = (uint64_t)sub_222656918(a1);
      break;
    case 13:
      uint64_t result = (uint64_t)sub_222678438(a1, (uint64_t)a2);
      break;
    case 14:
      uint64_t result = sub_2226784B4((uint64_t)a1, (uint64_t)a2);
      break;
    default:
      return result;
  }
  return result;
}

void **sub_222677F1C(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "{\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v4 = a2 + 8;
  uint64_t v5 = (uint64_t *)sub_2225CC180(a2 + 8);
  uint64_t v6 = sub_222656A1C(v4);
  if (v5 != (uint64_t *)v6)
  {
    uint64_t v7 = (uint64_t *)v6;
    do
    {
      uint64_t v8 = *v5++;
      sub_222655980((void **)a1);
      sub_222677C68(a1, v8);
      sub_222656A50((uint64_t *)a1, v8);
      sub_2225CA524(*(void *)a1, "\n");
    }
    while (v5 != v7);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v9 = *(void *)a1;

  return sub_2225CA524(v9, "}");
}

uint64_t sub_222678000(uint64_t a1, uint64_t a2)
{
  return sub_222676308(a1, a2 + 8, 0);
}

void **sub_22267800C(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "if (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_222676DF0(a1, v4);
  }
  sub_2225CA524(*a1, ") ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v5 = sub_2225C5B40(a2);
    sub_222677C68(a1, v5);
    uint64_t v6 = sub_2225C5B40(a2);
    sub_222656A50(a1, v6);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  uint64_t result = (void **)sub_222608330(a2);
  if (result)
  {
    sub_2225CA524(*a1, " else ");
    uint64_t v8 = sub_222608330(a2);
    sub_222677C68(a1, v8);
    uint64_t v9 = sub_222608330(a2);
    return sub_222656A50(a1, v9);
  }
  return result;
}

uint64_t sub_222678110(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "switch (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_222676DF0(a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);

  return sub_222677C68(a1, v5);
}

void **sub_222678188(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "case ");
  uint64_t v4 = sub_222608330(a2);
  sub_222676DF0(a1, v4);
  uint64_t v5 = *a1;

  return sub_2225CA524(v5, ": ");
}

void **sub_2226781EC(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "for (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_222677C68(a1, v4);
    uint64_t v5 = sub_2225C3D04(a2);
    sub_222656A50(a1, v5);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  sub_2225CA524(*a1, " ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v6 = sub_2225C5B40(a2);
    sub_222677C68(a1, v6);
  }
  sub_222655F28(a1, 1);
  if (sub_222608330(a2))
  {
    uint64_t v7 = sub_222608330(a2);
    sub_222676DF0(a1, v7);
  }
  sub_2225CA524(*a1, ") ");
  uint64_t v8 = sub_2225CDCF4(a2);
  sub_222677C68(a1, v8);
  uint64_t v9 = sub_2225CDCF4(a2);

  return sub_222656A50(a1, v9);
}

void **sub_222678304(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "while (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_222677C68(a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);
  sub_222677C68(a1, v5);
  uint64_t v6 = sub_2225C5B40(a2);

  return sub_222656A50(a1, v6);
}

void **sub_222678390(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "do ");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_222677C68(a1, v4);
  uint64_t v5 = sub_2225C3D04(a2);
  sub_222656A50(a1, v5);
  sub_2225CA524(*a1, " while (");
  uint64_t v6 = sub_2225C5B40(a2);
  sub_222676DF0(a1, v6);
  sub_2225CA524(*a1, ")");

  return sub_222655F28(a1, 0);
}

void **sub_222678438(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "return");
  if (sub_2225C3D04(a2))
  {
    sub_2225CA524(*a1, " ");
    uint64_t v4 = sub_2225C3D04(a2);
    sub_222676DF0(a1, v4);
  }

  return sub_222655F28(a1, 0);
}

uint64_t sub_2226784B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3D04(a2);

  return sub_222676DF0(a1, v3);
}

void **sub_2226784F4(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "struct");
  if (sub_22265592C(a2))
  {
    uint64_t v4 = sub_2225CA524(*(void *)a1, " ");
    uint64_t v5 = sub_222654540(a2);
    sub_2225CA568((uint64_t)v4, v5, v6);
  }
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v7 = a2 + 16;
  uint64_t v8 = (uint64_t *)sub_2225CC180(a2 + 16);
  uint64_t v9 = sub_22265594C(v7);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = *v8++;
      sub_222655980((void **)a1);
      sub_222676308(a1, v11, 1);
    }
    while (v8 != v10);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v12 = *(void *)a1;

  return sub_2225CA524(v12, "}");
}

void **sub_222678604(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (sub_222655810(a3))
  {
    return sub_2226784F4((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v6 = *a1;
    uint64_t v8 = sub_222654540(a2);
    return sub_2225CA568(v6, v8, v7);
  }
}

void **sub_222678688(uint64_t *a1, uint64_t a2)
{
  uint64_t result = (void **)sub_22264B7DC(a2);
  switch((int)result)
  {
    case 0:
      return (void **)sub_222656EF8(a1, a2);
    case 1:
      return (void **)sub_222678A74(a1, a2);
    case 2:
      return sub_222656F94(a1, a2);
    case 3:
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      return (void **)sub_222656FE8(v5, v6);
    case 4:
      uint64_t v5 = a1;
      uint64_t v6 = a2;
      return (void **)sub_222656FE8(v5, v6);
    case 5:
      return (void **)sub_222678AC8(a1, a2);
    case 6:
      return sub_222678B68(a1, a2);
    case 7:
      return sub_222678C04(a1, a2);
    case 8:
      return (void **)sub_222678C90(a1, a2);
    case 9:
      return sub_222657300(a1, a2);
    case 10:
      return (void **)sub_222657340(a2);
    case 11:
      return sub_222678D64(a1, a2);
    case 12:
      return sub_222678E20(a1, a2);
    case 13:
      uint64_t v7 = a1;
      uint64_t v8 = a2;
      goto LABEL_43;
    case 14:
      uint64_t v7 = a1;
      uint64_t v8 = a2;
      goto LABEL_43;
    case 15:
      uint64_t v7 = a1;
      uint64_t v8 = a2;
LABEL_43:
      uint64_t result = sub_222678F74(v7, v8);
      break;
    case 16:
      uint64_t result = sub_222678FEC(a1, a2);
      break;
    case 17:
      uint64_t result = sub_222679064(a1, a2);
      break;
    case 18:
      uint64_t result = sub_2226790B4(a1, a2);
      break;
    case 19:
      uint64_t result = sub_222679308(a1, a2);
      break;
    case 20:
      uint64_t result = sub_2226793D8(a1, a2);
      break;
    case 21:
      uint64_t result = (void **)sub_2226784B4((uint64_t)a1, a2);
      break;
    case 22:
      uint64_t result = sub_222679500(a1, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_222678A74(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  sub_2226578EC(a2, (uint64_t)v5);
  uint64_t v3 = sub_2226578B8(v2, v5);
  sub_2225CA524(v3, "U");
  return sub_2225C2F10(v5);
}

uint64_t sub_222678AC8(uint64_t *a1, uint64_t a2)
{
  if (sub_222657904(a2))
  {
    uint64_t v4 = sub_2225C5B40(a2);
    sub_222679578((uint64_t)a1, v4);
  }
  unsigned int v5 = sub_2226579A0(a2);
  if (v5 <= 6) {
    sub_2225CA524(*a1, (&off_264625860)[v5]);
  }
  uint64_t result = sub_222657904(a2);
  if ((result & 1) == 0)
  {
    uint64_t v7 = sub_2225C5B40(a2);
    return (uint64_t)sub_222679578((uint64_t)a1, v7);
  }
  return result;
}

void **sub_222678B68(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222679578((uint64_t)a1, v4);
  sub_2225CA524(*a1, " ");
  unsigned int v5 = sub_222657CE8(a2);
  if (v5 <= 0x14) {
    sub_2225CA524(*a1, (&off_264625898)[v5]);
  }
  sub_2225CA524(*a1, " ");
  uint64_t v6 = sub_222608330(a2);

  return sub_222679578((uint64_t)a1, v6);
}

void **sub_222678C04(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222679578((uint64_t)a1, v4);
  sub_2225CA524(*a1, " ? ");
  uint64_t v5 = sub_222608330(a2);
  sub_222679578((uint64_t)a1, v5);
  sub_2225CA524(*a1, " : ");
  uint64_t v6 = sub_2225CDCF4(a2);

  return sub_222679578((uint64_t)a1, v6);
}

uint64_t sub_222678C90(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  uint64_t v5 = sub_2225C5B40(a2);
  uint64_t v6 = sub_222679608(v4);
  if (v6 && sub_222657D00(v6) - 1 < 2)
  {
    uint64_t v7 = "gl_FragColor";
  }
  else
  {
    sub_222676DF0(a1, v4);
    uint64_t v7 = " ";
  }
  sub_2225CA524(*a1, v7);
  unsigned int v8 = sub_222657CF4(a2);
  if (v8 <= 0xB) {
    sub_2225CA524(*a1, (&off_264625940)[v8]);
  }
  sub_2225CA524(*a1, " ");

  return sub_222676DF0(a1, v5);
}

void **sub_222678D64(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = (unsigned __int8 *)sub_2225C3D04(a2);
  v12[0] = sub_222659C34(v3);
  uint64_t v4 = sub_2225C3C70((uint64_t)v12);
  uint64_t v5 = sub_222655AF0(v4);
  if (sub_222658088(a1[73])) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6 || sub_222655B00(v5))
  {
    uint64_t v7 = *a1;
    uint64_t v8 = sub_222654540((uint64_t)v3);
  }
  else
  {
    uint64_t v7 = *a1;
    v12[0] = sub_222654540((uint64_t)v3);
    v12[1] = v10;
    uint64_t v8 = sub_2225CE76C(v12, 2uLL, 0xFFFFFFFFFFFFFFFFLL);
  }
  return sub_2225CA568(v7, v8, v9);
}

void **sub_222678E20(uint64_t *a1, uint64_t a2)
{
  uint64_t v17 = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v17);
  if (sub_222654C5C(v4) && (uint64_t v5 = sub_2225CC180(a2 + 8), v6 = sub_222657D18(a2 + 8), sub_2225D5C78(v5, v6) == 1))
  {
    uint64_t v7 = (void *)sub_2225CC180(a2 + 8);
    return (void **)sub_222676DF0(a1, *v7);
  }
  else
  {
    uint64_t v9 = sub_2225C5B40(a2);
    sub_222677650(a1, v9);
    unsigned int v16 = 0;
    uint64_t v10 = sub_2225C5B40(a2);
    if (sub_2226556A8(v10, &v16)) {
      sub_222655714(a1, v16);
    }
    sub_2225CA524(*a1, "(");
    uint64_t v11 = a2 + 8;
    uint64_t v12 = (void *)sub_2225CC180(a2 + 8);
    uint64_t v13 = sub_222657D18(v11);
    if (v12 != (void *)v13)
    {
      uint64_t v14 = (void *)v13;
      uint64_t v15 = v13 - (void)v12;
      do
      {
        sub_222676DF0(a1, *v12);
        if (v15 >= 9) {
          sub_2225CA524(*a1, ", ");
        }
        ++v12;
        v15 -= 8;
      }
      while (v12 != v14);
    }
    return sub_2225CA524(*a1, ")");
  }
}

void **sub_222678F74(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222679578((uint64_t)a1, v4);
  uint64_t v5 = sub_2225CA524(*a1, ".");
  uint64_t v7 = sub_222657D64(a2);

  return sub_2225CA568((uint64_t)v5, v7, v6);
}

void **sub_222678FEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222679578((uint64_t)a1, v4);
  sub_2225CA524(*a1, "[");
  uint64_t v5 = sub_222608330(a2);
  sub_222676DF0(a1, v5);
  uint64_t v6 = *a1;

  return sub_2225CA524(v6, "]");
}

void **sub_222679064(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C5B40(a2);
  sub_222679578((uint64_t)a1, v3);
  uint64_t v4 = *a1;

  return sub_2225CA524(v4, ".length()");
}

void **sub_2226790B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  uint64_t v5 = *(void *)sub_2225CC180(a2 + 8);
  uint64_t v6 = *(void *)(sub_2225CC180(v4) + 8);
  int v7 = sub_222657D00(a2);
  uint64_t v8 = ")";
  uint64_t v9 = "samplerExtent(";
  switch(v7)
  {
    case 2:
      uint64_t v15 = *a1;
      unsigned int v16 = "samplerTransform(";
      goto LABEL_11;
    case 3:
      goto LABEL_12;
    case 4:
      uint64_t v8 = ", _dc)";
      uint64_t v9 = "samplerTransform(";
      goto LABEL_12;
    case 5:
      uint64_t v15 = *a1;
      unsigned int v16 = "texture2D(";
LABEL_11:
      sub_2225CA524(v15, v16);
      sub_222676DF0(a1, v5);
      uint64_t v5 = v6;
      uint64_t v9 = ", ";
LABEL_12:
      sub_2225CA524(*a1, v9);
      sub_222676DF0(a1, v5);
      goto LABEL_13;
    default:
      uint64_t v10 = sub_222676A4C(a1[74]);
      if (v10) {
        sub_2225CA524(*a1, "_sampler_swizzle(");
      }
      int v11 = sub_222676A44(a1[74]);
      if (v11) {
        sub_2225CA524(*a1, "_sampler_srgb_to_linear(");
      }
      uint64_t v12 = (char *)sub_222679644(a1[74]);
      uint64_t v13 = *a1;
      if (v12)
      {
        sub_2225CA524(v13, "(");
        sub_2225CA524(*a1, "sample(");
        sub_222676DF0(a1, v5);
        sub_2225CA524(*a1, ", ");
        sub_222676DF0(a1, v6);
        sub_2225CA524(*a1, ")");
        uint64_t v14 = sub_2225CA524(*a1, v12);
      }
      else
      {
        sub_2225CA524(v13, "sample(");
        sub_222676DF0(a1, v5);
        sub_2225CA524(*a1, ", ");
        sub_222676DF0(a1, v6);
        uint64_t v14 = (void **)*a1;
      }
      uint64_t result = sub_2225CA524((uint64_t)v14, ")");
      if (v11) {
        uint64_t result = sub_2225CA524(*a1, ")");
      }
      if (!v10) {
        return result;
      }
      uint64_t v8 = ")";
LABEL_13:
      uint64_t v17 = *a1;
      return sub_2225CA524(v17, v8);
  }
}

void **sub_222679308(uint64_t *a1, uint64_t a2)
{
  int v4 = sub_222657DDC(a2);
  sub_2225CA524(*a1, (&off_2646259A0)[v4 - 1]);
  uint64_t v5 = a2 + 8;
  uint64_t v6 = (void *)sub_2225CC180(a2 + 8);
  uint64_t v7 = sub_222657DE8(v5);
  if (v6 != (void *)v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = v7 - (void)v6;
    do
    {
      sub_222676DF0(a1, *v6);
      if (v9 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v6;
      v9 -= 8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *a1;

  return sub_2225CA524(v10, ")");
}

void **sub_2226793D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = sub_222654540(v4);
  uint64_t v7 = v6;
  sub_2225C3D00((int)v22, "destCoord");
  BOOL v8 = sub_2225CD4BC(v5, v7, v22[0], (size_t)v22[1]);
  uint64_t v9 = *a1;
  if (v8)
  {
    uint64_t v10 = "_dc";
    uint64_t v11 = *a1;
  }
  else
  {
    uint64_t v12 = sub_2225C5B40(a2);
    uint64_t v13 = sub_222654540(v12);
    uint64_t v15 = sub_2225CA568(v9, v13, v14);
    sub_2225CA524((uint64_t)v15, "(");
    uint64_t v16 = a2 + 8;
    uint64_t v17 = (void *)sub_2225CC180(a2 + 8);
    uint64_t v18 = sub_222657E34(v16);
    if (v17 != (void *)v18)
    {
      uint64_t v19 = (void *)v18;
      uint64_t v20 = v18 - (void)v17;
      do
      {
        sub_222676DF0(a1, *v17);
        if (v20 >= 9) {
          sub_2225CA524(*a1, ", ");
        }
        ++v17;
        v20 -= 8;
      }
      while (v17 != v19);
    }
    uint64_t v11 = *a1;
    uint64_t v10 = ")";
  }
  return sub_2225CA524(v11, v10);
}

void **sub_222679500(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_222677650(a1, v4);
  sub_2225CA524(*a1, "(");
  uint64_t v5 = sub_2225C3D04(a2);
  sub_222676DF0(a1, v5);
  uint64_t v6 = *a1;

  return sub_2225CA524(v6, ")");
}

void **sub_222679578(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 12) && sub_2226579AC(a2)) {
    sub_2225CA524(*(void *)a1, "(");
  }
  uint64_t result = (void **)sub_222676DF0(a1, a2);
  if (*(unsigned char *)(a1 + 12))
  {
    uint64_t result = (void **)sub_2226579AC(a2);
    if (result)
    {
      uint64_t v5 = *(void *)a1;
      return sub_2225CA524(v5, ")");
    }
  }
  return result;
}

uint64_t sub_222679608(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_22265D7B8(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222679644(uint64_t a1)
{
  return *(void *)(a1 + 160);
}

uint64_t sub_22267964C(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_222679688(a1, v2);
}

uint64_t sub_22267968C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226533CC(a1);
  sub_222679778((uint64_t)v18, a2, v4);
  uint64_t v18[3] = sub_2226760FC(a1);
  v18[4] = v5;
  sub_22267977C(v18);
  sub_222679920(v18);
  uint64_t v16 = sub_2226533D4(a1);
  uint64_t v17 = v6;
  uint64_t v7 = (uint64_t *)sub_2225C3C70((uint64_t)&v16);
  uint64_t v8 = sub_2225DC1A0(&v16);
  if (v7 != (uint64_t *)v8)
  {
    uint64_t v9 = (uint64_t *)v8;
    do
    {
      uint64_t v10 = *v7++;
      sub_222679A98(v18, v10, 1);
    }
    while (v7 != v9);
  }
  uint64_t v16 = sub_2226534D8(a1);
  uint64_t v17 = v11;
  uint64_t v12 = (uint64_t *)sub_2225C3C70((uint64_t)&v16);
  uint64_t result = sub_2225DC1A0(&v16);
  if (v12 != (uint64_t *)result)
  {
    uint64_t v14 = (uint64_t *)result;
    do
    {
      uint64_t v15 = *v12++;
      uint64_t result = sub_222679A98(v18, v15, 1);
    }
    while (v12 != v14);
  }
  return result;
}

void **sub_22267977C(uint64_t *a1)
{
  uint64_t v2 = a1 + 3;
  sub_2225CA524(*a1, "#include <metal_stdlib>\nusing namespace metal;\n\n");
  uint64_t v3 = (uint64_t *)sub_2225C3C70((uint64_t)v2);
  uint64_t v4 = sub_2225DC1A0(v2);
  if (v3 == (uint64_t *)v4)
  {
    char v7 = 0;
    char v6 = 0;
  }
  else
  {
    uint64_t v5 = (uint64_t *)v4;
    char v6 = 0;
    char v7 = 0;
    while (1)
    {
      uint64_t v15 = sub_2225C5B40(*v3);
      uint64_t v8 = sub_2225C3C70((uint64_t)&v15);
      uint64_t v9 = sub_222655AF0(v8);
      if (v9)
      {
        int v10 = sub_222655B00(v9);
        v6 |= v10 == 0;
        v7 |= v10 == 1;
      }
      if (v6 & 1) != 0 && (v7) {
        break;
      }
      if (++v3 == v5) {
        goto LABEL_11;
      }
    }
    char v7 = 1;
    char v6 = 1;
  }
LABEL_11:
  sub_2225CA524(*a1, "template <typename T>\nstatic inline T mod(T x, T y) { return x - y * floor(x / y); }\n\n");
  uint64_t result = sub_2225CA524(*a1, "template <typename T, int V>\nstatic inline vec<T, V> mod(vec<T, V> x, T y) { return x - y * floor(x / y); }\n"
             "\n");
  if (v6 & 1) != 0 || (v7)
  {
    sub_2225CA524(*a1, "namespace ci {\n\n");
    if (v6) {
      sub_2225CA524(*a1, "template <typename T>\nstruct sampler {\n\ntexture2d<T, access::sample> texture; \n"
    }
        "metal::sampler sampler; \n"
        "float4x4 m; \n"
        "\n"
        "vec<T,4> sample(float2 p) {\n"
        "  return texture.sample(sampler, p);\n"
        "}\n"
        "\n"
        "float2 transform(float2 p) {\n"
        "  float x = dot(float3(p, 1), m[0].xyz);\n"
        "  float y = dot(float3(p, 1), m[1].xyz);\n"
        "  return float2(x,y);\n"
        "}\n"
        "\n"
        "float4 extent() {\n"
        "  return m[3]; \n"
        "}\n"
        "\n"
        ""};
        "\n");
    if (v7) {
      sub_2225CA524(*a1, "template <typename T>\nstruct sampler2D {\n\ntexture2d<T, access::sample> texture; \n"
    }
        "metal::sampler sampler; \n"
        "\n"
        "vec<T,4> texture2D(float2 p) {\n"
        "  return texture.sample(sampler, p);\n"
        "}\n"
        "\n"
        ""};
        "\n");
    sub_2225CA524(*a1, ""};
    if (sub_222676A44(a1[6])) {
      sub_2225CA524(*a1, "template <typename T>\nstatic inline vec<T,4> _sampler_srgb_to_linear(vec<T,4> s) {\n  s.rgb = sign(s.rgb) * mix(abs(s.rgb) * 0.077399380804954, pow(abs(s.rgb) * 0.947867298578199 + 0.052132701421801, vec<T,3>(2.4)), step(0.04045, abs(s.rgb)));\n"
    }
        "  return s;\n"
        "}\n"
        "\n");
    uint64_t result = (void **)sub_222676A4C(a1[6]);
    if (result)
    {
      uint64_t v12 = sub_2225CA524(*a1, "static inline vec<T,4> _sampler_swizzle(vec<T,4> s) {\n  return ");
      uint64_t v13 = (char *)sub_222676A4C(a1[6]);
      uint64_t v14 = sub_2225CA524((uint64_t)v12, v13);
      return sub_2225CA524((uint64_t)v14, ";\n}\n\n");
    }
  }
  return result;
}

void **sub_222679920(uint64_t *a1)
{
  uint64_t v2 = a1 + 3;
  sub_2225CA524(*a1, "struct Params {\n\n  float4 outputRect;\n  float3x3 vertexTransform;\n\n");
  uint64_t v3 = (uint64_t *)sub_2225C3C70((uint64_t)v2);
  uint64_t v4 = sub_2225DC1A0(v2);
  if (v3 != (uint64_t *)v4)
  {
    uint64_t v5 = (uint64_t *)v4;
    while (1)
    {
      uint64_t v6 = *v3;
      uint64_t v19 = sub_2225C5B40(*v3);
      uint64_t v7 = sub_2225C3C70((uint64_t)&v19);
      uint64_t v8 = sub_222655AF0(v7);
      if (!v8) {
        goto LABEL_7;
      }
      int v9 = sub_222655B00(v8);
      if (v9 != 1) {
        break;
      }
LABEL_9:
      if (++v3 == v5) {
        return sub_2225CA524(*a1, "};\n\n");
      }
    }
    if (v9)
    {
LABEL_7:
      sub_2225CA524(*a1, "  ");
      sub_22267A124(a1, v19);
      uint64_t v15 = sub_2225CA524(*a1, " ");
      uint64_t v16 = sub_222654540(v6);
      uint64_t v13 = sub_2225CA568((uint64_t)v15, v16, v17);
      uint64_t v14 = ";\n";
    }
    else
    {
      sub_2225CA524(*a1, "  float4x4 ");
      uint64_t v10 = *a1;
      uint64_t v11 = sub_222654540(v6);
      uint64_t v13 = sub_2225CA568(v10, v11, v12);
      uint64_t v14 = "_m;\n";
    }
    sub_2225CA524((uint64_t)v13, v14);
    goto LABEL_9;
  }
  return sub_2225CA524(*a1, "};\n\n");
}

uint64_t sub_222679A98(void *a1, uint64_t a2, char a3)
{
  v13[5] = *MEMORY[0x263EF8340];
  sub_222631188(v13);
  uint64_t v6 = (uint64_t *)sub_222657EC4(a2);
  uint64_t v7 = sub_222657EC8(a2);
  if (v6 != (uint64_t *)v7)
  {
    uint64_t v8 = (uint64_t *)v7;
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v12 = v9;
      sub_2225CC7B8((uint64_t)v13, &v12);
    }
    while (v6 != v8);
  }
  if (!sub_2225CF1D0(v13))
  {
    sub_2225D3DDC(v11, v13);
    sub_222679DB0(a1, v11[0], v11[1], a3);
  }
  return sub_2225C56C4(v13);
}

uint64_t sub_222679B70(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2226533CC(a1);
  sub_222679778((uint64_t)v26, a2, v4);
  uint64_t v5 = sub_22265372C(a1);
  v26[6] = sub_222657FBC(a1);
  v26[3] = sub_2226760FC(a1);
  v26[4] = v6;
  sub_22267977C(v26);
  sub_222679920(v26);
  uint64_t v24 = sub_2226533D4(a1);
  uint64_t v25 = v7;
  uint64_t v8 = (uint64_t *)sub_2225C3C70((uint64_t)&v24);
  uint64_t v9 = sub_2225DC1A0(&v24);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = *v8;
      sub_2225D3DAC(v27);
      uint64_t v12 = (uint64_t *)sub_222653754(v11);
      for (uint64_t i = sub_222653758(v11); v12 != (uint64_t *)i; ++v12)
      {
        uint64_t v23 = 0;
        uint64_t v23 = *v12;
        if (sub_2226537E0(v5, v23)) {
          sub_2225CC7B8((uint64_t)v27, &v23);
        }
      }
      if (sub_2225CC780((uint64_t)v27))
      {
        sub_2225D3DDC(v22, v27);
        sub_222679DB0(v26, v22[0], v22[1], 1);
      }
      sub_2225C56C4(v27);
      ++v8;
    }
    while (v8 != v10);
  }
  uint64_t v24 = sub_2226534D8(a1);
  uint64_t v25 = v14;
  uint64_t v15 = (uint64_t *)sub_2225C3C70((uint64_t)&v24);
  uint64_t result = sub_2225DC1A0(&v24);
  if (v15 != (uint64_t *)result)
  {
    uint64_t v17 = (uint64_t *)result;
    do
    {
      uint64_t v18 = *v15;
      sub_2225D3DAC(v27);
      uint64_t v19 = (uint64_t *)sub_222653754(v18);
      for (uint64_t j = sub_222653758(v18); v19 != (uint64_t *)j; ++v19)
      {
        uint64_t v23 = 0;
        uint64_t v23 = *v19;
        if (sub_2226537E0(v5, v23)) {
          sub_2225CC7B8((uint64_t)v27, &v23);
        }
      }
      if (sub_2225CC780((uint64_t)v27))
      {
        sub_2225D3DDC(v21, v27);
        sub_222679DB0(v26, v21[0], v21[1], 1);
      }
      uint64_t result = sub_2225C56C4(v27);
      ++v15;
    }
    while (v15 != v17);
  }
  return result;
}

void sub_222679DB0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  v43[0] = a2;
  v43[1] = a3;
  uint64_t v41 = a1;
  char v42 = a4;
  if (*((_DWORD *)a1 + 2))
  {
    uint64_t v5 = sub_2225C3C70((uint64_t)v43);
    if (sub_2226583D0(v5))
    {
      uint64_t v6 = (uint64_t *)sub_2225C3C70((uint64_t)v43);
      uint64_t v7 = sub_2225DC1A0(v43);
      if (v6 == (uint64_t *)v7) {
        return;
      }
      uint64_t v8 = (uint64_t *)v7;
      char v9 = 1;
      do
      {
        uint64_t v10 = *v6;
        uint64_t v40 = 0;
        uint64_t v40 = (_DWORD *)sub_2225E55A8(v10);
        uint64_t v11 = a1[2];
        if (v11
          && (v39[0] = sub_222654394(v11, (uint64_t *)&v40),
              v39[1] = v12,
              v38[0] = sub_2226543FC(a1[2]),
              v38[1] = v13,
              sub_2225F9558(v39, (uint64_t)v38)))
        {
          uint64_t v14 = v40;
          uint64_t v15 = sub_2225C3C70((uint64_t)v39);
          sub_22267A4CC(a1, (uint64_t)v14, *(float **)(v15 + 8));
          sub_222655F28(a1, 0);
          sub_22267A58C(&v41);
        }
        else
        {
          if (v9)
          {
            sub_22267A5AC(a1, v40);
            sub_22267A648(a1, (uint64_t)v40);
          }
          else
          {
            sub_2225CA524(*a1, ",");
          }
          uint64_t v16 = sub_2225CA524(*a1, " ");
          uint64_t v17 = sub_222654540((uint64_t)v40);
          sub_2225CA568((uint64_t)v16, v17, v18);
          sub_2226547A8(a1, (uint64_t)v40);
          if (sub_222608330((uint64_t)v40))
          {
            sub_2225CA524(*a1, " = ");
            uint64_t v19 = sub_222608330((uint64_t)v40);
            sub_22267A71C(a1, v19);
          }
          char v9 = 0;
        }
        ++v6;
      }
      while (v6 != v8);
      if (v9) {
        return;
      }
LABEL_26:
      sub_222655F28(a1, 0);
      goto LABEL_40;
    }
  }
  uint64_t v20 = sub_2225C3C70((uint64_t)v43);
  int v21 = sub_2226583D4(v20);
  uint64_t v22 = (uint64_t *)sub_2225C3C70((uint64_t)v43);
  uint64_t v23 = sub_2225DC1A0(v43);
  uint64_t v24 = (uint64_t *)v23;
  BOOL v25 = v22 == (uint64_t *)v23;
  if (v21)
  {
    if (v22 != (uint64_t *)v23)
    {
      char v26 = 1;
      do
      {
        uint64_t v27 = *v22;
        if ((v26 & 1) == 0) {
          sub_2225CA524(*a1, ",");
        }
        sub_2225CA524(*a1, " ");
        uint64_t v28 = (unsigned __int16 *)sub_2225E55A8(v27);
        if (sub_2225C5B40((uint64_t)v28))
        {
          uint64_t v29 = *a1;
          uint64_t v30 = sub_2225C5B40((uint64_t)v28);
          uint64_t v31 = sub_222654540(v30);
          sub_2225CA568(v29, v31, v32);
        }
        else
        {
          sub_222656050(v28);
        }
        char v26 = 0;
        ++v22;
      }
      while (v22 != v24);
    }
    goto LABEL_26;
  }
  while (!v25)
  {
    uint64_t v33 = (unsigned __int16 *)*v22;
    v39[0] = *v22;
    if (!*((_DWORD *)a1 + 2))
    {
      if (sub_2226583D0(v39)) {
        goto LABEL_32;
      }
      uint64_t v33 = (unsigned __int16 *)v39[0];
    }
    sub_22267A734(a1, v33);
LABEL_32:
    BOOL v25 = ++v22 == v24;
  }
  if (*((_DWORD *)a1 + 2))
  {
    uint64_t v34 = sub_2225C3C70((uint64_t)v43);
    if ((sub_222658084(v34) & 1) == 0)
    {
      uint64_t v35 = sub_2225C3C70((uint64_t)v43);
      if ((sub_2226580F0(v35) & 1) == 0)
      {
        uint64_t v36 = sub_2225C3C70((uint64_t)v43);
        if ((sub_2226580F4(v36) & 1) == 0) {
          sub_222655F28(a1, 0);
        }
      }
    }
    if (*((_DWORD *)a1 + 2)) {
      goto LABEL_40;
    }
  }
  uint64_t v37 = sub_2225C3C70((uint64_t)v43);
  if ((sub_2226583D0(v37) & 1) == 0) {
LABEL_40:
  }
    sub_22267A58C(&v41);
}

uint64_t sub_22267A0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 1;
  *(void *)(a1 + 16) = a3;
  sub_2225CCC70((void *)(a1 + 24));
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  return a1;
}

void **sub_22267A124(uint64_t *a1, uint64_t a2)
{
  uint64_t v44 = a2;
  if (!sub_2225C3C70((uint64_t)&v44))
  {
    uint64_t v11 = *a1;
    uint64_t v12 = " /* <> */ ";
    return sub_2225CA524(v11, v12);
  }
  uint64_t v3 = sub_2225C3C70((uint64_t)&v44);
  uint64_t v4 = sub_222654E2C(v3);
  if (!v4)
  {
    uint64_t v14 = sub_2225C3C70((uint64_t)&v44);
    uint64_t v15 = sub_222654C5C(v14);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_2225C3D04(v15);
      if (sub_222655AE4(v17) == 3) {
        uint64_t v18 = "float";
      }
      else {
        uint64_t v18 = "half";
      }
      sub_2225CA524(*a1, v18);
      unsigned int v19 = sub_222654FBC(v16);
      unsigned int v20 = sub_222654EC8(v16);
      int v21 = sub_2225CA560((void **)*a1, v20);
      uint64_t v10 = sub_2225CA524((uint64_t)v21, "x");
      unsigned int v9 = v19;
      return sub_2225CA560(v10, v9);
    }
    uint64_t v22 = sub_2225C3C70((uint64_t)&v44);
    uint64_t v23 = sub_222655AF0(v22);
    if (v23)
    {
      uint64_t v24 = v23;
      int v25 = sub_222655B00(v23);
      if (v25)
      {
        if (v25 != 1)
        {
LABEL_21:
          unsigned int v28 = sub_222655AF4(v24);
          if (v28 <= 3) {
            sub_2225CA524(*a1, (&off_264625C18)[v28]);
          }
          uint64_t v11 = *a1;
          uint64_t v12 = ">";
          return sub_2225CA524(v11, v12);
        }
        char v26 = "ci::sampler2D<";
      }
      else
      {
        char v26 = "ci::sampler<";
      }
      sub_2225CA524(*a1, v26);
      goto LABEL_21;
    }
    uint64_t v27 = sub_2225C3C70((uint64_t)&v44);
    if (sub_222655B0C(v27))
    {
      uint64_t v11 = *a1;
      uint64_t v12 = "void";
      return sub_2225CA524(v11, v12);
    }
    uint64_t v29 = sub_2225C3C70((uint64_t)&v44);
    uint64_t v30 = sub_222655B10(v29);
    if (v30)
    {
      uint64_t v31 = *a1;
      uint64_t v32 = sub_222688054(v30);
      return sub_2225CA568(v31, v32, v33);
    }
    uint64_t v34 = sub_2225C3C70((uint64_t)&v44);
    uint64_t v35 = sub_222655B14(v34);
    if (v35)
    {
      uint64_t v36 = sub_2225C3D04(v35);
    }
    else
    {
      uint64_t v37 = sub_2225C3C70((uint64_t)&v44);
      uint64_t v38 = sub_222655268(v37);
      if (v38)
      {
        uint64_t v31 = *a1;
        uint64_t v32 = sub_2226877C8(v38);
        return sub_2225CA568(v31, v32, v33);
      }
      uint64_t v39 = sub_2225C3C70((uint64_t)&v44);
      uint64_t v40 = sub_2226552F0(v39);
      if (v40)
      {
        uint64_t v41 = (_DWORD *)sub_2225C3D04(v40);
        return sub_22267A38C((uint64_t)a1, v41);
      }
      uint64_t v42 = sub_2225C3C70((uint64_t)&v44);
      uint64_t v43 = sub_222655B18(v42);
      if (!v43)
      {
        uint64_t v11 = *a1;
        uint64_t v12 = " /* <unknown> */ ";
        return sub_2225CA524(v11, v12);
      }
      uint64_t v36 = sub_2225C5B40(v43);
    }
    return (void **)sub_22267A124(a1, v36);
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_2225C3D04(v4);
  int v7 = sub_222655AE4(v6);
  sub_2225CA524(*a1, (&off_264625BF0)[v7 - 3]);
  uint64_t v8 = *a1;
  unsigned int v9 = sub_222654EC8(v5);
  uint64_t v10 = (void **)v8;
  return sub_2225CA560(v10, v9);
}

void **sub_22267A38C(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_2225DAD04((uint64_t)a2);
  sub_22267A498(v4);
  sub_222655A8C(a2);
  sub_2225CA524(*(void *)a1, "// uniform ");
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = sub_222654540((uint64_t)a2);
  sub_2225CA568(v5, v6, v7);
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v8 = (uint64_t)(a2 + 4);
  unsigned int v9 = (uint64_t *)sub_2225CC180((uint64_t)(a2 + 4));
  uint64_t v10 = sub_222655A98(v8);
  if (v9 != (uint64_t *)v10)
  {
    uint64_t v11 = (uint64_t *)v10;
    do
    {
      uint64_t v12 = *v9++;
      sub_222655980((void **)a1);
      sub_222679A98((void *)a1, v12, 1);
    }
    while (v9 != v11);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v13 = *(void *)a1;

  return sub_2225CA524(v13, "}");
}

uint64_t sub_22267A498(int a1)
{
  int v2 = a1;
  uint64_t result = sub_2226551DC((unsigned __int16 *)&v2);
  if ((result & 1) == 0) {
    return sub_2226551F4((unsigned __int16 *)&v2);
  }
  return result;
}

void **sub_22267A4CC(uint64_t *a1, uint64_t a2, float *a3)
{
  sub_2225CA524(*a1, "const ");
  sub_22267A648(a1, a2);
  uint64_t v6 = sub_2225CA524(*a1, " ");
  uint64_t v7 = sub_222654540(a2);
  sub_2225CA568((uint64_t)v6, v7, v8);
  sub_2226547A8(a1, a2);
  sub_2225CA524(*a1, " = ");
  uint64_t v9 = sub_2225C5B40(a2);
  uint64_t v10 = (void **)*a1;

  return sub_2226549F8(a3, v9, v10);
}

void **sub_22267A58C(void **result)
{
  if (*((unsigned char *)result + 8)) {
    return sub_2225CA524(*(void *)*result, "\n");
  }
  return result;
}

uint64_t sub_22267A5AC(uint64_t *a1, _DWORD *a2)
{
  int v4 = sub_2225DF8D0((uint64_t)a2);
  sub_22267A498(v4);
  sub_222655194(a2);
  unsigned int v5 = sub_2226551A0(a2) - 2;
  if (v5 <= 6 && ((0x69u >> v5) & 1) != 0) {
    sub_2225CA524(*a1, (&off_264625C38)[v5]);
  }
  uint64_t result = sub_2226074D8((uint64_t)a2);
  if (result)
  {
    return sub_2226551D0(a2);
  }
  return result;
}

uint64_t sub_22267A648(uint64_t *a1, uint64_t a2)
{
  uint64_t v13 = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v13);
  uint64_t v5 = sub_222655268(v4);
  if (v5)
  {
    uint64_t v6 = sub_2225C3D04(v5);
    sub_22267A74C(a1, v6, a2);
  }
  else
  {
    uint64_t v13 = sub_2225C5B40(a2);
    uint64_t v7 = sub_2225C3C70((uint64_t)&v13);
    uint64_t v8 = sub_2226552F0(v7);
    if (v8)
    {
      uint64_t v9 = sub_2225C3D04(v8);
      sub_22267A38C(a1, v9);
    }
    else
    {
      uint64_t v10 = sub_2225C5B40(a2);
      sub_22267A124(a1, v10);
    }
  }
  LODWORD(v13) = 0;
  uint64_t v11 = sub_2225C5B40(a2);
  uint64_t result = sub_2226556A8(v11, &v13);
  if (result)
  {
    uint64_t result = sub_222655708(a2);
    if ((result & 1) == 0) {
      return (uint64_t)sub_222655714(a1, v13);
    }
  }
  return result;
}

void sub_22267A71C(uint64_t *a1, uint64_t a2)
{
  if (a2) {
    sub_22267A8E0(a1, a2);
  }
  else {
    sub_2225CA524(*a1, " /* <none> */ ");
  }
}

void sub_22267A734(uint64_t *a1, unsigned __int16 *a2)
{
  if (a2) {
    sub_22267B9F0(a1, a2);
  }
  else {
    sub_2225CA524(*a1, " /* <none> */ ");
  }
}

void **sub_22267A74C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (sub_222655810(a3))
  {
    return sub_22267A7D0((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v6 = *a1;
    uint64_t v8 = sub_222654540(a2);
    return sub_2225CA568(v6, v8, v7);
  }
}

void **sub_22267A7D0(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "struct");
  if (sub_22265592C(a2))
  {
    uint64_t v4 = sub_2225CA524(*(void *)a1, " ");
    uint64_t v5 = sub_222654540(a2);
    sub_2225CA568((uint64_t)v4, v5, v6);
  }
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v7 = a2 + 16;
  uint64_t v8 = (uint64_t *)sub_2225CC180(a2 + 16);
  uint64_t v9 = sub_22265594C(v7);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = *v8++;
      sub_222655980((void **)a1);
      sub_222679A98(a1, v11, 1);
    }
    while (v8 != v10);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v12 = *(void *)a1;

  return sub_2225CA524(v12, "}");
}

void sub_22267A8E0(uint64_t *a1, uint64_t a2)
{
  switch(sub_22264B7DC(a2))
  {
    case 0u:
      sub_222656EF8(a1, a2);
      return;
    case 1u:
      sub_222678A74(a1, a2);
      return;
    case 2u:
      sub_222656F94(a1, a2);
      return;
    case 3u:
      sub_22267ACC8(a1, a2);
      return;
    case 4u:
      sub_22265703C(a1, a2);
      return;
    case 5u:
      sub_22267AD28(a1, a2);
      return;
    case 6u:
      sub_22267ADC8(a1, a2);
      return;
    case 7u:
      sub_22267AE64(a1, a2);
      return;
    case 8u:
      sub_22267AEF0(a1, a2);
      return;
    case 9u:
      sub_22267B000(a2);
      return;
    case 0xAu:
      sub_222657340(a2);
      return;
    case 0xBu:
      sub_22267B004(a1, a2);
      return;
    case 0xCu:
      sub_22267B0B4(a1, a2);
      return;
    case 0xDu:
      uint64_t v4 = a1;
      uint64_t v5 = a2;
      goto LABEL_43;
    case 0xEu:
      uint64_t v4 = a1;
      uint64_t v5 = a2;
LABEL_43:
      sub_22267B1B4(v4, v5);
      return;
    case 0xFu:
      sub_22267B22C(a1, a2);
      return;
    case 0x10u:
      sub_22267B35C(a1, a2);
      return;
    case 0x11u:
      sub_22267B3D4(a1, a2);
      return;
    case 0x12u:
      sub_22267B424(a1, a2);
      return;
    case 0x13u:
      sub_22267B670(a1, a2);
      return;
    case 0x14u:
      sub_22267B7CC(a1, a2);
      return;
    case 0x15u:
      uint64_t v6 = (uint64_t)a1;
      uint64_t v7 = a2;
      goto LABEL_67;
    case 0x16u:
      uint64_t v6 = (uint64_t)a1;
      uint64_t v7 = a2;
LABEL_67:
      sub_22267B920(v6, v7);
      break;
    default:
      return;
  }
}

uint64_t sub_22267ACC8(uint64_t *a1, uint64_t a2)
{
  sub_2226578F8(a2, (uint64_t)v7);
  uint64_t v3 = *a1;
  float v4 = sub_2225C42E4((uint64_t)v7);
  uint64_t v5 = sub_2225E8110(v3, v4);
  sub_2225CA524(v5, "f");
  return sub_2225C2AA4(v7);
}

uint64_t sub_22267AD28(uint64_t *a1, uint64_t a2)
{
  if (sub_222657904(a2))
  {
    uint64_t v4 = sub_2225C5B40(a2);
    sub_22267B960((uint64_t)a1, v4);
  }
  unsigned int v5 = sub_2226579A0(a2);
  if (v5 <= 6) {
    sub_2225CA524(*a1, (&off_264625C70)[v5]);
  }
  uint64_t result = sub_222657904(a2);
  if ((result & 1) == 0)
  {
    uint64_t v7 = sub_2225C5B40(a2);
    return (uint64_t)sub_22267B960((uint64_t)a1, v7);
  }
  return result;
}

void **sub_22267ADC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22267B960((uint64_t)a1, v4);
  sub_2225CA524(*a1, " ");
  unsigned int v5 = sub_222657CE8(a2);
  if (v5 <= 0x14) {
    sub_2225CA524(*a1, (&off_264625CA8)[v5]);
  }
  sub_2225CA524(*a1, " ");
  uint64_t v6 = sub_222608330(a2);

  return sub_22267B960((uint64_t)a1, v6);
}

void **sub_22267AE64(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22267B960((uint64_t)a1, v4);
  sub_2225CA524(*a1, " ? ");
  uint64_t v5 = sub_222608330(a2);
  sub_22267B960((uint64_t)a1, v5);
  sub_2225CA524(*a1, " : ");
  uint64_t v6 = sub_2225CDCF4(a2);

  return sub_22267B960((uint64_t)a1, v6);
}

void **sub_22267AEF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  uint64_t v5 = sub_2225C5B40(a2);
  uint64_t v6 = sub_222679608(v4);
  if (v6 && sub_222657D00(v6) - 1 < 2)
  {
    sub_2225CA524(*a1, "outputTexture.write(");
    sub_22267A71C(a1, v5);
    uint64_t v7 = *a1;
    return sub_2225CA524(v7, ", _wc)");
  }
  else
  {
    sub_22267A71C(a1, v4);
    sub_2225CA524(*a1, " ");
    unsigned int v9 = sub_222657CF4(a2);
    if (v9 < 0xC) {
      sub_2225CA524(*a1, (&off_264625D50)[v9]);
    }
    sub_2225CA524(*a1, " ");
    return (void **)sub_22267A71C(a1, v5);
  }
}

void **sub_22267B004(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3D04(a2);
  if (sub_222658088(a1[5]))
  {
    uint64_t v4 = (_DWORD *)sub_2226611F0(v3);
    uint64_t v10 = sub_2225C5B40((uint64_t)v4);
    uint64_t v5 = sub_2225C3C70((uint64_t)&v10);
    if (!sub_222655AF0(v5) && sub_2226551A0(v4) == 7) {
      sub_2225CA524(*a1, "params.");
    }
  }
  uint64_t v6 = *a1;
  uint64_t v7 = sub_222654540(v3);
  return sub_2225CA568(v6, v7, v8);
}

void **sub_22267B0B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22267A124(a1, v4);
  unsigned int v13 = 0;
  uint64_t v5 = sub_2225C5B40(a2);
  if (sub_2226556A8(v5, &v13)) {
    sub_222655714(a1, v13);
  }
  sub_2225CA524(*a1, "(");
  uint64_t v6 = a2 + 8;
  uint64_t v7 = (void *)sub_2225CC180(a2 + 8);
  uint64_t v8 = sub_222657D18(v6);
  if (v7 != (void *)v8)
  {
    unsigned int v9 = (void *)v8;
    uint64_t v10 = v8 - (void)v7;
    do
    {
      sub_22267A71C(a1, *v7);
      if (v10 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v7;
      v10 -= 8;
    }
    while (v7 != v9);
  }
  uint64_t v11 = *a1;

  return sub_2225CA524(v11, ")");
}

void **sub_22267B1B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22267B960((uint64_t)a1, v4);
  uint64_t v5 = sub_2225CA524(*a1, ".");
  uint64_t v7 = sub_222657D64(a2);

  return sub_2225CA568((uint64_t)v5, v7, v6);
}

void sub_22267B22C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22267B960((uint64_t)a1, v4);
  v11[0] = sub_222657D64(a2);
  v11[1] = v5;
  if (sub_2225C3D04((uint64_t)v11))
  {
    uint64_t v6 = sub_2225C3D04((uint64_t)v11);
    uint64_t v7 = (char *)malloc_type_malloc(v6 + 1, 0x100004077774924uLL);
    if (v7 && sub_2225C3D04((uint64_t)v11))
    {
      unint64_t v8 = 0;
      do
      {
        unsigned __int8 v9 = sub_2225CC124(v11, v8);
        if (v9 > 0x66u)
        {
          if (v9 == 114)
          {
            unsigned __int8 v9 = 120;
          }
          else if (v9 == 103)
          {
            unsigned __int8 v9 = 121;
          }
        }
        else if (v9 == 97)
        {
          unsigned __int8 v9 = 119;
        }
        else if (v9 == 98)
        {
          unsigned __int8 v9 = 122;
        }
        v7[v8++] = v9;
      }
      while (v8 < sub_2225C3D04((uint64_t)v11));
    }
    v7[sub_2225C3D04((uint64_t)v11)] = 0;
    uint64_t v10 = sub_2225CA524(*a1, ".");
    sub_2225CA524((uint64_t)v10, v7);
    free(v7);
  }
}

void **sub_22267B35C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22267B960((uint64_t)a1, v4);
  sub_2225CA524(*a1, "[");
  uint64_t v5 = sub_222608330(a2);
  sub_22267A71C(a1, v5);
  uint64_t v6 = *a1;

  return sub_2225CA524(v6, "]");
}

void **sub_22267B3D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C5B40(a2);
  sub_22267B960((uint64_t)a1, v3);
  uint64_t v4 = *a1;

  return sub_2225CA524(v4, ".length()");
}

void **sub_22267B424(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  uint64_t v5 = *(void *)sub_2225CC180(a2 + 8);
  uint64_t v6 = *(void *)(sub_2225CC180(v4) + 8);
  switch(sub_222657D00(a2))
  {
    case 2u:
      sub_22267A71C(a1, v5);
      uint64_t v12 = *a1;
      unsigned int v13 = ".transform(";
      goto LABEL_12;
    case 3u:
      sub_22267A71C(a1, v5);
      uint64_t v14 = (void **)*a1;
      uint64_t v15 = ".extent()";
      goto LABEL_19;
    case 4u:
      sub_22267A71C(a1, v5);
      uint64_t v14 = (void **)*a1;
      uint64_t v15 = ".transform(_dc)";
      goto LABEL_19;
    case 5u:
      sub_22267A71C(a1, v5);
      uint64_t v12 = *a1;
      unsigned int v13 = ".texture2D(";
LABEL_12:
      sub_2225CA524(v12, v13);
      sub_22267A71C(a1, v6);
      uint64_t v14 = (void **)*a1;
      goto LABEL_18;
    default:
      uint64_t v7 = (char *)sub_222676A4C(a1[6]);
      if (v7) {
        sub_2225CA524(*a1, "_sampler_swizzle(");
      }
      int v8 = sub_222676A44(a1[6]);
      if (v8) {
        sub_2225CA524(*a1, "_sampler_srgb_to_linear(");
      }
      uint64_t v9 = sub_222679644(a1[6]);
      if (v9)
      {
        uint64_t v10 = (char *)v9;
        sub_2225CA524(*a1, "(");
        sub_22267A71C(a1, v5);
        sub_2225CA524(*a1, ".sample(");
        sub_22267A71C(a1, v6);
        sub_2225CA524(*a1, ")");
        uint64_t v11 = sub_2225CA524(*a1, v10);
      }
      else
      {
        sub_22267A71C(a1, v5);
        sub_2225CA524(*a1, ".sample(");
        sub_22267A71C(a1, v6);
        uint64_t v11 = (void **)*a1;
      }
      uint64_t result = sub_2225CA524((uint64_t)v11, ")");
      if (v8) {
        uint64_t result = sub_2225CA524(*a1, ")");
      }
      if (!v7) {
        return result;
      }
      uint64_t v14 = sub_2225CA524(*a1, v7);
LABEL_18:
      uint64_t v15 = ")";
LABEL_19:
      return sub_2225CA524((uint64_t)v14, v15);
  }
}

void **sub_22267B670(uint64_t *a1, uint64_t a2)
{
  unsigned int v4 = sub_222657DDC(a2) - 65;
  if (v4 >= 6)
  {
    int v10 = sub_222657DDC(a2);
    sub_2225CA524(*a1, (&off_264625DE0)[v10 - 1]);
    uint64_t v11 = a2 + 8;
    uint64_t v12 = (void *)sub_2225CC180(v11);
    uint64_t v13 = sub_222657DE8(v11);
    if (v12 == (void *)v13)
    {
      uint64_t v9 = ")";
    }
    else
    {
      uint64_t v14 = (void *)v13;
      uint64_t v15 = v13 - (void)v12;
      uint64_t v9 = ")";
      do
      {
        sub_22267A71C(a1, *v12);
        if (v15 >= 9) {
          sub_2225CA524(*a1, ", ");
        }
        ++v12;
        v15 -= 8;
      }
      while (v12 != v14);
    }
  }
  else
  {
    uint64_t v5 = (&off_264625DB0)[v4];
    uint64_t v6 = a2 + 8;
    uint64_t v7 = *(void *)sub_2225CC180(v6);
    uint64_t v8 = *(void *)(sub_2225CC180(v6) + 8);
    sub_2225CA524(*a1, "((");
    sub_22267A71C(a1, v7);
    sub_2225CA524(*a1, v5);
    sub_22267A71C(a1, v8);
    uint64_t v9 = "))";
  }
  uint64_t v16 = *a1;

  return sub_2225CA524(v16, v9);
}

void **sub_22267B7CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = sub_222654540(v4);
  uint64_t v7 = v6;
  sub_2225C3D00((int)v22, "destCoord");
  BOOL v8 = sub_2225CD4BC(v5, v7, v22[0], (size_t)v22[1]);
  uint64_t v9 = *a1;
  if (v8)
  {
    int v10 = "_dc";
    uint64_t v11 = *a1;
  }
  else
  {
    uint64_t v12 = sub_2225C5B40(a2);
    uint64_t v13 = sub_222654540(v12);
    uint64_t v15 = sub_2225CA568(v9, v13, v14);
    sub_2225CA524((uint64_t)v15, "(");
    uint64_t v16 = a2 + 8;
    uint64_t v17 = (void *)sub_2225CC180(v16);
    uint64_t v18 = sub_222657E34(v16);
    if (v17 != (void *)v18)
    {
      unsigned int v19 = (void *)v18;
      uint64_t v20 = v18 - (void)v17;
      do
      {
        sub_22267A71C(a1, *v17);
        if (v20 >= 9) {
          sub_2225CA524(*a1, ", ");
        }
        ++v17;
        v20 -= 8;
      }
      while (v17 != v19);
    }
    if (sub_222657E68(v16)) {
      sub_2225CA524(*a1, ", ");
    }
    sub_2225CA524(*a1, "_dc");
    uint64_t v11 = *a1;
    int v10 = ")";
  }
  return sub_2225CA524(v11, v10);
}

uint64_t sub_22267B920(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3D04(a2);

  return sub_22267A71C(a1, v3);
}

void **sub_22267B960(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 12) && sub_2226579AC(a2)) {
    sub_2225CA524(*(void *)a1, "(");
  }
  uint64_t result = (void **)sub_22267A71C(a1, a2);
  if (*(unsigned char *)(a1 + 12))
  {
    uint64_t result = (void **)sub_2226579AC(a2);
    if (result)
    {
      uint64_t v5 = *(void *)a1;
      return sub_2225CA524(v5, ")");
    }
  }
  return result;
}

void sub_22267B9F0(uint64_t *a1, unsigned __int16 *a2)
{
  switch(sub_2226376DC((unsigned __int8 *)a2))
  {
    case 1u:
      sub_22267BC8C(a1, a2);
      break;
    case 2u:
      sub_22267BDB0(a1, a2);
      break;
    case 3u:
      sub_22265412C(a1, a2);
      break;
    case 4u:
      sub_22267BFE4((uint64_t)a2);
      break;
    case 5u:
    case 7u:
    case 8u:
      return;
    case 6u:
      sub_22267C010(a1, a2);
      break;
    case 9u:
      sub_22267C094((uint64_t)a1, (uint64_t)a2);
      break;
    case 0xAu:
      sub_22267C098(a1, a2);
      break;
    default:
      sub_22267BB88(a1, a2);
      break;
  }
}

void sub_22267BB88(uint64_t *a1, _DWORD *a2)
{
  uint64_t v14 = a2;
  uint64_t v3 = a1[2];
  if (v3)
  {
    v13[0] = sub_222654394(v3, (uint64_t *)&v14);
    v13[1] = v4;
    v12[0] = sub_2226543FC(a1[2]);
    v12[1] = v5;
    if (sub_2225F9558(v13, (uint64_t)v12))
    {
      uint64_t v6 = (uint64_t)v14;
      uint64_t v7 = sub_2225C3C70((uint64_t)v13);
      sub_22267A4CC(a1, v6, *(float **)(v7 + 8));
      return;
    }
    a2 = v14;
  }
  sub_22267A5AC(a1, a2);
  sub_22267A648(a1, (uint64_t)v14);
  BOOL v8 = sub_2225CA524(*a1, " ");
  uint64_t v9 = sub_222654540((uint64_t)v14);
  sub_2225CA568((uint64_t)v8, v9, v10);
  sub_2226547A8(a1, (uint64_t)v14);
  if (sub_222608330((uint64_t)v14))
  {
    sub_2225CA524(*a1, " = ");
    uint64_t v11 = sub_222608330((uint64_t)v14);
    sub_22267A71C(a1, v11);
  }
}

uint64_t sub_22267BC8C(uint64_t *a1, _DWORD *a2)
{
  if (sub_222655E50((uint64_t)a2)) {
    sub_2225CA524(*a1, "const ");
  }
  if (sub_22265517C((uint64_t)a2)) {
    sub_222655EBC(a2);
  }
  uint64_t v4 = sub_2225C5B40((uint64_t)a2);
  sub_22267A124(a1, v4);
  unsigned int v11 = -1;
  uint64_t v5 = sub_2225C5B40((uint64_t)a2);
  if (sub_2226556A8(v5, &v11) && (sub_222655708((uint64_t)a2) & 1) == 0) {
    sub_222655714(a1, v11);
  }
  sub_2225CA524(*a1, " ");
  uint64_t result = sub_22265592C((uint64_t)a2);
  if (result)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = sub_222654540((uint64_t)a2);
    sub_2225CA568(v7, v8, v9);
    uint64_t result = sub_222655708((uint64_t)a2);
    if (result)
    {
      unsigned int v10 = v11;
      return (uint64_t)sub_222655714(a1, v10);
    }
  }
  return result;
}

void **sub_22267BDB0(uint64_t *a1, _DWORD *a2)
{
  a1[5] = (uint64_t)a2;
  if (sub_222658088((uint64_t)a2))
  {
    return sub_22267C09C(a1, (uint64_t)a2);
  }
  else
  {
    uint64_t v5 = sub_222654540((uint64_t)a2);
    uint64_t v7 = v6;
    sub_2225C3D00((int)v20, "destCoord");
    uint64_t result = (void **)sub_2225CD4BC(v5, v7, v20[0], (size_t)v20[1]);
    if ((result & 1) == 0)
    {
      sub_2225CA524(*a1, "static ");
      if (sub_222655ED4((uint64_t)a2)) {
        sub_222655EE0(a2);
      }
      uint64_t v8 = sub_222640540((uint64_t)a2);
      sub_22267A124(a1, v8);
      unsigned int v19 = 0;
      uint64_t v9 = sub_222640540((uint64_t)a2);
      if (sub_2226556A8(v9, &v19)) {
        sub_222655714(a1, v19);
      }
      unsigned int v10 = sub_2225CA524(*a1, " ");
      uint64_t v11 = sub_222654540((uint64_t)a2);
      uint64_t v13 = sub_2225CA568((uint64_t)v10, v11, v12);
      sub_2225CA524((uint64_t)v13, "(");
      uint64_t v14 = (void *)sub_2225CC180((uint64_t)(a2 + 4));
      uint64_t v15 = sub_222655EEC((uint64_t)(a2 + 4));
      if (v14 != (void *)v15)
      {
        uint64_t v16 = (void *)v15;
        uint64_t v17 = v15 - (void)v14;
        do
        {
          sub_22267A734(a1, *v14);
          if (v17 >= 9) {
            sub_2225CA524(*a1, ", ");
          }
          ++v14;
          v17 -= 8;
        }
        while (v14 != v16);
      }
      if (sub_222655F48(a2 + 4)) {
        sub_2225CA524(*a1, ", ");
      }
      sub_2225CA524(*a1, "float2 _dc)");
      if (sub_222655F20((uint64_t)a2))
      {
        sub_2225CA524(*a1, " ");
        uint64_t v18 = (unsigned __int8 *)sub_222655F20((uint64_t)a2);
        sub_22267C3B8(a1, v18);
        return sub_2225CA524(*a1, "\n");
      }
      else
      {
        return sub_222655F28(a1, 0);
      }
    }
  }
  return result;
}

uint64_t sub_22267BFE4(uint64_t a1)
{
  int v1 = sub_2225F514C(a1);

  return sub_22267A498(v1);
}

void **sub_22267C010(uint64_t *a1, unsigned __int16 *a2)
{
  if (sub_2225C5B40((uint64_t)a2))
  {
    uint64_t v4 = *a1;
    uint64_t v5 = sub_2225C5B40((uint64_t)a2);
    uint64_t v7 = sub_222654540(v5);
    return sub_2225CA568(v4, v7, v6);
  }
  else
  {
    return (void **)sub_222656050(a2);
  }
}

void **sub_22267C09C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CA524(*a1, "kernel void ");
  uint64_t v5 = sub_222654540(a2);
  sub_2225CA568((uint64_t)v4, v5, v6);
  v34[0] = sub_222654540(a2);
  v34[1] = v7;
  sub_2225C3D00((int)v33, "main");
  if (sub_2225C3CC8((uint64_t)v34, v33[0], (size_t)v33[1])) {
    sub_2225CA524(*a1, "MetalEntryPoint");
  }
  sub_2225CA524(*a1, "(texture2d<");
  uint64_t v32 = a2;
  int v8 = sub_222613B9C(a2);
  if (v8)
  {
    if (v8 != 1) {
      goto LABEL_8;
    }
    uint64_t v9 = "half";
  }
  else
  {
    uint64_t v9 = "float";
  }
  sub_2225CA524(*a1, v9);
LABEL_8:
  sub_2225CA524(*a1, ", access::write> outputTexture [[texture(0)]]");
  unsigned int v10 = (uint64_t *)sub_2225C3C70((uint64_t)(a1 + 3));
  uint64_t v11 = sub_2225DC1A0(a1 + 3);
  if (v10 != (uint64_t *)v11)
  {
    uint64_t v12 = (uint64_t *)v11;
    unsigned int v13 = 0;
    unsigned int v14 = 1;
    while (1)
    {
      uint64_t v15 = *v10;
      v34[0] = sub_2225C5B40(*v10);
      uint64_t v16 = sub_2225C3C70((uint64_t)v34);
      if (sub_222655AF0(v16)) {
        break;
      }
LABEL_17:
      if (++v10 == v12) {
        goto LABEL_18;
      }
    }
    sub_2225CA524(*a1, ", \n");
    v34[0] = sub_2225C5B40(v15);
    uint64_t v17 = sub_2225C3C70((uint64_t)v34);
    uint64_t v18 = sub_222655AF0(v17);
    uint64_t v19 = sub_222654540(v15);
    uint64_t v21 = v20;
    sub_2225CA524(*a1, "texture2d<");
    int v22 = sub_222655AF4(v18);
    if (v22)
    {
      if (v22 != 1)
      {
LABEL_16:
        sub_2225CA524(*a1, ", access::sample> ");
        uint64_t v24 = sub_2225CA568(*a1, v19, v21);
        sub_2225CA524((uint64_t)v24, "_texture");
        int v25 = sub_2225CA524(*a1, " [[ texture(");
        char v26 = sub_2225CA560(v25, v14);
        sub_2225CA524((uint64_t)v26, ") ]]");
        sub_2225CA524(*a1, ", sampler ");
        uint64_t v27 = sub_2225CA568(*a1, v19, v21);
        sub_2225CA524((uint64_t)v27, "_sampler");
        unsigned int v28 = sub_2225CA524(*a1, " [[ sampler(");
        uint64_t v29 = sub_2225CA560(v28, v13);
        sub_2225CA524((uint64_t)v29, ") ]]");
        ++v13;
        ++v14;
        goto LABEL_17;
      }
      uint64_t v23 = "half";
    }
    else
    {
      uint64_t v23 = "float";
    }
    sub_2225CA524(*a1, v23);
    goto LABEL_16;
  }
LABEL_18:
  sub_2225CA524(*a1, ",\n");
  sub_2225CA524(*a1, "constant Params &params [[ buffer(0) ]], ");
  sub_2225CA524(*a1, "uint2 gid [[ thread_position_in_grid ]])");
  if (!sub_222655F20(v32)) {
    return sub_222655F28(a1, 0);
  }
  sub_2225CA524(*a1, " ");
  uint64_t v30 = (unsigned __int8 *)sub_222655F20(v32);
  sub_22267C3B8(a1, v30);
  return sub_2225CA524(*a1, "\n");
}

void **sub_22267C3B8(uint64_t *a1, unsigned __int8 *a2)
{
  if (a2) {
    return (void **)sub_22267C3D0(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

uint64_t sub_22267C3D0(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t result = sub_2226376DC(a2);
  switch((int)result)
  {
    case 0:
      uint64_t result = (uint64_t)sub_22267C64C((uint64_t)a1, (uint64_t)a2);
      break;
    case 1:
      uint64_t result = (uint64_t)sub_222656430(a1);
      break;
    case 2:
      uint64_t result = sub_22267C92C((uint64_t)a1, (uint64_t)a2);
      break;
    case 3:
      uint64_t result = (uint64_t)sub_22267C938(a1, (uint64_t)a2);
      break;
    case 4:
      uint64_t result = sub_22267CA3C(a1, (uint64_t)a2);
      break;
    case 5:
      uint64_t result = (uint64_t)sub_22267CAB4(a1, (uint64_t)a2);
      break;
    case 6:
      uint64_t result = (uint64_t)sub_22265662C(a1);
      break;
    case 7:
      uint64_t result = (uint64_t)sub_22267CB18(a1, (uint64_t)a2);
      break;
    case 8:
      uint64_t result = (uint64_t)sub_22267CC30(a1, (uint64_t)a2);
      break;
    case 9:
      uint64_t result = (uint64_t)sub_22267CCBC(a1, (uint64_t)a2);
      break;
    case 10:
      uint64_t result = (uint64_t)sub_222656888(a1);
      break;
    case 11:
      uint64_t result = (uint64_t)sub_2226568D0(a1);
      break;
    case 13:
      uint64_t result = (uint64_t)sub_22267CD64(a1, (uint64_t)a2);
      break;
    case 14:
      uint64_t result = sub_22267B920((uint64_t)a1, (uint64_t)a2);
      break;
    default:
      return result;
  }
  return result;
}

void **sub_22267C64C(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "{\n");
  if (sub_222658088(*(void *)(a1 + 40)) && !*(unsigned char *)(a1 + 56))
  {
    sub_2225CA524(*(void *)a1, "\n");
    sub_2225CA524(*(void *)a1, "  if (gid.x >= abs(params.outputRect.z) || gid.y >= abs(params.outputRect.w)) return;\n\n");
    sub_2225CA524(*(void *)a1, "  float2 _dc = static_cast<float2>(gid) + params.outputRect.xy + float2(0.5,0.5);\n"
      "  _dc = (float3(_dc.xy,1.0) * params.vertexTransform).xy;\n"
      "\n");
    sub_2225CA524(*(void *)a1, "  uint2 _wc = uint2(gid.x, gid.y + (params.outputRect.w < 0) * ((-params.outputRect.w-1)-2*gid.y));\n"
      "  _wc += static_cast<uint2>(params.outputRect.xy);\n"
      "\n");
    uint64_t v4 = (uint64_t *)sub_2225C3C70(a1 + 24);
    uint64_t v5 = sub_2225DC1A0((void *)(a1 + 24));
    if (v4 != (uint64_t *)v5)
    {
      uint64_t v6 = (uint64_t *)v5;
      do
      {
        uint64_t v7 = *v4;
        uint64_t v36 = sub_2225C5B40(*v4);
        uint64_t v8 = sub_2225C3C70((uint64_t)&v36);
        uint64_t v9 = sub_222655AF0(v8);
        uint64_t v10 = sub_222654540(v7);
        if (v9)
        {
          uint64_t v12 = v10;
          uint64_t v13 = v11;
          sub_2225CA524(*(void *)a1, "  ");
          sub_2225C64B8(&v35, v9);
          sub_22267A124(a1, v35);
          unsigned int v14 = sub_2225CA524(*(void *)a1, " ");
          uint64_t v15 = sub_2225CA568((uint64_t)v14, v12, v13);
          sub_2225CA524((uint64_t)v15, " = ");
          int v16 = sub_222655B00(v9);
          if (v16 == 1)
          {
            int v25 = sub_2225CA524(*(void *)a1, "{ ");
            char v26 = sub_2225CA568((uint64_t)v25, v12, v13);
            uint64_t v27 = sub_2225CA524((uint64_t)v26, "_texture, ");
            unsigned int v28 = sub_2225CA568((uint64_t)v27, v12, v13);
            uint64_t v23 = sub_2225CA524((uint64_t)v28, "_sampler");
            uint64_t v24 = " };\n";
            goto LABEL_10;
          }
          if (!v16)
          {
            uint64_t v17 = sub_2225CA524(*(void *)a1, "{ ");
            uint64_t v18 = sub_2225CA568((uint64_t)v17, v12, v13);
            uint64_t v19 = sub_2225CA524((uint64_t)v18, "_texture, ");
            uint64_t v20 = sub_2225CA568((uint64_t)v19, v12, v13);
            uint64_t v21 = sub_2225CA524((uint64_t)v20, "_sampler, ");
            int v22 = sub_2225CA524((uint64_t)v21, "params.");
            uint64_t v23 = sub_2225CA568((uint64_t)v22, v12, v13);
            uint64_t v24 = "_m };\n";
LABEL_10:
            sub_2225CA524((uint64_t)v23, v24);
          }
        }
        ++v4;
      }
      while (v4 != v6);
    }
    sub_2225CA524(*(void *)a1, "\n");
    *(unsigned char *)(a1 + 56) = 1;
  }
  ++*(_DWORD *)(a1 + 8);
  uint64_t v29 = a2 + 8;
  uint64_t v30 = (uint64_t *)sub_2225CC180(a2 + 8);
  uint64_t v31 = sub_222656A1C(v29);
  if (v30 != (uint64_t *)v31)
  {
    uint64_t v32 = (uint64_t *)v31;
    do
    {
      uint64_t v33 = *v30++;
      sub_222655980((void **)a1);
      sub_22267C3B8(a1, v33);
      sub_222656A50((uint64_t *)a1, v33);
      sub_2225CA524(*(void *)a1, "\n");
    }
    while (v30 != v32);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  return sub_2225CA524(*(void *)a1, "}");
}

uint64_t sub_22267C92C(uint64_t a1, uint64_t a2)
{
  return sub_222679A98(a1, a2 + 8, 0);
}

void **sub_22267C938(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "if (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_22267A71C(a1, v4);
  }
  sub_2225CA524(*a1, ") ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v5 = sub_2225C5B40(a2);
    sub_22267C3B8(a1, v5);
    uint64_t v6 = sub_2225C5B40(a2);
    sub_222656A50(a1, v6);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  uint64_t result = (void **)sub_222608330(a2);
  if (result)
  {
    sub_2225CA524(*a1, " else ");
    uint64_t v8 = sub_222608330(a2);
    sub_22267C3B8(a1, v8);
    uint64_t v9 = sub_222608330(a2);
    return sub_222656A50(a1, v9);
  }
  return result;
}

uint64_t sub_22267CA3C(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "switch (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_22267A71C(a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);

  return sub_22267C3B8(a1, v5);
}

void **sub_22267CAB4(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "case ");
  uint64_t v4 = sub_222608330(a2);
  sub_22267A71C(a1, v4);
  uint64_t v5 = *a1;

  return sub_2225CA524(v5, ": ");
}

void **sub_22267CB18(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "for (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_22267C3B8(a1, v4);
    uint64_t v5 = sub_2225C3D04(a2);
    sub_222656A50(a1, v5);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  sub_2225CA524(*a1, " ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v6 = sub_2225C5B40(a2);
    sub_22267C3B8(a1, v6);
  }
  sub_222655F28(a1, 1);
  if (sub_222608330(a2))
  {
    uint64_t v7 = sub_222608330(a2);
    sub_22267A71C(a1, v7);
  }
  sub_2225CA524(*a1, ") ");
  uint64_t v8 = sub_2225CDCF4(a2);
  sub_22267C3B8(a1, v8);
  uint64_t v9 = sub_2225CDCF4(a2);

  return sub_222656A50(a1, v9);
}

void **sub_22267CC30(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "while (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_22267C3B8(a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);
  sub_22267C3B8(a1, v5);
  uint64_t v6 = sub_2225C5B40(a2);

  return sub_222656A50(a1, v6);
}

void **sub_22267CCBC(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "do ");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_22267C3B8(a1, v4);
  uint64_t v5 = sub_2225C3D04(a2);
  sub_222656A50(a1, v5);
  sub_2225CA524(*a1, " while (");
  uint64_t v6 = sub_2225C5B40(a2);
  sub_22267A71C(a1, v6);
  sub_2225CA524(*a1, ")");

  return sub_222655F28(a1, 0);
}

void **sub_22267CD64(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "return");
  if (sub_2225C3D04(a2))
  {
    sub_2225CA524(*a1, " ");
    uint64_t v4 = sub_2225C3D04(a2);
    sub_22267A71C(a1, v4);
  }

  return sub_222655F28(a1, 0);
}

uint64_t sub_22267CDE0(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_22267CE1C(a1, v2);
}

uint64_t sub_22267CE1C(uint64_t a1, uint64_t a2)
{
  return sub_22267CE24(a1, a2, 0);
}

uint64_t sub_22267CE24(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_2226533CC(a1);
  sub_22267CF24((uint64_t)v21, a2, v6);
  v21[85] = sub_2226760FC(a1);
  v21[86] = v7;
  sub_22267CF28(v21);
  int v22 = a3;
  BOOL v23 = (a3 & 0x10) != 0;
  uint64_t v19 = sub_2226533D4(a1);
  uint64_t v20 = v8;
  uint64_t v9 = (uint64_t *)sub_2225C3C70((uint64_t)&v19);
  uint64_t v10 = sub_2225DC1A0(&v19);
  if (v9 != (uint64_t *)v10)
  {
    uint64_t v11 = (uint64_t *)v10;
    do
    {
      uint64_t v12 = *v9++;
      sub_22267D098(v21, v12, 1);
    }
    while (v9 != v11);
  }
  uint64_t v19 = sub_2226534D8(a1);
  uint64_t v20 = v13;
  unsigned int v14 = (uint64_t *)sub_2225C3C70((uint64_t)&v19);
  uint64_t v15 = sub_2225DC1A0(&v19);
  if (v14 != (uint64_t *)v15)
  {
    int v16 = (uint64_t *)v15;
    do
    {
      uint64_t v17 = *v14++;
      sub_22267D098(v21, v17, 1);
    }
    while (v14 != v16);
  }
  return sub_22267D170((uint64_t)v21);
}

void **sub_22267CF28(uint64_t *a1)
{
  sub_2225CA524(*a1, "#define _V3_TO_V3(a) (((float4)(((float3)(a)),_dc.x)).xyz) \n#define FRACT(A) (fmin((A) - floor(A), 0x1.fffffep-1f))\n\ninline float  __attribute__(overloadable) lessThan(float  x,float  y) { return (1.0f             - step(y,x)); }\n"
    "inline float2 __attribute__(overloadable) lessThan(float  x,float2 y) { return (((float2)(1.0f)) - step(y,(float2)"
    "(x))); }\n"
    "inline float3 __attribute__(overloadable) lessThan(float  x,float3 y) { return (((float3)(1.0f)) - step(y,(float3)"
    "(x))); }\n"
    "inline float4 __attribute__(overloadable) lessThan(float  x,float4 y) { return (((float4)(1.0f)) - step(y,(float4)"
    "(x))); }\n"
    "inline float2 __attribute__(overloadable) lessThan(float2 x,float2 y) { return ((float2)(1.0f)   - step(y,x)); }\n"
    "inline float3 __attribute__(overloadable) lessThan(float3 x,float3 y) { return ((float3)(1.0f)   - step(y,x)); }\n"
    "inline float4 __attribute__(overloadable) lessThan(float4 x,float4 y) { return ((float4)(1.0f)   - step(y,x)); }\n"
    "\n"
    "inline float  __attribute__(overloadable) foslMix(float  x,float  y,float  a) { return mix(x,y,a); }\n"
    "inline float2 __attribute__(overloadable) foslMix(float2 x,float2 y,float  a) { return mix(x,y,(float2)(a)); }\n"
    "inline float3 __attribute__(overloadable) foslMix(float3 x,float3 y,float  a) { return mix(x,y,(float3)(a)); }\n"
    "inline float4 __attribute__(overloadable) foslMix(float4 x,float4 y,float  a) { return mix(x,y,(float4)(a)); }\n"
    "inline float2 __attribute__(overloadable) foslMix(float2 x,float2 y,float2 a) { return mix(x,y,a); }\n"
    "inline float3 __attribute__(overloadable) foslMix(float3 x,float3 y,float3 a) { return mix(x,y,a); }\n"
    "inline float4 __attribute__(overloadable) foslMix(float4 x,float4 y,float4 a) { return mix(x,y,a); }\n"
    "\n"
    "inline float  __attribute__(overloadable) mod(float  x,float  y) { return x - y * floor(x / y); }\n"
    "inline float2 __attribute__(overloadable) mod(float2 x,float  y) { return x - y * floor(x / y); }\n"
    "inline float2 __attribute__(overloadable) mod(float2 x,float2 y) { return x - y * floor(x / y); }\n"
    "inline float3 __attribute__(overloadable) mod(float3 x,float  y) { return x - y * floor(x / y); }\n"
    "inline float3 __attribute__(overloadable) mod(float3 x,float3 y) { return x - y * floor(x / y); }\n"
    "inline float4 __attribute__(overloadable) mod(float4 x,float  y) { return x - y * floor(x / y); }\n"
    "inline float4 __attribute__(overloadable) mod(float4 x,float4 y) { return x - y * floor(x / y); }\n"
    "\n"
    "inline float2 __attribute__(overloadable) matMultiply(float2 v,float4 m) {\n"
    "  float x = dot(v, (float2)(m.s0,m.s1));\n"
    "  float y = dot(v, (float2)(m.s2,m.s3));\n"
    "  return (float2)(x,y);\n"
    "}\n"
    "\n"
    "inline float3 __attribute__(overloadable) matMultiply(float3 v,float16 m) {\n"
    "  float x = dot(v, (float3)(m.s0,m.s1,m.s2));\n"
    "  float y = dot(v, (float3)(m.s4,m.s5,m.s6));\n"
    "  float z = dot(v, (float3)(m.s8,m.s9,m.sa));\n"
    "  return (float3)(x,y,z);\n"
    "}\n"
    "\n"
    "inline float4 __attribute__(overloadable) matMultiply(float4 v,float16 m) {\n"
    "  float x = dot(v, (float4)(m.s0,m.s1,m.s2,m.s3));\n"
    "  float y = dot(v, (float4)(m.s4,m.s5,m.s6,m.s7));\n"
    "  float z = dot(v, (float4)(m.s8,m.s9,m.sa,m.sb));\n"
    "  float w = dot(v, (float4)(m.sc,m.sd,m.se,m.sf));\n"
    "  return (float4)(x,y,z,w);\n"
    "}\n"
    "\n");
  uint64_t v2 = (uint64_t *)sub_2225C3C70((uint64_t)(a1 + 85));
  uint64_t result = (void **)sub_2225DC1A0(a1 + 85);
  if (v2 == (uint64_t *)result)
  {
    char v6 = 0;
    char v5 = 0;
LABEL_11:
    if ((v6 & 1) == 0) {
      return result;
    }
  }
  else
  {
    uint64_t v4 = (uint64_t *)result;
    char v5 = 0;
    char v6 = 0;
    do
    {
      uint64_t v11 = sub_2225C5B40(*v2);
      uint64_t v7 = sub_2225C3C70((uint64_t)&v11);
      uint64_t result = (void **)sub_222655AF0(v7);
      if (result)
      {
        uint64_t result = (void **)sub_222655B00((uint64_t)result);
        v5 |= result == 0;
        v6 |= result == 1;
      }
      if (v5 & 1) != 0 && (v6)
      {
        sub_2225CA524(*a1, "inline float4 sample(read_only image2d_t image, sampler_t sampler, float2 p) {\n  return read_imagef(image, sampler, p);\n"
          "}\n"
          "\n"
          "inline float2 samplerTransform(float4 transform0, float4 transform1, float2 p) {\n"
          "  float x = dot((float4)(p, 1.0, 0.0), transform0);\n"
          "  float y = dot((float4)(p, 1.0, 0.0), transform1);\n"
          "  return (float2)(x,y);\n"
          "}\n"
          "\n"
          "inline float4 samplerExtent(float4 extent) {\n"
          "  return extent;\n"
          "}\n"
          "\n");
        goto LABEL_17;
      }
      ++v2;
    }
    while (v2 != v4);
    if ((v5 & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (v5) {
    sub_2225CA524(*a1, "inline float4 sample(read_only image2d_t image, sampler_t sampler, float2 p) {\n  return read_imagef(image, sampler, p);\n"
  }
      "}\n"
      "\n"
      "inline float2 samplerTransform(float4 transform0, float4 transform1, float2 p) {\n"
      "  float x = dot((float4)(p, 1.0, 0.0), transform0);\n"
      "  float y = dot((float4)(p, 1.0, 0.0), transform1);\n"
      "  return (float2)(x,y);\n"
      "}\n"
      "\n"
      "inline float4 samplerExtent(float4 extent) {\n"
      "  return extent;\n"
      "}\n"
      "\n");
  if (v6) {
LABEL_17:
  }
    sub_2225CA524(*a1, "inline float4 texture2D(read_only image2d_t image, sampler_t sampler, float2 p) {\n  return read_imagef(image, sampler, p);\n"
      "}\n"
      "\n");
  if (sub_222676A44(a1[88])) {
    sub_2225CA524(*a1, "inline float4 __attribute__(overloadable) _sampler_srgb_to_linear(float4 s, float2 _dc) {\n  s.xyz = _V3_TO_V3(_V3_TO_V3(_V3_TO_V3(sign(s.xyz)) * _V3_TO_V3(foslMix(_V3_TO_V3(_V3_TO_V3(fabs(s.xyz)) * 7.739938e-02f), _V3_TO_V3(__ci_gamma_scalar_SPI(_V3_TO_V3((_V3_TO_V3(_V3_TO_V3(fabs(s.xyz)) * 9.478673e-01f)) + 5.213270e-02f), 2.400000e+00f)), _V3_TO_V3(step(4.045000e-02f, _V3_TO_V3(fabs(s.xyz))))))));\n"
  }
      "  return s;\n"
      "}\n"
      "\n");
  uint64_t result = (void **)sub_222676A4C(a1[88]);
  if (result)
  {
    uint64_t v8 = sub_2225CA524(*a1, "inline float4 __attribute__(overloadable) _sampler_swizzle(float4 s) {\n  return ");
    uint64_t v9 = (char *)sub_222676A4C(a1[88]);
    uint64_t v10 = sub_2225CA524((uint64_t)v8, v9);
    return sub_2225CA524((uint64_t)v10, ";\n}\n\n");
  }
  return result;
}

uint64_t sub_22267D098(void *a1, uint64_t a2, char a3)
{
  v13[5] = *MEMORY[0x263EF8340];
  sub_222631188(v13);
  char v6 = (uint64_t *)sub_222657EC4(a2);
  uint64_t v7 = sub_222657EC8(a2);
  if (v6 != (uint64_t *)v7)
  {
    uint64_t v8 = (uint64_t *)v7;
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v12 = v9;
      sub_2225CC7B8((uint64_t)v13, &v12);
    }
    while (v6 != v8);
  }
  if (!sub_2225CF1D0(v13))
  {
    sub_2225D3DDC(v11, v13);
    sub_22267D3C8(a1, v11[0], v11[1], a3);
  }
  return sub_2225C56C4(v13);
}

uint64_t sub_22267D174(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_2226533CC(a1);
  sub_22267CF24((uint64_t)v29, a2, v6);
  uint64_t v7 = sub_22265372C(a1);
  v29[88] = sub_222657FBC(a1);
  v29[85] = sub_2226760FC(a1);
  v29[86] = v8;
  sub_22267CF28(v29);
  int v30 = a3;
  BOOL v31 = (a3 & 0x10) != 0;
  uint64_t v27 = sub_2226533D4(a1);
  uint64_t v28 = v9;
  uint64_t v10 = (uint64_t *)sub_2225C3C70((uint64_t)&v27);
  uint64_t v11 = sub_2225DC1A0(&v27);
  if (v10 != (uint64_t *)v11)
  {
    uint64_t v12 = (uint64_t *)v11;
    do
    {
      uint64_t v13 = *v10;
      sub_2225D3DAC(v32);
      unsigned int v14 = (uint64_t *)sub_222653754(v13);
      for (uint64_t i = sub_222653758(v13); v14 != (uint64_t *)i; ++v14)
      {
        uint64_t v26 = 0;
        uint64_t v26 = *v14;
        if (sub_2226537E0(v7, v26)) {
          sub_2225CC7B8((uint64_t)v32, &v26);
        }
      }
      if (sub_2225CC780((uint64_t)v32))
      {
        sub_2225D3DDC(v25, v32);
        sub_22267D3C8(v29, v25[0], v25[1], 1);
      }
      sub_2225C56C4(v32);
      ++v10;
    }
    while (v10 != v12);
  }
  uint64_t v27 = sub_2226534D8(a1);
  uint64_t v28 = v16;
  uint64_t v17 = (uint64_t *)sub_2225C3C70((uint64_t)&v27);
  uint64_t v18 = sub_2225DC1A0(&v27);
  if (v17 != (uint64_t *)v18)
  {
    uint64_t v19 = (uint64_t *)v18;
    do
    {
      uint64_t v20 = *v17;
      sub_2225D3DAC(v32);
      uint64_t v21 = (uint64_t *)sub_222653754(v20);
      for (uint64_t j = sub_222653758(v20); v21 != (uint64_t *)j; ++v21)
      {
        uint64_t v26 = 0;
        uint64_t v26 = *v21;
        if (sub_2226537E0(v7, v26)) {
          sub_2225CC7B8((uint64_t)v32, &v26);
        }
      }
      if (sub_2225CC780((uint64_t)v32))
      {
        sub_2225D3DDC(v24, v32);
        sub_22267D3C8(v29, v24[0], v24[1], 1);
      }
      sub_2225C56C4(v32);
      ++v17;
    }
    while (v17 != v19);
  }
  return sub_22267D170((uint64_t)v29);
}

void sub_22267D3C8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  v65[0] = a2;
  v65[1] = a3;
  uint64_t v63 = a1;
  char v64 = a4;
  if (*((_DWORD *)a1 + 2))
  {
    uint64_t v5 = sub_2225C3C70((uint64_t)v65);
    if (sub_2226583D0(v5))
    {
      uint64_t v6 = (uint64_t *)sub_2225C3C70((uint64_t)v65);
      uint64_t v7 = sub_2225DC1A0(v65);
      if (v6 == (uint64_t *)v7) {
        return;
      }
      uint64_t v8 = (uint64_t *)v7;
      char v9 = 0;
      char v10 = 1;
      while (1)
      {
        uint64_t v11 = *v6;
        uint64_t v62 = 0;
        uint64_t v62 = (unsigned __int8 *)sub_2225E55A8(v11);
        uint64_t v12 = a1[2];
        if (!v12) {
          break;
        }
        v61[0] = sub_222654394(v12, (uint64_t *)&v62);
        v61[1] = v13;
        v60[0] = sub_2226543FC(a1[2]);
        v60[1] = v14;
        if (!sub_2225F9558(v61, (uint64_t)v60)) {
          break;
        }
        uint64_t v15 = v62;
        uint64_t v16 = sub_2225C3C70((uint64_t)v61);
        sub_22267D9C0(a1, (uint64_t)v15, *(float **)(v16 + 8));
        sub_222655F28(a1, 0);
        sub_22267A58C(&v63);
LABEL_24:
        if (++v6 == v8)
        {
          if ((v10 & 1) == 0)
          {
            sub_222655F28(a1, 0);
            sub_22267A58C(&v63);
          }
          if (((*((unsigned char *)a1 + 720) != 0) & v9) == 1)
          {
            sub_2225CA524(*a1, "\n");
            int v25 = (uint64_t *)sub_2225C3C70((uint64_t)v65);
            uint64_t v26 = sub_2225DC1A0(v65);
            if (v25 != (uint64_t *)v26)
            {
              uint64_t v27 = (uint64_t *)v26;
              do
              {
                uint64_t v28 = (unsigned __int8 *)sub_2225E55A8(*v25);
                if (sub_222608330((uint64_t)v28) && sub_22267DA80(v28))
                {
                  sub_222655980((void **)a1);
                  uint64_t v29 = *a1;
                  uint64_t v30 = sub_222654540((uint64_t)v28);
                  uint64_t v32 = sub_2225CA568(v29, v30, v31);
                  sub_2225CA524((uint64_t)v32, " = ((float4)(");
                  uint64_t v33 = sub_222608330((uint64_t)v28);
                  uint64_t v34 = sub_22267DD9C(v33);
                  if (v34 && (uint64_t v35 = v34 + 8, sub_222657D4C(v34 + 8) == 3))
                  {
                    uint64_t v36 = (uint64_t *)sub_2225CC180(v35);
                    uint64_t v37 = sub_222657D18(v35);
                    while (v36 != (uint64_t *)v37)
                    {
                      uint64_t v38 = *v36++;
                      sub_22267DC48((uint64_t)a1, v38);
                      sub_2225CA524(*a1, ", ");
                    }
                    uint64_t v39 = *(void *)sub_22267DDD8(v35);
                    uint64_t v40 = "))";
                  }
                  else
                  {
                    uint64_t v39 = sub_222608330((uint64_t)v28);
                    uint64_t v40 = ").xyzz)";
                  }
                  sub_22267DC48((uint64_t)a1, v39);
                  sub_2225CA524(*a1, v40);
                  sub_222655F28(a1, 0);
                  sub_2225CA524(*a1, "\n");
                }
                ++v25;
              }
              while (v25 != v27);
            }
          }
          return;
        }
      }
      if (*((unsigned char *)a1 + 720) && sub_22267DA80(v62))
      {
        sub_222608E54((uint64_t)(a1 + 73), (uint64_t)v62);
        int v17 = 1;
        char v9 = 1;
        if ((v10 & 1) == 0)
        {
LABEL_11:
          uint64_t v18 = *a1;
          uint64_t v19 = ",";
          goto LABEL_17;
        }
      }
      else
      {
        int v17 = 0;
        if ((v10 & 1) == 0) {
          goto LABEL_11;
        }
      }
      sub_22267DAD8(a1, v62);
      char v20 = v17 ^ 1;
      if (!*((unsigned char *)a1 + 720)) {
        char v20 = 1;
      }
      if (v20)
      {
        sub_22267DB74(a1, (uint64_t)v62);
        goto LABEL_19;
      }
      uint64_t v18 = *a1;
      uint64_t v19 = "float4";
LABEL_17:
      sub_2225CA524(v18, v19);
LABEL_19:
      uint64_t v21 = sub_2225CA524(*a1, " ");
      uint64_t v22 = sub_222654540((uint64_t)v62);
      sub_2225CA568((uint64_t)v21, v22, v23);
      sub_2226547A8(a1, (uint64_t)v62);
      if (sub_222608330((uint64_t)v62))
      {
        sub_2225CA524(*a1, " = ");
        if (v17)
        {
          sub_2225CA524(*a1, "(float4)(0.0f)");
        }
        else
        {
          uint64_t v24 = sub_222608330((uint64_t)v62);
          sub_22267DC48((uint64_t)a1, v24);
        }
      }
      char v10 = 0;
      goto LABEL_24;
    }
  }
  uint64_t v41 = sub_2225C3C70((uint64_t)v65);
  int v42 = sub_2226583D4(v41);
  uint64_t v43 = (uint64_t *)sub_2225C3C70((uint64_t)v65);
  uint64_t v44 = sub_2225DC1A0(v65);
  uint64_t v45 = (uint64_t *)v44;
  BOOL v46 = v43 == (uint64_t *)v44;
  if (v42)
  {
    if (v43 != (uint64_t *)v44)
    {
      char v47 = 1;
      do
      {
        uint64_t v48 = *v43;
        if ((v47 & 1) == 0) {
          sub_2225CA524(*a1, ",");
        }
        sub_2225CA524(*a1, " ");
        uint64_t v49 = (unsigned __int16 *)sub_2225E55A8(v48);
        if (sub_2225C5B40((uint64_t)v49))
        {
          uint64_t v50 = *a1;
          uint64_t v51 = sub_2225C5B40((uint64_t)v49);
          uint64_t v52 = sub_222654540(v51);
          sub_2225CA568(v50, v52, v53);
        }
        else
        {
          int v54 = sub_222656050(v49);
          sub_222656030(a1, v54);
        }
        char v47 = 0;
        ++v43;
      }
      while (v43 != v45);
    }
    sub_222655F28(a1, 0);
LABEL_64:
    sub_22267A58C(&v63);
    return;
  }
  while (!v46)
  {
    uint64_t v55 = (unsigned __int16 *)*v43;
    v61[0] = *v43;
    if (!*((_DWORD *)a1 + 2))
    {
      if (sub_2226583D0(v61)) {
        goto LABEL_56;
      }
      uint64_t v55 = (unsigned __int16 *)v61[0];
    }
    sub_22267DDF4(a1, v55);
LABEL_56:
    BOOL v46 = ++v43 == v45;
  }
  if (*((_DWORD *)a1 + 2))
  {
    uint64_t v56 = sub_2225C3C70((uint64_t)v65);
    if ((sub_222658084(v56) & 1) == 0)
    {
      uint64_t v57 = sub_2225C3C70((uint64_t)v65);
      if ((sub_2226580F0(v57) & 1) == 0)
      {
        uint64_t v58 = sub_2225C3C70((uint64_t)v65);
        if ((sub_2226580F4(v58) & 1) == 0) {
          sub_222655F28(a1, 0);
        }
      }
    }
    if (*((_DWORD *)a1 + 2)) {
      goto LABEL_64;
    }
  }
  uint64_t v59 = sub_2225C3C70((uint64_t)v65);
  if ((sub_2226583D0(v59) & 1) == 0) {
    goto LABEL_64;
  }
}

uint64_t sub_22267D90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 1;
  *(void *)(a1 + 16) = a3;
  sub_222676A30(a1 + 24);
  *(_OWORD *)(a1 + 568) = 0u;
  sub_22265B91C(a1 + 584);
  sub_2225CCC70((void *)(a1 + 680));
  *(_DWORD *)(a1 + 716) = 0;
  *(_OWORD *)(a1 + 696) = 0u;
  *(unsigned char *)(a1 + 712) = 0;
  *(_DWORD *)(a1 + 721) = 16777217;
  return a1;
}

uint64_t sub_22267D98C(uint64_t a1)
{
  return a1;
}

void **sub_22267D9C0(uint64_t *a1, uint64_t a2, float *a3)
{
  sub_2225CA524(*a1, "const ");
  sub_22267DB74(a1, a2);
  uint64_t v6 = sub_2225CA524(*a1, " ");
  uint64_t v7 = sub_222654540(a2);
  sub_2225CA568((uint64_t)v6, v7, v8);
  sub_2226547A8(a1, a2);
  sub_2225CA524(*a1, " = ");
  uint64_t v9 = sub_2225C5B40(a2);
  char v10 = (void **)*a1;

  return sub_2226549F8(a3, v9, v10);
}

uint64_t sub_22267DA80(unsigned __int8 *a1)
{
  uint64_t result = sub_22265C1C8(a1);
  if (result)
  {
    uint64_t v4 = sub_222659C34(a1);
    uint64_t v3 = sub_2225C3C70((uint64_t)&v4);
    uint64_t result = sub_222655B10(v3);
    if (result) {
      return sub_222655AE4(result) == 9;
    }
  }
  return result;
}

uint64_t sub_22267DAD8(uint64_t *a1, _DWORD *a2)
{
  int v4 = sub_2225DF8D0((uint64_t)a2);
  sub_22267A498(v4);
  sub_222655194(a2);
  unsigned int v5 = sub_2226551A0(a2) - 2;
  if (v5 <= 6 && ((0x69u >> v5) & 1) != 0) {
    sub_2225CA524(*a1, (&off_264626030)[v5]);
  }
  uint64_t result = sub_2226074D8((uint64_t)a2);
  if (result)
  {
    return sub_2226551D0(a2);
  }
  return result;
}

uint64_t sub_22267DB74(uint64_t *a1, uint64_t a2)
{
  uint64_t v13 = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v13);
  uint64_t v5 = sub_222655268(v4);
  if (v5)
  {
    uint64_t v6 = sub_2225C3D04(v5);
    sub_22267DE0C(a1, v6, a2);
  }
  else
  {
    uint64_t v13 = sub_2225C5B40(a2);
    uint64_t v7 = sub_2225C3C70((uint64_t)&v13);
    uint64_t v8 = sub_2226552F0(v7);
    if (v8)
    {
      uint64_t v9 = (_DWORD *)sub_2225C3D04(v8);
      sub_22267DE90((uint64_t)a1, v9);
    }
    else
    {
      uint64_t v10 = sub_2225C5B40(a2);
      sub_22267DF9C(a1, v10);
    }
  }
  LODWORD(v13) = 0;
  uint64_t v11 = sub_2225C5B40(a2);
  uint64_t result = sub_2226556A8(v11, &v13);
  if (result)
  {
    uint64_t result = sub_222655708(a2);
    if ((result & 1) == 0) {
      return (uint64_t)sub_222655714(a1, v13);
    }
  }
  return result;
}

void sub_22267DC48(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  if (a2)
  {
    if (*(unsigned char *)(a1 + 720)) {
      int v3 = sub_22267E2D0(a2);
    }
    else {
      int v3 = 0;
    }
    if ((sub_222657AB4(&v8) & 1) != 0 || sub_2226593F4(v8) == 1) {
      int v3 = 0;
    }
    if (sub_222657AB4(&v8)) {
      *(unsigned char *)(a1 + 721) = 0;
    }
    if (v3)
    {
      if (*(unsigned char *)(a1 + 721) && !*(unsigned char *)(a1 + 722))
      {
        if (*(void *)(a1 + 568) == v8 && !*(unsigned char *)(a1 + 723)) {
          uint64_t v5 = "((float4)(";
        }
        else {
          uint64_t v5 = "_V3_TO_V3(";
        }
        sub_2225CA524(*(void *)a1, v5);
      }
      sub_22267E310((uint64_t *)a1, v8);
      if (*(unsigned char *)(a1 + 721) && !*(unsigned char *)(a1 + 722))
      {
        if (*(void *)(a1 + 568) == v8 && !*(unsigned char *)(a1 + 723))
        {
          uint64_t v6 = *(void *)a1;
          uint64_t v7 = ").xyzz)";
        }
        else
        {
          uint64_t v6 = *(void *)a1;
          uint64_t v7 = ")";
        }
        sub_2225CA524(v6, v7);
      }
    }
    else
    {
      sub_22267E310((uint64_t *)a1, v8);
    }
  }
  else
  {
    uint64_t v4 = *(void *)a1;
    sub_2225CA524(v4, " /* <none> */ ");
  }
}

uint64_t sub_22267DD9C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222659DC0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_22267DDD8(uint64_t a1)
{
  return sub_222657D18(a1) - 8;
}

void sub_22267DDF4(uint64_t *a1, unsigned __int16 *a2)
{
  if (a2) {
    sub_2226802EC(a1, a2);
  }
  else {
    sub_2225CA524(*a1, " /* <none> */ ");
  }
}

void **sub_22267DE0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (sub_222655810(a3))
  {
    return sub_22267E1C0((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v6 = *a1;
    uint64_t v8 = sub_222654540(a2);
    return sub_2225CA568(v6, v8, v7);
  }
}

void **sub_22267DE90(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_2225DAD04((uint64_t)a2);
  sub_22267A498(v4);
  sub_222655A8C(a2);
  sub_2225CA524(*(void *)a1, "// uniform ");
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = sub_222654540((uint64_t)a2);
  sub_2225CA568(v5, v6, v7);
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v8 = (uint64_t)(a2 + 4);
  uint64_t v9 = (uint64_t *)sub_2225CC180((uint64_t)(a2 + 4));
  uint64_t v10 = sub_222655A98(v8);
  if (v9 != (uint64_t *)v10)
  {
    uint64_t v11 = (uint64_t *)v10;
    do
    {
      uint64_t v12 = *v9++;
      sub_222655980((void **)a1);
      sub_22267D098(a1, v12, 1);
    }
    while (v9 != v11);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v13 = *(void *)a1;

  return sub_2225CA524(v13, "}");
}

void **sub_22267DF9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v39 = a2;
  if (!sub_2225C3C70((uint64_t)&v39))
  {
    uint64_t v9 = *a1;
    uint64_t v8 = " /* <> */ ";
    return sub_2225CA524(v9, v8);
  }
  uint64_t v3 = sub_2225C3C70((uint64_t)&v39);
  uint64_t v4 = sub_222654D84(v3);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = sub_222655AE4(v4);
    uint64_t v7 = *a1;
    if (v6 == 4)
    {
      uint64_t v8 = "float";
      uint64_t v9 = v7;
      return sub_2225CA524(v9, v8);
    }
    uint64_t v18 = v5;
    goto LABEL_10;
  }
  uint64_t v11 = sub_2225C3C70((uint64_t)&v39);
  uint64_t v12 = sub_222654B7C(v11);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_2225C3D04(v12);
    int v15 = sub_222655AE4(v14);
    sub_2225CA524(*a1, (&off_264626068)[v15 - 3]);
    uint64_t v16 = (void **)*a1;
    unsigned int v17 = sub_222654EC8(v13);
    return sub_2225CA560(v16, v17);
  }
  uint64_t v21 = sub_2225C3C70((uint64_t)&v39);
  uint64_t v22 = sub_222654C5C(v21);
  if (v22)
  {
    uint64_t v23 = v22;
    sub_2225CA524(*a1, "float");
    uint64_t result = (void **)sub_22267350C(v23);
    if (result == 16 || result == 9)
    {
      uint64_t v24 = (void **)*a1;
      int v25 = 16;
      return sub_2225D4840(v24, v25);
    }
    if (result == 4)
    {
      uint64_t v24 = (void **)*a1;
      int v25 = 4;
      return sub_2225D4840(v24, v25);
    }
  }
  else
  {
    uint64_t v26 = sub_2225C3C70((uint64_t)&v39);
    uint64_t result = (void **)sub_222655AF0(v26);
    if (!result)
    {
      uint64_t v27 = sub_2225C3C70((uint64_t)&v39);
      if (sub_222655B0C(v27))
      {
        uint64_t v9 = *a1;
        uint64_t v8 = "void";
        return sub_2225CA524(v9, v8);
      }
      uint64_t v28 = sub_2225C3C70((uint64_t)&v39);
      uint64_t v18 = sub_222655B10(v28);
      if (!v18)
      {
        uint64_t v29 = sub_2225C3C70((uint64_t)&v39);
        uint64_t v30 = sub_222655B14(v29);
        if (v30)
        {
          uint64_t v31 = sub_2225C3D04(v30);
        }
        else
        {
          uint64_t v32 = sub_2225C3C70((uint64_t)&v39);
          uint64_t v33 = sub_222655268(v32);
          if (v33)
          {
            uint64_t v7 = *a1;
            uint64_t v19 = sub_2226877C8(v33);
            return sub_2225CA568(v7, v19, v20);
          }
          uint64_t v34 = sub_2225C3C70((uint64_t)&v39);
          uint64_t v35 = sub_2226552F0(v34);
          if (v35)
          {
            uint64_t v36 = (_DWORD *)sub_2225C3D04(v35);
            return sub_22267DE90((uint64_t)a1, v36);
          }
          uint64_t v37 = sub_2225C3C70((uint64_t)&v39);
          uint64_t v38 = sub_222655B18(v37);
          if (!v38)
          {
            uint64_t v9 = *a1;
            uint64_t v8 = " /* <unknown> */ ";
            return sub_2225CA524(v9, v8);
          }
          uint64_t v31 = sub_2225C5B40(v38);
        }
        return (void **)sub_22267DF9C(a1, v31);
      }
      uint64_t v7 = *a1;
LABEL_10:
      uint64_t v19 = sub_222688054(v18);
      return sub_2225CA568(v7, v19, v20);
    }
  }
  return result;
}

void **sub_22267E1C0(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "struct");
  if (sub_22265592C(a2))
  {
    uint64_t v4 = sub_2225CA524(*(void *)a1, " ");
    uint64_t v5 = sub_222654540(a2);
    sub_2225CA568((uint64_t)v4, v5, v6);
  }
  sub_2225CA524(*(void *)a1, " {\n");
  ++*(_DWORD *)(a1 + 8);
  uint64_t v7 = a2 + 16;
  uint64_t v8 = (uint64_t *)sub_2225CC180(a2 + 16);
  uint64_t v9 = sub_22265594C(v7);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = *v8++;
      sub_222655980((void **)a1);
      sub_22267D098(a1, v11, 1);
    }
    while (v8 != v10);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v12 = *(void *)a1;

  return sub_2225CA524(v12, "}");
}

uint64_t sub_22267E2D0(uint64_t a1)
{
  uint64_t v3 = sub_222659834(a1);
  uint64_t v1 = sub_2225C3C70((uint64_t)&v3);
  uint64_t result = sub_222655B10(v1);
  if (result) {
    return sub_222655AE4(result) == 9;
  }
  return result;
}

void sub_22267E310(uint64_t *a1, uint64_t a2)
{
  switch(sub_22264B7DC(a2))
  {
    case 0u:
      sub_222656EF8(a1, a2);
      return;
    case 1u:
      sub_222656F40(a1, a2);
      return;
    case 2u:
      sub_222656F94(a1, a2);
      return;
    case 3u:
      sub_22267ACC8(a1, a2);
      return;
    case 4u:
      sub_222656FE8(a1, a2);
      return;
    case 5u:
      sub_22267E6FC(a1, a2);
      return;
    case 6u:
      sub_22267E79C((uint64_t)a1, a2);
      return;
    case 7u:
      sub_22267E938((uint64_t)a1, a2);
      return;
    case 8u:
      sub_22267EA78((uint64_t)a1, a2);
      return;
    case 9u:
      sub_222657300(a1, a2);
      return;
    case 0xAu:
      sub_222657340(a2);
      return;
    case 0xBu:
      sub_22267EBBC((uint64_t)a1, a2);
      return;
    case 0xCu:
      sub_22267ECB0(a1, a2);
      return;
    case 0xDu:
      uint64_t v4 = a1;
      uint64_t v5 = a2;
      goto LABEL_43;
    case 0xEu:
      uint64_t v4 = a1;
      uint64_t v5 = a2;
LABEL_43:
      sub_22267EEB8(v4, v5);
      return;
    case 0xFu:
      sub_22267EF30(a1, a2);
      return;
    case 0x10u:
      sub_22267F070(a1, a2);
      return;
    case 0x11u:
      sub_22267F0E8(a1, a2);
      return;
    case 0x12u:
      sub_22267F138(a1, a2);
      return;
    case 0x13u:
      sub_22267F480((uint64_t)a1, a2);
      return;
    case 0x14u:
      sub_22267FDEC(a1, a2);
      return;
    case 0x15u:
      uint64_t v6 = (uint64_t)a1;
      uint64_t v7 = a2;
      goto LABEL_67;
    case 0x16u:
      uint64_t v6 = (uint64_t)a1;
      uint64_t v7 = a2;
LABEL_67:
      sub_22268002C(v6, v7);
      break;
    default:
      return;
  }
}

uint64_t sub_22267E6FC(uint64_t *a1, uint64_t a2)
{
  if (sub_222657904(a2))
  {
    uint64_t v4 = sub_2225C5B40(a2);
    sub_22268006C((uint64_t)a1, v4);
  }
  unsigned int v5 = sub_2226579A0(a2);
  if (v5 <= 6) {
    sub_2225CA524(*a1, (&off_264626090)[v5]);
  }
  uint64_t result = sub_222657904(a2);
  if ((result & 1) == 0)
  {
    uint64_t v7 = sub_2225C5B40(a2);
    return (uint64_t)sub_22268006C((uint64_t)a1, v7);
  }
  return result;
}

void **sub_22267E79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222608330(a2);
  if (sub_222657CE8(a2) == 20
    && (uint64_t v15 = sub_222659834(v4), v5 = sub_2225C3C70((uint64_t)&v15), sub_222654C5C(v5)))
  {
    sub_2225CA524(*(void *)a1, "matMultiply(");
    int v6 = 1;
  }
  else
  {
    int v6 = 0;
  }
  uint64_t v7 = sub_2225C5B40(a2);
  sub_22268006C(a1, v7);
  if ((v6 & 1) == 0) {
    sub_2225CA524(*(void *)a1, " ");
  }
  unsigned int v8 = sub_222657CE8(a2);
  int v9 = sub_22264B7DC(v4);
  if (v8 == 19)
  {
    char v10 = *(unsigned char *)(a1 + 716) & (v9 != 0);
    if (v10) {
      unsigned int v8 = 20;
    }
    else {
      unsigned int v8 = 19;
    }
    if ((v6 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    uint64_t v11 = ", ";
    goto LABEL_17;
  }
  char v10 = 0;
  if (v6) {
    goto LABEL_16;
  }
LABEL_12:
  if (v8 <= 0x14) {
    sub_2225CA524(*(void *)a1, (&off_2646260C8)[v8]);
  }
  uint64_t v11 = " ";
LABEL_17:
  sub_2225CA524(*(void *)a1, v11);
  if ((v10 & 1) == 0)
  {
    uint64_t v14 = sub_222608330(a2);
    uint64_t result = sub_22268006C(a1, v14);
    if (!v6) {
      return result;
    }
    return sub_2225CA524(*(void *)a1, ")");
  }
  sub_2225CA524(*(void *)a1, "half_recip(");
  uint64_t v12 = sub_222608330(a2);
  sub_22268006C(a1, v12);
  uint64_t result = sub_2225CA524(*(void *)a1, ")");
  if (v6) {
    return sub_2225CA524(*(void *)a1, ")");
  }
  return result;
}

void **sub_22267E938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22268006C(a1, v4);
  sub_2225CA524(*(void *)a1, " ? ");
  if (*(unsigned char *)(a1 + 720) && (uint64_t v5 = sub_222608330(a2), sub_22267E2D0(v5)))
  {
    sub_2225CA524(*(void *)a1, " (((float4)((");
    uint64_t v6 = sub_222608330(a2);
    sub_22268006C(a1, v6);
    sub_2225CA524(*(void *)a1, "), _dc.x)).xyz)");
    sub_2225CA524(*(void *)a1, " : ");
    sub_2225CA524(*(void *)a1, " (((float4)((");
    uint64_t v7 = sub_2225CDCF4(a2);
    sub_22268006C(a1, v7);
    uint64_t v8 = *(void *)a1;
    return sub_2225CA524(v8, "), _dc.y)).xyz)");
  }
  else
  {
    uint64_t v10 = sub_222608330(a2);
    sub_22268006C(a1, v10);
    sub_2225CA524(*(void *)a1, " : ");
    uint64_t v11 = sub_2225CDCF4(a2);
    return sub_22268006C(a1, v11);
  }
}

void **sub_22267EA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  uint64_t v5 = sub_2225C5B40(a2);
  uint64_t v6 = sub_222679608(v4);
  if (v6 && sub_222657D00(v6) - 1 < 2)
  {
    sub_2225CA524(*(void *)a1, "write_imagef(out, _writeLoc, ");
    *(_WORD *)(a1 + 721) = 1;
    sub_22267DC48(a1, v5);
    uint64_t v7 = *(void *)a1;
    return sub_2225CA524(v7, ")");
  }
  else
  {
    if (*(unsigned char *)(a1 + 720) && v4 && sub_22267E2D0(v4)) {
      *(unsigned char *)(a1 + 721) = 0;
    }
    sub_22267DC48(a1, v4);
    sub_2225CA524(*(void *)a1, " ");
    *(_WORD *)(a1 + 721) = 1;
    unsigned int v9 = sub_222657CF4(a2);
    if (v9 < 0xC) {
      sub_2225CA524(*(void *)a1, (&off_264626170)[v9]);
    }
    sub_2225CA524(*(void *)a1, " ");
    return (void **)sub_22267DC48(a1, v5);
  }
}

void **sub_22267EBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  if (*(unsigned char *)(a1 + 720)
    && (uint64_t v5 = v4, sub_222658290(a1 + 584, v4))
    && *(void *)(a1 + 576) != a2
    && *(unsigned char *)(a1 + 724))
  {
    uint64_t v6 = sub_2225CA524(*(void *)a1, "((");
    uint64_t v7 = sub_222654540(v5);
    unsigned int v9 = sub_2225CA568((uint64_t)v6, v7, v8);
    return sub_2225CA524((uint64_t)v9, ").xyz)");
  }
  else
  {
    uint64_t v11 = *(void *)a1;
    uint64_t v12 = sub_2225C3D04(a2);
    uint64_t v14 = sub_222654540(v12);
    return sub_2225CA568(v11, v14, v13);
  }
}

void **sub_22267ECB0(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "(");
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22267DF9C(a1, v4);
  sub_2225CA524(*a1, ")");
  unsigned int v23 = 0;
  uint64_t v5 = sub_2225C5B40(a2);
  if (sub_2226556A8(v5, &v23)) {
    sub_222655714(a1, v23);
  }
  uint64_t v22 = sub_2225C5B40(a2);
  uint64_t v6 = sub_2225C3C70((uint64_t)&v22);
  uint64_t v7 = sub_222654C5C(v6);
  if (!v7) {
    goto LABEL_12;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_2225CC180(a2 + 8);
  uint64_t v10 = sub_222657D18(a2 + 8);
  if (sub_2225D5C78(v9, v10) == 1)
  {
    uint64_t v11 = (void *)sub_2225CC180(a2 + 8);
    return (void **)sub_22267DC48(a1, *v11);
  }
  if (sub_22267350C(v8) == 9)
  {
    sub_2225CA524(*a1, "(");
    uint64_t v13 = sub_2225CC180(a2 + 8);
    for (uint64_t i = 0; i != 3; ++i)
    {
      for (uint64_t j = 0; j != 24; j += 8)
      {
        sub_22267DC48(a1, *(void *)(v13 + j));
        sub_2225CA524(*a1, ", ");
      }
      sub_2225CA524(*a1, "0.0, ");
      v13 += 24;
    }
    uint64_t v16 = *a1;
    unsigned int v17 = "0.0, 0.0, 0.0, 0.0)";
  }
  else
  {
LABEL_12:
    sub_2225CA524(*a1, "(");
    uint64_t v18 = a2 + 8;
    uint64_t v19 = (void *)sub_2225CC180(v18);
    uint64_t v20 = v19 + 1;
    sub_22267DC48(a1, *v19);
    while (v20 != (uint64_t *)sub_222657D18(v18))
    {
      sub_2225CA524(*a1, ", ");
      uint64_t v21 = *v20++;
      sub_22267DC48(a1, v21);
    }
    uint64_t v16 = *a1;
    unsigned int v17 = ")";
  }
  return sub_2225CA524(v16, v17);
}

void **sub_22267EEB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22268006C((uint64_t)a1, v4);
  uint64_t v5 = sub_2225CA524(*a1, ".");
  uint64_t v7 = sub_222657D64(a2);

  return sub_2225CA568((uint64_t)v5, v7, v6);
}

void sub_22267EF30(uint64_t *a1, uint64_t a2)
{
  a1[72] = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22268006C((uint64_t)a1, v4);
  a1[72] = 0;
  v11[0] = sub_222657D64(a2);
  v11[1] = v5;
  if (sub_2225C3D04((uint64_t)v11))
  {
    uint64_t v6 = sub_2225C3D04((uint64_t)v11);
    uint64_t v7 = (char *)malloc_type_malloc(v6 + 1, 0x100004077774924uLL);
    if (v7 && sub_2225C3D04((uint64_t)v11))
    {
      unint64_t v8 = 0;
      do
      {
        unsigned __int8 v9 = sub_2225CC124(v11, v8);
        if (v9 > 0x66u)
        {
          if (v9 == 114)
          {
            unsigned __int8 v9 = 120;
          }
          else if (v9 == 103)
          {
            unsigned __int8 v9 = 121;
          }
        }
        else if (v9 == 97)
        {
          unsigned __int8 v9 = 119;
        }
        else if (v9 == 98)
        {
          unsigned __int8 v9 = 122;
        }
        v7[v8++] = v9;
      }
      while (v8 < sub_2225C3D04((uint64_t)v11));
    }
    v7[sub_2225C3D04((uint64_t)v11)] = 0;
    uint64_t v10 = sub_2225CA524(*a1, ".");
    sub_2225CA524((uint64_t)v10, v7);
    free(v7);
  }
}

void **sub_22267F070(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  sub_22268006C((uint64_t)a1, v4);
  sub_2225CA524(*a1, "[");
  uint64_t v5 = sub_222608330(a2);
  sub_22267DC48(a1, v5);
  uint64_t v6 = *a1;

  return sub_2225CA524(v6, "]");
}

void **sub_22267F0E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C5B40(a2);
  sub_22268006C((uint64_t)a1, v3);
  uint64_t v4 = *a1;

  return sub_2225CA524(v4, ".length()");
}

void **sub_22267F138(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  uint64_t v5 = *(void *)sub_2225CC180(a2 + 8);
  uint64_t v6 = *(void *)(sub_2225CC180(v4) + 8);
  switch(sub_222657D00(a2))
  {
    case 2u:
      sub_2225CA524(*a1, "samplerTransform(");
      sub_22267DC48(a1, v5);
      sub_2225CA524(*a1, "_transform0");
      sub_2225CA524(*a1, ", ");
      sub_22267DC48(a1, v5);
      uint64_t v12 = *a1;
      uint64_t v13 = "_transform1";
      goto LABEL_18;
    case 3u:
      sub_2225CA524(*a1, "samplerExtent(");
      sub_22267DC48(a1, v5);
      sub_2225CA524(*a1, "_extent");
      goto LABEL_19;
    case 4u:
      sub_2225CA524(*a1, "samplerTransform(");
      sub_22267DC48(a1, v5);
      sub_2225CA524(*a1, "_transform0");
      sub_2225CA524(*a1, ", ");
      sub_22267DC48(a1, v5);
      sub_2225CA524(*a1, "_transform1");
      uint64_t v14 = ", _dc)";
      goto LABEL_20;
    case 5u:
      sub_2225CA524(*a1, "texture2D(");
      sub_22267DC48(a1, v5);
      sub_2225CA524(*a1, "_image");
      sub_2225CA524(*a1, ", ");
      sub_22267DC48(a1, v5);
      uint64_t v12 = *a1;
      uint64_t v13 = "_sampler";
LABEL_18:
      sub_2225CA524(v12, v13);
      sub_2225CA524(*a1, ", ");
      sub_22267DC48(a1, v6);
      goto LABEL_19;
    default:
      uint64_t v7 = sub_222676A4C(a1[88]);
      if (v7) {
        sub_2225CA524(*a1, "_sampler_swizzle(");
      }
      int v8 = sub_222676A44(a1[88]);
      if (v8) {
        sub_2225CA524(*a1, "_sampler_srgb_to_linear(");
      }
      unsigned __int8 v9 = (char *)sub_222679644(a1[88]);
      if (v9) {
        sub_2225CA524(*a1, "(");
      }
      sub_2225CA524(*a1, "sample(");
      sub_22267DC48(a1, v5);
      sub_2225CA524(*a1, "_image");
      sub_2225CA524(*a1, ", ");
      sub_22267DC48(a1, v5);
      sub_2225CA524(*a1, "_sampler");
      sub_2225CA524(*a1, ", ");
      sub_22267DC48(a1, v6);
      uint64_t result = sub_2225CA524(*a1, ")");
      if (v9)
      {
        uint64_t v11 = sub_2225CA524(*a1, v9);
        uint64_t result = sub_2225CA524((uint64_t)v11, ")");
      }
      if (v8) {
        uint64_t result = sub_2225CA524(*a1, ", _dc)");
      }
      if (!v7) {
        return result;
      }
LABEL_19:
      uint64_t v14 = ")";
LABEL_20:
      uint64_t v15 = *a1;
      return sub_2225CA524(v15, v14);
  }
}

void **sub_22267F480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226800FC(a1, a2);
  int v5 = *(_DWORD *)(a1 + 716);
  if (v4 && (v5 & 4) != 0)
  {
    uint64_t v6 = *(void *)a1;
    uint64_t v7 = "__ci_gamma_scalar_SPI(";
  }
  else
  {
    if (sub_222657DDC(a2) == 16 && (v5 & 4) != 0)
    {
      uint64_t v6 = *(void *)a1;
      int v8 = "half_powr(";
      unsigned __int8 v9 = "native_powr(";
    }
    else if (sub_222657DDC(a2) == 3)
    {
      uint64_t v6 = *(void *)a1;
      int v8 = "half_sin(";
      unsigned __int8 v9 = "native_sin(";
    }
    else if (sub_222657DDC(a2) == 4)
    {
      uint64_t v6 = *(void *)a1;
      int v8 = "half_cos(";
      unsigned __int8 v9 = "native_cos(";
    }
    else
    {
      if (sub_222657DDC(a2) != 5)
      {
        if (sub_222657DDC(a2) == 36)
        {
          uint64_t v6 = *(void *)a1;
          uint64_t v7 = "foslMix(";
        }
        else if (sub_222657DDC(a2) == 53)
        {
          uint64_t v6 = *(void *)a1;
          uint64_t v7 = "fast_distance(";
        }
        else if (sub_222657DDC(a2) == 52)
        {
          uint64_t v6 = *(void *)a1;
          uint64_t v7 = "fast_length(";
        }
        else if (sub_222657DDC(a2) == 56)
        {
          uint64_t v6 = *(void *)a1;
          uint64_t v7 = "fast_normalize(";
        }
        else
        {
          switch(sub_222657DDC(a2))
          {
            case 2u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "degrees(";
              break;
            case 3u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "sin(";
              break;
            case 4u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "cos(";
              break;
            case 5u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "tan(";
              break;
            case 6u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "asin(";
              break;
            case 7u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "acos(";
              break;
            case 8u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "atan2(";
              break;
            case 9u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "atan(";
              break;
            case 0xAu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "sinh(";
              break;
            case 0xBu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "cosh(";
              break;
            case 0xCu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "tanh(";
              break;
            case 0xDu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "asinh(";
              break;
            case 0xEu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "acosh(";
              break;
            case 0xFu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "atanh(";
              break;
            case 0x10u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "half_powr(";
              break;
            case 0x11u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "half_exp(";
              break;
            case 0x12u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "half_log(";
              break;
            case 0x13u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "half_exp2(";
              break;
            case 0x14u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "half_log2(";
              break;
            case 0x15u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "half_sqrt(";
              break;
            case 0x16u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "half_rsqrt(";
              break;
            case 0x17u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "fabs(";
              break;
            case 0x18u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "sign(";
              break;
            case 0x19u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "floor(";
              break;
            case 0x1Au:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "trunc(";
              break;
            case 0x1Bu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "round(";
              break;
            case 0x1Cu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "roundEven(";
              break;
            case 0x1Du:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "ceil(";
              break;
            case 0x1Eu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "FRACT(";
              break;
            case 0x1Fu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "mod(";
              break;
            case 0x20u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "fmod(";
              break;
            case 0x21u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "fmin(";
              break;
            case 0x22u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "fmax(";
              break;
            case 0x23u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "clamp(";
              break;
            case 0x24u:
            case 0x25u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "mix(";
              break;
            case 0x26u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "step(";
              break;
            case 0x27u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "smoothstep(";
              break;
            case 0x28u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "isnan(";
              break;
            case 0x29u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "isinf(";
              break;
            case 0x2Au:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "floatBitsToInt(";
              break;
            case 0x2Bu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "floatBitsToUint(";
              break;
            case 0x2Cu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "intBitsToFloat(";
              break;
            case 0x2Du:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "uintBitsToFloat(";
              break;
            case 0x2Eu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "packSnorm2x16(";
              break;
            case 0x2Fu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "unpackSnorm2x16(";
              break;
            case 0x30u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "packUnorm2x16(";
              break;
            case 0x31u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "unpackUnorm2x16(";
              break;
            case 0x32u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "packHalf2x16(";
              break;
            case 0x33u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "unpackHalf2x16(";
              break;
            case 0x34u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "length(";
              break;
            case 0x35u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "distance(";
              break;
            case 0x36u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "dot(";
              break;
            case 0x37u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "cross(";
              break;
            case 0x38u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "normalize(";
              break;
            case 0x39u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "faceforward(";
              break;
            case 0x3Au:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "reflect(";
              break;
            case 0x3Bu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "refract(";
              break;
            case 0x3Cu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "matrixCompMult(";
              break;
            case 0x3Du:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "outerProduct(";
              break;
            case 0x3Eu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "transpose(";
              break;
            case 0x3Fu:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "determinant(";
              break;
            case 0x40u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "inverse(";
              break;
            case 0x41u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "lessThan(";
              break;
            case 0x42u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "lessThanEqual(";
              break;
            case 0x43u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "greaterThan(";
              break;
            case 0x44u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "greaterThanEqual(";
              break;
            case 0x45u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "equal(";
              break;
            case 0x46u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "notEqual(";
              break;
            case 0x47u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "any(";
              break;
            case 0x48u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "all(";
              break;
            case 0x49u:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "not(";
              break;
            case 0x4Au:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "$assert(";
              break;
            default:
              uint64_t v6 = *(void *)a1;
              uint64_t v7 = "radians(";
              break;
          }
        }
        goto LABEL_16;
      }
      uint64_t v6 = *(void *)a1;
      int v8 = "half_tan(";
      unsigned __int8 v9 = "native_tan(";
    }
    if (v5) {
      uint64_t v7 = (char *)v8;
    }
    else {
      uint64_t v7 = (char *)v9;
    }
  }
LABEL_16:
  sub_2225CA524(v6, v7);
  if (!*(unsigned char *)(a1 + 720)) {
    goto LABEL_40;
  }
  if (sub_22268023C(a2 + 8)) {
    goto LABEL_40;
  }
  uint64_t v10 = (uint64_t *)sub_22265E3C4(a2 + 8);
  if (!sub_22267E2D0(*v10) || !sub_22268025C(a2)) {
    goto LABEL_40;
  }
  if (sub_22268023C(a2 + 8))
  {
    LOBYTE(v11) = 1;
  }
  else
  {
    uint64_t v12 = (uint64_t *)sub_2226802D0(a2 + 8);
    int v11 = sub_222680290(*v12) ^ 1;
  }
  uint64_t v13 = (uint64_t *)sub_2225CC180(a2 + 8);
  uint64_t v14 = sub_222657DE8(a2 + 8);
  if (v13 == (uint64_t *)v14)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = (uint64_t *)v14;
    int v16 = 0;
    do
    {
      uint64_t v17 = sub_222659694(*v13);
      if (v17)
      {
        uint64_t v18 = v17;
        if (sub_22267E2D0(v17) && (uint64_t v19 = sub_2225C3D04(v18), sub_222658290(a1 + 584, v19)))
        {
          ++v16;
        }
        else if (v4 != *(void *)sub_2226802D0(a2 + 8))
        {
          break;
        }
      }
      ++v13;
    }
    while (v13 != v15);
  }
  if (v16 == sub_222657E1C(a2 + 8)
    || (v16 != sub_222657E1C(a2 + 8) - 1 ? (char v20 = 1) : (char v20 = v11), (v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + 724) = 0;
    char v21 = 1;
  }
  else
  {
LABEL_40:
    char v21 = 0;
  }
  uint64_t v22 = a2 + 8;
  unsigned int v23 = (void *)sub_2225CC180(a2 + 8);
  uint64_t v24 = sub_222657DE8(v22);
  if (v23 != (void *)v24)
  {
    int v25 = (void *)v24;
    uint64_t v26 = v24 - (void)v23;
    do
    {
      if (v4 && v26 == 8)
      {
        sub_22267DC48(a1, v4);
      }
      else
      {
        sub_22267DC48(a1, *v23);
        if (v26 >= 9) {
          sub_2225CA524(*(void *)a1, ", ");
        }
      }
      ++v23;
      v26 -= 8;
    }
    while (v23 != v25);
  }
  *(unsigned char *)(a1 + 724) = 1;
  uint64_t result = sub_2225CA524(*(void *)a1, ")");
  if (v21)
  {
    uint64_t v28 = *(void *)a1;
    return sub_2225CA524(v28, ".xyz");
  }
  return result;
}

void **sub_22267FDEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C5B40(a2);
  uint64_t v5 = sub_222654540(v4);
  uint64_t v7 = v6;
  sub_2225C3D00((int)v30, "destCoord");
  BOOL v8 = sub_2225CD4BC(v5, v7, v30[0], (size_t)v30[1]);
  uint64_t v9 = *a1;
  if (v8)
  {
    uint64_t v10 = "_dc";
    uint64_t v11 = *a1;
    return sub_2225CA524(v11, v10);
  }
  uint64_t v12 = sub_2225C5B40(a2);
  uint64_t v13 = sub_222654540(v12);
  uint64_t v15 = sub_2225CA568(v9, v13, v14);
  sub_2225CA524((uint64_t)v15, "(");
  uint64_t v16 = a2 + 8;
  uint64_t v17 = (uint64_t *)sub_2225CC180(v16);
  uint64_t v18 = sub_222657E34(v16);
  if (v17 != (uint64_t *)v18)
  {
    uint64_t v19 = (uint64_t *)v18;
    uint64_t v20 = v18 - (void)v17;
    while (1)
    {
      sub_22267DC48(a1, *v17);
      uint64_t v21 = sub_222659694(*v17);
      if (!v21) {
        goto LABEL_12;
      }
      uint64_t v22 = (unsigned __int8 *)sub_2225C3D04(v21);
      uint64_t v29 = sub_222659C34(v22);
      uint64_t v23 = sub_2225C3C70((uint64_t)&v29);
      uint64_t v24 = sub_222655AF0(v23);
      if (!v24) {
        goto LABEL_12;
      }
      uint64_t v25 = v24;
      sub_2225CA524(*a1, "_image, ");
      int v26 = sub_222655B00(v25);
      if (v26 == 1) {
        break;
      }
      if (!v26)
      {
        sub_22267DC48(a1, *v17);
        sub_2225CA524(*a1, "_sampler, ");
        sub_22267DC48(a1, *v17);
        sub_2225CA524(*a1, "_transform0, ");
        sub_22267DC48(a1, *v17);
        sub_2225CA524(*a1, "_transform1, ");
        uint64_t v27 = "_extent";
LABEL_11:
        sub_22267DC48(a1, *v17);
        sub_2225CA524(*a1, v27);
      }
LABEL_12:
      if (v20 >= 9) {
        sub_2225CA524(*a1, ", ");
      }
      ++v17;
      v20 -= 8;
      if (v17 == v19) {
        goto LABEL_15;
      }
    }
    uint64_t v27 = "_sampler";
    goto LABEL_11;
  }
LABEL_15:
  if (sub_222657E68(v16)) {
    sub_2225CA524(*a1, ", ");
  }
  sub_2225CA524(*a1, "_dc");
  uint64_t v11 = *a1;
  uint64_t v10 = ")";
  return sub_2225CA524(v11, v10);
}

uint64_t sub_22268002C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3D04(a2);

  return sub_22267DC48(a1, v3);
}

void **sub_22268006C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 12) && sub_2226579AC(a2)) {
    sub_2225CA524(*(void *)a1, "(");
  }
  uint64_t result = (void **)sub_22267DC48(a1, a2);
  if (*(unsigned char *)(a1 + 12))
  {
    uint64_t result = (void **)sub_2226579AC(a2);
    if (result)
    {
      uint64_t v5 = *(void *)a1;
      return sub_2225CA524(v5, ")");
    }
  }
  return result;
}

uint64_t sub_2226800FC(uint64_t a1, uint64_t a2)
{
  if ((~*(_DWORD *)(a1 + 716) & 5) != 0) {
    return 0;
  }
  if (sub_222657DDC(a2) != 16) {
    return 0;
  }
  uint64_t v3 = a2 + 8;
  uint64_t v4 = (uint64_t *)sub_2225CC180(a2 + 8);
  uint64_t v5 = (uint64_t *)(sub_2225CC180(v3) + 8);
  if (v5 == (uint64_t *)sub_222657DE8(v3) || !sub_22267E2D0(*v4)) {
    return 0;
  }
  uint64_t v6 = *v5;
  if (sub_22264B7DC(*v5) != 12)
  {
LABEL_11:
    if (sub_222680290(v6)) {
      return v6;
    }
    else {
      return 0;
    }
  }
  int v13 = 0;
  uint64_t v7 = sub_2225C5B40(v6);
  if ((sub_2226556A8(v7, &v13) & 1) == 0)
  {
    uint64_t v11 = (uint64_t *)sub_2225CC180(v6 + 8);
    if (sub_222680290(*v11)) {
      return *v11;
    }
    return 0;
  }
  if (v13 != 3) {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)sub_2225CC180(v6 + 8);
  uint64_t v9 = *(void *)(sub_2225CC180(v6 + 8) + 8);
  uint64_t v10 = sub_2225CC180(v6 + 8);
  if (v8 != v9 || v8 != *(void *)(v10 + 16) || !sub_222680290(v8)) {
    goto LABEL_11;
  }
  return v8;
}

BOOL sub_22268023C(uint64_t a1)
{
  return sub_222657E20(a1) == 0;
}

uint64_t sub_22268025C(uint64_t a1)
{
  unsigned int v1 = sub_222657DDC(a1);
  return (v1 < 0x28) & (0xFFBFFF7FF8uLL >> v1);
}

uint64_t sub_222680290(uint64_t a1)
{
  uint64_t v3 = sub_222659834(a1);
  uint64_t v1 = sub_2225C3C70((uint64_t)&v3);
  uint64_t result = sub_222655B10(v1);
  if (result) {
    return sub_222655AE4(result) == 3;
  }
  return result;
}

uint64_t sub_2226802D0(uint64_t a1)
{
  return sub_222657DE8(a1) - 8;
}

void sub_2226802EC(uint64_t *a1, unsigned __int16 *a2)
{
  switch(sub_2226376DC((unsigned __int8 *)a2))
  {
    case 1u:
      sub_222680588(a1, a2);
      break;
    case 2u:
      sub_2226807F4(a1, a2);
      break;
    case 3u:
      sub_22265412C(a1, a2);
      break;
    case 4u:
      sub_22267BFE4((uint64_t)a2);
      break;
    case 5u:
    case 7u:
    case 8u:
      return;
    case 6u:
      sub_222680A9C(a1, a2);
      break;
    case 9u:
      sub_222680B2C((uint64_t)a1, (uint64_t)a2);
      break;
    case 0xAu:
      sub_222680B30((uint64_t)a1, a2);
      break;
    default:
      sub_222680484(a1, a2);
      break;
  }
}

void sub_222680484(uint64_t *a1, _DWORD *a2)
{
  uint64_t v14 = a2;
  uint64_t v3 = a1[2];
  if (v3)
  {
    v13[0] = sub_222654394(v3, (uint64_t *)&v14);
    v13[1] = v4;
    v12[0] = sub_2226543FC(a1[2]);
    v12[1] = v5;
    if (sub_2225F9558(v13, (uint64_t)v12))
    {
      uint64_t v6 = (uint64_t)v14;
      uint64_t v7 = sub_2225C3C70((uint64_t)v13);
      sub_22267D9C0(a1, v6, *(float **)(v7 + 8));
      return;
    }
    a2 = v14;
  }
  sub_22267DAD8(a1, a2);
  sub_22267DB74(a1, (uint64_t)v14);
  uint64_t v8 = sub_2225CA524(*a1, " ");
  uint64_t v9 = sub_222654540((uint64_t)v14);
  sub_2225CA568((uint64_t)v8, v9, v10);
  sub_2226547A8(a1, (uint64_t)v14);
  if (sub_222608330((uint64_t)v14))
  {
    sub_2225CA524(*a1, " = ");
    uint64_t v11 = sub_222608330((uint64_t)v14);
    sub_22267DC48((uint64_t)a1, v11);
  }
}

void **sub_222680588(uint64_t *a1, _DWORD *a2)
{
  uint64_t v39 = sub_2225C5B40((uint64_t)a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v39);
  uint64_t v5 = sub_222655AF0(v4);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_222654540((uint64_t)a2);
    uint64_t v9 = v8;
    int v10 = sub_222655B00(v6);
    if (v10 == 1)
    {
      uint64_t v33 = sub_2225CA524(*a1, "read_only ");
      uint64_t v34 = sub_2225CA524((uint64_t)v33, "image2d_t ");
      uint64_t v35 = sub_2225CA568((uint64_t)v34, v7, v9);
      uint64_t v36 = sub_2225CA524((uint64_t)v35, "_image, ");
      uint64_t v37 = sub_2225CA524((uint64_t)v36, "sampler_t ");
      uint64_t v25 = sub_2225CA568((uint64_t)v37, v7, v9);
      int v26 = "_sampler";
      return sub_2225CA524((uint64_t)v25, v26);
    }
    if (!v10)
    {
      uint64_t v11 = sub_2225CA524(*a1, "read_only ");
      uint64_t v12 = sub_2225CA524((uint64_t)v11, "image2d_t ");
      int v13 = sub_2225CA568((uint64_t)v12, v7, v9);
      uint64_t v14 = sub_2225CA524((uint64_t)v13, "_image, ");
      uint64_t v15 = sub_2225CA524((uint64_t)v14, "sampler_t ");
      uint64_t v16 = sub_2225CA568((uint64_t)v15, v7, v9);
      uint64_t v17 = sub_2225CA524((uint64_t)v16, "_sampler, ");
      uint64_t v18 = sub_2225CA524((uint64_t)v17, "float4 ");
      uint64_t v19 = sub_2225CA568((uint64_t)v18, v7, v9);
      uint64_t v20 = sub_2225CA524((uint64_t)v19, "_transform0, ");
      uint64_t v21 = sub_2225CA524((uint64_t)v20, "float4 ");
      uint64_t v22 = sub_2225CA568((uint64_t)v21, v7, v9);
      uint64_t v23 = sub_2225CA524((uint64_t)v22, "_transform1, ");
      uint64_t v24 = sub_2225CA524((uint64_t)v23, "float4 ");
      uint64_t v25 = sub_2225CA568((uint64_t)v24, v7, v9);
      int v26 = "_extent";
      return sub_2225CA524((uint64_t)v25, v26);
    }
  }
  if (sub_222655E50((uint64_t)a2)) {
    sub_2225CA524(*a1, "const ");
  }
  if (sub_22265517C((uint64_t)a2)) {
    sub_222655EBC(a2);
  }
  uint64_t v27 = sub_2225C5B40((uint64_t)a2);
  sub_22267DF9C(a1, v27);
  unsigned int v38 = -1;
  uint64_t v28 = sub_2225C5B40((uint64_t)a2);
  if (sub_2226556A8(v28, &v38) && (sub_222655708((uint64_t)a2) & 1) == 0) {
    sub_222655714(a1, v38);
  }
  sub_2225CA524(*a1, " ");
  uint64_t result = (void **)sub_22265592C((uint64_t)a2);
  if (result)
  {
    uint64_t v30 = *a1;
    uint64_t v31 = sub_222654540((uint64_t)a2);
    sub_2225CA568(v30, v31, v32);
    uint64_t result = (void **)sub_222655708((uint64_t)a2);
    if (result) {
      return sub_222655714(a1, v38);
    }
  }
  return result;
}

uint64_t sub_2226807F4(uint64_t *a1, _DWORD *a2)
{
  a1[87] = (uint64_t)a2;
  if (sub_222658088((uint64_t)a2))
  {
    return (uint64_t)sub_222680B34(a1, (uint64_t)a2);
  }
  else
  {
    uint64_t v5 = sub_222654540((uint64_t)a2);
    uint64_t v7 = v6;
    sub_2225C3D00((int)v25, "destCoord");
    uint64_t result = sub_2225CD4BC(v5, v7, v25[0], (size_t)v25[1]);
    if ((result & 1) == 0)
    {
      if (sub_222677C50((uint64_t)a2)
        && (v24[0] = (void *)sub_2226403CC((uint64_t)(a1 + 3)),
            v24[1] = v8,
            v23[0] = sub_222640400((uint64_t)(a1 + 3)),
            v23[1] = v9,
            sub_2225DE624(v24, v23)))
      {
        while (1)
        {
          uint64_t v11 = sub_222677C5C(v24, v10);
          uint64_t result = sub_222672CB8((uint64_t)a2, v11);
          if (result) {
            break;
          }
          sub_222640444(v24);
          if (!sub_2225DE624(v24, v23)) {
            goto LABEL_10;
          }
        }
      }
      else
      {
LABEL_10:
        sub_2225CA524(*a1, "inline ");
        if (sub_222655ED4((uint64_t)a2)) {
          sub_222655EE0(a2);
        }
        uint64_t v12 = sub_222640540((uint64_t)a2);
        sub_22267DF9C(a1, v12);
        LODWORD(v24[0]) = 0;
        uint64_t v13 = sub_222640540((uint64_t)a2);
        if (sub_2226556A8(v13, v24)) {
          sub_222655714(a1, v24[0]);
        }
        uint64_t v14 = sub_2225CA524(*a1, " __attribute__(overloadable) ");
        uint64_t v15 = sub_222654540((uint64_t)a2);
        uint64_t v17 = sub_2225CA568((uint64_t)v14, v15, v16);
        sub_2225CA524((uint64_t)v17, "(");
        uint64_t v18 = (void *)sub_2225CC180((uint64_t)(a2 + 4));
        uint64_t v19 = sub_222655EEC((uint64_t)(a2 + 4));
        if (v18 != (void *)v19)
        {
          uint64_t v20 = (void *)v19;
          uint64_t v21 = v19 - (void)v18;
          do
          {
            sub_22267DDF4(a1, *v18);
            if (v21 >= 9) {
              sub_2225CA524(*a1, ", ");
            }
            ++v18;
            v21 -= 8;
          }
          while (v18 != v20);
        }
        if (sub_222655F48(a2 + 4)) {
          sub_2225CA524(*a1, ", ");
        }
        sub_2225CA524(*a1, "float2 _dc)");
        if (sub_222655F20((uint64_t)a2))
        {
          sub_2225CA524(*a1, " ");
          uint64_t v22 = (unsigned __int8 *)sub_222655F20((uint64_t)a2);
          sub_222680E30(a1, v22);
          sub_2225CA524(*a1, "\n");
        }
        else
        {
          sub_222655F28(a1, 0);
        }
        return sub_222608E54((uint64_t)(a1 + 3), (uint64_t)a2);
      }
    }
  }
  return result;
}

void **sub_222680A9C(uint64_t *a1, unsigned __int16 *a2)
{
  if (sub_2225C5B40((uint64_t)a2))
  {
    uint64_t v4 = *a1;
    uint64_t v5 = sub_2225C5B40((uint64_t)a2);
    uint64_t v7 = sub_222654540(v5);
    return sub_2225CA568(v4, v7, v6);
  }
  else
  {
    int v9 = sub_222656050(a2);
    return sub_222656030(a1, v9);
  }
}

void **sub_222680B34(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CA524(*a1, "kernel void ");
  uint64_t v5 = sub_222654540(a2);
  sub_2225CA568((uint64_t)v4, v5, v6);
  uint64_t v42 = a2;
  v44[0] = sub_222654540(a2);
  v44[1] = v7;
  sub_2225C3D00((int)v43, "main");
  if (sub_2225C3CC8((uint64_t)v44, v43[0], (size_t)v43[1])) {
    sub_2225CA524(*a1, "OpenCLEntryPoint");
  }
  sub_2225CA524(*a1, "(write_only image2d_t out, float4 outputRect, float4 vertexTransform0, float4 vertexTransform1");
  uint64_t v8 = (uint64_t *)sub_2225C3C70((uint64_t)(a1 + 85));
  uint64_t v9 = sub_2225DC1A0(a1 + 85);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = *v8;
      sub_2225CA524(*a1, ", \n");
      v44[0] = sub_2225C5B40(v11);
      uint64_t v12 = sub_222654540(v11);
      uint64_t v14 = v13;
      uint64_t v15 = sub_2225C3C70((uint64_t)v44);
      uint64_t v16 = sub_222655AF0(v15);
      if (v16)
      {
        int v17 = sub_222655B00(v16);
        if (v17 == 1)
        {
          uint64_t v35 = sub_2225CA524(*a1, "read_only ");
          uint64_t v36 = sub_2225CA524((uint64_t)v35, "image2d_t ");
          uint64_t v37 = sub_2225CA568((uint64_t)v36, v12, v14);
          unsigned int v38 = sub_2225CA524((uint64_t)v37, "_image, ");
          uint64_t v39 = sub_2225CA524((uint64_t)v38, "sampler_t ");
          uint64_t v32 = sub_2225CA568((uint64_t)v39, v12, v14);
          uint64_t v33 = "_sampler";
          goto LABEL_11;
        }
        if (!v17)
        {
          uint64_t v18 = sub_2225CA524(*a1, "read_only ");
          uint64_t v19 = sub_2225CA524((uint64_t)v18, "image2d_t ");
          uint64_t v20 = sub_2225CA568((uint64_t)v19, v12, v14);
          uint64_t v21 = sub_2225CA524((uint64_t)v20, "_image, ");
          uint64_t v22 = sub_2225CA524((uint64_t)v21, "sampler_t ");
          uint64_t v23 = sub_2225CA568((uint64_t)v22, v12, v14);
          uint64_t v24 = sub_2225CA524((uint64_t)v23, "_sampler, ");
          uint64_t v25 = sub_2225CA524((uint64_t)v24, "float4 ");
          int v26 = sub_2225CA568((uint64_t)v25, v12, v14);
          uint64_t v27 = sub_2225CA524((uint64_t)v26, "_transform0, ");
          uint64_t v28 = sub_2225CA524((uint64_t)v27, "float4 ");
          uint64_t v29 = sub_2225CA568((uint64_t)v28, v12, v14);
          uint64_t v30 = sub_2225CA524((uint64_t)v29, "_transform1, ");
          uint64_t v31 = sub_2225CA524((uint64_t)v30, "float4 ");
          uint64_t v32 = sub_2225CA568((uint64_t)v31, v12, v14);
          uint64_t v33 = "_extent";
LABEL_11:
          sub_2225CA524((uint64_t)v32, v33);
        }
      }
      else
      {
        sub_22267DF9C(a1, v44[0]);
        uint64_t v34 = sub_2225CA524(*a1, " ");
        sub_2225CA568((uint64_t)v34, v12, v14);
      }
      ++v8;
    }
    while (v8 != v10);
  }
  sub_2225CA524(*a1, ") ");
  if (!sub_222655F20(v42)) {
    return sub_222655F28(a1, 0);
  }
  sub_2225CA524(*a1, " ");
  uint64_t v40 = (unsigned __int8 *)sub_222655F20(v42);
  sub_222680E30(a1, v40);
  return sub_2225CA524(*a1, "\n");
}

void **sub_222680E30(uint64_t *a1, unsigned __int8 *a2)
{
  if (a2) {
    return (void **)sub_222680E48(a1, a2);
  }
  else {
    return sub_2225CA524(*a1, " /* <none> */ ");
  }
}

uint64_t sub_222680E48(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t result = sub_2226376DC(a2);
  switch((int)result)
  {
    case 0:
      uint64_t result = (uint64_t)sub_2226810C4((uint64_t)a1, (uint64_t)a2);
      break;
    case 1:
      uint64_t result = (uint64_t)sub_222656430(a1);
      break;
    case 2:
      uint64_t result = sub_222681214((uint64_t)a1, (uint64_t)a2);
      break;
    case 3:
      uint64_t result = (uint64_t)sub_222681220(a1, (uint64_t)a2);
      break;
    case 4:
      uint64_t result = sub_222681324(a1, (uint64_t)a2);
      break;
    case 5:
      uint64_t result = (uint64_t)sub_22268139C(a1, (uint64_t)a2);
      break;
    case 6:
      uint64_t result = (uint64_t)sub_22265662C(a1);
      break;
    case 7:
      uint64_t result = (uint64_t)sub_222681400(a1, (uint64_t)a2);
      break;
    case 8:
      uint64_t result = (uint64_t)sub_222681518(a1, (uint64_t)a2);
      break;
    case 9:
      uint64_t result = (uint64_t)sub_2226815A4(a1, (uint64_t)a2);
      break;
    case 10:
      uint64_t result = (uint64_t)sub_222656888(a1);
      break;
    case 11:
      uint64_t result = (uint64_t)sub_2226568D0(a1);
      break;
    case 13:
      uint64_t result = (uint64_t)sub_22268164C(a1, (uint64_t)a2);
      break;
    case 14:
      uint64_t result = sub_22268002C((uint64_t)a1, (uint64_t)a2);
      break;
    default:
      return result;
  }
  return result;
}

void **sub_2226810C4(uint64_t a1, uint64_t a2)
{
  sub_2225CA524(*(void *)a1, "{\n");
  if (sub_222658088(*(void *)(a1 + 696)) && !*(unsigned char *)(a1 + 712))
  {
    sub_2225CA524(*(void *)a1, "\n");
    sub_2225CA524(*(void *)a1, "  int2 gid = (int2)(get_global_id(0), get_global_id(1));\n\n");
    sub_2225CA524(*(void *)a1, "  if (gid.x >= get_image_width(out) || gid.y >= get_image_height(out)) return;\n\n");
    sub_2225CA524(*(void *)a1, "  float2 p = (float2)(gid.x, gid.y) + outputRect.xy + (float2)(0.5f);\n"
      "  float x = dot((float4)(p, 1, 0), vertexTransform0);\n"
      "  float y = dot((float4)(p, 1, 0), vertexTransform1);\n"
      "  float2 _dc = (float2)(x,y);\n"
      "\n");
    sub_2225CA524(*(void *)a1, "  int2 _writeLoc = gid;\n\n");
    *(unsigned char *)(a1 + 712) = 1;
  }
  ++*(_DWORD *)(a1 + 8);
  uint64_t v4 = a2 + 8;
  uint64_t v5 = (uint64_t *)sub_2225CC180(a2 + 8);
  uint64_t v6 = sub_222656A1C(v4);
  if (v5 != (uint64_t *)v6)
  {
    uint64_t v7 = (uint64_t *)v6;
    do
    {
      uint64_t v8 = *v5++;
      sub_222655980((void **)a1);
      sub_222680E30(a1, v8);
      sub_222656A50((uint64_t *)a1, v8);
      sub_2225CA524(*(void *)a1, "\n");
    }
    while (v5 != v7);
  }
  --*(_DWORD *)(a1 + 8);
  sub_222655980((void **)a1);
  uint64_t v9 = *(void *)a1;

  return sub_2225CA524(v9, "}");
}

uint64_t sub_222681214(uint64_t a1, uint64_t a2)
{
  return sub_22267D098(a1, a2 + 8, 0);
}

void **sub_222681220(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "if (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_22267DC48((uint64_t)a1, v4);
  }
  sub_2225CA524(*a1, ") ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v5 = sub_2225C5B40(a2);
    sub_222680E30(a1, v5);
    uint64_t v6 = sub_2225C5B40(a2);
    sub_222656A50(a1, v6);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  uint64_t result = (void **)sub_222608330(a2);
  if (result)
  {
    sub_2225CA524(*a1, " else ");
    uint64_t v8 = sub_222608330(a2);
    sub_222680E30(a1, v8);
    uint64_t v9 = sub_222608330(a2);
    return sub_222656A50(a1, v9);
  }
  return result;
}

uint64_t sub_222681324(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "switch (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_22267DC48((uint64_t)a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);

  return sub_222680E30(a1, v5);
}

void **sub_22268139C(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "case ");
  uint64_t v4 = sub_222608330(a2);
  sub_22267DC48((uint64_t)a1, v4);
  uint64_t v5 = *a1;

  return sub_2225CA524(v5, ": ");
}

void **sub_222681400(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "for (");
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    sub_222680E30(a1, v4);
    uint64_t v5 = sub_2225C3D04(a2);
    sub_222656A50(a1, v5);
  }
  else
  {
    sub_222655F28(a1, 0);
  }
  sub_2225CA524(*a1, " ");
  if (sub_2225C5B40(a2))
  {
    uint64_t v6 = sub_2225C5B40(a2);
    sub_222680E30(a1, v6);
  }
  sub_222655F28(a1, 1);
  if (sub_222608330(a2))
  {
    uint64_t v7 = sub_222608330(a2);
    sub_22267DC48((uint64_t)a1, v7);
  }
  sub_2225CA524(*a1, ") ");
  uint64_t v8 = sub_2225CDCF4(a2);
  sub_222680E30(a1, v8);
  uint64_t v9 = sub_2225CDCF4(a2);

  return sub_222656A50(a1, v9);
}

void **sub_222681518(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "while (");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_222680E30(a1, v4);
  sub_2225CA524(*a1, ") ");
  uint64_t v5 = sub_2225C5B40(a2);
  sub_222680E30(a1, v5);
  uint64_t v6 = sub_2225C5B40(a2);

  return sub_222656A50(a1, v6);
}

void **sub_2226815A4(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "do ");
  uint64_t v4 = sub_2225C3D04(a2);
  sub_222680E30(a1, v4);
  uint64_t v5 = sub_2225C3D04(a2);
  sub_222656A50(a1, v5);
  sub_2225CA524(*a1, " while (");
  uint64_t v6 = sub_2225C5B40(a2);
  sub_22267DC48((uint64_t)a1, v6);
  sub_2225CA524(*a1, ")");

  return sub_222655F28(a1, 0);
}

void **sub_22268164C(uint64_t *a1, uint64_t a2)
{
  sub_2225CA524(*a1, "return");
  if (sub_2225C3D04(a2))
  {
    sub_2225CA524(*a1, " ");
    uint64_t v4 = sub_2225C3D04(a2);
    sub_22267DC48((uint64_t)a1, v4);
  }

  return sub_222655F28(a1, 0);
}

BOOL sub_2226816C8(uint64_t a1, uint64_t a2)
{
  sub_222681930(a2);
  BOOL result = sub_2225E51C8(a1 + 168);
  if (!result)
  {
    uint64_t v25 = (void *)sub_2225E41A0(a1 + 168);
    uint64_t v24 = sub_2225E41D8(a1 + 168);
    for (BOOL result = sub_2225DE624(&v25, &v24); result; BOOL result = sub_2225DE624(&v25, &v24))
    {
      uint64_t v5 = (unsigned int *)sub_2225E4210((uint64_t)&v25);
      uint64_t v6 = (const void *)sub_2225E42A0(v5);
      size_t v8 = v7;
      uint64_t v9 = sub_2225E4210((uint64_t)&v25);
      uint64_t v10 = *(void *)sub_2225E563C(v9);
      v23[0] = sub_2226760FC(a2);
      v23[1] = v11;
      uint64_t v12 = (uint64_t *)sub_2225C3C70((uint64_t)v23);
      uint64_t v13 = sub_2225DC1A0(v23);
      if (v12 == (uint64_t *)v13) {
        goto LABEL_21;
      }
      uint64_t v14 = (uint64_t *)v13;
      while (1)
      {
        uint64_t v15 = (_DWORD *)*v12;
        uint64_t v16 = sub_222654540(*v12);
        if (sub_2225CD4BC(v16, v17, v6, v8)) {
          break;
        }
        if (++v12 == v14) {
          goto LABEL_21;
        }
      }
      if (v15 && sub_2226551A0(v15) == 7)
      {
        v23[0] = sub_2225C5B40((uint64_t)v15);
        uint64_t v18 = sub_2225C3C70((uint64_t)v23);
        if (sub_222654A90(v18) && *(unsigned char *)(v10 + 64) != 1)
        {
          sub_2225F379C(*(void *)(a1 + 160), 4733, (uint64_t)v23);
          sub_2225F3774(v23, (uint64_t)v6, v8);
          sub_2225F37F0(v23);
        }
        v23[0] = sub_2225C5B40((uint64_t)v15);
        uint64_t v19 = sub_2225C3C70((uint64_t)v23);
        if (sub_222654B7C(v19) && *(unsigned char *)(v10 + 64) != 3)
        {
          sub_2225F379C(*(void *)(a1 + 160), 4733, (uint64_t)v23);
          sub_2225F3774(v23, (uint64_t)v6, v8);
          sub_2225F37F0(v23);
        }
        v23[0] = sub_2225C5B40((uint64_t)v15);
        uint64_t v20 = sub_2225C3C70((uint64_t)v23);
        if (sub_222654C5C(v20))
        {
          if (*(unsigned char *)(v10 + 64) != 4)
          {
            sub_2225F379C(*(void *)(a1 + 160), 4733, (uint64_t)v23);
            sub_2225F3774(v23, (uint64_t)v6, v8);
            sub_2225F37F0(v23);
          }
        }
        if (sub_222681938(a2, (uint64_t)v15, v10)) {
          goto LABEL_23;
        }
        uint64_t v21 = *(void *)(a1 + 160);
        int v22 = 4732;
      }
      else
      {
LABEL_21:
        uint64_t v21 = *(void *)(a1 + 160);
        int v22 = 4734;
      }
      sub_2225F379C(v21, v22, (uint64_t)v23);
      sub_2225F3774(v23, (uint64_t)v6, v8);
      sub_2225F37F0(v23);
LABEL_23:
      sub_2225E42EC(&v25);
    }
  }
  return result;
}

uint64_t sub_222681930(uint64_t a1)
{
  return sub_222682D00(a1 + 128);
}

BOOL sub_222681938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  uint64_t v4 = a1 + 128;
  int v5 = sub_222682EC0(a1 + 128, &v7);
  if (!v5) {
    *sub_222682EE8(v4, &v7) = a3;
  }
  return v5 == 0;
}

uint64_t sub_22268199C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t result = sub_2225CF1E0((uint64_t)&v26);
  if ((result & 1) == 0)
  {
    sub_2225CD428(v26, v27, -1, (uint64_t)v29);
    if (sub_2225D35C0((uint64_t)v29))
    {
      sub_2225D250C(v25);
      uint64_t v6 = j_nullsub_1(v29, v5);
      uint64_t v8 = sub_2225CBA80(v6, v7);
      uint64_t v9 = sub_2225CDAC0(v8);
      sub_2225E3840(v28, v9, v10, 0, 0, 0);
      sub_222681C94(v28, v25);
      v20[0] = sub_2225E38E8((uint64_t)v28);
      v20[1] = v11;
      if (sub_2225CDBBC(v20))
      {
        sub_2225F379C(*(void *)(a1 + 160), 4729, (uint64_t)v20);
        sub_2225F3774(v20, v26, v27);
        sub_2225F37F0(v20);
      }
      else
      {
        uint64_t v24 = sub_2225D2E88(v25);
        uint64_t v23 = sub_2225D24C8((uint64_t)v25);
        while (sub_2225D0DF0((uint64_t)&v24, (uint64_t)&v23))
        {
          uint64_t v13 = sub_2225C3C70((uint64_t)&v24);
          sub_222681CD4((uint64_t)v20, v13);
          sub_2225CA51C(&v26, (uint64_t)&v19);
          sub_2225CCDE4((uint64_t)v22, (uint64_t)&v19);
          std::string::~string(&v19);
          if (sub_2225D4774(v21, "float"))
          {
            sub_222681CD8(a1, (uint64_t)v20);
          }
          else if (sub_2225D4774(v21, "int") || sub_2225D4774(v21, "uint"))
          {
            sub_22268214C(a1, (uint64_t)v20);
          }
          else if (sub_2225D4774(v21, "BOOL"))
          {
            sub_222682348(a1, (uint64_t)v20);
          }
          else
          {
            sub_2225F379C(*(void *)(a1 + 160), 4738, (uint64_t)&v19);
            sub_2225CCBF8(v18, v21);
            uint64_t v14 = sub_2225F3774((uint64_t *)&v19, v18[0], v18[1]);
            sub_2225CCBF8(v17, v20);
            uint64_t v15 = sub_2225F3774(v14, v17[0], v17[1]);
            sub_2225CCBF8(v16, v22);
            sub_2225F3774(v15, v16[0], v16[1]);
            sub_2225F37F0(&v19);
          }
          sub_22268254C(v20);
          sub_222682550(&v24);
        }
      }
      sub_2225E38BC(v28);
      sub_222682560((uint64_t)v25);
    }
    else
    {
      sub_2225F379C(*(void *)(a1 + 160), 4721, (uint64_t)v28);
      sub_2225F3774(v28, v26, v27);
      sub_2225F37F0(v28);
    }
    return sub_2225D35D0((uint64_t)v29, v12);
  }
  return result;
}

void *sub_222681C94(void *a1, uint64_t *a2)
{
  if (sub_2225E3908(a1, (uint64_t)a2)) {
    sub_222683B70((uint64_t)a1, a2);
  }
  return a1;
}

uint64_t sub_222681CD8(uint64_t a1, uint64_t a2)
{
  v56[23] = *MEMORY[0x263EF8340];
  if (*(_DWORD *)(a2 + 48) == 1)
  {
    sub_2225CCBF8(v55, a2);
    uint64_t v4 = (const std::string *)sub_2225D2440((void *)(a2 + 56), 0);
    float v5 = std::stof(v4, 0);
    return sub_2226829AC(a1, v55[0], v55[1], v5);
  }
  int v7 = *(_DWORD *)(a2 + 52);
  unint64_t v8 = sub_2225D24AC((void *)(a2 + 56));
  uint64_t v9 = *(unsigned int *)(a2 + 48);
  if (v7 != 1)
  {
    if (v8 != *(_DWORD *)(a2 + 52) * v9)
    {
      sub_2225F379C(*(void *)(a1 + 160), 4737, (uint64_t)v56);
      sub_2225CCBF8(v47, a2);
      uint64_t v21 = sub_2225F3774(v56, v47[0], v47[1]);
      sub_2225CCBF8(v46, a2 + 80);
      uint64_t v22 = v46[0];
      uint64_t v23 = v46[1];
      goto LABEL_21;
    }
    sub_222682AA0((uint64_t)v56);
    if (!*(_DWORD *)(a2 + 48)) {
      goto LABEL_22;
    }
    unsigned int v11 = 0;
    do
    {
      sub_2225DC810(&__str);
      unsigned int v12 = *(_DWORD *)(a2 + 52);
      if (v12)
      {
        for (unsigned int i = 0; i < v12; ++i)
        {
          uint64_t v14 = (const std::string *)sub_2225D2440((void *)(a2 + 56), i + v11 * v12);
          LODWORD(v52) = std::stof(v14, 0);
          sub_2225CC08C((uint64_t)&__str, &v52);
          unsigned int v12 = *(_DWORD *)(a2 + 52);
        }
      }
      sub_222682AA4(v56, &__str);
      sub_2225C56C4(&__str);
      ++v11;
      unsigned int v15 = *(_DWORD *)(a2 + 48);
    }
    while (v11 < v15);
    switch(v15)
    {
      case 2u:
        sub_2225CCBF8(v42, a2);
        uint64_t v26 = sub_222642EF0((uint64_t)v56, 0);
        sub_222682A9C(&v41, v26);
        uint64_t v27 = sub_222642EF0((uint64_t)v56, 1u);
        sub_222682A9C(&v40, v27);
        sub_222682634(a1, v42[0], v42[1]);
        return sub_222682B14(v56);
      case 3u:
        sub_2225CCBF8(v39, a2);
        uint64_t v28 = sub_222642EF0((uint64_t)v56, 0);
        sub_222682A9C(&v38, v28);
        uint64_t v29 = sub_222642EF0((uint64_t)v56, 1u);
        sub_222682A9C(&v37, v29);
        uint64_t v30 = sub_222642EF0((uint64_t)v56, 2u);
        sub_222682A9C(&v36, v30);
        sub_222682754(a1, v39[0], v39[1]);
        return sub_222682B14(v56);
      case 4u:
        sub_2225CCBF8(v35, a2);
        uint64_t v16 = sub_222642EF0((uint64_t)v56, 0);
        sub_222682A9C(v34, v16);
        uint64_t v17 = sub_222642EF0((uint64_t)v56, 1u);
        sub_222682A9C(v33, v17);
        uint64_t v18 = sub_222642EF0((uint64_t)v56, 2u);
        sub_222682A9C(v32, v18);
        uint64_t v19 = sub_222642EF0((uint64_t)v56, 3u);
        sub_222682A9C(v31, v19);
        sub_222682800(a1, v35[0], v35[1], v34[0], v34[1], v33[0], v33[1], v20, v32[0], v32[1], v31[0], v31[1]);
        break;
      default:
LABEL_22:
        sub_2225F379C(*(void *)(a1 + 160), 4736, (uint64_t)&__str);
        uint64_t v24 = sub_2226256C4((uint64_t *)&__str, *(_DWORD *)(a2 + 48));
        sub_2225CCBF8(v44, a2);
        uint64_t v25 = sub_2225F3774(v24, v44[0], v44[1]);
        sub_2225CCBF8(v43, a2 + 80);
        sub_2225F3774(v25, v43[0], v43[1]);
        sub_2225F37F0(&__str);
        break;
    }
    return sub_222682B14(v56);
  }
  if (v8 != v9)
  {
    sub_2225F379C(*(void *)(a1 + 160), 4737, (uint64_t)v56);
    sub_2225CCBF8(v54, a2);
    uint64_t v21 = sub_2225F3774(v56, v54[0], v54[1]);
    sub_2225CCBF8(v53, a2 + 80);
    uint64_t v22 = v53[0];
    uint64_t v23 = v53[1];
LABEL_21:
    sub_2225F3774(v21, v22, v23);
    return sub_2225F37F0(v56);
  }
  sub_2225DC810(v56);
  uint64_t v52 = sub_2225D2E88((uint64_t *)(a2 + 56));
  uint64_t v51 = sub_2225D24C8(a2 + 56);
  while (sub_2225D0DF0((uint64_t)&v52, (uint64_t)&v51))
  {
    uint64_t v10 = (const std::string *)sub_2225C3C70((uint64_t)&v52);
    std::string::basic_string(&__str, v10);
    float v50 = std::stof(&__str, 0);
    sub_2225CC08C((uint64_t)v56, &v50);
    std::string::~string(&__str);
    sub_2225F3950(&v52);
  }
  sub_2225CCBF8(v49, a2);
  sub_222682A9C(v48, (uint64_t)v56);
  sub_222682A20(a1, v49[0], v49[1], v48[0], v48[1]);
  return sub_2225C56C4(v56);
}

uint64_t sub_22268214C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) == 1)
  {
    sub_2225CCBF8(v24, a2);
    uint64_t v4 = (const std::string *)sub_2225D2440((void *)(a2 + 56), 0);
    uint64_t v5 = std::stoi(v4, 0, 10);
    return sub_222682B18(a1, v24[0], v24[1], v5);
  }
  if (*(_DWORD *)(a2 + 52) != 1)
  {
    sub_2225F379C(*(void *)(a1 + 160), 4739, (uint64_t)v21);
    sub_2225CCBF8(v14, a2 + 24);
    unint64_t v8 = sub_2225F3774(v21, v14[0], v14[1]);
    sub_2225CCBF8(v13, a2);
    uint64_t v9 = sub_2225F3774(v8, v13[0], v13[1]);
    sub_2225CCBF8(v12, a2 + 80);
    uint64_t v10 = v12[0];
    uint64_t v11 = v12[1];
LABEL_10:
    sub_2225F3774(v9, v10, v11);
    return sub_2225F37F0(v21);
  }
  if (sub_2225D24AC((void *)(a2 + 56)) != *(_DWORD *)(a2 + 48))
  {
    sub_2225F379C(*(void *)(a1 + 160), 4737, (uint64_t)v21);
    sub_2225CCBF8(v23, a2);
    uint64_t v9 = sub_2225F3774(v21, v23[0], v23[1]);
    sub_2225CCBF8(v22, a2 + 80);
    uint64_t v10 = v22[0];
    uint64_t v11 = v22[1];
    goto LABEL_10;
  }
  sub_2225DC810(v21);
  uint64_t v20 = sub_2225D2E88((uint64_t *)(a2 + 56));
  uint64_t v19 = sub_2225D24C8(a2 + 56);
  while (sub_2225D0DF0((uint64_t)&v20, (uint64_t)&v19))
  {
    int v7 = (const std::string *)sub_2225C3C70((uint64_t)&v20);
    std::string::basic_string(&__str, v7);
    int v17 = std::stoi(&__str, 0, 10);
    sub_2225CC08C((uint64_t)v21, &v17);
    std::string::~string(&__str);
    sub_2225F3950(&v20);
  }
  sub_2225CCBF8(v16, a2);
  sub_222682A9C(v15, (uint64_t)v21);
  sub_222682B8C(a1, v16[0], v16[1], v15[0], v15[1]);
  return sub_2225C56C4(v21);
}

uint64_t sub_222682348(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) == 1)
  {
    sub_2225CCBF8(v24, a2);
    uint64_t v4 = (const std::string *)sub_2225D2440((void *)(a2 + 56), 0);
    BOOL v5 = sub_2225D4774(v4, "false");
    return sub_222682C08(a1, v24[0], v24[1], !v5);
  }
  if (*(_DWORD *)(a2 + 52) != 1)
  {
    sub_2225F379C(*(void *)(a1 + 160), 4739, (uint64_t)v21);
    sub_2225CCBF8(v14, a2 + 24);
    unint64_t v8 = sub_2225F3774(v21, v14[0], v14[1]);
    sub_2225CCBF8(v13, a2);
    uint64_t v9 = sub_2225F3774(v8, v13[0], v13[1]);
    sub_2225CCBF8(v12, a2 + 80);
    uint64_t v10 = v12[0];
    uint64_t v11 = v12[1];
LABEL_10:
    sub_2225F3774(v9, v10, v11);
    return sub_2225F37F0(v21);
  }
  if (sub_2225D24AC((void *)(a2 + 56)) != *(_DWORD *)(a2 + 48))
  {
    sub_2225F379C(*(void *)(a1 + 160), 4737, (uint64_t)v21);
    sub_2225CCBF8(v23, a2);
    uint64_t v9 = sub_2225F3774(v21, v23[0], v23[1]);
    sub_2225CCBF8(v22, a2 + 80);
    uint64_t v10 = v22[0];
    uint64_t v11 = v22[1];
    goto LABEL_10;
  }
  sub_222682C7C();
  uint64_t v20 = sub_2225D2E88((uint64_t *)(a2 + 56));
  uint64_t v19 = sub_2225D24C8(a2 + 56);
  while (sub_2225D0DF0((uint64_t)&v20, (uint64_t)&v19))
  {
    int v7 = (const std::string *)sub_2225C3C70((uint64_t)&v20);
    std::string::basic_string(&v18, v7);
    BOOL v17 = !sub_2225D4774(&v18, "false");
    sub_2225C52D8((uint64_t)v21, &v17);
    std::string::~string(&v18);
    sub_2225F3950(&v20);
  }
  sub_2225CCBF8(v16, a2);
  sub_222682CFC(v15, (uint64_t)v21);
  sub_222682C80(a1, v16[0], v16[1], v15[0], v15[1]);
  return sub_2225C56C4(v21);
}

void *sub_222682550(void *result)
{
  *result += 104;
  return result;
}

void sub_222682564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + 168;
  uint64_t v7 = sub_2225F9F50((void *)(a1 + 168), a2, a3);
  uint64_t v6 = sub_2225E41D8(v4);
  if (!sub_2225DE638(&v7, &v6))
  {
    uint64_t v5 = sub_2225E4210((uint64_t)&v7);
    sub_2226825D8(a1, *(void **)(v5 + 8));
    sub_2226825E4(v4, v7);
  }
}

uint64_t sub_2226825D8(uint64_t a1, void *a2)
{
  return sub_222685680(a1, a1 + 24, a2);
}

void sub_2226825E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v3 = (unsigned int *)sub_2225E4210((uint64_t)&v4);
  sub_2225FA010(a1, v3);
  sub_2225E51D8(v3, a1 + 24);
}

uint64_t sub_222682634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2226826C8(72, a1);
  sub_2226826D0(v6);

  return sub_2226826D4(a1, a2, a3, v6);
}

uint64_t sub_2226826C8(uint64_t a1, uint64_t a2)
{
  return sub_2226857BC(a2);
}

uint64_t sub_2226826D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v13[0] = a2;
  v13[1] = a3;
  uint64_t v12 = a4;
  uint64_t v5 = a1 + 168;
  sub_2225E58E8(v10, v13, &v12);
  uint64_t result = sub_2225E569C(v5, v10);
  v11[0] = result;
  v11[1] = v7;
  if (!(_BYTE)v7)
  {
    uint64_t v8 = sub_2225E4210((uint64_t)v11);
    sub_2226825D8(a1, *(void **)(v8 + 8));
    uint64_t v9 = v12;
    uint64_t result = sub_2225E4210((uint64_t)v11);
    *(void *)(result + 8) = v9;
  }
  return result;
}

uint64_t sub_222682754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2226826C8(72, a1);
  sub_2226827FC(v6);

  return sub_2226826D4(a1, a2, a3, v6);
}

uint64_t sub_222682800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = sub_2226826C8(72, a1);
  sub_2226828B0(v17, a4, a5, a6, a7, a9, a10, v18, a11, a12);

  return sub_2226826D4(a1, a2, a3, v17);
}

uint64_t sub_2226828B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_222683540(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

BOOL sub_2226828BC@<W0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2225D250C(a2);
  a1 += 168;
  uint64_t v9 = (void *)sub_22260722C(a1);
  uint64_t v8 = sub_222607264(a1);
  for (BOOL result = sub_2225DE624(&v9, &v8); result; BOOL result = sub_2225DE624(&v9, &v8))
  {
    uint64_t v5 = (unsigned int *)sub_2225E4210((uint64_t)&v9);
    v7.n128_u64[0] = sub_2225E42A0(v5);
    v7.n128_u64[1] = v6;
    sub_222682950(a2, &v7);
    sub_2225E42EC(&v9);
  }
  return result;
}

uint64_t sub_222682950(uint64_t *a1, __n128 *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, (uint64_t)a2))
  {
    uint64_t result = sub_222683720(a1, a2);
  }
  else
  {
    sub_2225D4CD0((uint64_t)a1, a2);
    uint64_t result = v4 + 16;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2226829AC(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v8 = sub_2226826C8(72, a1);
  v9.n128_f32[0] = a4;
  sub_222665558(v8, v9);

  return sub_2226826D4(a1, a2, a3, v8);
}

uint64_t sub_222682A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_2226826C8(72, a1);
  sub_222685968(v10, a4, a5);

  return sub_2226826D4(a1, a2, a3, v10);
}

uint64_t sub_222682AA4(void *a1, void *a2)
{
  if (a1[1] >= a1[2]) {
    sub_2226859F8(a1, 0);
  }
  unint64_t v4 = (const void **)sub_2225C3D04((uint64_t)a1);
  sub_222685AF0(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 40;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_222682B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2226826C8(72, a1);
  sub_22266556C(v8, a4);

  return sub_2226826D4(a1, a2, a3, v8);
}

uint64_t sub_222682B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_2226826C8(72, a1);
  sub_222685F88(v10, a4, a5);

  return sub_2226826D4(a1, a2, a3, v10);
}

uint64_t sub_222682C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2226826C8(72, a1);
  sub_222665580(v8, a4);

  return sub_2226826D4(a1, a2, a3, v8);
}

uint64_t sub_222682C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_2226826C8(72, a1);
  sub_222686060(v10, a4, a5);

  return sub_2226826D4(a1, a2, a3, v10);
}

uint64_t sub_222682D00(uint64_t a1)
{
  if (sub_2225F5668(a1) || (uint64_t result = sub_2225F5670(a1), result))
  {
    int v3 = sub_2225F5668(a1);
    uint64_t v4 = sub_2225F5148(a1);
    if (v4 <= 4 * v3 || (uint64_t v4 = sub_2225F5148(a1), v4 < 0x41))
    {
      uint64_t v5 = sub_2225F9EB8(v4);
      uint64_t v6 = sub_222652D44();
      __n128 v7 = (uint64_t *)sub_2225CC180(a1);
      uint64_t v8 = sub_222608BD4(a1);
      if (v7 != (uint64_t *)v8)
      {
        __n128 v9 = (uint64_t *)v8;
        do
        {
          if (!sub_2225D085C(*v7, v5))
          {
            if (!sub_2225D085C(*v7, v6)) {
              sub_222611614(a1);
            }
            *__n128 v7 = v5;
          }
          v7 += 2;
        }
        while (v7 != v9);
      }
      return sub_2225F50F4(a1, 0);
    }
    else
    {
      return sub_222682E2C(a1);
    }
  }
  return result;
}

uint64_t sub_222682E30(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 8);
  sub_222652CBC(a1);
  if (v2)
  {
    int v5 = 64;
    int v4 = 1 << (sub_2225D2FA4(v2) + 1);
    unsigned int v2 = *(_DWORD *)sub_2225F753C(&v5, &v4);
  }
  if (v2 == *(_DWORD *)(a1 + 16)) {
    return sub_222653050(a1);
  }
  j__free(*(void **)a1);
  return sub_222653004(a1, v2);
}

uint64_t sub_222682EC0(uint64_t a1, uint64_t *a2)
{
  int v3 = 0;
  return sub_222654820(a1, a2, &v3);
}

uint64_t *sub_222682EE8(uint64_t a1, uint64_t *a2)
{
  return sub_222682F04(a1, a2) + 1;
}

uint64_t *sub_222682F04(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = 0;
  if (sub_222682F60(a1, a2, &v6)) {
    return v6;
  }
  uint64_t v5 = 0;
  return sub_222682F9C(a1, a2, &v5, v6);
}

uint64_t sub_222682F60(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_222654820(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t *sub_222682F9C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t result = sub_222682FD8(a1, a2, a4);
  *uint64_t result = *a2;
  result[1] = *a3;
  return result;
}

uint64_t *sub_222682FD8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v11 = a3;
  int v5 = sub_2225F5668(a1);
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2226830C4(a1, (2 * v6));
    sub_222682F60(a1, a2, &v11);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_2226830C4(a1, v7);
    sub_222682F60(a1, a2, &v11);
  }
  uint64_t v8 = sub_2225F5674(a1);
  uint64_t v9 = sub_2225F9EB8(v8);
  if (!sub_2225D085C(*v11, v9)) {
    sub_2225F56B0(a1);
  }
  return v11;
}

void sub_2226830C8(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  int v4 = *(uint64_t **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222609018(a1, *v5);
  if (v4)
  {
    sub_222683154(a1, v4, &v4[2 * v3]);
    j__free(v4);
  }
  else
  {
    sub_222653050(a1);
  }
}

uint64_t sub_222683154(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_222653050(a1);
  uint64_t v7 = sub_2225F9EB8(v6);
  uint64_t result = sub_222652D44();
  if (a2 != a3)
  {
    uint64_t v9 = result;
    do
    {
      uint64_t result = sub_2225D085C(*a2, v7);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*a2, v9);
        if ((result & 1) == 0)
        {
          uint64_t v10 = 0;
          sub_222682F60(a1, a2, &v10);
          uint64_t *v10 = *a2;
          v10[1] = a2[1];
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 2;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t sub_222683210(uint64_t a1, uint64_t a2)
{
  int v4 = std::string::basic_string((std::string *)a1, (const std::string *)a2);
  std::string::basic_string(v4 + 1, (const std::string *)(a2 + 24));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_222621C90(a1 + 56, a2 + 56);
  std::string::basic_string((std::string *)(a1 + 80), (const std::string *)(a2 + 80));
  return a1;
}

void sub_222683268(uint64_t a1)
{
  std::string::~string((std::string *)(a1 + 80));
  sub_2225D2510(a1 + 56);
  std::string::~string((std::string *)(a1 + 24));

  std::string::~string((std::string *)a1);
}

uint64_t sub_2226832B4(uint64_t a1)
{
  sub_222683300(v5);
  long long v2 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = 4;
  return a1;
}

_OWORD *sub_222683304(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  for (uint64_t i = 0; i != 4; ++i)
    j_nullsub_1(&a1[i], a2);
  sub_222683398(&v12, a2, a3);
  *a1 = v12;
  sub_222683398(&v12, a4, a5);
  a1[1] = v12;
  return a1;
}

uint64_t sub_22268339C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  if (sub_2225C3D04((uint64_t)v9))
  {
    uint64_t v4 = 0;
    unsigned int v5 = 1;
    do
    {
      int v6 = *(_DWORD *)sub_222683428(v9, v4);
      *(_DWORD *)sub_22265E298(a1, v4) = v6;
      uint64_t v4 = v5;
    }
    while (sub_2225C3D04((uint64_t)v9) > (unint64_t)v5++);
  }
  return a1;
}

uint64_t sub_222683428(void *a1, uint64_t a2)
{
  return *a1 + 4 * a2;
}

uint64_t sub_222683434(uint64_t a1)
{
  sub_222683480(v5);
  long long v2 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = 4;
  return a1;
}

_OWORD *sub_222683484(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  for (uint64_t i = 0; i != 4; ++i)
    j_nullsub_1(&a1[i], a2);
  sub_222683398(&v16, a2, a3);
  *a1 = v16;
  sub_222683398(&v16, a4, a5);
  a1[1] = v16;
  sub_222683398(&v16, a6, a7);
  a1[2] = v16;
  return a1;
}

uint64_t sub_222683540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_222683594(v14, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  long long v11 = v14[1];
  *(_OWORD *)a1 = v14[0];
  *(_OWORD *)(a1 + 16) = v11;
  long long v12 = v14[3];
  *(_OWORD *)(a1 + 32) = v14[2];
  *(_OWORD *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 64) = 4;
  return a1;
}

_OWORD *sub_222683594(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_2226835A0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

_OWORD *sub_2226835A0(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  for (uint64_t i = 0; i != 4; ++i)
    j_nullsub_1(&a1[i], a2);
  sub_222683398(&v19, a2, a3);
  *a1 = v19;
  sub_222683398(&v19, a4, a5);
  a1[1] = v19;
  sub_222683398(&v19, a6, a7);
  a1[2] = v19;
  sub_222683398(&v19, a9, a10);
  a1[3] = v19;
  return a1;
}

void *sub_222683684(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  sub_2226836DC(v2, v3);
  if (!sub_2225C603C(a1))
  {
    uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_2226836DC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      v2 -= 40;
      uint64_t result = sub_2225C56C4(v2);
    }
    while (v2 != v3);
  }
  return result;
}

uint64_t sub_222683720(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, (uint64_t)a2);
  uint64_t v5 = sub_2225D36D8(a1);
  unint64_t v6 = sub_2225D4E1C(a1, v5 + 1);
  uint64_t v7 = sub_2225D36D8(a1);
  sub_2225D4E98(v12, v6, v7, v4);
  uint64_t v9 = (__n128 *)nullsub_1(v13, v8);
  sub_2225D4DF8(v4, v9, a2);
  v13 += 16;
  sub_2226837D0(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225D4F8C(v12);
  return v10;
}

uint64_t sub_2226837D0(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2226838C0();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  uint64_t v10 = sub_2225D36D8(a1);
  return nullsub_1(a1, v10);
}

uint64_t sub_2226838C0()
{
  return sub_2226838DC();
}

uint64_t sub_2226838DC()
{
  sub_222683904(v1);
  return v1[2];
}

uint64_t sub_22268390C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_2225D5288(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_2226839DC(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_222683A1C(&v3);
  return a1;
}

uint64_t *sub_222683A1C(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_222683A94(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_222683AA0(v6, v8);
    return (uint64_t *)sub_222683A9C(v5, v7, v9);
  }
  return result;
}

uint64_t sub_222683A94(uint64_t *a1)
{
  return sub_222683AE8((uint64_t)a1, *a1);
}

uint64_t sub_222683AA0(void *a1, uint64_t a2)
{
  return 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 3);
}

uint64_t sub_222683AE8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_222683B50(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 104;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_222683B54(uint64_t a1, uint64_t a2)
{
  return sub_22268254C(a2);
}

uint64_t sub_222683B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 104 * a3, 8);
}

uint64_t sub_222683B70(uint64_t a1, uint64_t *a2)
{
  int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 16))(a1)) {
    int v4 = sub_222683CCC(a1, a2);
  }
  if (v4)
  {
    for (unint64_t i = 0; i != v4; ++i)
    {
      uint64_t v8 = 0;
      if ((*(unsigned int (**)(uint64_t, unint64_t, uint64_t *))(*(void *)a1 + 32))(a1, i, &v8))
      {
        uint64_t v6 = sub_222683D5C(a1, a2, i);
        sub_222683CD4(a1, v6);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 40))(a1, v8);
      }
    }
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
}

uint64_t sub_222683CCC(uint64_t a1, void *a2)
{
  return sub_222683DB4(a2);
}

uint64_t sub_222683CD4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 104))(a1);
  sub_222683DD8(a1, a2);
  int v4 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 112);

  return v4(a1);
}

uint64_t sub_222683D5C(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (sub_222683DB4(a2) <= a3) {
    sub_222684D00(a2, a3 + 1);
  }

  return sub_222684D80(a2, a3);
}

uint64_t sub_222683DB4(void *a1)
{
  return 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(a1[1] - *a1) >> 3);
}

uint64_t sub_222683DD8(uint64_t a1, uint64_t a2)
{
  sub_222683E68(a1, (uint64_t)"name", a2);
  sub_222683E68(a1, (uint64_t)"type", a2 + 24);
  sub_222683E70(a1, (uint64_t)"numCols", (unsigned int *)(a2 + 48));
  sub_222683E70(a1, (uint64_t)"numRows", (unsigned int *)(a2 + 52));

  return sub_222683E78(a1, (uint64_t)"values", (uint64_t *)(a2 + 56));
}

uint64_t sub_222683E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222683E80(a1, a2, a3, 1);
}

uint64_t sub_222683E70(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  return sub_2226845DC(a1, a2, a3, 0);
}

uint64_t sub_222683E78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_222684820(a1, a2, a3, 1);
}

uint64_t sub_222683E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  char v7 = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, char *, uint64_t *))(*(void *)a1 + 120))(a1, a2, a4, 0, &v7, &v8);
  if (result)
  {
    sub_222683F34(a1, a3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, v8);
  }
  return result;
}

void sub_222683F34(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 16))(a1))
  {
    sub_2225CAD04(&v14);
    sub_222609ACC(v13, &v14);
    uint64_t v4 = sub_2225C3D04(a1);
    sub_2225E4E98(a2, v4, v13);
    uint64_t v5 = sub_222609AD0((uint64_t *)v13);
    sub_2225CCBF8(&v11, v5);
    uint64_t v6 = sub_2226840C4(v11, v12);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a1 + 184))(a1, &v11, v6);
    sub_2225E8B2C(v13);
    std::string::~string(&v14);
  }
  else
  {
    sub_2225CCC70(&v14);
    uint64_t v7 = sub_2226840C4(v14.__r_.__value_.__r.__words[0], v14.__r_.__value_.__l.__size_);
    (*(void (**)(uint64_t, std::string *, uint64_t))(*(void *)a1 + 184))(a1, &v14, v7);
    long long v8 = *(_OWORD *)&v14.__r_.__value_.__l.__data_;
    uint64_t v9 = sub_2225C3D04(a1);
    uint64_t v11 = sub_2225E4EA4(v8, *((uint64_t *)&v8 + 1), v9, a2);
    uint64_t v12 = v10;
    if (!sub_2225CF1E0((uint64_t)&v11))
    {
      sub_2225CBDF0((uint64_t)v13, (uint64_t)&v11);
      (*(void (**)(uint64_t, void **))(*(void *)a1 + 192))(a1, v13);
    }
  }
}

BOOL sub_2226840C8(char *a1, uint64_t a2)
{
  uint64_t v6 = a1;
  uint64_t v7 = a2;
  if (sub_2225CF1E0((uint64_t)&v6)) {
    return 1;
  }
  signed int v2 = sub_2225D8F88(&v6);
  if (sub_222684174(v2)) {
    return 1;
  }
  signed int v3 = sub_2225F87FC(&v6);
  if (sub_222684174(v3)) {
    return 1;
  }
  if (sub_2225D8F88(&v6) == 44) {
    return 1;
  }
  sub_2225C3D00((int)v5, "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-/^., \t");
  return sub_2225D8950(&v6, v5[0], v5[1], 0) != -1
      || sub_22268417C((uint64_t)v6, v7)
      || sub_222684220((uint64_t)v6, v7)
      || sub_222684304(v6, v7);
}

BOOL sub_222684174(signed int a1)
{
  return sub_2225E8DD8(a1, 0x4000uLL);
}

BOOL sub_22268417C(uint64_t a1, uint64_t a2)
{
  v7[0] = a1;
  v7[1] = a2;
  sub_2225C3D00((int)v6, "null");
  if (sub_2225C3CC8((uint64_t)v7, v6[0], (size_t)v6[1])) {
    return 1;
  }
  sub_2225C3D00((int)v5, "Null");
  if (sub_2225C3CC8((uint64_t)v7, v5[0], (size_t)v5[1])) {
    return 1;
  }
  sub_2225C3D00((int)v4, "NULL");
  if (sub_2225C3CC8((uint64_t)v7, v4[0], (size_t)v4[1])) {
    return 1;
  }
  sub_2225C3D00((int)v3, "~");
  return sub_2225C3CC8((uint64_t)v7, v3[0], (size_t)v3[1]);
}

BOOL sub_222684220(uint64_t a1, uint64_t a2)
{
  v9[0] = a1;
  v9[1] = a2;
  sub_2225C3D00((int)v8, "true");
  if (sub_2225C3CC8((uint64_t)v9, v8[0], (size_t)v8[1])) {
    return 1;
  }
  sub_2225C3D00((int)v7, "True");
  if (sub_2225C3CC8((uint64_t)v9, v7[0], (size_t)v7[1])) {
    return 1;
  }
  sub_2225C3D00((int)v6, "TRUE");
  if (sub_2225C3CC8((uint64_t)v9, v6[0], (size_t)v6[1])) {
    return 1;
  }
  sub_2225C3D00((int)v5, "false");
  if (sub_2225C3CC8((uint64_t)v9, v5[0], (size_t)v5[1])) {
    return 1;
  }
  sub_2225C3D00((int)v4, "False");
  if (sub_2225C3CC8((uint64_t)v9, v4[0], (size_t)v4[1])) {
    return 1;
  }
  sub_2225C3D00((int)v3, "FALSE");
  return sub_2225C3CC8((uint64_t)v9, v3[0], (size_t)v3[1]);
}

BOOL sub_222684304(char *a1, uint64_t a2)
{
  uint64_t v9 = a1;
  uint64_t v10 = a2;
  if (sub_2225D8F88(&v9) != 45 && sub_2225D8F88(&v9) != 43
    || (v2 = 1, uint64_t v3 = sub_2225E1AC8(&v9, 1uLL), (sub_2226843DC(v3, v4) & 1) == 0))
  {
    if (sub_2226843DC((uint64_t)v9, v10)) {
      return 1;
    }
    sub_2225C3D00((int)v8, ".nan");
    if (sub_2225C3CC8((uint64_t)&v9, v8[0], (size_t)v8[1])) {
      return 1;
    }
    sub_2225C3D00((int)v7, ".NaN");
    if (sub_2225C3CC8((uint64_t)&v9, v7[0], (size_t)v7[1]))
    {
      return 1;
    }
    else
    {
      sub_2225C3D00((int)v6, ".NAN");
      return sub_2225C3CC8((uint64_t)&v9, v6[0], (size_t)v6[1]);
    }
  }
  return v2;
}

uint64_t sub_2226843DC(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  sub_2225C3D00((int)v20, "0");
  if (!sub_2225D0520((uint64_t)&v21, v20[0], (size_t)v20[1])
    || (uint64_t v2 = 1,
        uint64_t v18 = sub_2225E1AC8(&v21, 1uLL),
        uint64_t v19 = v3,
        sub_2225C3D00((int)v17, "01234567"),
        sub_2225D8950(&v18, v17[0], v17[1], 0) != -1))
  {
    sub_2225C3D00((int)v16, "0o");
    if (sub_2225D0520((uint64_t)&v21, v16[0], (size_t)v16[1]))
    {
      uint64_t v18 = sub_2225E1AC8(&v21, 2uLL);
      uint64_t v19 = v4;
      sub_2225C3D00((int)v15, "01234567");
      if (sub_2225D8950(&v18, v15[0], v15[1], 0) == -1) {
        return 1;
      }
    }
    sub_2225C3D00((int)v14, "0x");
    if (sub_2225D0520((uint64_t)&v21, v14[0], (size_t)v14[1]))
    {
      uint64_t v18 = sub_2225E1AC8(&v21, 2uLL);
      uint64_t v19 = v5;
      sub_2225C3D00((int)v13, "0123456789abcdefABCDEF");
      if (sub_2225D8950(&v18, v13[0], v13[1], 0) == -1) {
        return 1;
      }
    }
    sub_2225C3D00((int)v12, "0123456789");
    if (sub_2225D8950(&v21, v12[0], v12[1], 0) == -1) {
      return 1;
    }
    sub_2225C3D00((int)v11, ".inf");
    if (sub_2225C3CC8((uint64_t)&v21, v11[0], (size_t)v11[1])) {
      return 1;
    }
    sub_2225C3D00((int)v10, ".Inf");
    if (sub_2225C3CC8((uint64_t)&v21, v10[0], (size_t)v10[1])) {
      return 1;
    }
    sub_2225C3D00((int)v9, ".INF");
    if (sub_2225C3CC8((uint64_t)&v21, v9[0], (size_t)v9[1]))
    {
      return 1;
    }
    else
    {
      sub_2225C3D00((int)v8, "^(\\.[0-9]+|[0-9]+(\\.[0-9]*)?)([eE][-+]?[0-9]+)?$");
      uint64_t v7 = sub_2225D1A14(&v18, v8[0], v8[1], 0);
      uint64_t v2 = sub_2225D1AE8(v7, v21, v22, 0);
      sub_2225D1A54((void **)&v18);
    }
  }
  return v2;
}

uint64_t sub_2226845DC(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  uint64_t v8 = 0;
  char v7 = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, char *, uint64_t *))(*(void *)a1 + 120))(a1, a2, a4, 0, &v7, &v8);
  if (result)
  {
    sub_222684690(a1, a3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, v8);
  }
  return result;
}

void sub_222684690(uint64_t a1, unsigned int *a2)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 16))(a1))
  {
    sub_2225CAD04(&v13);
    sub_222609ACC(v12, &v13);
    uint64_t v4 = sub_2225C3D04(a1);
    sub_2225E4EFC(a2, v4, v12);
    uint64_t v5 = sub_222609AD0((uint64_t *)v12);
    sub_2225CCBF8(v11, v5);
    uint64_t v6 = sub_2225C5C08();
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)a1 + 184))(a1, v11, v6);
    sub_2225E8B2C(v12);
    std::string::~string(&v13);
  }
  else
  {
    sub_2225CCC70(&v13);
    uint64_t v7 = sub_2225C5C08();
    (*(void (**)(uint64_t, std::string *, uint64_t))(*(void *)a1 + 184))(a1, &v13, v7);
    long long v8 = *(_OWORD *)&v13.__r_.__value_.__l.__data_;
    uint64_t v9 = sub_2225C3D04(a1);
    v11[0] = sub_2225E4F08(v8, *((uint64_t *)&v8 + 1), v9, a2);
    v11[1] = v10;
    if (!sub_2225CF1E0((uint64_t)v11))
    {
      sub_2225CBDF0((uint64_t)v12, (uint64_t)v11);
      (*(void (**)(uint64_t, void **))(*(void *)a1 + 192))(a1, v12);
    }
  }
}

uint64_t sub_222684820(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = 0;
  char v7 = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, char *, uint64_t *))(*(void *)a1 + 120))(a1, a2, a4, 0, &v7, &v8);
  if (result)
  {
    sub_2226848D4(a1, a3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, v8);
  }
  return result;
}

uint64_t sub_2226848D4(uint64_t a1, uint64_t *a2)
{
  int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 64))(a1);
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 16))(a1)) {
    int v4 = sub_222684A30(a1, a2);
  }
  if (v4)
  {
    for (unint64_t i = 0; i != v4; ++i)
    {
      uint64_t v8 = 0;
      if ((*(unsigned int (**)(uint64_t, unint64_t, uint64_t *))(*(void *)a1 + 72))(a1, i, &v8))
      {
        uint64_t v6 = sub_222684A38(a1, a2, i);
        sub_222683F34(a1, v6);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, v8);
      }
    }
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
}

unint64_t sub_222684A30(uint64_t a1, void *a2)
{
  return sub_2225D24AC(a2);
}

uint64_t sub_222684A38(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (sub_2225D24AC(a2) <= a3) {
    sub_222684A90(a2, a3 + 1);
  }

  return sub_2225D2440(a2, a3);
}

void *sub_222684A90(uint64_t *a1, unint64_t a2)
{
  uint64_t result = (void *)sub_2225D24AC(a1);
  if (a2 <= (unint64_t)result)
  {
    if (a2 < (unint64_t)result)
    {
      uint64_t v5 = *a1 + 24 * a2;
      return (void *)sub_2225D2E90(a1, v5);
    }
  }
  else
  {
    return sub_222684B10(a1, a2 - (void)result);
  }
  return result;
}

void *sub_222684B10(uint64_t *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)sub_2225D2650((uint64_t)a1, a2) - a1[1]) >> 3) >= a2)
  {
    return sub_222684BF8((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
    unint64_t v6 = sub_2225D24AC(a1);
    unint64_t v7 = sub_2225D2880(a1, v6 + a2);
    unint64_t v8 = sub_2225D24AC(a1);
    sub_2225D28FC(v10, v7, v8, v5);
    sub_222684C78((uint64_t)v10, a2);
    sub_2225D2900(a1, v10);
    return (void *)sub_2225D29F0(v10);
  }
}

void *sub_222684BF8(uint64_t a1, uint64_t a2)
{
  sub_2225D2844(&v10, a1, a2);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  while (v4 != v5)
  {
    uint64_t v6 = sub_2225D2650(a1, v3);
    uint64_t v8 = nullsub_1(v4, v7);
    sub_222684CF4(v6, v8);
    v4 += 24;
    uint64_t v11 = v4;
  }
  return sub_2225D284C(&v10);
}

uint64_t sub_222684C78(uint64_t a1, uint64_t a2)
{
  sub_222626E98(&v9, a1 + 16, a2);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  while (v3 != v4)
  {
    uint64_t v5 = sub_2225D2B18(a1);
    uint64_t v7 = nullsub_1(v9, v6);
    sub_222684CF4(v5, v7);
    uint64_t v4 = v10;
    uint64_t v3 = v9 + 24;
    v9 += 24;
  }
  return sub_22261AA18((uint64_t)&v9);
}

uint64_t sub_222684CF8(uint64_t a1, uint64_t a2)
{
  return sub_2225CAD04(a2);
}

uint64_t *sub_222684D00(uint64_t *a1, unint64_t a2)
{
  uint64_t result = (uint64_t *)sub_222683DB4(a1);
  if (a2 <= (unint64_t)result)
  {
    if (a2 < (unint64_t)result)
    {
      uint64_t v5 = *a1 + 104 * a2;
      return (uint64_t *)sub_222684E80(a1, v5);
    }
  }
  else
  {
    return sub_222684D90(a1, a2 - (void)result);
  }
  return result;
}

uint64_t sub_222684D80(void *a1, uint64_t a2)
{
  return *a1 + 104 * a2;
}

uint64_t *sub_222684D90(uint64_t *a1, unint64_t a2)
{
  if (0x4EC4EC4EC4EC4EC5 * ((*(void *)sub_2225D2650((uint64_t)a1, a2) - a1[1]) >> 3) >= a2)
  {
    return sub_222684ED8((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
    uint64_t v6 = sub_222683DB4(a1);
    unint64_t v7 = sub_222684F58(a1, v6 + a2);
    uint64_t v8 = sub_222683DB4(a1);
    sub_222684FD4(v10, v7, v8, v5);
    sub_222684FD8((uint64_t)v10, a2);
    sub_222685054(a1, v10);
    return sub_222685144(v10);
  }
}

uint64_t sub_222684E80(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_222683DB4(a1);
  sub_222683AE8((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

void *sub_222684ED8(uint64_t a1, uint64_t a2)
{
  sub_222685148(&v10, a1, a2);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  while (v4 != v5)
  {
    uint64_t v6 = sub_2225D2650(a1, v3);
    uint64_t v8 = nullsub_1(v4, v7);
    sub_22268514C(v6, v8);
    v4 += 104;
    uint64_t v11 = v4;
  }
  return sub_2225D284C(&v10);
}

unint64_t sub_222684F58(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_2226851D0((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_222683AA0(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_222684FD8(uint64_t a1, uint64_t a2)
{
  sub_22268532C(&v9, a1 + 16, a2);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  while (v3 != v4)
  {
    uint64_t v5 = sub_2225D2B18(a1);
    uint64_t v7 = nullsub_1(v9, v6);
    sub_22268514C(v5, v7);
    uint64_t v4 = v10;
    uint64_t v3 = v9 + 104;
    v9 += 104;
  }
  return sub_22261AA18((uint64_t)&v9);
}

uint64_t sub_222685054(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_22268534C(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  uint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  uint64_t v11 = sub_222683DB4(a1);
  return nullsub_1(a1, v11);
}

void *sub_222685150(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = a2;
  uint64_t v3 = *(void *)(a2 + 8);
  result[1] = v3;
  result[2] = v3 + 104 * a3;
  return result;
}

uint64_t sub_222685168(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 96) = 0;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return sub_222685184(a2);
}

uint64_t sub_222685188(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD04(a1);
  sub_2225CAD04(v2 + 24);
  *(void *)(a1 + 48) = 0x100000001;
  sub_2225D250C((void *)(a1 + 56));
  sub_2225CAD04(a1 + 80);
  return a1;
}

uint64_t sub_2226851D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_222685210(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_222685214()
{
  return 0x276276276276276;
}

uint64_t *sub_222685228(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_2226852B8(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 104 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 104 * v9;
  return a1;
}

uint64_t sub_2226852B8(uint64_t a1, unint64_t a2)
{
  return sub_2226852E0(a1, a2);
}

uint64_t sub_2226852E0(uint64_t a1, unint64_t a2)
{
  if (sub_222685210() < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(104 * a2, 8);
}

void *sub_222685330(void *result, void *a2, uint64_t a3)
{
  *uint64_t result = *a2;
  result[1] = *a2 + 104 * a3;
  result[2] = a2;
  return result;
}

uint64_t sub_22268534C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_22268541C((uint64_t)&v16);
    uint64_t v9 = sub_222685420((uint64_t)v18);
    sub_222685418(a1, v8, v9);
    sub_22268542C((uint64_t)v18);
    sub_22268542C((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_222685420(uint64_t a1)
{
  return *(void *)(a1 + 8) - 104;
}

uint64_t sub_22268542C(uint64_t result)
{
  *(void *)(result + 8) -= 104;
  return result;
}

uint64_t sub_22268543C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222685448(a2, a3);
}

uint64_t sub_22268544C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D1354(a1, a2);
  sub_2225D1354(v4 + 24, a2 + 24);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_2226854A4(a1 + 56, a2 + 56);
  sub_2225D1354(a1 + 80, a2 + 80);
  return a1;
}

void *sub_2226854A8(void *a1, uint64_t a2)
{
  uint64_t v4 = a1 + 2;
  *a1 = 0;
  a1[1] = 0;
  uint64_t v11 = 0;
  uint64_t v5 = sub_2225D2650(a2, a2);
  sub_222621D18(v4, &v11, v5);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v7 = *(void *)sub_2225D2650(a2, v6);
  *(void *)sub_2225D2650((uint64_t)a1, v8) = v7;
  *(void *)sub_2225D2650(a2, v9) = 0;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  return a1;
}

uint64_t sub_222685534(uint64_t a1)
{
  uint64_t v1 = sub_22268555C(a1);

  return nullsub_1(v1, v2);
}

uint64_t *sub_222685560(uint64_t *a1)
{
  sub_2226855C0((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_2226855C8(a1, v4);
    sub_222683A9C(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_2226855C0(uint64_t a1)
{
  return sub_222685610(a1, *(void *)(a1 + 8));
}

uint64_t sub_2226855C8(void *a1, uint64_t a2)
{
  return 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 3);
}

uint64_t sub_222685614(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 104;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = sub_222683B50(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

uint64_t sub_222685680(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_222685688(a1, a3);
}

uint64_t sub_222685688(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_222685778(a1);

  return sub_2226856CC(a1, v4, a2);
}

uint64_t sub_2226856CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v8 = a2;
  uint64_t v5 = (void *)sub_2225C3C70((uint64_t)&v8);
  uint64_t v6 = sub_2225C3C70((uint64_t)v5);
  sub_2225C5B6C((uint64_t)a3, (uint64_t)v5);
  sub_2225C6954(a3, v6);
  if (v5 == *(void **)(a1 + 16)) {
    *(void *)(a1 + 16) = a3;
  }
  else {
    sub_2225C5B6C(v6, (uint64_t)a3);
  }
  sub_2225C6954(v5, (uint64_t)a3);
  nullsub_1(a1, a3);
  sub_2225C64B8(&v9, (uint64_t)a3);
  return v9;
}

uint64_t sub_222685778(uint64_t a1)
{
  sub_2226857B4(a1);
  sub_2225C64B8(&v3, *(void *)(a1 + 16));
  return v3;
}

uint64_t sub_2226857B4(uint64_t a1)
{
  return j_nullsub_1(a1, *(void *)(a1 + 16));
}

uint64_t sub_2226857BC(uint64_t a1)
{
  return sub_2226857C4(a1, a1 + 24);
}

void *sub_2226857C8(uint64_t a1, uint64_t *a2)
{
  if (sub_222685840(a1))
  {
    return (void *)sub_2225CC520(a2, 72, 8uLL);
  }
  else
  {
    uint64_t v5 = sub_222685778(a1);
    return sub_222685878(a1, &v5);
  }
}

BOOL sub_222685840(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  return !v1 || v1 == sub_2226857B4(a1);
}

void *sub_222685878(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  return sub_2226858A4(a1, &v3);
}

void *sub_2226858A4(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a2);
  uint64_t v5 = (void *)sub_2225C3D04((uint64_t)v4);
  uint64_t v6 = sub_2225C3C70((uint64_t)v4);
  uint64_t v7 = v6;
  if (v4 == *(void **)(a1 + 16)) {
    *(void *)(a1 + 16) = v5;
  }
  else {
    sub_2225C5B6C(v6, (uint64_t)v5);
  }
  sub_2225C6954(v5, v7);
  sub_2225C64B8(&v9, (uint64_t)v5);
  *a2 = v9;
  nullsub_1(a1, v4);
  sub_2225C5B6C((uint64_t)v4, 0);
  sub_2225C6954(v4, 0);
  return v4;
}

uint64_t sub_22268596C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_222683398(&v5, a2, a3);
  *(_OWORD *)a1 = v5;
  *(unsigned char *)(a1 + 64) = 3;
  return a1;
}

uint64_t *sub_2226859B0(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_2225CC184(a2);
  return a1;
}

uint64_t sub_2226859F0(uint64_t a1)
{
  return sub_2225D6048(a1, 4u);
}

uint64_t sub_2226859F8(void *a1, unint64_t a2)
{
  unint64_t v4 = sub_2225D624C((uint64_t)a1);
  unint64_t v5 = sub_2225D5A64((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(40 * v7, 0x10800400DDA7E6AuLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_222685AF4(v9, v10, (uint64_t)v8);
  uint64_t v11 = sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  sub_2226836DC(v11, v12);
  if (!sub_2225C603C(a1))
  {
    long long v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 40 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 40 * v7;
  return result;
}

uint64_t sub_222685AF4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_222685B4C(a3, v5);
      v5 += 40;
      a3 += 40;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_222685B50(uint64_t a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_222685B98(a1, a2);
  }
  return a1;
}

uint64_t sub_222685B98(uint64_t a1, void *a2)
{
  if ((void *)a1 != a2)
  {
    if (sub_2225C603C(a2))
    {
      unint64_t v4 = sub_2225CC184((uint64_t)a2);
      unint64_t v5 = sub_2225CC184(a1);
      if (v5 >= v4)
      {
        uint64_t v13 = sub_2225C3C70(a1);
        if (v4)
        {
          uint64_t v14 = sub_2225C3C70((uint64_t)a2);
          uint64_t v15 = sub_2225C3D04((uint64_t)a2);
          uint64_t v13 = sub_222685D88(v14, v15, v13);
        }
        uint64_t v16 = sub_2225C3D04(a1);
        nullsub_1(v13, v16);
        uint64_t v17 = a1;
        uint64_t v18 = v13;
      }
      else
      {
        unint64_t v6 = v5;
        if (sub_222625AEC(a1) >= v4)
        {
          if (v6)
          {
            uint64_t v19 = sub_2225C3C70((uint64_t)a2);
            uint64_t v20 = sub_2225C3C70((uint64_t)a2) + 4 * v6;
            uint64_t v21 = sub_2225C3C70(a1);
            sub_222685D88(v19, v20, v21);
          }
        }
        else
        {
          uint64_t v7 = sub_2225C3C70(a1);
          uint64_t v8 = sub_2225C3D04(a1);
          nullsub_1(v7, v8);
          uint64_t v9 = sub_2225C3C70(a1);
          sub_2225C5B6C(a1, v9);
          sub_2225CC474((const void **)a1, v4);
          unint64_t v6 = 0;
        }
        uint64_t v22 = (void *)(sub_2225C3C70((uint64_t)a2) + 4 * v6);
        int v23 = sub_2225C3D04((uint64_t)a2);
        uint64_t v24 = sub_2225C3C70(a1);
        sub_2225E2BB8(v22, v23, (void *)(v24 + 4 * v6));
        uint64_t v18 = sub_2225C3C70(a1) + 4 * v4;
        uint64_t v17 = a1;
      }
      sub_2225C5B6C(v17, v18);
      sub_2225C5D90(a2);
    }
    else
    {
      uint64_t v10 = sub_2225C3C70(a1);
      uint64_t v11 = sub_2225C3D04(a1);
      nullsub_1(v10, v11);
      if (!sub_2225C603C((void *)a1))
      {
        uint64_t v12 = (void *)sub_2225C3C70(a1);
        free(v12);
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = a2[2];
      sub_22263161C(a2);
    }
  }
  return a1;
}

uint64_t sub_222685D8C()
{
  sub_222685DA8();
  return v0;
}

const void **sub_222685DAC(const void **a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_222685DF4(a1, (uint64_t)a2);
  }
  return a1;
}

const void **sub_222685DF4(const void **a1, uint64_t a2)
{
  if (a1 != (const void **)a2)
  {
    unint64_t v4 = sub_2225CC184(a2);
    unint64_t v5 = sub_2225CC184((uint64_t)a1);
    if (v5 >= v4)
    {
      if (v4)
      {
        sub_2225C3C70(a2);
        sub_2225C3C70(a2);
        sub_2225C3C70((uint64_t)a1);
        uint64_t v10 = sub_222685D8C();
      }
      else
      {
        uint64_t v10 = sub_2225C3C70((uint64_t)a1);
      }
      uint64_t v16 = v10;
      uint64_t v17 = sub_2225C3D04((uint64_t)a1);
      nullsub_1(v16, v17);
      uint64_t v15 = (uint64_t)a1;
      uint64_t v14 = v16;
    }
    else
    {
      unint64_t v6 = v5;
      if (sub_222625AEC((uint64_t)a1) >= v4)
      {
        if (v6)
        {
          sub_2225C3C70(a2);
          sub_2225C3C70(a2);
          sub_2225C3C70((uint64_t)a1);
          sub_222685D8C();
        }
      }
      else
      {
        uint64_t v7 = sub_2225C3C70((uint64_t)a1);
        uint64_t v8 = sub_2225C3D04((uint64_t)a1);
        nullsub_1(v7, v8);
        uint64_t v9 = sub_2225C3C70((uint64_t)a1);
        sub_2225C5B6C((uint64_t)a1, v9);
        sub_2225CC474(a1, v4);
        unint64_t v6 = 0;
      }
      uint64_t v11 = (void *)(sub_2225C3C70(a2) + 4 * v6);
      uint64_t v12 = sub_2225C3D04(a2);
      uint64_t v13 = sub_2225C3C70((uint64_t)a1);
      sub_2225D0844(v11, v12, (void *)(v13 + 4 * v6));
      uint64_t v14 = sub_2225C3C70((uint64_t)a1) + 4 * v4;
      uint64_t v15 = (uint64_t)a1;
    }
    sub_2225C5B6C(v15, v14);
  }
  return a1;
}

uint64_t sub_222685F8C(uint64_t a1)
{
  sub_222685FD0(&v3);
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 64) = 3;
  return a1;
}

uint64_t sub_222685FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  if (sub_2225C3D04((uint64_t)v9))
  {
    uint64_t v4 = 0;
    unsigned int v5 = 1;
    do
    {
      int v6 = *(_DWORD *)sub_222683428(v9, v4);
      *(_DWORD *)sub_22265E298(a1, v4) = v6;
      uint64_t v4 = v5;
    }
    while (sub_2225C3D04((uint64_t)v9) > (unint64_t)v5++);
  }
  return a1;
}

uint64_t sub_222686058()
{
  return sub_2225C69CC();
}

uint64_t sub_222686064(uint64_t a1)
{
  sub_2226860A8(&v3);
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 64) = 3;
  return a1;
}

uint64_t sub_2226860AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  if (sub_2225C3D04((uint64_t)v9))
  {
    uint64_t v4 = 0;
    unsigned int v5 = 1;
    do
    {
      char v6 = *(unsigned char *)sub_2225CB8E4(v9, v4);
      *(unsigned char *)sub_22265E298(a1, v4) = v6;
      uint64_t v4 = v5;
    }
    while (sub_2225C3D04((uint64_t)v9) > (unint64_t)v5++);
  }
  return a1;
}

uint64_t *sub_222686130(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_2225C5664(a2);
  return a1;
}

uint64_t sub_222686170(unsigned __int8 *a1)
{
  switch(sub_2226376DC(a1))
  {
    case 1u:
      uint64_t v4 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_7;
    case 2u:
      uint64_t v5 = sub_2225E55A8((uint64_t)a1);
      return sub_22268641C(v5);
    case 3u:
      uint64_t v6 = sub_2225E55A8((uint64_t)a1);
      return sub_2225DF8D0(v6);
    case 4u:
      uint64_t v6 = sub_2225E55A8((uint64_t)a1);
      return sub_2225DF8D0(v6);
    case 5u:
    case 6u:
      uint64_t v7 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_19;
    case 7u:
      uint64_t v8 = sub_2225E55A8((uint64_t)a1);
      return sub_2225CDCEC(v8);
    case 8u:
      uint64_t v9 = sub_2225E55A8((uint64_t)a1);
      return sub_2225DAD0C(v9);
    case 9u:
      uint64_t v9 = sub_2225E55A8((uint64_t)a1);
      return sub_2225DAD0C(v9);
    case 0xAu:
      uint64_t v4 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_7;
    case 0xBu:
      uint64_t v4 = sub_2225E55A8((uint64_t)a1);
      goto LABEL_7;
    case 0xCu:
      uint64_t v4 = sub_2225E55A8((uint64_t)a1);
LABEL_7:
      uint64_t result = sub_222613380(v4);
      break;
    case 0xDu:
      uint64_t v7 = sub_2225E55A8((uint64_t)a1);
LABEL_19:
      uint64_t result = sub_2225F514C(v7);
      break;
    case 0xEu:
      uint64_t v10 = sub_2225E55A8((uint64_t)a1);
      uint64_t result = sub_222673DFC(v10);
      break;
    default:
      uint64_t v2 = sub_2225E55A8((uint64_t)a1);
      uint64_t result = sub_2226863EC(v2);
      break;
  }
  return result;
}

uint64_t sub_2226863EC(uint64_t a1)
{
  uint64_t v1 = *(void *)sub_22265E3C4(a1 + 8);

  return sub_222686170(v1);
}

uint64_t sub_22268641C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)sub_222686AD0(a1 + 8);

  return sub_22267237C(v1);
}

_DWORD *sub_22268644C(uint64_t a1, int a2, int a3)
{
  uint64_t v5 = (_DWORD *)sub_22267235C(0x18u, a1, 8u);

  return sub_222686498(v5, a2, a3);
}

_DWORD *sub_222686498(_DWORD *a1, int a2, int a3)
{
  return sub_222686AD4(a1, a2, a3);
}

_DWORD *sub_2226864A4(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_22268644C(a1, a2, a3);
  sub_2226864FC((void *)v8 + 1, a1, a4, a5);
  return v8;
}

void *sub_2226864FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  int v6 = sub_2225C3D04((uint64_t)&v8);
  sub_222686E64((uint64_t)a1, v6);
  return sub_222673944(a1, a2, v8, v9);
}

_DWORD *sub_222686550(uint64_t a1, int a2)
{
  long long v3 = (_DWORD *)sub_22267235C(8u, a1, 8u);

  return sub_222686594(v3, a2);
}

_DWORD *sub_222686594(_DWORD *a1, int a2)
{
  return sub_222686B28(a1, a2);
}

uint64_t sub_22268659C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22267235C(0x10u, a1, 8u);
  uint64_t v7 = sub_2226865FC();
  sub_222686600((unsigned __int8 *)(v7 + 8), a1, a2, a3);
  return v6;
}

void *sub_222686600(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  int v6 = sub_2225C3D04((uint64_t)&v8);
  sub_222686E64((uint64_t)a1, v6);
  return sub_222686E7C(a1, a2, v8, v9);
}

_DWORD *sub_222686654(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v13 = (_DWORD *)sub_22267235C(0x30u, a1, 8u);

  return sub_2226866D0(v13, a2, a3, a4, a5, a6, a7);
}

_DWORD *sub_2226866D0(_DWORD *a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return sub_222686B98(a1, a2, a3, a4, a5, a6, a7);
}

_DWORD *sub_2226866E0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5 = (_DWORD *)sub_22267235C(0x28u, a1, 8u);

  return sub_22268672C(v5, a2, a3);
}

_DWORD *sub_22268672C(_DWORD *a1, int a2, uint64_t a3)
{
  return sub_222686BF4(a1, a2, a3);
}

_DWORD *sub_222686734(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);

  return sub_222686790(v7, a2, a3, a4);
}

_DWORD *sub_222686790(_DWORD *a1, int a2, int a3, uint64_t a4)
{
  return sub_222686C2C(a1, a2, a3, a4);
}

_DWORD *sub_22268679C(uint64_t a1, int a2, int a3)
{
  uint64_t v5 = (_DWORD *)sub_22267235C(0x18u, a1, 8u);

  return sub_2226867E8(v5, a2, a3);
}

_DWORD *sub_2226867E8(_DWORD *a1, int a2, int a3)
{
  return sub_222686C94(a1, a2, a3);
}

_DWORD *sub_2226867F4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (_DWORD *)sub_22267235C(0x30u, a1, 8u);

  return sub_222686868(v11, a2, a3, a4, a5, a6);
}

_DWORD *sub_222686868(_DWORD *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_222686CA8(a1, a2, a3, a4, a5, a6);
}

_DWORD *sub_222686870(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);

  return sub_2226868CC(v7, a2, a3, a4);
}

_DWORD *sub_2226868CC(_DWORD *a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_222686CFC(a1, a2, a3, a4);
}

_DWORD *sub_2226868D4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);
  int v8 = sub_222673E34(a4);

  return sub_222686944(v7, a2, v8, a3, a4);
}

_DWORD *sub_222686944(_DWORD *a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_222686D3C(a1, a2, a3, a4, a5);
}

_DWORD *sub_222686950(uint64_t a1, int a2)
{
  long long v3 = (_DWORD *)sub_22267235C(8u, a1, 8u);

  return sub_222686994(v3, a2);
}

_DWORD *sub_222686994(_DWORD *a1, int a2)
{
  return sub_222686D80(a1, a2);
}

_DWORD *sub_22268699C(uint64_t a1, int a2)
{
  long long v3 = (_DWORD *)sub_22267235C(8u, a1, 8u);

  return sub_2226869E0(v3, a2);
}

_DWORD *sub_2226869E0(_DWORD *a1, int a2)
{
  return sub_222686DAC(a1, a2);
}

_DWORD *sub_2226869E8(uint64_t a1, int a2)
{
  long long v3 = (_DWORD *)sub_22267235C(8u, a1, 8u);

  return sub_222686A2C(v3, a2);
}

_DWORD *sub_222686A2C(_DWORD *a1, int a2)
{
  return sub_222686DD8(a1, a2);
}

_DWORD *sub_222686A34(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5 = (_DWORD *)sub_22267235C(0x18u, a1, 8u);

  return sub_222686A80(v5, a2, a3);
}

_DWORD *sub_222686A80(_DWORD *a1, int a2, uint64_t a3)
{
  return sub_222686E04(a1, a2, a3);
}

uint64_t sub_222686A88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22267235C(0x10u, a1, 8u);

  return sub_222686ACC(v3, a2);
}

_DWORD *sub_222686AD4(_DWORD *a1, int a2, int a3)
{
  int v6 = sub_222686B1C(a1, 0);
  sub_2225E1678(v6 + 2);
  a1[4] = a2;
  a1[5] = a3;
  return a1;
}

_DWORD *sub_222686B1C(_DWORD *result, char a2)
{
  *uint64_t result = 0;
  *(unsigned char *)uint64_t result = a2;
  return result;
}

_DWORD *sub_222686B28(_DWORD *a1, int a2)
{
  uint64_t result = sub_222686B1C(a1, 1);
  result[1] = a2;
  return result;
}

_DWORD *sub_222686B54(_DWORD *a1)
{
  uint64_t v2 = sub_222686B1C(a1, 2);
  sub_222686B88(v2 + 2);
  return a1;
}

_DWORD *sub_222686B98(_DWORD *a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t result = sub_222686B1C(a1, 3);
  *((void *)result + 1) = a3;
  *((void *)result + 2) = a4;
  *((void *)result + 3) = a6;
  result[8] = a2;
  result[9] = a5;
  result[10] = a7;
  return result;
}

_DWORD *sub_222686BF4(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t result = sub_222686B1C(a1, 4);
  *((void *)result + 2) = 0;
  *((void *)result + 3) = 0;
  *((void *)result + 1) = a3;
  result[8] = a2;
  return result;
}

_DWORD *sub_222686C2C(_DWORD *a1, int a2, int a3, uint64_t a4)
{
  uint64_t result = sub_222686C64(a1, 5, a2, a3);
  *((void *)result + 3) = a4;
  return result;
}

_DWORD *sub_222686C64(_DWORD *a1, char a2, int a3, int a4)
{
  uint64_t result = sub_222686B1C(a1, a2);
  *((void *)result + 1) = 0;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_DWORD *sub_222686C94(_DWORD *a1, int a2, int a3)
{
  return sub_222686C64(a1, 6, a2, a3);
}

_DWORD *sub_222686CA8(_DWORD *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_222686B1C(a1, 7);
  *((void *)result + 1) = a3;
  *((void *)result + 2) = a4;
  *((void *)result + 3) = a5;
  *((void *)result + 4) = a6;
  result[10] = a2;
  return result;
}

_DWORD *sub_222686CFC(_DWORD *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_222686B1C(a1, 8);
  *((void *)result + 1) = a3;
  *((void *)result + 2) = a4;
  result[6] = a2;
  return result;
}

_DWORD *sub_222686D3C(_DWORD *a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_222686B1C(a1, 9);
  *((void *)result + 1) = a4;
  *((void *)result + 2) = a5;
  result[6] = a2;
  result[7] = a3;
  return result;
}

_DWORD *sub_222686D80(_DWORD *a1, int a2)
{
  uint64_t result = sub_222686B1C(a1, 10);
  result[1] = a2;
  return result;
}

_DWORD *sub_222686DAC(_DWORD *a1, int a2)
{
  uint64_t result = sub_222686B1C(a1, 11);
  result[1] = a2;
  return result;
}

_DWORD *sub_222686DD8(_DWORD *a1, int a2)
{
  uint64_t result = sub_222686B1C(a1, 12);
  result[1] = a2;
  return result;
}

_DWORD *sub_222686E04(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t result = sub_222686B1C(a1, 13);
  *((void *)result + 1) = a3;
  result[4] = a2;
  return result;
}

_DWORD *sub_222686E38(_DWORD *a1, uint64_t a2)
{
  uint64_t result = sub_222686B1C(a1, 14);
  *((void *)result + 1) = a2;
  return result;
}

int *sub_222686E64(uint64_t a1, int a2)
{
  return sub_222686E6C((int *)(a1 - 8), a2);
}

int *sub_222686E6C(int *result, int a2)
{
  *uint64_t result = *(unsigned __int8 *)result | (a2 << 8);
  return result;
}

void *sub_222686E7C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[0] = a3;
  v18[1] = a4;
  if (sub_222608DE8(a1))
  {
    uint64_t v7 = sub_222657F58(a1, v6);
    nullsub_1(a2, v7);
  }
  uint64_t result = (void *)sub_2225C3D04((uint64_t)v18);
  if (result)
  {
    if (sub_2225C3D04((uint64_t)v18) == 1)
    {
      uint64_t v9 = (uint64_t *)sub_2225C3C70((uint64_t)v18);
      uint64_t result = (void *)sub_222686F6C((uint64_t)&v17, *v9);
      *(void *)a1 = v17;
    }
    else
    {
      unint64_t v10 = sub_2225C3D04((uint64_t)v18);
      if (v10 >> 61) {
        unsigned int v11 = -1;
      }
      else {
        unsigned int v11 = 8 * v10;
      }
      uint64_t v12 = sub_22267235C(v11, a2, 8u);
      sub_222686F70((uint64_t)&v17, v12);
      *(void *)a1 = v17;
      uint64_t v14 = (void *)sub_222657F58(a1, v13);
      uint64_t v15 = (const void *)sub_2225C3C70((uint64_t)v18);
      uint64_t v16 = sub_2225C3D04((uint64_t)v18);
      return memcpy(v14, v15, 8 * v16);
    }
  }
  return result;
}

uint64_t sub_222686F74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_222686FB4(a1, v3);
}

uint64_t *sub_222686FB8(uint64_t *a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_222686FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_222627EE0(a1, v3, 1);
}

uint64_t sub_222687024(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_222687060(a1, v2);
}

uint64_t sub_222687060(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = sub_2226533D4(a1);
  uint64_t v17 = v4;
  uint64_t v5 = (uint64_t *)sub_2225C3C70((uint64_t)&v16);
  uint64_t v6 = sub_2225DC1A0(&v16);
  if (v5 == (uint64_t *)v6)
  {
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v7 = (uint64_t *)v6;
    LODWORD(v8) = 1;
    do
    {
      uint64_t v9 = *v5++;
      uint64_t v8 = sub_2226586AC(v9, a2) & v8;
    }
    while (v5 != v7);
  }
  uint64_t v16 = sub_2226534D8(a1);
  uint64_t v17 = v10;
  unsigned int v11 = (uint64_t *)sub_2225C3C70((uint64_t)&v16);
  uint64_t v12 = sub_2225DC1A0(&v16);
  if (v11 != (uint64_t *)v12)
  {
    uint64_t v13 = (uint64_t *)v12;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v8 = sub_2226586AC(v14, a2) & v8;
    }
    while (v11 != v13);
  }
  return v8;
}

void sub_222687130(unsigned char *a1, uint64_t a2)
{
  switch(sub_222654E20(a1))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      sub_22268725C((uint64_t)a1, a2);
      break;
    case 5u:
      uint64_t v4 = (uint64_t)a1;
      uint64_t v5 = a2;
      goto LABEL_7;
    case 6u:
      uint64_t v4 = (uint64_t)a1;
      uint64_t v5 = a2;
LABEL_7:
      sub_2226872AC(v4, v5);
      break;
    case 7u:
      sub_2226872FC((uint64_t)a1, a2);
      break;
    case 8u:
      sub_2226873CC((uint64_t)a1, a2);
      break;
    default:
      return;
  }
}

void sub_22268725C(uint64_t a1, uint64_t a2)
{
  v4[0] = sub_222688054(a1);
  v4[1] = v3;
  sub_2225CA51C(v4, (uint64_t)&v5);
  sub_22268810C(a2, (uint64_t)&v5);
  std::string::~string(&v5);
}

void sub_2226872AC(uint64_t a1, uint64_t a2)
{
  v4[0] = sub_2226877C8(a1);
  v4[1] = v3;
  sub_2225CA51C(v4, (uint64_t)&v5);
  sub_22268810C(a2, (uint64_t)&v5);
  std::string::~string(&v5);
}

void sub_2226872FC(uint64_t a1, uint64_t a2)
{
  v12.__r_.__value_.__r.__words[0] = sub_2225C3D04(a1);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v12);
  sub_222687130(v4, a2);
  sub_2225D16D8(a2, (uint64_t)"[", (uint64_t)&v8);
  sub_2225CBDEC((uint64_t)v9, (uint64_t)&v8);
  int v5 = sub_2225F514C(a1);
  sub_222688248((uint64_t)v7, v5);
  sub_2225CF9F4(v10, v9, v7);
  sub_2225CBDE8((uint64_t)v6, "]");
  sub_2225CF9F4(v11, v10, v6);
  sub_2225DBA20((uint64_t)v11, &v12);
  sub_22268810C(a2, (uint64_t)&v12);
  std::string::~string(&v12);
  std::string::~string(&v8);
}

void sub_2226873CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1 + 16);
  sub_222687130(v3, a2);
  sub_2225D16D8(a2, (uint64_t)"[]", (uint64_t)&v4);
  sub_22268810C(a2, (uint64_t)&v4);
  std::string::~string(&v4);
}

uint64_t sub_22268742C(uint64_t a1)
{
  sub_2225C64B8(&v12, a1);
  uint64_t v1 = sub_2225C3C70((uint64_t)&v12);
  uint64_t v2 = sub_222655B18(v1);
  if (v2)
  {
    uint64_t v3 = v2;
    if (sub_2226874F0(v2)) {
      uint64_t v4 = sub_2225C3D04(v3);
    }
    else {
      uint64_t v4 = sub_2225C5B40(v3);
    }
    uint64_t v12 = v4;
  }
  uint64_t v5 = sub_2225C3C70((uint64_t)&v12);
  uint64_t v6 = sub_222655B14(v5);
  if (v6) {
    uint64_t v12 = sub_2225C3D04(v6);
  }
  uint64_t v7 = sub_2225C3C70((uint64_t)&v12);
  uint64_t v8 = sub_222654B7C(v7);
  if (!v8)
  {
    uint64_t v9 = sub_2225C3C70((uint64_t)&v12);
    uint64_t v8 = sub_222654C5C(v9);
    if (!v8) {
      return v12;
    }
  }
  uint64_t v10 = sub_2225C3D04(v8);
  sub_2225C64B8(&v13, v10);
  return v13;
}

uint64_t sub_2226874F0(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + 8);
  sub_2225C64B8(&v3, 0);
  return sub_22268824C(v1, v3);
}

uint64_t sub_222687530(uint64_t a1, _DWORD *a2)
{
  if (sub_2226876CC(a1, a2)) {
    return 1;
  }
  if (sub_2226655C4(a1)) {
    return 0;
  }
  uint64_t v25 = sub_22268742C(a1);
  uint64_t v5 = sub_2225C3C70((uint64_t)&v25);
  uint64_t v6 = sub_222655268(v5);
  if (v6)
  {
    uint64_t v7 = sub_2225C3D04(v6) + 16;
    uint64_t v8 = (uint64_t *)sub_2225CC180(v7);
    uint64_t v9 = sub_22265594C(v7);
    if (v8 != (uint64_t *)v9)
    {
      uint64_t v10 = (uint64_t *)v9;
      while (1)
      {
        uint64_t v11 = *v8;
        uint64_t v12 = (unsigned __int8 **)sub_222653754(*v8);
        uint64_t v13 = sub_222653758(v11);
        if (v12 != (unsigned __int8 **)v13) {
          break;
        }
LABEL_12:
        if (++v8 == v10) {
          return 0;
        }
      }
      while (1)
      {
        uint64_t v24 = sub_222659C34(*v12);
        uint64_t v14 = sub_2225C3C70((uint64_t)&v24);
        if (sub_2226876CC(v14, a2)) {
          return 1;
        }
        if (++v12 == (unsigned __int8 **)v13) {
          goto LABEL_12;
        }
      }
    }
    return 0;
  }
  uint64_t v15 = sub_2225C3C70((uint64_t)&v25);
  uint64_t result = sub_2226552F0(v15);
  if (result)
  {
    uint64_t v16 = sub_2225C3D04(result) + 16;
    uint64_t v17 = (uint64_t *)sub_2225CC180(v16);
    uint64_t v18 = sub_222655A98(v16);
    if (v17 != (uint64_t *)v18)
    {
      uint64_t v19 = (uint64_t *)v18;
      while (1)
      {
        uint64_t v20 = *v17;
        uint64_t v21 = (unsigned __int8 **)sub_222653754(*v17);
        uint64_t v22 = sub_222653758(v20);
        if (v21 != (unsigned __int8 **)v22) {
          break;
        }
LABEL_20:
        uint64_t result = 0;
        if (++v17 == v19) {
          return result;
        }
      }
      while (1)
      {
        uint64_t v24 = sub_222659C34(*v21);
        uint64_t v23 = sub_2225C3C70((uint64_t)&v24);
        if (sub_2226876CC(v23, a2)) {
          return 1;
        }
        if (++v21 == (unsigned __int8 **)v22) {
          goto LABEL_20;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_2226876CC(uint64_t a1, _DWORD *a2)
{
  uint64_t v6 = sub_22268742C(a1);
  uint64_t v3 = sub_2225C3C70((uint64_t)&v6);
  uint64_t result = sub_222654A90(v3);
  if (result)
  {
    int v5 = sub_222655AE4(result);
    *a2 = v5;
    return (v5 - 5) < 2;
  }
  return result;
}

unint64_t sub_222687720(uint64_t a1)
{
  uint64_t v2 = sub_222655B10(a1);
  if (v2)
  {
    return sub_2226877A4(v2);
  }
  else
  {
    unint64_t result = sub_222655B14(a1);
    if (result || (unint64_t result = sub_222655B18(a1)) != 0)
    {
      uint64_t v5 = sub_2225C3D04(result);
      uint64_t v4 = sub_2225C3C70((uint64_t)&v5);
      return sub_222687720(v4);
    }
  }
  return result;
}

unint64_t sub_2226877A4(uint64_t a1)
{
  return (0x7FFFFE3FFDEuLL >> ((*(unsigned char *)(a1 + 1) & 0x7Fu) - 2)) & 1;
}

uint64_t sub_2226877C8(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  if (sub_22265592C(v2))
  {
    uint64_t v3 = sub_2225C3D04(a1);
    return sub_222654540(v3);
  }
  else
  {
    sub_2225C3D00((int)&v5, &byte_2226D1615);
    return v5;
  }
}

uint64_t sub_222687824(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = *(void *)(a1 + 928);
  uint64_t v4 = v3 + 4;
  if (a3 == 2 && v4 == a2)
  {
    uint64_t v5 = v3 + 24;
  }
  else if (a3 == 3 && v4 == a2)
  {
    uint64_t v5 = v3 + 40;
  }
  else if (a3 == 4 && v4 == a2)
  {
    uint64_t v5 = v3 + 56;
  }
  else
  {
    uint64_t v6 = v3 + 8;
    if (a3 == 2 && v6 == a2)
    {
      uint64_t v5 = v3 + 72;
    }
    else if (a3 == 3 && v6 == a2)
    {
      uint64_t v5 = v3 + 88;
    }
    else if (a3 == 4 && v6 == a2)
    {
      uint64_t v5 = v3 + 104;
    }
    else
    {
      uint64_t v7 = v3 + 12;
      if (a3 == 2 && v7 == a2)
      {
        uint64_t v5 = v3 + 120;
      }
      else if (a3 == 3 && v7 == a2)
      {
        uint64_t v5 = v3 + 136;
      }
      else if (a3 == 4 && v7 == a2)
      {
        uint64_t v5 = v3 + 152;
      }
      else
      {
        uint64_t v8 = v3 + 16;
        if (a3 == 2 && v8 == a2)
        {
          uint64_t v5 = v3 + 168;
        }
        else if (a3 == 3 && v8 == a2)
        {
          uint64_t v5 = v3 + 184;
        }
        else if (a3 == 4 && v8 == a2)
        {
          uint64_t v5 = v3 + 200;
        }
        else
        {
          uint64_t v9 = v3 + 20;
          if (a3 == 2 && v9 == a2)
          {
            uint64_t v5 = v3 + 216;
          }
          else if (a3 == 3 && v9 == a2)
          {
            uint64_t v5 = v3 + 232;
          }
          else
          {
            uint64_t v5 = v3 + 248;
          }
        }
      }
    }
  }
  sub_2225C64B8(&v11, v5);
  return v11;
}

uint64_t sub_2226879B8(uint64_t a1, _DWORD *a2)
{
  uint64_t result = sub_222655B10(a1);
  if (result
    || (uint64_t result = sub_222655B14(a1)) != 0
    && (uint64_t v7 = sub_2225C3D04(result), v6 = sub_2225C3C70((uint64_t)&v7), (result = sub_222655B10(v6)) != 0))
  {
    int v5 = sub_222655AE4(result);
    *a2 = v5;
    return (v5 - 41) < 4;
  }
  return result;
}

uint64_t sub_222687A28(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a1 + 928);
  uint64_t v5 = v4 + 4;
  BOOL v7 = a4 == 2 && v5 == a2;
  if (a3 == 2 && v7)
  {
    uint64_t v8 = v4 + 264;
  }
  else
  {
    BOOL v10 = a4 == 3 && v5 == a2;
    if (a3 == 3 && v10)
    {
      uint64_t v8 = v4 + 280;
    }
    else
    {
      BOOL v12 = a4 == 4 && v5 == a2;
      if (a3 == 4 && v12)
      {
        uint64_t v8 = v4 + 296;
      }
      else
      {
        char v13 = !v10;
        if (a3 != 2) {
          char v13 = 1;
        }
        if (v13)
        {
          char v14 = !v12;
          if (a3 != 2) {
            char v14 = 1;
          }
          if (v14)
          {
            char v15 = !v7;
            if (a3 != 3) {
              char v15 = 1;
            }
            if (v15)
            {
              char v16 = !v12;
              if (a3 != 3) {
                char v16 = 1;
              }
              if (v16)
              {
                char v17 = !v7;
                if (a3 != 4) {
                  char v17 = 1;
                }
                if (v17)
                {
                  char v18 = !v10;
                  if (a3 != 4) {
                    char v18 = 1;
                  }
                  if (v18)
                  {
                    uint64_t v19 = v4 + 8;
                    BOOL v21 = a4 == 2 && v19 == a2;
                    if (a3 == 2 && v21)
                    {
                      uint64_t v8 = v4 + 408;
                    }
                    else
                    {
                      BOOL v23 = a4 == 3 && v19 == a2;
                      if (a3 == 3 && v23)
                      {
                        uint64_t v8 = v4 + 424;
                      }
                      else
                      {
                        BOOL v25 = a4 == 4 && v19 == a2;
                        if (a3 == 4 && v25)
                        {
                          uint64_t v8 = v4 + 440;
                        }
                        else
                        {
                          char v26 = !v23;
                          if (a3 != 2) {
                            char v26 = 1;
                          }
                          if (v26)
                          {
                            char v27 = !v25;
                            if (a3 != 2) {
                              char v27 = 1;
                            }
                            if (v27)
                            {
                              char v28 = !v21;
                              if (a3 != 3) {
                                char v28 = 1;
                              }
                              if (v28)
                              {
                                char v29 = !v25;
                                if (a3 != 3) {
                                  char v29 = 1;
                                }
                                if (v29)
                                {
                                  char v30 = !v21;
                                  if (a3 != 4) {
                                    char v30 = 1;
                                  }
                                  if (v30) {
                                    uint64_t v8 = v4 + 536;
                                  }
                                  else {
                                    uint64_t v8 = v4 + 520;
                                  }
                                }
                                else
                                {
                                  uint64_t v8 = v4 + 504;
                                }
                              }
                              else
                              {
                                uint64_t v8 = v4 + 488;
                              }
                            }
                            else
                            {
                              uint64_t v8 = v4 + 472;
                            }
                          }
                          else
                          {
                            uint64_t v8 = v4 + 456;
                          }
                        }
                      }
                    }
                  }
                  else
                  {
                    uint64_t v8 = v4 + 392;
                  }
                }
                else
                {
                  uint64_t v8 = v4 + 376;
                }
              }
              else
              {
                uint64_t v8 = v4 + 360;
              }
            }
            else
            {
              uint64_t v8 = v4 + 344;
            }
          }
          else
          {
            uint64_t v8 = v4 + 328;
          }
        }
        else
        {
          uint64_t v8 = v4 + 312;
        }
      }
    }
  }
  sub_2225C64B8(&v32, v8);
  return v32;
}

uint64_t sub_222687C14(uint64_t a1, int a2)
{
  switch(a2)
  {
    case 3:
      uint64_t v2 = *(void *)(a1 + 928) + 4;
      break;
    case 4:
      uint64_t v2 = *(void *)(a1 + 928) + 8;
      break;
    case 5:
      uint64_t v2 = *(void *)(a1 + 928) + 12;
      break;
    case 6:
      uint64_t v2 = *(void *)(a1 + 928) + 16;
      break;
    case 7:
      uint64_t v2 = *(void *)(a1 + 928) + 20;
      break;
    case 8:
      uint64_t v2 = *(void *)(a1 + 928) + 24;
      break;
    case 9:
      uint64_t v2 = *(void *)(a1 + 928) + 40;
      break;
    case 10:
      uint64_t v2 = *(void *)(a1 + 928) + 56;
      break;
    case 11:
      uint64_t v2 = *(void *)(a1 + 928) + 72;
      break;
    case 12:
      uint64_t v2 = *(void *)(a1 + 928) + 88;
      break;
    case 13:
      uint64_t v2 = *(void *)(a1 + 928) + 104;
      break;
    case 14:
      uint64_t v2 = *(void *)(a1 + 928) + 120;
      break;
    case 15:
      uint64_t v2 = *(void *)(a1 + 928) + 136;
      break;
    case 16:
      uint64_t v2 = *(void *)(a1 + 928) + 152;
      break;
    case 17:
      uint64_t v2 = *(void *)(a1 + 928) + 168;
      break;
    case 18:
      uint64_t v2 = *(void *)(a1 + 928) + 184;
      break;
    case 19:
      uint64_t v2 = *(void *)(a1 + 928) + 200;
      break;
    case 20:
      uint64_t v2 = *(void *)(a1 + 928) + 216;
      break;
    case 21:
      uint64_t v2 = *(void *)(a1 + 928) + 232;
      break;
    case 22:
      uint64_t v2 = *(void *)(a1 + 928) + 248;
      break;
    case 23:
      uint64_t v2 = *(void *)(a1 + 928) + 264;
      break;
    case 24:
      uint64_t v2 = *(void *)(a1 + 928) + 280;
      break;
    case 25:
      uint64_t v2 = *(void *)(a1 + 928) + 296;
      break;
    case 26:
      uint64_t v2 = *(void *)(a1 + 928) + 312;
      break;
    case 27:
      uint64_t v2 = *(void *)(a1 + 928) + 328;
      break;
    case 28:
      uint64_t v2 = *(void *)(a1 + 928) + 344;
      break;
    case 29:
      uint64_t v2 = *(void *)(a1 + 928) + 360;
      break;
    case 30:
      uint64_t v2 = *(void *)(a1 + 928) + 376;
      break;
    case 31:
      uint64_t v2 = *(void *)(a1 + 928) + 392;
      break;
    case 32:
      uint64_t v2 = *(void *)(a1 + 928) + 408;
      break;
    case 33:
      uint64_t v2 = *(void *)(a1 + 928) + 424;
      break;
    case 34:
      uint64_t v2 = *(void *)(a1 + 928) + 440;
      break;
    case 35:
      uint64_t v2 = *(void *)(a1 + 928) + 456;
      break;
    case 36:
      uint64_t v2 = *(void *)(a1 + 928) + 472;
      break;
    case 37:
      uint64_t v2 = *(void *)(a1 + 928) + 488;
      break;
    case 38:
      uint64_t v2 = *(void *)(a1 + 928) + 504;
      break;
    case 39:
      uint64_t v2 = *(void *)(a1 + 928) + 520;
      break;
    case 40:
      uint64_t v2 = *(void *)(a1 + 928) + 536;
      break;
    case 41:
      uint64_t v2 = *(void *)(a1 + 928) + 552;
      break;
    case 42:
      uint64_t v2 = *(void *)(a1 + 928) + 556;
      break;
    case 43:
      uint64_t v2 = *(void *)(a1 + 928) + 560;
      break;
    case 44:
      uint64_t v2 = *(void *)(a1 + 928) + 564;
      break;
    default:
      uint64_t v2 = *(void *)(a1 + 928);
      break;
  }
  sub_2225C64B8(&v4, v2);
  return v4;
}

uint64_t sub_222687F08(uint64_t a1)
{
  return ((*(unsigned char *)(a1 + 1) & 0x7Fu) < 0x20) & (0xFF800708 >> *(unsigned char *)(a1 + 1));
}

uint64_t sub_222687F2C(uint64_t a1)
{
  return ((*(unsigned char *)(a1 + 1) & 0x7Fu) < 0x29) & (0x1FF00003810uLL >> *(unsigned char *)(a1 + 1));
}

uint64_t sub_222687F50(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = (*(unsigned char *)(a1 + 1) & 0x7F) - 5;
  if (v2 > 0xE || ((0x7E03u >> v2) & 1) == 0) {
    return 0;
  }
  *a2 = byte_2226D1252[v2];
  return 1;
}

uint64_t sub_222687F90(uint64_t a1)
{
  return ((*(unsigned char *)(a1 + 1) & 0x7Fu) < 0x17) & (0x700080u >> *(unsigned char *)(a1 + 1));
}

uint64_t sub_222687FB4(uint64_t a1, int a2)
{
  switch(a2)
  {
    case 4:
      uint64_t result = *(void *)(a1 + 928) + 8;
      break;
    case 5:
      uint64_t result = *(void *)(a1 + 928) + 12;
      break;
    case 6:
      uint64_t result = *(void *)(a1 + 928) + 16;
      break;
    case 7:
      uint64_t result = *(void *)(a1 + 928) + 20;
      break;
    default:
      uint64_t result = *(void *)(a1 + 928) + 4;
      break;
  }
  return result;
}

uint64_t sub_222688028(uint64_t a1)
{
  sub_2225C64B8(&v2, *(void *)(a1 + 928));
  return v2;
}

uint64_t sub_222688054(uint64_t a1)
{
  int v1 = sub_222655AE4(a1);

  return sub_22268807C(v1);
}

uint64_t sub_22268807C(int a1)
{
  sub_2225C3D00((int)&v2, (&off_2646261D0)[a1 - 2]);
  return v2;
}

uint64_t sub_2226880B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22267235C(0x18u, a1, 8u);
  sub_222688108(v3, a2);
  sub_2225C64B8(&v5, v3);
  return v5;
}

uint64_t sub_22268810C(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_222688134(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v13 = a2;
  unsigned int v12 = a3;
  uint64_t v10 = sub_2225C3C70((uint64_t)&v13);
  v11[0] = sub_222611A80((uint64_t)&v10, (uint64_t)&v12);
  v11[1] = v4;
  if (sub_222688200(*(void *)(a1 + 928) + 568, (uint64_t)v11))
  {
    uint64_t v5 = (uint64_t *)sub_222688228((int *)(*(void *)(a1 + 928) + 568), (uint64_t)v11);
    sub_2225C64B8(&v14, *v5);
  }
  else
  {
    uint64_t v6 = sub_22267235C(0x18u, a1, 8u);
    sub_222688244(v6, v13, v12);
    BOOL v7 = sub_2225C64B8(&v14, v6);
    uint64_t v8 = sub_2225C3C70((uint64_t)v7);
    *(void *)sub_222688228((int *)(*(void *)(a1 + 928) + 568), (uint64_t)v11) = v8;
  }
  return v14;
}

uint64_t sub_222688200(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  return sub_2226883AC(a1, a2, &v3);
}

uint64_t sub_222688228(int *a1, uint64_t a2)
{
  return sub_222688514(a1, a2) + 16;
}

uint64_t sub_22268824C(uint64_t *a1, uint64_t a2)
{
  return sub_222688268(a1, a2) ^ 1;
}

uint64_t sub_222688268(uint64_t *a1, uint64_t a2)
{
  uint64_t v14 = a2;
  if (sub_2225C3C70((uint64_t)a1))
  {
    uint64_t v4 = sub_2225C3C70((uint64_t)a1);
    uint64_t v5 = sub_222655B18(v4);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t result = sub_2226874F0();
      if (!result) {
        return result;
      }
      uint64_t v13 = sub_2225C3D04(v6);
      uint64_t v8 = &v13;
      uint64_t v9 = a2;
      return sub_222688268(v8, v9);
    }
  }
  if (sub_2225D3DB0(&v14))
  {
    uint64_t v10 = sub_2225C3C70((uint64_t)&v14);
    uint64_t v11 = sub_222655B18(v10);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t result = sub_2226874F0();
      if (!result) {
        return result;
      }
      uint64_t v9 = sub_2225C3D04(v12);
      uint64_t v8 = a1;
      return sub_222688268(v8, v9);
    }
  }
  return *a1 == v14;
}

uint64_t sub_22268832C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22265245C((unsigned char *)a1, 8);
  sub_2225D3A34((void *)v4 + 1);
  *(void *)(a1 + 16) = a2;
  return a1;
}

unsigned char *sub_222688368(unsigned char *a1, uint64_t a2, int a3)
{
  uint64_t result = sub_22265245C(a1, 7);
  *((void *)result + 1) = a2;
  *((_DWORD *)result + 4) = a3;
  return result;
}

uint64_t sub_22268839C(uint64_t result, int a2)
{
  *(_WORD *)(result + 16) = 263;
  *(_DWORD *)uint64_t result = a2;
  return result;
}

uint64_t sub_2226883AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_222612BB0();
  uint64_t result = sub_222612BF0(a1);
  if (result)
  {
    int v8 = result;
    v17[0] = sub_2226526A4();
    v17[1] = v9;
    v16[0] = sub_222652E48();
    v16[1] = v10;
    int v11 = v8 - 1;
    unsigned int v12 = sub_2226884C4(a2) & (v8 - 1);
    uint64_t v13 = v6 + 24 * v12;
    if (sub_222652E4C(a2, v13))
    {
LABEL_8:
      uint64_t result = 1;
    }
    else
    {
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_222652E4C(v13, (uint64_t)v17))
      {
        if (sub_222652E4C(v13, (uint64_t)v16) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        uint64_t v13 = v6 + 24 * v12;
        ++v15;
        if (sub_222652E4C(a2, v13)) {
          goto LABEL_8;
        }
      }
      uint64_t result = 0;
      if (v14) {
        uint64_t v13 = v14;
      }
    }
    *a3 = v13;
  }
  else
  {
    *a3 = 0;
  }
  return result;
}

uint64_t sub_2226884C8(void *a1)
{
  int v1 = a1 + 1;
  uint64_t v2 = sub_2225D3364(*a1);
  unsigned int v3 = sub_2225F556C(v1);

  return sub_2226126F4(v2, v3);
}

uint64_t sub_222688514(int *a1, uint64_t a2)
{
  uint64_t v6 = 0;
  if (sub_222688570((uint64_t)a1, a2, &v6)) {
    return v6;
  }
  uint64_t v5 = 0;
  return sub_2226885AC(a1, a2, &v5, v6);
}

uint64_t sub_222688570(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_2226883AC(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_2226885AC(int *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = sub_2226885F8(a1, a2, a4);
  sub_2225E5B38(v6, a2);
  *(void *)(v6 + 16) = *a3;
  return v6;
}

uint64_t sub_2226885F8(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = a3;
  int v5 = sub_222613080(a1);
  uint64_t v6 = sub_222612BF0(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2226886E4(a1, (2 * v6));
    sub_222688570((uint64_t)a1, a2, &v12);
    sub_222612BF0(a1);
  }
  else if (v6 + ~v5 - sub_222613088(a1) <= v6 >> 3)
  {
    sub_2226886E4(a1, v7);
    sub_222688570((uint64_t)a1, a2, &v12);
  }
  int v8 = sub_22261308C(a1);
  v11[0] = sub_2226526A4(v8);
  v11[1] = v9;
  if (!sub_222652E4C(v12, (uint64_t)v11)) {
    sub_2226130C8((uint64_t)a1);
  }
  return v12;
}

void sub_2226886E8(unsigned int *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  unsigned int v3 = (int *)a1;
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (a2 >= 0x10)
  {
    v18[0] = 64;
    LODWORD(v17[0]) = sub_2225C3A4C(a2 - 1);
    a1 = (unsigned int *)sub_2225C7858(v18, v17);
    unsigned int v2 = *a1;
  }
  if (*(unsigned char *)v3)
  {
    if (v2 >= 0x10)
    {
      v17[0] = sub_2226526A4(a1);
      v17[1] = v7;
      v16[0] = sub_222652E48();
      v16[1] = v8;
      uint64_t v9 = sub_222612BB0(v3);
      uint64_t v10 = 0;
      int v11 = v18;
      do
      {
        if (!sub_222652E4C(v9 + v10, (uint64_t)v17) && !sub_222652E4C(v9 + v10, (uint64_t)v16))
        {
          *(_OWORD *)int v11 = *(_OWORD *)(v9 + v10);
          *((void *)v11 + 2) = *(void *)(v9 + v10 + 16);
          v11 += 6;
        }
        v10 += 24;
      }
      while (v10 != 384);
      *v3 &= ~1u;
      uint64_t v12 = (void *)sub_222612AC0((uint64_t)v3);
      *uint64_t v12 = sub_222652604((uint64_t)v3, v2);
      v12[1] = v13;
      sub_2226888A4(v3, (uint64_t)v18, (uint64_t)v11);
    }
  }
  else
  {
    uint64_t v4 = sub_222612AC0((uint64_t)v3);
    int v5 = *(void **)v4;
    unsigned int v6 = *(_DWORD *)(v4 + 8);
    sub_222612AC0((uint64_t)v3);
    if (v2 > 0x10)
    {
      uint64_t v14 = (void *)sub_222612AC0((uint64_t)v3);
      void *v14 = sub_222652604((uint64_t)v3, v2);
      v14[1] = v15;
    }
    else
    {
      *v3 |= 1u;
    }
    sub_2226888A4(v3, (uint64_t)v5, (uint64_t)v5 + 24 * v6);
    j__free(v5);
  }
}

int *sub_2226888A4(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222652638(a1);
  v12[0] = sub_2226526A4(v6);
  v12[1] = v7;
  uint64_t result = (int *)sub_222652E48();
  v11[0] = result;
  v11[1] = v9;
  while (a2 != a3)
  {
    uint64_t result = (int *)sub_222652E4C(a2, (uint64_t)v12);
    if ((result & 1) == 0)
    {
      uint64_t result = (int *)sub_222652E4C(a2, (uint64_t)v11);
      if ((result & 1) == 0)
      {
        uint64_t v10 = 0;
        sub_222688570((uint64_t)a1, a2, &v10);
        sub_2225E5B38(v10, a2);
        *(void *)(v10 + 16) = *(void *)(a2 + 16);
        uint64_t result = sub_22261308C(a1);
      }
    }
    a2 += 24;
  }
  return result;
}

void *sub_222688954(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  char v4 = a4;
  *(void *)a1 = a2;
  *(_WORD *)(a1 + 10) = a4;
  if (a2)
  {
    BOOL v7 = sub_222688A28(a2);
    long long v8 = 0uLL;
    if (!v7) {
      long long v8 = *(_OWORD *)(a2 + 24);
    }
    *(_OWORD *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8) + 1;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  }
  else
  {
    *(_WORD *)(a1 + 8) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 16) = 0;
    *(_WORD *)(a1 + 12) = *(_WORD *)(a1 + 12) & 0xF000 | 0x558;
  }
  if (sub_222688A28(a1))
  {
    *(void *)(a1 + 16) = a1;
    if ((v4 & 2) == 0)
    {
LABEL_8:
      if ((v4 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_8;
  }
  *(void *)(a1 + 24) = a1;
  if ((v4 & 4) != 0) {
LABEL_9:
  }
    *(void *)(a1 + 32) = a1;
LABEL_10:

  return sub_222608F18(a1 + 40);
}

BOOL sub_222688A28(uint64_t a1)
{
  return sub_222688A48(a1) == 9;
}

uint64_t sub_222688A48(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 10);
}

uint64_t sub_222688A50(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  sub_222688A9C(a1 + 8, a2, 256);
  *(unsigned char *)(a1 + 16) = sub_222624788(*(void *)(a2 + 152));
  sub_22263BB84(*(void *)(a2 + 152), 1);
  return a1;
}

char *sub_222688AA4(char *a1)
{
  return a1;
}

uint64_t sub_222688AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  sub_2225E0EC4((void *)(a1 + 16));
  *(void *)(a1 + 152) = a4;
  *(void *)(a1 + 160) = a5;
  *(unsigned char *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 220) = 0;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(unsigned char *)(a1 + 216) = 0;
  sub_22265B918(a1 + 352);
  sub_222688B74((_WORD *)(a1 + 440), 1, 6);
  sub_2225F3278((_DWORD *)(a1 + 444));
  sub_2225F3278((_DWORD *)(a1 + 448));
  sub_222608F94(a1 + 456, 0);
  return a1;
}

_WORD *sub_222688B74(_WORD *a1, char a2, char a3)
{
  uint64_t v6 = sub_222673134(a1);
  sub_222689658(v6, a2);
  sub_222689670(a1, a3);
  return a1;
}

uint64_t sub_222688BC4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 220);
  if (v2)
  {
    unsigned int v3 = (void *)(a1 + 224);
    do
    {
      if (*v3)
      {
        char v4 = (void *)sub_222688C30();
        j__free(v4);
      }
      ++v3;
      --v2;
    }
    while (v2);
  }
  sub_222688C34(a1 + 456);
  sub_2225C56C4(a1 + 352);
  sub_2225E1434(a1 + 16);
  return a1;
}

uint64_t sub_222688C3C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  return sub_2225F52C4(*(void *)(a1 + 152), a2, a3, a4);
}

void *sub_222688C48(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a1 + 220);
  if (v4)
  {
    unsigned int v5 = v4 - 1;
    *(_DWORD *)(a1 + 220) = v5;
    uint64_t v6 = *(void *)(a1 + 8 * v5 + 224);
    uint64_t result = sub_222688954(v6, *(void *)(a1 + 184), *(void *)(a1 + 8), a2);
    *(void *)(a1 + 184) = v6;
  }
  else
  {
    uint64_t v8 = sub_2225C26A4(328);
    uint64_t result = (void *)sub_222688CC4(v8, *(void *)(a1 + 184), *(void *)(a1 + 8), a2);
    *(void *)(a1 + 184) = result;
  }
  return result;
}

void sub_222688CC8(uint64_t a1)
{
  uint64_t v2 = sub_2225F3D8C(*(void *)(a1 + 184));
  v15[0] = (void *)sub_2226403CC(v2);
  v15[1] = v3;
  v14[0] = sub_222640400(v2);
  v14[1] = v4;
  while (sub_2225DE624(v15, v14))
  {
    uint64_t v6 = sub_222688DD4(v15, v5);
    uint64_t v7 = sub_222688DE0(v6);
    if (v7)
    {
      uint64_t v8 = sub_2226906F8(a1, v7);
      if (v8)
      {
        uint64_t v9 = v8;
        if (sub_2225C3D04(v8))
        {
          sub_222688E1C(v13, v9);
          sub_222688E20(v13);
          sub_222688E68(v13);
        }
      }
    }
    else
    {
      sub_222690894(a1, v6);
    }
    sub_222640444(v15);
  }
  uint64_t v10 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = sub_2225C3C70(v10);
  uint64_t v11 = *(unsigned int *)(a1 + 220);
  if (v11 == 16)
  {
    if (v10)
    {
      uint64_t v12 = (void *)sub_222688C30(v10);
      j__free(v12);
    }
  }
  else
  {
    *(_DWORD *)(a1 + 220) = v11 + 1;
    *(void *)(a1 + 8 * v11 + 224) = v10;
  }
}

uint64_t sub_222688DD4(void **a1, uint64_t a2)
{
  return nullsub_1(**a1, a2);
}

uint64_t sub_222688DE0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222658084(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222688E20(uint64_t *a1)
{
  sub_2226897F0(a1 + 1);
  a1[1] = sub_222689778(0);

  return sub_2226897F4(a1);
}

uint64_t sub_222688E6C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((sub_222655E50(a1) & 1) == 0)
  {
    do
      uint64_t v1 = sub_2225E8DD0(v1);
    while (!sub_222655E50(v1));
  }
  return v1;
}

uint64_t sub_222688EAC(uint64_t result)
{
  *(unsigned char *)(result + 168) = 1;
  return result;
}

uint64_t sub_222688EB8(uint64_t result)
{
  *(unsigned char *)(result + 168) = 0;
  return result;
}

void *sub_222688EC0(uint64_t *a1)
{
  sub_222688C48((uint64_t)a1, 8);
  a1[22] = a1[23];
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_2225E8DD0(a1[20]);
  uint64_t result = sub_222651180(v2, v3, v4);
  a1[25] = (uint64_t)result;
  return result;
}

void sub_222688F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2;
  v32[0] = a3;
  v32[1] = a4;
  uint64_t v31 = a2;
  uint64_t v6 = sub_2225C3C70((uint64_t)v32) - 8;
  do
  {
    uint64_t v7 = *(void *)(v6 + 8);
    v6 += 8;
  }
  while (v7 != v4);
  uint64_t v8 = sub_2225DC1A0(v32);
  sub_222672FC0(v30, v6, v8);
  sub_2225CCD48(&v29, "\n    ");
  uint64_t v9 = (uint64_t *)sub_2225C3C70((uint64_t)v30);
  uint64_t v10 = sub_2225DC1A0(v30);
  if (v9 != (uint64_t *)v10)
  {
    uint64_t v11 = (uint64_t *)v10;
    do
    {
      uint64_t v12 = *v9++;
      uint64_t v24 = sub_222654540(v12);
      uint64_t v25 = v13;
      sub_22268914C((uint64_t)"'", (uint64_t)&v24, (uint64_t)v26);
      sub_2225CBDE8((uint64_t)v23, "' -> ");
      sub_2225CF9F4(v27, v26, v23);
      sub_2225DBA20((uint64_t)v27, &v28);
      sub_2225CCBF4(&v29, (uint64_t)&v28);
      std::string::~string(&v28);
    }
    while (v9 != v11);
  }
  uint64_t v24 = sub_222654540(v4);
  uint64_t v25 = v14;
  sub_22268914C((uint64_t)"'", (uint64_t)&v24, (uint64_t)v26);
  sub_2225CBDE8((uint64_t)v23, "'");
  sub_2225CF9F4(v27, v26, v23);
  sub_2225DBA20((uint64_t)v27, &v28);
  sub_2225CCBF4(&v29, (uint64_t)&v28);
  std::string::~string(&v28);
  if ((unint64_t)sub_2225C3D04((uint64_t)v30) > 1) {
    uint64_t v4 = *(void *)sub_2225C6BC0(v30, 1);
  }
  uint64_t v15 = sub_22268915C(a1 + 456, &v31);
  char v16 = (uint64_t *)sub_222689178((unsigned __int8 *)v15);
  uint64_t v17 = sub_2226891D8((unsigned __int8 *)v15);
  if (v16 == (uint64_t *)v17)
  {
LABEL_12:
    uint64_t v19 = 0;
  }
  else
  {
    char v18 = (uint64_t *)v17;
    while (1)
    {
      uint64_t v19 = (unsigned int *)*v16;
      uint64_t v20 = sub_2225C5B40(*v16);
      if (sub_222688E6C(v20) == v4) {
        break;
      }
      if (++v16 == v18) {
        goto LABEL_12;
      }
    }
  }
  unsigned int v21 = sub_2225C3B40(v19);
  sub_222688C3C(a1, v21, 2781, (uint64_t)&v28);
  sub_2225CCBF8(v22, &v29);
  sub_2225F3774((uint64_t *)&v28, v22[0], v22[1]);
  sub_2225F37F0(&v28);
  std::string::~string(&v29);
}

uint64_t sub_22268914C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226898E8(a3, a1, a2);
}

uint64_t *sub_22268915C(uint64_t a1, uint64_t *a2)
{
  return sub_22268993C(a1, a2) + 1;
}

uint64_t sub_222689178(unsigned __int8 *a1)
{
  if (sub_222609868(a1))
  {
    return j_nullsub_1(a1, v2);
  }
  else
  {
    uint64_t v4 = sub_222657F58(a1, v2);
    return sub_2225C3C70(v4);
  }
}

uint64_t sub_2226891D8(unsigned __int8 *a1)
{
  if (sub_222609868(a1))
  {
    uint64_t v3 = sub_222689178(a1);
    return v3 + 8 * !sub_222689D88(a1, v4);
  }
  else
  {
    uint64_t v6 = sub_222657F58(a1, v2);
    return sub_2225C3D04(v6);
  }
}

void sub_222689240(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)(a1 + 208);
  if (*(void *)(a1 + 208))
  {
    sub_2226893FC(v16);
    sub_22265B918(v15);
    sub_2225CC7B8((uint64_t)v15, v2);
    while (sub_2225CC780((uint64_t)v15))
    {
      uint64_t v14 = 0;
      uint64_t v14 = sub_22263BB8C((uint64_t)v15);
      if (v14)
      {
        if (sub_222689444((uint64_t)v16, &v14))
        {
          uint64_t v3 = v14;
          uint64_t v4 = sub_222689464((uint64_t)v16);
          uint64_t v5 = sub_22268946C((uint64_t)v16);
          sub_222672FC0(v13, v4, v5);
          sub_222688F18(a1, v3, v13[0], v13[1]);
        }
        else if (sub_2226650C0(a1 + 456, &v14))
        {
          sub_222689474((uint64_t)v16, &v14);
          uint64_t v12 = 0;
          sub_2225CC7B8((uint64_t)v15, &v12);
          uint64_t v6 = sub_22268915C(a1 + 456, &v14);
          uint64_t v7 = (uint64_t *)sub_222689178((unsigned __int8 *)v6);
          uint64_t v8 = sub_2226891D8((unsigned __int8 *)v6);
          if (v7 != (uint64_t *)v8)
          {
            uint64_t v9 = (uint64_t *)v8;
            do
            {
              uint64_t v10 = *v7++;
              uint64_t v12 = 0;
              uint64_t v11 = sub_2225C5B40(v10);
              uint64_t v12 = sub_222688E6C(v11);
              sub_2225CC7B8((uint64_t)v15, &v12);
            }
            while (v7 != v9);
          }
        }
      }
      else
      {
        sub_222689400((uint64_t)v16);
      }
    }
    sub_2225C56C4(v15);
    sub_2226894C0(v16);
  }
  sub_2226894C4(a1 + 456);
  *(void *)(a1 + 200) = 0;
  sub_222688CC8(a1);
}

uint64_t sub_222689400(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)sub_222689E24(a1);
  sub_222689DE4(a1, *v2);

  return sub_222608660(a1 + 96);
}

BOOL sub_222689444(uint64_t a1, uint64_t *a2)
{
  return sub_222689E2C(a1, *a2);
}

uint64_t sub_222689464(uint64_t a1)
{
  return sub_2225C3C70(a1 + 96);
}

uint64_t sub_22268946C(uint64_t a1)
{
  return sub_2225C3D04(a1 + 96);
}

uint64_t sub_222689474(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_222689E60(a1, *a2);
  if (v4) {
    sub_2225CC7B8(a1 + 96, a2);
  }
  return v4;
}

uint64_t sub_2226894C4(uint64_t a1)
{
  if (sub_2225F5668(a1) || (uint64_t result = sub_2225F5670(a1), result))
  {
    int v3 = sub_2225F5668(a1);
    if (sub_2225F5148(a1) <= 4 * v3 || sub_2225F5148(a1) < 0x41)
    {
      uint64_t v4 = sub_2225F9A1C();
      uint64_t v5 = sub_2225F9EB8(v4);
      uint64_t v6 = (uint64_t *)sub_2225CC180(a1);
      uint64_t v7 = sub_222608BD4(a1);
      if (v6 != (uint64_t *)v7)
      {
        uint64_t v8 = (uint64_t *)v7;
        do
        {
          if (!sub_2225D085C(*v6, v4))
          {
            if (!sub_2225D085C(*v6, v5))
            {
              sub_2226897F0(v6 + 1);
              sub_222611614(a1);
            }
            *uint64_t v6 = v4;
          }
          v6 += 2;
        }
        while (v6 != v8);
      }
      return sub_2225F50F4(a1, 0);
    }
    else
    {
      return sub_222689EA0(a1);
    }
  }
  return result;
}

uint64_t *sub_2226895F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  sub_222688C48(a2, a3);
  return a1;
}

uint64_t *sub_22268962C(uint64_t *a1)
{
  return a1;
}

_WORD *sub_222689658(_WORD *result, char a2)
{
  *uint64_t result = *result & 0xF1FF | ((a2 & 7) << 9);
  return result;
}

_WORD *sub_222689670(_WORD *result, char a2)
{
  *uint64_t result = *result & 0x8FFF | ((a2 & 7) << 12);
  return result;
}

uint64_t sub_222689688(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226896B4(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  *(_WORD *)(a1 + 12) &= 0xF000u;
  sub_222648738(a1 + 40);
  sub_222688954(a1, a2, a3, a4);
  return a1;
}

uint64_t *sub_222689714(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  sub_222686B8C(a1 + 1);
  a1[1] = sub_22268974C(a1);
  return a1;
}

uint64_t sub_22268974C(uint64_t *a1)
{
  uint64_t v1 = sub_2225C3D04(*a1);

  return sub_222689778(v1);
}

uint64_t sub_222689778(uint64_t a1)
{
  sub_222686B94(v3);
  return sub_2226897B0(a1);
}

uint64_t sub_2226897B0(uint64_t a1)
{
  sub_2225D3A34(&v3);
  sub_2225C6954(&v3, a1);
  return v3;
}

uint64_t sub_2226897F4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = sub_2225CC180((uint64_t)(a1 + 1));

  return sub_2225C5B6C(v1, v2);
}

unsigned __int8 *sub_222689830(unsigned __int8 *a1)
{
  uint64_t v2 = sub_222689860(a1);
  if (v2) {
    j_nullsub_1(v2, v3);
  }
  return a1;
}

uint64_t sub_222689860(unsigned __int8 *a1)
{
  if (!sub_222608DE8(a1)) {
    return 0;
  }

  return sub_222657F58(a1, v2);
}

uint64_t sub_2226898AC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_222689778(0);
  sub_2226897F0(a1 + 8);
  return a1;
}

uint64_t sub_2226898EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(_WORD *)(result + 16) = 1283;
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  return result;
}

uint64_t sub_222689900(uint64_t a1)
{
  sub_2225C56C4(a1 + 96);

  return sub_222676A80(a1);
}

uint64_t *sub_22268993C(uint64_t a1, uint64_t *a2)
{
  uint64_t v7 = 0;
  if (sub_22260FA40(a1, a2, &v7)) {
    return v7;
  }
  sub_222686B8C(&v6);
  uint64_t v4 = sub_2226899AC(a1, a2, (uint64_t)&v6, v7);
  sub_2226897F0(&v6);
  return v4;
}

uint64_t *sub_2226899AC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_2226899F8(a1, a2, a4);
  *uint64_t v6 = *a2;
  sub_222689AE4(v6 + 1, a3);
  return v6;
}

uint64_t *sub_2226899F8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v10 = a3;
  int v5 = sub_2225F5668();
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_222689AE8(a1, (2 * v6));
    sub_22260FA40(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_222689AE8(a1, v7);
    sub_22260FA40(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  uint64_t v8 = sub_2225F9A1C();
  if (!sub_2225D085C(*v10, v8)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_222689AEC(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = *(uint64_t **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222609018(a1, *v5);
  if (v4)
  {
    sub_222689B78(a1, v4, &v4[2 * v3]);
    j__free(v4);
  }
  else
  {
    sub_222609064(a1);
  }
}

uint64_t sub_222689B78(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_222609064(a1);
  uint64_t v6 = sub_2225F9A1C();
  uint64_t result = sub_2225F9EB8(v6);
  if (a2 != a3)
  {
    uint64_t v8 = result;
    do
    {
      uint64_t result = sub_2225D085C(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          sub_22260FA40(a1, a2, &v9);
          *uint64_t v9 = *a2;
          sub_222689AE4(v9 + 1, a2 + 1);
          sub_2225F5674(a1);
          uint64_t result = sub_2226897F0(a2 + 1);
        }
      }
      a2 += 2;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t *sub_222689C44(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  uint64_t v4 = 0;
  sub_222689C8C(a2, &v4);
  return a1;
}

uint64_t *sub_222689C8C(uint64_t *a1, void *a2)
{
  uint64_t v3 = nullsub_1(*a2, a2);
  sub_222631E58(a1, v3);
  return a1;
}

void **sub_222689CC4(void **a1)
{
  return a1;
}

uint64_t sub_222689CF4(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    uint64_t v3 = sub_2225F9A1C();
    uint64_t v4 = sub_2225F9EB8(v3);
    int v5 = (uint64_t *)sub_2225CC180(a1);
    uint64_t result = sub_222608BD4(a1);
    if (v5 != (uint64_t *)result)
    {
      uint64_t v6 = (uint64_t *)result;
      do
      {
        uint64_t result = sub_2225D085C(*v5, v3);
        if ((result & 1) == 0)
        {
          uint64_t result = sub_2225D085C(*v5, v4);
          if ((result & 1) == 0) {
            uint64_t result = sub_2226897F0(v5 + 1);
          }
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
  }
  return result;
}

BOOL sub_222689D88(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_222608790(a1, a2);
  return nullsub_1(v2, v3) == 0;
}

uint64_t sub_222689DB0(uint64_t a1)
{
  uint64_t v2 = sub_222689DE0(a1);
  sub_22265B918(v2 + 96);
  return a1;
}

uint64_t sub_222689DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_2225D329C(a1, v3);
}

uint64_t sub_222689E24(uint64_t a1)
{
  return sub_222608644(a1 + 96);
}

BOOL sub_222689E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);
  return sub_2226582C4(a1, v3);
}

uint64_t sub_222689E60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_2225D2FCC(a1, v3);
}

uint64_t sub_222689EA4(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 8);
  sub_222689CF4(a1);
  if (v2)
  {
    int v5 = 64;
    int v4 = 1 << (sub_2225D2FA4(v2) + 1);
    unsigned int v2 = *(_DWORD *)sub_2225F753C(&v5, &v4);
  }
  if (v2 == *(_DWORD *)(a1 + 16)) {
    return sub_222609064(a1);
  }
  j__free(*(void **)a1);
  return sub_222608FCC(a1, v2);
}

uint64_t sub_222689F34(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5)
{
  if (a5) {
    int v8 = 4743;
  }
  else {
    int v8 = 4731;
  }
  sub_222688C3C(a1, a3, v8, (uint64_t)v11);
  sub_222635F48(v11, a2);
  sub_2225F37F0(v11);
  sub_222688C3C(a1, a4, 55, (uint64_t)v10);
  return sub_2225F37F0(v10);
}

uint64_t sub_222689FBC(uint64_t *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_222690928(a1, a2);
  if (v8)
  {
    if (sub_22268A05C(a1[23], v8))
    {
      unsigned int v9 = sub_222613380(v8);
      int v10 = sub_22265A600(a4);
      sub_222689F34((uint64_t)a1, a2, a3, v9, v10);
      sub_222690894((uint64_t)a1, v8);
    }
    else
    {
      return 0;
    }
  }
  return v8;
}

BOOL sub_22268A05C(uint64_t a1, uint64_t a2)
{
  return sub_222689E2C(a1 + 40, a2);
}

uint64_t sub_22268A080(uint64_t *a1, unsigned int a2, unsigned int a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  if (a4)
  {
    sub_22268A1F8(v26);
    sub_222689FBC(a1, a4, a3, (uint64_t)v26);
    sub_2226529EC(v26);
  }
  uint64_t v16 = a1[23];
  if (v16 == a1[22])
  {
LABEL_7:
    uint64_t v17 = *a1;
    uint64_t v18 = sub_222690AA0(a4);
    uint64_t v21 = sub_2226727A4(v17, a2, a3, v18, v19, a5, a6, v20, a7, a8);
    sub_22268A23C((uint64_t)a1, v21);
  }
  else
  {
    while (1)
    {
      if (sub_22268A1FC(v16))
      {
        sub_222688C3C((uint64_t)a1, a2, 2461, (uint64_t)v25);
        uint64_t v22 = v25;
        goto LABEL_10;
      }
      if (sub_22268A21C(v16)) {
        break;
      }
      uint64_t v16 = sub_2225C3C70(v16);
      if (v16 == a1[22]) {
        goto LABEL_7;
      }
    }
    sub_222688C3C((uint64_t)a1, a2, 2375, (uint64_t)v24);
    uint64_t v22 = v24;
LABEL_10:
    sub_2225F37F0(v22);
    return 0;
  }
  return v21;
}

BOOL sub_22268A1FC(uint64_t a1)
{
  return sub_222688A48(a1) == 24;
}

BOOL sub_22268A21C(uint64_t a1)
{
  return sub_222688A48(a1) == 136;
}

uint64_t sub_22268A23C(uint64_t a1, uint64_t a2)
{
  return sub_2226904C4(a1, a2, *(void *)(a1 + 184));
}

uint64_t sub_22268A244(uint64_t *a1, unsigned int *a2)
{
  int v4 = sub_2225C3B40(a2);
  uint64_t v5 = sub_22268A2D4((uint64_t)a2);
  uint64_t v7 = sub_222672A04(*a1, v4, v5, v6);
  if (sub_22268A2E0((uint64_t)a2))
  {
    uint64_t v8 = (char *)sub_222608330((uint64_t)a2);
    sub_2225C3D00((int)v10, v8);
    sub_22268A2F0(v7, v10[0], v10[1]);
  }
  return v7;
}

uint64_t sub_22268A2D4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

BOOL sub_22268A2E0(uint64_t a1)
{
  return *(void *)(a1 + 24) != 0;
}

uint64_t sub_22268A2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  uint64_t result = sub_2225C3C70((uint64_t)v5);
  *(void *)(a1 + 32) = result;
  return result;
}

unsigned int *sub_22268A328(uint64_t *a1, uint64_t a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v4 = (unsigned int *)sub_2225C3C70(a2);
  uint64_t v5 = sub_2225C3D04(a2);
  unsigned int v6 = sub_2225F514C(a2);
  uint64_t v28 = sub_222693E64(a1, a2);
  if (sub_2225D3DB0(&v28))
  {
    uint64_t v7 = sub_2225C3C70((uint64_t)&v28);
    if (sub_222655E28(v7))
    {
      sub_222688C3C((uint64_t)a1, v6, 3140, (uint64_t)v27);
      sub_2225F37F0(v27);
    }
  }
  char v8 = sub_2226943F4((uint64_t)a1, v4, v28);
  uint64_t v9 = *a1;
  uint64_t v24 = v5;
  uint64_t v10 = sub_222690AA0(v5);
  uint64_t v12 = v11;
  uint64_t v13 = v28;
  int v14 = sub_2225C3B40(v4);
  unsigned int v15 = v6;
  uint64_t v16 = (unsigned int *)sub_2226726FC(v9, v6, v10, v12, v13, v14, v8);
  if (sub_22268A59C((uint64_t)v4)) {
    sub_22268A5B4(v16);
  }
  char v17 = sub_22268A5D4((uint64_t)v4);
  sub_22268A5C4(v16, v17);
  if (sub_22268A5E0((uint64_t)v4) == 2) {
    sub_22268A5EC(v16);
  }
  uint64_t v18 = (_DWORD *)sub_2225F315C(a2);
  if (sub_22268A5FC(v18)) {
    sub_22268A61C(v16);
  }
  if (v24)
  {
    sub_22268A1F8(v29);
    uint64_t v19 = sub_222689FBC(a1, v24, v15, (uint64_t)v29);
    sub_2226529EC(v29);
    if (!v19) {
      sub_22268A23C((uint64_t)a1, (uint64_t)v16);
    }
  }
  if (sub_222655EC8(v16) == 2 || sub_222655EC8(v16) == 3)
  {
    if (sub_222655E50((uint64_t)v16))
    {
      unsigned int v20 = sub_2225C3B40(v4);
      sub_222688C3C((uint64_t)a1, v20, 2728, (uint64_t)v26);
      sub_2225F37F0(v26);
    }
    if (sub_22268A62C(v28))
    {
      unsigned int v21 = sub_222613380((uint64_t)v16);
      sub_222688C3C((uint64_t)a1, v21, 2832, (uint64_t)v25);
      sub_2225F37F0(v25);
    }
  }
  char v22 = sub_22268A6A4((uint64_t)v4);
  sub_22268A694(v16, v22);
  return v16;
}

BOOL sub_22268A59C(uint64_t a1)
{
  return (*(_WORD *)(a1 + 56) & 0x3000) != 0;
}

_DWORD *sub_22268A5B4(_DWORD *result)
{
  *result |= 0x10000u;
  return result;
}

unsigned int *sub_22268A5C4(unsigned int *result, char a2)
{
  *uint64_t result = *result & 0xFFFFE7FF | ((a2 & 3) << 11);
  return result;
}

uint64_t sub_22268A5D4(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 58) >> 1) & 3;
}

uint64_t sub_22268A5E0(uint64_t a1)
{
  return *(_WORD *)(a1 + 57) & 0xF;
}

_DWORD *sub_22268A5EC(_DWORD *result)
{
  *result |= 0x2000u;
  return result;
}

BOOL sub_22268A5FC(_DWORD *a1)
{
  return sub_22268CD78(a1) != 0;
}

_DWORD *sub_22268A61C(_DWORD *result)
{
  *result |= 0x400u;
  return result;
}

uint64_t sub_22268A62C(uint64_t a1)
{
  uint64_t v8 = a1;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v8);
  if (sub_22268B60C(v1)) {
    return 1;
  }
  uint64_t v3 = sub_2225C3C70((uint64_t)&v8);
  uint64_t result = sub_22268CD84(v3);
  if (result)
  {
    uint64_t v4 = sub_2225C3C70((uint64_t)&v8);
    uint64_t v5 = sub_22265E3C0(v4);
    uint64_t v7 = sub_2225C3D04(v5);
    uint64_t v6 = sub_2225C3C70((uint64_t)&v7);
    return sub_22268B60C(v6);
  }
  return result;
}

unsigned int *sub_22268A694(unsigned int *result, char a2)
{
  *uint64_t result = *result & 0xFFF9FFFF | ((a2 & 3) << 17);
  return result;
}

uint64_t sub_22268A6A4(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 58) >> 3) & 3;
}

_WORD *sub_22268A6B0(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  sub_22268A990(a2);
  sub_22268A59C(a2);
  sub_22268A9A8(a2);
  sub_22268A9C0(a2);
  sub_222656008(a2);
  sub_22268A9D8(a2);
  sub_22268A9E0(a2);
  unsigned int v8 = a4;
  if (!sub_22268AA00((uint64_t)a1))
  {
    sub_222688C3C((uint64_t)a1, a4, 2351, (uint64_t)v30);
    sub_2225F37F0(v30);
  }
  uint64_t v9 = (_WORD *)sub_222672FC4(*a1, a4);
  sub_22268AA10(&v29, 0, 1, 0);
  v28[0] = sub_222691890(a1, a3, v8, &v29);
  v28[1] = v10;
  switch(sub_2225C3B40((unsigned int *)v28))
  {
    case 0u:
      sub_222688C3C((uint64_t)a1, v8, 3109, (uint64_t)v26);
      sub_222635F48(v26, a3);
      uint64_t v11 = v26;
      goto LABEL_11;
    case 1u:
    case 2u:
    case 4u:
      sub_222688C3C((uint64_t)a1, v8, 2353, (uint64_t)v27);
      uint64_t v11 = (uint64_t *)v27;
      goto LABEL_11;
    case 3u:
      uint64_t v12 = sub_2225C3D04((uint64_t)v28);
      uint64_t v13 = (unsigned __int16 *)sub_22268AA14(v12);
      if ((sub_2226551F4(v13) & 1) != 0 || sub_222608330((uint64_t)v13))
      {
        sub_222688C3C((uint64_t)a1, v8, 2354, (uint64_t)v25);
        uint64_t v11 = (uint64_t *)v25;
        goto LABEL_11;
      }
      int v19 = sub_2226551A0(v13);
      if (!sub_22268AA50((uint64_t)a1, v19))
      {
        sub_222688C3C((uint64_t)a1, v8, 2352, (uint64_t)v24);
        uint64_t v11 = (uint64_t *)v24;
        goto LABEL_11;
      }
      if (sub_22265517C((uint64_t)v13))
      {
        sub_222688C3C((uint64_t)a1, v8, 4099, (uint64_t)v23);
        sub_2225F37F0(v23);
      }
      else
      {
        char v20 = sub_22268AA70(a2);
        sub_22268AA60((unsigned int *)v13, v20);
        sub_22268AA7C(v13);
      }
      sub_22268AA8C(v9, (uint64_t)v13);
      break;
    case 5u:
      uint64_t v14 = *a1;
      unsigned int v15 = sub_22268AA94((uint64_t)v28);
      uint64_t v16 = sub_22265D828(v14, v15);
      char v17 = sub_22265DEB4();
      if (sub_22265DE78(v16, a1[25]))
      {
        sub_222688C3C((uint64_t)a1, v8, 2354, (uint64_t)v22);
        uint64_t v11 = (uint64_t *)v22;
LABEL_11:
        sub_2225F37F0(v11);
        uint64_t v9 = 0;
      }
      else
      {
        if (sub_22265DEB8(v16, a1[25]))
        {
          sub_222688C3C((uint64_t)a1, v8, 4099, (uint64_t)v21);
          sub_2225F37F0(v21);
        }
        sub_22265DF38(v16, a1[25]);
        sub_22268AA9C(v9, v17);
      }
      break;
    default:
      return v9;
  }
  return v9;
}

BOOL sub_22268A990(uint64_t a1)
{
  return (*(_WORD *)(a1 + 56) & 0xF00) != 0;
}

BOOL sub_22268A9A8(uint64_t a1)
{
  return (*(_WORD *)(a1 + 56) & 0xC000) != 0;
}

BOOL sub_22268A9C0(uint64_t a1)
{
  return ((*(unsigned __int16 *)(a1 + 56) | (*(unsigned __int8 *)(a1 + 58) << 16)) & 0x60000) != 0;
}

BOOL sub_22268A9D8(uint64_t a1)
{
  return sub_22268A5FC((_DWORD *)(a1 + 16));
}

BOOL sub_22268A9E0(uint64_t a1)
{
  return !sub_2225CF1E0(a1 + 40);
}

BOOL sub_22268AA00(uint64_t a1)
{
  return *(void *)(a1 + 176) == *(void *)(a1 + 184);
}

uint64_t sub_22268AA14(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226583D0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

BOOL sub_22268AA50(uint64_t a1, int a2)
{
  return (a2 & 0xFFFFFFFD) == 4;
}

unsigned int *sub_22268AA60(unsigned int *result, char a2)
{
  *uint64_t result = *result & 0xFFFEFFFF | ((a2 & 1) << 16);
  return result;
}

uint64_t sub_22268AA70(uint64_t a1)
{
  return *(unsigned char *)(a1 + 58) & 1;
}

_DWORD *sub_22268AA7C(_DWORD *result)
{
  *result |= 0x20000u;
  return result;
}

_WORD *sub_22268AA8C(_WORD *result, uint64_t a2)
{
  *((void *)result + 2) = a2;
  return sub_222672624(result);
}

uint64_t sub_22268AA94(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 8);
}

_WORD *sub_22268AA9C(_WORD *result, char a2)
{
  *uint64_t result = *result & 0x83FF | ((a2 & 0x1F) << 10);
  return result;
}

uint64_t sub_22268AAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225C3D00((int)v17, "layout qualifier");
  unsigned int v6 = sub_2225F56EC(a3);
  uint64_t result = sub_222690424(a1, 1u, v17[0], v17[1], v6);
  if (result)
  {
    if (!sub_22268A21C(*(void *)(a1 + 184)) && sub_22268A5E0(a3) == 7)
    {
      unsigned int v8 = sub_2225F56EC(a3);
      sub_222688C3C(a1, v8, 2378, (uint64_t)v16);
      uint64_t v9 = v16;
LABEL_8:
      sub_2225F37F0(v9);
      return 0;
    }
    sub_222673134(&v15);
    sub_2225F3278(&v14);
    sub_2225F3278(&v13);
    uint64_t result = sub_222695A64(a1, a3, (unsigned __int16 *)&v15, &v14, &v13);
    if (!result) {
      return result;
    }
    if (sub_222655200((unsigned __int16 *)&v15))
    {
      sub_222688C3C(a1, v14, 2377, (uint64_t)v12);
      uint64_t v9 = v12;
      goto LABEL_8;
    }
    sub_2226964C4(a1, v15, v14, v13);
    sub_22268AC34(a2, v15);
    if (sub_222655230((unsigned __int16 *)&v15))
    {
      v11[0] = sub_2225C5B40(a2);
      uint64_t v10 = sub_2225C3C70((uint64_t)v11);
      if ((sub_22268AC3C(v10) & 1) == 0)
      {
        sub_222688C3C(a1, v13, 4103, (uint64_t)v11);
        sub_22260A5E8(v11, (uint64_t)"matrix");
        sub_2225F37F0(v11);
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_22268AC34(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_22268AC3C(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222654F5C(&v2);
}

unsigned int *sub_22268AC64(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v75 = *MEMORY[0x263EF8340];
  unsigned int v6 = (unsigned int *)sub_2225C3C70(a2);
  uint64_t v7 = sub_2225C3D04(a2);
  unsigned int v8 = sub_2225F514C(a2);
  if (sub_22268B3CC((uint64_t)v6))
  {
    uint64_t v9 = (_DWORD **)sub_222688E1C(v73, v7);
    if (sub_22268B3E4(v9))
    {
      uint64_t v10 = sub_222688E68(v73);
    }
    else
    {
      uint64_t v12 = sub_2225F2418(v7);
      BOOL v14 = sub_22268B404(v12, v13);
      uint64_t v10 = sub_222688E68(v73);
      if (v14)
      {
        sub_222688C3C(a1, v8, 2820, (uint64_t)v73);
        sub_222635F48((uint64_t *)v73, v7);
        uint64_t v10 = sub_2225F37F0(v73);
      }
    }
    int v15 = (_DWORD **)sub_222688E1C(v10, v7);
    BOOL v16 = sub_22268B3E4(v15);
    uint64_t v17 = sub_222688E68(v73);
    if (!v16
      || (uint64_t v18 = (_DWORD **)sub_222688E1C(v17, v7),
          unsigned int v19 = sub_22268B4D4(v18),
          uint64_t v20 = sub_2225F2418(v7),
          int v22 = sub_22269035C((uint64_t *)a1, v19, v20, v21, v8),
          sub_222688E68(v73),
          v22))
    {
      uint64_t v72 = sub_222693E64((uint64_t *)a1, a2);
      if (sub_2225D3DB0(&v72))
      {
        v73[0] = (uint64_t *)a1;
        v73[1] = &v72;
        sub_22268B4F4((uint64_t)v74, a1, (uint64_t)&v72);
        BOOL v23 = (unsigned __int8 *)sub_222689FBC((uint64_t *)a1, v7, v8, (uint64_t)v74);
        sub_2226529EC(v74);
        if (sub_2225D3DB0(&v72)
          && sub_22268A62C(v72)
          && !sub_22268A21C(*(void *)(a1 + 184))
          && sub_22268A5E0((uint64_t)v6) != 7)
        {
          unsigned int v24 = sub_2225C3B40(v6);
          sub_222688C3C(a1, v24, 2831, (uint64_t)v71);
          sub_2225F37F0(v71);
        }
        uint64_t v25 = *(void *)a1;
        uint64_t v26 = sub_2225F2418(v7);
        uint64_t v28 = v27;
        uint64_t v29 = v72;
        char v30 = sub_2226943F4(a1, v6, v72);
        uint64_t v31 = sub_22268B4F8(v25, v8, v26, v28, v29, v30);
        char v32 = sub_22268A5E0((uint64_t)v6);
        sub_222673138(v31, v32);
        if (sub_22268A59C((uint64_t)v6)) {
          sub_22268B530(v31);
        }
        if (v23 && sub_22268B540(v73, v23)) {
          sub_22268B59C(v31);
        }
        if (*(unsigned char *)(a1 + 216)) {
          sub_22268AA60(v31, 1);
        }
        if (!sub_22268AA70((uint64_t)v6)) {
          goto LABEL_31;
        }
        if (!sub_22268AA00(a1))
        {
          sub_222688C3C(a1, v8, 2351, (uint64_t)v70);
          sub_2225F37F0(v70);
        }
        int v33 = sub_22268A5E0((uint64_t)v6);
        if (sub_22268AA50(a1, v33))
        {
          if (*(unsigned char *)(a1 + 216))
          {
            sub_222688C3C(a1, v8, 4099, (uint64_t)v69);
            sub_2225F37F0(v69);
          }
          char v34 = sub_22268AA70((uint64_t)v6);
          sub_22268AA60(v31, v34);
LABEL_31:
          uint64_t v35 = (_DWORD *)sub_2225F315C(a2);
          if (sub_22268A5FC(v35)) {
            sub_22268A61C(v31);
          }
          if (sub_22268B5AC((uint64_t)v6)) {
            sub_22268B5B8(v31);
          }
          if (a3) {
            sub_22268A23C(a1, (uint64_t)v31);
          }
          if (sub_22268A9E0((uint64_t)v6)) {
            sub_22268AAB4(a1, (uint64_t)v31, (uint64_t)v6);
          }
          if (sub_22268A9A8((uint64_t)v6))
          {
            sub_2225C3D00((int)v67, "interpolation qualifier");
            if (sub_222690424(a1, 2u, v67[0], v67[1], v8))
            {
              if (sub_22268AA00(a1))
              {
                switch(sub_22268A5E0((uint64_t)v6))
                {
                  case 3u:
                  case 5u:
                    break;
                  case 4u:
                  case 6u:
                    uint64_t v36 = v64;
                    uint64_t v37 = v64;
                    uint64_t v38 = a1;
                    unsigned int v39 = v8;
                    int v40 = 2307;
                    goto LABEL_51;
                  default:
                    uint64_t v36 = v65;
                    uint64_t v37 = v65;
                    uint64_t v38 = a1;
                    unsigned int v39 = v8;
                    int v40 = 2309;
                    goto LABEL_51;
                }
              }
              else
              {
                uint64_t v36 = v66;
                uint64_t v37 = v66;
                uint64_t v38 = a1;
                unsigned int v39 = v8;
                int v40 = 2308;
LABEL_51:
                sub_222688C3C(v38, v39, v40, (uint64_t)v37);
                sub_2225F37F0(v36);
              }
            }
            char v45 = sub_22268B5D8((uint64_t)v6);
            sub_22268B5C8(v31, v45);
          }
          else
          {
            int v63 = 0;
            uint64_t v41 = sub_2225C3C70((uint64_t)&v72);
            uint64_t v62 = sub_22268742C(v41);
            switch(sub_22268A5E0((uint64_t)v6))
            {
              case 3u:
                uint64_t v42 = sub_2225C3C70((uint64_t)&v72);
                if (sub_222687530(v42, &v63))
                {
                  unsigned int v43 = sub_2225C3B40(v6);
                  sub_222688C3C(a1, v43, 2305, (uint64_t)v60);
                  uint64_t v44 = (uint64_t *)v60;
                  goto LABEL_61;
                }
                break;
              case 4u:
                uint64_t v46 = sub_2225C3C70((uint64_t)&v72);
                if ((sub_22268AC3C(v46) & 1) != 0
                  || (uint64_t v47 = sub_2225C3C70((uint64_t)&v62), !sub_2226655C4(v47))
                  || (uint64_t v48 = sub_2225C3C70((uint64_t)&v62), (sub_22268B60C(v48) & 1) != 0)
                  || (uint64_t v49 = sub_2225C3C70((uint64_t)&v62), sub_22268B634(v49)))
                {
                  unsigned int v50 = sub_2225C3B40(v6);
                  sub_222688C3C(a1, v50, 2192, (uint64_t)v59);
                  uint64_t v44 = (uint64_t *)v59;
                  goto LABEL_61;
                }
                break;
              case 6u:
                sub_222688C3C(a1, v8, 1950, (uint64_t)v58);
                uint64_t v51 = sub_22260A5E8(v58, (uint64_t)"fragment");
                sub_22260A5E8(v51, (uint64_t)"out");
                uint64_t v44 = v58;
                goto LABEL_61;
              case 8u:
                uint64_t v52 = sub_2225C3C70((uint64_t)&v72);
                if (sub_22268B5E4(v52))
                {
                  unsigned int v53 = sub_2225C3B40(v6);
                  sub_222688C3C(a1, v53, 2306, (uint64_t)v61);
                  uint64_t v44 = (uint64_t *)v61;
LABEL_61:
                  sub_2225F37F0(v44);
                }
                break;
              default:
                break;
            }
          }
          unsigned int v54 = sub_22268A5E0((uint64_t)v6);
          if (sub_22268B65C(a1, v54))
          {
            uint64_t v55 = sub_2225C5B40((uint64_t)v31);
            unsigned int v56 = sub_2225C3B40(v6);
            sub_222695F00(a1, v55, v56);
          }
          if (!sub_22268AA00(a1)
            && !sub_22268A21C(*(void *)(a1 + 184))
            && (sub_22268A5E0((uint64_t)v6) | 2) != 2)
          {
            sub_222688C3C(a1, v8, 2875, (uint64_t)v57);
            sub_2225F37F0(v57);
          }
          switch(sub_2226551A0(v31))
          {
            case 3u:
            case 5u:
            case 8u:
              sub_22268B6A0(*(void *)(a1 + 200), (uint64_t)v31);
              break;
            case 4u:
            case 6u:
              sub_22268B6CC(*(void *)(a1 + 200), (uint64_t)v31);
              break;
            case 7u:
              sub_22268B674(*(void *)(a1 + 200), (uint64_t)v31);
              break;
            default:
              return v31;
          }
          return v31;
        }
        sub_222688C3C(a1, v8, 2352, (uint64_t)v68);
        sub_2225F37F0(v68);
      }
    }
    return 0;
  }

  return (unsigned int *)sub_22268A6B0((uint64_t *)a1, (uint64_t)v6, v7, v8);
}

BOOL sub_22268B3CC(uint64_t a1)
{
  return (*(_WORD *)(a1 + 56) & 0xFE) != 0;
}

BOOL sub_22268B3E4(_DWORD **a1)
{
  return sub_22268B4D4(a1) != 0;
}

BOOL sub_22268B404(uint64_t a1, uint64_t a2)
{
  v8[0] = a1;
  v8[1] = a2;
  sub_2225C3D00((int)v7, "gl_");
  if (sub_2225D0520((uint64_t)v8, v7[0], (size_t)v7[1])) {
    return 1;
  }
  sub_2225C3D00((int)v6, "GL_");
  if (sub_2225D0520((uint64_t)v8, v6[0], (size_t)v6[1])) {
    return 1;
  }
  sub_2225C3D00((int)v5, "ci_");
  if (sub_2225D0520((uint64_t)v8, v5[0], (size_t)v5[1])) {
    return 1;
  }
  sub_2225C3D00((int)v4, "CI_");
  if (sub_2225D0520((uint64_t)v8, v4[0], (size_t)v4[1])) {
    return 1;
  }
  sub_2225C3D00((int)v3, "__");
  return sub_2225D85D4(v8, v3[0], (size_t)v3[1], 0) != -1;
}

uint64_t sub_22268B4D4(_DWORD **a1)
{
  return (unsigned __int16)sub_222643C14(*a1);
}

unsigned int *sub_22268B4F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = sub_222672574(a1, a2, a3, a4, a5);
  sub_222673148(v7, a6);
  return v7;
}

_DWORD *sub_22268B530(_DWORD *result)
{
  *result |= 0x400000u;
  return result;
}

uint64_t sub_22268B540(uint64_t **a1, unsigned __int8 *a2)
{
  uint64_t result = sub_222650628((*a1)[1], 5u);
  if (result)
  {
    uint64_t v5 = sub_222659C34(a2);
    return sub_222688268(&v5, *a1[1]);
  }
  return result;
}

_DWORD *sub_22268B59C(_DWORD *result)
{
  *result |= 0x800000u;
  return result;
}

uint64_t sub_22268B5AC(uint64_t a1)
{
  return *(_WORD *)(a1 + 56) & 1;
}

_DWORD *sub_22268B5B8(_DWORD *result)
{
  *result |= 0x800u;
  return result;
}

unsigned int *sub_22268B5C8(unsigned int *result, char a2)
{
  *uint64_t result = *result & 0xFFF3FFFF | ((a2 & 3) << 18);
  return result;
}

uint64_t sub_22268B5D8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 56) >> 14;
}

uint64_t sub_22268B5E4(uint64_t a1)
{
  int v2 = 0;
  return sub_222687530(a1, &v2);
}

uint64_t sub_22268B60C(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222655B58(&v2);
}

uint64_t sub_22268B634(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222655BF4(&v2);
}

uint64_t sub_22268B65C(uint64_t a1, unsigned int a2)
{
  return (a2 < 9) & (0x128u >> a2);
}

uint64_t sub_22268B674(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22268CDE0((uint64_t *)(a1 + 48), (uint64_t)&v3);
}

uint64_t sub_22268B6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22268CDE0((uint64_t *)(a1 + 72), (uint64_t)&v3);
}

uint64_t sub_22268B6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22268CDE0((uint64_t *)(a1 + 96), (uint64_t)&v3);
}

uint64_t sub_22268B6F8(uint64_t *a1, uint64_t a2, int a3, int a4, __int16 a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  sub_2225C3D00((int)v38, "interface block");
  unsigned int v12 = sub_2225F514C(a2);
  if (!sub_222690424((uint64_t)a1, 3u, v38[0], v38[1], v12)) {
    return 0;
  }
  if (!sub_22268AA00((uint64_t)a1))
  {
    unsigned int v30 = sub_2225F514C(a2);
    sub_222688C3C((uint64_t)a1, v30, 2486, (uint64_t)v37);
    sub_2225F37F0(v37);
    return 0;
  }
  __int16 v35 = a5;
  uint64_t v13 = (uint64_t *)sub_2225C3C70((uint64_t)&v39);
  uint64_t v14 = sub_2225DC1A0(&v39);
  if (v13 == (uint64_t *)v14)
  {
LABEL_12:
    uint64_t v23 = *a1;
    unsigned int v24 = (unsigned int *)sub_2225C3C70(a2);
    int v25 = sub_2225C3B40(v24);
    int v26 = sub_2225F514C(a2);
    uint64_t v27 = sub_2225C3D04(a2);
    uint64_t v28 = sub_222690AA0(v27);
    uint64_t v16 = sub_2226728CC(v23, 3, v25, v26, v28, v29, a3, a4, v39, v40);
    sub_22268B92C(v16, v35);
  }
  else
  {
    int v15 = (uint64_t *)v14;
    while (1)
    {
      uint64_t v16 = *v13;
      if (!*v13) {
        break;
      }
      uint64_t v17 = (uint64_t *)sub_222653754(*v13);
      uint64_t v18 = sub_222653758(v16);
      if (v17 != (uint64_t *)v18)
      {
        unsigned int v19 = (uint64_t *)v18;
        do
        {
          uint64_t v20 = *v17;
          if (!sub_2226972B8((uint64_t)a1, *v17)) {
            return 0;
          }
          uint64_t v21 = sub_2226906F8((uint64_t)a1, v20);
          sub_222688E1C(v36, v21);
          if ((sub_22268B91C((uint64_t)v36, v22) & 1) == 0)
          {
            unsigned int v31 = sub_222613380(v20);
            uint64_t v32 = sub_22268B924((uint64_t)v36);
            unsigned int v33 = sub_222613380(v32);
            sub_222689F34((uint64_t)a1, v21, v31, v33, 0);
            sub_222688E68(v36);
            return 0;
          }
          sub_2226904C4((uint64_t)a1, v20, a1[22]);
          sub_222688E68(v36);
          ++v17;
        }
        while (v17 != v19);
      }
      if (++v13 == v15) {
        goto LABEL_12;
      }
    }
  }
  return v16;
}

uint64_t sub_22268B91C(uint64_t a1, uint64_t a2)
{
  return sub_22268CE3C((unsigned __int8 *)(a1 + 8), a2);
}

uint64_t sub_22268B924(uint64_t a1)
{
  return sub_22268CE94((unsigned __int8 *)(a1 + 8));
}

uint64_t sub_22268B92C(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 36) = a2;
  return result;
}

unsigned int *sub_22268B934(uint64_t *a1, uint64_t a2, int a3, int a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v40 = a6;
  uint64_t v41 = a7;
  if (!sub_22268AA00((uint64_t)a1))
  {
    unsigned int v35 = sub_2225F514C(a2);
    sub_222688C3C((uint64_t)a1, v35, 2486, (uint64_t)v39);
    sub_2225F37F0(v39);
    return 0;
  }
  uint64_t v14 = (uint64_t *)sub_2225C3C70((uint64_t)&v40);
  uint64_t v15 = sub_2225DC1A0(&v40);
  if (v14 != (uint64_t *)v15)
  {
    uint64_t v16 = (uint64_t *)v15;
    do
    {
      uint64_t v17 = *v14;
      if (!*v14) {
        return 0;
      }
      uint64_t v18 = (uint64_t *)sub_222653754(*v14);
      uint64_t v19 = sub_222653758(v17);
      if (v18 != (uint64_t *)v19)
      {
        while ((sub_2226972B8((uint64_t)a1, *v18) & 1) != 0)
        {
          if (++v18 == (uint64_t *)v19) {
            goto LABEL_8;
          }
        }
        return 0;
      }
LABEL_8:
      ++v14;
    }
    while (v14 != v16);
  }
  uint64_t v20 = *a1;
  uint64_t v21 = (unsigned int *)sub_2225C3C70(a2);
  int v22 = sub_2225C3B40(v21);
  int v23 = sub_2225F514C(a2);
  uint64_t v24 = sub_2225C3D04(a2);
  uint64_t v25 = sub_222690AA0(v24);
  uint64_t v27 = sub_2226728CC(v20, 3, v22, v23, v25, v26, a3, a4, v40, v41);
  sub_22268B92C(v27, a5);
  uint64_t v28 = sub_222659D94(v27);
  long long v38 = *(_OWORD *)sub_2225F315C(a8);
  if (sub_22268A5FC(&v38))
  {
    sub_2225C3D00((int)v37, &byte_2226D1615);
    uint64_t v28 = sub_222694014(a1, &v38, v28, v37[0], v37[1]);
  }
  uint64_t v29 = *a1;
  int v30 = sub_2225F514C(a8);
  uint64_t v31 = sub_2225C3D04(a8);
  uint64_t v32 = sub_2225F2418(v31);
  char v34 = sub_222672574(v29, v30, v32, v33, v28);
  if (sub_22268A5FC(&v38)) {
    sub_22268A61C(v34);
  }
  sub_22268B5B8(v34);
  sub_22268A23C((uint64_t)a1, (uint64_t)v34);
  return v34;
}

_DWORD *sub_22268BB50(uint64_t *a1, uint64_t a2, unsigned int *a3, unsigned int a4)
{
  unsigned int v50 = a4;
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  if (!a2) {
    return 0;
  }
  uint64_t v7 = (_DWORD *)sub_22268AA14(a2);
  uint64_t v47 = v7;
  if (!v7)
  {
    unsigned int v20 = sub_222613380(a2);
    sub_222688C3C((uint64_t)a1, v20, 2242, (uint64_t)v46);
    uint64_t v21 = (uint64_t *)v46;
    goto LABEL_15;
  }
  unsigned int v8 = v7;
  if (sub_2226551A0(v7) == 2 && !sub_22268BEB0((unint64_t)a3, a1[25]) && sub_22268BED8(a1[1]))
  {
    unsigned int v9 = sub_222613380((uint64_t)v8);
    sub_222688C3C((uint64_t)a1, v9, 4740, (uint64_t)v45);
    sub_2225F37F0(v45);
    sub_22268BF00(v8);
  }
  v44[0] = a1;
  v44[1] = &v48;
  uint64_t v44[2] = &v49;
  v44[3] = &v47;
  v44[4] = &v50;
  if (sub_2226551D0(v8))
  {
    uint64_t v10 = sub_2226551D0(v47);
    sub_222696164(a1, (uint64_t *)&v48, v10);
  }
  v37[0] = sub_2225C5B40((uint64_t)v47);
  uint64_t v11 = sub_222659834((uint64_t)v48);
  if (sub_22268824C(v37, v11))
  {
    v37[0] = sub_2225C5B40((uint64_t)v47);
    uint64_t v12 = sub_2225C3C70((uint64_t)v37);
    uint64_t v13 = sub_222655B18(v12);
    if (v13)
    {
      uint64_t v14 = v13;
      v37[0] = sub_222659834((uint64_t)v48);
      uint64_t v15 = sub_2225C3C70((uint64_t)v37);
      uint64_t v16 = sub_222655B14(v15);
      if (v16)
      {
        uint64_t v17 = v16;
        v37[0] = sub_2225C5B40(v14);
        uint64_t v18 = sub_2225C3D04(v17);
        if (sub_222688268(v37, v18))
        {
          sub_2225C64B8(&v43, v17);
          uint64_t v19 = v43;
LABEL_25:
          sub_2225C5B6C(v14, v19);
          goto LABEL_32;
        }
      }
      v37[0] = sub_222659834((uint64_t)v48);
      uint64_t v25 = sub_2225C3C70((uint64_t)v37);
      uint64_t v26 = sub_222655B18(v25);
      if (v26)
      {
        v37[0] = sub_2225C3D04(v26);
        uint64_t v27 = sub_2225C3C70((uint64_t)v37);
        uint64_t v28 = sub_22265E3C0(v27);
        if (v28)
        {
          sub_2225C64B8(&v42, v28);
          uint64_t v19 = v42;
          goto LABEL_25;
        }
      }
    }
    else
    {
      v37[0] = sub_222659834((uint64_t)v48);
      uint64_t v29 = sub_2225C3C70((uint64_t)v37);
      uint64_t v30 = sub_222655B18(v29);
      if (v30)
      {
        uint64_t v31 = v30;
        v37[0] = sub_2225C3D04(v30);
        uint64_t v32 = sub_2225C5B40((uint64_t)v47);
        if (sub_222688268(v37, v32)) {
          goto LABEL_32;
        }
        uint64_t v33 = sub_2225C3D04(v31);
        return (_DWORD *)sub_22268BF10((uint64_t)v44, v33);
      }
    }
    uint64_t v33 = sub_222659834((uint64_t)v48);
    return (_DWORD *)sub_22268BF10((uint64_t)v44, v33);
  }
  if (sub_22268AA00((uint64_t)a1))
  {
    int v23 = sub_2226551A0(v47);
    if (!v23 || v23 == 2)
    {
      uint64_t v39 = 0;
      if (sub_222665058((unint64_t)v48, a1[25], &v39)) {
        goto LABEL_32;
      }
      unsigned int v34 = sub_2225C3B40(v48);
      sub_222688C3C((uint64_t)a1, v34, 2215, (uint64_t)v38);
      sub_2225F37F0(v38);
      if (!v39) {
        return 0;
      }
      unsigned int v35 = sub_222673A20(v39);
      sub_222688C3C((uint64_t)a1, v35, 3584, (uint64_t)v37);
      uint64_t v36 = sub_222674270(v39);
      sub_222625214(v37, &v36);
      uint64_t v21 = v37;
    }
    else if (v23 == 7)
    {
      unsigned int v24 = sub_222613380((uint64_t)v47);
      sub_222688C3C((uint64_t)a1, v24, 3125, (uint64_t)v40);
      uint64_t v21 = (uint64_t *)v40;
    }
    else
    {
      sub_222688C3C((uint64_t)a1, v50, 2777, (uint64_t)v41);
      uint64_t v21 = (uint64_t *)v41;
    }
LABEL_15:
    sub_2225F37F0(v21);
    return 0;
  }
LABEL_32:
  sub_222628314((uint64_t)v47, (uint64_t)v48);
  return v47;
}

BOOL sub_22268BEB0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  return sub_222665058(a1, a2, &v3);
}

BOOL sub_22268BED8(uint64_t a1)
{
  uint64_t v1 = (_WORD *)sub_222651010(a1);

  return sub_22265057C(v1);
}

_DWORD *sub_22268BF00(_DWORD *result)
{
  *result |= 0x1000000u;
  return result;
}

uint64_t sub_22268BF10(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = a2;
  uint64_t v3 = *(uint64_t **)a1;
  uint64_t v4 = **(void **)(a1 + 8);
  uint64_t v5 = sub_222659C34(**(unsigned __int8 ***)(a1 + 16));
  uint64_t v6 = sub_222695848(v3, v4, v5);
  if (v6)
  {
    sub_222628314(**(void **)(a1 + 24), v6);
    return **(void **)(a1 + 24);
  }
  else
  {
    sub_222688C3C((uint64_t)v3, **(_DWORD **)(a1 + 32), 2422, (uint64_t)v10);
    uint64_t v9 = sub_2225C5B40(**(void **)(a1 + 24));
    uint64_t v8 = sub_222694318((uint64_t)v10, (uint64_t)&v9);
    sub_222694318(v8, (uint64_t)&v11);
    sub_2225F37F0(v10);
    return 0;
  }
}

uint64_t sub_22268BFD0(uint64_t a1, unsigned __int8 *a2)
{
  if (sub_22265C1C8(a2))
  {
    uint64_t v9 = sub_222659C34(a2);
    if (sub_2225D3DB0(&v9))
    {
      uint64_t v9 = sub_222659C34(a2);
      uint64_t v4 = sub_2225C3C70((uint64_t)&v9);
      uint64_t v5 = sub_222655B18(v4);
      if (v5)
      {
        if ((sub_2226874F0(v5) & 1) == 0)
        {
          unsigned int v6 = sub_222613380((uint64_t)a2);
          sub_222688C3C(a1, v6, 3140, (uint64_t)v8);
          sub_2225F37F0(v8);
        }
      }
    }
  }
  return sub_22268A23C(a1, (uint64_t)a2);
}

uint64_t sub_22268C074(uint64_t *a1, uint64_t a2)
{
  uint64_t v77 = *MEMORY[0x263EF8340];
  uint64_t v4 = (_DWORD *)sub_2225C3D04(a2);
  unsigned __int16 v5 = sub_222643C14(v4);
  if (v5)
  {
    unsigned int v6 = (unsigned char *)sub_22265D828(*a1, v5);
    if (sub_22268C5CC(v6) || sub_22268C5D0(v6))
    {
      unsigned int v7 = sub_2225F514C(a2);
      uint64_t v8 = (uint64_t)a1;
      int v9 = 2783;
    }
    else
    {
      unsigned int v7 = sub_2225F514C(a2);
      uint64_t v8 = (uint64_t)a1;
      int v9 = 2820;
    }
    sub_222688C3C(v8, v7, v9, (uint64_t)v75);
    uint64_t v49 = sub_2225C3D04(a2);
    sub_222635F48(v75, v49);
    uint64_t v48 = v75;
    goto LABEL_34;
  }
  uint64_t v10 = sub_2225C3D04(a2);
  v75[0] = sub_2225F2418(v10);
  v75[1] = v11;
  sub_2225C3D00((int)v74, "gl_");
  if (sub_2225D0520((uint64_t)v75, v74[0], (size_t)v74[1]))
  {
    unsigned int v12 = sub_2225F514C(a2);
    sub_222688C3C((uint64_t)a1, v12, 2820, (uint64_t)v75);
    uint64_t v13 = sub_2225C3D04(a2);
    sub_222635F48(v75, v13);
    sub_2225F37F0(v75);
  }
  uint64_t v14 = (void *)sub_2225C3C70(a1[23]);
  if (!sub_222609A70(v14))
  {
    unsigned int v47 = sub_2225F514C(a2);
    sub_222688C3C((uint64_t)a1, v47, 2455, (uint64_t)v73);
    uint64_t v48 = (uint64_t *)v73;
LABEL_34:
    sub_2225F37F0(v48);
    return 0;
  }
  uint64_t v15 = (long long *)sub_2225C3C70(a2);
  uint64_t v16 = a1[23];
  sub_2225C3D00((int)v71, &byte_2226D1615);
  uint64_t v72 = sub_222693F30(a1, v15, v16, v71[0], v71[1]);
  if (sub_2225D3DB0(&v72))
  {
    uint64_t v17 = sub_2225C3C70((uint64_t)&v72);
    if (sub_222655E28(v17))
    {
      unsigned int v18 = sub_2225F514C(a2);
      sub_222688C3C((uint64_t)a1, v18, 3140, (uint64_t)v70);
      sub_2225F37F0(v70);
    }
  }
  if (sub_22268C5D4((uint64_t)v15))
  {
    unsigned int v19 = sub_2225C3B40((unsigned int *)v15);
    sub_222688C3C((uint64_t)a1, v19, 2199, (uint64_t)v69);
    sub_2225F37F0(v69);
  }
  char v63 = sub_2226943F4((uint64_t)a1, (unsigned int *)v15, v72);
  uint64_t v20 = *a1;
  int v21 = sub_2225F514C(a2);
  uint64_t v22 = sub_2225C3D04(a2);
  uint64_t v23 = sub_2225F2418(v22);
  uint64_t v25 = v24;
  int v26 = sub_2225C3B40((unsigned int *)v15);
  uint64_t v27 = v72;
  int v28 = sub_22268C644(a2);
  uint64_t v29 = sub_2226533CC(a2);
  sub_222672B60(v76, v29);
  uint64_t v30 = sub_2225F3D8C(a2);
  sub_2225D3DDC(v68, v30);
  a1[24] = sub_222672B74(v20, v21, v23, v25, v26, v27, v28, v63, (uint64_t)v76, v68[0], v68[1]);
  sub_2225C56C4(v76);
  if (sub_22268A59C((uint64_t)v15)) {
    sub_22268C66C((_DWORD *)a1[24]);
  }
  uint64_t v31 = sub_2226906F8((uint64_t)a1, a1[24]);
  sub_222688E1C(v75, v31);
  if (!sub_22268C67C((uint64_t)v75, v32))
  {
LABEL_22:
    sub_22268A5EC((_DWORD *)a1[24]);
    if (sub_22268C67C((uint64_t)v75, v40)) {
      sub_22268C82C((_DWORD *)a1[24]);
    }
LABEL_24:
    int v41 = sub_222658088(a1[24]);
    uint64_t v42 = a1[24];
    if (v41)
    {
      v65[0] = sub_222640540(a1[24]);
      uint64_t v43 = sub_2225C3C70((uint64_t)v65);
      if (!sub_22268B634(v43) || sub_222655F48(a1[24] + 16))
      {
        unsigned int v44 = sub_222613380(a1[24]);
        sub_222688C3C((uint64_t)a1, v44, 2397, (uint64_t)v64);
        sub_2225F37F0(v64);
      }
      uint64_t v42 = a1[24];
      if (!a1[26]) {
        a1[26] = v42;
      }
    }
    uint64_t v45 = sub_2225C3C70(a1[23]);
    sub_2226904C4((uint64_t)a1, v42, v45);
    uint64_t v46 = a1[24];
    goto LABEL_43;
  }
  uint64_t v33 = 0;
  while (1)
  {
    uint64_t v34 = sub_22268C684((uint64_t)v75, v33);
    uint64_t v35 = sub_222688DE0(v34);
    if (v35) {
      break;
    }
    uint64_t v38 = sub_2225C3C70(a1[23]);
    uint64_t v39 = sub_22268C684((uint64_t)v75, v33);
    if (sub_22268A05C(v38, v39))
    {
      unsigned int v56 = sub_222613380(a1[24]);
      sub_222688C3C((uint64_t)a1, v56, 2784, (uint64_t)v65);
      uint64_t v57 = sub_2226906F8((uint64_t)a1, a1[24]);
      sub_222635F48(v65, v57);
      uint64_t v55 = v65;
      goto LABEL_42;
    }
LABEL_21:
    if (++v33 >= sub_22268C67C((uint64_t)v75, v37)) {
      goto LABEL_22;
    }
  }
  uint64_t v36 = (_DWORD *)v35;
  if (!sub_22268C68C(a1[24], v35)) {
    goto LABEL_21;
  }
  v65[0] = sub_222640540(a1[24]);
  uint64_t v51 = sub_222640540((uint64_t)v36);
  int v52 = sub_22268824C(v65, v51);
  unsigned int v53 = (_DWORD *)a1[24];
  if (v52)
  {
    unsigned int v54 = sub_222613380((uint64_t)v53);
    sub_222688C3C((uint64_t)a1, v54, 2699, (uint64_t)v67);
    uint64_t v55 = (uint64_t *)v67;
  }
  else
  {
    char v58 = sub_22268C75C(v53, v36);
    uint64_t v59 = a1[24];
    if (v58)
    {
      sub_22268C81C(v59, (uint64_t)v36);
      uint64_t v60 = a1[24];
      *(void *)(sub_22268C824((uint64_t)v75) + 8 * v33) = v60;
      uint64_t v61 = sub_222688E6C((uint64_t)v36);
      sub_22268C81C(v61, a1[24]);
      goto LABEL_24;
    }
    unsigned int v62 = sub_222613380(v59);
    sub_222688C3C((uint64_t)a1, v62, 2204, (uint64_t)v66);
    uint64_t v55 = (uint64_t *)v66;
  }
LABEL_42:
  sub_2225F37F0(v55);
  uint64_t v46 = 0;
LABEL_43:
  sub_222688E68(v75);
  return v46;
}

BOOL sub_22268C5D4(uint64_t a1)
{
  if (sub_22268A990(a1) || sub_22268A9A8(a1) || (sub_22268AA70(a1) & 1) != 0 || sub_22268A9C0(a1)) {
    return 1;
  }

  return sub_22268A9E0(a1);
}

uint64_t sub_22268C644(uint64_t a1)
{
  uint64_t v1 = (unsigned int *)sub_2225C3C70(a1);

  return sub_2225C3B40(v1);
}

_DWORD *sub_22268C66C(_DWORD *result)
{
  *result |= 0x1000u;
  return result;
}

uint64_t sub_22268C67C(uint64_t a1, uint64_t a2)
{
  return sub_22268CF38((unsigned __int8 *)(a1 + 8), a2);
}

uint64_t sub_22268C684(uint64_t a1, unsigned int a2)
{
  return sub_22268CF88((unsigned __int8 *)(a1 + 8), a2);
}

uint64_t sub_22268C68C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  int v4 = sub_222655F48(a1 + 16);
  uint64_t v5 = a2 + 16;
  if (v4 != sub_222655F48(a2 + 16)) {
    return 0;
  }
  unsigned int v6 = (uint64_t *)sub_2225CC180(v3);
  unsigned int v7 = (uint64_t *)sub_2225CC180(v5);
  if (v6 == (uint64_t *)sub_222655EEC(v3)) {
    return 1;
  }
  do
  {
    uint64_t v11 = sub_2225C5B40(*v6);
    uint64_t v8 = sub_2225C5B40(*v7);
    int v9 = sub_22268824C(&v11, v8);
    if (v9) {
      break;
    }
    ++v6;
    ++v7;
  }
  while (v6 != (uint64_t *)sub_222655EEC(v3));
  return v9 ^ 1u;
}

uint64_t sub_22268C75C(_DWORD *a1, _DWORD *a2)
{
  int v4 = sub_222655EE0(a1);
  if (v4 != sub_222655EE0(a2)) {
    return 0;
  }
  uint64_t v5 = (uint64_t)(a1 + 4);
  unsigned int v6 = (_DWORD **)sub_2225CC180(v5);
  unsigned int v7 = (_DWORD **)sub_2225CC180((uint64_t)(a2 + 4));
  while (v6 != (_DWORD **)sub_222655EEC(v5))
  {
    int v8 = sub_222655EC8(*v6);
    if (v8 != sub_222655EC8(*v7)) {
      return 0;
    }
    int v9 = sub_222655EBC(*v6);
    if (v9 != sub_222655EBC(*v7)) {
      return 0;
    }
    ++v6;
    ++v7;
  }
  return 1;
}

uint64_t sub_22268C81C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = a2;
  return result;
}

uint64_t sub_22268C824(uint64_t a1)
{
  return sub_222689178((unsigned __int8 *)(a1 + 8));
}

_DWORD *sub_22268C82C(_DWORD *result)
{
  *result |= 0x8000u;
  return result;
}

uint64_t sub_22268C83C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_22268C074(a1, a2);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_2225E55A8(v4);
  uint64_t v6 = v5;
  while ((sub_222655E50(v6) & 1) == 0)
  {
    uint64_t v6 = sub_2225E8DD0(v6);
    if (sub_222655F20(v6))
    {
      unsigned int v7 = sub_2225F514C(a2);
      sub_222688C3C((uint64_t)a1, v7, 2791, (uint64_t)v9);
      sub_2225F37F0(v9);
      return 0;
    }
  }
  return v5;
}

uint64_t sub_22268C8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = sub_222640540(*(void *)(a1 + 192));
  uint64_t v6 = sub_2225C3C70((uint64_t)&v11);
  if ((sub_22268B634(v6) & 1) == 0 && (sub_22268C968(*(void *)(a1 + 192)) & 1) == 0)
  {
    unsigned int v7 = sub_222613380(a2);
    sub_222688C3C(a1, v7, 4728, (uint64_t)v10);
    sub_2225F37F0(v10);
  }
  uint64_t v8 = sub_2225E55A8(a2);
  uint64_t result = sub_22268C974(v8, a3);
  *(void *)(a1 + 192) = 0;
  return result;
}

uint64_t sub_22268C968(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 1) >> 6) & 1;
}

uint64_t sub_22268C974(uint64_t result, uint64_t a2)
{
  *(void *)(result + 144) = a2;
  return result;
}

uint64_t sub_22268C97C(uint64_t a1, uint64_t a2)
{
  if (!sub_222609A70(*(void **)(a1 + 184)))
  {
    unsigned int v7 = sub_2225F56EC(a2);
    sub_222688C3C(a1, v7, 2039, (uint64_t)v14);
    uint64_t v8 = v14;
LABEL_7:
    sub_2225F37F0(v8);
    return 0;
  }
  if (sub_22268A5E0(a2) != 7)
  {
    unsigned int v9 = sub_2225F56EC(a2);
    sub_222688C3C(a1, v9, 2038, (uint64_t)v13);
    uint64_t v8 = v13;
    goto LABEL_7;
  }
  sub_222673134(&v12);
  sub_2225F3278(&v11);
  sub_2225F3278(&v10);
  if (sub_222695A64(a1, a2, (unsigned __int16 *)&v12, &v11, &v10))
  {
    sub_2226964C4(a1, v12, v11, v10);
    sub_22268CA84(a1, v12, v11, v10);
    uint64_t v4 = *(void *)a1;
    int v5 = sub_2225F56EC(a2);
    return sub_2226726A4(v4, v5, v12);
  }
  return 0;
}

_WORD *sub_22268CA84(uint64_t a1, int a2, int a3, int a4)
{
  int v10 = a2;
  if (sub_222655200((unsigned __int16 *)&v10))
  {
    char v7 = sub_222655224((unsigned __int16 *)&v10);
    sub_222689658((_WORD *)(a1 + 440), v7);
    *(_DWORD *)(a1 + 444) = a3;
  }
  uint64_t result = (_WORD *)sub_222655230((unsigned __int16 *)&v10);
  if (result)
  {
    char v9 = sub_22265523C((unsigned __int16 *)&v10);
    uint64_t result = sub_222689670((_WORD *)(a1 + 440), v9);
    *(_DWORD *)(a1 + 448) = a4;
  }
  return result;
}

unsigned int *sub_22268CB10(uint64_t *a1, unsigned int *a2, int a3)
{
  if (sub_22268A9D8((uint64_t)a2))
  {
    unsigned int v6 = sub_2225C3B40(a2);
    sub_222688C3C((uint64_t)a1, v6, 2467, (uint64_t)v26);
    char v7 = v26;
LABEL_3:
    sub_2225F37F0(v7);
    return 0;
  }
  int v9 = sub_22268CCA8((uint64_t)a2);
  if (v9 != 3 && v9 != 5)
  {
    int v10 = sub_22268CCA8((uint64_t)a2);
    if (!sub_22268CCB4(v10))
    {
      uint64_t v17 = sub_2225CDCF4((uint64_t)a2);
      if (v17)
      {
        uint64_t v18 = v17;
        unsigned int v19 = sub_2225C3B40(a2);
        sub_222688C3C((uint64_t)a1, v19, 2468, (uint64_t)v25);
        uint64_t v20 = sub_222659D94(v18);
      }
      else
      {
        unsigned int v21 = sub_2225C3B40(a2);
        sub_222688C3C((uint64_t)a1, v21, 2468, (uint64_t)v25);
        uint64_t v22 = *a1;
        int v23 = sub_22268CCA8((uint64_t)a2);
        uint64_t v20 = sub_222687C14(v22, v23);
      }
      uint64_t v24 = v20;
      sub_222694318((uint64_t)v25, (uint64_t)&v24);
      char v7 = v25;
      goto LABEL_3;
    }
  }
  uint64_t v11 = a1[23];
  int v12 = sub_22268CCA8((uint64_t)a2);
  char v13 = sub_22268CD6C((uint64_t)a2);
  sub_22268CCC4(v11, v12, v13);
  uint64_t v14 = *a1;
  char v15 = sub_22268CD6C((uint64_t)a2);
  char v16 = sub_22268CCA8((uint64_t)a2);

  return sub_222672640(v14, a3, v15, v16);
}

uint64_t sub_22268CCA8(uint64_t a1)
{
  return *(_WORD *)(a1 + 56) >> 1;
}

BOOL sub_22268CCB4(int a1)
{
  return (a1 - 41) < 4;
}

uint64_t sub_22268CCC4(uint64_t result, int a2, char a3)
{
  switch(a2)
  {
    case ')':
      __int16 v3 = 16 * (a3 & 3);
      __int16 v4 = *(_WORD *)(result + 12) & 0xFFCF;
      goto LABEL_9;
    case '*':
      __int16 v3 = (a3 & 3) << 6;
      __int16 v4 = *(_WORD *)(result + 12) & 0xFF3F;
      goto LABEL_9;
    case '+':
      __int16 v3 = (a3 & 3) << 8;
      __int16 v4 = *(_WORD *)(result + 12) & 0xFCFF;
      goto LABEL_9;
    case ',':
      __int16 v3 = (a3 & 3) << 10;
      __int16 v4 = *(_WORD *)(result + 12) & 0xF3FF;
      goto LABEL_9;
    default:
      if (a2 == 3)
      {
        __int16 v5 = *(_WORD *)(result + 12) & 0xFFFC | a3 & 3;
      }
      else
      {
        __int16 v3 = 4 * (a3 & 3);
        __int16 v4 = *(_WORD *)(result + 12) & 0xFFF3;
LABEL_9:
        __int16 v5 = v4 | v3;
      }
      *(_WORD *)(result + 12) = v5;
      return result;
  }
}

uint64_t sub_22268CD6C(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 56) >> 12) & 3;
}

uint64_t sub_22268CD78(_DWORD *a1)
{
  return (*a1 >> 1) & 1;
}

uint64_t sub_22268CD84(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222655D2C(&v2);
}

unsigned char *sub_22268CDAC(unsigned char *result, char a2, int a3, int a4)
{
  if (a3) {
    char v4 = 2;
  }
  else {
    char v4 = 0;
  }
  if (a4) {
    char v5 = 4;
  }
  else {
    char v5 = 0;
  }
  *uint64_t result = v4 | a2 | v5 | *result & 0xF8;
  return result;
}

uint64_t sub_22268CDE0(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_222609658(a1, a2);
  }
  else
  {
    sub_2225E72BC((uint64_t)a1, a2);
    uint64_t result = v4 + 8;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_22268CE3C(unsigned __int8 *a1, uint64_t a2)
{
  if (sub_222689D88(a1, a2)) {
    return 1;
  }
  uint64_t result = sub_222689860(a1);
  if (result)
  {
    return sub_2225CF1D0((void *)result);
  }
  return result;
}

uint64_t sub_22268CE94(unsigned __int8 *a1)
{
  uint64_t result = sub_22268CECC(a1);
  if (!result)
  {
    uint64_t v4 = sub_222657F58(a1, v3);
    return *(void *)sub_222608644(v4);
  }
  return result;
}

uint64_t sub_22268CECC(unsigned __int8 *a1)
{
  if (!sub_222609868(a1)) {
    return 0;
  }

  return sub_222657F58(a1, v2);
}

BOOL sub_22268CF18(unsigned char *a1)
{
  return (*a1 & 0x7F) != 0;
}

BOOL sub_22268CF28(_WORD *a1)
{
  return (*a1 & 0xF80) != 0;
}

uint64_t sub_22268CF38(unsigned __int8 *a1, uint64_t a2)
{
  if (sub_22268CE3C(a1, a2)) {
    return 0;
  }
  if (sub_222609868(a1)) {
    return 1;
  }
  char v5 = (void *)sub_222657F58(a1, v4);
  return sub_2225D4970(v5);
}

uint64_t sub_22268CF88(unsigned __int8 *a1, unsigned int a2)
{
  uint64_t result = sub_22268CECC(a1);
  if (!result)
  {
    unsigned int v6 = (void *)sub_222657F58(a1, v5);
    return *(void *)sub_22268CFC8(v6, a2);
  }
  return result;
}

uint64_t sub_22268CFC8(void *a1, unsigned int a2)
{
  return *a1 + 8 * a2;
}

uint64_t sub_22268CFD4(uint64_t a1)
{
  return sub_22268CFF8(a1, (uint64_t)&v2);
}

uint64_t sub_22268CFF8(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_22268D03C(a1, a2, &v5);
}

uint64_t sub_22268D040(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_2225D918C())
  {
    j_j_nullsub_1(&v6);
    j_j_nullsub_1(&v5);
    sub_22268D0B8(a1, a2, &v5);
    *(void *)(a1 + 24) = a1;
  }
  return a1;
}

void *sub_22268D0BC(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658910(a1);
  *char v6 = &unk_26D4DEAB0;
  sub_22268D11C(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_22268D120(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_2225D50C4(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_22268D0B8(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265CF80(v11);
  return v8;
}

uint64_t sub_22268D1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_22268D0B8(a2, v4, v5);
}

uint64_t sub_22268D230(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_22268D238(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v5);
  nullsub_1(v2, v3);
  return sub_2225D5484((uint64_t)&v5, a1, 1);
}

uint64_t sub_22268D290(uint64_t a1, uint64_t a2)
{
  return sub_22268D330(a1 + 8, a2);
}

uint64_t sub_22268D298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  uint64_t v6 = sub_2225FA0E8(a3);

  return sub_22268D2F4(a1, v5, v6);
}

uint64_t sub_22268D2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_22265BD24(a1, a2);

  return sub_22265BD24(v4, a3);
}

uint64_t sub_22268D330(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_22268D368(v3, a2);
}

uint64_t sub_22268D36C()
{
  return sub_2225C5C08();
}

uint64_t sub_22268D374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_22268D39C(a1, v4);
}

uint64_t sub_22268D3A4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_22268D3D0();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_22268D3D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658910(a1);
  *uint64_t v6 = &unk_26D4DEAF8;
  sub_22268D434(v6 + 1, a2, a3);
  return a1;
}

void sub_22268D43C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_123();

  j__free(v0);
}

uint64_t sub_22268D464(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_22268D5A0();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_22268D3D0(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_22268D5AC(v7);
  return v4;
}

uint64_t sub_22268D4DC(uint64_t a1, uint64_t a2)
{
  return sub_22268D3D0(a2, a1 + 8);
}

uint64_t sub_22268D4F0(uint64_t a1)
{
  return sub_22268D638(a1, 1);
}

uint64_t sub_22268D4F8(uint64_t a1)
{
  return sub_22268D648(a1 + 8);
}

uint64_t sub_22268D500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  sub_222658A5C(a3);

  return sub_22268D558(a1, v5);
}

_OWORD *sub_22268D560(_OWORD *a1, uint64_t a2)
{
  uint64_t v4 = a2;
  *a1 = *(_OWORD *)sub_2225CC180((uint64_t)&v4);
  return a1;
}

uint64_t sub_22268D5A0()
{
  return sub_2225CBA78(24, 8);
}

uint64_t *sub_22268D5B0(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_22268D5D8(uint64_t *result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    uint64_t v2 = sub_2225E563C((uint64_t)result);
    return (uint64_t *)sub_22268D624(v2, v1);
  }
  return result;
}

uint64_t sub_22268D624(uint64_t a1, uint64_t a2)
{
  return sub_22268D634(a2, *(void *)(a1 + 8));
}

uint64_t sub_22268D638(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA08(a1, 24 * a2, 8);
}

uint64_t sub_22268D650(uint64_t **a1, unsigned __int8 **a2)
{
  return sub_22268B540(a1, *a2);
}

_DWORD *sub_22268D658(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  sub_222688E1C(v39, a3);
  unsigned int v6 = sub_22268B4D4(v39);
  sub_222688E68(v39);
  if (v6)
  {
    uint64_t v7 = sub_2225F2418(a3);
    int v8 = a2;
    if (!sub_22269035C(a1, v6, v7, v9, a2)) {
      return 0;
    }
    int v10 = (_DWORD *)sub_22265D828(*a1, v6);
    if (sub_22268D8FC(v10))
    {
      char v11 = sub_22265DEB4(v10);
      sub_22265DEF0((uint64_t)v10, a1[25]);
      uint64_t v12 = *a1;
      int v13 = sub_22268D900((uint64_t)v10);
      uint64_t v14 = sub_222687C14(v12, v13);
      int v15 = sub_22268D914((uint64_t)v10);
      char v16 = sub_22268D920((uint64_t)v10);
      return sub_2226750B4(v12, v8, v11, v14, v15, v16);
    }
    if (sub_22268D92C((uint64_t)v10))
    {
      char v18 = sub_22268D930(v10);
      uint64_t v19 = *a1;
      int v20 = sub_22268D900((uint64_t)v10);
      uint64_t v21 = sub_222687C14(v19, v20);
      char v22 = sub_22268D920((uint64_t)v10);
      return sub_22267513C(v19, v8, v18, v21, v22);
    }
  }
  uint64_t v23 = sub_222690928(a1, a3);
  uint64_t v38 = v23;
  if (v23)
  {
    uint64_t v24 = (_WORD *)v23;
    uint64_t v25 = (_DWORD *)sub_22268AA14(v23);
    if (v25)
    {
      int v26 = v25;
      char v27 = sub_2226997D4((uint64_t)a1, v25);
      char v28 = sub_2226551D0(v26);
      return sub_222674A10(*a1, v27, v28, a2, v24);
    }
    uint64_t v33 = sub_22268D934((uint64_t)v24);
    if (v33)
    {
      uint64_t v34 = (_DWORD *)v33;
      char v27 = sub_222699870((uint64_t)a1, v33);
      char v28 = sub_222655EBC(v34);
      return sub_222674A10(*a1, v27, v28, a2, v24);
    }
    if (sub_22268D970(&v38))
    {
      sub_222688C3C((uint64_t)a1, a2, 2878, (uint64_t)v36);
      uint64_t v32 = v36;
    }
    else
    {
      sub_222688C3C((uint64_t)a1, a2, 3095, (uint64_t)v35);
      uint64_t v32 = v35;
    }
    goto LABEL_18;
  }
  sub_22268AA10(&v37, 1, 1, 0);
  v39[0] = (_DWORD *)sub_222691248((uint64_t)a1, a3, a2, &v37);
  v39[1] = v29;
  if (!sub_2225C3B40((unsigned int *)v39))
  {
    sub_222688C3C((uint64_t)a1, a2, 3109, (uint64_t)v39);
    uint64_t v30 = sub_2225F2418(a3);
    sub_2225F3774((uint64_t *)v39, v30, v31);
    uint64_t v32 = v39;
LABEL_18:
    sub_2225F37F0(v32);
  }
  return 0;
}

uint64_t sub_22268D900(uint64_t a1)
{
  return ((*(unsigned __int16 *)(a1 + 4) | (*(unsigned __int8 *)(a1 + 6) << 16)) >> 10) & 0x7F;
}

uint64_t sub_22268D914(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 6) >> 3) & 3;
}

uint64_t sub_22268D920(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 6) >> 1) & 3;
}

uint64_t sub_22268D934(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_22268FD84(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

_DWORD *sub_22268D974(uint64_t *a1, int a2, int a3)
{
  return sub_22268D98C(*a1, a3, a2 == 145);
}

_DWORD *sub_22268D98C(uint64_t a1, int a2, char a3)
{
  unsigned int v6 = (_DWORD *)sub_22267235C(0x18u, a1, 8u);
  uint64_t v7 = sub_222687FB4(a1, 7);
  sub_2225C64B8(&v9, v7);
  return sub_22268FE40(v6, v9, a2, a3);
}

_DWORD *sub_22268DA04(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  v45[0] = a2;
  v45[1] = a3;
  uint64_t v6 = sub_222623360((uint64_t)v39, a2, a3, a4, a1[20]);
  if (v39[112]) {
    goto LABEL_8;
  }
  if (v42)
  {
    sub_222688C3C((uint64_t)a1, a4, 2379, (uint64_t)v29);
    uint64_t v7 = "long long";
LABEL_6:
    sub_22260A5E8((uint64_t *)v29, (uint64_t)v7);
    int v8 = v29;
LABEL_7:
    sub_2225F37F0(v8);
LABEL_8:
    uint64_t v9 = 0;
    goto LABEL_9;
  }
  if (v44)
  {
    sub_222688C3C((uint64_t)a1, a4, 2379, (uint64_t)v29);
    uint64_t v7 = "imaginary";
    goto LABEL_6;
  }
  if (sub_222623248(v6))
  {
    if (v41)
    {
      sub_222688C3C((uint64_t)a1, a4, 4730, (uint64_t)v38);
      int v8 = (const void **)v38;
      goto LABEL_7;
    }
    char v11 = (const char *)sub_2225C3C70((uint64_t)v45);
    float v12 = strtof(v11, 0);
    sub_2225C4C0C(v37, v12);
    sub_22268DE5C(v29);
    if (sub_2225C57B8((uint64_t)v37))
    {
      sub_2225C4A8C((uint64_t)&unk_2226C9E78, 0, (uint64_t)v36);
      sub_2225C4C10((uint64_t)v36, v29, 0, 3u);
      sub_2225C2AA4(v36);
      int v13 = 4741;
    }
    else
    {
      if (!sub_2225C2B1C((unsigned __int16 *)v37))
      {
LABEL_23:
        uint64_t v20 = *a1;
        if (v43)
        {
          uint64_t v21 = v32;
          sub_2225C2E78(v32, v37);
          char v22 = sub_22268DE60(v20, a4, (uint64_t)v32);
        }
        else
        {
          uint64_t v21 = v31;
          sub_2225C2E78(v31, v37);
          char v22 = sub_22268DEF0(v20, a4, (uint64_t)v31);
        }
        uint64_t v9 = v22;
        sub_2225C2AA4(v21);
        sub_2225CA520(v29);
        sub_2225C2AA4(v37);
        goto LABEL_9;
      }
      sub_2225C3C84((uint64_t)&unk_2226C9E78, 0, (uint64_t)v36);
      sub_2225C2AA8((uint64_t)v37, (uint64_t)v36);
      sub_2225C2AA4(v36);
      sub_2225C4AD0((uint64_t)&unk_2226C9E78, 0, (uint64_t)v36);
      sub_2225C4C10((uint64_t)v36, v29, 0, 3u);
      sub_2225C2AA4(v36);
      int v13 = 4742;
    }
    sub_22268DE5C(v36);
    sub_2225C4C10((uint64_t)v37, v36, 0, 3u);
    sub_222688C3C((uint64_t)a1, a4, v13, (uint64_t)v35);
    uint64_t v15 = sub_2225CC180((uint64_t)v29);
    uint64_t v16 = sub_2225C5664((uint64_t)v29);
    sub_2225C3D0C(v34, v15, v16);
    uint64_t v17 = sub_2225F3774(v35, v34[0], v34[1]);
    uint64_t v18 = sub_2225CC180((uint64_t)v36);
    uint64_t v19 = sub_2225C5664((uint64_t)v36);
    sub_2225C3D0C(v33, v18, v19);
    sub_2225F3774(v17, v33[0], v33[1]);
    sub_2225F37F0(v35);
    sub_2225CA520(v36);
    goto LABEL_23;
  }
  sub_222649BE4((uint64_t)v39);
  if (v41)
  {
    sub_222688C3C((uint64_t)a1, a4, 2379, (uint64_t)v29);
    uint64_t v7 = "long";
    goto LABEL_6;
  }
  int v14 = v40;
  sub_2225C3A6C(v36, 32, 0, v40 == 0);
  if (sub_2226235C0((uint64_t)v39, (unsigned int *)v36))
  {
    sub_2225C3A6C(v37, 64, 0, v40 == 0);
    if (sub_2226235C0((uint64_t)v39, v37))
    {
      sub_222688C3C((uint64_t)a1, a4, 2304, (uint64_t)v30);
      sub_2225F37F0(v30);
    }
    else
    {
      sub_2225CF1C4(v29);
      sub_2225CA060(v37, v29, 0xAu, v40 == 0, 0);
      sub_222688C3C((uint64_t)a1, a4, 2303, (uint64_t)v35);
      uint64_t v25 = sub_2225CA4D0((uint64_t)v29);
      sub_2225F3774(v35, v25, v26);
      sub_2225F37F0(v35);
      sub_2225CA520(v29);
    }
    sub_2225C2F10(v37);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v23 = *a1;
    if (v14)
    {
      sub_2225C3B80(v27, v36);
      uint64_t v9 = sub_22268E010(v23, a4, (uint64_t)v27);
      uint64_t v24 = v27;
    }
    else
    {
      sub_2225C3B80(v28, v36);
      uint64_t v9 = sub_22268DF80(v23, a4, (uint64_t)v28);
      uint64_t v24 = v28;
    }
    sub_2225C2F10(v24);
  }
  sub_2225C2F10(v36);
LABEL_9:
  sub_22263E5F0((uint64_t)v39);
  return v9;
}

_DWORD *sub_22268DE60(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = (_DWORD *)sub_22267235C(0x28u, a1, 8u);
  uint64_t v7 = sub_222687FB4(a1, 4);
  sub_2225C64B8(&v10, v7);
  sub_2225C2E64(v9, a3);
  sub_22268FE94(v6, v10, a2, (uint64_t)v9);
  sub_2225C2AA4(v9);
  return v6;
}

_DWORD *sub_22268DEF0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = (_DWORD *)sub_22267235C(0x28u, a1, 8u);
  uint64_t v7 = sub_222687FB4(a1, 3);
  sub_2225C64B8(&v10, v7);
  sub_2225C2E64(v9, a3);
  sub_22268FEF4(v6, v10, a2, (uint64_t)v9);
  sub_2225C2AA4(v9);
  return v6;
}

_DWORD *sub_22268DF80(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);
  uint64_t v7 = sub_222687FB4(a1, 5);
  sub_2225C64B8(&v10, v7);
  sub_2225C3B80(v9, a3);
  sub_22268FF54(v6, v10, a2, (uint64_t)v9);
  sub_2225C2F10(v9);
  return v6;
}

_DWORD *sub_22268E010(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = (_DWORD *)sub_22267235C(0x20u, a1, 8u);
  uint64_t v7 = sub_222687FB4(a1, 6);
  sub_2225C64B8(&v10, v7);
  sub_2225C3B80(v9, a3);
  sub_22268FFB4(v6, v10, a2, (uint64_t)v9);
  sub_2225C2F10(v9);
  return v6;
}

uint64_t sub_22268E0A0(uint64_t *a1, unsigned int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v13 = sub_2226945C4((uint64_t)a1, a3, a4, a2);
  if (!sub_2225D3DB0(&v13)) {
    return 0;
  }
  uint64_t v10 = *a1;
  uint64_t v11 = sub_222659834(a4);
  return sub_222674994(v10, a2, a4, v11, a3, a5);
}

void *sub_22268E138(uint64_t *a1, unsigned int *a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t v49 = sub_222659834((uint64_t)a2);
  int v10 = sub_2226593F4((uint64_t)a2);
  char v11 = v10;
  int v48 = v10;
  uint64_t v12 = sub_2225C3C70((uint64_t)&v49);
  uint64_t v13 = sub_222654B7C(v12);
  if (v13)
  {
    v47.__r_.__value_.__r.__words[0] = sub_222696744(a1, v13, &v48, a3, a4, a5);
    uint64_t result = (void *)sub_2225C3C70((uint64_t)&v47);
    if (result)
    {
      char v15 = sub_222659320((uint64_t)a2);
      return sub_2226753A8(*a1, v48, (uint64_t)v47.__r_.__value_.__l.__data_, v15, (uint64_t)a2, a4, a5);
    }
  }
  else
  {
    uint64_t v16 = sub_2225C3C70((uint64_t)&v49);
    uint64_t v17 = sub_222655268(v16);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_2225C3D04(v17);
      uint64_t v20 = sub_22268E3F8(v19 + 16);
      uint64_t v22 = v21;
      uint64_t v23 = sub_2225C3D04(v18);
      uint64_t v24 = sub_2226906F8((uint64_t)a1, v23);
      uint64_t result = (void *)sub_222696638((uint64_t)a1, v20, v22, a3, a4, v24);
      if (result)
      {
        uint64_t v25 = (uint64_t)result;
        char v26 = sub_2226551D0(result);
        uint64_t v27 = sub_2225C5B40(v25);
        return sub_222675248(*a1, v11, v27, v26, (uint64_t)a2, a4, a5);
      }
    }
    else
    {
      uint64_t v28 = sub_2225C3C70((uint64_t)&v49);
      uint64_t v29 = sub_2226552F0(v28);
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v31 = sub_2225C3D04(v29);
        uint64_t v32 = sub_22268E444(v31 + 16);
        uint64_t v34 = v33;
        uint64_t v35 = sub_2225C3D04(v30);
        uint64_t v36 = sub_2226906F8((uint64_t)a1, v35);
        uint64_t result = (void *)sub_222696638((uint64_t)a1, v32, v34, a3, a4, v36);
        if (result)
        {
          uint64_t v37 = (uint64_t)result;
          char v38 = sub_2226551D0(result);
          uint64_t v39 = sub_2225C5B40(v37);
          return sub_2226752F8(*a1, v11, v39, v38, (uint64_t)a2, a4, a5);
        }
      }
      else
      {
        sub_2225CAD04(&v47);
        unsigned __int8 v40 = (unsigned char *)sub_2225C3C70((uint64_t)&v49);
        sub_222687130(v40, (uint64_t)&v47);
        unsigned int v41 = sub_2225C3B40(a2);
        sub_222688C3C((uint64_t)a1, v41, 1875, (uint64_t)v46);
        char v42 = sub_222635F48(v46, a4);
        std::operator+<char>();
        sub_2225D169C(&v43, "'", (uint64_t)&v44);
        sub_2225CCBF8(v45, &v44);
        sub_2225F3774(v42, v45[0], v45[1]);
        std::string::~string(&v44);
        std::string::~string(&v43);
        sub_2225F37F0(v46);
        std::string::~string(&v47);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_22268E3F8(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  uint64_t v3 = sub_22265594C(a1);
  sub_222672FC0(&v5, v2, v3);
  return v5;
}

uint64_t sub_22268E444(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  uint64_t v3 = sub_222655A98(a1);
  sub_222672FC0(&v5, v2, v3);
  return v5;
}

_DWORD *sub_22268E490(uint64_t *a1, uint64_t a2, unsigned int a3, int a4)
{
  v22.__r_.__value_.__r.__words[0] = sub_222659834(a2);
  uint64_t v8 = sub_2225C3C70((uint64_t)&v22);
  if ((sub_22268CD84(v8) & 1) == 0)
  {
    v22.__r_.__value_.__r.__words[0] = sub_222659834(a2);
    uint64_t v9 = sub_2225C3C70((uint64_t)&v22);
    uint64_t v10 = sub_222655B18(v9);
    if (!v10
      || (uint64_t v11 = v10, !sub_2226874F0(v10))
      || (v22.__r_.__value_.__r.__words[0] = sub_2225C3D04(v11),
          uint64_t v12 = sub_2225C3C70((uint64_t)&v22),
          (sub_22268CD84(v12) & 1) == 0))
    {
      sub_2225CAD04(&v22);
      v19.__r_.__value_.__r.__words[0] = sub_222659834(a2);
      uint64_t v13 = (unsigned char *)sub_2225C3C70((uint64_t)&v19);
      sub_222687130(v13, (uint64_t)&v22);
      sub_222688C3C((uint64_t)a1, a3, 1873, (uint64_t)v21);
      std::operator+<char>();
      sub_2225D169C(&v18, "'", (uint64_t)&v19);
      sub_2225CCBF8(v20, &v19);
      int v14 = sub_2225F3774(v21, v20[0], v20[1]);
      uint64_t v17 = sub_222674270(a2);
      sub_222625214(v14, &v17);
      std::string::~string(&v19);
      std::string::~string(&v18);
      sub_2225F37F0(v21);
      std::string::~string(&v22);
    }
  }
  uint64_t v15 = sub_222687C14(*a1, 5);
  return sub_222674C70(*a1, 0, v15, a2, a3, a4);
}

unint64_t sub_22268E610(uint64_t a1, _DWORD *a2, unsigned int a3, unsigned int a4, uint64_t a5, unsigned int *a6)
{
  if (sub_2225C3B48((uint64_t)a2) && sub_2225C3B84(a2))
  {
    unsigned int v12 = sub_2225C3B40(a6);
    sub_222688C3C(a1, v12, 2454, (uint64_t)v24);
    uint64_t v13 = sub_2226256C4(v24, a3);
    int v14 = sub_2225CA404((uint64_t)a2);
    sub_222622304(v13, v14);
  }
  else
  {
    unint64_t result = sub_2225C54BC(a2);
    if (result < a4) {
      return result;
    }
    unsigned int v16 = sub_2225C3B40(a6);
    sub_222688C3C(a1, v16, 2276, (uint64_t)v24);
    uint64_t v17 = sub_2226256C4(v24, a3);
    unsigned int v18 = sub_2225C54BC(a2);
    sub_2226256C4(v17, v18);
  }
  sub_2225F37F0(v24);
  unint64_t result = sub_222659694(a5);
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v20 = sub_2225C3D04(result);
    unsigned int v21 = sub_222613380(v20);
    sub_222688C3C(a1, v21, 3680, (uint64_t)v24);
    uint64_t v22 = sub_2225C3D04(v19);
    uint64_t v23 = sub_2226906F8(a1, v22);
    sub_222635F48(v24, v23);
    return sub_2225F37F0(v24);
  }
  return result;
}

_DWORD *sub_22268E764(uint64_t *a1, uint64_t a2, unsigned int a3, unsigned int *a4, int a5)
{
  uint64_t v10 = sub_222659834((uint64_t)a4);
  if ((sub_22266111C(v10) & 1) == 0)
  {
    sub_222688C3C((uint64_t)a1, a3, 3079, (uint64_t)v48);
    uint64_t v20 = v48;
    goto LABEL_6;
  }
  sub_2225D3A34(&v47);
  v45[0] = sub_222659834(a2);
  uint64_t v11 = sub_2225C3C70((uint64_t)v45);
  sub_2225C64B8(&v46, v11);
  uint64_t v12 = sub_2225C3C70((uint64_t)&v46);
  uint64_t v13 = sub_222654B7C(v12);
  if (v13)
  {
    uint64_t v14 = v13;
    char v15 = sub_2226593F4(a2);
    uint64_t v16 = sub_2225C3D04(v14);
    sub_2225C64B8(v45, v16);
    uint64_t v47 = v45[0];
    sub_22268EA84(v45);
    if (sub_22268EA88((unint64_t)a4, a1[25], (uint64_t)v45))
    {
      unsigned int v17 = sub_222654EC8(v14);
      uint64_t v18 = (uint64_t)a1;
      unsigned int v19 = 2;
LABEL_13:
      sub_22268E610(v18, v45, v19, v17, a2, a4);
      goto LABEL_14;
    }
    goto LABEL_14;
  }
  uint64_t v22 = sub_2225C3C70((uint64_t)&v46);
  uint64_t v23 = sub_222654C5C(v22);
  if (!v23)
  {
    uint64_t v29 = sub_2225C3C70((uint64_t)&v46);
    uint64_t v30 = sub_222655B14(v29);
    if (v30)
    {
      uint64_t v31 = v30;
      char v15 = sub_2226593F4(a2);
      uint64_t v47 = sub_2225C3D04(v31);
      sub_22268EA84(v45);
      if (!sub_22268EA88((unint64_t)a4, a1[25], (uint64_t)v45))
      {
        uint64_t v36 = sub_2225C3C70((uint64_t)&v47);
        if (sub_22268B60C(v36))
        {
          unsigned int v37 = sub_2225C3B40(a4);
          sub_222688C3C((uint64_t)a1, v37, 2830, (uint64_t)v44);
          sub_2225F37F0(v44);
        }
        uint64_t v38 = sub_222659694(a2);
        if (v38)
        {
          uint64_t v39 = sub_2225C3D04(v38);
          unsigned __int8 v40 = (_DWORD *)sub_22268AA14(v39);
          if (v40)
          {
            if (sub_2226551A0(v40) == 4)
            {
              unsigned int v41 = sub_2225C3B40(a4);
              sub_222688C3C((uint64_t)a1, v41, 2191, (uint64_t)v43);
              sub_2225F37F0(v43);
            }
          }
        }
        goto LABEL_14;
      }
      unsigned int v17 = sub_2225F514C(v31);
      uint64_t v18 = (uint64_t)a1;
      unsigned int v19 = 0;
      goto LABEL_13;
    }
    sub_222688C3C((uint64_t)a1, a3, 2220, (uint64_t)v42);
    uint64_t v20 = v42;
LABEL_6:
    sub_2225F37F0(v20);
    return 0;
  }
  uint64_t v24 = v23;
  char v15 = sub_2226593F4(a2);
  uint64_t v25 = *a1;
  uint64_t v26 = sub_2225C3D04(v24);
  uint64_t v27 = sub_222654A90(v26);
  int v28 = sub_222654FBC(v24);
  uint64_t v47 = sub_222687824(v25, v27, v28);
  sub_22268EA84(v45);
  if (sub_22268EA88((unint64_t)a4, a1[25], (uint64_t)v45))
  {
    unsigned int v17 = sub_222654EC8(v24);
    uint64_t v18 = (uint64_t)a1;
    unsigned int v19 = 1;
    goto LABEL_13;
  }
LABEL_14:
  sub_22263E6C8(v45);
  if (!sub_222659320((uint64_t)a4))
  {
    v45[0] = sub_222659834((uint64_t)a4);
    uint64_t v32 = sub_2225C3C70((uint64_t)v45);
    uint64_t v33 = sub_22265E3C0(v32);
    int v34 = sub_222655AE4(v33);
    int v35 = sub_22268EAB0(a1[23], v34);
    sub_22267460C((uint64_t)a4, v35);
  }
  return sub_222674BE8(*a1, v15, v47, a2, (uint64_t)a4, a3, a5);
}

uint64_t sub_22268EA88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  return sub_222664F4C(a1, a2, a3, &v4);
}

uint64_t sub_22268EAB0(uint64_t a1, int a2)
{
  if (!(!v3 & v2))
  {
    switch(a2)
    {
      case ')':
        return (*(unsigned __int16 *)(a1 + 12) >> 4) & 3;
      case '*':
        return *(_WORD *)(a1 + 12) >> 6;
      case '+':
        LOBYTE(v4) = *(unsigned char *)(a1 + 13);
        return v4 & 3;
      case ',':
        return (*(unsigned __int16 *)(a1 + 12) >> 10) & 3;
      default:
        JUMPOUT(0);
    }
  }
  if ((a2 - 5) < 2) {
    return (*(unsigned __int16 *)(a1 + 12) >> 2) & 3;
  }
  if ((a2 - 3) > 1) {
    return 0;
  }
  __int16 v4 = *(_WORD *)(a1 + 12);
  return v4 & 3;
}

_DWORD *sub_22268EB50(uint64_t *a1, unsigned int a2, int a3, unint64_t a4, unint64_t a5)
{
  unint64_t v20 = a5;
  unint64_t v21 = a4;
  uint64_t v19 = sub_222694B50(a1, a3, (uint64_t *)&v21, (uint64_t *)&v20, a2);
  if (!sub_2225D3DB0(&v19)) {
    return 0;
  }
  if (a3 == 18)
  {
    v18[0] = sub_222659834(v20);
    uint64_t v8 = sub_2225C3C70((uint64_t)v18);
    if (sub_22265E240(v8))
    {
      sub_22268EA84(v18);
      if (sub_22268EA88(v20, a1[25], (uint64_t)v18))
      {
        if (sub_2225C7D98((uint64_t)v18))
        {
          sub_222688C3C((uint64_t)a1, a2, 4269, (uint64_t)v17);
          uint64_t v16 = sub_222674270(v20);
          sub_222625214(v17, &v16);
          sub_2225F37F0(v17);
        }
        if (sub_2225C3B84(v18))
        {
          sub_222688C3C((uint64_t)a1, a2, 4142, (uint64_t)v17);
          uint64_t v16 = sub_222674270(v20);
          sub_222625214(v17, &v16);
          sub_2225F37F0(v17);
        }
      }
      sub_22263E6C8(v18);
    }
    v18[0] = sub_222659834(v21);
    uint64_t v9 = sub_2225C3C70((uint64_t)v18);
    if (!sub_22265E240(v9)) {
      goto LABEL_25;
    }
    sub_22268EA84(v18);
    if (!sub_22268EA88(v21, a1[25], (uint64_t)v18) || !sub_2225C3B84(v18)) {
      goto LABEL_24;
    }
    sub_222688C3C((uint64_t)a1, a2, 4142, (uint64_t)v17);
    uint64_t v10 = v21;
    goto LABEL_23;
  }
  if ((a3 & 0xFFFFFFFE) != 0xE) {
    goto LABEL_25;
  }
  v18[0] = sub_222659834(v20);
  uint64_t v12 = sub_2225C3C70((uint64_t)v18);
  if (!sub_22265E240(v12)) {
    goto LABEL_25;
  }
  sub_22268EA84(v18);
  if (sub_22268EA88(v20, a1[25], (uint64_t)v18))
  {
    if (sub_2225C3B84(v18))
    {
      uint64_t v13 = (uint64_t)a1;
      unsigned int v14 = a2;
      int v15 = 4293;
LABEL_22:
      sub_222688C3C(v13, v14, v15, (uint64_t)v17);
      uint64_t v10 = v20;
LABEL_23:
      uint64_t v16 = sub_222674270(v10);
      sub_222625214(v17, &v16);
      sub_2225F37F0(v17);
      goto LABEL_24;
    }
    if ((unint64_t)sub_2225C54BC(v18) >= 0x20)
    {
      uint64_t v13 = (uint64_t)a1;
      unsigned int v14 = a2;
      int v15 = 4292;
      goto LABEL_22;
    }
  }
LABEL_24:
  sub_22263E6C8(v18);
LABEL_25:
  sub_22269640C(a1, (uint64_t *)&v21, (uint64_t *)&v20);
  return sub_22267489C(*a1, a2, v21, v20, v19, a3);
}

_DWORD *sub_22268EDB8(uint64_t *a1, int a2, unsigned int a3, unsigned int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v30 = a5;
  uint64_t v28 = sub_222659834((uint64_t)a4);
  uint64_t v27 = sub_222659834(a5);
  uint64_t v12 = sub_222659834(a6);
  uint64_t v26 = v12;
  if (sub_22268824C(&v27, v12))
  {
    uint64_t v13 = sub_222695848(a1, a6, v27);
    if (v13)
    {
      uint64_t v29 = v13;
      sub_222659834(v13);
    }
    else
    {
      uint64_t v14 = sub_222695848(a1, a5, v12);
      if (!v14)
      {
        sub_222688C3C((uint64_t)a1, a3, 2424, (uint64_t)v25);
        uint64_t v20 = sub_222694318((uint64_t)v25, (uint64_t)&v27);
        unint64_t v21 = (void *)sub_222694318(v20, (uint64_t)&v26);
        uint64_t v24 = sub_222674270(a5);
        uint64_t v22 = sub_222625214(v21, &v24);
        uint64_t v23 = sub_222674270(a6);
        sub_222625214(v22, &v23);
        goto LABEL_10;
      }
      uint64_t v30 = v14;
      uint64_t v27 = sub_222659834(v14);
    }
  }
  uint64_t v15 = sub_2225C3C70((uint64_t)&v28);
  if (sub_2226655C4(v15))
  {
    uint64_t v16 = sub_2225C3C70((uint64_t)&v28);
    uint64_t v17 = sub_22265E3C0(v16);
    if (sub_222655AE4(v17) == 7)
    {
      sub_22269640C(a1, &v30, &v29);
      return sub_222674918(*a1, (uint64_t)a4, a2, v30, v29, v27);
    }
  }
  unsigned int v19 = sub_2225C3B40(a4);
  sub_222688C3C((uint64_t)a1, v19, 3007, (uint64_t)v25);
  sub_222694318((uint64_t)v25, (uint64_t)&v28);
LABEL_10:
  sub_2225F37F0(v25);
  return 0;
}

uint64_t sub_22268EF74(uint64_t *a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = a5;
  uint64_t v16 = sub_2226955E8(a1, a3, a4, &v17, a2);
  if (!sub_2225D3DB0(&v16)) {
    return 0;
  }
  if (!sub_2226593F4(a4))
  {
    sub_222688C3C((uint64_t)a1, a2, 3041, (uint64_t)v15);
    uint64_t v14 = sub_222674270(a4);
    sub_222625214(v15, &v14);
    sub_2225F37F0(v15);
    return 0;
  }
  uint64_t v9 = sub_222659320(a4);
  LODWORD(v15[0]) = v9;
  int v10 = sub_222659320(v17);
  LODWORD(v14) = v10;
  if (a3 == 4)
  {
    int v11 = v9;
  }
  else
  {
    uint64_t v13 = (int *)sub_2225C7858(v15, &v14);
    int v10 = v14;
    int v11 = *v13;
    uint64_t v9 = LODWORD(v15[0]);
  }
  if (v10 != v11 && v9)
  {
    if (v10) {
      uint64_t v17 = sub_2226751A8(*a1, v9, v17);
    }
    else {
      sub_22267460C(v17, v9);
    }
  }
  return sub_22267469C(*a1, a2, a4, v17, a3, v11);
}

unsigned int *sub_22268F0C0(uint64_t *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v42 = a4;
  uint64_t v43 = a5;
  sub_222688E1C(v41, a3);
  int v10 = (uint64_t *)sub_22268C824((uint64_t)v41);
  uint64_t v11 = sub_22268F374((uint64_t)v41);
  if (v10 == (uint64_t *)v11) {
    goto LABEL_6;
  }
  uint64_t v12 = (uint64_t *)v11;
  while (1)
  {
    uint64_t v13 = (_WORD *)sub_2225E55A8(*v10);
    uint64_t v14 = sub_2225C3D04((uint64_t)&v42);
    if (v14 == sub_222655F48(v13 + 8))
    {
      uint64_t v15 = sub_2225CC180((uint64_t)(v13 + 8));
      uint64_t v16 = sub_222655EEC((uint64_t)(v13 + 8));
      sub_222672FC0(v40, v15, v16);
      if (sub_22268F37C(v40[0], v40[1], v42, v43)) {
        break;
      }
    }
    if (++v10 == v12) {
      goto LABEL_6;
    }
  }
  if (!v13)
  {
LABEL_6:
    sub_222688C3C((uint64_t)a1, a2, 2703, (uint64_t)v39);
    sub_222635F48(v39, a3);
    uint64_t v17 = v39;
    goto LABEL_7;
  }
  if (sub_2225C3D04((uint64_t)&v42))
  {
    uint64_t v20 = 0;
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = (_DWORD **)sub_222657D6C((uint64_t)(v13 + 8), v21);
      if (sub_222674E70(*v22))
      {
        uint64_t v23 = (uint64_t *)sub_22268F428((uint64_t)&v42, v20);
        if (sub_2226593F4(*v23) != 1) {
          break;
        }
      }
      uint64_t v20 = ++v21;
      if (sub_2225C3D04((uint64_t)&v42) <= (unint64_t)v21) {
        goto LABEL_16;
      }
    }
    uint64_t v31 = (unsigned int **)sub_22268F428((uint64_t)&v42, v20);
    unsigned int v32 = sub_2225C3B40(*v31);
    sub_222688C3C((uint64_t)a1, v32, 2121, (uint64_t)v38);
    sub_2225F37F0(v38);
    uint64_t v33 = (uint64_t *)sub_22268F428((uint64_t)&v42, v20);
    uint64_t v34 = sub_222674824(*v33);
    uint64_t v18 = (unsigned int *)v34;
    if (v34)
    {
      uint64_t v35 = sub_2225C5B40(v34);
      if (sub_2226593F4(v35) != 1) {
        goto LABEL_8;
      }
      unsigned int v36 = sub_2225C3B40(v18);
      sub_222688C3C((uint64_t)a1, v36, 3797, (uint64_t)v37);
      uint64_t v17 = (uint64_t *)v37;
LABEL_7:
      sub_2225F37F0(v17);
LABEL_8:
      uint64_t v18 = 0;
    }
  }
  else
  {
LABEL_16:
    uint64_t v24 = (_DWORD **)sub_2225CC180((uint64_t)(v13 + 8));
    uint64_t v25 = (uint64_t *)sub_22265E3C4(&v42);
    uint64_t v26 = sub_22268F450((uint64_t)&v42);
    if (v25 != (uint64_t *)v26)
    {
      uint64_t v27 = (uint64_t *)v26;
      do
      {
        uint64_t v28 = sub_222655EBC(*v24);
        if (v28) {
          sub_222696164(a1, v25, v28);
        }
        ++v24;
        ++v25;
      }
      while (v25 != v27);
    }
    uint64_t v18 = (unsigned int *)sub_222674CF0(*a1, v13, a2, v42, v43, a6);
    uint64_t v29 = a1[24];
    if (v29)
    {
      v39[0] = sub_222688E6C(v29);
      uint64_t v30 = sub_22268915C((uint64_t)(a1 + 57), v39);
      sub_22268F484(v30, (uint64_t)v18, a1 + 2);
    }
  }
  sub_222688E68(v41);
  return v18;
}

uint64_t sub_22268F374(uint64_t a1)
{
  return sub_2226891D8((unsigned __int8 *)(a1 + 8));
}

uint64_t sub_22268F37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[0] = a1;
  v14[1] = a2;
  v13[0] = a3;
  v13[1] = a4;
  if (!sub_2225C3D04((uint64_t)v14)) {
    return 1;
  }
  uint64_t v4 = 0;
  unsigned int v5 = 1;
  do
  {
    uint64_t v6 = (uint64_t *)sub_2225C6BC0(v14, v4);
    uint64_t v12 = sub_2225C5B40(*v6);
    uint64_t v7 = (uint64_t *)sub_2225C6BC0(v13, v4);
    uint64_t v8 = sub_222659834(*v7);
    int v9 = sub_22268824C(&v12, v8);
    if (v9) {
      break;
    }
    uint64_t v4 = v5;
  }
  while (sub_2225C3D04((uint64_t)v14) > (unint64_t)v5++);
  return v9 ^ 1u;
}

uint64_t sub_22268F428(uint64_t a1, uint64_t a2)
{
  return sub_2225CC180(a1) + 8 * a2;
}

uint64_t sub_22268F450(uint64_t a1)
{
  uint64_t v2 = sub_2225CC180(a1);
  return v2 + 8 * sub_2225C3D04(a1);
}

uint64_t sub_22268F484(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v13 = a2;
  sub_222690014((uint64_t)&v12, (uint64_t)a3);
  if (sub_222689D88(a1, v5))
  {
    sub_222689C8C(a1, &v13);
  }
  else
  {
    uint64_t v11 = sub_22268CECC((unsigned __int8 *)a1);
    if (v11)
    {
      sub_222690018(a1, a3);
      uint64_t v8 = (void *)sub_222657F58(a1, v7);
      sub_222690080(v8, &v11, &v12);
    }
    int v9 = (void *)sub_222657F58(a1, v6);
    sub_222690080(v9, &v13, &v12);
  }
  return sub_2226900D8(&v12);
}

void sub_22268F528(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  v52[0] = a3;
  v52[1] = a4;
  if (!*(void *)sub_22268F428((uint64_t)v52, 0)
    || (uint64_t v6 = sub_22268F428((uint64_t)v52, 0), (sub_222659E20(v6) & 1) == 0))
  {
    sub_222688C3C(a1, a2, 1758, (uint64_t)v51);
    uint64_t v17 = v51;
    goto LABEL_8;
  }
  uint64_t v7 = (uint64_t *)sub_22268F428((uint64_t)v52, 0);
  uint64_t v8 = sub_2225E55A8(*v7);
  uint64_t v9 = sub_2225C3D04(v8);
  v50[0] = sub_222654540(v9);
  v50[1] = v10;
  sub_2225C3D00((int)v49, "type_is_");
  if (sub_2225D0520((uint64_t)v50, v49[0], (size_t)v49[1]))
  {
    uint64_t v11 = sub_2225E1AC8(v50, 8uLL);
    uint64_t v13 = v12;
    sub_2225CAD04(&v48);
    uint64_t v14 = (uint64_t *)sub_22268F428((uint64_t)v52, 1);
    v46[0] = sub_222659834(*v14);
    uint64_t v15 = (unsigned char *)sub_2225C3C70((uint64_t)v46);
    sub_222687130(v15, (uint64_t)&v48);
    sub_2225CCBF8(v47, &v48);
    if (sub_2225D1680(v11, v13, v47[0], (size_t)v47[1]))
    {
      sub_222688C3C(a1, a2, 1757, (uint64_t)v46);
      uint64_t v16 = sub_2225F3774(v46, v11, v13);
      sub_2225CCBF8(v45, &v48);
      sub_2225F3774(v16, v45[0], v45[1]);
      sub_2225F37F0(v46);
    }
    std::string::~string(&v48);
    return;
  }
  sub_2225C3D00((int)v44, "precision_is_");
  if (!sub_2225D0520((uint64_t)v50, v44[0], (size_t)v44[1]))
  {
    sub_2225C3D00((int)v32, "sa_failed");
    if (sub_2225D0520((uint64_t)v50, v32[0], (size_t)v32[1]))
    {
      if (!*(void *)sub_22268F428((uint64_t)v52, 1)) {
        return;
      }
      sub_222688C3C(a1, a2, 1756, (uint64_t)v31);
      uint64_t v17 = v31;
    }
    else
    {
      sub_222688C3C(a1, a2, 1758, (uint64_t)v30);
      uint64_t v17 = v30;
    }
LABEL_8:
    sub_2225F37F0(v17);
    return;
  }
  uint64_t v18 = (uint64_t *)sub_22268F428((uint64_t)v52, 1);
  unsigned int v19 = sub_222659320(*v18);
  uint64_t v20 = sub_2225E1AC8(v50, 0xDuLL);
  uint64_t v22 = v21;
  sub_2225D934C(&v48, v20, v21);
  int v42 = 1;
  sub_22268F920((uint64_t)v46, &v42);
  uint64_t v23 = sub_2225D9520((uint64_t)&v48, "lowp", (uint64_t)v46);
  int v40 = 2;
  sub_22268F920((uint64_t)v41, &v40);
  uint64_t v24 = sub_2225D9350(v23, "mediump", (uint64_t)v41);
  int v38 = 3;
  sub_22268F920((uint64_t)v39, &v38);
  uint64_t v25 = sub_2225D9438(v24, (uint64_t)"highp", (uint64_t)v39);
  int v36 = 0;
  sub_22268F920((uint64_t)v37, &v36);
  uint64_t v26 = sub_2225D94AC(v25, (unsigned __int16 *)"nop", (uint64_t)v37);
  sub_22268F938((uint64_t)v35);
  sub_22268F924(v26, (uint64_t)v35, (uint64_t)v43);
  sub_22268F93C(v35);
  sub_22268F93C(v37);
  sub_22268F93C(v39);
  sub_22268F93C(v41);
  sub_22268F93C(v46);
  if (sub_22264B7DC((uint64_t)v43))
  {
    if (*(_DWORD *)j_nullsub_1(v43, v27) != v19)
    {
      uint64_t v28 = sub_2225CAD04(&v48);
      if (v19 <= 3) {
        sub_2225CBC18(v28, (&off_264626328)[v19]);
      }
      sub_222688C3C(a1, a2, 1755, (uint64_t)v46);
      uint64_t v29 = sub_2225F3774(v46, v20, v22);
      sub_2225CCBF8(v33, &v48);
      sub_2225F3774(v29, v33[0], v33[1]);
      sub_2225F37F0(v46);
      std::string::~string(&v48);
    }
  }
  else
  {
    sub_222688C3C(a1, a2, 1758, (uint64_t)v34);
    sub_2225F37F0(v34);
  }
  sub_22268F93C(v43);
}

uint64_t sub_22268F924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16)) {
    a2 = *(void *)(a1 + 16);
  }
  return sub_222690310(a3, a2);
}

uint64_t sub_22268F940(uint64_t *a1, unsigned int a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  uint64_t v11 = (_WORD *)sub_22265D828(*a1, a4);
  if (!sub_22268C5CC(v11))
  {
    sub_22268C5D0(v11);
    int v19 = sub_22268FD2C(v11);
    char v20 = v19;
    uint64_t v51 = sub_222698470(a1, v19, a5, a6, a2);
    if (sub_2225D3DB0(&v51))
    {
      uint64_t v21 = (uint64_t *)sub_22265E3C4(&v53);
      char v22 = sub_222659320(*v21);
      return sub_222674FB4(*a1, v20, v51, v22, a2, v53, v54, a3);
    }
    return 0;
  }
  int v52 = sub_22268FCD0(v11);
  uint64_t v51 = sub_222698884(a1, &v52, a5, a6, a2);
  if (!sub_2225D3DB0(&v51)) {
    return 0;
  }
  char v12 = 3;
  switch(v52)
  {
    case '.':
    case '0':
      goto LABEL_31;
    case '/':
    case '1':
      uint64_t v13 = (uint64_t *)sub_22268F428((uint64_t)&v53, 0);
      sub_222696164(a1, v13, 3);
      uint64_t v14 = *a1;
      char v15 = v52;
      uint64_t v16 = v51;
      sub_22261870C(v49, (uint64_t)v13);
      uint64_t v17 = v49[0];
      uint64_t v18 = v49[1];
      goto LABEL_11;
    case '2':
      uint64_t v24 = (uint64_t *)sub_22268F428((uint64_t)&v53, 0);
      sub_222696164(a1, v24, 2);
      uint64_t v14 = *a1;
      char v15 = v52;
      uint64_t v16 = v51;
      sub_22261870C(v48, (uint64_t)v24);
      uint64_t v17 = v48[0];
      uint64_t v18 = v48[1];
LABEL_11:
      int v25 = a3;
      uint64_t v26 = v14;
      char v27 = v15;
      uint64_t v28 = v16;
      char v12 = 3;
      return sub_222674EB4(v26, v27, v28, v12, a2, v17, v18, v25);
    case '3':
      uint64_t v29 = (uint64_t *)sub_22268F428((uint64_t)&v53, 0);
      sub_222696164(a1, v29, 3);
      uint64_t v30 = *a1;
      char v31 = v52;
      uint64_t v32 = v51;
      sub_22261870C(v47, (uint64_t)v29);
      uint64_t v17 = v47[0];
      uint64_t v18 = v47[1];
      int v25 = a3;
      uint64_t v26 = v30;
      char v27 = v31;
      uint64_t v28 = v32;
      char v12 = 2;
      return sub_222674EB4(v26, v27, v28, v12, a2, v17, v18, v25);
    default:
      if (v52 == 74)
      {
        sub_22268F528((uint64_t)a1, a2, v53, v54);
        return 0;
      }
      uint64_t v33 = sub_2226960CC(v53, v54);
      if (v33) {
        goto LABEL_14;
      }
      uint64_t v39 = (uint64_t *)sub_22265E3C4(&v53);
      uint64_t v40 = sub_22268F450((uint64_t)&v53);
      if (v39 == (uint64_t *)v40) {
        goto LABEL_24;
      }
      unsigned int v41 = (uint64_t *)v40;
      break;
  }
  while (1)
  {
    uint64_t v42 = *v39;
    uint64_t v50 = sub_222659834(*v39);
    uint64_t v43 = sub_2225C3C70((uint64_t)&v50);
    if (sub_222687720(v43)) {
      break;
    }
    if (++v39 == v41)
    {
LABEL_24:
      char v38 = 0;
      LOBYTE(v33) = 0;
      goto LABEL_25;
    }
  }
  uint64_t v46 = sub_222659834(v42);
  uint64_t v33 = sub_22268FCD4((uint64_t)a1, v46);
  if (v33)
  {
LABEL_14:
    uint64_t v34 = (uint64_t *)sub_22265E3C4(&v53);
    uint64_t v35 = sub_22268F450((uint64_t)&v53);
    if (v34 != (uint64_t *)v35)
    {
      int v36 = (uint64_t *)v35;
      do
      {
        uint64_t v50 = sub_222659834(*v34);
        uint64_t v37 = sub_2225C3C70((uint64_t)&v50);
        if (sub_222687720(v37)) {
          sub_222696164(a1, v34, v33);
        }
        ++v34;
      }
      while (v34 != v36);
    }
    char v38 = 1;
  }
  else
  {
    char v38 = 0;
  }
LABEL_25:
  uint64_t v44 = sub_2225C3C70((uint64_t)&v51);
  int v45 = sub_222687720(v44);
  if (v45) {
    char v12 = v33;
  }
  else {
    char v12 = 0;
  }
  if ((v38 & 1) == 0)
  {
    if (v45) {
      char v12 = sub_22268FCD4((uint64_t)a1, v51);
    }
  }
LABEL_31:
  uint64_t v26 = *a1;
  char v27 = v52;
  uint64_t v28 = v51;
  int v25 = a3;
  uint64_t v17 = v53;
  uint64_t v18 = v54;
  return sub_222674EB4(v26, v27, v28, v12, a2, v17, v18, v25);
}

uint64_t sub_22268FCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v3 = sub_2225C3C70((uint64_t)&v9);
  uint64_t v8 = sub_22268742C(v3);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v8);
  uint64_t v5 = sub_22265E3C0(v4);
  int v6 = sub_222655AE4(v5);
  return sub_22268EAB0(*(void *)(a1 + 184), v6);
}

BOOL sub_22268FD30(_DWORD *a1)
{
  return (*a1 & 0x1F000) != 0;
}

BOOL sub_22268FD40(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 2) & 0x7E) != 0;
}

_DWORD *sub_22268FD50(_DWORD *a1)
{
  unint64_t result = sub_2225CAC54(a1);
  *((unsigned char *)result + 16) = 0;
  return result;
}

uint64_t sub_22268FD6C(_DWORD *a1)
{
  return *a1 & 0x7F;
}

uint64_t sub_22268FD78(_DWORD *a1)
{
  return (*a1 >> 7) & 0x1F;
}

uint64_t sub_22268FD88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_22268FDB4(&v3);
}

uint64_t sub_22268FDB4(void *a1)
{
  return sub_22268FDBC(*a1);
}

BOOL sub_22268FDC4(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 1;
}

uint64_t sub_22268FDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_22268FE10(&v3);
}

uint64_t sub_22268FE10(void *a1)
{
  return sub_22268FE18(*a1);
}

BOOL sub_22268FE20(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 9;
}

_DWORD *sub_22268FE40(_DWORD *a1, uint64_t a2, int a3, char a4)
{
  return sub_22268FE48(a1, a2, a3, a4);
}

_DWORD *sub_22268FE48(_DWORD *a1, uint64_t a2, int a3, char a4)
{
  unint64_t result = sub_222675500(a1, 2, 0, 0, a3);
  *((void *)result + 1) = a2;
  *((unsigned char *)result + 16) = a4;
  return result;
}

uint64_t sub_22268FE8C()
{
  return sub_2225C69CC();
}

_DWORD *sub_22268FE94(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_22268FE9C(a1, a2, a3, a4);
}

_DWORD *sub_22268FE9C(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7 = sub_222675500(a1, 4, 0, 0, a3);
  *((void *)v7 + 1) = a2;
  sub_2225C2E64(v7 + 4, a4);
  return a1;
}

_DWORD *sub_22268FEF4(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_22268FEFC(a1, a2, a3, a4);
}

_DWORD *sub_22268FEFC(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7 = sub_222675500(a1, 3, 0, 0, a3);
  *((void *)v7 + 1) = a2;
  sub_2225C2E64(v7 + 4, a4);
  return a1;
}

_DWORD *sub_22268FF54(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_22268FF5C(a1, a2, a3, a4);
}

_DWORD *sub_22268FF5C(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7 = sub_222675500(a1, 0, 0, 0, a3);
  *((void *)v7 + 1) = a2;
  sub_2225C3B80(v7 + 4, a4);
  return a1;
}

_DWORD *sub_22268FFB4(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_22268FFBC(a1, a2, a3, a4);
}

_DWORD *sub_22268FFBC(_DWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7 = sub_222675500(a1, 1, 0, 0, a3);
  *((void *)v7 + 1) = a2;
  sub_2225C3B80(v7 + 4, a4);
  return a1;
}

uint64_t sub_222690018(uint64_t *a1, uint64_t *a2)
{
  sub_222690014((uint64_t)v7, (uint64_t)a2);
  uint64_t v4 = sub_2225CC520(a2, 24, 8uLL);
  uint64_t v6 = sub_222690148(v4, v7, 8);
  sub_22269014C(a1, &v6);
  return sub_2226900D8(v7);
}

void *sub_222690080(void *result, void *a2, void *a3)
{
  uint64_t v4 = result;
  uint64_t v5 = (void *)result[1];
  if ((unint64_t)v5 >= result[2])
  {
    unint64_t result = sub_2226901DC((const void **)result, a3, 1uLL);
    uint64_t v5 = (void *)v4[1];
  }
  *uint64_t v5 = *a2;
  v4[1] += 8;
  return result;
}

uint64_t sub_2226900DC(uint64_t a1, uint64_t a2)
{
  return sub_2226900E4(a1, a2, 0);
}

uint64_t *sub_2226900E8(uint64_t *a1, uint64_t a2, unsigned int a3)
{
  return a1;
}

uint64_t sub_222690110(uint64_t *a1, uint64_t a2, unsigned int a3)
{
  uint64_t result = nullsub_1(a2, a2);
  *a1 = result | (2 * a3);
  return result;
}

uint64_t *sub_22269014C(uint64_t *a1, void *a2)
{
  uint64_t v3 = nullsub_1(*a2, a2);
  sub_222630B70(a1, v3, 1);
  return a1;
}

uint64_t sub_222690188(uint64_t a1, void *a2, unsigned int a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_2226901B8((const void **)a1, a2, a3);
  return a1;
}

const void **sub_2226901B8(const void **result, void *a2, unsigned int a3)
{
  if (((unint64_t)((unsigned char *)result[2] - (unsigned char *)*result) >> 3) < a3) {
    return (const void **)sub_2226901DC(result, a2, a3);
  }
  return result;
}

void *sub_2226901DC(const void **a1, void *a2, unint64_t a3)
{
  uint64_t v6 = (unsigned char *)a1[2] - (unsigned char *)*a1;
  uint64_t v8 = sub_2225D4970(a1);
  if (v6 >> 2 > a3) {
    a3 = v6 >> 2;
  }
  uint64_t v9 = sub_22261964C(a2, v7);
  uint64_t v10 = (char *)sub_22263C7AC(v9, a3);
  uint64_t result = memcpy(v10, *a1, 8 * v8);
  *a1 = v10;
  a1[1] = &v10[8 * v8];
  a1[2] = &v10[8 * a3];
  return result;
}

void *sub_222690264(void *a1)
{
  if (sub_22268CD78(a1))
  {
    uint64_t v3 = sub_222608790(a1, v2);
    if (v3)
    {
      uint64_t v4 = (void *)sub_2225E1434(v3);
      j__free(v4);
    }
  }
  return a1;
}

uint64_t sub_2226902A4(uint64_t result, _DWORD *a2)
{
  *(unsigned char *)(result + 4) = 1;
  *(_DWORD *)uint64_t result = *a2;
  return result;
}

uint64_t sub_2226902B8(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_2226902E0(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + 4))
  {
    uint64_t v2 = result;
    uint64_t result = j_nullsub_1(result, a2);
    *(unsigned char *)(v2 + 4) = 0;
  }
  return result;
}

uint64_t sub_222690314(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 4);
  *(unsigned char *)(a1 + 4) = v3;
  if (v3) {
    *(_DWORD *)a1 = *(_DWORD *)j_nullsub_1(a2, a2);
  }
  return a1;
}

uint64_t sub_222690354(uint64_t result)
{
  *(unsigned char *)(result + 4) = 0;
  return result;
}

uint64_t sub_22269035C(uint64_t *a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned int v10 = sub_22264FEFC(a1[1]);
  uint64_t v11 = sub_22265D828(*a1, a2);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  uint64_t v13 = sub_22265D8D8(v11, v12);
  if ((v13 & 1) == 0)
  {
    sub_222688C3C((uint64_t)a1, a5, 3183, (uint64_t)v17);
    uint64_t v14 = sub_2225F3774(v17, a3, a4);
    unsigned int v15 = sub_222651018(v10);
    sub_2226256C4(v14, v15);
    sub_2225F37F0(v17);
  }
  return v13;
}

BOOL sub_222690424(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v9 = sub_222650628(*(void *)(a1 + 8), a2);
  if (!v9)
  {
    sub_222688C3C(a1, a5, 2222, (uint64_t)v14);
    unsigned int v10 = sub_2225F3774(v14, a3, a4);
    unsigned int v11 = sub_22264FEFC(*(void *)(a1 + 8));
    unsigned int v12 = sub_222651018(v11);
    sub_2226256C4(v10, v12);
    sub_2225F37F0(v14);
  }
  return v9;
}

uint64_t sub_2226904C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v24[11] = *(_DWORD **)MEMORY[0x263EF8340];
  uint64_t v23 = a2;
  uint64_t result = sub_22265592C(a2);
  if (result)
  {
    uint64_t v7 = sub_2226906F8(a1, a2);
    if (sub_22268AA00(a1))
    {
      sub_222688E1C(v24, v7);
      BOOL v8 = sub_22268B3E4(v24);
      sub_222688E68(v24);
      if (v8)
      {
        unsigned int v9 = sub_222613380(a2);
        sub_222688C3C(a1, v9, 2789, (uint64_t)v24);
        sub_222635F48((uint64_t *)v24, v7);
        sub_2225F37F0(v24);
      }
    }
    sub_222690770(a3, a2);
    sub_222688E1C(v22, v7);
    if (sub_222658084(&v23)
      && sub_22268C67C((uint64_t)v22, v10)
      && ((uint64_t v11 = sub_22268B924((uint64_t)v22), !sub_22268A05C(a3, v11))
       || (unsigned int v12 = (uint64_t *)sub_22268C824((uint64_t)v22), !sub_22268A05C(a3, *v12))))
    {
      sub_22265B918(v24);
      uint64_t v13 = (uint64_t *)sub_22268C824((uint64_t)v22);
      uint64_t v14 = sub_22268F374((uint64_t)v22);
      if (v13 != (uint64_t *)v14)
      {
        uint64_t v16 = (uint64_t *)v14;
        while (sub_22268A05C(a3, *v13))
        {
          sub_2225CC7B8((uint64_t)v24, v13++);
          if (v13 == v16) {
            goto LABEL_17;
          }
        }
        sub_2225CC7B8((uint64_t)v24, &v23);
        sub_2226907D8((const void **)v24, v13, v16);
      }
LABEL_17:
      while (sub_22268C67C((uint64_t)v22, v15))
        sub_22269088C((uint64_t)v22);
      uint64_t v17 = (uint64_t *)sub_2225C3C70((uint64_t)v24);
      uint64_t v18 = sub_2225C3D04((uint64_t)v24);
      if (v17 != (uint64_t *)v18)
      {
        int v19 = (uint64_t *)v18;
        char v20 = (uint64_t *)(a1 + 16);
        do
        {
          uint64_t v21 = *v17++;
          sub_222690778(v22, v21, v20);
        }
        while (v17 != v19);
      }
      sub_2225C56C4(v24);
    }
    else
    {
      sub_222690778(v22, v23, (uint64_t *)(a1 + 16));
    }
    return sub_222688E68(v22);
  }
  return result;
}

uint64_t sub_2226906F8(uint64_t a1, uint64_t a2)
{
  if (!sub_22265592C(a2)) {
    return 0;
  }
  uint64_t v4 = sub_222690A98(*(void *)(a1 + 160));
  uint64_t v6 = sub_222654540(a2);

  return sub_2225F2E2C(v4, v6, v5);
}

uint64_t sub_222690770(uint64_t a1, uint64_t a2)
{
  return sub_222689E60(a1 + 40, a2);
}

uint64_t sub_222690778(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = (uint64_t)(a1 + 1);
  uint64_t v7 = a1[1];
  sub_22268F484(a1 + 1, a2, a3);
  uint64_t v5 = sub_2225CC180(v4);
  uint64_t result = sub_2225CC180((uint64_t)&v7);
  if (v5 != result) {
    return sub_2226897F4(a1);
  }
  return result;
}

uint64_t sub_2226907D8(const void **a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v6 = sub_2225D5C78((uint64_t)a2, (uint64_t)a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > (v7 - sub_2225C3D04((uint64_t)a1)) >> 3)
  {
    uint64_t v8 = sub_2225CC780((uint64_t)a1);
    sub_2225CC828(a1, v8 + v6);
  }
  unsigned int v9 = (void *)sub_2225C3D04((uint64_t)a1);
  sub_222691B18(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + 8 * v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t *sub_22269088C(uint64_t a1)
{
  return sub_222691A24((uint64_t *)(a1 + 8));
}

uint64_t sub_222690894(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22265592C(a2);
  if (result)
  {
    uint64_t result = sub_2226906F8(a1, a2);
    if (result)
    {
      sub_222688E1C(v7, result);
      if ((sub_22268B91C((uint64_t)v7, v5) & 1) == 0 && sub_22268B924((uint64_t)v7) == a2) {
        sub_22269088C((uint64_t)v7);
      }
      if (sub_22268B91C((uint64_t)v7, v6)) {
        sub_222688E20(v7);
      }
      return sub_222688E68(v7);
    }
  }
  return result;
}

uint64_t sub_222690928(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_222688E1C(v25, a2);
  if (sub_22268B91C(v4, v5))
  {
    uint64_t v6 = sub_2225C3D04((uint64_t)a1);
    if (!sub_222690A70(v6)) {
      goto LABEL_9;
    }
    v24[0] = sub_2225F2418(a2);
    v24[1] = v7;
    sub_2225C3D00((int)v23, "type_is_");
    if (!sub_2225D0520((uint64_t)v24, v23[0], (size_t)v23[1]))
    {
      v22[0] = sub_2225F2418(a2);
      v22[1] = v8;
      sub_2225C3D00((int)v21, "precision_is_");
      if (!sub_2225D0520((uint64_t)v22, v21[0], (size_t)v21[1]))
      {
        v20[0] = sub_2225F2418(a2);
        v20[1] = v9;
        sub_2225C3D00((int)v19, "sa_failed");
        if (!sub_2225D0520((uint64_t)v20, v19[0], (size_t)v19[1]))
        {
LABEL_9:
          uint64_t v17 = 0;
          goto LABEL_10;
        }
      }
    }
    sub_2225F3278(v24);
    uint64_t v10 = *a1;
    int v11 = v24[0];
    uint64_t v12 = sub_2225F2418(a2);
    uint64_t v14 = v13;
    uint64_t v15 = sub_222687C14(*a1, 2);
    uint64_t v16 = (uint64_t)sub_222672574(v10, v11, v12, v14, v15);
  }
  else
  {
    uint64_t v16 = sub_22268B924((uint64_t)v25);
  }
  uint64_t v17 = v16;
LABEL_10:
  sub_222688E68(v25);
  return v17;
}

BOOL sub_222690A70(uint64_t a1)
{
  uint64_t v1 = (_WORD *)sub_222691A90(a1);

  return sub_22265057C(v1);
}

uint64_t sub_222690A98(uint64_t a1)
{
  return a1 + 440;
}

uint64_t sub_222690AA0(uint64_t a1)
{
  if (a1) {
    return sub_2225F2418(a1);
  }
  sub_2225C3D00((int)&v2, &byte_2226D1615);
  return v2;
}

uint64_t sub_222690ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned __int8 *)sub_222690B7C(a2);
  if (v4)
  {
    uint64_t v5 = sub_222659C34(v4);
    sub_222690BB8(&v10, v5);
  }
  else
  {
    uint64_t v6 = sub_222688DE0(a2);
    if (v6)
    {
      uint64_t v7 = sub_2226906F8(a1, v6);
      sub_222690BBC((uint64_t)&v10, v7, 1);
    }
    else
    {
      uint64_t v8 = sub_22268AA14(a2);
      if (v8 || (uint64_t v8 = sub_22268D934(a2)) != 0) {
        sub_222690BC0((uint64_t)&v10, v8);
      }
    }
  }
  return v10;
}

uint64_t sub_222690B7C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222691BB0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222690BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v52[0] = a2;
  v52[1] = a3;
  unsigned int v51 = sub_2225C3D04((uint64_t)v52);
  v50[0] = v52;
  v50[1] = &v51;
  void v50[2] = a4;
  void v50[3] = a1;
  sub_2225C3D00((int)v49, "void");
  sub_222691180((uint64_t)v50, v49[0], v49[1], 2);
  sub_2225C3D00((int)v48, "float");
  sub_222691180((uint64_t)v50, v48[0], v48[1], 3);
  sub_2225C3D00((int)v47, "half");
  sub_222691180((uint64_t)v50, v47[0], v47[1], 4);
  sub_2225C3D00((int)v46, "int");
  sub_222691180((uint64_t)v50, v46[0], v46[1], 5);
  sub_2225C3D00((int)v45, "uint");
  sub_222691180((uint64_t)v50, v45[0], v45[1], 6);
  sub_2225C3D00((int)v44, "BOOL");
  sub_222691180((uint64_t)v50, v44[0], v44[1], 7);
  sub_2225C3D00((int)v43, "vec2");
  sub_222691180((uint64_t)v50, v43[0], v43[1], 8);
  sub_2225C3D00((int)v42, "vec3");
  sub_222691180((uint64_t)v50, v42[0], v42[1], 9);
  sub_2225C3D00((int)v41, "vec4");
  sub_222691180((uint64_t)v50, v41[0], v41[1], 10);
  sub_2225C3D00((int)v40, "hvec2");
  sub_222691180((uint64_t)v50, v40[0], v40[1], 11);
  sub_2225C3D00((int)v39, "hvec3");
  sub_222691180((uint64_t)v50, v39[0], v39[1], 12);
  sub_2225C3D00((int)v38, "hvec4");
  sub_222691180((uint64_t)v50, v38[0], v38[1], 13);
  sub_2225C3D00((int)v37, "ivec2");
  sub_222691180((uint64_t)v50, v37[0], v37[1], 14);
  sub_2225C3D00((int)v36, "ivec3");
  sub_222691180((uint64_t)v50, v36[0], v36[1], 15);
  sub_2225C3D00((int)v35, "ivec4");
  sub_222691180((uint64_t)v50, v35[0], v35[1], 16);
  sub_2225C3D00((int)v34, "uvec2");
  sub_222691180((uint64_t)v50, v34[0], v34[1], 17);
  sub_2225C3D00((int)v33, "uvec3");
  sub_222691180((uint64_t)v50, v33[0], v33[1], 18);
  sub_2225C3D00((int)v32, "uvec4");
  sub_222691180((uint64_t)v50, v32[0], v32[1], 19);
  sub_2225C3D00((int)v31, "bvec2");
  sub_222691180((uint64_t)v50, v31[0], v31[1], 20);
  sub_2225C3D00((int)v30, "bvec3");
  sub_222691180((uint64_t)v50, v30[0], v30[1], 21);
  sub_2225C3D00((int)v29, "bvec4");
  sub_222691180((uint64_t)v50, v29[0], v29[1], 22);
  sub_2225C3D00((int)v28, "mat2");
  sub_222691180((uint64_t)v50, v28[0], v28[1], 23);
  sub_2225C3D00((int)v27, "mat3");
  sub_222691180((uint64_t)v50, v27[0], v27[1], 24);
  sub_2225C3D00((int)v26, "mat4");
  sub_222691180((uint64_t)v50, v26[0], v26[1], 25);
  sub_2225C3D00((int)v25, "mat2x3");
  sub_222691180((uint64_t)v50, v25[0], v25[1], 26);
  sub_2225C3D00((int)v24, "mat2x4");
  sub_222691180((uint64_t)v50, v24[0], v24[1], 27);
  sub_2225C3D00((int)v23, "mat3x2");
  sub_222691180((uint64_t)v50, v23[0], v23[1], 28);
  sub_2225C3D00((int)v22, "mat3x4");
  sub_222691180((uint64_t)v50, v22[0], v22[1], 29);
  sub_2225C3D00((int)v21, "mat4x2");
  sub_222691180((uint64_t)v50, v21[0], v21[1], 30);
  sub_2225C3D00((int)v20, "mat4x3");
  sub_222691180((uint64_t)v50, v20[0], v20[1], 31);
  sub_2225C3D00((int)v19, "hmat2");
  sub_222691180((uint64_t)v50, v19[0], v19[1], 32);
  sub_2225C3D00((int)v18, "hmat3");
  sub_222691180((uint64_t)v50, v18[0], v18[1], 33);
  sub_2225C3D00((int)v17, "hmat4");
  sub_222691180((uint64_t)v50, v17[0], v17[1], 34);
  sub_2225C3D00((int)v16, "hmat2x3");
  sub_222691180((uint64_t)v50, v16[0], v16[1], 35);
  sub_2225C3D00((int)v15, "hmat2x4");
  sub_222691180((uint64_t)v50, v15[0], v15[1], 36);
  sub_2225C3D00((int)v14, "hmat3x2");
  sub_222691180((uint64_t)v50, v14[0], v14[1], 37);
  sub_2225C3D00((int)v13, "hmat3x4");
  sub_222691180((uint64_t)v50, v13[0], v13[1], 38);
  sub_2225C3D00((int)v12, "hmat4x2");
  sub_222691180((uint64_t)v50, v12[0], v12[1], 39);
  sub_2225C3D00((int)v11, "hmat4x3");
  sub_222691180((uint64_t)v50, v11[0], v11[1], 40);
  sub_2225C3D00((int)v10, "sampler");
  sub_222691180((uint64_t)v50, v10[0], v10[1], 41);
  sub_2225C3D00((int)v9, "hsampler");
  sub_222691180((uint64_t)v50, v9[0], v9[1], 42);
  sub_2225C3D00((int)v8, "sampler2D");
  sub_222691180((uint64_t)v50, v8[0], v8[1], 43);
  sub_2225C3D00((int)v7, "hsampler2D");
  sub_222691180((uint64_t)v50, v7[0], v7[1], 44);
  return v51;
}

unint64_t sub_222691180(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v15[0] = a2;
  v15[1] = a3;
  uint64_t v6 = *(uint64_t **)(a1 + 24);
  unsigned int v7 = sub_2225D82D4(*(void *)a1, a2, a3, 1, **(_DWORD **)(a1 + 8));
  unint64_t result = sub_2225C3D04((uint64_t)v15);
  if (v7 <= 5 && result > v7)
  {
    uint64_t v10 = *(unsigned int **)(a1 + 8);
    if (v7 >= *v10)
    {
      if (v7 != *v10) {
        return result;
      }
    }
    else
    {
      unsigned int *v10 = v7;
      sub_2225C5D90(*(void **)(a1 + 16));
    }
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v13 = sub_222687C14(*v6, a4);
    uint64_t v12 = sub_2225C3C70((uint64_t)&v13);
    uint64_t v14 = sub_222655B10(v12);
    return sub_2225CC7B8(v11, &v14);
  }
  return result;
}

uint64_t sub_222691248(uint64_t a1, uint64_t a2, unsigned int a3, unsigned __int8 *a4)
{
  v62[67] = *MEMORY[0x263EF8340];
  v62[0] = sub_2225F2418(a2);
  v62[1] = v8;
  unsigned int v9 = sub_2225C3D04((uint64_t)v62);
  sub_2226916C8(v62);
  sub_2225D3DAC(v61);
  if (*a4)
  {
    uint64_t v10 = sub_2225F2418(a2);
    unsigned int v9 = sub_222690BC4(a1, v10, v11, (uint64_t)v61);
    uint64_t v12 = (uint64_t *)sub_2225C3C70((uint64_t)v61);
    uint64_t v13 = sub_2225C3D04((uint64_t)v61);
    if (v12 != (uint64_t *)v13)
    {
      uint64_t v14 = (uint64_t *)v13;
      do
      {
        uint64_t v15 = *v12++;
        sub_2225C64B8(&v60, v15);
        sub_222690BB8(&v50, v60);
        v50.__r_.__value_.__r.__words[2] = sub_222688054(v15);
        uint64_t v51 = v16;
        sub_2226916CC((uint64_t)v62, &v50);
      }
      while (v12 != v14);
    }
  }
  sub_222648734(v59, 0);
  uint64_t v17 = *(void *)(a1 + 184);
  if (v17)
  {
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = sub_2225F3D8C(v17);
      *(void *)&long long v55 = sub_2226403CC(v19);
      *((void *)&v55 + 1) = v20;
      v54.__r_.__value_.__r.__words[0] = sub_222640400(v19);
      v54.__r_.__value_.__l.__size_ = v21;
      if (sub_2225DE624(&v55, &v54)) {
        break;
      }
LABEL_24:
      uint64_t v17 = sub_2225C3C70(v17);
      ++v18;
      if (!v17) {
        goto LABEL_25;
      }
    }
    while (1)
    {
      uint64_t v23 = sub_222688DD4((void **)&v55, v22);
      if (sub_22265592C(v23))
      {
        uint64_t v58 = 0;
        uint64_t v58 = sub_2226906F8(a1, v23);
        v50.__r_.__value_.__r.__words[0] = sub_2225F2418(a2);
        v50.__r_.__value_.__l.__size_ = v24;
        uint64_t v25 = sub_2225F2418(v58);
        unsigned int v27 = sub_2225D82D4((uint64_t)&v50, v25, v26, 1, v9);
        v50.__r_.__value_.__r.__words[0] = sub_2225F2418(v58);
        v50.__r_.__value_.__l.__size_ = v28;
        unint64_t v29 = sub_2225C3D04((uint64_t)&v50);
        BOOL v30 = v27 <= 5 && v29 > v27;
        if (v30 && v27 <= v9)
        {
          sub_2226493B8((uint64_t)v59, &v58, (uint64_t)&v53);
          sub_22264942C((uint64_t)v59, (uint64_t)v57);
          sub_2225F8068(&v50, v57);
          if (!sub_2225F9558((uint64_t *)&v53, (uint64_t)&v50))
          {
            *(_DWORD *)sub_2226492C0((uint64_t)v59, &v58) = v18;
LABEL_20:
            if (v27 < v9)
            {
              sub_2225DDE10(v62);
              unsigned int v9 = v27;
            }
            v50.__r_.__value_.__r.__words[0] = sub_222690ADC(a1, v23);
            v50.__r_.__value_.__l.__size_ = v32;
            v50.__r_.__value_.__r.__words[2] = sub_2225F2418(v58);
            uint64_t v51 = v33;
            sub_2226916CC((uint64_t)v62, &v50);
            goto LABEL_23;
          }
          if (*(_DWORD *)(sub_2225C3C70((uint64_t)&v53) + 8) >= v18) {
            goto LABEL_20;
          }
        }
      }
LABEL_23:
      sub_222640444(&v55);
      if (!sub_2225DE624(&v55, &v54)) {
        goto LABEL_24;
      }
    }
  }
LABEL_25:
  uint64_t v34 = (unsigned int *)sub_2225C3C70((uint64_t)v62);
  uint64_t v35 = (unsigned int *)sub_2225C3D04((uint64_t)v62);
  int v36 = sub_22269178C(v34, v35, a4);
  uint64_t v37 = sub_2225C3D04((uint64_t)v62);
  sub_222691738((uint64_t)v62, (uint64_t)v36, v37);
  if (!sub_2225CF1D0(v62)
    && (uint64_t v38 = sub_2225C3C70((uint64_t)v62) + 32,
        uint64_t v39 = sub_2225C3D04((uint64_t)v62),
        uint64_t v40 = sub_222691830(v38, v39, (uint64_t)v62),
        v40 == sub_2225C3D04((uint64_t)v62)))
  {
    if ((*a4 & 2) != 0) {
      int v43 = 3108;
    }
    else {
      int v43 = 3138;
    }
    if ((*a4 & 4) != 0) {
      int v44 = 3136;
    }
    else {
      int v44 = v43;
    }
    int v45 = (long long *)sub_2225CC180((uint64_t)v62);
    long long v46 = v45[1];
    long long v55 = *v45;
    long long v56 = v46;
    sub_2225CACE8(&v56, (uint64_t)&v53);
    sub_2225D1E74("'", &v53, (uint64_t)&v50);
    sub_2225D169C(&v50, "'", (uint64_t)&v54);
    std::string::~string(&v50);
    std::string::~string(&v53);
    sub_222688C3C(a1, a3, v44, (uint64_t)&v53);
    uint64_t v47 = sub_222635F48((uint64_t *)&v53, a2);
    sub_2225CCBF8(v52, &v54);
    std::string v48 = sub_2225F3774(v47, v52[0], v52[1]);
    sub_22262FD48(&v49, a3);
    sub_22263B25C(v49, v56, *((uint64_t *)&v56 + 1), (uint64_t)&v50);
    sub_22261E3BC((uint64_t)v48, (uint64_t)&v50);
    sub_2225F4E0C(&v50);
    sub_2225F37F0(&v53);
    uint64_t v41 = v55;
    std::string::~string(&v54);
  }
  else
  {
    uint64_t v41 = sub_222691804();
  }
  sub_2226489B8(v59);
  sub_2225C56C4(v61);
  sub_22269188C(v62);
  return v41;
}

uint64_t sub_2226916CC(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_222691C4C(a1);
  }
  uint64_t v4 = (_OWORD *)sub_2225C3D04(a1);
  long long v5 = a2[1];
  *uint64_t v4 = *a2;
  v4[1] = v5;
  uint64_t v6 = sub_2225C3D04(a1) + 32;

  return sub_2225C5B6C(a1, v6);
}

uint64_t sub_222691738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2225C3D04(a1);
  uint64_t v7 = sub_222691D18(a3, v6, a2);
  sub_2225C5B6C(a1, v7);
  return a2;
}

unsigned int *sub_22269178C(unsigned int *a1, unsigned int *a2, unsigned __int8 *a3)
{
  unsigned int v9 = a3;
  uint64_t v4 = sub_222691C60(a1, a2, &v9);
  long long v5 = v4 + 8;
  if (v4 != a2 && v5 != a2)
  {
    do
    {
      if (!sub_222691CBC(&v9, v5))
      {
        long long v7 = *((_OWORD *)v5 + 1);
        *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
        *((_OWORD *)v4 + 1) = v7;
        v4 += 8;
      }
      v5 += 8;
    }
    while (v5 != a2);
  }
  return v4;
}

uint64_t sub_222691804()
{
  sub_222691B04((uint64_t)&v1, 0);
  return v1;
}

uint64_t sub_222691830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v6 = a3;
  if (a1 != a2)
  {
    while (!sub_222691E48(&v6, v3))
    {
      v3 += 32;
      if (v3 == a2) {
        return a2;
      }
    }
  }
  return v3;
}

uint64_t sub_222691890(uint64_t *a1, uint64_t a2, unsigned int a3, unsigned __int8 *a4)
{
  sub_222688E1C(v18, a2);
  if (sub_22268B3E4(v18) && sub_22268B91C((uint64_t)v18, v8))
  {
    if (sub_22268B4D4(v18) == 76)
    {
      uint64_t v9 = sub_2225C3D04((uint64_t)a1);
      if (!sub_222690A70(v9)) {
        goto LABEL_5;
      }
    }
    else
    {
      unsigned int v14 = sub_22268B4D4(v18);
      uint64_t v15 = sub_2225F2418(a2);
      sub_22269035C(a1, v14, v15, v16, a3);
    }
    __int16 v17 = sub_22268B4D4(v18);
    sub_2226919A8((uint64_t)v19, v17);
    goto LABEL_11;
  }
LABEL_5:
  uint64_t v10 = sub_222690928(a1, a2);
  if (v10)
  {
    uint64_t v11 = sub_222690ADC((uint64_t)a1, v10);
  }
  else if (sub_2226919AC(a4))
  {
    uint64_t v11 = sub_222691248((uint64_t)a1, a2, a3, a4);
  }
  else
  {
    uint64_t v11 = sub_222691804();
  }
  v19[0] = v11;
  v19[1] = v12;
LABEL_11:
  sub_222688E68(v18);
  return v19[0];
}

BOOL sub_2226919AC(unsigned char *a1)
{
  return (*a1 & 3) != 0;
}

uint64_t sub_2226919BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = sub_222690928(a1, a2);

  return sub_2226919E4(v2);
}

uint64_t sub_2226919E4(uint64_t result)
{
  uint64_t v1 = result;
  if (result)
  {
    if (sub_22268D970(&v1)) {
      return sub_2225E55A8(v1);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_222691A24(uint64_t *a1)
{
  if (sub_222609868((unsigned __int8 *)a1))
  {
    uint64_t v4 = 0;
    return sub_222689C8C(a1, &v4);
  }
  else
  {
    unint64_t result = (uint64_t *)sub_222657F58(a1, v2);
    if (result)
    {
      return (uint64_t *)sub_2225E77D0((uint64_t)result);
    }
  }
  return result;
}

uint64_t sub_222691A90(uint64_t a1)
{
  return sub_22264D9B8(a1, 0xB3u);
}

uint64_t sub_222691A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  *(_DWORD *)a1 = 2;
  *(void *)(a1 + 8) = sub_2225C3C70((uint64_t)&v4);
  return a1;
}

uint64_t sub_222691ADC(uint64_t result, uint64_t a2, int a3)
{
  if (a3) {
    int v3 = 4;
  }
  else {
    int v3 = 1;
  }
  *(_DWORD *)unint64_t result = v3;
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_222691AF4(uint64_t result, uint64_t a2)
{
  *(_DWORD *)unint64_t result = 3;
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_222691B08(uint64_t result, __int16 a2)
{
  *(_DWORD *)unint64_t result = 5;
  *(_WORD *)(result + 8) = a2;
  return result;
}

uint64_t sub_222691B18(uint64_t *a1, uint64_t *a2, void *a3)
{
  sub_222691B34(a1, a2, a3);
  return v3;
}

uint64_t sub_222691B34(uint64_t *a1, uint64_t *a2, void *a3)
{
  long long v7 = a3;
  uint64_t v8 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      uint64_t v5 = *v4++;
      *v7++ = v5;
      uint64_t v8 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v9, &v8, &v7);
  return v9;
}

uint64_t sub_222691BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222691BE0(&v3);
}

uint64_t sub_222691BE0(void *a1)
{
  return sub_222691BE8(*a1);
}

BOOL sub_222691BF0(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) >= 9 && sub_2226376DC(a1) < 0xB;
}

void *sub_222691C40(void *a1)
{
  return sub_2225C60A0(a1, (uint64_t)(a1 + 3), 512);
}

char *sub_222691C50(const void **a1)
{
  return sub_2225D343C(a1, a1 + 3, 0, 32);
}

unsigned int *sub_222691C60(unsigned int *a1, unsigned int *a2, unsigned __int8 **a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    while (!sub_222691CBC(a3, v3))
    {
      v3 += 8;
      if (v3 == a2) {
        return a2;
      }
    }
  }
  return v3;
}

BOOL sub_222691CBC(unsigned __int8 **a1, unsigned int *a2)
{
  unsigned int v3 = sub_2225C3B40(a2) - 2;
  return v3 <= 3 && ((**a1 << (8 * v3)) & 0x2020201) == 0;
}

uint64_t sub_222691D20()
{
  sub_222691D3C();
  return v0;
}

uint64_t sub_222691D40(uint64_t a1, uint64_t a2, void *a3)
{
  int v5 = sub_2225E2478(a1, a2);
  uint64_t v7 = sub_222691DB4(v5, v6, a3);
  uint64_t v9 = v8;
  uint64_t v12 = sub_222691DB8(a1, v7);
  uint64_t v11 = sub_2225DC2F8((uint64_t)a3, v9);
  return sub_2225C5EEC((uint64_t)&v12, (uint64_t)&v11);
}

uint64_t sub_222691DBC(const void *a1, uint64_t a2, char *__dst)
{
  uint64_t v7 = a2;
  uint64_t v4 = a2 - (void)a1;
  sub_222691E14(__dst, a1, (a2 - (uint64_t)a1) >> 5);
  int v6 = &__dst[v4];
  return sub_2225C5EEC((uint64_t)&v7, (uint64_t)&v6);
}

void *sub_222691E14(void *__dst, const void *a2, uint64_t a3)
{
  if (a3) {
    memmove(__dst, a2, 32 * a3);
  }
  return __dst;
}

BOOL sub_222691E48(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v4 = sub_2225CC180(*a1);
  int v5 = *(const void **)(v4 + 16);
  size_t v6 = *(void *)(v4 + 24);

  return sub_2225D1680(v2, v3, v5, v6);
}

uint64_t sub_222691E8C(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_2225C5B40(*(void *)(a1 + 184));
  if (result)
  {
    sub_222688C3C(a1, a2, 2749, (uint64_t)v5);
    sub_222622304(v5, 0);
    return sub_2225F37F0(v5);
  }
  return result;
}

uint64_t sub_222691EEC(uint64_t a1, unsigned int a2)
{
  uint64_t result = sub_2225C5B40(*(void *)(a1 + 184));
  if (result)
  {
    sub_222688C3C(a1, a2, 2749, (uint64_t)v5);
    sub_222622304(v5, 1);
    return sub_2225F37F0(v5);
  }
  return result;
}

_WORD *sub_222691F4C(uint64_t *a1, int a2, unsigned int a3)
{
  uint64_t v16 = sub_2226533D4(a1[25]);
  uint64_t v17 = v6;
  if (sub_2225CF1E0((uint64_t)&v16)) {
    return sub_222673010(*a1, a3, a2);
  }
  uint64_t v16 = sub_2226533D4(a1[25]);
  uint64_t v17 = v7;
  uint64_t v8 = (void *)sub_2225C3C70((uint64_t)&v16);
  uint64_t v9 = (uint64_t *)sub_222692068(*v8);
  uint64_t v10 = (unsigned __int16 *)sub_22269202C(*v9);
  if (!v10) {
    return sub_222673010(*a1, a3, a2);
  }
  uint64_t v11 = (uint64_t)v10;
  if (sub_222656050(v10) != a2)
  {
    sub_222688C3C((uint64_t)a1, a3, 2218, (uint64_t)v15);
    sub_2225F37F0(v15);
    unsigned int v12 = sub_222613380(v11);
    sub_222688C3C((uint64_t)a1, v12, 3525, (uint64_t)v14);
    sub_2225F37F0(v14);
  }
  return 0;
}

uint64_t sub_22269202C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226580F0(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

unsigned int *sub_22269206C(uint64_t *a1, unsigned int a2, int a3, unsigned int a4)
{
  char v5 = a3;
  if (a2 - 131 > 0x31 || ((1 << (a2 + 125)) & 0x3800000000001) == 0)
  {
    if (a3 == 1) {
      int v8 = 2221;
    }
    else {
      int v8 = 4048;
    }
    sub_222688C3C((uint64_t)a1, a4, v8, (uint64_t)v12);
    uint64_t v9 = sub_22264EAF4(a2);
    sub_2225F3774(v12, v9, v10);
    sub_2225F37F0(v12);
  }
  return sub_222673064(*a1, a4, a2, v5);
}

_DWORD *sub_222692128(uint64_t *a1, int a2)
{
  return sub_222686550(*a1, a2);
}

uint64_t sub_222692134(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = a3;
  uint64_t result = sub_2225C3D04((uint64_t)&v5);
  if (result) {
    return sub_22268659C(*a1, v5, v6);
  }
  return result;
}

uint64_t sub_222692178(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  if (!a2) {
    return 0;
  }
  uint64_t v3 = *(void *)a1;
  sub_22261870C(v17, (uint64_t)&v18);
  uint64_t v4 = sub_22268659C(v3, v17[0], v17[1]);
  if (sub_22268AA00(a1))
  {
    uint64_t v5 = *(uint64_t **)(a1 + 200);
    if (v4) {
      uint64_t v6 = v4 + 8;
    }
    else {
      uint64_t v6 = 0;
    }
    if (*(unsigned char *)(a1 + 168)) {
      sub_2226922A4((uint64_t)v5, v6);
    }
    else {
      sub_2226922D0(v5, v6);
    }
  }
  int v8 = (uint64_t *)sub_222653754(v4 + 8);
  uint64_t v9 = sub_222653758(v4 + 8);
  if (v8 != (uint64_t *)v9)
  {
    uint64_t v10 = (uint64_t *)v9;
    do
    {
      uint64_t v11 = sub_22268AA14(*v8);
      if (v11)
      {
        uint64_t v12 = v11;
        if (sub_2226074E4(v11))
        {
          unsigned int v13 = sub_222613380(v12);
          sub_222688C3C(a1, v13, 4731, (uint64_t)v16);
          uint64_t v14 = sub_222654540(v12);
          sub_2225F3774(v16, v14, v15);
          sub_2225F37F0(v16);
        }
      }
      ++v8;
    }
    while (v8 != v10);
  }
  if (v4) {
    return v4 + 8;
  }
  else {
    return 0;
  }
}

uint64_t sub_2226922A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22268CDE0((uint64_t *)(a1 + 24), (uint64_t)&v3);
}

uint64_t sub_2226922D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22268CDE0(a1, (uint64_t)&v3);
}

uint64_t sub_2226922F8(uint64_t a1, const void **a2)
{
  uint64_t v4 = sub_2225C3C70((uint64_t)a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a2);
  uint64_t v16 = 0;
  uint64_t v6 = sub_2226923EC(v4, v5, (uint64_t)&v16);
  int v7 = sub_2225CC780((uint64_t)a2);
  uint64_t v8 = sub_2225C3D04((uint64_t)a2);
  int v9 = sub_2225D5C78((uint64_t)v6, v8);
  sub_222692438(a2, v7 - v9);
  uint64_t result = sub_2225CC780((uint64_t)a2);
  if (result)
  {
    uint64_t v11 = *(void *)a1;
    sub_2225D3DDC(v15, a2);
    uint64_t v12 = sub_22268659C(v11, v15[0], v15[1]);
    if (sub_22268AA00(a1))
    {
      unsigned int v13 = *(uint64_t **)(a1 + 200);
      if (v12) {
        uint64_t v14 = v12 + 8;
      }
      else {
        uint64_t v14 = 0;
      }
      if (*(unsigned char *)(a1 + 168)) {
        sub_2226922A4((uint64_t)v13, v14);
      }
      else {
        sub_2226922D0(v13, v14);
      }
    }
    if (v12) {
      return v12 + 8;
    }
    else {
      return 0;
    }
  }
  return result;
}

void *sub_2226923EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)sub_222693610(a1, a2, a3);
  if (result != (void *)a2)
  {
    for (unint64_t i = result + 1; i != (void *)a2; ++i)
    {
      if (*i) {
        *result++ = *i;
      }
    }
  }
  return result;
}

unint64_t sub_222692438(const void **a1, unsigned int a2)
{
  unint64_t v3 = a2;
  if (sub_2225CC780((uint64_t)a1) <= (unint64_t)a2)
  {
    unint64_t result = sub_2225CC780((uint64_t)a1);
    if (result >= v3) {
      return result;
    }
    if (sub_222631630((uint64_t)a1) < v3) {
      sub_2225CC828(a1, v3);
    }
    int v7 = (void *)sub_2225C3D04((uint64_t)a1);
    uint64_t v8 = sub_2225C3C70((uint64_t)a1) + 8 * v3;
    if (v7 != (void *)v8) {
      bzero(v7, ((v8 - (void)v7 - 8) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
  }
  else
  {
    uint64_t v4 = sub_2225C3C70((uint64_t)a1) + 8 * v3;
    uint64_t v5 = sub_2225C3D04((uint64_t)a1);
    nullsub_1(v4, v5);
  }
  uint64_t v9 = sub_2225C3C70((uint64_t)a1) + 8 * v3;

  return sub_2225C5B6C((uint64_t)a1, v9);
}

uint64_t sub_22269252C(uint64_t *a1, unsigned int *a2)
{
  if (!a2) {
    return 0;
  }
  if (!sub_222659320((uint64_t)a2))
  {
    uint64_t v14 = sub_222659834((uint64_t)a2);
    uint64_t v4 = sub_2225C3C70((uint64_t)&v14);
    if (sub_222687720(v4))
    {
      uint64_t v13 = sub_222659834((uint64_t)a2);
      uint64_t v5 = sub_2225C3C70((uint64_t)&v13);
      uint64_t v14 = sub_22268742C(v5);
      uint64_t v6 = sub_2225C3C70((uint64_t)&v14);
      uint64_t v7 = sub_22265E3C0(v6);
      int v8 = sub_222655AE4(v7);
      int v9 = sub_22268EAB0(a1[23], v8);
      if (!v9)
      {
        unsigned int v11 = sub_2225C3B40(a2);
        sub_222688C3C((uint64_t)a1, v11, 2479, (uint64_t)v12);
        sub_2225F37F0(v12);
        return 0;
      }
      sub_22267460C((uint64_t)a2, v9);
    }
  }
  return sub_222686A88(*a1, (uint64_t)a2);
}

_DWORD *sub_222692610(uint64_t *a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_2226864A4(*a1, a2, a3, a4, a5);
}

_DWORD *sub_222692620(uint64_t *a1, int a2, unsigned int *a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  v19[0] = sub_222659834((uint64_t)a3);
  uint64_t v14 = sub_2225C3C70((uint64_t)v19);
  uint64_t v15 = sub_222654A90(v14);
  if (v15 && sub_222655AE4(v15) == 7) {
    return sub_222686654(*a1, a2, (uint64_t)a3, a4, a5, a6, a7);
  }
  unsigned int v17 = sub_2225C3B40(a3);
  sub_222688C3C((uint64_t)a1, v17, 2118, (uint64_t)v19);
  uint64_t v18 = sub_222674270((uint64_t)a3);
  sub_222625214(v19, &v18);
  sub_2225F37F0(v19);
  return 0;
}

_DWORD *sub_222692704(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2226867F4(*a1, a2, a3, a4, a5, a6);
}

_DWORD *sub_222692710(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_222686870(*a1, a2, a3, a4);
}

_DWORD *sub_22269271C(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a3 || !a4) {
    return 0;
  }
  uint64_t v6 = *a1;
  uint64_t v7 = sub_2225E55A8(a4);
  uint64_t v8 = sub_2225C3D04(v7);

  return sub_2226868D4(v6, a2, a3, v8);
}

_DWORD *sub_222692788(uint64_t *a1, unsigned int a2)
{
  if (sub_222608330(a1[23]))
  {
    uint64_t v4 = *a1;
    return sub_222686950(v4, a2);
  }
  else
  {
    sub_222688C3C((uint64_t)a1, a2, 1906, (uint64_t)v6);
    sub_2225F37F0(v6);
    return 0;
  }
}

_DWORD *sub_222692808(uint64_t *a1, unsigned int a2)
{
  if (sub_2225CDCF4(a1[23]))
  {
    uint64_t v4 = *a1;
    return sub_22268699C(v4, a2);
  }
  else
  {
    sub_222688C3C((uint64_t)a1, a2, 2000, (uint64_t)v6);
    sub_2225F37F0(v6);
    return 0;
  }
}

uint64_t sub_222692888(uint64_t *a1, unsigned int a2, unsigned int *a3)
{
  sub_2225C3D00((int)v12, "switch statement");
  BOOL v6 = sub_222690424((uint64_t)a1, 0, v12[0], v12[1], a2);
  uint64_t result = 0;
  if (a3 && v6)
  {
    uint64_t v11 = sub_222659834((uint64_t)a3);
    uint64_t v8 = sub_2225C3C70((uint64_t)&v11);
    if ((sub_22269295C(v8) & 1) == 0)
    {
      unsigned int v9 = sub_2225C3B40(a3);
      sub_222688C3C((uint64_t)a1, v9, 2888, (uint64_t)v10);
      sub_2225F37F0(v10);
    }
    uint64_t v11 = (uint64_t)sub_2226866E0(*a1, a2, (uint64_t)a3);
    sub_2225CC7B8((uint64_t)(a1 + 44), &v11);
    return v11;
  }
  return result;
}

uint64_t sub_22269295C(uint64_t a1)
{
  int v2 = 0;
  return sub_2226876CC(a1, &v2);
}

uint64_t sub_222692984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v53[30] = *MEMORY[0x263EF8340];
  if (a2)
  {
    sub_222608660(a1 + 352);
    uint64_t v6 = sub_2225E55A8(a2);
    uint64_t v7 = sub_2225E55A8(a3);
    sub_2225E35B4(v6, v7);
    uint64_t v8 = sub_2225C5B40(v6);
    int v52 = *(unsigned __int8 **)sub_22265E3C4(v8 + 8);
    if ((sub_2226580EC(&v52) & 1) == 0 && (sub_222692D68(&v52) & 1) == 0)
    {
      unsigned int v9 = sub_222686170(v52);
      sub_222688C3C(a1, v9, 2887, (uint64_t)v51);
      sub_2225F37F0(v51);
      unsigned int v10 = sub_2225DF8D0(v6);
      sub_222688C3C(a1, v10, 3739, (uint64_t)v50);
      sub_2225F37F0(v50);
    }
    uint64_t v11 = sub_2225C5B40(v6);
    uint64_t v49 = *(unsigned __int8 **)sub_222692D6C(v11 + 8);
    if ((sub_2226580EC(&v49) & 1) != 0 || sub_222692D68(&v49))
    {
      unsigned int v12 = sub_222686170(v49);
      sub_222688C3C(a1, v12, 2882, (uint64_t)v48);
      sub_2225F37F0(v48);
      unsigned int v13 = sub_2225DF8D0(v6);
      sub_222688C3C(a1, v13, 3739, (uint64_t)v47);
      sub_2225F37F0(v47);
    }
    sub_222692D88((uint64_t)v53);
    uint64_t v14 = sub_222608330(v6);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = sub_222692D8C(v15);
        if (v17)
        {
          uint64_t v18 = v17;
          if (v16)
          {
            unsigned int v19 = sub_2225F514C(v16);
            sub_222688C3C(a1, v19, 2444, (uint64_t)v46);
            sub_2225F37F0(v46);
            unsigned int v20 = sub_2225F514C(v18);
            sub_222688C3C(a1, v20, 47, (uint64_t)v45);
            sub_2225F37F0(v45);
          }
          uint64_t v16 = v18;
        }
        else
        {
          uint64_t v21 = sub_2225E55A8(v15);
          sub_22268EA84(v44);
          unint64_t v22 = sub_222608330(v21);
          sub_22268EA88(v22, *(void *)(a1 + 200), (uint64_t)v44);
          uint64_t v23 = sub_222608330(v21);
          uint64_t v43 = sub_222659834(v23);
          uint64_t v24 = sub_2225C3D04(v6);
          uint64_t v42 = sub_222659834(v24);
          if (sub_22268824C(&v43, v42))
          {
            uint64_t v25 = sub_222608330(v21);
            unsigned int v26 = sub_222673A20(v25);
            sub_222688C3C(a1, v26, 1935, (uint64_t)v41);
            uint64_t v27 = sub_222694318((uint64_t)v41, (uint64_t)&v43);
            sub_222694318(v27, (uint64_t)&v42);
            sub_2225F37F0(v41);
          }
          else if ((sub_222692DC8(v53, (uint64_t)v44) & 1) == 0)
          {
            sub_2226237BC(v41);
            sub_222692EA0(v44, v41, 0xAu);
            uint64_t v28 = sub_222608330(v6);
            if (v28 != v15)
            {
              uint64_t v29 = v28;
              while (1)
              {
                sub_22268EA84(v40);
                uint64_t v30 = sub_222692EF8(v29);
                if (v30)
                {
                  uint64_t v31 = v30;
                  unint64_t v32 = sub_222608330(v30);
                  if (sub_22268EA88(v32, *(void *)(a1 + 200), (uint64_t)v40))
                  {
                    if (sub_22263EB24(v40, v44)) {
                      break;
                    }
                  }
                }
                sub_22263E6C8(v40);
                uint64_t v29 = sub_2225C3D04(v29);
                if (v29 == v15) {
                  goto LABEL_25;
                }
              }
              unsigned int v33 = sub_2225F514C(v31);
              sub_222688C3C(a1, v33, 2089, (uint64_t)v39);
              uint64_t v34 = sub_2225CA4D0((uint64_t)v41);
              sub_2225F3774(v39, v34, v35);
              sub_2225F37F0(v39);
              sub_22263E6C8(v40);
            }
LABEL_25:
            unsigned int v36 = sub_2225F514C(v21);
            sub_222688C3C(a1, v36, 47, (uint64_t)v38);
            sub_2225F37F0(v38);
            sub_2225CA520(v41);
          }
          sub_22263E6C8(v44);
        }
        uint64_t v15 = sub_2225C3D04(v15);
      }
      while (v15);
    }
    sub_222692F34((uint64_t)v53);
  }
  return a2;
}

uint64_t sub_222692D6C(uint64_t a1)
{
  return sub_222656A1C(a1) - 8;
}

uint64_t sub_222692D8C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222692D68(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_222692DC8(void *a1, uint64_t a2)
{
  if (sub_222693768((uint64_t)a1, a2))
  {
    uint64_t v4 = sub_2226937A4((uint64_t)a1, a2);
    if (v4 == sub_2225C3D04((uint64_t)a1))
    {
      if (sub_222609DE8((uint64_t)a1) >= 8)
      {
        while (!sub_2225CF1D0(a1))
        {
          uint64_t v7 = sub_2225E2698((uint64_t)a1);
          sub_222693770((uint64_t)(a1 + 27), v7);
          sub_2226938A0((uint64_t)a1);
        }
        sub_222693770((uint64_t)(a1 + 27), a2);
      }
      else
      {
        sub_222693830(a1, a2);
      }
      return 1;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    sub_222693770((uint64_t)(a1 + 27), a2);
    return v6 & 1;
  }
}

uint64_t sub_222692EA0(_DWORD *a1, const void **a2, unsigned int a3)
{
  BOOL v6 = sub_2225C3B48((uint64_t)a1);

  return sub_2225CA060(a1, a2, a3, v6, 0);
}

uint64_t sub_222692EF8(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226580EC(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

_DWORD *sub_222692F38(uint64_t *a1, unsigned int a2, int a3, unint64_t a4)
{
  uint64_t v8 = (uint64_t)(a1 + 44);
  if (sub_2225CC780((uint64_t)(a1 + 44)))
  {
    if (sub_22269305C(a4, a1[25]))
    {
      unsigned int v9 = sub_222686734(*a1, a2, a3, a4);
      unsigned int v10 = (uint64_t *)sub_222608644(v8);
      sub_2226930B0(*v10, (uint64_t)v9);
    }
    else
    {
      sub_222688C3C((uint64_t)a1, a2, 1936, (uint64_t)v15);
      sub_2225F37F0(v15);
      uint64_t v11 = *a1;
      sub_2225C3A6C(v14, 32, 0, 0);
      unsigned int v12 = sub_22268DF80(v11, a2, (uint64_t)v14);
      unsigned int v9 = sub_222686734(v11, a2, a3, (uint64_t)v12);
      sub_2225C2F10(v14);
    }
  }
  else
  {
    sub_222688C3C((uint64_t)a1, a2, 1937, (uint64_t)v16);
    sub_2225F37F0(v16);
    return 0;
  }
  return v9;
}

uint64_t sub_22269305C(unint64_t a1, uint64_t a2)
{
  sub_22268EA84(v6);
  uint64_t v4 = sub_22268EA88(a1, a2, (uint64_t)v6);
  sub_22263E6C8(v6);
  return v4;
}

uint64_t sub_2226930B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225C5B6C(a2, *(void *)(a1 + 24));
  *(void *)(a1 + 24) = a2;
  return result;
}

_DWORD *sub_2226930E4(uint64_t *a1, unsigned int a2, int a3)
{
  uint64_t v6 = (uint64_t)(a1 + 44);
  if (sub_2225CC780((uint64_t)(a1 + 44)))
  {
    uint64_t v7 = sub_22268679C(*a1, a2, a3);
    uint64_t v8 = (uint64_t *)sub_222608644(v6);
    sub_2226930B0(*v8, (uint64_t)v7);
  }
  else
  {
    sub_222688C3C((uint64_t)a1, a2, 2040, (uint64_t)v10);
    sub_2225F37F0(v10);
    return 0;
  }
  return v7;
}

_DWORD *sub_22269317C(uint64_t *a1, int a2)
{
  return sub_2226869E8(*a1, a2);
}

_DWORD *sub_222693188(uint64_t *a1, unsigned int a2, unsigned int *a3)
{
  sub_222693458((_DWORD *)a1[24]);
  v33[0] = sub_222640540(a1[24]);
  uint64_t v6 = sub_2225C3C70((uint64_t)v33);
  int v7 = sub_22268B634(v6);
  if (a3 && v7)
  {
    unsigned int v8 = sub_2225C3B40(a3);
    sub_222688C3C((uint64_t)a1, v8, 3196, (uint64_t)v35);
    unsigned int v9 = v35;
LABEL_4:
    sub_2225F37F0(v9);
    return 0;
  }
  if (!a3)
  {
    v33[0] = sub_222640540(a1[24]);
    uint64_t v20 = sub_2225C3C70((uint64_t)v33);
    if ((sub_22268B634(v20) & 1) == 0)
    {
      sub_222688C3C((uint64_t)a1, a2, 2498, (uint64_t)v29);
      sub_2225F37F0(v29);
      unsigned int v23 = sub_2225DF8D0(a1[24]);
      sub_222688C3C((uint64_t)a1, v23, 3517, (uint64_t)v28);
      unsigned int v9 = v28;
      goto LABEL_4;
    }
    a3 = 0;
    goto LABEL_20;
  }
  v33[0] = sub_222640540(a1[24]);
  uint64_t v11 = sub_222659834((uint64_t)a3);
  if (!sub_22268824C(v33, v11))
  {
    uint64_t v21 = sub_222655EE0((_DWORD *)a1[24]);
    int v22 = sub_222659320((uint64_t)a3);
    if (v21 != v22)
    {
      if (v22) {
        a3 = (unsigned int *)sub_2226751A8(*a1, v21, (uint64_t)a3);
      }
      else {
        sub_22267460C((uint64_t)a3, v21);
      }
    }
LABEL_20:
    uint64_t v19 = *a1;
    int v18 = a2;
    return sub_222686A34(v19, v18, (uint64_t)a3);
  }
  v33[0] = sub_222640540(a1[24]);
  if (!sub_2225D3DB0(v33)) {
    return 0;
  }
  uint64_t v34 = sub_222640540(a1[24]);
  uint64_t v12 = sub_2225C3C70((uint64_t)&v34);
  if (sub_222655E28(v12)) {
    return 0;
  }
  v33[0] = sub_222659834((uint64_t)a3);
  uint64_t v13 = sub_2225C3C70((uint64_t)v33);
  uint64_t v14 = sub_222655B18(v13);
  if (!v14)
  {
    sub_222688C3C((uint64_t)a1, a2, 2205, (uint64_t)v33);
    uint64_t v34 = sub_222640540(a1[24]);
    uint64_t v24 = sub_222694318((uint64_t)v33, (uint64_t)&v34);
    uint64_t v32 = sub_222659834((uint64_t)a3);
    sub_222694318(v24, (uint64_t)&v32);
    sub_2225F37F0(v33);
    unsigned int v25 = sub_2225DF8D0(a1[24]);
    sub_222688C3C((uint64_t)a1, v25, 3517, (uint64_t)v30);
    unsigned int v9 = v30;
    goto LABEL_4;
  }
  uint64_t v15 = v14;
  v33[0] = sub_2225C3D04(v14);
  uint64_t v16 = sub_222640540(a1[24]);
  int v17 = sub_222688268(v33, v16);
  int v18 = a2;
  if (!v17)
  {
    sub_222688C3C((uint64_t)a1, a2, 2205, (uint64_t)v33);
    uint64_t v34 = sub_222640540(a1[24]);
    uint64_t v26 = sub_222694318((uint64_t)v33, (uint64_t)&v34);
    uint64_t v32 = sub_2225C3D04(v15);
    sub_222694318(v26, (uint64_t)&v32);
    sub_2225F37F0(v33);
    unsigned int v27 = sub_2225DF8D0(a1[24]);
    sub_222688C3C((uint64_t)a1, v27, 3517, (uint64_t)v31);
    unsigned int v9 = v31;
    goto LABEL_4;
  }
  uint64_t v19 = *a1;
  return sub_222686A34(v19, v18, (uint64_t)a3);
}

_DWORD *sub_222693458(_DWORD *result)
{
  *result |= 0x4000u;
  return result;
}

uint64_t sub_222693468(uint64_t a1)
{
  sub_2226934A4(a1 + 216);

  return sub_2226934A8(a1);
}

uint64_t sub_2226934B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)sub_2225E1E1C(a1, a2);
  sub_2226934E8(a1, v3);
  return a1;
}

uint64_t sub_2226934E8(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    sub_2226934E8(result, *a2);
    sub_2226934E8(v3, a2[1]);
    uint64_t v5 = sub_2225E1E38(v3, v4);
    uint64_t v7 = nullsub_1(a2 + 4, v6);
    sub_222693564(v5, v7);
    return sub_2225F9C04(v5, a2, 1);
  }
  return result;
}

uint64_t sub_222693564(uint64_t a1, uint64_t a2)
{
  return sub_22269356C(a2);
}

void *sub_222693574(void *a1)
{
  uint64_t v2 = sub_2225C3C70((uint64_t)a1);
  uint64_t v3 = sub_2225C3D04((uint64_t)a1);
  sub_2226935CC(v2, v3);
  if (!sub_2225C603C(a1))
  {
    uint64_t v4 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v4);
  }
  return a1;
}

uint64_t sub_2226935CC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      v2 -= 24;
      uint64_t result = sub_22263E6C8(v2);
    }
    while (v2 != v3);
  }
  return result;
}

uint64_t sub_222693610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = j_j_nullsub_1(a1);
  uint64_t v7 = j_j_nullsub_1(a2);
  uint64_t v8 = sub_222693678(v6, v7, a3, (uint64_t)&v10);
  return sub_2225C5F20(a1, v8);
}

uint64_t sub_222693678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    while (*(void *)sub_2225DC2F8(a4, v4))
    {
      v4 += 8;
      if (v4 == a2) {
        return a2;
      }
    }
  }
  return v4;
}

uint64_t sub_2226936D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222693704(&v3);
}

uint64_t sub_222693704(void *a1)
{
  return sub_22269370C(*a1);
}

uint64_t sub_222693710(uint64_t a1)
{
  uint64_t v2 = sub_22260AF18(a1);
  sub_222693740(v2 + 216);
  return a1;
}

uint64_t sub_222693744(uint64_t a1)
{
  return sub_2225E2DF0(a1, &v2);
}

BOOL sub_222693768(uint64_t a1, uint64_t a2)
{
  return sub_2225F4EE4(a1 + 216, a2);
}

uint64_t sub_222693770(uint64_t a1, uint64_t a2)
{
  v4[0] = sub_2226938E8(a1, a2);
  v4[1] = v2;
  sub_222693930(&v5, (uint64_t)v4);
  return v5;
}

uint64_t sub_2226937A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3C70(a1);
  uint64_t v5 = sub_2225C3D04(a1);
  if (v4 == v5)
  {
LABEL_5:
    return sub_2225C3D04(a1);
  }
  else
  {
    uint64_t v6 = v5;
    while ((sub_22263EB24(v4, a2) & 1) == 0)
    {
      v4 += 24;
      if (v4 == v6) {
        goto LABEL_5;
      }
    }
    return v4;
  }
}

uint64_t sub_222693830(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_222693CE4(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_222693B6C(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 24;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_2226938A0(uint64_t a1)
{
  uint64_t v2 = sub_2225C3D04(a1);
  sub_2225C5B6C(a1, v2 - 24);
  uint64_t v3 = sub_2225C3D04(a1);

  return sub_22263E6C8(v3);
}

uint64_t sub_2226938E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = nullsub_1(a2, a2);

  return sub_222693934(a1, v4, a2);
}

uint64_t sub_222693934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2226939F0(a1, &v15, a2);
  uint64_t v6 = *v5;
  char v14 = 0;
  if (!v6)
  {
    uint64_t v7 = v5;
    sub_222693AB0(a1, a3, (uint64_t)v13);
    uint64_t v8 = v15;
    char v10 = (void *)sub_2225CBA80((uint64_t)v13, v9);
    sub_2225E3140(a1, (uint64_t)v8, v7, v10);
    uint64_t v6 = sub_2225CE10C((uint64_t)v13, v11);
    char v14 = 1;
    sub_222693B4C(v13);
  }
  sub_2225C64B8(v13, v6);
  sub_2225D7B28(&v16, v13, &v14);
  return v16;
}

uint64_t *sub_2226939F0(uint64_t a1, uint64_t **a2, uint64_t a3)
{
  uint64_t v6 = sub_2225E1E1C(a1, (uint64_t)a2);
  uint64_t v8 = sub_2225E31D0(a1, v7);
  if (v6)
  {
    char v10 = (uint64_t *)v8;
    do
    {
      while (1)
      {
        uint64_t v11 = (uint64_t *)v6;
        uint64_t v12 = sub_2225D2650(a1, v9);
        uint64_t v13 = v6 + 32;
        if (!sub_222693B50(v12, a3, v13)) {
          break;
        }
        uint64_t v6 = *v11;
        char v10 = v11;
        if (!*v11) {
          goto LABEL_10;
        }
      }
      uint64_t v14 = sub_2225D2650(a1, v9);
      if (!sub_222693B50(v14, v13, a3)) {
        break;
      }
      char v10 = v11 + 1;
      uint64_t v6 = v11[1];
    }
    while (v6);
  }
  else
  {
    uint64_t v11 = (uint64_t *)sub_2225E1E5C(a1, v9);
    char v10 = v11;
  }
LABEL_10:
  *a2 = v11;
  return v10;
}

uint64_t sub_222693AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_2225E1E38(a1, a2);
  uint64_t v6 = sub_2225FA540(v5, 1);
  sub_2225E31D8((uint64_t)&v14, v5, 0);
  uint64_t v7 = sub_2225E31DC(a3, v6);
  uint64_t v9 = sub_2225CBA80(v7, v8);
  uint64_t v11 = nullsub_1(v9 + 32, v10);
  sub_222693B5C(v5, v11, a2);
  uint64_t result = sub_2225E31E4(a3, v12);
  *(unsigned char *)(result + 8) = 1;
  return result;
}

uint64_t sub_222693B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22263ED74(a2, a3);
}

uint64_t sub_222693B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_222693B6C(a2, a3);
}

uint64_t sub_222693B70(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225C5948(a1, a2);
  *(unsigned char *)(result + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

uint64_t sub_222693B9C(uint64_t a1)
{
  return a1;
}

void *sub_222693BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  *uint64_t result = a2;
  if (v4)
  {
    uint64_t v8 = sub_2225E3330(a1, v7);
    return (void *)sub_222693C38(v8, v4);
  }
  return result;
}

uint64_t sub_222693C38(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)result;
  if (*(unsigned char *)(result + 8))
  {
    uint64_t v4 = *(void *)result;
    uint64_t v5 = nullsub_1(a2 + 32, a2);
    uint64_t result = sub_222693564(v4, v5);
  }
  if (a2)
  {
    uint64_t v6 = *v3;
    return sub_2225F9C04(v6, a2, 1);
  }
  return result;
}

void *sub_222693CB4(void *a1, uint64_t a2)
{
  uint64_t result = sub_2225C64B8(a1, *(void *)a2);
  *((unsigned char *)result + 8) = *(unsigned char *)(a2 + 8);
  return result;
}

uint64_t sub_222693CE4(void *a1, unint64_t a2)
{
  unint64_t v4 = sub_222619804((uint64_t)a1);
  unint64_t v5 = sub_222609DE8((uint64_t)a1);
  unint64_t v6 = sub_2225C3A4C(v4 + 2);
  if (v6 <= a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = v6;
  }
  uint64_t v8 = malloc_type_malloc(24 * v7, 0x10120406B1B3107uLL);
  uint64_t v9 = sub_2225C3C70((uint64_t)a1);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1);
  sub_222693DDC(v9, v10, (uint64_t)v8);
  uint64_t v11 = sub_2225C3C70((uint64_t)a1);
  uint64_t v12 = sub_2225C3D04((uint64_t)a1);
  sub_2226935CC(v11, v12);
  if (!sub_2225C603C(a1))
  {
    uint64_t v13 = (void *)sub_2225C3C70((uint64_t)a1);
    free(v13);
  }
  sub_2225C5B6C((uint64_t)a1, (uint64_t)v8 + 24 * v5);
  *a1 = v8;
  uint64_t result = sub_2225C3C70((uint64_t)a1);
  a1[2] = result + 24 * v7;
  return result;
}

uint64_t sub_222693DDC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v5 = result;
    do
    {
      uint64_t result = sub_222693E34(a3, v5);
      v5 += 24;
      a3 += 24;
    }
    while (v5 != a2);
  }
  return result;
}

uint64_t sub_222693E38(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225CAC3C(a1, a2);
  *(unsigned char *)(result + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

uint64_t sub_222693E64(uint64_t *a1, uint64_t a2)
{
  if (sub_2225C3D04(a2))
  {
    uint64_t v4 = sub_2225C3D04(a2);
    uint64_t v14 = sub_2225F2418(v4);
    uint64_t v15 = v5;
  }
  else
  {
    sub_2225C3D00((int)&v14, &byte_2226D1615);
  }
  unint64_t v6 = (long long *)sub_2225C3C70(a2);
  uint64_t v7 = sub_222693F30(a1, v6, a1[23], v14, v15);
  uint64_t v8 = (_DWORD *)sub_2225F315C(a2);
  if (sub_22268A5FC(v8))
  {
    uint64_t v9 = (void *)sub_2225F315C(a2);
    uint64_t v10 = sub_2225C3D04(a2);
    uint64_t v11 = sub_2225F2418(v10);
    return sub_222694014(a1, v9, v7, v11, v12);
  }
  return v7;
}

uint64_t sub_222693F30(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v17 = *(_OWORD *)sub_2225CED2C((uint64_t)a2);
  if (sub_22268A5FC(&v17))
  {
    sub_222694368((uint64_t)v16);
    double v10 = sub_2226943A4(a2, v16);
    uint64_t v11 = sub_222693F30(a1, v16, a3, a4, a5, v10);
    return sub_222694014(a1, &v17, v11, a4, a5);
  }
  else if (sub_22268CCA8((uint64_t)a2) == 1)
  {
    uint64_t v13 = sub_2225CDCF4((uint64_t)a2);
    return sub_222687820(v13);
  }
  else
  {
    uint64_t v14 = *a1;
    int v15 = sub_22268CCA8((uint64_t)a2);
    return sub_222687C14(v14, v15);
  }
}

uint64_t sub_222694014(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a3;
  if (!sub_22261964C(a2, (uint64_t)a2)) {
    return sub_2226880B4(*a1, a3);
  }
  uint64_t v11 = sub_22261964C(a2, v10);
  uint64_t v12 = sub_222659834(v11);
  if (sub_22266111C(v12))
  {
    sub_22268EA84(v31);
    uint64_t v32 = 0;
    if (sub_222664F4C(v11, a1[25], (uint64_t)v31, &v32))
    {
      v30[0] = sub_222659834(v11);
      uint64_t v13 = sub_2225C3C70((uint64_t)v30);
      uint64_t v14 = sub_222654A90(v13);
      if (sub_222655AE4(v14) != 5 || (sub_2225CA404((uint64_t)v31) & 0x8000000000000000) == 0)
      {
        if (sub_22263E8E8(v31, 0))
        {
          unsigned int v15 = sub_222673A20(v11);
          sub_222688C3C((uint64_t)a1, v15, 3200, (uint64_t)v30);
          uint64_t v29 = sub_222659834(v11);
          sub_222694318((uint64_t)v30, (uint64_t)&v29);
          uint64_t v28 = sub_222674270(v11);
          sub_222625214(v30, &v28);
          sub_2225F37F0(v30);
        }
        uint64_t v16 = *a1;
        unsigned int v17 = sub_2225C54BC(v31);
        uint64_t v34 = sub_222688134(v16, a3, v17);
        goto LABEL_16;
      }
      sub_2225C3D00((int)v27, &byte_2226D1615);
      if (sub_2225D1680(a4, a5, v27[0], (size_t)v27[1]))
      {
        unsigned int v24 = sub_222673A20(v11);
        sub_222688C3C((uint64_t)a1, v24, 2023, (uint64_t)v30);
        unsigned int v25 = sub_2225F3774(v30, a4, a5);
        uint64_t v29 = sub_222674270(v11);
        int v22 = v25;
        goto LABEL_14;
      }
      unsigned int v26 = sub_222673A20(v11);
      sub_222688C3C((uint64_t)a1, v26, 2023, (uint64_t)v30);
      sub_222694318((uint64_t)v30, (uint64_t)&v33);
      uint64_t v21 = v11;
    }
    else
    {
      unsigned int v19 = sub_222673A20(v11);
      sub_222688C3C((uint64_t)a1, v19, 2661, (uint64_t)v30);
      uint64_t v29 = sub_222659834(v11);
      sub_222694318((uint64_t)v30, (uint64_t)&v29);
      uint64_t v28 = sub_222674270(v11);
      sub_222625214(v30, &v28);
      sub_2225F37F0(v30);
      if (!v32)
      {
LABEL_15:
        sub_2225D3A34(&v34);
LABEL_16:
        sub_22263E6C8(v31);
        return v34;
      }
      unsigned int v20 = sub_222673A20(v32);
      sub_222688C3C((uint64_t)a1, v20, 3584, (uint64_t)v30);
      uint64_t v21 = v32;
    }
    uint64_t v29 = sub_222674270(v21);
    int v22 = v30;
LABEL_14:
    sub_222625214(v22, &v29);
    sub_2225F37F0(v30);
    goto LABEL_15;
  }
  unsigned int v18 = sub_222673A20(v11);
  sub_222688C3C((uint64_t)a1, v18, 1735, (uint64_t)v31);
  v30[0] = sub_222659834(v11);
  sub_222694318((uint64_t)v31, (uint64_t)v30);
  uint64_t v32 = sub_222674270(v11);
  sub_222625214(v31, &v32);
  sub_2225F37F0(v31);
  sub_2225D3A34(&v34);
  return v34;
}

uint64_t sub_222694318(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a2);

  return sub_222696AEC(a1, v3);
}

uint64_t sub_222694358(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_222693F30(a1, a2, a1[23], a3, a4);
}

uint64_t sub_222694368(uint64_t a1)
{
  sub_2225F3278(&v3);
  return sub_22269998C(a1, v3);
}

double sub_2226943A4(long long *a1, _OWORD *a2)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  *(_OWORD *)((char *)a2 + 43) = *(long long *)((char *)a1 + 43);
  a2[1] = v4;
  a2[2] = v5;
  *a2 = v3;
  sub_2226999F4(&v7);
  double result = *(double *)&v7;
  a2[1] = v7;
  return result;
}

uint64_t sub_2226943F4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v22 = a3;
  int v21 = 0;
  BOOL v5 = sub_22268A59C((uint64_t)a2);
  BOOL v6 = sub_2225D3DB0(&v22);
  if (!v5)
  {
    if (v6
      && ((uint64_t v12 = sub_2225C3C70((uint64_t)&v22), (sub_2226876CC(v12, &v21) & 1) != 0)
       || (uint64_t v13 = sub_2225C3C70((uint64_t)&v22), sub_222694570(v13, &v21))))
    {
      uint64_t result = sub_22268EAB0(*(void *)(a1 + 184), v21);
      if (result) {
        return result;
      }
      unsigned int v14 = sub_2225C3B40(a2);
      sub_222688C3C(a1, v14, 2479, (uint64_t)v19);
      unsigned int v15 = v19;
    }
    else
    {
      uint64_t result = sub_2225D3DB0(&v22);
      if (!result) {
        return result;
      }
      uint64_t v16 = sub_2225C3C70((uint64_t)&v22);
      uint64_t result = sub_2226879B8(v16, &v21);
      if (!result) {
        return result;
      }
      uint64_t result = sub_22268EAB0(*(void *)(a1 + 184), v21);
      if (result) {
        return result;
      }
      unsigned int v17 = sub_2225C3B40(a2);
      sub_222688C3C(a1, v17, 2479, (uint64_t)v18);
      unsigned int v15 = v18;
    }
    sub_2225F37F0(v15);
    return 0;
  }
  if (v6)
  {
    uint64_t v7 = sub_2225C3C70((uint64_t)&v22);
    if ((sub_2226879B8(v7, &v21) & 1) == 0)
    {
      uint64_t v8 = sub_2225C3C70((uint64_t)&v22);
      if ((sub_2226876CC(v8, &v21) & 1) == 0)
      {
        uint64_t v9 = sub_2225C3C70((uint64_t)&v22);
        if ((sub_222694570(v9, &v21) & 1) == 0)
        {
          unsigned int v10 = sub_2225C3B40(a2);
          sub_222688C3C(a1, v10, 2753, (uint64_t)v20);
          sub_2225F37F0(v20);
        }
      }
    }
  }
  return sub_22268CD6C((uint64_t)a2);
}

uint64_t sub_222694570(uint64_t a1, _DWORD *a2)
{
  uint64_t v6 = sub_22268742C(a1);
  uint64_t v3 = sub_2225C3C70((uint64_t)&v6);
  uint64_t result = sub_222654A90(v3);
  if (result)
  {
    int v5 = sub_222655AE4(result);
    *a2 = v5;
    return (v5 - 3) < 2;
  }
  return result;
}

uint64_t sub_2226945C4(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v17 = a3;
  uint64_t v8 = sub_222659834(a3);
  uint64_t v16 = v8;
  uint64_t v9 = v8;
  switch(a2)
  {
    case 1:
      uint64_t v10 = sub_2225C3C70((uint64_t)&v16);
      uint64_t v11 = sub_222654A90(v10);
      if (v11 && sub_222655AE4(v11) == 7) {
        return v16;
      }
      goto LABEL_11;
    case 2:
    case 4:
      if (!sub_222694740(v8)) {
        goto LABEL_11;
      }
      goto LABEL_8;
    case 3:
    case 5:
      if (!sub_222694740(v8)) {
        goto LABEL_11;
      }
      if ((a2 == 5 || a2 == 3) && sub_2226947B8(a1, a3, a4)) {
        goto LABEL_12;
      }
LABEL_8:
      uint64_t v18 = v9;
      break;
    case 6:
      sub_22261870C(v15, (uint64_t)&v17);
      if ((sub_222694914(a1, v9, 0x18Cu, v15[0], v15[1]) & 1) == 0) {
        goto LABEL_12;
      }
      return v16;
    default:
LABEL_11:
      sub_222688C3C(a1, a4, 3081, (uint64_t)v14);
      sub_222694318((uint64_t)v14, (uint64_t)&v16);
      uint64_t v13 = sub_222674270(a3);
      sub_222625214(v14, &v13);
      sub_2225F37F0(v14);
LABEL_12:
      sub_2225D3A34(&v18);
      break;
  }
  return v18;
}

uint64_t sub_222694740(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v5);
  uint64_t result = sub_222655B10(v1);
  if (result)
  {
    uint64_t v3 = result;
    if (sub_222687F90(result))
    {
      return 0;
    }
    else if (sub_22265E240(v3) & 1) != 0 || (sub_222699698(v3))
    {
      return 1;
    }
    else
    {
      uint64_t v4 = sub_2225C3C70((uint64_t)&v5);
      return sub_22268AC3C(v4);
    }
  }
  return result;
}

uint64_t sub_2226947B8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  v21[0] = sub_222659834(a2);
  if (!sub_2225C5C08())
  {
    if (sub_2226593F4(a2)) {
      return 0;
    }
    uint64_t v8 = sub_222659694(a2);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_2225C3D04(v8);
      uint64_t v11 = (_DWORD *)sub_2226611F0(v10);
      if (v11)
      {
        unsigned int v12 = sub_2226551A0(v11);
        if (v12 <= 7 && ((1 << v12) & 0xAE) != 0)
        {
LABEL_9:
          unsigned int v13 = a3;
          uint64_t v14 = a1;
          int v15 = 3006;
LABEL_18:
          sub_222688C3C(v14, v13, v15, (uint64_t)v21);
          uint64_t v20 = sub_222674270(a2);
          sub_222625214(v21, &v20);
          uint64_t v6 = v21;
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v17 = sub_2225C3D04(v9);
        uint64_t v18 = sub_22268D934(v17);
        if (v18 && sub_222655E50(v18)) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      uint64_t v16 = sub_222695570(a2);
      if (v16 || (uint64_t v16 = sub_2226955AC(a2)) != 0)
      {
        uint64_t v19 = sub_2225C5B40(v16);
        return sub_2226947B8(a1, v19, a3);
      }
    }
    unsigned int v13 = a3;
    uint64_t v14 = a1;
    int v15 = 3043;
    goto LABEL_18;
  }
  sub_222688C3C(a1, a3, 3006, (uint64_t)v22);
  uint64_t v6 = v22;
LABEL_19:
  sub_2225F37F0(v6);
  return 1;
}

uint64_t sub_222694914(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  v19[1] = a5;
  uint64_t v20 = a2;
  v19[0] = a4;
  unsigned int v18 = a3;
  uint64_t v7 = sub_222697A90(a2, a3);
  if ((v7 & 1) == 0)
  {
    sub_2225DAD14(v17);
    sub_222697BFC((const void **)1, "float", (int *)&v18, v17);
    sub_222697BFC((const void **)0x20, "vec2, vec3, vec4", (int *)&v18, v17);
    sub_222697BFC((const void **)2, "half", (int *)&v18, v17);
    sub_222697BFC((const void **)0x40, "hvec2, hvec3, hvec4", (int *)&v18, v17);
    sub_222697BFC((const void **)4, "int", (int *)&v18, v17);
    sub_222697BFC((const void **)0x80, "ivec2, ivec3, ivec4", (int *)&v18, v17);
    sub_222697BFC((const void **)8, "uint", (int *)&v18, v17);
    sub_222697BFC((const void **)0x100, "uvec2, uvec3, uvec4", (int *)&v18, v17);
    sub_222697BFC((const void **)0x10, "BOOL", (int *)&v18, v17);
    sub_222697BFC((const void **)0x200, "bvec2, bvec3, bvec4", (int *)&v18, v17);
    sub_222697BFC((const void **)0x400, "mat2, mat3, mat4, hmat2, hmat3, hmat4", (int *)&v18, v17);
    sub_222697BFC((const void **)0x800, "mat2, mat2x3, mat2x4, mat3x2, mat3, mat3x4, mat4x2, mat4x3, mat4, hmat2, hmat2x3, hmat2x4, hmat3x2, hmat3, hmat3x4, hmat4x2, hmat4x3, hmat4", (int *)&v18, v17);
    sub_2225F3278(&v16);
    uint64_t v8 = (uint64_t *)sub_2225C3C70((uint64_t)v19);
    uint64_t v9 = sub_2225DC1A0(v19);
    if (v8 != (uint64_t *)v9)
    {
      uint64_t v10 = (uint64_t *)v9;
      while (1)
      {
        uint64_t v11 = (unsigned int *)*v8;
        v15[0] = sub_222659834(*v8);
        if (sub_222688268(v15, a2)) {
          break;
        }
        if (++v8 == v10) {
          goto LABEL_8;
        }
      }
      unsigned int v16 = sub_2225C3B40(v11);
    }
LABEL_8:
    sub_222688C3C(a1, v16, 2312, (uint64_t)v15);
    sub_222694318((uint64_t)v15, (uint64_t)&v20);
    uint64_t v12 = sub_2225CA4D0((uint64_t)v17);
    sub_2225F3774(v15, v12, v13);
    sub_2225F37F0(v15);
    sub_2225CA520(v17);
  }
  return v7;
}

uint64_t sub_222694B50(uint64_t *a1, int a2, uint64_t *a3, uint64_t *a4, unsigned int a5)
{
  uint64_t v9 = sub_222659834(*a3);
  uint64_t v146 = v9;
  uint64_t v10 = sub_222659834(*a4);
  v144[4] = a3;
  uint64_t v145 = v10;
  v144[0] = &v145;
  v144[1] = &v146;
  v144[2] = a1;
  v144[3] = a4;
  switch(a2)
  {
    case 1:
      uint64_t v46 = sub_222659834(*a4);
      goto LABEL_45;
    case 2:
    case 3:
    case 4:
      if (!sub_222688268(&v146, v10)) {
        goto LABEL_129;
      }
      uint64_t v29 = sub_2225C3C70((uint64_t)&v146);
      if (!sub_22265E240(v29)) {
        goto LABEL_129;
      }
      uint64_t v30 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v31 = sub_22265E3C0(v30);
      if (sub_222655AE4(v31) != 7) {
        goto LABEL_129;
      }
      goto LABEL_89;
    case 5:
    case 6:
    case 7:
      sub_22261870C(v139, (uint64_t)a3);
      if ((sub_222694914((uint64_t)a1, v9, 0x18Cu, v139[0], v139[1]) & 1) == 0) {
        goto LABEL_68;
      }
      if (sub_222688268(&v146, v145)) {
        goto LABEL_89;
      }
      uint64_t v32 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v33 = sub_222654A90(v32);
      uint64_t v34 = sub_2225C3C70((uint64_t)&v145);
      uint64_t v35 = sub_222654A90(v34);
      uint64_t v36 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v37 = sub_222654B7C(v36);
      uint64_t v38 = sub_2225C3C70((uint64_t)&v145);
      uint64_t v39 = sub_222654B7C(v38);
      if (v33 && (uint64_t v40 = v39) != 0)
      {
        if (sub_2225C3D04(v39) != v33)
        {
          if (sub_222655AE4(v33) == 5) {
            unsigned int v41 = 132;
          }
          else {
            unsigned int v41 = 264;
          }
          uint64_t v42 = v145;
          sub_22261870C(v138, (uint64_t)a4);
          uint64_t v43 = v138[0];
          uint64_t v44 = v138[1];
LABEL_67:
          sub_222694914((uint64_t)a1, v42, v41, v43, v44);
          goto LABEL_68;
        }
        uint64_t v84 = v40;
      }
      else
      {
        if (!v37 || !v35) {
          goto LABEL_129;
        }
        if (sub_2225C3D04(v37) != v35)
        {
          uint64_t v72 = sub_2225C3D04(v37);
          uint64_t v73 = sub_222654A90(v72);
          if (sub_222655AE4(v73) == 5) {
            unsigned int v41 = 132;
          }
          else {
            unsigned int v41 = 264;
          }
          uint64_t v42 = v145;
          sub_22261870C(v137, (uint64_t)a4);
          uint64_t v43 = v137[0];
          uint64_t v44 = v137[1];
          goto LABEL_67;
        }
        uint64_t v84 = v37;
      }
      goto LABEL_132;
    case 8:
    case 9:
      sub_2226954CC(v144);
      if (!sub_222688268(&v146, v145)) {
        goto LABEL_129;
      }
      uint64_t v46 = sub_222687C14(*a1, 7);
      goto LABEL_45;
    case 10:
    case 11:
    case 12:
    case 13:
      sub_2226954CC(v144);
      if (sub_222688268(&v146, v145))
      {
        uint64_t v11 = sub_2225C3C70((uint64_t)&v146);
        if (sub_22265E240(v11))
        {
          uint64_t v12 = sub_2225C3C70((uint64_t)&v146);
          uint64_t v13 = sub_22265E3C0(v12);
          unsigned int v14 = sub_222655AE4(v13);
          if (v14 <= 6 && ((1 << v14) & 0x68) != 0)
          {
            v147[0] = sub_222687C14(*a1, 7);
            return v147[0];
          }
        }
      }
      uint64_t v15 = sub_2225C3C70((uint64_t)&v146);
      if (sub_22265E240(v15))
      {
        uint64_t v16 = sub_2225C3C70((uint64_t)&v145);
        if (sub_22265E240(v16))
        {
          sub_22268824C(&v146, v145);
          goto LABEL_129;
        }
      }
      sub_222688C3C((uint64_t)a1, a5, 1958, (uint64_t)v140);
      int v45 = (uint64_t *)v140;
      goto LABEL_130;
    case 14:
    case 15:
      sub_22261870C(v136, (uint64_t)a3);
      if ((sub_222694914((uint64_t)a1, v9, 0x18Cu, v136[0], v136[1]) & 1) == 0) {
        goto LABEL_68;
      }
      uint64_t v47 = v145;
      sub_22261870C(v135, (uint64_t)a4);
      if ((sub_222694914((uint64_t)a1, v47, 0x18Cu, v135[0], v135[1]) & 1) == 0) {
        goto LABEL_68;
      }
      uint64_t v48 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v49 = sub_222654A90(v48);
      uint64_t v50 = sub_2225C3C70((uint64_t)&v145);
      uint64_t v51 = sub_222654A90(v50);
      if (!v49 || v51)
      {
        uint64_t v78 = sub_2225C3C70((uint64_t)&v146);
        uint64_t v79 = sub_222654B7C(v78);
        uint64_t v80 = sub_2225C3C70((uint64_t)&v145);
        uint64_t v81 = sub_222654B7C(v80);
        if (!v79) {
          goto LABEL_89;
        }
        uint64_t v82 = v81;
        if (!v81) {
          goto LABEL_89;
        }
        int v83 = sub_222654EC8(v79);
        if (v83 == sub_222654EC8(v82)) {
          goto LABEL_89;
        }
        unsigned int v52 = a5;
        uint64_t v53 = (uint64_t)a1;
        int v54 = 2842;
      }
      else
      {
        unsigned int v52 = a5;
        uint64_t v53 = (uint64_t)a1;
        int v54 = 2841;
      }
      sub_222688C3C(v53, v52, v54, (uint64_t)v143);
      sub_222694318((uint64_t)v143, (uint64_t)&v146);
      sub_222694318((uint64_t)v143, (uint64_t)&v145);
      uint64_t v142 = sub_222674270(*a3);
      long long v55 = sub_222625214(v143, &v142);
      uint64_t v141 = sub_222674270(*a4);
      sub_222625214(v55, &v141);
      sub_2225F37F0(v143);
LABEL_68:
      sub_2225D3A34(v147);
      return v147[0];
    case 16:
    case 17:
    case 19:
    case 20:
      uint64_t v17 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v18 = sub_222654A90(v17);
      uint64_t v19 = sub_2225C3C70((uint64_t)&v145);
      uint64_t v20 = sub_222654A90(v19);
      uint64_t v21 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v22 = sub_222654B7C(v21);
      uint64_t v23 = sub_2225C3C70((uint64_t)&v145);
      uint64_t v24 = sub_222654B7C(v23);
      uint64_t v25 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v26 = sub_222654C5C(v25);
      uint64_t v27 = sub_2225C3C70((uint64_t)&v145);
      uint64_t v28 = sub_222654C5C(v27);
      sub_2226954CC(v144);
      if (v18 && v20) {
        goto LABEL_12;
      }
      if (v22 | v26 && v20) {
        goto LABEL_40;
      }
      BOOL v56 = v24 != 0;
      if (!v18)
      {
        if (v22 && v24 || ((BOOL v74 = v28 != 0, v28) ? (v75 = v26 != 0) : (v75 = 0), a2 != 20 && v75))
        {
LABEL_12:
          if (sub_222688268(&v146, v145)) {
            goto LABEL_89;
          }
          goto LABEL_129;
        }
LABEL_78:
        if (a2 != 20) {
          goto LABEL_129;
        }
        BOOL v76 = v56;
        if (v26)
        {
          uint64_t v77 = sub_2225C3D04(v26);
        }
        else
        {
          if (!v22)
          {
            uint64_t v85 = 0;
LABEL_102:
            sub_2225C64B8(v143, v85);
            if (v74)
            {
              uint64_t v86 = sub_2225C3D04(v28);
            }
            else
            {
              if (!v76)
              {
                uint64_t v87 = 0;
LABEL_111:
                sub_2225C64B8(&v142, v87);
                if (sub_22268824C(v143, v142)) {
                  goto LABEL_129;
                }
                if (v26) {
                  BOOL v88 = v76;
                }
                else {
                  BOOL v88 = 0;
                }
                if (v88)
                {
                  uint64_t v89 = sub_2225C3C70((uint64_t)&v146);
                  uint64_t v90 = sub_22265E3C0(v89);
                  int v91 = sub_222654EC8(v90);
                  uint64_t v92 = sub_2225C3C70((uint64_t)&v145);
                  uint64_t v93 = sub_22265E3C0(v92);
                  if (v91 != sub_222654EC8(v93)) {
                    goto LABEL_129;
                  }
                  uint64_t v94 = *a1;
                  uint64_t v95 = sub_2225C3C70((uint64_t)&v146);
                  uint64_t v96 = sub_22265E3C0(v95);
                  uint64_t v97 = sub_2225C3D04(v96);
                  uint64_t v98 = sub_222654A90(v97);
                  uint64_t v99 = sub_2225C3C70((uint64_t)&v146);
                  uint64_t v100 = sub_22265E3C0(v99);
                  int v101 = sub_222654FBC(v100);
                }
                else
                {
                  if (v22) {
                    BOOL v102 = v74;
                  }
                  else {
                    BOOL v102 = 0;
                  }
                  if (!v102)
                  {
                    if (!v75) {
                      goto LABEL_129;
                    }
                    uint64_t v113 = sub_2225C3C70((uint64_t)&v146);
                    uint64_t v114 = sub_22265E3C0(v113);
                    int v115 = sub_222654EC8(v114);
                    uint64_t v116 = sub_2225C3C70((uint64_t)&v145);
                    uint64_t v117 = sub_22265E3C0(v116);
                    if (v115 != sub_222654FBC(v117)) {
                      goto LABEL_129;
                    }
                    uint64_t v118 = *a1;
                    uint64_t v119 = sub_2225C3C70((uint64_t)&v146);
                    uint64_t v120 = sub_22265E3C0(v119);
                    uint64_t v121 = sub_2225C3D04(v120);
                    uint64_t v122 = sub_2225C3C70((uint64_t)&v145);
                    uint64_t v123 = sub_22265E3C0(v122);
                    int v124 = sub_222654EC8(v123);
                    uint64_t v125 = sub_2225C3C70((uint64_t)&v146);
                    uint64_t v126 = sub_22265E3C0(v125);
                    int v127 = sub_222654FBC(v126);
                    uint64_t v46 = sub_222687A28(v118, v121, v124, v127);
LABEL_45:
                    v147[0] = v46;
                    return v147[0];
                  }
                  uint64_t v103 = sub_2225C3C70((uint64_t)&v146);
                  uint64_t v104 = sub_22265E3C0(v103);
                  int v105 = sub_222654EC8(v104);
                  uint64_t v106 = sub_2225C3C70((uint64_t)&v145);
                  uint64_t v107 = sub_22265E3C0(v106);
                  if (v105 != sub_222654FBC(v107)) {
                    goto LABEL_129;
                  }
                  uint64_t v94 = *a1;
                  uint64_t v108 = sub_2225C3C70((uint64_t)&v145);
                  uint64_t v109 = sub_22265E3C0(v108);
                  uint64_t v110 = sub_2225C3D04(v109);
                  uint64_t v98 = sub_222654A90(v110);
                  uint64_t v111 = sub_2225C3C70((uint64_t)&v145);
                  uint64_t v112 = sub_22265E3C0(v111);
                  int v101 = sub_222654EC8(v112);
                }
                uint64_t v46 = sub_222687824(v94, v98, v101);
                goto LABEL_45;
              }
              uint64_t v86 = sub_2225C3D04(v24);
            }
            uint64_t v87 = v86;
            goto LABEL_111;
          }
          uint64_t v77 = sub_2225C3D04(v22);
        }
        uint64_t v85 = v77;
        goto LABEL_102;
      }
      if (!(v24 | v28))
      {
        BOOL v75 = 0;
        BOOL v74 = 0;
        BOOL v56 = 0;
        goto LABEL_78;
      }
LABEL_40:
      if (v22)
      {
        uint64_t v57 = sub_2225C3D04(v22);
        goto LABEL_42;
      }
      if (v24)
      {
        uint64_t v70 = sub_2225C3D04(v24);
        goto LABEL_58;
      }
      if (v26)
      {
        uint64_t v57 = sub_2225C3D04(v26);
LABEL_42:
        if (v57 != v20) {
          goto LABEL_129;
        }
LABEL_89:
        uint64_t v71 = v146;
        goto LABEL_90;
      }
      if (v28)
      {
        uint64_t v70 = sub_2225C3D04(v28);
LABEL_58:
        if (v70 == v18)
        {
LABEL_59:
          uint64_t v71 = v145;
LABEL_90:
          v147[0] = v71;
          return v147[0];
        }
      }
LABEL_129:
      sub_222688C3C((uint64_t)a1, a5, 3054, (uint64_t)v143);
      sub_222694318((uint64_t)v143, (uint64_t)&v146);
      sub_222694318((uint64_t)v143, (uint64_t)&v145);
      uint64_t v142 = sub_222674270(*a3);
      uint64_t v128 = sub_222625214(v143, &v142);
      uint64_t v141 = sub_222674270(*a4);
      sub_222625214(v128, &v141);
      int v45 = v143;
LABEL_130:
      sub_2225F37F0(v45);
LABEL_131:
      uint64_t v84 = 0;
LABEL_132:
      sub_2225C64B8(v147, v84);
      return v147[0];
    case 18:
      uint64_t v58 = sub_2225C3C70((uint64_t)&v146);
      uint64_t v59 = sub_222654A90(v58);
      uint64_t v60 = sub_2225C3C70((uint64_t)&v145);
      uint64_t v61 = sub_222654A90(v60);
      uint64_t v62 = v61;
      if (v59 && v61)
      {
        if (sub_22268824C(&v146, v145)) {
          goto LABEL_129;
        }
        sub_2225C64B8(&v134, v59);
        sub_22261870C(v133, (uint64_t)a3);
        uint64_t v64 = v133[1];
        uint64_t v63 = v134;
        uint64_t v65 = v133[0];
      }
      else
      {
        uint64_t v66 = sub_2225C3C70((uint64_t)&v146);
        uint64_t v67 = sub_222654B7C(v66);
        uint64_t v68 = sub_2225C3C70((uint64_t)&v145);
        uint64_t v69 = sub_222654B7C(v68);
        if (!v67 || !v69)
        {
          if (v67 && v62)
          {
            if (sub_2225C3D04(v67) != v62 || sub_222655AE4(v62) - 7 < 0xFFFFFFFE) {
              goto LABEL_129;
            }
            goto LABEL_89;
          }
          if (v59 && v69 && sub_2225C3D04(v69) == v59 && sub_222655AE4(v59) - 7 >= 0xFFFFFFFE) {
            goto LABEL_59;
          }
          goto LABEL_129;
        }
        if (sub_22268824C(&v146, v145)) {
          goto LABEL_129;
        }
        sub_2225C64B8(&v132, v67);
        sub_22261870C(v131, (uint64_t)a3);
        uint64_t v64 = v131[1];
        uint64_t v63 = v132;
        uint64_t v65 = v131[0];
      }
      if (sub_222694914((uint64_t)a1, v63, 0x18Cu, v65, v64)) {
        goto LABEL_89;
      }
      goto LABEL_131;
    default:
      goto LABEL_129;
  }
}

uint64_t sub_2226954CC(uint64_t **a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = a1[2];
  uint64_t result = sub_22268824C(*a1, *a1[1]);
  if (result)
  {
    uint64_t v4 = v1 + 3;
    uint64_t result = sub_222695848(v2, *v1[3], *v1[1]);
    if (!result)
    {
      uint64_t v4 = v1 + 4;
      uint64_t result = sub_222695848(v2, *v1[4], **v1);
      if (!result) {
        return result;
      }
      ++v1;
    }
    **uint64_t v4 = result;
    uint64_t result = sub_222659834(**v4);
    **uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_222695570(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222675E3C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226955AC(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222675DDC(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226955E8(uint64_t *a1, int a2, uint64_t a3, uint64_t *a4, unsigned int a5)
{
  uint64_t v24 = a3;
  if (!sub_2226947B8((uint64_t)a1, a3, a5))
  {
    sub_2225D3A34(&v23);
    switch(a2)
    {
      case 2:
        uint64_t v10 = a1;
        int v11 = 7;
        goto LABEL_15;
      case 3:
        uint64_t v10 = a1;
        int v11 = 19;
        goto LABEL_15;
      case 4:
        uint64_t v12 = *a4;
        uint64_t v13 = sub_222659834(a3);
        uint64_t v14 = sub_222695848(a1, v12, v13);
        if (v14) {
          *a4 = v14;
        }
        else {
          uint64_t v14 = *a4;
        }
        uint64_t v15 = sub_222659834(v14);
        goto LABEL_16;
      case 5:
        uint64_t v10 = a1;
        int v11 = 15;
        goto LABEL_15;
      case 6:
        uint64_t v10 = a1;
        int v11 = 18;
        goto LABEL_15;
      case 7:
        uint64_t v10 = a1;
        int v11 = 20;
        goto LABEL_15;
      case 8:
        uint64_t v10 = a1;
        int v11 = 5;
        goto LABEL_15;
      case 9:
        uint64_t v10 = a1;
        int v11 = 14;
        goto LABEL_15;
      case 10:
        uint64_t v10 = a1;
        int v11 = 17;
        goto LABEL_15;
      case 11:
        uint64_t v10 = a1;
        int v11 = 6;
        goto LABEL_15;
      default:
        uint64_t v10 = a1;
        int v11 = 16;
LABEL_15:
        uint64_t v15 = sub_222694B50(v10, v11, &v24, a4, a5);
LABEL_16:
        uint64_t v23 = v15;
        if (!sub_2225D3DB0(&v23)) {
          break;
        }
        v22[0] = sub_222659834(v24);
        if ((sub_22268824C(v22, v23) & 1) == 0 && v24 == a3) {
          return v23;
        }
        sub_222688C3C((uint64_t)a1, a5, 2420, (uint64_t)v22);
        uint64_t v21 = sub_222659834(v24);
        sub_222694318((uint64_t)v22, (uint64_t)&v21);
        uint64_t v20 = sub_222674270(v24);
        uint64_t v16 = sub_222625214(v22, &v20);
        uint64_t v19 = sub_222659834(*a4);
        sub_222694318((uint64_t)v16, (uint64_t)&v19);
        uint64_t v18 = sub_222674270(*a4);
        sub_222625214(v16, &v18);
        sub_2225F37F0(v22);
        break;
    }
  }
  sub_2225D3A34(&v25);
  return v25;
}

uint64_t sub_222695848(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a3;
  uint64_t v14 = sub_222659834(a2);
  uint64_t v5 = sub_2225C3C70((uint64_t)&v14);
  uint64_t v6 = sub_222655B10(v5);
  uint64_t v7 = sub_2225C3C70((uint64_t)&v15);
  uint64_t v8 = sub_222655B10(v7);
  uint64_t result = 0;
  if (v8 && v6)
  {
    if (sub_222650628(a1[1], 4u) && (v10 = sub_222655AE4(v6), int v11 = sub_222655AE4(v8), sub_2226996C0(v10, v11)))
    {
      uint64_t v12 = *a1;
      sub_2225C64B8(&v13, v8);
      return sub_2226751F8(v12, v13, a2);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_222695914(uint64_t a1, uint64_t a2, _WORD *a3)
{
  sub_22268EA84(v20);
  uint64_t v19 = 0;
  unint64_t v6 = sub_2225C3C70(a2);
  if ((sub_222664F4C(v6, *(void *)(a1 + 200), (uint64_t)v20, &v19) & 1) == 0)
  {
    unsigned int v9 = sub_2225F56EC(a2);
    sub_222688C3C(a1, v9, 2387, (uint64_t)v18);
    uint64_t v8 = (uint64_t *)v18;
    goto LABEL_9;
  }
  if (sub_2225C3B48((uint64_t)v20) && sub_2225C3B84(v20))
  {
    unsigned int v7 = sub_2225F56EC(a2);
    sub_222688C3C(a1, v7, 2386, (uint64_t)v17);
    uint64_t v8 = (uint64_t *)v17;
LABEL_9:
    sub_2225F37F0(v8);
    uint64_t v12 = 0;
    goto LABEL_10;
  }
  unsigned int v10 = sub_2225C54BC(v20);
  if (v10 >= 0x100)
  {
    unsigned int v13 = sub_2225F56EC(a2);
    sub_222688C3C(a1, v13, 2388, (uint64_t)v16);
    uint64_t v14 = sub_2226256C4(v16, v10);
    sub_2226256C4(v14, 0xFFu);
    uint64_t v8 = v16;
    goto LABEL_9;
  }
  unsigned __int8 v11 = sub_2225C54BC(v20);
  sub_222695A4C(a3, v11);
  uint64_t v12 = 1;
LABEL_10:
  sub_22263E6C8(v20);
  return v12;
}

_WORD *sub_222695A4C(_WORD *result, unsigned __int8 a2)
{
  *uint64_t result = *result & 0xFE00 | a2 | 0x100;
  return result;
}

uint64_t sub_222695A64(uint64_t a1, uint64_t a2, unsigned __int16 *a3, unsigned int *a4, unsigned int *a5)
{
  switch(sub_22268A5E0(a2))
  {
    case 0u:
      if (sub_22268A21C(*(void *)(a1 + 184))) {
        goto LABEL_15;
      }
      uint64_t v61 = sub_2225FB764(a2);
      uint64_t v62 = v46;
      uint64_t v47 = sub_2225C3C70((uint64_t)&v61);
      unsigned int v48 = sub_2225F56EC(v47);
      sub_222688C3C(a1, v48, 2376, (uint64_t)v55);
      uint64_t v43 = v55;
      goto LABEL_32;
    case 3u:
    case 5u:
      *(void *)&long long v60 = sub_2225FB764(a2);
      *((void *)&v60 + 1) = v10;
      uint64_t v11 = sub_2225C3C70((uint64_t)&v60);
      unsigned int v12 = sub_2225F56EC(v11);
      sub_222688C3C(a1, v12, 2374, (uint64_t)&v61);
      unsigned int v13 = sub_22260A5E8(&v61, (uint64_t)"in");
      sub_22260A5E8(v13, (uint64_t)"vertex");
      sub_2225F37F0(&v61);
      uint64_t v61 = sub_2225FB764(a2);
      uint64_t v62 = v14;
      uint64_t v15 = (long long *)sub_2225C3C70((uint64_t)&v61);
      uint64_t v16 = sub_222618404(&v61);
      if (v15 == (long long *)v16) {
        goto LABEL_6;
      }
      uint64_t v17 = (long long *)v16;
      while (1)
      {
        long long v60 = *v15;
        if (sub_2225F53D0((uint64_t)&v60) != 46) {
          break;
        }
        if (++v15 == v17)
        {
LABEL_6:
          uint64_t v61 = sub_2225FB764(a2);
          uint64_t v62 = v18;
          sub_2225C3D04((uint64_t)&v61);
          goto LABEL_13;
        }
      }
      unsigned int v44 = sub_2225F56EC((uint64_t)&v60);
      sub_222688C3C(a1, v44, 2643, (uint64_t)v59);
      uint64_t v43 = v59;
      goto LABEL_32;
    case 4u:
    case 6u:
      uint64_t v61 = sub_2225FB764(a2);
      uint64_t v62 = v19;
      uint64_t v20 = (long long *)sub_2225C3C70((uint64_t)&v61);
      uint64_t v21 = sub_222618404(&v61);
      if (v20 == (long long *)v21) {
        goto LABEL_11;
      }
      uint64_t v22 = (long long *)v21;
      break;
    case 7u:
LABEL_15:
      uint64_t v61 = sub_2225FB764(a2);
      uint64_t v62 = v33;
      uint64_t v34 = (long long *)sub_2225C3C70((uint64_t)&v61);
      uint64_t v35 = sub_222618404(&v61);
      if (v34 == (long long *)v35)
      {
        char v32 = 1;
      }
      else
      {
        uint64_t v36 = (long long *)v35;
        char v32 = 1;
        do
        {
          long long v60 = *v34;
          int v37 = sub_2225F53D0((uint64_t)&v60);
          int v38 = byte_2226D1264[v37];
          if (byte_2226D1264[v37])
          {
            if (sub_222655248(byte_2226D1264[v37]))
            {
              if (sub_222655200(a3))
              {
                unsigned int v39 = sub_2225F56EC((uint64_t)&v60);
                sub_222688C3C(a1, v39, 4102, (uint64_t)v53);
                sub_2225F37F0(v53);
                sub_222688C3C(a1, *a4, 3555, (uint64_t)v52);
                sub_2225F37F0(v52);
              }
              sub_222689658(a3, v38);
              *a4 = sub_2225F56EC((uint64_t)&v60);
            }
            else
            {
              sub_222655258(v38);
              if (sub_222655230(a3))
              {
                unsigned int v41 = sub_2225F56EC((uint64_t)&v60);
                sub_222688C3C(a1, v41, 4102, (uint64_t)v51);
                sub_2225F37F0(v51);
                sub_222688C3C(a1, *a5, 3555, (uint64_t)v50);
                sub_2225F37F0(v50);
              }
              sub_222689670(a3, v38);
              *a5 = sub_2225F56EC((uint64_t)&v60);
            }
          }
          else
          {
            unsigned int v40 = sub_2225F56EC((uint64_t)&v60);
            sub_222688C3C(a1, v40, 2493, (uint64_t)v54);
            sub_2225F37F0(v54);
            char v32 = 0;
          }
          ++v34;
        }
        while (v34 != v36);
      }
      return v32 & 1;
    default:
      unsigned int v42 = sub_222613380(a2);
      sub_222688C3C(a1, v42, 2373, (uint64_t)v63);
      uint64_t v43 = v63;
      goto LABEL_32;
  }
  while (1)
  {
    long long v60 = *v20;
    if (sub_2225F53D0((uint64_t)&v60) != 46) {
      break;
    }
    if (++v20 == v22)
    {
LABEL_11:
      uint64_t v61 = sub_2225FB764(a2);
      uint64_t v62 = v23;
      if ((unint64_t)sub_2225C3D04((uint64_t)&v61) >= 2)
      {
        uint64_t v61 = sub_2225FB764(a2);
        uint64_t v62 = v24;
        uint64_t v25 = sub_222695EF0(&v61);
        unsigned int v26 = sub_2225F56EC(v25);
        sub_222688C3C(a1, v26, 4102, (uint64_t)v57);
        sub_2225F37F0(v57);
        uint64_t v61 = sub_2225FB764(a2);
        uint64_t v62 = v27;
        uint64_t v28 = sub_2225C3C70((uint64_t)&v61);
        unsigned int v29 = sub_2225F56EC(v28);
        sub_222688C3C(a1, v29, 3555, (uint64_t)v56);
        sub_2225F37F0(v56);
      }
LABEL_13:
      uint64_t v61 = sub_2225FB764(a2);
      uint64_t v62 = v30;
      uint64_t v31 = sub_222695EF0(&v61);
      char v32 = sub_222695914(a1, v31, a3);
      return v32 & 1;
    }
  }
  unsigned int v45 = sub_2225F56EC((uint64_t)&v60);
  sub_222688C3C(a1, v45, 2643, (uint64_t)v58);
  uint64_t v43 = v58;
LABEL_32:
  sub_2225F37F0(v43);
  char v32 = 0;
  return v32 & 1;
}

uint64_t sub_222695EF0(void *a1)
{
  return *a1 + 16 * a1[1] - 16;
}

uint64_t sub_222695F00(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5 = sub_222695F80(a2);
  if ((v5 & 1) == 0)
  {
    sub_222688C3C(a1, a3, 2299, (uint64_t)v8);
    unint64_t v6 = sub_22260A5E8(v8, (uint64_t)"fragment");
    sub_22260A5E8(v6, (uint64_t)"in");
    sub_2225F37F0(v8);
  }
  return v5;
}

uint64_t sub_222695F80(uint64_t a1)
{
  uint64_t v20 = a1;
  int v19 = 0;
  uint64_t v1 = sub_2225C3C70((uint64_t)&v20);
  if (sub_222694570(v1, &v19)) {
    return 1;
  }
  uint64_t v2 = sub_2225C3C70((uint64_t)&v20);
  if (sub_2226876CC(v2, &v19)) {
    return 1;
  }
  uint64_t v4 = sub_2225C3C70((uint64_t)&v20);
  if (sub_22268CD84(v4)) {
    return 0;
  }
  uint64_t v5 = sub_2225C3C70((uint64_t)&v20);
  if (sub_222655E28(v5)) {
    return 0;
  }
  uint64_t v6 = sub_2225C3C70((uint64_t)&v20);
  uint64_t result = sub_222655268(v6);
  if (result)
  {
    uint64_t v7 = sub_2225C3D04(result) + 16;
    uint64_t v8 = (uint64_t *)sub_2225CC180(v7);
    uint64_t v9 = sub_22265594C(v7);
    if (v8 == (uint64_t *)v9) {
      return 1;
    }
    uint64_t v10 = (uint64_t *)v9;
    while (1)
    {
      uint64_t v11 = *v8;
      unsigned int v12 = (unsigned __int8 **)sub_222653754(*v8);
      uint64_t v13 = sub_222653758(v11);
      if (v12 != (unsigned __int8 **)v13) {
        break;
      }
LABEL_17:
      ++v8;
      uint64_t result = 1;
      if (v8 == v10) {
        return result;
      }
    }
    uint64_t v14 = (unsigned __int8 **)v13;
    while (1)
    {
      uint64_t v18 = sub_222659C34(*v12);
      uint64_t v15 = sub_2225C3C70((uint64_t)&v18);
      uint64_t v16 = sub_222655B10(v15);
      LODWORD(v18) = 0;
      if (!v16) {
        return 0;
      }
      uint64_t v17 = v16;
      if ((sub_2226876CC(v16, &v18) & 1) == 0 && !sub_222694570(v17, &v18)) {
        return 0;
      }
      if (++v12 == v14) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

uint64_t sub_2226960CC(uint64_t a1, uint64_t a2)
{
  v8[0] = a1;
  v8[1] = a2;
  if (sub_2225CF1E0((uint64_t)v8)) {
    return 0;
  }
  uint64_t v2 = (uint64_t *)sub_2225C3C70((uint64_t)v8);
  uint64_t v3 = sub_2225DC1A0(v8);
  if (v2 == (uint64_t *)v3) {
    return 0;
  }
  uint64_t v4 = (uint64_t *)v3;
  uint64_t v5 = 0;
  do
  {
    uint64_t v6 = *v2;
    if (v5 < sub_222659320(*v2)) {
      uint64_t v5 = sub_222659320(v6);
    }
    ++v2;
  }
  while (v2 != v4);
  return v5;
}

uint64_t sub_222696164(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = sub_222659320(*a2);
  if (result != a3)
  {
    sub_222696290(*a2);
    v14[0] = sub_222659834(*a2);
    uint64_t v7 = sub_2225C3C70((uint64_t)v14);
    uint64_t v8 = sub_222655B10(v7);
    if (v8)
    {
      uint64_t v9 = v8;
      if (sub_222655AE4(v8) == 5 || sub_222655AE4(v9) == 6)
      {
        sub_22268EA84(v14);
        if (sub_22268EA88(*a2, a1[25], (uint64_t)v14))
        {
          sub_222693B6C(v13, v14);
          BOOL v10 = sub_2226962CC(v13, a3);
          sub_22263E6C8(v13);
          if (!v10)
          {
            unsigned int v11 = sub_2225C3B40((unsigned int *)*a2);
            sub_222688C3C((uint64_t)a1, v11, 4105, (uint64_t)v12);
            sub_2225F37F0(v12);
          }
        }
        sub_22263E6C8(v14);
      }
    }
    if (sub_222659320(*a2))
    {
      uint64_t result = sub_2226751A8(*a1, a3, *a2);
      *a2 = result;
    }
    else
    {
      return sub_22267460C(*a2, a3);
    }
  }
  return result;
}

uint64_t sub_222696290(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_222699A9C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

BOOL sub_2226962CC(int *a1, int a2)
{
  unsigned int v3 = dword_2226D12B4[a2 - 1];
  if (sub_2225C3B48((uint64_t)a1)) {
    unsigned int v4 = sub_222699A54(a1);
  }
  else {
    unsigned int v4 = sub_2225C5C28(a1);
  }
  return v4 <= v3;
}

uint64_t sub_222696320(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v15[0] = a2;
  v15[1] = a3;
  unsigned int v14 = 0;
  unsigned int v4 = (uint64_t *)sub_22265E3C4(v15);
  uint64_t v5 = sub_22268F450((uint64_t)v15);
  if (v4 != (uint64_t *)v5)
  {
    uint64_t v6 = (uint64_t *)v5;
    do
    {
      uint64_t v7 = *v4++;
      int v13 = sub_222659320(v7);
      unsigned int v14 = *(_DWORD *)sub_2225C7858(&v14, &v13);
    }
    while (v4 != v6);
  }
  uint64_t v8 = (uint64_t *)sub_22265E3C4(v15);
  uint64_t result = sub_22268F450((uint64_t)v15);
  if (v8 != (uint64_t *)result)
  {
    BOOL v10 = (uint64_t *)result;
    do
    {
      int v11 = sub_222659320(*v8);
      uint64_t v12 = *v8;
      if (v11)
      {
        uint64_t result = sub_222659320(v12);
        if (result != v14)
        {
          uint64_t result = sub_2226751A8(*a1, v14, *v8);
          *uint64_t v8 = result;
        }
      }
      else
      {
        uint64_t result = sub_22267460C(v12, v14);
      }
      ++v8;
    }
    while (v8 != v10);
  }
  return result;
}

uint64_t sub_22269640C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_222659320(*a2);
  uint64_t result = sub_222659320(*a3);
  if (v6 != result)
  {
    uint64_t v8 = result;
    if (v6)
    {
      if (result)
      {
        uint64_t v9 = *a1;
        if (v6 <= v8)
        {
          uint64_t result = sub_2226751A8(v9, v8, *a2);
          *a2 = result;
        }
        else
        {
          uint64_t result = sub_2226751A8(v9, v6, *a3);
          *a3 = result;
        }
        return result;
      }
      uint64_t v10 = *a3;
      LODWORD(v8) = v6;
    }
    else
    {
      uint64_t v10 = *a2;
    }
    return sub_22267460C(v10, v8);
  }
  return result;
}

uint64_t sub_2226964C4(uint64_t a1, int a2, unsigned int a3, unsigned int a4)
{
  int v15 = a2;
  if (sub_222655200((unsigned __int16 *)&v15))
  {
    int v7 = sub_222655224((unsigned __int16 *)(a1 + 440));
    if (v7 == sub_222655224((unsigned __int16 *)&v15))
    {
      sub_222688C3C(a1, a3, 4104, (uint64_t)v14);
      sub_2225F37F0(v14);
      if (sub_2225F38E8((_DWORD *)(a1 + 444)))
      {
        sub_222688C3C(a1, a3, 3554, (uint64_t)v13);
        int v8 = 1;
      }
      else
      {
        sub_222688C3C(a1, *(_DWORD *)(a1 + 444), 3554, (uint64_t)v13);
        int v8 = 0;
      }
      sub_222622304(v13, v8);
      sub_2225F37F0(v13);
    }
  }
  uint64_t result = sub_222655230((unsigned __int16 *)&v15);
  if (result)
  {
    int v10 = sub_22265523C((unsigned __int16 *)(a1 + 440));
    uint64_t result = sub_22265523C((unsigned __int16 *)&v15);
    if (v10 == result)
    {
      sub_222688C3C(a1, a4, 4104, (uint64_t)v12);
      sub_2225F37F0(v12);
      if (sub_2225F38E8((_DWORD *)(a1 + 448)))
      {
        sub_222688C3C(a1, a4, 3554, (uint64_t)v13);
        int v11 = 1;
      }
      else
      {
        sub_222688C3C(a1, *(_DWORD *)(a1 + 448), 3554, (uint64_t)v13);
        int v11 = 0;
      }
      sub_222622304(v13, v11);
      return sub_2225F37F0(v13);
    }
  }
  return result;
}

uint64_t sub_222696638(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  v20[0] = a2;
  v20[1] = a3;
  int v10 = (uint64_t *)sub_2225C3C70((uint64_t)v20);
  uint64_t v11 = sub_2225DC1A0(v20);
  if (v10 == (uint64_t *)v11)
  {
LABEL_7:
    sub_222688C3C(a1, a4, 1875, (uint64_t)v19);
    uint64_t v17 = sub_222635F48(v19, a5);
    sub_222635F48(v17, a6);
    sub_2225F37F0(v19);
    return 0;
  }
  else
  {
    uint64_t v12 = (uint64_t *)v11;
    while (1)
    {
      uint64_t v13 = *v10;
      unsigned int v14 = (uint64_t *)sub_222653754(*v10);
      uint64_t v15 = sub_222653758(v13);
      if (v14 != (uint64_t *)v15) {
        break;
      }
LABEL_6:
      if (++v10 == v12) {
        goto LABEL_7;
      }
    }
    while (1)
    {
      uint64_t v16 = *v14;
      if (sub_2226906F8(a1, *v14) == a5) {
        return sub_2225E55A8(v16);
      }
      if (++v14 == (uint64_t *)v15) {
        goto LABEL_6;
      }
    }
  }
}

uint64_t sub_222696744(uint64_t *a1, uint64_t a2, _DWORD *a3, unsigned int a4, uint64_t a5, int a6)
{
  uint64_t v12 = (unsigned char *)sub_2225F2DB8(a5);
  int v38 = 0;
  int v13 = sub_222696A60((char)*v12);
  if (v13 == -1)
  {
    int v17 = sub_222696A88((char)*v12);
    if (v17 == -1)
    {
      int v28 = sub_222696AC4((char)*v12);
      if (v28 == -1)
      {
        char v14 = 0;
      }
      else
      {
        char v14 = 0;
        do
        {
          v14 |= *((unsigned char *)&v38 + v28) != 0;
          *((unsigned char *)&v38 + v28) = 1;
          int v29 = (char)*++v12;
          int v28 = sub_222696AC4(v29);
        }
        while (v28 != -1);
      }
LABEL_14:
      if (*v12)
      {
        sub_222688C3C((uint64_t)a1, a4, 2152, (uint64_t)v36);
        sub_2225C3D0C(v37, v12, 1);
        uint64_t v20 = sub_2225F3774((uint64_t *)v36, v37[0], v37[1]);
        sub_22262FD48(v35, a6);
        uint64_t v21 = (const void **)v20;
LABEL_16:
        sub_222625214(v21, v35);
        sub_2225F37F0(v36);
        sub_2225D3A34(&v39);
        return v39;
      }
    }
    else
    {
      char v14 = 0;
      while (1)
      {
        if (*((unsigned char *)&v38 + v17)) {
          char v14 = 1;
        }
        *((unsigned char *)&v38 + v17) = 1;
        int v19 = *++v12;
        char v18 = v19;
        if (!v19) {
          break;
        }
        int v17 = sub_222696A88(v18);
        if (v17 == -1) {
          goto LABEL_14;
        }
      }
    }
  }
  else
  {
    char v14 = 0;
    while (1)
    {
      if (*((unsigned char *)&v38 + v13)) {
        char v14 = 1;
      }
      *((unsigned char *)&v38 + v13) = 1;
      int v16 = *++v12;
      char v15 = v16;
      if (!v16) {
        break;
      }
      int v13 = sub_222696A60(v15);
      if (v13 == -1) {
        goto LABEL_14;
      }
    }
  }
  unsigned int v22 = sub_2225F2DD0(a5);
  if (v22 >= 5)
  {
    sub_2225CF1C4(v36);
    sub_2225C3A6C(v35, 64, v22, 0);
    sub_2225CA060(v35, v36, 0xAu, 0, 0);
    sub_222688C3C((uint64_t)a1, a4, 3181, (uint64_t)v34);
    uint64_t v23 = sub_2225CA4D0((uint64_t)v36);
    uint64_t v25 = sub_2225F3774(v34, v23, v24);
    sub_22262FD48(&v33, a6);
    sub_222625214(v25, &v33);
    sub_2225F37F0(v34);
    sub_2225D3A34(&v39);
    sub_2225C2F10(v35);
    sub_2225CA520(v36);
    return v39;
  }
  unsigned int v26 = sub_222654EC8(a2);
  if (v26 != 4)
  {
    while (!*((unsigned char *)&v38 + v26))
    {
      if (++v26 == 4) {
        goto LABEL_22;
      }
    }
    sub_222688C3C((uint64_t)a1, a4, 2151, (uint64_t)v36);
    sub_222696AEC(v36, a2);
    sub_22262FD48(v35, a6);
    uint64_t v21 = v36;
    goto LABEL_16;
  }
LABEL_22:
  if (v22 == 1)
  {
    uint64_t v27 = sub_2225C3D04(a2);
    sub_2225C64B8(&v39, v27);
  }
  else
  {
    if (v14) {
      *a3 = 0;
    }
    uint64_t v30 = *a1;
    uint64_t v31 = sub_2225C3D04(a2);
    return sub_222687824(v30, v31, v22);
  }
  return v39;
}

uint64_t sub_222696A60(int a1)
{
  uint64_t v1 = a1 - 119;
  if (v1 > 3) {
    return 0xFFFFFFFFLL;
  }
  else {
    return dword_2226D1300[v1];
  }
}

uint64_t sub_222696A88(int a1)
{
  if (a1 == 114) {
    int v1 = 0;
  }
  else {
    int v1 = -1;
  }
  if (a1 == 103) {
    unsigned int v2 = 1;
  }
  else {
    unsigned int v2 = v1;
  }
  if (a1 == 98) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = -1;
  }
  if (a1 == 97) {
    unsigned int v3 = 3;
  }
  if (a1 <= 102) {
    return v3;
  }
  else {
    return v2;
  }
}

uint64_t sub_222696AC4(int a1)
{
  uint64_t v1 = a1 - 112;
  if (v1 > 4) {
    return 0xFFFFFFFFLL;
  }
  else {
    return dword_2226D12C0[v1];
  }
}

uint64_t sub_222696AF0(uint64_t *a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  if ((unint64_t)sub_2225C3D04((uint64_t)&v20) >= 2)
  {
    sub_222688C3C((uint64_t)a1, a4, 2116, (uint64_t)v19);
    uint64_t v12 = sub_222622304(v19, 2);
    int v13 = (unsigned int **)sub_2225C6BC0(&v20, 1);
    int v14 = sub_2225C3B40(*v13);
    sub_22262FD48(&v18, v14);
    sub_222625214(v12, &v18);
    char v15 = v19;
LABEL_5:
    sub_2225F37F0(v15);
    return 0;
  }
  if (sub_2225CF1E0((uint64_t)&v20))
  {
    sub_222688C3C((uint64_t)a1, a4, 2101, (uint64_t)v17);
    char v15 = (uint64_t *)v17;
    goto LABEL_5;
  }
  return sub_222674A90(*a1, a2, a3, 0, v20, v21, a7);
}

uint64_t sub_222696BF0(uint64_t *a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v67 = a2;
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  if (sub_2225C3D04((uint64_t)&v65) == 1)
  {
    uint64_t v12 = (uint64_t *)sub_2225C6BC0(&v65, 0);
    v62[0] = sub_222659834(*v12);
    uint64_t v13 = sub_2225C3C70((uint64_t)v62);
    if (sub_22265E240(v13))
    {
      uint64_t v14 = *a1;
      int v15 = a3;
      int v16 = a7;
      uint64_t v17 = v65;
      uint64_t v18 = v66;
      uint64_t v19 = a2;
      char v20 = 1;
      return sub_222674A90(v14, v19, v15, v20, v17, v18, v16);
    }
  }
  uint64_t v21 = sub_2225C3C70((uint64_t)&v67);
  uint64_t v22 = sub_2225E55A8(v21);
  int v23 = sub_222654EC8(v22);
  uint64_t v24 = sub_2225C3D04((uint64_t)&v65);
  if (v24 && v23 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = v24 - 1;
    do
    {
      uint64_t v27 = (uint64_t *)sub_2225C6BC0(&v65, v25);
      v62[0] = sub_222659834(*v27);
      uint64_t v28 = sub_2225C3C70((uint64_t)v62);
      if (sub_22265E240(v28))
      {
        --v23;
      }
      else
      {
        uint64_t v29 = sub_2225C3C70((uint64_t)v62);
        uint64_t v30 = sub_222654E2C(v29);
        uint64_t v31 = sub_2225C3C70((uint64_t)v62);
        uint64_t v32 = sub_222654F20(v31);
        if (!(v30 | v32)) {
          return 0;
        }
        if (v30) {
          int v33 = sub_222654EC8(v30);
        }
        else {
          int v33 = sub_22267350C(v32);
        }
        v23 -= v33;
      }
      uint64_t v34 = v25 + 1;
      if (v26 == v25) {
        break;
      }
      ++v25;
    }
    while (v23 > 0);
    if (v23 <= 0) {
      goto LABEL_31;
    }
  }
  else if (v23 < 1)
  {
    uint64_t v34 = 0;
LABEL_31:
    if (sub_2225C3D04((uint64_t)&v65) == v34)
    {
      uint64_t v14 = *a1;
      uint64_t v19 = v67;
      int v15 = a3;
      int v16 = a7;
      uint64_t v17 = v65;
      uint64_t v18 = v66;
      char v20 = 0;
      return sub_222674A90(v14, v19, v15, v20, v17, v18, v16);
    }
    sub_222688C3C((uint64_t)a1, a4, 2116, (uint64_t)v62);
    int v54 = sub_222622304(v62, 1);
    long long v55 = (unsigned int **)sub_2225C6BC0(&v65, v34);
    int v56 = sub_2225C3B40(*v55);
    sub_22262FD48(&v63, v56);
    sub_222625214(v54, &v63);
    goto LABEL_37;
  }
  sub_222688C3C((uint64_t)a1, a4, 2019, (uint64_t)v64);
  sub_2225F37F0(v64);
  if (v22)
  {
    uint64_t v35 = (uint64_t *)sub_2225C3C70((uint64_t)&v65);
    uint64_t v36 = sub_2225DC1A0(&v65);
    if (v35 == (uint64_t *)v36)
    {
      int v38 = 0;
    }
    else
    {
      int v37 = (uint64_t *)v36;
      int v38 = 0;
      do
      {
        uint64_t v39 = (unsigned int *)*v35;
        uint64_t v63 = sub_222659834(*v35);
        uint64_t v40 = sub_2225C3C70((uint64_t)&v63);
        if (sub_22265E240(v40))
        {
          unsigned int v41 = sub_2225C3B40(v39);
          sub_222688C3C((uint64_t)a1, v41, 3798, (uint64_t)v62);
          sub_2225C3D0C(v61, &aXyzw[v38], 1);
          unsigned int v42 = sub_2225F3774(v62, v61[0], v61[1]);
          uint64_t v43 = sub_222622304(v42, 0);
          uint64_t v60 = sub_222674270((uint64_t)v39);
          sub_222625214(v43, &v60);
          sub_2225F37F0(v62);
          ++v38;
        }
        else
        {
          uint64_t v44 = sub_2225C3C70((uint64_t)&v63);
          uint64_t v45 = sub_222654E2C(v44);
          uint64_t v46 = sub_2225C3C70((uint64_t)&v63);
          uint64_t v47 = sub_222654F20(v46);
          if (v45) {
            unsigned int v48 = sub_222654EC8(v45);
          }
          else {
            unsigned int v48 = sub_22267350C(v47);
          }
          unsigned int v49 = v48;
          unsigned int v50 = sub_2225C3B40(v39);
          sub_222688C3C((uint64_t)a1, v50, 3798, (uint64_t)v62);
          sub_2225C3D0C(v59, &aXyzw[v38], v49);
          uint64_t v51 = sub_2225F3774(v62, v59[0], v59[1]);
          unsigned int v52 = sub_222622304(v51, 1);
          uint64_t v60 = sub_222674270((uint64_t)v39);
          sub_222625214(v52, &v60);
          sub_2225F37F0(v62);
          v38 += v49;
        }
        ++v35;
      }
      while (v35 != v37);
    }
    sub_222688C3C((uint64_t)a1, a7, 3799, (uint64_t)v62);
    sub_2225C3D0C(v58, &aXyzw[v38], v23);
    uint64_t v57 = sub_2225F3774(v62, v58[0], v58[1]);
    sub_2226256C4(v57, v23 > 1);
LABEL_37:
    sub_2225F37F0(v62);
  }
  return 0;
}

uint64_t sub_222696FCC(uint64_t *a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, int a7)
{
  v52[5] = *MEMORY[0x263EF8340];
  uint64_t v50 = a6;
  uint64_t v51 = a2;
  uint64_t v49 = a5;
  if (sub_2225C3D04((uint64_t)&v49) == 1)
  {
    uint64_t v12 = (uint64_t *)sub_2225C6BC0(&v49, 0);
    v52[0] = sub_222659834(*v12);
    uint64_t v13 = sub_2225C3C70((uint64_t)v52);
    if (sub_22265E240(v13))
    {
      uint64_t v14 = *a1;
      int v15 = a3;
      int v16 = a7;
      uint64_t v17 = v49;
      uint64_t v18 = v50;
      uint64_t v19 = a2;
      char v20 = 1;
      return sub_222674A90(v14, v19, v15, v20, v17, v18, v16);
    }
  }
  uint64_t v21 = sub_2225C3C70((uint64_t)&v51);
  uint64_t v22 = sub_2225E55A8(v21);
  int v23 = sub_22267350C(v22);
  unsigned int v24 = sub_2225C3D04((uint64_t)&v49);
  unsigned int v25 = v24;
  if (!v24 || v23 < 1)
  {
    if (v23 >= 1)
    {
LABEL_16:
      sub_222688C3C((uint64_t)a1, a4, 2019, (uint64_t)v45);
      int v33 = (uint64_t *)v45;
      goto LABEL_27;
    }
    uint64_t v32 = 0;
LABEL_18:
    if (sub_2225C3D04((uint64_t)&v49) != v32)
    {
      sub_222688C3C((uint64_t)a1, a4, 2116, (uint64_t)v52);
      uint64_t v39 = sub_222622304(v52, 1);
      uint64_t v40 = (unsigned int **)sub_2225C6BC0(&v49, v32);
      int v41 = sub_2225C3B40(*v40);
      sub_22262FD48(&v48, v41);
      sub_222625214(v39, &v48);
      int v33 = v52;
      goto LABEL_27;
    }
    uint64_t v14 = *a1;
    uint64_t v18 = v50;
    uint64_t v19 = v51;
    int v15 = a3;
    int v16 = a7;
    uint64_t v17 = v49;
    char v20 = 0;
    return sub_222674A90(v14, v19, v15, v20, v17, v18, v16);
  }
  uint64_t v26 = 0;
  uint64_t v27 = v24 - 1;
  while (1)
  {
    uint64_t v28 = (uint64_t *)sub_2225C6BC0(&v49, v26);
    uint64_t v48 = sub_222659834(*v28);
    uint64_t v29 = sub_2225C3C70((uint64_t)&v48);
    if (sub_22265E240(v29))
    {
      --v23;
      goto LABEL_11;
    }
    uint64_t v30 = sub_2225C3C70((uint64_t)&v48);
    uint64_t v31 = sub_222654E2C(v30);
    if (!v31) {
      break;
    }
    v23 -= sub_222654EC8(v31);
LABEL_11:
    uint64_t v32 = v26 + 1;
    if (v27 != v26)
    {
      ++v26;
      if (v23 > 0) {
        continue;
      }
    }
    if (v23 > 0) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v35 = sub_2225C3C70((uint64_t)&v48);
  if (!sub_22268AC3C(v35)) {
    return 0;
  }
  if (v25 == 1 && !v26)
  {
    sub_222631188(v52);
    uint64_t v36 = (void *)sub_2225C6BC0(&v49, 0);
    sub_2225CC7B8((uint64_t)v52, v36);
    uint64_t v37 = *a1;
    uint64_t v38 = v51;
    sub_2225D3DDC(v47, v52);
    uint64_t v34 = sub_222674A90(v37, v38, a3, 2, v47[0], v47[1], a7);
    sub_2225C56C4(v52);
    return v34;
  }
  unsigned int v42 = (unsigned int **)sub_2225C6BC0(&v49, v26);
  unsigned int v43 = sub_2225C3B40(*v42);
  sub_222688C3C((uint64_t)a1, v43, 2400, (uint64_t)v46);
  int v33 = (uint64_t *)v46;
LABEL_27:
  sub_2225F37F0(v33);
  return 0;
}

uint64_t sub_2226972B8(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  unsigned int v3 = (_DWORD *)sub_22268AA14(a2);
  if (sub_2226551A0(v3) && sub_2226551A0(v3) != 7)
  {
    unsigned int v11 = sub_222613380((uint64_t)v3);
    sub_222688C3C(a1, v11, 3124, (uint64_t)v15);
    sub_2225F37F0(v15);
    unsigned int v5 = sub_222613380((uint64_t)v3);
    uint64_t v6 = v14;
    int v7 = v14;
    uint64_t v8 = a1;
    int v9 = 3773;
    goto LABEL_8;
  }
  uint64_t v13 = sub_2225C5B40((uint64_t)v3);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v13);
  if (sub_22268B60C(v4))
  {
    unsigned int v5 = sub_222613380((uint64_t)v3);
    uint64_t v6 = v12;
    int v7 = v12;
    uint64_t v8 = a1;
    int v9 = 2302;
LABEL_8:
    sub_222688C3C(v8, v5, v9, (uint64_t)v7);
    sub_2225F37F0(v6);
    return 0;
  }
  return 1;
}

uint64_t sub_2226973A8(uint64_t *a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v43 = a6;
  uint64_t v44 = a2;
  uint64_t v42 = a5;
  uint64_t v11 = sub_2225C3C70((uint64_t)&v44);
  uint64_t v12 = sub_2225E55A8(v11);
  uint64_t v13 = sub_2225C3D04(v12);
  uint64_t v14 = (unsigned int **)sub_22265E3C4(&v42);
  uint64_t v15 = v13 + 16;
  int v16 = (uint64_t *)sub_2225CC180(v13 + 16);
  uint64_t v17 = sub_22265594C(v15);
  if (v16 == (uint64_t *)v17)
  {
LABEL_13:
    if (v14 == (unsigned int **)sub_22268F450((uint64_t)&v42)) {
      return sub_222674A90(*a1, v44, a3, 0, v42, v43, a7);
    }
    sub_222688C3C((uint64_t)a1, a4, 2116, (uint64_t)v40);
    uint64_t v27 = sub_222622304(v40, 4);
    int v28 = sub_2225C3B40(*v14);
    sub_22262FD48(&v39, v28);
    uint64_t v29 = &v39;
LABEL_16:
    sub_222625214(v27, v29);
    uint64_t v35 = v40;
LABEL_17:
    sub_2225F37F0(v35);
  }
  else
  {
    uint64_t v18 = (uint64_t *)v17;
    while (1)
    {
      uint64_t v19 = *v16;
      if (v14 == (unsigned int **)sub_22268F450((uint64_t)&v42))
      {
        sub_222688C3C((uint64_t)a1, a4, 2019, (uint64_t)v41);
        uint64_t v35 = (uint64_t *)v41;
        goto LABEL_17;
      }
      char v20 = (unsigned __int8 **)sub_222653754(v19);
      uint64_t v21 = sub_222653758(v19);
      if (v20 != (unsigned __int8 **)v21) {
        break;
      }
LABEL_12:
      if (++v16 == v18) {
        goto LABEL_13;
      }
    }
    uint64_t v22 = (unsigned __int8 **)v21;
    while (1)
    {
      int v23 = *v20;
      if (!*v20 || !*v14) {
        break;
      }
      v40[0] = sub_222659C34(*v20);
      uint64_t v24 = sub_222659834((uint64_t)*v14);
      if (sub_22268824C(v40, v24))
      {
        unsigned int v30 = sub_2225C3B40(*v14);
        sub_222688C3C((uint64_t)a1, v30, 2284, (uint64_t)v40);
        uint64_t v31 = sub_222622304(v40, 1);
        uint64_t v39 = sub_222659C34(v23);
        uint64_t v32 = (uint64_t *)sub_222694318((uint64_t)v31, (uint64_t)&v39);
        int v33 = sub_222622304(v32, 0);
        uint64_t v38 = sub_222659834((uint64_t)*v14);
        uint64_t v34 = (uint64_t *)sub_222694318((uint64_t)v33, (uint64_t)&v38);
        uint64_t v27 = sub_222622304(v34, 0);
        uint64_t v37 = sub_222674270((uint64_t)*v14);
        uint64_t v29 = &v37;
        goto LABEL_16;
      }
      unsigned int v25 = (_DWORD *)sub_2225E55A8((uint64_t)v23);
      uint64_t v26 = sub_2226551D0(v25);
      if (v26) {
        sub_222696164(a1, (uint64_t *)v14, v26);
      }
      ++v14;
      if (++v20 == v22) {
        goto LABEL_12;
      }
    }
  }
  return 0;
}

uint64_t sub_222697610(uint64_t *a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v38 = a2;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  sub_2225D3A34(&v35);
  uint64_t v11 = sub_2225C3C70((uint64_t)&v38);
  uint64_t v12 = sub_222655B18(v11);
  if (v12) {
    uint64_t v13 = sub_2225C3D04(v12);
  }
  else {
    uint64_t v13 = v38;
  }
  uint64_t v35 = v13;
  uint64_t v14 = sub_2225C3C70((uint64_t)&v35);
  uint64_t v15 = sub_22265E3C0(v14);
  int v16 = (uint64_t *)sub_2225C3C70((uint64_t)&v36);
  int v17 = sub_2225F514C(v15);
  if (v17)
  {
    int v18 = v17;
    while (1)
    {
      if (v16 == (uint64_t *)sub_2225DC1A0(&v36))
      {
        sub_222688C3C((uint64_t)a1, a4, 2019, (uint64_t)v34);
        int v23 = (uint64_t *)v34;
        goto LABEL_14;
      }
      v33[0] = sub_222659834(*v16);
      uint64_t v19 = sub_2225C3D04(v15);
      if (sub_22268824C(v33, v19)) {
        break;
      }
      ++v16;
      if (!--v18) {
        goto LABEL_9;
      }
    }
    unsigned int v24 = sub_2225C3B40((unsigned int *)*v16);
    sub_222688C3C((uint64_t)a1, v24, 2284, (uint64_t)v33);
    unsigned int v25 = sub_222622304(v33, 1);
    uint64_t v32 = sub_2225C3D04(v15);
    uint64_t v26 = (uint64_t *)sub_222694318((uint64_t)v25, (uint64_t)&v32);
    uint64_t v27 = sub_222622304(v26, 0);
    uint64_t v31 = sub_222659834(*v16);
    int v28 = (uint64_t *)sub_222694318((uint64_t)v27, (uint64_t)&v31);
    char v20 = sub_222622304(v28, 0);
    uint64_t v30 = sub_222674270(*v16);
    uint64_t v22 = &v30;
  }
  else
  {
LABEL_9:
    if (v16 == (uint64_t *)sub_2225DC1A0(&v36)) {
      return sub_222674A90(*a1, v38, a3, 0, v36, v37, a7);
    }
    sub_222688C3C((uint64_t)a1, a4, 2116, (uint64_t)v33);
    char v20 = sub_222622304(v33, 0);
    int v21 = sub_2225C3B40((unsigned int *)*v16);
    sub_22262FD48(&v32, v21);
    uint64_t v22 = &v32;
  }
  sub_222625214(v20, v22);
  int v23 = v33;
LABEL_14:
  sub_2225F37F0(v23);
  return 0;
}

uint64_t sub_22269781C(uint64_t *a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v43 = a6;
  uint64_t v44 = a2;
  uint64_t v42 = a5;
  uint64_t v13 = sub_2225C3C70((uint64_t)&v44);
  uint64_t v14 = sub_222654B7C(v13);
  if (v14)
  {
    uint64_t v15 = sub_2225C3D04(v14);
    if (sub_2226877A4(v15)) {
      sub_222696320(a1, a5, a6);
    }
    return sub_222696BF0(a1, v44, a3, a4, a5, a6, a7);
  }
  uint64_t v17 = sub_2225C3C70((uint64_t)&v44);
  if (sub_22268AC3C(v17))
  {
    sub_222696320(a1, a5, a6);
    return sub_222696FCC(a1, v44, a3, a4, a5, a6, a7);
  }
  uint64_t v18 = sub_2225C3C70((uint64_t)&v44);
  if (sub_222661D68(v18)) {
    return sub_2226973A8(a1, v44, a3, a4, a5, a6, a7);
  }
  uint64_t v19 = sub_2225C3C70((uint64_t)&v44);
  uint64_t v20 = sub_222655B14(v19);
  if (v20)
  {
    uint64_t v41 = sub_2225C3D04(v20);
    uint64_t v21 = sub_2225C3C70((uint64_t)&v41);
    if (sub_222687720(v21)) {
      sub_222696320(a1, a5, a6);
    }
    uint64_t v22 = v44;
    int v23 = a3;
    unsigned int v24 = a4;
    int v25 = a7;
    uint64_t v26 = a1;
    uint64_t v27 = a5;
    uint64_t v28 = a6;
    return sub_222697610(v26, v22, v23, v24, v27, v28, v25);
  }
  uint64_t v29 = sub_2225C3C70((uint64_t)&v44);
  uint64_t v30 = sub_222655B18(v29);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = *a1;
    uint64_t v33 = sub_2225C5B40(v30);
    unsigned int v34 = sub_2225C3D04((uint64_t)&v42);
    uint64_t v41 = sub_222688134(v32, v33, v34);
    uint64_t v35 = sub_2225C3C70((uint64_t)&v41);
    uint64_t v36 = sub_222655B14(v35);
    sub_2225C64B8(&v40, v36);
    sub_2225C5B6C(v31, v40);
    uint64_t v41 = sub_2225C3D04(v36);
    uint64_t v37 = sub_2225C3C70((uint64_t)&v41);
    if (sub_222687720(v37)) {
      sub_222696320(a1, v42, v43);
    }
    sub_2225C64B8(&v39, v31);
    uint64_t v27 = v42;
    uint64_t v28 = v43;
    int v23 = a3;
    unsigned int v24 = a4;
    int v25 = a7;
    uint64_t v22 = v39;
    uint64_t v26 = a1;
    return sub_222697610(v26, v22, v23, v24, v27, v28, v25);
  }
  uint64_t v38 = sub_2225C3C70((uint64_t)&v44);
  if (sub_222687720(v38)) {
    sub_222696320(a1, a5, a6);
  }
  return sub_222696AF0(a1, v44, a3, a4, a5, a6, a7);
}

uint64_t sub_222697A90(uint64_t a1, unsigned int a2)
{
  uint64_t v5 = a1;
  uint64_t v3 = sub_2225C3C70((uint64_t)&v5);
  uint64_t result = sub_222655B10(v3);
  if (result)
  {
    switch(sub_222655AE4(result))
    {
      case 3u:
        uint64_t result = a2 & 1;
        break;
      case 4u:
        uint64_t result = (a2 >> 1) & 1;
        break;
      case 5u:
        uint64_t result = (a2 >> 2) & 1;
        break;
      case 6u:
        uint64_t result = (a2 >> 3) & 1;
        break;
      case 7u:
        uint64_t result = (a2 >> 4) & 1;
        break;
      case 8u:
      case 9u:
      case 0xAu:
        uint64_t result = (a2 >> 5) & 1;
        break;
      case 0xBu:
      case 0xCu:
      case 0xDu:
        uint64_t result = (a2 >> 6) & 1;
        break;
      case 0xEu:
      case 0xFu:
      case 0x10u:
        uint64_t result = (a2 >> 7) & 1;
        break;
      case 0x11u:
      case 0x12u:
      case 0x13u:
        uint64_t result = (a2 >> 8) & 1;
        break;
      case 0x14u:
      case 0x15u:
      case 0x16u:
        uint64_t result = (a2 >> 9) & 1;
        break;
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x20u:
      case 0x21u:
      case 0x22u:
        uint64_t result = (a2 & 0xC00) != 0;
        break;
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x1Eu:
      case 0x1Fu:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
      case 0x28u:
        uint64_t result = (a2 >> 11) & 1;
        break;
      default:
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

const void **sub_222697BFC(const void **result, char *a2, int *a3, const void **a4)
{
  if ((*a3 & result) != 0)
  {
    int v6 = (int)result;
    sub_2225C3D00((int)v9, a2);
    uint64_t result = sub_2225DAD18(a4, v9[0], v9[1]);
    int v7 = *a3 ^ v6;
    *a3 = v7;
    if (v7)
    {
      sub_2225C3D00((int)v8, ", ");
      return sub_2225DAD18(a4, v8[0], v8[1]);
    }
  }
  return result;
}

BOOL sub_222697C80(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  v13[0] = a2;
  v13[1] = a3;
  uint64_t v6 = sub_2225C3D04((uint64_t)v13);
  if (v6 != a4)
  {
    int v7 = (unsigned int **)sub_222697D24(v13);
    unsigned int v8 = sub_2225C3B40(*v7);
    sub_222688C3C(a1, v8, 2516, (uint64_t)v12);
    unsigned int v9 = sub_2225C3D04((uint64_t)v13) > (unint64_t)a4;
    int v10 = sub_22262FD18(v12, v9);
    sub_2226256C4(v10, a4);
    sub_2225F37F0(v12);
  }
  return v6 == a4;
}

uint64_t sub_222697D24(void *a1)
{
  return *a1 + 8 * a1[1] - 8;
}

uint64_t sub_222697D34(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, int a6)
{
  v51[0] = a2;
  v51[1] = a3;
  uint64_t v10 = sub_2225C3C70((uint64_t)v51);
  sub_2225C3D0C(&v50, v10, a5);
  uint64_t v11 = sub_2225C6BC0(v51, a5);
  uint64_t v12 = sub_2225DC1A0(v51);
  sub_222672FC0(&v49, v11, v12);
  if ((a6 & 1) == 0) {
    sub_2225DABF0(&v50, &v49);
  }
  uint64_t v48 = sub_222698108(a1, v50.n128_i64[0], v50.n128_i64[1], a4);
  if (!sub_2225D3DB0(&v48)) {
    goto LABEL_19;
  }
  uint64_t v47 = sub_222698108(a1, v49.n128_i64[0], v49.n128_i64[1], a4);
  if (!sub_2225D3DB0(&v47)) {
    goto LABEL_19;
  }
  if (!sub_222688268(&v48, v47))
  {
    uint64_t v13 = sub_2225C3C70((uint64_t)&v47);
    if (sub_22265E240(v13))
    {
      uint64_t v14 = sub_2225C3C70((uint64_t)&v48);
      uint64_t v15 = sub_222654B7C(v14);
      if (!v15)
      {
        uint64_t v36 = (unsigned int **)sub_2225C6BC0(v51, a5);
        unsigned int v37 = sub_2225C3B40(*v36);
        sub_222688C3C(a1, v37, 1913, (uint64_t)v39);
        uint64_t v35 = v39;
        goto LABEL_18;
      }
      uint64_t v16 = v15;
      uint64_t v17 = sub_2225C3D04(v15);
      if (v17 == sub_2225C3C70((uint64_t)&v47)) {
        return v48;
      }
      uint64_t v18 = *(unsigned int **)sub_2225C6BC0(&v49, 0);
      uint64_t v46 = v18;
      uint64_t v45 = *(void *)sub_2225C6BC0(&v50, 0);
      if (a6)
      {
        sub_2225C6448((uint64_t *)&v46, &v45);
        uint64_t v18 = v46;
      }
      unsigned int v19 = sub_2225C3B40(v18);
      sub_222688C3C(a1, v19, 2216, (uint64_t)v44);
      uint64_t v43 = sub_222674270((uint64_t)v46);
      uint64_t v20 = sub_222625214(v44, &v43);
      uint64_t v42 = sub_222674270(v45);
      sub_222625214(v20, &v42);
      sub_2225F37F0(v44);
      uint64_t v21 = (unsigned int **)sub_2225C6BC0(&v50, 0);
      unsigned int v22 = sub_2225C3B40(*v21);
      sub_222688C3C(a1, v22, 3439, (uint64_t)v44);
      int v23 = (uint64_t *)sub_2225C6BC0(&v50, 0);
      uint64_t v43 = sub_222659834(*v23);
      sub_222694318((uint64_t)v44, (uint64_t)&v43);
      unsigned int v24 = (uint64_t *)sub_2225C6BC0(&v50, 0);
      uint64_t v42 = sub_222674270(*v24);
      sub_222625214(v44, &v42);
      sub_2225F37F0(v44);
      int v25 = (unsigned int **)sub_2225C6BC0(&v49, 0);
      unsigned int v26 = sub_2225C3B40(*v25);
      sub_222688C3C(a1, v26, 3440, (uint64_t)v44);
      uint64_t v27 = (uint64_t *)sub_2225C6BC0(&v49, 0);
      uint64_t v43 = sub_222659834(*v27);
      sub_222694318((uint64_t)v44, (uint64_t)&v43);
      sub_222696AEC(v44, v16);
      uint64_t v28 = sub_2225C3D04(v16);
      sub_222696AEC(v44, v28);
      uint64_t v29 = (uint64_t *)sub_2225C6BC0(&v49, 0);
      uint64_t v42 = sub_222674270(*v29);
      uint64_t v30 = v44;
      uint64_t v31 = &v42;
    }
    else
    {
      uint64_t v32 = *(unsigned int **)sub_2225C6BC0(&v49, 0);
      uint64_t v46 = v32;
      uint64_t v45 = *(void *)sub_2225C6BC0(&v50, 0);
      if (a6)
      {
        sub_2225C6448((uint64_t *)&v46, &v45);
        uint64_t v32 = v46;
      }
      unsigned int v33 = sub_2225C3B40(v32);
      sub_222688C3C(a1, v33, 2217, (uint64_t)v44);
      uint64_t v43 = sub_222659834((uint64_t)v46);
      sub_222694318((uint64_t)v44, (uint64_t)&v43);
      uint64_t v42 = sub_222659834(v45);
      sub_222694318((uint64_t)v44, (uint64_t)&v42);
      uint64_t v41 = sub_222674270((uint64_t)v46);
      unsigned int v34 = sub_222625214(v44, &v41);
      uint64_t v40 = sub_222674270(v45);
      uint64_t v31 = &v40;
      uint64_t v30 = v34;
    }
    sub_222625214(v30, v31);
    uint64_t v35 = v44;
LABEL_18:
    sub_2225F37F0(v35);
LABEL_19:
    sub_2225C64B8(&v52, 0);
    return v52;
  }
  return v48;
}

uint64_t sub_222698108(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v29 = sub_222698304(a2, a3);
  if (!sub_2225D3DB0(&v29))
  {
    unsigned int v8 = (uint64_t *)sub_2225C3C70((uint64_t)&v30);
    uint64_t v9 = sub_2225DC1A0(&v30);
    if (v8 == (uint64_t *)v9)
    {
LABEL_8:
      uint64_t v12 = (unsigned int **)sub_2225C3C70((uint64_t)&v30);
      uint64_t v13 = sub_2225DC1A0(&v30);
      if (v12 == (unsigned int **)v13) {
        return v32;
      }
      uint64_t v14 = (unsigned int **)v13;
      while (1)
      {
        uint64_t v15 = *v12;
        uint64_t v16 = (uint64_t *)sub_2225C3C70((uint64_t)&v30);
        uint64_t v17 = sub_2225DC1A0(&v30);
        if (v16 != (uint64_t *)v17) {
          break;
        }
LABEL_14:
        if (++v12 == v14) {
          return v32;
        }
      }
      uint64_t v18 = (uint64_t *)v17;
      while (1)
      {
        uint64_t v19 = *v16;
        v28[0] = sub_222659834((uint64_t)v15);
        uint64_t v20 = sub_222659834(v19);
        if (sub_22268824C(v28, v20)) {
          break;
        }
        if (++v16 == v18) {
          goto LABEL_14;
        }
      }
      unsigned int v21 = sub_2225C3B40(v15);
      sub_222688C3C(a1, v21, 2217, (uint64_t)v28);
      uint64_t v27 = sub_222659834((uint64_t)v15);
      sub_222694318((uint64_t)v28, (uint64_t)&v27);
      uint64_t v26 = sub_222659834(v19);
      sub_222694318((uint64_t)v28, (uint64_t)&v26);
      uint64_t v25 = sub_222674270((uint64_t)v15);
      unsigned int v22 = sub_222625214(v28, &v25);
      uint64_t v24 = sub_222674270(v19);
      sub_222625214(v22, &v24);
      sub_2225F37F0(v28);
    }
    else
    {
      uint64_t v10 = (uint64_t *)v9;
      while (1)
      {
        uint64_t v11 = sub_222659834(*v8);
        if ((sub_222694914(a1, v11, a4, v30, v31) & 1) == 0) {
          break;
        }
        if (++v8 == v10) {
          goto LABEL_8;
        }
      }
    }
LABEL_17:
    sub_2225D3A34(&v32);
    return v32;
  }
  if ((sub_222694914(a1, v29, a4, a2, a3) & 1) == 0) {
    goto LABEL_17;
  }
  return v29;
}

uint64_t sub_222698304(uint64_t a1, uint64_t a2)
{
  v10[0] = a1;
  v10[1] = a2;
  if (!sub_2225CF1E0((uint64_t)v10))
  {
    unsigned int v2 = (uint64_t *)sub_2225C3C70((uint64_t)v10);
    uint64_t v3 = sub_222659834(*v2);
    uint64_t v9 = v3;
    uint64_t v4 = (uint64_t *)sub_2225C3C70((uint64_t)v10);
    uint64_t v5 = sub_2225DC1A0(v10);
    if (v4 == (uint64_t *)v5) {
      return v3;
    }
    uint64_t v6 = (uint64_t *)v5;
    while (1)
    {
      uint64_t v7 = sub_222659834(*v4);
      if (sub_22268824C(&v9, v7)) {
        break;
      }
      if (++v4 == v6) {
        return v9;
      }
    }
  }
  sub_2225D3A34(&v11);
  return v11;
}

uint64_t sub_2226983B4(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  if ((a2 - 1) > 3)
  {
    if ((a3 - 43) >= 2)
    {
      sub_222688C3C(a1, a6, 2819, (uint64_t)v11);
      unsigned int v8 = sub_2225F3774(v11, a4, a5);
      uint64_t v9 = "sampler2D or hsampler2D";
      goto LABEL_7;
    }
    return 1;
  }
  if ((a3 - 41) < 2) {
    return 1;
  }
  sub_222688C3C(a1, a6, 2819, (uint64_t)v11);
  unsigned int v8 = sub_2225F3774(v11, a4, a5);
  uint64_t v9 = "sampler or hsampler";
LABEL_7:
  sub_22260A5E8(v8, (uint64_t)v9);
  sub_2225F37F0(v11);
  return 0;
}

uint64_t sub_222698470(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  if (!sub_2225CF1E0((uint64_t)&v35))
  {
    uint64_t v9 = (uint64_t *)sub_2225C6BC0(&v35, 0);
    v33[0] = sub_222659834(*v9);
    uint64_t v10 = sub_2225C3C70((uint64_t)v33);
    uint64_t v11 = sub_222655AF0(v10);
    if (!v11)
    {
      uint64_t v14 = (unsigned int **)sub_2225C6BC0(&v35, 0);
      unsigned int v15 = sub_2225C3B40(*v14);
      sub_222688C3C((uint64_t)a1, v15, 2122, (uint64_t)v33);
      uint64_t v16 = (uint64_t *)sub_2225C6BC0(&v35, 0);
      *(void *)&long long v31 = sub_222659834(*v16);
      sub_222694318((uint64_t)v33, (uint64_t)&v31);
      uint64_t v17 = sub_22260A5E8(v33, (uint64_t)"a sampler type");
      uint64_t v18 = (uint64_t *)sub_2225C6BC0(&v35, 0);
      uint64_t v32 = sub_222674270(*v18);
      sub_222625214(v17, &v32);
      unsigned int v8 = v33;
      goto LABEL_7;
    }
    uint64_t v12 = v11;
    sub_2225CCC70(v33);
    switch(a2)
    {
      case 1:
        uint64_t v13 = "sample";
        goto LABEL_16;
      case 2:
        uint64_t v13 = "samplerTransform";
        goto LABEL_16;
      case 3:
        unsigned int v21 = "samplerExtent";
        goto LABEL_14;
      case 4:
        unsigned int v21 = "samplerCoord";
LABEL_14:
        sub_2225C3D00((int)&v31, v21);
        *(_OWORD *)unsigned int v33 = v31;
        unsigned int v20 = 1;
        break;
      case 5:
        uint64_t v13 = "texture2D";
LABEL_16:
        sub_2225C3D00((int)&v31, v13);
        *(_OWORD *)unsigned int v33 = v31;
        unsigned int v20 = 2;
        break;
      default:
        unsigned int v20 = 0;
        break;
    }
    int v22 = sub_222655AE4(v12);
    long long v23 = *(_OWORD *)v33;
    uint64_t v24 = (unsigned int **)sub_2225C6BC0(&v35, 0);
    unsigned int v25 = sub_2225C3B40(*v24);
    if ((sub_2226983B4((uint64_t)a1, a2, v22, v23, *((uint64_t *)&v23 + 1), v25) & 1) == 0
      || !sub_222697C80((uint64_t)a1, v35, v36, v20))
    {
      goto LABEL_8;
    }
    uint64_t v26 = sub_222687C14(*a1, 8);
    uint64_t v27 = sub_222687C14(*a1, 10);
    if (a2 != 4)
    {
      if (a2 != 3)
      {
        if (a2 == 2) {
          return v26;
        }
        int v28 = sub_222655AE4(v12);
        uint64_t v29 = *a1;
        uint64_t v30 = sub_222687FB4(v29, dword_2226D1310[v28 - 41]);
        return sub_222687824(v29, v30, 4);
      }
      return v27;
    }
    return v26;
  }
  sub_222688C3C((uint64_t)a1, a5, 2478, (uint64_t)v34);
  unsigned int v8 = (uint64_t *)v34;
LABEL_7:
  sub_2225F37F0(v8);
LABEL_8:
  sub_2225D3A34(&v37);
  return v37;
}

void sub_222698728(uint64_t a1, __int16 a2)
{
  uint64_t v3 = sub_2225CAD04(v4);
  sub_2225CBC18(v3, (&off_264626348)[a2 - 3]);
}

void sub_222698768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, std::string *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_2225CCD48(v25, ", legal parameter types are:");
  std::string::append(v25, "\n  (genType, genType, genType)");
  std::string::append(v25, "\n  (genType, genType, float)");
  if (sub_22264FEFC(*(void *)(v16 + 8)) == 1)
  {
    uint64_t v19 = "GenType = float, vec2, vec3, vec4";
    unsigned int v20 = "\n    where ";
  }
  else
  {
    std::string::append(v25, "\n  (genType, genType, genBType)");
    std::string::append(v25, "\n    where ");
    std::string::append(v25, "GenType = float, vec2, vec3, vec4");
    uint64_t v19 = "GenBType = BOOL, bvec2, bvec3, bvec4";
    unsigned int v20 = "\n          ";
  }
  std::string::append(v25, v20);
  std::string::append(v25, v19);
  sub_222688C3C(v16, v17, 2316, (uint64_t)v24);
  sub_2225CCBF8(v23, v18 - 56);
  unsigned int v21 = sub_2225F3774(v24, v23[0], v23[1]);
  sub_2225CCBF8(v22, v25);
  sub_2225F3774(v21, v22[0], v22[1]);
  sub_2225F37F0(v24);
  std::string::~string(v25);
  std::string::~string((std::string *)(v18 - 56));
}

uint64_t sub_222698884(uint64_t *a1, int *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v138 = a3;
  uint64_t v139 = a4;
  uint64_t v8 = sub_222687FB4(*a1, 3);
  uint64_t v9 = sub_222687FB4(*a1, 7);
  uint64_t v10 = sub_222687FB4(*a1, 5);
  uint64_t v11 = sub_222687FB4(*a1, 6);
  uint64_t v12 = sub_222688028(*a1);
  if (sub_2225CF1E0((uint64_t)&v138))
  {
    sub_222688C3C((uint64_t)a1, a5, 2478, (uint64_t)v137);
    uint64_t v13 = (uint64_t *)v137;
LABEL_3:
    sub_2225F37F0(v13);
LABEL_4:
    sub_2225D3A34(&v140);
  }
  else
  {
    int v15 = *a2;
    switch(*a2)
    {
      case 8:
        uint64_t v67 = sub_2225C3D04((uint64_t)&v138);
        uint64_t v20 = v138;
        uint64_t v21 = v139;
        if (v67 == 2) {
          goto LABEL_10;
        }
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        *a2 = 9;
        goto LABEL_9;
      case 9:
      case 37:
LABEL_126:
        __break(1u);
        JUMPOUT(0x222699514);
      case 16:
      case 58:
        uint64_t v16 = v138;
        uint64_t v17 = v139;
        uint64_t v18 = (uint64_t)a1;
        unsigned int v19 = 2;
        goto LABEL_8;
      case 23:
      case 24:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        int v33 = sub_22264FEFC(a1[1]);
        uint64_t v20 = v138;
        uint64_t v21 = v139;
        if (v33 == 1) {
          goto LABEL_10;
        }
        uint64_t v22 = (uint64_t)a1;
        unsigned int v23 = 231;
        return sub_222698108(v22, v20, v21, v23);
      case 31:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        uint64_t v58 = v138;
        uint64_t v59 = v139;
        goto LABEL_75;
      case 32:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        long long v55 = (uint64_t *)sub_2225C6BC0(&v138, 1);
        if (sub_2226593F4(*v55) == 1) {
          goto LABEL_9;
        }
        int v56 = (unsigned int **)sub_2225C6BC0(&v138, 1);
        unsigned int v57 = sub_2225C3B40(*v56);
        sub_222688C3C((uint64_t)a1, v57, 2121, (uint64_t)v136);
        uint64_t v13 = (uint64_t *)v136;
        goto LABEL_3;
      case 33:
      case 34:
        uint64_t v34 = v138;
        uint64_t v35 = v139;
        uint64_t v36 = (uint64_t)a1;
        unsigned int v37 = 2;
        goto LABEL_73;
      case 35:
        uint64_t v34 = v138;
        uint64_t v35 = v139;
        uint64_t v36 = (uint64_t)a1;
        unsigned int v37 = 3;
LABEL_73:
        if (!sub_222697C80(v36, v34, v35, v37)) {
          goto LABEL_4;
        }
        int v68 = sub_22264FEFC(a1[1]);
        uint64_t v58 = v138;
        uint64_t v59 = v139;
        if (v68 == 1)
        {
LABEL_75:
          uint64_t v60 = (uint64_t)a1;
          unsigned int v61 = 99;
        }
        else
        {
          uint64_t v60 = (uint64_t)a1;
          unsigned int v61 = 495;
        }
        unsigned int v62 = 1;
        int v63 = 1;
        return sub_222697D34(v60, v58, v59, v61, v62, v63);
      case 36:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 3u)) {
          goto LABEL_4;
        }
        uint64_t v69 = sub_2225C3C70((uint64_t)&v138);
        sub_2225C3D0C(v135, v69, 2);
        v132[0] = sub_222698108((uint64_t)a1, v135[0], v135[1], 0x63u);
        if (!sub_2225D3DB0(v132)) {
          goto LABEL_4;
        }
        uint64_t v70 = (uint64_t *)sub_2225C6BC0(&v138, 2);
        uint64_t v71 = sub_222659834(*v70);
        if (!sub_222688268(v132, v71))
        {
          uint64_t v72 = (uint64_t *)sub_2225C6BC0(&v138, 2);
          uint64_t v134 = sub_222659834(*v72);
          uint64_t v73 = sub_222687C14(*a1, 3);
          if (!sub_222688268(&v134, v73))
          {
            if (sub_22264FEFC(a1[1]) == 1)
            {
LABEL_125:
              uint64_t v123 = (unsigned int **)sub_2225C6BC0(&v138, 2);
              sub_2225C3B40(*v123);
              sub_222698728((uint64_t)a1, 38);
            }
            sub_2225D3A34(&v134);
            uint64_t v74 = sub_2225C3C70((uint64_t)v132);
            uint64_t v75 = sub_22265E3C0(v74);
            switch(sub_222655AE4(v75))
            {
              case 5u:
              case 6u:
              case 7u:
                goto LABEL_126;
              case 8u:
              case 0xBu:
                uint64_t v76 = *a1;
                int v77 = 20;
                goto LABEL_122;
              case 9u:
              case 0xCu:
                uint64_t v76 = *a1;
                int v77 = 21;
                goto LABEL_122;
              case 0xAu:
              case 0xDu:
                uint64_t v76 = *a1;
                int v77 = 22;
                goto LABEL_122;
              default:
                uint64_t v76 = *a1;
                int v77 = 7;
LABEL_122:
                uint64_t v134 = sub_222687C14(v76, v77);
                uint64_t v122 = (uint64_t *)sub_2225C6BC0(&v138, 2);
                uint64_t v133 = sub_222659834(*v122);
                if (!sub_222688268(&v133, v134)) {
                  goto LABEL_125;
                }
                *a2 = 37;
                break;
            }
          }
        }
        goto LABEL_124;
      case 38:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        uint64_t v58 = v138;
        uint64_t v59 = v139;
        uint64_t v60 = (uint64_t)a1;
        unsigned int v61 = 99;
        unsigned int v62 = 1;
        goto LABEL_62;
      case 39:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 3u)) {
          goto LABEL_4;
        }
        uint64_t v58 = v138;
        uint64_t v59 = v139;
        uint64_t v60 = (uint64_t)a1;
        unsigned int v61 = 99;
        unsigned int v62 = 2;
LABEL_62:
        int v63 = 0;
        return sub_222697D34(v60, v58, v59, v61, v62, v63);
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
        unsigned int v25 = 33;
        switch(v15)
        {
          case '*':
            uint64_t v9 = v10;
            break;
          case '+':
            uint64_t v9 = v11;
            break;
          case ',':
            unsigned int v25 = 132;
            goto LABEL_104;
          case '-':
            unsigned int v25 = 264;
LABEL_104:
            uint64_t v9 = v8;
            break;
          default:
            break;
        }
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        uint64_t v112 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        uint64_t v113 = sub_222659834(*v112);
        if ((sub_222694914((uint64_t)a1, v113, v25, v138, v139) & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v114 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        v132[0] = sub_222659834(*v114);
        uint64_t v115 = sub_2225C3C70((uint64_t)v132);
        uint64_t v45 = sub_222654B7C(v115);
        if (v45)
        {
          uint64_t v43 = *a1;
          goto LABEL_109;
        }
        uint64_t v103 = v9;
LABEL_114:
        sub_2225C64B8(&v140, v103);
        return v140;
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
        sub_2225D3A34(&v134);
        sub_2225D3A34(&v133);
        switch(*a2)
        {
          case '/':
          case '1':
          case '3':
            sub_2225C64B8(v132, v11);
            uint64_t v133 = v132[0];
            uint64_t v134 = sub_222687824(*a1, v8, 2);
            break;
          default:
            uint64_t v133 = sub_222687824(*a1, v8, 2);
            sub_2225C64B8(v132, v11);
            uint64_t v134 = v132[0];
            break;
        }
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        uint64_t v29 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        v132[0] = sub_222659834(*v29);
        if (sub_22268824C(v132, v133))
        {
          uint64_t v30 = (unsigned int **)sub_2225C3C70((uint64_t)&v138);
          unsigned int v31 = sub_2225C3B40(*v30);
          sub_222688C3C((uint64_t)a1, v31, 2123, (uint64_t)v132);
          uint64_t v32 = &v133;
          goto LABEL_47;
        }
        uint64_t v46 = v134;
        goto LABEL_42;
      case 52:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        BOOL v102 = (uint64_t *)sub_2225C6BC0(&v138, 0);
        uint64_t v97 = sub_222659834(*v102);
        uint64_t v98 = v138;
        uint64_t v99 = v139;
        uint64_t v100 = (uint64_t)a1;
        unsigned int v101 = 33;
        goto LABEL_91;
      case 53:
      case 54:
        if (sub_222697C80((uint64_t)a1, v138, v139, 2u))
        {
          v132[0] = sub_222698108((uint64_t)a1, v138, v139, 0x21u);
          if (sub_2225D3DB0(v132)) {
            goto LABEL_92;
          }
        }
        goto LABEL_4;
      case 55:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        uint64_t v47 = sub_222687824(*a1, v8, 3);
        uint64_t v134 = v47;
        uint64_t v48 = (uint64_t *)sub_2225C6BC0(&v138, 0);
        v132[0] = sub_222659834(*v48);
        if ((sub_22268824C(v132, v47) & 1) == 0)
        {
          __n128 v49 = (uint64_t *)sub_2225C6BC0(&v138, 1);
          uint64_t v133 = sub_222659834(*v49);
          if ((sub_22268824C(&v133, v47) & 1) == 0) {
            return v47;
          }
        }
        __n128 v50 = (unsigned int **)sub_2225C6BC0(&v138, 0);
        unsigned int v51 = sub_2225C3B40(*v50);
        sub_222688C3C((uint64_t)a1, v51, 2123, (uint64_t)v132);
        uint64_t v32 = &v134;
LABEL_47:
        sub_222694318((uint64_t)v132, (uint64_t)v32);
        goto LABEL_48;
      case 57:
        uint64_t v16 = v138;
        uint64_t v17 = v139;
        uint64_t v18 = (uint64_t)a1;
        unsigned int v19 = 3;
        goto LABEL_8;
      case 59:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 3u)) {
          goto LABEL_4;
        }
        uint64_t v64 = (uint64_t *)sub_2225C6BC0(&v138, 2);
        v132[0] = sub_222659834(*v64);
        sub_2225C64B8(&v131, v8);
        if (!sub_22268824C(v132, v131))
        {
          uint64_t v119 = sub_2225C3C70((uint64_t)&v138);
          sub_2225C3D0C(v130, v119, 2);
          uint64_t v20 = v130[0];
          uint64_t v21 = v130[1];
          uint64_t v22 = (uint64_t)a1;
          unsigned int v23 = 33;
          return sub_222698108(v22, v20, v21, v23);
        }
        uint64_t v65 = (unsigned int **)sub_2225C6BC0(&v138, 0);
        unsigned int v66 = sub_2225C3B40(*v65);
        sub_222688C3C((uint64_t)a1, v66, 2123, (uint64_t)v132);
        sub_222696AEC(v132, v8);
LABEL_48:
        uint64_t v13 = v132;
        goto LABEL_3;
      case 60:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        uint64_t v20 = v138;
        uint64_t v21 = v139;
        uint64_t v22 = (uint64_t)a1;
        unsigned int v23 = 2048;
        return sub_222698108(v22, v20, v21, v23);
      case 61:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        uint64_t v78 = (uint64_t *)sub_2225C6BC0(&v138, 0);
        uint64_t v79 = sub_222659834(*v78);
        uint64_t v80 = sub_2225C6BC0(&v138, 0);
        sub_22261870C(v129, v80);
        if ((sub_222694914((uint64_t)a1, v79, 0x20u, v129[0], v129[1]) & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v81 = (uint64_t *)sub_2225C6BC0(&v138, 1);
        uint64_t v82 = sub_222659834(*v81);
        uint64_t v83 = sub_2225C6BC0(&v138, 1);
        sub_22261870C(v128, v83);
        if ((sub_222694914((uint64_t)a1, v82, 0x20u, v128[0], v128[1]) & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v84 = (uint64_t *)sub_2225C6BC0(&v138, 0);
        v132[0] = sub_222659834(*v84);
        uint64_t v85 = sub_2225C3C70((uint64_t)v132);
        uint64_t v86 = sub_22265E3C0(v85);
        uint64_t v87 = (uint64_t *)sub_2225C6BC0(&v138, 1);
        v132[0] = sub_222659834(*v87);
        uint64_t v88 = sub_2225C3C70((uint64_t)v132);
        uint64_t v89 = sub_22265E3C0(v88);
        uint64_t v90 = *a1;
        uint64_t v91 = sub_2225C3D04(v86);
        LODWORD(v89) = sub_222654EC8(v89);
        int v92 = sub_222654EC8(v86);
        uint64_t v93 = v90;
        uint64_t v94 = v91;
        int v95 = v89;
        return sub_222687A28(v93, v94, v95, v92);
      case 62:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        uint64_t v104 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        uint64_t v105 = sub_222659834(*v104);
        if ((sub_222694914((uint64_t)a1, v105, 0x800u, v138, v139) & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v106 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        v132[0] = sub_222659834(*v106);
        uint64_t v107 = sub_2225C3C70((uint64_t)v132);
        uint64_t v108 = sub_22265E3C0(v107);
        uint64_t v109 = *a1;
        uint64_t v110 = sub_2225C3D04(v108);
        int v111 = sub_222654FBC(v108);
        int v92 = sub_222654EC8(v108);
        uint64_t v93 = v109;
        uint64_t v94 = v110;
        int v95 = v111;
        return sub_222687A28(v93, v94, v95, v92);
      case 63:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        uint64_t v96 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        uint64_t v97 = sub_222659834(*v96);
        uint64_t v98 = v138;
        uint64_t v99 = v139;
        uint64_t v100 = (uint64_t)a1;
        unsigned int v101 = 1024;
LABEL_91:
        if ((sub_222694914(v100, v97, v101, v98, v99) & 1) == 0) {
          goto LABEL_4;
        }
LABEL_92:
        uint64_t v103 = v8;
        goto LABEL_114;
      case 64:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        uint64_t v20 = v138;
        uint64_t v21 = v139;
        uint64_t v22 = (uint64_t)a1;
        unsigned int v23 = 1024;
        return sub_222698108(v22, v20, v21, v23);
      case 65:
      case 66:
      case 67:
      case 68:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        v132[0] = sub_222698108((uint64_t)a1, v138, v139, 0x60u);
        if (!sub_2225D3DB0(v132)) {
          goto LABEL_4;
        }
        uint64_t v26 = sub_2225C3C70((uint64_t)v132);
        if (sub_222699698(v26)) {
          goto LABEL_40;
        }
        uint64_t v27 = (unsigned int **)sub_2225C6BC0(&v138, 0);
        unsigned int v28 = sub_2225C3B40(*v27);
        sub_222688C3C((uint64_t)a1, v28, 2124, (uint64_t)v127);
        uint64_t v13 = (uint64_t *)v127;
        goto LABEL_3;
      case 69:
      case 70:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        v132[0] = sub_222698108((uint64_t)a1, v138, v139, 0x60u);
        if (!sub_2225D3DB0(v132)) {
          goto LABEL_4;
        }
        uint64_t v42 = sub_2225C3C70((uint64_t)v132);
        if ((sub_222699698(v42) & 1) == 0)
        {
          uint64_t v120 = (unsigned int **)sub_2225C6BC0(&v138, 0);
          unsigned int v121 = sub_2225C3B40(*v120);
          sub_222688C3C((uint64_t)a1, v121, 2124, (uint64_t)v126);
          uint64_t v13 = (uint64_t *)v126;
          goto LABEL_3;
        }
LABEL_40:
        uint64_t v43 = *a1;
        uint64_t v44 = sub_2225C3C70((uint64_t)v132);
        uint64_t v45 = sub_22265E3C0(v44);
LABEL_109:
        int v116 = sub_222654EC8(v45);
        return sub_222687824(v43, v9, v116);
      case 71:
      case 72:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        uint64_t v38 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        uint64_t v39 = sub_222659834(*v38);
        if ((sub_222694914((uint64_t)a1, v39, 0x200u, v138, v139) & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v40 = (uint64_t *)sub_2225C3C70((uint64_t)&v138);
        v132[0] = sub_222659834(*v40);
        uint64_t v41 = sub_2225C3C70((uint64_t)v132);
        if ((sub_222699698(v41) & 1) == 0)
        {
          uint64_t v117 = (unsigned int **)sub_2225C6BC0(&v138, 0);
          unsigned int v118 = sub_2225C3B40(*v117);
          sub_222688C3C((uint64_t)a1, v118, 2124, (uint64_t)v125);
          uint64_t v13 = (uint64_t *)v125;
          goto LABEL_3;
        }
        return sub_222687C14(*a1, 7);
      case 73:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 1u)) {
          goto LABEL_4;
        }
        v132[0] = sub_222698108((uint64_t)a1, v138, v139, 0x200u);
        if (!sub_2225D3DB0(v132)) {
          goto LABEL_4;
        }
        uint64_t v52 = sub_2225C3C70((uint64_t)v132);
        if ((sub_222699698(v52) & 1) == 0)
        {
          uint64_t v53 = (unsigned int **)sub_2225C6BC0(&v138, 0);
          unsigned int v54 = sub_2225C3B40(*v53);
          sub_222688C3C((uint64_t)a1, v54, 2124, (uint64_t)v124);
          uint64_t v13 = (uint64_t *)v124;
          goto LABEL_3;
        }
LABEL_124:
        uint64_t v46 = v132[0];
LABEL_42:
        uint64_t v140 = v46;
        break;
      case 74:
        if (!sub_222697C80((uint64_t)a1, v138, v139, 2u)) {
          goto LABEL_4;
        }
        return v12;
      default:
        uint64_t v16 = v138;
        uint64_t v17 = v139;
        uint64_t v18 = (uint64_t)a1;
        unsigned int v19 = 1;
LABEL_8:
        if (!sub_222697C80(v18, v16, v17, v19)) {
          goto LABEL_4;
        }
LABEL_9:
        uint64_t v20 = v138;
        uint64_t v21 = v139;
LABEL_10:
        uint64_t v22 = (uint64_t)a1;
        unsigned int v23 = 99;
        return sub_222698108(v22, v20, v21, v23);
    }
  }
  return v140;
}

uint64_t sub_222699698(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_222654E68(&v2);
}

BOOL sub_2226996C0(int a1, int a2)
{
  BOOL result = 0;
  switch(a1)
  {
    case 3:
    case 4:
    case 5:
    case 6:
      return (a2 - 3) < 2;
    case 8:
    case 11:
    case 14:
    case 17:
      BOOL v4 = a2 == 8 || a2 == 11;
      goto LABEL_18;
    case 9:
    case 12:
    case 15:
    case 18:
      BOOL v4 = a2 == 9 || a2 == 12;
      goto LABEL_18;
    case 10:
    case 13:
    case 16:
    case 19:
      BOOL v4 = a2 == 10 || a2 == 13;
      goto LABEL_18;
    case 23:
    case 32:
      BOOL v5 = a2 == 23;
      int v6 = 32;
      goto LABEL_15;
    case 24:
    case 33:
      BOOL v5 = a2 == 24;
      int v6 = 33;
      goto LABEL_15;
    case 25:
    case 34:
      BOOL v5 = a2 == 25;
      int v6 = 34;
LABEL_15:
      BOOL v4 = v5 || a2 == v6;
LABEL_18:
      BOOL result = v4;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2226997D4(uint64_t a1, _DWORD *a2)
{
  uint64_t v9 = sub_2225C5B40((uint64_t)a2);
  uint64_t v3 = sub_2225C3C70((uint64_t)&v9);
  if (sub_22268B60C(v3)) {
    return 0;
  }
  uint64_t v9 = sub_2225C5B40((uint64_t)a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v9);
  uint64_t v5 = sub_222655B14(v4);
  if (v5)
  {
    uint64_t v9 = sub_2225C3D04(v5);
    uint64_t v6 = sub_2225C3C70((uint64_t)&v9);
    if (sub_22268B60C(v6)) {
      return 0;
    }
  }
  unsigned int v7 = sub_2226551A0(a2);
  if (v7 > 8) {
    return 0;
  }
  else {
    return dword_2226D12D4[v7];
  }
}

uint64_t sub_222699870(uint64_t a1, uint64_t a2)
{
  if (sub_222655E50(a2)) {
    return 0;
  }
  uint64_t v5 = sub_2225C5B40(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v5);
  return sub_2226998C8(v4) ^ 1;
}

uint64_t sub_2226998C8(uint64_t a1)
{
  int v2 = 0;
  return sub_2226879B8(a1, &v2);
}

uint64_t *sub_2226998F0(uint64_t *a1, unsigned char *a2)
{
  sub_2225CAD04(&v8);
  sub_222687130(a2, (uint64_t)&v8);
  std::operator+<char>();
  sub_2225D169C(&v5, "'", (uint64_t)&v6);
  sub_2225CCBF8(v7, &v6);
  sub_2225F5250(a1, v7[0], v7[1]);
  std::string::~string(&v6);
  std::string::~string(&v5);
  std::string::~string(&v8);
  return a1;
}

uint64_t sub_22269998C(uint64_t a1, int a2)
{
  return sub_222699994(a1, a2);
}

uint64_t sub_222699994(uint64_t a1, int a2)
{
  *(_DWORD *)a1 = a2;
  sub_2225F3278((_DWORD *)(a1 + 4));
  sub_2225F3278((_DWORD *)(a1 + 8));
  sub_2226999F4(a1 + 16);
  *(void *)(a1 + 32) = 0;
  sub_2225CCC70((void *)(a1 + 40));
  int v3 = (*(unsigned __int8 *)(a1 + 58) << 16) & 0xE00000;
  *(_WORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 58) = BYTE2(v3);
  return a1;
}

uint64_t sub_2226999F8(uint64_t a1)
{
  int v2 = sub_2225D3A34((void *)a1);
  sub_2225F3278((_DWORD *)v2 + 2);
  sub_2225F3278((_DWORD *)(a1 + 12));
  sub_222699A3C((unint64_t *)a1, 0);
  return a1;
}

unint64_t *sub_222699A3C(unint64_t *result, unsigned int a2)
{
  *BOOL result = *result & 0xFFFFFFFFFFFFFFFDLL | (2 * a2);
  return result;
}

uint64_t sub_222699A54(int *a1)
{
  if (sub_2225C3B84(a1))
  {
    int v2 = *a1;
    int v3 = v2 - sub_2225C7AD4((uint64_t)a1);
  }
  else
  {
    int v3 = sub_2225C5C28(a1);
  }
  return (v3 + 1);
}

uint64_t sub_222699AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222699ACC(&v3);
}

uint64_t sub_222699ACC(void *a1)
{
  return sub_222699AD4(*a1);
}

BOOL sub_222699ADC(uint64_t a1)
{
  return sub_22264B7DC(a1) == 3;
}

uint64_t sub_222699AFC(uint64_t a1)
{
  v4[11] = *(const void **)MEMORY[0x263EF8340];
  sub_22265B918(v4);
  sub_222699B84(a1, (uint64_t)v4, 1);
  uint64_t v2 = sub_2226922F8(*(void *)(a1 + 8), v4);
  sub_2225C56C4(v4);
  return v2;
}

unsigned int *sub_222699B84(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  std::string v6 = (unsigned int *)(a1 + 32);
  if (sub_2226450E4(a1 + 32))
  {
    BOOL result = sub_22269B2F0(a1);
    goto LABEL_5;
  }
  *(unsigned char *)(a1 + 72) = 1;
  if (!sub_22261BABC((uint64_t)v6, 399))
  {
    sub_22260826C(v24);
    int v8 = sub_2225C3B40(v6);
    sub_22269998C((uint64_t)v23, v8);
    int v9 = sub_22269A1A0(a1);
    char v10 = v9;
    if (v9)
    {
      if (sub_22269B548((_DWORD *)a1, (uint64_t)v23, (uint64_t)v24)) {
        return (unsigned int *)sub_2225C56C4(v24);
      }
      if (sub_22261BABC((uint64_t)v6, 61))
      {
        if (sub_2225D1E3C((uint64_t)v24))
        {
          v18[0] = sub_22268C97C(*(void *)(a1 + 8), (uint64_t)v23);
          if (v18[0]) {
            sub_2225CC7B8(a2, v18);
          }
        }
        goto LABEL_13;
      }
    }
    else if (sub_22261BABC((uint64_t)v6, 61))
    {
      sub_22269A258(a1, v6, 977, (uint64_t)v22);
      uint64_t v11 = v22;
      goto LABEL_16;
    }
    if (!sub_22261BABC((uint64_t)v6, 6)
      || (uint64_t v12 = *(uint64_t **)(a1 + 8), v13 = sub_22261AF2C((uint64_t)v6), sub_2225C3B40(v6), sub_2226919BC(v12, v13)))
    {
      if (!sub_22269A2B0(a1, (uint64_t)v23, 1))
      {
        sub_22269BD7C(a1, a2, (uint64_t)v23, 0, a3);
        return (unsigned int *)sub_2225C56C4(v24);
      }
      goto LABEL_20;
    }
    if ((v10 & 1) == 0)
    {
      sub_22269B5CC(a1, v6);
      goto LABEL_20;
    }
    uint64_t v14 = sub_22261AF2C((uint64_t)v6);
    int v15 = sub_22269A3C0(a1);
    if (sub_22261BABC((uint64_t)v6, 23))
    {
      sub_22269B1BC((uint64_t)v18, (uint64_t)v23, v14, v15);
      sub_22269B714(a1, (uint64_t)v18, a2);
      return (unsigned int *)sub_2225C56C4(v24);
    }
    if (sub_22268AA70((uint64_t)v23))
    {
      sub_22269B1BC((uint64_t)v20, (uint64_t)v23, v14, v15);
      v18[0] = sub_22268AC64(*(void *)(a1 + 8), (uint64_t)v20, 1);
      sub_2225CC7B8(a2, v18);
      if (!*(void *)sub_222608644(a2))
      {
        sub_222608660(a2);
        goto LABEL_20;
      }
      if (!sub_22269BB40((_DWORD *)a1, (uint64_t)v23, a2))
      {
LABEL_20:
        sub_2226A9798(a1);
        return (unsigned int *)sub_2225C56C4(v24);
      }
      if (!sub_22261CB34((uint64_t)v6, 61))
      {
LABEL_13:
        sub_22269A19C(a1, 61);
        return (unsigned int *)sub_2225C56C4(v24);
      }
      sub_22269A258(a1, v6, 1013, (uint64_t)v19);
      int v16 = sub_2225C3B40(v6);
      sub_2225C3D00((int)v17, ";");
      sub_22261E3FC(v16, v17[0], v17[1], 0, (uint64_t)v18);
      sub_22261E3BC((uint64_t)v19, (uint64_t)v18);
      sub_2225F4E0C(v18);
      uint64_t v11 = v19;
    }
    else
    {
      sub_22269A258(a1, v6, 1018, (uint64_t)v21);
      uint64_t v11 = v21;
    }
LABEL_16:
    sub_2225F37F0(v11);
    goto LABEL_20;
  }
  BOOL result = sub_22269B3E8(a1);
LABEL_5:
  v23[0] = result;
  if (result) {
    return (unsigned int *)sub_2225CC7B8(a2, v23);
  }
  return result;
}

uint64_t sub_222699EE4(uint64_t a1, uint64_t a2)
{
  v18[27] = *MEMORY[0x263EF8340];
  uint64_t v4 = (unsigned int *)(a1 + 32);
  if (sub_22261BABC(a1 + 32, 459)) {
    sub_22269A19C(a1, 459);
  }
  *(unsigned char *)(a1 + 72) = 1;
  int v5 = sub_2225C3B40(v4);
  sub_22269998C((uint64_t)v17, v5);
  if (sub_22261BABC((uint64_t)v4, 399) || sub_22269A1A0(a1))
  {
    sub_22269A258(a1, v4, 980, (uint64_t)v16);
    std::string v6 = (uint64_t *)v16;
LABEL_6:
    sub_2225F37F0(v6);
LABEL_7:
    sub_2226A9798(a1);
    return 0;
  }
  if (sub_22269A2B0(a1, (uint64_t)v17, 1)) {
    goto LABEL_7;
  }
  if (sub_22261CB34((uint64_t)v4, 6))
  {
    sub_22269A258(a1, v4, 8, (uint64_t)v18);
    sub_222635F18(v18, 6u);
    std::string v6 = v18;
    goto LABEL_6;
  }
  sub_22261AF2C((uint64_t)v4);
  uint64_t v9 = sub_22269A398(a2);
  int v10 = sub_22269A3C0(a1);
  if (sub_22261CB34((uint64_t)v4, 21))
  {
    sub_22269A258(a1, v4, 1034, (uint64_t)v15);
    sub_2225F37F0(v15);
  }
  sub_222688A9C(v14, *(void *)(a1 + 8), 9);
  sub_22269A3C4((uint64_t)v18, (uint64_t)v17, v9, v10);
  sub_22269A3CC(a1, (uint64_t)v18);
  if (sub_22261BABC((uint64_t)v4, 460) && (sub_22269A998(a1, (uint64_t)v18) & 1) != 0) {
    goto LABEL_21;
  }
  if (sub_22261BABC((uint64_t)v4, 61))
  {
    sub_22269A258(a1, v4, 981, (uint64_t)v13);
    sub_2225F37F0(v13);
    sub_22269A19C(a1, 61);
    sub_22268C074(*(uint64_t **)(a1 + 8), (uint64_t)v18);
    sub_2226A32E8();
LABEL_21:
    uint64_t v7 = 0;
LABEL_22:
    int v11 = 0;
    goto LABEL_23;
  }
  if (sub_22261CB34((uint64_t)v4, 23))
  {
    sub_2226A32E8();
    sub_22269A258(a1, v4, 979, (uint64_t)v12);
    sub_2225F37F0(v12);
    sub_2226A9798(a1);
    goto LABEL_21;
  }
  uint64_t v7 = sub_22269AC94(a1, (uint64_t)v18);
  if (!v7)
  {
    sub_2226A32E8();
    goto LABEL_22;
  }
  int v11 = 1;
LABEL_23:
  sub_22269AD18((uint64_t)v18);
  sub_222688AE0(v14);
  if (v11)
  {
    sub_222692178(*(void *)(a1 + 8), v7);
    return v7;
  }
  return 0;
}

uint64_t sub_22269A1A0(uint64_t a1)
{
  int v2 = sub_22261BFB4(a1 + 32);
  uint64_t result = 0;
  if (v2 > 360)
  {
    if ((v2 - 361) <= 0x3E && ((1 << (v2 - 105)) & 0x4000000400020001) != 0) {
      return 1;
    }
    if (v2 != 454)
    {
      if (v2 != 438) {
        return result;
      }
      return 1;
    }
LABEL_14:
    sub_22264FEFC(*(void *)(a1 + 16));
    return 1;
  }
  if (v2 <= 301)
  {
    if (v2 == 79) {
      return 1;
    }
    if (v2 != 296) {
      return result;
    }
    goto LABEL_14;
  }
  if (v2 == 302 || v2 == 323 || v2 == 357) {
    return 1;
  }
  return result;
}

uint64_t sub_22269A258@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v7 = sub_2225C3B40(a2);

  return sub_2226A32DC(a1, v7, a3, a4);
}

BOOL sub_22269A2B0(uint64_t a1, uint64_t a2, int a3)
{
  sub_22269C2E8(a1, a2);
  if (sub_22269D6AC((uint64_t *)a1, a2, a3)) {
    return 1;
  }
  if (sub_22261BABC(a1 + 32, 19))
  {
    unsigned int v7 = (_OWORD *)sub_2225CED2C(a2);
    if (sub_22269B1F0((_DWORD *)a1, v7)) {
      return 1;
    }
  }
  BOOL result = sub_22261BABC(a1 + 32, 19);
  if (result)
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 929, (uint64_t)v9);
    sub_2225F37F0(v9);
    BOOL result = sub_22261BABC(a1 + 32, 19);
    if (result)
    {
      do
      {
        sub_2226999F4(&v8);
        sub_22269B1F0((_DWORD *)a1, &v8);
      }
      while (sub_22261BABC(a1 + 32, 19));
      return 0;
    }
  }
  return result;
}

uint64_t sub_22269A398(uint64_t a1)
{
  return sub_22269F068(a1);
}

uint64_t sub_22269A3C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_22269ECB8(a1, a2, a3, a4);
}

BOOL sub_22269A3CC(uint64_t a1, uint64_t a2)
{
  sub_2225F3278(&v39);
  sub_2225F3278(&v38);
  if (!sub_2226A97EC((_DWORD *)a1, 0x15u, &v39))
  {
    if (sub_22261BABC(a1 + 32, 106))
    {
      sub_22269A19C(a1, 106);
      return sub_22269AFB8((_DWORD *)a1, 0x16u, v39, &v38);
    }
    BOOL v4 = 0;
    if (!sub_22261CB34(a1 + 32, 22))
    {
LABEL_57:
      sub_22269AFB8((_DWORD *)a1, 0x16u, v39, &v38);
      return v4;
    }
    while (1)
    {
      if (sub_22261BABC(a1 + 32, 1))
      {
        sub_22269A258(a1, (unsigned int *)(a1 + 32), 8, (uint64_t)v37);
        sub_222635F18(v37, 0x16u);
        sub_2225F37F0(v37);
        sub_2226A9798(a1);
        return 1;
      }
      int v5 = sub_2225C3B40((unsigned int *)(a1 + 32));
      sub_22269998C((uint64_t)v37, v5);
      if (sub_22261BFB4(a1 + 32) == 79)
      {
        int v6 = sub_2225C3B40((unsigned int *)(a1 + 32));
        sub_22269B080((uint64_t)v37, v6, 2);
        sub_22269A19C(a1, 79);
      }
      sub_22269B0AC(a1, (uint64_t)v37);
      int v7 = sub_22261BFB4(a1 + 32);
      sub_2225F3278(&v36);
      if (v7 == 493)
      {
        unsigned int v36 = sub_2225C3B40((unsigned int *)(a1 + 32));
        sub_22269A19C(a1, 493);
      }
      int v8 = sub_22261BFB4(a1 + 32);
      char v9 = 0;
      if (v8 <= 490) {
        break;
      }
      if (v8 == 491)
      {
        uint64_t v10 = a1;
        uint64_t v11 = 491;
LABEL_25:
        sub_22269A19C(v10, v11);
        sub_22269B12C((uint64_t)v37, 10);
        char v14 = 2;
LABEL_26:
        sub_22269B154((uint64_t)v37, v14);
LABEL_27:
        char v9 = 1;
        goto LABEL_28;
      }
      if (v8 == 492)
      {
        sub_22269A19C(a1, 492);
        sub_22269B12C((uint64_t)v37, 10);
        char v9 = 1;
        sub_22269B154((uint64_t)v37, 1);
      }
LABEL_28:
      if (v7 == 493
        && sub_22268CCA8((uint64_t)v37) != 41
        && sub_22268CCA8((uint64_t)v37) != 42)
      {
        sub_2226A32DC(a1, v36, 1066, (uint64_t)v35);
        sub_2225F37F0(v35);
        LODWORD(v32[0]) = 1441856;
        sub_2225C3E1C(v34, (uint64_t)v32);
        uint64_t v16 = v34[0];
        uint64_t v17 = v34[1];
        goto LABEL_52;
      }
      if ((v9 & 1) == 0 && sub_22269A2B0(a1, (uint64_t)v37, 1))
      {
        LODWORD(v32[0]) = 1441856;
        sub_2225C3E1C(v33, (uint64_t)v32);
        uint64_t v16 = v33[0];
        uint64_t v17 = v33[1];
        goto LABEL_52;
      }
      if (sub_22261CB34(a1 + 32, 6))
      {
        int v18 = sub_2225C3B40((unsigned int *)(a1 + 32));
        sub_22269B1BC((uint64_t)v32, (uint64_t)v37, 0, v18);
        unsigned int v19 = sub_22268A328(*(uint64_t **)(a1 + 8), (uint64_t)v32);
        sub_22269B1C4(a2, (uint64_t)v19);
      }
      else
      {
        uint64_t v20 = sub_22261AF2C(a1 + 32);
        int v21 = sub_22269A3C0(a1);
        sub_2226999F4(&v31);
        if (sub_22261BABC(a1 + 32, 19)) {
          char v22 = sub_22269B1F0((_DWORD *)a1, &v31);
        }
        else {
          char v22 = 0;
        }
        if (sub_22261BABC(a1 + 32, 19))
        {
          sub_22269A258(a1, (unsigned int *)(a1 + 32), 929, (uint64_t)v30);
          sub_2225F37F0(v30);
          while (sub_22261BABC(a1 + 32, 19))
          {
            sub_2226999F4(v32);
            sub_22269B1F0((_DWORD *)a1, v32);
          }
          char v22 = 1;
        }
        if (sub_22261BABC(a1 + 32, 62))
        {
          sub_22269A258(a1, (unsigned int *)(a1 + 32), 1041, (uint64_t)v29);
          sub_2225F37F0(v29);
          sub_22269B2C0((uint64_t)v32, (uint64_t)v37, v20, v21, &v31);
          unsigned int v23 = sub_22268A328(*(uint64_t **)(a1 + 8), (uint64_t)v32);
          sub_22269B1C4(a2, (uint64_t)v23);
LABEL_46:
          int v28 = 1441856;
          sub_2225C3E1C(v27, (uint64_t)&v28);
          uint64_t v16 = v27[0];
          uint64_t v17 = v27[1];
LABEL_52:
          sub_2226A95A8(a1, v16, v17, 1, 1);
          if (sub_22261BABC(a1 + 32, 64))
          {
            sub_22269B17C(a1);
            int v25 = 2;
            BOOL v4 = 1;
          }
          else
          {
            sub_22269AFB8((_DWORD *)a1, 0x16u, v39, &v38);
            int v25 = 1;
          }
          if (v25 != 2) {
            return 1;
          }
          goto LABEL_56;
        }
        sub_22269B2C0((uint64_t)v32, (uint64_t)v37, v20, v21, &v31);
        uint64_t v24 = sub_22268A328(*(uint64_t **)(a1 + 8), (uint64_t)v32);
        sub_22269B1C4(a2, (uint64_t)v24);
        if (v22) {
          goto LABEL_46;
        }
      }
      if (sub_22261BABC(a1 + 32, 64))
      {
        sub_22269A19C(a1, 64);
      }
      else if (sub_22261CB34(a1 + 32, 22))
      {
        sub_22269A258(a1, (unsigned int *)(a1 + 32), 8, (uint64_t)v32);
        sub_222635F18(v32, 0x16u);
        sub_2225F37F0(v32);
        return 1;
      }
LABEL_56:
      if (!sub_22261CB34(a1 + 32, 22)) {
        goto LABEL_57;
      }
    }
    switch(v8)
    {
      case 461:
        uint64_t v10 = a1;
        uint64_t v11 = 461;
        goto LABEL_25;
      case 462:
        sub_22269A19C(a1, 462);
        sub_22269B12C((uint64_t)v37, 13);
        char v14 = 3;
        goto LABEL_26;
      case 463:
        uint64_t v12 = a1;
        uint64_t v13 = 463;
        goto LABEL_21;
      case 464:
        sub_22269A19C(a1, 464);
        char v15 = 42;
        goto LABEL_23;
      default:
        if (v8 != 403) {
          goto LABEL_28;
        }
        uint64_t v12 = a1;
        uint64_t v13 = 403;
LABEL_21:
        sub_22269A19C(v12, v13);
        char v15 = 41;
LABEL_23:
        sub_22269B12C((uint64_t)v37, v15);
        break;
    }
    goto LABEL_27;
  }
  return 1;
}

uint64_t sub_22269A998(uint64_t a1, uint64_t a2)
{
  sub_22269A19C(a1, 460);
  if (sub_2226A2FCC((_DWORD *)a1, 21, 8, (uint64_t)"'('", 0) || sub_2226A2FCC((_DWORD *)a1, 21, 8, (uint64_t)"'('", 0))
    return 1;
  if (sub_22261BABC(a1 + 32, 22))
  {
LABEL_14:
    if (sub_2226A2FCC((_DWORD *)a1, 22, 8, (uint64_t)"')'", 0)) {
      return 1;
    }
    BOOL v17 = sub_2226A2FCC((_DWORD *)a1, 22, 8, (uint64_t)"')'", 0);
    uint64_t result = 0;
    if (v17) {
      return 1;
    }
    return result;
  }
  while (1)
  {
    if (!sub_22264C258(a1 + 32))
    {
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 1050, (uint64_t)v25);
      unsigned int v19 = v25;
      goto LABEL_19;
    }
    uint64_t v4 = sub_22261AF2C(a1 + 32);
    uint64_t v5 = sub_2225F2418(v4);
    uint64_t v7 = v6;
    int v8 = sub_2225C3B40((unsigned int *)(a1 + 32));
    sub_22269AD1C((uint64_t)v24, v8, v5, v7);
    sub_22269A19C(a1, 6);
    if (sub_22261BABC(a1 + 32, 21)) {
      break;
    }
LABEL_11:
    uint64_t v16 = sub_22268A244(*(uint64_t **)(a1 + 8), v24);
    sub_22269AF8C(a2, v16);
    if (sub_22261BABC(a1 + 32, 64)) {
      sub_22269A19C(a1, 64);
    }
    if (sub_22261BABC(a1 + 32, 22)) {
      goto LABEL_14;
    }
  }
  sub_22269AD24(a1);
  if (sub_22264C258(a1 + 32))
  {
    uint64_t v9 = sub_22261AF2C(a1 + 32);
    uint64_t v10 = sub_2225F2418(v9);
    sub_22269AD90((uint64_t)v24, v10, v11);
    sub_22269A19C(a1, 6);
    goto LABEL_10;
  }
  if (sub_22261BABC(a1 + 32, 8))
  {
    sub_22269ADC8(v23);
    uint64_t v12 = sub_22269AEB0((char *)v23, (void (*)(char *))sub_22269AEF0);
    LODWORD(v21[0]) = sub_22269AF20(16);
    sub_22269AE6C(v12, (int *)v21);
    uint64_t v13 = sub_2225C3D04(a1 + 32);
    sub_2225CCD48(&__str, v13);
    std::stod(&__str, 0);
    std::ostream::operator<<();
    std::string::~string(&__str);
    sub_22269AF4C((uint64_t)v23);
    char v14 = (const char *)sub_2225CBED0(&__str);
    char v15 = strdup(v14);
    sub_2225C3D00((int)v21, v15);
    std::string::~string(&__str);
    sub_22269AD90((uint64_t)v24, v21[0], v21[1]);
    sub_22269A19C(a1, 8);
    sub_22269AF54(v23);
LABEL_10:
    if (sub_2226A2FCC((_DWORD *)a1, 22, 8, (uint64_t)"')'", 0)) {
      return 1;
    }
    goto LABEL_11;
  }
  sub_22269A258(a1, (unsigned int *)(a1 + 32), 1051, (uint64_t)v20);
  unsigned int v19 = v20;
LABEL_19:
  sub_2225F37F0(v19);
  return 1;
}

uint64_t sub_22269AC94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22268C83C(*(uint64_t **)(a1 + 8), a2);
  if (v3)
  {
    return sub_2226A2E44(a1, v3);
  }
  else
  {
    sub_2226A2FCC((_DWORD *)a1, 23, 8, (uint64_t)"'{'", 0);
    sub_2226A3150(a1, 24, 0, 0);
    return 0;
  }
}

uint64_t sub_22269AD1C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_22269ED5C(a1, a2, a3, a4);
}

uint64_t sub_22269AD24(uint64_t a1)
{
  int v2 = (unsigned int *)(a1 + 32);
  BOOL v3 = sub_22261BABC(a1 + 32, 21);
  int v4 = *(_DWORD *)(a1 + 60);
  if (v3)
  {
    int v5 = 1;
LABEL_5:
    *(_DWORD *)(a1 + 60) = v4 + v5;
    goto LABEL_6;
  }
  if (v4)
  {
    int v5 = -1;
    goto LABEL_5;
  }
LABEL_6:
  *(_DWORD *)(a1 + 56) = sub_2225C3B40(v2);
  sub_222649758(*(void *)a1, v2);
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_22269AD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  uint64_t result = sub_2225C3C70((uint64_t)v5);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t *sub_22269ADC8(uint64_t *a1)
{
  sub_22269F0B8(a1 + 14);
  uint64_t v2 = MEMORY[0x263F8C340] + 24;
  *a1 = MEMORY[0x263F8C340] + 24;
  uint64_t v3 = MEMORY[0x263F8C340] + 64;
  a1[14] = MEMORY[0x263F8C340] + 64;
  sub_22269F0EC(a1, (uint64_t *)(MEMORY[0x263F8C2C8] + 8), a1 + 1);
  *a1 = v2;
  a1[14] = v3;
  sub_22269F1B4(a1 + 1, 16);
  return a1;
}

void *sub_22269AE6C(void *a1, int *a2)
{
  return a1;
}

char *sub_22269AEB0(char *a1, void (*a2)(char *))
{
  return a1;
}

uint64_t sub_22269AEF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_22269AF20(int a1)
{
  sub_2225D00B4(&v2, a1);
  return v2;
}

uint64_t sub_22269AF4C(uint64_t a1)
{
  return MEMORY[0x270F98268](a1 + 8);
}

uint64_t *sub_22269AF54(uint64_t *a1)
{
  uint64_t v2 = sub_22269EDCC(a1, MEMORY[0x263F8C2C8]);
  MEMORY[0x223C9B360](v2 + 112);
  return a1;
}

uint64_t sub_22269AF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2225CC7B8(a1 + 128, &v3);
}

BOOL sub_22269AFB8(_DWORD *a1, unsigned int a2, unsigned int a3, _DWORD *a4)
{
  int v8 = sub_22261BFB4((uint64_t)(a1 + 8));
  if (v8 == a2)
  {
    if (a2 == 20)
    {
      int v10 = a1[16];
      if (v10) {
        a1[16] = v10 - 1;
      }
    }
    else if (a2 == 22)
    {
      int v9 = a1[15];
      if (v9) {
        a1[15] = v9 - 1;
      }
    }
    else
    {
      int v11 = a1[17];
      if (v11) {
        a1[17] = v11 - 1;
      }
    }
    *a4 = sub_22269A3C0(a1);
  }
  else
  {
    sub_2226A98C4((uint64_t)a1, a2, a3, a4);
  }
  return v8 != a2;
}

uint64_t sub_22269B080(uint64_t a1, int a2, char a3)
{
  int v4 = *(unsigned __int16 *)(a1 + 56);
  uint64_t result = a1 + 56;
  *(_DWORD *)(result - 52) = a2;
  unsigned int v5 = v4 & 0xFFFFF0FF | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v4 & 0xF0FF | ((a3 & 0xF) << 8);
  *(unsigned char *)(result + 2) = BYTE2(v5);
  return result;
}

uint64_t sub_22269B0AC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22261BFB4(a1 + 32);
  switch(result)
  {
    case 0x18B:
      char v5 = 2;
      break;
    case 0x166:
      char v5 = 3;
      break;
    case 0x165:
      char v5 = 1;
      break;
    default:
      return result;
  }
  sub_22269B2C8(a2, v5);

  return sub_22269A3C0(a1);
}

uint64_t sub_22269B12C(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 56);
  uint64_t result = a1 + 56;
  unsigned int v4 = v3 & 0xFFFFFF01 | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xFF01 | (2 * (a2 & 0x7F));
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_22269B154(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 56);
  uint64_t result = a1 + 56;
  unsigned int v4 = (v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xFFE7FFFF | ((a2 & 3) << 19);
  *(_WORD *)uint64_t result = v3;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_22269B17C(uint64_t a1)
{
  uint64_t v2 = (unsigned int *)(a1 + 32);
  *(_DWORD *)(a1 + 56) = sub_2225C3B40((unsigned int *)(a1 + 32));
  sub_222649758(*(void *)a1, v2);
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_22269B1BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_22269ECF4(a1, a2, a3, a4);
}

uint64_t sub_22269B1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2225CC7B8(a1 + 40, &v3);
}

uint64_t sub_22269B1F0(_DWORD *a1, _OWORD *a2)
{
  sub_2225F3278(&v10);
  sub_2226A97EC(a1, 0x13u, &v10);
  if (sub_22261CB34((uint64_t)(a1 + 8), 20))
  {
    unsigned int v4 = sub_22269F3C8((uint64_t)a1);
    if (!v4)
    {
      int v5 = 1;
      sub_2226A3150((uint64_t)a1, 20, 1, 1);
      goto LABEL_6;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  int v5 = 0;
LABEL_6:
  sub_2225F3278(&v9);
  uint64_t v6 = v5 | sub_22269AFB8(a1, 0x14u, v10, &v9);
  if ((v6 & 1) == 0)
  {
    sub_22269E42C((uint64_t *)&v8, v10, v9, (uint64_t)v4);
    *a2 = v8;
  }
  return v6;
}

double sub_22269B2C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, __n128 *a5)
{
  *(void *)&double result = sub_22269EEEC(a1, a2, a3, a4, a5).n128_u64[0];
  return result;
}

uint64_t sub_22269B2C8(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 56);
  uint64_t result = a1 + 56;
  unsigned int v4 = (v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xFFF9FFFF | ((a2 & 3) << 17);
  *(_WORD *)uint64_t result = v3;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

unsigned int *sub_22269B2F0(uint64_t a1)
{
  uint64_t v2 = (unsigned int *)(a1 + 32);
  if (sub_22261BABC(a1 + 32, 523))
  {
    return (unsigned int *)sub_2226A14E4(a1);
  }
  else if (sub_22261BABC((uint64_t)v2, 524))
  {
    if (*(unsigned char *)(a1 + 72))
    {
      sub_22269A258(a1, v2, 636, (uint64_t)v4);
      sub_2225F37F0(v4);
    }
    return sub_2226A1624(a1);
  }
  else if (sub_22261BABC((uint64_t)v2, 521))
  {
    return (unsigned int *)sub_2226A0F4C(a1);
  }
  else
  {
    sub_22261BABC((uint64_t)v2, 525);
    sub_222688EB8(*(void *)(a1 + 8));
    sub_22269A19C(a1, 525);
    return 0;
  }
}

unsigned int *sub_22269B3E8(uint64_t a1)
{
  uint64_t v2 = (unsigned int *)(a1 + 32);
  int v3 = sub_2225C3B40((unsigned int *)(a1 + 32));
  sub_22269998C((uint64_t)v13, v3);
  int v4 = sub_22269A19C(a1, 399);
  if ((sub_22269C2E8(a1, (uint64_t)v13) & 1) == 0)
  {
    sub_22269A258(a1, v2, 1146, (uint64_t)v12);
    uint64_t v6 = v12;
LABEL_7:
    sub_2225F37F0(v6);
    goto LABEL_8;
  }
  if (!sub_22269A2B0(a1, (uint64_t)v13, 1))
  {
    if (!sub_22268A59C((uint64_t)v13))
    {
      sub_22269A258(a1, v2, 1146, (uint64_t)v11);
      sub_2225F37F0(v11);
      return 0;
    }
    if (!sub_22261CB34((uint64_t)v2, 61))
    {
      sub_22269A19C(a1, 61);
      return sub_22268CB10(*(uint64_t **)(a1 + 8), v13, v4);
    }
    sub_22269A258(a1, v2, 1013, (uint64_t)v10);
    int v5 = sub_2225C3B40(v2);
    sub_2225C3D00((int)v8, ";");
    sub_22261E3FC(v5, v8[0], v8[1], 0, (uint64_t)v9);
    sub_22261E3BC((uint64_t)v10, (uint64_t)v9);
    sub_2225F4E0C(v9);
    uint64_t v6 = v10;
    goto LABEL_7;
  }
LABEL_8:
  sub_2226A9798(a1);
  return 0;
}

uint64_t sub_22269B548(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  if (sub_22261BABC((uint64_t)(a1 + 8), 378))
  {
    if (sub_22269C364(a1, a2, a3)) {
      return 1;
    }
  }
  else
  {
    sub_22269C71C((uint64_t)a1, a2);
    sub_22269C77C((uint64_t)a1, a2);
  }
  sub_22269C5D4((uint64_t)a1, a2);
  return 0;
}

uint64_t sub_22269B5CC(uint64_t a1, unsigned int *a2)
{
  sub_22268AA10(&v16, 1, 0, 0);
  int v4 = *(uint64_t **)(a1 + 8);
  uint64_t v5 = sub_22261AF2C((uint64_t)a2);
  unsigned int v6 = sub_2225C3B40(a2);
  v15[0] = sub_222691890(v4, v5, v6, &v16);
  v15[1] = v7;
  uint64_t result = sub_2225C3B40((unsigned int *)v15);
  switch((int)result)
  {
    case 0:
      sub_22269A258(a1, a2, 3137, (uint64_t)v12);
      uint64_t v9 = sub_22261AF2C((uint64_t)a2);
      sub_222635F48(v12, v9);
      unsigned int v10 = v12;
      goto LABEL_6;
    case 3:
      sub_22269A258(a1, a2, 1018, (uint64_t)v11);
      unsigned int v10 = (uint64_t *)v11;
      goto LABEL_6;
    case 4:
      sub_22269A258(a1, a2, 1018, (uint64_t)v14);
      unsigned int v10 = (uint64_t *)v14;
      goto LABEL_6;
    case 5:
      sub_22269A258(a1, a2, 1018, (uint64_t)v13);
      unsigned int v10 = (uint64_t *)v13;
LABEL_6:
      uint64_t result = sub_2225F37F0(v10);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22269B714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  sub_2225F3278(&v37);
  sub_2226A97EC((_DWORD *)a1, 0x17u, &v37);
  uint64_t v6 = sub_2225C3C70(a2);
  if (sub_22268A5E0(v6) != 7)
  {
    uint64_t v13 = sub_2225C3C70(a2);
    unsigned int v14 = sub_222613380(v13);
    sub_2226A32DC(a1, v14, 1096, (uint64_t)v36);
    sub_2225F37F0(v36);
    sub_2226A3150(a1, 24, 0, 1);
    return sub_2226A9798(a1);
  }
  sub_222673134(&v35);
  sub_22265B918(v39);
  sub_222688A9C(&v33, *(void *)(a1 + 8), 136);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = sub_2225C3C70(a2);
  sub_22269C35C(v31, v7, v8);
  while (sub_22261CB34(a1 + 32, 24))
  {
    if (!sub_22261CB34(a1 + 32, 1)) {
      break;
    }
    sub_2226A32E8();
    sub_22265B918(v38);
    sub_222699B84(a1, v38, 0);
    v30[0] = sub_2226922F8(*(void *)(a1 + 8), (const void **)v38);
    sub_2225CC7B8((uint64_t)v39, v30);
    sub_2225C56C4(v38);
  }
  LOWORD(v35) = sub_2225F56EC((uint64_t)v31);
  sub_22269C360(v31);
  sub_222688AE0(&v33);
  sub_2225F3278(&v34);
  if (!sub_22269AFB8((_DWORD *)a1, 0x18u, v37, &v34))
  {
    if (sub_22261BABC(a1 + 32, 6))
    {
      uint64_t v9 = sub_22261AF2C(a1 + 32);
      int v10 = sub_22269A3C0(a1);
      sub_2226999F4(&v33);
      if (sub_22261BABC(a1 + 32, 19)) {
        sub_22269B1F0((_DWORD *)a1, &v33);
      }
      if (sub_22261BABC(a1 + 32, 19))
      {
        sub_22269A258(a1, (unsigned int *)(a1 + 32), 929, (uint64_t)v32);
        sub_2225F37F0(v32);
        while (sub_22261BABC(a1 + 32, 19))
        {
          sub_2226999F4(v38);
          sub_22269B1F0((_DWORD *)a1, v38);
        }
      }
      sub_222694368((uint64_t)v38);
      sub_22269B2C0((uint64_t)v31, (uint64_t)v38, v9, v10, &v33);
      if (sub_22261CB34(a1 + 32, 61))
      {
        sub_2226A32DC(a1, v34, 1013, (uint64_t)v30);
        int v11 = sub_2225C3B40((unsigned int *)(a1 + 32));
        sub_2225C3D00((int)v29, ";");
        sub_22261E3FC(v11, v29[0], v29[1], 0, (uint64_t)v38);
        sub_22261E3BC((uint64_t)v30, (uint64_t)v38);
        sub_2225F4E0C(v38);
        uint64_t v12 = v30;
LABEL_17:
        sub_2225F37F0(v12);
        return sub_2225C56C4(v39);
      }
      sub_22269A19C(a1, 61);
      BOOL v17 = *(uint64_t **)(a1 + 8);
      int v18 = v37;
      int v19 = v34;
      __int16 v20 = v35;
      sub_2225D3DDC(v28, v39);
      uint64_t v21 = (uint64_t)sub_22268B934(v17, a2, v18, v19, v20, v28[0], v28[1], (uint64_t)v31);
    }
    else
    {
      if (sub_22261CB34(a1 + 32, 61))
      {
        sub_2226A32DC(a1, v34, 1013, (uint64_t)v31);
        int v16 = sub_2225C3B40((unsigned int *)(a1 + 32));
        sub_2225C3D00((int)v27, ";");
        sub_22261E3FC(v16, v27[0], v27[1], 0, (uint64_t)v38);
        sub_22261E3BC((uint64_t)v31, (uint64_t)v38);
        sub_2225F4E0C(v38);
        uint64_t v12 = v31;
        goto LABEL_17;
      }
      sub_22269A19C(a1, 61);
      char v22 = *(uint64_t **)(a1 + 8);
      int v23 = v37;
      int v24 = v34;
      __int16 v25 = v35;
      sub_2225D3DDC(v26, v39);
      uint64_t v21 = sub_22268B6F8(v22, a2, v23, v24, v25, v26[0], v26[1]);
    }
    *(void *)&v38[0] = v21;
    if (v21) {
      sub_2225CC7B8(a3, v38);
    }
  }
  return sub_2225C56C4(v39);
}

BOOL sub_22269BB40(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1 + 8;
  BOOL v7 = sub_22261BABC((uint64_t)(a1 + 8), 64);
  if (!sub_22261BABC((uint64_t)v6, 64)) {
    return v7;
  }
  while (1)
  {
    sub_22269A19C(a1, 64);
    if (sub_22261CB34((uint64_t)v6, 6))
    {
      sub_22269A258((uint64_t)a1, v6, 8, (uint64_t)v14);
      sub_222635F18(v14, 6u);
      sub_2225F37F0(v14);
      return 0;
    }
    uint64_t v8 = sub_22261AF2C((uint64_t)v6);
    int v9 = sub_22269A3C0(a1);
    if (sub_22261BABC((uint64_t)v6, 19)) {
      break;
    }
    sub_22269B1BC((uint64_t)v14, a2, v8, v9);
    v16.n128_u64[0] = 0;
    v16.n128_u64[0] = (unint64_t)sub_22269C1C4((uint64_t)a1, (uint64_t)v14);
    if (v16.n128_u64[0])
    {
      int v11 = (unsigned __int8 **)&v16;
LABEL_12:
      sub_2225CC7B8(a3, v11);
    }
LABEL_13:
    if (!sub_22261BABC((uint64_t)v6, 64)) {
      return v7;
    }
  }
  int v10 = (_DWORD *)sub_2225CED2C(a2);
  if (!sub_22268A5FC(v10))
  {
    sub_2226999F4(&v16);
    sub_22269B1F0(a1, &v16);
    if (sub_22261BABC((uint64_t)v6, 19))
    {
      sub_22269A258((uint64_t)a1, v6, 929, (uint64_t)v15);
      sub_2225F37F0(v15);
      while (sub_22261BABC((uint64_t)v6, 19))
      {
        sub_2226999F4(v14);
        sub_22269B1F0(a1, v14);
      }
    }
    sub_22269B2C0((uint64_t)v14, a2, v8, v9, &v16);
    uint64_t v13 = 0;
    uint64_t v13 = sub_22269C1C4((uint64_t)a1, (uint64_t)v14);
    if (!v13) {
      goto LABEL_13;
    }
    int v11 = &v13;
    goto LABEL_12;
  }
  sub_22269A258((uint64_t)a1, v6, 929, (uint64_t)v17);
  sub_2225F37F0(v17);
  while (sub_22261BABC((uint64_t)v6, 19))
  {
    sub_2226999F4(v14);
    sub_22269B1F0(a1, v14);
  }
  return 0;
}

uint64_t sub_22269BD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v30[27] = *MEMORY[0x263EF8340];
  int v9 = (unsigned int *)(a1 + 32);
  if (!sub_22261BABC(a1 + 32, 61))
  {
    if (sub_22261CB34((uint64_t)v9, 6))
    {
      sub_22269A258(a1, v9, 8, (uint64_t)v30);
      sub_222635F18(v30, 6u);
      int v10 = v30;
      goto LABEL_7;
    }
    uint64_t v12 = sub_22261AF2C((uint64_t)v9);
    int v13 = sub_22269A3C0(a1);
    if (!sub_22261BABC((uint64_t)v9, 21))
    {
      sub_2226999F4(&v28);
      if (sub_22261BABC((uint64_t)v9, 19))
      {
        unsigned int v14 = (_DWORD *)sub_2225CED2C(a3);
        if (sub_22268A5FC(v14))
        {
          unsigned int v15 = sub_2225C3B40(v9);
          sub_2226A32DC(a1, v15, 929, (uint64_t)v24);
          int v10 = (uint64_t *)v24;
          goto LABEL_7;
        }
        uint64_t result = sub_22269B1F0((_DWORD *)a1, &v28);
        if (result) {
          return result;
        }
        if (sub_22261BABC((uint64_t)v9, 19))
        {
          unsigned int v17 = sub_2225C3B40(v9);
          sub_2226A32DC(a1, v17, 929, (uint64_t)v23);
          int v10 = (uint64_t *)v23;
          goto LABEL_7;
        }
      }
      sub_22269B2C0((uint64_t)v27, a3, v12, v13, &v28);
      char v22 = sub_22269C1C4(a1, (uint64_t)v27);
      if (v22) {
        sub_2225CC7B8(a2, &v22);
      }
      if (!sub_22269BB40((_DWORD *)a1, a3, a2)) {
        return sub_2226A9798(a1);
      }
      if (!sub_22261CB34((uint64_t)v9, 61)) {
        return sub_22269A19C(a1, 61);
      }
      sub_22269A258(a1, v9, 1013, (uint64_t)v21);
      int v18 = sub_2225C3B40(v9);
      sub_2225C3D00((int)v20, ";");
      sub_22261E3FC(v18, v20[0], v20[1], 0, (uint64_t)v30);
      sub_22261E3BC((uint64_t)v21, (uint64_t)v30);
      sub_2225F4E0C(v30);
      int v10 = (uint64_t *)v21;
LABEL_7:
      sub_2225F37F0(v10);
      return sub_2226A9798(a1);
    }
    sub_222688A9C(v21, *(void *)(a1 + 8), 9);
    sub_22269A3C4((uint64_t)v30, a3, v12, v13);
    sub_22269A3CC(a1, (uint64_t)v30);
    if (sub_22261BABC((uint64_t)v9, 61))
    {
      sub_22269A19C(a1, 61);
      v27[0] = sub_22268C074(*(uint64_t **)(a1 + 8), (uint64_t)v30);
      if (v27[0]) {
        sub_2225CC7B8(a2, v27);
      }
      sub_2226A32E8();
    }
    else
    {
      if (a5)
      {
        if (!sub_22261CB34((uint64_t)v9, 23))
        {
          v27[0] = sub_22269AC94(a1, (uint64_t)v30);
          if (v27[0]) {
            sub_2225CC7B8(a2, v27);
          }
          goto LABEL_35;
        }
        sub_2226A32E8();
        sub_22269A258(a1, v9, 979, (uint64_t)v25);
        __n128 v16 = (__n128 *)v25;
      }
      else
      {
        sub_2226A32E8();
        sub_22269A258(a1, v9, 1013, (uint64_t)&v28);
        int v19 = sub_2225C3B40(v9);
        sub_2225C3D00((int)v26, ";");
        sub_22261E3FC(v19, v26[0], v26[1], 0, (uint64_t)v27);
        sub_22261E3BC((uint64_t)&v28, (uint64_t)v27);
        sub_2225F4E0C(v27);
        __n128 v16 = &v28;
      }
      sub_2225F37F0(v16);
      sub_2226A9798(a1);
    }
LABEL_35:
    sub_22269AD18((uint64_t)v30);
    return sub_222688AE0(v21);
  }
  if (sub_22268CCA8(a3) == 1)
  {
    if (sub_22268B5AC(a3))
    {
      v30[0] = sub_2225CDCF4(a3);
      sub_2225CC7B8(a2, v30);
    }
    else
    {
      sub_22269A258(a1, v9, 925, (uint64_t)v29);
      sub_2225F37F0(v29);
    }
    return sub_22269A19C(a1, 61);
  }

  return sub_22269A19C(a1, 61);
}

unsigned __int8 *sub_22269C1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225C3D04(a2);
  v14[0] = sub_2225F2418(v4);
  v14[1] = v5;
  if ((unint64_t)sub_2225C3D04((uint64_t)v14) >= 0x401)
  {
    unsigned int v6 = sub_2225F514C(a2);
    sub_2226A32DC(a1, v6, 1043, (uint64_t)v13);
    sub_2225F37F0(v13);
  }
  BOOL v7 = (unsigned __int8 *)sub_22268AC64(*(void *)(a1 + 8), a2, 0);
  if (sub_22261BABC(a1 + 32, 62))
  {
    unsigned int v8 = sub_22269A19C(a1, 62);
    int v9 = sub_22269F418(a1);
    if (v9) {
      BOOL v7 = (unsigned __int8 *)sub_22268BB50(*(uint64_t **)(a1 + 8), (uint64_t)v7, v9, v8);
    }
  }
  else
  {
    uint64_t v10 = sub_2225C3C70(a2);
    if (sub_22268A5E0(v10) == 2)
    {
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 947, (uint64_t)v12);
      sub_2225F37F0(v12);
      return 0;
    }
  }
  if (v7) {
    sub_22268BFD0(*(void *)(a1 + 8), v7);
  }
  return v7;
}

uint64_t sub_22269C2E8(uint64_t a1, uint64_t a2)
{
  int v4 = sub_22261BFB4(a1 + 32);
  switch(v4)
  {
    case 327:
      char v5 = 3;
      goto LABEL_7;
    case 379:
      char v5 = 1;
      goto LABEL_7;
    case 392:
      char v5 = 2;
LABEL_7:
      sub_22269D684(a2, v5);
      sub_22269A3C0(a1);
      return 1;
  }
  return 0;
}

uint64_t sub_22269C364(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  int v6 = sub_22269A19C(a1, 378);
  unsigned int v7 = sub_2225C3B40(a1 + 8);
  sub_2225F3278(&v27);
  if (sub_2226A2FCC(a1, 21, 992, (uint64_t)"layout", 61))
  {
LABEL_19:
    char v8 = 1;
    return v8 & 1;
  }
  char v8 = 0;
  do
  {
    while (sub_22261BABC((uint64_t)(a1 + 8), 6))
    {
      uint64_t v9 = sub_22261AF2C((uint64_t)(a1 + 8));
      uint64_t v10 = sub_2225F2418(v9);
      int v12 = sub_22269C7E0(v10, v11);
      if (!v12) {
        break;
      }
      char v13 = v12;
      int v14 = sub_22269A19C(a1, 6);
      sub_22269CF68((uint64_t)&v24, v14, v13);
      if (sub_22261BABC((uint64_t)(a1 + 8), 62))
      {
        sub_22269A19C(a1, 62);
        if (sub_22261CB34((uint64_t)(a1 + 8), 8))
        {
          sub_22269A258((uint64_t)a1, a1 + 8, 991, (uint64_t)v23);
          sub_2225F37F0(v23);
          int v22 = 1441856;
          sub_2225C3E1C(v21, (uint64_t)&v22);
          uint64_t v15 = v21[0];
          uint64_t v16 = v21[1];
          goto LABEL_9;
        }
        int v18 = sub_2226A04B4((uint64_t)a1);
        sub_2225C6954(&v24, (uint64_t)v18);
      }
      sub_2225CC69C(a3, &v24);
      if (sub_22261CB34((uint64_t)(a1 + 8), 64))
      {
        int v17 = 3;
        goto LABEL_16;
      }
      sub_22269A19C(a1, 64);
    }
    sub_22269A258((uint64_t)a1, a1 + 8, 987, (uint64_t)v26);
    sub_2225F37F0(v26);
    LODWORD(v24) = 1441856;
    sub_2225C3E1C(v25, (uint64_t)&v24);
    uint64_t v15 = v25[0];
    uint64_t v16 = v25[1];
LABEL_9:
    sub_2226A95A8((uint64_t)a1, v15, v16, 1, 1);
    if (sub_22261BABC((uint64_t)(a1 + 8), 64))
    {
      sub_22269B17C((uint64_t)a1);
      int v17 = 2;
      char v8 = 1;
    }
    else
    {
      sub_22269AFB8(a1, 0x16u, v7, &v27);
      int v17 = 1;
    }
LABEL_16:
    ;
  }
  while (v17 == 2);
  if (v17 != 3 || sub_22269AFB8(a1, 0x16u, v7, &v27)) {
    goto LABEL_19;
  }
  sub_2225DF148(v20, a3);
  sub_22269CF70(a2, v6, v20[0], v20[1]);
  return v8 & 1;
}

uint64_t sub_22269C5D4(uint64_t a1, uint64_t a2)
{
  int v4 = (unsigned int *)(a1 + 32);
  int v5 = sub_2225C3B40((unsigned int *)(a1 + 32));
  int v6 = sub_22261BFB4((uint64_t)v4);
  uint64_t result = 0;
  if (v6 <= 356)
  {
    switch(v6)
    {
      case 79:
        char v8 = 2;
        break;
      case 296:
        char v8 = 1;
        break;
      case 302:
        sub_22269A19C(a1, 302);
        if (sub_22261BFB4((uint64_t)v4) == 357)
        {
          char v8 = 5;
        }
        else
        {
          if (sub_22261BFB4((uint64_t)v4) != 395)
          {
            unsigned int v9 = sub_2225C3B40(v4);
            sub_2226A32DC(a1, v9, 985, (uint64_t)v10);
            sub_2225F37F0(v10);
            return 0;
          }
          char v8 = 6;
        }
        break;
      default:
        return result;
    }
  }
  else if (v6 > 437)
  {
    if (v6 == 438)
    {
      char v8 = 7;
    }
    else
    {
      if (v6 != 454) {
        return result;
      }
      char v8 = 8;
    }
  }
  else if (v6 == 357)
  {
    char v8 = 3;
  }
  else
  {
    if (v6 != 395) {
      return result;
    }
    char v8 = 4;
  }
  sub_22269B080(a2, v5, v8);
  sub_22269A3C0(a1);
  return 1;
}

BOOL sub_22269C71C(uint64_t a1, uint64_t a2)
{
  int v4 = sub_22261BFB4(a1 + 32);
  if (v4 == 361)
  {
    sub_22269CF7C(a2, 1);
    sub_22269A19C(a1, 361);
  }
  return v4 == 361;
}

uint64_t sub_22269C77C(uint64_t a1, uint64_t a2)
{
  int v4 = sub_22261BFB4(a1 + 32);
  if (v4 == 423)
  {
    __int16 v5 = 1;
    goto LABEL_5;
  }
  if (v4 == 323)
  {
    __int16 v5 = 2;
LABEL_5:
    sub_22269CFA4(a2, v5);
    sub_22269A3C0(a1);
    return 1;
  }
  return 0;
}

uint64_t sub_22269C7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D934C(v161, a1, a2);
  char v160 = 1;
  uint64_t v3 = sub_2225D9588((uint64_t)v2, (uint64_t)"shared", (uint64_t)&v160);
  char v159 = 2;
  uint64_t v4 = sub_2225D9588(v3, (uint64_t)"packed", (uint64_t)&v159);
  char v158 = 3;
  uint64_t v5 = sub_2225D9588(v4, (uint64_t)"std140", (uint64_t)&v158);
  char v157 = 4;
  uint64_t v6 = sub_2225D9588(v5, (uint64_t)"std430", (uint64_t)&v157);
  char v156 = 5;
  uint64_t v7 = sub_2225DB220(v6, (uint64_t)"row_major", (uint64_t)&v156);
  char v155 = 6;
  uint64_t v8 = sub_2225DB294(v7, (uint64_t)"column_major", (uint64_t)&v155);
  char v154 = 7;
  uint64_t v9 = sub_2225D9350(v8, "rgba32f", (uint64_t)&v154);
  char v153 = 8;
  uint64_t v10 = sub_2225D9350(v9, "rgba16f", (uint64_t)&v153);
  char v152 = 9;
  uint64_t v11 = sub_2225D9438(v10, (uint64_t)"rg32f", (uint64_t)&v152);
  char v151 = 10;
  uint64_t v12 = sub_2225D9438(v11, (uint64_t)"rg16f", (uint64_t)&v151);
  char v150 = 11;
  uint64_t v13 = sub_2225DB308(v12, "r11f_g11f_b10f", (uint64_t)&v150);
  char v149 = 12;
  uint64_t v14 = sub_2225D9520(v13, "r32f", (uint64_t)&v149);
  char v148 = 13;
  uint64_t v15 = sub_2225D9520(v14, "r16f", (uint64_t)&v148);
  char v147 = 14;
  uint64_t v16 = sub_2225D9588(v15, (uint64_t)"rgba16", (uint64_t)&v147);
  char v146 = 15;
  uint64_t v17 = sub_2225D95FC(v16, "rgb10_a2", (uint64_t)&v146);
  char v145 = 16;
  uint64_t v18 = sub_2225D9438(v17, (uint64_t)"rgba8", (uint64_t)&v145);
  char v144 = 17;
  uint64_t v19 = sub_2225D9520(v18, "rg16", (uint64_t)&v144);
  char v143 = 18;
  uint64_t v20 = sub_2225D94AC(v19, (unsigned __int16 *)"rg8", (uint64_t)&v143);
  char v142 = 19;
  uint64_t v21 = sub_2225D94AC(v20, (unsigned __int16 *)"r16", (uint64_t)&v142);
  char v141 = 20;
  uint64_t v22 = sub_2225DB4FC(v21, (unsigned __int16 *)"r8", (uint64_t)&v141);
  char v140 = 21;
  uint64_t v23 = sub_2225DB294(v22, (uint64_t)"rgba16_snorm", (uint64_t)&v140);
  char v139 = 22;
  uint64_t v24 = sub_2225DAEFC(v23, "rgba8_snorm", (uint64_t)&v139);
  char v138 = 23;
  uint64_t v25 = sub_2225D93C4(v24, (uint64_t)"rg16_snorm", (uint64_t)&v138);
  char v137 = 24;
  uint64_t v26 = sub_2225DB220(v25, (uint64_t)"rg8_snorm", (uint64_t)&v137);
  char v136 = 25;
  uint64_t v27 = sub_2225DB220(v26, (uint64_t)"r16_snorm", (uint64_t)&v136);
  char v135 = 26;
  uint64_t v28 = sub_2225D95FC(v27, "r8_snorm", (uint64_t)&v135);
  char v134 = 27;
  uint64_t v29 = sub_2225D9350(v28, "rgba32i", (uint64_t)&v134);
  char v133 = 28;
  uint64_t v30 = sub_2225D9350(v29, "rgba16i", (uint64_t)&v133);
  char v132 = 29;
  uint64_t v31 = sub_2225D9588(v30, (uint64_t)"rgba8i", (uint64_t)&v132);
  char v131 = 30;
  uint64_t v32 = sub_2225D9438(v31, (uint64_t)"rg32i", (uint64_t)&v131);
  char v130 = 31;
  uint64_t v33 = sub_2225D9438(v32, (uint64_t)"rg16i", (uint64_t)&v130);
  char v129 = 32;
  uint64_t v34 = sub_2225D9520(v33, "rg8i", (uint64_t)&v129);
  char v128 = 33;
  uint64_t v35 = sub_2225D9520(v34, "r32i", (uint64_t)&v128);
  char v127 = 34;
  uint64_t v36 = sub_2225D9520(v35, "r16i", (uint64_t)&v127);
  char v126 = 35;
  uint64_t v37 = sub_2225D94AC(v36, (unsigned __int16 *)"r8i", (uint64_t)&v126);
  char v125 = 36;
  uint64_t v38 = sub_2225D95FC(v37, "rgba32ui", (uint64_t)&v125);
  char v124 = 37;
  uint64_t v39 = sub_2225D95FC(v38, "rgba16ui", (uint64_t)&v124);
  char v123 = 38;
  uint64_t v40 = sub_2225D93C4(v39, (uint64_t)"rgb10_a2ui", (uint64_t)&v123);
  char v122 = 39;
  uint64_t v41 = sub_2225D9350(v40, "rgba8ui", (uint64_t)&v122);
  char v121 = 40;
  uint64_t v42 = sub_2225D9588(v41, (uint64_t)"rg32ui", (uint64_t)&v121);
  char v120 = 41;
  uint64_t v43 = sub_2225D9588(v42, (uint64_t)"rg16ui", (uint64_t)&v120);
  char v119 = 42;
  uint64_t v44 = sub_2225D9438(v43, (uint64_t)"rg8ui", (uint64_t)&v119);
  char v118 = 43;
  uint64_t v45 = sub_2225D9438(v44, (uint64_t)"r32ui", (uint64_t)&v118);
  char v117 = 44;
  uint64_t v46 = sub_2225D9438(v45, (uint64_t)"r16ui", (uint64_t)&v117);
  char v116 = 45;
  uint64_t v47 = sub_2225D9520(v46, "r8ui", (uint64_t)&v116);
  char v115 = 46;
  uint64_t v48 = sub_2225D95FC(v47, "location", (uint64_t)&v115);
  char v114 = 47;
  uint64_t v49 = sub_2225D9350(v48, "binding", (uint64_t)&v114);
  char v113 = 48;
  uint64_t v50 = sub_2225DB220(v49, (uint64_t)"triangles", (uint64_t)&v113);
  char v112 = 49;
  uint64_t v51 = sub_2225D9438(v50, (uint64_t)"quads", (uint64_t)&v112);
  char v111 = 50;
  uint64_t v52 = sub_2225D95FC(v51, "isolines", (uint64_t)&v111);
  char v110 = 51;
  uint64_t v53 = sub_2225F2718(v52, "equal_spacing", (uint64_t)&v110);
  char v109 = 52;
  uint64_t v54 = sub_2225F25B4(v53, "fractional_even_spacing", (uint64_t)&v109);
  char v108 = 53;
  uint64_t v55 = sub_2225F2870(v54, "fractional_odd_spacing", (uint64_t)&v108);
  char v107 = 54;
  uint64_t v56 = sub_2225DB4FC(v55, (unsigned __int16 *)"cw", (uint64_t)&v107);
  char v106 = 55;
  uint64_t v57 = sub_2225D94AC(v56, (unsigned __int16 *)"ccw", (uint64_t)&v106);
  char v105 = 56;
  uint64_t v58 = sub_2225D93C4(v57, (uint64_t)"point_mode", (uint64_t)&v105);
  char v104 = 57;
  uint64_t v59 = sub_2225D9588(v58, (uint64_t)"points", (uint64_t)&v104);
  char v103 = 58;
  uint64_t v60 = sub_2225D9438(v59, (uint64_t)"lines", (uint64_t)&v103);
  char v102 = 59;
  uint64_t v61 = sub_2225F26A4(v60, "lines_adjacency", (uint64_t)&v102);
  char v101 = 60;
  uint64_t v62 = sub_2225F29D8(v61, "triangles_adjacency", (uint64_t)&v101);
  char v100 = 61;
  uint64_t v63 = sub_2225DAEFC(v62, "invocations", (uint64_t)&v100);
  char v99 = 62;
  uint64_t v64 = sub_2225F278C(v63, (uint64_t)"origin_upper_left", (uint64_t)&v99);
  char v98 = 63;
  uint64_t v65 = sub_2225F262C(v64, (uint64_t)"pixel_center_integer", (uint64_t)&v98);
  char v97 = 64;
  uint64_t v66 = sub_2225F262C(v65, (uint64_t)"early_fragment_tests", (uint64_t)&v97);
  char v96 = 65;
  uint64_t v67 = sub_2225DB294(v66, (uint64_t)"local_size_x", (uint64_t)&v96);
  char v95 = 66;
  uint64_t v68 = sub_2225DB294(v67, (uint64_t)"local_size_y", (uint64_t)&v95);
  char v94 = 67;
  uint64_t v69 = sub_2225DB294(v68, (uint64_t)"local_size_z", (uint64_t)&v94);
  char v93 = 68;
  uint64_t v70 = sub_2225D95FC(v69, "depthAny", (uint64_t)&v93);
  char v92 = 69;
  uint64_t v71 = sub_2225F2718(v70, "depth_greater", (uint64_t)&v92);
  char v91 = 70;
  uint64_t v72 = sub_2225DB220(v71, (uint64_t)"depthLess", (uint64_t)&v91);
  char v90 = 71;
  uint64_t v73 = sub_2225F26A4(v72, "depth_unchanged", (uint64_t)&v90);
  char v89 = 72;
  uint64_t v74 = sub_2225D9438(v73, (uint64_t)"index", (uint64_t)&v89);
  char v88 = 73;
  uint64_t v75 = sub_2225D95FC(v74, "vertices", (uint64_t)&v88);
  char v87 = 74;
  uint64_t v76 = sub_2225D93C4(v75, (uint64_t)"line_strip", (uint64_t)&v87);
  char v86 = 75;
  uint64_t v77 = sub_2225DB308(v76, "triangle_strip", (uint64_t)&v86);
  char v85 = 76;
  uint64_t v78 = sub_2225DB294(v77, (uint64_t)"max_vertices", (uint64_t)&v85);
  char v84 = 77;
  uint64_t v79 = sub_2225D9588(v78, (uint64_t)"stream", (uint64_t)&v84);
  char v83 = 78;
  uint64_t v80 = sub_2225D9588(v79, (uint64_t)"offset", (uint64_t)&v83);
  unsigned __int8 v82 = 0;
  return sub_2225F2DA4(v80, &v82);
}

uint64_t sub_22269CF68(uint64_t a1, int a2, char a3)
{
  return sub_22269F004(a1, a2, a3);
}

uint64_t sub_22269CF70(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(result + 8) = a2;
  *(void *)(result + 40) = a3;
  *(void *)(result + 48) = a4;
  return result;
}

uint64_t sub_22269CF7C(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 56);
  uint64_t result = a1 + 56;
  unsigned int v4 = (v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xFFFEFFFF | ((a2 & 1) << 16);
  *(_WORD *)uint64_t result = v3;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_22269CFA4(uint64_t a1, __int16 a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 56);
  uint64_t result = a1 + 56;
  unsigned int v4 = v3 & 0xFFFF3FFF | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0x3FFF | (a2 << 14);
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_22269CFC8(uint64_t a1)
{
  uint64_t v2 = (unsigned int *)(a1 + 32);
  int v3 = sub_22261BFB4(a1 + 32);
  uint64_t result = 0;
  if (v3 > 374)
  {
    switch(v3)
    {
      case 375:
      case 376:
      case 377:
      case 379:
      case 380:
      case 381:
      case 382:
      case 383:
      case 384:
      case 385:
      case 386:
      case 387:
      case 388:
      case 389:
      case 390:
      case 391:
      case 392:
      case 403:
      case 408:
      case 437:
      case 451:
      case 452:
      case 453:
      case 455:
      case 456:
      case 457:
      case 461:
      case 462:
      case 463:
      case 464:
      case 465:
      case 466:
      case 467:
      case 468:
      case 469:
      case 470:
      case 471:
      case 472:
      case 473:
      case 474:
      case 475:
      case 476:
      case 477:
      case 478:
      case 479:
      case 480:
      case 481:
      case 482:
      case 483:
      case 484:
      case 485:
      case 486:
      case 487:
      case 488:
      case 489:
      case 490:
      case 491:
      case 492:
        goto LABEL_3;
      default:
        return result;
    }
    return result;
  }
  if (v3 <= 296)
  {
    if (v3 > 100)
    {
      BOOL v5 = v3 == 123 || v3 == 269;
      BOOL v6 = v3 == 101 || v3 == 106;
      if (v3 <= 122) {
        return v6;
      }
      else {
        return v5;
      }
    }
    if (v3 == 6)
    {
      uint64_t v9 = *(uint64_t **)(a1 + 8);
      uint64_t v10 = sub_22261AF2C((uint64_t)v2);
      sub_2225C3B40(v2);
      return sub_2226919BC(v9, v10) != 0;
    }
    BOOL v7 = v3 == 92;
    BOOL v8 = v3 == 87;
    return v8 || v7;
  }
  if (v3 <= 326)
  {
    BOOL v7 = v3 == 298 || v3 == 299;
    BOOL v8 = v3 == 297;
    return v8 || v7;
  }
  switch(v3)
  {
    case 327:
    case 328:
    case 329:
    case 330:
LABEL_3:
      uint64_t result = 1;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_22269D320(uint64_t a1)
{
  uint64_t v2 = (unsigned int *)(a1 + 32);
  int v3 = sub_22261BFB4(a1 + 32);
  BOOL result = 1;
  if (v3 > 374)
  {
    switch(v3)
    {
      case 375:
      case 376:
      case 377:
      case 379:
      case 380:
      case 381:
      case 382:
      case 383:
      case 384:
      case 385:
      case 386:
      case 387:
      case 388:
      case 389:
      case 390:
      case 391:
      case 392:
      case 395:
      case 399:
      case 403:
      case 408:
      case 437:
      case 451:
      case 452:
      case 453:
      case 455:
      case 456:
      case 457:
      case 461:
      case 462:
      case 463:
      case 464:
      case 465:
      case 466:
      case 467:
      case 468:
      case 469:
      case 470:
      case 471:
      case 472:
      case 473:
      case 474:
      case 475:
      case 476:
      case 477:
      case 478:
      case 479:
      case 480:
      case 481:
      case 482:
      case 483:
      case 484:
      case 485:
      case 486:
      case 487:
      case 488:
      case 489:
      case 490:
      case 491:
      case 492:
      case 521:
        return result;
      default:
        return 0;
    }
    return result;
  }
  if (v3 > 296)
  {
    unsigned int v5 = v3 - 297;
    if (v5 <= 0x3D && ((1 << v5) & 0x30000003C0000027) != 0) {
      return result;
    }
    return 0;
  }
  if ((v3 - 87) > 0x24 || ((1 << (v3 - 87)) & 0x1000084021) == 0)
  {
    if (v3 == 6)
    {
      BOOL v6 = *(uint64_t **)(a1 + 8);
      uint64_t v7 = sub_22261AF2C((uint64_t)v2);
      sub_2225C3B40(v2);
      return sub_2226919BC(v6, v7) != 0;
    }
    if (v3 != 269) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22269D684(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 56);
  uint64_t result = a1 + 56;
  unsigned int v4 = v3 & 0xFFFFCFFF | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xCFFF | ((a2 & 3) << 12);
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_22269D6AC(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v33 = a1;
  char v34 = a3;
  for (unint64_t i = (unsigned int *)(a1 + 4); ; sub_22269E824(*a1, (uint64_t)i))
  {
    while (2)
    {
      int v7 = sub_22261BFB4((uint64_t)i);
      if (v7 > 327)
      {
        if (v7 > 374)
        {
          switch(v7)
          {
            case 375:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 14);
              uint64_t v17 = a1;
              uint64_t v18 = 375;
              goto LABEL_101;
            case 376:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 15);
              uint64_t v17 = a1;
              uint64_t v18 = 376;
              goto LABEL_101;
            case 377:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 16);
              uint64_t v17 = a1;
              uint64_t v18 = 377;
              goto LABEL_101;
            case 380:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 23);
              uint64_t v17 = a1;
              uint64_t v18 = 380;
              goto LABEL_101;
            case 381:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 23);
              uint64_t v17 = a1;
              uint64_t v18 = 381;
              goto LABEL_101;
            case 382:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 26);
              uint64_t v17 = a1;
              uint64_t v18 = 382;
              goto LABEL_101;
            case 383:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 27);
              uint64_t v17 = a1;
              uint64_t v18 = 383;
              goto LABEL_101;
            case 384:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 24);
              uint64_t v17 = a1;
              uint64_t v18 = 384;
              goto LABEL_101;
            case 385:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 28);
              uint64_t v17 = a1;
              uint64_t v18 = 385;
              goto LABEL_101;
            case 386:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 24);
              uint64_t v17 = a1;
              uint64_t v18 = 386;
              goto LABEL_101;
            case 387:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 29);
              uint64_t v17 = a1;
              uint64_t v18 = 387;
              goto LABEL_101;
            case 388:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 25);
              uint64_t v17 = a1;
              uint64_t v18 = 388;
              goto LABEL_101;
            case 389:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 30);
              uint64_t v17 = a1;
              uint64_t v18 = 389;
              goto LABEL_101;
            case 390:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 31);
              uint64_t v17 = a1;
              uint64_t v18 = 390;
              goto LABEL_101;
            case 391:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 25);
              uint64_t v17 = a1;
              uint64_t v18 = 391;
              goto LABEL_101;
            case 403:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 41);
              uint64_t v17 = a1;
              uint64_t v18 = 403;
              goto LABEL_101;
            case 408:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 43);
              uint64_t v17 = a1;
              uint64_t v18 = 408;
              goto LABEL_101;
            case 437:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 6);
              uint64_t v17 = a1;
              uint64_t v18 = 437;
              goto LABEL_101;
            case 451:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 17);
              uint64_t v17 = a1;
              uint64_t v18 = 451;
              goto LABEL_101;
            case 452:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 18);
              uint64_t v17 = a1;
              uint64_t v18 = 452;
              goto LABEL_101;
            case 453:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 19);
              uint64_t v17 = a1;
              uint64_t v18 = 453;
              goto LABEL_101;
            case 455:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 8);
              uint64_t v17 = a1;
              uint64_t v18 = 455;
              goto LABEL_101;
            case 456:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 9);
              uint64_t v17 = a1;
              uint64_t v18 = 456;
              goto LABEL_101;
            case 457:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 10);
              uint64_t v17 = a1;
              uint64_t v18 = 457;
              goto LABEL_101;
            case 461:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 10);
              uint64_t v17 = a1;
              uint64_t v18 = 461;
              goto LABEL_101;
            case 462:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 13);
              uint64_t v17 = a1;
              uint64_t v18 = 462;
              goto LABEL_101;
            case 463:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 41);
              uint64_t v17 = a1;
              uint64_t v18 = 463;
              goto LABEL_101;
            case 464:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 42);
              uint64_t v17 = a1;
              uint64_t v18 = 464;
              goto LABEL_101;
            case 465:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 32);
              uint64_t v17 = a1;
              uint64_t v18 = 465;
              goto LABEL_101;
            case 466:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 32);
              uint64_t v17 = a1;
              uint64_t v18 = 466;
              goto LABEL_101;
            case 467:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 35);
              uint64_t v17 = a1;
              uint64_t v18 = 467;
              goto LABEL_101;
            case 468:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 36);
              uint64_t v17 = a1;
              uint64_t v18 = 468;
              goto LABEL_101;
            case 469:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 33);
              uint64_t v17 = a1;
              uint64_t v18 = 469;
              goto LABEL_101;
            case 470:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 37);
              uint64_t v17 = a1;
              uint64_t v18 = 470;
              goto LABEL_101;
            case 471:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 33);
              uint64_t v17 = a1;
              uint64_t v18 = 471;
              goto LABEL_101;
            case 472:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 38);
              uint64_t v17 = a1;
              uint64_t v18 = 472;
              goto LABEL_101;
            case 473:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 34);
              uint64_t v17 = a1;
              uint64_t v18 = 473;
              goto LABEL_101;
            case 474:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 39);
              uint64_t v17 = a1;
              uint64_t v18 = 474;
              goto LABEL_101;
            case 475:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 40);
              uint64_t v17 = a1;
              uint64_t v18 = 475;
              goto LABEL_101;
            case 476:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 34);
              uint64_t v17 = a1;
              uint64_t v18 = 476;
              goto LABEL_101;
            case 477:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 8);
              uint64_t v17 = a1;
              uint64_t v18 = 477;
              goto LABEL_101;
            case 478:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 9);
              uint64_t v17 = a1;
              uint64_t v18 = 478;
              goto LABEL_101;
            case 479:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 10);
              uint64_t v17 = a1;
              uint64_t v18 = 479;
              goto LABEL_101;
            case 480:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 11);
              uint64_t v17 = a1;
              uint64_t v18 = 480;
              goto LABEL_101;
            case 481:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 12);
              uint64_t v17 = a1;
              uint64_t v18 = 481;
              goto LABEL_101;
            case 482:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 13);
              uint64_t v17 = a1;
              uint64_t v18 = 482;
              goto LABEL_101;
            case 483:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 23);
              uint64_t v17 = a1;
              uint64_t v18 = 483;
              goto LABEL_101;
            case 484:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 24);
              uint64_t v17 = a1;
              uint64_t v18 = 484;
              goto LABEL_101;
            case 485:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 25);
              uint64_t v17 = a1;
              uint64_t v18 = 485;
              goto LABEL_101;
            case 486:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 32);
              uint64_t v17 = a1;
              uint64_t v18 = 486;
              goto LABEL_101;
            case 487:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 33);
              uint64_t v17 = a1;
              uint64_t v18 = 487;
              goto LABEL_101;
            case 488:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 34);
              uint64_t v17 = a1;
              uint64_t v18 = 488;
              goto LABEL_101;
            case 489:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 42);
              uint64_t v17 = a1;
              uint64_t v18 = 489;
              goto LABEL_101;
            case 490:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 44);
              uint64_t v17 = a1;
              uint64_t v18 = 490;
              goto LABEL_101;
            case 491:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 10);
              uint64_t v17 = a1;
              uint64_t v18 = 491;
              goto LABEL_101;
            case 492:
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 10);
              uint64_t v17 = a1;
              uint64_t v18 = 492;
              goto LABEL_101;
            default:
              goto LABEL_96;
          }
        }
        switch(v7)
        {
          case 328:
            sub_22269E438((char *)&v33);
            sub_22269B12C(a2, 11);
            uint64_t v17 = a1;
            uint64_t v18 = 328;
            break;
          case 329:
            sub_22269E438((char *)&v33);
            sub_22269B12C(a2, 12);
            uint64_t v17 = a1;
            uint64_t v18 = 329;
            break;
          case 330:
            sub_22269E438((char *)&v33);
            sub_22269B12C(a2, 13);
            uint64_t v17 = a1;
            uint64_t v18 = 330;
            break;
          default:
            goto LABEL_96;
        }
        goto LABEL_101;
      }
      if (v7 > 122)
      {
        switch(v7)
        {
          case 297:
            sub_22269E438((char *)&v33);
            sub_22269B12C(a2, 20);
            uint64_t v17 = a1;
            uint64_t v18 = 297;
            break;
          case 298:
            sub_22269E438((char *)&v33);
            sub_22269B12C(a2, 21);
            uint64_t v17 = a1;
            uint64_t v18 = 298;
            break;
          case 299:
            sub_22269E438((char *)&v33);
            sub_22269B12C(a2, 22);
            uint64_t v17 = a1;
            uint64_t v18 = 299;
            break;
          case 300:
          case 301:
            goto LABEL_96;
          case 302:
            if (!a3) {
              return 1;
            }
            unsigned int v16 = sub_22268A5E0(a2);
            if (v16 > 8 || ((1 << v16) & 0x118) == 0) {
              goto LABEL_97;
            }
            sub_22269A258((uint64_t)a1, i, 945, (uint64_t)v29);
            sub_2225F37F0(v29);
            sub_22269A3C0(a1);
            continue;
          default:
            if (v7 == 123)
            {
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 7);
              uint64_t v17 = a1;
              uint64_t v18 = 123;
            }
            else
            {
              if (v7 != 269) {
                goto LABEL_96;
              }
              sub_22269E438((char *)&v33);
              sub_22269B12C(a2, 4);
              uint64_t v17 = a1;
              uint64_t v18 = 269;
            }
            break;
        }
LABEL_101:
        sub_22269A19C(v17, v18);
        return 0;
      }
      break;
    }
    if (v7 > 86) {
      break;
    }
    if (v7 != 6) {
      goto LABEL_96;
    }
    sub_22268AA10(&v32, 1, 0, 0);
    BOOL v8 = (uint64_t *)a1[1];
    uint64_t v9 = sub_22261AF2C((uint64_t)i);
    unsigned int v10 = sub_2225C3B40(i);
    v31[0] = sub_222691890(v8, v9, v10, &v32);
    v31[1] = v11;
    int v12 = sub_2225C3B40((unsigned int *)v31);
    if (v12 != 1)
    {
      switch(v12)
      {
        case 1:
          __break(1u);
          JUMPOUT(0x22269E224);
        case 2:
          v30[0] = sub_22269E878((uint64_t)v31);
          uint64_t v24 = sub_2225C3C70((uint64_t)v30);
          uint64_t v25 = sub_222655268(v24);
          if (!v25) {
            return 1;
          }
          uint64_t v26 = v25;
          sub_22269B12C(a2, 1);
          uint64_t v27 = sub_2225C3D04(v26);
          sub_22269E80C(a2, v27);
          sub_22269A3C0(a1);
          return 0;
        default:
          if (!a3) {
            return 1;
          }
          sub_22269A258((uint64_t)a1, i, 3137, (uint64_t)v30);
          uint64_t v19 = sub_22261AF2C((uint64_t)i);
          sub_222635F48(v30, v19);
          uint64_t v20 = v30;
          goto LABEL_98;
      }
    }
    uint64_t v13 = sub_2225C3D04((uint64_t)v31);
    sub_2225C5B6C((uint64_t)i, v13);
    uint64_t v14 = (_DWORD *)sub_2225C3D04((uint64_t)v31);
    __int16 v15 = sub_22263E560(v14);
    sub_22261F2AC((uint64_t)i, v15);
  }
  if (v7 <= 100)
  {
    if (v7 != 87)
    {
      if (v7 == 92)
      {
        sub_22269E438((char *)&v33);
        sub_22269B12C(a2, 5);
        uint64_t v17 = a1;
        uint64_t v18 = 92;
        goto LABEL_101;
      }
LABEL_96:
      if (a3)
      {
LABEL_97:
        sub_22269A258((uint64_t)a1, i, 1018, (uint64_t)v28);
        uint64_t v20 = (uint64_t *)v28;
LABEL_98:
        sub_2225F37F0(v20);
      }
      return 1;
    }
    sub_22269E438((char *)&v33);
    sub_22269B12C(a2, 3);
    uint64_t v17 = a1;
    uint64_t v18 = 87;
    goto LABEL_101;
  }
  if (v7 != 101)
  {
    if (v7 != 106) {
      goto LABEL_96;
    }
    sub_22269E438((char *)&v33);
    sub_22269B12C(a2, 2);
    uint64_t v17 = a1;
    uint64_t v18 = 106;
    goto LABEL_101;
  }
  uint64_t v21 = sub_22269E4C4((uint64_t)a1);
  if (!v21) {
    return 1;
  }
  uint64_t v22 = sub_2225E55A8(v21);
  sub_22269B12C(a2, 1);
  sub_22269E80C(a2, v22);
  sub_22269E814(a2);
  return 0;
}

uint64_t *sub_22269E42C(uint64_t *a1, int a2, int a3, uint64_t a4)
{
  return sub_22269F014(a1, a2, a3, a4);
}

char *sub_22269E438(char *result)
{
  if (result[8])
  {
    uint64_t v1 = *(void *)result;
    uint64_t v2 = (unsigned int *)(*(void *)result + 32);
    int v3 = sub_22261BFB4((uint64_t)v2);
    uint64_t result = sub_222613AF0(v3);
    if (result)
    {
      int v4 = sub_22261BFB4((uint64_t)v2);
      uint64_t result = (char *)sub_22264FE40(v4, *(void *)(v1 + 16));
      if ((result & 1) == 0)
      {
        sub_22269A258(v1, v2, 1169, (uint64_t)v7);
        unsigned int v5 = sub_22264FEFC(*(void *)(v1 + 16));
        unsigned int v6 = sub_222651018(v5);
        sub_2226256C4(v7, v6);
        return (char *)sub_2225F37F0(v7);
      }
    }
  }
  return result;
}

uint64_t sub_22269E4C4(uint64_t a1)
{
  v23[11] = *MEMORY[0x263EF8340];
  unsigned int v2 = sub_22269A19C(a1, 101);
  if (sub_22261CB34(a1 + 32, 23) && sub_22261CB34(a1 + 32, 6))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 11, (uint64_t)v23);
    int v3 = sub_222635F18(v23, 6u);
    sub_222635F18(v3, 0x17u);
    int v4 = v23;
LABEL_11:
    sub_2225F37F0(v4);
    return 0;
  }
  sub_2225F3278(&v21);
  if (sub_22261BABC(a1 + 32, 6))
  {
    uint64_t v5 = sub_22261AF2C(a1 + 32);
    unsigned int v21 = sub_22269A19C(a1, 6);
    if (sub_22261CB34(a1 + 32, 23))
    {
      if (v5)
      {
        uint64_t v6 = sub_2226919BC(*(uint64_t **)(a1 + 8), v5);
        if (v6)
        {
          uint64_t v7 = v6;
          sub_2226A32DC(a1, v2, 4735, (uint64_t)v22);
          BOOL v8 = sub_222635F48((uint64_t *)v22, v5);
          sub_22262FD48(&v20, v2);
          sub_22269E8A4(v20, (uint64_t)v23);
          sub_22261E3BC((uint64_t)v8, (uint64_t)v23);
          sub_2225F4E0C(v23);
          sub_2225F37F0(v22);
          return v7;
        }
      }
LABEL_10:
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 1155, (uint64_t)v19);
      int v4 = (uint64_t *)v19;
      goto LABEL_11;
    }
  }
  else
  {
    if (sub_22261CB34(a1 + 32, 23)) {
      goto LABEL_10;
    }
    uint64_t v5 = 0;
  }
  sub_2225F3278(&v18);
  sub_2226A97EC((_DWORD *)a1, 0x17u, &v18);
  if (sub_22261BABC(a1 + 32, 24))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 964, (uint64_t)v17);
    sub_2225F37F0(v17);
  }
  sub_22265B918(v23);
  sub_222688A9C(v16, *(void *)(a1 + 8), 24);
  sub_22265B918(v22);
  while (sub_22261CB34(a1 + 32, 24))
  {
    if (!sub_22261CB34(a1 + 32, 1)) {
      break;
    }
    sub_2226A32E8();
    sub_22269E8E0(a1, (uint64_t)v22);
    if (sub_2225CC780((uint64_t)v22))
    {
      uint64_t v15 = 0;
      uint64_t v15 = sub_2226922F8(*(void *)(a1 + 8), v22);
      sub_2225C5D90(v22);
      if (v15) {
        sub_2225CC7B8((uint64_t)v23, &v15);
      }
    }
    else
    {
      sub_2226A32E8();
    }
  }
  sub_2225C56C4(v22);
  sub_222688AE0(v16);
  sub_2225F3278(v22);
  if (sub_22269AFB8((_DWORD *)a1, 0x18u, v18, v22))
  {
    uint64_t v7 = 0;
  }
  else
  {
    sub_22261BABC(a1 + 32, 6);
    uint64_t v9 = *(uint64_t **)(a1 + 8);
    unsigned int v10 = v21;
    int v11 = (int)v22[0];
    int v12 = v18;
    sub_2225D3DDC(v14, v23);
    uint64_t v7 = sub_22268A080(v9, v2, v10, v5, v12, v11, v14[0], v14[1]);
  }
  sub_2225C56C4(v23);
  return v7;
}

uint64_t sub_22269E80C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = a2;
  return result;
}

_WORD *sub_22269E814(uint64_t a1)
{
  __int16 v2 = *(_WORD *)(a1 + 56);
  uint64_t result = (_WORD *)(a1 + 56);
  *uint64_t result = v2 | 1;
  return result;
}

__n128 sub_22269E824(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 1984))
  {
    if (sub_22263368C(a1))
    {
      uint64_t v5 = sub_222609E38(a1 + 1928, *(_DWORD *)(a1 + 1984) - 1);
      int v6 = *(_DWORD *)(a2 + 15);
      __n128 result = *(__n128 *)a2;
      *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
      *(_DWORD *)(v5 + 15) = v6;
    }
  }
  return result;
}

uint64_t sub_22269E878(uint64_t a1)
{
  sub_2225C64B8(&v2, *(void *)(a1 + 8));
  return v2;
}

uint64_t sub_22269E8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_2226259E4(a1);

  return sub_22262040C(v3, v4, a2);
}

uint64_t sub_22269E8E0(uint64_t a1, uint64_t a2)
{
  if (sub_22269A1A0(a1))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 1158, (uint64_t)v14);
    char v4 = v14;
LABEL_3:
    sub_2225F37F0(v4);
    return sub_2226A9798(a1);
  }
  int v5 = sub_2225C3B40((unsigned int *)(a1 + 32));
  sub_22269998C((uint64_t)v13, v5);
  if (!sub_22269A2B0(a1, v13, 1))
  {
    int v12 = sub_22269EA70(a1, (uint64_t)v13);
    BOOL v7 = v12 == 0;
    if (v12) {
      sub_2225CC7B8(a2, &v12);
    }
    while (sub_22261BABC(a1 + 32, 64))
    {
      sub_22269A19C(a1, 64);
      int v12 = sub_22269EA70(a1, (uint64_t)v13);
      if (v12) {
        sub_2225CC7B8(a2, &v12);
      }
      else {
        BOOL v7 = 1;
      }
    }
    if (!sub_22261CB34(a1 + 32, 61)) {
      return sub_22269A19C(a1, 61);
    }
    if (!v7)
    {
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 1013, (uint64_t)v11);
      int v8 = sub_2225C3B40((unsigned int *)(a1 + 32));
      sub_2225C3D00((int)v9, ";");
      sub_22261E3FC(v8, v9[0], v9[1], 0, (uint64_t)v10);
      sub_22261E3BC((uint64_t)v11, (uint64_t)v10);
      sub_2225F4E0C(v10);
      char v4 = v11;
      goto LABEL_3;
    }
  }
  return sub_2226A9798(a1);
}

unsigned int *sub_22269EA70(uint64_t a1, uint64_t a2)
{
  char v4 = (_DWORD *)sub_2225CED2C(a2);
  if (sub_22268A5FC(v4))
  {
    int v5 = (void *)sub_2225CED2C(a2);
    if (!sub_22261964C(v5, v6))
    {
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 1156, (uint64_t)v20);
      sub_2225F37F0(v20);
    }
  }
  if (sub_22261CB34(a1 + 32, 6))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 8, (uint64_t)v15);
    sub_222635F18(v15, 6u);
    BOOL v7 = v15;
LABEL_6:
    sub_2225F37F0(v7);
    return 0;
  }
  uint64_t v10 = sub_22261AF2C(a1 + 32);
  int v11 = sub_22269A19C(a1, 6);
  sub_2226999F4(&v19);
  if (!sub_22261BABC(a1 + 32, 19))
  {
LABEL_17:
    if (sub_22261BABC(a1 + 32, 19))
    {
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 929, (uint64_t)v16);
      sub_2225F37F0(v16);
      while (sub_22261BABC(a1 + 32, 19))
      {
        sub_2226999F4(v15);
        sub_22269B1F0((_DWORD *)a1, v15);
      }
      return 0;
    }
    sub_22269B2C0((uint64_t)v15, a2, v10, v11, &v19);
    int v8 = sub_22268AC64(*(void *)(a1 + 8), (uint64_t)v15, 1);
    if (!sub_22261BABC(a1 + 32, 62)) {
      return v8;
    }
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 1157, (uint64_t)v14);
    BOOL v7 = (uint64_t *)v14;
    goto LABEL_6;
  }
  int v12 = (_DWORD *)sub_2225CED2C(a2);
  if (sub_22268A5FC(v12))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 929, (uint64_t)v18);
    sub_2225F37F0(v18);
    while (sub_22261BABC(a1 + 32, 19))
    {
      sub_2226999F4(v15);
      sub_22269B1F0((_DWORD *)a1, v15);
    }
    return 0;
  }
  if ((sub_22269B1F0((_DWORD *)a1, &v19) & 1) == 0)
  {
    if (!sub_22261964C(&v19, v13))
    {
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 1156, (uint64_t)v17);
      sub_2225F37F0(v17);
    }
    goto LABEL_17;
  }
  return 0;
}

uint64_t sub_22269ECB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = sub_22269ECF4(a1, a2, a3, a4);
  sub_22265B918(v5 + 40);
  sub_22265B918(a1 + 128);
  return a1;
}

uint64_t sub_22269ECF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(_DWORD *)(a1 + 16) = a4;
  sub_2226999F4(a1 + 24);
  return a1;
}

uint64_t sub_22269ED28(uint64_t a1)
{
  return a1;
}

uint64_t sub_22269ED5C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)__n128 result = a2;
  *(void *)(result + 8) = a3;
  *(void *)(result + 16) = a4;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t sub_22269ED6C(uint64_t a1, int a2, int a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 8);
  sub_22269EDBC(a1, a3);
  *(_DWORD *)(a1 + 8) |= a3 & a2;
  return v6;
}

uint64_t sub_22269EDBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8) &= ~a2;
  return result;
}

uint64_t sub_22269EDCC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v4 - 24)) = a2[3];
  sub_22269EE94(a1 + 1);

  return MEMORY[0x270F98770](a1, a2 + 1);
}

uint64_t sub_22269EE98(uint64_t a1)
{
  *(void *)a1 = MEMORY[0x263F8C318] + 16;
  std::string::~string((std::string *)(a1 + 64));

  return MEMORY[0x270F988B0](a1);
}

__n128 sub_22269EEEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, __n128 *a5)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(_DWORD *)(a1 + 16) = a4;
  __n128 result = *a5;
  *(__n128 *)(a1 + 24) = *a5;
  return result;
}

uint64_t sub_22269EF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  uint64_t v6 = (unsigned __int16 *)(a1 + 8);
  sub_222673134((_WORD *)(a1 + 8));
  sub_222673134((_WORD *)(a1 + 12));
  sub_2225F3278((_DWORD *)(a1 + 16));
  sub_2225F3278((_DWORD *)(a1 + 20));
  sub_22268A5E0(a3);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 440);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 444);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 448);
  sub_222695A64(a2, a3, v6, (unsigned int *)(a2 + 444), (unsigned int *)(a2 + 448));
  if (sub_222655200(v6))
  {
    char v7 = sub_222655224(v6);
    sub_222689658((_WORD *)(a2 + 440), v7);
  }
  if (sub_222655230(v6))
  {
    char v8 = sub_22265523C(v6);
    sub_222689670((_WORD *)(a2 + 440), v8);
  }
  return a1;
}

uint64_t *sub_22269EFE0(uint64_t *result)
{
  *(_WORD *)(*result + 440) = *((_WORD *)result + 6);
  uint64_t v1 = *result;
  *(_DWORD *)(v1 + 444) = *((_DWORD *)result + 4);
  *(_DWORD *)(v1 + 448) = *((_DWORD *)result + 5);
  return result;
}

uint64_t sub_22269F004(uint64_t result, int a2, char a3)
{
  *(void *)__n128 result = 0;
  *(_DWORD *)(result + 8) = a2;
  *(unsigned char *)(result + 12) = a3;
  return result;
}

uint64_t *sub_22269F014(uint64_t *a1, int a2, int a3, uint64_t a4)
{
  char v8 = sub_2225D3A34(a1);
  *((_DWORD *)v8 + 2) = a2;
  *((_DWORD *)v8 + 3) = a3;
  sub_222699A3C(v8, 1u);
  sub_22260A0B8(a1, a4);
  return a1;
}

uint64_t sub_22269F068(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_22269F0B8(v4);
  }
}

void *sub_22269F0B8(void *a1)
{
  __n128 result = sub_22269F1B8(a1);
  *__n128 result = MEMORY[0x263F8C368] + 16;
  return result;
}

uint64_t *sub_22269F0EC(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v4 - 24)) = a2[1];
  sub_22269F1D8((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), a3);
  return a1;
}

void *sub_22269F1B8(void *result)
{
  *__n128 result = MEMORY[0x263F8C360] + 16;
  return result;
}

uint64_t sub_22269F1D8(std::ios_base *a1, void *a2)
{
  std::ios_base::init(a1, a2);
  a1[1].__vftable = 0;
  uint64_t result = sub_2225F5140();
  a1[1].__fmtflags_ = result;
  return result;
}

uint64_t sub_22269F208(uint64_t a1, int a2)
{
  uint64_t v4 = (void *)std::streambuf::basic_streambuf();
  *uint64_t v4 = MEMORY[0x263F8C318] + 16;
  sub_2225CAD04(v4 + 8);
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 96) = a2;
  return a1;
}

uint64_t sub_22269F25C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2;
  return v2;
}

uint64_t sub_22269F26C(int a1)
{
  if ((a1 - 27) > 0x2F) {
    return 0;
  }
  else {
    return dword_2226D1320[(__int16)(a1 - 27)];
  }
}

uint64_t sub_22269F294(__int16 a1)
{
  return dword_2226D13E0[a1 - 27];
}

uint64_t sub_22269F2A8(__int16 a1)
{
  return dword_2226D14A0[a1 - 32];
}

uint64_t sub_22269F2BC(int a1)
{
  if (a1 > 44)
  {
    switch(a1)
    {
      case '5':
        return 9;
      case '6':
      case '8':
      case '9':
      case ';':
      case '<':
      case '=':
        goto LABEL_15;
      case '7':
        return 11;
      case ':':
        return 8;
      case '>':
        return 4;
      default:
        if (a1 == 45) {
          return 6;
        }
        else {
          return 5;
        }
    }
  }
  int v2 = a1 - 29;
  uint64_t result = 1;
  switch(v2)
  {
    case 0:
      uint64_t result = 2;
      break;
    case 1:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
LABEL_15:
      __break(1u);
      JUMPOUT(0x22269F378);
    case 2:
      uint64_t result = 7;
      break;
    case 5:
      return result;
    case 9:
      uint64_t result = 10;
      break;
    default:
      uint64_t result = 3;
      break;
  }
  return result;
}

unsigned int *sub_22269F3C8(uint64_t a1)
{
  uint64_t result = sub_22269F418(a1);
  if (result)
  {
    return (unsigned int *)sub_22269F468(a1, result, 1);
  }
  return result;
}

unsigned int *sub_22269F418(uint64_t a1)
{
  uint64_t result = sub_22269F60C(a1);
  if (result)
  {
    return (unsigned int *)sub_22269F468(a1, result, 2);
  }
  return result;
}

uint64_t sub_22269F468(uint64_t a1, unsigned int *a2, int a3)
{
  uint64_t v6 = a1 + 32;
  int v7 = sub_22261BFB4(a1 + 32);
  if (a2)
  {
    unsigned int v8 = sub_22269F26C(v7);
    while ((int)v8 >= a3)
    {
      long long v28 = *(_OWORD *)v6;
      uint64_t v29 = *(void *)(v6 + 16);
      sub_22269A3C0(a1);
      if (v8 == 3)
      {
        long long v26 = v28;
        uint64_t v27 = v29;
        a2 = sub_22269FC40(a1, a2, (unsigned int *)&v26);
        int v9 = sub_22261BFB4(v6);
        unsigned int v10 = sub_22269F26C(v9);
      }
      else
      {
        int v11 = sub_22269F60C(a1);
        if (!v11) {
          return 0;
        }
        unint64_t v12 = (unint64_t)v11;
        int v13 = sub_22261BFB4(v6);
        unsigned int v14 = sub_22269F26C(v13);
        BOOL v16 = v8 != 2 || v14 != 2;
        if (v8 < v14 || !v16)
        {
          if (v8 == 2) {
            uint64_t v17 = 2;
          }
          else {
            uint64_t v17 = v8 + 1;
          }
          uint64_t v18 = sub_22269F468(a1, v12, v17);
          if (!v18) {
            return 0;
          }
          unint64_t v12 = v18;
          int v19 = sub_22261BFB4(v6);
          unsigned int v14 = sub_22269F26C(v19);
        }
        unsigned int v10 = v14;
        uint64_t v20 = *(uint64_t **)(a1 + 8);
        unsigned int v21 = sub_2225C3B40((unsigned int *)&v28);
        int v22 = sub_22261BFB4((uint64_t)&v28);
        if (v8 == 2)
        {
          int v24 = sub_22269F2BC(v22);
          return sub_22268EF74(v20, v21, v24, (uint64_t)a2, v12);
        }
        int v23 = sub_22269F294(v22);
        a2 = sub_22268EB50(v20, v21, v23, (unint64_t)a2, v12);
      }
      unsigned int v8 = v10;
      if (!a2) {
        return (uint64_t)a2;
      }
    }
  }
  return (uint64_t)a2;
}

unsigned int *sub_22269F60C(uint64_t a1)
{
  int v2 = (unsigned int *)(a1 + 32);
  int v3 = sub_2225C3B40((unsigned int *)(a1 + 32));
  sub_22269998C((uint64_t)v48, v3);
  if (sub_22261CB34((uint64_t)v2, 6) && (sub_22269A2B0(a1, v48, 0) & 1) == 0)
  {
    if (!sub_22261CB34((uint64_t)v2, 21))
    {
      unint64_t v12 = *(uint64_t **)(a1 + 8);
      sub_2225C3D00((int)v46, &byte_2226D1615);
      uint64_t v13 = sub_222694358(v12, v48, v46[0], v46[1]);
      int v14 = sub_2225C3B40((unsigned int *)v48);
      uint64_t v15 = (unsigned int *)sub_22269FE68(a1, v13, v14);
      uint64_t v16 = a1;
      return sub_22269FF58(v16, v15);
    }
    sub_22269A258(a1, v2, 993, (uint64_t)v47);
    int v11 = (uint64_t *)v47;
    goto LABEL_39;
  }
  int v4 = sub_22261BFB4((uint64_t)v2);
  if (v4 > 98)
  {
    if (v4 > 130)
    {
      if (v4 == 131 || v4 == 145)
      {
        int v19 = sub_22261BFB4((uint64_t)v2);
        uint64_t v20 = *(uint64_t **)(a1 + 8);
        int v21 = sub_22269A3C0(a1);
        uint64_t v10 = (uint64_t)sub_22268D974(v20, v19, v21);
        goto LABEL_31;
      }
      if (v4 == 361)
      {
LABEL_16:
        sub_22269A258(a1, v2, 976, (uint64_t)v42);
        int v11 = (uint64_t *)v42;
LABEL_39:
        sub_2225F37F0(v11);
        return 0;
      }
LABEL_41:
      sub_22269A258(a1, v2, 976, (uint64_t)v45);
      int v11 = (uint64_t *)v45;
      goto LABEL_39;
    }
    if (v4 == 99)
    {
      sub_22269A258(a1, v2, 1040, (uint64_t)&v43);
      uint64_t v18 = "'sizeof'";
LABEL_37:
      uint64_t v17 = &v43;
    }
    else
    {
      if (v4 != 105) {
        goto LABEL_41;
      }
      sub_22269A258(a1, v2, 1039, (uint64_t)&v43);
      uint64_t v17 = sub_22260A5E8(&v43, (uint64_t)"'unsigned'");
      uint64_t v18 = "'uint'";
    }
    sub_22260A5E8(v17, (uint64_t)v18);
    int v11 = &v43;
    goto LABEL_39;
  }
  if (v4 > 0x3D) {
    goto LABEL_25;
  }
  if (((1 << v4) & 0x1AB00000000) != 0)
  {
    __int16 v5 = sub_22261BFB4((uint64_t)v2);
    unsigned int v6 = sub_22269A3C0(a1);
    int v7 = (unsigned int *)sub_22269F60C(a1);
    if (v7)
    {
      unsigned int v8 = *(uint64_t **)(a1 + 8);
      int v9 = sub_22269F2A8(v5);
      uint64_t v10 = sub_22268E0A0(v8, v6, v9, (uint64_t)v7, 0);
LABEL_31:
      int v7 = (unsigned int *)v10;
    }
LABEL_32:
    uint64_t v16 = a1;
    uint64_t v15 = v7;
    return sub_22269FF58(v16, v15);
  }
  if (((1 << v4) & 0x2000000000100000) != 0) {
    goto LABEL_16;
  }
  if (v4 != 21)
  {
LABEL_25:
    switch(v4)
    {
      case 6:
        unsigned int v22 = sub_2225C3B40(v2);
        uint64_t v23 = sub_22261AF2C((uint64_t)v2);
        sub_22269A19C(a1, 6);
        if (sub_22261CB34((uint64_t)v2, 21) && sub_22261CB34((uint64_t)v2, 19))
        {
          uint64_t result = sub_22268D658(*(uint64_t **)(a1 + 8), v22, v23);
          int v7 = result;
          if (result) {
            goto LABEL_32;
          }
          return result;
        }
        if (sub_22261BABC((uint64_t)v2, 21))
        {
          sub_22268AA10(&v41, 1, 1, 1);
          uint64_t v43 = sub_222691890(*(uint64_t **)(a1 + 8), v23, v22, &v41);
          uint64_t v44 = v25;
          switch(sub_2225C3B40((unsigned int *)&v43))
          {
            case 0u:
            case 1u:
              uint64_t v26 = a1;
              uint64_t v27 = v2;
              int v28 = 1185;
              goto LABEL_47;
            case 2u:
              uint64_t v32 = sub_22269E878((uint64_t)&v43);
              goto LABEL_60;
            case 3u:
              sub_22269A258(a1, v2, 982, (uint64_t)v39);
              uint64_t v30 = (uint64_t *)v39;
              goto LABEL_48;
            case 4u:
              uint64_t v33 = sub_2225C3D04((uint64_t)&v43);
              uint64_t v34 = (uint64_t)sub_2226A02A4(a1, v33, v22);
              goto LABEL_61;
            case 5u:
              unsigned int v35 = sub_22268AA94((uint64_t)&v43);
              uint64_t v34 = sub_2226A038C(a1, v35, v22);
              goto LABEL_61;
            default:
              goto LABEL_51;
          }
        }
        sub_22268AA10(&v41, 1, 1, 0);
        uint64_t v43 = sub_222691890(*(uint64_t **)(a1 + 8), v23, v22, &v41);
        uint64_t v44 = v29;
        switch(sub_2225C3B40((unsigned int *)&v43))
        {
          case 0u:
          case 1u:
          case 4u:
            uint64_t v26 = a1;
            uint64_t v27 = v2;
            int v28 = 1186;
LABEL_47:
            sub_22269A258(v26, v27, v28, (uint64_t)v40);
            sub_222635F48(v40, v23);
            uint64_t v30 = v40;
LABEL_48:
            sub_2225F37F0(v30);
            int v31 = 1;
            sub_2226A3150(a1, 61, 1, 1);
            int v7 = 0;
            break;
          case 2u:
            sub_2226999F4(v40);
            if (sub_22269B1F0(a1, v40))
            {
              int v7 = 0;
              goto LABEL_58;
            }
            uint64_t v36 = *(uint64_t **)(a1 + 8);
            uint64_t v37 = sub_22269E878((uint64_t)&v43);
            sub_2225C3D00((int)v38, &byte_2226D1615);
            uint64_t v32 = sub_222694014(v36, v40, v37, v38[0], v38[1]);
LABEL_60:
            uint64_t v34 = sub_22269FE68(a1, v32, v22);
LABEL_61:
            int v7 = (unsigned int *)v34;
            goto LABEL_62;
          case 3u:
          case 5u:
            int v7 = sub_22268D658(*(uint64_t **)(a1 + 8), v22, v23);
            if (v7) {
              goto LABEL_62;
            }
LABEL_58:
            int v31 = 1;
            break;
          default:
LABEL_51:
            int v7 = 0;
LABEL_62:
            int v31 = 2;
            break;
        }
        if (v31 == 2) {
          goto LABEL_32;
        }
        break;
      case 8:
        uint64_t v10 = (uint64_t)sub_2226A04B4(a1);
        goto LABEL_31;
      case 9:
        sub_22269A258(a1, v2, 1040, (uint64_t)&v43);
        uint64_t v18 = "char constants";
        goto LABEL_37;
      case 13:
        sub_22269A258(a1, v2, 1040, (uint64_t)&v43);
        uint64_t v18 = "string literals";
        goto LABEL_37;
      default:
        goto LABEL_41;
    }
    return 0;
  }
  sub_2225F3278(&v43);
  sub_2226A97EC((_DWORD *)a1, 0x15u, &v43);
  int v7 = (unsigned int *)sub_22269F3C8(a1);
  sub_2225F3278(v40);
  if (!sub_22269AFB8((_DWORD *)a1, 0x16u, v43, v40)) {
    goto LABEL_32;
  }
  return 0;
}

_DWORD *sub_22269FC40(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t result = (_DWORD *)sub_22269F3C8(a1);
  if (result)
  {
    uint64_t v7 = (uint64_t)result;
    sub_2225F3278(&v24);
    if (sub_22261BABC(a1 + 32, 60))
    {
      unsigned int v8 = sub_22269A3C0(a1);
    }
    else
    {
      int v23 = sub_2225C3B40((unsigned int *)(a1 + 32));
      uint64_t v9 = sub_2225E8DD0(*(void *)a1);
      if ((sub_2225F7FD8(&v23) || sub_22269FE50(*(void *)a1, v23, (unsigned int *)&v23))
        && (LOBYTE(v21[0]) = 0, v10 = sub_22260C644(&v23, -1), int v11 = sub_22260CE08(v9, v10, v21), !LOBYTE(v21[0]))
        && *v11 == 32
        && (int v12 = sub_22260C644(&v23, -2), v13 = sub_22260CE08(v9, v12, v21), !LOBYTE(v21[0]))
        && *v13 == 32)
      {
        int v23 = sub_22260C644(&v23, -1);
        int v14 = ":";
      }
      else
      {
        int v14 = ": ";
      }
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 8, (uint64_t)v22);
      uint64_t v15 = sub_222635F18(v22, 0x3Cu);
      int v16 = v23;
      sub_2225C3D00((int)v20, v14);
      sub_22261E3FC(v16, v20[0], v20[1], 0, (uint64_t)v21);
      sub_22261E3BC((uint64_t)v15, (uint64_t)v21);
      sub_2225F4E0C(v21);
      sub_2225F37F0(v22);
      sub_22269A258(a1, a3, 50, (uint64_t)v21);
      sub_22260A5E8(v21, (uint64_t)"?");
      sub_2225F37F0(v21);
      unsigned int v8 = sub_2225C3B40((unsigned int *)(a1 + 32));
    }
    unsigned int v24 = v8;
    uint64_t result = (_DWORD *)sub_22269F418(a1);
    if (result)
    {
      uint64_t v17 = (uint64_t)result;
      uint64_t v18 = *(uint64_t **)(a1 + 8);
      int v19 = sub_2225C3B40(a3);
      return sub_22268EDB8(v18, v19, v24, a2, v7, v17);
    }
  }
  return result;
}

uint64_t sub_22269FE50(uint64_t a1, int a2, unsigned int *a3)
{
  return sub_22261C350(a2, *(_DWORD **)(a1 + 48), *(void *)(a1 + 24), a3);
}

uint64_t sub_22269FE68(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  sub_2225D3DAC(v14);
  sub_2225DC810(v13);
  sub_2225F3278(&v12);
  sub_2225F3278(&v11);
  if (sub_2226A0928((_DWORD *)a1, (uint64_t)v14, (uint64_t)v13, &v12, &v11))
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v7 = *(uint64_t **)(a1 + 8);
    unsigned int v8 = v12;
    sub_2226A09E4(v10, v14);
    uint64_t v6 = sub_22269781C(v7, a2, a3, v8, v10[0], v10[1], v11);
  }
  sub_2225C56C4(v13);
  sub_2225C56C4(v14);
  return v6;
}

unsigned int *sub_22269FF58(uint64_t a1, unsigned int *a2)
{
  int v2 = a2;
  if (a2)
  {
    int v4 = (unsigned int *)(a1 + 32);
    HIDWORD(v5) = sub_22261BFB4(a1 + 32) - 19;
    LODWORD(v5) = HIDWORD(v5);
    switch((v5 >> 1))
    {
      case 0u:
        unsigned int v11 = sub_2226A07E0(a1);
        sub_2225F3278(v34);
        uint64_t v12 = sub_22269F3C8(a1);
        if (v12 && (uint64_t v13 = (unsigned int *)v12, sub_22261BABC((uint64_t)v4, 20)))
        {
          LODWORD(v34[0]) = sub_2225C3B40(v4);
          uint64_t v10 = (uint64_t)sub_22268E764(*(uint64_t **)(a1 + 8), (uint64_t)v2, v11, v13, v34[0]);
        }
        else
        {
          uint64_t v10 = 0;
        }
        sub_22269AFB8((_DWORD *)a1, 0x14u, v11, v34);
        goto LABEL_20;
      case 3u:
        unsigned int v14 = sub_22269A19C(a1, 25);
        if (sub_22261BABC((uint64_t)v4, 3))
        {
          v34[0] = sub_222659834((uint64_t)v2);
          uint64_t v15 = sub_2225C3C70((uint64_t)v34);
          uint64_t v16 = sub_222654B7C(v15);
          if (v16)
          {
            unsigned int v17 = sub_222654EC8(v16);
            uint64_t v18 = sub_2225CED2C(*(void *)(a1 + 8));
            sub_2226A0564(v17, v18, (uint64_t *)(a1 + 80));
          }
          else
          {
            v34[0] = sub_222659834((uint64_t)v2);
            uint64_t v24 = sub_2225C3C70((uint64_t)v34);
            uint64_t v25 = sub_222655268(v24);
            if (v25)
            {
              uint64_t v26 = sub_2225C3D04(v25);
              uint64_t v27 = sub_22268E3F8(v26 + 16);
              uint64_t v29 = v28;
              uint64_t v30 = sub_2225CED2C(*(void *)(a1 + 8));
              sub_2226A0714(v27, v29, v30, (uint64_t *)(a1 + 80));
            }
          }
          sub_22269A3C0(a1);
          goto LABEL_19;
        }
        if (!sub_22261BABC((uint64_t)v4, 6)) {
          goto LABEL_19;
        }
        uint64_t v19 = sub_22261AF2C((uint64_t)v4);
        int v20 = sub_22269A3C0(a1);
        uint64_t v21 = sub_2225F2418(v19);
        uint64_t v23 = v22;
        sub_2225C3D00((int)v35, "length");
        if (sub_2225CD4BC(v21, v23, v35[0], (size_t)v35[1]))
        {
          if (sub_22261CB34((uint64_t)v4, 21))
          {
            sub_22269A258(a1, v4, 8, (uint64_t)v34);
            sub_222635F18(v34, 0x15u);
            sub_2225F37F0(v34);
            sub_2226A3150(a1, 22, 0, 0);
LABEL_19:
            uint64_t v10 = 0;
            goto LABEL_20;
          }
          unsigned int v33 = sub_22269AD24(a1);
          sub_2225F3278(v34);
          if (sub_22269AFB8((_DWORD *)a1, 0x16u, v33, v34)) {
            goto LABEL_19;
          }
          uint64_t v32 = sub_22268E490(*(uint64_t **)(a1 + 8), (uint64_t)v2, v14, v34[0]);
        }
        else
        {
          uint64_t v32 = sub_22268E138(*(uint64_t **)(a1 + 8), v2, v14, v19, v20);
        }
        uint64_t v10 = (uint64_t)v32;
LABEL_20:
        int v2 = (unsigned int *)sub_22269FF58(a1, v10);
        break;
      case 7u:
      case 9u:
        uint64_t v6 = *(uint64_t **)(a1 + 8);
        unsigned int v7 = sub_2225C3B40(v4);
        __int16 v8 = sub_22261BFB4((uint64_t)v4);
        int v9 = sub_22269F2A8(v8);
        uint64_t v10 = sub_22268E0A0(v6, v7, v9, (uint64_t)v2, 1);
        sub_22269A3C0(a1);
        goto LABEL_20;
      default:
        return v2;
    }
  }
  return v2;
}

unsigned int *sub_2226A02A4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  sub_2225D3DAC(v13);
  sub_2225DC810(v12);
  sub_2225F3278(&v11);
  sub_2225F3278(&v10);
  if (sub_2226A0928((_DWORD *)a1, (uint64_t)v13, (uint64_t)v12, &v11, &v10))
  {
    uint64_t v6 = 0;
  }
  else
  {
    unsigned int v7 = *(uint64_t **)(a1 + 8);
    sub_2226A09E4(v9, v13);
    uint64_t v6 = sub_22268F0C0(v7, a3, a2, v9[0], v9[1], v10);
  }
  sub_2225C56C4(v12);
  sub_2225C56C4(v13);
  return v6;
}

uint64_t sub_2226A038C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  sub_2225D3DAC(v16);
  sub_2225DC810(v15);
  sub_2225F3278(&v14);
  sub_2225F3278(&v13);
  if (a2 != 76)
  {
    if (sub_2226A0928((_DWORD *)a1, (uint64_t)v16, (uint64_t)v15, &v14, &v13)) {
      goto LABEL_3;
    }
LABEL_5:
    __int16 v8 = *(uint64_t **)(a1 + 8);
    int v9 = v13;
    sub_2226A09E4(v11, v16);
    uint64_t v7 = sub_22268F940(v8, a3, v9, a2, v11[0], v11[1]);
    goto LABEL_6;
  }
  sub_222688AA0(v12, *(void *)(a1 + 8));
  BOOL v6 = sub_2226A0928((_DWORD *)a1, (uint64_t)v16, (uint64_t)v15, &v14, &v13);
  sub_222688AE4(v12);
  if (!v6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v7 = 0;
LABEL_6:
  sub_2225C56C4(v15);
  sub_2225C56C4(v16);
  return v7;
}

_DWORD *sub_2226A04B4(uint64_t a1)
{
  sub_2225CF794(v12);
  int v2 = sub_222613380(a1 + 32);
  sub_2225CF670(v12, v2 + 1);
  char v11 = 0;
  uint64_t v3 = sub_222648D5C(*(void *)a1, (unsigned int *)(a1 + 32), v12, &v11);
  if (v11)
  {
    unint64_t v5 = 0;
  }
  else
  {
    uint64_t v6 = v3;
    uint64_t v7 = v4;
    __int16 v8 = *(uint64_t **)(a1 + 8);
    unsigned int v9 = sub_22269A3C0(a1);
    unint64_t v5 = sub_22268DA04(v8, v6, v7, v9);
  }
  sub_2225CA520(v12);
  return v5;
}

uint64_t sub_2226A0564(unsigned int a1, uint64_t a2, uint64_t *a3)
{
  sub_2225CCC70(&v15);
  sub_2225CCC70(&v14);
  switch(a1)
  {
    case 2u:
      sub_2225C3D00((int)&v13, "xy");
      long long v15 = v13;
      uint64_t v6 = "rg";
      break;
    case 3u:
      sub_2225C3D00((int)&v13, "xyz");
      long long v15 = v13;
      uint64_t v6 = "rgb";
      break;
    case 4u:
      sub_2225C3D00((int)&v13, "xyzw");
      long long v15 = v13;
      uint64_t v6 = "rgba";
      break;
    default:
      sub_2225C3D00((int)&v13, "x");
      long long v15 = v13;
      uint64_t v6 = "r";
      break;
  }
  sub_2225C3D00((int)&v13, v6);
  long long v14 = v13;
  uint64_t v7 = 1;
  do
  {
    long long v8 = v15;
    sub_2225C3D00((int)v12, &byte_2226D1615);
    sub_2226A09E8(v8, *((uint64_t *)&v8 + 1), v7, v12[0], v12[1], a2, a3);
    long long v9 = v14;
    sub_2225C3D00((int)v11, &byte_2226D1615);
    sub_2226A09E8(v9, *((uint64_t *)&v9 + 1), v7, v11[0], v11[1], a2, a3);
    uint64_t v7 = (v7 + 1);
  }
  while (v7 <= a1);
  *(void *)&long long v13 = "length()";
  return sub_22268CDE0(a3, (uint64_t)&v13);
}

uint64_t sub_2226A0714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v17[0] = a1;
  v17[1] = a2;
  uint64_t v6 = (uint64_t *)sub_2225C3C70((uint64_t)v17);
  uint64_t result = sub_2225DC1A0(v17);
  if (v6 != (uint64_t *)result)
  {
    long long v8 = (uint64_t *)result;
    do
    {
      uint64_t v9 = *v6;
      int v10 = (uint64_t *)sub_222653754(*v6);
      uint64_t result = sub_222653758(v9);
      for (i = (uint64_t *)result; v10 != i; uint64_t result = sub_22268CDE0(a4, (uint64_t)&v15))
      {
        uint64_t v12 = *v10++;
        uint64_t v13 = sub_222654540(v12);
        sub_2226A0AEC(&v16, a3, v13, v14);
        long long v15 = sub_2226A0AF0(&v16);
      }
      ++v6;
    }
    while (v6 != v8);
  }
  return result;
}

uint64_t sub_2226A07E0(uint64_t a1)
{
  int v2 = (unsigned int *)(a1 + 32);
  if (sub_22261BABC(a1 + 32, 19))
  {
    int v3 = 1;
LABEL_5:
    *(_DWORD *)(a1 + 64) += v3;
    goto LABEL_6;
  }
  if (*(_DWORD *)(a1 + 60))
  {
    int v3 = -1;
    goto LABEL_5;
  }
LABEL_6:
  *(_DWORD *)(a1 + 56) = sub_2225C3B40(v2);
  sub_222649758(*(void *)a1, v2);
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_2226A0850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1 + 32;
  while (1)
  {
    uint64_t v12 = 0;
    uint64_t v12 = sub_22269F418(a1);
    if (sub_2226A0920(*(void *)(a1 + 8)))
    {
      uint64_t v7 = sub_2226A0920(*(void *)(a1 + 8));
      BOOL v8 = sub_222688A48(v7) == 256;
    }
    else
    {
      BOOL v8 = 0;
    }
    int v9 = v12 || v8;
    if (v9 != 1) {
      break;
    }
    sub_2225CC7B8(a2, &v12);
    if (sub_22261CB34(v6, 64)) {
      break;
    }
    int v11 = sub_22269A19C(a1, 64);
    sub_2225CC08C(a3, &v11);
  }
  return v9 ^ 1u;
}

uint64_t sub_2226A0920(uint64_t a1)
{
  return *(void *)(a1 + 184);
}

BOOL sub_2226A0928(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned int *a4, _DWORD *a5)
{
  sub_2226A97EC(a1, 0x15u, a4);
  if (sub_22261CB34((uint64_t)(a1 + 8), 22) && sub_2226A0850((uint64_t)a1, a2, a3))
  {
    sub_2226A3150((uint64_t)a1, 22, 1, 0);
    return 1;
  }
  else
  {
    unsigned int v11 = *a4;
    return sub_22269AFB8(a1, 0x16u, v11, a5);
  }
}

uint64_t sub_2226A09E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  if (sub_2225C3D04((uint64_t)&v20) >= (unint64_t)a3)
  {
    sub_2226A0AEC(v18, a6, v20, v21);
    uint64_t v19 = sub_2226A0AF0(v18);
    return sub_22268CDE0(a7, (uint64_t)&v19);
  }
  else
  {
    int v10 = (char *)sub_2225C3C70((uint64_t)&v22);
    uint64_t result = sub_2225C3C78(&v22);
    if (v10 != (char *)result)
    {
      uint64_t v12 = (char *)result;
      do
      {
        char v13 = *v10++;
        sub_2226A0B40(v18, v20, v21);
        sub_2226186D4((uint64_t)v18, v13);
        uint64_t v14 = v22;
        uint64_t v15 = v23;
        uint64_t v16 = sub_2225CE27C((uint64_t)v18);
        sub_2226A09E8(v14, v15, a3, v16, v17, a6, a7);
        uint64_t result = sub_2225CA520(v18);
      }
      while (v10 != v12);
    }
  }
  return result;
}

char *sub_2226A0AF0(void *a1)
{
  if (sub_222609A70(a1)) {
    return &byte_2226D1615;
  }

  return (char *)sub_222655038(a1);
}

uint64_t *sub_2226A0B44(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v15[0] = a3;
  v15[1] = a4;
  *a1 = 0;
  sub_2225C3D00((int)v14, &byte_2226D1615);
  if (!sub_2225CD4BC(a3, a4, v14[0], (size_t)v14[1]))
  {
    int v8 = sub_2225C3D04((uint64_t)v15);
    *a1 = sub_2225CC520(a2, (v8 + 5), 4uLL);
    *(_DWORD *)*a1 = sub_2225C3D04((uint64_t)v15);
    int v9 = (void *)sub_222655074(a1);
    int v10 = (const void *)sub_2225C3C70((uint64_t)v15);
    size_t v11 = sub_2225C3D04((uint64_t)v15);
    memcpy(v9, v10, v11);
    uint64_t v12 = sub_222655074(a1);
    *(unsigned char *)(v12 + sub_2225C3D04((uint64_t)v15)) = 0;
  }
  return a1;
}

uint64_t sub_2226A0C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v4 = (char *)sub_2225C3C70((uint64_t)v7);
  unint64_t v5 = (char *)sub_2225C3C78(v7);
  return sub_2226A0C74(a1, v4, v5);
}

uint64_t sub_2226A0C74(uint64_t a1, char *a2, char *a3)
{
  uint64_t v6 = (const void **)sub_2225C69CC();
  sub_2225C5A88(v6, a2, a3);
  return a1;
}

uint64_t sub_2226A0CBC(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  long long v13 = *a4;
  uint64_t v14 = *((void *)a4 + 2);
  sub_222648740(v15);
  int v5 = sub_2225C3B40((unsigned int *)&v13);
  sub_2226A0E28(521, v5, v12);
  sub_22260BC64((uint64_t)v15, (uint64_t)v12);
  while (sub_22261CB34((uint64_t)&v13, 2))
  {
    sub_22260BC64((uint64_t)v15, (uint64_t)&v13);
    sub_222635CA4(a2, (uint64_t)&v13);
  }
  int v6 = sub_2225C3B40((unsigned int *)&v13);
  sub_2226A0E28(522, v6, v12);
  sub_22260BC64((uint64_t)v15, (uint64_t)v12);
  unsigned int v7 = sub_222609DE8((uint64_t)v15);
  v12[0] = sub_2226A0E8C(v7, a2);
  v12[1] = v8;
  sub_2225C3C70((uint64_t)v15);
  sub_2225C3D04((uint64_t)v15);
  sub_2225CC180((uint64_t)v12);
  sub_222625C6C();
  uint64_t v9 = sub_2225CC180((uint64_t)v12);
  unint64_t v10 = sub_222609DE8((uint64_t)v15);
  sub_22263F714(a2, v9, v10, 1, 0);
  return sub_2225C56C4(v15);
}

_DWORD *sub_2226A0E28@<X0>(__int16 a1@<W0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  sub_22261B6AC(a3);
  sub_22261FB44((uint64_t)a3);
  sub_22261F2AC((uint64_t)a3, a1);

  return sub_2225D0A60(a3, a2);
}

uint64_t sub_2226A0E8C(unsigned int a1, uint64_t a2)
{
  int v3 = (uint64_t *)sub_2226A19D0(a2);
  unsigned int v4 = sub_2225E58B4();
  uint64_t v5 = sub_2225CC520(v3, 24 * a1, v4);
  sub_2226A19D8(&v7, v5, a1);
  return v7;
}

uint64_t sub_2226A0F00(uint64_t *a1)
{
  uint64_t v1 = *a1;
  int v2 = (void *)sub_2225C26A4(32);
  sub_2226A0F48(v2);

  return sub_222648030(v1, (uint64_t)v2);
}

uint64_t sub_2226A0F4C(uint64_t a1)
{
  sub_2226A12FC((uint64_t)v24, a1);
  sub_22269A19C(a1, 521);
  v22[1] = a1;
  uint64_t v23 = a1;
  v21[1] = a1;
  v22[0] = a1;
  v21[0] = a1;
  uint64_t v2 = sub_22261AF2C(a1 + 32);
  if (!v2)
  {
    sub_2225C3D00((int)v20, "pragma");
    uint64_t v12 = v20[0];
    uint64_t v13 = v20[1];
    goto LABEL_10;
  }
  uint64_t v3 = v2;
  if (!sub_2226A1378(v2, "optimize") && !sub_2226A13C8(v3, (uint64_t)"debug"))
  {
    if (!sub_2226A13C8(v3, (uint64_t)"STDGL"))
    {
      sub_22269A258(a1, (unsigned int *)(a1 + 32), 875, (uint64_t)v19);
      sub_222635F48(v19, v3);
      goto LABEL_19;
    }
    sub_22269A19C(a1, 6);
    if (sub_22261CB34(a1 + 32, 361))
    {
      unsigned int v14 = 361;
LABEL_22:
      sub_2226A1424(v22, v14);
      goto LABEL_23;
    }
    sub_22269A19C(a1, 361);
    if (sub_22261CB34(a1 + 32, 21))
    {
LABEL_21:
      unsigned int v14 = 21;
      goto LABEL_22;
    }
    sub_22269A3C0(a1);
    if (sub_22261CB34(a1 + 32, 6))
    {
      unsigned int v14 = 6;
      goto LABEL_22;
    }
    uint64_t v17 = sub_22261AF2C(a1 + 32);
    if (sub_222647FD4(v17, (unsigned __int16 *)"all"))
    {
      sub_22269A19C(a1, 6);
      if (sub_22261CB34(a1 + 32, 22))
      {
        unsigned int v14 = 22;
      }
      else
      {
        sub_22269A3C0(a1);
        if (!sub_22261CB34(a1 + 32, 522))
        {
          sub_22269A19C(a1, 522);
          sub_2226A14D8(*(void *)(a1 + 8), 1);
          goto LABEL_23;
        }
        unsigned int v14 = 2;
      }
      goto LABEL_22;
    }
    sub_2225C3D00((int)v18, "all");
    uint64_t v12 = v18[0];
    uint64_t v13 = v18[1];
LABEL_10:
    sub_2226A1300(v21, v12, v13);
    goto LABEL_23;
  }
  BOOL v4 = sub_2226A1378(v3, "optimize");
  unsigned int v5 = sub_22269A19C(a1, 6);
  if (!sub_22261BABC(a1 + 32, 21)) {
    goto LABEL_21;
  }
  unsigned int v6 = sub_22269A3C0(a1);
  uint64_t v7 = sub_22261AF2C(a1 + 32);
  if (!v7 || (uint64_t v8 = v7, sub_22261CB34(a1 + 32, 6)))
  {
    uint64_t v9 = a1;
    unint64_t v10 = (unsigned int *)(a1 + 32);
    int v11 = 639;
LABEL_8:
    sub_22269A258(v9, v10, v11, (uint64_t)v19);
    sub_2226256C4(v19, !v4);
LABEL_19:
    sub_2225F37F0(v19);
    sub_2226A1494(&v23);
    goto LABEL_23;
  }
  if (!sub_222647F84(v8, (unsigned __int16 *)"on") && !sub_222647FD4(v8, (unsigned __int16 *)"off")) {
    goto LABEL_25;
  }
  sub_222647F84(v8, (unsigned __int16 *)"on");
  sub_22269A19C(a1, 6);
  if (sub_22261CB34(a1 + 32, 22))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 8, (uint64_t)v19);
    sub_222635F18(v19, 0x16u);
    sub_2225F37F0(v19);
    sub_2226A32DC(a1, v6, 50, (uint64_t)v19);
    sub_222635F18(v19, 0x15u);
    goto LABEL_19;
  }
  sub_22269A3C0(a1);
  if (sub_22261CB34(a1 + 32, 522))
  {
LABEL_25:
    uint64_t v9 = a1;
    unint64_t v10 = (unsigned int *)(a1 + 32);
    int v11 = 640;
    goto LABEL_8;
  }
  sub_22269A19C(a1, 522);
  uint64_t v16 = *(void *)(a1 + 8);
  if (v4) {
    sub_222691E8C(v16, v5);
  }
  else {
    sub_222691EEC(v16, v5);
  }
LABEL_23:
  sub_2226A14E0(v24);
  return 0;
}

uint64_t sub_2226A1300(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = a1 + 1;
  uint64_t v6 = *a1;
  uint64_t v7 = (unsigned int *)sub_222643C2C(*a1);
  sub_22269A258(v6, v7, 8, (uint64_t)v9);
  sub_2225F3774(v9, a2, a3);
  sub_2225F37F0(v9);
  return sub_2226A1494(v5);
}

BOOL sub_2226A1378(uint64_t a1, void *a2)
{
  return sub_2225F2DD0(a1) == 8 && *(void *)sub_2225F2DB8(a1) == *a2;
}

BOOL sub_2226A13C8(uint64_t a1, uint64_t a2)
{
  if (sub_2225F2DD0(a1) != 5) {
    return 0;
  }
  uint64_t v4 = sub_2225F2DB8(a1);
  return *(_DWORD *)v4 == *(_DWORD *)a2 && *(unsigned __int8 *)(v4 + 4) == *(unsigned __int8 *)(a2 + 4);
}

uint64_t sub_2226A1424(uint64_t *a1, unsigned int a2)
{
  uint64_t v3 = a1 + 1;
  uint64_t v4 = *a1;
  unsigned int v5 = (unsigned int *)sub_222643C2C(*a1);
  sub_22269A258(v4, v5, 8, (uint64_t)v7);
  sub_222635F18(v7, a2);
  sub_2225F37F0(v7);
  return sub_2226A1494(v3);
}

uint64_t sub_2226A1494(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_2226A1A28(*a1, 522);

  return sub_22269A19C(v1, 522);
}

uint64_t sub_2226A14D8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 216) = a2;
  return result;
}

_WORD *sub_2226A14E4(uint64_t a1)
{
  sub_22269A19C(a1, 523);
  unsigned int v2 = sub_2225C3B40((unsigned int *)(a1 + 32));
  uint64_t v9 = a1;
  unsigned int v3 = sub_2225C3D04(a1 + 32);
  BOOL v4 = sub_222651028(v3);
  if (v4)
  {
    int v5 = v4;
    sub_22269A19C(a1, 8);
    sub_2226A1614(*(void *)(a1 + 16), v5);
    sub_22269A19C(a1, 2);
    uint64_t v6 = *(uint64_t **)(a1 + 8);
    return sub_222691F4C(v6, v5, v2);
  }
  else
  {
    sub_2226A32DC(a1, v2, 432, (uint64_t)v8);
    sub_2226256C4(v8, v3);
    sub_2225F37F0(v8);
    sub_2226A15D0(&v9);
    return 0;
  }
}

uint64_t sub_2226A15D0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_2226A1A28(*a1, 2);

  return sub_22269A19C(v1, 2);
}

uint64_t sub_2226A1614(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 0xE0 | a2 & 0x1F;
  return result;
}

unsigned int *sub_2226A1624(uint64_t a1)
{
  uint64_t v26 = a1;
  sub_22269A19C(a1, 524);
  unsigned int v2 = sub_2225C3B40((unsigned int *)(a1 + 32));
  uint64_t v3 = sub_22261AF2C(a1 + 32);
  uint64_t v4 = sub_2225F2418(v3);
  uint64_t v6 = v5;
  sub_2226A2FCC((_DWORD *)a1, 6, 8, (uint64_t)"extension name", 0);
  uint64_t v7 = sub_22261AF2C(a1 + 32);
  uint64_t v8 = sub_2225F2418(v7);
  uint64_t v10 = v9;
  sub_2226A2FCC((_DWORD *)a1, 6, 8, (uint64_t)"extension behavior", 0);
  unsigned int v11 = sub_2226A1868(v8, v10);
  if (!v11)
  {
    sub_2226A32DC(a1, v2, 430, (uint64_t)v25);
    uint64_t v15 = v8;
    uint64_t v16 = v10;
LABEL_8:
    sub_2225F3774((uint64_t *)v25, v15, v16);
    goto LABEL_9;
  }
  unsigned int v12 = v11;
  uint64_t v13 = (unsigned __int8 *)sub_22264D974(*(void *)(a1 + 16), v4, v6);
  if (!sub_2226376DC(v13))
  {
    sub_2226A32DC(a1, v2, 429, (uint64_t)v25);
    uint64_t v15 = v4;
    uint64_t v16 = v6;
    goto LABEL_8;
  }
  int v14 = sub_2226376DC(v13);
  if (v12 <= 2 && v14 == 178)
  {
    sub_2226A32DC(a1, v2, 426, (uint64_t)v25);
    sub_222622304((uint64_t *)v25, v12 != 1);
LABEL_9:
    sub_2225F37F0(v25);
    sub_2226A15D0(&v26);
    return 0;
  }
  if (sub_2226376DC(v13) == 180)
  {
    v25[0] = (uint64_t *)a1;
    sub_2225C3D00((int)v24, "centroid");
    sub_2226A1904(v25, 302, v24[0], v24[1]);
    sub_2225C3D00((int)v23, "smooth");
    sub_2226A1904(v25, 423, v23[0], v23[1]);
    uint64_t v18 = *(void *)a1;
    sub_2225C3D00((int)v22, "fwidth");
    uint64_t v19 = (unsigned int *)sub_222635F10(v18, v22[0], v22[1]);
    sub_2225F2F3C(v19, 0);
  }
  sub_2226A198C(v13, v12);
  sub_22269A19C(a1, 2);
  uint64_t v20 = *(uint64_t **)(a1 + 8);
  unsigned int v21 = sub_2226376DC(v13);
  return sub_22269206C(v20, v21, v12, v2);
}

uint64_t sub_2226A1868(uint64_t a1, uint64_t a2)
{
  sub_2225D934C(v12, a1, a2);
  int v11 = 2;
  uint64_t v2 = sub_2225D9588((uint64_t)v12, (uint64_t)"enable", (uint64_t)&v11);
  int v10 = 1;
  uint64_t v3 = sub_2225D9350(v2, "require", (uint64_t)&v10);
  int v9 = 4;
  uint64_t v4 = sub_2225D9520(v3, "warn", (uint64_t)&v9);
  int v8 = 3;
  uint64_t v5 = sub_2225D9350(v4, "disable", (uint64_t)&v8);
  unsigned int v7 = 0;
  return sub_2225D9664(v5, &v7);
}

uint64_t sub_2226A1904(uint64_t **a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t result = sub_22264FE40(a2, (*a1)[2]);
  if ((result & 1) == 0)
  {
    int v8 = (unsigned int *)sub_222635F10(*v6, a3, a4);
    uint64_t result = sub_22263E560(v8);
    if (result != 6)
    {
      return (uint64_t)sub_2226A1AAC(v8);
    }
  }
  return result;
}

_WORD *sub_2226A198C(_WORD *result, char a2)
{
  *uint64_t result = *result & 0xF8FF | ((a2 & 7) << 8);
  return result;
}

void sub_2226A19A8()
{
  uint64_t v0 = (void *)sub_2226A19A4();

  j__free(v0);
}

uint64_t sub_2226A19D0(uint64_t a1)
{
  return a1 + 104;
}

void *sub_2226A19DC(void *a1)
{
  uint64_t result = sub_222647228(a1);
  *uint64_t result = &unk_26D4DEB40;
  return result;
}

double sub_2226A1A10(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  double result = *(double *)(a2 + 60);
  *(double *)(a1 + 8) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 68);
  return result;
}

BOOL sub_2226A1A28(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 32;
  for (BOOL result = sub_22261CB34(a1 + 32, a2); result; BOOL result = sub_22261CB34(v4, a2))
  {
    BOOL result = sub_2226A1A88(a1);
    if (result) {
      break;
    }
    sub_22269B17C(a1);
  }
  return result;
}

BOOL sub_2226A1A88(uint64_t a1)
{
  return sub_22261BABC(a1 + 32, 1);
}

double sub_2226A1A94(double *a1)
{
  uint64_t v1 = *(void *)a1;
  double result = a1[1];
  *(double *)(v1 + 60) = result;
  *(_DWORD *)(v1 + 68) = *((_DWORD *)a1 + 4);
  return result;
}

unsigned int *sub_2226A1AAC(unsigned int *result)
{
  *double result = *result & 0xDFFFFE00 | 0x20000006;
  return result;
}

_DWORD *sub_2226A1ACC(uint64_t a1)
{
  uint64_t v2 = (unsigned int *)(a1 + 32);
  int v3 = sub_22261BFB4(a1 + 32);
  if (v3 > 95)
  {
    if (v3 > 107)
    {
      if (v3 == 108)
      {
        return sub_2226A22B0(a1);
      }
      if (v3 != 305) {
        goto LABEL_47;
      }
      uint64_t v4 = sub_2226A2B00(a1);
      uint64_t v5 = "discard";
    }
    else
    {
      if (v3 != 96)
      {
        if (v3 != 102) {
          goto LABEL_47;
        }
        return (_DWORD *)sub_2226A2720(a1);
      }
      uint64_t v4 = sub_2226A2A78(a1);
      uint64_t v5 = "return";
    }
LABEL_35:
    if (sub_22261BABC((uint64_t)v2, 61))
    {
      sub_22269A19C(a1, 61);
    }
    else if (v4)
    {
      sub_2226A2FCC((_DWORD *)a1, 61, 1011, (uint64_t)v5, 0);
      sub_2226A3150(a1, 24, 1, 1);
    }
    return v4;
  }
  if (v3 > 75)
  {
    switch(v3)
    {
      case 'L':
        uint64_t v4 = sub_2226A2A38(a1);
        uint64_t v5 = "break";
        goto LABEL_35;
      case 'M':
        double result = sub_2226A284C(a1);
        break;
      case 'P':
        uint64_t v4 = sub_2226A29F8(a1);
        uint64_t v5 = "continue";
        goto LABEL_35;
      case 'Q':
        double result = sub_2226A2930(a1);
        break;
      case 'R':
        uint64_t v4 = sub_2226A236C(a1);
        uint64_t v5 = "do/while";
        goto LABEL_35;
      case 'X':
        double result = sub_2226A2464(a1);
        break;
      case 'Z':
        double result = sub_2226A20D8(a1);
        break;
      default:
        goto LABEL_47;
    }
    return result;
  }
  if (v3 != 23)
  {
    if (v3 != 24)
    {
      if (v3 == 61)
      {
        unsigned int v7 = *(uint64_t **)(a1 + 8);
        int v8 = sub_22269A19C(a1, 61);
        return sub_222692128(v7, v8);
      }
LABEL_47:
      return (_DWORD *)sub_2226A1E28(a1);
    }
    sub_22269A258(a1, v2, 1015, (uint64_t)v9);
    sub_2225F37F0(v9);
    return 0;
  }

  return (_DWORD *)sub_2226A207C(a1);
}

uint64_t sub_2226A1E28(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v2 = (unsigned int *)(a1 + 32);
  if (sub_22261BABC(a1 + 32, 399))
  {
    int v3 = *(uint64_t **)(a1 + 8);
    *(void *)&v24[0] = sub_22269B3E8(a1);
    sub_22261870C(v27, (uint64_t)v24);
    uint64_t v4 = v27[0];
    uint64_t v5 = v27[1];
    uint64_t v6 = v3;
    return sub_222692134(v6, v4, v5);
  }
  if (!sub_22261BABC((uint64_t)v2, 521))
  {
    sub_2225D3DAC(v28);
    if (sub_22269A1A0(a1))
    {
      sub_222699B84(a1, v28, 0);
      int v9 = *(uint64_t **)(a1 + 8);
      sub_2225D3DDC(v25, v28);
      uint64_t v10 = v25[0];
      uint64_t v11 = v25[1];
LABEL_9:
      uint64_t v12 = sub_222692134(v9, v10, v11);
LABEL_20:
      uint64_t v8 = v12;
      goto LABEL_21;
    }
    if (sub_22269CFC8(a1))
    {
      int v13 = sub_2225C3B40(v2);
      sub_22269998C((uint64_t)v24, v13);
      if (sub_22269A2B0(a1, (uint64_t)v24, 1)) {
        goto LABEL_16;
      }
      if (!sub_22261BABC((uint64_t)v2, 21))
      {
        sub_22269BD7C(a1, v28, v24, 0, 0);
        int v9 = *(uint64_t **)(a1 + 8);
        sub_2225D3DDC(v22, v28);
        uint64_t v10 = v22[0];
        uint64_t v11 = v22[1];
        goto LABEL_9;
      }
      int v14 = *(uint64_t **)(a1 + 8);
      sub_2225C3D00((int)v23, &byte_2226D1615);
      uint64_t v15 = sub_222694358(v14, v24, v23[0], v23[1]);
      int v16 = sub_2225C3B40((unsigned int *)v24);
      uint64_t v17 = (unsigned int *)sub_22269FE68(a1, v15, v16);
      if (!v17 || (uint64_t v18 = sub_22269FF58(a1, v17)) == 0 || (v19 = sub_22269F468(a1, v18, 1)) == 0)
      {
LABEL_16:
        sub_2226A9798(a1);
        uint64_t v8 = 0;
LABEL_21:
        sub_2225C56C4(v28);
        return v8;
      }
    }
    else
    {
      uint64_t v19 = (uint64_t)sub_22269F3C8(a1);
      if (!v19) {
        goto LABEL_16;
      }
    }
    uint64_t v20 = (unsigned int *)v19;
    sub_2226A2FCC((_DWORD *)a1, 61, 1007, (uint64_t)&byte_2226D1615, 61);
    uint64_t v12 = sub_22269252C(*(uint64_t **)(a1 + 8), v20);
    goto LABEL_20;
  }
  *(void *)&v24[0] = sub_2226A0F4C(a1);
  if (!*(void *)&v24[0]) {
    return 0;
  }
  unsigned int v7 = *(uint64_t **)(a1 + 8);
  sub_22261870C(v26, (uint64_t)v24);
  uint64_t v4 = v26[0];
  uint64_t v5 = v26[1];
  uint64_t v6 = v7;
  return sub_222692134(v6, v4, v5);
}

uint64_t sub_2226A207C(uint64_t a1)
{
  sub_222688A9C(v4, *(void *)(a1 + 8), 8);
  uint64_t v2 = sub_2226A2B40(a1);
  if (!v2) {
    sub_2226A32E8();
  }
  sub_222688AE0(v4);
  return v2;
}

_DWORD *sub_2226A20D8(uint64_t a1)
{
  int v2 = sub_22269A19C(a1, 90);
  sub_2225F3278(&v14);
  if (!sub_2226A97EC((_DWORD *)a1, 0x15u, &v14))
  {
    int v3 = sub_22269F3C8(a1);
    if (v3)
    {
      uint64_t v4 = v3;
      sub_2225F3278(&v13);
      if (!sub_22269AFB8((_DWORD *)a1, 0x16u, v14, &v13))
      {
        int v5 = sub_2225C3B40((unsigned int *)(a1 + 32));
        sub_222688A9C(&v12, *(void *)(a1 + 8), 72);
        if (sub_22261BABC(a1 + 32, 23)) {
          uint64_t v6 = sub_2226A2B40(a1);
        }
        else {
          uint64_t v6 = sub_2226A1ACC(a1);
        }
        uint64_t v7 = v6;
        if (v6)
        {
          sub_222688AE0(&v12);
          int v8 = sub_2225C3B40((unsigned int *)(a1 + 32));
          if (!sub_22261BABC(a1 + 32, 84))
          {
            uint64_t v10 = 0;
            return sub_222692620(*(uint64_t **)(a1 + 8), v2, v4, v7, v5, v10, v8);
          }
          sub_22269A19C(a1, 84);
          sub_222688A9C(&v12, *(void *)(a1 + 8), 72);
          if (sub_22261BABC(a1 + 32, 23)) {
            uint64_t v9 = sub_2226A2B40(a1);
          }
          else {
            uint64_t v9 = sub_2226A1ACC(a1);
          }
          uint64_t v10 = v9;
          if (v9)
          {
            sub_222688AE0(&v12);
            return sub_222692620(*(uint64_t **)(a1 + 8), v2, v4, v7, v5, v10, v8);
          }
          sub_2226A32E8();
        }
        else
        {
          sub_2226A32E8();
          if (sub_22261BABC(a1 + 32, 84))
          {
            sub_22269A3C0(a1);
            sub_2226A32E8();
            sub_2226A9798(a1);
          }
        }
        sub_222688AE0(&v12);
      }
    }
    else
    {
      sub_2226A9798(a1);
    }
  }
  return 0;
}

_DWORD *sub_2226A22B0(uint64_t a1)
{
  sub_222688A9C(v8, *(void *)(a1 + 8), 78);
  int v2 = sub_22269A19C(a1, 108);
  uint64_t v3 = sub_2226A2CD4(a1, 0);
  if (!v3
    || ((uint64_t v4 = v3, !sub_22261BABC(a1 + 32, 23)) ? (v5 = sub_2226A1ACC(a1)) : (v5 = sub_2226A2B40(a1)),
        (uint64_t v6 = sub_222692710(*(uint64_t **)(a1 + 8), v2, v4, v5)) == 0))
  {
    sub_2226A32E8();
    uint64_t v6 = 0;
  }
  sub_222688AE0(v8);
  return v6;
}

_DWORD *sub_2226A236C(uint64_t a1)
{
  int v2 = sub_22269A19C(a1, 82);
  sub_222688A9C(v8, *(void *)(a1 + 8), 78);
  if (sub_22261BABC(a1 + 32, 23)) {
    uint64_t v3 = sub_2226A2B40(a1);
  }
  else {
    uint64_t v3 = sub_2226A1ACC(a1);
  }
  uint64_t v4 = v3;
  if (!v3)
  {
    sub_2226A32E8();
    sub_222688AE0(v8);
    return 0;
  }
  sub_222688AE0(v8);
  if (sub_22261CB34(a1 + 32, 108))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 1022, (uint64_t)v7);
    sub_2225F37F0(v7);
    return 0;
  }
  sub_22269A19C(a1, 108);
  uint64_t v6 = sub_2226A2CD4(a1, 1);
  return sub_22269271C(*(uint64_t **)(a1 + 8), v2, v4, v6);
}

_DWORD *sub_2226A2464(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  int v2 = sub_22269A19C(a1, 88);
  sub_222688A9C(v16, *(void *)(a1 + 8), 78);
  sub_2225F3278(&v15);
  if (sub_2226A97EC((_DWORD *)a1, 0x15u, &v15)) {
    goto LABEL_2;
  }
  if (sub_22261BABC(a1 + 32, 61))
  {
    sub_22269A19C(a1, 61);
    uint64_t v3 = 0;
  }
  else if (sub_22269D320(a1))
  {
    sub_2225D3DAC(v17);
    sub_222699B84(a1, v17, 0);
    uint64_t v4 = *(uint64_t **)(a1 + 8);
    sub_2225D3DDC(v14, v17);
    uint64_t v3 = sub_222692134(v4, v14[0], v14[1]);
    sub_2225C56C4(v17);
  }
  else
  {
    uint64_t v5 = sub_22269F3C8(a1);
    uint64_t v3 = sub_22269252C(*(uint64_t **)(a1 + 8), v5);
    if (sub_2226A2FCC((_DWORD *)a1, 61, 1014, (uint64_t)&byte_2226D1615, 0)) {
      goto LABEL_2;
    }
  }
  if (sub_22261BABC(a1 + 32, 61))
  {
    sub_22269A19C(a1, 61);
    uint64_t v6 = 0;
    goto LABEL_13;
  }
  if (sub_22269D320(a1))
  {
    sub_2225D3DAC(v17);
    sub_222699B84(a1, v17, 0);
    uint64_t v7 = *(uint64_t **)(a1 + 8);
    sub_2225D3DDC(v13, v17);
    uint64_t v6 = sub_222692134(v7, v13[0], v13[1]);
    sub_2225C56C4(v17);
    goto LABEL_13;
  }
  int v8 = sub_22269F3C8(a1);
  uint64_t v6 = sub_22269252C(*(uint64_t **)(a1 + 8), v8);
  if (sub_2226A2FCC((_DWORD *)a1, 61, 1014, (uint64_t)&byte_2226D1615, 0))
  {
LABEL_2:
    sub_2226A32E8();
    sub_2226A3150(a1, 22, 0, 0);
LABEL_22:
    uint64_t v11 = 0;
    goto LABEL_23;
  }
LABEL_13:
  if (sub_22261CB34(a1 + 32, 22)) {
    uint64_t v9 = sub_22269F3C8(a1);
  }
  else {
    uint64_t v9 = 0;
  }
  sub_2225F3278(v17);
  if (sub_22269AFB8((_DWORD *)a1, 0x16u, v15, v17)
    || (!sub_22261BABC(a1 + 32, 23) ? (uint64_t v10 = sub_2226A1ACC(a1)) : (uint64_t v10 = sub_2226A2B40(a1)),
        (uint64_t v11 = sub_222692704(*(uint64_t **)(a1 + 8), v2, v3, v6, (uint64_t)v9, v10)) == 0))
  {
    sub_2226A32E8();
    goto LABEL_22;
  }
LABEL_23:
  sub_222688AE0(v16);
  return v11;
}

uint64_t sub_2226A2720(uint64_t a1)
{
  unsigned int v2 = sub_22269A19C(a1, 102);
  sub_2225F3278(&v11);
  if (sub_2226A97EC((_DWORD *)a1, 0x15u, &v11)) {
    return 0;
  }
  uint64_t v3 = sub_22269F3C8(a1);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_2225F3278(&v10);
  if (sub_22269AFB8((_DWORD *)a1, 0x16u, v11, &v10)) {
    return 0;
  }
  if (sub_22261CB34(a1 + 32, 23))
  {
    sub_22269A258(a1, (unsigned int *)(a1 + 32), 8, (uint64_t)v9);
    sub_222635F18(v9, 0x17u);
    sub_2225F37F0(v9);
    sub_2226A9798(a1);
    return 0;
  }
  sub_222688A9C(v9, *(void *)(a1 + 8), 34);
  uint64_t v7 = sub_222692888(*(uint64_t **)(a1 + 8), v2, v4);
  uint64_t v8 = sub_2226A2B40(a1);
  uint64_t v5 = sub_222692984(*(void *)(a1 + 8), v7, v8);
  if (!v5) {
    sub_2226A32E8();
  }
  sub_222688AE0(v9);
  return v5;
}

_DWORD *sub_2226A284C(uint64_t a1)
{
  unsigned int v2 = sub_22269A19C(a1, 77);
  uint64_t v3 = sub_22269F3C8(a1);
  if (sub_22261CB34(a1 + 32, 60))
  {
    unsigned int v4 = sub_2226450CC(*(void *)a1, *(_DWORD *)(a1 + 56), 0);
    sub_2226A32DC(a1, v4, 9, (uint64_t)v9);
    uint64_t v5 = sub_22260A5E8(v9, (uint64_t)"'case'");
    sub_222635F18(v5, 0x3Cu);
    sub_2225F37F0(v9);
    return 0;
  }
  else
  {
    int v7 = sub_22269A19C(a1, 60);
    uint64_t v8 = *(uint64_t **)(a1 + 8);
    return sub_222692F38(v8, v2, v7, (unint64_t)v3);
  }
}

_DWORD *sub_2226A2930(uint64_t a1)
{
  unsigned int v2 = sub_22269A19C(a1, 81);
  if (sub_22261CB34(a1 + 32, 60))
  {
    unsigned int v3 = sub_2226450CC(*(void *)a1, *(_DWORD *)(a1 + 56), 0);
    sub_2226A32DC(a1, v3, 9, (uint64_t)v8);
    unsigned int v4 = sub_22260A5E8(v8, (uint64_t)"'default'");
    sub_222635F18(v4, 0x3Cu);
    sub_2225F37F0(v8);
    return 0;
  }
  else
  {
    int v6 = sub_22269A19C(a1, 60);
    int v7 = *(uint64_t **)(a1 + 8);
    return sub_2226930E4(v7, v2, v6);
  }
}

_DWORD *sub_2226A29F8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  unsigned int v2 = sub_22269A19C(a1, 80);

  return sub_222692808(v1, v2);
}

_DWORD *sub_2226A2A38(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  unsigned int v2 = sub_22269A19C(a1, 76);

  return sub_222692788(v1, v2);
}

_DWORD *sub_2226A2A78(uint64_t a1)
{
  unsigned int v2 = sub_22269A19C(a1, 96);
  if (sub_22261CB34(a1 + 32, 61))
  {
    unsigned int v3 = sub_22269F3C8(a1);
    if (!v3)
    {
      sub_2226A3150(a1, 61, 0, 1);
      return 0;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  uint64_t v5 = *(uint64_t **)(a1 + 8);

  return sub_222693188(v5, v2, v3);
}

_DWORD *sub_2226A2B00(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  int v2 = sub_22269A19C(a1, 305);

  return sub_22269317C(v1, v2);
}

_DWORD *sub_2226A2B40(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  unsigned int v2 = sub_2226A2C64(a1);
  sub_22263B708(v9);
  while (sub_22261CB34(a1 + 32, 24))
  {
    if (!sub_22261CB34(a1 + 32, 1)) {
      break;
    }
    uint64_t v8 = 0;
    uint64_t v8 = sub_2226A1ACC(a1);
    if (v8) {
      sub_2225CC7B8((uint64_t)v9, &v8);
    }
  }
  sub_2225F3278(&v8);
  if (sub_22269AFB8((_DWORD *)a1, 0x18u, v2, &v8))
  {
    unsigned int v3 = 0;
  }
  else
  {
    unsigned int v4 = *(uint64_t **)(a1 + 8);
    int v5 = (int)v8;
    sub_2225D3DDC(v7, v9);
    unsigned int v3 = sub_222692610(v4, v2, v5, v7[0], v7[1]);
  }
  sub_2225C56C4(v9);
  return v3;
}

uint64_t sub_2226A2C64(uint64_t a1)
{
  unsigned int v2 = (unsigned int *)(a1 + 32);
  if (sub_22261BABC(a1 + 32, 23))
  {
    int v3 = 1;
LABEL_5:
    *(_DWORD *)(a1 + 68) += v3;
    goto LABEL_6;
  }
  if (*(_DWORD *)(a1 + 60))
  {
    int v3 = -1;
    goto LABEL_5;
  }
LABEL_6:
  *(_DWORD *)(a1 + 56) = sub_2225C3B40(v2);
  sub_222649758(*(void *)a1, v2);
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_2226A2CD4(uint64_t a1, int a2)
{
  v13[7] = *MEMORY[0x263EF8340];
  unsigned int v4 = (unsigned int *)(a1 + 32);
  if (sub_22261CB34(a1 + 32, 21))
  {
    sub_22269A258(a1, v4, 8, (uint64_t)v13);
    sub_222635F18(v13, 0x15u);
    int v5 = v13;
LABEL_6:
    sub_2225F37F0(v5);
    sub_2226A3150(a1, 22, 0, 0);
    return 0;
  }
  unsigned int v6 = sub_22269AD24(a1);
  if (sub_22269D320(a1))
  {
    if (a2)
    {
      sub_22269A258(a1, v4, 954, (uint64_t)v12);
      int v5 = (uint64_t *)v12;
      goto LABEL_6;
    }
    sub_2225D3DAC(v13);
    sub_222699B84(a1, v13, 0);
    uint64_t v10 = *(uint64_t **)(a1 + 8);
    sub_2225D3DDC(v11, v13);
    uint64_t v9 = sub_222692134(v10, v11[0], v11[1]);
    sub_2225C56C4(v13);
  }
  else
  {
    uint64_t v8 = sub_22269F3C8(a1);
    uint64_t v9 = sub_22269252C(*(uint64_t **)(a1 + 8), v8);
  }
  sub_2225F3278(v13);
  if (sub_22269AFB8((_DWORD *)a1, 0x16u, v6, v13)) {
    return 0;
  }
  else {
    return v9;
  }
}

uint64_t sub_2226A2E44(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_2226A2B40(a1);
  if (a2)
  {
    int v5 = v4;
    if (!v4)
    {
      sub_2226A32E8();
      unsigned int v6 = *(uint64_t **)(a1 + 8);
      int v7 = sub_222613380(a2);
      int v8 = sub_222613380(a2);
      sub_2225CCC70(v10);
      int v5 = sub_222692610(v6, v7, v8, v10[0], v10[1]);
    }
    sub_22268C8D0(*(void *)(a1 + 8), a2, (uint64_t)v5);
  }
  return a2;
}

uint64_t sub_2226A2EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = sub_2225C3D04(a3);
  *(void *)(a1 + 24) = sub_2225C5B40(a2);
  sub_22261B6AC(a1 + 32);
  sub_2225F3278((_DWORD *)(a1 + 56));
  *(void *)(a1 + 65) = 0;
  *(void *)(a1 + 60) = 0;
  sub_2225D250C((void *)(a1 + 80));
  sub_22261FB44(a1 + 32);
  sub_22261F2AC(a1 + 32, 1);
  return a1;
}

uint64_t sub_2226A2F64(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226A2F94(uint64_t *a1)
{
  sub_2226A0F00(a1);

  return sub_22269A3C0(a1);
}

BOOL sub_2226A2FCC(_DWORD *a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v9 = a1 + 8;
  BOOL v10 = sub_22261BABC((uint64_t)(a1 + 8), a2);
  if (v10)
  {
    sub_2226A3074(a1);
  }
  else
  {
    sub_22269A258((uint64_t)a1, v9, a3, (uint64_t)v12);
    sub_22260A5E8(v12, a4);
    sub_2225F37F0(v12);
    if (a5) {
      sub_2226A3150((uint64_t)a1, a5, 1, 0);
    }
  }
  return !v10;
}

uint64_t sub_2226A3074(_DWORD *a1)
{
  switch(sub_22261BFB4((uint64_t)(a1 + 8)))
  {
    case 0x13u:
      int v2 = a1[16] + 1;
      goto LABEL_5;
    case 0x14u:
      int v3 = a1[16];
      if (v3)
      {
        int v2 = v3 - 1;
LABEL_5:
        a1[16] = v2;
      }
      break;
    case 0x15u:
      int v4 = a1[15] + 1;
      goto LABEL_9;
    case 0x16u:
      int v5 = a1[15];
      if (!v5) {
        break;
      }
      int v4 = v5 - 1;
LABEL_9:
      a1[15] = v4;
      break;
    case 0x17u:
      int v6 = a1[17] + 1;
      goto LABEL_13;
    case 0x18u:
      int v7 = a1[17];
      if (!v7) {
        break;
      }
      int v6 = v7 - 1;
LABEL_13:
      a1[17] = v6;
      break;
    default:
      break;
  }

  return sub_22269B17C((uint64_t)a1);
}

uint64_t sub_2226A3150(uint64_t a1, int a2, char a3, char a4)
{
  uint64_t v8 = a1 + 32;
  if (sub_22261CB34(a1 + 32, a2))
  {
    while (sub_22261CB34(v8, 1))
    {
      uint64_t result = sub_22261BFB4(v8);
      switch((int)result)
      {
        case 19:
          sub_2226A07E0(a1);
          uint64_t v10 = a1;
          uint64_t v11 = 20;
          goto LABEL_13;
        case 20:
          sub_2226A07E0(a1);
          goto LABEL_16;
        case 21:
          sub_22269AD24(a1);
          uint64_t v10 = a1;
          uint64_t v11 = 22;
          goto LABEL_13;
        case 22:
          sub_22269AD24(a1);
          goto LABEL_16;
        case 23:
          sub_2226A2C64(a1);
          uint64_t v10 = a1;
          uint64_t v11 = 24;
LABEL_13:
          sub_2226A3150(v10, v11, 0, 0);
          goto LABEL_16;
        case 24:
          sub_2226A2C64(a1);
          goto LABEL_16;
        default:
          if (result == 3)
          {
            sub_2226A32E8();
          }
          else
          {
            if result == 61 && (a3) {
              return result;
            }
            sub_22269A3C0(a1);
          }
LABEL_16:
          if (!sub_22261CB34(v8, a2)) {
            goto LABEL_17;
          }
          break;
      }
    }
  }
LABEL_17:
  uint64_t result = sub_22261BABC(v8, a2);
  if (result && (a4 & 1) == 0)
  {
    return sub_22269A3C0(a1);
  }
  return result;
}

uint64_t sub_2226A32DC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  return sub_2225F52C4(*(void *)(a1 + 24), a2, a3, a4);
}

BOOL sub_2226A32E8()
{
  uint64_t v0 = (uint64_t *)MEMORY[0x270FA5388]();
  BOOL v1 = sub_22261CB34((uint64_t)(v0 + 4), 3);
  if (!v1)
  {
    uint64_t v2 = sub_222690A98(*v0);
    v517 = v0;
    int v3 = v0 + 2;
    if (sub_22264FE40(75, v0[2]))
    {
      sub_2225C3D00((int)v516, "auto");
      sub_2225F2E2C(v2, v516[0], v516[1]);
    }
    if (sub_22264FE40(76, *v3))
    {
      sub_2225C3D00((int)v515, "break");
      sub_2225F2E2C(v2, v515[0], v515[1]);
    }
    if (sub_22264FE40(77, *v3))
    {
      sub_2225C3D00((int)v514, "case");
      sub_2225F2E2C(v2, v514[0], v514[1]);
    }
    if (sub_22264FE40(78, *v3))
    {
      sub_2225C3D00((int)v513, "char");
      sub_2225F2E2C(v2, v513[0], v513[1]);
    }
    if (sub_22264FE40(79, *v3))
    {
      sub_2225C3D00((int)v512, "const");
      sub_2225F2E2C(v2, v512[0], v512[1]);
    }
    if (sub_22264FE40(80, *v3))
    {
      sub_2225C3D00((int)v511, "continue");
      sub_2225F2E2C(v2, v511[0], v511[1]);
    }
    if (sub_22264FE40(81, *v3))
    {
      sub_2225C3D00((int)v510, "default");
      sub_2225F2E2C(v2, v510[0], v510[1]);
    }
    if (sub_22264FE40(82, *v3))
    {
      sub_2225C3D00((int)v509, "do");
      sub_2225F2E2C(v2, v509[0], v509[1]);
    }
    if (sub_22264FE40(83, *v3))
    {
      sub_2225C3D00((int)v508, "double");
      sub_2225F2E2C(v2, v508[0], v508[1]);
    }
    if (sub_22264FE40(84, *v3))
    {
      sub_2225C3D00((int)v507, "else");
      sub_2225F2E2C(v2, v507[0], v507[1]);
    }
    if (sub_22264FE40(85, *v3))
    {
      sub_2225C3D00((int)v506, "enum");
      sub_2225F2E2C(v2, v506[0], v506[1]);
    }
    if (sub_22264FE40(86, *v3))
    {
      sub_2225C3D00((int)v505, "extern");
      sub_2225F2E2C(v2, v505[0], v505[1]);
    }
    if (sub_22264FE40(87, *v3))
    {
      sub_2225C3D00((int)v504, "float");
      sub_2225F2E2C(v2, v504[0], v504[1]);
    }
    if (sub_22264FE40(88, *v3))
    {
      sub_2225C3D00((int)v503, "for");
      sub_2225F2E2C(v2, v503[0], v503[1]);
    }
    if (sub_22264FE40(89, *v3))
    {
      sub_2225C3D00((int)v502, "goto");
      sub_2225F2E2C(v2, v502[0], v502[1]);
    }
    if (sub_22264FE40(90, *v3))
    {
      sub_2225C3D00((int)v501, "if");
      sub_2225F2E2C(v2, v501[0], v501[1]);
    }
    if (sub_22264FE40(91, *v3))
    {
      sub_2225C3D00((int)v500, "inline");
      sub_2225F2E2C(v2, v500[0], v500[1]);
    }
    if (sub_22264FE40(92, *v3))
    {
      sub_2225C3D00((int)v499, "int");
      sub_2225F2E2C(v2, v499[0], v499[1]);
    }
    if (sub_22264FE40(93, *v3))
    {
      sub_2225C3D00((int)v498, "long");
      sub_2225F2E2C(v2, v498[0], v498[1]);
    }
    if (sub_22264FE40(94, *v3))
    {
      sub_2225C3D00((int)v497, "register");
      sub_2225F2E2C(v2, v497[0], v497[1]);
    }
    if (sub_22264FE40(95, *v3))
    {
      sub_2225C3D00((int)v496, "restrict");
      sub_2225F2E2C(v2, v496[0], v496[1]);
    }
    if (sub_22264FE40(96, *v3))
    {
      sub_2225C3D00((int)v495, "return");
      sub_2225F2E2C(v2, v495[0], v495[1]);
    }
    if (sub_22264FE40(97, *v3))
    {
      sub_2225C3D00((int)v494, "short");
      sub_2225F2E2C(v2, v494[0], v494[1]);
    }
    if (sub_22264FE40(98, *v3))
    {
      sub_2225C3D00((int)v493, "signed");
      sub_2225F2E2C(v2, v493[0], v493[1]);
    }
    if (sub_22264FE40(99, *v3))
    {
      sub_2225C3D00((int)v492, "sizeof");
      sub_2225F2E2C(v2, v492[0], v492[1]);
    }
    if (sub_22264FE40(100, *v3))
    {
      sub_2225C3D00((int)v491, "static");
      sub_2225F2E2C(v2, v491[0], v491[1]);
    }
    if (sub_22264FE40(101, *v3))
    {
      sub_2225C3D00((int)v490, "struct");
      sub_2225F2E2C(v2, v490[0], v490[1]);
    }
    if (sub_22264FE40(102, *v3))
    {
      sub_2225C3D00((int)v489, "switch");
      sub_2225F2E2C(v2, v489[0], v489[1]);
    }
    if (sub_22264FE40(103, *v3))
    {
      sub_2225C3D00((int)v488, "typedef");
      sub_2225F2E2C(v2, v488[0], v488[1]);
    }
    if (sub_22264FE40(104, *v3))
    {
      sub_2225C3D00((int)v487, "union");
      sub_2225F2E2C(v2, v487[0], v487[1]);
    }
    if (sub_22264FE40(105, *v3))
    {
      sub_2225C3D00((int)v486, "unsigned");
      sub_2225F2E2C(v2, v486[0], v486[1]);
    }
    if (sub_22264FE40(106, *v3))
    {
      sub_2225C3D00((int)v485, "void");
      sub_2225F2E2C(v2, v485[0], v485[1]);
    }
    if (sub_22264FE40(107, *v3))
    {
      sub_2225C3D00((int)v484, "volatile");
      sub_2225F2E2C(v2, v484[0], v484[1]);
    }
    if (sub_22264FE40(108, *v3))
    {
      sub_2225C3D00((int)v483, "while");
      sub_2225F2E2C(v2, v483[0], v483[1]);
    }
    if (sub_22264FE40(109, *v3))
    {
      sub_2225C3D00((int)v482, "_Alignas");
      sub_2225F2E2C(v2, v482[0], v482[1]);
    }
    if (sub_22264FE40(110, *v3))
    {
      sub_2225C3D00((int)v481, "_Alignof");
      sub_2225F2E2C(v2, v481[0], v481[1]);
    }
    if (sub_22264FE40(111, *v3))
    {
      sub_2225C3D00((int)v480, "_Atomic");
      sub_2225F2E2C(v2, v480[0], v480[1]);
    }
    if (sub_22264FE40(112, *v3))
    {
      sub_2225C3D00((int)v479, "_Bool");
      sub_2225F2E2C(v2, v479[0], v479[1]);
    }
    if (sub_22264FE40(113, *v3))
    {
      sub_2225C3D00((int)v478, "_Complex");
      sub_2225F2E2C(v2, v478[0], v478[1]);
    }
    if (sub_22264FE40(114, *v3))
    {
      sub_2225C3D00((int)v477, "_Generic");
      sub_2225F2E2C(v2, v477[0], v477[1]);
    }
    if (sub_22264FE40(115, *v3))
    {
      sub_2225C3D00((int)v476, "_Imaginary");
      sub_2225F2E2C(v2, v476[0], v476[1]);
    }
    if (sub_22264FE40(116, *v3))
    {
      sub_2225C3D00((int)v475, "_Noreturn");
      sub_2225F2E2C(v2, v475[0], v475[1]);
    }
    if (sub_22264FE40(117, *v3))
    {
      sub_2225C3D00((int)v474, "_Static_assert");
      sub_2225F2E2C(v2, v474[0], v474[1]);
    }
    if (sub_22264FE40(118, *v3))
    {
      sub_2225C3D00((int)v473, "_Thread_local");
      sub_2225F2E2C(v2, v473[0], v473[1]);
    }
    if (sub_22264FE40(119, *v3))
    {
      sub_2225C3D00((int)v472, "__func__");
      sub_2225F2E2C(v2, v472[0], v472[1]);
    }
    if (sub_22264FE40(120, *v3))
    {
      sub_2225C3D00((int)v471, "__objc_yes");
      sub_2225F2E2C(v2, v471[0], v471[1]);
    }
    if (sub_22264FE40(121, *v3))
    {
      sub_2225C3D00((int)v470, "__objc_no");
      sub_2225F2E2C(v2, v470[0], v470[1]);
    }
    if (sub_22264FE40(122, *v3))
    {
      sub_2225C3D00((int)v469, "asm");
      sub_2225F2E2C(v2, v469[0], v469[1]);
    }
    if (sub_22264FE40(123, *v3))
    {
      sub_2225C3D00((int)v468, "BOOL");
      sub_2225F2E2C(v2, v468[0], v468[1]);
    }
    if (sub_22264FE40(124, *v3))
    {
      sub_2225C3D00((int)v467, "catch");
      sub_2225F2E2C(v2, v467[0], v467[1]);
    }
    if (sub_22264FE40(125, *v3))
    {
      sub_2225C3D00((int)v466, "class");
      sub_2225F2E2C(v2, v466[0], v466[1]);
    }
    if (sub_22264FE40(126, *v3))
    {
      sub_2225C3D00((int)v465, "const_cast");
      sub_2225F2E2C(v2, v465[0], v465[1]);
    }
    if (sub_22264FE40(127, *v3))
    {
      sub_2225C3D00((int)v464, "delete");
      sub_2225F2E2C(v2, v464[0], v464[1]);
    }
    if (sub_22264FE40(128, *v3))
    {
      sub_2225C3D00((int)v463, "dynamic_cast");
      sub_2225F2E2C(v2, v463[0], v463[1]);
    }
    if (sub_22264FE40(129, *v3))
    {
      sub_2225C3D00((int)v462, "explicit");
      sub_2225F2E2C(v2, v462[0], v462[1]);
    }
    if (sub_22264FE40(130, *v3))
    {
      sub_2225C3D00((int)v461, "export");
      sub_2225F2E2C(v2, v461[0], v461[1]);
    }
    if (sub_22264FE40(131, *v3))
    {
      sub_2225C3D00((int)v460, "false");
      sub_2225F2E2C(v2, v460[0], v460[1]);
    }
    if (sub_22264FE40(132, *v3))
    {
      sub_2225C3D00((int)v459, "friend");
      sub_2225F2E2C(v2, v459[0], v459[1]);
    }
    if (sub_22264FE40(133, *v3))
    {
      sub_2225C3D00((int)v458, "mutable");
      sub_2225F2E2C(v2, v458[0], v458[1]);
    }
    if (sub_22264FE40(134, *v3))
    {
      sub_2225C3D00((int)v457, "namespace");
      sub_2225F2E2C(v2, v457[0], v457[1]);
    }
    if (sub_22264FE40(135, *v3))
    {
      sub_2225C3D00((int)v456, "new");
      sub_2225F2E2C(v2, v456[0], v456[1]);
    }
    if (sub_22264FE40(136, *v3))
    {
      sub_2225C3D00((int)v455, "operator");
      sub_2225F2E2C(v2, v455[0], v455[1]);
    }
    if (sub_22264FE40(137, *v3))
    {
      sub_2225C3D00((int)v454, "private");
      sub_2225F2E2C(v2, v454[0], v454[1]);
    }
    if (sub_22264FE40(138, *v3))
    {
      sub_2225C3D00((int)v453, "protected");
      sub_2225F2E2C(v2, v453[0], v453[1]);
    }
    if (sub_22264FE40(139, *v3))
    {
      sub_2225C3D00((int)v452, "public");
      sub_2225F2E2C(v2, v452[0], v452[1]);
    }
    if (sub_22264FE40(140, *v3))
    {
      sub_2225C3D00((int)v451, "reinterpret_cast");
      sub_2225F2E2C(v2, v451[0], v451[1]);
    }
    if (sub_22264FE40(141, *v3))
    {
      sub_2225C3D00((int)v450, "static_cast");
      sub_2225F2E2C(v2, v450[0], v450[1]);
    }
    if (sub_22264FE40(142, *v3))
    {
      sub_2225C3D00((int)v449, "template");
      sub_2225F2E2C(v2, v449[0], v449[1]);
    }
    if (sub_22264FE40(143, *v3))
    {
      sub_2225C3D00((int)v448, "this");
      sub_2225F2E2C(v2, v448[0], v448[1]);
    }
    if (sub_22264FE40(144, *v3))
    {
      sub_2225C3D00((int)v447, "throw");
      sub_2225F2E2C(v2, v447[0], v447[1]);
    }
    if (sub_22264FE40(145, *v3))
    {
      sub_2225C3D00((int)v446, "true");
      sub_2225F2E2C(v2, v446[0], v446[1]);
    }
    if (sub_22264FE40(146, *v3))
    {
      sub_2225C3D00((int)v445, "try");
      sub_2225F2E2C(v2, v445[0], v445[1]);
    }
    if (sub_22264FE40(147, *v3))
    {
      sub_2225C3D00((int)v444, "typename");
      sub_2225F2E2C(v2, v444[0], v444[1]);
    }
    if (sub_22264FE40(148, *v3))
    {
      sub_2225C3D00((int)v443, "typeid");
      sub_2225F2E2C(v2, v443[0], v443[1]);
    }
    if (sub_22264FE40(149, *v3))
    {
      sub_2225C3D00((int)v442, "using");
      sub_2225F2E2C(v2, v442[0], v442[1]);
    }
    if (sub_22264FE40(150, *v3))
    {
      sub_2225C3D00((int)v441, "virtual");
      sub_2225F2E2C(v2, v441[0], v441[1]);
    }
    if (sub_22264FE40(151, *v3))
    {
      sub_2225C3D00((int)v440, "wchar_t");
      sub_2225F2E2C(v2, v440[0], v440[1]);
    }
    if (sub_22264FE40(152, *v3))
    {
      sub_2225C3D00((int)v439, "alignas");
      sub_2225F2E2C(v2, v439[0], v439[1]);
    }
    if (sub_22264FE40(153, *v3))
    {
      sub_2225C3D00((int)v438, "alignof");
      sub_2225F2E2C(v2, v438[0], v438[1]);
    }
    if (sub_22264FE40(154, *v3))
    {
      sub_2225C3D00((int)v437, "char16_t");
      sub_2225F2E2C(v2, v437[0], v437[1]);
    }
    if (sub_22264FE40(155, *v3))
    {
      sub_2225C3D00((int)v436, "char32_t");
      sub_2225F2E2C(v2, v436[0], v436[1]);
    }
    if (sub_22264FE40(156, *v3))
    {
      sub_2225C3D00((int)v435, "constexpr");
      sub_2225F2E2C(v2, v435[0], v435[1]);
    }
    if (sub_22264FE40(157, *v3))
    {
      sub_2225C3D00((int)v434, "decltype");
      sub_2225F2E2C(v2, v434[0], v434[1]);
    }
    if (sub_22264FE40(158, *v3))
    {
      sub_2225C3D00((int)v433, "noexcept");
      sub_2225F2E2C(v2, v433[0], v433[1]);
    }
    if (sub_22264FE40(159, *v3))
    {
      sub_2225C3D00((int)v432, "nullptr");
      sub_2225F2E2C(v2, v432[0], v432[1]);
    }
    if (sub_22264FE40(160, *v3))
    {
      sub_2225C3D00((int)v431, "static_assert");
      sub_2225F2E2C(v2, v431[0], v431[1]);
    }
    if (sub_22264FE40(161, *v3))
    {
      sub_2225C3D00((int)v430, "thread_local");
      sub_2225F2E2C(v2, v430[0], v430[1]);
    }
    if (sub_22264FE40(162, *v3))
    {
      sub_2225C3D00((int)v429, "_Decimal32");
      sub_2225F2E2C(v2, v429[0], v429[1]);
    }
    if (sub_22264FE40(163, *v3))
    {
      sub_2225C3D00((int)v428, "_Decimal64");
      sub_2225F2E2C(v2, v428[0], v428[1]);
    }
    if (sub_22264FE40(164, *v3))
    {
      sub_2225C3D00((int)v427, "_Decimal128");
      sub_2225F2E2C(v2, v427[0], v427[1]);
    }
    if (sub_22264FE40(165, *v3))
    {
      sub_2225C3D00((int)v426, "__null");
      sub_2225F2E2C(v2, v426[0], v426[1]);
    }
    if (sub_22264FE40(166, *v3))
    {
      sub_2225C3D00((int)v425, "__alignof");
      sub_2225F2E2C(v2, v425[0], v425[1]);
    }
    if (sub_22264FE40(167, *v3))
    {
      sub_2225C3D00((int)v424, "__attribute");
      sub_2225F2E2C(v2, v424[0], v424[1]);
    }
    if (sub_22264FE40(168, *v3))
    {
      sub_2225C3D00((int)v423, "__builtin_choose_expr");
      sub_2225F2E2C(v2, v423[0], v423[1]);
    }
    if (sub_22264FE40(169, *v3))
    {
      sub_2225C3D00((int)v422, "__builtin_offsetof");
      sub_2225F2E2C(v2, v422[0], v422[1]);
    }
    if (sub_22264FE40(170, *v3))
    {
      sub_2225C3D00((int)v421, "__builtin_types_compatible_p");
      sub_2225F2E2C(v2, v421[0], v421[1]);
    }
    if (sub_22264FE40(171, *v3))
    {
      sub_2225C3D00((int)v420, "__builtin_va_arg");
      sub_2225F2E2C(v2, v420[0], v420[1]);
    }
    if (sub_22264FE40(172, *v3))
    {
      sub_2225C3D00((int)v419, "__extension__");
      sub_2225F2E2C(v2, v419[0], v419[1]);
    }
    if (sub_22264FE40(173, *v3))
    {
      sub_2225C3D00((int)v418, "__imag");
      sub_2225F2E2C(v2, v418[0], v418[1]);
    }
    if (sub_22264FE40(174, *v3))
    {
      sub_2225C3D00((int)v417, "__int128");
      sub_2225F2E2C(v2, v417[0], v417[1]);
    }
    if (sub_22264FE40(175, *v3))
    {
      sub_2225C3D00((int)v416, "__label__");
      sub_2225F2E2C(v2, v416[0], v416[1]);
    }
    if (sub_22264FE40(176, *v3))
    {
      sub_2225C3D00((int)v415, "__real");
      sub_2225F2E2C(v2, v415[0], v415[1]);
    }
    if (sub_22264FE40(177, *v3))
    {
      sub_2225C3D00((int)v414, "__thread");
      sub_2225F2E2C(v2, v414[0], v414[1]);
    }
    if (sub_22264FE40(178, *v3))
    {
      sub_2225C3D00((int)v413, "__FUNCTION__");
      sub_2225F2E2C(v2, v413[0], v413[1]);
    }
    if (sub_22264FE40(179, *v3))
    {
      sub_2225C3D00((int)v412, "__PRETTY_FUNCTION__");
      sub_2225F2E2C(v2, v412[0], v412[1]);
    }
    if (sub_22264FE40(180, *v3))
    {
      sub_2225C3D00((int)v411, "typeof");
      sub_2225F2E2C(v2, v411[0], v411[1]);
    }
    if (sub_22264FE40(181, *v3))
    {
      sub_2225C3D00((int)v410, "__FUNCDNAME__");
      sub_2225F2E2C(v2, v410[0], v410[1]);
    }
    if (sub_22264FE40(182, *v3))
    {
      sub_2225C3D00((int)v409, "__FUNCSIG__");
      sub_2225F2E2C(v2, v409[0], v409[1]);
    }
    if (sub_22264FE40(183, *v3))
    {
      sub_2225C3D00((int)v408, "L__FUNCTION__");
      sub_2225F2E2C(v2, v408[0], v408[1]);
    }
    if (sub_22264FE40(184, *v3))
    {
      sub_2225C3D00((int)v407, "__is_interface_class");
      sub_2225F2E2C(v2, v407[0], v407[1]);
    }
    if (sub_22264FE40(185, *v3))
    {
      sub_2225C3D00((int)v406, "__is_sealed");
      sub_2225F2E2C(v2, v406[0], v406[1]);
    }
    if (sub_22264FE40(186, *v3))
    {
      sub_2225C3D00((int)v405, "__is_destructible");
      sub_2225F2E2C(v2, v405[0], v405[1]);
    }
    if (sub_22264FE40(187, *v3))
    {
      sub_2225C3D00((int)v404, "__is_nothrow_destructible");
      sub_2225F2E2C(v2, v404[0], v404[1]);
    }
    if (sub_22264FE40(188, *v3))
    {
      sub_2225C3D00((int)v403, "__is_nothrow_assignable");
      sub_2225F2E2C(v2, v403[0], v403[1]);
    }
    if (sub_22264FE40(189, *v3))
    {
      sub_2225C3D00((int)v402, "__is_constructible");
      sub_2225F2E2C(v2, v402[0], v402[1]);
    }
    if (sub_22264FE40(190, *v3))
    {
      sub_2225C3D00((int)v401, "__is_nothrow_constructible");
      sub_2225F2E2C(v2, v401[0], v401[1]);
    }
    if (sub_22264FE40(191, *v3))
    {
      sub_2225C3D00((int)v400, "__has_nothrow_assign");
      sub_2225F2E2C(v2, v400[0], v400[1]);
    }
    if (sub_22264FE40(192, *v3))
    {
      sub_2225C3D00((int)v399, "__has_nothrow_move_assign");
      sub_2225F2E2C(v2, v399[0], v399[1]);
    }
    if (sub_22264FE40(193, *v3))
    {
      sub_2225C3D00((int)v398, "__has_nothrow_copy");
      sub_2225F2E2C(v2, v398[0], v398[1]);
    }
    if (sub_22264FE40(194, *v3))
    {
      sub_2225C3D00((int)v397, "__has_nothrow_constructor");
      sub_2225F2E2C(v2, v397[0], v397[1]);
    }
    if (sub_22264FE40(195, *v3))
    {
      sub_2225C3D00((int)v396, "__has_trivial_assign");
      sub_2225F2E2C(v2, v396[0], v396[1]);
    }
    if (sub_22264FE40(196, *v3))
    {
      sub_2225C3D00((int)v395, "__has_trivial_move_assign");
      sub_2225F2E2C(v2, v395[0], v395[1]);
    }
    if (sub_22264FE40(197, *v3))
    {
      sub_2225C3D00((int)v394, "__has_trivial_copy");
      sub_2225F2E2C(v2, v394[0], v394[1]);
    }
    if (sub_22264FE40(198, *v3))
    {
      sub_2225C3D00((int)v393, "__has_trivial_constructor");
      sub_2225F2E2C(v2, v393[0], v393[1]);
    }
    if (sub_22264FE40(199, *v3))
    {
      sub_2225C3D00((int)v392, "__has_trivial_move_constructor");
      sub_2225F2E2C(v2, v392[0], v392[1]);
    }
    if (sub_22264FE40(200, *v3))
    {
      sub_2225C3D00((int)v391, "__has_trivial_destructor");
      sub_2225F2E2C(v2, v391[0], v391[1]);
    }
    if (sub_22264FE40(201, *v3))
    {
      sub_2225C3D00((int)v390, "__has_virtual_destructor");
      sub_2225F2E2C(v2, v390[0], v390[1]);
    }
    if (sub_22264FE40(202, *v3))
    {
      sub_2225C3D00((int)v389, "__is_abstract");
      sub_2225F2E2C(v2, v389[0], v389[1]);
    }
    if (sub_22264FE40(203, *v3))
    {
      sub_2225C3D00((int)v388, "__is_base_of");
      sub_2225F2E2C(v2, v388[0], v388[1]);
    }
    if (sub_22264FE40(204, *v3))
    {
      sub_2225C3D00((int)v387, "__is_class");
      sub_2225F2E2C(v2, v387[0], v387[1]);
    }
    if (sub_22264FE40(205, *v3))
    {
      sub_2225C3D00((int)v386, "__is_convertible_to");
      sub_2225F2E2C(v2, v386[0], v386[1]);
    }
    if (sub_22264FE40(206, *v3))
    {
      sub_2225C3D00((int)v385, "__is_empty");
      sub_2225F2E2C(v2, v385[0], v385[1]);
    }
    if (sub_22264FE40(207, *v3))
    {
      sub_2225C3D00((int)v384, "__is_enum");
      sub_2225F2E2C(v2, v384[0], v384[1]);
    }
    if (sub_22264FE40(208, *v3))
    {
      sub_2225C3D00((int)v383, "__is_final");
      sub_2225F2E2C(v2, v383[0], v383[1]);
    }
    if (sub_22264FE40(209, *v3))
    {
      sub_2225C3D00((int)v382, "__is_literal");
      sub_2225F2E2C(v2, v382[0], v382[1]);
    }
    if (sub_22264FE40(210, *v3))
    {
      sub_2225C3D00((int)v381, "__is_pod");
      sub_2225F2E2C(v2, v381[0], v381[1]);
    }
    if (sub_22264FE40(211, *v3))
    {
      sub_2225C3D00((int)v380, "__is_polymorphic");
      sub_2225F2E2C(v2, v380[0], v380[1]);
    }
    if (sub_22264FE40(212, *v3))
    {
      sub_2225C3D00((int)v379, "__is_trivial");
      sub_2225F2E2C(v2, v379[0], v379[1]);
    }
    if (sub_22264FE40(213, *v3))
    {
      sub_2225C3D00((int)v378, "__is_union");
      sub_2225F2E2C(v2, v378[0], v378[1]);
    }
    if (sub_22264FE40(214, *v3))
    {
      sub_2225C3D00((int)v377, "__is_trivially_constructible");
      sub_2225F2E2C(v2, v377[0], v377[1]);
    }
    if (sub_22264FE40(215, *v3))
    {
      sub_2225C3D00((int)v376, "__is_trivially_copyable");
      sub_2225F2E2C(v2, v376[0], v376[1]);
    }
    if (sub_22264FE40(216, *v3))
    {
      sub_2225C3D00((int)v375, "__is_trivially_assignable");
      sub_2225F2E2C(v2, v375[0], v375[1]);
    }
    if (sub_22264FE40(217, *v3))
    {
      sub_2225C3D00((int)v374, "__underlying_type");
      sub_2225F2E2C(v2, v374[0], v374[1]);
    }
    if (sub_22264FE40(218, *v3))
    {
      sub_2225C3D00((int)v373, "__is_lvalue_expr");
      sub_2225F2E2C(v2, v373[0], v373[1]);
    }
    if (sub_22264FE40(219, *v3))
    {
      sub_2225C3D00((int)v372, "__is_rvalue_expr");
      sub_2225F2E2C(v2, v372[0], v372[1]);
    }
    if (sub_22264FE40(220, *v3))
    {
      sub_2225C3D00((int)v371, "__is_arithmetic");
      sub_2225F2E2C(v2, v371[0], v371[1]);
    }
    if (sub_22264FE40(221, *v3))
    {
      sub_2225C3D00((int)v370, "__is_floating_point");
      sub_2225F2E2C(v2, v370[0], v370[1]);
    }
    if (sub_22264FE40(222, *v3))
    {
      sub_2225C3D00((int)v369, "__is_integral");
      sub_2225F2E2C(v2, v369[0], v369[1]);
    }
    if (sub_22264FE40(223, *v3))
    {
      sub_2225C3D00((int)v368, "__is_complete_type");
      sub_2225F2E2C(v2, v368[0], v368[1]);
    }
    if (sub_22264FE40(224, *v3))
    {
      sub_2225C3D00((int)v367, "__is_void");
      sub_2225F2E2C(v2, v367[0], v367[1]);
    }
    if (sub_22264FE40(225, *v3))
    {
      sub_2225C3D00((int)v366, "__is_array");
      sub_2225F2E2C(v2, v366[0], v366[1]);
    }
    if (sub_22264FE40(226, *v3))
    {
      sub_2225C3D00((int)v365, "__is_function");
      sub_2225F2E2C(v2, v365[0], v365[1]);
    }
    if (sub_22264FE40(227, *v3))
    {
      sub_2225C3D00((int)v364, "__is_reference");
      sub_2225F2E2C(v2, v364[0], v364[1]);
    }
    if (sub_22264FE40(228, *v3))
    {
      sub_2225C3D00((int)v363, "__is_lvalue_reference");
      sub_2225F2E2C(v2, v363[0], v363[1]);
    }
    if (sub_22264FE40(229, *v3))
    {
      sub_2225C3D00((int)v362, "__is_rvalue_reference");
      sub_2225F2E2C(v2, v362[0], v362[1]);
    }
    if (sub_22264FE40(230, *v3))
    {
      sub_2225C3D00((int)v361, "__is_fundamental");
      sub_2225F2E2C(v2, v361[0], v361[1]);
    }
    if (sub_22264FE40(231, *v3))
    {
      sub_2225C3D00((int)v360, "__is_object");
      sub_2225F2E2C(v2, v360[0], v360[1]);
    }
    if (sub_22264FE40(232, *v3))
    {
      sub_2225C3D00((int)v359, "__is_scalar");
      sub_2225F2E2C(v2, v359[0], v359[1]);
    }
    if (sub_22264FE40(233, *v3))
    {
      sub_2225C3D00((int)v358, "__is_compound");
      sub_2225F2E2C(v2, v358[0], v358[1]);
    }
    if (sub_22264FE40(234, *v3))
    {
      sub_2225C3D00((int)v357, "__is_pointer");
      sub_2225F2E2C(v2, v357[0], v357[1]);
    }
    if (sub_22264FE40(235, *v3))
    {
      sub_2225C3D00((int)v356, "__is_member_object_pointer");
      sub_2225F2E2C(v2, v356[0], v356[1]);
    }
    if (sub_22264FE40(236, *v3))
    {
      sub_2225C3D00((int)v355, "__is_member_function_pointer");
      sub_2225F2E2C(v2, v355[0], v355[1]);
    }
    if (sub_22264FE40(237, *v3))
    {
      sub_2225C3D00((int)v354, "__is_member_pointer");
      sub_2225F2E2C(v2, v354[0], v354[1]);
    }
    if (sub_22264FE40(238, *v3))
    {
      sub_2225C3D00((int)v353, "__is_const");
      sub_2225F2E2C(v2, v353[0], v353[1]);
    }
    if (sub_22264FE40(239, *v3))
    {
      sub_2225C3D00((int)v352, "__is_volatile");
      sub_2225F2E2C(v2, v352[0], v352[1]);
    }
    if (sub_22264FE40(240, *v3))
    {
      sub_2225C3D00((int)v351, "__is_standard_layout");
      sub_2225F2E2C(v2, v351[0], v351[1]);
    }
    if (sub_22264FE40(241, *v3))
    {
      sub_2225C3D00((int)v350, "__is_signed");
      sub_2225F2E2C(v2, v350[0], v350[1]);
    }
    if (sub_22264FE40(242, *v3))
    {
      sub_2225C3D00((int)v349, "__is_unsigned");
      sub_2225F2E2C(v2, v349[0], v349[1]);
    }
    if (sub_22264FE40(243, *v3))
    {
      sub_2225C3D00((int)v348, "__is_same");
      sub_2225F2E2C(v2, v348[0], v348[1]);
    }
    if (sub_22264FE40(244, *v3))
    {
      sub_2225C3D00((int)v347, "__is_convertible");
      sub_2225F2E2C(v2, v347[0], v347[1]);
    }
    if (sub_22264FE40(245, *v3))
    {
      sub_2225C3D00((int)v346, "__array_rank");
      sub_2225F2E2C(v2, v346[0], v346[1]);
    }
    if (sub_22264FE40(246, *v3))
    {
      sub_2225C3D00((int)v345, "__array_extent");
      sub_2225F2E2C(v2, v345[0], v345[1]);
    }
    if (sub_22264FE40(247, *v3))
    {
      sub_2225C3D00((int)v344, "__private_extern__");
      sub_2225F2E2C(v2, v344[0], v344[1]);
    }
    if (sub_22264FE40(248, *v3))
    {
      sub_2225C3D00((int)v343, "__module_private__");
      sub_2225F2E2C(v2, v343[0], v343[1]);
    }
    if (sub_22264FE40(249, *v3))
    {
      sub_2225C3D00((int)v342, "__declspec");
      sub_2225F2E2C(v2, v342[0], v342[1]);
    }
    if (sub_22264FE40(250, *v3))
    {
      sub_2225C3D00((int)v341, "__cdecl");
      sub_2225F2E2C(v2, v341[0], v341[1]);
    }
    if (sub_22264FE40(251, *v3))
    {
      sub_2225C3D00((int)v340, "__stdcall");
      sub_2225F2E2C(v2, v340[0], v340[1]);
    }
    if (sub_22264FE40(252, *v3))
    {
      sub_2225C3D00((int)v339, "__fastcall");
      sub_2225F2E2C(v2, v339[0], v339[1]);
    }
    if (sub_22264FE40(253, *v3))
    {
      sub_2225C3D00((int)v338, "__thiscall");
      sub_2225F2E2C(v2, v338[0], v338[1]);
    }
    if (sub_22264FE40(254, *v3))
    {
      sub_2225C3D00((int)v337, "__forceinline");
      sub_2225F2E2C(v2, v337[0], v337[1]);
    }
    if (sub_22264FE40(255, *v3))
    {
      sub_2225C3D00((int)v336, "__unaligned");
      sub_2225F2E2C(v2, v336[0], v336[1]);
    }
    if (sub_22264FE40(256, *v3))
    {
      sub_2225C3D00((int)v335, "__global");
      sub_2225F2E2C(v2, v335[0], v335[1]);
    }
    if (sub_22264FE40(257, *v3))
    {
      sub_2225C3D00((int)v334, "__local");
      sub_2225F2E2C(v2, v334[0], v334[1]);
    }
    if (sub_22264FE40(258, *v3))
    {
      sub_2225C3D00((int)v333, "__constant");
      sub_2225F2E2C(v2, v333[0], v333[1]);
    }
    if (sub_22264FE40(259, *v3))
    {
      sub_2225C3D00((int)v332, "__private");
      sub_2225F2E2C(v2, v332[0], v332[1]);
    }
    if (sub_22264FE40(260, *v3))
    {
      sub_2225C3D00((int)v331, "__kernel");
      sub_2225F2E2C(v2, v331[0], v331[1]);
    }
    if (sub_22264FE40(261, *v3))
    {
      sub_2225C3D00((int)v330, "__read_only");
      sub_2225F2E2C(v2, v330[0], v330[1]);
    }
    if (sub_22264FE40(262, *v3))
    {
      sub_2225C3D00((int)v329, "__write_only");
      sub_2225F2E2C(v2, v329[0], v329[1]);
    }
    if (sub_22264FE40(263, *v3))
    {
      sub_2225C3D00((int)v328, "__read_write");
      sub_2225F2E2C(v2, v328[0], v328[1]);
    }
    if (sub_22264FE40(264, *v3))
    {
      sub_2225C3D00((int)v327, "__builtin_astype");
      sub_2225F2E2C(v2, v327[0], v327[1]);
    }
    if (sub_22264FE40(265, *v3))
    {
      sub_2225C3D00((int)v326, "vec_step");
      sub_2225F2E2C(v2, v326[0], v326[1]);
    }
    if (sub_22264FE40(266, *v3))
    {
      sub_2225C3D00((int)v325, "__pascal");
      sub_2225F2E2C(v2, v325[0], v325[1]);
    }
    if (sub_22264FE40(267, *v3))
    {
      sub_2225C3D00((int)v324, "__vector");
      sub_2225F2E2C(v2, v324[0], v324[1]);
    }
    if (sub_22264FE40(268, *v3))
    {
      sub_2225C3D00((int)v323, "__pixel");
      sub_2225F2E2C(v2, v323[0], v323[1]);
    }
    if (sub_22264FE40(269, *v3))
    {
      sub_2225C3D00((int)v322, "half");
      sub_2225F2E2C(v2, v322[0], v322[1]);
    }
    if (sub_22264FE40(270, *v3))
    {
      sub_2225C3D00((int)v321, "__bridge");
      sub_2225F2E2C(v2, v321[0], v321[1]);
    }
    if (sub_22264FE40(271, *v3))
    {
      sub_2225C3D00((int)v320, "__bridge_transfer");
      sub_2225F2E2C(v2, v320[0], v320[1]);
    }
    if (sub_22264FE40(272, *v3))
    {
      sub_2225C3D00((int)v319, "__bridge_retained");
      sub_2225F2E2C(v2, v319[0], v319[1]);
    }
    if (sub_22264FE40(273, *v3))
    {
      sub_2225C3D00((int)v318, "__bridge_retain");
      sub_2225F2E2C(v2, v318[0], v318[1]);
    }
    if (sub_22264FE40(274, *v3))
    {
      sub_2225C3D00((int)v317, "__nonnull");
      sub_2225F2E2C(v2, v317[0], v317[1]);
    }
    if (sub_22264FE40(275, *v3))
    {
      sub_2225C3D00((int)v316, "__nullable");
      sub_2225F2E2C(v2, v316[0], v316[1]);
    }
    if (sub_22264FE40(276, *v3))
    {
      sub_2225C3D00((int)v315, "__null_unspecified");
      sub_2225F2E2C(v2, v315[0], v315[1]);
    }
    if (sub_22264FE40(277, *v3))
    {
      sub_2225C3D00((int)v314, "__ptr64");
      sub_2225F2E2C(v2, v314[0], v314[1]);
    }
    if (sub_22264FE40(278, *v3))
    {
      sub_2225C3D00((int)v313, "__ptr32");
      sub_2225F2E2C(v2, v313[0], v313[1]);
    }
    if (sub_22264FE40(279, *v3))
    {
      sub_2225C3D00((int)v312, "__sptr");
      sub_2225F2E2C(v2, v312[0], v312[1]);
    }
    if (sub_22264FE40(280, *v3))
    {
      sub_2225C3D00((int)v311, "__uptr");
      sub_2225F2E2C(v2, v311[0], v311[1]);
    }
    if (sub_22264FE40(281, *v3))
    {
      sub_2225C3D00((int)v310, "__w64");
      sub_2225F2E2C(v2, v310[0], v310[1]);
    }
    if (sub_22264FE40(282, *v3))
    {
      sub_2225C3D00((int)v309, "__uuidof");
      sub_2225F2E2C(v2, v309[0], v309[1]);
    }
    if (sub_22264FE40(283, *v3))
    {
      sub_2225C3D00((int)v308, "__try");
      sub_2225F2E2C(v2, v308[0], v308[1]);
    }
    if (sub_22264FE40(284, *v3))
    {
      sub_2225C3D00((int)v307, "__finally");
      sub_2225F2E2C(v2, v307[0], v307[1]);
    }
    if (sub_22264FE40(285, *v3))
    {
      sub_2225C3D00((int)v306, "__leave");
      sub_2225F2E2C(v2, v306[0], v306[1]);
    }
    if (sub_22264FE40(286, *v3))
    {
      sub_2225C3D00((int)v305, "uint64_t");
      sub_2225F2E2C(v2, v305[0], v305[1]);
    }
    if (sub_22264FE40(287, *v3))
    {
      sub_2225C3D00((int)v304, "__if_exists");
      sub_2225F2E2C(v2, v304[0], v304[1]);
    }
    if (sub_22264FE40(288, *v3))
    {
      sub_2225C3D00((int)v303, "__if_not_exists");
      sub_2225F2E2C(v2, v303[0], v303[1]);
    }
    if (sub_22264FE40(289, *v3))
    {
      sub_2225C3D00((int)v302, "__single_inheritance");
      sub_2225F2E2C(v2, v302[0], v302[1]);
    }
    if (sub_22264FE40(290, *v3))
    {
      sub_2225C3D00((int)v301, "__multiple_inheritance");
      sub_2225F2E2C(v2, v301[0], v301[1]);
    }
    if (sub_22264FE40(291, *v3))
    {
      sub_2225C3D00((int)v300, "__virtual_inheritance");
      sub_2225F2E2C(v2, v300[0], v300[1]);
    }
    if (sub_22264FE40(292, *v3))
    {
      sub_2225C3D00((int)v299, "__interface");
      sub_2225F2E2C(v2, v299[0], v299[1]);
    }
    if (sub_22264FE40(293, *v3))
    {
      sub_2225C3D00((int)v298, "__builtin_convertvector");
      sub_2225F2E2C(v2, v298[0], v298[1]);
    }
    if (sub_22264FE40(294, *v3))
    {
      sub_2225C3D00((int)v297, "active");
      sub_2225F2E2C(v2, v297[0], v297[1]);
    }
    if (sub_22264FE40(295, *v3))
    {
      sub_2225C3D00((int)v296, "atomic_uint");
      sub_2225F2E2C(v2, v296[0], v296[1]);
    }
    if (sub_22264FE40(296, *v3))
    {
      sub_2225C3D00((int)v295, "attribute");
      sub_2225F2E2C(v2, v295[0], v295[1]);
    }
    if (sub_22264FE40(297, *v3))
    {
      sub_2225C3D00((int)v294, "bvec2");
      sub_2225F2E2C(v2, v294[0], v294[1]);
    }
    if (sub_22264FE40(298, *v3))
    {
      sub_2225C3D00((int)v293, "bvec3");
      sub_2225F2E2C(v2, v293[0], v293[1]);
    }
    if (sub_22264FE40(299, *v3))
    {
      sub_2225C3D00((int)v292, "bvec4");
      sub_2225F2E2C(v2, v292[0], v292[1]);
    }
    if (sub_22264FE40(300, *v3))
    {
      sub_2225C3D00((int)v291, "buffer");
      sub_2225F2E2C(v2, v291[0], v291[1]);
    }
    if (sub_22264FE40(301, *v3))
    {
      sub_2225C3D00((int)v290, "cast");
      sub_2225F2E2C(v2, v290[0], v290[1]);
    }
    if (sub_22264FE40(302, *v3))
    {
      sub_2225C3D00((int)v289, "centroid");
      sub_2225F2E2C(v2, v289[0], v289[1]);
    }
    if (sub_22264FE40(303, *v3))
    {
      sub_2225C3D00((int)v288, "coherent");
      sub_2225F2E2C(v2, v288[0], v288[1]);
    }
    if (sub_22264FE40(304, *v3))
    {
      sub_2225C3D00((int)v287, "common");
      sub_2225F2E2C(v2, v287[0], v287[1]);
    }
    if (sub_22264FE40(305, *v3))
    {
      sub_2225C3D00((int)v286, "discard");
      sub_2225F2E2C(v2, v286[0], v286[1]);
    }
    if (sub_22264FE40(306, *v3))
    {
      sub_2225C3D00((int)v285, "dmat2");
      sub_2225F2E2C(v2, v285[0], v285[1]);
    }
    if (sub_22264FE40(307, *v3))
    {
      sub_2225C3D00((int)v284, "dmat2x2");
      sub_2225F2E2C(v2, v284[0], v284[1]);
    }
    if (sub_22264FE40(308, *v3))
    {
      sub_2225C3D00((int)v283, "dmat2x3");
      sub_2225F2E2C(v2, v283[0], v283[1]);
    }
    if (sub_22264FE40(309, *v3))
    {
      sub_2225C3D00((int)v282, "dmat2x4");
      sub_2225F2E2C(v2, v282[0], v282[1]);
    }
    if (sub_22264FE40(310, *v3))
    {
      sub_2225C3D00((int)v281, "dmat3");
      sub_2225F2E2C(v2, v281[0], v281[1]);
    }
    if (sub_22264FE40(311, *v3))
    {
      sub_2225C3D00((int)v280, "dmat3x2");
      sub_2225F2E2C(v2, v280[0], v280[1]);
    }
    if (sub_22264FE40(312, *v3))
    {
      sub_2225C3D00((int)v279, "dmat3x3");
      sub_2225F2E2C(v2, v279[0], v279[1]);
    }
    if (sub_22264FE40(313, *v3))
    {
      sub_2225C3D00((int)v278, "dmat3x4");
      sub_2225F2E2C(v2, v278[0], v278[1]);
    }
    if (sub_22264FE40(314, *v3))
    {
      sub_2225C3D00((int)v277, "dmat4");
      sub_2225F2E2C(v2, v277[0], v277[1]);
    }
    if (sub_22264FE40(315, *v3))
    {
      sub_2225C3D00((int)v276, "dmat4x2");
      sub_2225F2E2C(v2, v276[0], v276[1]);
    }
    if (sub_22264FE40(316, *v3))
    {
      sub_2225C3D00((int)v275, "dmat4x3");
      sub_2225F2E2C(v2, v275[0], v275[1]);
    }
    if (sub_22264FE40(317, *v3))
    {
      sub_2225C3D00((int)v274, "dmat4x4");
      sub_2225F2E2C(v2, v274[0], v274[1]);
    }
    if (sub_22264FE40(318, *v3))
    {
      sub_2225C3D00((int)v273, "dvec2");
      sub_2225F2E2C(v2, v273[0], v273[1]);
    }
    if (sub_22264FE40(319, *v3))
    {
      sub_2225C3D00((int)v272, "dvec3");
      sub_2225F2E2C(v2, v272[0], v272[1]);
    }
    if (sub_22264FE40(320, *v3))
    {
      sub_2225C3D00((int)v271, "dvec4");
      sub_2225F2E2C(v2, v271[0], v271[1]);
    }
    if (sub_22264FE40(321, *v3))
    {
      sub_2225C3D00((int)v270, "filter");
      sub_2225F2E2C(v2, v270[0], v270[1]);
    }
    if (sub_22264FE40(322, *v3))
    {
      sub_2225C3D00((int)v269, "fixed");
      sub_2225F2E2C(v2, v269[0], v269[1]);
    }
    if (sub_22264FE40(323, *v3))
    {
      sub_2225C3D00((int)v268, "flat");
      sub_2225F2E2C(v2, v268[0], v268[1]);
    }
    if (sub_22264FE40(324, *v3))
    {
      sub_2225C3D00((int)v267, "fvec2");
      sub_2225F2E2C(v2, v267[0], v267[1]);
    }
    if (sub_22264FE40(325, *v3))
    {
      sub_2225C3D00((int)v266, "fvec3");
      sub_2225F2E2C(v2, v266[0], v266[1]);
    }
    if (sub_22264FE40(326, *v3))
    {
      sub_2225C3D00((int)v265, "fvec4");
      sub_2225F2E2C(v2, v265[0], v265[1]);
    }
    if (sub_22264FE40(327, *v3))
    {
      sub_2225C3D00((int)v264, "highp");
      sub_2225F2E2C(v2, v264[0], v264[1]);
    }
    if (sub_22264FE40(328, *v3))
    {
      sub_2225C3D00((int)v263, "hvec2");
      sub_2225F2E2C(v2, v263[0], v263[1]);
    }
    if (sub_22264FE40(329, *v3))
    {
      sub_2225C3D00((int)v262, "hvec3");
      sub_2225F2E2C(v2, v262[0], v262[1]);
    }
    if (sub_22264FE40(330, *v3))
    {
      sub_2225C3D00((int)v261, "hvec4");
      sub_2225F2E2C(v2, v261[0], v261[1]);
    }
    if (sub_22264FE40(331, *v3))
    {
      sub_2225C3D00((int)v260, "iimage1D");
      sub_2225F2E2C(v2, v260[0], v260[1]);
    }
    if (sub_22264FE40(332, *v3))
    {
      sub_2225C3D00((int)v259, "iimage1DArray");
      sub_2225F2E2C(v2, v259[0], v259[1]);
    }
    if (sub_22264FE40(333, *v3))
    {
      sub_2225C3D00((int)v258, "iimage2D");
      sub_2225F2E2C(v2, v258[0], v258[1]);
    }
    if (sub_22264FE40(334, *v3))
    {
      sub_2225C3D00((int)v257, "iimage2DArray");
      sub_2225F2E2C(v2, v257[0], v257[1]);
    }
    if (sub_22264FE40(335, *v3))
    {
      sub_2225C3D00((int)v256, "iimage2DMS");
      sub_2225F2E2C(v2, v256[0], v256[1]);
    }
    if (sub_22264FE40(336, *v3))
    {
      sub_2225C3D00((int)v255, "iimage2DMSArray");
      sub_2225F2E2C(v2, v255[0], v255[1]);
    }
    if (sub_22264FE40(337, *v3))
    {
      sub_2225C3D00((int)v254, "iimage2DRect");
      sub_2225F2E2C(v2, v254[0], v254[1]);
    }
    if (sub_22264FE40(338, *v3))
    {
      sub_2225C3D00((int)v253, "iimage3D");
      sub_2225F2E2C(v2, v253[0], v253[1]);
    }
    if (sub_22264FE40(339, *v3))
    {
      sub_2225C3D00((int)v252, "iimageBuffer");
      sub_2225F2E2C(v2, v252[0], v252[1]);
    }
    if (sub_22264FE40(340, *v3))
    {
      sub_2225C3D00((int)v251, "iimageCube");
      sub_2225F2E2C(v2, v251[0], v251[1]);
    }
    if (sub_22264FE40(341, *v3))
    {
      sub_2225C3D00((int)v250, "iimageCubeArray");
      sub_2225F2E2C(v2, v250[0], v250[1]);
    }
    if (sub_22264FE40(342, *v3))
    {
      sub_2225C3D00((int)v249, "image1D");
      sub_2225F2E2C(v2, v249[0], v249[1]);
    }
    if (sub_22264FE40(343, *v3))
    {
      sub_2225C3D00((int)v248, "image1DArray");
      sub_2225F2E2C(v2, v248[0], v248[1]);
    }
    if (sub_22264FE40(344, *v3))
    {
      sub_2225C3D00((int)v247, "image1DArrayShadow");
      sub_2225F2E2C(v2, v247[0], v247[1]);
    }
    if (sub_22264FE40(345, *v3))
    {
      sub_2225C3D00((int)v246, "image1DShadow");
      sub_2225F2E2C(v2, v246[0], v246[1]);
    }
    if (sub_22264FE40(346, *v3))
    {
      sub_2225C3D00((int)v245, "image2D");
      sub_2225F2E2C(v2, v245[0], v245[1]);
    }
    if (sub_22264FE40(347, *v3))
    {
      sub_2225C3D00((int)v244, "image2DArray");
      sub_2225F2E2C(v2, v244[0], v244[1]);
    }
    if (sub_22264FE40(348, *v3))
    {
      sub_2225C3D00((int)v243, "image2DArrayShadow");
      sub_2225F2E2C(v2, v243[0], v243[1]);
    }
    if (sub_22264FE40(349, *v3))
    {
      sub_2225C3D00((int)v242, "image2DMS");
      sub_2225F2E2C(v2, v242[0], v242[1]);
    }
    if (sub_22264FE40(350, *v3))
    {
      sub_2225C3D00((int)v241, "image2DMSArray");
      sub_2225F2E2C(v2, v241[0], v241[1]);
    }
    if (sub_22264FE40(351, *v3))
    {
      sub_2225C3D00((int)v240, "image2DRect");
      sub_2225F2E2C(v2, v240[0], v240[1]);
    }
    if (sub_22264FE40(352, *v3))
    {
      sub_2225C3D00((int)v239, "image2DShadow");
      sub_2225F2E2C(v2, v239[0], v239[1]);
    }
    if (sub_22264FE40(353, *v3))
    {
      sub_2225C3D00((int)v238, "image3D");
      sub_2225F2E2C(v2, v238[0], v238[1]);
    }
    if (sub_22264FE40(354, *v3))
    {
      sub_2225C3D00((int)v237, "imageBuffer");
      sub_2225F2E2C(v2, v237[0], v237[1]);
    }
    if (sub_22264FE40(355, *v3))
    {
      sub_2225C3D00((int)v236, "imageCube");
      sub_2225F2E2C(v2, v236[0], v236[1]);
    }
    if (sub_22264FE40(356, *v3))
    {
      sub_2225C3D00((int)v235, "imageCubeArray");
      sub_2225F2E2C(v2, v235[0], v235[1]);
    }
    if (sub_22264FE40(357, *v3))
    {
      sub_2225C3D00((int)v234, "in");
      sub_2225F2E2C(v2, v234[0], v234[1]);
    }
    if (sub_22264FE40(358, *v3))
    {
      sub_2225C3D00((int)v233, "inout");
      sub_2225F2E2C(v2, v233[0], v233[1]);
    }
    if (sub_22264FE40(359, *v3))
    {
      sub_2225C3D00((int)v232, "input");
      sub_2225F2E2C(v2, v232[0], v232[1]);
    }
    if (sub_22264FE40(360, *v3))
    {
      sub_2225C3D00((int)v231, "interface");
      sub_2225F2E2C(v2, v231[0], v231[1]);
    }
    if (sub_22264FE40(361, *v3))
    {
      sub_2225C3D00((int)v230, "invariant");
      sub_2225F2E2C(v2, v230[0], v230[1]);
    }
    if (sub_22264FE40(362, *v3))
    {
      sub_2225C3D00((int)v229, "isampler");
      sub_2225F2E2C(v2, v229[0], v229[1]);
    }
    if (sub_22264FE40(363, *v3))
    {
      sub_2225C3D00((int)v228, "isampler1D");
      sub_2225F2E2C(v2, v228[0], v228[1]);
    }
    if (sub_22264FE40(364, *v3))
    {
      sub_2225C3D00((int)v227, "isampler1DArray");
      sub_2225F2E2C(v2, v227[0], v227[1]);
    }
    if (sub_22264FE40(365, *v3))
    {
      sub_2225C3D00((int)v226, "isampler2D");
      sub_2225F2E2C(v2, v226[0], v226[1]);
    }
    if (sub_22264FE40(366, *v3))
    {
      sub_2225C3D00((int)v225, "isampler2DArray");
      sub_2225F2E2C(v2, v225[0], v225[1]);
    }
    if (sub_22264FE40(367, *v3))
    {
      sub_2225C3D00((int)v224, "isampler2DMS");
      sub_2225F2E2C(v2, v224[0], v224[1]);
    }
    if (sub_22264FE40(368, *v3))
    {
      sub_2225C3D00((int)v223, "isampler2DMSArray");
      sub_2225F2E2C(v2, v223[0], v223[1]);
    }
    if (sub_22264FE40(369, *v3))
    {
      sub_2225C3D00((int)v222, "isampler2DRect");
      sub_2225F2E2C(v2, v222[0], v222[1]);
    }
    if (sub_22264FE40(370, *v3))
    {
      sub_2225C3D00((int)v221, "isampler2DShadow");
      sub_2225F2E2C(v2, v221[0], v221[1]);
    }
    if (sub_22264FE40(371, *v3))
    {
      sub_2225C3D00((int)v220, "isampler3D");
      sub_2225F2E2C(v2, v220[0], v220[1]);
    }
    if (sub_22264FE40(372, *v3))
    {
      sub_2225C3D00((int)v219, "isamplerBuffer");
      sub_2225F2E2C(v2, v219[0], v219[1]);
    }
    if (sub_22264FE40(373, *v3))
    {
      sub_2225C3D00((int)v218, "isamplerCube");
      sub_2225F2E2C(v2, v218[0], v218[1]);
    }
    if (sub_22264FE40(374, *v3))
    {
      sub_2225C3D00((int)v217, "isamplerCubeArray");
      sub_2225F2E2C(v2, v217[0], v217[1]);
    }
    if (sub_22264FE40(375, *v3))
    {
      sub_2225C3D00((int)v216, "ivec2");
      sub_2225F2E2C(v2, v216[0], v216[1]);
    }
    if (sub_22264FE40(376, *v3))
    {
      sub_2225C3D00((int)v215, "ivec3");
      sub_2225F2E2C(v2, v215[0], v215[1]);
    }
    if (sub_22264FE40(377, *v3))
    {
      sub_2225C3D00((int)v214, "ivec4");
      sub_2225F2E2C(v2, v214[0], v214[1]);
    }
    if (sub_22264FE40(378, *v3))
    {
      sub_2225C3D00((int)v213, "layout");
      sub_2225F2E2C(v2, v213[0], v213[1]);
    }
    if (sub_22264FE40(379, *v3))
    {
      sub_2225C3D00((int)v212, "lowp");
      sub_2225F2E2C(v2, v212[0], v212[1]);
    }
    if (sub_22264FE40(380, *v3))
    {
      sub_2225C3D00((int)v211, "mat2");
      sub_2225F2E2C(v2, v211[0], v211[1]);
    }
    if (sub_22264FE40(381, *v3))
    {
      sub_2225C3D00((int)v210, "mat2x2");
      sub_2225F2E2C(v2, v210[0], v210[1]);
    }
    if (sub_22264FE40(382, *v3))
    {
      sub_2225C3D00((int)v209, "mat2x3");
      sub_2225F2E2C(v2, v209[0], v209[1]);
    }
    if (sub_22264FE40(383, *v3))
    {
      sub_2225C3D00((int)v208, "mat2x4");
      sub_2225F2E2C(v2, v208[0], v208[1]);
    }
    if (sub_22264FE40(384, *v3))
    {
      sub_2225C3D00((int)v207, "mat3");
      sub_2225F2E2C(v2, v207[0], v207[1]);
    }
    if (sub_22264FE40(385, *v3))
    {
      sub_2225C3D00((int)v206, "mat3x2");
      sub_2225F2E2C(v2, v206[0], v206[1]);
    }
    if (sub_22264FE40(386, *v3))
    {
      sub_2225C3D00((int)v205, "mat3x3");
      sub_2225F2E2C(v2, v205[0], v205[1]);
    }
    if (sub_22264FE40(387, *v3))
    {
      sub_2225C3D00((int)v204, "mat3x4");
      sub_2225F2E2C(v2, v204[0], v204[1]);
    }
    if (sub_22264FE40(388, *v3))
    {
      sub_2225C3D00((int)v203, "mat4");
      sub_2225F2E2C(v2, v203[0], v203[1]);
    }
    if (sub_22264FE40(389, *v3))
    {
      sub_2225C3D00((int)v202, "mat4x2");
      sub_2225F2E2C(v2, v202[0], v202[1]);
    }
    if (sub_22264FE40(390, *v3))
    {
      sub_2225C3D00((int)v201, "mat4x3");
      sub_2225F2E2C(v2, v201[0], v201[1]);
    }
    if (sub_22264FE40(391, *v3))
    {
      sub_2225C3D00((int)v200, "mat4x4");
      sub_2225F2E2C(v2, v200[0], v200[1]);
    }
    if (sub_22264FE40(392, *v3))
    {
      sub_2225C3D00((int)v199, "mediump");
      sub_2225F2E2C(v2, v199[0], v199[1]);
    }
    if (sub_22264FE40(393, *v3))
    {
      sub_2225C3D00((int)v198, "noinline");
      sub_2225F2E2C(v2, v198[0], v198[1]);
    }
    if (sub_22264FE40(394, *v3))
    {
      sub_2225C3D00((int)v197, "noperspective");
      sub_2225F2E2C(v2, v197[0], v197[1]);
    }
    if (sub_22264FE40(395, *v3))
    {
      sub_2225C3D00((int)v196, "out");
      sub_2225F2E2C(v2, v196[0], v196[1]);
    }
    if (sub_22264FE40(396, *v3))
    {
      sub_2225C3D00((int)v195, "output");
      sub_2225F2E2C(v2, v195[0], v195[1]);
    }
    if (sub_22264FE40(397, *v3))
    {
      sub_2225C3D00((int)v194, "partition");
      sub_2225F2E2C(v2, v194[0], v194[1]);
    }
    if (sub_22264FE40(398, *v3))
    {
      sub_2225C3D00((int)v193, "patch");
      sub_2225F2E2C(v2, v193[0], v193[1]);
    }
    if (sub_22264FE40(399, *v3))
    {
      sub_2225C3D00((int)v192, "precision");
      sub_2225F2E2C(v2, v192[0], v192[1]);
    }
    if (sub_22264FE40(400, *v3))
    {
      sub_2225C3D00((int)v191, "readonly");
      sub_2225F2E2C(v2, v191[0], v191[1]);
    }
    if (sub_22264FE40(401, *v3))
    {
      sub_2225C3D00((int)v190, "resource");
      sub_2225F2E2C(v2, v190[0], v190[1]);
    }
    if (sub_22264FE40(402, *v3))
    {
      sub_2225C3D00((int)v189, "sample");
      sub_2225F2E2C(v2, v189[0], v189[1]);
    }
    if (sub_22264FE40(403, *v3))
    {
      sub_2225C3D00((int)v188, "sampler");
      sub_2225F2E2C(v2, v188[0], v188[1]);
    }
    if (sub_22264FE40(404, *v3))
    {
      sub_2225C3D00((int)v187, "sampler1D");
      sub_2225F2E2C(v2, v187[0], v187[1]);
    }
    if (sub_22264FE40(405, *v3))
    {
      sub_2225C3D00((int)v186, "sampler1DArray");
      sub_2225F2E2C(v2, v186[0], v186[1]);
    }
    if (sub_22264FE40(406, *v3))
    {
      sub_2225C3D00((int)v185, "sampler1DArrayShadow");
      sub_2225F2E2C(v2, v185[0], v185[1]);
    }
    if (sub_22264FE40(407, *v3))
    {
      sub_2225C3D00((int)v184, "sampler1DShadow");
      sub_2225F2E2C(v2, v184[0], v184[1]);
    }
    if (sub_22264FE40(408, *v3))
    {
      sub_2225C3D00((int)v183, "sampler2D");
      sub_2225F2E2C(v2, v183[0], v183[1]);
    }
    if (sub_22264FE40(409, *v3))
    {
      sub_2225C3D00((int)v182, "sampler2DArray");
      sub_2225F2E2C(v2, v182[0], v182[1]);
    }
    if (sub_22264FE40(410, *v3))
    {
      sub_2225C3D00((int)v181, "sampler2DArrayShadow");
      sub_2225F2E2C(v2, v181[0], v181[1]);
    }
    if (sub_22264FE40(411, *v3))
    {
      sub_2225C3D00((int)v180, "sampler2DMS");
      sub_2225F2E2C(v2, v180[0], v180[1]);
    }
    if (sub_22264FE40(412, *v3))
    {
      sub_2225C3D00((int)v179, "sampler2DMSArray");
      sub_2225F2E2C(v2, v179[0], v179[1]);
    }
    if (sub_22264FE40(413, *v3))
    {
      sub_2225C3D00((int)v178, "sampler2DRect");
      sub_2225F2E2C(v2, v178[0], v178[1]);
    }
    if (sub_22264FE40(414, *v3))
    {
      sub_2225C3D00((int)v177, "sampler2DRectShadow");
      sub_2225F2E2C(v2, v177[0], v177[1]);
    }
    if (sub_22264FE40(415, *v3))
    {
      sub_2225C3D00((int)v176, "sampler2DShadow");
      sub_2225F2E2C(v2, v176[0], v176[1]);
    }
    if (sub_22264FE40(416, *v3))
    {
      sub_2225C3D00((int)v175, "sampler3D");
      sub_2225F2E2C(v2, v175[0], v175[1]);
    }
    if (sub_22264FE40(417, *v3))
    {
      sub_2225C3D00((int)v174, "sampler3DRect");
      sub_2225F2E2C(v2, v174[0], v174[1]);
    }
    if (sub_22264FE40(418, *v3))
    {
      sub_2225C3D00((int)v173, "samplerBuffer");
      sub_2225F2E2C(v2, v173[0], v173[1]);
    }
    if (sub_22264FE40(419, *v3))
    {
      sub_2225C3D00((int)v172, "samplerCube");
      sub_2225F2E2C(v2, v172[0], v172[1]);
    }
    if (sub_22264FE40(420, *v3))
    {
      sub_2225C3D00((int)v171, "samplerCubeArray");
      sub_2225F2E2C(v2, v171[0], v171[1]);
    }
    if (sub_22264FE40(421, *v3))
    {
      sub_2225C3D00((int)v170, "samplerCubeArrayShadow");
      sub_2225F2E2C(v2, v170[0], v170[1]);
    }
    if (sub_22264FE40(422, *v3))
    {
      sub_2225C3D00((int)v169, "samplerCubeShadow");
      sub_2225F2E2C(v2, v169[0], v169[1]);
    }
    if (sub_22264FE40(423, *v3))
    {
      sub_2225C3D00((int)v168, "smooth");
      sub_2225F2E2C(v2, v168[0], v168[1]);
    }
    if (sub_22264FE40(424, *v3))
    {
      sub_2225C3D00((int)v167, "subroutine");
      sub_2225F2E2C(v2, v167[0], v167[1]);
    }
    if (sub_22264FE40(425, *v3))
    {
      sub_2225C3D00((int)v166, "superp");
      sub_2225F2E2C(v2, v166[0], v166[1]);
    }
    if (sub_22264FE40(426, *v3))
    {
      sub_2225C3D00((int)v165, "uimage1D");
      sub_2225F2E2C(v2, v165[0], v165[1]);
    }
    if (sub_22264FE40(427, *v3))
    {
      sub_2225C3D00((int)v164, "uimage1DArray");
      sub_2225F2E2C(v2, v164[0], v164[1]);
    }
    if (sub_22264FE40(428, *v3))
    {
      sub_2225C3D00((int)v163, "uimage2D");
      sub_2225F2E2C(v2, v163[0], v163[1]);
    }
    if (sub_22264FE40(429, *v3))
    {
      sub_2225C3D00((int)v162, "uimage2DArray");
      sub_2225F2E2C(v2, v162[0], v162[1]);
    }
    if (sub_22264FE40(430, *v3))
    {
      sub_2225C3D00((int)v161, "uimage2DMS");
      sub_2225F2E2C(v2, v161[0], v161[1]);
    }
    if (sub_22264FE40(431, *v3))
    {
      sub_2225C3D00((int)v160, "uimage2DMSArray");
      sub_2225F2E2C(v2, v160[0], v160[1]);
    }
    if (sub_22264FE40(432, *v3))
    {
      sub_2225C3D00((int)v159, "uimage2DRect");
      sub_2225F2E2C(v2, v159[0], v159[1]);
    }
    if (sub_22264FE40(433, *v3))
    {
      sub_2225C3D00((int)v158, "uimage3D");
      sub_2225F2E2C(v2, v158[0], v158[1]);
    }
    if (sub_22264FE40(434, *v3))
    {
      sub_2225C3D00((int)v157, "uimageBuffer");
      sub_2225F2E2C(v2, v157[0], v157[1]);
    }
    if (sub_22264FE40(435, *v3))
    {
      sub_2225C3D00((int)v156, "uimageCube");
      sub_2225F2E2C(v2, v156[0], v156[1]);
    }
    if (sub_22264FE40(436, *v3))
    {
      sub_2225C3D00((int)v155, "uimageCubeArray");
      sub_2225F2E2C(v2, v155[0], v155[1]);
    }
    if (sub_22264FE40(437, *v3))
    {
      sub_2225C3D00((int)v154, "uint");
      sub_2225F2E2C(v2, v154[0], v154[1]);
    }
    if (sub_22264FE40(438, *v3))
    {
      sub_2225C3D00((int)v153, "uniform");
      sub_2225F2E2C(v2, v153[0], v153[1]);
    }
    if (sub_22264FE40(439, *v3))
    {
      sub_2225C3D00((int)v152, "usampler");
      sub_2225F2E2C(v2, v152[0], v152[1]);
    }
    if (sub_22264FE40(440, *v3))
    {
      sub_2225C3D00((int)v151, "usampler1D");
      sub_2225F2E2C(v2, v151[0], v151[1]);
    }
    if (sub_22264FE40(441, *v3))
    {
      sub_2225C3D00((int)v150, "usampler1DArray");
      sub_2225F2E2C(v2, v150[0], v150[1]);
    }
    if (sub_22264FE40(442, *v3))
    {
      sub_2225C3D00((int)v149, "usampler2D");
      sub_2225F2E2C(v2, v149[0], v149[1]);
    }
    if (sub_22264FE40(443, *v3))
    {
      sub_2225C3D00((int)v148, "usampler2DArray");
      sub_2225F2E2C(v2, v148[0], v148[1]);
    }
    if (sub_22264FE40(444, *v3))
    {
      sub_2225C3D00((int)v147, "usampler2DMS");
      sub_2225F2E2C(v2, v147[0], v147[1]);
    }
    if (sub_22264FE40(445, *v3))
    {
      sub_2225C3D00((int)v146, "usampler2DMSArray");
      sub_2225F2E2C(v2, v146[0], v146[1]);
    }
    if (sub_22264FE40(446, *v3))
    {
      sub_2225C3D00((int)v145, "usampler2DRect");
      sub_2225F2E2C(v2, v145[0], v145[1]);
    }
    if (sub_22264FE40(447, *v3))
    {
      sub_2225C3D00((int)v144, "usampler3D");
      sub_2225F2E2C(v2, v144[0], v144[1]);
    }
    if (sub_22264FE40(448, *v3))
    {
      sub_2225C3D00((int)v143, "usamplerBuffer");
      sub_2225F2E2C(v2, v143[0], v143[1]);
    }
    if (sub_22264FE40(449, *v3))
    {
      sub_2225C3D00((int)v142, "usamplerCube");
      sub_2225F2E2C(v2, v142[0], v142[1]);
    }
    if (sub_22264FE40(450, *v3))
    {
      sub_2225C3D00((int)v141, "usamplerCubeArray");
      sub_2225F2E2C(v2, v141[0], v141[1]);
    }
    if (sub_22264FE40(451, *v3))
    {
      sub_2225C3D00((int)v140, "uvec2");
      sub_2225F2E2C(v2, v140[0], v140[1]);
    }
    if (sub_22264FE40(452, *v3))
    {
      sub_2225C3D00((int)v139, "uvec3");
      sub_2225F2E2C(v2, v139[0], v139[1]);
    }
    if (sub_22264FE40(453, *v3))
    {
      sub_2225C3D00((int)v138, "uvec4");
      sub_2225F2E2C(v2, v138[0], v138[1]);
    }
    if (sub_22264FE40(454, *v3))
    {
      sub_2225C3D00((int)v137, "varying");
      sub_2225F2E2C(v2, v137[0], v137[1]);
    }
    if (sub_22264FE40(455, *v3))
    {
      sub_2225C3D00((int)v136, "vec2");
      sub_2225F2E2C(v2, v136[0], v136[1]);
    }
    if (sub_22264FE40(456, *v3))
    {
      sub_2225C3D00((int)v135, "vec3");
      sub_2225F2E2C(v2, v135[0], v135[1]);
    }
    if (sub_22264FE40(457, *v3))
    {
      sub_2225C3D00((int)v134, "vec4");
      sub_2225F2E2C(v2, v134[0], v134[1]);
    }
    if (sub_22264FE40(458, *v3))
    {
      sub_2225C3D00((int)v133, "writeonly");
      sub_2225F2E2C(v2, v133[0], v133[1]);
    }
    if (sub_22264FE40(459, *v3))
    {
      sub_2225C3D00((int)v132, "kernel");
      sub_2225F2E2C(v2, v132[0], v132[1]);
    }
    if (sub_22264FE40(460, *v3))
    {
      sub_2225C3D00((int)v131, "__attribute__");
      sub_2225F2E2C(v2, v131[0], v131[1]);
    }
    if (sub_22264FE40(461, *v3))
    {
      sub_2225C3D00((int)v130, "sample_f");
      sub_2225F2E2C(v2, v130[0], v130[1]);
    }
    if (sub_22264FE40(462, *v3))
    {
      sub_2225C3D00((int)v129, "sample_h");
      sub_2225F2E2C(v2, v129[0], v129[1]);
    }
    if (sub_22264FE40(463, *v3))
    {
      sub_2225C3D00((int)v128, "sampler_f");
      sub_2225F2E2C(v2, v128[0], v128[1]);
    }
    if (sub_22264FE40(464, *v3))
    {
      sub_2225C3D00((int)v127, "sampler_h");
      sub_2225F2E2C(v2, v127[0], v127[1]);
    }
    if (sub_22264FE40(465, *v3))
    {
      sub_2225C3D00((int)v126, "hmat2");
      sub_2225F2E2C(v2, v126[0], v126[1]);
    }
    if (sub_22264FE40(466, *v3))
    {
      sub_2225C3D00((int)v125, "hmat2x2");
      sub_2225F2E2C(v2, v125[0], v125[1]);
    }
    if (sub_22264FE40(467, *v3))
    {
      sub_2225C3D00((int)v124, "hmat2x3");
      sub_2225F2E2C(v2, v124[0], v124[1]);
    }
    if (sub_22264FE40(468, *v3))
    {
      sub_2225C3D00((int)v123, "hmat2x4");
      sub_2225F2E2C(v2, v123[0], v123[1]);
    }
    if (sub_22264FE40(469, *v3))
    {
      sub_2225C3D00((int)v122, "hmat3");
      sub_2225F2E2C(v2, v122[0], v122[1]);
    }
    if (sub_22264FE40(470, *v3))
    {
      sub_2225C3D00((int)v121, "hmat3x2");
      sub_2225F2E2C(v2, v121[0], v121[1]);
    }
    if (sub_22264FE40(471, *v3))
    {
      sub_2225C3D00((int)v120, "hmat3x3");
      sub_2225F2E2C(v2, v120[0], v120[1]);
    }
    if (sub_22264FE40(472, *v3))
    {
      sub_2225C3D00((int)v119, "hmat3x4");
      sub_2225F2E2C(v2, v119[0], v119[1]);
    }
    if (sub_22264FE40(473, *v3))
    {
      sub_2225C3D00((int)v118, "hmat4");
      sub_2225F2E2C(v2, v118[0], v118[1]);
    }
    if (sub_22264FE40(474, *v3))
    {
      sub_2225C3D00((int)v117, "hmat4x2");
      sub_2225F2E2C(v2, v117[0], v117[1]);
    }
    if (sub_22264FE40(475, *v3))
    {
      sub_2225C3D00((int)v116, "hmat4x3");
      sub_2225F2E2C(v2, v116[0], v116[1]);
    }
    if (sub_22264FE40(476, *v3))
    {
      sub_2225C3D00((int)v115, "hmat4x4");
      sub_2225F2E2C(v2, v115[0], v115[1]);
    }
    if (sub_22264FE40(477, *v3))
    {
      sub_2225C3D00((int)v114, "float2");
      sub_2225F2E2C(v2, v114[0], v114[1]);
    }
    if (sub_22264FE40(478, *v3))
    {
      sub_2225C3D00((int)v113, "float3");
      sub_2225F2E2C(v2, v113[0], v113[1]);
    }
    if (sub_22264FE40(479, *v3))
    {
      sub_2225C3D00((int)v112, "float4");
      sub_2225F2E2C(v2, v112[0], v112[1]);
    }
    if (sub_22264FE40(480, *v3))
    {
      sub_2225C3D00((int)v111, "half2");
      sub_2225F2E2C(v2, v111[0], v111[1]);
    }
    if (sub_22264FE40(481, *v3))
    {
      sub_2225C3D00((int)v110, "half3");
      sub_2225F2E2C(v2, v110[0], v110[1]);
    }
    if (sub_22264FE40(482, *v3))
    {
      sub_2225C3D00((int)v109, "half4");
      sub_2225F2E2C(v2, v109[0], v109[1]);
    }
    if (sub_22264FE40(483, *v3))
    {
      sub_2225C3D00((int)v108, "float2x2");
      sub_2225F2E2C(v2, v108[0], v108[1]);
    }
    if (sub_22264FE40(484, *v3))
    {
      sub_2225C3D00((int)v107, "float3x3");
      sub_2225F2E2C(v2, v107[0], v107[1]);
    }
    if (sub_22264FE40(485, *v3))
    {
      sub_2225C3D00((int)v106, "float4x4");
      sub_2225F2E2C(v2, v106[0], v106[1]);
    }
    if (sub_22264FE40(486, *v3))
    {
      sub_2225C3D00((int)v105, "half2x2");
      sub_2225F2E2C(v2, v105[0], v105[1]);
    }
    if (sub_22264FE40(487, *v3))
    {
      sub_2225C3D00((int)v104, "half3x3");
      sub_2225F2E2C(v2, v104[0], v104[1]);
    }
    if (sub_22264FE40(488, *v3))
    {
      sub_2225C3D00((int)v103, "half4x4");
      sub_2225F2E2C(v2, v103[0], v103[1]);
    }
    if (sub_22264FE40(489, *v3))
    {
      sub_2225C3D00((int)v102, "hsampler");
      sub_2225F2E2C(v2, v102[0], v102[1]);
    }
    if (sub_22264FE40(490, *v3))
    {
      sub_2225C3D00((int)v101, "hsampler2D");
      sub_2225F2E2C(v2, v101[0], v101[1]);
    }
    if (sub_22264FE40(491, *v3))
    {
      sub_2225C3D00((int)v100, "__sample");
      sub_2225F2E2C(v2, v100[0], v100[1]);
    }
    if (sub_22264FE40(492, *v3))
    {
      sub_2225C3D00((int)v99, "__color");
      sub_2225F2E2C(v2, v99[0], v99[1]);
    }
    if (sub_22264FE40(493, *v3))
    {
      sub_2225C3D00((int)v98, "__table");
      sub_2225F2E2C(v2, v98[0], v98[1]);
    }
    if (sub_22264FE40(494, *v3))
    {
      sub_2225C3D00((int)v97, "__unknown_anytype");
      sub_2225F2E2C(v2, v97[0], v97[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 3u))
    {
      sub_2225C3D00((int)v96, "radians");
      sub_2225F2E2C(v2, v96[0], v96[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 4u))
    {
      sub_2225C3D00((int)v95, "degrees");
      sub_2225F2E2C(v2, v95[0], v95[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 5u))
    {
      sub_2225C3D00((int)v94, "sin");
      sub_2225F2E2C(v2, v94[0], v94[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 6u))
    {
      sub_2225C3D00((int)v93, "cos");
      sub_2225F2E2C(v2, v93[0], v93[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 7u))
    {
      sub_2225C3D00((int)v92, "tan");
      sub_2225F2E2C(v2, v92[0], v92[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 8u))
    {
      sub_2225C3D00((int)v91, "asin");
      sub_2225F2E2C(v2, v91[0], v91[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 9u))
    {
      sub_2225C3D00((int)v90, "acos");
      sub_2225F2E2C(v2, v90[0], v90[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0xAu))
    {
      sub_2225C3D00((int)v89, "atan");
      sub_2225F2E2C(v2, v89[0], v89[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0xBu))
    {
      sub_2225C3D00((int)v88, "atan");
      sub_2225F2E2C(v2, v88[0], v88[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0xCu))
    {
      sub_2225C3D00((int)v87, "sinh");
      sub_2225F2E2C(v2, v87[0], v87[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0xDu))
    {
      sub_2225C3D00((int)v86, "cosh");
      sub_2225F2E2C(v2, v86[0], v86[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0xEu))
    {
      sub_2225C3D00((int)v85, "tanh");
      sub_2225F2E2C(v2, v85[0], v85[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0xFu))
    {
      sub_2225C3D00((int)v84, "asinh");
      sub_2225F2E2C(v2, v84[0], v84[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x10u))
    {
      sub_2225C3D00((int)v83, "acosh");
      sub_2225F2E2C(v2, v83[0], v83[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x11u))
    {
      sub_2225C3D00((int)v82, "atanh");
      sub_2225F2E2C(v2, v82[0], v82[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x12u))
    {
      sub_2225C3D00((int)v81, "pow");
      sub_2225F2E2C(v2, v81[0], v81[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x13u))
    {
      sub_2225C3D00((int)v80, "exp");
      sub_2225F2E2C(v2, v80[0], v80[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x14u))
    {
      sub_2225C3D00((int)v79, "log");
      sub_2225F2E2C(v2, v79[0], v79[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x15u))
    {
      sub_2225C3D00((int)v78, "exp2");
      sub_2225F2E2C(v2, v78[0], v78[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x16u))
    {
      sub_2225C3D00((int)v77, "log2");
      sub_2225F2E2C(v2, v77[0], v77[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x17u))
    {
      sub_2225C3D00((int)v76, "sqrt");
      sub_2225F2E2C(v2, v76[0], v76[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x18u))
    {
      sub_2225C3D00((int)v75, "inversesqrt");
      sub_2225F2E2C(v2, v75[0], v75[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x19u))
    {
      sub_2225C3D00((int)v74, "abs");
      sub_2225F2E2C(v2, v74[0], v74[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x1Au))
    {
      sub_2225C3D00((int)v73, "sign");
      sub_2225F2E2C(v2, v73[0], v73[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x1Bu))
    {
      sub_2225C3D00((int)v72, "floor");
      sub_2225F2E2C(v2, v72[0], v72[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x1Cu))
    {
      sub_2225C3D00((int)v71, "trunc");
      sub_2225F2E2C(v2, v71[0], v71[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x1Du))
    {
      sub_2225C3D00((int)v70, "round");
      sub_2225F2E2C(v2, v70[0], v70[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x1Eu))
    {
      sub_2225C3D00((int)v69, "roundEven");
      sub_2225F2E2C(v2, v69[0], v69[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x1Fu))
    {
      sub_2225C3D00((int)v68, "ceil");
      sub_2225F2E2C(v2, v68[0], v68[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x20u))
    {
      sub_2225C3D00((int)v67, "fract");
      sub_2225F2E2C(v2, v67[0], v67[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x21u))
    {
      sub_2225C3D00((int)v66, "mod");
      sub_2225F2E2C(v2, v66[0], v66[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x22u))
    {
      sub_2225C3D00((int)v65, "modf");
      sub_2225F2E2C(v2, v65[0], v65[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x23u))
    {
      sub_2225C3D00((int)v64, "min");
      sub_2225F2E2C(v2, v64[0], v64[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x24u))
    {
      sub_2225C3D00((int)v63, "max");
      sub_2225F2E2C(v2, v63[0], v63[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x25u))
    {
      sub_2225C3D00((int)v62, "clamp");
      sub_2225F2E2C(v2, v62[0], v62[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x26u))
    {
      sub_2225C3D00((int)v61, "mix");
      sub_2225F2E2C(v2, v61[0], v61[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x27u))
    {
      sub_2225C3D00((int)v60, "mix");
      sub_2225F2E2C(v2, v60[0], v60[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x28u))
    {
      sub_2225C3D00((int)v59, "step");
      sub_2225F2E2C(v2, v59[0], v59[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x29u))
    {
      sub_2225C3D00((int)v58, "smoothstep");
      sub_2225F2E2C(v2, v58[0], v58[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x2Au))
    {
      sub_2225C3D00((int)v57, "isnan");
      sub_2225F2E2C(v2, v57[0], v57[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x2Bu))
    {
      sub_2225C3D00((int)v56, "isinf");
      sub_2225F2E2C(v2, v56[0], v56[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x2Cu))
    {
      sub_2225C3D00((int)v55, "floatBitsToInt");
      sub_2225F2E2C(v2, v55[0], v55[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x2Du))
    {
      sub_2225C3D00((int)v54, "floatBitsToUint");
      sub_2225F2E2C(v2, v54[0], v54[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x2Eu))
    {
      sub_2225C3D00((int)v53, "intBitsToFloat");
      sub_2225F2E2C(v2, v53[0], v53[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x2Fu))
    {
      sub_2225C3D00((int)v52, "uintBitsToFloat");
      sub_2225F2E2C(v2, v52[0], v52[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x30u))
    {
      sub_2225C3D00((int)v51, "packSnorm2x16");
      sub_2225F2E2C(v2, v51[0], v51[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x31u))
    {
      sub_2225C3D00((int)v50, "unpackSnorm2x16");
      sub_2225F2E2C(v2, v50[0], v50[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x32u))
    {
      sub_2225C3D00((int)v49, "packUnorm2x16");
      sub_2225F2E2C(v2, v49[0], v49[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x33u))
    {
      sub_2225C3D00((int)v48, "unpackUnorm2x16");
      sub_2225F2E2C(v2, v48[0], v48[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x34u))
    {
      sub_2225C3D00((int)v47, "packHalf2x16");
      sub_2225F2E2C(v2, v47[0], v47[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x35u))
    {
      sub_2225C3D00((int)v46, "unpackHalf2x16");
      sub_2225F2E2C(v2, v46[0], v46[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x36u))
    {
      sub_2225C3D00((int)v45, "length");
      sub_2225F2E2C(v2, v45[0], v45[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x37u))
    {
      sub_2225C3D00((int)v44, "distance");
      sub_2225F2E2C(v2, v44[0], v44[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x38u))
    {
      sub_2225C3D00((int)v43, "dot");
      sub_2225F2E2C(v2, v43[0], v43[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x39u))
    {
      sub_2225C3D00((int)v42, "cross");
      sub_2225F2E2C(v2, v42[0], v42[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x3Au))
    {
      sub_2225C3D00((int)v41, "normalize");
      sub_2225F2E2C(v2, v41[0], v41[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x3Bu))
    {
      sub_2225C3D00((int)v40, "faceforward");
      sub_2225F2E2C(v2, v40[0], v40[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x3Cu))
    {
      sub_2225C3D00((int)v39, "reflect");
      sub_2225F2E2C(v2, v39[0], v39[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x3Du))
    {
      sub_2225C3D00((int)v38, "refract");
      sub_2225F2E2C(v2, v38[0], v38[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x3Eu))
    {
      sub_2225C3D00((int)v37, "matrixCompMult");
      sub_2225F2E2C(v2, v37[0], v37[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x3Fu))
    {
      sub_2225C3D00((int)v36, "outerProduct");
      sub_2225F2E2C(v2, v36[0], v36[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x40u))
    {
      sub_2225C3D00((int)v35, "transpose");
      sub_2225F2E2C(v2, v35[0], v35[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x41u))
    {
      sub_2225C3D00((int)v34, "determinant");
      sub_2225F2E2C(v2, v34[0], v34[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x42u))
    {
      sub_2225C3D00((int)v33, "inverse");
      sub_2225F2E2C(v2, v33[0], v33[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x43u))
    {
      sub_2225C3D00((int)v32, "lessThan");
      sub_2225F2E2C(v2, v32[0], v32[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x44u))
    {
      sub_2225C3D00((int)v31, "lessThanEqual");
      sub_2225F2E2C(v2, v31[0], v31[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x45u))
    {
      sub_2225C3D00((int)v30, "greaterThan");
      sub_2225F2E2C(v2, v30[0], v30[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x46u))
    {
      sub_2225C3D00((int)v29, "greaterThanEqual");
      sub_2225F2E2C(v2, v29[0], v29[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x47u))
    {
      sub_2225C3D00((int)v28, "equal");
      sub_2225F2E2C(v2, v28[0], v28[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x48u))
    {
      sub_2225C3D00((int)v27, "notEqual");
      sub_2225F2E2C(v2, v27[0], v27[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x49u))
    {
      sub_2225C3D00((int)v26, "any");
      sub_2225F2E2C(v2, v26[0], v26[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x4Au))
    {
      sub_2225C3D00((int)v25, "all");
      sub_2225F2E2C(v2, v25[0], v25[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x4Bu))
    {
      sub_2225C3D00((int)v24, "not");
      sub_2225F2E2C(v2, v24[0], v24[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x4Cu))
    {
      sub_2225C3D00((int)v23, "$assert");
      sub_2225F2E2C(v2, v23[0], v23[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x4Du))
    {
      sub_2225C3D00((int)v22, "sample");
      sub_2225F2E2C(v2, v22[0], v22[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x4Eu))
    {
      sub_2225C3D00((int)v21, "samplerTransform");
      sub_2225F2E2C(v2, v21[0], v21[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x4Fu))
    {
      sub_2225C3D00((int)v20, "samplerExtent");
      sub_2225F2E2C(v2, v20[0], v20[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x50u))
    {
      sub_2225C3D00((int)v19, "samplerCoord");
      sub_2225F2E2C(v2, v19[0], v19[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 0x51u))
    {
      sub_2225C3D00((int)v18, "texture2D");
      sub_2225F2E2C(v2, v18[0], v18[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 1u))
    {
      sub_2225C3D00((int)v17, "ci_outColorF");
      sub_2225F2E2C(v2, v17[0], v17[1]);
    }
    if (sub_2226A9534((uint64_t *)&v517, 2u))
    {
      sub_2225C3D00((int)v16, "ci_outColorH");
      sub_2225F2E2C(v2, v16[0], v16[1]);
    }
    unsigned int v15 = (void *)sub_2226A957C(v2);
    uint64_t v14 = sub_2226A9580(v2);
    while (sub_2225DE624(&v15, &v14))
    {
      uint64_t v4 = sub_2225E4210((uint64_t)&v15);
      sub_222688E1C(v13, *(void *)(v4 + 8));
      if (!sub_22268B91C((uint64_t)v13, v5) || !sub_2226A9584(v13) || sub_22268B3E4(v13))
      {
        uint64_t v6 = sub_2225CED2C(v0[1]);
        int v7 = (unsigned int *)sub_2225E4210((uint64_t)&v15);
        uint64_t v8 = sub_2225E42A0(v7);
        sub_2226A0AEC(&v12, v6, v8, v9);
        uint64_t v11 = sub_2226A0AF0(&v12);
        sub_22268CDE0(v0 + 10, (uint64_t)&v11);
      }
      sub_222688E68(v13);
      sub_2225E42EC(&v15);
    }
    sub_22269A3C0(v0);
  }
  return !v1;
}

uint64_t sub_2226A9534(uint64_t *a1, unsigned int a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_2225C3C70(*(void *)(*a1 + 8));
  uint64_t v5 = sub_22265D828(v4, a2);
  uint64_t v6 = *(void *)(v3 + 16);

  return sub_22265D8D8(v5, v6);
}

BOOL sub_2226A9584(_DWORD **a1)
{
  return sub_22263E560(*a1) == 6;
}

uint64_t sub_2226A95A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  v12[0] = a2;
  v12[1] = a3;
  v11[0] = (uint64_t)v12;
  v11[1] = a1;
  if (!sub_2226A9720(v11))
  {
    while (sub_22261CB34(a1 + 32, 1) && sub_22261CB34(a1 + 32, 0))
    {
      uint64_t result = sub_22261BFB4(a1 + 32);
      switch((int)result)
      {
        case 19:
          sub_2226A07E0(a1);
          uint64_t v9 = a1;
          int v10 = 20;
          goto LABEL_14;
        case 20:
          sub_2226A07E0(a1);
          goto LABEL_17;
        case 21:
          sub_22269AD24(a1);
          uint64_t v9 = a1;
          int v10 = 22;
          goto LABEL_14;
        case 22:
          sub_22269AD24(a1);
          goto LABEL_17;
        case 23:
          sub_2226A2C64(a1);
          uint64_t v9 = a1;
          int v10 = 24;
LABEL_14:
          sub_2226A3150(v9, v10, 0, 0);
          goto LABEL_17;
        case 24:
          sub_2226A2C64(a1);
          goto LABEL_17;
        default:
          if (result == 3)
          {
            sub_2226A32E8();
          }
          else
          {
            if result == 61 && (a4) {
              return result;
            }
            sub_22269A3C0(a1);
          }
LABEL_17:
          if (sub_2226A9720(v11)) {
            goto LABEL_18;
          }
          break;
      }
    }
  }
LABEL_18:
  uint64_t result = sub_2226A9720(v11);
  if (result)
  {
    if ((a5 & 1) == 0) {
      return sub_22269B17C(a1);
    }
  }
  return result;
}

BOOL sub_2226A9720(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = sub_2225C3C70(*a1);
  uint64_t v4 = sub_2226A9A6C((void *)*a1);
  unsigned __int16 v7 = sub_22261BFB4(v2 + 32);
  uint64_t v5 = sub_2226A9A04(v3, v4, &v7);
  return v5 != sub_2226A9A6C((void *)*a1);
}

uint64_t sub_2226A9798(uint64_t a1)
{
  uint64_t result = sub_2226A32E8();
  if ((result & 1) == 0)
  {
    return sub_2226A3150(a1, 61, 0, 0);
  }
  return result;
}

BOOL sub_2226A97EC(_DWORD *a1, unsigned int a2, _DWORD *a3)
{
  uint64_t v6 = a1 + 8;
  int v7 = sub_22261BFB4((uint64_t)(a1 + 8));
  if (v7 == a2)
  {
    if (a2 == 19)
    {
      ++a1[16];
    }
    else if (a2 == 21)
    {
      ++a1[15];
    }
    else
    {
      ++a1[17];
    }
    *a3 = sub_22269A3C0(a1);
  }
  else
  {
    sub_22269A258((uint64_t)a1, v6, 8, (uint64_t)v9);
    sub_222635F18(v9, a2);
    sub_2225F37F0(v9);
  }
  return v7 != a2;
}

uint64_t sub_2226A98C4(uint64_t a1, unsigned int a2, unsigned int a3, _DWORD *a4)
{
  if (a2 == 24)
  {
    unsigned int v8 = 23;
  }
  else if (a2 == 22)
  {
    unsigned int v8 = 21;
  }
  else
  {
    unsigned int v8 = 19;
  }
  sub_22269A258(a1, (unsigned int *)(a1 + 32), 8, (uint64_t)v10);
  sub_222635F18(v10, a2);
  sub_2225F37F0(v10);
  sub_2226A32DC(a1, a3, 50, (uint64_t)v10);
  sub_222635F18(v10, v8);
  sub_2225F37F0(v10);
  *a4 = sub_2225C3B40((unsigned int *)(a1 + 32));
  sub_2226A3150(a1, a2, 0, 0);
  uint64_t result = sub_22261BFB4(a1 + 32);
  if (result == a2)
  {
    *a4 = sub_2225C3B40((unsigned int *)(a1 + 32));
    return sub_22269A3C0(a1);
  }
  return result;
}

BOOL sub_2226A99C8(uint64_t a1)
{
  for (BOOL result = sub_2226A1A88(a1); !result; BOOL result = sub_2226A1A88(a1))
    sub_222699AFC(a1);
  return result;
}

uint64_t sub_2226A9A04(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v6 = j_j_nullsub_1(a1);
  uint64_t v7 = j_j_nullsub_1(a2);
  uint64_t v8 = sub_2226A9A78(v6, v7, a3, (uint64_t)&v10);
  return sub_2225C5F20(a1, v8);
}

uint64_t sub_2226A9A6C(void *a1)
{
  return *a1 + 2 * a1[1];
}

uint64_t sub_2226A9A78(uint64_t a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    while (*(unsigned __int16 *)sub_2225DC2F8(a4, v4) != *a3)
    {
      v4 += 2;
      if (v4 == a2) {
        return a2;
      }
    }
  }
  return v4;
}

uint64_t sub_2226A9AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  sub_222608F94(a1 + 16, 0);
  sub_2225E0EC4((void *)(a1 + 40));
  sub_22263B708(a1 + 176);
  sub_2225D8FA4(a1 + 456);
  sub_22265B918(a1 + 464);
  *(unsigned char *)(a1 + 552) = 0;
  *(_OWORD *)(a1 + 560) = 0u;
  sub_2225CCD48(a1 + 576, "main");
  sub_2225CAD04(a1 + 600);
  *(unsigned char *)(a1 + 624) = 0;
  *(void *)(a1 + 628) = 0;
  sub_2226C434C(a2, a3, 0, (uint64_t)v7);
  sub_2226A9BB0(a1 + 456, (uint64_t)v7);
  sub_2226A9C10(v7);
  return a1;
}

uint64_t sub_2226A9BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CE10C(a2, a2);
  sub_2226AC750(a1, v4);
  uint64_t v5 = j_j_nullsub_1(a2);
  j_nullsub_1(&v8, v5);
  j_nullsub_1(a1, v6);
  return a1;
}

uint64_t sub_2226A9C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v129[7] = *(char **)MEMORY[0x263EF8340];
  uint64_t v10 = a1 + 456;
  uint64_t v11 = sub_2225CBA80(a1 + 456, a2);
  uint64_t v115 = sub_2226AA4F8(v11, v12);
  sub_2226AA500((uint64_t)v127, v115);
  uint64_t v114 = v10;
  uint64_t v14 = sub_2225CBA80(v10, v13);
  uint64_t v16 = sub_2226AA504(v14, v15);
  sub_2225F3278(&v126);
  uint64_t v113 = sub_2225E8DD0(v16);
  sub_2226AA50C(a2, a5, (uint64_t)v125);
  sub_2226AA550((uint64_t)v124);
  if (!sub_2226AA594((uint64_t)v125, (uint64_t)v124))
  {
LABEL_65:
    sub_2226AABB8(v124);
    sub_2226AABB8(v125);
    return 1;
  }
  while (1)
  {
    sub_2225CF794(v123);
    v116[0] = 0;
    uint64_t v17 = sub_2226AA5EC((uint64_t)v125);
    uint64_t v18 = sub_2226AA5B0(v17);
    v116[0] = v18;
    if (v18)
    {
      if (sub_222608330(v18)) {
        goto LABEL_6;
      }
      v129[0] = (char *)sub_2225CDCF4(v116[0]);
      int v19 = sub_2226650C0(a1 + 16, (uint64_t *)v129);
      uint64_t v20 = v116[0];
      if (v19)
      {
        v129[0] = (char *)sub_2225CDCF4(v116[0]);
        unsigned int v21 = sub_22260B594(a1 + 16, (uint64_t *)v129);
        sub_222628314(v20, *v21);
LABEL_6:
        int v22 = 4;
        goto LABEL_7;
      }
      uint64_t v34 = "filter";
      if (sub_2226AA60C(v116[0]))
      {
        uint64_t v35 = v116[0];
        sub_2226AA618(v116[0], v129);
        sub_2226AA6DC(v35, v117);
        while (sub_2226AA760(v129, v117))
        {
          sub_2226AA77C((uint64_t)v129);
          sub_2226AA7C0((uint64_t *)v129, v36);
        }
        uint64_t v34 = "coordinate-transform";
      }
      if (sub_2226AA838(v116[0])) {
        uint64_t v37 = "sample-with-transform";
      }
      else {
        uint64_t v37 = (char *)v34;
      }
      uint64_t v38 = (char *)sub_2225CDCF4(v116[0]);
      sub_2225C3D00((int)v122, v38);
      sub_2225C3D00((int)v121, v37);
      uint64_t v39 = sub_2225CD198(v122[0], v122[1], v121[0], v121[1], 0);
      sub_2225F3278(&v120);
      unsigned int v40 = sub_2226490F0(v113, v39, 0, 0, 0, v120);
      sub_22263F1C8(v16, v40, 0, v126);
      uint64_t v41 = sub_2226AA844(a4);
      uint64_t v43 = sub_2225CBA80(v114, v42);
      uint64_t v45 = sub_2226AA84C(v43, v44);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v41 + 24))(v41, v45, v16);
      sub_2226AA854(a3);
      sub_2225D3DAC(v129);
      uint64_t v46 = 0;
      if (!sub_2226A1A88(a3))
      {
        uint64_t v46 = 0;
        do
        {
          while (1)
          {
            uint64_t v67 = sub_222643C2C(a3);
            if (!sub_22261BABC(v67, 79)) {
              break;
            }
            sub_222699AFC(a3);
            if (sub_2226A1A88(a3)) {
              goto LABEL_21;
            }
          }
          v119[0] = v129;
          v119[1] = v16;
          uint64_t v119[2] = v116;
          sub_2226AA85C(v128, v119);
          uint64_t v46 = sub_222699EE4(a3, (uint64_t)v128);
          sub_2226AA860(v128);
          if (!sub_2225CF1D0(v129))
          {
            uint64_t v68 = (void *)sub_222608644((uint64_t)v129);
            sub_222688E1C(v117, *v68);
            uint64_t v69 = (uint64_t *)sub_2225CED2C(v115);
            sub_222690778(v117, v46, v69);
            sub_222688E68(v117);
          }
        }
        while (!sub_2226A1A88(a3));
      }
LABEL_21:
      uint64_t v47 = (uint64_t *)sub_2225C3C70((uint64_t)v129);
      uint64_t v48 = sub_2225C3D04((uint64_t)v129);
      while (v47 != (uint64_t *)v48)
      {
        uint64_t v49 = *v47++;
        sub_222688E1C(v117, v49);
        sub_22269088C((uint64_t)v117);
        sub_222688E68(v117);
      }
      if (v46 && sub_2226A1A88(a3))
      {
        uint64_t v50 = v116[0];
        uint64_t v51 = sub_2225E55A8(v46);
        sub_222628314(v50, v51);
        uint64_t v52 = sub_222608330(v116[0]);
        v117[0] = sub_2225CDCF4(v116[0]);
        *sub_22260B594(a1 + 16, v117) = v52;
        sub_222649164(v16);
        uint64_t v53 = sub_2226AA844(a4);
        (*(void (**)(uint64_t))(*(void *)v53 + 32))(v53);
        int v22 = 4;
      }
      else
      {
        sub_222688C3C(v115, v126, 2331, (uint64_t)v117);
        uint64_t v66 = sub_2225CDCF4(v116[0]);
        sub_22260A5E8(v117, v66);
        sub_2225F37F0(v117);
        int v22 = 1;
      }
      sub_2225C56C4(v129);
      goto LABEL_7;
    }
    v129[0] = (char *)sub_2226AA5EC((uint64_t)v125);
    if (sub_2226AA864((uint64_t)v129, v23))
    {
      uint64_t v24 = sub_2226AA868((uint64_t)v125);
      uint64_t v26 = sub_2226AA86C(v24, v25);
      sub_2226A9C18(a1, v26, a3, a4, a5);
LABEL_56:
      sub_2225CA520(v123);
      goto LABEL_57;
    }
    uint64_t v27 = sub_2226AA5EC((uint64_t)v125);
    uint64_t v29 = sub_2226AA8A0(v27, v28);
    if (v29)
    {
      uint64_t v30 = (void *)v29;
      sub_2225C3D00((int)v118, "_dc");
      uint64_t v31 = sub_2226AA8DC(v127, v118[0], v118[1]);
      uint64_t v32 = sub_2225E55A8(v31);
      unsigned int v33 = v30;
LABEL_55:
      sub_2225C6954(v33, v32);
      goto LABEL_56;
    }
    uint64_t v54 = sub_2226AA5EC((uint64_t)v125);
    uint64_t v55 = sub_2226AA918(v54);
    if (v55)
    {
      uint64_t v56 = v55;
      sub_2225CBDE8((uint64_t)v117, "c");
      int v57 = sub_2226AA954(v56);
      sub_222688248((uint64_t)v116, v57);
      sub_2225CF9F4(v129, v117, v116);
      uint64_t v58 = sub_2225DBAC4(v129, (uint64_t)v123);
      uint64_t v60 = v59;
      char v61 = sub_2226AA95C(v56);
      uint64_t v62 = sub_2225D5728(v56);
      uint64_t v64 = sub_2226AA968((uint64_t)v127, v62, v63);
      uint64_t v65 = sub_2226AA978((uint64_t)v127, v58, v60, v61, v64, 0, 2);
      if (!v65) {
        goto LABEL_66;
      }
      uint64_t v32 = v65;
      unsigned int v33 = (void *)v56;
      goto LABEL_55;
    }
    uint64_t v70 = sub_2226AA5EC((uint64_t)v125);
    uint64_t v72 = sub_2226AA9D8(v70, v71);
    if (v72)
    {
      uint64_t v73 = v72;
      if (sub_2226AA60C(v72)) {
        uint64_t v74 = "_t";
      }
      else {
        uint64_t v74 = "_u";
      }
      sub_2225CBDE8((uint64_t)v117, v74);
      int v75 = sub_2226AA954(v73);
      sub_222688248((uint64_t)v116, v75);
      sub_2225CF9F4(v129, v117, v116);
      uint64_t v76 = sub_2225DBAC4(v129, (uint64_t)v123);
      uint64_t v78 = v77;
      char v79 = sub_2226AAAD0(v73);
      uint64_t v80 = sub_2226AAA14((uint64_t)v127, v76, v78, v79, 3, 7);
      if (!v80) {
        goto LABEL_66;
      }
      uint64_t v81 = v80;
LABEL_53:
      if (!sub_222692178(v115, v81)) {
        goto LABEL_66;
      }
      unsigned int v33 = (void *)v73;
      uint64_t v32 = v81;
      goto LABEL_55;
    }
    uint64_t v82 = sub_2226AA5EC((uint64_t)v125);
    uint64_t v84 = sub_2226AAADC(v82, v83);
    if (v84) {
      break;
    }
    uint64_t v92 = sub_2226AA5EC((uint64_t)v125);
    uint64_t v94 = sub_2226AAB24(v92, v93);
    if (v94)
    {
      char v95 = (void *)v94;
      if (sub_2226AAB18(v94))
      {
        sub_2225CBDE8((uint64_t)v117, "_i");
        int v96 = sub_2226AA954((uint64_t)v95);
        sub_222688248((uint64_t)v116, v96);
        sub_2225CF9F4(v129, v117, v116);
        uint64_t v97 = sub_2225DBAC4(v129, (uint64_t)v123);
        uint64_t v99 = v98;
        uint64_t v100 = v97;
        uint64_t v101 = v99;
        char v102 = 44;
      }
      else
      {
        sub_2225CBDE8((uint64_t)v117, "_i");
        int v107 = sub_2226AA954((uint64_t)v95);
        sub_222688248((uint64_t)v116, v107);
        sub_2225CF9F4(v129, v117, v116);
        uint64_t v108 = sub_2225DBAC4(v129, (uint64_t)v123);
        uint64_t v110 = v109;
        uint64_t v100 = v108;
        uint64_t v101 = v110;
        char v102 = 43;
      }
      uint64_t v111 = sub_2226AAA14((uint64_t)v127, v100, v101, v102, 1, 7);
      if (v111 && sub_222692178(v115, v111))
      {
        sub_2225C6954(v95, v111);
        goto LABEL_6;
      }
      int v22 = 1;
    }
    else
    {
      int v22 = 0;
    }
LABEL_7:
    sub_2225CA520(v123);
    if (v22 != 4) {
      goto LABEL_67;
    }
LABEL_57:
    sub_2226AAB60(v125);
    if ((sub_2226AA594((uint64_t)v125, (uint64_t)v124) & 1) == 0) {
      goto LABEL_65;
    }
  }
  uint64_t v73 = v84;
  if (sub_2226AAB18(v84))
  {
    sub_2225CBDE8((uint64_t)v117, "_s");
    int v85 = sub_2226AA954(v73);
    sub_222688248((uint64_t)v116, v85);
    sub_2225CF9F4(v129, v117, v116);
    uint64_t v86 = sub_2225DBAC4(v129, (uint64_t)v123);
    uint64_t v88 = v87;
    uint64_t v89 = v86;
    uint64_t v90 = v88;
    char v91 = 42;
  }
  else
  {
    sub_2225CBDE8((uint64_t)v117, "_s");
    int v103 = sub_2226AA954(v73);
    sub_222688248((uint64_t)v116, v103);
    sub_2225CF9F4(v129, v117, v116);
    uint64_t v104 = sub_2225DBAC4(v129, (uint64_t)v123);
    uint64_t v106 = v105;
    uint64_t v89 = v104;
    uint64_t v90 = v106;
    char v91 = 41;
  }
  uint64_t v81 = sub_2226AAA14((uint64_t)v127, v89, v90, v91, 0, 7);
  if (v81) {
    goto LABEL_53;
  }
LABEL_66:
  sub_2225CA520(v123);
LABEL_67:
  sub_2226AABB8(v124);
  sub_2226AABB8(v125);
  return 0;
}

uint64_t sub_2226AA4F8(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA80(a1 + 16, a2);
}

uint64_t sub_2226AA504(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA80(a1 + 56, a2);
}

uint64_t sub_2226AA50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2226AC7F0(a1, a2, (uint64_t)v5);
  sub_2226AC834(a3, v5);
  return sub_2226AC4F0(v5);
}

uint64_t sub_2226AA550@<X0>(uint64_t a1@<X8>)
{
  sub_2226AD0D0((uint64_t)v3);
  sub_2226AC834(a1, v3);
  return sub_2226AC4F0(v3);
}

uint64_t sub_2226AA594(uint64_t a1, uint64_t a2)
{
  return sub_2226AD10C(a1, a2) ^ 1;
}

uint64_t sub_2226AA5B0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226AC6B8(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226AA5EC(uint64_t a1)
{
  return *(void *)sub_2225D2CFC(a1 + 8);
}

uint64_t sub_2226AA60C(uint64_t a1)
{
  return *(unsigned char *)(a1 + 11) & 1;
}

void *sub_2226AA618@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_2226AA5B0(a1);
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = (unsigned __int8 *)sub_2225CED2C(v4);
    uint64_t v8 = sub_222689178(v7);
    return sub_2226AC43C(a2, v6, v8);
  }
  else
  {
    uint64_t v10 = sub_2226AB624(a1, v5);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_2225C5B40(v10);
      return sub_2226AC440(a2, v11, v12);
    }
    else
    {
      return sub_2226AC444(a2, a1);
    }
  }
}

void *sub_2226AA6DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_2226AA5B0(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (unsigned __int8 *)sub_2225CED2C(v4);
    uint64_t v7 = sub_2226891D8(v6);
    return sub_2226AC43C(a2, v5, v7);
  }
  else
  {
    return sub_2226AC444(a2, a1);
  }
}

BOOL sub_2226AA760(void *a1, void *a2)
{
  return !sub_2226AD2B0(a1, a2);
}

uint64_t sub_2226AA77C(uint64_t a1)
{
  BOOL v1 = (void *)(a1 + 8);
  if (sub_222609868((unsigned __int8 *)(a1 + 8))) {
    uint64_t v3 = j_j_nullsub_1(v1);
  }
  else {
    uint64_t v3 = sub_222657F58(v1, v2);
  }
  return *(void *)v3;
}

uint64_t *sub_2226AA7C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1 + 1;
  if (!sub_222689D88(a1 + 1, a2))
  {
    if (sub_2226AA5B0(*a1))
    {
      uint64_t v6 = sub_222657F58(v3, v4) + 8;
      sub_22269014C(v3, &v6);
    }
    else
    {
      sub_222686B94(&v6);
      *uint64_t v3 = v6;
    }
  }
  return a1;
}

uint64_t sub_2226AA838(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 11) >> 1) & 1;
}

uint64_t sub_2226AA844(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t sub_2226AA84C(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA80(a1 + 48, a2);
}

uint64_t sub_2226AA854(uint64_t a1)
{
  return sub_22269A19C(a1, 1);
}

uint64_t sub_2226AA86C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2226AB624(a1, a2);
  if (result)
  {
    return sub_222608330(result);
  }
  return result;
}

uint64_t sub_2226AA8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (sub_2226AB620((uint64_t)&v3, a2)) {
    return sub_2225E55A8(v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226AA8DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2226AB430(a1, a2, a3);

  return sub_2226AC4D4((uint64_t **)a1, v4);
}

uint64_t sub_2226AA918(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226AD72C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226AA954(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 12);
}

uint64_t sub_2226AA95C(uint64_t a1)
{
  return *(unsigned char *)(a1 + 11) & 0x7F;
}

_DWORD *sub_2226AA968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22268DA04(*(uint64_t **)a1, a2, a3, *(_DWORD *)(a1 + 8));
}

uint64_t sub_2226AA978(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned int *a5, char a6, char a7)
{
  uint64_t v9 = sub_2226AAA14(a1, a2, a3, a4, a6, a7);
  uint64_t v10 = sub_2226AC4DC(a1, v9);
  sub_22268BB50(*(uint64_t **)a1, v10, a5, *(_DWORD *)(a1 + 8));
  return v10;
}

uint64_t sub_2226AA9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (sub_2226AB61C((uint64_t)&v3, a2)) {
    return sub_2225E55A8(v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226AAA14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  sub_222694368((uint64_t)v16);
  sub_22269D684((uint64_t)v16, a5);
  sub_22269B12C((uint64_t)v16, a4);
  sub_22269B080((uint64_t)v16, *(_DWORD *)(a1 + 8), a6);
  uint64_t v12 = sub_2226AB430((uint64_t *)a1, a2, a3);
  sub_22269B1BC((uint64_t)v15, (uint64_t)v16, v12, *(_DWORD *)(a1 + 8));
  uint64_t v13 = sub_22268AC64(*(void *)a1, (uint64_t)v15, 1);
  return sub_2226AC4DC(a1, (uint64_t)v13);
}

uint64_t sub_2226AAAD0(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) >> 25;
}

uint64_t sub_2226AAADC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (sub_2226AB614((uint64_t)&v3, a2)) {
    return sub_2225E55A8(v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226AAB18(uint64_t a1)
{
  return *(unsigned char *)(a1 + 11) & 3;
}

uint64_t sub_2226AAB24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (sub_2226AB618((uint64_t)&v3, a2)) {
    return sub_2225E55A8(v3);
  }
  else {
    return 0;
  }
}

uint64_t *sub_2226AAB60(uint64_t *a1)
{
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)sub_2225D2CFC((uint64_t)(a1 + 1));
  nullsub_1(a1, *v3);
  sub_2226AD318(v2);
  if (!sub_2225CF1D0(v2)) {
    sub_2226AC94C(a1);
  }
  return a1;
}

uint64_t sub_2226AABBC(uint64_t a1)
{
  sub_2225F3278(v39);
  uint64_t v3 = sub_2225CBA80(a1 + 456, v2);
  uint64_t v5 = sub_2226C3680(v3, v4);
  uint64_t v7 = sub_2225CBA80(a1 + 456, v6);
  uint64_t v9 = sub_2226AA504(v7, v8);
  uint64_t v11 = sub_2225CBA80(a1 + 456, v10);
  uint64_t v13 = (uint64_t *)sub_2226AA4F8(v11, v12);
  sub_2226AA500((uint64_t)v38, (uint64_t)v13);
  uint64_t v15 = sub_2225CBA80(a1 + 456, v14);
  uint64_t v17 = sub_2226AAE40(v15, v16);
  uint64_t v18 = sub_2225E8DD0(v9);
  sub_222688EC0(v13);
  sub_2226AAE48((uint64_t)v38, 3, 3);
  sub_2225C3D00((int)v37, "_dc");
  sub_2226AAEC0(v38, v37[0], v37[1], 8, 3, 0);
  sub_2225C3D00((int)v36, "p0");
  sub_2226AAEC0(v38, v36[0], v36[1], 8, 3, 8);
  int v19 = (char **)sub_2225C3C70(a1 + 464);
  uint64_t v20 = sub_2225C3D04(a1 + 464);
  if (v19 != (char **)v20)
  {
    unsigned int v21 = (char **)v20;
    do
    {
      sub_2225C3D00((int)v35, *v19);
      sub_2225C3D00((int)v34, "lib");
      uint64_t v22 = sub_2225CD198(v35[0], v35[1], v34[0], v34[1], 0);
      sub_2225F3278(&v33);
      unsigned int v23 = sub_2226490F0(v18, v22, 0, 0, 0, v33);
      sub_22263F1C8(v9, v23, 0, v39[0]);
      uint64_t v24 = sub_2226AA844(v5);
      uint64_t v26 = sub_2225CBA80(a1 + 456, v25);
      uint64_t v28 = sub_2226AA84C(v26, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v24 + 24))(v24, v28, v9);
      sub_2226AA854(v17);
      while (!sub_2226A1A88(v17))
        sub_222699AFC(v17);
      ++v19;
    }
    while (v19 != v21);
  }
  sub_22265B91C(v32);
  uint64_t v29 = sub_2226A9C18(a1, *(void *)a1, v17, v5, (uint64_t)v32);
  uint64_t v30 = sub_2226AA844(v5);
  (*(void (**)(uint64_t))(*(void *)v30 + 40))(v30);
  *(unsigned char *)(a1 + 624) = v29 ^ 1;
  sub_2226489C0(v32);
  return v29;
}

uint64_t sub_2226AAE40(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA80(a1 + 24, a2);
}

uint64_t sub_2226AAE48(uint64_t a1, char a2, char a3)
{
  sub_222694368((uint64_t)v9);
  sub_22269D684((uint64_t)v9, a2);
  sub_22269B12C((uint64_t)v9, a3);
  uint64_t v6 = *(uint64_t **)a1;
  uint64_t v7 = sub_22268CB10(*(uint64_t **)a1, v9, *(_DWORD *)(a1 + 8));
  return sub_222692178((uint64_t)v6, (uint64_t)v7);
}

uint64_t sub_2226AAEC0(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  uint64_t v6 = *a1;
  uint64_t v7 = sub_2226AAA14((uint64_t)a1, a2, a3, a4, a5, a6);

  return sub_222692178(v6, v7);
}

BOOL sub_2226AAEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2225CBA80(a1 + 456, a2);
  uint64_t v10 = (uint64_t *)sub_2226AA4F8(v8, v9);
  sub_2226AA500((uint64_t)v71, (uint64_t)v10);
  sub_2225F3278(&v70);
  sub_2226AA50C(a2, a4, (uint64_t)v69);
  sub_2226AA550((uint64_t)v68);
  if (sub_2226AA594((uint64_t)v69, (uint64_t)v68))
  {
    while (1)
    {
      sub_2225CF794(v67);
      uint64_t v11 = sub_2226AA5EC((uint64_t)v69);
      uint64_t v12 = sub_2226AA5B0(v11);
      if (v12) {
        break;
      }
      v66[0] = (char *)sub_2226AA5EC((uint64_t)v69);
      if ((sub_2226AB614((uint64_t)v66, v34) & 1) == 0)
      {
        v66[0] = (char *)sub_2226AA5EC((uint64_t)v69);
        if ((sub_2226AB618((uint64_t)v66, v35) & 1) == 0)
        {
          uint64_t v36 = sub_2226AA5EC((uint64_t)v69);
          uint64_t v37 = sub_2226AA918(v36);
          if (v37)
          {
            uint64_t v38 = sub_2225C3C70(v37);
            v66[0] = 0;
            v65[0] = v38;
            sub_22261870C(v60, (uint64_t)v65);
            v66[0] = (char *)sub_222692134(v10, v60[0], v60[1]);
            if (v66[0])
            {
              sub_2225CC7B8(a3, v66);
              goto LABEL_14;
            }
            goto LABEL_32;
          }
          v66[0] = (char *)sub_2226AA5EC((uint64_t)v69);
          if ((sub_2226AB61C((uint64_t)v66, v39) & 1) == 0)
          {
            v66[0] = (char *)sub_2226AA5EC((uint64_t)v69);
            if ((sub_2226AB620((uint64_t)v66, v40) & 1) == 0)
            {
              uint64_t v41 = sub_2226AA5EC((uint64_t)v69);
              uint64_t v33 = sub_2226AB624(v41, v42);
              if (!v33) {
                goto LABEL_33;
              }
              sub_2225CBDE8((uint64_t)v65, "_pos_");
              int v43 = sub_2226AB3EC(v33);
              sub_222688248((uint64_t)v64, v43);
              sub_2225CF9F4(v66, v65, v64);
              uint64_t v44 = sub_2225DBAC4(v66, (uint64_t)v67);
              uint64_t v46 = v45;
              sub_2225C3D00((int)v59, "_dc");
              uint64_t v47 = sub_2226AB660(v71, v44, v46, 8, v59[0], v59[1], 0, 0);
              if (v47)
              {
                v66[0] = 0;
                v65[0] = v47;
                sub_22261870C(v58, (uint64_t)v65);
                v66[0] = (char *)sub_222692134(v10, v58[0], v58[1]);
                if (v66[0])
                {
                  sub_2225CC7B8(a3, v66);
                  sub_2225C3D00((int)v57, "_dc");
                  uint64_t v48 = sub_2225C5B40(v33);
                  uint64_t v49 = sub_2226AB750(v48);
                  uint64_t v51 = (unsigned int *)sub_2226AB6DC(v71, v57[0], v57[1], v49, v50, 4);
                  if (v51)
                  {
                    v65[0] = 0;
                    v65[0] = sub_22269252C(v10, v51);
                    if (v65[0])
                    {
                      sub_2225CC7B8(a3, v65);
                      uint64_t v52 = sub_222608330(v33);
                      if (sub_2226AAEFC(a1, v52, a3, a4))
                      {
                        sub_2225C3D00((int)v56, "_dc");
                        uint64_t v53 = (unsigned int *)sub_2226AB6DC(v71, v56[0], v56[1], v44, v46, 4);
                        if (v53)
                        {
                          v64[0] = 0;
                          v64[0] = sub_22269252C(v10, v53);
                          if (v64[0])
                          {
                            sub_2225CC7B8(a3, v64);
                            uint64_t v54 = sub_222608330(v33);
                            uint64_t v32 = sub_2225C3C70(v54);
                            uint64_t v31 = (void *)v33;
LABEL_13:
                            sub_2225C6954(v31, v32);
LABEL_14:
                            LODWORD(v33) = 4;
LABEL_33:
                            sub_2225CA520(v67);
                            if (v33 != 4) {
                              goto LABEL_37;
                            }
                            goto LABEL_34;
                          }
                        }
                      }
                    }
                  }
                }
              }
LABEL_32:
              LODWORD(v33) = 1;
              goto LABEL_33;
            }
          }
        }
      }
      sub_2225CA520(v67);
LABEL_34:
      sub_2226AAB60(v69);
      if ((sub_2226AA594((uint64_t)v69, (uint64_t)v68) & 1) == 0) {
        goto LABEL_35;
      }
    }
    uint64_t v13 = v12;
    if (sub_2226AA60C(v12)) {
      uint64_t v14 = "dc";
    }
    else {
      uint64_t v14 = &byte_2226D1615;
    }
    if (sub_2226AA838(v13)) {
      uint64_t v14 = "rp";
    }
    sub_2225CBDE8((uint64_t)v64, "_");
    int v15 = sub_2226AB3EC(v13);
    sub_222688248((uint64_t)v63, v15);
    sub_2225CF9F4(v65, v64, v63);
    sub_2225CBDE8((uint64_t)v62, v14);
    sub_2225CF9F4(v66, v65, v62);
    uint64_t v16 = sub_2225DBAC4(v66, (uint64_t)v67);
    uint64_t v18 = v17;
    char v19 = sub_2226AB3F8(v13);
    uint64_t v20 = sub_2226AAA14((uint64_t)v71, v16, v18, v19, 0, 0);
    if (!v20
      || (uint64_t v21 = v20,
          uint64_t v22 = sub_222608330(v13),
          uint64_t v23 = sub_222654540(v22),
          uint64_t v25 = sub_2226AB430(v71, v23, v24),
          uint64_t v26 = (unsigned __int8 *)sub_2225CED2C(v13),
          uint64_t v28 = sub_2226AB584(v26, v27),
          (uint64_t v30 = (unsigned int *)sub_2226AB478((uint64_t)v71, v25, v28, v29)) == 0)
      || !sub_22268BB50(v10, v21, v30, v70))
    {
      sub_2225CA520(v67);
      LODWORD(v33) = 1;
      goto LABEL_37;
    }
    v66[0] = 0;
    v65[0] = v21;
    sub_22261870C(v61, (uint64_t)v65);
    v66[0] = (char *)sub_222692134(v10, v61[0], v61[1]);
    if (v66[0])
    {
      sub_2225CC7B8(a3, v66);
      uint64_t v31 = (void *)v13;
      uint64_t v32 = v21;
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_35:
  LODWORD(v33) = 2;
LABEL_37:
  sub_2226AABB8(v68);
  sub_2226AABB8(v69);
  return v33 == 2;
}

uint64_t sub_2226AB3EC(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 8) >> 3) & 0x3FFFF;
}

uint64_t sub_2226AB3F8(uint64_t a1)
{
  uint64_t v4 = sub_222640540(*(void *)(a1 + 24));
  uint64_t v1 = sub_2225C3C70((uint64_t)&v4);
  uint64_t v2 = sub_22265E3C0(v1);
  return sub_222655AE4(v2);
}

uint64_t sub_2226AB430(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_222679644(*a1);
  uint64_t v6 = sub_222690A98(v5);

  return sub_2225F2E2C(v6, a2, a3);
}

uint64_t sub_2226AB478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  v19[0] = a3;
  v19[1] = a4;
  sub_2225D3DAC(v20);
  uint64_t v6 = (uint64_t *)sub_2225C3C70((uint64_t)v19);
  uint64_t v7 = sub_2225DC1A0(v19);
  if (v6 != (uint64_t *)v7)
  {
    uint64_t v8 = (uint64_t *)v7;
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v10 = sub_2226AB750(v9);
      uint64_t v18 = sub_2226AC520((uint64_t *)a1, v10, v11);
      sub_2225CC7B8((uint64_t)v20, &v18);
    }
    while (v6 != v8);
  }
  uint64_t v12 = *(uint64_t **)a1;
  unsigned int v13 = *(_DWORD *)(a1 + 8);
  sub_2226A09E4(v17, v20);
  uint64_t v14 = sub_22268F0C0(v12, v13, a2, v17[0], v17[1], *(_DWORD *)(a1 + 8));
  uint64_t v15 = sub_2226AC4DC(a1, (uint64_t)v14);
  sub_2225C56C4(v20);
  return v15;
}

uint64_t sub_2226AB584(unsigned __int8 *a1, uint64_t a2)
{
  if (sub_222689D88(a1, a2))
  {
    sub_2225CCC70(&v9);
  }
  else if (sub_222609868(a1))
  {
    uint64_t v4 = j_j_nullsub_1(a1);
    sub_22261870C(&v9, v4);
  }
  else
  {
    uint64_t v5 = sub_222657F58(a1, v3);
    uint64_t v6 = sub_2225C3C70(v5);
    uint64_t v7 = sub_2225C3D04(v5);
    sub_222672FC0(&v9, v6, v7);
  }
  return v9;
}

uint64_t sub_2226AB624(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (sub_2226AA864((uint64_t)&v3, a2)) {
    return sub_2225E55A8(v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226AB660(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v14 = sub_2226AC520(a1, a5, a6);

  return sub_2226AA978((uint64_t)a1, a2, a3, a4, v14, a7, a8);
}

uint64_t sub_2226AB6DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v10 = sub_2226AC520(a1, a2, a3);
  uint64_t v11 = sub_2226AC520(a1, a4, a5);

  return sub_2226AC570((uint64_t)a1, (uint64_t)v10, (uint64_t)v11, a6);
}

uint64_t sub_2226AB750(uint64_t a1)
{
  uint64_t v1 = sub_2225C3C70(a1);

  return sub_222654540(v1);
}

BOOL sub_2226AB778(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a2;
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_2225CBA80(a1 + 456, a2);
  uint64_t v8 = (uint64_t *)sub_2226AA4F8(v6, v7);
  sub_2226AA500((uint64_t)v45, (uint64_t)v8);
  *(_DWORD *)(a1 + 628) = v4;
  *(_DWORD *)(a1 + 632) = a3;
  if (*(unsigned char *)(a1 + 624)) {
    return 0;
  }
  uint64_t v9 = sub_222679644((uint64_t)v8);
  uint64_t v10 = sub_2225C5B40(v9);
  if (sub_22263AD28(v10)) {
    return 0;
  }
  sub_2225F3278(&v44);
  sub_222694368((uint64_t)v43);
  sub_22269B12C((uint64_t)v43, 2);
  unsigned int v13 = (char *)sub_2225CBED0(a1 + 576);
  sub_2225C3D00((int)v42, v13);
  uint64_t v14 = sub_2226AB430(v45, v42[0], v42[1]);
  sub_22269A3C4((uint64_t)v47, (uint64_t)v43, v14, v44);
  sub_222688A9C(v41, v8, 9);
  uint64_t v15 = sub_22268C83C(v8, (uint64_t)v47);
  uint64_t v16 = (_WORD *)sub_2225E55A8(v15);
  *(void *)(a1 + 8) = v16;
  sub_2226ABABC(v16);
  if (*(unsigned char *)(a1 + 552)) {
    sub_2226ABAC8(*(void *)(a1 + 8));
  }
  sub_2226ABAD4(*(void *)(a1 + 8), *(void *)(a1 + 560));
  sub_2226ABADC(*(void *)(a1 + 8), *(void *)(a1 + 568));
  sub_22263B708(v46);
  if (!*(_DWORD *)(a1 + 628))
  {
    sub_2225C3D00((int)v40, "_dc");
    sub_2225C3D00((int)v39, "p0");
    uint64_t v17 = (unsigned int *)sub_2226AB6DC(v45, v40[0], v40[1], v39[0], v39[1], 4);
    v38[0] = sub_22269252C(v8, v17);
    sub_2225CC7B8((uint64_t)v46, v38);
  }
  sub_22265B91C(v38);
  BOOL v11 = sub_2226AAEFC(a1, *(void *)a1, (uint64_t)v46, (uint64_t)v38);
  if (v11)
  {
    uint64_t v18 = sub_2226AB750(*(void *)a1);
    uint64_t v20 = (unsigned __int8 *)sub_2226AA8DC(v45, v18, v19);
    uint64_t v37 = sub_222659C34(v20);
    uint64_t v21 = sub_2225C3C70((uint64_t)&v37);
    uint64_t v22 = sub_222654B7C(v21);
    uint64_t v23 = sub_2225C3D04(v22);
    if (sub_222687F08(v23))
    {
      sub_2226ABAE4(*(void *)(a1 + 8), 0);
      sub_2225C3D00((int)v36, "ci_outColorF");
      uint64_t v24 = sub_2226AB750(*(void *)a1);
      uint64_t v26 = v25;
      uint64_t v27 = v36[0];
      uint64_t v28 = v36[1];
    }
    else
    {
      sub_222687F2C(v23);
      sub_2226ABAE4(*(void *)(a1 + 8), 1);
      sub_2225C3D00((int)v35, "ci_outColorH");
      uint64_t v24 = sub_2226AB750(*(void *)a1);
      uint64_t v26 = v29;
      uint64_t v27 = v35[0];
      uint64_t v28 = v35[1];
    }
    uint64_t v30 = (unsigned int *)sub_2226AB6DC(v45, v27, v28, v24, v26, 4);
    uint64_t v37 = sub_22269252C(v8, v30);
    sub_2225CC7B8((uint64_t)v46, &v37);
    uint64_t v31 = *(void *)(a1 + 8);
    int v32 = v44;
    sub_2225D3DDC(v34, v46);
    uint64_t v33 = sub_222692610(v8, v32, v32, v34[0], v34[1]);
    sub_22268C8D0((uint64_t)v8, v31, (uint64_t)v33);
  }
  else
  {
    sub_2225C5D90(v46);
    sub_222692178((uint64_t)v8, *(void *)(a1 + 8));
    sub_222689240((uint64_t)v8);
  }
  sub_2226489C0(v38);
  sub_2225C56C4(v46);
  sub_222688AE0(v41);
  if (v11)
  {
    sub_222692178((uint64_t)v8, *(void *)(a1 + 8));
    sub_222689240((uint64_t)v8);
  }
  sub_22269AD18((uint64_t)v47);
  return v11;
}

_WORD *sub_2226ABABC(_WORD *result)
{
  *((unsigned char *)result + 24) = 1;
  return sub_222672624(result);
}

uint64_t sub_2226ABAC8(uint64_t result)
{
  *(unsigned char *)(result + 153) = 1;
  return result;
}

uint64_t sub_2226ABAD4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 160) = a2;
  return result;
}

uint64_t sub_2226ABADC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 168) = a2;
  return result;
}

uint64_t sub_2226ABAE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

uint64_t sub_2226ABAEC(void *a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_2226ABB28(a1, v2);
}

uint64_t sub_2226ABB28(void *a1, uint64_t a2)
{
  sub_2225CA524(a2, "Filter DAG:\n");
  sub_2226ABBC0(a1, v3, (uint64_t)v7);
  sub_2226ABBC4((uint64_t)v6);
  if (sub_2226ABBC8((uint64_t)v7, (uint64_t)v6))
  {
    do
    {
      uint64_t v4 = sub_2226ABBE4((uint64_t)v7);
      sub_2226ABBE8(v4);
      sub_2226ABC24((uint64_t)v7);
    }
    while ((sub_2226ABBC8((uint64_t)v7, (uint64_t)v6) & 1) != 0);
  }
  sub_2226ABC4C((uint64_t)v6);
  return sub_2226ABC4C((uint64_t)v7);
}

uint64_t sub_2226ABBC8(uint64_t a1, uint64_t a2)
{
  return sub_2226ADA0C(a1, a2) ^ 1;
}

uint64_t sub_2226ABBE8(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();

  return sub_2226ABE24(a1, v2);
}

uint64_t sub_2226ABC24(uint64_t a1)
{
  return a1;
}

void **sub_2226ABC50(uint64_t a1)
{
  uint64_t v2 = (void **)sub_2225E8A38();

  return sub_2226ABC8C(a1, v2);
}

void **sub_2226ABC8C(uint64_t a1, void **a2)
{
  uint64_t v3 = sub_2226ABCCC(a1, 0);

  return sub_2225D47E4(a2, (uint64_t)v3);
}

std::string *sub_2226ABCCC(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  uint64_t v4 = (std::string *)(a1 + 600);
  sub_2225CB97C(a1 + 600, a2);
  std::string::reserve(v4, 0x400uLL);
  sub_222609ACC(v26, v4);
  uint64_t v6 = sub_2225CBA80(a1 + 456, v5);
  uint64_t v8 = sub_2226C3680(v6, v7);
  if (sub_22263AD28(v8))
  {
    sub_2225CA524((uint64_t)v26, "// An error occurred, see stderr for the error message");
  }
  else
  {
    int v10 = *(_DWORD *)(a1 + 628);
    switch(v10)
    {
      case 2:
        uint64_t v15 = sub_2225CBA80(a1 + 456, v9);
        uint64_t v16 = sub_2225C3D04(v15);
        uint64_t v24 = sub_2226ABDF8(v16);
        uint64_t v25 = v17;
        uint64_t v18 = (uint64_t *)sub_2225C3C70((uint64_t)&v24);
        sub_222679B70(*v18, (uint64_t)v26);
        break;
      case 1:
        uint64_t v19 = sub_2225CBA80(a1 + 456, v9);
        uint64_t v20 = sub_2225C3D04(v19);
        uint64_t v24 = sub_2226ABDF8(v20);
        uint64_t v25 = v21;
        uint64_t v22 = (uint64_t *)sub_2225C3C70((uint64_t)&v24);
        sub_22267D174(*v22, (uint64_t)v26, v2);
        break;
      case 0:
        uint64_t v11 = sub_2225CBA80(a1 + 456, v9);
        uint64_t v12 = sub_2225C3D04(v11);
        uint64_t v24 = sub_2226ABDF8(v12);
        uint64_t v25 = v13;
        uint64_t v14 = (uint64_t *)sub_2225C3C70((uint64_t)&v24);
        sub_2226763E4(*v14, (uint64_t)v26);
        break;
    }
  }
  sub_2225E8B2C(v26);
  return v4;
}

uint64_t sub_2226ABDF8(uint64_t a1)
{
  sub_2225D3DDC(&v2, a1 + 144);
  return v2;
}

uint64_t sub_2226ABE24(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = *MEMORY[0x263EF8340];
  sub_2225D3DAC(v60);
  uint64_t v4 = sub_2225CA524(a2, "Node: ");
  unsigned int v5 = sub_2226AB3EC(a1);
  uint64_t v6 = sub_2225CA560(v4, v5);
  sub_2225CA524((uint64_t)v6, "\n");
  uint64_t v7 = sub_2226AA5B0(a1);
  if (v7)
  {
    uint64_t v9 = v7;
    if (sub_2226AA60C(v7)) {
      sub_2225CA524(a2, "  <coordinate transform>\n");
    }
    if (sub_2226AA838(v9)) {
      sub_2225CA524(a2, "  <sample with transform>\n");
    }
    int v10 = sub_2225CA524(a2, "  original source: ");
    uint64_t v11 = (char *)sub_2225CDCF4(v9);
    uint64_t v12 = sub_2225CA524((uint64_t)v10, v11);
    sub_2225CA524((uint64_t)v12, "\n");
    if (sub_222608330(v9))
    {
      sub_2225CA524(a2, "  printed AST: ");
      uint64_t v13 = (unsigned __int16 *)sub_222608330(v9);
      sub_222653138(v13, a2);
    }
    sub_2225CA524(a2, "  children:");
    sub_2226AC278(v9, (uint64_t)v59);
    sub_2226AC2D0(v9, v58);
    while (sub_2226AA760(v59, v58))
    {
      uint64_t v14 = sub_2226AC354((uint64_t)v59);
      uint64_t v15 = sub_2225CA524(a2, " ");
      unsigned int v16 = sub_2226AB3EC(v14);
      sub_2225CA560(v15, v16);
      sub_2226AC398(v59, v17);
    }
    uint64_t v18 = "\n";
    goto LABEL_11;
  }
  uint64_t v20 = sub_2226AAADC(a1, v8);
  if (v20)
  {
    uint64_t v22 = v20;
    uint64_t v23 = sub_2225CA524(a2, "  sampler: ");
    unsigned int v24 = sub_2226AA954(v22);
LABEL_16:
    uint64_t v26 = sub_2225CA560(v23, v24);
    sub_2225CA524((uint64_t)v26, "\n");
    sub_2225CA524(a2, "  printed: ");
    uint64_t v27 = (unsigned __int16 *)sub_2225C3C70(v22);
    sub_222653138(v27, a2);
    uint64_t v19 = (void **)a2;
LABEL_17:
    uint64_t v18 = "\n";
    goto LABEL_18;
  }
  uint64_t v25 = sub_2226AAB24(a1, v21);
  if (v25)
  {
    uint64_t v22 = v25;
    uint64_t v23 = sub_2225CA524(a2, "  image: ");
    unsigned int v24 = sub_2226AA954(v22);
    goto LABEL_16;
  }
  uint64_t v33 = sub_2226AA918(a1);
  if (v33)
  {
    uint64_t v35 = v33;
    uint64_t v36 = sub_2225CA524(a2, "  constant: ");
    unsigned int v37 = sub_2226AA954(v35);
    uint64_t v38 = sub_2225CA560(v36, v37);
    sub_2225CA524((uint64_t)v38, "\n");
    uint64_t v39 = sub_2225CA524(a2, "  value: ");
    uint64_t v40 = sub_2225D5728(v35);
    uint64_t v19 = sub_2225CA568((uint64_t)v39, v40, v41);
    goto LABEL_17;
  }
  uint64_t v42 = sub_2226AA9D8(a1, v34);
  if (v42)
  {
    uint64_t v44 = v42;
    if (sub_2226AA60C(v42)) {
      sub_2225CA524(a2, "  <transform>\n");
    }
    uint64_t v45 = sub_2225CA524(a2, "  uniform: ");
    unsigned int v46 = sub_2226AA954(v44);
    uint64_t v19 = sub_2225CA560(v45, v46);
    uint64_t v18 = "\n";
    goto LABEL_18;
  }
  uint64_t v47 = sub_2226AB624(a1, v43);
  if (!v47)
  {
    v59[0] = a1;
    sub_2226AB620((uint64_t)v59, v48);
    uint64_t v18 = "  position use <_dc>\n";
LABEL_11:
    uint64_t v19 = (void **)a2;
LABEL_18:
    sub_2225CA524((uint64_t)v19, v18);
    goto LABEL_19;
  }
  uint64_t v49 = v47;
  uint64_t v50 = sub_2225CA524(a2, "  new position: ");
  uint64_t v51 = sub_2225C5B40(v49);
  unsigned int v52 = sub_2226AB3EC(v51);
  uint64_t v53 = sub_2225CA560(v50, v52);
  sub_2225CA524((uint64_t)v53, "\n");
  uint64_t v54 = sub_2225CA524(a2, "  continuation: ");
  uint64_t v55 = sub_222608330(v49);
  unsigned int v56 = sub_2226AB3EC(v55);
  int v57 = sub_2225CA560(v54, v56);
  sub_2225CA524((uint64_t)v57, "\n");
  v59[0] = sub_222608330(v49);
  sub_2225CC7B8((uint64_t)v60, v59);
LABEL_19:
  sub_2225CA524(a2, "End Filter Node\n\n");
  uint64_t v28 = (uint64_t *)sub_2225C3C70((uint64_t)v60);
  uint64_t v29 = sub_2225C3D04((uint64_t)v60);
  if (v28 != (uint64_t *)v29)
  {
    uint64_t v30 = (uint64_t *)v29;
    do
    {
      uint64_t v31 = *v28++;
      sub_2226ABBE8(v31);
    }
    while (v28 != v30);
  }
  return sub_2225C56C4(v60);
}

uint64_t sub_2226AC278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2226AA618(a1, &v6);
  uint64_t v3 = v6;
  uint64_t v4 = sub_2225CC180((uint64_t)&v7);
  return sub_2226AC600(a2, v3, v4);
}

void *sub_2226AC2D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_2226AA5B0(a1);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (unsigned __int8 *)sub_2225CED2C(v4);
    uint64_t v7 = sub_2226AC638(v6);
    return (void *)sub_2226AC63C(a2, v5, v7);
  }
  else
  {
    return sub_2226AC444(a2, a1);
  }
}

uint64_t sub_2226AC354(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  if (sub_222609868((unsigned __int8 *)(a1 + 8))) {
    uint64_t v3 = j_j_nullsub_1(v1);
  }
  else {
    uint64_t v3 = sub_222608E00(v1, v2);
  }
  return *(void *)v3;
}

uint64_t *sub_2226AC398(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1 + 1;
  if (!sub_222630B24(a1 + 1, a2))
  {
    if (sub_2226AA5B0(*a1))
    {
      uint64_t v6 = sub_222608E00(v3, v4) + 8;
      sub_22262CA68(v3, &v6);
    }
    else
    {
      sub_222686B94(&v6);
      *uint64_t v3 = v6;
    }
  }
  return a1;
}

uint64_t sub_2226AC410(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  sub_2225F3278((_DWORD *)(a1 + 8));
  return a1;
}

void *sub_2226AC448(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  sub_222686F70((uint64_t)(a1 + 1), a3);
  return a1;
}

void *sub_2226AC478(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  sub_222686F6C((uint64_t)(a1 + 1), a3);
  return a1;
}

void *sub_2226AC4A8(void *a1, uint64_t a2)
{
  *a1 = a2;
  sub_222686B94(a1 + 1);
  return a1;
}

uint64_t sub_2226AC4D4(uint64_t **a1, uint64_t a2)
{
  return sub_222690928(*a1, a2);
}

uint64_t sub_2226AC4DC(uint64_t a1, uint64_t a2)
{
  return sub_2226AC4E4(a2);
}

uint64_t sub_2226AC4E4(uint64_t a1)
{
  if (a1) {
    return sub_2225E55A8(a1);
  }
  return a1;
}

uint64_t sub_2226AC4F4(uint64_t a1)
{
  return a1;
}

_DWORD *sub_2226AC520(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2226AB430(a1, a2, a3);

  return sub_2226AC55C((uint64_t)a1, v4);
}

_DWORD *sub_2226AC55C(uint64_t a1, uint64_t a2)
{
  return sub_22268D658(*(uint64_t **)a1, *(_DWORD *)(a1 + 8), a2);
}

uint64_t sub_2226AC570(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = sub_22268EF74(*(uint64_t **)a1, *(_DWORD *)(a1 + 8), a4, a2, a3);

  return sub_2226AC4DC(a1, v5);
}

uint64_t sub_2226AC5C4(uint64_t a1)
{
  sub_2225F3464(a1 + 96);

  return sub_222676A80(a1);
}

void *sub_2226AC604(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  a1[1] = sub_222689778(a3);
  return a1;
}

void *sub_2226AC640(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  sub_2226AC670(a1 + 1, a3);
  return a1;
}

uint64_t sub_2226AC674(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a2, a2);

  return sub_222627EE0(a1, v3, 1);
}

uint64_t sub_2226AC6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226AC6E8(&v3);
}

uint64_t sub_2226AC6E8(void *a1)
{
  return sub_2226AC6F0(*a1);
}

BOOL sub_2226AC6F8(uint64_t a1)
{
  return sub_2226AC718(a1) == 0;
}

uint64_t sub_2226AC718(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) & 7;
}

uint64_t sub_2226AC724(uint64_t a1)
{
  return a1;
}

void *sub_2226AC750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  *uint64_t result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2226AC7C0(v8, v4);
  }
  return result;
}

uint64_t sub_2226AC7C0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 8))(a2);
  }
  return result;
}

uint64_t sub_2226AC7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = nullsub_1(a1, a2);

  return sub_2226AC838(a3, v5, a2);
}

uint64_t *sub_2226AC83C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = a2;
  uint64_t v5 = sub_2225C6954(a1, a3) + 1;
  sub_2225D250C(v5);
  if (sub_2226AC8D0(a1, 0, a2))
  {
    sub_2226AC948(v7, a2);
    sub_2226AC938((uint64_t)&v9, (uint64_t)v7, (uint64_t)v8);
    sub_2226AC8DC(v5, (uint64_t)v8);
    sub_2226AC94C(a1);
  }
  return a1;
}

uint64_t sub_2226AC8D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_222689E60(*a1, a3);
}

uint64_t sub_2226AC8DC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_2226ACAC0(a1, a2);
  }
  else
  {
    sub_2226ACA4C((uint64_t)a1, a2);
    uint64_t result = v4 + 24;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2226AC938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226ACD80(a3, a1, a2);
}

BOOL sub_2226AC94C(uint64_t *a1)
{
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)(sub_2225D2CFC((uint64_t)(a1 + 1)) + 8);
  unint64_t v4 = (void *)sub_2225D2CFC((uint64_t)v2);
  sub_2226ACDB8(v11, *v4);
  for (BOOL result = sub_2226AA760(v3, v11); result; BOOL result = sub_2226AA760(v8, v11))
  {
    uint64_t v12 = 0;
    uint64_t v6 = sub_2225D2CFC((uint64_t)v2);
    sub_2226ACDBC((uint64_t *)(v6 + 8), (uint64_t)v11);
    uint64_t v12 = sub_2226AA77C((uint64_t)v11);
    uint64_t v7 = (uint64_t *)sub_2225D2CFC((uint64_t)v2);
    if (sub_2226AC8D0(a1, *v7, v12))
    {
      sub_2226AC948(v10, v12);
      sub_2226AC938((uint64_t)&v12, (uint64_t)v10, (uint64_t)v11);
      sub_2226AC8DC(v2, (uint64_t)v11);
    }
    uint64_t v8 = (void *)(sub_2225D2CFC((uint64_t)v2) + 8);
    uint64_t v9 = (void *)sub_2225D2CFC((uint64_t)v2);
    sub_2226ACDB8(v11, *v9);
  }
  return result;
}

void *sub_2226ACA4C(uint64_t a1, uint64_t a2)
{
  sub_2225D2844(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_2226ACB70(v5, v7, a2);
  v10 += 24;
  return sub_2225D284C(&v9);
}

uint64_t sub_2226ACAC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  unint64_t v5 = sub_2225D24AC(a1);
  unint64_t v6 = sub_2225D2880(a1, v5 + 1);
  unint64_t v7 = sub_2225D24AC(a1);
  sub_2225D28FC(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2226ACB70(v4, v9, a2);
  v13 += 24;
  sub_2226ACBC4(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225F5D90(v12);
  return v10;
}

uint64_t sub_2226ACB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226ACB80(a2, a3);
}

void *sub_2226ACB84(void *a1, void *a2)
{
  *a1 = *a2;
  sub_2226ACBB4(a1 + 1, a2 + 1);
  return a1;
}

void *sub_2226ACBB8(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  *BOOL result = *a2;
  result[1] = v2;
  return result;
}

uint64_t sub_2226ACBC4(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_2226ACCB4(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  uint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  unint64_t v11 = sub_2225D24AC(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_2226ACCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_2225D2CF8((uint64_t)&v16);
    uint64_t v9 = sub_2225D2CFC((uint64_t)v18);
    sub_2226ACB70(a1, v8, v9);
    sub_2225D2D08((uint64_t)v18);
    sub_2225D2D08((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

void *sub_2226ACD84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_2226ACBB4(a1 + 1, a3);
  return a1;
}

uint64_t *sub_2226ACDBC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2226ACBB4(a2, a1);

  return sub_2226AA7C0(a1, v3);
}

void *sub_2226ACE00(void *a1, void *a2)
{
  uint64_t v4 = sub_2225CE0B0(a1, a2);
  sub_2226ACE38(v4 + 1, a2 + 1);
  return a1;
}

uint64_t *sub_2226ACE3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a1 + 2;
  *a1 = 0;
  a1[1] = 0;
  uint64_t v12 = 0;
  uint64_t v5 = sub_2225D2650((uint64_t)a2, (uint64_t)a2);
  nullsub_1(v5, v6);
  sub_222621D18(v4, &v12, &v11);
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  unint64_t v9 = sub_2225D24AC(a2);
  sub_2226ACEBC(a1, v7, v8, v9);
  return a1;
}

uint64_t sub_2226ACEBC(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_2225C64B8(&v10, (uint64_t)a1);
  sub_2225D5D10(v10, (uint64_t)&v11);
  if (a4)
  {
    sub_222621DDC(a1, a4);
    sub_2226ACF44((uint64_t)a1, a2, a3, a4);
  }
  sub_2225D2D18(&v11);
  return j_nullsub_1(&v11, v8);
}

void *sub_2226ACF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2225D2844(&v10, a1, a4);
  uint64_t v8 = sub_2225D2650(a1, v7);
  uint64_t v11 = sub_2226ACFB0(v8, a2, a3, v11);
  return sub_2225D284C(&v10);
}

uint64_t sub_2226ACFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2225C5E90(a2, a3);
  uint64_t v8 = v7;
  uint64_t v9 = j_j_nullsub_1(a4);
  uint64_t v10 = sub_2226AD024(a1, v6, v8, v9);

  return sub_2225C5F20(a4, v10);
}

uint64_t sub_2226AD024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v16 = a4;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  if (a2 != a3)
  {
    uint64_t v8 = v16;
    do
    {
      uint64_t v9 = nullsub_1(v8, v7);
      sub_2226ACB70(a1, v9, a2);
      a2 += 24;
      uint64_t v8 = v16 + 24;
      v16 += 24;
    }
    while (a2 != a3);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_2226AD0D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2226AD0D8(a1);
}

void *sub_2226AD0DC(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C6954(a1, a2);
  sub_2225D250C(v3 + 1);
  return a1;
}

uint64_t sub_2226AD10C(uint64_t a1, uint64_t a2)
{
  return sub_2226AD118((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
}

uint64_t sub_2226AD118(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = sub_2225D24AC(a1);
  if (v4 != sub_2225D24AC(a2)) {
    return 0;
  }
  uint64_t v5 = sub_2225D2E88(a1);
  uint64_t v6 = sub_2225D24C8((uint64_t)a1);
  uint64_t v7 = sub_2225D2E88(a2);

  return sub_2226AD1AC(v5, v6, v7);
}

BOOL sub_2226AD1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)sub_2225D5844(a1);
  uint64_t v6 = (void *)sub_2225D5844(a2);
  uint64_t v7 = (void *)sub_2225D5844(a3);
  return sub_2226AD214(v5, v6, v7, (uint64_t)&v9);
}

BOOL sub_2226AD214(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v7 = a1;
  do
  {
    BOOL result = sub_2226AD280(a4, v7, a3);
    if (!result) {
      break;
    }
    v7 += 3;
    a3 += 3;
  }
  while (v7 != a2);
  return result;
}

BOOL sub_2226AD280(uint64_t a1, void *a2, void *a3)
{
  return sub_2226AD28C(a2, a3);
}

BOOL sub_2226AD28C(void *a1, void *a2)
{
  return *a1 == *a2 && sub_2226AD2B0(a1 + 1, a2 + 1);
}

BOOL sub_2226AD2B0(void *a1, void *a2)
{
  return *a1 == *a2 && sub_2226AD2D4(a1[1], a2[1]);
}

BOOL sub_2226AD2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v2 = sub_2225CC180((uint64_t)&v5);
  return v2 == sub_2225CC180((uint64_t)&v4);
}

uint64_t sub_2226AD318(void *a1)
{
  return sub_222627568(a1, a1[1] - 24);
}

uint64_t sub_2226AD330(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  uint64_t v4 = sub_22266FAD8();
  sub_22261870C(&v7, (uint64_t)&v9);
  sub_2225E31DC((uint64_t)v8, v4);
  uint64_t v5 = sub_2225C3C70((uint64_t)v8);
  sub_2226AD3B8(v5, a2);
  *(void *)(a1 + 24) = sub_222658AD8(v8);
  sub_22266FAE8(v8);
  return a1;
}

void *sub_2226AD3BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2226AD41C(a1);
  *uint64_t v6 = &unk_26D4DEB70;
  sub_22266FB4C(v6 + 1, a2, a3);
  return a1;
}

void *sub_2226AD41C(void *result)
{
  *BOOL result = &unk_26D4DEBB8;
  return result;
}

void sub_2226AD440()
{
  uint64_t v0 = (void *)j_j_nullsub_1_124();

  j__free(v0);
}

uint64_t sub_2226AD468(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_22266FAD8();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226AD3B8(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_22266FAE8(v7);
  return v4;
}

uint64_t sub_2226AD4E0(uint64_t a1, uint64_t a2)
{
  return sub_2226AD3B8(a2, a1 + 8);
}

uint64_t sub_2226AD4F4(uint64_t a1)
{
  return sub_22266FD48(a1, 1);
}

uint64_t sub_2226AD4FC(uint64_t a1)
{
  return sub_2226AD50C(a1 + 8);
}

uint64_t sub_2226AD514(uint64_t a1, uint64_t *a2)
{
  return sub_2226AD51C(a1, *a2);
}

uint64_t sub_2226AD51C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  sub_2225CC7B8(*(void *)a1, &v20);
  sub_2225CF794(v19);
  uint64_t v3 = sub_222690A98(*(void *)(a1 + 8));
  v16[0] = sub_2225F2418(v20);
  v16[1] = v4;
  sub_2225CBDF0((uint64_t)v17, (uint64_t)v16);
  v14[0] = sub_2225F2418(v20);
  v14[1] = v5;
  sub_2225C3D00((int)v13, "_");
  if (sub_2225D0520((uint64_t)v14, v13[0], (size_t)v13[1]))
  {
    sub_2225CBDE8((uint64_t)v15, &byte_2226D1615);
  }
  else
  {
    sub_2225CBDE8((uint64_t)v12, "_");
    int v6 = sub_2226AB3EC(**(void **)(a1 + 16));
    sub_222688248((uint64_t)v11, v6);
    sub_2225CF9F4(v15, v12, v11);
  }
  sub_2225CF9F4(v18, v17, v15);
  uint64_t v7 = sub_2225DBAC4(v18, (uint64_t)v19);
  uint64_t v9 = sub_2225F2E2C(v3, v7, v8);
  sub_2225CA520(v19);
  return v9;
}

void *sub_2226AD64C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_2226AD6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226AD6FC(&v3);
}

uint64_t sub_2226AD6FC(void *a1)
{
  return sub_2226AD704(*a1);
}

BOOL sub_2226AD70C(uint64_t a1)
{
  return sub_2226AC718(a1) == 5;
}

uint64_t sub_2226AD730(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226AD75C(&v3);
}

uint64_t sub_2226AD75C(void *a1)
{
  return sub_2226AD764(*a1);
}

BOOL sub_2226AD76C(uint64_t a1)
{
  return sub_2226AC718(a1) == 3;
}

uint64_t sub_2226AD78C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226AD7B8(&v3);
}

uint64_t sub_2226AD7B8(void *a1)
{
  return sub_2226AD7C0(*a1);
}

BOOL sub_2226AD7C8(uint64_t a1)
{
  return sub_2226AC718(a1) == 1;
}

uint64_t sub_2226AD7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226AD814(&v3);
}

uint64_t sub_2226AD814(void *a1)
{
  return sub_2226AD81C(*a1);
}

BOOL sub_2226AD824(uint64_t a1)
{
  return sub_2226AC718(a1) == 2;
}

uint64_t sub_2226AD844(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226AD870(&v3);
}

uint64_t sub_2226AD870(void *a1)
{
  return sub_2226AD878(*a1);
}

BOOL sub_2226AD880(uint64_t a1)
{
  return sub_2226AC718(a1) == 4;
}

uint64_t sub_2226AD8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226AD8CC(&v3);
}

uint64_t sub_2226AD8CC(void *a1)
{
  return sub_2226AD8D4(*a1);
}

BOOL sub_2226AD8DC(uint64_t a1)
{
  return sub_2226AC718(a1) == 6;
}

uint64_t sub_2226AD8FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = nullsub_1(*a1, a2);

  return sub_2226AD93C(a3, v4);
}

uint64_t sub_2226AD940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t *)(sub_2226AD9CC(a1) + 96);
  sub_2225D250C(v4);
  sub_222689E60(a1, a2);
  sub_2226900E4(v7, a2, 0);
  sub_2226AC948(v6, a2);
  sub_2226AC938((uint64_t)v7, (uint64_t)v6, (uint64_t)v8);
  sub_2226AC8DC(v4, (uint64_t)v8);
  return a1;
}

uint64_t sub_2226AD9D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2226AD9D8(a1);
}

uint64_t sub_2226AD9DC(uint64_t a1)
{
  uint64_t v2 = sub_2226AD9CC(a1);
  sub_2225D250C((void *)(v2 + 96));
  return a1;
}

uint64_t sub_2226ADA0C(uint64_t a1, uint64_t a2)
{
  return sub_2226ADA18((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
}

uint64_t sub_2226ADA18(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = sub_2225D24AC(a1);
  if (v4 != sub_2225D24AC(a2)) {
    return 0;
  }
  uint64_t v5 = sub_2225D2E88(a1);
  uint64_t v6 = sub_2225D24C8((uint64_t)a1);
  uint64_t v7 = sub_2225D2E88(a2);

  return sub_2226ADAAC(v5, v6, v7);
}

BOOL sub_2226ADAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)sub_2225D5844(a1);
  uint64_t v6 = (void *)sub_2225D5844(a2);
  uint64_t v7 = (void *)sub_2225D5844(a3);
  return sub_2226ADB14(v5, v6, v7, (uint64_t)&v9);
}

BOOL sub_2226ADB14(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v7 = a1;
  do
  {
    BOOL result = sub_2226ADB80(a4, v7, a3);
    if (!result) {
      break;
    }
    v7 += 3;
    a3 += 3;
  }
  while (v7 != a2);
  return result;
}

BOOL sub_2226ADB80(uint64_t a1, void *a2, void *a3)
{
  return sub_2226ADB8C(a2, a3);
}

BOOL sub_2226ADB8C(void *a1, void *a2)
{
  BOOL result = sub_2225DE638(a1, a2);
  if (result)
  {
    return sub_2226AD2B0(a1 + 1, a2 + 1);
  }
  return result;
}

uint64_t sub_2226ADBDC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 96);
  while (1)
  {
    uint64_t v3 = (void *)sub_2225D2CFC((uint64_t)v2);
    uint64_t v5 = sub_222608790(v3, v4);
    uint64_t v6 = v3 + 1;
    if (!sub_22268CD78(v3))
    {
      sub_2226AC948(v12, v5);
      sub_2226ACBB8(v3 + 1, v12);
      sub_222699A3C(v3, 1u);
    }
    sub_2226ACDB8(v12, v5);
    if (sub_2226AA760(v3 + 1, v12)) {
      break;
    }
LABEL_8:
    sub_2226AD318(v2);
    uint64_t result = sub_2225CF1D0(v2);
    if (result) {
      return result;
    }
  }
  while (1)
  {
    sub_2226ACDBC(v6, (uint64_t)v12);
    uint64_t v7 = sub_2226AA77C((uint64_t)v12);
    if (v7)
    {
      uint64_t v8 = v7;
      if (!sub_222689E2C(a1, v7)) {
        break;
      }
    }
    sub_2226ACDB8(v12, v5);
    if (!sub_2226AA760(v6, v12)) {
      goto LABEL_8;
    }
  }
  sub_222689E60(a1, v8);
  sub_2226900E4(v11, v8, 0);
  sub_2226AC948(v10, v8);
  sub_2226AC938((uint64_t)v11, (uint64_t)v10, (uint64_t)v12);
  return sub_2226AC8DC(v2, (uint64_t)v12);
}

uint64_t sub_2226ADD24(uint64_t a1)
{
  uint64_t v1 = (void *)sub_2225D2CFC(a1 + 96);

  return sub_222608790(v1, v2);
}

uint64_t fosl_filter_interface_version()
{
  return 2;
}

uint64_t fosl_filter_kernelpool_hasError(uint64_t a1)
{
  uint64_t v1 = (unsigned __int8 *)sub_2225F315C(a1);

  return sub_2226376DC(v1);
}

uint64_t fosl_filter_kernelpool_lookupKernel(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_2225F315C(a1);
  sub_2225C3D00((int)v5, a2);
  return sub_2226ADDD4(v3, v5[0], v5[1]);
}

uint64_t sub_2226ADDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)sub_2226AEDAC(a1 + 152, a2, a3);
}

uint64_t sub_2226ADDF4(uint64_t a1, unsigned int a2)
{
  return *(void *)sub_22268CFC8((void *)(a1 + 344), a2);
}

_DWORD *fosl_filter_kernelpool_getDiagnosticByIdx(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225F315C(a1);

  return sub_2226B0F1C(v3, a2);
}

uint64_t sub_2226ADE4C(int a1)
{
  return (a1 - 1);
}

uint64_t sub_2226ADE54(int a1)
{
  return dword_2226D14C4[a1 - 3];
}

uint64_t fosl_filter_kernelpool_getKernelDimensionality(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (((v1 >> 2) & 7) == 1) {
    unsigned __int8 v2 = 2;
  }
  else {
    unsigned __int8 v2 = 4;
  }
  if (((v1 >> 2) & 7) != 0) {
    return v2;
  }
  else {
    return -1;
  }
}

uint64_t sub_2226ADE94(void *a1, unsigned int a2)
{
  return *a1 + 24 * a2;
}

uint64_t sub_2226ADEA4(int a1)
{
  return dword_2226D156C[a1 - 1];
}

uint64_t fosl_filter_kernelpool_getAttributeKeyword(uint64_t a1, unsigned int a2)
{
  unsigned __int8 v2 = (uint64_t *)sub_22268CFC8((void *)(a1 + 120), a2);
  v5[0] = sub_2225DF0BC(*v2);
  v5[1] = v3;
  return sub_2225C3C70((uint64_t)v5);
}

uint64_t fosl_filter_kernelpool_getAttributeParameters(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)sub_22268CFC8((void *)(a1 + 120), a2);

  return sub_2225CDCF4(v2);
}

BOOL fosl_filter_kernelpool_hasAttributeParameters(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)sub_22268CFC8((void *)(a1 + 120), a2);

  return sub_222656008(v2);
}

uint64_t fosl_filter_createGraph()
{
  uint64_t v0 = sub_2225C26A4(24);

  return sub_2226ADF7C(v0);
}

void fosl_filter_destroyGraph(uint64_t a1)
{
  if (a1)
  {
    unsigned int v1 = (void *)sub_2226ADFB0();
    j__free(v1);
  }
}

void *fosl_filter_assignRoot(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_2226AA4F8(a1, a2);

  return sub_2225C6954(v3, a2);
}

uint64_t fosl_filter_addLibraryFunction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AE024(v3, a2);
}

uint64_t sub_2226AE024(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2225CC7B8(a1 + 464, &v3);
}

uint64_t fosl_filter_addChild(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225E55A8(a2);
  uint64_t v7 = sub_2226AA4F8(a1, v6);

  return sub_2226AE0A8(v7, v5, a3);
}

uint64_t sub_2226AE0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226AF140(a2, a3, (uint64_t *)(a1 + 40));
}

uint64_t fosl_filter_createKernel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AE0FC(v3, a2, 0, 0);
}

uint64_t sub_2226AE0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t *)(a1 + 40);
  uint64_t v8 = a1 + 176;
  uint64_t v9 = sub_2225CC780(a1 + 176);
  uint64_t v10 = sub_2226AF190(v7, v9, a2, a3, a4);
  uint64_t v12 = v10;
  sub_2225CC7B8(v8, &v12);
  return v10;
}

uint64_t fosl_filter_createSampler(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_2226AA4F8(a1, a2);
  BOOL v6 = sub_2226AE244(a3);

  return sub_2226AE1D4(v5, a2, v6);
}

uint64_t sub_2226AE1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 40);
  uint64_t v6 = a1 + 176;
  uint64_t v7 = sub_2225CC780(a1 + 176);
  uint64_t v8 = sub_2226AF2C4(v5, v7, a2, a3);
  uint64_t v10 = v8;
  sub_2225CC7B8(v6, &v10);
  return v8;
}

BOOL sub_2226AE244(int a1)
{
  return a1 != 0;
}

uint64_t fosl_filter_createImage(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_2226AA4F8(a1, a2);
  BOOL v6 = sub_2226AE244(a3);

  return sub_2226AE2A8(v5, a2, v6);
}

uint64_t sub_2226AE2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 40);
  uint64_t v6 = a1 + 176;
  uint64_t v7 = sub_2225CC780(a1 + 176);
  uint64_t v8 = sub_2226AF37C(v5, v7, a2, a3);
  uint64_t v10 = v8;
  sub_2225CC7B8(v6, &v10);
  return v8;
}

uint64_t fosl_filter_createConstant(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7 = sub_2226AA4F8(a1, a2);
  uint64_t v8 = sub_2226AE3F8(a3);

  return sub_2226AE378(v7, a2, v8, a4);
}

uint64_t sub_2226AE378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t *)(a1 + 40);
  uint64_t v8 = a1 + 176;
  uint64_t v9 = sub_2225CC780(a1 + 176);
  uint64_t v10 = sub_2226AF434(v7, v9, a2, a3, a4);
  uint64_t v12 = v10;
  sub_2225CC7B8(v8, &v12);
  return v10;
}

uint64_t sub_2226AE3F8(int a1)
{
  if ((a1 - 1) > 0x19) {
    return 3;
  }
  else {
    return dword_2226D1578[a1 - 1];
  }
}

uint64_t fosl_filter_createUniform(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_2226AA4F8(a1, a2);
  uint64_t v6 = sub_2226AE3F8(a3);

  return sub_2226AE474(v5, a2, v6);
}

uint64_t sub_2226AE474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 40);
  uint64_t v6 = a1 + 176;
  uint64_t v7 = sub_2225CC780(a1 + 176);
  uint64_t v8 = sub_2226AF508(v5, v7, a2, a3, 0);
  uint64_t v10 = v8;
  sub_2225CC7B8(v6, &v10);
  return v8;
}

uint64_t fosl_filter_createTransformMatrix(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AE520(v3, a2);
}

uint64_t sub_2226AE520(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + 40);
  uint64_t v4 = a1 + 176;
  uint64_t v5 = sub_2225CC780(a1 + 176);
  uint64_t v6 = sub_2226AF508(v3, v5, a2, 24, 1);
  uint64_t v8 = v6;
  sub_2225CC7B8(v4, &v8);
  return v6;
}

uint64_t fosl_filter_createPositionUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA4F8(a1, a2);

  return sub_2226AE5B8(v2);
}

uint64_t sub_2226AE5B8(uint64_t a1)
{
  unsigned int v1 = (uint64_t *)(a1 + 40);
  uint64_t v2 = a1 + 176;
  uint64_t v3 = sub_2225CC780(a1 + 176);
  uint64_t v4 = sub_2226AF5E8(v1, v3);
  uint64_t v6 = v4;
  sub_2225CC7B8(v2, &v6);
  return v4;
}

uint64_t fosl_filter_createUsePosition(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA4F8(a1, a2);

  return sub_2226AE638(v2);
}

uint64_t sub_2226AE638(uint64_t a1)
{
  unsigned int v1 = (uint64_t *)(a1 + 40);
  uint64_t v2 = a1 + 176;
  uint64_t v3 = sub_2225CC780(a1 + 176);
  uint64_t v4 = sub_2226AF638(v1, v3);
  uint64_t v6 = v4;
  sub_2225CC7B8(v2, &v6);
  return v4;
}

uint64_t fosl_filter_createSampleTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AE0FC(v3, a2, 0, 1);
}

uint64_t fosl_filter_createCoordinateTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AE0FC(v3, a2, 1, 0);
}

uint64_t fosl_filter_setPositionUpdatePosition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E55A8(a2);
  uint64_t v4 = sub_2225E55A8(a1);

  return sub_2225E35B4(v4, v3);
}

uint64_t fosl_filter_setPositionUpdateContinuation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E55A8(a1);

  return sub_222628314(v3, a2);
}

uint64_t fosl_filter_setSamplerNeedsSRGBToLinear(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA4F8(a1, a2);

  return sub_2226AE7B8(v2);
}

uint64_t sub_2226AE7B8(uint64_t result)
{
  *(unsigned char *)(result + 552) = 1;
  return result;
}

uint64_t fosl_filter_setSamplerSwizzleMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AE7FC(v3, a2);
}

uint64_t sub_2226AE7FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 560) = a2;
  return result;
}

uint64_t fosl_filter_setSamplerSwizzleMacro(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AE83C(v3, a2);
}

uint64_t sub_2226AE83C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 568) = a2;
  return result;
}

void fosl_filter_setMainEntryPointName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  sub_2226AE87C(v3, a2);
}

void sub_2226AE87C(uint64_t a1, uint64_t a2)
{
  sub_2225CCD48(&v3, a2);
  sub_2225CCDE4(a1 + 576, (uint64_t)&v3);
  std::string::~string(&v3);
}

uint64_t fosl_filter_parseNodesInGraph(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA4F8(a1, a2);

  return sub_2226AABBC(v2);
}

BOOL fosl_filter_synthesizeMainInGraph(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA4F8(a1, a2);

  return sub_2226AB778(v2, 0, 0);
}

BOOL fosl_filter_synthesizeMainInGraphOfType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);

  return sub_2226AB778(v3, a2, 0);
}

BOOL fosl_filter_synthesizeMainInGraphOfTypeWithOptions(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_2226AA4F8(a1, a2);

  return sub_2226AB778(v5, a2, a3);
}

uint64_t fosl_filter_dumpGraph(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)sub_2226AA4F8(a1, a2);

  return sub_2226ABAEC(v2);
}

void **fosl_filter_printGraph(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA4F8(a1, a2);

  return sub_2226ABC50(v2);
}

uint64_t fosl_filter_getStringForGraph(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA4F8(a1, a2);
  uint64_t v3 = sub_2226ABCCC(v2, 0);

  return sub_2225CBED0(v3);
}

uint64_t fosl_filter_getStringForGraphWithOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2226AA4F8(a1, a2);
  uint64_t v4 = sub_2226ABCCC(v3, a2);

  return sub_2225CBED0(v4);
}

uint64_t sub_2226AEA50(uint64_t a1)
{
  uint64_t v2 = sub_2225C26A4(936);
  sub_2226510D4(v2);
  sub_2225CDDC8(a1, v2);
  uint64_t v3 = sub_2225E8A38();
  sub_2226C5294(v3, 1, a1 + 8);
  uint64_t v5 = sub_2225CBA80(a1, v4);
  uint64_t v7 = sub_2225CBA80(a1 + 8, v6);
  sub_2226C434C(v5, v7, 0, (uint64_t)v11);
  sub_2226AEB0C(a1 + 16, v11);
  sub_2226A9C10(v11);
  uint64_t v9 = sub_2225CBA80(a1 + 16, v8);
  sub_2226B0240(a1 + 24, v9);
  return a1;
}

uint64_t sub_2226AEB10(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_2225CE10C(a2, a2);
  uint64_t v4 = j_j_nullsub_1(a2);
  return sub_2226AEB60(a1, &v6, v4);
}

uint64_t sub_2226AEB64(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = sub_2225CE0B0(a1, a2);

  return j_nullsub_1(v4, a3);
}

uint64_t sub_2226AEB9C(uint64_t a1)
{
  sub_2226B02F8(a1 + 24);
  sub_2226A9C10(a1 + 16);
  sub_2226AEBE8(a1 + 8);

  return sub_2226AEBEC(a1);
}

uint64_t sub_2226AEBF0(uint64_t a1)
{
  return a1;
}

void sub_2226AEC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226AEC8C(v7, v4);
  }
}

void sub_2226AEC8C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2225F3474(a2);
    j__free(v2);
  }
}

uint64_t sub_2226AECC0(uint64_t a1)
{
  return a1;
}

void sub_2226AECEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226AED5C(v7, v4);
  }
}

void sub_2226AED5C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_22265117C(a2);
    j__free(v2);
  }
}

uint64_t sub_2226AED90(uint64_t a1)
{
  return sub_2225D4970((void *)(a1 + 344));
}

uint64_t sub_2226AEDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_2226AEDD4(a1, a2, a3);

  return sub_2225E563C(v3);
}

uint64_t sub_2226AEDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226AEDDC(a1, a2, a3, 0);
}

uint64_t sub_2226AEDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[0] = a2;
  v10[1] = a3;
  uint64_t v9 = a4;
  sub_2225E578C((uint64_t)v10, (uint64_t)&v9, (uint64_t)v7);
  v8[0] = sub_2226AEE34(a1, v7);
  v8[1] = v5;
  return sub_2225E4210((uint64_t)v8);
}

uint64_t sub_2226AEE34(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = sub_2225D7D38(a1, *a2, a2[1]);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(*(void *)a1 + 8 * v4);
  if (v7)
  {
    if (v7 != sub_2225CAE20())
    {
      sub_2225E579C(v11, *(void *)a1 + 8 * v6, 0);
      char v10 = 0;
      return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
    }
    uint64_t v7 = *(void *)(v5 + 8 * v6);
  }
  if (v7 == sub_2225CAE20()) {
    --*(_DWORD *)(a1 + 16);
  }
  *(void *)(v5 + 8 * v6) = sub_2225F30C8(*a2, a2[1], *(uint64_t **)(a1 + 24), a2[2]);
  ++*(_DWORD *)(a1 + 12);
  unsigned int v8 = sub_2225D80B0(a1, v6);
  sub_2225E579C(v11, *(void *)a1 + 8 * v8, 0);
  char v10 = 1;
  return sub_2225D7AF8((uint64_t)v11, (uint64_t)&v10);
}

uint64_t sub_2226AEF24(uint64_t a1)
{
  uint64_t v2 = sub_2225C26A4(936);
  sub_2226510D4(v2);
  sub_2225CDDC8(a1, v2);
  uint64_t v3 = sub_2225E8A38();
  sub_2226C5294(v3, 0, a1 + 8);
  uint64_t v4 = sub_2225C26A4(640);
  uint64_t v6 = sub_2225CBA80(a1, v5);
  uint64_t v8 = sub_2225CBA80(a1 + 8, v7);
  sub_2226A9C14(v4, v6, v8);
  sub_2225CDDC8(a1 + 16, v4);
  return a1;
}

uint64_t sub_2226AEFC8(uint64_t a1)
{
  sub_2226AF00C(a1 + 16);
  sub_2226AEBE8(a1 + 8);

  return sub_2226AEBEC(a1);
}

uint64_t sub_2226AF010(uint64_t a1)
{
  return a1;
}

void sub_2226AF03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226AF0AC(v7, v4);
  }
}

void sub_2226AF0AC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2226AF0E0(a2);
    j__free(v2);
  }
}

std::string *sub_2226AF0E4(std::string *a1)
{
  return a1;
}

uint64_t sub_2226AF140(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_2226AA60C(a1);

  return sub_22268F484((uint64_t *)(a1 + 16), a2, a3);
}

uint64_t sub_2226AF190(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_222635BFC(0x28uLL, a1);

  return sub_2226AF1F0(v9, a2, a3, a4, a5);
}

uint64_t sub_2226AF1F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v9 = sub_2226AF270((void *)a1, 0, a2);
  sub_222686B8C(v9 + 2);
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a3;
  if (a4) {
    int v10 = 0x1000000;
  }
  else {
    int v10 = 0;
  }
  if (a5) {
    int v11 = 0x2000000;
  }
  else {
    int v11 = 0;
  }
  *(_DWORD *)(a1 + 8) = v11 | v10 | *(_DWORD *)(a1 + 8) & 0xFCFFFFFF;
  return a1;
}

void *sub_2226AF270(void *a1, char a2, uint64_t a3)
{
  int v3 = a3;
  *a1 = 0;
  nullsub_1(a1, a3);
  a1[1] = 0;
  *((_DWORD *)a1 + 2) = a2 & 7 | (8 * (v3 & 0x3FFFF));
  return a1;
}

uint64_t sub_2226AF2C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_222635BFC(0x10uLL, a1);

  return sub_2226AF31C(v7, a2, a3, a4);
}

uint64_t sub_2226AF320(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = sub_2226AF270((void *)a1, 1, a2);
  nullsub_1(v7, a3);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 8) & 0xFCFFFFFF | ((a4 & 3) << 24);
  *(_WORD *)(a1 + 12) = a3;
  return a1;
}

uint64_t sub_2226AF37C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_222635BFC(0x10uLL, a1);

  return sub_2226AF3D4(v7, a2, a3, a4);
}

uint64_t sub_2226AF3D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = sub_2226AF270((void *)a1, 2, a2);
  nullsub_1(v7, a3);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 8) & 0xFCFFFFFF | ((a4 & 3) << 24);
  *(_WORD *)(a1 + 12) = a3;
  return a1;
}

uint64_t sub_2226AF434(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_222635BFC(0x28uLL, a1);

  return sub_2226AF494(v9, a2, a3, a4, a5);
}

uint64_t sub_2226AF498(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9 = sub_2226AF270((void *)a1, 3, a2);
  sub_2225CCD48(v9 + 2, a5);
  nullsub_1(a1, a3);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 8) & 0x80FFFFFF | ((a4 & 0x7F) << 24);
  *(_WORD *)(a1 + 12) = a3;
  return a1;
}

uint64_t sub_2226AF508(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_222635BFC(0x10uLL, a1);

  return sub_2226AF568(v9, a2, a3, a4, a5);
}

void *sub_2226AF56C(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v9 = sub_2226AF270(a1, 4, a2);
  nullsub_1(v9, a3);
  uint64_t v10 = 0x1000000;
  if (!a5) {
    uint64_t v10 = 0;
  }
  a1[1] = a1[1] & 0xFFFF000000FFFFFFLL | (a4 << 25) | ((unint64_t)(unsigned __int16)a3 << 32) | v10;
  return a1;
}

uint64_t sub_2226AF5E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_222635BFC(0x20uLL, a1);

  return sub_2226AF628(v3, a2);
}

void *sub_2226AF62C(void *a1, uint64_t a2)
{
  return sub_2226AF270(a1, 5, a2);
}

uint64_t sub_2226AF638(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_222635BFC(0x10uLL, a1);

  return sub_2226AF678(v3, a2);
}

void *sub_2226AF67C(void *a1, uint64_t a2)
{
  return sub_2226AF270(a1, 6, a2);
}

unsigned char *sub_2226AF688(unsigned char *a1, uint64_t a2)
{
  v8[39] = *MEMORY[0x263EF8340];
  *a1 = 1;
  sub_2226AF774((uint64_t)(a1 + 8));
  sub_22265B7A8(v7, sub_2226AF778);
  sub_22265B7B4(v6, sub_2226AF780);
  sub_2226AF788((uint64_t)v5, (uint64_t)a1);
  sub_22265B7BC((uint64_t)v8, (uint64_t)v7, (uint64_t)v6, (uint64_t)v5);
  sub_2226529E4(v5);
  sub_2226529E8(v6);
  sub_2226529EC(v7);
  sub_22265B7D0(v8, a2);
  sub_22265291C(v8);
  return a1;
}

uint64_t sub_2226AF778()
{
  return 1;
}

uint64_t sub_2226AF780()
{
  return 1;
}

uint64_t sub_2226AF790(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 8;
  uint64_t v4 = *(void *)sub_222657D6C(a2 + 8, 0);
  uint64_t v5 = *(void *)sub_222657D6C(v3, 1u);
  uint64_t v6 = sub_222659694(v4);
  uint64_t v7 = sub_2225C3D04(v6);
  uint64_t result = sub_22265D604(v5);
  if (!result)
  {
    *a1 = 0;
    return result;
  }
  uint64_t v9 = result;
  uint64_t v17 = v7;
  uint64_t result = sub_222657D00(result);
  if (result == 2)
  {
    uint64_t v11 = v9 + 8;
    uint64_t v12 = (uint64_t *)sub_222657D6C(v11, 0);
    char v13 = sub_2226AF898(&v17, *v12);
    if (*a1) {
      char v14 = v13;
    }
    else {
      char v14 = 0;
    }
    *a1 = v14;
    uint64_t v15 = (uint64_t *)sub_222657D6C(v11, 1u);
    uint64_t result = sub_2226AF8D4(*v15);
    goto LABEL_10;
  }
  if (result == 4)
  {
    uint64_t v10 = (uint64_t *)sub_222657D6C(v9 + 8, 0);
    uint64_t result = sub_2226AF898(&v17, *v10);
LABEL_10:
    if (*a1) {
      char v16 = result;
    }
    else {
      char v16 = 0;
    }
    goto LABEL_14;
  }
  char v16 = 0;
LABEL_14:
  *a1 = v16;
  return result;
}

uint64_t sub_2226AF898(void *a1, uint64_t a2)
{
  uint64_t result = sub_222659694(a2);
  if (result) {
    return sub_2225C3D04(result) == *a1;
  }
  return result;
}

uint64_t sub_2226AF8D4(uint64_t a1)
{
  uint64_t v2 = sub_22265975C(a1);
  if (v2)
  {
    uint64_t v3 = sub_2225C5B40(v2);
    uint64_t v4 = sub_222654540(v3);
    uint64_t v6 = v5;
    sub_2225C3D00((int)v17, "destCoord");
    return sub_2225CD4BC(v4, v6, v17[0], (size_t)v17[1]);
  }
  else
  {
    uint64_t result = sub_222659694(a1);
    if (result)
    {
      uint64_t v8 = result;
      uint64_t v16 = sub_2225C3D04(result);
      if (sub_222669188(&v16))
      {
        uint64_t v9 = sub_2225C3D04(v8);
        uint64_t v10 = sub_2225E55A8(v9);
        uint64_t v11 = sub_222654540(v10);
        uint64_t v13 = v12;
        sub_2225C3D00((int)v15, "_dc");
        if (sub_2225CD4BC(v11, v13, v15[0], (size_t)v15[1]))
        {
          return 1;
        }
        else
        {
          uint64_t result = sub_222608330(v10);
          if (result)
          {
            uint64_t v14 = sub_222608330(v10);
            return sub_2226AF8D4(v14);
          }
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

unsigned char *sub_2226AF9CC(unsigned char *a1, uint64_t a2)
{
  v8[39] = *MEMORY[0x263EF8340];
  *a1 = 1;
  sub_22265B7A8(v7, sub_2226AF778);
  sub_22265B7B4(v6, sub_2226AF780);
  sub_2226AFAB4((uint64_t)v5, (uint64_t)a1);
  sub_22265B7BC((uint64_t)v8, (uint64_t)v7, (uint64_t)v6, (uint64_t)v5);
  sub_2226529E4(v5);
  sub_2226529E8(v6);
  sub_2226529EC(v7);
  sub_22265B7D0(v8, a2);
  sub_22265291C(v8);
  return a1;
}

uint64_t sub_2226AFABC(uint64_t a1)
{
  return sub_222649FE8(a1, a1 + 32, 4);
}

uint64_t sub_2226AFAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2226AFAF0(a1, &v3);
}

uint64_t sub_2226AFAF8(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226AFB24();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226AFB28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658E8C(a1);
  *uint64_t v6 = &unk_26D4DEC00;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void sub_2226AFB8C()
{
  uint64_t v0 = (void *)j_j_nullsub_1_125();

  j__free(v0);
}

uint64_t sub_2226AFBB4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226AFB24(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226AFC2C(uint64_t a1, uint64_t a2)
{
  return sub_2226AFB24(a2, a1 + 8);
}

uint64_t sub_2226AFC40(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226AFC48(uint64_t a1)
{
  return sub_2226AFC50(a1 + 8);
}

BOOL sub_2226AFC58(unsigned char **a1, uint64_t *a2)
{
  return sub_2226AFC60(a1, *a2);
}

BOOL sub_2226AFC60(unsigned char **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_22265D604(a2);
  if (v4 && (uint64_t v5 = v4, sub_222657D00(v4) == 1))
  {
    sub_2226AF790(v3, v5);
    return 0;
  }
  else
  {
    uint64_t v7 = sub_222659694(a2);
    if (v7)
    {
      uint64_t v8 = sub_2225C3D04(v7);
      uint64_t v9 = sub_22268D934(v8);
      if (v9)
      {
        uint64_t v12 = sub_2225C5B40(v9);
        uint64_t v10 = sub_2225C3C70((uint64_t)&v12);
        uint64_t v11 = sub_222655AF0(v10);
        if (v11)
        {
          if (!sub_222655B00(v11)) {
            *uint64_t v3 = 0;
          }
        }
      }
    }
    return *v3 != 0;
  }
}

uint64_t sub_2226AFD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2226AFD34(a1, &v3);
}

uint64_t sub_2226AFD3C(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226AFD68();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226AFD6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222658E8C(a1);
  *uint64_t v6 = &unk_26D4DEC48;
  sub_222658930(v6 + 1, a2, a3);
  return a1;
}

void sub_2226AFDD0()
{
  uint64_t v0 = (void *)j_j_nullsub_1_126();

  j__free(v0);
}

uint64_t sub_2226AFDF8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226AFD68(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226AFE70(uint64_t a1, uint64_t a2)
{
  return sub_2226AFD68(a2, a1 + 8);
}

uint64_t sub_2226AFE84(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226AFE8C(uint64_t a1)
{
  return sub_2226AFE94(a1 + 8);
}

BOOL sub_2226AFE9C(unsigned char **a1, uint64_t *a2)
{
  return sub_2226AFEA4(a1, *a2);
}

BOOL sub_2226AFEA4(unsigned char **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_222659694(a2);
  if (!v4
    || (uint64_t v5 = sub_2225C3D04(v4),
        uint64_t v6 = sub_222654540(v5),
        uint64_t v8 = v7,
        sub_2225C3D00((int)v17, "_dc"),
        !sub_2225CD4BC(v6, v8, v17[0], (size_t)v17[1])))
  {
    uint64_t v9 = sub_22265975C(a2);
    if (!v9
      || (uint64_t v10 = sub_2225C5B40(v9),
          uint64_t v11 = sub_222654540(v10),
          uint64_t v13 = v12,
          sub_2225C3D00((int)v16, "destCoord"),
          !sub_2225CD4BC(v11, v13, v16[0], (size_t)v16[1])))
    {
      uint64_t v14 = sub_22265D604(a2);
      if (!v14 || sub_222657D00(v14) != 4) {
        return *v3 != 0;
      }
    }
  }
  BOOL result = 0;
  *uint64_t v3 = 0;
  return result;
}

uint64_t fosl_filter_kernelpool_isPositionInvariant_0(uint64_t a1)
{
  uint64_t v1 = sub_2226AFAB8(&v3, *(void *)(a1 + 8));
  return sub_2226376DC(v1);
}

uint64_t fosl_filter_kernelpool_preservesAlpha_0(uint64_t a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  sub_2226B0028(v3, *(void *)(a1 + 8));
  uint64_t v1 = sub_2226376DC(v3);
  sub_2226B002C((uint64_t)v3);
  return v1;
}

uint64_t sub_2226B0030(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v12 = a2;
  uint64_t v5 = sub_2225C3C70((uint64_t)&v12);
  uint64_t v6 = sub_222655B10(v5);
  if (v6)
  {
    int v7 = sub_222655AE4(v6);
    if (v7 == 8) {
      return 1;
    }
    if (v7 == 13 || v7 == 10) {
      return 2;
    }
    sub_2226B00D8(a1, a3, 2332, (uint64_t)v10);
    uint64_t v9 = v10;
  }
  else
  {
    sub_2226B00D8(a1, a3, 2332, (uint64_t)v11);
    uint64_t v9 = v11;
  }
  sub_2225F37F0(v9);
  return 0;
}

uint64_t sub_2226B00D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v5 = a2;
  uint64_t v7 = sub_2226B0C04(a1, a2);

  return sub_2225F52C4(v7, v5, a3, a4);
}

uint64_t sub_2226B0128(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  uint64_t v4 = a1 + 8;
  sub_2226B0238(a1 + 8);
  sub_2225E0EC4((void *)(a1 + 16));
  sub_2226B023C(a1 + 152, a1 + 16);
  sub_22265B91C(a1 + 184);
  sub_2226AF774(a1 + 280);
  sub_222690148(a1 + 344, v4, 16);
  *(void *)(a1 + 368) = a2;
  sub_2225F3278((_DWORD *)(a1 + 376));
  sub_2225F3278(&v11);
  uint64_t v6 = (uint64_t *)sub_2226AA4F8(*(void *)(a1 + 368), v5);
  sub_222688EC0(v6);
  sub_2226AA500((uint64_t)v10, (uint64_t)v6);
  sub_2226AAE48((uint64_t)v10, 3, 3);
  sub_2225C3D00((int)v9, "_dc");
  sub_2226AAEC0(v10, v9[0], v9[1], 8, 3, 0);
  sub_2225C3D00((int)v8, "p0");
  sub_2226AAEC0(v10, v8[0], v8[1], 8, 3, 8);
  return a1;
}

uint64_t sub_2226B0244(uint64_t a1)
{
  sub_2226B02A8(a1);
  uint64_t v3 = sub_2226AA4F8(*(void *)(a1 + 368), v2);
  sub_222689240(v3);
  j_nullsub_1(a1 + 344, v4);
  sub_2226489C0(a1 + 280);
  sub_2226489C0(a1 + 184);
  sub_2226B02F4(a1 + 152);
  sub_2225E1434(a1 + 16);
  sub_2226900D8(a1 + 8);
  return a1;
}

void *sub_2226B02A8(uint64_t a1)
{
  sub_2226B3BB0(a1 + 152);
  sub_222608F18(a1 + 184);
  sub_222608F18(a1 + 280);

  return sub_2225DDE10((void *)(a1 + 344));
}

uint64_t sub_2226B02FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2226AA504(*(void *)(a1 + 368), a2);
  uint64_t v7 = sub_2225E8DD0(v6);
  sub_2225C3D00((int)v12, "kernel-pool");
  uint64_t v8 = sub_2225CD198(a2, a3, v12[0], v12[1], 0);
  sub_2225F3278(&v11);
  unsigned int v9 = sub_2226490F0(v7, v8, 0, 0, 0, v11);
  return sub_2226B039C(a1, v9);
}

uint64_t sub_2226B039C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v103 = *MEMORY[0x263EF8340];
  *(_DWORD *)(a1 + 376) = a2;
  uint64_t v4 = sub_2226AAE40(*(void *)(a1 + 368), a2);
  uint64_t v6 = sub_2226AA504(*(void *)(a1 + 368), v5);
  sub_2225F3278(&v98);
  sub_22263F1C8(v6, v2, 0, v98);
  uint64_t v8 = sub_2226B0C04(a1, v7);
  uint64_t v9 = sub_2226AA844(v8);
  uint64_t v11 = sub_2226AA84C(*(void *)(a1 + 368), v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v9 + 24))(v9, v11, v6);
  sub_2226AA854(v4);
  if (!sub_2226A1A88(v4))
  {
    uint64_t v16 = a1 + 184;
    uint64_t v88 = (uint64_t *)(a1 + 16);
    while (1)
    {
      uint64_t v17 = sub_222643C2C(v4);
      if (!sub_2226450E4(v17))
      {
        uint64_t v18 = sub_222643C2C(v4);
        if (!sub_22261BABC(v18, 399)) {
          break;
        }
      }
      if (!sub_222699AFC(v4)) {
        goto LABEL_9;
      }
LABEL_10:
      if (sub_2226A1A88(v4)) {
        goto LABEL_2;
      }
    }
    uint64_t v19 = sub_222643C2C(v4);
    if (sub_22261BABC(v19, 79))
    {
      uint64_t v20 = sub_222699AFC(v4);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = (void **)sub_222653754(v20);
        uint64_t v23 = sub_222653758(v21);
        if (v22 == (void **)v23) {
          goto LABEL_10;
        }
        unsigned int v24 = (void **)v23;
        while (1)
        {
          v95[0] = 0;
          v95[0] = *v22;
          if ((sub_2226583D0(v95) & 1) == 0) {
            break;
          }
          uint64_t v25 = sub_2225E55A8((uint64_t)v95[0]);
          sub_222689E60(a1 + 280, v25);
          if (++v22 == v24) {
            goto LABEL_10;
          }
        }
      }
    }
    else
    {
      uint64_t v26 = sub_222643C2C(v4);
      BOOL v27 = sub_22261BABC(v26, 459);
      uint64_t v97 = 0;
      sub_2226B0C38((uint64_t)v102);
      uint64_t v28 = sub_222699EE4(v4, (uint64_t)v102);
      sub_2226AA860(v102);
      uint64_t v97 = v28;
      if (!v28 || (sub_222658084(&v97) & 1) == 0)
      {
        sub_2225D2D18((unsigned char *)a1);
        goto LABEL_2;
      }
      uint64_t v29 = (unsigned __int16 *)sub_2225E55A8(v97);
      if (!v27)
      {
        sub_222689E60(v16, (uint64_t)v29);
        goto LABEL_10;
      }
      uint64_t v96 = 0;
      uint64_t v30 = sub_222635BFC(0x90uLL, v88);
      uint64_t v96 = sub_2226B0C3C(v30, a1 + 8);
      *(void *)(v96 + 8) = v29;
      uint64_t v31 = sub_222640540((uint64_t)v29);
      unsigned int v32 = sub_2225DAD04((uint64_t)v29);
      char v33 = sub_2226B0030(a1, v31, v32);
      *(unsigned char *)uint64_t v96 = *(unsigned char *)v96 & 0xE3 | (4 * v33);
      uint64_t v34 = sub_222654540((uint64_t)v29);
      sub_2226A0AEC(v95, v88, v34, v35);
      uint64_t v36 = sub_222654FC8(v95);
      uint64_t v37 = v96;
      *(void *)(v96 + 16) = v36;
      *(void *)(v37 + 24) = v38;
      if ((*(unsigned char *)v37 & 0x1C) != 0)
      {
        sub_22265B918(v101);
        sub_22265B91C(v95);
        v95[35] = (void *)a1;
        v95[36] = v95;
        v95[37] = &v99;
        v95[38] = v101;
        sub_2226B0C40(&v99);
        sub_2226B0C44((uint64_t)&v99);
        sub_2226B0C6C(&v99);
        sub_2226489C0(v95);
        uint64_t v39 = (uint64_t *)sub_2225C3C70((uint64_t)v101);
        for (uint64_t i = sub_2225C3D04((uint64_t)v101); v39 != (uint64_t *)i; ++v39)
        {
          uint64_t v41 = *v39;
          if (sub_222689E2C(v16, *v39))
          {
            uint64_t v42 = (void *)(v96 + 72);
            sub_2225C64B8(v95, v41);
            sub_2226B0C70(v42, v95, (void *)(a1 + 8));
          }
        }
        v95[0] = (void *)sub_2226403CC(a1 + 280);
        v95[1] = v43;
        v99.n128_u64[0] = sub_222640400(a1 + 280);
        v99.n128_u64[1] = v44;
        while (sub_2225DE624(v95, &v99))
        {
          uint64_t v46 = sub_222688DD4(v95, v45);
          if (sub_222689E2C(a1 + 280, v46))
          {
            uint64_t v47 = (void *)(v96 + 96);
            sub_2225C64B8(v93, v46);
            sub_2226B0C70(v47, v93, (void *)(a1 + 8));
          }
          sub_222640444(v95);
        }
        uint64_t v48 = sub_2226B0CC8((uint64_t)v29);
        uint64_t v49 = (uint64_t *)sub_2225C3C70(v48);
        uint64_t v50 = sub_2225C3D04(v48);
        while (v49 != (uint64_t *)v50)
        {
          uint64_t v51 = *v49++;
          unsigned int v52 = (void *)(v96 + 120);
          sub_2225C64B8(v95, v51);
          sub_2226B0C70(v52, v95, (void *)(a1 + 8));
        }
        sub_2225C549C(v95);
        sub_2225E8C04(v94);
        sub_2226AF774((uint64_t)v93);
        uint64_t v53 = v96 + 96;
        uint64_t v54 = (uint64_t *)sub_2225C3C70(v96 + 96);
        for (uint64_t j = sub_2225C3D04(v53); v54 != (uint64_t *)j; ++v54)
        {
          unsigned int v56 = (unsigned __int16 *)*v54;
          if (!sub_222689E2C((uint64_t)v93, *v54))
          {
            sub_222653138(v56, (uint64_t)v94);
            sub_2225CA524((uint64_t)v94, ";\n");
            sub_222689E60((uint64_t)v93, (uint64_t)v56);
          }
        }
        sub_2226AF774((uint64_t)v92);
        uint64_t v57 = v96 + 72;
        uint64_t v58 = (uint64_t *)sub_2225C3C70(v96 + 72);
        for (uint64_t k = sub_2225C3D04(v57); v58 != (uint64_t *)k; ++v58)
        {
          uint64_t v60 = (unsigned __int16 *)*v58;
          if (!sub_222689E2C((uint64_t)v92, *v58))
          {
            sub_222653138(v60, (uint64_t)v94);
            sub_222689E60((uint64_t)v92, (uint64_t)v60);
          }
        }
        uint64_t v61 = (_DWORD **)sub_2225CC180((uint64_t)(v29 + 8));
        uint64_t v62 = sub_222655EEC((uint64_t)(v29 + 8));
        if (v61 == (_DWORD **)v62)
        {
          char v76 = 3;
LABEL_54:
          uint64_t v78 = v16;
          if ((*(unsigned char *)v96 & 0x1C) == 4) {
            char v76 = 2;
          }
          *(unsigned char *)uint64_t v96 = *(unsigned char *)v96 & 0xFC | v76;
          if ((*(unsigned char *)v96 & 3) == 1)
          {
            sub_2226AF78C(&v99, v29, v63);
            if (sub_2226376DC((unsigned __int8 *)&v99))
            {
              *(unsigned char *)v96 |= 3u;
              sub_2226B0D54((uint64_t)v29);
            }
            sub_2226B0D60((uint64_t)&v99);
          }
          sub_222653138(v29, (uint64_t)v94);
          uint64_t v79 = sub_2225E8D4C(v94);
          sub_2226A0AEC(&v99, v88, v79, v80);
          uint64_t v81 = sub_222654FC8(&v99);
          uint64_t v82 = v96;
          *(void *)(v96 + 32) = v81;
          *(void *)(v82 + 40) = v83;
          uint64_t v84 = sub_222654540(v97);
          *(void *)sub_2226AEDAC(a1 + 152, v84, v85) = v82;
          sub_222690080((void *)(a1 + 344), &v96, (void *)(a1 + 8));
          uint64_t v16 = v78;
        }
        else
        {
          uint64_t v64 = (_DWORD **)v62;
          uint64_t v87 = v16;
          char v65 = 0;
          do
          {
            uint64_t v66 = *v61;
            sub_2226B0CD0(&v99);
            uint64_t v67 = sub_222654540((uint64_t)v66);
            sub_2226A0AEC(&v91, v88, v67, v68);
            v99.n128_u64[0] = sub_222654FC8(&v91);
            v99.n128_u64[1] = v69;
            uint64_t v91 = sub_2225C5B40((uint64_t)v66);
            uint64_t v70 = sub_2225C3C70((uint64_t)&v91);
            uint64_t v71 = sub_222655B10(v70);
            if (!v71 || (uint64_t v72 = v71, v73 = sub_222655AE4(v71), (sub_2226B0CD4(v73) & 1) == 0))
            {
              unsigned int v77 = sub_2225DAD0C((uint64_t)v66);
              sub_2226B00D8(a1, v77, 2359, (uint64_t)v90);
              sub_2225F37F0(v90);
              sub_2225D2D18((unsigned char *)a1);
              if (v65) {
                goto LABEL_50;
              }
LABEL_47:
              char v76 = 3;
LABEL_52:
              uint64_t v16 = v87;
              goto LABEL_54;
            }
            char v74 = sub_222655AE4(v72);
            __int16 v100 = v100 & 0xFF80 | v74 & 0x7F;
            char v75 = sub_222656018(v66);
            __int16 v100 = ((v75 & 3) << 7) | v100 & 0xFE7F;
            __n128 v63 = sub_2226B0CF4((void *)(v96 + 48), &v99, (void *)(a1 + 8));
            v65 |= (v100 & 0x7Fu) - 41 < 2;
            ++v61;
          }
          while (v61 != v64);
          if ((v65 & 1) == 0) {
            goto LABEL_47;
          }
LABEL_50:
          if ((*(unsigned char *)v96 & 0x1C) == 8)
          {
            char v76 = 1;
            goto LABEL_52;
          }
          unsigned int v86 = sub_2225DAD04((uint64_t)v29);
          sub_2226B00D8(a1, v86, 2360, (uint64_t)v89);
          sub_2225F37F0(v89);
          sub_2225D2D18((unsigned char *)a1);
          uint64_t v16 = v87;
        }
        sub_2226489C0(v92);
        sub_2226489C0(v93);
        sub_2225E8C5C(v94);
        sub_2225C56C4(v95);
        sub_2225C56C4(v101);
        goto LABEL_10;
      }
    }
LABEL_9:
    sub_2225D2D18((unsigned char *)a1);
    goto LABEL_10;
  }
LABEL_2:
  if (sub_2226376DC((unsigned __int8 *)a1)) {
    sub_2226B02A8(a1);
  }
  uint64_t v13 = sub_2226B0C04(a1, v12);
  uint64_t v14 = sub_2226AA844(v13);
  return (*(uint64_t (**)(uint64_t))(*(void *)v14 + 32))(v14);
}

uint64_t sub_2226B0BFC(uint64_t a1)
{
  return sub_2226B3C30(*(void *)(a1 + 8));
}

uint64_t sub_2226B0C04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226AA504(*(void *)(a1 + 368), a2);

  return sub_2225C5B40(v2);
}

uint64_t sub_2226B0C30(uint64_t a1)
{
  return sub_2225C3C70(a1 + 32);
}

uint64_t sub_2226B0C44(uint64_t a1)
{
  return sub_2226B414C(a1);
}

void *sub_2226B0C70(void *result, void *a2, void *a3)
{
  uint64_t v4 = result;
  uint64_t v5 = (void *)result[1];
  if ((unint64_t)v5 >= result[2])
  {
    BOOL result = (void *)sub_2226B3E38(result, a3, 1uLL);
    uint64_t v5 = (void *)v4[1];
  }
  *uint64_t v5 = *a2;
  v4[1] += 8;
  return result;
}

uint64_t sub_2226B0CC8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2226B0CD4(unsigned int a1)
{
  return (a1 < 0x2D) & (0x1E0703803F38uLL >> a1);
}

__n128 sub_2226B0CF4(void *a1, __n128 *a2, void *a3)
{
  uint64_t v5 = (__n128 *)a1[1];
  if ((unint64_t)v5 >= a1[2])
  {
    sub_2226B3D40(a1, a3, 1uLL);
    uint64_t v5 = (__n128 *)a1[1];
  }
  __n128 result = *a2;
  v5[1].n128_u64[0] = a2[1].n128_u64[0];
  *uint64_t v5 = result;
  a1[1] += 24;
  return result;
}

uint64_t sub_2226B0D54(uint64_t result)
{
  *(unsigned char *)(result + 152) = 1;
  return result;
}

uint64_t sub_2226B0D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2226AAE40(*(void *)(a1 + 368), a2);
  uint64_t v8 = sub_2226AA504(*(void *)(a1 + 368), v7);
  uint64_t v9 = sub_2225E8DD0(v8);
  sub_2225C3D00((int)v22, "kernel-pool");
  uint64_t v10 = sub_2225CD198(a2, a3, v22[0], v22[1], 0);
  sub_2225F3278(&v21);
  LODWORD(v10) = sub_2226490F0(v9, v10, 0, 0, 0, v21);
  sub_2225F3278(&v20);
  sub_22263F1C8(v8, v10, 0, v20);
  uint64_t v12 = sub_2226B0C04(a1, v11);
  uint64_t v13 = sub_2226AA844(v12);
  uint64_t v15 = sub_2226AA84C(*(void *)(a1 + 368), v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v13 + 24))(v13, v15, v8);
  sub_2226AA854(v6);
  while (!sub_2226A1A88(v6))
    sub_222699AFC(v6);
  uint64_t v17 = sub_2226B0C04(a1, v16);
  uint64_t v18 = sub_2226AA844(v17);
  return (*(uint64_t (**)(uint64_t))(*(void *)v18 + 32))(v18);
}

uint64_t sub_2226B0ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226C3680(*(void *)(a1 + 368), a2);
  uint64_t v3 = sub_2226AA844(v2);

  return sub_2226B0F00(v3);
}

uint64_t sub_2226B0F00(uint64_t a1)
{
  return sub_2226B3EFC((void *)(a1 + 16));
}

_DWORD *sub_2226B0F1C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = sub_2226C3680(*(void *)(a1 + 368), a2);
  uint64_t v5 = sub_2226AA844(v4);
  uint64_t v7 = sub_2226AA504(*(void *)(a1 + 368), v6);
  uint64_t v8 = (_DWORD *)sub_2225E8DD0(v7);
  sub_2225D250C(v54);
  sub_2225D250C(v53);
  sub_2225F3530(v54);
  sub_2226B1278(v53);
  unsigned int v9 = sub_2225CDCEC(v5);
  sub_2226B12C0(v54, v9);
  unsigned int v10 = sub_222613BA4(v5);
  sub_2226B133C(v53, v10);
  if (sub_2226B0F00(v5) <= v2)
  {
    uint64_t v11 = 0;
  }
  else
  {
    v51.n128_u64[0] = sub_2226B13B8(v5);
    uint64_t v52 = sub_2226B13C0((uint64_t *)&v51, v2);
    uint64_t v11 = malloc_type_malloc(0x38uLL, 0x1070040C582C436uLL);
    unsigned int v12 = sub_2225D4970(v54);
    uint64_t v14 = sub_2225F3960(&v52, v13) + 32;
    uint64_t v15 = (unsigned int *)sub_2225C3C70(v14);
    uint64_t v16 = sub_2225C3D04(v14);
    if (v15 != (unsigned int *)v16)
    {
      uint64_t v17 = (unsigned int *)v16;
      do
      {
        int v18 = sub_22261C6A4(v15);
        v51.n128_u32[0] = sub_2226B144C(v8, v18);
        int v19 = sub_222613088(v15);
        v51.n128_u32[1] = sub_2226B144C(v8, v19);
        sub_2226B13F0(v54, (uint64_t)&v51);
        v15 += 3;
      }
      while (v15 != v17);
    }
    unsigned int v20 = sub_2225D36D8(v53);
    uint64_t v22 = sub_2225F3960(&v52, v21) + 80;
    uint64_t v23 = (unsigned int *)sub_2225C3C70(v22);
    uint64_t v24 = sub_2225C3D04(v22);
    if (v23 != (unsigned int *)v24)
    {
      uint64_t v26 = v24;
      do
      {
        int v27 = sub_22261C6A4(v23);
        unsigned int v28 = sub_222613088(v23);
        if (sub_22261C7D4((uint64_t)v23))
        {
          uint64_t v30 = sub_2226AA84C(*(void *)(a1 + 368), v29);
          unsigned int v28 = sub_22261C1E8(v28, 0, v8, v30);
        }
        __n128 v51 = 0uLL;
        v51.n128_u32[0] = sub_2226B144C(v8, v27);
        v51.n128_u32[1] = sub_2226B144C(v8, v28);
        v51.n128_u64[1] = 0;
        uint64_t v31 = v23 + 6;
        if (sub_2225CBBF8((uint64_t)(v23 + 6), v32)) {
          sub_222622284(v23 + 3);
        }
        v51.n128_u64[1] = sub_2225CBED0(v23 + 6);
        sub_2226B146C(v53, &v51);
        v23 += 14;
      }
      while (v31 + 8 != (unsigned int *)v26);
    }
    uint64_t v33 = sub_2225F3960(&v52, v25);
    unsigned int v34 = sub_2226B144C(v8, *(_DWORD *)(v33 + 24));
    uint64_t v36 = sub_2225F3960(&v52, v35);
    *uint64_t v11 = sub_2226B14C8(*(_DWORD *)(v36 + 216));
    v11[1] = sub_22260D3AC((uint64_t)v8, *(_DWORD *)(a1 + 376), v34, 0);
    uint64_t v11[2] = sub_22260CFC0((uint64_t)v8, *(_DWORD *)(a1 + 376), v34, 0);
    uint64_t v38 = sub_2225F3960(&v52, v37);
    void v11[3] = sub_2226B144C(v8, *(_DWORD *)(v38 + 24));
    uint64_t v40 = sub_2225F3960(&v52, v39);
    *((void *)v11 + 2) = sub_2225CBED0(v40);
    uint64_t v42 = sub_2225F3960(&v52, v41);
    int v43 = sub_2225F5AA4(v42 + 32);
    v11[6] = v43;
    if (v43) {
      uint64_t v45 = sub_2225F3960(v54, v44) + 8 * v12;
    }
    else {
      uint64_t v45 = 0;
    }
    *((void *)v11 + 4) = v45;
    uint64_t v46 = sub_2225F3960(&v52, v44);
    int v47 = sub_2225F5AE8(v46 + 80);
    v11[10] = v47;
    if (v47) {
      uint64_t v49 = sub_2225F3960(v53, v48) + 16 * v20;
    }
    else {
      uint64_t v49 = 0;
    }
    *((void *)v11 + 6) = v49;
  }
  sub_2225D35B8(v53);
  sub_2225D54E4(v54);
  return v11;
}

uint64_t sub_2226B1278(uint64_t *a1)
{
  uint64_t v2 = sub_2225D36D8(a1);
  sub_2225D59B4(a1);

  return nullsub_1(a1, v2);
}

void *sub_2226B12C0(uint64_t *a1, unint64_t a2)
{
  __n128 result = (void *)sub_2225D4970(a1);
  if (a2 <= (unint64_t)result)
  {
    if (a2 < (unint64_t)result)
    {
      uint64_t v5 = *a1 + 8 * a2;
      return (void *)sub_2226340E0(a1, v5);
    }
  }
  else
  {
    return sub_2226B4660(a1, a2 - (void)result);
  }
  return result;
}

void *sub_2226B133C(uint64_t *a1, unint64_t a2)
{
  __n128 result = (void *)sub_2225D36D8(a1);
  if (a2 <= (unint64_t)result)
  {
    if (a2 < (unint64_t)result)
    {
      uint64_t v5 = *a1 + 16 * a2;
      return (void *)sub_2225D5AA8(a1, v5);
    }
  }
  else
  {
    return sub_2226B4BEC(a1, a2 - (void)result);
  }
  return result;
}

uint64_t sub_2226B13B8(uint64_t a1)
{
  return sub_2225D2E88((uint64_t *)(a1 + 16));
}

uint64_t sub_2226B13C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_2226B4F04(&v3, a2);
  return v3;
}

uint64_t sub_2226B13F0(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_2226B4F18(a1, a2);
  }
  else
  {
    sub_2225E72BC((uint64_t)a1, a2);
    uint64_t result = v4 + 8;
  }
  a1[1] = result;
  return result;
}

unint64_t sub_2226B144C(_DWORD *a1, int a2)
{
  return (unint64_t)sub_222609C14(a1, a2) >> 32;
}

uint64_t sub_2226B146C(uint64_t *a1, __n128 *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, (uint64_t)a2))
  {
    uint64_t result = sub_2226B4FC8(a1, a2);
  }
  else
  {
    sub_2225D4CD0((uint64_t)a1, a2);
    uint64_t result = v4 + 16;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2226B14C8(int a1)
{
  return dword_2226D15E0[a1 - 1];
}

uint64_t sub_2226B14DC(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  sub_2226B15B0(a1 + 8);
  sub_2226B15B4(v7, a1);
  sub_2226B15B8(v6, a1);
  sub_2226B15BC(v5, a1);
  sub_22265884C(a1 + 64, v7, v6, v5);
  sub_2226529E4(v5);
  sub_2226529E8(v6);
  sub_2226529EC(v7);
  sub_2226B15C0((unsigned char *)a1, a2);
  return a1;
}

uint64_t sub_2226B15C0(unsigned char *a1, uint64_t a2)
{
  uint64_t v12 = sub_222640540(a2);
  uint64_t v4 = sub_2225C3C70((uint64_t)&v12);
  uint64_t result = sub_22268B634(v4);
  if ((result & 1) == 0)
  {
    uint64_t v6 = (uint64_t *)sub_2225CC180(a2 + 16);
    uint64_t result = sub_222655EEC(a2 + 16);
    if (v6 != (uint64_t *)result)
    {
      uint64_t v7 = (uint64_t *)result;
      while (1)
      {
        uint64_t v8 = *v6;
        uint64_t v12 = sub_2225C5B40(*v6);
        uint64_t v9 = sub_2225C3C70((uint64_t)&v12);
        uint64_t result = sub_222655B10(v9);
        if (result)
        {
          uint64_t result = sub_222655AE4(result);
          if (result == 10) {
            break;
          }
        }
        if (++v6 == v7) {
          return result;
        }
      }
      if (v8)
      {
        sub_2226B3A74(&v11, 0, 0, 0, 1);
        sub_2226B1AAC((uint64_t)(a1 + 8), v8, v11);
        *a1 = 1;
        uint64_t v10 = sub_222655F20(a2);
        return sub_22265AEC0(a1 + 64, v10);
      }
    }
  }
  return result;
}

uint64_t sub_2226B16C4(uint64_t a1)
{
  uint64_t v2 = sub_222652F78(a1, 0);
  sub_222608F94(v2 + 24, 0);
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

uint64_t sub_2226B1700(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2226B1728(a1, (uint64_t)&v3);
}

uint64_t sub_2226B1728(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_2226B176C(a1, a2, &v5);
}

uint64_t sub_2226B1770(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_2225D918C())
  {
    j_j_nullsub_1(&v6);
    j_j_nullsub_1(&v5);
    sub_2226B17E8(a1, a2, &v5);
    *(void *)(a1 + 24) = a1;
  }
  return a1;
}

void *sub_2226B17EC(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658910(a1);
  *char v6 = &unk_26D4DEC90;
  sub_22265CD6C(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_2226B184C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_2225D50C4(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_2226B17E8(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265CF80(v11);
  return v8;
}

uint64_t sub_2226B1900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_2226B17E8(a2, v4, v5);
}

uint64_t sub_2226B195C(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_2226B1964(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v5);
  nullsub_1(v2, v3);
  return sub_2225D5484((uint64_t)&v5, a1, 1);
}

uint64_t sub_2226B19BC(uint64_t a1, uint64_t a2)
{
  return sub_2226B19C4(a1 + 8, a2);
}

uint64_t sub_2226B19C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_2226B19FC(v3, a2);
}

BOOL sub_2226B1A00(unsigned char **a1, uint64_t *a2)
{
  return sub_2226B1A08(a1, *a2);
}

BOOL sub_2226B1A08(unsigned char **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  return *v2 && sub_2226B1A20((uint64_t)v2, a2);
}

BOOL sub_2226B1A20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22268AA14(a2);
  uint64_t v4 = v3;
  if (v3 && sub_222608330(v3))
  {
    sub_222608330(v4);
    sub_22265A628(a1 + 64);
    uint64_t v5 = a1 + 8;
    uint64_t v6 = sub_222608330(v4);
    char v7 = sub_2226B1B1C(v5, v6);
    sub_2226B1AAC(v5, v4, v7);
  }
  return v4 == 0;
}

uint64_t *sub_2226B1AAC(uint64_t a1, uint64_t a2, char a3)
{
  char v7 = a3;
  uint64_t v6 = a2;
  if (sub_2226B1B7C(&v7) || sub_2226B1B8C(a1)) {
    return (uint64_t *)sub_2226B1BA8(a1, a2);
  }
  uint64_t result = sub_2226B1BF0(a1, &v6);
  *(unsigned char *)uint64_t result = v7;
  return result;
}

uint64_t sub_2226B1B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a2;
  uint64_t v2 = a1 + 24;
  if (sub_2226650C0(a1 + 24, &v6))
  {
    uint64_t v4 = sub_2226B1EF0(v2, &v6);
  }
  else
  {
    uint64_t v4 = (uint64_t *)&v7;
    sub_2225D2D24(&v7, v3);
  }
  return *(unsigned __int8 *)v4;
}

BOOL sub_2226B1B7C(unsigned char *a1)
{
  return *a1 == 0;
}

BOOL sub_2226B1B8C(uint64_t a1)
{
  return !sub_2226B1C0C(a1);
}

unsigned char *sub_2226B1BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t result = (unsigned char *)sub_222682EC0(a1, &v5);
  if (result)
  {
    uint64_t v4 = sub_2226B1BF0(a1, &v5);
    return sub_2225D2D28(v4);
  }
  return result;
}

uint64_t *sub_2226B1BF0(uint64_t a1, uint64_t *a2)
{
  return sub_2226B1C1C(a1, a2) + 1;
}

BOOL sub_2226B1C0C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 48) == 0;
}

uint64_t *sub_2226B1C1C(uint64_t a1, uint64_t *a2)
{
  char v7 = 0;
  if (sub_222682F60(a1, a2, &v7)) {
    return v7;
  }
  sub_2225D2D24(&v6, v4);
  return sub_2226B1C7C(a1, a2, &v6, v7);
}

uint64_t *sub_2226B1C7C(uint64_t a1, uint64_t *a2, unsigned char *a3, uint64_t *a4)
{
  uint64_t result = sub_2226B1CB8(a1, a2, a4);
  *uint64_t result = *a2;
  *((unsigned char *)result + 8) = *a3;
  return result;
}

uint64_t *sub_2226B1CB8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  char v11 = a3;
  int v5 = sub_2225F5668(a1);
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2226B1DA4(a1, (2 * v6));
    sub_222682F60(a1, a2, &v11);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_2226B1DA4(a1, v7);
    sub_222682F60(a1, a2, &v11);
  }
  uint64_t v8 = sub_2225F5674(a1);
  uint64_t v9 = sub_2225F9EB8(v8);
  if (!sub_2225D085C(*v11, v9)) {
    sub_2225F56B0(a1);
  }
  return v11;
}

void sub_2226B1DA8(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = *(void **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_222609018(a1, *v5);
  if (v4)
  {
    sub_2226B1E34(a1, (uint64_t)v4, (uint64_t)v4 + 16 * v3);
    j__free(v4);
  }
  else
  {
    sub_222653050(a1);
  }
}

uint64_t sub_2226B1E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_222653050(a1);
  uint64_t v7 = sub_2225F9EB8(v6);
  uint64_t result = sub_222652D44();
  if (a2 != a3)
  {
    uint64_t v9 = result;
    do
    {
      uint64_t result = sub_2225D085C(*(void *)a2, v7);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2225D085C(*(void *)a2, v9);
        if ((result & 1) == 0)
        {
          uint64_t v10 = 0;
          sub_222682F60(a1, (uint64_t *)a2, &v10);
          *(void *)uint64_t v10 = *(void *)a2;
          *(unsigned char *)(v10 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t result = sub_2225F5674(a1);
        }
      }
      a2 += 16;
    }
    while (a2 != a3);
  }
  return result;
}

uint64_t *sub_2226B1EF0(uint64_t a1, uint64_t *a2)
{
  return sub_2226B1F0C(a1, a2) + 1;
}

uint64_t *sub_2226B1F0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v7 = 0;
  if (sub_22260FA40(a1, a2, &v7)) {
    return v7;
  }
  sub_2225D2D24(&v6, v4);
  return sub_222611AB8(a1, a2, &v6, v7);
}

uint64_t sub_2226B1F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2226B1F94(a1, (uint64_t)&v3);
}

uint64_t sub_2226B1F94(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_2226B1FD8(a1, a2, &v5);
}

uint64_t sub_2226B1FDC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_2225D918C())
  {
    j_j_nullsub_1(&v6);
    j_j_nullsub_1(&v5);
    sub_2226B2054(a1, a2, &v5);
    *(void *)(a1 + 24) = a1;
  }
  return a1;
}

void *sub_2226B2058(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658C54(a1);
  *char v6 = &unk_26D4DECD8;
  sub_22265CD6C(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_2226B20B8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_2225D50C4(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_2226B2054(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265CF80(v11);
  return v8;
}

uint64_t sub_2226B216C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_2226B2054(a2, v4, v5);
}

uint64_t sub_2226B21C8(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_2226B21D0(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v5);
  nullsub_1(v2, v3);
  return sub_2225D5484((uint64_t)&v5, a1, 1);
}

uint64_t sub_2226B2228(uint64_t a1, uint64_t a2)
{
  return sub_2226B2230(a1 + 8, a2);
}

uint64_t sub_2226B2230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_2226B2268(v3, a2);
}

uint64_t sub_2226B226C(unsigned char **a1, uint64_t *a2)
{
  return sub_2226B2274(a1, *a2);
}

uint64_t sub_2226B2274(unsigned char **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*v2) {
    return sub_2226B228C((uint64_t)v2, a2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B228C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226B24C0(a2);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = a1 + 64;
    sub_2225C3D04(v4);
    sub_22265A628(a1 + 64);
    ++*(_DWORD *)(a1 + 56);
    uint64_t v7 = sub_2225C5B40(v5);
    sub_22265AEC0(a1 + 64, v7);
    if (!sub_222608330(v5))
    {
LABEL_11:
      uint64_t result = 0;
      --*(_DWORD *)(a1 + 56);
      return result;
    }
    uint64_t v8 = sub_222608330(v5);
LABEL_10:
    sub_22265AEC0(v6, v8);
    goto LABEL_11;
  }
  uint64_t v9 = sub_2226B24FC(a2);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v6 = a1 + 64;
    sub_2225C3D04(v9);
    sub_22265A628(a1 + 64);
    ++*(_DWORD *)(a1 + 56);
    uint64_t v8 = sub_2225C5B40(v10);
    goto LABEL_10;
  }
  uint64_t v11 = sub_2226B2538(a2);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v6 = a1 + 64;
    uint64_t v13 = sub_2225C3D04(v11);
    sub_22265AEC0(a1 + 64, v13);
    ++*(_DWORD *)(a1 + 56);
    uint64_t v14 = sub_2225C5B40(v12);
    sub_22265AEC0(a1 + 64, v14);
    sub_222608330(v12);
    sub_22265A628(a1 + 64);
    uint64_t v8 = sub_2225CDCF4(v12);
    goto LABEL_10;
  }
  uint64_t v15 = sub_2226B2574(a2);
  if (v15)
  {
    uint64_t v16 = v15;
    ++*(_DWORD *)(a1 + 56);
    uint64_t v6 = a1 + 64;
    uint64_t v17 = sub_2225C3D04(v15);
    sub_22265AEC0(a1 + 64, v17);
    uint64_t v8 = sub_2225C5B40(v16);
    goto LABEL_10;
  }
  uint64_t v19 = sub_2226B25B0(a2);
  if (v19)
  {
    uint64_t v20 = v19;
    ++*(_DWORD *)(a1 + 56);
    uint64_t v21 = sub_2225C3D04(v19);
    sub_22265AEC0(a1 + 64, v21);
    sub_2225C5B40(v20);
    sub_22265A628(a1 + 64);
    goto LABEL_11;
  }
  uint64_t v22 = sub_2226B25EC(a2);
  if (!v22) {
    return 1;
  }
  uint64_t v23 = v22;
  sub_2225C3D04(v22);
  sub_22265A628(a1 + 64);
  uint64_t v24 = sub_2225C3D04(v23);
  char v25 = sub_2226B2628(a1 + 8, v24, 3);
  uint64_t result = 0;
  if (!*(unsigned char *)a1) {
    char v25 = 0;
  }
  *(unsigned char *)a1 = v25;
  ++*(_DWORD *)(a1 + 4);
  return result;
}

uint64_t sub_2226B24C0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B267C(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B24FC(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B26DC(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B2538(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B2718(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B2574(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B2754(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B25B0(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_22268D970(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B25EC(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B2790(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B2628(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = a2;
  uint64_t v4 = a1 + 24;
  uint64_t result = sub_2226650C0(a1 + 24, &v7);
  if (result)
  {
    uint64_t v6 = sub_2226B1EF0(v4, &v7);
    return sub_2226B27F0((unsigned __int8 *)v6, a3);
  }
  return result;
}

uint64_t sub_2226B2680(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226B26AC(&v3);
}

uint64_t sub_2226B26AC(void *a1)
{
  return sub_2226B26B4(*a1);
}

BOOL sub_2226B26BC(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 3;
}

uint64_t sub_2226B26E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226B270C(&v3);
}

uint64_t sub_2226B270C(void *a1)
{
  return sub_2226B2714(*a1);
}

uint64_t sub_2226B271C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226B2748(&v3);
}

uint64_t sub_2226B2748(void *a1)
{
  return sub_2226B2750(*a1);
}

uint64_t sub_2226B2758(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226B2784(&v3);
}

uint64_t sub_2226B2784(void *a1)
{
  return sub_2226B278C(*a1);
}

uint64_t sub_2226B2794(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_2226B27C0(&v3);
}

uint64_t sub_2226B27C0(void *a1)
{
  return sub_2226B27C8(*a1);
}

BOOL sub_2226B27D0(unsigned __int8 *a1)
{
  return sub_2226376DC(a1) == 13;
}

uint64_t sub_2226B27F0(unsigned __int8 *a1, char a2)
{
  return (*a1 >> a2) & 1;
}

uint64_t sub_2226B2800(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_2226B2828(a1, (uint64_t)&v3);
}

uint64_t sub_2226B2828(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_2226B286C(a1, a2, &v5);
}

uint64_t sub_2226B2870(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_2225D918C())
  {
    j_j_nullsub_1(&v6);
    j_j_nullsub_1(&v5);
    sub_2226B28E8(a1, a2, &v5);
    *(void *)(a1 + 24) = a1;
  }
  return a1;
}

void *sub_2226B28EC(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658E8C(a1);
  *char v6 = &unk_26D4DED20;
  sub_22265CD6C(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_2226B294C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_2225D50C4(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_2226B28E8(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_22265CF80(v11);
  return v8;
}

uint64_t sub_2226B2A00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_2226B28E8(a2, v4, v5);
}

uint64_t sub_2226B2A5C(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_2226B2A64(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v5);
  nullsub_1(v2, v3);
  return sub_2225D5484((uint64_t)&v5, a1, 1);
}

uint64_t sub_2226B2ABC(uint64_t a1, uint64_t a2)
{
  return sub_2226B2AC4(a1 + 8, a2);
}

uint64_t sub_2226B2AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_2226B2AFC(v3, a2);
}

uint64_t sub_2226B2B00(unsigned char **a1, uint64_t *a2)
{
  return sub_2226B2B08(a1, *a2);
}

uint64_t sub_2226B2B08(unsigned char **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*v2) {
    return sub_2226B2B20((uint64_t)v2, a2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B2B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_222659694(a2);
  if (v4)
  {
    uint64_t v5 = a1 + 8;
    uint64_t v6 = sub_2225C3D04(v4);
    char v7 = sub_2226B30D4(v5, v6);
    uint64_t v8 = v5;
    uint64_t v9 = a2;
LABEL_8:
    sub_2226B3070(v8, v9, v7);
    return 0;
  }
  uint64_t v10 = sub_222674860(a2);
  if (v10 || (uint64_t v10 = sub_2226B3130(a2)) != 0)
  {
    uint64_t v11 = v10;
    sub_2225C3D04(v10);
    sub_22265A628(a1 + 64);
    uint64_t v12 = a1 + 8;
    uint64_t v13 = sub_2225C3D04(v11);
    char v7 = sub_2226B1B1C(v12, v13);
LABEL_6:
    uint64_t v8 = v12;
LABEL_7:
    uint64_t v9 = v11;
    goto LABEL_8;
  }
  uint64_t v15 = sub_2226B316C(a2);
  if (v15)
  {
    uint64_t v11 = v15;
    sub_2225C5B40(v15);
    sub_22265A628(a1 + 64);
    ++*(_DWORD *)(a1 + 56);
    sub_222608330(v11);
    sub_22265A628(a1 + 64);
    sub_2225CDCF4(v11);
    sub_22265A628(a1 + 64);
    --*(_DWORD *)(a1 + 56);
    uint64_t v16 = sub_222608330(v11);
    LOBYTE(v70) = sub_2226B1B1C(a1 + 8, v16);
    uint64_t v17 = sub_2225CDCF4(v11);
    char v18 = sub_2226B1B1C(a1 + 8, v17);
    sub_2226B31A8(&v70, v18);
    char v7 = v70;
    uint64_t v8 = a1 + 8;
    goto LABEL_7;
  }
  uint64_t v19 = sub_222674824(a2);
  if (v19)
  {
    uint64_t v11 = v19;
    sub_2225C5B40(v19);
    sub_22265A628(a1 + 64);
    uint64_t v12 = a1 + 8;
    uint64_t v20 = sub_2225C5B40(v11);
    char v72 = sub_2226B1B1C(v12, v20);
    uint64_t v70 = sub_222657D64(v11);
    uint64_t v71 = v21;
    sub_2225D2D24(&v69, v21);
    if (sub_2225C3D04((uint64_t)&v70))
    {
      uint64_t v22 = 0;
      unsigned int v23 = 0;
      do
      {
        int v24 = sub_2225CC124(&v70, v22);
        int v25 = sub_2226B31DC((unsigned __int8 *)&v72, v24);
        sub_2226B31B8(&v69, v23++, v25);
        uint64_t v22 = v23;
      }
      while (sub_2225C3D04((uint64_t)&v70) > (unint64_t)v23);
    }
    char v7 = v69;
    goto LABEL_6;
  }
  uint64_t v26 = sub_2226B321C(a2);
  if (!v26)
  {
    uint64_t v35 = sub_2226B336C(a2);
    if (v35)
    {
      uint64_t v36 = v35;
      int v37 = sub_2226579A0(v35);
      if (v37 == 5 || v37 == 3)
      {
        uint64_t v38 = sub_2225C5B40(v36);
        sub_2226B3258(a1, v38);
        return 0;
      }
      return 1;
    }
    uint64_t v39 = sub_22267DD9C(a2);
    uint64_t v40 = v39;
    if (v39)
    {
      uint64_t v70 = sub_2225C5B40(v39);
      uint64_t v41 = sub_2225C3C70((uint64_t)&v70);
      if (!sub_222699698(v41))
      {
        unsigned int v54 = 1;
LABEL_48:
        if (v40) {
          return v54;
        }
        else {
          return 1;
        }
      }
      sub_2225D2D24(&v72, v42);
      int v43 = (uint64_t *)sub_2225CC180(v40 + 8);
      uint64_t v44 = sub_222657D18(v40 + 8);
      if (v43 != (uint64_t *)v44)
      {
        uint64_t v45 = (uint64_t *)v44;
        int v46 = 0;
        do
        {
          uint64_t v47 = *v43;
          sub_22265A628(a1 + 64);
          char v69 = sub_2226B1B1C(a1 + 8, v47);
          uint64_t v70 = sub_222659834(v47);
          uint64_t v48 = sub_2225C3C70((uint64_t)&v70);
          if (sub_22265E240(v48))
          {
            int v49 = sub_2226B27F0((unsigned __int8 *)&v69, 0);
            sub_2226B31B8(&v72, v46++, v49);
          }
          else
          {
            uint64_t v70 = sub_222659834(v47);
            uint64_t v50 = sub_2225C3C70((uint64_t)&v70);
            uint64_t v51 = sub_22265E3C0(v50);
            if (sub_222654EC8(v51))
            {
              unsigned int v52 = 0;
              do
              {
                int v53 = sub_2226B27F0((unsigned __int8 *)&v69, v52);
                sub_2226B31B8(&v72, v46 + v52++, v53);
              }
              while (v52 < sub_222654EC8(v51));
              v46 += v52;
            }
          }
          ++v43;
        }
        while (v43 != v45);
      }
      sub_2226B3070(a1 + 8, v40, v72);
    }
    unsigned int v54 = 0;
    goto LABEL_48;
  }
  uint64_t v27 = v26;
  sub_2225C5B40(v26);
  sub_22265A628(a1 + 64);
  uint64_t v28 = a1 + 8;
  uint64_t v29 = sub_2225C5B40(v27);
  char v72 = sub_2226B1B1C(a1 + 8, v29);
  if (!sub_2226B1B7C(&v72) && sub_222657CF4(v27) == 4)
  {
    uint64_t v30 = sub_2225C3D04(v27);
    uint64_t v31 = sub_222659694(v30);
    if (v31)
    {
      uint64_t v32 = sub_2225C3D04(v31);
      uint64_t v33 = sub_2225C5B40(v27);
      char v34 = sub_2226B1B1C(v28, v33);
      sub_2226B1AAC(v28, v32, v34);
      return 0;
    }
    uint64_t v55 = sub_2225C3D04(v27);
    uint64_t v56 = sub_222674824(v55);
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = sub_2225C5B40(v56);
      uint64_t v59 = sub_222659694(v58);
      if (v59)
      {
        uint64_t v60 = v59;
        uint64_t v70 = sub_222657D64(v57);
        uint64_t v71 = v61;
        if (sub_2225C3D04((uint64_t)&v70))
        {
          uint64_t v62 = 0;
          unsigned int v63 = 0;
          do
          {
            uint64_t v64 = sub_2225C3D04(v60);
            int v65 = sub_2225CC124(&v70, v62);
            char v66 = sub_222675458(v65);
            unsigned int v67 = sub_2226B27F0((unsigned __int8 *)&v72, v63);
            sub_2226B32F4(v28, v64, v66, v67);
            uint64_t v62 = ++v63;
          }
          while (sub_2225C3D04((uint64_t)&v70) > (unint64_t)v63);
        }
        return 0;
      }
    }
  }
  uint64_t v68 = sub_2225C3D04(v27);
  return sub_2226B3258(a1, v68);
}

uint64_t *sub_2226B3070(uint64_t a1, uint64_t a2, char a3)
{
  char v7 = a3;
  uint64_t v6 = a2;
  if (sub_2226B1B7C(&v7)) {
    return (uint64_t *)sub_2226B33A8(a1, a2);
  }
  uint64_t result = sub_2226B1EF0(a1 + 24, &v6);
  *(unsigned char *)uint64_t result = v7;
  return result;
}

uint64_t sub_2226B30D4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a2;
  if (sub_222682EC0(a1, &v6))
  {
    uint64_t v4 = sub_2226B1BF0(a1, &v6);
  }
  else
  {
    uint64_t v4 = (uint64_t *)&v7;
    sub_2225D2D24(&v7, v3);
  }
  return *(unsigned __int8 *)v4;
}

uint64_t sub_2226B3130(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B33F4(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B316C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B3424(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

unsigned char *sub_2226B31A8(unsigned char *result, char a2)
{
  *result &= a2;
  return result;
}

unsigned char *sub_2226B31B8(unsigned char *result, char a2, int a3)
{
  int v3 = *result;
  int v4 = v3 | (1 << a2);
  if (!a3) {
    LOBYTE(v4) = v3 & ~(1 << a2);
  }
  *uint64_t result = v4;
  return result;
}

uint64_t sub_2226B31DC(unsigned __int8 *a1, int a2)
{
  char v3 = sub_222675458(a2);

  return sub_2226B27F0(a1, v3);
}

uint64_t sub_2226B321C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B3454(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B3258(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  sub_2225D2D24(&v4, a2);
  sub_2226B3484(v5, &v4, a1);
  sub_222659F98(v6, v5);
  sub_2226529E4(v5);
  sub_22265A698(v6);
  sub_2226529E0(v6);
  return 0;
}

unsigned char *sub_2226B32F4(uint64_t a1, uint64_t a2, char a3, unsigned int a4)
{
  uint64_t v10 = a2;
  if ((a4 & 1) != 0 || (uint64_t result = (unsigned char *)sub_222682EC0(a1, &v10), result))
  {
    uint64_t v8 = sub_2226B1BF0(a1, &v10);
    BOOL v9 = sub_2226B1C0C(a1);
    return sub_2226B31B8(v8, a3, v9 & a4);
  }
  return result;
}

uint64_t sub_2226B336C(uint64_t a1)
{
  uint64_t v2 = a1;
  if (sub_2226B3A44(&v2)) {
    return sub_2225E55A8(v2);
  }
  else {
    return 0;
  }
}

unsigned char *sub_2226B33A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v2 = a1 + 24;
  uint64_t result = (unsigned char *)sub_2226650C0(a1 + 24, &v5);
  if (result)
  {
    char v4 = sub_2226B1EF0(v2, &v5);
    return sub_2225D2D28(v4);
  }
  return result;
}

uint64_t sub_2226B33F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657B48(&v3);
}

uint64_t sub_2226B3428(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657C5C(&v3);
}

uint64_t sub_2226B3458(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657CB8(&v3);
}

uint64_t sub_2226B3488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_2226B34B0(a1, (uint64_t)v4);
}

uint64_t sub_2226B34B0(uint64_t a1, uint64_t a2)
{
  j_j_nullsub_1(&v5);
  return sub_2226B34F4(a1, a2, &v5);
}

uint64_t sub_2226B34F8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  if (sub_2225D918C())
  {
    j_j_nullsub_1(&v6);
    j_j_nullsub_1(&v5);
    sub_2226B3570(a1, a2, &v5);
    *(void *)(a1 + 24) = a1;
  }
  return a1;
}

void *sub_2226B3574(void *a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_222658E8C(a1);
  *char v6 = &unk_26D4DED68;
  sub_2226B35D4(v6 + 1, a2, a3);
  return a1;
}

uint64_t sub_2226B35D8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  uint64_t v2 = j_j_nullsub_1(&v12);
  uint64_t v3 = sub_2225D2B60(v2, 1uLL);
  sub_2225C3D0C(v10, &v12, 1);
  sub_2225E31DC((uint64_t)v11, v3);
  uint64_t v5 = sub_2225CBA80((uint64_t)v11, v4);
  uint64_t v6 = j_j_nullsub_1(v1);
  j_j_nullsub_1(v10);
  sub_2226B3570(v5, v6, v10);
  uint64_t v8 = sub_2225CE10C((uint64_t)v11, v7);
  sub_2226B37E8(v11);
  return v8;
}

uint64_t sub_2226B368C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = j_j_nullsub_1(a1 + 8);
  uint64_t v5 = j_j_nullsub_1(v3);

  return sub_2226B3570(a2, v4, v5);
}

uint64_t sub_2226B36E8(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1 + 8, a2);
}

uint64_t sub_2226B36F0(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  j_j_nullsub_1(a1 + 8);
  j_j_nullsub_1(&v5);
  nullsub_1(v2, v3);
  return sub_2225D270C((uint64_t)&v5, a1, 1);
}

uint64_t sub_2226B3748(uint64_t a1, uint64_t a2)
{
  return sub_2226B3894(a1 + 8, a2);
}

uint64_t sub_2226B3750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  uint64_t v6 = sub_2225FA0E8(a3);

  return sub_2226B37AC(a1, v5, v6);
}

uint64_t sub_2226B37B0(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_22268D560(a1, a2);

  return sub_22265BD24((uint64_t)v4, a3);
}

uint64_t sub_2226B37EC(uint64_t a1)
{
  return a1;
}

void *sub_2226B3818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  *uint64_t result = a2;
  if (v4)
  {
    uint64_t v8 = (uint64_t *)sub_2225E3330(a1, v7);
    return (void *)sub_2226B3888(v8, v4);
  }
  return result;
}

uint64_t sub_2226B3888(uint64_t *a1, uint64_t a2)
{
  return sub_2225D264C(*a1, a2, a1[1]);
}

uint64_t sub_2226B3894(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a1, a2);

  return sub_2226B38CC(v3, a2);
}

uint64_t sub_2226B38D0(uint64_t a1, void *a2)
{
  return sub_2226B38D8(a1, *a2);
}

BOOL sub_2226B38DC(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_222659694(a2);
  if (v5)
  {
    uint64_t v6 = (uint64_t)(v4 + 8);
    if (sub_2226B1B7C(*a1))
    {
      uint64_t v7 = sub_2225C3D04(v5);
      sub_2226B1BA8((uint64_t)(v4 + 8), v7);
    }
    else
    {
      for (int i = 0; i != 4; ++i)
      {
        if (sub_2226B27F0(*a1, i))
        {
          uint64_t v16 = sub_2225C3D04(v5);
          sub_2226B32F4(v6, v16, i, 0);
        }
      }
    }
  }
  else
  {
    uint64_t v8 = sub_222674824(a2);
    if (v8)
    {
      v18[0] = sub_222657D64(v8);
      v18[1] = v9;
      if (sub_2225C3D04((uint64_t)v18))
      {
        uint64_t v10 = 0;
        unsigned int v11 = 1;
        do
        {
          char v12 = *a1;
          int v13 = sub_2225CC124(v18, v10);
          sub_2226B39FC(v12, v13, 1);
          uint64_t v10 = v11;
        }
        while (sub_2225C3D04((uint64_t)v18) > (unint64_t)v11++);
      }
    }
  }
  return v5 == 0;
}

unsigned char *sub_2226B39FC(unsigned char *a1, int a2, int a3)
{
  char v5 = sub_222675458(a2);

  return sub_2226B31B8(a1, v5, a3);
}

uint64_t sub_2226B3A48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225E5530(a1, a2);
  return sub_222657C00(&v3);
}

unsigned char *sub_2226B3A78(unsigned char *a1, int a2, int a3, int a4, int a5)
{
  *a1 = 0;
  sub_2226B31B8(a1, 0, a2);
  sub_2226B31B8(a1, 1, a3);
  sub_2226B31B8(a1, 2, a4);
  sub_2226B31B8(a1, 3, a5);
  return a1;
}

uint64_t sub_2226B3AF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226B3B28(uint64_t a1)
{
  sub_222608B18(a1 + 24);

  return sub_2226528E0(a1);
}

uint64_t sub_2226B3B64(uint64_t a1)
{
  uint64_t v2 = (void *)sub_2225C26A4(136);
  sub_2225E0EC4(v2);

  return sub_2226900E4(a1, v2, 1);
}

uint64_t sub_2226B3BB0(uint64_t a1)
{
  uint64_t result = sub_2225E51C8(a1);
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 8 * v3;
      do
      {
        uint64_t v6 = *(void *)a1;
        uint64_t v7 = *(void *)(*(void *)a1 + v4);
        if (v7)
        {
          uint64_t result = sub_2225CAE20();
          if (v7 != result) {
            uint64_t result = sub_2225F9DBC(*(unsigned int **)(v6 + v4), *(void *)(a1 + 24));
          }
        }
        *(void *)(v6 + v4) = 0;
        v4 += 8;
      }
      while (v5 != v4);
    }
    *(_DWORD *)(a1 + 12) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  return result;
}

uint64_t sub_2226B3C30(uint64_t a1)
{
  return a1 + 184;
}

uint64_t sub_2226B3C38(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 &= 0xE0u;
  *(void *)(a1 + 8) = 0;
  sub_2225C3D00(a1 + 16, &byte_2226D1615);
  sub_2225C3D00(a1 + 32, &byte_2226D1615);
  sub_2226B3CD8(a1 + 48, a2, 4);
  sub_2226B3CDC(a1 + 72, a2, 2);
  sub_2226B3CDC(a1 + 96, a2, 0);
  sub_2226B3CDC(a1 + 120, a2, 0);
  return a1;
}

void *sub_2226B3CE0(void *a1, void *a2, unsigned int a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_2226B3D10(a1, a2, a3);
  return a1;
}

void *sub_2226B3D10(void *result, void *a2, unsigned int a3)
{
  if (-1431655765 * ((result[2] - *result) >> 3) < a3) {
    return (void *)sub_2226B3D40(result, a2, a3);
  }
  return result;
}

uint64_t sub_2226B3D40(void *a1, void *a2, unint64_t a3)
{
  uint64_t v6 = (uint64_t)(a1[2] - *a1) >> 3;
  unint64_t v8 = sub_2225D24AC(a1);
  if (0x5555555555555556 * v6 > a3) {
    a3 = 0x5555555555555556 * v6;
  }
  uint64_t v9 = sub_22261964C(a2, v7);
  uint64_t v10 = (_OWORD *)sub_2225F2F70(v9, a3);
  sub_22264559C((long long *)*a1, (long long *)a1[1], v10);
  uint64_t result = nullsub_1(a1, *a1);
  *a1 = v10;
  a1[1] = (char *)v10 + 24 * v8;
  a1[2] = &v10[24 * a3 / 0x10];
  return result;
}

void *sub_2226B3DE4(void *a1, void *a2, unsigned int a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_2226B3E14(a1, a2, a3);
  return a1;
}

void *sub_2226B3E14(void *result, void *a2, unsigned int a3)
{
  if (((result[2] - *result) >> 3) < a3) {
    return (void *)sub_2226B3E38(result, a2, a3);
  }
  return result;
}

uint64_t sub_2226B3E38(void *a1, void *a2, unint64_t a3)
{
  uint64_t v6 = a1[2] - *a1;
  uint64_t v8 = sub_2225D4970(a1);
  if (v6 >> 2 > a3) {
    a3 = v6 >> 2;
  }
  uint64_t v9 = sub_22261964C(a2, v7);
  uint64_t v10 = (void *)sub_22263C7AC(v9, a3);
  sub_222691B18((uint64_t *)*a1, (uint64_t *)a1[1], v10);
  uint64_t result = nullsub_1(a1, *a1);
  *a1 = v10;
  a1[1] = &v10[v8];
  a1[2] = &v10[a3];
  return result;
}

uint64_t sub_2226B3ED0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226B3EFC(void *a1)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 5);
}

uint64_t sub_2226B3F20(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225E50F8(a1, 16);
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_2226B3F4C(uint64_t a1)
{
  if (!sub_2225E51C8(a1))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = 8 * v2;
      do
      {
        uint64_t v5 = *(unsigned int **)(*(void *)a1 + v3);
        if (v5 && v5 != (unsigned int *)sub_2225CAE20()) {
          sub_2225F9DBC(v5, *(void *)(a1 + 24));
        }
        v3 += 8;
      }
      while (v4 != v3);
    }
  }
  free(*(void **)a1);
  return a1;
}

uint64_t sub_2226B3FC8(uint64_t a1)
{
  return sub_2226B3FEC(a1, &v2);
}

uint64_t sub_2226B3FF4(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t result = sub_2226B4020();
  *(void *)(result + 24) = result;
  return result;
}

void *sub_2226B4024(void *a1, uint64_t a2, uint64_t a3)
{
  *sub_2226AD41C(a1) = &unk_26D4DEDB0;
  sub_222665BE4(a2, a3);
  return a1;
}

void sub_2226B4088()
{
  uint64_t v0 = (void *)j_j_nullsub_1_127();

  j__free(v0);
}

uint64_t sub_2226B40B0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_222658ACC();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226B4020(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_222658AE8(v7);
  return v4;
}

uint64_t sub_2226B4128(uint64_t a1, uint64_t a2)
{
  return sub_2226B4020(a2, a1 + 8);
}

uint64_t sub_2226B413C(uint64_t a1)
{
  return sub_222658B74(a1, 1);
}

uint64_t sub_2226B4144(uint64_t a1, uint64_t a2)
{
  return sub_22265E3C4(a2);
}

uint64_t sub_2226B414C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_22265A680();
    return sub_2226B419C(v4);
  }
}

uint64_t sub_2226B41A8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0;
  uint64_t v4 = sub_2226B4230();
  sub_22261870C(&v7, (uint64_t)&v9);
  sub_2225E31DC((uint64_t)v8, v4);
  uint64_t v5 = sub_2225C3C70((uint64_t)v8);
  sub_2226B423C(v5, a2);
  *(void *)(a1 + 24) = sub_222658AD8(v8);
  sub_2226B4240(v8);
  return a1;
}

uint64_t sub_2226B4230()
{
  return sub_2225CBA78(40, 8);
}

void *sub_2226B4244(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2226B42A4(a1);
  *uint64_t v6 = &unk_26D4DEDF8;
  sub_2226B42C4(v6 + 1, a2, a3);
  return a1;
}

void *sub_2226B42A4(void *result)
{
  *uint64_t result = &unk_26D4DEE40;
  return result;
}

void sub_2226B42CC()
{
  uint64_t v0 = (void *)j_j_nullsub_1_128();

  j__free(v0);
}

uint64_t sub_2226B42F4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = sub_2226B4230();
  sub_22261870C(&v6, (uint64_t)&v8);
  sub_2225E31DC((uint64_t)v7, v2);
  uint64_t v3 = sub_2225C3C70((uint64_t)v7);
  sub_2226B423C(v3, v1);
  uint64_t v4 = sub_222658AD8(v7);
  sub_2226B4240(v7);
  return v4;
}

uint64_t sub_2226B436C(uint64_t a1, uint64_t a2)
{
  return sub_2226B423C(a2, a1 + 8);
}

uint64_t sub_2226B4380(uint64_t a1)
{
  return sub_2226B44C0(a1, 1);
}

uint64_t sub_2226B4388(uint64_t a1)
{
  return sub_2226B44D0(a1 + 8);
}

uint64_t sub_2226B4398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225FA0E8(a2);
  sub_222658A5C(a3);

  return sub_2226B43F0(a1, v5);
}

_OWORD *sub_2226B43F8(_OWORD *a1, uint64_t a2)
{
  uint64_t v6 = a2;
  uint64_t v3 = (_OWORD *)sub_2225CC180((uint64_t)&v6);
  long long v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return a1;
}

uint64_t *sub_2226B4438(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_2226B4460(uint64_t *result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    uint64_t v2 = sub_2225E563C((uint64_t)result);
    return (uint64_t *)sub_2226B44AC(v2, v1);
  }
  return result;
}

uint64_t sub_2226B44AC(uint64_t a1, uint64_t a2)
{
  return sub_2226B44BC(a2, *(void *)(a1 + 8));
}

uint64_t sub_2226B44C0(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA08(a1, 40 * a2, 8);
}

uint64_t sub_2226B44D8(void *a1, uint64_t *a2)
{
  return sub_2226B44E0(a1, *a2);
}

uint64_t sub_2226B44E0(void *a1, uint64_t a2)
{
  uint64_t v14 = a2;
  uint64_t v4 = sub_2226AA4F8(*(void *)(*a1 + 368), a2);
  uint64_t v5 = sub_2226B45A4(v4, a2);
  uint64_t v6 = (uint64_t *)sub_2226B45D0((unsigned __int8 *)v5);
  uint64_t v7 = sub_2226AC638((unsigned __int8 *)v5);
  if (v6 != (uint64_t *)v7)
  {
    char v8 = (uint64_t *)v7;
    do
    {
      uint64_t v9 = *v6;
      uint64_t v10 = a1[1];
      uint64_t v11 = sub_2225C5B40(*v6);
      if (!sub_222689E2C(v10, v11))
      {
        uint64_t v12 = a1[2];
        sub_2225C5B40(v9);
        sub_2226B0C44(v12);
      }
      ++v6;
    }
    while (v6 != v8);
  }
  return sub_2225CC7B8(a1[3], &v14);
}

uint64_t *sub_2226B45A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_22268915C(a1 + 456, &v3);
}

void *sub_2226B45DC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2226B4660(uint64_t *a1, unint64_t a2)
{
  if (a2 <= (*(void *)sub_2225D2650((uint64_t)a1, a2) - a1[1]) >> 3)
  {
    return sub_2226B4738((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
    uint64_t v6 = sub_2225D4970(a1);
    unint64_t v7 = sub_2225E73E0(a1, v6 + a2);
    uint64_t v8 = sub_2225D4970(a1);
    sub_2226B47B8(v10, v7, v8, v5);
    sub_2226B47BC((uint64_t)v10, a2);
    sub_2226B4838(a1, v10);
    return (void *)sub_2226B4928(v10);
  }
}

void *sub_2226B4738(uint64_t a1, uint64_t a2)
{
  sub_2225D5EB8(&v10, a1, a2);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  while (v4 != v5)
  {
    uint64_t v6 = sub_2225D2650(a1, v3);
    uint64_t v8 = nullsub_1(v4, v7);
    sub_2226B492C(v6, v8);
    v4 += 8;
    uint64_t v11 = v4;
  }
  return sub_2225D284C(&v10);
}

uint64_t sub_2226B47BC(uint64_t a1, uint64_t a2)
{
  sub_2226B49C4(&v9, a1 + 16, a2);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  while (v3 != v4)
  {
    uint64_t v5 = sub_2225D2B18(a1);
    uint64_t v7 = nullsub_1(v9, v6);
    sub_2226B492C(v5, v7);
    uint64_t v4 = v10;
    uint64_t v3 = v9 + 8;
    v9 += 8;
  }
  return sub_22261AA18((uint64_t)&v9);
}

uint64_t sub_2226B4838(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2226B49E0();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  uint64_t v10 = sub_2225D4970(a1);
  return nullsub_1(a1, v10);
}

void sub_2226B4930(uint64_t a1, void *a2)
{
  *a2 = 0;
}

uint64_t *sub_2226B4938(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_2225D5E3C(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 8 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 8 * v9;
  return a1;
}

void *sub_2226B49C8(void *result, void *a2, uint64_t a3)
{
  *uint64_t result = *a2;
  result[1] = *a2 + 8 * a3;
  result[2] = a2;
  return result;
}

uint64_t sub_2226B49E0()
{
  return sub_2226B49FC();
}

uint64_t sub_2226B49FC()
{
  sub_2226B4A24(v1);
  return v1[2];
}

uint64_t sub_2226B4A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_2225D5228(a1, a2, a3, a4, (uint64_t)v24);
  uint64_t v12 = v24[0];
  uint64_t v13 = v24[1];
  uint64_t v14 = v24[2];
  uint64_t v15 = v24[3];
  uint64_t v16 = j_nullsub_1(a5, a6);
  sub_2226B4AFC(v12, v13, v14, v15, v16, v17, (uint64_t)v23);
  v22[0] = sub_2225E7788(a1, a2, v23[0], v23[1]);
  v22[1] = v18;
  v21[0] = sub_2225D531C(a5, a6, v23[2]);
  v21[1] = v19;
  return sub_2225CCC60((uint64_t)v22, (uint64_t)v21, a7);
}

uint64_t sub_2226B4AFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v13[0] = a1;
  v13[1] = a2;
  v12[0] = a3;
  v12[1] = a4;
  v11[0] = a5;
  v11[1] = a6;
  while (sub_2225D2CC0((uint64_t)v13, (uint64_t)v12))
  {
    uint64_t v9 = (void *)sub_2225E778C((uint64_t)v13, v8);
    *(void *)sub_2225E77C4((uint64_t)v11) = *v9;
    sub_2225E77D0((uint64_t)v13);
    sub_2225E77D0((uint64_t)v11);
  }
  return sub_2225CCC60((uint64_t)v13, (uint64_t)v11, a7);
}

uint64_t *sub_2226B4B8C(uint64_t *a1)
{
  sub_2225E7840((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_2225E7848(a1, v4);
    sub_2225D5678(v2, v3, v5);
  }
  return a1;
}

void *sub_2226B4BEC(uint64_t *a1, unint64_t a2)
{
  if (a2 <= (*(void *)sub_2225D2650((uint64_t)a1, a2) - a1[1]) >> 4)
  {
    return sub_2226B4CC4((uint64_t)a1, a2);
  }
  else
  {
    uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
    uint64_t v6 = sub_2225D36D8(a1);
    unint64_t v7 = sub_2225D4E1C(a1, v6 + a2);
    uint64_t v8 = sub_2225D36D8(a1);
    sub_2225D4E98(v10, v7, v8, v5);
    sub_2226B4D44((uint64_t)v10, a2);
    sub_2226B4DC0(a1, v10);
    return (void *)sub_2225D4F8C(v10);
  }
}

void *sub_2226B4CC4(uint64_t a1, uint64_t a2)
{
  sub_2225D4DF4(&v10, a1, a2);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  while (v4 != v5)
  {
    uint64_t v6 = sub_2225D2650(a1, v3);
    uint64_t v8 = nullsub_1(v4, v7);
    sub_2226B4EB0(v6, v8);
    v4 += 16;
    uint64_t v11 = v4;
  }
  return sub_2225D284C(&v10);
}

uint64_t sub_2226B4D44(uint64_t a1, uint64_t a2)
{
  sub_22263C548(&v9, (void *)(a1 + 16), a2);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  while (v3 != v4)
  {
    uint64_t v5 = sub_2225D2B18(a1);
    uint64_t v7 = nullsub_1(v9, v6);
    sub_2226B4EB0(v5, v7);
    uint64_t v4 = v10;
    uint64_t v3 = v9 + 16;
    v9 += 16;
  }
  return sub_22261AA18((uint64_t)&v9);
}

uint64_t sub_2226B4DC0(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(&v14, a1[1]);
  sub_2225D2C80(&v13, *a1);
  sub_2225D2C80(&v12, a2[1]);
  v15[0] = sub_2226B4EBC();
  v15[1] = v5;
  a2[1] = sub_2225C3D04((uint64_t)v15);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v7 = (uint64_t *)sub_2225D2650((uint64_t)a1, v6);
  uint64_t v9 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v8);
  sub_2225C6448(v7, v9);
  *a2 = a2[1];
  uint64_t v10 = sub_2225D36D8(a1);
  return nullsub_1(a1, v10);
}

void sub_2226B4EB4(uint64_t a1, void *a2)
{
  *a2 = 0;
  a2[1] = 0;
}

uint64_t sub_2226B4EBC()
{
  return sub_2226B4ED8();
}

uint64_t sub_2226B4ED8()
{
  sub_2226B4F00(v1);
  return v1[2];
}

void *sub_2226B4F04(void *result, uint64_t a2)
{
  *result += 224 * a2;
  return result;
}

uint64_t sub_2226B4F18(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_2225D4970(a1);
  unint64_t v6 = sub_2225E73E0(a1, v5 + 1);
  uint64_t v7 = sub_2225D4970(a1);
  sub_2226B47B8(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2225D5FF0(v4, v9, a2);
  v13 += 8;
  sub_2226B4838(a1, v12);
  uint64_t v10 = a1[1];
  sub_2226B4928(v12);
  return v10;
}

uint64_t sub_2226B4FC8(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, (uint64_t)a2);
  uint64_t v5 = sub_2225D36D8(a1);
  unint64_t v6 = sub_2225D4E1C(a1, v5 + 1);
  uint64_t v7 = sub_2225D36D8(a1);
  sub_2225D4E98(v12, v6, v7, v4);
  uint64_t v9 = (__n128 *)nullsub_1(v13, v8);
  sub_2225D4DF8(v4, v9, a2);
  v13 += 16;
  sub_2226B4DC0(a1, v12);
  uint64_t v10 = a1[1];
  sub_2225D4F8C(v12);
  return v10;
}

uint64_t sub_2226B5078(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  unsigned int v8 = a2;
  unsigned int v14 = a2;
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  if (sub_2225CF1E0((uint64_t)&v12)) {
    return 1;
  }
  sub_22260E62C(&v11);
  if (a5)
  {
    if (sub_2226B5230((_DWORD **)a1, v8, &v11, &v14))
    {
      unsigned int v8 = v14;
LABEL_6:
      sub_2226B538C(a1, v8, v11, v12, v13, a6);
      return 1;
    }
  }
  else if (sub_2226B5128((_DWORD **)a1, v8, &v11))
  {
    goto LABEL_6;
  }
  uint64_t result = 0;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_2226B5128(_DWORD **a1, unsigned int a2, uint64_t *a3)
{
  unsigned int v10 = a2;
  if (sub_2225F38E8(&v10)) {
    return 0;
  }
  if (sub_2226074FC(&v10)) {
    sub_2226B5AC8((uint64_t)a1, v10, &v10);
  }
  uint64_t v5 = *a1;
  if (sub_22260C6E8(*a1, v10))
  {
    do
      unsigned int v10 = sub_22260C744(v5, v10);
    while ((sub_22260C6E8(v5, v10) & 1) != 0);
  }
  if (!sub_2226074FC(&v10) || (uint64_t result = sub_2226B5AC8((uint64_t)a1, v10, &v10), result))
  {
    if (!sub_2225F7558((uint64_t)v5, v10))
    {
      uint64_t v9 = sub_222609C14(v5, v10);
      if (!sub_2225F38E8(&v9))
      {
        sub_2226B5ADC(&v8, v9, SHIDWORD(v9));
        uint64_t v7 = v8;
        *a3 = v8;
        return sub_2226B5AE4((uint64_t)a1, v10, v7);
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_2226B5230(_DWORD **a1, unsigned int a2, uint64_t *a3, _DWORD *a4)
{
  unsigned int v15 = a2;
  if (sub_2225F38E8(&v15)) {
    return 0;
  }
  unsigned int v7 = sub_222609A80(*a1, v15);
  int v8 = sub_22261BB40(v7, *a1, (uint64_t)a1[1]);
  *a4 = sub_22260C644(&v15, v8);
  if (sub_2226074FC(&v15)) {
    sub_2226B5BEC((uint64_t)a1, v15, &v15);
  }
  uint64_t v9 = *a1;
  if (sub_22260C6E8(*a1, v15))
  {
    do
      unsigned int v15 = sub_22260C744(v9, v15);
    while ((sub_22260C6E8(v9, v15) & 1) != 0);
  }
  if (!sub_2226074FC(&v15) || (uint64_t result = sub_2226B5BEC((uint64_t)a1, v15, &v15), result))
  {
    if (!sub_2225F7558((uint64_t)v9, v15))
    {
      unsigned int v15 = sub_22261C1E8(v15, 0, *a1, (uint64_t)a1[1]);
      BOOL v11 = sub_2225F38E8(&v15);
      uint64_t result = 0;
      if (v11) {
        return result;
      }
      uint64_t v14 = sub_222609C14(v9, v15);
      if (!sub_2225F38E8(&v14))
      {
        sub_2226B5ADC(&v13, v14, SHIDWORD(v14));
        uint64_t v12 = v13;
        *a3 = v13;
        return sub_2226B5AE4((uint64_t)a1, v15, v12);
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_2226B538C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t result = sub_2225CF1E0((uint64_t)&v17);
  if ((result & 1) == 0)
  {
    sub_2226B59C0((uint64_t)&v12);
    LODWORD(v12) = 0;
    int v14 = a2;
    uint64_t v15 = a3;
    *((void *)&v12 + 1) = sub_2226B59C4(a1, v17, v18);
    uint64_t v13 = v11;
    char v16 = a6;
    return sub_2226B5A48(a1 + 40, &v12);
  }
  return result;
}

uint64_t sub_2226B540C(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, char a5, char a6)
{
  unsigned int v10 = a2;
  unsigned int v19 = a4;
  unsigned int v20 = a2;
  uint64_t v18 = a3;
  sub_22260E62C(&v17);
  int v16 = 0;
  if ((sub_2226B5518(a1, a3, a4, &v17, &v16) & 1) == 0) {
    goto LABEL_8;
  }
  sub_22260E62C(&v15);
  if ((a5 & 1) == 0)
  {
    if (sub_2226B5128((_DWORD **)a1, v10, &v15)) {
      goto LABEL_6;
    }
LABEL_8:
    uint64_t result = 0;
    *(unsigned char *)(a1 + 32) = 0;
    return result;
  }
  if (!sub_2226B5230((_DWORD **)a1, v10, &v15, &v20)) {
    goto LABEL_8;
  }
  unsigned int v10 = v20;
LABEL_6:
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    int v13 = sub_22261C6A4((unsigned int *)&v18);
    if (sub_2226B5680(v12, v10, v13)) {
      goto LABEL_8;
    }
  }
  sub_2226B56D4(a1, v10, v15, v17, v16, a6);
  return 1;
}

uint64_t sub_2226B5518(uint64_t a1, uint64_t a2, unsigned int a3, void *a4, _DWORD *a5)
{
  unsigned int v22 = a3;
  int v8 = *(_DWORD **)a1;
  uint64_t v21 = sub_22261C3DC(a2, a3, *(_DWORD **)a1, *(void *)(a1 + 8));
  LOBYTE(v22) = v9;
  if (sub_22261C8F4()) {
    return 0;
  }
  LODWORD(v20) = sub_22261C6A4((unsigned int *)&v21);
  if (sub_2226074FC(&v20)) {
    return 0;
  }
  LODWORD(v19) = sub_222613088(&v21);
  if (sub_2226074FC(&v19)) {
    return 0;
  }
  int v10 = sub_22261C6A4((unsigned int *)&v21);
  if (sub_2225F7558((uint64_t)v8, v10)) {
    return 0;
  }
  int v11 = sub_222613088(&v21);
  if (sub_2225F7558((uint64_t)v8, v11)) {
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    int v14 = (uint64_t *)nullsub_1(&v21, v12);
    if (sub_222635458(v13, *v14)) {
      return 0;
    }
  }
  int v15 = sub_22261C6A4((unsigned int *)&v21);
  uint64_t v20 = sub_222609C14(v8, v15);
  int v16 = sub_222613088(&v21);
  uint64_t v19 = sub_222609C14(v8, v16);
  if (sub_22260EC60(&v20, &v19) || HIDWORD(v20) > HIDWORD(v19)) {
    return 0;
  }
  sub_2226B5ADC(&v18, v20, SHIDWORD(v20));
  *a4 = v18;
  *a5 = HIDWORD(v19) - HIDWORD(v20);
  return 1;
}

BOOL sub_2226B5680(uint64_t a1, int a2, int a3)
{
  unsigned int v7 = sub_222635640(a1, a2);
  unsigned int v6 = sub_222635640(a1, a3);
  return sub_22261FB84(&v7, &v6);
}

uint64_t sub_2226B56D4(uint64_t result, int a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  if (a5)
  {
    uint64_t v11 = result;
    sub_2226B59C0((uint64_t)&v12);
    LODWORD(v12) = 1;
    int v13 = a2;
    uint64_t v14 = a3;
    uint64_t v15 = a4;
    int v16 = a5;
    char v17 = a6;
    return sub_2226B5A48(v11 + 40, &v12);
  }
  return result;
}

uint64_t sub_2226B5758(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v11 = a2;
  unsigned int v12 = a3;
  sub_22260E62C(&v10);
  int v9 = 0;
  uint64_t v6 = sub_2226B5518(a1, a2, a3, &v10, &v9);
  if (v6)
  {
    int v7 = sub_22261C6A4((unsigned int *)&v11);
    sub_2226B57EC(a1, v7, v10, v9);
  }
  else
  {
    *(unsigned char *)(a1 + 32) = 0;
  }
  return v6;
}

uint64_t sub_2226B57EC(uint64_t result, int a2, uint64_t a3, int a4)
{
  if (a4)
  {
    uint64_t v7 = result;
    sub_2226B59C0((uint64_t)&v8);
    LODWORD(v8) = 2;
    int v9 = a2;
    uint64_t v10 = a3;
    int v11 = a4;
    return sub_2226B5A48(v7 + 40, &v8);
  }
  return result;
}

uint64_t sub_2226B5858(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a5;
  uint64_t v16 = a2;
  unsigned int v17 = a3;
  uint64_t v14 = a4;
  if (sub_2225CF1E0((uint64_t)&v14)) {
    return sub_2226B5758(a1, a2, a3);
  }
  sub_22260E62C(&v13);
  int v12 = 0;
  unsigned int v9 = sub_22261C6A4((unsigned int *)&v16);
  if sub_2226B5128((_DWORD **)a1, v9, &v13) && (sub_2226B5518(a1, v16, v17, &v13, &v12))
  {
    int v10 = sub_22261C6A4((unsigned int *)&v16);
    sub_2226B57EC(a1, v10, v13, v12);
    int v11 = sub_22261C6A4((unsigned int *)&v16);
    sub_2226B538C(a1, v11, v13, v14, v15, 0);
    return 1;
  }
  else
  {
    uint64_t result = 0;
    *(unsigned char *)(a1 + 32) = 0;
  }
  return result;
}

unint64_t sub_2226B594C(unsigned int *a1, int a2)
{
  return *a1 | ((unint64_t)(a1[1] + a2) << 32);
}

uint64_t sub_2226B595C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v8 = a1;
  v6[0] = sub_22260E394((uint64_t)&v8, (uint64_t)&v8 + 4);
  v6[1] = v2;
  v5[0] = sub_22260E394((uint64_t)&v7, (uint64_t)&v7 + 4);
  v5[1] = v3;
  return sub_2226B5C2C((uint64_t)v6, (uint64_t)v5);
}

uint64_t sub_2226B59B0(uint64_t a1, uint64_t a2)
{
  return sub_2226B595C(a2, a1);
}

uint64_t sub_2226B59C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[0] = a2;
  v10[1] = a3;
  uint64_t v3 = a1 + 512;
  uint64_t v4 = sub_2225C3D04((uint64_t)v10);
  uint64_t v5 = (void *)sub_2225E4B90(v3, v4);
  uint64_t v6 = (const void *)sub_2225C3C70((uint64_t)v10);
  size_t v7 = sub_2225C3D04((uint64_t)v10);
  memcpy(v5, v6, v7);
  uint64_t v8 = sub_2225C3D04((uint64_t)v10);
  sub_2225C3D0C(&v11, v5, v8);
  return v11;
}

uint64_t sub_2226B5A48(uint64_t a1, long long *a2)
{
  if (*(void *)(a1 + 8) >= *(void *)(a1 + 16)) {
    sub_2226B5DCC((const void **)a1, 0);
  }
  uint64_t v4 = sub_2225C3D04(a1);
  long long v6 = a2[1];
  long long v5 = a2[2];
  long long v7 = *a2;
  *(void *)(v4 + 48) = *((void *)a2 + 6);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)uint64_t v4 = v7;
  uint64_t v8 = sub_2225C3D04(a1) + 56;

  return sub_2225C5B6C(a1, v8);
}

uint64_t sub_2226B5AC8(uint64_t a1, int a2, unsigned int *a3)
{
  return sub_22261C350(a2, *(_DWORD **)a1, *(void *)(a1 + 8), a3);
}

_DWORD *sub_2226B5ADC(_DWORD *a1, int a2, int a3)
{
  return sub_22262238C(a1, a2, a3);
}

BOOL sub_2226B5AE4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v5 = a1 + 40;
  int v6 = sub_2225F5AE8(a1 + 40);
  if (v6)
  {
    unsigned int v7 = 0;
    while (1)
    {
      uint64_t v8 = (_DWORD *)sub_2226B5C00(v5, v7);
      if (*v8 == 2)
      {
        unsigned int v9 = v8;
        int v10 = v8 + 7;
        int v16 = sub_2225C3B40(v8 + 7);
        int v15 = sub_2225C3B40((unsigned int *)&v17);
        if (sub_2225F5218(&v16, &v15))
        {
          if (sub_2226B59B0(v17, *(void *)v10))
          {
            uint64_t v11 = v17;
            unint64_t v12 = sub_2226B594C(v10, v9[11]);
            if (sub_2226B595C(v11, v12)) {
              return 0;
            }
          }
        }
      }
      if (v6 == ++v7) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    uint64_t v13 = *(_DWORD ***)(a1 + 24);
    return !v13 || sub_2226B5F44(v13, a2, v17);
  }
}

uint64_t sub_2226B5BEC(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  return sub_22261C294(a2, *(_DWORD **)a1, *(void *)(a1 + 8), a3);
}

uint64_t sub_2226B5C00(uint64_t a1, unsigned int a2)
{
  return sub_2225C3C70(a1) + 56 * a2;
}

uint64_t sub_2226B5C2C(uint64_t a1, uint64_t a2)
{
  return sub_2226B5C58((uint64_t)&v3, a1, a2);
}

uint64_t sub_2226B5C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (_DWORD *)sub_2225CC180(a2);
  int v6 = (_DWORD *)sub_2225CC180(a3);
  if (sub_22260EDF0(v5, v6)) {
    return 1;
  }
  uint64_t v8 = (_DWORD *)sub_2225CC180(a3);
  unsigned int v9 = (_DWORD *)sub_2225CC180(a2);
  if (sub_22260EDF0(v8, v9)) {
    return 0;
  }
  else {
    return sub_2226B5CF4((uint64_t)&v10, a2, a3);
  }
}

uint64_t sub_2226B5CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = *(_DWORD *)sub_2225D2BAC(a2);
  if (v5 < *(_DWORD *)sub_2225D2BAC(a3)) {
    return 1;
  }
  unsigned int v7 = *(_DWORD *)sub_2225D2BAC(a3);
  if (v7 >= *(_DWORD *)sub_2225D2BAC(a2)) {
    return sub_2225C5C08();
  }
  else {
    return 0;
  }
}

uint64_t sub_2226B5D88(uint64_t a1)
{
  return a1;
}

char *sub_2226B5DCC(const void **a1, uint64_t a2)
{
  return sub_2225C5B7C(a1, 56 * a2, 56);
}

uint64_t sub_2226B5DDC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  sub_2225CCC70(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(*(void *)a1 + 24))(a1, a2, a3, v7[0], v7[1]);
}

uint64_t sub_2226B5E50(uint64_t a1, char **a2)
{
  sub_2225CF794(v8);
  uint64_t v4 = sub_2225DBAC4(a2, (uint64_t)v8);
  uint64_t v6 = sub_2226B5EC0(a1, v4, v5);
  sub_2225CA520(v8);
  return v6;
}

uint64_t sub_2226B5EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[0] = a2;
  v10[1] = a3;
  uint64_t v3 = a1 + 72;
  uint64_t v4 = sub_2225C3D04((uint64_t)v10);
  uint64_t v5 = (void *)sub_2225E4B90(v3, v4);
  uint64_t v6 = (const void *)sub_2225C3C70((uint64_t)v10);
  size_t v7 = sub_2225C3D04((uint64_t)v10);
  memcpy(v5, v6, v7);
  uint64_t v8 = sub_2225C3D04((uint64_t)v10);
  sub_2225C3D0C(&v11, v5, v8);
  return v11;
}

BOOL sub_2226B5F44(_DWORD **a1, int a2, uint64_t a3)
{
  uint64_t v17 = sub_2226B605C((uint64_t)a1, a3);
  v14[0] = sub_2225DF85C((uint64_t)(a1 + 3), v6);
  if (sub_2225DF858(&v17, v14))
  {
    size_t v7 = (uint64_t *)sub_2225DF82C((uint64_t)&v17);
    if (sub_2226B6118(*v7, a3)) {
      return 0;
    }
  }
  if (!sub_22260C6E8(*a1, a2)) {
    return 1;
  }
  int v16 = sub_22260C7BC(*a1, a2);
  unsigned int v9 = *a1;
  uint64_t v8 = (uint64_t)(a1 + 6);
  unsigned int v15 = sub_22260C7BC(v9, v16);
  v13.n128_u32[0] = sub_2225C3B40(&v15);
  sub_2226B6134(v8, &v13, (uint64_t)v14);
  sub_2226B61A8(v8, (uint64_t)&v12);
  sub_2226B6204(&v13, &v12);
  if (!sub_2225F9558(v14, (uint64_t)&v13)) {
    return 1;
  }
  uint64_t v10 = sub_2225C3C70((uint64_t)v14);
  return !sub_22261FB84((unsigned int *)(v10 + 4), (unsigned int *)&v16);
}

uint64_t *sub_2226B605C(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = a2;
  uint64_t v2 = a1 + 24;
  unsigned int v9 = (uint64_t *)sub_2226B6688(a1 + 24, &v10);
  uint64_t v8 = sub_2226B66B8(v2, v3);
  if (!sub_2225E21D8(&v9, &v8)
    && (sub_2226B66E8(&v9),
        uint64_t v5 = sub_2225DF82C((uint64_t)&v9),
        uint64_t v8 = *(void *)sub_2225DF82C((uint64_t)&v9),
        unint64_t v6 = sub_2226B594C((unsigned int *)&v8, *(_DWORD *)(v5 + 24)),
        sub_2226B6BCC(v10, v8))
    && sub_2226B595C(v10, v6))
  {
    return v9;
  }
  else
  {
    return (uint64_t *)sub_2225DF85C(v2, v4);
  }
}

uint64_t sub_2226B6118(uint64_t a1, uint64_t a2)
{
  return sub_2226B6710(a1, a2) ^ 1;
}

uint64_t sub_2226B6134@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  if (!sub_2226B7300(a1, a2, &v8)) {
    return sub_2226B61A8(a1, a3);
  }
  uint64_t v5 = v8;
  uint64_t v6 = sub_2225F50FC(a1);
  return sub_2225F7FF8(a3, v5, v6, 1);
}

uint64_t sub_2226B61A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2225F50FC(a1);
  uint64_t v5 = sub_2225F50FC(a1);

  return sub_2225F7FF8(a2, v4, v5, 1);
}

BOOL sub_2226B6208(_DWORD **a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v21 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  BOOL v9 = sub_2226B5F44(a1, a2, a3);
  if (v9 && !sub_2225CF1E0((uint64_t)&v19))
  {
    if (sub_22260C6E8(*a1, a2))
    {
      int v10 = sub_22260C7BC(*a1, a2);
      LODWORD(v18[0]) = sub_22260C7BC(*a1, v10);
      v17[0] = sub_2225C3B40((unsigned int *)v18);
      *sub_2226B6338((uint64_t)(a1 + 6), v17) = v10;
    }
    uint64_t v11 = (uint64_t *)sub_2226B6354((uint64_t)(a1 + 3), &v21);
    if (sub_2225CF1E0((uint64_t)v11))
    {
      uint64_t v12 = sub_2226B5EC0((uint64_t)a1, v19, v20);
    }
    else
    {
      if (a6)
      {
        sub_2225CBDF0((uint64_t)v17, (uint64_t)&v19);
        uint64_t v14 = v11;
      }
      else
      {
        sub_2225CBDF0((uint64_t)v17, (uint64_t)v11);
        uint64_t v14 = &v19;
      }
      sub_2225CBDF0((uint64_t)v16, (uint64_t)v14);
      sub_2225CF9F4(v18, v17, v16);
      uint64_t v12 = sub_2226B5E50((uint64_t)a1, v18);
    }
    *uint64_t v11 = v12;
    v11[1] = v13;
  }
  return v9;
}

_DWORD *sub_2226B6338(uint64_t a1, _DWORD *a2)
{
  return sub_2226B7458(a1, a2) + 1;
}

uint64_t sub_2226B6354(uint64_t a1, uint64_t *a2)
{
  uint64_t v10 = sub_2225FA0E8((uint64_t)a2);
  nullsub_1(v10, v4);
  v11[0] = sub_2226B771C(a1, a2, (uint64_t)&unk_2226D15F4, (uint64_t)&v10, (uint64_t)&v9);
  v11[1] = v5;
  uint64_t v6 = sub_2225E2AD4((uint64_t)v11);
  return nullsub_1(v6, v7) + 8;
}

uint64_t sub_2226B63C0(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  if (a5)
  {
    sub_2225CF794(v35);
    uint64_t v34 = a4;
    unint64_t v12 = sub_2226B594C((unsigned int *)&v34, a5);
    uint64_t v33 = (uint64_t *)sub_2226B6688((uint64_t)(a1 + 3), &v34);
    uint64_t i = sub_2226B66B8((uint64_t)(a1 + 3), v13);
    if (sub_2225DF858(&v33, &i)) {
      sub_2226B66E8(&v33);
    }
    for (uint64_t i = sub_2225DF85C((uint64_t)(a1 + 3), v14); sub_2225DF858(&v33, &i); uint64_t i = sub_2225DF85C((uint64_t)(a1 + 3), v18))
    {
      uint64_t v16 = sub_2225DF82C((uint64_t)&v33);
      uint64_t i = *(void *)sub_2225DF82C((uint64_t)&v33);
      unint64_t v17 = sub_2226B594C((unsigned int *)&i, *(_DWORD *)(v16 + 24));
      if (sub_2226B6710(v34, i)) {
        break;
      }
      if (sub_2226B595C(v34, v17))
      {
        if (sub_2226B59B0(v34, i))
        {
          uint64_t v34 = v17;
          sub_2226B674C((uint64_t *)&v33);
        }
        break;
      }
      sub_2226B674C((uint64_t *)&v33);
    }
    for (uint64_t i = sub_2225DF85C((uint64_t)(a1 + 3), v15); sub_2225DF858(&v33, &i); uint64_t i = sub_2225DF85C((uint64_t)(a1 + 3), v25))
    {
      uint64_t v20 = (uint64_t *)sub_2225DF82C((uint64_t)&v33);
      if (!sub_2226B59B0(v12, *v20)) {
        break;
      }
      uint64_t v21 = sub_2225DF82C((uint64_t)&v33);
      uint64_t i = *(void *)sub_2225DF82C((uint64_t)&v33);
      unint64_t v22 = sub_2226B594C((unsigned int *)&i, *(_DWORD *)(v21 + 24));
      if (sub_2226B595C(v34, i))
      {
        char v31 = 0;
        uint64_t v23 = sub_2226B6774(a1, v34, i, &v31);
        if (v31) {
          goto LABEL_20;
        }
        sub_2225DAD18(v35, v23, v24);
      }
      sub_2225DAD18(v35, *(void *)(v21 + 8), *(void *)(v21 + 16));
      uint64_t v34 = v22;
      sub_2226B674C((uint64_t *)&v33);
    }
    if (sub_2226B595C(v34, v12))
    {
      LOBYTE(i) = 0;
      uint64_t v26 = sub_2226B6774(a1, v34, v12, &i);
      if ((_BYTE)i)
      {
LABEL_20:
        BOOL v19 = 0;
LABEL_23:
        sub_2225CA520(v35);
        return v19;
      }
      sub_2225DAD18(v35, v26, v27);
    }
    uint64_t v28 = sub_2225CA4D0((uint64_t)v35);
    BOOL v19 = sub_2226B6208((_DWORD **)a1, a2, a3, v28, v29, a6);
    goto LABEL_23;
  }
  return 1;
}

uint64_t sub_2226B6688(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = sub_2226B7A7C(a1, a2);
  sub_2225C64B8(&v4, v2);
  return v4;
}

uint64_t sub_2226B66B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2226B7B54(a1, a2);
  sub_2225C64B8(&v4, v2);
  return v4;
}

uint64_t **sub_2226B66E8(uint64_t **a1)
{
  return a1;
}

uint64_t sub_2226B6710(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  LODWORD(result) = sub_2225F5218(&v4, &v3);
  if (HIDWORD(v4) == HIDWORD(v3)) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t *sub_2226B674C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2226B6774(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v15 = a3;
  uint64_t v16 = a2;
  uint64_t v6 = *a1;
  unsigned int v7 = sub_2225C3B40((unsigned int *)&v16);
  int v14 = sub_22260DA24(v6, v7);
  int v8 = sub_222613380((uint64_t)&v16);
  int v14 = sub_22260C644(&v14, v8);
  LODWORD(v6) = sub_222613380((uint64_t)&v15);
  int v9 = sub_222613380((uint64_t)&v16);
  int v10 = sub_22260C644(&v14, (int)v6 - v9);
  uint64_t v11 = sub_222622214(v14, v10);
  return sub_22261C7F4(v11, v12, (_DWORD *)*a1, a1[1], a4);
}

uint64_t sub_2226B6820(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v37 = a3;
  if (a4)
  {
    uint64_t v5 = result;
    unint64_t v6 = sub_2226B594C((unsigned int *)&v37, a4);
    uint64_t v36 = v6;
    uint64_t v7 = v5 + 24;
    uint64_t v35 = (uint64_t *)sub_2226B6688(v7, &v37);
    v30[0] = sub_2226B66B8(v7, v8);
    if (sub_2225DF858(&v35, v30)) {
      sub_2226B66E8(&v35);
    }
    for (v30[0] = sub_2225DF85C(v7, v9); sub_2225DF858(&v35, v30); v30[0] = sub_2225DF85C(v7, v12))
    {
      uint64_t v10 = sub_2225DF82C((uint64_t)&v35);
      v30[0] = *(void *)sub_2225DF82C((uint64_t)&v35);
      unint64_t v11 = sub_2226B594C((unsigned int *)v30, *(_DWORD *)(v10 + 24));
      if (sub_2226B595C(v37, v11)) {
        break;
      }
      sub_2226B674C((uint64_t *)&v35);
    }
    sub_22260E62C(&v34);
    sub_22260E62C(&v33);
    v30[0] = sub_2225DF85C(v7, v13);
    if (sub_2225E21D8(&v35, v30))
    {
      sub_2225FA740(&v31, v35);
      sub_2226B6BC8(v29);
      sub_2226B6BB8((uint64_t)&v37, (uint64_t)v29, (uint64_t)v30);
      uint64_t v32 = sub_2226B6B88();
      uint64_t result = sub_2225DF82C((uint64_t)&v32);
      *(_DWORD *)(result + 24) = a4;
      return result;
    }
    uint64_t v14 = sub_2225DF82C((uint64_t)&v35);
    uint64_t v32 = *(void *)sub_2225DF82C((uint64_t)&v35);
    unint64_t v15 = sub_2226B594C((unsigned int *)&v32, *(_DWORD *)(v14 + 24));
    if (sub_2226B595C(v37, v32))
    {
      sub_2225FA740(&v27, v35);
      sub_2226B6BC8(v29);
      sub_2226B6BB8((uint64_t)&v37, (uint64_t)v29, (uint64_t)v30);
      uint64_t v28 = sub_2226B6B88();
      uint64_t v33 = v6;
      uint64_t v34 = v37;
      uint64_t v17 = sub_2225DF82C((uint64_t)&v28);
      *(_DWORD *)(v17 + 24) = a4;
    }
    else
    {
      uint64_t v33 = v15;
      uint64_t v34 = v32;
      uint64_t v17 = sub_2225DF82C((uint64_t)&v35);
      uint64_t result = sub_2226B6BCC(v33, v6);
      if (result) {
        return result;
      }
      int v18 = sub_222613380((uint64_t)&v36);
      int v19 = sub_222613380((uint64_t)&v33);
      uint64_t v20 = v37;
      uint64_t v33 = v36;
      *(_DWORD *)(v17 + 24) += v18 - v19;
      if (sub_2226B6710(v32, v20))
      {
        sub_2225CCC70(v30);
        *(_OWORD *)(v17 + 8) = *(_OWORD *)v30;
      }
      sub_2226B674C((uint64_t *)&v35);
    }
    v30[0] = sub_2225DF85C(v7, v16);
    uint64_t result = sub_2225DF858(&v35, v30);
    if (result)
    {
      do
      {
        uint64_t v21 = sub_2225DF82C((uint64_t)&v35);
        v30[0] = *(void *)sub_2225DF82C((uint64_t)&v35);
        unint64_t v22 = sub_2226B594C((unsigned int *)v30, *(_DWORD *)(v21 + 24));
        v29[0] = v22;
        uint64_t result = sub_2226B6BCC(v30[0], v33);
        if (result) {
          break;
        }
        if ((sub_2226B6BE8(v22, v33) & 1) == 0)
        {
          uint64_t result = sub_2226B595C(v30[0], v33);
          if (result)
          {
            int v25 = sub_222613380((uint64_t)v29);
            int v26 = sub_222613380((uint64_t)&v33);
            uint64_t v33 = v29[0];
            *(_DWORD *)(v17 + 24) += v25 - v26;
            return sub_2226B6C10(v7, (uint64_t)v35);
          }
          return result;
        }
        uint64_t v23 = sub_2226B6C5C((uint64_t *)&v35);
        sub_2226B6C10(v7, v23);
        v30[0] = sub_2225DF85C(v7, v24);
        uint64_t result = sub_2225DF858(&v35, v30);
      }
      while ((result & 1) != 0);
    }
  }
  return result;
}

uint64_t sub_2226B6B88()
{
  uint64_t v0 = sub_2226B7C04();
  sub_2225C64B8(&v2, v0);
  return v2;
}

uint64_t sub_2226B6BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226B7BE4(a3, a1, a2);
}

uint64_t sub_2226B6BCC(uint64_t a1, uint64_t a2)
{
  return sub_2226B595C(a1, a2) ^ 1;
}

uint64_t sub_2226B6BE8(uint64_t a1, uint64_t a2)
{
  return sub_2226B595C(a2, a1) ^ 1;
}

uint64_t sub_2226B6C10(uint64_t a1, uint64_t a2)
{
  sub_2225C64B8(&v5, a2);
  uint64_t v3 = sub_2226B8038(a1, v5);
  sub_2225C64B8(&v6, v3);
  return v6;
}

uint64_t sub_2226B6C5C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_2226B674C(a1);
  return v1;
}

uint64_t sub_2226B6C84(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2226B6D5C(a2);
  if (v4)
  {
    uint64_t v5 = sub_2226B6D64(a2);
    uint64_t v6 = sub_2226B6D6C(a2);
    if (v5 != v6)
    {
      uint64_t v8 = v6;
      uint64_t v9 = (unsigned __int8 *)(v5 + 48);
      do
      {
        int v10 = *((_DWORD *)v9 - 12);
        switch(v10)
        {
          case 2:
            sub_2226B6820((uint64_t)a1, v7, *(void *)(v9 - 20), *((_DWORD *)v9 - 1));
            break;
          case 1:
            sub_2226B63C0(a1, *((_DWORD *)v9 - 6), *(void *)(v9 - 20), *(void *)(v9 - 12), *((_DWORD *)v9 - 1), *v9);
            break;
          case 0:
            sub_2226B6208((_DWORD **)a1, *((_DWORD *)v9 - 6), *(void *)(v9 - 20), *((void *)v9 - 5), *((void *)v9 - 4), *v9);
            break;
        }
        unint64_t v11 = v9 + 8;
        v9 += 56;
      }
      while (v11 != (unsigned __int8 *)v8);
    }
  }
  return v4;
}

uint64_t sub_2226B6D5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_2226B6D64(uint64_t a1)
{
  return sub_2225C3C70(a1 + 40);
}

uint64_t sub_2226B6D6C(uint64_t a1)
{
  return sub_2225C3D04(a1 + 40);
}

uint64_t sub_2226B6D74(_DWORD **a1, uint64_t *a2)
{
  sub_2225CF794(v23);
  sub_22260E62C(&v22);
  sub_22260E62C(&v21);
  if (!sub_2225F4EE4((uint64_t)(a1 + 3), v4))
  {
    uint64_t v20 = sub_2226B66B8((uint64_t)(a1 + 3), v5);
    uint64_t v22 = *(void *)sub_2225DF82C((uint64_t)&v20);
    uint64_t v6 = sub_2225DF82C((uint64_t)&v20);
    sub_222616CD8(v23, *(void *)(v6 + 8), *(void *)(v6 + 16));
    int v7 = *(_DWORD *)(sub_2225DF82C((uint64_t)&v20) + 24);
    unint64_t v21 = sub_2226B594C((unsigned int *)&v22, v7);
    sub_2226B674C(&v20);
    uint64_t v19 = sub_2225DF85C((uint64_t)(a1 + 3), v8);
    if (sub_2225DF858(&v20, &v19))
    {
      do
      {
        uint64_t v9 = *(void *)sub_2225DF82C((uint64_t)&v20);
        uint64_t v10 = sub_2225DF82C((uint64_t)&v20);
        uint64_t v11 = *(void *)(v10 + 8);
        uint64_t v12 = *(void *)(v10 + 16);
        int v13 = *(_DWORD *)(v10 + 24);
        if (sub_2226B6710(v9, v21))
        {
          sub_2225DAD18(v23, v11, v12);
          sub_2226B594C((unsigned int *)&v21, v13);
          v13 += v7;
        }
        else
        {
          uint64_t v14 = sub_2225CA4D0((uint64_t)v23);
          sub_2226B6F4C(a2, v14, v15, v22, v7, *a1, a1[1]);
          uint64_t v22 = v9;
          sub_222616CD8(v23, v11, v12);
          unint64_t v21 = sub_2226B594C((unsigned int *)&v22, v13);
        }
        sub_2226B674C(&v20);
        int v7 = v13;
      }
      while (sub_2225DF858(&v20, &v19));
    }
    else
    {
      int v13 = v7;
    }
    uint64_t v16 = sub_2225CA4D0((uint64_t)v23);
    sub_2226B6F4C(a2, v16, v17, v22, v13, *a1, a1[1]);
  }
  return sub_2225CA520(v23);
}

uint64_t sub_2226B6F4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, _DWORD *a6, void *a7)
{
  int v9 = a5;
  *(void *)&long long v23 = a2;
  *((void *)&v23 + 1) = a3;
  uint64_t v22 = a4;
  int v21 = a5;
  unsigned int v11 = sub_2225C3B40((unsigned int *)&v22);
  unsigned int v20 = sub_22260DA24((uint64_t)a6, v11);
  int v12 = sub_222613380((uint64_t)&v22);
  unsigned int v20 = sub_22260C644(&v20, v12);
  if (sub_2225CF1E0((uint64_t)&v23))
  {
    sub_2226B70DC(a6, a7, v20, v22, &v21, &v23);
    int v9 = v21;
  }
  int v13 = v20;
  int v14 = sub_22260C644(&v20, v9);
  uint64_t v15 = sub_222622214(v13, v14);
  unsigned int v17 = v16;
  if (sub_2225CF1E0((uint64_t)&v23)) {
    return (*(uint64_t (**)(uint64_t *, uint64_t, void))(*a1 + 32))(a1, v15, v17);
  }
  uint64_t v19 = *a1;
  if (v9) {
    return (*(uint64_t (**)(uint64_t *, uint64_t, void, void, void))(v19 + 24))(a1, v15, v17, v23, *((void *)&v23 + 1));
  }
  else {
    return (*(uint64_t (**)(uint64_t *, void, void, void))(v19 + 16))(a1, v20, v23, *((void *)&v23 + 1));
  }
}

void *sub_2226B70C0(void *a1)
{
  uint64_t result = sub_2225CCC70(a1);
  *((_DWORD *)result + 4) = 0;
  return result;
}

double sub_2226B70DC(_DWORD *a1, void *a2, unsigned int a3, uint64_t a4, _DWORD *a5, _OWORD *a6)
{
  unsigned int v26 = a3;
  *(void *)int v25 = a4;
  unsigned int v24 = sub_22261BD04(a3, a1, (uint64_t)a2);
  if (!sub_22261FB84(&v24, &v26))
  {
    unsigned __int8 v23 = 0;
    unsigned int v11 = sub_2225C3B40(v25);
    v22[0] = sub_22260C090((uint64_t)a1, v11, &v23);
    v22[1] = v12;
    if (!v23)
    {
      int v13 = sub_222613380((uint64_t)v25);
      uint64_t v14 = (*a5 + v13);
      int v15 = sub_2225CC124(v22, v14);
      int v16 = v15;
      if (v13)
      {
        unsigned __int8 v17 = sub_2225CC124(v22, (v13 - 1));
        if (v16 != 32)
        {
          unsigned __int8 v20 = sub_2225CC124(v22, v14);
          if ((sub_2226B72B8(v17, v20, a2) & 1) == 0)
          {
            sub_2225C3D00((int)&v21, " ");
            double result = *(double *)&v21;
            *a6 = v21;
          }
          return result;
        }
        unsigned __int8 v18 = sub_2225CC124(v22, (v14 - 1));
        unsigned __int8 v19 = sub_2225CC124(v22, (v14 + 1));
        if (!sub_2226B7240(v17, v18, v19, a2)) {
          return result;
        }
      }
      else if (v15 != 32)
      {
        return result;
      }
      ++*a5;
    }
  }
  return result;
}

uint64_t sub_2226B7240(unsigned __int8 a1, unsigned __int8 a2, unsigned __int8 a3, void *a4)
{
  uint64_t result = sub_2226B72B8(a1, a3, a4);
  if (result)
  {
    if (sub_22261BCEC(a1) || sub_22261BCEC(a3)) {
      return 1;
    }
    else {
      return sub_2226B72B8(a2, a3, a4) ^ 1;
    }
  }
  return result;
}

uint64_t sub_2226B72B8(unsigned __int8 a1, unsigned __int8 a2, void *a3)
{
  if (sub_22261C910(a1, a3)) {
    return sub_22261C910(a2, a3) ^ 1;
  }
  else {
    return 1;
  }
}

uint64_t sub_2226B7300(uint64_t a1, _DWORD *a2, void *a3)
{
  uint64_t v5 = 0;
  uint64_t result = sub_2226B733C(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t sub_2226B733C(uint64_t a1, _DWORD *a2, void *a3)
{
  uint64_t v6 = sub_2225CC180(a1);
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v8 = result;
    int v15 = sub_2225F50F8();
    int v14 = sub_2226B7450();
    int v9 = v8 - 1;
    unsigned int v10 = sub_2226B7454(a2) & (v8 - 1);
    unsigned int v11 = (_DWORD *)(v6 + 8 * v10);
    if (sub_2225F5218(a2, v11))
    {
LABEL_8:
      uint64_t result = 1;
    }
    else
    {
      uint64_t v12 = 0;
      int v13 = 1;
      while (!sub_2225F5218(v11, &v15))
      {
        if (sub_2225F5218(v11, &v14) && v12 == 0) {
          uint64_t v12 = v11;
        }
        unsigned int v10 = (v10 + v13) & v9;
        unsigned int v11 = (_DWORD *)(v6 + 8 * v10);
        ++v13;
        if (sub_2225F5218(a2, v11)) {
          goto LABEL_8;
        }
      }
      uint64_t result = 0;
      if (v12) {
        unsigned int v11 = v12;
      }
    }
    *a3 = v11;
  }
  else
  {
    *a3 = 0;
  }
  return result;
}

_DWORD *sub_2226B7458(uint64_t a1, _DWORD *a2)
{
  uint64_t v6 = 0;
  if (sub_2226B7300(a1, a2, &v6)) {
    return v6;
  }
  sub_2225F3278(&v5);
  return sub_2226B74B8(a1, a2, &v5, v6);
}

_DWORD *sub_2226B74B8(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  uint64_t result = sub_2226B74F4(a1, a2, a4);
  *uint64_t result = *a2;
  result[1] = *a3;
  return result;
}

_DWORD *sub_2226B74F4(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  unsigned int v10 = a3;
  int v5 = sub_2225F5668(a1);
  uint64_t v6 = sub_2225F5148(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2226B75E0(a1, (2 * v6));
    sub_2226B7300(a1, a2, &v10);
    sub_2225F5148(a1);
  }
  else if (v6 + ~v5 - sub_2225F5670(a1) <= v6 >> 3)
  {
    sub_2226B75E0(a1, v7);
    sub_2226B7300(a1, a2, &v10);
  }
  sub_2225F5674(a1);
  int v9 = sub_2225F50F8();
  if (!sub_2225F5218(v10, &v9)) {
    sub_2225F56B0(a1);
  }
  return v10;
}

void sub_2226B75E4(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = *(_DWORD **)a1;
  int v7 = 64;
  int v6 = sub_2225C3A4C((a2 - 1));
  int v5 = (unsigned int *)sub_2225C7858(&v7, &v6);
  sub_2225F503C(a1, *v5);
  if (v4)
  {
    sub_2226B7670(a1, v4, &v4[2 * v3]);
    j__free(v4);
  }
  else
  {
    sub_2225F5088(a1);
  }
}

uint64_t sub_2226B7670(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  sub_2225F5088(a1);
  int v10 = sub_2225F50F8();
  uint64_t result = sub_2226B7450();
  int v9 = result;
  while (a2 != a3)
  {
    uint64_t result = sub_2225F5218(a2, &v10);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_2225F5218(a2, &v9);
      if ((result & 1) == 0)
      {
        int v8 = 0;
        sub_2226B7300(a1, a2, &v8);
        int v7 = v8;
        *int v8 = *a2;
        v7[1] = a2[1];
        uint64_t result = sub_2225F5674(a1);
      }
    }
    a2 += 2;
  }
  return result;
}

uint64_t sub_2226B771C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = sub_2226B77F0(a1, &v19, a2);
  uint64_t v10 = *v9;
  char v18 = 0;
  if (!v10)
  {
    unsigned int v11 = v9;
    sub_2226B78B0(a1, a3, a4, a5, (uint64_t)v17);
    uint64_t v12 = v19;
    int v14 = (void *)sub_2225CBA80((uint64_t)v17, v13);
    sub_2225E3140(a1, (uint64_t)v12, v11, v14);
    uint64_t v10 = sub_2225CE10C((uint64_t)v17, v15);
    char v18 = 1;
    sub_2225E31CC(v17);
  }
  sub_2225C64B8(v17, v10);
  sub_2225D7B28(&v20, v17, &v18);
  return v20;
}

uint64_t *sub_2226B77F0(uint64_t a1, uint64_t **a2, uint64_t *a3)
{
  uint64_t v6 = sub_2225E1E1C(a1, (uint64_t)a2);
  uint64_t v8 = sub_2225E31D0(a1, v7);
  if (v6)
  {
    uint64_t v10 = (uint64_t *)v8;
    do
    {
      while (1)
      {
        unsigned int v11 = (uint64_t *)v6;
        uint64_t v12 = sub_2225D2650(a1, v9);
        uint64_t v13 = v6 + 32;
        if (!sub_2226B7964(v12, a3, v13)) {
          break;
        }
        uint64_t v6 = *v11;
        uint64_t v10 = v11;
        if (!*v11) {
          goto LABEL_10;
        }
      }
      uint64_t v14 = sub_2225D2650(a1, v9);
      if (!sub_2226B79AC(v14, v13, a3)) {
        break;
      }
      uint64_t v10 = v11 + 1;
      uint64_t v6 = v11[1];
    }
    while (v6);
  }
  else
  {
    unsigned int v11 = (uint64_t *)sub_2225E1E5C(a1, v9);
    uint64_t v10 = v11;
  }
LABEL_10:
  *a2 = v11;
  return v10;
}

uint64_t sub_2226B78B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = sub_2225E1E38(a1, a2);
  uint64_t v10 = sub_2225E31D4(v9, 1);
  sub_2225E31D8((uint64_t)&v18, v9, 0);
  uint64_t v11 = sub_2225E31DC(a5, v10);
  uint64_t v13 = sub_2225CBA80(v11, v12);
  uint64_t v15 = j_nullsub_1(v13 + 32, v14);
  sub_2226B7A00(v9, v15, a2, a3, a4);
  uint64_t result = sub_2225E31E4(a5, v16);
  *(unsigned char *)(result + 8) = 1;
  return result;
}

uint64_t sub_2226B7964(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = (uint64_t *)nullsub_1(a3, a2);

  return sub_2226B79F4(a1, a2, v5);
}

uint64_t sub_2226B79AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v5 = (uint64_t *)nullsub_1(a2, a2);

  return sub_2226B79F4(a1, v5, a3);
}

uint64_t sub_2226B79F4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  return sub_2226B595C(*a2, *a3);
}

uint64_t sub_2226B7A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_2226B7A10(a2, *a4);
}

uint64_t sub_2226B7A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  return sub_2226B7A3C(a1, &v4, &v3);
}

void *sub_2226B7A40(void *a1, uint64_t a2)
{
  *a1 = *(void *)sub_2225CC180(a2);
  sub_2226B6BC8(a1 + 1);
  return a1;
}

uint64_t sub_2226B7A7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (void *)sub_2225E1E1C(a1, (uint64_t)a2);
  uint64_t v6 = sub_2225E1E5C(a1, v5);

  return sub_2226B7AD8(a1, a2, v4, v6);
}

uint64_t sub_2226B7AD8(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v5 = a3;
    do
    {
      uint64_t v8 = sub_2225D2650(a1, (uint64_t)a2);
      int v9 = sub_2226B7964(v8, a2, (uint64_t)(v5 + 4));
      uint64_t v10 = v5 + 1;
      if (v9)
      {
        uint64_t v10 = v5;
        a4 = (uint64_t)v5;
      }
      uint64_t v5 = (void *)*v10;
    }
    while (*v10);
  }
  sub_2225C64B8(&v12, a4);
  return v12;
}

uint64_t sub_2226B7B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)nullsub_1(a1, a2);
  sub_2225C64B8(&v4, *v2);
  return v4;
}

uint64_t **sub_2226B7B84(uint64_t **a1)
{
  *a1 = (uint64_t *)sub_222611F1C(*a1);
  return a1;
}

uint64_t *sub_2226B7BB4(uint64_t *a1)
{
  *a1 = (uint64_t)sub_2225FAE94(*a1);
  return a1;
}

__n128 sub_2226B7BE8(uint64_t a1, void *a2, __n128 *a3)
{
  *(void *)a1 = *a2;
  __n128 result = *a3;
  *(void *)(a1 + 24) = a3[1].n128_u64[0];
  *(__n128 *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2226B7C0C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  return sub_2226B7C14(a1, a2, a3, (uint64_t)a3);
}

uint64_t sub_2226B7C14(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = sub_2226B7CD4(a1, a2, &v17, &v16, a3);
  uint64_t v7 = *v6;
  char v15 = 0;
  if (!v7)
  {
    uint64_t v8 = v6;
    sub_2226B7EA8(a1, a4, (uint64_t)v14);
    int v9 = v17;
    uint64_t v11 = (void *)sub_2225CBA80((uint64_t)v14, v10);
    sub_2225E3140(a1, (uint64_t)v9, v8, v11);
    uint64_t v7 = sub_2225CE10C((uint64_t)v14, v12);
    char v15 = 1;
    sub_2225E31CC(v14);
  }
  sub_2225C64B8(v14, v7);
  sub_2225D7B28(&v18, v14, &v15);
  return v18;
}

uint64_t *sub_2226B7CD4(uint64_t a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v31 = a2;
  uint64_t v9 = sub_2225E2940(a1, (uint64_t)a2);
  sub_2225C64B8(&v30, v9);
  if (!sub_2225DE638(&v31, &v30))
  {
    uint64_t v11 = sub_2225D2650(a1, v10);
    uint64_t v12 = sub_2225E29B8((uint64_t)&v31);
    if ((sub_2226B7964(v11, a5, v12) & 1) == 0)
    {
      uint64_t v19 = sub_2225D2650(a1, v10);
      uint64_t v20 = sub_2225E29B8((uint64_t)&v31);
      if (!sub_2226B79AC(v19, v20, a5))
      {
        uint64_t v27 = v31;
        *a3 = v31;
        *a4 = (uint64_t)v27;
        return a4;
      }
      long long v21 = v31;
      sub_2226B7F44((uint64_t)v31, 1);
      uint64_t v30 = v21;
      uint64_t v23 = sub_2225E2940(a1, v22);
      sub_2225C64B8(&v29, v23);
      if (sub_2225DE638(&v30, &v29)
        || (uint64_t v25 = sub_2225D2650(a1, v24), v26 = sub_2225E29B8((uint64_t)&v30), (sub_2226B7964(v25, a5, v26) & 1) != 0))
      {
        if (!*(void *)(sub_2225C3C70((uint64_t)&v31) + 8))
        {
          uint64_t v18 = v31;
          goto LABEL_7;
        }
        a4 = v30;
LABEL_13:
        *a3 = a4;
        return a4;
      }
      return sub_2226B77F0(a1, a3, a5);
    }
  }
  uint64_t v30 = v31;
  uint64_t v13 = sub_2226B7B54(a1, v10);
  sub_2225C64B8(&v29, v13);
  if (!sub_2225DE638(&v30, &v29))
  {
    uint64_t v15 = sub_2225D2650(a1, v14);
    uint64_t v16 = sub_2226B7B84(&v30);
    uint64_t v17 = sub_2225E29B8((uint64_t)v16);
    if ((sub_2226B79AC(v15, v17, a5) & 1) == 0) {
      return sub_2226B77F0(a1, a3, a5);
    }
  }
  a4 = v31;
  if (!*v31) {
    goto LABEL_13;
  }
  uint64_t v18 = v30;
LABEL_7:
  *a3 = v18;
  return v18 + 1;
}

uint64_t sub_2226B7EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_2225E1E38(a1, a2);
  uint64_t v6 = sub_2225E31D4(v5, 1);
  sub_2225E31D8((uint64_t)&v14, v5, 0);
  uint64_t v7 = sub_2225E31DC(a3, v6);
  uint64_t v9 = sub_2225CBA80(v7, v8);
  uint64_t v11 = j_nullsub_1(v9 + 32, v10);
  sub_2226B8008(v5, v11, a2);
  uint64_t result = sub_2225E31E4(a3, v12);
  *(unsigned char *)(result + 8) = 1;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2226B7F44(uint64_t a1, uint64_t a2)
{
  sub_2226B7F70(&v2, a2);
}

uint64_t **sub_2226B7F70(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2, a2);

  return sub_2226B7FB0(a1, v3);
}

uint64_t **sub_2226B7FB0(uint64_t **result, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (a2 < 0)
  {
    do
      uint64_t result = sub_2226B7B84(v3);
    while (!__CFADD__(v2++, 1));
  }
  else if (a2)
  {
    unint64_t v4 = a2 + 1;
    do
    {
      uint64_t result = (uint64_t **)sub_2226B7BB4((uint64_t *)v3);
      --v4;
    }
    while (v4 > 1);
  }
  return result;
}

uint64_t sub_2226B800C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226B8018(a2, a3);
}

__n128 sub_2226B801C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __n128 result = *(__n128 *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(__n128 *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2226B8038(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = a2;
  uint64_t v3 = sub_2225C3C70((uint64_t)&v11);
  uint64_t v4 = sub_2226B80C0(a1, v3);
  uint64_t v6 = sub_2225E1E38(a1, v5);
  uint64_t v7 = sub_2225E29B8((uint64_t)&v11);
  uint64_t v9 = j_nullsub_1(v7, v8);
  sub_2225E1E40(v6, v9);
  sub_2225E1E48(v6, v3, 1);
  return v4;
}

uint64_t sub_2226B80C0(uint64_t a1, uint64_t a2)
{
  sub_2225C64B8(&v11, a2);
  sub_2226B7BB4(&v11);
  if (*(void *)nullsub_1(a1, v4) == a2)
  {
    uint64_t v6 = v11;
    *(void *)nullsub_1(a1, v5) = v6;
  }
  uint64_t v7 = (void *)sub_2225D2650(a1, v5);
  --*v7;
  uint64_t v9 = (uint64_t **)sub_2225E1E5C(a1, v8);
  sub_2225FAAFC(*v9, a2);
  return v11;
}

uint64_t sub_2226B8154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_26D4DEEC0;
  *(void *)(a1 + 8) = a2;
  sub_2225F3270(a1 + 16, a3);
  sub_2225F3278((_DWORD *)(a1 + 24));
  sub_2225F3278((_DWORD *)(a1 + 28));
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void *sub_2226B81B0(void *a1)
{
  *a1 = &unk_26D4DEEC0;
  sub_2225F346C(a1 + 2);
  return a1;
}

uint64_t sub_2226B81FC(uint64_t *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, _DWORD *a10, uint64_t a11)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  unsigned int v42 = a2;
  uint64_t v40 = a6;
  uint64_t v41 = a7;
  long long v39 = a9;
  (*(void (**)(uint64_t *, uint64_t))(*a1 + 64))(a1, a11);
  if (sub_2225CDBBC(&v42))
  {
    uint64_t v17 = (uint64_t *)sub_2225C3C70((uint64_t)&v40);
    uint64_t v18 = (uint64_t *)sub_2225F4D44(&v40);
    sub_2226B8548((uint64_t)v44, v17, v18);
    sub_2225F3280(v43);
    if (!sub_2225CF1E0((uint64_t)&v39))
    {
      sub_2226B854C(v39, *((uint64_t *)&v39 + 1), (uint64_t)a10, a1[1], (uint64_t)v43);
      sub_2226B8774(&v35, v43);
      long long v39 = v35;
    }
    uint64_t v19 = sub_2225C3C70((uint64_t)&v39);
    uint64_t v20 = sub_2225F4D54(&v39);
    if (v19 != v20)
    {
      uint64_t v21 = v20;
      do
      {
        if (sub_222622284(v19)) {
          sub_2225F39C4((uint64_t)v44, v19);
        }
        v19 += 56;
      }
      while (v19 != v21);
    }
    unsigned int v37 = v42;
    int v22 = sub_2226482CC(a10, v42);
    unsigned int v42 = v22;
    uint64_t v23 = sub_2225C3C70((uint64_t)(a1 + 2));
    sub_22260D198((uint64_t)a10, v22, (*(_DWORD *)(v23 + 4) >> 10) & 1, (uint64_t)&v35);
    long long v33 = v35;
    uint64_t v34 = v36;
    sub_2226B8778((uint64_t)a1, v42, (uint64_t)&v33, a3, (uint64_t)a10);
    uint64_t v32 = v36;
    long long v31 = v35;
    (*(void (**)(uint64_t *, void, long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t))(*a1 + 16))(a1, v42, &v31, a3, a4, a5, v40, v41, a10, a11);
    unsigned int v24 = v42;
    sub_2226B8920(v30, v44);
    sub_2226B882C((uint64_t)a1, v24, a3, v30[0], v30[1], v39, *((uint64_t *)&v39 + 1), a10);
    if (sub_2225CDBBC(&v37) && sub_2226074FC(&v37))
    {
      unsigned int v29 = 0;
      unsigned int v25 = v37;
      sub_2226B8920(v28, v44);
      sub_2226B8924((uint64_t)a1, v25, a3, v28[0], v28[1], v39, *((uint64_t *)&v39 + 1), a10, &v29, 0);
    }
    sub_2225F3460(v43);
    sub_2225C56C4(v44);
  }
  else
  {
    uint64_t v26 = v42;
    sub_22260D9EC((uint64_t)v38);
    (*(void (**)(uint64_t *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t))(*a1 + 16))(a1, v26, v38, a3, a4, a5, a6, a7, a10, a11);
  }
  *((_DWORD *)a1 + 6) = v42;
  *((_DWORD *)a1 + 8) = a3;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*a1 + 72))(a1, a11, a3);
}

uint64_t sub_2226B854C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  v24[0] = a1;
  v24[1] = a2;
  sub_2226B9590((uint64_t)v26, a3, a4, 0);
  unint64_t v9 = sub_2225C3C70((uint64_t)v24);
  uint64_t v10 = sub_2225F4D54(v24);
  if (v9 != v10)
  {
    uint64_t v12 = v10;
    uint64_t v13 = (char *)(v9 + 48);
    do
    {
      if (sub_2225CBBF8((uint64_t)(v13 - 24), v11))
      {
        if (sub_222622284(v13 - 36))
        {
          unsigned int v14 = sub_22261C6A4((unsigned int *)v13 - 12);
          unint64_t v5 = v5 & 0xFFFFFFFF00000000 | *((unsigned int *)v13 - 7);
          sub_2226B540C((uint64_t)v26, v14, *(void *)(v13 - 36), v5, 0, *v13);
        }
        else
        {
          unint64_t v6 = v6 & 0xFFFFFFFF00000000 | *((unsigned int *)v13 - 10);
          sub_2226B5758((uint64_t)v26, *((void *)v13 - 6), v6);
        }
      }
      else if ((sub_22261C7D4((uint64_t)(v13 - 48)) & 1) != 0 {
             || (LODWORD(v25[0]) = sub_22261C6A4((unsigned int *)v13 - 12),
      }
                 LODWORD(v21[0]) = sub_222613088(v13 - 48),
                 sub_22261FB84((unsigned int *)v25, (unsigned int *)v21)))
      {
        uint64_t v15 = *((void *)v13 - 6);
        uint64_t v16 = *((unsigned int *)v13 - 10);
        sub_2225CCBF8(v23, v13 - 24);
        unint64_t v9 = v9 & 0xFFFFFFFF00000000 | v16;
        sub_2226B5858((uint64_t)v26, v15, v9, v23[0], v23[1]);
      }
      else
      {
        unsigned int v17 = sub_22261C6A4((unsigned int *)v13 - 12);
        sub_2225CCBF8(v22, v13 - 24);
        sub_2226B5078((uint64_t)v26, v17, v22[0], v22[1], 0, *v13);
      }
      uint64_t v18 = v13 + 8;
      v13 += 56;
    }
    while (v18 != (char *)v12);
  }
  sub_2226B9594(v25, a3, a4, 0);
  if (sub_2226B6C84(v25, (uint64_t)v26))
  {
    sub_2226B9598(v21, a5);
    sub_2226B6D74((_DWORD **)v25, v21);
    j_j_nullsub_1_129(v21);
  }
  sub_2226B95A0((uint64_t)v25);
  return sub_2226B95A4((uint64_t)v26);
}

uint64_t sub_2226B8778(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  unsigned int v10 = sub_2225F514C(a3);
  uint64_t result = sub_22260CBC4((unsigned int *)(a1 + 28), &v10);
  if ((result & 1) == 0)
  {
    *(_DWORD *)(a1 + 28) = v10;
    uint64_t result = sub_2225C3C70(a1 + 16);
    if (a4 != 1 || (*(_DWORD *)(result + 4) & 0x1000) != 0)
    {
      if (sub_2225CDBBC(&v10))
      {
        return sub_2226B8CC8(a1, v10, a5);
      }
      else
      {
        sub_2226B8DDC(a1, a5);
        return sub_2226B8EDC(a1, a2, a5);
      }
    }
  }
  return result;
}

uint64_t sub_2226B882C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _DWORD *a8)
{
  v17[9] = *MEMORY[0x263EF8340];
  sub_2226B912C((uint64_t)v17);
  sub_2226B9130(a2, a4, a5, (uint64_t)v17, a8);
  (*(void (**)(uint64_t, void, uint64_t, void *, uint64_t, uint64_t, _DWORD *))(*(void *)a1 + 32))(a1, a2, a3, v17, a6, a7, a8);
  return sub_2225C56C4(v17);
}

uint64_t sub_2226B8924(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _DWORD *a8, unsigned int *a9, unsigned int a10)
{
  v48[9] = *MEMORY[0x263EF8340];
  unsigned int v47 = sub_2226B9408(a8, a2);
  if (sub_2226074FC(&v47))
  {
    sub_2226B8924(a1, v47, a3, a4, a5, a6, a7, a8, a9, a10 + 1);
    unsigned int v18 = *a9;
  }
  else
  {
    unsigned int v18 = a10 + 1;
    *a9 = a10 + 1;
  }
  if (v18 > *(_DWORD *)(sub_2225C3C70(a1 + 16) + 12)
    && *(_DWORD *)(sub_2225C3C70(a1 + 16) + 12)
    && ((uint64_t v19 = *(void *)(sub_2225C3C70(a1 + 16) + 8) >> 33,
         unsigned int v20 = (*(_DWORD *)(sub_2225C3C70(a1 + 16) + 12) & 1) + v19,
         unsigned int v21 = *a9,
         uint64_t result = sub_2225C3C70(a1 + 16),
         unsigned int v23 = v21 - (*(void *)(result + 8) >> 33),
         v20 <= a10)
      ? (BOOL v24 = v23 > a10)
      : (BOOL v24 = 0),
        v24))
  {
    if (v20 == a10)
    {
      sub_2226B9474(v46);
      uint64_t v35 = sub_2225E8C04(v48);
      uint64_t v36 = sub_2225CA524(v35, "(skipping ");
      unsigned int v37 = sub_2225CA560(v36, v23 - a10);
      sub_2225CA524((uint64_t)v37, " expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)");
      uint64_t v38 = sub_2225E8D4C(v48);
      sub_2226B8C28(a1, v38, v39);
      sub_2225E8C5C(v48);
      return sub_2225CA520(v46);
    }
  }
  else
  {
    int v25 = sub_22260C6E8(a8, a2);
    unsigned int v26 = a2;
    if (v25) {
      unsigned int v26 = sub_22260C7BC(a8, a2);
    }
    unsigned int v27 = sub_222609A80(a8, v26);
    sub_2226B912C((uint64_t)v48);
    sub_2226B9130(a2, a4, a5, (uint64_t)v48, a8);
    sub_2226B9478(v46);
    sub_2225E8C04(v45);
    uint64_t v43 = sub_2226B947C(a2, a8, *(void *)(a1 + 8));
    uint64_t v44 = v28;
    if (sub_2225CF1E0((uint64_t)&v43))
    {
      unsigned int v29 = "expanded from here";
      uint64_t v30 = (void **)v45;
    }
    else
    {
      long long v31 = sub_2225CA524((uint64_t)v45, "expanded from macro '");
      uint64_t v30 = sub_2225CA568((uint64_t)v31, v43, v44);
      unsigned int v29 = "'";
    }
    sub_2225CA524((uint64_t)v30, v29);
    uint64_t v32 = sub_2225E8D4C(v45);
    uint64_t v34 = v33;
    sub_2226B8920(v42, v48);
    sub_2225CCC70(&v41);
    sub_2226B958C((uint64_t)&v40, 0);
    sub_2226B81FC(a1, v27, 1, v32, v34, v42[0], v42[1]);
    sub_2225E8C5C(v45);
    sub_2225CA520(v46);
    return sub_2225C56C4(v48);
  }
  return result;
}

uint64_t sub_2226B8C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2225F3278(&v10);
  sub_22260D9EC((uint64_t)v9);
  sub_2225CCC70(v8);
  sub_222686B94(&v7);
  return (*(uint64_t (**)(uint64_t, void, unsigned char *, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t))(*(void *)a1 + 16))(a1, v10, v9, 1, a2, a3, v8[0], v8[1], 0, v7);
}

uint64_t sub_2226B8CC8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned int v16 = a2;
  if (sub_2225F38E8(&v16)) {
    return sub_2226B8DDC(a1, a3);
  }
  int v6 = v16;
  uint64_t v7 = sub_2225C3C70(a1 + 16);
  sub_22260D198(a3, v6, (*(_DWORD *)(v7 + 4) >> 10) & 1, (uint64_t)&v14);
  uint64_t result = sub_222609A70(&v14);
  if ((result & 1) == 0)
  {
    sub_2226B8F4C(a3, v16, &v11);
    if (sub_2225CDBBC(&v11))
    {
      return sub_2226B8FFC(a1, v11, v12, v13, a3);
    }
    else
    {
      unsigned int v8 = sub_2225F514C((uint64_t)&v14);
      sub_2226B8CC8(a1, v8, a3);
      long long v9 = v14;
      uint64_t v10 = v15;
      return (*(uint64_t (**)(uint64_t, void, long long *, uint64_t))(*(void *)a1 + 40))(a1, v16, &v9, a3);
    }
  }
  return result;
}

uint64_t sub_2226B8DDC(uint64_t a1, uint64_t a2)
{
  v14[0] = sub_2226B90F0(a2);
  v14[1] = v3;
  uint64_t result = sub_2225C3D04((uint64_t)v14);
  uint64_t v5 = result;
  if (result)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = sub_2226B911C(v14, v6);
      uint64_t v8 = sub_2225C3D04(v7 + 24);
      uint64_t v9 = *(unsigned int *)(sub_2226B911C(v14, v6) + 24);
      uint64_t v10 = sub_2225C3C70(a1 + 16);
      sub_22260D198(v8, v9, (*(_DWORD *)(v10 + 4) >> 10) & 1, (uint64_t)v13);
      uint64_t v11 = sub_2226B911C(v14, v6);
      sub_2225CCBF8(v12, v11);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *, void, void, uint64_t))(*(void *)a1 + 56))(a1, v9, v13, v12[0], v12[1], v8);
      ++v6;
    }
    while (v5 != v6);
  }
  return result;
}

uint64_t sub_2226B8EDC(uint64_t a1, int a2, uint64_t a3)
{
  int v9 = a2;
  if (sub_2225F38E8(&v9)) {
    return sub_2226B8DDC(a1, a3);
  }
  sub_2226B8F4C(a3, v9, &v6);
  return sub_2226B8FFC(a1, v6, v7, v8, a3);
}

_DWORD *sub_2226B8F4C@<X0>(uint64_t a1@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  if ((int)sub_222609AF8((_DWORD *)a1, a2) < -1)
  {
    uint64_t v7 = *(uint64_t (**)(void))(**(void **)(a1 + 528) + 24);
    return (_DWORD *)v7();
  }
  else
  {
    sub_2225F3278(&v8);
    v9[0] = sub_2226B990C((uint64_t)&v8, (uint64_t)&byte_2226D1615);
    v9[1] = v5;
    return sub_2226B993C(a3, (uint64_t)v9);
  }
}

uint64_t sub_2226B8FFC(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v19 = a2;
  uint64_t result = sub_2225F38E8(&v19);
  if ((result & 1) == 0)
  {
    int v10 = v19;
    uint64_t v11 = sub_2225C3C70(a1 + 16);
    sub_22260D198(a5, v10, (*(_DWORD *)(v11 + 4) >> 10) & 1, (uint64_t)&v17);
    uint64_t result = sub_222609A70(&v17);
    if ((result & 1) == 0)
    {
      sub_2226B8F4C(a5, v19, &v14);
      sub_2226B8FFC(a1, v14, v15, v16, a5);
      long long v12 = v17;
      uint64_t v13 = v18;
      return (*(uint64_t (**)(uint64_t, void, long long *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48))(a1, v19, &v12, a3, a4, a5);
    }
  }
  return result;
}

uint64_t sub_2226B90F0(uint64_t a1)
{
  sub_2225D4BB8(&v2, a1 + 704);
  return v2;
}

uint64_t sub_2226B911C(void *a1, uint64_t a2)
{
  return *a1 + 40 * a2;
}

uint64_t sub_2226B9130(int a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  v21[0] = a2;
  v21[1] = a3;
  int v20 = sub_222609AF8(a5, a1);
  uint64_t v7 = (unsigned int *)sub_2225C3C70((uint64_t)v21);
  uint64_t result = sub_2225F4D44(v21);
  if (v7 != (unsigned int *)result)
  {
    int v9 = (unsigned int *)result;
    do
    {
      unsigned int v19 = sub_22261C6A4(v7);
      unsigned int v18 = sub_222613088(v7);
      char v10 = sub_22261C7D4((uint64_t)v7);
      unsigned int v17 = sub_222609AF8(a5, v19);
      unsigned int v16 = sub_222609AF8(a5, v18);
      sub_2226B9988((uint64_t)v22, 0);
      if (sub_2226074FC(&v19))
      {
        do
        {
          if (!sub_22260EC60(&v17, &v16)) {
            break;
          }
          uint64_t v11 = sub_2226B998C(v22, &v17);
          *uint64_t v11 = v19;
          unsigned int v19 = sub_22260C7BC(a5, v19);
          unsigned int v17 = sub_222609AF8(a5, v19);
        }
        while ((sub_2226074FC(&v19) & 1) != 0);
      }
      if (sub_22260EC60(&v17, &v16))
      {
        if (sub_2226074FC(&v18))
        {
          do
          {
            if (sub_2226B99A8((uint64_t)v22, &v16)) {
              break;
            }
            unsigned int v18 = (unint64_t)sub_22260C7BC(a5, v18) >> 32;
            unsigned int v16 = sub_222609AF8(a5, v18);
          }
          while ((sub_2226074FC(&v18) & 1) != 0);
        }
        if (sub_2226074FC(&v18))
        {
          unsigned int v19 = *sub_2226B998C(v22, &v16);
          unsigned int v17 = v16;
        }
      }
      while (sub_2226074FC(&v19) && sub_22260EC60(&v17, &v20))
      {
        if (sub_22260C6E8(a5, v19))
        {
          unsigned int v19 = sub_22260C744(a5, v19);
          LODWORD(v12) = sub_22260C744(a5, v18);
        }
        else
        {
          unsigned int v19 = sub_22260C7BC(a5, v19);
          unint64_t v12 = (unint64_t)sub_22260C7BC(a5, v18) >> 32;
        }
        unsigned int v18 = v12;
        unsigned int v17 = sub_222609AF8(a5, v19);
        v15[0] = sub_222609AF8(a5, v18);
        if (sub_22260EC60(&v17, v15))
        {
          sub_2225F3278(v15);
          unsigned int v13 = v15[0];
          unsigned int v18 = v15[0];
          unsigned int v19 = v15[0];
          goto LABEL_20;
        }
      }
      unsigned int v13 = v19;
LABEL_20:
      unsigned int v19 = sub_222609A80(a5, v13);
      unsigned int v18 = sub_222609A80(a5, v18);
      sub_22261F184(&v14, v19, v18);
      sub_2225E31D8((uint64_t)v15, v14, v10);
      sub_2225F39C4(a4, (uint64_t)v15);
      uint64_t result = (uint64_t)sub_2226B99D0(v22);
      v7 += 3;
    }
    while (v7 != v9);
  }
  return result;
}

uint64_t sub_2226B9408(_DWORD *a1, unsigned int a2)
{
  unsigned int v6 = a2;
  int v3 = sub_2226074FC(&v6);
  uint64_t v4 = v6;
  if (v3)
  {
    if (sub_22260C6E8(a1, v6)) {
      return sub_22260C744(a1, v6);
    }
    else {
      return sub_22260C7BC(a1, v6);
    }
  }
  return v4;
}

uint64_t sub_2226B947C(int a1, _DWORD *a2, uint64_t a3)
{
  unsigned int v5 = a1;
  if (sub_22260C6E8(a2, a1))
  {
    do
      unsigned int v5 = sub_22260C7BC(a2, v5);
    while ((sub_22260C6E8(a2, v5) & 1) != 0);
  }
  int v6 = sub_222609A80(a2, v5);
  unsigned int v7 = sub_222609AF8(a2, v6);
  if (sub_22262CE08((uint64_t)a2, v7))
  {
    unsigned int v8 = sub_22260C7BC(a2, v5);
    unsigned int v9 = sub_222609A80(a2, v8);
    unint64_t v10 = sub_222609C14(a2, v9);
    unsigned int v11 = v10;
    unint64_t v12 = HIDWORD(v10);
    unsigned int v13 = sub_22261BB40(v9, a2, a3);
    v16[0] = sub_22260C090((uint64_t)a2, v11, 0);
    v16[1] = v14;
    return sub_2225CE76C(v16, v12, v13);
  }
  else
  {
    sub_2225CCC70(&v17);
    return v17;
  }
}

uint64_t sub_2226B95A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  sub_2225F3280(a1 + 40);
  sub_2225E0EC4((void *)(a1 + 512));
  return a1;
}

uint64_t *sub_2226B95EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  sub_2225E0EC8((uint64_t)(a1 + 3), a2);
  sub_2225F4FB8(a1 + 6, 0);
  sub_2225E0EC4(a1 + 9);
  return a1;
}

void *sub_2226B9634(void *a1, uint64_t a2)
{
  uint64_t result = sub_2226B9674(a1);
  *uint64_t result = &unk_26D4DEF20;
  result[1] = a2;
  return result;
}

void *sub_2226B9674(void *result)
{
  *uint64_t result = &unk_26D4DEE88;
  return result;
}

void sub_2226B9694()
{
  uint64_t v0 = (void *)j_j_nullsub_1_129();

  j__free(v0);
}

uint64_t sub_2226B96BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void **)(a1 + 8);
  sub_22261E3FC(a2, a3, a4, 0, (uint64_t)v6);
  sub_2226B9768(v4, (uint64_t)v6);
  return sub_2225F4E0C(v6);
}

uint64_t sub_2226B9710(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5 = *(void **)(a1 + 8);
  sub_22261FFBC(a2, a3, a4, a5, (uint64_t)v7);
  sub_2226B9768(v5, (uint64_t)v7);
  return sub_2225F4E0C(v7);
}

uint64_t sub_2226B9768(void *a1, uint64_t a2)
{
  if (a1[1] >= a1[2]) {
    sub_2225F6068(a1, 0);
  }
  uint64_t v4 = sub_2225C3D04((uint64_t)a1);
  sub_2225F6208(v4, a2);
  uint64_t v5 = sub_2225C3D04((uint64_t)a1) + 56;

  return sub_2225C5B6C((uint64_t)a1, v5);
}

uint64_t sub_2226B97D8(uint64_t a1)
{
  return a1;
}

void **sub_2226B981C(void **a1)
{
  return a1;
}

uint64_t sub_2226B984C(uint64_t a1)
{
  uint64_t result = sub_2225F5148(a1);
  if (result)
  {
    int v6 = sub_2225F50F8();
    int v5 = sub_2226B7450();
    int v3 = (_DWORD *)sub_2225CC180(a1);
    uint64_t result = sub_2225F50FC(a1);
    if (v3 != (_DWORD *)result)
    {
      uint64_t v4 = (_DWORD *)result;
      do
      {
        uint64_t result = sub_2225F5218(v3, &v6);
        if ((result & 1) == 0) {
          uint64_t result = sub_2225F5218(v3, &v5);
        }
        v3 += 2;
      }
      while (v3 != v4);
    }
  }
  return result;
}

uint64_t sub_2226B98D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226B990C(uint64_t a1, uint64_t a2)
{
  sub_2226B9940(&v3, a1, a2);
  return v3;
}

uint64_t sub_2226B9944(uint64_t result, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)uint64_t result = *a2;
  *(void *)(result + 8) = a3;
  return result;
}

_DWORD *sub_2226B9954(_DWORD *a1, uint64_t a2)
{
  *a1 = *(_DWORD *)a2;
  sub_2225C3D00(a1 + 8, *(char **)(a2 + 8));
  return a1;
}

int *sub_2226B998C(int *a1, unsigned int *a2)
{
  return sub_2226B9B50(a1, a2) + 1;
}

uint64_t sub_2226B99A8(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = 0;
  return sub_2226B9C28(a1, a2, &v3);
}

uint64_t sub_2226B99D4(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t v4 = (int *)nullsub_1(a1, a2);
  sub_2226B9A08(v4, v2);
  return a1;
}

uint64_t sub_2226B9A08(int *a1, unsigned int a2)
{
  int v3 = *a1;
  *a1 |= 1u;
  if (a2 >= 5)
  {
    *a1 = v3 & 0xFFFFFFFE;
    int v5 = (void *)sub_222612AC0((uint64_t)a1);
    *int v5 = sub_222612AC4((uint64_t)a1, a2);
    v5[1] = v6;
  }

  return sub_2226B9A80(a1);
}

uint64_t sub_2226B9A80(int *a1)
{
  sub_222612B58(a1, 0);
  sub_222612B5C((uint64_t)a1, 0);
  int v2 = sub_222610B44();
  int v3 = (_DWORD *)sub_2226B9AE8(a1);
  uint64_t result = sub_2226B9AEC((uint64_t)a1);
  while (v3 != (_DWORD *)result)
  {
    *int v3 = v2;
    v3 += 2;
  }
  return result;
}

uint64_t sub_2226B9AEC(uint64_t a1)
{
  uint64_t v2 = sub_2226B9AE8();
  return v2 + 8 * sub_2226B9B20(a1);
}

uint64_t sub_2226B9B24(unsigned char *a1)
{
  if (*a1) {
    return 4;
  }
  else {
    return *(unsigned int *)(sub_2225E563C((uint64_t)a1) + 8);
  }
}

int *sub_2226B9B50(int *a1, unsigned int *a2)
{
  uint64_t v6 = 0;
  if (sub_2226B9BB0((uint64_t)a1, a2, &v6)) {
    return v6;
  }
  sub_2225F3278(&v5);
  return sub_2226B9BEC(a1, a2, &v5, v6);
}

uint64_t sub_2226B9BB0(uint64_t a1, unsigned int *a2, void *a3)
{
  int v5 = 0;
  uint64_t result = sub_2226B9C28(a1, a2, &v5);
  *a3 = v5;
  return result;
}

int *sub_2226B9BEC(int *a1, unsigned int *a2, int *a3, int *a4)
{
  uint64_t result = sub_2226B9D54(a1, a2, a4);
  *uint64_t result = *a2;
  result[1] = *a3;
  return result;
}

uint64_t sub_2226B9C28(uint64_t a1, unsigned int *a2, int **a3)
{
  uint64_t v6 = sub_222612BB0(a1);
  uint64_t result = sub_2226B9B20(a1);
  if (result)
  {
    int v8 = result;
    int v9 = sub_222610B44();
    int v10 = sub_222610F2C();
    int v11 = v8 - 1;
    unsigned int v12 = sub_222612198(a2) & (v8 - 1);
    unsigned int v13 = (int *)(v6 + 8 * v12);
    if (sub_222610F30(*a2, *v13))
    {
      uint64_t result = 1;
    }
    else
    {
      uint64_t v14 = 0;
      int v15 = 1;
      while (!sub_222610F30(*v13, v9))
      {
        if (sub_222610F30(*v13, v10) && v14 == 0) {
          uint64_t v14 = v13;
        }
        unsigned int v12 = (v12 + v15) & v11;
        unsigned int v13 = (int *)(v6 + 8 * v12);
        ++v15;
        if (sub_222610F30(*a2, *v13))
        {
          uint64_t result = 1;
          goto LABEL_13;
        }
      }
      uint64_t result = 0;
      if (v14) {
        unsigned int v13 = v14;
      }
    }
  }
  else
  {
    unsigned int v13 = 0;
  }
LABEL_13:
  *a3 = v13;
  return result;
}

int *sub_2226B9D54(int *a1, unsigned int *a2, int *a3)
{
  int v10 = a3;
  int v5 = sub_222613080(a1);
  uint64_t v6 = sub_2226B9B20(a1);
  uint64_t v7 = v6;
  if (4 * v5 + 4 >= (3 * v6))
  {
    sub_2226B9E44(a1, (2 * v6));
    sub_2226B9BB0((uint64_t)a1, a2, &v10);
    sub_2226B9B20(a1);
  }
  else if (v6 + ~v5 - sub_222613088(a1) <= v6 >> 3)
  {
    sub_2226B9E44(a1, v7);
    sub_2226B9BB0((uint64_t)a1, a2, &v10);
  }
  sub_22261308C(a1);
  int v8 = sub_222610B44();
  if (!sub_222610F30(*v10, v8)) {
    sub_2226130C8((uint64_t)a1);
  }
  return v10;
}

void sub_2226B9E48(int *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if (a2 >= 4)
  {
    v17[0] = 64;
    int v16 = sub_2225C3A4C(a2 - 1);
    unsigned int v2 = *(_DWORD *)sub_2225C7858(v17, &v16);
  }
  if (*(unsigned char *)a1)
  {
    if (v2 >= 4)
    {
      int v7 = sub_222610B44();
      int v8 = sub_222610F2C();
      uint64_t v9 = sub_222612BB0(a1);
      uint64_t v10 = 0;
      int v11 = v17;
      do
      {
        if (!sub_222610F30(*(_DWORD *)(v9 + v10), v7) && !sub_222610F30(*(_DWORD *)(v9 + v10), v8))
        {
          *int v11 = *(_DWORD *)(v9 + v10);
          v11[1] = *(_DWORD *)(v9 + v10 + 4);
          v11 += 2;
        }
        v10 += 8;
      }
      while (v10 != 32);
      *a1 &= ~1u;
      unsigned int v12 = (void *)sub_222612AC0((uint64_t)a1);
      *unsigned int v12 = sub_222612AC4((uint64_t)a1, v2);
      v12[1] = v13;
      sub_2226BA004(a1, v17, v11);
    }
  }
  else
  {
    uint64_t v4 = sub_222612AC0((uint64_t)a1);
    int v5 = *(int **)v4;
    uint64_t v6 = *(unsigned int *)(v4 + 8);
    sub_222612AC0((uint64_t)a1);
    if (v2 > 4)
    {
      uint64_t v14 = (void *)sub_222612AC0((uint64_t)a1);
      void *v14 = sub_222612AC4((uint64_t)a1, v2);
      v14[1] = v15;
    }
    else
    {
      *a1 |= 1u;
    }
    sub_2226BA004(a1, v5, &v5[2 * v6]);
    j__free(v5);
  }
}

int *sub_2226BA004(int *a1, int *a2, int *a3)
{
  sub_2226B9A80(a1);
  int v6 = sub_222610B44();
  uint64_t result = (int *)sub_222610F2C();
  if (a2 != a3)
  {
    int v8 = (int)result;
    do
    {
      uint64_t result = (int *)sub_222610F30(*a2, v6);
      if ((result & 1) == 0)
      {
        uint64_t result = (int *)sub_222610F30(*a2, v8);
        if ((result & 1) == 0)
        {
          uint64_t v10 = 0;
          sub_2226B9BB0((uint64_t)a1, (unsigned int *)a2, &v10);
          uint64_t v9 = v10;
          int *v10 = *a2;
          v9[1] = a2[1];
          uint64_t result = sub_22261308C(a1);
        }
      }
      a2 += 2;
    }
    while (a2 != a3);
  }
  return result;
}

unsigned char *sub_2226BA0C0(unsigned char *a1)
{
  return a1;
}

uint64_t sub_2226BA0F0(uint64_t a1)
{
  uint64_t result = sub_2226B9B20(a1);
  if (result)
  {
    int v3 = sub_222610B44();
    int v4 = sub_222610F2C();
    int v5 = (int *)sub_2226B9AE8(a1);
    uint64_t result = sub_2226B9AEC(a1);
    if (v5 != (int *)result)
    {
      int v6 = (int *)result;
      do
      {
        uint64_t result = sub_222610F30(*v5, v3);
        if ((result & 1) == 0) {
          uint64_t result = sub_222610F30(*v5, v4);
        }
        v5 += 2;
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t *sub_2226BA180(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_2225F5AA4(a2);
  return a1;
}

uint64_t *sub_2226BA1C0(uint64_t *a1, uint64_t a2)
{
  *a1 = sub_2225CC180(a2);
  a1[1] = sub_2225F5AE8(a2);
  return a1;
}

uint64_t sub_2226BA200(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int v6 = (const void **)sub_2225F62A4(a1, 0x14u);
  sub_2226BA248(v6, a2, a3);
  return a1;
}

uint64_t sub_2226BA248(const void **a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v6 = sub_2225F6B68(a2, a3);
  uint64_t v7 = sub_2225C5B40((uint64_t)a1);
  if (v6 > 0xAAAAAAAAAAAAAAABLL * ((v7 - sub_2225C3D04((uint64_t)a1)) >> 2))
  {
    unint64_t v8 = sub_2225F5AA4((uint64_t)a1);
    sub_2225F6058(a1, v8 + v6);
  }
  uint64_t v9 = (void *)sub_2225C3D04((uint64_t)a1);
  sub_2226BA310(a2, a3, v9);
  uint64_t v10 = sub_2225C3D04((uint64_t)a1) + 12 * v6;

  return sub_2225C5B6C((uint64_t)a1, v10);
}

uint64_t sub_2226BA310(uint64_t *a1, uint64_t *a2, void *a3)
{
  sub_2226BA32C(a1, a2, a3);
  return v3;
}

uint64_t sub_2226BA32C(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v9 = a3;
  uint64_t v10 = a1;
  if (a1 != a2)
  {
    int v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      int v5 = v9;
      int v6 = *((_DWORD *)v4 + 2);
      uint64_t v7 = *v4;
      int v4 = (uint64_t *)((char *)v4 + 12);
      *uint64_t v9 = v7;
      *((_DWORD *)v5 + 2) = v6;
      uint64_t v9 = (void *)((char *)v5 + 12);
      uint64_t v10 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v11, &v10, &v9);
  return v11;
}

uint64_t sub_2226BA3AC(uint64_t a1)
{
  return sub_2225F62A4(a1, 4u);
}

uint64_t sub_2226BA3B8()
{
  return sub_2225C69CC();
}

uint64_t sub_2226BA3C4()
{
  return sub_2225C69CC();
}

uint64_t sub_2226BA3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = j_nullsub_1(a2, a2);

  return sub_222686FB4(a1, v3);
}

void *sub_2226BA40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)sub_2226B8154(a1, a3, a4);
  *uint64_t result = &unk_26D4DEF58;
  result[5] = a2;
  return result;
}

void sub_2226BA464()
{
  uint64_t v0 = (void *)sub_2226BA460();

  j__free(v0);
}

uint64_t sub_2226BA48C(uint64_t *a1, unsigned int a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned int v28 = a2;
  int v16 = sub_2226BA610(a1[5]);
  if (sub_2225CDBBC(&v28))
  {
    long long v26 = *a3;
    uint64_t v27 = *((void *)a3 + 2);
    (*(void (**)(uint64_t *, void, long long *, uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 24))(a1, v28, &v26, a4, a7, a8, a9);
  }
  uint64_t v17 = (uint64_t)(a1 + 2);
  if ((*(unsigned char *)(sub_2225C3C70((uint64_t)(a1 + 2)) + 5) & 0x80) != 0) {
    (*(void (**)(uint64_t))(*(void *)a1[5] + 24))(a1[5]);
  }
  uint64_t v18 = a1[5];
  int v19 = (*(_DWORD *)(sub_2225C3C70((uint64_t)(a1 + 2)) + 4) >> 15) & 1;
  uint64_t v20 = sub_2225C3C70((uint64_t)(a1 + 2));
  sub_2226BA664(v18, a4, v19, (*(_DWORD *)(v20 + 4) >> 19) & 1);
  unsigned int v21 = (void **)a1[5];
  int v22 = sub_2226BA610((uint64_t)v21) - v16;
  uint64_t v23 = *(unsigned int *)(sub_2225C3C70(v17) + 28);
  uint64_t v24 = sub_2225C3C70(v17);
  return sub_2226BA8A4(v21, a4 == 1, a5, a6, v22, v23, (*(_DWORD *)(v24 + 4) >> 15) & 1);
}

uint64_t sub_2226BA610(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
  return sub_2226BCC44(a1) + v2;
}

void **sub_2226BA664(uint64_t a1, int a2, int a3, int a4)
{
  if (a3)
  {
    switch(a2)
    {
      case 1:
        (*(void (**)(uint64_t, void, uint64_t, void))(*(void *)a1 + 16))(a1, 0, 1, 0);
        uint64_t v7 = "note";
        goto LABEL_10;
      case 2:
        (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 16))(a1, 4, 1, 0);
        uint64_t v7 = "remark";
        goto LABEL_10;
      case 3:
        (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 16))(a1, 5, 1, 0);
        uint64_t v7 = "warning";
        goto LABEL_10;
      case 4:
        (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 16))(a1, 1, 1, 0);
        uint64_t v7 = "error";
        goto LABEL_10;
      case 5:
        (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 16))(a1, 1, 1, 0);
        uint64_t v7 = "fatal error";
        goto LABEL_10;
      default:
        break;
    }
  }
  else if ((a2 - 1) <= 4)
  {
    uint64_t v7 = (&off_264626598)[a2 - 1];
LABEL_10:
    sub_2225CA524(a1, v7);
  }
  if (a4) {
    sub_2225CA524(a1, "(clang)");
  }
  uint64_t result = sub_2225CA524(a1, ": ");
  if (a3)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 24);
    return (void **)v9(a1);
  }
  return result;
}

uint64_t sub_2226BA8A4(void **a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  int v13 = a7 ^ 1 | a2;
  if ((v13 & 1) == 0) {
    (*((void (**)(void **, uint64_t, uint64_t, void))*a1 + 2))(a1, 8, 1, 0);
  }
  if (a6)
  {
    sub_2226BA9C4(a1, a3, a4, a6, a5, v13 ^ 1);
    if (!a7) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v15 = 1;
  sub_2226BABAC((uint64_t)a1, a3, a4, &v15, v13 ^ 1);
  if (a7) {
LABEL_5:
  }
    (*((void (**)(void **))*a1 + 3))(a1);
LABEL_6:

  return sub_2225CAF14((uint64_t)a1, 10);
}

uint64_t sub_2226BA9C4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  v23[0] = (const void *)sub_2225CCC00(&v25, 0xAu, 0);
  uint64_t v24 = sub_2225C3D04((uint64_t)&v25);
  uint64_t v10 = *(void *)sub_2225CAB38(v23, &v24);
  LOBYTE(v24) = 1;
  sub_2226237BC(v23);
  sub_2226BCC54(v23, 6u, 32);
  if (v10)
  {
    uint64_t v11 = 0;
    do
    {
      unsigned int v12 = sub_2226BCC7C(v11, v25, v26, v10);
      if (v12 == v10) {
        break;
      }
      unsigned int v13 = v12;
      uint64_t v11 = sub_2226BCCE4(v12, v25, v26, v10, a5, a4);
      unint64_t v14 = v11 - v13;
      if ((int)v14 + a5 >= a4)
      {
        sub_2225CAF14((uint64_t)a1, 10);
        char v15 = (unsigned char *)sub_2225C5698((uint64_t)v23, 0);
        sub_2225E7C80(a1, v15, 6uLL);
        uint64_t v16 = sub_2225CE76C(&v25, v13, v14);
        sub_2226BABAC((uint64_t)a1, v16, v17, &v24, a6);
        a5 = v14 + 6;
      }
      else
      {
        if (v13)
        {
          sub_2225CAF14((uint64_t)a1, 32);
          a5 += v14 + 1;
        }
        else
        {
          a5 += v14;
        }
        uint64_t v18 = sub_2225CE76C(&v25, v13, v14);
        sub_2226BABAC((uint64_t)a1, v18, v19, &v24, a6);
      }
    }
    while (v11 < v10);
  }
  uint64_t v20 = sub_2225CE76C(&v25, v10, 0xFFFFFFFFFFFFFFFFLL);
  sub_2226BABAC((uint64_t)a1, v20, v21, &v24, a6);
  return sub_2225CA520(v23);
}

void **sub_2226BABAC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, int a5)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  while (1)
  {
    unint64_t v8 = sub_2225CCC00(&v15, 0x7Fu, 0);
    uint64_t v9 = sub_2225CCC74(&v15, 0, v8);
    uint64_t result = sub_2225CA568(a1, v9, v10);
    if (v8 == -1) {
      return result;
    }
    uint64_t v15 = sub_2225CE76C(&v15, v8 + 1, 0xFFFFFFFFFFFFFFFFLL);
    uint64_t v16 = v12;
    uint64_t v13 = *(void *)a1;
    if (*a4)
    {
      uint64_t v14 = 6;
    }
    else
    {
      (*(void (**)(uint64_t))(*(void *)a1 + 24))(a1);
      if (!a5) {
        goto LABEL_8;
      }
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = 8;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v13 + 16))(a1, v14, 1, 0);
LABEL_8:
    *a4 ^= 1u;
  }
}

uint64_t sub_2226BACE8(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  v56[0] = a5;
  v56[1] = a6;
  if (sub_222609A70(a3))
  {
    LODWORD(v52) = sub_222609AF8(a7, a2);
    uint64_t result = sub_2225F38E8(&v52);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_22262CE08((uint64_t)a7, v52);
      if (result)
      {
        uint64_t v12 = result;
        uint64_t result = sub_2225F8D68(result);
        if (result)
        {
          uint64_t v13 = *(void *)(a1 + 40);
          uint64_t v14 = (char *)sub_2225C3C70(v12);
          sub_2225CA524(v13, v14);
          if (sub_2226BB16C(v12)) {
            sub_2225CA524(*(void *)(a1 + 40), " (in PCH)");
          }
          return (uint64_t)sub_2225CA524(*(void *)(a1 + 40), ": ");
        }
      }
    }
    return result;
  }
  unsigned int v15 = sub_2225F56EC((uint64_t)a3);
  uint64_t result = sub_2225C3C70(a1 + 16);
  if ((*(unsigned char *)(result + 4) & 0x20) == 0) {
    return result;
  }
  if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 5) & 0x80) != 0) {
    (*(void (**)(void, uint64_t, uint64_t, void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40), 8, 1, 0);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = (char *)sub_2225C3C70((uint64_t)a3);
  sub_2225CA524(v16, v17);
  uint64_t v18 = sub_2225C3C70(a1 + 16);
  int v19 = sub_2226BB174(v18);
  switch(v19)
  {
    case 2:
      int v22 = sub_2225CA524(*(void *)(a1 + 40), " +");
LABEL_18:
      sub_2225CA560(v22, v15);
      break;
    case 1:
      uint64_t v20 = *(void *)(a1 + 40);
      char v21 = 40;
      goto LABEL_17;
    case 0:
      uint64_t v20 = *(void *)(a1 + 40);
      char v21 = 58;
LABEL_17:
      int v22 = (void **)sub_2225CAF14(v20, v21);
      goto LABEL_18;
  }
  if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 4) & 0x10) != 0)
  {
    unsigned int v23 = sub_2225F5830((uint64_t)a3);
    if (v23)
    {
      unsigned int v24 = v23;
      uint64_t v25 = sub_2225C3C70(a1 + 16);
      int v26 = sub_2226BB174(v25);
      uint64_t v27 = *(void *)(a1 + 40);
      if (v26 == 1)
      {
        sub_2225CAF14(v27, 44);
        unsigned int v24 = (__PAIR64__(v24, *(_DWORD *)(*(void *)(a1 + 8) + 52) - 1) - 169999999) >> 32;
      }
      else
      {
        sub_2225CAF14(v27, 58);
      }
      sub_2225CA560(*(void ***)(a1 + 40), v24);
    }
  }
  uint64_t v28 = sub_2225C3C70(a1 + 16);
  int v29 = sub_2226BB174(v28);
  if (v29 == 2)
  {
LABEL_28:
    sub_2225CAF14(*(void *)(a1 + 40), 58);
    goto LABEL_30;
  }
  if (v29 != 1)
  {
    if (v29) {
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  sub_2225CA524(*(void *)(a1 + 40), ") : ");
LABEL_30:
  if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 5) & 1) != 0 && !sub_2225CF1E0((uint64_t)v56))
  {
    int v30 = sub_2225F757C(a7, a2);
    int v55 = sub_222609AF8(a7, v30);
    long long v31 = (unsigned int *)sub_2225C3C70((uint64_t)v56);
    uint64_t v32 = sub_2225F4D44(v56);
    if (v31 != (unsigned int *)v32)
    {
      uint64_t v33 = (unsigned int *)v32;
      char v34 = 0;
      do
      {
        if (sub_222622284(v31))
        {
          unsigned int v35 = sub_22261C6A4(v31);
          int v54 = sub_2225F757C(a7, v35);
          unsigned int v36 = sub_222613088(v31);
          unsigned int v53 = sub_2225F757C(a7, v36);
          if (sub_22260CBC4((unsigned int *)&v54, &v53))
          {
            LODWORD(v52) = sub_222613088(v31);
            if (sub_2226074FC(&v52))
            {
              int v37 = sub_222613088(v31);
              unsigned int v53 = (unint64_t)sub_22260C9BC(a7, v37) >> 32;
            }
          }
          uint64_t v52 = sub_222609C14(a7, v54);
          uint64_t v51 = sub_222609C14(a7, v53);
          if (!sub_22260EC60(&v52, &v55) && !sub_22260EC60(&v51, &v55))
          {
            if (sub_22261C7D4((uint64_t)v31)) {
              int v38 = sub_22261BB40(v53, a7, *(void *)(a1 + 8));
            }
            else {
              int v38 = 0;
            }
            uint64_t v39 = (void **)sub_2225CAF14(*(void *)(a1 + 40), 123);
            unsigned int v40 = sub_22260D3AC((uint64_t)a7, v52, SHIDWORD(v52), 0);
            uint64_t v41 = sub_2225CA560(v39, v40);
            unsigned int v42 = (void **)sub_2225CAF14((uint64_t)v41, 58);
            unsigned int v43 = sub_22260CFC0((uint64_t)a7, v52, HIDWORD(v52), 0);
            uint64_t v44 = sub_2225CA560(v42, v43);
            uint64_t v45 = (void **)sub_2225CAF14((uint64_t)v44, 45);
            unsigned int v46 = sub_22260D3AC((uint64_t)a7, v51, SHIDWORD(v51), 0);
            unsigned int v47 = sub_2225CA560(v45, v46);
            uint64_t v48 = (void **)sub_2225CAF14((uint64_t)v47, 58);
            int v49 = sub_22260CFC0((uint64_t)a7, v51, HIDWORD(v51), 0);
            uint64_t v50 = sub_2225CA560(v48, v49 + v38);
            sub_2225CAF14((uint64_t)v50, 125);
            char v34 = 1;
          }
        }
        v31 += 3;
      }
      while (v31 != v33);
      if (v34) {
        sub_2225CAF14(*(void *)(a1 + 40), 58);
      }
    }
  }
  return sub_2225CAF14(*(void *)(a1 + 40), 32);
}

uint64_t sub_2226BB16C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 57);
}

uint64_t sub_2226BB174(uint64_t a1)
{
  return *(_DWORD *)(a1 + 32) & 3;
}

void **sub_2226BB180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225C3C70(a1 + 16);
  int v6 = *(void ***)(a1 + 40);
  if ((*(unsigned char *)(v5 + 4) & 0x20) != 0)
  {
    unint64_t v8 = sub_2225CA524((uint64_t)v6, "In file included from ");
    uint64_t v9 = (char *)sub_2225C3C70(a3);
    uint64_t v10 = sub_2225CA524((uint64_t)v8, v9);
    uint64_t v11 = (void **)sub_2225CAF14((uint64_t)v10, 58);
    unsigned int v12 = sub_2225F56EC(a3);
    int v6 = sub_2225CA560(v11, v12);
    uint64_t v7 = ":\n";
  }
  else
  {
    uint64_t v7 = "In included file:\n";
  }

  return sub_2225CA524((uint64_t)v6, v7);
}

void **sub_2226BB224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_2225C3C70(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 40);
  if ((*(unsigned char *)(v9 + 4) & 0x20) != 0)
  {
    uint64_t v14 = sub_2225CA524(v10, "In module '");
    unsigned int v15 = sub_2225CA568((uint64_t)v14, a4, a5);
    uint64_t v16 = sub_2225CA524((uint64_t)v15, "' imported from ");
    uint64_t v17 = (char *)sub_2225C3C70(a3);
    uint64_t v18 = sub_2225CA524((uint64_t)v16, v17);
    int v19 = (void **)sub_2225CAF14((uint64_t)v18, 58);
    unsigned int v20 = sub_2225F56EC(a3);
    unsigned int v12 = sub_2225CA560(v19, v20);
    uint64_t v13 = ":\n";
  }
  else
  {
    uint64_t v11 = sub_2225CA524(v10, "In module ");
    unsigned int v12 = sub_2225CA568((uint64_t)v11, a4, a5);
    uint64_t v13 = "':\n";
  }

  return sub_2225CA524((uint64_t)v12, v13);
}

void **sub_2226BB308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 4) & 0x20) != 0 && sub_2225C3C70(a3))
  {
    uint64_t v9 = sub_2225CA524(*(void *)(a1 + 40), "While building module '");
    uint64_t v10 = sub_2225CA568((uint64_t)v9, a4, a5);
    uint64_t v11 = sub_2225CA524((uint64_t)v10, "' imported from ");
    unsigned int v12 = (char *)sub_2225C3C70(a3);
    uint64_t v13 = sub_2225CA524((uint64_t)v11, v12);
    uint64_t v14 = (void **)sub_2225CAF14((uint64_t)v13, 58);
    unsigned int v15 = sub_2225F56EC(a3);
    uint64_t v16 = sub_2225CA560(v14, v15);
    uint64_t v17 = ":\n";
  }
  else
  {
    uint64_t v18 = sub_2225CA524(*(void *)(a1 + 40), "While building module '");
    uint64_t v16 = sub_2225CA568((uint64_t)v18, a4, a5);
    uint64_t v17 = "':\n";
  }

  return sub_2225CA524((uint64_t)v16, v17);
}

void sub_2226BB3F8(uint64_t a1, int a2, int a3, void *a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  int v58 = a2;
  uint64_t v56 = a5;
  uint64_t v57 = a6;
  uint64_t v11 = a1 + 16;
  if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 4) & 0x40) != 0
    && (!sub_22260CBC4((unsigned int *)&v58, (unsigned int *)(a1 + 24))
     || !sub_2225CF1D0(a4)
     || !sub_2225CF1E0((uint64_t)&v56)
     || a3 != 1 && *(_DWORD *)(a1 + 32) == 1))
  {
    unint64_t v12 = sub_222609C14(a7, v58);
    unsigned __int8 v55 = 0;
    unsigned int v13 = v12;
    v52[0] = sub_22260C090((uint64_t)a7, v12, &v55);
    v52[1] = v14;
    uint64_t v15 = sub_2225C3C70((uint64_t)v52);
    if (!v55)
    {
      uint64_t v16 = v15;
      unint64_t v17 = HIDWORD(v12);
      unsigned int v18 = sub_22260D3AC((uint64_t)a7, v12, SHIDWORD(v12), 0);
      unsigned int v19 = sub_22260CFC0((uint64_t)a7, v13, v17, 0);
      if (v19 <= 0x1000)
      {
        unsigned int v20 = v19;
        char v21 = (unsigned __int8 *)(v16 + v17);
        uint64_t v22 = v16 + v17 - v19 + 1;
        for (unint64_t i = v19 - 1; ; ++i)
        {
          unsigned int v24 = *v21;
          BOOL v25 = v24 > 0xD;
          int v26 = (1 << v24) & 0x2401;
          if (!v25 && v26 != 0) {
            break;
          }
          ++v21;
        }
        if (i <= 0x1000)
        {
          sub_2225D1DD8(&v54, v22, v21);
          sub_2225D496C(&v53, i, 32);
          sub_2225CCBF8(v51, &v54);
          uint64_t v28 = sub_2225C3C70(v11);
          sub_2226BB8C4(v52, v51[0], v51[1], *(unsigned int *)(v28 + 24));
          int v29 = (unsigned int *)sub_2225C3C70((uint64_t)a4);
          uint64_t v30 = sub_2225C3D04((uint64_t)a4);
          if (v29 != (unsigned int *)v30)
          {
            long long v31 = (unsigned int *)v30;
            do
            {
              sub_2226BB8C8(v29, v18, v13, (uint64_t)v52, &v53, a7, *(void *)(a1 + 8));
              v29 += 3;
            }
            while (v29 != v31);
          }
          unsigned int v32 = sub_2226BBC1C((uint64_t)v52, v20 - 1);
          unint64_t v34 = sub_2225CB920((uint64_t)&v53, v33);
          std::string::size_type v35 = v32 + 1;
          if (v34 < v35) {
            std::string::resize(&v53, v35, 32);
          }
          *(unsigned char *)sub_2225CB8F8((uint64_t)&v53, v32) = 94;
          uint64_t v36 = v56;
          uint64_t v37 = v57;
          uint64_t v38 = sub_2225C3C70(v11);
          sub_2226BBC6C(v18, (uint64_t)v52, v36, v37, a7, v38, &v50);
          unsigned int v39 = *(_DWORD *)(sub_2225C3C70(v11) + 28);
          if (v39) {
            sub_2226BBE78(&v54, (uint64_t)&v53, &v50, v39, (uint64_t)v52);
          }
          if (*(unsigned char *)(sub_2225C3C70(v11) + 5))
          {
            sub_2226BC3F0(32, (uint64_t)&v54, (uint64_t)&v49);
            sub_2225CCDE4((uint64_t)&v54, (uint64_t)&v49);
            std::string::~string(&v49);
            sub_2226BC3F0(32, (uint64_t)&v53, (uint64_t)&v49);
            sub_2225CCDE4((uint64_t)&v53, (uint64_t)&v49);
            std::string::~string(&v49);
          }
          while (1)
          {
            uint64_t v41 = sub_2225CB920((uint64_t)&v53, v40);
            if (*(unsigned char *)sub_2225CB8F8((uint64_t)&v53, v41 - 1) != 32) {
              break;
            }
            uint64_t v47 = sub_2225CFCA0((uint64_t)&v53, v42);
            v49.__r_.__value_.__r.__words[0] = sub_222647C88(&v47, 1);
            sub_2225D24D0(&v48, &v49);
            sub_222647BBC(&v53, v48);
          }
          sub_2225CCBF8(v46, &v54);
          sub_2226BC4A8(a1, v46[0], v46[1]);
          if ((*(unsigned char *)(sub_2225C3C70(v11) + 5) & 0x80) != 0) {
            (*(void (**)(void, uint64_t, uint64_t, void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40), 2, 1, 0);
          }
          unsigned int v43 = sub_2225D47E4(*(void ***)(a1 + 40), (uint64_t)&v53);
          sub_2225CAF14((uint64_t)v43, 10);
          if ((*(unsigned char *)(sub_2225C3C70(v11) + 5) & 0x80) != 0) {
            (*(void (**)(void))(**(void **)(a1 + 40) + 24))(*(void *)(a1 + 40));
          }
          if (!sub_2225CBBF8((uint64_t)&v50, v44))
          {
            if ((*(unsigned char *)(sub_2225C3C70(v11) + 5) & 0x80) != 0) {
              (*(void (**)(void, uint64_t, void, void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40), 2, 0, 0);
            }
            if (*(unsigned char *)(sub_2225C3C70(v11) + 5)) {
              sub_2225CAF14(*(void *)(a1 + 40), 32);
            }
            uint64_t v45 = sub_2225D47E4(*(void ***)(a1 + 40), (uint64_t)&v50);
            sub_2225CAF14((uint64_t)v45, 10);
            if ((*(unsigned char *)(sub_2225C3C70(v11) + 5) & 0x80) != 0) {
              (*(void (**)(void))(**(void **)(a1 + 40) + 24))(*(void *)(a1 + 40));
            }
          }
          sub_2226BC6CC(a1, v56, v57, a7);
          std::string::~string(&v50);
          sub_2226BC984(v52);
          std::string::~string(&v53);
          std::string::~string(&v54);
        }
      }
    }
  }
}

uint64_t sub_2226BB8C8(unsigned int *a1, unsigned int a2, int a3, uint64_t a4, std::string *a5, _DWORD *a6, uint64_t a7)
{
  int v46 = a3;
  uint64_t result = sub_222622284(a1);
  if (result)
  {
    int v14 = sub_22261C6A4(a1);
    unsigned int v15 = sub_222613088(a1);
    uint64_t result = sub_22260D7B8(a6, v14, 0);
    if (result <= a2)
    {
      int v16 = result;
      LODWORD(v44) = sub_222609AF8(a6, v14);
      uint64_t result = sub_22260EC60(&v44, &v46);
      if ((result & 1) == 0)
      {
        uint64_t result = sub_22260D7B8(a6, v15, 0);
        if (result >= a2)
        {
          int v17 = result;
          LODWORD(v44) = sub_222609AF8(a6, v15);
          uint64_t result = sub_22260EC60(&v44, &v46);
          if ((result & 1) == 0)
          {
            if (v16 == a2)
            {
              int v18 = sub_22260D118(a6, v14, 0);
              if (v18) {
                unsigned int v19 = v18 - 1;
              }
              else {
                unsigned int v19 = 0;
              }
            }
            else
            {
              unsigned int v19 = 0;
            }
            uint64_t v44 = sub_2225FB730(a4);
            uint64_t v45 = v20;
            unsigned int v21 = sub_2225C3D04((uint64_t)&v44);
            if (v17 == a2)
            {
              int v22 = sub_22260D118(a6, v15, 0);
              if (v22)
              {
                unsigned int v24 = v22 - 1;
                if (sub_22261C7D4((uint64_t)a1)) {
                  v24 += sub_22261BB40(v15, a6, a7);
                }
              }
              else
              {
                unsigned int v24 = sub_2225CB920((uint64_t)a5, v23);
              }
            }
            else
            {
              unsigned int v24 = v21;
            }
            if (sub_22261C7D4((uint64_t)a1))
            {
              uint64_t v44 = sub_2225FB730(a4);
              uint64_t v45 = v25;
              if (sub_2225C3D04((uint64_t)&v44) > (unint64_t)v19)
              {
                uint64_t v26 = v19;
                do
                {
                  uint64_t v42 = sub_2225FB730(a4);
                  uint64_t v43 = v27;
                  if (sub_2225CC124(&v42, v26) != 32)
                  {
                    v41[0] = sub_2225FB730(a4);
                    v41[1] = v28;
                    if (sub_2225CC124(v41, v26) != 9) {
                      break;
                    }
                  }
                  unsigned int v19 = sub_2226BD384(a4, v19);
                  uint64_t v26 = v19;
                  uint64_t v44 = sub_2225FB730(a4);
                  uint64_t v45 = v29;
                }
                while (sub_2225C3D04((uint64_t)&v44) > (unint64_t)v19);
              }
              uint64_t v44 = sub_2225FB730(a4);
              uint64_t v45 = v30;
              if (sub_2225C3D04((uint64_t)&v44) < (unint64_t)v24)
              {
                uint64_t v44 = sub_2225FB730(a4);
                uint64_t v45 = v31;
                unsigned int v24 = sub_2225C3D04((uint64_t)&v44);
              }
              if (v24)
              {
                while (1)
                {
                  uint64_t v44 = sub_2225FB730(a4);
                  uint64_t v45 = v32;
                  if (sub_2225CC124(&v44, v24 - 1) != 32)
                  {
                    uint64_t v42 = sub_2225FB730(a4);
                    uint64_t v43 = v33;
                    if (sub_2225CC124(&v42, v24 - 1) != 9) {
                      break;
                    }
                  }
                  unsigned int v24 = sub_2226BD3C4(a4, v24);
                  if (!v24) {
                    goto LABEL_29;
                  }
                }
              }
              else
              {
LABEL_29:
                unsigned int v24 = 0;
              }
            }
            unsigned int v34 = sub_2226BBC1C(a4, v19);
            unsigned int v35 = sub_2226BBC1C(a4, v24);
            if (sub_2225CB920((uint64_t)a5, v36) < (unint64_t)v35) {
              std::string::resize(a5, v35, 32);
            }
            uint64_t v44 = sub_2225CFC64((uint64_t)a5, v37);
            uint64_t v38 = sub_2225D577C(&v44, v34);
            uint64_t v42 = sub_2225CFC64((uint64_t)a5, v39);
            uint64_t v40 = sub_2225D577C(&v42, v35);
            LOBYTE(v41[0]) = 126;
            return sub_2226BD404(v38, v40, v41);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2226BBC1C(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = a1 + 24;
  do
    int v4 = (_DWORD *)sub_2225F396C(v3, a2--);
  while (*v4 == -1);
  return *(unsigned int *)sub_2225F396C(v3, a2 + 1);
}

unsigned char *sub_2226BBC6C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X4>, uint64_t a6@<X5>, std::string *a7@<X8>)
{
  v40[0] = a3;
  v40[1] = a4;
  sub_2225CAD04(a7);
  uint64_t result = (unsigned char *)sub_2225CF1E0((uint64_t)v40);
  if ((result & 1) != 0 || (*(unsigned char *)(a6 + 4) & 0x80) == 0) {
    return result;
  }
  uint64_t v35 = a6;
  unint64_t v12 = (unsigned int *)sub_2225C3C70((uint64_t)v40);
  uint64_t v13 = sub_2225F4D54(v40);
  if (v12 == (unsigned int *)v13) {
    return sub_2226BD540(a7, *(unsigned int *)(v35 + 24));
  }
  unsigned int v15 = (unsigned int *)v13;
  unsigned int v16 = 0;
  while (sub_2225CBBF8((uint64_t)(v12 + 6), v14))
  {
LABEL_14:
    v12 += 14;
    if (v12 == v15) {
      return sub_2226BD540(a7, *(unsigned int *)(v35 + 24));
    }
  }
  int v17 = sub_22261C6A4(v12);
  unint64_t v18 = sub_22260ABEC(a5, v17);
  unint64_t v19 = HIDWORD(v18);
  unsigned int v20 = v18;
  if (sub_22260D3AC((uint64_t)a5, v18, SHIDWORD(v18), 0) == a1)
  {
    sub_2225CCBF8(v39, v12 + 6);
    sub_2225C3D00((int)v38, "\n\r");
    if (sub_2225D8790(v39, v38[0], v38[1], 0) == -1)
    {
      int v22 = sub_22260CFC0((uint64_t)a5, v20, v19, 0);
      unsigned int v23 = sub_2226BBC1C(a2, v22 - 1);
      if (v23 < v16) {
        unsigned int v25 = v16 + 1;
      }
      else {
        unsigned int v25 = v23;
      }
      int v26 = sub_2225CB920((uint64_t)a7, v24);
      std::string::size_type v28 = v25 - v16 + sub_2225CB920((uint64_t)(v12 + 6), v27) + v26;
      if (sub_2225CB920((uint64_t)a7, v29) < v28) {
        std::string::resize(a7, v28, 32);
      }
      sub_2225CFC64((uint64_t)(v12 + 6), v30);
      sub_2225CFCA0((uint64_t)(v12 + 6), v31);
      v39[0] = sub_2225CFCA0((uint64_t)a7, v32);
      uint64_t v34 = sub_2225CB920((uint64_t)(v12 + 6), v33);
      sub_222647C88(v39, v34);
      sub_2226BD524();
      sub_2225CCBF8(v37, v12 + 6);
      unsigned int v16 = sub_2225CD180(v37[0], v37[1]) + v25;
      goto LABEL_14;
    }
  }
  sub_2225CB97C((uint64_t)a7, v21);
  return sub_2226BD540(a7, *(unsigned int *)(v35 + 24));
}

uint64_t sub_2226BBE78(std::string *a1, uint64_t a2, std::string *a3, unsigned int a4, uint64_t a5)
{
  unsigned int v76 = sub_2226BD6D0(a5);
  v72.__r_.__value_.__r.__words[0] = sub_2225CB920(a2, v10);
  std::string::size_type __n1 = sub_2225CB920((uint64_t)a3, v11);
  int v75 = *(void *)sub_2225CBA14(&v72, &__n1);
  uint64_t result = sub_2225C7858(&v76, &v75);
  if (*(_DWORD *)result <= a4) {
    return result;
  }
  LODWORD(__n1) = 0;
  unsigned int v76 = sub_2225CB920(a2, v13);
  unsigned int v15 = __n1;
  if (__n1 != v76)
  {
    while (1)
    {
      unsigned int v16 = (unsigned __int8 *)sub_2225CB8F8(a2, v15);
      BOOL v17 = sub_22261BCEC(*v16);
      unsigned int v18 = v76;
      int v19 = __n1;
      if (!v17) {
        break;
      }
      unsigned int v15 = __n1 + 1;
      LODWORD(__n1) = v15;
      if (v15 == v76) {
        goto LABEL_9;
      }
    }
    while (v18 != v19)
    {
      unsigned int v20 = (unsigned __int8 *)sub_2225CB8F8(a2, v18 - 1);
      if (!sub_22261BCEC(*v20)) {
        break;
      }
      unsigned int v18 = --v76;
      int v19 = __n1;
    }
  }
LABEL_9:
  char v69 = (std::string *)a2;
  if (!sub_2225CBBF8((uint64_t)a3, v14))
  {
    unsigned int v23 = sub_2225CB920((uint64_t)a3, v21);
    LODWORD(v24) = v23;
    if (v23)
    {
      uint64_t v25 = 0;
      uint64_t v26 = v23;
      do
      {
        uint64_t v27 = (unsigned __int8 *)sub_2225CB8F8((uint64_t)a3, v25);
        if (!sub_22261BCEC(*v27)) {
          goto LABEL_17;
        }
        ++v25;
      }
      while (v26 != v25);
      LODWORD(v25) = v24;
    }
    else
    {
      LODWORD(v25) = 0;
    }
LABEL_17:
    while (v25 != v24)
    {
      uint64_t v24 = (v24 - 1);
      std::string::size_type v28 = (unsigned __int8 *)sub_2225CB8F8((uint64_t)a3, v24);
      if (!sub_22261BCEC(*v28))
      {
        unsigned int v29 = v24 + 1;
LABEL_21:
        int v75 = v25;
        sub_222644EDC((uint64_t)a3, 0, v29, (uint64_t)&v72);
        sub_2225CCBF8(v73, &v72);
        int v30 = sub_2225CD180(v73[0], v73[1]);
        std::string::~string(&v72);
        LODWORD(v72.__r_.__value_.__l.__data_) = v30;
        LODWORD(__n1) = *(_DWORD *)sub_2225C2A9C(&v75, &__n1);
        int i = *(_DWORD *)sub_2225C7858(&v72, &v76);
        goto LABEL_22;
      }
    }
    unsigned int v29 = v25;
    goto LABEL_21;
  }
  for (int i = v76; i < (int)sub_2226BD6D0(a5) && sub_2226BD6F0(a5, v76) == -1; v76 = i)
  {
    int i = v76 + 1;
LABEL_22:
    ;
  }
  LODWORD(v72.__r_.__value_.__l.__data_) = sub_2226BD6D0(a5);
  uint64_t v31 = (unsigned int *)sub_2225C2A9C(&__n1, &v72);
  unsigned int v32 = sub_2226BD6F0(a5, *v31);
  LODWORD(v72.__r_.__value_.__l.__data_) = sub_2226BD6D0(a5);
  uint64_t v33 = (unsigned int *)sub_2225C2A9C(&v76, &v72);
  unsigned int v34 = sub_2226BD6F0(a5, *v33);
  int v35 = v76 - __n1;
  int v36 = sub_2226BD408(a5, v34);
  int v70 = sub_2226BD408(a5, v32) - v36 + v35;
  unsigned int v71 = a4;
  int v38 = v70 + 8;
  if (v70 + 8 >= a4) {
    int v38 = 0;
  }
  unsigned int v39 = a4 - v38;
  while (1)
  {
    while (v32)
    {
      uint64_t v40 = a5;
      for (int j = v32; ; int j = v43)
      {
        unsigned int v42 = sub_2226BD3C4(v40, j);
        unsigned int v43 = v42;
        if (!v42) {
          break;
        }
        uint64_t v44 = (unsigned __int8 *)sub_2225CB8F8((uint64_t)a1, v42);
        if (!sub_22261BCEC(*v44)) {
          break;
        }
        uint64_t v40 = a5;
      }
      do
      {
        unsigned int v45 = v43;
        if (!v43) {
          break;
        }
        unsigned int v43 = sub_2226BD3C4(a5, v43);
        int v46 = (unsigned __int8 *)sub_2225CB8F8((uint64_t)a1, v43);
      }
      while (!sub_22261BCEC(*v46));
      int v47 = sub_2226BD408(a5, v34);
      unsigned int v49 = v47 - sub_2226BD408(a5, v45);
      BOOL v50 = v49 <= v39;
      if (v49 <= v39) {
        unsigned int v32 = v45;
      }
      if (sub_2225CB920((uint64_t)a1, v48) > (unint64_t)v34) {
        goto LABEL_43;
      }
      if (v49 > v39) {
        goto LABEL_58;
      }
    }
    if (sub_2225CB920((uint64_t)a1, v37) <= (unint64_t)v34)
    {
      unsigned int v32 = 0;
      goto LABEL_58;
    }
    BOOL v50 = 0;
    unsigned int v32 = 0;
    if (sub_2225CB920((uint64_t)a1, v51) <= (unint64_t)v34) {
      break;
    }
LABEL_43:
    uint64_t v52 = a5;
    for (int k = v34; ; int k = v54)
    {
      unsigned int v54 = sub_2226BD384(v52, k);
      unint64_t v55 = v54;
      if (sub_2225CB920((uint64_t)a1, v56) <= (unint64_t)v54) {
        break;
      }
      int v58 = (unsigned __int8 *)sub_2225CB8F8((uint64_t)a1, v54);
      if (!sub_22261BCEC(*v58))
      {
        unint64_t v55 = v54;
        break;
      }
      uint64_t v52 = a5;
    }
    if (sub_2225CB920((uint64_t)a1, v57) > v55)
    {
      do
      {
        uint64_t v59 = (unsigned __int8 *)sub_2225CB8F8((uint64_t)a1, v55);
        if (!sub_22261BCEC(*v59)) {
          break;
        }
        unsigned int v54 = sub_2226BD384(a5, v54);
        unint64_t v55 = v54;
      }
      while (sub_2225CB920((uint64_t)a1, v60) > (unint64_t)v54);
    }
    int v61 = sub_2226BD408(a5, v54);
    if (v61 - sub_2226BD408(a5, v32) > v39)
    {
      char v62 = v50;
    }
    else
    {
      unsigned int v34 = v54;
      char v62 = 1;
    }
    if ((v62 & 1) == 0) {
      goto LABEL_58;
    }
  }
  unsigned int v32 = 0;
LABEL_58:
  LODWORD(__n1) = sub_2226BD408(a5, v32);
  unsigned int v76 = sub_2226BD408(a5, v34) + v70;
  unsigned int v64 = sub_2225CB920((uint64_t)a1, v63);
  int v65 = sub_2226BD408(a5, v64);
  uint64_t result = sub_2226BD408(a5, v34);
  unsigned int v66 = __n1;
  unsigned int v67 = v76;
  if ((v65 - result) >= 4) {
    uint64_t result = (uint64_t)std::string::replace(a1, v34, 0xFFFFFFFFFFFFFFFFLL, "...");
  }
  if (v67 > v71 && v66 >= 6)
  {
    std::string::replace(a1, 0, v32, "  ...");
    std::string::replace(v69, 0, __n1, "     ");
    uint64_t result = sub_2225CBBF8((uint64_t)a3, v68);
    if ((result & 1) == 0) {
      return (uint64_t)std::string::replace(a3, 0, __n1, "     ");
    }
  }
  return result;
}

unsigned char *sub_2226BC3F0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_2225CB920(a2, a2);
  j_j_j_nullsub_1(a2);
  nullsub_1(&v14, v7);
  sub_2225D179C(a3, v6 + 1, &v15);
  uint64_t v9 = sub_2225CBA9C(a3, v8);
  uint64_t v11 = (unsigned char *)nullsub_1(v9, v10);
  sub_2225D17A0(v11, 1, a1);
  sub_2225CBED4(a2, v12);
  sub_2225D15B4((uint64_t)(v11 + 1));
  return sub_2225D17A0(&v11[v6 + 1], 1, 0);
}

void sub_2226BC4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  if (!sub_2225CF1E0((uint64_t)&v21))
  {
    unint64_t v20 = 0;
    sub_2225CAD04(&v19);
    if (!sub_2225C3D04((uint64_t)&v21)) {
      goto LABEL_14;
    }
    BOOL v4 = 0;
    uint64_t v5 = (void ***)(a1 + 40);
    do
    {
      uint64_t v6 = v21;
      uint64_t v7 = v22;
      uint64_t v8 = sub_2225C3C70(a1 + 16);
      sub_2226BC988(v6, v7, (uint64_t *)&v20, *(_DWORD *)(v8 + 24), (uint64_t)v17);
      int v9 = v18;
      BOOL v10 = v18 == 0;
      int v11 = *(_DWORD *)(sub_2225C3C70(a1 + 16) + 4) & 0x8000;
      if (v9 == v4 && v11 != 0)
      {
        if (v4) {
          (*((void (**)(void))**v5 + 4))();
        }
        sub_2225D47E4(*v5, (uint64_t)&v19);
        sub_2225CB97C((uint64_t)&v19, v13);
        if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 5) & 0x80) != 0) {
          (*((void (**)(void))**v5 + 3))();
        }
      }
      uint64_t v14 = sub_2225CA4D0((uint64_t)v17);
      sub_2225CCA6C(&v19, v14, v15);
      sub_2226BCC38(v17);
      unint64_t v16 = v20;
      BOOL v4 = v10;
    }
    while (v16 < sub_2225C3D04((uint64_t)&v21));
    if (!v9)
    {
      if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 5) & 0x80) != 0) {
        (*((void (**)(void))**v5 + 4))();
      }
      sub_2225D47E4(*v5, (uint64_t)&v19);
      if ((*(unsigned char *)(sub_2225C3C70(a1 + 16) + 5) & 0x80) != 0) {
        (*((void (**)(void))**v5 + 3))();
      }
    }
    else
    {
LABEL_14:
      sub_2225D47E4(*(void ***)(a1 + 40), (uint64_t)&v19);
      uint64_t v5 = (void ***)(a1 + 40);
    }
    sub_2225CAF14((uint64_t)*v5, 10);
    std::string::~string(&v19);
  }
}

uint64_t sub_2226BC6CC(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  v38[0] = a2;
  v38[1] = a3;
  uint64_t result = sub_2225C3C70(a1 + 16);
  if ((*(unsigned char *)(result + 5) & 2) != 0)
  {
    uint64_t v7 = (unsigned int *)sub_2225C3C70((uint64_t)v38);
    uint64_t v8 = sub_2225F4D54(v38);
    if (v7 == (unsigned int *)v8)
    {
LABEL_9:
      BOOL v10 = (unsigned int *)sub_2225C3C70((uint64_t)v38);
      uint64_t result = sub_2225F4D54(v38);
      if (v10 != (unsigned int *)result)
      {
        int v11 = (unsigned int *)result;
        do
        {
          int v12 = sub_22261C6A4(v10);
          unsigned int v13 = sub_222613088(v10);
          int v14 = v12;
          uint64_t v15 = sub_222609C14(a4, v12);
          unint64_t v16 = sub_222609C14(a4, v13);
          unsigned int v17 = v16;
          unint64_t v18 = HIDWORD(v16);
          if (sub_22261C7D4((uint64_t)v10)) {
            LODWORD(v18) = sub_22261BB40(v13, a4, *(void *)(a1 + 8)) + v18;
          }
          sub_22260D198((uint64_t)a4, v14, 1, (uint64_t)v36);
          uint64_t result = sub_222609A70(v36);
          if (result) {
            break;
          }
          sub_2225CA524(*(void *)(a1 + 40), "fix-it:\"");
          uint64_t v19 = *(void *)(a1 + 40);
          unint64_t v20 = (char *)sub_2225C3C70((uint64_t)v36);
          sub_2225C3D00((int)v35, v20);
          sub_2225E7F44(v19, v35[0], v35[1], 0);
          uint64_t v21 = sub_2225CA524(*(void *)(a1 + 40), "\":{");
          unsigned int v22 = sub_22260D3AC((uint64_t)a4, v15, SHIDWORD(v15), 0);
          unsigned int v23 = sub_2225CA560(v21, v22);
          uint64_t v24 = (void **)sub_2225CAF14((uint64_t)v23, 58);
          unsigned int v25 = sub_22260CFC0((uint64_t)a4, v15, HIDWORD(v15), 0);
          uint64_t v26 = sub_2225CA560(v24, v25);
          uint64_t v27 = (void **)sub_2225CAF14((uint64_t)v26, 45);
          unsigned int v28 = sub_22260D3AC((uint64_t)a4, v17, v18, 0);
          unsigned int v29 = sub_2225CA560(v27, v28);
          int v30 = (void **)sub_2225CAF14((uint64_t)v29, 58);
          unsigned int v31 = sub_22260CFC0((uint64_t)a4, v17, v18, 0);
          unsigned int v32 = sub_2225CA560(v30, v31);
          sub_2225CA524((uint64_t)v32, "}:\"");
          uint64_t v33 = *(void *)(a1 + 40);
          sub_2225CCBF8(v34, v10 + 6);
          sub_2225E7F44(v33, v34[0], v34[1], 0);
          uint64_t result = (uint64_t)sub_2225CA524(*(void *)(a1 + 40), "\"\n");
          v10 += 14;
        }
        while (v10 != v11);
      }
    }
    else
    {
      int v9 = (unsigned int *)v8;
      while (1)
      {
        uint64_t result = sub_22261C8F4();
        if (result) {
          break;
        }
        LODWORD(v36[0]) = sub_22261C6A4(v7);
        uint64_t result = sub_2226074FC(v36);
        if (result) {
          break;
        }
        int v37 = sub_222613088(v7);
        uint64_t result = sub_2226074FC(&v37);
        if (result) {
          break;
        }
        v7 += 14;
        if (v7 == v9) {
          goto LABEL_9;
        }
      }
    }
  }
  return result;
}

uint64_t sub_2226BC988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  if (sub_2225CC124(&v29, *a3) == 9)
  {
    unsigned int v8 = sub_2226BD754(v29, v30, *a3);
    unsigned int v9 = a4 + v8 / a4 * a4 - v8;
    ++*a3;
    sub_2226237BC(v28);
    sub_2226BCC54(v28, v9, 32);
    LOBYTE(v27) = 1;
    BOOL v10 = (char *)&v27;
LABEL_12:
    sub_2226BD7C8((uint64_t)v28, (uint64_t)v10, a5);
    return sub_2225CA520(v28);
  }
  int v11 = (unsigned __int8 *)(sub_2225C3C70((uint64_t)&v29) + *a3);
  uint64_t v27 = v11;
  uint64_t v12 = sub_2225C3D04((uint64_t)&v29);
  if (!sub_2225CB08C(v11, (uint64_t)&v11[v12 - *a3]))
  {
    sub_2225C3D00((int)v22, "<XX>");
    sub_2226BD7D8(v28, v22[0], v22[1]);
    unsigned __int8 v15 = sub_2225CC124(&v29, *a3);
    char v16 = sub_2225E80F4(v15 >> 4);
    *(unsigned char *)sub_2225C5698((uint64_t)v28, 1u) = v16;
    char v17 = sub_2225E80F4(v15 & 0xF);
    *(unsigned char *)sub_2225C5698((uint64_t)v28, 2u) = v17;
    ++*a3;
    LOBYTE(v25) = 0;
    BOOL v10 = (char *)&v25;
    goto LABEL_12;
  }
  unsigned int v26 = 0;
  unsigned int v25 = &v26;
  unsigned __int8 v13 = sub_2225CC124(&v29, *a3);
  int v14 = &v11[sub_2225CB1B4(v13)];
  sub_2225CB608(&v27, v14, &v25, (unint64_t)&v27, 0);
  *a3 += v27 - v11;
  if ((sub_2225CD184(v26) & 1) == 0)
  {
    sub_2225C3D00((int)v24, "<U+>");
    sub_2226BD7D8(v28, v24[0], v24[1]);
    if (v26)
    {
      do
      {
        unint64_t v18 = (unsigned char *)(sub_2225C3C70((uint64_t)v28) + 3);
        char v23 = sub_2225E80F4(v26 & 0xF);
        sub_22261B5B0((uint64_t)v28, v18, &v23);
        unsigned int v19 = v26;
        v26 >>= 4;
      }
      while (v19 >= 0x10);
    }
    if ((unint64_t)sub_2225C5664((uint64_t)v28) <= 7)
    {
      do
      {
        unint64_t v20 = (unsigned char *)(sub_2225C3C70((uint64_t)v28) + 3);
        char v23 = sub_2225E80F4(0);
        sub_22261B5B0((uint64_t)v28, v20, &v23);
      }
      while ((unint64_t)sub_2225C5664((uint64_t)v28) < 8);
    }
    char v23 = 0;
    BOOL v10 = &v23;
    goto LABEL_12;
  }
  sub_2226BD7EC(v28, v11, v14);
  char v23 = 1;
  sub_2226BD7DC((uint64_t)v28, (uint64_t)&v23, a5);
  return sub_2225CA520(v28);
}

void sub_2226BCC3C(uint64_t a1, int a2, int a3, void *a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
}

uint64_t sub_2226BCC44(uint64_t a1)
{
  return *(void *)(a1 + 24) - *(void *)(a1 + 8);
}

uint64_t sub_2226BCC54(const void **a1, unsigned int a2, char a3)
{
  char v4 = a3;
  return sub_2226BCEB4(a1, a2, (uint64_t)&v4);
}

uint64_t sub_2226BCC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1;
  v8[0] = a2;
  v8[1] = a3;
  if (a1 < a4)
  {
    uint64_t v4 = a1;
    while (1)
    {
      unsigned __int8 v6 = sub_2225CC124(v8, v4);
      if (!sub_22261BCEC(v6)) {
        break;
      }
      if (a4 == ++v4) {
        return a4;
      }
    }
  }
  return v4;
}

uint64_t sub_2226BCCE4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v10 = a1 + 1;
  if (sub_2225C3D04((uint64_t)&v24) != v10)
  {
    int v11 = sub_2225CC124(&v24, a1);
    int v12 = sub_2226BCF70(v11);
    char v23 = v12;
    if (v12)
    {
      sub_2226237BC(v22);
      sub_2225C52D8((uint64_t)v22, &v23);
      uint64_t v13 = v10;
      if (v10 < a4)
      {
        uint64_t v13 = v10;
        while (!sub_2225CF1D0(v22))
        {
          unsigned __int8 v14 = sub_2225CC124(&v24, v13);
          if (*(unsigned __int8 *)sub_22261791C((uint64_t)v22) == v14)
          {
            sub_2225CF758((uint64_t)v22);
          }
          else
          {
            char v21 = 0;
            int v15 = sub_2225CC124(&v24, v13);
            int v16 = sub_2226BCF70(v15);
            char v21 = v16;
            if (v16) {
              sub_2225C52D8((uint64_t)v22, &v21);
            }
          }
          if (a4 == ++v13)
          {
LABEL_16:
            uint64_t v13 = a4;
            goto LABEL_21;
          }
        }
      }
      if (v13 < a4)
      {
        uint64_t v13 = v13;
        while (1)
        {
          unsigned __int8 v17 = sub_2225CC124(&v24, v13);
          if (sub_22261BCEC(v17)) {
            break;
          }
          if (a4 == ++v13) {
            goto LABEL_16;
          }
        }
      }
LABEL_21:
      if (v13 - a1 >= a6 / 3 && v13 - a1 + a5 > a6) {
        uint64_t v13 = sub_2226BCCE4(v10, v24, v25, a4, (a5 + 1), a6);
      }
      sub_2225CA520(v22);
      return v13;
    }
    else if (v10 < a4)
    {
      while (1)
      {
        unsigned __int8 v18 = sub_2225CC124(&v24, v10);
        if (sub_22261BCEC(v18)) {
          break;
        }
        if (a4 == ++v10) {
          return a4;
        }
      }
    }
  }
  return v10;
}

uint64_t sub_2226BCEB4(const void **a1, unsigned int a2, uint64_t a3)
{
  sub_2225C5D90(a1);
  if (sub_2225CE28C((uint64_t)a1) < (unint64_t)a2) {
    sub_2225C5B48(a1, a2);
  }
  uint64_t v6 = sub_2225C3C70((uint64_t)a1);
  sub_2225C5B6C((uint64_t)a1, v6 + a2);
  uint64_t v7 = sub_2225C3C70((uint64_t)a1);
  uint64_t v8 = sub_2225C3D04((uint64_t)a1);

  return sub_2226BCF4C(v7, v8, a3);
}

unsigned char *sub_2226BCF50(unsigned char *result, unsigned char *a2, unsigned char *a3)
{
  if (result != a2)
  {
    do
      *result++ = *a3;
    while (result != a2);
    return a2;
  }
  return result;
}

uint64_t sub_2226BCF70(int a1)
{
  uint64_t result = 39;
  if (a1 > 90)
  {
    switch(a1)
    {
      case '[':
        return 93;
        return result;
      case '{':
        return 125;
    }
  }
  else
  {
    switch(a1)
    {
      case '""':
        return 34;
      case '\'':
        return result;
      case '(':
        return 41;
    }
  }
  return 0;
}

uint64_t sub_2226BCFD8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7 = a2;
  uint64_t v8 = a3;
  sub_2225CA51C(&v7, a1);
  sub_2226BD058(a1 + 24);
  sub_2226BD058(a1 + 848);
  sub_2226BD05C(v7, v8, a4, (const void **)(a1 + 24));
  sub_2226BD15C(v7, v8, a4, (const void **)(a1 + 848));
  return a1;
}

_DWORD *sub_2226BD05C(uint64_t a1, uint64_t a2, unsigned int a3, const void **a4)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  sub_2225C5D90(a4);
  if (sub_2225CF1E0((uint64_t)&v14))
  {
    v12[0] = 0;
    return (_DWORD *)sub_2226BD27C(a4, 1u, (uint64_t)v12);
  }
  else
  {
    int v7 = sub_2225C3D04((uint64_t)&v14);
    v12[0] = -1;
    sub_2226BD27C(a4, v7 + 1, (uint64_t)v12);
    unint64_t v13 = 0;
    if (sub_2225C3D04((uint64_t)&v14))
    {
      LODWORD(v8) = 0;
      int v9 = 0;
      do
      {
        *(_DWORD *)sub_2225F396C((uint64_t)a4, v8) = v9;
        sub_2226BC988(v14, v15, (uint64_t *)&v13, a3, (uint64_t)v12);
        uint64_t v10 = sub_2225CE27C((uint64_t)v12);
        v9 += sub_2225CD180(v10, v11);
        sub_2226BCC38(v12);
        unint64_t v8 = v13;
      }
      while (v8 < sub_2225C3D04((uint64_t)&v14));
    }
    else
    {
      int v9 = 0;
    }
    uint64_t result = (_DWORD *)sub_2225E254C((uint64_t)a4);
    *uint64_t result = v9;
  }
  return result;
}

_DWORD *sub_2226BD15C(uint64_t a1, uint64_t a2, unsigned int a3, const void **a4)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  sub_2225C5D90(a4);
  if (sub_2225CF1E0((uint64_t)&v14))
  {
    v12[0] = 0;
    return (_DWORD *)sub_2226BD27C(a4, 1u, (uint64_t)v12);
  }
  else
  {
    unint64_t v13 = 0;
    if (sub_2225C3D04((uint64_t)&v14))
    {
      LODWORD(v7) = 0;
      int v8 = 0;
      do
      {
        v12[0] = -1;
        sub_2226BD27C(a4, v8 + 1, (uint64_t)v12);
        *(_DWORD *)sub_2225E254C((uint64_t)a4) = v7;
        sub_2226BC988(v14, v15, (uint64_t *)&v13, a3, (uint64_t)v12);
        uint64_t v9 = sub_2225CE27C((uint64_t)v12);
        v8 += sub_2225CD180(v9, v10);
        sub_2226BCC38(v12);
        unint64_t v7 = v13;
      }
      while (v7 < sub_2225C3D04((uint64_t)&v14));
      unsigned int v11 = v8 + 1;
    }
    else
    {
      LODWORD(v7) = 0;
      unsigned int v11 = 1;
    }
    v12[0] = -1;
    sub_2226BD27C(a4, v11, (uint64_t)v12);
    uint64_t result = (_DWORD *)sub_2225E254C((uint64_t)a4);
    *uint64_t result = v7;
  }
  return result;
}

uint64_t sub_2226BD274(uint64_t a1)
{
  return sub_2225CC380(a1, 0xC8u);
}

unint64_t sub_2226BD27C(const void **a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = a2;
  if (sub_2225CC184((uint64_t)a1) <= (unint64_t)a2)
  {
    unint64_t result = sub_2225CC184((uint64_t)a1);
    if (result >= v5) {
      return result;
    }
    if (sub_222625AEC((uint64_t)a1) < v5) {
      sub_2225CC474(a1, v5);
    }
    uint64_t v9 = sub_2225C3D04((uint64_t)a1);
    uint64_t v10 = sub_2225C3C70((uint64_t)a1);
    sub_2226BD360(v9, v10 + 4 * v5, a3);
  }
  else
  {
    uint64_t v6 = sub_2225C3C70((uint64_t)a1) + 4 * v5;
    uint64_t v7 = sub_2225C3D04((uint64_t)a1);
    nullsub_1(v6, v7);
  }
  uint64_t v11 = sub_2225C3C70((uint64_t)a1) + 4 * v5;

  return sub_2225C5B6C((uint64_t)a1, v11);
}

_DWORD *sub_2226BD364(_DWORD *result, _DWORD *a2, _DWORD *a3)
{
  if (result != a2)
  {
    do
      *result++ = *a3;
    while (result != a2);
    return a2;
  }
  return result;
}

uint64_t sub_2226BD384(uint64_t a1, int a2)
{
  LODWORD(v2) = a2;
  do
    uint64_t v2 = (v2 + 1);
  while (sub_2226BD408(a1, v2) == -1);
  return v2;
}

uint64_t sub_2226BD3C4(uint64_t a1, int a2)
{
  LODWORD(v2) = a2;
  do
    uint64_t v2 = (v2 - 1);
  while (sub_2226BD408(a1, v2) == -1);
  return v2;
}

uint64_t sub_2226BD408(uint64_t a1, unsigned int a2)
{
  return *(unsigned int *)sub_2225F396C(a1 + 24, a2);
}

uint64_t sub_2226BD428(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v7 = a2;
  uint64_t v8 = a1;
  uint64_t v5 = sub_2225D0D24((uint64_t)&v7, (uint64_t)&v8);
  return sub_2226BD474(a1, v5, a3);
}

uint64_t sub_2226BD474(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = nullsub_1(a2, a2);
  uint64_t result = a1;

  sub_2226BD4BC(a1, v5, a3);
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2226BD4BC(uint64_t a1, uint64_t a2, char *a3)
{
  if (a2 >= 1)
  {
    unint64_t v4 = a2 + 1;
    do
    {
      char v5 = *a3;
      *(unsigned char *)sub_2225C3C70((uint64_t)&v6) = v5;
      sub_2225D0E0C(&v6);
      --v4;
    }
    while (v4 > 1);
  }
}

uint64_t sub_2226BD524()
{
  sub_2226BD5EC();
  return v0;
}

unsigned char *sub_2226BD540(std::string *a1, uint64_t a2)
{
  unsigned int v2 = a2;
  uint64_t result = (unsigned char *)sub_2225CB920((uint64_t)a1, a2);
  if (result)
  {
    uint64_t v5 = (uint64_t)(result - 1);
    do
    {
      uint64_t result = (unsigned char *)sub_2225CB8F8((uint64_t)a1, v5);
      if (*result == 9)
      {
        uint64_t v9 = v5;
        sub_2225CCBF8(v7, a1);
        sub_2226BC988(v7[0], v7[1], &v9, v2, (uint64_t)v8);
        uint64_t v6 = (const std::string::value_type *)sub_2225D02D4((uint64_t)v8);
        std::string::replace(a1, v5, 1uLL, v6);
        uint64_t result = (unsigned char *)sub_2226BCC38(v8);
      }
      --v5;
    }
    while (v5 != -1);
  }
  return result;
}

uint64_t sub_2226BD5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (const void *)sub_2226BD684(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (char *)sub_2225D5844(a3);
  uint64_t v9 = sub_2225C5ED8((int)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2226BD6CC(a1, v9);
  uint64_t v13 = sub_2225D5848(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2226BD684(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2225D5844(a1);
  uint64_t v4 = sub_2225D5844(a2);
  return sub_2225C5EEC((uint64_t)&v5, (uint64_t)&v4);
}

uint64_t sub_2226BD6D0(uint64_t a1)
{
  return *(unsigned int *)sub_2225E254C(a1 + 24);
}

uint64_t sub_2226BD6F0(uint64_t a1, unsigned int a2)
{
  return *(unsigned int *)sub_2225F396C(a1 + 848, a2);
}

void sub_2226BD710(std::string *a1)
{
  sub_2225C56C4(&a1[35].__r_.__value_.__r.__words[1]);
  sub_2225C56C4(&a1[1]);

  std::string::~string(a1);
}

uint64_t sub_2226BD754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a1;
  v7[1] = a2;
  if (!a3) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a3 - 1;
  while (sub_2225CC124(v7, v5) != 9)
  {
    uint64_t v4 = (v4 + 1);
    if (--v5 == -1) {
      return a3;
    }
  }
  return v4;
}

uint64_t sub_2226BD7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226BD7F0(a3, a1, a2);
}

uint64_t sub_2226BD7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226BD908(a3, a1, a2);
}

uint64_t sub_2226BD7F4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t result = sub_2226BD820();
  *(unsigned char *)(result + 40) = *a3;
  return result;
}

const void **sub_2226BD828(const void **a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2225D0648(a1, (uint64_t)a2);
  }
  return a1;
}

uint64_t sub_2226BD870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v4 = (char *)sub_2225C3C70((uint64_t)v7);
  uint64_t v5 = (char *)sub_2225C3C78(v7);
  return sub_2226BD8C0(a1, v4, v5);
}

uint64_t sub_2226BD8C0(uint64_t a1, char *a2, char *a3)
{
  uint64_t v6 = (const void **)sub_2225C69CC();
  sub_2225C5A88(v6, a2, a3);
  return a1;
}

uint64_t sub_2226BD90C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t result = sub_2226BD938();
  *(unsigned char *)(result + 40) = *a3;
  return result;
}

uint64_t sub_2226BD940(uint64_t a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226BD988(a1, a2);
  }
  return a1;
}

uint64_t sub_2226BD988(uint64_t a1, void *a2)
{
  if ((void *)a1 != a2)
  {
    if (sub_2225C603C(a2))
    {
      unint64_t v4 = sub_2225C5664((uint64_t)a2);
      unint64_t v5 = sub_2225C5664(a1);
      if (v5 >= v4)
      {
        uint64_t v13 = sub_2225C3C70(a1);
        if (v4)
        {
          sub_2225C3C70((uint64_t)a2);
          sub_2225C3D04((uint64_t)a2);
          uint64_t v13 = sub_2225C5DD4();
        }
        uint64_t v14 = sub_2225C3D04(a1);
        nullsub_1(v13, v14);
        uint64_t v15 = a1;
        uint64_t v16 = v13;
      }
      else
      {
        unint64_t v6 = v5;
        if (sub_2225CE28C(a1) >= v4)
        {
          if (v6)
          {
            sub_2225C3C70((uint64_t)a2);
            sub_2225C3C70((uint64_t)a2);
            sub_2225C3C70(a1);
            sub_2225C5DD4();
          }
        }
        else
        {
          uint64_t v7 = sub_2225C3C70(a1);
          uint64_t v8 = sub_2225C3D04(a1);
          nullsub_1(v7, v8);
          uint64_t v9 = sub_2225C3C70(a1);
          sub_2225C5B6C(a1, v9);
          sub_2225C5B48((const void **)a1, v4);
          unint64_t v6 = 0;
        }
        unsigned __int8 v17 = (void *)(sub_2225C3C70((uint64_t)a2) + v6);
        int v18 = sub_2225C3D04((uint64_t)a2);
        uint64_t v19 = sub_2225C3C70(a1);
        sub_2225E2BB8(v17, v18, (void *)(v19 + v6));
        uint64_t v16 = sub_2225C3C70(a1) + v4;
        uint64_t v15 = a1;
      }
      sub_2225C5B6C(v15, v16);
      sub_2225C5D90(a2);
    }
    else
    {
      uint64_t v10 = sub_2225C3C70(a1);
      uint64_t v11 = sub_2225C3D04(a1);
      nullsub_1(v10, v11);
      if (!sub_2225C603C((void *)a1))
      {
        int v12 = (void *)sub_2225C3C70(a1);
        free(v12);
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = a2[2];
      sub_22263161C(a2);
    }
  }
  return a1;
}

uint64_t sub_2226BDB80(uint64_t *a1, int a2, void *a3)
{
  sub_2225F3C38(a1, a2);
  sub_2226B9478(v13);
  sub_2225F3CB0(a3, v13);
  switch(a2)
  {
    case 2:
      unint64_t v6 = a1 + 8;
      break;
    case 3:
      unint64_t v6 = a1 + 5;
      break;
    case 4:
    case 5:
      unint64_t v6 = a1 + 2;
      break;
    default:
      unint64_t v6 = a1 + 11;
      break;
  }
  uint64_t v7 = sub_2225F3BDC(a3);
  v10[0] = sub_2225CA4D0((uint64_t)v13);
  v10[1] = v8;
  sub_2226BDCD0(v7, (uint64_t)v10, (uint64_t)v11);
  sub_2226BDCE0(v12, (uint64_t)v11);
  sub_2226BDC74(v6, (uint64_t)v12);
  sub_2225F7D50(v12);
  return sub_2225CA520(v13);
}

uint64_t sub_2226BDC74(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_2226BDE58(a1, a2);
  }
  else
  {
    sub_2226BDDE4((uint64_t)a1, a2);
    uint64_t result = v4 + 32;
  }
  a1[1] = result;
  return result;
}

uint64_t sub_2226BDCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2226BDDCC(a3, a1, a2);
}

uint64_t sub_2226BDCE4(uint64_t a1)
{
  return sub_2225D24C8(a1 + 16);
}

void *sub_2226BDCEC(void *result)
{
  *result += 32;
  return result;
}

uint64_t sub_2226BDCFC(uint64_t a1)
{
  return sub_2225D2E88((uint64_t *)(a1 + 40));
}

uint64_t sub_2226BDD04(uint64_t a1)
{
  return sub_2225D24C8(a1 + 40);
}

uint64_t sub_2226BDD0C(uint64_t a1)
{
  return sub_2225D2E88((uint64_t *)(a1 + 64));
}

uint64_t sub_2226BDD14(uint64_t a1)
{
  return sub_2225D24C8(a1 + 64);
}

uint64_t sub_2226BDD1C(uint64_t a1)
{
  return sub_2225D2E88((uint64_t *)(a1 + 88));
}

uint64_t sub_2226BDD24(uint64_t a1)
{
  return sub_2225D24C8(a1 + 88);
}

void sub_2226BDD30()
{
  uint64_t v0 = (void *)sub_2226BDD2C();

  j__free(v0);
}

uint64_t sub_2226BDD58(void *a1)
{
  *a1 = &unk_26D4DEFB8;
  unsigned int v2 = a1 + 2;
  sub_2225F7C7C(a1 + 11);
  sub_2225F7C7C(a1 + 8);
  sub_2225F7C7C(a1 + 5);
  sub_2225F7C7C(v2);

  return nullsub_1(a1, v3);
}

__n128 sub_2226BDDD0(uint64_t a1, _DWORD *a2, __n128 *a3)
{
  *(_DWORD *)a1 = *a2;
  __n128 result = *a3;
  *(__n128 *)(a1 + 8) = *a3;
  return result;
}

void *sub_2226BDDE4(uint64_t a1, uint64_t a2)
{
  sub_2226BDF08(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_2226BDF0C(v5, v7, a2);
  v10 += 32;
  return sub_2225D284C(&v9);
}

uint64_t sub_2226BDE58(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_222616714(a1);
  unint64_t v6 = sub_22261A668(a1, v5 + 1);
  uint64_t v7 = sub_222616714(a1);
  sub_22261A6E4(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2226BDF0C(v4, v9, a2);
  v13 += 32;
  sub_2226BDF64(a1, v12);
  uint64_t v10 = a1[1];
  sub_2226BE054(v12);
  return v10;
}

void *sub_2226BDF10(void *result, uint64_t a2, uint64_t a3)
{
  *__n128 result = a2;
  uint64_t v3 = *(void *)(a2 + 8);
  result[1] = v3;
  result[2] = v3 + 32 * a3;
  return result;
}

uint64_t sub_2226BDF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226BDF30(a2, a3);
}

_DWORD *sub_2226BDF34(_DWORD *a1, _DWORD *a2)
{
  *a1 = *a2;
  sub_2225D1354(a1 + 2, a2 + 2);
  return a1;
}

uint64_t sub_2226BDF64(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_2226BE058(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  uint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  uint64_t v11 = sub_222616714(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_2226BE058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_2226BE124(&v16);
    uint64_t v9 = sub_22261AC28((uint64_t)v18);
    sub_2226BDF0C(a1, v8, v9);
    sub_22261AC34((uint64_t)v18);
    sub_22261AC34((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_2226BE128(uint64_t a1)
{
  uint64_t v1 = sub_2226BE150(a1);

  return nullsub_1(v1, v2);
}

uint64_t *sub_2226BE154(uint64_t *a1)
{
  sub_2226BE1B4((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_22261ACAC(a1, v4);
    sub_2225F7E54(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_2226BE1B4(uint64_t a1)
{
  return sub_2226BE1BC(a1, *(void *)(a1 + 8));
}

uint64_t sub_2226BE1C0(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 32;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      __n128 result = sub_2225F7EF4(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

_DWORD *sub_2226BE22C(_DWORD *a1, uint64_t a2)
{
  *a1 = *(_DWORD *)a2;
  sub_2225CA51C((void *)(a2 + 8), (uint64_t)(a1 + 2));
  return a1;
}

uint64_t sub_2226BE264(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_2226BE2EC((void *)a1);
  *uint64_t v8 = &unk_26D4DF008;
  void v8[2] = a2;
  sub_2225F3270(v8 + 3, a3);
  sub_2225D8FA4(a1 + 32);
  sub_2225CAD04(a1 + 40);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) & 0xFE | a4;
  return a1;
}

void *sub_2226BE2EC(void *result)
{
  *__n128 result = &unk_26D4DBCB0;
  result[1] = 0;
  return result;
}

uint64_t sub_2226BE310(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DF008;
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  std::string::~string((std::string *)(a1 + 40));
  sub_2226BE3AC(a1 + 32);
  sub_2225F346C(a1 + 24);

  return nullsub_1(a1, v3);
}

void sub_2226BE3B4()
{
  uint64_t v0 = (void *)sub_2226BE3B0();

  j__free(v0);
}

void *sub_2226BE3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 32;
  uint64_t v5 = sub_2225C26A4(48);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = sub_2225C3C70(a1 + 24);
  sub_2226BA458(v5, v6, a2, v7);

  return sub_2226BE458(v4, v5);
}

void *sub_2226BE458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  __n128 result = (void *)j_nullsub_1(a1, v5);
  *__n128 result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2226BE9A8(v8, v4);
  }
  return result;
}

void *sub_2226BE4C8(uint64_t a1)
{
  return sub_2226BE458(a1 + 32, 0);
}

uint64_t sub_2226BE4D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_2225F3C38((_DWORD *)a1, a2);
  sub_2226B9478(v39);
  sub_2225F3CB0(a3, v39);
  sub_2225E8C04(v38);
  uint64_t v6 = sub_2225C3C70(a1 + 24);
  sub_2226BE6E4((uint64_t)v38, a2, (uint64_t)a3, v6);
  int v7 = sub_2226BA610(*(void *)(a1 + 16));
  if (!sub_2225CBBF8(a1 + 40, v8))
  {
    uint64_t v9 = sub_2225D47E4(*(void ***)(a1 + 16), a1 + 40);
    sub_2225CA524((uint64_t)v9, ": ");
  }
  uint64_t v10 = (_DWORD *)sub_2225F3BDC(a3);
  if (sub_2225CDBBC(v10))
  {
    int v36 = (uint64_t *)sub_2225CBA80(a1 + 32, v11);
    unsigned int v12 = *(_DWORD *)sub_2225F3BDC(a3);
    uint64_t v13 = sub_2225E8D4C(v38);
    uint64_t v15 = v14;
    uint64_t v16 = sub_2226BE8F0(a3);
    uint64_t v18 = v17;
    uint64_t v19 = sub_2226BE920(a3);
    uint64_t v21 = v20;
    unsigned int v22 = (_DWORD *)sub_2225F4D3C(a3);
    sub_2226B958C((uint64_t)&v37, 0);
    *(void *)&long long v35 = v19;
    *((void *)&v35 + 1) = v21;
    sub_2226B81FC(v36, v12, a2, v13, v15, v16, v18, v23, v35, v22, v37);
  }
  else
  {
    uint64_t v24 = *(void *)(a1 + 16);
    int v25 = (*(_DWORD *)(sub_2225C3C70(a1 + 24) + 4) >> 15) & 1;
    uint64_t v26 = sub_2225C3C70(a1 + 24);
    sub_2226BA664(v24, a2, v25, (*(_DWORD *)(v26 + 4) >> 19) & 1);
    uint64_t v27 = *(void ***)(a1 + 16);
    uint64_t v28 = sub_2225E8D4C(v38);
    uint64_t v30 = v29;
    int v31 = sub_2226BA610(*(void *)(a1 + 16)) - v7;
    uint64_t v32 = *(unsigned int *)(sub_2225C3C70(a1 + 24) + 28);
    uint64_t v33 = sub_2225C3C70(a1 + 24);
    sub_2226BA8A4(v27, a2 != 0, v28, v30, v31, v32, (*(_DWORD *)(v33 + 4) >> 15) & 1);
  }
  sub_2225E86DC(*(uint64_t **)(a1 + 16));
  sub_2225E8C5C(v38);
  return sub_2225CA520(v39);
}

uint64_t sub_2226BE6E4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void **)result;
  int v7 = *(_DWORD *)(a4 + 4);
  if ((v7 & 0x800) != 0)
  {
    if (sub_2225F3BD0(a3) == 42)
    {
      return (uint64_t)sub_2225CA524((uint64_t)v6, " [-ferror-limit=]");
    }
    if (a2 == 4 && (v10 = sub_2225F3BD0(a3), sub_2225F707C(v10)) && (unsigned int v11 = sub_2225F3BD0(a3), !sub_2225F715C(v11)))
    {
      sub_2225CA524((uint64_t)v6, " [-Werror");
      int v12 = 1;
      uint64_t v13 = ",";
    }
    else
    {
      int v12 = 0;
      uint64_t v13 = " [";
    }
    unsigned int v14 = sub_2225F3BD0(a3);
    uint64_t v29 = sub_2225F75C8(v14);
    uint64_t v30 = v15;
    __n128 result = sub_2225CF1E0((uint64_t)&v29);
    if ((result & 1) == 0)
    {
      uint64_t v16 = sub_2225CA524((uint64_t)v6, v13);
      if (a2 == 2) {
        uint64_t v17 = "-R";
      }
      else {
        uint64_t v17 = "-W";
      }
      uint64_t v18 = sub_2225CA524((uint64_t)v16, v17);
      sub_2225CA568((uint64_t)v18, v29, v30);
      uint64_t v19 = sub_2225C3C70(a3);
      uint64_t v27 = sub_2226BE950(v19);
      uint64_t v28 = v20;
      __n128 result = sub_2225CF1E0((uint64_t)&v27);
      if ((result & 1) == 0)
      {
        uint64_t v21 = sub_2225CA524((uint64_t)v6, "=");
        __n128 result = (uint64_t)sub_2225CA568((uint64_t)v21, v27, v28);
      }
      int v12 = 1;
    }
    BOOL v8 = v12 != 0;
    int v7 = *(_DWORD *)(a4 + 4);
  }
  else
  {
    BOOL v8 = 0;
  }
  if ((v7 & 0x6000) != 0)
  {
    unsigned int v22 = sub_2225F3BD0(a3);
    __n128 result = (uint64_t)sub_2225F6CE8(v22);
    if (result)
    {
      unsigned int v23 = result;
      if (v8) {
        uint64_t v24 = ",";
      }
      else {
        uint64_t v24 = " [";
      }
      sub_2225CA524((uint64_t)v6, v24);
      if ((*(_DWORD *)(a4 + 4) & 0x6000) == 0x2000)
      {
        sub_2225CA560(v6, v23);
      }
      else
      {
        uint64_t v25 = sub_2225F6FCC(v23);
        sub_2225CA568((uint64_t)v6, v25, v26);
      }
      return sub_2225CAF14((uint64_t)v6, 93);
    }
  }
  if (v8) {
    return sub_2225CAF14((uint64_t)v6, 93);
  }
  return result;
}

uint64_t sub_2226BE8F0(void *a1)
{
  sub_2226B8920(&v2, *a1 + 624);
  return v2;
}

uint64_t sub_2226BE920(void *a1)
{
  sub_2226B8774(&v2, *a1 + 744);
  return v2;
}

uint64_t sub_2226BE950(uint64_t a1)
{
  sub_2225CCBF8(&v2, a1 + 256);
  return v2;
}

uint64_t sub_2226BE97C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226BE9A8(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 8))(a2);
  }
  return result;
}

uint64_t sub_2226BE9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226BE2EC((void *)a1);
  sub_2226BEAEC(v4 + 2);
  *(void *)a1 = &unk_26D4DF058;
  *(void *)(a1 + 16) = &unk_26D4DF0B0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = sub_2226AA844(a2);
  *(unsigned char *)(a1 + 40) = sub_2226BEB0C(*(void *)(a1 + 24));
  uint64_t v5 = (_OWORD *)sub_2225C26A4(112);
  *uint64_t v5 = 0u;
  v5[1] = 0u;
  void v5[2] = 0u;
  v5[3] = 0u;
  _OWORD v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  sub_2226BEB14();
  sub_2225CDDC8(a1 + 48, (uint64_t)v5);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  sub_2226BEB18((void *)(a1 + 88));
  sub_22260AF2C(a1 + 184, 0);
  sub_22260AF2C(a1 + 208, 0);
  sub_2226BEB1C(*(void *)(a1 + 24));
  if (sub_2226BEB28(*(void *)(a1 + 24)))
  {
    uint64_t v6 = sub_2225F4FA8(*(void *)(a1 + 24));
    sub_22260AFF4(a1, v6);
  }
  return a1;
}

void *sub_2226BEAEC(void *result)
{
  *uint64_t result = &unk_26D4DC490;
  return result;
}

uint64_t sub_2226BEB0C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_2226BEB1C(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  return *(void *)(a1 + 56);
}

BOOL sub_2226BEB28(uint64_t a1)
{
  return *(void *)(a1 + 72) != 0;
}

uint64_t sub_2226BEB3C(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DF058;
  uint64_t v2 = a1 + 16;
  *(void *)(a1 + 16) = &unk_26D4DF0B0;
  *(void *)(a1 + 72) = 0;
  sub_2226BEC18(a1);
  sub_2226BEB1C(*(void *)(a1 + 24));
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  sub_22260B394(a1 + 208);
  sub_22260B394(a1 + 184);
  sub_2226BEE10(a1 + 88);
  sub_2226BEE14(a1 + 48);
  nullsub_1(v2, v4);

  return nullsub_1(a1, v5);
}

uint64_t sub_2226BEC18(uint64_t a1)
{
  char v2 = sub_2226BEB0C(*(void *)(a1 + 24));
  uint64_t v3 = sub_2226BEB1C(*(void *)(a1 + 24));
  sub_2225F3478(*(void *)(a1 + 24), *(void *)(a1 + 32), 0);
  uint64_t v5 = *(_DWORD **)(a1 + 72);
  if (v5)
  {
    if (!*(_DWORD *)(a1 + 84))
    {
      sub_2225F379C(*(void *)(a1 + 24), 458, (uint64_t)v32);
      sub_2226BFD48((uint64_t)v32);
      sub_2225F37F0(v32);
      ++*(_DWORD *)(a1 + 12);
      *(_DWORD *)(a1 + 84) = 1;
      uint64_t v5 = *(_DWORD **)(a1 + 72);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    uint64_t v7 = sub_2225CBA80(a1 + 48, v4);
    int v8 = sub_2226BFD54(v6, v5, v7, (uint64_t *)(a1 + 88));
    int v9 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 24);
    uint64_t v11 = sub_2225CBA80(a1 + 48, v4);
    uint64_t v12 = sub_2226B13B8(v11);
    uint64_t v14 = sub_2225CBA80(a1 + 48, v13);
    uint64_t v15 = sub_2226BDCE4(v14);
    LODWORD(v10) = sub_2226BFE88(v10, 0, v12, v15, (uint64_t)"error");
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t v18 = sub_2225CBA80(a1 + 48, v17);
    uint64_t v19 = sub_2226BDCFC(v18);
    uint64_t v21 = sub_2225CBA80(a1 + 48, v20);
    uint64_t v22 = sub_2226BDD04(v21);
    LODWORD(v19) = sub_2226BFE88(v16, 0, v19, v22, (uint64_t)"warn") + v10;
    uint64_t v23 = *(void *)(a1 + 24);
    uint64_t v25 = sub_2225CBA80(a1 + 48, v24);
    uint64_t v26 = sub_2226BDD1C(v25);
    uint64_t v28 = sub_2225CBA80(a1 + 48, v27);
    uint64_t v29 = sub_2226BDD24(v28);
    int v9 = v19 + sub_2226BFE88(v23, 0, v26, v29, (uint64_t)"note");
    int v8 = *(_DWORD *)(a1 + 12);
  }
  *(_DWORD *)(a1 + 12) = v9 + v8;
  sub_2226BEB1C(*(void *)(a1 + 24));
  sub_2225F3478(*(void *)(a1 + 24), v3, v2);
  uint64_t v30 = (_OWORD *)sub_2225C26A4(112);
  *uint64_t v30 = 0u;
  v30[1] = 0u;
  uint64_t v30[2] = 0u;
  v30[3] = 0u;
  uint64_t v30[4] = 0u;
  v30[5] = 0u;
  v30[6] = 0u;
  sub_2226BEB14();
  sub_2226C00B0(a1 + 48, (uint64_t)v30);
  return sub_2226C0120((uint64_t *)(a1 + 88));
}

uint64_t sub_2226BEE1C(uint64_t a1)
{
  return sub_2226BEE18(a1 - 16);
}

void sub_2226BEE24(uint64_t a1)
{
  uint64_t v1 = (void *)sub_2226BEE18(a1);

  j__free(v1);
}

void sub_2226BEE4C(uint64_t a1)
{
}

uint64_t sub_2226BEE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = v5 + 1;
  if (a3 && !v5)
  {
    *(void *)(a1 + 56) = a3;
    *(void *)(a1 + 64) = a2;
    uint64_t v6 = sub_2225E8DD0(a3);
    sub_22260AFF4(a1, v6);
    sub_222649C04(a3, a1 + 16);
  }
  uint64_t v7 = *(uint64_t (**)(void))(**(void **)(a1 + 32) + 24);

  return v7();
}

uint64_t sub_2226BEEF8(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 32))(*(void *)(a1 + 32));
  int v3 = *(_DWORD *)(a1 + 80) - 1;
  *(_DWORD *)(a1 + 80) = v3;
  if (!v3)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    if (v4) {
      sub_222649C30(v4, a1 + 16);
    }
    uint64_t result = sub_2226BEC18(a1);
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  return result;
}

uint64_t sub_2226BEF70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (sub_2226BF02C(a3))
  {
    if (*(void *)(a1 + 72))
    {
      uint64_t result = sub_2225F4D3C(a3);
      if (result != *(void *)(a1 + 72)) {
        return result;
      }
    }
    uint64_t v7 = sub_2225F4D3C(a3);
    sub_22260AFF4(a1, v7);
  }
  int v8 = *(uint64_t (**)(void))(*(void *)sub_2225CBA80(a1 + 48, v5) + 56);

  return v8();
}

BOOL sub_2226BF02C(uint64_t *a1)
{
  return sub_2226BEB28(*a1);
}

uint64_t sub_2226BF034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_2225E8DD0(a2);
  uint64_t v6 = *(void *)(a1 + 72);
  if (v6) {
    BOOL v7 = v5 == v6;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    uint64_t v8 = v5;
    int v9 = sub_2225C3B40((unsigned int *)&v27);
    uint64_t v10 = sub_22260CE08(v8, v9, 0);
    int v11 = sub_222613380((uint64_t)&v27);
    uint64_t v12 = sub_22260CE08(v8, v11, 0);
    sub_2225C3D0C(v26, v10, v12 - v10);
    if (!sub_2225CF1E0((uint64_t)v26))
    {
      unint64_t v13 = sub_2225CCC00(v26, 0x5Cu, 0);
      if (v13 == -1)
      {
        sub_2226BF2AC(v26[0], v26[1], (uint64_t *)(a1 + 88), v8, a2, v9, (_DWORD *)(a1 + 84));
      }
      else
      {
        unint64_t v14 = v13;
        sub_2225CAD04(&v25);
        std::string::size_type v15 = sub_2225C3D04((uint64_t)v26);
        std::string::reserve(&v25, v15);
        unint64_t v16 = 0;
        do
        {
          if (v14 == sub_2225C3D04((uint64_t)v26)) {
            break;
          }
          uint64_t v17 = sub_2225CE76C(v26, v16, v14 - v16);
          sub_2225CCA6C(&v25, v17, v18);
          unint64_t v16 = v14 + 1;
          if (sub_2225CC124(v26, v14 + 1) == 10 || sub_2225CC124(v26, v14 + 1) == 13)
          {
            if (v14 + 2 < sub_2225C3D04((uint64_t)v26)
              && (sub_2225CC124(v26, v14 + 2) == 10 || sub_2225CC124(v26, v14 + 2) == 13))
            {
              int v19 = sub_2225CC124(v26, v14 + 2);
              unint64_t v16 = v19 == sub_2225CC124(v26, v14 + 1) ? v14 + 2 : v14 + 3;
            }
            else
            {
              unint64_t v16 = v14 + 2;
            }
          }
          else
          {
            sub_2225CCA44(&v25, 92);
          }
          unint64_t v14 = sub_2225CCC00(v26, 0x5Cu, v16);
        }
        while (v14 != -1);
        uint64_t v20 = sub_2225CE76C(v26, v16, 0xFFFFFFFFFFFFFFFFLL);
        sub_2225CCA6C(&v25, v20, v21);
        if (!sub_2225CBBF8((uint64_t)&v25, v22))
        {
          sub_2225CCBF8(v24, &v25);
          sub_2226BF2AC(v24[0], v24[1], (uint64_t *)(a1 + 88), v8, a2, v9, (_DWORD *)(a1 + 84));
        }
        std::string::~string(&v25);
      }
    }
  }
  return 0;
}

void sub_2226BF2AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, int a6, _DWORD *a7)
{
  uint64_t v8 = (_DWORD *)a4;
  v101[0] = a6;
  if (a5) {
    uint64_t v12 = sub_2225C5B40(a5);
  }
  else {
    uint64_t v12 = sub_2225C3D04(a4);
  }
  uint64_t v13 = v12;
  sub_2226C049C(v98, a1, a2);
  unint64_t v14 = a3 + 9;
  if (!a3) {
    unint64_t v14 = 0;
  }
  int v61 = v14;
  uint64_t v62 = (uint64_t)v8;
  std::string::size_type v15 = a3 + 6;
  if (!a3) {
    std::string::size_type v15 = 0;
  }
  uint64_t v63 = v15;
  uint64_t v64 = v13;
  unint64_t v16 = a3 + 3;
  if (!a3) {
    unint64_t v16 = 0;
  }
  int v65 = v16;
  while (!sub_2226C04A0((uint64_t)v98))
  {
    sub_2225C3D00((int)v97, "expected");
    if (!sub_2226C04B0(v98, v97[0], v97[1], 1)) {
      break;
    }
    sub_2226C05A8(v98);
    sub_2225C3D00((int)v96, "-");
    if (sub_2226C05C0(v98, v96[0], v96[1]))
    {
      sub_2226C05A8(v98);
      sub_2225C3D00((int)v95, "error");
      uint64_t v17 = a3;
      if (sub_2226C05C0(v98, v95[0], v95[1])
        || (sub_2225C3D00((int)v94, "warning"), uint64_t v17 = v65, sub_2226C05C0(v98, v94[0], v94[1]))
        || (sub_2225C3D00((int)v93, "remark"), uint64_t v17 = v63, sub_2226C05C0(v98, v93[0], v93[1]))
        || (sub_2225C3D00((int)v92, "note"), uint64_t v17 = v61, sub_2226C05C0(v98, v92[0], v92[1])))
      {
        sub_2226C05A8(v98);
        if (*a7 == 2)
        {
          sub_2225F52C4(v13, v101[0], 451, (uint64_t)&v75);
          unsigned int v18 = 0;
          goto LABEL_20;
        }
        *a7 = 3;
        if (!v17) {
          return;
        }
        sub_2225C3D00((int)v90, "-re");
        BOOL v19 = sub_2226C05C0(v98, v90[0], v90[1]);
        uint64_t v20 = "string";
        if (v19)
        {
          sub_2226C05A8(v98);
          uint64_t v20 = "regex";
        }
        sub_2225F3278(&v89);
        sub_2225C3D00((int)v88, "@");
        if (!sub_2226C05C0(v98, v88[0], v88[1]))
        {
          char v28 = 0;
          int v89 = v101[0];
          goto LABEL_48;
        }
        sub_2226C05A8(v98);
        LODWORD(v72[0]) = 0;
        sub_2225C3D00((int)v87, "+");
        BOOL v21 = sub_2226C05C0(v98, v87[0], v87[1]);
        if (v21 || (sub_2225C3D00((int)v86, "-"), sub_2226C05C0(v98, v86[0], v86[1])))
        {
          sub_2226C05A8(v98);
          v75.__r_.__value_.__s.__data_[0] = 0;
          unsigned int v22 = sub_22260D748(v8, v101[0], &v75);
          if (!v75.__r_.__value_.__s.__data_[0])
          {
            unsigned int v23 = v22;
            if (sub_2226C0648(v98, (int *)v72))
            {
              int v24 = v72[0];
              int v25 = LODWORD(v72[0]) < v23 || v21;
              if (v25 == 1)
              {
                if (!v21) {
                  int v24 = -LODWORD(v72[0]);
                }
                unsigned int v26 = v24 + v23;
                unsigned int v27 = sub_222609AF8(v8, v101[0]);
                int v89 = sub_22260E04C((uint64_t)v8, v27, v26, 1);
              }
            }
          }
LABEL_43:
          char v28 = 0;
          goto LABEL_44;
        }
        if (sub_2226C0648(v98, (int *)v72))
        {
          unsigned int v29 = v72[0];
          if (!LODWORD(v72[0])) {
            goto LABEL_43;
          }
          unsigned int v30 = sub_222609AF8(v8, v101[0]);
          char v28 = 0;
          int v89 = sub_22260E04C((uint64_t)v8, v30, v29, 1);
LABEL_44:
          uint64_t v13 = v64;
          goto LABEL_45;
        }
        if (!a5)
        {
          char v28 = 0;
          goto LABEL_45;
        }
        sub_2225C3D00((int)v85, ":");
        char v28 = 0;
        if (sub_2226C04B0(v98, v85[0], v85[1], 0))
        {
          sub_2225C3D0C(&v75, v99, &v100[-v99]);
          sub_2226C05A8(v98);
          unsigned int v73 = 0;
          uint64_t v53 = sub_222636D20(a5, v101[0], (uint64_t)v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_, 0, 0, (uint64_t *)&v73, 0, 0, 0, 0);
          if (v53)
          {
            uint64_t v54 = v53;
            LODWORD(v68.__r_.__value_.__l.__data_) = sub_22260DBBC(v62, v53);
            if (sub_2225F38E8(&v68)) {
              sub_22263006C(v62, v54, v101[0], 0, 0, 0);
            }
            if (sub_2226C0648(v98, (int *)v72) && LODWORD(v72[0]))
            {
              int v55 = sub_22260DB68(v62, v54, v72[0], 1);
              char v28 = 0;
              goto LABEL_87;
            }
            sub_2225C3D00((int)v84, "*");
            if (sub_2226C05C0(v98, v84[0], v84[1]))
            {
              char v28 = 1;
              int v55 = sub_22260DB68(v62, v54, 1u, 1);
LABEL_87:
              int v89 = v55;
            }
            else
            {
              char v28 = 0;
            }
            uint64_t v8 = (_DWORD *)v62;
            goto LABEL_45;
          }
          unsigned int v56 = sub_22260C644(v101, (int)v99 - LODWORD(v98[0]));
          sub_2225F52C4(v13, v56, 454, (uint64_t)&v68);
          uint64_t v57 = sub_2225F3774((uint64_t *)&v68, (uint64_t)v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
          sub_22260A5E8(v57, (uint64_t)v20);
          sub_2225F37F0(&v68);
          uint64_t v8 = (_DWORD *)v62;
        }
        else
        {
LABEL_45:
          if (sub_2225F38E8(&v89))
          {
            unsigned int v31 = sub_22260C644(v101, (int)v99 - LODWORD(v98[0]));
            sub_2225F52C4(v13, v31, 455, (uint64_t)&v75);
            sub_22260A5E8((uint64_t *)&v75, (uint64_t)v20);
            sub_2225F37F0(&v75);
          }
          else
          {
            sub_2226C05A8(v98);
LABEL_48:
            sub_2226C06C0((uint64_t)v98);
            unsigned int v83 = 1;
            unsigned int v82 = 1;
            if (!sub_2226C0648(v98, (int *)&v83))
            {
              sub_2225C3D00((int)v79, "+");
              if (!sub_2226C05C0(v98, v79[0], v79[1]))
              {
                int v32 = 1;
                goto LABEL_59;
              }
              goto LABEL_55;
            }
            sub_2226C05A8(v98);
            sub_2225C3D00((int)v81, "+");
            if (sub_2226C05C0(v98, v81[0], v81[1]))
            {
LABEL_55:
              int v32 = -1;
              unsigned int v82 = -1;
LABEL_56:
              sub_2226C05A8(v98);
LABEL_59:
              sub_2226C06C0((uint64_t)v98);
              sub_2225C3D00((int)v78, "{{");
              if (sub_2226C05C0(v98, v78[0], v78[1]))
              {
                sub_2226C05A8(v98);
                uint64_t v34 = v99;
                sub_2225C3D00((int)v77, "{{");
                sub_2225C3D00((int)v76, "}}");
                if (sub_2226C0718(v98, v77[0], (size_t)v77[1], v76[0], (size_t)v76[1]))
                {
                  uint64_t v59 = a7;
                  long long v35 = v100;
                  sub_2226C05A8(v98);
                  sub_2225CAD04(&v75);
                  sub_2225C3D00((int)&v73, "\\n");
                  sub_2225C3D0C(v72, v34, &v35[-v34]);
                  uint64_t v36 = sub_2225D85D4(v72, v73, v74, 0);
                  if (v36 != -1)
                  {
                    uint64_t v38 = v36;
                    unint64_t v39 = 0;
                    do
                    {
                      uint64_t v40 = sub_2225CE76C(v72, v39, v38 - v39);
                      sub_2225CCA6C(&v75, v40, v41);
                      sub_2225CCA44(&v75, 10);
                      unint64_t v39 = sub_2225C3D04((uint64_t)&v73) + v38;
                      uint64_t v38 = sub_2225D85D4(v72, v73, v74, v39);
                    }
                    while (v38 != -1);
                  }
                  if (sub_2225CBBF8((uint64_t)&v75, v37)) {
                    sub_2226C07E4(&v75, v34, v35);
                  }
                  if (v19 && sub_2225CCAC4((uint64_t)&v75, "{{", 0) == -1)
                  {
                    unsigned int v58 = sub_22260C644(v101, (int)v34 - LODWORD(v98[0]));
                    sub_2225F52C4(v64, v58, 456, (uint64_t)&v68);
                    sub_2225CCBF8(v71, &v75);
                    sub_2225F3774((uint64_t *)&v68, v71[0], v71[1]);
                    sub_2225F37F0(&v68);
                    std::string::~string(&v75);
                    return;
                  }
                  int v42 = v101[0];
                  int v43 = v89;
                  sub_2225CCBF8(v69, &v75);
                  uint64_t v44 = sub_2226C0168(v19, v42, v43, v28, v69[0], v69[1], v83, v32);
                  sub_2225CDDC8((uint64_t)v70, v44);
                  sub_2225CAD04(&v68);
                  uint64_t v46 = sub_2225CBA80((uint64_t)v70, v45);
                  if ((*(unsigned int (**)(uint64_t, std::string *))(*(void *)v46 + 16))(v46, &v68))
                  {
                    v67[0] = sub_2225CE10C((uint64_t)v70, v47);
                    sub_22268CDE0(v17, (uint64_t)v67);
                    a7 = v59;
                    uint64_t v8 = (_DWORD *)v62;
                    uint64_t v13 = v64;
                  }
                  else
                  {
                    unsigned int v50 = sub_22260C644(v101, (int)v34 - LODWORD(v98[0]));
                    sub_2225F52C4(v64, v50, 450, (uint64_t)v67);
                    uint64_t v51 = sub_22260A5E8(v67, (uint64_t)v20);
                    sub_2225CCBF8(v66, &v68);
                    uint64_t v52 = v51;
                    uint64_t v13 = v64;
                    sub_2225F3774(v52, v66[0], v66[1]);
                    sub_2225F37F0(v67);
                    a7 = v59;
                    uint64_t v8 = (_DWORD *)v62;
                  }
                  std::string::~string(&v68);
                  sub_2226C0838(v70);
                  std::string::~string(&v75);
                }
                else
                {
                  unsigned int v49 = sub_22260C644(v101, (int)v99 - LODWORD(v98[0]));
                  sub_2225F52C4(v13, v49, 453, (uint64_t)&v75);
                  sub_22260A5E8((uint64_t *)&v75, (uint64_t)v20);
                  sub_2225F37F0(&v75);
                  uint64_t v8 = (_DWORD *)v62;
                }
              }
              else
              {
                unsigned int v48 = sub_22260C644(v101, (int)v99 - LODWORD(v98[0]));
                sub_2225F52C4(v13, v48, 457, (uint64_t)&v75);
                sub_22260A5E8((uint64_t *)&v75, (uint64_t)v20);
                sub_2225F37F0(&v75);
              }
            }
            else
            {
              sub_2225C3D00((int)v80, "-");
              if (!sub_2226C05C0(v98, v80[0], v80[1]))
              {
                int v32 = v83;
                unsigned int v82 = v83;
                goto LABEL_59;
              }
              sub_2226C05A8(v98);
              if (sub_2226C0648(v98, (int *)&v82))
              {
                int v32 = v82;
                if (v82 >= v83) {
                  goto LABEL_56;
                }
              }
              unsigned int v33 = sub_22260C644(v101, (int)v99 - LODWORD(v98[0]));
              sub_2225F52C4(v13, v33, 452, (uint64_t)&v75);
              sub_22260A5E8((uint64_t *)&v75, (uint64_t)v20);
              sub_2225F37F0(&v75);
            }
          }
        }
      }
      else
      {
        sub_2225C3D00((int)v91, "no-diagnostics");
        if (sub_2226C05C0(v98, v91[0], v91[1]))
        {
          if (*a7 == 3)
          {
            sub_2225F52C4(v13, v101[0], 451, (uint64_t)&v75);
            unsigned int v18 = 1;
LABEL_20:
            sub_22262FD18((uint64_t *)&v75, v18);
            sub_2225F37F0(&v75);
          }
          else
          {
            *a7 = 2;
          }
        }
      }
    }
  }
}

uint64_t sub_2226BFD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 0;
}

uint64_t sub_2226BFD48(uint64_t result)
{
  *(unsigned char *)(result + 13) = 1;
  return result;
}

uint64_t sub_2226BFD54(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_2226B13B8(a3);
  uint64_t v9 = sub_2226BDCE4(a3);
  LODWORD(v8) = sub_2226C0C3C(a1, a2, (uint64_t)"error", a4, v8, v9);
  uint64_t v10 = sub_2226BDCFC(a3);
  uint64_t v11 = sub_2226BDD04(a3);
  LODWORD(v10) = sub_2226C0C3C(a1, a2, (uint64_t)"warning", a4 + 3, v10, v11) + v8;
  uint64_t v12 = sub_2226BDD0C(a3);
  uint64_t v13 = sub_2226BDD14(a3);
  LODWORD(v8) = sub_2226C0C3C(a1, a2, (uint64_t)"remark", a4 + 6, v12, v13);
  uint64_t v14 = sub_2226BDD1C(a3);
  uint64_t v15 = sub_2226BDD24(a3);
  return v10 + v8 + sub_2226C0C3C(a1, a2, (uint64_t)"note", a4 + 9, v14, v15);
}

uint64_t sub_2226BFE88(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  if (sub_2225D0E1C((uint64_t)&v37, (uint64_t)&v36)) {
    return 0;
  }
  sub_2225CD5BC(v35);
  sub_2225E8C04(v34);
  v32[0] = v37;
  uint64_t v33 = v36;
  while (sub_2225D0DF0((uint64_t)v32, (uint64_t)&v33))
  {
    uint64_t v10 = (_DWORD *)sub_2225F3960(v32, v9);
    BOOL v11 = sub_2225F38E8(v10);
    if (!a2 || v11)
    {
      sub_2225CA524((uint64_t)v34, "\n  (frontend)");
    }
    else
    {
      sub_2225CA524((uint64_t)v34, "\n ");
      uint64_t v13 = (int *)sub_2225F3960(v32, v12);
      unsigned int v14 = sub_222609AF8(a2, *v13);
      unint64_t v15 = sub_22262CE08((uint64_t)a2, v14);
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = sub_2225CA524((uint64_t)v34, " File ");
        unsigned int v18 = (char *)sub_2225C3C70(v16);
        sub_2225CA524((uint64_t)v17, v18);
      }
      BOOL v19 = sub_2225CA524((uint64_t)v34, " Line ");
      BOOL v21 = (int *)sub_2225F3960(v32, v20);
      unsigned int v22 = sub_22260D828((uint64_t)a2, *v21, 0);
      sub_2225CA560(v19, v22);
    }
    unsigned int v23 = sub_2225CA524((uint64_t)v34, ": ");
    uint64_t v25 = sub_2225F3960(v32, v24);
    sub_2225D47E4(v23, v25 + 8);
    sub_2226BDCEC(v32);
  }
  sub_2225F379C(a1, 449, (uint64_t)v32);
  unsigned int v26 = (uint64_t *)sub_2226BFD48((uint64_t)v32);
  unsigned int v27 = sub_22260A5E8(v26, a5);
  char v28 = sub_22262FD18(v27, 1u);
  uint64_t v29 = sub_2225E8D4C(v34);
  sub_2225F3774(v28, v29, v30);
  sub_2225F37F0(v32);
  uint64_t v8 = sub_2226C12E4(v37, v36);
  sub_2225E8C5C(v34);
  sub_2225CA520(v35);
  return v8;
}

void *sub_2226C00B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  *uint64_t result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2226C1C00(v8, v4);
  }
  return result;
}

uint64_t sub_2226C0120(uint64_t *a1)
{
  sub_2226C18C4(a1);
  sub_2226C18C4(a1 + 3);
  sub_2226C18C4(a1 + 6);

  return sub_2226C18C4(a1 + 9);
}

uint64_t sub_2226C0168(char a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a1)
  {
    sub_2225CAD04(&v33);
    uint64_t v31 = a5;
    for (uint64_t i = a6; !sub_2225CF1E0((uint64_t)&v31); uint64_t i = v21)
    {
      sub_2225C3D00((int)v30, "{{");
      if (sub_2225D0520((uint64_t)&v31, v30[0], (size_t)v30[1]))
      {
        uint64_t v31 = sub_2225E1AC8(&v31, 2uLL);
        uint64_t i = v15;
        sub_2225C3D00((int)v29, "}}");
        std::string::size_type v16 = sub_2225D85D4(&v31, v29[0], (size_t)v29[1], 0);
        std::string::append(&v33, "(");
        uint64_t v17 = (const std::string::value_type *)sub_2225C3C70((uint64_t)&v31);
        std::string::append(&v33, v17, v16);
        std::string::append(&v33, ")");
        unint64_t v18 = v16 + 2;
      }
      else
      {
        sub_2225C3D00((int)v28, "{{");
        unint64_t v18 = sub_2225D85D4(&v31, v28[0], (size_t)v28[1], 0);
        if (v18 == -1) {
          unint64_t v18 = sub_2225C3D04((uint64_t)&v31);
        }
        uint64_t v19 = sub_2225CE76C(&v31, 0, v18);
        sub_2225D1EBC(v19, v20, &v27);
        sub_2225CCBF4(&v33, (uint64_t)&v27);
        std::string::~string(&v27);
      }
      uint64_t v31 = sub_2225E1AC8(&v31, v18);
    }
    uint64_t v22 = sub_2225C26A4(72);
    sub_2225CCBF8(v26, &v33);
    sub_2226C0390(v22, a2, a3, a4, a5, a6, a7, a8, v26[0], v26[1]);
    std::string::~string(&v33);
  }
  else
  {
    uint64_t v22 = sub_2225C26A4(56);
    sub_2226C0384(v22, a2, a3, a4, a5, a6, a7, a8);
  }
  return v22;
}

void *sub_2226C0384(uint64_t a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return sub_2226C1964(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2226C0390(uint64_t a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  return sub_2226C1AD8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void *sub_2226C03A4(void *a1)
{
  char v2 = sub_2226BE2EC(a1);
  *char v2 = &unk_26D4DEFB8;
  int v3 = v2 + 11;
  sub_2225D250C(v2 + 2);
  sub_2225D250C(a1 + 5);
  sub_2225D250C(a1 + 8);
  sub_2225D250C(v3);
  return a1;
}

void *sub_2226C040C(void *a1)
{
  char v2 = sub_2225D250C(a1);
  sub_2225D250C(v2 + 3);
  sub_2225D250C(a1 + 6);
  sub_2225D250C(a1 + 9);
  return a1;
}

uint64_t sub_2226C044C(uint64_t *a1)
{
  sub_2226C0120(a1);
  sub_2225E4E68(a1 + 9);
  sub_2225E4E68(a1 + 6);
  sub_2225E4E68(a1 + 3);

  return sub_2225E4E68(a1);
}

BOOL sub_2226C04A0(uint64_t a1)
{
  return *(void *)(a1 + 16) >= *(void *)(a1 + 8);
}

BOOL sub_2226C04B0(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  v17[0] = a2;
  v17[1] = a3;
  while (1)
  {
    uint64_t v7 = a1[1];
    uint64_t v6 = a1[2];
    uint64_t v8 = sub_2225C3C70((uint64_t)v17);
    uint64_t v9 = sub_2225C3C78(v17);
    uint64_t v10 = sub_2226C088C(v6, v7, v8, v9);
    a1[3] = v10;
    a1[4] = v10 + sub_2225C3D04((uint64_t)v17);
    unint64_t v11 = a1[3];
    uint64_t v12 = a1[1];
    BOOL result = v11 != v12;
    if (v11 == v12 || a4 == 0) {
      break;
    }
    uint64_t v15 = *a1;
    if (v11 == *a1) {
      return 1;
    }
    int v16 = *(unsigned __int8 *)(v11 - 1);
    if (sub_22261BCEC(v16)) {
      return 1;
    }
    if (v11 > v15 + 1 && (v16 == 47 || v16 == 42) && *(unsigned char *)(v11 - 2) == 47) {
      return 1;
    }
    if (!sub_2226C05A8(a1)) {
      return 0;
    }
  }
  return result;
}

BOOL sub_2226C05A8(void *a1)
{
  unint64_t v1 = a1[4];
  a1[2] = v1;
  return v1 < a1[1];
}

BOOL sub_2226C05C0(void *a1, uint64_t a2, uint64_t a3)
{
  v10[0] = a2;
  v10[1] = a3;
  uint64_t v4 = a1[2];
  a1[3] = v4;
  uint64_t v5 = sub_2225C3D04((uint64_t)v10);
  a1[4] = v4 + v5;
  if ((unint64_t)(v4 + v5) > a1[1]) {
    return 0;
  }
  uint64_t v7 = (const void *)a1[3];
  uint64_t v8 = (const void *)sub_2225C3C70((uint64_t)v10);
  size_t v9 = sub_2225C3D04((uint64_t)v10);
  return memcmp(v7, v8, v9) == 0;
}

uint64_t sub_2226C0648(void *a1, int *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  a1[3] = v3;
  if (v3 >= v2) {
    return 0;
  }
  uint64_t v4 = 0;
  int v5 = 0;
  while (1)
  {
    int v6 = *(unsigned __int8 *)(v3 + v4);
    if ((v6 - 48) > 9) {
      break;
    }
    int v5 = v6 + 10 * v5 - 48;
    a1[3] = v3 + v4++ + 1;
    if (v2 - v3 == v4) {
      goto LABEL_7;
    }
  }
  unint64_t v2 = v3 + v4;
LABEL_7:
  if (v2 == v3) {
    return 0;
  }
  a1[4] = v2;
  *a2 = v5;
  return 1;
}

uint64_t sub_2226C06C0(uint64_t result)
{
  unint64_t v2 = *(void *)(result + 8);
  unint64_t v1 = *(void *)(result + 16);
  if (v1 < v2)
  {
    uint64_t v3 = result;
    unint64_t v4 = v2 - v1;
    unint64_t v5 = v1 + 1;
    do
    {
      BOOL result = sub_22261BCEC(*(unsigned __int8 *)(v5 - 1));
      if (!result) {
        break;
      }
      *(void *)(v3 + 16) = v5++;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_2226C0718(void *a1, const void *a2, size_t a3, const void *a4, size_t a5)
{
  int v16 = a2;
  size_t v17 = a3;
  unsigned int v14 = a4;
  size_t v15 = a5;
  unint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  a1[3] = v5;
  if (v5 < v6)
  {
    int v8 = 1;
    do
    {
      sub_2225C3D0C(v13, v5, v6 - v5);
      if (sub_2225D0520((uint64_t)v13, v16, v17))
      {
        ++v8;
        size_t v9 = &v16;
      }
      else
      {
        if (!sub_2225D0520((uint64_t)v13, v14, v15))
        {
          uint64_t v10 = 1;
          goto LABEL_10;
        }
        if (!--v8)
        {
          uint64_t v12 = a1[3];
          a1[4] = v12 + sub_2225C3D04((uint64_t)&v14);
          return 1;
        }
        size_t v9 = &v14;
      }
      uint64_t v10 = sub_2225C3D04((uint64_t)v9);
LABEL_10:
      unint64_t v5 = a1[3] + v10;
      a1[3] = v5;
      unint64_t v6 = a1[1];
    }
    while (v5 < v6);
  }
  return 0;
}

std::string *sub_2226C07E4(std::string *a1, uint64_t a2, unsigned char *a3)
{
  unint64_t v6 = sub_2225C5B3C(a2, (uint64_t)a3);
  sub_2226C0A6C(a1, a2, a3, v6);
  return a1;
}

uint64_t *sub_2226C083C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v7[0] = a2;
  v7[1] = a3;
  *a1 = sub_2225C3C70((uint64_t)v7);
  uint64_t v4 = sub_2225C3C78(v7);
  uint64_t v5 = *a1;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v5;
  a1[4] = 0;
  return a1;
}

uint64_t sub_2226C0890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = 0;
  return sub_2226C08C4(a1, a2, a3, a4, (uint64_t)&v6, (uint64_t)&v5, (uint64_t)&v5);
}

uint64_t sub_2226C08C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = a1;
  uint64_t v10 = a2;
  if (a4 == a3)
  {
    uint64_t v7 = &v11;
    int v8 = &v11;
    return sub_2225C5EEC((uint64_t)v7, (uint64_t)v8);
  }
  if (a2 - a1 < a4 - a3)
  {
    uint64_t v7 = &v10;
    int v8 = &v10;
    return sub_2225C5EEC((uint64_t)v7, (uint64_t)v8);
  }
  return sub_2226C0920(a1, a2, a3, a4, a5, a6, a7, a2 - a1, a4 - a3);
}

uint64_t sub_2226C0920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = a1;
  uint64_t v10 = a1 + a8 - a9 + 1;
  if (v10 == a1)
  {
LABEL_9:
    uint64_t v24 = v9;
    sub_2225C6954(&v24, a2);
    return sub_2225C5EEC((uint64_t)&v24, (uint64_t)&v24);
  }
  else
  {
    uint64_t v22 = a2;
    while (1)
    {
      uint64_t v16 = sub_2225DC2F8(a6, v9);
      uint64_t v17 = sub_2225DC2F8(a7, a3);
      if (sub_2226C0A54(a5, v16, v17)) {
        break;
      }
LABEL_7:
      if (++v9 == v10)
      {
        uint64_t v9 = v10;
        a2 = v22;
        goto LABEL_9;
      }
    }
    uint64_t v18 = 1;
    while (a3 + v18 != a4)
    {
      uint64_t v19 = sub_2225DC2F8(a6, v9 + v18);
      uint64_t v20 = sub_2225DC2F8(a7, a3 + v18++);
      if ((sub_2226C0A54(a5, v19, v20) & 1) == 0) {
        goto LABEL_7;
      }
    }
    uint64_t v23 = v9 + a9;
    uint64_t v24 = v9;
    return sub_2225C5EEC((uint64_t)&v24, (uint64_t)&v23);
  }
}

BOOL sub_2226C0A58(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  return *a2 == *a3;
}

uint64_t sub_2226C0A6C(std::string *a1, uint64_t a2, unsigned char *a3, unint64_t a4)
{
  char v6 = (unsigned char *)a2;
  unint64_t v8 = sub_2225CB920((uint64_t)a1, a2);
  unint64_t v10 = sub_2225E1E88((uint64_t)a1, v9);
  std::string::size_type v12 = a4 - v10;
  if (a4 > v10)
  {
    std::string::size_type v13 = v10;
    std::string::size_type v14 = sub_2225CB920((uint64_t)a1, v11);
    sub_2225E1EC4(a1, v13, v12, v14, 0, v14, 0);
    uint64_t v15 = a4;
LABEL_4:
    nullsub_1(a1, v15);
    goto LABEL_5;
  }
  uint64_t v15 = a4 - v8;
  if (a4 > v8) {
    goto LABEL_4;
  }
LABEL_5:
  uint64_t v16 = (unsigned char *)sub_2225CBA9C((uint64_t)a1, v15);
  while (v6 != a3)
    sub_2225CBB7C(v16++, v6++);
  char v18 = 0;
  sub_2225CBB7C(v16, &v18);
  uint64_t result = sub_2225E1F28((uint64_t)a1, a4);
  if (a4 < v8) {
    return nullsub_1(a1, v8);
  }
  return result;
}

uint64_t sub_2226C0B70(uint64_t a1)
{
  return a1;
}

void *sub_2226C0B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  uint64_t result = (void *)j_nullsub_1(a1, v5);
  *uint64_t result = a2;
  if (v4)
  {
    uint64_t v8 = j_nullsub_1(a1, v7);
    return (void *)sub_2226C0C0C(v8, v4);
  }
  return result;
}

uint64_t sub_2226C0C0C(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 8))(a2);
  }
  return result;
}

uint64_t sub_2226C0C3C(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  sub_2225D250C(v36);
  sub_2226C0EC0(v35, a5, a6);
  uint64_t v34 = sub_2225D2E88(a4);
  uint64_t v33 = sub_2225D24C8((uint64_t)a4);
  while (sub_2225D0DF0((uint64_t)&v34, (uint64_t)&v33))
  {
    uint64_t v12 = sub_2225C3C70((uint64_t)&v34);
    uint64_t v13 = *(void *)v12;
    int v14 = sub_22260D828((uint64_t)a2, *(_DWORD *)(*(void *)v12 + 12), 0);
    if (*(_DWORD *)(v13 + 44))
    {
      int v15 = v14;
      unsigned int v16 = 0;
      do
      {
        sub_2225D3A34(&v32);
        sub_2225D3A34(&v31);
        uint64_t v32 = sub_2225D2E88(v35);
        uint64_t v31 = sub_2225D24C8((uint64_t)v35);
        while (sub_2225D0DF0((uint64_t)&v32, (uint64_t)&v31))
        {
          if (*(unsigned char *)(v13 + 48)
            || (char v18 = (int *)sub_2225F3960(&v32, v17), v15 == sub_22260D828((uint64_t)a2, *v18, 0)))
          {
            int v19 = *(_DWORD *)(v13 + 12);
            uint64_t v20 = (unsigned int *)sub_2225F3960(&v32, v17);
            if (sub_2226C0EC4(a2, v19, *v20))
            {
              uint64_t v22 = sub_2225F3960(&v32, v21);
              sub_2225CCBF8(v30, v22 + 8);
              if ((*(uint64_t (**)(uint64_t, void, void))(*(void *)v13 + 24))(v13, v30[0], v30[1])) {
                break;
              }
            }
          }
          sub_2226BDCEC(&v32);
        }
        if (sub_2225D0E1C((uint64_t)&v32, (uint64_t)&v31))
        {
          if (v16 >= *(_DWORD *)(v13 + 40)) {
            break;
          }
          uint64_t v23 = sub_2225C3C70((uint64_t)&v34);
          sub_22268CDE0(v36, v23);
        }
        else
        {
          sub_2225D24D0(&v29, &v32);
          sub_2226C0F94(v35, v29);
        }
        ++v16;
      }
      while (v16 < *(_DWORD *)(v13 + 44));
    }
    sub_2225E49B8(&v34);
  }
  int v24 = sub_2226C1000(a1, a2, v36, a3);
  uint64_t v34 = sub_2225D2E88(v35);
  sub_2225D24D0(&v28, &v34);
  uint64_t v33 = sub_2225D24C8((uint64_t)v35);
  sub_2225D24D0(&v27, &v33);
  uint64_t v25 = sub_2226BFE88(a1, a2, v28, v27, a3) + v24;
  sub_2225F7C7C(v35);
  sub_2225E4E68(v36);
  return v25;
}

BOOL sub_2226C0EC4(_DWORD *a1, int a2, unsigned int a3)
{
  unsigned int v9 = a3;
  if (sub_2226074FC(&v9))
  {
    do
      unsigned int v9 = sub_2226B9408(a1, v9);
    while ((sub_2226074FC(&v9) & 1) != 0);
  }
  if (sub_2226C1618(a1, a2, v9)) {
    return 1;
  }
  unsigned int v6 = sub_222609AF8(a1, v9);
  unint64_t v7 = sub_22262CE08((uint64_t)a1, v6);
  if (!v7 && sub_2226C166C(a1, a2)) {
    return 1;
  }
  unsigned int v8 = sub_222609AF8(a1, a2);
  return v7 == sub_22262CE08((uint64_t)a1, v8);
}

uint64_t sub_2226C0F94(uint64_t *a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v6 = sub_22264A980(a1);
  uint64_t v3 = *a1 + 32 * sub_2226C139C((uint64_t)&v7, (uint64_t)&v6);
  uint64_t v4 = sub_2226C1710();
  sub_2226C16B8(a1, v4);
  return sub_2225D0BB0((uint64_t)a1, v3);
}

uint64_t sub_2226C1000(uint64_t a1, _DWORD *a2, uint64_t *a3, uint64_t a4)
{
  if (sub_2225CF1D0(a3)) {
    return 0;
  }
  uint64_t v30 = a1;
  uint64_t v31 = a4;
  sub_2225CD5BC(v35);
  sub_2225E8C04(v34);
  v32[0] = sub_2225D2E88(a3);
  uint64_t v33 = sub_2225D24C8((uint64_t)a3);
  while (sub_2225D0DF0((uint64_t)v32, (uint64_t)&v33))
  {
    uint64_t v9 = *(void *)sub_2225C3C70((uint64_t)v32);
    unint64_t v10 = sub_2225CA524((uint64_t)v34, "\n  File ");
    uint64_t v11 = sub_2226C1864(a2, *(_DWORD *)(v9 + 12));
    sub_2225CA568((uint64_t)v10, v11, v12);
    if (*(unsigned char *)(v9 + 48))
    {
      sub_2225CA524((uint64_t)v34, " Line *");
    }
    else
    {
      uint64_t v13 = sub_2225CA524((uint64_t)v34, " Line ");
      unsigned int v14 = sub_22260D828((uint64_t)a2, *(_DWORD *)(v9 + 12), 0);
      sub_2225CA560(v13, v14);
    }
    int v15 = (int *)(v9 + 8);
    if (sub_22261FB84((unsigned int *)(v9 + 8), (unsigned int *)(v9 + 12)))
    {
      unsigned int v16 = sub_2225CA524((uint64_t)v34, " (directive at ");
      uint64_t v17 = sub_2226C1864(a2, *v15);
      int v19 = sub_2225CA568((uint64_t)v16, v17, v18);
      uint64_t v20 = (void **)sub_2225CAF14((uint64_t)v19, 58);
      unsigned int v21 = sub_22260D828((uint64_t)a2, *v15, 0);
      uint64_t v22 = sub_2225CA560(v20, v21);
      sub_2225CAF14((uint64_t)v22, 41);
    }
    uint64_t v23 = sub_2225CA524((uint64_t)v34, ": ");
    sub_2225D47E4(v23, v9 + 16);
    sub_2225E49B8(v32);
  }
  sub_2225F379C(v30, 449, (uint64_t)v32);
  int v24 = (uint64_t *)sub_2226BFD48((uint64_t)v32);
  uint64_t v25 = sub_22260A5E8(v24, v31);
  unsigned int v26 = sub_22262FD18(v25, 0);
  uint64_t v27 = sub_2225E8D4C(v34);
  sub_2225F3774(v26, v27, v28);
  sub_2225F37F0(v32);
  uint64_t v8 = sub_2225D4970(a3);
  sub_2225E8C5C(v34);
  sub_2225CA520(v35);
  return v8;
}

uint64_t *sub_2226C1270(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  uint64_t v9 = 0;
  sub_2225D2558(a1 + 2, &v9, &v8);
  unint64_t v6 = sub_2226C12E4(a2, a3);
  sub_2226C12E8(a1, a2, a3, v6);
  return a1;
}

uint64_t sub_2226C12E8(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_2225C64B8(&v10, (uint64_t)a1);
  sub_2225D5D10(v10, (uint64_t)&v11);
  if (a4)
  {
    sub_2226C13D4(a1, a4);
    sub_2226C1448((uint64_t)a1, a2, a3, a4);
  }
  sub_2225D2D18(&v11);
  return j_nullsub_1(&v11, v8);
}

uint64_t sub_2226C1370(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  return sub_2226C139C((uint64_t)&v3, (uint64_t)&v4);
}

uint64_t sub_2226C139C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2225C3C70(a1);
  return (v3 - sub_2225C3C70(a2)) >> 5;
}

uint64_t sub_2226C13D4(uint64_t *a1, unint64_t a2)
{
  if (sub_22261A8CC((uint64_t)a1, a2) < a2) {
    sub_2225D2A34();
  }
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  uint64_t v6 = sub_22261A9A4(v5, a2);
  *a1 = v6;
  a1[1] = v6;
  *(void *)sub_2225D2650((uint64_t)a1, v7) = v6 + 32 * v7;

  return nullsub_1(a1, 0);
}

void *sub_2226C1448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2226BDF08(&v10, a1, a4);
  uint64_t v8 = sub_2225D2650(a1, v7);
  uint64_t v11 = sub_2226C14B4(v8, a2, a3, v11);
  return sub_2225D284C(&v10);
}

uint64_t sub_2226C14B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2226BD684(a2, a3);
  uint64_t v8 = v7;
  uint64_t v9 = j_j_nullsub_1(a4);
  uint64_t v10 = sub_2226C1528(a1, v6, v8, v9);

  return sub_2225C5F20(a4, v10);
}

uint64_t sub_2226C1528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v16 = a4;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  if (a2 != a3)
  {
    uint64_t v8 = v16;
    do
    {
      uint64_t v9 = nullsub_1(v8, v7);
      sub_2226C15D4(a1, v9, a2);
      a2 += 32;
      uint64_t v8 = v16 + 32;
      v16 += 32;
    }
    while (a2 != a3);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_2226C15D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226C15E4(a2, a3);
}

uint64_t sub_2226C15E8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  std::string::basic_string((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  return a1;
}

BOOL sub_2226C1618(_DWORD *a1, int a2, int a3)
{
  int v7 = sub_222609AF8(a1, a2);
  int v6 = sub_222609AF8(a1, a3);
  return sub_2225F5218(&v7, &v6);
}

BOOL sub_2226C166C(_DWORD *a1, int a2)
{
  int v5 = sub_222609AF8(a1, a2);
  int v4 = sub_2226370DC((uint64_t)a1);
  return sub_2225F5218(&v5, &v4);
}

uint64_t sub_2226C16B8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_222616714(a1);
  sub_2225F7E8C((uint64_t)a1, a2);

  return nullsub_1(a1, v4);
}

uint64_t sub_2226C1710()
{
  sub_2226C172C();
  return v0;
}

uint64_t sub_2226C1734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = (_DWORD *)j_j_nullsub_1(a3);
  uint64_t v9 = sub_2226C17C4((uint64_t)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2226C17C4(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  uint64_t v8 = a4;
  uint64_t v9 = a2;
  if (a2 != a3)
  {
    uint64_t v4 = a4;
    do
    {
      uint64_t v6 = (_DWORD *)sub_2225D74A4((uint64_t)&v9, a2);
      sub_2226C1834(v4, v6);
      v4 += 8;
      uint64_t v8 = v4;
      v9 += 32;
    }
    while (v9 != a3);
  }
  return sub_2225C5EEC((uint64_t)&v9, (uint64_t)&v8);
}

_DWORD *sub_2226C1834(_DWORD *a1, _DWORD *a2)
{
  *a1 = *a2;
  sub_2225CCDE4((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  return a1;
}

uint64_t sub_2226C1864(_DWORD *a1, int a2)
{
  unsigned int v3 = sub_222609AF8(a1, a2);
  unint64_t v4 = sub_22262CE08((uint64_t)a1, v3);
  if (v4)
  {
    uint64_t v5 = (char *)sub_2225C3C70(v4);
    sub_2225C3D00((int)&v7, v5);
  }
  else
  {
    sub_2225CCC70(&v7);
  }
  return v7;
}

uint64_t sub_2226C18C4(uint64_t *a1)
{
  uint64_t v5 = sub_2225D2E88(a1);
  uint64_t v4 = sub_2225D24C8((uint64_t)a1);
  while (sub_2225D0DF0((uint64_t)&v5, (uint64_t)&v4))
  {
    uint64_t v2 = *(void *)sub_2225C3C70((uint64_t)&v5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    sub_2225E49B8(&v5);
  }
  return sub_2225F3530(a1);
}

void *sub_2226C1964(uint64_t a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t result = (void *)sub_2226C19A0(a1, a2, a3, a4, a5, a6, a7, a8);
  *uint64_t result = &unk_26D4DF0D8;
  return result;
}

uint64_t sub_2226C19A0(uint64_t a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  v13[0] = a5;
  v13[1] = a6;
  *(void *)a1 = &unk_26D4DF108;
  *(_DWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 12) = a3;
  sub_2225CA51C(v13, a1 + 16);
  *(_DWORD *)(a1 + 40) = a7;
  *(_DWORD *)(a1 + 44) = a8;
  *(unsigned char *)(a1 + 48) = a4;
  return a1;
}

void sub_2226C1A1C()
{
  uint64_t v0 = (void *)sub_2226C1A18();

  j__free(v0);
}

uint64_t sub_2226C1A44()
{
  return 1;
}

BOOL sub_2226C1A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  sub_2225CCBF8(v4, a1 + 16);
  return sub_2225D85D4(v5, v4[0], (size_t)v4[1], 0) != -1;
}

uint64_t sub_2226C1A94(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DF108;
  std::string::~string((std::string *)(a1 + 16));
  return a1;
}

uint64_t sub_2226C1AD8(uint64_t a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = sub_2226C19A0(a1, a2, a3, a4, a5, a6, a7, a8);
  *(void *)uint64_t v11 = &unk_26D4DF138;
  sub_2225D1A14((_DWORD *)(v11 + 56), a9, a10, 0);
  return a1;
}

void sub_2226C1B44()
{
  uint64_t v0 = (void *)sub_2226C1B40();

  j__free(v0);
}

BOOL sub_2226C1B6C(uint64_t a1, std::string *a2)
{
  return sub_2225D1A58(a1 + 56, a2);
}

uint64_t sub_2226C1B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225D1AE8((_DWORD *)(a1 + 56), a2, a3, 0);
}

uint64_t sub_2226C1B80(uint64_t a1)
{
  *(void *)a1 = &unk_26D4DF138;
  sub_2225D1A54((void **)(a1 + 56));

  return sub_2226C1A94(a1);
}

uint64_t sub_2226C1BD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226C1C00(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  }
  return result;
}

uint64_t sub_2226C1C30(uint64_t a1, int a2, void *a3)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  sub_2225F3C38((_DWORD *)a1, a2);
  sub_2226B9478(v20);
  sub_2225F3CB0(a3, v20);
  sub_2226C1DEC((uint64_t)v21);
  uint64_t v18 = sub_2225CA4D0((uint64_t)v20);
  uint64_t v19 = v6;
  sub_2225CA51C(&v18, (uint64_t)v17);
  sub_2225CCDE4((uint64_t)v21, (uint64_t)v17);
  std::string::~string(v17);
  int v22 = *(_DWORD *)sub_2225F3BDC(a3);
  int v25 = a2;
  v17[0].__r_.__value_.__r.__words[0] = sub_2226BE8F0(a3);
  v17[0].__r_.__value_.__l.__size_ = v7;
  uint64_t v8 = sub_2225C3C70((uint64_t)v17);
  uint64_t v9 = sub_2225F4D44(v17);
  if (v8 != v9)
  {
    uint64_t v10 = v9;
    do
    {
      uint64_t v11 = *(void *)v8;
      LODWORD(v19) = *(_DWORD *)(v8 + 8);
      uint64_t v18 = v11;
      sub_2225F39C4((uint64_t)&v23, (uint64_t)&v18);
      ++*(_DWORD *)(a1 + 40);
      v8 += 12;
    }
    while (v8 != v10);
  }
  uint64_t v18 = sub_2226BE920(a3);
  uint64_t v19 = v12;
  uint64_t v13 = sub_2225C3C70((uint64_t)&v18);
  uint64_t v14 = sub_2225F4D54(&v18);
  if (v13 != v14)
  {
    uint64_t v15 = v14;
    do
    {
      sub_2225F6160(v17, v13);
      sub_2225F3A80(v24, (uint64_t)v17);
      ++*(_DWORD *)(a1 + 44);
      sub_2225F4E0C(v17);
      v13 += 56;
    }
    while (v13 != v15);
  }
  sub_2226C1DF0((uint64_t *)(a1 + 16), (uint64_t)v21);
  sub_2226C1E4C(v21);
  return sub_2225CA520(v20);
}

uint64_t sub_2226C1DF0(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= *(void *)sub_2225D2650((uint64_t)a1, a2))
  {
    uint64_t result = sub_2226C2200(a1, a2);
  }
  else
  {
    sub_2226C218C((uint64_t)a1, a2);
    uint64_t result = v4 + 224;
  }
  a1[1] = result;
  return result;
}

void *sub_2226C1E50(void *result)
{
  *result += 224;
  return result;
}

uint64_t sub_2226C1E60(uint64_t a1)
{
  uint64_t result = sub_2226C1F58((uint64_t *)(a1 + 16));
  *(void *)(a1 + 40) = 0;
  return result;
}

void sub_2226C1E90()
{
  uint64_t v0 = (void *)sub_2226C1E8C();

  j__free(v0);
}

uint64_t sub_2226C1EB8(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD04(a1);
  sub_2225F3278((_DWORD *)(v2 + 24));
  sub_2226C1EF8(a1 + 32);
  sub_2226C1EFC(a1 + 80);
  return a1;
}

uint64_t sub_2226C1F00(uint64_t a1)
{
  return sub_2225F62A4(a1, 2u);
}

uint64_t sub_2226C1F08(uint64_t a1)
{
  return sub_2225F5B34(a1, 2u);
}

void sub_2226C1F10(std::string *a1)
{
  sub_2226C1F54(&a1[3].__r_.__value_.__r.__words[1]);
  sub_2225C56C4(&a1[1].__r_.__value_.__r.__words[1]);

  std::string::~string(a1);
}

uint64_t sub_2226C1F58(uint64_t *a1)
{
  uint64_t v2 = sub_2226B3EFC(a1);
  sub_2226C1FA0(a1);

  return nullsub_1(a1, v2);
}

uint64_t sub_2226C1FA0(uint64_t *a1)
{
  return sub_2226C1FA8((uint64_t)a1, *a1);
}

uint64_t sub_2226C1FA8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (i = *(void *)(result + 8); i != a2; uint64_t result = sub_2226C2010(v5, v7))
  {
    uint64_t v5 = sub_2225D2650(v3, a2);
    i -= 224;
    uint64_t v7 = nullsub_1(i, v6);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_2226C2014(uint64_t a1, uint64_t a2)
{
  return sub_2226C1E4C(a2);
}

uint64_t sub_2226C201C(void *a1)
{
  *a1 = &unk_26D4DF168;
  sub_2226C2070(a1 + 2);

  return nullsub_1(a1, v2);
}

uint64_t sub_2226C2074(uint64_t a1)
{
  sub_2225C64B8(&v3, a1);
  sub_2226C20B4(&v3);
  return a1;
}

uint64_t *sub_2226C20B4(uint64_t *a1)
{
  uint64_t result = (uint64_t *)*a1;
  if (*result)
  {
    sub_2226C1FA0(result);
    nullsub_1(*a1, v3);
    uint64_t v5 = sub_2225D2650(*a1, v4);
    uint64_t v6 = (void *)*a1;
    uint64_t v7 = *(void *)*a1;
    uint64_t v9 = sub_2226C2130(v6, v8);
    return (uint64_t *)sub_2226C212C(v5, v7, v9);
  }
  return result;
}

uint64_t sub_2226C2130(void *a1, uint64_t a2)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)sub_2225D2650((uint64_t)a1, a2) - *a1) >> 5);
}

uint64_t sub_2226C2178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 224 * a3, 8);
}

void *sub_2226C218C(uint64_t a1, uint64_t a2)
{
  sub_2226C22B0(&v9, a1, 1);
  uint64_t v5 = sub_2225D2650(a1, v4);
  uint64_t v7 = nullsub_1(v10, v6);
  sub_2226C22B4(v5, v7, a2);
  v10 += 224;
  return sub_2225D284C(&v9);
}

uint64_t sub_2226C2200(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D2650((uint64_t)a1, a2);
  uint64_t v5 = sub_2226B3EFC(a1);
  unint64_t v6 = sub_2226C2924(a1, v5 + 1);
  uint64_t v7 = sub_2226B3EFC(a1);
  sub_2226C29A0(v12, v6, v7, v4);
  uint64_t v9 = nullsub_1(v13, v8);
  sub_2226C22B4(v4, v9, a2);
  v13 += 224;
  sub_2226C29A4(a1, v12);
  uint64_t v10 = a1[1];
  sub_2226C2A94(v12);
  return v10;
}

void *sub_2226C22B8(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = a2;
  uint64_t v3 = *(void *)(a2 + 8);
  result[1] = v3;
  result[2] = v3 + 224 * a3;
  return result;
}

uint64_t sub_2226C22D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226C22DC(a2, a3);
}

uint64_t sub_2226C22E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = std::string::basic_string((std::string *)a1, (const std::string *)a2);
  LODWORD(v4[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
  sub_2226C2334(&v4[1].__r_.__value_.__r.__words[1], a2 + 32);
  sub_2226C2338(a1 + 80, a2 + 80);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  return a1;
}

const void **sub_2226C233C(const void **a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226C2384(a1, (uint64_t)a2);
  }
  return a1;
}

const void **sub_2226C2384(const void **a1, uint64_t a2)
{
  if (a1 != (const void **)a2)
  {
    unint64_t v4 = sub_2225F5AA4(a2);
    unint64_t v5 = sub_2225F5AA4((uint64_t)a1);
    if (v5 >= v4)
    {
      if (v4)
      {
        sub_2225C3C70(a2);
        sub_2225C3C70(a2);
        sub_2225C3C70((uint64_t)a1);
        uint64_t v10 = sub_2225F6B84();
      }
      else
      {
        uint64_t v10 = sub_2225C3C70((uint64_t)a1);
      }
      uint64_t v17 = v10;
      uint64_t v18 = sub_2225C3D04((uint64_t)a1);
      nullsub_1(v17, v18);
      uint64_t v16 = (uint64_t)a1;
      uint64_t v15 = v17;
    }
    else
    {
      unint64_t v6 = v5;
      if (sub_2225F6B1C((uint64_t)a1) >= v4)
      {
        if (v6)
        {
          sub_2225C3C70(a2);
          sub_2225C3C70(a2);
          sub_2225C3C70((uint64_t)a1);
          sub_2225F6B84();
        }
      }
      else
      {
        uint64_t v7 = sub_2225C3C70((uint64_t)a1);
        uint64_t v8 = sub_2225C3D04((uint64_t)a1);
        nullsub_1(v7, v8);
        uint64_t v9 = sub_2225C3C70((uint64_t)a1);
        sub_2225C5B6C((uint64_t)a1, v9);
        sub_2225F6058(a1, v4);
        unint64_t v6 = 0;
      }
      uint64_t v11 = 3 * v6;
      uint64_t v12 = (void *)(sub_2225C3C70(a2) + 12 * v6);
      uint64_t v13 = sub_2225C3D04(a2);
      uint64_t v14 = sub_2225C3C70((uint64_t)a1);
      sub_2225D0844(v12, v13, (void *)(v14 + 4 * v11));
      uint64_t v15 = sub_2225C3C70((uint64_t)a1) + 12 * v4;
      uint64_t v16 = (uint64_t)a1;
    }
    sub_2225C5B6C(v16, v15);
  }
  return a1;
}

void *sub_2226C2528(void *a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226C2570(a1, (uint64_t)a2);
  }
  return a1;
}

void *sub_2226C2570(void *a1, uint64_t a2)
{
  if (a1 != (void *)a2)
  {
    unint64_t v4 = sub_2225F5AE8(a2);
    unint64_t v5 = sub_2225F5AE8((uint64_t)a1);
    if (v5 >= v4)
    {
      if (v4)
      {
        sub_2225C3C70(a2);
        sub_2225C3C70(a2);
        sub_2225C3C70((uint64_t)a1);
        uint64_t v10 = sub_2226C2718();
      }
      else
      {
        uint64_t v10 = sub_2225C3C70((uint64_t)a1);
      }
      uint64_t v17 = v10;
      uint64_t v18 = sub_2225C3D04((uint64_t)a1);
      sub_2225F4DC8(v17, v18);
      uint64_t v16 = (uint64_t)a1;
      uint64_t v15 = v17;
    }
    else
    {
      unint64_t v6 = v5;
      if (sub_2225F6164((uint64_t)a1) >= v4)
      {
        if (v6)
        {
          sub_2225C3C70(a2);
          sub_2225C3C70(a2);
          sub_2225C3C70((uint64_t)a1);
          sub_2226C2718();
        }
      }
      else
      {
        uint64_t v7 = sub_2225C3C70((uint64_t)a1);
        uint64_t v8 = sub_2225C3D04((uint64_t)a1);
        sub_2225F4DC8(v7, v8);
        uint64_t v9 = sub_2225C3C70((uint64_t)a1);
        sub_2225C5B6C((uint64_t)a1, v9);
        sub_2225F6068(a1, v4);
        unint64_t v6 = 0;
      }
      uint64_t v11 = 56 * v6;
      uint64_t v12 = sub_2225C3C70(a2) + 56 * v6;
      uint64_t v13 = sub_2225C3D04(a2);
      uint64_t v14 = sub_2225C3C70((uint64_t)a1);
      sub_2226C2734(v12, v13, v14 + v11);
      uint64_t v15 = sub_2225C3C70((uint64_t)a1) + 56 * v4;
      uint64_t v16 = (uint64_t)a1;
    }
    sub_2225C5B6C(v16, v15);
  }
  return a1;
}

uint64_t sub_2226C2718()
{
  sub_2226C2738();
  return v0;
}

uint64_t sub_2226C2740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = (long long *)sub_2225C5E90(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = j_j_nullsub_1(a3);
  uint64_t v9 = sub_2226C27D0((uint64_t)&v14, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v14 = sub_2225C5F1C(a1, v9);
  uint64_t v13 = sub_2225C5F20(a3, v11);
  return sub_2225C5EEC((uint64_t)&v14, (uint64_t)&v13);
}

uint64_t sub_2226C27D0(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  unint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      sub_2226C2840(a4, v5);
      unint64_t v5 = (long long *)((char *)v5 + 56);
      a4 += 56;
    }
    while (v5 != a3);
    unint64_t v5 = a3;
  }
  uint64_t v8 = a4;
  uint64_t v9 = v5;
  return sub_2225C5EEC((uint64_t)&v9, (uint64_t)&v8);
}

uint64_t sub_2226C2840(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 13) = *(void *)((char *)a2 + 13);
  *(_OWORD *)a1 = v4;
  std::string::operator=((std::string *)(a1 + 24), (const std::string *)a2 + 1);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t sub_2226C2888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2226C28A4(a1, a2, a3);
  return v3;
}

uint64_t sub_2226C28A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3;
  uint64_t v7 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = a1;
    do
    {
      if (sub_2225C5C08()) {
        break;
      }
      sub_2225F6160(v6, v4);
      v4 += 56;
      v6 += 56;
      uint64_t v7 = v4;
    }
    while (v4 != a2);
  }
  sub_2225C5C10(&v8, &v7, &v6);
  return v8;
}

unint64_t sub_2226C2924(void *a1, unint64_t a2)
{
  unint64_t v10 = a2;
  unint64_t v4 = sub_2226C2A98((uint64_t)a1, a2);
  if (v4 < a2) {
    sub_2225D2A34();
  }
  unint64_t v6 = v4;
  unint64_t v7 = sub_2226C2130(a1, v5);
  if (v7 < v6 >> 1)
  {
    uint64_t v9 = 2 * v7;
    return *(void *)sub_2225CBA14(&v9, &v10);
  }
  return v6;
}

uint64_t sub_2226C29A4(uint64_t *a1, void *a2)
{
  nullsub_1(a1, a2);
  uint64_t v5 = sub_2225D2650((uint64_t)a1, v4);
  sub_2225D2C80(v15, a1[1]);
  sub_2225D2C80(v14, *a1);
  sub_2225D2C80(v13, a2[1]);
  v16[0] = sub_2226C2BF4(v5, v15[0], v15[1], v14[0], v14[1], v13[0], v13[1]);
  v16[1] = v6;
  a2[1] = sub_2225C3D04((uint64_t)v16);
  sub_2225C6448(a1, a2 + 1);
  sub_2225C6448(a1 + 1, a2 + 2);
  uint64_t v8 = (uint64_t *)sub_2225D2650((uint64_t)a1, v7);
  unint64_t v10 = (uint64_t *)sub_2225D2B20((uint64_t)a2, v9);
  sub_2225C6448(v8, v10);
  *a2 = a2[1];
  uint64_t v11 = sub_2226B3EFC(a1);
  return nullsub_1(a1, v11);
}

uint64_t sub_2226C2A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225D2650(a1, a2);
  uint64_t v5 = sub_2226C2AD8(v2);
  uint64_t v4 = sub_2225CBA18();
  return *(void *)sub_2225CAB38(&v5, &v4);
}

uint64_t sub_2226C2ADC()
{
  return 0x124924924924924;
}

uint64_t *sub_2226C2AF0(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  sub_2225D2AEC(a1 + 3, &v12, a4);
  if (a2)
  {
    uint64_t v7 = sub_2225D2B18((uint64_t)a1);
    uint64_t v8 = sub_2226C2B80(v7, a2);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = v8 + 224 * a3;
  a1[1] = v10;
  a1[2] = v10;
  *a1 = v8;
  *(void *)sub_2225D2B20((uint64_t)a1, v9) = v8 + 224 * v9;
  return a1;
}

uint64_t sub_2226C2B80(uint64_t a1, unint64_t a2)
{
  return sub_2226C2BA8(a1, a2);
}

uint64_t sub_2226C2BA8(uint64_t a1, unint64_t a2)
{
  if (sub_2226C2AD8(a1) < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(224 * a2, 8);
}

uint64_t sub_2226C2BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a2;
  v18[1] = a3;
  v17[0] = a4;
  v17[1] = a5;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  sub_2225D2CBC(&v13, a1, (uint64_t)&v15, (uint64_t)&v16);
  sub_2225D2C84(&v13, (uint64_t)&v14);
  while (sub_2225D2CC0((uint64_t)v18, (uint64_t)v17))
  {
    uint64_t v8 = sub_2226C2CC4((uint64_t)&v16);
    uint64_t v9 = sub_2226C2CC8((uint64_t)v18);
    sub_2226C2CC0(a1, v8, v9);
    sub_2226C2CD4((uint64_t)v18);
    sub_2226C2CD4((uint64_t)&v16);
  }
  sub_2225D2D18(&v14);
  uint64_t v10 = v16;
  j_nullsub_1(&v14, v11);
  return v10;
}

uint64_t sub_2226C2CC8(uint64_t a1)
{
  return *(void *)(a1 + 8) - 224;
}

uint64_t sub_2226C2CD4(uint64_t result)
{
  *(void *)(result + 8) -= 224;
  return result;
}

uint64_t sub_2226C2CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2226C2CF0(a2, a3);
}

uint64_t sub_2226C2CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225D1354(a1, a2);
  *(_DWORD *)(v4 + 24) = *(_DWORD *)(a2 + 24);
  sub_2226C2D48(v4 + 32, a2 + 32);
  sub_2226C2D4C(a1 + 80, a2 + 80);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  return a1;
}

uint64_t sub_2226C2D50(uint64_t a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226C2D98(a1, a2);
  }
  return a1;
}

uint64_t sub_2226C2D98(uint64_t a1, void *a2)
{
  if ((void *)a1 != a2)
  {
    if (sub_2225C603C(a2))
    {
      unint64_t v4 = sub_2225F5AA4((uint64_t)a2);
      unint64_t v5 = sub_2225F5AA4(a1);
      if (v5 >= v4)
      {
        uint64_t v13 = sub_2225C3C70(a1);
        if (v4)
        {
          uint64_t v14 = sub_2225C3C70((uint64_t)a2);
          uint64_t v15 = sub_2225C3D04((uint64_t)a2);
          uint64_t v13 = sub_2226C2F94(v14, v15, v13);
        }
        uint64_t v16 = sub_2225C3D04(a1);
        nullsub_1(v13, v16);
        uint64_t v17 = a1;
        uint64_t v18 = v13;
      }
      else
      {
        unint64_t v6 = v5;
        if (sub_2225F6B1C(a1) >= v4)
        {
          if (v6)
          {
            uint64_t v19 = sub_2225C3C70((uint64_t)a2);
            uint64_t v20 = sub_2225C3C70((uint64_t)a2) + 12 * v6;
            uint64_t v21 = sub_2225C3C70(a1);
            sub_2226C2F94(v19, v20, v21);
          }
        }
        else
        {
          uint64_t v7 = sub_2225C3C70(a1);
          uint64_t v8 = sub_2225C3D04(a1);
          nullsub_1(v7, v8);
          uint64_t v9 = sub_2225C3C70(a1);
          sub_2225C5B6C(a1, v9);
          sub_2225F6058((const void **)a1, v4);
          unint64_t v6 = 0;
        }
        uint64_t v22 = 3 * v6;
        uint64_t v23 = (void *)(sub_2225C3C70((uint64_t)a2) + 12 * v6);
        int v24 = sub_2225C3D04((uint64_t)a2);
        uint64_t v25 = sub_2225C3C70(a1);
        sub_2225E2BB8(v23, v24, (void *)(v25 + 4 * v22));
        uint64_t v18 = sub_2225C3C70(a1) + 12 * v4;
        uint64_t v17 = a1;
      }
      sub_2225C5B6C(v17, v18);
      sub_2225C5D90(a2);
    }
    else
    {
      uint64_t v10 = sub_2225C3C70(a1);
      uint64_t v11 = sub_2225C3D04(a1);
      nullsub_1(v10, v11);
      if (!sub_2225C603C((void *)a1))
      {
        uint64_t v12 = (void *)sub_2225C3C70(a1);
        free(v12);
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = a2[2];
      sub_22263161C(a2);
    }
  }
  return a1;
}

uint64_t sub_2226C2F98()
{
  sub_2226C2FB4();
  return v0;
}

void *sub_2226C2FB8(void *a1, void *a2)
{
  if (!sub_2225CF1D0(a2)) {
    sub_2226C3000(a1, a2);
  }
  return a1;
}

void *sub_2226C3000(void *a1, void *a2)
{
  if (a1 != a2)
  {
    if (sub_2225C603C(a2))
    {
      unint64_t v4 = sub_2225F5AE8((uint64_t)a2);
      unint64_t v5 = sub_2225F5AE8((uint64_t)a1);
      if (v5 >= v4)
      {
        uint64_t v13 = sub_2225C3C70((uint64_t)a1);
        if (v4)
        {
          uint64_t v14 = (long long *)sub_2225C3C70((uint64_t)a2);
          uint64_t v15 = (long long *)sub_2225C3D04((uint64_t)a2);
          uint64_t v13 = sub_2226C3200(v14, v15, v13);
        }
        uint64_t v16 = sub_2225C3D04((uint64_t)a1);
        sub_2225F4DC8(v13, v16);
        uint64_t v17 = (uint64_t)a1;
        uint64_t v18 = v13;
      }
      else
      {
        unint64_t v6 = v5;
        if (sub_2225F6164((uint64_t)a1) >= v4)
        {
          if (v6)
          {
            uint64_t v19 = (long long *)sub_2225C3C70((uint64_t)a2);
            uint64_t v20 = (long long *)(sub_2225C3C70((uint64_t)a2) + 56 * v6);
            uint64_t v21 = sub_2225C3C70((uint64_t)a1);
            sub_2226C3200(v19, v20, v21);
          }
        }
        else
        {
          uint64_t v7 = sub_2225C3C70((uint64_t)a1);
          uint64_t v8 = sub_2225C3D04((uint64_t)a1);
          sub_2225F4DC8(v7, v8);
          uint64_t v9 = sub_2225C3C70((uint64_t)a1);
          sub_2225C5B6C((uint64_t)a1, v9);
          sub_2225F6068(a1, v4);
          unint64_t v6 = 0;
        }
        uint64_t v22 = 56 * v6;
        uint64_t v23 = sub_2225C3C70((uint64_t)a2) + 56 * v6;
        uint64_t v24 = sub_2225C3D04((uint64_t)a2);
        uint64_t v25 = sub_2225C3C70((uint64_t)a1);
        sub_2225F61B0(v23, v24, v25 + v22);
        uint64_t v18 = sub_2225C3C70((uint64_t)a1) + 56 * v4;
        uint64_t v17 = (uint64_t)a1;
      }
      sub_2225C5B6C(v17, v18);
      sub_2225F3A3C(a2);
    }
    else
    {
      uint64_t v10 = sub_2225C3C70((uint64_t)a1);
      uint64_t v11 = sub_2225C3D04((uint64_t)a1);
      sub_2225F4DC8(v10, v11);
      if (!sub_2225C603C(a1))
      {
        uint64_t v12 = (void *)sub_2225C3C70((uint64_t)a1);
        free(v12);
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      sub_22263161C(a2);
    }
  }
  return a1;
}

uint64_t sub_2226C3200(long long *a1, long long *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    unint64_t v5 = a1;
    do
    {
      sub_2226361D8(a3, v5);
      unint64_t v5 = (long long *)((char *)v5 + 56);
      a3 += 56;
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t sub_2226C3258(uint64_t a1)
{
  uint64_t v1 = sub_2226C3280(a1);

  return nullsub_1(v1, v2);
}

uint64_t *sub_2226C3284(uint64_t *a1)
{
  sub_2226C32E4((uint64_t)a1);
  if (*a1)
  {
    uint64_t v2 = sub_2225D2B18((uint64_t)a1);
    uint64_t v3 = *a1;
    uint64_t v5 = sub_2226C32EC(a1, v4);
    sub_2226C212C(v2, v3, v5);
  }
  return a1;
}

uint64_t sub_2226C32E4(uint64_t a1)
{
  return sub_2226C3334(a1, *(void *)(a1 + 8));
}

uint64_t sub_2226C32EC(void *a1, uint64_t a2)
{
  return 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)sub_2225D2B20((uint64_t)a1, a2) - *a1) >> 5);
}

uint64_t sub_2226C3338(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = sub_2225D2B18(v3);
      uint64_t v5 = *(void *)(v3 + 16) - 224;
      *(void *)(v3 + 16) = v5;
      uint64_t v7 = nullsub_1(v5, v6);
      uint64_t result = sub_2226C2010(v4, v7);
    }
    while (*(void *)(v3 + 16) != a2);
  }
  return result;
}

void *sub_2226C33A4(void *a1, uint64_t a2)
{
  uint64_t result = sub_2226C33D8(a1, a2);
  *uint64_t result = &unk_26D4DF1B8;
  return result;
}

void *sub_2226C33D8(void *a1, uint64_t a2)
{
  *a1 = &unk_26D4DF1D8;
  a1[1] = a2;
  sub_2225D8FA4((uint64_t)(a1 + 2));
  sub_2225D8FA4((uint64_t)(a1 + 3));
  sub_2226C359C(a1 + 4);
  sub_2225D3A34(a1 + 9);
  uint64_t v3 = sub_2225C26A4(32);
  sub_222650624(v3);
  sub_222652F7C(&v5, v3);
  sub_22261501C(a1 + 9, &v5);
  sub_2226528DC(&v5);
  return a1;
}

void *sub_2226C3480(void *a1)
{
  *a1 = &unk_26D4DF1D8;
  uint64_t v2 = a1 + 2;
  sub_2226528DC(a1 + 9);
  sub_2226C35A0(a1 + 4);
  sub_2226C35A4(a1 + 3);
  sub_2226C35A8(v2);
  return a1;
}

void sub_2226C34E8()
{
  uint64_t v0 = (void *)sub_2226C34E4();

  j__free(v0);
}

void sub_2226C3510(std::string *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (std::string *)sub_2225CAD04(&v9);
  std::string::reserve(v5, 0xFF0uLL);
  sub_222609ACC(v8, &v9);
  sub_2225C64B8(&v7, (uint64_t)v8);
  uint64_t v6 = (const std::string *)sub_222609AD0(v8);
  sub_2226C3594(a1, v6);
  sub_2226489D8((uint64_t)a1, a3);
  sub_2225E8B2C(v8);
  std::string::~string(&v9);
}

std::string *sub_2226C3594(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 58, a2);
}

void sub_2226C35B0(void *a1)
{
  uint64_t v1 = sub_2226C35AC(a1);

  j__free(v1);
}

void *sub_2226C35D8(void *a1)
{
  uint64_t v2 = sub_2225D3A34(a1);
  sub_2225D8FA4((uint64_t)(v2 + 1));
  sub_2225D8FA4((uint64_t)(a1 + 2));
  sub_2225D8FA4((uint64_t)(a1 + 3));
  sub_2225D8FA4((uint64_t)(a1 + 4));
  return a1;
}

uint64_t sub_2226C3620(uint64_t a1)
{
  sub_2226489CC(a1 + 32);
  sub_2226C3674(a1 + 24);
  sub_2226C3678(a1 + 16);
  sub_2226C367C(a1 + 8);

  return sub_2226528D8(a1);
}

uint64_t sub_2226C3680(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225CBA80(a1 + 56, a2);

  return sub_2225C5B40(v2);
}

void *sub_2226C36AC(uint64_t a1, uint64_t a2)
{
  return sub_222648A20(a1 + 64, a2);
}

uint64_t sub_2226C36B4(uint64_t a1, uint64_t a2)
{
  sub_2225F326C(&v4, a2);
  sub_22261501C((uint64_t *)(a1 + 32), &v4);
  return sub_2226528D8(&v4);
}

void sub_2226C36F8(uint64_t a1, uint64_t a2)
{
}

void sub_2226C3700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226C4AB0(v7, v4);
  }
}

void sub_2226C3770(uint64_t a1, uint64_t a2)
{
}

void sub_2226C3778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226C4AE4(v7, v4);
  }
}

void sub_2226C37E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 16;
  uint64_t v5 = sub_2225C26A4(480);
  uint64_t v6 = sub_2225C3D04(a1);
  uint64_t v7 = sub_2226C392C(a1);
  uint64_t v9 = sub_2226AA504(a1, v8);
  sub_222688BC0(v5, v6, v7, a2, v9);
  sub_2226C38BC(v4, v5);
  uint64_t v10 = sub_2225C26A4(104);
  uint64_t v12 = sub_2226AA504(a1, v11);
  uint64_t v14 = sub_2226AA4F8(a1, v13);
  sub_2226A2F60(v10, v12, v14);

  sub_2226C3934(a1 + 24, v10);
}

void sub_2226C38BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226C4B18(v7, v4);
  }
}

uint64_t sub_2226C392C(uint64_t a1)
{
  return sub_2225C3C70(a1 + 72);
}

void sub_2226C3934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226C4B4C(v7, v4);
  }
}

uint64_t sub_2226C39A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = off_26B5C7AB0;
  if ((*(unsigned char *)off_26B5C7AB0(&off_26B5C7AB0) & 1) == 0)
  {
    uint64_t v97 = (std::string *)sub_2225C26A4(24);
    sub_2225CC854(v97);
    unsigned int v98 = (void *)off_26B5C7A98(&off_26B5C7A98);
    sub_2225CDDC8((uint64_t)v98, (uint64_t)v97);
    _tlv_atexit((void (__cdecl *)(void *))sub_2226C3F8C, v98);
    *(unsigned char *)v8(&off_26B5C7AB0) = 1;
  }
  uint64_t v9 = off_26B5C7AE0;
  if ((*(unsigned char *)off_26B5C7AE0(&off_26B5C7AE0) & 1) == 0)
  {
    uint64_t v99 = sub_2225C26A4(48);
    uint64_t v100 = off_26B5C7A98(&off_26B5C7A98);
    uint64_t v102 = sub_2225CBA80(v100, v101);
    sub_2225CBDEC((uint64_t)v118, v102);
    sub_2225DA4D4(v99, (uint64_t)v118);
    uint64_t v103 = (void *)off_26B5C7AC8();
    sub_2225CDDC8((uint64_t)v103, v99);
    _tlv_atexit((void (__cdecl *)(void *))sub_2226C3F90, v103);
    *(unsigned char *)v9(&off_26B5C7AE0) = 1;
  }
  uint64_t v10 = off_26B5C7B10;
  if ((*(unsigned char *)off_26B5C7B10(&off_26B5C7B10) & 1) == 0)
  {
    uint64_t v104 = sub_2225C26A4(280);
    uint64_t v105 = off_26B5C7AC8();
    uint64_t v107 = sub_2225CBA80(v105, v106);
    uint64_t v108 = sub_2226C3F94(v104, v107);
    sub_2226C3F98(v108);
    uint64_t v109 = (void *)off_26B5C7AF8(&off_26B5C7AF8);
    _tlv_atexit((void (__cdecl *)(void *))sub_2226C3F9C, v109);
    *(unsigned char *)v10(&off_26B5C7B10) = 1;
  }
  uint64_t v11 = off_26B5C7B40;
  if ((*(unsigned char *)off_26B5C7B40(&off_26B5C7B40) & 1) == 0)
  {
    uint64_t v110 = sub_2225C26A4(16);
    uint64_t v111 = sub_2226C3FA0(v110);
    sub_2226C3FA4(v111);
    char v112 = (void *)off_26B5C7B28(&off_26B5C7B28);
    _tlv_atexit((void (__cdecl *)(void *))sub_2226C3FA8, v112);
    *(unsigned char *)v11(&off_26B5C7B40) = 1;
  }
  uint64_t v12 = sub_2225C26A4(80);
  sub_2226C3478(v12, a1);
  sub_2225CDDC8(a4, v12);
  if (*(unsigned char *)(a2 + 112))
  {
    uint64_t v14 = sub_2225C26A4(232);
    sub_2226BEB38(v14, a3);
    sub_2225F3478(a3, v14, 1);
  }
  uint64_t v15 = sub_2225CBA80(a4, v13);
  uint64_t v16 = sub_2225C26A4(808);
  uint64_t v18 = sub_2225CBA80(a4, v17);
  uint64_t v19 = sub_2226B0BFC(v18);
  sub_22260AFFC(v16, a3, v19, 0);
  sub_2225F3270(v117, v16);
  sub_2226C36B4(v15, (uint64_t)v117);
  sub_2226528D8(v117);
  uint64_t v21 = sub_2225CBA80(a4, v20);
  uint64_t v22 = sub_2225C26A4(240);
  sub_222607AE4(v22);
  sub_2226C3770(v21, v22);
  uint64_t v24 = sub_2225CBA80(a4, v23);
  uint64_t v26 = sub_2226AA84C(v24, v25);
  sub_222607ABC(v26, 1);
  uint64_t v28 = sub_2225CBA80(a4, v27);
  uint64_t v30 = (void *)sub_2226AA84C(v28, v29);
  *v30 &= ~1uLL;
  uint64_t v32 = sub_2225CBA80(a4, v31);
  uint64_t v33 = sub_2226C392C(v32);
  sub_2226A1614(v33, 1);
  sub_2226C3FAC(v118);
  uint64_t v34 = off_26B5C7A98(&off_26B5C7A98);
  uint64_t v36 = (const std::string *)sub_2225CBA80(v34, v35);
  uint64_t v37 = (std::string *)sub_2225C3C70((uint64_t)v118);
  std::string::operator=(v37, v36);
  uint64_t v38 = sub_2225C26A4(1120);
  sub_2225C3D00((int)v115, "/");
  sub_2226C3FE8(v38, v115[0], v115[1]);
  sub_2225F3270(v116, v38);
  uint64_t v39 = sub_2225C26A4(1216);
  sub_2225F326C(v114, v116);
  uint64_t v41 = sub_2225CBA80(a4, v40);
  uint64_t v42 = sub_2226B0C30(v41);
  uint64_t v44 = sub_2225CBA80(a4, v43);
  uint64_t v46 = (void *)sub_2226AA84C(v44, v45);
  uint64_t v47 = off_26B5C7AF8(&off_26B5C7AF8);
  uint64_t v48 = sub_2225C3C70(v47);
  sub_222616620(v39, (uint64_t)v114, v42, a3, v46, v48);
  sub_22261670C(v114);
  uint64_t v50 = sub_2225CBA80(a4, v49);
  uint64_t v51 = sub_2225C26A4(2128);
  uint64_t v52 = sub_2225C26A4(296);
  sub_2226C3FEC();
  sub_2225F3270(v113, v52);
  uint64_t v54 = sub_2225CBA80(a4, v53);
  uint64_t v56 = sub_2226AA84C(v54, v55);
  uint64_t v58 = sub_2225CBA80(a4, v57);
  uint64_t v59 = sub_2226B0C30(v58);
  uint64_t v60 = off_26B5C7B28(&off_26B5C7B28);
  uint64_t v61 = sub_2225C3C70(v60);
  sub_222648784(v51, (uint64_t)v113, a3, v56, v59, v39, v61, 0, 1, 0);
  sub_2226C36F8(v50, v51);
  sub_2226489D0(v113);
  uint64_t v63 = sub_2225CBA80(a4, v62);
  uint64_t v65 = sub_2226AA504(v63, v64);
  uint64_t v67 = sub_2225CBA80(a4, v66);
  uint64_t v68 = sub_2226C392C(v67);
  sub_2226C3FF0(v65, v68);
  uint64_t v70 = sub_2225CBA80(a4, v69);
  uint64_t v71 = sub_2225C26A4(32);
  uint64_t v73 = sub_2225CBA80(a4, v72);
  uint64_t v75 = sub_2226AA504(v73, v74);
  uint64_t v76 = sub_222690A98(v75);
  sub_2226C3FF8(v71, v76);
  sub_2226C36AC(v70, v71);
  uint64_t v78 = sub_2225CBA80(a4, v77);
  uint64_t v80 = (std::string *)sub_2226AA504(v78, v79);
  uint64_t v82 = sub_2225CBA80(a4, v81);
  sub_2226C392C(v82);
  uint64_t v83 = sub_2225C3C70(v47);
  sub_2226C3510(v80, v84, v83);
  uint64_t v86 = sub_2225CBA80(a4, v85);
  uint64_t v88 = sub_2226AA504(v86, v87);
  uint64_t v89 = sub_222690A98(v88);
  uint64_t v91 = sub_2225CBA80(a4, v90);
  uint64_t v93 = sub_2226C3FFC(v91, v92);
  sub_2226ABAD4(v89, v93);
  uint64_t v95 = sub_2225CBA80(a4, v94);
  sub_2226C37E8(v95, a3);
  sub_22261670C(v116);
  return sub_2226135CC(v118);
}

uint64_t sub_2226C3FAC@<X0>(void *a1@<X8>)
{
  j_j_nullsub_1(&v3);
  return sub_2226C4EA0(a1);
}

uint64_t sub_2226C3FF0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 80) = a2;
  return result;
}

uint64_t sub_2226C3FFC(uint64_t a1, uint64_t a2)
{
  return sub_2225CBA80(a1 + 64, a2);
}

uint64_t sub_2226C4004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v31[3] = *MEMORY[0x263EF8340];
  uint64_t v8 = a2 + 8;
  if (!sub_2225D4774((const std::string *)(a2 + 8), "-"))
  {
    sub_2226C39A4(a1, a2, a3, (uint64_t)v28);
    if (sub_2225CBBF8(v8, v12))
    {
      sub_2225F379C(a3, 4727, (uint64_t)v27);
      uint64_t v14 = (uint64_t *)v27;
    }
    else
    {
      uint64_t v16 = sub_2225CBA80((uint64_t)v28, v13);
      uint64_t v17 = (_DWORD *)sub_2226B0BFC(v16);
      uint64_t v19 = sub_2225CBA80((uint64_t)v28, v18);
      uint64_t v20 = sub_2226B0C30(v19);
      sub_2225CCBF8(v26, v8);
      uint64_t v21 = sub_2225F89F4(v17, v26[0], (size_t)v26[1], 0, 1);
      if (v21)
      {
        uint64_t v22 = v21;
        sub_2225F3278(&v24);
        int v23 = sub_22263006C(v20, v22, v24, 0, 0, 0);
        sub_2226C4344(v20, v23);
        sub_2225CDDCC(a4, v28);
        return sub_2226A9C10(v28);
      }
      sub_2225F379C(a3, 409, (uint64_t)v31);
      sub_2225CCBF8(v25, v8);
      sub_2225F3774(v31, v25[0], v25[1]);
      uint64_t v14 = v31;
    }
    sub_2225F37F0(v14);
    sub_2225D8FA4(a4);
    return sub_2226A9C10(v28);
  }
  sub_2225CD4EC();
  if (sub_2225D35C0((uint64_t)v31))
  {
    uint64_t v10 = j_nullsub_1(v31, v9);
    sub_2225CDDCC(v29, v10);
    sub_2226C4204(a1, a2, a3, (uint64_t)v29, a4);
    sub_2225CDC18(v29);
  }
  else
  {
    sub_2225F379C(a3, 410, (uint64_t)v30);
    sub_2225F37F0(v30);
    sub_2225D8FA4(a4);
  }
  return sub_2225D35D0((uint64_t)v31, v11);
}

uint64_t sub_2226C4204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_2226C39A4(a1, a2, a3, a5);
  uint64_t v9 = sub_2225CBA80(a5, v8);
  uint64_t v11 = sub_2226B0C30(v9);
  if (*(_DWORD *)(a2 + 104))
  {
    uint64_t v12 = sub_2225CBA80(a5, v10);
    uint64_t v13 = (_DWORD *)sub_2226B0BFC(v12);
    uint64_t v15 = sub_2225CBA80(a4, v14);
    uint64_t v16 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)v15 + 16))(v15);
    sub_2225C3D00((int)v26, v16);
    uint64_t v17 = sub_2225F8DC0(v13, v26[0], v26[1], 0, 0);
    sub_2225F3278(&v25);
    int v18 = sub_22263006C(v11, v17, v25, 0, 0, 0);
    sub_2226C4344(v11, v18);
    uint64_t v20 = sub_2225CE10C(a4, v19);
    return sub_22260BF50(v11, v17, v20, 0);
  }
  else
  {
    uint64_t v22 = sub_2225CE10C(a4, v10);
    sub_2225F3278(&v24);
    int v23 = sub_2226490F0(v11, v22, 0, 0, 0, v24);
    return sub_2226C4344(v11, v23);
  }
}

uint64_t sub_2226C4344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 576) = a2;
  return result;
}

uint64_t sub_2226C434C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  if (a3) {
    uint64_t v8 = "#abc// expected-error{{}} \n";
  }
  else {
    uint64_t v8 = " // Begin \n";
  }
  sub_2225C3D00((int)v45, v8);
  sub_2225C3D00((int)v44, "Empty");
  uint64_t v9 = sub_2225CD198(v45[0], v45[1], v44[0], v44[1], 0);
  sub_2225CDDC8((uint64_t)v46, v9);
  sub_2226C450C((uint64_t)v43);
  v43[112] = a3;
  sub_2225CDDCC(v41, v46);
  sub_2226C4204(a1, (uint64_t)v43, a2, (uint64_t)v41, (uint64_t)v42);
  sub_2225CDC18(v41);
  uint64_t v11 = sub_2225CBA80((uint64_t)v42, v10);
  uint64_t v13 = sub_2226AA504(v11, v12);
  sub_222648FA0(v13);
  if (a3)
  {
    uint64_t v15 = sub_2225CBA80((uint64_t)v42, v14);
    uint64_t v17 = sub_2226C3680(v15, v16);
    uint64_t v18 = sub_2226AA844(v17);
    uint64_t v20 = sub_2225CBA80((uint64_t)v42, v19);
    uint64_t v22 = sub_2226AA84C(v20, v21);
    uint64_t v24 = sub_2225CBA80((uint64_t)v42, v23);
    uint64_t v26 = sub_2226AA504(v24, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v18 + 24))(v18, v22, v26);
    sub_22261B6AC(v40);
    uint64_t v28 = sub_2225CBA80((uint64_t)v42, v27);
    uint64_t v30 = sub_2226AA504(v28, v29);
    sub_222649758(v30, v40);
    uint64_t v32 = sub_2225CBA80((uint64_t)v42, v31);
    uint64_t v34 = sub_2226C3680(v32, v33);
    uint64_t v35 = sub_2226AA844(v34);
    (*(void (**)(uint64_t))(*(void *)v35 + 32))(v35);
  }
  uint64_t v36 = sub_2225CBA80((uint64_t)v42, v14);
  uint64_t v38 = (uint64_t *)sub_2226AAE40(v36, v37);
  sub_2226A2F94(v38);
  sub_2225CDDCC(a4, v42);
  sub_2226A9C10(v42);
  sub_2226C4510(v43);
  return sub_2225CDC18(v46);
}

void *sub_2226C4514(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)sub_222613388(a1, a2);
  *uint64_t result = &unk_26D4DF1F8;
  return result;
}

void sub_2226C454C()
{
  uint64_t v0 = (void *)sub_2226C4548();

  j__free(v0);
}

void *sub_2226C4594(uint64_t a1)
{
  uint64_t result = (void *)sub_2226C45CC(a1, 0);
  *uint64_t result = &unk_26D4DF328;
  return result;
}

uint64_t sub_2226C45CC(uint64_t result, char a2)
{
  *(void *)uint64_t result = &unk_26D4DC450;
  *(unsigned char *)(result + 8) = a2;
  *(unsigned char *)(result + 9) = 0;
  return result;
}

void sub_2226C45F8()
{
  uint64_t v0 = (void *)j_j_nullsub_1_130();

  j__free(v0);
}

uint64_t sub_2226C4620()
{
  sub_222686B94(&v1);
  return v1;
}

uint64_t sub_2226C464C()
{
  return 0;
}

uint64_t sub_2226C4654()
{
  return 0;
}

uint64_t sub_2226C465C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[0] = a2;
  v6[1] = a3;
  uint64_t v4 = sub_2225F3264((_DWORD *)a1);
  sub_2225CA51C(v6, (uint64_t)(v4 + 2));
  sub_2225D250C((void *)(a1 + 32));
  sub_2225D250C((void *)(a1 + 56));
  sub_2225CAD04(a1 + 80);
  sub_2225CAD04(a1 + 104);
  sub_2225CAD04(a1 + 128);
  *(unsigned char *)(a1 + 152) &= 0xFCu;
  *(void *)(a1 + 156) = 0x28DE8000093A80;
  *(void *)(a1 + 168) = 0;
  sub_2226C4708(a1 + 176);
  sub_2226C4708(a1 + 632);
  sub_2225D250C((void *)(a1 + 1088));
  *(unsigned char *)(a1 + 1112) = *(unsigned char *)(a1 + 1112) & 0x80 | 7;
  return a1;
}

uint64_t sub_2226C470C(uint64_t a1)
{
  uint64_t v2 = sub_2226C473C();
  sub_2225D250C((void *)(v2 + 432));
  return a1;
}

uint64_t sub_2226C4740(uint64_t a1)
{
  uint64_t v2 = sub_222648740();
  sub_222693740(v2 + 408);
  return a1;
}

uint64_t sub_2226C4770(uint64_t a1)
{
  uint64_t v2 = sub_2225F3264((_DWORD *)a1);
  sub_2225D250C((void *)v2 + 1);
  sub_2225D250C((void *)(a1 + 32));
  sub_2225D250C((void *)(a1 + 56));
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a1 + 80) & 0xFC | 1;
  sub_2225CAD04(a1 + 88);
  sub_2225D250C((void *)(a1 + 112));
  *(_WORD *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 138) = 0;
  sub_222693740(a1 + 144);
  int v5 = 0;
  char v4 = 1;
  sub_222648730(a1 + 168, &v5, &v4);
  sub_2225CAD04(a1 + 176);
  sub_2225CAD04(a1 + 200);
  *(unsigned char *)(a1 + 224) = 1;
  sub_2225D250C((void *)(a1 + 232));
  sub_2225D250C((void *)(a1 + 256));
  *(unsigned char *)(a1 + 280) = 0;
  *(_DWORD *)(a1 + 284) = 0;
  sub_2225D3A34((void *)(a1 + 288));
  return a1;
}

void *sub_2226C4838(void *a1, uint64_t a2)
{
  char v4 = sub_222646C7C(a1);
  sub_2225F3264((_DWORD *)v4 + 2);
  *a1 = &unk_26D4DC4F0;
  a1[2] = a2;
  a1[3] = sub_22264C658();
  return a1;
}

uint64_t sub_2226C4898(uint64_t a1)
{
  *(_DWORD *)a1 = 2;
  sub_2225CAD04(a1 + 8);
  sub_2225D250C((void *)(a1 + 32));
  sub_2225CAD04(a1 + 56);
  sub_2225CAD04(a1 + 80);
  *(void *)(a1 + 104) = 0;
  *(_WORD *)(a1 + 112) = 256;
  return a1;
}

uint64_t sub_2226C48EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226C4930(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226C495C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226C4988(uint64_t a1)
{
  return a1;
}

void sub_2226C49B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226C4A24(v7, v4);
  }
}

void sub_2226C4A24(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_22264A0F8(a2);
    j__free(v2);
  }
}

uint64_t sub_2226C4A58(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226C4A84(uint64_t a1)
{
  return a1;
}

void sub_2226C4AB0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2226489D4(a2);
    j__free(v2);
  }
}

void sub_2226C4AE4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2226220B8(a2);
    j__free(v2);
  }
}

void sub_2226C4B18(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_222688C38(a2);
    j__free(v2);
  }
}

void sub_2226C4B4C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2226A2F90(a2);
    j__free(v2);
  }
}

uint64_t sub_2226C4B80(uint64_t a1)
{
  return a1;
}

void sub_2226C4BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(std::string **)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    int v7 = j_nullsub_1(a1, v6);
    sub_2226C4C1C(v7, v4);
  }
}

void sub_2226C4C1C(int a1, std::string *this)
{
  if (this)
  {
    std::string::~string(this);
    j__free(v2);
  }
}

uint64_t sub_2226C4C50(uint64_t a1)
{
  return a1;
}

void sub_2226C4C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(std::string **)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    int v7 = j_nullsub_1(a1, v6);
    sub_2226C4CEC(v7, v4);
  }
}

void sub_2226C4CEC(int a1, std::string *this)
{
  if (this)
  {
    j_std::string::~string(this);
    j__free(v2);
  }
}

uint64_t sub_2226C4D20(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_2226C4D48(&v2);
}

void *sub_2226C4D50()
{
  uint64_t result = (void *)off_26B5C7AF8();
  *uint64_t result = v1;
  return result;
}

uint64_t *sub_2226C4D7C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2226C4DA4(uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result) {
    return sub_2226C4DBC(result);
  }
  return result;
}

uint64_t sub_2226C4DBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

uint64_t sub_2226C4DE0(uint64_t a1)
{
  uint64_t v2 = a1;
  return sub_2226C4E08(&v2);
}

void *sub_2226C4E10()
{
  uint64_t result = (void *)off_26B5C7B28();
  *uint64_t result = v1;
  return result;
}

uint64_t *sub_2226C4E3C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2226C4E64(uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result) {
    return sub_2226C4E7C(result);
  }
  return result;
}

uint64_t sub_2226C4E7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

uint64_t sub_2226C4EA0@<X0>(void *a1@<X8>)
{
  sub_2226C4F04((uint64_t)v7, 1);
  uint64_t v2 = sub_2225C5B40((uint64_t)v7);
  sub_2226C4F08(v2);
  uint64_t v3 = sub_2225F6714((uint64_t)v7);
  uint64_t v5 = sub_2225D2B20(v3, v4);
  sub_2226156A0(v5, v3, a1);
  return sub_2226C4F0C(v7);
}

uint64_t sub_2226C4F10(uint64_t a1, uint64_t a2)
{
  *(void *)(j_j_nullsub_1(a1) + 8) = a2;
  *(void *)(a1 + 16) = sub_2226C4F58();
  return a1;
}

uint64_t sub_2226C4F5C(uint64_t a1, unint64_t a2)
{
  if (sub_2226C4FA8() < a2) {
    sub_2225CBA24();
  }

  return sub_2225CBA78(192 * a2, 8);
}

uint64_t sub_2226C4FAC()
{
  return 0x155555555555555;
}

void *sub_2226C4FB8(void *a1)
{
  uint64_t v2 = sub_222614BD4(a1, 0);
  *uint64_t v2 = &unk_26D4DF368;
  sub_222615800((uint64_t)(v2 + 3), (uint64_t)&v8);
  sub_2225D2B20((uint64_t)a1, v3);
  uint64_t v5 = sub_2225D2B20((uint64_t)a1, v4);
  sub_2226C502C((uint64_t)&v7, v5);
  return a1;
}

void sub_2226C5034()
{
  uint64_t v0 = (void *)sub_2226C5030();

  j__free(v0);
}

uint64_t sub_2226C5060(uint64_t a1, uint64_t a2)
{
  sub_2225D2B20(a1, a2);
  j_j_nullsub_1(&v7);
  sub_222615800(a1 + 24, v3);
  uint64_t v5 = nullsub_1(a1, v4);
  return sub_2226C5240(&v7, v5, 1);
}

uint64_t sub_2226C50B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 160) = 0;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return sub_2226C50DC(a2);
}

uint64_t sub_2226C50E0(uint64_t a1)
{
  uint64_t v2 = sub_2225CAD04(a1);
  sub_2225CAD04(v2 + 24);
  sub_2225CAD04(a1 + 48);
  sub_2225CAD04(a1 + 72);
  sub_2225CAD04(a1 + 96);
  sub_2225D250C((void *)(a1 + 120));
  sub_2225D250C((void *)(a1 + 144));
  return a1;
}

void sub_2226C5138(std::__shared_weak_count *a1, uint64_t a2)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26D4DF368;
  sub_222615800((uint64_t)&a1[1], a2);

  std::__shared_weak_count::~__shared_weak_count(a1);
}

uint64_t sub_2226C518C(uint64_t a1, uint64_t a2)
{
  sub_2225D2B20(a1, a2);
  uint64_t v4 = sub_2225D2B20(a1, v3);
  return sub_2226C51CC(&v6, v4);
}

uint64_t sub_2226C51D0(uint64_t a1, uint64_t a2)
{
  return sub_2226C51D8(a2);
}

void sub_2226C51DC(std::string *a1)
{
  sub_2225D2510(&a1[6]);
  sub_2225D2510(&a1[5]);
  std::string::~string(a1 + 4);
  std::string::~string(a1 + 3);
  std::string::~string(a1 + 2);
  std::string::~string(a1 + 1);

  std::string::~string(a1);
}

uint64_t sub_2226C5244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2225CBA08(a2, 192 * a3, 8);
}

uint64_t sub_2226C5258(uint64_t a1)
{
  return a1;
}

uint64_t sub_2226C5280(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1) {
    return sub_2226C5240(result, v1, *(void *)(result + 8));
  }
  return result;
}

uint64_t sub_2226C5294@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v6 = (unsigned char *)off_26B5C7B70();
  if (*v6)
  {
    char v7 = v6;
    sub_2225D1280();
    char v8 = (unsigned char *)off_26B5C7B58();
    *char v8 = v9;
    *char v7 = 0;
  }
  else
  {
    char v8 = (unsigned char *)off_26B5C7B58();
  }
  uint64_t v10 = sub_2225C26A4(16);
  sub_2225F3660(v10);
  sub_2225F3270(v20, v10);
  uint64_t v11 = sub_2225C26A4(136);
  sub_2226C5408();
  sub_2225F3270(&v19, v11);
  int v12 = *v8;
  uint64_t v13 = sub_2225C3C70((uint64_t)&v19);
  *(_DWORD *)(v13 + 4) = *(_DWORD *)(v13 + 4) & 0xFFFF7FFF | (v12 << 15);
  if (a2)
  {
    uint64_t v14 = sub_2225C26A4(48);
    sub_2226C540C();
  }
  else
  {
    uint64_t v14 = sub_2225C26A4(72);
    uint64_t v15 = sub_2225C3C70((uint64_t)&v19);
    sub_2226BE30C(v14, a1, v15, 0);
  }
  uint64_t v16 = sub_2225C26A4(1216);
  uint64_t v17 = sub_2225C3C70((uint64_t)&v19);
  sub_2225F339C(v16, (uint64_t)v20, v17, v14, 1);
  sub_2225CDDC8(a3, v16);
  sub_2225F346C(&v19);
  return sub_2225F3470(v20);
}

BOOL sub_2226C5410(uint64_t a1, uint64_t a2)
{
  v5[13] = *MEMORY[0x263EF8340];
  sub_2226C5498(v5, a1, a2);
  sub_2226C54E0(v5, 0, 0);
  BOOL v3 = sub_2226C549C((uint64_t)v5, v2);
  sub_2226C54DC((uint64_t)v5);
  return v3;
}

BOOL sub_2226C549C(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_2225DF1DC(a1 + 40, a2);
  if (result)
  {
    uint64_t v4 = sub_2226AA844(*(void *)(a1 + 16));
    return sub_2225F5830(v4) == 0;
  }
  return result;
}

uint64_t sub_2226C54E0(void *a1, uint64_t a2, char a3)
{
  char v4 = a2;
  uint64_t v6 = (uint64_t)(a1 + 5);
  uint64_t result = sub_2225DF1DC((uint64_t)(a1 + 5), a2);
  if (result)
  {
    uint64_t v9 = sub_2225CBA80(v6, v8);
    uint64_t v11 = sub_2226AA504(v9, v10);
    uint64_t v13 = sub_2225CBA80(v6, v12);
    uint64_t v15 = (uint64_t *)sub_2226AAE40(v13, v14);
    uint64_t v17 = sub_2225CBA80(v6, v16);
    uint64_t v19 = (uint64_t *)sub_2226AA4F8(v17, v18);
    sub_222648FA0(v11);
    if ((v4 & 1) == 0) {
      sub_2226C6084(a1);
    }
    sub_2226C5EF0((uint64_t)a1, v20);
    sub_2226A2F94(v15);
    sub_222688EC0(v19);
    sub_2226A99C8((uint64_t)v15);
    if ((a3 & 1) == 0)
    {
      uint64_t v21 = sub_2225C3C70((uint64_t)(a1 + 3));
      sub_2225CCBF8(v39, a1[1] + 80);
      sub_22268199C(v21, v39[0], v39[1]);
      uint64_t v23 = sub_2225CBA80(v6, v22);
      uint64_t v24 = sub_2225C3D04(v23);
      uint64_t v37 = sub_2226ABDF8(v24);
      uint64_t v38 = v25;
      uint64_t v26 = (uint64_t *)sub_2225C3C70((uint64_t)&v37);
      uint64_t v27 = sub_2225DC1A0(&v37);
      if (v26 != (uint64_t *)v27)
      {
        uint64_t v28 = (uint64_t *)v27;
        do
        {
          uint64_t v29 = *v26++;
          uint64_t v30 = sub_2225C3C70((uint64_t)(a1 + 3));
          sub_2226816C8(v30, v29);
        }
        while (v26 != v28);
      }
    }
    sub_222689240((uint64_t)v19);
    if (sub_2226C549C((uint64_t)a1, v31))
    {
      uint64_t v33 = sub_2225CBA80(v6, v32);
      uint64_t v34 = sub_2225C3D04(v33);
      uint64_t v37 = sub_2226ABDF8(v34);
      uint64_t v38 = v35;
      sub_2225C3C70((uint64_t)&v37);
      sub_2225DC1A0(&v37);
    }
    sub_2226C6380((uint64_t)a1, v32);
    return sub_2226C5F9C((uint64_t)a1, v36);
  }
  return result;
}

BOOL sub_2226C5664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[13] = *MEMORY[0x263EF8340];
  sub_2225CDDCC(v8, a2);
  sub_2226C5708(v9, a1, a3, (uint64_t)v8);
  sub_2225CDC18(v8);
  sub_2226C54E0(v9, 0, 0);
  BOOL v6 = sub_2226C549C((uint64_t)v9, v5);
  sub_2226C54DC((uint64_t)v9);
  return v6;
}

uint64_t sub_2226C570C(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_2226C5714(uint64_t a1)
{
  uint64_t v2 = sub_2225F3264((_DWORD *)a1);
  sub_2225CAD04(v2 + 10);
  sub_2225CAD04(a1 + 64);
  sub_2225D250C((void *)(a1 + 88));
  sub_2225D250C((void *)(a1 + 112));
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a1 + 4) & 0xFFFF8000 | 0xF0;
  sub_2226C57B4(a1, 0);
  *(_DWORD *)(a1 + 4) &= ~0x8000u;
  sub_2226C57CC(a1, 0);
  *(_DWORD *)(a1 + 4) &= 0xFFF0FFFF;
  *(void *)(a1 + 24) = 8;
  *(void *)(a1 + 8) = 0x600000000;
  *(void *)(a1 + 16) = 0xA0000000ALL;
  return a1;
}

uint64_t sub_2226C57B4(uint64_t result, char a2)
{
  *(void *)(result + 32) = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFCLL | a2 & 3;
  return result;
}

uint64_t sub_2226C57CC(uint64_t result, char a2)
{
  *(void *)(result + 32) = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFBLL | (4 * (a2 & 1));
  return result;
}

void *sub_2226C57E0(void *a1)
{
  uint64_t v2 = sub_2226BE2EC(a1);
  *uint64_t v2 = &unk_26D4DF168;
  sub_2225D250C(v2 + 2);
  a1[5] = 0;
  return a1;
}

void *sub_2226C582C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2225C26A4(936);
  sub_2226510D4(v6);
  sub_2225CDDC8((uint64_t)a1, v6);
  a1[1] = a2;
  a1[2] = a3;
  sub_2225CCC70(a1 + 3);
  uint64_t v8 = sub_2225CBA80((uint64_t)a1, v7);
  sub_2226C4004(v8, a2, a1[2], (uint64_t)(a1 + 5));
  sub_22260826C(a1 + 6);
  if (sub_2225DF1DC((uint64_t)(a1 + 5), v9))
  {
    uint64_t v10 = sub_2225C26A4(200);
    sub_2226C5920(v10, a1[2]);
    sub_2226C58DC(a1 + 3);
  }
  return a1;
}

uint64_t sub_2226C58DC(uint64_t *a1)
{
  sub_2226C5924(v3);
  sub_2225F9EC8(v3, a1);
  return sub_2226135CC(v3);
}

uint64_t *sub_2226C5928(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  sub_2225CDDC8((uint64_t)v9, a2);
  uint64_t v4 = sub_2225C26A4(32);
  j_j_nullsub_1(&v8);
  sub_2226C59AC(v4, a2);
  a1[1] = v4;
  sub_2225CE10C((uint64_t)v9, v5);
  nullsub_1(a1, v6);
  sub_2226C59B0(v9);
  return a1;
}

void *sub_2226C59B4(void *a1, uint64_t a2)
{
  uint64_t v7 = a2;
  BOOL v3 = sub_222614BD4(a1, 0);
  *BOOL v3 = &unk_26D4DF3A0;
  uint64_t v4 = v3 + 3;
  sub_2225CE144(v6, &v7, &v9);
  sub_2225CE144(v4, v6, &v8);
  return a1;
}

void sub_2226C5A30(std::__shared_weak_count *a1)
{
  j_std::__shared_weak_count::~__shared_weak_count(a1);

  j__free(v1);
}

uint64_t sub_2226C5A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 24;
  uint64_t v3 = j_nullsub_1(a1 + 24, a2);
  uint64_t v5 = j_nullsub_1(v3, v4);
  uint64_t v7 = j_nullsub_1(v2, v6);
  char v9 = (uint64_t *)j_nullsub_1(v7, v8);
  sub_2226C5B1C(v5, *v9);
  uint64_t v11 = j_nullsub_1(v2, v10);

  return j_nullsub_1(v11, v12);
}

uint64_t sub_2226C5AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 24;
  j_nullsub_1(a1 + 24, a2);
  j_j_nullsub_1(&v8);
  j_nullsub_1(v3, v4);
  uint64_t v6 = nullsub_1(a1, v5);
  return sub_2225F7F00((uint64_t)&v8, v6, 1);
}

void sub_2226C5B1C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_2226C5B50(a2);
    j__free(v2);
  }
}

uint64_t sub_2226C5B54(uint64_t a1)
{
  sub_2225E4D6C(a1 + 168);

  return sub_2226C5B90(a1);
}

uint64_t sub_2226C5B94(uint64_t a1)
{
  uint64_t v2 = a1 + 24;
  sub_2226C5BDC();
  sub_2225E1434(v2);

  return sub_2226C5BE0(a1);
}

void *sub_2226C5BE4(void *result)
{
  if (result[2])
  {
    uint64_t v1 = result;
    uint64_t v2 = (void *)sub_2226857B4((uint64_t)result);
    v1[2] = v2;
    return sub_2225C6954(v2, (uint64_t)v2);
  }
  return result;
}

uint64_t sub_2226C5C3C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_2226C5C7C(a1);
    uint64_t v2 = sub_2226857B4(a1);
    nullsub_1(v2, v3);
  }
  return a1;
}

uint64_t sub_2226C5C7C(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_222685778(result);
    uint64_t v3 = sub_2226C5D3C(v1);
    return sub_2226C5CDC(v1, v2, v3);
  }
  return result;
}

uint64_t sub_2226C5CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  if (sub_2225DE624(&v6, &v5)) {
    sub_2226C5D80(a1, v6);
  }
  return v5;
}

uint64_t sub_2226C5D3C(uint64_t a1)
{
  sub_2226857B4(a1);
  uint64_t v2 = sub_2226857B4(a1);
  sub_2225C64B8(&v4, v2);
  return v4;
}

void sub_2226C5D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v2 = sub_2226858A4(a1, &v3);
  sub_2225E8DCC(v2);
}

uint64_t sub_2226C5DA0()
{
  return v1;
}

uint64_t sub_2226C5DB0(uint64_t a1)
{
  return a1;
}

void sub_2226C5DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)j_nullsub_1(a1, a2);
  *(void *)j_nullsub_1(a1, v5) = a2;
  if (v4)
  {
    uint64_t v7 = j_nullsub_1(a1, v6);
    sub_2226C5B1C(v7, v4);
  }
}

uint64_t sub_2226C5E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2226C5E84();
  *(void *)(v4 + 160) = a2;
  sub_2225E50E8(v4 + 168);
  return a1;
}

uint64_t sub_2226C5E88(uint64_t a1)
{
  uint64_t v2 = sub_2226C5EB8();
  sub_2225E0EC4((void *)(v2 + 24));
  return a1;
}

uint64_t sub_2226C5EC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = j_nullsub_1(a1, a2);
  return a1;
}

uint64_t sub_2226C5EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 40;
  uint64_t result = sub_2225DF1DC(a1 + 40, a2);
  if (result)
  {
    uint64_t v5 = sub_2226AA844(*(void *)(a1 + 16));
    uint64_t v7 = sub_2225CBA80(v3, v6);
    uint64_t v9 = sub_2226AA84C(v7, v8);
    uint64_t v11 = sub_2225CBA80(v3, v10);
    uint64_t v13 = sub_2226AA504(v11, v12);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v5 + 24);
    return v14(v5, v9, v13);
  }
  return result;
}

uint64_t sub_2226C5F9C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2225DF1DC(a1 + 40, a2);
  if (result)
  {
    uint64_t v4 = sub_2226AA844(*(void *)(a1 + 16));
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
    uint64_t v5 = *(uint64_t (**)(void))(*(void *)sub_2226AA844(*(void *)(a1 + 16)) + 40);
    return v5();
  }
  return result;
}

uint64_t sub_2226C6038(uint64_t a1)
{
  sub_2225C56C4(a1 + 48);
  sub_2226A9C10(a1 + 40);
  sub_2226135CC(a1 + 24);

  return sub_2226AEBEC(a1);
}

uint64_t sub_2226C6084(void *a1)
{
  if (!sub_2225CF1D0((void *)(a1[1] + 32)) || (uint64_t result = sub_2225CF1D0(a1 + 6), (result & 1) == 0))
  {
    uint64_t v4 = sub_2225CBA80((uint64_t)(a1 + 5), v2);
    uint64_t v6 = sub_2226AA504(v4, v5);
    uint64_t v8 = sub_2225CBA80((uint64_t)(a1 + 5), v7);
    uint64_t v10 = sub_2226AA4F8(v8, v9);
    uint64_t v12 = sub_2225CBA80((uint64_t)(a1 + 5), v11);
    uint64_t v13 = (_DWORD *)sub_2226B0BFC(v12);
    uint64_t v15 = sub_2225CBA80((uint64_t)(a1 + 5), v14);
    uint64_t v16 = sub_2226B0C30(v15);
    uint64_t v17 = (void *)sub_2225C26A4(24);
    sub_2226C6520(v17, v6);
    sub_222649E64(v6, (uint64_t)v17);
    sub_222688EAC(v10);
    sub_2226C6524((uint64_t)v43);
    if (!sub_2225CF1D0(a1 + 6))
    {
      uint64_t v18 = (uint64_t *)sub_2225C3C70((uint64_t)(a1 + 6));
      uint64_t v19 = sub_2225C3D04((uint64_t)(a1 + 6));
      if (v18 != (uint64_t *)v19)
      {
        uint64_t v20 = (uint64_t *)v19;
        do
        {
          uint64_t v21 = *v18;
          uint64_t v22 = v18[1];
          v18 += 2;
          sub_2225C3D00((int)v42, "Prelude");
          uint64_t v23 = sub_2225CD198(v21, v22, v42[0], v42[1], 0);
          sub_2225F3278(&v41);
          LODWORD(v37) = sub_2226490F0(v16, v23, 0, 0, 0, v41);
          sub_2225CC08C((uint64_t)v43, &v37);
        }
        while (v18 != v20);
      }
    }
    if (sub_2225CF1D0((void *)(a1[1] + 32))
      || (v34[0] = sub_2225D2E88((uint64_t *)(a1[1] + 32)),
          uint64_t v40 = sub_2225D24C8(a1[1] + 32),
          !sub_2225D0DF0((uint64_t)v34, (uint64_t)&v40)))
    {
LABEL_11:
      uint64_t v37 = sub_222608270((uint64_t)v43);
      uint64_t v38 = v27;
      v34[0] = sub_2226082A0((uint64_t)v43);
      v34[1] = v28;
      while (sub_2225D2CC0((uint64_t)&v37, (uint64_t)v34))
      {
        unsigned int v29 = *(_DWORD *)sub_2226C6528((uint64_t)&v37);
        sub_2225F3278(&v33);
        sub_22263F1C8(v6, v29, 0, v33);
        sub_2226C6534((uint64_t)&v37);
      }
      uint64_t v37 = sub_222608270((uint64_t)v43);
      uint64_t v38 = v30;
      uint64_t v31 = (int *)sub_2226C6528((uint64_t)&v37);
      sub_2226C6544((uint64_t)v17, *v31);
    }
    else
    {
      while (1)
      {
        uint64_t v24 = sub_2225C3C70((uint64_t)v34);
        sub_2225CCBF8(v39, v24);
        uint64_t v25 = sub_2225F89F4(v13, v39[0], (size_t)v39[1], 0, 1);
        if (!v25) {
          break;
        }
        uint64_t v26 = v25;
        sub_2225F3278(&v35);
        LODWORD(v37) = sub_22263006C(v16, v26, v35, 0, 0, 0);
        sub_2225CC08C((uint64_t)v43, &v37);
        sub_2225F3950(v34);
        if (!sub_2225D0DF0((uint64_t)v34, (uint64_t)&v40)) {
          goto LABEL_11;
        }
      }
      sub_2225F379C(a1[2], 409, (uint64_t)&v37);
      uint64_t v32 = sub_2225C3C70((uint64_t)v34);
      sub_2225CCBF8(v36, v32);
      sub_2225F3774(&v37, v36[0], v36[1]);
      sub_2225F37F0(&v37);
    }
    return sub_2225C56C4(v43);
  }
  return result;
}

void sub_2226C6380(uint64_t a1, uint64_t a2)
{
  if (!sub_2225CBBF8(*(void *)(a1 + 8) + 56, a2))
  {
    sub_2225CAD04(&v25);
    uint64_t v3 = (unsigned char *)sub_2225CBED0(*(void *)(a1 + 8) + 56);
    sub_2225E85AC((uint64_t)v24, v3, (uint64_t)&v25, 0);
    if (sub_2225CBBF8((uint64_t)&v25, v4))
    {
      uint64_t v6 = sub_2225CBA80(a1 + 40, v5);
      uint64_t v7 = sub_2225C3D04(v6);
      v23[0] = sub_2226ABDF8(v7);
      v23[1] = v8;
      uint64_t v9 = (uint64_t *)sub_2225C3C70((uint64_t)v23);
      uint64_t v10 = sub_2225DC1A0(v23);
      if (v9 != (uint64_t *)v10)
      {
        uint64_t v11 = (uint64_t *)v10;
        do
        {
          v20[0] = sub_2226760FC(*v9);
          v20[1] = v12;
          uint64_t v13 = (unsigned __int16 **)sub_2225C3C70((uint64_t)v20);
          for (uint64_t i = sub_2225DC1A0(v20); v13 != (unsigned __int16 **)i; ++v13)
          {
            uint64_t v15 = *v13;
            if (sub_2226551F4(*v13))
            {
              uint64_t v16 = sub_222654540((uint64_t)v15);
              uint64_t v18 = sub_2225CA568((uint64_t)v24, v16, v17);
              sub_2225CA524((uint64_t)v18, " ");
            }
          }
          ++v9;
        }
        while (v9 != v11);
      }
      sub_2225E87F8((uint64_t)v24);
    }
    else
    {
      sub_2225F379C(*(void *)(a1 + 16), 427, (uint64_t)v23);
      sub_2225CCBF8(v22, *(void *)(a1 + 8) + 56);
      uint64_t v19 = sub_2225F3774(v23, v22[0], v22[1]);
      sub_2225CCBF8(v21, &v25);
      sub_2225F3774(v19, v21[0], v21[1]);
      sub_2225F37F0(v23);
    }
    sub_2225E8708(v24);
    std::string::~string(&v25);
  }
}

uint64_t sub_2226C6528(uint64_t a1)
{
  return *(void *)(a1 + 8) - 4;
}

uint64_t sub_2226C6534(uint64_t result)
{
  *(void *)(result + 8) -= 4;
  return result;
}

uint64_t sub_2226C6544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 16) = a2;
  return result;
}

void *sub_2226C654C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_222635438(a1);
  *uint64_t v4 = &unk_26D4DF3D8;
  v4[1] = a2;
  sub_2225F3278((_DWORD *)v4 + 4);
  return a1;
}

uint64_t sub_2226C6598(uint64_t result, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v7 = a5;
  if (a3 == 1)
  {
    uint64_t v5 = result;
    uint64_t result = sub_2225F5218(&v7, (_DWORD *)(result + 16));
    if (result)
    {
      sub_22261B6AC(v6);
      sub_22261FB44((uint64_t)v6);
      sub_22261F2AC((uint64_t)v6, 525);
      return sub_2226C6604(*(void *)(v5 + 8), (unint64_t)v6);
    }
  }
  return result;
}

uint64_t sub_2226C6604(uint64_t a1, unint64_t a2)
{
  sub_2226334F4(a1, a2);
  unint64_t v4 = sub_2225C3C70(a1 + 1928) + 24 * *(void *)(a1 + 1984);

  return sub_2226C6664(a1 + 1928, v4, a2);
}

uint64_t sub_2226C6664(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2;
  if (sub_2225C3D04(a1) == a2)
  {
    sub_22260BC64(a1, a3);
    return sub_2225C3D04(a1) - 24;
  }
  else
  {
    if (*(void *)(a1 + 8) >= *(void *)(a1 + 16))
    {
      unint64_t v6 = v4 - sub_2225C3C70(a1);
      sub_2226119B0((const void **)a1, 0);
      unint64_t v4 = sub_2225C3C70(a1) + v6;
    }
    uint64_t v7 = sub_2225C3D04(a1);
    uint64_t v8 = sub_2225E2698(a1);
    uint64_t v9 = *(void *)(v8 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(void *)(v7 + 16) = v9;
    sub_2225C3D04(a1);
    sub_2225C3D04(a1);
    sub_222645598();
    uint64_t v10 = sub_2225C3D04(a1);
    sub_2225C5B6C(a1, v10 + 24);
    if (v4 <= a3) {
      a3 += 24 * (*(void *)(a1 + 8) > a3);
    }
    long long v11 = *(_OWORD *)a3;
    *(_DWORD *)(v4 + 15) = *(_DWORD *)(a3 + 15);
    *(_OWORD *)unint64_t v4 = v11;
  }
  return v4;
}

uint64_t sub_2226C6778(uint64_t a1)
{
  return sub_2225CC380(a1, 2u);
}

void *sub_2226C6780(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2225C26A4(936);
  sub_2226510D4(v8);
  sub_2225CDDC8((uint64_t)a1, v8);
  a1[1] = a2;
  a1[2] = a3;
  sub_2225CCC70(a1 + 3);
  uint64_t v10 = sub_2225CBA80((uint64_t)a1, v9);
  uint64_t v11 = a1[2];
  sub_2225CDDCC(v15, a4);
  sub_2226C4204(v10, a2, v11, (uint64_t)v15, (uint64_t)(a1 + 5));
  sub_2225CDC18(v15);
  sub_22260826C(a1 + 6);
  if (sub_2225DF1DC((uint64_t)(a1 + 5), v12))
  {
    uint64_t v13 = sub_2225C26A4(200);
    sub_2226C5920(v13, a1[2]);
    sub_2226C58DC(a1 + 3);
  }
  return a1;
}

uint64_t *sub_2226C6870(uint64_t **a1, uint64_t **a2)
{
  return sub_2226C687C(*a1, *a2);
}

void fosl_frontend_parseFile(uint64_t a1)
{
  sub_2226C450C((uint64_t)v2);
  sub_2225CBC18(&v3, a1);
}

uint64_t sub_2226C68B0()
{
  sub_2226C68D0((uint64_t)v1);
  return sub_2226C4510(v1);
}

BOOL sub_2226C68D0(uint64_t a1)
{
  uint64_t v2 = sub_2225E8A38();
  sub_2226C5294(v2, 0, (uint64_t)v7);
  uint64_t v4 = sub_2225CBA80((uint64_t)v7, v3);
  BOOL v5 = sub_2226C5410(a1, v4);
  sub_2226AEBE8(v7);
  return v5;
}

uint64_t fosl_frontend_parseString(char *a1, void *a2)
{
  sub_2226C450C((uint64_t)v20);
  sub_2225C3D00((int)v18, a1);
  sub_2225C3D00((int)v17, "Source");
  uint64_t v4 = sub_2225CD198(v18[0], v18[1], v17[0], v17[1], 0);
  sub_2225CDDC8((uint64_t)v19, v4);
  sub_2225CAD04(&v16);
  sub_222609ACC(v15, &v16);
  sub_2226C5294((uint64_t)v15, 0, (uint64_t)v14);
  sub_2225CDDCC(v13, v19);
  uint64_t v6 = sub_2225CBA80((uint64_t)v14, v5);
  sub_2226C5664((uint64_t)v20, (uint64_t)v13, v6);
  sub_2225CDC18(v13);
  sub_2225E86DC(v15);
  if (sub_2225CBBF8((uint64_t)&v16, v7))
  {
    *a2 = 0;
  }
  else
  {
    unsigned int v9 = sub_2225CB920((uint64_t)&v16, v8);
    uint64_t v10 = malloc_type_malloc(v9 + 1, 0x95E5B39BuLL);
    *a2 = v10;
    uint64_t v11 = (const void *)sub_2225CBED0(&v16);
    memcpy(v10, v11, v9);
    *(unsigned char *)(*a2 + v9) = 0;
  }
  sub_2226AEBE8(v14);
  sub_2225E8B2C(v15);
  std::string::~string(&v16);
  sub_2225CDC18(v19);
  return sub_2226C4510(v20);
}

uint64_t fosl_createParser()
{
  uint64_t v0 = sub_2225C26A4(272);
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  sub_2226C6B38((void *)v0);
  uint64_t v1 = sub_2225E8A38();
  sub_2226C5294(v1, 1, (uint64_t)v6);
  sub_2226C6B3C(v0 + 120, (uint64_t)v6);
  sub_2226AEBE8(v6);
  uint64_t v2 = sub_2225C26A4(200);
  uint64_t v4 = sub_2225CBA80(v0 + 120, v3);
  sub_2226C5920(v2, v4);
  sub_2226C58DC((uint64_t *)(v0 + 136));
  return v0;
}

uint64_t sub_2226C6B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2225CE10C(a2, a2);
  sub_2226AEC1C(a1, v4);
  j_j_nullsub_1(a2);
  j_nullsub_1(a1, v5);
  return a1;
}

void fosl_destroyParser(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = (void *)sub_2226C6BB8();
    j__free(v1);
  }
}

uint64_t fosl_setPrimarySource(uint64_t a1, char *a2)
{
  uint64_t v4 = a1 + 120;
  uint64_t v5 = sub_2225CBA80(a1 + 120, (uint64_t)a2);
  sub_2225F3C24(v5);
  uint64_t v7 = sub_2225CBA80(v4, v6);
  sub_2225F32E0(v7);
  uint64_t v9 = sub_2225CBA80(v4, v8);
  uint64_t v10 = *(void (***)(void))sub_2226AA844(v9);
  (*v10)();
  sub_2225C3D00((int)v19, a2);
  sub_2225C3D00((int)v18, "Source");
  uint64_t v11 = sub_2225CD198(v19[0], v19[1], v18[0], v18[1], 0);
  sub_2225CDDC8((uint64_t)v20, v11);
  uint64_t v12 = sub_2225C26A4(104);
  uint64_t v14 = sub_2225CBA80(v4, v13);
  sub_2226C6D10(v17, (void *)(a1 + 136));
  sub_2225CDDCC(&v16, v20);
  sub_2226C6D14(v12, a1, v14, v17, &v16);
  sub_2226C6CF8((uint64_t *)(a1 + 128), v12);
  sub_2225CDC18(&v16);
  sub_2226135CC(v17);
  return sub_2225CDC18(v20);
}

void sub_2226C6CF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3) {
    sub_2226C9648(v3);
  }
}

uint64_t fosl_addPrelude(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_2225C3C70(a1 + 128);
  sub_2225C3D00((int)v5, a2);
  return sub_2226C6D64(v3, v5[0], v5[1]);
}

uint64_t sub_2226C6D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&long long v4 = a2;
  *((void *)&v4 + 1) = a3;
  return sub_2225CC69C(a1 + 48, &v4);
}

uint64_t fosl_parseShader(uint64_t a1)
{
  uint64_t v1 = (void *)sub_2225C3C70(a1 + 128);

  return sub_2226C6DBC(v1, v2);
}

uint64_t sub_2226C6DBC(void *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)(a1 + 5);
  uint64_t result = sub_2225DF1DC((uint64_t)(a1 + 5), a2);
  if (result)
  {
    uint64_t v6 = sub_2225CBA80(v3, v5);
    uint64_t v8 = sub_2226AA504(v6, v7);
    uint64_t v10 = sub_2225CBA80(v3, v9);
    uint64_t v12 = (uint64_t *)sub_2226AAE40(v10, v11);
    uint64_t v14 = sub_2225CBA80(v3, v13);
    uint64_t v16 = (uint64_t *)sub_2226AA4F8(v14, v15);
    sub_222648FA0(v8);
    sub_2226C6084(a1);
    sub_2226C5EF0((uint64_t)a1, v17);
    sub_2226A2F94(v12);
    sub_222688EC0(v16);
    sub_2226A99C8((uint64_t)v12);
    uint64_t v18 = sub_2225C3C70((uint64_t)(a1 + 3));
    sub_2225CCBF8(v36, a1[1] + 80);
    sub_22268199C(v18, v36[0], v36[1]);
    uint64_t v20 = sub_2225CBA80(v3, v19);
    uint64_t v21 = sub_2225C3D04(v20);
    uint64_t v34 = sub_2226ABDF8(v21);
    uint64_t v35 = v22;
    uint64_t v23 = (uint64_t *)sub_2225C3C70((uint64_t)&v34);
    uint64_t v24 = sub_2225DC1A0(&v34);
    if (v23 != (uint64_t *)v24)
    {
      std::string v25 = (uint64_t *)v24;
      do
      {
        uint64_t v26 = *v23++;
        uint64_t v27 = sub_2225C3C70((uint64_t)(a1 + 3));
        sub_2226816C8(v27, v26);
      }
      while (v23 != v25);
    }
    sub_222689240((uint64_t)v16);
    if (sub_2226C549C((uint64_t)a1, v28))
    {
      uint64_t v30 = sub_2225CBA80(v3, v29);
      uint64_t v31 = sub_2225C3D04(v30);
      uint64_t v34 = sub_2226ABDF8(v31);
      uint64_t v35 = v32;
      sub_2225C3C70((uint64_t)&v34);
      sub_2225DC1A0(&v34);
    }
    sub_2226C6380((uint64_t)a1, v29);
    return sub_2226C5F9C((uint64_t)a1, v33);
  }
  return result;
}

uint64_t fosl_codeComplete(uint64_t a1, char *a2, unsigned int a3, _DWORD *a4)
{
  *(void *)(a1 + 104) = 0x100000001;
  fosl_setPrimarySource(a1, a2);
  uint64_t v7 = sub_2225C3C70(a1 + 128);
  uint64_t v9 = sub_2225CBA80(v7 + 40, v8);
  uint64_t v10 = sub_2226B0C30(v9);
  unsigned int v11 = sub_2226370DC(v10);
  *(_DWORD *)(a1 + 104) = sub_22260D3AC(v10, v11, a3, 0);
  *(_DWORD *)(a1 + 108) = sub_22260CFC0(v10, v11, a3, 0);

  return sub_2226C6FDC(a1, a4);
}

uint64_t sub_2226C6FDC(uint64_t a1, _DWORD *a2)
{
  long long v4 = (void *)sub_2225C3C70(a1 + 128);
  uint64_t v6 = sub_2225CBA80((uint64_t)(v4 + 5), v5);
  uint64_t v7 = sub_2226B0C30(v6);
  uint64_t v9 = sub_2226AA504(v6, v8);
  unsigned int v10 = sub_2226370DC(v7);
  unint64_t v11 = sub_22262CE08(v7, v10);
  sub_222648B00(v9, v11, *(_DWORD *)(a1 + 104), *(_DWORD *)(a1 + 108));
  uint64_t v13 = sub_2225CBA80(a1 + 120, v12);
  sub_22263BB84(v13, 1);
  sub_2226C6DBC(v4, v14);
  if (!sub_2226C549C((uint64_t)v4, v15)) {
    return 0;
  }
  uint64_t v17 = sub_2226AAE40(v6, v16);
  uint64_t v18 = (uint64_t *)sub_2226C570C(v17);
  uint64_t v19 = sub_2225D2E88(v18);
  uint64_t v20 = sub_2225D24C8((uint64_t)v18);
  sub_2226C80D8(v19, v20);
  *a2 = sub_2225D4970(v18);

  return sub_2225F3960(v18, v21);
}

uint64_t fosl_codeCompleteLineColumn(uint64_t a1, char *a2, int a3, int a4, _DWORD *a5)
{
  *(_DWORD *)(a1 + 104) = a3;
  *(_DWORD *)(a1 + 108) = a4;
  fosl_setPrimarySource(a1, a2);

  return sub_2226C6FDC(a1, a5);
}

uint64_t fosl_getNumDiagnostics(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2225CBA80(a1 + 120, a2);
  uint64_t v3 = sub_2226AA844(v2);

  return sub_2226B0F00(v3);
}

char *fosl_getDiagnostics(uint64_t a1)
{
  uint64_t v2 = sub_2225C3C70(a1 + 128);
  uint64_t v4 = sub_2225CBA80(v2 + 40, v3);
  uint64_t v5 = (_DWORD *)sub_2226B0C30(v4);
  uint64_t v7 = sub_2225CBA80(a1 + 120, v6);
  uint64_t v8 = sub_2226AA844(v7);
  uint64_t v9 = (uint64_t *)(a1 + 224);
  unsigned int v10 = (uint64_t *)(a1 + 248);
  sub_2225F3530(v9);
  sub_2226B1278(v10);
  unsigned int v11 = sub_2225CDCEC(v8);
  sub_2226B12C0(v9, v11);
  unsigned int v12 = sub_222613BA4(v8);
  sub_2226B133C(v10, v12);
  unsigned int v13 = sub_2226B0F00(v8);
  if (!v13) {
    return 0;
  }
  uint64_t v54 = (char *)malloc_type_malloc(56 * v13, 0x1070040AB968983uLL);
  uint64_t v61 = sub_2226B13B8(v8);
  uint64_t v60 = sub_2226BDCE4(v8);
  if (sub_2225D0DF0((uint64_t)&v61, (uint64_t)&v60))
  {
    int v58 = 0;
    uint64_t v53 = v4;
    do
    {
      unsigned int v56 = sub_2225D4970(v9);
      uint64_t v15 = sub_2225F3960(&v61, v14) + 32;
      uint64_t v16 = (unsigned int *)sub_2225C3C70(v15);
      for (uint64_t i = sub_2225C3D04(v15); v16 != (unsigned int *)i; v16 += 3)
      {
        int v18 = sub_22261C6A4(v16);
        v59.n128_u32[0] = sub_2226B144C(v5, v18);
        int v19 = sub_222613088(v16);
        v59.n128_u32[1] = sub_2226B144C(v5, v19);
        sub_2226B13F0(v9, (uint64_t)&v59);
      }
      unsigned int v55 = sub_2225D36D8(v10);
      uint64_t v21 = sub_2225F3960(&v61, v20) + 80;
      uint64_t v22 = (unsigned int *)sub_2225C3C70(v21);
      for (uint64_t j = sub_2225C3D04(v21); v22 != (unsigned int *)j; v22 += 14)
      {
        int v25 = sub_22261C6A4(v22);
        unsigned int v26 = sub_222613088(v22);
        if (sub_22261C7D4((uint64_t)v22))
        {
          uint64_t v28 = sub_2226AA84C(v4, v27);
          unsigned int v26 = sub_22261C1E8(v26, 0, v5, v28);
        }
        __n128 v59 = 0uLL;
        v59.n128_u32[0] = sub_2226B144C(v5, v25);
        v59.n128_u32[1] = sub_2226B144C(v5, v26);
        v59.n128_u64[1] = 0;
        if (sub_2225CBBF8((uint64_t)(v22 + 6), v29)) {
          sub_222622284(v22 + 3);
        }
        else {
          v59.n128_u64[1] = sub_2225CBED0(v22 + 6);
        }
        sub_2226B146C(v10, &v59);
      }
      uint64_t v30 = sub_2225F3960(&v61, v23);
      unsigned int v31 = sub_2226B144C(v5, *(_DWORD *)(v30 + 24));
      uint64_t v33 = sub_2225F3960(&v61, v32);
      int v34 = sub_2225F5AA4(v33 + 32);
      uint64_t v36 = sub_2225F3960(&v61, v35);
      int v37 = sub_2225F5AE8(v36 + 80);
      uint64_t v39 = sub_2225F3960(&v61, v38);
      uint64_t v40 = sub_2225CBED0(v39);
      unsigned int v41 = sub_2226370DC((uint64_t)v5);
      int v42 = sub_22260D3AC((uint64_t)v5, v41, v31, 0);
      unsigned int v43 = sub_2226370DC((uint64_t)v5);
      int v57 = sub_22260CFC0((uint64_t)v5, v43, v31, 0);
      uint64_t v45 = v40;
      if (v34) {
        uint64_t v46 = sub_2225F3960(v9, v44) + 8 * v56;
      }
      else {
        uint64_t v46 = 0;
      }
      int v47 = v34;
      if (v37) {
        uint64_t v48 = sub_2225F3960(v10, v44) + 16 * v55;
      }
      else {
        uint64_t v48 = 0;
      }
      uint64_t v49 = sub_2225F3960(&v61, v44);
      int v50 = sub_2226ADE4C(*(_DWORD *)(v49 + 216));
      uint64_t v51 = &v54[56 * v58];
      *(void *)uint64_t v51 = v45;
      *((_DWORD *)v51 + 2) = v31;
      *((_DWORD *)v51 + 3) = v42;
      *((_DWORD *)v51 + 4) = v57;
      *((_DWORD *)v51 + 5) = v47;
      *((void *)v51 + 3) = v46;
      *((_DWORD *)v51 + 8) = v37;
      *((void *)v51 + 5) = v48;
      *((_DWORD *)v51 + 12) = v50;
      ++v58;
      sub_2226C1E50(&v61);
      uint64_t v4 = v53;
    }
    while (sub_2225D0DF0((uint64_t)&v61, (uint64_t)&v60));
  }
  return v54;
}

void fosl_removeSpecialization(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v4, a2);
  sub_222682564(v3, v4[0], v4[1]);
}

uint64_t fosl_specializeFloat(uint64_t a1, char *a2, float a3)
{
  uint64_t v5 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v7, a2);
  return sub_2226829AC(v5, v7[0], v7[1], a3);
}

uint64_t fosl_specializeInt(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v7, a2);
  return sub_222682B18(v5, v7[0], v7[1], a3);
}

uint64_t fosl_specializeUInt(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v7, a2);
  return sub_222682B18(v5, v7[0], v7[1], a3);
}

uint64_t fosl_specializeBool(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v7, a2);
  return sub_222682C08(v5, v7[0], v7[1], a3);
}

uint64_t fosl_specializeFloatVector(uint64_t a1, char *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v10, a2);
  sub_2225C3D0C(v9, a3, a4);
  return sub_222682A20(v7, v10[0], v10[1], v9[0], v9[1]);
}

uint64_t fosl_specializeIntVector(uint64_t a1, char *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v10, a2);
  sub_2225C3D0C(v9, a3, a4);
  return sub_222682B8C(v7, v10[0], v10[1], v9[0], v9[1]);
}

uint64_t fosl_specializeUIntVector(uint64_t a1, char *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v10, a2);
  sub_2225C3D0C(v9, a3, a4);
  return sub_222682B8C(v7, v10[0], v10[1], v9[0], v9[1]);
}

uint64_t fosl_specializeBoolVector(uint64_t a1, char *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7 = sub_2225C3C70(a1 + 136);
  sub_2225C3D00((int)v10, a2);
  sub_2225C3D0C(v9, a3, a4);
  return sub_222682C80(v7, v10[0], v10[1], v9[0], v9[1]);
}

uint64_t fosl_specializeFloatMatrix(uint64_t a1, char *a2, uint64_t a3, int a4, int a5)
{
  uint64_t v28 = a3;
  int v26 = a5;
  int v27 = a4;
  uint64_t result = a1 + 136;
  v25[0] = &v28;
  v25[1] = &v26;
  uint64_t v25[2] = &v27;
  switch(a4)
  {
    case 4:
      uint64_t v8 = sub_2225C3C70(result);
      sub_2225C3D00((int)v22, a2);
      uint64_t v9 = sub_2226C7A4C((uint64_t)v25, 0);
      uint64_t v11 = v10;
      uint64_t v12 = sub_2226C7A4C((uint64_t)v25, 1);
      uint64_t v14 = v13;
      uint64_t v15 = sub_2226C7A4C((uint64_t)v25, 2);
      uint64_t v17 = v16;
      uint64_t v18 = sub_2226C7A4C((uint64_t)v25, 3);
      return sub_222682800(v8, v22[0], v22[1], v9, v11, v12, v14, v20, v15, v17, v18, v19);
    case 3:
      uint64_t v21 = sub_2225C3C70(result);
      sub_2225C3D00((int)v23, a2);
      sub_2226C7A4C((uint64_t)v25, 0);
      sub_2226C7A4C((uint64_t)v25, 1);
      sub_2226C7A4C((uint64_t)v25, 2);
      return sub_222682754(v21, v23[0], v23[1]);
    case 2:
      uint64_t v7 = sub_2225C3C70(result);
      sub_2225C3D00((int)v24, a2);
      sub_2226C7A4C((uint64_t)v25, 0);
      sub_2226C7A4C((uint64_t)v25, 1);
      return sub_222682634(v7, v24[0], v24[1]);
  }
  return result;
}

uint64_t sub_2226C7A4C(uint64_t a1, int a2)
{
  sub_2225C3D0C(&v3, **(void **)a1 + 4 * (**(_DWORD **)(a1 + 8) * a2), **(unsigned int **)(a1 + 16));
  return v3;
}

uint64_t fosl_getSpecializedUniforms(uint64_t a1, _DWORD *a2)
{
  uint64_t v4 = (uint64_t *)(a1 + 200);
  sub_2225F3530((uint64_t *)(a1 + 200));
  uint64_t v5 = sub_2225C3C70(a1 + 136);
  sub_2226828BC(v5, v12);
  uint64_t v11 = sub_2225D2E88(v12);
  uint64_t v10 = sub_2225D24C8((uint64_t)v12);
  while (sub_2225D0DF0((uint64_t)&v11, (uint64_t)&v10))
  {
    long long v9 = *(_OWORD *)sub_2225C3C70((uint64_t)&v11);
    uint64_t v8 = sub_2225C3C70((uint64_t)&v9);
    sub_22268CDE0(v4, (uint64_t)&v8);
    sub_22263C54C(&v11);
  }
  sub_2225D35B8(v12);
  *a2 = sub_2225D4970(v4);
  return sub_2225F3960(v4, v6);
}

uint64_t fosl_getUsedUniforms(uint64_t a1, _DWORD *a2)
{
  uint64_t v4 = sub_2225C3C70(a1 + 128);
  uint64_t v5 = (uint64_t *)(a1 + 176);
  sub_2225F3530(v5);
  uint64_t v7 = sub_2225CBA80(v4 + 40, v6);
  uint64_t v8 = sub_2225C3D04(v7);
  v20[0] = sub_2226ABDF8(v8);
  v20[1] = v9;
  uint64_t v10 = (uint64_t *)sub_2225C3C70((uint64_t)v20);
  uint64_t v11 = sub_2225DC1A0(v20);
  if (v10 != (uint64_t *)v11)
  {
    uint64_t v12 = (uint64_t *)v11;
    do
    {
      sub_2226C7C80(*v10, v19);
      uint64_t v18 = sub_2225D2E88(v19);
      uint64_t v17 = sub_2225D24C8((uint64_t)v19);
      while (sub_2225D0DF0((uint64_t)&v18, (uint64_t)&v17))
      {
        long long v16 = *(_OWORD *)sub_2225C3C70((uint64_t)&v18);
        uint64_t v15 = sub_2225C3C70((uint64_t)&v16);
        sub_22268CDE0(v5, (uint64_t)&v15);
        sub_22263C54C(&v18);
      }
      sub_2225D35B8(v19);
      ++v10;
    }
    while (v10 != v12);
  }
  *a2 = sub_2225D4970(v5);
  return sub_2225F3960(v5, v13);
}

BOOL sub_2226C7C80@<W0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_222657F80(a1);
  sub_2225D250C(a2);
  uint64_t v10 = sub_2225D2E88((uint64_t *)(a1 + 48));
  uint64_t v9 = sub_2225D24C8(a1 + 48);
  BOOL result = sub_2225D0DF0((uint64_t)&v10, (uint64_t)&v9);
  if (result)
  {
    uint64_t v5 = a1 + 176;
    do
    {
      uint64_t v6 = *(void *)sub_2225C3C70((uint64_t)&v10);
      if (sub_2226537E0(v5, v6))
      {
        v8.n128_u64[0] = sub_222654540(v6);
        v8.n128_u64[1] = v7;
        sub_222682950(a2, &v8);
      }
      sub_2225E49B8(&v10);
      BOOL result = sub_2225D0DF0((uint64_t)&v10, (uint64_t)&v9);
    }
    while (result);
  }
  return result;
}

char *fosl_astPrint(uint64_t a1)
{
  uint64_t v2 = sub_2225C3C70(a1 + 128);
  if (!sub_2226C549C(v2, v3)) {
    return &byte_2226D1615;
  }
  sub_2225CB97C(a1 + 152, v4);
  sub_222609ACC(v19, a1 + 152);
  uint64_t v6 = sub_2225CBA80(v2 + 40, v5);
  uint64_t v7 = sub_2225C3D04(v6);
  v18[0] = sub_2226ABDF8(v7);
  v18[1] = v8;
  uint64_t v9 = (uint64_t *)sub_2225C3C70((uint64_t)v18);
  uint64_t v10 = sub_2225DC1A0(v18);
  if (v9 != (uint64_t *)v10)
  {
    uint64_t v11 = (uint64_t *)v10;
    uint64_t v12 = a1 + 136;
    do
    {
      uint64_t v13 = *v9++;
      uint64_t v14 = sub_2225C3C70(v12);
      sub_2226816C8(v14, v13);
      sub_2226532F8(v13, v19);
    }
    while (v9 != v11);
  }
  uint64_t v15 = sub_222609AD0(v19);
  uint64_t v16 = sub_2225CBED0(v15);
  sub_2225E8B2C(v19);
  return (char *)v16;
}

char *fosl_astPrintReachable(uint64_t a1)
{
  uint64_t v2 = sub_2225C3C70(a1 + 128);
  if (!sub_2226C549C(v2, v3)) {
    return &byte_2226D1615;
  }
  sub_2225CB97C(a1 + 152, v4);
  sub_222609ACC(v19, a1 + 152);
  uint64_t v6 = sub_2225CBA80(v2 + 40, v5);
  uint64_t v7 = sub_2225C3D04(v6);
  v18[0] = sub_2226ABDF8(v7);
  v18[1] = v8;
  uint64_t v9 = (uint64_t *)sub_2225C3C70((uint64_t)v18);
  uint64_t v10 = sub_2225DC1A0(v18);
  if (v9 != (uint64_t *)v10)
  {
    uint64_t v11 = (uint64_t *)v10;
    uint64_t v12 = a1 + 136;
    do
    {
      uint64_t v13 = *v9++;
      uint64_t v14 = sub_2225C3C70(v12);
      sub_2226816C8(v14, v13);
      sub_222653504(v13, (uint64_t)v19);
    }
    while (v9 != v11);
  }
  uint64_t v15 = sub_222609AD0(v19);
  uint64_t v16 = sub_2225CBED0(v15);
  sub_2225E8B2C(v19);
  return (char *)v16;
}

void *sub_2226C7F04(void *a1)
{
  uint64_t v2 = sub_2226C450C((uint64_t)a1);
  sub_2225D8FA4(v2 + 120);
  sub_222686B90(a1 + 16);
  sub_2225CCC70(a1 + 17);
  sub_2225CAD04(a1 + 19);
  sub_2225D250C(a1 + 22);
  sub_2225D250C(a1 + 25);
  sub_2225D250C(a1 + 28);
  sub_2225D250C(a1 + 31);
  return a1;
}

uint64_t sub_2226C7F6C(uint64_t a1)
{
  sub_2225D35B8(a1 + 248);
  sub_2225D54E4(a1 + 224);
  sub_2225E4E68(a1 + 200);
  sub_2225E4E68(a1 + 176);
  std::string::~string((std::string *)(a1 + 152));
  sub_2226135CC(a1 + 136);
  sub_2226C7FE0(a1 + 128);
  sub_2226AEBE8(a1 + 120);

  return sub_2226C4510(a1);
}

uint64_t *sub_2226C7FE4(uint64_t *a1)
{
  return a1;
}

void *sub_2226C8010(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = sub_2225C26A4(936);
  sub_2226510D4(v10);
  sub_2225CDDC8((uint64_t)a1, v10);
  a1[1] = a2;
  a1[2] = a3;
  sub_2226C6D10(a1 + 3, a4);
  uint64_t v12 = sub_2225CBA80((uint64_t)a1, v11);
  uint64_t v13 = a1[2];
  sub_2225CDDCC(v16, a5);
  sub_2226C4204(v12, a2, v13, (uint64_t)v16, (uint64_t)(a1 + 5));
  sub_2225CDC18(v16);
  sub_22260826C(a1 + 6);
  sub_2225DF1DC((uint64_t)(a1 + 5), v14);
  return a1;
}

uint64_t sub_2226C80DC(uint64_t a1, uint64_t a2)
{
  nullsub_1(a1, a2);
  uint64_t v4 = sub_2225D5844(a1);
  uint64_t v5 = (uint64_t *)sub_2225D5844(a2);
  sub_2226C8148(v4, v5);
  sub_2225D5844(a1);

  return sub_2225D5844(a2);
}

uint64_t sub_2226C8148(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = 2 * sub_2225D64E8(((uint64_t)a2 - a1) >> 3);

  return sub_2226C8198(a1, a2, v4, 1);
}

uint64_t sub_2226C8198(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v7 = (char **)a2;
  uint64_t v8 = (uint64_t *)result;
  int v27 = (uint64_t *)result;
  int v26 = a2;
LABEL_2:
  for (uint64_t i = 1 - a3; ; ++i)
  {
    uint64_t v10 = (char *)v7 - (char *)v8;
    unint64_t v11 = ((char *)v7 - (char *)v8) >> 3;
    if (!(!v5 & v4)) {
      break;
    }
    if (v10 <= 191)
    {
      if (a4) {
        return sub_2226C84D8((uint64_t)v8, (uint64_t)v7);
      }
      else {
        return sub_2226C85D8((uint64_t)v8, v7);
      }
    }
    if (i == 1) {
      return sub_2226C86B8(v8, (uint64_t *)v7, (uint64_t)v7);
    }
    unint64_t v12 = v11 >> 1;
    uint64_t v13 = (uint64_t *)(v7 - 1);
    if ((unint64_t)v10 >= 0x401)
    {
      sub_2226C874C(v8, &v8[v11 >> 1], v13);
      uint64_t v14 = 8 * v12 - 8;
      uint64_t v15 = v26;
      sub_2226C874C(v27 + 1, (uint64_t *)((char *)v27 + v14), v26 - 2);
      uint64_t v16 = 8 * v12 + 8;
      sub_2226C874C(v27 + 2, (uint64_t *)((char *)v27 + v16), v15 - 3);
      sub_2226C874C((uint64_t *)((char *)v27 + v14), &v27[v12], (uint64_t *)((char *)v27 + v16));
      uint64_t v23 = &v27[v12];
      sub_2226C6870(&v27, &v23);
      if (a4) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_2226C874C(&v8[v11 >> 1], v8, v13);
      if (a4)
      {
LABEL_14:
        uint64_t v7 = (char **)v26;
        goto LABEL_15;
      }
    }
    sub_2225C3D00((int)v22, (char *)*(v27 - 1));
    sub_2225C3D00((int)v21, (char *)*v27);
    char v17 = sub_2226C8474(v22[0], v22[1], v21[0], (unint64_t)v21[1]);
    uint64_t v7 = (char **)v26;
    if ((v17 & 1) == 0)
    {
      BOOL result = (uint64_t)sub_2226C8894(v27, v26);
      uint64_t v8 = (uint64_t *)result;
LABEL_23:
      a4 = 0;
      int v27 = v8;
      a3 = -i;
      goto LABEL_2;
    }
LABEL_15:
    uint64_t v18 = (uint64_t *)sub_2226C8A7C(v27, (uint64_t *)v7);
    if ((v19 & 1) == 0) {
      goto LABEL_22;
    }
    BOOL v20 = sub_2226C8C38(v27, v18);
    uint64_t v8 = v18 + 1;
    BOOL result = sub_2226C8C38(v18 + 1, (uint64_t *)v7);
    if (result)
    {
      if (v20) {
        return result;
      }
      int v26 = v18;
      uint64_t v8 = v27;
      uint64_t v7 = (char **)v18;
    }
    else
    {
      if (!v20)
      {
LABEL_22:
        BOOL result = sub_2226C8198(v27, v18, -i, a4 & 1);
        uint64_t v8 = v18 + 1;
        goto LABEL_23;
      }
      int v27 = v18 + 1;
    }
  }
  switch(v11)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      int v26 = (uint64_t *)(v7 - 1);
      sub_2225C3D00((int)v25, *(v7 - 1));
      sub_2225C3D00((int)v24, (char *)*v27);
      BOOL result = sub_2226C8474(v25[0], v25[1], v24[0], (unint64_t)v24[1]);
      if (result) {
        BOOL result = (uint64_t)sub_2226C6870(&v27, &v26);
      }
      break;
    case 3uLL:
      int v26 = (uint64_t *)(v7 - 1);
      BOOL result = (uint64_t)sub_2226C84CC(v8, v8 + 1, (uint64_t *)v7 - 1);
      break;
    case 4uLL:
      int v26 = (uint64_t *)(v7 - 1);
      BOOL result = sub_2226C84D0(v8, v8 + 1, v8 + 2, v7 - 1);
      break;
    case 5uLL:
      int v26 = (uint64_t *)(v7 - 1);
      BOOL result = sub_2226C84D4(v8, v8 + 1, v8 + 2, v8 + 3, v7 - 1);
      break;
    default:
      JUMPOUT(0);
  }
  return result;
}

uint64_t sub_2226C8474(uint64_t a1, uint64_t a2, char *a3, unint64_t a4)
{
  v8[0] = a1;
  v8[1] = a2;
  unsigned int v6 = sub_2225D81FC((uint64_t)v8, a3, a4);
  if (!v6) {
    unsigned int v6 = sub_2225E2A64((uint64_t)v8, a3, a4);
  }
  return v6 >> 31;
}

uint64_t sub_2226C84D8(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    v16[5] = v2;
    unsigned int v16[6] = v3;
    char v5 = (char **)result;
    v16[0] = result + 8;
    if (result + 8 != a2)
    {
      unsigned int v6 = (char **)result;
      do
      {
        sub_2225C3D00((int)v15, v6[1]);
        sub_2225C3D00((int)v14, *v6);
        BOOL result = sub_2226C8474(v15[0], v15[1], v14[0], (unint64_t)v14[1]);
        if (result)
        {
          uint64_t v9 = *(char **)sub_2225D74A4((uint64_t)v16, v7);
          uint64_t v13 = v6;
          uint64_t v10 = (char **)v16[0];
          while (1)
          {
            BOOL result = sub_2225D74A4((uint64_t)&v13, v8);
            uint64_t *v10 = *(char **)result;
            uint64_t v10 = v13;
            if (v13 == v5) {
              break;
            }
            sub_2225C3D00((int)v12, v9);
            sub_2225C3D00((int)v11, *--v13);
            BOOL result = sub_2226C8474(v12[0], v12[1], v11[0], (unint64_t)v11[1]);
            if ((result & 1) == 0) {
              goto LABEL_10;
            }
          }
          uint64_t v10 = v5;
LABEL_10:
          uint64_t *v10 = v9;
        }
        unsigned int v6 = (char **)v16[0];
        v16[0] += 8;
      }
      while (v16[0] != a2);
    }
  }
  return result;
}

uint64_t sub_2226C85D8(uint64_t result, char **a2)
{
  if ((char **)result != a2)
  {
    uint64_t v15[5] = v2;
    uint64_t v15[6] = v3;
    for (uint64_t i = (char **)result; ; uint64_t i = (char **)v15[0])
    {
      v15[0] = i + 1;
      if (i + 1 == a2) {
        break;
      }
      sub_2225C3D00((int)v14, i[1]);
      sub_2225C3D00((int)v13, *i);
      BOOL result = sub_2226C8474(v14[0], v14[1], v13[0], (unint64_t)v13[1]);
      if (result)
      {
        uint64_t v8 = *(char **)sub_2225D74A4((uint64_t)v15, v6);
        unint64_t v12 = i;
        uint64_t v9 = (char **)v15[0];
        do
        {
          *uint64_t v9 = *(char **)sub_2225D74A4((uint64_t)&v12, v7);
          uint64_t v9 = v12;
          sub_2225C3D00((int)v11, v8);
          sub_2225C3D00((int)v10, *--v12);
          BOOL result = sub_2226C8474(v11[0], v11[1], v10[0], (unint64_t)v10[1]);
        }
        while ((result & 1) != 0);
        *uint64_t v9 = v8;
      }
    }
  }
  return result;
}

uint64_t sub_2226C86B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 == a2)
  {
    return sub_2225D74CC((uint64_t)a1, a3);
  }
  else
  {
    nullsub_1(a1, a3);
    sub_2226C9060(a1, a2, a3);
    return nullsub_1(a2, a3);
  }
}

uint64_t *sub_2226C874C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v21 = (char **)a2;
  uint64_t v22 = (char **)a1;
  BOOL v20 = (char **)a3;
  sub_2225C3D00((int)v19, (char *)*a2);
  sub_2225C3D00((int)v18, (char *)*a1);
  char v5 = sub_2226C8474(v19[0], v19[1], v18[0], (unint64_t)v18[1]);
  uint64_t v6 = (char *)*a3;
  if (v5)
  {
    sub_2225C3D00((int)v13, v6);
    sub_2225C3D00((int)v12, *v21);
    if (sub_2226C8474(v13[0], v13[1], v12[0], (unint64_t)v12[1]))
    {
      uint64_t v7 = &v22;
    }
    else
    {
      sub_2226C6870((uint64_t **)&v22, (uint64_t **)&v21);
      sub_2225C3D00((int)v11, *v20);
      sub_2225C3D00((int)v10, *v21);
      BOOL result = (uint64_t *)sub_2226C8474(v11[0], v11[1], v10[0], (unint64_t)v10[1]);
      if (!result) {
        return result;
      }
      uint64_t v7 = &v21;
    }
    uint64_t v9 = &v20;
    return sub_2226C6870((uint64_t **)v7, (uint64_t **)v9);
  }
  sub_2225C3D00((int)v17, v6);
  sub_2225C3D00((int)v16, *v21);
  BOOL result = (uint64_t *)sub_2226C8474(v17[0], v17[1], v16[0], (unint64_t)v16[1]);
  if (result)
  {
    sub_2226C6870((uint64_t **)&v21, (uint64_t **)&v20);
    sub_2225C3D00((int)v15, *v21);
    sub_2225C3D00((int)v14, *v22);
    BOOL result = (uint64_t *)sub_2226C8474(v15[0], v15[1], v14[0], (unint64_t)v14[1]);
    if (result)
    {
      uint64_t v7 = &v22;
      uint64_t v9 = &v21;
      return sub_2226C6870((uint64_t **)v7, (uint64_t **)v9);
    }
  }
  return result;
}

char **sub_2226C8894(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = (unint64_t)a2;
  uint64_t v3 = (char **)a1;
  uint64_t v23 = (char **)a2;
  uint64_t v24 = (char **)a1;
  char v4 = *(char **)sub_2225D74A4((uint64_t)&v24, (uint64_t)a2);
  sub_2225C3D00((int)v22, v4);
  sub_2225C3D00((int)v21, *(char **)(v2 - 8));
  if (sub_2226C8474(v22[0], v22[1], v21[0], (unint64_t)v21[1]))
  {
    do
    {
      ++v24;
      sub_2225C3D00((int)v20, v4);
      sub_2225C3D00((int)v19, *v24);
    }
    while ((sub_2226C8474(v20[0], v20[1], v19[0], (unint64_t)v19[1]) & 1) == 0);
  }
  else
  {
    do
    {
      if ((unint64_t)++v24 >= v2) {
        break;
      }
      sub_2225C3D00((int)v18, v4);
      sub_2225C3D00((int)v17, *v24);
    }
    while (!sub_2226C8474(v18[0], v18[1], v17[0], (unint64_t)v17[1]));
  }
  uint64_t v6 = v24;
  if ((unint64_t)v24 < v2)
  {
    uint64_t v7 = (uint64_t *)(v2 - 8);
    do
    {
      uint64_t v23 = (char **)v7;
      sub_2225C3D00((int)v16, v4);
      uint64_t v8 = (char *)*v7--;
      sub_2225C3D00((int)v15, v8);
    }
    while ((sub_2226C8474(v16[0], v16[1], v15[0], (unint64_t)v15[1]) & 1) != 0);
    uint64_t v6 = v24;
    unint64_t v2 = (unint64_t)(v7 + 1);
  }
  if ((unint64_t)v6 < v2)
  {
    do
    {
      sub_2226C6870((uint64_t **)&v24, (uint64_t **)&v23);
      do
      {
        ++v24;
        sub_2225C3D00((int)v14, v4);
        sub_2225C3D00((int)v13, *v24);
      }
      while (!sub_2226C8474(v14[0], v14[1], v13[0], (unint64_t)v13[1]));
      do
      {
        --v23;
        sub_2225C3D00((int)v12, v4);
        sub_2225C3D00((int)v11, *v23);
      }
      while ((sub_2226C8474(v12[0], v12[1], v11[0], (unint64_t)v11[1]) & 1) != 0);
      uint64_t v6 = v24;
    }
    while (v24 < v23);
  }
  uint64_t v10 = v6 - 1;
  if (v6 - 1 != v3)
  {
    *uint64_t v3 = *(char **)sub_2225D74A4((uint64_t)&v10, v5);
    uint64_t v3 = v10;
  }
  *uint64_t v3 = v4;
  return v24;
}

uint64_t sub_2226C8A7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1;
  int v26 = a2;
  int v27 = a1;
  char v4 = *(char **)sub_2225D74A4((uint64_t)&v27, (uint64_t)a2);
  do
  {
    uint64_t v5 = (char *)v27[1];
    ++v27;
    sub_2225C3D00((int)v25, v5);
    sub_2225C3D00((int)v24, v4);
  }
  while ((sub_2226C8474(v25[0], v25[1], v24[0], (unint64_t)v24[1]) & 1) != 0);
  uint64_t v7 = a2 - 1;
  if (v27 - 1 == v3)
  {
    while (1)
    {
      unint64_t v9 = (unint64_t)(v7 + 1);
      if (v27 >= v7 + 1) {
        break;
      }
      int v26 = v7;
      uint64_t v10 = (char *)*v7--;
      sub_2225C3D00((int)v23, v10);
      sub_2225C3D00((int)v22, v4);
      if (sub_2226C8474(v23[0], v23[1], v22[0], (unint64_t)v22[1])) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    do
    {
      int v26 = v7;
      uint64_t v8 = (char *)*v7--;
      sub_2225C3D00((int)v21, v8);
      sub_2225C3D00((int)v20, v4);
    }
    while ((sub_2226C8474(v21[0], v21[1], v20[0], (unint64_t)v20[1]) & 1) == 0);
LABEL_8:
    unint64_t v9 = (unint64_t)(v7 + 1);
  }
  unint64_t v11 = v27;
  BOOL v19 = (unint64_t)v27 >= v9;
  if ((unint64_t)v27 < v9)
  {
    do
    {
      sub_2226C6870(&v27, &v26);
      do
      {
        unint64_t v12 = (char *)v27[1];
        ++v27;
        sub_2225C3D00((int)v18, v12);
        sub_2225C3D00((int)v17, v4);
      }
      while ((sub_2226C8474(v18[0], v18[1], v17[0], (unint64_t)v17[1]) & 1) != 0);
      do
      {
        sub_2225C3D00((int)v16, (char *)*--v26);
        sub_2225C3D00((int)v15, v4);
      }
      while (!sub_2226C8474(v16[0], v16[1], v15[0], (unint64_t)v15[1]));
      unint64_t v11 = v27;
    }
    while (v27 < v26);
  }
  uint64_t v14 = v11 - 1;
  if (v11 - 1 != v3)
  {
    *uint64_t v3 = *(void *)sub_2225D74A4((uint64_t)&v14, v6);
    uint64_t v3 = v14;
  }
  *uint64_t v3 = (uint64_t)v4;
  return sub_2225D7AF8((uint64_t)&v14, (uint64_t)&v19);
}

BOOL sub_2226C8C38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v24 = a1;
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v7 = a2 - 1;
      uint64_t v6 = (char *)*(a2 - 1);
      uint64_t v23 = v7;
      sub_2225C3D00((int)v22, v6);
      sub_2225C3D00((int)v21, (char *)*a1);
      if (sub_2226C8474(v22[0], v22[1], v21[0], (unint64_t)v21[1])) {
        sub_2226C6870(&v24, &v23);
      }
      return 1;
    case 3:
      sub_2226C84CC(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_2226C84D0(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      sub_2226C84D4(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      uint64_t v8 = (char **)(a1 + 2);
      sub_2226C84CC(a1, a1 + 1, a1 + 2);
      unint64_t v9 = (char **)(a1 + 3);
      BOOL v20 = (char **)(a1 + 3);
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      break;
  }
  while (1)
  {
    sub_2225C3D00((int)v19, *v9);
    sub_2225C3D00((int)v18, *v8);
    if (sub_2226C8474(v19[0], v19[1], v18[0], (unint64_t)v18[1]))
    {
      uint64_t v13 = *(char **)sub_2225D74A4((uint64_t)&v20, v11);
      char v17 = v8;
      uint64_t v14 = v20;
      while (1)
      {
        void *v14 = *(void *)sub_2225D74A4((uint64_t)&v17, v12);
        uint64_t v14 = v17;
        if (v17 == (char **)a1) {
          break;
        }
        sub_2225C3D00((int)v16, v13);
        sub_2225C3D00((int)v15, *--v17);
        if ((sub_2226C8474(v16[0], v16[1], v15[0], (unint64_t)v15[1]) & 1) == 0) {
          goto LABEL_12;
        }
      }
      uint64_t v14 = a1;
LABEL_12:
      void *v14 = v13;
      if (++v10 == 8) {
        return v20 + 1 == (char **)a2;
      }
    }
    uint64_t v8 = v20;
    unint64_t v9 = v20 + 1;
    BOOL v20 = v9;
    if (v9 == (char **)a2) {
      return 1;
    }
  }
}

uint64_t *sub_2226C8E40(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  char v17 = (char **)a2;
  uint64_t v18 = a1;
  uint64_t v15 = a4;
  uint64_t v16 = (char **)a3;
  sub_2226C874C(a1, a2, a3);
  sub_2225C3D00((int)v14, (char *)*a4);
  sub_2225C3D00((int)v13, (char *)*a3);
  BOOL result = (uint64_t *)sub_2226C8474(v14[0], v14[1], v13[0], (unint64_t)v13[1]);
  if (result)
  {
    sub_2226C6870((uint64_t **)&v16, &v15);
    sub_2225C3D00((int)v12, *v16);
    sub_2225C3D00((int)v11, (char *)*a2);
    BOOL result = (uint64_t *)sub_2226C8474(v12[0], v12[1], v11[0], (unint64_t)v11[1]);
    if (result)
    {
      sub_2226C6870((uint64_t **)&v17, (uint64_t **)&v16);
      sub_2225C3D00((int)v10, *v17);
      sub_2225C3D00((int)v9, (char *)*a1);
      BOOL result = (uint64_t *)sub_2226C8474(v10[0], v10[1], v9[0], (unint64_t)v9[1]);
      if (result) {
        return sub_2226C6870(&v18, (uint64_t **)&v17);
      }
    }
  }
  return result;
}

uint64_t *sub_2226C8F2C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v22 = (char **)a2;
  uint64_t v23 = a1;
  BOOL v20 = (char **)a4;
  uint64_t v21 = (char **)a3;
  BOOL v19 = a5;
  sub_2226C8E40(a1, a2, a3, a4);
  sub_2225C3D00((int)v18, (char *)*a5);
  sub_2225C3D00((int)v17, (char *)*a4);
  BOOL result = (uint64_t *)sub_2226C8474(v18[0], v18[1], v17[0], (unint64_t)v17[1]);
  if (result)
  {
    sub_2226C6870((uint64_t **)&v20, &v19);
    sub_2225C3D00((int)v16, *v20);
    sub_2225C3D00((int)v15, (char *)*a3);
    BOOL result = (uint64_t *)sub_2226C8474(v16[0], v16[1], v15[0], (unint64_t)v15[1]);
    if (result)
    {
      sub_2226C6870((uint64_t **)&v21, (uint64_t **)&v20);
      sub_2225C3D00((int)v14, *v21);
      sub_2225C3D00((int)v13, (char *)*a2);
      BOOL result = (uint64_t *)sub_2226C8474(v14[0], v14[1], v13[0], (unint64_t)v13[1]);
      if (result)
      {
        sub_2226C6870((uint64_t **)&v22, (uint64_t **)&v21);
        sub_2225C3D00((int)v12, *v22);
        sub_2225C3D00((int)v11, (char *)*a1);
        BOOL result = (uint64_t *)sub_2226C8474(v12[0], v12[1], v11[0], (unint64_t)v11[1]);
        if (result) {
          return sub_2226C6870(&v23, (uint64_t **)&v22);
        }
      }
    }
  }
  return result;
}

uint64_t *sub_2226C9060(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (char **)a1;
  uint64_t v12 = (char **)a1;
  if (a1 == a2)
  {
    return (uint64_t *)sub_2225D74CC((uint64_t)a1, a3);
  }
  else
  {
    sub_2226C9160((uint64_t)a1, (uint64_t)a2);
    uint64_t v11 = a2;
    if (a2 != (uint64_t *)a3)
    {
      uint64_t v6 = ((char *)a2 - (char *)v4) >> 3;
      uint64_t v7 = (char **)a2;
      do
      {
        sub_2225C3D00((int)v10, *v7);
        sub_2225C3D00((int)v9, *v12);
        if (sub_2226C8474(v10[0], v10[1], v9[0], (unint64_t)v9[1]))
        {
          sub_2226C6870(&v11, (uint64_t **)&v12);
          sub_2226C91C8((uint64_t)v12, v6, v12);
        }
        uint64_t v7 = (char **)(v11 + 1);
        uint64_t v11 = (uint64_t *)v7;
      }
      while (v7 != (char **)a3);
      uint64_t v4 = v12;
    }
    sub_2226C9368(v4, (uint64_t)a2);
    return v11;
  }
}

uint64_t sub_2226C9160(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (a2 - result >= 9)
  {
    uint64_t v3 = result;
    uint64_t v4 = v2 >> 3;
    unint64_t v5 = (unint64_t)((v2 >> 3) - 2) >> 1;
    unint64_t v6 = v5 + 1;
    uint64_t v7 = (char **)(result + 8 * v5);
    do
    {
      BOOL result = sub_2226C91C8(v3, v4, v7--);
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_2226C91C8(uint64_t result, uint64_t a2, char **a3)
{
  uint64_t v29 = a3;
  unint64_t v3 = a2 - 2;
  if (a2 >= 2)
  {
    uint64_t v5 = result;
    uint64_t v6 = v3 >> 1;
    if ((uint64_t)(v3 >> 1) >= ((uint64_t)a3 - result) >> 3)
    {
      uint64_t v8 = ((uint64_t)a3 - result) >> 2;
      uint64_t v9 = v8 + 1;
      int v10 = (char **)(result + 8 * (v8 + 1));
      uint64_t v28 = v10;
      uint64_t v11 = v8 + 2;
      if (v8 + 2 < a2)
      {
        sub_2225C3D00((int)v27, *v10);
        sub_2225C3D00((int)v26, v10[1]);
        if (sub_2226C8474(v27[0], v27[1], v26[0], (unint64_t)v26[1]))
        {
          uint64_t v28 = ++v10;
          uint64_t v9 = v11;
        }
      }
      sub_2225C3D00((int)v25, *v10);
      sub_2225C3D00((int)v24, *a3);
      BOOL result = sub_2226C8474(v25[0], v25[1], v24[0], (unint64_t)v24[1]);
      if ((result & 1) == 0)
      {
        uint64_t v14 = *(char **)sub_2225D74A4((uint64_t)&v29, v12);
        while (1)
        {
          BOOL result = sub_2225D74A4((uint64_t)&v28, v13);
          *uint64_t v29 = *(char **)result;
          uint64_t v15 = v28;
          uint64_t v29 = v28;
          if (v6 < v9) {
            break;
          }
          uint64_t v16 = 2 * v9;
          uint64_t v9 = (2 * v9) | 1;
          char v17 = (char **)(v5 + 8 * v9);
          uint64_t v28 = v17;
          uint64_t v18 = v16 + 2;
          if (v16 + 2 < a2)
          {
            sub_2225C3D00((int)v23, *v17);
            sub_2225C3D00((int)v22, v28[1]);
            int v19 = sub_2226C8474(v23[0], v23[1], v22[0], (unint64_t)v22[1]);
            char v17 = v28;
            if (v19)
            {
              char v17 = ++v28;
              uint64_t v9 = v18;
            }
          }
          sub_2225C3D00((int)v21, *v17);
          sub_2225C3D00((int)v20, v14);
          BOOL result = sub_2226C8474(v21[0], v21[1], v20[0], (unint64_t)v20[1]);
          if (result)
          {
            uint64_t v15 = v29;
            break;
          }
        }
        *uint64_t v15 = v14;
      }
    }
  }
  return result;
}

char **sub_2226C9368(char **result, uint64_t a2)
{
  if (a2 - (uint64_t)result >= 9)
  {
    uint64_t v2 = a2;
    unint64_t v3 = result;
    unint64_t v4 = (unint64_t)(a2 - (void)result) >> 3;
    do
    {
      BOOL result = sub_2226C93CC(v3, v2, v4);
      v2 -= 8;
    }
    while (v4-- > 2);
  }
  return result;
}

char **sub_2226C93CC(char **a1, uint64_t a2, uint64_t a3)
{
  int v10 = a1;
  uint64_t v5 = *(char **)sub_2225D74A4((uint64_t)&v10, a2);
  BOOL result = sub_2226C9464(v10, a3);
  uint64_t v8 = result;
  uint64_t v9 = (char **)(a2 - 8);
  if (result == (char **)(a2 - 8))
  {
    *BOOL result = v5;
  }
  else
  {
    *BOOL result = *(char **)sub_2225D74A4((uint64_t)&v9, v7);
    *uint64_t v9 = v5;
    return (char **)sub_2226C9530((uint64_t)v10, (uint64_t)(v8 + 1), v8 + 1 - v10);
  }
  return result;
}

char **sub_2226C9464(char **a1, uint64_t a2)
{
  uint64_t v4 = 0;
  int64_t v5 = (unint64_t)(a2 - 2) >> 1;
  do
  {
    uint64_t v6 = &a1[v4 + 1];
    uint64_t v12 = v6;
    uint64_t v7 = 2 * v4;
    uint64_t v4 = (2 * v4) | 1;
    uint64_t v8 = v7 + 2;
    if (v7 + 2 < a2)
    {
      sub_2225C3D00((int)v11, *v6);
      sub_2225C3D00((int)v10, v12[1]);
      if (sub_2226C8474(v11[0], v11[1], v10[0], (unint64_t)v10[1]))
      {
        ++v12;
        uint64_t v4 = v8;
      }
    }
    *a1 = *(char **)sub_2225D74A4((uint64_t)&v12, a2);
    a1 = v12;
  }
  while (v4 <= v5);
  return v12;
}

uint64_t sub_2226C9530(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a3 - 2;
  if (a3 >= 2)
  {
    v19[5] = v3;
    uint64_t v19[6] = v4;
    uint64_t v7 = result;
    unint64_t v8 = v5 >> 1;
    uint64_t v18 = (char **)(result + 8 * (v5 >> 1));
    sub_2225C3D00((int)v17, *v18);
    uint64_t v9 = *(char **)(a2 - 8);
    v19[0] = a2 - 8;
    sub_2225C3D00((int)v16, v9);
    BOOL result = sub_2226C8474(v17[0], v17[1], v16[0], (unint64_t)v16[1]);
    if (result)
    {
      uint64_t v12 = *(char **)sub_2225D74A4((uint64_t)v19, v10);
      while (1)
      {
        BOOL result = sub_2225D74A4((uint64_t)&v18, v11);
        *(void *)v19[0] = *(void *)result;
        uint64_t v13 = v18;
        v19[0] = v18;
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v18 = (char **)(v7 + 8 * v8);
        sub_2225C3D00((int)v15, *v18);
        sub_2225C3D00((int)v14, v12);
        BOOL result = sub_2226C8474(v15[0], v15[1], v14[0], (unint64_t)v14[1]);
        if ((result & 1) == 0)
        {
          uint64_t v13 = (char **)v19[0];
          break;
        }
      }
      *uint64_t v13 = v12;
    }
  }
  return result;
}

void *sub_2226C9614(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  if (v3) {
    sub_2225F9868();
  }
  return a1;
}

void sub_2226C9648(uint64_t a1)
{
  uint64_t v1 = (void *)sub_2226C54DC(a1);

  j__free(v1);
}

void sub_2226C9670()
{
  sub_2225D24D4(6);
  uint64_t v0 = (const std::error_code *)usleep(0x3E8u);
  __break(1u);
  std::error_code::message(v1, v0);
}

std::string *__cdecl std::error_code::message(std::string *__return_ptr retstr, const std::error_code *this)
{
  return (std::string *)MEMORY[0x270F98210](retstr, this);
}

int std::string::compare(const std::string *this, std::string::size_type __pos1, std::string::size_type __n1, const std::string::value_type *__s, std::string::size_type __n2)
{
  return MEMORY[0x270F98258](this, __pos1, __n1, __s, __n2);
}

std::string *__cdecl std::string::erase(std::string *this, std::string::size_type __pos, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x270F98480](this, __pos, __n);
}

void std::string::__init(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
}

void std::string::__init(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F98498](this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x270F984A0](this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F984B8](this, __s);
}

std::string::iterator std::string::insert(std::string *this, std::string::const_iterator __pos, std::string::value_type __c)
{
  return (std::string::iterator)MEMORY[0x270F984D8](this, __pos.__i_, __c);
}

std::string *__cdecl std::string::insert(std::string *this, std::string::size_type __pos, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F984E0](this, __pos, __s);
}

void std::string::resize(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
}

std::string *__cdecl std::string::replace(std::string *this, std::string::size_type __pos, std::string::size_type __n1, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F98500](this, __pos, __n1, __s);
}

void std::string::reserve(std::string *this, std::string::size_type __requested_capacity)
{
}

void std::string::__grow_by(std::string *this, std::string::size_type __old_cap, std::string::size_type __delta_cap, std::string::size_type __old_sz, std::string::size_type __n_copy, std::string::size_type __n_del, std::string::size_type __n_add)
{
}

void std::string::push_back(std::string *this, std::string::value_type __c)
{
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x270F98530](this, __str);
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return (std::string *)MEMORY[0x270F98538](this, __str, __pos, __n, __a);
}

void std::string::~string(std::string *this)
{
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x270F98560](this, __str);
}

uint64_t std::ostream::operator<<()
{
  return MEMORY[0x270F98790]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x270F988A8]();
}

const std::error_category *std::system_category(void)
{
  return (const std::error_category *)MEMORY[0x270F98910]();
}

const std::error_category *std::generic_category(void)
{
  return (const std::error_category *)MEMORY[0x270F98918]();
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
}

void std::__shared_weak_count::~__shared_weak_count(std::__shared_weak_count *this)
{
}

void std::__libcpp_verbose_abort(const char *__format, ...)
{
}

double std::stod(const std::string *__str, size_t *__idx)
{
  MEMORY[0x270F98B68](__str, __idx);
  return result;
}

float std::stof(const std::string *__str, size_t *__idx)
{
  MEMORY[0x270F98B70](__str, __idx);
  return result;
}

int std::stoi(const std::string *__str, size_t *__idx, int __base)
{
  return MEMORY[0x270F98B78](__str, __idx, *(void *)&__base);
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x270F98DE8]();
}

uint64_t std::operator+<char>()
{
  return MEMORY[0x270F98E38]();
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return MEMORY[0x270ED7DA0](lpfunc, obj, lpdso_handle);
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x270F98F10](a1);
}

void __cxa_guard_release(__guard *a1)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x270ED7DC0]();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return MEMORY[0x270ED7E28](*(void *)&a1, a2);
}

void _tlv_atexit(void (__cdecl *termFunc)(void *), void *objAddr)
{
}

int access(const char *a1, int a2)
{
  return MEMORY[0x270ED8480](a1, *(void *)&a2);
}

float acosf(float a1)
{
  MEMORY[0x270ED8598](a1);
  return result;
}

float acoshf(float a1)
{
  MEMORY[0x270ED85A8](a1);
  return result;
}

char *__cdecl asctime(const tm *a1)
{
  return (char *)MEMORY[0x270ED8600](a1);
}

float asinf(float a1)
{
  MEMORY[0x270ED8618](a1);
  return result;
}

float asinhf(float a1)
{
  MEMORY[0x270ED8628](a1);
  return result;
}

float atanf(float a1)
{
  MEMORY[0x270ED86C0](a1);
  return result;
}

float atanhf(float a1)
{
  MEMORY[0x270ED86D0](a1);
  return result;
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return MEMORY[0x270ED8F18](*(void *)&a1);
}

int closedir(DIR *a1)
{
  return MEMORY[0x270ED8F30](a1);
}

float cosf(float a1)
{
  MEMORY[0x270ED9130](a1);
  return result;
}

float coshf(float a1)
{
  MEMORY[0x270ED9140](a1);
  return result;
}

int del_curterm(TERMINAL *a1)
{
  return MEMORY[0x270F9A0C0](a1);
}

void exit(int a1)
{
}

float exp2f(float a1)
{
  MEMORY[0x270ED9868](a1);
  return result;
}

float expf(float a1)
{
  MEMORY[0x270ED9870](a1);
  return result;
}

float fmodf(float a1, float a2)
{
  MEMORY[0x270ED99D8](a1, a2);
  return result;
}

void free(void *a1)
{
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x270ED9AF0](*(void *)&a1, a2);
}

int ftruncate(int a1, off_t a2)
{
  return MEMORY[0x270ED9B30](*(void *)&a1, a2);
}

int getpagesize(void)
{
  return MEMORY[0x270ED9CC8]();
}

pid_t getpid(void)
{
  return MEMORY[0x270ED9CE0]();
}

int getrusage(int a1, rusage *a2)
{
  return MEMORY[0x270ED9D50](*(void *)&a1, a2);
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x270ED9D98](a1, a2);
}

int isalnum(int _c)
{
  return MEMORY[0x270ED9EE0](*(void *)&_c);
}

int isalpha(int _c)
{
  return MEMORY[0x270ED9EE8](*(void *)&_c);
}

int isatty(int a1)
{
  return MEMORY[0x270ED9EF0](*(void *)&a1);
}

int islower(int _c)
{
  return MEMORY[0x270ED9F00](*(void *)&_c);
}

int isupper(int _c)
{
  return MEMORY[0x270ED9F28](*(void *)&_c);
}

tm *__cdecl localtime(const time_t *a1)
{
  return (tm *)MEMORY[0x270EDA098](a1);
}

float log2f(float a1)
{
  MEMORY[0x270EDA0E0](a1);
  return result;
}

float logf(float a1)
{
  MEMORY[0x270EDA0F8](a1);
  return result;
}

off_t lseek(int a1, off_t a2, int a3)
{
  return MEMORY[0x270EDA118](*(void *)&a1, a2, *(void *)&a3);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA388](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA3A0](ptr, size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return (void *)MEMORY[0x270EDA458](__s, *(void *)&__c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

void *__cdecl mmap(void *a1, size_t a2, int a3, int a4, int a5, off_t a6)
{
  return (void *)MEMORY[0x270EDA598](a1, a2, *(void *)&a3, *(void *)&a4, *(void *)&a5, a6);
}

int munmap(void *a1, size_t a2)
{
  return MEMORY[0x270EDA5F8](a1, a2);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x270EDA828](a1, *(void *)&a2);
}

DIR *__cdecl opendir(const char *a1)
{
  return (DIR *)MEMORY[0x270EDA858](a1);
}

float powf(float a1, float a2)
{
  MEMORY[0x270EDAD00](a1, a2);
  return result;
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return MEMORY[0x270EDAD10](*(void *)&__fd, __buf, __nbyte, a4);
}

int pthread_kill(pthread_t a1, int a2)
{
  return MEMORY[0x270EDAF30](a1, *(void *)&a2);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF50](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x270EDAF58](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF60](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF70](a1);
}

int pthread_mutexattr_destroy(pthread_mutexattr_t *a1)
{
  return MEMORY[0x270EDAF78](a1);
}

int pthread_mutexattr_init(pthread_mutexattr_t *a1)
{
  return MEMORY[0x270EDAF80](a1);
}

int pthread_mutexattr_settype(pthread_mutexattr_t *a1, int a2)
{
  return MEMORY[0x270EDAF98](a1, *(void *)&a2);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x270EDB010]();
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return MEMORY[0x270EDB120](*(void *)&a1, a2, a3);
}

dirent *__cdecl readdir(DIR *a1)
{
  return (dirent *)MEMORY[0x270EDB128](a1);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return (char *)MEMORY[0x270EDB170](a1, a2);
}

TERMINAL *__cdecl set_curterm(TERMINAL *a1)
{
  return (TERMINAL *)MEMORY[0x270F9A0F0](a1);
}

int setupterm(char *a1, int a2, int *a3)
{
  return MEMORY[0x270F9A100](a1, *(void *)&a2, a3);
}

float sinf(float a1)
{
  MEMORY[0x270EDB4F0](a1);
  return result;
}

float sinhf(float a1)
{
  MEMORY[0x270EDB500](a1);
  return result;
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x270EDB510](__str, __size, __format);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x270EDB568](a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x270EDB5A8](__s, *(void *)&__c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x270EDB5D0](__s1);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x270EDB638](__s1, __s2, __n);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x270EDB6A0](__s1, __s2);
}

float strtof(const char *a1, char **a2)
{
  MEMORY[0x270EDB6B8](a1, a2);
  return result;
}

float tanf(float a1)
{
  MEMORY[0x270EDB818](a1);
  return result;
}

float tanhf(float a1)
{
  MEMORY[0x270EDB828](a1);
  return result;
}

int tigetnum(char *a1)
{
  return MEMORY[0x270F9A130](a1);
}

time_t time(time_t *a1)
{
  return MEMORY[0x270EDB930](a1);
}

int tolower(int _c)
{
  return MEMORY[0x270EDB960](*(void *)&_c);
}

int toupper(int _c)
{
  return MEMORY[0x270EDB968](*(void *)&_c);
}

int uname(utsname *a1)
{
  return MEMORY[0x270EDB998](a1);
}

int unlink(const char *a1)
{
  return MEMORY[0x270EDB9A8](a1);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x270EDB9E8](*(void *)&a1);
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return MEMORY[0x270EDBC30](*(void *)&__fd, __buf, __nbyte);
}